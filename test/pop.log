/* AST: After typechecking */
properties: StrandArray
function real grum (tensor[5,5] a)
{
  return |()|<$[5,5]> (a);
  }
function real grum (tensor[5] a)
{
  return |()|<$[5]> (a);
  }
strand f (int i)
{
  output real r = grum ([[(real)i, (real)i, (real)i, (real)i, (real)i], [(real)i, (real)i, (real)i, (real)i, (real)i], [(real)i, (real)i, (real)i, (real)i, (real)i], [(real)i, (real)i, (real)i, (real)i, (real)i], [(real)i, (real)i, (real)i, (real)i, (real)i]]);
  update {
    print (r);
    stabilize;
    }
  
}
grid(1) {
    foreach (int i in $range (0, 1)) {
      new f (i);
      }
    }
  
/* Program end */
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -march=native -O3 -DNDEBUG -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/home/teocollin/installs/teem/teem-build/include -o test/pop.o test/pop.cxx
/usr/bin/clang++ -fPIC -m64 -o test/pop test/pop.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq.o -Wl,-rpath=/home/teocollin/installs/teem/teem-build/lib -L/home/teocollin/installs/teem/teem-build/lib -lteem -lm
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.000     0.686
    front end .......................................................................   0.002     0.010
      parser ........................................................................   0.008     0.008
      typechecker ...................................................................   0.001     0.001
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.001     0.001
    High IR optimization ............................................................   0.000     0.001
      High IR value numbering .......................................................   0.001     0.001
      High IR normalization .........................................................   0.000     0.000
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.000     0.000
    Mid IR optimization .............................................................   0.000     0.000
      Mid IR contraction ............................................................   0.000     0.000
      Mid IR value numbering ........................................................   0.000     0.000
      Mid IR border control .........................................................   0.000     0.000
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.000     0.000
    Low IR optimization .............................................................   0.000     0.001
      Low IR contraction ............................................................   0.001     0.001
      Low IR value numbering ........................................................   0.000     0.000
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.000     0.000
    Tree IR optimization ............................................................   0.000     0.000
      Tree IR contraction ...........................................................   0.000     0.000
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.006     0.671
      C compiler ....................................................................   0.665     0.665
