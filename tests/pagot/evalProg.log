/* ParseTree: After parsing */
  Program @ [evalProg.diderot:4.1-156.0] 
    [
      Type: mesh_t= @ [evalProg.diderot:4.1-5.0] 
        Mesh @ [evalProg.diderot:4.6-10] 
        From File : pagotFile.json @ [evalProg.diderot:4.1-5.0] 
      Type: fns_t= @ [evalProg.diderot:5.1-6.0] 
        FunctionSpace(mesh_t) @ [evalProg.diderot:5.6-29] 
          [ ]
        From File : pagotFile.json @ [evalProg.diderot:5.1-6.0] 
      Type: func_t= @ [evalProg.diderot:6.1-7.0] 
        FemFunction(fns_t) @ [evalProg.diderot:6.6-24] 
        From File : pagotFile.json @ [evalProg.diderot:6.1-7.0] 
      Input: block @ [evalProg.diderot:7.1-8.0] 
      Input: space= @ [evalProg.diderot:8.1-9.0] 
        Apply @ [evalProg.diderot:8.21-33] 
          Var: fns_t @ [evalProg.diderot:8.21-26] 
          [
            Var: block @ [evalProg.diderot:8.27-32] 
          ]
      Input: U= @ [evalProg.diderot:9.1-10.0] 
        Apply @ [evalProg.diderot:9.18-31] 
          Var: func_t @ [evalProg.diderot:9.18-24] 
          [
            Var: space @ [evalProg.diderot:9.25-30] 
          ]
      Input: cellChoice @ [evalProg.diderot:10.1-11.0] 
      Var @ [evalProg.diderot:16.1-17.0] 
        Decl: c1= @ [evalProg.diderot:16.1-17.0] 
          Subscript @ [evalProg.diderot:16.19-42] 
            Select @ [evalProg.diderot:16.19-42] 
              Var: block @ [evalProg.diderot:16.19-24] 
              cells
            [
              Var: cellChoice @ [evalProg.diderot:16.31-41] 
            ]
      Var @ [evalProg.diderot:17.1-18.0] 
        Decl: F= @ [evalProg.diderot:17.1-18.0] 
          Select @ [evalProg.diderot:17.16-39] 
            Apply @ [evalProg.diderot:17.16-39] 
              Select @ [evalProg.diderot:17.16-39] 
                Var: U @ [evalProg.diderot:17.16-17] 
                funcCell
              [
                Var: c1 @ [evalProg.diderot:17.27-29] 
              ]
            refField
      Input: cmap= @ [evalProg.diderot:20.1-21.0] 
        Image @ [evalProg.diderot:20.26-49] 
          Lit: "cmap.nrrd" @ [evalProg.diderot:20.37-48] 
      Var @ [evalProg.diderot:21.1-22.0] 
        Decl: CM= @ [evalProg.diderot:21.1-22.0] 
          BinOp: ⊛ @ [evalProg.diderot:21.20-40] 
            Var: tent @ [evalProg.diderot:21.20-24] 
            Apply @ [evalProg.diderot:21.29-40] 
              Var: clamp @ [evalProg.diderot:21.29-34] 
              [
                Var: cmap @ [evalProg.diderot:21.35-39] 
              ]
      Var @ [evalProg.diderot:22.1-23.0] 
        Decl: C= @ [evalProg.diderot:22.1-23.0] 
          Var: F @ [evalProg.diderot:22.16-17] 
      Input: camEye= @ [evalProg.diderot:26.1-27.0] 
        Cons @ [evalProg.diderot:26.21-29] 
          [
            Lit: 0 @ [evalProg.diderot:26.22-23] 
            UnaryOp: unary - @ [evalProg.diderot:26.24-26] 
              Lit: 2 @ [evalProg.diderot:26.25-26] 
            Lit: 0 @ [evalProg.diderot:26.27-28] 
          ]
      Input: camAt= @ [evalProg.diderot:27.1-28.0] 
        Cons @ [evalProg.diderot:27.21-28] 
          [
            Lit: 0 @ [evalProg.diderot:27.22-23] 
            Lit: 0 @ [evalProg.diderot:27.24-25] 
            Lit: 0 @ [evalProg.diderot:27.26-27] 
          ]
      Input: camUp= @ [evalProg.diderot:28.1-29.0] 
        Cons @ [evalProg.diderot:28.20-27] 
          [
            Lit: 0 @ [evalProg.diderot:28.21-22] 
            Lit: 0 @ [evalProg.diderot:28.23-24] 
            Lit: 1 @ [evalProg.diderot:28.25-26] 
          ]
      Input: camNear= @ [evalProg.diderot:29.1-30.0] 
        UnaryOp: unary - @ [evalProg.diderot:29.22-26] 
          Lit: 0.4e1 @ [evalProg.diderot:29.23-26] 
      Input: camFar= @ [evalProg.diderot:30.1-31.0] 
        Lit: 0.4e1 @ [evalProg.diderot:30.21-24] 
      Input: camFOV= @ [evalProg.diderot:31.1-32.0] 
        Lit: 10 @ [evalProg.diderot:31.21-23] 
      Input: camOrtho= @ [evalProg.diderot:32.1-33.0] 
        Lit: false @ [evalProg.diderot:32.23-28] 
      Input: iresU= @ [evalProg.diderot:33.1-34.0] 
        Lit: 100 @ [evalProg.diderot:33.19-22] 
      Input: iresV= @ [evalProg.diderot:34.1-35.0] 
        Lit: 100 @ [evalProg.diderot:34.19-22] 
      Var @ [evalProg.diderot:37.1-39] 
        Decl: camN= @ [evalProg.diderot:37.1-39] 
          Apply @ [evalProg.diderot:37.13-38] 
            Var: normalize @ [evalProg.diderot:37.13-22] 
            [
              BinOp: - @ [evalProg.diderot:37.23-37] 
                Var: camAt @ [evalProg.diderot:37.23-28] 
                Var: camEye @ [evalProg.diderot:37.31-37] 
            ]
      Var @ [evalProg.diderot:38.1-38] 
        Decl: camU= @ [evalProg.diderot:38.1-38] 
          Apply @ [evalProg.diderot:38.13-37] 
            Var: normalize @ [evalProg.diderot:38.13-22] 
            [
              BinOp: × @ [evalProg.diderot:38.23-36] 
                Var: camN @ [evalProg.diderot:38.23-27] 
                Var: camUp @ [evalProg.diderot:38.31-36] 
            ]
      Var @ [evalProg.diderot:39.1-40.0] 
        Decl: camV= @ [evalProg.diderot:39.1-40.0] 
          BinOp: × @ [evalProg.diderot:39.13-25] 
            Var: camN @ [evalProg.diderot:39.13-17] 
            Var: camU @ [evalProg.diderot:39.21-25] 
      Var @ [evalProg.diderot:40.1-41.0] 
        Decl: camDist= @ [evalProg.diderot:40.1-41.0] 
          UnaryOp: |()| @ [evalProg.diderot:40.16-32] 
            BinOp: - @ [evalProg.diderot:40.17-31] 
              Var: camAt @ [evalProg.diderot:40.17-22] 
              Var: camEye @ [evalProg.diderot:40.25-31] 
      Var @ [evalProg.diderot:41.1-42.0] 
        Decl: camVmax= @ [evalProg.diderot:41.1-42.0] 
          BinOp: * @ [evalProg.diderot:41.16-43] 
            Apply @ [evalProg.diderot:41.16-35] 
              Var: tan @ [evalProg.diderot:41.16-19] 
              [
                BinOp: / @ [evalProg.diderot:41.20-34] 
                  BinOp: * @ [evalProg.diderot:41.20-30] 
                    Var: camFOV @ [evalProg.diderot:41.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [evalProg.diderot:41.28-30] 
                  Lit: 360 @ [evalProg.diderot:41.31-34] 
              ]
            Var: camDist @ [evalProg.diderot:41.36-43] 
      Var @ [evalProg.diderot:42.1-43.0] 
        Decl: camUmax= @ [evalProg.diderot:42.1-43.0] 
          BinOp: / @ [evalProg.diderot:42.16-35] 
            BinOp: * @ [evalProg.diderot:42.16-29] 
              Var: camVmax @ [evalProg.diderot:42.16-23] 
              Var: iresU @ [evalProg.diderot:42.24-29] 
            Var: iresV @ [evalProg.diderot:42.30-35] 
      Var @ [evalProg.diderot:43.1-37] 
        Decl: camNearVsp= @ [evalProg.diderot:43.1-37] 
          BinOp: + @ [evalProg.diderot:43.19-36] 
            Var: camNear @ [evalProg.diderot:43.19-26] 
            Var: camDist @ [evalProg.diderot:43.29-36] 
      Var @ [evalProg.diderot:44.1-45.0] 
        Decl: camFarVsp= @ [evalProg.diderot:44.1-45.0] 
          BinOp: + @ [evalProg.diderot:44.18-34] 
            Var: camFar @ [evalProg.diderot:44.18-24] 
            Var: camDist @ [evalProg.diderot:44.27-34] 
      Input: rayStep= @ [evalProg.diderot:48.1-49.0] 
        Lit: 0.1e-3 @ [evalProg.diderot:48.22-28] 
      Input: refStep= @ [evalProg.diderot:49.1-50.0] 
        Lit: 0.1e-3 @ [evalProg.diderot:49.22-28] 
      Input: transp0= @ [evalProg.diderot:52.1-53.0] 
        Lit: 0.5e-2 @ [evalProg.diderot:52.22-27] 
      Input: thick= @ [evalProg.diderot:53.1-54.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:53.20-24] 
      Input: fStrTh= @ [evalProg.diderot:54.1-55.0] 
        Lit: 0.e0 @ [evalProg.diderot:54.21-24] 
      Input: fMaskTh= @ [evalProg.diderot:55.1-56.0] 
        Lit: 0.e0 @ [evalProg.diderot:55.22-25] 
      Input: fBias= @ [evalProg.diderot:56.1-57.0] 
        Lit: 0.1e0 @ [evalProg.diderot:56.20-23] 
      Input: maxAlpha= @ [evalProg.diderot:57.1-58.0] 
        Lit: 0.1e1 @ [evalProg.diderot:57.23-26] 
      Input: light= @ [evalProg.diderot:60.1-61.0] 
        Lit: false @ [evalProg.diderot:60.20-25] 
      Input: phong= @ [evalProg.diderot:61.1-62.0] 
        Cons @ [evalProg.diderot:61.20-40] 
          [
            Lit: 0.1e0 @ [evalProg.diderot:61.21-24] 
            Lit: 0.7e0 @ [evalProg.diderot:61.26-29] 
            Lit: 0.2e0 @ [evalProg.diderot:61.31-34] 
            Lit: 100 @ [evalProg.diderot:61.36-39] 
          ]
      Input: mcNear= @ [evalProg.diderot:62.1-63.0] 
        Cons @ [evalProg.diderot:62.21-28] 
          [
            Lit: 1 @ [evalProg.diderot:62.22-23] 
            Lit: 1 @ [evalProg.diderot:62.24-25] 
            Lit: 1 @ [evalProg.diderot:62.26-27] 
          ]
      Input: mcFar= @ [evalProg.diderot:63.1-64.0] 
        Cons @ [evalProg.diderot:63.20-27] 
          [
            Lit: 1 @ [evalProg.diderot:63.21-22] 
            Lit: 1 @ [evalProg.diderot:63.23-24] 
            Lit: 1 @ [evalProg.diderot:63.25-26] 
          ]
      Input: litdir= @ [evalProg.diderot:64.1-65.0] 
        Cons @ [evalProg.diderot:64.21-29] 
          [
            Lit: 0 @ [evalProg.diderot:64.22-23] 
            UnaryOp: unary - @ [evalProg.diderot:64.24-26] 
              Lit: 1 @ [evalProg.diderot:64.25-26] 
            Lit: 0 @ [evalProg.diderot:64.27-28] 
          ]
      Input: cminmax= @ [evalProg.diderot:65.1-66.0] 
        Cons @ [evalProg.diderot:65.22-27] 
          [
            Lit: 0 @ [evalProg.diderot:65.23-24] 
            Lit: 0 @ [evalProg.diderot:65.25-26] 
          ]
      Var @ [evalProg.diderot:67.1-68.0] 
        Decl: litwsp= @ [evalProg.diderot:67.1-68.0] 
          BinOp: • @ [evalProg.diderot:67.15-64] 
            Apply @ [evalProg.diderot:67.15-42] 
              Var: transpose @ [evalProg.diderot:67.15-24] 
              [
                Cons @ [evalProg.diderot:67.25-41] 
                  [
                    Var: camU @ [evalProg.diderot:67.26-30] 
                    Var: camV @ [evalProg.diderot:67.31-35] 
                    Var: camN @ [evalProg.diderot:67.36-40] 
                  ]
              ]
            Apply @ [evalProg.diderot:67.47-64] 
              Var: normalize @ [evalProg.diderot:67.47-56] 
              [
                Var: litdir @ [evalProg.diderot:67.57-63] 
              ]
      Func: atent @ [evalProg.diderot:70.1-71.0] 
        Tensor @ [evalProg.diderot:70.10-15] 
          [ ]
        [
          Param: a0 @ [evalProg.diderot:70.21-28] 
            Tensor @ [evalProg.diderot:70.21-26] 
              [ ]
          Param: d @ [evalProg.diderot:70.30-36] 
            Tensor @ [evalProg.diderot:70.30-35] 
              [ ]
        ]
        Expr @ [evalProg.diderot:70.1-71.0] 
          BinOp: * @ [evalProg.diderot:70.40-75] 
            Var: a0 @ [evalProg.diderot:70.40-42] 
            Apply @ [evalProg.diderot:70.43-75] 
              Var: clamp @ [evalProg.diderot:70.43-48] 
              [
                Lit: 0 @ [evalProg.diderot:70.49-50] 
                Lit: 1 @ [evalProg.diderot:70.52-53] 
                BinOp: * @ [evalProg.diderot:70.55-74] 
                  Lit: 0.15e1 @ [evalProg.diderot:70.55-58] 
                  BinOp: - @ [evalProg.diderot:70.60-73] 
                    Lit: 1 @ [evalProg.diderot:70.60-61] 
                    BinOp: / @ [evalProg.diderot:70.64-73] 
                      UnaryOp: |()| @ [evalProg.diderot:70.64-67] 
                        Var: d @ [evalProg.diderot:70.65-66] 
                      Var: thick @ [evalProg.diderot:70.68-73] 
              ]
      Func: fStep @ [evalProg.diderot:72.1-78.1] 
        Tensor @ [evalProg.diderot:72.10-15] 
          [
            Lit: 3 @ [evalProg.diderot:72.10-15] 
          ]
        [
          Param: x @ [evalProg.diderot:72.21-27] 
            Tensor @ [evalProg.diderot:72.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:72.21-26] 
              ]
        ]
        Stmt @ [evalProg.diderot:72.1-78.1] 
          Block @ [evalProg.diderot:72.29-78.0] 
            [
              Decl @ [evalProg.diderot:72.29-78.0] 
                Decl: E= @ [evalProg.diderot:73.3-74.0] 
                  Apply @ [evalProg.diderot:73.15-36] 
                    Var: evecs @ [evalProg.diderot:73.15-20] 
                    [
                      Apply @ [evalProg.diderot:73.22-35] 
                        UnaryOp: ∇⊗ @ [evalProg.diderot:73.22-32] 
                          UnaryOp: ∇ @ [evalProg.diderot:73.28-32] 
                            Var: F @ [evalProg.diderot:73.31-32] 
                        [
                          Var: x @ [evalProg.diderot:73.33-34] 
                        ]
                    ]
              Decl @ [evalProg.diderot:72.29-78.0] 
                Decl: L= @ [evalProg.diderot:74.3-75.0] 
                  Apply @ [evalProg.diderot:74.15-36] 
                    Var: evals @ [evalProg.diderot:74.15-20] 
                    [
                      Apply @ [evalProg.diderot:74.22-35] 
                        UnaryOp: ∇⊗ @ [evalProg.diderot:74.22-32] 
                          UnaryOp: ∇ @ [evalProg.diderot:74.28-32] 
                            Var: F @ [evalProg.diderot:74.31-32] 
                        [
                          Var: x @ [evalProg.diderot:74.33-34] 
                        ]
                    ]
              Return @ [evalProg.diderot:75.3-77.0] 
                BinOp: • @ [evalProg.diderot:75.10-76.36] 
                  UnaryOp: unary - @ [evalProg.diderot:75.10-76.25] 
                    BinOp: + @ [evalProg.diderot:75.12-76.23] 
                      BinOp: / @ [evalProg.diderot:75.12-31] 
                        BinOp: ⊗ @ [evalProg.diderot:75.12-25] 
                          Subscript @ [evalProg.diderot:75.12-16] 
                            Var: E @ [evalProg.diderot:75.12-13] 
                            [
                              Lit: 2 @ [evalProg.diderot:75.14-15] 
                            ]
                          Subscript @ [evalProg.diderot:75.21-25] 
                            Var: E @ [evalProg.diderot:75.21-22] 
                            [
                              Lit: 2 @ [evalProg.diderot:75.23-24] 
                            ]
                        Subscript @ [evalProg.diderot:75.26-30] 
                          Var: L @ [evalProg.diderot:75.26-27] 
                          [
                            Lit: 2 @ [evalProg.diderot:75.28-29] 
                          ]
                      BinOp: / @ [evalProg.diderot:76.5-23] 
                        BinOp: ⊗ @ [evalProg.diderot:76.5-18] 
                          Subscript @ [evalProg.diderot:76.5-9] 
                            Var: E @ [evalProg.diderot:76.5-6] 
                            [
                              Lit: 1 @ [evalProg.diderot:76.7-8] 
                            ]
                          Subscript @ [evalProg.diderot:76.14-18] 
                            Var: E @ [evalProg.diderot:76.14-15] 
                            [
                              Lit: 1 @ [evalProg.diderot:76.16-17] 
                            ]
                        Subscript @ [evalProg.diderot:76.19-23] 
                          Var: L @ [evalProg.diderot:76.19-20] 
                          [
                            Lit: 1 @ [evalProg.diderot:76.21-22] 
                          ]
                  Apply @ [evalProg.diderot:76.28-36] 
                    UnaryOp: ∇ @ [evalProg.diderot:76.28-33] 
                      Var: F @ [evalProg.diderot:76.32-33] 
                    [
                      Var: x @ [evalProg.diderot:76.34-35] 
                    ]
            ]
      Func: fStrength @ [evalProg.diderot:78.1-80.0] 
        Tensor @ [evalProg.diderot:78.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:78.25-31] 
            Tensor @ [evalProg.diderot:78.25-30] 
              [
                Lit: 3 @ [evalProg.diderot:78.25-30] 
              ]
        ]
        Expr @ [evalProg.diderot:78.1-80.0] 
          BinOp: / @ [evalProg.diderot:79.3-50] 
            UnaryOp: unary - @ [evalProg.diderot:79.3-28] 
              Subscript @ [evalProg.diderot:79.4-28] 
                Apply @ [evalProg.diderot:79.4-28] 
                  Var: evals @ [evalProg.diderot:79.4-9] 
                  [
                    Apply @ [evalProg.diderot:79.11-24] 
                      UnaryOp: ∇⊗ @ [evalProg.diderot:79.11-21] 
                        UnaryOp: ∇ @ [evalProg.diderot:79.17-21] 
                          Var: F @ [evalProg.diderot:79.20-21] 
                      [
                        Var: x @ [evalProg.diderot:79.22-23] 
                      ]
                  ]
                [
                  Lit: 1 @ [evalProg.diderot:79.26-27] 
                ]
            BinOp: + @ [evalProg.diderot:79.30-49] 
              Var: fBias @ [evalProg.diderot:79.30-35] 
              UnaryOp: |()| @ [evalProg.diderot:79.38-49] 
                Apply @ [evalProg.diderot:79.40-48] 
                  UnaryOp: ∇ @ [evalProg.diderot:79.40-45] 
                    Var: F @ [evalProg.diderot:79.44-45] 
                  [
                    Var: x @ [evalProg.diderot:79.46-47] 
                  ]
      Func: fTest @ [evalProg.diderot:81.1-36] 
        Bool @ [evalProg.diderot:81.10-15] 
        [
          Param: x @ [evalProg.diderot:81.21-27] 
            Tensor @ [evalProg.diderot:81.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:81.21-26] 
              ]
        ]
        Expr @ [evalProg.diderot:81.1-36] 
          Lit: true @ [evalProg.diderot:81.31-35] 
      Func: fMask @ [evalProg.diderot:83.1-35] 
        Tensor @ [evalProg.diderot:83.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:83.21-27] 
            Tensor @ [evalProg.diderot:83.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:83.21-26] 
              ]
        ]
        Expr @ [evalProg.diderot:83.1-35] 
          Lit: 0.1e1 @ [evalProg.diderot:83.31-34] 
      Func: posTest @ [evalProg.diderot:85.1-86.0] 
        Bool @ [evalProg.diderot:85.10-15] 
        [
          Param: x @ [evalProg.diderot:85.23-29] 
            Tensor @ [evalProg.diderot:85.23-28] 
              [
                Lit: 3 @ [evalProg.diderot:85.23-28] 
              ]
        ]
        Expr @ [evalProg.diderot:85.1-86.0] 
          AndAlso @ [evalProg.diderot:85.33-118] 
            Apply @ [evalProg.diderot:85.33-58] 
              Select @ [evalProg.diderot:85.33-58] 
                Select @ [evalProg.diderot:85.33-58] 
                  Var: block @ [evalProg.diderot:85.33-38] 
                  refcell
                isInside
              [
                Var: x @ [evalProg.diderot:85.56-57] 
              ]
            AndAlso @ [evalProg.diderot:85.59-118] 
              BinOp: > @ [evalProg.diderot:85.62-84] 
                Apply @ [evalProg.diderot:85.62-74] 
                  Var: fStrength @ [evalProg.diderot:85.62-71] 
                  [
                    Var: x @ [evalProg.diderot:85.72-73] 
                  ]
                Var: fStrTh @ [evalProg.diderot:85.77-83] 
              AndAlso @ [evalProg.diderot:85.84-118] 
                BinOp: >= @ [evalProg.diderot:85.87-107] 
                  Apply @ [evalProg.diderot:85.87-95] 
                    Var: fMask @ [evalProg.diderot:85.87-92] 
                    [
                      Var: x @ [evalProg.diderot:85.93-94] 
                    ]
                  Var: fMaskTh @ [evalProg.diderot:85.99-106] 
                Apply @ [evalProg.diderot:85.110-118] 
                  Var: fTest @ [evalProg.diderot:85.110-115] 
                  [
                    Var: x @ [evalProg.diderot:85.116-117] 
                  ]
    ]
    Strand: ray @ [evalProg.diderot:89.1-154.3] 
      [
        Param: ui @ [evalProg.diderot:89.12-18] 
          Int @ [evalProg.diderot:89.12-16] 
        Param: vi @ [evalProg.diderot:89.20-26] 
          Int @ [evalProg.diderot:89.20-24] 
      ]
      [
        VarDcl @ [evalProg.diderot:91.3-92.0] 
        VarDcl @ [evalProg.diderot:92.3-93.0] 
        VarDcl @ [evalProg.diderot:93.3-94.0] 
        VarDcl @ [evalProg.diderot:94.3-95.0] 
        VarDcl @ [evalProg.diderot:95.3-96.0] 
        VarDcl @ [evalProg.diderot:96.3-97.0] 
        VarDcl @ [evalProg.diderot:98.3-99.0] 
        VarDcl @ [evalProg.diderot:99.3-100.0] 
        VarDcl @ [evalProg.diderot:102.3-24] 
        VarDcl @ [evalProg.diderot:102.25-103.0] 
        VarDcl @ [evalProg.diderot:103.3-24] 
        VarDcl @ [evalProg.diderot:103.25-104.0] 
        VarDcl: output @ [evalProg.diderot:104.3-105.0] 
        VarDcl: output @ [evalProg.diderot:105.3-106.0] 
        VarDcl @ [evalProg.diderot:106.3-22] 
        VarDcl @ [evalProg.diderot:107.3-19] 
      ]
      [
        Method: Update @ [evalProg.diderot:109.3-146.3] 
          Block @ [evalProg.diderot:109.10-146.0] 
            [
              Assign: rayN+= @ [evalProg.diderot:110.5-111.0] 
                Var: rayStep @ [evalProg.diderot:110.13-20] 
              IfThen @ [evalProg.diderot:111.5-112.5] 
                BinOp: > @ [evalProg.diderot:111.8-24] 
                  Var: rayN @ [evalProg.diderot:111.8-12] 
                  Var: camFarVsp @ [evalProg.diderot:111.15-24] 
                Stabilize @ [evalProg.diderot:111.27-37] 
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: pos= @ [evalProg.diderot:112.5-113.0] 
                  BinOp: + @ [evalProg.diderot:112.16-39] 
                    Var: rayOrig @ [evalProg.diderot:112.16-23] 
                    BinOp: * @ [evalProg.diderot:112.26-39] 
                      Var: rayN @ [evalProg.diderot:112.26-30] 
                      Var: rayVec @ [evalProg.diderot:112.33-39] 
              IfThen @ [evalProg.diderot:113.5-114.5] 
                UnaryOp: ! @ [evalProg.diderot:113.9-22] 
                  Apply @ [evalProg.diderot:113.10-22] 
                    Var: posTest @ [evalProg.diderot:113.10-17] 
                    [
                      Var: pos @ [evalProg.diderot:113.18-21] 
                    ]
                Continue @ [evalProg.diderot:113.24-33] 
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: step= @ [evalProg.diderot:114.5-115.0] 
                  Apply @ [evalProg.diderot:114.17-27] 
                    Var: fStep @ [evalProg.diderot:114.17-22] 
                    [
                      Var: pos @ [evalProg.diderot:114.23-26] 
                    ]
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: aa= @ [evalProg.diderot:115.5-116.0] 
                  Apply @ [evalProg.diderot:115.15-38] 
                    Var: atent @ [evalProg.diderot:115.15-20] 
                    [
                      Var: maxAlpha @ [evalProg.diderot:115.21-29] 
                      UnaryOp: |()| @ [evalProg.diderot:115.31-37] 
                        Var: step @ [evalProg.diderot:115.32-36] 
                    ]
              IfThen @ [evalProg.diderot:117.5-118.5] 
                BinOp: == @ [evalProg.diderot:117.8-14] 
                  Var: aa @ [evalProg.diderot:117.8-10] 
                  Lit: 0 @ [evalProg.diderot:117.13-14] 
                Continue @ [evalProg.diderot:117.17-26] 
              Assign: aa= @ [evalProg.diderot:118.5-30] 
                BinOp: - @ [evalProg.diderot:118.10-29] 
                  Lit: 1 @ [evalProg.diderot:118.10-11] 
                  BinOp: ^ @ [evalProg.diderot:118.14-29] 
                    BinOp: - @ [evalProg.diderot:118.15-19] 
                      Lit: 1 @ [evalProg.diderot:118.15-16] 
                      Var: aa @ [evalProg.diderot:118.17-19] 
                    Var: alphaFix @ [evalProg.diderot:118.21-29] 
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: snorm= @ [evalProg.diderot:120.5-121.0] 
                  UnaryOp: unary - @ [evalProg.diderot:120.18-34] 
                    Apply @ [evalProg.diderot:120.19-34] 
                      Var: normalize @ [evalProg.diderot:120.19-28] 
                      [
                        Var: step @ [evalProg.diderot:120.29-33] 
                      ]
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: dcomp= @ [evalProg.diderot:121.5-122.0] 
                  BinOp: ^ @ [evalProg.diderot:121.18-38] 
                    BinOp: • @ [evalProg.diderot:121.19-35] 
                      Var: snorm @ [evalProg.diderot:121.19-24] 
                      Var: litwsp @ [evalProg.diderot:121.29-35] 
                    Lit: 2 @ [evalProg.diderot:121.37-38] 
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: scomp= @ [evalProg.diderot:122.5-123.0] 
                  Lit: 0.e0 @ [evalProg.diderot:122.18-21] 
              IfThen @ [evalProg.diderot:123.5-129.5] 
                BinOp: != @ [evalProg.diderot:123.9-18] 
                  Var: phKs @ [evalProg.diderot:123.9-13] 
                  Lit: 0 @ [evalProg.diderot:123.17-18] 
                Assign: scomp= @ [evalProg.diderot:124.7-125.0] 
                  BinOp: ^ @ [evalProg.diderot:124.15-59] 
                    UnaryOp: |()| @ [evalProg.diderot:124.15-54] 
                      BinOp: • @ [evalProg.diderot:124.16-53] 
                        Var: snorm @ [evalProg.diderot:124.16-21] 
                        Apply @ [evalProg.diderot:124.26-52] 
                          Var: normalize @ [evalProg.diderot:124.26-35] 
                          [
                            BinOp: + @ [evalProg.diderot:124.36-51] 
                              Var: eyeDir @ [evalProg.diderot:124.36-42] 
                              Var: litwsp @ [evalProg.diderot:124.45-51] 
                          ]
                    Var: phSp @ [evalProg.diderot:124.55-59] 
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: dcol= @ [evalProg.diderot:129.5-130.0] 
                  Apply @ [evalProg.diderot:129.17-65] 
                    Var: lerp @ [evalProg.diderot:129.17-21] 
                    [
                      Var: mcNear @ [evalProg.diderot:129.22-28] 
                      Var: mcFar @ [evalProg.diderot:129.30-35] 
                      Var: camNearVsp @ [evalProg.diderot:129.37-47] 
                      Var: rayN @ [evalProg.diderot:129.49-53] 
                      Var: camFarVsp @ [evalProg.diderot:129.55-64] 
                    ]
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: cmin= @ [evalProg.diderot:130.5-131.0] 
                  Subscript @ [evalProg.diderot:130.17-27] 
                    Var: cminmax @ [evalProg.diderot:130.17-24] 
                    [
                      Lit: 0 @ [evalProg.diderot:130.25-26] 
                    ]
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: cmax= @ [evalProg.diderot:131.5-132.0] 
                  Subscript @ [evalProg.diderot:131.17-27] 
                    Var: cminmax @ [evalProg.diderot:131.17-24] 
                    [
                      Lit: 1 @ [evalProg.diderot:131.25-26] 
                    ]
              Decl @ [evalProg.diderot:109.10-146.0] 
                Decl: mcol= @ [evalProg.diderot:132.5-133.0] 
                  Cons @ [evalProg.diderot:132.17-24] 
                    [
                      Lit: 1 @ [evalProg.diderot:132.18-19] 
                      Lit: 1 @ [evalProg.diderot:132.20-21] 
                      Lit: 1 @ [evalProg.diderot:132.22-23] 
                    ]
              IfThen @ [evalProg.diderot:133.5-136.5] 
                BinOp: != @ [evalProg.diderot:133.9-21] 
                  Var: cmin @ [evalProg.diderot:133.9-13] 
                  Var: cmax @ [evalProg.diderot:133.17-21] 
                Assign: mcol= @ [evalProg.diderot:134.7-54] 
                  Apply @ [evalProg.diderot:134.14-53] 
                    Var: CM @ [evalProg.diderot:134.14-16] 
                    [
                      Apply @ [evalProg.diderot:134.17-52] 
                        Var: lerp @ [evalProg.diderot:134.17-21] 
                        [
                          Lit: 0 @ [evalProg.diderot:134.22-23] 
                          Lit: 1 @ [evalProg.diderot:134.25-26] 
                          Var: cmin @ [evalProg.diderot:134.28-32] 
                          Apply @ [evalProg.diderot:134.34-45] 
                            Var: C @ [evalProg.diderot:134.34-35] 
                            [
                              BinOp: + @ [evalProg.diderot:134.36-44] 
                                Var: pos @ [evalProg.diderot:134.36-39] 
                                Var: step @ [evalProg.diderot:134.40-44] 
                            ]
                          Var: cmax @ [evalProg.diderot:134.47-51] 
                        ]
                    ]
              Assign: rgb+= @ [evalProg.diderot:136.5-138.0] 
                BinOp: * @ [evalProg.diderot:136.12-137.30] 
                  BinOp: * @ [evalProg.diderot:136.12-21] 
                    Var: transp @ [evalProg.diderot:136.12-18] 
                    Var: aa @ [evalProg.diderot:136.19-21] 
                  BinOp: + @ [evalProg.diderot:136.23-137.29] 
                    BinOp: * @ [evalProg.diderot:136.23-137.9] 
                      BinOp: + @ [evalProg.diderot:136.24-41] 
                        Var: phKa @ [evalProg.diderot:136.24-28] 
                        BinOp: * @ [evalProg.diderot:136.31-41] 
                          Var: phKd @ [evalProg.diderot:136.31-35] 
                          Var: dcomp @ [evalProg.diderot:136.36-41] 
                      Apply @ [evalProg.diderot:136.43-137.0] 
                        Var: modulate @ [evalProg.diderot:136.43-51] 
                        [
                          Var: dcol @ [evalProg.diderot:136.52-56] 
                          Var: mcol @ [evalProg.diderot:136.57-61] 
                        ]
                    BinOp: * @ [evalProg.diderot:137.11-29] 
                      BinOp: * @ [evalProg.diderot:137.11-21] 
                        Var: phKs @ [evalProg.diderot:137.11-15] 
                        Var: scomp @ [evalProg.diderot:137.16-21] 
                      Cons @ [evalProg.diderot:137.22-29] 
                        [
                          Lit: 1 @ [evalProg.diderot:137.23-24] 
                          Lit: 1 @ [evalProg.diderot:137.25-26] 
                          Lit: 1 @ [evalProg.diderot:137.27-28] 
                        ]
              Assign: transp*= @ [evalProg.diderot:139.5-140.0] 
                BinOp: - @ [evalProg.diderot:139.15-21] 
                  Lit: 1 @ [evalProg.diderot:139.15-16] 
                  Var: aa @ [evalProg.diderot:139.19-21] 
              IfThen @ [evalProg.diderot:140.5-145.3] 
                BinOp: < @ [evalProg.diderot:140.8-24] 
                  Var: transp @ [evalProg.diderot:140.8-14] 
                  Var: transp0 @ [evalProg.diderot:140.17-24] 
                Block @ [evalProg.diderot:140.25-144.0] 
                  [
                    Assign: transp= @ [evalProg.diderot:141.7-142.0] 
                      Lit: 0 @ [evalProg.diderot:141.16-17] 
                    Stabilize @ [evalProg.diderot:142.7-143.0] 
                  ]
            ]
        Method: Stabilize @ [evalProg.diderot:146.3-154.1] 
          IfThen @ [evalProg.diderot:147.5-152.3] 
            BinOp: < @ [evalProg.diderot:147.9-19] 
              Var: transp @ [evalProg.diderot:147.9-15] 
              Lit: 1 @ [evalProg.diderot:147.18-19] 
            Block @ [evalProg.diderot:147.21-152.0] 
              [
                Decl @ [evalProg.diderot:147.21-152.0] 
                  Decl: aa= @ [evalProg.diderot:148.7-149.0] 
                    BinOp: - @ [evalProg.diderot:148.17-27] 
                      Lit: 1 @ [evalProg.diderot:148.17-18] 
                      Var: transp @ [evalProg.diderot:148.21-27] 
                Assign: rgba= @ [evalProg.diderot:150.7-52] 
                  Cons @ [evalProg.diderot:150.14-51] 
                    [
                      BinOp: / @ [evalProg.diderot:150.15-24] 
                        Subscript @ [evalProg.diderot:150.15-21] 
                          Var: rgb @ [evalProg.diderot:150.15-18] 
                          [
                            Lit: 0 @ [evalProg.diderot:150.19-20] 
                          ]
                        Var: aa @ [evalProg.diderot:150.22-24] 
                      BinOp: / @ [evalProg.diderot:150.26-35] 
                        Subscript @ [evalProg.diderot:150.26-32] 
                          Var: rgb @ [evalProg.diderot:150.26-29] 
                          [
                            Lit: 1 @ [evalProg.diderot:150.30-31] 
                          ]
                        Var: aa @ [evalProg.diderot:150.33-35] 
                      BinOp: / @ [evalProg.diderot:150.37-46] 
                        Subscript @ [evalProg.diderot:150.37-43] 
                          Var: rgb @ [evalProg.diderot:150.37-40] 
                          [
                            Lit: 2 @ [evalProg.diderot:150.41-42] 
                          ]
                        Var: aa @ [evalProg.diderot:150.44-46] 
                      Var: aa @ [evalProg.diderot:150.48-50] 
                    ]
              ]
      ]
    Grid @ [evalProg.diderot:154.3-156.0] 
      Comprehension @ [evalProg.diderot:154.16-155.44] 
        Apply @ [evalProg.diderot:154.17-155.0] 
          Var: ray @ [evalProg.diderot:154.17-20] 
          [
            Var: ui @ [evalProg.diderot:154.21-23] 
            Var: vi @ [evalProg.diderot:154.25-27] 
          ]
        [
          Iterator: vi @ [evalProg.diderot:155.9-25] 
            Range @ [evalProg.diderot:155.15-25] 
              Lit: 0 @ [evalProg.diderot:155.15-16] 
              BinOp: - @ [evalProg.diderot:155.18-25] 
                Var: iresV @ [evalProg.diderot:155.18-23] 
                Lit: 1 @ [evalProg.diderot:155.24-25] 
          Iterator: ui @ [evalProg.diderot:155.27-43] 
            Range @ [evalProg.diderot:155.33-43] 
              Lit: 0 @ [evalProg.diderot:155.33-34] 
              BinOp: - @ [evalProg.diderot:155.36-43] 
                Var: iresU @ [evalProg.diderot:155.36-41] 
                Lit: 1 @ [evalProg.diderot:155.42-43] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemType: Mesh with type var:NONE block = loadFem(Mesh);
input FemType: Space with type var:mesh_t space = loadFem(Space);
input FemType: FemFunc with type var:fns_t U = loadFem(FemFunc);
input int cellChoice;
input image(1)[3] cmap = loadImage<%1; $[3]> ("cmap.nrrd");
input vec3 camEye = [0.e0, -0.2e1, 0.e0];
input vec3 camAt = [0.e0, 0.e0, 0.e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camNear = -0.4e1;
input real camFar = 0.4e1;
input real camFOV = 0.1e2;
input bool camOrtho = false;
input int iresU = 100;
input int iresV = 100;
input real rayStep = 0.1e-3;
input real refStep = 0.1e-3;
input real transp0 = 0.5e-2;
input real thick = 0.1e-1;
input real fStrTh = 0.e0;
input real fMaskTh = 0.e0;
input real fBias = 0.1e0;
input real maxAlpha = 0.1e1;
input bool light = false;
input vec4 phong = [0.1e0, 0.7e0, 0.2e0, 0.1e3];
input vec3 mcNear = [0.1e1, 0.1e1, 0.1e1];
input vec3 mcFar = [0.1e1, 0.1e1, 0.1e1];
input vec3 litdir = [0.e0, -0.1e1, 0.e0];
input vec2 cminmax = [0.e0, 0.e0];
function bool != (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:mesh_t findPos (FemType: Mesh with type var:mesh_t mesh, vec3 pos)
{
  xn = [0.e0, 0.e0, 0.e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  foreach (int itter in $range (0, * (+ (2, 1), numCell))) {
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.e0, 0.e0, 0.e0]);
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (mesh, xn, 0.1e-8)):bool {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      }
    newtonInt = + (newtonInt, 1);
    if >= (newtonInt, 2) {
      newtonInt = 0;
      if >= (cellInt, numCell) {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        cellInt = + (cellInt, 1);
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: RefCell with type var:mesh_t refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:mesh_t, RefCell(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:mesh_t[], Cells(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] mesh_t_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] mesh_t_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 mesh_t_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 mesh_t_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:mesh_t _mesh_t_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.e0, 0.e0, 0.e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.e0, 0.e0, 0.e0]);
  foreach (int itter in $range (0, 2)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (mesh, xn, 0.1e-8)):bool {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: MeshPos with type var:mesh_t _mesh_pos_mesh_t_build_world_pos (FemType: MeshPos with type var:mesh_t pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:mesh_t,vec3 (pos, mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:mesh_t pos)
{
  return mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:mesh_t $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    print ("face ", $r2i (time[1]), " to ", $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1), "\n", "got: ", $sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), "\n");
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]], $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:mesh_t;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 12), * (faceIdx, 2)))):int[2];
    }
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 0;
      }
    if $and (>= (/ (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 1;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      face = 3;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 4;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      face = 5;
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if != (i, 0) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 0;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      }
    if $and (>= (/ (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if != (i, 1) {
      time = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 1;
      }
    else {
      faceTime = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), 0.1e-20)))
    if != (i, 2) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if != (i, 3) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      face = 3;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if != (i, 4) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 4;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), 0.1e-20)))
    if != (i, 5) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      face = 5;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    if == (-inf, faceTime) {
      return [(real)-1, (real)-1];
      }
    else {
      return [faceTime, (real)i];
      }
    }
  }
function FemType: Mesh with type var:mesh_t domain (FemType: Space with type var:mesh_t arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:mesh_t space (FemType: FemFunc with type var:fns_t arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:func_t funcCell (FemType: FemFunc with type var:fns_t arg0, FemType: MeshCell with type var:mesh_t arg1)
{
  return loadFem(FuncCell);
  }
FemType: MeshCell with type var:mesh_t c1 = $dynsub<FemType: MeshCell with type var:mesh_t> (extractFemItem(block, FemType: MeshCell with type var:mesh_t[], Cells(Mesh)), cellChoice);
field(3)[] F = femField(extractFem(FemFunc,funcCell (U, c1) ),extractFemItem(funcCell (U, c1), int, CellIndex(FuncCell)),field(3)[], refField, );
field#0(1)[3] CM = ⊛<#0; %1; $[3]> (tent, clamp<%1; $[3]> (cmap));
field(3)[] C = F;
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camN, camU);
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
real camNearVsp = +<$[]> (camNear, camDist);
real camFarVsp = +<$[]> (camFar, camDist);
vec3 litwsp = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (litdir));
function real atent (real a0, real d)
{
  return * (a0, clamp<$[]> ((real)0, (real)1, * (0.15e1, -<$[]> ((real)1, / (|()|<$[]> (d), thick)))));
  }
function vec3 fStep (vec3 x)
{
  vec3[3] E = evecs (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x));
  real[3] L = evals (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x));
  return •<$[3,3]; $[3]; $[3]> (unary -<$[3,3]> (+<$[3,3]> (/<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 2), $sub<vec3; %3> (E, 2)), $sub<real; %3> (L, 2)), /<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 1), $sub<vec3; %3> (E, 1)), $sub<real; %3> (L, 1)))), @<#; %3; $[3]> (∇<#; %3> (F), x));
  }
function real fStrength (vec3 x)
{
  return / (unary -<$[]> ($sub<real; %3> (evals (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x)), 1)), +<$[]> (fBias, |()|<$[3]> (@<#; %3; $[3]> (∇<#; %3> (F), x))));
  }
function bool fTest (vec3 x)
{
  return true;
  }
function real fMask (vec3 x)
{
  return 0.1e1;
  }
function bool posTest (vec3 x)
{
  return (extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (refcell (block), x, 0.1e-8)):bool && (> (fStrength (x), fStrTh) && (>= (fMask (x), fMaskTh) && fTest (x))));
  }
strand ray (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (unary -<$[]> (camVmax), camVmax, unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  real rayN = camNearVsp;
  vec3 UV = +<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV));
  vec3 rayOrig = +<$[3]> (camEye, (UV if camOrtho else [0.e0, 0.e0, 0.e0]));
  vec3 rayVec = +<$[3]> (camN, ([0.e0, 0.e0, 0.e0] if camOrtho else /<$[3]> (UV, camDist)));
  real alphaFix = / (* (|()|<$[3]> (rayVec), rayStep), refStep);
  vec3 eyeDir = unary -<$[3]> (normalize<$[3]> (rayVec));
  real phKa = phong[0];
  real phKd = phong[1];
  real phKs = phong[2];
  real phSp = phong[3];
  output vec4 rgba = [0.e0, 0.e0, 0.e0, 0.e0];
  output real raw = 0.e0;
  vec3 rgb = [0.e0, 0.e0, 0.e0];
  real transp = 0.1e1;
  update {
    rayN = +<$[]> (rayN, rayStep);
    if > (rayN, camFarVsp)
      stabilize;
      vec3 pos = +<$[3]> (rayOrig, *<$[3]> (rayN, rayVec));
    if ! (posTest (pos))
      continue;
      vec3 step = fStep (pos);
    real aa = atent (maxAlpha, |()|<$[3]> (step));
    if == (aa, (real)0)
      continue;
      aa = -<$[]> ((real)1, ^ (-<$[]> ((real)1, aa), alphaFix));
    vec3 snorm = unary -<$[3]> (normalize<$[3]> (step));
    real dcomp = ^ (•<$[3]; $[3]; $[]> (snorm, litwsp), 2);
    real scomp = 0.e0;
    if != (phKs, (real)0)
      scomp = ^ (|()|<$[]> (•<$[3]; $[3]; $[]> (snorm, normalize<$[3]> (+<$[3]> (eyeDir, litwsp)))), phSp);
      vec3 dcol = lerp<$[3]> (mcNear, mcFar, camNearVsp, rayN, camFarVsp);
    real cmin = cminmax[0];
    real cmax = cminmax[1];
    vec3 mcol = [0.1e1, 0.1e1, 0.1e1];
    if != (cmin, cmax)
      mcol = @<#0; %1; $[3]> (CM, lerp<$[]> ((real)0, (real)1, cmin, @<#; %3; $[]> (C, +<$[3]> (pos, step)), cmax));
      rgb = +<$[3]> (rgb, *<$[3]> (* (transp, aa), +<$[3]> (*<$[3]> (+<$[]> (phKa, * (phKd, dcomp)), modulate<%3> (dcol, mcol)), *<$[3]> (* (phKs, scomp), [0.1e1, 0.1e1, 0.1e1]))));
    transp = * (transp, -<$[]> ((real)1, aa));
    if < (transp, transp0) {
      transp = 0.e0;
      stabilize;
      }
    }
  stabilize {
    if < (transp, (real)1) {
      real aa = -<$[]> ((real)1, transp);
      rgba = [/ (rgb[0], aa), / (rgb[1], aa), / (rgb[2], aa), aa];
      }
    }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresV, 1))) {
      foreach (int ui in $range (0, - (iresU, 1))) {
        new ray (ui, vi);
        }
      }
    }
  
/* Program end */
cmap.nrrd file header:
  type: double
  dimension: 2
  space dimension: 1
  sizes: 3 311
  space directions: none (0.0066445182724252493)
  kinds: 3-vector space
  endian: little
  encoding: raw
  space origin: (-1.0299003322259137)
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04C3;
input FemData:Space 0space04CF_intermedateGlobal04D0;
input FemData:FemFunc 0U04D1_intermedateGlobal04D2;
input int cellChoice04D3;
input image(1)[3] cmap04D5 = image("cmap.nrrd");
input vec3 camEye04D6 = <default>;
input vec3 camAt04DA = <default>;
input vec3 camUp04DE = <default>;
input real camNear04E2 = <default>;
input real camFar04E3 = <default>;
input real camFOV04E4 = <default>;
input bool camOrtho04E5 = <default>;
input int iresU04E6 = <default>;
input int iresV04E7 = <default>;
input real rayStep04E8 = <default>;
input real refStep04E9 = <default>;
input real transp004EA = <default>;
input real thick04EB = <default>;
input real fStrTh04EC = <default>;
input real fMaskTh04ED = <default>;
input real fBias04EE = <default>;
input real maxAlpha04EF = <default>;
input bool light04F0 = <default>;
input vec4 phong04F1 = <default>;
input vec3 mcNear04F6 = <default>;
input vec3 mcFar04FA = <default>;
input vec3 litdir04FE = <default>;
input vec2 cminmax0502 = <default>;
constants {
  real _t04D7 = 0.e0;
  real _t04D8 = -0.2e1;
  real _t04D9 = 0.e0;
  camEye04D6 = [_t04D7, _t04D8, _t04D9];
  real _t04DB = 0.e0;
  real _t04DC = 0.e0;
  real _t04DD = 0.e0;
  camAt04DA = [_t04DB, _t04DC, _t04DD];
  real _t04DF = 0.e0;
  real _t04E0 = 0.e0;
  real _t04E1 = 0.1e1;
  camUp04DE = [_t04DF, _t04E0, _t04E1];
  camNear04E2 = -0.4e1;
  camFar04E3 = 0.4e1;
  camFOV04E4 = 0.1e2;
  camOrtho04E5 = false;
  iresU04E6 = 100;
  iresV04E7 = 100;
  rayStep04E8 = 0.1e-3;
  refStep04E9 = 0.1e-3;
  transp004EA = 0.5e-2;
  thick04EB = 0.1e-1;
  fStrTh04EC = 0.e0;
  fMaskTh04ED = 0.e0;
  fBias04EE = 0.1e0;
  maxAlpha04EF = 0.1e1;
  light04F0 = false;
  real _t04F2 = 0.1e0;
  real _t04F3 = 0.7e0;
  real _t04F4 = 0.2e0;
  real _t04F5 = 0.1e3;
  phong04F1 = [_t04F2, _t04F3, _t04F4, _t04F5];
  real _t04F7 = 0.1e1;
  real _t04F8 = 0.1e1;
  real _t04F9 = 0.1e1;
  mcNear04F6 = [_t04F7, _t04F8, _t04F9];
  real _t04FB = 0.1e1;
  real _t04FC = 0.1e1;
  real _t04FD = 0.1e1;
  mcFar04FA = [_t04FB, _t04FC, _t04FD];
  real _t04FF = 0.e0;
  real _t0500 = -0.1e1;
  real _t0501 = 0.e0;
  litdir04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.e0;
  real _t0504 = 0.e0;
  cminmax0502 = [_t0503, _t0504];
}
global Femdata: MeshCell[] 0cell_block04C4;
global Femdata: Space space04CF;
global Femdata: FemFunc U04D1;
global Femdata: MeshCell c115A9;
global field(3)[] F15B1;
global field#0(1)[3] CM15B4;
global field(3)[] C15B5;
global vec3 camN15B7;
global vec3 camU15B9;
global vec3 camV15BA;
global real camDist15BC;
global real camVmax15C2;
global real camUmax15C6;
global real camNearVsp15C7;
global real camFarVsp15C8;
global vec3 litwsp15CC;
function bool#0 !=0505 (Femdata: MeshCell cell10506, Femdata: MeshCell cell10507)
{
  int _t0508 = extractFemItem(CellIndex(Mesh), int, cell10506);
  int _t0509 = extractFemItem(CellIndex(Mesh), int, cell10507);
  bool _t050A = prim !=0086 (_t0508, _t0509);
  return _t050A;
}
function bool#0 ==050B (Femdata: MeshCell cell10506, Femdata: MeshCell cell10507)
{
  int _t050C = extractFemItem(CellIndex(Mesh), int, cell10506);
  int _t050D = extractFemItem(CellIndex(Mesh), int, cell10507);
  bool _t050E = prim ==0082 (_t050C, _t050D);
  return _t050E;
}
function Femdata: MeshPos#0 findPos050F (Femdata: Mesh mesh0510, vec3 pos0511)
{
  real _t0512 = 0.e0;
  real _t0513 = 0.e0;
  real _t0514 = 0.e0;
  xn0515 = [_t0512, _t0513, _t0514];
  newtonInt0516 = 0;
  cellInt0517 = extractFemItem(StartCell(Mesh), int, mesh0510);
  int _t0518 = extractFemItem(NumCell(Mesh), int, mesh0510);
  int _t0519 = 1;
  numCell051A = prim -0024 (_t0518, _t0519);
  int _t051B = 0;
  int _t051C = 2;
  int _t051D = 1;
  int _t051E = prim +0015 (_t051C, _t051D);
  int _t051F = prim *0033 (_t051E, numCell051A);
  int[] _t0520 = prim $range01C3 (_t051B, _t051F);
  foreach itter053B in _t0520 {
    field(3)[3] _t0521 = femField(mesh0510,cellInt0517,field(3)[3],Transform,);
    field(3)[3,3] _t0522 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0521);
    field(3)[3,3] _t0523 = prim inv015E<#∞; %3> (_t0522);
    real _t0524 = 0.e0;
    real _t0525 = 0.e0;
    real _t0526 = 0.e0;
    vec3 _t0527 = [_t0524, _t0525, _t0526];
    A0528 = prim @00A5<#∞; %3; $[3,3]> (_t0523, _t0527);
    field(3)[3] _t0529 = femField(mesh0510,cellInt0517,field(3)[3],Transform,);
    field(3)[3] _t052A = prim -002E<#∞; %3; $[3]> (_t0529, pos0511);
    field(3)[3] _t052B = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0528, _t052A);
    delta052C = prim @00A5<#∞; %3; $[3]> (_t052B, xn0515);
    xn0515 = prim -0026<$[3]> (xn0515, delta052C);
    real _t052D = 0.1e-7;
    real _t052E = 0.1e-7;
    real _t052F = prim *0034 (_t052D, _t052E);
    real _t0530 = prim •00CE<$[3]; $[3]; $[]> (delta052C, delta052C);
    bool _t0531 = prim >=007E (_t052F, _t0530);
    if _t0531 {
      real _t0532 = 0.1e-8;
      bool _t0533 = extractFemItemN((mesh0510, xn0515, _t0532),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0533 {
        Femdata: MeshPos _t0534 = extractFemItemN((mesh0510, cellInt0517, xn0515, pos0511),AllBuild(MeshPos),);
        return _t0534;
      }
    }
    int _t0535 = 1;
    newtonInt0516 = prim +0015 (newtonInt0516, _t0535);
    int _t0536 = 2;
    bool _t0537 = prim >=007D (newtonInt0516, _t0536);
    if _t0537 {
      newtonInt0516 = 0;
      bool _t0538 = prim >=007D (cellInt0517, numCell051A);
      if _t0538 {
        Femdata: MeshPos _t0539 = extractFemItemN((mesh0510),InvalidBuild(MeshPos),);
        return _t0539;
      } else {
        int _t053A = 1;
        cellInt0517 = prim +0015 (cellInt0517, _t053A);
      }
    }
  }
  string _t053C = "Bad end 2";
  string _t053D = "\n";
  print (_t053C, _t053D);
  Femdata: MeshPos _t053E = extractFemItemN((mesh0510),InvalidBuild(MeshPos),);
  return _t053E;
}
function Femdata: RefCell#1 refcell053F (Femdata: Mesh arg00540)
{
  Femdata: RefCell _t0541 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg00540);
  return _t0541;
}
function Femdata: MeshCell[]#0 cells0542 (Femdata: Mesh arg00543)
{
  Femdata: MeshCell[] _t0544 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00543);
  return _t0544;
}
function Femdata: MeshCell[]#0 cells0545 (Femdata: Mesh arg00543)
{
  int _t0546 = 0;
  int _t0547 = extractFemItem(NumCell(Mesh), int, arg00543);
  int[] _t0548 = prim $range01C3 (_t0546, _t0547);
  Femdata: MeshCell[] accum054B = {};
  foreach i0549 in _t0548 {
    Femdata: MeshCell _t054A = loadFem(MeshCell, arg00543, i0549);
    accum054B = prim @0010<Femdata: MeshCell> (accum054B, _t054A);
  }
  return accum054B;
}
function int#0 numCell054C (Femdata: Mesh arg00540)
{
  int _t054D = extractFemItem(NumCell(Mesh), int, arg00540);
  return _t054D;
}
function tensor[3,3,3,3]#0 mesh_t_transform_3054E (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t0552 = femField(mesh0551,cell0550,field(3)[3],Transform,);
  field(3)[3,3] _t0553 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0552);
  field(3)[3,3,3] _t0554 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0553);
  field(3)[3,3,3,3] _t0555 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0554);
  tensor[3,3,3,3] _t0556 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0555, pos054F);
  return _t0556;
}
function tensor[3,3,3]#0 mesh_t_transform_20557 (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t0558 = femField(mesh0551,cell0550,field(3)[3],Transform,);
  field(3)[3,3] _t0559 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0558);
  field(3)[3,3,3] _t055A = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0559);
  tensor[3,3,3] _t055B = prim @00A5<#∞; %3; $[3,3,3]> (_t055A, pos054F);
  return _t055B;
}
function tensor[3,3]#0 mesh_t_transform_1055C (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t055D = femField(mesh0551,cell0550,field(3)[3],Transform,);
  field(3)[3,3] _t055E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t055D);
  tensor[3,3] _t055F = prim @00A5<#∞; %3; $[3,3]> (_t055E, pos054F);
  return _t055F;
}
function vec3#2 mesh_t_transform_00560 (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t0561 = femField(mesh0551,cell0550,field(3)[3],Transform,);
  vec3 _t0562 = prim @00A5<#∞; %3; $[3]> (_t0561, pos054F);
  return _t0562;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse0563 (vec3 pos0564, int cellInt0565, Femdata: Mesh mesh0566)
{
  real _t0567 = 0.e0;
  real _t0568 = 0.e0;
  real _t0569 = 0.e0;
  xn056A = [_t0567, _t0568, _t0569];
  field(3)[3] _t056B = femField(mesh0566,cellInt0565,field(3)[3],Transform,);
  field(3)[3,3] _t056C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t056B);
  field(3)[3,3] _t056D = prim inv015E<#∞; %3> (_t056C);
  real _t056E = 0.e0;
  real _t056F = 0.e0;
  real _t0570 = 0.e0;
  vec3 _t0571 = [_t056E, _t056F, _t0570];
  A0572 = prim @00A5<#∞; %3; $[3,3]> (_t056D, _t0571);
  int _t0573 = 0;
  int _t0574 = 2;
  int[] _t0575 = prim $range01C3 (_t0573, _t0574);
  foreach itter0583 in _t0575 {
    field(3)[3] _t0576 = femField(mesh0566,cellInt0565,field(3)[3],Transform,);
    field(3)[3] _t0577 = prim -002E<#∞; %3; $[3]> (_t0576, pos0564);
    field(3)[3] _t0578 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0572, _t0577);
    delta0579 = prim @00A5<#∞; %3; $[3]> (_t0578, xn056A);
    xn056A = prim -0026<$[3]> (xn056A, delta0579);
    real _t057A = 0.1e-7;
    real _t057B = 0.1e-7;
    real _t057C = prim *0034 (_t057A, _t057B);
    real _t057D = prim •00CE<$[3]; $[3]; $[]> (delta0579, delta0579);
    bool _t057E = prim >=007E (_t057C, _t057D);
    if _t057E {
      real _t057F = 0.1e-8;
      bool _t0580 = extractFemItemN((mesh0566, xn056A, _t057F),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0580 {
        Femdata: MeshPos _t0581 = extractFemItemN((mesh0566, cellInt0565, xn056A, pos0564),AllBuild(MeshPos),);
        return _t0581;
      } else {
        Femdata: MeshPos _t0582 = extractFemItemN((mesh0566),InvalidBuild(MeshPos),);
        return _t0582;
      }
    }
  }
  Femdata: MeshPos _t0584 = extractFemItemN((mesh0566),InvalidBuild(MeshPos),);
  return _t0584;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos0585 (Femdata: MeshPos pos0586)
{
  bool _t0587 = extractFemItem(WorldTest(MeshPos), bool, pos0586);
  if _t0587 {
    vec3 _t0588 = extractFemItem(RefPos(MeshPos), vec3, pos0586);
    int _t0589 = extractFemItem(CellIndex(MeshPos), int, pos0586);
    Femdata: Mesh _t058A = extractFem(pos0586, Mesh);
    vec3 _t058B = func mesh_t_transform_00560 (_t0588, _t0589, _t058A);
    Femdata: MeshPos _t058C = extractFemItemN((pos0586, _t058B),NewWorld(MeshPos),);
    return _t058C;
  } else {
    return pos0586;
  }
}
function vec3#0 worldPos058D (Femdata: MeshPos pos0586)
{
  vec3 _t058E = extractFemItem(RefPos(MeshPos), vec3, pos0586);
  int _t058F = extractFemItem(CellIndex(MeshPos), int, pos0586);
  Femdata: Mesh _t0590 = extractFem(pos0586, Mesh);
  vec3 _t0591 = func mesh_t_transform_00560 (_t058E, _t058F, _t0590);
  return _t0591;
}
function Femdata: MeshPos#0 $exitPos0592 (Femdata: Mesh mesh0593, int cellId0594, vec3 refPos0595, vec3 dPos0596, real[2] time0597)
{
  int _t0598 = -1;
  real _t0599 = time0597[1];
  int _t059A = prim $r2i01B7 (_t0599);
  int[2] _t059C = func nextCell4059B (_t059A, cellId0594, mesh0593);
  int _t059D = 0;
  int _t059E = prim $sub01C0<int; %2> (_t059C, _t059D);
  bool _t059F = prim !=0086 (_t0598, _t059E);
  if _t059F {
    string _t05A0 = "face ";
    real _t05A1 = time0597[1];
    int _t05A2 = prim $r2i01B7 (_t05A1);
    string _t05A3 = " to ";
    real _t05A4 = time0597[1];
    int _t05A5 = prim $r2i01B7 (_t05A4);
    int[2] _t05A6 = func nextCell4059B (_t05A5, cellId0594, mesh0593);
    int _t05A7 = 1;
    int _t05A8 = prim $sub01C0<int; %2> (_t05A6, _t05A7);
    string _t05A9 = "\n";
    string _t05AA = "got: ";
    real _t05AB = 0.1e1;
    real _t05AC = 0.e0;
    real _t05AD = 0.e0;
    real _t05AE = 0.e0;
    vec4 _t05AF = [_t05AB, _t05AC, _t05AD, _t05AE];
    real _t05B0 = 0.e0;
    real _t05B1 = 0.1e1;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    vec4 _t05B4 = [_t05B0, _t05B1, _t05B2, _t05B3];
    real _t05B5 = 0.e0;
    real _t05B6 = 0.e0;
    real _t05B7 = 0.1e1;
    real _t05B8 = 0.e0;
    vec4 _t05B9 = [_t05B5, _t05B6, _t05B7, _t05B8];
    real _t05BA = 0.e0;
    real _t05BB = 0.e0;
    real _t05BC = 0.e0;
    real _t05BD = 0.1e1;
    vec4 _t05BE = [_t05BA, _t05BB, _t05BC, _t05BD];
    tensor[4,4] _t05BF = [_t05AF, _t05B4, _t05B9, _t05BE];
    real _t05C0 = 0.1e1;
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.e0;
    vec4 _t05C4 = [_t05C0, _t05C1, _t05C2, _t05C3];
    real _t05C5 = 0.e0;
    real _t05C6 = 0.1e1;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    vec4 _t05C9 = [_t05C5, _t05C6, _t05C7, _t05C8];
    real _t05CA = 0.e0;
    real _t05CB = 0.e0;
    real _t05CC = 0.1e1;
    real _t05CD = 0.1e1;
    vec4 _t05CE = [_t05CA, _t05CB, _t05CC, _t05CD];
    real _t05CF = 0.e0;
    real _t05D0 = 0.e0;
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    vec4 _t05D3 = [_t05CF, _t05D0, _t05D1, _t05D2];
    tensor[4,4] _t05D4 = [_t05C4, _t05C9, _t05CE, _t05D3];
    real _t05D5 = 0.e0;
    real _t05D6 = 0.1e1;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.e0;
    vec4 _t05D9 = [_t05D5, _t05D6, _t05D7, _t05D8];
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    real _t05DC = 0.1e1;
    real _t05DD = 0.e0;
    vec4 _t05DE = [_t05DA, _t05DB, _t05DC, _t05DD];
    real _t05DF = 0.1e1;
    real _t05E0 = -0.1e1;
    real _t05E1 = 0.e0;
    real _t05E2 = -0.5e0;
    vec4 _t05E3 = [_t05DF, _t05E0, _t05E1, _t05E2];
    real _t05E4 = 0.e0;
    real _t05E5 = 0.e0;
    real _t05E6 = 0.e0;
    real _t05E7 = 0.1e1;
    vec4 _t05E8 = [_t05E4, _t05E5, _t05E6, _t05E7];
    tensor[4,4] _t05E9 = [_t05D9, _t05DE, _t05E3, _t05E8];
    real _t05EA = 0.e0;
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    vec4 _t05EE = [_t05EA, _t05EB, _t05EC, _t05ED];
    real _t05EF = 0.e0;
    real _t05F0 = 0.1e1;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    vec4 _t05F3 = [_t05EF, _t05F0, _t05F1, _t05F2];
    real _t05F4 = 0.1e1;
    real _t05F5 = -0.1e1;
    real _t05F6 = 0.e0;
    real _t05F7 = -0.5e0;
    vec4 _t05F8 = [_t05F4, _t05F5, _t05F6, _t05F7];
    real _t05F9 = 0.e0;
    real _t05FA = 0.e0;
    real _t05FB = 0.e0;
    real _t05FC = 0.1e1;
    vec4 _t05FD = [_t05F9, _t05FA, _t05FB, _t05FC];
    tensor[4,4] _t05FE = [_t05EE, _t05F3, _t05F8, _t05FD];
    real _t05FF = 0.e0;
    real _t0600 = -0.1e1;
    real _t0601 = 0.e0;
    real _t0602 = 0.e0;
    vec4 _t0603 = [_t05FF, _t0600, _t0601, _t0602];
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    real _t0606 = -0.1e1;
    real _t0607 = 0.e0;
    vec4 _t0608 = [_t0604, _t0605, _t0606, _t0607];
    real _t0609 = 0.1e1;
    real _t060A = -0.1e1;
    real _t060B = 0.e0;
    real _t060C = -0.5e0;
    vec4 _t060D = [_t0609, _t060A, _t060B, _t060C];
    real _t060E = 0.e0;
    real _t060F = 0.e0;
    real _t0610 = 0.e0;
    real _t0611 = 0.1e1;
    vec4 _t0612 = [_t060E, _t060F, _t0610, _t0611];
    tensor[4,4] _t0613 = [_t0603, _t0608, _t060D, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    real _t0616 = 0.1e1;
    real _t0617 = 0.e0;
    vec4 _t0618 = [_t0614, _t0615, _t0616, _t0617];
    real _t0619 = 0.e0;
    real _t061A = -0.1e1;
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    vec4 _t061D = [_t0619, _t061A, _t061B, _t061C];
    real _t061E = 0.1e1;
    real _t061F = -0.1e1;
    real _t0620 = 0.e0;
    real _t0621 = -0.5e0;
    vec4 _t0622 = [_t061E, _t061F, _t0620, _t0621];
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.1e1;
    vec4 _t0627 = [_t0623, _t0624, _t0625, _t0626];
    tensor[4,4] _t0628 = [_t0618, _t061D, _t0622, _t0627];
    tensor[4,4][6] _t0629 = {_t05BF, _t05D4, _t05E9, _t05FE, _t0613, _t0628};
    real _t062A = 0.1e1;
    real _t062B = 0.e0;
    real _t062C = 0.e0;
    real _t062D = 0.e0;
    vec4 _t062E = [_t062A, _t062B, _t062C, _t062D];
    real _t062F = 0.e0;
    real _t0630 = 0.1e1;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    vec4 _t0633 = [_t062F, _t0630, _t0631, _t0632];
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = 0.1e1;
    real _t0637 = -0.1e1;
    vec4 _t0638 = [_t0634, _t0635, _t0636, _t0637];
    real _t0639 = 0.e0;
    real _t063A = 0.e0;
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    vec4 _t063D = [_t0639, _t063A, _t063B, _t063C];
    tensor[4,4] _t063E = [_t062E, _t0633, _t0638, _t063D];
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    vec4 _t0643 = [_t063F, _t0640, _t0641, _t0642];
    real _t0644 = 0.e0;
    real _t0645 = 0.1e1;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    vec4 _t0648 = [_t0644, _t0645, _t0646, _t0647];
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.1e1;
    real _t064C = 0.e0;
    vec4 _t064D = [_t0649, _t064A, _t064B, _t064C];
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    real _t0650 = 0.e0;
    real _t0651 = 0.1e1;
    vec4 _t0652 = [_t064E, _t064F, _t0650, _t0651];
    tensor[4,4] _t0653 = [_t0643, _t0648, _t064D, _t0652];
    real _t0654 = 0.e0;
    real _t0655 = 0.1e1;
    real _t0656 = 0.e0;
    real _t0657 = 0.e0;
    vec4 _t0658 = [_t0654, _t0655, _t0656, _t0657];
    real _t0659 = 0.e0;
    real _t065A = 0.e0;
    real _t065B = 0.1e1;
    real _t065C = -0.1e1;
    vec4 _t065D = [_t0659, _t065A, _t065B, _t065C];
    real _t065E = 0.1e1;
    real _t065F = -0.1e1;
    real _t0660 = 0.e0;
    real _t0661 = -0.5e0;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    real _t0665 = 0.e0;
    real _t0666 = 0.1e1;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    tensor[4,4] _t0668 = [_t0658, _t065D, _t0662, _t0667];
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    real _t066B = -0.1e1;
    real _t066C = 0.1e1;
    vec4 _t066D = [_t0669, _t066A, _t066B, _t066C];
    real _t066E = 0.e0;
    real _t066F = 0.1e1;
    real _t0670 = 0.e0;
    real _t0671 = 0.e0;
    vec4 _t0672 = [_t066E, _t066F, _t0670, _t0671];
    real _t0673 = 0.1e1;
    real _t0674 = -0.1e1;
    real _t0675 = 0.e0;
    real _t0676 = -0.5e0;
    vec4 _t0677 = [_t0673, _t0674, _t0675, _t0676];
    real _t0678 = 0.e0;
    real _t0679 = 0.e0;
    real _t067A = 0.e0;
    real _t067B = 0.1e1;
    vec4 _t067C = [_t0678, _t0679, _t067A, _t067B];
    tensor[4,4] _t067D = [_t066D, _t0672, _t0677, _t067C];
    real _t067E = 0.e0;
    real _t067F = -0.1e1;
    real _t0680 = 0.e0;
    real _t0681 = 0.e0;
    vec4 _t0682 = [_t067E, _t067F, _t0680, _t0681];
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = -0.1e1;
    real _t0686 = 0.1e1;
    vec4 _t0687 = [_t0683, _t0684, _t0685, _t0686];
    real _t0688 = 0.1e1;
    real _t0689 = -0.1e1;
    real _t068A = 0.e0;
    real _t068B = -0.5e0;
    vec4 _t068C = [_t0688, _t0689, _t068A, _t068B];
    real _t068D = 0.e0;
    real _t068E = 0.e0;
    real _t068F = 0.e0;
    real _t0690 = 0.1e1;
    vec4 _t0691 = [_t068D, _t068E, _t068F, _t0690];
    tensor[4,4] _t0692 = [_t0682, _t0687, _t068C, _t0691];
    real _t0693 = 0.e0;
    real _t0694 = 0.e0;
    real _t0695 = 0.1e1;
    real _t0696 = -0.1e1;
    vec4 _t0697 = [_t0693, _t0694, _t0695, _t0696];
    real _t0698 = 0.e0;
    real _t0699 = -0.1e1;
    real _t069A = 0.e0;
    real _t069B = 0.e0;
    vec4 _t069C = [_t0698, _t0699, _t069A, _t069B];
    real _t069D = 0.1e1;
    real _t069E = -0.1e1;
    real _t069F = 0.e0;
    real _t06A0 = -0.5e0;
    vec4 _t06A1 = [_t069D, _t069E, _t069F, _t06A0];
    real _t06A2 = 0.e0;
    real _t06A3 = 0.e0;
    real _t06A4 = 0.e0;
    real _t06A5 = 0.1e1;
    vec4 _t06A6 = [_t06A2, _t06A3, _t06A4, _t06A5];
    tensor[4,4] _t06A7 = [_t0697, _t069C, _t06A1, _t06A6];
    tensor[4,4][6] _t06A8 = {_t063E, _t0653, _t0668, _t067D, _t0692, _t06A7};
    real _t06A9 = 0.1e1;
    real _t06AA = 0.e0;
    real _t06AB = 0.1e1;
    real _t06AC = 0.5e0;
    vec4 _t06AD = [_t06A9, _t06AA, _t06AB, _t06AC];
    real _t06AE = 0.1e1;
    real _t06AF = 0.e0;
    real _t06B0 = 0.e0;
    real _t06B1 = 0.e0;
    vec4 _t06B2 = [_t06AE, _t06AF, _t06B0, _t06B1];
    real _t06B3 = 0.e0;
    real _t06B4 = 0.1e1;
    real _t06B5 = 0.e0;
    real _t06B6 = 0.e0;
    vec4 _t06B7 = [_t06B3, _t06B4, _t06B5, _t06B6];
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    real _t06BA = 0.e0;
    real _t06BB = 0.1e1;
    vec4 _t06BC = [_t06B8, _t06B9, _t06BA, _t06BB];
    tensor[4,4] _t06BD = [_t06AD, _t06B2, _t06B7, _t06BC];
    real _t06BE = 0.1e1;
    real _t06BF = 0.e0;
    real _t06C0 = 0.1e1;
    real _t06C1 = 0.5e0;
    vec4 _t06C2 = [_t06BE, _t06BF, _t06C0, _t06C1];
    real _t06C3 = 0.1e1;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.e0;
    real _t06C6 = 0.e0;
    vec4 _t06C7 = [_t06C3, _t06C4, _t06C5, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = 0.1e1;
    real _t06CA = 0.e0;
    real _t06CB = 0.1e1;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = 0.e0;
    real _t06D0 = 0.1e1;
    vec4 _t06D1 = [_t06CD, _t06CE, _t06CF, _t06D0];
    tensor[4,4] _t06D2 = [_t06C2, _t06C7, _t06CC, _t06D1];
    real _t06D3 = 0.1e1;
    real _t06D4 = 0.e0;
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    vec4 _t06D7 = [_t06D3, _t06D4, _t06D5, _t06D6];
    real _t06D8 = 0.e0;
    real _t06D9 = 0.1e1;
    real _t06DA = 0.e0;
    real _t06DB = 0.e0;
    vec4 _t06DC = [_t06D8, _t06D9, _t06DA, _t06DB];
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    real _t06DF = 0.1e1;
    real _t06E0 = 0.e0;
    vec4 _t06E1 = [_t06DD, _t06DE, _t06DF, _t06E0];
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    real _t06E4 = 0.e0;
    real _t06E5 = 0.1e1;
    vec4 _t06E6 = [_t06E2, _t06E3, _t06E4, _t06E5];
    tensor[4,4] _t06E7 = [_t06D7, _t06DC, _t06E1, _t06E6];
    real _t06E8 = 0.e0;
    real _t06E9 = -0.1e1;
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    vec4 _t06EC = [_t06E8, _t06E9, _t06EA, _t06EB];
    real _t06ED = 0.1e1;
    real _t06EE = 0.e0;
    real _t06EF = 0.e0;
    real _t06F0 = 0.e0;
    vec4 _t06F1 = [_t06ED, _t06EE, _t06EF, _t06F0];
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    real _t06F4 = 0.1e1;
    real _t06F5 = 0.e0;
    vec4 _t06F6 = [_t06F2, _t06F3, _t06F4, _t06F5];
    real _t06F7 = 0.e0;
    real _t06F8 = 0.e0;
    real _t06F9 = 0.e0;
    real _t06FA = 0.1e1;
    vec4 _t06FB = [_t06F7, _t06F8, _t06F9, _t06FA];
    tensor[4,4] _t06FC = [_t06EC, _t06F1, _t06F6, _t06FB];
    real _t06FD = -0.1e1;
    real _t06FE = 0.e0;
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = 0.e0;
    real _t0703 = -0.1e1;
    real _t0704 = 0.e0;
    real _t0705 = 0.e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = 0.e0;
    real _t0708 = 0.e0;
    real _t0709 = 0.1e1;
    real _t070A = 0.e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    real _t070F = 0.1e1;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    tensor[4,4] _t0711 = [_t0701, _t0706, _t070B, _t0710];
    real _t0712 = 0.e0;
    real _t0713 = 0.1e1;
    real _t0714 = 0.e0;
    real _t0715 = 0.e0;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = -0.1e1;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    real _t071A = 0.e0;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    real _t071E = 0.1e1;
    real _t071F = 0.e0;
    vec4 _t0720 = [_t071C, _t071D, _t071E, _t071F];
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    vec4 _t0725 = [_t0721, _t0722, _t0723, _t0724];
    tensor[4,4] _t0726 = [_t0716, _t071B, _t0720, _t0725];
    tensor[4,4][6] _t0727 = {_t06BD, _t06D2, _t06E7, _t06FC, _t0711, _t0726};
    real _t0728 = 0.e0;
    real _t0729 = 0.1e1;
    real _t072A = 0.1e1;
    real _t072B = 0.5e0;
    vec4 _t072C = [_t0728, _t0729, _t072A, _t072B];
    real _t072D = 0.e0;
    real _t072E = 0.1e1;
    real _t072F = 0.e0;
    real _t0730 = 0.e0;
    vec4 _t0731 = [_t072D, _t072E, _t072F, _t0730];
    real _t0732 = -0.1e1;
    real _t0733 = 0.e0;
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.e0;
    real _t073A = 0.1e1;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    tensor[4,4] _t073C = [_t072C, _t0731, _t0736, _t073B];
    real _t073D = 0.e0;
    real _t073E = 0.1e1;
    real _t073F = 0.1e1;
    real _t0740 = 0.5e0;
    vec4 _t0741 = [_t073D, _t073E, _t073F, _t0740];
    real _t0742 = 0.e0;
    real _t0743 = 0.1e1;
    real _t0744 = 0.e0;
    real _t0745 = 0.e0;
    vec4 _t0746 = [_t0742, _t0743, _t0744, _t0745];
    real _t0747 = -0.1e1;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    real _t074A = 0.1e1;
    vec4 _t074B = [_t0747, _t0748, _t0749, _t074A];
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.e0;
    real _t074F = 0.1e1;
    vec4 _t0750 = [_t074C, _t074D, _t074E, _t074F];
    tensor[4,4] _t0751 = [_t0741, _t0746, _t074B, _t0750];
    real _t0752 = 0.e0;
    real _t0753 = 0.1e1;
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    vec4 _t0756 = [_t0752, _t0753, _t0754, _t0755];
    real _t0757 = -0.1e1;
    real _t0758 = 0.e0;
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    vec4 _t075B = [_t0757, _t0758, _t0759, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    real _t075E = 0.1e1;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = 0.e0;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.1e1;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    tensor[4,4] _t0766 = [_t0756, _t075B, _t0760, _t0765];
    real _t0767 = 0.1e1;
    real _t0768 = 0.e0;
    real _t0769 = 0.e0;
    real _t076A = 0.e0;
    vec4 _t076B = [_t0767, _t0768, _t0769, _t076A];
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    vec4 _t0770 = [_t076C, _t076D, _t076E, _t076F];
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    real _t0773 = 0.1e1;
    real _t0774 = 0.e0;
    vec4 _t0775 = [_t0771, _t0772, _t0773, _t0774];
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    real _t0779 = 0.1e1;
    vec4 _t077A = [_t0776, _t0777, _t0778, _t0779];
    tensor[4,4] _t077B = [_t076B, _t0770, _t0775, _t077A];
    real _t077C = 0.e0;
    real _t077D = -0.1e1;
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    real _t0781 = 0.1e1;
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    real _t0784 = 0.e0;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.1e1;
    real _t0789 = 0.e0;
    vec4 _t078A = [_t0786, _t0787, _t0788, _t0789];
    real _t078B = 0.e0;
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.1e1;
    vec4 _t078F = [_t078B, _t078C, _t078D, _t078E];
    tensor[4,4] _t0790 = [_t0780, _t0785, _t078A, _t078F];
    real _t0791 = -0.1e1;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.e0;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    real _t0796 = 0.e0;
    real _t0797 = -0.1e1;
    real _t0798 = 0.e0;
    real _t0799 = 0.e0;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.1e1;
    real _t079E = 0.e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = 0.e0;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.1e1;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    tensor[4,4] _t07A5 = [_t0795, _t079A, _t079F, _t07A4];
    tensor[4,4][6] _t07A6 = {_t073C, _t0751, _t0766, _t077B, _t0790, _t07A5};
    real _t07A7 = -0.1e1;
    real _t07A8 = 0.e0;
    real _t07A9 = 0.1e1;
    real _t07AA = 0.5e0;
    vec4 _t07AB = [_t07A7, _t07A8, _t07A9, _t07AA];
    real _t07AC = -0.1e1;
    real _t07AD = 0.e0;
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    vec4 _t07B0 = [_t07AC, _t07AD, _t07AE, _t07AF];
    real _t07B1 = 0.e0;
    real _t07B2 = -0.1e1;
    real _t07B3 = 0.e0;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.1e1;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    tensor[4,4] _t07BB = [_t07AB, _t07B0, _t07B5, _t07BA];
    real _t07BC = -0.1e1;
    real _t07BD = 0.e0;
    real _t07BE = 0.1e1;
    real _t07BF = 0.5e0;
    vec4 _t07C0 = [_t07BC, _t07BD, _t07BE, _t07BF];
    real _t07C1 = -0.1e1;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.e0;
    real _t07C4 = 0.e0;
    vec4 _t07C5 = [_t07C1, _t07C2, _t07C3, _t07C4];
    real _t07C6 = 0.e0;
    real _t07C7 = -0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.1e1;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.1e1;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    tensor[4,4] _t07D0 = [_t07C0, _t07C5, _t07CA, _t07CF];
    real _t07D1 = -0.1e1;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    vec4 _t07D5 = [_t07D1, _t07D2, _t07D3, _t07D4];
    real _t07D6 = 0.e0;
    real _t07D7 = -0.1e1;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.e0;
    vec4 _t07DA = [_t07D6, _t07D7, _t07D8, _t07D9];
    real _t07DB = 0.e0;
    real _t07DC = 0.e0;
    real _t07DD = 0.1e1;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.1e1;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    tensor[4,4] _t07E5 = [_t07D5, _t07DA, _t07DF, _t07E4];
    real _t07E6 = 0.e0;
    real _t07E7 = 0.1e1;
    real _t07E8 = 0.e0;
    real _t07E9 = 0.e0;
    vec4 _t07EA = [_t07E6, _t07E7, _t07E8, _t07E9];
    real _t07EB = -0.1e1;
    real _t07EC = 0.e0;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    vec4 _t07EF = [_t07EB, _t07EC, _t07ED, _t07EE];
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    real _t07F2 = 0.1e1;
    real _t07F3 = 0.e0;
    vec4 _t07F4 = [_t07F0, _t07F1, _t07F2, _t07F3];
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    real _t07F7 = 0.e0;
    real _t07F8 = 0.1e1;
    vec4 _t07F9 = [_t07F5, _t07F6, _t07F7, _t07F8];
    tensor[4,4] _t07FA = [_t07EA, _t07EF, _t07F4, _t07F9];
    real _t07FB = 0.1e1;
    real _t07FC = 0.e0;
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    vec4 _t07FF = [_t07FB, _t07FC, _t07FD, _t07FE];
    real _t0800 = 0.e0;
    real _t0801 = 0.1e1;
    real _t0802 = 0.e0;
    real _t0803 = 0.e0;
    vec4 _t0804 = [_t0800, _t0801, _t0802, _t0803];
    real _t0805 = 0.e0;
    real _t0806 = 0.e0;
    real _t0807 = 0.1e1;
    real _t0808 = 0.e0;
    vec4 _t0809 = [_t0805, _t0806, _t0807, _t0808];
    real _t080A = 0.e0;
    real _t080B = 0.e0;
    real _t080C = 0.e0;
    real _t080D = 0.1e1;
    vec4 _t080E = [_t080A, _t080B, _t080C, _t080D];
    tensor[4,4] _t080F = [_t07FF, _t0804, _t0809, _t080E];
    real _t0810 = 0.e0;
    real _t0811 = -0.1e1;
    real _t0812 = 0.e0;
    real _t0813 = 0.e0;
    vec4 _t0814 = [_t0810, _t0811, _t0812, _t0813];
    real _t0815 = 0.1e1;
    real _t0816 = 0.e0;
    real _t0817 = 0.e0;
    real _t0818 = 0.e0;
    vec4 _t0819 = [_t0815, _t0816, _t0817, _t0818];
    real _t081A = 0.e0;
    real _t081B = 0.e0;
    real _t081C = 0.1e1;
    real _t081D = 0.e0;
    vec4 _t081E = [_t081A, _t081B, _t081C, _t081D];
    real _t081F = 0.e0;
    real _t0820 = 0.e0;
    real _t0821 = 0.e0;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    tensor[4,4] _t0824 = [_t0814, _t0819, _t081E, _t0823];
    tensor[4,4][6] _t0825 = {_t07BB, _t07D0, _t07E5, _t07FA, _t080F, _t0824};
    real _t0826 = 0.e0;
    real _t0827 = -0.1e1;
    real _t0828 = 0.1e1;
    real _t0829 = 0.5e0;
    vec4 _t082A = [_t0826, _t0827, _t0828, _t0829];
    real _t082B = 0.e0;
    real _t082C = -0.1e1;
    real _t082D = 0.e0;
    real _t082E = 0.e0;
    vec4 _t082F = [_t082B, _t082C, _t082D, _t082E];
    real _t0830 = 0.1e1;
    real _t0831 = 0.e0;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    real _t0838 = 0.1e1;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    tensor[4,4] _t083A = [_t082A, _t082F, _t0834, _t0839];
    real _t083B = 0.e0;
    real _t083C = -0.1e1;
    real _t083D = 0.1e1;
    real _t083E = 0.5e0;
    vec4 _t083F = [_t083B, _t083C, _t083D, _t083E];
    real _t0840 = 0.e0;
    real _t0841 = -0.1e1;
    real _t0842 = 0.e0;
    real _t0843 = 0.e0;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    real _t0845 = 0.1e1;
    real _t0846 = 0.e0;
    real _t0847 = 0.e0;
    real _t0848 = 0.1e1;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = 0.e0;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    real _t084D = 0.1e1;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    tensor[4,4] _t084F = [_t083F, _t0844, _t0849, _t084E];
    real _t0850 = 0.e0;
    real _t0851 = -0.1e1;
    real _t0852 = 0.e0;
    real _t0853 = 0.e0;
    vec4 _t0854 = [_t0850, _t0851, _t0852, _t0853];
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    real _t0857 = 0.e0;
    real _t0858 = 0.e0;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    real _t085A = 0.e0;
    real _t085B = 0.e0;
    real _t085C = 0.1e1;
    real _t085D = 0.e0;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.e0;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    real _t0862 = 0.1e1;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    tensor[4,4] _t0864 = [_t0854, _t0859, _t085E, _t0863];
    real _t0865 = -0.1e1;
    real _t0866 = 0.e0;
    real _t0867 = 0.e0;
    real _t0868 = 0.e0;
    vec4 _t0869 = [_t0865, _t0866, _t0867, _t0868];
    real _t086A = 0.e0;
    real _t086B = -0.1e1;
    real _t086C = 0.e0;
    real _t086D = 0.e0;
    vec4 _t086E = [_t086A, _t086B, _t086C, _t086D];
    real _t086F = 0.e0;
    real _t0870 = 0.e0;
    real _t0871 = 0.1e1;
    real _t0872 = 0.e0;
    vec4 _t0873 = [_t086F, _t0870, _t0871, _t0872];
    real _t0874 = 0.e0;
    real _t0875 = 0.e0;
    real _t0876 = 0.e0;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    tensor[4,4] _t0879 = [_t0869, _t086E, _t0873, _t0878];
    real _t087A = 0.e0;
    real _t087B = 0.1e1;
    real _t087C = 0.e0;
    real _t087D = 0.e0;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    real _t087F = -0.1e1;
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.e0;
    vec4 _t0883 = [_t087F, _t0880, _t0881, _t0882];
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    real _t0887 = 0.e0;
    vec4 _t0888 = [_t0884, _t0885, _t0886, _t0887];
    real _t0889 = 0.e0;
    real _t088A = 0.e0;
    real _t088B = 0.e0;
    real _t088C = 0.1e1;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    tensor[4,4] _t088E = [_t087E, _t0883, _t0888, _t088D];
    real _t088F = 0.1e1;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.e0;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    real _t0897 = 0.e0;
    vec4 _t0898 = [_t0894, _t0895, _t0896, _t0897];
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    real _t089C = 0.e0;
    vec4 _t089D = [_t0899, _t089A, _t089B, _t089C];
    real _t089E = 0.e0;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.1e1;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    tensor[4,4] _t08A3 = [_t0893, _t0898, _t089D, _t08A2];
    tensor[4,4][6] _t08A4 = {_t083A, _t084F, _t0864, _t0879, _t088E, _t08A3};
    tensor[4,4][6][6] _t08A5 = {_t0629, _t06A8, _t0727, _t07A6, _t0825, _t08A4};
    real _t08A6 = time0597[1];
    int _t08A7 = prim $r2i01B7 (_t08A6);
    tensor[4,4][6] _t08A8 = prim $sub01C0<tensor[4,4][6]; %6> (_t08A5, _t08A7);
    real _t08A9 = time0597[1];
    int _t08AA = prim $r2i01B7 (_t08A9);
    int[2] _t08AB = func nextCell4059B (_t08AA, cellId0594, mesh0593);
    int _t08AC = 1;
    int _t08AD = prim $sub01C0<int; %2> (_t08AB, _t08AC);
    tensor[4,4] _t08AE = prim $sub01C0<tensor[4,4]; %6> (_t08A8, _t08AD);
    string _t08AF = "\n";
    print (_t05A0, _t05A2, _t05A3, _t05A8, _t05A9, _t05AA, _t08AE, _t08AF);
    real _t08B0 = time0597[1];
    int _t08B1 = prim $r2i01B7 (_t08B0);
    int[2] _t08B2 = func nextCell4059B (_t08B1, cellId0594, mesh0593);
    int _t08B3 = 0;
    int _t08B4 = prim $sub01C0<int; %2> (_t08B2, _t08B3);
    real _t08B5 = 0.1e1;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    real _t08B8 = 0.e0;
    vec4 _t08B9 = [_t08B5, _t08B6, _t08B7, _t08B8];
    real _t08BA = 0.e0;
    real _t08BB = 0.1e1;
    real _t08BC = 0.e0;
    real _t08BD = 0.e0;
    vec4 _t08BE = [_t08BA, _t08BB, _t08BC, _t08BD];
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.1e1;
    real _t08C2 = 0.e0;
    vec4 _t08C3 = [_t08BF, _t08C0, _t08C1, _t08C2];
    real _t08C4 = 0.e0;
    real _t08C5 = 0.e0;
    real _t08C6 = 0.e0;
    real _t08C7 = 0.1e1;
    vec4 _t08C8 = [_t08C4, _t08C5, _t08C6, _t08C7];
    tensor[4,4] _t08C9 = [_t08B9, _t08BE, _t08C3, _t08C8];
    real _t08CA = 0.1e1;
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    real _t08CD = 0.e0;
    vec4 _t08CE = [_t08CA, _t08CB, _t08CC, _t08CD];
    real _t08CF = 0.e0;
    real _t08D0 = 0.1e1;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.e0;
    vec4 _t08D3 = [_t08CF, _t08D0, _t08D1, _t08D2];
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    real _t08D7 = 0.1e1;
    vec4 _t08D8 = [_t08D4, _t08D5, _t08D6, _t08D7];
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.e0;
    real _t08DC = 0.1e1;
    vec4 _t08DD = [_t08D9, _t08DA, _t08DB, _t08DC];
    tensor[4,4] _t08DE = [_t08CE, _t08D3, _t08D8, _t08DD];
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    real _t08E2 = 0.e0;
    vec4 _t08E3 = [_t08DF, _t08E0, _t08E1, _t08E2];
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.1e1;
    real _t08E7 = 0.e0;
    vec4 _t08E8 = [_t08E4, _t08E5, _t08E6, _t08E7];
    real _t08E9 = 0.1e1;
    real _t08EA = -0.1e1;
    real _t08EB = 0.e0;
    real _t08EC = -0.5e0;
    vec4 _t08ED = [_t08E9, _t08EA, _t08EB, _t08EC];
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.e0;
    real _t08F1 = 0.1e1;
    vec4 _t08F2 = [_t08EE, _t08EF, _t08F0, _t08F1];
    tensor[4,4] _t08F3 = [_t08E3, _t08E8, _t08ED, _t08F2];
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = -0.1e1;
    real _t08F7 = 0.e0;
    vec4 _t08F8 = [_t08F4, _t08F5, _t08F6, _t08F7];
    real _t08F9 = 0.e0;
    real _t08FA = 0.1e1;
    real _t08FB = 0.e0;
    real _t08FC = 0.e0;
    vec4 _t08FD = [_t08F9, _t08FA, _t08FB, _t08FC];
    real _t08FE = 0.1e1;
    real _t08FF = -0.1e1;
    real _t0900 = 0.e0;
    real _t0901 = -0.5e0;
    vec4 _t0902 = [_t08FE, _t08FF, _t0900, _t0901];
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.e0;
    real _t0906 = 0.1e1;
    vec4 _t0907 = [_t0903, _t0904, _t0905, _t0906];
    tensor[4,4] _t0908 = [_t08F8, _t08FD, _t0902, _t0907];
    real _t0909 = 0.e0;
    real _t090A = -0.1e1;
    real _t090B = 0.e0;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    real _t0910 = -0.1e1;
    real _t0911 = 0.e0;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    real _t0913 = 0.1e1;
    real _t0914 = -0.1e1;
    real _t0915 = 0.e0;
    real _t0916 = -0.5e0;
    vec4 _t0917 = [_t0913, _t0914, _t0915, _t0916];
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.e0;
    real _t091B = 0.1e1;
    vec4 _t091C = [_t0918, _t0919, _t091A, _t091B];
    tensor[4,4] _t091D = [_t090D, _t0912, _t0917, _t091C];
    real _t091E = 0.e0;
    real _t091F = 0.e0;
    real _t0920 = 0.1e1;
    real _t0921 = 0.e0;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.e0;
    real _t0924 = -0.1e1;
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    real _t0928 = 0.1e1;
    real _t0929 = -0.1e1;
    real _t092A = 0.e0;
    real _t092B = -0.5e0;
    vec4 _t092C = [_t0928, _t0929, _t092A, _t092B];
    real _t092D = 0.e0;
    real _t092E = 0.e0;
    real _t092F = 0.e0;
    real _t0930 = 0.1e1;
    vec4 _t0931 = [_t092D, _t092E, _t092F, _t0930];
    tensor[4,4] _t0932 = [_t0922, _t0927, _t092C, _t0931];
    tensor[4,4][6] _t0933 = {_t08C9, _t08DE, _t08F3, _t0908, _t091D, _t0932};
    real _t0934 = 0.1e1;
    real _t0935 = 0.e0;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    vec4 _t0938 = [_t0934, _t0935, _t0936, _t0937];
    real _t0939 = 0.e0;
    real _t093A = 0.1e1;
    real _t093B = 0.e0;
    real _t093C = 0.e0;
    vec4 _t093D = [_t0939, _t093A, _t093B, _t093C];
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = 0.1e1;
    real _t0941 = -0.1e1;
    vec4 _t0942 = [_t093E, _t093F, _t0940, _t0941];
    real _t0943 = 0.e0;
    real _t0944 = 0.e0;
    real _t0945 = 0.e0;
    real _t0946 = 0.1e1;
    vec4 _t0947 = [_t0943, _t0944, _t0945, _t0946];
    tensor[4,4] _t0948 = [_t0938, _t093D, _t0942, _t0947];
    real _t0949 = 0.1e1;
    real _t094A = 0.e0;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    vec4 _t094D = [_t0949, _t094A, _t094B, _t094C];
    real _t094E = 0.e0;
    real _t094F = 0.1e1;
    real _t0950 = 0.e0;
    real _t0951 = 0.e0;
    vec4 _t0952 = [_t094E, _t094F, _t0950, _t0951];
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    real _t0955 = 0.1e1;
    real _t0956 = 0.e0;
    vec4 _t0957 = [_t0953, _t0954, _t0955, _t0956];
    real _t0958 = 0.e0;
    real _t0959 = 0.e0;
    real _t095A = 0.e0;
    real _t095B = 0.1e1;
    vec4 _t095C = [_t0958, _t0959, _t095A, _t095B];
    tensor[4,4] _t095D = [_t094D, _t0952, _t0957, _t095C];
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    real _t0960 = 0.e0;
    real _t0961 = 0.e0;
    vec4 _t0962 = [_t095E, _t095F, _t0960, _t0961];
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    real _t0966 = -0.1e1;
    vec4 _t0967 = [_t0963, _t0964, _t0965, _t0966];
    real _t0968 = 0.1e1;
    real _t0969 = -0.1e1;
    real _t096A = 0.e0;
    real _t096B = -0.5e0;
    vec4 _t096C = [_t0968, _t0969, _t096A, _t096B];
    real _t096D = 0.e0;
    real _t096E = 0.e0;
    real _t096F = 0.e0;
    real _t0970 = 0.1e1;
    vec4 _t0971 = [_t096D, _t096E, _t096F, _t0970];
    tensor[4,4] _t0972 = [_t0962, _t0967, _t096C, _t0971];
    real _t0973 = 0.e0;
    real _t0974 = 0.e0;
    real _t0975 = -0.1e1;
    real _t0976 = 0.1e1;
    vec4 _t0977 = [_t0973, _t0974, _t0975, _t0976];
    real _t0978 = 0.e0;
    real _t0979 = 0.1e1;
    real _t097A = 0.e0;
    real _t097B = 0.e0;
    vec4 _t097C = [_t0978, _t0979, _t097A, _t097B];
    real _t097D = 0.1e1;
    real _t097E = -0.1e1;
    real _t097F = 0.e0;
    real _t0980 = -0.5e0;
    vec4 _t0981 = [_t097D, _t097E, _t097F, _t0980];
    real _t0982 = 0.e0;
    real _t0983 = 0.e0;
    real _t0984 = 0.e0;
    real _t0985 = 0.1e1;
    vec4 _t0986 = [_t0982, _t0983, _t0984, _t0985];
    tensor[4,4] _t0987 = [_t0977, _t097C, _t0981, _t0986];
    real _t0988 = 0.e0;
    real _t0989 = -0.1e1;
    real _t098A = 0.e0;
    real _t098B = 0.e0;
    vec4 _t098C = [_t0988, _t0989, _t098A, _t098B];
    real _t098D = 0.e0;
    real _t098E = 0.e0;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.1e1;
    real _t0993 = -0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = -0.5e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.e0;
    real _t099A = 0.1e1;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    tensor[4,4] _t099C = [_t098C, _t0991, _t0996, _t099B];
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    real _t09A0 = -0.1e1;
    vec4 _t09A1 = [_t099D, _t099E, _t099F, _t09A0];
    real _t09A2 = 0.e0;
    real _t09A3 = -0.1e1;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.1e1;
    real _t09A8 = -0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = -0.5e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.e0;
    real _t09AF = 0.1e1;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    tensor[4,4] _t09B1 = [_t09A1, _t09A6, _t09AB, _t09B0];
    tensor[4,4][6] _t09B2 = {_t0948, _t095D, _t0972, _t0987, _t099C, _t09B1};
    real _t09B3 = 0.1e1;
    real _t09B4 = 0.e0;
    real _t09B5 = 0.1e1;
    real _t09B6 = 0.5e0;
    vec4 _t09B7 = [_t09B3, _t09B4, _t09B5, _t09B6];
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    real _t09BB = 0.e0;
    vec4 _t09BC = [_t09B8, _t09B9, _t09BA, _t09BB];
    real _t09BD = 0.e0;
    real _t09BE = 0.1e1;
    real _t09BF = 0.e0;
    real _t09C0 = 0.e0;
    vec4 _t09C1 = [_t09BD, _t09BE, _t09BF, _t09C0];
    real _t09C2 = 0.e0;
    real _t09C3 = 0.e0;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.1e1;
    vec4 _t09C6 = [_t09C2, _t09C3, _t09C4, _t09C5];
    tensor[4,4] _t09C7 = [_t09B7, _t09BC, _t09C1, _t09C6];
    real _t09C8 = 0.1e1;
    real _t09C9 = 0.e0;
    real _t09CA = 0.1e1;
    real _t09CB = 0.5e0;
    vec4 _t09CC = [_t09C8, _t09C9, _t09CA, _t09CB];
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    real _t09D0 = 0.e0;
    vec4 _t09D1 = [_t09CD, _t09CE, _t09CF, _t09D0];
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    real _t09D5 = 0.1e1;
    vec4 _t09D6 = [_t09D2, _t09D3, _t09D4, _t09D5];
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    real _t09DA = 0.1e1;
    vec4 _t09DB = [_t09D7, _t09D8, _t09D9, _t09DA];
    tensor[4,4] _t09DC = [_t09CC, _t09D1, _t09D6, _t09DB];
    real _t09DD = 0.1e1;
    real _t09DE = 0.e0;
    real _t09DF = 0.e0;
    real _t09E0 = 0.e0;
    vec4 _t09E1 = [_t09DD, _t09DE, _t09DF, _t09E0];
    real _t09E2 = 0.e0;
    real _t09E3 = 0.1e1;
    real _t09E4 = 0.e0;
    real _t09E5 = 0.e0;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.e0;
    real _t09E8 = 0.e0;
    real _t09E9 = 0.1e1;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = 0.e0;
    real _t09EE = 0.e0;
    real _t09EF = 0.1e1;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    tensor[4,4] _t09F1 = [_t09E1, _t09E6, _t09EB, _t09F0];
    real _t09F2 = 0.e0;
    real _t09F3 = -0.1e1;
    real _t09F4 = 0.e0;
    real _t09F5 = 0.e0;
    vec4 _t09F6 = [_t09F2, _t09F3, _t09F4, _t09F5];
    real _t09F7 = 0.1e1;
    real _t09F8 = 0.e0;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.e0;
    real _t09FD = 0.e0;
    real _t09FE = 0.1e1;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.e0;
    real _t0A04 = 0.1e1;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    tensor[4,4] _t0A06 = [_t09F6, _t09FB, _t0A00, _t0A05];
    real _t0A07 = -0.1e1;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.e0;
    real _t0A0A = 0.e0;
    vec4 _t0A0B = [_t0A07, _t0A08, _t0A09, _t0A0A];
    real _t0A0C = 0.e0;
    real _t0A0D = -0.1e1;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.e0;
    real _t0A13 = 0.1e1;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.e0;
    real _t0A19 = 0.1e1;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    tensor[4,4] _t0A1B = [_t0A0B, _t0A10, _t0A15, _t0A1A];
    real _t0A1C = 0.e0;
    real _t0A1D = 0.1e1;
    real _t0A1E = 0.e0;
    real _t0A1F = 0.e0;
    vec4 _t0A20 = [_t0A1C, _t0A1D, _t0A1E, _t0A1F];
    real _t0A21 = -0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = 0.e0;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.1e1;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    tensor[4,4] _t0A30 = [_t0A20, _t0A25, _t0A2A, _t0A2F];
    tensor[4,4][6] _t0A31 = {_t09C7, _t09DC, _t09F1, _t0A06, _t0A1B, _t0A30};
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    real _t0A34 = 0.1e1;
    real _t0A35 = 0.5e0;
    vec4 _t0A36 = [_t0A32, _t0A33, _t0A34, _t0A35];
    real _t0A37 = 0.e0;
    real _t0A38 = 0.1e1;
    real _t0A39 = 0.e0;
    real _t0A3A = 0.e0;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = -0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.e0;
    real _t0A43 = 0.e0;
    real _t0A44 = 0.1e1;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    tensor[4,4] _t0A46 = [_t0A36, _t0A3B, _t0A40, _t0A45];
    real _t0A47 = 0.e0;
    real _t0A48 = 0.1e1;
    real _t0A49 = 0.1e1;
    real _t0A4A = 0.5e0;
    vec4 _t0A4B = [_t0A47, _t0A48, _t0A49, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.1e1;
    real _t0A4E = 0.e0;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = -0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.1e1;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.e0;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.1e1;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    tensor[4,4] _t0A5B = [_t0A4B, _t0A50, _t0A55, _t0A5A];
    real _t0A5C = 0.e0;
    real _t0A5D = 0.1e1;
    real _t0A5E = 0.e0;
    real _t0A5F = 0.e0;
    vec4 _t0A60 = [_t0A5C, _t0A5D, _t0A5E, _t0A5F];
    real _t0A61 = -0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = 0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.e0;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.1e1;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    tensor[4,4] _t0A70 = [_t0A60, _t0A65, _t0A6A, _t0A6F];
    real _t0A71 = 0.1e1;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.e0;
    real _t0A74 = 0.e0;
    vec4 _t0A75 = [_t0A71, _t0A72, _t0A73, _t0A74];
    real _t0A76 = 0.e0;
    real _t0A77 = 0.1e1;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.e0;
    real _t0A7D = 0.1e1;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.e0;
    real _t0A83 = 0.1e1;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    tensor[4,4] _t0A85 = [_t0A75, _t0A7A, _t0A7F, _t0A84];
    real _t0A86 = 0.e0;
    real _t0A87 = -0.1e1;
    real _t0A88 = 0.e0;
    real _t0A89 = 0.e0;
    vec4 _t0A8A = [_t0A86, _t0A87, _t0A88, _t0A89];
    real _t0A8B = 0.1e1;
    real _t0A8C = 0.e0;
    real _t0A8D = 0.e0;
    real _t0A8E = 0.e0;
    vec4 _t0A8F = [_t0A8B, _t0A8C, _t0A8D, _t0A8E];
    real _t0A90 = 0.e0;
    real _t0A91 = 0.e0;
    real _t0A92 = 0.1e1;
    real _t0A93 = 0.e0;
    vec4 _t0A94 = [_t0A90, _t0A91, _t0A92, _t0A93];
    real _t0A95 = 0.e0;
    real _t0A96 = 0.e0;
    real _t0A97 = 0.e0;
    real _t0A98 = 0.1e1;
    vec4 _t0A99 = [_t0A95, _t0A96, _t0A97, _t0A98];
    tensor[4,4] _t0A9A = [_t0A8A, _t0A8F, _t0A94, _t0A99];
    real _t0A9B = -0.1e1;
    real _t0A9C = 0.e0;
    real _t0A9D = 0.e0;
    real _t0A9E = 0.e0;
    vec4 _t0A9F = [_t0A9B, _t0A9C, _t0A9D, _t0A9E];
    real _t0AA0 = 0.e0;
    real _t0AA1 = -0.1e1;
    real _t0AA2 = 0.e0;
    real _t0AA3 = 0.e0;
    vec4 _t0AA4 = [_t0AA0, _t0AA1, _t0AA2, _t0AA3];
    real _t0AA5 = 0.e0;
    real _t0AA6 = 0.e0;
    real _t0AA7 = 0.1e1;
    real _t0AA8 = 0.e0;
    vec4 _t0AA9 = [_t0AA5, _t0AA6, _t0AA7, _t0AA8];
    real _t0AAA = 0.e0;
    real _t0AAB = 0.e0;
    real _t0AAC = 0.e0;
    real _t0AAD = 0.1e1;
    vec4 _t0AAE = [_t0AAA, _t0AAB, _t0AAC, _t0AAD];
    tensor[4,4] _t0AAF = [_t0A9F, _t0AA4, _t0AA9, _t0AAE];
    tensor[4,4][6] _t0AB0 = {_t0A46, _t0A5B, _t0A70, _t0A85, _t0A9A, _t0AAF};
    real _t0AB1 = -0.1e1;
    real _t0AB2 = 0.e0;
    real _t0AB3 = 0.1e1;
    real _t0AB4 = 0.5e0;
    vec4 _t0AB5 = [_t0AB1, _t0AB2, _t0AB3, _t0AB4];
    real _t0AB6 = -0.1e1;
    real _t0AB7 = 0.e0;
    real _t0AB8 = 0.e0;
    real _t0AB9 = 0.e0;
    vec4 _t0ABA = [_t0AB6, _t0AB7, _t0AB8, _t0AB9];
    real _t0ABB = 0.e0;
    real _t0ABC = -0.1e1;
    real _t0ABD = 0.e0;
    real _t0ABE = 0.e0;
    vec4 _t0ABF = [_t0ABB, _t0ABC, _t0ABD, _t0ABE];
    real _t0AC0 = 0.e0;
    real _t0AC1 = 0.e0;
    real _t0AC2 = 0.e0;
    real _t0AC3 = 0.1e1;
    vec4 _t0AC4 = [_t0AC0, _t0AC1, _t0AC2, _t0AC3];
    tensor[4,4] _t0AC5 = [_t0AB5, _t0ABA, _t0ABF, _t0AC4];
    real _t0AC6 = -0.1e1;
    real _t0AC7 = 0.e0;
    real _t0AC8 = 0.1e1;
    real _t0AC9 = 0.5e0;
    vec4 _t0ACA = [_t0AC6, _t0AC7, _t0AC8, _t0AC9];
    real _t0ACB = -0.1e1;
    real _t0ACC = 0.e0;
    real _t0ACD = 0.e0;
    real _t0ACE = 0.e0;
    vec4 _t0ACF = [_t0ACB, _t0ACC, _t0ACD, _t0ACE];
    real _t0AD0 = 0.e0;
    real _t0AD1 = -0.1e1;
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.1e1;
    vec4 _t0AD4 = [_t0AD0, _t0AD1, _t0AD2, _t0AD3];
    real _t0AD5 = 0.e0;
    real _t0AD6 = 0.e0;
    real _t0AD7 = 0.e0;
    real _t0AD8 = 0.1e1;
    vec4 _t0AD9 = [_t0AD5, _t0AD6, _t0AD7, _t0AD8];
    tensor[4,4] _t0ADA = [_t0ACA, _t0ACF, _t0AD4, _t0AD9];
    real _t0ADB = -0.1e1;
    real _t0ADC = 0.e0;
    real _t0ADD = 0.e0;
    real _t0ADE = 0.e0;
    vec4 _t0ADF = [_t0ADB, _t0ADC, _t0ADD, _t0ADE];
    real _t0AE0 = 0.e0;
    real _t0AE1 = -0.1e1;
    real _t0AE2 = 0.e0;
    real _t0AE3 = 0.e0;
    vec4 _t0AE4 = [_t0AE0, _t0AE1, _t0AE2, _t0AE3];
    real _t0AE5 = 0.e0;
    real _t0AE6 = 0.e0;
    real _t0AE7 = 0.1e1;
    real _t0AE8 = 0.e0;
    vec4 _t0AE9 = [_t0AE5, _t0AE6, _t0AE7, _t0AE8];
    real _t0AEA = 0.e0;
    real _t0AEB = 0.e0;
    real _t0AEC = 0.e0;
    real _t0AED = 0.1e1;
    vec4 _t0AEE = [_t0AEA, _t0AEB, _t0AEC, _t0AED];
    tensor[4,4] _t0AEF = [_t0ADF, _t0AE4, _t0AE9, _t0AEE];
    real _t0AF0 = 0.e0;
    real _t0AF1 = 0.1e1;
    real _t0AF2 = 0.e0;
    real _t0AF3 = 0.e0;
    vec4 _t0AF4 = [_t0AF0, _t0AF1, _t0AF2, _t0AF3];
    real _t0AF5 = -0.1e1;
    real _t0AF6 = 0.e0;
    real _t0AF7 = 0.e0;
    real _t0AF8 = 0.e0;
    vec4 _t0AF9 = [_t0AF5, _t0AF6, _t0AF7, _t0AF8];
    real _t0AFA = 0.e0;
    real _t0AFB = 0.e0;
    real _t0AFC = 0.1e1;
    real _t0AFD = 0.e0;
    vec4 _t0AFE = [_t0AFA, _t0AFB, _t0AFC, _t0AFD];
    real _t0AFF = 0.e0;
    real _t0B00 = 0.e0;
    real _t0B01 = 0.e0;
    real _t0B02 = 0.1e1;
    vec4 _t0B03 = [_t0AFF, _t0B00, _t0B01, _t0B02];
    tensor[4,4] _t0B04 = [_t0AF4, _t0AF9, _t0AFE, _t0B03];
    real _t0B05 = 0.1e1;
    real _t0B06 = 0.e0;
    real _t0B07 = 0.e0;
    real _t0B08 = 0.e0;
    vec4 _t0B09 = [_t0B05, _t0B06, _t0B07, _t0B08];
    real _t0B0A = 0.e0;
    real _t0B0B = 0.1e1;
    real _t0B0C = 0.e0;
    real _t0B0D = 0.e0;
    vec4 _t0B0E = [_t0B0A, _t0B0B, _t0B0C, _t0B0D];
    real _t0B0F = 0.e0;
    real _t0B10 = 0.e0;
    real _t0B11 = 0.1e1;
    real _t0B12 = 0.e0;
    vec4 _t0B13 = [_t0B0F, _t0B10, _t0B11, _t0B12];
    real _t0B14 = 0.e0;
    real _t0B15 = 0.e0;
    real _t0B16 = 0.e0;
    real _t0B17 = 0.1e1;
    vec4 _t0B18 = [_t0B14, _t0B15, _t0B16, _t0B17];
    tensor[4,4] _t0B19 = [_t0B09, _t0B0E, _t0B13, _t0B18];
    real _t0B1A = 0.e0;
    real _t0B1B = -0.1e1;
    real _t0B1C = 0.e0;
    real _t0B1D = 0.e0;
    vec4 _t0B1E = [_t0B1A, _t0B1B, _t0B1C, _t0B1D];
    real _t0B1F = 0.1e1;
    real _t0B20 = 0.e0;
    real _t0B21 = 0.e0;
    real _t0B22 = 0.e0;
    vec4 _t0B23 = [_t0B1F, _t0B20, _t0B21, _t0B22];
    real _t0B24 = 0.e0;
    real _t0B25 = 0.e0;
    real _t0B26 = 0.1e1;
    real _t0B27 = 0.e0;
    vec4 _t0B28 = [_t0B24, _t0B25, _t0B26, _t0B27];
    real _t0B29 = 0.e0;
    real _t0B2A = 0.e0;
    real _t0B2B = 0.e0;
    real _t0B2C = 0.1e1;
    vec4 _t0B2D = [_t0B29, _t0B2A, _t0B2B, _t0B2C];
    tensor[4,4] _t0B2E = [_t0B1E, _t0B23, _t0B28, _t0B2D];
    tensor[4,4][6] _t0B2F = {_t0AC5, _t0ADA, _t0AEF, _t0B04, _t0B19, _t0B2E};
    real _t0B30 = 0.e0;
    real _t0B31 = -0.1e1;
    real _t0B32 = 0.1e1;
    real _t0B33 = 0.5e0;
    vec4 _t0B34 = [_t0B30, _t0B31, _t0B32, _t0B33];
    real _t0B35 = 0.e0;
    real _t0B36 = -0.1e1;
    real _t0B37 = 0.e0;
    real _t0B38 = 0.e0;
    vec4 _t0B39 = [_t0B35, _t0B36, _t0B37, _t0B38];
    real _t0B3A = 0.1e1;
    real _t0B3B = 0.e0;
    real _t0B3C = 0.e0;
    real _t0B3D = 0.e0;
    vec4 _t0B3E = [_t0B3A, _t0B3B, _t0B3C, _t0B3D];
    real _t0B3F = 0.e0;
    real _t0B40 = 0.e0;
    real _t0B41 = 0.e0;
    real _t0B42 = 0.1e1;
    vec4 _t0B43 = [_t0B3F, _t0B40, _t0B41, _t0B42];
    tensor[4,4] _t0B44 = [_t0B34, _t0B39, _t0B3E, _t0B43];
    real _t0B45 = 0.e0;
    real _t0B46 = -0.1e1;
    real _t0B47 = 0.1e1;
    real _t0B48 = 0.5e0;
    vec4 _t0B49 = [_t0B45, _t0B46, _t0B47, _t0B48];
    real _t0B4A = 0.e0;
    real _t0B4B = -0.1e1;
    real _t0B4C = 0.e0;
    real _t0B4D = 0.e0;
    vec4 _t0B4E = [_t0B4A, _t0B4B, _t0B4C, _t0B4D];
    real _t0B4F = 0.1e1;
    real _t0B50 = 0.e0;
    real _t0B51 = 0.e0;
    real _t0B52 = 0.1e1;
    vec4 _t0B53 = [_t0B4F, _t0B50, _t0B51, _t0B52];
    real _t0B54 = 0.e0;
    real _t0B55 = 0.e0;
    real _t0B56 = 0.e0;
    real _t0B57 = 0.1e1;
    vec4 _t0B58 = [_t0B54, _t0B55, _t0B56, _t0B57];
    tensor[4,4] _t0B59 = [_t0B49, _t0B4E, _t0B53, _t0B58];
    real _t0B5A = 0.e0;
    real _t0B5B = -0.1e1;
    real _t0B5C = 0.e0;
    real _t0B5D = 0.e0;
    vec4 _t0B5E = [_t0B5A, _t0B5B, _t0B5C, _t0B5D];
    real _t0B5F = 0.1e1;
    real _t0B60 = 0.e0;
    real _t0B61 = 0.e0;
    real _t0B62 = 0.e0;
    vec4 _t0B63 = [_t0B5F, _t0B60, _t0B61, _t0B62];
    real _t0B64 = 0.e0;
    real _t0B65 = 0.e0;
    real _t0B66 = 0.1e1;
    real _t0B67 = 0.e0;
    vec4 _t0B68 = [_t0B64, _t0B65, _t0B66, _t0B67];
    real _t0B69 = 0.e0;
    real _t0B6A = 0.e0;
    real _t0B6B = 0.e0;
    real _t0B6C = 0.1e1;
    vec4 _t0B6D = [_t0B69, _t0B6A, _t0B6B, _t0B6C];
    tensor[4,4] _t0B6E = [_t0B5E, _t0B63, _t0B68, _t0B6D];
    real _t0B6F = -0.1e1;
    real _t0B70 = 0.e0;
    real _t0B71 = 0.e0;
    real _t0B72 = 0.e0;
    vec4 _t0B73 = [_t0B6F, _t0B70, _t0B71, _t0B72];
    real _t0B74 = 0.e0;
    real _t0B75 = -0.1e1;
    real _t0B76 = 0.e0;
    real _t0B77 = 0.e0;
    vec4 _t0B78 = [_t0B74, _t0B75, _t0B76, _t0B77];
    real _t0B79 = 0.e0;
    real _t0B7A = 0.e0;
    real _t0B7B = 0.1e1;
    real _t0B7C = 0.e0;
    vec4 _t0B7D = [_t0B79, _t0B7A, _t0B7B, _t0B7C];
    real _t0B7E = 0.e0;
    real _t0B7F = 0.e0;
    real _t0B80 = 0.e0;
    real _t0B81 = 0.1e1;
    vec4 _t0B82 = [_t0B7E, _t0B7F, _t0B80, _t0B81];
    tensor[4,4] _t0B83 = [_t0B73, _t0B78, _t0B7D, _t0B82];
    real _t0B84 = 0.e0;
    real _t0B85 = 0.1e1;
    real _t0B86 = 0.e0;
    real _t0B87 = 0.e0;
    vec4 _t0B88 = [_t0B84, _t0B85, _t0B86, _t0B87];
    real _t0B89 = -0.1e1;
    real _t0B8A = 0.e0;
    real _t0B8B = 0.e0;
    real _t0B8C = 0.e0;
    vec4 _t0B8D = [_t0B89, _t0B8A, _t0B8B, _t0B8C];
    real _t0B8E = 0.e0;
    real _t0B8F = 0.e0;
    real _t0B90 = 0.1e1;
    real _t0B91 = 0.e0;
    vec4 _t0B92 = [_t0B8E, _t0B8F, _t0B90, _t0B91];
    real _t0B93 = 0.e0;
    real _t0B94 = 0.e0;
    real _t0B95 = 0.e0;
    real _t0B96 = 0.1e1;
    vec4 _t0B97 = [_t0B93, _t0B94, _t0B95, _t0B96];
    tensor[4,4] _t0B98 = [_t0B88, _t0B8D, _t0B92, _t0B97];
    real _t0B99 = 0.1e1;
    real _t0B9A = 0.e0;
    real _t0B9B = 0.e0;
    real _t0B9C = 0.e0;
    vec4 _t0B9D = [_t0B99, _t0B9A, _t0B9B, _t0B9C];
    real _t0B9E = 0.e0;
    real _t0B9F = 0.1e1;
    real _t0BA0 = 0.e0;
    real _t0BA1 = 0.e0;
    vec4 _t0BA2 = [_t0B9E, _t0B9F, _t0BA0, _t0BA1];
    real _t0BA3 = 0.e0;
    real _t0BA4 = 0.e0;
    real _t0BA5 = 0.1e1;
    real _t0BA6 = 0.e0;
    vec4 _t0BA7 = [_t0BA3, _t0BA4, _t0BA5, _t0BA6];
    real _t0BA8 = 0.e0;
    real _t0BA9 = 0.e0;
    real _t0BAA = 0.e0;
    real _t0BAB = 0.1e1;
    vec4 _t0BAC = [_t0BA8, _t0BA9, _t0BAA, _t0BAB];
    tensor[4,4] _t0BAD = [_t0B9D, _t0BA2, _t0BA7, _t0BAC];
    tensor[4,4][6] _t0BAE = {_t0B44, _t0B59, _t0B6E, _t0B83, _t0B98, _t0BAD};
    tensor[4,4][6][6] _t0BAF = {_t0933, _t09B2, _t0A31, _t0AB0, _t0B2F, _t0BAE};
    real _t0BB0 = time0597[1];
    int _t0BB1 = prim $r2i01B7 (_t0BB0);
    tensor[4,4][6] _t0BB2 = prim $sub01C0<tensor[4,4][6]; %6> (_t0BAF, _t0BB1);
    real _t0BB3 = time0597[1];
    int _t0BB4 = prim $r2i01B7 (_t0BB3);
    int[2] _t0BB5 = func nextCell4059B (_t0BB4, cellId0594, mesh0593);
    int _t0BB6 = 1;
    int _t0BB7 = prim $sub01C0<int; %2> (_t0BB5, _t0BB6);
    tensor[4,4] _t0BB8 = prim $sub01C0<tensor[4,4]; %6> (_t0BB2, _t0BB7);
    real _t0BB9 = time0597[0];
    vec3 _t0BBA = prim *0036<$[3]> (_t0BB9, dPos0596);
    vec3 _t0BBB = prim +0017<$[3]> (_t0BBA, refPos0595);
    real _t0BBC = _t0BBB[0];
    real _t0BBD = time0597[0];
    vec3 _t0BBE = prim *0036<$[3]> (_t0BBD, dPos0596);
    vec3 _t0BBF = prim +0017<$[3]> (_t0BBE, refPos0595);
    real _t0BC0 = _t0BBF[1];
    real _t0BC1 = time0597[0];
    vec3 _t0BC2 = prim *0036<$[3]> (_t0BC1, dPos0596);
    vec3 _t0BC3 = prim +0017<$[3]> (_t0BC2, refPos0595);
    real _t0BC4 = _t0BC3[2];
    real _t0BC5 = 0.1e1;
    vec4 _t0BC6 = [_t0BBC, _t0BC0, _t0BC4, _t0BC5];
    vec4 _t0BC7 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0BB8, _t0BC6);
    real _t0BC8 = _t0BC7[0];
    real _t0BC9 = 0.1e1;
    real _t0BCA = 0.e0;
    real _t0BCB = 0.e0;
    real _t0BCC = 0.e0;
    vec4 _t0BCD = [_t0BC9, _t0BCA, _t0BCB, _t0BCC];
    real _t0BCE = 0.e0;
    real _t0BCF = 0.1e1;
    real _t0BD0 = 0.e0;
    real _t0BD1 = 0.e0;
    vec4 _t0BD2 = [_t0BCE, _t0BCF, _t0BD0, _t0BD1];
    real _t0BD3 = 0.e0;
    real _t0BD4 = 0.e0;
    real _t0BD5 = 0.1e1;
    real _t0BD6 = 0.e0;
    vec4 _t0BD7 = [_t0BD3, _t0BD4, _t0BD5, _t0BD6];
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    real _t0BDA = 0.e0;
    real _t0BDB = 0.1e1;
    vec4 _t0BDC = [_t0BD8, _t0BD9, _t0BDA, _t0BDB];
    tensor[4,4] _t0BDD = [_t0BCD, _t0BD2, _t0BD7, _t0BDC];
    real _t0BDE = 0.1e1;
    real _t0BDF = 0.e0;
    real _t0BE0 = 0.e0;
    real _t0BE1 = 0.e0;
    vec4 _t0BE2 = [_t0BDE, _t0BDF, _t0BE0, _t0BE1];
    real _t0BE3 = 0.e0;
    real _t0BE4 = 0.1e1;
    real _t0BE5 = 0.e0;
    real _t0BE6 = 0.e0;
    vec4 _t0BE7 = [_t0BE3, _t0BE4, _t0BE5, _t0BE6];
    real _t0BE8 = 0.e0;
    real _t0BE9 = 0.e0;
    real _t0BEA = 0.1e1;
    real _t0BEB = 0.1e1;
    vec4 _t0BEC = [_t0BE8, _t0BE9, _t0BEA, _t0BEB];
    real _t0BED = 0.e0;
    real _t0BEE = 0.e0;
    real _t0BEF = 0.e0;
    real _t0BF0 = 0.1e1;
    vec4 _t0BF1 = [_t0BED, _t0BEE, _t0BEF, _t0BF0];
    tensor[4,4] _t0BF2 = [_t0BE2, _t0BE7, _t0BEC, _t0BF1];
    real _t0BF3 = 0.e0;
    real _t0BF4 = 0.1e1;
    real _t0BF5 = 0.e0;
    real _t0BF6 = 0.e0;
    vec4 _t0BF7 = [_t0BF3, _t0BF4, _t0BF5, _t0BF6];
    real _t0BF8 = 0.e0;
    real _t0BF9 = 0.e0;
    real _t0BFA = 0.1e1;
    real _t0BFB = 0.e0;
    vec4 _t0BFC = [_t0BF8, _t0BF9, _t0BFA, _t0BFB];
    real _t0BFD = 0.1e1;
    real _t0BFE = -0.1e1;
    real _t0BFF = 0.e0;
    real _t0C00 = -0.5e0;
    vec4 _t0C01 = [_t0BFD, _t0BFE, _t0BFF, _t0C00];
    real _t0C02 = 0.e0;
    real _t0C03 = 0.e0;
    real _t0C04 = 0.e0;
    real _t0C05 = 0.1e1;
    vec4 _t0C06 = [_t0C02, _t0C03, _t0C04, _t0C05];
    tensor[4,4] _t0C07 = [_t0BF7, _t0BFC, _t0C01, _t0C06];
    real _t0C08 = 0.e0;
    real _t0C09 = 0.e0;
    real _t0C0A = -0.1e1;
    real _t0C0B = 0.e0;
    vec4 _t0C0C = [_t0C08, _t0C09, _t0C0A, _t0C0B];
    real _t0C0D = 0.e0;
    real _t0C0E = 0.1e1;
    real _t0C0F = 0.e0;
    real _t0C10 = 0.e0;
    vec4 _t0C11 = [_t0C0D, _t0C0E, _t0C0F, _t0C10];
    real _t0C12 = 0.1e1;
    real _t0C13 = -0.1e1;
    real _t0C14 = 0.e0;
    real _t0C15 = -0.5e0;
    vec4 _t0C16 = [_t0C12, _t0C13, _t0C14, _t0C15];
    real _t0C17 = 0.e0;
    real _t0C18 = 0.e0;
    real _t0C19 = 0.e0;
    real _t0C1A = 0.1e1;
    vec4 _t0C1B = [_t0C17, _t0C18, _t0C19, _t0C1A];
    tensor[4,4] _t0C1C = [_t0C0C, _t0C11, _t0C16, _t0C1B];
    real _t0C1D = 0.e0;
    real _t0C1E = -0.1e1;
    real _t0C1F = 0.e0;
    real _t0C20 = 0.e0;
    vec4 _t0C21 = [_t0C1D, _t0C1E, _t0C1F, _t0C20];
    real _t0C22 = 0.e0;
    real _t0C23 = 0.e0;
    real _t0C24 = -0.1e1;
    real _t0C25 = 0.e0;
    vec4 _t0C26 = [_t0C22, _t0C23, _t0C24, _t0C25];
    real _t0C27 = 0.1e1;
    real _t0C28 = -0.1e1;
    real _t0C29 = 0.e0;
    real _t0C2A = -0.5e0;
    vec4 _t0C2B = [_t0C27, _t0C28, _t0C29, _t0C2A];
    real _t0C2C = 0.e0;
    real _t0C2D = 0.e0;
    real _t0C2E = 0.e0;
    real _t0C2F = 0.1e1;
    vec4 _t0C30 = [_t0C2C, _t0C2D, _t0C2E, _t0C2F];
    tensor[4,4] _t0C31 = [_t0C21, _t0C26, _t0C2B, _t0C30];
    real _t0C32 = 0.e0;
    real _t0C33 = 0.e0;
    real _t0C34 = 0.1e1;
    real _t0C35 = 0.e0;
    vec4 _t0C36 = [_t0C32, _t0C33, _t0C34, _t0C35];
    real _t0C37 = 0.e0;
    real _t0C38 = -0.1e1;
    real _t0C39 = 0.e0;
    real _t0C3A = 0.e0;
    vec4 _t0C3B = [_t0C37, _t0C38, _t0C39, _t0C3A];
    real _t0C3C = 0.1e1;
    real _t0C3D = -0.1e1;
    real _t0C3E = 0.e0;
    real _t0C3F = -0.5e0;
    vec4 _t0C40 = [_t0C3C, _t0C3D, _t0C3E, _t0C3F];
    real _t0C41 = 0.e0;
    real _t0C42 = 0.e0;
    real _t0C43 = 0.e0;
    real _t0C44 = 0.1e1;
    vec4 _t0C45 = [_t0C41, _t0C42, _t0C43, _t0C44];
    tensor[4,4] _t0C46 = [_t0C36, _t0C3B, _t0C40, _t0C45];
    tensor[4,4][6] _t0C47 = {_t0BDD, _t0BF2, _t0C07, _t0C1C, _t0C31, _t0C46};
    real _t0C48 = 0.1e1;
    real _t0C49 = 0.e0;
    real _t0C4A = 0.e0;
    real _t0C4B = 0.e0;
    vec4 _t0C4C = [_t0C48, _t0C49, _t0C4A, _t0C4B];
    real _t0C4D = 0.e0;
    real _t0C4E = 0.1e1;
    real _t0C4F = 0.e0;
    real _t0C50 = 0.e0;
    vec4 _t0C51 = [_t0C4D, _t0C4E, _t0C4F, _t0C50];
    real _t0C52 = 0.e0;
    real _t0C53 = 0.e0;
    real _t0C54 = 0.1e1;
    real _t0C55 = -0.1e1;
    vec4 _t0C56 = [_t0C52, _t0C53, _t0C54, _t0C55];
    real _t0C57 = 0.e0;
    real _t0C58 = 0.e0;
    real _t0C59 = 0.e0;
    real _t0C5A = 0.1e1;
    vec4 _t0C5B = [_t0C57, _t0C58, _t0C59, _t0C5A];
    tensor[4,4] _t0C5C = [_t0C4C, _t0C51, _t0C56, _t0C5B];
    real _t0C5D = 0.1e1;
    real _t0C5E = 0.e0;
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    vec4 _t0C61 = [_t0C5D, _t0C5E, _t0C5F, _t0C60];
    real _t0C62 = 0.e0;
    real _t0C63 = 0.1e1;
    real _t0C64 = 0.e0;
    real _t0C65 = 0.e0;
    vec4 _t0C66 = [_t0C62, _t0C63, _t0C64, _t0C65];
    real _t0C67 = 0.e0;
    real _t0C68 = 0.e0;
    real _t0C69 = 0.1e1;
    real _t0C6A = 0.e0;
    vec4 _t0C6B = [_t0C67, _t0C68, _t0C69, _t0C6A];
    real _t0C6C = 0.e0;
    real _t0C6D = 0.e0;
    real _t0C6E = 0.e0;
    real _t0C6F = 0.1e1;
    vec4 _t0C70 = [_t0C6C, _t0C6D, _t0C6E, _t0C6F];
    tensor[4,4] _t0C71 = [_t0C61, _t0C66, _t0C6B, _t0C70];
    real _t0C72 = 0.e0;
    real _t0C73 = 0.1e1;
    real _t0C74 = 0.e0;
    real _t0C75 = 0.e0;
    vec4 _t0C76 = [_t0C72, _t0C73, _t0C74, _t0C75];
    real _t0C77 = 0.e0;
    real _t0C78 = 0.e0;
    real _t0C79 = 0.1e1;
    real _t0C7A = -0.1e1;
    vec4 _t0C7B = [_t0C77, _t0C78, _t0C79, _t0C7A];
    real _t0C7C = 0.1e1;
    real _t0C7D = -0.1e1;
    real _t0C7E = 0.e0;
    real _t0C7F = -0.5e0;
    vec4 _t0C80 = [_t0C7C, _t0C7D, _t0C7E, _t0C7F];
    real _t0C81 = 0.e0;
    real _t0C82 = 0.e0;
    real _t0C83 = 0.e0;
    real _t0C84 = 0.1e1;
    vec4 _t0C85 = [_t0C81, _t0C82, _t0C83, _t0C84];
    tensor[4,4] _t0C86 = [_t0C76, _t0C7B, _t0C80, _t0C85];
    real _t0C87 = 0.e0;
    real _t0C88 = 0.e0;
    real _t0C89 = -0.1e1;
    real _t0C8A = 0.1e1;
    vec4 _t0C8B = [_t0C87, _t0C88, _t0C89, _t0C8A];
    real _t0C8C = 0.e0;
    real _t0C8D = 0.1e1;
    real _t0C8E = 0.e0;
    real _t0C8F = 0.e0;
    vec4 _t0C90 = [_t0C8C, _t0C8D, _t0C8E, _t0C8F];
    real _t0C91 = 0.1e1;
    real _t0C92 = -0.1e1;
    real _t0C93 = 0.e0;
    real _t0C94 = -0.5e0;
    vec4 _t0C95 = [_t0C91, _t0C92, _t0C93, _t0C94];
    real _t0C96 = 0.e0;
    real _t0C97 = 0.e0;
    real _t0C98 = 0.e0;
    real _t0C99 = 0.1e1;
    vec4 _t0C9A = [_t0C96, _t0C97, _t0C98, _t0C99];
    tensor[4,4] _t0C9B = [_t0C8B, _t0C90, _t0C95, _t0C9A];
    real _t0C9C = 0.e0;
    real _t0C9D = -0.1e1;
    real _t0C9E = 0.e0;
    real _t0C9F = 0.e0;
    vec4 _t0CA0 = [_t0C9C, _t0C9D, _t0C9E, _t0C9F];
    real _t0CA1 = 0.e0;
    real _t0CA2 = 0.e0;
    real _t0CA3 = -0.1e1;
    real _t0CA4 = 0.1e1;
    vec4 _t0CA5 = [_t0CA1, _t0CA2, _t0CA3, _t0CA4];
    real _t0CA6 = 0.1e1;
    real _t0CA7 = -0.1e1;
    real _t0CA8 = 0.e0;
    real _t0CA9 = -0.5e0;
    vec4 _t0CAA = [_t0CA6, _t0CA7, _t0CA8, _t0CA9];
    real _t0CAB = 0.e0;
    real _t0CAC = 0.e0;
    real _t0CAD = 0.e0;
    real _t0CAE = 0.1e1;
    vec4 _t0CAF = [_t0CAB, _t0CAC, _t0CAD, _t0CAE];
    tensor[4,4] _t0CB0 = [_t0CA0, _t0CA5, _t0CAA, _t0CAF];
    real _t0CB1 = 0.e0;
    real _t0CB2 = 0.e0;
    real _t0CB3 = 0.1e1;
    real _t0CB4 = -0.1e1;
    vec4 _t0CB5 = [_t0CB1, _t0CB2, _t0CB3, _t0CB4];
    real _t0CB6 = 0.e0;
    real _t0CB7 = -0.1e1;
    real _t0CB8 = 0.e0;
    real _t0CB9 = 0.e0;
    vec4 _t0CBA = [_t0CB6, _t0CB7, _t0CB8, _t0CB9];
    real _t0CBB = 0.1e1;
    real _t0CBC = -0.1e1;
    real _t0CBD = 0.e0;
    real _t0CBE = -0.5e0;
    vec4 _t0CBF = [_t0CBB, _t0CBC, _t0CBD, _t0CBE];
    real _t0CC0 = 0.e0;
    real _t0CC1 = 0.e0;
    real _t0CC2 = 0.e0;
    real _t0CC3 = 0.1e1;
    vec4 _t0CC4 = [_t0CC0, _t0CC1, _t0CC2, _t0CC3];
    tensor[4,4] _t0CC5 = [_t0CB5, _t0CBA, _t0CBF, _t0CC4];
    tensor[4,4][6] _t0CC6 = {_t0C5C, _t0C71, _t0C86, _t0C9B, _t0CB0, _t0CC5};
    real _t0CC7 = 0.1e1;
    real _t0CC8 = 0.e0;
    real _t0CC9 = 0.1e1;
    real _t0CCA = 0.5e0;
    vec4 _t0CCB = [_t0CC7, _t0CC8, _t0CC9, _t0CCA];
    real _t0CCC = 0.1e1;
    real _t0CCD = 0.e0;
    real _t0CCE = 0.e0;
    real _t0CCF = 0.e0;
    vec4 _t0CD0 = [_t0CCC, _t0CCD, _t0CCE, _t0CCF];
    real _t0CD1 = 0.e0;
    real _t0CD2 = 0.1e1;
    real _t0CD3 = 0.e0;
    real _t0CD4 = 0.e0;
    vec4 _t0CD5 = [_t0CD1, _t0CD2, _t0CD3, _t0CD4];
    real _t0CD6 = 0.e0;
    real _t0CD7 = 0.e0;
    real _t0CD8 = 0.e0;
    real _t0CD9 = 0.1e1;
    vec4 _t0CDA = [_t0CD6, _t0CD7, _t0CD8, _t0CD9];
    tensor[4,4] _t0CDB = [_t0CCB, _t0CD0, _t0CD5, _t0CDA];
    real _t0CDC = 0.1e1;
    real _t0CDD = 0.e0;
    real _t0CDE = 0.1e1;
    real _t0CDF = 0.5e0;
    vec4 _t0CE0 = [_t0CDC, _t0CDD, _t0CDE, _t0CDF];
    real _t0CE1 = 0.1e1;
    real _t0CE2 = 0.e0;
    real _t0CE3 = 0.e0;
    real _t0CE4 = 0.e0;
    vec4 _t0CE5 = [_t0CE1, _t0CE2, _t0CE3, _t0CE4];
    real _t0CE6 = 0.e0;
    real _t0CE7 = 0.1e1;
    real _t0CE8 = 0.e0;
    real _t0CE9 = 0.1e1;
    vec4 _t0CEA = [_t0CE6, _t0CE7, _t0CE8, _t0CE9];
    real _t0CEB = 0.e0;
    real _t0CEC = 0.e0;
    real _t0CED = 0.e0;
    real _t0CEE = 0.1e1;
    vec4 _t0CEF = [_t0CEB, _t0CEC, _t0CED, _t0CEE];
    tensor[4,4] _t0CF0 = [_t0CE0, _t0CE5, _t0CEA, _t0CEF];
    real _t0CF1 = 0.1e1;
    real _t0CF2 = 0.e0;
    real _t0CF3 = 0.e0;
    real _t0CF4 = 0.e0;
    vec4 _t0CF5 = [_t0CF1, _t0CF2, _t0CF3, _t0CF4];
    real _t0CF6 = 0.e0;
    real _t0CF7 = 0.1e1;
    real _t0CF8 = 0.e0;
    real _t0CF9 = 0.e0;
    vec4 _t0CFA = [_t0CF6, _t0CF7, _t0CF8, _t0CF9];
    real _t0CFB = 0.e0;
    real _t0CFC = 0.e0;
    real _t0CFD = 0.1e1;
    real _t0CFE = 0.e0;
    vec4 _t0CFF = [_t0CFB, _t0CFC, _t0CFD, _t0CFE];
    real _t0D00 = 0.e0;
    real _t0D01 = 0.e0;
    real _t0D02 = 0.e0;
    real _t0D03 = 0.1e1;
    vec4 _t0D04 = [_t0D00, _t0D01, _t0D02, _t0D03];
    tensor[4,4] _t0D05 = [_t0CF5, _t0CFA, _t0CFF, _t0D04];
    real _t0D06 = 0.e0;
    real _t0D07 = -0.1e1;
    real _t0D08 = 0.e0;
    real _t0D09 = 0.e0;
    vec4 _t0D0A = [_t0D06, _t0D07, _t0D08, _t0D09];
    real _t0D0B = 0.1e1;
    real _t0D0C = 0.e0;
    real _t0D0D = 0.e0;
    real _t0D0E = 0.e0;
    vec4 _t0D0F = [_t0D0B, _t0D0C, _t0D0D, _t0D0E];
    real _t0D10 = 0.e0;
    real _t0D11 = 0.e0;
    real _t0D12 = 0.1e1;
    real _t0D13 = 0.e0;
    vec4 _t0D14 = [_t0D10, _t0D11, _t0D12, _t0D13];
    real _t0D15 = 0.e0;
    real _t0D16 = 0.e0;
    real _t0D17 = 0.e0;
    real _t0D18 = 0.1e1;
    vec4 _t0D19 = [_t0D15, _t0D16, _t0D17, _t0D18];
    tensor[4,4] _t0D1A = [_t0D0A, _t0D0F, _t0D14, _t0D19];
    real _t0D1B = -0.1e1;
    real _t0D1C = 0.e0;
    real _t0D1D = 0.e0;
    real _t0D1E = 0.e0;
    vec4 _t0D1F = [_t0D1B, _t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = 0.e0;
    real _t0D21 = -0.1e1;
    real _t0D22 = 0.e0;
    real _t0D23 = 0.e0;
    vec4 _t0D24 = [_t0D20, _t0D21, _t0D22, _t0D23];
    real _t0D25 = 0.e0;
    real _t0D26 = 0.e0;
    real _t0D27 = 0.1e1;
    real _t0D28 = 0.e0;
    vec4 _t0D29 = [_t0D25, _t0D26, _t0D27, _t0D28];
    real _t0D2A = 0.e0;
    real _t0D2B = 0.e0;
    real _t0D2C = 0.e0;
    real _t0D2D = 0.1e1;
    vec4 _t0D2E = [_t0D2A, _t0D2B, _t0D2C, _t0D2D];
    tensor[4,4] _t0D2F = [_t0D1F, _t0D24, _t0D29, _t0D2E];
    real _t0D30 = 0.e0;
    real _t0D31 = 0.1e1;
    real _t0D32 = 0.e0;
    real _t0D33 = 0.e0;
    vec4 _t0D34 = [_t0D30, _t0D31, _t0D32, _t0D33];
    real _t0D35 = -0.1e1;
    real _t0D36 = 0.e0;
    real _t0D37 = 0.e0;
    real _t0D38 = 0.e0;
    vec4 _t0D39 = [_t0D35, _t0D36, _t0D37, _t0D38];
    real _t0D3A = 0.e0;
    real _t0D3B = 0.e0;
    real _t0D3C = 0.1e1;
    real _t0D3D = 0.e0;
    vec4 _t0D3E = [_t0D3A, _t0D3B, _t0D3C, _t0D3D];
    real _t0D3F = 0.e0;
    real _t0D40 = 0.e0;
    real _t0D41 = 0.e0;
    real _t0D42 = 0.1e1;
    vec4 _t0D43 = [_t0D3F, _t0D40, _t0D41, _t0D42];
    tensor[4,4] _t0D44 = [_t0D34, _t0D39, _t0D3E, _t0D43];
    tensor[4,4][6] _t0D45 = {_t0CDB, _t0CF0, _t0D05, _t0D1A, _t0D2F, _t0D44};
    real _t0D46 = 0.e0;
    real _t0D47 = 0.1e1;
    real _t0D48 = 0.1e1;
    real _t0D49 = 0.5e0;
    vec4 _t0D4A = [_t0D46, _t0D47, _t0D48, _t0D49];
    real _t0D4B = 0.e0;
    real _t0D4C = 0.1e1;
    real _t0D4D = 0.e0;
    real _t0D4E = 0.e0;
    vec4 _t0D4F = [_t0D4B, _t0D4C, _t0D4D, _t0D4E];
    real _t0D50 = -0.1e1;
    real _t0D51 = 0.e0;
    real _t0D52 = 0.e0;
    real _t0D53 = 0.e0;
    vec4 _t0D54 = [_t0D50, _t0D51, _t0D52, _t0D53];
    real _t0D55 = 0.e0;
    real _t0D56 = 0.e0;
    real _t0D57 = 0.e0;
    real _t0D58 = 0.1e1;
    vec4 _t0D59 = [_t0D55, _t0D56, _t0D57, _t0D58];
    tensor[4,4] _t0D5A = [_t0D4A, _t0D4F, _t0D54, _t0D59];
    real _t0D5B = 0.e0;
    real _t0D5C = 0.1e1;
    real _t0D5D = 0.1e1;
    real _t0D5E = 0.5e0;
    vec4 _t0D5F = [_t0D5B, _t0D5C, _t0D5D, _t0D5E];
    real _t0D60 = 0.e0;
    real _t0D61 = 0.1e1;
    real _t0D62 = 0.e0;
    real _t0D63 = 0.e0;
    vec4 _t0D64 = [_t0D60, _t0D61, _t0D62, _t0D63];
    real _t0D65 = -0.1e1;
    real _t0D66 = 0.e0;
    real _t0D67 = 0.e0;
    real _t0D68 = 0.1e1;
    vec4 _t0D69 = [_t0D65, _t0D66, _t0D67, _t0D68];
    real _t0D6A = 0.e0;
    real _t0D6B = 0.e0;
    real _t0D6C = 0.e0;
    real _t0D6D = 0.1e1;
    vec4 _t0D6E = [_t0D6A, _t0D6B, _t0D6C, _t0D6D];
    tensor[4,4] _t0D6F = [_t0D5F, _t0D64, _t0D69, _t0D6E];
    real _t0D70 = 0.e0;
    real _t0D71 = 0.1e1;
    real _t0D72 = 0.e0;
    real _t0D73 = 0.e0;
    vec4 _t0D74 = [_t0D70, _t0D71, _t0D72, _t0D73];
    real _t0D75 = -0.1e1;
    real _t0D76 = 0.e0;
    real _t0D77 = 0.e0;
    real _t0D78 = 0.e0;
    vec4 _t0D79 = [_t0D75, _t0D76, _t0D77, _t0D78];
    real _t0D7A = 0.e0;
    real _t0D7B = 0.e0;
    real _t0D7C = 0.1e1;
    real _t0D7D = 0.e0;
    vec4 _t0D7E = [_t0D7A, _t0D7B, _t0D7C, _t0D7D];
    real _t0D7F = 0.e0;
    real _t0D80 = 0.e0;
    real _t0D81 = 0.e0;
    real _t0D82 = 0.1e1;
    vec4 _t0D83 = [_t0D7F, _t0D80, _t0D81, _t0D82];
    tensor[4,4] _t0D84 = [_t0D74, _t0D79, _t0D7E, _t0D83];
    real _t0D85 = 0.1e1;
    real _t0D86 = 0.e0;
    real _t0D87 = 0.e0;
    real _t0D88 = 0.e0;
    vec4 _t0D89 = [_t0D85, _t0D86, _t0D87, _t0D88];
    real _t0D8A = 0.e0;
    real _t0D8B = 0.1e1;
    real _t0D8C = 0.e0;
    real _t0D8D = 0.e0;
    vec4 _t0D8E = [_t0D8A, _t0D8B, _t0D8C, _t0D8D];
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    real _t0D91 = 0.1e1;
    real _t0D92 = 0.e0;
    vec4 _t0D93 = [_t0D8F, _t0D90, _t0D91, _t0D92];
    real _t0D94 = 0.e0;
    real _t0D95 = 0.e0;
    real _t0D96 = 0.e0;
    real _t0D97 = 0.1e1;
    vec4 _t0D98 = [_t0D94, _t0D95, _t0D96, _t0D97];
    tensor[4,4] _t0D99 = [_t0D89, _t0D8E, _t0D93, _t0D98];
    real _t0D9A = 0.e0;
    real _t0D9B = -0.1e1;
    real _t0D9C = 0.e0;
    real _t0D9D = 0.e0;
    vec4 _t0D9E = [_t0D9A, _t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.1e1;
    real _t0DA0 = 0.e0;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.e0;
    vec4 _t0DA3 = [_t0D9F, _t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = 0.e0;
    real _t0DA5 = 0.e0;
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.e0;
    vec4 _t0DA8 = [_t0DA4, _t0DA5, _t0DA6, _t0DA7];
    real _t0DA9 = 0.e0;
    real _t0DAA = 0.e0;
    real _t0DAB = 0.e0;
    real _t0DAC = 0.1e1;
    vec4 _t0DAD = [_t0DA9, _t0DAA, _t0DAB, _t0DAC];
    tensor[4,4] _t0DAE = [_t0D9E, _t0DA3, _t0DA8, _t0DAD];
    real _t0DAF = -0.1e1;
    real _t0DB0 = 0.e0;
    real _t0DB1 = 0.e0;
    real _t0DB2 = 0.e0;
    vec4 _t0DB3 = [_t0DAF, _t0DB0, _t0DB1, _t0DB2];
    real _t0DB4 = 0.e0;
    real _t0DB5 = -0.1e1;
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.e0;
    vec4 _t0DB8 = [_t0DB4, _t0DB5, _t0DB6, _t0DB7];
    real _t0DB9 = 0.e0;
    real _t0DBA = 0.e0;
    real _t0DBB = 0.1e1;
    real _t0DBC = 0.e0;
    vec4 _t0DBD = [_t0DB9, _t0DBA, _t0DBB, _t0DBC];
    real _t0DBE = 0.e0;
    real _t0DBF = 0.e0;
    real _t0DC0 = 0.e0;
    real _t0DC1 = 0.1e1;
    vec4 _t0DC2 = [_t0DBE, _t0DBF, _t0DC0, _t0DC1];
    tensor[4,4] _t0DC3 = [_t0DB3, _t0DB8, _t0DBD, _t0DC2];
    tensor[4,4][6] _t0DC4 = {_t0D5A, _t0D6F, _t0D84, _t0D99, _t0DAE, _t0DC3};
    real _t0DC5 = -0.1e1;
    real _t0DC6 = 0.e0;
    real _t0DC7 = 0.1e1;
    real _t0DC8 = 0.5e0;
    vec4 _t0DC9 = [_t0DC5, _t0DC6, _t0DC7, _t0DC8];
    real _t0DCA = -0.1e1;
    real _t0DCB = 0.e0;
    real _t0DCC = 0.e0;
    real _t0DCD = 0.e0;
    vec4 _t0DCE = [_t0DCA, _t0DCB, _t0DCC, _t0DCD];
    real _t0DCF = 0.e0;
    real _t0DD0 = -0.1e1;
    real _t0DD1 = 0.e0;
    real _t0DD2 = 0.e0;
    vec4 _t0DD3 = [_t0DCF, _t0DD0, _t0DD1, _t0DD2];
    real _t0DD4 = 0.e0;
    real _t0DD5 = 0.e0;
    real _t0DD6 = 0.e0;
    real _t0DD7 = 0.1e1;
    vec4 _t0DD8 = [_t0DD4, _t0DD5, _t0DD6, _t0DD7];
    tensor[4,4] _t0DD9 = [_t0DC9, _t0DCE, _t0DD3, _t0DD8];
    real _t0DDA = -0.1e1;
    real _t0DDB = 0.e0;
    real _t0DDC = 0.1e1;
    real _t0DDD = 0.5e0;
    vec4 _t0DDE = [_t0DDA, _t0DDB, _t0DDC, _t0DDD];
    real _t0DDF = -0.1e1;
    real _t0DE0 = 0.e0;
    real _t0DE1 = 0.e0;
    real _t0DE2 = 0.e0;
    vec4 _t0DE3 = [_t0DDF, _t0DE0, _t0DE1, _t0DE2];
    real _t0DE4 = 0.e0;
    real _t0DE5 = -0.1e1;
    real _t0DE6 = 0.e0;
    real _t0DE7 = 0.1e1;
    vec4 _t0DE8 = [_t0DE4, _t0DE5, _t0DE6, _t0DE7];
    real _t0DE9 = 0.e0;
    real _t0DEA = 0.e0;
    real _t0DEB = 0.e0;
    real _t0DEC = 0.1e1;
    vec4 _t0DED = [_t0DE9, _t0DEA, _t0DEB, _t0DEC];
    tensor[4,4] _t0DEE = [_t0DDE, _t0DE3, _t0DE8, _t0DED];
    real _t0DEF = -0.1e1;
    real _t0DF0 = 0.e0;
    real _t0DF1 = 0.e0;
    real _t0DF2 = 0.e0;
    vec4 _t0DF3 = [_t0DEF, _t0DF0, _t0DF1, _t0DF2];
    real _t0DF4 = 0.e0;
    real _t0DF5 = -0.1e1;
    real _t0DF6 = 0.e0;
    real _t0DF7 = 0.e0;
    vec4 _t0DF8 = [_t0DF4, _t0DF5, _t0DF6, _t0DF7];
    real _t0DF9 = 0.e0;
    real _t0DFA = 0.e0;
    real _t0DFB = 0.1e1;
    real _t0DFC = 0.e0;
    vec4 _t0DFD = [_t0DF9, _t0DFA, _t0DFB, _t0DFC];
    real _t0DFE = 0.e0;
    real _t0DFF = 0.e0;
    real _t0E00 = 0.e0;
    real _t0E01 = 0.1e1;
    vec4 _t0E02 = [_t0DFE, _t0DFF, _t0E00, _t0E01];
    tensor[4,4] _t0E03 = [_t0DF3, _t0DF8, _t0DFD, _t0E02];
    real _t0E04 = 0.e0;
    real _t0E05 = 0.1e1;
    real _t0E06 = 0.e0;
    real _t0E07 = 0.e0;
    vec4 _t0E08 = [_t0E04, _t0E05, _t0E06, _t0E07];
    real _t0E09 = -0.1e1;
    real _t0E0A = 0.e0;
    real _t0E0B = 0.e0;
    real _t0E0C = 0.e0;
    vec4 _t0E0D = [_t0E09, _t0E0A, _t0E0B, _t0E0C];
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    real _t0E10 = 0.1e1;
    real _t0E11 = 0.e0;
    vec4 _t0E12 = [_t0E0E, _t0E0F, _t0E10, _t0E11];
    real _t0E13 = 0.e0;
    real _t0E14 = 0.e0;
    real _t0E15 = 0.e0;
    real _t0E16 = 0.1e1;
    vec4 _t0E17 = [_t0E13, _t0E14, _t0E15, _t0E16];
    tensor[4,4] _t0E18 = [_t0E08, _t0E0D, _t0E12, _t0E17];
    real _t0E19 = 0.1e1;
    real _t0E1A = 0.e0;
    real _t0E1B = 0.e0;
    real _t0E1C = 0.e0;
    vec4 _t0E1D = [_t0E19, _t0E1A, _t0E1B, _t0E1C];
    real _t0E1E = 0.e0;
    real _t0E1F = 0.1e1;
    real _t0E20 = 0.e0;
    real _t0E21 = 0.e0;
    vec4 _t0E22 = [_t0E1E, _t0E1F, _t0E20, _t0E21];
    real _t0E23 = 0.e0;
    real _t0E24 = 0.e0;
    real _t0E25 = 0.1e1;
    real _t0E26 = 0.e0;
    vec4 _t0E27 = [_t0E23, _t0E24, _t0E25, _t0E26];
    real _t0E28 = 0.e0;
    real _t0E29 = 0.e0;
    real _t0E2A = 0.e0;
    real _t0E2B = 0.1e1;
    vec4 _t0E2C = [_t0E28, _t0E29, _t0E2A, _t0E2B];
    tensor[4,4] _t0E2D = [_t0E1D, _t0E22, _t0E27, _t0E2C];
    real _t0E2E = 0.e0;
    real _t0E2F = -0.1e1;
    real _t0E30 = 0.e0;
    real _t0E31 = 0.e0;
    vec4 _t0E32 = [_t0E2E, _t0E2F, _t0E30, _t0E31];
    real _t0E33 = 0.1e1;
    real _t0E34 = 0.e0;
    real _t0E35 = 0.e0;
    real _t0E36 = 0.e0;
    vec4 _t0E37 = [_t0E33, _t0E34, _t0E35, _t0E36];
    real _t0E38 = 0.e0;
    real _t0E39 = 0.e0;
    real _t0E3A = 0.1e1;
    real _t0E3B = 0.e0;
    vec4 _t0E3C = [_t0E38, _t0E39, _t0E3A, _t0E3B];
    real _t0E3D = 0.e0;
    real _t0E3E = 0.e0;
    real _t0E3F = 0.e0;
    real _t0E40 = 0.1e1;
    vec4 _t0E41 = [_t0E3D, _t0E3E, _t0E3F, _t0E40];
    tensor[4,4] _t0E42 = [_t0E32, _t0E37, _t0E3C, _t0E41];
    tensor[4,4][6] _t0E43 = {_t0DD9, _t0DEE, _t0E03, _t0E18, _t0E2D, _t0E42};
    real _t0E44 = 0.e0;
    real _t0E45 = -0.1e1;
    real _t0E46 = 0.1e1;
    real _t0E47 = 0.5e0;
    vec4 _t0E48 = [_t0E44, _t0E45, _t0E46, _t0E47];
    real _t0E49 = 0.e0;
    real _t0E4A = -0.1e1;
    real _t0E4B = 0.e0;
    real _t0E4C = 0.e0;
    vec4 _t0E4D = [_t0E49, _t0E4A, _t0E4B, _t0E4C];
    real _t0E4E = 0.1e1;
    real _t0E4F = 0.e0;
    real _t0E50 = 0.e0;
    real _t0E51 = 0.e0;
    vec4 _t0E52 = [_t0E4E, _t0E4F, _t0E50, _t0E51];
    real _t0E53 = 0.e0;
    real _t0E54 = 0.e0;
    real _t0E55 = 0.e0;
    real _t0E56 = 0.1e1;
    vec4 _t0E57 = [_t0E53, _t0E54, _t0E55, _t0E56];
    tensor[4,4] _t0E58 = [_t0E48, _t0E4D, _t0E52, _t0E57];
    real _t0E59 = 0.e0;
    real _t0E5A = -0.1e1;
    real _t0E5B = 0.1e1;
    real _t0E5C = 0.5e0;
    vec4 _t0E5D = [_t0E59, _t0E5A, _t0E5B, _t0E5C];
    real _t0E5E = 0.e0;
    real _t0E5F = -0.1e1;
    real _t0E60 = 0.e0;
    real _t0E61 = 0.e0;
    vec4 _t0E62 = [_t0E5E, _t0E5F, _t0E60, _t0E61];
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.e0;
    real _t0E65 = 0.e0;
    real _t0E66 = 0.1e1;
    vec4 _t0E67 = [_t0E63, _t0E64, _t0E65, _t0E66];
    real _t0E68 = 0.e0;
    real _t0E69 = 0.e0;
    real _t0E6A = 0.e0;
    real _t0E6B = 0.1e1;
    vec4 _t0E6C = [_t0E68, _t0E69, _t0E6A, _t0E6B];
    tensor[4,4] _t0E6D = [_t0E5D, _t0E62, _t0E67, _t0E6C];
    real _t0E6E = 0.e0;
    real _t0E6F = -0.1e1;
    real _t0E70 = 0.e0;
    real _t0E71 = 0.e0;
    vec4 _t0E72 = [_t0E6E, _t0E6F, _t0E70, _t0E71];
    real _t0E73 = 0.1e1;
    real _t0E74 = 0.e0;
    real _t0E75 = 0.e0;
    real _t0E76 = 0.e0;
    vec4 _t0E77 = [_t0E73, _t0E74, _t0E75, _t0E76];
    real _t0E78 = 0.e0;
    real _t0E79 = 0.e0;
    real _t0E7A = 0.1e1;
    real _t0E7B = 0.e0;
    vec4 _t0E7C = [_t0E78, _t0E79, _t0E7A, _t0E7B];
    real _t0E7D = 0.e0;
    real _t0E7E = 0.e0;
    real _t0E7F = 0.e0;
    real _t0E80 = 0.1e1;
    vec4 _t0E81 = [_t0E7D, _t0E7E, _t0E7F, _t0E80];
    tensor[4,4] _t0E82 = [_t0E72, _t0E77, _t0E7C, _t0E81];
    real _t0E83 = -0.1e1;
    real _t0E84 = 0.e0;
    real _t0E85 = 0.e0;
    real _t0E86 = 0.e0;
    vec4 _t0E87 = [_t0E83, _t0E84, _t0E85, _t0E86];
    real _t0E88 = 0.e0;
    real _t0E89 = -0.1e1;
    real _t0E8A = 0.e0;
    real _t0E8B = 0.e0;
    vec4 _t0E8C = [_t0E88, _t0E89, _t0E8A, _t0E8B];
    real _t0E8D = 0.e0;
    real _t0E8E = 0.e0;
    real _t0E8F = 0.1e1;
    real _t0E90 = 0.e0;
    vec4 _t0E91 = [_t0E8D, _t0E8E, _t0E8F, _t0E90];
    real _t0E92 = 0.e0;
    real _t0E93 = 0.e0;
    real _t0E94 = 0.e0;
    real _t0E95 = 0.1e1;
    vec4 _t0E96 = [_t0E92, _t0E93, _t0E94, _t0E95];
    tensor[4,4] _t0E97 = [_t0E87, _t0E8C, _t0E91, _t0E96];
    real _t0E98 = 0.e0;
    real _t0E99 = 0.1e1;
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    vec4 _t0E9C = [_t0E98, _t0E99, _t0E9A, _t0E9B];
    real _t0E9D = -0.1e1;
    real _t0E9E = 0.e0;
    real _t0E9F = 0.e0;
    real _t0EA0 = 0.e0;
    vec4 _t0EA1 = [_t0E9D, _t0E9E, _t0E9F, _t0EA0];
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.e0;
    real _t0EA4 = 0.1e1;
    real _t0EA5 = 0.e0;
    vec4 _t0EA6 = [_t0EA2, _t0EA3, _t0EA4, _t0EA5];
    real _t0EA7 = 0.e0;
    real _t0EA8 = 0.e0;
    real _t0EA9 = 0.e0;
    real _t0EAA = 0.1e1;
    vec4 _t0EAB = [_t0EA7, _t0EA8, _t0EA9, _t0EAA];
    tensor[4,4] _t0EAC = [_t0E9C, _t0EA1, _t0EA6, _t0EAB];
    real _t0EAD = 0.1e1;
    real _t0EAE = 0.e0;
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.e0;
    vec4 _t0EB1 = [_t0EAD, _t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.1e1;
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.e0;
    vec4 _t0EB6 = [_t0EB2, _t0EB3, _t0EB4, _t0EB5];
    real _t0EB7 = 0.e0;
    real _t0EB8 = 0.e0;
    real _t0EB9 = 0.1e1;
    real _t0EBA = 0.e0;
    vec4 _t0EBB = [_t0EB7, _t0EB8, _t0EB9, _t0EBA];
    real _t0EBC = 0.e0;
    real _t0EBD = 0.e0;
    real _t0EBE = 0.e0;
    real _t0EBF = 0.1e1;
    vec4 _t0EC0 = [_t0EBC, _t0EBD, _t0EBE, _t0EBF];
    tensor[4,4] _t0EC1 = [_t0EB1, _t0EB6, _t0EBB, _t0EC0];
    tensor[4,4][6] _t0EC2 = {_t0E58, _t0E6D, _t0E82, _t0E97, _t0EAC, _t0EC1};
    tensor[4,4][6][6] _t0EC3 = {_t0C47, _t0CC6, _t0D45, _t0DC4, _t0E43, _t0EC2};
    real _t0EC4 = time0597[1];
    int _t0EC5 = prim $r2i01B7 (_t0EC4);
    tensor[4,4][6] _t0EC6 = prim $sub01C0<tensor[4,4][6]; %6> (_t0EC3, _t0EC5);
    real _t0EC7 = time0597[1];
    int _t0EC8 = prim $r2i01B7 (_t0EC7);
    int[2] _t0EC9 = func nextCell4059B (_t0EC8, cellId0594, mesh0593);
    int _t0ECA = 1;
    int _t0ECB = prim $sub01C0<int; %2> (_t0EC9, _t0ECA);
    tensor[4,4] _t0ECC = prim $sub01C0<tensor[4,4]; %6> (_t0EC6, _t0ECB);
    real _t0ECD = time0597[0];
    vec3 _t0ECE = prim *0036<$[3]> (_t0ECD, dPos0596);
    vec3 _t0ECF = prim +0017<$[3]> (_t0ECE, refPos0595);
    real _t0ED0 = _t0ECF[0];
    real _t0ED1 = time0597[0];
    vec3 _t0ED2 = prim *0036<$[3]> (_t0ED1, dPos0596);
    vec3 _t0ED3 = prim +0017<$[3]> (_t0ED2, refPos0595);
    real _t0ED4 = _t0ED3[1];
    real _t0ED5 = time0597[0];
    vec3 _t0ED6 = prim *0036<$[3]> (_t0ED5, dPos0596);
    vec3 _t0ED7 = prim +0017<$[3]> (_t0ED6, refPos0595);
    real _t0ED8 = _t0ED7[2];
    real _t0ED9 = 0.1e1;
    vec4 _t0EDA = [_t0ED0, _t0ED4, _t0ED8, _t0ED9];
    vec4 _t0EDB = prim •00CE<$[4,4]; $[4]; $[4]> (_t0ECC, _t0EDA);
    real _t0EDC = _t0EDB[1];
    real _t0EDD = 0.1e1;
    real _t0EDE = 0.e0;
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.e0;
    vec4 _t0EE1 = [_t0EDD, _t0EDE, _t0EDF, _t0EE0];
    real _t0EE2 = 0.e0;
    real _t0EE3 = 0.1e1;
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
    real _t0EE7 = 0.e0;
    real _t0EE8 = 0.e0;
    real _t0EE9 = 0.1e1;
    real _t0EEA = 0.e0;
    vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    real _t0EEE = 0.e0;
    real _t0EEF = 0.1e1;
    vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
    tensor[4,4] _t0EF1 = [_t0EE1, _t0EE6, _t0EEB, _t0EF0];
    real _t0EF2 = 0.1e1;
    real _t0EF3 = 0.e0;
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    vec4 _t0EF6 = [_t0EF2, _t0EF3, _t0EF4, _t0EF5];
    real _t0EF7 = 0.e0;
    real _t0EF8 = 0.1e1;
    real _t0EF9 = 0.e0;
    real _t0EFA = 0.e0;
    vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
    real _t0EFC = 0.e0;
    real _t0EFD = 0.e0;
    real _t0EFE = 0.1e1;
    real _t0EFF = 0.1e1;
    vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
    real _t0F01 = 0.e0;
    real _t0F02 = 0.e0;
    real _t0F03 = 0.e0;
    real _t0F04 = 0.1e1;
    vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
    tensor[4,4] _t0F06 = [_t0EF6, _t0EFB, _t0F00, _t0F05];
    real _t0F07 = 0.e0;
    real _t0F08 = 0.1e1;
    real _t0F09 = 0.e0;
    real _t0F0A = 0.e0;
    vec4 _t0F0B = [_t0F07, _t0F08, _t0F09, _t0F0A];
    real _t0F0C = 0.e0;
    real _t0F0D = 0.e0;
    real _t0F0E = 0.1e1;
    real _t0F0F = 0.e0;
    vec4 _t0F10 = [_t0F0C, _t0F0D, _t0F0E, _t0F0F];
    real _t0F11 = 0.1e1;
    real _t0F12 = -0.1e1;
    real _t0F13 = 0.e0;
    real _t0F14 = -0.5e0;
    vec4 _t0F15 = [_t0F11, _t0F12, _t0F13, _t0F14];
    real _t0F16 = 0.e0;
    real _t0F17 = 0.e0;
    real _t0F18 = 0.e0;
    real _t0F19 = 0.1e1;
    vec4 _t0F1A = [_t0F16, _t0F17, _t0F18, _t0F19];
    tensor[4,4] _t0F1B = [_t0F0B, _t0F10, _t0F15, _t0F1A];
    real _t0F1C = 0.e0;
    real _t0F1D = 0.e0;
    real _t0F1E = -0.1e1;
    real _t0F1F = 0.e0;
    vec4 _t0F20 = [_t0F1C, _t0F1D, _t0F1E, _t0F1F];
    real _t0F21 = 0.e0;
    real _t0F22 = 0.1e1;
    real _t0F23 = 0.e0;
    real _t0F24 = 0.e0;
    vec4 _t0F25 = [_t0F21, _t0F22, _t0F23, _t0F24];
    real _t0F26 = 0.1e1;
    real _t0F27 = -0.1e1;
    real _t0F28 = 0.e0;
    real _t0F29 = -0.5e0;
    vec4 _t0F2A = [_t0F26, _t0F27, _t0F28, _t0F29];
    real _t0F2B = 0.e0;
    real _t0F2C = 0.e0;
    real _t0F2D = 0.e0;
    real _t0F2E = 0.1e1;
    vec4 _t0F2F = [_t0F2B, _t0F2C, _t0F2D, _t0F2E];
    tensor[4,4] _t0F30 = [_t0F20, _t0F25, _t0F2A, _t0F2F];
    real _t0F31 = 0.e0;
    real _t0F32 = -0.1e1;
    real _t0F33 = 0.e0;
    real _t0F34 = 0.e0;
    vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
    real _t0F36 = 0.e0;
    real _t0F37 = 0.e0;
    real _t0F38 = -0.1e1;
    real _t0F39 = 0.e0;
    vec4 _t0F3A = [_t0F36, _t0F37, _t0F38, _t0F39];
    real _t0F3B = 0.1e1;
    real _t0F3C = -0.1e1;
    real _t0F3D = 0.e0;
    real _t0F3E = -0.5e0;
    vec4 _t0F3F = [_t0F3B, _t0F3C, _t0F3D, _t0F3E];
    real _t0F40 = 0.e0;
    real _t0F41 = 0.e0;
    real _t0F42 = 0.e0;
    real _t0F43 = 0.1e1;
    vec4 _t0F44 = [_t0F40, _t0F41, _t0F42, _t0F43];
    tensor[4,4] _t0F45 = [_t0F35, _t0F3A, _t0F3F, _t0F44];
    real _t0F46 = 0.e0;
    real _t0F47 = 0.e0;
    real _t0F48 = 0.1e1;
    real _t0F49 = 0.e0;
    vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
    real _t0F4B = 0.e0;
    real _t0F4C = -0.1e1;
    real _t0F4D = 0.e0;
    real _t0F4E = 0.e0;
    vec4 _t0F4F = [_t0F4B, _t0F4C, _t0F4D, _t0F4E];
    real _t0F50 = 0.1e1;
    real _t0F51 = -0.1e1;
    real _t0F52 = 0.e0;
    real _t0F53 = -0.5e0;
    vec4 _t0F54 = [_t0F50, _t0F51, _t0F52, _t0F53];
    real _t0F55 = 0.e0;
    real _t0F56 = 0.e0;
    real _t0F57 = 0.e0;
    real _t0F58 = 0.1e1;
    vec4 _t0F59 = [_t0F55, _t0F56, _t0F57, _t0F58];
    tensor[4,4] _t0F5A = [_t0F4A, _t0F4F, _t0F54, _t0F59];
    tensor[4,4][6] _t0F5B = {_t0EF1, _t0F06, _t0F1B, _t0F30, _t0F45, _t0F5A};
    real _t0F5C = 0.1e1;
    real _t0F5D = 0.e0;
    real _t0F5E = 0.e0;
    real _t0F5F = 0.e0;
    vec4 _t0F60 = [_t0F5C, _t0F5D, _t0F5E, _t0F5F];
    real _t0F61 = 0.e0;
    real _t0F62 = 0.1e1;
    real _t0F63 = 0.e0;
    real _t0F64 = 0.e0;
    vec4 _t0F65 = [_t0F61, _t0F62, _t0F63, _t0F64];
    real _t0F66 = 0.e0;
    real _t0F67 = 0.e0;
    real _t0F68 = 0.1e1;
    real _t0F69 = -0.1e1;
    vec4 _t0F6A = [_t0F66, _t0F67, _t0F68, _t0F69];
    real _t0F6B = 0.e0;
    real _t0F6C = 0.e0;
    real _t0F6D = 0.e0;
    real _t0F6E = 0.1e1;
    vec4 _t0F6F = [_t0F6B, _t0F6C, _t0F6D, _t0F6E];
    tensor[4,4] _t0F70 = [_t0F60, _t0F65, _t0F6A, _t0F6F];
    real _t0F71 = 0.1e1;
    real _t0F72 = 0.e0;
    real _t0F73 = 0.e0;
    real _t0F74 = 0.e0;
    vec4 _t0F75 = [_t0F71, _t0F72, _t0F73, _t0F74];
    real _t0F76 = 0.e0;
    real _t0F77 = 0.1e1;
    real _t0F78 = 0.e0;
    real _t0F79 = 0.e0;
    vec4 _t0F7A = [_t0F76, _t0F77, _t0F78, _t0F79];
    real _t0F7B = 0.e0;
    real _t0F7C = 0.e0;
    real _t0F7D = 0.1e1;
    real _t0F7E = 0.e0;
    vec4 _t0F7F = [_t0F7B, _t0F7C, _t0F7D, _t0F7E];
    real _t0F80 = 0.e0;
    real _t0F81 = 0.e0;
    real _t0F82 = 0.e0;
    real _t0F83 = 0.1e1;
    vec4 _t0F84 = [_t0F80, _t0F81, _t0F82, _t0F83];
    tensor[4,4] _t0F85 = [_t0F75, _t0F7A, _t0F7F, _t0F84];
    real _t0F86 = 0.e0;
    real _t0F87 = 0.1e1;
    real _t0F88 = 0.e0;
    real _t0F89 = 0.e0;
    vec4 _t0F8A = [_t0F86, _t0F87, _t0F88, _t0F89];
    real _t0F8B = 0.e0;
    real _t0F8C = 0.e0;
    real _t0F8D = 0.1e1;
    real _t0F8E = -0.1e1;
    vec4 _t0F8F = [_t0F8B, _t0F8C, _t0F8D, _t0F8E];
    real _t0F90 = 0.1e1;
    real _t0F91 = -0.1e1;
    real _t0F92 = 0.e0;
    real _t0F93 = -0.5e0;
    vec4 _t0F94 = [_t0F90, _t0F91, _t0F92, _t0F93];
    real _t0F95 = 0.e0;
    real _t0F96 = 0.e0;
    real _t0F97 = 0.e0;
    real _t0F98 = 0.1e1;
    vec4 _t0F99 = [_t0F95, _t0F96, _t0F97, _t0F98];
    tensor[4,4] _t0F9A = [_t0F8A, _t0F8F, _t0F94, _t0F99];
    real _t0F9B = 0.e0;
    real _t0F9C = 0.e0;
    real _t0F9D = -0.1e1;
    real _t0F9E = 0.1e1;
    vec4 _t0F9F = [_t0F9B, _t0F9C, _t0F9D, _t0F9E];
    real _t0FA0 = 0.e0;
    real _t0FA1 = 0.1e1;
    real _t0FA2 = 0.e0;
    real _t0FA3 = 0.e0;
    vec4 _t0FA4 = [_t0FA0, _t0FA1, _t0FA2, _t0FA3];
    real _t0FA5 = 0.1e1;
    real _t0FA6 = -0.1e1;
    real _t0FA7 = 0.e0;
    real _t0FA8 = -0.5e0;
    vec4 _t0FA9 = [_t0FA5, _t0FA6, _t0FA7, _t0FA8];
    real _t0FAA = 0.e0;
    real _t0FAB = 0.e0;
    real _t0FAC = 0.e0;
    real _t0FAD = 0.1e1;
    vec4 _t0FAE = [_t0FAA, _t0FAB, _t0FAC, _t0FAD];
    tensor[4,4] _t0FAF = [_t0F9F, _t0FA4, _t0FA9, _t0FAE];
    real _t0FB0 = 0.e0;
    real _t0FB1 = -0.1e1;
    real _t0FB2 = 0.e0;
    real _t0FB3 = 0.e0;
    vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
    real _t0FB5 = 0.e0;
    real _t0FB6 = 0.e0;
    real _t0FB7 = -0.1e1;
    real _t0FB8 = 0.1e1;
    vec4 _t0FB9 = [_t0FB5, _t0FB6, _t0FB7, _t0FB8];
    real _t0FBA = 0.1e1;
    real _t0FBB = -0.1e1;
    real _t0FBC = 0.e0;
    real _t0FBD = -0.5e0;
    vec4 _t0FBE = [_t0FBA, _t0FBB, _t0FBC, _t0FBD];
    real _t0FBF = 0.e0;
    real _t0FC0 = 0.e0;
    real _t0FC1 = 0.e0;
    real _t0FC2 = 0.1e1;
    vec4 _t0FC3 = [_t0FBF, _t0FC0, _t0FC1, _t0FC2];
    tensor[4,4] _t0FC4 = [_t0FB4, _t0FB9, _t0FBE, _t0FC3];
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    real _t0FC7 = 0.1e1;
    real _t0FC8 = -0.1e1;
    vec4 _t0FC9 = [_t0FC5, _t0FC6, _t0FC7, _t0FC8];
    real _t0FCA = 0.e0;
    real _t0FCB = -0.1e1;
    real _t0FCC = 0.e0;
    real _t0FCD = 0.e0;
    vec4 _t0FCE = [_t0FCA, _t0FCB, _t0FCC, _t0FCD];
    real _t0FCF = 0.1e1;
    real _t0FD0 = -0.1e1;
    real _t0FD1 = 0.e0;
    real _t0FD2 = -0.5e0;
    vec4 _t0FD3 = [_t0FCF, _t0FD0, _t0FD1, _t0FD2];
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.e0;
    real _t0FD6 = 0.e0;
    real _t0FD7 = 0.1e1;
    vec4 _t0FD8 = [_t0FD4, _t0FD5, _t0FD6, _t0FD7];
    tensor[4,4] _t0FD9 = [_t0FC9, _t0FCE, _t0FD3, _t0FD8];
    tensor[4,4][6] _t0FDA = {_t0F70, _t0F85, _t0F9A, _t0FAF, _t0FC4, _t0FD9};
    real _t0FDB = 0.1e1;
    real _t0FDC = 0.e0;
    real _t0FDD = 0.1e1;
    real _t0FDE = 0.5e0;
    vec4 _t0FDF = [_t0FDB, _t0FDC, _t0FDD, _t0FDE];
    real _t0FE0 = 0.1e1;
    real _t0FE1 = 0.e0;
    real _t0FE2 = 0.e0;
    real _t0FE3 = 0.e0;
    vec4 _t0FE4 = [_t0FE0, _t0FE1, _t0FE2, _t0FE3];
    real _t0FE5 = 0.e0;
    real _t0FE6 = 0.1e1;
    real _t0FE7 = 0.e0;
    real _t0FE8 = 0.e0;
    vec4 _t0FE9 = [_t0FE5, _t0FE6, _t0FE7, _t0FE8];
    real _t0FEA = 0.e0;
    real _t0FEB = 0.e0;
    real _t0FEC = 0.e0;
    real _t0FED = 0.1e1;
    vec4 _t0FEE = [_t0FEA, _t0FEB, _t0FEC, _t0FED];
    tensor[4,4] _t0FEF = [_t0FDF, _t0FE4, _t0FE9, _t0FEE];
    real _t0FF0 = 0.1e1;
    real _t0FF1 = 0.e0;
    real _t0FF2 = 0.1e1;
    real _t0FF3 = 0.5e0;
    vec4 _t0FF4 = [_t0FF0, _t0FF1, _t0FF2, _t0FF3];
    real _t0FF5 = 0.1e1;
    real _t0FF6 = 0.e0;
    real _t0FF7 = 0.e0;
    real _t0FF8 = 0.e0;
    vec4 _t0FF9 = [_t0FF5, _t0FF6, _t0FF7, _t0FF8];
    real _t0FFA = 0.e0;
    real _t0FFB = 0.1e1;
    real _t0FFC = 0.e0;
    real _t0FFD = 0.1e1;
    vec4 _t0FFE = [_t0FFA, _t0FFB, _t0FFC, _t0FFD];
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = 0.e0;
    real _t1002 = 0.1e1;
    vec4 _t1003 = [_t0FFF, _t1000, _t1001, _t1002];
    tensor[4,4] _t1004 = [_t0FF4, _t0FF9, _t0FFE, _t1003];
    real _t1005 = 0.1e1;
    real _t1006 = 0.e0;
    real _t1007 = 0.e0;
    real _t1008 = 0.e0;
    vec4 _t1009 = [_t1005, _t1006, _t1007, _t1008];
    real _t100A = 0.e0;
    real _t100B = 0.1e1;
    real _t100C = 0.e0;
    real _t100D = 0.e0;
    vec4 _t100E = [_t100A, _t100B, _t100C, _t100D];
    real _t100F = 0.e0;
    real _t1010 = 0.e0;
    real _t1011 = 0.1e1;
    real _t1012 = 0.e0;
    vec4 _t1013 = [_t100F, _t1010, _t1011, _t1012];
    real _t1014 = 0.e0;
    real _t1015 = 0.e0;
    real _t1016 = 0.e0;
    real _t1017 = 0.1e1;
    vec4 _t1018 = [_t1014, _t1015, _t1016, _t1017];
    tensor[4,4] _t1019 = [_t1009, _t100E, _t1013, _t1018];
    real _t101A = 0.e0;
    real _t101B = -0.1e1;
    real _t101C = 0.e0;
    real _t101D = 0.e0;
    vec4 _t101E = [_t101A, _t101B, _t101C, _t101D];
    real _t101F = 0.1e1;
    real _t1020 = 0.e0;
    real _t1021 = 0.e0;
    real _t1022 = 0.e0;
    vec4 _t1023 = [_t101F, _t1020, _t1021, _t1022];
    real _t1024 = 0.e0;
    real _t1025 = 0.e0;
    real _t1026 = 0.1e1;
    real _t1027 = 0.e0;
    vec4 _t1028 = [_t1024, _t1025, _t1026, _t1027];
    real _t1029 = 0.e0;
    real _t102A = 0.e0;
    real _t102B = 0.e0;
    real _t102C = 0.1e1;
    vec4 _t102D = [_t1029, _t102A, _t102B, _t102C];
    tensor[4,4] _t102E = [_t101E, _t1023, _t1028, _t102D];
    real _t102F = -0.1e1;
    real _t1030 = 0.e0;
    real _t1031 = 0.e0;
    real _t1032 = 0.e0;
    vec4 _t1033 = [_t102F, _t1030, _t1031, _t1032];
    real _t1034 = 0.e0;
    real _t1035 = -0.1e1;
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    vec4 _t1038 = [_t1034, _t1035, _t1036, _t1037];
    real _t1039 = 0.e0;
    real _t103A = 0.e0;
    real _t103B = 0.1e1;
    real _t103C = 0.e0;
    vec4 _t103D = [_t1039, _t103A, _t103B, _t103C];
    real _t103E = 0.e0;
    real _t103F = 0.e0;
    real _t1040 = 0.e0;
    real _t1041 = 0.1e1;
    vec4 _t1042 = [_t103E, _t103F, _t1040, _t1041];
    tensor[4,4] _t1043 = [_t1033, _t1038, _t103D, _t1042];
    real _t1044 = 0.e0;
    real _t1045 = 0.1e1;
    real _t1046 = 0.e0;
    real _t1047 = 0.e0;
    vec4 _t1048 = [_t1044, _t1045, _t1046, _t1047];
    real _t1049 = -0.1e1;
    real _t104A = 0.e0;
    real _t104B = 0.e0;
    real _t104C = 0.e0;
    vec4 _t104D = [_t1049, _t104A, _t104B, _t104C];
    real _t104E = 0.e0;
    real _t104F = 0.e0;
    real _t1050 = 0.1e1;
    real _t1051 = 0.e0;
    vec4 _t1052 = [_t104E, _t104F, _t1050, _t1051];
    real _t1053 = 0.e0;
    real _t1054 = 0.e0;
    real _t1055 = 0.e0;
    real _t1056 = 0.1e1;
    vec4 _t1057 = [_t1053, _t1054, _t1055, _t1056];
    tensor[4,4] _t1058 = [_t1048, _t104D, _t1052, _t1057];
    tensor[4,4][6] _t1059 = {_t0FEF, _t1004, _t1019, _t102E, _t1043, _t1058};
    real _t105A = 0.e0;
    real _t105B = 0.1e1;
    real _t105C = 0.1e1;
    real _t105D = 0.5e0;
    vec4 _t105E = [_t105A, _t105B, _t105C, _t105D];
    real _t105F = 0.e0;
    real _t1060 = 0.1e1;
    real _t1061 = 0.e0;
    real _t1062 = 0.e0;
    vec4 _t1063 = [_t105F, _t1060, _t1061, _t1062];
    real _t1064 = -0.1e1;
    real _t1065 = 0.e0;
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    vec4 _t1068 = [_t1064, _t1065, _t1066, _t1067];
    real _t1069 = 0.e0;
    real _t106A = 0.e0;
    real _t106B = 0.e0;
    real _t106C = 0.1e1;
    vec4 _t106D = [_t1069, _t106A, _t106B, _t106C];
    tensor[4,4] _t106E = [_t105E, _t1063, _t1068, _t106D];
    real _t106F = 0.e0;
    real _t1070 = 0.1e1;
    real _t1071 = 0.1e1;
    real _t1072 = 0.5e0;
    vec4 _t1073 = [_t106F, _t1070, _t1071, _t1072];
    real _t1074 = 0.e0;
    real _t1075 = 0.1e1;
    real _t1076 = 0.e0;
    real _t1077 = 0.e0;
    vec4 _t1078 = [_t1074, _t1075, _t1076, _t1077];
    real _t1079 = -0.1e1;
    real _t107A = 0.e0;
    real _t107B = 0.e0;
    real _t107C = 0.1e1;
    vec4 _t107D = [_t1079, _t107A, _t107B, _t107C];
    real _t107E = 0.e0;
    real _t107F = 0.e0;
    real _t1080 = 0.e0;
    real _t1081 = 0.1e1;
    vec4 _t1082 = [_t107E, _t107F, _t1080, _t1081];
    tensor[4,4] _t1083 = [_t1073, _t1078, _t107D, _t1082];
    real _t1084 = 0.e0;
    real _t1085 = 0.1e1;
    real _t1086 = 0.e0;
    real _t1087 = 0.e0;
    vec4 _t1088 = [_t1084, _t1085, _t1086, _t1087];
    real _t1089 = -0.1e1;
    real _t108A = 0.e0;
    real _t108B = 0.e0;
    real _t108C = 0.e0;
    vec4 _t108D = [_t1089, _t108A, _t108B, _t108C];
    real _t108E = 0.e0;
    real _t108F = 0.e0;
    real _t1090 = 0.1e1;
    real _t1091 = 0.e0;
    vec4 _t1092 = [_t108E, _t108F, _t1090, _t1091];
    real _t1093 = 0.e0;
    real _t1094 = 0.e0;
    real _t1095 = 0.e0;
    real _t1096 = 0.1e1;
    vec4 _t1097 = [_t1093, _t1094, _t1095, _t1096];
    tensor[4,4] _t1098 = [_t1088, _t108D, _t1092, _t1097];
    real _t1099 = 0.1e1;
    real _t109A = 0.e0;
    real _t109B = 0.e0;
    real _t109C = 0.e0;
    vec4 _t109D = [_t1099, _t109A, _t109B, _t109C];
    real _t109E = 0.e0;
    real _t109F = 0.1e1;
    real _t10A0 = 0.e0;
    real _t10A1 = 0.e0;
    vec4 _t10A2 = [_t109E, _t109F, _t10A0, _t10A1];
    real _t10A3 = 0.e0;
    real _t10A4 = 0.e0;
    real _t10A5 = 0.1e1;
    real _t10A6 = 0.e0;
    vec4 _t10A7 = [_t10A3, _t10A4, _t10A5, _t10A6];
    real _t10A8 = 0.e0;
    real _t10A9 = 0.e0;
    real _t10AA = 0.e0;
    real _t10AB = 0.1e1;
    vec4 _t10AC = [_t10A8, _t10A9, _t10AA, _t10AB];
    tensor[4,4] _t10AD = [_t109D, _t10A2, _t10A7, _t10AC];
    real _t10AE = 0.e0;
    real _t10AF = -0.1e1;
    real _t10B0 = 0.e0;
    real _t10B1 = 0.e0;
    vec4 _t10B2 = [_t10AE, _t10AF, _t10B0, _t10B1];
    real _t10B3 = 0.1e1;
    real _t10B4 = 0.e0;
    real _t10B5 = 0.e0;
    real _t10B6 = 0.e0;
    vec4 _t10B7 = [_t10B3, _t10B4, _t10B5, _t10B6];
    real _t10B8 = 0.e0;
    real _t10B9 = 0.e0;
    real _t10BA = 0.1e1;
    real _t10BB = 0.e0;
    vec4 _t10BC = [_t10B8, _t10B9, _t10BA, _t10BB];
    real _t10BD = 0.e0;
    real _t10BE = 0.e0;
    real _t10BF = 0.e0;
    real _t10C0 = 0.1e1;
    vec4 _t10C1 = [_t10BD, _t10BE, _t10BF, _t10C0];
    tensor[4,4] _t10C2 = [_t10B2, _t10B7, _t10BC, _t10C1];
    real _t10C3 = -0.1e1;
    real _t10C4 = 0.e0;
    real _t10C5 = 0.e0;
    real _t10C6 = 0.e0;
    vec4 _t10C7 = [_t10C3, _t10C4, _t10C5, _t10C6];
    real _t10C8 = 0.e0;
    real _t10C9 = -0.1e1;
    real _t10CA = 0.e0;
    real _t10CB = 0.e0;
    vec4 _t10CC = [_t10C8, _t10C9, _t10CA, _t10CB];
    real _t10CD = 0.e0;
    real _t10CE = 0.e0;
    real _t10CF = 0.1e1;
    real _t10D0 = 0.e0;
    vec4 _t10D1 = [_t10CD, _t10CE, _t10CF, _t10D0];
    real _t10D2 = 0.e0;
    real _t10D3 = 0.e0;
    real _t10D4 = 0.e0;
    real _t10D5 = 0.1e1;
    vec4 _t10D6 = [_t10D2, _t10D3, _t10D4, _t10D5];
    tensor[4,4] _t10D7 = [_t10C7, _t10CC, _t10D1, _t10D6];
    tensor[4,4][6] _t10D8 = {_t106E, _t1083, _t1098, _t10AD, _t10C2, _t10D7};
    real _t10D9 = -0.1e1;
    real _t10DA = 0.e0;
    real _t10DB = 0.1e1;
    real _t10DC = 0.5e0;
    vec4 _t10DD = [_t10D9, _t10DA, _t10DB, _t10DC];
    real _t10DE = -0.1e1;
    real _t10DF = 0.e0;
    real _t10E0 = 0.e0;
    real _t10E1 = 0.e0;
    vec4 _t10E2 = [_t10DE, _t10DF, _t10E0, _t10E1];
    real _t10E3 = 0.e0;
    real _t10E4 = -0.1e1;
    real _t10E5 = 0.e0;
    real _t10E6 = 0.e0;
    vec4 _t10E7 = [_t10E3, _t10E4, _t10E5, _t10E6];
    real _t10E8 = 0.e0;
    real _t10E9 = 0.e0;
    real _t10EA = 0.e0;
    real _t10EB = 0.1e1;
    vec4 _t10EC = [_t10E8, _t10E9, _t10EA, _t10EB];
    tensor[4,4] _t10ED = [_t10DD, _t10E2, _t10E7, _t10EC];
    real _t10EE = -0.1e1;
    real _t10EF = 0.e0;
    real _t10F0 = 0.1e1;
    real _t10F1 = 0.5e0;
    vec4 _t10F2 = [_t10EE, _t10EF, _t10F0, _t10F1];
    real _t10F3 = -0.1e1;
    real _t10F4 = 0.e0;
    real _t10F5 = 0.e0;
    real _t10F6 = 0.e0;
    vec4 _t10F7 = [_t10F3, _t10F4, _t10F5, _t10F6];
    real _t10F8 = 0.e0;
    real _t10F9 = -0.1e1;
    real _t10FA = 0.e0;
    real _t10FB = 0.1e1;
    vec4 _t10FC = [_t10F8, _t10F9, _t10FA, _t10FB];
    real _t10FD = 0.e0;
    real _t10FE = 0.e0;
    real _t10FF = 0.e0;
    real _t1100 = 0.1e1;
    vec4 _t1101 = [_t10FD, _t10FE, _t10FF, _t1100];
    tensor[4,4] _t1102 = [_t10F2, _t10F7, _t10FC, _t1101];
    real _t1103 = -0.1e1;
    real _t1104 = 0.e0;
    real _t1105 = 0.e0;
    real _t1106 = 0.e0;
    vec4 _t1107 = [_t1103, _t1104, _t1105, _t1106];
    real _t1108 = 0.e0;
    real _t1109 = -0.1e1;
    real _t110A = 0.e0;
    real _t110B = 0.e0;
    vec4 _t110C = [_t1108, _t1109, _t110A, _t110B];
    real _t110D = 0.e0;
    real _t110E = 0.e0;
    real _t110F = 0.1e1;
    real _t1110 = 0.e0;
    vec4 _t1111 = [_t110D, _t110E, _t110F, _t1110];
    real _t1112 = 0.e0;
    real _t1113 = 0.e0;
    real _t1114 = 0.e0;
    real _t1115 = 0.1e1;
    vec4 _t1116 = [_t1112, _t1113, _t1114, _t1115];
    tensor[4,4] _t1117 = [_t1107, _t110C, _t1111, _t1116];
    real _t1118 = 0.e0;
    real _t1119 = 0.1e1;
    real _t111A = 0.e0;
    real _t111B = 0.e0;
    vec4 _t111C = [_t1118, _t1119, _t111A, _t111B];
    real _t111D = -0.1e1;
    real _t111E = 0.e0;
    real _t111F = 0.e0;
    real _t1120 = 0.e0;
    vec4 _t1121 = [_t111D, _t111E, _t111F, _t1120];
    real _t1122 = 0.e0;
    real _t1123 = 0.e0;
    real _t1124 = 0.1e1;
    real _t1125 = 0.e0;
    vec4 _t1126 = [_t1122, _t1123, _t1124, _t1125];
    real _t1127 = 0.e0;
    real _t1128 = 0.e0;
    real _t1129 = 0.e0;
    real _t112A = 0.1e1;
    vec4 _t112B = [_t1127, _t1128, _t1129, _t112A];
    tensor[4,4] _t112C = [_t111C, _t1121, _t1126, _t112B];
    real _t112D = 0.1e1;
    real _t112E = 0.e0;
    real _t112F = 0.e0;
    real _t1130 = 0.e0;
    vec4 _t1131 = [_t112D, _t112E, _t112F, _t1130];
    real _t1132 = 0.e0;
    real _t1133 = 0.1e1;
    real _t1134 = 0.e0;
    real _t1135 = 0.e0;
    vec4 _t1136 = [_t1132, _t1133, _t1134, _t1135];
    real _t1137 = 0.e0;
    real _t1138 = 0.e0;
    real _t1139 = 0.1e1;
    real _t113A = 0.e0;
    vec4 _t113B = [_t1137, _t1138, _t1139, _t113A];
    real _t113C = 0.e0;
    real _t113D = 0.e0;
    real _t113E = 0.e0;
    real _t113F = 0.1e1;
    vec4 _t1140 = [_t113C, _t113D, _t113E, _t113F];
    tensor[4,4] _t1141 = [_t1131, _t1136, _t113B, _t1140];
    real _t1142 = 0.e0;
    real _t1143 = -0.1e1;
    real _t1144 = 0.e0;
    real _t1145 = 0.e0;
    vec4 _t1146 = [_t1142, _t1143, _t1144, _t1145];
    real _t1147 = 0.1e1;
    real _t1148 = 0.e0;
    real _t1149 = 0.e0;
    real _t114A = 0.e0;
    vec4 _t114B = [_t1147, _t1148, _t1149, _t114A];
    real _t114C = 0.e0;
    real _t114D = 0.e0;
    real _t114E = 0.1e1;
    real _t114F = 0.e0;
    vec4 _t1150 = [_t114C, _t114D, _t114E, _t114F];
    real _t1151 = 0.e0;
    real _t1152 = 0.e0;
    real _t1153 = 0.e0;
    real _t1154 = 0.1e1;
    vec4 _t1155 = [_t1151, _t1152, _t1153, _t1154];
    tensor[4,4] _t1156 = [_t1146, _t114B, _t1150, _t1155];
    tensor[4,4][6] _t1157 = {_t10ED, _t1102, _t1117, _t112C, _t1141, _t1156};
    real _t1158 = 0.e0;
    real _t1159 = -0.1e1;
    real _t115A = 0.1e1;
    real _t115B = 0.5e0;
    vec4 _t115C = [_t1158, _t1159, _t115A, _t115B];
    real _t115D = 0.e0;
    real _t115E = -0.1e1;
    real _t115F = 0.e0;
    real _t1160 = 0.e0;
    vec4 _t1161 = [_t115D, _t115E, _t115F, _t1160];
    real _t1162 = 0.1e1;
    real _t1163 = 0.e0;
    real _t1164 = 0.e0;
    real _t1165 = 0.e0;
    vec4 _t1166 = [_t1162, _t1163, _t1164, _t1165];
    real _t1167 = 0.e0;
    real _t1168 = 0.e0;
    real _t1169 = 0.e0;
    real _t116A = 0.1e1;
    vec4 _t116B = [_t1167, _t1168, _t1169, _t116A];
    tensor[4,4] _t116C = [_t115C, _t1161, _t1166, _t116B];
    real _t116D = 0.e0;
    real _t116E = -0.1e1;
    real _t116F = 0.1e1;
    real _t1170 = 0.5e0;
    vec4 _t1171 = [_t116D, _t116E, _t116F, _t1170];
    real _t1172 = 0.e0;
    real _t1173 = -0.1e1;
    real _t1174 = 0.e0;
    real _t1175 = 0.e0;
    vec4 _t1176 = [_t1172, _t1173, _t1174, _t1175];
    real _t1177 = 0.1e1;
    real _t1178 = 0.e0;
    real _t1179 = 0.e0;
    real _t117A = 0.1e1;
    vec4 _t117B = [_t1177, _t1178, _t1179, _t117A];
    real _t117C = 0.e0;
    real _t117D = 0.e0;
    real _t117E = 0.e0;
    real _t117F = 0.1e1;
    vec4 _t1180 = [_t117C, _t117D, _t117E, _t117F];
    tensor[4,4] _t1181 = [_t1171, _t1176, _t117B, _t1180];
    real _t1182 = 0.e0;
    real _t1183 = -0.1e1;
    real _t1184 = 0.e0;
    real _t1185 = 0.e0;
    vec4 _t1186 = [_t1182, _t1183, _t1184, _t1185];
    real _t1187 = 0.1e1;
    real _t1188 = 0.e0;
    real _t1189 = 0.e0;
    real _t118A = 0.e0;
    vec4 _t118B = [_t1187, _t1188, _t1189, _t118A];
    real _t118C = 0.e0;
    real _t118D = 0.e0;
    real _t118E = 0.1e1;
    real _t118F = 0.e0;
    vec4 _t1190 = [_t118C, _t118D, _t118E, _t118F];
    real _t1191 = 0.e0;
    real _t1192 = 0.e0;
    real _t1193 = 0.e0;
    real _t1194 = 0.1e1;
    vec4 _t1195 = [_t1191, _t1192, _t1193, _t1194];
    tensor[4,4] _t1196 = [_t1186, _t118B, _t1190, _t1195];
    real _t1197 = -0.1e1;
    real _t1198 = 0.e0;
    real _t1199 = 0.e0;
    real _t119A = 0.e0;
    vec4 _t119B = [_t1197, _t1198, _t1199, _t119A];
    real _t119C = 0.e0;
    real _t119D = -0.1e1;
    real _t119E = 0.e0;
    real _t119F = 0.e0;
    vec4 _t11A0 = [_t119C, _t119D, _t119E, _t119F];
    real _t11A1 = 0.e0;
    real _t11A2 = 0.e0;
    real _t11A3 = 0.1e1;
    real _t11A4 = 0.e0;
    vec4 _t11A5 = [_t11A1, _t11A2, _t11A3, _t11A4];
    real _t11A6 = 0.e0;
    real _t11A7 = 0.e0;
    real _t11A8 = 0.e0;
    real _t11A9 = 0.1e1;
    vec4 _t11AA = [_t11A6, _t11A7, _t11A8, _t11A9];
    tensor[4,4] _t11AB = [_t119B, _t11A0, _t11A5, _t11AA];
    real _t11AC = 0.e0;
    real _t11AD = 0.1e1;
    real _t11AE = 0.e0;
    real _t11AF = 0.e0;
    vec4 _t11B0 = [_t11AC, _t11AD, _t11AE, _t11AF];
    real _t11B1 = -0.1e1;
    real _t11B2 = 0.e0;
    real _t11B3 = 0.e0;
    real _t11B4 = 0.e0;
    vec4 _t11B5 = [_t11B1, _t11B2, _t11B3, _t11B4];
    real _t11B6 = 0.e0;
    real _t11B7 = 0.e0;
    real _t11B8 = 0.1e1;
    real _t11B9 = 0.e0;
    vec4 _t11BA = [_t11B6, _t11B7, _t11B8, _t11B9];
    real _t11BB = 0.e0;
    real _t11BC = 0.e0;
    real _t11BD = 0.e0;
    real _t11BE = 0.1e1;
    vec4 _t11BF = [_t11BB, _t11BC, _t11BD, _t11BE];
    tensor[4,4] _t11C0 = [_t11B0, _t11B5, _t11BA, _t11BF];
    real _t11C1 = 0.1e1;
    real _t11C2 = 0.e0;
    real _t11C3 = 0.e0;
    real _t11C4 = 0.e0;
    vec4 _t11C5 = [_t11C1, _t11C2, _t11C3, _t11C4];
    real _t11C6 = 0.e0;
    real _t11C7 = 0.1e1;
    real _t11C8 = 0.e0;
    real _t11C9 = 0.e0;
    vec4 _t11CA = [_t11C6, _t11C7, _t11C8, _t11C9];
    real _t11CB = 0.e0;
    real _t11CC = 0.e0;
    real _t11CD = 0.1e1;
    real _t11CE = 0.e0;
    vec4 _t11CF = [_t11CB, _t11CC, _t11CD, _t11CE];
    real _t11D0 = 0.e0;
    real _t11D1 = 0.e0;
    real _t11D2 = 0.e0;
    real _t11D3 = 0.1e1;
    vec4 _t11D4 = [_t11D0, _t11D1, _t11D2, _t11D3];
    tensor[4,4] _t11D5 = [_t11C5, _t11CA, _t11CF, _t11D4];
    tensor[4,4][6] _t11D6 = {_t116C, _t1181, _t1196, _t11AB, _t11C0, _t11D5};
    tensor[4,4][6][6] _t11D7 = {_t0F5B, _t0FDA, _t1059, _t10D8, _t1157, _t11D6};
    real _t11D8 = time0597[1];
    int _t11D9 = prim $r2i01B7 (_t11D8);
    tensor[4,4][6] _t11DA = prim $sub01C0<tensor[4,4][6]; %6> (_t11D7, _t11D9);
    real _t11DB = time0597[1];
    int _t11DC = prim $r2i01B7 (_t11DB);
    int[2] _t11DD = func nextCell4059B (_t11DC, cellId0594, mesh0593);
    int _t11DE = 1;
    int _t11DF = prim $sub01C0<int; %2> (_t11DD, _t11DE);
    tensor[4,4] _t11E0 = prim $sub01C0<tensor[4,4]; %6> (_t11DA, _t11DF);
    real _t11E1 = time0597[0];
    vec3 _t11E2 = prim *0036<$[3]> (_t11E1, dPos0596);
    vec3 _t11E3 = prim +0017<$[3]> (_t11E2, refPos0595);
    real _t11E4 = _t11E3[0];
    real _t11E5 = time0597[0];
    vec3 _t11E6 = prim *0036<$[3]> (_t11E5, dPos0596);
    vec3 _t11E7 = prim +0017<$[3]> (_t11E6, refPos0595);
    real _t11E8 = _t11E7[1];
    real _t11E9 = time0597[0];
    vec3 _t11EA = prim *0036<$[3]> (_t11E9, dPos0596);
    vec3 _t11EB = prim +0017<$[3]> (_t11EA, refPos0595);
    real _t11EC = _t11EB[2];
    real _t11ED = 0.1e1;
    vec4 _t11EE = [_t11E4, _t11E8, _t11EC, _t11ED];
    vec4 _t11EF = prim •00CE<$[4,4]; $[4]; $[4]> (_t11E0, _t11EE);
    real _t11F0 = _t11EF[2];
    vec3 _t11F1 = [_t0BC8, _t0EDC, _t11F0];
    real _t11F2 = time0597[1];
    int _t11F3 = prim $r2i01B7 (_t11F2);
    int[2] _t11F4 = func nextCell4059B (_t11F3, cellId0594, mesh0593);
    int _t11F5 = 1;
    int _t11F6 = prim $sub01C0<int; %2> (_t11F4, _t11F5);
    Femdata: MeshPos _t11F7 = extractFemItemN((mesh0593, _t08B4, _t11F1, _t11F6),RefBuild(Mesh),);
    return _t11F7;
  } else {
    real _t11F8 = time0597[0];
    vec3 _t11F9 = prim *0036<$[3]> (_t11F8, dPos0596);
    vec3 _t11FA = prim +0017<$[3]> (_t11F9, refPos0595);
    Femdata: MeshPos _t11FB = extractFemItemN((mesh0593, _t11FA),InvalidBuildBoundary(MeshPos),);
    return _t11FB;
  }
}
function int[2]#8 nextCell4059B (int faceIdx11FC, int cell11FD, Femdata: Mesh mesh11FE)
{
  int _t11FF = 12;
  int _t1200 = prim *0033 (cell11FD, _t11FF);
  int _t1201 = 2;
  int _t1202 = prim *0033 (faceIdx11FC, _t1201);
  int _t1203 = prim +0015 (_t1200, _t1202);
  int[2] _t1204 = extractFemItemN((mesh11FE, _t1203),CellFaceCell(Mesh),);
  return _t1204;
}
function vec2#0 _enter1205 (vec3 refPos1206, vec3 dPos1207)
{
  real time1208 = +inf;
  int face1209 = -1;
  real faceTime120A = -inf;
  real _t120B = -0.5e0;
  real _t120C = 0.e0;
  real _t120D = 0.e0;
  real _t120E = 0.1e1;
  vec3 _t120F = [_t120C, _t120D, _t120E];
  real _t1210 = prim •00CE<$[3]; $[3]; $[]> (_t120F, refPos1206);
  real _t1211 = prim -0026<$[]> (_t120B, _t1210);
  real _t1212 = 0.e0;
  real _t1213 = 0.e0;
  real _t1214 = 0.1e1;
  vec3 _t1215 = [_t1212, _t1213, _t1214];
  real _t1216 = prim •00CE<$[3]; $[3]; $[]> (_t1215, dPos1207);
  real _t1217 = prim /0055 (_t1211, _t1216);
  real _t1218 = -0.1e-15;
  bool _t1219 = prim >=007E (_t1217, _t1218);
  real _t121A = -0.5e0;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  real _t121D = 0.1e1;
  vec3 _t121E = [_t121B, _t121C, _t121D];
  real _t121F = prim •00CE<$[3]; $[3]; $[]> (_t121E, refPos1206);
  real _t1220 = prim -0026<$[]> (_t121A, _t121F);
  real _t1221 = 0.e0;
  real _t1222 = 0.e0;
  real _t1223 = 0.1e1;
  vec3 _t1224 = [_t1221, _t1222, _t1223];
  real _t1225 = prim •00CE<$[3]; $[3]; $[]> (_t1224, dPos1207);
  real _t1226 = prim /0055 (_t1220, _t1225);
  bool _t1227 = prim >0080 (time1208, _t1226);
  real _t1228 = 0.e0;
  real _t1229 = 0.e0;
  real _t122A = 0.1e1;
  vec3 _t122B = [_t1228, _t1229, _t122A];
  real _t122C = prim •00CE<$[3]; $[3]; $[]> (_t122B, dPos1207);
  real _t122D = prim |()|00B5<$[]> (_t122C);
  real _t122E = 0.1e-20;
  bool _t122F = prim >=007E (_t122D, _t122E);
  bool _t1230 = prim $and01C4 (_t1227, _t122F);
  bool _t1231 = prim $and01C4 (_t1219, _t1230);
  if _t1231 {
    real _t1232 = -0.5e0;
    real _t1233 = 0.e0;
    real _t1234 = 0.e0;
    real _t1235 = 0.1e1;
    vec3 _t1236 = [_t1233, _t1234, _t1235];
    real _t1237 = prim •00CE<$[3]; $[3]; $[]> (_t1236, refPos1206);
    real _t1238 = prim -0026<$[]> (_t1232, _t1237);
    real _t1239 = 0.e0;
    real _t123A = 0.e0;
    real _t123B = 0.1e1;
    vec3 _t123C = [_t1239, _t123A, _t123B];
    real _t123D = prim •00CE<$[3]; $[3]; $[]> (_t123C, dPos1207);
    real _t123E = prim /0055 (_t1238, _t123D);
    vec3 _t123F = prim *0038<$[3]> (dPos1207, _t123E);
    vec3 _t1240 = prim +0017<$[3]> (refPos1206, _t123F);
    real _t1241 = -0.5e0;
    real _t1242 = 0.e0;
    real _t1243 = 0.e0;
    real _t1244 = 0.1e1;
    vec3 _t1245 = [_t1242, _t1243, _t1244];
    real _t1246 = prim •00CE<$[3]; $[3]; $[]> (_t1245, refPos1206);
    real _t1247 = prim -0026<$[]> (_t1241, _t1246);
    real _t1248 = 0.e0;
    real _t1249 = 0.e0;
    real _t124A = 0.1e1;
    vec3 _t124B = [_t1248, _t1249, _t124A];
    real _t124C = prim •00CE<$[3]; $[3]; $[]> (_t124B, dPos1207);
    real _t124D = prim /0055 (_t1247, _t124C);
    vec3 _t124E = prim *0038<$[3]> (dPos1207, _t124D);
    vec3 _t124F = prim +0017<$[3]> (refPos1206, _t124E);
    real _t1250 = 0.1e-8;
    bool _t1251 = extractFemItemN((_t1240, _t124F, _t1250),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1251 {
      real _t1252 = -0.5e0;
      real _t1253 = 0.e0;
      real _t1254 = 0.e0;
      real _t1255 = 0.1e1;
      vec3 _t1256 = [_t1253, _t1254, _t1255];
      real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos1206);
      real _t1258 = prim -0026<$[]> (_t1252, _t1257);
      real _t1259 = 0.e0;
      real _t125A = 0.e0;
      real _t125B = 0.1e1;
      vec3 _t125C = [_t1259, _t125A, _t125B];
      real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos1207);
      time1208 = prim /0055 (_t1258, _t125D);
      face1209 = 0;
    }
  }
  real _t125E = 0.5e0;
  real _t125F = 0.e0;
  real _t1260 = 0.e0;
  real _t1261 = 0.1e1;
  vec3 _t1262 = [_t125F, _t1260, _t1261];
  real _t1263 = prim •00CE<$[3]; $[3]; $[]> (_t1262, refPos1206);
  real _t1264 = prim -0026<$[]> (_t125E, _t1263);
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  real _t1267 = 0.1e1;
  vec3 _t1268 = [_t1265, _t1266, _t1267];
  real _t1269 = prim •00CE<$[3]; $[3]; $[]> (_t1268, dPos1207);
  real _t126A = prim /0055 (_t1264, _t1269);
  real _t126B = -0.1e-15;
  bool _t126C = prim >=007E (_t126A, _t126B);
  real _t126D = 0.5e0;
  real _t126E = 0.e0;
  real _t126F = 0.e0;
  real _t1270 = 0.1e1;
  vec3 _t1271 = [_t126E, _t126F, _t1270];
  real _t1272 = prim •00CE<$[3]; $[3]; $[]> (_t1271, refPos1206);
  real _t1273 = prim -0026<$[]> (_t126D, _t1272);
  real _t1274 = 0.e0;
  real _t1275 = 0.e0;
  real _t1276 = 0.1e1;
  vec3 _t1277 = [_t1274, _t1275, _t1276];
  real _t1278 = prim •00CE<$[3]; $[3]; $[]> (_t1277, dPos1207);
  real _t1279 = prim /0055 (_t1273, _t1278);
  bool _t127A = prim >0080 (time1208, _t1279);
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  real _t127D = 0.1e1;
  vec3 _t127E = [_t127B, _t127C, _t127D];
  real _t127F = prim •00CE<$[3]; $[3]; $[]> (_t127E, dPos1207);
  real _t1280 = prim |()|00B5<$[]> (_t127F);
  real _t1281 = 0.1e-20;
  bool _t1282 = prim >=007E (_t1280, _t1281);
  bool _t1283 = prim $and01C4 (_t127A, _t1282);
  bool _t1284 = prim $and01C4 (_t126C, _t1283);
  if _t1284 {
    real _t1285 = 0.5e0;
    real _t1286 = 0.e0;
    real _t1287 = 0.e0;
    real _t1288 = 0.1e1;
    vec3 _t1289 = [_t1286, _t1287, _t1288];
    real _t128A = prim •00CE<$[3]; $[3]; $[]> (_t1289, refPos1206);
    real _t128B = prim -0026<$[]> (_t1285, _t128A);
    real _t128C = 0.e0;
    real _t128D = 0.e0;
    real _t128E = 0.1e1;
    vec3 _t128F = [_t128C, _t128D, _t128E];
    real _t1290 = prim •00CE<$[3]; $[3]; $[]> (_t128F, dPos1207);
    real _t1291 = prim /0055 (_t128B, _t1290);
    vec3 _t1292 = prim *0038<$[3]> (dPos1207, _t1291);
    vec3 _t1293 = prim +0017<$[3]> (refPos1206, _t1292);
    real _t1294 = 0.5e0;
    real _t1295 = 0.e0;
    real _t1296 = 0.e0;
    real _t1297 = 0.1e1;
    vec3 _t1298 = [_t1295, _t1296, _t1297];
    real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos1206);
    real _t129A = prim -0026<$[]> (_t1294, _t1299);
    real _t129B = 0.e0;
    real _t129C = 0.e0;
    real _t129D = 0.1e1;
    vec3 _t129E = [_t129B, _t129C, _t129D];
    real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos1207);
    real _t12A0 = prim /0055 (_t129A, _t129F);
    vec3 _t12A1 = prim *0038<$[3]> (dPos1207, _t12A0);
    vec3 _t12A2 = prim +0017<$[3]> (refPos1206, _t12A1);
    real _t12A3 = 0.1e-8;
    bool _t12A4 = extractFemItemN((_t1293, _t12A2, _t12A3),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12A4 {
      real _t12A5 = 0.5e0;
      real _t12A6 = 0.e0;
      real _t12A7 = 0.e0;
      real _t12A8 = 0.1e1;
      vec3 _t12A9 = [_t12A6, _t12A7, _t12A8];
      real _t12AA = prim •00CE<$[3]; $[3]; $[]> (_t12A9, refPos1206);
      real _t12AB = prim -0026<$[]> (_t12A5, _t12AA);
      real _t12AC = 0.e0;
      real _t12AD = 0.e0;
      real _t12AE = 0.1e1;
      vec3 _t12AF = [_t12AC, _t12AD, _t12AE];
      real _t12B0 = prim •00CE<$[3]; $[3]; $[]> (_t12AF, dPos1207);
      time1208 = prim /0055 (_t12AB, _t12B0);
      face1209 = 1;
    }
  }
  real _t12B1 = -0.5e0;
  real _t12B2 = 0.e0;
  real _t12B3 = 0.1e1;
  real _t12B4 = 0.e0;
  vec3 _t12B5 = [_t12B2, _t12B3, _t12B4];
  real _t12B6 = prim •00CE<$[3]; $[3]; $[]> (_t12B5, refPos1206);
  real _t12B7 = prim -0026<$[]> (_t12B1, _t12B6);
  real _t12B8 = 0.e0;
  real _t12B9 = 0.1e1;
  real _t12BA = 0.e0;
  vec3 _t12BB = [_t12B8, _t12B9, _t12BA];
  real _t12BC = prim •00CE<$[3]; $[3]; $[]> (_t12BB, dPos1207);
  real _t12BD = prim /0055 (_t12B7, _t12BC);
  real _t12BE = -0.1e-15;
  bool _t12BF = prim >=007E (_t12BD, _t12BE);
  real _t12C0 = -0.5e0;
  real _t12C1 = 0.e0;
  real _t12C2 = 0.1e1;
  real _t12C3 = 0.e0;
  vec3 _t12C4 = [_t12C1, _t12C2, _t12C3];
  real _t12C5 = prim •00CE<$[3]; $[3]; $[]> (_t12C4, refPos1206);
  real _t12C6 = prim -0026<$[]> (_t12C0, _t12C5);
  real _t12C7 = 0.e0;
  real _t12C8 = 0.1e1;
  real _t12C9 = 0.e0;
  vec3 _t12CA = [_t12C7, _t12C8, _t12C9];
  real _t12CB = prim •00CE<$[3]; $[3]; $[]> (_t12CA, dPos1207);
  real _t12CC = prim /0055 (_t12C6, _t12CB);
  bool _t12CD = prim >0080 (time1208, _t12CC);
  real _t12CE = 0.e0;
  real _t12CF = 0.1e1;
  real _t12D0 = 0.e0;
  vec3 _t12D1 = [_t12CE, _t12CF, _t12D0];
  real _t12D2 = prim •00CE<$[3]; $[3]; $[]> (_t12D1, dPos1207);
  real _t12D3 = prim |()|00B5<$[]> (_t12D2);
  real _t12D4 = 0.1e-20;
  bool _t12D5 = prim >=007E (_t12D3, _t12D4);
  bool _t12D6 = prim $and01C4 (_t12CD, _t12D5);
  bool _t12D7 = prim $and01C4 (_t12BF, _t12D6);
  if _t12D7 {
    real _t12D8 = -0.5e0;
    real _t12D9 = 0.e0;
    real _t12DA = 0.1e1;
    real _t12DB = 0.e0;
    vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
    real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, refPos1206);
    real _t12DE = prim -0026<$[]> (_t12D8, _t12DD);
    real _t12DF = 0.e0;
    real _t12E0 = 0.1e1;
    real _t12E1 = 0.e0;
    vec3 _t12E2 = [_t12DF, _t12E0, _t12E1];
    real _t12E3 = prim •00CE<$[3]; $[3]; $[]> (_t12E2, dPos1207);
    real _t12E4 = prim /0055 (_t12DE, _t12E3);
    vec3 _t12E5 = prim *0038<$[3]> (dPos1207, _t12E4);
    vec3 _t12E6 = prim +0017<$[3]> (refPos1206, _t12E5);
    real _t12E7 = -0.5e0;
    real _t12E8 = 0.e0;
    real _t12E9 = 0.1e1;
    real _t12EA = 0.e0;
    vec3 _t12EB = [_t12E8, _t12E9, _t12EA];
    real _t12EC = prim •00CE<$[3]; $[3]; $[]> (_t12EB, refPos1206);
    real _t12ED = prim -0026<$[]> (_t12E7, _t12EC);
    real _t12EE = 0.e0;
    real _t12EF = 0.1e1;
    real _t12F0 = 0.e0;
    vec3 _t12F1 = [_t12EE, _t12EF, _t12F0];
    real _t12F2 = prim •00CE<$[3]; $[3]; $[]> (_t12F1, dPos1207);
    real _t12F3 = prim /0055 (_t12ED, _t12F2);
    vec3 _t12F4 = prim *0038<$[3]> (dPos1207, _t12F3);
    vec3 _t12F5 = prim +0017<$[3]> (refPos1206, _t12F4);
    real _t12F6 = 0.1e-8;
    bool _t12F7 = extractFemItemN((_t12E6, _t12F5, _t12F6),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12F7 {
      real _t12F8 = -0.5e0;
      real _t12F9 = 0.e0;
      real _t12FA = 0.1e1;
      real _t12FB = 0.e0;
      vec3 _t12FC = [_t12F9, _t12FA, _t12FB];
      real _t12FD = prim •00CE<$[3]; $[3]; $[]> (_t12FC, refPos1206);
      real _t12FE = prim -0026<$[]> (_t12F8, _t12FD);
      real _t12FF = 0.e0;
      real _t1300 = 0.1e1;
      real _t1301 = 0.e0;
      vec3 _t1302 = [_t12FF, _t1300, _t1301];
      real _t1303 = prim •00CE<$[3]; $[3]; $[]> (_t1302, dPos1207);
      time1208 = prim /0055 (_t12FE, _t1303);
      face1209 = 2;
    }
  }
  real _t1304 = -0.5e0;
  real _t1305 = -0.1e1;
  real _t1306 = 0.e0;
  real _t1307 = 0.e0;
  vec3 _t1308 = [_t1305, _t1306, _t1307];
  real _t1309 = prim •00CE<$[3]; $[3]; $[]> (_t1308, refPos1206);
  real _t130A = prim -0026<$[]> (_t1304, _t1309);
  real _t130B = -0.1e1;
  real _t130C = 0.e0;
  real _t130D = 0.e0;
  vec3 _t130E = [_t130B, _t130C, _t130D];
  real _t130F = prim •00CE<$[3]; $[3]; $[]> (_t130E, dPos1207);
  real _t1310 = prim /0055 (_t130A, _t130F);
  real _t1311 = -0.1e-15;
  bool _t1312 = prim >=007E (_t1310, _t1311);
  real _t1313 = -0.5e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  real _t1316 = 0.e0;
  vec3 _t1317 = [_t1314, _t1315, _t1316];
  real _t1318 = prim •00CE<$[3]; $[3]; $[]> (_t1317, refPos1206);
  real _t1319 = prim -0026<$[]> (_t1313, _t1318);
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  real _t131C = 0.e0;
  vec3 _t131D = [_t131A, _t131B, _t131C];
  real _t131E = prim •00CE<$[3]; $[3]; $[]> (_t131D, dPos1207);
  real _t131F = prim /0055 (_t1319, _t131E);
  bool _t1320 = prim >0080 (time1208, _t131F);
  real _t1321 = -0.1e1;
  real _t1322 = 0.e0;
  real _t1323 = 0.e0;
  vec3 _t1324 = [_t1321, _t1322, _t1323];
  real _t1325 = prim •00CE<$[3]; $[3]; $[]> (_t1324, dPos1207);
  real _t1326 = prim |()|00B5<$[]> (_t1325);
  real _t1327 = 0.1e-20;
  bool _t1328 = prim >=007E (_t1326, _t1327);
  bool _t1329 = prim $and01C4 (_t1320, _t1328);
  bool _t132A = prim $and01C4 (_t1312, _t1329);
  if _t132A {
    real _t132B = -0.5e0;
    real _t132C = -0.1e1;
    real _t132D = 0.e0;
    real _t132E = 0.e0;
    vec3 _t132F = [_t132C, _t132D, _t132E];
    real _t1330 = prim •00CE<$[3]; $[3]; $[]> (_t132F, refPos1206);
    real _t1331 = prim -0026<$[]> (_t132B, _t1330);
    real _t1332 = -0.1e1;
    real _t1333 = 0.e0;
    real _t1334 = 0.e0;
    vec3 _t1335 = [_t1332, _t1333, _t1334];
    real _t1336 = prim •00CE<$[3]; $[3]; $[]> (_t1335, dPos1207);
    real _t1337 = prim /0055 (_t1331, _t1336);
    vec3 _t1338 = prim *0038<$[3]> (dPos1207, _t1337);
    vec3 _t1339 = prim +0017<$[3]> (refPos1206, _t1338);
    real _t133A = -0.5e0;
    real _t133B = -0.1e1;
    real _t133C = 0.e0;
    real _t133D = 0.e0;
    vec3 _t133E = [_t133B, _t133C, _t133D];
    real _t133F = prim •00CE<$[3]; $[3]; $[]> (_t133E, refPos1206);
    real _t1340 = prim -0026<$[]> (_t133A, _t133F);
    real _t1341 = -0.1e1;
    real _t1342 = 0.e0;
    real _t1343 = 0.e0;
    vec3 _t1344 = [_t1341, _t1342, _t1343];
    real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, dPos1207);
    real _t1346 = prim /0055 (_t1340, _t1345);
    vec3 _t1347 = prim *0038<$[3]> (dPos1207, _t1346);
    vec3 _t1348 = prim +0017<$[3]> (refPos1206, _t1347);
    real _t1349 = 0.1e-8;
    bool _t134A = extractFemItemN((_t1339, _t1348, _t1349),InsideInsert(File=checkInside.in)(Mesh),);
    if _t134A {
      real _t134B = -0.5e0;
      real _t134C = -0.1e1;
      real _t134D = 0.e0;
      real _t134E = 0.e0;
      vec3 _t134F = [_t134C, _t134D, _t134E];
      real _t1350 = prim •00CE<$[3]; $[3]; $[]> (_t134F, refPos1206);
      real _t1351 = prim -0026<$[]> (_t134B, _t1350);
      real _t1352 = -0.1e1;
      real _t1353 = 0.e0;
      real _t1354 = 0.e0;
      vec3 _t1355 = [_t1352, _t1353, _t1354];
      real _t1356 = prim •00CE<$[3]; $[3]; $[]> (_t1355, dPos1207);
      time1208 = prim /0055 (_t1351, _t1356);
      face1209 = 3;
    }
  }
  real _t1357 = -0.5e0;
  real _t1358 = 0.e0;
  real _t1359 = -0.1e1;
  real _t135A = 0.e0;
  vec3 _t135B = [_t1358, _t1359, _t135A];
  real _t135C = prim •00CE<$[3]; $[3]; $[]> (_t135B, refPos1206);
  real _t135D = prim -0026<$[]> (_t1357, _t135C);
  real _t135E = 0.e0;
  real _t135F = -0.1e1;
  real _t1360 = 0.e0;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = prim •00CE<$[3]; $[3]; $[]> (_t1361, dPos1207);
  real _t1363 = prim /0055 (_t135D, _t1362);
  real _t1364 = -0.1e-15;
  bool _t1365 = prim >=007E (_t1363, _t1364);
  real _t1366 = -0.5e0;
  real _t1367 = 0.e0;
  real _t1368 = -0.1e1;
  real _t1369 = 0.e0;
  vec3 _t136A = [_t1367, _t1368, _t1369];
  real _t136B = prim •00CE<$[3]; $[3]; $[]> (_t136A, refPos1206);
  real _t136C = prim -0026<$[]> (_t1366, _t136B);
  real _t136D = 0.e0;
  real _t136E = -0.1e1;
  real _t136F = 0.e0;
  vec3 _t1370 = [_t136D, _t136E, _t136F];
  real _t1371 = prim •00CE<$[3]; $[3]; $[]> (_t1370, dPos1207);
  real _t1372 = prim /0055 (_t136C, _t1371);
  bool _t1373 = prim >0080 (time1208, _t1372);
  real _t1374 = 0.e0;
  real _t1375 = -0.1e1;
  real _t1376 = 0.e0;
  vec3 _t1377 = [_t1374, _t1375, _t1376];
  real _t1378 = prim •00CE<$[3]; $[3]; $[]> (_t1377, dPos1207);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  real _t137A = 0.1e-20;
  bool _t137B = prim >=007E (_t1379, _t137A);
  bool _t137C = prim $and01C4 (_t1373, _t137B);
  bool _t137D = prim $and01C4 (_t1365, _t137C);
  if _t137D {
    real _t137E = -0.5e0;
    real _t137F = 0.e0;
    real _t1380 = -0.1e1;
    real _t1381 = 0.e0;
    vec3 _t1382 = [_t137F, _t1380, _t1381];
    real _t1383 = prim •00CE<$[3]; $[3]; $[]> (_t1382, refPos1206);
    real _t1384 = prim -0026<$[]> (_t137E, _t1383);
    real _t1385 = 0.e0;
    real _t1386 = -0.1e1;
    real _t1387 = 0.e0;
    vec3 _t1388 = [_t1385, _t1386, _t1387];
    real _t1389 = prim •00CE<$[3]; $[3]; $[]> (_t1388, dPos1207);
    real _t138A = prim /0055 (_t1384, _t1389);
    vec3 _t138B = prim *0038<$[3]> (dPos1207, _t138A);
    vec3 _t138C = prim +0017<$[3]> (refPos1206, _t138B);
    real _t138D = -0.5e0;
    real _t138E = 0.e0;
    real _t138F = -0.1e1;
    real _t1390 = 0.e0;
    vec3 _t1391 = [_t138E, _t138F, _t1390];
    real _t1392 = prim •00CE<$[3]; $[3]; $[]> (_t1391, refPos1206);
    real _t1393 = prim -0026<$[]> (_t138D, _t1392);
    real _t1394 = 0.e0;
    real _t1395 = -0.1e1;
    real _t1396 = 0.e0;
    vec3 _t1397 = [_t1394, _t1395, _t1396];
    real _t1398 = prim •00CE<$[3]; $[3]; $[]> (_t1397, dPos1207);
    real _t1399 = prim /0055 (_t1393, _t1398);
    vec3 _t139A = prim *0038<$[3]> (dPos1207, _t1399);
    vec3 _t139B = prim +0017<$[3]> (refPos1206, _t139A);
    real _t139C = 0.1e-8;
    bool _t139D = extractFemItemN((_t138C, _t139B, _t139C),InsideInsert(File=checkInside.in)(Mesh),);
    if _t139D {
      real _t139E = -0.5e0;
      real _t139F = 0.e0;
      real _t13A0 = -0.1e1;
      real _t13A1 = 0.e0;
      vec3 _t13A2 = [_t139F, _t13A0, _t13A1];
      real _t13A3 = prim •00CE<$[3]; $[3]; $[]> (_t13A2, refPos1206);
      real _t13A4 = prim -0026<$[]> (_t139E, _t13A3);
      real _t13A5 = 0.e0;
      real _t13A6 = -0.1e1;
      real _t13A7 = 0.e0;
      vec3 _t13A8 = [_t13A5, _t13A6, _t13A7];
      real _t13A9 = prim •00CE<$[3]; $[3]; $[]> (_t13A8, dPos1207);
      time1208 = prim /0055 (_t13A4, _t13A9);
      face1209 = 4;
    }
  }
  real _t13AA = -0.5e0;
  real _t13AB = 0.1e1;
  real _t13AC = 0.e0;
  real _t13AD = -0.e0;
  vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
  real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos1206);
  real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
  real _t13B1 = 0.1e1;
  real _t13B2 = 0.e0;
  real _t13B3 = -0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos1207);
  real _t13B6 = prim /0055 (_t13B0, _t13B5);
  real _t13B7 = -0.1e-15;
  bool _t13B8 = prim >=007E (_t13B6, _t13B7);
  real _t13B9 = -0.5e0;
  real _t13BA = 0.1e1;
  real _t13BB = 0.e0;
  real _t13BC = -0.e0;
  vec3 _t13BD = [_t13BA, _t13BB, _t13BC];
  real _t13BE = prim •00CE<$[3]; $[3]; $[]> (_t13BD, refPos1206);
  real _t13BF = prim -0026<$[]> (_t13B9, _t13BE);
  real _t13C0 = 0.1e1;
  real _t13C1 = 0.e0;
  real _t13C2 = -0.e0;
  vec3 _t13C3 = [_t13C0, _t13C1, _t13C2];
  real _t13C4 = prim •00CE<$[3]; $[3]; $[]> (_t13C3, dPos1207);
  real _t13C5 = prim /0055 (_t13BF, _t13C4);
  bool _t13C6 = prim >0080 (time1208, _t13C5);
  real _t13C7 = 0.1e1;
  real _t13C8 = 0.e0;
  real _t13C9 = -0.e0;
  vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
  real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, dPos1207);
  real _t13CC = prim |()|00B5<$[]> (_t13CB);
  real _t13CD = 0.1e-20;
  bool _t13CE = prim >=007E (_t13CC, _t13CD);
  bool _t13CF = prim $and01C4 (_t13C6, _t13CE);
  bool _t13D0 = prim $and01C4 (_t13B8, _t13CF);
  if _t13D0 {
    real _t13D1 = -0.5e0;
    real _t13D2 = 0.1e1;
    real _t13D3 = 0.e0;
    real _t13D4 = -0.e0;
    vec3 _t13D5 = [_t13D2, _t13D3, _t13D4];
    real _t13D6 = prim •00CE<$[3]; $[3]; $[]> (_t13D5, refPos1206);
    real _t13D7 = prim -0026<$[]> (_t13D1, _t13D6);
    real _t13D8 = 0.1e1;
    real _t13D9 = 0.e0;
    real _t13DA = -0.e0;
    vec3 _t13DB = [_t13D8, _t13D9, _t13DA];
    real _t13DC = prim •00CE<$[3]; $[3]; $[]> (_t13DB, dPos1207);
    real _t13DD = prim /0055 (_t13D7, _t13DC);
    vec3 _t13DE = prim *0038<$[3]> (dPos1207, _t13DD);
    vec3 _t13DF = prim +0017<$[3]> (refPos1206, _t13DE);
    real _t13E0 = -0.5e0;
    real _t13E1 = 0.1e1;
    real _t13E2 = 0.e0;
    real _t13E3 = -0.e0;
    vec3 _t13E4 = [_t13E1, _t13E2, _t13E3];
    real _t13E5 = prim •00CE<$[3]; $[3]; $[]> (_t13E4, refPos1206);
    real _t13E6 = prim -0026<$[]> (_t13E0, _t13E5);
    real _t13E7 = 0.1e1;
    real _t13E8 = 0.e0;
    real _t13E9 = -0.e0;
    vec3 _t13EA = [_t13E7, _t13E8, _t13E9];
    real _t13EB = prim •00CE<$[3]; $[3]; $[]> (_t13EA, dPos1207);
    real _t13EC = prim /0055 (_t13E6, _t13EB);
    vec3 _t13ED = prim *0038<$[3]> (dPos1207, _t13EC);
    vec3 _t13EE = prim +0017<$[3]> (refPos1206, _t13ED);
    real _t13EF = 0.1e-8;
    bool _t13F0 = extractFemItemN((_t13DF, _t13EE, _t13EF),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13F0 {
      real _t13F1 = -0.5e0;
      real _t13F2 = 0.1e1;
      real _t13F3 = 0.e0;
      real _t13F4 = -0.e0;
      vec3 _t13F5 = [_t13F2, _t13F3, _t13F4];
      real _t13F6 = prim •00CE<$[3]; $[3]; $[]> (_t13F5, refPos1206);
      real _t13F7 = prim -0026<$[]> (_t13F1, _t13F6);
      real _t13F8 = 0.1e1;
      real _t13F9 = 0.e0;
      real _t13FA = -0.e0;
      vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
      real _t13FC = prim •00CE<$[3]; $[3]; $[]> (_t13FB, dPos1207);
      time1208 = prim /0055 (_t13F7, _t13FC);
      face1209 = 5;
    }
  }
  int _t13FD = -1;
  bool _t13FE = prim !=0086 (face1209, _t13FD);
  if _t13FE {
    real _t13FF = 0.e0;
    real _t1400 = prim max0125 (time1208, _t13FF);
    real _t1401 = (real)face1209;
    vec2 _t1402 = [_t1400, _t1401];
    return _t1402;
  } else {
    real _t1403 = -0.1e1;
    real _t1404 = -0.1e1;
    vec2 _t1405 = [_t1403, _t1404];
    return _t1405;
  }
}
function vec2#0 _exit1406 (vec3 refPos1206, vec3 dPos1207, int i1407)
{
  real time1408 = +inf;
  int face1409 = -1;
  real faceTime140A = -inf;
  real _t140B = -0.5e0;
  real _t140C = 0.e0;
  real _t140D = 0.e0;
  real _t140E = 0.1e1;
  vec3 _t140F = [_t140C, _t140D, _t140E];
  real _t1410 = prim •00CE<$[3]; $[3]; $[]> (_t140F, refPos1206);
  real _t1411 = prim -0026<$[]> (_t140B, _t1410);
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = 0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, dPos1207);
  real _t1417 = prim /0055 (_t1411, _t1416);
  real _t1418 = -0.1e-15;
  bool _t1419 = prim >=007E (_t1417, _t1418);
  real _t141A = -0.5e0;
  real _t141B = 0.e0;
  real _t141C = 0.e0;
  real _t141D = 0.1e1;
  vec3 _t141E = [_t141B, _t141C, _t141D];
  real _t141F = prim •00CE<$[3]; $[3]; $[]> (_t141E, refPos1206);
  real _t1420 = prim -0026<$[]> (_t141A, _t141F);
  real _t1421 = 0.e0;
  real _t1422 = 0.e0;
  real _t1423 = 0.1e1;
  vec3 _t1424 = [_t1421, _t1422, _t1423];
  real _t1425 = prim •00CE<$[3]; $[3]; $[]> (_t1424, dPos1207);
  real _t1426 = prim /0055 (_t1420, _t1425);
  bool _t1427 = prim >0080 (time1408, _t1426);
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.1e1;
  vec3 _t142B = [_t1428, _t1429, _t142A];
  real _t142C = prim •00CE<$[3]; $[3]; $[]> (_t142B, dPos1207);
  real _t142D = prim |()|00B5<$[]> (_t142C);
  real _t142E = 0.1e-20;
  bool _t142F = prim >=007E (_t142D, _t142E);
  bool _t1430 = prim $and01C4 (_t1427, _t142F);
  bool _t1431 = prim $and01C4 (_t1419, _t1430);
  if _t1431 {
    int _t1432 = 0;
    bool _t1433 = prim !=0086 (i1407, _t1432);
    if _t1433 {
      real _t1434 = -0.5e0;
      real _t1435 = 0.e0;
      real _t1436 = 0.e0;
      real _t1437 = 0.1e1;
      vec3 _t1438 = [_t1435, _t1436, _t1437];
      real _t1439 = prim •00CE<$[3]; $[3]; $[]> (_t1438, refPos1206);
      real _t143A = prim -0026<$[]> (_t1434, _t1439);
      real _t143B = 0.e0;
      real _t143C = 0.e0;
      real _t143D = 0.1e1;
      vec3 _t143E = [_t143B, _t143C, _t143D];
      real _t143F = prim •00CE<$[3]; $[3]; $[]> (_t143E, dPos1207);
      time1408 = prim /0055 (_t143A, _t143F);
      face1409 = 0;
    } else {
      real _t1440 = -0.5e0;
      real _t1441 = 0.e0;
      real _t1442 = 0.e0;
      real _t1443 = 0.1e1;
      vec3 _t1444 = [_t1441, _t1442, _t1443];
      real _t1445 = prim •00CE<$[3]; $[3]; $[]> (_t1444, refPos1206);
      real _t1446 = prim -0026<$[]> (_t1440, _t1445);
      real _t1447 = 0.e0;
      real _t1448 = 0.e0;
      real _t1449 = 0.1e1;
      vec3 _t144A = [_t1447, _t1448, _t1449];
      real _t144B = prim •00CE<$[3]; $[3]; $[]> (_t144A, dPos1207);
      faceTime140A = prim /0055 (_t1446, _t144B);
    }
  }
  real _t144C = 0.5e0;
  real _t144D = 0.e0;
  real _t144E = 0.e0;
  real _t144F = 0.1e1;
  vec3 _t1450 = [_t144D, _t144E, _t144F];
  real _t1451 = prim •00CE<$[3]; $[3]; $[]> (_t1450, refPos1206);
  real _t1452 = prim -0026<$[]> (_t144C, _t1451);
  real _t1453 = 0.e0;
  real _t1454 = 0.e0;
  real _t1455 = 0.1e1;
  vec3 _t1456 = [_t1453, _t1454, _t1455];
  real _t1457 = prim •00CE<$[3]; $[3]; $[]> (_t1456, dPos1207);
  real _t1458 = prim /0055 (_t1452, _t1457);
  real _t1459 = -0.1e-15;
  bool _t145A = prim >=007E (_t1458, _t1459);
  real _t145B = 0.5e0;
  real _t145C = 0.e0;
  real _t145D = 0.e0;
  real _t145E = 0.1e1;
  vec3 _t145F = [_t145C, _t145D, _t145E];
  real _t1460 = prim •00CE<$[3]; $[3]; $[]> (_t145F, refPos1206);
  real _t1461 = prim -0026<$[]> (_t145B, _t1460);
  real _t1462 = 0.e0;
  real _t1463 = 0.e0;
  real _t1464 = 0.1e1;
  vec3 _t1465 = [_t1462, _t1463, _t1464];
  real _t1466 = prim •00CE<$[3]; $[3]; $[]> (_t1465, dPos1207);
  real _t1467 = prim /0055 (_t1461, _t1466);
  bool _t1468 = prim >0080 (time1408, _t1467);
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.1e1;
  vec3 _t146C = [_t1469, _t146A, _t146B];
  real _t146D = prim •00CE<$[3]; $[3]; $[]> (_t146C, dPos1207);
  real _t146E = prim |()|00B5<$[]> (_t146D);
  real _t146F = 0.1e-20;
  bool _t1470 = prim >=007E (_t146E, _t146F);
  bool _t1471 = prim $and01C4 (_t1468, _t1470);
  bool _t1472 = prim $and01C4 (_t145A, _t1471);
  if _t1472 {
    int _t1473 = 1;
    bool _t1474 = prim !=0086 (i1407, _t1473);
    if _t1474 {
      real _t1475 = 0.5e0;
      real _t1476 = 0.e0;
      real _t1477 = 0.e0;
      real _t1478 = 0.1e1;
      vec3 _t1479 = [_t1476, _t1477, _t1478];
      real _t147A = prim •00CE<$[3]; $[3]; $[]> (_t1479, refPos1206);
      real _t147B = prim -0026<$[]> (_t1475, _t147A);
      real _t147C = 0.e0;
      real _t147D = 0.e0;
      real _t147E = 0.1e1;
      vec3 _t147F = [_t147C, _t147D, _t147E];
      real _t1480 = prim •00CE<$[3]; $[3]; $[]> (_t147F, dPos1207);
      time1408 = prim /0055 (_t147B, _t1480);
      face1409 = 1;
    } else {
      real _t1481 = 0.5e0;
      real _t1482 = 0.e0;
      real _t1483 = 0.e0;
      real _t1484 = 0.1e1;
      vec3 _t1485 = [_t1482, _t1483, _t1484];
      real _t1486 = prim •00CE<$[3]; $[3]; $[]> (_t1485, refPos1206);
      real _t1487 = prim -0026<$[]> (_t1481, _t1486);
      real _t1488 = 0.e0;
      real _t1489 = 0.e0;
      real _t148A = 0.1e1;
      vec3 _t148B = [_t1488, _t1489, _t148A];
      real _t148C = prim •00CE<$[3]; $[3]; $[]> (_t148B, dPos1207);
      faceTime140A = prim /0055 (_t1487, _t148C);
    }
  }
  real _t148D = -0.5e0;
  real _t148E = 0.e0;
  real _t148F = 0.1e1;
  real _t1490 = 0.e0;
  vec3 _t1491 = [_t148E, _t148F, _t1490];
  real _t1492 = prim •00CE<$[3]; $[3]; $[]> (_t1491, refPos1206);
  real _t1493 = prim -0026<$[]> (_t148D, _t1492);
  real _t1494 = 0.e0;
  real _t1495 = 0.1e1;
  real _t1496 = 0.e0;
  vec3 _t1497 = [_t1494, _t1495, _t1496];
  real _t1498 = prim •00CE<$[3]; $[3]; $[]> (_t1497, dPos1207);
  real _t1499 = prim /0055 (_t1493, _t1498);
  real _t149A = -0.1e-15;
  bool _t149B = prim >=007E (_t1499, _t149A);
  real _t149C = -0.5e0;
  real _t149D = 0.e0;
  real _t149E = 0.1e1;
  real _t149F = 0.e0;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, refPos1206);
  real _t14A2 = prim -0026<$[]> (_t149C, _t14A1);
  real _t14A3 = 0.e0;
  real _t14A4 = 0.1e1;
  real _t14A5 = 0.e0;
  vec3 _t14A6 = [_t14A3, _t14A4, _t14A5];
  real _t14A7 = prim •00CE<$[3]; $[3]; $[]> (_t14A6, dPos1207);
  real _t14A8 = prim /0055 (_t14A2, _t14A7);
  bool _t14A9 = prim >0080 (time1408, _t14A8);
  real _t14AA = 0.e0;
  real _t14AB = 0.1e1;
  real _t14AC = 0.e0;
  vec3 _t14AD = [_t14AA, _t14AB, _t14AC];
  real _t14AE = prim •00CE<$[3]; $[3]; $[]> (_t14AD, dPos1207);
  real _t14AF = prim |()|00B5<$[]> (_t14AE);
  real _t14B0 = 0.1e-20;
  bool _t14B1 = prim >=007E (_t14AF, _t14B0);
  bool _t14B2 = prim $and01C4 (_t14A9, _t14B1);
  bool _t14B3 = prim $and01C4 (_t149B, _t14B2);
  if _t14B3 {
    int _t14B4 = 2;
    bool _t14B5 = prim !=0086 (i1407, _t14B4);
    if _t14B5 {
      real _t14B6 = -0.5e0;
      real _t14B7 = 0.e0;
      real _t14B8 = 0.1e1;
      real _t14B9 = 0.e0;
      vec3 _t14BA = [_t14B7, _t14B8, _t14B9];
      real _t14BB = prim •00CE<$[3]; $[3]; $[]> (_t14BA, refPos1206);
      real _t14BC = prim -0026<$[]> (_t14B6, _t14BB);
      real _t14BD = 0.e0;
      real _t14BE = 0.1e1;
      real _t14BF = 0.e0;
      vec3 _t14C0 = [_t14BD, _t14BE, _t14BF];
      real _t14C1 = prim •00CE<$[3]; $[3]; $[]> (_t14C0, dPos1207);
      time1408 = prim /0055 (_t14BC, _t14C1);
      face1409 = 2;
    } else {
      real _t14C2 = -0.5e0;
      real _t14C3 = 0.e0;
      real _t14C4 = 0.1e1;
      real _t14C5 = 0.e0;
      vec3 _t14C6 = [_t14C3, _t14C4, _t14C5];
      real _t14C7 = prim •00CE<$[3]; $[3]; $[]> (_t14C6, refPos1206);
      real _t14C8 = prim -0026<$[]> (_t14C2, _t14C7);
      real _t14C9 = 0.e0;
      real _t14CA = 0.1e1;
      real _t14CB = 0.e0;
      vec3 _t14CC = [_t14C9, _t14CA, _t14CB];
      real _t14CD = prim •00CE<$[3]; $[3]; $[]> (_t14CC, dPos1207);
      faceTime140A = prim /0055 (_t14C8, _t14CD);
    }
  }
  real _t14CE = -0.5e0;
  real _t14CF = -0.1e1;
  real _t14D0 = 0.e0;
  real _t14D1 = 0.e0;
  vec3 _t14D2 = [_t14CF, _t14D0, _t14D1];
  real _t14D3 = prim •00CE<$[3]; $[3]; $[]> (_t14D2, refPos1206);
  real _t14D4 = prim -0026<$[]> (_t14CE, _t14D3);
  real _t14D5 = -0.1e1;
  real _t14D6 = 0.e0;
  real _t14D7 = 0.e0;
  vec3 _t14D8 = [_t14D5, _t14D6, _t14D7];
  real _t14D9 = prim •00CE<$[3]; $[3]; $[]> (_t14D8, dPos1207);
  real _t14DA = prim /0055 (_t14D4, _t14D9);
  real _t14DB = -0.1e-15;
  bool _t14DC = prim >=007E (_t14DA, _t14DB);
  real _t14DD = -0.5e0;
  real _t14DE = -0.1e1;
  real _t14DF = 0.e0;
  real _t14E0 = 0.e0;
  vec3 _t14E1 = [_t14DE, _t14DF, _t14E0];
  real _t14E2 = prim •00CE<$[3]; $[3]; $[]> (_t14E1, refPos1206);
  real _t14E3 = prim -0026<$[]> (_t14DD, _t14E2);
  real _t14E4 = -0.1e1;
  real _t14E5 = 0.e0;
  real _t14E6 = 0.e0;
  vec3 _t14E7 = [_t14E4, _t14E5, _t14E6];
  real _t14E8 = prim •00CE<$[3]; $[3]; $[]> (_t14E7, dPos1207);
  real _t14E9 = prim /0055 (_t14E3, _t14E8);
  bool _t14EA = prim >0080 (time1408, _t14E9);
  real _t14EB = -0.1e1;
  real _t14EC = 0.e0;
  real _t14ED = 0.e0;
  vec3 _t14EE = [_t14EB, _t14EC, _t14ED];
  real _t14EF = prim •00CE<$[3]; $[3]; $[]> (_t14EE, dPos1207);
  real _t14F0 = prim |()|00B5<$[]> (_t14EF);
  real _t14F1 = 0.1e-20;
  bool _t14F2 = prim >=007E (_t14F0, _t14F1);
  bool _t14F3 = prim $and01C4 (_t14EA, _t14F2);
  bool _t14F4 = prim $and01C4 (_t14DC, _t14F3);
  if _t14F4 {
    int _t14F5 = 3;
    bool _t14F6 = prim !=0086 (i1407, _t14F5);
    if _t14F6 {
      real _t14F7 = -0.5e0;
      real _t14F8 = -0.1e1;
      real _t14F9 = 0.e0;
      real _t14FA = 0.e0;
      vec3 _t14FB = [_t14F8, _t14F9, _t14FA];
      real _t14FC = prim •00CE<$[3]; $[3]; $[]> (_t14FB, refPos1206);
      real _t14FD = prim -0026<$[]> (_t14F7, _t14FC);
      real _t14FE = -0.1e1;
      real _t14FF = 0.e0;
      real _t1500 = 0.e0;
      vec3 _t1501 = [_t14FE, _t14FF, _t1500];
      real _t1502 = prim •00CE<$[3]; $[3]; $[]> (_t1501, dPos1207);
      time1408 = prim /0055 (_t14FD, _t1502);
      face1409 = 3;
    } else {
      real _t1503 = -0.5e0;
      real _t1504 = -0.1e1;
      real _t1505 = 0.e0;
      real _t1506 = 0.e0;
      vec3 _t1507 = [_t1504, _t1505, _t1506];
      real _t1508 = prim •00CE<$[3]; $[3]; $[]> (_t1507, refPos1206);
      real _t1509 = prim -0026<$[]> (_t1503, _t1508);
      real _t150A = -0.1e1;
      real _t150B = 0.e0;
      real _t150C = 0.e0;
      vec3 _t150D = [_t150A, _t150B, _t150C];
      real _t150E = prim •00CE<$[3]; $[3]; $[]> (_t150D, dPos1207);
      faceTime140A = prim /0055 (_t1509, _t150E);
    }
  }
  real _t150F = -0.5e0;
  real _t1510 = 0.e0;
  real _t1511 = -0.1e1;
  real _t1512 = 0.e0;
  vec3 _t1513 = [_t1510, _t1511, _t1512];
  real _t1514 = prim •00CE<$[3]; $[3]; $[]> (_t1513, refPos1206);
  real _t1515 = prim -0026<$[]> (_t150F, _t1514);
  real _t1516 = 0.e0;
  real _t1517 = -0.1e1;
  real _t1518 = 0.e0;
  vec3 _t1519 = [_t1516, _t1517, _t1518];
  real _t151A = prim •00CE<$[3]; $[3]; $[]> (_t1519, dPos1207);
  real _t151B = prim /0055 (_t1515, _t151A);
  real _t151C = -0.1e-15;
  bool _t151D = prim >=007E (_t151B, _t151C);
  real _t151E = -0.5e0;
  real _t151F = 0.e0;
  real _t1520 = -0.1e1;
  real _t1521 = 0.e0;
  vec3 _t1522 = [_t151F, _t1520, _t1521];
  real _t1523 = prim •00CE<$[3]; $[3]; $[]> (_t1522, refPos1206);
  real _t1524 = prim -0026<$[]> (_t151E, _t1523);
  real _t1525 = 0.e0;
  real _t1526 = -0.1e1;
  real _t1527 = 0.e0;
  vec3 _t1528 = [_t1525, _t1526, _t1527];
  real _t1529 = prim •00CE<$[3]; $[3]; $[]> (_t1528, dPos1207);
  real _t152A = prim /0055 (_t1524, _t1529);
  bool _t152B = prim >0080 (time1408, _t152A);
  real _t152C = 0.e0;
  real _t152D = -0.1e1;
  real _t152E = 0.e0;
  vec3 _t152F = [_t152C, _t152D, _t152E];
  real _t1530 = prim •00CE<$[3]; $[3]; $[]> (_t152F, dPos1207);
  real _t1531 = prim |()|00B5<$[]> (_t1530);
  real _t1532 = 0.1e-20;
  bool _t1533 = prim >=007E (_t1531, _t1532);
  bool _t1534 = prim $and01C4 (_t152B, _t1533);
  bool _t1535 = prim $and01C4 (_t151D, _t1534);
  if _t1535 {
    int _t1536 = 4;
    bool _t1537 = prim !=0086 (i1407, _t1536);
    if _t1537 {
      real _t1538 = -0.5e0;
      real _t1539 = 0.e0;
      real _t153A = -0.1e1;
      real _t153B = 0.e0;
      vec3 _t153C = [_t1539, _t153A, _t153B];
      real _t153D = prim •00CE<$[3]; $[3]; $[]> (_t153C, refPos1206);
      real _t153E = prim -0026<$[]> (_t1538, _t153D);
      real _t153F = 0.e0;
      real _t1540 = -0.1e1;
      real _t1541 = 0.e0;
      vec3 _t1542 = [_t153F, _t1540, _t1541];
      real _t1543 = prim •00CE<$[3]; $[3]; $[]> (_t1542, dPos1207);
      time1408 = prim /0055 (_t153E, _t1543);
      face1409 = 4;
    } else {
      real _t1544 = -0.5e0;
      real _t1545 = 0.e0;
      real _t1546 = -0.1e1;
      real _t1547 = 0.e0;
      vec3 _t1548 = [_t1545, _t1546, _t1547];
      real _t1549 = prim •00CE<$[3]; $[3]; $[]> (_t1548, refPos1206);
      real _t154A = prim -0026<$[]> (_t1544, _t1549);
      real _t154B = 0.e0;
      real _t154C = -0.1e1;
      real _t154D = 0.e0;
      vec3 _t154E = [_t154B, _t154C, _t154D];
      real _t154F = prim •00CE<$[3]; $[3]; $[]> (_t154E, dPos1207);
      faceTime140A = prim /0055 (_t154A, _t154F);
    }
  }
  real _t1550 = -0.5e0;
  real _t1551 = 0.1e1;
  real _t1552 = 0.e0;
  real _t1553 = -0.e0;
  vec3 _t1554 = [_t1551, _t1552, _t1553];
  real _t1555 = prim •00CE<$[3]; $[3]; $[]> (_t1554, refPos1206);
  real _t1556 = prim -0026<$[]> (_t1550, _t1555);
  real _t1557 = 0.1e1;
  real _t1558 = 0.e0;
  real _t1559 = -0.e0;
  vec3 _t155A = [_t1557, _t1558, _t1559];
  real _t155B = prim •00CE<$[3]; $[3]; $[]> (_t155A, dPos1207);
  real _t155C = prim /0055 (_t1556, _t155B);
  real _t155D = -0.1e-15;
  bool _t155E = prim >=007E (_t155C, _t155D);
  real _t155F = -0.5e0;
  real _t1560 = 0.1e1;
  real _t1561 = 0.e0;
  real _t1562 = -0.e0;
  vec3 _t1563 = [_t1560, _t1561, _t1562];
  real _t1564 = prim •00CE<$[3]; $[3]; $[]> (_t1563, refPos1206);
  real _t1565 = prim -0026<$[]> (_t155F, _t1564);
  real _t1566 = 0.1e1;
  real _t1567 = 0.e0;
  real _t1568 = -0.e0;
  vec3 _t1569 = [_t1566, _t1567, _t1568];
  real _t156A = prim •00CE<$[3]; $[3]; $[]> (_t1569, dPos1207);
  real _t156B = prim /0055 (_t1565, _t156A);
  bool _t156C = prim >0080 (time1408, _t156B);
  real _t156D = 0.1e1;
  real _t156E = 0.e0;
  real _t156F = -0.e0;
  vec3 _t1570 = [_t156D, _t156E, _t156F];
  real _t1571 = prim •00CE<$[3]; $[3]; $[]> (_t1570, dPos1207);
  real _t1572 = prim |()|00B5<$[]> (_t1571);
  real _t1573 = 0.1e-20;
  bool _t1574 = prim >=007E (_t1572, _t1573);
  bool _t1575 = prim $and01C4 (_t156C, _t1574);
  bool _t1576 = prim $and01C4 (_t155E, _t1575);
  if _t1576 {
    int _t1577 = 5;
    bool _t1578 = prim !=0086 (i1407, _t1577);
    if _t1578 {
      real _t1579 = -0.5e0;
      real _t157A = 0.1e1;
      real _t157B = 0.e0;
      real _t157C = -0.e0;
      vec3 _t157D = [_t157A, _t157B, _t157C];
      real _t157E = prim •00CE<$[3]; $[3]; $[]> (_t157D, refPos1206);
      real _t157F = prim -0026<$[]> (_t1579, _t157E);
      real _t1580 = 0.1e1;
      real _t1581 = 0.e0;
      real _t1582 = -0.e0;
      vec3 _t1583 = [_t1580, _t1581, _t1582];
      real _t1584 = prim •00CE<$[3]; $[3]; $[]> (_t1583, dPos1207);
      time1408 = prim /0055 (_t157F, _t1584);
      face1409 = 5;
    } else {
      real _t1585 = -0.5e0;
      real _t1586 = 0.1e1;
      real _t1587 = 0.e0;
      real _t1588 = -0.e0;
      vec3 _t1589 = [_t1586, _t1587, _t1588];
      real _t158A = prim •00CE<$[3]; $[3]; $[]> (_t1589, refPos1206);
      real _t158B = prim -0026<$[]> (_t1585, _t158A);
      real _t158C = 0.1e1;
      real _t158D = 0.e0;
      real _t158E = -0.e0;
      vec3 _t158F = [_t158C, _t158D, _t158E];
      real _t1590 = prim •00CE<$[3]; $[3]; $[]> (_t158F, dPos1207);
      faceTime140A = prim /0055 (_t158B, _t1590);
    }
  }
  int _t1591 = -1;
  bool _t1592 = prim !=0086 (face1409, _t1591);
  if _t1592 {
    real _t1593 = 0.e0;
    real _t1594 = prim max0125 (time1408, _t1593);
    real _t1595 = (real)face1409;
    vec2 _t1596 = [_t1594, _t1595];
    return _t1596;
  } else {
    real _t1597 = -inf;
    bool _t1598 = prim ==0084 (_t1597, faceTime140A);
    if _t1598 {
      real _t1599 = -0.1e1;
      real _t159A = -0.1e1;
      vec2 _t159B = [_t1599, _t159A];
      return _t159B;
    } else {
      real _t159C = (real)i1407;
      vec2 _t159D = [faceTime140A, _t159C];
      return _t159D;
    }
  }
}
function Femdata: Mesh#0 domain159E (Femdata: Space arg0159F)
{
  Femdata: Mesh _t15A0 = extractFem(arg0159F, Mesh);
  return _t15A0;
}
function Femdata: Space#0 space15A1 (Femdata: FemFunc arg015A2)
{
  Femdata: Space _t15A3 = extractFem(arg015A2, Space);
  return _t15A3;
}
function Femdata: FuncCell#3 funcCell15A4 (Femdata: FemFunc arg015A5, Femdata: MeshCell arg115A6)
{
  int _t15A7 = extractFemItem(CellIndex(MeshCell), int, arg115A6);
  Femdata: FuncCell _t15A8 = loadFem(FuncCell, arg015A5, _t15A7);
  return _t15A8;
}
function real#1 atent15CD (real a015CE, real d15CF)
{
  real _t15D0 = 0.e0;
  real _t15D1 = 0.1e1;
  real _t15D2 = 0.15e1;
  real _t15D3 = 0.1e1;
  real _t15D4 = prim |()|00B5<$[]> (d15CF);
  real _t15D5 = prim /0055 (_t15D4, thick04EB);
  real _t15D6 = prim -0026<$[]> (_t15D3, _t15D5);
  real _t15D7 = prim *0034 (_t15D2, _t15D6);
  real _t15D8 = prim clamp0094<$[]> (_t15D0, _t15D1, _t15D7);
  real _t15D9 = prim *0034 (a015CE, _t15D8);
  return _t15D9;
}
function vec3#1 fStep15DA (vec3 x15DB)
{
  field(3)[3] _t15DC = prim ∇00A8<#∞; %3> (F15B1);
  field(3)[3,3] _t15DD = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15DC);
  tensor[3,3] _t15DE = prim @00A5<#∞; %3; $[3,3]> (_t15DD, x15DB);
  vec3[3] E15DF = prim evecs00A0 (_t15DE);
  field(3)[3] _t15E0 = prim ∇00A8<#∞; %3> (F15B1);
  field(3)[3,3] _t15E1 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15E0);
  tensor[3,3] _t15E2 = prim @00A5<#∞; %3; $[3,3]> (_t15E1, x15DB);
  real[3] L15E3 = prim evals009F (_t15E2);
  int _t15E4 = 2;
  vec3 _t15E5 = prim $sub01C0<vec3; %3> (E15DF, _t15E4);
  int _t15E6 = 2;
  vec3 _t15E7 = prim $sub01C0<vec3; %3> (E15DF, _t15E6);
  tensor[3,3] _t15E8 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t15E5, _t15E7);
  int _t15E9 = 2;
  real _t15EA = prim $sub01C0<real; %3> (L15E3, _t15E9);
  tensor[3,3] _t15EB = prim /0057<$[3,3]> (_t15E8, _t15EA);
  int _t15EC = 1;
  vec3 _t15ED = prim $sub01C0<vec3; %3> (E15DF, _t15EC);
  int _t15EE = 1;
  vec3 _t15EF = prim $sub01C0<vec3; %3> (E15DF, _t15EE);
  tensor[3,3] _t15F0 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t15ED, _t15EF);
  int _t15F1 = 1;
  real _t15F2 = prim $sub01C0<real; %3> (L15E3, _t15F1);
  tensor[3,3] _t15F3 = prim /0057<$[3,3]> (_t15F0, _t15F2);
  tensor[3,3] _t15F4 = prim +0017<$[3,3]> (_t15EB, _t15F3);
  tensor[3,3] _t15F5 = prim unary -008B<$[3,3]> (_t15F4);
  field(3)[3] _t15F6 = prim ∇00A8<#∞; %3> (F15B1);
  vec3 _t15F7 = prim @00A5<#∞; %3; $[3]> (_t15F6, x15DB);
  vec3 _t15F8 = prim •00CE<$[3,3]; $[3]; $[3]> (_t15F5, _t15F7);
  return _t15F8;
}
function real#1 fStrength15F9 (vec3 x15FA)
{
  field(3)[3] _t15FB = prim ∇00A8<#∞; %3> (F15B1);
  field(3)[3,3] _t15FC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15FB);
  tensor[3,3] _t15FD = prim @00A5<#∞; %3; $[3,3]> (_t15FC, x15FA);
  real[3] _t15FE = prim evals009F (_t15FD);
  int _t15FF = 1;
  real _t1600 = prim $sub01C0<real; %3> (_t15FE, _t15FF);
  real _t1601 = prim unary -008B<$[]> (_t1600);
  field(3)[3] _t1602 = prim ∇00A8<#∞; %3> (F15B1);
  vec3 _t1603 = prim @00A5<#∞; %3; $[3]> (_t1602, x15FA);
  real _t1604 = prim |()|00B5<$[3]> (_t1603);
  real _t1605 = prim +0017<$[]> (fBias04EE, _t1604);
  real _t1606 = prim /0055 (_t1601, _t1605);
  return _t1606;
}
function bool#1 fTest1607 (vec3 x1608)
{
  bool _t1609 = true;
  return _t1609;
}
function real#1 fMask160A (vec3 x160B)
{
  real _t160C = 0.1e1;
  return _t160C;
}
function bool#1 posTest160D (vec3 x160E)
{
  bool _t160F;
  Femdata: RefCell _t1610 = func refcell053F (block04C3);
  real _t1611 = 0.1e-8;
  bool _t1612 = extractFemItemN((_t1610, x160E, _t1611),InsideInsert(File=checkInside.in)(Mesh),);
  if _t1612 {
    bool _t1613;
    real _t1614 = func fStrength15F9 (x160E);
    bool _t1615 = prim >0080 (_t1614, fStrTh04EC);
    if _t1615 {
      bool _t1616;
      real _t1617 = func fMask160A (x160E);
      bool _t1618 = prim >=007E (_t1617, fMaskTh04ED);
      if _t1618 {
        _t1616 = func fTest1607 (x160E);
      } else {
        _t1616 = false;
      }
      _t1613 = _t1616;
    } else {
      _t1613 = false;
    }
    _t160F = _t1613;
  } else {
    _t160F = false;
  }
  return _t160F;
}
globalInit {
  int _t04C7 = 0;
  int _t04C5 = 1;
  int _t04C9 = extractFemItem(NumCell(Mesh), int, block04C3);
  int _t04C8 = prim -0024 (_t04C9, _t04C5);
  int[] _t04CC = prim $range01C3 (_t04C7, _t04C8);
  Femdata: MeshCell[] _t04CD = {};
  foreach _t04CB in _t04CC {
    Femdata: MeshCell _t04CE = loadFem(MeshCell, block04C3, _t04CB);
    _t04CD = prim @0010<Femdata: MeshCell> (_t04CD, _t04CE);
  }
  0cell_block04C4 = _t04CD;
  space04CF = loadFem(Space, 0space04CF_intermedateGlobal04D0, block04C3);
  U04D1 = loadFem(FemFunc, 0U04D1_intermedateGlobal04D2, space04CF);
  c115A9 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04C4, cellChoice04D3);
  Femdata: FuncCell _t15AA = func funcCell15A4 (U04D1, c115A9);
  Femdata: FemFunc _t15AB = extractFem(_t15AA, FemFunc);
  Femdata: FuncCell _t15AC = func funcCell15A4 (U04D1, c115A9);
  Femdata: FemFunc _t15AD = extractFem(_t15AC, FemFunc);
  Femdata: Space _t15AE = extractFem(_t15AD, Space);
  Femdata: FuncCell _t15AF = func funcCell15A4 (U04D1, c115A9);
  int _t15B0 = extractFemItem(CellIndex(FuncCell), int, _t15AF);
  F15B1 = femField(_t15AB,_t15B0,field(3)[],refField,);
  kernel _t15B2 = tent;
  IMAGE1D<double[3]> img15B3 = clamp(cmap04D5);
  CM15B4 = prim ⊛0074<#0; %1; $[3]> (_t15B2, img15B3);
  C15B5 = F15B1;
  vec3 _t15B6 = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camN15B7 = prim normalize0137<$[3]> (_t15B6);
  vec3 _t15B8 = prim ×00BE (camN15B7, camUp04DE);
  camU15B9 = prim normalize0137<$[3]> (_t15B8);
  camV15BA = prim ×00BE (camN15B7, camU15B9);
  vec3 _t15BB = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camDist15BC = prim |()|00B5<$[3]> (_t15BB);
  real _t15BD = 0.314159265358979323846264338327950288e1;
  real _t15BE = prim *0034 (camFOV04E4, _t15BD);
  real _t15BF = 0.36e3;
  real _t15C0 = prim /0055 (_t15BE, _t15BF);
  real _t15C1 = prim tan0179 (_t15C0);
  camVmax15C2 = prim *0034 (_t15C1, camDist15BC);
  real _t15C3 = (real)iresU04E6;
  real _t15C4 = prim *0034 (camVmax15C2, _t15C3);
  real _t15C5 = (real)iresV04E7;
  camUmax15C6 = prim /0055 (_t15C4, _t15C5);
  camNearVsp15C7 = prim +0017<$[]> (camNear04E2, camDist15BC);
  camFarVsp15C8 = prim +0017<$[]> (camFar04E3, camDist15BC);
  tensor[3,3] _t15C9 = [camU15B9, camV15BA, camN15B7];
  tensor[3,3] _t15CA = prim transpose0145<%3; %3> (_t15C9);
  vec3 _t15CB = prim normalize0137<$[3]> (litdir04FE);
  litwsp15CC = prim •00CE<$[3,3]; $[3]; $[3]> (_t15CA, _t15CB);
}
strand ray (int ui1619, int vi161A) {
  real rayU161B;
  real rayV1622;
  real rayN1629;
  vec3 UV162A;
  vec3 rayOrig162D;
  vec3 rayVec1632;
  real alphaFix1637;
  vec3 eyeDir163A;
  real phKa163C;
  real phKd163D;
  real phKs163E;
  real phSp163F;
  output vec4 rgba1640;
  output real raw1645;
  vec3 rgb1646;
  real transp164A;
  {
    real _t161C = prim unary -008B<$[]> (camUmax15C6);
    real _t161D = -0.5e0;
    real _t161E = (real)ui1619;
    real _t161F = (real)iresU04E6;
    real _t1620 = 0.5e0;
    real _t1621 = prim -0026<$[]> (_t161F, _t1620);
    rayU161B = prim lerp0098<$[]> (_t161C, camUmax15C6, _t161D, _t161E, _t1621);
    real _t1623 = prim unary -008B<$[]> (camVmax15C2);
    real _t1624 = -0.5e0;
    real _t1625 = (real)vi161A;
    real _t1626 = (real)iresV04E7;
    real _t1627 = 0.5e0;
    real _t1628 = prim -0026<$[]> (_t1626, _t1627);
    rayV1622 = prim lerp0098<$[]> (_t1623, camVmax15C2, _t1624, _t1625, _t1628);
    rayN1629 = camNearVsp15C7;
    vec3 _t162B = prim *0036<$[3]> (rayU161B, camU15B9);
    vec3 _t162C = prim *0036<$[3]> (rayV1622, camV15BA);
    UV162A = prim +0017<$[3]> (_t162B, _t162C);
    vec3 _t162E;
    if camOrtho04E5 {
      _t162E = UV162A;
    } else {
      real _t162F = 0.e0;
      real _t1630 = 0.e0;
      real _t1631 = 0.e0;
      _t162E = [_t162F, _t1630, _t1631];
    }
    rayOrig162D = prim +0017<$[3]> (camEye04D6, _t162E);
    vec3 _t1633;
    if camOrtho04E5 {
      real _t1634 = 0.e0;
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      _t1633 = [_t1634, _t1635, _t1636];
    } else {
      _t1633 = prim /0057<$[3]> (UV162A, camDist15BC);
    }
    rayVec1632 = prim +0017<$[3]> (camN15B7, _t1633);
    real _t1638 = prim |()|00B5<$[3]> (rayVec1632);
    real _t1639 = prim *0034 (_t1638, rayStep04E8);
    alphaFix1637 = prim /0055 (_t1639, refStep04E9);
    vec3 _t163B = prim normalize0137<$[3]> (rayVec1632);
    eyeDir163A = prim unary -008B<$[3]> (_t163B);
    phKa163C = phong04F1[0];
    phKd163D = phong04F1[1];
    phKs163E = phong04F1[2];
    phSp163F = phong04F1[3];
    real _t1641 = 0.e0;
    real _t1642 = 0.e0;
    real _t1643 = 0.e0;
    real _t1644 = 0.e0;
    rgba1640 = [_t1641, _t1642, _t1643, _t1644];
    raw1645 = 0.e0;
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    rgb1646 = [_t1647, _t1648, _t1649];
    transp164A = 0.1e1;
  }
  update
  {
    rayN1629 = prim +0017<$[]> (rayN1629, rayStep04E8);
    bool _t164B = prim >0080 (rayN1629, camFarVsp15C8);
    if _t164B {
      stabilize;
    }
    vec3 _t164C = prim *0036<$[3]> (rayN1629, rayVec1632);
    vec3 pos164D = prim +0017<$[3]> (rayOrig162D, _t164C);
    bool _t164E = func posTest160D (pos164D);
    bool _t164F = prim !00BC (_t164E);
    if _t164F {
      continue;
    }
    vec3 step1650 = func fStep15DA (pos164D);
    real _t1651 = prim |()|00B5<$[3]> (step1650);
    real aa1652 = func atent15CD (maxAlpha04EF, _t1651);
    real _t1653 = 0.e0;
    bool _t1654 = prim ==0084 (aa1652, _t1653);
    if _t1654 {
      continue;
    }
    real _t1655 = 0.1e1;
    real _t1656 = 0.1e1;
    real _t1657 = prim -0026<$[]> (_t1656, aa1652);
    real _t1658 = prim ^0069 (_t1657, alphaFix1637);
    aa1652 = prim -0026<$[]> (_t1655, _t1658);
    vec3 _t1659 = prim normalize0137<$[3]> (step1650);
    vec3 snorm165A = prim unary -008B<$[3]> (_t1659);
    real _t165B = prim •00CE<$[3]; $[3]; $[]> (snorm165A, litwsp15CC);
    int _t165C = 2;
    real dcomp165D = prim ^0068 (_t165B, _t165C);
    real scomp165E = 0.e0;
    real _t165F = 0.e0;
    bool _t1660 = prim !=0088 (phKs163E, _t165F);
    if _t1660 {
      vec3 _t1661 = prim +0017<$[3]> (eyeDir163A, litwsp15CC);
      vec3 _t1662 = prim normalize0137<$[3]> (_t1661);
      real _t1663 = prim •00CE<$[3]; $[3]; $[]> (snorm165A, _t1662);
      real _t1664 = prim |()|00B5<$[]> (_t1663);
      scomp165E = prim ^0069 (_t1664, phSp163F);
    }
    vec3 dcol1665 = prim lerp0098<$[3]> (mcNear04F6, mcFar04FA, camNearVsp15C7, rayN1629, camFarVsp15C8);
    real cmin1666 = cminmax0502[0];
    real cmax1667 = cminmax0502[1];
    real _t1668 = 0.1e1;
    real _t1669 = 0.1e1;
    real _t166A = 0.1e1;
    vec3 mcol166B = [_t1668, _t1669, _t166A];
    bool _t166C = prim !=0088 (cmin1666, cmax1667);
    if _t166C {
      real _t166D = 0.e0;
      real _t166E = 0.1e1;
      vec3 _t166F = prim +0017<$[3]> (pos164D, step1650);
      real _t1670 = prim @00A5<#∞; %3; $[]> (C15B5, _t166F);
      real _t1671 = prim lerp0098<$[]> (_t166D, _t166E, cmin1666, _t1670, cmax1667);
      mcol166B = prim @00A5<#0; %1; $[3]> (CM15B4, _t1671);
    }
    real _t1672 = prim *0034 (transp164A, aa1652);
    real _t1673 = prim *0034 (phKd163D, dcomp165D);
    real _t1674 = prim +0017<$[]> (phKa163C, _t1673);
    vec3 _t1675 = prim modulate0129<%3> (dcol1665, mcol166B);
    vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
    real _t1677 = prim *0034 (phKs163E, scomp165E);
    real _t1678 = 0.1e1;
    real _t1679 = 0.1e1;
    real _t167A = 0.1e1;
    vec3 _t167B = [_t1678, _t1679, _t167A];
    vec3 _t167C = prim *0036<$[3]> (_t1677, _t167B);
    vec3 _t167D = prim +0017<$[3]> (_t1676, _t167C);
    vec3 _t167E = prim *0036<$[3]> (_t1672, _t167D);
    rgb1646 = prim +0017<$[3]> (rgb1646, _t167E);
    real _t167F = 0.1e1;
    real _t1680 = prim -0026<$[]> (_t167F, aa1652);
    transp164A = prim *0034 (transp164A, _t1680);
    bool _t1681 = prim <007A (transp164A, transp004EA);
    if _t1681 {
      transp164A = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1682 = 0.1e1;
    bool _t1683 = prim <007A (transp164A, _t1682);
    if _t1683 {
      real _t1684 = 0.1e1;
      real aa1685 = prim -0026<$[]> (_t1684, transp164A);
      real _t1686 = rgb1646[0];
      real _t1687 = prim /0055 (_t1686, aa1685);
      real _t1688 = rgb1646[1];
      real _t1689 = prim /0055 (_t1688, aa1685);
      real _t168A = rgb1646[2];
      real _t168B = prim /0055 (_t168A, aa1685);
      rgba1640 = [_t1687, _t1689, _t168B, aa1685];
    }
  }
}
grid(2) {
  int _t168C = 0;
  int _t168D = 1;
  int _t168E = prim -0024 (iresV04E7, _t168D);
  int[] _t168F = prim $range01C3 (_t168C, _t168E);
  foreach vi1695 in _t168F {
    int _t1690 = 0;
    int _t1691 = 1;
    int _t1692 = prim -0024 (iresU04E6, _t1691);
    int[] _t1693 = prim $range01C3 (_t1690, _t1692);
    foreach ui1694 in _t1693 {
      new ray (ui1694, vi1695);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04C3;
input FemData:Space 0space04CF_intermedateGlobal04D0;
input FemData:FemFunc 0U04D1_intermedateGlobal04D2;
input int cellChoice04D3;
input image(1)[3] cmap04D5 = image("cmap.nrrd");
input vec3 camEye04D6 = <default>;
input vec3 camAt04DA = <default>;
input vec3 camUp04DE = <default>;
input real camNear04E2 = <default>;
input real camFar04E3 = <default>;
input real camFOV04E4 = <default>;
input bool camOrtho04E5 = <default>;
input int iresU04E6 = <default>;
input int iresV04E7 = <default>;
input real rayStep04E8 = <default>;
input real refStep04E9 = <default>;
input real transp004EA = <default>;
input real thick04EB = <default>;
input real fStrTh04EC = <default>;
input real fMaskTh04ED = <default>;
input real fBias04EE = <default>;
input real maxAlpha04EF = <default>;
input bool light04F0 = <default>;
input vec4 phong04F1 = <default>;
input vec3 mcNear04F6 = <default>;
input vec3 mcFar04FA = <default>;
input vec3 litdir04FE = <default>;
input vec2 cminmax0502 = <default>;
constants {
  real _t04D7 = 0.e0;
  real _t04D8 = -0.2e1;
  real _t04D9 = 0.e0;
  camEye04D6 = [_t04D7, _t04D8, _t04D9];
  real _t04DB = 0.e0;
  real _t04DC = 0.e0;
  real _t04DD = 0.e0;
  camAt04DA = [_t04DB, _t04DC, _t04DD];
  real _t04DF = 0.e0;
  real _t04E0 = 0.e0;
  real _t04E1 = 0.1e1;
  camUp04DE = [_t04DF, _t04E0, _t04E1];
  camNear04E2 = -0.4e1;
  camFar04E3 = 0.4e1;
  camFOV04E4 = 0.1e2;
  camOrtho04E5 = false;
  iresU04E6 = 100;
  iresV04E7 = 100;
  rayStep04E8 = 0.1e-3;
  refStep04E9 = 0.1e-3;
  transp004EA = 0.5e-2;
  thick04EB = 0.1e-1;
  fStrTh04EC = 0.e0;
  fMaskTh04ED = 0.e0;
  fBias04EE = 0.1e0;
  maxAlpha04EF = 0.1e1;
  light04F0 = false;
  real _t04F2 = 0.1e0;
  real _t04F3 = 0.7e0;
  real _t04F4 = 0.2e0;
  real _t04F5 = 0.1e3;
  phong04F1 = [_t04F2, _t04F3, _t04F4, _t04F5];
  real _t04F7 = 0.1e1;
  real _t04F8 = 0.1e1;
  real _t04F9 = 0.1e1;
  mcNear04F6 = [_t04F7, _t04F8, _t04F9];
  real _t04FB = 0.1e1;
  real _t04FC = 0.1e1;
  real _t04FD = 0.1e1;
  mcFar04FA = [_t04FB, _t04FC, _t04FD];
  real _t04FF = 0.e0;
  real _t0500 = -0.1e1;
  real _t0501 = 0.e0;
  litdir04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.e0;
  real _t0504 = 0.e0;
  cminmax0502 = [_t0503, _t0504];
}
global Femdata: MeshCell[] 0cell_block04C4;
global Femdata: Space space04CF;
global Femdata: FemFunc U04D1;
global Femdata: MeshCell c115A9;
global field(3)[] F15B1;
global field#0(1)[3] CM15B4;
global field(3)[] C15B5;
global vec3 camN15B7;
global vec3 camU15B9;
global vec3 camV15BA;
global real camDist15BC;
global real camVmax15C2;
global real camUmax15C6;
global real camNearVsp15C7;
global real camFarVsp15C8;
global vec3 litwsp15CC;
function bool#0 !=0505 (Femdata: MeshCell cell10506, Femdata: MeshCell cell10507)
{
  int _t0508 = extractFemItem(CellIndex(Mesh), int, cell10506);
  int _t0509 = extractFemItem(CellIndex(Mesh), int, cell10507);
  bool _t050A = prim !=0086 (_t0508, _t0509);
  return _t050A;
}
function bool#0 ==050B (Femdata: MeshCell cell10506, Femdata: MeshCell cell10507)
{
  int _t050C = extractFemItem(CellIndex(Mesh), int, cell10506);
  int _t050D = extractFemItem(CellIndex(Mesh), int, cell10507);
  bool _t050E = prim ==0082 (_t050C, _t050D);
  return _t050E;
}
function Femdata: MeshPos#0 findPos050F (Femdata: Mesh mesh0510, vec3 pos0511)
{
  real _t0512 = 0.e0;
  real _t0513 = 0.e0;
  real _t0514 = 0.e0;
  xn0515 = [_t0512, _t0513, _t0514];
  newtonInt0516 = 0;
  cellInt0517 = extractFemItem(StartCell(Mesh), int, mesh0510);
  int _t0518 = extractFemItem(NumCell(Mesh), int, mesh0510);
  int _t0519 = 1;
  numCell051A = prim -0024 (_t0518, _t0519);
  int _t051B = 0;
  int _t051C = 2;
  int _t051D = 1;
  int _t051E = prim +0015 (_t051C, _t051D);
  int _t051F = prim *0033 (_t051E, numCell051A);
  int[] _t0520 = prim $range01C3 (_t051B, _t051F);
  foreach itter053B in _t0520 {
    field(3)[3] _t0521 = femField(mesh0510,cellInt0517,field(3)[3],Transform,);
    field(3)[3,3] _t0522 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0521);
    field(3)[3,3] _t0523 = prim inv015E<#∞; %3> (_t0522);
    real _t0524 = 0.e0;
    real _t0525 = 0.e0;
    real _t0526 = 0.e0;
    vec3 _t0527 = [_t0524, _t0525, _t0526];
    A0528 = prim @00A5<#∞; %3; $[3,3]> (_t0523, _t0527);
    field(3)[3] _t0529 = femField(mesh0510,cellInt0517,field(3)[3],Transform,);
    field(3)[3] _t052A = prim -002E<#∞; %3; $[3]> (_t0529, pos0511);
    field(3)[3] _t052B = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0528, _t052A);
    delta052C = prim @00A5<#∞; %3; $[3]> (_t052B, xn0515);
    xn0515 = prim -0026<$[3]> (xn0515, delta052C);
    real _t052D = 0.1e-7;
    real _t052E = 0.1e-7;
    real _t052F = prim *0034 (_t052D, _t052E);
    real _t0530 = prim •00CE<$[3]; $[3]; $[]> (delta052C, delta052C);
    bool _t0531 = prim >=007E (_t052F, _t0530);
    if _t0531 {
      real _t0532 = 0.1e-8;
      bool _t0533 = extractFemItemN((mesh0510, xn0515, _t0532),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0533 {
        Femdata: MeshPos _t0534 = extractFemItemN((mesh0510, cellInt0517, xn0515, pos0511),AllBuild(MeshPos),);
        return _t0534;
      }
    }
    int _t0535 = 1;
    newtonInt0516 = prim +0015 (newtonInt0516, _t0535);
    int _t0536 = 2;
    bool _t0537 = prim >=007D (newtonInt0516, _t0536);
    if _t0537 {
      newtonInt0516 = 0;
      bool _t0538 = prim >=007D (cellInt0517, numCell051A);
      if _t0538 {
        Femdata: MeshPos _t0539 = extractFemItemN((mesh0510),InvalidBuild(MeshPos),);
        return _t0539;
      } else {
        int _t053A = 1;
        cellInt0517 = prim +0015 (cellInt0517, _t053A);
      }
    }
  }
  string _t053C = "Bad end 2";
  string _t053D = "\n";
  print (_t053C, _t053D);
  Femdata: MeshPos _t053E = extractFemItemN((mesh0510),InvalidBuild(MeshPos),);
  return _t053E;
}
function Femdata: RefCell#1 refcell053F (Femdata: Mesh arg00540)
{
  Femdata: RefCell _t0541 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg00540);
  return _t0541;
}
function Femdata: MeshCell[]#0 cells0542 (Femdata: Mesh arg00543)
{
  Femdata: MeshCell[] _t0544 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00543);
  return _t0544;
}
function Femdata: MeshCell[]#0 cells0545 (Femdata: Mesh arg00543)
{
  int _t0546 = 0;
  int _t0547 = extractFemItem(NumCell(Mesh), int, arg00543);
  int[] _t0548 = prim $range01C3 (_t0546, _t0547);
  Femdata: MeshCell[] accum054B = {};
  foreach i0549 in _t0548 {
    Femdata: MeshCell _t054A = loadFem(MeshCell, arg00543, i0549);
    accum054B = prim @0010<Femdata: MeshCell> (accum054B, _t054A);
  }
  return accum054B;
}
function int#0 numCell054C (Femdata: Mesh arg00540)
{
  int _t054D = extractFemItem(NumCell(Mesh), int, arg00540);
  return _t054D;
}
function tensor[3,3,3,3]#0 mesh_t_transform_3054E (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t0552 = femField(mesh0551,cell0550,field(3)[3],Transform,);
  field(3)[3,3] _t0553 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0552);
  field(3)[3,3,3] _t0554 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0553);
  field(3)[3,3,3,3] _t0555 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0554);
  tensor[3,3,3,3] _t0556 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0555, pos054F);
  return _t0556;
}
function tensor[3,3,3]#0 mesh_t_transform_20557 (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t0558 = femField(mesh0551,cell0550,field(3)[3],Transform,);
  field(3)[3,3] _t0559 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0558);
  field(3)[3,3,3] _t055A = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0559);
  tensor[3,3,3] _t055B = prim @00A5<#∞; %3; $[3,3,3]> (_t055A, pos054F);
  return _t055B;
}
function tensor[3,3]#0 mesh_t_transform_1055C (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t055D = femField(mesh0551,cell0550,field(3)[3],Transform,);
  field(3)[3,3] _t055E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t055D);
  tensor[3,3] _t055F = prim @00A5<#∞; %3; $[3,3]> (_t055E, pos054F);
  return _t055F;
}
function vec3#2 mesh_t_transform_00560 (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t0561 = femField(mesh0551,cell0550,field(3)[3],Transform,);
  vec3 _t0562 = prim @00A5<#∞; %3; $[3]> (_t0561, pos054F);
  return _t0562;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse0563 (vec3 pos0564, int cellInt0565, Femdata: Mesh mesh0566)
{
  real _t0567 = 0.e0;
  real _t0568 = 0.e0;
  real _t0569 = 0.e0;
  xn056A = [_t0567, _t0568, _t0569];
  field(3)[3] _t056B = femField(mesh0566,cellInt0565,field(3)[3],Transform,);
  field(3)[3,3] _t056C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t056B);
  field(3)[3,3] _t056D = prim inv015E<#∞; %3> (_t056C);
  real _t056E = 0.e0;
  real _t056F = 0.e0;
  real _t0570 = 0.e0;
  vec3 _t0571 = [_t056E, _t056F, _t0570];
  A0572 = prim @00A5<#∞; %3; $[3,3]> (_t056D, _t0571);
  int _t0573 = 0;
  int _t0574 = 2;
  int[] _t0575 = prim $range01C3 (_t0573, _t0574);
  foreach itter0583 in _t0575 {
    field(3)[3] _t0576 = femField(mesh0566,cellInt0565,field(3)[3],Transform,);
    field(3)[3] _t0577 = prim -002E<#∞; %3; $[3]> (_t0576, pos0564);
    field(3)[3] _t0578 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0572, _t0577);
    delta0579 = prim @00A5<#∞; %3; $[3]> (_t0578, xn056A);
    xn056A = prim -0026<$[3]> (xn056A, delta0579);
    real _t057A = 0.1e-7;
    real _t057B = 0.1e-7;
    real _t057C = prim *0034 (_t057A, _t057B);
    real _t057D = prim •00CE<$[3]; $[3]; $[]> (delta0579, delta0579);
    bool _t057E = prim >=007E (_t057C, _t057D);
    if _t057E {
      real _t057F = 0.1e-8;
      bool _t0580 = extractFemItemN((mesh0566, xn056A, _t057F),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0580 {
        Femdata: MeshPos _t0581 = extractFemItemN((mesh0566, cellInt0565, xn056A, pos0564),AllBuild(MeshPos),);
        return _t0581;
      } else {
        Femdata: MeshPos _t0582 = extractFemItemN((mesh0566),InvalidBuild(MeshPos),);
        return _t0582;
      }
    }
  }
  Femdata: MeshPos _t0584 = extractFemItemN((mesh0566),InvalidBuild(MeshPos),);
  return _t0584;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos0585 (Femdata: MeshPos pos0586)
{
  bool _t0587 = extractFemItem(WorldTest(MeshPos), bool, pos0586);
  if _t0587 {
    vec3 _t0588 = extractFemItem(RefPos(MeshPos), vec3, pos0586);
    int _t0589 = extractFemItem(CellIndex(MeshPos), int, pos0586);
    Femdata: Mesh _t058A = extractFem(pos0586, Mesh);
    vec3 _t058B = func mesh_t_transform_00560 (_t0588, _t0589, _t058A);
    Femdata: MeshPos _t058C = extractFemItemN((pos0586, _t058B),NewWorld(MeshPos),);
    return _t058C;
  } else {
    return pos0586;
  }
}
function vec3#0 worldPos058D (Femdata: MeshPos pos0586)
{
  vec3 _t058E = extractFemItem(RefPos(MeshPos), vec3, pos0586);
  int _t058F = extractFemItem(CellIndex(MeshPos), int, pos0586);
  Femdata: Mesh _t0590 = extractFem(pos0586, Mesh);
  vec3 _t0591 = func mesh_t_transform_00560 (_t058E, _t058F, _t0590);
  return _t0591;
}
function Femdata: MeshPos#0 $exitPos0592 (Femdata: Mesh mesh0593, int cellId0594, vec3 refPos0595, vec3 dPos0596, real[2] time0597)
{
  int _t0598 = -1;
  real _t0599 = time0597[1];
  int _t059A = prim $r2i01B7 (_t0599);
  int[2] _t059C = func nextCell4059B (_t059A, cellId0594, mesh0593);
  int _t059D = 0;
  int _t059E = prim $sub01C0<int; %2> (_t059C, _t059D);
  bool _t059F = prim !=0086 (_t0598, _t059E);
  if _t059F {
    string _t05A0 = "face ";
    real _t05A1 = time0597[1];
    int _t05A2 = prim $r2i01B7 (_t05A1);
    string _t05A3 = " to ";
    real _t05A4 = time0597[1];
    int _t05A5 = prim $r2i01B7 (_t05A4);
    int[2] _t05A6 = func nextCell4059B (_t05A5, cellId0594, mesh0593);
    int _t05A7 = 1;
    int _t05A8 = prim $sub01C0<int; %2> (_t05A6, _t05A7);
    string _t05A9 = "\n";
    string _t05AA = "got: ";
    real _t05AB = 0.1e1;
    real _t05AC = 0.e0;
    real _t05AD = 0.e0;
    real _t05AE = 0.e0;
    vec4 _t05AF = [_t05AB, _t05AC, _t05AD, _t05AE];
    real _t05B0 = 0.e0;
    real _t05B1 = 0.1e1;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    vec4 _t05B4 = [_t05B0, _t05B1, _t05B2, _t05B3];
    real _t05B5 = 0.e0;
    real _t05B6 = 0.e0;
    real _t05B7 = 0.1e1;
    real _t05B8 = 0.e0;
    vec4 _t05B9 = [_t05B5, _t05B6, _t05B7, _t05B8];
    real _t05BA = 0.e0;
    real _t05BB = 0.e0;
    real _t05BC = 0.e0;
    real _t05BD = 0.1e1;
    vec4 _t05BE = [_t05BA, _t05BB, _t05BC, _t05BD];
    tensor[4,4] _t05BF = [_t05AF, _t05B4, _t05B9, _t05BE];
    real _t05C0 = 0.1e1;
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.e0;
    vec4 _t05C4 = [_t05C0, _t05C1, _t05C2, _t05C3];
    real _t05C5 = 0.e0;
    real _t05C6 = 0.1e1;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    vec4 _t05C9 = [_t05C5, _t05C6, _t05C7, _t05C8];
    real _t05CA = 0.e0;
    real _t05CB = 0.e0;
    real _t05CC = 0.1e1;
    real _t05CD = 0.1e1;
    vec4 _t05CE = [_t05CA, _t05CB, _t05CC, _t05CD];
    real _t05CF = 0.e0;
    real _t05D0 = 0.e0;
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    vec4 _t05D3 = [_t05CF, _t05D0, _t05D1, _t05D2];
    tensor[4,4] _t05D4 = [_t05C4, _t05C9, _t05CE, _t05D3];
    real _t05D5 = 0.e0;
    real _t05D6 = 0.1e1;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.e0;
    vec4 _t05D9 = [_t05D5, _t05D6, _t05D7, _t05D8];
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    real _t05DC = 0.1e1;
    real _t05DD = 0.e0;
    vec4 _t05DE = [_t05DA, _t05DB, _t05DC, _t05DD];
    real _t05DF = 0.1e1;
    real _t05E0 = -0.1e1;
    real _t05E1 = 0.e0;
    real _t05E2 = -0.5e0;
    vec4 _t05E3 = [_t05DF, _t05E0, _t05E1, _t05E2];
    real _t05E4 = 0.e0;
    real _t05E5 = 0.e0;
    real _t05E6 = 0.e0;
    real _t05E7 = 0.1e1;
    vec4 _t05E8 = [_t05E4, _t05E5, _t05E6, _t05E7];
    tensor[4,4] _t05E9 = [_t05D9, _t05DE, _t05E3, _t05E8];
    real _t05EA = 0.e0;
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    vec4 _t05EE = [_t05EA, _t05EB, _t05EC, _t05ED];
    real _t05EF = 0.e0;
    real _t05F0 = 0.1e1;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    vec4 _t05F3 = [_t05EF, _t05F0, _t05F1, _t05F2];
    real _t05F4 = 0.1e1;
    real _t05F5 = -0.1e1;
    real _t05F6 = 0.e0;
    real _t05F7 = -0.5e0;
    vec4 _t05F8 = [_t05F4, _t05F5, _t05F6, _t05F7];
    real _t05F9 = 0.e0;
    real _t05FA = 0.e0;
    real _t05FB = 0.e0;
    real _t05FC = 0.1e1;
    vec4 _t05FD = [_t05F9, _t05FA, _t05FB, _t05FC];
    tensor[4,4] _t05FE = [_t05EE, _t05F3, _t05F8, _t05FD];
    real _t05FF = 0.e0;
    real _t0600 = -0.1e1;
    real _t0601 = 0.e0;
    real _t0602 = 0.e0;
    vec4 _t0603 = [_t05FF, _t0600, _t0601, _t0602];
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    real _t0606 = -0.1e1;
    real _t0607 = 0.e0;
    vec4 _t0608 = [_t0604, _t0605, _t0606, _t0607];
    real _t0609 = 0.1e1;
    real _t060A = -0.1e1;
    real _t060B = 0.e0;
    real _t060C = -0.5e0;
    vec4 _t060D = [_t0609, _t060A, _t060B, _t060C];
    real _t060E = 0.e0;
    real _t060F = 0.e0;
    real _t0610 = 0.e0;
    real _t0611 = 0.1e1;
    vec4 _t0612 = [_t060E, _t060F, _t0610, _t0611];
    tensor[4,4] _t0613 = [_t0603, _t0608, _t060D, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    real _t0616 = 0.1e1;
    real _t0617 = 0.e0;
    vec4 _t0618 = [_t0614, _t0615, _t0616, _t0617];
    real _t0619 = 0.e0;
    real _t061A = -0.1e1;
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    vec4 _t061D = [_t0619, _t061A, _t061B, _t061C];
    real _t061E = 0.1e1;
    real _t061F = -0.1e1;
    real _t0620 = 0.e0;
    real _t0621 = -0.5e0;
    vec4 _t0622 = [_t061E, _t061F, _t0620, _t0621];
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.1e1;
    vec4 _t0627 = [_t0623, _t0624, _t0625, _t0626];
    tensor[4,4] _t0628 = [_t0618, _t061D, _t0622, _t0627];
    tensor[4,4][6] _t0629 = {_t05BF, _t05D4, _t05E9, _t05FE, _t0613, _t0628};
    real _t062A = 0.1e1;
    real _t062B = 0.e0;
    real _t062C = 0.e0;
    real _t062D = 0.e0;
    vec4 _t062E = [_t062A, _t062B, _t062C, _t062D];
    real _t062F = 0.e0;
    real _t0630 = 0.1e1;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    vec4 _t0633 = [_t062F, _t0630, _t0631, _t0632];
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = 0.1e1;
    real _t0637 = -0.1e1;
    vec4 _t0638 = [_t0634, _t0635, _t0636, _t0637];
    real _t0639 = 0.e0;
    real _t063A = 0.e0;
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    vec4 _t063D = [_t0639, _t063A, _t063B, _t063C];
    tensor[4,4] _t063E = [_t062E, _t0633, _t0638, _t063D];
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    vec4 _t0643 = [_t063F, _t0640, _t0641, _t0642];
    real _t0644 = 0.e0;
    real _t0645 = 0.1e1;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    vec4 _t0648 = [_t0644, _t0645, _t0646, _t0647];
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.1e1;
    real _t064C = 0.e0;
    vec4 _t064D = [_t0649, _t064A, _t064B, _t064C];
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    real _t0650 = 0.e0;
    real _t0651 = 0.1e1;
    vec4 _t0652 = [_t064E, _t064F, _t0650, _t0651];
    tensor[4,4] _t0653 = [_t0643, _t0648, _t064D, _t0652];
    real _t0654 = 0.e0;
    real _t0655 = 0.1e1;
    real _t0656 = 0.e0;
    real _t0657 = 0.e0;
    vec4 _t0658 = [_t0654, _t0655, _t0656, _t0657];
    real _t0659 = 0.e0;
    real _t065A = 0.e0;
    real _t065B = 0.1e1;
    real _t065C = -0.1e1;
    vec4 _t065D = [_t0659, _t065A, _t065B, _t065C];
    real _t065E = 0.1e1;
    real _t065F = -0.1e1;
    real _t0660 = 0.e0;
    real _t0661 = -0.5e0;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    real _t0665 = 0.e0;
    real _t0666 = 0.1e1;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    tensor[4,4] _t0668 = [_t0658, _t065D, _t0662, _t0667];
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    real _t066B = -0.1e1;
    real _t066C = 0.1e1;
    vec4 _t066D = [_t0669, _t066A, _t066B, _t066C];
    real _t066E = 0.e0;
    real _t066F = 0.1e1;
    real _t0670 = 0.e0;
    real _t0671 = 0.e0;
    vec4 _t0672 = [_t066E, _t066F, _t0670, _t0671];
    real _t0673 = 0.1e1;
    real _t0674 = -0.1e1;
    real _t0675 = 0.e0;
    real _t0676 = -0.5e0;
    vec4 _t0677 = [_t0673, _t0674, _t0675, _t0676];
    real _t0678 = 0.e0;
    real _t0679 = 0.e0;
    real _t067A = 0.e0;
    real _t067B = 0.1e1;
    vec4 _t067C = [_t0678, _t0679, _t067A, _t067B];
    tensor[4,4] _t067D = [_t066D, _t0672, _t0677, _t067C];
    real _t067E = 0.e0;
    real _t067F = -0.1e1;
    real _t0680 = 0.e0;
    real _t0681 = 0.e0;
    vec4 _t0682 = [_t067E, _t067F, _t0680, _t0681];
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = -0.1e1;
    real _t0686 = 0.1e1;
    vec4 _t0687 = [_t0683, _t0684, _t0685, _t0686];
    real _t0688 = 0.1e1;
    real _t0689 = -0.1e1;
    real _t068A = 0.e0;
    real _t068B = -0.5e0;
    vec4 _t068C = [_t0688, _t0689, _t068A, _t068B];
    real _t068D = 0.e0;
    real _t068E = 0.e0;
    real _t068F = 0.e0;
    real _t0690 = 0.1e1;
    vec4 _t0691 = [_t068D, _t068E, _t068F, _t0690];
    tensor[4,4] _t0692 = [_t0682, _t0687, _t068C, _t0691];
    real _t0693 = 0.e0;
    real _t0694 = 0.e0;
    real _t0695 = 0.1e1;
    real _t0696 = -0.1e1;
    vec4 _t0697 = [_t0693, _t0694, _t0695, _t0696];
    real _t0698 = 0.e0;
    real _t0699 = -0.1e1;
    real _t069A = 0.e0;
    real _t069B = 0.e0;
    vec4 _t069C = [_t0698, _t0699, _t069A, _t069B];
    real _t069D = 0.1e1;
    real _t069E = -0.1e1;
    real _t069F = 0.e0;
    real _t06A0 = -0.5e0;
    vec4 _t06A1 = [_t069D, _t069E, _t069F, _t06A0];
    real _t06A2 = 0.e0;
    real _t06A3 = 0.e0;
    real _t06A4 = 0.e0;
    real _t06A5 = 0.1e1;
    vec4 _t06A6 = [_t06A2, _t06A3, _t06A4, _t06A5];
    tensor[4,4] _t06A7 = [_t0697, _t069C, _t06A1, _t06A6];
    tensor[4,4][6] _t06A8 = {_t063E, _t0653, _t0668, _t067D, _t0692, _t06A7};
    real _t06A9 = 0.1e1;
    real _t06AA = 0.e0;
    real _t06AB = 0.1e1;
    real _t06AC = 0.5e0;
    vec4 _t06AD = [_t06A9, _t06AA, _t06AB, _t06AC];
    real _t06AE = 0.1e1;
    real _t06AF = 0.e0;
    real _t06B0 = 0.e0;
    real _t06B1 = 0.e0;
    vec4 _t06B2 = [_t06AE, _t06AF, _t06B0, _t06B1];
    real _t06B3 = 0.e0;
    real _t06B4 = 0.1e1;
    real _t06B5 = 0.e0;
    real _t06B6 = 0.e0;
    vec4 _t06B7 = [_t06B3, _t06B4, _t06B5, _t06B6];
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    real _t06BA = 0.e0;
    real _t06BB = 0.1e1;
    vec4 _t06BC = [_t06B8, _t06B9, _t06BA, _t06BB];
    tensor[4,4] _t06BD = [_t06AD, _t06B2, _t06B7, _t06BC];
    real _t06BE = 0.1e1;
    real _t06BF = 0.e0;
    real _t06C0 = 0.1e1;
    real _t06C1 = 0.5e0;
    vec4 _t06C2 = [_t06BE, _t06BF, _t06C0, _t06C1];
    real _t06C3 = 0.1e1;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.e0;
    real _t06C6 = 0.e0;
    vec4 _t06C7 = [_t06C3, _t06C4, _t06C5, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = 0.1e1;
    real _t06CA = 0.e0;
    real _t06CB = 0.1e1;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = 0.e0;
    real _t06D0 = 0.1e1;
    vec4 _t06D1 = [_t06CD, _t06CE, _t06CF, _t06D0];
    tensor[4,4] _t06D2 = [_t06C2, _t06C7, _t06CC, _t06D1];
    real _t06D3 = 0.1e1;
    real _t06D4 = 0.e0;
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    vec4 _t06D7 = [_t06D3, _t06D4, _t06D5, _t06D6];
    real _t06D8 = 0.e0;
    real _t06D9 = 0.1e1;
    real _t06DA = 0.e0;
    real _t06DB = 0.e0;
    vec4 _t06DC = [_t06D8, _t06D9, _t06DA, _t06DB];
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    real _t06DF = 0.1e1;
    real _t06E0 = 0.e0;
    vec4 _t06E1 = [_t06DD, _t06DE, _t06DF, _t06E0];
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    real _t06E4 = 0.e0;
    real _t06E5 = 0.1e1;
    vec4 _t06E6 = [_t06E2, _t06E3, _t06E4, _t06E5];
    tensor[4,4] _t06E7 = [_t06D7, _t06DC, _t06E1, _t06E6];
    real _t06E8 = 0.e0;
    real _t06E9 = -0.1e1;
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    vec4 _t06EC = [_t06E8, _t06E9, _t06EA, _t06EB];
    real _t06ED = 0.1e1;
    real _t06EE = 0.e0;
    real _t06EF = 0.e0;
    real _t06F0 = 0.e0;
    vec4 _t06F1 = [_t06ED, _t06EE, _t06EF, _t06F0];
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    real _t06F4 = 0.1e1;
    real _t06F5 = 0.e0;
    vec4 _t06F6 = [_t06F2, _t06F3, _t06F4, _t06F5];
    real _t06F7 = 0.e0;
    real _t06F8 = 0.e0;
    real _t06F9 = 0.e0;
    real _t06FA = 0.1e1;
    vec4 _t06FB = [_t06F7, _t06F8, _t06F9, _t06FA];
    tensor[4,4] _t06FC = [_t06EC, _t06F1, _t06F6, _t06FB];
    real _t06FD = -0.1e1;
    real _t06FE = 0.e0;
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = 0.e0;
    real _t0703 = -0.1e1;
    real _t0704 = 0.e0;
    real _t0705 = 0.e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = 0.e0;
    real _t0708 = 0.e0;
    real _t0709 = 0.1e1;
    real _t070A = 0.e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    real _t070F = 0.1e1;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    tensor[4,4] _t0711 = [_t0701, _t0706, _t070B, _t0710];
    real _t0712 = 0.e0;
    real _t0713 = 0.1e1;
    real _t0714 = 0.e0;
    real _t0715 = 0.e0;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = -0.1e1;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    real _t071A = 0.e0;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    real _t071E = 0.1e1;
    real _t071F = 0.e0;
    vec4 _t0720 = [_t071C, _t071D, _t071E, _t071F];
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    vec4 _t0725 = [_t0721, _t0722, _t0723, _t0724];
    tensor[4,4] _t0726 = [_t0716, _t071B, _t0720, _t0725];
    tensor[4,4][6] _t0727 = {_t06BD, _t06D2, _t06E7, _t06FC, _t0711, _t0726};
    real _t0728 = 0.e0;
    real _t0729 = 0.1e1;
    real _t072A = 0.1e1;
    real _t072B = 0.5e0;
    vec4 _t072C = [_t0728, _t0729, _t072A, _t072B];
    real _t072D = 0.e0;
    real _t072E = 0.1e1;
    real _t072F = 0.e0;
    real _t0730 = 0.e0;
    vec4 _t0731 = [_t072D, _t072E, _t072F, _t0730];
    real _t0732 = -0.1e1;
    real _t0733 = 0.e0;
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.e0;
    real _t073A = 0.1e1;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    tensor[4,4] _t073C = [_t072C, _t0731, _t0736, _t073B];
    real _t073D = 0.e0;
    real _t073E = 0.1e1;
    real _t073F = 0.1e1;
    real _t0740 = 0.5e0;
    vec4 _t0741 = [_t073D, _t073E, _t073F, _t0740];
    real _t0742 = 0.e0;
    real _t0743 = 0.1e1;
    real _t0744 = 0.e0;
    real _t0745 = 0.e0;
    vec4 _t0746 = [_t0742, _t0743, _t0744, _t0745];
    real _t0747 = -0.1e1;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    real _t074A = 0.1e1;
    vec4 _t074B = [_t0747, _t0748, _t0749, _t074A];
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.e0;
    real _t074F = 0.1e1;
    vec4 _t0750 = [_t074C, _t074D, _t074E, _t074F];
    tensor[4,4] _t0751 = [_t0741, _t0746, _t074B, _t0750];
    real _t0752 = 0.e0;
    real _t0753 = 0.1e1;
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    vec4 _t0756 = [_t0752, _t0753, _t0754, _t0755];
    real _t0757 = -0.1e1;
    real _t0758 = 0.e0;
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    vec4 _t075B = [_t0757, _t0758, _t0759, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    real _t075E = 0.1e1;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = 0.e0;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.1e1;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    tensor[4,4] _t0766 = [_t0756, _t075B, _t0760, _t0765];
    real _t0767 = 0.1e1;
    real _t0768 = 0.e0;
    real _t0769 = 0.e0;
    real _t076A = 0.e0;
    vec4 _t076B = [_t0767, _t0768, _t0769, _t076A];
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    vec4 _t0770 = [_t076C, _t076D, _t076E, _t076F];
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    real _t0773 = 0.1e1;
    real _t0774 = 0.e0;
    vec4 _t0775 = [_t0771, _t0772, _t0773, _t0774];
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    real _t0779 = 0.1e1;
    vec4 _t077A = [_t0776, _t0777, _t0778, _t0779];
    tensor[4,4] _t077B = [_t076B, _t0770, _t0775, _t077A];
    real _t077C = 0.e0;
    real _t077D = -0.1e1;
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    real _t0781 = 0.1e1;
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    real _t0784 = 0.e0;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.1e1;
    real _t0789 = 0.e0;
    vec4 _t078A = [_t0786, _t0787, _t0788, _t0789];
    real _t078B = 0.e0;
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.1e1;
    vec4 _t078F = [_t078B, _t078C, _t078D, _t078E];
    tensor[4,4] _t0790 = [_t0780, _t0785, _t078A, _t078F];
    real _t0791 = -0.1e1;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.e0;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    real _t0796 = 0.e0;
    real _t0797 = -0.1e1;
    real _t0798 = 0.e0;
    real _t0799 = 0.e0;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.1e1;
    real _t079E = 0.e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = 0.e0;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.1e1;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    tensor[4,4] _t07A5 = [_t0795, _t079A, _t079F, _t07A4];
    tensor[4,4][6] _t07A6 = {_t073C, _t0751, _t0766, _t077B, _t0790, _t07A5};
    real _t07A7 = -0.1e1;
    real _t07A8 = 0.e0;
    real _t07A9 = 0.1e1;
    real _t07AA = 0.5e0;
    vec4 _t07AB = [_t07A7, _t07A8, _t07A9, _t07AA];
    real _t07AC = -0.1e1;
    real _t07AD = 0.e0;
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    vec4 _t07B0 = [_t07AC, _t07AD, _t07AE, _t07AF];
    real _t07B1 = 0.e0;
    real _t07B2 = -0.1e1;
    real _t07B3 = 0.e0;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.1e1;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    tensor[4,4] _t07BB = [_t07AB, _t07B0, _t07B5, _t07BA];
    real _t07BC = -0.1e1;
    real _t07BD = 0.e0;
    real _t07BE = 0.1e1;
    real _t07BF = 0.5e0;
    vec4 _t07C0 = [_t07BC, _t07BD, _t07BE, _t07BF];
    real _t07C1 = -0.1e1;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.e0;
    real _t07C4 = 0.e0;
    vec4 _t07C5 = [_t07C1, _t07C2, _t07C3, _t07C4];
    real _t07C6 = 0.e0;
    real _t07C7 = -0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.1e1;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.1e1;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    tensor[4,4] _t07D0 = [_t07C0, _t07C5, _t07CA, _t07CF];
    real _t07D1 = -0.1e1;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    vec4 _t07D5 = [_t07D1, _t07D2, _t07D3, _t07D4];
    real _t07D6 = 0.e0;
    real _t07D7 = -0.1e1;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.e0;
    vec4 _t07DA = [_t07D6, _t07D7, _t07D8, _t07D9];
    real _t07DB = 0.e0;
    real _t07DC = 0.e0;
    real _t07DD = 0.1e1;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.1e1;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    tensor[4,4] _t07E5 = [_t07D5, _t07DA, _t07DF, _t07E4];
    real _t07E6 = 0.e0;
    real _t07E7 = 0.1e1;
    real _t07E8 = 0.e0;
    real _t07E9 = 0.e0;
    vec4 _t07EA = [_t07E6, _t07E7, _t07E8, _t07E9];
    real _t07EB = -0.1e1;
    real _t07EC = 0.e0;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    vec4 _t07EF = [_t07EB, _t07EC, _t07ED, _t07EE];
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    real _t07F2 = 0.1e1;
    real _t07F3 = 0.e0;
    vec4 _t07F4 = [_t07F0, _t07F1, _t07F2, _t07F3];
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    real _t07F7 = 0.e0;
    real _t07F8 = 0.1e1;
    vec4 _t07F9 = [_t07F5, _t07F6, _t07F7, _t07F8];
    tensor[4,4] _t07FA = [_t07EA, _t07EF, _t07F4, _t07F9];
    real _t07FB = 0.1e1;
    real _t07FC = 0.e0;
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    vec4 _t07FF = [_t07FB, _t07FC, _t07FD, _t07FE];
    real _t0800 = 0.e0;
    real _t0801 = 0.1e1;
    real _t0802 = 0.e0;
    real _t0803 = 0.e0;
    vec4 _t0804 = [_t0800, _t0801, _t0802, _t0803];
    real _t0805 = 0.e0;
    real _t0806 = 0.e0;
    real _t0807 = 0.1e1;
    real _t0808 = 0.e0;
    vec4 _t0809 = [_t0805, _t0806, _t0807, _t0808];
    real _t080A = 0.e0;
    real _t080B = 0.e0;
    real _t080C = 0.e0;
    real _t080D = 0.1e1;
    vec4 _t080E = [_t080A, _t080B, _t080C, _t080D];
    tensor[4,4] _t080F = [_t07FF, _t0804, _t0809, _t080E];
    real _t0810 = 0.e0;
    real _t0811 = -0.1e1;
    real _t0812 = 0.e0;
    real _t0813 = 0.e0;
    vec4 _t0814 = [_t0810, _t0811, _t0812, _t0813];
    real _t0815 = 0.1e1;
    real _t0816 = 0.e0;
    real _t0817 = 0.e0;
    real _t0818 = 0.e0;
    vec4 _t0819 = [_t0815, _t0816, _t0817, _t0818];
    real _t081A = 0.e0;
    real _t081B = 0.e0;
    real _t081C = 0.1e1;
    real _t081D = 0.e0;
    vec4 _t081E = [_t081A, _t081B, _t081C, _t081D];
    real _t081F = 0.e0;
    real _t0820 = 0.e0;
    real _t0821 = 0.e0;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    tensor[4,4] _t0824 = [_t0814, _t0819, _t081E, _t0823];
    tensor[4,4][6] _t0825 = {_t07BB, _t07D0, _t07E5, _t07FA, _t080F, _t0824};
    real _t0826 = 0.e0;
    real _t0827 = -0.1e1;
    real _t0828 = 0.1e1;
    real _t0829 = 0.5e0;
    vec4 _t082A = [_t0826, _t0827, _t0828, _t0829];
    real _t082B = 0.e0;
    real _t082C = -0.1e1;
    real _t082D = 0.e0;
    real _t082E = 0.e0;
    vec4 _t082F = [_t082B, _t082C, _t082D, _t082E];
    real _t0830 = 0.1e1;
    real _t0831 = 0.e0;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    real _t0838 = 0.1e1;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    tensor[4,4] _t083A = [_t082A, _t082F, _t0834, _t0839];
    real _t083B = 0.e0;
    real _t083C = -0.1e1;
    real _t083D = 0.1e1;
    real _t083E = 0.5e0;
    vec4 _t083F = [_t083B, _t083C, _t083D, _t083E];
    real _t0840 = 0.e0;
    real _t0841 = -0.1e1;
    real _t0842 = 0.e0;
    real _t0843 = 0.e0;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    real _t0845 = 0.1e1;
    real _t0846 = 0.e0;
    real _t0847 = 0.e0;
    real _t0848 = 0.1e1;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = 0.e0;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    real _t084D = 0.1e1;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    tensor[4,4] _t084F = [_t083F, _t0844, _t0849, _t084E];
    real _t0850 = 0.e0;
    real _t0851 = -0.1e1;
    real _t0852 = 0.e0;
    real _t0853 = 0.e0;
    vec4 _t0854 = [_t0850, _t0851, _t0852, _t0853];
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    real _t0857 = 0.e0;
    real _t0858 = 0.e0;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    real _t085A = 0.e0;
    real _t085B = 0.e0;
    real _t085C = 0.1e1;
    real _t085D = 0.e0;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.e0;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    real _t0862 = 0.1e1;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    tensor[4,4] _t0864 = [_t0854, _t0859, _t085E, _t0863];
    real _t0865 = -0.1e1;
    real _t0866 = 0.e0;
    real _t0867 = 0.e0;
    real _t0868 = 0.e0;
    vec4 _t0869 = [_t0865, _t0866, _t0867, _t0868];
    real _t086A = 0.e0;
    real _t086B = -0.1e1;
    real _t086C = 0.e0;
    real _t086D = 0.e0;
    vec4 _t086E = [_t086A, _t086B, _t086C, _t086D];
    real _t086F = 0.e0;
    real _t0870 = 0.e0;
    real _t0871 = 0.1e1;
    real _t0872 = 0.e0;
    vec4 _t0873 = [_t086F, _t0870, _t0871, _t0872];
    real _t0874 = 0.e0;
    real _t0875 = 0.e0;
    real _t0876 = 0.e0;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    tensor[4,4] _t0879 = [_t0869, _t086E, _t0873, _t0878];
    real _t087A = 0.e0;
    real _t087B = 0.1e1;
    real _t087C = 0.e0;
    real _t087D = 0.e0;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    real _t087F = -0.1e1;
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.e0;
    vec4 _t0883 = [_t087F, _t0880, _t0881, _t0882];
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    real _t0887 = 0.e0;
    vec4 _t0888 = [_t0884, _t0885, _t0886, _t0887];
    real _t0889 = 0.e0;
    real _t088A = 0.e0;
    real _t088B = 0.e0;
    real _t088C = 0.1e1;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    tensor[4,4] _t088E = [_t087E, _t0883, _t0888, _t088D];
    real _t088F = 0.1e1;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.e0;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    real _t0897 = 0.e0;
    vec4 _t0898 = [_t0894, _t0895, _t0896, _t0897];
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    real _t089C = 0.e0;
    vec4 _t089D = [_t0899, _t089A, _t089B, _t089C];
    real _t089E = 0.e0;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.1e1;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    tensor[4,4] _t08A3 = [_t0893, _t0898, _t089D, _t08A2];
    tensor[4,4][6] _t08A4 = {_t083A, _t084F, _t0864, _t0879, _t088E, _t08A3};
    tensor[4,4][6][6] _t08A5 = {_t0629, _t06A8, _t0727, _t07A6, _t0825, _t08A4};
    real _t08A6 = time0597[1];
    int _t08A7 = prim $r2i01B7 (_t08A6);
    tensor[4,4][6] _t08A8 = prim $sub01C0<tensor[4,4][6]; %6> (_t08A5, _t08A7);
    real _t08A9 = time0597[1];
    int _t08AA = prim $r2i01B7 (_t08A9);
    int[2] _t08AB = func nextCell4059B (_t08AA, cellId0594, mesh0593);
    int _t08AC = 1;
    int _t08AD = prim $sub01C0<int; %2> (_t08AB, _t08AC);
    tensor[4,4] _t08AE = prim $sub01C0<tensor[4,4]; %6> (_t08A8, _t08AD);
    string _t08AF = "\n";
    print (_t05A0, _t05A2, _t05A3, _t05A8, _t05A9, _t05AA, _t08AE, _t08AF);
    real _t08B0 = time0597[1];
    int _t08B1 = prim $r2i01B7 (_t08B0);
    int[2] _t08B2 = func nextCell4059B (_t08B1, cellId0594, mesh0593);
    int _t08B3 = 0;
    int _t08B4 = prim $sub01C0<int; %2> (_t08B2, _t08B3);
    real _t08B5 = 0.1e1;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    real _t08B8 = 0.e0;
    vec4 _t08B9 = [_t08B5, _t08B6, _t08B7, _t08B8];
    real _t08BA = 0.e0;
    real _t08BB = 0.1e1;
    real _t08BC = 0.e0;
    real _t08BD = 0.e0;
    vec4 _t08BE = [_t08BA, _t08BB, _t08BC, _t08BD];
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.1e1;
    real _t08C2 = 0.e0;
    vec4 _t08C3 = [_t08BF, _t08C0, _t08C1, _t08C2];
    real _t08C4 = 0.e0;
    real _t08C5 = 0.e0;
    real _t08C6 = 0.e0;
    real _t08C7 = 0.1e1;
    vec4 _t08C8 = [_t08C4, _t08C5, _t08C6, _t08C7];
    tensor[4,4] _t08C9 = [_t08B9, _t08BE, _t08C3, _t08C8];
    real _t08CA = 0.1e1;
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    real _t08CD = 0.e0;
    vec4 _t08CE = [_t08CA, _t08CB, _t08CC, _t08CD];
    real _t08CF = 0.e0;
    real _t08D0 = 0.1e1;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.e0;
    vec4 _t08D3 = [_t08CF, _t08D0, _t08D1, _t08D2];
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    real _t08D7 = 0.1e1;
    vec4 _t08D8 = [_t08D4, _t08D5, _t08D6, _t08D7];
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.e0;
    real _t08DC = 0.1e1;
    vec4 _t08DD = [_t08D9, _t08DA, _t08DB, _t08DC];
    tensor[4,4] _t08DE = [_t08CE, _t08D3, _t08D8, _t08DD];
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    real _t08E2 = 0.e0;
    vec4 _t08E3 = [_t08DF, _t08E0, _t08E1, _t08E2];
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.1e1;
    real _t08E7 = 0.e0;
    vec4 _t08E8 = [_t08E4, _t08E5, _t08E6, _t08E7];
    real _t08E9 = 0.1e1;
    real _t08EA = -0.1e1;
    real _t08EB = 0.e0;
    real _t08EC = -0.5e0;
    vec4 _t08ED = [_t08E9, _t08EA, _t08EB, _t08EC];
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.e0;
    real _t08F1 = 0.1e1;
    vec4 _t08F2 = [_t08EE, _t08EF, _t08F0, _t08F1];
    tensor[4,4] _t08F3 = [_t08E3, _t08E8, _t08ED, _t08F2];
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = -0.1e1;
    real _t08F7 = 0.e0;
    vec4 _t08F8 = [_t08F4, _t08F5, _t08F6, _t08F7];
    real _t08F9 = 0.e0;
    real _t08FA = 0.1e1;
    real _t08FB = 0.e0;
    real _t08FC = 0.e0;
    vec4 _t08FD = [_t08F9, _t08FA, _t08FB, _t08FC];
    real _t08FE = 0.1e1;
    real _t08FF = -0.1e1;
    real _t0900 = 0.e0;
    real _t0901 = -0.5e0;
    vec4 _t0902 = [_t08FE, _t08FF, _t0900, _t0901];
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.e0;
    real _t0906 = 0.1e1;
    vec4 _t0907 = [_t0903, _t0904, _t0905, _t0906];
    tensor[4,4] _t0908 = [_t08F8, _t08FD, _t0902, _t0907];
    real _t0909 = 0.e0;
    real _t090A = -0.1e1;
    real _t090B = 0.e0;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    real _t0910 = -0.1e1;
    real _t0911 = 0.e0;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    real _t0913 = 0.1e1;
    real _t0914 = -0.1e1;
    real _t0915 = 0.e0;
    real _t0916 = -0.5e0;
    vec4 _t0917 = [_t0913, _t0914, _t0915, _t0916];
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.e0;
    real _t091B = 0.1e1;
    vec4 _t091C = [_t0918, _t0919, _t091A, _t091B];
    tensor[4,4] _t091D = [_t090D, _t0912, _t0917, _t091C];
    real _t091E = 0.e0;
    real _t091F = 0.e0;
    real _t0920 = 0.1e1;
    real _t0921 = 0.e0;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.e0;
    real _t0924 = -0.1e1;
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    real _t0928 = 0.1e1;
    real _t0929 = -0.1e1;
    real _t092A = 0.e0;
    real _t092B = -0.5e0;
    vec4 _t092C = [_t0928, _t0929, _t092A, _t092B];
    real _t092D = 0.e0;
    real _t092E = 0.e0;
    real _t092F = 0.e0;
    real _t0930 = 0.1e1;
    vec4 _t0931 = [_t092D, _t092E, _t092F, _t0930];
    tensor[4,4] _t0932 = [_t0922, _t0927, _t092C, _t0931];
    tensor[4,4][6] _t0933 = {_t08C9, _t08DE, _t08F3, _t0908, _t091D, _t0932};
    real _t0934 = 0.1e1;
    real _t0935 = 0.e0;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    vec4 _t0938 = [_t0934, _t0935, _t0936, _t0937];
    real _t0939 = 0.e0;
    real _t093A = 0.1e1;
    real _t093B = 0.e0;
    real _t093C = 0.e0;
    vec4 _t093D = [_t0939, _t093A, _t093B, _t093C];
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = 0.1e1;
    real _t0941 = -0.1e1;
    vec4 _t0942 = [_t093E, _t093F, _t0940, _t0941];
    real _t0943 = 0.e0;
    real _t0944 = 0.e0;
    real _t0945 = 0.e0;
    real _t0946 = 0.1e1;
    vec4 _t0947 = [_t0943, _t0944, _t0945, _t0946];
    tensor[4,4] _t0948 = [_t0938, _t093D, _t0942, _t0947];
    real _t0949 = 0.1e1;
    real _t094A = 0.e0;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    vec4 _t094D = [_t0949, _t094A, _t094B, _t094C];
    real _t094E = 0.e0;
    real _t094F = 0.1e1;
    real _t0950 = 0.e0;
    real _t0951 = 0.e0;
    vec4 _t0952 = [_t094E, _t094F, _t0950, _t0951];
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    real _t0955 = 0.1e1;
    real _t0956 = 0.e0;
    vec4 _t0957 = [_t0953, _t0954, _t0955, _t0956];
    real _t0958 = 0.e0;
    real _t0959 = 0.e0;
    real _t095A = 0.e0;
    real _t095B = 0.1e1;
    vec4 _t095C = [_t0958, _t0959, _t095A, _t095B];
    tensor[4,4] _t095D = [_t094D, _t0952, _t0957, _t095C];
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    real _t0960 = 0.e0;
    real _t0961 = 0.e0;
    vec4 _t0962 = [_t095E, _t095F, _t0960, _t0961];
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    real _t0966 = -0.1e1;
    vec4 _t0967 = [_t0963, _t0964, _t0965, _t0966];
    real _t0968 = 0.1e1;
    real _t0969 = -0.1e1;
    real _t096A = 0.e0;
    real _t096B = -0.5e0;
    vec4 _t096C = [_t0968, _t0969, _t096A, _t096B];
    real _t096D = 0.e0;
    real _t096E = 0.e0;
    real _t096F = 0.e0;
    real _t0970 = 0.1e1;
    vec4 _t0971 = [_t096D, _t096E, _t096F, _t0970];
    tensor[4,4] _t0972 = [_t0962, _t0967, _t096C, _t0971];
    real _t0973 = 0.e0;
    real _t0974 = 0.e0;
    real _t0975 = -0.1e1;
    real _t0976 = 0.1e1;
    vec4 _t0977 = [_t0973, _t0974, _t0975, _t0976];
    real _t0978 = 0.e0;
    real _t0979 = 0.1e1;
    real _t097A = 0.e0;
    real _t097B = 0.e0;
    vec4 _t097C = [_t0978, _t0979, _t097A, _t097B];
    real _t097D = 0.1e1;
    real _t097E = -0.1e1;
    real _t097F = 0.e0;
    real _t0980 = -0.5e0;
    vec4 _t0981 = [_t097D, _t097E, _t097F, _t0980];
    real _t0982 = 0.e0;
    real _t0983 = 0.e0;
    real _t0984 = 0.e0;
    real _t0985 = 0.1e1;
    vec4 _t0986 = [_t0982, _t0983, _t0984, _t0985];
    tensor[4,4] _t0987 = [_t0977, _t097C, _t0981, _t0986];
    real _t0988 = 0.e0;
    real _t0989 = -0.1e1;
    real _t098A = 0.e0;
    real _t098B = 0.e0;
    vec4 _t098C = [_t0988, _t0989, _t098A, _t098B];
    real _t098D = 0.e0;
    real _t098E = 0.e0;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.1e1;
    real _t0993 = -0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = -0.5e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.e0;
    real _t099A = 0.1e1;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    tensor[4,4] _t099C = [_t098C, _t0991, _t0996, _t099B];
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    real _t09A0 = -0.1e1;
    vec4 _t09A1 = [_t099D, _t099E, _t099F, _t09A0];
    real _t09A2 = 0.e0;
    real _t09A3 = -0.1e1;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.1e1;
    real _t09A8 = -0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = -0.5e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.e0;
    real _t09AF = 0.1e1;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    tensor[4,4] _t09B1 = [_t09A1, _t09A6, _t09AB, _t09B0];
    tensor[4,4][6] _t09B2 = {_t0948, _t095D, _t0972, _t0987, _t099C, _t09B1};
    real _t09B3 = 0.1e1;
    real _t09B4 = 0.e0;
    real _t09B5 = 0.1e1;
    real _t09B6 = 0.5e0;
    vec4 _t09B7 = [_t09B3, _t09B4, _t09B5, _t09B6];
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    real _t09BB = 0.e0;
    vec4 _t09BC = [_t09B8, _t09B9, _t09BA, _t09BB];
    real _t09BD = 0.e0;
    real _t09BE = 0.1e1;
    real _t09BF = 0.e0;
    real _t09C0 = 0.e0;
    vec4 _t09C1 = [_t09BD, _t09BE, _t09BF, _t09C0];
    real _t09C2 = 0.e0;
    real _t09C3 = 0.e0;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.1e1;
    vec4 _t09C6 = [_t09C2, _t09C3, _t09C4, _t09C5];
    tensor[4,4] _t09C7 = [_t09B7, _t09BC, _t09C1, _t09C6];
    real _t09C8 = 0.1e1;
    real _t09C9 = 0.e0;
    real _t09CA = 0.1e1;
    real _t09CB = 0.5e0;
    vec4 _t09CC = [_t09C8, _t09C9, _t09CA, _t09CB];
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    real _t09D0 = 0.e0;
    vec4 _t09D1 = [_t09CD, _t09CE, _t09CF, _t09D0];
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    real _t09D5 = 0.1e1;
    vec4 _t09D6 = [_t09D2, _t09D3, _t09D4, _t09D5];
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    real _t09DA = 0.1e1;
    vec4 _t09DB = [_t09D7, _t09D8, _t09D9, _t09DA];
    tensor[4,4] _t09DC = [_t09CC, _t09D1, _t09D6, _t09DB];
    real _t09DD = 0.1e1;
    real _t09DE = 0.e0;
    real _t09DF = 0.e0;
    real _t09E0 = 0.e0;
    vec4 _t09E1 = [_t09DD, _t09DE, _t09DF, _t09E0];
    real _t09E2 = 0.e0;
    real _t09E3 = 0.1e1;
    real _t09E4 = 0.e0;
    real _t09E5 = 0.e0;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.e0;
    real _t09E8 = 0.e0;
    real _t09E9 = 0.1e1;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = 0.e0;
    real _t09EE = 0.e0;
    real _t09EF = 0.1e1;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    tensor[4,4] _t09F1 = [_t09E1, _t09E6, _t09EB, _t09F0];
    real _t09F2 = 0.e0;
    real _t09F3 = -0.1e1;
    real _t09F4 = 0.e0;
    real _t09F5 = 0.e0;
    vec4 _t09F6 = [_t09F2, _t09F3, _t09F4, _t09F5];
    real _t09F7 = 0.1e1;
    real _t09F8 = 0.e0;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.e0;
    real _t09FD = 0.e0;
    real _t09FE = 0.1e1;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.e0;
    real _t0A04 = 0.1e1;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    tensor[4,4] _t0A06 = [_t09F6, _t09FB, _t0A00, _t0A05];
    real _t0A07 = -0.1e1;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.e0;
    real _t0A0A = 0.e0;
    vec4 _t0A0B = [_t0A07, _t0A08, _t0A09, _t0A0A];
    real _t0A0C = 0.e0;
    real _t0A0D = -0.1e1;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.e0;
    real _t0A13 = 0.1e1;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.e0;
    real _t0A19 = 0.1e1;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    tensor[4,4] _t0A1B = [_t0A0B, _t0A10, _t0A15, _t0A1A];
    real _t0A1C = 0.e0;
    real _t0A1D = 0.1e1;
    real _t0A1E = 0.e0;
    real _t0A1F = 0.e0;
    vec4 _t0A20 = [_t0A1C, _t0A1D, _t0A1E, _t0A1F];
    real _t0A21 = -0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = 0.e0;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.1e1;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    tensor[4,4] _t0A30 = [_t0A20, _t0A25, _t0A2A, _t0A2F];
    tensor[4,4][6] _t0A31 = {_t09C7, _t09DC, _t09F1, _t0A06, _t0A1B, _t0A30};
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    real _t0A34 = 0.1e1;
    real _t0A35 = 0.5e0;
    vec4 _t0A36 = [_t0A32, _t0A33, _t0A34, _t0A35];
    real _t0A37 = 0.e0;
    real _t0A38 = 0.1e1;
    real _t0A39 = 0.e0;
    real _t0A3A = 0.e0;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = -0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.e0;
    real _t0A43 = 0.e0;
    real _t0A44 = 0.1e1;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    tensor[4,4] _t0A46 = [_t0A36, _t0A3B, _t0A40, _t0A45];
    real _t0A47 = 0.e0;
    real _t0A48 = 0.1e1;
    real _t0A49 = 0.1e1;
    real _t0A4A = 0.5e0;
    vec4 _t0A4B = [_t0A47, _t0A48, _t0A49, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.1e1;
    real _t0A4E = 0.e0;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = -0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.1e1;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.e0;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.1e1;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    tensor[4,4] _t0A5B = [_t0A4B, _t0A50, _t0A55, _t0A5A];
    real _t0A5C = 0.e0;
    real _t0A5D = 0.1e1;
    real _t0A5E = 0.e0;
    real _t0A5F = 0.e0;
    vec4 _t0A60 = [_t0A5C, _t0A5D, _t0A5E, _t0A5F];
    real _t0A61 = -0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = 0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.e0;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.1e1;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    tensor[4,4] _t0A70 = [_t0A60, _t0A65, _t0A6A, _t0A6F];
    real _t0A71 = 0.1e1;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.e0;
    real _t0A74 = 0.e0;
    vec4 _t0A75 = [_t0A71, _t0A72, _t0A73, _t0A74];
    real _t0A76 = 0.e0;
    real _t0A77 = 0.1e1;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.e0;
    real _t0A7D = 0.1e1;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.e0;
    real _t0A83 = 0.1e1;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    tensor[4,4] _t0A85 = [_t0A75, _t0A7A, _t0A7F, _t0A84];
    real _t0A86 = 0.e0;
    real _t0A87 = -0.1e1;
    real _t0A88 = 0.e0;
    real _t0A89 = 0.e0;
    vec4 _t0A8A = [_t0A86, _t0A87, _t0A88, _t0A89];
    real _t0A8B = 0.1e1;
    real _t0A8C = 0.e0;
    real _t0A8D = 0.e0;
    real _t0A8E = 0.e0;
    vec4 _t0A8F = [_t0A8B, _t0A8C, _t0A8D, _t0A8E];
    real _t0A90 = 0.e0;
    real _t0A91 = 0.e0;
    real _t0A92 = 0.1e1;
    real _t0A93 = 0.e0;
    vec4 _t0A94 = [_t0A90, _t0A91, _t0A92, _t0A93];
    real _t0A95 = 0.e0;
    real _t0A96 = 0.e0;
    real _t0A97 = 0.e0;
    real _t0A98 = 0.1e1;
    vec4 _t0A99 = [_t0A95, _t0A96, _t0A97, _t0A98];
    tensor[4,4] _t0A9A = [_t0A8A, _t0A8F, _t0A94, _t0A99];
    real _t0A9B = -0.1e1;
    real _t0A9C = 0.e0;
    real _t0A9D = 0.e0;
    real _t0A9E = 0.e0;
    vec4 _t0A9F = [_t0A9B, _t0A9C, _t0A9D, _t0A9E];
    real _t0AA0 = 0.e0;
    real _t0AA1 = -0.1e1;
    real _t0AA2 = 0.e0;
    real _t0AA3 = 0.e0;
    vec4 _t0AA4 = [_t0AA0, _t0AA1, _t0AA2, _t0AA3];
    real _t0AA5 = 0.e0;
    real _t0AA6 = 0.e0;
    real _t0AA7 = 0.1e1;
    real _t0AA8 = 0.e0;
    vec4 _t0AA9 = [_t0AA5, _t0AA6, _t0AA7, _t0AA8];
    real _t0AAA = 0.e0;
    real _t0AAB = 0.e0;
    real _t0AAC = 0.e0;
    real _t0AAD = 0.1e1;
    vec4 _t0AAE = [_t0AAA, _t0AAB, _t0AAC, _t0AAD];
    tensor[4,4] _t0AAF = [_t0A9F, _t0AA4, _t0AA9, _t0AAE];
    tensor[4,4][6] _t0AB0 = {_t0A46, _t0A5B, _t0A70, _t0A85, _t0A9A, _t0AAF};
    real _t0AB1 = -0.1e1;
    real _t0AB2 = 0.e0;
    real _t0AB3 = 0.1e1;
    real _t0AB4 = 0.5e0;
    vec4 _t0AB5 = [_t0AB1, _t0AB2, _t0AB3, _t0AB4];
    real _t0AB6 = -0.1e1;
    real _t0AB7 = 0.e0;
    real _t0AB8 = 0.e0;
    real _t0AB9 = 0.e0;
    vec4 _t0ABA = [_t0AB6, _t0AB7, _t0AB8, _t0AB9];
    real _t0ABB = 0.e0;
    real _t0ABC = -0.1e1;
    real _t0ABD = 0.e0;
    real _t0ABE = 0.e0;
    vec4 _t0ABF = [_t0ABB, _t0ABC, _t0ABD, _t0ABE];
    real _t0AC0 = 0.e0;
    real _t0AC1 = 0.e0;
    real _t0AC2 = 0.e0;
    real _t0AC3 = 0.1e1;
    vec4 _t0AC4 = [_t0AC0, _t0AC1, _t0AC2, _t0AC3];
    tensor[4,4] _t0AC5 = [_t0AB5, _t0ABA, _t0ABF, _t0AC4];
    real _t0AC6 = -0.1e1;
    real _t0AC7 = 0.e0;
    real _t0AC8 = 0.1e1;
    real _t0AC9 = 0.5e0;
    vec4 _t0ACA = [_t0AC6, _t0AC7, _t0AC8, _t0AC9];
    real _t0ACB = -0.1e1;
    real _t0ACC = 0.e0;
    real _t0ACD = 0.e0;
    real _t0ACE = 0.e0;
    vec4 _t0ACF = [_t0ACB, _t0ACC, _t0ACD, _t0ACE];
    real _t0AD0 = 0.e0;
    real _t0AD1 = -0.1e1;
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.1e1;
    vec4 _t0AD4 = [_t0AD0, _t0AD1, _t0AD2, _t0AD3];
    real _t0AD5 = 0.e0;
    real _t0AD6 = 0.e0;
    real _t0AD7 = 0.e0;
    real _t0AD8 = 0.1e1;
    vec4 _t0AD9 = [_t0AD5, _t0AD6, _t0AD7, _t0AD8];
    tensor[4,4] _t0ADA = [_t0ACA, _t0ACF, _t0AD4, _t0AD9];
    real _t0ADB = -0.1e1;
    real _t0ADC = 0.e0;
    real _t0ADD = 0.e0;
    real _t0ADE = 0.e0;
    vec4 _t0ADF = [_t0ADB, _t0ADC, _t0ADD, _t0ADE];
    real _t0AE0 = 0.e0;
    real _t0AE1 = -0.1e1;
    real _t0AE2 = 0.e0;
    real _t0AE3 = 0.e0;
    vec4 _t0AE4 = [_t0AE0, _t0AE1, _t0AE2, _t0AE3];
    real _t0AE5 = 0.e0;
    real _t0AE6 = 0.e0;
    real _t0AE7 = 0.1e1;
    real _t0AE8 = 0.e0;
    vec4 _t0AE9 = [_t0AE5, _t0AE6, _t0AE7, _t0AE8];
    real _t0AEA = 0.e0;
    real _t0AEB = 0.e0;
    real _t0AEC = 0.e0;
    real _t0AED = 0.1e1;
    vec4 _t0AEE = [_t0AEA, _t0AEB, _t0AEC, _t0AED];
    tensor[4,4] _t0AEF = [_t0ADF, _t0AE4, _t0AE9, _t0AEE];
    real _t0AF0 = 0.e0;
    real _t0AF1 = 0.1e1;
    real _t0AF2 = 0.e0;
    real _t0AF3 = 0.e0;
    vec4 _t0AF4 = [_t0AF0, _t0AF1, _t0AF2, _t0AF3];
    real _t0AF5 = -0.1e1;
    real _t0AF6 = 0.e0;
    real _t0AF7 = 0.e0;
    real _t0AF8 = 0.e0;
    vec4 _t0AF9 = [_t0AF5, _t0AF6, _t0AF7, _t0AF8];
    real _t0AFA = 0.e0;
    real _t0AFB = 0.e0;
    real _t0AFC = 0.1e1;
    real _t0AFD = 0.e0;
    vec4 _t0AFE = [_t0AFA, _t0AFB, _t0AFC, _t0AFD];
    real _t0AFF = 0.e0;
    real _t0B00 = 0.e0;
    real _t0B01 = 0.e0;
    real _t0B02 = 0.1e1;
    vec4 _t0B03 = [_t0AFF, _t0B00, _t0B01, _t0B02];
    tensor[4,4] _t0B04 = [_t0AF4, _t0AF9, _t0AFE, _t0B03];
    real _t0B05 = 0.1e1;
    real _t0B06 = 0.e0;
    real _t0B07 = 0.e0;
    real _t0B08 = 0.e0;
    vec4 _t0B09 = [_t0B05, _t0B06, _t0B07, _t0B08];
    real _t0B0A = 0.e0;
    real _t0B0B = 0.1e1;
    real _t0B0C = 0.e0;
    real _t0B0D = 0.e0;
    vec4 _t0B0E = [_t0B0A, _t0B0B, _t0B0C, _t0B0D];
    real _t0B0F = 0.e0;
    real _t0B10 = 0.e0;
    real _t0B11 = 0.1e1;
    real _t0B12 = 0.e0;
    vec4 _t0B13 = [_t0B0F, _t0B10, _t0B11, _t0B12];
    real _t0B14 = 0.e0;
    real _t0B15 = 0.e0;
    real _t0B16 = 0.e0;
    real _t0B17 = 0.1e1;
    vec4 _t0B18 = [_t0B14, _t0B15, _t0B16, _t0B17];
    tensor[4,4] _t0B19 = [_t0B09, _t0B0E, _t0B13, _t0B18];
    real _t0B1A = 0.e0;
    real _t0B1B = -0.1e1;
    real _t0B1C = 0.e0;
    real _t0B1D = 0.e0;
    vec4 _t0B1E = [_t0B1A, _t0B1B, _t0B1C, _t0B1D];
    real _t0B1F = 0.1e1;
    real _t0B20 = 0.e0;
    real _t0B21 = 0.e0;
    real _t0B22 = 0.e0;
    vec4 _t0B23 = [_t0B1F, _t0B20, _t0B21, _t0B22];
    real _t0B24 = 0.e0;
    real _t0B25 = 0.e0;
    real _t0B26 = 0.1e1;
    real _t0B27 = 0.e0;
    vec4 _t0B28 = [_t0B24, _t0B25, _t0B26, _t0B27];
    real _t0B29 = 0.e0;
    real _t0B2A = 0.e0;
    real _t0B2B = 0.e0;
    real _t0B2C = 0.1e1;
    vec4 _t0B2D = [_t0B29, _t0B2A, _t0B2B, _t0B2C];
    tensor[4,4] _t0B2E = [_t0B1E, _t0B23, _t0B28, _t0B2D];
    tensor[4,4][6] _t0B2F = {_t0AC5, _t0ADA, _t0AEF, _t0B04, _t0B19, _t0B2E};
    real _t0B30 = 0.e0;
    real _t0B31 = -0.1e1;
    real _t0B32 = 0.1e1;
    real _t0B33 = 0.5e0;
    vec4 _t0B34 = [_t0B30, _t0B31, _t0B32, _t0B33];
    real _t0B35 = 0.e0;
    real _t0B36 = -0.1e1;
    real _t0B37 = 0.e0;
    real _t0B38 = 0.e0;
    vec4 _t0B39 = [_t0B35, _t0B36, _t0B37, _t0B38];
    real _t0B3A = 0.1e1;
    real _t0B3B = 0.e0;
    real _t0B3C = 0.e0;
    real _t0B3D = 0.e0;
    vec4 _t0B3E = [_t0B3A, _t0B3B, _t0B3C, _t0B3D];
    real _t0B3F = 0.e0;
    real _t0B40 = 0.e0;
    real _t0B41 = 0.e0;
    real _t0B42 = 0.1e1;
    vec4 _t0B43 = [_t0B3F, _t0B40, _t0B41, _t0B42];
    tensor[4,4] _t0B44 = [_t0B34, _t0B39, _t0B3E, _t0B43];
    real _t0B45 = 0.e0;
    real _t0B46 = -0.1e1;
    real _t0B47 = 0.1e1;
    real _t0B48 = 0.5e0;
    vec4 _t0B49 = [_t0B45, _t0B46, _t0B47, _t0B48];
    real _t0B4A = 0.e0;
    real _t0B4B = -0.1e1;
    real _t0B4C = 0.e0;
    real _t0B4D = 0.e0;
    vec4 _t0B4E = [_t0B4A, _t0B4B, _t0B4C, _t0B4D];
    real _t0B4F = 0.1e1;
    real _t0B50 = 0.e0;
    real _t0B51 = 0.e0;
    real _t0B52 = 0.1e1;
    vec4 _t0B53 = [_t0B4F, _t0B50, _t0B51, _t0B52];
    real _t0B54 = 0.e0;
    real _t0B55 = 0.e0;
    real _t0B56 = 0.e0;
    real _t0B57 = 0.1e1;
    vec4 _t0B58 = [_t0B54, _t0B55, _t0B56, _t0B57];
    tensor[4,4] _t0B59 = [_t0B49, _t0B4E, _t0B53, _t0B58];
    real _t0B5A = 0.e0;
    real _t0B5B = -0.1e1;
    real _t0B5C = 0.e0;
    real _t0B5D = 0.e0;
    vec4 _t0B5E = [_t0B5A, _t0B5B, _t0B5C, _t0B5D];
    real _t0B5F = 0.1e1;
    real _t0B60 = 0.e0;
    real _t0B61 = 0.e0;
    real _t0B62 = 0.e0;
    vec4 _t0B63 = [_t0B5F, _t0B60, _t0B61, _t0B62];
    real _t0B64 = 0.e0;
    real _t0B65 = 0.e0;
    real _t0B66 = 0.1e1;
    real _t0B67 = 0.e0;
    vec4 _t0B68 = [_t0B64, _t0B65, _t0B66, _t0B67];
    real _t0B69 = 0.e0;
    real _t0B6A = 0.e0;
    real _t0B6B = 0.e0;
    real _t0B6C = 0.1e1;
    vec4 _t0B6D = [_t0B69, _t0B6A, _t0B6B, _t0B6C];
    tensor[4,4] _t0B6E = [_t0B5E, _t0B63, _t0B68, _t0B6D];
    real _t0B6F = -0.1e1;
    real _t0B70 = 0.e0;
    real _t0B71 = 0.e0;
    real _t0B72 = 0.e0;
    vec4 _t0B73 = [_t0B6F, _t0B70, _t0B71, _t0B72];
    real _t0B74 = 0.e0;
    real _t0B75 = -0.1e1;
    real _t0B76 = 0.e0;
    real _t0B77 = 0.e0;
    vec4 _t0B78 = [_t0B74, _t0B75, _t0B76, _t0B77];
    real _t0B79 = 0.e0;
    real _t0B7A = 0.e0;
    real _t0B7B = 0.1e1;
    real _t0B7C = 0.e0;
    vec4 _t0B7D = [_t0B79, _t0B7A, _t0B7B, _t0B7C];
    real _t0B7E = 0.e0;
    real _t0B7F = 0.e0;
    real _t0B80 = 0.e0;
    real _t0B81 = 0.1e1;
    vec4 _t0B82 = [_t0B7E, _t0B7F, _t0B80, _t0B81];
    tensor[4,4] _t0B83 = [_t0B73, _t0B78, _t0B7D, _t0B82];
    real _t0B84 = 0.e0;
    real _t0B85 = 0.1e1;
    real _t0B86 = 0.e0;
    real _t0B87 = 0.e0;
    vec4 _t0B88 = [_t0B84, _t0B85, _t0B86, _t0B87];
    real _t0B89 = -0.1e1;
    real _t0B8A = 0.e0;
    real _t0B8B = 0.e0;
    real _t0B8C = 0.e0;
    vec4 _t0B8D = [_t0B89, _t0B8A, _t0B8B, _t0B8C];
    real _t0B8E = 0.e0;
    real _t0B8F = 0.e0;
    real _t0B90 = 0.1e1;
    real _t0B91 = 0.e0;
    vec4 _t0B92 = [_t0B8E, _t0B8F, _t0B90, _t0B91];
    real _t0B93 = 0.e0;
    real _t0B94 = 0.e0;
    real _t0B95 = 0.e0;
    real _t0B96 = 0.1e1;
    vec4 _t0B97 = [_t0B93, _t0B94, _t0B95, _t0B96];
    tensor[4,4] _t0B98 = [_t0B88, _t0B8D, _t0B92, _t0B97];
    real _t0B99 = 0.1e1;
    real _t0B9A = 0.e0;
    real _t0B9B = 0.e0;
    real _t0B9C = 0.e0;
    vec4 _t0B9D = [_t0B99, _t0B9A, _t0B9B, _t0B9C];
    real _t0B9E = 0.e0;
    real _t0B9F = 0.1e1;
    real _t0BA0 = 0.e0;
    real _t0BA1 = 0.e0;
    vec4 _t0BA2 = [_t0B9E, _t0B9F, _t0BA0, _t0BA1];
    real _t0BA3 = 0.e0;
    real _t0BA4 = 0.e0;
    real _t0BA5 = 0.1e1;
    real _t0BA6 = 0.e0;
    vec4 _t0BA7 = [_t0BA3, _t0BA4, _t0BA5, _t0BA6];
    real _t0BA8 = 0.e0;
    real _t0BA9 = 0.e0;
    real _t0BAA = 0.e0;
    real _t0BAB = 0.1e1;
    vec4 _t0BAC = [_t0BA8, _t0BA9, _t0BAA, _t0BAB];
    tensor[4,4] _t0BAD = [_t0B9D, _t0BA2, _t0BA7, _t0BAC];
    tensor[4,4][6] _t0BAE = {_t0B44, _t0B59, _t0B6E, _t0B83, _t0B98, _t0BAD};
    tensor[4,4][6][6] _t0BAF = {_t0933, _t09B2, _t0A31, _t0AB0, _t0B2F, _t0BAE};
    real _t0BB0 = time0597[1];
    int _t0BB1 = prim $r2i01B7 (_t0BB0);
    tensor[4,4][6] _t0BB2 = prim $sub01C0<tensor[4,4][6]; %6> (_t0BAF, _t0BB1);
    real _t0BB3 = time0597[1];
    int _t0BB4 = prim $r2i01B7 (_t0BB3);
    int[2] _t0BB5 = func nextCell4059B (_t0BB4, cellId0594, mesh0593);
    int _t0BB6 = 1;
    int _t0BB7 = prim $sub01C0<int; %2> (_t0BB5, _t0BB6);
    tensor[4,4] _t0BB8 = prim $sub01C0<tensor[4,4]; %6> (_t0BB2, _t0BB7);
    real _t0BB9 = time0597[0];
    vec3 _t0BBA = prim *0036<$[3]> (_t0BB9, dPos0596);
    vec3 _t0BBB = prim +0017<$[3]> (_t0BBA, refPos0595);
    real _t0BBC = _t0BBB[0];
    real _t0BBD = time0597[0];
    vec3 _t0BBE = prim *0036<$[3]> (_t0BBD, dPos0596);
    vec3 _t0BBF = prim +0017<$[3]> (_t0BBE, refPos0595);
    real _t0BC0 = _t0BBF[1];
    real _t0BC1 = time0597[0];
    vec3 _t0BC2 = prim *0036<$[3]> (_t0BC1, dPos0596);
    vec3 _t0BC3 = prim +0017<$[3]> (_t0BC2, refPos0595);
    real _t0BC4 = _t0BC3[2];
    real _t0BC5 = 0.1e1;
    vec4 _t0BC6 = [_t0BBC, _t0BC0, _t0BC4, _t0BC5];
    vec4 _t0BC7 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0BB8, _t0BC6);
    real _t0BC8 = _t0BC7[0];
    real _t0BC9 = 0.1e1;
    real _t0BCA = 0.e0;
    real _t0BCB = 0.e0;
    real _t0BCC = 0.e0;
    vec4 _t0BCD = [_t0BC9, _t0BCA, _t0BCB, _t0BCC];
    real _t0BCE = 0.e0;
    real _t0BCF = 0.1e1;
    real _t0BD0 = 0.e0;
    real _t0BD1 = 0.e0;
    vec4 _t0BD2 = [_t0BCE, _t0BCF, _t0BD0, _t0BD1];
    real _t0BD3 = 0.e0;
    real _t0BD4 = 0.e0;
    real _t0BD5 = 0.1e1;
    real _t0BD6 = 0.e0;
    vec4 _t0BD7 = [_t0BD3, _t0BD4, _t0BD5, _t0BD6];
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    real _t0BDA = 0.e0;
    real _t0BDB = 0.1e1;
    vec4 _t0BDC = [_t0BD8, _t0BD9, _t0BDA, _t0BDB];
    tensor[4,4] _t0BDD = [_t0BCD, _t0BD2, _t0BD7, _t0BDC];
    real _t0BDE = 0.1e1;
    real _t0BDF = 0.e0;
    real _t0BE0 = 0.e0;
    real _t0BE1 = 0.e0;
    vec4 _t0BE2 = [_t0BDE, _t0BDF, _t0BE0, _t0BE1];
    real _t0BE3 = 0.e0;
    real _t0BE4 = 0.1e1;
    real _t0BE5 = 0.e0;
    real _t0BE6 = 0.e0;
    vec4 _t0BE7 = [_t0BE3, _t0BE4, _t0BE5, _t0BE6];
    real _t0BE8 = 0.e0;
    real _t0BE9 = 0.e0;
    real _t0BEA = 0.1e1;
    real _t0BEB = 0.1e1;
    vec4 _t0BEC = [_t0BE8, _t0BE9, _t0BEA, _t0BEB];
    real _t0BED = 0.e0;
    real _t0BEE = 0.e0;
    real _t0BEF = 0.e0;
    real _t0BF0 = 0.1e1;
    vec4 _t0BF1 = [_t0BED, _t0BEE, _t0BEF, _t0BF0];
    tensor[4,4] _t0BF2 = [_t0BE2, _t0BE7, _t0BEC, _t0BF1];
    real _t0BF3 = 0.e0;
    real _t0BF4 = 0.1e1;
    real _t0BF5 = 0.e0;
    real _t0BF6 = 0.e0;
    vec4 _t0BF7 = [_t0BF3, _t0BF4, _t0BF5, _t0BF6];
    real _t0BF8 = 0.e0;
    real _t0BF9 = 0.e0;
    real _t0BFA = 0.1e1;
    real _t0BFB = 0.e0;
    vec4 _t0BFC = [_t0BF8, _t0BF9, _t0BFA, _t0BFB];
    real _t0BFD = 0.1e1;
    real _t0BFE = -0.1e1;
    real _t0BFF = 0.e0;
    real _t0C00 = -0.5e0;
    vec4 _t0C01 = [_t0BFD, _t0BFE, _t0BFF, _t0C00];
    real _t0C02 = 0.e0;
    real _t0C03 = 0.e0;
    real _t0C04 = 0.e0;
    real _t0C05 = 0.1e1;
    vec4 _t0C06 = [_t0C02, _t0C03, _t0C04, _t0C05];
    tensor[4,4] _t0C07 = [_t0BF7, _t0BFC, _t0C01, _t0C06];
    real _t0C08 = 0.e0;
    real _t0C09 = 0.e0;
    real _t0C0A = -0.1e1;
    real _t0C0B = 0.e0;
    vec4 _t0C0C = [_t0C08, _t0C09, _t0C0A, _t0C0B];
    real _t0C0D = 0.e0;
    real _t0C0E = 0.1e1;
    real _t0C0F = 0.e0;
    real _t0C10 = 0.e0;
    vec4 _t0C11 = [_t0C0D, _t0C0E, _t0C0F, _t0C10];
    real _t0C12 = 0.1e1;
    real _t0C13 = -0.1e1;
    real _t0C14 = 0.e0;
    real _t0C15 = -0.5e0;
    vec4 _t0C16 = [_t0C12, _t0C13, _t0C14, _t0C15];
    real _t0C17 = 0.e0;
    real _t0C18 = 0.e0;
    real _t0C19 = 0.e0;
    real _t0C1A = 0.1e1;
    vec4 _t0C1B = [_t0C17, _t0C18, _t0C19, _t0C1A];
    tensor[4,4] _t0C1C = [_t0C0C, _t0C11, _t0C16, _t0C1B];
    real _t0C1D = 0.e0;
    real _t0C1E = -0.1e1;
    real _t0C1F = 0.e0;
    real _t0C20 = 0.e0;
    vec4 _t0C21 = [_t0C1D, _t0C1E, _t0C1F, _t0C20];
    real _t0C22 = 0.e0;
    real _t0C23 = 0.e0;
    real _t0C24 = -0.1e1;
    real _t0C25 = 0.e0;
    vec4 _t0C26 = [_t0C22, _t0C23, _t0C24, _t0C25];
    real _t0C27 = 0.1e1;
    real _t0C28 = -0.1e1;
    real _t0C29 = 0.e0;
    real _t0C2A = -0.5e0;
    vec4 _t0C2B = [_t0C27, _t0C28, _t0C29, _t0C2A];
    real _t0C2C = 0.e0;
    real _t0C2D = 0.e0;
    real _t0C2E = 0.e0;
    real _t0C2F = 0.1e1;
    vec4 _t0C30 = [_t0C2C, _t0C2D, _t0C2E, _t0C2F];
    tensor[4,4] _t0C31 = [_t0C21, _t0C26, _t0C2B, _t0C30];
    real _t0C32 = 0.e0;
    real _t0C33 = 0.e0;
    real _t0C34 = 0.1e1;
    real _t0C35 = 0.e0;
    vec4 _t0C36 = [_t0C32, _t0C33, _t0C34, _t0C35];
    real _t0C37 = 0.e0;
    real _t0C38 = -0.1e1;
    real _t0C39 = 0.e0;
    real _t0C3A = 0.e0;
    vec4 _t0C3B = [_t0C37, _t0C38, _t0C39, _t0C3A];
    real _t0C3C = 0.1e1;
    real _t0C3D = -0.1e1;
    real _t0C3E = 0.e0;
    real _t0C3F = -0.5e0;
    vec4 _t0C40 = [_t0C3C, _t0C3D, _t0C3E, _t0C3F];
    real _t0C41 = 0.e0;
    real _t0C42 = 0.e0;
    real _t0C43 = 0.e0;
    real _t0C44 = 0.1e1;
    vec4 _t0C45 = [_t0C41, _t0C42, _t0C43, _t0C44];
    tensor[4,4] _t0C46 = [_t0C36, _t0C3B, _t0C40, _t0C45];
    tensor[4,4][6] _t0C47 = {_t0BDD, _t0BF2, _t0C07, _t0C1C, _t0C31, _t0C46};
    real _t0C48 = 0.1e1;
    real _t0C49 = 0.e0;
    real _t0C4A = 0.e0;
    real _t0C4B = 0.e0;
    vec4 _t0C4C = [_t0C48, _t0C49, _t0C4A, _t0C4B];
    real _t0C4D = 0.e0;
    real _t0C4E = 0.1e1;
    real _t0C4F = 0.e0;
    real _t0C50 = 0.e0;
    vec4 _t0C51 = [_t0C4D, _t0C4E, _t0C4F, _t0C50];
    real _t0C52 = 0.e0;
    real _t0C53 = 0.e0;
    real _t0C54 = 0.1e1;
    real _t0C55 = -0.1e1;
    vec4 _t0C56 = [_t0C52, _t0C53, _t0C54, _t0C55];
    real _t0C57 = 0.e0;
    real _t0C58 = 0.e0;
    real _t0C59 = 0.e0;
    real _t0C5A = 0.1e1;
    vec4 _t0C5B = [_t0C57, _t0C58, _t0C59, _t0C5A];
    tensor[4,4] _t0C5C = [_t0C4C, _t0C51, _t0C56, _t0C5B];
    real _t0C5D = 0.1e1;
    real _t0C5E = 0.e0;
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    vec4 _t0C61 = [_t0C5D, _t0C5E, _t0C5F, _t0C60];
    real _t0C62 = 0.e0;
    real _t0C63 = 0.1e1;
    real _t0C64 = 0.e0;
    real _t0C65 = 0.e0;
    vec4 _t0C66 = [_t0C62, _t0C63, _t0C64, _t0C65];
    real _t0C67 = 0.e0;
    real _t0C68 = 0.e0;
    real _t0C69 = 0.1e1;
    real _t0C6A = 0.e0;
    vec4 _t0C6B = [_t0C67, _t0C68, _t0C69, _t0C6A];
    real _t0C6C = 0.e0;
    real _t0C6D = 0.e0;
    real _t0C6E = 0.e0;
    real _t0C6F = 0.1e1;
    vec4 _t0C70 = [_t0C6C, _t0C6D, _t0C6E, _t0C6F];
    tensor[4,4] _t0C71 = [_t0C61, _t0C66, _t0C6B, _t0C70];
    real _t0C72 = 0.e0;
    real _t0C73 = 0.1e1;
    real _t0C74 = 0.e0;
    real _t0C75 = 0.e0;
    vec4 _t0C76 = [_t0C72, _t0C73, _t0C74, _t0C75];
    real _t0C77 = 0.e0;
    real _t0C78 = 0.e0;
    real _t0C79 = 0.1e1;
    real _t0C7A = -0.1e1;
    vec4 _t0C7B = [_t0C77, _t0C78, _t0C79, _t0C7A];
    real _t0C7C = 0.1e1;
    real _t0C7D = -0.1e1;
    real _t0C7E = 0.e0;
    real _t0C7F = -0.5e0;
    vec4 _t0C80 = [_t0C7C, _t0C7D, _t0C7E, _t0C7F];
    real _t0C81 = 0.e0;
    real _t0C82 = 0.e0;
    real _t0C83 = 0.e0;
    real _t0C84 = 0.1e1;
    vec4 _t0C85 = [_t0C81, _t0C82, _t0C83, _t0C84];
    tensor[4,4] _t0C86 = [_t0C76, _t0C7B, _t0C80, _t0C85];
    real _t0C87 = 0.e0;
    real _t0C88 = 0.e0;
    real _t0C89 = -0.1e1;
    real _t0C8A = 0.1e1;
    vec4 _t0C8B = [_t0C87, _t0C88, _t0C89, _t0C8A];
    real _t0C8C = 0.e0;
    real _t0C8D = 0.1e1;
    real _t0C8E = 0.e0;
    real _t0C8F = 0.e0;
    vec4 _t0C90 = [_t0C8C, _t0C8D, _t0C8E, _t0C8F];
    real _t0C91 = 0.1e1;
    real _t0C92 = -0.1e1;
    real _t0C93 = 0.e0;
    real _t0C94 = -0.5e0;
    vec4 _t0C95 = [_t0C91, _t0C92, _t0C93, _t0C94];
    real _t0C96 = 0.e0;
    real _t0C97 = 0.e0;
    real _t0C98 = 0.e0;
    real _t0C99 = 0.1e1;
    vec4 _t0C9A = [_t0C96, _t0C97, _t0C98, _t0C99];
    tensor[4,4] _t0C9B = [_t0C8B, _t0C90, _t0C95, _t0C9A];
    real _t0C9C = 0.e0;
    real _t0C9D = -0.1e1;
    real _t0C9E = 0.e0;
    real _t0C9F = 0.e0;
    vec4 _t0CA0 = [_t0C9C, _t0C9D, _t0C9E, _t0C9F];
    real _t0CA1 = 0.e0;
    real _t0CA2 = 0.e0;
    real _t0CA3 = -0.1e1;
    real _t0CA4 = 0.1e1;
    vec4 _t0CA5 = [_t0CA1, _t0CA2, _t0CA3, _t0CA4];
    real _t0CA6 = 0.1e1;
    real _t0CA7 = -0.1e1;
    real _t0CA8 = 0.e0;
    real _t0CA9 = -0.5e0;
    vec4 _t0CAA = [_t0CA6, _t0CA7, _t0CA8, _t0CA9];
    real _t0CAB = 0.e0;
    real _t0CAC = 0.e0;
    real _t0CAD = 0.e0;
    real _t0CAE = 0.1e1;
    vec4 _t0CAF = [_t0CAB, _t0CAC, _t0CAD, _t0CAE];
    tensor[4,4] _t0CB0 = [_t0CA0, _t0CA5, _t0CAA, _t0CAF];
    real _t0CB1 = 0.e0;
    real _t0CB2 = 0.e0;
    real _t0CB3 = 0.1e1;
    real _t0CB4 = -0.1e1;
    vec4 _t0CB5 = [_t0CB1, _t0CB2, _t0CB3, _t0CB4];
    real _t0CB6 = 0.e0;
    real _t0CB7 = -0.1e1;
    real _t0CB8 = 0.e0;
    real _t0CB9 = 0.e0;
    vec4 _t0CBA = [_t0CB6, _t0CB7, _t0CB8, _t0CB9];
    real _t0CBB = 0.1e1;
    real _t0CBC = -0.1e1;
    real _t0CBD = 0.e0;
    real _t0CBE = -0.5e0;
    vec4 _t0CBF = [_t0CBB, _t0CBC, _t0CBD, _t0CBE];
    real _t0CC0 = 0.e0;
    real _t0CC1 = 0.e0;
    real _t0CC2 = 0.e0;
    real _t0CC3 = 0.1e1;
    vec4 _t0CC4 = [_t0CC0, _t0CC1, _t0CC2, _t0CC3];
    tensor[4,4] _t0CC5 = [_t0CB5, _t0CBA, _t0CBF, _t0CC4];
    tensor[4,4][6] _t0CC6 = {_t0C5C, _t0C71, _t0C86, _t0C9B, _t0CB0, _t0CC5};
    real _t0CC7 = 0.1e1;
    real _t0CC8 = 0.e0;
    real _t0CC9 = 0.1e1;
    real _t0CCA = 0.5e0;
    vec4 _t0CCB = [_t0CC7, _t0CC8, _t0CC9, _t0CCA];
    real _t0CCC = 0.1e1;
    real _t0CCD = 0.e0;
    real _t0CCE = 0.e0;
    real _t0CCF = 0.e0;
    vec4 _t0CD0 = [_t0CCC, _t0CCD, _t0CCE, _t0CCF];
    real _t0CD1 = 0.e0;
    real _t0CD2 = 0.1e1;
    real _t0CD3 = 0.e0;
    real _t0CD4 = 0.e0;
    vec4 _t0CD5 = [_t0CD1, _t0CD2, _t0CD3, _t0CD4];
    real _t0CD6 = 0.e0;
    real _t0CD7 = 0.e0;
    real _t0CD8 = 0.e0;
    real _t0CD9 = 0.1e1;
    vec4 _t0CDA = [_t0CD6, _t0CD7, _t0CD8, _t0CD9];
    tensor[4,4] _t0CDB = [_t0CCB, _t0CD0, _t0CD5, _t0CDA];
    real _t0CDC = 0.1e1;
    real _t0CDD = 0.e0;
    real _t0CDE = 0.1e1;
    real _t0CDF = 0.5e0;
    vec4 _t0CE0 = [_t0CDC, _t0CDD, _t0CDE, _t0CDF];
    real _t0CE1 = 0.1e1;
    real _t0CE2 = 0.e0;
    real _t0CE3 = 0.e0;
    real _t0CE4 = 0.e0;
    vec4 _t0CE5 = [_t0CE1, _t0CE2, _t0CE3, _t0CE4];
    real _t0CE6 = 0.e0;
    real _t0CE7 = 0.1e1;
    real _t0CE8 = 0.e0;
    real _t0CE9 = 0.1e1;
    vec4 _t0CEA = [_t0CE6, _t0CE7, _t0CE8, _t0CE9];
    real _t0CEB = 0.e0;
    real _t0CEC = 0.e0;
    real _t0CED = 0.e0;
    real _t0CEE = 0.1e1;
    vec4 _t0CEF = [_t0CEB, _t0CEC, _t0CED, _t0CEE];
    tensor[4,4] _t0CF0 = [_t0CE0, _t0CE5, _t0CEA, _t0CEF];
    real _t0CF1 = 0.1e1;
    real _t0CF2 = 0.e0;
    real _t0CF3 = 0.e0;
    real _t0CF4 = 0.e0;
    vec4 _t0CF5 = [_t0CF1, _t0CF2, _t0CF3, _t0CF4];
    real _t0CF6 = 0.e0;
    real _t0CF7 = 0.1e1;
    real _t0CF8 = 0.e0;
    real _t0CF9 = 0.e0;
    vec4 _t0CFA = [_t0CF6, _t0CF7, _t0CF8, _t0CF9];
    real _t0CFB = 0.e0;
    real _t0CFC = 0.e0;
    real _t0CFD = 0.1e1;
    real _t0CFE = 0.e0;
    vec4 _t0CFF = [_t0CFB, _t0CFC, _t0CFD, _t0CFE];
    real _t0D00 = 0.e0;
    real _t0D01 = 0.e0;
    real _t0D02 = 0.e0;
    real _t0D03 = 0.1e1;
    vec4 _t0D04 = [_t0D00, _t0D01, _t0D02, _t0D03];
    tensor[4,4] _t0D05 = [_t0CF5, _t0CFA, _t0CFF, _t0D04];
    real _t0D06 = 0.e0;
    real _t0D07 = -0.1e1;
    real _t0D08 = 0.e0;
    real _t0D09 = 0.e0;
    vec4 _t0D0A = [_t0D06, _t0D07, _t0D08, _t0D09];
    real _t0D0B = 0.1e1;
    real _t0D0C = 0.e0;
    real _t0D0D = 0.e0;
    real _t0D0E = 0.e0;
    vec4 _t0D0F = [_t0D0B, _t0D0C, _t0D0D, _t0D0E];
    real _t0D10 = 0.e0;
    real _t0D11 = 0.e0;
    real _t0D12 = 0.1e1;
    real _t0D13 = 0.e0;
    vec4 _t0D14 = [_t0D10, _t0D11, _t0D12, _t0D13];
    real _t0D15 = 0.e0;
    real _t0D16 = 0.e0;
    real _t0D17 = 0.e0;
    real _t0D18 = 0.1e1;
    vec4 _t0D19 = [_t0D15, _t0D16, _t0D17, _t0D18];
    tensor[4,4] _t0D1A = [_t0D0A, _t0D0F, _t0D14, _t0D19];
    real _t0D1B = -0.1e1;
    real _t0D1C = 0.e0;
    real _t0D1D = 0.e0;
    real _t0D1E = 0.e0;
    vec4 _t0D1F = [_t0D1B, _t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = 0.e0;
    real _t0D21 = -0.1e1;
    real _t0D22 = 0.e0;
    real _t0D23 = 0.e0;
    vec4 _t0D24 = [_t0D20, _t0D21, _t0D22, _t0D23];
    real _t0D25 = 0.e0;
    real _t0D26 = 0.e0;
    real _t0D27 = 0.1e1;
    real _t0D28 = 0.e0;
    vec4 _t0D29 = [_t0D25, _t0D26, _t0D27, _t0D28];
    real _t0D2A = 0.e0;
    real _t0D2B = 0.e0;
    real _t0D2C = 0.e0;
    real _t0D2D = 0.1e1;
    vec4 _t0D2E = [_t0D2A, _t0D2B, _t0D2C, _t0D2D];
    tensor[4,4] _t0D2F = [_t0D1F, _t0D24, _t0D29, _t0D2E];
    real _t0D30 = 0.e0;
    real _t0D31 = 0.1e1;
    real _t0D32 = 0.e0;
    real _t0D33 = 0.e0;
    vec4 _t0D34 = [_t0D30, _t0D31, _t0D32, _t0D33];
    real _t0D35 = -0.1e1;
    real _t0D36 = 0.e0;
    real _t0D37 = 0.e0;
    real _t0D38 = 0.e0;
    vec4 _t0D39 = [_t0D35, _t0D36, _t0D37, _t0D38];
    real _t0D3A = 0.e0;
    real _t0D3B = 0.e0;
    real _t0D3C = 0.1e1;
    real _t0D3D = 0.e0;
    vec4 _t0D3E = [_t0D3A, _t0D3B, _t0D3C, _t0D3D];
    real _t0D3F = 0.e0;
    real _t0D40 = 0.e0;
    real _t0D41 = 0.e0;
    real _t0D42 = 0.1e1;
    vec4 _t0D43 = [_t0D3F, _t0D40, _t0D41, _t0D42];
    tensor[4,4] _t0D44 = [_t0D34, _t0D39, _t0D3E, _t0D43];
    tensor[4,4][6] _t0D45 = {_t0CDB, _t0CF0, _t0D05, _t0D1A, _t0D2F, _t0D44};
    real _t0D46 = 0.e0;
    real _t0D47 = 0.1e1;
    real _t0D48 = 0.1e1;
    real _t0D49 = 0.5e0;
    vec4 _t0D4A = [_t0D46, _t0D47, _t0D48, _t0D49];
    real _t0D4B = 0.e0;
    real _t0D4C = 0.1e1;
    real _t0D4D = 0.e0;
    real _t0D4E = 0.e0;
    vec4 _t0D4F = [_t0D4B, _t0D4C, _t0D4D, _t0D4E];
    real _t0D50 = -0.1e1;
    real _t0D51 = 0.e0;
    real _t0D52 = 0.e0;
    real _t0D53 = 0.e0;
    vec4 _t0D54 = [_t0D50, _t0D51, _t0D52, _t0D53];
    real _t0D55 = 0.e0;
    real _t0D56 = 0.e0;
    real _t0D57 = 0.e0;
    real _t0D58 = 0.1e1;
    vec4 _t0D59 = [_t0D55, _t0D56, _t0D57, _t0D58];
    tensor[4,4] _t0D5A = [_t0D4A, _t0D4F, _t0D54, _t0D59];
    real _t0D5B = 0.e0;
    real _t0D5C = 0.1e1;
    real _t0D5D = 0.1e1;
    real _t0D5E = 0.5e0;
    vec4 _t0D5F = [_t0D5B, _t0D5C, _t0D5D, _t0D5E];
    real _t0D60 = 0.e0;
    real _t0D61 = 0.1e1;
    real _t0D62 = 0.e0;
    real _t0D63 = 0.e0;
    vec4 _t0D64 = [_t0D60, _t0D61, _t0D62, _t0D63];
    real _t0D65 = -0.1e1;
    real _t0D66 = 0.e0;
    real _t0D67 = 0.e0;
    real _t0D68 = 0.1e1;
    vec4 _t0D69 = [_t0D65, _t0D66, _t0D67, _t0D68];
    real _t0D6A = 0.e0;
    real _t0D6B = 0.e0;
    real _t0D6C = 0.e0;
    real _t0D6D = 0.1e1;
    vec4 _t0D6E = [_t0D6A, _t0D6B, _t0D6C, _t0D6D];
    tensor[4,4] _t0D6F = [_t0D5F, _t0D64, _t0D69, _t0D6E];
    real _t0D70 = 0.e0;
    real _t0D71 = 0.1e1;
    real _t0D72 = 0.e0;
    real _t0D73 = 0.e0;
    vec4 _t0D74 = [_t0D70, _t0D71, _t0D72, _t0D73];
    real _t0D75 = -0.1e1;
    real _t0D76 = 0.e0;
    real _t0D77 = 0.e0;
    real _t0D78 = 0.e0;
    vec4 _t0D79 = [_t0D75, _t0D76, _t0D77, _t0D78];
    real _t0D7A = 0.e0;
    real _t0D7B = 0.e0;
    real _t0D7C = 0.1e1;
    real _t0D7D = 0.e0;
    vec4 _t0D7E = [_t0D7A, _t0D7B, _t0D7C, _t0D7D];
    real _t0D7F = 0.e0;
    real _t0D80 = 0.e0;
    real _t0D81 = 0.e0;
    real _t0D82 = 0.1e1;
    vec4 _t0D83 = [_t0D7F, _t0D80, _t0D81, _t0D82];
    tensor[4,4] _t0D84 = [_t0D74, _t0D79, _t0D7E, _t0D83];
    real _t0D85 = 0.1e1;
    real _t0D86 = 0.e0;
    real _t0D87 = 0.e0;
    real _t0D88 = 0.e0;
    vec4 _t0D89 = [_t0D85, _t0D86, _t0D87, _t0D88];
    real _t0D8A = 0.e0;
    real _t0D8B = 0.1e1;
    real _t0D8C = 0.e0;
    real _t0D8D = 0.e0;
    vec4 _t0D8E = [_t0D8A, _t0D8B, _t0D8C, _t0D8D];
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    real _t0D91 = 0.1e1;
    real _t0D92 = 0.e0;
    vec4 _t0D93 = [_t0D8F, _t0D90, _t0D91, _t0D92];
    real _t0D94 = 0.e0;
    real _t0D95 = 0.e0;
    real _t0D96 = 0.e0;
    real _t0D97 = 0.1e1;
    vec4 _t0D98 = [_t0D94, _t0D95, _t0D96, _t0D97];
    tensor[4,4] _t0D99 = [_t0D89, _t0D8E, _t0D93, _t0D98];
    real _t0D9A = 0.e0;
    real _t0D9B = -0.1e1;
    real _t0D9C = 0.e0;
    real _t0D9D = 0.e0;
    vec4 _t0D9E = [_t0D9A, _t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.1e1;
    real _t0DA0 = 0.e0;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.e0;
    vec4 _t0DA3 = [_t0D9F, _t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = 0.e0;
    real _t0DA5 = 0.e0;
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.e0;
    vec4 _t0DA8 = [_t0DA4, _t0DA5, _t0DA6, _t0DA7];
    real _t0DA9 = 0.e0;
    real _t0DAA = 0.e0;
    real _t0DAB = 0.e0;
    real _t0DAC = 0.1e1;
    vec4 _t0DAD = [_t0DA9, _t0DAA, _t0DAB, _t0DAC];
    tensor[4,4] _t0DAE = [_t0D9E, _t0DA3, _t0DA8, _t0DAD];
    real _t0DAF = -0.1e1;
    real _t0DB0 = 0.e0;
    real _t0DB1 = 0.e0;
    real _t0DB2 = 0.e0;
    vec4 _t0DB3 = [_t0DAF, _t0DB0, _t0DB1, _t0DB2];
    real _t0DB4 = 0.e0;
    real _t0DB5 = -0.1e1;
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.e0;
    vec4 _t0DB8 = [_t0DB4, _t0DB5, _t0DB6, _t0DB7];
    real _t0DB9 = 0.e0;
    real _t0DBA = 0.e0;
    real _t0DBB = 0.1e1;
    real _t0DBC = 0.e0;
    vec4 _t0DBD = [_t0DB9, _t0DBA, _t0DBB, _t0DBC];
    real _t0DBE = 0.e0;
    real _t0DBF = 0.e0;
    real _t0DC0 = 0.e0;
    real _t0DC1 = 0.1e1;
    vec4 _t0DC2 = [_t0DBE, _t0DBF, _t0DC0, _t0DC1];
    tensor[4,4] _t0DC3 = [_t0DB3, _t0DB8, _t0DBD, _t0DC2];
    tensor[4,4][6] _t0DC4 = {_t0D5A, _t0D6F, _t0D84, _t0D99, _t0DAE, _t0DC3};
    real _t0DC5 = -0.1e1;
    real _t0DC6 = 0.e0;
    real _t0DC7 = 0.1e1;
    real _t0DC8 = 0.5e0;
    vec4 _t0DC9 = [_t0DC5, _t0DC6, _t0DC7, _t0DC8];
    real _t0DCA = -0.1e1;
    real _t0DCB = 0.e0;
    real _t0DCC = 0.e0;
    real _t0DCD = 0.e0;
    vec4 _t0DCE = [_t0DCA, _t0DCB, _t0DCC, _t0DCD];
    real _t0DCF = 0.e0;
    real _t0DD0 = -0.1e1;
    real _t0DD1 = 0.e0;
    real _t0DD2 = 0.e0;
    vec4 _t0DD3 = [_t0DCF, _t0DD0, _t0DD1, _t0DD2];
    real _t0DD4 = 0.e0;
    real _t0DD5 = 0.e0;
    real _t0DD6 = 0.e0;
    real _t0DD7 = 0.1e1;
    vec4 _t0DD8 = [_t0DD4, _t0DD5, _t0DD6, _t0DD7];
    tensor[4,4] _t0DD9 = [_t0DC9, _t0DCE, _t0DD3, _t0DD8];
    real _t0DDA = -0.1e1;
    real _t0DDB = 0.e0;
    real _t0DDC = 0.1e1;
    real _t0DDD = 0.5e0;
    vec4 _t0DDE = [_t0DDA, _t0DDB, _t0DDC, _t0DDD];
    real _t0DDF = -0.1e1;
    real _t0DE0 = 0.e0;
    real _t0DE1 = 0.e0;
    real _t0DE2 = 0.e0;
    vec4 _t0DE3 = [_t0DDF, _t0DE0, _t0DE1, _t0DE2];
    real _t0DE4 = 0.e0;
    real _t0DE5 = -0.1e1;
    real _t0DE6 = 0.e0;
    real _t0DE7 = 0.1e1;
    vec4 _t0DE8 = [_t0DE4, _t0DE5, _t0DE6, _t0DE7];
    real _t0DE9 = 0.e0;
    real _t0DEA = 0.e0;
    real _t0DEB = 0.e0;
    real _t0DEC = 0.1e1;
    vec4 _t0DED = [_t0DE9, _t0DEA, _t0DEB, _t0DEC];
    tensor[4,4] _t0DEE = [_t0DDE, _t0DE3, _t0DE8, _t0DED];
    real _t0DEF = -0.1e1;
    real _t0DF0 = 0.e0;
    real _t0DF1 = 0.e0;
    real _t0DF2 = 0.e0;
    vec4 _t0DF3 = [_t0DEF, _t0DF0, _t0DF1, _t0DF2];
    real _t0DF4 = 0.e0;
    real _t0DF5 = -0.1e1;
    real _t0DF6 = 0.e0;
    real _t0DF7 = 0.e0;
    vec4 _t0DF8 = [_t0DF4, _t0DF5, _t0DF6, _t0DF7];
    real _t0DF9 = 0.e0;
    real _t0DFA = 0.e0;
    real _t0DFB = 0.1e1;
    real _t0DFC = 0.e0;
    vec4 _t0DFD = [_t0DF9, _t0DFA, _t0DFB, _t0DFC];
    real _t0DFE = 0.e0;
    real _t0DFF = 0.e0;
    real _t0E00 = 0.e0;
    real _t0E01 = 0.1e1;
    vec4 _t0E02 = [_t0DFE, _t0DFF, _t0E00, _t0E01];
    tensor[4,4] _t0E03 = [_t0DF3, _t0DF8, _t0DFD, _t0E02];
    real _t0E04 = 0.e0;
    real _t0E05 = 0.1e1;
    real _t0E06 = 0.e0;
    real _t0E07 = 0.e0;
    vec4 _t0E08 = [_t0E04, _t0E05, _t0E06, _t0E07];
    real _t0E09 = -0.1e1;
    real _t0E0A = 0.e0;
    real _t0E0B = 0.e0;
    real _t0E0C = 0.e0;
    vec4 _t0E0D = [_t0E09, _t0E0A, _t0E0B, _t0E0C];
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    real _t0E10 = 0.1e1;
    real _t0E11 = 0.e0;
    vec4 _t0E12 = [_t0E0E, _t0E0F, _t0E10, _t0E11];
    real _t0E13 = 0.e0;
    real _t0E14 = 0.e0;
    real _t0E15 = 0.e0;
    real _t0E16 = 0.1e1;
    vec4 _t0E17 = [_t0E13, _t0E14, _t0E15, _t0E16];
    tensor[4,4] _t0E18 = [_t0E08, _t0E0D, _t0E12, _t0E17];
    real _t0E19 = 0.1e1;
    real _t0E1A = 0.e0;
    real _t0E1B = 0.e0;
    real _t0E1C = 0.e0;
    vec4 _t0E1D = [_t0E19, _t0E1A, _t0E1B, _t0E1C];
    real _t0E1E = 0.e0;
    real _t0E1F = 0.1e1;
    real _t0E20 = 0.e0;
    real _t0E21 = 0.e0;
    vec4 _t0E22 = [_t0E1E, _t0E1F, _t0E20, _t0E21];
    real _t0E23 = 0.e0;
    real _t0E24 = 0.e0;
    real _t0E25 = 0.1e1;
    real _t0E26 = 0.e0;
    vec4 _t0E27 = [_t0E23, _t0E24, _t0E25, _t0E26];
    real _t0E28 = 0.e0;
    real _t0E29 = 0.e0;
    real _t0E2A = 0.e0;
    real _t0E2B = 0.1e1;
    vec4 _t0E2C = [_t0E28, _t0E29, _t0E2A, _t0E2B];
    tensor[4,4] _t0E2D = [_t0E1D, _t0E22, _t0E27, _t0E2C];
    real _t0E2E = 0.e0;
    real _t0E2F = -0.1e1;
    real _t0E30 = 0.e0;
    real _t0E31 = 0.e0;
    vec4 _t0E32 = [_t0E2E, _t0E2F, _t0E30, _t0E31];
    real _t0E33 = 0.1e1;
    real _t0E34 = 0.e0;
    real _t0E35 = 0.e0;
    real _t0E36 = 0.e0;
    vec4 _t0E37 = [_t0E33, _t0E34, _t0E35, _t0E36];
    real _t0E38 = 0.e0;
    real _t0E39 = 0.e0;
    real _t0E3A = 0.1e1;
    real _t0E3B = 0.e0;
    vec4 _t0E3C = [_t0E38, _t0E39, _t0E3A, _t0E3B];
    real _t0E3D = 0.e0;
    real _t0E3E = 0.e0;
    real _t0E3F = 0.e0;
    real _t0E40 = 0.1e1;
    vec4 _t0E41 = [_t0E3D, _t0E3E, _t0E3F, _t0E40];
    tensor[4,4] _t0E42 = [_t0E32, _t0E37, _t0E3C, _t0E41];
    tensor[4,4][6] _t0E43 = {_t0DD9, _t0DEE, _t0E03, _t0E18, _t0E2D, _t0E42};
    real _t0E44 = 0.e0;
    real _t0E45 = -0.1e1;
    real _t0E46 = 0.1e1;
    real _t0E47 = 0.5e0;
    vec4 _t0E48 = [_t0E44, _t0E45, _t0E46, _t0E47];
    real _t0E49 = 0.e0;
    real _t0E4A = -0.1e1;
    real _t0E4B = 0.e0;
    real _t0E4C = 0.e0;
    vec4 _t0E4D = [_t0E49, _t0E4A, _t0E4B, _t0E4C];
    real _t0E4E = 0.1e1;
    real _t0E4F = 0.e0;
    real _t0E50 = 0.e0;
    real _t0E51 = 0.e0;
    vec4 _t0E52 = [_t0E4E, _t0E4F, _t0E50, _t0E51];
    real _t0E53 = 0.e0;
    real _t0E54 = 0.e0;
    real _t0E55 = 0.e0;
    real _t0E56 = 0.1e1;
    vec4 _t0E57 = [_t0E53, _t0E54, _t0E55, _t0E56];
    tensor[4,4] _t0E58 = [_t0E48, _t0E4D, _t0E52, _t0E57];
    real _t0E59 = 0.e0;
    real _t0E5A = -0.1e1;
    real _t0E5B = 0.1e1;
    real _t0E5C = 0.5e0;
    vec4 _t0E5D = [_t0E59, _t0E5A, _t0E5B, _t0E5C];
    real _t0E5E = 0.e0;
    real _t0E5F = -0.1e1;
    real _t0E60 = 0.e0;
    real _t0E61 = 0.e0;
    vec4 _t0E62 = [_t0E5E, _t0E5F, _t0E60, _t0E61];
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.e0;
    real _t0E65 = 0.e0;
    real _t0E66 = 0.1e1;
    vec4 _t0E67 = [_t0E63, _t0E64, _t0E65, _t0E66];
    real _t0E68 = 0.e0;
    real _t0E69 = 0.e0;
    real _t0E6A = 0.e0;
    real _t0E6B = 0.1e1;
    vec4 _t0E6C = [_t0E68, _t0E69, _t0E6A, _t0E6B];
    tensor[4,4] _t0E6D = [_t0E5D, _t0E62, _t0E67, _t0E6C];
    real _t0E6E = 0.e0;
    real _t0E6F = -0.1e1;
    real _t0E70 = 0.e0;
    real _t0E71 = 0.e0;
    vec4 _t0E72 = [_t0E6E, _t0E6F, _t0E70, _t0E71];
    real _t0E73 = 0.1e1;
    real _t0E74 = 0.e0;
    real _t0E75 = 0.e0;
    real _t0E76 = 0.e0;
    vec4 _t0E77 = [_t0E73, _t0E74, _t0E75, _t0E76];
    real _t0E78 = 0.e0;
    real _t0E79 = 0.e0;
    real _t0E7A = 0.1e1;
    real _t0E7B = 0.e0;
    vec4 _t0E7C = [_t0E78, _t0E79, _t0E7A, _t0E7B];
    real _t0E7D = 0.e0;
    real _t0E7E = 0.e0;
    real _t0E7F = 0.e0;
    real _t0E80 = 0.1e1;
    vec4 _t0E81 = [_t0E7D, _t0E7E, _t0E7F, _t0E80];
    tensor[4,4] _t0E82 = [_t0E72, _t0E77, _t0E7C, _t0E81];
    real _t0E83 = -0.1e1;
    real _t0E84 = 0.e0;
    real _t0E85 = 0.e0;
    real _t0E86 = 0.e0;
    vec4 _t0E87 = [_t0E83, _t0E84, _t0E85, _t0E86];
    real _t0E88 = 0.e0;
    real _t0E89 = -0.1e1;
    real _t0E8A = 0.e0;
    real _t0E8B = 0.e0;
    vec4 _t0E8C = [_t0E88, _t0E89, _t0E8A, _t0E8B];
    real _t0E8D = 0.e0;
    real _t0E8E = 0.e0;
    real _t0E8F = 0.1e1;
    real _t0E90 = 0.e0;
    vec4 _t0E91 = [_t0E8D, _t0E8E, _t0E8F, _t0E90];
    real _t0E92 = 0.e0;
    real _t0E93 = 0.e0;
    real _t0E94 = 0.e0;
    real _t0E95 = 0.1e1;
    vec4 _t0E96 = [_t0E92, _t0E93, _t0E94, _t0E95];
    tensor[4,4] _t0E97 = [_t0E87, _t0E8C, _t0E91, _t0E96];
    real _t0E98 = 0.e0;
    real _t0E99 = 0.1e1;
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    vec4 _t0E9C = [_t0E98, _t0E99, _t0E9A, _t0E9B];
    real _t0E9D = -0.1e1;
    real _t0E9E = 0.e0;
    real _t0E9F = 0.e0;
    real _t0EA0 = 0.e0;
    vec4 _t0EA1 = [_t0E9D, _t0E9E, _t0E9F, _t0EA0];
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.e0;
    real _t0EA4 = 0.1e1;
    real _t0EA5 = 0.e0;
    vec4 _t0EA6 = [_t0EA2, _t0EA3, _t0EA4, _t0EA5];
    real _t0EA7 = 0.e0;
    real _t0EA8 = 0.e0;
    real _t0EA9 = 0.e0;
    real _t0EAA = 0.1e1;
    vec4 _t0EAB = [_t0EA7, _t0EA8, _t0EA9, _t0EAA];
    tensor[4,4] _t0EAC = [_t0E9C, _t0EA1, _t0EA6, _t0EAB];
    real _t0EAD = 0.1e1;
    real _t0EAE = 0.e0;
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.e0;
    vec4 _t0EB1 = [_t0EAD, _t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.1e1;
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.e0;
    vec4 _t0EB6 = [_t0EB2, _t0EB3, _t0EB4, _t0EB5];
    real _t0EB7 = 0.e0;
    real _t0EB8 = 0.e0;
    real _t0EB9 = 0.1e1;
    real _t0EBA = 0.e0;
    vec4 _t0EBB = [_t0EB7, _t0EB8, _t0EB9, _t0EBA];
    real _t0EBC = 0.e0;
    real _t0EBD = 0.e0;
    real _t0EBE = 0.e0;
    real _t0EBF = 0.1e1;
    vec4 _t0EC0 = [_t0EBC, _t0EBD, _t0EBE, _t0EBF];
    tensor[4,4] _t0EC1 = [_t0EB1, _t0EB6, _t0EBB, _t0EC0];
    tensor[4,4][6] _t0EC2 = {_t0E58, _t0E6D, _t0E82, _t0E97, _t0EAC, _t0EC1};
    tensor[4,4][6][6] _t0EC3 = {_t0C47, _t0CC6, _t0D45, _t0DC4, _t0E43, _t0EC2};
    real _t0EC4 = time0597[1];
    int _t0EC5 = prim $r2i01B7 (_t0EC4);
    tensor[4,4][6] _t0EC6 = prim $sub01C0<tensor[4,4][6]; %6> (_t0EC3, _t0EC5);
    real _t0EC7 = time0597[1];
    int _t0EC8 = prim $r2i01B7 (_t0EC7);
    int[2] _t0EC9 = func nextCell4059B (_t0EC8, cellId0594, mesh0593);
    int _t0ECA = 1;
    int _t0ECB = prim $sub01C0<int; %2> (_t0EC9, _t0ECA);
    tensor[4,4] _t0ECC = prim $sub01C0<tensor[4,4]; %6> (_t0EC6, _t0ECB);
    real _t0ECD = time0597[0];
    vec3 _t0ECE = prim *0036<$[3]> (_t0ECD, dPos0596);
    vec3 _t0ECF = prim +0017<$[3]> (_t0ECE, refPos0595);
    real _t0ED0 = _t0ECF[0];
    real _t0ED1 = time0597[0];
    vec3 _t0ED2 = prim *0036<$[3]> (_t0ED1, dPos0596);
    vec3 _t0ED3 = prim +0017<$[3]> (_t0ED2, refPos0595);
    real _t0ED4 = _t0ED3[1];
    real _t0ED5 = time0597[0];
    vec3 _t0ED6 = prim *0036<$[3]> (_t0ED5, dPos0596);
    vec3 _t0ED7 = prim +0017<$[3]> (_t0ED6, refPos0595);
    real _t0ED8 = _t0ED7[2];
    real _t0ED9 = 0.1e1;
    vec4 _t0EDA = [_t0ED0, _t0ED4, _t0ED8, _t0ED9];
    vec4 _t0EDB = prim •00CE<$[4,4]; $[4]; $[4]> (_t0ECC, _t0EDA);
    real _t0EDC = _t0EDB[1];
    real _t0EDD = 0.1e1;
    real _t0EDE = 0.e0;
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.e0;
    vec4 _t0EE1 = [_t0EDD, _t0EDE, _t0EDF, _t0EE0];
    real _t0EE2 = 0.e0;
    real _t0EE3 = 0.1e1;
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
    real _t0EE7 = 0.e0;
    real _t0EE8 = 0.e0;
    real _t0EE9 = 0.1e1;
    real _t0EEA = 0.e0;
    vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    real _t0EEE = 0.e0;
    real _t0EEF = 0.1e1;
    vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
    tensor[4,4] _t0EF1 = [_t0EE1, _t0EE6, _t0EEB, _t0EF0];
    real _t0EF2 = 0.1e1;
    real _t0EF3 = 0.e0;
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    vec4 _t0EF6 = [_t0EF2, _t0EF3, _t0EF4, _t0EF5];
    real _t0EF7 = 0.e0;
    real _t0EF8 = 0.1e1;
    real _t0EF9 = 0.e0;
    real _t0EFA = 0.e0;
    vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
    real _t0EFC = 0.e0;
    real _t0EFD = 0.e0;
    real _t0EFE = 0.1e1;
    real _t0EFF = 0.1e1;
    vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
    real _t0F01 = 0.e0;
    real _t0F02 = 0.e0;
    real _t0F03 = 0.e0;
    real _t0F04 = 0.1e1;
    vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
    tensor[4,4] _t0F06 = [_t0EF6, _t0EFB, _t0F00, _t0F05];
    real _t0F07 = 0.e0;
    real _t0F08 = 0.1e1;
    real _t0F09 = 0.e0;
    real _t0F0A = 0.e0;
    vec4 _t0F0B = [_t0F07, _t0F08, _t0F09, _t0F0A];
    real _t0F0C = 0.e0;
    real _t0F0D = 0.e0;
    real _t0F0E = 0.1e1;
    real _t0F0F = 0.e0;
    vec4 _t0F10 = [_t0F0C, _t0F0D, _t0F0E, _t0F0F];
    real _t0F11 = 0.1e1;
    real _t0F12 = -0.1e1;
    real _t0F13 = 0.e0;
    real _t0F14 = -0.5e0;
    vec4 _t0F15 = [_t0F11, _t0F12, _t0F13, _t0F14];
    real _t0F16 = 0.e0;
    real _t0F17 = 0.e0;
    real _t0F18 = 0.e0;
    real _t0F19 = 0.1e1;
    vec4 _t0F1A = [_t0F16, _t0F17, _t0F18, _t0F19];
    tensor[4,4] _t0F1B = [_t0F0B, _t0F10, _t0F15, _t0F1A];
    real _t0F1C = 0.e0;
    real _t0F1D = 0.e0;
    real _t0F1E = -0.1e1;
    real _t0F1F = 0.e0;
    vec4 _t0F20 = [_t0F1C, _t0F1D, _t0F1E, _t0F1F];
    real _t0F21 = 0.e0;
    real _t0F22 = 0.1e1;
    real _t0F23 = 0.e0;
    real _t0F24 = 0.e0;
    vec4 _t0F25 = [_t0F21, _t0F22, _t0F23, _t0F24];
    real _t0F26 = 0.1e1;
    real _t0F27 = -0.1e1;
    real _t0F28 = 0.e0;
    real _t0F29 = -0.5e0;
    vec4 _t0F2A = [_t0F26, _t0F27, _t0F28, _t0F29];
    real _t0F2B = 0.e0;
    real _t0F2C = 0.e0;
    real _t0F2D = 0.e0;
    real _t0F2E = 0.1e1;
    vec4 _t0F2F = [_t0F2B, _t0F2C, _t0F2D, _t0F2E];
    tensor[4,4] _t0F30 = [_t0F20, _t0F25, _t0F2A, _t0F2F];
    real _t0F31 = 0.e0;
    real _t0F32 = -0.1e1;
    real _t0F33 = 0.e0;
    real _t0F34 = 0.e0;
    vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
    real _t0F36 = 0.e0;
    real _t0F37 = 0.e0;
    real _t0F38 = -0.1e1;
    real _t0F39 = 0.e0;
    vec4 _t0F3A = [_t0F36, _t0F37, _t0F38, _t0F39];
    real _t0F3B = 0.1e1;
    real _t0F3C = -0.1e1;
    real _t0F3D = 0.e0;
    real _t0F3E = -0.5e0;
    vec4 _t0F3F = [_t0F3B, _t0F3C, _t0F3D, _t0F3E];
    real _t0F40 = 0.e0;
    real _t0F41 = 0.e0;
    real _t0F42 = 0.e0;
    real _t0F43 = 0.1e1;
    vec4 _t0F44 = [_t0F40, _t0F41, _t0F42, _t0F43];
    tensor[4,4] _t0F45 = [_t0F35, _t0F3A, _t0F3F, _t0F44];
    real _t0F46 = 0.e0;
    real _t0F47 = 0.e0;
    real _t0F48 = 0.1e1;
    real _t0F49 = 0.e0;
    vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
    real _t0F4B = 0.e0;
    real _t0F4C = -0.1e1;
    real _t0F4D = 0.e0;
    real _t0F4E = 0.e0;
    vec4 _t0F4F = [_t0F4B, _t0F4C, _t0F4D, _t0F4E];
    real _t0F50 = 0.1e1;
    real _t0F51 = -0.1e1;
    real _t0F52 = 0.e0;
    real _t0F53 = -0.5e0;
    vec4 _t0F54 = [_t0F50, _t0F51, _t0F52, _t0F53];
    real _t0F55 = 0.e0;
    real _t0F56 = 0.e0;
    real _t0F57 = 0.e0;
    real _t0F58 = 0.1e1;
    vec4 _t0F59 = [_t0F55, _t0F56, _t0F57, _t0F58];
    tensor[4,4] _t0F5A = [_t0F4A, _t0F4F, _t0F54, _t0F59];
    tensor[4,4][6] _t0F5B = {_t0EF1, _t0F06, _t0F1B, _t0F30, _t0F45, _t0F5A};
    real _t0F5C = 0.1e1;
    real _t0F5D = 0.e0;
    real _t0F5E = 0.e0;
    real _t0F5F = 0.e0;
    vec4 _t0F60 = [_t0F5C, _t0F5D, _t0F5E, _t0F5F];
    real _t0F61 = 0.e0;
    real _t0F62 = 0.1e1;
    real _t0F63 = 0.e0;
    real _t0F64 = 0.e0;
    vec4 _t0F65 = [_t0F61, _t0F62, _t0F63, _t0F64];
    real _t0F66 = 0.e0;
    real _t0F67 = 0.e0;
    real _t0F68 = 0.1e1;
    real _t0F69 = -0.1e1;
    vec4 _t0F6A = [_t0F66, _t0F67, _t0F68, _t0F69];
    real _t0F6B = 0.e0;
    real _t0F6C = 0.e0;
    real _t0F6D = 0.e0;
    real _t0F6E = 0.1e1;
    vec4 _t0F6F = [_t0F6B, _t0F6C, _t0F6D, _t0F6E];
    tensor[4,4] _t0F70 = [_t0F60, _t0F65, _t0F6A, _t0F6F];
    real _t0F71 = 0.1e1;
    real _t0F72 = 0.e0;
    real _t0F73 = 0.e0;
    real _t0F74 = 0.e0;
    vec4 _t0F75 = [_t0F71, _t0F72, _t0F73, _t0F74];
    real _t0F76 = 0.e0;
    real _t0F77 = 0.1e1;
    real _t0F78 = 0.e0;
    real _t0F79 = 0.e0;
    vec4 _t0F7A = [_t0F76, _t0F77, _t0F78, _t0F79];
    real _t0F7B = 0.e0;
    real _t0F7C = 0.e0;
    real _t0F7D = 0.1e1;
    real _t0F7E = 0.e0;
    vec4 _t0F7F = [_t0F7B, _t0F7C, _t0F7D, _t0F7E];
    real _t0F80 = 0.e0;
    real _t0F81 = 0.e0;
    real _t0F82 = 0.e0;
    real _t0F83 = 0.1e1;
    vec4 _t0F84 = [_t0F80, _t0F81, _t0F82, _t0F83];
    tensor[4,4] _t0F85 = [_t0F75, _t0F7A, _t0F7F, _t0F84];
    real _t0F86 = 0.e0;
    real _t0F87 = 0.1e1;
    real _t0F88 = 0.e0;
    real _t0F89 = 0.e0;
    vec4 _t0F8A = [_t0F86, _t0F87, _t0F88, _t0F89];
    real _t0F8B = 0.e0;
    real _t0F8C = 0.e0;
    real _t0F8D = 0.1e1;
    real _t0F8E = -0.1e1;
    vec4 _t0F8F = [_t0F8B, _t0F8C, _t0F8D, _t0F8E];
    real _t0F90 = 0.1e1;
    real _t0F91 = -0.1e1;
    real _t0F92 = 0.e0;
    real _t0F93 = -0.5e0;
    vec4 _t0F94 = [_t0F90, _t0F91, _t0F92, _t0F93];
    real _t0F95 = 0.e0;
    real _t0F96 = 0.e0;
    real _t0F97 = 0.e0;
    real _t0F98 = 0.1e1;
    vec4 _t0F99 = [_t0F95, _t0F96, _t0F97, _t0F98];
    tensor[4,4] _t0F9A = [_t0F8A, _t0F8F, _t0F94, _t0F99];
    real _t0F9B = 0.e0;
    real _t0F9C = 0.e0;
    real _t0F9D = -0.1e1;
    real _t0F9E = 0.1e1;
    vec4 _t0F9F = [_t0F9B, _t0F9C, _t0F9D, _t0F9E];
    real _t0FA0 = 0.e0;
    real _t0FA1 = 0.1e1;
    real _t0FA2 = 0.e0;
    real _t0FA3 = 0.e0;
    vec4 _t0FA4 = [_t0FA0, _t0FA1, _t0FA2, _t0FA3];
    real _t0FA5 = 0.1e1;
    real _t0FA6 = -0.1e1;
    real _t0FA7 = 0.e0;
    real _t0FA8 = -0.5e0;
    vec4 _t0FA9 = [_t0FA5, _t0FA6, _t0FA7, _t0FA8];
    real _t0FAA = 0.e0;
    real _t0FAB = 0.e0;
    real _t0FAC = 0.e0;
    real _t0FAD = 0.1e1;
    vec4 _t0FAE = [_t0FAA, _t0FAB, _t0FAC, _t0FAD];
    tensor[4,4] _t0FAF = [_t0F9F, _t0FA4, _t0FA9, _t0FAE];
    real _t0FB0 = 0.e0;
    real _t0FB1 = -0.1e1;
    real _t0FB2 = 0.e0;
    real _t0FB3 = 0.e0;
    vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
    real _t0FB5 = 0.e0;
    real _t0FB6 = 0.e0;
    real _t0FB7 = -0.1e1;
    real _t0FB8 = 0.1e1;
    vec4 _t0FB9 = [_t0FB5, _t0FB6, _t0FB7, _t0FB8];
    real _t0FBA = 0.1e1;
    real _t0FBB = -0.1e1;
    real _t0FBC = 0.e0;
    real _t0FBD = -0.5e0;
    vec4 _t0FBE = [_t0FBA, _t0FBB, _t0FBC, _t0FBD];
    real _t0FBF = 0.e0;
    real _t0FC0 = 0.e0;
    real _t0FC1 = 0.e0;
    real _t0FC2 = 0.1e1;
    vec4 _t0FC3 = [_t0FBF, _t0FC0, _t0FC1, _t0FC2];
    tensor[4,4] _t0FC4 = [_t0FB4, _t0FB9, _t0FBE, _t0FC3];
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    real _t0FC7 = 0.1e1;
    real _t0FC8 = -0.1e1;
    vec4 _t0FC9 = [_t0FC5, _t0FC6, _t0FC7, _t0FC8];
    real _t0FCA = 0.e0;
    real _t0FCB = -0.1e1;
    real _t0FCC = 0.e0;
    real _t0FCD = 0.e0;
    vec4 _t0FCE = [_t0FCA, _t0FCB, _t0FCC, _t0FCD];
    real _t0FCF = 0.1e1;
    real _t0FD0 = -0.1e1;
    real _t0FD1 = 0.e0;
    real _t0FD2 = -0.5e0;
    vec4 _t0FD3 = [_t0FCF, _t0FD0, _t0FD1, _t0FD2];
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.e0;
    real _t0FD6 = 0.e0;
    real _t0FD7 = 0.1e1;
    vec4 _t0FD8 = [_t0FD4, _t0FD5, _t0FD6, _t0FD7];
    tensor[4,4] _t0FD9 = [_t0FC9, _t0FCE, _t0FD3, _t0FD8];
    tensor[4,4][6] _t0FDA = {_t0F70, _t0F85, _t0F9A, _t0FAF, _t0FC4, _t0FD9};
    real _t0FDB = 0.1e1;
    real _t0FDC = 0.e0;
    real _t0FDD = 0.1e1;
    real _t0FDE = 0.5e0;
    vec4 _t0FDF = [_t0FDB, _t0FDC, _t0FDD, _t0FDE];
    real _t0FE0 = 0.1e1;
    real _t0FE1 = 0.e0;
    real _t0FE2 = 0.e0;
    real _t0FE3 = 0.e0;
    vec4 _t0FE4 = [_t0FE0, _t0FE1, _t0FE2, _t0FE3];
    real _t0FE5 = 0.e0;
    real _t0FE6 = 0.1e1;
    real _t0FE7 = 0.e0;
    real _t0FE8 = 0.e0;
    vec4 _t0FE9 = [_t0FE5, _t0FE6, _t0FE7, _t0FE8];
    real _t0FEA = 0.e0;
    real _t0FEB = 0.e0;
    real _t0FEC = 0.e0;
    real _t0FED = 0.1e1;
    vec4 _t0FEE = [_t0FEA, _t0FEB, _t0FEC, _t0FED];
    tensor[4,4] _t0FEF = [_t0FDF, _t0FE4, _t0FE9, _t0FEE];
    real _t0FF0 = 0.1e1;
    real _t0FF1 = 0.e0;
    real _t0FF2 = 0.1e1;
    real _t0FF3 = 0.5e0;
    vec4 _t0FF4 = [_t0FF0, _t0FF1, _t0FF2, _t0FF3];
    real _t0FF5 = 0.1e1;
    real _t0FF6 = 0.e0;
    real _t0FF7 = 0.e0;
    real _t0FF8 = 0.e0;
    vec4 _t0FF9 = [_t0FF5, _t0FF6, _t0FF7, _t0FF8];
    real _t0FFA = 0.e0;
    real _t0FFB = 0.1e1;
    real _t0FFC = 0.e0;
    real _t0FFD = 0.1e1;
    vec4 _t0FFE = [_t0FFA, _t0FFB, _t0FFC, _t0FFD];
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = 0.e0;
    real _t1002 = 0.1e1;
    vec4 _t1003 = [_t0FFF, _t1000, _t1001, _t1002];
    tensor[4,4] _t1004 = [_t0FF4, _t0FF9, _t0FFE, _t1003];
    real _t1005 = 0.1e1;
    real _t1006 = 0.e0;
    real _t1007 = 0.e0;
    real _t1008 = 0.e0;
    vec4 _t1009 = [_t1005, _t1006, _t1007, _t1008];
    real _t100A = 0.e0;
    real _t100B = 0.1e1;
    real _t100C = 0.e0;
    real _t100D = 0.e0;
    vec4 _t100E = [_t100A, _t100B, _t100C, _t100D];
    real _t100F = 0.e0;
    real _t1010 = 0.e0;
    real _t1011 = 0.1e1;
    real _t1012 = 0.e0;
    vec4 _t1013 = [_t100F, _t1010, _t1011, _t1012];
    real _t1014 = 0.e0;
    real _t1015 = 0.e0;
    real _t1016 = 0.e0;
    real _t1017 = 0.1e1;
    vec4 _t1018 = [_t1014, _t1015, _t1016, _t1017];
    tensor[4,4] _t1019 = [_t1009, _t100E, _t1013, _t1018];
    real _t101A = 0.e0;
    real _t101B = -0.1e1;
    real _t101C = 0.e0;
    real _t101D = 0.e0;
    vec4 _t101E = [_t101A, _t101B, _t101C, _t101D];
    real _t101F = 0.1e1;
    real _t1020 = 0.e0;
    real _t1021 = 0.e0;
    real _t1022 = 0.e0;
    vec4 _t1023 = [_t101F, _t1020, _t1021, _t1022];
    real _t1024 = 0.e0;
    real _t1025 = 0.e0;
    real _t1026 = 0.1e1;
    real _t1027 = 0.e0;
    vec4 _t1028 = [_t1024, _t1025, _t1026, _t1027];
    real _t1029 = 0.e0;
    real _t102A = 0.e0;
    real _t102B = 0.e0;
    real _t102C = 0.1e1;
    vec4 _t102D = [_t1029, _t102A, _t102B, _t102C];
    tensor[4,4] _t102E = [_t101E, _t1023, _t1028, _t102D];
    real _t102F = -0.1e1;
    real _t1030 = 0.e0;
    real _t1031 = 0.e0;
    real _t1032 = 0.e0;
    vec4 _t1033 = [_t102F, _t1030, _t1031, _t1032];
    real _t1034 = 0.e0;
    real _t1035 = -0.1e1;
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    vec4 _t1038 = [_t1034, _t1035, _t1036, _t1037];
    real _t1039 = 0.e0;
    real _t103A = 0.e0;
    real _t103B = 0.1e1;
    real _t103C = 0.e0;
    vec4 _t103D = [_t1039, _t103A, _t103B, _t103C];
    real _t103E = 0.e0;
    real _t103F = 0.e0;
    real _t1040 = 0.e0;
    real _t1041 = 0.1e1;
    vec4 _t1042 = [_t103E, _t103F, _t1040, _t1041];
    tensor[4,4] _t1043 = [_t1033, _t1038, _t103D, _t1042];
    real _t1044 = 0.e0;
    real _t1045 = 0.1e1;
    real _t1046 = 0.e0;
    real _t1047 = 0.e0;
    vec4 _t1048 = [_t1044, _t1045, _t1046, _t1047];
    real _t1049 = -0.1e1;
    real _t104A = 0.e0;
    real _t104B = 0.e0;
    real _t104C = 0.e0;
    vec4 _t104D = [_t1049, _t104A, _t104B, _t104C];
    real _t104E = 0.e0;
    real _t104F = 0.e0;
    real _t1050 = 0.1e1;
    real _t1051 = 0.e0;
    vec4 _t1052 = [_t104E, _t104F, _t1050, _t1051];
    real _t1053 = 0.e0;
    real _t1054 = 0.e0;
    real _t1055 = 0.e0;
    real _t1056 = 0.1e1;
    vec4 _t1057 = [_t1053, _t1054, _t1055, _t1056];
    tensor[4,4] _t1058 = [_t1048, _t104D, _t1052, _t1057];
    tensor[4,4][6] _t1059 = {_t0FEF, _t1004, _t1019, _t102E, _t1043, _t1058};
    real _t105A = 0.e0;
    real _t105B = 0.1e1;
    real _t105C = 0.1e1;
    real _t105D = 0.5e0;
    vec4 _t105E = [_t105A, _t105B, _t105C, _t105D];
    real _t105F = 0.e0;
    real _t1060 = 0.1e1;
    real _t1061 = 0.e0;
    real _t1062 = 0.e0;
    vec4 _t1063 = [_t105F, _t1060, _t1061, _t1062];
    real _t1064 = -0.1e1;
    real _t1065 = 0.e0;
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    vec4 _t1068 = [_t1064, _t1065, _t1066, _t1067];
    real _t1069 = 0.e0;
    real _t106A = 0.e0;
    real _t106B = 0.e0;
    real _t106C = 0.1e1;
    vec4 _t106D = [_t1069, _t106A, _t106B, _t106C];
    tensor[4,4] _t106E = [_t105E, _t1063, _t1068, _t106D];
    real _t106F = 0.e0;
    real _t1070 = 0.1e1;
    real _t1071 = 0.1e1;
    real _t1072 = 0.5e0;
    vec4 _t1073 = [_t106F, _t1070, _t1071, _t1072];
    real _t1074 = 0.e0;
    real _t1075 = 0.1e1;
    real _t1076 = 0.e0;
    real _t1077 = 0.e0;
    vec4 _t1078 = [_t1074, _t1075, _t1076, _t1077];
    real _t1079 = -0.1e1;
    real _t107A = 0.e0;
    real _t107B = 0.e0;
    real _t107C = 0.1e1;
    vec4 _t107D = [_t1079, _t107A, _t107B, _t107C];
    real _t107E = 0.e0;
    real _t107F = 0.e0;
    real _t1080 = 0.e0;
    real _t1081 = 0.1e1;
    vec4 _t1082 = [_t107E, _t107F, _t1080, _t1081];
    tensor[4,4] _t1083 = [_t1073, _t1078, _t107D, _t1082];
    real _t1084 = 0.e0;
    real _t1085 = 0.1e1;
    real _t1086 = 0.e0;
    real _t1087 = 0.e0;
    vec4 _t1088 = [_t1084, _t1085, _t1086, _t1087];
    real _t1089 = -0.1e1;
    real _t108A = 0.e0;
    real _t108B = 0.e0;
    real _t108C = 0.e0;
    vec4 _t108D = [_t1089, _t108A, _t108B, _t108C];
    real _t108E = 0.e0;
    real _t108F = 0.e0;
    real _t1090 = 0.1e1;
    real _t1091 = 0.e0;
    vec4 _t1092 = [_t108E, _t108F, _t1090, _t1091];
    real _t1093 = 0.e0;
    real _t1094 = 0.e0;
    real _t1095 = 0.e0;
    real _t1096 = 0.1e1;
    vec4 _t1097 = [_t1093, _t1094, _t1095, _t1096];
    tensor[4,4] _t1098 = [_t1088, _t108D, _t1092, _t1097];
    real _t1099 = 0.1e1;
    real _t109A = 0.e0;
    real _t109B = 0.e0;
    real _t109C = 0.e0;
    vec4 _t109D = [_t1099, _t109A, _t109B, _t109C];
    real _t109E = 0.e0;
    real _t109F = 0.1e1;
    real _t10A0 = 0.e0;
    real _t10A1 = 0.e0;
    vec4 _t10A2 = [_t109E, _t109F, _t10A0, _t10A1];
    real _t10A3 = 0.e0;
    real _t10A4 = 0.e0;
    real _t10A5 = 0.1e1;
    real _t10A6 = 0.e0;
    vec4 _t10A7 = [_t10A3, _t10A4, _t10A5, _t10A6];
    real _t10A8 = 0.e0;
    real _t10A9 = 0.e0;
    real _t10AA = 0.e0;
    real _t10AB = 0.1e1;
    vec4 _t10AC = [_t10A8, _t10A9, _t10AA, _t10AB];
    tensor[4,4] _t10AD = [_t109D, _t10A2, _t10A7, _t10AC];
    real _t10AE = 0.e0;
    real _t10AF = -0.1e1;
    real _t10B0 = 0.e0;
    real _t10B1 = 0.e0;
    vec4 _t10B2 = [_t10AE, _t10AF, _t10B0, _t10B1];
    real _t10B3 = 0.1e1;
    real _t10B4 = 0.e0;
    real _t10B5 = 0.e0;
    real _t10B6 = 0.e0;
    vec4 _t10B7 = [_t10B3, _t10B4, _t10B5, _t10B6];
    real _t10B8 = 0.e0;
    real _t10B9 = 0.e0;
    real _t10BA = 0.1e1;
    real _t10BB = 0.e0;
    vec4 _t10BC = [_t10B8, _t10B9, _t10BA, _t10BB];
    real _t10BD = 0.e0;
    real _t10BE = 0.e0;
    real _t10BF = 0.e0;
    real _t10C0 = 0.1e1;
    vec4 _t10C1 = [_t10BD, _t10BE, _t10BF, _t10C0];
    tensor[4,4] _t10C2 = [_t10B2, _t10B7, _t10BC, _t10C1];
    real _t10C3 = -0.1e1;
    real _t10C4 = 0.e0;
    real _t10C5 = 0.e0;
    real _t10C6 = 0.e0;
    vec4 _t10C7 = [_t10C3, _t10C4, _t10C5, _t10C6];
    real _t10C8 = 0.e0;
    real _t10C9 = -0.1e1;
    real _t10CA = 0.e0;
    real _t10CB = 0.e0;
    vec4 _t10CC = [_t10C8, _t10C9, _t10CA, _t10CB];
    real _t10CD = 0.e0;
    real _t10CE = 0.e0;
    real _t10CF = 0.1e1;
    real _t10D0 = 0.e0;
    vec4 _t10D1 = [_t10CD, _t10CE, _t10CF, _t10D0];
    real _t10D2 = 0.e0;
    real _t10D3 = 0.e0;
    real _t10D4 = 0.e0;
    real _t10D5 = 0.1e1;
    vec4 _t10D6 = [_t10D2, _t10D3, _t10D4, _t10D5];
    tensor[4,4] _t10D7 = [_t10C7, _t10CC, _t10D1, _t10D6];
    tensor[4,4][6] _t10D8 = {_t106E, _t1083, _t1098, _t10AD, _t10C2, _t10D7};
    real _t10D9 = -0.1e1;
    real _t10DA = 0.e0;
    real _t10DB = 0.1e1;
    real _t10DC = 0.5e0;
    vec4 _t10DD = [_t10D9, _t10DA, _t10DB, _t10DC];
    real _t10DE = -0.1e1;
    real _t10DF = 0.e0;
    real _t10E0 = 0.e0;
    real _t10E1 = 0.e0;
    vec4 _t10E2 = [_t10DE, _t10DF, _t10E0, _t10E1];
    real _t10E3 = 0.e0;
    real _t10E4 = -0.1e1;
    real _t10E5 = 0.e0;
    real _t10E6 = 0.e0;
    vec4 _t10E7 = [_t10E3, _t10E4, _t10E5, _t10E6];
    real _t10E8 = 0.e0;
    real _t10E9 = 0.e0;
    real _t10EA = 0.e0;
    real _t10EB = 0.1e1;
    vec4 _t10EC = [_t10E8, _t10E9, _t10EA, _t10EB];
    tensor[4,4] _t10ED = [_t10DD, _t10E2, _t10E7, _t10EC];
    real _t10EE = -0.1e1;
    real _t10EF = 0.e0;
    real _t10F0 = 0.1e1;
    real _t10F1 = 0.5e0;
    vec4 _t10F2 = [_t10EE, _t10EF, _t10F0, _t10F1];
    real _t10F3 = -0.1e1;
    real _t10F4 = 0.e0;
    real _t10F5 = 0.e0;
    real _t10F6 = 0.e0;
    vec4 _t10F7 = [_t10F3, _t10F4, _t10F5, _t10F6];
    real _t10F8 = 0.e0;
    real _t10F9 = -0.1e1;
    real _t10FA = 0.e0;
    real _t10FB = 0.1e1;
    vec4 _t10FC = [_t10F8, _t10F9, _t10FA, _t10FB];
    real _t10FD = 0.e0;
    real _t10FE = 0.e0;
    real _t10FF = 0.e0;
    real _t1100 = 0.1e1;
    vec4 _t1101 = [_t10FD, _t10FE, _t10FF, _t1100];
    tensor[4,4] _t1102 = [_t10F2, _t10F7, _t10FC, _t1101];
    real _t1103 = -0.1e1;
    real _t1104 = 0.e0;
    real _t1105 = 0.e0;
    real _t1106 = 0.e0;
    vec4 _t1107 = [_t1103, _t1104, _t1105, _t1106];
    real _t1108 = 0.e0;
    real _t1109 = -0.1e1;
    real _t110A = 0.e0;
    real _t110B = 0.e0;
    vec4 _t110C = [_t1108, _t1109, _t110A, _t110B];
    real _t110D = 0.e0;
    real _t110E = 0.e0;
    real _t110F = 0.1e1;
    real _t1110 = 0.e0;
    vec4 _t1111 = [_t110D, _t110E, _t110F, _t1110];
    real _t1112 = 0.e0;
    real _t1113 = 0.e0;
    real _t1114 = 0.e0;
    real _t1115 = 0.1e1;
    vec4 _t1116 = [_t1112, _t1113, _t1114, _t1115];
    tensor[4,4] _t1117 = [_t1107, _t110C, _t1111, _t1116];
    real _t1118 = 0.e0;
    real _t1119 = 0.1e1;
    real _t111A = 0.e0;
    real _t111B = 0.e0;
    vec4 _t111C = [_t1118, _t1119, _t111A, _t111B];
    real _t111D = -0.1e1;
    real _t111E = 0.e0;
    real _t111F = 0.e0;
    real _t1120 = 0.e0;
    vec4 _t1121 = [_t111D, _t111E, _t111F, _t1120];
    real _t1122 = 0.e0;
    real _t1123 = 0.e0;
    real _t1124 = 0.1e1;
    real _t1125 = 0.e0;
    vec4 _t1126 = [_t1122, _t1123, _t1124, _t1125];
    real _t1127 = 0.e0;
    real _t1128 = 0.e0;
    real _t1129 = 0.e0;
    real _t112A = 0.1e1;
    vec4 _t112B = [_t1127, _t1128, _t1129, _t112A];
    tensor[4,4] _t112C = [_t111C, _t1121, _t1126, _t112B];
    real _t112D = 0.1e1;
    real _t112E = 0.e0;
    real _t112F = 0.e0;
    real _t1130 = 0.e0;
    vec4 _t1131 = [_t112D, _t112E, _t112F, _t1130];
    real _t1132 = 0.e0;
    real _t1133 = 0.1e1;
    real _t1134 = 0.e0;
    real _t1135 = 0.e0;
    vec4 _t1136 = [_t1132, _t1133, _t1134, _t1135];
    real _t1137 = 0.e0;
    real _t1138 = 0.e0;
    real _t1139 = 0.1e1;
    real _t113A = 0.e0;
    vec4 _t113B = [_t1137, _t1138, _t1139, _t113A];
    real _t113C = 0.e0;
    real _t113D = 0.e0;
    real _t113E = 0.e0;
    real _t113F = 0.1e1;
    vec4 _t1140 = [_t113C, _t113D, _t113E, _t113F];
    tensor[4,4] _t1141 = [_t1131, _t1136, _t113B, _t1140];
    real _t1142 = 0.e0;
    real _t1143 = -0.1e1;
    real _t1144 = 0.e0;
    real _t1145 = 0.e0;
    vec4 _t1146 = [_t1142, _t1143, _t1144, _t1145];
    real _t1147 = 0.1e1;
    real _t1148 = 0.e0;
    real _t1149 = 0.e0;
    real _t114A = 0.e0;
    vec4 _t114B = [_t1147, _t1148, _t1149, _t114A];
    real _t114C = 0.e0;
    real _t114D = 0.e0;
    real _t114E = 0.1e1;
    real _t114F = 0.e0;
    vec4 _t1150 = [_t114C, _t114D, _t114E, _t114F];
    real _t1151 = 0.e0;
    real _t1152 = 0.e0;
    real _t1153 = 0.e0;
    real _t1154 = 0.1e1;
    vec4 _t1155 = [_t1151, _t1152, _t1153, _t1154];
    tensor[4,4] _t1156 = [_t1146, _t114B, _t1150, _t1155];
    tensor[4,4][6] _t1157 = {_t10ED, _t1102, _t1117, _t112C, _t1141, _t1156};
    real _t1158 = 0.e0;
    real _t1159 = -0.1e1;
    real _t115A = 0.1e1;
    real _t115B = 0.5e0;
    vec4 _t115C = [_t1158, _t1159, _t115A, _t115B];
    real _t115D = 0.e0;
    real _t115E = -0.1e1;
    real _t115F = 0.e0;
    real _t1160 = 0.e0;
    vec4 _t1161 = [_t115D, _t115E, _t115F, _t1160];
    real _t1162 = 0.1e1;
    real _t1163 = 0.e0;
    real _t1164 = 0.e0;
    real _t1165 = 0.e0;
    vec4 _t1166 = [_t1162, _t1163, _t1164, _t1165];
    real _t1167 = 0.e0;
    real _t1168 = 0.e0;
    real _t1169 = 0.e0;
    real _t116A = 0.1e1;
    vec4 _t116B = [_t1167, _t1168, _t1169, _t116A];
    tensor[4,4] _t116C = [_t115C, _t1161, _t1166, _t116B];
    real _t116D = 0.e0;
    real _t116E = -0.1e1;
    real _t116F = 0.1e1;
    real _t1170 = 0.5e0;
    vec4 _t1171 = [_t116D, _t116E, _t116F, _t1170];
    real _t1172 = 0.e0;
    real _t1173 = -0.1e1;
    real _t1174 = 0.e0;
    real _t1175 = 0.e0;
    vec4 _t1176 = [_t1172, _t1173, _t1174, _t1175];
    real _t1177 = 0.1e1;
    real _t1178 = 0.e0;
    real _t1179 = 0.e0;
    real _t117A = 0.1e1;
    vec4 _t117B = [_t1177, _t1178, _t1179, _t117A];
    real _t117C = 0.e0;
    real _t117D = 0.e0;
    real _t117E = 0.e0;
    real _t117F = 0.1e1;
    vec4 _t1180 = [_t117C, _t117D, _t117E, _t117F];
    tensor[4,4] _t1181 = [_t1171, _t1176, _t117B, _t1180];
    real _t1182 = 0.e0;
    real _t1183 = -0.1e1;
    real _t1184 = 0.e0;
    real _t1185 = 0.e0;
    vec4 _t1186 = [_t1182, _t1183, _t1184, _t1185];
    real _t1187 = 0.1e1;
    real _t1188 = 0.e0;
    real _t1189 = 0.e0;
    real _t118A = 0.e0;
    vec4 _t118B = [_t1187, _t1188, _t1189, _t118A];
    real _t118C = 0.e0;
    real _t118D = 0.e0;
    real _t118E = 0.1e1;
    real _t118F = 0.e0;
    vec4 _t1190 = [_t118C, _t118D, _t118E, _t118F];
    real _t1191 = 0.e0;
    real _t1192 = 0.e0;
    real _t1193 = 0.e0;
    real _t1194 = 0.1e1;
    vec4 _t1195 = [_t1191, _t1192, _t1193, _t1194];
    tensor[4,4] _t1196 = [_t1186, _t118B, _t1190, _t1195];
    real _t1197 = -0.1e1;
    real _t1198 = 0.e0;
    real _t1199 = 0.e0;
    real _t119A = 0.e0;
    vec4 _t119B = [_t1197, _t1198, _t1199, _t119A];
    real _t119C = 0.e0;
    real _t119D = -0.1e1;
    real _t119E = 0.e0;
    real _t119F = 0.e0;
    vec4 _t11A0 = [_t119C, _t119D, _t119E, _t119F];
    real _t11A1 = 0.e0;
    real _t11A2 = 0.e0;
    real _t11A3 = 0.1e1;
    real _t11A4 = 0.e0;
    vec4 _t11A5 = [_t11A1, _t11A2, _t11A3, _t11A4];
    real _t11A6 = 0.e0;
    real _t11A7 = 0.e0;
    real _t11A8 = 0.e0;
    real _t11A9 = 0.1e1;
    vec4 _t11AA = [_t11A6, _t11A7, _t11A8, _t11A9];
    tensor[4,4] _t11AB = [_t119B, _t11A0, _t11A5, _t11AA];
    real _t11AC = 0.e0;
    real _t11AD = 0.1e1;
    real _t11AE = 0.e0;
    real _t11AF = 0.e0;
    vec4 _t11B0 = [_t11AC, _t11AD, _t11AE, _t11AF];
    real _t11B1 = -0.1e1;
    real _t11B2 = 0.e0;
    real _t11B3 = 0.e0;
    real _t11B4 = 0.e0;
    vec4 _t11B5 = [_t11B1, _t11B2, _t11B3, _t11B4];
    real _t11B6 = 0.e0;
    real _t11B7 = 0.e0;
    real _t11B8 = 0.1e1;
    real _t11B9 = 0.e0;
    vec4 _t11BA = [_t11B6, _t11B7, _t11B8, _t11B9];
    real _t11BB = 0.e0;
    real _t11BC = 0.e0;
    real _t11BD = 0.e0;
    real _t11BE = 0.1e1;
    vec4 _t11BF = [_t11BB, _t11BC, _t11BD, _t11BE];
    tensor[4,4] _t11C0 = [_t11B0, _t11B5, _t11BA, _t11BF];
    real _t11C1 = 0.1e1;
    real _t11C2 = 0.e0;
    real _t11C3 = 0.e0;
    real _t11C4 = 0.e0;
    vec4 _t11C5 = [_t11C1, _t11C2, _t11C3, _t11C4];
    real _t11C6 = 0.e0;
    real _t11C7 = 0.1e1;
    real _t11C8 = 0.e0;
    real _t11C9 = 0.e0;
    vec4 _t11CA = [_t11C6, _t11C7, _t11C8, _t11C9];
    real _t11CB = 0.e0;
    real _t11CC = 0.e0;
    real _t11CD = 0.1e1;
    real _t11CE = 0.e0;
    vec4 _t11CF = [_t11CB, _t11CC, _t11CD, _t11CE];
    real _t11D0 = 0.e0;
    real _t11D1 = 0.e0;
    real _t11D2 = 0.e0;
    real _t11D3 = 0.1e1;
    vec4 _t11D4 = [_t11D0, _t11D1, _t11D2, _t11D3];
    tensor[4,4] _t11D5 = [_t11C5, _t11CA, _t11CF, _t11D4];
    tensor[4,4][6] _t11D6 = {_t116C, _t1181, _t1196, _t11AB, _t11C0, _t11D5};
    tensor[4,4][6][6] _t11D7 = {_t0F5B, _t0FDA, _t1059, _t10D8, _t1157, _t11D6};
    real _t11D8 = time0597[1];
    int _t11D9 = prim $r2i01B7 (_t11D8);
    tensor[4,4][6] _t11DA = prim $sub01C0<tensor[4,4][6]; %6> (_t11D7, _t11D9);
    real _t11DB = time0597[1];
    int _t11DC = prim $r2i01B7 (_t11DB);
    int[2] _t11DD = func nextCell4059B (_t11DC, cellId0594, mesh0593);
    int _t11DE = 1;
    int _t11DF = prim $sub01C0<int; %2> (_t11DD, _t11DE);
    tensor[4,4] _t11E0 = prim $sub01C0<tensor[4,4]; %6> (_t11DA, _t11DF);
    real _t11E1 = time0597[0];
    vec3 _t11E2 = prim *0036<$[3]> (_t11E1, dPos0596);
    vec3 _t11E3 = prim +0017<$[3]> (_t11E2, refPos0595);
    real _t11E4 = _t11E3[0];
    real _t11E5 = time0597[0];
    vec3 _t11E6 = prim *0036<$[3]> (_t11E5, dPos0596);
    vec3 _t11E7 = prim +0017<$[3]> (_t11E6, refPos0595);
    real _t11E8 = _t11E7[1];
    real _t11E9 = time0597[0];
    vec3 _t11EA = prim *0036<$[3]> (_t11E9, dPos0596);
    vec3 _t11EB = prim +0017<$[3]> (_t11EA, refPos0595);
    real _t11EC = _t11EB[2];
    real _t11ED = 0.1e1;
    vec4 _t11EE = [_t11E4, _t11E8, _t11EC, _t11ED];
    vec4 _t11EF = prim •00CE<$[4,4]; $[4]; $[4]> (_t11E0, _t11EE);
    real _t11F0 = _t11EF[2];
    vec3 _t11F1 = [_t0BC8, _t0EDC, _t11F0];
    real _t11F2 = time0597[1];
    int _t11F3 = prim $r2i01B7 (_t11F2);
    int[2] _t11F4 = func nextCell4059B (_t11F3, cellId0594, mesh0593);
    int _t11F5 = 1;
    int _t11F6 = prim $sub01C0<int; %2> (_t11F4, _t11F5);
    Femdata: MeshPos _t11F7 = extractFemItemN((mesh0593, _t08B4, _t11F1, _t11F6),RefBuild(Mesh),);
    return _t11F7;
  } else {
    real _t11F8 = time0597[0];
    vec3 _t11F9 = prim *0036<$[3]> (_t11F8, dPos0596);
    vec3 _t11FA = prim +0017<$[3]> (_t11F9, refPos0595);
    Femdata: MeshPos _t11FB = extractFemItemN((mesh0593, _t11FA),InvalidBuildBoundary(MeshPos),);
    return _t11FB;
  }
}
function int[2]#8 nextCell4059B (int faceIdx11FC, int cell11FD, Femdata: Mesh mesh11FE)
{
  int _t11FF = 12;
  int _t1200 = prim *0033 (cell11FD, _t11FF);
  int _t1201 = 2;
  int _t1202 = prim *0033 (faceIdx11FC, _t1201);
  int _t1203 = prim +0015 (_t1200, _t1202);
  int[2] _t1204 = extractFemItemN((mesh11FE, _t1203),CellFaceCell(Mesh),);
  return _t1204;
}
function vec2#0 _enter1205 (vec3 refPos1206, vec3 dPos1207)
{
  real time1208 = +inf;
  int face1209 = -1;
  real faceTime120A = -inf;
  real _t120B = -0.5e0;
  real _t120C = 0.e0;
  real _t120D = 0.e0;
  real _t120E = 0.1e1;
  vec3 _t120F = [_t120C, _t120D, _t120E];
  real _t1210 = prim •00CE<$[3]; $[3]; $[]> (_t120F, refPos1206);
  real _t1211 = prim -0026<$[]> (_t120B, _t1210);
  real _t1212 = 0.e0;
  real _t1213 = 0.e0;
  real _t1214 = 0.1e1;
  vec3 _t1215 = [_t1212, _t1213, _t1214];
  real _t1216 = prim •00CE<$[3]; $[3]; $[]> (_t1215, dPos1207);
  real _t1217 = prim /0055 (_t1211, _t1216);
  real _t1218 = -0.1e-15;
  bool _t1219 = prim >=007E (_t1217, _t1218);
  real _t121A = -0.5e0;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  real _t121D = 0.1e1;
  vec3 _t121E = [_t121B, _t121C, _t121D];
  real _t121F = prim •00CE<$[3]; $[3]; $[]> (_t121E, refPos1206);
  real _t1220 = prim -0026<$[]> (_t121A, _t121F);
  real _t1221 = 0.e0;
  real _t1222 = 0.e0;
  real _t1223 = 0.1e1;
  vec3 _t1224 = [_t1221, _t1222, _t1223];
  real _t1225 = prim •00CE<$[3]; $[3]; $[]> (_t1224, dPos1207);
  real _t1226 = prim /0055 (_t1220, _t1225);
  bool _t1227 = prim >0080 (time1208, _t1226);
  real _t1228 = 0.e0;
  real _t1229 = 0.e0;
  real _t122A = 0.1e1;
  vec3 _t122B = [_t1228, _t1229, _t122A];
  real _t122C = prim •00CE<$[3]; $[3]; $[]> (_t122B, dPos1207);
  real _t122D = prim |()|00B5<$[]> (_t122C);
  real _t122E = 0.1e-20;
  bool _t122F = prim >=007E (_t122D, _t122E);
  bool _t1230 = prim $and01C4 (_t1227, _t122F);
  bool _t1231 = prim $and01C4 (_t1219, _t1230);
  if _t1231 {
    real _t1232 = -0.5e0;
    real _t1233 = 0.e0;
    real _t1234 = 0.e0;
    real _t1235 = 0.1e1;
    vec3 _t1236 = [_t1233, _t1234, _t1235];
    real _t1237 = prim •00CE<$[3]; $[3]; $[]> (_t1236, refPos1206);
    real _t1238 = prim -0026<$[]> (_t1232, _t1237);
    real _t1239 = 0.e0;
    real _t123A = 0.e0;
    real _t123B = 0.1e1;
    vec3 _t123C = [_t1239, _t123A, _t123B];
    real _t123D = prim •00CE<$[3]; $[3]; $[]> (_t123C, dPos1207);
    real _t123E = prim /0055 (_t1238, _t123D);
    vec3 _t123F = prim *0038<$[3]> (dPos1207, _t123E);
    vec3 _t1240 = prim +0017<$[3]> (refPos1206, _t123F);
    real _t1241 = -0.5e0;
    real _t1242 = 0.e0;
    real _t1243 = 0.e0;
    real _t1244 = 0.1e1;
    vec3 _t1245 = [_t1242, _t1243, _t1244];
    real _t1246 = prim •00CE<$[3]; $[3]; $[]> (_t1245, refPos1206);
    real _t1247 = prim -0026<$[]> (_t1241, _t1246);
    real _t1248 = 0.e0;
    real _t1249 = 0.e0;
    real _t124A = 0.1e1;
    vec3 _t124B = [_t1248, _t1249, _t124A];
    real _t124C = prim •00CE<$[3]; $[3]; $[]> (_t124B, dPos1207);
    real _t124D = prim /0055 (_t1247, _t124C);
    vec3 _t124E = prim *0038<$[3]> (dPos1207, _t124D);
    vec3 _t124F = prim +0017<$[3]> (refPos1206, _t124E);
    real _t1250 = 0.1e-8;
    bool _t1251 = extractFemItemN((_t1240, _t124F, _t1250),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1251 {
      real _t1252 = -0.5e0;
      real _t1253 = 0.e0;
      real _t1254 = 0.e0;
      real _t1255 = 0.1e1;
      vec3 _t1256 = [_t1253, _t1254, _t1255];
      real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos1206);
      real _t1258 = prim -0026<$[]> (_t1252, _t1257);
      real _t1259 = 0.e0;
      real _t125A = 0.e0;
      real _t125B = 0.1e1;
      vec3 _t125C = [_t1259, _t125A, _t125B];
      real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos1207);
      time1208 = prim /0055 (_t1258, _t125D);
      face1209 = 0;
    }
  }
  real _t125E = 0.5e0;
  real _t125F = 0.e0;
  real _t1260 = 0.e0;
  real _t1261 = 0.1e1;
  vec3 _t1262 = [_t125F, _t1260, _t1261];
  real _t1263 = prim •00CE<$[3]; $[3]; $[]> (_t1262, refPos1206);
  real _t1264 = prim -0026<$[]> (_t125E, _t1263);
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  real _t1267 = 0.1e1;
  vec3 _t1268 = [_t1265, _t1266, _t1267];
  real _t1269 = prim •00CE<$[3]; $[3]; $[]> (_t1268, dPos1207);
  real _t126A = prim /0055 (_t1264, _t1269);
  real _t126B = -0.1e-15;
  bool _t126C = prim >=007E (_t126A, _t126B);
  real _t126D = 0.5e0;
  real _t126E = 0.e0;
  real _t126F = 0.e0;
  real _t1270 = 0.1e1;
  vec3 _t1271 = [_t126E, _t126F, _t1270];
  real _t1272 = prim •00CE<$[3]; $[3]; $[]> (_t1271, refPos1206);
  real _t1273 = prim -0026<$[]> (_t126D, _t1272);
  real _t1274 = 0.e0;
  real _t1275 = 0.e0;
  real _t1276 = 0.1e1;
  vec3 _t1277 = [_t1274, _t1275, _t1276];
  real _t1278 = prim •00CE<$[3]; $[3]; $[]> (_t1277, dPos1207);
  real _t1279 = prim /0055 (_t1273, _t1278);
  bool _t127A = prim >0080 (time1208, _t1279);
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  real _t127D = 0.1e1;
  vec3 _t127E = [_t127B, _t127C, _t127D];
  real _t127F = prim •00CE<$[3]; $[3]; $[]> (_t127E, dPos1207);
  real _t1280 = prim |()|00B5<$[]> (_t127F);
  real _t1281 = 0.1e-20;
  bool _t1282 = prim >=007E (_t1280, _t1281);
  bool _t1283 = prim $and01C4 (_t127A, _t1282);
  bool _t1284 = prim $and01C4 (_t126C, _t1283);
  if _t1284 {
    real _t1285 = 0.5e0;
    real _t1286 = 0.e0;
    real _t1287 = 0.e0;
    real _t1288 = 0.1e1;
    vec3 _t1289 = [_t1286, _t1287, _t1288];
    real _t128A = prim •00CE<$[3]; $[3]; $[]> (_t1289, refPos1206);
    real _t128B = prim -0026<$[]> (_t1285, _t128A);
    real _t128C = 0.e0;
    real _t128D = 0.e0;
    real _t128E = 0.1e1;
    vec3 _t128F = [_t128C, _t128D, _t128E];
    real _t1290 = prim •00CE<$[3]; $[3]; $[]> (_t128F, dPos1207);
    real _t1291 = prim /0055 (_t128B, _t1290);
    vec3 _t1292 = prim *0038<$[3]> (dPos1207, _t1291);
    vec3 _t1293 = prim +0017<$[3]> (refPos1206, _t1292);
    real _t1294 = 0.5e0;
    real _t1295 = 0.e0;
    real _t1296 = 0.e0;
    real _t1297 = 0.1e1;
    vec3 _t1298 = [_t1295, _t1296, _t1297];
    real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos1206);
    real _t129A = prim -0026<$[]> (_t1294, _t1299);
    real _t129B = 0.e0;
    real _t129C = 0.e0;
    real _t129D = 0.1e1;
    vec3 _t129E = [_t129B, _t129C, _t129D];
    real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos1207);
    real _t12A0 = prim /0055 (_t129A, _t129F);
    vec3 _t12A1 = prim *0038<$[3]> (dPos1207, _t12A0);
    vec3 _t12A2 = prim +0017<$[3]> (refPos1206, _t12A1);
    real _t12A3 = 0.1e-8;
    bool _t12A4 = extractFemItemN((_t1293, _t12A2, _t12A3),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12A4 {
      real _t12A5 = 0.5e0;
      real _t12A6 = 0.e0;
      real _t12A7 = 0.e0;
      real _t12A8 = 0.1e1;
      vec3 _t12A9 = [_t12A6, _t12A7, _t12A8];
      real _t12AA = prim •00CE<$[3]; $[3]; $[]> (_t12A9, refPos1206);
      real _t12AB = prim -0026<$[]> (_t12A5, _t12AA);
      real _t12AC = 0.e0;
      real _t12AD = 0.e0;
      real _t12AE = 0.1e1;
      vec3 _t12AF = [_t12AC, _t12AD, _t12AE];
      real _t12B0 = prim •00CE<$[3]; $[3]; $[]> (_t12AF, dPos1207);
      time1208 = prim /0055 (_t12AB, _t12B0);
      face1209 = 1;
    }
  }
  real _t12B1 = -0.5e0;
  real _t12B2 = 0.e0;
  real _t12B3 = 0.1e1;
  real _t12B4 = 0.e0;
  vec3 _t12B5 = [_t12B2, _t12B3, _t12B4];
  real _t12B6 = prim •00CE<$[3]; $[3]; $[]> (_t12B5, refPos1206);
  real _t12B7 = prim -0026<$[]> (_t12B1, _t12B6);
  real _t12B8 = 0.e0;
  real _t12B9 = 0.1e1;
  real _t12BA = 0.e0;
  vec3 _t12BB = [_t12B8, _t12B9, _t12BA];
  real _t12BC = prim •00CE<$[3]; $[3]; $[]> (_t12BB, dPos1207);
  real _t12BD = prim /0055 (_t12B7, _t12BC);
  real _t12BE = -0.1e-15;
  bool _t12BF = prim >=007E (_t12BD, _t12BE);
  real _t12C0 = -0.5e0;
  real _t12C1 = 0.e0;
  real _t12C2 = 0.1e1;
  real _t12C3 = 0.e0;
  vec3 _t12C4 = [_t12C1, _t12C2, _t12C3];
  real _t12C5 = prim •00CE<$[3]; $[3]; $[]> (_t12C4, refPos1206);
  real _t12C6 = prim -0026<$[]> (_t12C0, _t12C5);
  real _t12C7 = 0.e0;
  real _t12C8 = 0.1e1;
  real _t12C9 = 0.e0;
  vec3 _t12CA = [_t12C7, _t12C8, _t12C9];
  real _t12CB = prim •00CE<$[3]; $[3]; $[]> (_t12CA, dPos1207);
  real _t12CC = prim /0055 (_t12C6, _t12CB);
  bool _t12CD = prim >0080 (time1208, _t12CC);
  real _t12CE = 0.e0;
  real _t12CF = 0.1e1;
  real _t12D0 = 0.e0;
  vec3 _t12D1 = [_t12CE, _t12CF, _t12D0];
  real _t12D2 = prim •00CE<$[3]; $[3]; $[]> (_t12D1, dPos1207);
  real _t12D3 = prim |()|00B5<$[]> (_t12D2);
  real _t12D4 = 0.1e-20;
  bool _t12D5 = prim >=007E (_t12D3, _t12D4);
  bool _t12D6 = prim $and01C4 (_t12CD, _t12D5);
  bool _t12D7 = prim $and01C4 (_t12BF, _t12D6);
  if _t12D7 {
    real _t12D8 = -0.5e0;
    real _t12D9 = 0.e0;
    real _t12DA = 0.1e1;
    real _t12DB = 0.e0;
    vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
    real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, refPos1206);
    real _t12DE = prim -0026<$[]> (_t12D8, _t12DD);
    real _t12DF = 0.e0;
    real _t12E0 = 0.1e1;
    real _t12E1 = 0.e0;
    vec3 _t12E2 = [_t12DF, _t12E0, _t12E1];
    real _t12E3 = prim •00CE<$[3]; $[3]; $[]> (_t12E2, dPos1207);
    real _t12E4 = prim /0055 (_t12DE, _t12E3);
    vec3 _t12E5 = prim *0038<$[3]> (dPos1207, _t12E4);
    vec3 _t12E6 = prim +0017<$[3]> (refPos1206, _t12E5);
    real _t12E7 = -0.5e0;
    real _t12E8 = 0.e0;
    real _t12E9 = 0.1e1;
    real _t12EA = 0.e0;
    vec3 _t12EB = [_t12E8, _t12E9, _t12EA];
    real _t12EC = prim •00CE<$[3]; $[3]; $[]> (_t12EB, refPos1206);
    real _t12ED = prim -0026<$[]> (_t12E7, _t12EC);
    real _t12EE = 0.e0;
    real _t12EF = 0.1e1;
    real _t12F0 = 0.e0;
    vec3 _t12F1 = [_t12EE, _t12EF, _t12F0];
    real _t12F2 = prim •00CE<$[3]; $[3]; $[]> (_t12F1, dPos1207);
    real _t12F3 = prim /0055 (_t12ED, _t12F2);
    vec3 _t12F4 = prim *0038<$[3]> (dPos1207, _t12F3);
    vec3 _t12F5 = prim +0017<$[3]> (refPos1206, _t12F4);
    real _t12F6 = 0.1e-8;
    bool _t12F7 = extractFemItemN((_t12E6, _t12F5, _t12F6),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12F7 {
      real _t12F8 = -0.5e0;
      real _t12F9 = 0.e0;
      real _t12FA = 0.1e1;
      real _t12FB = 0.e0;
      vec3 _t12FC = [_t12F9, _t12FA, _t12FB];
      real _t12FD = prim •00CE<$[3]; $[3]; $[]> (_t12FC, refPos1206);
      real _t12FE = prim -0026<$[]> (_t12F8, _t12FD);
      real _t12FF = 0.e0;
      real _t1300 = 0.1e1;
      real _t1301 = 0.e0;
      vec3 _t1302 = [_t12FF, _t1300, _t1301];
      real _t1303 = prim •00CE<$[3]; $[3]; $[]> (_t1302, dPos1207);
      time1208 = prim /0055 (_t12FE, _t1303);
      face1209 = 2;
    }
  }
  real _t1304 = -0.5e0;
  real _t1305 = -0.1e1;
  real _t1306 = 0.e0;
  real _t1307 = 0.e0;
  vec3 _t1308 = [_t1305, _t1306, _t1307];
  real _t1309 = prim •00CE<$[3]; $[3]; $[]> (_t1308, refPos1206);
  real _t130A = prim -0026<$[]> (_t1304, _t1309);
  real _t130B = -0.1e1;
  real _t130C = 0.e0;
  real _t130D = 0.e0;
  vec3 _t130E = [_t130B, _t130C, _t130D];
  real _t130F = prim •00CE<$[3]; $[3]; $[]> (_t130E, dPos1207);
  real _t1310 = prim /0055 (_t130A, _t130F);
  real _t1311 = -0.1e-15;
  bool _t1312 = prim >=007E (_t1310, _t1311);
  real _t1313 = -0.5e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  real _t1316 = 0.e0;
  vec3 _t1317 = [_t1314, _t1315, _t1316];
  real _t1318 = prim •00CE<$[3]; $[3]; $[]> (_t1317, refPos1206);
  real _t1319 = prim -0026<$[]> (_t1313, _t1318);
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  real _t131C = 0.e0;
  vec3 _t131D = [_t131A, _t131B, _t131C];
  real _t131E = prim •00CE<$[3]; $[3]; $[]> (_t131D, dPos1207);
  real _t131F = prim /0055 (_t1319, _t131E);
  bool _t1320 = prim >0080 (time1208, _t131F);
  real _t1321 = -0.1e1;
  real _t1322 = 0.e0;
  real _t1323 = 0.e0;
  vec3 _t1324 = [_t1321, _t1322, _t1323];
  real _t1325 = prim •00CE<$[3]; $[3]; $[]> (_t1324, dPos1207);
  real _t1326 = prim |()|00B5<$[]> (_t1325);
  real _t1327 = 0.1e-20;
  bool _t1328 = prim >=007E (_t1326, _t1327);
  bool _t1329 = prim $and01C4 (_t1320, _t1328);
  bool _t132A = prim $and01C4 (_t1312, _t1329);
  if _t132A {
    real _t132B = -0.5e0;
    real _t132C = -0.1e1;
    real _t132D = 0.e0;
    real _t132E = 0.e0;
    vec3 _t132F = [_t132C, _t132D, _t132E];
    real _t1330 = prim •00CE<$[3]; $[3]; $[]> (_t132F, refPos1206);
    real _t1331 = prim -0026<$[]> (_t132B, _t1330);
    real _t1332 = -0.1e1;
    real _t1333 = 0.e0;
    real _t1334 = 0.e0;
    vec3 _t1335 = [_t1332, _t1333, _t1334];
    real _t1336 = prim •00CE<$[3]; $[3]; $[]> (_t1335, dPos1207);
    real _t1337 = prim /0055 (_t1331, _t1336);
    vec3 _t1338 = prim *0038<$[3]> (dPos1207, _t1337);
    vec3 _t1339 = prim +0017<$[3]> (refPos1206, _t1338);
    real _t133A = -0.5e0;
    real _t133B = -0.1e1;
    real _t133C = 0.e0;
    real _t133D = 0.e0;
    vec3 _t133E = [_t133B, _t133C, _t133D];
    real _t133F = prim •00CE<$[3]; $[3]; $[]> (_t133E, refPos1206);
    real _t1340 = prim -0026<$[]> (_t133A, _t133F);
    real _t1341 = -0.1e1;
    real _t1342 = 0.e0;
    real _t1343 = 0.e0;
    vec3 _t1344 = [_t1341, _t1342, _t1343];
    real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, dPos1207);
    real _t1346 = prim /0055 (_t1340, _t1345);
    vec3 _t1347 = prim *0038<$[3]> (dPos1207, _t1346);
    vec3 _t1348 = prim +0017<$[3]> (refPos1206, _t1347);
    real _t1349 = 0.1e-8;
    bool _t134A = extractFemItemN((_t1339, _t1348, _t1349),InsideInsert(File=checkInside.in)(Mesh),);
    if _t134A {
      real _t134B = -0.5e0;
      real _t134C = -0.1e1;
      real _t134D = 0.e0;
      real _t134E = 0.e0;
      vec3 _t134F = [_t134C, _t134D, _t134E];
      real _t1350 = prim •00CE<$[3]; $[3]; $[]> (_t134F, refPos1206);
      real _t1351 = prim -0026<$[]> (_t134B, _t1350);
      real _t1352 = -0.1e1;
      real _t1353 = 0.e0;
      real _t1354 = 0.e0;
      vec3 _t1355 = [_t1352, _t1353, _t1354];
      real _t1356 = prim •00CE<$[3]; $[3]; $[]> (_t1355, dPos1207);
      time1208 = prim /0055 (_t1351, _t1356);
      face1209 = 3;
    }
  }
  real _t1357 = -0.5e0;
  real _t1358 = 0.e0;
  real _t1359 = -0.1e1;
  real _t135A = 0.e0;
  vec3 _t135B = [_t1358, _t1359, _t135A];
  real _t135C = prim •00CE<$[3]; $[3]; $[]> (_t135B, refPos1206);
  real _t135D = prim -0026<$[]> (_t1357, _t135C);
  real _t135E = 0.e0;
  real _t135F = -0.1e1;
  real _t1360 = 0.e0;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = prim •00CE<$[3]; $[3]; $[]> (_t1361, dPos1207);
  real _t1363 = prim /0055 (_t135D, _t1362);
  real _t1364 = -0.1e-15;
  bool _t1365 = prim >=007E (_t1363, _t1364);
  real _t1366 = -0.5e0;
  real _t1367 = 0.e0;
  real _t1368 = -0.1e1;
  real _t1369 = 0.e0;
  vec3 _t136A = [_t1367, _t1368, _t1369];
  real _t136B = prim •00CE<$[3]; $[3]; $[]> (_t136A, refPos1206);
  real _t136C = prim -0026<$[]> (_t1366, _t136B);
  real _t136D = 0.e0;
  real _t136E = -0.1e1;
  real _t136F = 0.e0;
  vec3 _t1370 = [_t136D, _t136E, _t136F];
  real _t1371 = prim •00CE<$[3]; $[3]; $[]> (_t1370, dPos1207);
  real _t1372 = prim /0055 (_t136C, _t1371);
  bool _t1373 = prim >0080 (time1208, _t1372);
  real _t1374 = 0.e0;
  real _t1375 = -0.1e1;
  real _t1376 = 0.e0;
  vec3 _t1377 = [_t1374, _t1375, _t1376];
  real _t1378 = prim •00CE<$[3]; $[3]; $[]> (_t1377, dPos1207);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  real _t137A = 0.1e-20;
  bool _t137B = prim >=007E (_t1379, _t137A);
  bool _t137C = prim $and01C4 (_t1373, _t137B);
  bool _t137D = prim $and01C4 (_t1365, _t137C);
  if _t137D {
    real _t137E = -0.5e0;
    real _t137F = 0.e0;
    real _t1380 = -0.1e1;
    real _t1381 = 0.e0;
    vec3 _t1382 = [_t137F, _t1380, _t1381];
    real _t1383 = prim •00CE<$[3]; $[3]; $[]> (_t1382, refPos1206);
    real _t1384 = prim -0026<$[]> (_t137E, _t1383);
    real _t1385 = 0.e0;
    real _t1386 = -0.1e1;
    real _t1387 = 0.e0;
    vec3 _t1388 = [_t1385, _t1386, _t1387];
    real _t1389 = prim •00CE<$[3]; $[3]; $[]> (_t1388, dPos1207);
    real _t138A = prim /0055 (_t1384, _t1389);
    vec3 _t138B = prim *0038<$[3]> (dPos1207, _t138A);
    vec3 _t138C = prim +0017<$[3]> (refPos1206, _t138B);
    real _t138D = -0.5e0;
    real _t138E = 0.e0;
    real _t138F = -0.1e1;
    real _t1390 = 0.e0;
    vec3 _t1391 = [_t138E, _t138F, _t1390];
    real _t1392 = prim •00CE<$[3]; $[3]; $[]> (_t1391, refPos1206);
    real _t1393 = prim -0026<$[]> (_t138D, _t1392);
    real _t1394 = 0.e0;
    real _t1395 = -0.1e1;
    real _t1396 = 0.e0;
    vec3 _t1397 = [_t1394, _t1395, _t1396];
    real _t1398 = prim •00CE<$[3]; $[3]; $[]> (_t1397, dPos1207);
    real _t1399 = prim /0055 (_t1393, _t1398);
    vec3 _t139A = prim *0038<$[3]> (dPos1207, _t1399);
    vec3 _t139B = prim +0017<$[3]> (refPos1206, _t139A);
    real _t139C = 0.1e-8;
    bool _t139D = extractFemItemN((_t138C, _t139B, _t139C),InsideInsert(File=checkInside.in)(Mesh),);
    if _t139D {
      real _t139E = -0.5e0;
      real _t139F = 0.e0;
      real _t13A0 = -0.1e1;
      real _t13A1 = 0.e0;
      vec3 _t13A2 = [_t139F, _t13A0, _t13A1];
      real _t13A3 = prim •00CE<$[3]; $[3]; $[]> (_t13A2, refPos1206);
      real _t13A4 = prim -0026<$[]> (_t139E, _t13A3);
      real _t13A5 = 0.e0;
      real _t13A6 = -0.1e1;
      real _t13A7 = 0.e0;
      vec3 _t13A8 = [_t13A5, _t13A6, _t13A7];
      real _t13A9 = prim •00CE<$[3]; $[3]; $[]> (_t13A8, dPos1207);
      time1208 = prim /0055 (_t13A4, _t13A9);
      face1209 = 4;
    }
  }
  real _t13AA = -0.5e0;
  real _t13AB = 0.1e1;
  real _t13AC = 0.e0;
  real _t13AD = -0.e0;
  vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
  real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos1206);
  real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
  real _t13B1 = 0.1e1;
  real _t13B2 = 0.e0;
  real _t13B3 = -0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos1207);
  real _t13B6 = prim /0055 (_t13B0, _t13B5);
  real _t13B7 = -0.1e-15;
  bool _t13B8 = prim >=007E (_t13B6, _t13B7);
  real _t13B9 = -0.5e0;
  real _t13BA = 0.1e1;
  real _t13BB = 0.e0;
  real _t13BC = -0.e0;
  vec3 _t13BD = [_t13BA, _t13BB, _t13BC];
  real _t13BE = prim •00CE<$[3]; $[3]; $[]> (_t13BD, refPos1206);
  real _t13BF = prim -0026<$[]> (_t13B9, _t13BE);
  real _t13C0 = 0.1e1;
  real _t13C1 = 0.e0;
  real _t13C2 = -0.e0;
  vec3 _t13C3 = [_t13C0, _t13C1, _t13C2];
  real _t13C4 = prim •00CE<$[3]; $[3]; $[]> (_t13C3, dPos1207);
  real _t13C5 = prim /0055 (_t13BF, _t13C4);
  bool _t13C6 = prim >0080 (time1208, _t13C5);
  real _t13C7 = 0.1e1;
  real _t13C8 = 0.e0;
  real _t13C9 = -0.e0;
  vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
  real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, dPos1207);
  real _t13CC = prim |()|00B5<$[]> (_t13CB);
  real _t13CD = 0.1e-20;
  bool _t13CE = prim >=007E (_t13CC, _t13CD);
  bool _t13CF = prim $and01C4 (_t13C6, _t13CE);
  bool _t13D0 = prim $and01C4 (_t13B8, _t13CF);
  if _t13D0 {
    real _t13D1 = -0.5e0;
    real _t13D2 = 0.1e1;
    real _t13D3 = 0.e0;
    real _t13D4 = -0.e0;
    vec3 _t13D5 = [_t13D2, _t13D3, _t13D4];
    real _t13D6 = prim •00CE<$[3]; $[3]; $[]> (_t13D5, refPos1206);
    real _t13D7 = prim -0026<$[]> (_t13D1, _t13D6);
    real _t13D8 = 0.1e1;
    real _t13D9 = 0.e0;
    real _t13DA = -0.e0;
    vec3 _t13DB = [_t13D8, _t13D9, _t13DA];
    real _t13DC = prim •00CE<$[3]; $[3]; $[]> (_t13DB, dPos1207);
    real _t13DD = prim /0055 (_t13D7, _t13DC);
    vec3 _t13DE = prim *0038<$[3]> (dPos1207, _t13DD);
    vec3 _t13DF = prim +0017<$[3]> (refPos1206, _t13DE);
    real _t13E0 = -0.5e0;
    real _t13E1 = 0.1e1;
    real _t13E2 = 0.e0;
    real _t13E3 = -0.e0;
    vec3 _t13E4 = [_t13E1, _t13E2, _t13E3];
    real _t13E5 = prim •00CE<$[3]; $[3]; $[]> (_t13E4, refPos1206);
    real _t13E6 = prim -0026<$[]> (_t13E0, _t13E5);
    real _t13E7 = 0.1e1;
    real _t13E8 = 0.e0;
    real _t13E9 = -0.e0;
    vec3 _t13EA = [_t13E7, _t13E8, _t13E9];
    real _t13EB = prim •00CE<$[3]; $[3]; $[]> (_t13EA, dPos1207);
    real _t13EC = prim /0055 (_t13E6, _t13EB);
    vec3 _t13ED = prim *0038<$[3]> (dPos1207, _t13EC);
    vec3 _t13EE = prim +0017<$[3]> (refPos1206, _t13ED);
    real _t13EF = 0.1e-8;
    bool _t13F0 = extractFemItemN((_t13DF, _t13EE, _t13EF),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13F0 {
      real _t13F1 = -0.5e0;
      real _t13F2 = 0.1e1;
      real _t13F3 = 0.e0;
      real _t13F4 = -0.e0;
      vec3 _t13F5 = [_t13F2, _t13F3, _t13F4];
      real _t13F6 = prim •00CE<$[3]; $[3]; $[]> (_t13F5, refPos1206);
      real _t13F7 = prim -0026<$[]> (_t13F1, _t13F6);
      real _t13F8 = 0.1e1;
      real _t13F9 = 0.e0;
      real _t13FA = -0.e0;
      vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
      real _t13FC = prim •00CE<$[3]; $[3]; $[]> (_t13FB, dPos1207);
      time1208 = prim /0055 (_t13F7, _t13FC);
      face1209 = 5;
    }
  }
  int _t13FD = -1;
  bool _t13FE = prim !=0086 (face1209, _t13FD);
  if _t13FE {
    real _t13FF = 0.e0;
    real _t1400 = prim max0125 (time1208, _t13FF);
    real _t1401 = (real)face1209;
    vec2 _t1402 = [_t1400, _t1401];
    return _t1402;
  } else {
    real _t1403 = -0.1e1;
    real _t1404 = -0.1e1;
    vec2 _t1405 = [_t1403, _t1404];
    return _t1405;
  }
}
function vec2#0 _exit1406 (vec3 refPos1206, vec3 dPos1207, int i1407)
{
  real time1408 = +inf;
  int face1409 = -1;
  real faceTime140A = -inf;
  real _t140B = -0.5e0;
  real _t140C = 0.e0;
  real _t140D = 0.e0;
  real _t140E = 0.1e1;
  vec3 _t140F = [_t140C, _t140D, _t140E];
  real _t1410 = prim •00CE<$[3]; $[3]; $[]> (_t140F, refPos1206);
  real _t1411 = prim -0026<$[]> (_t140B, _t1410);
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = 0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, dPos1207);
  real _t1417 = prim /0055 (_t1411, _t1416);
  real _t1418 = -0.1e-15;
  bool _t1419 = prim >=007E (_t1417, _t1418);
  real _t141A = -0.5e0;
  real _t141B = 0.e0;
  real _t141C = 0.e0;
  real _t141D = 0.1e1;
  vec3 _t141E = [_t141B, _t141C, _t141D];
  real _t141F = prim •00CE<$[3]; $[3]; $[]> (_t141E, refPos1206);
  real _t1420 = prim -0026<$[]> (_t141A, _t141F);
  real _t1421 = 0.e0;
  real _t1422 = 0.e0;
  real _t1423 = 0.1e1;
  vec3 _t1424 = [_t1421, _t1422, _t1423];
  real _t1425 = prim •00CE<$[3]; $[3]; $[]> (_t1424, dPos1207);
  real _t1426 = prim /0055 (_t1420, _t1425);
  bool _t1427 = prim >0080 (time1408, _t1426);
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.1e1;
  vec3 _t142B = [_t1428, _t1429, _t142A];
  real _t142C = prim •00CE<$[3]; $[3]; $[]> (_t142B, dPos1207);
  real _t142D = prim |()|00B5<$[]> (_t142C);
  real _t142E = 0.1e-20;
  bool _t142F = prim >=007E (_t142D, _t142E);
  bool _t1430 = prim $and01C4 (_t1427, _t142F);
  bool _t1431 = prim $and01C4 (_t1419, _t1430);
  if _t1431 {
    int _t1432 = 0;
    bool _t1433 = prim !=0086 (i1407, _t1432);
    if _t1433 {
      real _t1434 = -0.5e0;
      real _t1435 = 0.e0;
      real _t1436 = 0.e0;
      real _t1437 = 0.1e1;
      vec3 _t1438 = [_t1435, _t1436, _t1437];
      real _t1439 = prim •00CE<$[3]; $[3]; $[]> (_t1438, refPos1206);
      real _t143A = prim -0026<$[]> (_t1434, _t1439);
      real _t143B = 0.e0;
      real _t143C = 0.e0;
      real _t143D = 0.1e1;
      vec3 _t143E = [_t143B, _t143C, _t143D];
      real _t143F = prim •00CE<$[3]; $[3]; $[]> (_t143E, dPos1207);
      time1408 = prim /0055 (_t143A, _t143F);
      face1409 = 0;
    } else {
      real _t1440 = -0.5e0;
      real _t1441 = 0.e0;
      real _t1442 = 0.e0;
      real _t1443 = 0.1e1;
      vec3 _t1444 = [_t1441, _t1442, _t1443];
      real _t1445 = prim •00CE<$[3]; $[3]; $[]> (_t1444, refPos1206);
      real _t1446 = prim -0026<$[]> (_t1440, _t1445);
      real _t1447 = 0.e0;
      real _t1448 = 0.e0;
      real _t1449 = 0.1e1;
      vec3 _t144A = [_t1447, _t1448, _t1449];
      real _t144B = prim •00CE<$[3]; $[3]; $[]> (_t144A, dPos1207);
      faceTime140A = prim /0055 (_t1446, _t144B);
    }
  }
  real _t144C = 0.5e0;
  real _t144D = 0.e0;
  real _t144E = 0.e0;
  real _t144F = 0.1e1;
  vec3 _t1450 = [_t144D, _t144E, _t144F];
  real _t1451 = prim •00CE<$[3]; $[3]; $[]> (_t1450, refPos1206);
  real _t1452 = prim -0026<$[]> (_t144C, _t1451);
  real _t1453 = 0.e0;
  real _t1454 = 0.e0;
  real _t1455 = 0.1e1;
  vec3 _t1456 = [_t1453, _t1454, _t1455];
  real _t1457 = prim •00CE<$[3]; $[3]; $[]> (_t1456, dPos1207);
  real _t1458 = prim /0055 (_t1452, _t1457);
  real _t1459 = -0.1e-15;
  bool _t145A = prim >=007E (_t1458, _t1459);
  real _t145B = 0.5e0;
  real _t145C = 0.e0;
  real _t145D = 0.e0;
  real _t145E = 0.1e1;
  vec3 _t145F = [_t145C, _t145D, _t145E];
  real _t1460 = prim •00CE<$[3]; $[3]; $[]> (_t145F, refPos1206);
  real _t1461 = prim -0026<$[]> (_t145B, _t1460);
  real _t1462 = 0.e0;
  real _t1463 = 0.e0;
  real _t1464 = 0.1e1;
  vec3 _t1465 = [_t1462, _t1463, _t1464];
  real _t1466 = prim •00CE<$[3]; $[3]; $[]> (_t1465, dPos1207);
  real _t1467 = prim /0055 (_t1461, _t1466);
  bool _t1468 = prim >0080 (time1408, _t1467);
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.1e1;
  vec3 _t146C = [_t1469, _t146A, _t146B];
  real _t146D = prim •00CE<$[3]; $[3]; $[]> (_t146C, dPos1207);
  real _t146E = prim |()|00B5<$[]> (_t146D);
  real _t146F = 0.1e-20;
  bool _t1470 = prim >=007E (_t146E, _t146F);
  bool _t1471 = prim $and01C4 (_t1468, _t1470);
  bool _t1472 = prim $and01C4 (_t145A, _t1471);
  if _t1472 {
    int _t1473 = 1;
    bool _t1474 = prim !=0086 (i1407, _t1473);
    if _t1474 {
      real _t1475 = 0.5e0;
      real _t1476 = 0.e0;
      real _t1477 = 0.e0;
      real _t1478 = 0.1e1;
      vec3 _t1479 = [_t1476, _t1477, _t1478];
      real _t147A = prim •00CE<$[3]; $[3]; $[]> (_t1479, refPos1206);
      real _t147B = prim -0026<$[]> (_t1475, _t147A);
      real _t147C = 0.e0;
      real _t147D = 0.e0;
      real _t147E = 0.1e1;
      vec3 _t147F = [_t147C, _t147D, _t147E];
      real _t1480 = prim •00CE<$[3]; $[3]; $[]> (_t147F, dPos1207);
      time1408 = prim /0055 (_t147B, _t1480);
      face1409 = 1;
    } else {
      real _t1481 = 0.5e0;
      real _t1482 = 0.e0;
      real _t1483 = 0.e0;
      real _t1484 = 0.1e1;
      vec3 _t1485 = [_t1482, _t1483, _t1484];
      real _t1486 = prim •00CE<$[3]; $[3]; $[]> (_t1485, refPos1206);
      real _t1487 = prim -0026<$[]> (_t1481, _t1486);
      real _t1488 = 0.e0;
      real _t1489 = 0.e0;
      real _t148A = 0.1e1;
      vec3 _t148B = [_t1488, _t1489, _t148A];
      real _t148C = prim •00CE<$[3]; $[3]; $[]> (_t148B, dPos1207);
      faceTime140A = prim /0055 (_t1487, _t148C);
    }
  }
  real _t148D = -0.5e0;
  real _t148E = 0.e0;
  real _t148F = 0.1e1;
  real _t1490 = 0.e0;
  vec3 _t1491 = [_t148E, _t148F, _t1490];
  real _t1492 = prim •00CE<$[3]; $[3]; $[]> (_t1491, refPos1206);
  real _t1493 = prim -0026<$[]> (_t148D, _t1492);
  real _t1494 = 0.e0;
  real _t1495 = 0.1e1;
  real _t1496 = 0.e0;
  vec3 _t1497 = [_t1494, _t1495, _t1496];
  real _t1498 = prim •00CE<$[3]; $[3]; $[]> (_t1497, dPos1207);
  real _t1499 = prim /0055 (_t1493, _t1498);
  real _t149A = -0.1e-15;
  bool _t149B = prim >=007E (_t1499, _t149A);
  real _t149C = -0.5e0;
  real _t149D = 0.e0;
  real _t149E = 0.1e1;
  real _t149F = 0.e0;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, refPos1206);
  real _t14A2 = prim -0026<$[]> (_t149C, _t14A1);
  real _t14A3 = 0.e0;
  real _t14A4 = 0.1e1;
  real _t14A5 = 0.e0;
  vec3 _t14A6 = [_t14A3, _t14A4, _t14A5];
  real _t14A7 = prim •00CE<$[3]; $[3]; $[]> (_t14A6, dPos1207);
  real _t14A8 = prim /0055 (_t14A2, _t14A7);
  bool _t14A9 = prim >0080 (time1408, _t14A8);
  real _t14AA = 0.e0;
  real _t14AB = 0.1e1;
  real _t14AC = 0.e0;
  vec3 _t14AD = [_t14AA, _t14AB, _t14AC];
  real _t14AE = prim •00CE<$[3]; $[3]; $[]> (_t14AD, dPos1207);
  real _t14AF = prim |()|00B5<$[]> (_t14AE);
  real _t14B0 = 0.1e-20;
  bool _t14B1 = prim >=007E (_t14AF, _t14B0);
  bool _t14B2 = prim $and01C4 (_t14A9, _t14B1);
  bool _t14B3 = prim $and01C4 (_t149B, _t14B2);
  if _t14B3 {
    int _t14B4 = 2;
    bool _t14B5 = prim !=0086 (i1407, _t14B4);
    if _t14B5 {
      real _t14B6 = -0.5e0;
      real _t14B7 = 0.e0;
      real _t14B8 = 0.1e1;
      real _t14B9 = 0.e0;
      vec3 _t14BA = [_t14B7, _t14B8, _t14B9];
      real _t14BB = prim •00CE<$[3]; $[3]; $[]> (_t14BA, refPos1206);
      real _t14BC = prim -0026<$[]> (_t14B6, _t14BB);
      real _t14BD = 0.e0;
      real _t14BE = 0.1e1;
      real _t14BF = 0.e0;
      vec3 _t14C0 = [_t14BD, _t14BE, _t14BF];
      real _t14C1 = prim •00CE<$[3]; $[3]; $[]> (_t14C0, dPos1207);
      time1408 = prim /0055 (_t14BC, _t14C1);
      face1409 = 2;
    } else {
      real _t14C2 = -0.5e0;
      real _t14C3 = 0.e0;
      real _t14C4 = 0.1e1;
      real _t14C5 = 0.e0;
      vec3 _t14C6 = [_t14C3, _t14C4, _t14C5];
      real _t14C7 = prim •00CE<$[3]; $[3]; $[]> (_t14C6, refPos1206);
      real _t14C8 = prim -0026<$[]> (_t14C2, _t14C7);
      real _t14C9 = 0.e0;
      real _t14CA = 0.1e1;
      real _t14CB = 0.e0;
      vec3 _t14CC = [_t14C9, _t14CA, _t14CB];
      real _t14CD = prim •00CE<$[3]; $[3]; $[]> (_t14CC, dPos1207);
      faceTime140A = prim /0055 (_t14C8, _t14CD);
    }
  }
  real _t14CE = -0.5e0;
  real _t14CF = -0.1e1;
  real _t14D0 = 0.e0;
  real _t14D1 = 0.e0;
  vec3 _t14D2 = [_t14CF, _t14D0, _t14D1];
  real _t14D3 = prim •00CE<$[3]; $[3]; $[]> (_t14D2, refPos1206);
  real _t14D4 = prim -0026<$[]> (_t14CE, _t14D3);
  real _t14D5 = -0.1e1;
  real _t14D6 = 0.e0;
  real _t14D7 = 0.e0;
  vec3 _t14D8 = [_t14D5, _t14D6, _t14D7];
  real _t14D9 = prim •00CE<$[3]; $[3]; $[]> (_t14D8, dPos1207);
  real _t14DA = prim /0055 (_t14D4, _t14D9);
  real _t14DB = -0.1e-15;
  bool _t14DC = prim >=007E (_t14DA, _t14DB);
  real _t14DD = -0.5e0;
  real _t14DE = -0.1e1;
  real _t14DF = 0.e0;
  real _t14E0 = 0.e0;
  vec3 _t14E1 = [_t14DE, _t14DF, _t14E0];
  real _t14E2 = prim •00CE<$[3]; $[3]; $[]> (_t14E1, refPos1206);
  real _t14E3 = prim -0026<$[]> (_t14DD, _t14E2);
  real _t14E4 = -0.1e1;
  real _t14E5 = 0.e0;
  real _t14E6 = 0.e0;
  vec3 _t14E7 = [_t14E4, _t14E5, _t14E6];
  real _t14E8 = prim •00CE<$[3]; $[3]; $[]> (_t14E7, dPos1207);
  real _t14E9 = prim /0055 (_t14E3, _t14E8);
  bool _t14EA = prim >0080 (time1408, _t14E9);
  real _t14EB = -0.1e1;
  real _t14EC = 0.e0;
  real _t14ED = 0.e0;
  vec3 _t14EE = [_t14EB, _t14EC, _t14ED];
  real _t14EF = prim •00CE<$[3]; $[3]; $[]> (_t14EE, dPos1207);
  real _t14F0 = prim |()|00B5<$[]> (_t14EF);
  real _t14F1 = 0.1e-20;
  bool _t14F2 = prim >=007E (_t14F0, _t14F1);
  bool _t14F3 = prim $and01C4 (_t14EA, _t14F2);
  bool _t14F4 = prim $and01C4 (_t14DC, _t14F3);
  if _t14F4 {
    int _t14F5 = 3;
    bool _t14F6 = prim !=0086 (i1407, _t14F5);
    if _t14F6 {
      real _t14F7 = -0.5e0;
      real _t14F8 = -0.1e1;
      real _t14F9 = 0.e0;
      real _t14FA = 0.e0;
      vec3 _t14FB = [_t14F8, _t14F9, _t14FA];
      real _t14FC = prim •00CE<$[3]; $[3]; $[]> (_t14FB, refPos1206);
      real _t14FD = prim -0026<$[]> (_t14F7, _t14FC);
      real _t14FE = -0.1e1;
      real _t14FF = 0.e0;
      real _t1500 = 0.e0;
      vec3 _t1501 = [_t14FE, _t14FF, _t1500];
      real _t1502 = prim •00CE<$[3]; $[3]; $[]> (_t1501, dPos1207);
      time1408 = prim /0055 (_t14FD, _t1502);
      face1409 = 3;
    } else {
      real _t1503 = -0.5e0;
      real _t1504 = -0.1e1;
      real _t1505 = 0.e0;
      real _t1506 = 0.e0;
      vec3 _t1507 = [_t1504, _t1505, _t1506];
      real _t1508 = prim •00CE<$[3]; $[3]; $[]> (_t1507, refPos1206);
      real _t1509 = prim -0026<$[]> (_t1503, _t1508);
      real _t150A = -0.1e1;
      real _t150B = 0.e0;
      real _t150C = 0.e0;
      vec3 _t150D = [_t150A, _t150B, _t150C];
      real _t150E = prim •00CE<$[3]; $[3]; $[]> (_t150D, dPos1207);
      faceTime140A = prim /0055 (_t1509, _t150E);
    }
  }
  real _t150F = -0.5e0;
  real _t1510 = 0.e0;
  real _t1511 = -0.1e1;
  real _t1512 = 0.e0;
  vec3 _t1513 = [_t1510, _t1511, _t1512];
  real _t1514 = prim •00CE<$[3]; $[3]; $[]> (_t1513, refPos1206);
  real _t1515 = prim -0026<$[]> (_t150F, _t1514);
  real _t1516 = 0.e0;
  real _t1517 = -0.1e1;
  real _t1518 = 0.e0;
  vec3 _t1519 = [_t1516, _t1517, _t1518];
  real _t151A = prim •00CE<$[3]; $[3]; $[]> (_t1519, dPos1207);
  real _t151B = prim /0055 (_t1515, _t151A);
  real _t151C = -0.1e-15;
  bool _t151D = prim >=007E (_t151B, _t151C);
  real _t151E = -0.5e0;
  real _t151F = 0.e0;
  real _t1520 = -0.1e1;
  real _t1521 = 0.e0;
  vec3 _t1522 = [_t151F, _t1520, _t1521];
  real _t1523 = prim •00CE<$[3]; $[3]; $[]> (_t1522, refPos1206);
  real _t1524 = prim -0026<$[]> (_t151E, _t1523);
  real _t1525 = 0.e0;
  real _t1526 = -0.1e1;
  real _t1527 = 0.e0;
  vec3 _t1528 = [_t1525, _t1526, _t1527];
  real _t1529 = prim •00CE<$[3]; $[3]; $[]> (_t1528, dPos1207);
  real _t152A = prim /0055 (_t1524, _t1529);
  bool _t152B = prim >0080 (time1408, _t152A);
  real _t152C = 0.e0;
  real _t152D = -0.1e1;
  real _t152E = 0.e0;
  vec3 _t152F = [_t152C, _t152D, _t152E];
  real _t1530 = prim •00CE<$[3]; $[3]; $[]> (_t152F, dPos1207);
  real _t1531 = prim |()|00B5<$[]> (_t1530);
  real _t1532 = 0.1e-20;
  bool _t1533 = prim >=007E (_t1531, _t1532);
  bool _t1534 = prim $and01C4 (_t152B, _t1533);
  bool _t1535 = prim $and01C4 (_t151D, _t1534);
  if _t1535 {
    int _t1536 = 4;
    bool _t1537 = prim !=0086 (i1407, _t1536);
    if _t1537 {
      real _t1538 = -0.5e0;
      real _t1539 = 0.e0;
      real _t153A = -0.1e1;
      real _t153B = 0.e0;
      vec3 _t153C = [_t1539, _t153A, _t153B];
      real _t153D = prim •00CE<$[3]; $[3]; $[]> (_t153C, refPos1206);
      real _t153E = prim -0026<$[]> (_t1538, _t153D);
      real _t153F = 0.e0;
      real _t1540 = -0.1e1;
      real _t1541 = 0.e0;
      vec3 _t1542 = [_t153F, _t1540, _t1541];
      real _t1543 = prim •00CE<$[3]; $[3]; $[]> (_t1542, dPos1207);
      time1408 = prim /0055 (_t153E, _t1543);
      face1409 = 4;
    } else {
      real _t1544 = -0.5e0;
      real _t1545 = 0.e0;
      real _t1546 = -0.1e1;
      real _t1547 = 0.e0;
      vec3 _t1548 = [_t1545, _t1546, _t1547];
      real _t1549 = prim •00CE<$[3]; $[3]; $[]> (_t1548, refPos1206);
      real _t154A = prim -0026<$[]> (_t1544, _t1549);
      real _t154B = 0.e0;
      real _t154C = -0.1e1;
      real _t154D = 0.e0;
      vec3 _t154E = [_t154B, _t154C, _t154D];
      real _t154F = prim •00CE<$[3]; $[3]; $[]> (_t154E, dPos1207);
      faceTime140A = prim /0055 (_t154A, _t154F);
    }
  }
  real _t1550 = -0.5e0;
  real _t1551 = 0.1e1;
  real _t1552 = 0.e0;
  real _t1553 = -0.e0;
  vec3 _t1554 = [_t1551, _t1552, _t1553];
  real _t1555 = prim •00CE<$[3]; $[3]; $[]> (_t1554, refPos1206);
  real _t1556 = prim -0026<$[]> (_t1550, _t1555);
  real _t1557 = 0.1e1;
  real _t1558 = 0.e0;
  real _t1559 = -0.e0;
  vec3 _t155A = [_t1557, _t1558, _t1559];
  real _t155B = prim •00CE<$[3]; $[3]; $[]> (_t155A, dPos1207);
  real _t155C = prim /0055 (_t1556, _t155B);
  real _t155D = -0.1e-15;
  bool _t155E = prim >=007E (_t155C, _t155D);
  real _t155F = -0.5e0;
  real _t1560 = 0.1e1;
  real _t1561 = 0.e0;
  real _t1562 = -0.e0;
  vec3 _t1563 = [_t1560, _t1561, _t1562];
  real _t1564 = prim •00CE<$[3]; $[3]; $[]> (_t1563, refPos1206);
  real _t1565 = prim -0026<$[]> (_t155F, _t1564);
  real _t1566 = 0.1e1;
  real _t1567 = 0.e0;
  real _t1568 = -0.e0;
  vec3 _t1569 = [_t1566, _t1567, _t1568];
  real _t156A = prim •00CE<$[3]; $[3]; $[]> (_t1569, dPos1207);
  real _t156B = prim /0055 (_t1565, _t156A);
  bool _t156C = prim >0080 (time1408, _t156B);
  real _t156D = 0.1e1;
  real _t156E = 0.e0;
  real _t156F = -0.e0;
  vec3 _t1570 = [_t156D, _t156E, _t156F];
  real _t1571 = prim •00CE<$[3]; $[3]; $[]> (_t1570, dPos1207);
  real _t1572 = prim |()|00B5<$[]> (_t1571);
  real _t1573 = 0.1e-20;
  bool _t1574 = prim >=007E (_t1572, _t1573);
  bool _t1575 = prim $and01C4 (_t156C, _t1574);
  bool _t1576 = prim $and01C4 (_t155E, _t1575);
  if _t1576 {
    int _t1577 = 5;
    bool _t1578 = prim !=0086 (i1407, _t1577);
    if _t1578 {
      real _t1579 = -0.5e0;
      real _t157A = 0.1e1;
      real _t157B = 0.e0;
      real _t157C = -0.e0;
      vec3 _t157D = [_t157A, _t157B, _t157C];
      real _t157E = prim •00CE<$[3]; $[3]; $[]> (_t157D, refPos1206);
      real _t157F = prim -0026<$[]> (_t1579, _t157E);
      real _t1580 = 0.1e1;
      real _t1581 = 0.e0;
      real _t1582 = -0.e0;
      vec3 _t1583 = [_t1580, _t1581, _t1582];
      real _t1584 = prim •00CE<$[3]; $[3]; $[]> (_t1583, dPos1207);
      time1408 = prim /0055 (_t157F, _t1584);
      face1409 = 5;
    } else {
      real _t1585 = -0.5e0;
      real _t1586 = 0.1e1;
      real _t1587 = 0.e0;
      real _t1588 = -0.e0;
      vec3 _t1589 = [_t1586, _t1587, _t1588];
      real _t158A = prim •00CE<$[3]; $[3]; $[]> (_t1589, refPos1206);
      real _t158B = prim -0026<$[]> (_t1585, _t158A);
      real _t158C = 0.1e1;
      real _t158D = 0.e0;
      real _t158E = -0.e0;
      vec3 _t158F = [_t158C, _t158D, _t158E];
      real _t1590 = prim •00CE<$[3]; $[3]; $[]> (_t158F, dPos1207);
      faceTime140A = prim /0055 (_t158B, _t1590);
    }
  }
  int _t1591 = -1;
  bool _t1592 = prim !=0086 (face1409, _t1591);
  if _t1592 {
    real _t1593 = 0.e0;
    real _t1594 = prim max0125 (time1408, _t1593);
    real _t1595 = (real)face1409;
    vec2 _t1596 = [_t1594, _t1595];
    return _t1596;
  } else {
    real _t1597 = -inf;
    bool _t1598 = prim ==0084 (_t1597, faceTime140A);
    if _t1598 {
      real _t1599 = -0.1e1;
      real _t159A = -0.1e1;
      vec2 _t159B = [_t1599, _t159A];
      return _t159B;
    } else {
      real _t159C = (real)i1407;
      vec2 _t159D = [faceTime140A, _t159C];
      return _t159D;
    }
  }
}
function Femdata: Mesh#0 domain159E (Femdata: Space arg0159F)
{
  Femdata: Mesh _t15A0 = extractFem(arg0159F, Mesh);
  return _t15A0;
}
function Femdata: Space#0 space15A1 (Femdata: FemFunc arg015A2)
{
  Femdata: Space _t15A3 = extractFem(arg015A2, Space);
  return _t15A3;
}
function Femdata: FuncCell#3 funcCell15A4 (Femdata: FemFunc arg015A5, Femdata: MeshCell arg115A6)
{
  int _t15A7 = extractFemItem(CellIndex(MeshCell), int, arg115A6);
  Femdata: FuncCell _t15A8 = loadFem(FuncCell, arg015A5, _t15A7);
  return _t15A8;
}
function real#1 atent15CD (real a015CE, real d15CF)
{
  real _t15D0 = 0.e0;
  real _t15D1 = 0.1e1;
  real _t15D2 = 0.15e1;
  real _t15D3 = 0.1e1;
  real _t15D4 = prim |()|00B5<$[]> (d15CF);
  real _t15D5 = prim /0055 (_t15D4, thick04EB);
  real _t15D6 = prim -0026<$[]> (_t15D3, _t15D5);
  real _t15D7 = prim *0034 (_t15D2, _t15D6);
  real _t15D8 = prim clamp0094<$[]> (_t15D0, _t15D1, _t15D7);
  real _t15D9 = prim *0034 (a015CE, _t15D8);
  return _t15D9;
}
function vec3#1 fStep15DA (vec3 x15DB)
{
  field(3)[3] _t15DC = prim ∇00A8<#∞; %3> (F15B1);
  field(3)[3,3] _t15DD = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15DC);
  tensor[3,3] _t15DE = prim @00A5<#∞; %3; $[3,3]> (_t15DD, x15DB);
  vec3[3] E15DF = prim evecs00A0 (_t15DE);
  field(3)[3] _t15E0 = prim ∇00A8<#∞; %3> (F15B1);
  field(3)[3,3] _t15E1 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15E0);
  tensor[3,3] _t15E2 = prim @00A5<#∞; %3; $[3,3]> (_t15E1, x15DB);
  real[3] L15E3 = prim evals009F (_t15E2);
  int _t15E4 = 2;
  vec3 _t15E5 = prim $sub01C0<vec3; %3> (E15DF, _t15E4);
  int _t15E6 = 2;
  vec3 _t15E7 = prim $sub01C0<vec3; %3> (E15DF, _t15E6);
  tensor[3,3] _t15E8 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t15E5, _t15E7);
  int _t15E9 = 2;
  real _t15EA = prim $sub01C0<real; %3> (L15E3, _t15E9);
  tensor[3,3] _t15EB = prim /0057<$[3,3]> (_t15E8, _t15EA);
  int _t15EC = 1;
  vec3 _t15ED = prim $sub01C0<vec3; %3> (E15DF, _t15EC);
  int _t15EE = 1;
  vec3 _t15EF = prim $sub01C0<vec3; %3> (E15DF, _t15EE);
  tensor[3,3] _t15F0 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t15ED, _t15EF);
  int _t15F1 = 1;
  real _t15F2 = prim $sub01C0<real; %3> (L15E3, _t15F1);
  tensor[3,3] _t15F3 = prim /0057<$[3,3]> (_t15F0, _t15F2);
  tensor[3,3] _t15F4 = prim +0017<$[3,3]> (_t15EB, _t15F3);
  tensor[3,3] _t15F5 = prim unary -008B<$[3,3]> (_t15F4);
  field(3)[3] _t15F6 = prim ∇00A8<#∞; %3> (F15B1);
  vec3 _t15F7 = prim @00A5<#∞; %3; $[3]> (_t15F6, x15DB);
  vec3 _t15F8 = prim •00CE<$[3,3]; $[3]; $[3]> (_t15F5, _t15F7);
  return _t15F8;
}
function real#1 fStrength15F9 (vec3 x15FA)
{
  field(3)[3] _t15FB = prim ∇00A8<#∞; %3> (F15B1);
  field(3)[3,3] _t15FC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15FB);
  tensor[3,3] _t15FD = prim @00A5<#∞; %3; $[3,3]> (_t15FC, x15FA);
  real[3] _t15FE = prim evals009F (_t15FD);
  int _t15FF = 1;
  real _t1600 = prim $sub01C0<real; %3> (_t15FE, _t15FF);
  real _t1601 = prim unary -008B<$[]> (_t1600);
  field(3)[3] _t1602 = prim ∇00A8<#∞; %3> (F15B1);
  vec3 _t1603 = prim @00A5<#∞; %3; $[3]> (_t1602, x15FA);
  real _t1604 = prim |()|00B5<$[3]> (_t1603);
  real _t1605 = prim +0017<$[]> (fBias04EE, _t1604);
  real _t1606 = prim /0055 (_t1601, _t1605);
  return _t1606;
}
function bool#1 fTest1607 (vec3 x1608)
{
  bool _t1609 = true;
  return _t1609;
}
function real#1 fMask160A (vec3 x160B)
{
  real _t160C = 0.1e1;
  return _t160C;
}
function bool#1 posTest160D (vec3 x160E)
{
  bool _t160F;
  Femdata: RefCell _t1610 = func refcell053F (block04C3);
  real _t1611 = 0.1e-8;
  bool _t1612 = extractFemItemN((_t1610, x160E, _t1611),InsideInsert(File=checkInside.in)(Mesh),);
  if _t1612 {
    bool _t1613;
    real _t1614 = func fStrength15F9 (x160E);
    bool _t1615 = prim >0080 (_t1614, fStrTh04EC);
    if _t1615 {
      bool _t1616;
      real _t1617 = func fMask160A (x160E);
      bool _t1618 = prim >=007E (_t1617, fMaskTh04ED);
      if _t1618 {
        _t1616 = func fTest1607 (x160E);
      } else {
        _t1616 = false;
      }
      _t1613 = _t1616;
    } else {
      _t1613 = false;
    }
    _t160F = _t1613;
  } else {
    _t160F = false;
  }
  return _t160F;
}
globalInit {
  int _t04C7 = 0;
  int _t04C5 = 1;
  int _t04C9 = extractFemItem(NumCell(Mesh), int, block04C3);
  int _t04C8 = prim -0024 (_t04C9, _t04C5);
  int[] _t04CC = prim $range01C3 (_t04C7, _t04C8);
  Femdata: MeshCell[] _t04CD = {};
  foreach _t04CB in _t04CC {
    Femdata: MeshCell _t04CE = loadFem(MeshCell, block04C3, _t04CB);
    _t04CD = prim @0010<Femdata: MeshCell> (_t04CD, _t04CE);
  }
  0cell_block04C4 = _t04CD;
  space04CF = loadFem(Space, 0space04CF_intermedateGlobal04D0, block04C3);
  U04D1 = loadFem(FemFunc, 0U04D1_intermedateGlobal04D2, space04CF);
  c115A9 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04C4, cellChoice04D3);
  Femdata: FuncCell _t15AA = func funcCell15A4 (U04D1, c115A9);
  Femdata: FemFunc _t15AB = extractFem(_t15AA, FemFunc);
  Femdata: FuncCell _t15AC = func funcCell15A4 (U04D1, c115A9);
  Femdata: FemFunc _t15AD = extractFem(_t15AC, FemFunc);
  Femdata: Space _t15AE = extractFem(_t15AD, Space);
  Femdata: FuncCell _t15AF = func funcCell15A4 (U04D1, c115A9);
  int _t15B0 = extractFemItem(CellIndex(FuncCell), int, _t15AF);
  F15B1 = femField(_t15AB,_t15B0,field(3)[],refField,);
  kernel _t15B2 = tent;
  IMAGE1D<double[3]> img15B3 = clamp(cmap04D5);
  CM15B4 = prim ⊛0074<#0; %1; $[3]> (_t15B2, img15B3);
  C15B5 = F15B1;
  vec3 _t15B6 = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camN15B7 = prim normalize0137<$[3]> (_t15B6);
  vec3 _t15B8 = prim ×00BE (camN15B7, camUp04DE);
  camU15B9 = prim normalize0137<$[3]> (_t15B8);
  camV15BA = prim ×00BE (camN15B7, camU15B9);
  vec3 _t15BB = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camDist15BC = prim |()|00B5<$[3]> (_t15BB);
  real _t15BD = 0.314159265358979323846264338327950288e1;
  real _t15BE = prim *0034 (camFOV04E4, _t15BD);
  real _t15BF = 0.36e3;
  real _t15C0 = prim /0055 (_t15BE, _t15BF);
  real _t15C1 = prim tan0179 (_t15C0);
  camVmax15C2 = prim *0034 (_t15C1, camDist15BC);
  real _t15C3 = (real)iresU04E6;
  real _t15C4 = prim *0034 (camVmax15C2, _t15C3);
  real _t15C5 = (real)iresV04E7;
  camUmax15C6 = prim /0055 (_t15C4, _t15C5);
  camNearVsp15C7 = prim +0017<$[]> (camNear04E2, camDist15BC);
  camFarVsp15C8 = prim +0017<$[]> (camFar04E3, camDist15BC);
  tensor[3,3] _t15C9 = [camU15B9, camV15BA, camN15B7];
  tensor[3,3] _t15CA = prim transpose0145<%3; %3> (_t15C9);
  vec3 _t15CB = prim normalize0137<$[3]> (litdir04FE);
  litwsp15CC = prim •00CE<$[3,3]; $[3]; $[3]> (_t15CA, _t15CB);
}
strand ray (int ui1619, int vi161A) {
  real rayU161B;
  real rayV1622;
  real rayN1629;
  vec3 UV162A;
  vec3 rayOrig162D;
  vec3 rayVec1632;
  real alphaFix1637;
  vec3 eyeDir163A;
  real phKa163C;
  real phKd163D;
  real phKs163E;
  real phSp163F;
  output vec4 rgba1640;
  output real raw1645;
  vec3 rgb1646;
  real transp164A;
  {
    real _t161C = prim unary -008B<$[]> (camUmax15C6);
    real _t161D = -0.5e0;
    real _t161E = (real)ui1619;
    real _t161F = (real)iresU04E6;
    real _t1620 = 0.5e0;
    real _t1621 = prim -0026<$[]> (_t161F, _t1620);
    rayU161B = prim lerp0098<$[]> (_t161C, camUmax15C6, _t161D, _t161E, _t1621);
    real _t1623 = prim unary -008B<$[]> (camVmax15C2);
    real _t1624 = -0.5e0;
    real _t1625 = (real)vi161A;
    real _t1626 = (real)iresV04E7;
    real _t1627 = 0.5e0;
    real _t1628 = prim -0026<$[]> (_t1626, _t1627);
    rayV1622 = prim lerp0098<$[]> (_t1623, camVmax15C2, _t1624, _t1625, _t1628);
    rayN1629 = camNearVsp15C7;
    vec3 _t162B = prim *0036<$[3]> (rayU161B, camU15B9);
    vec3 _t162C = prim *0036<$[3]> (rayV1622, camV15BA);
    UV162A = prim +0017<$[3]> (_t162B, _t162C);
    vec3 _t162E;
    if camOrtho04E5 {
      _t162E = UV162A;
    } else {
      real _t162F = 0.e0;
      real _t1630 = 0.e0;
      real _t1631 = 0.e0;
      _t162E = [_t162F, _t1630, _t1631];
    }
    rayOrig162D = prim +0017<$[3]> (camEye04D6, _t162E);
    vec3 _t1633;
    if camOrtho04E5 {
      real _t1634 = 0.e0;
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      _t1633 = [_t1634, _t1635, _t1636];
    } else {
      _t1633 = prim /0057<$[3]> (UV162A, camDist15BC);
    }
    rayVec1632 = prim +0017<$[3]> (camN15B7, _t1633);
    real _t1638 = prim |()|00B5<$[3]> (rayVec1632);
    real _t1639 = prim *0034 (_t1638, rayStep04E8);
    alphaFix1637 = prim /0055 (_t1639, refStep04E9);
    vec3 _t163B = prim normalize0137<$[3]> (rayVec1632);
    eyeDir163A = prim unary -008B<$[3]> (_t163B);
    phKa163C = phong04F1[0];
    phKd163D = phong04F1[1];
    phKs163E = phong04F1[2];
    phSp163F = phong04F1[3];
    real _t1641 = 0.e0;
    real _t1642 = 0.e0;
    real _t1643 = 0.e0;
    real _t1644 = 0.e0;
    rgba1640 = [_t1641, _t1642, _t1643, _t1644];
    raw1645 = 0.e0;
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    rgb1646 = [_t1647, _t1648, _t1649];
    transp164A = 0.1e1;
  }
  update
  {
    rayN1629 = prim +0017<$[]> (rayN1629, rayStep04E8);
    bool _t164B = prim >0080 (rayN1629, camFarVsp15C8);
    if _t164B {
      stabilize;
    }
    vec3 _t164C = prim *0036<$[3]> (rayN1629, rayVec1632);
    vec3 pos164D = prim +0017<$[3]> (rayOrig162D, _t164C);
    bool _t164E = func posTest160D (pos164D);
    bool _t164F = prim !00BC (_t164E);
    if _t164F {
      continue;
    }
    vec3 step1650 = func fStep15DA (pos164D);
    real _t1651 = prim |()|00B5<$[3]> (step1650);
    real aa1652 = func atent15CD (maxAlpha04EF, _t1651);
    real _t1653 = 0.e0;
    bool _t1654 = prim ==0084 (aa1652, _t1653);
    if _t1654 {
      continue;
    }
    real _t1655 = 0.1e1;
    real _t1656 = 0.1e1;
    real _t1657 = prim -0026<$[]> (_t1656, aa1652);
    real _t1658 = prim ^0069 (_t1657, alphaFix1637);
    aa1652 = prim -0026<$[]> (_t1655, _t1658);
    vec3 _t1659 = prim normalize0137<$[3]> (step1650);
    vec3 snorm165A = prim unary -008B<$[3]> (_t1659);
    real _t165B = prim •00CE<$[3]; $[3]; $[]> (snorm165A, litwsp15CC);
    int _t165C = 2;
    real dcomp165D = prim ^0068 (_t165B, _t165C);
    real scomp165E = 0.e0;
    real _t165F = 0.e0;
    bool _t1660 = prim !=0088 (phKs163E, _t165F);
    if _t1660 {
      vec3 _t1661 = prim +0017<$[3]> (eyeDir163A, litwsp15CC);
      vec3 _t1662 = prim normalize0137<$[3]> (_t1661);
      real _t1663 = prim •00CE<$[3]; $[3]; $[]> (snorm165A, _t1662);
      real _t1664 = prim |()|00B5<$[]> (_t1663);
      scomp165E = prim ^0069 (_t1664, phSp163F);
    }
    vec3 dcol1665 = prim lerp0098<$[3]> (mcNear04F6, mcFar04FA, camNearVsp15C7, rayN1629, camFarVsp15C8);
    real cmin1666 = cminmax0502[0];
    real cmax1667 = cminmax0502[1];
    real _t1668 = 0.1e1;
    real _t1669 = 0.1e1;
    real _t166A = 0.1e1;
    vec3 mcol166B = [_t1668, _t1669, _t166A];
    bool _t166C = prim !=0088 (cmin1666, cmax1667);
    if _t166C {
      real _t166D = 0.e0;
      real _t166E = 0.1e1;
      vec3 _t166F = prim +0017<$[3]> (pos164D, step1650);
      real _t1670 = prim @00A5<#∞; %3; $[]> (C15B5, _t166F);
      real _t1671 = prim lerp0098<$[]> (_t166D, _t166E, cmin1666, _t1670, cmax1667);
      mcol166B = prim @00A5<#0; %1; $[3]> (CM15B4, _t1671);
    }
    real _t1672 = prim *0034 (transp164A, aa1652);
    real _t1673 = prim *0034 (phKd163D, dcomp165D);
    real _t1674 = prim +0017<$[]> (phKa163C, _t1673);
    vec3 _t1675 = prim modulate0129<%3> (dcol1665, mcol166B);
    vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
    real _t1677 = prim *0034 (phKs163E, scomp165E);
    real _t1678 = 0.1e1;
    real _t1679 = 0.1e1;
    real _t167A = 0.1e1;
    vec3 _t167B = [_t1678, _t1679, _t167A];
    vec3 _t167C = prim *0036<$[3]> (_t1677, _t167B);
    vec3 _t167D = prim +0017<$[3]> (_t1676, _t167C);
    vec3 _t167E = prim *0036<$[3]> (_t1672, _t167D);
    rgb1646 = prim +0017<$[3]> (rgb1646, _t167E);
    real _t167F = 0.1e1;
    real _t1680 = prim -0026<$[]> (_t167F, aa1652);
    transp164A = prim *0034 (transp164A, _t1680);
    bool _t1681 = prim <007A (transp164A, transp004EA);
    if _t1681 {
      transp164A = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1682 = 0.1e1;
    bool _t1683 = prim <007A (transp164A, _t1682);
    if _t1683 {
      real _t1684 = 0.1e1;
      real aa1685 = prim -0026<$[]> (_t1684, transp164A);
      real _t1686 = rgb1646[0];
      real _t1687 = prim /0055 (_t1686, aa1685);
      real _t1688 = rgb1646[1];
      real _t1689 = prim /0055 (_t1688, aa1685);
      real _t168A = rgb1646[2];
      real _t168B = prim /0055 (_t168A, aa1685);
      rgba1640 = [_t1687, _t1689, _t168B, aa1685];
    }
  }
}
grid(2) {
  int _t168C = 0;
  int _t168D = 1;
  int _t168E = prim -0024 (iresV04E7, _t168D);
  int[] _t168F = prim $range01C3 (_t168C, _t168E);
  foreach vi1695 in _t168F {
    int _t1690 = 0;
    int _t1691 = 1;
    int _t1692 = prim -0024 (iresU04E6, _t1691);
    int[] _t1693 = prim $range01C3 (_t1690, _t1692);
    foreach ui1694 in _t1693 {
      new ray (ui1694, vi1695);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04C3;
input FemData:Space 0space04CF_intermedateGlobal04D0;
input FemData:FemFunc 0U04D1_intermedateGlobal04D2;
input int cellChoice04D3;
input image(1)[3] cmap04D5 = image("cmap.nrrd");
input vec3 camEye04D6 = <default>;
input vec3 camAt04DA = <default>;
input vec3 camUp04DE = <default>;
input real camNear04E2 = <default>;
input real camFar04E3 = <default>;
input real camFOV04E4 = <default>;
input bool camOrtho04E5 = <default>;
input int iresU04E6 = <default>;
input int iresV04E7 = <default>;
input real rayStep04E8 = <default>;
input real refStep04E9 = <default>;
input real transp004EA = <default>;
input real thick04EB = <default>;
input real fStrTh04EC = <default>;
input real fMaskTh04ED = <default>;
input real fBias04EE = <default>;
input real maxAlpha04EF = <default>;
input bool light04F0 = <default>;
input vec4 phong04F1 = <default>;
input vec3 mcNear04F6 = <default>;
input vec3 mcFar04FA = <default>;
input vec3 litdir04FE = <default>;
input vec2 cminmax0502 = <default>;
constants {
  real _t04D7 = 0.e0;
  real _t04D8 = -0.2e1;
  real _t04D9 = 0.e0;
  camEye04D6 = [_t04D7, _t04D8, _t04D9];
  real _t04DB = 0.e0;
  real _t04DC = 0.e0;
  real _t04DD = 0.e0;
  camAt04DA = [_t04DB, _t04DC, _t04DD];
  real _t04DF = 0.e0;
  real _t04E0 = 0.e0;
  real _t04E1 = 0.1e1;
  camUp04DE = [_t04DF, _t04E0, _t04E1];
  camNear04E2 = -0.4e1;
  camFar04E3 = 0.4e1;
  camFOV04E4 = 0.1e2;
  camOrtho04E5 = false;
  iresU04E6 = 100;
  iresV04E7 = 100;
  rayStep04E8 = 0.1e-3;
  refStep04E9 = 0.1e-3;
  transp004EA = 0.5e-2;
  thick04EB = 0.1e-1;
  fStrTh04EC = 0.e0;
  fMaskTh04ED = 0.e0;
  fBias04EE = 0.1e0;
  maxAlpha04EF = 0.1e1;
  light04F0 = false;
  real _t04F2 = 0.1e0;
  real _t04F3 = 0.7e0;
  real _t04F4 = 0.2e0;
  real _t04F5 = 0.1e3;
  phong04F1 = [_t04F2, _t04F3, _t04F4, _t04F5];
  real _t04F7 = 0.1e1;
  real _t04F8 = 0.1e1;
  real _t04F9 = 0.1e1;
  mcNear04F6 = [_t04F7, _t04F8, _t04F9];
  real _t04FB = 0.1e1;
  real _t04FC = 0.1e1;
  real _t04FD = 0.1e1;
  mcFar04FA = [_t04FB, _t04FC, _t04FD];
  real _t04FF = 0.e0;
  real _t0500 = -0.1e1;
  real _t0501 = 0.e0;
  litdir04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.e0;
  real _t0504 = 0.e0;
  cminmax0502 = [_t0503, _t0504];
}
global Femdata: MeshCell[] 0cell_block04C4;
global Femdata: Space space04CF;
global Femdata: FemFunc U04D1;
global Femdata: MeshCell c115A9;
global field(3)[] F15B1;
global field#0(1)[3] CM15B4;
global field(3)[] C15B5;
global vec3 camN15B7;
global vec3 camU15B9;
global vec3 camV15BA;
global real camDist15BC;
global real camVmax15C2;
global real camUmax15C6;
global real camNearVsp15C7;
global real camFarVsp15C8;
global vec3 litwsp15CC;
function bool#0 !=0505 (Femdata: MeshCell cell10506, Femdata: MeshCell cell10507)
{
  int _t0508 = extractFemItem(CellIndex(Mesh), int, cell10506);
  int _t0509 = extractFemItem(CellIndex(Mesh), int, cell10507);
  bool _t050A = prim !=0086 (_t0508, _t0509);
  return _t050A;
}
function bool#0 ==050B (Femdata: MeshCell cell10506, Femdata: MeshCell cell10507)
{
  int _t050C = extractFemItem(CellIndex(Mesh), int, cell10506);
  int _t050D = extractFemItem(CellIndex(Mesh), int, cell10507);
  bool _t050E = prim ==0082 (_t050C, _t050D);
  return _t050E;
}
function Femdata: MeshPos#0 findPos050F (Femdata: Mesh mesh0510, vec3 pos0511)
{
  real _t0512 = 0.e0;
  real _t0513 = 0.e0;
  real _t0514 = 0.e0;
  xn0515 = [_t0512, _t0513, _t0514];
  newtonInt0516 = 0;
  cellInt0517 = extractFemItem(StartCell(Mesh), int, mesh0510);
  int _t0518 = extractFemItem(NumCell(Mesh), int, mesh0510);
  int _t0519 = 1;
  numCell051A = prim -0024 (_t0518, _t0519);
  int _t051B = 0;
  int _t051C = 2;
  int _t051D = 1;
  int _t051E = prim +0015 (_t051C, _t051D);
  int _t051F = prim *0033 (_t051E, numCell051A);
  int[] _t0520 = prim $range01C3 (_t051B, _t051F);
  foreach itter053B in _t0520 {
    field(3)[3] _t0521 = femField(mesh0510,cellInt0517,field(3)[3],Transform,);
    field(3)[3,3] _t0522 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0521);
    field(3)[3,3] _t0523 = prim inv015E<#∞; %3> (_t0522);
    real _t0524 = 0.e0;
    real _t0525 = 0.e0;
    real _t0526 = 0.e0;
    vec3 _t0527 = [_t0524, _t0525, _t0526];
    A0528 = prim @00A5<#∞; %3; $[3,3]> (_t0523, _t0527);
    field(3)[3] _t0529 = femField(mesh0510,cellInt0517,field(3)[3],Transform,);
    field(3)[3] _t052A = prim -002E<#∞; %3; $[3]> (_t0529, pos0511);
    field(3)[3] _t052B = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0528, _t052A);
    delta052C = prim @00A5<#∞; %3; $[3]> (_t052B, xn0515);
    xn0515 = prim -0026<$[3]> (xn0515, delta052C);
    real _t052D = 0.1e-7;
    real _t052E = 0.1e-7;
    real _t052F = prim *0034 (_t052D, _t052E);
    real _t0530 = prim •00CE<$[3]; $[3]; $[]> (delta052C, delta052C);
    bool _t0531 = prim >=007E (_t052F, _t0530);
    if _t0531 {
      real _t0532 = 0.1e-8;
      bool _t0533 = extractFemItemN((mesh0510, xn0515, _t0532),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0533 {
        Femdata: MeshPos _t0534 = extractFemItemN((mesh0510, cellInt0517, xn0515, pos0511),AllBuild(MeshPos),);
        return _t0534;
      }
    }
    int _t0535 = 1;
    newtonInt0516 = prim +0015 (newtonInt0516, _t0535);
    int _t0536 = 2;
    bool _t0537 = prim >=007D (newtonInt0516, _t0536);
    if _t0537 {
      newtonInt0516 = 0;
      bool _t0538 = prim >=007D (cellInt0517, numCell051A);
      if _t0538 {
        Femdata: MeshPos _t0539 = extractFemItemN((mesh0510),InvalidBuild(MeshPos),);
        return _t0539;
      } else {
        int _t053A = 1;
        cellInt0517 = prim +0015 (cellInt0517, _t053A);
      }
    }
  }
  string _t053C = "Bad end 2";
  string _t053D = "\n";
  print (_t053C, _t053D);
  Femdata: MeshPos _t053E = extractFemItemN((mesh0510),InvalidBuild(MeshPos),);
  return _t053E;
}
function Femdata: RefCell#1 refcell053F (Femdata: Mesh arg00540)
{
  Femdata: RefCell _t0541 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg00540);
  return _t0541;
}
function Femdata: MeshCell[]#0 cells0542 (Femdata: Mesh arg00543)
{
  Femdata: MeshCell[] _t0544 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00543);
  return _t0544;
}
function Femdata: MeshCell[]#0 cells0545 (Femdata: Mesh arg00543)
{
  int _t0546 = 0;
  int _t0547 = extractFemItem(NumCell(Mesh), int, arg00543);
  int[] _t0548 = prim $range01C3 (_t0546, _t0547);
  Femdata: MeshCell[] accum054B = {};
  foreach i0549 in _t0548 {
    Femdata: MeshCell _t054A = loadFem(MeshCell, arg00543, i0549);
    accum054B = prim @0010<Femdata: MeshCell> (accum054B, _t054A);
  }
  return accum054B;
}
function int#0 numCell054C (Femdata: Mesh arg00540)
{
  int _t054D = extractFemItem(NumCell(Mesh), int, arg00540);
  return _t054D;
}
function tensor[3,3,3,3]#0 mesh_t_transform_3054E (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t0552 = femField(mesh0551,cell0550,field(3)[3],Transform,);
  field(3)[3,3] _t0553 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0552);
  field(3)[3,3,3] _t0554 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0553);
  field(3)[3,3,3,3] _t0555 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0554);
  tensor[3,3,3,3] _t0556 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0555, pos054F);
  return _t0556;
}
function tensor[3,3,3]#0 mesh_t_transform_20557 (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t0558 = femField(mesh0551,cell0550,field(3)[3],Transform,);
  field(3)[3,3] _t0559 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0558);
  field(3)[3,3,3] _t055A = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0559);
  tensor[3,3,3] _t055B = prim @00A5<#∞; %3; $[3,3,3]> (_t055A, pos054F);
  return _t055B;
}
function tensor[3,3]#0 mesh_t_transform_1055C (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t055D = femField(mesh0551,cell0550,field(3)[3],Transform,);
  field(3)[3,3] _t055E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t055D);
  tensor[3,3] _t055F = prim @00A5<#∞; %3; $[3,3]> (_t055E, pos054F);
  return _t055F;
}
function vec3#2 mesh_t_transform_00560 (vec3 pos054F, int cell0550, Femdata: Mesh mesh0551)
{
  field(3)[3] _t0561 = femField(mesh0551,cell0550,field(3)[3],Transform,);
  vec3 _t0562 = prim @00A5<#∞; %3; $[3]> (_t0561, pos054F);
  return _t0562;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse0563 (vec3 pos0564, int cellInt0565, Femdata: Mesh mesh0566)
{
  real _t0567 = 0.e0;
  real _t0568 = 0.e0;
  real _t0569 = 0.e0;
  xn056A = [_t0567, _t0568, _t0569];
  field(3)[3] _t056B = femField(mesh0566,cellInt0565,field(3)[3],Transform,);
  field(3)[3,3] _t056C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t056B);
  field(3)[3,3] _t056D = prim inv015E<#∞; %3> (_t056C);
  real _t056E = 0.e0;
  real _t056F = 0.e0;
  real _t0570 = 0.e0;
  vec3 _t0571 = [_t056E, _t056F, _t0570];
  A0572 = prim @00A5<#∞; %3; $[3,3]> (_t056D, _t0571);
  int _t0573 = 0;
  int _t0574 = 2;
  int[] _t0575 = prim $range01C3 (_t0573, _t0574);
  foreach itter0583 in _t0575 {
    field(3)[3] _t0576 = femField(mesh0566,cellInt0565,field(3)[3],Transform,);
    field(3)[3] _t0577 = prim -002E<#∞; %3; $[3]> (_t0576, pos0564);
    field(3)[3] _t0578 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0572, _t0577);
    delta0579 = prim @00A5<#∞; %3; $[3]> (_t0578, xn056A);
    xn056A = prim -0026<$[3]> (xn056A, delta0579);
    real _t057A = 0.1e-7;
    real _t057B = 0.1e-7;
    real _t057C = prim *0034 (_t057A, _t057B);
    real _t057D = prim •00CE<$[3]; $[3]; $[]> (delta0579, delta0579);
    bool _t057E = prim >=007E (_t057C, _t057D);
    if _t057E {
      real _t057F = 0.1e-8;
      bool _t0580 = extractFemItemN((mesh0566, xn056A, _t057F),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0580 {
        Femdata: MeshPos _t0581 = extractFemItemN((mesh0566, cellInt0565, xn056A, pos0564),AllBuild(MeshPos),);
        return _t0581;
      } else {
        Femdata: MeshPos _t0582 = extractFemItemN((mesh0566),InvalidBuild(MeshPos),);
        return _t0582;
      }
    }
  }
  Femdata: MeshPos _t0584 = extractFemItemN((mesh0566),InvalidBuild(MeshPos),);
  return _t0584;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos0585 (Femdata: MeshPos pos0586)
{
  bool _t0587 = extractFemItem(WorldTest(MeshPos), bool, pos0586);
  if _t0587 {
    vec3 _t0588 = extractFemItem(RefPos(MeshPos), vec3, pos0586);
    int _t0589 = extractFemItem(CellIndex(MeshPos), int, pos0586);
    Femdata: Mesh _t058A = extractFem(pos0586, Mesh);
    vec3 _t058B = func mesh_t_transform_00560 (_t0588, _t0589, _t058A);
    Femdata: MeshPos _t058C = extractFemItemN((pos0586, _t058B),NewWorld(MeshPos),);
    return _t058C;
  } else {
    return pos0586;
  }
}
function vec3#0 worldPos058D (Femdata: MeshPos pos0586)
{
  vec3 _t058E = extractFemItem(RefPos(MeshPos), vec3, pos0586);
  int _t058F = extractFemItem(CellIndex(MeshPos), int, pos0586);
  Femdata: Mesh _t0590 = extractFem(pos0586, Mesh);
  vec3 _t0591 = func mesh_t_transform_00560 (_t058E, _t058F, _t0590);
  return _t0591;
}
function Femdata: MeshPos#0 $exitPos0592 (Femdata: Mesh mesh0593, int cellId0594, vec3 refPos0595, vec3 dPos0596, real[2] time0597)
{
  int _t0598 = -1;
  real _t0599 = time0597[1];
  int _t059A = prim $r2i01B7 (_t0599);
  int[2] _t059C = func nextCell4059B (_t059A, cellId0594, mesh0593);
  int _t059D = 0;
  int _t059E = prim $sub01C0<int; %2> (_t059C, _t059D);
  bool _t059F = prim !=0086 (_t0598, _t059E);
  if _t059F {
    string _t05A0 = "face ";
    real _t05A1 = time0597[1];
    int _t05A2 = prim $r2i01B7 (_t05A1);
    string _t05A3 = " to ";
    real _t05A4 = time0597[1];
    int _t05A5 = prim $r2i01B7 (_t05A4);
    int[2] _t05A6 = func nextCell4059B (_t05A5, cellId0594, mesh0593);
    int _t05A7 = 1;
    int _t05A8 = prim $sub01C0<int; %2> (_t05A6, _t05A7);
    string _t05A9 = "\n";
    string _t05AA = "got: ";
    real _t05AB = 0.1e1;
    real _t05AC = 0.e0;
    real _t05AD = 0.e0;
    real _t05AE = 0.e0;
    vec4 _t05AF = [_t05AB, _t05AC, _t05AD, _t05AE];
    real _t05B0 = 0.e0;
    real _t05B1 = 0.1e1;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    vec4 _t05B4 = [_t05B0, _t05B1, _t05B2, _t05B3];
    real _t05B5 = 0.e0;
    real _t05B6 = 0.e0;
    real _t05B7 = 0.1e1;
    real _t05B8 = 0.e0;
    vec4 _t05B9 = [_t05B5, _t05B6, _t05B7, _t05B8];
    real _t05BA = 0.e0;
    real _t05BB = 0.e0;
    real _t05BC = 0.e0;
    real _t05BD = 0.1e1;
    vec4 _t05BE = [_t05BA, _t05BB, _t05BC, _t05BD];
    tensor[4,4] _t05BF = [_t05AF, _t05B4, _t05B9, _t05BE];
    real _t05C0 = 0.1e1;
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.e0;
    vec4 _t05C4 = [_t05C0, _t05C1, _t05C2, _t05C3];
    real _t05C5 = 0.e0;
    real _t05C6 = 0.1e1;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    vec4 _t05C9 = [_t05C5, _t05C6, _t05C7, _t05C8];
    real _t05CA = 0.e0;
    real _t05CB = 0.e0;
    real _t05CC = 0.1e1;
    real _t05CD = 0.1e1;
    vec4 _t05CE = [_t05CA, _t05CB, _t05CC, _t05CD];
    real _t05CF = 0.e0;
    real _t05D0 = 0.e0;
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    vec4 _t05D3 = [_t05CF, _t05D0, _t05D1, _t05D2];
    tensor[4,4] _t05D4 = [_t05C4, _t05C9, _t05CE, _t05D3];
    real _t05D5 = 0.e0;
    real _t05D6 = 0.1e1;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.e0;
    vec4 _t05D9 = [_t05D5, _t05D6, _t05D7, _t05D8];
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    real _t05DC = 0.1e1;
    real _t05DD = 0.e0;
    vec4 _t05DE = [_t05DA, _t05DB, _t05DC, _t05DD];
    real _t05DF = 0.1e1;
    real _t05E0 = -0.1e1;
    real _t05E1 = 0.e0;
    real _t05E2 = -0.5e0;
    vec4 _t05E3 = [_t05DF, _t05E0, _t05E1, _t05E2];
    real _t05E4 = 0.e0;
    real _t05E5 = 0.e0;
    real _t05E6 = 0.e0;
    real _t05E7 = 0.1e1;
    vec4 _t05E8 = [_t05E4, _t05E5, _t05E6, _t05E7];
    tensor[4,4] _t05E9 = [_t05D9, _t05DE, _t05E3, _t05E8];
    real _t05EA = 0.e0;
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    vec4 _t05EE = [_t05EA, _t05EB, _t05EC, _t05ED];
    real _t05EF = 0.e0;
    real _t05F0 = 0.1e1;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    vec4 _t05F3 = [_t05EF, _t05F0, _t05F1, _t05F2];
    real _t05F4 = 0.1e1;
    real _t05F5 = -0.1e1;
    real _t05F6 = 0.e0;
    real _t05F7 = -0.5e0;
    vec4 _t05F8 = [_t05F4, _t05F5, _t05F6, _t05F7];
    real _t05F9 = 0.e0;
    real _t05FA = 0.e0;
    real _t05FB = 0.e0;
    real _t05FC = 0.1e1;
    vec4 _t05FD = [_t05F9, _t05FA, _t05FB, _t05FC];
    tensor[4,4] _t05FE = [_t05EE, _t05F3, _t05F8, _t05FD];
    real _t05FF = 0.e0;
    real _t0600 = -0.1e1;
    real _t0601 = 0.e0;
    real _t0602 = 0.e0;
    vec4 _t0603 = [_t05FF, _t0600, _t0601, _t0602];
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    real _t0606 = -0.1e1;
    real _t0607 = 0.e0;
    vec4 _t0608 = [_t0604, _t0605, _t0606, _t0607];
    real _t0609 = 0.1e1;
    real _t060A = -0.1e1;
    real _t060B = 0.e0;
    real _t060C = -0.5e0;
    vec4 _t060D = [_t0609, _t060A, _t060B, _t060C];
    real _t060E = 0.e0;
    real _t060F = 0.e0;
    real _t0610 = 0.e0;
    real _t0611 = 0.1e1;
    vec4 _t0612 = [_t060E, _t060F, _t0610, _t0611];
    tensor[4,4] _t0613 = [_t0603, _t0608, _t060D, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    real _t0616 = 0.1e1;
    real _t0617 = 0.e0;
    vec4 _t0618 = [_t0614, _t0615, _t0616, _t0617];
    real _t0619 = 0.e0;
    real _t061A = -0.1e1;
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    vec4 _t061D = [_t0619, _t061A, _t061B, _t061C];
    real _t061E = 0.1e1;
    real _t061F = -0.1e1;
    real _t0620 = 0.e0;
    real _t0621 = -0.5e0;
    vec4 _t0622 = [_t061E, _t061F, _t0620, _t0621];
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.1e1;
    vec4 _t0627 = [_t0623, _t0624, _t0625, _t0626];
    tensor[4,4] _t0628 = [_t0618, _t061D, _t0622, _t0627];
    tensor[4,4][6] _t0629 = {_t05BF, _t05D4, _t05E9, _t05FE, _t0613, _t0628};
    real _t062A = 0.1e1;
    real _t062B = 0.e0;
    real _t062C = 0.e0;
    real _t062D = 0.e0;
    vec4 _t062E = [_t062A, _t062B, _t062C, _t062D];
    real _t062F = 0.e0;
    real _t0630 = 0.1e1;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    vec4 _t0633 = [_t062F, _t0630, _t0631, _t0632];
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = 0.1e1;
    real _t0637 = -0.1e1;
    vec4 _t0638 = [_t0634, _t0635, _t0636, _t0637];
    real _t0639 = 0.e0;
    real _t063A = 0.e0;
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    vec4 _t063D = [_t0639, _t063A, _t063B, _t063C];
    tensor[4,4] _t063E = [_t062E, _t0633, _t0638, _t063D];
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    vec4 _t0643 = [_t063F, _t0640, _t0641, _t0642];
    real _t0644 = 0.e0;
    real _t0645 = 0.1e1;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    vec4 _t0648 = [_t0644, _t0645, _t0646, _t0647];
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.1e1;
    real _t064C = 0.e0;
    vec4 _t064D = [_t0649, _t064A, _t064B, _t064C];
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    real _t0650 = 0.e0;
    real _t0651 = 0.1e1;
    vec4 _t0652 = [_t064E, _t064F, _t0650, _t0651];
    tensor[4,4] _t0653 = [_t0643, _t0648, _t064D, _t0652];
    real _t0654 = 0.e0;
    real _t0655 = 0.1e1;
    real _t0656 = 0.e0;
    real _t0657 = 0.e0;
    vec4 _t0658 = [_t0654, _t0655, _t0656, _t0657];
    real _t0659 = 0.e0;
    real _t065A = 0.e0;
    real _t065B = 0.1e1;
    real _t065C = -0.1e1;
    vec4 _t065D = [_t0659, _t065A, _t065B, _t065C];
    real _t065E = 0.1e1;
    real _t065F = -0.1e1;
    real _t0660 = 0.e0;
    real _t0661 = -0.5e0;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    real _t0665 = 0.e0;
    real _t0666 = 0.1e1;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    tensor[4,4] _t0668 = [_t0658, _t065D, _t0662, _t0667];
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    real _t066B = -0.1e1;
    real _t066C = 0.1e1;
    vec4 _t066D = [_t0669, _t066A, _t066B, _t066C];
    real _t066E = 0.e0;
    real _t066F = 0.1e1;
    real _t0670 = 0.e0;
    real _t0671 = 0.e0;
    vec4 _t0672 = [_t066E, _t066F, _t0670, _t0671];
    real _t0673 = 0.1e1;
    real _t0674 = -0.1e1;
    real _t0675 = 0.e0;
    real _t0676 = -0.5e0;
    vec4 _t0677 = [_t0673, _t0674, _t0675, _t0676];
    real _t0678 = 0.e0;
    real _t0679 = 0.e0;
    real _t067A = 0.e0;
    real _t067B = 0.1e1;
    vec4 _t067C = [_t0678, _t0679, _t067A, _t067B];
    tensor[4,4] _t067D = [_t066D, _t0672, _t0677, _t067C];
    real _t067E = 0.e0;
    real _t067F = -0.1e1;
    real _t0680 = 0.e0;
    real _t0681 = 0.e0;
    vec4 _t0682 = [_t067E, _t067F, _t0680, _t0681];
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = -0.1e1;
    real _t0686 = 0.1e1;
    vec4 _t0687 = [_t0683, _t0684, _t0685, _t0686];
    real _t0688 = 0.1e1;
    real _t0689 = -0.1e1;
    real _t068A = 0.e0;
    real _t068B = -0.5e0;
    vec4 _t068C = [_t0688, _t0689, _t068A, _t068B];
    real _t068D = 0.e0;
    real _t068E = 0.e0;
    real _t068F = 0.e0;
    real _t0690 = 0.1e1;
    vec4 _t0691 = [_t068D, _t068E, _t068F, _t0690];
    tensor[4,4] _t0692 = [_t0682, _t0687, _t068C, _t0691];
    real _t0693 = 0.e0;
    real _t0694 = 0.e0;
    real _t0695 = 0.1e1;
    real _t0696 = -0.1e1;
    vec4 _t0697 = [_t0693, _t0694, _t0695, _t0696];
    real _t0698 = 0.e0;
    real _t0699 = -0.1e1;
    real _t069A = 0.e0;
    real _t069B = 0.e0;
    vec4 _t069C = [_t0698, _t0699, _t069A, _t069B];
    real _t069D = 0.1e1;
    real _t069E = -0.1e1;
    real _t069F = 0.e0;
    real _t06A0 = -0.5e0;
    vec4 _t06A1 = [_t069D, _t069E, _t069F, _t06A0];
    real _t06A2 = 0.e0;
    real _t06A3 = 0.e0;
    real _t06A4 = 0.e0;
    real _t06A5 = 0.1e1;
    vec4 _t06A6 = [_t06A2, _t06A3, _t06A4, _t06A5];
    tensor[4,4] _t06A7 = [_t0697, _t069C, _t06A1, _t06A6];
    tensor[4,4][6] _t06A8 = {_t063E, _t0653, _t0668, _t067D, _t0692, _t06A7};
    real _t06A9 = 0.1e1;
    real _t06AA = 0.e0;
    real _t06AB = 0.1e1;
    real _t06AC = 0.5e0;
    vec4 _t06AD = [_t06A9, _t06AA, _t06AB, _t06AC];
    real _t06AE = 0.1e1;
    real _t06AF = 0.e0;
    real _t06B0 = 0.e0;
    real _t06B1 = 0.e0;
    vec4 _t06B2 = [_t06AE, _t06AF, _t06B0, _t06B1];
    real _t06B3 = 0.e0;
    real _t06B4 = 0.1e1;
    real _t06B5 = 0.e0;
    real _t06B6 = 0.e0;
    vec4 _t06B7 = [_t06B3, _t06B4, _t06B5, _t06B6];
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    real _t06BA = 0.e0;
    real _t06BB = 0.1e1;
    vec4 _t06BC = [_t06B8, _t06B9, _t06BA, _t06BB];
    tensor[4,4] _t06BD = [_t06AD, _t06B2, _t06B7, _t06BC];
    real _t06BE = 0.1e1;
    real _t06BF = 0.e0;
    real _t06C0 = 0.1e1;
    real _t06C1 = 0.5e0;
    vec4 _t06C2 = [_t06BE, _t06BF, _t06C0, _t06C1];
    real _t06C3 = 0.1e1;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.e0;
    real _t06C6 = 0.e0;
    vec4 _t06C7 = [_t06C3, _t06C4, _t06C5, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = 0.1e1;
    real _t06CA = 0.e0;
    real _t06CB = 0.1e1;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = 0.e0;
    real _t06D0 = 0.1e1;
    vec4 _t06D1 = [_t06CD, _t06CE, _t06CF, _t06D0];
    tensor[4,4] _t06D2 = [_t06C2, _t06C7, _t06CC, _t06D1];
    real _t06D3 = 0.1e1;
    real _t06D4 = 0.e0;
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    vec4 _t06D7 = [_t06D3, _t06D4, _t06D5, _t06D6];
    real _t06D8 = 0.e0;
    real _t06D9 = 0.1e1;
    real _t06DA = 0.e0;
    real _t06DB = 0.e0;
    vec4 _t06DC = [_t06D8, _t06D9, _t06DA, _t06DB];
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    real _t06DF = 0.1e1;
    real _t06E0 = 0.e0;
    vec4 _t06E1 = [_t06DD, _t06DE, _t06DF, _t06E0];
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    real _t06E4 = 0.e0;
    real _t06E5 = 0.1e1;
    vec4 _t06E6 = [_t06E2, _t06E3, _t06E4, _t06E5];
    tensor[4,4] _t06E7 = [_t06D7, _t06DC, _t06E1, _t06E6];
    real _t06E8 = 0.e0;
    real _t06E9 = -0.1e1;
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    vec4 _t06EC = [_t06E8, _t06E9, _t06EA, _t06EB];
    real _t06ED = 0.1e1;
    real _t06EE = 0.e0;
    real _t06EF = 0.e0;
    real _t06F0 = 0.e0;
    vec4 _t06F1 = [_t06ED, _t06EE, _t06EF, _t06F0];
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    real _t06F4 = 0.1e1;
    real _t06F5 = 0.e0;
    vec4 _t06F6 = [_t06F2, _t06F3, _t06F4, _t06F5];
    real _t06F7 = 0.e0;
    real _t06F8 = 0.e0;
    real _t06F9 = 0.e0;
    real _t06FA = 0.1e1;
    vec4 _t06FB = [_t06F7, _t06F8, _t06F9, _t06FA];
    tensor[4,4] _t06FC = [_t06EC, _t06F1, _t06F6, _t06FB];
    real _t06FD = -0.1e1;
    real _t06FE = 0.e0;
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = 0.e0;
    real _t0703 = -0.1e1;
    real _t0704 = 0.e0;
    real _t0705 = 0.e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = 0.e0;
    real _t0708 = 0.e0;
    real _t0709 = 0.1e1;
    real _t070A = 0.e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    real _t070F = 0.1e1;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    tensor[4,4] _t0711 = [_t0701, _t0706, _t070B, _t0710];
    real _t0712 = 0.e0;
    real _t0713 = 0.1e1;
    real _t0714 = 0.e0;
    real _t0715 = 0.e0;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = -0.1e1;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    real _t071A = 0.e0;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    real _t071E = 0.1e1;
    real _t071F = 0.e0;
    vec4 _t0720 = [_t071C, _t071D, _t071E, _t071F];
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    vec4 _t0725 = [_t0721, _t0722, _t0723, _t0724];
    tensor[4,4] _t0726 = [_t0716, _t071B, _t0720, _t0725];
    tensor[4,4][6] _t0727 = {_t06BD, _t06D2, _t06E7, _t06FC, _t0711, _t0726};
    real _t0728 = 0.e0;
    real _t0729 = 0.1e1;
    real _t072A = 0.1e1;
    real _t072B = 0.5e0;
    vec4 _t072C = [_t0728, _t0729, _t072A, _t072B];
    real _t072D = 0.e0;
    real _t072E = 0.1e1;
    real _t072F = 0.e0;
    real _t0730 = 0.e0;
    vec4 _t0731 = [_t072D, _t072E, _t072F, _t0730];
    real _t0732 = -0.1e1;
    real _t0733 = 0.e0;
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.e0;
    real _t073A = 0.1e1;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    tensor[4,4] _t073C = [_t072C, _t0731, _t0736, _t073B];
    real _t073D = 0.e0;
    real _t073E = 0.1e1;
    real _t073F = 0.1e1;
    real _t0740 = 0.5e0;
    vec4 _t0741 = [_t073D, _t073E, _t073F, _t0740];
    real _t0742 = 0.e0;
    real _t0743 = 0.1e1;
    real _t0744 = 0.e0;
    real _t0745 = 0.e0;
    vec4 _t0746 = [_t0742, _t0743, _t0744, _t0745];
    real _t0747 = -0.1e1;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    real _t074A = 0.1e1;
    vec4 _t074B = [_t0747, _t0748, _t0749, _t074A];
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.e0;
    real _t074F = 0.1e1;
    vec4 _t0750 = [_t074C, _t074D, _t074E, _t074F];
    tensor[4,4] _t0751 = [_t0741, _t0746, _t074B, _t0750];
    real _t0752 = 0.e0;
    real _t0753 = 0.1e1;
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    vec4 _t0756 = [_t0752, _t0753, _t0754, _t0755];
    real _t0757 = -0.1e1;
    real _t0758 = 0.e0;
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    vec4 _t075B = [_t0757, _t0758, _t0759, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    real _t075E = 0.1e1;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = 0.e0;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.1e1;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    tensor[4,4] _t0766 = [_t0756, _t075B, _t0760, _t0765];
    real _t0767 = 0.1e1;
    real _t0768 = 0.e0;
    real _t0769 = 0.e0;
    real _t076A = 0.e0;
    vec4 _t076B = [_t0767, _t0768, _t0769, _t076A];
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    vec4 _t0770 = [_t076C, _t076D, _t076E, _t076F];
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    real _t0773 = 0.1e1;
    real _t0774 = 0.e0;
    vec4 _t0775 = [_t0771, _t0772, _t0773, _t0774];
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    real _t0779 = 0.1e1;
    vec4 _t077A = [_t0776, _t0777, _t0778, _t0779];
    tensor[4,4] _t077B = [_t076B, _t0770, _t0775, _t077A];
    real _t077C = 0.e0;
    real _t077D = -0.1e1;
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    real _t0781 = 0.1e1;
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    real _t0784 = 0.e0;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.1e1;
    real _t0789 = 0.e0;
    vec4 _t078A = [_t0786, _t0787, _t0788, _t0789];
    real _t078B = 0.e0;
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.1e1;
    vec4 _t078F = [_t078B, _t078C, _t078D, _t078E];
    tensor[4,4] _t0790 = [_t0780, _t0785, _t078A, _t078F];
    real _t0791 = -0.1e1;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.e0;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    real _t0796 = 0.e0;
    real _t0797 = -0.1e1;
    real _t0798 = 0.e0;
    real _t0799 = 0.e0;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.1e1;
    real _t079E = 0.e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = 0.e0;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.1e1;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    tensor[4,4] _t07A5 = [_t0795, _t079A, _t079F, _t07A4];
    tensor[4,4][6] _t07A6 = {_t073C, _t0751, _t0766, _t077B, _t0790, _t07A5};
    real _t07A7 = -0.1e1;
    real _t07A8 = 0.e0;
    real _t07A9 = 0.1e1;
    real _t07AA = 0.5e0;
    vec4 _t07AB = [_t07A7, _t07A8, _t07A9, _t07AA];
    real _t07AC = -0.1e1;
    real _t07AD = 0.e0;
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    vec4 _t07B0 = [_t07AC, _t07AD, _t07AE, _t07AF];
    real _t07B1 = 0.e0;
    real _t07B2 = -0.1e1;
    real _t07B3 = 0.e0;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.1e1;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    tensor[4,4] _t07BB = [_t07AB, _t07B0, _t07B5, _t07BA];
    real _t07BC = -0.1e1;
    real _t07BD = 0.e0;
    real _t07BE = 0.1e1;
    real _t07BF = 0.5e0;
    vec4 _t07C0 = [_t07BC, _t07BD, _t07BE, _t07BF];
    real _t07C1 = -0.1e1;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.e0;
    real _t07C4 = 0.e0;
    vec4 _t07C5 = [_t07C1, _t07C2, _t07C3, _t07C4];
    real _t07C6 = 0.e0;
    real _t07C7 = -0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.1e1;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.1e1;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    tensor[4,4] _t07D0 = [_t07C0, _t07C5, _t07CA, _t07CF];
    real _t07D1 = -0.1e1;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    vec4 _t07D5 = [_t07D1, _t07D2, _t07D3, _t07D4];
    real _t07D6 = 0.e0;
    real _t07D7 = -0.1e1;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.e0;
    vec4 _t07DA = [_t07D6, _t07D7, _t07D8, _t07D9];
    real _t07DB = 0.e0;
    real _t07DC = 0.e0;
    real _t07DD = 0.1e1;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.1e1;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    tensor[4,4] _t07E5 = [_t07D5, _t07DA, _t07DF, _t07E4];
    real _t07E6 = 0.e0;
    real _t07E7 = 0.1e1;
    real _t07E8 = 0.e0;
    real _t07E9 = 0.e0;
    vec4 _t07EA = [_t07E6, _t07E7, _t07E8, _t07E9];
    real _t07EB = -0.1e1;
    real _t07EC = 0.e0;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    vec4 _t07EF = [_t07EB, _t07EC, _t07ED, _t07EE];
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    real _t07F2 = 0.1e1;
    real _t07F3 = 0.e0;
    vec4 _t07F4 = [_t07F0, _t07F1, _t07F2, _t07F3];
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    real _t07F7 = 0.e0;
    real _t07F8 = 0.1e1;
    vec4 _t07F9 = [_t07F5, _t07F6, _t07F7, _t07F8];
    tensor[4,4] _t07FA = [_t07EA, _t07EF, _t07F4, _t07F9];
    real _t07FB = 0.1e1;
    real _t07FC = 0.e0;
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    vec4 _t07FF = [_t07FB, _t07FC, _t07FD, _t07FE];
    real _t0800 = 0.e0;
    real _t0801 = 0.1e1;
    real _t0802 = 0.e0;
    real _t0803 = 0.e0;
    vec4 _t0804 = [_t0800, _t0801, _t0802, _t0803];
    real _t0805 = 0.e0;
    real _t0806 = 0.e0;
    real _t0807 = 0.1e1;
    real _t0808 = 0.e0;
    vec4 _t0809 = [_t0805, _t0806, _t0807, _t0808];
    real _t080A = 0.e0;
    real _t080B = 0.e0;
    real _t080C = 0.e0;
    real _t080D = 0.1e1;
    vec4 _t080E = [_t080A, _t080B, _t080C, _t080D];
    tensor[4,4] _t080F = [_t07FF, _t0804, _t0809, _t080E];
    real _t0810 = 0.e0;
    real _t0811 = -0.1e1;
    real _t0812 = 0.e0;
    real _t0813 = 0.e0;
    vec4 _t0814 = [_t0810, _t0811, _t0812, _t0813];
    real _t0815 = 0.1e1;
    real _t0816 = 0.e0;
    real _t0817 = 0.e0;
    real _t0818 = 0.e0;
    vec4 _t0819 = [_t0815, _t0816, _t0817, _t0818];
    real _t081A = 0.e0;
    real _t081B = 0.e0;
    real _t081C = 0.1e1;
    real _t081D = 0.e0;
    vec4 _t081E = [_t081A, _t081B, _t081C, _t081D];
    real _t081F = 0.e0;
    real _t0820 = 0.e0;
    real _t0821 = 0.e0;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    tensor[4,4] _t0824 = [_t0814, _t0819, _t081E, _t0823];
    tensor[4,4][6] _t0825 = {_t07BB, _t07D0, _t07E5, _t07FA, _t080F, _t0824};
    real _t0826 = 0.e0;
    real _t0827 = -0.1e1;
    real _t0828 = 0.1e1;
    real _t0829 = 0.5e0;
    vec4 _t082A = [_t0826, _t0827, _t0828, _t0829];
    real _t082B = 0.e0;
    real _t082C = -0.1e1;
    real _t082D = 0.e0;
    real _t082E = 0.e0;
    vec4 _t082F = [_t082B, _t082C, _t082D, _t082E];
    real _t0830 = 0.1e1;
    real _t0831 = 0.e0;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    real _t0838 = 0.1e1;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    tensor[4,4] _t083A = [_t082A, _t082F, _t0834, _t0839];
    real _t083B = 0.e0;
    real _t083C = -0.1e1;
    real _t083D = 0.1e1;
    real _t083E = 0.5e0;
    vec4 _t083F = [_t083B, _t083C, _t083D, _t083E];
    real _t0840 = 0.e0;
    real _t0841 = -0.1e1;
    real _t0842 = 0.e0;
    real _t0843 = 0.e0;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    real _t0845 = 0.1e1;
    real _t0846 = 0.e0;
    real _t0847 = 0.e0;
    real _t0848 = 0.1e1;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = 0.e0;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    real _t084D = 0.1e1;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    tensor[4,4] _t084F = [_t083F, _t0844, _t0849, _t084E];
    real _t0850 = 0.e0;
    real _t0851 = -0.1e1;
    real _t0852 = 0.e0;
    real _t0853 = 0.e0;
    vec4 _t0854 = [_t0850, _t0851, _t0852, _t0853];
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    real _t0857 = 0.e0;
    real _t0858 = 0.e0;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    real _t085A = 0.e0;
    real _t085B = 0.e0;
    real _t085C = 0.1e1;
    real _t085D = 0.e0;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.e0;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    real _t0862 = 0.1e1;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    tensor[4,4] _t0864 = [_t0854, _t0859, _t085E, _t0863];
    real _t0865 = -0.1e1;
    real _t0866 = 0.e0;
    real _t0867 = 0.e0;
    real _t0868 = 0.e0;
    vec4 _t0869 = [_t0865, _t0866, _t0867, _t0868];
    real _t086A = 0.e0;
    real _t086B = -0.1e1;
    real _t086C = 0.e0;
    real _t086D = 0.e0;
    vec4 _t086E = [_t086A, _t086B, _t086C, _t086D];
    real _t086F = 0.e0;
    real _t0870 = 0.e0;
    real _t0871 = 0.1e1;
    real _t0872 = 0.e0;
    vec4 _t0873 = [_t086F, _t0870, _t0871, _t0872];
    real _t0874 = 0.e0;
    real _t0875 = 0.e0;
    real _t0876 = 0.e0;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    tensor[4,4] _t0879 = [_t0869, _t086E, _t0873, _t0878];
    real _t087A = 0.e0;
    real _t087B = 0.1e1;
    real _t087C = 0.e0;
    real _t087D = 0.e0;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    real _t087F = -0.1e1;
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.e0;
    vec4 _t0883 = [_t087F, _t0880, _t0881, _t0882];
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    real _t0887 = 0.e0;
    vec4 _t0888 = [_t0884, _t0885, _t0886, _t0887];
    real _t0889 = 0.e0;
    real _t088A = 0.e0;
    real _t088B = 0.e0;
    real _t088C = 0.1e1;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    tensor[4,4] _t088E = [_t087E, _t0883, _t0888, _t088D];
    real _t088F = 0.1e1;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.e0;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    real _t0897 = 0.e0;
    vec4 _t0898 = [_t0894, _t0895, _t0896, _t0897];
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    real _t089C = 0.e0;
    vec4 _t089D = [_t0899, _t089A, _t089B, _t089C];
    real _t089E = 0.e0;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.1e1;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    tensor[4,4] _t08A3 = [_t0893, _t0898, _t089D, _t08A2];
    tensor[4,4][6] _t08A4 = {_t083A, _t084F, _t0864, _t0879, _t088E, _t08A3};
    tensor[4,4][6][6] _t08A5 = {_t0629, _t06A8, _t0727, _t07A6, _t0825, _t08A4};
    real _t08A6 = time0597[1];
    int _t08A7 = prim $r2i01B7 (_t08A6);
    tensor[4,4][6] _t08A8 = prim $sub01C0<tensor[4,4][6]; %6> (_t08A5, _t08A7);
    real _t08A9 = time0597[1];
    int _t08AA = prim $r2i01B7 (_t08A9);
    int[2] _t08AB = func nextCell4059B (_t08AA, cellId0594, mesh0593);
    int _t08AC = 1;
    int _t08AD = prim $sub01C0<int; %2> (_t08AB, _t08AC);
    tensor[4,4] _t08AE = prim $sub01C0<tensor[4,4]; %6> (_t08A8, _t08AD);
    string _t08AF = "\n";
    print (_t05A0, _t05A2, _t05A3, _t05A8, _t05A9, _t05AA, _t08AE, _t08AF);
    real _t08B0 = time0597[1];
    int _t08B1 = prim $r2i01B7 (_t08B0);
    int[2] _t08B2 = func nextCell4059B (_t08B1, cellId0594, mesh0593);
    int _t08B3 = 0;
    int _t08B4 = prim $sub01C0<int; %2> (_t08B2, _t08B3);
    real _t08B5 = 0.1e1;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    real _t08B8 = 0.e0;
    vec4 _t08B9 = [_t08B5, _t08B6, _t08B7, _t08B8];
    real _t08BA = 0.e0;
    real _t08BB = 0.1e1;
    real _t08BC = 0.e0;
    real _t08BD = 0.e0;
    vec4 _t08BE = [_t08BA, _t08BB, _t08BC, _t08BD];
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.1e1;
    real _t08C2 = 0.e0;
    vec4 _t08C3 = [_t08BF, _t08C0, _t08C1, _t08C2];
    real _t08C4 = 0.e0;
    real _t08C5 = 0.e0;
    real _t08C6 = 0.e0;
    real _t08C7 = 0.1e1;
    vec4 _t08C8 = [_t08C4, _t08C5, _t08C6, _t08C7];
    tensor[4,4] _t08C9 = [_t08B9, _t08BE, _t08C3, _t08C8];
    real _t08CA = 0.1e1;
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    real _t08CD = 0.e0;
    vec4 _t08CE = [_t08CA, _t08CB, _t08CC, _t08CD];
    real _t08CF = 0.e0;
    real _t08D0 = 0.1e1;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.e0;
    vec4 _t08D3 = [_t08CF, _t08D0, _t08D1, _t08D2];
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    real _t08D7 = 0.1e1;
    vec4 _t08D8 = [_t08D4, _t08D5, _t08D6, _t08D7];
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.e0;
    real _t08DC = 0.1e1;
    vec4 _t08DD = [_t08D9, _t08DA, _t08DB, _t08DC];
    tensor[4,4] _t08DE = [_t08CE, _t08D3, _t08D8, _t08DD];
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    real _t08E2 = 0.e0;
    vec4 _t08E3 = [_t08DF, _t08E0, _t08E1, _t08E2];
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.1e1;
    real _t08E7 = 0.e0;
    vec4 _t08E8 = [_t08E4, _t08E5, _t08E6, _t08E7];
    real _t08E9 = 0.1e1;
    real _t08EA = -0.1e1;
    real _t08EB = 0.e0;
    real _t08EC = -0.5e0;
    vec4 _t08ED = [_t08E9, _t08EA, _t08EB, _t08EC];
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.e0;
    real _t08F1 = 0.1e1;
    vec4 _t08F2 = [_t08EE, _t08EF, _t08F0, _t08F1];
    tensor[4,4] _t08F3 = [_t08E3, _t08E8, _t08ED, _t08F2];
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = -0.1e1;
    real _t08F7 = 0.e0;
    vec4 _t08F8 = [_t08F4, _t08F5, _t08F6, _t08F7];
    real _t08F9 = 0.e0;
    real _t08FA = 0.1e1;
    real _t08FB = 0.e0;
    real _t08FC = 0.e0;
    vec4 _t08FD = [_t08F9, _t08FA, _t08FB, _t08FC];
    real _t08FE = 0.1e1;
    real _t08FF = -0.1e1;
    real _t0900 = 0.e0;
    real _t0901 = -0.5e0;
    vec4 _t0902 = [_t08FE, _t08FF, _t0900, _t0901];
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.e0;
    real _t0906 = 0.1e1;
    vec4 _t0907 = [_t0903, _t0904, _t0905, _t0906];
    tensor[4,4] _t0908 = [_t08F8, _t08FD, _t0902, _t0907];
    real _t0909 = 0.e0;
    real _t090A = -0.1e1;
    real _t090B = 0.e0;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    real _t0910 = -0.1e1;
    real _t0911 = 0.e0;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    real _t0913 = 0.1e1;
    real _t0914 = -0.1e1;
    real _t0915 = 0.e0;
    real _t0916 = -0.5e0;
    vec4 _t0917 = [_t0913, _t0914, _t0915, _t0916];
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.e0;
    real _t091B = 0.1e1;
    vec4 _t091C = [_t0918, _t0919, _t091A, _t091B];
    tensor[4,4] _t091D = [_t090D, _t0912, _t0917, _t091C];
    real _t091E = 0.e0;
    real _t091F = 0.e0;
    real _t0920 = 0.1e1;
    real _t0921 = 0.e0;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.e0;
    real _t0924 = -0.1e1;
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    real _t0928 = 0.1e1;
    real _t0929 = -0.1e1;
    real _t092A = 0.e0;
    real _t092B = -0.5e0;
    vec4 _t092C = [_t0928, _t0929, _t092A, _t092B];
    real _t092D = 0.e0;
    real _t092E = 0.e0;
    real _t092F = 0.e0;
    real _t0930 = 0.1e1;
    vec4 _t0931 = [_t092D, _t092E, _t092F, _t0930];
    tensor[4,4] _t0932 = [_t0922, _t0927, _t092C, _t0931];
    tensor[4,4][6] _t0933 = {_t08C9, _t08DE, _t08F3, _t0908, _t091D, _t0932};
    real _t0934 = 0.1e1;
    real _t0935 = 0.e0;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    vec4 _t0938 = [_t0934, _t0935, _t0936, _t0937];
    real _t0939 = 0.e0;
    real _t093A = 0.1e1;
    real _t093B = 0.e0;
    real _t093C = 0.e0;
    vec4 _t093D = [_t0939, _t093A, _t093B, _t093C];
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = 0.1e1;
    real _t0941 = -0.1e1;
    vec4 _t0942 = [_t093E, _t093F, _t0940, _t0941];
    real _t0943 = 0.e0;
    real _t0944 = 0.e0;
    real _t0945 = 0.e0;
    real _t0946 = 0.1e1;
    vec4 _t0947 = [_t0943, _t0944, _t0945, _t0946];
    tensor[4,4] _t0948 = [_t0938, _t093D, _t0942, _t0947];
    real _t0949 = 0.1e1;
    real _t094A = 0.e0;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    vec4 _t094D = [_t0949, _t094A, _t094B, _t094C];
    real _t094E = 0.e0;
    real _t094F = 0.1e1;
    real _t0950 = 0.e0;
    real _t0951 = 0.e0;
    vec4 _t0952 = [_t094E, _t094F, _t0950, _t0951];
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    real _t0955 = 0.1e1;
    real _t0956 = 0.e0;
    vec4 _t0957 = [_t0953, _t0954, _t0955, _t0956];
    real _t0958 = 0.e0;
    real _t0959 = 0.e0;
    real _t095A = 0.e0;
    real _t095B = 0.1e1;
    vec4 _t095C = [_t0958, _t0959, _t095A, _t095B];
    tensor[4,4] _t095D = [_t094D, _t0952, _t0957, _t095C];
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    real _t0960 = 0.e0;
    real _t0961 = 0.e0;
    vec4 _t0962 = [_t095E, _t095F, _t0960, _t0961];
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    real _t0966 = -0.1e1;
    vec4 _t0967 = [_t0963, _t0964, _t0965, _t0966];
    real _t0968 = 0.1e1;
    real _t0969 = -0.1e1;
    real _t096A = 0.e0;
    real _t096B = -0.5e0;
    vec4 _t096C = [_t0968, _t0969, _t096A, _t096B];
    real _t096D = 0.e0;
    real _t096E = 0.e0;
    real _t096F = 0.e0;
    real _t0970 = 0.1e1;
    vec4 _t0971 = [_t096D, _t096E, _t096F, _t0970];
    tensor[4,4] _t0972 = [_t0962, _t0967, _t096C, _t0971];
    real _t0973 = 0.e0;
    real _t0974 = 0.e0;
    real _t0975 = -0.1e1;
    real _t0976 = 0.1e1;
    vec4 _t0977 = [_t0973, _t0974, _t0975, _t0976];
    real _t0978 = 0.e0;
    real _t0979 = 0.1e1;
    real _t097A = 0.e0;
    real _t097B = 0.e0;
    vec4 _t097C = [_t0978, _t0979, _t097A, _t097B];
    real _t097D = 0.1e1;
    real _t097E = -0.1e1;
    real _t097F = 0.e0;
    real _t0980 = -0.5e0;
    vec4 _t0981 = [_t097D, _t097E, _t097F, _t0980];
    real _t0982 = 0.e0;
    real _t0983 = 0.e0;
    real _t0984 = 0.e0;
    real _t0985 = 0.1e1;
    vec4 _t0986 = [_t0982, _t0983, _t0984, _t0985];
    tensor[4,4] _t0987 = [_t0977, _t097C, _t0981, _t0986];
    real _t0988 = 0.e0;
    real _t0989 = -0.1e1;
    real _t098A = 0.e0;
    real _t098B = 0.e0;
    vec4 _t098C = [_t0988, _t0989, _t098A, _t098B];
    real _t098D = 0.e0;
    real _t098E = 0.e0;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.1e1;
    real _t0993 = -0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = -0.5e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.e0;
    real _t099A = 0.1e1;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    tensor[4,4] _t099C = [_t098C, _t0991, _t0996, _t099B];
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    real _t09A0 = -0.1e1;
    vec4 _t09A1 = [_t099D, _t099E, _t099F, _t09A0];
    real _t09A2 = 0.e0;
    real _t09A3 = -0.1e1;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.1e1;
    real _t09A8 = -0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = -0.5e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.e0;
    real _t09AF = 0.1e1;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    tensor[4,4] _t09B1 = [_t09A1, _t09A6, _t09AB, _t09B0];
    tensor[4,4][6] _t09B2 = {_t0948, _t095D, _t0972, _t0987, _t099C, _t09B1};
    real _t09B3 = 0.1e1;
    real _t09B4 = 0.e0;
    real _t09B5 = 0.1e1;
    real _t09B6 = 0.5e0;
    vec4 _t09B7 = [_t09B3, _t09B4, _t09B5, _t09B6];
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    real _t09BB = 0.e0;
    vec4 _t09BC = [_t09B8, _t09B9, _t09BA, _t09BB];
    real _t09BD = 0.e0;
    real _t09BE = 0.1e1;
    real _t09BF = 0.e0;
    real _t09C0 = 0.e0;
    vec4 _t09C1 = [_t09BD, _t09BE, _t09BF, _t09C0];
    real _t09C2 = 0.e0;
    real _t09C3 = 0.e0;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.1e1;
    vec4 _t09C6 = [_t09C2, _t09C3, _t09C4, _t09C5];
    tensor[4,4] _t09C7 = [_t09B7, _t09BC, _t09C1, _t09C6];
    real _t09C8 = 0.1e1;
    real _t09C9 = 0.e0;
    real _t09CA = 0.1e1;
    real _t09CB = 0.5e0;
    vec4 _t09CC = [_t09C8, _t09C9, _t09CA, _t09CB];
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    real _t09D0 = 0.e0;
    vec4 _t09D1 = [_t09CD, _t09CE, _t09CF, _t09D0];
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    real _t09D5 = 0.1e1;
    vec4 _t09D6 = [_t09D2, _t09D3, _t09D4, _t09D5];
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    real _t09DA = 0.1e1;
    vec4 _t09DB = [_t09D7, _t09D8, _t09D9, _t09DA];
    tensor[4,4] _t09DC = [_t09CC, _t09D1, _t09D6, _t09DB];
    real _t09DD = 0.1e1;
    real _t09DE = 0.e0;
    real _t09DF = 0.e0;
    real _t09E0 = 0.e0;
    vec4 _t09E1 = [_t09DD, _t09DE, _t09DF, _t09E0];
    real _t09E2 = 0.e0;
    real _t09E3 = 0.1e1;
    real _t09E4 = 0.e0;
    real _t09E5 = 0.e0;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.e0;
    real _t09E8 = 0.e0;
    real _t09E9 = 0.1e1;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = 0.e0;
    real _t09EE = 0.e0;
    real _t09EF = 0.1e1;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    tensor[4,4] _t09F1 = [_t09E1, _t09E6, _t09EB, _t09F0];
    real _t09F2 = 0.e0;
    real _t09F3 = -0.1e1;
    real _t09F4 = 0.e0;
    real _t09F5 = 0.e0;
    vec4 _t09F6 = [_t09F2, _t09F3, _t09F4, _t09F5];
    real _t09F7 = 0.1e1;
    real _t09F8 = 0.e0;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.e0;
    real _t09FD = 0.e0;
    real _t09FE = 0.1e1;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.e0;
    real _t0A04 = 0.1e1;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    tensor[4,4] _t0A06 = [_t09F6, _t09FB, _t0A00, _t0A05];
    real _t0A07 = -0.1e1;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.e0;
    real _t0A0A = 0.e0;
    vec4 _t0A0B = [_t0A07, _t0A08, _t0A09, _t0A0A];
    real _t0A0C = 0.e0;
    real _t0A0D = -0.1e1;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.e0;
    real _t0A13 = 0.1e1;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.e0;
    real _t0A19 = 0.1e1;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    tensor[4,4] _t0A1B = [_t0A0B, _t0A10, _t0A15, _t0A1A];
    real _t0A1C = 0.e0;
    real _t0A1D = 0.1e1;
    real _t0A1E = 0.e0;
    real _t0A1F = 0.e0;
    vec4 _t0A20 = [_t0A1C, _t0A1D, _t0A1E, _t0A1F];
    real _t0A21 = -0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = 0.e0;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.1e1;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    tensor[4,4] _t0A30 = [_t0A20, _t0A25, _t0A2A, _t0A2F];
    tensor[4,4][6] _t0A31 = {_t09C7, _t09DC, _t09F1, _t0A06, _t0A1B, _t0A30};
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    real _t0A34 = 0.1e1;
    real _t0A35 = 0.5e0;
    vec4 _t0A36 = [_t0A32, _t0A33, _t0A34, _t0A35];
    real _t0A37 = 0.e0;
    real _t0A38 = 0.1e1;
    real _t0A39 = 0.e0;
    real _t0A3A = 0.e0;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = -0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.e0;
    real _t0A43 = 0.e0;
    real _t0A44 = 0.1e1;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    tensor[4,4] _t0A46 = [_t0A36, _t0A3B, _t0A40, _t0A45];
    real _t0A47 = 0.e0;
    real _t0A48 = 0.1e1;
    real _t0A49 = 0.1e1;
    real _t0A4A = 0.5e0;
    vec4 _t0A4B = [_t0A47, _t0A48, _t0A49, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.1e1;
    real _t0A4E = 0.e0;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = -0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.1e1;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.e0;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.1e1;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    tensor[4,4] _t0A5B = [_t0A4B, _t0A50, _t0A55, _t0A5A];
    real _t0A5C = 0.e0;
    real _t0A5D = 0.1e1;
    real _t0A5E = 0.e0;
    real _t0A5F = 0.e0;
    vec4 _t0A60 = [_t0A5C, _t0A5D, _t0A5E, _t0A5F];
    real _t0A61 = -0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = 0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.e0;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.1e1;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    tensor[4,4] _t0A70 = [_t0A60, _t0A65, _t0A6A, _t0A6F];
    real _t0A71 = 0.1e1;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.e0;
    real _t0A74 = 0.e0;
    vec4 _t0A75 = [_t0A71, _t0A72, _t0A73, _t0A74];
    real _t0A76 = 0.e0;
    real _t0A77 = 0.1e1;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.e0;
    real _t0A7D = 0.1e1;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.e0;
    real _t0A83 = 0.1e1;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    tensor[4,4] _t0A85 = [_t0A75, _t0A7A, _t0A7F, _t0A84];
    real _t0A86 = 0.e0;
    real _t0A87 = -0.1e1;
    real _t0A88 = 0.e0;
    real _t0A89 = 0.e0;
    vec4 _t0A8A = [_t0A86, _t0A87, _t0A88, _t0A89];
    real _t0A8B = 0.1e1;
    real _t0A8C = 0.e0;
    real _t0A8D = 0.e0;
    real _t0A8E = 0.e0;
    vec4 _t0A8F = [_t0A8B, _t0A8C, _t0A8D, _t0A8E];
    real _t0A90 = 0.e0;
    real _t0A91 = 0.e0;
    real _t0A92 = 0.1e1;
    real _t0A93 = 0.e0;
    vec4 _t0A94 = [_t0A90, _t0A91, _t0A92, _t0A93];
    real _t0A95 = 0.e0;
    real _t0A96 = 0.e0;
    real _t0A97 = 0.e0;
    real _t0A98 = 0.1e1;
    vec4 _t0A99 = [_t0A95, _t0A96, _t0A97, _t0A98];
    tensor[4,4] _t0A9A = [_t0A8A, _t0A8F, _t0A94, _t0A99];
    real _t0A9B = -0.1e1;
    real _t0A9C = 0.e0;
    real _t0A9D = 0.e0;
    real _t0A9E = 0.e0;
    vec4 _t0A9F = [_t0A9B, _t0A9C, _t0A9D, _t0A9E];
    real _t0AA0 = 0.e0;
    real _t0AA1 = -0.1e1;
    real _t0AA2 = 0.e0;
    real _t0AA3 = 0.e0;
    vec4 _t0AA4 = [_t0AA0, _t0AA1, _t0AA2, _t0AA3];
    real _t0AA5 = 0.e0;
    real _t0AA6 = 0.e0;
    real _t0AA7 = 0.1e1;
    real _t0AA8 = 0.e0;
    vec4 _t0AA9 = [_t0AA5, _t0AA6, _t0AA7, _t0AA8];
    real _t0AAA = 0.e0;
    real _t0AAB = 0.e0;
    real _t0AAC = 0.e0;
    real _t0AAD = 0.1e1;
    vec4 _t0AAE = [_t0AAA, _t0AAB, _t0AAC, _t0AAD];
    tensor[4,4] _t0AAF = [_t0A9F, _t0AA4, _t0AA9, _t0AAE];
    tensor[4,4][6] _t0AB0 = {_t0A46, _t0A5B, _t0A70, _t0A85, _t0A9A, _t0AAF};
    real _t0AB1 = -0.1e1;
    real _t0AB2 = 0.e0;
    real _t0AB3 = 0.1e1;
    real _t0AB4 = 0.5e0;
    vec4 _t0AB5 = [_t0AB1, _t0AB2, _t0AB3, _t0AB4];
    real _t0AB6 = -0.1e1;
    real _t0AB7 = 0.e0;
    real _t0AB8 = 0.e0;
    real _t0AB9 = 0.e0;
    vec4 _t0ABA = [_t0AB6, _t0AB7, _t0AB8, _t0AB9];
    real _t0ABB = 0.e0;
    real _t0ABC = -0.1e1;
    real _t0ABD = 0.e0;
    real _t0ABE = 0.e0;
    vec4 _t0ABF = [_t0ABB, _t0ABC, _t0ABD, _t0ABE];
    real _t0AC0 = 0.e0;
    real _t0AC1 = 0.e0;
    real _t0AC2 = 0.e0;
    real _t0AC3 = 0.1e1;
    vec4 _t0AC4 = [_t0AC0, _t0AC1, _t0AC2, _t0AC3];
    tensor[4,4] _t0AC5 = [_t0AB5, _t0ABA, _t0ABF, _t0AC4];
    real _t0AC6 = -0.1e1;
    real _t0AC7 = 0.e0;
    real _t0AC8 = 0.1e1;
    real _t0AC9 = 0.5e0;
    vec4 _t0ACA = [_t0AC6, _t0AC7, _t0AC8, _t0AC9];
    real _t0ACB = -0.1e1;
    real _t0ACC = 0.e0;
    real _t0ACD = 0.e0;
    real _t0ACE = 0.e0;
    vec4 _t0ACF = [_t0ACB, _t0ACC, _t0ACD, _t0ACE];
    real _t0AD0 = 0.e0;
    real _t0AD1 = -0.1e1;
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.1e1;
    vec4 _t0AD4 = [_t0AD0, _t0AD1, _t0AD2, _t0AD3];
    real _t0AD5 = 0.e0;
    real _t0AD6 = 0.e0;
    real _t0AD7 = 0.e0;
    real _t0AD8 = 0.1e1;
    vec4 _t0AD9 = [_t0AD5, _t0AD6, _t0AD7, _t0AD8];
    tensor[4,4] _t0ADA = [_t0ACA, _t0ACF, _t0AD4, _t0AD9];
    real _t0ADB = -0.1e1;
    real _t0ADC = 0.e0;
    real _t0ADD = 0.e0;
    real _t0ADE = 0.e0;
    vec4 _t0ADF = [_t0ADB, _t0ADC, _t0ADD, _t0ADE];
    real _t0AE0 = 0.e0;
    real _t0AE1 = -0.1e1;
    real _t0AE2 = 0.e0;
    real _t0AE3 = 0.e0;
    vec4 _t0AE4 = [_t0AE0, _t0AE1, _t0AE2, _t0AE3];
    real _t0AE5 = 0.e0;
    real _t0AE6 = 0.e0;
    real _t0AE7 = 0.1e1;
    real _t0AE8 = 0.e0;
    vec4 _t0AE9 = [_t0AE5, _t0AE6, _t0AE7, _t0AE8];
    real _t0AEA = 0.e0;
    real _t0AEB = 0.e0;
    real _t0AEC = 0.e0;
    real _t0AED = 0.1e1;
    vec4 _t0AEE = [_t0AEA, _t0AEB, _t0AEC, _t0AED];
    tensor[4,4] _t0AEF = [_t0ADF, _t0AE4, _t0AE9, _t0AEE];
    real _t0AF0 = 0.e0;
    real _t0AF1 = 0.1e1;
    real _t0AF2 = 0.e0;
    real _t0AF3 = 0.e0;
    vec4 _t0AF4 = [_t0AF0, _t0AF1, _t0AF2, _t0AF3];
    real _t0AF5 = -0.1e1;
    real _t0AF6 = 0.e0;
    real _t0AF7 = 0.e0;
    real _t0AF8 = 0.e0;
    vec4 _t0AF9 = [_t0AF5, _t0AF6, _t0AF7, _t0AF8];
    real _t0AFA = 0.e0;
    real _t0AFB = 0.e0;
    real _t0AFC = 0.1e1;
    real _t0AFD = 0.e0;
    vec4 _t0AFE = [_t0AFA, _t0AFB, _t0AFC, _t0AFD];
    real _t0AFF = 0.e0;
    real _t0B00 = 0.e0;
    real _t0B01 = 0.e0;
    real _t0B02 = 0.1e1;
    vec4 _t0B03 = [_t0AFF, _t0B00, _t0B01, _t0B02];
    tensor[4,4] _t0B04 = [_t0AF4, _t0AF9, _t0AFE, _t0B03];
    real _t0B05 = 0.1e1;
    real _t0B06 = 0.e0;
    real _t0B07 = 0.e0;
    real _t0B08 = 0.e0;
    vec4 _t0B09 = [_t0B05, _t0B06, _t0B07, _t0B08];
    real _t0B0A = 0.e0;
    real _t0B0B = 0.1e1;
    real _t0B0C = 0.e0;
    real _t0B0D = 0.e0;
    vec4 _t0B0E = [_t0B0A, _t0B0B, _t0B0C, _t0B0D];
    real _t0B0F = 0.e0;
    real _t0B10 = 0.e0;
    real _t0B11 = 0.1e1;
    real _t0B12 = 0.e0;
    vec4 _t0B13 = [_t0B0F, _t0B10, _t0B11, _t0B12];
    real _t0B14 = 0.e0;
    real _t0B15 = 0.e0;
    real _t0B16 = 0.e0;
    real _t0B17 = 0.1e1;
    vec4 _t0B18 = [_t0B14, _t0B15, _t0B16, _t0B17];
    tensor[4,4] _t0B19 = [_t0B09, _t0B0E, _t0B13, _t0B18];
    real _t0B1A = 0.e0;
    real _t0B1B = -0.1e1;
    real _t0B1C = 0.e0;
    real _t0B1D = 0.e0;
    vec4 _t0B1E = [_t0B1A, _t0B1B, _t0B1C, _t0B1D];
    real _t0B1F = 0.1e1;
    real _t0B20 = 0.e0;
    real _t0B21 = 0.e0;
    real _t0B22 = 0.e0;
    vec4 _t0B23 = [_t0B1F, _t0B20, _t0B21, _t0B22];
    real _t0B24 = 0.e0;
    real _t0B25 = 0.e0;
    real _t0B26 = 0.1e1;
    real _t0B27 = 0.e0;
    vec4 _t0B28 = [_t0B24, _t0B25, _t0B26, _t0B27];
    real _t0B29 = 0.e0;
    real _t0B2A = 0.e0;
    real _t0B2B = 0.e0;
    real _t0B2C = 0.1e1;
    vec4 _t0B2D = [_t0B29, _t0B2A, _t0B2B, _t0B2C];
    tensor[4,4] _t0B2E = [_t0B1E, _t0B23, _t0B28, _t0B2D];
    tensor[4,4][6] _t0B2F = {_t0AC5, _t0ADA, _t0AEF, _t0B04, _t0B19, _t0B2E};
    real _t0B30 = 0.e0;
    real _t0B31 = -0.1e1;
    real _t0B32 = 0.1e1;
    real _t0B33 = 0.5e0;
    vec4 _t0B34 = [_t0B30, _t0B31, _t0B32, _t0B33];
    real _t0B35 = 0.e0;
    real _t0B36 = -0.1e1;
    real _t0B37 = 0.e0;
    real _t0B38 = 0.e0;
    vec4 _t0B39 = [_t0B35, _t0B36, _t0B37, _t0B38];
    real _t0B3A = 0.1e1;
    real _t0B3B = 0.e0;
    real _t0B3C = 0.e0;
    real _t0B3D = 0.e0;
    vec4 _t0B3E = [_t0B3A, _t0B3B, _t0B3C, _t0B3D];
    real _t0B3F = 0.e0;
    real _t0B40 = 0.e0;
    real _t0B41 = 0.e0;
    real _t0B42 = 0.1e1;
    vec4 _t0B43 = [_t0B3F, _t0B40, _t0B41, _t0B42];
    tensor[4,4] _t0B44 = [_t0B34, _t0B39, _t0B3E, _t0B43];
    real _t0B45 = 0.e0;
    real _t0B46 = -0.1e1;
    real _t0B47 = 0.1e1;
    real _t0B48 = 0.5e0;
    vec4 _t0B49 = [_t0B45, _t0B46, _t0B47, _t0B48];
    real _t0B4A = 0.e0;
    real _t0B4B = -0.1e1;
    real _t0B4C = 0.e0;
    real _t0B4D = 0.e0;
    vec4 _t0B4E = [_t0B4A, _t0B4B, _t0B4C, _t0B4D];
    real _t0B4F = 0.1e1;
    real _t0B50 = 0.e0;
    real _t0B51 = 0.e0;
    real _t0B52 = 0.1e1;
    vec4 _t0B53 = [_t0B4F, _t0B50, _t0B51, _t0B52];
    real _t0B54 = 0.e0;
    real _t0B55 = 0.e0;
    real _t0B56 = 0.e0;
    real _t0B57 = 0.1e1;
    vec4 _t0B58 = [_t0B54, _t0B55, _t0B56, _t0B57];
    tensor[4,4] _t0B59 = [_t0B49, _t0B4E, _t0B53, _t0B58];
    real _t0B5A = 0.e0;
    real _t0B5B = -0.1e1;
    real _t0B5C = 0.e0;
    real _t0B5D = 0.e0;
    vec4 _t0B5E = [_t0B5A, _t0B5B, _t0B5C, _t0B5D];
    real _t0B5F = 0.1e1;
    real _t0B60 = 0.e0;
    real _t0B61 = 0.e0;
    real _t0B62 = 0.e0;
    vec4 _t0B63 = [_t0B5F, _t0B60, _t0B61, _t0B62];
    real _t0B64 = 0.e0;
    real _t0B65 = 0.e0;
    real _t0B66 = 0.1e1;
    real _t0B67 = 0.e0;
    vec4 _t0B68 = [_t0B64, _t0B65, _t0B66, _t0B67];
    real _t0B69 = 0.e0;
    real _t0B6A = 0.e0;
    real _t0B6B = 0.e0;
    real _t0B6C = 0.1e1;
    vec4 _t0B6D = [_t0B69, _t0B6A, _t0B6B, _t0B6C];
    tensor[4,4] _t0B6E = [_t0B5E, _t0B63, _t0B68, _t0B6D];
    real _t0B6F = -0.1e1;
    real _t0B70 = 0.e0;
    real _t0B71 = 0.e0;
    real _t0B72 = 0.e0;
    vec4 _t0B73 = [_t0B6F, _t0B70, _t0B71, _t0B72];
    real _t0B74 = 0.e0;
    real _t0B75 = -0.1e1;
    real _t0B76 = 0.e0;
    real _t0B77 = 0.e0;
    vec4 _t0B78 = [_t0B74, _t0B75, _t0B76, _t0B77];
    real _t0B79 = 0.e0;
    real _t0B7A = 0.e0;
    real _t0B7B = 0.1e1;
    real _t0B7C = 0.e0;
    vec4 _t0B7D = [_t0B79, _t0B7A, _t0B7B, _t0B7C];
    real _t0B7E = 0.e0;
    real _t0B7F = 0.e0;
    real _t0B80 = 0.e0;
    real _t0B81 = 0.1e1;
    vec4 _t0B82 = [_t0B7E, _t0B7F, _t0B80, _t0B81];
    tensor[4,4] _t0B83 = [_t0B73, _t0B78, _t0B7D, _t0B82];
    real _t0B84 = 0.e0;
    real _t0B85 = 0.1e1;
    real _t0B86 = 0.e0;
    real _t0B87 = 0.e0;
    vec4 _t0B88 = [_t0B84, _t0B85, _t0B86, _t0B87];
    real _t0B89 = -0.1e1;
    real _t0B8A = 0.e0;
    real _t0B8B = 0.e0;
    real _t0B8C = 0.e0;
    vec4 _t0B8D = [_t0B89, _t0B8A, _t0B8B, _t0B8C];
    real _t0B8E = 0.e0;
    real _t0B8F = 0.e0;
    real _t0B90 = 0.1e1;
    real _t0B91 = 0.e0;
    vec4 _t0B92 = [_t0B8E, _t0B8F, _t0B90, _t0B91];
    real _t0B93 = 0.e0;
    real _t0B94 = 0.e0;
    real _t0B95 = 0.e0;
    real _t0B96 = 0.1e1;
    vec4 _t0B97 = [_t0B93, _t0B94, _t0B95, _t0B96];
    tensor[4,4] _t0B98 = [_t0B88, _t0B8D, _t0B92, _t0B97];
    real _t0B99 = 0.1e1;
    real _t0B9A = 0.e0;
    real _t0B9B = 0.e0;
    real _t0B9C = 0.e0;
    vec4 _t0B9D = [_t0B99, _t0B9A, _t0B9B, _t0B9C];
    real _t0B9E = 0.e0;
    real _t0B9F = 0.1e1;
    real _t0BA0 = 0.e0;
    real _t0BA1 = 0.e0;
    vec4 _t0BA2 = [_t0B9E, _t0B9F, _t0BA0, _t0BA1];
    real _t0BA3 = 0.e0;
    real _t0BA4 = 0.e0;
    real _t0BA5 = 0.1e1;
    real _t0BA6 = 0.e0;
    vec4 _t0BA7 = [_t0BA3, _t0BA4, _t0BA5, _t0BA6];
    real _t0BA8 = 0.e0;
    real _t0BA9 = 0.e0;
    real _t0BAA = 0.e0;
    real _t0BAB = 0.1e1;
    vec4 _t0BAC = [_t0BA8, _t0BA9, _t0BAA, _t0BAB];
    tensor[4,4] _t0BAD = [_t0B9D, _t0BA2, _t0BA7, _t0BAC];
    tensor[4,4][6] _t0BAE = {_t0B44, _t0B59, _t0B6E, _t0B83, _t0B98, _t0BAD};
    tensor[4,4][6][6] _t0BAF = {_t0933, _t09B2, _t0A31, _t0AB0, _t0B2F, _t0BAE};
    real _t0BB0 = time0597[1];
    int _t0BB1 = prim $r2i01B7 (_t0BB0);
    tensor[4,4][6] _t0BB2 = prim $sub01C0<tensor[4,4][6]; %6> (_t0BAF, _t0BB1);
    real _t0BB3 = time0597[1];
    int _t0BB4 = prim $r2i01B7 (_t0BB3);
    int[2] _t0BB5 = func nextCell4059B (_t0BB4, cellId0594, mesh0593);
    int _t0BB6 = 1;
    int _t0BB7 = prim $sub01C0<int; %2> (_t0BB5, _t0BB6);
    tensor[4,4] _t0BB8 = prim $sub01C0<tensor[4,4]; %6> (_t0BB2, _t0BB7);
    real _t0BB9 = time0597[0];
    vec3 _t0BBA = prim *0036<$[3]> (_t0BB9, dPos0596);
    vec3 _t0BBB = prim +0017<$[3]> (_t0BBA, refPos0595);
    real _t0BBC = _t0BBB[0];
    real _t0BBD = time0597[0];
    vec3 _t0BBE = prim *0036<$[3]> (_t0BBD, dPos0596);
    vec3 _t0BBF = prim +0017<$[3]> (_t0BBE, refPos0595);
    real _t0BC0 = _t0BBF[1];
    real _t0BC1 = time0597[0];
    vec3 _t0BC2 = prim *0036<$[3]> (_t0BC1, dPos0596);
    vec3 _t0BC3 = prim +0017<$[3]> (_t0BC2, refPos0595);
    real _t0BC4 = _t0BC3[2];
    real _t0BC5 = 0.1e1;
    vec4 _t0BC6 = [_t0BBC, _t0BC0, _t0BC4, _t0BC5];
    vec4 _t0BC7 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0BB8, _t0BC6);
    real _t0BC8 = _t0BC7[0];
    real _t0BC9 = 0.1e1;
    real _t0BCA = 0.e0;
    real _t0BCB = 0.e0;
    real _t0BCC = 0.e0;
    vec4 _t0BCD = [_t0BC9, _t0BCA, _t0BCB, _t0BCC];
    real _t0BCE = 0.e0;
    real _t0BCF = 0.1e1;
    real _t0BD0 = 0.e0;
    real _t0BD1 = 0.e0;
    vec4 _t0BD2 = [_t0BCE, _t0BCF, _t0BD0, _t0BD1];
    real _t0BD3 = 0.e0;
    real _t0BD4 = 0.e0;
    real _t0BD5 = 0.1e1;
    real _t0BD6 = 0.e0;
    vec4 _t0BD7 = [_t0BD3, _t0BD4, _t0BD5, _t0BD6];
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    real _t0BDA = 0.e0;
    real _t0BDB = 0.1e1;
    vec4 _t0BDC = [_t0BD8, _t0BD9, _t0BDA, _t0BDB];
    tensor[4,4] _t0BDD = [_t0BCD, _t0BD2, _t0BD7, _t0BDC];
    real _t0BDE = 0.1e1;
    real _t0BDF = 0.e0;
    real _t0BE0 = 0.e0;
    real _t0BE1 = 0.e0;
    vec4 _t0BE2 = [_t0BDE, _t0BDF, _t0BE0, _t0BE1];
    real _t0BE3 = 0.e0;
    real _t0BE4 = 0.1e1;
    real _t0BE5 = 0.e0;
    real _t0BE6 = 0.e0;
    vec4 _t0BE7 = [_t0BE3, _t0BE4, _t0BE5, _t0BE6];
    real _t0BE8 = 0.e0;
    real _t0BE9 = 0.e0;
    real _t0BEA = 0.1e1;
    real _t0BEB = 0.1e1;
    vec4 _t0BEC = [_t0BE8, _t0BE9, _t0BEA, _t0BEB];
    real _t0BED = 0.e0;
    real _t0BEE = 0.e0;
    real _t0BEF = 0.e0;
    real _t0BF0 = 0.1e1;
    vec4 _t0BF1 = [_t0BED, _t0BEE, _t0BEF, _t0BF0];
    tensor[4,4] _t0BF2 = [_t0BE2, _t0BE7, _t0BEC, _t0BF1];
    real _t0BF3 = 0.e0;
    real _t0BF4 = 0.1e1;
    real _t0BF5 = 0.e0;
    real _t0BF6 = 0.e0;
    vec4 _t0BF7 = [_t0BF3, _t0BF4, _t0BF5, _t0BF6];
    real _t0BF8 = 0.e0;
    real _t0BF9 = 0.e0;
    real _t0BFA = 0.1e1;
    real _t0BFB = 0.e0;
    vec4 _t0BFC = [_t0BF8, _t0BF9, _t0BFA, _t0BFB];
    real _t0BFD = 0.1e1;
    real _t0BFE = -0.1e1;
    real _t0BFF = 0.e0;
    real _t0C00 = -0.5e0;
    vec4 _t0C01 = [_t0BFD, _t0BFE, _t0BFF, _t0C00];
    real _t0C02 = 0.e0;
    real _t0C03 = 0.e0;
    real _t0C04 = 0.e0;
    real _t0C05 = 0.1e1;
    vec4 _t0C06 = [_t0C02, _t0C03, _t0C04, _t0C05];
    tensor[4,4] _t0C07 = [_t0BF7, _t0BFC, _t0C01, _t0C06];
    real _t0C08 = 0.e0;
    real _t0C09 = 0.e0;
    real _t0C0A = -0.1e1;
    real _t0C0B = 0.e0;
    vec4 _t0C0C = [_t0C08, _t0C09, _t0C0A, _t0C0B];
    real _t0C0D = 0.e0;
    real _t0C0E = 0.1e1;
    real _t0C0F = 0.e0;
    real _t0C10 = 0.e0;
    vec4 _t0C11 = [_t0C0D, _t0C0E, _t0C0F, _t0C10];
    real _t0C12 = 0.1e1;
    real _t0C13 = -0.1e1;
    real _t0C14 = 0.e0;
    real _t0C15 = -0.5e0;
    vec4 _t0C16 = [_t0C12, _t0C13, _t0C14, _t0C15];
    real _t0C17 = 0.e0;
    real _t0C18 = 0.e0;
    real _t0C19 = 0.e0;
    real _t0C1A = 0.1e1;
    vec4 _t0C1B = [_t0C17, _t0C18, _t0C19, _t0C1A];
    tensor[4,4] _t0C1C = [_t0C0C, _t0C11, _t0C16, _t0C1B];
    real _t0C1D = 0.e0;
    real _t0C1E = -0.1e1;
    real _t0C1F = 0.e0;
    real _t0C20 = 0.e0;
    vec4 _t0C21 = [_t0C1D, _t0C1E, _t0C1F, _t0C20];
    real _t0C22 = 0.e0;
    real _t0C23 = 0.e0;
    real _t0C24 = -0.1e1;
    real _t0C25 = 0.e0;
    vec4 _t0C26 = [_t0C22, _t0C23, _t0C24, _t0C25];
    real _t0C27 = 0.1e1;
    real _t0C28 = -0.1e1;
    real _t0C29 = 0.e0;
    real _t0C2A = -0.5e0;
    vec4 _t0C2B = [_t0C27, _t0C28, _t0C29, _t0C2A];
    real _t0C2C = 0.e0;
    real _t0C2D = 0.e0;
    real _t0C2E = 0.e0;
    real _t0C2F = 0.1e1;
    vec4 _t0C30 = [_t0C2C, _t0C2D, _t0C2E, _t0C2F];
    tensor[4,4] _t0C31 = [_t0C21, _t0C26, _t0C2B, _t0C30];
    real _t0C32 = 0.e0;
    real _t0C33 = 0.e0;
    real _t0C34 = 0.1e1;
    real _t0C35 = 0.e0;
    vec4 _t0C36 = [_t0C32, _t0C33, _t0C34, _t0C35];
    real _t0C37 = 0.e0;
    real _t0C38 = -0.1e1;
    real _t0C39 = 0.e0;
    real _t0C3A = 0.e0;
    vec4 _t0C3B = [_t0C37, _t0C38, _t0C39, _t0C3A];
    real _t0C3C = 0.1e1;
    real _t0C3D = -0.1e1;
    real _t0C3E = 0.e0;
    real _t0C3F = -0.5e0;
    vec4 _t0C40 = [_t0C3C, _t0C3D, _t0C3E, _t0C3F];
    real _t0C41 = 0.e0;
    real _t0C42 = 0.e0;
    real _t0C43 = 0.e0;
    real _t0C44 = 0.1e1;
    vec4 _t0C45 = [_t0C41, _t0C42, _t0C43, _t0C44];
    tensor[4,4] _t0C46 = [_t0C36, _t0C3B, _t0C40, _t0C45];
    tensor[4,4][6] _t0C47 = {_t0BDD, _t0BF2, _t0C07, _t0C1C, _t0C31, _t0C46};
    real _t0C48 = 0.1e1;
    real _t0C49 = 0.e0;
    real _t0C4A = 0.e0;
    real _t0C4B = 0.e0;
    vec4 _t0C4C = [_t0C48, _t0C49, _t0C4A, _t0C4B];
    real _t0C4D = 0.e0;
    real _t0C4E = 0.1e1;
    real _t0C4F = 0.e0;
    real _t0C50 = 0.e0;
    vec4 _t0C51 = [_t0C4D, _t0C4E, _t0C4F, _t0C50];
    real _t0C52 = 0.e0;
    real _t0C53 = 0.e0;
    real _t0C54 = 0.1e1;
    real _t0C55 = -0.1e1;
    vec4 _t0C56 = [_t0C52, _t0C53, _t0C54, _t0C55];
    real _t0C57 = 0.e0;
    real _t0C58 = 0.e0;
    real _t0C59 = 0.e0;
    real _t0C5A = 0.1e1;
    vec4 _t0C5B = [_t0C57, _t0C58, _t0C59, _t0C5A];
    tensor[4,4] _t0C5C = [_t0C4C, _t0C51, _t0C56, _t0C5B];
    real _t0C5D = 0.1e1;
    real _t0C5E = 0.e0;
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    vec4 _t0C61 = [_t0C5D, _t0C5E, _t0C5F, _t0C60];
    real _t0C62 = 0.e0;
    real _t0C63 = 0.1e1;
    real _t0C64 = 0.e0;
    real _t0C65 = 0.e0;
    vec4 _t0C66 = [_t0C62, _t0C63, _t0C64, _t0C65];
    real _t0C67 = 0.e0;
    real _t0C68 = 0.e0;
    real _t0C69 = 0.1e1;
    real _t0C6A = 0.e0;
    vec4 _t0C6B = [_t0C67, _t0C68, _t0C69, _t0C6A];
    real _t0C6C = 0.e0;
    real _t0C6D = 0.e0;
    real _t0C6E = 0.e0;
    real _t0C6F = 0.1e1;
    vec4 _t0C70 = [_t0C6C, _t0C6D, _t0C6E, _t0C6F];
    tensor[4,4] _t0C71 = [_t0C61, _t0C66, _t0C6B, _t0C70];
    real _t0C72 = 0.e0;
    real _t0C73 = 0.1e1;
    real _t0C74 = 0.e0;
    real _t0C75 = 0.e0;
    vec4 _t0C76 = [_t0C72, _t0C73, _t0C74, _t0C75];
    real _t0C77 = 0.e0;
    real _t0C78 = 0.e0;
    real _t0C79 = 0.1e1;
    real _t0C7A = -0.1e1;
    vec4 _t0C7B = [_t0C77, _t0C78, _t0C79, _t0C7A];
    real _t0C7C = 0.1e1;
    real _t0C7D = -0.1e1;
    real _t0C7E = 0.e0;
    real _t0C7F = -0.5e0;
    vec4 _t0C80 = [_t0C7C, _t0C7D, _t0C7E, _t0C7F];
    real _t0C81 = 0.e0;
    real _t0C82 = 0.e0;
    real _t0C83 = 0.e0;
    real _t0C84 = 0.1e1;
    vec4 _t0C85 = [_t0C81, _t0C82, _t0C83, _t0C84];
    tensor[4,4] _t0C86 = [_t0C76, _t0C7B, _t0C80, _t0C85];
    real _t0C87 = 0.e0;
    real _t0C88 = 0.e0;
    real _t0C89 = -0.1e1;
    real _t0C8A = 0.1e1;
    vec4 _t0C8B = [_t0C87, _t0C88, _t0C89, _t0C8A];
    real _t0C8C = 0.e0;
    real _t0C8D = 0.1e1;
    real _t0C8E = 0.e0;
    real _t0C8F = 0.e0;
    vec4 _t0C90 = [_t0C8C, _t0C8D, _t0C8E, _t0C8F];
    real _t0C91 = 0.1e1;
    real _t0C92 = -0.1e1;
    real _t0C93 = 0.e0;
    real _t0C94 = -0.5e0;
    vec4 _t0C95 = [_t0C91, _t0C92, _t0C93, _t0C94];
    real _t0C96 = 0.e0;
    real _t0C97 = 0.e0;
    real _t0C98 = 0.e0;
    real _t0C99 = 0.1e1;
    vec4 _t0C9A = [_t0C96, _t0C97, _t0C98, _t0C99];
    tensor[4,4] _t0C9B = [_t0C8B, _t0C90, _t0C95, _t0C9A];
    real _t0C9C = 0.e0;
    real _t0C9D = -0.1e1;
    real _t0C9E = 0.e0;
    real _t0C9F = 0.e0;
    vec4 _t0CA0 = [_t0C9C, _t0C9D, _t0C9E, _t0C9F];
    real _t0CA1 = 0.e0;
    real _t0CA2 = 0.e0;
    real _t0CA3 = -0.1e1;
    real _t0CA4 = 0.1e1;
    vec4 _t0CA5 = [_t0CA1, _t0CA2, _t0CA3, _t0CA4];
    real _t0CA6 = 0.1e1;
    real _t0CA7 = -0.1e1;
    real _t0CA8 = 0.e0;
    real _t0CA9 = -0.5e0;
    vec4 _t0CAA = [_t0CA6, _t0CA7, _t0CA8, _t0CA9];
    real _t0CAB = 0.e0;
    real _t0CAC = 0.e0;
    real _t0CAD = 0.e0;
    real _t0CAE = 0.1e1;
    vec4 _t0CAF = [_t0CAB, _t0CAC, _t0CAD, _t0CAE];
    tensor[4,4] _t0CB0 = [_t0CA0, _t0CA5, _t0CAA, _t0CAF];
    real _t0CB1 = 0.e0;
    real _t0CB2 = 0.e0;
    real _t0CB3 = 0.1e1;
    real _t0CB4 = -0.1e1;
    vec4 _t0CB5 = [_t0CB1, _t0CB2, _t0CB3, _t0CB4];
    real _t0CB6 = 0.e0;
    real _t0CB7 = -0.1e1;
    real _t0CB8 = 0.e0;
    real _t0CB9 = 0.e0;
    vec4 _t0CBA = [_t0CB6, _t0CB7, _t0CB8, _t0CB9];
    real _t0CBB = 0.1e1;
    real _t0CBC = -0.1e1;
    real _t0CBD = 0.e0;
    real _t0CBE = -0.5e0;
    vec4 _t0CBF = [_t0CBB, _t0CBC, _t0CBD, _t0CBE];
    real _t0CC0 = 0.e0;
    real _t0CC1 = 0.e0;
    real _t0CC2 = 0.e0;
    real _t0CC3 = 0.1e1;
    vec4 _t0CC4 = [_t0CC0, _t0CC1, _t0CC2, _t0CC3];
    tensor[4,4] _t0CC5 = [_t0CB5, _t0CBA, _t0CBF, _t0CC4];
    tensor[4,4][6] _t0CC6 = {_t0C5C, _t0C71, _t0C86, _t0C9B, _t0CB0, _t0CC5};
    real _t0CC7 = 0.1e1;
    real _t0CC8 = 0.e0;
    real _t0CC9 = 0.1e1;
    real _t0CCA = 0.5e0;
    vec4 _t0CCB = [_t0CC7, _t0CC8, _t0CC9, _t0CCA];
    real _t0CCC = 0.1e1;
    real _t0CCD = 0.e0;
    real _t0CCE = 0.e0;
    real _t0CCF = 0.e0;
    vec4 _t0CD0 = [_t0CCC, _t0CCD, _t0CCE, _t0CCF];
    real _t0CD1 = 0.e0;
    real _t0CD2 = 0.1e1;
    real _t0CD3 = 0.e0;
    real _t0CD4 = 0.e0;
    vec4 _t0CD5 = [_t0CD1, _t0CD2, _t0CD3, _t0CD4];
    real _t0CD6 = 0.e0;
    real _t0CD7 = 0.e0;
    real _t0CD8 = 0.e0;
    real _t0CD9 = 0.1e1;
    vec4 _t0CDA = [_t0CD6, _t0CD7, _t0CD8, _t0CD9];
    tensor[4,4] _t0CDB = [_t0CCB, _t0CD0, _t0CD5, _t0CDA];
    real _t0CDC = 0.1e1;
    real _t0CDD = 0.e0;
    real _t0CDE = 0.1e1;
    real _t0CDF = 0.5e0;
    vec4 _t0CE0 = [_t0CDC, _t0CDD, _t0CDE, _t0CDF];
    real _t0CE1 = 0.1e1;
    real _t0CE2 = 0.e0;
    real _t0CE3 = 0.e0;
    real _t0CE4 = 0.e0;
    vec4 _t0CE5 = [_t0CE1, _t0CE2, _t0CE3, _t0CE4];
    real _t0CE6 = 0.e0;
    real _t0CE7 = 0.1e1;
    real _t0CE8 = 0.e0;
    real _t0CE9 = 0.1e1;
    vec4 _t0CEA = [_t0CE6, _t0CE7, _t0CE8, _t0CE9];
    real _t0CEB = 0.e0;
    real _t0CEC = 0.e0;
    real _t0CED = 0.e0;
    real _t0CEE = 0.1e1;
    vec4 _t0CEF = [_t0CEB, _t0CEC, _t0CED, _t0CEE];
    tensor[4,4] _t0CF0 = [_t0CE0, _t0CE5, _t0CEA, _t0CEF];
    real _t0CF1 = 0.1e1;
    real _t0CF2 = 0.e0;
    real _t0CF3 = 0.e0;
    real _t0CF4 = 0.e0;
    vec4 _t0CF5 = [_t0CF1, _t0CF2, _t0CF3, _t0CF4];
    real _t0CF6 = 0.e0;
    real _t0CF7 = 0.1e1;
    real _t0CF8 = 0.e0;
    real _t0CF9 = 0.e0;
    vec4 _t0CFA = [_t0CF6, _t0CF7, _t0CF8, _t0CF9];
    real _t0CFB = 0.e0;
    real _t0CFC = 0.e0;
    real _t0CFD = 0.1e1;
    real _t0CFE = 0.e0;
    vec4 _t0CFF = [_t0CFB, _t0CFC, _t0CFD, _t0CFE];
    real _t0D00 = 0.e0;
    real _t0D01 = 0.e0;
    real _t0D02 = 0.e0;
    real _t0D03 = 0.1e1;
    vec4 _t0D04 = [_t0D00, _t0D01, _t0D02, _t0D03];
    tensor[4,4] _t0D05 = [_t0CF5, _t0CFA, _t0CFF, _t0D04];
    real _t0D06 = 0.e0;
    real _t0D07 = -0.1e1;
    real _t0D08 = 0.e0;
    real _t0D09 = 0.e0;
    vec4 _t0D0A = [_t0D06, _t0D07, _t0D08, _t0D09];
    real _t0D0B = 0.1e1;
    real _t0D0C = 0.e0;
    real _t0D0D = 0.e0;
    real _t0D0E = 0.e0;
    vec4 _t0D0F = [_t0D0B, _t0D0C, _t0D0D, _t0D0E];
    real _t0D10 = 0.e0;
    real _t0D11 = 0.e0;
    real _t0D12 = 0.1e1;
    real _t0D13 = 0.e0;
    vec4 _t0D14 = [_t0D10, _t0D11, _t0D12, _t0D13];
    real _t0D15 = 0.e0;
    real _t0D16 = 0.e0;
    real _t0D17 = 0.e0;
    real _t0D18 = 0.1e1;
    vec4 _t0D19 = [_t0D15, _t0D16, _t0D17, _t0D18];
    tensor[4,4] _t0D1A = [_t0D0A, _t0D0F, _t0D14, _t0D19];
    real _t0D1B = -0.1e1;
    real _t0D1C = 0.e0;
    real _t0D1D = 0.e0;
    real _t0D1E = 0.e0;
    vec4 _t0D1F = [_t0D1B, _t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = 0.e0;
    real _t0D21 = -0.1e1;
    real _t0D22 = 0.e0;
    real _t0D23 = 0.e0;
    vec4 _t0D24 = [_t0D20, _t0D21, _t0D22, _t0D23];
    real _t0D25 = 0.e0;
    real _t0D26 = 0.e0;
    real _t0D27 = 0.1e1;
    real _t0D28 = 0.e0;
    vec4 _t0D29 = [_t0D25, _t0D26, _t0D27, _t0D28];
    real _t0D2A = 0.e0;
    real _t0D2B = 0.e0;
    real _t0D2C = 0.e0;
    real _t0D2D = 0.1e1;
    vec4 _t0D2E = [_t0D2A, _t0D2B, _t0D2C, _t0D2D];
    tensor[4,4] _t0D2F = [_t0D1F, _t0D24, _t0D29, _t0D2E];
    real _t0D30 = 0.e0;
    real _t0D31 = 0.1e1;
    real _t0D32 = 0.e0;
    real _t0D33 = 0.e0;
    vec4 _t0D34 = [_t0D30, _t0D31, _t0D32, _t0D33];
    real _t0D35 = -0.1e1;
    real _t0D36 = 0.e0;
    real _t0D37 = 0.e0;
    real _t0D38 = 0.e0;
    vec4 _t0D39 = [_t0D35, _t0D36, _t0D37, _t0D38];
    real _t0D3A = 0.e0;
    real _t0D3B = 0.e0;
    real _t0D3C = 0.1e1;
    real _t0D3D = 0.e0;
    vec4 _t0D3E = [_t0D3A, _t0D3B, _t0D3C, _t0D3D];
    real _t0D3F = 0.e0;
    real _t0D40 = 0.e0;
    real _t0D41 = 0.e0;
    real _t0D42 = 0.1e1;
    vec4 _t0D43 = [_t0D3F, _t0D40, _t0D41, _t0D42];
    tensor[4,4] _t0D44 = [_t0D34, _t0D39, _t0D3E, _t0D43];
    tensor[4,4][6] _t0D45 = {_t0CDB, _t0CF0, _t0D05, _t0D1A, _t0D2F, _t0D44};
    real _t0D46 = 0.e0;
    real _t0D47 = 0.1e1;
    real _t0D48 = 0.1e1;
    real _t0D49 = 0.5e0;
    vec4 _t0D4A = [_t0D46, _t0D47, _t0D48, _t0D49];
    real _t0D4B = 0.e0;
    real _t0D4C = 0.1e1;
    real _t0D4D = 0.e0;
    real _t0D4E = 0.e0;
    vec4 _t0D4F = [_t0D4B, _t0D4C, _t0D4D, _t0D4E];
    real _t0D50 = -0.1e1;
    real _t0D51 = 0.e0;
    real _t0D52 = 0.e0;
    real _t0D53 = 0.e0;
    vec4 _t0D54 = [_t0D50, _t0D51, _t0D52, _t0D53];
    real _t0D55 = 0.e0;
    real _t0D56 = 0.e0;
    real _t0D57 = 0.e0;
    real _t0D58 = 0.1e1;
    vec4 _t0D59 = [_t0D55, _t0D56, _t0D57, _t0D58];
    tensor[4,4] _t0D5A = [_t0D4A, _t0D4F, _t0D54, _t0D59];
    real _t0D5B = 0.e0;
    real _t0D5C = 0.1e1;
    real _t0D5D = 0.1e1;
    real _t0D5E = 0.5e0;
    vec4 _t0D5F = [_t0D5B, _t0D5C, _t0D5D, _t0D5E];
    real _t0D60 = 0.e0;
    real _t0D61 = 0.1e1;
    real _t0D62 = 0.e0;
    real _t0D63 = 0.e0;
    vec4 _t0D64 = [_t0D60, _t0D61, _t0D62, _t0D63];
    real _t0D65 = -0.1e1;
    real _t0D66 = 0.e0;
    real _t0D67 = 0.e0;
    real _t0D68 = 0.1e1;
    vec4 _t0D69 = [_t0D65, _t0D66, _t0D67, _t0D68];
    real _t0D6A = 0.e0;
    real _t0D6B = 0.e0;
    real _t0D6C = 0.e0;
    real _t0D6D = 0.1e1;
    vec4 _t0D6E = [_t0D6A, _t0D6B, _t0D6C, _t0D6D];
    tensor[4,4] _t0D6F = [_t0D5F, _t0D64, _t0D69, _t0D6E];
    real _t0D70 = 0.e0;
    real _t0D71 = 0.1e1;
    real _t0D72 = 0.e0;
    real _t0D73 = 0.e0;
    vec4 _t0D74 = [_t0D70, _t0D71, _t0D72, _t0D73];
    real _t0D75 = -0.1e1;
    real _t0D76 = 0.e0;
    real _t0D77 = 0.e0;
    real _t0D78 = 0.e0;
    vec4 _t0D79 = [_t0D75, _t0D76, _t0D77, _t0D78];
    real _t0D7A = 0.e0;
    real _t0D7B = 0.e0;
    real _t0D7C = 0.1e1;
    real _t0D7D = 0.e0;
    vec4 _t0D7E = [_t0D7A, _t0D7B, _t0D7C, _t0D7D];
    real _t0D7F = 0.e0;
    real _t0D80 = 0.e0;
    real _t0D81 = 0.e0;
    real _t0D82 = 0.1e1;
    vec4 _t0D83 = [_t0D7F, _t0D80, _t0D81, _t0D82];
    tensor[4,4] _t0D84 = [_t0D74, _t0D79, _t0D7E, _t0D83];
    real _t0D85 = 0.1e1;
    real _t0D86 = 0.e0;
    real _t0D87 = 0.e0;
    real _t0D88 = 0.e0;
    vec4 _t0D89 = [_t0D85, _t0D86, _t0D87, _t0D88];
    real _t0D8A = 0.e0;
    real _t0D8B = 0.1e1;
    real _t0D8C = 0.e0;
    real _t0D8D = 0.e0;
    vec4 _t0D8E = [_t0D8A, _t0D8B, _t0D8C, _t0D8D];
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    real _t0D91 = 0.1e1;
    real _t0D92 = 0.e0;
    vec4 _t0D93 = [_t0D8F, _t0D90, _t0D91, _t0D92];
    real _t0D94 = 0.e0;
    real _t0D95 = 0.e0;
    real _t0D96 = 0.e0;
    real _t0D97 = 0.1e1;
    vec4 _t0D98 = [_t0D94, _t0D95, _t0D96, _t0D97];
    tensor[4,4] _t0D99 = [_t0D89, _t0D8E, _t0D93, _t0D98];
    real _t0D9A = 0.e0;
    real _t0D9B = -0.1e1;
    real _t0D9C = 0.e0;
    real _t0D9D = 0.e0;
    vec4 _t0D9E = [_t0D9A, _t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.1e1;
    real _t0DA0 = 0.e0;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.e0;
    vec4 _t0DA3 = [_t0D9F, _t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = 0.e0;
    real _t0DA5 = 0.e0;
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.e0;
    vec4 _t0DA8 = [_t0DA4, _t0DA5, _t0DA6, _t0DA7];
    real _t0DA9 = 0.e0;
    real _t0DAA = 0.e0;
    real _t0DAB = 0.e0;
    real _t0DAC = 0.1e1;
    vec4 _t0DAD = [_t0DA9, _t0DAA, _t0DAB, _t0DAC];
    tensor[4,4] _t0DAE = [_t0D9E, _t0DA3, _t0DA8, _t0DAD];
    real _t0DAF = -0.1e1;
    real _t0DB0 = 0.e0;
    real _t0DB1 = 0.e0;
    real _t0DB2 = 0.e0;
    vec4 _t0DB3 = [_t0DAF, _t0DB0, _t0DB1, _t0DB2];
    real _t0DB4 = 0.e0;
    real _t0DB5 = -0.1e1;
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.e0;
    vec4 _t0DB8 = [_t0DB4, _t0DB5, _t0DB6, _t0DB7];
    real _t0DB9 = 0.e0;
    real _t0DBA = 0.e0;
    real _t0DBB = 0.1e1;
    real _t0DBC = 0.e0;
    vec4 _t0DBD = [_t0DB9, _t0DBA, _t0DBB, _t0DBC];
    real _t0DBE = 0.e0;
    real _t0DBF = 0.e0;
    real _t0DC0 = 0.e0;
    real _t0DC1 = 0.1e1;
    vec4 _t0DC2 = [_t0DBE, _t0DBF, _t0DC0, _t0DC1];
    tensor[4,4] _t0DC3 = [_t0DB3, _t0DB8, _t0DBD, _t0DC2];
    tensor[4,4][6] _t0DC4 = {_t0D5A, _t0D6F, _t0D84, _t0D99, _t0DAE, _t0DC3};
    real _t0DC5 = -0.1e1;
    real _t0DC6 = 0.e0;
    real _t0DC7 = 0.1e1;
    real _t0DC8 = 0.5e0;
    vec4 _t0DC9 = [_t0DC5, _t0DC6, _t0DC7, _t0DC8];
    real _t0DCA = -0.1e1;
    real _t0DCB = 0.e0;
    real _t0DCC = 0.e0;
    real _t0DCD = 0.e0;
    vec4 _t0DCE = [_t0DCA, _t0DCB, _t0DCC, _t0DCD];
    real _t0DCF = 0.e0;
    real _t0DD0 = -0.1e1;
    real _t0DD1 = 0.e0;
    real _t0DD2 = 0.e0;
    vec4 _t0DD3 = [_t0DCF, _t0DD0, _t0DD1, _t0DD2];
    real _t0DD4 = 0.e0;
    real _t0DD5 = 0.e0;
    real _t0DD6 = 0.e0;
    real _t0DD7 = 0.1e1;
    vec4 _t0DD8 = [_t0DD4, _t0DD5, _t0DD6, _t0DD7];
    tensor[4,4] _t0DD9 = [_t0DC9, _t0DCE, _t0DD3, _t0DD8];
    real _t0DDA = -0.1e1;
    real _t0DDB = 0.e0;
    real _t0DDC = 0.1e1;
    real _t0DDD = 0.5e0;
    vec4 _t0DDE = [_t0DDA, _t0DDB, _t0DDC, _t0DDD];
    real _t0DDF = -0.1e1;
    real _t0DE0 = 0.e0;
    real _t0DE1 = 0.e0;
    real _t0DE2 = 0.e0;
    vec4 _t0DE3 = [_t0DDF, _t0DE0, _t0DE1, _t0DE2];
    real _t0DE4 = 0.e0;
    real _t0DE5 = -0.1e1;
    real _t0DE6 = 0.e0;
    real _t0DE7 = 0.1e1;
    vec4 _t0DE8 = [_t0DE4, _t0DE5, _t0DE6, _t0DE7];
    real _t0DE9 = 0.e0;
    real _t0DEA = 0.e0;
    real _t0DEB = 0.e0;
    real _t0DEC = 0.1e1;
    vec4 _t0DED = [_t0DE9, _t0DEA, _t0DEB, _t0DEC];
    tensor[4,4] _t0DEE = [_t0DDE, _t0DE3, _t0DE8, _t0DED];
    real _t0DEF = -0.1e1;
    real _t0DF0 = 0.e0;
    real _t0DF1 = 0.e0;
    real _t0DF2 = 0.e0;
    vec4 _t0DF3 = [_t0DEF, _t0DF0, _t0DF1, _t0DF2];
    real _t0DF4 = 0.e0;
    real _t0DF5 = -0.1e1;
    real _t0DF6 = 0.e0;
    real _t0DF7 = 0.e0;
    vec4 _t0DF8 = [_t0DF4, _t0DF5, _t0DF6, _t0DF7];
    real _t0DF9 = 0.e0;
    real _t0DFA = 0.e0;
    real _t0DFB = 0.1e1;
    real _t0DFC = 0.e0;
    vec4 _t0DFD = [_t0DF9, _t0DFA, _t0DFB, _t0DFC];
    real _t0DFE = 0.e0;
    real _t0DFF = 0.e0;
    real _t0E00 = 0.e0;
    real _t0E01 = 0.1e1;
    vec4 _t0E02 = [_t0DFE, _t0DFF, _t0E00, _t0E01];
    tensor[4,4] _t0E03 = [_t0DF3, _t0DF8, _t0DFD, _t0E02];
    real _t0E04 = 0.e0;
    real _t0E05 = 0.1e1;
    real _t0E06 = 0.e0;
    real _t0E07 = 0.e0;
    vec4 _t0E08 = [_t0E04, _t0E05, _t0E06, _t0E07];
    real _t0E09 = -0.1e1;
    real _t0E0A = 0.e0;
    real _t0E0B = 0.e0;
    real _t0E0C = 0.e0;
    vec4 _t0E0D = [_t0E09, _t0E0A, _t0E0B, _t0E0C];
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    real _t0E10 = 0.1e1;
    real _t0E11 = 0.e0;
    vec4 _t0E12 = [_t0E0E, _t0E0F, _t0E10, _t0E11];
    real _t0E13 = 0.e0;
    real _t0E14 = 0.e0;
    real _t0E15 = 0.e0;
    real _t0E16 = 0.1e1;
    vec4 _t0E17 = [_t0E13, _t0E14, _t0E15, _t0E16];
    tensor[4,4] _t0E18 = [_t0E08, _t0E0D, _t0E12, _t0E17];
    real _t0E19 = 0.1e1;
    real _t0E1A = 0.e0;
    real _t0E1B = 0.e0;
    real _t0E1C = 0.e0;
    vec4 _t0E1D = [_t0E19, _t0E1A, _t0E1B, _t0E1C];
    real _t0E1E = 0.e0;
    real _t0E1F = 0.1e1;
    real _t0E20 = 0.e0;
    real _t0E21 = 0.e0;
    vec4 _t0E22 = [_t0E1E, _t0E1F, _t0E20, _t0E21];
    real _t0E23 = 0.e0;
    real _t0E24 = 0.e0;
    real _t0E25 = 0.1e1;
    real _t0E26 = 0.e0;
    vec4 _t0E27 = [_t0E23, _t0E24, _t0E25, _t0E26];
    real _t0E28 = 0.e0;
    real _t0E29 = 0.e0;
    real _t0E2A = 0.e0;
    real _t0E2B = 0.1e1;
    vec4 _t0E2C = [_t0E28, _t0E29, _t0E2A, _t0E2B];
    tensor[4,4] _t0E2D = [_t0E1D, _t0E22, _t0E27, _t0E2C];
    real _t0E2E = 0.e0;
    real _t0E2F = -0.1e1;
    real _t0E30 = 0.e0;
    real _t0E31 = 0.e0;
    vec4 _t0E32 = [_t0E2E, _t0E2F, _t0E30, _t0E31];
    real _t0E33 = 0.1e1;
    real _t0E34 = 0.e0;
    real _t0E35 = 0.e0;
    real _t0E36 = 0.e0;
    vec4 _t0E37 = [_t0E33, _t0E34, _t0E35, _t0E36];
    real _t0E38 = 0.e0;
    real _t0E39 = 0.e0;
    real _t0E3A = 0.1e1;
    real _t0E3B = 0.e0;
    vec4 _t0E3C = [_t0E38, _t0E39, _t0E3A, _t0E3B];
    real _t0E3D = 0.e0;
    real _t0E3E = 0.e0;
    real _t0E3F = 0.e0;
    real _t0E40 = 0.1e1;
    vec4 _t0E41 = [_t0E3D, _t0E3E, _t0E3F, _t0E40];
    tensor[4,4] _t0E42 = [_t0E32, _t0E37, _t0E3C, _t0E41];
    tensor[4,4][6] _t0E43 = {_t0DD9, _t0DEE, _t0E03, _t0E18, _t0E2D, _t0E42};
    real _t0E44 = 0.e0;
    real _t0E45 = -0.1e1;
    real _t0E46 = 0.1e1;
    real _t0E47 = 0.5e0;
    vec4 _t0E48 = [_t0E44, _t0E45, _t0E46, _t0E47];
    real _t0E49 = 0.e0;
    real _t0E4A = -0.1e1;
    real _t0E4B = 0.e0;
    real _t0E4C = 0.e0;
    vec4 _t0E4D = [_t0E49, _t0E4A, _t0E4B, _t0E4C];
    real _t0E4E = 0.1e1;
    real _t0E4F = 0.e0;
    real _t0E50 = 0.e0;
    real _t0E51 = 0.e0;
    vec4 _t0E52 = [_t0E4E, _t0E4F, _t0E50, _t0E51];
    real _t0E53 = 0.e0;
    real _t0E54 = 0.e0;
    real _t0E55 = 0.e0;
    real _t0E56 = 0.1e1;
    vec4 _t0E57 = [_t0E53, _t0E54, _t0E55, _t0E56];
    tensor[4,4] _t0E58 = [_t0E48, _t0E4D, _t0E52, _t0E57];
    real _t0E59 = 0.e0;
    real _t0E5A = -0.1e1;
    real _t0E5B = 0.1e1;
    real _t0E5C = 0.5e0;
    vec4 _t0E5D = [_t0E59, _t0E5A, _t0E5B, _t0E5C];
    real _t0E5E = 0.e0;
    real _t0E5F = -0.1e1;
    real _t0E60 = 0.e0;
    real _t0E61 = 0.e0;
    vec4 _t0E62 = [_t0E5E, _t0E5F, _t0E60, _t0E61];
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.e0;
    real _t0E65 = 0.e0;
    real _t0E66 = 0.1e1;
    vec4 _t0E67 = [_t0E63, _t0E64, _t0E65, _t0E66];
    real _t0E68 = 0.e0;
    real _t0E69 = 0.e0;
    real _t0E6A = 0.e0;
    real _t0E6B = 0.1e1;
    vec4 _t0E6C = [_t0E68, _t0E69, _t0E6A, _t0E6B];
    tensor[4,4] _t0E6D = [_t0E5D, _t0E62, _t0E67, _t0E6C];
    real _t0E6E = 0.e0;
    real _t0E6F = -0.1e1;
    real _t0E70 = 0.e0;
    real _t0E71 = 0.e0;
    vec4 _t0E72 = [_t0E6E, _t0E6F, _t0E70, _t0E71];
    real _t0E73 = 0.1e1;
    real _t0E74 = 0.e0;
    real _t0E75 = 0.e0;
    real _t0E76 = 0.e0;
    vec4 _t0E77 = [_t0E73, _t0E74, _t0E75, _t0E76];
    real _t0E78 = 0.e0;
    real _t0E79 = 0.e0;
    real _t0E7A = 0.1e1;
    real _t0E7B = 0.e0;
    vec4 _t0E7C = [_t0E78, _t0E79, _t0E7A, _t0E7B];
    real _t0E7D = 0.e0;
    real _t0E7E = 0.e0;
    real _t0E7F = 0.e0;
    real _t0E80 = 0.1e1;
    vec4 _t0E81 = [_t0E7D, _t0E7E, _t0E7F, _t0E80];
    tensor[4,4] _t0E82 = [_t0E72, _t0E77, _t0E7C, _t0E81];
    real _t0E83 = -0.1e1;
    real _t0E84 = 0.e0;
    real _t0E85 = 0.e0;
    real _t0E86 = 0.e0;
    vec4 _t0E87 = [_t0E83, _t0E84, _t0E85, _t0E86];
    real _t0E88 = 0.e0;
    real _t0E89 = -0.1e1;
    real _t0E8A = 0.e0;
    real _t0E8B = 0.e0;
    vec4 _t0E8C = [_t0E88, _t0E89, _t0E8A, _t0E8B];
    real _t0E8D = 0.e0;
    real _t0E8E = 0.e0;
    real _t0E8F = 0.1e1;
    real _t0E90 = 0.e0;
    vec4 _t0E91 = [_t0E8D, _t0E8E, _t0E8F, _t0E90];
    real _t0E92 = 0.e0;
    real _t0E93 = 0.e0;
    real _t0E94 = 0.e0;
    real _t0E95 = 0.1e1;
    vec4 _t0E96 = [_t0E92, _t0E93, _t0E94, _t0E95];
    tensor[4,4] _t0E97 = [_t0E87, _t0E8C, _t0E91, _t0E96];
    real _t0E98 = 0.e0;
    real _t0E99 = 0.1e1;
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    vec4 _t0E9C = [_t0E98, _t0E99, _t0E9A, _t0E9B];
    real _t0E9D = -0.1e1;
    real _t0E9E = 0.e0;
    real _t0E9F = 0.e0;
    real _t0EA0 = 0.e0;
    vec4 _t0EA1 = [_t0E9D, _t0E9E, _t0E9F, _t0EA0];
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.e0;
    real _t0EA4 = 0.1e1;
    real _t0EA5 = 0.e0;
    vec4 _t0EA6 = [_t0EA2, _t0EA3, _t0EA4, _t0EA5];
    real _t0EA7 = 0.e0;
    real _t0EA8 = 0.e0;
    real _t0EA9 = 0.e0;
    real _t0EAA = 0.1e1;
    vec4 _t0EAB = [_t0EA7, _t0EA8, _t0EA9, _t0EAA];
    tensor[4,4] _t0EAC = [_t0E9C, _t0EA1, _t0EA6, _t0EAB];
    real _t0EAD = 0.1e1;
    real _t0EAE = 0.e0;
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.e0;
    vec4 _t0EB1 = [_t0EAD, _t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.1e1;
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.e0;
    vec4 _t0EB6 = [_t0EB2, _t0EB3, _t0EB4, _t0EB5];
    real _t0EB7 = 0.e0;
    real _t0EB8 = 0.e0;
    real _t0EB9 = 0.1e1;
    real _t0EBA = 0.e0;
    vec4 _t0EBB = [_t0EB7, _t0EB8, _t0EB9, _t0EBA];
    real _t0EBC = 0.e0;
    real _t0EBD = 0.e0;
    real _t0EBE = 0.e0;
    real _t0EBF = 0.1e1;
    vec4 _t0EC0 = [_t0EBC, _t0EBD, _t0EBE, _t0EBF];
    tensor[4,4] _t0EC1 = [_t0EB1, _t0EB6, _t0EBB, _t0EC0];
    tensor[4,4][6] _t0EC2 = {_t0E58, _t0E6D, _t0E82, _t0E97, _t0EAC, _t0EC1};
    tensor[4,4][6][6] _t0EC3 = {_t0C47, _t0CC6, _t0D45, _t0DC4, _t0E43, _t0EC2};
    real _t0EC4 = time0597[1];
    int _t0EC5 = prim $r2i01B7 (_t0EC4);
    tensor[4,4][6] _t0EC6 = prim $sub01C0<tensor[4,4][6]; %6> (_t0EC3, _t0EC5);
    real _t0EC7 = time0597[1];
    int _t0EC8 = prim $r2i01B7 (_t0EC7);
    int[2] _t0EC9 = func nextCell4059B (_t0EC8, cellId0594, mesh0593);
    int _t0ECA = 1;
    int _t0ECB = prim $sub01C0<int; %2> (_t0EC9, _t0ECA);
    tensor[4,4] _t0ECC = prim $sub01C0<tensor[4,4]; %6> (_t0EC6, _t0ECB);
    real _t0ECD = time0597[0];
    vec3 _t0ECE = prim *0036<$[3]> (_t0ECD, dPos0596);
    vec3 _t0ECF = prim +0017<$[3]> (_t0ECE, refPos0595);
    real _t0ED0 = _t0ECF[0];
    real _t0ED1 = time0597[0];
    vec3 _t0ED2 = prim *0036<$[3]> (_t0ED1, dPos0596);
    vec3 _t0ED3 = prim +0017<$[3]> (_t0ED2, refPos0595);
    real _t0ED4 = _t0ED3[1];
    real _t0ED5 = time0597[0];
    vec3 _t0ED6 = prim *0036<$[3]> (_t0ED5, dPos0596);
    vec3 _t0ED7 = prim +0017<$[3]> (_t0ED6, refPos0595);
    real _t0ED8 = _t0ED7[2];
    real _t0ED9 = 0.1e1;
    vec4 _t0EDA = [_t0ED0, _t0ED4, _t0ED8, _t0ED9];
    vec4 _t0EDB = prim •00CE<$[4,4]; $[4]; $[4]> (_t0ECC, _t0EDA);
    real _t0EDC = _t0EDB[1];
    real _t0EDD = 0.1e1;
    real _t0EDE = 0.e0;
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.e0;
    vec4 _t0EE1 = [_t0EDD, _t0EDE, _t0EDF, _t0EE0];
    real _t0EE2 = 0.e0;
    real _t0EE3 = 0.1e1;
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
    real _t0EE7 = 0.e0;
    real _t0EE8 = 0.e0;
    real _t0EE9 = 0.1e1;
    real _t0EEA = 0.e0;
    vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    real _t0EEE = 0.e0;
    real _t0EEF = 0.1e1;
    vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
    tensor[4,4] _t0EF1 = [_t0EE1, _t0EE6, _t0EEB, _t0EF0];
    real _t0EF2 = 0.1e1;
    real _t0EF3 = 0.e0;
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    vec4 _t0EF6 = [_t0EF2, _t0EF3, _t0EF4, _t0EF5];
    real _t0EF7 = 0.e0;
    real _t0EF8 = 0.1e1;
    real _t0EF9 = 0.e0;
    real _t0EFA = 0.e0;
    vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
    real _t0EFC = 0.e0;
    real _t0EFD = 0.e0;
    real _t0EFE = 0.1e1;
    real _t0EFF = 0.1e1;
    vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
    real _t0F01 = 0.e0;
    real _t0F02 = 0.e0;
    real _t0F03 = 0.e0;
    real _t0F04 = 0.1e1;
    vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
    tensor[4,4] _t0F06 = [_t0EF6, _t0EFB, _t0F00, _t0F05];
    real _t0F07 = 0.e0;
    real _t0F08 = 0.1e1;
    real _t0F09 = 0.e0;
    real _t0F0A = 0.e0;
    vec4 _t0F0B = [_t0F07, _t0F08, _t0F09, _t0F0A];
    real _t0F0C = 0.e0;
    real _t0F0D = 0.e0;
    real _t0F0E = 0.1e1;
    real _t0F0F = 0.e0;
    vec4 _t0F10 = [_t0F0C, _t0F0D, _t0F0E, _t0F0F];
    real _t0F11 = 0.1e1;
    real _t0F12 = -0.1e1;
    real _t0F13 = 0.e0;
    real _t0F14 = -0.5e0;
    vec4 _t0F15 = [_t0F11, _t0F12, _t0F13, _t0F14];
    real _t0F16 = 0.e0;
    real _t0F17 = 0.e0;
    real _t0F18 = 0.e0;
    real _t0F19 = 0.1e1;
    vec4 _t0F1A = [_t0F16, _t0F17, _t0F18, _t0F19];
    tensor[4,4] _t0F1B = [_t0F0B, _t0F10, _t0F15, _t0F1A];
    real _t0F1C = 0.e0;
    real _t0F1D = 0.e0;
    real _t0F1E = -0.1e1;
    real _t0F1F = 0.e0;
    vec4 _t0F20 = [_t0F1C, _t0F1D, _t0F1E, _t0F1F];
    real _t0F21 = 0.e0;
    real _t0F22 = 0.1e1;
    real _t0F23 = 0.e0;
    real _t0F24 = 0.e0;
    vec4 _t0F25 = [_t0F21, _t0F22, _t0F23, _t0F24];
    real _t0F26 = 0.1e1;
    real _t0F27 = -0.1e1;
    real _t0F28 = 0.e0;
    real _t0F29 = -0.5e0;
    vec4 _t0F2A = [_t0F26, _t0F27, _t0F28, _t0F29];
    real _t0F2B = 0.e0;
    real _t0F2C = 0.e0;
    real _t0F2D = 0.e0;
    real _t0F2E = 0.1e1;
    vec4 _t0F2F = [_t0F2B, _t0F2C, _t0F2D, _t0F2E];
    tensor[4,4] _t0F30 = [_t0F20, _t0F25, _t0F2A, _t0F2F];
    real _t0F31 = 0.e0;
    real _t0F32 = -0.1e1;
    real _t0F33 = 0.e0;
    real _t0F34 = 0.e0;
    vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
    real _t0F36 = 0.e0;
    real _t0F37 = 0.e0;
    real _t0F38 = -0.1e1;
    real _t0F39 = 0.e0;
    vec4 _t0F3A = [_t0F36, _t0F37, _t0F38, _t0F39];
    real _t0F3B = 0.1e1;
    real _t0F3C = -0.1e1;
    real _t0F3D = 0.e0;
    real _t0F3E = -0.5e0;
    vec4 _t0F3F = [_t0F3B, _t0F3C, _t0F3D, _t0F3E];
    real _t0F40 = 0.e0;
    real _t0F41 = 0.e0;
    real _t0F42 = 0.e0;
    real _t0F43 = 0.1e1;
    vec4 _t0F44 = [_t0F40, _t0F41, _t0F42, _t0F43];
    tensor[4,4] _t0F45 = [_t0F35, _t0F3A, _t0F3F, _t0F44];
    real _t0F46 = 0.e0;
    real _t0F47 = 0.e0;
    real _t0F48 = 0.1e1;
    real _t0F49 = 0.e0;
    vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
    real _t0F4B = 0.e0;
    real _t0F4C = -0.1e1;
    real _t0F4D = 0.e0;
    real _t0F4E = 0.e0;
    vec4 _t0F4F = [_t0F4B, _t0F4C, _t0F4D, _t0F4E];
    real _t0F50 = 0.1e1;
    real _t0F51 = -0.1e1;
    real _t0F52 = 0.e0;
    real _t0F53 = -0.5e0;
    vec4 _t0F54 = [_t0F50, _t0F51, _t0F52, _t0F53];
    real _t0F55 = 0.e0;
    real _t0F56 = 0.e0;
    real _t0F57 = 0.e0;
    real _t0F58 = 0.1e1;
    vec4 _t0F59 = [_t0F55, _t0F56, _t0F57, _t0F58];
    tensor[4,4] _t0F5A = [_t0F4A, _t0F4F, _t0F54, _t0F59];
    tensor[4,4][6] _t0F5B = {_t0EF1, _t0F06, _t0F1B, _t0F30, _t0F45, _t0F5A};
    real _t0F5C = 0.1e1;
    real _t0F5D = 0.e0;
    real _t0F5E = 0.e0;
    real _t0F5F = 0.e0;
    vec4 _t0F60 = [_t0F5C, _t0F5D, _t0F5E, _t0F5F];
    real _t0F61 = 0.e0;
    real _t0F62 = 0.1e1;
    real _t0F63 = 0.e0;
    real _t0F64 = 0.e0;
    vec4 _t0F65 = [_t0F61, _t0F62, _t0F63, _t0F64];
    real _t0F66 = 0.e0;
    real _t0F67 = 0.e0;
    real _t0F68 = 0.1e1;
    real _t0F69 = -0.1e1;
    vec4 _t0F6A = [_t0F66, _t0F67, _t0F68, _t0F69];
    real _t0F6B = 0.e0;
    real _t0F6C = 0.e0;
    real _t0F6D = 0.e0;
    real _t0F6E = 0.1e1;
    vec4 _t0F6F = [_t0F6B, _t0F6C, _t0F6D, _t0F6E];
    tensor[4,4] _t0F70 = [_t0F60, _t0F65, _t0F6A, _t0F6F];
    real _t0F71 = 0.1e1;
    real _t0F72 = 0.e0;
    real _t0F73 = 0.e0;
    real _t0F74 = 0.e0;
    vec4 _t0F75 = [_t0F71, _t0F72, _t0F73, _t0F74];
    real _t0F76 = 0.e0;
    real _t0F77 = 0.1e1;
    real _t0F78 = 0.e0;
    real _t0F79 = 0.e0;
    vec4 _t0F7A = [_t0F76, _t0F77, _t0F78, _t0F79];
    real _t0F7B = 0.e0;
    real _t0F7C = 0.e0;
    real _t0F7D = 0.1e1;
    real _t0F7E = 0.e0;
    vec4 _t0F7F = [_t0F7B, _t0F7C, _t0F7D, _t0F7E];
    real _t0F80 = 0.e0;
    real _t0F81 = 0.e0;
    real _t0F82 = 0.e0;
    real _t0F83 = 0.1e1;
    vec4 _t0F84 = [_t0F80, _t0F81, _t0F82, _t0F83];
    tensor[4,4] _t0F85 = [_t0F75, _t0F7A, _t0F7F, _t0F84];
    real _t0F86 = 0.e0;
    real _t0F87 = 0.1e1;
    real _t0F88 = 0.e0;
    real _t0F89 = 0.e0;
    vec4 _t0F8A = [_t0F86, _t0F87, _t0F88, _t0F89];
    real _t0F8B = 0.e0;
    real _t0F8C = 0.e0;
    real _t0F8D = 0.1e1;
    real _t0F8E = -0.1e1;
    vec4 _t0F8F = [_t0F8B, _t0F8C, _t0F8D, _t0F8E];
    real _t0F90 = 0.1e1;
    real _t0F91 = -0.1e1;
    real _t0F92 = 0.e0;
    real _t0F93 = -0.5e0;
    vec4 _t0F94 = [_t0F90, _t0F91, _t0F92, _t0F93];
    real _t0F95 = 0.e0;
    real _t0F96 = 0.e0;
    real _t0F97 = 0.e0;
    real _t0F98 = 0.1e1;
    vec4 _t0F99 = [_t0F95, _t0F96, _t0F97, _t0F98];
    tensor[4,4] _t0F9A = [_t0F8A, _t0F8F, _t0F94, _t0F99];
    real _t0F9B = 0.e0;
    real _t0F9C = 0.e0;
    real _t0F9D = -0.1e1;
    real _t0F9E = 0.1e1;
    vec4 _t0F9F = [_t0F9B, _t0F9C, _t0F9D, _t0F9E];
    real _t0FA0 = 0.e0;
    real _t0FA1 = 0.1e1;
    real _t0FA2 = 0.e0;
    real _t0FA3 = 0.e0;
    vec4 _t0FA4 = [_t0FA0, _t0FA1, _t0FA2, _t0FA3];
    real _t0FA5 = 0.1e1;
    real _t0FA6 = -0.1e1;
    real _t0FA7 = 0.e0;
    real _t0FA8 = -0.5e0;
    vec4 _t0FA9 = [_t0FA5, _t0FA6, _t0FA7, _t0FA8];
    real _t0FAA = 0.e0;
    real _t0FAB = 0.e0;
    real _t0FAC = 0.e0;
    real _t0FAD = 0.1e1;
    vec4 _t0FAE = [_t0FAA, _t0FAB, _t0FAC, _t0FAD];
    tensor[4,4] _t0FAF = [_t0F9F, _t0FA4, _t0FA9, _t0FAE];
    real _t0FB0 = 0.e0;
    real _t0FB1 = -0.1e1;
    real _t0FB2 = 0.e0;
    real _t0FB3 = 0.e0;
    vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
    real _t0FB5 = 0.e0;
    real _t0FB6 = 0.e0;
    real _t0FB7 = -0.1e1;
    real _t0FB8 = 0.1e1;
    vec4 _t0FB9 = [_t0FB5, _t0FB6, _t0FB7, _t0FB8];
    real _t0FBA = 0.1e1;
    real _t0FBB = -0.1e1;
    real _t0FBC = 0.e0;
    real _t0FBD = -0.5e0;
    vec4 _t0FBE = [_t0FBA, _t0FBB, _t0FBC, _t0FBD];
    real _t0FBF = 0.e0;
    real _t0FC0 = 0.e0;
    real _t0FC1 = 0.e0;
    real _t0FC2 = 0.1e1;
    vec4 _t0FC3 = [_t0FBF, _t0FC0, _t0FC1, _t0FC2];
    tensor[4,4] _t0FC4 = [_t0FB4, _t0FB9, _t0FBE, _t0FC3];
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    real _t0FC7 = 0.1e1;
    real _t0FC8 = -0.1e1;
    vec4 _t0FC9 = [_t0FC5, _t0FC6, _t0FC7, _t0FC8];
    real _t0FCA = 0.e0;
    real _t0FCB = -0.1e1;
    real _t0FCC = 0.e0;
    real _t0FCD = 0.e0;
    vec4 _t0FCE = [_t0FCA, _t0FCB, _t0FCC, _t0FCD];
    real _t0FCF = 0.1e1;
    real _t0FD0 = -0.1e1;
    real _t0FD1 = 0.e0;
    real _t0FD2 = -0.5e0;
    vec4 _t0FD3 = [_t0FCF, _t0FD0, _t0FD1, _t0FD2];
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.e0;
    real _t0FD6 = 0.e0;
    real _t0FD7 = 0.1e1;
    vec4 _t0FD8 = [_t0FD4, _t0FD5, _t0FD6, _t0FD7];
    tensor[4,4] _t0FD9 = [_t0FC9, _t0FCE, _t0FD3, _t0FD8];
    tensor[4,4][6] _t0FDA = {_t0F70, _t0F85, _t0F9A, _t0FAF, _t0FC4, _t0FD9};
    real _t0FDB = 0.1e1;
    real _t0FDC = 0.e0;
    real _t0FDD = 0.1e1;
    real _t0FDE = 0.5e0;
    vec4 _t0FDF = [_t0FDB, _t0FDC, _t0FDD, _t0FDE];
    real _t0FE0 = 0.1e1;
    real _t0FE1 = 0.e0;
    real _t0FE2 = 0.e0;
    real _t0FE3 = 0.e0;
    vec4 _t0FE4 = [_t0FE0, _t0FE1, _t0FE2, _t0FE3];
    real _t0FE5 = 0.e0;
    real _t0FE6 = 0.1e1;
    real _t0FE7 = 0.e0;
    real _t0FE8 = 0.e0;
    vec4 _t0FE9 = [_t0FE5, _t0FE6, _t0FE7, _t0FE8];
    real _t0FEA = 0.e0;
    real _t0FEB = 0.e0;
    real _t0FEC = 0.e0;
    real _t0FED = 0.1e1;
    vec4 _t0FEE = [_t0FEA, _t0FEB, _t0FEC, _t0FED];
    tensor[4,4] _t0FEF = [_t0FDF, _t0FE4, _t0FE9, _t0FEE];
    real _t0FF0 = 0.1e1;
    real _t0FF1 = 0.e0;
    real _t0FF2 = 0.1e1;
    real _t0FF3 = 0.5e0;
    vec4 _t0FF4 = [_t0FF0, _t0FF1, _t0FF2, _t0FF3];
    real _t0FF5 = 0.1e1;
    real _t0FF6 = 0.e0;
    real _t0FF7 = 0.e0;
    real _t0FF8 = 0.e0;
    vec4 _t0FF9 = [_t0FF5, _t0FF6, _t0FF7, _t0FF8];
    real _t0FFA = 0.e0;
    real _t0FFB = 0.1e1;
    real _t0FFC = 0.e0;
    real _t0FFD = 0.1e1;
    vec4 _t0FFE = [_t0FFA, _t0FFB, _t0FFC, _t0FFD];
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = 0.e0;
    real _t1002 = 0.1e1;
    vec4 _t1003 = [_t0FFF, _t1000, _t1001, _t1002];
    tensor[4,4] _t1004 = [_t0FF4, _t0FF9, _t0FFE, _t1003];
    real _t1005 = 0.1e1;
    real _t1006 = 0.e0;
    real _t1007 = 0.e0;
    real _t1008 = 0.e0;
    vec4 _t1009 = [_t1005, _t1006, _t1007, _t1008];
    real _t100A = 0.e0;
    real _t100B = 0.1e1;
    real _t100C = 0.e0;
    real _t100D = 0.e0;
    vec4 _t100E = [_t100A, _t100B, _t100C, _t100D];
    real _t100F = 0.e0;
    real _t1010 = 0.e0;
    real _t1011 = 0.1e1;
    real _t1012 = 0.e0;
    vec4 _t1013 = [_t100F, _t1010, _t1011, _t1012];
    real _t1014 = 0.e0;
    real _t1015 = 0.e0;
    real _t1016 = 0.e0;
    real _t1017 = 0.1e1;
    vec4 _t1018 = [_t1014, _t1015, _t1016, _t1017];
    tensor[4,4] _t1019 = [_t1009, _t100E, _t1013, _t1018];
    real _t101A = 0.e0;
    real _t101B = -0.1e1;
    real _t101C = 0.e0;
    real _t101D = 0.e0;
    vec4 _t101E = [_t101A, _t101B, _t101C, _t101D];
    real _t101F = 0.1e1;
    real _t1020 = 0.e0;
    real _t1021 = 0.e0;
    real _t1022 = 0.e0;
    vec4 _t1023 = [_t101F, _t1020, _t1021, _t1022];
    real _t1024 = 0.e0;
    real _t1025 = 0.e0;
    real _t1026 = 0.1e1;
    real _t1027 = 0.e0;
    vec4 _t1028 = [_t1024, _t1025, _t1026, _t1027];
    real _t1029 = 0.e0;
    real _t102A = 0.e0;
    real _t102B = 0.e0;
    real _t102C = 0.1e1;
    vec4 _t102D = [_t1029, _t102A, _t102B, _t102C];
    tensor[4,4] _t102E = [_t101E, _t1023, _t1028, _t102D];
    real _t102F = -0.1e1;
    real _t1030 = 0.e0;
    real _t1031 = 0.e0;
    real _t1032 = 0.e0;
    vec4 _t1033 = [_t102F, _t1030, _t1031, _t1032];
    real _t1034 = 0.e0;
    real _t1035 = -0.1e1;
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    vec4 _t1038 = [_t1034, _t1035, _t1036, _t1037];
    real _t1039 = 0.e0;
    real _t103A = 0.e0;
    real _t103B = 0.1e1;
    real _t103C = 0.e0;
    vec4 _t103D = [_t1039, _t103A, _t103B, _t103C];
    real _t103E = 0.e0;
    real _t103F = 0.e0;
    real _t1040 = 0.e0;
    real _t1041 = 0.1e1;
    vec4 _t1042 = [_t103E, _t103F, _t1040, _t1041];
    tensor[4,4] _t1043 = [_t1033, _t1038, _t103D, _t1042];
    real _t1044 = 0.e0;
    real _t1045 = 0.1e1;
    real _t1046 = 0.e0;
    real _t1047 = 0.e0;
    vec4 _t1048 = [_t1044, _t1045, _t1046, _t1047];
    real _t1049 = -0.1e1;
    real _t104A = 0.e0;
    real _t104B = 0.e0;
    real _t104C = 0.e0;
    vec4 _t104D = [_t1049, _t104A, _t104B, _t104C];
    real _t104E = 0.e0;
    real _t104F = 0.e0;
    real _t1050 = 0.1e1;
    real _t1051 = 0.e0;
    vec4 _t1052 = [_t104E, _t104F, _t1050, _t1051];
    real _t1053 = 0.e0;
    real _t1054 = 0.e0;
    real _t1055 = 0.e0;
    real _t1056 = 0.1e1;
    vec4 _t1057 = [_t1053, _t1054, _t1055, _t1056];
    tensor[4,4] _t1058 = [_t1048, _t104D, _t1052, _t1057];
    tensor[4,4][6] _t1059 = {_t0FEF, _t1004, _t1019, _t102E, _t1043, _t1058};
    real _t105A = 0.e0;
    real _t105B = 0.1e1;
    real _t105C = 0.1e1;
    real _t105D = 0.5e0;
    vec4 _t105E = [_t105A, _t105B, _t105C, _t105D];
    real _t105F = 0.e0;
    real _t1060 = 0.1e1;
    real _t1061 = 0.e0;
    real _t1062 = 0.e0;
    vec4 _t1063 = [_t105F, _t1060, _t1061, _t1062];
    real _t1064 = -0.1e1;
    real _t1065 = 0.e0;
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    vec4 _t1068 = [_t1064, _t1065, _t1066, _t1067];
    real _t1069 = 0.e0;
    real _t106A = 0.e0;
    real _t106B = 0.e0;
    real _t106C = 0.1e1;
    vec4 _t106D = [_t1069, _t106A, _t106B, _t106C];
    tensor[4,4] _t106E = [_t105E, _t1063, _t1068, _t106D];
    real _t106F = 0.e0;
    real _t1070 = 0.1e1;
    real _t1071 = 0.1e1;
    real _t1072 = 0.5e0;
    vec4 _t1073 = [_t106F, _t1070, _t1071, _t1072];
    real _t1074 = 0.e0;
    real _t1075 = 0.1e1;
    real _t1076 = 0.e0;
    real _t1077 = 0.e0;
    vec4 _t1078 = [_t1074, _t1075, _t1076, _t1077];
    real _t1079 = -0.1e1;
    real _t107A = 0.e0;
    real _t107B = 0.e0;
    real _t107C = 0.1e1;
    vec4 _t107D = [_t1079, _t107A, _t107B, _t107C];
    real _t107E = 0.e0;
    real _t107F = 0.e0;
    real _t1080 = 0.e0;
    real _t1081 = 0.1e1;
    vec4 _t1082 = [_t107E, _t107F, _t1080, _t1081];
    tensor[4,4] _t1083 = [_t1073, _t1078, _t107D, _t1082];
    real _t1084 = 0.e0;
    real _t1085 = 0.1e1;
    real _t1086 = 0.e0;
    real _t1087 = 0.e0;
    vec4 _t1088 = [_t1084, _t1085, _t1086, _t1087];
    real _t1089 = -0.1e1;
    real _t108A = 0.e0;
    real _t108B = 0.e0;
    real _t108C = 0.e0;
    vec4 _t108D = [_t1089, _t108A, _t108B, _t108C];
    real _t108E = 0.e0;
    real _t108F = 0.e0;
    real _t1090 = 0.1e1;
    real _t1091 = 0.e0;
    vec4 _t1092 = [_t108E, _t108F, _t1090, _t1091];
    real _t1093 = 0.e0;
    real _t1094 = 0.e0;
    real _t1095 = 0.e0;
    real _t1096 = 0.1e1;
    vec4 _t1097 = [_t1093, _t1094, _t1095, _t1096];
    tensor[4,4] _t1098 = [_t1088, _t108D, _t1092, _t1097];
    real _t1099 = 0.1e1;
    real _t109A = 0.e0;
    real _t109B = 0.e0;
    real _t109C = 0.e0;
    vec4 _t109D = [_t1099, _t109A, _t109B, _t109C];
    real _t109E = 0.e0;
    real _t109F = 0.1e1;
    real _t10A0 = 0.e0;
    real _t10A1 = 0.e0;
    vec4 _t10A2 = [_t109E, _t109F, _t10A0, _t10A1];
    real _t10A3 = 0.e0;
    real _t10A4 = 0.e0;
    real _t10A5 = 0.1e1;
    real _t10A6 = 0.e0;
    vec4 _t10A7 = [_t10A3, _t10A4, _t10A5, _t10A6];
    real _t10A8 = 0.e0;
    real _t10A9 = 0.e0;
    real _t10AA = 0.e0;
    real _t10AB = 0.1e1;
    vec4 _t10AC = [_t10A8, _t10A9, _t10AA, _t10AB];
    tensor[4,4] _t10AD = [_t109D, _t10A2, _t10A7, _t10AC];
    real _t10AE = 0.e0;
    real _t10AF = -0.1e1;
    real _t10B0 = 0.e0;
    real _t10B1 = 0.e0;
    vec4 _t10B2 = [_t10AE, _t10AF, _t10B0, _t10B1];
    real _t10B3 = 0.1e1;
    real _t10B4 = 0.e0;
    real _t10B5 = 0.e0;
    real _t10B6 = 0.e0;
    vec4 _t10B7 = [_t10B3, _t10B4, _t10B5, _t10B6];
    real _t10B8 = 0.e0;
    real _t10B9 = 0.e0;
    real _t10BA = 0.1e1;
    real _t10BB = 0.e0;
    vec4 _t10BC = [_t10B8, _t10B9, _t10BA, _t10BB];
    real _t10BD = 0.e0;
    real _t10BE = 0.e0;
    real _t10BF = 0.e0;
    real _t10C0 = 0.1e1;
    vec4 _t10C1 = [_t10BD, _t10BE, _t10BF, _t10C0];
    tensor[4,4] _t10C2 = [_t10B2, _t10B7, _t10BC, _t10C1];
    real _t10C3 = -0.1e1;
    real _t10C4 = 0.e0;
    real _t10C5 = 0.e0;
    real _t10C6 = 0.e0;
    vec4 _t10C7 = [_t10C3, _t10C4, _t10C5, _t10C6];
    real _t10C8 = 0.e0;
    real _t10C9 = -0.1e1;
    real _t10CA = 0.e0;
    real _t10CB = 0.e0;
    vec4 _t10CC = [_t10C8, _t10C9, _t10CA, _t10CB];
    real _t10CD = 0.e0;
    real _t10CE = 0.e0;
    real _t10CF = 0.1e1;
    real _t10D0 = 0.e0;
    vec4 _t10D1 = [_t10CD, _t10CE, _t10CF, _t10D0];
    real _t10D2 = 0.e0;
    real _t10D3 = 0.e0;
    real _t10D4 = 0.e0;
    real _t10D5 = 0.1e1;
    vec4 _t10D6 = [_t10D2, _t10D3, _t10D4, _t10D5];
    tensor[4,4] _t10D7 = [_t10C7, _t10CC, _t10D1, _t10D6];
    tensor[4,4][6] _t10D8 = {_t106E, _t1083, _t1098, _t10AD, _t10C2, _t10D7};
    real _t10D9 = -0.1e1;
    real _t10DA = 0.e0;
    real _t10DB = 0.1e1;
    real _t10DC = 0.5e0;
    vec4 _t10DD = [_t10D9, _t10DA, _t10DB, _t10DC];
    real _t10DE = -0.1e1;
    real _t10DF = 0.e0;
    real _t10E0 = 0.e0;
    real _t10E1 = 0.e0;
    vec4 _t10E2 = [_t10DE, _t10DF, _t10E0, _t10E1];
    real _t10E3 = 0.e0;
    real _t10E4 = -0.1e1;
    real _t10E5 = 0.e0;
    real _t10E6 = 0.e0;
    vec4 _t10E7 = [_t10E3, _t10E4, _t10E5, _t10E6];
    real _t10E8 = 0.e0;
    real _t10E9 = 0.e0;
    real _t10EA = 0.e0;
    real _t10EB = 0.1e1;
    vec4 _t10EC = [_t10E8, _t10E9, _t10EA, _t10EB];
    tensor[4,4] _t10ED = [_t10DD, _t10E2, _t10E7, _t10EC];
    real _t10EE = -0.1e1;
    real _t10EF = 0.e0;
    real _t10F0 = 0.1e1;
    real _t10F1 = 0.5e0;
    vec4 _t10F2 = [_t10EE, _t10EF, _t10F0, _t10F1];
    real _t10F3 = -0.1e1;
    real _t10F4 = 0.e0;
    real _t10F5 = 0.e0;
    real _t10F6 = 0.e0;
    vec4 _t10F7 = [_t10F3, _t10F4, _t10F5, _t10F6];
    real _t10F8 = 0.e0;
    real _t10F9 = -0.1e1;
    real _t10FA = 0.e0;
    real _t10FB = 0.1e1;
    vec4 _t10FC = [_t10F8, _t10F9, _t10FA, _t10FB];
    real _t10FD = 0.e0;
    real _t10FE = 0.e0;
    real _t10FF = 0.e0;
    real _t1100 = 0.1e1;
    vec4 _t1101 = [_t10FD, _t10FE, _t10FF, _t1100];
    tensor[4,4] _t1102 = [_t10F2, _t10F7, _t10FC, _t1101];
    real _t1103 = -0.1e1;
    real _t1104 = 0.e0;
    real _t1105 = 0.e0;
    real _t1106 = 0.e0;
    vec4 _t1107 = [_t1103, _t1104, _t1105, _t1106];
    real _t1108 = 0.e0;
    real _t1109 = -0.1e1;
    real _t110A = 0.e0;
    real _t110B = 0.e0;
    vec4 _t110C = [_t1108, _t1109, _t110A, _t110B];
    real _t110D = 0.e0;
    real _t110E = 0.e0;
    real _t110F = 0.1e1;
    real _t1110 = 0.e0;
    vec4 _t1111 = [_t110D, _t110E, _t110F, _t1110];
    real _t1112 = 0.e0;
    real _t1113 = 0.e0;
    real _t1114 = 0.e0;
    real _t1115 = 0.1e1;
    vec4 _t1116 = [_t1112, _t1113, _t1114, _t1115];
    tensor[4,4] _t1117 = [_t1107, _t110C, _t1111, _t1116];
    real _t1118 = 0.e0;
    real _t1119 = 0.1e1;
    real _t111A = 0.e0;
    real _t111B = 0.e0;
    vec4 _t111C = [_t1118, _t1119, _t111A, _t111B];
    real _t111D = -0.1e1;
    real _t111E = 0.e0;
    real _t111F = 0.e0;
    real _t1120 = 0.e0;
    vec4 _t1121 = [_t111D, _t111E, _t111F, _t1120];
    real _t1122 = 0.e0;
    real _t1123 = 0.e0;
    real _t1124 = 0.1e1;
    real _t1125 = 0.e0;
    vec4 _t1126 = [_t1122, _t1123, _t1124, _t1125];
    real _t1127 = 0.e0;
    real _t1128 = 0.e0;
    real _t1129 = 0.e0;
    real _t112A = 0.1e1;
    vec4 _t112B = [_t1127, _t1128, _t1129, _t112A];
    tensor[4,4] _t112C = [_t111C, _t1121, _t1126, _t112B];
    real _t112D = 0.1e1;
    real _t112E = 0.e0;
    real _t112F = 0.e0;
    real _t1130 = 0.e0;
    vec4 _t1131 = [_t112D, _t112E, _t112F, _t1130];
    real _t1132 = 0.e0;
    real _t1133 = 0.1e1;
    real _t1134 = 0.e0;
    real _t1135 = 0.e0;
    vec4 _t1136 = [_t1132, _t1133, _t1134, _t1135];
    real _t1137 = 0.e0;
    real _t1138 = 0.e0;
    real _t1139 = 0.1e1;
    real _t113A = 0.e0;
    vec4 _t113B = [_t1137, _t1138, _t1139, _t113A];
    real _t113C = 0.e0;
    real _t113D = 0.e0;
    real _t113E = 0.e0;
    real _t113F = 0.1e1;
    vec4 _t1140 = [_t113C, _t113D, _t113E, _t113F];
    tensor[4,4] _t1141 = [_t1131, _t1136, _t113B, _t1140];
    real _t1142 = 0.e0;
    real _t1143 = -0.1e1;
    real _t1144 = 0.e0;
    real _t1145 = 0.e0;
    vec4 _t1146 = [_t1142, _t1143, _t1144, _t1145];
    real _t1147 = 0.1e1;
    real _t1148 = 0.e0;
    real _t1149 = 0.e0;
    real _t114A = 0.e0;
    vec4 _t114B = [_t1147, _t1148, _t1149, _t114A];
    real _t114C = 0.e0;
    real _t114D = 0.e0;
    real _t114E = 0.1e1;
    real _t114F = 0.e0;
    vec4 _t1150 = [_t114C, _t114D, _t114E, _t114F];
    real _t1151 = 0.e0;
    real _t1152 = 0.e0;
    real _t1153 = 0.e0;
    real _t1154 = 0.1e1;
    vec4 _t1155 = [_t1151, _t1152, _t1153, _t1154];
    tensor[4,4] _t1156 = [_t1146, _t114B, _t1150, _t1155];
    tensor[4,4][6] _t1157 = {_t10ED, _t1102, _t1117, _t112C, _t1141, _t1156};
    real _t1158 = 0.e0;
    real _t1159 = -0.1e1;
    real _t115A = 0.1e1;
    real _t115B = 0.5e0;
    vec4 _t115C = [_t1158, _t1159, _t115A, _t115B];
    real _t115D = 0.e0;
    real _t115E = -0.1e1;
    real _t115F = 0.e0;
    real _t1160 = 0.e0;
    vec4 _t1161 = [_t115D, _t115E, _t115F, _t1160];
    real _t1162 = 0.1e1;
    real _t1163 = 0.e0;
    real _t1164 = 0.e0;
    real _t1165 = 0.e0;
    vec4 _t1166 = [_t1162, _t1163, _t1164, _t1165];
    real _t1167 = 0.e0;
    real _t1168 = 0.e0;
    real _t1169 = 0.e0;
    real _t116A = 0.1e1;
    vec4 _t116B = [_t1167, _t1168, _t1169, _t116A];
    tensor[4,4] _t116C = [_t115C, _t1161, _t1166, _t116B];
    real _t116D = 0.e0;
    real _t116E = -0.1e1;
    real _t116F = 0.1e1;
    real _t1170 = 0.5e0;
    vec4 _t1171 = [_t116D, _t116E, _t116F, _t1170];
    real _t1172 = 0.e0;
    real _t1173 = -0.1e1;
    real _t1174 = 0.e0;
    real _t1175 = 0.e0;
    vec4 _t1176 = [_t1172, _t1173, _t1174, _t1175];
    real _t1177 = 0.1e1;
    real _t1178 = 0.e0;
    real _t1179 = 0.e0;
    real _t117A = 0.1e1;
    vec4 _t117B = [_t1177, _t1178, _t1179, _t117A];
    real _t117C = 0.e0;
    real _t117D = 0.e0;
    real _t117E = 0.e0;
    real _t117F = 0.1e1;
    vec4 _t1180 = [_t117C, _t117D, _t117E, _t117F];
    tensor[4,4] _t1181 = [_t1171, _t1176, _t117B, _t1180];
    real _t1182 = 0.e0;
    real _t1183 = -0.1e1;
    real _t1184 = 0.e0;
    real _t1185 = 0.e0;
    vec4 _t1186 = [_t1182, _t1183, _t1184, _t1185];
    real _t1187 = 0.1e1;
    real _t1188 = 0.e0;
    real _t1189 = 0.e0;
    real _t118A = 0.e0;
    vec4 _t118B = [_t1187, _t1188, _t1189, _t118A];
    real _t118C = 0.e0;
    real _t118D = 0.e0;
    real _t118E = 0.1e1;
    real _t118F = 0.e0;
    vec4 _t1190 = [_t118C, _t118D, _t118E, _t118F];
    real _t1191 = 0.e0;
    real _t1192 = 0.e0;
    real _t1193 = 0.e0;
    real _t1194 = 0.1e1;
    vec4 _t1195 = [_t1191, _t1192, _t1193, _t1194];
    tensor[4,4] _t1196 = [_t1186, _t118B, _t1190, _t1195];
    real _t1197 = -0.1e1;
    real _t1198 = 0.e0;
    real _t1199 = 0.e0;
    real _t119A = 0.e0;
    vec4 _t119B = [_t1197, _t1198, _t1199, _t119A];
    real _t119C = 0.e0;
    real _t119D = -0.1e1;
    real _t119E = 0.e0;
    real _t119F = 0.e0;
    vec4 _t11A0 = [_t119C, _t119D, _t119E, _t119F];
    real _t11A1 = 0.e0;
    real _t11A2 = 0.e0;
    real _t11A3 = 0.1e1;
    real _t11A4 = 0.e0;
    vec4 _t11A5 = [_t11A1, _t11A2, _t11A3, _t11A4];
    real _t11A6 = 0.e0;
    real _t11A7 = 0.e0;
    real _t11A8 = 0.e0;
    real _t11A9 = 0.1e1;
    vec4 _t11AA = [_t11A6, _t11A7, _t11A8, _t11A9];
    tensor[4,4] _t11AB = [_t119B, _t11A0, _t11A5, _t11AA];
    real _t11AC = 0.e0;
    real _t11AD = 0.1e1;
    real _t11AE = 0.e0;
    real _t11AF = 0.e0;
    vec4 _t11B0 = [_t11AC, _t11AD, _t11AE, _t11AF];
    real _t11B1 = -0.1e1;
    real _t11B2 = 0.e0;
    real _t11B3 = 0.e0;
    real _t11B4 = 0.e0;
    vec4 _t11B5 = [_t11B1, _t11B2, _t11B3, _t11B4];
    real _t11B6 = 0.e0;
    real _t11B7 = 0.e0;
    real _t11B8 = 0.1e1;
    real _t11B9 = 0.e0;
    vec4 _t11BA = [_t11B6, _t11B7, _t11B8, _t11B9];
    real _t11BB = 0.e0;
    real _t11BC = 0.e0;
    real _t11BD = 0.e0;
    real _t11BE = 0.1e1;
    vec4 _t11BF = [_t11BB, _t11BC, _t11BD, _t11BE];
    tensor[4,4] _t11C0 = [_t11B0, _t11B5, _t11BA, _t11BF];
    real _t11C1 = 0.1e1;
    real _t11C2 = 0.e0;
    real _t11C3 = 0.e0;
    real _t11C4 = 0.e0;
    vec4 _t11C5 = [_t11C1, _t11C2, _t11C3, _t11C4];
    real _t11C6 = 0.e0;
    real _t11C7 = 0.1e1;
    real _t11C8 = 0.e0;
    real _t11C9 = 0.e0;
    vec4 _t11CA = [_t11C6, _t11C7, _t11C8, _t11C9];
    real _t11CB = 0.e0;
    real _t11CC = 0.e0;
    real _t11CD = 0.1e1;
    real _t11CE = 0.e0;
    vec4 _t11CF = [_t11CB, _t11CC, _t11CD, _t11CE];
    real _t11D0 = 0.e0;
    real _t11D1 = 0.e0;
    real _t11D2 = 0.e0;
    real _t11D3 = 0.1e1;
    vec4 _t11D4 = [_t11D0, _t11D1, _t11D2, _t11D3];
    tensor[4,4] _t11D5 = [_t11C5, _t11CA, _t11CF, _t11D4];
    tensor[4,4][6] _t11D6 = {_t116C, _t1181, _t1196, _t11AB, _t11C0, _t11D5};
    tensor[4,4][6][6] _t11D7 = {_t0F5B, _t0FDA, _t1059, _t10D8, _t1157, _t11D6};
    real _t11D8 = time0597[1];
    int _t11D9 = prim $r2i01B7 (_t11D8);
    tensor[4,4][6] _t11DA = prim $sub01C0<tensor[4,4][6]; %6> (_t11D7, _t11D9);
    real _t11DB = time0597[1];
    int _t11DC = prim $r2i01B7 (_t11DB);
    int[2] _t11DD = func nextCell4059B (_t11DC, cellId0594, mesh0593);
    int _t11DE = 1;
    int _t11DF = prim $sub01C0<int; %2> (_t11DD, _t11DE);
    tensor[4,4] _t11E0 = prim $sub01C0<tensor[4,4]; %6> (_t11DA, _t11DF);
    real _t11E1 = time0597[0];
    vec3 _t11E2 = prim *0036<$[3]> (_t11E1, dPos0596);
    vec3 _t11E3 = prim +0017<$[3]> (_t11E2, refPos0595);
    real _t11E4 = _t11E3[0];
    real _t11E5 = time0597[0];
    vec3 _t11E6 = prim *0036<$[3]> (_t11E5, dPos0596);
    vec3 _t11E7 = prim +0017<$[3]> (_t11E6, refPos0595);
    real _t11E8 = _t11E7[1];
    real _t11E9 = time0597[0];
    vec3 _t11EA = prim *0036<$[3]> (_t11E9, dPos0596);
    vec3 _t11EB = prim +0017<$[3]> (_t11EA, refPos0595);
    real _t11EC = _t11EB[2];
    real _t11ED = 0.1e1;
    vec4 _t11EE = [_t11E4, _t11E8, _t11EC, _t11ED];
    vec4 _t11EF = prim •00CE<$[4,4]; $[4]; $[4]> (_t11E0, _t11EE);
    real _t11F0 = _t11EF[2];
    vec3 _t11F1 = [_t0BC8, _t0EDC, _t11F0];
    real _t11F2 = time0597[1];
    int _t11F3 = prim $r2i01B7 (_t11F2);
    int[2] _t11F4 = func nextCell4059B (_t11F3, cellId0594, mesh0593);
    int _t11F5 = 1;
    int _t11F6 = prim $sub01C0<int; %2> (_t11F4, _t11F5);
    Femdata: MeshPos _t11F7 = extractFemItemN((mesh0593, _t08B4, _t11F1, _t11F6),RefBuild(Mesh),);
    return _t11F7;
  } else {
    real _t11F8 = time0597[0];
    vec3 _t11F9 = prim *0036<$[3]> (_t11F8, dPos0596);
    vec3 _t11FA = prim +0017<$[3]> (_t11F9, refPos0595);
    Femdata: MeshPos _t11FB = extractFemItemN((mesh0593, _t11FA),InvalidBuildBoundary(MeshPos),);
    return _t11FB;
  }
}
function int[2]#8 nextCell4059B (int faceIdx11FC, int cell11FD, Femdata: Mesh mesh11FE)
{
  int _t11FF = 12;
  int _t1200 = prim *0033 (cell11FD, _t11FF);
  int _t1201 = 2;
  int _t1202 = prim *0033 (faceIdx11FC, _t1201);
  int _t1203 = prim +0015 (_t1200, _t1202);
  int[2] _t1204 = extractFemItemN((mesh11FE, _t1203),CellFaceCell(Mesh),);
  return _t1204;
}
function vec2#0 _enter1205 (vec3 refPos1206, vec3 dPos1207)
{
  real time1208 = +inf;
  int face1209 = -1;
  real faceTime120A = -inf;
  real _t120B = -0.5e0;
  real _t120C = 0.e0;
  real _t120D = 0.e0;
  real _t120E = 0.1e1;
  vec3 _t120F = [_t120C, _t120D, _t120E];
  real _t1210 = prim •00CE<$[3]; $[3]; $[]> (_t120F, refPos1206);
  real _t1211 = prim -0026<$[]> (_t120B, _t1210);
  real _t1212 = 0.e0;
  real _t1213 = 0.e0;
  real _t1214 = 0.1e1;
  vec3 _t1215 = [_t1212, _t1213, _t1214];
  real _t1216 = prim •00CE<$[3]; $[3]; $[]> (_t1215, dPos1207);
  real _t1217 = prim /0055 (_t1211, _t1216);
  real _t1218 = -0.1e-15;
  bool _t1219 = prim >=007E (_t1217, _t1218);
  real _t121A = -0.5e0;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  real _t121D = 0.1e1;
  vec3 _t121E = [_t121B, _t121C, _t121D];
  real _t121F = prim •00CE<$[3]; $[3]; $[]> (_t121E, refPos1206);
  real _t1220 = prim -0026<$[]> (_t121A, _t121F);
  real _t1221 = 0.e0;
  real _t1222 = 0.e0;
  real _t1223 = 0.1e1;
  vec3 _t1224 = [_t1221, _t1222, _t1223];
  real _t1225 = prim •00CE<$[3]; $[3]; $[]> (_t1224, dPos1207);
  real _t1226 = prim /0055 (_t1220, _t1225);
  bool _t1227 = prim >0080 (time1208, _t1226);
  real _t1228 = 0.e0;
  real _t1229 = 0.e0;
  real _t122A = 0.1e1;
  vec3 _t122B = [_t1228, _t1229, _t122A];
  real _t122C = prim •00CE<$[3]; $[3]; $[]> (_t122B, dPos1207);
  real _t122D = prim |()|00B5<$[]> (_t122C);
  real _t122E = 0.1e-20;
  bool _t122F = prim >=007E (_t122D, _t122E);
  bool _t1230 = prim $and01C4 (_t1227, _t122F);
  bool _t1231 = prim $and01C4 (_t1219, _t1230);
  if _t1231 {
    real _t1232 = -0.5e0;
    real _t1233 = 0.e0;
    real _t1234 = 0.e0;
    real _t1235 = 0.1e1;
    vec3 _t1236 = [_t1233, _t1234, _t1235];
    real _t1237 = prim •00CE<$[3]; $[3]; $[]> (_t1236, refPos1206);
    real _t1238 = prim -0026<$[]> (_t1232, _t1237);
    real _t1239 = 0.e0;
    real _t123A = 0.e0;
    real _t123B = 0.1e1;
    vec3 _t123C = [_t1239, _t123A, _t123B];
    real _t123D = prim •00CE<$[3]; $[3]; $[]> (_t123C, dPos1207);
    real _t123E = prim /0055 (_t1238, _t123D);
    vec3 _t123F = prim *0038<$[3]> (dPos1207, _t123E);
    vec3 _t1240 = prim +0017<$[3]> (refPos1206, _t123F);
    real _t1241 = -0.5e0;
    real _t1242 = 0.e0;
    real _t1243 = 0.e0;
    real _t1244 = 0.1e1;
    vec3 _t1245 = [_t1242, _t1243, _t1244];
    real _t1246 = prim •00CE<$[3]; $[3]; $[]> (_t1245, refPos1206);
    real _t1247 = prim -0026<$[]> (_t1241, _t1246);
    real _t1248 = 0.e0;
    real _t1249 = 0.e0;
    real _t124A = 0.1e1;
    vec3 _t124B = [_t1248, _t1249, _t124A];
    real _t124C = prim •00CE<$[3]; $[3]; $[]> (_t124B, dPos1207);
    real _t124D = prim /0055 (_t1247, _t124C);
    vec3 _t124E = prim *0038<$[3]> (dPos1207, _t124D);
    vec3 _t124F = prim +0017<$[3]> (refPos1206, _t124E);
    real _t1250 = 0.1e-8;
    bool _t1251 = extractFemItemN((_t1240, _t124F, _t1250),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1251 {
      real _t1252 = -0.5e0;
      real _t1253 = 0.e0;
      real _t1254 = 0.e0;
      real _t1255 = 0.1e1;
      vec3 _t1256 = [_t1253, _t1254, _t1255];
      real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos1206);
      real _t1258 = prim -0026<$[]> (_t1252, _t1257);
      real _t1259 = 0.e0;
      real _t125A = 0.e0;
      real _t125B = 0.1e1;
      vec3 _t125C = [_t1259, _t125A, _t125B];
      real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos1207);
      time1208 = prim /0055 (_t1258, _t125D);
      face1209 = 0;
    }
  }
  real _t125E = 0.5e0;
  real _t125F = 0.e0;
  real _t1260 = 0.e0;
  real _t1261 = 0.1e1;
  vec3 _t1262 = [_t125F, _t1260, _t1261];
  real _t1263 = prim •00CE<$[3]; $[3]; $[]> (_t1262, refPos1206);
  real _t1264 = prim -0026<$[]> (_t125E, _t1263);
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  real _t1267 = 0.1e1;
  vec3 _t1268 = [_t1265, _t1266, _t1267];
  real _t1269 = prim •00CE<$[3]; $[3]; $[]> (_t1268, dPos1207);
  real _t126A = prim /0055 (_t1264, _t1269);
  real _t126B = -0.1e-15;
  bool _t126C = prim >=007E (_t126A, _t126B);
  real _t126D = 0.5e0;
  real _t126E = 0.e0;
  real _t126F = 0.e0;
  real _t1270 = 0.1e1;
  vec3 _t1271 = [_t126E, _t126F, _t1270];
  real _t1272 = prim •00CE<$[3]; $[3]; $[]> (_t1271, refPos1206);
  real _t1273 = prim -0026<$[]> (_t126D, _t1272);
  real _t1274 = 0.e0;
  real _t1275 = 0.e0;
  real _t1276 = 0.1e1;
  vec3 _t1277 = [_t1274, _t1275, _t1276];
  real _t1278 = prim •00CE<$[3]; $[3]; $[]> (_t1277, dPos1207);
  real _t1279 = prim /0055 (_t1273, _t1278);
  bool _t127A = prim >0080 (time1208, _t1279);
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  real _t127D = 0.1e1;
  vec3 _t127E = [_t127B, _t127C, _t127D];
  real _t127F = prim •00CE<$[3]; $[3]; $[]> (_t127E, dPos1207);
  real _t1280 = prim |()|00B5<$[]> (_t127F);
  real _t1281 = 0.1e-20;
  bool _t1282 = prim >=007E (_t1280, _t1281);
  bool _t1283 = prim $and01C4 (_t127A, _t1282);
  bool _t1284 = prim $and01C4 (_t126C, _t1283);
  if _t1284 {
    real _t1285 = 0.5e0;
    real _t1286 = 0.e0;
    real _t1287 = 0.e0;
    real _t1288 = 0.1e1;
    vec3 _t1289 = [_t1286, _t1287, _t1288];
    real _t128A = prim •00CE<$[3]; $[3]; $[]> (_t1289, refPos1206);
    real _t128B = prim -0026<$[]> (_t1285, _t128A);
    real _t128C = 0.e0;
    real _t128D = 0.e0;
    real _t128E = 0.1e1;
    vec3 _t128F = [_t128C, _t128D, _t128E];
    real _t1290 = prim •00CE<$[3]; $[3]; $[]> (_t128F, dPos1207);
    real _t1291 = prim /0055 (_t128B, _t1290);
    vec3 _t1292 = prim *0038<$[3]> (dPos1207, _t1291);
    vec3 _t1293 = prim +0017<$[3]> (refPos1206, _t1292);
    real _t1294 = 0.5e0;
    real _t1295 = 0.e0;
    real _t1296 = 0.e0;
    real _t1297 = 0.1e1;
    vec3 _t1298 = [_t1295, _t1296, _t1297];
    real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos1206);
    real _t129A = prim -0026<$[]> (_t1294, _t1299);
    real _t129B = 0.e0;
    real _t129C = 0.e0;
    real _t129D = 0.1e1;
    vec3 _t129E = [_t129B, _t129C, _t129D];
    real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos1207);
    real _t12A0 = prim /0055 (_t129A, _t129F);
    vec3 _t12A1 = prim *0038<$[3]> (dPos1207, _t12A0);
    vec3 _t12A2 = prim +0017<$[3]> (refPos1206, _t12A1);
    real _t12A3 = 0.1e-8;
    bool _t12A4 = extractFemItemN((_t1293, _t12A2, _t12A3),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12A4 {
      real _t12A5 = 0.5e0;
      real _t12A6 = 0.e0;
      real _t12A7 = 0.e0;
      real _t12A8 = 0.1e1;
      vec3 _t12A9 = [_t12A6, _t12A7, _t12A8];
      real _t12AA = prim •00CE<$[3]; $[3]; $[]> (_t12A9, refPos1206);
      real _t12AB = prim -0026<$[]> (_t12A5, _t12AA);
      real _t12AC = 0.e0;
      real _t12AD = 0.e0;
      real _t12AE = 0.1e1;
      vec3 _t12AF = [_t12AC, _t12AD, _t12AE];
      real _t12B0 = prim •00CE<$[3]; $[3]; $[]> (_t12AF, dPos1207);
      time1208 = prim /0055 (_t12AB, _t12B0);
      face1209 = 1;
    }
  }
  real _t12B1 = -0.5e0;
  real _t12B2 = 0.e0;
  real _t12B3 = 0.1e1;
  real _t12B4 = 0.e0;
  vec3 _t12B5 = [_t12B2, _t12B3, _t12B4];
  real _t12B6 = prim •00CE<$[3]; $[3]; $[]> (_t12B5, refPos1206);
  real _t12B7 = prim -0026<$[]> (_t12B1, _t12B6);
  real _t12B8 = 0.e0;
  real _t12B9 = 0.1e1;
  real _t12BA = 0.e0;
  vec3 _t12BB = [_t12B8, _t12B9, _t12BA];
  real _t12BC = prim •00CE<$[3]; $[3]; $[]> (_t12BB, dPos1207);
  real _t12BD = prim /0055 (_t12B7, _t12BC);
  real _t12BE = -0.1e-15;
  bool _t12BF = prim >=007E (_t12BD, _t12BE);
  real _t12C0 = -0.5e0;
  real _t12C1 = 0.e0;
  real _t12C2 = 0.1e1;
  real _t12C3 = 0.e0;
  vec3 _t12C4 = [_t12C1, _t12C2, _t12C3];
  real _t12C5 = prim •00CE<$[3]; $[3]; $[]> (_t12C4, refPos1206);
  real _t12C6 = prim -0026<$[]> (_t12C0, _t12C5);
  real _t12C7 = 0.e0;
  real _t12C8 = 0.1e1;
  real _t12C9 = 0.e0;
  vec3 _t12CA = [_t12C7, _t12C8, _t12C9];
  real _t12CB = prim •00CE<$[3]; $[3]; $[]> (_t12CA, dPos1207);
  real _t12CC = prim /0055 (_t12C6, _t12CB);
  bool _t12CD = prim >0080 (time1208, _t12CC);
  real _t12CE = 0.e0;
  real _t12CF = 0.1e1;
  real _t12D0 = 0.e0;
  vec3 _t12D1 = [_t12CE, _t12CF, _t12D0];
  real _t12D2 = prim •00CE<$[3]; $[3]; $[]> (_t12D1, dPos1207);
  real _t12D3 = prim |()|00B5<$[]> (_t12D2);
  real _t12D4 = 0.1e-20;
  bool _t12D5 = prim >=007E (_t12D3, _t12D4);
  bool _t12D6 = prim $and01C4 (_t12CD, _t12D5);
  bool _t12D7 = prim $and01C4 (_t12BF, _t12D6);
  if _t12D7 {
    real _t12D8 = -0.5e0;
    real _t12D9 = 0.e0;
    real _t12DA = 0.1e1;
    real _t12DB = 0.e0;
    vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
    real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, refPos1206);
    real _t12DE = prim -0026<$[]> (_t12D8, _t12DD);
    real _t12DF = 0.e0;
    real _t12E0 = 0.1e1;
    real _t12E1 = 0.e0;
    vec3 _t12E2 = [_t12DF, _t12E0, _t12E1];
    real _t12E3 = prim •00CE<$[3]; $[3]; $[]> (_t12E2, dPos1207);
    real _t12E4 = prim /0055 (_t12DE, _t12E3);
    vec3 _t12E5 = prim *0038<$[3]> (dPos1207, _t12E4);
    vec3 _t12E6 = prim +0017<$[3]> (refPos1206, _t12E5);
    real _t12E7 = -0.5e0;
    real _t12E8 = 0.e0;
    real _t12E9 = 0.1e1;
    real _t12EA = 0.e0;
    vec3 _t12EB = [_t12E8, _t12E9, _t12EA];
    real _t12EC = prim •00CE<$[3]; $[3]; $[]> (_t12EB, refPos1206);
    real _t12ED = prim -0026<$[]> (_t12E7, _t12EC);
    real _t12EE = 0.e0;
    real _t12EF = 0.1e1;
    real _t12F0 = 0.e0;
    vec3 _t12F1 = [_t12EE, _t12EF, _t12F0];
    real _t12F2 = prim •00CE<$[3]; $[3]; $[]> (_t12F1, dPos1207);
    real _t12F3 = prim /0055 (_t12ED, _t12F2);
    vec3 _t12F4 = prim *0038<$[3]> (dPos1207, _t12F3);
    vec3 _t12F5 = prim +0017<$[3]> (refPos1206, _t12F4);
    real _t12F6 = 0.1e-8;
    bool _t12F7 = extractFemItemN((_t12E6, _t12F5, _t12F6),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12F7 {
      real _t12F8 = -0.5e0;
      real _t12F9 = 0.e0;
      real _t12FA = 0.1e1;
      real _t12FB = 0.e0;
      vec3 _t12FC = [_t12F9, _t12FA, _t12FB];
      real _t12FD = prim •00CE<$[3]; $[3]; $[]> (_t12FC, refPos1206);
      real _t12FE = prim -0026<$[]> (_t12F8, _t12FD);
      real _t12FF = 0.e0;
      real _t1300 = 0.1e1;
      real _t1301 = 0.e0;
      vec3 _t1302 = [_t12FF, _t1300, _t1301];
      real _t1303 = prim •00CE<$[3]; $[3]; $[]> (_t1302, dPos1207);
      time1208 = prim /0055 (_t12FE, _t1303);
      face1209 = 2;
    }
  }
  real _t1304 = -0.5e0;
  real _t1305 = -0.1e1;
  real _t1306 = 0.e0;
  real _t1307 = 0.e0;
  vec3 _t1308 = [_t1305, _t1306, _t1307];
  real _t1309 = prim •00CE<$[3]; $[3]; $[]> (_t1308, refPos1206);
  real _t130A = prim -0026<$[]> (_t1304, _t1309);
  real _t130B = -0.1e1;
  real _t130C = 0.e0;
  real _t130D = 0.e0;
  vec3 _t130E = [_t130B, _t130C, _t130D];
  real _t130F = prim •00CE<$[3]; $[3]; $[]> (_t130E, dPos1207);
  real _t1310 = prim /0055 (_t130A, _t130F);
  real _t1311 = -0.1e-15;
  bool _t1312 = prim >=007E (_t1310, _t1311);
  real _t1313 = -0.5e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  real _t1316 = 0.e0;
  vec3 _t1317 = [_t1314, _t1315, _t1316];
  real _t1318 = prim •00CE<$[3]; $[3]; $[]> (_t1317, refPos1206);
  real _t1319 = prim -0026<$[]> (_t1313, _t1318);
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  real _t131C = 0.e0;
  vec3 _t131D = [_t131A, _t131B, _t131C];
  real _t131E = prim •00CE<$[3]; $[3]; $[]> (_t131D, dPos1207);
  real _t131F = prim /0055 (_t1319, _t131E);
  bool _t1320 = prim >0080 (time1208, _t131F);
  real _t1321 = -0.1e1;
  real _t1322 = 0.e0;
  real _t1323 = 0.e0;
  vec3 _t1324 = [_t1321, _t1322, _t1323];
  real _t1325 = prim •00CE<$[3]; $[3]; $[]> (_t1324, dPos1207);
  real _t1326 = prim |()|00B5<$[]> (_t1325);
  real _t1327 = 0.1e-20;
  bool _t1328 = prim >=007E (_t1326, _t1327);
  bool _t1329 = prim $and01C4 (_t1320, _t1328);
  bool _t132A = prim $and01C4 (_t1312, _t1329);
  if _t132A {
    real _t132B = -0.5e0;
    real _t132C = -0.1e1;
    real _t132D = 0.e0;
    real _t132E = 0.e0;
    vec3 _t132F = [_t132C, _t132D, _t132E];
    real _t1330 = prim •00CE<$[3]; $[3]; $[]> (_t132F, refPos1206);
    real _t1331 = prim -0026<$[]> (_t132B, _t1330);
    real _t1332 = -0.1e1;
    real _t1333 = 0.e0;
    real _t1334 = 0.e0;
    vec3 _t1335 = [_t1332, _t1333, _t1334];
    real _t1336 = prim •00CE<$[3]; $[3]; $[]> (_t1335, dPos1207);
    real _t1337 = prim /0055 (_t1331, _t1336);
    vec3 _t1338 = prim *0038<$[3]> (dPos1207, _t1337);
    vec3 _t1339 = prim +0017<$[3]> (refPos1206, _t1338);
    real _t133A = -0.5e0;
    real _t133B = -0.1e1;
    real _t133C = 0.e0;
    real _t133D = 0.e0;
    vec3 _t133E = [_t133B, _t133C, _t133D];
    real _t133F = prim •00CE<$[3]; $[3]; $[]> (_t133E, refPos1206);
    real _t1340 = prim -0026<$[]> (_t133A, _t133F);
    real _t1341 = -0.1e1;
    real _t1342 = 0.e0;
    real _t1343 = 0.e0;
    vec3 _t1344 = [_t1341, _t1342, _t1343];
    real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, dPos1207);
    real _t1346 = prim /0055 (_t1340, _t1345);
    vec3 _t1347 = prim *0038<$[3]> (dPos1207, _t1346);
    vec3 _t1348 = prim +0017<$[3]> (refPos1206, _t1347);
    real _t1349 = 0.1e-8;
    bool _t134A = extractFemItemN((_t1339, _t1348, _t1349),InsideInsert(File=checkInside.in)(Mesh),);
    if _t134A {
      real _t134B = -0.5e0;
      real _t134C = -0.1e1;
      real _t134D = 0.e0;
      real _t134E = 0.e0;
      vec3 _t134F = [_t134C, _t134D, _t134E];
      real _t1350 = prim •00CE<$[3]; $[3]; $[]> (_t134F, refPos1206);
      real _t1351 = prim -0026<$[]> (_t134B, _t1350);
      real _t1352 = -0.1e1;
      real _t1353 = 0.e0;
      real _t1354 = 0.e0;
      vec3 _t1355 = [_t1352, _t1353, _t1354];
      real _t1356 = prim •00CE<$[3]; $[3]; $[]> (_t1355, dPos1207);
      time1208 = prim /0055 (_t1351, _t1356);
      face1209 = 3;
    }
  }
  real _t1357 = -0.5e0;
  real _t1358 = 0.e0;
  real _t1359 = -0.1e1;
  real _t135A = 0.e0;
  vec3 _t135B = [_t1358, _t1359, _t135A];
  real _t135C = prim •00CE<$[3]; $[3]; $[]> (_t135B, refPos1206);
  real _t135D = prim -0026<$[]> (_t1357, _t135C);
  real _t135E = 0.e0;
  real _t135F = -0.1e1;
  real _t1360 = 0.e0;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = prim •00CE<$[3]; $[3]; $[]> (_t1361, dPos1207);
  real _t1363 = prim /0055 (_t135D, _t1362);
  real _t1364 = -0.1e-15;
  bool _t1365 = prim >=007E (_t1363, _t1364);
  real _t1366 = -0.5e0;
  real _t1367 = 0.e0;
  real _t1368 = -0.1e1;
  real _t1369 = 0.e0;
  vec3 _t136A = [_t1367, _t1368, _t1369];
  real _t136B = prim •00CE<$[3]; $[3]; $[]> (_t136A, refPos1206);
  real _t136C = prim -0026<$[]> (_t1366, _t136B);
  real _t136D = 0.e0;
  real _t136E = -0.1e1;
  real _t136F = 0.e0;
  vec3 _t1370 = [_t136D, _t136E, _t136F];
  real _t1371 = prim •00CE<$[3]; $[3]; $[]> (_t1370, dPos1207);
  real _t1372 = prim /0055 (_t136C, _t1371);
  bool _t1373 = prim >0080 (time1208, _t1372);
  real _t1374 = 0.e0;
  real _t1375 = -0.1e1;
  real _t1376 = 0.e0;
  vec3 _t1377 = [_t1374, _t1375, _t1376];
  real _t1378 = prim •00CE<$[3]; $[3]; $[]> (_t1377, dPos1207);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  real _t137A = 0.1e-20;
  bool _t137B = prim >=007E (_t1379, _t137A);
  bool _t137C = prim $and01C4 (_t1373, _t137B);
  bool _t137D = prim $and01C4 (_t1365, _t137C);
  if _t137D {
    real _t137E = -0.5e0;
    real _t137F = 0.e0;
    real _t1380 = -0.1e1;
    real _t1381 = 0.e0;
    vec3 _t1382 = [_t137F, _t1380, _t1381];
    real _t1383 = prim •00CE<$[3]; $[3]; $[]> (_t1382, refPos1206);
    real _t1384 = prim -0026<$[]> (_t137E, _t1383);
    real _t1385 = 0.e0;
    real _t1386 = -0.1e1;
    real _t1387 = 0.e0;
    vec3 _t1388 = [_t1385, _t1386, _t1387];
    real _t1389 = prim •00CE<$[3]; $[3]; $[]> (_t1388, dPos1207);
    real _t138A = prim /0055 (_t1384, _t1389);
    vec3 _t138B = prim *0038<$[3]> (dPos1207, _t138A);
    vec3 _t138C = prim +0017<$[3]> (refPos1206, _t138B);
    real _t138D = -0.5e0;
    real _t138E = 0.e0;
    real _t138F = -0.1e1;
    real _t1390 = 0.e0;
    vec3 _t1391 = [_t138E, _t138F, _t1390];
    real _t1392 = prim •00CE<$[3]; $[3]; $[]> (_t1391, refPos1206);
    real _t1393 = prim -0026<$[]> (_t138D, _t1392);
    real _t1394 = 0.e0;
    real _t1395 = -0.1e1;
    real _t1396 = 0.e0;
    vec3 _t1397 = [_t1394, _t1395, _t1396];
    real _t1398 = prim •00CE<$[3]; $[3]; $[]> (_t1397, dPos1207);
    real _t1399 = prim /0055 (_t1393, _t1398);
    vec3 _t139A = prim *0038<$[3]> (dPos1207, _t1399);
    vec3 _t139B = prim +0017<$[3]> (refPos1206, _t139A);
    real _t139C = 0.1e-8;
    bool _t139D = extractFemItemN((_t138C, _t139B, _t139C),InsideInsert(File=checkInside.in)(Mesh),);
    if _t139D {
      real _t139E = -0.5e0;
      real _t139F = 0.e0;
      real _t13A0 = -0.1e1;
      real _t13A1 = 0.e0;
      vec3 _t13A2 = [_t139F, _t13A0, _t13A1];
      real _t13A3 = prim •00CE<$[3]; $[3]; $[]> (_t13A2, refPos1206);
      real _t13A4 = prim -0026<$[]> (_t139E, _t13A3);
      real _t13A5 = 0.e0;
      real _t13A6 = -0.1e1;
      real _t13A7 = 0.e0;
      vec3 _t13A8 = [_t13A5, _t13A6, _t13A7];
      real _t13A9 = prim •00CE<$[3]; $[3]; $[]> (_t13A8, dPos1207);
      time1208 = prim /0055 (_t13A4, _t13A9);
      face1209 = 4;
    }
  }
  real _t13AA = -0.5e0;
  real _t13AB = 0.1e1;
  real _t13AC = 0.e0;
  real _t13AD = -0.e0;
  vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
  real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos1206);
  real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
  real _t13B1 = 0.1e1;
  real _t13B2 = 0.e0;
  real _t13B3 = -0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos1207);
  real _t13B6 = prim /0055 (_t13B0, _t13B5);
  real _t13B7 = -0.1e-15;
  bool _t13B8 = prim >=007E (_t13B6, _t13B7);
  real _t13B9 = -0.5e0;
  real _t13BA = 0.1e1;
  real _t13BB = 0.e0;
  real _t13BC = -0.e0;
  vec3 _t13BD = [_t13BA, _t13BB, _t13BC];
  real _t13BE = prim •00CE<$[3]; $[3]; $[]> (_t13BD, refPos1206);
  real _t13BF = prim -0026<$[]> (_t13B9, _t13BE);
  real _t13C0 = 0.1e1;
  real _t13C1 = 0.e0;
  real _t13C2 = -0.e0;
  vec3 _t13C3 = [_t13C0, _t13C1, _t13C2];
  real _t13C4 = prim •00CE<$[3]; $[3]; $[]> (_t13C3, dPos1207);
  real _t13C5 = prim /0055 (_t13BF, _t13C4);
  bool _t13C6 = prim >0080 (time1208, _t13C5);
  real _t13C7 = 0.1e1;
  real _t13C8 = 0.e0;
  real _t13C9 = -0.e0;
  vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
  real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, dPos1207);
  real _t13CC = prim |()|00B5<$[]> (_t13CB);
  real _t13CD = 0.1e-20;
  bool _t13CE = prim >=007E (_t13CC, _t13CD);
  bool _t13CF = prim $and01C4 (_t13C6, _t13CE);
  bool _t13D0 = prim $and01C4 (_t13B8, _t13CF);
  if _t13D0 {
    real _t13D1 = -0.5e0;
    real _t13D2 = 0.1e1;
    real _t13D3 = 0.e0;
    real _t13D4 = -0.e0;
    vec3 _t13D5 = [_t13D2, _t13D3, _t13D4];
    real _t13D6 = prim •00CE<$[3]; $[3]; $[]> (_t13D5, refPos1206);
    real _t13D7 = prim -0026<$[]> (_t13D1, _t13D6);
    real _t13D8 = 0.1e1;
    real _t13D9 = 0.e0;
    real _t13DA = -0.e0;
    vec3 _t13DB = [_t13D8, _t13D9, _t13DA];
    real _t13DC = prim •00CE<$[3]; $[3]; $[]> (_t13DB, dPos1207);
    real _t13DD = prim /0055 (_t13D7, _t13DC);
    vec3 _t13DE = prim *0038<$[3]> (dPos1207, _t13DD);
    vec3 _t13DF = prim +0017<$[3]> (refPos1206, _t13DE);
    real _t13E0 = -0.5e0;
    real _t13E1 = 0.1e1;
    real _t13E2 = 0.e0;
    real _t13E3 = -0.e0;
    vec3 _t13E4 = [_t13E1, _t13E2, _t13E3];
    real _t13E5 = prim •00CE<$[3]; $[3]; $[]> (_t13E4, refPos1206);
    real _t13E6 = prim -0026<$[]> (_t13E0, _t13E5);
    real _t13E7 = 0.1e1;
    real _t13E8 = 0.e0;
    real _t13E9 = -0.e0;
    vec3 _t13EA = [_t13E7, _t13E8, _t13E9];
    real _t13EB = prim •00CE<$[3]; $[3]; $[]> (_t13EA, dPos1207);
    real _t13EC = prim /0055 (_t13E6, _t13EB);
    vec3 _t13ED = prim *0038<$[3]> (dPos1207, _t13EC);
    vec3 _t13EE = prim +0017<$[3]> (refPos1206, _t13ED);
    real _t13EF = 0.1e-8;
    bool _t13F0 = extractFemItemN((_t13DF, _t13EE, _t13EF),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13F0 {
      real _t13F1 = -0.5e0;
      real _t13F2 = 0.1e1;
      real _t13F3 = 0.e0;
      real _t13F4 = -0.e0;
      vec3 _t13F5 = [_t13F2, _t13F3, _t13F4];
      real _t13F6 = prim •00CE<$[3]; $[3]; $[]> (_t13F5, refPos1206);
      real _t13F7 = prim -0026<$[]> (_t13F1, _t13F6);
      real _t13F8 = 0.1e1;
      real _t13F9 = 0.e0;
      real _t13FA = -0.e0;
      vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
      real _t13FC = prim •00CE<$[3]; $[3]; $[]> (_t13FB, dPos1207);
      time1208 = prim /0055 (_t13F7, _t13FC);
      face1209 = 5;
    }
  }
  int _t13FD = -1;
  bool _t13FE = prim !=0086 (face1209, _t13FD);
  if _t13FE {
    real _t13FF = 0.e0;
    real _t1400 = prim max0125 (time1208, _t13FF);
    real _t1401 = (real)face1209;
    vec2 _t1402 = [_t1400, _t1401];
    return _t1402;
  } else {
    real _t1403 = -0.1e1;
    real _t1404 = -0.1e1;
    vec2 _t1405 = [_t1403, _t1404];
    return _t1405;
  }
}
function vec2#0 _exit1406 (vec3 refPos1206, vec3 dPos1207, int i1407)
{
  real time1408 = +inf;
  int face1409 = -1;
  real faceTime140A = -inf;
  real _t140B = -0.5e0;
  real _t140C = 0.e0;
  real _t140D = 0.e0;
  real _t140E = 0.1e1;
  vec3 _t140F = [_t140C, _t140D, _t140E];
  real _t1410 = prim •00CE<$[3]; $[3]; $[]> (_t140F, refPos1206);
  real _t1411 = prim -0026<$[]> (_t140B, _t1410);
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = 0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, dPos1207);
  real _t1417 = prim /0055 (_t1411, _t1416);
  real _t1418 = -0.1e-15;
  bool _t1419 = prim >=007E (_t1417, _t1418);
  real _t141A = -0.5e0;
  real _t141B = 0.e0;
  real _t141C = 0.e0;
  real _t141D = 0.1e1;
  vec3 _t141E = [_t141B, _t141C, _t141D];
  real _t141F = prim •00CE<$[3]; $[3]; $[]> (_t141E, refPos1206);
  real _t1420 = prim -0026<$[]> (_t141A, _t141F);
  real _t1421 = 0.e0;
  real _t1422 = 0.e0;
  real _t1423 = 0.1e1;
  vec3 _t1424 = [_t1421, _t1422, _t1423];
  real _t1425 = prim •00CE<$[3]; $[3]; $[]> (_t1424, dPos1207);
  real _t1426 = prim /0055 (_t1420, _t1425);
  bool _t1427 = prim >0080 (time1408, _t1426);
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.1e1;
  vec3 _t142B = [_t1428, _t1429, _t142A];
  real _t142C = prim •00CE<$[3]; $[3]; $[]> (_t142B, dPos1207);
  real _t142D = prim |()|00B5<$[]> (_t142C);
  real _t142E = 0.1e-20;
  bool _t142F = prim >=007E (_t142D, _t142E);
  bool _t1430 = prim $and01C4 (_t1427, _t142F);
  bool _t1431 = prim $and01C4 (_t1419, _t1430);
  if _t1431 {
    int _t1432 = 0;
    bool _t1433 = prim !=0086 (i1407, _t1432);
    if _t1433 {
      real _t1434 = -0.5e0;
      real _t1435 = 0.e0;
      real _t1436 = 0.e0;
      real _t1437 = 0.1e1;
      vec3 _t1438 = [_t1435, _t1436, _t1437];
      real _t1439 = prim •00CE<$[3]; $[3]; $[]> (_t1438, refPos1206);
      real _t143A = prim -0026<$[]> (_t1434, _t1439);
      real _t143B = 0.e0;
      real _t143C = 0.e0;
      real _t143D = 0.1e1;
      vec3 _t143E = [_t143B, _t143C, _t143D];
      real _t143F = prim •00CE<$[3]; $[3]; $[]> (_t143E, dPos1207);
      time1408 = prim /0055 (_t143A, _t143F);
      face1409 = 0;
    } else {
      real _t1440 = -0.5e0;
      real _t1441 = 0.e0;
      real _t1442 = 0.e0;
      real _t1443 = 0.1e1;
      vec3 _t1444 = [_t1441, _t1442, _t1443];
      real _t1445 = prim •00CE<$[3]; $[3]; $[]> (_t1444, refPos1206);
      real _t1446 = prim -0026<$[]> (_t1440, _t1445);
      real _t1447 = 0.e0;
      real _t1448 = 0.e0;
      real _t1449 = 0.1e1;
      vec3 _t144A = [_t1447, _t1448, _t1449];
      real _t144B = prim •00CE<$[3]; $[3]; $[]> (_t144A, dPos1207);
      faceTime140A = prim /0055 (_t1446, _t144B);
    }
  }
  real _t144C = 0.5e0;
  real _t144D = 0.e0;
  real _t144E = 0.e0;
  real _t144F = 0.1e1;
  vec3 _t1450 = [_t144D, _t144E, _t144F];
  real _t1451 = prim •00CE<$[3]; $[3]; $[]> (_t1450, refPos1206);
  real _t1452 = prim -0026<$[]> (_t144C, _t1451);
  real _t1453 = 0.e0;
  real _t1454 = 0.e0;
  real _t1455 = 0.1e1;
  vec3 _t1456 = [_t1453, _t1454, _t1455];
  real _t1457 = prim •00CE<$[3]; $[3]; $[]> (_t1456, dPos1207);
  real _t1458 = prim /0055 (_t1452, _t1457);
  real _t1459 = -0.1e-15;
  bool _t145A = prim >=007E (_t1458, _t1459);
  real _t145B = 0.5e0;
  real _t145C = 0.e0;
  real _t145D = 0.e0;
  real _t145E = 0.1e1;
  vec3 _t145F = [_t145C, _t145D, _t145E];
  real _t1460 = prim •00CE<$[3]; $[3]; $[]> (_t145F, refPos1206);
  real _t1461 = prim -0026<$[]> (_t145B, _t1460);
  real _t1462 = 0.e0;
  real _t1463 = 0.e0;
  real _t1464 = 0.1e1;
  vec3 _t1465 = [_t1462, _t1463, _t1464];
  real _t1466 = prim •00CE<$[3]; $[3]; $[]> (_t1465, dPos1207);
  real _t1467 = prim /0055 (_t1461, _t1466);
  bool _t1468 = prim >0080 (time1408, _t1467);
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.1e1;
  vec3 _t146C = [_t1469, _t146A, _t146B];
  real _t146D = prim •00CE<$[3]; $[3]; $[]> (_t146C, dPos1207);
  real _t146E = prim |()|00B5<$[]> (_t146D);
  real _t146F = 0.1e-20;
  bool _t1470 = prim >=007E (_t146E, _t146F);
  bool _t1471 = prim $and01C4 (_t1468, _t1470);
  bool _t1472 = prim $and01C4 (_t145A, _t1471);
  if _t1472 {
    int _t1473 = 1;
    bool _t1474 = prim !=0086 (i1407, _t1473);
    if _t1474 {
      real _t1475 = 0.5e0;
      real _t1476 = 0.e0;
      real _t1477 = 0.e0;
      real _t1478 = 0.1e1;
      vec3 _t1479 = [_t1476, _t1477, _t1478];
      real _t147A = prim •00CE<$[3]; $[3]; $[]> (_t1479, refPos1206);
      real _t147B = prim -0026<$[]> (_t1475, _t147A);
      real _t147C = 0.e0;
      real _t147D = 0.e0;
      real _t147E = 0.1e1;
      vec3 _t147F = [_t147C, _t147D, _t147E];
      real _t1480 = prim •00CE<$[3]; $[3]; $[]> (_t147F, dPos1207);
      time1408 = prim /0055 (_t147B, _t1480);
      face1409 = 1;
    } else {
      real _t1481 = 0.5e0;
      real _t1482 = 0.e0;
      real _t1483 = 0.e0;
      real _t1484 = 0.1e1;
      vec3 _t1485 = [_t1482, _t1483, _t1484];
      real _t1486 = prim •00CE<$[3]; $[3]; $[]> (_t1485, refPos1206);
      real _t1487 = prim -0026<$[]> (_t1481, _t1486);
      real _t1488 = 0.e0;
      real _t1489 = 0.e0;
      real _t148A = 0.1e1;
      vec3 _t148B = [_t1488, _t1489, _t148A];
      real _t148C = prim •00CE<$[3]; $[3]; $[]> (_t148B, dPos1207);
      faceTime140A = prim /0055 (_t1487, _t148C);
    }
  }
  real _t148D = -0.5e0;
  real _t148E = 0.e0;
  real _t148F = 0.1e1;
  real _t1490 = 0.e0;
  vec3 _t1491 = [_t148E, _t148F, _t1490];
  real _t1492 = prim •00CE<$[3]; $[3]; $[]> (_t1491, refPos1206);
  real _t1493 = prim -0026<$[]> (_t148D, _t1492);
  real _t1494 = 0.e0;
  real _t1495 = 0.1e1;
  real _t1496 = 0.e0;
  vec3 _t1497 = [_t1494, _t1495, _t1496];
  real _t1498 = prim •00CE<$[3]; $[3]; $[]> (_t1497, dPos1207);
  real _t1499 = prim /0055 (_t1493, _t1498);
  real _t149A = -0.1e-15;
  bool _t149B = prim >=007E (_t1499, _t149A);
  real _t149C = -0.5e0;
  real _t149D = 0.e0;
  real _t149E = 0.1e1;
  real _t149F = 0.e0;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, refPos1206);
  real _t14A2 = prim -0026<$[]> (_t149C, _t14A1);
  real _t14A3 = 0.e0;
  real _t14A4 = 0.1e1;
  real _t14A5 = 0.e0;
  vec3 _t14A6 = [_t14A3, _t14A4, _t14A5];
  real _t14A7 = prim •00CE<$[3]; $[3]; $[]> (_t14A6, dPos1207);
  real _t14A8 = prim /0055 (_t14A2, _t14A7);
  bool _t14A9 = prim >0080 (time1408, _t14A8);
  real _t14AA = 0.e0;
  real _t14AB = 0.1e1;
  real _t14AC = 0.e0;
  vec3 _t14AD = [_t14AA, _t14AB, _t14AC];
  real _t14AE = prim •00CE<$[3]; $[3]; $[]> (_t14AD, dPos1207);
  real _t14AF = prim |()|00B5<$[]> (_t14AE);
  real _t14B0 = 0.1e-20;
  bool _t14B1 = prim >=007E (_t14AF, _t14B0);
  bool _t14B2 = prim $and01C4 (_t14A9, _t14B1);
  bool _t14B3 = prim $and01C4 (_t149B, _t14B2);
  if _t14B3 {
    int _t14B4 = 2;
    bool _t14B5 = prim !=0086 (i1407, _t14B4);
    if _t14B5 {
      real _t14B6 = -0.5e0;
      real _t14B7 = 0.e0;
      real _t14B8 = 0.1e1;
      real _t14B9 = 0.e0;
      vec3 _t14BA = [_t14B7, _t14B8, _t14B9];
      real _t14BB = prim •00CE<$[3]; $[3]; $[]> (_t14BA, refPos1206);
      real _t14BC = prim -0026<$[]> (_t14B6, _t14BB);
      real _t14BD = 0.e0;
      real _t14BE = 0.1e1;
      real _t14BF = 0.e0;
      vec3 _t14C0 = [_t14BD, _t14BE, _t14BF];
      real _t14C1 = prim •00CE<$[3]; $[3]; $[]> (_t14C0, dPos1207);
      time1408 = prim /0055 (_t14BC, _t14C1);
      face1409 = 2;
    } else {
      real _t14C2 = -0.5e0;
      real _t14C3 = 0.e0;
      real _t14C4 = 0.1e1;
      real _t14C5 = 0.e0;
      vec3 _t14C6 = [_t14C3, _t14C4, _t14C5];
      real _t14C7 = prim •00CE<$[3]; $[3]; $[]> (_t14C6, refPos1206);
      real _t14C8 = prim -0026<$[]> (_t14C2, _t14C7);
      real _t14C9 = 0.e0;
      real _t14CA = 0.1e1;
      real _t14CB = 0.e0;
      vec3 _t14CC = [_t14C9, _t14CA, _t14CB];
      real _t14CD = prim •00CE<$[3]; $[3]; $[]> (_t14CC, dPos1207);
      faceTime140A = prim /0055 (_t14C8, _t14CD);
    }
  }
  real _t14CE = -0.5e0;
  real _t14CF = -0.1e1;
  real _t14D0 = 0.e0;
  real _t14D1 = 0.e0;
  vec3 _t14D2 = [_t14CF, _t14D0, _t14D1];
  real _t14D3 = prim •00CE<$[3]; $[3]; $[]> (_t14D2, refPos1206);
  real _t14D4 = prim -0026<$[]> (_t14CE, _t14D3);
  real _t14D5 = -0.1e1;
  real _t14D6 = 0.e0;
  real _t14D7 = 0.e0;
  vec3 _t14D8 = [_t14D5, _t14D6, _t14D7];
  real _t14D9 = prim •00CE<$[3]; $[3]; $[]> (_t14D8, dPos1207);
  real _t14DA = prim /0055 (_t14D4, _t14D9);
  real _t14DB = -0.1e-15;
  bool _t14DC = prim >=007E (_t14DA, _t14DB);
  real _t14DD = -0.5e0;
  real _t14DE = -0.1e1;
  real _t14DF = 0.e0;
  real _t14E0 = 0.e0;
  vec3 _t14E1 = [_t14DE, _t14DF, _t14E0];
  real _t14E2 = prim •00CE<$[3]; $[3]; $[]> (_t14E1, refPos1206);
  real _t14E3 = prim -0026<$[]> (_t14DD, _t14E2);
  real _t14E4 = -0.1e1;
  real _t14E5 = 0.e0;
  real _t14E6 = 0.e0;
  vec3 _t14E7 = [_t14E4, _t14E5, _t14E6];
  real _t14E8 = prim •00CE<$[3]; $[3]; $[]> (_t14E7, dPos1207);
  real _t14E9 = prim /0055 (_t14E3, _t14E8);
  bool _t14EA = prim >0080 (time1408, _t14E9);
  real _t14EB = -0.1e1;
  real _t14EC = 0.e0;
  real _t14ED = 0.e0;
  vec3 _t14EE = [_t14EB, _t14EC, _t14ED];
  real _t14EF = prim •00CE<$[3]; $[3]; $[]> (_t14EE, dPos1207);
  real _t14F0 = prim |()|00B5<$[]> (_t14EF);
  real _t14F1 = 0.1e-20;
  bool _t14F2 = prim >=007E (_t14F0, _t14F1);
  bool _t14F3 = prim $and01C4 (_t14EA, _t14F2);
  bool _t14F4 = prim $and01C4 (_t14DC, _t14F3);
  if _t14F4 {
    int _t14F5 = 3;
    bool _t14F6 = prim !=0086 (i1407, _t14F5);
    if _t14F6 {
      real _t14F7 = -0.5e0;
      real _t14F8 = -0.1e1;
      real _t14F9 = 0.e0;
      real _t14FA = 0.e0;
      vec3 _t14FB = [_t14F8, _t14F9, _t14FA];
      real _t14FC = prim •00CE<$[3]; $[3]; $[]> (_t14FB, refPos1206);
      real _t14FD = prim -0026<$[]> (_t14F7, _t14FC);
      real _t14FE = -0.1e1;
      real _t14FF = 0.e0;
      real _t1500 = 0.e0;
      vec3 _t1501 = [_t14FE, _t14FF, _t1500];
      real _t1502 = prim •00CE<$[3]; $[3]; $[]> (_t1501, dPos1207);
      time1408 = prim /0055 (_t14FD, _t1502);
      face1409 = 3;
    } else {
      real _t1503 = -0.5e0;
      real _t1504 = -0.1e1;
      real _t1505 = 0.e0;
      real _t1506 = 0.e0;
      vec3 _t1507 = [_t1504, _t1505, _t1506];
      real _t1508 = prim •00CE<$[3]; $[3]; $[]> (_t1507, refPos1206);
      real _t1509 = prim -0026<$[]> (_t1503, _t1508);
      real _t150A = -0.1e1;
      real _t150B = 0.e0;
      real _t150C = 0.e0;
      vec3 _t150D = [_t150A, _t150B, _t150C];
      real _t150E = prim •00CE<$[3]; $[3]; $[]> (_t150D, dPos1207);
      faceTime140A = prim /0055 (_t1509, _t150E);
    }
  }
  real _t150F = -0.5e0;
  real _t1510 = 0.e0;
  real _t1511 = -0.1e1;
  real _t1512 = 0.e0;
  vec3 _t1513 = [_t1510, _t1511, _t1512];
  real _t1514 = prim •00CE<$[3]; $[3]; $[]> (_t1513, refPos1206);
  real _t1515 = prim -0026<$[]> (_t150F, _t1514);
  real _t1516 = 0.e0;
  real _t1517 = -0.1e1;
  real _t1518 = 0.e0;
  vec3 _t1519 = [_t1516, _t1517, _t1518];
  real _t151A = prim •00CE<$[3]; $[3]; $[]> (_t1519, dPos1207);
  real _t151B = prim /0055 (_t1515, _t151A);
  real _t151C = -0.1e-15;
  bool _t151D = prim >=007E (_t151B, _t151C);
  real _t151E = -0.5e0;
  real _t151F = 0.e0;
  real _t1520 = -0.1e1;
  real _t1521 = 0.e0;
  vec3 _t1522 = [_t151F, _t1520, _t1521];
  real _t1523 = prim •00CE<$[3]; $[3]; $[]> (_t1522, refPos1206);
  real _t1524 = prim -0026<$[]> (_t151E, _t1523);
  real _t1525 = 0.e0;
  real _t1526 = -0.1e1;
  real _t1527 = 0.e0;
  vec3 _t1528 = [_t1525, _t1526, _t1527];
  real _t1529 = prim •00CE<$[3]; $[3]; $[]> (_t1528, dPos1207);
  real _t152A = prim /0055 (_t1524, _t1529);
  bool _t152B = prim >0080 (time1408, _t152A);
  real _t152C = 0.e0;
  real _t152D = -0.1e1;
  real _t152E = 0.e0;
  vec3 _t152F = [_t152C, _t152D, _t152E];
  real _t1530 = prim •00CE<$[3]; $[3]; $[]> (_t152F, dPos1207);
  real _t1531 = prim |()|00B5<$[]> (_t1530);
  real _t1532 = 0.1e-20;
  bool _t1533 = prim >=007E (_t1531, _t1532);
  bool _t1534 = prim $and01C4 (_t152B, _t1533);
  bool _t1535 = prim $and01C4 (_t151D, _t1534);
  if _t1535 {
    int _t1536 = 4;
    bool _t1537 = prim !=0086 (i1407, _t1536);
    if _t1537 {
      real _t1538 = -0.5e0;
      real _t1539 = 0.e0;
      real _t153A = -0.1e1;
      real _t153B = 0.e0;
      vec3 _t153C = [_t1539, _t153A, _t153B];
      real _t153D = prim •00CE<$[3]; $[3]; $[]> (_t153C, refPos1206);
      real _t153E = prim -0026<$[]> (_t1538, _t153D);
      real _t153F = 0.e0;
      real _t1540 = -0.1e1;
      real _t1541 = 0.e0;
      vec3 _t1542 = [_t153F, _t1540, _t1541];
      real _t1543 = prim •00CE<$[3]; $[3]; $[]> (_t1542, dPos1207);
      time1408 = prim /0055 (_t153E, _t1543);
      face1409 = 4;
    } else {
      real _t1544 = -0.5e0;
      real _t1545 = 0.e0;
      real _t1546 = -0.1e1;
      real _t1547 = 0.e0;
      vec3 _t1548 = [_t1545, _t1546, _t1547];
      real _t1549 = prim •00CE<$[3]; $[3]; $[]> (_t1548, refPos1206);
      real _t154A = prim -0026<$[]> (_t1544, _t1549);
      real _t154B = 0.e0;
      real _t154C = -0.1e1;
      real _t154D = 0.e0;
      vec3 _t154E = [_t154B, _t154C, _t154D];
      real _t154F = prim •00CE<$[3]; $[3]; $[]> (_t154E, dPos1207);
      faceTime140A = prim /0055 (_t154A, _t154F);
    }
  }
  real _t1550 = -0.5e0;
  real _t1551 = 0.1e1;
  real _t1552 = 0.e0;
  real _t1553 = -0.e0;
  vec3 _t1554 = [_t1551, _t1552, _t1553];
  real _t1555 = prim •00CE<$[3]; $[3]; $[]> (_t1554, refPos1206);
  real _t1556 = prim -0026<$[]> (_t1550, _t1555);
  real _t1557 = 0.1e1;
  real _t1558 = 0.e0;
  real _t1559 = -0.e0;
  vec3 _t155A = [_t1557, _t1558, _t1559];
  real _t155B = prim •00CE<$[3]; $[3]; $[]> (_t155A, dPos1207);
  real _t155C = prim /0055 (_t1556, _t155B);
  real _t155D = -0.1e-15;
  bool _t155E = prim >=007E (_t155C, _t155D);
  real _t155F = -0.5e0;
  real _t1560 = 0.1e1;
  real _t1561 = 0.e0;
  real _t1562 = -0.e0;
  vec3 _t1563 = [_t1560, _t1561, _t1562];
  real _t1564 = prim •00CE<$[3]; $[3]; $[]> (_t1563, refPos1206);
  real _t1565 = prim -0026<$[]> (_t155F, _t1564);
  real _t1566 = 0.1e1;
  real _t1567 = 0.e0;
  real _t1568 = -0.e0;
  vec3 _t1569 = [_t1566, _t1567, _t1568];
  real _t156A = prim •00CE<$[3]; $[3]; $[]> (_t1569, dPos1207);
  real _t156B = prim /0055 (_t1565, _t156A);
  bool _t156C = prim >0080 (time1408, _t156B);
  real _t156D = 0.1e1;
  real _t156E = 0.e0;
  real _t156F = -0.e0;
  vec3 _t1570 = [_t156D, _t156E, _t156F];
  real _t1571 = prim •00CE<$[3]; $[3]; $[]> (_t1570, dPos1207);
  real _t1572 = prim |()|00B5<$[]> (_t1571);
  real _t1573 = 0.1e-20;
  bool _t1574 = prim >=007E (_t1572, _t1573);
  bool _t1575 = prim $and01C4 (_t156C, _t1574);
  bool _t1576 = prim $and01C4 (_t155E, _t1575);
  if _t1576 {
    int _t1577 = 5;
    bool _t1578 = prim !=0086 (i1407, _t1577);
    if _t1578 {
      real _t1579 = -0.5e0;
      real _t157A = 0.1e1;
      real _t157B = 0.e0;
      real _t157C = -0.e0;
      vec3 _t157D = [_t157A, _t157B, _t157C];
      real _t157E = prim •00CE<$[3]; $[3]; $[]> (_t157D, refPos1206);
      real _t157F = prim -0026<$[]> (_t1579, _t157E);
      real _t1580 = 0.1e1;
      real _t1581 = 0.e0;
      real _t1582 = -0.e0;
      vec3 _t1583 = [_t1580, _t1581, _t1582];
      real _t1584 = prim •00CE<$[3]; $[3]; $[]> (_t1583, dPos1207);
      time1408 = prim /0055 (_t157F, _t1584);
      face1409 = 5;
    } else {
      real _t1585 = -0.5e0;
      real _t1586 = 0.1e1;
      real _t1587 = 0.e0;
      real _t1588 = -0.e0;
      vec3 _t1589 = [_t1586, _t1587, _t1588];
      real _t158A = prim •00CE<$[3]; $[3]; $[]> (_t1589, refPos1206);
      real _t158B = prim -0026<$[]> (_t1585, _t158A);
      real _t158C = 0.1e1;
      real _t158D = 0.e0;
      real _t158E = -0.e0;
      vec3 _t158F = [_t158C, _t158D, _t158E];
      real _t1590 = prim •00CE<$[3]; $[3]; $[]> (_t158F, dPos1207);
      faceTime140A = prim /0055 (_t158B, _t1590);
    }
  }
  int _t1591 = -1;
  bool _t1592 = prim !=0086 (face1409, _t1591);
  if _t1592 {
    real _t1593 = 0.e0;
    real _t1594 = prim max0125 (time1408, _t1593);
    real _t1595 = (real)face1409;
    vec2 _t1596 = [_t1594, _t1595];
    return _t1596;
  } else {
    real _t1597 = -inf;
    bool _t1598 = prim ==0084 (_t1597, faceTime140A);
    if _t1598 {
      real _t1599 = -0.1e1;
      real _t159A = -0.1e1;
      vec2 _t159B = [_t1599, _t159A];
      return _t159B;
    } else {
      real _t159C = (real)i1407;
      vec2 _t159D = [faceTime140A, _t159C];
      return _t159D;
    }
  }
}
function Femdata: Mesh#0 domain159E (Femdata: Space arg0159F)
{
  Femdata: Mesh _t15A0 = extractFem(arg0159F, Mesh);
  return _t15A0;
}
function Femdata: Space#0 space15A1 (Femdata: FemFunc arg015A2)
{
  Femdata: Space _t15A3 = extractFem(arg015A2, Space);
  return _t15A3;
}
function Femdata: FuncCell#3 funcCell15A4 (Femdata: FemFunc arg015A5, Femdata: MeshCell arg115A6)
{
  int _t15A7 = extractFemItem(CellIndex(MeshCell), int, arg115A6);
  Femdata: FuncCell _t15A8 = loadFem(FuncCell, arg015A5, _t15A7);
  return _t15A8;
}
function real#1 atent15CD (real a015CE, real d15CF)
{
  real _t15D0 = 0.e0;
  real _t15D1 = 0.1e1;
  real _t15D2 = 0.15e1;
  real _t15D3 = 0.1e1;
  real _t15D4 = prim |()|00B5<$[]> (d15CF);
  real _t15D5 = prim /0055 (_t15D4, thick04EB);
  real _t15D6 = prim -0026<$[]> (_t15D3, _t15D5);
  real _t15D7 = prim *0034 (_t15D2, _t15D6);
  real _t15D8 = prim clamp0094<$[]> (_t15D0, _t15D1, _t15D7);
  real _t15D9 = prim *0034 (a015CE, _t15D8);
  return _t15D9;
}
function vec3#1 fStep15DA (vec3 x15DB)
{
  field(3)[3] _t15DC = prim ∇00A8<#∞; %3> (F15B1);
  field(3)[3,3] _t15DD = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15DC);
  tensor[3,3] _t15DE = prim @00A5<#∞; %3; $[3,3]> (_t15DD, x15DB);
  vec3[3] E15DF = prim evecs00A0 (_t15DE);
  field(3)[3] _t15E0 = prim ∇00A8<#∞; %3> (F15B1);
  field(3)[3,3] _t15E1 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15E0);
  tensor[3,3] _t15E2 = prim @00A5<#∞; %3; $[3,3]> (_t15E1, x15DB);
  real[3] L15E3 = prim evals009F (_t15E2);
  int _t15E4 = 2;
  vec3 _t15E5 = prim $sub01C0<vec3; %3> (E15DF, _t15E4);
  int _t15E6 = 2;
  vec3 _t15E7 = prim $sub01C0<vec3; %3> (E15DF, _t15E6);
  tensor[3,3] _t15E8 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t15E5, _t15E7);
  int _t15E9 = 2;
  real _t15EA = prim $sub01C0<real; %3> (L15E3, _t15E9);
  tensor[3,3] _t15EB = prim /0057<$[3,3]> (_t15E8, _t15EA);
  int _t15EC = 1;
  vec3 _t15ED = prim $sub01C0<vec3; %3> (E15DF, _t15EC);
  int _t15EE = 1;
  vec3 _t15EF = prim $sub01C0<vec3; %3> (E15DF, _t15EE);
  tensor[3,3] _t15F0 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t15ED, _t15EF);
  int _t15F1 = 1;
  real _t15F2 = prim $sub01C0<real; %3> (L15E3, _t15F1);
  tensor[3,3] _t15F3 = prim /0057<$[3,3]> (_t15F0, _t15F2);
  tensor[3,3] _t15F4 = prim +0017<$[3,3]> (_t15EB, _t15F3);
  tensor[3,3] _t15F5 = prim unary -008B<$[3,3]> (_t15F4);
  field(3)[3] _t15F6 = prim ∇00A8<#∞; %3> (F15B1);
  vec3 _t15F7 = prim @00A5<#∞; %3; $[3]> (_t15F6, x15DB);
  vec3 _t15F8 = prim •00CE<$[3,3]; $[3]; $[3]> (_t15F5, _t15F7);
  return _t15F8;
}
function real#1 fStrength15F9 (vec3 x15FA)
{
  field(3)[3] _t15FB = prim ∇00A8<#∞; %3> (F15B1);
  field(3)[3,3] _t15FC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15FB);
  tensor[3,3] _t15FD = prim @00A5<#∞; %3; $[3,3]> (_t15FC, x15FA);
  real[3] _t15FE = prim evals009F (_t15FD);
  int _t15FF = 1;
  real _t1600 = prim $sub01C0<real; %3> (_t15FE, _t15FF);
  real _t1601 = prim unary -008B<$[]> (_t1600);
  field(3)[3] _t1602 = prim ∇00A8<#∞; %3> (F15B1);
  vec3 _t1603 = prim @00A5<#∞; %3; $[3]> (_t1602, x15FA);
  real _t1604 = prim |()|00B5<$[3]> (_t1603);
  real _t1605 = prim +0017<$[]> (fBias04EE, _t1604);
  real _t1606 = prim /0055 (_t1601, _t1605);
  return _t1606;
}
function bool#1 fTest1607 (vec3 x1608)
{
  bool _t1609 = true;
  return _t1609;
}
function real#1 fMask160A (vec3 x160B)
{
  real _t160C = 0.1e1;
  return _t160C;
}
function bool#1 posTest160D (vec3 x160E)
{
  bool _t160F;
  Femdata: RefCell _t1610 = func refcell053F (block04C3);
  real _t1611 = 0.1e-8;
  bool _t1612 = extractFemItemN((_t1610, x160E, _t1611),InsideInsert(File=checkInside.in)(Mesh),);
  if _t1612 {
    bool _t1613;
    real _t1614 = func fStrength15F9 (x160E);
    bool _t1615 = prim >0080 (_t1614, fStrTh04EC);
    if _t1615 {
      bool _t1616;
      real _t1617 = func fMask160A (x160E);
      bool _t1618 = prim >=007E (_t1617, fMaskTh04ED);
      if _t1618 {
        _t1616 = func fTest1607 (x160E);
      } else {
        _t1616 = false;
      }
      _t1613 = _t1616;
    } else {
      _t1613 = false;
    }
    _t160F = _t1613;
  } else {
    _t160F = false;
  }
  return _t160F;
}
globalInit {
  int _t04C7 = 0;
  int _t04C5 = 1;
  int _t04C9 = extractFemItem(NumCell(Mesh), int, block04C3);
  int _t04C8 = prim -0024 (_t04C9, _t04C5);
  int[] _t04CC = prim $range01C3 (_t04C7, _t04C8);
  Femdata: MeshCell[] _t04CD = {};
  foreach _t04CB in _t04CC {
    Femdata: MeshCell _t04CE = loadFem(MeshCell, block04C3, _t04CB);
    _t04CD = prim @0010<Femdata: MeshCell> (_t04CD, _t04CE);
  }
  0cell_block04C4 = _t04CD;
  space04CF = loadFem(Space, 0space04CF_intermedateGlobal04D0, block04C3);
  U04D1 = loadFem(FemFunc, 0U04D1_intermedateGlobal04D2, space04CF);
  c115A9 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04C4, cellChoice04D3);
  Femdata: FuncCell _t15AA = func funcCell15A4 (U04D1, c115A9);
  Femdata: FemFunc _t15AB = extractFem(_t15AA, FemFunc);
  Femdata: FuncCell _t15AC = func funcCell15A4 (U04D1, c115A9);
  Femdata: FemFunc _t15AD = extractFem(_t15AC, FemFunc);
  Femdata: Space _t15AE = extractFem(_t15AD, Space);
  Femdata: FuncCell _t15AF = func funcCell15A4 (U04D1, c115A9);
  int _t15B0 = extractFemItem(CellIndex(FuncCell), int, _t15AF);
  F15B1 = femField(_t15AB,_t15B0,field(3)[],refField,);
  kernel _t15B2 = tent;
  IMAGE1D<double[3]> img15B3 = clamp(cmap04D5);
  CM15B4 = prim ⊛0074<#0; %1; $[3]> (_t15B2, img15B3);
  C15B5 = F15B1;
  vec3 _t15B6 = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camN15B7 = prim normalize0137<$[3]> (_t15B6);
  vec3 _t15B8 = prim ×00BE (camN15B7, camUp04DE);
  camU15B9 = prim normalize0137<$[3]> (_t15B8);
  camV15BA = prim ×00BE (camN15B7, camU15B9);
  vec3 _t15BB = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camDist15BC = prim |()|00B5<$[3]> (_t15BB);
  real _t15BD = 0.314159265358979323846264338327950288e1;
  real _t15BE = prim *0034 (camFOV04E4, _t15BD);
  real _t15BF = 0.36e3;
  real _t15C0 = prim /0055 (_t15BE, _t15BF);
  real _t15C1 = prim tan0179 (_t15C0);
  camVmax15C2 = prim *0034 (_t15C1, camDist15BC);
  real _t15C3 = (real)iresU04E6;
  real _t15C4 = prim *0034 (camVmax15C2, _t15C3);
  real _t15C5 = (real)iresV04E7;
  camUmax15C6 = prim /0055 (_t15C4, _t15C5);
  camNearVsp15C7 = prim +0017<$[]> (camNear04E2, camDist15BC);
  camFarVsp15C8 = prim +0017<$[]> (camFar04E3, camDist15BC);
  tensor[3,3] _t15C9 = [camU15B9, camV15BA, camN15B7];
  tensor[3,3] _t15CA = prim transpose0145<%3; %3> (_t15C9);
  vec3 _t15CB = prim normalize0137<$[3]> (litdir04FE);
  litwsp15CC = prim •00CE<$[3,3]; $[3]; $[3]> (_t15CA, _t15CB);
}
strand ray (int ui1619, int vi161A) {
  real rayU161B;
  real rayV1622;
  real rayN1629;
  vec3 UV162A;
  vec3 rayOrig162D;
  vec3 rayVec1632;
  real alphaFix1637;
  vec3 eyeDir163A;
  real phKa163C;
  real phKd163D;
  real phKs163E;
  real phSp163F;
  output vec4 rgba1640;
  output real raw1645;
  vec3 rgb1646;
  real transp164A;
  {
    real _t161C = prim unary -008B<$[]> (camUmax15C6);
    real _t161D = -0.5e0;
    real _t161E = (real)ui1619;
    real _t161F = (real)iresU04E6;
    real _t1620 = 0.5e0;
    real _t1621 = prim -0026<$[]> (_t161F, _t1620);
    rayU161B = prim lerp0098<$[]> (_t161C, camUmax15C6, _t161D, _t161E, _t1621);
    real _t1623 = prim unary -008B<$[]> (camVmax15C2);
    real _t1624 = -0.5e0;
    real _t1625 = (real)vi161A;
    real _t1626 = (real)iresV04E7;
    real _t1627 = 0.5e0;
    real _t1628 = prim -0026<$[]> (_t1626, _t1627);
    rayV1622 = prim lerp0098<$[]> (_t1623, camVmax15C2, _t1624, _t1625, _t1628);
    rayN1629 = camNearVsp15C7;
    vec3 _t162B = prim *0036<$[3]> (rayU161B, camU15B9);
    vec3 _t162C = prim *0036<$[3]> (rayV1622, camV15BA);
    UV162A = prim +0017<$[3]> (_t162B, _t162C);
    vec3 _t162E;
    if camOrtho04E5 {
      _t162E = UV162A;
    } else {
      real _t162F = 0.e0;
      real _t1630 = 0.e0;
      real _t1631 = 0.e0;
      _t162E = [_t162F, _t1630, _t1631];
    }
    rayOrig162D = prim +0017<$[3]> (camEye04D6, _t162E);
    vec3 _t1633;
    if camOrtho04E5 {
      real _t1634 = 0.e0;
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      _t1633 = [_t1634, _t1635, _t1636];
    } else {
      _t1633 = prim /0057<$[3]> (UV162A, camDist15BC);
    }
    rayVec1632 = prim +0017<$[3]> (camN15B7, _t1633);
    real _t1638 = prim |()|00B5<$[3]> (rayVec1632);
    real _t1639 = prim *0034 (_t1638, rayStep04E8);
    alphaFix1637 = prim /0055 (_t1639, refStep04E9);
    vec3 _t163B = prim normalize0137<$[3]> (rayVec1632);
    eyeDir163A = prim unary -008B<$[3]> (_t163B);
    phKa163C = phong04F1[0];
    phKd163D = phong04F1[1];
    phKs163E = phong04F1[2];
    phSp163F = phong04F1[3];
    real _t1641 = 0.e0;
    real _t1642 = 0.e0;
    real _t1643 = 0.e0;
    real _t1644 = 0.e0;
    rgba1640 = [_t1641, _t1642, _t1643, _t1644];
    raw1645 = 0.e0;
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    rgb1646 = [_t1647, _t1648, _t1649];
    transp164A = 0.1e1;
  }
  update
  {
    rayN1629 = prim +0017<$[]> (rayN1629, rayStep04E8);
    bool _t164B = prim >0080 (rayN1629, camFarVsp15C8);
    if _t164B {
      stabilize;
    }
    vec3 _t164C = prim *0036<$[3]> (rayN1629, rayVec1632);
    vec3 pos164D = prim +0017<$[3]> (rayOrig162D, _t164C);
    bool _t164E = func posTest160D (pos164D);
    bool _t164F = prim !00BC (_t164E);
    if _t164F {
      continue;
    }
    vec3 step1650 = func fStep15DA (pos164D);
    real _t1651 = prim |()|00B5<$[3]> (step1650);
    real aa1652 = func atent15CD (maxAlpha04EF, _t1651);
    real _t1653 = 0.e0;
    bool _t1654 = prim ==0084 (aa1652, _t1653);
    if _t1654 {
      continue;
    }
    real _t1655 = 0.1e1;
    real _t1656 = 0.1e1;
    real _t1657 = prim -0026<$[]> (_t1656, aa1652);
    real _t1658 = prim ^0069 (_t1657, alphaFix1637);
    aa1652 = prim -0026<$[]> (_t1655, _t1658);
    vec3 _t1659 = prim normalize0137<$[3]> (step1650);
    vec3 snorm165A = prim unary -008B<$[3]> (_t1659);
    real _t165B = prim •00CE<$[3]; $[3]; $[]> (snorm165A, litwsp15CC);
    int _t165C = 2;
    real dcomp165D = prim ^0068 (_t165B, _t165C);
    real scomp165E = 0.e0;
    real _t165F = 0.e0;
    bool _t1660 = prim !=0088 (phKs163E, _t165F);
    if _t1660 {
      vec3 _t1661 = prim +0017<$[3]> (eyeDir163A, litwsp15CC);
      vec3 _t1662 = prim normalize0137<$[3]> (_t1661);
      real _t1663 = prim •00CE<$[3]; $[3]; $[]> (snorm165A, _t1662);
      real _t1664 = prim |()|00B5<$[]> (_t1663);
      scomp165E = prim ^0069 (_t1664, phSp163F);
    }
    vec3 dcol1665 = prim lerp0098<$[3]> (mcNear04F6, mcFar04FA, camNearVsp15C7, rayN1629, camFarVsp15C8);
    real cmin1666 = cminmax0502[0];
    real cmax1667 = cminmax0502[1];
    real _t1668 = 0.1e1;
    real _t1669 = 0.1e1;
    real _t166A = 0.1e1;
    vec3 mcol166B = [_t1668, _t1669, _t166A];
    bool _t166C = prim !=0088 (cmin1666, cmax1667);
    if _t166C {
      real _t166D = 0.e0;
      real _t166E = 0.1e1;
      vec3 _t166F = prim +0017<$[3]> (pos164D, step1650);
      real _t1670 = prim @00A5<#∞; %3; $[]> (C15B5, _t166F);
      real _t1671 = prim lerp0098<$[]> (_t166D, _t166E, cmin1666, _t1670, cmax1667);
      mcol166B = prim @00A5<#0; %1; $[3]> (CM15B4, _t1671);
    }
    real _t1672 = prim *0034 (transp164A, aa1652);
    real _t1673 = prim *0034 (phKd163D, dcomp165D);
    real _t1674 = prim +0017<$[]> (phKa163C, _t1673);
    vec3 _t1675 = prim modulate0129<%3> (dcol1665, mcol166B);
    vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
    real _t1677 = prim *0034 (phKs163E, scomp165E);
    real _t1678 = 0.1e1;
    real _t1679 = 0.1e1;
    real _t167A = 0.1e1;
    vec3 _t167B = [_t1678, _t1679, _t167A];
    vec3 _t167C = prim *0036<$[3]> (_t1677, _t167B);
    vec3 _t167D = prim +0017<$[3]> (_t1676, _t167C);
    vec3 _t167E = prim *0036<$[3]> (_t1672, _t167D);
    rgb1646 = prim +0017<$[3]> (rgb1646, _t167E);
    real _t167F = 0.1e1;
    real _t1680 = prim -0026<$[]> (_t167F, aa1652);
    transp164A = prim *0034 (transp164A, _t1680);
    bool _t1681 = prim <007A (transp164A, transp004EA);
    if _t1681 {
      transp164A = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1682 = 0.1e1;
    bool _t1683 = prim <007A (transp164A, _t1682);
    if _t1683 {
      real _t1684 = 0.1e1;
      real aa1685 = prim -0026<$[]> (_t1684, transp164A);
      real _t1686 = rgb1646[0];
      real _t1687 = prim /0055 (_t1686, aa1685);
      real _t1688 = rgb1646[1];
      real _t1689 = prim /0055 (_t1688, aa1685);
      real _t168A = rgb1646[2];
      real _t168B = prim /0055 (_t168A, aa1685);
      rgba1640 = [_t1687, _t1689, _t168B, aa1685];
    }
  }
}
grid(2) {
  int _t168C = 0;
  int _t168D = 1;
  int _t168E = prim -0024 (iresV04E7, _t168D);
  int[] _t168F = prim $range01C3 (_t168C, _t168E);
  foreach vi1695 in _t168F {
    int _t1690 = 0;
    int _t1691 = 1;
    int _t1692 = prim -0024 (iresU04E6, _t1691);
    int[] _t1693 = prim $range01C3 (_t1690, _t1692);
    foreach ui1694 in _t1693 {
      new ray (ui1694, vi1695);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04C3;
input FemData:Space 0space04CF_intermedateGlobal04D0;
input FemData:FemFunc 0U04D1_intermedateGlobal04D2;
input int cellChoice04D3;
input image(1)[3] cmap04D5 = image("cmap.nrrd");
input vec3 camEye04D6 = <default>;
input vec3 camAt04DA = <default>;
input vec3 camUp04DE = <default>;
input real camNear04E2 = <default>;
input real camFar04E3 = <default>;
input real camFOV04E4 = <default>;
input bool camOrtho04E5 = <default>;
input int iresU04E6 = <default>;
input int iresV04E7 = <default>;
input real rayStep04E8 = <default>;
input real refStep04E9 = <default>;
input real transp004EA = <default>;
input real thick04EB = <default>;
input real fStrTh04EC = <default>;
input real fMaskTh04ED = <default>;
input real fBias04EE = <default>;
input real maxAlpha04EF = <default>;
input bool light04F0 = <default>;
input vec4 phong04F1 = <default>;
input vec3 mcNear04F6 = <default>;
input vec3 mcFar04FA = <default>;
input vec3 litdir04FE = <default>;
input vec2 cminmax0502 = <default>;
constants {
  real _t04D7 = 0.e0;
  real _t04D8 = -0.2e1;
  real _t04D9 = 0.e0;
  camEye04D6 = [_t04D7, _t04D8, _t04D9];
  real _t04DB = 0.e0;
  real _t04DC = 0.e0;
  real _t04DD = 0.e0;
  camAt04DA = [_t04DB, _t04DC, _t04DD];
  real _t04DF = 0.e0;
  real _t04E0 = 0.e0;
  real _t04E1 = 0.1e1;
  camUp04DE = [_t04DF, _t04E0, _t04E1];
  camNear04E2 = -0.4e1;
  camFar04E3 = 0.4e1;
  camFOV04E4 = 0.1e2;
  camOrtho04E5 = false;
  iresU04E6 = 100;
  iresV04E7 = 100;
  rayStep04E8 = 0.1e-3;
  refStep04E9 = 0.1e-3;
  transp004EA = 0.5e-2;
  thick04EB = 0.1e-1;
  fStrTh04EC = 0.e0;
  fMaskTh04ED = 0.e0;
  fBias04EE = 0.1e0;
  maxAlpha04EF = 0.1e1;
  light04F0 = false;
  real _t04F2 = 0.1e0;
  real _t04F3 = 0.7e0;
  real _t04F4 = 0.2e0;
  real _t04F5 = 0.1e3;
  phong04F1 = [_t04F2, _t04F3, _t04F4, _t04F5];
  real _t04F7 = 0.1e1;
  real _t04F8 = 0.1e1;
  real _t04F9 = 0.1e1;
  mcNear04F6 = [_t04F7, _t04F8, _t04F9];
  real _t04FB = 0.1e1;
  real _t04FC = 0.1e1;
  real _t04FD = 0.1e1;
  mcFar04FA = [_t04FB, _t04FC, _t04FD];
  real _t04FF = 0.e0;
  real _t0500 = -0.1e1;
  real _t0501 = 0.e0;
  litdir04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.e0;
  real _t0504 = 0.e0;
  cminmax0502 = [_t0503, _t0504];
}
global Femdata: MeshCell[] 0cell_block04C4;
global Femdata: Space space04CF;
global Femdata: FemFunc U04D1;
global Femdata: MeshCell c115A9;
global field(3)[] F15B1;
global field#0(1)[3] CM15B4;
global field(3)[] C15B5;
global vec3 camN15B7;
global vec3 camU15B9;
global vec3 camV15BA;
global real camDist15BC;
global real camVmax15C2;
global real camUmax15C6;
global real camNearVsp15C7;
global real camFarVsp15C8;
global vec3 litwsp15CC;
function int[2]#8 nextCell4059B (int faceIdx11FC, int cell11FD, Femdata: Mesh mesh11FE)
{
  int _t11FF = 12;
  int _t1200 = prim *0033 (cell11FD, _t11FF);
  int _t1201 = 2;
  int _t1202 = prim *0033 (faceIdx11FC, _t1201);
  int _t1203 = prim +0015 (_t1200, _t1202);
  int[2] _t1204 = extractFemItemN((mesh11FE, _t1203),CellFaceCell(Mesh),);
  return _t1204;
}
globalInit {
  int _t04C7 = 0;
  int _t04C5 = 1;
  int _t04C9 = extractFemItem(NumCell(Mesh), int, block04C3);
  int _t04C8 = prim -0024 (_t04C9, _t04C5);
  int[] _t04CC = prim $range01C3 (_t04C7, _t04C8);
  Femdata: MeshCell[] _t04CD = {};
  foreach _t04CB in _t04CC {
    Femdata: MeshCell _t04CE = loadFem(MeshCell, block04C3, _t04CB);
    _t04CD = prim @0010<Femdata: MeshCell> (_t04CD, _t04CE);
  }
  0cell_block04C4 = _t04CD;
  space04CF = loadFem(Space, 0space04CF_intermedateGlobal04D0, block04C3);
  U04D1 = loadFem(FemFunc, 0U04D1_intermedateGlobal04D2, space04CF);
  c115A9 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04C4, cellChoice04D3);
  Femdata: FuncCell _t15AA;
  int _t16AD = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AE = loadFem(FuncCell, U04D1, _t16AD);
  _t15AA = _t16AE;
  Femdata: FemFunc _t15AB = extractFem(_t15AA, FemFunc);
  Femdata: FuncCell _t15AC;
  int _t16AB = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AC = loadFem(FuncCell, U04D1, _t16AB);
  _t15AC = _t16AC;
  Femdata: FemFunc _t15AD = extractFem(_t15AC, FemFunc);
  Femdata: Space _t15AE = extractFem(_t15AD, Space);
  Femdata: FuncCell _t15AF;
  int _t16A9 = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AA = loadFem(FuncCell, U04D1, _t16A9);
  _t15AF = _t16AA;
  int _t15B0 = extractFemItem(CellIndex(FuncCell), int, _t15AF);
  F15B1 = femField(_t15AB,_t15B0,field(3)[],refField,);
  kernel _t15B2 = tent;
  IMAGE1D<double[3]> img15B3 = clamp(cmap04D5);
  CM15B4 = prim ⊛0074<#0; %1; $[3]> (_t15B2, img15B3);
  C15B5 = F15B1;
  vec3 _t15B6 = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camN15B7 = prim normalize0137<$[3]> (_t15B6);
  vec3 _t15B8 = prim ×00BE (camN15B7, camUp04DE);
  camU15B9 = prim normalize0137<$[3]> (_t15B8);
  camV15BA = prim ×00BE (camN15B7, camU15B9);
  vec3 _t15BB = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camDist15BC = prim |()|00B5<$[3]> (_t15BB);
  real _t15BD = 0.314159265358979323846264338327950288e1;
  real _t15BE = prim *0034 (camFOV04E4, _t15BD);
  real _t15BF = 0.36e3;
  real _t15C0 = prim /0055 (_t15BE, _t15BF);
  real _t15C1 = prim tan0179 (_t15C0);
  camVmax15C2 = prim *0034 (_t15C1, camDist15BC);
  real _t15C3 = (real)iresU04E6;
  real _t15C4 = prim *0034 (camVmax15C2, _t15C3);
  real _t15C5 = (real)iresV04E7;
  camUmax15C6 = prim /0055 (_t15C4, _t15C5);
  camNearVsp15C7 = prim +0017<$[]> (camNear04E2, camDist15BC);
  camFarVsp15C8 = prim +0017<$[]> (camFar04E3, camDist15BC);
  tensor[3,3] _t15C9 = [camU15B9, camV15BA, camN15B7];
  tensor[3,3] _t15CA = prim transpose0145<%3; %3> (_t15C9);
  vec3 _t15CB = prim normalize0137<$[3]> (litdir04FE);
  litwsp15CC = prim •00CE<$[3,3]; $[3]; $[3]> (_t15CA, _t15CB);
}
strand ray (int ui1619, int vi161A) {
  real rayU161B;
  real rayV1622;
  real rayN1629;
  vec3 UV162A;
  vec3 rayOrig162D;
  vec3 rayVec1632;
  real alphaFix1637;
  vec3 eyeDir163A;
  real phKa163C;
  real phKd163D;
  real phKs163E;
  real phSp163F;
  output vec4 rgba1640;
  output real raw1645;
  vec3 rgb1646;
  real transp164A;
  {
    real _t161C = prim unary -008B<$[]> (camUmax15C6);
    real _t161D = -0.5e0;
    real _t161E = (real)ui1619;
    real _t161F = (real)iresU04E6;
    real _t1620 = 0.5e0;
    real _t1621 = prim -0026<$[]> (_t161F, _t1620);
    rayU161B = prim lerp0098<$[]> (_t161C, camUmax15C6, _t161D, _t161E, _t1621);
    real _t1623 = prim unary -008B<$[]> (camVmax15C2);
    real _t1624 = -0.5e0;
    real _t1625 = (real)vi161A;
    real _t1626 = (real)iresV04E7;
    real _t1627 = 0.5e0;
    real _t1628 = prim -0026<$[]> (_t1626, _t1627);
    rayV1622 = prim lerp0098<$[]> (_t1623, camVmax15C2, _t1624, _t1625, _t1628);
    rayN1629 = camNearVsp15C7;
    vec3 _t162B = prim *0036<$[3]> (rayU161B, camU15B9);
    vec3 _t162C = prim *0036<$[3]> (rayV1622, camV15BA);
    UV162A = prim +0017<$[3]> (_t162B, _t162C);
    vec3 _t162E;
    if camOrtho04E5 {
      _t162E = UV162A;
    } else {
      real _t162F = 0.e0;
      real _t1630 = 0.e0;
      real _t1631 = 0.e0;
      _t162E = [_t162F, _t1630, _t1631];
    }
    rayOrig162D = prim +0017<$[3]> (camEye04D6, _t162E);
    vec3 _t1633;
    if camOrtho04E5 {
      real _t1634 = 0.e0;
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      _t1633 = [_t1634, _t1635, _t1636];
    } else {
      _t1633 = prim /0057<$[3]> (UV162A, camDist15BC);
    }
    rayVec1632 = prim +0017<$[3]> (camN15B7, _t1633);
    real _t1638 = prim |()|00B5<$[3]> (rayVec1632);
    real _t1639 = prim *0034 (_t1638, rayStep04E8);
    alphaFix1637 = prim /0055 (_t1639, refStep04E9);
    vec3 _t163B = prim normalize0137<$[3]> (rayVec1632);
    eyeDir163A = prim unary -008B<$[3]> (_t163B);
    phKa163C = phong04F1[0];
    phKd163D = phong04F1[1];
    phKs163E = phong04F1[2];
    phSp163F = phong04F1[3];
    real _t1641 = 0.e0;
    real _t1642 = 0.e0;
    real _t1643 = 0.e0;
    real _t1644 = 0.e0;
    rgba1640 = [_t1641, _t1642, _t1643, _t1644];
    raw1645 = 0.e0;
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    rgb1646 = [_t1647, _t1648, _t1649];
    transp164A = 0.1e1;
  }
  update
  {
    rayN1629 = prim +0017<$[]> (rayN1629, rayStep04E8);
    bool _t164B = prim >0080 (rayN1629, camFarVsp15C8);
    if _t164B {
      stabilize;
    }
    vec3 _t164C = prim *0036<$[3]> (rayN1629, rayVec1632);
    vec3 pos164D = prim +0017<$[3]> (rayOrig162D, _t164C);
    bool _t164E;
    bool _t16D6;
    Femdata: RefCell _t16D7;
    Femdata: RefCell _t16D8 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04C3);
    _t16D7 = _t16D8;
    real _t16D9 = 0.1e-8;
    bool _t16DA = extractFemItemN((_t16D7, pos164D, _t16D9),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16DA {
      bool _t16DB;
      real _t16DC;
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B1);
      field(3)[3,3] _t16DE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16DD);
      tensor[3,3] _t16DF = prim @00A5<#∞; %3; $[3,3]> (_t16DE, pos164D);
      real[3] _t16E0 = prim evals009F (_t16DF);
      int _t16E1 = 1;
      real _t16E2 = prim $sub01C0<real; %3> (_t16E0, _t16E1);
      real _t16E3 = prim unary -008B<$[]> (_t16E2);
      field(3)[3] _t16E4 = prim ∇00A8<#∞; %3> (F15B1);
      vec3 _t16E5 = prim @00A5<#∞; %3; $[3]> (_t16E4, pos164D);
      real _t16E6 = prim |()|00B5<$[3]> (_t16E5);
      real _t16E7 = prim +0017<$[]> (fBias04EE, _t16E6);
      real _t16E8 = prim /0055 (_t16E3, _t16E7);
      _t16DC = _t16E8;
      bool _t16E9 = prim >0080 (_t16DC, fStrTh04EC);
      if _t16E9 {
        bool _t16EA;
        real _t16EB;
        real _t16EC = 0.1e1;
        _t16EB = _t16EC;
        bool _t16ED = prim >=007E (_t16EB, fMaskTh04ED);
        if _t16ED {
          bool _t16EE = true;
          _t16EA = _t16EE;
        } else {
          _t16EA = false;
        }
        _t16DB = _t16EA;
      } else {
        _t16DB = false;
      }
      _t16D6 = _t16DB;
    } else {
      _t16D6 = false;
    }
    _t164E = _t16D6;
    bool _t164F = prim !00BC (_t164E);
    if _t164F {
      continue;
    }
    vec3 step1650;
    field(3)[3] _t16B9 = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BA = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16B9);
    tensor[3,3] _t16BB = prim @00A5<#∞; %3; $[3,3]> (_t16BA, pos164D);
    vec3[3] E16BC = prim evecs00A0 (_t16BB);
    field(3)[3] _t16BD = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16BD);
    tensor[3,3] _t16BF = prim @00A5<#∞; %3; $[3,3]> (_t16BE, pos164D);
    real[3] L16C0 = prim evals009F (_t16BF);
    int _t16C1 = 2;
    vec3 _t16C2 = prim $sub01C0<vec3; %3> (E16BC, _t16C1);
    int _t16C3 = 2;
    vec3 _t16C4 = prim $sub01C0<vec3; %3> (E16BC, _t16C3);
    tensor[3,3] _t16C5 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16C2, _t16C4);
    int _t16C6 = 2;
    real _t16C7 = prim $sub01C0<real; %3> (L16C0, _t16C6);
    tensor[3,3] _t16C8 = prim /0057<$[3,3]> (_t16C5, _t16C7);
    int _t16C9 = 1;
    vec3 _t16CA = prim $sub01C0<vec3; %3> (E16BC, _t16C9);
    int _t16CB = 1;
    vec3 _t16CC = prim $sub01C0<vec3; %3> (E16BC, _t16CB);
    tensor[3,3] _t16CD = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16CA, _t16CC);
    int _t16CE = 1;
    real _t16CF = prim $sub01C0<real; %3> (L16C0, _t16CE);
    tensor[3,3] _t16D0 = prim /0057<$[3,3]> (_t16CD, _t16CF);
    tensor[3,3] _t16D1 = prim +0017<$[3,3]> (_t16C8, _t16D0);
    tensor[3,3] _t16D2 = prim unary -008B<$[3,3]> (_t16D1);
    field(3)[3] _t16D3 = prim ∇00A8<#∞; %3> (F15B1);
    vec3 _t16D4 = prim @00A5<#∞; %3; $[3]> (_t16D3, pos164D);
    vec3 _t16D5 = prim •00CE<$[3,3]; $[3]; $[3]> (_t16D2, _t16D4);
    step1650 = _t16D5;
    real _t1651 = prim |()|00B5<$[3]> (step1650);
    real aa1652;
    real _t16AF = 0.e0;
    real _t16B0 = 0.1e1;
    real _t16B1 = 0.15e1;
    real _t16B2 = 0.1e1;
    real _t16B3 = prim |()|00B5<$[]> (_t1651);
    real _t16B4 = prim /0055 (_t16B3, thick04EB);
    real _t16B5 = prim -0026<$[]> (_t16B2, _t16B4);
    real _t16B6 = prim *0034 (_t16B1, _t16B5);
    real _t16B7 = prim clamp0094<$[]> (_t16AF, _t16B0, _t16B6);
    real _t16B8 = prim *0034 (maxAlpha04EF, _t16B7);
    aa1652 = _t16B8;
    real _t1653 = 0.e0;
    bool _t1654 = prim ==0084 (aa1652, _t1653);
    if _t1654 {
      continue;
    }
    real _t1655 = 0.1e1;
    real _t1656 = 0.1e1;
    real _t1657 = prim -0026<$[]> (_t1656, aa1652);
    real _t1658 = prim ^0069 (_t1657, alphaFix1637);
    aa1652 = prim -0026<$[]> (_t1655, _t1658);
    vec3 _t1659 = prim normalize0137<$[3]> (step1650);
    vec3 snorm165A = prim unary -008B<$[3]> (_t1659);
    real _t165B = prim •00CE<$[3]; $[3]; $[]> (snorm165A, litwsp15CC);
    int _t165C = 2;
    real dcomp165D = prim ^0068 (_t165B, _t165C);
    real scomp165E = 0.e0;
    real _t165F = 0.e0;
    bool _t1660 = prim !=0088 (phKs163E, _t165F);
    if _t1660 {
      vec3 _t1661 = prim +0017<$[3]> (eyeDir163A, litwsp15CC);
      vec3 _t1662 = prim normalize0137<$[3]> (_t1661);
      real _t1663 = prim •00CE<$[3]; $[3]; $[]> (snorm165A, _t1662);
      real _t1664 = prim |()|00B5<$[]> (_t1663);
      scomp165E = prim ^0069 (_t1664, phSp163F);
    }
    vec3 dcol1665 = prim lerp0098<$[3]> (mcNear04F6, mcFar04FA, camNearVsp15C7, rayN1629, camFarVsp15C8);
    real cmin1666 = cminmax0502[0];
    real cmax1667 = cminmax0502[1];
    real _t1668 = 0.1e1;
    real _t1669 = 0.1e1;
    real _t166A = 0.1e1;
    vec3 mcol166B = [_t1668, _t1669, _t166A];
    bool _t166C = prim !=0088 (cmin1666, cmax1667);
    if _t166C {
      real _t166D = 0.e0;
      real _t166E = 0.1e1;
      vec3 _t166F = prim +0017<$[3]> (pos164D, step1650);
      real _t1670 = prim @00A5<#∞; %3; $[]> (C15B5, _t166F);
      real _t1671 = prim lerp0098<$[]> (_t166D, _t166E, cmin1666, _t1670, cmax1667);
      mcol166B = prim @00A5<#0; %1; $[3]> (CM15B4, _t1671);
    }
    real _t1672 = prim *0034 (transp164A, aa1652);
    real _t1673 = prim *0034 (phKd163D, dcomp165D);
    real _t1674 = prim +0017<$[]> (phKa163C, _t1673);
    vec3 _t1675 = prim modulate0129<%3> (dcol1665, mcol166B);
    vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
    real _t1677 = prim *0034 (phKs163E, scomp165E);
    real _t1678 = 0.1e1;
    real _t1679 = 0.1e1;
    real _t167A = 0.1e1;
    vec3 _t167B = [_t1678, _t1679, _t167A];
    vec3 _t167C = prim *0036<$[3]> (_t1677, _t167B);
    vec3 _t167D = prim +0017<$[3]> (_t1676, _t167C);
    vec3 _t167E = prim *0036<$[3]> (_t1672, _t167D);
    rgb1646 = prim +0017<$[3]> (rgb1646, _t167E);
    real _t167F = 0.1e1;
    real _t1680 = prim -0026<$[]> (_t167F, aa1652);
    transp164A = prim *0034 (transp164A, _t1680);
    bool _t1681 = prim <007A (transp164A, transp004EA);
    if _t1681 {
      transp164A = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1682 = 0.1e1;
    bool _t1683 = prim <007A (transp164A, _t1682);
    if _t1683 {
      real _t1684 = 0.1e1;
      real aa1685 = prim -0026<$[]> (_t1684, transp164A);
      real _t1686 = rgb1646[0];
      real _t1687 = prim /0055 (_t1686, aa1685);
      real _t1688 = rgb1646[1];
      real _t1689 = prim /0055 (_t1688, aa1685);
      real _t168A = rgb1646[2];
      real _t168B = prim /0055 (_t168A, aa1685);
      rgba1640 = [_t1687, _t1689, _t168B, aa1685];
    }
  }
}
grid(2) {
  int _t168C = 0;
  int _t168D = 1;
  int _t168E = prim -0024 (iresV04E7, _t168D);
  int[] _t168F = prim $range01C3 (_t168C, _t168E);
  foreach vi1695 in _t168F {
    int _t1690 = 0;
    int _t1691 = 1;
    int _t1692 = prim -0024 (iresU04E6, _t1691);
    int[] _t1693 = prim $range01C3 (_t1690, _t1692);
    foreach ui1694 in _t1693 {
      new ray (ui1694, vi1695);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04C3;
input FemData:Space 0space04CF_intermedateGlobal04D0;
input FemData:FemFunc 0U04D1_intermedateGlobal04D2;
input int cellChoice04D3;
input image(1)[3] cmap04D5 = image("cmap.nrrd");
input vec3 camEye04D6 = <default>;
input vec3 camAt04DA = <default>;
input vec3 camUp04DE = <default>;
input real camNear04E2 = <default>;
input real camFar04E3 = <default>;
input real camFOV04E4 = <default>;
input bool camOrtho04E5 = <default>;
input int iresU04E6 = <default>;
input int iresV04E7 = <default>;
input real rayStep04E8 = <default>;
input real refStep04E9 = <default>;
input real transp004EA = <default>;
input real thick04EB = <default>;
input real fStrTh04EC = <default>;
input real fMaskTh04ED = <default>;
input real fBias04EE = <default>;
input real maxAlpha04EF = <default>;
input bool light04F0 = <default>;
input vec4 phong04F1 = <default>;
input vec3 mcNear04F6 = <default>;
input vec3 mcFar04FA = <default>;
input vec3 litdir04FE = <default>;
input vec2 cminmax0502 = <default>;
constants {
  real _t04D7 = 0.e0;
  real _t04D8 = -0.2e1;
  real _t04D9 = 0.e0;
  camEye04D6 = [_t04D7, _t04D8, _t04D9];
  real _t04DB = 0.e0;
  real _t04DC = 0.e0;
  real _t04DD = 0.e0;
  camAt04DA = [_t04DB, _t04DC, _t04DD];
  real _t04DF = 0.e0;
  real _t04E0 = 0.e0;
  real _t04E1 = 0.1e1;
  camUp04DE = [_t04DF, _t04E0, _t04E1];
  camNear04E2 = -0.4e1;
  camFar04E3 = 0.4e1;
  camFOV04E4 = 0.1e2;
  camOrtho04E5 = false;
  iresU04E6 = 100;
  iresV04E7 = 100;
  rayStep04E8 = 0.1e-3;
  refStep04E9 = 0.1e-3;
  transp004EA = 0.5e-2;
  thick04EB = 0.1e-1;
  fStrTh04EC = 0.e0;
  fMaskTh04ED = 0.e0;
  fBias04EE = 0.1e0;
  maxAlpha04EF = 0.1e1;
  light04F0 = false;
  real _t04F2 = 0.1e0;
  real _t04F3 = 0.7e0;
  real _t04F4 = 0.2e0;
  real _t04F5 = 0.1e3;
  phong04F1 = [_t04F2, _t04F3, _t04F4, _t04F5];
  real _t04F7 = 0.1e1;
  real _t04F8 = 0.1e1;
  real _t04F9 = 0.1e1;
  mcNear04F6 = [_t04F7, _t04F8, _t04F9];
  real _t04FB = 0.1e1;
  real _t04FC = 0.1e1;
  real _t04FD = 0.1e1;
  mcFar04FA = [_t04FB, _t04FC, _t04FD];
  real _t04FF = 0.e0;
  real _t0500 = -0.1e1;
  real _t0501 = 0.e0;
  litdir04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.e0;
  real _t0504 = 0.e0;
  cminmax0502 = [_t0503, _t0504];
}
global Femdata: MeshCell[] 0cell_block04C4;
global Femdata: Space space04CF;
global Femdata: FemFunc U04D1;
global Femdata: MeshCell c115A9;
global field(3)[] F15B1;
global field#0(1)[3] CM15B4;
global field(3)[] C15B5;
global vec3 camN15B7;
global vec3 camU15B9;
global vec3 camV15BA;
global real camDist15BC;
global real camVmax15C2;
global real camUmax15C6;
global real camNearVsp15C7;
global real camFarVsp15C8;
global vec3 litwsp15CC;
function int[2]#8 nextCell4059B (int faceIdx11FC, int cell11FD, Femdata: Mesh mesh11FE)
{
  int _t11FF = 12;
  int _t1200 = prim *0033 (cell11FD, _t11FF);
  int _t1201 = 2;
  int _t1202 = prim *0033 (faceIdx11FC, _t1201);
  int _t1203 = prim +0015 (_t1200, _t1202);
  int[2] _t1204 = extractFemItemN((mesh11FE, _t1203),CellFaceCell(Mesh),);
  return _t1204;
}
globalInit {
  int _t04C7 = 0;
  int _t04C5 = 1;
  int _t04C9 = extractFemItem(NumCell(Mesh), int, block04C3);
  int _t04C8 = prim -0024 (_t04C9, _t04C5);
  int[] _t04CC = prim $range01C3 (_t04C7, _t04C8);
  Femdata: MeshCell[] _t04CD = {};
  foreach _t04CB in _t04CC {
    Femdata: MeshCell _t04CE = loadFem(MeshCell, block04C3, _t04CB);
    _t04CD = prim @0010<Femdata: MeshCell> (_t04CD, _t04CE);
  }
  0cell_block04C4 = _t04CD;
  space04CF = loadFem(Space, 0space04CF_intermedateGlobal04D0, block04C3);
  U04D1 = loadFem(FemFunc, 0U04D1_intermedateGlobal04D2, space04CF);
  c115A9 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04C4, cellChoice04D3);
  Femdata: FuncCell _t15AA;
  int _t16AD = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AE = loadFem(FuncCell, U04D1, _t16AD);
  _t15AA = _t16AE;
  Femdata: FemFunc _t15AB = extractFem(_t15AA, FemFunc);
  Femdata: FuncCell _t15AC;
  int _t16AB = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AC = loadFem(FuncCell, U04D1, _t16AB);
  _t15AC = _t16AC;
  Femdata: FemFunc _t15AD = extractFem(_t15AC, FemFunc);
  Femdata: Space _t15AE = extractFem(_t15AD, Space);
  Femdata: FuncCell _t15AF;
  int _t16A9 = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AA = loadFem(FuncCell, U04D1, _t16A9);
  _t15AF = _t16AA;
  int _t15B0 = extractFemItem(CellIndex(FuncCell), int, _t15AF);
  F15B1 = femField(_t15AB,_t15B0,field(3)[],refField,);
  kernel _t15B2 = tent;
  IMAGE1D<double[3]> img15B3 = clamp(cmap04D5);
  CM15B4 = prim ⊛0074<#0; %1; $[3]> (_t15B2, img15B3);
  C15B5 = F15B1;
  vec3 _t15B6 = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camN15B7 = prim normalize0137<$[3]> (_t15B6);
  vec3 _t15B8 = prim ×00BE (camN15B7, camUp04DE);
  camU15B9 = prim normalize0137<$[3]> (_t15B8);
  camV15BA = prim ×00BE (camN15B7, camU15B9);
  vec3 _t15BB = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camDist15BC = prim |()|00B5<$[3]> (_t15BB);
  real _t15BD = 0.314159265358979323846264338327950288e1;
  real _t15BE = prim *0034 (camFOV04E4, _t15BD);
  real _t15BF = 0.36e3;
  real _t15C0 = prim /0055 (_t15BE, _t15BF);
  real _t15C1 = prim tan0179 (_t15C0);
  camVmax15C2 = prim *0034 (_t15C1, camDist15BC);
  real _t15C3 = (real)iresU04E6;
  real _t15C4 = prim *0034 (camVmax15C2, _t15C3);
  real _t15C5 = (real)iresV04E7;
  camUmax15C6 = prim /0055 (_t15C4, _t15C5);
  camNearVsp15C7 = prim +0017<$[]> (camNear04E2, camDist15BC);
  camFarVsp15C8 = prim +0017<$[]> (camFar04E3, camDist15BC);
  tensor[3,3] _t15C9 = [camU15B9, camV15BA, camN15B7];
  tensor[3,3] _t15CA = prim transpose0145<%3; %3> (_t15C9);
  vec3 _t15CB = prim normalize0137<$[3]> (litdir04FE);
  litwsp15CC = prim •00CE<$[3,3]; $[3]; $[3]> (_t15CA, _t15CB);
}
strand ray (int ui1619, int vi161A) {
  real rayU161B;
  real rayV1622;
  real rayN1629;
  vec3 UV162A;
  vec3 rayOrig162D;
  vec3 rayVec1632;
  real alphaFix1637;
  vec3 eyeDir163A;
  real phKa163C;
  real phKd163D;
  real phKs163E;
  real phSp163F;
  output vec4 rgba1640;
  output real raw1645;
  vec3 rgb1646;
  real transp164A;
  {
    real _t161C = prim unary -008B<$[]> (camUmax15C6);
    real _t161D = -0.5e0;
    real _t161E = (real)ui1619;
    real _t161F = (real)iresU04E6;
    real _t1620 = 0.5e0;
    real _t1621 = prim -0026<$[]> (_t161F, _t1620);
    rayU161B = prim lerp0098<$[]> (_t161C, camUmax15C6, _t161D, _t161E, _t1621);
    real _t1623 = prim unary -008B<$[]> (camVmax15C2);
    real _t1624 = -0.5e0;
    real _t1625 = (real)vi161A;
    real _t1626 = (real)iresV04E7;
    real _t1627 = 0.5e0;
    real _t1628 = prim -0026<$[]> (_t1626, _t1627);
    rayV1622 = prim lerp0098<$[]> (_t1623, camVmax15C2, _t1624, _t1625, _t1628);
    rayN1629 = camNearVsp15C7;
    vec3 _t162B = prim *0036<$[3]> (rayU161B, camU15B9);
    vec3 _t162C = prim *0036<$[3]> (rayV1622, camV15BA);
    UV162A = prim +0017<$[3]> (_t162B, _t162C);
    vec3 _t162E;
    if camOrtho04E5 {
      _t162E = UV162A;
    } else {
      real _t162F = 0.e0;
      real _t1630 = 0.e0;
      real _t1631 = 0.e0;
      _t162E = [_t162F, _t1630, _t1631];
    }
    rayOrig162D = prim +0017<$[3]> (camEye04D6, _t162E);
    vec3 _t1633;
    if camOrtho04E5 {
      real _t1634 = 0.e0;
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      _t1633 = [_t1634, _t1635, _t1636];
    } else {
      _t1633 = prim /0057<$[3]> (UV162A, camDist15BC);
    }
    rayVec1632 = prim +0017<$[3]> (camN15B7, _t1633);
    real _t1638 = prim |()|00B5<$[3]> (rayVec1632);
    real _t1639 = prim *0034 (_t1638, rayStep04E8);
    alphaFix1637 = prim /0055 (_t1639, refStep04E9);
    vec3 _t163B = prim normalize0137<$[3]> (rayVec1632);
    eyeDir163A = prim unary -008B<$[3]> (_t163B);
    phKa163C = phong04F1[0];
    phKd163D = phong04F1[1];
    phKs163E = phong04F1[2];
    phSp163F = phong04F1[3];
    real _t1641 = 0.e0;
    real _t1642 = 0.e0;
    real _t1643 = 0.e0;
    real _t1644 = 0.e0;
    rgba1640 = [_t1641, _t1642, _t1643, _t1644];
    raw1645 = 0.e0;
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    rgb1646 = [_t1647, _t1648, _t1649];
    transp164A = 0.1e1;
  }
  update
  {
    rayN1629 = prim +0017<$[]> (rayN1629, rayStep04E8);
    bool _t164B = prim >0080 (rayN1629, camFarVsp15C8);
    if _t164B {
      stabilize;
    }
    vec3 _t164C = prim *0036<$[3]> (rayN1629, rayVec1632);
    vec3 pos164D = prim +0017<$[3]> (rayOrig162D, _t164C);
    bool _t164E;
    bool _t16D6;
    Femdata: RefCell _t16D7;
    Femdata: RefCell _t16D8 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04C3);
    _t16D7 = _t16D8;
    real _t16D9 = 0.1e-8;
    bool _t16DA = extractFemItemN((_t16D7, pos164D, _t16D9),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16DA {
      bool _t16DB;
      real _t16DC;
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B1);
      field(3)[3,3] _t16DE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16DD);
      tensor[3,3] _t16DF = prim @00A5<#∞; %3; $[3,3]> (_t16DE, pos164D);
      real[3] _t16E0 = prim evals009F (_t16DF);
      int _t16E1 = 1;
      real _t16E2 = prim $sub01C0<real; %3> (_t16E0, _t16E1);
      real _t16E3 = prim unary -008B<$[]> (_t16E2);
      field(3)[3] _t16E4 = prim ∇00A8<#∞; %3> (F15B1);
      vec3 _t16E5 = prim @00A5<#∞; %3; $[3]> (_t16E4, pos164D);
      real _t16E6 = prim |()|00B5<$[3]> (_t16E5);
      real _t16E7 = prim +0017<$[]> (fBias04EE, _t16E6);
      real _t16E8 = prim /0055 (_t16E3, _t16E7);
      _t16DC = _t16E8;
      bool _t16E9 = prim >0080 (_t16DC, fStrTh04EC);
      if _t16E9 {
        bool _t16EA;
        real _t16EB;
        real _t16EC = 0.1e1;
        _t16EB = _t16EC;
        bool _t16ED = prim >=007E (_t16EB, fMaskTh04ED);
        if _t16ED {
          bool _t16EE = true;
          _t16EA = _t16EE;
        } else {
          _t16EA = false;
        }
        _t16DB = _t16EA;
      } else {
        _t16DB = false;
      }
      _t16D6 = _t16DB;
    } else {
      _t16D6 = false;
    }
    _t164E = _t16D6;
    bool _t164F = prim !00BC (_t164E);
    if _t164F {
      continue;
    }
    vec3 step1650;
    field(3)[3] _t16B9 = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BA = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16B9);
    tensor[3,3] _t16BB = prim @00A5<#∞; %3; $[3,3]> (_t16BA, pos164D);
    vec3[3] E16BC = prim evecs00A0 (_t16BB);
    field(3)[3] _t16BD = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16BD);
    tensor[3,3] _t16BF = prim @00A5<#∞; %3; $[3,3]> (_t16BE, pos164D);
    real[3] L16C0 = prim evals009F (_t16BF);
    int _t16C1 = 2;
    vec3 _t16C2 = prim $sub01C0<vec3; %3> (E16BC, _t16C1);
    int _t16C3 = 2;
    vec3 _t16C4 = prim $sub01C0<vec3; %3> (E16BC, _t16C3);
    tensor[3,3] _t16C5 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16C2, _t16C4);
    int _t16C6 = 2;
    real _t16C7 = prim $sub01C0<real; %3> (L16C0, _t16C6);
    tensor[3,3] _t16C8 = prim /0057<$[3,3]> (_t16C5, _t16C7);
    int _t16C9 = 1;
    vec3 _t16CA = prim $sub01C0<vec3; %3> (E16BC, _t16C9);
    int _t16CB = 1;
    vec3 _t16CC = prim $sub01C0<vec3; %3> (E16BC, _t16CB);
    tensor[3,3] _t16CD = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16CA, _t16CC);
    int _t16CE = 1;
    real _t16CF = prim $sub01C0<real; %3> (L16C0, _t16CE);
    tensor[3,3] _t16D0 = prim /0057<$[3,3]> (_t16CD, _t16CF);
    tensor[3,3] _t16D1 = prim +0017<$[3,3]> (_t16C8, _t16D0);
    tensor[3,3] _t16D2 = prim unary -008B<$[3,3]> (_t16D1);
    field(3)[3] _t16D3 = prim ∇00A8<#∞; %3> (F15B1);
    vec3 _t16D4 = prim @00A5<#∞; %3; $[3]> (_t16D3, pos164D);
    vec3 _t16D5 = prim •00CE<$[3,3]; $[3]; $[3]> (_t16D2, _t16D4);
    step1650 = _t16D5;
    real _t1651 = prim |()|00B5<$[3]> (step1650);
    real aa1652;
    real _t16AF = 0.e0;
    real _t16B0 = 0.1e1;
    real _t16B1 = 0.15e1;
    real _t16B2 = 0.1e1;
    real _t16B3 = prim |()|00B5<$[]> (_t1651);
    real _t16B4 = prim /0055 (_t16B3, thick04EB);
    real _t16B5 = prim -0026<$[]> (_t16B2, _t16B4);
    real _t16B6 = prim *0034 (_t16B1, _t16B5);
    real _t16B7 = prim clamp0094<$[]> (_t16AF, _t16B0, _t16B6);
    real _t16B8 = prim *0034 (maxAlpha04EF, _t16B7);
    aa1652 = _t16B8;
    real _t1653 = 0.e0;
    bool _t1654 = prim ==0084 (aa1652, _t1653);
    if _t1654 {
      continue;
    }
    real _t1655 = 0.1e1;
    real _t1656 = 0.1e1;
    real _t1657 = prim -0026<$[]> (_t1656, aa1652);
    real _t1658 = prim ^0069 (_t1657, alphaFix1637);
    aa1652 = prim -0026<$[]> (_t1655, _t1658);
    vec3 _t1659 = prim normalize0137<$[3]> (step1650);
    vec3 snorm165A = prim unary -008B<$[3]> (_t1659);
    real _t165B = prim •00CE<$[3]; $[3]; $[]> (snorm165A, litwsp15CC);
    int _t165C = 2;
    real dcomp165D = prim ^0068 (_t165B, _t165C);
    real scomp165E = 0.e0;
    real _t165F = 0.e0;
    bool _t1660 = prim !=0088 (phKs163E, _t165F);
    if _t1660 {
      vec3 _t1661 = prim +0017<$[3]> (eyeDir163A, litwsp15CC);
      vec3 _t1662 = prim normalize0137<$[3]> (_t1661);
      real _t1663 = prim •00CE<$[3]; $[3]; $[]> (snorm165A, _t1662);
      real _t1664 = prim |()|00B5<$[]> (_t1663);
      scomp165E = prim ^0069 (_t1664, phSp163F);
    }
    vec3 dcol1665 = prim lerp0098<$[3]> (mcNear04F6, mcFar04FA, camNearVsp15C7, rayN1629, camFarVsp15C8);
    real cmin1666 = cminmax0502[0];
    real cmax1667 = cminmax0502[1];
    real _t1668 = 0.1e1;
    real _t1669 = 0.1e1;
    real _t166A = 0.1e1;
    vec3 mcol166B = [_t1668, _t1669, _t166A];
    bool _t166C = prim !=0088 (cmin1666, cmax1667);
    if _t166C {
      real _t166D = 0.e0;
      real _t166E = 0.1e1;
      vec3 _t166F = prim +0017<$[3]> (pos164D, step1650);
      real _t1670 = prim @00A5<#∞; %3; $[]> (C15B5, _t166F);
      real _t1671 = prim lerp0098<$[]> (_t166D, _t166E, cmin1666, _t1670, cmax1667);
      mcol166B = prim @00A5<#0; %1; $[3]> (CM15B4, _t1671);
    }
    real _t1672 = prim *0034 (transp164A, aa1652);
    real _t1673 = prim *0034 (phKd163D, dcomp165D);
    real _t1674 = prim +0017<$[]> (phKa163C, _t1673);
    vec3 _t1675 = prim modulate0129<%3> (dcol1665, mcol166B);
    vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
    real _t1677 = prim *0034 (phKs163E, scomp165E);
    real _t1678 = 0.1e1;
    real _t1679 = 0.1e1;
    real _t167A = 0.1e1;
    vec3 _t167B = [_t1678, _t1679, _t167A];
    vec3 _t167C = prim *0036<$[3]> (_t1677, _t167B);
    vec3 _t167D = prim +0017<$[3]> (_t1676, _t167C);
    vec3 _t167E = prim *0036<$[3]> (_t1672, _t167D);
    rgb1646 = prim +0017<$[3]> (rgb1646, _t167E);
    real _t167F = 0.1e1;
    real _t1680 = prim -0026<$[]> (_t167F, aa1652);
    transp164A = prim *0034 (transp164A, _t1680);
    bool _t1681 = prim <007A (transp164A, transp004EA);
    if _t1681 {
      transp164A = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1682 = 0.1e1;
    bool _t1683 = prim <007A (transp164A, _t1682);
    if _t1683 {
      real _t1684 = 0.1e1;
      real aa1685 = prim -0026<$[]> (_t1684, transp164A);
      real _t1686 = rgb1646[0];
      real _t1687 = prim /0055 (_t1686, aa1685);
      real _t1688 = rgb1646[1];
      real _t1689 = prim /0055 (_t1688, aa1685);
      real _t168A = rgb1646[2];
      real _t168B = prim /0055 (_t168A, aa1685);
      rgba1640 = [_t1687, _t1689, _t168B, aa1685];
    }
  }
}
grid(2) {
  int _t168C = 0;
  int _t168D = 1;
  int _t168E = prim -0024 (iresV04E7, _t168D);
  int[] _t168F = prim $range01C3 (_t168C, _t168E);
  foreach vi1695 in _t168F {
    int _t1690 = 0;
    int _t1691 = 1;
    int _t1692 = prim -0024 (iresU04E6, _t1691);
    int[] _t1693 = prim $range01C3 (_t1690, _t1692);
    foreach ui1694 in _t1693 {
      new ray (ui1694, vi1695);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04C3;
input FemData:Space 0space04CF_intermedateGlobal04D0;
input FemData:FemFunc 0U04D1_intermedateGlobal04D2;
input int cellChoice04D3;
input image(1)[3] cmap04D5 = image("cmap.nrrd");
input vec3 camEye04D6 = <default>;
input vec3 camAt04DA = <default>;
input vec3 camUp04DE = <default>;
input real camNear04E2 = <default>;
input real camFar04E3 = <default>;
input real camFOV04E4 = <default>;
input bool camOrtho04E5 = <default>;
input int iresU04E6 = <default>;
input int iresV04E7 = <default>;
input real rayStep04E8 = <default>;
input real refStep04E9 = <default>;
input real transp004EA = <default>;
input real thick04EB = <default>;
input real fStrTh04EC = <default>;
input real fMaskTh04ED = <default>;
input real fBias04EE = <default>;
input real maxAlpha04EF = <default>;
input bool light04F0 = <default>;
input vec4 phong04F1 = <default>;
input vec3 mcNear04F6 = <default>;
input vec3 mcFar04FA = <default>;
input vec3 litdir04FE = <default>;
input vec2 cminmax0502 = <default>;
constants {
  real _t04D7 = 0.e0;
  real _t04D8 = -0.2e1;
  real _t04D9 = 0.e0;
  camEye04D6 = [_t04D7, _t04D8, _t04D9];
  real _t04DB = 0.e0;
  real _t04DC = 0.e0;
  real _t04DD = 0.e0;
  camAt04DA = [_t04DB, _t04DC, _t04DD];
  real _t04DF = 0.e0;
  real _t04E0 = 0.e0;
  real _t04E1 = 0.1e1;
  camUp04DE = [_t04DF, _t04E0, _t04E1];
  camNear04E2 = -0.4e1;
  camFar04E3 = 0.4e1;
  camFOV04E4 = 0.1e2;
  camOrtho04E5 = false;
  iresU04E6 = 100;
  iresV04E7 = 100;
  rayStep04E8 = 0.1e-3;
  refStep04E9 = 0.1e-3;
  transp004EA = 0.5e-2;
  thick04EB = 0.1e-1;
  fStrTh04EC = 0.e0;
  fMaskTh04ED = 0.e0;
  fBias04EE = 0.1e0;
  maxAlpha04EF = 0.1e1;
  light04F0 = false;
  real _t04F2 = 0.1e0;
  real _t04F3 = 0.7e0;
  real _t04F4 = 0.2e0;
  real _t04F5 = 0.1e3;
  phong04F1 = [_t04F2, _t04F3, _t04F4, _t04F5];
  real _t04F7 = 0.1e1;
  real _t04F8 = 0.1e1;
  real _t04F9 = 0.1e1;
  mcNear04F6 = [_t04F7, _t04F8, _t04F9];
  real _t04FB = 0.1e1;
  real _t04FC = 0.1e1;
  real _t04FD = 0.1e1;
  mcFar04FA = [_t04FB, _t04FC, _t04FD];
  real _t04FF = 0.e0;
  real _t0500 = -0.1e1;
  real _t0501 = 0.e0;
  litdir04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.e0;
  real _t0504 = 0.e0;
  cminmax0502 = [_t0503, _t0504];
}
global Femdata: MeshCell[] 0cell_block04C4;
global Femdata: Space space04CF;
global Femdata: FemFunc U04D1;
global Femdata: MeshCell c115A9;
global field(3)[] F15B1;
global field#0(1)[3] CM15B4;
global field(3)[] C15B5;
global vec3 camN15B7;
global vec3 camU15B9;
global vec3 camV15BA;
global real camDist15BC;
global real camVmax15C2;
global real camUmax15C6;
global real camNearVsp15C7;
global real camFarVsp15C8;
global vec3 litwsp15CC;
function int[2]#8 nextCell4059B (int faceIdx11FC, int cell11FD, Femdata: Mesh mesh11FE)
{
  int _t11FF = 12;
  int _t1200 = prim *0033 (cell11FD, _t11FF);
  int _t1201 = 2;
  int _t1202 = prim *0033 (faceIdx11FC, _t1201);
  int _t1203 = prim +0015 (_t1200, _t1202);
  int[2] _t1204 = extractFemItemN((mesh11FE, _t1203),CellFaceCell(Mesh),);
  return _t1204;
}
globalInit {
  int _t04C7 = 0;
  int _t04C5 = 1;
  int _t04C9 = extractFemItem(NumCell(Mesh), int, block04C3);
  int _t04C8 = prim -0024 (_t04C9, _t04C5);
  int[] _t04CC = prim $range01C3 (_t04C7, _t04C8);
  Femdata: MeshCell[] _t04CD = {};
  foreach _t04CB in _t04CC {
    Femdata: MeshCell _t04CE = loadFem(MeshCell, block04C3, _t04CB);
    _t04CD = prim @0010<Femdata: MeshCell> (_t04CD, _t04CE);
  }
  0cell_block04C4 = _t04CD;
  space04CF = loadFem(Space, 0space04CF_intermedateGlobal04D0, block04C3);
  U04D1 = loadFem(FemFunc, 0U04D1_intermedateGlobal04D2, space04CF);
  c115A9 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04C4, cellChoice04D3);
  Femdata: FuncCell _t15AA;
  int _t16AD = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AE = loadFem(FuncCell, U04D1, _t16AD);
  _t15AA = _t16AE;
  Femdata: FemFunc _t15AB = extractFem(_t15AA, FemFunc);
  Femdata: FuncCell _t15AC;
  int _t16AB = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AC = loadFem(FuncCell, U04D1, _t16AB);
  _t15AC = _t16AC;
  Femdata: FemFunc _t15AD = extractFem(_t15AC, FemFunc);
  Femdata: Space _t15AE = extractFem(_t15AD, Space);
  Femdata: FuncCell _t15AF;
  int _t16A9 = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AA = loadFem(FuncCell, U04D1, _t16A9);
  _t15AF = _t16AA;
  int _t15B0 = extractFemItem(CellIndex(FuncCell), int, _t15AF);
  F15B1 = femField(_t15AB,_t15B0,field(3)[],refField,);
  kernel _t15B2 = tent;
  IMAGE1D<double[3]> img15B3 = clamp(cmap04D5);
  CM15B4 = prim ⊛0074<#0; %1; $[3]> (_t15B2, img15B3);
  C15B5 = F15B1;
  vec3 _t15B6 = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camN15B7 = prim normalize0137<$[3]> (_t15B6);
  vec3 _t15B8 = prim ×00BE (camN15B7, camUp04DE);
  camU15B9 = prim normalize0137<$[3]> (_t15B8);
  camV15BA = prim ×00BE (camN15B7, camU15B9);
  vec3 _t15BB = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camDist15BC = prim |()|00B5<$[3]> (_t15BB);
  real _t15BD = 0.314159265358979323846264338327950288e1;
  real _t15BE = prim *0034 (camFOV04E4, _t15BD);
  real _t15BF = 0.36e3;
  real _t15C0 = prim /0055 (_t15BE, _t15BF);
  real _t15C1 = prim tan0179 (_t15C0);
  camVmax15C2 = prim *0034 (_t15C1, camDist15BC);
  real _t15C3 = (real)iresU04E6;
  real _t15C4 = prim *0034 (camVmax15C2, _t15C3);
  real _t15C5 = (real)iresV04E7;
  camUmax15C6 = prim /0055 (_t15C4, _t15C5);
  camNearVsp15C7 = prim +0017<$[]> (camNear04E2, camDist15BC);
  camFarVsp15C8 = prim +0017<$[]> (camFar04E3, camDist15BC);
  tensor[3,3] _t15C9 = [camU15B9, camV15BA, camN15B7];
  tensor[3,3] _t15CA = prim transpose0145<%3; %3> (_t15C9);
  vec3 _t15CB = prim normalize0137<$[3]> (litdir04FE);
  litwsp15CC = prim •00CE<$[3,3]; $[3]; $[3]> (_t15CA, _t15CB);
}
strand ray (int ui1619, int vi161A) {
  real rayU161B;
  real rayV1622;
  real rayN1629;
  vec3 UV162A;
  vec3 rayOrig162D;
  vec3 rayVec1632;
  real alphaFix1637;
  vec3 eyeDir163A;
  real phKa163C;
  real phKd163D;
  real phKs163E;
  real phSp163F;
  output vec4 rgba1640;
  output real raw1645;
  vec3 rgb1646;
  real transp164A;
  {
    real _t161C = prim unary -008B<$[]> (camUmax15C6);
    real _t161D = -0.5e0;
    real _t161E = (real)ui1619;
    real _t161F = (real)iresU04E6;
    real _t1620 = 0.5e0;
    real _t1621 = prim -0026<$[]> (_t161F, _t1620);
    rayU161B = prim lerp0098<$[]> (_t161C, camUmax15C6, _t161D, _t161E, _t1621);
    real _t1623 = prim unary -008B<$[]> (camVmax15C2);
    real _t1624 = -0.5e0;
    real _t1625 = (real)vi161A;
    real _t1626 = (real)iresV04E7;
    real _t1627 = 0.5e0;
    real _t1628 = prim -0026<$[]> (_t1626, _t1627);
    rayV1622 = prim lerp0098<$[]> (_t1623, camVmax15C2, _t1624, _t1625, _t1628);
    rayN1629 = camNearVsp15C7;
    vec3 _t162B = prim *0036<$[3]> (rayU161B, camU15B9);
    vec3 _t162C = prim *0036<$[3]> (rayV1622, camV15BA);
    UV162A = prim +0017<$[3]> (_t162B, _t162C);
    vec3 _t162E;
    if camOrtho04E5 {
      _t162E = UV162A;
    } else {
      real _t162F = 0.e0;
      real _t1630 = 0.e0;
      real _t1631 = 0.e0;
      _t162E = [_t162F, _t1630, _t1631];
    }
    rayOrig162D = prim +0017<$[3]> (camEye04D6, _t162E);
    vec3 _t1633;
    if camOrtho04E5 {
      real _t1634 = 0.e0;
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      _t1633 = [_t1634, _t1635, _t1636];
    } else {
      _t1633 = prim /0057<$[3]> (UV162A, camDist15BC);
    }
    rayVec1632 = prim +0017<$[3]> (camN15B7, _t1633);
    real _t1638 = prim |()|00B5<$[3]> (rayVec1632);
    real _t1639 = prim *0034 (_t1638, rayStep04E8);
    alphaFix1637 = prim /0055 (_t1639, refStep04E9);
    vec3 _t163B = prim normalize0137<$[3]> (rayVec1632);
    eyeDir163A = prim unary -008B<$[3]> (_t163B);
    phKa163C = phong04F1[0];
    phKd163D = phong04F1[1];
    phKs163E = phong04F1[2];
    phSp163F = phong04F1[3];
    real _t1641 = 0.e0;
    real _t1642 = 0.e0;
    real _t1643 = 0.e0;
    real _t1644 = 0.e0;
    rgba1640 = [_t1641, _t1642, _t1643, _t1644];
    raw1645 = 0.e0;
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    rgb1646 = [_t1647, _t1648, _t1649];
    transp164A = 0.1e1;
  }
  update
  {
    rayN1629 = prim +0017<$[]> (rayN1629, rayStep04E8);
    bool _t164B = prim >0080 (rayN1629, camFarVsp15C8);
    if _t164B {
      stabilize;
    }
    vec3 _t164C = prim *0036<$[3]> (rayN1629, rayVec1632);
    vec3 pos164D = prim +0017<$[3]> (rayOrig162D, _t164C);
    bool _t164E;
    bool _t16D6;
    Femdata: RefCell _t16D7;
    Femdata: RefCell _t16D8 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04C3);
    _t16D7 = _t16D8;
    real _t16D9 = 0.1e-8;
    bool _t16DA = extractFemItemN((_t16D7, pos164D, _t16D9),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16DA {
      bool _t16DB;
      real _t16DC;
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B1);
      field(3)[3,3] _t16DE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16DD);
      tensor[3,3] _t16DF = prim @00A5<#∞; %3; $[3,3]> (_t16DE, pos164D);
      real[3] _t16E0 = prim evals009F (_t16DF);
      int _t16E1 = 1;
      real _t16E2 = prim $sub01C0<real; %3> (_t16E0, _t16E1);
      real _t16E3 = prim unary -008B<$[]> (_t16E2);
      field(3)[3] _t16E4 = prim ∇00A8<#∞; %3> (F15B1);
      vec3 _t16E5 = prim @00A5<#∞; %3; $[3]> (_t16E4, pos164D);
      real _t16E6 = prim |()|00B5<$[3]> (_t16E5);
      real _t16E7 = prim +0017<$[]> (fBias04EE, _t16E6);
      real _t16E8 = prim /0055 (_t16E3, _t16E7);
      _t16DC = _t16E8;
      bool _t16E9 = prim >0080 (_t16DC, fStrTh04EC);
      if _t16E9 {
        bool _t16EA;
        real _t16EB;
        real _t16EC = 0.1e1;
        _t16EB = _t16EC;
        bool _t16ED = prim >=007E (_t16EB, fMaskTh04ED);
        if _t16ED {
          bool _t16EE = true;
          _t16EA = _t16EE;
        } else {
          _t16EA = false;
        }
        _t16DB = _t16EA;
      } else {
        _t16DB = false;
      }
      _t16D6 = _t16DB;
    } else {
      _t16D6 = false;
    }
    _t164E = _t16D6;
    bool _t164F = prim !00BC (_t164E);
    if _t164F {
      continue;
    }
    vec3 step1650;
    field(3)[3] _t16B9 = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BA = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16B9);
    tensor[3,3] _t16BB = prim @00A5<#∞; %3; $[3,3]> (_t16BA, pos164D);
    vec3[3] E16BC = prim evecs00A0 (_t16BB);
    field(3)[3] _t16BD = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16BD);
    tensor[3,3] _t16BF = prim @00A5<#∞; %3; $[3,3]> (_t16BE, pos164D);
    real[3] L16C0 = prim evals009F (_t16BF);
    int _t16C1 = 2;
    vec3 _t16C2 = prim $sub01C0<vec3; %3> (E16BC, _t16C1);
    int _t16C3 = 2;
    vec3 _t16C4 = prim $sub01C0<vec3; %3> (E16BC, _t16C3);
    tensor[3,3] _t16C5 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16C2, _t16C4);
    int _t16C6 = 2;
    real _t16C7 = prim $sub01C0<real; %3> (L16C0, _t16C6);
    tensor[3,3] _t16C8 = prim /0057<$[3,3]> (_t16C5, _t16C7);
    int _t16C9 = 1;
    vec3 _t16CA = prim $sub01C0<vec3; %3> (E16BC, _t16C9);
    int _t16CB = 1;
    vec3 _t16CC = prim $sub01C0<vec3; %3> (E16BC, _t16CB);
    tensor[3,3] _t16CD = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16CA, _t16CC);
    int _t16CE = 1;
    real _t16CF = prim $sub01C0<real; %3> (L16C0, _t16CE);
    tensor[3,3] _t16D0 = prim /0057<$[3,3]> (_t16CD, _t16CF);
    tensor[3,3] _t16D1 = prim +0017<$[3,3]> (_t16C8, _t16D0);
    tensor[3,3] _t16D2 = prim unary -008B<$[3,3]> (_t16D1);
    field(3)[3] _t16D3 = prim ∇00A8<#∞; %3> (F15B1);
    vec3 _t16D4 = prim @00A5<#∞; %3; $[3]> (_t16D3, pos164D);
    vec3 _t16D5 = prim •00CE<$[3,3]; $[3]; $[3]> (_t16D2, _t16D4);
    step1650 = _t16D5;
    real _t1651 = prim |()|00B5<$[3]> (step1650);
    real aa1652;
    real _t16AF = 0.e0;
    real _t16B0 = 0.1e1;
    real _t16B1 = 0.15e1;
    real _t16B2 = 0.1e1;
    real _t16B3 = prim |()|00B5<$[]> (_t1651);
    real _t16B4 = prim /0055 (_t16B3, thick04EB);
    real _t16B5 = prim -0026<$[]> (_t16B2, _t16B4);
    real _t16B6 = prim *0034 (_t16B1, _t16B5);
    real _t16B7 = prim clamp0094<$[]> (_t16AF, _t16B0, _t16B6);
    real _t16B8 = prim *0034 (maxAlpha04EF, _t16B7);
    aa1652 = _t16B8;
    real _t1653 = 0.e0;
    bool _t1654 = prim ==0084 (aa1652, _t1653);
    if _t1654 {
      continue;
    }
    real _t1655 = 0.1e1;
    real _t1656 = 0.1e1;
    real _t1657 = prim -0026<$[]> (_t1656, aa1652);
    real _t1658 = prim ^0069 (_t1657, alphaFix1637);
    aa1652 = prim -0026<$[]> (_t1655, _t1658);
    vec3 _t1659 = prim normalize0137<$[3]> (step1650);
    vec3 snorm165A = prim unary -008B<$[3]> (_t1659);
    real _t165B = prim •00CE<$[3]; $[3]; $[]> (snorm165A, litwsp15CC);
    int _t165C = 2;
    real dcomp165D = prim ^0068 (_t165B, _t165C);
    real scomp165E = 0.e0;
    real _t165F = 0.e0;
    bool _t1660 = prim !=0088 (phKs163E, _t165F);
    if _t1660 {
      vec3 _t1661 = prim +0017<$[3]> (eyeDir163A, litwsp15CC);
      vec3 _t1662 = prim normalize0137<$[3]> (_t1661);
      real _t1663 = prim •00CE<$[3]; $[3]; $[]> (snorm165A, _t1662);
      real _t1664 = prim |()|00B5<$[]> (_t1663);
      scomp165E = prim ^0069 (_t1664, phSp163F);
    }
    vec3 dcol1665 = prim lerp0098<$[3]> (mcNear04F6, mcFar04FA, camNearVsp15C7, rayN1629, camFarVsp15C8);
    real cmin1666 = cminmax0502[0];
    real cmax1667 = cminmax0502[1];
    real _t1668 = 0.1e1;
    real _t1669 = 0.1e1;
    real _t166A = 0.1e1;
    vec3 mcol166B = [_t1668, _t1669, _t166A];
    bool _t166C = prim !=0088 (cmin1666, cmax1667);
    if _t166C {
      real _t166D = 0.e0;
      real _t166E = 0.1e1;
      vec3 _t166F = prim +0017<$[3]> (pos164D, step1650);
      real _t1670 = prim @00A5<#∞; %3; $[]> (C15B5, _t166F);
      real _t1671 = prim lerp0098<$[]> (_t166D, _t166E, cmin1666, _t1670, cmax1667);
      mcol166B = prim @00A5<#0; %1; $[3]> (CM15B4, _t1671);
    }
    real _t1672 = prim *0034 (transp164A, aa1652);
    real _t1673 = prim *0034 (phKd163D, dcomp165D);
    real _t1674 = prim +0017<$[]> (phKa163C, _t1673);
    vec3 _t1675 = prim modulate0129<%3> (dcol1665, mcol166B);
    vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
    real _t1677 = prim *0034 (phKs163E, scomp165E);
    real _t1678 = 0.1e1;
    real _t1679 = 0.1e1;
    real _t167A = 0.1e1;
    vec3 _t167B = [_t1678, _t1679, _t167A];
    vec3 _t167C = prim *0036<$[3]> (_t1677, _t167B);
    vec3 _t167D = prim +0017<$[3]> (_t1676, _t167C);
    vec3 _t167E = prim *0036<$[3]> (_t1672, _t167D);
    rgb1646 = prim +0017<$[3]> (rgb1646, _t167E);
    real _t167F = 0.1e1;
    real _t1680 = prim -0026<$[]> (_t167F, aa1652);
    transp164A = prim *0034 (transp164A, _t1680);
    bool _t1681 = prim <007A (transp164A, transp004EA);
    if _t1681 {
      transp164A = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1682 = 0.1e1;
    bool _t1683 = prim <007A (transp164A, _t1682);
    if _t1683 {
      real _t1684 = 0.1e1;
      real aa1685 = prim -0026<$[]> (_t1684, transp164A);
      real _t1686 = rgb1646[0];
      real _t1687 = prim /0055 (_t1686, aa1685);
      real _t1688 = rgb1646[1];
      real _t1689 = prim /0055 (_t1688, aa1685);
      real _t168A = rgb1646[2];
      real _t168B = prim /0055 (_t168A, aa1685);
      rgba1640 = [_t1687, _t1689, _t168B, aa1685];
    }
  }
}
grid(2) {
  int _t168C = 0;
  int _t168D = 1;
  int _t168E = prim -0024 (iresV04E7, _t168D);
  int[] _t168F = prim $range01C3 (_t168C, _t168E);
  foreach vi1695 in _t168F {
    int _t1690 = 0;
    int _t1691 = 1;
    int _t1692 = prim -0024 (iresU04E6, _t1691);
    int[] _t1693 = prim $range01C3 (_t1690, _t1692);
    foreach ui1694 in _t1693 {
      new ray (ui1694, vi1695);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04C3;
input FemData:Space 0space04CF_intermedateGlobal04D0;
input FemData:FemFunc 0U04D1_intermedateGlobal04D2;
input int cellChoice04D3;
input image(1)[3] cmap04D5 = image("cmap.nrrd");
input vec3 camEye04D6 = <default>;
input vec3 camAt04DA = <default>;
input vec3 camUp04DE = <default>;
input real camNear04E2 = <default>;
input real camFar04E3 = <default>;
input real camFOV04E4 = <default>;
input bool camOrtho04E5 = <default>;
input int iresU04E6 = <default>;
input int iresV04E7 = <default>;
input real rayStep04E8 = <default>;
input real refStep04E9 = <default>;
input real transp004EA = <default>;
input real thick04EB = <default>;
input real fStrTh04EC = <default>;
input real fMaskTh04ED = <default>;
input real fBias04EE = <default>;
input real maxAlpha04EF = <default>;
input bool light04F0 = <default>;
input vec4 phong04F1 = <default>;
input vec3 mcNear04F6 = <default>;
input vec3 mcFar04FA = <default>;
input vec3 litdir04FE = <default>;
input vec2 cminmax0502 = <default>;
constants {
  real _t04D7 = 0.e0;
  real _t04D8 = -0.2e1;
  real _t04D9 = 0.e0;
  camEye04D6 = [_t04D7, _t04D8, _t04D9];
  real _t04DB = 0.e0;
  real _t04DC = 0.e0;
  real _t04DD = 0.e0;
  camAt04DA = [_t04DB, _t04DC, _t04DD];
  real _t04DF = 0.e0;
  real _t04E0 = 0.e0;
  real _t04E1 = 0.1e1;
  camUp04DE = [_t04DF, _t04E0, _t04E1];
  camNear04E2 = -0.4e1;
  camFar04E3 = 0.4e1;
  camFOV04E4 = 0.1e2;
  camOrtho04E5 = false;
  iresU04E6 = 100;
  iresV04E7 = 100;
  rayStep04E8 = 0.1e-3;
  refStep04E9 = 0.1e-3;
  transp004EA = 0.5e-2;
  thick04EB = 0.1e-1;
  fStrTh04EC = 0.e0;
  fMaskTh04ED = 0.e0;
  fBias04EE = 0.1e0;
  maxAlpha04EF = 0.1e1;
  light04F0 = false;
  real _t04F2 = 0.1e0;
  real _t04F3 = 0.7e0;
  real _t04F4 = 0.2e0;
  real _t04F5 = 0.1e3;
  phong04F1 = [_t04F2, _t04F3, _t04F4, _t04F5];
  real _t04F7 = 0.1e1;
  real _t04F8 = 0.1e1;
  real _t04F9 = 0.1e1;
  mcNear04F6 = [_t04F7, _t04F8, _t04F9];
  real _t04FB = 0.1e1;
  real _t04FC = 0.1e1;
  real _t04FD = 0.1e1;
  mcFar04FA = [_t04FB, _t04FC, _t04FD];
  real _t04FF = 0.e0;
  real _t0500 = -0.1e1;
  real _t0501 = 0.e0;
  litdir04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.e0;
  real _t0504 = 0.e0;
  cminmax0502 = [_t0503, _t0504];
}
global Femdata: MeshCell[] 0cell_block04C4;
global Femdata: Space space04CF;
global Femdata: FemFunc U04D1;
global Femdata: MeshCell c115A9;
global field(3)[] F15B1;
global field#0(1)[3] CM15B4;
global field(3)[] C15B5;
global vec3 camN15B7;
global vec3 camU15B9;
global vec3 camV15BA;
global real camDist15BC;
global real camVmax15C2;
global real camUmax15C6;
global real camNearVsp15C7;
global real camFarVsp15C8;
global vec3 litwsp15CC;
function int[2]#8 nextCell4059B (int faceIdx11FC, int cell11FD, Femdata: Mesh mesh11FE)
{
  int _t11FF = 12;
  int _t1200 = prim *0033 (cell11FD, _t11FF);
  int _t1201 = 2;
  int _t1202 = prim *0033 (faceIdx11FC, _t1201);
  int _t1203 = prim +0015 (_t1200, _t1202);
  int[2] _t1204 = extractFemItemN((mesh11FE, _t1203),CellFaceCell(Mesh),);
  return _t1204;
}
globalInit {
  int _t04C7 = 0;
  int _t04C5 = 1;
  int _t04C9 = extractFemItem(NumCell(Mesh), int, block04C3);
  int _t04C8 = prim -0024 (_t04C9, _t04C5);
  int[] _t04CC = prim $range01C3 (_t04C7, _t04C8);
  Femdata: MeshCell[] _t04CD = {};
  foreach _t04CB in _t04CC {
    Femdata: MeshCell _t04CE = loadFem(MeshCell, block04C3, _t04CB);
    _t04CD = prim @0010<Femdata: MeshCell> (_t04CD, _t04CE);
  }
  0cell_block04C4 = _t04CD;
  space04CF = loadFem(Space, 0space04CF_intermedateGlobal04D0, block04C3);
  U04D1 = loadFem(FemFunc, 0U04D1_intermedateGlobal04D2, space04CF);
  c115A9 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04C4, cellChoice04D3);
  Femdata: FuncCell _t15AA;
  int _t16AD = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AE = loadFem(FuncCell, U04D1, _t16AD);
  _t15AA = _t16AE;
  Femdata: FemFunc _t15AB = extractFem(_t15AA, FemFunc);
  Femdata: FuncCell _t15AC;
  int _t16AB = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AC = loadFem(FuncCell, U04D1, _t16AB);
  _t15AC = _t16AC;
  Femdata: FemFunc _t15AD = extractFem(_t15AC, FemFunc);
  Femdata: Space _t15AE = extractFem(_t15AD, Space);
  Femdata: FuncCell _t15AF;
  int _t16A9 = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AA = loadFem(FuncCell, U04D1, _t16A9);
  _t15AF = _t16AA;
  int _t15B0 = extractFemItem(CellIndex(FuncCell), int, _t15AF);
  F15B1 = femField(_t15AB,_t15B0,field(3)[],refField,);
  kernel _t15B2 = tent;
  IMAGE1D<double[3]> img15B3 = clamp(cmap04D5);
  CM15B4 = prim ⊛0074<#0; %1; $[3]> (_t15B2, img15B3);
  C15B5 = F15B1;
  vec3 _t15B6 = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camN15B7 = prim normalize0137<$[3]> (_t15B6);
  vec3 _t15B8 = prim ×00BE (camN15B7, camUp04DE);
  camU15B9 = prim normalize0137<$[3]> (_t15B8);
  camV15BA = prim ×00BE (camN15B7, camU15B9);
  vec3 _t15BB = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camDist15BC = prim |()|00B5<$[3]> (_t15BB);
  real _t15BD = 0.314159265358979323846264338327950288e1;
  real _t15BE = prim *0034 (camFOV04E4, _t15BD);
  real _t15BF = 0.36e3;
  real _t15C0 = prim /0055 (_t15BE, _t15BF);
  real _t15C1 = prim tan0179 (_t15C0);
  camVmax15C2 = prim *0034 (_t15C1, camDist15BC);
  real _t15C3 = (real)iresU04E6;
  real _t15C4 = prim *0034 (camVmax15C2, _t15C3);
  real _t15C5 = (real)iresV04E7;
  camUmax15C6 = prim /0055 (_t15C4, _t15C5);
  camNearVsp15C7 = prim +0017<$[]> (camNear04E2, camDist15BC);
  camFarVsp15C8 = prim +0017<$[]> (camFar04E3, camDist15BC);
  tensor[3,3] _t15C9 = [camU15B9, camV15BA, camN15B7];
  tensor[3,3] _t15CA = prim transpose0145<%3; %3> (_t15C9);
  vec3 _t15CB = prim normalize0137<$[3]> (litdir04FE);
  litwsp15CC = prim •00CE<$[3,3]; $[3]; $[3]> (_t15CA, _t15CB);
}
strand ray (int ui1619, int vi161A) {
  real rayU161B;
  real rayV1622;
  real rayN1629;
  vec3 UV162A;
  vec3 rayOrig162D;
  vec3 rayVec1632;
  real alphaFix1637;
  vec3 eyeDir163A;
  real phKa163C;
  real phKd163D;
  real phKs163E;
  real phSp163F;
  output vec4 rgba1640;
  output real raw1645;
  vec3 rgb1646;
  real transp164A;
  {
    real _t161C = prim unary -008B<$[]> (camUmax15C6);
    real _t161D = -0.5e0;
    real _t161E = (real)ui1619;
    real _t161F = (real)iresU04E6;
    real _t1620 = 0.5e0;
    real _t1621 = prim -0026<$[]> (_t161F, _t1620);
    rayU161B = prim lerp0098<$[]> (_t161C, camUmax15C6, _t161D, _t161E, _t1621);
    real _t1623 = prim unary -008B<$[]> (camVmax15C2);
    real _t1624 = -0.5e0;
    real _t1625 = (real)vi161A;
    real _t1626 = (real)iresV04E7;
    real _t1627 = 0.5e0;
    real _t1628 = prim -0026<$[]> (_t1626, _t1627);
    rayV1622 = prim lerp0098<$[]> (_t1623, camVmax15C2, _t1624, _t1625, _t1628);
    rayN1629 = camNearVsp15C7;
    vec3 _t162B = prim *0036<$[3]> (rayU161B, camU15B9);
    vec3 _t162C = prim *0036<$[3]> (rayV1622, camV15BA);
    UV162A = prim +0017<$[3]> (_t162B, _t162C);
    vec3 _t162E;
    if camOrtho04E5 {
      _t162E = UV162A;
    } else {
      real _t162F = 0.e0;
      real _t1630 = 0.e0;
      real _t1631 = 0.e0;
      _t162E = [_t162F, _t1630, _t1631];
    }
    rayOrig162D = prim +0017<$[3]> (camEye04D6, _t162E);
    vec3 _t1633;
    if camOrtho04E5 {
      real _t1634 = 0.e0;
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      _t1633 = [_t1634, _t1635, _t1636];
    } else {
      _t1633 = prim /0057<$[3]> (UV162A, camDist15BC);
    }
    rayVec1632 = prim +0017<$[3]> (camN15B7, _t1633);
    real _t1638 = prim |()|00B5<$[3]> (rayVec1632);
    real _t1639 = prim *0034 (_t1638, rayStep04E8);
    alphaFix1637 = prim /0055 (_t1639, refStep04E9);
    vec3 _t163B = prim normalize0137<$[3]> (rayVec1632);
    eyeDir163A = prim unary -008B<$[3]> (_t163B);
    phKa163C = phong04F1[0];
    phKd163D = phong04F1[1];
    phKs163E = phong04F1[2];
    phSp163F = phong04F1[3];
    real _t1641 = 0.e0;
    real _t1642 = 0.e0;
    real _t1643 = 0.e0;
    real _t1644 = 0.e0;
    rgba1640 = [_t1641, _t1642, _t1643, _t1644];
    raw1645 = 0.e0;
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    rgb1646 = [_t1647, _t1648, _t1649];
    transp164A = 0.1e1;
  }
  update
  {
    rayN1629 = prim +0017<$[]> (rayN1629, rayStep04E8);
    bool _t164B = prim >0080 (rayN1629, camFarVsp15C8);
    if _t164B {
      stabilize;
    }
    vec3 _t164C = prim *0036<$[3]> (rayN1629, rayVec1632);
    vec3 pos164D = prim +0017<$[3]> (rayOrig162D, _t164C);
    bool _t164E;
    bool _t16D6;
    Femdata: RefCell _t16D7;
    Femdata: RefCell _t16D8 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04C3);
    _t16D7 = _t16D8;
    real _t16D9 = 0.1e-8;
    bool _t16DA = extractFemItemN((_t16D7, pos164D, _t16D9),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16DA {
      bool _t16DB;
      real _t16DC;
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B1);
      field(3)[3,3] _t16DE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16DD);
      tensor[3,3] _t16DF = prim @00A5<#∞; %3; $[3,3]> (_t16DE, pos164D);
      real[3] _t16E0 = prim evals009F (_t16DF);
      int _t16E1 = 1;
      real _t16E2 = prim $sub01C0<real; %3> (_t16E0, _t16E1);
      real _t16E3 = prim unary -008B<$[]> (_t16E2);
      field(3)[3] _t16E4 = prim ∇00A8<#∞; %3> (F15B1);
      vec3 _t16E5 = prim @00A5<#∞; %3; $[3]> (_t16E4, pos164D);
      real _t16E6 = prim |()|00B5<$[3]> (_t16E5);
      real _t16E7 = prim +0017<$[]> (fBias04EE, _t16E6);
      real _t16E8 = prim /0055 (_t16E3, _t16E7);
      _t16DC = _t16E8;
      bool _t16E9 = prim >0080 (_t16DC, fStrTh04EC);
      if _t16E9 {
        bool _t16EA;
        real _t16EB;
        real _t16EC = 0.1e1;
        _t16EB = _t16EC;
        bool _t16ED = prim >=007E (_t16EB, fMaskTh04ED);
        if _t16ED {
          bool _t16EE = true;
          _t16EA = _t16EE;
        } else {
          _t16EA = false;
        }
        _t16DB = _t16EA;
      } else {
        _t16DB = false;
      }
      _t16D6 = _t16DB;
    } else {
      _t16D6 = false;
    }
    _t164E = _t16D6;
    bool _t164F = prim !00BC (_t164E);
    if _t164F {
      continue;
    }
    vec3 step1650;
    field(3)[3] _t16B9 = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BA = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16B9);
    tensor[3,3] _t16BB = prim @00A5<#∞; %3; $[3,3]> (_t16BA, pos164D);
    vec3[3] E16BC = prim evecs00A0 (_t16BB);
    field(3)[3] _t16BD = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16BD);
    tensor[3,3] _t16BF = prim @00A5<#∞; %3; $[3,3]> (_t16BE, pos164D);
    real[3] L16C0 = prim evals009F (_t16BF);
    int _t16C1 = 2;
    vec3 _t16C2 = prim $sub01C0<vec3; %3> (E16BC, _t16C1);
    int _t16C3 = 2;
    vec3 _t16C4 = prim $sub01C0<vec3; %3> (E16BC, _t16C3);
    tensor[3,3] _t16C5 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16C2, _t16C4);
    int _t16C6 = 2;
    real _t16C7 = prim $sub01C0<real; %3> (L16C0, _t16C6);
    tensor[3,3] _t16C8 = prim /0057<$[3,3]> (_t16C5, _t16C7);
    int _t16C9 = 1;
    vec3 _t16CA = prim $sub01C0<vec3; %3> (E16BC, _t16C9);
    int _t16CB = 1;
    vec3 _t16CC = prim $sub01C0<vec3; %3> (E16BC, _t16CB);
    tensor[3,3] _t16CD = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16CA, _t16CC);
    int _t16CE = 1;
    real _t16CF = prim $sub01C0<real; %3> (L16C0, _t16CE);
    tensor[3,3] _t16D0 = prim /0057<$[3,3]> (_t16CD, _t16CF);
    tensor[3,3] _t16D1 = prim +0017<$[3,3]> (_t16C8, _t16D0);
    tensor[3,3] _t16D2 = prim unary -008B<$[3,3]> (_t16D1);
    field(3)[3] _t16D3 = prim ∇00A8<#∞; %3> (F15B1);
    vec3 _t16D4 = prim @00A5<#∞; %3; $[3]> (_t16D3, pos164D);
    vec3 _t16D5 = prim •00CE<$[3,3]; $[3]; $[3]> (_t16D2, _t16D4);
    step1650 = _t16D5;
    real _t1651 = prim |()|00B5<$[3]> (step1650);
    real aa1652;
    real _t16AF = 0.e0;
    real _t16B0 = 0.1e1;
    real _t16B1 = 0.15e1;
    real _t16B2 = 0.1e1;
    real _t16B3 = prim |()|00B5<$[]> (_t1651);
    real _t16B4 = prim /0055 (_t16B3, thick04EB);
    real _t16B5 = prim -0026<$[]> (_t16B2, _t16B4);
    real _t16B6 = prim *0034 (_t16B1, _t16B5);
    real _t16B7 = prim clamp0094<$[]> (_t16AF, _t16B0, _t16B6);
    real _t16B8 = prim *0034 (maxAlpha04EF, _t16B7);
    aa1652 = _t16B8;
    real _t1653 = 0.e0;
    bool _t1654 = prim ==0084 (aa1652, _t1653);
    if _t1654 {
      continue;
    }
    real _t1655 = 0.1e1;
    real _t1656 = 0.1e1;
    real _t1657 = prim -0026<$[]> (_t1656, aa1652);
    real _t1658 = prim ^0069 (_t1657, alphaFix1637);
    aa1652 = prim -0026<$[]> (_t1655, _t1658);
    vec3 _t1659 = prim normalize0137<$[3]> (step1650);
    vec3 snorm165A = prim unary -008B<$[3]> (_t1659);
    real _t165B = prim •00CE<$[3]; $[3]; $[]> (snorm165A, litwsp15CC);
    int _t165C = 2;
    real dcomp165D = prim ^0068 (_t165B, _t165C);
    real scomp165E = 0.e0;
    real _t165F = 0.e0;
    bool _t1660 = prim !=0088 (phKs163E, _t165F);
    if _t1660 {
      vec3 _t1661 = prim +0017<$[3]> (eyeDir163A, litwsp15CC);
      vec3 _t1662 = prim normalize0137<$[3]> (_t1661);
      real _t1663 = prim •00CE<$[3]; $[3]; $[]> (snorm165A, _t1662);
      real _t1664 = prim |()|00B5<$[]> (_t1663);
      scomp165E = prim ^0069 (_t1664, phSp163F);
    }
    vec3 dcol1665 = prim lerp0098<$[3]> (mcNear04F6, mcFar04FA, camNearVsp15C7, rayN1629, camFarVsp15C8);
    real cmin1666 = cminmax0502[0];
    real cmax1667 = cminmax0502[1];
    real _t1668 = 0.1e1;
    real _t1669 = 0.1e1;
    real _t166A = 0.1e1;
    vec3 mcol166B = [_t1668, _t1669, _t166A];
    bool _t166C = prim !=0088 (cmin1666, cmax1667);
    if _t166C {
      real _t166D = 0.e0;
      real _t166E = 0.1e1;
      vec3 _t166F = prim +0017<$[3]> (pos164D, step1650);
      real _t1670 = prim @00A5<#∞; %3; $[]> (C15B5, _t166F);
      real _t1671 = prim lerp0098<$[]> (_t166D, _t166E, cmin1666, _t1670, cmax1667);
      mcol166B = prim @00A5<#0; %1; $[3]> (CM15B4, _t1671);
    }
    real _t1672 = prim *0034 (transp164A, aa1652);
    real _t1673 = prim *0034 (phKd163D, dcomp165D);
    real _t1674 = prim +0017<$[]> (phKa163C, _t1673);
    vec3 _t1675 = prim modulate0129<%3> (dcol1665, mcol166B);
    vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
    real _t1677 = prim *0034 (phKs163E, scomp165E);
    real _t1678 = 0.1e1;
    real _t1679 = 0.1e1;
    real _t167A = 0.1e1;
    vec3 _t167B = [_t1678, _t1679, _t167A];
    vec3 _t167C = prim *0036<$[3]> (_t1677, _t167B);
    vec3 _t167D = prim +0017<$[3]> (_t1676, _t167C);
    vec3 _t167E = prim *0036<$[3]> (_t1672, _t167D);
    rgb1646 = prim +0017<$[3]> (rgb1646, _t167E);
    real _t167F = 0.1e1;
    real _t1680 = prim -0026<$[]> (_t167F, aa1652);
    transp164A = prim *0034 (transp164A, _t1680);
    bool _t1681 = prim <007A (transp164A, transp004EA);
    if _t1681 {
      transp164A = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1682 = 0.1e1;
    bool _t1683 = prim <007A (transp164A, _t1682);
    if _t1683 {
      real _t1684 = 0.1e1;
      real aa1685 = prim -0026<$[]> (_t1684, transp164A);
      real _t1686 = rgb1646[0];
      real _t1687 = prim /0055 (_t1686, aa1685);
      real _t1688 = rgb1646[1];
      real _t1689 = prim /0055 (_t1688, aa1685);
      real _t168A = rgb1646[2];
      real _t168B = prim /0055 (_t168A, aa1685);
      rgba1640 = [_t1687, _t1689, _t168B, aa1685];
    }
  }
}
grid(2) {
  int _t168C = 0;
  int _t168D = 1;
  int _t168E = prim -0024 (iresV04E7, _t168D);
  int[] _t168F = prim $range01C3 (_t168C, _t168E);
  foreach vi1695 in _t168F {
    int _t1690 = 0;
    int _t1691 = 1;
    int _t1692 = prim -0024 (iresU04E6, _t1691);
    int[] _t1693 = prim $range01C3 (_t1690, _t1692);
    foreach ui1694 in _t1693 {
      new ray (ui1694, vi1695);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04C3;
input FemData:Space 0space04CF_intermedateGlobal04D0;
input FemData:FemFunc 0U04D1_intermedateGlobal04D2;
input int cellChoice04D3;
input image(1)[3] cmap04D5 = image("cmap.nrrd");
input vec3 camEye04D6 = <default>;
input vec3 camAt04DA = <default>;
input vec3 camUp04DE = <default>;
input real camNear04E2 = <default>;
input real camFar04E3 = <default>;
input real camFOV04E4 = <default>;
input bool camOrtho04E5 = <default>;
input int iresU04E6 = <default>;
input int iresV04E7 = <default>;
input real rayStep04E8 = <default>;
input real refStep04E9 = <default>;
input real transp004EA = <default>;
input real thick04EB = <default>;
input real fStrTh04EC = <default>;
input real fMaskTh04ED = <default>;
input real fBias04EE = <default>;
input real maxAlpha04EF = <default>;
input bool light04F0 = <default>;
input vec4 phong04F1 = <default>;
input vec3 mcNear04F6 = <default>;
input vec3 mcFar04FA = <default>;
input vec3 litdir04FE = <default>;
input vec2 cminmax0502 = <default>;
constants {
  real _t04D7 = 0.e0;
  real _t04D8 = -0.2e1;
  real _t04D9 = 0.e0;
  camEye04D6 = [_t04D7, _t04D8, _t04D9];
  real _t04DB = 0.e0;
  real _t04DC = 0.e0;
  real _t04DD = 0.e0;
  camAt04DA = [_t04DB, _t04DC, _t04DD];
  real _t04DF = 0.e0;
  real _t04E0 = 0.e0;
  real _t04E1 = 0.1e1;
  camUp04DE = [_t04DF, _t04E0, _t04E1];
  camNear04E2 = -0.4e1;
  camFar04E3 = 0.4e1;
  camFOV04E4 = 0.1e2;
  camOrtho04E5 = false;
  iresU04E6 = 100;
  iresV04E7 = 100;
  rayStep04E8 = 0.1e-3;
  refStep04E9 = 0.1e-3;
  transp004EA = 0.5e-2;
  thick04EB = 0.1e-1;
  fStrTh04EC = 0.e0;
  fMaskTh04ED = 0.e0;
  fBias04EE = 0.1e0;
  maxAlpha04EF = 0.1e1;
  light04F0 = false;
  real _t04F2 = 0.1e0;
  real _t04F3 = 0.7e0;
  real _t04F4 = 0.2e0;
  real _t04F5 = 0.1e3;
  phong04F1 = [_t04F2, _t04F3, _t04F4, _t04F5];
  real _t04F7 = 0.1e1;
  real _t04F8 = 0.1e1;
  real _t04F9 = 0.1e1;
  mcNear04F6 = [_t04F7, _t04F8, _t04F9];
  real _t04FB = 0.1e1;
  real _t04FC = 0.1e1;
  real _t04FD = 0.1e1;
  mcFar04FA = [_t04FB, _t04FC, _t04FD];
  real _t04FF = 0.e0;
  real _t0500 = -0.1e1;
  real _t0501 = 0.e0;
  litdir04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.e0;
  real _t0504 = 0.e0;
  cminmax0502 = [_t0503, _t0504];
}
global Femdata: MeshCell[] 0cell_block04C4;
global Femdata: Space space04CF;
global Femdata: FemFunc U04D1;
global Femdata: MeshCell c115A9;
global field(3)[] F15B1;
global field#0(1)[3] CM15B4;
global field(3)[] C15B5;
global vec3 camN15B7;
global vec3 camU15B9;
global vec3 camV15BA;
global real camDist15BC;
global real camVmax15C2;
global real camUmax15C6;
global real camNearVsp15C7;
global real camFarVsp15C8;
global vec3 litwsp15CC;
function int[2]#8 nextCell4059B (int faceIdx11FC, int cell11FD, Femdata: Mesh mesh11FE)
{
  int _t11FF = 12;
  int _t1200 = prim *0033 (cell11FD, _t11FF);
  int _t1201 = 2;
  int _t1202 = prim *0033 (faceIdx11FC, _t1201);
  int _t1203 = prim +0015 (_t1200, _t1202);
  int[2] _t1204 = extractFemItemN((mesh11FE, _t1203),CellFaceCell(Mesh),);
  return _t1204;
}
globalInit {
  int _t04C7 = 0;
  int _t04C5 = 1;
  int _t04C9 = extractFemItem(NumCell(Mesh), int, block04C3);
  int _t04C8 = prim -0024 (_t04C9, _t04C5);
  int[] _t04CC = prim $range01C3 (_t04C7, _t04C8);
  Femdata: MeshCell[] _t04CD = {};
  foreach _t04CB in _t04CC {
    Femdata: MeshCell _t04CE = loadFem(MeshCell, block04C3, _t04CB);
    _t04CD = prim @0010<Femdata: MeshCell> (_t04CD, _t04CE);
  }
  0cell_block04C4 = _t04CD;
  space04CF = loadFem(Space, 0space04CF_intermedateGlobal04D0, block04C3);
  U04D1 = loadFem(FemFunc, 0U04D1_intermedateGlobal04D2, space04CF);
  c115A9 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04C4, cellChoice04D3);
  Femdata: FuncCell _t15AA;
  int _t16AD = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AE = loadFem(FuncCell, U04D1, _t16AD);
  _t15AA = _t16AE;
  Femdata: FemFunc _t15AB = extractFem(_t15AA, FemFunc);
  Femdata: FuncCell _t15AC;
  int _t16AB = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AC = loadFem(FuncCell, U04D1, _t16AB);
  _t15AC = _t16AC;
  Femdata: FemFunc _t15AD = extractFem(_t15AC, FemFunc);
  Femdata: Space _t15AE = extractFem(_t15AD, Space);
  Femdata: FuncCell _t15AF;
  int _t16A9 = extractFemItem(CellIndex(MeshCell), int, c115A9);
  Femdata: FuncCell _t16AA = loadFem(FuncCell, U04D1, _t16A9);
  _t15AF = _t16AA;
  int _t15B0 = extractFemItem(CellIndex(FuncCell), int, _t15AF);
  F15B1 = femField(_t15AB,_t15B0,field(3)[],refField,);
  kernel _t15B2 = tent;
  IMAGE1D<double[3]> img15B3 = clamp(cmap04D5);
  CM15B4 = prim ⊛0074<#0; %1; $[3]> (_t15B2, img15B3);
  C15B5 = F15B1;
  vec3 _t15B6 = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camN15B7 = prim normalize0137<$[3]> (_t15B6);
  vec3 _t15B8 = prim ×00BE (camN15B7, camUp04DE);
  camU15B9 = prim normalize0137<$[3]> (_t15B8);
  camV15BA = prim ×00BE (camN15B7, camU15B9);
  vec3 _t15BB = prim -0026<$[3]> (camAt04DA, camEye04D6);
  camDist15BC = prim |()|00B5<$[3]> (_t15BB);
  real _t15BD = 0.314159265358979323846264338327950288e1;
  real _t15BE = prim *0034 (camFOV04E4, _t15BD);
  real _t15BF = 0.36e3;
  real _t15C0 = prim /0055 (_t15BE, _t15BF);
  real _t15C1 = prim tan0179 (_t15C0);
  camVmax15C2 = prim *0034 (_t15C1, camDist15BC);
  real _t15C3 = (real)iresU04E6;
  real _t15C4 = prim *0034 (camVmax15C2, _t15C3);
  real _t15C5 = (real)iresV04E7;
  camUmax15C6 = prim /0055 (_t15C4, _t15C5);
  camNearVsp15C7 = prim +0017<$[]> (camNear04E2, camDist15BC);
  camFarVsp15C8 = prim +0017<$[]> (camFar04E3, camDist15BC);
  tensor[3,3] _t15C9 = [camU15B9, camV15BA, camN15B7];
  tensor[3,3] _t15CA = prim transpose0145<%3; %3> (_t15C9);
  vec3 _t15CB = prim normalize0137<$[3]> (litdir04FE);
  litwsp15CC = prim •00CE<$[3,3]; $[3]; $[3]> (_t15CA, _t15CB);
}
strand ray (int ui1619, int vi161A) {
  real rayU161B;
  real rayV1622;
  real rayN1629;
  vec3 UV162A;
  vec3 rayOrig162D;
  vec3 rayVec1632;
  real alphaFix1637;
  vec3 eyeDir163A;
  real phKa163C;
  real phKd163D;
  real phKs163E;
  real phSp163F;
  output vec4 rgba1640;
  output real raw1645;
  vec3 rgb1646;
  real transp164A;
  {
    real _t161C = prim unary -008B<$[]> (camUmax15C6);
    real _t161D = -0.5e0;
    real _t161E = (real)ui1619;
    real _t161F = (real)iresU04E6;
    real _t1620 = 0.5e0;
    real _t1621 = prim -0026<$[]> (_t161F, _t1620);
    rayU161B = prim lerp0098<$[]> (_t161C, camUmax15C6, _t161D, _t161E, _t1621);
    real _t1623 = prim unary -008B<$[]> (camVmax15C2);
    real _t1624 = -0.5e0;
    real _t1625 = (real)vi161A;
    real _t1626 = (real)iresV04E7;
    real _t1627 = 0.5e0;
    real _t1628 = prim -0026<$[]> (_t1626, _t1627);
    rayV1622 = prim lerp0098<$[]> (_t1623, camVmax15C2, _t1624, _t1625, _t1628);
    rayN1629 = camNearVsp15C7;
    vec3 _t162B = prim *0036<$[3]> (rayU161B, camU15B9);
    vec3 _t162C = prim *0036<$[3]> (rayV1622, camV15BA);
    UV162A = prim +0017<$[3]> (_t162B, _t162C);
    vec3 _t162E;
    if camOrtho04E5 {
      _t162E = UV162A;
    } else {
      real _t162F = 0.e0;
      real _t1630 = 0.e0;
      real _t1631 = 0.e0;
      _t162E = [_t162F, _t1630, _t1631];
    }
    rayOrig162D = prim +0017<$[3]> (camEye04D6, _t162E);
    vec3 _t1633;
    if camOrtho04E5 {
      real _t1634 = 0.e0;
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      _t1633 = [_t1634, _t1635, _t1636];
    } else {
      _t1633 = prim /0057<$[3]> (UV162A, camDist15BC);
    }
    rayVec1632 = prim +0017<$[3]> (camN15B7, _t1633);
    real _t1638 = prim |()|00B5<$[3]> (rayVec1632);
    real _t1639 = prim *0034 (_t1638, rayStep04E8);
    alphaFix1637 = prim /0055 (_t1639, refStep04E9);
    vec3 _t163B = prim normalize0137<$[3]> (rayVec1632);
    eyeDir163A = prim unary -008B<$[3]> (_t163B);
    phKa163C = phong04F1[0];
    phKd163D = phong04F1[1];
    phKs163E = phong04F1[2];
    phSp163F = phong04F1[3];
    real _t1641 = 0.e0;
    real _t1642 = 0.e0;
    real _t1643 = 0.e0;
    real _t1644 = 0.e0;
    rgba1640 = [_t1641, _t1642, _t1643, _t1644];
    raw1645 = 0.e0;
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    rgb1646 = [_t1647, _t1648, _t1649];
    transp164A = 0.1e1;
  }
  update
  {
    rayN1629 = prim +0017<$[]> (rayN1629, rayStep04E8);
    bool _t164B = prim >0080 (rayN1629, camFarVsp15C8);
    if _t164B {
      stabilize;
    }
    vec3 _t164C = prim *0036<$[3]> (rayN1629, rayVec1632);
    vec3 pos164D = prim +0017<$[3]> (rayOrig162D, _t164C);
    bool _t164E;
    bool _t16D6;
    Femdata: RefCell _t16D7;
    Femdata: RefCell _t16D8 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04C3);
    _t16D7 = _t16D8;
    real _t16D9 = 0.1e-8;
    bool _t16DA = extractFemItemN((_t16D7, pos164D, _t16D9),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16DA {
      bool _t16DB;
      real _t16DC;
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B1);
      field(3)[3,3] _t16DE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16DD);
      tensor[3,3] _t16DF = prim @00A5<#∞; %3; $[3,3]> (_t16DE, pos164D);
      real[3] _t16E0 = prim evals009F (_t16DF);
      int _t16E1 = 1;
      real _t16E2 = prim $sub01C0<real; %3> (_t16E0, _t16E1);
      real _t16E3 = prim unary -008B<$[]> (_t16E2);
      field(3)[3] _t16E4 = prim ∇00A8<#∞; %3> (F15B1);
      vec3 _t16E5 = prim @00A5<#∞; %3; $[3]> (_t16E4, pos164D);
      real _t16E6 = prim |()|00B5<$[3]> (_t16E5);
      real _t16E7 = prim +0017<$[]> (fBias04EE, _t16E6);
      real _t16E8 = prim /0055 (_t16E3, _t16E7);
      _t16DC = _t16E8;
      bool _t16E9 = prim >0080 (_t16DC, fStrTh04EC);
      if _t16E9 {
        bool _t16EA;
        real _t16EB;
        real _t16EC = 0.1e1;
        _t16EB = _t16EC;
        bool _t16ED = prim >=007E (_t16EB, fMaskTh04ED);
        if _t16ED {
          bool _t16EE = true;
          _t16EA = _t16EE;
        } else {
          _t16EA = false;
        }
        _t16DB = _t16EA;
      } else {
        _t16DB = false;
      }
      _t16D6 = _t16DB;
    } else {
      _t16D6 = false;
    }
    _t164E = _t16D6;
    bool _t164F = prim !00BC (_t164E);
    if _t164F {
      continue;
    }
    vec3 step1650;
    field(3)[3] _t16B9 = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BA = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16B9);
    tensor[3,3] _t16BB = prim @00A5<#∞; %3; $[3,3]> (_t16BA, pos164D);
    vec3[3] E16BC = prim evecs00A0 (_t16BB);
    field(3)[3] _t16BD = prim ∇00A8<#∞; %3> (F15B1);
    field(3)[3,3] _t16BE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16BD);
    tensor[3,3] _t16BF = prim @00A5<#∞; %3; $[3,3]> (_t16BE, pos164D);
    real[3] L16C0 = prim evals009F (_t16BF);
    int _t16C1 = 2;
    vec3 _t16C2 = prim $sub01C0<vec3; %3> (E16BC, _t16C1);
    int _t16C3 = 2;
    vec3 _t16C4 = prim $sub01C0<vec3; %3> (E16BC, _t16C3);
    tensor[3,3] _t16C5 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16C2, _t16C4);
    int _t16C6 = 2;
    real _t16C7 = prim $sub01C0<real; %3> (L16C0, _t16C6);
    tensor[3,3] _t16C8 = prim /0057<$[3,3]> (_t16C5, _t16C7);
    int _t16C9 = 1;
    vec3 _t16CA = prim $sub01C0<vec3; %3> (E16BC, _t16C9);
    int _t16CB = 1;
    vec3 _t16CC = prim $sub01C0<vec3; %3> (E16BC, _t16CB);
    tensor[3,3] _t16CD = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t16CA, _t16CC);
    int _t16CE = 1;
    real _t16CF = prim $sub01C0<real; %3> (L16C0, _t16CE);
    tensor[3,3] _t16D0 = prim /0057<$[3,3]> (_t16CD, _t16CF);
    tensor[3,3] _t16D1 = prim +0017<$[3,3]> (_t16C8, _t16D0);
    tensor[3,3] _t16D2 = prim unary -008B<$[3,3]> (_t16D1);
    field(3)[3] _t16D3 = prim ∇00A8<#∞; %3> (F15B1);
    vec3 _t16D4 = prim @00A5<#∞; %3; $[3]> (_t16D3, pos164D);
    vec3 _t16D5 = prim •00CE<$[3,3]; $[3]; $[3]> (_t16D2, _t16D4);
    step1650 = _t16D5;
    real _t1651 = prim |()|00B5<$[3]> (step1650);
    real aa1652;
    real _t16AF = 0.e0;
    real _t16B0 = 0.1e1;
    real _t16B1 = 0.15e1;
    real _t16B2 = 0.1e1;
    real _t16B3 = prim |()|00B5<$[]> (_t1651);
    real _t16B4 = prim /0055 (_t16B3, thick04EB);
    real _t16B5 = prim -0026<$[]> (_t16B2, _t16B4);
    real _t16B6 = prim *0034 (_t16B1, _t16B5);
    real _t16B7 = prim clamp0094<$[]> (_t16AF, _t16B0, _t16B6);
    real _t16B8 = prim *0034 (maxAlpha04EF, _t16B7);
    aa1652 = _t16B8;
    real _t1653 = 0.e0;
    bool _t1654 = prim ==0084 (aa1652, _t1653);
    if _t1654 {
      continue;
    }
    real _t1655 = 0.1e1;
    real _t1656 = 0.1e1;
    real _t1657 = prim -0026<$[]> (_t1656, aa1652);
    real _t1658 = prim ^0069 (_t1657, alphaFix1637);
    aa1652 = prim -0026<$[]> (_t1655, _t1658);
    vec3 _t1659 = prim normalize0137<$[3]> (step1650);
    vec3 snorm165A = prim unary -008B<$[3]> (_t1659);
    real _t165B = prim •00CE<$[3]; $[3]; $[]> (snorm165A, litwsp15CC);
    int _t165C = 2;
    real dcomp165D = prim ^0068 (_t165B, _t165C);
    real scomp165E = 0.e0;
    real _t165F = 0.e0;
    bool _t1660 = prim !=0088 (phKs163E, _t165F);
    if _t1660 {
      vec3 _t1661 = prim +0017<$[3]> (eyeDir163A, litwsp15CC);
      vec3 _t1662 = prim normalize0137<$[3]> (_t1661);
      real _t1663 = prim •00CE<$[3]; $[3]; $[]> (snorm165A, _t1662);
      real _t1664 = prim |()|00B5<$[]> (_t1663);
      scomp165E = prim ^0069 (_t1664, phSp163F);
    }
    vec3 dcol1665 = prim lerp0098<$[3]> (mcNear04F6, mcFar04FA, camNearVsp15C7, rayN1629, camFarVsp15C8);
    real cmin1666 = cminmax0502[0];
    real cmax1667 = cminmax0502[1];
    real _t1668 = 0.1e1;
    real _t1669 = 0.1e1;
    real _t166A = 0.1e1;
    vec3 mcol166B = [_t1668, _t1669, _t166A];
    bool _t166C = prim !=0088 (cmin1666, cmax1667);
    if _t166C {
      real _t166D = 0.e0;
      real _t166E = 0.1e1;
      vec3 _t166F = prim +0017<$[3]> (pos164D, step1650);
      real _t1670 = prim @00A5<#∞; %3; $[]> (C15B5, _t166F);
      real _t1671 = prim lerp0098<$[]> (_t166D, _t166E, cmin1666, _t1670, cmax1667);
      mcol166B = prim @00A5<#0; %1; $[3]> (CM15B4, _t1671);
    }
    real _t1672 = prim *0034 (transp164A, aa1652);
    real _t1673 = prim *0034 (phKd163D, dcomp165D);
    real _t1674 = prim +0017<$[]> (phKa163C, _t1673);
    vec3 _t1675 = prim modulate0129<%3> (dcol1665, mcol166B);
    vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
    real _t1677 = prim *0034 (phKs163E, scomp165E);
    real _t1678 = 0.1e1;
    real _t1679 = 0.1e1;
    real _t167A = 0.1e1;
    vec3 _t167B = [_t1678, _t1679, _t167A];
    vec3 _t167C = prim *0036<$[3]> (_t1677, _t167B);
    vec3 _t167D = prim +0017<$[3]> (_t1676, _t167C);
    vec3 _t167E = prim *0036<$[3]> (_t1672, _t167D);
    rgb1646 = prim +0017<$[3]> (rgb1646, _t167E);
    real _t167F = 0.1e1;
    real _t1680 = prim -0026<$[]> (_t167F, aa1652);
    transp164A = prim *0034 (transp164A, _t1680);
    bool _t1681 = prim <007A (transp164A, transp004EA);
    if _t1681 {
      transp164A = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1682 = 0.1e1;
    bool _t1683 = prim <007A (transp164A, _t1682);
    if _t1683 {
      real _t1684 = 0.1e1;
      real aa1685 = prim -0026<$[]> (_t1684, transp164A);
      real _t1686 = rgb1646[0];
      real _t1687 = prim /0055 (_t1686, aa1685);
      real _t1688 = rgb1646[1];
      real _t1689 = prim /0055 (_t1688, aa1685);
      real _t168A = rgb1646[2];
      real _t168B = prim /0055 (_t168A, aa1685);
      rgba1640 = [_t1687, _t1689, _t168B, aa1685];
    }
  }
}
grid(2) {
  int _t168C = 0;
  int _t168D = 1;
  int _t168E = prim -0024 (iresV04E7, _t168D);
  int[] _t168F = prim $range01C3 (_t168C, _t168E);
  foreach vi1695 in _t168F {
    int _t1690 = 0;
    int _t1691 = 1;
    int _t1692 = prim -0024 (iresU04E6, _t1691);
    int[] _t1693 = prim $range01C3 (_t1690, _t1692);
    foreach ui1694 in _t1693 {
      new ray (ui1694, vi1695);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block16EF (block) = <no-default>
  input 0space04CF_intermedateGlobal16F0 (space) = <no-default>
  input 0U04D1_intermedateGlobal16F1 (U) = <no-default>
  input cellChoice16F2 (cellChoice) = <no-default>
  input cmap16F3 (cmap) = image("cmap.nrrd")
  input camEye16F4 (camEye) = <default>
  input camAt16F5 (camAt) = <default>
  input camUp16F6 (camUp) = <default>
  input camNear16F7 (camNear) = <default>
  input camFar16F8 (camFar) = <default>
  input camFOV16F9 (camFOV) = <default>
  input camOrtho16FA (camOrtho) = <default>
  input iresU16FB (iresU) = <default>
  input iresV16FC (iresV) = <default>
  input rayStep16FD (rayStep) = <default>
  input refStep16FE (refStep) = <default>
  input transp016FF (transp0) = <default>
  input thick1700 (thick) = <default>
  input fStrTh1701 (fStrTh) = <default>
  input fMaskTh1702 (fMaskTh) = <default>
  input fBias1703 (fBias) = <default>
  input maxAlpha1704 (maxAlpha) = <default>
  input light1705 (light) = <default>
  input phong1706 (phong) = <default>
  input mcNear1707 (mcNear) = <default>
  input mcFar1708 (mcFar) = <default>
  input litdir1709 (litdir) = <default>
  input cminmax170A (cminmax) = <default>
  global femData:MeshCell[] 0cell_block1782
  global femData:Space space1783
  global femData:FemFunc U1784
  global femData:MeshCell c11785
  global field F1786
  global field CM1787
  global field C1788
  global tensor[3] camN1789
  global tensor[3] camU178A
  global tensor[3] camV178B
  global real camDist178C
  global real camVmax178D
  global real camUmax178E
  global real camNearVsp178F
  global real camFarVsp1790
  global tensor[3] litwsp1791
## functions
  function int[2] nextCell417A3 (int faceIdx1792#1, int cell1793#1, femData:Mesh mesh1794#1) {
    ENTRY17A2:  preds = []
      int _t1795#1 = 12;
      int _t1797#1 = IMul(cell1793,_t1795);
      int _t1799#1 = 2;
      int _t179B#1 = IMul(faceIdx1792,_t1799);
      int _t179D#1 = IAdd(_t1797,_t179B);
      int[2] _t179F#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1794,_t179D);
      return _t179F
}
## input initialization
  ENTRY1780:  preds = []
    real _t170B#1 = 0.e0;
    real _t170D#1 = -0.2e1;
    real _t170F#1 = 0.e0;
    tensor[3] camEye1711#1 = <tensor[3]>[_t170B,_t170D,_t170F];
    globals.camEye16F4 = camEye1711;
    real _t1714#1 = 0.e0;
    real _t1716#1 = 0.e0;
    real _t1718#1 = 0.e0;
    tensor[3] camAt171A#1 = <tensor[3]>[_t1714,_t1716,_t1718];
    globals.camAt16F5 = camAt171A;
    real _t171D#1 = 0.e0;
    real _t171F#1 = 0.e0;
    real _t1721#1 = 0.1e1;
    tensor[3] camUp1723#1 = <tensor[3]>[_t171D,_t171F,_t1721];
    globals.camUp16F6 = camUp1723;
    real camNear1726#1 = -0.4e1;
    globals.camNear16F7 = camNear1726;
    real camFar1729#1 = 0.4e1;
    globals.camFar16F8 = camFar1729;
    real camFOV172C#1 = 0.1e2;
    globals.camFOV16F9 = camFOV172C;
    bool camOrtho172F#1 = false;
    globals.camOrtho16FA = camOrtho172F;
    int iresU1732#1 = 100;
    globals.iresU16FB = iresU1732;
    int iresV1735#1 = 100;
    globals.iresV16FC = iresV1735;
    real rayStep1738#1 = 0.1e-3;
    globals.rayStep16FD = rayStep1738;
    real refStep173B#1 = 0.1e-3;
    globals.refStep16FE = refStep173B;
    real transp0173E#1 = 0.5e-2;
    globals.transp016FF = transp0173E;
    real thick1741#1 = 0.1e-1;
    globals.thick1700 = thick1741;
    real fStrTh1744#1 = 0.e0;
    globals.fStrTh1701 = fStrTh1744;
    real fMaskTh1747#1 = 0.e0;
    globals.fMaskTh1702 = fMaskTh1747;
    real fBias174A#1 = 0.1e0;
    globals.fBias1703 = fBias174A;
    real maxAlpha174D#1 = 0.1e1;
    globals.maxAlpha1704 = maxAlpha174D;
    bool light1750#1 = false;
    globals.light1705 = light1750;
    real _t1753#1 = 0.1e0;
    real _t1755#1 = 0.7e0;
    real _t1757#1 = 0.2e0;
    real _t1759#1 = 0.1e3;
    tensor[4] phong175B#1 = <tensor[4]>[_t1753,_t1755,_t1757,_t1759];
    globals.phong1706 = phong175B;
    real _t175E#1 = 0.1e1;
    real _t1760#1 = 0.1e1;
    real _t1762#1 = 0.1e1;
    tensor[3] mcNear1764#1 = <tensor[3]>[_t175E,_t1760,_t1762];
    globals.mcNear1707 = mcNear1764;
    real _t1767#1 = 0.1e1;
    real _t1769#1 = 0.1e1;
    real _t176B#1 = 0.1e1;
    tensor[3] mcFar176D#1 = <tensor[3]>[_t1767,_t1769,_t176B];
    globals.mcFar1708 = mcFar176D;
    real _t1770#1 = 0.e0;
    real _t1772#1 = -0.1e1;
    real _t1774#1 = 0.e0;
    tensor[3] litdir1776#1 = <tensor[3]>[_t1770,_t1772,_t1774];
    globals.litdir1709 = litdir1776;
    real _t1779#1 = 0.e0;
    real _t177B#1 = 0.e0;
    tensor[2] cminmax177D#1 = <tensor[2]>[_t1779,_t177B];
    globals.cminmax170A = cminmax177D;
    return
## global-variable initialization
  ENTRY1841:  preds = []
    femData:Mesh block17B1#3 = globals.block16EF;
    femData:Space 0space04CF_intermedateGlobal17B0#1 = globals.0space04CF_intermedateGlobal16F0;
    femData:FemFunc 0U04D1_intermedateGlobal17AF#1 = globals.0U04D1_intermedateGlobal16F1;
    int cellChoice17AE#1 = globals.cellChoice16F2;
    image(IMAGE1D<double[3]>) cmap17AD#1 = globals.cmap16F3;
    tensor[3] camEye17AC#2 = globals.camEye16F4;
    tensor[3] camAt17AB#2 = globals.camAt16F5;
    tensor[3] camUp17AA#1 = globals.camUp16F6;
    real camNear17A9#1 = globals.camNear16F7;
    real camFar17A8#1 = globals.camFar16F8;
    real camFOV17A7#1 = globals.camFOV16F9;
    int iresU17A6#1 = globals.iresU16FB;
    int iresV17A5#1 = globals.iresV16FC;
    tensor[3] litdir17A4#2 = globals.litdir1709;
    int _t17C0#1 = 0;
    int _t17C2#1 = 1;
    int _t17C4#1 = ExtractFemItem<int,NumCell(Mesh)>(block17B1);
    int _t17C6#1 = ISub(_t17C4,_t17C2);
    int[] _t17C8#1 = Range(_t17C0,_t17C6);
    femData:MeshCell[] _t17CA#1 = <femData:MeshCell[]>{};
  FOREACH17CE:  preds = [ASSIGN17CB,NEXT17D3]
    foreach (_t17CC in _t17C8) on exit goto ASSIGN17D5
      femData:MeshCell[] _t17CD#2 = phi(_t17CA,_t17D1)
    femData:MeshCell _t17CF#1 = LoadFem<femData:MeshCell>(block17B1,_t17CC);
    femData:MeshCell[] _t17D1#1 = Append<femData:MeshCell>(_t17CD,_t17CF);
    goto FOREACH17CE
  ASSIGN17D5:  preds = [FOREACH17CE]
    femData:MeshCell[] 0cell_block17D4#2 = _t17CD;
    globals.0cell_block1782 = 0cell_block17D4;
    femData:Space space17D7#2 = LoadFem<femData:Space>(0space04CF_intermedateGlobal17B0,block17B1);
    globals.space1783 = space17D7;
    femData:FemFunc U17DA#4 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal17AF,space17D7);
    globals.U1784 = U17DA;
    femData:MeshCell c117DD#4 = Subscript<femData:MeshCell[]>(0cell_block17D4,cellChoice17AE);
    globals.c11785 = c117DD;
    int _t17E1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DD);
    femData:FuncCell _t17E3#1 = LoadFem<femData:FuncCell>(U17DA,_t17E1);
    femData:FuncCell _t17E5#1 = _t17E3;
    femData:FemFunc _t17E7#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17E5);
    int _t17EA#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DD);
    femData:FuncCell _t17EC#1 = LoadFem<femData:FuncCell>(U17DA,_t17EA);
    femData:FuncCell _t17EE#1 = _t17EC;
    femData:FemFunc _t17F0#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17EE);
    femData:Space _t17F2#1 = ExtractFem<femData:Space,femData:FemFunc>(_t17F0);
    int _t17F5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DD);
    femData:FuncCell _t17F7#1 = LoadFem<femData:FuncCell>(U17DA,_t17F5);
    femData:FuncCell _t17F9#1 = _t17F7;
    int _t17FB#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t17F9);
    field F17FD#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t17FB,_t17F2,_t17E7);
    globals.F1786 = F17FD;
    kernel _t1800#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1802#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap17AD);
    field CM1804#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img1802,_t1800);
    globals.CM1787 = CM1804;
    field C1807#1 = F17FD;
    globals.C1788 = C1807;
    tensor[3] _t180A#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt17AB,camEye17AC);
    tensor[3] camN180C#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t180A,_t180A);
    globals.camN1789 = camN180C;
    tensor[3] _t180F#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN180C,camUp17AA);
    tensor[3] camU1811#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t180F,_t180F);
    globals.camU178A = camU1811;
    tensor[3] camV1814#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN180C,camU1811);
    globals.camV178B = camV1814;
    tensor[3] _t1817#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt17AB,camEye17AC);
    real camDist1819#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1817);
    globals.camDist178C = camDist1819;
    real _t181C#1 = 0.314159265358979323846264338327950288e1;
    real _t181E#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV17A7,_t181C);
    real _t1820#1 = 0.36e3;
    real _t1822#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t181E,_t1820);
    real _t1824#1 = λ(T0[])<Tangent(T0)> (_t1822);
    real camVmax1826#2 = λ(T0[],T1[])<(T0 * T1)> (_t1824,camDist1819);
    globals.camVmax178D = camVmax1826;
    real _t1829#1 = IntToReal(iresU17A6);
    real _t182B#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1826,_t1829);
    real _t182D#1 = IntToReal(iresV17A5);
    real camUmax182F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t182B,_t182D);
    globals.camUmax178E = camUmax182F;
    real camNearVsp1832#1 = λ(T0[],T1[])<(T0 + T1)> (camNear17A9,camDist1819);
    globals.camNearVsp178F = camNearVsp1832;
    real camFarVsp1835#1 = λ(T0[],T1[])<(T0 + T1)> (camFar17A8,camDist1819);
    globals.camFarVsp1790 = camFarVsp1835;
    tensor[3,3] _t1838#1 = <tensor[3,3]>[camU1811,camV1814,camN180C];
    tensor[3,3] _t183A#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t1838);
    tensor[3] _t183C#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (litdir17A4,litdir17A4);
    tensor[3] litwsp183E#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t183A,_t183C);
    globals.litwsp1791 = litwsp183E;
    return
## strand
  strand ray (int ui1860#1, int vi1861#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY190A:  preds = []
        tensor[3] camEye187F#1 = globals.camEye16F4;
        bool camOrtho187E#2 = globals.camOrtho16FA;
        int iresU187D#1 = globals.iresU16FB;
        int iresV187C#1 = globals.iresV16FC;
        real rayStep187B#1 = globals.rayStep16FD;
        real refStep187A#1 = globals.refStep16FE;
        tensor[4] phong1879#4 = globals.phong1706;
        tensor[3] camN1878#1 = globals.camN1789;
        tensor[3] camU1877#1 = globals.camU178A;
        tensor[3] camV1876#1 = globals.camV178B;
        real camDist1875#1 = globals.camDist178C;
        real camVmax1874#2 = globals.camVmax178D;
        real camUmax1873#2 = globals.camUmax178E;
        real camNearVsp1872#1 = globals.camNearVsp178F;
        real _t189E#1 = λ(T0[])<Neg(T0)> (camUmax1873);
        real _t18A0#1 = -0.5e0;
        real _t18A2#1 = IntToReal(ui1860);
        real _t18A4#1 = IntToReal(iresU187D);
        real _t18A6#1 = 0.5e0;
        real _t18A8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18A4,_t18A6);
        real rayU18AA#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t189E,camUmax1873,_t18A0,_t18A2,_t18A8);
        real _t18AC#1 = λ(T0[])<Neg(T0)> (camVmax1874);
        real _t18AE#1 = -0.5e0;
        real _t18B0#1 = IntToReal(vi1861);
        real _t18B2#1 = IntToReal(iresV187C);
        real _t18B4#1 = 0.5e0;
        real _t18B6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18B2,_t18B4);
        real rayV18B8#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t18AC,camVmax1874,_t18AE,_t18B0,_t18B6);
        real rayN18BA#1 = camNearVsp1872;
        tensor[3] _t18BC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU18AA,camU1877);
        tensor[3] _t18BE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV18B8,camV1876);
        tensor[3] UV18C0#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t18BC,_t18BE);
        if camOrtho187E then goto ASSIGN18C6 else goto ASSIGN18C8
      ASSIGN18C6:  preds = [COND18CF]
        tensor[3] _t18C4#1 = UV18C0;
        goto JOIN18C3
      JOIN18C3:  preds = [ASSIGN18C6,ASSIGN18CE]
        tensor[3] _t18C5#1 = phi(_t18C4,_t18CD)
        tensor[3] rayOrig18D0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye187F,_t18C5);
        if camOrtho187E then goto ASSIGN18D5 else goto ASSIGN18DE
      ASSIGN18D5:  preds = [COND18DF]
        real _t18D4#1 = 0.e0;
        real _t18D6#1 = 0.e0;
        real _t18D8#1 = 0.e0;
        tensor[3] _t18DA#1 = <tensor[3]>[_t18D4,_t18D6,_t18D8];
        goto JOIN18D3
      JOIN18D3:  preds = [ASSIGN18DC,ASSIGN18DE]
        tensor[3] _t18DB#1 = phi(_t18DA,_t18DD)
        tensor[3] rayVec18E0#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1878,_t18DB);
        real _t18E2#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec18E0);
        real _t18E4#1 = λ(T0[],T1[])<(T0 * T1)> (_t18E2,rayStep187B);
        real alphaFix18E6#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18E4,refStep187A);
        tensor[3] _t18E8#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (rayVec18E0,rayVec18E0);
        tensor[3] eyeDir18EA#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t18E8);
        real phKa18EC#1 = TensorIndex<tensor[4],[0]>(phong1879);
        real phKd18EE#1 = TensorIndex<tensor[4],[1]>(phong1879);
        real phKs18F0#1 = TensorIndex<tensor[4],[2]>(phong1879);
        real phSp18F2#1 = TensorIndex<tensor[4],[3]>(phong1879);
        real _t18F4#1 = 0.e0;
        real _t18F6#1 = 0.e0;
        real _t18F8#1 = 0.e0;
        real _t18FA#1 = 0.e0;
        tensor[4] rgba18FC#1 = <tensor[4]>[_t18F4,_t18F6,_t18F8,_t18FA];
        real raw18FE#1 = 0.e0;
        real _t1900#1 = 0.e0;
        real _t1902#1 = 0.e0;
        real _t1904#1 = 0.e0;
        tensor[3] rgb1906#1 = <tensor[3]>[_t1900,_t1902,_t1904];
        real transp1908#1 = 0.1e1;
        self.rayU = rayU18AA;
        self.rayV = rayV18B8;
        self.rayN = rayN18BA;
        self.UV = UV18C0;
        self.rayOrig = rayOrig18D0;
        self.rayVec = rayVec18E0;
        self.alphaFix = alphaFix18E6;
        self.eyeDir = eyeDir18EA;
        self.phKa = phKa18EC;
        self.phKd = phKd18EE;
        self.phKs = phKs18F0;
        self.phSp = phSp18F2;
        self.rgba = rgba18FC;
        self.raw = raw18FE;
        self.rgb = rgb1906;
        self.transp = transp1908;
        return
      ASSIGN18DE:  preds = [COND18DF]
        tensor[3] _t18DD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (UV18C0,camDist1875);
        goto JOIN18D3
      ASSIGN18C8:  preds = [COND18CF]
        real _t18C7#1 = 0.e0;
        real _t18C9#1 = 0.e0;
        real _t18CB#1 = 0.e0;
        tensor[3] _t18CD#1 = <tensor[3]>[_t18C7,_t18C9,_t18CB];
        goto JOIN18C3
    end state init
    method update
        ENTRY1A98:  preds = []
          femData:Mesh block192C#1 = globals.block16EF;
          real rayStep192B#1 = globals.rayStep16FD;
          real transp0192A#1 = globals.transp016FF;
          real thick1929#1 = globals.thick1700;
          real fStrTh1928#1 = globals.fStrTh1701;
          real fMaskTh1927#1 = globals.fMaskTh1702;
          real fBias1926#1 = globals.fBias1703;
          real maxAlpha1925#1 = globals.maxAlpha1704;
          tensor[3] mcNear1924#1 = globals.mcNear1707;
          tensor[3] mcFar1923#1 = globals.mcFar1708;
          tensor[2] cminmax1922#2 = globals.cminmax170A;
          field F1921#5 = globals.F1786;
          field CM1920#1 = globals.CM1787;
          field C191F#1 = globals.C1788;
          real camNearVsp191E#1 = globals.camNearVsp178F;
          real camFarVsp191D#2 = globals.camFarVsp1790;
          tensor[3] litwsp191C#2 = globals.litwsp1791;
          real rayU193E#0 = self.rayU;
          real rayV193F#0 = self.rayV;
          real rayN1940#1 = self.rayN;
          tensor[3] UV1941#0 = self.UV;
          tensor[3] rayOrig1942#1 = self.rayOrig;
          tensor[3] rayVec1943#1 = self.rayVec;
          real alphaFix1944#1 = self.alphaFix;
          tensor[3] eyeDir1945#1 = self.eyeDir;
          real phKa1946#1 = self.phKa;
          real phKd1947#1 = self.phKd;
          real phKs1948#2 = self.phKs;
          real phSp1949#1 = self.phSp;
          tensor[4] rgba194A#5 = self.rgba;
          real raw194B#0 = self.raw;
          tensor[3] rgb194C#4 = self.rgb;
          real transp194D#5 = self.transp;
          real rayN195E#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1940,rayStep192B);
          bool _t1960#1 = GT<real>(rayN195E,camFarVsp191D);
          if _t1960 then goto SAVE1964 else goto JOIN1962
        SAVE1964:  preds = [COND1968]
          self.rayN = rayN195E;
          self.rgba = rgba194A;
          self.rgb = rgb194C;
          self.transp = transp194D;
          stabilize
          goto JOIN1962
        JOIN1962:  preds = [*STABILIZE1963,COND1968]
          tensor[3] _t1969#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN195E,rayVec1943);
          tensor[3] pos196B#7 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1942,_t1969);
          femData:RefCell _t1970#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block192C);
          femData:RefCell _t1972#1 = _t1970;
          real _t1974#1 = 0.1e-8;
          bool _t1976#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1972,pos196B,_t1974);
          if _t1976 then goto ASSIGN197C else goto ASSIGN19B4
        ASSIGN197C:  preds = [COND19B5]
          field _t197B#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1921);
          field _t197D#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t197B);
          tensor[3,3] _t197F#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t197D,pos196B);
          (real[3] _t1981#1,tensor[3][3] evecs1982#0) = Eigen3x3(_t197F);
          int _t1984#1 = 1;
          real _t1986#1 = Subscript<real[3]>(_t1981,_t1984);
          real _t1988#1 = λ(T0[])<Neg(T0)> (_t1986);
          field _t198A#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1921);
          tensor[3] _t198C#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t198A,pos196B);
          real _t198E#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t198C);
          real _t1990#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1926,_t198E);
          real _t1992#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1988,_t1990);
          real _t1994#1 = _t1992;
          bool _t1996#1 = GT<real>(_t1994,fStrTh1928);
          if _t1996 then goto ASSIGN199C else goto ASSIGN19AE
        ASSIGN199C:  preds = [COND19AF]
          real _t199B#1 = 0.1e1;
          real _t199D#1 = _t199B;
          bool _t199F#1 = GTE<real>(_t199D,fMaskTh1927);
          if _t199F then goto ASSIGN19A3 else goto ASSIGN19A8
        ASSIGN19A3:  preds = [COND19A9]
          bool _t19A2#1 = true;
          bool _t19A4#1 = _t19A2;
          goto JOIN19A1
        JOIN19A1:  preds = [ASSIGN19A6,ASSIGN19A8]
          bool _t19A5#1 = phi(_t19A4,_t19A7)
          bool _t19AA#1 = _t19A5;
          goto JOIN1998
        JOIN1998:  preds = [ASSIGN19AC,ASSIGN19AE]
          bool _t19AB#1 = phi(_t19AA,_t19AD)
          bool _t19B0#1 = _t19AB;
          goto JOIN1978
        JOIN1978:  preds = [ASSIGN19B2,ASSIGN19B4]
          bool _t19B1#1 = phi(_t19B0,_t19B3)
          bool _t19B6#1 = _t19B1;
          bool _t19B8#1 = BNot(_t19B6);
          if _t19B8 then goto SAVE19BC else goto JOIN19BA
        SAVE19BC:  preds = [COND19C0]
          self.rayN = rayN195E;
          self.rgba = rgba194A;
          self.rgb = rgb194C;
          self.transp = transp194D;
          active
          goto JOIN19BA
        JOIN19BA:  preds = [*ACTIVE19BB,COND19C0]
          field _t19C2#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1921);
          field _t19C4#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t19C2);
          tensor[3,3] _t19C6#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t19C4,pos196B);
          (real[3] evals19C9#0,tensor[3][3] E19C8#4) = Eigen3x3(_t19C6);
          field _t19CB#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1921);
          field _t19CD#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t19CB);
          tensor[3,3] _t19CF#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t19CD,pos196B);
          (real[3] L19D1#2,tensor[3][3] evecs19D2#0) = Eigen3x3(_t19CF);
          int _t19D4#1 = 2;
          tensor[3] _t19D6#1 = Subscript<tensor[3][3]>(E19C8,_t19D4);
          int _t19D8#1 = 2;
          tensor[3] _t19DA#1 = Subscript<tensor[3][3]>(E19C8,_t19D8);
          tensor[3,3] _t19DC#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t19D6,_t19DA);
          int _t19DE#1 = 2;
          real _t19E0#1 = Subscript<real[3]>(L19D1,_t19DE);
          tensor[3,3] _t19E2#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t19DC,_t19E0);
          int _t19E4#1 = 1;
          tensor[3] _t19E6#1 = Subscript<tensor[3][3]>(E19C8,_t19E4);
          int _t19E8#1 = 1;
          tensor[3] _t19EA#1 = Subscript<tensor[3][3]>(E19C8,_t19E8);
          tensor[3,3] _t19EC#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t19E6,_t19EA);
          int _t19EE#1 = 1;
          real _t19F0#1 = Subscript<real[3]>(L19D1,_t19EE);
          tensor[3,3] _t19F2#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t19EC,_t19F0);
          tensor[3,3] _t19F4#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t19E2,_t19F2);
          tensor[3,3] _t19F6#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t19F4);
          field _t19F8#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1921);
          tensor[3] _t19FA#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t19F8,pos196B);
          tensor[3] _t19FC#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t19F6,_t19FA);
          tensor[3] step19FE#4 = _t19FC;
          real _t1A00#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (step19FE);
          real _t1A03#1 = 0.e0;
          real _t1A05#1 = 0.1e1;
          real _t1A07#1 = 0.15e1;
          real _t1A09#1 = 0.1e1;
          real _t1A0B#1 = λ(T0[])<Abs(T0)> (_t1A00);
          real _t1A0D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A0B,thick1929);
          real _t1A0F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A09,_t1A0D);
          real _t1A11#1 = λ(T0[],T1[])<(T0 * T1)> (_t1A07,_t1A0F);
          real _t1A13#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1A03,_t1A05,_t1A11);
          real _t1A15#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1925,_t1A13);
          real aa1A17#2 = _t1A15;
          real _t1A19#1 = 0.e0;
          bool _t1A1B#1 = EQ<real>(aa1A17,_t1A19);
          if _t1A1B then goto SAVE1A1F else goto JOIN1A1D
        SAVE1A1F:  preds = [COND1A23]
          self.rayN = rayN195E;
          self.rgba = rgba194A;
          self.rgb = rgb194C;
          self.transp = transp194D;
          active
          goto JOIN1A1D
        JOIN1A1D:  preds = [*ACTIVE1A1E,COND1A23]
          real _t1A24#1 = 0.1e1;
          real _t1A26#1 = 0.1e1;
          real _t1A28#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A26,aa1A17);
          real _t1A2A#1 = MathFn<pow>(_t1A28,alphaFix1944);
          real aa1A2C#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1A24,_t1A2A);
          tensor[3] _t1A2E#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (step19FE,step19FE);
          tensor[3] snorm1A30#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1A2E);
          real _t1A32#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1A30,litwsp191C);
          int _t1A34#0 = 2;
          real dcomp1A36#1 = λ(T0[])<(T0)^2> (_t1A32);
          real scomp1A38#1 = 0.e0;
          real _t1A3A#1 = 0.e0;
          bool _t1A3C#1 = NEQ<real>(phKs1948,_t1A3A);
          if _t1A3C then goto ASSIGN1A40 else goto JOIN1A3E
        ASSIGN1A40:  preds = [COND1A4A]
          tensor[3] _t1A3F#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1945,litwsp191C);
          tensor[3] _t1A41#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1A3F,_t1A3F);
          real _t1A43#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1A30,_t1A41);
          real _t1A45#1 = λ(T0[])<Abs(T0)> (_t1A43);
          real scomp1A47#1 = MathFn<pow>(_t1A45,phSp1949);
          goto JOIN1A3E
        JOIN1A3E:  preds = [ASSIGN1A49,COND1A4A]
          real scomp1A48#1 = phi(scomp1A47,scomp1A38)
          tensor[3] dcol1A4B#1 = λ(T0[3],T1[3],T2[],T3[],T4[])<(T0_{i0} + (((T3) - (T2)) / ( (T4) - (T2)) * (T1_{i0}) - (T0_{i0})))>_{3} (mcNear1924,mcFar1923,camNearVsp191E,rayN195E,camFarVsp191D);
          real cmin1A4D#2 = TensorIndex<tensor[2],[0]>(cminmax1922);
          real cmax1A4F#2 = TensorIndex<tensor[2],[1]>(cminmax1922);
          real _t1A51#1 = 0.1e1;
          real _t1A53#1 = 0.1e1;
          real _t1A55#1 = 0.1e1;
          tensor[3] mcol1A57#1 = <tensor[3]>[_t1A51,_t1A53,_t1A55];
          bool _t1A59#1 = NEQ<real>(cmin1A4D,cmax1A4F);
          if _t1A59 then goto ASSIGN1A5D else goto JOIN1A5B
        ASSIGN1A5D:  preds = [COND1A69]
          real _t1A5C#1 = 0.e0;
          real _t1A5E#1 = 0.1e1;
          tensor[3] _t1A60#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos196B,step19FE);
          real _t1A62#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (C191F,_t1A60);
          real _t1A64#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1A5C,_t1A5E,cmin1A4D,_t1A62,cmax1A4F);
          tensor[3] mcol1A66#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (CM1920,_t1A64);
          goto JOIN1A5B
        JOIN1A5B:  preds = [ASSIGN1A68,COND1A69]
          tensor[3] mcol1A67#1 = phi(mcol1A66,mcol1A57)
          real _t1A6A#1 = λ(T0[],T1[])<(T0 * T1)> (transp194D,aa1A2C);
          real _t1A6C#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1947,dcomp1A36);
          real _t1A6E#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1946,_t1A6C);
          tensor[3] _t1A70#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (dcol1A4B,mcol1A67);
          tensor[3] _t1A72#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A6E,_t1A70);
          real _t1A74#1 = λ(T0[],T1[])<(T0 * T1)> (phKs1948,scomp1A48);
          real _t1A76#1 = 0.1e1;
          real _t1A78#1 = 0.1e1;
          real _t1A7A#1 = 0.1e1;
          tensor[3] _t1A7C#1 = <tensor[3]>[_t1A76,_t1A78,_t1A7A];
          tensor[3] _t1A7E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A74,_t1A7C);
          tensor[3] _t1A80#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1A72,_t1A7E);
          tensor[3] _t1A82#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A6A,_t1A80);
          tensor[3] rgb1A84#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb194C,_t1A82);
          real _t1A86#1 = 0.1e1;
          real _t1A88#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A86,aa1A2C);
          real transp1A8A#2 = λ(T0[],T1[])<(T0 * T1)> (transp194D,_t1A88);
          bool _t1A8C#1 = LT<real>(transp1A8A,transp0192A);
          if _t1A8C then goto ASSIGN1A91 else goto JOIN1A8E
        ASSIGN1A91:  preds = [COND1A97]
          real transp1A8F#1 = 0.e0;
          self.rayN = rayN195E;
          self.rgba = rgba194A;
          self.rgb = rgb1A84;
          self.transp = transp1A8F;
          stabilize
          goto JOIN1A8E
        JOIN1A8E:  preds = [*STABILIZE1A92,COND1A97]
          real transp1A90#1 = phi(transp1A8A)
          self.rayN = rayN195E;
          self.rgba = rgba194A;
          self.rgb = rgb1A84;
          self.transp = transp1A90;
          active
        ASSIGN19A8:  preds = [COND19A9]
          bool _t19A7#1 = false;
          goto JOIN19A1
        ASSIGN19AE:  preds = [COND19AF]
          bool _t19AD#1 = false;
          goto JOIN1998
        ASSIGN19B4:  preds = [COND19B5]
          bool _t19B3#1 = false;
          goto JOIN1978
    end update
    method stabilize
        ENTRY1AD7:  preds = []
          real rayU1A9E#0 = self.rayU;
          real rayV1A9F#0 = self.rayV;
          real rayN1AA0#1 = self.rayN;
          tensor[3] UV1AA1#0 = self.UV;
          tensor[3] rayOrig1AA2#0 = self.rayOrig;
          tensor[3] rayVec1AA3#0 = self.rayVec;
          real alphaFix1AA4#0 = self.alphaFix;
          tensor[3] eyeDir1AA5#0 = self.eyeDir;
          real phKa1AA6#0 = self.phKa;
          real phKd1AA7#0 = self.phKd;
          real phKs1AA8#0 = self.phKs;
          real phSp1AA9#0 = self.phSp;
          tensor[4] rgba1AAA#1 = self.rgba;
          real raw1AAB#0 = self.raw;
          tensor[3] rgb1AAC#4 = self.rgb;
          real transp1AAD#3 = self.transp;
          real _t1ABE#1 = 0.1e1;
          bool _t1AC0#1 = LT<real>(transp1AAD,_t1ABE);
          if _t1AC0 then goto ASSIGN1AC4 else goto JOIN1AC2
        ASSIGN1AC4:  preds = [COND1AD6]
          real _t1AC3#1 = 0.1e1;
          real aa1AC5#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1AC3,transp1AAD);
          real _t1AC7#1 = TensorIndex<tensor[3],[0]>(rgb1AAC);
          real _t1AC9#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1AC7,aa1AC5);
          real _t1ACB#1 = TensorIndex<tensor[3],[1]>(rgb1AAC);
          real _t1ACD#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ACB,aa1AC5);
          real _t1ACF#1 = TensorIndex<tensor[3],[2]>(rgb1AAC);
          real _t1AD1#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ACF,aa1AC5);
          tensor[4] rgba1AD3#1 = <tensor[4]>[_t1AC9,_t1ACD,_t1AD1,aa1AC5];
          goto JOIN1AC2
        JOIN1AC2:  preds = [ASSIGN1AD5,COND1AD6]
          tensor[4] rgba1AD4#1 = phi(rgba1AD3,rgba1AAA)
          self.rayN = rayN1AA0;
          self.rgba = rgba1AD4;
          self.rgb = rgb1AAC;
          self.transp = transp1AAD;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY185E:  preds = []
      int iresU1844#1 = globals.iresU16FB;
      int iresV1843#1 = globals.iresV16FC;
      int _t1847#1 = 0;
      int _t1849#1 = 1;
      int _t184B#1 = ISub(iresV1843,_t1849);
      int[] _t184D#1 = Range(_t1847,_t184B);
    FOREACH1850:  preds = [ASSIGN184E,NEXT185D]
      foreach (vi184F in _t184D) on exit goto RETURN185F
      int _t1851#1 = 0;
      int _t1853#1 = 1;
      int _t1855#1 = ISub(iresU1844,_t1853);
      int[] _t1857#1 = Range(_t1851,_t1855);
    FOREACH185A:  preds = [ASSIGN1858,NEXT185C]
      foreach (ui1859 in _t1857) on exit goto NEXT185D
      new ray(ui1859,vi184F);
      goto FOREACH185A
    NEXT185D:  preds = [FOREACH185A]
      goto FOREACH1850
    RETURN185F:  preds = [FOREACH1850]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block16EF (block) = <no-default>
  input 0space04CF_intermedateGlobal16F0 (space) = <no-default>
  input 0U04D1_intermedateGlobal16F1 (U) = <no-default>
  input cellChoice16F2 (cellChoice) = <no-default>
  input cmap16F3 (cmap) = image("cmap.nrrd")
  input camEye16F4 (camEye) = <default>
  input camAt16F5 (camAt) = <default>
  input camUp16F6 (camUp) = <default>
  input camNear16F7 (camNear) = <default>
  input camFar16F8 (camFar) = <default>
  input camFOV16F9 (camFOV) = <default>
  input camOrtho16FA (camOrtho) = <default>
  input iresU16FB (iresU) = <default>
  input iresV16FC (iresV) = <default>
  input rayStep16FD (rayStep) = <default>
  input refStep16FE (refStep) = <default>
  input transp016FF (transp0) = <default>
  input thick1700 (thick) = <default>
  input fStrTh1701 (fStrTh) = <default>
  input fMaskTh1702 (fMaskTh) = <default>
  input fBias1703 (fBias) = <default>
  input maxAlpha1704 (maxAlpha) = <default>
  input light1705 (light) = <default>
  input phong1706 (phong) = <default>
  input mcNear1707 (mcNear) = <default>
  input mcFar1708 (mcFar) = <default>
  input litdir1709 (litdir) = <default>
  input cminmax170A (cminmax) = <default>
  global femData:MeshCell[] 0cell_block1782
  global femData:Space space1783
  global femData:FemFunc U1784
  global femData:MeshCell c11785
  global field F1786
  global field CM1787
  global field C1788
  global tensor[3] camN1789
  global tensor[3] camU178A
  global tensor[3] camV178B
  global real camDist178C
  global real camVmax178D
  global real camUmax178E
  global real camNearVsp178F
  global real camFarVsp1790
  global tensor[3] litwsp1791
## functions
  function int[2] nextCell417A3 (int faceIdx1792#1, int cell1793#1, femData:Mesh mesh1794#1) {
    ENTRY17A2:  preds = []
      int _t1795#1 = 12;
      int _t1797#1 = IMul(cell1793,_t1795);
      int _t1799#1 = 2;
      int _t179B#1 = IMul(faceIdx1792,_t1799);
      int _t179D#1 = IAdd(_t1797,_t179B);
      int[2] _t179F#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1794,_t179D);
      return _t179F
}
## input initialization
  ENTRY1780:  preds = []
    real _t170B#13 = 0.e0;
    real _t170D#1 = -0.2e1;
    tensor[3] camEye1711#1 = <tensor[3]>[_t170B,_t170D,_t170B];
    globals.camEye16F4 = camEye1711;
    tensor[3] camAt171A#1 = <tensor[3]>[_t170B,_t170B,_t170B];
    globals.camAt16F5 = camAt171A;
    real _t1721#5 = 0.1e1;
    tensor[3] camUp1723#1 = <tensor[3]>[_t170B,_t170B,_t1721];
    globals.camUp16F6 = camUp1723;
    real camNear1726#1 = -0.4e1;
    globals.camNear16F7 = camNear1726;
    real camFar1729#1 = 0.4e1;
    globals.camFar16F8 = camFar1729;
    real camFOV172C#1 = 0.1e2;
    globals.camFOV16F9 = camFOV172C;
    bool camOrtho172F#2 = false;
    globals.camOrtho16FA = camOrtho172F;
    int iresU1732#2 = 100;
    globals.iresU16FB = iresU1732;
    globals.iresV16FC = iresU1732;
    real rayStep1738#2 = 0.1e-3;
    globals.rayStep16FD = rayStep1738;
    globals.refStep16FE = rayStep1738;
    real transp0173E#1 = 0.5e-2;
    globals.transp016FF = transp0173E;
    real thick1741#1 = 0.1e-1;
    globals.thick1700 = thick1741;
    globals.fStrTh1701 = _t170B;
    globals.fMaskTh1702 = _t170B;
    real fBias174A#2 = 0.1e0;
    globals.fBias1703 = fBias174A;
    globals.maxAlpha1704 = _t1721;
    globals.light1705 = camOrtho172F;
    real _t1755#1 = 0.7e0;
    real _t1757#1 = 0.2e0;
    real _t1759#1 = 0.1e3;
    tensor[4] phong175B#1 = <tensor[4]>[fBias174A,_t1755,_t1757,_t1759];
    globals.phong1706 = phong175B;
    tensor[3] mcNear1764#2 = <tensor[3]>[_t1721,_t1721,_t1721];
    globals.mcNear1707 = mcNear1764;
    globals.mcFar1708 = mcNear1764;
    real _t1772#1 = -0.1e1;
    tensor[3] litdir1776#1 = <tensor[3]>[_t170B,_t1772,_t170B];
    globals.litdir1709 = litdir1776;
    tensor[2] cminmax177D#1 = <tensor[2]>[_t170B,_t170B];
    globals.cminmax170A = cminmax177D;
    return
## global-variable initialization
  ENTRY1841:  preds = []
    femData:Mesh block17B1#3 = globals.block16EF;
    femData:Space 0space04CF_intermedateGlobal17B0#1 = globals.0space04CF_intermedateGlobal16F0;
    femData:FemFunc 0U04D1_intermedateGlobal17AF#1 = globals.0U04D1_intermedateGlobal16F1;
    int cellChoice17AE#1 = globals.cellChoice16F2;
    image(IMAGE1D<double[3]>) cmap17AD#1 = globals.cmap16F3;
    tensor[3] camEye17AC#1 = globals.camEye16F4;
    tensor[3] camAt17AB#1 = globals.camAt16F5;
    tensor[3] camUp17AA#1 = globals.camUp16F6;
    real camNear17A9#1 = globals.camNear16F7;
    real camFar17A8#1 = globals.camFar16F8;
    real camFOV17A7#1 = globals.camFOV16F9;
    int iresU17A6#1 = globals.iresU16FB;
    int iresV17A5#1 = globals.iresV16FC;
    tensor[3] litdir17A4#2 = globals.litdir1709;
    int _t17C0#1 = 0;
    int _t17C2#1 = 1;
    int _t17C4#1 = ExtractFemItem<int,NumCell(Mesh)>(block17B1);
    int _t17C6#1 = ISub(_t17C4,_t17C2);
    int[] _t17C8#1 = Range(_t17C0,_t17C6);
    femData:MeshCell[] _t17CA#1 = <femData:MeshCell[]>{};
  FOREACH17CE:  preds = [ASSIGN17CB,NEXT17D3]
    foreach (_t17CC in _t17C8) on exit goto GASSIGN1AED
      femData:MeshCell[] _t17CD#3 = phi(_t17CA,_t17D1)
    femData:MeshCell _t17CF#1 = LoadFem<femData:MeshCell>(block17B1,_t17CC);
    femData:MeshCell[] _t17D1#1 = Append<femData:MeshCell>(_t17CD,_t17CF);
    goto FOREACH17CE
  GASSIGN1AED:  preds = [FOREACH17CE]
    globals.0cell_block1782 = _t17CD;
    femData:Space space17D7#2 = LoadFem<femData:Space>(0space04CF_intermedateGlobal17B0,block17B1);
    globals.space1783 = space17D7;
    femData:FemFunc U17DA#2 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal17AF,space17D7);
    globals.U1784 = U17DA;
    femData:MeshCell c117DD#2 = Subscript<femData:MeshCell[]>(_t17CD,cellChoice17AE);
    globals.c11785 = c117DD;
    int _t17E1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DD);
    femData:FuncCell _t17E3#2 = LoadFem<femData:FuncCell>(U17DA,_t17E1);
    femData:FemFunc _t17E7#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17E3);
    femData:Space _t17F2#1 = ExtractFem<femData:Space,femData:FemFunc>(_t17E7);
    int _t17FB#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t17E3);
    field F17FD#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t17FB,_t17F2,_t17E7);
    globals.F1786 = F17FD;
    kernel _t1800#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1802#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap17AD);
    field CM1804#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img1802,_t1800);
    globals.CM1787 = CM1804;
    globals.C1788 = F17FD;
    tensor[3] _t180A#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt17AB,camEye17AC);
    tensor[3] camN180C#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t180A,_t180A);
    globals.camN1789 = camN180C;
    tensor[3] _t180F#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN180C,camUp17AA);
    tensor[3] camU1811#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t180F,_t180F);
    globals.camU178A = camU1811;
    tensor[3] camV1814#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN180C,camU1811);
    globals.camV178B = camV1814;
    real camDist1819#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t180A);
    globals.camDist178C = camDist1819;
    real _t181C#1 = 0.314159265358979323846264338327950288e1;
    real _t181E#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV17A7,_t181C);
    real _t1820#1 = 0.36e3;
    real _t1822#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t181E,_t1820);
    real _t1824#1 = λ(T0[])<Tangent(T0)> (_t1822);
    real camVmax1826#2 = λ(T0[],T1[])<(T0 * T1)> (_t1824,camDist1819);
    globals.camVmax178D = camVmax1826;
    real _t1829#1 = IntToReal(iresU17A6);
    real _t182B#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1826,_t1829);
    real _t182D#1 = IntToReal(iresV17A5);
    real camUmax182F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t182B,_t182D);
    globals.camUmax178E = camUmax182F;
    real camNearVsp1832#1 = λ(T0[],T1[])<(T0 + T1)> (camNear17A9,camDist1819);
    globals.camNearVsp178F = camNearVsp1832;
    real camFarVsp1835#1 = λ(T0[],T1[])<(T0 + T1)> (camFar17A8,camDist1819);
    globals.camFarVsp1790 = camFarVsp1835;
    tensor[3,3] _t1838#1 = <tensor[3,3]>[camU1811,camV1814,camN180C];
    tensor[3,3] _t183A#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t1838);
    tensor[3] _t183C#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (litdir17A4,litdir17A4);
    tensor[3] litwsp183E#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t183A,_t183C);
    globals.litwsp1791 = litwsp183E;
    return
## strand
  strand ray (int ui1860#1, int vi1861#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY190A:  preds = []
        tensor[3] camEye187F#1 = globals.camEye16F4;
        bool camOrtho187E#2 = globals.camOrtho16FA;
        int iresU187D#1 = globals.iresU16FB;
        int iresV187C#1 = globals.iresV16FC;
        real rayStep187B#1 = globals.rayStep16FD;
        real refStep187A#1 = globals.refStep16FE;
        tensor[4] phong1879#4 = globals.phong1706;
        tensor[3] camN1878#1 = globals.camN1789;
        tensor[3] camU1877#1 = globals.camU178A;
        tensor[3] camV1876#1 = globals.camV178B;
        real camDist1875#1 = globals.camDist178C;
        real camVmax1874#2 = globals.camVmax178D;
        real camUmax1873#2 = globals.camUmax178E;
        real camNearVsp1872#1 = globals.camNearVsp178F;
        real _t189E#1 = λ(T0[])<Neg(T0)> (camUmax1873);
        real _t18A0#2 = -0.5e0;
        real _t18A2#1 = IntToReal(ui1860);
        real _t18A4#1 = IntToReal(iresU187D);
        real _t18A6#2 = 0.5e0;
        real _t18A8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18A4,_t18A6);
        real rayU18AA#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t189E,camUmax1873,_t18A0,_t18A2,_t18A8);
        real _t18AC#1 = λ(T0[])<Neg(T0)> (camVmax1874);
        real _t18B0#1 = IntToReal(vi1861);
        real _t18B2#1 = IntToReal(iresV187C);
        real _t18B6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18B2,_t18A6);
        real rayV18B8#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t18AC,camVmax1874,_t18A0,_t18B0,_t18B6);
        tensor[3] _t18BC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU18AA,camU1877);
        tensor[3] _t18BE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV18B8,camV1876);
        tensor[3] UV18C0#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t18BC,_t18BE);
        if camOrtho187E then goto JOIN18C3 else goto ASSIGN18C8
      JOIN18C3:  preds = [COND18CF,ASSIGN1AF6]
        tensor[3] _t18C5#1 = phi(UV18C0,_t18CD)
        tensor[3] rayOrig18D0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye187F,_t18C5);
        if camOrtho187E then goto ASSIGN18D5 else goto ASSIGN18DE
      ASSIGN18D5:  preds = [COND18DF]
        real _t18D4#3 = 0.e0;
        tensor[3] _t18DA#1 = <tensor[3]>[_t18D4,_t18D4,_t18D4];
        goto JOIN18D3
      JOIN18D3:  preds = [ASSIGN1AF7,ASSIGN18DE]
        tensor[3] _t18DB#1 = phi(_t18DA,_t18DD)
        tensor[3] rayVec18E0#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1878,_t18DB);
        real _t18E2#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec18E0);
        real _t18E4#1 = λ(T0[],T1[])<(T0 * T1)> (_t18E2,rayStep187B);
        real alphaFix18E6#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18E4,refStep187A);
        tensor[3] _t18E8#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (rayVec18E0,rayVec18E0);
        tensor[3] eyeDir18EA#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t18E8);
        real phKa18EC#1 = TensorIndex<tensor[4],[0]>(phong1879);
        real phKd18EE#1 = TensorIndex<tensor[4],[1]>(phong1879);
        real phKs18F0#1 = TensorIndex<tensor[4],[2]>(phong1879);
        real phSp18F2#1 = TensorIndex<tensor[4],[3]>(phong1879);
        real _t18F4#8 = 0.e0;
        tensor[4] rgba18FC#1 = <tensor[4]>[_t18F4,_t18F4,_t18F4,_t18F4];
        tensor[3] rgb1906#1 = <tensor[3]>[_t18F4,_t18F4,_t18F4];
        real transp1908#1 = 0.1e1;
        self.rayU = rayU18AA;
        self.rayV = rayV18B8;
        self.rayN = camNearVsp1872;
        self.UV = UV18C0;
        self.rayOrig = rayOrig18D0;
        self.rayVec = rayVec18E0;
        self.alphaFix = alphaFix18E6;
        self.eyeDir = eyeDir18EA;
        self.phKa = phKa18EC;
        self.phKd = phKd18EE;
        self.phKs = phKs18F0;
        self.phSp = phSp18F2;
        self.rgba = rgba18FC;
        self.raw = _t18F4;
        self.rgb = rgb1906;
        self.transp = transp1908;
        return
      ASSIGN18DE:  preds = [COND18DF]
        tensor[3] _t18DD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (UV18C0,camDist1875);
        goto JOIN18D3
      ASSIGN18C8:  preds = [COND18CF]
        real _t18C7#3 = 0.e0;
        tensor[3] _t18CD#1 = <tensor[3]>[_t18C7,_t18C7,_t18C7];
        goto JOIN18C3
    end state init
    method update
        ENTRY1A98:  preds = []
          femData:Mesh block192C#1 = globals.block16EF;
          real rayStep192B#1 = globals.rayStep16FD;
          real transp0192A#1 = globals.transp016FF;
          real thick1929#1 = globals.thick1700;
          real fStrTh1928#1 = globals.fStrTh1701;
          real fMaskTh1927#1 = globals.fMaskTh1702;
          real fBias1926#1 = globals.fBias1703;
          real maxAlpha1925#1 = globals.maxAlpha1704;
          tensor[3] mcNear1924#1 = globals.mcNear1707;
          tensor[3] mcFar1923#1 = globals.mcFar1708;
          tensor[2] cminmax1922#2 = globals.cminmax170A;
          field F1921#2 = globals.F1786;
          field CM1920#1 = globals.CM1787;
          field C191F#1 = globals.C1788;
          real camNearVsp191E#1 = globals.camNearVsp178F;
          real camFarVsp191D#2 = globals.camFarVsp1790;
          tensor[3] litwsp191C#2 = globals.litwsp1791;
          real rayU193E#0 = self.rayU;
          real rayV193F#0 = self.rayV;
          real rayN1940#1 = self.rayN;
          tensor[3] UV1941#0 = self.UV;
          tensor[3] rayOrig1942#1 = self.rayOrig;
          tensor[3] rayVec1943#1 = self.rayVec;
          real alphaFix1944#1 = self.alphaFix;
          tensor[3] eyeDir1945#1 = self.eyeDir;
          real phKa1946#1 = self.phKa;
          real phKd1947#1 = self.phKd;
          real phKs1948#2 = self.phKs;
          real phSp1949#1 = self.phSp;
          tensor[4] rgba194A#0 = self.rgba;
          real raw194B#0 = self.raw;
          tensor[3] rgb194C#1 = self.rgb;
          real transp194D#2 = self.transp;
          real rayN195E#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1940,rayStep192B);
          bool _t1960#1 = GT<real>(rayN195E,camFarVsp191D);
          if _t1960 then goto SAVE1964 else goto JOIN1962
        SAVE1964:  preds = [COND1968]
          self.rayN = rayN195E;
          stabilize
          goto JOIN1962
        JOIN1962:  preds = [*STABILIZE1963,COND1968]
          tensor[3] _t1969#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN195E,rayVec1943);
          tensor[3] pos196B#6 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1942,_t1969);
          femData:RefCell _t1970#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block192C);
          real _t1974#1 = 0.1e-8;
          bool _t1976#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1970,pos196B,_t1974);
          if _t1976 then goto ASSIGN197C else goto ASSIGN19B4
        ASSIGN197C:  preds = [COND19B5]
          field _t197B#2 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1921);
          field _t197D#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t197B);
          tensor[3,3] _t197F#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t197D,pos196B);
          (real[3] _t1981#1,tensor[3][3] evecs1982#0) = Eigen3x3(_t197F);
          int _t1984#1 = 1;
          real _t1986#1 = Subscript<real[3]>(_t1981,_t1984);
          real _t1988#1 = λ(T0[])<Neg(T0)> (_t1986);
          tensor[3] _t198C#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t197B,pos196B);
          real _t198E#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t198C);
          real _t1990#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1926,_t198E);
          real _t1992#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1988,_t1990);
          bool _t1996#1 = GT<real>(_t1992,fStrTh1928);
          if _t1996 then goto ASSIGN199C else goto ASSIGN19AE
        ASSIGN199C:  preds = [COND19AF]
          real _t199B#1 = 0.1e1;
          bool _t199F#1 = GTE<real>(_t199B,fMaskTh1927);
          if _t199F then goto ASSIGN19A3 else goto ASSIGN19A8
        ASSIGN19A3:  preds = [COND19A9]
          bool _t19A2#1 = true;
          goto JOIN19A1
        JOIN19A1:  preds = [ASSIGN19A3,ASSIGN19A8]
          bool _t19A5#1 = phi(_t19A2,_t19A7)
          goto JOIN1998
        JOIN1998:  preds = [JOIN19A1,ASSIGN19AE]
          bool _t19AB#1 = phi(_t19A5,_t19AD)
          goto JOIN1978
        JOIN1978:  preds = [JOIN1998,ASSIGN19B4]
          bool _t19B1#1 = phi(_t19AB,_t19B3)
          bool _t19B8#1 = BNot(_t19B1);
          if _t19B8 then goto SAVE19BC else goto JOIN19BA
        SAVE19BC:  preds = [COND19C0]
          self.rayN = rayN195E;
          active
          goto JOIN19BA
        JOIN19BA:  preds = [*ACTIVE19BB,COND19C0]
          field _t19C2#2 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1921);
          field _t19C4#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t19C2);
          tensor[3,3] _t19C6#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t19C4,pos196B);
          (real[3] evals19C9#2,tensor[3][3] E19C8#2) = Eigen3x3(_t19C6);
          int _t19D4#2 = 2;
          tensor[3] _t19D6#2 = Subscript<tensor[3][3]>(E19C8,_t19D4);
          tensor[3,3] _t19DC#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t19D6,_t19D6);
          real _t19E0#1 = Subscript<real[3]>(evals19C9,_t19D4);
          tensor[3,3] _t19E2#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t19DC,_t19E0);
          int _t19E4#2 = 1;
          tensor[3] _t19E6#2 = Subscript<tensor[3][3]>(E19C8,_t19E4);
          tensor[3,3] _t19EC#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t19E6,_t19E6);
          real _t19F0#1 = Subscript<real[3]>(evals19C9,_t19E4);
          tensor[3,3] _t19F2#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t19EC,_t19F0);
          tensor[3,3] _t19F4#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t19E2,_t19F2);
          tensor[3,3] _t19F6#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t19F4);
          tensor[3] _t19FA#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t19C2,pos196B);
          tensor[3] _t19FC#4 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t19F6,_t19FA);
          real _t1A00#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t19FC);
          real _t1A03#6 = 0.e0;
          real _t1A05#9 = 0.1e1;
          real _t1A07#1 = 0.15e1;
          real _t1A0B#1 = λ(T0[])<Abs(T0)> (_t1A00);
          real _t1A0D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A0B,thick1929);
          real _t1A0F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A05,_t1A0D);
          real _t1A11#1 = λ(T0[],T1[])<(T0 * T1)> (_t1A07,_t1A0F);
          real _t1A13#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1A03,_t1A05,_t1A11);
          real _t1A15#2 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1925,_t1A13);
          bool _t1A1B#1 = EQ<real>(_t1A15,_t1A03);
          if _t1A1B then goto SAVE1A1F else goto JOIN1A1D
        SAVE1A1F:  preds = [COND1A23]
          self.rayN = rayN195E;
          active
          goto JOIN1A1D
        JOIN1A1D:  preds = [*ACTIVE1A1E,COND1A23]
          real _t1A28#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A05,_t1A15);
          real _t1A2A#1 = MathFn<pow>(_t1A28,alphaFix1944);
          real aa1A2C#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1A05,_t1A2A);
          tensor[3] _t1A2E#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t19FC,_t19FC);
          tensor[3] snorm1A30#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1A2E);
          real _t1A32#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1A30,litwsp191C);
          real dcomp1A36#1 = λ(T0[])<(T0)^2> (_t1A32);
          bool _t1A3C#1 = NEQ<real>(phKs1948,_t1A03);
          if _t1A3C then goto ASSIGN1A40 else goto JOIN1A3E
        ASSIGN1A40:  preds = [COND1A4A]
          tensor[3] _t1A3F#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1945,litwsp191C);
          tensor[3] _t1A41#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1A3F,_t1A3F);
          real _t1A43#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1A30,_t1A41);
          real _t1A45#1 = λ(T0[])<Abs(T0)> (_t1A43);
          real scomp1A47#1 = MathFn<pow>(_t1A45,phSp1949);
          goto JOIN1A3E
        JOIN1A3E:  preds = [ASSIGN1A49,COND1A4A]
          real scomp1A48#1 = phi(scomp1A47,_t1A03)
          tensor[3] dcol1A4B#1 = λ(T0[3],T1[3],T2[],T3[],T4[])<(T0_{i0} + (((T3) - (T2)) / ( (T4) - (T2)) * (T1_{i0}) - (T0_{i0})))>_{3} (mcNear1924,mcFar1923,camNearVsp191E,rayN195E,camFarVsp191D);
          real cmin1A4D#2 = TensorIndex<tensor[2],[0]>(cminmax1922);
          real cmax1A4F#2 = TensorIndex<tensor[2],[1]>(cminmax1922);
          tensor[3] mcol1A57#2 = <tensor[3]>[_t1A05,_t1A05,_t1A05];
          bool _t1A59#1 = NEQ<real>(cmin1A4D,cmax1A4F);
          if _t1A59 then goto ASSIGN1B0E else goto JOIN1A5B
        ASSIGN1B0E:  preds = [COND1A69]
          tensor[3] _t1A60#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos196B,_t19FC);
          real _t1A62#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (C191F,_t1A60);
          real _t1A64#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1A03,_t1A05,cmin1A4D,_t1A62,cmax1A4F);
          tensor[3] mcol1A66#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (CM1920,_t1A64);
          goto JOIN1A5B
        JOIN1A5B:  preds = [ASSIGN1A68,COND1A69]
          tensor[3] mcol1A67#1 = phi(mcol1A66,mcol1A57)
          real _t1A6A#1 = λ(T0[],T1[])<(T0 * T1)> (transp194D,aa1A2C);
          real _t1A6C#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1947,dcomp1A36);
          real _t1A6E#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1946,_t1A6C);
          tensor[3] _t1A70#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (dcol1A4B,mcol1A67);
          tensor[3] _t1A72#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A6E,_t1A70);
          real _t1A74#1 = λ(T0[],T1[])<(T0 * T1)> (phKs1948,scomp1A48);
          tensor[3] _t1A7E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A74,mcol1A57);
          tensor[3] _t1A80#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1A72,_t1A7E);
          tensor[3] _t1A82#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A6A,_t1A80);
          tensor[3] rgb1A84#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb194C,_t1A82);
          real _t1A88#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A05,aa1A2C);
          real transp1A8A#2 = λ(T0[],T1[])<(T0 * T1)> (transp194D,_t1A88);
          bool _t1A8C#1 = LT<real>(transp1A8A,transp0192A);
          if _t1A8C then goto SAVE1A93 else goto JOIN1A8E
        SAVE1A93:  preds = [COND1A97]
          self.rayN = rayN195E;
          self.rgb = rgb1A84;
          self.transp = _t1A03;
          stabilize
          goto JOIN1A8E
        JOIN1A8E:  preds = [*STABILIZE1A92,COND1A97]
          real transp1A90#1 = phi(transp1A8A)
          self.rayN = rayN195E;
          self.rgb = rgb1A84;
          self.transp = transp1A90;
          active
        ASSIGN19A8:  preds = [COND19A9]
          bool _t19A7#1 = false;
          goto JOIN19A1
        ASSIGN19AE:  preds = [COND19AF]
          bool _t19AD#1 = false;
          goto JOIN1998
        ASSIGN19B4:  preds = [COND19B5]
          bool _t19B3#1 = false;
          goto JOIN1978
    end update
    method stabilize
        ENTRY1AD7:  preds = []
          real rayU1A9E#0 = self.rayU;
          real rayV1A9F#0 = self.rayV;
          real rayN1AA0#0 = self.rayN;
          tensor[3] UV1AA1#0 = self.UV;
          tensor[3] rayOrig1AA2#0 = self.rayOrig;
          tensor[3] rayVec1AA3#0 = self.rayVec;
          real alphaFix1AA4#0 = self.alphaFix;
          tensor[3] eyeDir1AA5#0 = self.eyeDir;
          real phKa1AA6#0 = self.phKa;
          real phKd1AA7#0 = self.phKd;
          real phKs1AA8#0 = self.phKs;
          real phSp1AA9#0 = self.phSp;
          tensor[4] rgba1AAA#1 = self.rgba;
          real raw1AAB#0 = self.raw;
          tensor[3] rgb1AAC#3 = self.rgb;
          real transp1AAD#2 = self.transp;
          real _t1ABE#2 = 0.1e1;
          bool _t1AC0#1 = LT<real>(transp1AAD,_t1ABE);
          if _t1AC0 then goto ASSIGN1B13 else goto JOIN1AC2
        ASSIGN1B13:  preds = [COND1AD6]
          real aa1AC5#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1ABE,transp1AAD);
          real _t1AC7#1 = TensorIndex<tensor[3],[0]>(rgb1AAC);
          real _t1AC9#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1AC7,aa1AC5);
          real _t1ACB#1 = TensorIndex<tensor[3],[1]>(rgb1AAC);
          real _t1ACD#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ACB,aa1AC5);
          real _t1ACF#1 = TensorIndex<tensor[3],[2]>(rgb1AAC);
          real _t1AD1#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ACF,aa1AC5);
          tensor[4] rgba1AD3#1 = <tensor[4]>[_t1AC9,_t1ACD,_t1AD1,aa1AC5];
          goto JOIN1AC2
        JOIN1AC2:  preds = [ASSIGN1AD5,COND1AD6]
          tensor[4] rgba1AD4#1 = phi(rgba1AD3,rgba1AAA)
          self.rgba = rgba1AD4;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY185E:  preds = []
      int iresU1844#1 = globals.iresU16FB;
      int iresV1843#1 = globals.iresV16FC;
      int _t1847#2 = 0;
      int _t1849#2 = 1;
      int _t184B#1 = ISub(iresV1843,_t1849);
      int[] _t184D#1 = Range(_t1847,_t184B);
    FOREACH1850:  preds = [ASSIGN184E,NEXT185D]
      foreach (vi184F in _t184D) on exit goto RETURN185F
      int _t1855#1 = ISub(iresU1844,_t1849);
      int[] _t1857#1 = Range(_t1847,_t1855);
    FOREACH185A:  preds = [ASSIGN1ADE,NEXT185C]
      foreach (ui1859 in _t1857) on exit goto NEXT185D
      new ray(ui1859,vi184F);
      goto FOREACH185A
    NEXT185D:  preds = [FOREACH185A]
      goto FOREACH1850
    RETURN185F:  preds = [FOREACH1850]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block16EF (block) = <no-default>
  input 0space04CF_intermedateGlobal16F0 (space) = <no-default>
  input 0U04D1_intermedateGlobal16F1 (U) = <no-default>
  input cellChoice16F2 (cellChoice) = <no-default>
  input cmap16F3 (cmap) = image("cmap.nrrd")
  input camEye16F4 (camEye) = <default>
  input camAt16F5 (camAt) = <default>
  input camUp16F6 (camUp) = <default>
  input camNear16F7 (camNear) = <default>
  input camFar16F8 (camFar) = <default>
  input camFOV16F9 (camFOV) = <default>
  input camOrtho16FA (camOrtho) = <default>
  input iresU16FB (iresU) = <default>
  input iresV16FC (iresV) = <default>
  input rayStep16FD (rayStep) = <default>
  input refStep16FE (refStep) = <default>
  input transp016FF (transp0) = <default>
  input thick1700 (thick) = <default>
  input fStrTh1701 (fStrTh) = <default>
  input fMaskTh1702 (fMaskTh) = <default>
  input fBias1703 (fBias) = <default>
  input maxAlpha1704 (maxAlpha) = <default>
  input light1705 (light) = <default>
  input phong1706 (phong) = <default>
  input mcNear1707 (mcNear) = <default>
  input mcFar1708 (mcFar) = <default>
  input litdir1709 (litdir) = <default>
  input cminmax170A (cminmax) = <default>
  global tensor[3] camN1789
  global tensor[3] camU178A
  global tensor[3] camV178B
  global real camDist178C
  global real camVmax178D
  global real camUmax178E
  global real camNearVsp178F
  global real camFarVsp1790
  global tensor[3] litwsp1791
## functions
  function int[2] nextCell417A3 (int faceIdx1792#1, int cell1793#1, femData:Mesh mesh1794#1) {
    ENTRY17A2:  preds = []
      int _t1795#1 = 12;
      int _t1797#1 = IMul(cell1793,_t1795);
      int _t1799#1 = 2;
      int _t179B#1 = IMul(faceIdx1792,_t1799);
      int _t179D#1 = IAdd(_t1797,_t179B);
      int[2] _t179F#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1794,_t179D);
      return _t179F
}
## input initialization
  ENTRY1780:  preds = []
    real _t170B#13 = 0.e0;
    real _t170D#1 = -0.2e1;
    tensor[3] camEye1711#1 = <tensor[3]>[_t170B,_t170D,_t170B];
    globals.camEye16F4 = camEye1711;
    tensor[3] camAt171A#1 = <tensor[3]>[_t170B,_t170B,_t170B];
    globals.camAt16F5 = camAt171A;
    real _t1721#5 = 0.1e1;
    tensor[3] camUp1723#1 = <tensor[3]>[_t170B,_t170B,_t1721];
    globals.camUp16F6 = camUp1723;
    real camNear1726#1 = -0.4e1;
    globals.camNear16F7 = camNear1726;
    real camFar1729#1 = 0.4e1;
    globals.camFar16F8 = camFar1729;
    real camFOV172C#1 = 0.1e2;
    globals.camFOV16F9 = camFOV172C;
    bool camOrtho172F#2 = false;
    globals.camOrtho16FA = camOrtho172F;
    int iresU1732#2 = 100;
    globals.iresU16FB = iresU1732;
    globals.iresV16FC = iresU1732;
    real rayStep1738#2 = 0.1e-3;
    globals.rayStep16FD = rayStep1738;
    globals.refStep16FE = rayStep1738;
    real transp0173E#1 = 0.5e-2;
    globals.transp016FF = transp0173E;
    real thick1741#1 = 0.1e-1;
    globals.thick1700 = thick1741;
    globals.fStrTh1701 = _t170B;
    globals.fMaskTh1702 = _t170B;
    real fBias174A#2 = 0.1e0;
    globals.fBias1703 = fBias174A;
    globals.maxAlpha1704 = _t1721;
    globals.light1705 = camOrtho172F;
    real _t1755#1 = 0.7e0;
    real _t1757#1 = 0.2e0;
    real _t1759#1 = 0.1e3;
    tensor[4] phong175B#1 = <tensor[4]>[fBias174A,_t1755,_t1757,_t1759];
    globals.phong1706 = phong175B;
    tensor[3] mcNear1764#2 = <tensor[3]>[_t1721,_t1721,_t1721];
    globals.mcNear1707 = mcNear1764;
    globals.mcFar1708 = mcNear1764;
    real _t1772#1 = -0.1e1;
    tensor[3] litdir1776#1 = <tensor[3]>[_t170B,_t1772,_t170B];
    globals.litdir1709 = litdir1776;
    tensor[2] cminmax177D#1 = <tensor[2]>[_t170B,_t170B];
    globals.cminmax170A = cminmax177D;
    return
## global-variable initialization
  ENTRY1841:  preds = []
    femData:Mesh block17B1#3 = globals.block16EF;
    femData:Space 0space04CF_intermedateGlobal17B0#1 = globals.0space04CF_intermedateGlobal16F0;
    femData:FemFunc 0U04D1_intermedateGlobal17AF#1 = globals.0U04D1_intermedateGlobal16F1;
    int cellChoice17AE#1 = globals.cellChoice16F2;
    image(IMAGE1D<double[3]>) cmap17AD#1 = globals.cmap16F3;
    tensor[3] camEye17AC#17 = globals.camEye16F4;
    tensor[3] camAt17AB#17 = globals.camAt16F5;
    tensor[3] camUp17AA#4 = globals.camUp16F6;
    real camNear17A9#1 = globals.camNear16F7;
    real camFar17A8#1 = globals.camFar16F8;
    real camFOV17A7#2 = globals.camFOV16F9;
    int iresU17A6#1 = globals.iresU16FB;
    int iresV17A5#1 = globals.iresV16FC;
    tensor[3] litdir17A4#2 = globals.litdir1709;
    int _t17C0#1 = 0;
    int _t17C2#1 = 1;
    int _t17C4#1 = ExtractFemItem<int,NumCell(Mesh)>(block17B1);
    int _t17C6#1 = ISub(_t17C4,_t17C2);
    int[] _t17C8#1 = Range(_t17C0,_t17C6);
    femData:MeshCell[] _t17CA#1 = <femData:MeshCell[]>{};
  FOREACH17CE:  preds = [ASSIGN17CB,NEXT17D3]
    foreach (_t17CC in _t17C8) on exit goto ASSIGN17D8
      femData:MeshCell[] _t17CD#2 = phi(_t17CA,_t17D1)
    femData:MeshCell _t17CF#1 = LoadFem<femData:MeshCell>(block17B1,_t17CC);
    femData:MeshCell[] _t17D1#1 = Append<femData:MeshCell>(_t17CD,_t17CF);
    goto FOREACH17CE
  ASSIGN17D8:  preds = [FOREACH17CE]
    femData:Space space17D7#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal17B0,block17B1);
    femData:FemFunc U17DA#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal17AF,space17D7);
    femData:MeshCell c117DD#1 = Subscript<femData:MeshCell[]>(_t17CD,cellChoice17AE);
    int _t17E1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DD);
    femData:FuncCell _t17E3#2 = LoadFem<femData:FuncCell>(U17DA,_t17E1);
    femData:FemFunc _t17E7#12 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17E3);
    femData:Space _t17F2#11 = ExtractFem<femData:Space,femData:FemFunc>(_t17E7);
    int _t17FB#11 = ExtractFemItem<int,CellIndex(FuncCell)>(_t17E3);
    kernel _t1800#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1802#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap17AD);
    tensor[3] camN180C#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt17AB,camEye17AC,camAt17AB,camEye17AC);
    globals.camN1789 = camN180C;
    tensor[3] camU1811#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt17AB,camEye17AC,camAt17AB,camEye17AC,camUp17AA,camAt17AB,camEye17AC,camAt17AB,camEye17AC,camUp17AA);
    globals.camU178A = camU1811;
    tensor[3] camV1814#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * (T0_{i1}) - (T1_{i1}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T0_{i3}) - (T1_{i3}) * (T0_{i3}) - (T1_{i3})))>(i3=0..2))) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii2,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * (1) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2)))>(i4=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt17AB,camEye17AC,camAt17AB,camEye17AC,camAt17AB,camEye17AC,camAt17AB,camEye17AC,camUp17AA,camAt17AB,camEye17AC,camAt17AB,camEye17AC,camUp17AA);
    globals.camV178B = camV1814;
    real camDist1819#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt17AB,camEye17AC);
    globals.camDist178C = camDist1819;
    real _t181C#2 = 0.314159265358979323846264338327950288e1;
    real _t1820#2 = 0.36e3;
    real camVmax1826#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV17A7,_t181C,_t1820,camAt17AB,camEye17AC);
    globals.camVmax178D = camVmax1826;
    real _t1829#1 = IntToReal(iresU17A6);
    real _t182D#1 = IntToReal(iresV17A5);
    real camUmax182F#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV17A7,_t181C,_t1820,camAt17AB,camEye17AC,_t1829,_t182D);
    globals.camUmax178E = camUmax182F;
    real camNearVsp1832#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear17A9,camAt17AB,camEye17AC);
    globals.camNearVsp178F = camNearVsp1832;
    real camFarVsp1835#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar17A8,camAt17AB,camEye17AC);
    globals.camFarVsp1790 = camFarVsp1835;
    tensor[3,3] _t1838#1 = <tensor[3,3]>[camU1811,camV1814,camN180C];
    tensor[3] litwsp183E#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t1838,litdir17A4,litdir17A4);
    globals.litwsp1791 = litwsp183E;
    return
## strand
  strand ray (int ui1860#1, int vi1861#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY190A:  preds = []
        tensor[3] camEye187F#1 = globals.camEye16F4;
        bool camOrtho187E#2 = globals.camOrtho16FA;
        int iresU187D#1 = globals.iresU16FB;
        int iresV187C#1 = globals.iresV16FC;
        real rayStep187B#1 = globals.rayStep16FD;
        real refStep187A#1 = globals.refStep16FE;
        tensor[4] phong1879#4 = globals.phong1706;
        tensor[3] camN1878#4 = globals.camN1789;
        tensor[3] camU1877#2 = globals.camU178A;
        tensor[3] camV1876#2 = globals.camV178B;
        real camDist1875#1 = globals.camDist178C;
        real camVmax1874#6 = globals.camVmax178D;
        real camUmax1873#6 = globals.camUmax178E;
        real camNearVsp1872#1 = globals.camNearVsp178F;
        real _t18A0#6 = -0.5e0;
        real _t18A2#3 = IntToReal(ui1860);
        real _t18A4#3 = IntToReal(iresU187D);
        real _t18A6#6 = 0.5e0;
        real rayU18AA#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1873,camUmax1873,_t18A0,_t18A2,_t18A4,_t18A6);
        real _t18B0#3 = IntToReal(vi1861);
        real _t18B2#3 = IntToReal(iresV187C);
        real rayV18B8#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax1874,camVmax1874,_t18A0,_t18B0,_t18B2,_t18A6);
        tensor[3] UV18C0#2 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax1873,camUmax1873,_t18A0,_t18A2,_t18A4,_t18A6,camU1877,camVmax1874,camVmax1874,_t18A0,_t18B0,_t18B2,_t18A6,camV1876);
        if camOrtho187E then goto JOIN18C3 else goto ASSIGN18C8
      JOIN18C3:  preds = [COND18CF,ASSIGN1AF6]
        tensor[3] _t18C5#1 = phi(UV18C0,_t18CD)
        tensor[3] rayOrig18D0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye187F,_t18C5);
        if camOrtho187E then goto ASSIGN18D5 else goto ASSIGN1B2B
      ASSIGN18D5:  preds = [COND18DF]
        real _t18D4#3 = 0.e0;
        tensor[3] _t18DA#1 = <tensor[3]>[_t18D4,_t18D4,_t18D4];
        goto JOIN18D3
      JOIN18D3:  preds = [ASSIGN1AF7,ASSIGN1B2B]
        tensor[3] _t18DB#4 = phi(_t18DA,_t18DD)
        tensor[3] rayVec18E0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1878,_t18DB);
        real alphaFix18E6#1 = λ(T0[3],T1[3],T2[],T3[])<((T2 * Sqrt(Σ(i0=0..2)<(((T0_{i0} + T1_{i0}) * (T0_{i0} + T1_{i0})))>(i0=0..2)))) / ( T3)> (camN1878,_t18DB,rayStep187B,refStep187A);
        tensor[3] eyeDir18EA#1 = λ(T0[3],T1[3],T2[3],T3[3])<Neg(((T0_{i0} + T1_{i0}) * (1) / ( Sqrt(Σ(i2=0..2)<(((T0_{i2} + T1_{i2}) * (T0_{i2} + T1_{i2})))>(i2=0..2)))))>_{3} (camN1878,_t18DB,camN1878,_t18DB);
        real phKa18EC#1 = TensorIndex<tensor[4],[0]>(phong1879);
        real phKd18EE#1 = TensorIndex<tensor[4],[1]>(phong1879);
        real phKs18F0#1 = TensorIndex<tensor[4],[2]>(phong1879);
        real phSp18F2#1 = TensorIndex<tensor[4],[3]>(phong1879);
        real _t18F4#8 = 0.e0;
        tensor[4] rgba18FC#1 = <tensor[4]>[_t18F4,_t18F4,_t18F4,_t18F4];
        tensor[3] rgb1906#1 = <tensor[3]>[_t18F4,_t18F4,_t18F4];
        real transp1908#1 = 0.1e1;
        self.rayU = rayU18AA;
        self.rayV = rayV18B8;
        self.rayN = camNearVsp1872;
        self.UV = UV18C0;
        self.rayOrig = rayOrig18D0;
        self.rayVec = rayVec18E0;
        self.alphaFix = alphaFix18E6;
        self.eyeDir = eyeDir18EA;
        self.phKa = phKa18EC;
        self.phKd = phKd18EE;
        self.phKs = phKs18F0;
        self.phSp = phSp18F2;
        self.rgba = rgba18FC;
        self.raw = _t18F4;
        self.rgb = rgb1906;
        self.transp = transp1908;
        return
      ASSIGN1B2B:  preds = [COND18DF]
        tensor[3] _t18DD#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3],T14[])<((((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))) / ( T14)>_{3} (camUmax1873,camUmax1873,_t18A0,_t18A2,_t18A4,_t18A6,camU1877,camVmax1874,camVmax1874,_t18A0,_t18B0,_t18B2,_t18A6,camV1876,camDist1875);
        goto JOIN18D3
      ASSIGN18C8:  preds = [COND18CF]
        real _t18C7#3 = 0.e0;
        tensor[3] _t18CD#1 = <tensor[3]>[_t18C7,_t18C7,_t18C7];
        goto JOIN18C3
    end state init
    method update
        ENTRY1A98:  preds = []
          femData:Mesh block192C#1 = globals.block16EF;
          real rayStep192B#4 = globals.rayStep16FD;
          real transp0192A#1 = globals.transp016FF;
          real thick1929#2 = globals.thick1700;
          real fStrTh1928#1 = globals.fStrTh1701;
          real fMaskTh1927#1 = globals.fMaskTh1702;
          real fBias1926#1 = globals.fBias1703;
          real maxAlpha1925#2 = globals.maxAlpha1704;
          tensor[3] mcNear1924#1 = globals.mcNear1707;
          tensor[3] mcFar1923#1 = globals.mcFar1708;
          tensor[2] cminmax1922#2 = globals.cminmax170A;
          real camNearVsp191E#1 = globals.camNearVsp178F;
          real camFarVsp191D#2 = globals.camFarVsp1790;
          tensor[3] litwsp191C#3 = globals.litwsp1791;
          real rayN1940#4 = self.rayN;
          tensor[3] rayOrig1942#2 = self.rayOrig;
          tensor[3] rayVec1943#2 = self.rayVec;
          real alphaFix1944#1 = self.alphaFix;
          tensor[3] eyeDir1945#2 = self.eyeDir;
          real phKa1946#1 = self.phKa;
          real phKd1947#1 = self.phKd;
          real phKs1948#2 = self.phKs;
          real phSp1949#1 = self.phSp;
          tensor[3] rgb194C#1 = self.rgb;
          real transp194D#2 = self.transp;
          real rayN195E#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1940,rayStep192B);
          bool _t1960#1 = GT<real>(rayN195E,camFarVsp191D);
          if _t1960 then goto SAVE1964 else goto JOIN1962
        SAVE1964:  preds = [COND1968]
          self.rayN = rayN195E;
          stabilize
          goto JOIN1962
        JOIN1962:  preds = [*STABILIZE1963,COND1968]
          tensor[3] pos196B#11 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig1942,rayN1940,rayStep192B,rayVec1943);
          femData:RefCell _t1970#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block192C);
          real _t1974#1 = 0.1e-8;
          bool _t1976#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1970,pos196B,_t1974);
          if _t1976 then goto ASSIGN1B30 else goto ASSIGN19B4
        ASSIGN1B30:  preds = [COND19B5]
          tensor[3,3] _t197F#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t17FB,_t17F2,_t17E7,pos196B);
          (real[3] _t1981#1,tensor[3][3] evecs1982#0) = Eigen3x3(_t197F);
          int _t1984#1 = 1;
          real _t1986#1 = Subscript<real[3]>(_t1981,_t1984);
          real _t1992#1 = λ(T0[],T1[],INT2,FEM(fns_t)3,FEM(func_t)4,T5[3])<(Neg(T0)) / ( (T1 + Sqrt(Σ(i0=0..2)<((Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5) * Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5)))>(i0=0..2))))> (_t1986,fBias1926,_t17FB,_t17F2,_t17E7,pos196B);
          bool _t1996#1 = GT<real>(_t1992,fStrTh1928);
          if _t1996 then goto ASSIGN199C else goto ASSIGN19AE
        ASSIGN199C:  preds = [COND19AF]
          real _t199B#1 = 0.1e1;
          bool _t199F#1 = GTE<real>(_t199B,fMaskTh1927);
          if _t199F then goto ASSIGN19A3 else goto ASSIGN19A8
        ASSIGN19A3:  preds = [COND19A9]
          bool _t19A2#1 = true;
          goto JOIN19A1
        JOIN19A1:  preds = [ASSIGN19A3,ASSIGN19A8]
          bool _t19A5#1 = phi(_t19A2,_t19A7)
          goto JOIN1998
        JOIN1998:  preds = [JOIN19A1,ASSIGN19AE]
          bool _t19AB#1 = phi(_t19A5,_t19AD)
          goto JOIN1978
        JOIN1978:  preds = [JOIN1998,ASSIGN19B4]
          bool _t19B1#1 = phi(_t19AB,_t19B3)
          bool _t19B8#1 = BNot(_t19B1);
          if _t19B8 then goto SAVE19BC else goto JOIN19BA
        SAVE19BC:  preds = [COND19C0]
          self.rayN = rayN195E;
          active
          goto JOIN19BA
        JOIN19BA:  preds = [*ACTIVE19BB,COND19C0]
          tensor[3,3] _t19C6#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t17FB,_t17F2,_t17E7,pos196B);
          (real[3] evals19C9#2,tensor[3][3] E19C8#2) = Eigen3x3(_t19C6);
          int _t19D4#2 = 2;
          tensor[3] _t19D6#14 = Subscript<tensor[3][3]>(E19C8,_t19D4);
          real _t19E0#7 = Subscript<real[3]>(evals19C9,_t19D4);
          int _t19E4#2 = 1;
          tensor[3] _t19E6#14 = Subscript<tensor[3][3]>(E19C8,_t19E4);
          real _t19F0#7 = Subscript<real[3]>(evals19C9,_t19E4);
          real _t1A03#7 = 0.e0;
          real _t1A05#12 = 0.1e1;
          real _t1A07#2 = 0.15e1;
          real _t1A15#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[3],T6[3],T7[],T8[3],T9[3],T10[],INT11,FEM(fns_t)12,FEM(func_t)13,T14[3],T15[])<(T0 * Clamp <T1,T2,(T3 * (T2) - ((Abs(Sqrt(Σ(i0=0..2)<((Σ(i1=0..2)<((Neg((((T5_{i0} * T5_{i1})) / ( T7) + ((T8_{i0} * T8_{i1})) / ( T10))) * Probe(femV(noFunc, 11, 12, 13)⊛Basis()dx_{i1},T14)))>(i1=0..2) * Σ(i1=0..2)<((Neg((((T5_{i0} * T5_{i1})) / ( T7) + ((T8_{i0} * T8_{i1})) / ( T10))) * Probe(femV(noFunc, 11, 12, 13)⊛Basis()dx_{i1},T14)))>(i1=0..2)))>(i0=0..2)))) / ( T15)))>)> (maxAlpha1925,_t1A03,_t1A05,_t1A07,_t1A05,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t17FB,_t17F2,_t17E7,pos196B,thick1929);
          bool _t1A1B#1 = EQ<real>(_t1A15,_t1A03);
          if _t1A1B then goto SAVE1A1F else goto JOIN1A1D
        SAVE1A1F:  preds = [COND1A23]
          self.rayN = rayN195E;
          active
          goto JOIN1A1D
        JOIN1A1D:  preds = [*ACTIVE1A1E,COND1A23]
          real _t1A28#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[3],T8[],T9[3],T10[3],T11[],INT12,FEM(fns_t)13,FEM(func_t)14,T15[3],T16[])<(T0) - ((T1 * Clamp <T2,T0,(T4 * (T0) - ((Abs(Sqrt(Σ(i0=0..2)<((Σ(i1=0..2)<((Neg((((T6_{i0} * T6_{i1})) / ( T8) + ((T9_{i0} * T9_{i1})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i1},T15)))>(i1=0..2) * Σ(i1=0..2)<((Neg((((T6_{i0} * T6_{i1})) / ( T8) + ((T9_{i0} * T9_{i1})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i1},T15)))>(i1=0..2)))>(i0=0..2)))) / ( T16)))>))> (_t1A05,maxAlpha1925,_t1A03,_t1A05,_t1A07,_t1A05,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t17FB,_t17F2,_t17E7,pos196B,thick1929);
          real _t1A2A#2 = MathFn<pow>(_t1A28,alphaFix1944);
          bool _t1A3C#1 = NEQ<real>(phKs1948,_t1A03);
          if _t1A3C then goto ASSIGN1B4C else goto JOIN1A3E
        ASSIGN1B4C:  preds = [COND1A4A]
          real _t1A45#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,T9[3],T10[3],T11[3],T12[],T13[3],T14[3],T15[],INT16,FEM(fns_t)17,FEM(func_t)18,T19[3],T20[3],T21[3],T22[3],T23[3])<Abs(Σ(i0=0..2)<((Neg((Σ(i3=0..2)<((Neg((((T0_{i0} * T0_{i3})) / ( T2) + ((T3_{i0} * T3_{i3})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i3},T9)))>(i3=0..2) * (1) / ( Sqrt(Σ(i2=0..2)<((Σ(i3=0..2)<((Neg((((T0_{i2} * T0_{i3})) / ( T2) + ((T3_{i2} * T3_{i3})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i3},T9)))>(i3=0..2) * Σ(i3=0..2)<((Neg((((T0_{i2} * T0_{i3})) / ( T2) + ((T3_{i2} * T3_{i3})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i3},T9)))>(i3=0..2)))>(i2=0..2))))) * (T20_{i0} + T21_{i0}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T20_{i4} + T21_{i4}) * (T20_{i4} + T21_{i4})))>(i4=0..2)))))>(i0=0..2))> (_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t17FB,_t17F2,_t17E7,pos196B,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t17FB,_t17F2,_t17E7,pos196B,eyeDir1945,litwsp191C,eyeDir1945,litwsp191C);
          real scomp1A47#1 = MathFn<pow>(_t1A45,phSp1949);
          goto JOIN1A3E
        JOIN1A3E:  preds = [ASSIGN1A49,COND1A4A]
          real scomp1A48#1 = phi(scomp1A47,_t1A03)
          real cmin1A4D#2 = TensorIndex<tensor[2],[0]>(cminmax1922);
          real cmax1A4F#2 = TensorIndex<tensor[2],[1]>(cminmax1922);
          tensor[3] mcol1A57#2 = <tensor[3]>[_t1A05,_t1A05,_t1A05];
          bool _t1A59#1 = NEQ<real>(cmin1A4D,cmax1A4F);
          if _t1A59 then goto ASSIGN1B4E else goto JOIN1A5B
        ASSIGN1B4E:  preds = [COND1A69]
          tensor[3] _t1A60#1 = λ(T0[3],T1[],T2[],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],INT10,FEM(fns_t)11,FEM(func_t)12,T13[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}) + Σ(i2=0..2)<((Neg((((T4_{i0} * T4_{i2})) / ( T6) + ((T7_{i0} * T7_{i2})) / ( T9))) * Probe(femV(noFunc, 10, 11, 12)⊛Basis()dx_{i2},T13)))>(i2=0..2))>_{3} (rayOrig1942,rayN1940,rayStep192B,rayVec1943,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t17FB,_t17F2,_t17E7,pos196B);
          real _t1A64#1 = λ(T0[],T1[],T2[],INT3,FEM(fns_t)4,FEM(func_t)5,T6[3],T7[])<(T0 + (((Probe(femV(noFunc, 3, 4, 5)⊛Basis(),T6)) - (T2)) / ( (T7) - (T2)) * (T1) - (T0)))> (_t1A03,_t1A05,cmin1A4D,_t17FB,_t17F2,_t17E7,_t1A60,cmax1A4F);
          tensor[3] mcol1A66#1 = λ(V0(1)[3],H1,T2[1])<Probe(V0_{i0}⊛H1,T2)>_{3} (img1802,_t1800,_t1A64);
          goto JOIN1A5B
        JOIN1A5B:  preds = [ASSIGN1B51,COND1A69]
          tensor[3] mcol1A67#1 = phi(mcol1A66,mcol1A57)
          tensor[3] rgb1A84#2 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[3],T7[3],T8[],T9[3],T10[3],T11[],INT12,FEM(fns_t)13,FEM(func_t)14,T15[3],T16[3],T17[3],T18[],T19[3],T20[3],T21[],INT22,FEM(fns_t)23,FEM(func_t)24,T25[3],T26[3],T27[3],T28[3],T29[],T30[],T31[],T32[],T33[3],T34[],T35[],T36[3])<(T0_{i0} + (T1 * (T2) - (T3) * (((T4 + (T5 * (Σ(i4=0..2)<((Neg((Σ(i7=0..2)<((Neg((((T6_{i4} * T6_{i7})) / ( T8) + ((T9_{i4} * T9_{i7})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i7},T15)))>(i7=0..2) * (1) / ( Sqrt(Σ(i6=0..2)<((Σ(i7=0..2)<((Neg((((T6_{i6} * T6_{i7})) / ( T8) + ((T9_{i6} * T9_{i7})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i7},T15)))>(i7=0..2) * Σ(i7=0..2)<((Neg((((T6_{i6} * T6_{i7})) / ( T8) + ((T9_{i6} * T9_{i7})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i7},T15)))>(i7=0..2)))>(i6=0..2))))) * T26_{i4}))>(i4=0..2))^2)) * (T27_{i0} + ((((T30 + T31)) - (T29)) / ( (T32) - (T29)) * (T28_{i0}) - (T27_{i0}))) * T33_{i0}) + (T34 * T35 * T36_{i0}))))>_{3} (rgb194C,transp194D,_t1A05,_t1A2A,phKa1946,phKd1947,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t17FB,_t17F2,_t17E7,pos196B,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t17FB,_t17F2,_t17E7,pos196B,litwsp191C,mcNear1924,mcFar1923,camNearVsp191E,rayN1940,rayStep192B,camFarVsp191D,mcol1A67,phKs1948,scomp1A48,mcol1A57);
          real transp1A8A#2 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp194D,_t1A05,_t1A05,_t1A2A);
          bool _t1A8C#1 = LT<real>(transp1A8A,transp0192A);
          if _t1A8C then goto SAVE1A93 else goto JOIN1A8E
        SAVE1A93:  preds = [COND1A97]
          self.rayN = rayN195E;
          self.rgb = rgb1A84;
          self.transp = _t1A03;
          stabilize
          goto JOIN1A8E
        JOIN1A8E:  preds = [*STABILIZE1A92,COND1A97]
          real transp1A90#1 = phi(transp1A8A)
          self.rayN = rayN195E;
          self.rgb = rgb1A84;
          self.transp = transp1A90;
          active
        ASSIGN19A8:  preds = [COND19A9]
          bool _t19A7#1 = false;
          goto JOIN19A1
        ASSIGN19AE:  preds = [COND19AF]
          bool _t19AD#1 = false;
          goto JOIN1998
        ASSIGN19B4:  preds = [COND19B5]
          bool _t19B3#1 = false;
          goto JOIN1978
    end update
    method stabilize
        ENTRY1AD7:  preds = []
          tensor[4] rgba1AAA#1 = self.rgba;
          tensor[3] rgb1AAC#3 = self.rgb;
          real transp1AAD#5 = self.transp;
          real _t1ABE#5 = 0.1e1;
          bool _t1AC0#1 = LT<real>(transp1AAD,_t1ABE);
          if _t1AC0 then goto ASSIGN1B13 else goto JOIN1AC2
        ASSIGN1B13:  preds = [COND1AD6]
          real aa1AC5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1ABE,transp1AAD);
          real _t1AC7#1 = TensorIndex<tensor[3],[0]>(rgb1AAC);
          real _t1AC9#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1AC7,_t1ABE,transp1AAD);
          real _t1ACB#1 = TensorIndex<tensor[3],[1]>(rgb1AAC);
          real _t1ACD#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1ACB,_t1ABE,transp1AAD);
          real _t1ACF#1 = TensorIndex<tensor[3],[2]>(rgb1AAC);
          real _t1AD1#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1ACF,_t1ABE,transp1AAD);
          tensor[4] rgba1AD3#1 = <tensor[4]>[_t1AC9,_t1ACD,_t1AD1,aa1AC5];
          goto JOIN1AC2
        JOIN1AC2:  preds = [ASSIGN1AD5,COND1AD6]
          tensor[4] rgba1AD4#1 = phi(rgba1AD3,rgba1AAA)
          self.rgba = rgba1AD4;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY185E:  preds = []
      int iresU1844#1 = globals.iresU16FB;
      int iresV1843#1 = globals.iresV16FC;
      int _t1847#2 = 0;
      int _t1849#2 = 1;
      int _t184B#1 = ISub(iresV1843,_t1849);
      int[] _t184D#1 = Range(_t1847,_t184B);
    FOREACH1850:  preds = [ASSIGN184E,NEXT185D]
      foreach (vi184F in _t184D) on exit goto RETURN185F
      int _t1855#1 = ISub(iresU1844,_t1849);
      int[] _t1857#1 = Range(_t1847,_t1855);
    FOREACH185A:  preds = [ASSIGN1ADE,NEXT185C]
      foreach (ui1859 in _t1857) on exit goto NEXT185D
      new ray(ui1859,vi184F);
      goto FOREACH185A
    NEXT185D:  preds = [FOREACH185A]
      goto FOREACH1850
    RETURN185F:  preds = [FOREACH1850]
      return
#### end program ####
promote _t17FB --> globals._t1B61
promote _t17F2 --> globals._tX1B64
promote _t17E7 --> globals._tXX1B67
promote img1802 --> globals.img1B72
promote _t1800 --> globals._tXXX1B75
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block16EF (block) = <no-default>
  input 0space04CF_intermedateGlobal16F0 (space) = <no-default>
  input 0U04D1_intermedateGlobal16F1 (U) = <no-default>
  input cellChoice16F2 (cellChoice) = <no-default>
  input cmap16F3 (cmap) = image("cmap.nrrd")
  input camEye16F4 (camEye) = <default>
  input camAt16F5 (camAt) = <default>
  input camUp16F6 (camUp) = <default>
  input camNear16F7 (camNear) = <default>
  input camFar16F8 (camFar) = <default>
  input camFOV16F9 (camFOV) = <default>
  input camOrtho16FA (camOrtho) = <default>
  input iresU16FB (iresU) = <default>
  input iresV16FC (iresV) = <default>
  input rayStep16FD (rayStep) = <default>
  input refStep16FE (refStep) = <default>
  input transp016FF (transp0) = <default>
  input thick1700 (thick) = <default>
  input fStrTh1701 (fStrTh) = <default>
  input fMaskTh1702 (fMaskTh) = <default>
  input fBias1703 (fBias) = <default>
  input maxAlpha1704 (maxAlpha) = <default>
  input light1705 (light) = <default>
  input phong1706 (phong) = <default>
  input mcNear1707 (mcNear) = <default>
  input mcFar1708 (mcFar) = <default>
  input litdir1709 (litdir) = <default>
  input cminmax170A (cminmax) = <default>
  global tensor[3] camN1789
  global tensor[3] camU178A
  global tensor[3] camV178B
  global real camDist178C
  global real camVmax178D
  global real camUmax178E
  global real camNearVsp178F
  global real camFarVsp1790
  global tensor[3] litwsp1791
  global int _t1B61
  global femData:Space _tX1B64
  global femData:FemFunc _tXX1B67
  global image(IMAGE1D<double[3]>) img1B72
  global kernel _tXXX1B75
## functions
  function int[2] nextCell417A3 (int faceIdx1792#1, int cell1793#1, femData:Mesh mesh1794#1) {
    ENTRY17A2:  preds = []
      int _t1795#1 = 12;
      int _t1797#1 = IMul(cell1793,_t1795);
      int _t1799#1 = 2;
      int _t179B#1 = IMul(faceIdx1792,_t1799);
      int _t179D#1 = IAdd(_t1797,_t179B);
      int[2] _t179F#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1794,_t179D);
      return _t179F
}
## input initialization
  ENTRY1780:  preds = []
    real _t170B#13 = 0.e0;
    real _t170D#1 = -0.2e1;
    tensor[3] camEye1711#1 = <tensor[3]>[_t170B,_t170D,_t170B];
    globals.camEye16F4 = camEye1711;
    tensor[3] camAt171A#1 = <tensor[3]>[_t170B,_t170B,_t170B];
    globals.camAt16F5 = camAt171A;
    real _t1721#5 = 0.1e1;
    tensor[3] camUp1723#1 = <tensor[3]>[_t170B,_t170B,_t1721];
    globals.camUp16F6 = camUp1723;
    real camNear1726#1 = -0.4e1;
    globals.camNear16F7 = camNear1726;
    real camFar1729#1 = 0.4e1;
    globals.camFar16F8 = camFar1729;
    real camFOV172C#1 = 0.1e2;
    globals.camFOV16F9 = camFOV172C;
    bool camOrtho172F#2 = false;
    globals.camOrtho16FA = camOrtho172F;
    int iresU1732#2 = 100;
    globals.iresU16FB = iresU1732;
    globals.iresV16FC = iresU1732;
    real rayStep1738#2 = 0.1e-3;
    globals.rayStep16FD = rayStep1738;
    globals.refStep16FE = rayStep1738;
    real transp0173E#1 = 0.5e-2;
    globals.transp016FF = transp0173E;
    real thick1741#1 = 0.1e-1;
    globals.thick1700 = thick1741;
    globals.fStrTh1701 = _t170B;
    globals.fMaskTh1702 = _t170B;
    real fBias174A#2 = 0.1e0;
    globals.fBias1703 = fBias174A;
    globals.maxAlpha1704 = _t1721;
    globals.light1705 = camOrtho172F;
    real _t1755#1 = 0.7e0;
    real _t1757#1 = 0.2e0;
    real _t1759#1 = 0.1e3;
    tensor[4] phong175B#1 = <tensor[4]>[fBias174A,_t1755,_t1757,_t1759];
    globals.phong1706 = phong175B;
    tensor[3] mcNear1764#2 = <tensor[3]>[_t1721,_t1721,_t1721];
    globals.mcNear1707 = mcNear1764;
    globals.mcFar1708 = mcNear1764;
    real _t1772#1 = -0.1e1;
    tensor[3] litdir1776#1 = <tensor[3]>[_t170B,_t1772,_t170B];
    globals.litdir1709 = litdir1776;
    tensor[2] cminmax177D#1 = <tensor[2]>[_t170B,_t170B];
    globals.cminmax170A = cminmax177D;
    return
## global-variable initialization
  ENTRY1841:  preds = []
    femData:Mesh block17B1#3 = globals.block16EF;
    femData:Space 0space04CF_intermedateGlobal17B0#1 = globals.0space04CF_intermedateGlobal16F0;
    femData:FemFunc 0U04D1_intermedateGlobal17AF#1 = globals.0U04D1_intermedateGlobal16F1;
    int cellChoice17AE#1 = globals.cellChoice16F2;
    image(IMAGE1D<double[3]>) cmap17AD#1 = globals.cmap16F3;
    tensor[3] camEye17AC#17 = globals.camEye16F4;
    tensor[3] camAt17AB#17 = globals.camAt16F5;
    tensor[3] camUp17AA#4 = globals.camUp16F6;
    real camNear17A9#1 = globals.camNear16F7;
    real camFar17A8#1 = globals.camFar16F8;
    real camFOV17A7#2 = globals.camFOV16F9;
    int iresU17A6#1 = globals.iresU16FB;
    int iresV17A5#1 = globals.iresV16FC;
    tensor[3] litdir17A4#2 = globals.litdir1709;
    int _t17C0#1 = 0;
    int _t17C2#1 = 1;
    int _t17C4#1 = ExtractFemItem<int,NumCell(Mesh)>(block17B1);
    int _t17C6#1 = ISub(_t17C4,_t17C2);
    int[] _t17C8#1 = Range(_t17C0,_t17C6);
    femData:MeshCell[] _t17CA#1 = <femData:MeshCell[]>{};
  FOREACH17CE:  preds = [ASSIGN17CB,NEXT17D3]
    foreach (_t17CC in _t17C8) on exit goto ASSIGN17D8
      femData:MeshCell[] _t17CD#2 = phi(_t17CA,_t17D1)
    femData:MeshCell _t17CF#1 = LoadFem<femData:MeshCell>(block17B1,_t17CC);
    femData:MeshCell[] _t17D1#1 = Append<femData:MeshCell>(_t17CD,_t17CF);
    goto FOREACH17CE
  ASSIGN17D8:  preds = [FOREACH17CE]
    femData:Space space17D7#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal17B0,block17B1);
    femData:FemFunc U17DA#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal17AF,space17D7);
    femData:MeshCell c117DD#1 = Subscript<femData:MeshCell[]>(_t17CD,cellChoice17AE);
    int _t17E1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DD);
    femData:FuncCell _t17E3#2 = LoadFem<femData:FuncCell>(U17DA,_t17E1);
    femData:FemFunc _t17E7#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17E3);
    femData:Space _t17F2#1 = ExtractFem<femData:Space,femData:FemFunc>(_t17E7);
    int _t17FB#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t17E3);
    kernel _t1800#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1802#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap17AD);
    tensor[3] camN180C#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt17AB,camEye17AC,camAt17AB,camEye17AC);
    globals.camN1789 = camN180C;
    tensor[3] camU1811#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt17AB,camEye17AC,camAt17AB,camEye17AC,camUp17AA,camAt17AB,camEye17AC,camAt17AB,camEye17AC,camUp17AA);
    globals.camU178A = camU1811;
    tensor[3] camV1814#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * (T0_{i1}) - (T1_{i1}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T0_{i3}) - (T1_{i3}) * (T0_{i3}) - (T1_{i3})))>(i3=0..2))) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii2,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * (1) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2)))>(i4=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt17AB,camEye17AC,camAt17AB,camEye17AC,camAt17AB,camEye17AC,camAt17AB,camEye17AC,camUp17AA,camAt17AB,camEye17AC,camAt17AB,camEye17AC,camUp17AA);
    globals.camV178B = camV1814;
    real camDist1819#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt17AB,camEye17AC);
    globals.camDist178C = camDist1819;
    real _t181C#2 = 0.314159265358979323846264338327950288e1;
    real _t1820#2 = 0.36e3;
    real camVmax1826#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV17A7,_t181C,_t1820,camAt17AB,camEye17AC);
    globals.camVmax178D = camVmax1826;
    real _t1829#1 = IntToReal(iresU17A6);
    real _t182D#1 = IntToReal(iresV17A5);
    real camUmax182F#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV17A7,_t181C,_t1820,camAt17AB,camEye17AC,_t1829,_t182D);
    globals.camUmax178E = camUmax182F;
    real camNearVsp1832#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear17A9,camAt17AB,camEye17AC);
    globals.camNearVsp178F = camNearVsp1832;
    real camFarVsp1835#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar17A8,camAt17AB,camEye17AC);
    globals.camFarVsp1790 = camFarVsp1835;
    tensor[3,3] _t1838#1 = <tensor[3,3]>[camU1811,camV1814,camN180C];
    tensor[3] litwsp183E#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t1838,litdir17A4,litdir17A4);
    globals.litwsp1791 = litwsp183E;
    globals._t1B61 = _t17FB;
    globals._tX1B64 = _t17F2;
    globals._tXX1B67 = _t17E7;
    globals.img1B72 = img1802;
    globals._tXXX1B75 = _t1800;
    return
## strand
  strand ray (int ui1860#1, int vi1861#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY190A:  preds = []
        tensor[3] camEye187F#1 = globals.camEye16F4;
        bool camOrtho187E#2 = globals.camOrtho16FA;
        int iresU187D#1 = globals.iresU16FB;
        int iresV187C#1 = globals.iresV16FC;
        real rayStep187B#1 = globals.rayStep16FD;
        real refStep187A#1 = globals.refStep16FE;
        tensor[4] phong1879#4 = globals.phong1706;
        tensor[3] camN1878#4 = globals.camN1789;
        tensor[3] camU1877#2 = globals.camU178A;
        tensor[3] camV1876#2 = globals.camV178B;
        real camDist1875#1 = globals.camDist178C;
        real camVmax1874#6 = globals.camVmax178D;
        real camUmax1873#6 = globals.camUmax178E;
        real camNearVsp1872#1 = globals.camNearVsp178F;
        real _t18A0#6 = -0.5e0;
        real _t18A2#3 = IntToReal(ui1860);
        real _t18A4#3 = IntToReal(iresU187D);
        real _t18A6#6 = 0.5e0;
        real rayU18AA#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1873,camUmax1873,_t18A0,_t18A2,_t18A4,_t18A6);
        real _t18B0#3 = IntToReal(vi1861);
        real _t18B2#3 = IntToReal(iresV187C);
        real rayV18B8#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax1874,camVmax1874,_t18A0,_t18B0,_t18B2,_t18A6);
        tensor[3] UV18C0#2 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax1873,camUmax1873,_t18A0,_t18A2,_t18A4,_t18A6,camU1877,camVmax1874,camVmax1874,_t18A0,_t18B0,_t18B2,_t18A6,camV1876);
        if camOrtho187E then goto JOIN18C3 else goto ASSIGN18C8
      JOIN18C3:  preds = [COND18CF,ASSIGN1AF6]
        tensor[3] _t18C5#1 = phi(UV18C0,_t18CD)
        tensor[3] rayOrig18D0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye187F,_t18C5);
        if camOrtho187E then goto ASSIGN18D5 else goto ASSIGN1B2B
      ASSIGN18D5:  preds = [COND18DF]
        real _t18D4#3 = 0.e0;
        tensor[3] _t18DA#1 = <tensor[3]>[_t18D4,_t18D4,_t18D4];
        goto JOIN18D3
      JOIN18D3:  preds = [ASSIGN1AF7,ASSIGN1B2B]
        tensor[3] _t18DB#4 = phi(_t18DA,_t18DD)
        tensor[3] rayVec18E0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1878,_t18DB);
        real alphaFix18E6#1 = λ(T0[3],T1[3],T2[],T3[])<((T2 * Sqrt(Σ(i0=0..2)<(((T0_{i0} + T1_{i0}) * (T0_{i0} + T1_{i0})))>(i0=0..2)))) / ( T3)> (camN1878,_t18DB,rayStep187B,refStep187A);
        tensor[3] eyeDir18EA#1 = λ(T0[3],T1[3],T2[3],T3[3])<Neg(((T0_{i0} + T1_{i0}) * (1) / ( Sqrt(Σ(i2=0..2)<(((T0_{i2} + T1_{i2}) * (T0_{i2} + T1_{i2})))>(i2=0..2)))))>_{3} (camN1878,_t18DB,camN1878,_t18DB);
        real phKa18EC#1 = TensorIndex<tensor[4],[0]>(phong1879);
        real phKd18EE#1 = TensorIndex<tensor[4],[1]>(phong1879);
        real phKs18F0#1 = TensorIndex<tensor[4],[2]>(phong1879);
        real phSp18F2#1 = TensorIndex<tensor[4],[3]>(phong1879);
        real _t18F4#8 = 0.e0;
        tensor[4] rgba18FC#1 = <tensor[4]>[_t18F4,_t18F4,_t18F4,_t18F4];
        tensor[3] rgb1906#1 = <tensor[3]>[_t18F4,_t18F4,_t18F4];
        real transp1908#1 = 0.1e1;
        self.rayU = rayU18AA;
        self.rayV = rayV18B8;
        self.rayN = camNearVsp1872;
        self.UV = UV18C0;
        self.rayOrig = rayOrig18D0;
        self.rayVec = rayVec18E0;
        self.alphaFix = alphaFix18E6;
        self.eyeDir = eyeDir18EA;
        self.phKa = phKa18EC;
        self.phKd = phKd18EE;
        self.phKs = phKs18F0;
        self.phSp = phSp18F2;
        self.rgba = rgba18FC;
        self.raw = _t18F4;
        self.rgb = rgb1906;
        self.transp = transp1908;
        return
      ASSIGN1B2B:  preds = [COND18DF]
        tensor[3] _t18DD#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3],T14[])<((((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))) / ( T14)>_{3} (camUmax1873,camUmax1873,_t18A0,_t18A2,_t18A4,_t18A6,camU1877,camVmax1874,camVmax1874,_t18A0,_t18B0,_t18B2,_t18A6,camV1876,camDist1875);
        goto JOIN18D3
      ASSIGN18C8:  preds = [COND18CF]
        real _t18C7#3 = 0.e0;
        tensor[3] _t18CD#1 = <tensor[3]>[_t18C7,_t18C7,_t18C7];
        goto JOIN18C3
    end state init
    method update
        ENTRY1A98:  preds = []
          int _t1B62#11 = globals._t1B61;
          femData:Space _t1B65#11 = globals._tX1B64;
          femData:FemFunc _t1B68#11 = globals._tXX1B67;
          image(IMAGE1D<double[3]>) img1B73#1 = globals.img1B72;
          kernel _t1B76#1 = globals._tXXX1B75;
          femData:Mesh block192C#1 = globals.block16EF;
          real rayStep192B#4 = globals.rayStep16FD;
          real transp0192A#1 = globals.transp016FF;
          real thick1929#2 = globals.thick1700;
          real fStrTh1928#1 = globals.fStrTh1701;
          real fMaskTh1927#1 = globals.fMaskTh1702;
          real fBias1926#1 = globals.fBias1703;
          real maxAlpha1925#2 = globals.maxAlpha1704;
          tensor[3] mcNear1924#1 = globals.mcNear1707;
          tensor[3] mcFar1923#1 = globals.mcFar1708;
          tensor[2] cminmax1922#2 = globals.cminmax170A;
          real camNearVsp191E#1 = globals.camNearVsp178F;
          real camFarVsp191D#2 = globals.camFarVsp1790;
          tensor[3] litwsp191C#3 = globals.litwsp1791;
          real rayN1940#4 = self.rayN;
          tensor[3] rayOrig1942#2 = self.rayOrig;
          tensor[3] rayVec1943#2 = self.rayVec;
          real alphaFix1944#1 = self.alphaFix;
          tensor[3] eyeDir1945#2 = self.eyeDir;
          real phKa1946#1 = self.phKa;
          real phKd1947#1 = self.phKd;
          real phKs1948#2 = self.phKs;
          real phSp1949#1 = self.phSp;
          tensor[3] rgb194C#1 = self.rgb;
          real transp194D#2 = self.transp;
          real rayN195E#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1940,rayStep192B);
          bool _t1960#1 = GT<real>(rayN195E,camFarVsp191D);
          if _t1960 then goto SAVE1964 else goto JOIN1962
        SAVE1964:  preds = [COND1968]
          self.rayN = rayN195E;
          stabilize
          goto JOIN1962
        JOIN1962:  preds = [*STABILIZE1963,COND1968]
          tensor[3] pos196B#11 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig1942,rayN1940,rayStep192B,rayVec1943);
          femData:RefCell _t1970#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block192C);
          real _t1974#1 = 0.1e-8;
          bool _t1976#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1970,pos196B,_t1974);
          if _t1976 then goto ASSIGN1B69 else goto ASSIGN19B4
        ASSIGN1B69:  preds = [COND19B5]
          tensor[3,3] _t197F#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t1B62,_t1B65,_t1B68,pos196B);
          (real[3] _t1981#1,tensor[3][3] evecs1982#0) = Eigen3x3(_t197F);
          int _t1984#1 = 1;
          real _t1986#1 = Subscript<real[3]>(_t1981,_t1984);
          real _t1992#1 = λ(T0[],T1[],INT2,FEM(fns_t)3,FEM(func_t)4,T5[3])<(Neg(T0)) / ( (T1 + Sqrt(Σ(i0=0..2)<((Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5) * Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5)))>(i0=0..2))))> (_t1986,fBias1926,_t1B62,_t1B65,_t1B68,pos196B);
          bool _t1996#1 = GT<real>(_t1992,fStrTh1928);
          if _t1996 then goto ASSIGN199C else goto ASSIGN19AE
        ASSIGN199C:  preds = [COND19AF]
          real _t199B#1 = 0.1e1;
          bool _t199F#1 = GTE<real>(_t199B,fMaskTh1927);
          if _t199F then goto ASSIGN19A3 else goto ASSIGN19A8
        ASSIGN19A3:  preds = [COND19A9]
          bool _t19A2#1 = true;
          goto JOIN19A1
        JOIN19A1:  preds = [ASSIGN19A3,ASSIGN19A8]
          bool _t19A5#1 = phi(_t19A2,_t19A7)
          goto JOIN1998
        JOIN1998:  preds = [JOIN19A1,ASSIGN19AE]
          bool _t19AB#1 = phi(_t19A5,_t19AD)
          goto JOIN1978
        JOIN1978:  preds = [JOIN1998,ASSIGN19B4]
          bool _t19B1#1 = phi(_t19AB,_t19B3)
          bool _t19B8#1 = BNot(_t19B1);
          if _t19B8 then goto SAVE19BC else goto JOIN19BA
        SAVE19BC:  preds = [COND19C0]
          self.rayN = rayN195E;
          active
          goto JOIN19BA
        JOIN19BA:  preds = [*ACTIVE19BB,COND19C0]
          tensor[3,3] _t19C6#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t1B62,_t1B65,_t1B68,pos196B);
          (real[3] evals19C9#2,tensor[3][3] E19C8#2) = Eigen3x3(_t19C6);
          int _t19D4#2 = 2;
          tensor[3] _t19D6#14 = Subscript<tensor[3][3]>(E19C8,_t19D4);
          real _t19E0#7 = Subscript<real[3]>(evals19C9,_t19D4);
          int _t19E4#2 = 1;
          tensor[3] _t19E6#14 = Subscript<tensor[3][3]>(E19C8,_t19E4);
          real _t19F0#7 = Subscript<real[3]>(evals19C9,_t19E4);
          real _t1A03#7 = 0.e0;
          real _t1A05#12 = 0.1e1;
          real _t1A07#2 = 0.15e1;
          real _t1A15#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[3],T6[3],T7[],T8[3],T9[3],T10[],INT11,FEM(fns_t)12,FEM(func_t)13,T14[3],T15[])<(T0 * Clamp <T1,T2,(T3 * (T2) - ((Abs(Sqrt(Σ(i0=0..2)<((Σ(i1=0..2)<((Neg((((T5_{i0} * T5_{i1})) / ( T7) + ((T8_{i0} * T8_{i1})) / ( T10))) * Probe(femV(noFunc, 11, 12, 13)⊛Basis()dx_{i1},T14)))>(i1=0..2) * Σ(i1=0..2)<((Neg((((T5_{i0} * T5_{i1})) / ( T7) + ((T8_{i0} * T8_{i1})) / ( T10))) * Probe(femV(noFunc, 11, 12, 13)⊛Basis()dx_{i1},T14)))>(i1=0..2)))>(i0=0..2)))) / ( T15)))>)> (maxAlpha1925,_t1A03,_t1A05,_t1A07,_t1A05,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t1B62,_t1B65,_t1B68,pos196B,thick1929);
          bool _t1A1B#1 = EQ<real>(_t1A15,_t1A03);
          if _t1A1B then goto SAVE1A1F else goto JOIN1A1D
        SAVE1A1F:  preds = [COND1A23]
          self.rayN = rayN195E;
          active
          goto JOIN1A1D
        JOIN1A1D:  preds = [*ACTIVE1A1E,COND1A23]
          real _t1A28#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[3],T8[],T9[3],T10[3],T11[],INT12,FEM(fns_t)13,FEM(func_t)14,T15[3],T16[])<(T0) - ((T1 * Clamp <T2,T0,(T4 * (T0) - ((Abs(Sqrt(Σ(i0=0..2)<((Σ(i1=0..2)<((Neg((((T6_{i0} * T6_{i1})) / ( T8) + ((T9_{i0} * T9_{i1})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i1},T15)))>(i1=0..2) * Σ(i1=0..2)<((Neg((((T6_{i0} * T6_{i1})) / ( T8) + ((T9_{i0} * T9_{i1})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i1},T15)))>(i1=0..2)))>(i0=0..2)))) / ( T16)))>))> (_t1A05,maxAlpha1925,_t1A03,_t1A05,_t1A07,_t1A05,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t1B62,_t1B65,_t1B68,pos196B,thick1929);
          real _t1A2A#2 = MathFn<pow>(_t1A28,alphaFix1944);
          bool _t1A3C#1 = NEQ<real>(phKs1948,_t1A03);
          if _t1A3C then goto ASSIGN1B6E else goto JOIN1A3E
        ASSIGN1B6E:  preds = [COND1A4A]
          real _t1A45#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,T9[3],T10[3],T11[3],T12[],T13[3],T14[3],T15[],INT16,FEM(fns_t)17,FEM(func_t)18,T19[3],T20[3],T21[3],T22[3],T23[3])<Abs(Σ(i0=0..2)<((Neg((Σ(i3=0..2)<((Neg((((T0_{i0} * T0_{i3})) / ( T2) + ((T3_{i0} * T3_{i3})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i3},T9)))>(i3=0..2) * (1) / ( Sqrt(Σ(i2=0..2)<((Σ(i3=0..2)<((Neg((((T0_{i2} * T0_{i3})) / ( T2) + ((T3_{i2} * T3_{i3})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i3},T9)))>(i3=0..2) * Σ(i3=0..2)<((Neg((((T0_{i2} * T0_{i3})) / ( T2) + ((T3_{i2} * T3_{i3})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i3},T9)))>(i3=0..2)))>(i2=0..2))))) * (T20_{i0} + T21_{i0}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T20_{i4} + T21_{i4}) * (T20_{i4} + T21_{i4})))>(i4=0..2)))))>(i0=0..2))> (_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t1B62,_t1B65,_t1B68,pos196B,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t1B62,_t1B65,_t1B68,pos196B,eyeDir1945,litwsp191C,eyeDir1945,litwsp191C);
          real scomp1A47#1 = MathFn<pow>(_t1A45,phSp1949);
          goto JOIN1A3E
        JOIN1A3E:  preds = [ASSIGN1A49,COND1A4A]
          real scomp1A48#1 = phi(scomp1A47,_t1A03)
          real cmin1A4D#2 = TensorIndex<tensor[2],[0]>(cminmax1922);
          real cmax1A4F#2 = TensorIndex<tensor[2],[1]>(cminmax1922);
          tensor[3] mcol1A57#2 = <tensor[3]>[_t1A05,_t1A05,_t1A05];
          bool _t1A59#1 = NEQ<real>(cmin1A4D,cmax1A4F);
          if _t1A59 then goto ASSIGN1B6F else goto JOIN1A5B
        ASSIGN1B6F:  preds = [COND1A69]
          tensor[3] _t1A60#1 = λ(T0[3],T1[],T2[],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],INT10,FEM(fns_t)11,FEM(func_t)12,T13[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}) + Σ(i2=0..2)<((Neg((((T4_{i0} * T4_{i2})) / ( T6) + ((T7_{i0} * T7_{i2})) / ( T9))) * Probe(femV(noFunc, 10, 11, 12)⊛Basis()dx_{i2},T13)))>(i2=0..2))>_{3} (rayOrig1942,rayN1940,rayStep192B,rayVec1943,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t1B62,_t1B65,_t1B68,pos196B);
          real _t1A64#1 = λ(T0[],T1[],T2[],INT3,FEM(fns_t)4,FEM(func_t)5,T6[3],T7[])<(T0 + (((Probe(femV(noFunc, 3, 4, 5)⊛Basis(),T6)) - (T2)) / ( (T7) - (T2)) * (T1) - (T0)))> (_t1A03,_t1A05,cmin1A4D,_t1B62,_t1B65,_t1B68,_t1A60,cmax1A4F);
          tensor[3] mcol1A66#1 = λ(V0(1)[3],H1,T2[1])<Probe(V0_{i0}⊛H1,T2)>_{3} (img1B73,_t1B76,_t1A64);
          goto JOIN1A5B
        JOIN1A5B:  preds = [ASSIGN1B77,COND1A69]
          tensor[3] mcol1A67#1 = phi(mcol1A66,mcol1A57)
          tensor[3] rgb1A84#2 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[3],T7[3],T8[],T9[3],T10[3],T11[],INT12,FEM(fns_t)13,FEM(func_t)14,T15[3],T16[3],T17[3],T18[],T19[3],T20[3],T21[],INT22,FEM(fns_t)23,FEM(func_t)24,T25[3],T26[3],T27[3],T28[3],T29[],T30[],T31[],T32[],T33[3],T34[],T35[],T36[3])<(T0_{i0} + (T1 * (T2) - (T3) * (((T4 + (T5 * (Σ(i4=0..2)<((Neg((Σ(i7=0..2)<((Neg((((T6_{i4} * T6_{i7})) / ( T8) + ((T9_{i4} * T9_{i7})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i7},T15)))>(i7=0..2) * (1) / ( Sqrt(Σ(i6=0..2)<((Σ(i7=0..2)<((Neg((((T6_{i6} * T6_{i7})) / ( T8) + ((T9_{i6} * T9_{i7})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i7},T15)))>(i7=0..2) * Σ(i7=0..2)<((Neg((((T6_{i6} * T6_{i7})) / ( T8) + ((T9_{i6} * T9_{i7})) / ( T11))) * Probe(femV(noFunc, 12, 13, 14)⊛Basis()dx_{i7},T15)))>(i7=0..2)))>(i6=0..2))))) * T26_{i4}))>(i4=0..2))^2)) * (T27_{i0} + ((((T30 + T31)) - (T29)) / ( (T32) - (T29)) * (T28_{i0}) - (T27_{i0}))) * T33_{i0}) + (T34 * T35 * T36_{i0}))))>_{3} (rgb194C,transp194D,_t1A05,_t1A2A,phKa1946,phKd1947,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t1B62,_t1B65,_t1B68,pos196B,_t19D6,_t19D6,_t19E0,_t19E6,_t19E6,_t19F0,_t1B62,_t1B65,_t1B68,pos196B,litwsp191C,mcNear1924,mcFar1923,camNearVsp191E,rayN1940,rayStep192B,camFarVsp191D,mcol1A67,phKs1948,scomp1A48,mcol1A57);
          real transp1A8A#2 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp194D,_t1A05,_t1A05,_t1A2A);
          bool _t1A8C#1 = LT<real>(transp1A8A,transp0192A);
          if _t1A8C then goto SAVE1A93 else goto JOIN1A8E
        SAVE1A93:  preds = [COND1A97]
          self.rayN = rayN195E;
          self.rgb = rgb1A84;
          self.transp = _t1A03;
          stabilize
          goto JOIN1A8E
        JOIN1A8E:  preds = [*STABILIZE1A92,COND1A97]
          real transp1A90#1 = phi(transp1A8A)
          self.rayN = rayN195E;
          self.rgb = rgb1A84;
          self.transp = transp1A90;
          active
        ASSIGN19A8:  preds = [COND19A9]
          bool _t19A7#1 = false;
          goto JOIN19A1
        ASSIGN19AE:  preds = [COND19AF]
          bool _t19AD#1 = false;
          goto JOIN1998
        ASSIGN19B4:  preds = [COND19B5]
          bool _t19B3#1 = false;
          goto JOIN1978
    end update
    method stabilize
        ENTRY1AD7:  preds = []
          tensor[4] rgba1AAA#1 = self.rgba;
          tensor[3] rgb1AAC#3 = self.rgb;
          real transp1AAD#5 = self.transp;
          real _t1ABE#5 = 0.1e1;
          bool _t1AC0#1 = LT<real>(transp1AAD,_t1ABE);
          if _t1AC0 then goto ASSIGN1B13 else goto JOIN1AC2
        ASSIGN1B13:  preds = [COND1AD6]
          real aa1AC5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1ABE,transp1AAD);
          real _t1AC7#1 = TensorIndex<tensor[3],[0]>(rgb1AAC);
          real _t1AC9#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1AC7,_t1ABE,transp1AAD);
          real _t1ACB#1 = TensorIndex<tensor[3],[1]>(rgb1AAC);
          real _t1ACD#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1ACB,_t1ABE,transp1AAD);
          real _t1ACF#1 = TensorIndex<tensor[3],[2]>(rgb1AAC);
          real _t1AD1#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1ACF,_t1ABE,transp1AAD);
          tensor[4] rgba1AD3#1 = <tensor[4]>[_t1AC9,_t1ACD,_t1AD1,aa1AC5];
          goto JOIN1AC2
        JOIN1AC2:  preds = [ASSIGN1AD5,COND1AD6]
          tensor[4] rgba1AD4#1 = phi(rgba1AD3,rgba1AAA)
          self.rgba = rgba1AD4;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY185E:  preds = []
      int iresU1844#1 = globals.iresU16FB;
      int iresV1843#1 = globals.iresV16FC;
      int _t1847#2 = 0;
      int _t1849#2 = 1;
      int _t184B#1 = ISub(iresV1843,_t1849);
      int[] _t184D#1 = Range(_t1847,_t184B);
    FOREACH1850:  preds = [ASSIGN184E,NEXT185D]
      foreach (vi184F in _t184D) on exit goto RETURN185F
      int _t1855#1 = ISub(iresU1844,_t1849);
      int[] _t1857#1 = Range(_t1847,_t1855);
    FOREACH185A:  preds = [ASSIGN1ADE,NEXT185C]
      foreach (ui1859 in _t1857) on exit goto NEXT185D
      new ray(ui1859,vi184F);
      goto FOREACH185A
    NEXT185D:  preds = [FOREACH185A]
      goto FOREACH1850
    RETURN185F:  preds = [FOREACH1850]
      return
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1B83 (block) = <no-default>
  input 0space04CF_intermedateGlobal1B84 (space) = <no-default>
  input 0U04D1_intermedateGlobal1B85 (U) = <no-default>
  input cellChoice1B86 (cellChoice) = <no-default>
  input cmap1B87 (cmap) = image("cmap.nrrd")
  input camEye1B88 (camEye) = <default>
  input camAt1B89 (camAt) = <default>
  input camUp1B8A (camUp) = <default>
  input camNear1B8B (camNear) = <default>
  input camFar1B8C (camFar) = <default>
  input camFOV1B8D (camFOV) = <default>
  input camOrtho1B8E (camOrtho) = <default>
  input iresU1B8F (iresU) = <default>
  input iresV1B90 (iresV) = <default>
  input rayStep1B91 (rayStep) = <default>
  input refStep1B92 (refStep) = <default>
  input transp01B93 (transp0) = <default>
  input thick1B94 (thick) = <default>
  input fStrTh1B95 (fStrTh) = <default>
  input fMaskTh1B96 (fMaskTh) = <default>
  input fBias1B97 (fBias) = <default>
  input maxAlpha1B98 (maxAlpha) = <default>
  input light1B99 (light) = <default>
  input phong1B9A (phong) = <default>
  input mcNear1B9B (mcNear) = <default>
  input mcFar1B9C (mcFar) = <default>
  input litdir1B9D (litdir) = <default>
  input cminmax1B9E (cminmax) = <default>
  global tensor[3] camN1B9F
  global tensor[3] camU1BA0
  global tensor[3] camV1BA1
  global real camDist1BA2
  global real camVmax1BA3
  global real camUmax1BA4
  global real camNearVsp1BA5
  global real camFarVsp1BA6
  global tensor[3] litwsp1BA7
  global int _t1BA8
  global femData:Space _tX1BA9
  global femData:FemFunc _tXX1BAA
  global image(IMAGE1D<double[3]>) img1BAB
  global kernel _tXXX1BAC
## functions
## input initialization
  ENTRY1BAD:  preds = []
    real _t1BAE#13 = 0.e0;
    real _t1BB0#1 = -0.2e1;
    tensor[3] camEye1BB2#1 = <tensor[3]>[_t1BAE,_t1BB0,_t1BAE];
    globals.camEye1B88 = camEye1BB2;
    tensor[3] camAt1BB5#1 = <tensor[3]>[_t1BAE,_t1BAE,_t1BAE];
    globals.camAt1B89 = camAt1BB5;
    real _t1BB8#5 = 0.1e1;
    tensor[3] camUp1BBA#1 = <tensor[3]>[_t1BAE,_t1BAE,_t1BB8];
    globals.camUp1B8A = camUp1BBA;
    real camNear1BBD#1 = -0.4e1;
    globals.camNear1B8B = camNear1BBD;
    real camFar1BC0#1 = 0.4e1;
    globals.camFar1B8C = camFar1BC0;
    real camFOV1BC3#1 = 0.1e2;
    globals.camFOV1B8D = camFOV1BC3;
    bool camOrtho1BC6#2 = false;
    globals.camOrtho1B8E = camOrtho1BC6;
    int iresU1BC9#2 = 100;
    globals.iresU1B8F = iresU1BC9;
    globals.iresV1B90 = iresU1BC9;
    real rayStep1BCD#2 = 0.1e-3;
    globals.rayStep1B91 = rayStep1BCD;
    globals.refStep1B92 = rayStep1BCD;
    real transp01BD1#1 = 0.5e-2;
    globals.transp01B93 = transp01BD1;
    real thick1BD4#1 = 0.1e-1;
    globals.thick1B94 = thick1BD4;
    globals.fStrTh1B95 = _t1BAE;
    globals.fMaskTh1B96 = _t1BAE;
    real fBias1BD9#2 = 0.1e0;
    globals.fBias1B97 = fBias1BD9;
    globals.maxAlpha1B98 = _t1BB8;
    globals.light1B99 = camOrtho1BC6;
    real _t1BDE#1 = 0.7e0;
    real _t1BE0#1 = 0.2e0;
    real _t1BE2#1 = 0.1e3;
    tensor[4] phong1BE4#1 = <tensor[4]>[fBias1BD9,_t1BDE,_t1BE0,_t1BE2];
    globals.phong1B9A = phong1BE4;
    tensor[3] mcNear1BE7#2 = <tensor[3]>[_t1BB8,_t1BB8,_t1BB8];
    globals.mcNear1B9B = mcNear1BE7;
    globals.mcFar1B9C = mcNear1BE7;
    real _t1BEB#1 = -0.1e1;
    tensor[3] litdir1BED#1 = <tensor[3]>[_t1BAE,_t1BEB,_t1BAE];
    globals.litdir1B9D = litdir1BED;
    tensor[2] cminmax1BF0#1 = <tensor[2]>[_t1BAE,_t1BAE];
    globals.cminmax1B9E = cminmax1BF0;
    return
## global-variable initialization
  ENTRY1BF4:  preds = []
    femData:Mesh block1BF5#3 = globals.block1B83;
    femData:Space 0space04CF_intermedateGlobal1BF7#1 = globals.0space04CF_intermedateGlobal1B84;
    femData:FemFunc 0U04D1_intermedateGlobal1BF9#1 = globals.0U04D1_intermedateGlobal1B85;
    int cellChoice1BFB#1 = globals.cellChoice1B86;
    image(IMAGE1D<double[3]>) cmap1BFD#1 = globals.cmap1B87;
    tensor[3] camEye1BFF#8 = globals.camEye1B88;
    tensor[3] camAt1C01#8 = globals.camAt1B89;
    tensor[3] camUp1C03#2 = globals.camUp1B8A;
    real camNear1C05#1 = globals.camNear1B8B;
    real camFar1C07#1 = globals.camFar1B8C;
    real camFOV1C09#2 = globals.camFOV1B8D;
    int iresU1C0B#1 = globals.iresU1B8F;
    int iresV1C0D#1 = globals.iresV1B90;
    tensor[3] litdir1C0F#2 = globals.litdir1B9D;
    int _t1C11#1 = 0;
    int _t1C13#1 = 1;
    int _t1C15#1 = ExtractFemItem<int,NumCell(Mesh)>(block1BF5);
    int _t1C17#1 = ISub(_t1C15,_t1C13);
    int[] _t1C19#1 = Range(_t1C11,_t1C17);
    femData:MeshCell[] _t1C1B#1 = <femData:MeshCell[]>{};
  FOREACH1C1E:  preds = [ASSIGN1C1C,NEXT1C24]
    foreach (_t1C1D in _t1C19) on exit goto ASSIGN1C26
      femData:MeshCell[] _t1C22#2 = phi(_t1C1B,_t1C21)
    femData:MeshCell _t1C1F#1 = LoadFem<femData:MeshCell>(block1BF5,_t1C1D);
    femData:MeshCell[] _t1C21#1 = Append<femData:MeshCell>(_t1C22,_t1C1F);
    goto FOREACH1C1E
  ASSIGN1C26:  preds = [FOREACH1C1E]
    femData:Space space1C25#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal1BF7,block1BF5);
    femData:FemFunc U1C27#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal1BF9,space1C25);
    femData:MeshCell c11C29#1 = Subscript<femData:MeshCell[]>(_t1C22,cellChoice1BFB);
    int _t1C2B#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11C29);
    femData:FuncCell _t1C2D#2 = LoadFem<femData:FuncCell>(U1C27,_t1C2B);
    femData:FemFunc _t1C2F#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1C2D);
    femData:Space _t1C31#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1C2F);
    int _t1C33#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1C2D);
    kernel _t1C35#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1C37#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1BFD);
    tensor[3] op1_e3_l_41C3A#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_61C3B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41C3A,op1_e3_l_41C3A);
    real op1_e3_l_71C3C#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61C3B);
    real op1_e3_l_91C3D#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71C3C);
    tensor[3] camN1C39#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41C3A,op1_e3_l_91C3D);
    globals.camN1B9F = camN1C39;
    tensor[3] op1_e3_l_101C45#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_121C46#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_101C45,op1_e3_l_101C45);
    real op1_e3_l_131C47#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_121C46);
    tensor[3,3] op1_e3_l_151C48#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C03);
    real op1_e3_l_161C49#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_131C47);
    tensor[3] op1_e3_l_171C4A#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_101C45,op1_e3_l_151C48);
    real op1_e3_l_341C4B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171C4A,op1_e3_l_171C4A);
    real op1_e3_l_351C4C#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_161C49,op1_e3_l_161C49,op1_e3_l_341C4B);
    real op1_e3_l_361C4D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C4C);
    tensor[3] op1_e3_l_371C4E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_161C49,op1_e3_l_171C4A);
    real op1_e3_l_381C4F#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C4D);
    tensor[3] camU1C44#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371C4E,op1_e3_l_381C4F);
    globals.camU1BA0 = camU1C44;
    tensor[3] op1_e3_l_141C5E#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_161C5F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141C5E,op1_e3_l_141C5E);
    real op1_e3_l_171C60#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_161C5F);
    tensor[3,3] op1_e3_l_271C61#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C03);
    tensor[3] op1_e3_l_301C62#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141C5E,op1_e3_l_271C61);
    real op1_e3_l_321C63#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_171C60);
    real op1_e3_l_341C64#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_301C62,op1_e3_l_301C62);
    real op1_e3_l_351C65#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_321C63,op1_e3_l_321C63,op1_e3_l_341C64);
    real op1_e3_l_361C66#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C65);
    tensor[3,3] op1_e3_l_451C67#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_301C62);
    tensor[3] op1_e3_l_471C68#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141C5E,op1_e3_l_451C67);
    real op1_e3_l_491C69#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C66);
    tensor[3] op1_e3_l_501C6A#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_321C63,op1_e3_l_471C68);
    tensor[3] camV1C5D#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_321C63,op1_e3_l_491C69,op1_e3_l_501C6A);
    globals.camV1BA1 = camV1C5D;
    tensor[3] op1_e3_l_21C7B#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_41C7C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21C7B,op1_e3_l_21C7B);
    real camDist1C7A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41C7C);
    globals.camDist1BA2 = camDist1C7A;
    real _t1C81#2 = 0.314159265358979323846264338327950288e1;
    real _t1C83#2 = 0.36e3;
    real op1_e3_l_51C86#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C09,_t1C81);
    real op1_e3_l_61C87#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C83,op1_e3_l_51C86);
    tensor[3] op1_e3_l_71C88#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_91C89#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_71C88,op1_e3_l_71C88);
    real op1_e3_l_101C8A#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_61C87);
    real op1_e3_l_111C8B#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_91C89);
    real camVmax1C85#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101C8A,op1_e3_l_111C8B);
    globals.camVmax1BA3 = camVmax1C85;
    real _t1C94#1 = IntToReal(iresU1C0B);
    real _t1C96#1 = IntToReal(iresV1C0D);
    real op1_e3_l_71C99#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C09,_t1C81);
    real op1_e3_l_81C9A#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C83,op1_e3_l_71C99);
    tensor[3] op1_e3_l_91C9B#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_111C9C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_91C9B,op1_e3_l_91C9B);
    real op1_e3_l_121C9D#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_81C9A);
    real op1_e3_l_131C9E#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_111C9C);
    real op1_e3_l_141C9F#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1C94,op1_e3_l_121C9D,op1_e3_l_131C9E);
    real camUmax1C98#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C96,op1_e3_l_141C9F);
    globals.camUmax1BA4 = camUmax1C98;
    tensor[3] op1_e3_l_31CAA#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_51CAB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_31CAA,op1_e3_l_31CAA);
    real op1_e3_l_61CAC#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_51CAB);
    real camNearVsp1CA9#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1C05,op1_e3_l_61CAC);
    globals.camNearVsp1BA5 = camNearVsp1CA9;
    tensor[3] op1_e3_l_31CB3#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_51CB4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_31CB3,op1_e3_l_31CB3);
    real op1_e3_l_61CB5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_51CB4);
    real camFarVsp1CB2#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1C07,op1_e3_l_61CB5);
    globals.camFarVsp1BA6 = camFarVsp1CB2;
    tensor[3,3] _t1CBB#1 = <tensor[3,3]>[camU1C44,camV1C5D,camN1C39];
    real op1_e3_l_31CBE#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1C0F);
    real op1_e3_l_41CBF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31CBE);
    real op1_e3_l_51CC0#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41CBF);
    tensor[3] op1_e3_l_61CC1#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1CBB,litdir1C0F);
    tensor[3] litwsp1CBD#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51CC0,op1_e3_l_61CC1);
    globals.litwsp1BA7 = litwsp1CBD;
    globals._t1BA8 = _t1C33;
    globals._tX1BA9 = _t1C31;
    globals._tXX1BAA = _t1C2F;
    globals.img1BAB = img1C37;
    globals._tXXX1BAC = _t1C35;
    return
## strand
  strand ray (int ui1CCE#1, int vi1CCF#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1CE0:  preds = []
        tensor[3] camEye1CE1#1 = globals.camEye1B88;
        bool camOrtho1CE3#2 = globals.camOrtho1B8E;
        int iresU1CE5#1 = globals.iresU1B8F;
        int iresV1CE7#1 = globals.iresV1B90;
        real rayStep1CE9#1 = globals.rayStep1B91;
        real refStep1CEB#1 = globals.refStep1B92;
        tensor[4] phong1CED#4 = globals.phong1B9A;
        tensor[3] camN1CEF#3 = globals.camN1B9F;
        tensor[3] camU1CF1#2 = globals.camU1BA0;
        tensor[3] camV1CF3#2 = globals.camV1BA1;
        real camDist1CF5#1 = globals.camDist1BA2;
        real camVmax1CF7#6 = globals.camVmax1BA3;
        real camUmax1CF9#6 = globals.camUmax1BA4;
        real camNearVsp1CFB#1 = globals.camNearVsp1BA5;
        real _t1CFD#12 = -0.5e0;
        real _t1CFF#3 = IntToReal(ui1CCE);
        real _t1D01#3 = IntToReal(iresU1CE5);
        real _t1D03#6 = 0.5e0;
        real op1_e3_l_61D06#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D01,_t1D03);
        real op1_e3_l_71D07#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1CFF);
        real op1_e3_l_81D08#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_61D06);
        real op1_e3_l_91D09#2 = λ(T0[])<Neg(T0)> (camUmax1CF9);
        real op1_e3_l_101D0A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D07,op1_e3_l_81D08);
        real op1_e3_l_111D0B#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1CF9,op1_e3_l_91D09);
        real op1_e3_l_131D0C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D0A,op1_e3_l_111D0B);
        real rayU1D05#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D09,op1_e3_l_131D0C);
        real _t1D15#3 = IntToReal(vi1CCF);
        real _t1D17#3 = IntToReal(iresV1CE7);
        real op1_e3_l_61D1A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D17,_t1D03);
        real op1_e3_l_71D1B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1D15);
        real op1_e3_l_81D1C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_61D1A);
        real op1_e3_l_91D1D#2 = λ(T0[])<Neg(T0)> (camVmax1CF7);
        real op1_e3_l_101D1E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D1B,op1_e3_l_81D1C);
        real op1_e3_l_111D1F#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CF7,op1_e3_l_91D1D);
        real op1_e3_l_131D20#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D1E,op1_e3_l_111D1F);
        real rayV1D19#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D1D,op1_e3_l_131D20);
        real op1_e3_l_141D2A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D01,_t1D03);
        real op1_e3_l_151D2B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1CFF);
        real op1_e3_l_161D2C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_141D2A);
        real op1_e3_l_171D2D#2 = λ(T0[])<Neg(T0)> (camUmax1CF9);
        real op1_e3_l_181D2E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_151D2B,op1_e3_l_161D2C);
        real op1_e3_l_191D2F#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1CF9,op1_e3_l_171D2D);
        real op1_e3_l_211D30#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_181D2E,op1_e3_l_191D2F);
        real op1_e3_l_221D31#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_171D2D,op1_e3_l_211D30);
        real op1_e3_l_231D32#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D03,_t1D17);
        real op1_e3_l_241D33#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1D15);
        real op1_e3_l_251D34#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_231D32);
        real op1_e3_l_261D35#2 = λ(T0[])<Neg(T0)> (camVmax1CF7);
        real op1_e3_l_271D36#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_241D33,op1_e3_l_251D34);
        real op1_e3_l_281D37#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CF7,op1_e3_l_261D35);
        real op1_e3_l_301D38#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271D36,op1_e3_l_281D37);
        real op1_e3_l_311D39#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_261D35,op1_e3_l_301D38);
        tensor[3] op1_e3_l_321D3A#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF1,op1_e3_l_221D31);
        tensor[3] op1_e3_l_331D3B#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CF3,op1_e3_l_311D39);
        tensor[3] UV1D29#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321D3A,op1_e3_l_331D3B);
        if camOrtho1CE3 then goto JOIN1D52 else goto ASSIGN1DBE
      JOIN1D52:  preds = [COND1D4F,ASSIGN1DBF]
        tensor[3] _t1D50#1 = phi(UV1D29,_t1D51)
        tensor[3] rayOrig1D53#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1CE1,_t1D50);
        if camOrtho1CE3 then goto ASSIGN1D57 else goto ASSIGN1DA9
      ASSIGN1D57:  preds = [COND1D55]
        real _t1D56#3 = 0.e0;
        tensor[3] _t1D58#1 = <tensor[3]>[_t1D56,_t1D56,_t1D56];
        goto JOIN1D5C
      JOIN1D5C:  preds = [ASSIGN1D59,ASSIGN1DBC]
        tensor[3] _t1D5A#3 = phi(_t1D58,_t1D5B)
        tensor[3] rayVec1D5D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CEF,_t1D5A);
        tensor[3] op1_e3_l_41D60#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CEF,_t1D5A);
        real op1_e3_l_61D61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D60,op1_e3_l_41D60);
        real op1_e3_l_71D62#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D61);
        real op1_e3_l_81D63#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1CE9,op1_e3_l_71D62);
        real alphaFix1D5F#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1CEB,op1_e3_l_81D63);
        tensor[3] op1_e3_l_41D6A#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CEF,_t1D5A);
        real op1_e3_l_61D6B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D6A,op1_e3_l_41D6A);
        real op1_e3_l_71D6C#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D6B);
        real op1_e3_l_91D6D#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D6C);
        tensor[3] op1_e3_l_101D6E#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D6A,op1_e3_l_91D6D);
        tensor[3] eyeDir1D69#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101D6E);
        real phKa1D75#1 = TensorIndex<tensor[4],[0]>(phong1CED);
        real phKd1D77#1 = TensorIndex<tensor[4],[1]>(phong1CED);
        real phKs1D79#1 = TensorIndex<tensor[4],[2]>(phong1CED);
        real phSp1D7B#1 = TensorIndex<tensor[4],[3]>(phong1CED);
        real _t1D7D#8 = 0.e0;
        tensor[4] rgba1D7F#1 = <tensor[4]>[_t1D7D,_t1D7D,_t1D7D,_t1D7D];
        tensor[3] rgb1D81#1 = <tensor[3]>[_t1D7D,_t1D7D,_t1D7D];
        real transp1D83#1 = 0.1e1;
        self.rayU = rayU1D05;
        self.rayV = rayV1D19;
        self.rayN = camNearVsp1CFB;
        self.UV = UV1D29;
        self.rayOrig = rayOrig1D53;
        self.rayVec = rayVec1D5D;
        self.alphaFix = alphaFix1D5F;
        self.eyeDir = eyeDir1D69;
        self.phKa = phKa1D75;
        self.phKd = phKd1D77;
        self.phKs = phKs1D79;
        self.phSp = phSp1D7B;
        self.rgba = rgba1D7F;
        self.raw = _t1D7D;
        self.rgb = rgb1D81;
        self.transp = transp1D83;
        return
      ASSIGN1DA9:  preds = [COND1D55]
        real op1_e3_l_151D96#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D01,_t1D03);
        real op1_e3_l_161D97#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1CFF);
        real op1_e3_l_171D98#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_151D96);
        real op1_e3_l_181D99#2 = λ(T0[])<Neg(T0)> (camUmax1CF9);
        real op1_e3_l_191D9A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_161D97,op1_e3_l_171D98);
        real op1_e3_l_201D9B#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1CF9,op1_e3_l_181D99);
        real op1_e3_l_221D9C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_191D9A,op1_e3_l_201D9B);
        real op1_e3_l_231D9D#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_181D99,op1_e3_l_221D9C);
        real op1_e3_l_241D9E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D03,_t1D17);
        real op1_e3_l_251D9F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1D15);
        real op1_e3_l_261DA0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_241D9E);
        real op1_e3_l_271DA1#2 = λ(T0[])<Neg(T0)> (camVmax1CF7);
        real op1_e3_l_281DA2#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_251D9F,op1_e3_l_261DA0);
        real op1_e3_l_291DA3#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CF7,op1_e3_l_271DA1);
        real op1_e3_l_311DA4#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_281DA2,op1_e3_l_291DA3);
        real op1_e3_l_321DA5#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_271DA1,op1_e3_l_311DA4);
        tensor[3] op1_e3_l_331DA6#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF1,op1_e3_l_231D9D);
        tensor[3] op1_e3_l_341DA7#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CF3,op1_e3_l_321DA5);
        tensor[3] op1_e3_l_351DA8#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_331DA6,op1_e3_l_341DA7);
        tensor[3] _t1D5B#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1CF5,op1_e3_l_351DA8);
        goto JOIN1D5C
      ASSIGN1DBE:  preds = [COND1D4F]
        real _t1DBD#3 = 0.e0;
        tensor[3] _t1D51#1 = <tensor[3]>[_t1DBD,_t1DBD,_t1DBD];
        goto JOIN1D52
    end state init
    method update
        ENTRY1DC0:  preds = []
          image(IMAGE1D<double[3]>) cmap1FF3#3 = globals.cmap1B87;
          int _t1DC1#18 = globals._t1BA8;
          femData:Space _t1DC3#18 = globals._tX1BA9;
          femData:FemFunc _t1DC5#18 = globals._tXX1BAA;
          image(IMAGE1D<double[3]>) img1DC7#1 = globals.img1BAB;
          kernel _t1DC9#1 = globals._tXXX1BAC;
          femData:Mesh block1DCB#1 = globals.block1B83;
          real rayStep1DCD#4 = globals.rayStep1B91;
          real transp01DCF#1 = globals.transp01B93;
          real thick1DD1#2 = globals.thick1B94;
          real fStrTh1DD3#1 = globals.fStrTh1B95;
          real fMaskTh1DD5#1 = globals.fMaskTh1B96;
          real fBias1DD7#1 = globals.fBias1B97;
          real maxAlpha1DD9#2 = globals.maxAlpha1B98;
          tensor[3] mcNear1DDB#2 = globals.mcNear1B9B;
          tensor[3] mcFar1DDD#1 = globals.mcFar1B9C;
          tensor[2] cminmax1DDF#2 = globals.cminmax1B9E;
          real camNearVsp1DE1#2 = globals.camNearVsp1BA5;
          real camFarVsp1DE3#2 = globals.camFarVsp1BA6;
          tensor[3] litwsp1DE5#2 = globals.litwsp1BA7;
          real rayN1DE7#4 = self.rayN;
          tensor[3] rayOrig1DE9#2 = self.rayOrig;
          tensor[3] rayVec1DEB#2 = self.rayVec;
          real alphaFix1DED#1 = self.alphaFix;
          tensor[3] eyeDir1DEF#1 = self.eyeDir;
          real phKa1DF1#1 = self.phKa;
          real phKd1DF3#1 = self.phKd;
          real phKs1DF5#2 = self.phKs;
          real phSp1DF7#1 = self.phSp;
          tensor[3] rgb1DF9#1 = self.rgb;
          real transp1DFB#2 = self.transp;
          real rayN1DFD#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1DE7,rayStep1DCD);
          bool _t1DFF#1 = GT<real>(rayN1DFD,camFarVsp1DE3);
          if _t1DFF then goto SAVE1E02 else goto JOIN1E04
        SAVE1E02:  preds = [COND1E01]
          self.rayN = rayN1DFD;
          stabilize
          goto JOIN1E04
        JOIN1E04:  preds = [*STABILIZE1E03,COND1E01]
          real op1_e3_l_41E06#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1DE7,rayStep1DCD);
          tensor[3] op1_e3_l_51E07#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DEB,op1_e3_l_41E06);
          tensor[3] pos1E05#25 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1DE9,op1_e3_l_51E07);
          femData:RefCell _t1E0B#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1DCB);
          real _t1E0D#1 = 0.1e-8;
          bool _t1E0F#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1E0B,pos1E05,_t1E0D);
          if _t1E0F then goto ASSIGN1E17 else goto ASSIGN1FB2
        ASSIGN1E17:  preds = [COND1E11]
          int[84] femIndicies1E14#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E15#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E14);
          tensor[84] dofs1E13#1 = femDofs1E15;
          tensor[3,3,84] basisResult1E16#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E05);
          tensor[3,3] _t1E12#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,dofs1E13,basisResult1E16,pos1E05);
          (real[3] _t1E1C#1,tensor[3][3] evecs1E1D#0) = EigenVecs3x3(_t1E12);
          int _t1E1F#1 = 1;
          real _t1E21#1 = Subscript<real[3]>(_t1E1C,_t1E1F);
          int[84] femIndicies1E2A#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E2B#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E2A);
          tensor[84] dofs1E29#1 = femDofs1E2B;
          tensor[3,84] basisResult1E2C#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_61E24#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,dofs1E29,basisResult1E2C,pos1E05);
          real op1_e3_l_81E25#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61E24,probe_l_61E24);
          real op1_e3_l_91E26#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81E25);
          real op1_e3_l_101E27#1 = λ(T0[])<Neg(T0)> (_t1E21);
          real op1_e3_l_111E28#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1DD7,op1_e3_l_91E26);
          real _t1E23#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101E27,op1_e3_l_111E28);
          bool _t1E37#1 = GT<real>(_t1E23,fStrTh1DD3);
          if _t1E37 then goto ASSIGN1E3B else goto ASSIGN1FB1
        ASSIGN1E3B:  preds = [COND1E39]
          real _t1E3A#1 = 0.1e1;
          bool _t1E3C#1 = GTE<real>(_t1E3A,fMaskTh1DD5);
          if _t1E3C then goto ASSIGN1E40 else goto ASSIGN1FB0
        ASSIGN1E40:  preds = [COND1E3E]
          bool _t1E3F#1 = true;
          goto JOIN1E43
        JOIN1E43:  preds = [ASSIGN1E40,ASSIGN1FB0]
          bool _t1E41#1 = phi(_t1E3F,_t1E42)
          goto JOIN1E46
        JOIN1E46:  preds = [JOIN1E43,ASSIGN1FB1]
          bool _t1E44#1 = phi(_t1E41,_t1E45)
          goto JOIN1E49
        JOIN1E49:  preds = [JOIN1E46,ASSIGN1FB2]
          bool _t1E47#1 = phi(_t1E44,_t1E48)
          bool _t1E4A#1 = BNot(_t1E47);
          if _t1E4A then goto SAVE1E4D else goto JOIN1E4F
        SAVE1E4D:  preds = [COND1E4C]
          self.rayN = rayN1DFD;
          active
          goto JOIN1E4F
        JOIN1E4F:  preds = [*ACTIVE1E4E,COND1E4C]
          int[84] femIndicies1E52#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E53#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E52);
          tensor[84] dofs1E51#1 = femDofs1E53;
          tensor[3,3,84] basisResult1E54#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E05);
          tensor[3,3] _t1E50#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,dofs1E51,basisResult1E54,pos1E05);
          (real[3] evals1E5A#2,tensor[3][3] E1E5B#2) = EigenVecs3x3(_t1E50);
          int _t1E5D#2 = 2;
          tensor[3] _t1E5F#5 = Subscript<tensor[3][3]>(E1E5B,_t1E5D);
          real _t1E61#5 = Subscript<real[3]>(evals1E5A,_t1E5D);
          int _t1E63#2 = 1;
          tensor[3] _t1E65#5 = Subscript<tensor[3][3]>(E1E5B,_t1E63);
          real _t1E67#5 = Subscript<real[3]>(evals1E5A,_t1E63);
          real _t1E69#8 = 0.e0;
          real _t1E6B#12 = 0.1e1;
          real _t1E6D#2 = 0.15e1;
          tensor[3,3] op1_e3_l_161E70#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E5F);
          tensor[3,3] op1_e3_l_171E71#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E65);
          tensor[3,3] op1_e3_l_181E72#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E61,op1_e3_l_161E70);
          tensor[3,3] op1_e3_l_191E73#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E67,op1_e3_l_171E71);
          tensor[3,3] op1_e3_l_201E74#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_181E72,op1_e3_l_191E73);
          int[84] femIndicies1E80#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E81#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E80);
          tensor[84] dofs1E7F#1 = femDofs1E81;
          tensor[3,84] basisResult1E82#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_211E75#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,dofs1E7F,basisResult1E82,pos1E05);
          tensor[3,3] op1_e3_l_221E76#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_201E74);
          tensor[3] op1_e3_l_301E77#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_211E75,op1_e3_l_221E76);
          real op1_e3_l_321E78#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_301E77,op1_e3_l_301E77);
          real op1_e3_l_331E79#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_321E78);
          real op1_e3_l_341E7A#1 = λ(T0[])<Abs(T0)> (op1_e3_l_331E79);
          real op1_e3_l_351E7B#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD1,op1_e3_l_341E7A);
          real op1_e3_l_361E7C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_351E7B);
          real op1_e3_l_371E7D#1 = λ(T0[],T1[])<(T0 * T1)> (_t1E6D,op1_e3_l_361E7C);
          real op1_e3_l_381E7E#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1E69,_t1E6B,op1_e3_l_371E7D);
          real _t1E6F#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DD9,op1_e3_l_381E7E);
          bool _t1E97#1 = EQ<real>(_t1E6F,_t1E69);
          if _t1E97 then goto SAVE1E9A else goto JOIN1E9C
        SAVE1E9A:  preds = [COND1E99]
          self.rayN = rayN1DFD;
          active
          goto JOIN1E9C
        JOIN1E9C:  preds = [*ACTIVE1E9B,COND1E99]
          tensor[3,3] op1_e3_l_171E9E#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E5F);
          tensor[3,3] op1_e3_l_181E9F#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E65);
          tensor[3,3] op1_e3_l_191EA0#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E61,op1_e3_l_171E9E);
          tensor[3,3] op1_e3_l_201EA1#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E67,op1_e3_l_181E9F);
          tensor[3,3] op1_e3_l_211EA2#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_191EA0,op1_e3_l_201EA1);
          int[84] femIndicies1EAF#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1EB0#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1EAF);
          tensor[84] dofs1EAE#1 = femDofs1EB0;
          tensor[3,84] basisResult1EB1#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_221EA3#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,dofs1EAE,basisResult1EB1,pos1E05);
          tensor[3,3] op1_e3_l_231EA4#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_211EA2);
          tensor[3] op1_e3_l_311EA5#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_221EA3,op1_e3_l_231EA4);
          real op1_e3_l_331EA6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_311EA5,op1_e3_l_311EA5);
          real op1_e3_l_341EA7#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_331EA6);
          real op1_e3_l_351EA8#1 = λ(T0[])<Abs(T0)> (op1_e3_l_341EA7);
          real op1_e3_l_361EA9#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD1,op1_e3_l_351EA8);
          real op1_e3_l_371EAA#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_361EA9);
          real op1_e3_l_381EAB#1 = λ(T0[],T1[])<(T0 * T1)> (_t1E6D,op1_e3_l_371EAA);
          real op1_e3_l_391EAC#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1E6B,_t1E69,op1_e3_l_381EAB);
          real op1_e3_l_401EAD#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DD9,op1_e3_l_391EAC);
          real _t1E9D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_401EAD);
          real _t1EC7#2 = MathFn<pow>(_t1E9D,alphaFix1DED);
          bool _t1EC9#1 = NEQ<real>(phKs1DF5,_t1E69);
          if _t1EC9 then goto ASSIGN1EE4 else goto JOIN1EFF
        ASSIGN1EE4:  preds = [COND1ECB]
          tensor[3] op1_e3_l_241ECD#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1DEF,litwsp1DE5);
          real op1_e3_l_261ECE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_241ECD,op1_e3_l_241ECD);
          real op1_e3_l_271ECF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_261ECE);
          tensor[3,3] op1_e3_l_281ED0#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E5F);
          tensor[3,3] op1_e3_l_291ED1#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E65);
          tensor[3,3] op1_e3_l_301ED2#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E61,op1_e3_l_281ED0);
          tensor[3,3] op1_e3_l_311ED3#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E67,op1_e3_l_291ED1);
          tensor[3,3] op1_e3_l_321ED4#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_301ED2,op1_e3_l_311ED3);
          int[84] femIndicies1EE1#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1EE2#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1EE1);
          tensor[84] dofs1EE0#1 = femDofs1EE2;
          tensor[3,84] basisResult1EE3#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_331ED5#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,dofs1EE0,basisResult1EE3,pos1E05);
          tensor[3,3] op1_e3_l_341ED6#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_321ED4);
          tensor[3] op1_e3_l_491ED7#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_331ED5,op1_e3_l_341ED6);
          real op1_e3_l_511ED8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_491ED7,op1_e3_l_491ED7);
          real op1_e3_l_521ED9#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_511ED8);
          real op1_e3_l_541EDA#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_521ED9);
          tensor[3] op1_e3_l_551EDB#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_491ED7,op1_e3_l_541EDA);
          tensor[3] op1_e3_l_561EDC#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_551EDB);
          real op1_e3_l_581EDD#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_271ECF);
          real op1_e3_l_591EDE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_561EDC,op1_e3_l_241ECD);
          real op1_e3_l_601EDF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_581EDD,op1_e3_l_591EDE);
          real _t1ECC#1 = λ(T0[])<Abs(T0)> (op1_e3_l_601EDF);
          real scomp1EFC#1 = MathFn<pow>(_t1ECC,phSp1DF7);
          goto JOIN1EFF
        JOIN1EFF:  preds = [ASSIGN1EFD,COND1ECB]
          real scomp1EFE#1 = phi(scomp1EFC,_t1E69)
          real cmin1F00#3 = TensorIndex<tensor[2],[0]>(cminmax1DDF);
          real cmax1F02#2 = TensorIndex<tensor[2],[1]>(cminmax1DDF);
          tensor[3] mcol1F04#2 = <tensor[3]>[_t1E6B,_t1E6B,_t1E6B];
          bool _t1F06#1 = NEQ<real>(cmin1F00,cmax1F02);
          if _t1F06 then goto ASSIGN1F18 else goto JOIN1F58
        ASSIGN1F18:  preds = [COND1F08]
          real op1_e3_l_141F0A#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1DE7,rayStep1DCD);
          tensor[3,3] op1_e3_l_151F0B#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E5F);
          tensor[3,3] op1_e3_l_161F0C#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E65);
          tensor[3,3] op1_e3_l_171F0D#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E61,op1_e3_l_151F0B);
          tensor[3,3] op1_e3_l_181F0E#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E67,op1_e3_l_161F0C);
          tensor[3,3] op1_e3_l_191F0F#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_171F0D,op1_e3_l_181F0E);
          int[84] femIndicies1F15#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1F16#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1F15);
          tensor[84] dofs1F14#1 = femDofs1F16;
          tensor[3,84] basisResult1F17#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_201F10#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,dofs1F14,basisResult1F17,pos1E05);
          tensor[3,3] op1_e3_l_211F11#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_191F0F);
          tensor[3] op1_e3_l_221F12#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DEB,op1_e3_l_141F0A);
          tensor[3] op1_e3_l_231F13#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_201F10,op1_e3_l_211F11);
          tensor[3] _t1F09#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (rayOrig1DE9,op1_e3_l_221F12,op1_e3_l_231F13);
          int[84] femIndicies1F2F#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1F30#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1F2F);
          tensor[84] dofs1F2E#1 = femDofs1F30;
          tensor[84] basisResult1F31#1 = EvaluateBasis<BasisArray(84)>(_t1F09);
          real probe_l_81F28#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1DC1,_t1DC3,_t1DC5,_t1F09,dofs1F2E,basisResult1F31,_t1F09);
          real op1_e3_l_91F29#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F00,probe_l_81F28);
          real op1_e3_l_101F2A#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F00,cmax1F02);
          real op1_e3_l_111F2B#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91F29,op1_e3_l_101F2A);
          real op1_e3_l_121F2C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E69,_t1E6B);
          real op1_e3_l_131F2D#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111F2B,op1_e3_l_121F2C);
          real _t1F27#2 = λ(T0[],T1[])<(T0 + T1)> (_t1E69,op1_e3_l_131F2D);
          real Mtransform1F3E#2 = Transform<IMAGE1D<double[3]>>(cmap1FF3);
          real MxPos1F3F#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1F3E,_t1F27);
          real Ttranslate1F40#1 = Translate<IMAGE1D<double[3]>>(cmap1FF3);
          real imgPos1F41#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1F3F,Ttranslate1F40);
          real nd1F42#2 = Floor<1>(imgPos1F41);
          real f1F43#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1F41,nd1F42);
          int n1F44#1 = RealToInt<1>(nd1F42);
          int lit1F45#1 = 0;
          int idx1F46#1 = IAdd(n1F44,lit1F45);
          tensor[3,2] ldvox1F47#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap1FF3,idx1F46);
          tensor[2] kernX_1F48#1 = BuildPos<1>(f1F43);
          tensor[2] kevalX_d0_1F49#1 = EvalKernel<2,tent,0>(kernX_1F48);
          tensor[3] mcol1F3D#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1DC7,_t1DC9,_t1F27,Mtransform1F3E,ldvox1F47,kevalX_d0_1F49);
          goto JOIN1F58
        JOIN1F58:  preds = [ASSIGN1F56,COND1F08]
          tensor[3] mcol1F57#1 = phi(mcol1F3D,mcol1F04)
          tensor[3,3] op1_e3_l_371F5A#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E5F);
          tensor[3,3] op1_e3_l_381F5B#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E65);
          tensor[3,3] op1_e3_l_391F5C#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E61,op1_e3_l_371F5A);
          tensor[3,3] op1_e3_l_401F5D#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E67,op1_e3_l_381F5B);
          tensor[3,3] op1_e3_l_411F5E#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_391F5C,op1_e3_l_401F5D);
          int[84] femIndicies1F78#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1F79#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1F78);
          tensor[84] dofs1F77#1 = femDofs1F79;
          tensor[3,84] basisResult1F7A#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_421F5F#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,dofs1F77,basisResult1F7A,pos1E05);
          tensor[3,3] op1_e3_l_431F60#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_411F5E);
          tensor[3] op1_e3_l_581F61#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_421F5F,op1_e3_l_431F60);
          real op1_e3_l_601F62#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_581F61,op1_e3_l_581F61);
          real op1_e3_l_611F63#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_601F62);
          real op1_e3_l_631F64#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_611F63);
          tensor[3] op1_e3_l_641F65#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_581F61,op1_e3_l_631F64);
          tensor[3] op1_e3_l_651F66#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_641F65);
          real op1_e3_l_661F67#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1DE5,op1_e3_l_651F66);
          real op1_e3_l_671F68#1 = λ(T0[])<(T0)^2> (op1_e3_l_661F67);
          real op1_e3_l_681F69#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1DF3,op1_e3_l_671F68);
          real op1_e3_l_691F6A#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1DE7,rayStep1DCD);
          real op1_e3_l_701F6B#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE1,op1_e3_l_691F6A);
          real op1_e3_l_711F6C#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE1,camFarVsp1DE3);
          real op1_e3_l_721F6D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_701F6B,op1_e3_l_711F6C);
          tensor[3] op1_e3_l_731F6E#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1DDB,mcFar1DDD);
          tensor[3] op1_e3_l_741F6F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_721F6D,op1_e3_l_731F6E);
          real op1_e3_l_751F70#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1DF1,op1_e3_l_681F69);
          tensor[3] op1_e3_l_761F71#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1DDB,op1_e3_l_741F6F);
          tensor[3] op1_e3_l_771F72#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol1F57,op1_e3_l_751F70,op1_e3_l_761F71);
          tensor[3] op1_e3_l_781F73#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1DF5,scomp1EFE,mcol1F04);
          real op1_e3_l_791F74#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,_t1EC7);
          tensor[3] op1_e3_l_801F75#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_771F72,op1_e3_l_781F73);
          tensor[3] op1_e3_l_811F76#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1DFB,op1_e3_l_791F74,op1_e3_l_801F75);
          tensor[3] rgb1F59#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1DF9,op1_e3_l_811F76);
          real op1_e3_l_41F9E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,_t1EC7);
          real op1_e3_l_51F9F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_41F9E);
          real transp1F9D#2 = λ(T0[],T1[])<(T0 * T1)> (transp1DFB,op1_e3_l_51F9F);
          bool _t1FA3#1 = LT<real>(transp1F9D,transp01DCF);
          if _t1FA3 then goto SAVE1FA6 else goto JOIN1FAB
        SAVE1FA6:  preds = [COND1FA5]
          self.rayN = rayN1DFD;
          self.rgb = rgb1F59;
          self.transp = _t1E69;
          stabilize
          goto JOIN1FAB
        JOIN1FAB:  preds = [*STABILIZE1FA9,COND1FA5]
          real transp1FAA#1 = phi(transp1F9D)
          self.rayN = rayN1DFD;
          self.rgb = rgb1F59;
          self.transp = transp1FAA;
          active
        ASSIGN1FB0:  preds = [COND1E3E]
          bool _t1E42#1 = false;
          goto JOIN1E43
        ASSIGN1FB1:  preds = [COND1E39]
          bool _t1E45#1 = false;
          goto JOIN1E46
        ASSIGN1FB2:  preds = [COND1E11]
          bool _t1E48#1 = false;
          goto JOIN1E49
    end update
    method stabilize
        ENTRY1FB3:  preds = []
          tensor[4] rgba1FB4#1 = self.rgba;
          tensor[3] rgb1FB6#3 = self.rgb;
          real transp1FB8#5 = self.transp;
          real _t1FBA#5 = 0.1e1;
          bool _t1FBC#1 = LT<real>(transp1FB8,_t1FBA);
          if _t1FBC then goto ASSIGN1FC0 else goto JOIN1FD6
        ASSIGN1FC0:  preds = [COND1FBE]
          real aa1FBF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FBA,transp1FB8);
          real _t1FC1#1 = TensorIndex<tensor[3],[0]>(rgb1FB6);
          real op1_e3_l_31FC4#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FBA,transp1FB8);
          real _t1FC3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FC1,op1_e3_l_31FC4);
          real _t1FC7#1 = TensorIndex<tensor[3],[1]>(rgb1FB6);
          real op1_e3_l_31FCA#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FBA,transp1FB8);
          real _t1FC9#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FC7,op1_e3_l_31FCA);
          real _t1FCD#1 = TensorIndex<tensor[3],[2]>(rgb1FB6);
          real op1_e3_l_31FD0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FBA,transp1FB8);
          real _t1FCF#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FCD,op1_e3_l_31FD0);
          tensor[4] rgba1FD3#1 = <tensor[4]>[_t1FC3,_t1FC9,_t1FCF,aa1FBF];
          goto JOIN1FD6
        JOIN1FD6:  preds = [ASSIGN1FD4,COND1FBE]
          tensor[4] rgba1FD5#1 = phi(rgba1FD3,rgba1FB4)
          self.rgba = rgba1FD5;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY1FD9:  preds = []
      int iresU1FDA#1 = globals.iresU1B8F;
      int iresV1FDC#1 = globals.iresV1B90;
      int _t1FDE#2 = 0;
      int _t1FE0#2 = 1;
      int _t1FE2#1 = ISub(iresV1FDC,_t1FE0);
      int[] _t1FE4#1 = Range(_t1FDE,_t1FE2);
    FOREACH1FE7:  preds = [ASSIGN1FE5,NEXT1FF0]
      foreach (vi1FE6 in _t1FE4) on exit goto RETURN1FF1
      int _t1FE8#1 = ISub(iresU1FDA,_t1FE0);
      int[] _t1FEA#1 = Range(_t1FDE,_t1FE8);
    FOREACH1FED:  preds = [ASSIGN1FEB,NEXT1FEF]
      foreach (ui1FEC in _t1FEA) on exit goto NEXT1FF0
      new ray(ui1FEC,vi1FE6);
      goto FOREACH1FED
    NEXT1FF0:  preds = [FOREACH1FED]
      goto FOREACH1FE7
    RETURN1FF1:  preds = [FOREACH1FE7]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1B83 (block) = <no-default>
  input 0space04CF_intermedateGlobal1B84 (space) = <no-default>
  input 0U04D1_intermedateGlobal1B85 (U) = <no-default>
  input cellChoice1B86 (cellChoice) = <no-default>
  input cmap1B87 (cmap) = image("cmap.nrrd")
  input camEye1B88 (camEye) = <default>
  input camAt1B89 (camAt) = <default>
  input camUp1B8A (camUp) = <default>
  input camNear1B8B (camNear) = <default>
  input camFar1B8C (camFar) = <default>
  input camFOV1B8D (camFOV) = <default>
  input camOrtho1B8E (camOrtho) = <default>
  input iresU1B8F (iresU) = <default>
  input iresV1B90 (iresV) = <default>
  input rayStep1B91 (rayStep) = <default>
  input refStep1B92 (refStep) = <default>
  input transp01B93 (transp0) = <default>
  input thick1B94 (thick) = <default>
  input fStrTh1B95 (fStrTh) = <default>
  input fMaskTh1B96 (fMaskTh) = <default>
  input fBias1B97 (fBias) = <default>
  input maxAlpha1B98 (maxAlpha) = <default>
  input light1B99 (light) = <default>
  input phong1B9A (phong) = <default>
  input mcNear1B9B (mcNear) = <default>
  input mcFar1B9C (mcFar) = <default>
  input litdir1B9D (litdir) = <default>
  input cminmax1B9E (cminmax) = <default>
  global tensor[3] camN1B9F
  global tensor[3] camU1BA0
  global tensor[3] camV1BA1
  global real camDist1BA2
  global real camVmax1BA3
  global real camUmax1BA4
  global real camNearVsp1BA5
  global real camFarVsp1BA6
  global tensor[3] litwsp1BA7
  global int _t1BA8
  global femData:Space _tX1BA9
  global femData:FemFunc _tXX1BAA
  global image(IMAGE1D<double[3]>) img1BAB
  global kernel _tXXX1BAC
## functions
## input initialization
  ENTRY1BAD:  preds = []
    real _t1BAE#13 = 0.e0;
    real _t1BB0#1 = -0.2e1;
    tensor[3] camEye1BB2#1 = <tensor[3]>[_t1BAE,_t1BB0,_t1BAE];
    globals.camEye1B88 = camEye1BB2;
    tensor[3] camAt1BB5#1 = <tensor[3]>[_t1BAE,_t1BAE,_t1BAE];
    globals.camAt1B89 = camAt1BB5;
    real _t1BB8#5 = 0.1e1;
    tensor[3] camUp1BBA#1 = <tensor[3]>[_t1BAE,_t1BAE,_t1BB8];
    globals.camUp1B8A = camUp1BBA;
    real camNear1BBD#1 = -0.4e1;
    globals.camNear1B8B = camNear1BBD;
    real camFar1BC0#1 = 0.4e1;
    globals.camFar1B8C = camFar1BC0;
    real camFOV1BC3#1 = 0.1e2;
    globals.camFOV1B8D = camFOV1BC3;
    bool camOrtho1BC6#2 = false;
    globals.camOrtho1B8E = camOrtho1BC6;
    int iresU1BC9#2 = 100;
    globals.iresU1B8F = iresU1BC9;
    globals.iresV1B90 = iresU1BC9;
    real rayStep1BCD#2 = 0.1e-3;
    globals.rayStep1B91 = rayStep1BCD;
    globals.refStep1B92 = rayStep1BCD;
    real transp01BD1#1 = 0.5e-2;
    globals.transp01B93 = transp01BD1;
    real thick1BD4#1 = 0.1e-1;
    globals.thick1B94 = thick1BD4;
    globals.fStrTh1B95 = _t1BAE;
    globals.fMaskTh1B96 = _t1BAE;
    real fBias1BD9#2 = 0.1e0;
    globals.fBias1B97 = fBias1BD9;
    globals.maxAlpha1B98 = _t1BB8;
    globals.light1B99 = camOrtho1BC6;
    real _t1BDE#1 = 0.7e0;
    real _t1BE0#1 = 0.2e0;
    real _t1BE2#1 = 0.1e3;
    tensor[4] phong1BE4#1 = <tensor[4]>[fBias1BD9,_t1BDE,_t1BE0,_t1BE2];
    globals.phong1B9A = phong1BE4;
    tensor[3] mcNear1BE7#2 = <tensor[3]>[_t1BB8,_t1BB8,_t1BB8];
    globals.mcNear1B9B = mcNear1BE7;
    globals.mcFar1B9C = mcNear1BE7;
    real _t1BEB#1 = -0.1e1;
    tensor[3] litdir1BED#1 = <tensor[3]>[_t1BAE,_t1BEB,_t1BAE];
    globals.litdir1B9D = litdir1BED;
    tensor[2] cminmax1BF0#1 = <tensor[2]>[_t1BAE,_t1BAE];
    globals.cminmax1B9E = cminmax1BF0;
    return
## global-variable initialization
  ENTRY1BF4:  preds = []
    femData:Mesh block1BF5#3 = globals.block1B83;
    femData:Space 0space04CF_intermedateGlobal1BF7#1 = globals.0space04CF_intermedateGlobal1B84;
    femData:FemFunc 0U04D1_intermedateGlobal1BF9#1 = globals.0U04D1_intermedateGlobal1B85;
    int cellChoice1BFB#1 = globals.cellChoice1B86;
    image(IMAGE1D<double[3]>) cmap1BFD#1 = globals.cmap1B87;
    tensor[3] camEye1BFF#1 = globals.camEye1B88;
    tensor[3] camAt1C01#1 = globals.camAt1B89;
    tensor[3] camUp1C03#1 = globals.camUp1B8A;
    real camNear1C05#1 = globals.camNear1B8B;
    real camFar1C07#1 = globals.camFar1B8C;
    real camFOV1C09#1 = globals.camFOV1B8D;
    int iresU1C0B#1 = globals.iresU1B8F;
    int iresV1C0D#1 = globals.iresV1B90;
    tensor[3] litdir1C0F#2 = globals.litdir1B9D;
    int _t1C11#1 = 0;
    int _t1C13#1 = 1;
    int _t1C15#1 = ExtractFemItem<int,NumCell(Mesh)>(block1BF5);
    int _t1C17#1 = ISub(_t1C15,_t1C13);
    int[] _t1C19#1 = Range(_t1C11,_t1C17);
    femData:MeshCell[] _t1C1B#1 = <femData:MeshCell[]>{};
  FOREACH1C1E:  preds = [ASSIGN1C1C,NEXT1C24]
    foreach (_t1C1D in _t1C19) on exit goto ASSIGN1C26
      femData:MeshCell[] _t1C22#2 = phi(_t1C1B,_t1C21)
    femData:MeshCell _t1C1F#1 = LoadFem<femData:MeshCell>(block1BF5,_t1C1D);
    femData:MeshCell[] _t1C21#1 = Append<femData:MeshCell>(_t1C22,_t1C1F);
    goto FOREACH1C1E
  ASSIGN1C26:  preds = [FOREACH1C1E]
    femData:Space space1C25#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal1BF7,block1BF5);
    femData:FemFunc U1C27#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal1BF9,space1C25);
    femData:MeshCell c11C29#1 = Subscript<femData:MeshCell[]>(_t1C22,cellChoice1BFB);
    int _t1C2B#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11C29);
    femData:FuncCell _t1C2D#2 = LoadFem<femData:FuncCell>(U1C27,_t1C2B);
    femData:FemFunc _t1C2F#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1C2D);
    femData:Space _t1C31#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1C2F);
    int _t1C33#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1C2D);
    kernel _t1C35#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1C37#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1BFD);
    tensor[3] op1_e3_l_41C3A#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_61C3B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41C3A,op1_e3_l_41C3A);
    real op1_e3_l_71C3C#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61C3B);
    real op1_e3_l_91C3D#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71C3C);
    tensor[3] camN1C39#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41C3A,op1_e3_l_91C3D);
    globals.camN1B9F = camN1C39;
    tensor[3,3] op1_e3_l_151C48#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C03);
    tensor[3] op1_e3_l_171C4A#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C3A,op1_e3_l_151C48);
    real op1_e3_l_341C4B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171C4A,op1_e3_l_171C4A);
    real op1_e3_l_351C4C#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91C3D,op1_e3_l_91C3D,op1_e3_l_341C4B);
    real op1_e3_l_361C4D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C4C);
    tensor[3] op1_e3_l_371C4E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C3D,op1_e3_l_171C4A);
    real op1_e3_l_381C4F#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C4D);
    tensor[3] camU1C44#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371C4E,op1_e3_l_381C4F);
    globals.camU1BA0 = camU1C44;
    tensor[3,3] op1_e3_l_451C67#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171C4A);
    tensor[3] op1_e3_l_471C68#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C3A,op1_e3_l_451C67);
    tensor[3] op1_e3_l_501C6A#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C3D,op1_e3_l_471C68);
    tensor[3] camV1C5D#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91C3D,op1_e3_l_381C4F,op1_e3_l_501C6A);
    globals.camV1BA1 = camV1C5D;
    globals.camDist1BA2 = op1_e3_l_71C3C;
    real _t1C81#1 = 0.314159265358979323846264338327950288e1;
    real _t1C83#1 = 0.36e3;
    real op1_e3_l_51C86#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C09,_t1C81);
    real op1_e3_l_61C87#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C83,op1_e3_l_51C86);
    real op1_e3_l_101C8A#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61C87);
    real camVmax1C85#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101C8A,op1_e3_l_71C3C);
    globals.camVmax1BA3 = camVmax1C85;
    real _t1C94#1 = IntToReal(iresU1C0B);
    real _t1C96#1 = IntToReal(iresV1C0D);
    real op1_e3_l_141C9F#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1C94,op1_e3_l_101C8A,op1_e3_l_71C3C);
    real camUmax1C98#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C96,op1_e3_l_141C9F);
    globals.camUmax1BA4 = camUmax1C98;
    real camNearVsp1CA9#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1C05,op1_e3_l_71C3C);
    globals.camNearVsp1BA5 = camNearVsp1CA9;
    real camFarVsp1CB2#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1C07,op1_e3_l_71C3C);
    globals.camFarVsp1BA6 = camFarVsp1CB2;
    tensor[3,3] _t1CBB#1 = <tensor[3,3]>[camU1C44,camV1C5D,camN1C39];
    real op1_e3_l_31CBE#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1C0F);
    real op1_e3_l_41CBF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31CBE);
    real op1_e3_l_51CC0#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41CBF);
    tensor[3] op1_e3_l_61CC1#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1CBB,litdir1C0F);
    tensor[3] litwsp1CBD#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51CC0,op1_e3_l_61CC1);
    globals.litwsp1BA7 = litwsp1CBD;
    globals._t1BA8 = _t1C33;
    globals._tX1BA9 = _t1C31;
    globals._tXX1BAA = _t1C2F;
    globals.img1BAB = img1C37;
    globals._tXXX1BAC = _t1C35;
    return
## strand
  strand ray (int ui1CCE#1, int vi1CCF#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1CE0:  preds = []
        tensor[3] camEye1CE1#1 = globals.camEye1B88;
        bool camOrtho1CE3#2 = globals.camOrtho1B8E;
        int iresU1CE5#1 = globals.iresU1B8F;
        int iresV1CE7#1 = globals.iresV1B90;
        real rayStep1CE9#1 = globals.rayStep1B91;
        real refStep1CEB#1 = globals.refStep1B92;
        tensor[4] phong1CED#4 = globals.phong1B9A;
        tensor[3] camN1CEF#1 = globals.camN1B9F;
        tensor[3] camU1CF1#1 = globals.camU1BA0;
        tensor[3] camV1CF3#1 = globals.camV1BA1;
        real camDist1CF5#1 = globals.camDist1BA2;
        real camVmax1CF7#2 = globals.camVmax1BA3;
        real camUmax1CF9#2 = globals.camUmax1BA4;
        real camNearVsp1CFB#1 = globals.camNearVsp1BA5;
        real _t1CFD#5 = -0.5e0;
        real _t1CFF#1 = IntToReal(ui1CCE);
        real _t1D01#1 = IntToReal(iresU1CE5);
        real _t1D03#3 = 0.5e0;
        real op1_e3_l_61D06#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D01,_t1D03);
        real op1_e3_l_71D07#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1CFF);
        real op1_e3_l_81D08#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_61D06);
        real op1_e3_l_91D09#2 = λ(T0[])<Neg(T0)> (camUmax1CF9);
        real op1_e3_l_101D0A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D07,op1_e3_l_81D08);
        real op1_e3_l_111D0B#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1CF9,op1_e3_l_91D09);
        real op1_e3_l_131D0C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D0A,op1_e3_l_111D0B);
        real rayU1D05#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D09,op1_e3_l_131D0C);
        real _t1D15#1 = IntToReal(vi1CCF);
        real _t1D17#2 = IntToReal(iresV1CE7);
        real op1_e3_l_61D1A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D17,_t1D03);
        real op1_e3_l_71D1B#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1D15);
        real op1_e3_l_81D1C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_61D1A);
        real op1_e3_l_91D1D#3 = λ(T0[])<Neg(T0)> (camVmax1CF7);
        real op1_e3_l_101D1E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D1B,op1_e3_l_81D1C);
        real op1_e3_l_111D1F#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CF7,op1_e3_l_91D1D);
        real op1_e3_l_131D20#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D1E,op1_e3_l_111D1F);
        real rayV1D19#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D1D,op1_e3_l_131D20);
        real op1_e3_l_231D32#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D03,_t1D17);
        real op1_e3_l_251D34#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_231D32);
        real op1_e3_l_271D36#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D1B,op1_e3_l_251D34);
        real op1_e3_l_301D38#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271D36,op1_e3_l_111D1F);
        real op1_e3_l_311D39#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D1D,op1_e3_l_301D38);
        tensor[3] op1_e3_l_321D3A#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF1,rayU1D05);
        tensor[3] op1_e3_l_331D3B#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CF3,op1_e3_l_311D39);
        tensor[3] UV1D29#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321D3A,op1_e3_l_331D3B);
        if camOrtho1CE3 then goto JOIN1D52 else goto ASSIGN1DBE
      JOIN1D52:  preds = [COND1D4F,ASSIGN1DBF]
        tensor[3] _t1D50#1 = phi(UV1D29,_t1D51)
        tensor[3] rayOrig1D53#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1CE1,_t1D50);
        if camOrtho1CE3 then goto ASSIGN1D57 else goto ASSIGN2008
      ASSIGN1D57:  preds = [COND1D55]
        real _t1D56#3 = 0.e0;
        tensor[3] _t1D58#1 = <tensor[3]>[_t1D56,_t1D56,_t1D56];
        goto JOIN1D5C
      JOIN1D5C:  preds = [ASSIGN1D59,ASSIGN2008]
        tensor[3] _t1D5A#1 = phi(_t1D58,_t1D5B)
        tensor[3] rayVec1D5D#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CEF,_t1D5A);
        real op1_e3_l_61D61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1D5D,rayVec1D5D);
        real op1_e3_l_71D62#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D61);
        real op1_e3_l_81D63#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1CE9,op1_e3_l_71D62);
        real alphaFix1D5F#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1CEB,op1_e3_l_81D63);
        real op1_e3_l_91D6D#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D62);
        tensor[3] op1_e3_l_101D6E#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1D5D,op1_e3_l_91D6D);
        tensor[3] eyeDir1D69#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101D6E);
        real phKa1D75#1 = TensorIndex<tensor[4],[0]>(phong1CED);
        real phKd1D77#1 = TensorIndex<tensor[4],[1]>(phong1CED);
        real phKs1D79#1 = TensorIndex<tensor[4],[2]>(phong1CED);
        real phSp1D7B#1 = TensorIndex<tensor[4],[3]>(phong1CED);
        real _t1D7D#8 = 0.e0;
        tensor[4] rgba1D7F#1 = <tensor[4]>[_t1D7D,_t1D7D,_t1D7D,_t1D7D];
        tensor[3] rgb1D81#1 = <tensor[3]>[_t1D7D,_t1D7D,_t1D7D];
        real transp1D83#1 = 0.1e1;
        self.rayU = rayU1D05;
        self.rayV = rayV1D19;
        self.rayN = camNearVsp1CFB;
        self.UV = UV1D29;
        self.rayOrig = rayOrig1D53;
        self.rayVec = rayVec1D5D;
        self.alphaFix = alphaFix1D5F;
        self.eyeDir = eyeDir1D69;
        self.phKa = phKa1D75;
        self.phKd = phKd1D77;
        self.phKs = phKs1D79;
        self.phSp = phSp1D7B;
        self.rgba = rgba1D7F;
        self.raw = _t1D7D;
        self.rgb = rgb1D81;
        self.transp = transp1D83;
        return
      ASSIGN2008:  preds = [COND1D55]
        tensor[3] _t1D5B#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1CF5,UV1D29);
        goto JOIN1D5C
      ASSIGN1DBE:  preds = [COND1D4F]
        real _t1DBD#3 = 0.e0;
        tensor[3] _t1D51#1 = <tensor[3]>[_t1DBD,_t1DBD,_t1DBD];
        goto JOIN1D52
    end state init
    method update
        ENTRY1DC0:  preds = []
          image(IMAGE1D<double[3]>) cmap1FF3#3 = globals.cmap1B87;
          int _t1DC1#7 = globals._t1BA8;
          femData:Space _t1DC3#7 = globals._tX1BA9;
          femData:FemFunc _t1DC5#7 = globals._tXX1BAA;
          image(IMAGE1D<double[3]>) img1DC7#1 = globals.img1BAB;
          kernel _t1DC9#1 = globals._tXXX1BAC;
          femData:Mesh block1DCB#1 = globals.block1B83;
          real rayStep1DCD#1 = globals.rayStep1B91;
          real transp01DCF#1 = globals.transp01B93;
          real thick1DD1#1 = globals.thick1B94;
          real fStrTh1DD3#1 = globals.fStrTh1B95;
          real fMaskTh1DD5#1 = globals.fMaskTh1B96;
          real fBias1DD7#1 = globals.fBias1B97;
          real maxAlpha1DD9#2 = globals.maxAlpha1B98;
          tensor[3] mcNear1DDB#2 = globals.mcNear1B9B;
          tensor[3] mcFar1DDD#1 = globals.mcFar1B9C;
          tensor[2] cminmax1DDF#2 = globals.cminmax1B9E;
          real camNearVsp1DE1#2 = globals.camNearVsp1BA5;
          real camFarVsp1DE3#2 = globals.camFarVsp1BA6;
          tensor[3] litwsp1DE5#2 = globals.litwsp1BA7;
          real rayN1DE7#1 = self.rayN;
          tensor[3] rayOrig1DE9#2 = self.rayOrig;
          tensor[3] rayVec1DEB#1 = self.rayVec;
          real alphaFix1DED#1 = self.alphaFix;
          tensor[3] eyeDir1DEF#1 = self.eyeDir;
          real phKa1DF1#1 = self.phKa;
          real phKd1DF3#1 = self.phKd;
          real phKs1DF5#2 = self.phKs;
          real phSp1DF7#1 = self.phSp;
          tensor[3] rgb1DF9#1 = self.rgb;
          real transp1DFB#2 = self.transp;
          real rayN1DFD#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1DE7,rayStep1DCD);
          bool _t1DFF#1 = GT<real>(rayN1DFD,camFarVsp1DE3);
          if _t1DFF then goto SAVE1E02 else goto JOIN1E04
        SAVE1E02:  preds = [COND1E01]
          self.rayN = rayN1DFD;
          stabilize
          goto JOIN1E04
        JOIN1E04:  preds = [*STABILIZE1E03,COND1E01]
          tensor[3] op1_e3_l_51E07#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DEB,rayN1DFD);
          tensor[3] pos1E05#13 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1DE9,op1_e3_l_51E07);
          femData:RefCell _t1E0B#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1DCB);
          real _t1E0D#1 = 0.1e-8;
          bool _t1E0F#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1E0B,pos1E05,_t1E0D);
          if _t1E0F then goto ASSIGN1E17 else goto ASSIGN1FB2
        ASSIGN1E17:  preds = [COND1E11]
          int[84] femIndicies1E14#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E15#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E14);
          tensor[3,3,84] basisResult1E16#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E05);
          tensor[3,3] _t1E12#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E15,basisResult1E16,pos1E05);
          (real[3] _t1E1C#1,tensor[3][3] evecs1E1D#0) = EigenVecs3x3(_t1E12);
          int _t1E1F#1 = 1;
          real _t1E21#1 = Subscript<real[3]>(_t1E1C,_t1E1F);
          tensor[3,84] basisResult1E2C#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_61E24#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E15,basisResult1E2C,pos1E05);
          real op1_e3_l_81E25#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61E24,probe_l_61E24);
          real op1_e3_l_91E26#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81E25);
          real op1_e3_l_101E27#1 = λ(T0[])<Neg(T0)> (_t1E21);
          real op1_e3_l_111E28#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1DD7,op1_e3_l_91E26);
          real _t1E23#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101E27,op1_e3_l_111E28);
          bool _t1E37#1 = GT<real>(_t1E23,fStrTh1DD3);
          if _t1E37 then goto ASSIGN1E3B else goto ASSIGN1FB1
        ASSIGN1E3B:  preds = [COND1E39]
          real _t1E3A#1 = 0.1e1;
          bool _t1E3C#1 = GTE<real>(_t1E3A,fMaskTh1DD5);
          if _t1E3C then goto ASSIGN1E40 else goto ASSIGN1FB0
        ASSIGN1E40:  preds = [COND1E3E]
          bool _t1E3F#1 = true;
          goto JOIN1E43
        JOIN1E43:  preds = [ASSIGN1E40,ASSIGN1FB0]
          bool _t1E41#1 = phi(_t1E3F,_t1E42)
          goto JOIN1E46
        JOIN1E46:  preds = [JOIN1E43,ASSIGN1FB1]
          bool _t1E44#1 = phi(_t1E41,_t1E45)
          goto JOIN1E49
        JOIN1E49:  preds = [JOIN1E46,ASSIGN1FB2]
          bool _t1E47#1 = phi(_t1E44,_t1E48)
          bool _t1E4A#1 = BNot(_t1E47);
          if _t1E4A then goto SAVE1E4D else goto JOIN1E4F
        SAVE1E4D:  preds = [COND1E4C]
          self.rayN = rayN1DFD;
          active
          goto JOIN1E4F
        JOIN1E4F:  preds = [*ACTIVE1E4E,COND1E4C]
          int[84] femIndicies1E52#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E53#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E52);
          tensor[3,3,84] basisResult1E54#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E05);
          tensor[3,3] _t1E50#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E53,basisResult1E54,pos1E05);
          (real[3] evals1E5A#2,tensor[3][3] E1E5B#2) = EigenVecs3x3(_t1E50);
          int _t1E5D#2 = 2;
          tensor[3] _t1E5F#1 = Subscript<tensor[3][3]>(E1E5B,_t1E5D);
          real _t1E61#1 = Subscript<real[3]>(evals1E5A,_t1E5D);
          int _t1E63#2 = 1;
          tensor[3] _t1E65#1 = Subscript<tensor[3][3]>(E1E5B,_t1E63);
          real _t1E67#1 = Subscript<real[3]>(evals1E5A,_t1E63);
          real _t1E69#8 = 0.e0;
          real _t1E6B#10 = 0.1e1;
          real _t1E6D#1 = 0.15e1;
          tensor[3,3] op1_e3_l_161E70#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E5F);
          tensor[3,3] op1_e3_l_171E71#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E65);
          tensor[3,3] op1_e3_l_181E72#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E61,op1_e3_l_161E70);
          tensor[3,3] op1_e3_l_191E73#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E67,op1_e3_l_171E71);
          tensor[3,3] op1_e3_l_201E74#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_181E72,op1_e3_l_191E73);
          tensor[3,84] basisResult1E82#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_211E75#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E53,basisResult1E82,pos1E05);
          tensor[3,3] op1_e3_l_221E76#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_201E74);
          tensor[3] op1_e3_l_301E77#5 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_211E75,op1_e3_l_221E76);
          real op1_e3_l_321E78#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_301E77,op1_e3_l_301E77);
          real op1_e3_l_331E79#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_321E78);
          real op1_e3_l_341E7A#1 = λ(T0[])<Abs(T0)> (op1_e3_l_331E79);
          real op1_e3_l_351E7B#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD1,op1_e3_l_341E7A);
          real op1_e3_l_361E7C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_351E7B);
          real op1_e3_l_371E7D#2 = λ(T0[],T1[])<(T0 * T1)> (_t1E6D,op1_e3_l_361E7C);
          real op1_e3_l_381E7E#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1E69,_t1E6B,op1_e3_l_371E7D);
          real _t1E6F#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DD9,op1_e3_l_381E7E);
          bool _t1E97#1 = EQ<real>(_t1E6F,_t1E69);
          if _t1E97 then goto SAVE1E9A else goto JOIN1E9C
        SAVE1E9A:  preds = [COND1E99]
          self.rayN = rayN1DFD;
          active
          goto JOIN1E9C
        JOIN1E9C:  preds = [*ACTIVE1E9B,COND1E99]
          real op1_e3_l_391EAC#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1E6B,_t1E69,op1_e3_l_371E7D);
          real op1_e3_l_401EAD#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DD9,op1_e3_l_391EAC);
          real _t1E9D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_401EAD);
          real _t1EC7#1 = MathFn<pow>(_t1E9D,alphaFix1DED);
          bool _t1EC9#1 = NEQ<real>(phKs1DF5,_t1E69);
          if _t1EC9 then goto ASSIGN1EE4 else goto JOIN1EFF
        ASSIGN1EE4:  preds = [COND1ECB]
          tensor[3] op1_e3_l_241ECD#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1DEF,litwsp1DE5);
          real op1_e3_l_261ECE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_241ECD,op1_e3_l_241ECD);
          real op1_e3_l_271ECF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_261ECE);
          real op1_e3_l_541EDA#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_331E79);
          tensor[3] op1_e3_l_551EDB#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_301E77,op1_e3_l_541EDA);
          tensor[3] op1_e3_l_561EDC#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_551EDB);
          real op1_e3_l_581EDD#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_271ECF);
          real op1_e3_l_591EDE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_561EDC,op1_e3_l_241ECD);
          real op1_e3_l_601EDF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_581EDD,op1_e3_l_591EDE);
          real _t1ECC#1 = λ(T0[])<Abs(T0)> (op1_e3_l_601EDF);
          real scomp1EFC#1 = MathFn<pow>(_t1ECC,phSp1DF7);
          goto JOIN1EFF
        JOIN1EFF:  preds = [ASSIGN1EFD,COND1ECB]
          real scomp1EFE#1 = phi(scomp1EFC,_t1E69)
          real cmin1F00#3 = TensorIndex<tensor[2],[0]>(cminmax1DDF);
          real cmax1F02#2 = TensorIndex<tensor[2],[1]>(cminmax1DDF);
          tensor[3] mcol1F04#2 = <tensor[3]>[_t1E6B,_t1E6B,_t1E6B];
          bool _t1F06#1 = NEQ<real>(cmin1F00,cmax1F02);
          if _t1F06 then goto ASSIGN2014 else goto JOIN1F58
        ASSIGN2014:  preds = [COND1F08]
          tensor[3] _t1F09#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (rayOrig1DE9,op1_e3_l_51E07,op1_e3_l_301E77);
          tensor[84] basisResult1F31#1 = EvaluateBasis<BasisArray(84)>(_t1F09);
          real probe_l_81F28#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1DC1,_t1DC3,_t1DC5,_t1F09,femDofs1E53,basisResult1F31,_t1F09);
          real op1_e3_l_91F29#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F00,probe_l_81F28);
          real op1_e3_l_101F2A#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F00,cmax1F02);
          real op1_e3_l_111F2B#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91F29,op1_e3_l_101F2A);
          real op1_e3_l_121F2C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E69,_t1E6B);
          real op1_e3_l_131F2D#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111F2B,op1_e3_l_121F2C);
          real _t1F27#2 = λ(T0[],T1[])<(T0 + T1)> (_t1E69,op1_e3_l_131F2D);
          real Mtransform1F3E#2 = Transform<IMAGE1D<double[3]>>(cmap1FF3);
          real MxPos1F3F#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1F3E,_t1F27);
          real Ttranslate1F40#1 = Translate<IMAGE1D<double[3]>>(cmap1FF3);
          real imgPos1F41#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1F3F,Ttranslate1F40);
          real nd1F42#2 = Floor<1>(imgPos1F41);
          real f1F43#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1F41,nd1F42);
          int n1F44#1 = RealToInt<1>(nd1F42);
          int lit1F45#1 = 0;
          int idx1F46#1 = IAdd(n1F44,lit1F45);
          tensor[3,2] ldvox1F47#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap1FF3,idx1F46);
          tensor[2] kernX_1F48#1 = BuildPos<1>(f1F43);
          tensor[2] kevalX_d0_1F49#1 = EvalKernel<2,tent,0>(kernX_1F48);
          tensor[3] mcol1F3D#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1DC7,_t1DC9,_t1F27,Mtransform1F3E,ldvox1F47,kevalX_d0_1F49);
          goto JOIN1F58
        JOIN1F58:  preds = [ASSIGN1F56,COND1F08]
          tensor[3] mcol1F57#1 = phi(mcol1F3D,mcol1F04)
          real op1_e3_l_631F64#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_331E79);
          tensor[3] op1_e3_l_641F65#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_301E77,op1_e3_l_631F64);
          tensor[3] op1_e3_l_651F66#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_641F65);
          real op1_e3_l_661F67#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1DE5,op1_e3_l_651F66);
          real op1_e3_l_671F68#1 = λ(T0[])<(T0)^2> (op1_e3_l_661F67);
          real op1_e3_l_681F69#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1DF3,op1_e3_l_671F68);
          real op1_e3_l_701F6B#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE1,rayN1DFD);
          real op1_e3_l_711F6C#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE1,camFarVsp1DE3);
          real op1_e3_l_721F6D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_701F6B,op1_e3_l_711F6C);
          tensor[3] op1_e3_l_731F6E#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1DDB,mcFar1DDD);
          tensor[3] op1_e3_l_741F6F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_721F6D,op1_e3_l_731F6E);
          real op1_e3_l_751F70#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1DF1,op1_e3_l_681F69);
          tensor[3] op1_e3_l_761F71#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1DDB,op1_e3_l_741F6F);
          tensor[3] op1_e3_l_771F72#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol1F57,op1_e3_l_751F70,op1_e3_l_761F71);
          tensor[3] op1_e3_l_781F73#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1DF5,scomp1EFE,mcol1F04);
          real op1_e3_l_791F74#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,_t1EC7);
          tensor[3] op1_e3_l_801F75#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_771F72,op1_e3_l_781F73);
          tensor[3] op1_e3_l_811F76#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1DFB,op1_e3_l_791F74,op1_e3_l_801F75);
          tensor[3] rgb1F59#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1DF9,op1_e3_l_811F76);
          real op1_e3_l_51F9F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_791F74);
          real transp1F9D#2 = λ(T0[],T1[])<(T0 * T1)> (transp1DFB,op1_e3_l_51F9F);
          bool _t1FA3#1 = LT<real>(transp1F9D,transp01DCF);
          if _t1FA3 then goto SAVE1FA6 else goto JOIN1FAB
        SAVE1FA6:  preds = [COND1FA5]
          self.rayN = rayN1DFD;
          self.rgb = rgb1F59;
          self.transp = _t1E69;
          stabilize
          goto JOIN1FAB
        JOIN1FAB:  preds = [*STABILIZE1FA9,COND1FA5]
          real transp1FAA#1 = phi(transp1F9D)
          self.rayN = rayN1DFD;
          self.rgb = rgb1F59;
          self.transp = transp1FAA;
          active
        ASSIGN1FB0:  preds = [COND1E3E]
          bool _t1E42#1 = false;
          goto JOIN1E43
        ASSIGN1FB1:  preds = [COND1E39]
          bool _t1E45#1 = false;
          goto JOIN1E46
        ASSIGN1FB2:  preds = [COND1E11]
          bool _t1E48#1 = false;
          goto JOIN1E49
    end update
    method stabilize
        ENTRY1FB3:  preds = []
          tensor[4] rgba1FB4#1 = self.rgba;
          tensor[3] rgb1FB6#3 = self.rgb;
          real transp1FB8#2 = self.transp;
          real _t1FBA#2 = 0.1e1;
          bool _t1FBC#1 = LT<real>(transp1FB8,_t1FBA);
          if _t1FBC then goto ASSIGN1FC0 else goto JOIN1FD6
        ASSIGN1FC0:  preds = [COND1FBE]
          real aa1FBF#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1FBA,transp1FB8);
          real _t1FC1#1 = TensorIndex<tensor[3],[0]>(rgb1FB6);
          real _t1FC3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FC1,aa1FBF);
          real _t1FC7#1 = TensorIndex<tensor[3],[1]>(rgb1FB6);
          real _t1FC9#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FC7,aa1FBF);
          real _t1FCD#1 = TensorIndex<tensor[3],[2]>(rgb1FB6);
          real _t1FCF#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FCD,aa1FBF);
          tensor[4] rgba1FD3#1 = <tensor[4]>[_t1FC3,_t1FC9,_t1FCF,aa1FBF];
          goto JOIN1FD6
        JOIN1FD6:  preds = [ASSIGN1FD4,COND1FBE]
          tensor[4] rgba1FD5#1 = phi(rgba1FD3,rgba1FB4)
          self.rgba = rgba1FD5;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY1FD9:  preds = []
      int iresU1FDA#1 = globals.iresU1B8F;
      int iresV1FDC#1 = globals.iresV1B90;
      int _t1FDE#2 = 0;
      int _t1FE0#2 = 1;
      int _t1FE2#1 = ISub(iresV1FDC,_t1FE0);
      int[] _t1FE4#1 = Range(_t1FDE,_t1FE2);
    FOREACH1FE7:  preds = [ASSIGN1FE5,NEXT1FF0]
      foreach (vi1FE6 in _t1FE4) on exit goto RETURN1FF1
      int _t1FE8#1 = ISub(iresU1FDA,_t1FE0);
      int[] _t1FEA#1 = Range(_t1FDE,_t1FE8);
    FOREACH1FED:  preds = [ASSIGN1FEB,NEXT1FEF]
      foreach (ui1FEC in _t1FEA) on exit goto NEXT1FF0
      new ray(ui1FEC,vi1FE6);
      goto FOREACH1FED
    NEXT1FF0:  preds = [FOREACH1FED]
      goto FOREACH1FE7
    RETURN1FF1:  preds = [FOREACH1FE7]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1B83 (block) = <no-default>
  input 0space04CF_intermedateGlobal1B84 (space) = <no-default>
  input 0U04D1_intermedateGlobal1B85 (U) = <no-default>
  input cellChoice1B86 (cellChoice) = <no-default>
  input cmap1B87 (cmap) = image("cmap.nrrd")
  input camEye1B88 (camEye) = <default>
  input camAt1B89 (camAt) = <default>
  input camUp1B8A (camUp) = <default>
  input camNear1B8B (camNear) = <default>
  input camFar1B8C (camFar) = <default>
  input camFOV1B8D (camFOV) = <default>
  input camOrtho1B8E (camOrtho) = <default>
  input iresU1B8F (iresU) = <default>
  input iresV1B90 (iresV) = <default>
  input rayStep1B91 (rayStep) = <default>
  input refStep1B92 (refStep) = <default>
  input transp01B93 (transp0) = <default>
  input thick1B94 (thick) = <default>
  input fStrTh1B95 (fStrTh) = <default>
  input fMaskTh1B96 (fMaskTh) = <default>
  input fBias1B97 (fBias) = <default>
  input maxAlpha1B98 (maxAlpha) = <default>
  input light1B99 (light) = <default>
  input phong1B9A (phong) = <default>
  input mcNear1B9B (mcNear) = <default>
  input mcFar1B9C (mcFar) = <default>
  input litdir1B9D (litdir) = <default>
  input cminmax1B9E (cminmax) = <default>
  global tensor[3] camN1B9F
  global tensor[3] camU1BA0
  global tensor[3] camV1BA1
  global real camDist1BA2
  global real camVmax1BA3
  global real camUmax1BA4
  global real camNearVsp1BA5
  global real camFarVsp1BA6
  global tensor[3] litwsp1BA7
  global int _t1BA8
  global femData:Space _tX1BA9
  global femData:FemFunc _tXX1BAA
  global image(IMAGE1D<double[3]>) img1BAB
  global kernel _tXXX1BAC
## functions
## input initialization
  ENTRY1BAD:  preds = []
    real _t1BAE#13 = 0.e0;
    real _t1BB0#1 = -0.2e1;
    tensor[3] camEye1BB2#1 = <tensor[3]>[_t1BAE,_t1BB0,_t1BAE];
    globals.camEye1B88 = camEye1BB2;
    tensor[3] camAt1BB5#1 = <tensor[3]>[_t1BAE,_t1BAE,_t1BAE];
    globals.camAt1B89 = camAt1BB5;
    real _t1BB8#5 = 0.1e1;
    tensor[3] camUp1BBA#1 = <tensor[3]>[_t1BAE,_t1BAE,_t1BB8];
    globals.camUp1B8A = camUp1BBA;
    real camNear1BBD#1 = -0.4e1;
    globals.camNear1B8B = camNear1BBD;
    real camFar1BC0#1 = 0.4e1;
    globals.camFar1B8C = camFar1BC0;
    real camFOV1BC3#1 = 0.1e2;
    globals.camFOV1B8D = camFOV1BC3;
    bool camOrtho1BC6#2 = false;
    globals.camOrtho1B8E = camOrtho1BC6;
    int iresU1BC9#2 = 100;
    globals.iresU1B8F = iresU1BC9;
    globals.iresV1B90 = iresU1BC9;
    real rayStep1BCD#2 = 0.1e-3;
    globals.rayStep1B91 = rayStep1BCD;
    globals.refStep1B92 = rayStep1BCD;
    real transp01BD1#1 = 0.5e-2;
    globals.transp01B93 = transp01BD1;
    real thick1BD4#1 = 0.1e-1;
    globals.thick1B94 = thick1BD4;
    globals.fStrTh1B95 = _t1BAE;
    globals.fMaskTh1B96 = _t1BAE;
    real fBias1BD9#2 = 0.1e0;
    globals.fBias1B97 = fBias1BD9;
    globals.maxAlpha1B98 = _t1BB8;
    globals.light1B99 = camOrtho1BC6;
    real _t1BDE#1 = 0.7e0;
    real _t1BE0#1 = 0.2e0;
    real _t1BE2#1 = 0.1e3;
    tensor[4] phong1BE4#1 = <tensor[4]>[fBias1BD9,_t1BDE,_t1BE0,_t1BE2];
    globals.phong1B9A = phong1BE4;
    tensor[3] mcNear1BE7#2 = <tensor[3]>[_t1BB8,_t1BB8,_t1BB8];
    globals.mcNear1B9B = mcNear1BE7;
    globals.mcFar1B9C = mcNear1BE7;
    real _t1BEB#1 = -0.1e1;
    tensor[3] litdir1BED#1 = <tensor[3]>[_t1BAE,_t1BEB,_t1BAE];
    globals.litdir1B9D = litdir1BED;
    tensor[2] cminmax1BF0#1 = <tensor[2]>[_t1BAE,_t1BAE];
    globals.cminmax1B9E = cminmax1BF0;
    return
## global-variable initialization
  ENTRY1BF4:  preds = []
    femData:Mesh block1BF5#3 = globals.block1B83;
    femData:Space 0space04CF_intermedateGlobal1BF7#1 = globals.0space04CF_intermedateGlobal1B84;
    femData:FemFunc 0U04D1_intermedateGlobal1BF9#1 = globals.0U04D1_intermedateGlobal1B85;
    int cellChoice1BFB#1 = globals.cellChoice1B86;
    image(IMAGE1D<double[3]>) cmap1BFD#1 = globals.cmap1B87;
    tensor[3] camEye1BFF#1 = globals.camEye1B88;
    tensor[3] camAt1C01#1 = globals.camAt1B89;
    tensor[3] camUp1C03#1 = globals.camUp1B8A;
    real camNear1C05#1 = globals.camNear1B8B;
    real camFar1C07#1 = globals.camFar1B8C;
    real camFOV1C09#1 = globals.camFOV1B8D;
    int iresU1C0B#1 = globals.iresU1B8F;
    int iresV1C0D#1 = globals.iresV1B90;
    tensor[3] litdir1C0F#2 = globals.litdir1B9D;
    int _t1C11#1 = 0;
    int _t1C13#1 = 1;
    int _t1C15#1 = ExtractFemItem<int,NumCell(Mesh)>(block1BF5);
    int _t1C17#1 = ISub(_t1C15,_t1C13);
    int[] _t1C19#1 = Range(_t1C11,_t1C17);
    femData:MeshCell[] _t1C1B#1 = <femData:MeshCell[]>{};
  FOREACH1C1E:  preds = [ASSIGN1C1C,NEXT1C24]
    foreach (_t1C1D in _t1C19) on exit goto ASSIGN1C26
      femData:MeshCell[] _t1C22#2 = phi(_t1C1B,_t1C21)
    femData:MeshCell _t1C1F#1 = LoadFem<femData:MeshCell>(block1BF5,_t1C1D);
    femData:MeshCell[] _t1C21#1 = Append<femData:MeshCell>(_t1C22,_t1C1F);
    goto FOREACH1C1E
  ASSIGN1C26:  preds = [FOREACH1C1E]
    femData:Space space1C25#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal1BF7,block1BF5);
    femData:FemFunc U1C27#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal1BF9,space1C25);
    femData:MeshCell c11C29#1 = Subscript<femData:MeshCell[]>(_t1C22,cellChoice1BFB);
    int _t1C2B#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11C29);
    femData:FuncCell _t1C2D#2 = LoadFem<femData:FuncCell>(U1C27,_t1C2B);
    femData:FemFunc _t1C2F#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1C2D);
    femData:Space _t1C31#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1C2F);
    int _t1C33#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1C2D);
    kernel _t1C35#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1C37#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1BFD);
    tensor[3] op1_e3_l_41C3A#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_61C3B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41C3A,op1_e3_l_41C3A);
    real op1_e3_l_71C3C#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61C3B);
    real op1_e3_l_91C3D#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71C3C);
    tensor[3] camN1C39#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41C3A,op1_e3_l_91C3D);
    globals.camN1B9F = camN1C39;
    tensor[3,3] op1_e3_l_151C48#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C03);
    tensor[3] op1_e3_l_171C4A#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C3A,op1_e3_l_151C48);
    real op1_e3_l_341C4B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171C4A,op1_e3_l_171C4A);
    real op1_e3_l_351C4C#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91C3D,op1_e3_l_91C3D,op1_e3_l_341C4B);
    real op1_e3_l_361C4D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C4C);
    tensor[3] op1_e3_l_371C4E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C3D,op1_e3_l_171C4A);
    real op1_e3_l_381C4F#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C4D);
    tensor[3] camU1C44#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371C4E,op1_e3_l_381C4F);
    globals.camU1BA0 = camU1C44;
    tensor[3,3] op1_e3_l_451C67#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171C4A);
    tensor[3] op1_e3_l_471C68#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C3A,op1_e3_l_451C67);
    tensor[3] op1_e3_l_501C6A#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C3D,op1_e3_l_471C68);
    tensor[3] camV1C5D#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91C3D,op1_e3_l_381C4F,op1_e3_l_501C6A);
    globals.camV1BA1 = camV1C5D;
    globals.camDist1BA2 = op1_e3_l_71C3C;
    real _t1C81#1 = 0.314159265358979323846264338327950288e1;
    real _t1C83#1 = 0.36e3;
    real op1_e3_l_51C86#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C09,_t1C81);
    real op1_e3_l_61C87#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C83,op1_e3_l_51C86);
    real op1_e3_l_101C8A#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61C87);
    real camVmax1C85#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101C8A,op1_e3_l_71C3C);
    globals.camVmax1BA3 = camVmax1C85;
    real _t1C94#1 = IntToReal(iresU1C0B);
    real _t1C96#1 = IntToReal(iresV1C0D);
    real op1_e3_l_141C9F#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1C94,op1_e3_l_101C8A,op1_e3_l_71C3C);
    real camUmax1C98#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C96,op1_e3_l_141C9F);
    globals.camUmax1BA4 = camUmax1C98;
    real camNearVsp1CA9#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1C05,op1_e3_l_71C3C);
    globals.camNearVsp1BA5 = camNearVsp1CA9;
    real camFarVsp1CB2#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1C07,op1_e3_l_71C3C);
    globals.camFarVsp1BA6 = camFarVsp1CB2;
    tensor[3,3] _t1CBB#1 = <tensor[3,3]>[camU1C44,camV1C5D,camN1C39];
    real op1_e3_l_31CBE#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1C0F);
    real op1_e3_l_41CBF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31CBE);
    real op1_e3_l_51CC0#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41CBF);
    tensor[3] op1_e3_l_61CC1#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1CBB,litdir1C0F);
    tensor[3] litwsp1CBD#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51CC0,op1_e3_l_61CC1);
    globals.litwsp1BA7 = litwsp1CBD;
    globals._t1BA8 = _t1C33;
    globals._tX1BA9 = _t1C31;
    globals._tXX1BAA = _t1C2F;
    globals.img1BAB = img1C37;
    globals._tXXX1BAC = _t1C35;
    return
## strand
  strand ray (int ui1CCE#1, int vi1CCF#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1CE0:  preds = []
        tensor[3] camEye1CE1#1 = globals.camEye1B88;
        bool camOrtho1CE3#2 = globals.camOrtho1B8E;
        int iresU1CE5#1 = globals.iresU1B8F;
        int iresV1CE7#1 = globals.iresV1B90;
        real rayStep1CE9#1 = globals.rayStep1B91;
        real refStep1CEB#1 = globals.refStep1B92;
        tensor[4] phong1CED#4 = globals.phong1B9A;
        tensor[3] camN1CEF#1 = globals.camN1B9F;
        tensor[3] camU1CF1#1 = globals.camU1BA0;
        tensor[3] camV1CF3#1 = globals.camV1BA1;
        real camDist1CF5#1 = globals.camDist1BA2;
        real camVmax1CF7#2 = globals.camVmax1BA3;
        real camUmax1CF9#2 = globals.camUmax1BA4;
        real camNearVsp1CFB#1 = globals.camNearVsp1BA5;
        real _t1CFD#5 = -0.5e0;
        real _t1CFF#1 = IntToReal(ui1CCE);
        real _t1D01#1 = IntToReal(iresU1CE5);
        real _t1D03#3 = 0.5e0;
        real op1_e3_l_61D06#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D01,_t1D03);
        real op1_e3_l_71D07#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1CFF);
        real op1_e3_l_81D08#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_61D06);
        real op1_e3_l_91D09#2 = λ(T0[])<Neg(T0)> (camUmax1CF9);
        real op1_e3_l_101D0A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D07,op1_e3_l_81D08);
        real op1_e3_l_111D0B#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1CF9,op1_e3_l_91D09);
        real op1_e3_l_131D0C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D0A,op1_e3_l_111D0B);
        real rayU1D05#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D09,op1_e3_l_131D0C);
        real _t1D15#1 = IntToReal(vi1CCF);
        real _t1D17#2 = IntToReal(iresV1CE7);
        real op1_e3_l_61D1A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D17,_t1D03);
        real op1_e3_l_71D1B#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1D15);
        real op1_e3_l_81D1C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_61D1A);
        real op1_e3_l_91D1D#3 = λ(T0[])<Neg(T0)> (camVmax1CF7);
        real op1_e3_l_101D1E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D1B,op1_e3_l_81D1C);
        real op1_e3_l_111D1F#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CF7,op1_e3_l_91D1D);
        real op1_e3_l_131D20#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D1E,op1_e3_l_111D1F);
        real rayV1D19#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D1D,op1_e3_l_131D20);
        real op1_e3_l_231D32#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D03,_t1D17);
        real op1_e3_l_251D34#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_231D32);
        real op1_e3_l_271D36#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D1B,op1_e3_l_251D34);
        real op1_e3_l_301D38#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271D36,op1_e3_l_111D1F);
        real op1_e3_l_311D39#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D1D,op1_e3_l_301D38);
        tensor[3] op1_e3_l_321D3A#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF1,rayU1D05);
        tensor[3] op1_e3_l_331D3B#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CF3,op1_e3_l_311D39);
        tensor[3] UV1D29#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321D3A,op1_e3_l_331D3B);
        if camOrtho1CE3 then goto JOIN1D52 else goto ASSIGN1DBE
      JOIN1D52:  preds = [COND1D4F,ASSIGN1DBF]
        tensor[3] _t1D50#1 = phi(UV1D29,_t1D51)
        tensor[3] rayOrig1D53#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1CE1,_t1D50);
        if camOrtho1CE3 then goto ASSIGN1D57 else goto ASSIGN2008
      ASSIGN1D57:  preds = [COND1D55]
        real _t1D56#3 = 0.e0;
        tensor[3] _t1D58#1 = <tensor[3]>[_t1D56,_t1D56,_t1D56];
        goto JOIN1D5C
      JOIN1D5C:  preds = [ASSIGN1D59,ASSIGN2008]
        tensor[3] _t1D5A#1 = phi(_t1D58,_t1D5B)
        tensor[3] rayVec1D5D#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CEF,_t1D5A);
        real op1_e3_l_61D61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1D5D,rayVec1D5D);
        real op1_e3_l_71D62#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D61);
        real op1_e3_l_81D63#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1CE9,op1_e3_l_71D62);
        real alphaFix1D5F#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1CEB,op1_e3_l_81D63);
        real op1_e3_l_91D6D#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D62);
        tensor[3] op1_e3_l_101D6E#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1D5D,op1_e3_l_91D6D);
        tensor[3] eyeDir1D69#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101D6E);
        real phKa1D75#1 = TensorIndex<tensor[4],[0]>(phong1CED);
        real phKd1D77#1 = TensorIndex<tensor[4],[1]>(phong1CED);
        real phKs1D79#1 = TensorIndex<tensor[4],[2]>(phong1CED);
        real phSp1D7B#1 = TensorIndex<tensor[4],[3]>(phong1CED);
        real _t1D7D#8 = 0.e0;
        tensor[4] rgba1D7F#1 = <tensor[4]>[_t1D7D,_t1D7D,_t1D7D,_t1D7D];
        tensor[3] rgb1D81#1 = <tensor[3]>[_t1D7D,_t1D7D,_t1D7D];
        real transp1D83#1 = 0.1e1;
        self.rayU = rayU1D05;
        self.rayV = rayV1D19;
        self.rayN = camNearVsp1CFB;
        self.UV = UV1D29;
        self.rayOrig = rayOrig1D53;
        self.rayVec = rayVec1D5D;
        self.alphaFix = alphaFix1D5F;
        self.eyeDir = eyeDir1D69;
        self.phKa = phKa1D75;
        self.phKd = phKd1D77;
        self.phKs = phKs1D79;
        self.phSp = phSp1D7B;
        self.rgba = rgba1D7F;
        self.raw = _t1D7D;
        self.rgb = rgb1D81;
        self.transp = transp1D83;
        return
      ASSIGN2008:  preds = [COND1D55]
        tensor[3] _t1D5B#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1CF5,UV1D29);
        goto JOIN1D5C
      ASSIGN1DBE:  preds = [COND1D4F]
        real _t1DBD#3 = 0.e0;
        tensor[3] _t1D51#1 = <tensor[3]>[_t1DBD,_t1DBD,_t1DBD];
        goto JOIN1D52
    end state init
    method update
        ENTRY1DC0:  preds = []
          image(IMAGE1D<double[3]>) cmap1FF3#3 = globals.cmap1B87;
          int _t1DC1#7 = globals._t1BA8;
          femData:Space _t1DC3#7 = globals._tX1BA9;
          femData:FemFunc _t1DC5#7 = globals._tXX1BAA;
          image(IMAGE1D<double[3]>) img1DC7#1 = globals.img1BAB;
          kernel _t1DC9#1 = globals._tXXX1BAC;
          femData:Mesh block1DCB#1 = globals.block1B83;
          real rayStep1DCD#1 = globals.rayStep1B91;
          real transp01DCF#1 = globals.transp01B93;
          real thick1DD1#1 = globals.thick1B94;
          real fStrTh1DD3#1 = globals.fStrTh1B95;
          real fMaskTh1DD5#1 = globals.fMaskTh1B96;
          real fBias1DD7#1 = globals.fBias1B97;
          real maxAlpha1DD9#2 = globals.maxAlpha1B98;
          tensor[3] mcNear1DDB#2 = globals.mcNear1B9B;
          tensor[3] mcFar1DDD#1 = globals.mcFar1B9C;
          tensor[2] cminmax1DDF#2 = globals.cminmax1B9E;
          real camNearVsp1DE1#2 = globals.camNearVsp1BA5;
          real camFarVsp1DE3#2 = globals.camFarVsp1BA6;
          tensor[3] litwsp1DE5#2 = globals.litwsp1BA7;
          real rayN1DE7#1 = self.rayN;
          tensor[3] rayOrig1DE9#2 = self.rayOrig;
          tensor[3] rayVec1DEB#1 = self.rayVec;
          real alphaFix1DED#1 = self.alphaFix;
          tensor[3] eyeDir1DEF#1 = self.eyeDir;
          real phKa1DF1#1 = self.phKa;
          real phKd1DF3#1 = self.phKd;
          real phKs1DF5#2 = self.phKs;
          real phSp1DF7#1 = self.phSp;
          tensor[3] rgb1DF9#1 = self.rgb;
          real transp1DFB#2 = self.transp;
          real rayN1DFD#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1DE7,rayStep1DCD);
          bool _t1DFF#1 = GT<real>(rayN1DFD,camFarVsp1DE3);
          if _t1DFF then goto SAVE1E02 else goto JOIN1E04
        SAVE1E02:  preds = [COND1E01]
          self.rayN = rayN1DFD;
          stabilize
          goto JOIN1E04
        JOIN1E04:  preds = [*STABILIZE1E03,COND1E01]
          tensor[3] op1_e3_l_51E07#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DEB,rayN1DFD);
          tensor[3] pos1E05#13 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1DE9,op1_e3_l_51E07);
          femData:RefCell _t1E0B#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1DCB);
          real _t1E0D#1 = 0.1e-8;
          bool _t1E0F#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1E0B,pos1E05,_t1E0D);
          if _t1E0F then goto ASSIGN1E17 else goto ASSIGN1FB2
        ASSIGN1E17:  preds = [COND1E11]
          int[84] femIndicies1E14#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E15#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E14);
          tensor[3,3,84] basisResult1E16#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E05);
          tensor[3,3] _t1E12#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E15,basisResult1E16,pos1E05);
          real[3] _t1E1C#1 = EigenVals3x3(_t1E12);
          int _t1E1F#1 = 1;
          real _t1E21#1 = Subscript<real[3]>(_t1E1C,_t1E1F);
          tensor[3,84] basisResult1E2C#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_61E24#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E15,basisResult1E2C,pos1E05);
          real op1_e3_l_81E25#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61E24,probe_l_61E24);
          real op1_e3_l_91E26#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81E25);
          real op1_e3_l_101E27#1 = λ(T0[])<Neg(T0)> (_t1E21);
          real op1_e3_l_111E28#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1DD7,op1_e3_l_91E26);
          real _t1E23#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101E27,op1_e3_l_111E28);
          bool _t1E37#1 = GT<real>(_t1E23,fStrTh1DD3);
          if _t1E37 then goto ASSIGN1E3B else goto ASSIGN1FB1
        ASSIGN1E3B:  preds = [COND1E39]
          real _t1E3A#1 = 0.1e1;
          bool _t1E3C#1 = GTE<real>(_t1E3A,fMaskTh1DD5);
          if _t1E3C then goto ASSIGN1E40 else goto ASSIGN1FB0
        ASSIGN1E40:  preds = [COND1E3E]
          bool _t1E3F#1 = true;
          goto JOIN1E43
        JOIN1E43:  preds = [ASSIGN1E40,ASSIGN1FB0]
          bool _t1E41#1 = phi(_t1E3F,_t1E42)
          goto JOIN1E46
        JOIN1E46:  preds = [JOIN1E43,ASSIGN1FB1]
          bool _t1E44#1 = phi(_t1E41,_t1E45)
          goto JOIN1E49
        JOIN1E49:  preds = [JOIN1E46,ASSIGN1FB2]
          bool _t1E47#1 = phi(_t1E44,_t1E48)
          bool _t1E4A#1 = BNot(_t1E47);
          if _t1E4A then goto SAVE1E4D else goto JOIN1E4F
        SAVE1E4D:  preds = [COND1E4C]
          self.rayN = rayN1DFD;
          active
          goto JOIN1E4F
        JOIN1E4F:  preds = [*ACTIVE1E4E,COND1E4C]
          int[84] femIndicies1E52#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E53#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E52);
          tensor[3,3,84] basisResult1E54#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E05);
          tensor[3,3] _t1E50#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E53,basisResult1E54,pos1E05);
          (real[3] evals1E5A#2,tensor[3][3] E1E5B#2) = EigenVecs3x3(_t1E50);
          int _t1E5D#2 = 2;
          tensor[3] _t1E5F#1 = Subscript<tensor[3][3]>(E1E5B,_t1E5D);
          real _t1E61#1 = Subscript<real[3]>(evals1E5A,_t1E5D);
          int _t1E63#2 = 1;
          tensor[3] _t1E65#1 = Subscript<tensor[3][3]>(E1E5B,_t1E63);
          real _t1E67#1 = Subscript<real[3]>(evals1E5A,_t1E63);
          real _t1E69#8 = 0.e0;
          real _t1E6B#10 = 0.1e1;
          real _t1E6D#1 = 0.15e1;
          tensor[3,3] op1_e3_l_161E70#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E5F);
          tensor[3,3] op1_e3_l_171E71#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E65);
          tensor[3,3] op1_e3_l_181E72#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E61,op1_e3_l_161E70);
          tensor[3,3] op1_e3_l_191E73#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E67,op1_e3_l_171E71);
          tensor[3,3] op1_e3_l_201E74#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_181E72,op1_e3_l_191E73);
          tensor[3,84] basisResult1E82#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_211E75#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E53,basisResult1E82,pos1E05);
          tensor[3,3] op1_e3_l_221E76#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_201E74);
          tensor[3] op1_e3_l_301E77#5 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_211E75,op1_e3_l_221E76);
          real op1_e3_l_321E78#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_301E77,op1_e3_l_301E77);
          real op1_e3_l_331E79#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_321E78);
          real op1_e3_l_341E7A#1 = λ(T0[])<Abs(T0)> (op1_e3_l_331E79);
          real op1_e3_l_351E7B#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD1,op1_e3_l_341E7A);
          real op1_e3_l_361E7C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_351E7B);
          real op1_e3_l_371E7D#2 = λ(T0[],T1[])<(T0 * T1)> (_t1E6D,op1_e3_l_361E7C);
          real op1_e3_l_381E7E#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1E69,_t1E6B,op1_e3_l_371E7D);
          real _t1E6F#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DD9,op1_e3_l_381E7E);
          bool _t1E97#1 = EQ<real>(_t1E6F,_t1E69);
          if _t1E97 then goto SAVE1E9A else goto JOIN1E9C
        SAVE1E9A:  preds = [COND1E99]
          self.rayN = rayN1DFD;
          active
          goto JOIN1E9C
        JOIN1E9C:  preds = [*ACTIVE1E9B,COND1E99]
          real op1_e3_l_391EAC#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1E6B,_t1E69,op1_e3_l_371E7D);
          real op1_e3_l_401EAD#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DD9,op1_e3_l_391EAC);
          real _t1E9D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_401EAD);
          real _t1EC7#1 = MathFn<pow>(_t1E9D,alphaFix1DED);
          bool _t1EC9#1 = NEQ<real>(phKs1DF5,_t1E69);
          if _t1EC9 then goto ASSIGN1EE4 else goto JOIN1EFF
        ASSIGN1EE4:  preds = [COND1ECB]
          tensor[3] op1_e3_l_241ECD#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1DEF,litwsp1DE5);
          real op1_e3_l_261ECE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_241ECD,op1_e3_l_241ECD);
          real op1_e3_l_271ECF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_261ECE);
          real op1_e3_l_541EDA#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_331E79);
          tensor[3] op1_e3_l_551EDB#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_301E77,op1_e3_l_541EDA);
          tensor[3] op1_e3_l_561EDC#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_551EDB);
          real op1_e3_l_581EDD#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_271ECF);
          real op1_e3_l_591EDE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_561EDC,op1_e3_l_241ECD);
          real op1_e3_l_601EDF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_581EDD,op1_e3_l_591EDE);
          real _t1ECC#1 = λ(T0[])<Abs(T0)> (op1_e3_l_601EDF);
          real scomp1EFC#1 = MathFn<pow>(_t1ECC,phSp1DF7);
          goto JOIN1EFF
        JOIN1EFF:  preds = [ASSIGN1EFD,COND1ECB]
          real scomp1EFE#1 = phi(scomp1EFC,_t1E69)
          real cmin1F00#3 = TensorIndex<tensor[2],[0]>(cminmax1DDF);
          real cmax1F02#2 = TensorIndex<tensor[2],[1]>(cminmax1DDF);
          tensor[3] mcol1F04#2 = <tensor[3]>[_t1E6B,_t1E6B,_t1E6B];
          bool _t1F06#1 = NEQ<real>(cmin1F00,cmax1F02);
          if _t1F06 then goto ASSIGN2014 else goto JOIN1F58
        ASSIGN2014:  preds = [COND1F08]
          tensor[3] _t1F09#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (rayOrig1DE9,op1_e3_l_51E07,op1_e3_l_301E77);
          tensor[84] basisResult1F31#1 = EvaluateBasis<BasisArray(84)>(_t1F09);
          real probe_l_81F28#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1DC1,_t1DC3,_t1DC5,_t1F09,femDofs1E53,basisResult1F31,_t1F09);
          real op1_e3_l_91F29#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F00,probe_l_81F28);
          real op1_e3_l_101F2A#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F00,cmax1F02);
          real op1_e3_l_111F2B#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91F29,op1_e3_l_101F2A);
          real op1_e3_l_121F2C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E69,_t1E6B);
          real op1_e3_l_131F2D#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111F2B,op1_e3_l_121F2C);
          real _t1F27#2 = λ(T0[],T1[])<(T0 + T1)> (_t1E69,op1_e3_l_131F2D);
          real Mtransform1F3E#2 = Transform<IMAGE1D<double[3]>>(cmap1FF3);
          real MxPos1F3F#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1F3E,_t1F27);
          real Ttranslate1F40#1 = Translate<IMAGE1D<double[3]>>(cmap1FF3);
          real imgPos1F41#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1F3F,Ttranslate1F40);
          real nd1F42#2 = Floor<1>(imgPos1F41);
          real f1F43#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1F41,nd1F42);
          int n1F44#1 = RealToInt<1>(nd1F42);
          int idx1F46#1 = n1F44;
          tensor[3,2] ldvox1F47#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap1FF3,idx1F46);
          tensor[2] kernX_1F48#1 = BuildPos<1>(f1F43);
          tensor[2] kevalX_d0_1F49#1 = EvalKernel<2,tent,0>(kernX_1F48);
          tensor[3] mcol1F3D#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1DC7,_t1DC9,_t1F27,Mtransform1F3E,ldvox1F47,kevalX_d0_1F49);
          goto JOIN1F58
        JOIN1F58:  preds = [ASSIGN1F56,COND1F08]
          tensor[3] mcol1F57#1 = phi(mcol1F3D,mcol1F04)
          real op1_e3_l_631F64#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_331E79);
          tensor[3] op1_e3_l_641F65#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_301E77,op1_e3_l_631F64);
          tensor[3] op1_e3_l_651F66#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_641F65);
          real op1_e3_l_661F67#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1DE5,op1_e3_l_651F66);
          real op1_e3_l_671F68#1 = λ(T0[])<(T0)^2> (op1_e3_l_661F67);
          real op1_e3_l_681F69#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1DF3,op1_e3_l_671F68);
          real op1_e3_l_701F6B#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE1,rayN1DFD);
          real op1_e3_l_711F6C#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE1,camFarVsp1DE3);
          real op1_e3_l_721F6D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_701F6B,op1_e3_l_711F6C);
          tensor[3] op1_e3_l_731F6E#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1DDB,mcFar1DDD);
          tensor[3] op1_e3_l_741F6F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_721F6D,op1_e3_l_731F6E);
          real op1_e3_l_751F70#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1DF1,op1_e3_l_681F69);
          tensor[3] op1_e3_l_761F71#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1DDB,op1_e3_l_741F6F);
          tensor[3] op1_e3_l_771F72#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol1F57,op1_e3_l_751F70,op1_e3_l_761F71);
          tensor[3] op1_e3_l_781F73#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1DF5,scomp1EFE,mcol1F04);
          real op1_e3_l_791F74#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,_t1EC7);
          tensor[3] op1_e3_l_801F75#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_771F72,op1_e3_l_781F73);
          tensor[3] op1_e3_l_811F76#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1DFB,op1_e3_l_791F74,op1_e3_l_801F75);
          tensor[3] rgb1F59#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1DF9,op1_e3_l_811F76);
          real op1_e3_l_51F9F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_791F74);
          real transp1F9D#2 = λ(T0[],T1[])<(T0 * T1)> (transp1DFB,op1_e3_l_51F9F);
          bool _t1FA3#1 = LT<real>(transp1F9D,transp01DCF);
          if _t1FA3 then goto SAVE1FA6 else goto JOIN1FAB
        SAVE1FA6:  preds = [COND1FA5]
          self.rayN = rayN1DFD;
          self.rgb = rgb1F59;
          self.transp = _t1E69;
          stabilize
          goto JOIN1FAB
        JOIN1FAB:  preds = [*STABILIZE1FA9,COND1FA5]
          real transp1FAA#1 = phi(transp1F9D)
          self.rayN = rayN1DFD;
          self.rgb = rgb1F59;
          self.transp = transp1FAA;
          active
        ASSIGN1FB0:  preds = [COND1E3E]
          bool _t1E42#1 = false;
          goto JOIN1E43
        ASSIGN1FB1:  preds = [COND1E39]
          bool _t1E45#1 = false;
          goto JOIN1E46
        ASSIGN1FB2:  preds = [COND1E11]
          bool _t1E48#1 = false;
          goto JOIN1E49
    end update
    method stabilize
        ENTRY1FB3:  preds = []
          tensor[4] rgba1FB4#1 = self.rgba;
          tensor[3] rgb1FB6#3 = self.rgb;
          real transp1FB8#2 = self.transp;
          real _t1FBA#2 = 0.1e1;
          bool _t1FBC#1 = LT<real>(transp1FB8,_t1FBA);
          if _t1FBC then goto ASSIGN1FC0 else goto JOIN1FD6
        ASSIGN1FC0:  preds = [COND1FBE]
          real aa1FBF#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1FBA,transp1FB8);
          real _t1FC1#1 = TensorIndex<tensor[3],[0]>(rgb1FB6);
          real _t1FC3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FC1,aa1FBF);
          real _t1FC7#1 = TensorIndex<tensor[3],[1]>(rgb1FB6);
          real _t1FC9#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FC7,aa1FBF);
          real _t1FCD#1 = TensorIndex<tensor[3],[2]>(rgb1FB6);
          real _t1FCF#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FCD,aa1FBF);
          tensor[4] rgba1FD3#1 = <tensor[4]>[_t1FC3,_t1FC9,_t1FCF,aa1FBF];
          goto JOIN1FD6
        JOIN1FD6:  preds = [ASSIGN1FD4,COND1FBE]
          tensor[4] rgba1FD5#1 = phi(rgba1FD3,rgba1FB4)
          self.rgba = rgba1FD5;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY1FD9:  preds = []
      int iresU1FDA#1 = globals.iresU1B8F;
      int iresV1FDC#1 = globals.iresV1B90;
      int _t1FDE#2 = 0;
      int _t1FE0#2 = 1;
      int _t1FE2#1 = ISub(iresV1FDC,_t1FE0);
      int[] _t1FE4#1 = Range(_t1FDE,_t1FE2);
    FOREACH1FE7:  preds = [ASSIGN1FE5,NEXT1FF0]
      foreach (vi1FE6 in _t1FE4) on exit goto RETURN1FF1
      int _t1FE8#1 = ISub(iresU1FDA,_t1FE0);
      int[] _t1FEA#1 = Range(_t1FDE,_t1FE8);
    FOREACH1FED:  preds = [ASSIGN1FEB,NEXT1FEF]
      foreach (ui1FEC in _t1FEA) on exit goto NEXT1FF0
      new ray(ui1FEC,vi1FE6);
      goto FOREACH1FED
    NEXT1FF0:  preds = [FOREACH1FED]
      goto FOREACH1FE7
    RETURN1FF1:  preds = [FOREACH1FE7]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1B83 (block) = <no-default>
  input 0space04CF_intermedateGlobal1B84 (space) = <no-default>
  input 0U04D1_intermedateGlobal1B85 (U) = <no-default>
  input cellChoice1B86 (cellChoice) = <no-default>
  input cmap1B87 (cmap) = image("cmap.nrrd")
  input camEye1B88 (camEye) = <default>
  input camAt1B89 (camAt) = <default>
  input camUp1B8A (camUp) = <default>
  input camNear1B8B (camNear) = <default>
  input camFar1B8C (camFar) = <default>
  input camFOV1B8D (camFOV) = <default>
  input camOrtho1B8E (camOrtho) = <default>
  input iresU1B8F (iresU) = <default>
  input iresV1B90 (iresV) = <default>
  input rayStep1B91 (rayStep) = <default>
  input refStep1B92 (refStep) = <default>
  input transp01B93 (transp0) = <default>
  input thick1B94 (thick) = <default>
  input fStrTh1B95 (fStrTh) = <default>
  input fMaskTh1B96 (fMaskTh) = <default>
  input fBias1B97 (fBias) = <default>
  input maxAlpha1B98 (maxAlpha) = <default>
  input light1B99 (light) = <default>
  input phong1B9A (phong) = <default>
  input mcNear1B9B (mcNear) = <default>
  input mcFar1B9C (mcFar) = <default>
  input litdir1B9D (litdir) = <default>
  input cminmax1B9E (cminmax) = <default>
  global tensor[3] camN1B9F
  global tensor[3] camU1BA0
  global tensor[3] camV1BA1
  global real camDist1BA2
  global real camVmax1BA3
  global real camUmax1BA4
  global real camNearVsp1BA5
  global real camFarVsp1BA6
  global tensor[3] litwsp1BA7
  global int _t1BA8
  global femData:Space _tX1BA9
  global femData:FemFunc _tXX1BAA
  global image(IMAGE1D<double[3]>) img1BAB
  global kernel _tXXX1BAC
## functions
## input initialization
  ENTRY1BAD:  preds = []
    real _t1BAE#13 = 0.e0;
    real _t1BB0#1 = -0.2e1;
    tensor[3] camEye1BB2#1 = <tensor[3]>[_t1BAE,_t1BB0,_t1BAE];
    globals.camEye1B88 = camEye1BB2;
    tensor[3] camAt1BB5#1 = <tensor[3]>[_t1BAE,_t1BAE,_t1BAE];
    globals.camAt1B89 = camAt1BB5;
    real _t1BB8#5 = 0.1e1;
    tensor[3] camUp1BBA#1 = <tensor[3]>[_t1BAE,_t1BAE,_t1BB8];
    globals.camUp1B8A = camUp1BBA;
    real camNear1BBD#1 = -0.4e1;
    globals.camNear1B8B = camNear1BBD;
    real camFar1BC0#1 = 0.4e1;
    globals.camFar1B8C = camFar1BC0;
    real camFOV1BC3#1 = 0.1e2;
    globals.camFOV1B8D = camFOV1BC3;
    bool camOrtho1BC6#2 = false;
    globals.camOrtho1B8E = camOrtho1BC6;
    int iresU1BC9#2 = 100;
    globals.iresU1B8F = iresU1BC9;
    globals.iresV1B90 = iresU1BC9;
    real rayStep1BCD#2 = 0.1e-3;
    globals.rayStep1B91 = rayStep1BCD;
    globals.refStep1B92 = rayStep1BCD;
    real transp01BD1#1 = 0.5e-2;
    globals.transp01B93 = transp01BD1;
    real thick1BD4#1 = 0.1e-1;
    globals.thick1B94 = thick1BD4;
    globals.fStrTh1B95 = _t1BAE;
    globals.fMaskTh1B96 = _t1BAE;
    real fBias1BD9#2 = 0.1e0;
    globals.fBias1B97 = fBias1BD9;
    globals.maxAlpha1B98 = _t1BB8;
    globals.light1B99 = camOrtho1BC6;
    real _t1BDE#1 = 0.7e0;
    real _t1BE0#1 = 0.2e0;
    real _t1BE2#1 = 0.1e3;
    tensor[4] phong1BE4#1 = <tensor[4]>[fBias1BD9,_t1BDE,_t1BE0,_t1BE2];
    globals.phong1B9A = phong1BE4;
    tensor[3] mcNear1BE7#2 = <tensor[3]>[_t1BB8,_t1BB8,_t1BB8];
    globals.mcNear1B9B = mcNear1BE7;
    globals.mcFar1B9C = mcNear1BE7;
    real _t1BEB#1 = -0.1e1;
    tensor[3] litdir1BED#1 = <tensor[3]>[_t1BAE,_t1BEB,_t1BAE];
    globals.litdir1B9D = litdir1BED;
    tensor[2] cminmax1BF0#1 = <tensor[2]>[_t1BAE,_t1BAE];
    globals.cminmax1B9E = cminmax1BF0;
    return
## global-variable initialization
  ENTRY1BF4:  preds = []
    femData:Mesh block1BF5#3 = globals.block1B83;
    femData:Space 0space04CF_intermedateGlobal1BF7#1 = globals.0space04CF_intermedateGlobal1B84;
    femData:FemFunc 0U04D1_intermedateGlobal1BF9#1 = globals.0U04D1_intermedateGlobal1B85;
    int cellChoice1BFB#1 = globals.cellChoice1B86;
    image(IMAGE1D<double[3]>) cmap1BFD#1 = globals.cmap1B87;
    tensor[3] camEye1BFF#1 = globals.camEye1B88;
    tensor[3] camAt1C01#1 = globals.camAt1B89;
    tensor[3] camUp1C03#1 = globals.camUp1B8A;
    real camNear1C05#1 = globals.camNear1B8B;
    real camFar1C07#1 = globals.camFar1B8C;
    real camFOV1C09#1 = globals.camFOV1B8D;
    int iresU1C0B#1 = globals.iresU1B8F;
    int iresV1C0D#1 = globals.iresV1B90;
    tensor[3] litdir1C0F#2 = globals.litdir1B9D;
    int _t1C11#1 = 0;
    int _t1C13#1 = 1;
    int _t1C15#1 = ExtractFemItem<int,NumCell(Mesh)>(block1BF5);
    int _t1C17#1 = ISub(_t1C15,_t1C13);
    int[] _t1C19#1 = Range(_t1C11,_t1C17);
    femData:MeshCell[] _t1C1B#1 = <femData:MeshCell[]>{};
  FOREACH1C1E:  preds = [ASSIGN1C1C,NEXT1C24]
    foreach (_t1C1D in _t1C19) on exit goto ASSIGN1C26
      femData:MeshCell[] _t1C22#2 = phi(_t1C1B,_t1C21)
    femData:MeshCell _t1C1F#1 = LoadFem<femData:MeshCell>(block1BF5,_t1C1D);
    femData:MeshCell[] _t1C21#1 = Append<femData:MeshCell>(_t1C22,_t1C1F);
    goto FOREACH1C1E
  ASSIGN1C26:  preds = [FOREACH1C1E]
    femData:Space space1C25#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal1BF7,block1BF5);
    femData:FemFunc U1C27#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal1BF9,space1C25);
    femData:MeshCell c11C29#1 = Subscript<femData:MeshCell[]>(_t1C22,cellChoice1BFB);
    int _t1C2B#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11C29);
    femData:FuncCell _t1C2D#2 = LoadFem<femData:FuncCell>(U1C27,_t1C2B);
    femData:FemFunc _t1C2F#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1C2D);
    femData:Space _t1C31#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1C2F);
    int _t1C33#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1C2D);
    kernel _t1C35#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1C37#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1BFD);
    tensor[3] op1_e3_l_41C3A#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C01,camEye1BFF);
    real op1_e3_l_61C3B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41C3A,op1_e3_l_41C3A);
    real op1_e3_l_71C3C#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61C3B);
    real op1_e3_l_91C3D#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71C3C);
    tensor[3] camN1C39#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41C3A,op1_e3_l_91C3D);
    globals.camN1B9F = camN1C39;
    tensor[3,3] op1_e3_l_151C48#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C03);
    tensor[3] op1_e3_l_171C4A#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C3A,op1_e3_l_151C48);
    real op1_e3_l_341C4B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171C4A,op1_e3_l_171C4A);
    real op1_e3_l_351C4C#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91C3D,op1_e3_l_91C3D,op1_e3_l_341C4B);
    real op1_e3_l_361C4D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C4C);
    tensor[3] op1_e3_l_371C4E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C3D,op1_e3_l_171C4A);
    real op1_e3_l_381C4F#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C4D);
    tensor[3] camU1C44#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371C4E,op1_e3_l_381C4F);
    globals.camU1BA0 = camU1C44;
    tensor[3,3] op1_e3_l_451C67#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171C4A);
    tensor[3] op1_e3_l_471C68#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C3A,op1_e3_l_451C67);
    tensor[3] op1_e3_l_501C6A#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C3D,op1_e3_l_471C68);
    tensor[3] camV1C5D#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91C3D,op1_e3_l_381C4F,op1_e3_l_501C6A);
    globals.camV1BA1 = camV1C5D;
    globals.camDist1BA2 = op1_e3_l_71C3C;
    real _t1C81#1 = 0.314159265358979323846264338327950288e1;
    real _t1C83#1 = 0.36e3;
    real op1_e3_l_51C86#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C09,_t1C81);
    real op1_e3_l_61C87#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C83,op1_e3_l_51C86);
    real op1_e3_l_101C8A#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61C87);
    real camVmax1C85#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101C8A,op1_e3_l_71C3C);
    globals.camVmax1BA3 = camVmax1C85;
    real _t1C94#1 = IntToReal(iresU1C0B);
    real _t1C96#1 = IntToReal(iresV1C0D);
    real op1_e3_l_141C9F#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1C94,op1_e3_l_101C8A,op1_e3_l_71C3C);
    real camUmax1C98#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C96,op1_e3_l_141C9F);
    globals.camUmax1BA4 = camUmax1C98;
    real camNearVsp1CA9#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1C05,op1_e3_l_71C3C);
    globals.camNearVsp1BA5 = camNearVsp1CA9;
    real camFarVsp1CB2#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1C07,op1_e3_l_71C3C);
    globals.camFarVsp1BA6 = camFarVsp1CB2;
    tensor[3,3] _t1CBB#1 = <tensor[3,3]>[camU1C44,camV1C5D,camN1C39];
    real op1_e3_l_31CBE#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1C0F);
    real op1_e3_l_41CBF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31CBE);
    real op1_e3_l_51CC0#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41CBF);
    tensor[3] op1_e3_l_61CC1#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1CBB,litdir1C0F);
    tensor[3] litwsp1CBD#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51CC0,op1_e3_l_61CC1);
    globals.litwsp1BA7 = litwsp1CBD;
    globals._t1BA8 = _t1C33;
    globals._tX1BA9 = _t1C31;
    globals._tXX1BAA = _t1C2F;
    globals.img1BAB = img1C37;
    globals._tXXX1BAC = _t1C35;
    return
## strand
  strand ray (int ui1CCE#1, int vi1CCF#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1CE0:  preds = []
        tensor[3] camEye1CE1#1 = globals.camEye1B88;
        bool camOrtho1CE3#2 = globals.camOrtho1B8E;
        int iresU1CE5#1 = globals.iresU1B8F;
        int iresV1CE7#1 = globals.iresV1B90;
        real rayStep1CE9#1 = globals.rayStep1B91;
        real refStep1CEB#1 = globals.refStep1B92;
        tensor[4] phong1CED#4 = globals.phong1B9A;
        tensor[3] camN1CEF#1 = globals.camN1B9F;
        tensor[3] camU1CF1#1 = globals.camU1BA0;
        tensor[3] camV1CF3#1 = globals.camV1BA1;
        real camDist1CF5#1 = globals.camDist1BA2;
        real camVmax1CF7#2 = globals.camVmax1BA3;
        real camUmax1CF9#2 = globals.camUmax1BA4;
        real camNearVsp1CFB#1 = globals.camNearVsp1BA5;
        real _t1CFD#5 = -0.5e0;
        real _t1CFF#1 = IntToReal(ui1CCE);
        real _t1D01#1 = IntToReal(iresU1CE5);
        real _t1D03#3 = 0.5e0;
        real op1_e3_l_61D06#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D01,_t1D03);
        real op1_e3_l_71D07#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1CFF);
        real op1_e3_l_81D08#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_61D06);
        real op1_e3_l_91D09#2 = λ(T0[])<Neg(T0)> (camUmax1CF9);
        real op1_e3_l_101D0A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D07,op1_e3_l_81D08);
        real op1_e3_l_111D0B#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1CF9,op1_e3_l_91D09);
        real op1_e3_l_131D0C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D0A,op1_e3_l_111D0B);
        real rayU1D05#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D09,op1_e3_l_131D0C);
        real _t1D15#1 = IntToReal(vi1CCF);
        real _t1D17#2 = IntToReal(iresV1CE7);
        real op1_e3_l_61D1A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D17,_t1D03);
        real op1_e3_l_71D1B#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,_t1D15);
        real op1_e3_l_81D1C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_61D1A);
        real op1_e3_l_91D1D#3 = λ(T0[])<Neg(T0)> (camVmax1CF7);
        real op1_e3_l_101D1E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D1B,op1_e3_l_81D1C);
        real op1_e3_l_111D1F#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CF7,op1_e3_l_91D1D);
        real op1_e3_l_131D20#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D1E,op1_e3_l_111D1F);
        real rayV1D19#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D1D,op1_e3_l_131D20);
        real op1_e3_l_231D32#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D03,_t1D17);
        real op1_e3_l_251D34#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1CFD,op1_e3_l_231D32);
        real op1_e3_l_271D36#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D1B,op1_e3_l_251D34);
        real op1_e3_l_301D38#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271D36,op1_e3_l_111D1F);
        real op1_e3_l_311D39#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D1D,op1_e3_l_301D38);
        tensor[3] op1_e3_l_321D3A#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF1,rayU1D05);
        tensor[3] op1_e3_l_331D3B#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CF3,op1_e3_l_311D39);
        tensor[3] UV1D29#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321D3A,op1_e3_l_331D3B);
        if camOrtho1CE3 then goto JOIN1D52 else goto ASSIGN1DBE
      JOIN1D52:  preds = [COND1D4F,ASSIGN1DBF]
        tensor[3] _t1D50#1 = phi(UV1D29,_t1D51)
        tensor[3] rayOrig1D53#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1CE1,_t1D50);
        if camOrtho1CE3 then goto ASSIGN1D57 else goto ASSIGN2008
      ASSIGN1D57:  preds = [COND1D55]
        real _t1D56#3 = 0.e0;
        tensor[3] _t1D58#1 = <tensor[3]>[_t1D56,_t1D56,_t1D56];
        goto JOIN1D5C
      JOIN1D5C:  preds = [ASSIGN1D59,ASSIGN2008]
        tensor[3] _t1D5A#1 = phi(_t1D58,_t1D5B)
        tensor[3] rayVec1D5D#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CEF,_t1D5A);
        real op1_e3_l_61D61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1D5D,rayVec1D5D);
        real op1_e3_l_71D62#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D61);
        real op1_e3_l_81D63#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1CE9,op1_e3_l_71D62);
        real alphaFix1D5F#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1CEB,op1_e3_l_81D63);
        real op1_e3_l_91D6D#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D62);
        tensor[3] op1_e3_l_101D6E#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1D5D,op1_e3_l_91D6D);
        tensor[3] eyeDir1D69#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101D6E);
        real phKa1D75#1 = TensorIndex<tensor[4],[0]>(phong1CED);
        real phKd1D77#1 = TensorIndex<tensor[4],[1]>(phong1CED);
        real phKs1D79#1 = TensorIndex<tensor[4],[2]>(phong1CED);
        real phSp1D7B#1 = TensorIndex<tensor[4],[3]>(phong1CED);
        real _t1D7D#8 = 0.e0;
        tensor[4] rgba1D7F#1 = <tensor[4]>[_t1D7D,_t1D7D,_t1D7D,_t1D7D];
        tensor[3] rgb1D81#1 = <tensor[3]>[_t1D7D,_t1D7D,_t1D7D];
        real transp1D83#1 = 0.1e1;
        self.rayU = rayU1D05;
        self.rayV = rayV1D19;
        self.rayN = camNearVsp1CFB;
        self.UV = UV1D29;
        self.rayOrig = rayOrig1D53;
        self.rayVec = rayVec1D5D;
        self.alphaFix = alphaFix1D5F;
        self.eyeDir = eyeDir1D69;
        self.phKa = phKa1D75;
        self.phKd = phKd1D77;
        self.phKs = phKs1D79;
        self.phSp = phSp1D7B;
        self.rgba = rgba1D7F;
        self.raw = _t1D7D;
        self.rgb = rgb1D81;
        self.transp = transp1D83;
        return
      ASSIGN2008:  preds = [COND1D55]
        tensor[3] _t1D5B#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1CF5,UV1D29);
        goto JOIN1D5C
      ASSIGN1DBE:  preds = [COND1D4F]
        real _t1DBD#3 = 0.e0;
        tensor[3] _t1D51#1 = <tensor[3]>[_t1DBD,_t1DBD,_t1DBD];
        goto JOIN1D52
    end state init
    method update
        ENTRY1DC0:  preds = []
          image(IMAGE1D<double[3]>) cmap1FF3#5 = globals.cmap1B87;
          int _t1DC1#7 = globals._t1BA8;
          femData:Space _t1DC3#7 = globals._tX1BA9;
          femData:FemFunc _t1DC5#7 = globals._tXX1BAA;
          image(IMAGE1D<double[3]>) img1DC7#1 = globals.img1BAB;
          kernel _t1DC9#1 = globals._tXXX1BAC;
          femData:Mesh block1DCB#1 = globals.block1B83;
          real rayStep1DCD#1 = globals.rayStep1B91;
          real transp01DCF#1 = globals.transp01B93;
          real thick1DD1#1 = globals.thick1B94;
          real fStrTh1DD3#1 = globals.fStrTh1B95;
          real fMaskTh1DD5#1 = globals.fMaskTh1B96;
          real fBias1DD7#1 = globals.fBias1B97;
          real maxAlpha1DD9#2 = globals.maxAlpha1B98;
          tensor[3] mcNear1DDB#2 = globals.mcNear1B9B;
          tensor[3] mcFar1DDD#1 = globals.mcFar1B9C;
          tensor[2] cminmax1DDF#2 = globals.cminmax1B9E;
          real camNearVsp1DE1#2 = globals.camNearVsp1BA5;
          real camFarVsp1DE3#2 = globals.camFarVsp1BA6;
          tensor[3] litwsp1DE5#2 = globals.litwsp1BA7;
          real rayN1DE7#1 = self.rayN;
          tensor[3] rayOrig1DE9#2 = self.rayOrig;
          tensor[3] rayVec1DEB#1 = self.rayVec;
          real alphaFix1DED#1 = self.alphaFix;
          tensor[3] eyeDir1DEF#1 = self.eyeDir;
          real phKa1DF1#1 = self.phKa;
          real phKd1DF3#1 = self.phKd;
          real phKs1DF5#2 = self.phKs;
          real phSp1DF7#1 = self.phSp;
          tensor[3] rgb1DF9#1 = self.rgb;
          real transp1DFB#2 = self.transp;
          real rayN1DFD#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1DE7,rayStep1DCD);
          bool _t1DFF#1 = GT<real>(rayN1DFD,camFarVsp1DE3);
          if _t1DFF then goto SAVE1E02 else goto JOIN1E04
        SAVE1E02:  preds = [COND1E01]
          self.rayN = rayN1DFD;
          stabilize
          goto JOIN1E04
        JOIN1E04:  preds = [*STABILIZE1E03,COND1E01]
          tensor[3] op1_e3_l_51E07#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DEB,rayN1DFD);
          tensor[3] pos1E05#13 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1DE9,op1_e3_l_51E07);
          femData:RefCell _t1E0B#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1DCB);
          real _t1E0D#1 = 0.1e-8;
          bool _t1E0F#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1E0B,pos1E05,_t1E0D);
          if _t1E0F then goto ASSIGN1E17 else goto ASSIGN1FB2
        ASSIGN1E17:  preds = [COND1E11]
          int[84] femIndicies1E14#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E15#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E14);
          tensor[3,3,84] basisResult1E16#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E05);
          tensor[3,3] _t1E12#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E15,basisResult1E16,pos1E05);
          real[3] _t1E1C#1 = EigenVals3x3(_t1E12);
          int _t1E1F#1 = 1;
          real _t1E21#1 = Subscript<real[3]>(_t1E1C,_t1E1F);
          tensor[3,84] basisResult1E2C#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_61E24#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E15,basisResult1E2C,pos1E05);
          real op1_e3_l_81E25#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61E24,probe_l_61E24);
          real op1_e3_l_91E26#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81E25);
          real op1_e3_l_101E27#1 = λ(T0[])<Neg(T0)> (_t1E21);
          real op1_e3_l_111E28#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1DD7,op1_e3_l_91E26);
          real _t1E23#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101E27,op1_e3_l_111E28);
          bool _t1E37#1 = GT<real>(_t1E23,fStrTh1DD3);
          if _t1E37 then goto ASSIGN1E3B else goto ASSIGN1FB1
        ASSIGN1E3B:  preds = [COND1E39]
          real _t1E3A#1 = 0.1e1;
          bool _t1E3C#1 = GTE<real>(_t1E3A,fMaskTh1DD5);
          if _t1E3C then goto ASSIGN1E40 else goto ASSIGN1FB0
        ASSIGN1E40:  preds = [COND1E3E]
          bool _t1E3F#1 = true;
          goto JOIN1E43
        JOIN1E43:  preds = [ASSIGN1E40,ASSIGN1FB0]
          bool _t1E41#1 = phi(_t1E3F,_t1E42)
          goto JOIN1E46
        JOIN1E46:  preds = [JOIN1E43,ASSIGN1FB1]
          bool _t1E44#1 = phi(_t1E41,_t1E45)
          goto JOIN1E49
        JOIN1E49:  preds = [JOIN1E46,ASSIGN1FB2]
          bool _t1E47#1 = phi(_t1E44,_t1E48)
          bool _t1E4A#1 = BNot(_t1E47);
          if _t1E4A then goto SAVE1E4D else goto JOIN1E4F
        SAVE1E4D:  preds = [COND1E4C]
          self.rayN = rayN1DFD;
          active
          goto JOIN1E4F
        JOIN1E4F:  preds = [*ACTIVE1E4E,COND1E4C]
          int[84] femIndicies1E52#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DC3,_t1DC1);
          tensor[84] femDofs1E53#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DC5,femIndicies1E52);
          tensor[3,3,84] basisResult1E54#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E05);
          tensor[3,3] _t1E50#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E53,basisResult1E54,pos1E05);
          (real[3] evals1E5A#2,tensor[3][3] E1E5B#2) = EigenVecs3x3(_t1E50);
          int _t1E5D#2 = 2;
          tensor[3] _t1E5F#1 = Subscript<tensor[3][3]>(E1E5B,_t1E5D);
          real _t1E61#1 = Subscript<real[3]>(evals1E5A,_t1E5D);
          int _t1E63#2 = 1;
          tensor[3] _t1E65#1 = Subscript<tensor[3][3]>(E1E5B,_t1E63);
          real _t1E67#1 = Subscript<real[3]>(evals1E5A,_t1E63);
          real _t1E69#8 = 0.e0;
          real _t1E6B#10 = 0.1e1;
          real _t1E6D#1 = 0.15e1;
          tensor[3,3] op1_e3_l_161E70#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E5F);
          tensor[3,3] op1_e3_l_171E71#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1E65);
          tensor[3,3] op1_e3_l_181E72#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E61,op1_e3_l_161E70);
          tensor[3,3] op1_e3_l_191E73#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1E67,op1_e3_l_171E71);
          tensor[3,3] op1_e3_l_201E74#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_181E72,op1_e3_l_191E73);
          tensor[3,84] basisResult1E82#1 = EvaluateBasis<BasisArray(3,84)>(pos1E05);
          tensor[3] probe_l_211E75#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC1,_t1DC3,_t1DC5,pos1E05,femDofs1E53,basisResult1E82,pos1E05);
          tensor[3,3] op1_e3_l_221E76#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_201E74);
          tensor[3] op1_e3_l_301E77#5 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_211E75,op1_e3_l_221E76);
          real op1_e3_l_321E78#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_301E77,op1_e3_l_301E77);
          real op1_e3_l_331E79#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_321E78);
          real op1_e3_l_341E7A#1 = λ(T0[])<Abs(T0)> (op1_e3_l_331E79);
          real op1_e3_l_351E7B#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD1,op1_e3_l_341E7A);
          real op1_e3_l_361E7C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_351E7B);
          real op1_e3_l_371E7D#2 = λ(T0[],T1[])<(T0 * T1)> (_t1E6D,op1_e3_l_361E7C);
          real op1_e3_l_381E7E#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1E69,_t1E6B,op1_e3_l_371E7D);
          real _t1E6F#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DD9,op1_e3_l_381E7E);
          bool _t1E97#1 = EQ<real>(_t1E6F,_t1E69);
          if _t1E97 then goto SAVE1E9A else goto JOIN1E9C
        SAVE1E9A:  preds = [COND1E99]
          self.rayN = rayN1DFD;
          active
          goto JOIN1E9C
        JOIN1E9C:  preds = [*ACTIVE1E9B,COND1E99]
          real op1_e3_l_391EAC#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1E6B,_t1E69,op1_e3_l_371E7D);
          real op1_e3_l_401EAD#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DD9,op1_e3_l_391EAC);
          real _t1E9D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_401EAD);
          real _t1EC7#1 = MathFn<pow>(_t1E9D,alphaFix1DED);
          bool _t1EC9#1 = NEQ<real>(phKs1DF5,_t1E69);
          if _t1EC9 then goto ASSIGN1EE4 else goto JOIN1EFF
        ASSIGN1EE4:  preds = [COND1ECB]
          tensor[3] op1_e3_l_241ECD#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1DEF,litwsp1DE5);
          real op1_e3_l_261ECE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_241ECD,op1_e3_l_241ECD);
          real op1_e3_l_271ECF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_261ECE);
          real op1_e3_l_541EDA#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_331E79);
          tensor[3] op1_e3_l_551EDB#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_301E77,op1_e3_l_541EDA);
          tensor[3] op1_e3_l_561EDC#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_551EDB);
          real op1_e3_l_581EDD#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_271ECF);
          real op1_e3_l_591EDE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_561EDC,op1_e3_l_241ECD);
          real op1_e3_l_601EDF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_581EDD,op1_e3_l_591EDE);
          real _t1ECC#1 = λ(T0[])<Abs(T0)> (op1_e3_l_601EDF);
          real scomp1EFC#1 = MathFn<pow>(_t1ECC,phSp1DF7);
          goto JOIN1EFF
        JOIN1EFF:  preds = [ASSIGN1EFD,COND1ECB]
          real scomp1EFE#1 = phi(scomp1EFC,_t1E69)
          real cmin1F00#3 = TensorIndex<tensor[2],[0]>(cminmax1DDF);
          real cmax1F02#2 = TensorIndex<tensor[2],[1]>(cminmax1DDF);
          tensor[3] mcol1F04#2 = <tensor[3]>[_t1E6B,_t1E6B,_t1E6B];
          bool _t1F06#1 = NEQ<real>(cmin1F00,cmax1F02);
          if _t1F06 then goto ASSIGN2014 else goto JOIN1F58
        ASSIGN2014:  preds = [COND1F08]
          tensor[3] _t1F09#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (rayOrig1DE9,op1_e3_l_51E07,op1_e3_l_301E77);
          tensor[84] basisResult1F31#1 = EvaluateBasis<BasisArray(84)>(_t1F09);
          real probe_l_81F28#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1DC1,_t1DC3,_t1DC5,_t1F09,femDofs1E53,basisResult1F31,_t1F09);
          real op1_e3_l_91F29#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F00,probe_l_81F28);
          real op1_e3_l_101F2A#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F00,cmax1F02);
          real op1_e3_l_111F2B#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91F29,op1_e3_l_101F2A);
          real op1_e3_l_121F2C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E69,_t1E6B);
          real op1_e3_l_131F2D#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111F2B,op1_e3_l_121F2C);
          real _t1F27#2 = λ(T0[],T1[])<(T0 + T1)> (_t1E69,op1_e3_l_131F2D);
          real Mtransform1F3E#2 = Transform<IMAGE1D<double[3]>>(cmap1FF3);
          real MxPos1F3F#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1F3E,_t1F27);
          real Ttranslate1F40#1 = Translate<IMAGE1D<double[3]>>(cmap1FF3);
          real imgPos1F41#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1F3F,Ttranslate1F40);
          real nd1F42#2 = Floor<1>(imgPos1F41);
          real f1F43#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1F41,nd1F42);
          int n1F44#1 = RealToInt<1>(nd1F42);
          int idx1F46#3 = n1F44;
          bool isInside2021#1 = IndexInside<IMAGE1D<double[3]>,2>(idx1F46,cmap1FF3);
          if isInside2021 then goto ASSIGN2022 else goto ASSIGN2023
        ASSIGN2022:  preds = [COND2025]
          tensor[3,2] ldvox201F#1 = LoadVoxels<IMAGE1D<double[3]>,2>(cmap1FF3,idx1F46);
          goto JOIN2026
        JOIN2026:  preds = [ASSIGN2022,ASSIGN2023]
          tensor[3,2] ldvox1F47#1 = phi(ldvox201F,ldvox2020)
          tensor[2] kernX_1F48#1 = BuildPos<1>(f1F43);
          tensor[2] kevalX_d0_1F49#1 = EvalKernel<2,tent,0>(kernX_1F48);
          tensor[3] mcol1F3D#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1DC7,_t1DC9,_t1F27,Mtransform1F3E,ldvox1F47,kevalX_d0_1F49);
          goto JOIN1F58
        JOIN1F58:  preds = [ASSIGN1F56,COND1F08]
          tensor[3] mcol1F57#1 = phi(mcol1F3D,mcol1F04)
          real op1_e3_l_631F64#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_331E79);
          tensor[3] op1_e3_l_641F65#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_301E77,op1_e3_l_631F64);
          tensor[3] op1_e3_l_651F66#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_641F65);
          real op1_e3_l_661F67#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1DE5,op1_e3_l_651F66);
          real op1_e3_l_671F68#1 = λ(T0[])<(T0)^2> (op1_e3_l_661F67);
          real op1_e3_l_681F69#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1DF3,op1_e3_l_671F68);
          real op1_e3_l_701F6B#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE1,rayN1DFD);
          real op1_e3_l_711F6C#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE1,camFarVsp1DE3);
          real op1_e3_l_721F6D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_701F6B,op1_e3_l_711F6C);
          tensor[3] op1_e3_l_731F6E#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1DDB,mcFar1DDD);
          tensor[3] op1_e3_l_741F6F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_721F6D,op1_e3_l_731F6E);
          real op1_e3_l_751F70#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1DF1,op1_e3_l_681F69);
          tensor[3] op1_e3_l_761F71#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1DDB,op1_e3_l_741F6F);
          tensor[3] op1_e3_l_771F72#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol1F57,op1_e3_l_751F70,op1_e3_l_761F71);
          tensor[3] op1_e3_l_781F73#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1DF5,scomp1EFE,mcol1F04);
          real op1_e3_l_791F74#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,_t1EC7);
          tensor[3] op1_e3_l_801F75#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_771F72,op1_e3_l_781F73);
          tensor[3] op1_e3_l_811F76#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1DFB,op1_e3_l_791F74,op1_e3_l_801F75);
          tensor[3] rgb1F59#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1DF9,op1_e3_l_811F76);
          real op1_e3_l_51F9F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6B,op1_e3_l_791F74);
          real transp1F9D#2 = λ(T0[],T1[])<(T0 * T1)> (transp1DFB,op1_e3_l_51F9F);
          bool _t1FA3#1 = LT<real>(transp1F9D,transp01DCF);
          if _t1FA3 then goto SAVE1FA6 else goto JOIN1FAB
        SAVE1FA6:  preds = [COND1FA5]
          self.rayN = rayN1DFD;
          self.rgb = rgb1F59;
          self.transp = _t1E69;
          stabilize
          goto JOIN1FAB
        JOIN1FAB:  preds = [*STABILIZE1FA9,COND1FA5]
          real transp1FAA#1 = phi(transp1F9D)
          self.rayN = rayN1DFD;
          self.rgb = rgb1F59;
          self.transp = transp1FAA;
          active
        ASSIGN2023:  preds = [COND2025]
          tensor[3,2] ldvox2020#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap1FF3,idx1F46);
          goto JOIN2026
        ASSIGN1FB0:  preds = [COND1E3E]
          bool _t1E42#1 = false;
          goto JOIN1E43
        ASSIGN1FB1:  preds = [COND1E39]
          bool _t1E45#1 = false;
          goto JOIN1E46
        ASSIGN1FB2:  preds = [COND1E11]
          bool _t1E48#1 = false;
          goto JOIN1E49
    end update
    method stabilize
        ENTRY1FB3:  preds = []
          tensor[4] rgba1FB4#1 = self.rgba;
          tensor[3] rgb1FB6#3 = self.rgb;
          real transp1FB8#2 = self.transp;
          real _t1FBA#2 = 0.1e1;
          bool _t1FBC#1 = LT<real>(transp1FB8,_t1FBA);
          if _t1FBC then goto ASSIGN1FC0 else goto JOIN1FD6
        ASSIGN1FC0:  preds = [COND1FBE]
          real aa1FBF#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1FBA,transp1FB8);
          real _t1FC1#1 = TensorIndex<tensor[3],[0]>(rgb1FB6);
          real _t1FC3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FC1,aa1FBF);
          real _t1FC7#1 = TensorIndex<tensor[3],[1]>(rgb1FB6);
          real _t1FC9#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FC7,aa1FBF);
          real _t1FCD#1 = TensorIndex<tensor[3],[2]>(rgb1FB6);
          real _t1FCF#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1FCD,aa1FBF);
          tensor[4] rgba1FD3#1 = <tensor[4]>[_t1FC3,_t1FC9,_t1FCF,aa1FBF];
          goto JOIN1FD6
        JOIN1FD6:  preds = [ASSIGN1FD4,COND1FBE]
          tensor[4] rgba1FD5#1 = phi(rgba1FD3,rgba1FB4)
          self.rgba = rgba1FD5;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY1FD9:  preds = []
      int iresU1FDA#1 = globals.iresU1B8F;
      int iresV1FDC#1 = globals.iresV1B90;
      int _t1FDE#2 = 0;
      int _t1FE0#2 = 1;
      int _t1FE2#1 = ISub(iresV1FDC,_t1FE0);
      int[] _t1FE4#1 = Range(_t1FDE,_t1FE2);
    FOREACH1FE7:  preds = [ASSIGN1FE5,NEXT1FF0]
      foreach (vi1FE6 in _t1FE4) on exit goto RETURN1FF1
      int _t1FE8#1 = ISub(iresU1FDA,_t1FE0);
      int[] _t1FEA#1 = Range(_t1FDE,_t1FE8);
    FOREACH1FED:  preds = [ASSIGN1FEB,NEXT1FEF]
      foreach (ui1FEC in _t1FEA) on exit goto NEXT1FF0
      new ray(ui1FEC,vi1FE6);
      goto FOREACH1FED
    NEXT1FF0:  preds = [FOREACH1FED]
      goto FOREACH1FE7
    RETURN1FF1:  preds = [FOREACH1FE7]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2027 (block) = <no-default>
  input 0space04CF_intermedateGlobal2028 (space) = <no-default>
  input 0U04D1_intermedateGlobal2029 (U) = <no-default>
  input cellChoice202A (cellChoice) = <no-default>
  input cmap202B (cmap) = image("cmap.nrrd")
  input camEye202C (camEye) = <default>
  input camAt202D (camAt) = <default>
  input camUp202E (camUp) = <default>
  input camNear202F (camNear) = <default>
  input camFar2030 (camFar) = <default>
  input camFOV2031 (camFOV) = <default>
  input camOrtho2032 (camOrtho) = <default>
  input iresU2033 (iresU) = <default>
  input iresV2034 (iresV) = <default>
  input rayStep2035 (rayStep) = <default>
  input refStep2036 (refStep) = <default>
  input transp02037 (transp0) = <default>
  input thick2038 (thick) = <default>
  input fStrTh2039 (fStrTh) = <default>
  input fMaskTh203A (fMaskTh) = <default>
  input fBias203B (fBias) = <default>
  input maxAlpha203C (maxAlpha) = <default>
  input light203D (light) = <default>
  input phong203E (phong) = <default>
  input mcNear203F (mcNear) = <default>
  input mcFar2040 (mcFar) = <default>
  input litdir2041 (litdir) = <default>
  input cminmax2042 (cminmax) = <default>
  global tensor[3] camN2043
  global tensor[3] camU2044
  global tensor[3] camV2045
  global real camDist2046
  global real camVmax2047
  global real camUmax2048
  global real camNearVsp2049
  global real camFarVsp204A
  global tensor[3] litwsp204B
  global int _t204C
  global femData:Space _tX204D
  global femData:FemFunc _tXX204E
  global image(IMAGE1D<double[3]>) img204F
  global int _tXXX2050
## functions
## input initialization
  ENTRY2051:  preds = []
    real _t2052#13 = 0.e0;
    real _t2054#1 = -0.2e1;
    tensor[3] camEye2056#1 = <tensor[3]>[_t2052,_t2054,_t2052];
    globals.camEye202C = camEye2056;
    tensor[3] camAt2059#1 = <tensor[3]>[_t2052,_t2052,_t2052];
    globals.camAt202D = camAt2059;
    real _t205C#5 = 0.1e1;
    tensor[3] camUp205E#1 = <tensor[3]>[_t2052,_t2052,_t205C];
    globals.camUp202E = camUp205E;
    real camNear2061#1 = -0.4e1;
    globals.camNear202F = camNear2061;
    real camFar2064#1 = 0.4e1;
    globals.camFar2030 = camFar2064;
    real camFOV2067#1 = 0.1e2;
    globals.camFOV2031 = camFOV2067;
    bool camOrtho206A#2 = false;
    globals.camOrtho2032 = camOrtho206A;
    int iresU206D#2 = 100;
    globals.iresU2033 = iresU206D;
    globals.iresV2034 = iresU206D;
    real rayStep2071#2 = 0.1e-3;
    globals.rayStep2035 = rayStep2071;
    globals.refStep2036 = rayStep2071;
    real transp02075#1 = 0.5e-2;
    globals.transp02037 = transp02075;
    real thick2078#1 = 0.1e-1;
    globals.thick2038 = thick2078;
    globals.fStrTh2039 = _t2052;
    globals.fMaskTh203A = _t2052;
    real fBias207D#2 = 0.1e0;
    globals.fBias203B = fBias207D;
    globals.maxAlpha203C = _t205C;
    globals.light203D = camOrtho206A;
    real _t2082#1 = 0.7e0;
    real _t2084#1 = 0.2e0;
    real _t2086#1 = 0.1e3;
    tensor[4] phong2088#1 = <tensor[4]>[fBias207D,_t2082,_t2084,_t2086];
    globals.phong203E = phong2088;
    tensor[3] mcNear208B#2 = <tensor[3]>[_t205C,_t205C,_t205C];
    globals.mcNear203F = mcNear208B;
    globals.mcFar2040 = mcNear208B;
    real _t208F#1 = -0.1e1;
    tensor[3] litdir2091#1 = <tensor[3]>[_t2052,_t208F,_t2052];
    globals.litdir2041 = litdir2091;
    tensor[2] cminmax2094#1 = <tensor[2]>[_t2052,_t2052];
    globals.cminmax2042 = cminmax2094;
    return
## global-variable initialization
  ENTRY2098:  preds = []
    femData:Mesh block2099#3 = globals.block2027;
    femData:Space 0space04CF_intermedateGlobal209B#1 = globals.0space04CF_intermedateGlobal2028;
    femData:FemFunc 0U04D1_intermedateGlobal209D#1 = globals.0U04D1_intermedateGlobal2029;
    int cellChoice209F#1 = globals.cellChoice202A;
    image(IMAGE1D<double[3]>) cmap20A1#1 = globals.cmap202B;
    tensor[3] camEye20A3#1 = globals.camEye202C;
    tensor[3] camAt20A5#1 = globals.camAt202D;
    tensor[3] camUp20A7#3 = globals.camUp202E;
    real camNear20A9#1 = globals.camNear202F;
    real camFar20AB#1 = globals.camFar2030;
    real camFOV20AD#1 = globals.camFOV2031;
    int iresU20AF#1 = globals.iresU2033;
    int iresV20B1#1 = globals.iresV2034;
    tensor[3] litdir20B3#5 = globals.litdir2041;
    int _t20B5#1 = 0;
    int _t20B7#1 = 1;
    int _t20B9#1 = ExtractFemItem<int,NumCell(Mesh)>(block2099);
    int _t20BB#1 = ISub(_t20B9,_t20B7);
    int[] _t20BD#1 = Range(_t20B5,_t20BB);
    femData:MeshCell[] _t20BF#1 = <femData:MeshCell[]>{};
  FOREACH20C2:  preds = [ASSIGN20C0,NEXT20C8]
    foreach (_t20C1 in _t20BD) on exit goto ASSIGN20CA
      femData:MeshCell[] _t20C6#2 = phi(_t20BF,_t20C5)
    femData:MeshCell _t20C3#1 = LoadFem<femData:MeshCell>(block2099,_t20C1);
    femData:MeshCell[] _t20C5#1 = Append<femData:MeshCell>(_t20C6,_t20C3);
    goto FOREACH20C2
  ASSIGN20CA:  preds = [FOREACH20C2]
    femData:Space space20C9#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal209B,block2099);
    femData:FemFunc U20CB#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal209D,space20C9);
    femData:MeshCell c120CD#1 = Subscript<femData:MeshCell[]>(_t20C6,cellChoice209F);
    int _t20CF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c120CD);
    femData:FuncCell _t20D1#2 = LoadFem<femData:FuncCell>(U20CB,_t20CF);
    femData:FemFunc _t20D3#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t20D1);
    femData:Space _t20D5#1 = ExtractFem<femData:Space,femData:FemFunc>(_t20D3);
    int _t20D7#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t20D1);
    int _t20D9#1 = 0;
    image(IMAGE1D<double[3]>) img20DB#1 = cmap20A1;
    tensor[3] op1_e3_l_420DD#9 = VSub<3>(camAt20A5,camEye20A3);
    real op1_e3_l_620E0#1 = VDot<3>(op1_e3_l_420DD,op1_e3_l_420DD);
    real op1_e3_l_720E3#6 = Sqrt(op1_e3_l_620E0);
    real realLit20E7#1 = 0.1e1;
    real op1_e3_l_920E6#6 = RDiv(realLit20E7,op1_e3_l_720E3);
    tensor[3] camN20EB#2 = VScale<3>(op1_e3_l_920E6,op1_e3_l_420DD);
    globals.camN2043 = camN20EB;
    real realLit20F0#3 = 0.e0;
    real r20F1#3 = TensorIndex<tensor[3],[0]>(camUp20A7);
    real r20F2#3 = RMul(realLit20F0,r20F1);
    real r20F3#3 = TensorIndex<tensor[3],[1]>(camUp20A7);
    real r20F4#3 = RMul(realLit20F0,r20F3);
    real r20F5#3 = TensorIndex<tensor[3],[2]>(camUp20A7);
    real r20F6#5 = RMul(realLit20F0,r20F5);
    real r20F7#3 = RAdd(r20F2,r20F4);
    real r20F8#3 = RAdd(r20F7,r20F6);
    real realLit20F9#3 = 0.1e1;
    real r20FA#1 = RMul(realLit20F9,r20F5);
    real r20FB#1 = RAdd(r20F7,r20FA);
    real realLit20FC#3 = -0.1e1;
    real r20FD#1 = RMul(realLit20FC,r20F3);
    real r20FE#1 = RAdd(r20F2,r20FD);
    real r20FF#1 = RAdd(r20FE,r20F6);
    tensor[3] tensor2100#1 = <tensor[3]>[r20F8,r20FB,r20FF];
    real r2101#1 = RMul(realLit20FC,r20F5);
    real r2102#1 = RAdd(r20F7,r2101);
    real r2103#1 = RMul(realLit20F9,r20F1);
    real r2104#1 = RAdd(r2103,r20F4);
    real r2105#1 = RAdd(r2104,r20F6);
    tensor[3] tensor2106#1 = <tensor[3]>[r2102,r20F8,r2105];
    real r2107#1 = RMul(realLit20F9,r20F3);
    real r2108#1 = RAdd(r20F2,r2107);
    real r2109#1 = RAdd(r2108,r20F6);
    real r210A#1 = RMul(realLit20FC,r20F1);
    real r210B#1 = RAdd(r210A,r20F4);
    real r210C#1 = RAdd(r210B,r20F6);
    tensor[3] tensor210D#1 = <tensor[3]>[r2109,r210C,r20F8];
    tensor[3,3] op1_e3_l_1520EF#3 = <tensor[3,3]>[tensor2100,tensor2106,tensor210D];
    tensor[3] projParam212F#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1520EF);
    real vdot2130#1 = VDot<3>(op1_e3_l_420DD,projParam212F);
    tensor[3] projParam2131#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1520EF);
    real vdot2132#1 = VDot<3>(op1_e3_l_420DD,projParam2131);
    tensor[3] projParam2133#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1520EF);
    real vdot2134#1 = VDot<3>(op1_e3_l_420DD,projParam2133);
    tensor[3] op1_e3_l_17212E#6 = <tensor[3]>[vdot2130,vdot2132,vdot2134];
    real op1_e3_l_34213D#1 = VDot<3>(op1_e3_l_17212E,op1_e3_l_17212E);
    real r2141#1 = RMul(op1_e3_l_920E6,op1_e3_l_920E6);
    real op1_e3_l_352140#1 = RMul(r2141,op1_e3_l_34213D);
    real op1_e3_l_362145#1 = Sqrt(op1_e3_l_352140);
    tensor[3] op1_e3_l_372148#1 = VScale<3>(op1_e3_l_920E6,op1_e3_l_17212E);
    real realLit214C#1 = 0.1e1;
    real op1_e3_l_38214B#2 = RDiv(realLit214C,op1_e3_l_362145);
    tensor[3] camU2150#2 = VScale<3>(op1_e3_l_38214B,op1_e3_l_372148);
    globals.camU2044 = camU2150;
    real realLit2155#3 = 0.e0;
    real r2156#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_17212E);
    real r2157#3 = RMul(realLit2155,r2156);
    real r2158#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_17212E);
    real r2159#3 = RMul(realLit2155,r2158);
    real r215A#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_17212E);
    real r215B#5 = RMul(realLit2155,r215A);
    real r215C#3 = RAdd(r2157,r2159);
    real r215D#3 = RAdd(r215C,r215B);
    real realLit215E#3 = 0.1e1;
    real r215F#1 = RMul(realLit215E,r215A);
    real r2160#1 = RAdd(r215C,r215F);
    real realLit2161#3 = -0.1e1;
    real r2162#1 = RMul(realLit2161,r2158);
    real r2163#1 = RAdd(r2157,r2162);
    real r2164#1 = RAdd(r2163,r215B);
    tensor[3] tensor2165#1 = <tensor[3]>[r215D,r2160,r2164];
    real r2166#1 = RMul(realLit2161,r215A);
    real r2167#1 = RAdd(r215C,r2166);
    real r2168#1 = RMul(realLit215E,r2156);
    real r2169#1 = RAdd(r2168,r2159);
    real r216A#1 = RAdd(r2169,r215B);
    tensor[3] tensor216B#1 = <tensor[3]>[r2167,r215D,r216A];
    real r216C#1 = RMul(realLit215E,r2158);
    real r216D#1 = RAdd(r2157,r216C);
    real r216E#1 = RAdd(r216D,r215B);
    real r216F#1 = RMul(realLit2161,r2156);
    real r2170#1 = RAdd(r216F,r2159);
    real r2171#1 = RAdd(r2170,r215B);
    tensor[3] tensor2172#1 = <tensor[3]>[r216E,r2171,r215D];
    tensor[3,3] op1_e3_l_452154#3 = <tensor[3,3]>[tensor2165,tensor216B,tensor2172];
    tensor[3] projParam2194#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_452154);
    real vdot2195#1 = VDot<3>(op1_e3_l_420DD,projParam2194);
    tensor[3] projParam2196#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_452154);
    real vdot2197#1 = VDot<3>(op1_e3_l_420DD,projParam2196);
    tensor[3] projParam2198#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_452154);
    real vdot2199#1 = VDot<3>(op1_e3_l_420DD,projParam2198);
    tensor[3] op1_e3_l_472193#1 = <tensor[3]>[vdot2195,vdot2197,vdot2199];
    tensor[3] op1_e3_l_5021A2#3 = VScale<3>(op1_e3_l_920E6,op1_e3_l_472193);
    real r21A6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5021A2);
    real r21A7#3 = RMul(op1_e3_l_920E6,op1_e3_l_38214B);
    real r21A8#1 = RMul(r21A7,r21A6);
    real r21A9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5021A2);
    real r21AA#1 = RMul(r21A7,r21A9);
    real r21AB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5021A2);
    real r21AC#1 = RMul(r21A7,r21AB);
    tensor[3] camV21A5#2 = <tensor[3]>[r21A8,r21AA,r21AC];
    globals.camV2045 = camV21A5;
    globals.camDist2046 = op1_e3_l_720E3;
    real _t21B8#1 = 0.314159265358979323846264338327950288e1;
    real _t21BA#1 = 0.36e3;
    real op1_e3_l_521BC#1 = RMul(camFOV20AD,_t21B8);
    real op1_e3_l_621BF#1 = RDiv(op1_e3_l_521BC,_t21BA);
    real op1_e3_l_1021C2#2 = Tan(op1_e3_l_621BF);
    real camVmax21C5#1 = RMul(op1_e3_l_1021C2,op1_e3_l_720E3);
    globals.camVmax2047 = camVmax21C5;
    real _t21C9#1 = IntToReal(iresU20AF);
    real _t21CB#1 = IntToReal(iresV20B1);
    real r21CE#1 = RMul(_t21C9,op1_e3_l_1021C2);
    real op1_e3_l_1421CD#1 = RMul(r21CE,op1_e3_l_720E3);
    real camUmax21D2#1 = RDiv(op1_e3_l_1421CD,_t21CB);
    globals.camUmax2048 = camUmax21D2;
    real camNearVsp21D6#1 = RAdd(camNear20A9,op1_e3_l_720E3);
    globals.camNearVsp2049 = camNearVsp21D6;
    real camFarVsp21DA#1 = RAdd(camFar20AB,op1_e3_l_720E3);
    globals.camFarVsp204A = camFarVsp21DA;
    tensor[3,3] _t21DE#9 = <tensor[3,3]>[camU2150,camV21A5,camN20EB];
    real op1_e3_l_321E0#1 = VDot<3>(litdir20B3,litdir20B3);
    real op1_e3_l_421E3#1 = Sqrt(op1_e3_l_321E0);
    real realLit21E7#1 = 0.1e1;
    real op1_e3_l_521E6#1 = RDiv(realLit21E7,op1_e3_l_421E3);
    real r21EC#1 = TensorIndex<tensor[3,3],[0,0]>(_t21DE);
    real r21ED#3 = TensorIndex<tensor[3],[0]>(litdir20B3);
    real r21EE#1 = RMul(r21EC,r21ED);
    real r21EF#1 = TensorIndex<tensor[3,3],[1,0]>(_t21DE);
    real r21F0#3 = TensorIndex<tensor[3],[1]>(litdir20B3);
    real r21F1#1 = RMul(r21EF,r21F0);
    real r21F2#1 = TensorIndex<tensor[3,3],[2,0]>(_t21DE);
    real r21F3#3 = TensorIndex<tensor[3],[2]>(litdir20B3);
    real r21F4#1 = RMul(r21F2,r21F3);
    real r21F5#1 = RAdd(r21EE,r21F1);
    real r21F6#1 = RAdd(r21F5,r21F4);
    real r21F7#1 = TensorIndex<tensor[3,3],[0,1]>(_t21DE);
    real r21F8#1 = RMul(r21F7,r21ED);
    real r21F9#1 = TensorIndex<tensor[3,3],[1,1]>(_t21DE);
    real r21FA#1 = RMul(r21F9,r21F0);
    real r21FB#1 = TensorIndex<tensor[3,3],[2,1]>(_t21DE);
    real r21FC#1 = RMul(r21FB,r21F3);
    real r21FD#1 = RAdd(r21F8,r21FA);
    real r21FE#1 = RAdd(r21FD,r21FC);
    real r21FF#1 = TensorIndex<tensor[3,3],[0,2]>(_t21DE);
    real r2200#1 = RMul(r21FF,r21ED);
    real r2201#1 = TensorIndex<tensor[3,3],[1,2]>(_t21DE);
    real r2202#1 = RMul(r2201,r21F0);
    real r2203#1 = TensorIndex<tensor[3,3],[2,2]>(_t21DE);
    real r2204#1 = RMul(r2203,r21F3);
    real r2205#1 = RAdd(r2200,r2202);
    real r2206#1 = RAdd(r2205,r2204);
    tensor[3] op1_e3_l_621EB#1 = <tensor[3]>[r21F6,r21FE,r2206];
    tensor[3] litwsp2224#1 = VScale<3>(op1_e3_l_521E6,op1_e3_l_621EB);
    globals.litwsp204B = litwsp2224;
    globals._t204C = _t20D7;
    globals._tX204D = _t20D5;
    globals._tXX204E = _t20D3;
    globals.img204F = img20DB;
    globals._tXXX2050 = _t20D9;
    return
## strand
  strand ray (int ui222E#1, int vi222F#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2240:  preds = []
        tensor[3] camEye2241#1 = globals.camEye202C;
        bool camOrtho2243#2 = globals.camOrtho2032;
        int iresU2245#1 = globals.iresU2033;
        int iresV2247#1 = globals.iresV2034;
        real rayStep2249#1 = globals.rayStep2035;
        real refStep224B#1 = globals.refStep2036;
        tensor[4] phong224D#4 = globals.phong203E;
        tensor[3] camN224F#1 = globals.camN2043;
        tensor[3] camU2251#1 = globals.camU2044;
        tensor[3] camV2253#1 = globals.camV2045;
        real camDist2255#1 = globals.camDist2046;
        real camVmax2257#2 = globals.camVmax2047;
        real camUmax2259#2 = globals.camUmax2048;
        real camNearVsp225B#1 = globals.camNearVsp2049;
        real _t225D#5 = -0.5e0;
        real _t225F#1 = IntToReal(ui222E);
        real _t2261#1 = IntToReal(iresU2245);
        real _t2263#3 = 0.5e0;
        real op1_e3_l_62265#1 = RSub(_t2261,_t2263);
        real op1_e3_l_72268#1 = RSub(_t225F,_t225D);
        real op1_e3_l_8226B#1 = RSub(op1_e3_l_62265,_t225D);
        real op1_e3_l_9226E#2 = RNeg(camUmax2259);
        real op1_e3_l_102271#1 = RDiv(op1_e3_l_72268,op1_e3_l_8226B);
        real op1_e3_l_112274#1 = RSub(camUmax2259,op1_e3_l_9226E);
        real op1_e3_l_132277#1 = RMul(op1_e3_l_102271,op1_e3_l_112274);
        real rayU227A#2 = RAdd(op1_e3_l_9226E,op1_e3_l_132277);
        real _t227D#1 = IntToReal(vi222F);
        real _t227F#2 = IntToReal(iresV2247);
        real op1_e3_l_62281#1 = RSub(_t227F,_t2263);
        real op1_e3_l_72284#2 = RSub(_t227D,_t225D);
        real op1_e3_l_82287#1 = RSub(op1_e3_l_62281,_t225D);
        real op1_e3_l_9228A#3 = RNeg(camVmax2257);
        real op1_e3_l_10228D#1 = RDiv(op1_e3_l_72284,op1_e3_l_82287);
        real op1_e3_l_112290#2 = RSub(camVmax2257,op1_e3_l_9228A);
        real op1_e3_l_132293#1 = RMul(op1_e3_l_10228D,op1_e3_l_112290);
        real rayV2296#1 = RAdd(op1_e3_l_9228A,op1_e3_l_132293);
        real op1_e3_l_232299#1 = RSub(_t227F,_t2263);
        real op1_e3_l_25229C#1 = RSub(op1_e3_l_232299,_t225D);
        real op1_e3_l_27229F#1 = RDiv(op1_e3_l_72284,op1_e3_l_25229C);
        real op1_e3_l_3022A2#1 = RMul(op1_e3_l_27229F,op1_e3_l_112290);
        real op1_e3_l_3122A5#1 = RAdd(op1_e3_l_9228A,op1_e3_l_3022A2);
        tensor[3] op1_e3_l_3222A8#1 = VScale<3>(rayU227A,camU2251);
        tensor[3] op1_e3_l_3322AB#1 = VScale<3>(op1_e3_l_3122A5,camV2253);
        tensor[3] UV22AE#5 = VAdd<3>(op1_e3_l_3222A8,op1_e3_l_3322AB);
        if camOrtho2243 then goto JOIN22B4 else goto ASSIGN230E
      JOIN22B4:  preds = [COND22B1,ASSIGN230F]
        tensor[3] _t22B2#1 = phi(UV22AE,_t22B3)
        tensor[3] rayOrig22B5#1 = VAdd<3>(camEye2241,_t22B2);
        if camOrtho2243 then goto ASSIGN22BA else goto ASSIGN2304
      ASSIGN22BA:  preds = [COND22B8]
        real _t22B9#3 = 0.e0;
        tensor[3] _t22BB#1 = <tensor[3]>[_t22B9,_t22B9,_t22B9];
        goto JOIN22BF
      JOIN22BF:  preds = [ASSIGN22BC,ASSIGN230C]
        tensor[3] _t22BD#1 = phi(_t22BB,_t22BE)
        tensor[3] rayVec22C0#4 = VAdd<3>(camN224F,_t22BD);
        real op1_e3_l_622C3#1 = VDot<3>(rayVec22C0,rayVec22C0);
        real op1_e3_l_722C6#2 = Sqrt(op1_e3_l_622C3);
        real op1_e3_l_822C9#1 = RMul(rayStep2249,op1_e3_l_722C6);
        real alphaFix22CC#1 = RDiv(op1_e3_l_822C9,refStep224B);
        real realLit22D0#1 = 0.1e1;
        real op1_e3_l_922CF#1 = RDiv(realLit22D0,op1_e3_l_722C6);
        tensor[3] op1_e3_l_1022D4#1 = VScale<3>(op1_e3_l_922CF,rayVec22C0);
        tensor[3] eyeDir22D7#1 = VNeg<3>(op1_e3_l_1022D4);
        real phKa22DA#1 = VIndex<4,0>(phong224D);
        real phKd22DC#1 = VIndex<4,1>(phong224D);
        real phKs22DE#1 = VIndex<4,2>(phong224D);
        real phSp22E0#1 = VIndex<4,3>(phong224D);
        real _t22E2#8 = 0.e0;
        tensor[4] rgba22E4#1 = <tensor[4]>[_t22E2,_t22E2,_t22E2,_t22E2];
        tensor[3] rgb22E6#1 = <tensor[3]>[_t22E2,_t22E2,_t22E2];
        real transp22E8#1 = 0.1e1;
        self.rayU = rayU227A;
        self.rayV = rayV2296;
        self.rayN = camNearVsp225B;
        self.UV = UV22AE;
        self.rayOrig = rayOrig22B5;
        self.rayVec = rayVec22C0;
        self.alphaFix = alphaFix22CC;
        self.eyeDir = eyeDir22D7;
        self.phKa = phKa22DA;
        self.phKd = phKd22DC;
        self.phKs = phKs22DE;
        self.phSp = phSp22E0;
        self.rgba = rgba22E4;
        self.raw = _t22E2;
        self.rgb = rgb22E6;
        self.transp = transp22E8;
        return
      ASSIGN2304:  preds = [COND22B8]
        real realLit22FB#1 = 0.1e1;
        real r22FC#3 = RDiv(realLit22FB,camDist2255);
        real r22FD#1 = TensorIndex<tensor[3],[0]>(UV22AE);
        real r22FE#1 = RMul(r22FC,r22FD);
        real r22FF#1 = TensorIndex<tensor[3],[1]>(UV22AE);
        real r2300#1 = RMul(r22FC,r22FF);
        real r2301#1 = TensorIndex<tensor[3],[2]>(UV22AE);
        real r2302#1 = RMul(r22FC,r2301);
        tensor[3] _t22BE#1 = <tensor[3]>[r22FE,r2300,r2302];
        goto JOIN22BF
      ASSIGN230E:  preds = [COND22B1]
        real _t230D#3 = 0.e0;
        tensor[3] _t22B3#1 = <tensor[3]>[_t230D,_t230D,_t230D];
        goto JOIN22B4
    end state init
    method update
        ENTRY2310:  preds = []
          image(IMAGE1D<double[3]>) cmap2311#17 = globals.cmap202B;
          int _t2313#2 = globals._t204C;
          femData:Space _t2315#168 = globals._tX204D;
          femData:FemFunc _t2317#168 = globals._tXX204E;
          image(IMAGE1D<double[3]>) img2319#0 = globals.img204F;
          int _t231B#0 = globals._tXXX2050;
          femData:Mesh block231D#1 = globals.block2027;
          real rayStep231F#1 = globals.rayStep2035;
          real transp02321#1 = globals.transp02037;
          real thick2323#1 = globals.thick2038;
          real fStrTh2325#1 = globals.fStrTh2039;
          real fMaskTh2327#1 = globals.fMaskTh203A;
          real fBias2329#1 = globals.fBias203B;
          real maxAlpha232B#2 = globals.maxAlpha203C;
          tensor[3] mcNear232D#2 = globals.mcNear203F;
          tensor[3] mcFar232F#1 = globals.mcFar2040;
          tensor[2] cminmax2331#2 = globals.cminmax2042;
          real camNearVsp2333#2 = globals.camNearVsp2049;
          real camFarVsp2335#2 = globals.camFarVsp204A;
          tensor[3] litwsp2337#2 = globals.litwsp204B;
          real rayN2339#1 = self.rayN;
          tensor[3] rayOrig233B#2 = self.rayOrig;
          tensor[3] rayVec233D#1 = self.rayVec;
          real alphaFix233F#1 = self.alphaFix;
          tensor[3] eyeDir2341#1 = self.eyeDir;
          real phKa2343#1 = self.phKa;
          real phKd2345#1 = self.phKd;
          real phKs2347#2 = self.phKs;
          real phSp2349#1 = self.phSp;
          tensor[3] rgb234B#1 = self.rgb;
          real transp234D#2 = self.transp;
          real rayN234F#8 = RAdd(rayN2339,rayStep231F);
          bool _t2352#1 = GT<real>(rayN234F,camFarVsp2335);
          if _t2352 then goto SAVE2355 else goto JOIN2357
        SAVE2355:  preds = [COND2354]
          self.rayN = rayN234F;
          stabilize
          goto JOIN2357
        JOIN2357:  preds = [*STABILIZE2356,COND2354]
          tensor[3] op1_e3_l_52358#2 = VScale<3>(rayN234F,rayVec233D);
          tensor[3] pos235B#13 = VAdd<3>(rayOrig233B,op1_e3_l_52358);
          femData:RefCell _t235E#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block231D);
          real _t2360#1 = 0.1e-8;
          bool _t2362#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t235E,pos235B,_t2360);
          if _t2362 then goto ASSIGN2465 else goto ASSIGN389B
        ASSIGN2465:  preds = [COND2364]
          int ilit2366#1 = 84;
          int mulRes2367#84 = IMul(_t2313,ilit2366);
          int ilit2368#1 = 0;
          int addRes2369#1 = IAdd(mulRes2367,ilit2368);
          int idx236A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2369);
          int ilit236B#1 = 1;
          int addRes236C#1 = IAdd(mulRes2367,ilit236B);
          int idx236D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236C);
          int ilit236E#1 = 2;
          int addRes236F#1 = IAdd(mulRes2367,ilit236E);
          int idx2370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236F);
          int ilit2371#1 = 3;
          int addRes2372#1 = IAdd(mulRes2367,ilit2371);
          int idx2373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2372);
          int ilit2374#1 = 4;
          int addRes2375#1 = IAdd(mulRes2367,ilit2374);
          int idx2376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2375);
          int ilit2377#1 = 5;
          int addRes2378#1 = IAdd(mulRes2367,ilit2377);
          int idx2379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2378);
          int ilit237A#1 = 6;
          int addRes237B#1 = IAdd(mulRes2367,ilit237A);
          int idx237C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237B);
          int ilit237D#1 = 7;
          int addRes237E#1 = IAdd(mulRes2367,ilit237D);
          int idx237F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237E);
          int ilit2380#1 = 8;
          int addRes2381#1 = IAdd(mulRes2367,ilit2380);
          int idx2382#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2381);
          int ilit2383#1 = 9;
          int addRes2384#1 = IAdd(mulRes2367,ilit2383);
          int idx2385#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2384);
          int ilit2386#1 = 10;
          int addRes2387#1 = IAdd(mulRes2367,ilit2386);
          int idx2388#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2387);
          int ilit2389#1 = 11;
          int addRes238A#1 = IAdd(mulRes2367,ilit2389);
          int idx238B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238A);
          int ilit238C#1 = 12;
          int addRes238D#1 = IAdd(mulRes2367,ilit238C);
          int idx238E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238D);
          int ilit238F#1 = 13;
          int addRes2390#1 = IAdd(mulRes2367,ilit238F);
          int idx2391#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2390);
          int ilit2392#1 = 14;
          int addRes2393#1 = IAdd(mulRes2367,ilit2392);
          int idx2394#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2393);
          int ilit2395#1 = 15;
          int addRes2396#1 = IAdd(mulRes2367,ilit2395);
          int idx2397#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2396);
          int ilit2398#1 = 16;
          int addRes2399#1 = IAdd(mulRes2367,ilit2398);
          int idx239A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2399);
          int ilit239B#1 = 17;
          int addRes239C#1 = IAdd(mulRes2367,ilit239B);
          int idx239D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239C);
          int ilit239E#1 = 18;
          int addRes239F#1 = IAdd(mulRes2367,ilit239E);
          int idx23A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239F);
          int ilit23A1#1 = 19;
          int addRes23A2#1 = IAdd(mulRes2367,ilit23A1);
          int idx23A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A2);
          int ilit23A4#1 = 20;
          int addRes23A5#1 = IAdd(mulRes2367,ilit23A4);
          int idx23A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A5);
          int ilit23A7#1 = 21;
          int addRes23A8#1 = IAdd(mulRes2367,ilit23A7);
          int idx23A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A8);
          int ilit23AA#1 = 22;
          int addRes23AB#1 = IAdd(mulRes2367,ilit23AA);
          int idx23AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AB);
          int ilit23AD#1 = 23;
          int addRes23AE#1 = IAdd(mulRes2367,ilit23AD);
          int idx23AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AE);
          int ilit23B0#1 = 24;
          int addRes23B1#1 = IAdd(mulRes2367,ilit23B0);
          int idx23B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B1);
          int ilit23B3#1 = 25;
          int addRes23B4#1 = IAdd(mulRes2367,ilit23B3);
          int idx23B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B4);
          int ilit23B6#1 = 26;
          int addRes23B7#1 = IAdd(mulRes2367,ilit23B6);
          int idx23B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B7);
          int ilit23B9#1 = 27;
          int addRes23BA#1 = IAdd(mulRes2367,ilit23B9);
          int idx23BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BA);
          int ilit23BC#1 = 28;
          int addRes23BD#1 = IAdd(mulRes2367,ilit23BC);
          int idx23BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BD);
          int ilit23BF#1 = 29;
          int addRes23C0#1 = IAdd(mulRes2367,ilit23BF);
          int idx23C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C0);
          int ilit23C2#1 = 30;
          int addRes23C3#1 = IAdd(mulRes2367,ilit23C2);
          int idx23C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C3);
          int ilit23C5#1 = 31;
          int addRes23C6#1 = IAdd(mulRes2367,ilit23C5);
          int idx23C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C6);
          int ilit23C8#1 = 32;
          int addRes23C9#1 = IAdd(mulRes2367,ilit23C8);
          int idx23CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C9);
          int ilit23CB#1 = 33;
          int addRes23CC#1 = IAdd(mulRes2367,ilit23CB);
          int idx23CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CC);
          int ilit23CE#1 = 34;
          int addRes23CF#1 = IAdd(mulRes2367,ilit23CE);
          int idx23D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CF);
          int ilit23D1#1 = 35;
          int addRes23D2#1 = IAdd(mulRes2367,ilit23D1);
          int idx23D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D2);
          int ilit23D4#1 = 36;
          int addRes23D5#1 = IAdd(mulRes2367,ilit23D4);
          int idx23D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D5);
          int ilit23D7#1 = 37;
          int addRes23D8#1 = IAdd(mulRes2367,ilit23D7);
          int idx23D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D8);
          int ilit23DA#1 = 38;
          int addRes23DB#1 = IAdd(mulRes2367,ilit23DA);
          int idx23DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DB);
          int ilit23DD#1 = 39;
          int addRes23DE#1 = IAdd(mulRes2367,ilit23DD);
          int idx23DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DE);
          int ilit23E0#1 = 40;
          int addRes23E1#1 = IAdd(mulRes2367,ilit23E0);
          int idx23E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E1);
          int ilit23E3#1 = 41;
          int addRes23E4#1 = IAdd(mulRes2367,ilit23E3);
          int idx23E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E4);
          int ilit23E6#1 = 42;
          int addRes23E7#1 = IAdd(mulRes2367,ilit23E6);
          int idx23E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E7);
          int ilit23E9#1 = 43;
          int addRes23EA#1 = IAdd(mulRes2367,ilit23E9);
          int idx23EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23EA);
          int ilit23EC#1 = 44;
          int addRes23ED#1 = IAdd(mulRes2367,ilit23EC);
          int idx23EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23ED);
          int ilit23EF#1 = 45;
          int addRes23F0#1 = IAdd(mulRes2367,ilit23EF);
          int idx23F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F0);
          int ilit23F2#1 = 46;
          int addRes23F3#1 = IAdd(mulRes2367,ilit23F2);
          int idx23F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F3);
          int ilit23F5#1 = 47;
          int addRes23F6#1 = IAdd(mulRes2367,ilit23F5);
          int idx23F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F6);
          int ilit23F8#1 = 48;
          int addRes23F9#1 = IAdd(mulRes2367,ilit23F8);
          int idx23FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F9);
          int ilit23FB#1 = 49;
          int addRes23FC#1 = IAdd(mulRes2367,ilit23FB);
          int idx23FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FC);
          int ilit23FE#1 = 50;
          int addRes23FF#1 = IAdd(mulRes2367,ilit23FE);
          int idx2400#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FF);
          int ilit2401#1 = 51;
          int addRes2402#1 = IAdd(mulRes2367,ilit2401);
          int idx2403#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2402);
          int ilit2404#1 = 52;
          int addRes2405#1 = IAdd(mulRes2367,ilit2404);
          int idx2406#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2405);
          int ilit2407#1 = 53;
          int addRes2408#1 = IAdd(mulRes2367,ilit2407);
          int idx2409#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2408);
          int ilit240A#1 = 54;
          int addRes240B#1 = IAdd(mulRes2367,ilit240A);
          int idx240C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240B);
          int ilit240D#1 = 55;
          int addRes240E#1 = IAdd(mulRes2367,ilit240D);
          int idx240F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240E);
          int ilit2410#1 = 56;
          int addRes2411#1 = IAdd(mulRes2367,ilit2410);
          int idx2412#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2411);
          int ilit2413#1 = 57;
          int addRes2414#1 = IAdd(mulRes2367,ilit2413);
          int idx2415#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2414);
          int ilit2416#1 = 58;
          int addRes2417#1 = IAdd(mulRes2367,ilit2416);
          int idx2418#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2417);
          int ilit2419#1 = 59;
          int addRes241A#1 = IAdd(mulRes2367,ilit2419);
          int idx241B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241A);
          int ilit241C#1 = 60;
          int addRes241D#1 = IAdd(mulRes2367,ilit241C);
          int idx241E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241D);
          int ilit241F#1 = 61;
          int addRes2420#1 = IAdd(mulRes2367,ilit241F);
          int idx2421#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2420);
          int ilit2422#1 = 62;
          int addRes2423#1 = IAdd(mulRes2367,ilit2422);
          int idx2424#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2423);
          int ilit2425#1 = 63;
          int addRes2426#1 = IAdd(mulRes2367,ilit2425);
          int idx2427#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2426);
          int ilit2428#1 = 64;
          int addRes2429#1 = IAdd(mulRes2367,ilit2428);
          int idx242A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2429);
          int ilit242B#1 = 65;
          int addRes242C#1 = IAdd(mulRes2367,ilit242B);
          int idx242D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242C);
          int ilit242E#1 = 66;
          int addRes242F#1 = IAdd(mulRes2367,ilit242E);
          int idx2430#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242F);
          int ilit2431#1 = 67;
          int addRes2432#1 = IAdd(mulRes2367,ilit2431);
          int idx2433#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2432);
          int ilit2434#1 = 68;
          int addRes2435#1 = IAdd(mulRes2367,ilit2434);
          int idx2436#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2435);
          int ilit2437#1 = 69;
          int addRes2438#1 = IAdd(mulRes2367,ilit2437);
          int idx2439#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2438);
          int ilit243A#1 = 70;
          int addRes243B#1 = IAdd(mulRes2367,ilit243A);
          int idx243C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243B);
          int ilit243D#1 = 71;
          int addRes243E#1 = IAdd(mulRes2367,ilit243D);
          int idx243F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243E);
          int ilit2440#1 = 72;
          int addRes2441#1 = IAdd(mulRes2367,ilit2440);
          int idx2442#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2441);
          int ilit2443#1 = 73;
          int addRes2444#1 = IAdd(mulRes2367,ilit2443);
          int idx2445#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2444);
          int ilit2446#1 = 74;
          int addRes2447#1 = IAdd(mulRes2367,ilit2446);
          int idx2448#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2447);
          int ilit2449#1 = 75;
          int addRes244A#1 = IAdd(mulRes2367,ilit2449);
          int idx244B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244A);
          int ilit244C#1 = 76;
          int addRes244D#1 = IAdd(mulRes2367,ilit244C);
          int idx244E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244D);
          int ilit244F#1 = 77;
          int addRes2450#1 = IAdd(mulRes2367,ilit244F);
          int idx2451#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2450);
          int ilit2452#1 = 78;
          int addRes2453#1 = IAdd(mulRes2367,ilit2452);
          int idx2454#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2453);
          int ilit2455#1 = 79;
          int addRes2456#1 = IAdd(mulRes2367,ilit2455);
          int idx2457#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2456);
          int ilit2458#1 = 80;
          int addRes2459#1 = IAdd(mulRes2367,ilit2458);
          int idx245A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2459);
          int ilit245B#1 = 81;
          int addRes245C#1 = IAdd(mulRes2367,ilit245B);
          int idx245D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245C);
          int ilit245E#1 = 82;
          int addRes245F#1 = IAdd(mulRes2367,ilit245E);
          int idx2460#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245F);
          int ilit2461#1 = 83;
          int addRes2462#1 = IAdd(mulRes2367,ilit2461);
          int idx2463#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2462);
          int[84] seq2464#1 = <int[84]>{idx236A,idx236D,idx2370,idx2373,idx2376,idx2379,idx237C,idx237F,idx2382,idx2385,idx2388,idx238B,idx238E,idx2391,idx2394,idx2397,idx239A,idx239D,idx23A0,idx23A3,idx23A6,idx23A9,idx23AC,idx23AF,idx23B2,idx23B5,idx23B8,idx23BB,idx23BE,idx23C1,idx23C4,idx23C7,idx23CA,idx23CD,idx23D0,idx23D3,idx23D6,idx23D9,idx23DC,idx23DF,idx23E2,idx23E5,idx23E8,idx23EB,idx23EE,idx23F1,idx23F4,idx23F7,idx23FA,idx23FD,idx2400,idx2403,idx2406,idx2409,idx240C,idx240F,idx2412,idx2415,idx2418,idx241B,idx241E,idx2421,idx2424,idx2427,idx242A,idx242D,idx2430,idx2433,idx2436,idx2439,idx243C,idx243F,idx2442,idx2445,idx2448,idx244B,idx244E,idx2451,idx2454,idx2457,idx245A,idx245D,idx2460,idx2463};
          int[84] femIndicies2365#84 = seq2464;
          int ilit2566#85 = 1;
          int ilit2567#1 = 0;
          int idx2568#1 = Subscript<int>(femIndicies2365,ilit2567);
          int mulRes2569#1 = IMul(ilit2566,idx2568);
          int idx256A#1 = Subscript<int>(femIndicies2365,ilit2566);
          int mulRes256B#1 = IMul(ilit2566,idx256A);
          int ilit256C#1 = 2;
          int idx256D#1 = Subscript<int>(femIndicies2365,ilit256C);
          int mulRes256E#1 = IMul(ilit2566,idx256D);
          int ilit256F#1 = 3;
          int idx2570#1 = Subscript<int>(femIndicies2365,ilit256F);
          int mulRes2571#1 = IMul(ilit2566,idx2570);
          int ilit2572#1 = 4;
          int idx2573#1 = Subscript<int>(femIndicies2365,ilit2572);
          int mulRes2574#1 = IMul(ilit2566,idx2573);
          int ilit2575#1 = 5;
          int idx2576#1 = Subscript<int>(femIndicies2365,ilit2575);
          int mulRes2577#1 = IMul(ilit2566,idx2576);
          int ilit2578#1 = 6;
          int idx2579#1 = Subscript<int>(femIndicies2365,ilit2578);
          int mulRes257A#1 = IMul(ilit2566,idx2579);
          int ilit257B#1 = 7;
          int idx257C#1 = Subscript<int>(femIndicies2365,ilit257B);
          int mulRes257D#1 = IMul(ilit2566,idx257C);
          int ilit257E#1 = 8;
          int idx257F#1 = Subscript<int>(femIndicies2365,ilit257E);
          int mulRes2580#1 = IMul(ilit2566,idx257F);
          int ilit2581#1 = 9;
          int idx2582#1 = Subscript<int>(femIndicies2365,ilit2581);
          int mulRes2583#1 = IMul(ilit2566,idx2582);
          int ilit2584#1 = 10;
          int idx2585#1 = Subscript<int>(femIndicies2365,ilit2584);
          int mulRes2586#1 = IMul(ilit2566,idx2585);
          int ilit2587#1 = 11;
          int idx2588#1 = Subscript<int>(femIndicies2365,ilit2587);
          int mulRes2589#1 = IMul(ilit2566,idx2588);
          int ilit258A#1 = 12;
          int idx258B#1 = Subscript<int>(femIndicies2365,ilit258A);
          int mulRes258C#1 = IMul(ilit2566,idx258B);
          int ilit258D#1 = 13;
          int idx258E#1 = Subscript<int>(femIndicies2365,ilit258D);
          int mulRes258F#1 = IMul(ilit2566,idx258E);
          int ilit2590#1 = 14;
          int idx2591#1 = Subscript<int>(femIndicies2365,ilit2590);
          int mulRes2592#1 = IMul(ilit2566,idx2591);
          int ilit2593#1 = 15;
          int idx2594#1 = Subscript<int>(femIndicies2365,ilit2593);
          int mulRes2595#1 = IMul(ilit2566,idx2594);
          int ilit2596#1 = 16;
          int idx2597#1 = Subscript<int>(femIndicies2365,ilit2596);
          int mulRes2598#1 = IMul(ilit2566,idx2597);
          int ilit2599#1 = 17;
          int idx259A#1 = Subscript<int>(femIndicies2365,ilit2599);
          int mulRes259B#1 = IMul(ilit2566,idx259A);
          int ilit259C#1 = 18;
          int idx259D#1 = Subscript<int>(femIndicies2365,ilit259C);
          int mulRes259E#1 = IMul(ilit2566,idx259D);
          int ilit259F#1 = 19;
          int idx25A0#1 = Subscript<int>(femIndicies2365,ilit259F);
          int mulRes25A1#1 = IMul(ilit2566,idx25A0);
          int ilit25A2#1 = 20;
          int idx25A3#1 = Subscript<int>(femIndicies2365,ilit25A2);
          int mulRes25A4#1 = IMul(ilit2566,idx25A3);
          int ilit25A5#1 = 21;
          int idx25A6#1 = Subscript<int>(femIndicies2365,ilit25A5);
          int mulRes25A7#1 = IMul(ilit2566,idx25A6);
          int ilit25A8#1 = 22;
          int idx25A9#1 = Subscript<int>(femIndicies2365,ilit25A8);
          int mulRes25AA#1 = IMul(ilit2566,idx25A9);
          int ilit25AB#1 = 23;
          int idx25AC#1 = Subscript<int>(femIndicies2365,ilit25AB);
          int mulRes25AD#1 = IMul(ilit2566,idx25AC);
          int ilit25AE#1 = 24;
          int idx25AF#1 = Subscript<int>(femIndicies2365,ilit25AE);
          int mulRes25B0#1 = IMul(ilit2566,idx25AF);
          int ilit25B1#1 = 25;
          int idx25B2#1 = Subscript<int>(femIndicies2365,ilit25B1);
          int mulRes25B3#1 = IMul(ilit2566,idx25B2);
          int ilit25B4#1 = 26;
          int idx25B5#1 = Subscript<int>(femIndicies2365,ilit25B4);
          int mulRes25B6#1 = IMul(ilit2566,idx25B5);
          int ilit25B7#1 = 27;
          int idx25B8#1 = Subscript<int>(femIndicies2365,ilit25B7);
          int mulRes25B9#1 = IMul(ilit2566,idx25B8);
          int ilit25BA#1 = 28;
          int idx25BB#1 = Subscript<int>(femIndicies2365,ilit25BA);
          int mulRes25BC#1 = IMul(ilit2566,idx25BB);
          int ilit25BD#1 = 29;
          int idx25BE#1 = Subscript<int>(femIndicies2365,ilit25BD);
          int mulRes25BF#1 = IMul(ilit2566,idx25BE);
          int ilit25C0#1 = 30;
          int idx25C1#1 = Subscript<int>(femIndicies2365,ilit25C0);
          int mulRes25C2#1 = IMul(ilit2566,idx25C1);
          int ilit25C3#1 = 31;
          int idx25C4#1 = Subscript<int>(femIndicies2365,ilit25C3);
          int mulRes25C5#1 = IMul(ilit2566,idx25C4);
          int ilit25C6#1 = 32;
          int idx25C7#1 = Subscript<int>(femIndicies2365,ilit25C6);
          int mulRes25C8#1 = IMul(ilit2566,idx25C7);
          int ilit25C9#1 = 33;
          int idx25CA#1 = Subscript<int>(femIndicies2365,ilit25C9);
          int mulRes25CB#1 = IMul(ilit2566,idx25CA);
          int ilit25CC#1 = 34;
          int idx25CD#1 = Subscript<int>(femIndicies2365,ilit25CC);
          int mulRes25CE#1 = IMul(ilit2566,idx25CD);
          int ilit25CF#1 = 35;
          int idx25D0#1 = Subscript<int>(femIndicies2365,ilit25CF);
          int mulRes25D1#1 = IMul(ilit2566,idx25D0);
          int ilit25D2#1 = 36;
          int idx25D3#1 = Subscript<int>(femIndicies2365,ilit25D2);
          int mulRes25D4#1 = IMul(ilit2566,idx25D3);
          int ilit25D5#1 = 37;
          int idx25D6#1 = Subscript<int>(femIndicies2365,ilit25D5);
          int mulRes25D7#1 = IMul(ilit2566,idx25D6);
          int ilit25D8#1 = 38;
          int idx25D9#1 = Subscript<int>(femIndicies2365,ilit25D8);
          int mulRes25DA#1 = IMul(ilit2566,idx25D9);
          int ilit25DB#1 = 39;
          int idx25DC#1 = Subscript<int>(femIndicies2365,ilit25DB);
          int mulRes25DD#1 = IMul(ilit2566,idx25DC);
          int ilit25DE#1 = 40;
          int idx25DF#1 = Subscript<int>(femIndicies2365,ilit25DE);
          int mulRes25E0#1 = IMul(ilit2566,idx25DF);
          int ilit25E1#1 = 41;
          int idx25E2#1 = Subscript<int>(femIndicies2365,ilit25E1);
          int mulRes25E3#1 = IMul(ilit2566,idx25E2);
          int ilit25E4#1 = 42;
          int idx25E5#1 = Subscript<int>(femIndicies2365,ilit25E4);
          int mulRes25E6#1 = IMul(ilit2566,idx25E5);
          int ilit25E7#1 = 43;
          int idx25E8#1 = Subscript<int>(femIndicies2365,ilit25E7);
          int mulRes25E9#1 = IMul(ilit2566,idx25E8);
          int ilit25EA#1 = 44;
          int idx25EB#1 = Subscript<int>(femIndicies2365,ilit25EA);
          int mulRes25EC#1 = IMul(ilit2566,idx25EB);
          int ilit25ED#1 = 45;
          int idx25EE#1 = Subscript<int>(femIndicies2365,ilit25ED);
          int mulRes25EF#1 = IMul(ilit2566,idx25EE);
          int ilit25F0#1 = 46;
          int idx25F1#1 = Subscript<int>(femIndicies2365,ilit25F0);
          int mulRes25F2#1 = IMul(ilit2566,idx25F1);
          int ilit25F3#1 = 47;
          int idx25F4#1 = Subscript<int>(femIndicies2365,ilit25F3);
          int mulRes25F5#1 = IMul(ilit2566,idx25F4);
          int ilit25F6#1 = 48;
          int idx25F7#1 = Subscript<int>(femIndicies2365,ilit25F6);
          int mulRes25F8#1 = IMul(ilit2566,idx25F7);
          int ilit25F9#1 = 49;
          int idx25FA#1 = Subscript<int>(femIndicies2365,ilit25F9);
          int mulRes25FB#1 = IMul(ilit2566,idx25FA);
          int ilit25FC#1 = 50;
          int idx25FD#1 = Subscript<int>(femIndicies2365,ilit25FC);
          int mulRes25FE#1 = IMul(ilit2566,idx25FD);
          int ilit25FF#1 = 51;
          int idx2600#1 = Subscript<int>(femIndicies2365,ilit25FF);
          int mulRes2601#1 = IMul(ilit2566,idx2600);
          int ilit2602#1 = 52;
          int idx2603#1 = Subscript<int>(femIndicies2365,ilit2602);
          int mulRes2604#1 = IMul(ilit2566,idx2603);
          int ilit2605#1 = 53;
          int idx2606#1 = Subscript<int>(femIndicies2365,ilit2605);
          int mulRes2607#1 = IMul(ilit2566,idx2606);
          int ilit2608#1 = 54;
          int idx2609#1 = Subscript<int>(femIndicies2365,ilit2608);
          int mulRes260A#1 = IMul(ilit2566,idx2609);
          int ilit260B#1 = 55;
          int idx260C#1 = Subscript<int>(femIndicies2365,ilit260B);
          int mulRes260D#1 = IMul(ilit2566,idx260C);
          int ilit260E#1 = 56;
          int idx260F#1 = Subscript<int>(femIndicies2365,ilit260E);
          int mulRes2610#1 = IMul(ilit2566,idx260F);
          int ilit2611#1 = 57;
          int idx2612#1 = Subscript<int>(femIndicies2365,ilit2611);
          int mulRes2613#1 = IMul(ilit2566,idx2612);
          int ilit2614#1 = 58;
          int idx2615#1 = Subscript<int>(femIndicies2365,ilit2614);
          int mulRes2616#1 = IMul(ilit2566,idx2615);
          int ilit2617#1 = 59;
          int idx2618#1 = Subscript<int>(femIndicies2365,ilit2617);
          int mulRes2619#1 = IMul(ilit2566,idx2618);
          int ilit261A#1 = 60;
          int idx261B#1 = Subscript<int>(femIndicies2365,ilit261A);
          int mulRes261C#1 = IMul(ilit2566,idx261B);
          int ilit261D#1 = 61;
          int idx261E#1 = Subscript<int>(femIndicies2365,ilit261D);
          int mulRes261F#1 = IMul(ilit2566,idx261E);
          int ilit2620#1 = 62;
          int idx2621#1 = Subscript<int>(femIndicies2365,ilit2620);
          int mulRes2622#1 = IMul(ilit2566,idx2621);
          int ilit2623#1 = 63;
          int idx2624#1 = Subscript<int>(femIndicies2365,ilit2623);
          int mulRes2625#1 = IMul(ilit2566,idx2624);
          int ilit2626#1 = 64;
          int idx2627#1 = Subscript<int>(femIndicies2365,ilit2626);
          int mulRes2628#1 = IMul(ilit2566,idx2627);
          int ilit2629#1 = 65;
          int idx262A#1 = Subscript<int>(femIndicies2365,ilit2629);
          int mulRes262B#1 = IMul(ilit2566,idx262A);
          int ilit262C#1 = 66;
          int idx262D#1 = Subscript<int>(femIndicies2365,ilit262C);
          int mulRes262E#1 = IMul(ilit2566,idx262D);
          int ilit262F#1 = 67;
          int idx2630#1 = Subscript<int>(femIndicies2365,ilit262F);
          int mulRes2631#1 = IMul(ilit2566,idx2630);
          int ilit2632#1 = 68;
          int idx2633#1 = Subscript<int>(femIndicies2365,ilit2632);
          int mulRes2634#1 = IMul(ilit2566,idx2633);
          int ilit2635#1 = 69;
          int idx2636#1 = Subscript<int>(femIndicies2365,ilit2635);
          int mulRes2637#1 = IMul(ilit2566,idx2636);
          int ilit2638#1 = 70;
          int idx2639#1 = Subscript<int>(femIndicies2365,ilit2638);
          int mulRes263A#1 = IMul(ilit2566,idx2639);
          int ilit263B#1 = 71;
          int idx263C#1 = Subscript<int>(femIndicies2365,ilit263B);
          int mulRes263D#1 = IMul(ilit2566,idx263C);
          int ilit263E#1 = 72;
          int idx263F#1 = Subscript<int>(femIndicies2365,ilit263E);
          int mulRes2640#1 = IMul(ilit2566,idx263F);
          int ilit2641#1 = 73;
          int idx2642#1 = Subscript<int>(femIndicies2365,ilit2641);
          int mulRes2643#1 = IMul(ilit2566,idx2642);
          int ilit2644#1 = 74;
          int idx2645#1 = Subscript<int>(femIndicies2365,ilit2644);
          int mulRes2646#1 = IMul(ilit2566,idx2645);
          int ilit2647#1 = 75;
          int idx2648#1 = Subscript<int>(femIndicies2365,ilit2647);
          int mulRes2649#1 = IMul(ilit2566,idx2648);
          int ilit264A#1 = 76;
          int idx264B#1 = Subscript<int>(femIndicies2365,ilit264A);
          int mulRes264C#1 = IMul(ilit2566,idx264B);
          int ilit264D#1 = 77;
          int idx264E#1 = Subscript<int>(femIndicies2365,ilit264D);
          int mulRes264F#1 = IMul(ilit2566,idx264E);
          int ilit2650#1 = 78;
          int idx2651#1 = Subscript<int>(femIndicies2365,ilit2650);
          int mulRes2652#1 = IMul(ilit2566,idx2651);
          int ilit2653#1 = 79;
          int idx2654#1 = Subscript<int>(femIndicies2365,ilit2653);
          int mulRes2655#1 = IMul(ilit2566,idx2654);
          int ilit2656#1 = 80;
          int idx2657#1 = Subscript<int>(femIndicies2365,ilit2656);
          int mulRes2658#1 = IMul(ilit2566,idx2657);
          int ilit2659#1 = 81;
          int idx265A#1 = Subscript<int>(femIndicies2365,ilit2659);
          int mulRes265B#1 = IMul(ilit2566,idx265A);
          int ilit265C#1 = 82;
          int idx265D#1 = Subscript<int>(femIndicies2365,ilit265C);
          int mulRes265E#1 = IMul(ilit2566,idx265D);
          int ilit265F#1 = 83;
          int idx2660#1 = Subscript<int>(femIndicies2365,ilit265F);
          int mulRes2661#1 = IMul(ilit2566,idx2660);
          real dof2662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2569);
          real dof2663#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256B);
          real dof2664#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256E);
          real dof2665#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2571);
          real dof2666#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2574);
          real dof2667#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2577);
          real dof2668#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257A);
          real dof2669#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257D);
          real dof266A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2580);
          real dof266B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2583);
          real dof266C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2586);
          real dof266D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2589);
          real dof266E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258C);
          real dof266F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258F);
          real dof2670#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2592);
          real dof2671#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2595);
          real dof2672#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2598);
          real dof2673#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259B);
          real dof2674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259E);
          real dof2675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A1);
          real dof2676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A4);
          real dof2677#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A7);
          real dof2678#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AA);
          real dof2679#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AD);
          real dof267A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B0);
          real dof267B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B3);
          real dof267C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B6);
          real dof267D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B9);
          real dof267E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BC);
          real dof267F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BF);
          real dof2680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C2);
          real dof2681#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C5);
          real dof2682#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C8);
          real dof2683#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CB);
          real dof2684#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CE);
          real dof2685#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D1);
          real dof2686#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D4);
          real dof2687#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D7);
          real dof2688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DA);
          real dof2689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DD);
          real dof268A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E0);
          real dof268B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E3);
          real dof268C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E6);
          real dof268D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E9);
          real dof268E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EC);
          real dof268F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EF);
          real dof2690#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F2);
          real dof2691#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F5);
          real dof2692#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F8);
          real dof2693#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FB);
          real dof2694#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FE);
          real dof2695#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2601);
          real dof2696#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2604);
          real dof2697#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2607);
          real dof2698#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260A);
          real dof2699#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260D);
          real dof269A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2610);
          real dof269B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2613);
          real dof269C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2616);
          real dof269D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2619);
          real dof269E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261C);
          real dof269F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261F);
          real dof26A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2622);
          real dof26A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2625);
          real dof26A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2628);
          real dof26A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262B);
          real dof26A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262E);
          real dof26A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2631);
          real dof26A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2634);
          real dof26A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2637);
          real dof26A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263A);
          real dof26A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263D);
          real dof26AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2640);
          real dof26AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2643);
          real dof26AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2646);
          real dof26AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2649);
          real dof26AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264C);
          real dof26AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264F);
          real dof26B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2652);
          real dof26B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2655);
          real dof26B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2658);
          real dof26B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265B);
          real dof26B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265E);
          real dof26B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2661);
          tensor[84] dofs26B6#1 = <tensor[84]>[dof2662,dof2663,dof2664,dof2665,dof2666,dof2667,dof2668,dof2669,dof266A,dof266B,dof266C,dof266D,dof266E,dof266F,dof2670,dof2671,dof2672,dof2673,dof2674,dof2675,dof2676,dof2677,dof2678,dof2679,dof267A,dof267B,dof267C,dof267D,dof267E,dof267F,dof2680,dof2681,dof2682,dof2683,dof2684,dof2685,dof2686,dof2687,dof2688,dof2689,dof268A,dof268B,dof268C,dof268D,dof268E,dof268F,dof2690,dof2691,dof2692,dof2693,dof2694,dof2695,dof2696,dof2697,dof2698,dof2699,dof269A,dof269B,dof269C,dof269D,dof269E,dof269F,dof26A0,dof26A1,dof26A2,dof26A3,dof26A4,dof26A5,dof26A6,dof26A7,dof26A8,dof26A9,dof26AA,dof26AB,dof26AC,dof26AD,dof26AE,dof26AF,dof26B0,dof26B1,dof26B2,dof26B3,dof26B4,dof26B5];
          tensor[84] femDofs2565#12 = dofs26B6;
          real varAcc280A#4 = VIndex<3,0>(pos235B);
          real varAcc280B#4 = VIndex<3,1>(pos235B);
          real varAcc280C#4 = VIndex<3,2>(pos235B);
          real basisEval280D#294 = 0.e0;
          real coeff280E#31 = 0.2e1;
          real one280F#38 = 0.1e1;
          real prod2810#5 = RMul(one280F,one280F);
          real prod2811#2 = RMul(one280F,prod2810);
          real basisEval2812#3 = RMul(coeff280E,prod2811);
          real iden2813#5 = varAcc280C;
          real prod2814#4 = RMul(one280F,iden2813);
          real prod2815#3 = RMul(one280F,prod2814);
          real basisEval2816#4 = RMul(coeff280E,prod2815);
          real iden2817#5 = varAcc280B;
          real prod2818#4 = RMul(iden2817,one280F);
          real prod2819#3 = RMul(one280F,prod2818);
          real basisEval281A#4 = RMul(coeff280E,prod2819);
          real coeff281B#22 = 0.6e1;
          real iden281C#11 = varAcc280A;
          real prod281D#3 = RMul(iden281C,prod2810);
          real basisEval281E#1 = RMul(coeff281B,prod281D);
          real prod2281F#4 = RMul(iden2813,varAcc280C);
          real prod2820#3 = RMul(one280F,prod2281F);
          real prod2821#4 = RMul(one280F,prod2820);
          real basisEval2822#2 = RMul(coeff280E,prod2821);
          real prod2823#3 = RMul(iden2817,iden2813);
          real prod2824#3 = RMul(one280F,prod2823);
          real basisEval2825#3 = RMul(coeff280E,prod2824);
          real prod22826#4 = RMul(iden2817,varAcc280B);
          real prod2827#3 = RMul(prod22826,one280F);
          real prod2828#4 = RMul(one280F,prod2827);
          real basisEval2829#2 = RMul(coeff280E,prod2828);
          real prod282A#3 = RMul(iden281C,prod2814);
          real basisEval282B#2 = RMul(coeff281B,prod282A);
          real prod282C#3 = RMul(iden281C,prod2818);
          real basisEval282D#2 = RMul(coeff281B,prod282C);
          real coeff282E#15 = 0.12e2;
          real prod2282F#7 = RMul(iden281C,varAcc280A);
          real prod2830#4 = RMul(prod2282F,prod2810);
          real basisEval2831#1 = RMul(coeff282E,prod2830);
          real prod32832#3 = RMul(prod2281F,varAcc280C);
          real prod2833#2 = RMul(one280F,prod32832);
          real prod2834#4 = RMul(one280F,prod2833);
          real basisEval2835#2 = RMul(coeff280E,prod2834);
          real prod2836#2 = RMul(iden2817,prod2281F);
          real prod2837#4 = RMul(one280F,prod2836);
          real basisEval2838#2 = RMul(coeff280E,prod2837);
          real prod2839#2 = RMul(prod22826,iden2813);
          real prod283A#4 = RMul(one280F,prod2839);
          real basisEval283B#2 = RMul(coeff280E,prod283A);
          real prod3283C#3 = RMul(prod22826,varAcc280B);
          real prod283D#2 = RMul(prod3283C,one280F);
          real prod283E#4 = RMul(one280F,prod283D);
          real basisEval283F#2 = RMul(coeff280E,prod283E);
          real prod2840#4 = RMul(iden281C,prod2820);
          real basisEval2841#2 = RMul(coeff281B,prod2840);
          real prod2842#2 = RMul(iden281C,prod2823);
          real basisEval2843#3 = RMul(coeff281B,prod2842);
          real prod2844#4 = RMul(iden281C,prod2827);
          real basisEval2845#2 = RMul(coeff281B,prod2844);
          real prod2846#4 = RMul(prod2282F,prod2814);
          real basisEval2847#1 = RMul(coeff282E,prod2846);
          real prod2848#4 = RMul(prod2282F,prod2818);
          real basisEval2849#1 = RMul(coeff282E,prod2848);
          real coeff284A#9 = 0.20e2;
          real prod3284B#4 = RMul(prod2282F,varAcc280A);
          real prod284C#4 = RMul(prod3284B,prod2810);
          real basisEval284D#1 = RMul(coeff284A,prod284C);
          real prod4284E#1 = RMul(prod32832,varAcc280C);
          real prod284F#1 = RMul(one280F,prod4284E);
          real prod2850#4 = RMul(one280F,prod284F);
          real basisEval2851#2 = RMul(coeff280E,prod2850);
          real prod2852#1 = RMul(iden2817,prod32832);
          real prod2853#5 = RMul(one280F,prod2852);
          real basisEval2854#2 = RMul(coeff280E,prod2853);
          real prod2855#1 = RMul(prod22826,prod2281F);
          real prod2856#4 = RMul(one280F,prod2855);
          real basisEval2857#1 = RMul(coeff280E,prod2856);
          real prod2858#1 = RMul(prod3283C,iden2813);
          real prod2859#5 = RMul(one280F,prod2858);
          real basisEval285A#2 = RMul(coeff280E,prod2859);
          real prod4285B#1 = RMul(prod3283C,varAcc280B);
          real prod285C#1 = RMul(prod4285B,one280F);
          real prod285D#4 = RMul(one280F,prod285C);
          real basisEval285E#2 = RMul(coeff280E,prod285D);
          real prod285F#5 = RMul(iden281C,prod2833);
          real basisEval2860#1 = RMul(coeff281B,prod285F);
          real prod2861#3 = RMul(iden281C,prod2836);
          real basisEval2862#4 = RMul(coeff281B,prod2861);
          real prod2863#3 = RMul(iden281C,prod2839);
          real basisEval2864#4 = RMul(coeff281B,prod2863);
          real prod2865#5 = RMul(iden281C,prod283D);
          real basisEval2866#1 = RMul(coeff281B,prod2865);
          real prod2867#4 = RMul(prod2282F,prod2820);
          real basisEval2868#2 = RMul(coeff282E,prod2867);
          real prod2869#3 = RMul(prod2282F,prod2823);
          real basisEval286A#1 = RMul(coeff282E,prod2869);
          real prod286B#4 = RMul(prod2282F,prod2827);
          real basisEval286C#2 = RMul(coeff282E,prod286B);
          real prod286D#5 = RMul(prod3284B,prod2814);
          real basisEval286E#1 = RMul(coeff284A,prod286D);
          real prod286F#5 = RMul(prod3284B,prod2818);
          real basisEval2870#1 = RMul(coeff284A,prod286F);
          real coeff2871#3 = 0.30e2;
          real prod42872#1 = RMul(prod3284B,varAcc280A);
          real prod2873#4 = RMul(prod42872,prod2810);
          real basisEval2874#1 = RMul(coeff2871,prod2873);
          real basisEval2875#3 = RMul(one280F,prod2811);
          real basisEval2876#1 = RMul(one280F,prod2815);
          real basisEval2877#4 = RMul(coeff280E,prod281D);
          real basisEval2878#1 = RMul(one280F,prod2821);
          real coeff2879#12 = 0.3e1;
          real basisEval287A#2 = RMul(coeff2879,prod2828);
          real basisEval287B#3 = RMul(coeff280E,prod282A);
          real coeff287C#16 = 0.4e1;
          real basisEval287D#1 = RMul(coeff287C,prod282C);
          real basisEval287E#2 = RMul(coeff2879,prod2830);
          real basisEval287F#1 = RMul(one280F,prod2834);
          real basisEval2880#1 = RMul(coeff2879,prod283A);
          real basisEval2881#2 = RMul(coeff287C,prod283E);
          real basisEval2882#2 = RMul(coeff280E,prod2840);
          real basisEval2883#3 = RMul(coeff287C,prod2842);
          real basisEval2884#1 = RMul(coeff2879,prod2846);
          real basisEval2885#2 = RMul(coeff281B,prod2848);
          real basisEval2886#2 = RMul(coeff287C,prod284C);
          real basisEval2887#1 = RMul(one280F,prod2850);
          real basisEval2888#2 = RMul(coeff2879,prod2856);
          real basisEval2889#1 = RMul(coeff287C,prod2859);
          real coeff288A#3 = 0.5e1;
          real basisEval288B#2 = RMul(coeff288A,prod285D);
          real basisEval288C#2 = RMul(coeff280E,prod285F);
          real basisEval288D#1 = RMul(coeff287C,prod2861);
          real coeff288E#6 = 0.8e1;
          real basisEval288F#1 = RMul(coeff288E,prod2865);
          real basisEval2890#2 = RMul(coeff2879,prod2867);
          real basisEval2891#4 = RMul(coeff281B,prod2869);
          real coeff2892#3 = 0.9e1;
          real basisEval2893#1 = RMul(coeff2892,prod286B);
          real basisEval2894#1 = RMul(coeff287C,prod286D);
          real basisEval2895#1 = RMul(coeff288E,prod286F);
          real basisEval2896#2 = RMul(coeff288A,prod2873);
          real basisEval2897#1 = RMul(one280F,prod2819);
          real basisEval2898#2 = RMul(coeff2879,prod2821);
          real basisEval2899#1 = RMul(one280F,prod2828);
          real basisEval289A#1 = RMul(coeff287C,prod282A);
          real basisEval289B#3 = RMul(coeff280E,prod282C);
          real basisEval289C#2 = RMul(coeff287C,prod2834);
          real basisEval289D#1 = RMul(coeff2879,prod2837);
          real basisEval289E#1 = RMul(one280F,prod283E);
          real basisEval289F#2 = RMul(coeff280E,prod2844);
          real basisEval28A0#2 = RMul(coeff281B,prod2846);
          real basisEval28A1#1 = RMul(coeff2879,prod2848);
          real basisEval28A2#2 = RMul(coeff288A,prod2850);
          real basisEval28A3#1 = RMul(coeff287C,prod2853);
          real basisEval28A4#1 = RMul(one280F,prod285D);
          real basisEval28A5#1 = RMul(coeff288E,prod285F);
          real basisEval28A6#1 = RMul(coeff287C,prod2863);
          real basisEval28A7#2 = RMul(coeff280E,prod2865);
          real basisEval28A8#1 = RMul(coeff2892,prod2867);
          real basisEval28A9#2 = RMul(coeff2879,prod286B);
          real basisEval28AA#1 = RMul(coeff288E,prod286D);
          real basisEval28AB#1 = RMul(coeff287C,prod286F);
          real basisEval28AC#1 = RMul(coeff281B,prod2819);
          real basisEval28AD#2 = RMul(coeff281B,prod2824);
          real basisEval28AE#1 = RMul(coeff282E,prod2828);
          real basisEval28AF#2 = RMul(coeff280E,prod2830);
          real basisEval28B0#2 = RMul(coeff281B,prod2837);
          real basisEval28B1#1 = RMul(coeff282E,prod283A);
          real basisEval28B2#1 = RMul(coeff284A,prod283E);
          real basisEval28B3#1 = RMul(coeff282E,prod2844);
          real basisEval28B4#2 = RMul(coeff280E,prod2846);
          real basisEval28B5#2 = RMul(coeff280E,prod284C);
          real basisEval28B6#1 = RMul(coeff281B,prod2853);
          real basisEval28B7#2 = RMul(coeff282E,prod2856);
          real basisEval28B8#1 = RMul(coeff284A,prod2859);
          real basisEval28B9#1 = RMul(coeff2871,prod285D);
          real basisEval28BA#1 = RMul(coeff282E,prod2863);
          real basisEval28BB#1 = RMul(coeff284A,prod2865);
          real basisEval28BC#1 = RMul(coeff280E,prod2867);
          real basisEval28BD#2 = RMul(coeff280E,prod286D);
          real basisEval28BE#1 = RMul(coeff281B,prod286F);
          real basisEval28BF#2 = RMul(coeff280E,prod2873);
          real basisEval28C0#1 = RMul(one280F,prod281D);
          real basisEval28C1#1 = RMul(coeff287C,prod2824);
          real basisEval28C2#1 = RMul(one280F,prod2830);
          real basisEval28C3#2 = RMul(coeff281B,prod283A);
          real basisEval28C4#1 = RMul(coeff2879,prod2840);
          real basisEval28C5#1 = RMul(coeff2879,prod2844);
          real basisEval28C6#2 = RMul(coeff280E,prod2848);
          real basisEval28C7#1 = RMul(one280F,prod284C);
          real basisEval28C8#1 = RMul(coeff288E,prod2853);
          real basisEval28C9#1 = RMul(coeff2892,prod2856);
          real basisEval28CA#1 = RMul(coeff288E,prod2859);
          real basisEval28CB#1 = RMul(coeff287C,prod285F);
          real basisEval28CC#1 = RMul(coeff287C,prod2865);
          real basisEval28CD#1 = RMul(coeff287C,prod2869);
          real basisEval28CE#2 = RMul(coeff280E,prod286F);
          real basisEval28CF#1 = RMul(one280F,prod2873);
          real basisEval28D0#1 = RMul(coeff281B,prod2815);
          real basisEval28D1#1 = RMul(coeff282E,prod2821);
          real basisEval28D2#1 = RMul(coeff284A,prod2834);
          real basisEval28D3#1 = RMul(coeff282E,prod2837);
          real basisEval28D4#1 = RMul(coeff282E,prod2840);
          real basisEval28D5#1 = RMul(coeff2871,prod2850);
          real basisEval28D6#1 = RMul(coeff284A,prod2853);
          real basisEval28D7#1 = RMul(coeff281B,prod2859);
          real basisEval28D8#1 = RMul(coeff284A,prod285F);
          real basisEval28D9#1 = RMul(coeff282E,prod2861);
          real basisEval28DA#1 = RMul(coeff280E,prod286B);
          real basisEval28DB#1 = RMul(coeff281B,prod286D);
          tensor[84] intermediateCons28DC#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval281E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval2825,basisEval2829,basisEval282B,basisEval282D,basisEval2831,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval2838,basisEval283B,basisEval283F,basisEval2841,basisEval2843,basisEval2845,basisEval2847,basisEval2849,basisEval284D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval2854,basisEval2857,basisEval285A,basisEval285E,basisEval2860,basisEval2862,basisEval2864,basisEval2866,basisEval2868,basisEval286A,basisEval286C,basisEval286E,basisEval2870,basisEval2874];
          tensor[84] intermediateCons28DD#2 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2876,basisEval281A,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2878,basisEval2825,basisEval287A,basisEval280D,basisEval287B,basisEval287D,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval287F,basisEval2838,basisEval2880,basisEval2881,basisEval280D,basisEval2882,basisEval2883,basisEval2845,basisEval280D,basisEval2884,basisEval2885,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2887,basisEval2854,basisEval2888,basisEval2889,basisEval288B,basisEval280D,basisEval288C,basisEval288D,basisEval2864,basisEval288F,basisEval280D,basisEval2890,basisEval2891,basisEval2893,basisEval280D,basisEval2894,basisEval2895,basisEval280D,basisEval2896,basisEval280D];
          tensor[84] intermediateCons28DE#2 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval2897,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval2825,basisEval2899,basisEval280D,basisEval289A,basisEval289B,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval289D,basisEval283B,basisEval289E,basisEval280D,basisEval2841,basisEval2883,basisEval289F,basisEval280D,basisEval28A0,basisEval28A1,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28A3,basisEval2888,basisEval285A,basisEval28A4,basisEval280D,basisEval28A5,basisEval2862,basisEval28A6,basisEval28A7,basisEval280D,basisEval28A8,basisEval2891,basisEval28A9,basisEval280D,basisEval28AA,basisEval28AB,basisEval280D,basisEval2896,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28DF#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval28AC,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval28AD,basisEval28AE,basisEval280D,basisEval280D,basisEval287B,basisEval282D,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval28B0,basisEval28B1,basisEval28B2,basisEval280D,basisEval280D,basisEval2882,basisEval2843,basisEval28B3,basisEval280D,basisEval280D,basisEval28B4,basisEval2885,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval28B6,basisEval28B7,basisEval28B8,basisEval28B9,basisEval280D,basisEval280D,basisEval288C,basisEval2862,basisEval28BA,basisEval28BB,basisEval280D,basisEval280D,basisEval28BC,basisEval2891,basisEval286C,basisEval280D,basisEval280D,basisEval28BD,basisEval28BE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E0#2 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval280D,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval28C1,basisEval287A,basisEval280D,basisEval280D,basisEval287B,basisEval289B,basisEval280D,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval28B0,basisEval28C3,basisEval2881,basisEval280D,basisEval280D,basisEval28C4,basisEval2883,basisEval28C5,basisEval280D,basisEval280D,basisEval28B4,basisEval28C6,basisEval280D,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28C8,basisEval28C9,basisEval28CA,basisEval288B,basisEval280D,basisEval280D,basisEval28CB,basisEval2862,basisEval2864,basisEval28CC,basisEval280D,basisEval280D,basisEval2890,basisEval28CD,basisEval28A9,basisEval280D,basisEval280D,basisEval28BD,basisEval28CE,basisEval280D,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E1#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D0,basisEval281A,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D1,basisEval28AD,basisEval2829,basisEval280D,basisEval280D,basisEval282B,basisEval289B,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D2,basisEval28D3,basisEval28C3,basisEval283F,basisEval280D,basisEval280D,basisEval28D4,basisEval2843,basisEval289F,basisEval280D,basisEval280D,basisEval28A0,basisEval28C6,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D5,basisEval28D6,basisEval28B7,basisEval28D7,basisEval285E,basisEval280D,basisEval280D,basisEval28D8,basisEval28D9,basisEval2864,basisEval28A7,basisEval280D,basisEval280D,basisEval2868,basisEval2891,basisEval28DA,basisEval280D,basisEval280D,basisEval28DB,basisEval28CE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          tensor[3,84] intermediateCons28E2#1 = <tensor[3,84]>[intermediateCons28DC,intermediateCons28DD,intermediateCons28DE];
          tensor[3,84] intermediateCons28E3#1 = <tensor[3,84]>[intermediateCons28DD,intermediateCons28DF,intermediateCons28E0];
          tensor[3,84] intermediateCons28E4#1 = <tensor[3,84]>[intermediateCons28DE,intermediateCons28E0,intermediateCons28E1];
          tensor[3,3,84] intermediateCons28E5#1 = <tensor[3,3,84]>[intermediateCons28E2,intermediateCons28E3,intermediateCons28E4];
          tensor[3,3,84] basisResult2809#9 = intermediateCons28E5;
          tensor[84] projParam29C4#1 = ProjectLast<tensor[3,3,84],[0,0]>(basisResult2809);
          real vdot29C5#1 = VDot<84>(femDofs2565,projParam29C4);
          tensor[84] projParam29C6#1 = ProjectLast<tensor[3,3,84],[0,1]>(basisResult2809);
          real vdot29C7#1 = VDot<84>(femDofs2565,projParam29C6);
          tensor[84] projParam29C8#1 = ProjectLast<tensor[3,3,84],[0,2]>(basisResult2809);
          real vdot29C9#1 = VDot<84>(femDofs2565,projParam29C8);
          tensor[3] tensor29CA#1 = <tensor[3]>[vdot29C5,vdot29C7,vdot29C9];
          tensor[84] projParam29CB#1 = ProjectLast<tensor[3,3,84],[1,0]>(basisResult2809);
          real vdot29CC#1 = VDot<84>(femDofs2565,projParam29CB);
          tensor[84] projParam29CD#1 = ProjectLast<tensor[3,3,84],[1,1]>(basisResult2809);
          real vdot29CE#1 = VDot<84>(femDofs2565,projParam29CD);
          tensor[84] projParam29CF#1 = ProjectLast<tensor[3,3,84],[1,2]>(basisResult2809);
          real vdot29D0#1 = VDot<84>(femDofs2565,projParam29CF);
          tensor[3] tensor29D1#1 = <tensor[3]>[vdot29CC,vdot29CE,vdot29D0];
          tensor[84] projParam29D2#1 = ProjectLast<tensor[3,3,84],[2,0]>(basisResult2809);
          real vdot29D3#1 = VDot<84>(femDofs2565,projParam29D2);
          tensor[84] projParam29D4#1 = ProjectLast<tensor[3,3,84],[2,1]>(basisResult2809);
          real vdot29D5#1 = VDot<84>(femDofs2565,projParam29D4);
          tensor[84] projParam29D6#1 = ProjectLast<tensor[3,3,84],[2,2]>(basisResult2809);
          real vdot29D7#1 = VDot<84>(femDofs2565,projParam29D6);
          tensor[3] tensor29D8#1 = <tensor[3]>[vdot29D3,vdot29D5,vdot29D7];
          tensor[3,3] _t29C3#1 = <tensor[3,3]>[tensor29CA,tensor29D1,tensor29D8];
          real[3] _t29F0#1 = EigenVals3x3(_t29C3);
          int _t29F2#1 = 1;
          real _t29F4#1 = Subscript<real[3]>(_t29F0,_t29F2);
          real varAcc29F7#5 = VIndex<3,0>(pos235B);
          real varAcc29F8#5 = VIndex<3,1>(pos235B);
          real varAcc29F9#5 = VIndex<3,2>(pos235B);
          real basisEval29FA#84 = 0.e0;
          real coeff29FB#79 = 0.1e1;
          real prod29FC#6 = RMul(coeff29FB,coeff29FB);
          real prod29FD#1 = RMul(coeff29FB,prod29FC);
          real basisEval29FE#3 = RMul(coeff29FB,prod29FD);
          real iden29FF#6 = varAcc29F9;
          real prod2A00#5 = RMul(coeff29FB,iden29FF);
          real prod2A01#2 = RMul(coeff29FB,prod2A00);
          real basisEval2A02#2 = RMul(coeff29FB,prod2A01);
          real iden2A03#6 = varAcc29F8;
          real prod2A04#5 = RMul(iden2A03,coeff29FB);
          real prod2A05#2 = RMul(coeff29FB,prod2A04);
          real basisEval2A06#2 = RMul(coeff29FB,prod2A05);
          real coeff2A07#34 = 0.2e1;
          real iden2A08#16 = varAcc29F7;
          real prod2A09#2 = RMul(iden2A08,prod29FC);
          real basisEval2A0A#1 = RMul(coeff2A07,prod2A09);
          real prod22A0B#5 = RMul(iden29FF,varAcc29F9);
          real prod2A0C#4 = RMul(coeff29FB,prod22A0B);
          real prod2A0D#2 = RMul(coeff29FB,prod2A0C);
          real basisEval2A0E#2 = RMul(coeff29FB,prod2A0D);
          real prod2A0F#4 = RMul(iden2A03,iden29FF);
          real prod2A10#2 = RMul(coeff29FB,prod2A0F);
          real basisEval2A11#1 = RMul(coeff29FB,prod2A10);
          real prod22A12#5 = RMul(iden2A03,varAcc29F8);
          real prod2A13#4 = RMul(prod22A12,coeff29FB);
          real prod2A14#2 = RMul(coeff29FB,prod2A13);
          real basisEval2A15#2 = RMul(coeff29FB,prod2A14);
          real prod2A16#2 = RMul(iden2A08,prod2A00);
          real basisEval2A17#2 = RMul(coeff2A07,prod2A16);
          real prod2A18#2 = RMul(iden2A08,prod2A04);
          real basisEval2A19#2 = RMul(coeff2A07,prod2A18);
          real coeff2A1A#24 = 0.3e1;
          real prod22A1B#11 = RMul(iden2A08,varAcc29F7);
          real prod2A1C#2 = RMul(prod22A1B,prod29FC);
          real basisEval2A1D#1 = RMul(coeff2A1A,prod2A1C);
          real prod32A1E#4 = RMul(prod22A0B,varAcc29F9);
          real prod2A1F#3 = RMul(coeff29FB,prod32A1E);
          real prod2A20#2 = RMul(coeff29FB,prod2A1F);
          real basisEval2A21#2 = RMul(coeff29FB,prod2A20);
          real prod2A22#3 = RMul(iden2A03,prod22A0B);
          real prod2A23#3 = RMul(coeff29FB,prod2A22);
          real basisEval2A24#1 = RMul(coeff29FB,prod2A23);
          real prod2A25#3 = RMul(prod22A12,iden29FF);
          real prod2A26#3 = RMul(coeff29FB,prod2A25);
          real basisEval2A27#1 = RMul(coeff29FB,prod2A26);
          real prod32A28#4 = RMul(prod22A12,varAcc29F8);
          real prod2A29#3 = RMul(prod32A28,coeff29FB);
          real prod2A2A#2 = RMul(coeff29FB,prod2A29);
          real basisEval2A2B#2 = RMul(coeff29FB,prod2A2A);
          real prod2A2C#3 = RMul(iden2A08,prod2A0C);
          real basisEval2A2D#1 = RMul(coeff2A07,prod2A2C);
          real prod2A2E#1 = RMul(iden2A08,prod2A0F);
          real basisEval2A2F#3 = RMul(coeff2A07,prod2A2E);
          real prod2A30#3 = RMul(iden2A08,prod2A13);
          real basisEval2A31#1 = RMul(coeff2A07,prod2A30);
          real prod2A32#3 = RMul(prod22A1B,prod2A00);
          real basisEval2A33#1 = RMul(coeff2A1A,prod2A32);
          real prod2A34#3 = RMul(prod22A1B,prod2A04);
          real basisEval2A35#1 = RMul(coeff2A1A,prod2A34);
          real coeff2A36#18 = 0.4e1;
          real prod32A37#7 = RMul(prod22A1B,varAcc29F7);
          real prod2A38#2 = RMul(prod32A37,prod29FC);
          real basisEval2A39#1 = RMul(coeff2A36,prod2A38);
          real prod42A3A#3 = RMul(prod32A1E,varAcc29F9);
          real prod2A3B#2 = RMul(coeff29FB,prod42A3A);
          real prod2A3C#2 = RMul(coeff29FB,prod2A3B);
          real basisEval2A3D#2 = RMul(coeff29FB,prod2A3C);
          real prod2A3E#2 = RMul(iden2A03,prod32A1E);
          real prod2A3F#3 = RMul(coeff29FB,prod2A3E);
          real basisEval2A40#1 = RMul(coeff29FB,prod2A3F);
          real prod2A41#2 = RMul(prod22A12,prod22A0B);
          real prod2A42#2 = RMul(coeff29FB,prod2A41);
          real basisEval2A43#1 = RMul(coeff29FB,prod2A42);
          real prod2A44#2 = RMul(prod32A28,iden29FF);
          real prod2A45#3 = RMul(coeff29FB,prod2A44);
          real basisEval2A46#1 = RMul(coeff29FB,prod2A45);
          real prod42A47#3 = RMul(prod32A28,varAcc29F8);
          real prod2A48#2 = RMul(prod42A47,coeff29FB);
          real prod2A49#2 = RMul(coeff29FB,prod2A48);
          real basisEval2A4A#2 = RMul(coeff29FB,prod2A49);
          real prod2A4B#3 = RMul(iden2A08,prod2A1F);
          real basisEval2A4C#1 = RMul(coeff2A07,prod2A4B);
          real prod2A4D#2 = RMul(iden2A08,prod2A22);
          real basisEval2A4E#2 = RMul(coeff2A07,prod2A4D);
          real prod2A4F#2 = RMul(iden2A08,prod2A25);
          real basisEval2A50#2 = RMul(coeff2A07,prod2A4F);
          real prod2A51#3 = RMul(iden2A08,prod2A29);
          real basisEval2A52#1 = RMul(coeff2A07,prod2A51);
          real prod2A53#2 = RMul(prod22A1B,prod2A0C);
          real basisEval2A54#2 = RMul(coeff2A1A,prod2A53);
          real prod2A55#2 = RMul(prod22A1B,prod2A0F);
          real basisEval2A56#1 = RMul(coeff2A1A,prod2A55);
          real prod2A57#2 = RMul(prod22A1B,prod2A13);
          real basisEval2A58#2 = RMul(coeff2A1A,prod2A57);
          real prod2A59#3 = RMul(prod32A37,prod2A00);
          real basisEval2A5A#1 = RMul(coeff2A36,prod2A59);
          real prod2A5B#3 = RMul(prod32A37,prod2A04);
          real basisEval2A5C#1 = RMul(coeff2A36,prod2A5B);
          real coeff2A5D#9 = 0.5e1;
          real prod42A5E#4 = RMul(prod32A37,varAcc29F7);
          real prod2A5F#2 = RMul(prod42A5E,prod29FC);
          real basisEval2A60#1 = RMul(coeff2A5D,prod2A5F);
          real prod52A61#1 = RMul(prod42A3A,varAcc29F9);
          real prod2A62#1 = RMul(coeff29FB,prod52A61);
          real prod2A63#2 = RMul(coeff29FB,prod2A62);
          real basisEval2A64#2 = RMul(coeff29FB,prod2A63);
          real prod2A65#1 = RMul(iden2A03,prod42A3A);
          real prod2A66#3 = RMul(coeff29FB,prod2A65);
          real basisEval2A67#1 = RMul(coeff29FB,prod2A66);
          real prod2A68#1 = RMul(prod22A12,prod32A1E);
          real prod2A69#3 = RMul(coeff29FB,prod2A68);
          real basisEval2A6A#1 = RMul(coeff29FB,prod2A69);
          real prod2A6B#1 = RMul(prod32A28,prod22A0B);
          real prod2A6C#3 = RMul(coeff29FB,prod2A6B);
          real basisEval2A6D#1 = RMul(coeff29FB,prod2A6C);
          real prod2A6E#1 = RMul(prod42A47,iden29FF);
          real prod2A6F#3 = RMul(coeff29FB,prod2A6E);
          real basisEval2A70#1 = RMul(coeff29FB,prod2A6F);
          real prod52A71#1 = RMul(prod42A47,varAcc29F8);
          real prod2A72#1 = RMul(prod52A71,coeff29FB);
          real prod2A73#2 = RMul(coeff29FB,prod2A72);
          real basisEval2A74#2 = RMul(coeff29FB,prod2A73);
          real prod2A75#3 = RMul(iden2A08,prod2A3B);
          real basisEval2A76#1 = RMul(coeff2A07,prod2A75);
          real prod2A77#2 = RMul(iden2A08,prod2A3E);
          real basisEval2A78#2 = RMul(coeff2A07,prod2A77);
          real prod2A79#2 = RMul(iden2A08,prod2A41);
          real basisEval2A7A#1 = RMul(coeff2A07,prod2A79);
          real prod2A7B#2 = RMul(iden2A08,prod2A44);
          real basisEval2A7C#2 = RMul(coeff2A07,prod2A7B);
          real prod2A7D#3 = RMul(iden2A08,prod2A48);
          real basisEval2A7E#1 = RMul(coeff2A07,prod2A7D);
          real prod2A7F#3 = RMul(prod22A1B,prod2A1F);
          real basisEval2A80#1 = RMul(coeff2A1A,prod2A7F);
          real prod2A81#2 = RMul(prod22A1B,prod2A22);
          real basisEval2A82#2 = RMul(coeff2A1A,prod2A81);
          real prod2A83#2 = RMul(prod22A1B,prod2A25);
          real basisEval2A84#2 = RMul(coeff2A1A,prod2A83);
          real prod2A85#3 = RMul(prod22A1B,prod2A29);
          real basisEval2A86#1 = RMul(coeff2A1A,prod2A85);
          real prod2A87#3 = RMul(prod32A37,prod2A0C);
          real basisEval2A88#1 = RMul(coeff2A36,prod2A87);
          real prod2A89#2 = RMul(prod32A37,prod2A0F);
          real basisEval2A8A#1 = RMul(coeff2A36,prod2A89);
          real prod2A8B#3 = RMul(prod32A37,prod2A13);
          real basisEval2A8C#1 = RMul(coeff2A36,prod2A8B);
          real prod2A8D#3 = RMul(prod42A5E,prod2A00);
          real basisEval2A8E#1 = RMul(coeff2A5D,prod2A8D);
          real prod2A8F#3 = RMul(prod42A5E,prod2A04);
          real basisEval2A90#1 = RMul(coeff2A5D,prod2A8F);
          real coeff2A91#3 = 0.6e1;
          real prod52A92#1 = RMul(prod42A5E,varAcc29F7);
          real prod2A93#2 = RMul(prod52A92,prod29FC);
          real basisEval2A94#1 = RMul(coeff2A91,prod2A93);
          real basisEval2A95#1 = RMul(coeff2A07,prod2A05);
          real basisEval2A96#2 = RMul(coeff29FB,prod2A09);
          real basisEval2A97#2 = RMul(coeff2A07,prod2A10);
          real basisEval2A98#1 = RMul(coeff2A1A,prod2A14);
          real basisEval2A99#1 = RMul(coeff29FB,prod2A16);
          real basisEval2A9A#2 = RMul(coeff29FB,prod2A1C);
          real basisEval2A9B#1 = RMul(coeff2A07,prod2A23);
          real basisEval2A9C#1 = RMul(coeff2A1A,prod2A26);
          real basisEval2A9D#1 = RMul(coeff2A36,prod2A2A);
          real basisEval2A9E#1 = RMul(coeff29FB,prod2A2C);
          real basisEval2A9F#1 = RMul(coeff2A1A,prod2A30);
          real basisEval2AA0#1 = RMul(coeff29FB,prod2A32);
          real basisEval2AA1#1 = RMul(coeff2A07,prod2A34);
          real basisEval2AA2#2 = RMul(coeff29FB,prod2A38);
          real basisEval2AA3#1 = RMul(coeff2A07,prod2A3F);
          real basisEval2AA4#2 = RMul(coeff2A1A,prod2A42);
          real basisEval2AA5#1 = RMul(coeff2A36,prod2A45);
          real basisEval2AA6#1 = RMul(coeff2A5D,prod2A49);
          real basisEval2AA7#1 = RMul(coeff29FB,prod2A4B);
          real basisEval2AA8#1 = RMul(coeff2A1A,prod2A4F);
          real basisEval2AA9#1 = RMul(coeff2A36,prod2A51);
          real basisEval2AAA#1 = RMul(coeff29FB,prod2A53);
          real basisEval2AAB#2 = RMul(coeff2A07,prod2A55);
          real basisEval2AAC#1 = RMul(coeff29FB,prod2A59);
          real basisEval2AAD#1 = RMul(coeff2A07,prod2A5B);
          real basisEval2AAE#2 = RMul(coeff29FB,prod2A5F);
          real basisEval2AAF#1 = RMul(coeff2A07,prod2A66);
          real basisEval2AB0#1 = RMul(coeff2A1A,prod2A69);
          real basisEval2AB1#1 = RMul(coeff2A36,prod2A6C);
          real basisEval2AB2#1 = RMul(coeff2A5D,prod2A6F);
          real basisEval2AB3#1 = RMul(coeff2A91,prod2A73);
          real basisEval2AB4#1 = RMul(coeff29FB,prod2A75);
          real basisEval2AB5#2 = RMul(coeff2A1A,prod2A79);
          real basisEval2AB6#1 = RMul(coeff2A36,prod2A7B);
          real basisEval2AB7#1 = RMul(coeff2A5D,prod2A7D);
          real basisEval2AB8#1 = RMul(coeff29FB,prod2A7F);
          real basisEval2AB9#1 = RMul(coeff2A07,prod2A81);
          real basisEval2ABA#1 = RMul(coeff2A36,prod2A85);
          real basisEval2ABB#1 = RMul(coeff29FB,prod2A87);
          real basisEval2ABC#2 = RMul(coeff2A07,prod2A89);
          real basisEval2ABD#1 = RMul(coeff2A1A,prod2A8B);
          real basisEval2ABE#1 = RMul(coeff29FB,prod2A8D);
          real basisEval2ABF#1 = RMul(coeff2A07,prod2A8F);
          real basisEval2AC0#2 = RMul(coeff29FB,prod2A93);
          real basisEval2AC1#1 = RMul(coeff2A07,prod2A01);
          real basisEval2AC2#1 = RMul(coeff2A1A,prod2A0D);
          real basisEval2AC3#1 = RMul(coeff29FB,prod2A18);
          real basisEval2AC4#1 = RMul(coeff2A36,prod2A20);
          real basisEval2AC5#1 = RMul(coeff2A1A,prod2A23);
          real basisEval2AC6#1 = RMul(coeff2A07,prod2A26);
          real basisEval2AC7#1 = RMul(coeff2A1A,prod2A2C);
          real basisEval2AC8#1 = RMul(coeff29FB,prod2A30);
          real basisEval2AC9#1 = RMul(coeff2A07,prod2A32);
          real basisEval2ACA#1 = RMul(coeff29FB,prod2A34);
          real basisEval2ACB#1 = RMul(coeff2A5D,prod2A3C);
          real basisEval2ACC#1 = RMul(coeff2A36,prod2A3F);
          real basisEval2ACD#1 = RMul(coeff2A07,prod2A45);
          real basisEval2ACE#1 = RMul(coeff2A36,prod2A4B);
          real basisEval2ACF#1 = RMul(coeff2A1A,prod2A4D);
          real basisEval2AD0#1 = RMul(coeff29FB,prod2A51);
          real basisEval2AD1#1 = RMul(coeff29FB,prod2A57);
          real basisEval2AD2#1 = RMul(coeff2A07,prod2A59);
          real basisEval2AD3#1 = RMul(coeff29FB,prod2A5B);
          real basisEval2AD4#1 = RMul(coeff2A91,prod2A63);
          real basisEval2AD5#1 = RMul(coeff2A5D,prod2A66);
          real basisEval2AD6#1 = RMul(coeff2A36,prod2A69);
          real basisEval2AD7#1 = RMul(coeff2A1A,prod2A6C);
          real basisEval2AD8#1 = RMul(coeff2A07,prod2A6F);
          real basisEval2AD9#1 = RMul(coeff2A5D,prod2A75);
          real basisEval2ADA#1 = RMul(coeff2A36,prod2A77);
          real basisEval2ADB#1 = RMul(coeff29FB,prod2A7D);
          real basisEval2ADC#1 = RMul(coeff2A36,prod2A7F);
          real basisEval2ADD#1 = RMul(coeff2A07,prod2A83);
          real basisEval2ADE#1 = RMul(coeff29FB,prod2A85);
          real basisEval2ADF#1 = RMul(coeff2A1A,prod2A87);
          real basisEval2AE0#1 = RMul(coeff29FB,prod2A8B);
          real basisEval2AE1#1 = RMul(coeff2A07,prod2A8D);
          real basisEval2AE2#1 = RMul(coeff29FB,prod2A8F);
          tensor[84] intermediateCons2AE3#1 = <tensor[84]>[basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FE,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A02,basisEval2A06,basisEval2A0A,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A0E,basisEval2A11,basisEval2A15,basisEval2A17,basisEval2A19,basisEval2A1D,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A21,basisEval2A24,basisEval2A27,basisEval2A2B,basisEval2A2D,basisEval2A2F,basisEval2A31,basisEval2A33,basisEval2A35,basisEval2A39,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A3D,basisEval2A40,basisEval2A43,basisEval2A46,basisEval2A4A,basisEval2A4C,basisEval2A4E,basisEval2A50,basisEval2A52,basisEval2A54,basisEval2A56,basisEval2A58,basisEval2A5A,basisEval2A5C,basisEval2A60,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A64,basisEval2A67,basisEval2A6A,basisEval2A6D,basisEval2A70,basisEval2A74,basisEval2A76,basisEval2A78,basisEval2A7A,basisEval2A7C,basisEval2A7E,basisEval2A80,basisEval2A82,basisEval2A84,basisEval2A86,basisEval2A88,basisEval2A8A,basisEval2A8C,basisEval2A8E,basisEval2A90,basisEval2A94];
          tensor[84] intermediateCons2AE4#1 = <tensor[84]>[basisEval29FA,basisEval29FA,basisEval29FE,basisEval29FA,basisEval29FA,basisEval2A02,basisEval2A95,basisEval29FA,basisEval2A96,basisEval29FA,basisEval29FA,basisEval2A0E,basisEval2A97,basisEval2A98,basisEval29FA,basisEval2A99,basisEval2A19,basisEval29FA,basisEval2A9A,basisEval29FA,basisEval29FA,basisEval2A21,basisEval2A9B,basisEval2A9C,basisEval2A9D,basisEval29FA,basisEval2A9E,basisEval2A2F,basisEval2A9F,basisEval29FA,basisEval2AA0,basisEval2AA1,basisEval29FA,basisEval2AA2,basisEval29FA,basisEval29FA,basisEval2A3D,basisEval2AA3,basisEval2AA4,basisEval2AA5,basisEval2AA6,basisEval29FA,basisEval2AA7,basisEval2A4E,basisEval2AA8,basisEval2AA9,basisEval29FA,basisEval2AAA,basisEval2AAB,basisEval2A58,basisEval29FA,basisEval2AAC,basisEval2AAD,basisEval29FA,basisEval2AAE,basisEval29FA,basisEval29FA,basisEval2A64,basisEval2AAF,basisEval2AB0,basisEval2AB1,basisEval2AB2,basisEval2AB3,basisEval29FA,basisEval2AB4,basisEval2A78,basisEval2AB5,basisEval2AB6,basisEval2AB7,basisEval29FA,basisEval2AB8,basisEval2AB9,basisEval2A84,basisEval2ABA,basisEval29FA,basisEval2ABB,basisEval2ABC,basisEval2ABD,basisEval29FA,basisEval2ABE,basisEval2ABF,basisEval29FA,basisEval2AC0,basisEval29FA];
          tensor[84] intermediateCons2AE5#1 = <tensor[84]>[basisEval29FA,basisEval29FE,basisEval29FA,basisEval29FA,basisEval2AC1,basisEval2A06,basisEval29FA,basisEval2A96,basisEval29FA,basisEval29FA,basisEval2AC2,basisEval2A97,basisEval2A15,basisEval29FA,basisEval2A17,basisEval2AC3,basisEval29FA,basisEval2A9A,basisEval29FA,basisEval29FA,basisEval2AC4,basisEval2AC5,basisEval2AC6,basisEval2A2B,basisEval29FA,basisEval2AC7,basisEval2A2F,basisEval2AC8,basisEval29FA,basisEval2AC9,basisEval2ACA,basisEval29FA,basisEval2AA2,basisEval29FA,basisEval29FA,basisEval2ACB,basisEval2ACC,basisEval2AA4,basisEval2ACD,basisEval2A4A,basisEval29FA,basisEval2ACE,basisEval2ACF,basisEval2A50,basisEval2AD0,basisEval29FA,basisEval2A54,basisEval2AAB,basisEval2AD1,basisEval29FA,basisEval2AD2,basisEval2AD3,basisEval29FA,basisEval2AAE,basisEval29FA,basisEval29FA,basisEval2AD4,basisEval2AD5,basisEval2AD6,basisEval2AD7,basisEval2AD8,basisEval2A74,basisEval29FA,basisEval2AD9,basisEval2ADA,basisEval2AB5,basisEval2A7C,basisEval2ADB,basisEval29FA,basisEval2ADC,basisEval2A82,basisEval2ADD,basisEval2ADE,basisEval29FA,basisEval2ADF,basisEval2ABC,basisEval2AE0,basisEval29FA,basisEval2AE1,basisEval2AE2,basisEval29FA,basisEval2AC0,basisEval29FA,basisEval29FA];
          tensor[3,84] intermediateCons2AE6#1 = <tensor[3,84]>[intermediateCons2AE3,intermediateCons2AE4,intermediateCons2AE5];
          tensor[3,84] basisResult29F6#3 = intermediateCons2AE6;
          tensor[84] projParam2BD9#1 = ProjectLast<tensor[3,84],[0]>(basisResult29F6);
          real vdot2BDA#1 = VDot<84>(femDofs2565,projParam2BD9);
          tensor[84] projParam2BDB#1 = ProjectLast<tensor[3,84],[1]>(basisResult29F6);
          real vdot2BDC#1 = VDot<84>(femDofs2565,projParam2BDB);
          tensor[84] projParam2BDD#1 = ProjectLast<tensor[3,84],[2]>(basisResult29F6);
          real vdot2BDE#1 = VDot<84>(femDofs2565,projParam2BDD);
          tensor[3] probe_l_62BD8#2 = <tensor[3]>[vdot2BDA,vdot2BDC,vdot2BDE];
          real op1_e3_l_82BE7#1 = VDot<3>(probe_l_62BD8,probe_l_62BD8);
          real op1_e3_l_92BEA#1 = Sqrt(op1_e3_l_82BE7);
          real op1_e3_l_102BED#1 = RNeg(_t29F4);
          real op1_e3_l_112BF0#1 = RAdd(fBias2329,op1_e3_l_92BEA);
          real _t2BF3#1 = RDiv(op1_e3_l_102BED,op1_e3_l_112BF0);
          bool _t2BF6#1 = GT<real>(_t2BF3,fStrTh2325);
          if _t2BF6 then goto ASSIGN2BFA else goto ASSIGN389A
        ASSIGN2BFA:  preds = [COND2BF8]
          real _t2BF9#1 = 0.1e1;
          bool _t2BFB#1 = GTE<real>(_t2BF9,fMaskTh2327);
          if _t2BFB then goto ASSIGN2BFF else goto ASSIGN3899
        ASSIGN2BFF:  preds = [COND2BFD]
          bool _t2BFE#1 = true;
          goto JOIN2C02
        JOIN2C02:  preds = [ASSIGN2BFF,ASSIGN3899]
          bool _t2C00#1 = phi(_t2BFE,_t2C01)
          goto JOIN2C05
        JOIN2C05:  preds = [JOIN2C02,ASSIGN389A]
          bool _t2C03#1 = phi(_t2C00,_t2C04)
          goto JOIN2C08
        JOIN2C08:  preds = [JOIN2C05,ASSIGN389B]
          bool _t2C06#1 = phi(_t2C03,_t2C07)
          bool _t2C09#1 = BNot(_t2C06);
          if _t2C09 then goto SAVE2C0C else goto JOIN2C0E
        SAVE2C0C:  preds = [COND2C0B]
          self.rayN = rayN234F;
          active
          goto JOIN2C0E
        JOIN2C0E:  preds = [*ACTIVE2C0D,COND2C0B]
          int ilit2C10#1 = 84;
          int mulRes2C11#84 = IMul(_t2313,ilit2C10);
          int ilit2C12#1 = 0;
          int addRes2C13#1 = IAdd(mulRes2C11,ilit2C12);
          int idx2C14#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C13);
          int ilit2C15#1 = 1;
          int addRes2C16#1 = IAdd(mulRes2C11,ilit2C15);
          int idx2C17#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C16);
          int ilit2C18#1 = 2;
          int addRes2C19#1 = IAdd(mulRes2C11,ilit2C18);
          int idx2C1A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C19);
          int ilit2C1B#1 = 3;
          int addRes2C1C#1 = IAdd(mulRes2C11,ilit2C1B);
          int idx2C1D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1C);
          int ilit2C1E#1 = 4;
          int addRes2C1F#1 = IAdd(mulRes2C11,ilit2C1E);
          int idx2C20#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1F);
          int ilit2C21#1 = 5;
          int addRes2C22#1 = IAdd(mulRes2C11,ilit2C21);
          int idx2C23#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C22);
          int ilit2C24#1 = 6;
          int addRes2C25#1 = IAdd(mulRes2C11,ilit2C24);
          int idx2C26#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C25);
          int ilit2C27#1 = 7;
          int addRes2C28#1 = IAdd(mulRes2C11,ilit2C27);
          int idx2C29#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C28);
          int ilit2C2A#1 = 8;
          int addRes2C2B#1 = IAdd(mulRes2C11,ilit2C2A);
          int idx2C2C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2B);
          int ilit2C2D#1 = 9;
          int addRes2C2E#1 = IAdd(mulRes2C11,ilit2C2D);
          int idx2C2F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2E);
          int ilit2C30#1 = 10;
          int addRes2C31#1 = IAdd(mulRes2C11,ilit2C30);
          int idx2C32#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C31);
          int ilit2C33#1 = 11;
          int addRes2C34#1 = IAdd(mulRes2C11,ilit2C33);
          int idx2C35#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C34);
          int ilit2C36#1 = 12;
          int addRes2C37#1 = IAdd(mulRes2C11,ilit2C36);
          int idx2C38#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C37);
          int ilit2C39#1 = 13;
          int addRes2C3A#1 = IAdd(mulRes2C11,ilit2C39);
          int idx2C3B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3A);
          int ilit2C3C#1 = 14;
          int addRes2C3D#1 = IAdd(mulRes2C11,ilit2C3C);
          int idx2C3E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3D);
          int ilit2C3F#1 = 15;
          int addRes2C40#1 = IAdd(mulRes2C11,ilit2C3F);
          int idx2C41#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C40);
          int ilit2C42#1 = 16;
          int addRes2C43#1 = IAdd(mulRes2C11,ilit2C42);
          int idx2C44#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C43);
          int ilit2C45#1 = 17;
          int addRes2C46#1 = IAdd(mulRes2C11,ilit2C45);
          int idx2C47#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C46);
          int ilit2C48#1 = 18;
          int addRes2C49#1 = IAdd(mulRes2C11,ilit2C48);
          int idx2C4A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C49);
          int ilit2C4B#1 = 19;
          int addRes2C4C#1 = IAdd(mulRes2C11,ilit2C4B);
          int idx2C4D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4C);
          int ilit2C4E#1 = 20;
          int addRes2C4F#1 = IAdd(mulRes2C11,ilit2C4E);
          int idx2C50#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4F);
          int ilit2C51#1 = 21;
          int addRes2C52#1 = IAdd(mulRes2C11,ilit2C51);
          int idx2C53#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C52);
          int ilit2C54#1 = 22;
          int addRes2C55#1 = IAdd(mulRes2C11,ilit2C54);
          int idx2C56#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C55);
          int ilit2C57#1 = 23;
          int addRes2C58#1 = IAdd(mulRes2C11,ilit2C57);
          int idx2C59#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C58);
          int ilit2C5A#1 = 24;
          int addRes2C5B#1 = IAdd(mulRes2C11,ilit2C5A);
          int idx2C5C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5B);
          int ilit2C5D#1 = 25;
          int addRes2C5E#1 = IAdd(mulRes2C11,ilit2C5D);
          int idx2C5F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5E);
          int ilit2C60#1 = 26;
          int addRes2C61#1 = IAdd(mulRes2C11,ilit2C60);
          int idx2C62#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C61);
          int ilit2C63#1 = 27;
          int addRes2C64#1 = IAdd(mulRes2C11,ilit2C63);
          int idx2C65#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C64);
          int ilit2C66#1 = 28;
          int addRes2C67#1 = IAdd(mulRes2C11,ilit2C66);
          int idx2C68#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C67);
          int ilit2C69#1 = 29;
          int addRes2C6A#1 = IAdd(mulRes2C11,ilit2C69);
          int idx2C6B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6A);
          int ilit2C6C#1 = 30;
          int addRes2C6D#1 = IAdd(mulRes2C11,ilit2C6C);
          int idx2C6E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6D);
          int ilit2C6F#1 = 31;
          int addRes2C70#1 = IAdd(mulRes2C11,ilit2C6F);
          int idx2C71#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C70);
          int ilit2C72#1 = 32;
          int addRes2C73#1 = IAdd(mulRes2C11,ilit2C72);
          int idx2C74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C73);
          int ilit2C75#1 = 33;
          int addRes2C76#1 = IAdd(mulRes2C11,ilit2C75);
          int idx2C77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C76);
          int ilit2C78#1 = 34;
          int addRes2C79#1 = IAdd(mulRes2C11,ilit2C78);
          int idx2C7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C79);
          int ilit2C7B#1 = 35;
          int addRes2C7C#1 = IAdd(mulRes2C11,ilit2C7B);
          int idx2C7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7C);
          int ilit2C7E#1 = 36;
          int addRes2C7F#1 = IAdd(mulRes2C11,ilit2C7E);
          int idx2C80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7F);
          int ilit2C81#1 = 37;
          int addRes2C82#1 = IAdd(mulRes2C11,ilit2C81);
          int idx2C83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C82);
          int ilit2C84#1 = 38;
          int addRes2C85#1 = IAdd(mulRes2C11,ilit2C84);
          int idx2C86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C85);
          int ilit2C87#1 = 39;
          int addRes2C88#1 = IAdd(mulRes2C11,ilit2C87);
          int idx2C89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C88);
          int ilit2C8A#1 = 40;
          int addRes2C8B#1 = IAdd(mulRes2C11,ilit2C8A);
          int idx2C8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8B);
          int ilit2C8D#1 = 41;
          int addRes2C8E#1 = IAdd(mulRes2C11,ilit2C8D);
          int idx2C8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8E);
          int ilit2C90#1 = 42;
          int addRes2C91#1 = IAdd(mulRes2C11,ilit2C90);
          int idx2C92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C91);
          int ilit2C93#1 = 43;
          int addRes2C94#1 = IAdd(mulRes2C11,ilit2C93);
          int idx2C95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C94);
          int ilit2C96#1 = 44;
          int addRes2C97#1 = IAdd(mulRes2C11,ilit2C96);
          int idx2C98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C97);
          int ilit2C99#1 = 45;
          int addRes2C9A#1 = IAdd(mulRes2C11,ilit2C99);
          int idx2C9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9A);
          int ilit2C9C#1 = 46;
          int addRes2C9D#1 = IAdd(mulRes2C11,ilit2C9C);
          int idx2C9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9D);
          int ilit2C9F#1 = 47;
          int addRes2CA0#1 = IAdd(mulRes2C11,ilit2C9F);
          int idx2CA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA0);
          int ilit2CA2#1 = 48;
          int addRes2CA3#1 = IAdd(mulRes2C11,ilit2CA2);
          int idx2CA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA3);
          int ilit2CA5#1 = 49;
          int addRes2CA6#1 = IAdd(mulRes2C11,ilit2CA5);
          int idx2CA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA6);
          int ilit2CA8#1 = 50;
          int addRes2CA9#1 = IAdd(mulRes2C11,ilit2CA8);
          int idx2CAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA9);
          int ilit2CAB#1 = 51;
          int addRes2CAC#1 = IAdd(mulRes2C11,ilit2CAB);
          int idx2CAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAC);
          int ilit2CAE#1 = 52;
          int addRes2CAF#1 = IAdd(mulRes2C11,ilit2CAE);
          int idx2CB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAF);
          int ilit2CB1#1 = 53;
          int addRes2CB2#1 = IAdd(mulRes2C11,ilit2CB1);
          int idx2CB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB2);
          int ilit2CB4#1 = 54;
          int addRes2CB5#1 = IAdd(mulRes2C11,ilit2CB4);
          int idx2CB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB5);
          int ilit2CB7#1 = 55;
          int addRes2CB8#1 = IAdd(mulRes2C11,ilit2CB7);
          int idx2CB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB8);
          int ilit2CBA#1 = 56;
          int addRes2CBB#1 = IAdd(mulRes2C11,ilit2CBA);
          int idx2CBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBB);
          int ilit2CBD#1 = 57;
          int addRes2CBE#1 = IAdd(mulRes2C11,ilit2CBD);
          int idx2CBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBE);
          int ilit2CC0#1 = 58;
          int addRes2CC1#1 = IAdd(mulRes2C11,ilit2CC0);
          int idx2CC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC1);
          int ilit2CC3#1 = 59;
          int addRes2CC4#1 = IAdd(mulRes2C11,ilit2CC3);
          int idx2CC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC4);
          int ilit2CC6#1 = 60;
          int addRes2CC7#1 = IAdd(mulRes2C11,ilit2CC6);
          int idx2CC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC7);
          int ilit2CC9#1 = 61;
          int addRes2CCA#1 = IAdd(mulRes2C11,ilit2CC9);
          int idx2CCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCA);
          int ilit2CCC#1 = 62;
          int addRes2CCD#1 = IAdd(mulRes2C11,ilit2CCC);
          int idx2CCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCD);
          int ilit2CCF#1 = 63;
          int addRes2CD0#1 = IAdd(mulRes2C11,ilit2CCF);
          int idx2CD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD0);
          int ilit2CD2#1 = 64;
          int addRes2CD3#1 = IAdd(mulRes2C11,ilit2CD2);
          int idx2CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD3);
          int ilit2CD5#1 = 65;
          int addRes2CD6#1 = IAdd(mulRes2C11,ilit2CD5);
          int idx2CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD6);
          int ilit2CD8#1 = 66;
          int addRes2CD9#1 = IAdd(mulRes2C11,ilit2CD8);
          int idx2CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD9);
          int ilit2CDB#1 = 67;
          int addRes2CDC#1 = IAdd(mulRes2C11,ilit2CDB);
          int idx2CDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDC);
          int ilit2CDE#1 = 68;
          int addRes2CDF#1 = IAdd(mulRes2C11,ilit2CDE);
          int idx2CE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDF);
          int ilit2CE1#1 = 69;
          int addRes2CE2#1 = IAdd(mulRes2C11,ilit2CE1);
          int idx2CE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE2);
          int ilit2CE4#1 = 70;
          int addRes2CE5#1 = IAdd(mulRes2C11,ilit2CE4);
          int idx2CE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE5);
          int ilit2CE7#1 = 71;
          int addRes2CE8#1 = IAdd(mulRes2C11,ilit2CE7);
          int idx2CE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE8);
          int ilit2CEA#1 = 72;
          int addRes2CEB#1 = IAdd(mulRes2C11,ilit2CEA);
          int idx2CEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEB);
          int ilit2CED#1 = 73;
          int addRes2CEE#1 = IAdd(mulRes2C11,ilit2CED);
          int idx2CEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEE);
          int ilit2CF0#1 = 74;
          int addRes2CF1#1 = IAdd(mulRes2C11,ilit2CF0);
          int idx2CF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF1);
          int ilit2CF3#1 = 75;
          int addRes2CF4#1 = IAdd(mulRes2C11,ilit2CF3);
          int idx2CF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF4);
          int ilit2CF6#1 = 76;
          int addRes2CF7#1 = IAdd(mulRes2C11,ilit2CF6);
          int idx2CF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF7);
          int ilit2CF9#1 = 77;
          int addRes2CFA#1 = IAdd(mulRes2C11,ilit2CF9);
          int idx2CFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFA);
          int ilit2CFC#1 = 78;
          int addRes2CFD#1 = IAdd(mulRes2C11,ilit2CFC);
          int idx2CFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFD);
          int ilit2CFF#1 = 79;
          int addRes2D00#1 = IAdd(mulRes2C11,ilit2CFF);
          int idx2D01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D00);
          int ilit2D02#1 = 80;
          int addRes2D03#1 = IAdd(mulRes2C11,ilit2D02);
          int idx2D04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D03);
          int ilit2D05#1 = 81;
          int addRes2D06#1 = IAdd(mulRes2C11,ilit2D05);
          int idx2D07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D06);
          int ilit2D08#1 = 82;
          int addRes2D09#1 = IAdd(mulRes2C11,ilit2D08);
          int idx2D0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D09);
          int ilit2D0B#1 = 83;
          int addRes2D0C#1 = IAdd(mulRes2C11,ilit2D0B);
          int idx2D0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D0C);
          int[84] seq2D0E#1 = <int[84]>{idx2C14,idx2C17,idx2C1A,idx2C1D,idx2C20,idx2C23,idx2C26,idx2C29,idx2C2C,idx2C2F,idx2C32,idx2C35,idx2C38,idx2C3B,idx2C3E,idx2C41,idx2C44,idx2C47,idx2C4A,idx2C4D,idx2C50,idx2C53,idx2C56,idx2C59,idx2C5C,idx2C5F,idx2C62,idx2C65,idx2C68,idx2C6B,idx2C6E,idx2C71,idx2C74,idx2C77,idx2C7A,idx2C7D,idx2C80,idx2C83,idx2C86,idx2C89,idx2C8C,idx2C8F,idx2C92,idx2C95,idx2C98,idx2C9B,idx2C9E,idx2CA1,idx2CA4,idx2CA7,idx2CAA,idx2CAD,idx2CB0,idx2CB3,idx2CB6,idx2CB9,idx2CBC,idx2CBF,idx2CC2,idx2CC5,idx2CC8,idx2CCB,idx2CCE,idx2CD1,idx2CD4,idx2CD7,idx2CDA,idx2CDD,idx2CE0,idx2CE3,idx2CE6,idx2CE9,idx2CEC,idx2CEF,idx2CF2,idx2CF5,idx2CF8,idx2CFB,idx2CFE,idx2D01,idx2D04,idx2D07,idx2D0A,idx2D0D};
          int[84] femIndicies2C0F#84 = seq2D0E;
          int ilit2E10#85 = 1;
          int ilit2E11#1 = 0;
          int idx2E12#1 = Subscript<int>(femIndicies2C0F,ilit2E11);
          int mulRes2E13#1 = IMul(ilit2E10,idx2E12);
          int idx2E14#1 = Subscript<int>(femIndicies2C0F,ilit2E10);
          int mulRes2E15#1 = IMul(ilit2E10,idx2E14);
          int ilit2E16#1 = 2;
          int idx2E17#1 = Subscript<int>(femIndicies2C0F,ilit2E16);
          int mulRes2E18#1 = IMul(ilit2E10,idx2E17);
          int ilit2E19#1 = 3;
          int idx2E1A#1 = Subscript<int>(femIndicies2C0F,ilit2E19);
          int mulRes2E1B#1 = IMul(ilit2E10,idx2E1A);
          int ilit2E1C#1 = 4;
          int idx2E1D#1 = Subscript<int>(femIndicies2C0F,ilit2E1C);
          int mulRes2E1E#1 = IMul(ilit2E10,idx2E1D);
          int ilit2E1F#1 = 5;
          int idx2E20#1 = Subscript<int>(femIndicies2C0F,ilit2E1F);
          int mulRes2E21#1 = IMul(ilit2E10,idx2E20);
          int ilit2E22#1 = 6;
          int idx2E23#1 = Subscript<int>(femIndicies2C0F,ilit2E22);
          int mulRes2E24#1 = IMul(ilit2E10,idx2E23);
          int ilit2E25#1 = 7;
          int idx2E26#1 = Subscript<int>(femIndicies2C0F,ilit2E25);
          int mulRes2E27#1 = IMul(ilit2E10,idx2E26);
          int ilit2E28#1 = 8;
          int idx2E29#1 = Subscript<int>(femIndicies2C0F,ilit2E28);
          int mulRes2E2A#1 = IMul(ilit2E10,idx2E29);
          int ilit2E2B#1 = 9;
          int idx2E2C#1 = Subscript<int>(femIndicies2C0F,ilit2E2B);
          int mulRes2E2D#1 = IMul(ilit2E10,idx2E2C);
          int ilit2E2E#1 = 10;
          int idx2E2F#1 = Subscript<int>(femIndicies2C0F,ilit2E2E);
          int mulRes2E30#1 = IMul(ilit2E10,idx2E2F);
          int ilit2E31#1 = 11;
          int idx2E32#1 = Subscript<int>(femIndicies2C0F,ilit2E31);
          int mulRes2E33#1 = IMul(ilit2E10,idx2E32);
          int ilit2E34#1 = 12;
          int idx2E35#1 = Subscript<int>(femIndicies2C0F,ilit2E34);
          int mulRes2E36#1 = IMul(ilit2E10,idx2E35);
          int ilit2E37#1 = 13;
          int idx2E38#1 = Subscript<int>(femIndicies2C0F,ilit2E37);
          int mulRes2E39#1 = IMul(ilit2E10,idx2E38);
          int ilit2E3A#1 = 14;
          int idx2E3B#1 = Subscript<int>(femIndicies2C0F,ilit2E3A);
          int mulRes2E3C#1 = IMul(ilit2E10,idx2E3B);
          int ilit2E3D#1 = 15;
          int idx2E3E#1 = Subscript<int>(femIndicies2C0F,ilit2E3D);
          int mulRes2E3F#1 = IMul(ilit2E10,idx2E3E);
          int ilit2E40#1 = 16;
          int idx2E41#1 = Subscript<int>(femIndicies2C0F,ilit2E40);
          int mulRes2E42#1 = IMul(ilit2E10,idx2E41);
          int ilit2E43#1 = 17;
          int idx2E44#1 = Subscript<int>(femIndicies2C0F,ilit2E43);
          int mulRes2E45#1 = IMul(ilit2E10,idx2E44);
          int ilit2E46#1 = 18;
          int idx2E47#1 = Subscript<int>(femIndicies2C0F,ilit2E46);
          int mulRes2E48#1 = IMul(ilit2E10,idx2E47);
          int ilit2E49#1 = 19;
          int idx2E4A#1 = Subscript<int>(femIndicies2C0F,ilit2E49);
          int mulRes2E4B#1 = IMul(ilit2E10,idx2E4A);
          int ilit2E4C#1 = 20;
          int idx2E4D#1 = Subscript<int>(femIndicies2C0F,ilit2E4C);
          int mulRes2E4E#1 = IMul(ilit2E10,idx2E4D);
          int ilit2E4F#1 = 21;
          int idx2E50#1 = Subscript<int>(femIndicies2C0F,ilit2E4F);
          int mulRes2E51#1 = IMul(ilit2E10,idx2E50);
          int ilit2E52#1 = 22;
          int idx2E53#1 = Subscript<int>(femIndicies2C0F,ilit2E52);
          int mulRes2E54#1 = IMul(ilit2E10,idx2E53);
          int ilit2E55#1 = 23;
          int idx2E56#1 = Subscript<int>(femIndicies2C0F,ilit2E55);
          int mulRes2E57#1 = IMul(ilit2E10,idx2E56);
          int ilit2E58#1 = 24;
          int idx2E59#1 = Subscript<int>(femIndicies2C0F,ilit2E58);
          int mulRes2E5A#1 = IMul(ilit2E10,idx2E59);
          int ilit2E5B#1 = 25;
          int idx2E5C#1 = Subscript<int>(femIndicies2C0F,ilit2E5B);
          int mulRes2E5D#1 = IMul(ilit2E10,idx2E5C);
          int ilit2E5E#1 = 26;
          int idx2E5F#1 = Subscript<int>(femIndicies2C0F,ilit2E5E);
          int mulRes2E60#1 = IMul(ilit2E10,idx2E5F);
          int ilit2E61#1 = 27;
          int idx2E62#1 = Subscript<int>(femIndicies2C0F,ilit2E61);
          int mulRes2E63#1 = IMul(ilit2E10,idx2E62);
          int ilit2E64#1 = 28;
          int idx2E65#1 = Subscript<int>(femIndicies2C0F,ilit2E64);
          int mulRes2E66#1 = IMul(ilit2E10,idx2E65);
          int ilit2E67#1 = 29;
          int idx2E68#1 = Subscript<int>(femIndicies2C0F,ilit2E67);
          int mulRes2E69#1 = IMul(ilit2E10,idx2E68);
          int ilit2E6A#1 = 30;
          int idx2E6B#1 = Subscript<int>(femIndicies2C0F,ilit2E6A);
          int mulRes2E6C#1 = IMul(ilit2E10,idx2E6B);
          int ilit2E6D#1 = 31;
          int idx2E6E#1 = Subscript<int>(femIndicies2C0F,ilit2E6D);
          int mulRes2E6F#1 = IMul(ilit2E10,idx2E6E);
          int ilit2E70#1 = 32;
          int idx2E71#1 = Subscript<int>(femIndicies2C0F,ilit2E70);
          int mulRes2E72#1 = IMul(ilit2E10,idx2E71);
          int ilit2E73#1 = 33;
          int idx2E74#1 = Subscript<int>(femIndicies2C0F,ilit2E73);
          int mulRes2E75#1 = IMul(ilit2E10,idx2E74);
          int ilit2E76#1 = 34;
          int idx2E77#1 = Subscript<int>(femIndicies2C0F,ilit2E76);
          int mulRes2E78#1 = IMul(ilit2E10,idx2E77);
          int ilit2E79#1 = 35;
          int idx2E7A#1 = Subscript<int>(femIndicies2C0F,ilit2E79);
          int mulRes2E7B#1 = IMul(ilit2E10,idx2E7A);
          int ilit2E7C#1 = 36;
          int idx2E7D#1 = Subscript<int>(femIndicies2C0F,ilit2E7C);
          int mulRes2E7E#1 = IMul(ilit2E10,idx2E7D);
          int ilit2E7F#1 = 37;
          int idx2E80#1 = Subscript<int>(femIndicies2C0F,ilit2E7F);
          int mulRes2E81#1 = IMul(ilit2E10,idx2E80);
          int ilit2E82#1 = 38;
          int idx2E83#1 = Subscript<int>(femIndicies2C0F,ilit2E82);
          int mulRes2E84#1 = IMul(ilit2E10,idx2E83);
          int ilit2E85#1 = 39;
          int idx2E86#1 = Subscript<int>(femIndicies2C0F,ilit2E85);
          int mulRes2E87#1 = IMul(ilit2E10,idx2E86);
          int ilit2E88#1 = 40;
          int idx2E89#1 = Subscript<int>(femIndicies2C0F,ilit2E88);
          int mulRes2E8A#1 = IMul(ilit2E10,idx2E89);
          int ilit2E8B#1 = 41;
          int idx2E8C#1 = Subscript<int>(femIndicies2C0F,ilit2E8B);
          int mulRes2E8D#1 = IMul(ilit2E10,idx2E8C);
          int ilit2E8E#1 = 42;
          int idx2E8F#1 = Subscript<int>(femIndicies2C0F,ilit2E8E);
          int mulRes2E90#1 = IMul(ilit2E10,idx2E8F);
          int ilit2E91#1 = 43;
          int idx2E92#1 = Subscript<int>(femIndicies2C0F,ilit2E91);
          int mulRes2E93#1 = IMul(ilit2E10,idx2E92);
          int ilit2E94#1 = 44;
          int idx2E95#1 = Subscript<int>(femIndicies2C0F,ilit2E94);
          int mulRes2E96#1 = IMul(ilit2E10,idx2E95);
          int ilit2E97#1 = 45;
          int idx2E98#1 = Subscript<int>(femIndicies2C0F,ilit2E97);
          int mulRes2E99#1 = IMul(ilit2E10,idx2E98);
          int ilit2E9A#1 = 46;
          int idx2E9B#1 = Subscript<int>(femIndicies2C0F,ilit2E9A);
          int mulRes2E9C#1 = IMul(ilit2E10,idx2E9B);
          int ilit2E9D#1 = 47;
          int idx2E9E#1 = Subscript<int>(femIndicies2C0F,ilit2E9D);
          int mulRes2E9F#1 = IMul(ilit2E10,idx2E9E);
          int ilit2EA0#1 = 48;
          int idx2EA1#1 = Subscript<int>(femIndicies2C0F,ilit2EA0);
          int mulRes2EA2#1 = IMul(ilit2E10,idx2EA1);
          int ilit2EA3#1 = 49;
          int idx2EA4#1 = Subscript<int>(femIndicies2C0F,ilit2EA3);
          int mulRes2EA5#1 = IMul(ilit2E10,idx2EA4);
          int ilit2EA6#1 = 50;
          int idx2EA7#1 = Subscript<int>(femIndicies2C0F,ilit2EA6);
          int mulRes2EA8#1 = IMul(ilit2E10,idx2EA7);
          int ilit2EA9#1 = 51;
          int idx2EAA#1 = Subscript<int>(femIndicies2C0F,ilit2EA9);
          int mulRes2EAB#1 = IMul(ilit2E10,idx2EAA);
          int ilit2EAC#1 = 52;
          int idx2EAD#1 = Subscript<int>(femIndicies2C0F,ilit2EAC);
          int mulRes2EAE#1 = IMul(ilit2E10,idx2EAD);
          int ilit2EAF#1 = 53;
          int idx2EB0#1 = Subscript<int>(femIndicies2C0F,ilit2EAF);
          int mulRes2EB1#1 = IMul(ilit2E10,idx2EB0);
          int ilit2EB2#1 = 54;
          int idx2EB3#1 = Subscript<int>(femIndicies2C0F,ilit2EB2);
          int mulRes2EB4#1 = IMul(ilit2E10,idx2EB3);
          int ilit2EB5#1 = 55;
          int idx2EB6#1 = Subscript<int>(femIndicies2C0F,ilit2EB5);
          int mulRes2EB7#1 = IMul(ilit2E10,idx2EB6);
          int ilit2EB8#1 = 56;
          int idx2EB9#1 = Subscript<int>(femIndicies2C0F,ilit2EB8);
          int mulRes2EBA#1 = IMul(ilit2E10,idx2EB9);
          int ilit2EBB#1 = 57;
          int idx2EBC#1 = Subscript<int>(femIndicies2C0F,ilit2EBB);
          int mulRes2EBD#1 = IMul(ilit2E10,idx2EBC);
          int ilit2EBE#1 = 58;
          int idx2EBF#1 = Subscript<int>(femIndicies2C0F,ilit2EBE);
          int mulRes2EC0#1 = IMul(ilit2E10,idx2EBF);
          int ilit2EC1#1 = 59;
          int idx2EC2#1 = Subscript<int>(femIndicies2C0F,ilit2EC1);
          int mulRes2EC3#1 = IMul(ilit2E10,idx2EC2);
          int ilit2EC4#1 = 60;
          int idx2EC5#1 = Subscript<int>(femIndicies2C0F,ilit2EC4);
          int mulRes2EC6#1 = IMul(ilit2E10,idx2EC5);
          int ilit2EC7#1 = 61;
          int idx2EC8#1 = Subscript<int>(femIndicies2C0F,ilit2EC7);
          int mulRes2EC9#1 = IMul(ilit2E10,idx2EC8);
          int ilit2ECA#1 = 62;
          int idx2ECB#1 = Subscript<int>(femIndicies2C0F,ilit2ECA);
          int mulRes2ECC#1 = IMul(ilit2E10,idx2ECB);
          int ilit2ECD#1 = 63;
          int idx2ECE#1 = Subscript<int>(femIndicies2C0F,ilit2ECD);
          int mulRes2ECF#1 = IMul(ilit2E10,idx2ECE);
          int ilit2ED0#1 = 64;
          int idx2ED1#1 = Subscript<int>(femIndicies2C0F,ilit2ED0);
          int mulRes2ED2#1 = IMul(ilit2E10,idx2ED1);
          int ilit2ED3#1 = 65;
          int idx2ED4#1 = Subscript<int>(femIndicies2C0F,ilit2ED3);
          int mulRes2ED5#1 = IMul(ilit2E10,idx2ED4);
          int ilit2ED6#1 = 66;
          int idx2ED7#1 = Subscript<int>(femIndicies2C0F,ilit2ED6);
          int mulRes2ED8#1 = IMul(ilit2E10,idx2ED7);
          int ilit2ED9#1 = 67;
          int idx2EDA#1 = Subscript<int>(femIndicies2C0F,ilit2ED9);
          int mulRes2EDB#1 = IMul(ilit2E10,idx2EDA);
          int ilit2EDC#1 = 68;
          int idx2EDD#1 = Subscript<int>(femIndicies2C0F,ilit2EDC);
          int mulRes2EDE#1 = IMul(ilit2E10,idx2EDD);
          int ilit2EDF#1 = 69;
          int idx2EE0#1 = Subscript<int>(femIndicies2C0F,ilit2EDF);
          int mulRes2EE1#1 = IMul(ilit2E10,idx2EE0);
          int ilit2EE2#1 = 70;
          int idx2EE3#1 = Subscript<int>(femIndicies2C0F,ilit2EE2);
          int mulRes2EE4#1 = IMul(ilit2E10,idx2EE3);
          int ilit2EE5#1 = 71;
          int idx2EE6#1 = Subscript<int>(femIndicies2C0F,ilit2EE5);
          int mulRes2EE7#1 = IMul(ilit2E10,idx2EE6);
          int ilit2EE8#1 = 72;
          int idx2EE9#1 = Subscript<int>(femIndicies2C0F,ilit2EE8);
          int mulRes2EEA#1 = IMul(ilit2E10,idx2EE9);
          int ilit2EEB#1 = 73;
          int idx2EEC#1 = Subscript<int>(femIndicies2C0F,ilit2EEB);
          int mulRes2EED#1 = IMul(ilit2E10,idx2EEC);
          int ilit2EEE#1 = 74;
          int idx2EEF#1 = Subscript<int>(femIndicies2C0F,ilit2EEE);
          int mulRes2EF0#1 = IMul(ilit2E10,idx2EEF);
          int ilit2EF1#1 = 75;
          int idx2EF2#1 = Subscript<int>(femIndicies2C0F,ilit2EF1);
          int mulRes2EF3#1 = IMul(ilit2E10,idx2EF2);
          int ilit2EF4#1 = 76;
          int idx2EF5#1 = Subscript<int>(femIndicies2C0F,ilit2EF4);
          int mulRes2EF6#1 = IMul(ilit2E10,idx2EF5);
          int ilit2EF7#1 = 77;
          int idx2EF8#1 = Subscript<int>(femIndicies2C0F,ilit2EF7);
          int mulRes2EF9#1 = IMul(ilit2E10,idx2EF8);
          int ilit2EFA#1 = 78;
          int idx2EFB#1 = Subscript<int>(femIndicies2C0F,ilit2EFA);
          int mulRes2EFC#1 = IMul(ilit2E10,idx2EFB);
          int ilit2EFD#1 = 79;
          int idx2EFE#1 = Subscript<int>(femIndicies2C0F,ilit2EFD);
          int mulRes2EFF#1 = IMul(ilit2E10,idx2EFE);
          int ilit2F00#1 = 80;
          int idx2F01#1 = Subscript<int>(femIndicies2C0F,ilit2F00);
          int mulRes2F02#1 = IMul(ilit2E10,idx2F01);
          int ilit2F03#1 = 81;
          int idx2F04#1 = Subscript<int>(femIndicies2C0F,ilit2F03);
          int mulRes2F05#1 = IMul(ilit2E10,idx2F04);
          int ilit2F06#1 = 82;
          int idx2F07#1 = Subscript<int>(femIndicies2C0F,ilit2F06);
          int mulRes2F08#1 = IMul(ilit2E10,idx2F07);
          int ilit2F09#1 = 83;
          int idx2F0A#1 = Subscript<int>(femIndicies2C0F,ilit2F09);
          int mulRes2F0B#1 = IMul(ilit2E10,idx2F0A);
          real dof2F0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E13);
          real dof2F0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E15);
          real dof2F0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E18);
          real dof2F0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1B);
          real dof2F10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1E);
          real dof2F11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E21);
          real dof2F12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E24);
          real dof2F13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E27);
          real dof2F14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2A);
          real dof2F15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2D);
          real dof2F16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E30);
          real dof2F17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E33);
          real dof2F18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E36);
          real dof2F19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E39);
          real dof2F1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3C);
          real dof2F1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3F);
          real dof2F1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E42);
          real dof2F1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E45);
          real dof2F1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E48);
          real dof2F1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4B);
          real dof2F20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4E);
          real dof2F21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E51);
          real dof2F22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E54);
          real dof2F23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E57);
          real dof2F24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5A);
          real dof2F25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5D);
          real dof2F26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E60);
          real dof2F27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E63);
          real dof2F28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E66);
          real dof2F29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E69);
          real dof2F2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6C);
          real dof2F2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6F);
          real dof2F2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E72);
          real dof2F2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E75);
          real dof2F2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E78);
          real dof2F2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7B);
          real dof2F30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7E);
          real dof2F31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E81);
          real dof2F32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E84);
          real dof2F33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E87);
          real dof2F34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8A);
          real dof2F35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8D);
          real dof2F36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E90);
          real dof2F37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E93);
          real dof2F38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E96);
          real dof2F39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E99);
          real dof2F3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9C);
          real dof2F3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9F);
          real dof2F3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA2);
          real dof2F3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA5);
          real dof2F3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA8);
          real dof2F3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAB);
          real dof2F40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAE);
          real dof2F41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB1);
          real dof2F42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB4);
          real dof2F43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB7);
          real dof2F44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBA);
          real dof2F45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBD);
          real dof2F46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC0);
          real dof2F47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC3);
          real dof2F48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC6);
          real dof2F49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC9);
          real dof2F4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECC);
          real dof2F4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECF);
          real dof2F4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED2);
          real dof2F4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED5);
          real dof2F4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED8);
          real dof2F4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDB);
          real dof2F50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDE);
          real dof2F51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE1);
          real dof2F52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE4);
          real dof2F53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE7);
          real dof2F54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EEA);
          real dof2F55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EED);
          real dof2F56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF0);
          real dof2F57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF3);
          real dof2F58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF6);
          real dof2F59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF9);
          real dof2F5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFC);
          real dof2F5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFF);
          real dof2F5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F02);
          real dof2F5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F05);
          real dof2F5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F08);
          real dof2F5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F0B);
          tensor[84] dofs2F60#1 = <tensor[84]>[dof2F0C,dof2F0D,dof2F0E,dof2F0F,dof2F10,dof2F11,dof2F12,dof2F13,dof2F14,dof2F15,dof2F16,dof2F17,dof2F18,dof2F19,dof2F1A,dof2F1B,dof2F1C,dof2F1D,dof2F1E,dof2F1F,dof2F20,dof2F21,dof2F22,dof2F23,dof2F24,dof2F25,dof2F26,dof2F27,dof2F28,dof2F29,dof2F2A,dof2F2B,dof2F2C,dof2F2D,dof2F2E,dof2F2F,dof2F30,dof2F31,dof2F32,dof2F33,dof2F34,dof2F35,dof2F36,dof2F37,dof2F38,dof2F39,dof2F3A,dof2F3B,dof2F3C,dof2F3D,dof2F3E,dof2F3F,dof2F40,dof2F41,dof2F42,dof2F43,dof2F44,dof2F45,dof2F46,dof2F47,dof2F48,dof2F49,dof2F4A,dof2F4B,dof2F4C,dof2F4D,dof2F4E,dof2F4F,dof2F50,dof2F51,dof2F52,dof2F53,dof2F54,dof2F55,dof2F56,dof2F57,dof2F58,dof2F59,dof2F5A,dof2F5B,dof2F5C,dof2F5D,dof2F5E,dof2F5F];
          tensor[84] femDofs2E0F#13 = dofs2F60;
          real varAcc30B4#4 = VIndex<3,0>(pos235B);
          real varAcc30B5#4 = VIndex<3,1>(pos235B);
          real varAcc30B6#4 = VIndex<3,2>(pos235B);
          real basisEval30B7#294 = 0.e0;
          real coeff30B8#31 = 0.2e1;
          real one30B9#38 = 0.1e1;
          real prod30BA#5 = RMul(one30B9,one30B9);
          real prod30BB#2 = RMul(one30B9,prod30BA);
          real basisEval30BC#3 = RMul(coeff30B8,prod30BB);
          real iden30BD#5 = varAcc30B6;
          real prod30BE#4 = RMul(one30B9,iden30BD);
          real prod30BF#3 = RMul(one30B9,prod30BE);
          real basisEval30C0#4 = RMul(coeff30B8,prod30BF);
          real iden30C1#5 = varAcc30B5;
          real prod30C2#4 = RMul(iden30C1,one30B9);
          real prod30C3#3 = RMul(one30B9,prod30C2);
          real basisEval30C4#4 = RMul(coeff30B8,prod30C3);
          real coeff30C5#22 = 0.6e1;
          real iden30C6#11 = varAcc30B4;
          real prod30C7#3 = RMul(iden30C6,prod30BA);
          real basisEval30C8#1 = RMul(coeff30C5,prod30C7);
          real prod230C9#4 = RMul(iden30BD,varAcc30B6);
          real prod30CA#3 = RMul(one30B9,prod230C9);
          real prod30CB#4 = RMul(one30B9,prod30CA);
          real basisEval30CC#2 = RMul(coeff30B8,prod30CB);
          real prod30CD#3 = RMul(iden30C1,iden30BD);
          real prod30CE#3 = RMul(one30B9,prod30CD);
          real basisEval30CF#3 = RMul(coeff30B8,prod30CE);
          real prod230D0#4 = RMul(iden30C1,varAcc30B5);
          real prod30D1#3 = RMul(prod230D0,one30B9);
          real prod30D2#4 = RMul(one30B9,prod30D1);
          real basisEval30D3#2 = RMul(coeff30B8,prod30D2);
          real prod30D4#3 = RMul(iden30C6,prod30BE);
          real basisEval30D5#2 = RMul(coeff30C5,prod30D4);
          real prod30D6#3 = RMul(iden30C6,prod30C2);
          real basisEval30D7#2 = RMul(coeff30C5,prod30D6);
          real coeff30D8#15 = 0.12e2;
          real prod230D9#7 = RMul(iden30C6,varAcc30B4);
          real prod30DA#4 = RMul(prod230D9,prod30BA);
          real basisEval30DB#1 = RMul(coeff30D8,prod30DA);
          real prod330DC#3 = RMul(prod230C9,varAcc30B6);
          real prod30DD#2 = RMul(one30B9,prod330DC);
          real prod30DE#4 = RMul(one30B9,prod30DD);
          real basisEval30DF#2 = RMul(coeff30B8,prod30DE);
          real prod30E0#2 = RMul(iden30C1,prod230C9);
          real prod30E1#4 = RMul(one30B9,prod30E0);
          real basisEval30E2#2 = RMul(coeff30B8,prod30E1);
          real prod30E3#2 = RMul(prod230D0,iden30BD);
          real prod30E4#4 = RMul(one30B9,prod30E3);
          real basisEval30E5#2 = RMul(coeff30B8,prod30E4);
          real prod330E6#3 = RMul(prod230D0,varAcc30B5);
          real prod30E7#2 = RMul(prod330E6,one30B9);
          real prod30E8#4 = RMul(one30B9,prod30E7);
          real basisEval30E9#2 = RMul(coeff30B8,prod30E8);
          real prod30EA#4 = RMul(iden30C6,prod30CA);
          real basisEval30EB#2 = RMul(coeff30C5,prod30EA);
          real prod30EC#2 = RMul(iden30C6,prod30CD);
          real basisEval30ED#3 = RMul(coeff30C5,prod30EC);
          real prod30EE#4 = RMul(iden30C6,prod30D1);
          real basisEval30EF#2 = RMul(coeff30C5,prod30EE);
          real prod30F0#4 = RMul(prod230D9,prod30BE);
          real basisEval30F1#1 = RMul(coeff30D8,prod30F0);
          real prod30F2#4 = RMul(prod230D9,prod30C2);
          real basisEval30F3#1 = RMul(coeff30D8,prod30F2);
          real coeff30F4#9 = 0.20e2;
          real prod330F5#4 = RMul(prod230D9,varAcc30B4);
          real prod30F6#4 = RMul(prod330F5,prod30BA);
          real basisEval30F7#1 = RMul(coeff30F4,prod30F6);
          real prod430F8#1 = RMul(prod330DC,varAcc30B6);
          real prod30F9#1 = RMul(one30B9,prod430F8);
          real prod30FA#4 = RMul(one30B9,prod30F9);
          real basisEval30FB#2 = RMul(coeff30B8,prod30FA);
          real prod30FC#1 = RMul(iden30C1,prod330DC);
          real prod30FD#5 = RMul(one30B9,prod30FC);
          real basisEval30FE#2 = RMul(coeff30B8,prod30FD);
          real prod30FF#1 = RMul(prod230D0,prod230C9);
          real prod3100#4 = RMul(one30B9,prod30FF);
          real basisEval3101#1 = RMul(coeff30B8,prod3100);
          real prod3102#1 = RMul(prod330E6,iden30BD);
          real prod3103#5 = RMul(one30B9,prod3102);
          real basisEval3104#2 = RMul(coeff30B8,prod3103);
          real prod43105#1 = RMul(prod330E6,varAcc30B5);
          real prod3106#1 = RMul(prod43105,one30B9);
          real prod3107#4 = RMul(one30B9,prod3106);
          real basisEval3108#2 = RMul(coeff30B8,prod3107);
          real prod3109#5 = RMul(iden30C6,prod30DD);
          real basisEval310A#1 = RMul(coeff30C5,prod3109);
          real prod310B#3 = RMul(iden30C6,prod30E0);
          real basisEval310C#4 = RMul(coeff30C5,prod310B);
          real prod310D#3 = RMul(iden30C6,prod30E3);
          real basisEval310E#4 = RMul(coeff30C5,prod310D);
          real prod310F#5 = RMul(iden30C6,prod30E7);
          real basisEval3110#1 = RMul(coeff30C5,prod310F);
          real prod3111#4 = RMul(prod230D9,prod30CA);
          real basisEval3112#2 = RMul(coeff30D8,prod3111);
          real prod3113#3 = RMul(prod230D9,prod30CD);
          real basisEval3114#1 = RMul(coeff30D8,prod3113);
          real prod3115#4 = RMul(prod230D9,prod30D1);
          real basisEval3116#2 = RMul(coeff30D8,prod3115);
          real prod3117#5 = RMul(prod330F5,prod30BE);
          real basisEval3118#1 = RMul(coeff30F4,prod3117);
          real prod3119#5 = RMul(prod330F5,prod30C2);
          real basisEval311A#1 = RMul(coeff30F4,prod3119);
          real coeff311B#3 = 0.30e2;
          real prod4311C#1 = RMul(prod330F5,varAcc30B4);
          real prod311D#4 = RMul(prod4311C,prod30BA);
          real basisEval311E#1 = RMul(coeff311B,prod311D);
          real basisEval311F#3 = RMul(one30B9,prod30BB);
          real basisEval3120#1 = RMul(one30B9,prod30BF);
          real basisEval3121#4 = RMul(coeff30B8,prod30C7);
          real basisEval3122#1 = RMul(one30B9,prod30CB);
          real coeff3123#12 = 0.3e1;
          real basisEval3124#2 = RMul(coeff3123,prod30D2);
          real basisEval3125#3 = RMul(coeff30B8,prod30D4);
          real coeff3126#16 = 0.4e1;
          real basisEval3127#1 = RMul(coeff3126,prod30D6);
          real basisEval3128#2 = RMul(coeff3123,prod30DA);
          real basisEval3129#1 = RMul(one30B9,prod30DE);
          real basisEval312A#1 = RMul(coeff3123,prod30E4);
          real basisEval312B#2 = RMul(coeff3126,prod30E8);
          real basisEval312C#2 = RMul(coeff30B8,prod30EA);
          real basisEval312D#3 = RMul(coeff3126,prod30EC);
          real basisEval312E#1 = RMul(coeff3123,prod30F0);
          real basisEval312F#2 = RMul(coeff30C5,prod30F2);
          real basisEval3130#2 = RMul(coeff3126,prod30F6);
          real basisEval3131#1 = RMul(one30B9,prod30FA);
          real basisEval3132#2 = RMul(coeff3123,prod3100);
          real basisEval3133#1 = RMul(coeff3126,prod3103);
          real coeff3134#3 = 0.5e1;
          real basisEval3135#2 = RMul(coeff3134,prod3107);
          real basisEval3136#2 = RMul(coeff30B8,prod3109);
          real basisEval3137#1 = RMul(coeff3126,prod310B);
          real coeff3138#6 = 0.8e1;
          real basisEval3139#1 = RMul(coeff3138,prod310F);
          real basisEval313A#2 = RMul(coeff3123,prod3111);
          real basisEval313B#4 = RMul(coeff30C5,prod3113);
          real coeff313C#3 = 0.9e1;
          real basisEval313D#1 = RMul(coeff313C,prod3115);
          real basisEval313E#1 = RMul(coeff3126,prod3117);
          real basisEval313F#1 = RMul(coeff3138,prod3119);
          real basisEval3140#2 = RMul(coeff3134,prod311D);
          real basisEval3141#1 = RMul(one30B9,prod30C3);
          real basisEval3142#2 = RMul(coeff3123,prod30CB);
          real basisEval3143#1 = RMul(one30B9,prod30D2);
          real basisEval3144#1 = RMul(coeff3126,prod30D4);
          real basisEval3145#3 = RMul(coeff30B8,prod30D6);
          real basisEval3146#2 = RMul(coeff3126,prod30DE);
          real basisEval3147#1 = RMul(coeff3123,prod30E1);
          real basisEval3148#1 = RMul(one30B9,prod30E8);
          real basisEval3149#2 = RMul(coeff30B8,prod30EE);
          real basisEval314A#2 = RMul(coeff30C5,prod30F0);
          real basisEval314B#1 = RMul(coeff3123,prod30F2);
          real basisEval314C#2 = RMul(coeff3134,prod30FA);
          real basisEval314D#1 = RMul(coeff3126,prod30FD);
          real basisEval314E#1 = RMul(one30B9,prod3107);
          real basisEval314F#1 = RMul(coeff3138,prod3109);
          real basisEval3150#1 = RMul(coeff3126,prod310D);
          real basisEval3151#2 = RMul(coeff30B8,prod310F);
          real basisEval3152#1 = RMul(coeff313C,prod3111);
          real basisEval3153#2 = RMul(coeff3123,prod3115);
          real basisEval3154#1 = RMul(coeff3138,prod3117);
          real basisEval3155#1 = RMul(coeff3126,prod3119);
          real basisEval3156#1 = RMul(coeff30C5,prod30C3);
          real basisEval3157#2 = RMul(coeff30C5,prod30CE);
          real basisEval3158#1 = RMul(coeff30D8,prod30D2);
          real basisEval3159#2 = RMul(coeff30B8,prod30DA);
          real basisEval315A#2 = RMul(coeff30C5,prod30E1);
          real basisEval315B#1 = RMul(coeff30D8,prod30E4);
          real basisEval315C#1 = RMul(coeff30F4,prod30E8);
          real basisEval315D#1 = RMul(coeff30D8,prod30EE);
          real basisEval315E#2 = RMul(coeff30B8,prod30F0);
          real basisEval315F#2 = RMul(coeff30B8,prod30F6);
          real basisEval3160#1 = RMul(coeff30C5,prod30FD);
          real basisEval3161#2 = RMul(coeff30D8,prod3100);
          real basisEval3162#1 = RMul(coeff30F4,prod3103);
          real basisEval3163#1 = RMul(coeff311B,prod3107);
          real basisEval3164#1 = RMul(coeff30D8,prod310D);
          real basisEval3165#1 = RMul(coeff30F4,prod310F);
          real basisEval3166#1 = RMul(coeff30B8,prod3111);
          real basisEval3167#2 = RMul(coeff30B8,prod3117);
          real basisEval3168#1 = RMul(coeff30C5,prod3119);
          real basisEval3169#2 = RMul(coeff30B8,prod311D);
          real basisEval316A#1 = RMul(one30B9,prod30C7);
          real basisEval316B#1 = RMul(coeff3126,prod30CE);
          real basisEval316C#1 = RMul(one30B9,prod30DA);
          real basisEval316D#2 = RMul(coeff30C5,prod30E4);
          real basisEval316E#1 = RMul(coeff3123,prod30EA);
          real basisEval316F#1 = RMul(coeff3123,prod30EE);
          real basisEval3170#2 = RMul(coeff30B8,prod30F2);
          real basisEval3171#1 = RMul(one30B9,prod30F6);
          real basisEval3172#1 = RMul(coeff3138,prod30FD);
          real basisEval3173#1 = RMul(coeff313C,prod3100);
          real basisEval3174#1 = RMul(coeff3138,prod3103);
          real basisEval3175#1 = RMul(coeff3126,prod3109);
          real basisEval3176#1 = RMul(coeff3126,prod310F);
          real basisEval3177#1 = RMul(coeff3126,prod3113);
          real basisEval3178#2 = RMul(coeff30B8,prod3119);
          real basisEval3179#1 = RMul(one30B9,prod311D);
          real basisEval317A#1 = RMul(coeff30C5,prod30BF);
          real basisEval317B#1 = RMul(coeff30D8,prod30CB);
          real basisEval317C#1 = RMul(coeff30F4,prod30DE);
          real basisEval317D#1 = RMul(coeff30D8,prod30E1);
          real basisEval317E#1 = RMul(coeff30D8,prod30EA);
          real basisEval317F#1 = RMul(coeff311B,prod30FA);
          real basisEval3180#1 = RMul(coeff30F4,prod30FD);
          real basisEval3181#1 = RMul(coeff30C5,prod3103);
          real basisEval3182#1 = RMul(coeff30F4,prod3109);
          real basisEval3183#1 = RMul(coeff30D8,prod310B);
          real basisEval3184#1 = RMul(coeff30B8,prod3115);
          real basisEval3185#1 = RMul(coeff30C5,prod3117);
          tensor[84] intermediateCons3186#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30C8,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval30CF,basisEval30D3,basisEval30D5,basisEval30D7,basisEval30DB,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval30E2,basisEval30E5,basisEval30E9,basisEval30EB,basisEval30ED,basisEval30EF,basisEval30F1,basisEval30F3,basisEval30F7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval30FE,basisEval3101,basisEval3104,basisEval3108,basisEval310A,basisEval310C,basisEval310E,basisEval3110,basisEval3112,basisEval3114,basisEval3116,basisEval3118,basisEval311A,basisEval311E];
          tensor[84] intermediateCons3187#2 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3120,basisEval30C4,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3122,basisEval30CF,basisEval3124,basisEval30B7,basisEval3125,basisEval3127,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3129,basisEval30E2,basisEval312A,basisEval312B,basisEval30B7,basisEval312C,basisEval312D,basisEval30EF,basisEval30B7,basisEval312E,basisEval312F,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3131,basisEval30FE,basisEval3132,basisEval3133,basisEval3135,basisEval30B7,basisEval3136,basisEval3137,basisEval310E,basisEval3139,basisEval30B7,basisEval313A,basisEval313B,basisEval313D,basisEval30B7,basisEval313E,basisEval313F,basisEval30B7,basisEval3140,basisEval30B7];
          tensor[84] intermediateCons3188#2 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3141,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval30CF,basisEval3143,basisEval30B7,basisEval3144,basisEval3145,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval3147,basisEval30E5,basisEval3148,basisEval30B7,basisEval30EB,basisEval312D,basisEval3149,basisEval30B7,basisEval314A,basisEval314B,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval314D,basisEval3132,basisEval3104,basisEval314E,basisEval30B7,basisEval314F,basisEval310C,basisEval3150,basisEval3151,basisEval30B7,basisEval3152,basisEval313B,basisEval3153,basisEval30B7,basisEval3154,basisEval3155,basisEval30B7,basisEval3140,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons3189#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3156,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval3157,basisEval3158,basisEval30B7,basisEval30B7,basisEval3125,basisEval30D7,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval315A,basisEval315B,basisEval315C,basisEval30B7,basisEval30B7,basisEval312C,basisEval30ED,basisEval315D,basisEval30B7,basisEval30B7,basisEval315E,basisEval312F,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval3160,basisEval3161,basisEval3162,basisEval3163,basisEval30B7,basisEval30B7,basisEval3136,basisEval310C,basisEval3164,basisEval3165,basisEval30B7,basisEval30B7,basisEval3166,basisEval313B,basisEval3116,basisEval30B7,basisEval30B7,basisEval3167,basisEval3168,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318A#2 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30B7,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval316B,basisEval3124,basisEval30B7,basisEval30B7,basisEval3125,basisEval3145,basisEval30B7,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval315A,basisEval316D,basisEval312B,basisEval30B7,basisEval30B7,basisEval316E,basisEval312D,basisEval316F,basisEval30B7,basisEval30B7,basisEval315E,basisEval3170,basisEval30B7,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval3172,basisEval3173,basisEval3174,basisEval3135,basisEval30B7,basisEval30B7,basisEval3175,basisEval310C,basisEval310E,basisEval3176,basisEval30B7,basisEval30B7,basisEval313A,basisEval3177,basisEval3153,basisEval30B7,basisEval30B7,basisEval3167,basisEval3178,basisEval30B7,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318B#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317A,basisEval30C4,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317B,basisEval3157,basisEval30D3,basisEval30B7,basisEval30B7,basisEval30D5,basisEval3145,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317C,basisEval317D,basisEval316D,basisEval30E9,basisEval30B7,basisEval30B7,basisEval317E,basisEval30ED,basisEval3149,basisEval30B7,basisEval30B7,basisEval314A,basisEval3170,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317F,basisEval3180,basisEval3161,basisEval3181,basisEval3108,basisEval30B7,basisEval30B7,basisEval3182,basisEval3183,basisEval310E,basisEval3151,basisEval30B7,basisEval30B7,basisEval3112,basisEval313B,basisEval3184,basisEval30B7,basisEval30B7,basisEval3185,basisEval3178,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[3,84] intermediateCons318C#1 = <tensor[3,84]>[intermediateCons3186,intermediateCons3187,intermediateCons3188];
          tensor[3,84] intermediateCons318D#1 = <tensor[3,84]>[intermediateCons3187,intermediateCons3189,intermediateCons318A];
          tensor[3,84] intermediateCons318E#1 = <tensor[3,84]>[intermediateCons3188,intermediateCons318A,intermediateCons318B];
          tensor[3,3,84] intermediateCons318F#1 = <tensor[3,3,84]>[intermediateCons318C,intermediateCons318D,intermediateCons318E];
          tensor[3,3,84] basisResult30B3#9 = intermediateCons318F;
          tensor[84] projParam326E#1 = ProjectLast<tensor[3,3,84],[0,0]>(basisResult30B3);
          real vdot326F#1 = VDot<84>(femDofs2E0F,projParam326E);
          tensor[84] projParam3270#1 = ProjectLast<tensor[3,3,84],[0,1]>(basisResult30B3);
          real vdot3271#1 = VDot<84>(femDofs2E0F,projParam3270);
          tensor[84] projParam3272#1 = ProjectLast<tensor[3,3,84],[0,2]>(basisResult30B3);
          real vdot3273#1 = VDot<84>(femDofs2E0F,projParam3272);
          tensor[3] tensor3274#1 = <tensor[3]>[vdot326F,vdot3271,vdot3273];
          tensor[84] projParam3275#1 = ProjectLast<tensor[3,3,84],[1,0]>(basisResult30B3);
          real vdot3276#1 = VDot<84>(femDofs2E0F,projParam3275);
          tensor[84] projParam3277#1 = ProjectLast<tensor[3,3,84],[1,1]>(basisResult30B3);
          real vdot3278#1 = VDot<84>(femDofs2E0F,projParam3277);
          tensor[84] projParam3279#1 = ProjectLast<tensor[3,3,84],[1,2]>(basisResult30B3);
          real vdot327A#1 = VDot<84>(femDofs2E0F,projParam3279);
          tensor[3] tensor327B#1 = <tensor[3]>[vdot3276,vdot3278,vdot327A];
          tensor[84] projParam327C#1 = ProjectLast<tensor[3,3,84],[2,0]>(basisResult30B3);
          real vdot327D#1 = VDot<84>(femDofs2E0F,projParam327C);
          tensor[84] projParam327E#1 = ProjectLast<tensor[3,3,84],[2,1]>(basisResult30B3);
          real vdot327F#1 = VDot<84>(femDofs2E0F,projParam327E);
          tensor[84] projParam3280#1 = ProjectLast<tensor[3,3,84],[2,2]>(basisResult30B3);
          real vdot3281#1 = VDot<84>(femDofs2E0F,projParam3280);
          tensor[3] tensor3282#1 = <tensor[3]>[vdot327D,vdot327F,vdot3281];
          tensor[3,3] _t326D#1 = <tensor[3,3]>[tensor3274,tensor327B,tensor3282];
          (real[3] evals329A#2,tensor[3][3] E329B#2) = EigenVecs3x3(_t326D);
          int _t329D#2 = 2;
          tensor[3] _t329F#6 = Subscript<tensor[3][3]>(E329B,_t329D);
          real _t32A1#9 = Subscript<real[3]>(evals329A,_t329D);
          int _t32A3#2 = 1;
          tensor[3] _t32A5#6 = Subscript<tensor[3][3]>(E329B,_t32A3);
          real _t32A7#9 = Subscript<real[3]>(evals329A,_t32A3);
          real _t32A9#8 = 0.e0;
          real _t32AB#10 = 0.1e1;
          real _t32AD#1 = 0.15e1;
          real r32B0#1 = TensorIndex<tensor[3],[0]>(_t329F);
          tensor[3] binopV32B1#1 = VScale<3>(r32B0,_t329F);
          real r32B2#1 = TensorIndex<tensor[3],[1]>(_t329F);
          tensor[3] binopV32B3#1 = VScale<3>(r32B2,_t329F);
          real r32B4#1 = TensorIndex<tensor[3],[2]>(_t329F);
          tensor[3] binopV32B5#1 = VScale<3>(r32B4,_t329F);
          tensor[3,3] op1_e3_l_1632AF#9 = <tensor[3,3]>[binopV32B1,binopV32B3,binopV32B5];
          real r32BF#1 = TensorIndex<tensor[3],[0]>(_t32A5);
          tensor[3] binopV32C0#1 = VScale<3>(r32BF,_t32A5);
          real r32C1#1 = TensorIndex<tensor[3],[1]>(_t32A5);
          tensor[3] binopV32C2#1 = VScale<3>(r32C1,_t32A5);
          real r32C3#1 = TensorIndex<tensor[3],[2]>(_t32A5);
          tensor[3] binopV32C4#1 = VScale<3>(r32C3,_t32A5);
          tensor[3,3] op1_e3_l_1732BE#9 = <tensor[3,3]>[binopV32C0,binopV32C2,binopV32C4];
          real r32CE#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_1632AF);
          real r32CF#1 = RDiv(r32CE,_t32A1);
          real r32D0#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_1632AF);
          real r32D1#1 = RDiv(r32D0,_t32A1);
          real r32D2#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_1632AF);
          real r32D3#1 = RDiv(r32D2,_t32A1);
          tensor[3] tensor32D4#1 = <tensor[3]>[r32CF,r32D1,r32D3];
          real r32D5#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_1632AF);
          real r32D6#1 = RDiv(r32D5,_t32A1);
          real r32D7#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_1632AF);
          real r32D8#1 = RDiv(r32D7,_t32A1);
          real r32D9#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_1632AF);
          real r32DA#1 = RDiv(r32D9,_t32A1);
          tensor[3] tensor32DB#1 = <tensor[3]>[r32D6,r32D8,r32DA];
          real r32DC#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_1632AF);
          real r32DD#1 = RDiv(r32DC,_t32A1);
          real r32DE#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_1632AF);
          real r32DF#1 = RDiv(r32DE,_t32A1);
          real r32E0#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_1632AF);
          real r32E1#1 = RDiv(r32E0,_t32A1);
          tensor[3] tensor32E2#1 = <tensor[3]>[r32DD,r32DF,r32E1];
          tensor[3,3] op1_e3_l_1832CD#3 = <tensor[3,3]>[tensor32D4,tensor32DB,tensor32E2];
          real r32FB#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_1732BE);
          real r32FC#1 = RDiv(r32FB,_t32A7);
          real r32FD#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_1732BE);
          real r32FE#1 = RDiv(r32FD,_t32A7);
          real r32FF#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_1732BE);
          real r3300#1 = RDiv(r32FF,_t32A7);
          tensor[3] tensor3301#1 = <tensor[3]>[r32FC,r32FE,r3300];
          real r3302#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_1732BE);
          real r3303#1 = RDiv(r3302,_t32A7);
          real r3304#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_1732BE);
          real r3305#1 = RDiv(r3304,_t32A7);
          real r3306#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_1732BE);
          real r3307#1 = RDiv(r3306,_t32A7);
          tensor[3] tensor3308#1 = <tensor[3]>[r3303,r3305,r3307];
          real r3309#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_1732BE);
          real r330A#1 = RDiv(r3309,_t32A7);
          real r330B#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_1732BE);
          real r330C#1 = RDiv(r330B,_t32A7);
          real r330D#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_1732BE);
          real r330E#1 = RDiv(r330D,_t32A7);
          tensor[3] tensor330F#1 = <tensor[3]>[r330A,r330C,r330E];
          tensor[3,3] op1_e3_l_1932FA#3 = <tensor[3,3]>[tensor3301,tensor3308,tensor330F];
          tensor[3] projParam3328#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1832CD);
          tensor[3] projParam3329#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1932FA);
          tensor[3] v332A#1 = VAdd<3>(projParam3328,projParam3329);
          tensor[3] projParam332B#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1832CD);
          tensor[3] projParam332C#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1932FA);
          tensor[3] v332D#1 = VAdd<3>(projParam332B,projParam332C);
          tensor[3] projParam332E#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1832CD);
          tensor[3] projParam332F#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1932FA);
          tensor[3] v3330#1 = VAdd<3>(projParam332E,projParam332F);
          tensor[3,3] op1_e3_l_203327#3 = <tensor[3,3]>[v332A,v332D,v3330];
          real varAcc333D#5 = VIndex<3,0>(pos235B);
          real varAcc333E#5 = VIndex<3,1>(pos235B);
          real varAcc333F#5 = VIndex<3,2>(pos235B);
          real basisEval3340#84 = 0.e0;
          real coeff3341#79 = 0.1e1;
          real prod3342#6 = RMul(coeff3341,coeff3341);
          real prod3343#1 = RMul(coeff3341,prod3342);
          real basisEval3344#3 = RMul(coeff3341,prod3343);
          real iden3345#6 = varAcc333F;
          real prod3346#5 = RMul(coeff3341,iden3345);
          real prod3347#2 = RMul(coeff3341,prod3346);
          real basisEval3348#2 = RMul(coeff3341,prod3347);
          real iden3349#6 = varAcc333E;
          real prod334A#5 = RMul(iden3349,coeff3341);
          real prod334B#2 = RMul(coeff3341,prod334A);
          real basisEval334C#2 = RMul(coeff3341,prod334B);
          real coeff334D#34 = 0.2e1;
          real iden334E#16 = varAcc333D;
          real prod334F#2 = RMul(iden334E,prod3342);
          real basisEval3350#1 = RMul(coeff334D,prod334F);
          real prod23351#5 = RMul(iden3345,varAcc333F);
          real prod3352#4 = RMul(coeff3341,prod23351);
          real prod3353#2 = RMul(coeff3341,prod3352);
          real basisEval3354#2 = RMul(coeff3341,prod3353);
          real prod3355#4 = RMul(iden3349,iden3345);
          real prod3356#2 = RMul(coeff3341,prod3355);
          real basisEval3357#1 = RMul(coeff3341,prod3356);
          real prod23358#5 = RMul(iden3349,varAcc333E);
          real prod3359#4 = RMul(prod23358,coeff3341);
          real prod335A#2 = RMul(coeff3341,prod3359);
          real basisEval335B#2 = RMul(coeff3341,prod335A);
          real prod335C#2 = RMul(iden334E,prod3346);
          real basisEval335D#2 = RMul(coeff334D,prod335C);
          real prod335E#2 = RMul(iden334E,prod334A);
          real basisEval335F#2 = RMul(coeff334D,prod335E);
          real coeff3360#24 = 0.3e1;
          real prod23361#11 = RMul(iden334E,varAcc333D);
          real prod3362#2 = RMul(prod23361,prod3342);
          real basisEval3363#1 = RMul(coeff3360,prod3362);
          real prod33364#4 = RMul(prod23351,varAcc333F);
          real prod3365#3 = RMul(coeff3341,prod33364);
          real prod3366#2 = RMul(coeff3341,prod3365);
          real basisEval3367#2 = RMul(coeff3341,prod3366);
          real prod3368#3 = RMul(iden3349,prod23351);
          real prod3369#3 = RMul(coeff3341,prod3368);
          real basisEval336A#1 = RMul(coeff3341,prod3369);
          real prod336B#3 = RMul(prod23358,iden3345);
          real prod336C#3 = RMul(coeff3341,prod336B);
          real basisEval336D#1 = RMul(coeff3341,prod336C);
          real prod3336E#4 = RMul(prod23358,varAcc333E);
          real prod336F#3 = RMul(prod3336E,coeff3341);
          real prod3370#2 = RMul(coeff3341,prod336F);
          real basisEval3371#2 = RMul(coeff3341,prod3370);
          real prod3372#3 = RMul(iden334E,prod3352);
          real basisEval3373#1 = RMul(coeff334D,prod3372);
          real prod3374#1 = RMul(iden334E,prod3355);
          real basisEval3375#3 = RMul(coeff334D,prod3374);
          real prod3376#3 = RMul(iden334E,prod3359);
          real basisEval3377#1 = RMul(coeff334D,prod3376);
          real prod3378#3 = RMul(prod23361,prod3346);
          real basisEval3379#1 = RMul(coeff3360,prod3378);
          real prod337A#3 = RMul(prod23361,prod334A);
          real basisEval337B#1 = RMul(coeff3360,prod337A);
          real coeff337C#18 = 0.4e1;
          real prod3337D#7 = RMul(prod23361,varAcc333D);
          real prod337E#2 = RMul(prod3337D,prod3342);
          real basisEval337F#1 = RMul(coeff337C,prod337E);
          real prod43380#3 = RMul(prod33364,varAcc333F);
          real prod3381#2 = RMul(coeff3341,prod43380);
          real prod3382#2 = RMul(coeff3341,prod3381);
          real basisEval3383#2 = RMul(coeff3341,prod3382);
          real prod3384#2 = RMul(iden3349,prod33364);
          real prod3385#3 = RMul(coeff3341,prod3384);
          real basisEval3386#1 = RMul(coeff3341,prod3385);
          real prod3387#2 = RMul(prod23358,prod23351);
          real prod3388#2 = RMul(coeff3341,prod3387);
          real basisEval3389#1 = RMul(coeff3341,prod3388);
          real prod338A#2 = RMul(prod3336E,iden3345);
          real prod338B#3 = RMul(coeff3341,prod338A);
          real basisEval338C#1 = RMul(coeff3341,prod338B);
          real prod4338D#3 = RMul(prod3336E,varAcc333E);
          real prod338E#2 = RMul(prod4338D,coeff3341);
          real prod338F#2 = RMul(coeff3341,prod338E);
          real basisEval3390#2 = RMul(coeff3341,prod338F);
          real prod3391#3 = RMul(iden334E,prod3365);
          real basisEval3392#1 = RMul(coeff334D,prod3391);
          real prod3393#2 = RMul(iden334E,prod3368);
          real basisEval3394#2 = RMul(coeff334D,prod3393);
          real prod3395#2 = RMul(iden334E,prod336B);
          real basisEval3396#2 = RMul(coeff334D,prod3395);
          real prod3397#3 = RMul(iden334E,prod336F);
          real basisEval3398#1 = RMul(coeff334D,prod3397);
          real prod3399#2 = RMul(prod23361,prod3352);
          real basisEval339A#2 = RMul(coeff3360,prod3399);
          real prod339B#2 = RMul(prod23361,prod3355);
          real basisEval339C#1 = RMul(coeff3360,prod339B);
          real prod339D#2 = RMul(prod23361,prod3359);
          real basisEval339E#2 = RMul(coeff3360,prod339D);
          real prod339F#3 = RMul(prod3337D,prod3346);
          real basisEval33A0#1 = RMul(coeff337C,prod339F);
          real prod33A1#3 = RMul(prod3337D,prod334A);
          real basisEval33A2#1 = RMul(coeff337C,prod33A1);
          real coeff33A3#9 = 0.5e1;
          real prod433A4#4 = RMul(prod3337D,varAcc333D);
          real prod33A5#2 = RMul(prod433A4,prod3342);
          real basisEval33A6#1 = RMul(coeff33A3,prod33A5);
          real prod533A7#1 = RMul(prod43380,varAcc333F);
          real prod33A8#1 = RMul(coeff3341,prod533A7);
          real prod33A9#2 = RMul(coeff3341,prod33A8);
          real basisEval33AA#2 = RMul(coeff3341,prod33A9);
          real prod33AB#1 = RMul(iden3349,prod43380);
          real prod33AC#3 = RMul(coeff3341,prod33AB);
          real basisEval33AD#1 = RMul(coeff3341,prod33AC);
          real prod33AE#1 = RMul(prod23358,prod33364);
          real prod33AF#3 = RMul(coeff3341,prod33AE);
          real basisEval33B0#1 = RMul(coeff3341,prod33AF);
          real prod33B1#1 = RMul(prod3336E,prod23351);
          real prod33B2#3 = RMul(coeff3341,prod33B1);
          real basisEval33B3#1 = RMul(coeff3341,prod33B2);
          real prod33B4#1 = RMul(prod4338D,iden3345);
          real prod33B5#3 = RMul(coeff3341,prod33B4);
          real basisEval33B6#1 = RMul(coeff3341,prod33B5);
          real prod533B7#1 = RMul(prod4338D,varAcc333E);
          real prod33B8#1 = RMul(prod533B7,coeff3341);
          real prod33B9#2 = RMul(coeff3341,prod33B8);
          real basisEval33BA#2 = RMul(coeff3341,prod33B9);
          real prod33BB#3 = RMul(iden334E,prod3381);
          real basisEval33BC#1 = RMul(coeff334D,prod33BB);
          real prod33BD#2 = RMul(iden334E,prod3384);
          real basisEval33BE#2 = RMul(coeff334D,prod33BD);
          real prod33BF#2 = RMul(iden334E,prod3387);
          real basisEval33C0#1 = RMul(coeff334D,prod33BF);
          real prod33C1#2 = RMul(iden334E,prod338A);
          real basisEval33C2#2 = RMul(coeff334D,prod33C1);
          real prod33C3#3 = RMul(iden334E,prod338E);
          real basisEval33C4#1 = RMul(coeff334D,prod33C3);
          real prod33C5#3 = RMul(prod23361,prod3365);
          real basisEval33C6#1 = RMul(coeff3360,prod33C5);
          real prod33C7#2 = RMul(prod23361,prod3368);
          real basisEval33C8#2 = RMul(coeff3360,prod33C7);
          real prod33C9#2 = RMul(prod23361,prod336B);
          real basisEval33CA#2 = RMul(coeff3360,prod33C9);
          real prod33CB#3 = RMul(prod23361,prod336F);
          real basisEval33CC#1 = RMul(coeff3360,prod33CB);
          real prod33CD#3 = RMul(prod3337D,prod3352);
          real basisEval33CE#1 = RMul(coeff337C,prod33CD);
          real prod33CF#2 = RMul(prod3337D,prod3355);
          real basisEval33D0#1 = RMul(coeff337C,prod33CF);
          real prod33D1#3 = RMul(prod3337D,prod3359);
          real basisEval33D2#1 = RMul(coeff337C,prod33D1);
          real prod33D3#3 = RMul(prod433A4,prod3346);
          real basisEval33D4#1 = RMul(coeff33A3,prod33D3);
          real prod33D5#3 = RMul(prod433A4,prod334A);
          real basisEval33D6#1 = RMul(coeff33A3,prod33D5);
          real coeff33D7#3 = 0.6e1;
          real prod533D8#1 = RMul(prod433A4,varAcc333D);
          real prod33D9#2 = RMul(prod533D8,prod3342);
          real basisEval33DA#1 = RMul(coeff33D7,prod33D9);
          real basisEval33DB#1 = RMul(coeff334D,prod334B);
          real basisEval33DC#2 = RMul(coeff3341,prod334F);
          real basisEval33DD#2 = RMul(coeff334D,prod3356);
          real basisEval33DE#1 = RMul(coeff3360,prod335A);
          real basisEval33DF#1 = RMul(coeff3341,prod335C);
          real basisEval33E0#2 = RMul(coeff3341,prod3362);
          real basisEval33E1#1 = RMul(coeff334D,prod3369);
          real basisEval33E2#1 = RMul(coeff3360,prod336C);
          real basisEval33E3#1 = RMul(coeff337C,prod3370);
          real basisEval33E4#1 = RMul(coeff3341,prod3372);
          real basisEval33E5#1 = RMul(coeff3360,prod3376);
          real basisEval33E6#1 = RMul(coeff3341,prod3378);
          real basisEval33E7#1 = RMul(coeff334D,prod337A);
          real basisEval33E8#2 = RMul(coeff3341,prod337E);
          real basisEval33E9#1 = RMul(coeff334D,prod3385);
          real basisEval33EA#2 = RMul(coeff3360,prod3388);
          real basisEval33EB#1 = RMul(coeff337C,prod338B);
          real basisEval33EC#1 = RMul(coeff33A3,prod338F);
          real basisEval33ED#1 = RMul(coeff3341,prod3391);
          real basisEval33EE#1 = RMul(coeff3360,prod3395);
          real basisEval33EF#1 = RMul(coeff337C,prod3397);
          real basisEval33F0#1 = RMul(coeff3341,prod3399);
          real basisEval33F1#2 = RMul(coeff334D,prod339B);
          real basisEval33F2#1 = RMul(coeff3341,prod339F);
          real basisEval33F3#1 = RMul(coeff334D,prod33A1);
          real basisEval33F4#2 = RMul(coeff3341,prod33A5);
          real basisEval33F5#1 = RMul(coeff334D,prod33AC);
          real basisEval33F6#1 = RMul(coeff3360,prod33AF);
          real basisEval33F7#1 = RMul(coeff337C,prod33B2);
          real basisEval33F8#1 = RMul(coeff33A3,prod33B5);
          real basisEval33F9#1 = RMul(coeff33D7,prod33B9);
          real basisEval33FA#1 = RMul(coeff3341,prod33BB);
          real basisEval33FB#2 = RMul(coeff3360,prod33BF);
          real basisEval33FC#1 = RMul(coeff337C,prod33C1);
          real basisEval33FD#1 = RMul(coeff33A3,prod33C3);
          real basisEval33FE#1 = RMul(coeff3341,prod33C5);
          real basisEval33FF#1 = RMul(coeff334D,prod33C7);
          real basisEval3400#1 = RMul(coeff337C,prod33CB);
          real basisEval3401#1 = RMul(coeff3341,prod33CD);
          real basisEval3402#2 = RMul(coeff334D,prod33CF);
          real basisEval3403#1 = RMul(coeff3360,prod33D1);
          real basisEval3404#1 = RMul(coeff3341,prod33D3);
          real basisEval3405#1 = RMul(coeff334D,prod33D5);
          real basisEval3406#2 = RMul(coeff3341,prod33D9);
          real basisEval3407#1 = RMul(coeff334D,prod3347);
          real basisEval3408#1 = RMul(coeff3360,prod3353);
          real basisEval3409#1 = RMul(coeff3341,prod335E);
          real basisEval340A#1 = RMul(coeff337C,prod3366);
          real basisEval340B#1 = RMul(coeff3360,prod3369);
          real basisEval340C#1 = RMul(coeff334D,prod336C);
          real basisEval340D#1 = RMul(coeff3360,prod3372);
          real basisEval340E#1 = RMul(coeff3341,prod3376);
          real basisEval340F#1 = RMul(coeff334D,prod3378);
          real basisEval3410#1 = RMul(coeff3341,prod337A);
          real basisEval3411#1 = RMul(coeff33A3,prod3382);
          real basisEval3412#1 = RMul(coeff337C,prod3385);
          real basisEval3413#1 = RMul(coeff334D,prod338B);
          real basisEval3414#1 = RMul(coeff337C,prod3391);
          real basisEval3415#1 = RMul(coeff3360,prod3393);
          real basisEval3416#1 = RMul(coeff3341,prod3397);
          real basisEval3417#1 = RMul(coeff3341,prod339D);
          real basisEval3418#1 = RMul(coeff334D,prod339F);
          real basisEval3419#1 = RMul(coeff3341,prod33A1);
          real basisEval341A#1 = RMul(coeff33D7,prod33A9);
          real basisEval341B#1 = RMul(coeff33A3,prod33AC);
          real basisEval341C#1 = RMul(coeff337C,prod33AF);
          real basisEval341D#1 = RMul(coeff3360,prod33B2);
          real basisEval341E#1 = RMul(coeff334D,prod33B5);
          real basisEval341F#1 = RMul(coeff33A3,prod33BB);
          real basisEval3420#1 = RMul(coeff337C,prod33BD);
          real basisEval3421#1 = RMul(coeff3341,prod33C3);
          real basisEval3422#1 = RMul(coeff337C,prod33C5);
          real basisEval3423#1 = RMul(coeff334D,prod33C9);
          real basisEval3424#1 = RMul(coeff3341,prod33CB);
          real basisEval3425#1 = RMul(coeff3360,prod33CD);
          real basisEval3426#1 = RMul(coeff3341,prod33D1);
          real basisEval3427#1 = RMul(coeff334D,prod33D3);
          real basisEval3428#1 = RMul(coeff3341,prod33D5);
          tensor[84] intermediateCons3429#1 = <tensor[84]>[basisEval3340,basisEval3340,basisEval3340,basisEval3344,basisEval3340,basisEval3340,basisEval3340,basisEval3348,basisEval334C,basisEval3350,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3354,basisEval3357,basisEval335B,basisEval335D,basisEval335F,basisEval3363,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3367,basisEval336A,basisEval336D,basisEval3371,basisEval3373,basisEval3375,basisEval3377,basisEval3379,basisEval337B,basisEval337F,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3383,basisEval3386,basisEval3389,basisEval338C,basisEval3390,basisEval3392,basisEval3394,basisEval3396,basisEval3398,basisEval339A,basisEval339C,basisEval339E,basisEval33A0,basisEval33A2,basisEval33A6,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval33AA,basisEval33AD,basisEval33B0,basisEval33B3,basisEval33B6,basisEval33BA,basisEval33BC,basisEval33BE,basisEval33C0,basisEval33C2,basisEval33C4,basisEval33C6,basisEval33C8,basisEval33CA,basisEval33CC,basisEval33CE,basisEval33D0,basisEval33D2,basisEval33D4,basisEval33D6,basisEval33DA];
          tensor[84] intermediateCons342A#1 = <tensor[84]>[basisEval3340,basisEval3340,basisEval3344,basisEval3340,basisEval3340,basisEval3348,basisEval33DB,basisEval3340,basisEval33DC,basisEval3340,basisEval3340,basisEval3354,basisEval33DD,basisEval33DE,basisEval3340,basisEval33DF,basisEval335F,basisEval3340,basisEval33E0,basisEval3340,basisEval3340,basisEval3367,basisEval33E1,basisEval33E2,basisEval33E3,basisEval3340,basisEval33E4,basisEval3375,basisEval33E5,basisEval3340,basisEval33E6,basisEval33E7,basisEval3340,basisEval33E8,basisEval3340,basisEval3340,basisEval3383,basisEval33E9,basisEval33EA,basisEval33EB,basisEval33EC,basisEval3340,basisEval33ED,basisEval3394,basisEval33EE,basisEval33EF,basisEval3340,basisEval33F0,basisEval33F1,basisEval339E,basisEval3340,basisEval33F2,basisEval33F3,basisEval3340,basisEval33F4,basisEval3340,basisEval3340,basisEval33AA,basisEval33F5,basisEval33F6,basisEval33F7,basisEval33F8,basisEval33F9,basisEval3340,basisEval33FA,basisEval33BE,basisEval33FB,basisEval33FC,basisEval33FD,basisEval3340,basisEval33FE,basisEval33FF,basisEval33CA,basisEval3400,basisEval3340,basisEval3401,basisEval3402,basisEval3403,basisEval3340,basisEval3404,basisEval3405,basisEval3340,basisEval3406,basisEval3340];
          tensor[84] intermediateCons342B#1 = <tensor[84]>[basisEval3340,basisEval3344,basisEval3340,basisEval3340,basisEval3407,basisEval334C,basisEval3340,basisEval33DC,basisEval3340,basisEval3340,basisEval3408,basisEval33DD,basisEval335B,basisEval3340,basisEval335D,basisEval3409,basisEval3340,basisEval33E0,basisEval3340,basisEval3340,basisEval340A,basisEval340B,basisEval340C,basisEval3371,basisEval3340,basisEval340D,basisEval3375,basisEval340E,basisEval3340,basisEval340F,basisEval3410,basisEval3340,basisEval33E8,basisEval3340,basisEval3340,basisEval3411,basisEval3412,basisEval33EA,basisEval3413,basisEval3390,basisEval3340,basisEval3414,basisEval3415,basisEval3396,basisEval3416,basisEval3340,basisEval339A,basisEval33F1,basisEval3417,basisEval3340,basisEval3418,basisEval3419,basisEval3340,basisEval33F4,basisEval3340,basisEval3340,basisEval341A,basisEval341B,basisEval341C,basisEval341D,basisEval341E,basisEval33BA,basisEval3340,basisEval341F,basisEval3420,basisEval33FB,basisEval33C2,basisEval3421,basisEval3340,basisEval3422,basisEval33C8,basisEval3423,basisEval3424,basisEval3340,basisEval3425,basisEval3402,basisEval3426,basisEval3340,basisEval3427,basisEval3428,basisEval3340,basisEval3406,basisEval3340,basisEval3340];
          tensor[3,84] intermediateCons342C#1 = <tensor[3,84]>[intermediateCons3429,intermediateCons342A,intermediateCons342B];
          tensor[3,84] basisResult333C#3 = intermediateCons342C;
          tensor[84] projParam351F#1 = ProjectLast<tensor[3,84],[0]>(basisResult333C);
          real vdot3520#1 = VDot<84>(femDofs2E0F,projParam351F);
          tensor[84] projParam3521#1 = ProjectLast<tensor[3,84],[1]>(basisResult333C);
          real vdot3522#1 = VDot<84>(femDofs2E0F,projParam3521);
          tensor[84] projParam3523#1 = ProjectLast<tensor[3,84],[2]>(basisResult333C);
          real vdot3524#1 = VDot<84>(femDofs2E0F,projParam3523);
          tensor[3] probe_l_21351E#3 = <tensor[3]>[vdot3520,vdot3522,vdot3524];
          tensor[3] projParam352E#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_203327);
          tensor[3] negV352F#1 = VNeg<3>(projParam352E);
          tensor[3] projParam3530#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_203327);
          tensor[3] negV3531#1 = VNeg<3>(projParam3530);
          tensor[3] projParam3532#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_203327);
          tensor[3] negV3533#1 = VNeg<3>(projParam3532);
          tensor[3,3] op1_e3_l_22352D#3 = <tensor[3,3]>[negV352F,negV3531,negV3533];
          tensor[3] projParam353D#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_22352D);
          real vdot353E#1 = VDot<3>(projParam353D,probe_l_21351E);
          tensor[3] projParam353F#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_22352D);
          real vdot3540#1 = VDot<3>(projParam353F,probe_l_21351E);
          tensor[3] projParam3541#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_22352D);
          real vdot3542#1 = VDot<3>(projParam3541,probe_l_21351E);
          tensor[3] op1_e3_l_30353C#5 = <tensor[3]>[vdot353E,vdot3540,vdot3542];
          real op1_e3_l_32354B#1 = VDot<3>(op1_e3_l_30353C,op1_e3_l_30353C);
          real op1_e3_l_33354E#3 = Sqrt(op1_e3_l_32354B);
          real op1_e3_l_343551#1 = Abs<real>(op1_e3_l_33354E);
          real op1_e3_l_353554#1 = RDiv(op1_e3_l_343551,thick2323);
          real op1_e3_l_363557#1 = RSub(_t32AB,op1_e3_l_353554);
          real op1_e3_l_37355A#2 = RMul(_t32AD,op1_e3_l_363557);
          real op1_e3_l_38355D#1 = RClamp(_t32A9,_t32AB,op1_e3_l_37355A);
          real _t3560#1 = RMul(maxAlpha232B,op1_e3_l_38355D);
          bool _t3563#1 = EQ<real>(_t3560,_t32A9);
          if _t3563 then goto SAVE3566 else goto JOIN3568
        SAVE3566:  preds = [COND3565]
          self.rayN = rayN234F;
          active
          goto JOIN3568
        JOIN3568:  preds = [*ACTIVE3567,COND3565]
          real op1_e3_l_393569#1 = RClamp(_t32A9,_t32AB,op1_e3_l_37355A);
          real op1_e3_l_40356C#1 = RMul(maxAlpha232B,op1_e3_l_393569);
          real _t356F#1 = RSub(_t32AB,op1_e3_l_40356C);
          real _t3572#1 = MathFn<pow>(_t356F,alphaFix233F);
          bool _t3574#1 = NEQ<real>(phKs2347,_t32A9);
          if _t3574 then goto ASSIGN3579 else goto JOIN359C
        ASSIGN3579:  preds = [COND3576]
          tensor[3] op1_e3_l_243577#3 = VAdd<3>(eyeDir2341,litwsp2337);
          real op1_e3_l_26357A#1 = VDot<3>(op1_e3_l_243577,op1_e3_l_243577);
          real op1_e3_l_27357D#1 = Sqrt(op1_e3_l_26357A);
          real realLit3581#1 = 0.1e1;
          real op1_e3_l_543580#1 = RDiv(realLit3581,op1_e3_l_33354E);
          tensor[3] op1_e3_l_553585#1 = VScale<3>(op1_e3_l_543580,op1_e3_l_30353C);
          tensor[3] op1_e3_l_563588#1 = VNeg<3>(op1_e3_l_553585);
          real realLit358C#1 = 0.1e1;
          real op1_e3_l_58358B#1 = RDiv(realLit358C,op1_e3_l_27357D);
          real op1_e3_l_593590#1 = VDot<3>(op1_e3_l_563588,op1_e3_l_243577);
          real op1_e3_l_603593#1 = RMul(op1_e3_l_58358B,op1_e3_l_593590);
          real _t3596#1 = Abs<real>(op1_e3_l_603593);
          real scomp3599#1 = MathFn<pow>(_t3596,phSp2349);
          goto JOIN359C
        JOIN359C:  preds = [ASSIGN359A,COND3576]
          real scomp359B#1 = phi(scomp3599,_t32A9)
          real cmin359D#3 = VIndex<2,0>(cminmax2331);
          real cmax359F#2 = VIndex<2,1>(cminmax2331);
          tensor[3] mcol35A1#4 = <tensor[3]>[_t32AB,_t32AB,_t32AB];
          bool _t35A3#1 = NEQ<real>(cmin359D,cmax359F);
          if _t35A3 then goto ASSIGN35A9 else goto JOIN37E5
        ASSIGN35A9:  preds = [COND35A5]
          tensor[3] v35A7#1 = VAdd<3>(rayOrig233B,op1_e3_l_52358);
          tensor[3] _t35A6#3 = VAdd<3>(v35A7,op1_e3_l_30353C);
          real varAcc35AC#6 = VIndex<3,0>(_t35A6);
          real varAcc35AD#6 = VIndex<3,1>(_t35A6);
          real varAcc35AE#6 = VIndex<3,2>(_t35A6);
          real coeff35AF#126 = 0.1e1;
          real prod35B0#7 = RMul(coeff35AF,coeff35AF);
          real prod35B1#1 = RMul(coeff35AF,prod35B0);
          real basisEval35B2#1 = RMul(coeff35AF,prod35B1);
          real iden35B3#7 = varAcc35AE;
          real prod35B4#6 = RMul(coeff35AF,iden35B3);
          real prod35B5#1 = RMul(coeff35AF,prod35B4);
          real basisEval35B6#1 = RMul(coeff35AF,prod35B5);
          real iden35B7#7 = varAcc35AD;
          real prod35B8#6 = RMul(iden35B7,coeff35AF);
          real prod35B9#1 = RMul(coeff35AF,prod35B8);
          real basisEval35BA#1 = RMul(coeff35AF,prod35B9);
          real iden35BB#22 = varAcc35AC;
          real prod35BC#1 = RMul(iden35BB,prod35B0);
          real basisEval35BD#1 = RMul(coeff35AF,prod35BC);
          real prod235BE#6 = RMul(iden35B3,varAcc35AE);
          real prod35BF#5 = RMul(coeff35AF,prod235BE);
          real prod35C0#1 = RMul(coeff35AF,prod35BF);
          real basisEval35C1#1 = RMul(coeff35AF,prod35C0);
          real prod35C2#5 = RMul(iden35B7,iden35B3);
          real prod35C3#1 = RMul(coeff35AF,prod35C2);
          real basisEval35C4#1 = RMul(coeff35AF,prod35C3);
          real prod235C5#6 = RMul(iden35B7,varAcc35AD);
          real prod35C6#5 = RMul(prod235C5,coeff35AF);
          real prod35C7#1 = RMul(coeff35AF,prod35C6);
          real basisEval35C8#1 = RMul(coeff35AF,prod35C7);
          real prod35C9#1 = RMul(iden35BB,prod35B4);
          real basisEval35CA#1 = RMul(coeff35AF,prod35C9);
          real prod35CB#1 = RMul(iden35BB,prod35B8);
          real basisEval35CC#1 = RMul(coeff35AF,prod35CB);
          real prod235CD#16 = RMul(iden35BB,varAcc35AC);
          real prod35CE#1 = RMul(prod235CD,prod35B0);
          real basisEval35CF#1 = RMul(coeff35AF,prod35CE);
          real prod335D0#5 = RMul(prod235BE,varAcc35AE);
          real prod35D1#4 = RMul(coeff35AF,prod335D0);
          real prod35D2#1 = RMul(coeff35AF,prod35D1);
          real basisEval35D3#1 = RMul(coeff35AF,prod35D2);
          real prod35D4#4 = RMul(iden35B7,prod235BE);
          real prod35D5#1 = RMul(coeff35AF,prod35D4);
          real basisEval35D6#1 = RMul(coeff35AF,prod35D5);
          real prod35D7#4 = RMul(prod235C5,iden35B3);
          real prod35D8#1 = RMul(coeff35AF,prod35D7);
          real basisEval35D9#1 = RMul(coeff35AF,prod35D8);
          real prod335DA#5 = RMul(prod235C5,varAcc35AD);
          real prod35DB#4 = RMul(prod335DA,coeff35AF);
          real prod35DC#1 = RMul(coeff35AF,prod35DB);
          real basisEval35DD#1 = RMul(coeff35AF,prod35DC);
          real prod35DE#1 = RMul(iden35BB,prod35BF);
          real basisEval35DF#1 = RMul(coeff35AF,prod35DE);
          real prod35E0#1 = RMul(iden35BB,prod35C2);
          real basisEval35E1#1 = RMul(coeff35AF,prod35E0);
          real prod35E2#1 = RMul(iden35BB,prod35C6);
          real basisEval35E3#1 = RMul(coeff35AF,prod35E2);
          real prod35E4#1 = RMul(prod235CD,prod35B4);
          real basisEval35E5#1 = RMul(coeff35AF,prod35E4);
          real prod35E6#1 = RMul(prod235CD,prod35B8);
          real basisEval35E7#1 = RMul(coeff35AF,prod35E6);
          real prod335E8#11 = RMul(prod235CD,varAcc35AC);
          real prod35E9#1 = RMul(prod335E8,prod35B0);
          real basisEval35EA#1 = RMul(coeff35AF,prod35E9);
          real prod435EB#4 = RMul(prod335D0,varAcc35AE);
          real prod35EC#3 = RMul(coeff35AF,prod435EB);
          real prod35ED#1 = RMul(coeff35AF,prod35EC);
          real basisEval35EE#1 = RMul(coeff35AF,prod35ED);
          real prod35EF#3 = RMul(iden35B7,prod335D0);
          real prod35F0#1 = RMul(coeff35AF,prod35EF);
          real basisEval35F1#1 = RMul(coeff35AF,prod35F0);
          real prod35F2#3 = RMul(prod235C5,prod235BE);
          real prod35F3#1 = RMul(coeff35AF,prod35F2);
          real basisEval35F4#1 = RMul(coeff35AF,prod35F3);
          real prod35F5#3 = RMul(prod335DA,iden35B3);
          real prod35F6#1 = RMul(coeff35AF,prod35F5);
          real basisEval35F7#1 = RMul(coeff35AF,prod35F6);
          real prod435F8#4 = RMul(prod335DA,varAcc35AD);
          real prod35F9#3 = RMul(prod435F8,coeff35AF);
          real prod35FA#1 = RMul(coeff35AF,prod35F9);
          real basisEval35FB#1 = RMul(coeff35AF,prod35FA);
          real prod35FC#1 = RMul(iden35BB,prod35D1);
          real basisEval35FD#1 = RMul(coeff35AF,prod35FC);
          real prod35FE#1 = RMul(iden35BB,prod35D4);
          real basisEval35FF#1 = RMul(coeff35AF,prod35FE);
          real prod3600#1 = RMul(iden35BB,prod35D7);
          real basisEval3601#1 = RMul(coeff35AF,prod3600);
          real prod3602#1 = RMul(iden35BB,prod35DB);
          real basisEval3603#1 = RMul(coeff35AF,prod3602);
          real prod3604#1 = RMul(prod235CD,prod35BF);
          real basisEval3605#1 = RMul(coeff35AF,prod3604);
          real prod3606#1 = RMul(prod235CD,prod35C2);
          real basisEval3607#1 = RMul(coeff35AF,prod3606);
          real prod3608#1 = RMul(prod235CD,prod35C6);
          real basisEval3609#1 = RMul(coeff35AF,prod3608);
          real prod360A#1 = RMul(prod335E8,prod35B4);
          real basisEval360B#1 = RMul(coeff35AF,prod360A);
          real prod360C#1 = RMul(prod335E8,prod35B8);
          real basisEval360D#1 = RMul(coeff35AF,prod360C);
          real prod4360E#7 = RMul(prod335E8,varAcc35AC);
          real prod360F#1 = RMul(prod4360E,prod35B0);
          real basisEval3610#1 = RMul(coeff35AF,prod360F);
          real prod53611#3 = RMul(prod435EB,varAcc35AE);
          real prod3612#2 = RMul(coeff35AF,prod53611);
          real prod3613#1 = RMul(coeff35AF,prod3612);
          real basisEval3614#1 = RMul(coeff35AF,prod3613);
          real prod3615#2 = RMul(iden35B7,prod435EB);
          real prod3616#1 = RMul(coeff35AF,prod3615);
          real basisEval3617#1 = RMul(coeff35AF,prod3616);
          real prod3618#2 = RMul(prod235C5,prod335D0);
          real prod3619#1 = RMul(coeff35AF,prod3618);
          real basisEval361A#1 = RMul(coeff35AF,prod3619);
          real prod361B#2 = RMul(prod335DA,prod235BE);
          real prod361C#1 = RMul(coeff35AF,prod361B);
          real basisEval361D#1 = RMul(coeff35AF,prod361C);
          real prod361E#2 = RMul(prod435F8,iden35B3);
          real prod361F#1 = RMul(coeff35AF,prod361E);
          real basisEval3620#1 = RMul(coeff35AF,prod361F);
          real prod53621#3 = RMul(prod435F8,varAcc35AD);
          real prod3622#2 = RMul(prod53621,coeff35AF);
          real prod3623#1 = RMul(coeff35AF,prod3622);
          real basisEval3624#1 = RMul(coeff35AF,prod3623);
          real prod3625#1 = RMul(iden35BB,prod35EC);
          real basisEval3626#1 = RMul(coeff35AF,prod3625);
          real prod3627#1 = RMul(iden35BB,prod35EF);
          real basisEval3628#1 = RMul(coeff35AF,prod3627);
          real prod3629#1 = RMul(iden35BB,prod35F2);
          real basisEval362A#1 = RMul(coeff35AF,prod3629);
          real prod362B#1 = RMul(iden35BB,prod35F5);
          real basisEval362C#1 = RMul(coeff35AF,prod362B);
          real prod362D#1 = RMul(iden35BB,prod35F9);
          real basisEval362E#1 = RMul(coeff35AF,prod362D);
          real prod362F#1 = RMul(prod235CD,prod35D1);
          real basisEval3630#1 = RMul(coeff35AF,prod362F);
          real prod3631#1 = RMul(prod235CD,prod35D4);
          real basisEval3632#1 = RMul(coeff35AF,prod3631);
          real prod3633#1 = RMul(prod235CD,prod35D7);
          real basisEval3634#1 = RMul(coeff35AF,prod3633);
          real prod3635#1 = RMul(prod235CD,prod35DB);
          real basisEval3636#1 = RMul(coeff35AF,prod3635);
          real prod3637#1 = RMul(prod335E8,prod35BF);
          real basisEval3638#1 = RMul(coeff35AF,prod3637);
          real prod3639#1 = RMul(prod335E8,prod35C2);
          real basisEval363A#1 = RMul(coeff35AF,prod3639);
          real prod363B#1 = RMul(prod335E8,prod35C6);
          real basisEval363C#1 = RMul(coeff35AF,prod363B);
          real prod363D#1 = RMul(prod4360E,prod35B4);
          real basisEval363E#1 = RMul(coeff35AF,prod363D);
          real prod363F#1 = RMul(prod4360E,prod35B8);
          real basisEval3640#1 = RMul(coeff35AF,prod363F);
          real prod53641#4 = RMul(prod4360E,varAcc35AC);
          real prod3642#1 = RMul(prod53641,prod35B0);
          real basisEval3643#1 = RMul(coeff35AF,prod3642);
          real prod63644#1 = RMul(prod53611,varAcc35AE);
          real prod3645#1 = RMul(coeff35AF,prod63644);
          real prod3646#1 = RMul(coeff35AF,prod3645);
          real basisEval3647#1 = RMul(coeff35AF,prod3646);
          real prod3648#1 = RMul(iden35B7,prod53611);
          real prod3649#1 = RMul(coeff35AF,prod3648);
          real basisEval364A#1 = RMul(coeff35AF,prod3649);
          real prod364B#1 = RMul(prod235C5,prod435EB);
          real prod364C#1 = RMul(coeff35AF,prod364B);
          real basisEval364D#1 = RMul(coeff35AF,prod364C);
          real prod364E#1 = RMul(prod335DA,prod335D0);
          real prod364F#1 = RMul(coeff35AF,prod364E);
          real basisEval3650#1 = RMul(coeff35AF,prod364F);
          real prod3651#1 = RMul(prod435F8,prod235BE);
          real prod3652#1 = RMul(coeff35AF,prod3651);
          real basisEval3653#1 = RMul(coeff35AF,prod3652);
          real prod3654#1 = RMul(prod53621,iden35B3);
          real prod3655#1 = RMul(coeff35AF,prod3654);
          real basisEval3656#1 = RMul(coeff35AF,prod3655);
          real prod63657#1 = RMul(prod53621,varAcc35AD);
          real prod3658#1 = RMul(prod63657,coeff35AF);
          real prod3659#1 = RMul(coeff35AF,prod3658);
          real basisEval365A#1 = RMul(coeff35AF,prod3659);
          real prod365B#1 = RMul(iden35BB,prod3612);
          real basisEval365C#1 = RMul(coeff35AF,prod365B);
          real prod365D#1 = RMul(iden35BB,prod3615);
          real basisEval365E#1 = RMul(coeff35AF,prod365D);
          real prod365F#1 = RMul(iden35BB,prod3618);
          real basisEval3660#1 = RMul(coeff35AF,prod365F);
          real prod3661#1 = RMul(iden35BB,prod361B);
          real basisEval3662#1 = RMul(coeff35AF,prod3661);
          real prod3663#1 = RMul(iden35BB,prod361E);
          real basisEval3664#1 = RMul(coeff35AF,prod3663);
          real prod3665#1 = RMul(iden35BB,prod3622);
          real basisEval3666#1 = RMul(coeff35AF,prod3665);
          real prod3667#1 = RMul(prod235CD,prod35EC);
          real basisEval3668#1 = RMul(coeff35AF,prod3667);
          real prod3669#1 = RMul(prod235CD,prod35EF);
          real basisEval366A#1 = RMul(coeff35AF,prod3669);
          real prod366B#1 = RMul(prod235CD,prod35F2);
          real basisEval366C#1 = RMul(coeff35AF,prod366B);
          real prod366D#1 = RMul(prod235CD,prod35F5);
          real basisEval366E#1 = RMul(coeff35AF,prod366D);
          real prod366F#1 = RMul(prod235CD,prod35F9);
          real basisEval3670#1 = RMul(coeff35AF,prod366F);
          real prod3671#1 = RMul(prod335E8,prod35D1);
          real basisEval3672#1 = RMul(coeff35AF,prod3671);
          real prod3673#1 = RMul(prod335E8,prod35D4);
          real basisEval3674#1 = RMul(coeff35AF,prod3673);
          real prod3675#1 = RMul(prod335E8,prod35D7);
          real basisEval3676#1 = RMul(coeff35AF,prod3675);
          real prod3677#1 = RMul(prod335E8,prod35DB);
          real basisEval3678#1 = RMul(coeff35AF,prod3677);
          real prod3679#1 = RMul(prod4360E,prod35BF);
          real basisEval367A#1 = RMul(coeff35AF,prod3679);
          real prod367B#1 = RMul(prod4360E,prod35C2);
          real basisEval367C#1 = RMul(coeff35AF,prod367B);
          real prod367D#1 = RMul(prod4360E,prod35C6);
          real basisEval367E#1 = RMul(coeff35AF,prod367D);
          real prod367F#1 = RMul(prod53641,prod35B4);
          real basisEval3680#1 = RMul(coeff35AF,prod367F);
          real prod3681#1 = RMul(prod53641,prod35B8);
          real basisEval3682#1 = RMul(coeff35AF,prod3681);
          real prod63683#1 = RMul(prod53641,varAcc35AC);
          real prod3684#1 = RMul(prod63683,prod35B0);
          real basisEval3685#1 = RMul(coeff35AF,prod3684);
          tensor[84] intermediateCons3686#1 = <tensor[84]>[basisEval35B2,basisEval35B6,basisEval35BA,basisEval35BD,basisEval35C1,basisEval35C4,basisEval35C8,basisEval35CA,basisEval35CC,basisEval35CF,basisEval35D3,basisEval35D6,basisEval35D9,basisEval35DD,basisEval35DF,basisEval35E1,basisEval35E3,basisEval35E5,basisEval35E7,basisEval35EA,basisEval35EE,basisEval35F1,basisEval35F4,basisEval35F7,basisEval35FB,basisEval35FD,basisEval35FF,basisEval3601,basisEval3603,basisEval3605,basisEval3607,basisEval3609,basisEval360B,basisEval360D,basisEval3610,basisEval3614,basisEval3617,basisEval361A,basisEval361D,basisEval3620,basisEval3624,basisEval3626,basisEval3628,basisEval362A,basisEval362C,basisEval362E,basisEval3630,basisEval3632,basisEval3634,basisEval3636,basisEval3638,basisEval363A,basisEval363C,basisEval363E,basisEval3640,basisEval3643,basisEval3647,basisEval364A,basisEval364D,basisEval3650,basisEval3653,basisEval3656,basisEval365A,basisEval365C,basisEval365E,basisEval3660,basisEval3662,basisEval3664,basisEval3666,basisEval3668,basisEval366A,basisEval366C,basisEval366E,basisEval3670,basisEval3672,basisEval3674,basisEval3676,basisEval3678,basisEval367A,basisEval367C,basisEval367E,basisEval3680,basisEval3682,basisEval3685];
          tensor[84] basisResult35AB#1 = intermediateCons3686;
          real probe_l_83763#1 = VDot<84>(femDofs2E0F,basisResult35AB);
          real op1_e3_l_93766#1 = RSub(probe_l_83763,cmin359D);
          real op1_e3_l_103769#1 = RSub(cmax359F,cmin359D);
          real op1_e3_l_11376C#1 = RDiv(op1_e3_l_93766,op1_e3_l_103769);
          real op1_e3_l_12376F#1 = RSub(_t32AB,_t32A9);
          real op1_e3_l_133772#1 = RMul(op1_e3_l_11376C,op1_e3_l_12376F);
          real _t3775#1 = RAdd(_t32A9,op1_e3_l_133772);
          real Mtransform3778#1 = Transform<IMAGE1D<double[3]>>(cmap2311);
          real MxPos377A#1 = RMul(Mtransform3778,_t3775);
          real Ttranslate377D#1 = Translate<IMAGE1D<double[3]>>(cmap2311);
          real imgPos377F#2 = RAdd(MxPos377A,Ttranslate377D);
          real nd3782#2 = Floor<1>(imgPos377F);
          real f3784#2 = RSub(imgPos377F,nd3782);
          int n3787#1 = RealToInt<1>(nd3782);
          int idx3789#5 = n3787;
          bool isInside378B#1 = IndexInside<IMAGE1D<double[3]>,2>(idx3789,cmap2311);
          if isInside378B then goto ASSIGN37A5 else goto ASSIGN3880
        ASSIGN37A5:  preds = [COND378D]
          int ilit378F#1 = 0;
          int addRes3790#1 = IAdd(idx3789,ilit378F);
          int stride3791#2 = 3;
          int offp3792#3 = IMul(stride3791,addRes3790);
          real v0_3793#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3792);
          int ilit3794#3 = 1;
          int addRes3795#1 = IAdd(idx3789,ilit3794);
          int offp3796#3 = IMul(stride3791,addRes3795);
          real v1_3797#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3796);
          tensor[2] v_3798#1 = <tensor[2]>[v0_3793,v1_3797];
          int offp3799#1 = IAdd(offp3792,ilit3794);
          real v0_379A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3799);
          int offp379B#1 = IAdd(offp3796,ilit3794);
          real v1_379C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379B);
          tensor[2] v_379D#1 = <tensor[2]>[v0_379A,v1_379C];
          int offset379E#2 = 2;
          int offp379F#1 = IAdd(offp3792,offset379E);
          real v0_37A0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379F);
          int offp37A1#1 = IAdd(offp3796,offset379E);
          real v1_37A2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp37A1);
          tensor[2] v_37A3#1 = <tensor[2]>[v0_37A0,v1_37A2];
          tensor[3,2] voxels37A4#1 = <tensor[3,2]>[v_3798,v_379D,v_37A3];
          tensor[3,2] ldvox378E#1 = voxels37A4;
          goto JOIN37BE
        JOIN37BE:  preds = [ASSIGN37BB,ASSIGN3898]
          tensor[3,2] ldvox37BC#3 = phi(ldvox378E,ldvox37BD)
          real rlit37C0#1 = 0.1e1;
          real idx37C1#1 = RSub(f3784,rlit37C0);
          tensor[2] kernX_37BF#1 = <tensor[2]>[f3784,idx37C1];
          real _f37CA#1 = 0.1e1;
          real _f37CB#1 = 0.1e1;
          tensor[2] a037C6#1 = <tensor[2]>[_f37CA,_f37CB];
          real _f37C8#1 = -0.1e1;
          real _f37C9#1 = 0.1e1;
          tensor[2] a137C7#1 = <tensor[2]>[_f37C8,_f37C9];
          tensor[2] prod137CC#1 = VMul<2>(kernX_37BF,a137C7);
          tensor[2] kevalX_d0_37C5#3 = VAdd<2>(a037C6,prod137CC);
          tensor[2] projIx37D6#1 = ProjectLast<tensor[3,2],[0]>(ldvox37BC);
          real vdot37D7#1 = VDot<2>(projIx37D6,kevalX_d0_37C5);
          tensor[2] projIx37D8#1 = ProjectLast<tensor[3,2],[1]>(ldvox37BC);
          real vdot37D9#1 = VDot<2>(projIx37D8,kevalX_d0_37C5);
          tensor[2] projIx37DA#1 = ProjectLast<tensor[3,2],[2]>(ldvox37BC);
          real vdot37DB#1 = VDot<2>(projIx37DA,kevalX_d0_37C5);
          tensor[3] mcol37D5#1 = <tensor[3]>[vdot37D7,vdot37D9,vdot37DB];
          goto JOIN37E5
        JOIN37E5:  preds = [ASSIGN37E3,COND35A5]
          tensor[3] mcol37E4#3 = phi(mcol37D5,mcol35A1)
          real realLit37E7#1 = 0.1e1;
          real op1_e3_l_6337E6#1 = RDiv(realLit37E7,op1_e3_l_33354E);
          tensor[3] op1_e3_l_6437EB#1 = VScale<3>(op1_e3_l_6337E6,op1_e3_l_30353C);
          tensor[3] op1_e3_l_6537EE#1 = VNeg<3>(op1_e3_l_6437EB);
          real op1_e3_l_6637F1#2 = VDot<3>(op1_e3_l_6537EE,litwsp2337);
          real op1_e3_l_6737F4#1 = RMul(op1_e3_l_6637F1,op1_e3_l_6637F1);
          real op1_e3_l_6837F7#1 = RMul(phKd2345,op1_e3_l_6737F4);
          real op1_e3_l_7037FA#1 = RSub(rayN234F,camNearVsp2333);
          real op1_e3_l_7137FD#1 = RSub(camFarVsp2335,camNearVsp2333);
          real op1_e3_l_723800#1 = RDiv(op1_e3_l_7037FA,op1_e3_l_7137FD);
          tensor[3] op1_e3_l_733803#1 = VSub<3>(mcFar232F,mcNear232D);
          tensor[3] op1_e3_l_743806#1 = VScale<3>(op1_e3_l_723800,op1_e3_l_733803);
          real op1_e3_l_753809#3 = RAdd(phKa2343,op1_e3_l_6837F7);
          tensor[3] op1_e3_l_76380C#3 = VAdd<3>(mcNear232D,op1_e3_l_743806);
          real r3810#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_76380C);
          real r3811#1 = TensorIndex<tensor[3],[0]>(mcol37E4);
          real r3812#1 = RMul(op1_e3_l_753809,r3810);
          real r3813#1 = RMul(r3812,r3811);
          real r3814#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_76380C);
          real r3815#1 = TensorIndex<tensor[3],[1]>(mcol37E4);
          real r3816#1 = RMul(op1_e3_l_753809,r3814);
          real r3817#1 = RMul(r3816,r3815);
          real r3818#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_76380C);
          real r3819#1 = TensorIndex<tensor[3],[2]>(mcol37E4);
          real r381A#1 = RMul(op1_e3_l_753809,r3818);
          real r381B#1 = RMul(r381A,r3819);
          tensor[3] op1_e3_l_77380F#1 = <tensor[3]>[r3813,r3817,r381B];
          real r382B#1 = TensorIndex<tensor[3],[0]>(mcol35A1);
          real r382C#3 = RMul(phKs2347,scomp359B);
          real r382D#1 = RMul(r382C,r382B);
          real r382E#1 = TensorIndex<tensor[3],[1]>(mcol35A1);
          real r382F#1 = RMul(r382C,r382E);
          real r3830#1 = TensorIndex<tensor[3],[2]>(mcol35A1);
          real r3831#1 = RMul(r382C,r3830);
          tensor[3] op1_e3_l_78382A#1 = <tensor[3]>[r382D,r382F,r3831];
          real op1_e3_l_79383B#2 = RSub(_t32AB,_t3572);
          tensor[3] op1_e3_l_80383E#3 = VAdd<3>(op1_e3_l_77380F,op1_e3_l_78382A);
          real r3842#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_80383E);
          real r3843#3 = RMul(transp234D,op1_e3_l_79383B);
          real r3844#1 = RMul(r3843,r3842);
          real r3845#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_80383E);
          real r3846#1 = RMul(r3843,r3845);
          real r3847#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_80383E);
          real r3848#1 = RMul(r3843,r3847);
          tensor[3] op1_e3_l_813841#1 = <tensor[3]>[r3844,r3846,r3848];
          tensor[3] rgb3852#2 = VAdd<3>(rgb234B,op1_e3_l_813841);
          real op1_e3_l_53855#1 = RSub(_t32AB,op1_e3_l_79383B);
          real transp3858#2 = RMul(transp234D,op1_e3_l_53855);
          bool _t385B#1 = LT<real>(transp3858,transp02321);
          if _t385B then goto SAVE385E else goto JOIN3863
        SAVE385E:  preds = [COND385D]
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = _t32A9;
          stabilize
          goto JOIN3863
        JOIN3863:  preds = [*STABILIZE3861,COND385D]
          real transp3862#1 = phi(transp3858)
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = transp3862;
          active
        ASSIGN3880:  preds = [COND378D]
          int ilit3868#1 = 0;
          int addRes3869#1 = IAdd(idx3789,ilit3868);
          int ix386A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,addRes3869);
          int stride386B#2 = 3;
          int offp386C#3 = IMul(stride386B,ix386A);
          real v0_386D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp386C);
          int ilit386E#3 = 1;
          int addRes386F#1 = IAdd(idx3789,ilit386E);
          int ix3870#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,addRes386F);
          int offp3871#3 = IMul(stride386B,ix3870);
          real v1_3872#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3871);
          tensor[2] v_3873#1 = <tensor[2]>[v0_386D,v1_3872];
          int offp3874#1 = IAdd(offp386C,ilit386E);
          real v0_3875#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3874);
          int offp3876#1 = IAdd(offp3871,ilit386E);
          real v1_3877#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3876);
          tensor[2] v_3878#1 = <tensor[2]>[v0_3875,v1_3877];
          int offset3879#2 = 2;
          int offp387A#1 = IAdd(offp386C,offset3879);
          real v0_387B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387A);
          int offp387C#1 = IAdd(offp3871,offset3879);
          real v1_387D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387C);
          tensor[2] v_387E#1 = <tensor[2]>[v0_387B,v1_387D];
          tensor[3,2] voxels387F#1 = <tensor[3,2]>[v_3873,v_3878,v_387E];
          tensor[3,2] ldvox37BD#1 = voxels387F;
          goto JOIN37BE
        ASSIGN3899:  preds = [COND2BFD]
          bool _t2C01#1 = false;
          goto JOIN2C02
        ASSIGN389A:  preds = [COND2BF8]
          bool _t2C04#1 = false;
          goto JOIN2C05
        ASSIGN389B:  preds = [COND2364]
          bool _t2C07#1 = false;
          goto JOIN2C08
    end update
    method stabilize
        ENTRY389C:  preds = []
          tensor[4] rgba389D#1 = self.rgba;
          tensor[3] rgb389F#3 = self.rgb;
          real transp38A1#2 = self.transp;
          real _t38A3#2 = 0.1e1;
          bool _t38A5#1 = LT<real>(transp38A1,_t38A3);
          if _t38A5 then goto ASSIGN38AA else goto JOIN38BD
        ASSIGN38AA:  preds = [COND38A7]
          real aa38A8#4 = RSub(_t38A3,transp38A1);
          real _t38AB#1 = VIndex<3,0>(rgb389F);
          real _t38AD#1 = RDiv(_t38AB,aa38A8);
          real _t38B0#1 = VIndex<3,1>(rgb389F);
          real _t38B2#1 = RDiv(_t38B0,aa38A8);
          real _t38B5#1 = VIndex<3,2>(rgb389F);
          real _t38B7#1 = RDiv(_t38B5,aa38A8);
          tensor[4] rgba38BA#1 = <tensor[4]>[_t38AD,_t38B2,_t38B7,aa38A8];
          goto JOIN38BD
        JOIN38BD:  preds = [ASSIGN38BB,COND38A7]
          tensor[4] rgba38BC#1 = phi(rgba38BA,rgba389D)
          self.rgba = rgba38BC;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY38C0:  preds = []
      int iresU38C1#1 = globals.iresU2033;
      int iresV38C3#1 = globals.iresV2034;
      int _t38C5#2 = 0;
      int _t38C7#2 = 1;
      int _t38C9#1 = ISub(iresV38C3,_t38C7);
      int[] _t38CB#1 = Range(_t38C5,_t38C9);
    FOREACH38CE:  preds = [ASSIGN38CC,NEXT38D7]
      foreach (vi38CD in _t38CB) on exit goto RETURN38D8
      int _t38CF#1 = ISub(iresU38C1,_t38C7);
      int[] _t38D1#1 = Range(_t38C5,_t38CF);
    FOREACH38D4:  preds = [ASSIGN38D2,NEXT38D6]
      foreach (ui38D3 in _t38D1) on exit goto NEXT38D7
      new ray(ui38D3,vi38CD);
      goto FOREACH38D4
    NEXT38D7:  preds = [FOREACH38D4]
      goto FOREACH38CE
    RETURN38D8:  preds = [FOREACH38CE]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2027 (block) = <no-default>
  input 0space04CF_intermedateGlobal2028 (space) = <no-default>
  input 0U04D1_intermedateGlobal2029 (U) = <no-default>
  input cellChoice202A (cellChoice) = <no-default>
  input cmap202B (cmap) = image("cmap.nrrd")
  input camEye202C (camEye) = <default>
  input camAt202D (camAt) = <default>
  input camUp202E (camUp) = <default>
  input camNear202F (camNear) = <default>
  input camFar2030 (camFar) = <default>
  input camFOV2031 (camFOV) = <default>
  input camOrtho2032 (camOrtho) = <default>
  input iresU2033 (iresU) = <default>
  input iresV2034 (iresV) = <default>
  input rayStep2035 (rayStep) = <default>
  input refStep2036 (refStep) = <default>
  input transp02037 (transp0) = <default>
  input thick2038 (thick) = <default>
  input fStrTh2039 (fStrTh) = <default>
  input fMaskTh203A (fMaskTh) = <default>
  input fBias203B (fBias) = <default>
  input maxAlpha203C (maxAlpha) = <default>
  input light203D (light) = <default>
  input phong203E (phong) = <default>
  input mcNear203F (mcNear) = <default>
  input mcFar2040 (mcFar) = <default>
  input litdir2041 (litdir) = <default>
  input cminmax2042 (cminmax) = <default>
  global tensor[3] camN2043
  global tensor[3] camU2044
  global tensor[3] camV2045
  global real camDist2046
  global real camVmax2047
  global real camUmax2048
  global real camNearVsp2049
  global real camFarVsp204A
  global tensor[3] litwsp204B
  global int _t204C
  global femData:Space _tX204D
  global femData:FemFunc _tXX204E
## functions
## input initialization
  ENTRY2051:  preds = []
    real _t2052#13 = 0.e0;
    real _t2054#1 = -0.2e1;
    tensor[3] camEye2056#1 = <tensor[3]>[_t2052,_t2054,_t2052];
    globals.camEye202C = camEye2056;
    tensor[3] camAt2059#1 = <tensor[3]>[_t2052,_t2052,_t2052];
    globals.camAt202D = camAt2059;
    real _t205C#5 = 0.1e1;
    tensor[3] camUp205E#1 = <tensor[3]>[_t2052,_t2052,_t205C];
    globals.camUp202E = camUp205E;
    real camNear2061#1 = -0.4e1;
    globals.camNear202F = camNear2061;
    real camFar2064#1 = 0.4e1;
    globals.camFar2030 = camFar2064;
    real camFOV2067#1 = 0.1e2;
    globals.camFOV2031 = camFOV2067;
    bool camOrtho206A#2 = false;
    globals.camOrtho2032 = camOrtho206A;
    int iresU206D#2 = 100;
    globals.iresU2033 = iresU206D;
    globals.iresV2034 = iresU206D;
    real rayStep2071#2 = 0.1e-3;
    globals.rayStep2035 = rayStep2071;
    globals.refStep2036 = rayStep2071;
    real transp02075#1 = 0.5e-2;
    globals.transp02037 = transp02075;
    real thick2078#1 = 0.1e-1;
    globals.thick2038 = thick2078;
    globals.fStrTh2039 = _t2052;
    globals.fMaskTh203A = _t2052;
    real fBias207D#2 = 0.1e0;
    globals.fBias203B = fBias207D;
    globals.maxAlpha203C = _t205C;
    globals.light203D = camOrtho206A;
    real _t2082#1 = 0.7e0;
    real _t2084#1 = 0.2e0;
    real _t2086#1 = 0.1e3;
    tensor[4] phong2088#1 = <tensor[4]>[fBias207D,_t2082,_t2084,_t2086];
    globals.phong203E = phong2088;
    tensor[3] mcNear208B#2 = <tensor[3]>[_t205C,_t205C,_t205C];
    globals.mcNear203F = mcNear208B;
    globals.mcFar2040 = mcNear208B;
    real _t208F#1 = -0.1e1;
    tensor[3] litdir2091#1 = <tensor[3]>[_t2052,_t208F,_t2052];
    globals.litdir2041 = litdir2091;
    tensor[2] cminmax2094#1 = <tensor[2]>[_t2052,_t2052];
    globals.cminmax2042 = cminmax2094;
    return
## global-variable initialization
  ENTRY2098:  preds = []
    femData:Mesh block2099#3 = globals.block2027;
    femData:Space 0space04CF_intermedateGlobal209B#1 = globals.0space04CF_intermedateGlobal2028;
    femData:FemFunc 0U04D1_intermedateGlobal209D#1 = globals.0U04D1_intermedateGlobal2029;
    int cellChoice209F#1 = globals.cellChoice202A;
    tensor[3] camEye20A3#1 = globals.camEye202C;
    tensor[3] camAt20A5#1 = globals.camAt202D;
    tensor[3] camUp20A7#3 = globals.camUp202E;
    real camNear20A9#1 = globals.camNear202F;
    real camFar20AB#1 = globals.camFar2030;
    real camFOV20AD#1 = globals.camFOV2031;
    int iresU20AF#1 = globals.iresU2033;
    int iresV20B1#1 = globals.iresV2034;
    tensor[3] litdir20B3#5 = globals.litdir2041;
    int _t20B5#1 = 0;
    int _t20B7#1 = 1;
    int _t20B9#1 = ExtractFemItem<int,NumCell(Mesh)>(block2099);
    int _t20BB#1 = ISub(_t20B9,_t20B7);
    int[] _t20BD#1 = Range(_t20B5,_t20BB);
    femData:MeshCell[] _t20BF#1 = <femData:MeshCell[]>{};
  FOREACH20C2:  preds = [ASSIGN20C0,NEXT20C8]
    foreach (_t20C1 in _t20BD) on exit goto ASSIGN20CA
      femData:MeshCell[] _t20C6#2 = phi(_t20BF,_t20C5)
    femData:MeshCell _t20C3#1 = LoadFem<femData:MeshCell>(block2099,_t20C1);
    femData:MeshCell[] _t20C5#1 = Append<femData:MeshCell>(_t20C6,_t20C3);
    goto FOREACH20C2
  ASSIGN20CA:  preds = [FOREACH20C2]
    femData:Space space20C9#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal209B,block2099);
    femData:FemFunc U20CB#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal209D,space20C9);
    femData:MeshCell c120CD#1 = Subscript<femData:MeshCell[]>(_t20C6,cellChoice209F);
    int _t20CF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c120CD);
    femData:FuncCell _t20D1#2 = LoadFem<femData:FuncCell>(U20CB,_t20CF);
    femData:FemFunc _t20D3#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t20D1);
    femData:Space _t20D5#1 = ExtractFem<femData:Space,femData:FemFunc>(_t20D3);
    int _t20D7#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t20D1);
    tensor[3] op1_e3_l_420DD#9 = VSub<3>(camAt20A5,camEye20A3);
    real op1_e3_l_620E0#1 = VDot<3>(op1_e3_l_420DD,op1_e3_l_420DD);
    real op1_e3_l_720E3#6 = Sqrt(op1_e3_l_620E0);
    real realLit20E7#1 = 0.1e1;
    real op1_e3_l_920E6#6 = RDiv(realLit20E7,op1_e3_l_720E3);
    tensor[3] camN20EB#4 = VScale<3>(op1_e3_l_920E6,op1_e3_l_420DD);
    globals.camN2043 = camN20EB;
    real realLit20F0#3 = 0.e0;
    real r20F1#3 = TensorIndex<tensor[3],[0]>(camUp20A7);
    real r20F2#3 = RMul(realLit20F0,r20F1);
    real r20F3#3 = TensorIndex<tensor[3],[1]>(camUp20A7);
    real r20F4#3 = RMul(realLit20F0,r20F3);
    real r20F5#3 = TensorIndex<tensor[3],[2]>(camUp20A7);
    real r20F6#5 = RMul(realLit20F0,r20F5);
    real r20F7#3 = RAdd(r20F2,r20F4);
    real r20F8#3 = RAdd(r20F7,r20F6);
    real realLit20F9#3 = 0.1e1;
    real r20FA#1 = RMul(realLit20F9,r20F5);
    real r20FB#1 = RAdd(r20F7,r20FA);
    real realLit20FC#3 = -0.1e1;
    real r20FD#1 = RMul(realLit20FC,r20F3);
    real r20FE#1 = RAdd(r20F2,r20FD);
    real r20FF#1 = RAdd(r20FE,r20F6);
    tensor[3] tensor2100#1 = <tensor[3]>[r20F8,r20FB,r20FF];
    real r2101#1 = RMul(realLit20FC,r20F5);
    real r2102#1 = RAdd(r20F7,r2101);
    real r2103#1 = RMul(realLit20F9,r20F1);
    real r2104#1 = RAdd(r2103,r20F4);
    real r2105#1 = RAdd(r2104,r20F6);
    tensor[3] tensor2106#1 = <tensor[3]>[r2102,r20F8,r2105];
    real r2107#1 = RMul(realLit20F9,r20F3);
    real r2108#1 = RAdd(r20F2,r2107);
    real r2109#1 = RAdd(r2108,r20F6);
    real r210A#1 = RMul(realLit20FC,r20F1);
    real r210B#1 = RAdd(r210A,r20F4);
    real r210C#1 = RAdd(r210B,r20F6);
    tensor[3] tensor210D#1 = <tensor[3]>[r2109,r210C,r20F8];
    tensor[3] projParam212F#1 = tensor2100;
    real vdot2130#2 = VDot<3>(op1_e3_l_420DD,projParam212F);
    tensor[3] projParam2131#1 = tensor2106;
    real vdot2132#2 = VDot<3>(op1_e3_l_420DD,projParam2131);
    tensor[3] projParam2133#1 = tensor210D;
    real vdot2134#2 = VDot<3>(op1_e3_l_420DD,projParam2133);
    tensor[3] op1_e3_l_17212E#3 = <tensor[3]>[vdot2130,vdot2132,vdot2134];
    real op1_e3_l_34213D#1 = VDot<3>(op1_e3_l_17212E,op1_e3_l_17212E);
    real r2141#1 = RMul(op1_e3_l_920E6,op1_e3_l_920E6);
    real op1_e3_l_352140#1 = RMul(r2141,op1_e3_l_34213D);
    real op1_e3_l_362145#1 = Sqrt(op1_e3_l_352140);
    tensor[3] op1_e3_l_372148#1 = VScale<3>(op1_e3_l_920E6,op1_e3_l_17212E);
    real realLit214C#1 = 0.1e1;
    real op1_e3_l_38214B#2 = RDiv(realLit214C,op1_e3_l_362145);
    tensor[3] camU2150#4 = VScale<3>(op1_e3_l_38214B,op1_e3_l_372148);
    globals.camU2044 = camU2150;
    real realLit2155#3 = 0.e0;
    real r2156#3 = vdot2130;
    real r2157#3 = RMul(realLit2155,r2156);
    real r2158#3 = vdot2132;
    real r2159#3 = RMul(realLit2155,r2158);
    real r215A#3 = vdot2134;
    real r215B#5 = RMul(realLit2155,r215A);
    real r215C#3 = RAdd(r2157,r2159);
    real r215D#3 = RAdd(r215C,r215B);
    real realLit215E#3 = 0.1e1;
    real r215F#1 = RMul(realLit215E,r215A);
    real r2160#1 = RAdd(r215C,r215F);
    real realLit2161#3 = -0.1e1;
    real r2162#1 = RMul(realLit2161,r2158);
    real r2163#1 = RAdd(r2157,r2162);
    real r2164#1 = RAdd(r2163,r215B);
    tensor[3] tensor2165#1 = <tensor[3]>[r215D,r2160,r2164];
    real r2166#1 = RMul(realLit2161,r215A);
    real r2167#1 = RAdd(r215C,r2166);
    real r2168#1 = RMul(realLit215E,r2156);
    real r2169#1 = RAdd(r2168,r2159);
    real r216A#1 = RAdd(r2169,r215B);
    tensor[3] tensor216B#1 = <tensor[3]>[r2167,r215D,r216A];
    real r216C#1 = RMul(realLit215E,r2158);
    real r216D#1 = RAdd(r2157,r216C);
    real r216E#1 = RAdd(r216D,r215B);
    real r216F#1 = RMul(realLit2161,r2156);
    real r2170#1 = RAdd(r216F,r2159);
    real r2171#1 = RAdd(r2170,r215B);
    tensor[3] tensor2172#1 = <tensor[3]>[r216E,r2171,r215D];
    tensor[3] projParam2194#1 = tensor2165;
    real vdot2195#1 = VDot<3>(op1_e3_l_420DD,projParam2194);
    tensor[3] projParam2196#1 = tensor216B;
    real vdot2197#1 = VDot<3>(op1_e3_l_420DD,projParam2196);
    tensor[3] projParam2198#1 = tensor2172;
    real vdot2199#1 = VDot<3>(op1_e3_l_420DD,projParam2198);
    tensor[3] op1_e3_l_472193#1 = <tensor[3]>[vdot2195,vdot2197,vdot2199];
    tensor[3] op1_e3_l_5021A2#3 = VScale<3>(op1_e3_l_920E6,op1_e3_l_472193);
    real r21A6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5021A2);
    real r21A7#3 = RMul(op1_e3_l_920E6,op1_e3_l_38214B);
    real r21A8#2 = RMul(r21A7,r21A6);
    real r21A9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5021A2);
    real r21AA#2 = RMul(r21A7,r21A9);
    real r21AB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5021A2);
    real r21AC#2 = RMul(r21A7,r21AB);
    tensor[3] camV21A5#1 = <tensor[3]>[r21A8,r21AA,r21AC];
    globals.camV2045 = camV21A5;
    globals.camDist2046 = op1_e3_l_720E3;
    real _t21B8#1 = 0.314159265358979323846264338327950288e1;
    real _t21BA#1 = 0.36e3;
    real op1_e3_l_521BC#1 = RMul(camFOV20AD,_t21B8);
    real op1_e3_l_621BF#1 = RDiv(op1_e3_l_521BC,_t21BA);
    real op1_e3_l_1021C2#2 = Tan(op1_e3_l_621BF);
    real camVmax21C5#1 = RMul(op1_e3_l_1021C2,op1_e3_l_720E3);
    globals.camVmax2047 = camVmax21C5;
    real _t21C9#1 = IntToReal(iresU20AF);
    real _t21CB#1 = IntToReal(iresV20B1);
    real r21CE#1 = RMul(_t21C9,op1_e3_l_1021C2);
    real op1_e3_l_1421CD#1 = RMul(r21CE,op1_e3_l_720E3);
    real camUmax21D2#1 = RDiv(op1_e3_l_1421CD,_t21CB);
    globals.camUmax2048 = camUmax21D2;
    real camNearVsp21D6#1 = RAdd(camNear20A9,op1_e3_l_720E3);
    globals.camNearVsp2049 = camNearVsp21D6;
    real camFarVsp21DA#1 = RAdd(camFar20AB,op1_e3_l_720E3);
    globals.camFarVsp204A = camFarVsp21DA;
    real op1_e3_l_321E0#1 = VDot<3>(litdir20B3,litdir20B3);
    real op1_e3_l_421E3#1 = Sqrt(op1_e3_l_321E0);
    real realLit21E7#1 = 0.1e1;
    real op1_e3_l_521E6#1 = RDiv(realLit21E7,op1_e3_l_421E3);
    real r21EC#1 = VIndex<3,0>(camU2150);
    real r21ED#3 = TensorIndex<tensor[3],[0]>(litdir20B3);
    real r21EE#1 = RMul(r21EC,r21ED);
    real r21EF#1 = r21A8;
    real r21F0#3 = TensorIndex<tensor[3],[1]>(litdir20B3);
    real r21F1#1 = RMul(r21EF,r21F0);
    real r21F2#1 = VIndex<3,0>(camN20EB);
    real r21F3#3 = TensorIndex<tensor[3],[2]>(litdir20B3);
    real r21F4#1 = RMul(r21F2,r21F3);
    real r21F5#1 = RAdd(r21EE,r21F1);
    real r21F6#1 = RAdd(r21F5,r21F4);
    real r21F7#1 = VIndex<3,1>(camU2150);
    real r21F8#1 = RMul(r21F7,r21ED);
    real r21F9#1 = r21AA;
    real r21FA#1 = RMul(r21F9,r21F0);
    real r21FB#1 = VIndex<3,1>(camN20EB);
    real r21FC#1 = RMul(r21FB,r21F3);
    real r21FD#1 = RAdd(r21F8,r21FA);
    real r21FE#1 = RAdd(r21FD,r21FC);
    real r21FF#1 = VIndex<3,2>(camU2150);
    real r2200#1 = RMul(r21FF,r21ED);
    real r2201#1 = r21AC;
    real r2202#1 = RMul(r2201,r21F0);
    real r2203#1 = VIndex<3,2>(camN20EB);
    real r2204#1 = RMul(r2203,r21F3);
    real r2205#1 = RAdd(r2200,r2202);
    real r2206#1 = RAdd(r2205,r2204);
    tensor[3] op1_e3_l_621EB#1 = <tensor[3]>[r21F6,r21FE,r2206];
    tensor[3] litwsp2224#1 = VScale<3>(op1_e3_l_521E6,op1_e3_l_621EB);
    globals.litwsp204B = litwsp2224;
    globals._t204C = _t20D7;
    globals._tX204D = _t20D5;
    globals._tXX204E = _t20D3;
    return
## strand
  strand ray (int ui222E#1, int vi222F#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2240:  preds = []
        tensor[3] camEye2241#1 = globals.camEye202C;
        bool camOrtho2243#2 = globals.camOrtho2032;
        int iresU2245#1 = globals.iresU2033;
        int iresV2247#1 = globals.iresV2034;
        real rayStep2249#1 = globals.rayStep2035;
        real refStep224B#1 = globals.refStep2036;
        tensor[4] phong224D#4 = globals.phong203E;
        tensor[3] camN224F#1 = globals.camN2043;
        tensor[3] camU2251#1 = globals.camU2044;
        tensor[3] camV2253#1 = globals.camV2045;
        real camDist2255#1 = globals.camDist2046;
        real camVmax2257#2 = globals.camVmax2047;
        real camUmax2259#2 = globals.camUmax2048;
        real camNearVsp225B#1 = globals.camNearVsp2049;
        real _t225D#5 = -0.5e0;
        real _t225F#1 = IntToReal(ui222E);
        real _t2261#1 = IntToReal(iresU2245);
        real _t2263#3 = 0.5e0;
        real op1_e3_l_62265#1 = RSub(_t2261,_t2263);
        real op1_e3_l_72268#1 = RSub(_t225F,_t225D);
        real op1_e3_l_8226B#1 = RSub(op1_e3_l_62265,_t225D);
        real op1_e3_l_9226E#2 = RNeg(camUmax2259);
        real op1_e3_l_102271#1 = RDiv(op1_e3_l_72268,op1_e3_l_8226B);
        real op1_e3_l_112274#1 = RSub(camUmax2259,op1_e3_l_9226E);
        real op1_e3_l_132277#1 = RMul(op1_e3_l_102271,op1_e3_l_112274);
        real rayU227A#2 = RAdd(op1_e3_l_9226E,op1_e3_l_132277);
        real _t227D#1 = IntToReal(vi222F);
        real _t227F#2 = IntToReal(iresV2247);
        real op1_e3_l_62281#1 = RSub(_t227F,_t2263);
        real op1_e3_l_72284#2 = RSub(_t227D,_t225D);
        real op1_e3_l_82287#1 = RSub(op1_e3_l_62281,_t225D);
        real op1_e3_l_9228A#3 = RNeg(camVmax2257);
        real op1_e3_l_10228D#1 = RDiv(op1_e3_l_72284,op1_e3_l_82287);
        real op1_e3_l_112290#2 = RSub(camVmax2257,op1_e3_l_9228A);
        real op1_e3_l_132293#1 = RMul(op1_e3_l_10228D,op1_e3_l_112290);
        real rayV2296#1 = RAdd(op1_e3_l_9228A,op1_e3_l_132293);
        real op1_e3_l_232299#1 = RSub(_t227F,_t2263);
        real op1_e3_l_25229C#1 = RSub(op1_e3_l_232299,_t225D);
        real op1_e3_l_27229F#1 = RDiv(op1_e3_l_72284,op1_e3_l_25229C);
        real op1_e3_l_3022A2#1 = RMul(op1_e3_l_27229F,op1_e3_l_112290);
        real op1_e3_l_3122A5#1 = RAdd(op1_e3_l_9228A,op1_e3_l_3022A2);
        tensor[3] op1_e3_l_3222A8#1 = VScale<3>(rayU227A,camU2251);
        tensor[3] op1_e3_l_3322AB#1 = VScale<3>(op1_e3_l_3122A5,camV2253);
        tensor[3] UV22AE#5 = VAdd<3>(op1_e3_l_3222A8,op1_e3_l_3322AB);
        if camOrtho2243 then goto JOIN22B4 else goto ASSIGN230E
      JOIN22B4:  preds = [COND22B1,ASSIGN230F]
        tensor[3] _t22B2#1 = phi(UV22AE,_t22B3)
        tensor[3] rayOrig22B5#1 = VAdd<3>(camEye2241,_t22B2);
        if camOrtho2243 then goto ASSIGN22BA else goto ASSIGN2304
      ASSIGN22BA:  preds = [COND22B8]
        real _t22B9#3 = 0.e0;
        tensor[3] _t22BB#1 = <tensor[3]>[_t22B9,_t22B9,_t22B9];
        goto JOIN22BF
      JOIN22BF:  preds = [ASSIGN22BC,ASSIGN230C]
        tensor[3] _t22BD#1 = phi(_t22BB,_t22BE)
        tensor[3] rayVec22C0#4 = VAdd<3>(camN224F,_t22BD);
        real op1_e3_l_622C3#1 = VDot<3>(rayVec22C0,rayVec22C0);
        real op1_e3_l_722C6#2 = Sqrt(op1_e3_l_622C3);
        real op1_e3_l_822C9#1 = RMul(rayStep2249,op1_e3_l_722C6);
        real alphaFix22CC#1 = RDiv(op1_e3_l_822C9,refStep224B);
        real realLit22D0#1 = 0.1e1;
        real op1_e3_l_922CF#1 = RDiv(realLit22D0,op1_e3_l_722C6);
        tensor[3] op1_e3_l_1022D4#1 = VScale<3>(op1_e3_l_922CF,rayVec22C0);
        tensor[3] eyeDir22D7#1 = VNeg<3>(op1_e3_l_1022D4);
        real phKa22DA#1 = VIndex<4,0>(phong224D);
        real phKd22DC#1 = VIndex<4,1>(phong224D);
        real phKs22DE#1 = VIndex<4,2>(phong224D);
        real phSp22E0#1 = VIndex<4,3>(phong224D);
        real _t22E2#8 = 0.e0;
        tensor[4] rgba22E4#1 = <tensor[4]>[_t22E2,_t22E2,_t22E2,_t22E2];
        tensor[3] rgb22E6#1 = <tensor[3]>[_t22E2,_t22E2,_t22E2];
        real transp22E8#1 = 0.1e1;
        self.rayU = rayU227A;
        self.rayV = rayV2296;
        self.rayN = camNearVsp225B;
        self.UV = UV22AE;
        self.rayOrig = rayOrig22B5;
        self.rayVec = rayVec22C0;
        self.alphaFix = alphaFix22CC;
        self.eyeDir = eyeDir22D7;
        self.phKa = phKa22DA;
        self.phKd = phKd22DC;
        self.phKs = phKs22DE;
        self.phSp = phSp22E0;
        self.rgba = rgba22E4;
        self.raw = _t22E2;
        self.rgb = rgb22E6;
        self.transp = transp22E8;
        return
      ASSIGN2304:  preds = [COND22B8]
        real realLit22FB#1 = 0.1e1;
        real r22FC#3 = RDiv(realLit22FB,camDist2255);
        real r22FD#1 = TensorIndex<tensor[3],[0]>(UV22AE);
        real r22FE#1 = RMul(r22FC,r22FD);
        real r22FF#1 = TensorIndex<tensor[3],[1]>(UV22AE);
        real r2300#1 = RMul(r22FC,r22FF);
        real r2301#1 = TensorIndex<tensor[3],[2]>(UV22AE);
        real r2302#1 = RMul(r22FC,r2301);
        tensor[3] _t22BE#1 = <tensor[3]>[r22FE,r2300,r2302];
        goto JOIN22BF
      ASSIGN230E:  preds = [COND22B1]
        real _t230D#3 = 0.e0;
        tensor[3] _t22B3#1 = <tensor[3]>[_t230D,_t230D,_t230D];
        goto JOIN22B4
    end state init
    method update
        ENTRY2310:  preds = []
          image(IMAGE1D<double[3]>) cmap2311#17 = globals.cmap202B;
          int _t2313#2 = globals._t204C;
          femData:Space _t2315#168 = globals._tX204D;
          femData:FemFunc _t2317#168 = globals._tXX204E;
          femData:Mesh block231D#1 = globals.block2027;
          real rayStep231F#1 = globals.rayStep2035;
          real transp02321#1 = globals.transp02037;
          real thick2323#1 = globals.thick2038;
          real fStrTh2325#1 = globals.fStrTh2039;
          real fMaskTh2327#1 = globals.fMaskTh203A;
          real fBias2329#1 = globals.fBias203B;
          real maxAlpha232B#2 = globals.maxAlpha203C;
          tensor[3] mcNear232D#2 = globals.mcNear203F;
          tensor[3] mcFar232F#1 = globals.mcFar2040;
          tensor[2] cminmax2331#2 = globals.cminmax2042;
          real camNearVsp2333#2 = globals.camNearVsp2049;
          real camFarVsp2335#2 = globals.camFarVsp204A;
          tensor[3] litwsp2337#2 = globals.litwsp204B;
          real rayN2339#1 = self.rayN;
          tensor[3] rayOrig233B#2 = self.rayOrig;
          tensor[3] rayVec233D#1 = self.rayVec;
          real alphaFix233F#1 = self.alphaFix;
          tensor[3] eyeDir2341#1 = self.eyeDir;
          real phKa2343#1 = self.phKa;
          real phKd2345#1 = self.phKd;
          real phKs2347#2 = self.phKs;
          real phSp2349#1 = self.phSp;
          tensor[3] rgb234B#1 = self.rgb;
          real transp234D#2 = self.transp;
          real rayN234F#8 = RAdd(rayN2339,rayStep231F);
          bool _t2352#1 = GT<real>(rayN234F,camFarVsp2335);
          if _t2352 then goto SAVE2355 else goto JOIN2357
        SAVE2355:  preds = [COND2354]
          self.rayN = rayN234F;
          stabilize
          goto JOIN2357
        JOIN2357:  preds = [*STABILIZE2356,COND2354]
          tensor[3] op1_e3_l_52358#2 = VScale<3>(rayN234F,rayVec233D);
          tensor[3] pos235B#13 = VAdd<3>(rayOrig233B,op1_e3_l_52358);
          femData:RefCell _t235E#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block231D);
          real _t2360#1 = 0.1e-8;
          bool _t2362#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t235E,pos235B,_t2360);
          if _t2362 then goto ASSIGN2465 else goto ASSIGN389B
        ASSIGN2465:  preds = [COND2364]
          int ilit2366#1 = 84;
          int mulRes2367#84 = IMul(_t2313,ilit2366);
          int addRes2369#1 = mulRes2367;
          int idx236A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2369);
          int ilit236B#1 = 1;
          int addRes236C#1 = IAdd(mulRes2367,ilit236B);
          int idx236D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236C);
          int ilit236E#1 = 2;
          int addRes236F#1 = IAdd(mulRes2367,ilit236E);
          int idx2370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236F);
          int ilit2371#1 = 3;
          int addRes2372#1 = IAdd(mulRes2367,ilit2371);
          int idx2373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2372);
          int ilit2374#1 = 4;
          int addRes2375#1 = IAdd(mulRes2367,ilit2374);
          int idx2376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2375);
          int ilit2377#1 = 5;
          int addRes2378#1 = IAdd(mulRes2367,ilit2377);
          int idx2379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2378);
          int ilit237A#1 = 6;
          int addRes237B#1 = IAdd(mulRes2367,ilit237A);
          int idx237C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237B);
          int ilit237D#1 = 7;
          int addRes237E#1 = IAdd(mulRes2367,ilit237D);
          int idx237F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237E);
          int ilit2380#1 = 8;
          int addRes2381#1 = IAdd(mulRes2367,ilit2380);
          int idx2382#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2381);
          int ilit2383#1 = 9;
          int addRes2384#1 = IAdd(mulRes2367,ilit2383);
          int idx2385#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2384);
          int ilit2386#1 = 10;
          int addRes2387#1 = IAdd(mulRes2367,ilit2386);
          int idx2388#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2387);
          int ilit2389#1 = 11;
          int addRes238A#1 = IAdd(mulRes2367,ilit2389);
          int idx238B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238A);
          int ilit238C#1 = 12;
          int addRes238D#1 = IAdd(mulRes2367,ilit238C);
          int idx238E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238D);
          int ilit238F#1 = 13;
          int addRes2390#1 = IAdd(mulRes2367,ilit238F);
          int idx2391#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2390);
          int ilit2392#1 = 14;
          int addRes2393#1 = IAdd(mulRes2367,ilit2392);
          int idx2394#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2393);
          int ilit2395#1 = 15;
          int addRes2396#1 = IAdd(mulRes2367,ilit2395);
          int idx2397#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2396);
          int ilit2398#1 = 16;
          int addRes2399#1 = IAdd(mulRes2367,ilit2398);
          int idx239A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2399);
          int ilit239B#1 = 17;
          int addRes239C#1 = IAdd(mulRes2367,ilit239B);
          int idx239D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239C);
          int ilit239E#1 = 18;
          int addRes239F#1 = IAdd(mulRes2367,ilit239E);
          int idx23A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239F);
          int ilit23A1#1 = 19;
          int addRes23A2#1 = IAdd(mulRes2367,ilit23A1);
          int idx23A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A2);
          int ilit23A4#1 = 20;
          int addRes23A5#1 = IAdd(mulRes2367,ilit23A4);
          int idx23A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A5);
          int ilit23A7#1 = 21;
          int addRes23A8#1 = IAdd(mulRes2367,ilit23A7);
          int idx23A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A8);
          int ilit23AA#1 = 22;
          int addRes23AB#1 = IAdd(mulRes2367,ilit23AA);
          int idx23AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AB);
          int ilit23AD#1 = 23;
          int addRes23AE#1 = IAdd(mulRes2367,ilit23AD);
          int idx23AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AE);
          int ilit23B0#1 = 24;
          int addRes23B1#1 = IAdd(mulRes2367,ilit23B0);
          int idx23B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B1);
          int ilit23B3#1 = 25;
          int addRes23B4#1 = IAdd(mulRes2367,ilit23B3);
          int idx23B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B4);
          int ilit23B6#1 = 26;
          int addRes23B7#1 = IAdd(mulRes2367,ilit23B6);
          int idx23B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B7);
          int ilit23B9#1 = 27;
          int addRes23BA#1 = IAdd(mulRes2367,ilit23B9);
          int idx23BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BA);
          int ilit23BC#1 = 28;
          int addRes23BD#1 = IAdd(mulRes2367,ilit23BC);
          int idx23BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BD);
          int ilit23BF#1 = 29;
          int addRes23C0#1 = IAdd(mulRes2367,ilit23BF);
          int idx23C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C0);
          int ilit23C2#1 = 30;
          int addRes23C3#1 = IAdd(mulRes2367,ilit23C2);
          int idx23C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C3);
          int ilit23C5#1 = 31;
          int addRes23C6#1 = IAdd(mulRes2367,ilit23C5);
          int idx23C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C6);
          int ilit23C8#1 = 32;
          int addRes23C9#1 = IAdd(mulRes2367,ilit23C8);
          int idx23CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C9);
          int ilit23CB#1 = 33;
          int addRes23CC#1 = IAdd(mulRes2367,ilit23CB);
          int idx23CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CC);
          int ilit23CE#1 = 34;
          int addRes23CF#1 = IAdd(mulRes2367,ilit23CE);
          int idx23D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CF);
          int ilit23D1#1 = 35;
          int addRes23D2#1 = IAdd(mulRes2367,ilit23D1);
          int idx23D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D2);
          int ilit23D4#1 = 36;
          int addRes23D5#1 = IAdd(mulRes2367,ilit23D4);
          int idx23D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D5);
          int ilit23D7#1 = 37;
          int addRes23D8#1 = IAdd(mulRes2367,ilit23D7);
          int idx23D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D8);
          int ilit23DA#1 = 38;
          int addRes23DB#1 = IAdd(mulRes2367,ilit23DA);
          int idx23DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DB);
          int ilit23DD#1 = 39;
          int addRes23DE#1 = IAdd(mulRes2367,ilit23DD);
          int idx23DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DE);
          int ilit23E0#1 = 40;
          int addRes23E1#1 = IAdd(mulRes2367,ilit23E0);
          int idx23E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E1);
          int ilit23E3#1 = 41;
          int addRes23E4#1 = IAdd(mulRes2367,ilit23E3);
          int idx23E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E4);
          int ilit23E6#1 = 42;
          int addRes23E7#1 = IAdd(mulRes2367,ilit23E6);
          int idx23E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E7);
          int ilit23E9#1 = 43;
          int addRes23EA#1 = IAdd(mulRes2367,ilit23E9);
          int idx23EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23EA);
          int ilit23EC#1 = 44;
          int addRes23ED#1 = IAdd(mulRes2367,ilit23EC);
          int idx23EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23ED);
          int ilit23EF#1 = 45;
          int addRes23F0#1 = IAdd(mulRes2367,ilit23EF);
          int idx23F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F0);
          int ilit23F2#1 = 46;
          int addRes23F3#1 = IAdd(mulRes2367,ilit23F2);
          int idx23F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F3);
          int ilit23F5#1 = 47;
          int addRes23F6#1 = IAdd(mulRes2367,ilit23F5);
          int idx23F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F6);
          int ilit23F8#1 = 48;
          int addRes23F9#1 = IAdd(mulRes2367,ilit23F8);
          int idx23FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F9);
          int ilit23FB#1 = 49;
          int addRes23FC#1 = IAdd(mulRes2367,ilit23FB);
          int idx23FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FC);
          int ilit23FE#1 = 50;
          int addRes23FF#1 = IAdd(mulRes2367,ilit23FE);
          int idx2400#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FF);
          int ilit2401#1 = 51;
          int addRes2402#1 = IAdd(mulRes2367,ilit2401);
          int idx2403#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2402);
          int ilit2404#1 = 52;
          int addRes2405#1 = IAdd(mulRes2367,ilit2404);
          int idx2406#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2405);
          int ilit2407#1 = 53;
          int addRes2408#1 = IAdd(mulRes2367,ilit2407);
          int idx2409#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2408);
          int ilit240A#1 = 54;
          int addRes240B#1 = IAdd(mulRes2367,ilit240A);
          int idx240C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240B);
          int ilit240D#1 = 55;
          int addRes240E#1 = IAdd(mulRes2367,ilit240D);
          int idx240F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240E);
          int ilit2410#1 = 56;
          int addRes2411#1 = IAdd(mulRes2367,ilit2410);
          int idx2412#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2411);
          int ilit2413#1 = 57;
          int addRes2414#1 = IAdd(mulRes2367,ilit2413);
          int idx2415#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2414);
          int ilit2416#1 = 58;
          int addRes2417#1 = IAdd(mulRes2367,ilit2416);
          int idx2418#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2417);
          int ilit2419#1 = 59;
          int addRes241A#1 = IAdd(mulRes2367,ilit2419);
          int idx241B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241A);
          int ilit241C#1 = 60;
          int addRes241D#1 = IAdd(mulRes2367,ilit241C);
          int idx241E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241D);
          int ilit241F#1 = 61;
          int addRes2420#1 = IAdd(mulRes2367,ilit241F);
          int idx2421#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2420);
          int ilit2422#1 = 62;
          int addRes2423#1 = IAdd(mulRes2367,ilit2422);
          int idx2424#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2423);
          int ilit2425#1 = 63;
          int addRes2426#1 = IAdd(mulRes2367,ilit2425);
          int idx2427#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2426);
          int ilit2428#1 = 64;
          int addRes2429#1 = IAdd(mulRes2367,ilit2428);
          int idx242A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2429);
          int ilit242B#1 = 65;
          int addRes242C#1 = IAdd(mulRes2367,ilit242B);
          int idx242D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242C);
          int ilit242E#1 = 66;
          int addRes242F#1 = IAdd(mulRes2367,ilit242E);
          int idx2430#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242F);
          int ilit2431#1 = 67;
          int addRes2432#1 = IAdd(mulRes2367,ilit2431);
          int idx2433#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2432);
          int ilit2434#1 = 68;
          int addRes2435#1 = IAdd(mulRes2367,ilit2434);
          int idx2436#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2435);
          int ilit2437#1 = 69;
          int addRes2438#1 = IAdd(mulRes2367,ilit2437);
          int idx2439#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2438);
          int ilit243A#1 = 70;
          int addRes243B#1 = IAdd(mulRes2367,ilit243A);
          int idx243C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243B);
          int ilit243D#1 = 71;
          int addRes243E#1 = IAdd(mulRes2367,ilit243D);
          int idx243F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243E);
          int ilit2440#1 = 72;
          int addRes2441#1 = IAdd(mulRes2367,ilit2440);
          int idx2442#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2441);
          int ilit2443#1 = 73;
          int addRes2444#1 = IAdd(mulRes2367,ilit2443);
          int idx2445#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2444);
          int ilit2446#1 = 74;
          int addRes2447#1 = IAdd(mulRes2367,ilit2446);
          int idx2448#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2447);
          int ilit2449#1 = 75;
          int addRes244A#1 = IAdd(mulRes2367,ilit2449);
          int idx244B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244A);
          int ilit244C#1 = 76;
          int addRes244D#1 = IAdd(mulRes2367,ilit244C);
          int idx244E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244D);
          int ilit244F#1 = 77;
          int addRes2450#1 = IAdd(mulRes2367,ilit244F);
          int idx2451#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2450);
          int ilit2452#1 = 78;
          int addRes2453#1 = IAdd(mulRes2367,ilit2452);
          int idx2454#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2453);
          int ilit2455#1 = 79;
          int addRes2456#1 = IAdd(mulRes2367,ilit2455);
          int idx2457#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2456);
          int ilit2458#1 = 80;
          int addRes2459#1 = IAdd(mulRes2367,ilit2458);
          int idx245A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2459);
          int ilit245B#1 = 81;
          int addRes245C#1 = IAdd(mulRes2367,ilit245B);
          int idx245D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245C);
          int ilit245E#1 = 82;
          int addRes245F#1 = IAdd(mulRes2367,ilit245E);
          int idx2460#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245F);
          int ilit2461#1 = 83;
          int addRes2462#1 = IAdd(mulRes2367,ilit2461);
          int idx2463#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2462);
          int ilit2566#84 = 1;
          int idx2568#1 = idx236A;
          int mulRes2569#1 = IMul(ilit2566,idx2568);
          int idx256A#1 = idx236D;
          int mulRes256B#1 = IMul(ilit2566,idx256A);
          int idx256D#1 = idx2370;
          int mulRes256E#1 = IMul(ilit2566,idx256D);
          int idx2570#1 = idx2373;
          int mulRes2571#1 = IMul(ilit2566,idx2570);
          int idx2573#1 = idx2376;
          int mulRes2574#1 = IMul(ilit2566,idx2573);
          int idx2576#1 = idx2379;
          int mulRes2577#1 = IMul(ilit2566,idx2576);
          int idx2579#1 = idx237C;
          int mulRes257A#1 = IMul(ilit2566,idx2579);
          int idx257C#1 = idx237F;
          int mulRes257D#1 = IMul(ilit2566,idx257C);
          int idx257F#1 = idx2382;
          int mulRes2580#1 = IMul(ilit2566,idx257F);
          int idx2582#1 = idx2385;
          int mulRes2583#1 = IMul(ilit2566,idx2582);
          int idx2585#1 = idx2388;
          int mulRes2586#1 = IMul(ilit2566,idx2585);
          int idx2588#1 = idx238B;
          int mulRes2589#1 = IMul(ilit2566,idx2588);
          int idx258B#1 = idx238E;
          int mulRes258C#1 = IMul(ilit2566,idx258B);
          int idx258E#1 = idx2391;
          int mulRes258F#1 = IMul(ilit2566,idx258E);
          int idx2591#1 = idx2394;
          int mulRes2592#1 = IMul(ilit2566,idx2591);
          int idx2594#1 = idx2397;
          int mulRes2595#1 = IMul(ilit2566,idx2594);
          int idx2597#1 = idx239A;
          int mulRes2598#1 = IMul(ilit2566,idx2597);
          int idx259A#1 = idx239D;
          int mulRes259B#1 = IMul(ilit2566,idx259A);
          int idx259D#1 = idx23A0;
          int mulRes259E#1 = IMul(ilit2566,idx259D);
          int idx25A0#1 = idx23A3;
          int mulRes25A1#1 = IMul(ilit2566,idx25A0);
          int idx25A3#1 = idx23A6;
          int mulRes25A4#1 = IMul(ilit2566,idx25A3);
          int idx25A6#1 = idx23A9;
          int mulRes25A7#1 = IMul(ilit2566,idx25A6);
          int idx25A9#1 = idx23AC;
          int mulRes25AA#1 = IMul(ilit2566,idx25A9);
          int idx25AC#1 = idx23AF;
          int mulRes25AD#1 = IMul(ilit2566,idx25AC);
          int idx25AF#1 = idx23B2;
          int mulRes25B0#1 = IMul(ilit2566,idx25AF);
          int idx25B2#1 = idx23B5;
          int mulRes25B3#1 = IMul(ilit2566,idx25B2);
          int idx25B5#1 = idx23B8;
          int mulRes25B6#1 = IMul(ilit2566,idx25B5);
          int idx25B8#1 = idx23BB;
          int mulRes25B9#1 = IMul(ilit2566,idx25B8);
          int idx25BB#1 = idx23BE;
          int mulRes25BC#1 = IMul(ilit2566,idx25BB);
          int idx25BE#1 = idx23C1;
          int mulRes25BF#1 = IMul(ilit2566,idx25BE);
          int idx25C1#1 = idx23C4;
          int mulRes25C2#1 = IMul(ilit2566,idx25C1);
          int idx25C4#1 = idx23C7;
          int mulRes25C5#1 = IMul(ilit2566,idx25C4);
          int idx25C7#1 = idx23CA;
          int mulRes25C8#1 = IMul(ilit2566,idx25C7);
          int idx25CA#1 = idx23CD;
          int mulRes25CB#1 = IMul(ilit2566,idx25CA);
          int idx25CD#1 = idx23D0;
          int mulRes25CE#1 = IMul(ilit2566,idx25CD);
          int idx25D0#1 = idx23D3;
          int mulRes25D1#1 = IMul(ilit2566,idx25D0);
          int idx25D3#1 = idx23D6;
          int mulRes25D4#1 = IMul(ilit2566,idx25D3);
          int idx25D6#1 = idx23D9;
          int mulRes25D7#1 = IMul(ilit2566,idx25D6);
          int idx25D9#1 = idx23DC;
          int mulRes25DA#1 = IMul(ilit2566,idx25D9);
          int idx25DC#1 = idx23DF;
          int mulRes25DD#1 = IMul(ilit2566,idx25DC);
          int idx25DF#1 = idx23E2;
          int mulRes25E0#1 = IMul(ilit2566,idx25DF);
          int idx25E2#1 = idx23E5;
          int mulRes25E3#1 = IMul(ilit2566,idx25E2);
          int idx25E5#1 = idx23E8;
          int mulRes25E6#1 = IMul(ilit2566,idx25E5);
          int idx25E8#1 = idx23EB;
          int mulRes25E9#1 = IMul(ilit2566,idx25E8);
          int idx25EB#1 = idx23EE;
          int mulRes25EC#1 = IMul(ilit2566,idx25EB);
          int idx25EE#1 = idx23F1;
          int mulRes25EF#1 = IMul(ilit2566,idx25EE);
          int idx25F1#1 = idx23F4;
          int mulRes25F2#1 = IMul(ilit2566,idx25F1);
          int idx25F4#1 = idx23F7;
          int mulRes25F5#1 = IMul(ilit2566,idx25F4);
          int idx25F7#1 = idx23FA;
          int mulRes25F8#1 = IMul(ilit2566,idx25F7);
          int idx25FA#1 = idx23FD;
          int mulRes25FB#1 = IMul(ilit2566,idx25FA);
          int idx25FD#1 = idx2400;
          int mulRes25FE#1 = IMul(ilit2566,idx25FD);
          int idx2600#1 = idx2403;
          int mulRes2601#1 = IMul(ilit2566,idx2600);
          int idx2603#1 = idx2406;
          int mulRes2604#1 = IMul(ilit2566,idx2603);
          int idx2606#1 = idx2409;
          int mulRes2607#1 = IMul(ilit2566,idx2606);
          int idx2609#1 = idx240C;
          int mulRes260A#1 = IMul(ilit2566,idx2609);
          int idx260C#1 = idx240F;
          int mulRes260D#1 = IMul(ilit2566,idx260C);
          int idx260F#1 = idx2412;
          int mulRes2610#1 = IMul(ilit2566,idx260F);
          int idx2612#1 = idx2415;
          int mulRes2613#1 = IMul(ilit2566,idx2612);
          int idx2615#1 = idx2418;
          int mulRes2616#1 = IMul(ilit2566,idx2615);
          int idx2618#1 = idx241B;
          int mulRes2619#1 = IMul(ilit2566,idx2618);
          int idx261B#1 = idx241E;
          int mulRes261C#1 = IMul(ilit2566,idx261B);
          int idx261E#1 = idx2421;
          int mulRes261F#1 = IMul(ilit2566,idx261E);
          int idx2621#1 = idx2424;
          int mulRes2622#1 = IMul(ilit2566,idx2621);
          int idx2624#1 = idx2427;
          int mulRes2625#1 = IMul(ilit2566,idx2624);
          int idx2627#1 = idx242A;
          int mulRes2628#1 = IMul(ilit2566,idx2627);
          int idx262A#1 = idx242D;
          int mulRes262B#1 = IMul(ilit2566,idx262A);
          int idx262D#1 = idx2430;
          int mulRes262E#1 = IMul(ilit2566,idx262D);
          int idx2630#1 = idx2433;
          int mulRes2631#1 = IMul(ilit2566,idx2630);
          int idx2633#1 = idx2436;
          int mulRes2634#1 = IMul(ilit2566,idx2633);
          int idx2636#1 = idx2439;
          int mulRes2637#1 = IMul(ilit2566,idx2636);
          int idx2639#1 = idx243C;
          int mulRes263A#1 = IMul(ilit2566,idx2639);
          int idx263C#1 = idx243F;
          int mulRes263D#1 = IMul(ilit2566,idx263C);
          int idx263F#1 = idx2442;
          int mulRes2640#1 = IMul(ilit2566,idx263F);
          int idx2642#1 = idx2445;
          int mulRes2643#1 = IMul(ilit2566,idx2642);
          int idx2645#1 = idx2448;
          int mulRes2646#1 = IMul(ilit2566,idx2645);
          int idx2648#1 = idx244B;
          int mulRes2649#1 = IMul(ilit2566,idx2648);
          int idx264B#1 = idx244E;
          int mulRes264C#1 = IMul(ilit2566,idx264B);
          int idx264E#1 = idx2451;
          int mulRes264F#1 = IMul(ilit2566,idx264E);
          int idx2651#1 = idx2454;
          int mulRes2652#1 = IMul(ilit2566,idx2651);
          int idx2654#1 = idx2457;
          int mulRes2655#1 = IMul(ilit2566,idx2654);
          int idx2657#1 = idx245A;
          int mulRes2658#1 = IMul(ilit2566,idx2657);
          int idx265A#1 = idx245D;
          int mulRes265B#1 = IMul(ilit2566,idx265A);
          int idx265D#1 = idx2460;
          int mulRes265E#1 = IMul(ilit2566,idx265D);
          int idx2660#1 = idx2463;
          int mulRes2661#1 = IMul(ilit2566,idx2660);
          real dof2662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2569);
          real dof2663#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256B);
          real dof2664#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256E);
          real dof2665#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2571);
          real dof2666#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2574);
          real dof2667#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2577);
          real dof2668#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257A);
          real dof2669#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257D);
          real dof266A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2580);
          real dof266B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2583);
          real dof266C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2586);
          real dof266D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2589);
          real dof266E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258C);
          real dof266F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258F);
          real dof2670#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2592);
          real dof2671#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2595);
          real dof2672#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2598);
          real dof2673#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259B);
          real dof2674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259E);
          real dof2675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A1);
          real dof2676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A4);
          real dof2677#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A7);
          real dof2678#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AA);
          real dof2679#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AD);
          real dof267A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B0);
          real dof267B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B3);
          real dof267C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B6);
          real dof267D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B9);
          real dof267E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BC);
          real dof267F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BF);
          real dof2680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C2);
          real dof2681#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C5);
          real dof2682#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C8);
          real dof2683#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CB);
          real dof2684#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CE);
          real dof2685#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D1);
          real dof2686#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D4);
          real dof2687#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D7);
          real dof2688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DA);
          real dof2689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DD);
          real dof268A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E0);
          real dof268B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E3);
          real dof268C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E6);
          real dof268D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E9);
          real dof268E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EC);
          real dof268F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EF);
          real dof2690#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F2);
          real dof2691#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F5);
          real dof2692#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F8);
          real dof2693#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FB);
          real dof2694#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FE);
          real dof2695#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2601);
          real dof2696#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2604);
          real dof2697#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2607);
          real dof2698#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260A);
          real dof2699#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260D);
          real dof269A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2610);
          real dof269B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2613);
          real dof269C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2616);
          real dof269D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2619);
          real dof269E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261C);
          real dof269F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261F);
          real dof26A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2622);
          real dof26A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2625);
          real dof26A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2628);
          real dof26A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262B);
          real dof26A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262E);
          real dof26A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2631);
          real dof26A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2634);
          real dof26A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2637);
          real dof26A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263A);
          real dof26A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263D);
          real dof26AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2640);
          real dof26AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2643);
          real dof26AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2646);
          real dof26AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2649);
          real dof26AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264C);
          real dof26AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264F);
          real dof26B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2652);
          real dof26B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2655);
          real dof26B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2658);
          real dof26B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265B);
          real dof26B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265E);
          real dof26B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2661);
          tensor[84] dofs26B6#1 = <tensor[84]>[dof2662,dof2663,dof2664,dof2665,dof2666,dof2667,dof2668,dof2669,dof266A,dof266B,dof266C,dof266D,dof266E,dof266F,dof2670,dof2671,dof2672,dof2673,dof2674,dof2675,dof2676,dof2677,dof2678,dof2679,dof267A,dof267B,dof267C,dof267D,dof267E,dof267F,dof2680,dof2681,dof2682,dof2683,dof2684,dof2685,dof2686,dof2687,dof2688,dof2689,dof268A,dof268B,dof268C,dof268D,dof268E,dof268F,dof2690,dof2691,dof2692,dof2693,dof2694,dof2695,dof2696,dof2697,dof2698,dof2699,dof269A,dof269B,dof269C,dof269D,dof269E,dof269F,dof26A0,dof26A1,dof26A2,dof26A3,dof26A4,dof26A5,dof26A6,dof26A7,dof26A8,dof26A9,dof26AA,dof26AB,dof26AC,dof26AD,dof26AE,dof26AF,dof26B0,dof26B1,dof26B2,dof26B3,dof26B4,dof26B5];
          tensor[84] femDofs2565#12 = dofs26B6;
          real varAcc280A#4 = VIndex<3,0>(pos235B);
          real varAcc280B#4 = VIndex<3,1>(pos235B);
          real varAcc280C#4 = VIndex<3,2>(pos235B);
          real basisEval280D#294 = 0.e0;
          real coeff280E#31 = 0.2e1;
          real one280F#38 = 0.1e1;
          real prod2810#5 = RMul(one280F,one280F);
          real prod2811#2 = RMul(one280F,prod2810);
          real basisEval2812#3 = RMul(coeff280E,prod2811);
          real iden2813#5 = varAcc280C;
          real prod2814#4 = RMul(one280F,iden2813);
          real prod2815#3 = RMul(one280F,prod2814);
          real basisEval2816#4 = RMul(coeff280E,prod2815);
          real iden2817#5 = varAcc280B;
          real prod2818#4 = RMul(iden2817,one280F);
          real prod2819#3 = RMul(one280F,prod2818);
          real basisEval281A#4 = RMul(coeff280E,prod2819);
          real coeff281B#22 = 0.6e1;
          real iden281C#11 = varAcc280A;
          real prod281D#3 = RMul(iden281C,prod2810);
          real basisEval281E#1 = RMul(coeff281B,prod281D);
          real prod2281F#4 = RMul(iden2813,varAcc280C);
          real prod2820#3 = RMul(one280F,prod2281F);
          real prod2821#4 = RMul(one280F,prod2820);
          real basisEval2822#2 = RMul(coeff280E,prod2821);
          real prod2823#3 = RMul(iden2817,iden2813);
          real prod2824#3 = RMul(one280F,prod2823);
          real basisEval2825#3 = RMul(coeff280E,prod2824);
          real prod22826#4 = RMul(iden2817,varAcc280B);
          real prod2827#3 = RMul(prod22826,one280F);
          real prod2828#4 = RMul(one280F,prod2827);
          real basisEval2829#2 = RMul(coeff280E,prod2828);
          real prod282A#3 = RMul(iden281C,prod2814);
          real basisEval282B#2 = RMul(coeff281B,prod282A);
          real prod282C#3 = RMul(iden281C,prod2818);
          real basisEval282D#2 = RMul(coeff281B,prod282C);
          real coeff282E#15 = 0.12e2;
          real prod2282F#7 = RMul(iden281C,varAcc280A);
          real prod2830#4 = RMul(prod2282F,prod2810);
          real basisEval2831#1 = RMul(coeff282E,prod2830);
          real prod32832#3 = RMul(prod2281F,varAcc280C);
          real prod2833#2 = RMul(one280F,prod32832);
          real prod2834#4 = RMul(one280F,prod2833);
          real basisEval2835#2 = RMul(coeff280E,prod2834);
          real prod2836#2 = RMul(iden2817,prod2281F);
          real prod2837#4 = RMul(one280F,prod2836);
          real basisEval2838#2 = RMul(coeff280E,prod2837);
          real prod2839#2 = RMul(prod22826,iden2813);
          real prod283A#4 = RMul(one280F,prod2839);
          real basisEval283B#2 = RMul(coeff280E,prod283A);
          real prod3283C#3 = RMul(prod22826,varAcc280B);
          real prod283D#2 = RMul(prod3283C,one280F);
          real prod283E#4 = RMul(one280F,prod283D);
          real basisEval283F#2 = RMul(coeff280E,prod283E);
          real prod2840#4 = RMul(iden281C,prod2820);
          real basisEval2841#2 = RMul(coeff281B,prod2840);
          real prod2842#2 = RMul(iden281C,prod2823);
          real basisEval2843#3 = RMul(coeff281B,prod2842);
          real prod2844#4 = RMul(iden281C,prod2827);
          real basisEval2845#2 = RMul(coeff281B,prod2844);
          real prod2846#4 = RMul(prod2282F,prod2814);
          real basisEval2847#1 = RMul(coeff282E,prod2846);
          real prod2848#4 = RMul(prod2282F,prod2818);
          real basisEval2849#1 = RMul(coeff282E,prod2848);
          real coeff284A#9 = 0.20e2;
          real prod3284B#4 = RMul(prod2282F,varAcc280A);
          real prod284C#4 = RMul(prod3284B,prod2810);
          real basisEval284D#1 = RMul(coeff284A,prod284C);
          real prod4284E#1 = RMul(prod32832,varAcc280C);
          real prod284F#1 = RMul(one280F,prod4284E);
          real prod2850#4 = RMul(one280F,prod284F);
          real basisEval2851#2 = RMul(coeff280E,prod2850);
          real prod2852#1 = RMul(iden2817,prod32832);
          real prod2853#5 = RMul(one280F,prod2852);
          real basisEval2854#2 = RMul(coeff280E,prod2853);
          real prod2855#1 = RMul(prod22826,prod2281F);
          real prod2856#4 = RMul(one280F,prod2855);
          real basisEval2857#1 = RMul(coeff280E,prod2856);
          real prod2858#1 = RMul(prod3283C,iden2813);
          real prod2859#5 = RMul(one280F,prod2858);
          real basisEval285A#2 = RMul(coeff280E,prod2859);
          real prod4285B#1 = RMul(prod3283C,varAcc280B);
          real prod285C#1 = RMul(prod4285B,one280F);
          real prod285D#4 = RMul(one280F,prod285C);
          real basisEval285E#2 = RMul(coeff280E,prod285D);
          real prod285F#5 = RMul(iden281C,prod2833);
          real basisEval2860#1 = RMul(coeff281B,prod285F);
          real prod2861#3 = RMul(iden281C,prod2836);
          real basisEval2862#4 = RMul(coeff281B,prod2861);
          real prod2863#3 = RMul(iden281C,prod2839);
          real basisEval2864#4 = RMul(coeff281B,prod2863);
          real prod2865#5 = RMul(iden281C,prod283D);
          real basisEval2866#1 = RMul(coeff281B,prod2865);
          real prod2867#4 = RMul(prod2282F,prod2820);
          real basisEval2868#2 = RMul(coeff282E,prod2867);
          real prod2869#3 = RMul(prod2282F,prod2823);
          real basisEval286A#1 = RMul(coeff282E,prod2869);
          real prod286B#4 = RMul(prod2282F,prod2827);
          real basisEval286C#2 = RMul(coeff282E,prod286B);
          real prod286D#5 = RMul(prod3284B,prod2814);
          real basisEval286E#1 = RMul(coeff284A,prod286D);
          real prod286F#5 = RMul(prod3284B,prod2818);
          real basisEval2870#1 = RMul(coeff284A,prod286F);
          real coeff2871#3 = 0.30e2;
          real prod42872#1 = RMul(prod3284B,varAcc280A);
          real prod2873#4 = RMul(prod42872,prod2810);
          real basisEval2874#1 = RMul(coeff2871,prod2873);
          real basisEval2875#3 = RMul(one280F,prod2811);
          real basisEval2876#1 = RMul(one280F,prod2815);
          real basisEval2877#4 = RMul(coeff280E,prod281D);
          real basisEval2878#1 = RMul(one280F,prod2821);
          real coeff2879#12 = 0.3e1;
          real basisEval287A#2 = RMul(coeff2879,prod2828);
          real basisEval287B#3 = RMul(coeff280E,prod282A);
          real coeff287C#16 = 0.4e1;
          real basisEval287D#1 = RMul(coeff287C,prod282C);
          real basisEval287E#2 = RMul(coeff2879,prod2830);
          real basisEval287F#1 = RMul(one280F,prod2834);
          real basisEval2880#1 = RMul(coeff2879,prod283A);
          real basisEval2881#2 = RMul(coeff287C,prod283E);
          real basisEval2882#2 = RMul(coeff280E,prod2840);
          real basisEval2883#3 = RMul(coeff287C,prod2842);
          real basisEval2884#1 = RMul(coeff2879,prod2846);
          real basisEval2885#2 = RMul(coeff281B,prod2848);
          real basisEval2886#2 = RMul(coeff287C,prod284C);
          real basisEval2887#1 = RMul(one280F,prod2850);
          real basisEval2888#2 = RMul(coeff2879,prod2856);
          real basisEval2889#1 = RMul(coeff287C,prod2859);
          real coeff288A#3 = 0.5e1;
          real basisEval288B#2 = RMul(coeff288A,prod285D);
          real basisEval288C#2 = RMul(coeff280E,prod285F);
          real basisEval288D#1 = RMul(coeff287C,prod2861);
          real coeff288E#6 = 0.8e1;
          real basisEval288F#1 = RMul(coeff288E,prod2865);
          real basisEval2890#2 = RMul(coeff2879,prod2867);
          real basisEval2891#4 = RMul(coeff281B,prod2869);
          real coeff2892#3 = 0.9e1;
          real basisEval2893#1 = RMul(coeff2892,prod286B);
          real basisEval2894#1 = RMul(coeff287C,prod286D);
          real basisEval2895#1 = RMul(coeff288E,prod286F);
          real basisEval2896#2 = RMul(coeff288A,prod2873);
          real basisEval2897#1 = RMul(one280F,prod2819);
          real basisEval2898#2 = RMul(coeff2879,prod2821);
          real basisEval2899#1 = RMul(one280F,prod2828);
          real basisEval289A#1 = RMul(coeff287C,prod282A);
          real basisEval289B#3 = RMul(coeff280E,prod282C);
          real basisEval289C#2 = RMul(coeff287C,prod2834);
          real basisEval289D#1 = RMul(coeff2879,prod2837);
          real basisEval289E#1 = RMul(one280F,prod283E);
          real basisEval289F#2 = RMul(coeff280E,prod2844);
          real basisEval28A0#2 = RMul(coeff281B,prod2846);
          real basisEval28A1#1 = RMul(coeff2879,prod2848);
          real basisEval28A2#2 = RMul(coeff288A,prod2850);
          real basisEval28A3#1 = RMul(coeff287C,prod2853);
          real basisEval28A4#1 = RMul(one280F,prod285D);
          real basisEval28A5#1 = RMul(coeff288E,prod285F);
          real basisEval28A6#1 = RMul(coeff287C,prod2863);
          real basisEval28A7#2 = RMul(coeff280E,prod2865);
          real basisEval28A8#1 = RMul(coeff2892,prod2867);
          real basisEval28A9#2 = RMul(coeff2879,prod286B);
          real basisEval28AA#1 = RMul(coeff288E,prod286D);
          real basisEval28AB#1 = RMul(coeff287C,prod286F);
          real basisEval28AC#1 = RMul(coeff281B,prod2819);
          real basisEval28AD#2 = RMul(coeff281B,prod2824);
          real basisEval28AE#1 = RMul(coeff282E,prod2828);
          real basisEval28AF#2 = RMul(coeff280E,prod2830);
          real basisEval28B0#2 = RMul(coeff281B,prod2837);
          real basisEval28B1#1 = RMul(coeff282E,prod283A);
          real basisEval28B2#1 = RMul(coeff284A,prod283E);
          real basisEval28B3#1 = RMul(coeff282E,prod2844);
          real basisEval28B4#2 = RMul(coeff280E,prod2846);
          real basisEval28B5#2 = RMul(coeff280E,prod284C);
          real basisEval28B6#1 = RMul(coeff281B,prod2853);
          real basisEval28B7#2 = RMul(coeff282E,prod2856);
          real basisEval28B8#1 = RMul(coeff284A,prod2859);
          real basisEval28B9#1 = RMul(coeff2871,prod285D);
          real basisEval28BA#1 = RMul(coeff282E,prod2863);
          real basisEval28BB#1 = RMul(coeff284A,prod2865);
          real basisEval28BC#1 = RMul(coeff280E,prod2867);
          real basisEval28BD#2 = RMul(coeff280E,prod286D);
          real basisEval28BE#1 = RMul(coeff281B,prod286F);
          real basisEval28BF#2 = RMul(coeff280E,prod2873);
          real basisEval28C0#1 = RMul(one280F,prod281D);
          real basisEval28C1#1 = RMul(coeff287C,prod2824);
          real basisEval28C2#1 = RMul(one280F,prod2830);
          real basisEval28C3#2 = RMul(coeff281B,prod283A);
          real basisEval28C4#1 = RMul(coeff2879,prod2840);
          real basisEval28C5#1 = RMul(coeff2879,prod2844);
          real basisEval28C6#2 = RMul(coeff280E,prod2848);
          real basisEval28C7#1 = RMul(one280F,prod284C);
          real basisEval28C8#1 = RMul(coeff288E,prod2853);
          real basisEval28C9#1 = RMul(coeff2892,prod2856);
          real basisEval28CA#1 = RMul(coeff288E,prod2859);
          real basisEval28CB#1 = RMul(coeff287C,prod285F);
          real basisEval28CC#1 = RMul(coeff287C,prod2865);
          real basisEval28CD#1 = RMul(coeff287C,prod2869);
          real basisEval28CE#2 = RMul(coeff280E,prod286F);
          real basisEval28CF#1 = RMul(one280F,prod2873);
          real basisEval28D0#1 = RMul(coeff281B,prod2815);
          real basisEval28D1#1 = RMul(coeff282E,prod2821);
          real basisEval28D2#1 = RMul(coeff284A,prod2834);
          real basisEval28D3#1 = RMul(coeff282E,prod2837);
          real basisEval28D4#1 = RMul(coeff282E,prod2840);
          real basisEval28D5#1 = RMul(coeff2871,prod2850);
          real basisEval28D6#1 = RMul(coeff284A,prod2853);
          real basisEval28D7#1 = RMul(coeff281B,prod2859);
          real basisEval28D8#1 = RMul(coeff284A,prod285F);
          real basisEval28D9#1 = RMul(coeff282E,prod2861);
          real basisEval28DA#1 = RMul(coeff280E,prod286B);
          real basisEval28DB#1 = RMul(coeff281B,prod286D);
          tensor[84] intermediateCons28DC#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval281E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval2825,basisEval2829,basisEval282B,basisEval282D,basisEval2831,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval2838,basisEval283B,basisEval283F,basisEval2841,basisEval2843,basisEval2845,basisEval2847,basisEval2849,basisEval284D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval2854,basisEval2857,basisEval285A,basisEval285E,basisEval2860,basisEval2862,basisEval2864,basisEval2866,basisEval2868,basisEval286A,basisEval286C,basisEval286E,basisEval2870,basisEval2874];
          tensor[84] intermediateCons28DD#2 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2876,basisEval281A,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2878,basisEval2825,basisEval287A,basisEval280D,basisEval287B,basisEval287D,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval287F,basisEval2838,basisEval2880,basisEval2881,basisEval280D,basisEval2882,basisEval2883,basisEval2845,basisEval280D,basisEval2884,basisEval2885,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2887,basisEval2854,basisEval2888,basisEval2889,basisEval288B,basisEval280D,basisEval288C,basisEval288D,basisEval2864,basisEval288F,basisEval280D,basisEval2890,basisEval2891,basisEval2893,basisEval280D,basisEval2894,basisEval2895,basisEval280D,basisEval2896,basisEval280D];
          tensor[84] intermediateCons28DE#2 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval2897,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval2825,basisEval2899,basisEval280D,basisEval289A,basisEval289B,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval289D,basisEval283B,basisEval289E,basisEval280D,basisEval2841,basisEval2883,basisEval289F,basisEval280D,basisEval28A0,basisEval28A1,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28A3,basisEval2888,basisEval285A,basisEval28A4,basisEval280D,basisEval28A5,basisEval2862,basisEval28A6,basisEval28A7,basisEval280D,basisEval28A8,basisEval2891,basisEval28A9,basisEval280D,basisEval28AA,basisEval28AB,basisEval280D,basisEval2896,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28DF#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval28AC,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval28AD,basisEval28AE,basisEval280D,basisEval280D,basisEval287B,basisEval282D,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval28B0,basisEval28B1,basisEval28B2,basisEval280D,basisEval280D,basisEval2882,basisEval2843,basisEval28B3,basisEval280D,basisEval280D,basisEval28B4,basisEval2885,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval28B6,basisEval28B7,basisEval28B8,basisEval28B9,basisEval280D,basisEval280D,basisEval288C,basisEval2862,basisEval28BA,basisEval28BB,basisEval280D,basisEval280D,basisEval28BC,basisEval2891,basisEval286C,basisEval280D,basisEval280D,basisEval28BD,basisEval28BE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E0#2 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval280D,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval28C1,basisEval287A,basisEval280D,basisEval280D,basisEval287B,basisEval289B,basisEval280D,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval28B0,basisEval28C3,basisEval2881,basisEval280D,basisEval280D,basisEval28C4,basisEval2883,basisEval28C5,basisEval280D,basisEval280D,basisEval28B4,basisEval28C6,basisEval280D,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28C8,basisEval28C9,basisEval28CA,basisEval288B,basisEval280D,basisEval280D,basisEval28CB,basisEval2862,basisEval2864,basisEval28CC,basisEval280D,basisEval280D,basisEval2890,basisEval28CD,basisEval28A9,basisEval280D,basisEval280D,basisEval28BD,basisEval28CE,basisEval280D,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E1#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D0,basisEval281A,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D1,basisEval28AD,basisEval2829,basisEval280D,basisEval280D,basisEval282B,basisEval289B,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D2,basisEval28D3,basisEval28C3,basisEval283F,basisEval280D,basisEval280D,basisEval28D4,basisEval2843,basisEval289F,basisEval280D,basisEval280D,basisEval28A0,basisEval28C6,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D5,basisEval28D6,basisEval28B7,basisEval28D7,basisEval285E,basisEval280D,basisEval280D,basisEval28D8,basisEval28D9,basisEval2864,basisEval28A7,basisEval280D,basisEval280D,basisEval2868,basisEval2891,basisEval28DA,basisEval280D,basisEval280D,basisEval28DB,basisEval28CE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] projParam29C4#1 = intermediateCons28DC;
          real vdot29C5#1 = VDot<84>(femDofs2565,projParam29C4);
          tensor[84] projParam29C6#1 = intermediateCons28DD;
          real vdot29C7#1 = VDot<84>(femDofs2565,projParam29C6);
          tensor[84] projParam29C8#1 = intermediateCons28DE;
          real vdot29C9#1 = VDot<84>(femDofs2565,projParam29C8);
          tensor[3] tensor29CA#1 = <tensor[3]>[vdot29C5,vdot29C7,vdot29C9];
          tensor[84] projParam29CB#1 = intermediateCons28DD;
          real vdot29CC#1 = VDot<84>(femDofs2565,projParam29CB);
          tensor[84] projParam29CD#1 = intermediateCons28DF;
          real vdot29CE#1 = VDot<84>(femDofs2565,projParam29CD);
          tensor[84] projParam29CF#1 = intermediateCons28E0;
          real vdot29D0#1 = VDot<84>(femDofs2565,projParam29CF);
          tensor[3] tensor29D1#1 = <tensor[3]>[vdot29CC,vdot29CE,vdot29D0];
          tensor[84] projParam29D2#1 = intermediateCons28DE;
          real vdot29D3#1 = VDot<84>(femDofs2565,projParam29D2);
          tensor[84] projParam29D4#1 = intermediateCons28E0;
          real vdot29D5#1 = VDot<84>(femDofs2565,projParam29D4);
          tensor[84] projParam29D6#1 = intermediateCons28E1;
          real vdot29D7#1 = VDot<84>(femDofs2565,projParam29D6);
          tensor[3] tensor29D8#1 = <tensor[3]>[vdot29D3,vdot29D5,vdot29D7];
          tensor[3,3] _t29C3#1 = <tensor[3,3]>[tensor29CA,tensor29D1,tensor29D8];
          real[3] _t29F0#1 = EigenVals3x3(_t29C3);
          int _t29F2#1 = 1;
          real _t29F4#1 = Subscript<real[3]>(_t29F0,_t29F2);
          real varAcc29F7#5 = VIndex<3,0>(pos235B);
          real varAcc29F8#5 = VIndex<3,1>(pos235B);
          real varAcc29F9#5 = VIndex<3,2>(pos235B);
          real basisEval29FA#84 = 0.e0;
          real coeff29FB#79 = 0.1e1;
          real prod29FC#6 = RMul(coeff29FB,coeff29FB);
          real prod29FD#1 = RMul(coeff29FB,prod29FC);
          real basisEval29FE#3 = RMul(coeff29FB,prod29FD);
          real iden29FF#6 = varAcc29F9;
          real prod2A00#5 = RMul(coeff29FB,iden29FF);
          real prod2A01#2 = RMul(coeff29FB,prod2A00);
          real basisEval2A02#2 = RMul(coeff29FB,prod2A01);
          real iden2A03#6 = varAcc29F8;
          real prod2A04#5 = RMul(iden2A03,coeff29FB);
          real prod2A05#2 = RMul(coeff29FB,prod2A04);
          real basisEval2A06#2 = RMul(coeff29FB,prod2A05);
          real coeff2A07#34 = 0.2e1;
          real iden2A08#16 = varAcc29F7;
          real prod2A09#2 = RMul(iden2A08,prod29FC);
          real basisEval2A0A#1 = RMul(coeff2A07,prod2A09);
          real prod22A0B#5 = RMul(iden29FF,varAcc29F9);
          real prod2A0C#4 = RMul(coeff29FB,prod22A0B);
          real prod2A0D#2 = RMul(coeff29FB,prod2A0C);
          real basisEval2A0E#2 = RMul(coeff29FB,prod2A0D);
          real prod2A0F#4 = RMul(iden2A03,iden29FF);
          real prod2A10#2 = RMul(coeff29FB,prod2A0F);
          real basisEval2A11#1 = RMul(coeff29FB,prod2A10);
          real prod22A12#5 = RMul(iden2A03,varAcc29F8);
          real prod2A13#4 = RMul(prod22A12,coeff29FB);
          real prod2A14#2 = RMul(coeff29FB,prod2A13);
          real basisEval2A15#2 = RMul(coeff29FB,prod2A14);
          real prod2A16#2 = RMul(iden2A08,prod2A00);
          real basisEval2A17#2 = RMul(coeff2A07,prod2A16);
          real prod2A18#2 = RMul(iden2A08,prod2A04);
          real basisEval2A19#2 = RMul(coeff2A07,prod2A18);
          real coeff2A1A#24 = 0.3e1;
          real prod22A1B#11 = RMul(iden2A08,varAcc29F7);
          real prod2A1C#2 = RMul(prod22A1B,prod29FC);
          real basisEval2A1D#1 = RMul(coeff2A1A,prod2A1C);
          real prod32A1E#4 = RMul(prod22A0B,varAcc29F9);
          real prod2A1F#3 = RMul(coeff29FB,prod32A1E);
          real prod2A20#2 = RMul(coeff29FB,prod2A1F);
          real basisEval2A21#2 = RMul(coeff29FB,prod2A20);
          real prod2A22#3 = RMul(iden2A03,prod22A0B);
          real prod2A23#3 = RMul(coeff29FB,prod2A22);
          real basisEval2A24#1 = RMul(coeff29FB,prod2A23);
          real prod2A25#3 = RMul(prod22A12,iden29FF);
          real prod2A26#3 = RMul(coeff29FB,prod2A25);
          real basisEval2A27#1 = RMul(coeff29FB,prod2A26);
          real prod32A28#4 = RMul(prod22A12,varAcc29F8);
          real prod2A29#3 = RMul(prod32A28,coeff29FB);
          real prod2A2A#2 = RMul(coeff29FB,prod2A29);
          real basisEval2A2B#2 = RMul(coeff29FB,prod2A2A);
          real prod2A2C#3 = RMul(iden2A08,prod2A0C);
          real basisEval2A2D#1 = RMul(coeff2A07,prod2A2C);
          real prod2A2E#1 = RMul(iden2A08,prod2A0F);
          real basisEval2A2F#3 = RMul(coeff2A07,prod2A2E);
          real prod2A30#3 = RMul(iden2A08,prod2A13);
          real basisEval2A31#1 = RMul(coeff2A07,prod2A30);
          real prod2A32#3 = RMul(prod22A1B,prod2A00);
          real basisEval2A33#1 = RMul(coeff2A1A,prod2A32);
          real prod2A34#3 = RMul(prod22A1B,prod2A04);
          real basisEval2A35#1 = RMul(coeff2A1A,prod2A34);
          real coeff2A36#18 = 0.4e1;
          real prod32A37#7 = RMul(prod22A1B,varAcc29F7);
          real prod2A38#2 = RMul(prod32A37,prod29FC);
          real basisEval2A39#1 = RMul(coeff2A36,prod2A38);
          real prod42A3A#3 = RMul(prod32A1E,varAcc29F9);
          real prod2A3B#2 = RMul(coeff29FB,prod42A3A);
          real prod2A3C#2 = RMul(coeff29FB,prod2A3B);
          real basisEval2A3D#2 = RMul(coeff29FB,prod2A3C);
          real prod2A3E#2 = RMul(iden2A03,prod32A1E);
          real prod2A3F#3 = RMul(coeff29FB,prod2A3E);
          real basisEval2A40#1 = RMul(coeff29FB,prod2A3F);
          real prod2A41#2 = RMul(prod22A12,prod22A0B);
          real prod2A42#2 = RMul(coeff29FB,prod2A41);
          real basisEval2A43#1 = RMul(coeff29FB,prod2A42);
          real prod2A44#2 = RMul(prod32A28,iden29FF);
          real prod2A45#3 = RMul(coeff29FB,prod2A44);
          real basisEval2A46#1 = RMul(coeff29FB,prod2A45);
          real prod42A47#3 = RMul(prod32A28,varAcc29F8);
          real prod2A48#2 = RMul(prod42A47,coeff29FB);
          real prod2A49#2 = RMul(coeff29FB,prod2A48);
          real basisEval2A4A#2 = RMul(coeff29FB,prod2A49);
          real prod2A4B#3 = RMul(iden2A08,prod2A1F);
          real basisEval2A4C#1 = RMul(coeff2A07,prod2A4B);
          real prod2A4D#2 = RMul(iden2A08,prod2A22);
          real basisEval2A4E#2 = RMul(coeff2A07,prod2A4D);
          real prod2A4F#2 = RMul(iden2A08,prod2A25);
          real basisEval2A50#2 = RMul(coeff2A07,prod2A4F);
          real prod2A51#3 = RMul(iden2A08,prod2A29);
          real basisEval2A52#1 = RMul(coeff2A07,prod2A51);
          real prod2A53#2 = RMul(prod22A1B,prod2A0C);
          real basisEval2A54#2 = RMul(coeff2A1A,prod2A53);
          real prod2A55#2 = RMul(prod22A1B,prod2A0F);
          real basisEval2A56#1 = RMul(coeff2A1A,prod2A55);
          real prod2A57#2 = RMul(prod22A1B,prod2A13);
          real basisEval2A58#2 = RMul(coeff2A1A,prod2A57);
          real prod2A59#3 = RMul(prod32A37,prod2A00);
          real basisEval2A5A#1 = RMul(coeff2A36,prod2A59);
          real prod2A5B#3 = RMul(prod32A37,prod2A04);
          real basisEval2A5C#1 = RMul(coeff2A36,prod2A5B);
          real coeff2A5D#9 = 0.5e1;
          real prod42A5E#4 = RMul(prod32A37,varAcc29F7);
          real prod2A5F#2 = RMul(prod42A5E,prod29FC);
          real basisEval2A60#1 = RMul(coeff2A5D,prod2A5F);
          real prod52A61#1 = RMul(prod42A3A,varAcc29F9);
          real prod2A62#1 = RMul(coeff29FB,prod52A61);
          real prod2A63#2 = RMul(coeff29FB,prod2A62);
          real basisEval2A64#2 = RMul(coeff29FB,prod2A63);
          real prod2A65#1 = RMul(iden2A03,prod42A3A);
          real prod2A66#3 = RMul(coeff29FB,prod2A65);
          real basisEval2A67#1 = RMul(coeff29FB,prod2A66);
          real prod2A68#1 = RMul(prod22A12,prod32A1E);
          real prod2A69#3 = RMul(coeff29FB,prod2A68);
          real basisEval2A6A#1 = RMul(coeff29FB,prod2A69);
          real prod2A6B#1 = RMul(prod32A28,prod22A0B);
          real prod2A6C#3 = RMul(coeff29FB,prod2A6B);
          real basisEval2A6D#1 = RMul(coeff29FB,prod2A6C);
          real prod2A6E#1 = RMul(prod42A47,iden29FF);
          real prod2A6F#3 = RMul(coeff29FB,prod2A6E);
          real basisEval2A70#1 = RMul(coeff29FB,prod2A6F);
          real prod52A71#1 = RMul(prod42A47,varAcc29F8);
          real prod2A72#1 = RMul(prod52A71,coeff29FB);
          real prod2A73#2 = RMul(coeff29FB,prod2A72);
          real basisEval2A74#2 = RMul(coeff29FB,prod2A73);
          real prod2A75#3 = RMul(iden2A08,prod2A3B);
          real basisEval2A76#1 = RMul(coeff2A07,prod2A75);
          real prod2A77#2 = RMul(iden2A08,prod2A3E);
          real basisEval2A78#2 = RMul(coeff2A07,prod2A77);
          real prod2A79#2 = RMul(iden2A08,prod2A41);
          real basisEval2A7A#1 = RMul(coeff2A07,prod2A79);
          real prod2A7B#2 = RMul(iden2A08,prod2A44);
          real basisEval2A7C#2 = RMul(coeff2A07,prod2A7B);
          real prod2A7D#3 = RMul(iden2A08,prod2A48);
          real basisEval2A7E#1 = RMul(coeff2A07,prod2A7D);
          real prod2A7F#3 = RMul(prod22A1B,prod2A1F);
          real basisEval2A80#1 = RMul(coeff2A1A,prod2A7F);
          real prod2A81#2 = RMul(prod22A1B,prod2A22);
          real basisEval2A82#2 = RMul(coeff2A1A,prod2A81);
          real prod2A83#2 = RMul(prod22A1B,prod2A25);
          real basisEval2A84#2 = RMul(coeff2A1A,prod2A83);
          real prod2A85#3 = RMul(prod22A1B,prod2A29);
          real basisEval2A86#1 = RMul(coeff2A1A,prod2A85);
          real prod2A87#3 = RMul(prod32A37,prod2A0C);
          real basisEval2A88#1 = RMul(coeff2A36,prod2A87);
          real prod2A89#2 = RMul(prod32A37,prod2A0F);
          real basisEval2A8A#1 = RMul(coeff2A36,prod2A89);
          real prod2A8B#3 = RMul(prod32A37,prod2A13);
          real basisEval2A8C#1 = RMul(coeff2A36,prod2A8B);
          real prod2A8D#3 = RMul(prod42A5E,prod2A00);
          real basisEval2A8E#1 = RMul(coeff2A5D,prod2A8D);
          real prod2A8F#3 = RMul(prod42A5E,prod2A04);
          real basisEval2A90#1 = RMul(coeff2A5D,prod2A8F);
          real coeff2A91#3 = 0.6e1;
          real prod52A92#1 = RMul(prod42A5E,varAcc29F7);
          real prod2A93#2 = RMul(prod52A92,prod29FC);
          real basisEval2A94#1 = RMul(coeff2A91,prod2A93);
          real basisEval2A95#1 = RMul(coeff2A07,prod2A05);
          real basisEval2A96#2 = RMul(coeff29FB,prod2A09);
          real basisEval2A97#2 = RMul(coeff2A07,prod2A10);
          real basisEval2A98#1 = RMul(coeff2A1A,prod2A14);
          real basisEval2A99#1 = RMul(coeff29FB,prod2A16);
          real basisEval2A9A#2 = RMul(coeff29FB,prod2A1C);
          real basisEval2A9B#1 = RMul(coeff2A07,prod2A23);
          real basisEval2A9C#1 = RMul(coeff2A1A,prod2A26);
          real basisEval2A9D#1 = RMul(coeff2A36,prod2A2A);
          real basisEval2A9E#1 = RMul(coeff29FB,prod2A2C);
          real basisEval2A9F#1 = RMul(coeff2A1A,prod2A30);
          real basisEval2AA0#1 = RMul(coeff29FB,prod2A32);
          real basisEval2AA1#1 = RMul(coeff2A07,prod2A34);
          real basisEval2AA2#2 = RMul(coeff29FB,prod2A38);
          real basisEval2AA3#1 = RMul(coeff2A07,prod2A3F);
          real basisEval2AA4#2 = RMul(coeff2A1A,prod2A42);
          real basisEval2AA5#1 = RMul(coeff2A36,prod2A45);
          real basisEval2AA6#1 = RMul(coeff2A5D,prod2A49);
          real basisEval2AA7#1 = RMul(coeff29FB,prod2A4B);
          real basisEval2AA8#1 = RMul(coeff2A1A,prod2A4F);
          real basisEval2AA9#1 = RMul(coeff2A36,prod2A51);
          real basisEval2AAA#1 = RMul(coeff29FB,prod2A53);
          real basisEval2AAB#2 = RMul(coeff2A07,prod2A55);
          real basisEval2AAC#1 = RMul(coeff29FB,prod2A59);
          real basisEval2AAD#1 = RMul(coeff2A07,prod2A5B);
          real basisEval2AAE#2 = RMul(coeff29FB,prod2A5F);
          real basisEval2AAF#1 = RMul(coeff2A07,prod2A66);
          real basisEval2AB0#1 = RMul(coeff2A1A,prod2A69);
          real basisEval2AB1#1 = RMul(coeff2A36,prod2A6C);
          real basisEval2AB2#1 = RMul(coeff2A5D,prod2A6F);
          real basisEval2AB3#1 = RMul(coeff2A91,prod2A73);
          real basisEval2AB4#1 = RMul(coeff29FB,prod2A75);
          real basisEval2AB5#2 = RMul(coeff2A1A,prod2A79);
          real basisEval2AB6#1 = RMul(coeff2A36,prod2A7B);
          real basisEval2AB7#1 = RMul(coeff2A5D,prod2A7D);
          real basisEval2AB8#1 = RMul(coeff29FB,prod2A7F);
          real basisEval2AB9#1 = RMul(coeff2A07,prod2A81);
          real basisEval2ABA#1 = RMul(coeff2A36,prod2A85);
          real basisEval2ABB#1 = RMul(coeff29FB,prod2A87);
          real basisEval2ABC#2 = RMul(coeff2A07,prod2A89);
          real basisEval2ABD#1 = RMul(coeff2A1A,prod2A8B);
          real basisEval2ABE#1 = RMul(coeff29FB,prod2A8D);
          real basisEval2ABF#1 = RMul(coeff2A07,prod2A8F);
          real basisEval2AC0#2 = RMul(coeff29FB,prod2A93);
          real basisEval2AC1#1 = RMul(coeff2A07,prod2A01);
          real basisEval2AC2#1 = RMul(coeff2A1A,prod2A0D);
          real basisEval2AC3#1 = RMul(coeff29FB,prod2A18);
          real basisEval2AC4#1 = RMul(coeff2A36,prod2A20);
          real basisEval2AC5#1 = RMul(coeff2A1A,prod2A23);
          real basisEval2AC6#1 = RMul(coeff2A07,prod2A26);
          real basisEval2AC7#1 = RMul(coeff2A1A,prod2A2C);
          real basisEval2AC8#1 = RMul(coeff29FB,prod2A30);
          real basisEval2AC9#1 = RMul(coeff2A07,prod2A32);
          real basisEval2ACA#1 = RMul(coeff29FB,prod2A34);
          real basisEval2ACB#1 = RMul(coeff2A5D,prod2A3C);
          real basisEval2ACC#1 = RMul(coeff2A36,prod2A3F);
          real basisEval2ACD#1 = RMul(coeff2A07,prod2A45);
          real basisEval2ACE#1 = RMul(coeff2A36,prod2A4B);
          real basisEval2ACF#1 = RMul(coeff2A1A,prod2A4D);
          real basisEval2AD0#1 = RMul(coeff29FB,prod2A51);
          real basisEval2AD1#1 = RMul(coeff29FB,prod2A57);
          real basisEval2AD2#1 = RMul(coeff2A07,prod2A59);
          real basisEval2AD3#1 = RMul(coeff29FB,prod2A5B);
          real basisEval2AD4#1 = RMul(coeff2A91,prod2A63);
          real basisEval2AD5#1 = RMul(coeff2A5D,prod2A66);
          real basisEval2AD6#1 = RMul(coeff2A36,prod2A69);
          real basisEval2AD7#1 = RMul(coeff2A1A,prod2A6C);
          real basisEval2AD8#1 = RMul(coeff2A07,prod2A6F);
          real basisEval2AD9#1 = RMul(coeff2A5D,prod2A75);
          real basisEval2ADA#1 = RMul(coeff2A36,prod2A77);
          real basisEval2ADB#1 = RMul(coeff29FB,prod2A7D);
          real basisEval2ADC#1 = RMul(coeff2A36,prod2A7F);
          real basisEval2ADD#1 = RMul(coeff2A07,prod2A83);
          real basisEval2ADE#1 = RMul(coeff29FB,prod2A85);
          real basisEval2ADF#1 = RMul(coeff2A1A,prod2A87);
          real basisEval2AE0#1 = RMul(coeff29FB,prod2A8B);
          real basisEval2AE1#1 = RMul(coeff2A07,prod2A8D);
          real basisEval2AE2#1 = RMul(coeff29FB,prod2A8F);
          tensor[84] intermediateCons2AE3#1 = <tensor[84]>[basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FE,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A02,basisEval2A06,basisEval2A0A,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A0E,basisEval2A11,basisEval2A15,basisEval2A17,basisEval2A19,basisEval2A1D,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A21,basisEval2A24,basisEval2A27,basisEval2A2B,basisEval2A2D,basisEval2A2F,basisEval2A31,basisEval2A33,basisEval2A35,basisEval2A39,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A3D,basisEval2A40,basisEval2A43,basisEval2A46,basisEval2A4A,basisEval2A4C,basisEval2A4E,basisEval2A50,basisEval2A52,basisEval2A54,basisEval2A56,basisEval2A58,basisEval2A5A,basisEval2A5C,basisEval2A60,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval29FA,basisEval2A64,basisEval2A67,basisEval2A6A,basisEval2A6D,basisEval2A70,basisEval2A74,basisEval2A76,basisEval2A78,basisEval2A7A,basisEval2A7C,basisEval2A7E,basisEval2A80,basisEval2A82,basisEval2A84,basisEval2A86,basisEval2A88,basisEval2A8A,basisEval2A8C,basisEval2A8E,basisEval2A90,basisEval2A94];
          tensor[84] intermediateCons2AE4#1 = <tensor[84]>[basisEval29FA,basisEval29FA,basisEval29FE,basisEval29FA,basisEval29FA,basisEval2A02,basisEval2A95,basisEval29FA,basisEval2A96,basisEval29FA,basisEval29FA,basisEval2A0E,basisEval2A97,basisEval2A98,basisEval29FA,basisEval2A99,basisEval2A19,basisEval29FA,basisEval2A9A,basisEval29FA,basisEval29FA,basisEval2A21,basisEval2A9B,basisEval2A9C,basisEval2A9D,basisEval29FA,basisEval2A9E,basisEval2A2F,basisEval2A9F,basisEval29FA,basisEval2AA0,basisEval2AA1,basisEval29FA,basisEval2AA2,basisEval29FA,basisEval29FA,basisEval2A3D,basisEval2AA3,basisEval2AA4,basisEval2AA5,basisEval2AA6,basisEval29FA,basisEval2AA7,basisEval2A4E,basisEval2AA8,basisEval2AA9,basisEval29FA,basisEval2AAA,basisEval2AAB,basisEval2A58,basisEval29FA,basisEval2AAC,basisEval2AAD,basisEval29FA,basisEval2AAE,basisEval29FA,basisEval29FA,basisEval2A64,basisEval2AAF,basisEval2AB0,basisEval2AB1,basisEval2AB2,basisEval2AB3,basisEval29FA,basisEval2AB4,basisEval2A78,basisEval2AB5,basisEval2AB6,basisEval2AB7,basisEval29FA,basisEval2AB8,basisEval2AB9,basisEval2A84,basisEval2ABA,basisEval29FA,basisEval2ABB,basisEval2ABC,basisEval2ABD,basisEval29FA,basisEval2ABE,basisEval2ABF,basisEval29FA,basisEval2AC0,basisEval29FA];
          tensor[84] intermediateCons2AE5#1 = <tensor[84]>[basisEval29FA,basisEval29FE,basisEval29FA,basisEval29FA,basisEval2AC1,basisEval2A06,basisEval29FA,basisEval2A96,basisEval29FA,basisEval29FA,basisEval2AC2,basisEval2A97,basisEval2A15,basisEval29FA,basisEval2A17,basisEval2AC3,basisEval29FA,basisEval2A9A,basisEval29FA,basisEval29FA,basisEval2AC4,basisEval2AC5,basisEval2AC6,basisEval2A2B,basisEval29FA,basisEval2AC7,basisEval2A2F,basisEval2AC8,basisEval29FA,basisEval2AC9,basisEval2ACA,basisEval29FA,basisEval2AA2,basisEval29FA,basisEval29FA,basisEval2ACB,basisEval2ACC,basisEval2AA4,basisEval2ACD,basisEval2A4A,basisEval29FA,basisEval2ACE,basisEval2ACF,basisEval2A50,basisEval2AD0,basisEval29FA,basisEval2A54,basisEval2AAB,basisEval2AD1,basisEval29FA,basisEval2AD2,basisEval2AD3,basisEval29FA,basisEval2AAE,basisEval29FA,basisEval29FA,basisEval2AD4,basisEval2AD5,basisEval2AD6,basisEval2AD7,basisEval2AD8,basisEval2A74,basisEval29FA,basisEval2AD9,basisEval2ADA,basisEval2AB5,basisEval2A7C,basisEval2ADB,basisEval29FA,basisEval2ADC,basisEval2A82,basisEval2ADD,basisEval2ADE,basisEval29FA,basisEval2ADF,basisEval2ABC,basisEval2AE0,basisEval29FA,basisEval2AE1,basisEval2AE2,basisEval29FA,basisEval2AC0,basisEval29FA,basisEval29FA];
          tensor[84] projParam2BD9#1 = intermediateCons2AE3;
          real vdot2BDA#1 = VDot<84>(femDofs2565,projParam2BD9);
          tensor[84] projParam2BDB#1 = intermediateCons2AE4;
          real vdot2BDC#1 = VDot<84>(femDofs2565,projParam2BDB);
          tensor[84] projParam2BDD#1 = intermediateCons2AE5;
          real vdot2BDE#1 = VDot<84>(femDofs2565,projParam2BDD);
          tensor[3] probe_l_62BD8#2 = <tensor[3]>[vdot2BDA,vdot2BDC,vdot2BDE];
          real op1_e3_l_82BE7#1 = VDot<3>(probe_l_62BD8,probe_l_62BD8);
          real op1_e3_l_92BEA#1 = Sqrt(op1_e3_l_82BE7);
          real op1_e3_l_102BED#1 = RNeg(_t29F4);
          real op1_e3_l_112BF0#1 = RAdd(fBias2329,op1_e3_l_92BEA);
          real _t2BF3#1 = RDiv(op1_e3_l_102BED,op1_e3_l_112BF0);
          bool _t2BF6#1 = GT<real>(_t2BF3,fStrTh2325);
          if _t2BF6 then goto ASSIGN2BFA else goto ASSIGN389A
        ASSIGN2BFA:  preds = [COND2BF8]
          real _t2BF9#1 = 0.1e1;
          bool _t2BFB#1 = GTE<real>(_t2BF9,fMaskTh2327);
          if _t2BFB then goto ASSIGN2BFF else goto ASSIGN3899
        ASSIGN2BFF:  preds = [COND2BFD]
          bool _t2BFE#1 = true;
          goto JOIN2C02
        JOIN2C02:  preds = [ASSIGN2BFF,ASSIGN3899]
          bool _t2C00#1 = phi(_t2BFE,_t2C01)
          goto JOIN2C05
        JOIN2C05:  preds = [JOIN2C02,ASSIGN389A]
          bool _t2C03#1 = phi(_t2C00,_t2C04)
          goto JOIN2C08
        JOIN2C08:  preds = [JOIN2C05,ASSIGN389B]
          bool _t2C06#1 = phi(_t2C03,_t2C07)
          bool _t2C09#1 = BNot(_t2C06);
          if _t2C09 then goto SAVE2C0C else goto JOIN2C0E
        SAVE2C0C:  preds = [COND2C0B]
          self.rayN = rayN234F;
          active
          goto JOIN2C0E
        JOIN2C0E:  preds = [*ACTIVE2C0D,COND2C0B]
          int ilit2C10#1 = 84;
          int mulRes2C11#84 = IMul(_t2313,ilit2C10);
          int addRes2C13#1 = mulRes2C11;
          int idx2C14#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C13);
          int ilit2C15#1 = 1;
          int addRes2C16#1 = IAdd(mulRes2C11,ilit2C15);
          int idx2C17#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C16);
          int ilit2C18#1 = 2;
          int addRes2C19#1 = IAdd(mulRes2C11,ilit2C18);
          int idx2C1A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C19);
          int ilit2C1B#1 = 3;
          int addRes2C1C#1 = IAdd(mulRes2C11,ilit2C1B);
          int idx2C1D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1C);
          int ilit2C1E#1 = 4;
          int addRes2C1F#1 = IAdd(mulRes2C11,ilit2C1E);
          int idx2C20#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1F);
          int ilit2C21#1 = 5;
          int addRes2C22#1 = IAdd(mulRes2C11,ilit2C21);
          int idx2C23#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C22);
          int ilit2C24#1 = 6;
          int addRes2C25#1 = IAdd(mulRes2C11,ilit2C24);
          int idx2C26#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C25);
          int ilit2C27#1 = 7;
          int addRes2C28#1 = IAdd(mulRes2C11,ilit2C27);
          int idx2C29#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C28);
          int ilit2C2A#1 = 8;
          int addRes2C2B#1 = IAdd(mulRes2C11,ilit2C2A);
          int idx2C2C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2B);
          int ilit2C2D#1 = 9;
          int addRes2C2E#1 = IAdd(mulRes2C11,ilit2C2D);
          int idx2C2F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2E);
          int ilit2C30#1 = 10;
          int addRes2C31#1 = IAdd(mulRes2C11,ilit2C30);
          int idx2C32#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C31);
          int ilit2C33#1 = 11;
          int addRes2C34#1 = IAdd(mulRes2C11,ilit2C33);
          int idx2C35#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C34);
          int ilit2C36#1 = 12;
          int addRes2C37#1 = IAdd(mulRes2C11,ilit2C36);
          int idx2C38#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C37);
          int ilit2C39#1 = 13;
          int addRes2C3A#1 = IAdd(mulRes2C11,ilit2C39);
          int idx2C3B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3A);
          int ilit2C3C#1 = 14;
          int addRes2C3D#1 = IAdd(mulRes2C11,ilit2C3C);
          int idx2C3E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3D);
          int ilit2C3F#1 = 15;
          int addRes2C40#1 = IAdd(mulRes2C11,ilit2C3F);
          int idx2C41#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C40);
          int ilit2C42#1 = 16;
          int addRes2C43#1 = IAdd(mulRes2C11,ilit2C42);
          int idx2C44#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C43);
          int ilit2C45#1 = 17;
          int addRes2C46#1 = IAdd(mulRes2C11,ilit2C45);
          int idx2C47#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C46);
          int ilit2C48#1 = 18;
          int addRes2C49#1 = IAdd(mulRes2C11,ilit2C48);
          int idx2C4A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C49);
          int ilit2C4B#1 = 19;
          int addRes2C4C#1 = IAdd(mulRes2C11,ilit2C4B);
          int idx2C4D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4C);
          int ilit2C4E#1 = 20;
          int addRes2C4F#1 = IAdd(mulRes2C11,ilit2C4E);
          int idx2C50#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4F);
          int ilit2C51#1 = 21;
          int addRes2C52#1 = IAdd(mulRes2C11,ilit2C51);
          int idx2C53#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C52);
          int ilit2C54#1 = 22;
          int addRes2C55#1 = IAdd(mulRes2C11,ilit2C54);
          int idx2C56#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C55);
          int ilit2C57#1 = 23;
          int addRes2C58#1 = IAdd(mulRes2C11,ilit2C57);
          int idx2C59#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C58);
          int ilit2C5A#1 = 24;
          int addRes2C5B#1 = IAdd(mulRes2C11,ilit2C5A);
          int idx2C5C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5B);
          int ilit2C5D#1 = 25;
          int addRes2C5E#1 = IAdd(mulRes2C11,ilit2C5D);
          int idx2C5F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5E);
          int ilit2C60#1 = 26;
          int addRes2C61#1 = IAdd(mulRes2C11,ilit2C60);
          int idx2C62#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C61);
          int ilit2C63#1 = 27;
          int addRes2C64#1 = IAdd(mulRes2C11,ilit2C63);
          int idx2C65#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C64);
          int ilit2C66#1 = 28;
          int addRes2C67#1 = IAdd(mulRes2C11,ilit2C66);
          int idx2C68#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C67);
          int ilit2C69#1 = 29;
          int addRes2C6A#1 = IAdd(mulRes2C11,ilit2C69);
          int idx2C6B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6A);
          int ilit2C6C#1 = 30;
          int addRes2C6D#1 = IAdd(mulRes2C11,ilit2C6C);
          int idx2C6E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6D);
          int ilit2C6F#1 = 31;
          int addRes2C70#1 = IAdd(mulRes2C11,ilit2C6F);
          int idx2C71#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C70);
          int ilit2C72#1 = 32;
          int addRes2C73#1 = IAdd(mulRes2C11,ilit2C72);
          int idx2C74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C73);
          int ilit2C75#1 = 33;
          int addRes2C76#1 = IAdd(mulRes2C11,ilit2C75);
          int idx2C77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C76);
          int ilit2C78#1 = 34;
          int addRes2C79#1 = IAdd(mulRes2C11,ilit2C78);
          int idx2C7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C79);
          int ilit2C7B#1 = 35;
          int addRes2C7C#1 = IAdd(mulRes2C11,ilit2C7B);
          int idx2C7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7C);
          int ilit2C7E#1 = 36;
          int addRes2C7F#1 = IAdd(mulRes2C11,ilit2C7E);
          int idx2C80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7F);
          int ilit2C81#1 = 37;
          int addRes2C82#1 = IAdd(mulRes2C11,ilit2C81);
          int idx2C83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C82);
          int ilit2C84#1 = 38;
          int addRes2C85#1 = IAdd(mulRes2C11,ilit2C84);
          int idx2C86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C85);
          int ilit2C87#1 = 39;
          int addRes2C88#1 = IAdd(mulRes2C11,ilit2C87);
          int idx2C89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C88);
          int ilit2C8A#1 = 40;
          int addRes2C8B#1 = IAdd(mulRes2C11,ilit2C8A);
          int idx2C8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8B);
          int ilit2C8D#1 = 41;
          int addRes2C8E#1 = IAdd(mulRes2C11,ilit2C8D);
          int idx2C8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8E);
          int ilit2C90#1 = 42;
          int addRes2C91#1 = IAdd(mulRes2C11,ilit2C90);
          int idx2C92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C91);
          int ilit2C93#1 = 43;
          int addRes2C94#1 = IAdd(mulRes2C11,ilit2C93);
          int idx2C95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C94);
          int ilit2C96#1 = 44;
          int addRes2C97#1 = IAdd(mulRes2C11,ilit2C96);
          int idx2C98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C97);
          int ilit2C99#1 = 45;
          int addRes2C9A#1 = IAdd(mulRes2C11,ilit2C99);
          int idx2C9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9A);
          int ilit2C9C#1 = 46;
          int addRes2C9D#1 = IAdd(mulRes2C11,ilit2C9C);
          int idx2C9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9D);
          int ilit2C9F#1 = 47;
          int addRes2CA0#1 = IAdd(mulRes2C11,ilit2C9F);
          int idx2CA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA0);
          int ilit2CA2#1 = 48;
          int addRes2CA3#1 = IAdd(mulRes2C11,ilit2CA2);
          int idx2CA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA3);
          int ilit2CA5#1 = 49;
          int addRes2CA6#1 = IAdd(mulRes2C11,ilit2CA5);
          int idx2CA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA6);
          int ilit2CA8#1 = 50;
          int addRes2CA9#1 = IAdd(mulRes2C11,ilit2CA8);
          int idx2CAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA9);
          int ilit2CAB#1 = 51;
          int addRes2CAC#1 = IAdd(mulRes2C11,ilit2CAB);
          int idx2CAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAC);
          int ilit2CAE#1 = 52;
          int addRes2CAF#1 = IAdd(mulRes2C11,ilit2CAE);
          int idx2CB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAF);
          int ilit2CB1#1 = 53;
          int addRes2CB2#1 = IAdd(mulRes2C11,ilit2CB1);
          int idx2CB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB2);
          int ilit2CB4#1 = 54;
          int addRes2CB5#1 = IAdd(mulRes2C11,ilit2CB4);
          int idx2CB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB5);
          int ilit2CB7#1 = 55;
          int addRes2CB8#1 = IAdd(mulRes2C11,ilit2CB7);
          int idx2CB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB8);
          int ilit2CBA#1 = 56;
          int addRes2CBB#1 = IAdd(mulRes2C11,ilit2CBA);
          int idx2CBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBB);
          int ilit2CBD#1 = 57;
          int addRes2CBE#1 = IAdd(mulRes2C11,ilit2CBD);
          int idx2CBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBE);
          int ilit2CC0#1 = 58;
          int addRes2CC1#1 = IAdd(mulRes2C11,ilit2CC0);
          int idx2CC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC1);
          int ilit2CC3#1 = 59;
          int addRes2CC4#1 = IAdd(mulRes2C11,ilit2CC3);
          int idx2CC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC4);
          int ilit2CC6#1 = 60;
          int addRes2CC7#1 = IAdd(mulRes2C11,ilit2CC6);
          int idx2CC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC7);
          int ilit2CC9#1 = 61;
          int addRes2CCA#1 = IAdd(mulRes2C11,ilit2CC9);
          int idx2CCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCA);
          int ilit2CCC#1 = 62;
          int addRes2CCD#1 = IAdd(mulRes2C11,ilit2CCC);
          int idx2CCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCD);
          int ilit2CCF#1 = 63;
          int addRes2CD0#1 = IAdd(mulRes2C11,ilit2CCF);
          int idx2CD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD0);
          int ilit2CD2#1 = 64;
          int addRes2CD3#1 = IAdd(mulRes2C11,ilit2CD2);
          int idx2CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD3);
          int ilit2CD5#1 = 65;
          int addRes2CD6#1 = IAdd(mulRes2C11,ilit2CD5);
          int idx2CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD6);
          int ilit2CD8#1 = 66;
          int addRes2CD9#1 = IAdd(mulRes2C11,ilit2CD8);
          int idx2CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD9);
          int ilit2CDB#1 = 67;
          int addRes2CDC#1 = IAdd(mulRes2C11,ilit2CDB);
          int idx2CDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDC);
          int ilit2CDE#1 = 68;
          int addRes2CDF#1 = IAdd(mulRes2C11,ilit2CDE);
          int idx2CE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDF);
          int ilit2CE1#1 = 69;
          int addRes2CE2#1 = IAdd(mulRes2C11,ilit2CE1);
          int idx2CE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE2);
          int ilit2CE4#1 = 70;
          int addRes2CE5#1 = IAdd(mulRes2C11,ilit2CE4);
          int idx2CE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE5);
          int ilit2CE7#1 = 71;
          int addRes2CE8#1 = IAdd(mulRes2C11,ilit2CE7);
          int idx2CE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE8);
          int ilit2CEA#1 = 72;
          int addRes2CEB#1 = IAdd(mulRes2C11,ilit2CEA);
          int idx2CEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEB);
          int ilit2CED#1 = 73;
          int addRes2CEE#1 = IAdd(mulRes2C11,ilit2CED);
          int idx2CEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEE);
          int ilit2CF0#1 = 74;
          int addRes2CF1#1 = IAdd(mulRes2C11,ilit2CF0);
          int idx2CF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF1);
          int ilit2CF3#1 = 75;
          int addRes2CF4#1 = IAdd(mulRes2C11,ilit2CF3);
          int idx2CF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF4);
          int ilit2CF6#1 = 76;
          int addRes2CF7#1 = IAdd(mulRes2C11,ilit2CF6);
          int idx2CF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF7);
          int ilit2CF9#1 = 77;
          int addRes2CFA#1 = IAdd(mulRes2C11,ilit2CF9);
          int idx2CFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFA);
          int ilit2CFC#1 = 78;
          int addRes2CFD#1 = IAdd(mulRes2C11,ilit2CFC);
          int idx2CFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFD);
          int ilit2CFF#1 = 79;
          int addRes2D00#1 = IAdd(mulRes2C11,ilit2CFF);
          int idx2D01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D00);
          int ilit2D02#1 = 80;
          int addRes2D03#1 = IAdd(mulRes2C11,ilit2D02);
          int idx2D04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D03);
          int ilit2D05#1 = 81;
          int addRes2D06#1 = IAdd(mulRes2C11,ilit2D05);
          int idx2D07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D06);
          int ilit2D08#1 = 82;
          int addRes2D09#1 = IAdd(mulRes2C11,ilit2D08);
          int idx2D0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D09);
          int ilit2D0B#1 = 83;
          int addRes2D0C#1 = IAdd(mulRes2C11,ilit2D0B);
          int idx2D0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D0C);
          int ilit2E10#84 = 1;
          int idx2E12#1 = idx2C14;
          int mulRes2E13#1 = IMul(ilit2E10,idx2E12);
          int idx2E14#1 = idx2C17;
          int mulRes2E15#1 = IMul(ilit2E10,idx2E14);
          int idx2E17#1 = idx2C1A;
          int mulRes2E18#1 = IMul(ilit2E10,idx2E17);
          int idx2E1A#1 = idx2C1D;
          int mulRes2E1B#1 = IMul(ilit2E10,idx2E1A);
          int idx2E1D#1 = idx2C20;
          int mulRes2E1E#1 = IMul(ilit2E10,idx2E1D);
          int idx2E20#1 = idx2C23;
          int mulRes2E21#1 = IMul(ilit2E10,idx2E20);
          int idx2E23#1 = idx2C26;
          int mulRes2E24#1 = IMul(ilit2E10,idx2E23);
          int idx2E26#1 = idx2C29;
          int mulRes2E27#1 = IMul(ilit2E10,idx2E26);
          int idx2E29#1 = idx2C2C;
          int mulRes2E2A#1 = IMul(ilit2E10,idx2E29);
          int idx2E2C#1 = idx2C2F;
          int mulRes2E2D#1 = IMul(ilit2E10,idx2E2C);
          int idx2E2F#1 = idx2C32;
          int mulRes2E30#1 = IMul(ilit2E10,idx2E2F);
          int idx2E32#1 = idx2C35;
          int mulRes2E33#1 = IMul(ilit2E10,idx2E32);
          int idx2E35#1 = idx2C38;
          int mulRes2E36#1 = IMul(ilit2E10,idx2E35);
          int idx2E38#1 = idx2C3B;
          int mulRes2E39#1 = IMul(ilit2E10,idx2E38);
          int idx2E3B#1 = idx2C3E;
          int mulRes2E3C#1 = IMul(ilit2E10,idx2E3B);
          int idx2E3E#1 = idx2C41;
          int mulRes2E3F#1 = IMul(ilit2E10,idx2E3E);
          int idx2E41#1 = idx2C44;
          int mulRes2E42#1 = IMul(ilit2E10,idx2E41);
          int idx2E44#1 = idx2C47;
          int mulRes2E45#1 = IMul(ilit2E10,idx2E44);
          int idx2E47#1 = idx2C4A;
          int mulRes2E48#1 = IMul(ilit2E10,idx2E47);
          int idx2E4A#1 = idx2C4D;
          int mulRes2E4B#1 = IMul(ilit2E10,idx2E4A);
          int idx2E4D#1 = idx2C50;
          int mulRes2E4E#1 = IMul(ilit2E10,idx2E4D);
          int idx2E50#1 = idx2C53;
          int mulRes2E51#1 = IMul(ilit2E10,idx2E50);
          int idx2E53#1 = idx2C56;
          int mulRes2E54#1 = IMul(ilit2E10,idx2E53);
          int idx2E56#1 = idx2C59;
          int mulRes2E57#1 = IMul(ilit2E10,idx2E56);
          int idx2E59#1 = idx2C5C;
          int mulRes2E5A#1 = IMul(ilit2E10,idx2E59);
          int idx2E5C#1 = idx2C5F;
          int mulRes2E5D#1 = IMul(ilit2E10,idx2E5C);
          int idx2E5F#1 = idx2C62;
          int mulRes2E60#1 = IMul(ilit2E10,idx2E5F);
          int idx2E62#1 = idx2C65;
          int mulRes2E63#1 = IMul(ilit2E10,idx2E62);
          int idx2E65#1 = idx2C68;
          int mulRes2E66#1 = IMul(ilit2E10,idx2E65);
          int idx2E68#1 = idx2C6B;
          int mulRes2E69#1 = IMul(ilit2E10,idx2E68);
          int idx2E6B#1 = idx2C6E;
          int mulRes2E6C#1 = IMul(ilit2E10,idx2E6B);
          int idx2E6E#1 = idx2C71;
          int mulRes2E6F#1 = IMul(ilit2E10,idx2E6E);
          int idx2E71#1 = idx2C74;
          int mulRes2E72#1 = IMul(ilit2E10,idx2E71);
          int idx2E74#1 = idx2C77;
          int mulRes2E75#1 = IMul(ilit2E10,idx2E74);
          int idx2E77#1 = idx2C7A;
          int mulRes2E78#1 = IMul(ilit2E10,idx2E77);
          int idx2E7A#1 = idx2C7D;
          int mulRes2E7B#1 = IMul(ilit2E10,idx2E7A);
          int idx2E7D#1 = idx2C80;
          int mulRes2E7E#1 = IMul(ilit2E10,idx2E7D);
          int idx2E80#1 = idx2C83;
          int mulRes2E81#1 = IMul(ilit2E10,idx2E80);
          int idx2E83#1 = idx2C86;
          int mulRes2E84#1 = IMul(ilit2E10,idx2E83);
          int idx2E86#1 = idx2C89;
          int mulRes2E87#1 = IMul(ilit2E10,idx2E86);
          int idx2E89#1 = idx2C8C;
          int mulRes2E8A#1 = IMul(ilit2E10,idx2E89);
          int idx2E8C#1 = idx2C8F;
          int mulRes2E8D#1 = IMul(ilit2E10,idx2E8C);
          int idx2E8F#1 = idx2C92;
          int mulRes2E90#1 = IMul(ilit2E10,idx2E8F);
          int idx2E92#1 = idx2C95;
          int mulRes2E93#1 = IMul(ilit2E10,idx2E92);
          int idx2E95#1 = idx2C98;
          int mulRes2E96#1 = IMul(ilit2E10,idx2E95);
          int idx2E98#1 = idx2C9B;
          int mulRes2E99#1 = IMul(ilit2E10,idx2E98);
          int idx2E9B#1 = idx2C9E;
          int mulRes2E9C#1 = IMul(ilit2E10,idx2E9B);
          int idx2E9E#1 = idx2CA1;
          int mulRes2E9F#1 = IMul(ilit2E10,idx2E9E);
          int idx2EA1#1 = idx2CA4;
          int mulRes2EA2#1 = IMul(ilit2E10,idx2EA1);
          int idx2EA4#1 = idx2CA7;
          int mulRes2EA5#1 = IMul(ilit2E10,idx2EA4);
          int idx2EA7#1 = idx2CAA;
          int mulRes2EA8#1 = IMul(ilit2E10,idx2EA7);
          int idx2EAA#1 = idx2CAD;
          int mulRes2EAB#1 = IMul(ilit2E10,idx2EAA);
          int idx2EAD#1 = idx2CB0;
          int mulRes2EAE#1 = IMul(ilit2E10,idx2EAD);
          int idx2EB0#1 = idx2CB3;
          int mulRes2EB1#1 = IMul(ilit2E10,idx2EB0);
          int idx2EB3#1 = idx2CB6;
          int mulRes2EB4#1 = IMul(ilit2E10,idx2EB3);
          int idx2EB6#1 = idx2CB9;
          int mulRes2EB7#1 = IMul(ilit2E10,idx2EB6);
          int idx2EB9#1 = idx2CBC;
          int mulRes2EBA#1 = IMul(ilit2E10,idx2EB9);
          int idx2EBC#1 = idx2CBF;
          int mulRes2EBD#1 = IMul(ilit2E10,idx2EBC);
          int idx2EBF#1 = idx2CC2;
          int mulRes2EC0#1 = IMul(ilit2E10,idx2EBF);
          int idx2EC2#1 = idx2CC5;
          int mulRes2EC3#1 = IMul(ilit2E10,idx2EC2);
          int idx2EC5#1 = idx2CC8;
          int mulRes2EC6#1 = IMul(ilit2E10,idx2EC5);
          int idx2EC8#1 = idx2CCB;
          int mulRes2EC9#1 = IMul(ilit2E10,idx2EC8);
          int idx2ECB#1 = idx2CCE;
          int mulRes2ECC#1 = IMul(ilit2E10,idx2ECB);
          int idx2ECE#1 = idx2CD1;
          int mulRes2ECF#1 = IMul(ilit2E10,idx2ECE);
          int idx2ED1#1 = idx2CD4;
          int mulRes2ED2#1 = IMul(ilit2E10,idx2ED1);
          int idx2ED4#1 = idx2CD7;
          int mulRes2ED5#1 = IMul(ilit2E10,idx2ED4);
          int idx2ED7#1 = idx2CDA;
          int mulRes2ED8#1 = IMul(ilit2E10,idx2ED7);
          int idx2EDA#1 = idx2CDD;
          int mulRes2EDB#1 = IMul(ilit2E10,idx2EDA);
          int idx2EDD#1 = idx2CE0;
          int mulRes2EDE#1 = IMul(ilit2E10,idx2EDD);
          int idx2EE0#1 = idx2CE3;
          int mulRes2EE1#1 = IMul(ilit2E10,idx2EE0);
          int idx2EE3#1 = idx2CE6;
          int mulRes2EE4#1 = IMul(ilit2E10,idx2EE3);
          int idx2EE6#1 = idx2CE9;
          int mulRes2EE7#1 = IMul(ilit2E10,idx2EE6);
          int idx2EE9#1 = idx2CEC;
          int mulRes2EEA#1 = IMul(ilit2E10,idx2EE9);
          int idx2EEC#1 = idx2CEF;
          int mulRes2EED#1 = IMul(ilit2E10,idx2EEC);
          int idx2EEF#1 = idx2CF2;
          int mulRes2EF0#1 = IMul(ilit2E10,idx2EEF);
          int idx2EF2#1 = idx2CF5;
          int mulRes2EF3#1 = IMul(ilit2E10,idx2EF2);
          int idx2EF5#1 = idx2CF8;
          int mulRes2EF6#1 = IMul(ilit2E10,idx2EF5);
          int idx2EF8#1 = idx2CFB;
          int mulRes2EF9#1 = IMul(ilit2E10,idx2EF8);
          int idx2EFB#1 = idx2CFE;
          int mulRes2EFC#1 = IMul(ilit2E10,idx2EFB);
          int idx2EFE#1 = idx2D01;
          int mulRes2EFF#1 = IMul(ilit2E10,idx2EFE);
          int idx2F01#1 = idx2D04;
          int mulRes2F02#1 = IMul(ilit2E10,idx2F01);
          int idx2F04#1 = idx2D07;
          int mulRes2F05#1 = IMul(ilit2E10,idx2F04);
          int idx2F07#1 = idx2D0A;
          int mulRes2F08#1 = IMul(ilit2E10,idx2F07);
          int idx2F0A#1 = idx2D0D;
          int mulRes2F0B#1 = IMul(ilit2E10,idx2F0A);
          real dof2F0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E13);
          real dof2F0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E15);
          real dof2F0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E18);
          real dof2F0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1B);
          real dof2F10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1E);
          real dof2F11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E21);
          real dof2F12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E24);
          real dof2F13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E27);
          real dof2F14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2A);
          real dof2F15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2D);
          real dof2F16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E30);
          real dof2F17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E33);
          real dof2F18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E36);
          real dof2F19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E39);
          real dof2F1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3C);
          real dof2F1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3F);
          real dof2F1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E42);
          real dof2F1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E45);
          real dof2F1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E48);
          real dof2F1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4B);
          real dof2F20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4E);
          real dof2F21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E51);
          real dof2F22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E54);
          real dof2F23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E57);
          real dof2F24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5A);
          real dof2F25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5D);
          real dof2F26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E60);
          real dof2F27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E63);
          real dof2F28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E66);
          real dof2F29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E69);
          real dof2F2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6C);
          real dof2F2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6F);
          real dof2F2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E72);
          real dof2F2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E75);
          real dof2F2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E78);
          real dof2F2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7B);
          real dof2F30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7E);
          real dof2F31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E81);
          real dof2F32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E84);
          real dof2F33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E87);
          real dof2F34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8A);
          real dof2F35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8D);
          real dof2F36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E90);
          real dof2F37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E93);
          real dof2F38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E96);
          real dof2F39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E99);
          real dof2F3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9C);
          real dof2F3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9F);
          real dof2F3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA2);
          real dof2F3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA5);
          real dof2F3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA8);
          real dof2F3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAB);
          real dof2F40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAE);
          real dof2F41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB1);
          real dof2F42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB4);
          real dof2F43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB7);
          real dof2F44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBA);
          real dof2F45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBD);
          real dof2F46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC0);
          real dof2F47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC3);
          real dof2F48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC6);
          real dof2F49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC9);
          real dof2F4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECC);
          real dof2F4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECF);
          real dof2F4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED2);
          real dof2F4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED5);
          real dof2F4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED8);
          real dof2F4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDB);
          real dof2F50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDE);
          real dof2F51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE1);
          real dof2F52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE4);
          real dof2F53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE7);
          real dof2F54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EEA);
          real dof2F55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EED);
          real dof2F56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF0);
          real dof2F57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF3);
          real dof2F58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF6);
          real dof2F59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF9);
          real dof2F5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFC);
          real dof2F5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFF);
          real dof2F5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F02);
          real dof2F5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F05);
          real dof2F5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F08);
          real dof2F5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F0B);
          tensor[84] dofs2F60#1 = <tensor[84]>[dof2F0C,dof2F0D,dof2F0E,dof2F0F,dof2F10,dof2F11,dof2F12,dof2F13,dof2F14,dof2F15,dof2F16,dof2F17,dof2F18,dof2F19,dof2F1A,dof2F1B,dof2F1C,dof2F1D,dof2F1E,dof2F1F,dof2F20,dof2F21,dof2F22,dof2F23,dof2F24,dof2F25,dof2F26,dof2F27,dof2F28,dof2F29,dof2F2A,dof2F2B,dof2F2C,dof2F2D,dof2F2E,dof2F2F,dof2F30,dof2F31,dof2F32,dof2F33,dof2F34,dof2F35,dof2F36,dof2F37,dof2F38,dof2F39,dof2F3A,dof2F3B,dof2F3C,dof2F3D,dof2F3E,dof2F3F,dof2F40,dof2F41,dof2F42,dof2F43,dof2F44,dof2F45,dof2F46,dof2F47,dof2F48,dof2F49,dof2F4A,dof2F4B,dof2F4C,dof2F4D,dof2F4E,dof2F4F,dof2F50,dof2F51,dof2F52,dof2F53,dof2F54,dof2F55,dof2F56,dof2F57,dof2F58,dof2F59,dof2F5A,dof2F5B,dof2F5C,dof2F5D,dof2F5E,dof2F5F];
          tensor[84] femDofs2E0F#13 = dofs2F60;
          real varAcc30B4#4 = VIndex<3,0>(pos235B);
          real varAcc30B5#4 = VIndex<3,1>(pos235B);
          real varAcc30B6#4 = VIndex<3,2>(pos235B);
          real basisEval30B7#294 = 0.e0;
          real coeff30B8#31 = 0.2e1;
          real one30B9#38 = 0.1e1;
          real prod30BA#5 = RMul(one30B9,one30B9);
          real prod30BB#2 = RMul(one30B9,prod30BA);
          real basisEval30BC#3 = RMul(coeff30B8,prod30BB);
          real iden30BD#5 = varAcc30B6;
          real prod30BE#4 = RMul(one30B9,iden30BD);
          real prod30BF#3 = RMul(one30B9,prod30BE);
          real basisEval30C0#4 = RMul(coeff30B8,prod30BF);
          real iden30C1#5 = varAcc30B5;
          real prod30C2#4 = RMul(iden30C1,one30B9);
          real prod30C3#3 = RMul(one30B9,prod30C2);
          real basisEval30C4#4 = RMul(coeff30B8,prod30C3);
          real coeff30C5#22 = 0.6e1;
          real iden30C6#11 = varAcc30B4;
          real prod30C7#3 = RMul(iden30C6,prod30BA);
          real basisEval30C8#1 = RMul(coeff30C5,prod30C7);
          real prod230C9#4 = RMul(iden30BD,varAcc30B6);
          real prod30CA#3 = RMul(one30B9,prod230C9);
          real prod30CB#4 = RMul(one30B9,prod30CA);
          real basisEval30CC#2 = RMul(coeff30B8,prod30CB);
          real prod30CD#3 = RMul(iden30C1,iden30BD);
          real prod30CE#3 = RMul(one30B9,prod30CD);
          real basisEval30CF#3 = RMul(coeff30B8,prod30CE);
          real prod230D0#4 = RMul(iden30C1,varAcc30B5);
          real prod30D1#3 = RMul(prod230D0,one30B9);
          real prod30D2#4 = RMul(one30B9,prod30D1);
          real basisEval30D3#2 = RMul(coeff30B8,prod30D2);
          real prod30D4#3 = RMul(iden30C6,prod30BE);
          real basisEval30D5#2 = RMul(coeff30C5,prod30D4);
          real prod30D6#3 = RMul(iden30C6,prod30C2);
          real basisEval30D7#2 = RMul(coeff30C5,prod30D6);
          real coeff30D8#15 = 0.12e2;
          real prod230D9#7 = RMul(iden30C6,varAcc30B4);
          real prod30DA#4 = RMul(prod230D9,prod30BA);
          real basisEval30DB#1 = RMul(coeff30D8,prod30DA);
          real prod330DC#3 = RMul(prod230C9,varAcc30B6);
          real prod30DD#2 = RMul(one30B9,prod330DC);
          real prod30DE#4 = RMul(one30B9,prod30DD);
          real basisEval30DF#2 = RMul(coeff30B8,prod30DE);
          real prod30E0#2 = RMul(iden30C1,prod230C9);
          real prod30E1#4 = RMul(one30B9,prod30E0);
          real basisEval30E2#2 = RMul(coeff30B8,prod30E1);
          real prod30E3#2 = RMul(prod230D0,iden30BD);
          real prod30E4#4 = RMul(one30B9,prod30E3);
          real basisEval30E5#2 = RMul(coeff30B8,prod30E4);
          real prod330E6#3 = RMul(prod230D0,varAcc30B5);
          real prod30E7#2 = RMul(prod330E6,one30B9);
          real prod30E8#4 = RMul(one30B9,prod30E7);
          real basisEval30E9#2 = RMul(coeff30B8,prod30E8);
          real prod30EA#4 = RMul(iden30C6,prod30CA);
          real basisEval30EB#2 = RMul(coeff30C5,prod30EA);
          real prod30EC#2 = RMul(iden30C6,prod30CD);
          real basisEval30ED#3 = RMul(coeff30C5,prod30EC);
          real prod30EE#4 = RMul(iden30C6,prod30D1);
          real basisEval30EF#2 = RMul(coeff30C5,prod30EE);
          real prod30F0#4 = RMul(prod230D9,prod30BE);
          real basisEval30F1#1 = RMul(coeff30D8,prod30F0);
          real prod30F2#4 = RMul(prod230D9,prod30C2);
          real basisEval30F3#1 = RMul(coeff30D8,prod30F2);
          real coeff30F4#9 = 0.20e2;
          real prod330F5#4 = RMul(prod230D9,varAcc30B4);
          real prod30F6#4 = RMul(prod330F5,prod30BA);
          real basisEval30F7#1 = RMul(coeff30F4,prod30F6);
          real prod430F8#1 = RMul(prod330DC,varAcc30B6);
          real prod30F9#1 = RMul(one30B9,prod430F8);
          real prod30FA#4 = RMul(one30B9,prod30F9);
          real basisEval30FB#2 = RMul(coeff30B8,prod30FA);
          real prod30FC#1 = RMul(iden30C1,prod330DC);
          real prod30FD#5 = RMul(one30B9,prod30FC);
          real basisEval30FE#2 = RMul(coeff30B8,prod30FD);
          real prod30FF#1 = RMul(prod230D0,prod230C9);
          real prod3100#4 = RMul(one30B9,prod30FF);
          real basisEval3101#1 = RMul(coeff30B8,prod3100);
          real prod3102#1 = RMul(prod330E6,iden30BD);
          real prod3103#5 = RMul(one30B9,prod3102);
          real basisEval3104#2 = RMul(coeff30B8,prod3103);
          real prod43105#1 = RMul(prod330E6,varAcc30B5);
          real prod3106#1 = RMul(prod43105,one30B9);
          real prod3107#4 = RMul(one30B9,prod3106);
          real basisEval3108#2 = RMul(coeff30B8,prod3107);
          real prod3109#5 = RMul(iden30C6,prod30DD);
          real basisEval310A#1 = RMul(coeff30C5,prod3109);
          real prod310B#3 = RMul(iden30C6,prod30E0);
          real basisEval310C#4 = RMul(coeff30C5,prod310B);
          real prod310D#3 = RMul(iden30C6,prod30E3);
          real basisEval310E#4 = RMul(coeff30C5,prod310D);
          real prod310F#5 = RMul(iden30C6,prod30E7);
          real basisEval3110#1 = RMul(coeff30C5,prod310F);
          real prod3111#4 = RMul(prod230D9,prod30CA);
          real basisEval3112#2 = RMul(coeff30D8,prod3111);
          real prod3113#3 = RMul(prod230D9,prod30CD);
          real basisEval3114#1 = RMul(coeff30D8,prod3113);
          real prod3115#4 = RMul(prod230D9,prod30D1);
          real basisEval3116#2 = RMul(coeff30D8,prod3115);
          real prod3117#5 = RMul(prod330F5,prod30BE);
          real basisEval3118#1 = RMul(coeff30F4,prod3117);
          real prod3119#5 = RMul(prod330F5,prod30C2);
          real basisEval311A#1 = RMul(coeff30F4,prod3119);
          real coeff311B#3 = 0.30e2;
          real prod4311C#1 = RMul(prod330F5,varAcc30B4);
          real prod311D#4 = RMul(prod4311C,prod30BA);
          real basisEval311E#1 = RMul(coeff311B,prod311D);
          real basisEval311F#3 = RMul(one30B9,prod30BB);
          real basisEval3120#1 = RMul(one30B9,prod30BF);
          real basisEval3121#4 = RMul(coeff30B8,prod30C7);
          real basisEval3122#1 = RMul(one30B9,prod30CB);
          real coeff3123#12 = 0.3e1;
          real basisEval3124#2 = RMul(coeff3123,prod30D2);
          real basisEval3125#3 = RMul(coeff30B8,prod30D4);
          real coeff3126#16 = 0.4e1;
          real basisEval3127#1 = RMul(coeff3126,prod30D6);
          real basisEval3128#2 = RMul(coeff3123,prod30DA);
          real basisEval3129#1 = RMul(one30B9,prod30DE);
          real basisEval312A#1 = RMul(coeff3123,prod30E4);
          real basisEval312B#2 = RMul(coeff3126,prod30E8);
          real basisEval312C#2 = RMul(coeff30B8,prod30EA);
          real basisEval312D#3 = RMul(coeff3126,prod30EC);
          real basisEval312E#1 = RMul(coeff3123,prod30F0);
          real basisEval312F#2 = RMul(coeff30C5,prod30F2);
          real basisEval3130#2 = RMul(coeff3126,prod30F6);
          real basisEval3131#1 = RMul(one30B9,prod30FA);
          real basisEval3132#2 = RMul(coeff3123,prod3100);
          real basisEval3133#1 = RMul(coeff3126,prod3103);
          real coeff3134#3 = 0.5e1;
          real basisEval3135#2 = RMul(coeff3134,prod3107);
          real basisEval3136#2 = RMul(coeff30B8,prod3109);
          real basisEval3137#1 = RMul(coeff3126,prod310B);
          real coeff3138#6 = 0.8e1;
          real basisEval3139#1 = RMul(coeff3138,prod310F);
          real basisEval313A#2 = RMul(coeff3123,prod3111);
          real basisEval313B#4 = RMul(coeff30C5,prod3113);
          real coeff313C#3 = 0.9e1;
          real basisEval313D#1 = RMul(coeff313C,prod3115);
          real basisEval313E#1 = RMul(coeff3126,prod3117);
          real basisEval313F#1 = RMul(coeff3138,prod3119);
          real basisEval3140#2 = RMul(coeff3134,prod311D);
          real basisEval3141#1 = RMul(one30B9,prod30C3);
          real basisEval3142#2 = RMul(coeff3123,prod30CB);
          real basisEval3143#1 = RMul(one30B9,prod30D2);
          real basisEval3144#1 = RMul(coeff3126,prod30D4);
          real basisEval3145#3 = RMul(coeff30B8,prod30D6);
          real basisEval3146#2 = RMul(coeff3126,prod30DE);
          real basisEval3147#1 = RMul(coeff3123,prod30E1);
          real basisEval3148#1 = RMul(one30B9,prod30E8);
          real basisEval3149#2 = RMul(coeff30B8,prod30EE);
          real basisEval314A#2 = RMul(coeff30C5,prod30F0);
          real basisEval314B#1 = RMul(coeff3123,prod30F2);
          real basisEval314C#2 = RMul(coeff3134,prod30FA);
          real basisEval314D#1 = RMul(coeff3126,prod30FD);
          real basisEval314E#1 = RMul(one30B9,prod3107);
          real basisEval314F#1 = RMul(coeff3138,prod3109);
          real basisEval3150#1 = RMul(coeff3126,prod310D);
          real basisEval3151#2 = RMul(coeff30B8,prod310F);
          real basisEval3152#1 = RMul(coeff313C,prod3111);
          real basisEval3153#2 = RMul(coeff3123,prod3115);
          real basisEval3154#1 = RMul(coeff3138,prod3117);
          real basisEval3155#1 = RMul(coeff3126,prod3119);
          real basisEval3156#1 = RMul(coeff30C5,prod30C3);
          real basisEval3157#2 = RMul(coeff30C5,prod30CE);
          real basisEval3158#1 = RMul(coeff30D8,prod30D2);
          real basisEval3159#2 = RMul(coeff30B8,prod30DA);
          real basisEval315A#2 = RMul(coeff30C5,prod30E1);
          real basisEval315B#1 = RMul(coeff30D8,prod30E4);
          real basisEval315C#1 = RMul(coeff30F4,prod30E8);
          real basisEval315D#1 = RMul(coeff30D8,prod30EE);
          real basisEval315E#2 = RMul(coeff30B8,prod30F0);
          real basisEval315F#2 = RMul(coeff30B8,prod30F6);
          real basisEval3160#1 = RMul(coeff30C5,prod30FD);
          real basisEval3161#2 = RMul(coeff30D8,prod3100);
          real basisEval3162#1 = RMul(coeff30F4,prod3103);
          real basisEval3163#1 = RMul(coeff311B,prod3107);
          real basisEval3164#1 = RMul(coeff30D8,prod310D);
          real basisEval3165#1 = RMul(coeff30F4,prod310F);
          real basisEval3166#1 = RMul(coeff30B8,prod3111);
          real basisEval3167#2 = RMul(coeff30B8,prod3117);
          real basisEval3168#1 = RMul(coeff30C5,prod3119);
          real basisEval3169#2 = RMul(coeff30B8,prod311D);
          real basisEval316A#1 = RMul(one30B9,prod30C7);
          real basisEval316B#1 = RMul(coeff3126,prod30CE);
          real basisEval316C#1 = RMul(one30B9,prod30DA);
          real basisEval316D#2 = RMul(coeff30C5,prod30E4);
          real basisEval316E#1 = RMul(coeff3123,prod30EA);
          real basisEval316F#1 = RMul(coeff3123,prod30EE);
          real basisEval3170#2 = RMul(coeff30B8,prod30F2);
          real basisEval3171#1 = RMul(one30B9,prod30F6);
          real basisEval3172#1 = RMul(coeff3138,prod30FD);
          real basisEval3173#1 = RMul(coeff313C,prod3100);
          real basisEval3174#1 = RMul(coeff3138,prod3103);
          real basisEval3175#1 = RMul(coeff3126,prod3109);
          real basisEval3176#1 = RMul(coeff3126,prod310F);
          real basisEval3177#1 = RMul(coeff3126,prod3113);
          real basisEval3178#2 = RMul(coeff30B8,prod3119);
          real basisEval3179#1 = RMul(one30B9,prod311D);
          real basisEval317A#1 = RMul(coeff30C5,prod30BF);
          real basisEval317B#1 = RMul(coeff30D8,prod30CB);
          real basisEval317C#1 = RMul(coeff30F4,prod30DE);
          real basisEval317D#1 = RMul(coeff30D8,prod30E1);
          real basisEval317E#1 = RMul(coeff30D8,prod30EA);
          real basisEval317F#1 = RMul(coeff311B,prod30FA);
          real basisEval3180#1 = RMul(coeff30F4,prod30FD);
          real basisEval3181#1 = RMul(coeff30C5,prod3103);
          real basisEval3182#1 = RMul(coeff30F4,prod3109);
          real basisEval3183#1 = RMul(coeff30D8,prod310B);
          real basisEval3184#1 = RMul(coeff30B8,prod3115);
          real basisEval3185#1 = RMul(coeff30C5,prod3117);
          tensor[84] intermediateCons3186#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30C8,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval30CF,basisEval30D3,basisEval30D5,basisEval30D7,basisEval30DB,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval30E2,basisEval30E5,basisEval30E9,basisEval30EB,basisEval30ED,basisEval30EF,basisEval30F1,basisEval30F3,basisEval30F7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval30FE,basisEval3101,basisEval3104,basisEval3108,basisEval310A,basisEval310C,basisEval310E,basisEval3110,basisEval3112,basisEval3114,basisEval3116,basisEval3118,basisEval311A,basisEval311E];
          tensor[84] intermediateCons3187#2 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3120,basisEval30C4,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3122,basisEval30CF,basisEval3124,basisEval30B7,basisEval3125,basisEval3127,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3129,basisEval30E2,basisEval312A,basisEval312B,basisEval30B7,basisEval312C,basisEval312D,basisEval30EF,basisEval30B7,basisEval312E,basisEval312F,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3131,basisEval30FE,basisEval3132,basisEval3133,basisEval3135,basisEval30B7,basisEval3136,basisEval3137,basisEval310E,basisEval3139,basisEval30B7,basisEval313A,basisEval313B,basisEval313D,basisEval30B7,basisEval313E,basisEval313F,basisEval30B7,basisEval3140,basisEval30B7];
          tensor[84] intermediateCons3188#2 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3141,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval30CF,basisEval3143,basisEval30B7,basisEval3144,basisEval3145,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval3147,basisEval30E5,basisEval3148,basisEval30B7,basisEval30EB,basisEval312D,basisEval3149,basisEval30B7,basisEval314A,basisEval314B,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval314D,basisEval3132,basisEval3104,basisEval314E,basisEval30B7,basisEval314F,basisEval310C,basisEval3150,basisEval3151,basisEval30B7,basisEval3152,basisEval313B,basisEval3153,basisEval30B7,basisEval3154,basisEval3155,basisEval30B7,basisEval3140,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons3189#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3156,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval3157,basisEval3158,basisEval30B7,basisEval30B7,basisEval3125,basisEval30D7,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval315A,basisEval315B,basisEval315C,basisEval30B7,basisEval30B7,basisEval312C,basisEval30ED,basisEval315D,basisEval30B7,basisEval30B7,basisEval315E,basisEval312F,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval3160,basisEval3161,basisEval3162,basisEval3163,basisEval30B7,basisEval30B7,basisEval3136,basisEval310C,basisEval3164,basisEval3165,basisEval30B7,basisEval30B7,basisEval3166,basisEval313B,basisEval3116,basisEval30B7,basisEval30B7,basisEval3167,basisEval3168,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318A#2 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30B7,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval316B,basisEval3124,basisEval30B7,basisEval30B7,basisEval3125,basisEval3145,basisEval30B7,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval315A,basisEval316D,basisEval312B,basisEval30B7,basisEval30B7,basisEval316E,basisEval312D,basisEval316F,basisEval30B7,basisEval30B7,basisEval315E,basisEval3170,basisEval30B7,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval3172,basisEval3173,basisEval3174,basisEval3135,basisEval30B7,basisEval30B7,basisEval3175,basisEval310C,basisEval310E,basisEval3176,basisEval30B7,basisEval30B7,basisEval313A,basisEval3177,basisEval3153,basisEval30B7,basisEval30B7,basisEval3167,basisEval3178,basisEval30B7,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318B#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317A,basisEval30C4,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317B,basisEval3157,basisEval30D3,basisEval30B7,basisEval30B7,basisEval30D5,basisEval3145,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317C,basisEval317D,basisEval316D,basisEval30E9,basisEval30B7,basisEval30B7,basisEval317E,basisEval30ED,basisEval3149,basisEval30B7,basisEval30B7,basisEval314A,basisEval3170,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317F,basisEval3180,basisEval3161,basisEval3181,basisEval3108,basisEval30B7,basisEval30B7,basisEval3182,basisEval3183,basisEval310E,basisEval3151,basisEval30B7,basisEval30B7,basisEval3112,basisEval313B,basisEval3184,basisEval30B7,basisEval30B7,basisEval3185,basisEval3178,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] projParam326E#1 = intermediateCons3186;
          real vdot326F#1 = VDot<84>(femDofs2E0F,projParam326E);
          tensor[84] projParam3270#1 = intermediateCons3187;
          real vdot3271#1 = VDot<84>(femDofs2E0F,projParam3270);
          tensor[84] projParam3272#1 = intermediateCons3188;
          real vdot3273#1 = VDot<84>(femDofs2E0F,projParam3272);
          tensor[3] tensor3274#1 = <tensor[3]>[vdot326F,vdot3271,vdot3273];
          tensor[84] projParam3275#1 = intermediateCons3187;
          real vdot3276#1 = VDot<84>(femDofs2E0F,projParam3275);
          tensor[84] projParam3277#1 = intermediateCons3189;
          real vdot3278#1 = VDot<84>(femDofs2E0F,projParam3277);
          tensor[84] projParam3279#1 = intermediateCons318A;
          real vdot327A#1 = VDot<84>(femDofs2E0F,projParam3279);
          tensor[3] tensor327B#1 = <tensor[3]>[vdot3276,vdot3278,vdot327A];
          tensor[84] projParam327C#1 = intermediateCons3188;
          real vdot327D#1 = VDot<84>(femDofs2E0F,projParam327C);
          tensor[84] projParam327E#1 = intermediateCons318A;
          real vdot327F#1 = VDot<84>(femDofs2E0F,projParam327E);
          tensor[84] projParam3280#1 = intermediateCons318B;
          real vdot3281#1 = VDot<84>(femDofs2E0F,projParam3280);
          tensor[3] tensor3282#1 = <tensor[3]>[vdot327D,vdot327F,vdot3281];
          tensor[3,3] _t326D#1 = <tensor[3,3]>[tensor3274,tensor327B,tensor3282];
          (real[3] evals329A#2,tensor[3][3] E329B#2) = EigenVecs3x3(_t326D);
          int _t329D#2 = 2;
          tensor[3] _t329F#6 = Subscript<tensor[3][3]>(E329B,_t329D);
          real _t32A1#9 = Subscript<real[3]>(evals329A,_t329D);
          int _t32A3#2 = 1;
          tensor[3] _t32A5#6 = Subscript<tensor[3][3]>(E329B,_t32A3);
          real _t32A7#9 = Subscript<real[3]>(evals329A,_t32A3);
          real _t32A9#8 = 0.e0;
          real _t32AB#13 = 0.1e1;
          real _t32AD#1 = 0.15e1;
          real r32B0#1 = TensorIndex<tensor[3],[0]>(_t329F);
          tensor[3] binopV32B1#3 = VScale<3>(r32B0,_t329F);
          real r32B2#1 = TensorIndex<tensor[3],[1]>(_t329F);
          tensor[3] binopV32B3#3 = VScale<3>(r32B2,_t329F);
          real r32B4#1 = TensorIndex<tensor[3],[2]>(_t329F);
          tensor[3] binopV32B5#3 = VScale<3>(r32B4,_t329F);
          real r32BF#1 = TensorIndex<tensor[3],[0]>(_t32A5);
          tensor[3] binopV32C0#3 = VScale<3>(r32BF,_t32A5);
          real r32C1#1 = TensorIndex<tensor[3],[1]>(_t32A5);
          tensor[3] binopV32C2#3 = VScale<3>(r32C1,_t32A5);
          real r32C3#1 = TensorIndex<tensor[3],[2]>(_t32A5);
          tensor[3] binopV32C4#3 = VScale<3>(r32C3,_t32A5);
          real r32CE#1 = VIndex<3,0>(binopV32B1);
          real r32CF#1 = RDiv(r32CE,_t32A1);
          real r32D0#1 = VIndex<3,1>(binopV32B1);
          real r32D1#1 = RDiv(r32D0,_t32A1);
          real r32D2#1 = VIndex<3,2>(binopV32B1);
          real r32D3#1 = RDiv(r32D2,_t32A1);
          tensor[3] tensor32D4#1 = <tensor[3]>[r32CF,r32D1,r32D3];
          real r32D5#1 = VIndex<3,0>(binopV32B3);
          real r32D6#1 = RDiv(r32D5,_t32A1);
          real r32D7#1 = VIndex<3,1>(binopV32B3);
          real r32D8#1 = RDiv(r32D7,_t32A1);
          real r32D9#1 = VIndex<3,2>(binopV32B3);
          real r32DA#1 = RDiv(r32D9,_t32A1);
          tensor[3] tensor32DB#1 = <tensor[3]>[r32D6,r32D8,r32DA];
          real r32DC#1 = VIndex<3,0>(binopV32B5);
          real r32DD#1 = RDiv(r32DC,_t32A1);
          real r32DE#1 = VIndex<3,1>(binopV32B5);
          real r32DF#1 = RDiv(r32DE,_t32A1);
          real r32E0#1 = VIndex<3,2>(binopV32B5);
          real r32E1#1 = RDiv(r32E0,_t32A1);
          tensor[3] tensor32E2#1 = <tensor[3]>[r32DD,r32DF,r32E1];
          real r32FB#1 = VIndex<3,0>(binopV32C0);
          real r32FC#1 = RDiv(r32FB,_t32A7);
          real r32FD#1 = VIndex<3,1>(binopV32C0);
          real r32FE#1 = RDiv(r32FD,_t32A7);
          real r32FF#1 = VIndex<3,2>(binopV32C0);
          real r3300#1 = RDiv(r32FF,_t32A7);
          tensor[3] tensor3301#1 = <tensor[3]>[r32FC,r32FE,r3300];
          real r3302#1 = VIndex<3,0>(binopV32C2);
          real r3303#1 = RDiv(r3302,_t32A7);
          real r3304#1 = VIndex<3,1>(binopV32C2);
          real r3305#1 = RDiv(r3304,_t32A7);
          real r3306#1 = VIndex<3,2>(binopV32C2);
          real r3307#1 = RDiv(r3306,_t32A7);
          tensor[3] tensor3308#1 = <tensor[3]>[r3303,r3305,r3307];
          real r3309#1 = VIndex<3,0>(binopV32C4);
          real r330A#1 = RDiv(r3309,_t32A7);
          real r330B#1 = VIndex<3,1>(binopV32C4);
          real r330C#1 = RDiv(r330B,_t32A7);
          real r330D#1 = VIndex<3,2>(binopV32C4);
          real r330E#1 = RDiv(r330D,_t32A7);
          tensor[3] tensor330F#1 = <tensor[3]>[r330A,r330C,r330E];
          tensor[3] projParam3328#1 = tensor32D4;
          tensor[3] projParam3329#1 = tensor3301;
          tensor[3] v332A#1 = VAdd<3>(projParam3328,projParam3329);
          tensor[3] projParam332B#1 = tensor32DB;
          tensor[3] projParam332C#1 = tensor3308;
          tensor[3] v332D#1 = VAdd<3>(projParam332B,projParam332C);
          tensor[3] projParam332E#1 = tensor32E2;
          tensor[3] projParam332F#1 = tensor330F;
          tensor[3] v3330#1 = VAdd<3>(projParam332E,projParam332F);
          real varAcc333D#5 = VIndex<3,0>(pos235B);
          real varAcc333E#5 = VIndex<3,1>(pos235B);
          real varAcc333F#5 = VIndex<3,2>(pos235B);
          real basisEval3340#84 = 0.e0;
          real coeff3341#79 = 0.1e1;
          real prod3342#6 = RMul(coeff3341,coeff3341);
          real prod3343#1 = RMul(coeff3341,prod3342);
          real basisEval3344#3 = RMul(coeff3341,prod3343);
          real iden3345#6 = varAcc333F;
          real prod3346#5 = RMul(coeff3341,iden3345);
          real prod3347#2 = RMul(coeff3341,prod3346);
          real basisEval3348#2 = RMul(coeff3341,prod3347);
          real iden3349#6 = varAcc333E;
          real prod334A#5 = RMul(iden3349,coeff3341);
          real prod334B#2 = RMul(coeff3341,prod334A);
          real basisEval334C#2 = RMul(coeff3341,prod334B);
          real coeff334D#34 = 0.2e1;
          real iden334E#16 = varAcc333D;
          real prod334F#2 = RMul(iden334E,prod3342);
          real basisEval3350#1 = RMul(coeff334D,prod334F);
          real prod23351#5 = RMul(iden3345,varAcc333F);
          real prod3352#4 = RMul(coeff3341,prod23351);
          real prod3353#2 = RMul(coeff3341,prod3352);
          real basisEval3354#2 = RMul(coeff3341,prod3353);
          real prod3355#4 = RMul(iden3349,iden3345);
          real prod3356#2 = RMul(coeff3341,prod3355);
          real basisEval3357#1 = RMul(coeff3341,prod3356);
          real prod23358#5 = RMul(iden3349,varAcc333E);
          real prod3359#4 = RMul(prod23358,coeff3341);
          real prod335A#2 = RMul(coeff3341,prod3359);
          real basisEval335B#2 = RMul(coeff3341,prod335A);
          real prod335C#2 = RMul(iden334E,prod3346);
          real basisEval335D#2 = RMul(coeff334D,prod335C);
          real prod335E#2 = RMul(iden334E,prod334A);
          real basisEval335F#2 = RMul(coeff334D,prod335E);
          real coeff3360#24 = 0.3e1;
          real prod23361#11 = RMul(iden334E,varAcc333D);
          real prod3362#2 = RMul(prod23361,prod3342);
          real basisEval3363#1 = RMul(coeff3360,prod3362);
          real prod33364#4 = RMul(prod23351,varAcc333F);
          real prod3365#3 = RMul(coeff3341,prod33364);
          real prod3366#2 = RMul(coeff3341,prod3365);
          real basisEval3367#2 = RMul(coeff3341,prod3366);
          real prod3368#3 = RMul(iden3349,prod23351);
          real prod3369#3 = RMul(coeff3341,prod3368);
          real basisEval336A#1 = RMul(coeff3341,prod3369);
          real prod336B#3 = RMul(prod23358,iden3345);
          real prod336C#3 = RMul(coeff3341,prod336B);
          real basisEval336D#1 = RMul(coeff3341,prod336C);
          real prod3336E#4 = RMul(prod23358,varAcc333E);
          real prod336F#3 = RMul(prod3336E,coeff3341);
          real prod3370#2 = RMul(coeff3341,prod336F);
          real basisEval3371#2 = RMul(coeff3341,prod3370);
          real prod3372#3 = RMul(iden334E,prod3352);
          real basisEval3373#1 = RMul(coeff334D,prod3372);
          real prod3374#1 = RMul(iden334E,prod3355);
          real basisEval3375#3 = RMul(coeff334D,prod3374);
          real prod3376#3 = RMul(iden334E,prod3359);
          real basisEval3377#1 = RMul(coeff334D,prod3376);
          real prod3378#3 = RMul(prod23361,prod3346);
          real basisEval3379#1 = RMul(coeff3360,prod3378);
          real prod337A#3 = RMul(prod23361,prod334A);
          real basisEval337B#1 = RMul(coeff3360,prod337A);
          real coeff337C#18 = 0.4e1;
          real prod3337D#7 = RMul(prod23361,varAcc333D);
          real prod337E#2 = RMul(prod3337D,prod3342);
          real basisEval337F#1 = RMul(coeff337C,prod337E);
          real prod43380#3 = RMul(prod33364,varAcc333F);
          real prod3381#2 = RMul(coeff3341,prod43380);
          real prod3382#2 = RMul(coeff3341,prod3381);
          real basisEval3383#2 = RMul(coeff3341,prod3382);
          real prod3384#2 = RMul(iden3349,prod33364);
          real prod3385#3 = RMul(coeff3341,prod3384);
          real basisEval3386#1 = RMul(coeff3341,prod3385);
          real prod3387#2 = RMul(prod23358,prod23351);
          real prod3388#2 = RMul(coeff3341,prod3387);
          real basisEval3389#1 = RMul(coeff3341,prod3388);
          real prod338A#2 = RMul(prod3336E,iden3345);
          real prod338B#3 = RMul(coeff3341,prod338A);
          real basisEval338C#1 = RMul(coeff3341,prod338B);
          real prod4338D#3 = RMul(prod3336E,varAcc333E);
          real prod338E#2 = RMul(prod4338D,coeff3341);
          real prod338F#2 = RMul(coeff3341,prod338E);
          real basisEval3390#2 = RMul(coeff3341,prod338F);
          real prod3391#3 = RMul(iden334E,prod3365);
          real basisEval3392#1 = RMul(coeff334D,prod3391);
          real prod3393#2 = RMul(iden334E,prod3368);
          real basisEval3394#2 = RMul(coeff334D,prod3393);
          real prod3395#2 = RMul(iden334E,prod336B);
          real basisEval3396#2 = RMul(coeff334D,prod3395);
          real prod3397#3 = RMul(iden334E,prod336F);
          real basisEval3398#1 = RMul(coeff334D,prod3397);
          real prod3399#2 = RMul(prod23361,prod3352);
          real basisEval339A#2 = RMul(coeff3360,prod3399);
          real prod339B#2 = RMul(prod23361,prod3355);
          real basisEval339C#1 = RMul(coeff3360,prod339B);
          real prod339D#2 = RMul(prod23361,prod3359);
          real basisEval339E#2 = RMul(coeff3360,prod339D);
          real prod339F#3 = RMul(prod3337D,prod3346);
          real basisEval33A0#1 = RMul(coeff337C,prod339F);
          real prod33A1#3 = RMul(prod3337D,prod334A);
          real basisEval33A2#1 = RMul(coeff337C,prod33A1);
          real coeff33A3#9 = 0.5e1;
          real prod433A4#4 = RMul(prod3337D,varAcc333D);
          real prod33A5#2 = RMul(prod433A4,prod3342);
          real basisEval33A6#1 = RMul(coeff33A3,prod33A5);
          real prod533A7#1 = RMul(prod43380,varAcc333F);
          real prod33A8#1 = RMul(coeff3341,prod533A7);
          real prod33A9#2 = RMul(coeff3341,prod33A8);
          real basisEval33AA#2 = RMul(coeff3341,prod33A9);
          real prod33AB#1 = RMul(iden3349,prod43380);
          real prod33AC#3 = RMul(coeff3341,prod33AB);
          real basisEval33AD#1 = RMul(coeff3341,prod33AC);
          real prod33AE#1 = RMul(prod23358,prod33364);
          real prod33AF#3 = RMul(coeff3341,prod33AE);
          real basisEval33B0#1 = RMul(coeff3341,prod33AF);
          real prod33B1#1 = RMul(prod3336E,prod23351);
          real prod33B2#3 = RMul(coeff3341,prod33B1);
          real basisEval33B3#1 = RMul(coeff3341,prod33B2);
          real prod33B4#1 = RMul(prod4338D,iden3345);
          real prod33B5#3 = RMul(coeff3341,prod33B4);
          real basisEval33B6#1 = RMul(coeff3341,prod33B5);
          real prod533B7#1 = RMul(prod4338D,varAcc333E);
          real prod33B8#1 = RMul(prod533B7,coeff3341);
          real prod33B9#2 = RMul(coeff3341,prod33B8);
          real basisEval33BA#2 = RMul(coeff3341,prod33B9);
          real prod33BB#3 = RMul(iden334E,prod3381);
          real basisEval33BC#1 = RMul(coeff334D,prod33BB);
          real prod33BD#2 = RMul(iden334E,prod3384);
          real basisEval33BE#2 = RMul(coeff334D,prod33BD);
          real prod33BF#2 = RMul(iden334E,prod3387);
          real basisEval33C0#1 = RMul(coeff334D,prod33BF);
          real prod33C1#2 = RMul(iden334E,prod338A);
          real basisEval33C2#2 = RMul(coeff334D,prod33C1);
          real prod33C3#3 = RMul(iden334E,prod338E);
          real basisEval33C4#1 = RMul(coeff334D,prod33C3);
          real prod33C5#3 = RMul(prod23361,prod3365);
          real basisEval33C6#1 = RMul(coeff3360,prod33C5);
          real prod33C7#2 = RMul(prod23361,prod3368);
          real basisEval33C8#2 = RMul(coeff3360,prod33C7);
          real prod33C9#2 = RMul(prod23361,prod336B);
          real basisEval33CA#2 = RMul(coeff3360,prod33C9);
          real prod33CB#3 = RMul(prod23361,prod336F);
          real basisEval33CC#1 = RMul(coeff3360,prod33CB);
          real prod33CD#3 = RMul(prod3337D,prod3352);
          real basisEval33CE#1 = RMul(coeff337C,prod33CD);
          real prod33CF#2 = RMul(prod3337D,prod3355);
          real basisEval33D0#1 = RMul(coeff337C,prod33CF);
          real prod33D1#3 = RMul(prod3337D,prod3359);
          real basisEval33D2#1 = RMul(coeff337C,prod33D1);
          real prod33D3#3 = RMul(prod433A4,prod3346);
          real basisEval33D4#1 = RMul(coeff33A3,prod33D3);
          real prod33D5#3 = RMul(prod433A4,prod334A);
          real basisEval33D6#1 = RMul(coeff33A3,prod33D5);
          real coeff33D7#3 = 0.6e1;
          real prod533D8#1 = RMul(prod433A4,varAcc333D);
          real prod33D9#2 = RMul(prod533D8,prod3342);
          real basisEval33DA#1 = RMul(coeff33D7,prod33D9);
          real basisEval33DB#1 = RMul(coeff334D,prod334B);
          real basisEval33DC#2 = RMul(coeff3341,prod334F);
          real basisEval33DD#2 = RMul(coeff334D,prod3356);
          real basisEval33DE#1 = RMul(coeff3360,prod335A);
          real basisEval33DF#1 = RMul(coeff3341,prod335C);
          real basisEval33E0#2 = RMul(coeff3341,prod3362);
          real basisEval33E1#1 = RMul(coeff334D,prod3369);
          real basisEval33E2#1 = RMul(coeff3360,prod336C);
          real basisEval33E3#1 = RMul(coeff337C,prod3370);
          real basisEval33E4#1 = RMul(coeff3341,prod3372);
          real basisEval33E5#1 = RMul(coeff3360,prod3376);
          real basisEval33E6#1 = RMul(coeff3341,prod3378);
          real basisEval33E7#1 = RMul(coeff334D,prod337A);
          real basisEval33E8#2 = RMul(coeff3341,prod337E);
          real basisEval33E9#1 = RMul(coeff334D,prod3385);
          real basisEval33EA#2 = RMul(coeff3360,prod3388);
          real basisEval33EB#1 = RMul(coeff337C,prod338B);
          real basisEval33EC#1 = RMul(coeff33A3,prod338F);
          real basisEval33ED#1 = RMul(coeff3341,prod3391);
          real basisEval33EE#1 = RMul(coeff3360,prod3395);
          real basisEval33EF#1 = RMul(coeff337C,prod3397);
          real basisEval33F0#1 = RMul(coeff3341,prod3399);
          real basisEval33F1#2 = RMul(coeff334D,prod339B);
          real basisEval33F2#1 = RMul(coeff3341,prod339F);
          real basisEval33F3#1 = RMul(coeff334D,prod33A1);
          real basisEval33F4#2 = RMul(coeff3341,prod33A5);
          real basisEval33F5#1 = RMul(coeff334D,prod33AC);
          real basisEval33F6#1 = RMul(coeff3360,prod33AF);
          real basisEval33F7#1 = RMul(coeff337C,prod33B2);
          real basisEval33F8#1 = RMul(coeff33A3,prod33B5);
          real basisEval33F9#1 = RMul(coeff33D7,prod33B9);
          real basisEval33FA#1 = RMul(coeff3341,prod33BB);
          real basisEval33FB#2 = RMul(coeff3360,prod33BF);
          real basisEval33FC#1 = RMul(coeff337C,prod33C1);
          real basisEval33FD#1 = RMul(coeff33A3,prod33C3);
          real basisEval33FE#1 = RMul(coeff3341,prod33C5);
          real basisEval33FF#1 = RMul(coeff334D,prod33C7);
          real basisEval3400#1 = RMul(coeff337C,prod33CB);
          real basisEval3401#1 = RMul(coeff3341,prod33CD);
          real basisEval3402#2 = RMul(coeff334D,prod33CF);
          real basisEval3403#1 = RMul(coeff3360,prod33D1);
          real basisEval3404#1 = RMul(coeff3341,prod33D3);
          real basisEval3405#1 = RMul(coeff334D,prod33D5);
          real basisEval3406#2 = RMul(coeff3341,prod33D9);
          real basisEval3407#1 = RMul(coeff334D,prod3347);
          real basisEval3408#1 = RMul(coeff3360,prod3353);
          real basisEval3409#1 = RMul(coeff3341,prod335E);
          real basisEval340A#1 = RMul(coeff337C,prod3366);
          real basisEval340B#1 = RMul(coeff3360,prod3369);
          real basisEval340C#1 = RMul(coeff334D,prod336C);
          real basisEval340D#1 = RMul(coeff3360,prod3372);
          real basisEval340E#1 = RMul(coeff3341,prod3376);
          real basisEval340F#1 = RMul(coeff334D,prod3378);
          real basisEval3410#1 = RMul(coeff3341,prod337A);
          real basisEval3411#1 = RMul(coeff33A3,prod3382);
          real basisEval3412#1 = RMul(coeff337C,prod3385);
          real basisEval3413#1 = RMul(coeff334D,prod338B);
          real basisEval3414#1 = RMul(coeff337C,prod3391);
          real basisEval3415#1 = RMul(coeff3360,prod3393);
          real basisEval3416#1 = RMul(coeff3341,prod3397);
          real basisEval3417#1 = RMul(coeff3341,prod339D);
          real basisEval3418#1 = RMul(coeff334D,prod339F);
          real basisEval3419#1 = RMul(coeff3341,prod33A1);
          real basisEval341A#1 = RMul(coeff33D7,prod33A9);
          real basisEval341B#1 = RMul(coeff33A3,prod33AC);
          real basisEval341C#1 = RMul(coeff337C,prod33AF);
          real basisEval341D#1 = RMul(coeff3360,prod33B2);
          real basisEval341E#1 = RMul(coeff334D,prod33B5);
          real basisEval341F#1 = RMul(coeff33A3,prod33BB);
          real basisEval3420#1 = RMul(coeff337C,prod33BD);
          real basisEval3421#1 = RMul(coeff3341,prod33C3);
          real basisEval3422#1 = RMul(coeff337C,prod33C5);
          real basisEval3423#1 = RMul(coeff334D,prod33C9);
          real basisEval3424#1 = RMul(coeff3341,prod33CB);
          real basisEval3425#1 = RMul(coeff3360,prod33CD);
          real basisEval3426#1 = RMul(coeff3341,prod33D1);
          real basisEval3427#1 = RMul(coeff334D,prod33D3);
          real basisEval3428#1 = RMul(coeff3341,prod33D5);
          tensor[84] intermediateCons3429#1 = <tensor[84]>[basisEval3340,basisEval3340,basisEval3340,basisEval3344,basisEval3340,basisEval3340,basisEval3340,basisEval3348,basisEval334C,basisEval3350,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3354,basisEval3357,basisEval335B,basisEval335D,basisEval335F,basisEval3363,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3367,basisEval336A,basisEval336D,basisEval3371,basisEval3373,basisEval3375,basisEval3377,basisEval3379,basisEval337B,basisEval337F,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3383,basisEval3386,basisEval3389,basisEval338C,basisEval3390,basisEval3392,basisEval3394,basisEval3396,basisEval3398,basisEval339A,basisEval339C,basisEval339E,basisEval33A0,basisEval33A2,basisEval33A6,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval3340,basisEval33AA,basisEval33AD,basisEval33B0,basisEval33B3,basisEval33B6,basisEval33BA,basisEval33BC,basisEval33BE,basisEval33C0,basisEval33C2,basisEval33C4,basisEval33C6,basisEval33C8,basisEval33CA,basisEval33CC,basisEval33CE,basisEval33D0,basisEval33D2,basisEval33D4,basisEval33D6,basisEval33DA];
          tensor[84] intermediateCons342A#1 = <tensor[84]>[basisEval3340,basisEval3340,basisEval3344,basisEval3340,basisEval3340,basisEval3348,basisEval33DB,basisEval3340,basisEval33DC,basisEval3340,basisEval3340,basisEval3354,basisEval33DD,basisEval33DE,basisEval3340,basisEval33DF,basisEval335F,basisEval3340,basisEval33E0,basisEval3340,basisEval3340,basisEval3367,basisEval33E1,basisEval33E2,basisEval33E3,basisEval3340,basisEval33E4,basisEval3375,basisEval33E5,basisEval3340,basisEval33E6,basisEval33E7,basisEval3340,basisEval33E8,basisEval3340,basisEval3340,basisEval3383,basisEval33E9,basisEval33EA,basisEval33EB,basisEval33EC,basisEval3340,basisEval33ED,basisEval3394,basisEval33EE,basisEval33EF,basisEval3340,basisEval33F0,basisEval33F1,basisEval339E,basisEval3340,basisEval33F2,basisEval33F3,basisEval3340,basisEval33F4,basisEval3340,basisEval3340,basisEval33AA,basisEval33F5,basisEval33F6,basisEval33F7,basisEval33F8,basisEval33F9,basisEval3340,basisEval33FA,basisEval33BE,basisEval33FB,basisEval33FC,basisEval33FD,basisEval3340,basisEval33FE,basisEval33FF,basisEval33CA,basisEval3400,basisEval3340,basisEval3401,basisEval3402,basisEval3403,basisEval3340,basisEval3404,basisEval3405,basisEval3340,basisEval3406,basisEval3340];
          tensor[84] intermediateCons342B#1 = <tensor[84]>[basisEval3340,basisEval3344,basisEval3340,basisEval3340,basisEval3407,basisEval334C,basisEval3340,basisEval33DC,basisEval3340,basisEval3340,basisEval3408,basisEval33DD,basisEval335B,basisEval3340,basisEval335D,basisEval3409,basisEval3340,basisEval33E0,basisEval3340,basisEval3340,basisEval340A,basisEval340B,basisEval340C,basisEval3371,basisEval3340,basisEval340D,basisEval3375,basisEval340E,basisEval3340,basisEval340F,basisEval3410,basisEval3340,basisEval33E8,basisEval3340,basisEval3340,basisEval3411,basisEval3412,basisEval33EA,basisEval3413,basisEval3390,basisEval3340,basisEval3414,basisEval3415,basisEval3396,basisEval3416,basisEval3340,basisEval339A,basisEval33F1,basisEval3417,basisEval3340,basisEval3418,basisEval3419,basisEval3340,basisEval33F4,basisEval3340,basisEval3340,basisEval341A,basisEval341B,basisEval341C,basisEval341D,basisEval341E,basisEval33BA,basisEval3340,basisEval341F,basisEval3420,basisEval33FB,basisEval33C2,basisEval3421,basisEval3340,basisEval3422,basisEval33C8,basisEval3423,basisEval3424,basisEval3340,basisEval3425,basisEval3402,basisEval3426,basisEval3340,basisEval3427,basisEval3428,basisEval3340,basisEval3406,basisEval3340,basisEval3340];
          tensor[84] projParam351F#1 = intermediateCons3429;
          real vdot3520#1 = VDot<84>(femDofs2E0F,projParam351F);
          tensor[84] projParam3521#1 = intermediateCons342A;
          real vdot3522#1 = VDot<84>(femDofs2E0F,projParam3521);
          tensor[84] projParam3523#1 = intermediateCons342B;
          real vdot3524#1 = VDot<84>(femDofs2E0F,projParam3523);
          tensor[3] probe_l_21351E#3 = <tensor[3]>[vdot3520,vdot3522,vdot3524];
          tensor[3] projParam352E#1 = v332A;
          tensor[3] negV352F#1 = VNeg<3>(projParam352E);
          tensor[3] projParam3530#1 = v332D;
          tensor[3] negV3531#1 = VNeg<3>(projParam3530);
          tensor[3] projParam3532#1 = v3330;
          tensor[3] negV3533#1 = VNeg<3>(projParam3532);
          tensor[3] projParam353D#1 = negV352F;
          real vdot353E#1 = VDot<3>(projParam353D,probe_l_21351E);
          tensor[3] projParam353F#1 = negV3531;
          real vdot3540#1 = VDot<3>(projParam353F,probe_l_21351E);
          tensor[3] projParam3541#1 = negV3533;
          real vdot3542#1 = VDot<3>(projParam3541,probe_l_21351E);
          tensor[3] op1_e3_l_30353C#5 = <tensor[3]>[vdot353E,vdot3540,vdot3542];
          real op1_e3_l_32354B#1 = VDot<3>(op1_e3_l_30353C,op1_e3_l_30353C);
          real op1_e3_l_33354E#3 = Sqrt(op1_e3_l_32354B);
          real op1_e3_l_343551#1 = Abs<real>(op1_e3_l_33354E);
          real op1_e3_l_353554#1 = RDiv(op1_e3_l_343551,thick2323);
          real op1_e3_l_363557#1 = RSub(_t32AB,op1_e3_l_353554);
          real op1_e3_l_37355A#2 = RMul(_t32AD,op1_e3_l_363557);
          real op1_e3_l_38355D#1 = RClamp(_t32A9,_t32AB,op1_e3_l_37355A);
          real _t3560#1 = RMul(maxAlpha232B,op1_e3_l_38355D);
          bool _t3563#1 = EQ<real>(_t3560,_t32A9);
          if _t3563 then goto SAVE3566 else goto JOIN3568
        SAVE3566:  preds = [COND3565]
          self.rayN = rayN234F;
          active
          goto JOIN3568
        JOIN3568:  preds = [*ACTIVE3567,COND3565]
          real op1_e3_l_393569#1 = RClamp(_t32A9,_t32AB,op1_e3_l_37355A);
          real op1_e3_l_40356C#1 = RMul(maxAlpha232B,op1_e3_l_393569);
          real _t356F#1 = RSub(_t32AB,op1_e3_l_40356C);
          real _t3572#1 = MathFn<pow>(_t356F,alphaFix233F);
          bool _t3574#1 = NEQ<real>(phKs2347,_t32A9);
          if _t3574 then goto ASSIGN3579 else goto JOIN359C
        ASSIGN3579:  preds = [COND3576]
          tensor[3] op1_e3_l_243577#3 = VAdd<3>(eyeDir2341,litwsp2337);
          real op1_e3_l_26357A#1 = VDot<3>(op1_e3_l_243577,op1_e3_l_243577);
          real op1_e3_l_27357D#1 = Sqrt(op1_e3_l_26357A);
          real realLit3581#1 = 0.1e1;
          real op1_e3_l_543580#1 = RDiv(realLit3581,op1_e3_l_33354E);
          tensor[3] op1_e3_l_553585#1 = VScale<3>(op1_e3_l_543580,op1_e3_l_30353C);
          tensor[3] op1_e3_l_563588#1 = VNeg<3>(op1_e3_l_553585);
          real realLit358C#1 = 0.1e1;
          real op1_e3_l_58358B#1 = RDiv(realLit358C,op1_e3_l_27357D);
          real op1_e3_l_593590#1 = VDot<3>(op1_e3_l_563588,op1_e3_l_243577);
          real op1_e3_l_603593#1 = RMul(op1_e3_l_58358B,op1_e3_l_593590);
          real _t3596#1 = Abs<real>(op1_e3_l_603593);
          real scomp3599#1 = MathFn<pow>(_t3596,phSp2349);
          goto JOIN359C
        JOIN359C:  preds = [ASSIGN359A,COND3576]
          real scomp359B#1 = phi(scomp3599,_t32A9)
          real cmin359D#3 = VIndex<2,0>(cminmax2331);
          real cmax359F#2 = VIndex<2,1>(cminmax2331);
          tensor[3] mcol35A1#1 = <tensor[3]>[_t32AB,_t32AB,_t32AB];
          bool _t35A3#1 = NEQ<real>(cmin359D,cmax359F);
          if _t35A3 then goto ASSIGN35A9 else goto JOIN37E5
        ASSIGN35A9:  preds = [COND35A5]
          tensor[3] v35A7#1 = VAdd<3>(rayOrig233B,op1_e3_l_52358);
          tensor[3] _t35A6#3 = VAdd<3>(v35A7,op1_e3_l_30353C);
          real varAcc35AC#6 = VIndex<3,0>(_t35A6);
          real varAcc35AD#6 = VIndex<3,1>(_t35A6);
          real varAcc35AE#6 = VIndex<3,2>(_t35A6);
          real coeff35AF#126 = 0.1e1;
          real prod35B0#7 = RMul(coeff35AF,coeff35AF);
          real prod35B1#1 = RMul(coeff35AF,prod35B0);
          real basisEval35B2#1 = RMul(coeff35AF,prod35B1);
          real iden35B3#7 = varAcc35AE;
          real prod35B4#6 = RMul(coeff35AF,iden35B3);
          real prod35B5#1 = RMul(coeff35AF,prod35B4);
          real basisEval35B6#1 = RMul(coeff35AF,prod35B5);
          real iden35B7#7 = varAcc35AD;
          real prod35B8#6 = RMul(iden35B7,coeff35AF);
          real prod35B9#1 = RMul(coeff35AF,prod35B8);
          real basisEval35BA#1 = RMul(coeff35AF,prod35B9);
          real iden35BB#22 = varAcc35AC;
          real prod35BC#1 = RMul(iden35BB,prod35B0);
          real basisEval35BD#1 = RMul(coeff35AF,prod35BC);
          real prod235BE#6 = RMul(iden35B3,varAcc35AE);
          real prod35BF#5 = RMul(coeff35AF,prod235BE);
          real prod35C0#1 = RMul(coeff35AF,prod35BF);
          real basisEval35C1#1 = RMul(coeff35AF,prod35C0);
          real prod35C2#5 = RMul(iden35B7,iden35B3);
          real prod35C3#1 = RMul(coeff35AF,prod35C2);
          real basisEval35C4#1 = RMul(coeff35AF,prod35C3);
          real prod235C5#6 = RMul(iden35B7,varAcc35AD);
          real prod35C6#5 = RMul(prod235C5,coeff35AF);
          real prod35C7#1 = RMul(coeff35AF,prod35C6);
          real basisEval35C8#1 = RMul(coeff35AF,prod35C7);
          real prod35C9#1 = RMul(iden35BB,prod35B4);
          real basisEval35CA#1 = RMul(coeff35AF,prod35C9);
          real prod35CB#1 = RMul(iden35BB,prod35B8);
          real basisEval35CC#1 = RMul(coeff35AF,prod35CB);
          real prod235CD#16 = RMul(iden35BB,varAcc35AC);
          real prod35CE#1 = RMul(prod235CD,prod35B0);
          real basisEval35CF#1 = RMul(coeff35AF,prod35CE);
          real prod335D0#5 = RMul(prod235BE,varAcc35AE);
          real prod35D1#4 = RMul(coeff35AF,prod335D0);
          real prod35D2#1 = RMul(coeff35AF,prod35D1);
          real basisEval35D3#1 = RMul(coeff35AF,prod35D2);
          real prod35D4#4 = RMul(iden35B7,prod235BE);
          real prod35D5#1 = RMul(coeff35AF,prod35D4);
          real basisEval35D6#1 = RMul(coeff35AF,prod35D5);
          real prod35D7#4 = RMul(prod235C5,iden35B3);
          real prod35D8#1 = RMul(coeff35AF,prod35D7);
          real basisEval35D9#1 = RMul(coeff35AF,prod35D8);
          real prod335DA#5 = RMul(prod235C5,varAcc35AD);
          real prod35DB#4 = RMul(prod335DA,coeff35AF);
          real prod35DC#1 = RMul(coeff35AF,prod35DB);
          real basisEval35DD#1 = RMul(coeff35AF,prod35DC);
          real prod35DE#1 = RMul(iden35BB,prod35BF);
          real basisEval35DF#1 = RMul(coeff35AF,prod35DE);
          real prod35E0#1 = RMul(iden35BB,prod35C2);
          real basisEval35E1#1 = RMul(coeff35AF,prod35E0);
          real prod35E2#1 = RMul(iden35BB,prod35C6);
          real basisEval35E3#1 = RMul(coeff35AF,prod35E2);
          real prod35E4#1 = RMul(prod235CD,prod35B4);
          real basisEval35E5#1 = RMul(coeff35AF,prod35E4);
          real prod35E6#1 = RMul(prod235CD,prod35B8);
          real basisEval35E7#1 = RMul(coeff35AF,prod35E6);
          real prod335E8#11 = RMul(prod235CD,varAcc35AC);
          real prod35E9#1 = RMul(prod335E8,prod35B0);
          real basisEval35EA#1 = RMul(coeff35AF,prod35E9);
          real prod435EB#4 = RMul(prod335D0,varAcc35AE);
          real prod35EC#3 = RMul(coeff35AF,prod435EB);
          real prod35ED#1 = RMul(coeff35AF,prod35EC);
          real basisEval35EE#1 = RMul(coeff35AF,prod35ED);
          real prod35EF#3 = RMul(iden35B7,prod335D0);
          real prod35F0#1 = RMul(coeff35AF,prod35EF);
          real basisEval35F1#1 = RMul(coeff35AF,prod35F0);
          real prod35F2#3 = RMul(prod235C5,prod235BE);
          real prod35F3#1 = RMul(coeff35AF,prod35F2);
          real basisEval35F4#1 = RMul(coeff35AF,prod35F3);
          real prod35F5#3 = RMul(prod335DA,iden35B3);
          real prod35F6#1 = RMul(coeff35AF,prod35F5);
          real basisEval35F7#1 = RMul(coeff35AF,prod35F6);
          real prod435F8#4 = RMul(prod335DA,varAcc35AD);
          real prod35F9#3 = RMul(prod435F8,coeff35AF);
          real prod35FA#1 = RMul(coeff35AF,prod35F9);
          real basisEval35FB#1 = RMul(coeff35AF,prod35FA);
          real prod35FC#1 = RMul(iden35BB,prod35D1);
          real basisEval35FD#1 = RMul(coeff35AF,prod35FC);
          real prod35FE#1 = RMul(iden35BB,prod35D4);
          real basisEval35FF#1 = RMul(coeff35AF,prod35FE);
          real prod3600#1 = RMul(iden35BB,prod35D7);
          real basisEval3601#1 = RMul(coeff35AF,prod3600);
          real prod3602#1 = RMul(iden35BB,prod35DB);
          real basisEval3603#1 = RMul(coeff35AF,prod3602);
          real prod3604#1 = RMul(prod235CD,prod35BF);
          real basisEval3605#1 = RMul(coeff35AF,prod3604);
          real prod3606#1 = RMul(prod235CD,prod35C2);
          real basisEval3607#1 = RMul(coeff35AF,prod3606);
          real prod3608#1 = RMul(prod235CD,prod35C6);
          real basisEval3609#1 = RMul(coeff35AF,prod3608);
          real prod360A#1 = RMul(prod335E8,prod35B4);
          real basisEval360B#1 = RMul(coeff35AF,prod360A);
          real prod360C#1 = RMul(prod335E8,prod35B8);
          real basisEval360D#1 = RMul(coeff35AF,prod360C);
          real prod4360E#7 = RMul(prod335E8,varAcc35AC);
          real prod360F#1 = RMul(prod4360E,prod35B0);
          real basisEval3610#1 = RMul(coeff35AF,prod360F);
          real prod53611#3 = RMul(prod435EB,varAcc35AE);
          real prod3612#2 = RMul(coeff35AF,prod53611);
          real prod3613#1 = RMul(coeff35AF,prod3612);
          real basisEval3614#1 = RMul(coeff35AF,prod3613);
          real prod3615#2 = RMul(iden35B7,prod435EB);
          real prod3616#1 = RMul(coeff35AF,prod3615);
          real basisEval3617#1 = RMul(coeff35AF,prod3616);
          real prod3618#2 = RMul(prod235C5,prod335D0);
          real prod3619#1 = RMul(coeff35AF,prod3618);
          real basisEval361A#1 = RMul(coeff35AF,prod3619);
          real prod361B#2 = RMul(prod335DA,prod235BE);
          real prod361C#1 = RMul(coeff35AF,prod361B);
          real basisEval361D#1 = RMul(coeff35AF,prod361C);
          real prod361E#2 = RMul(prod435F8,iden35B3);
          real prod361F#1 = RMul(coeff35AF,prod361E);
          real basisEval3620#1 = RMul(coeff35AF,prod361F);
          real prod53621#3 = RMul(prod435F8,varAcc35AD);
          real prod3622#2 = RMul(prod53621,coeff35AF);
          real prod3623#1 = RMul(coeff35AF,prod3622);
          real basisEval3624#1 = RMul(coeff35AF,prod3623);
          real prod3625#1 = RMul(iden35BB,prod35EC);
          real basisEval3626#1 = RMul(coeff35AF,prod3625);
          real prod3627#1 = RMul(iden35BB,prod35EF);
          real basisEval3628#1 = RMul(coeff35AF,prod3627);
          real prod3629#1 = RMul(iden35BB,prod35F2);
          real basisEval362A#1 = RMul(coeff35AF,prod3629);
          real prod362B#1 = RMul(iden35BB,prod35F5);
          real basisEval362C#1 = RMul(coeff35AF,prod362B);
          real prod362D#1 = RMul(iden35BB,prod35F9);
          real basisEval362E#1 = RMul(coeff35AF,prod362D);
          real prod362F#1 = RMul(prod235CD,prod35D1);
          real basisEval3630#1 = RMul(coeff35AF,prod362F);
          real prod3631#1 = RMul(prod235CD,prod35D4);
          real basisEval3632#1 = RMul(coeff35AF,prod3631);
          real prod3633#1 = RMul(prod235CD,prod35D7);
          real basisEval3634#1 = RMul(coeff35AF,prod3633);
          real prod3635#1 = RMul(prod235CD,prod35DB);
          real basisEval3636#1 = RMul(coeff35AF,prod3635);
          real prod3637#1 = RMul(prod335E8,prod35BF);
          real basisEval3638#1 = RMul(coeff35AF,prod3637);
          real prod3639#1 = RMul(prod335E8,prod35C2);
          real basisEval363A#1 = RMul(coeff35AF,prod3639);
          real prod363B#1 = RMul(prod335E8,prod35C6);
          real basisEval363C#1 = RMul(coeff35AF,prod363B);
          real prod363D#1 = RMul(prod4360E,prod35B4);
          real basisEval363E#1 = RMul(coeff35AF,prod363D);
          real prod363F#1 = RMul(prod4360E,prod35B8);
          real basisEval3640#1 = RMul(coeff35AF,prod363F);
          real prod53641#4 = RMul(prod4360E,varAcc35AC);
          real prod3642#1 = RMul(prod53641,prod35B0);
          real basisEval3643#1 = RMul(coeff35AF,prod3642);
          real prod63644#1 = RMul(prod53611,varAcc35AE);
          real prod3645#1 = RMul(coeff35AF,prod63644);
          real prod3646#1 = RMul(coeff35AF,prod3645);
          real basisEval3647#1 = RMul(coeff35AF,prod3646);
          real prod3648#1 = RMul(iden35B7,prod53611);
          real prod3649#1 = RMul(coeff35AF,prod3648);
          real basisEval364A#1 = RMul(coeff35AF,prod3649);
          real prod364B#1 = RMul(prod235C5,prod435EB);
          real prod364C#1 = RMul(coeff35AF,prod364B);
          real basisEval364D#1 = RMul(coeff35AF,prod364C);
          real prod364E#1 = RMul(prod335DA,prod335D0);
          real prod364F#1 = RMul(coeff35AF,prod364E);
          real basisEval3650#1 = RMul(coeff35AF,prod364F);
          real prod3651#1 = RMul(prod435F8,prod235BE);
          real prod3652#1 = RMul(coeff35AF,prod3651);
          real basisEval3653#1 = RMul(coeff35AF,prod3652);
          real prod3654#1 = RMul(prod53621,iden35B3);
          real prod3655#1 = RMul(coeff35AF,prod3654);
          real basisEval3656#1 = RMul(coeff35AF,prod3655);
          real prod63657#1 = RMul(prod53621,varAcc35AD);
          real prod3658#1 = RMul(prod63657,coeff35AF);
          real prod3659#1 = RMul(coeff35AF,prod3658);
          real basisEval365A#1 = RMul(coeff35AF,prod3659);
          real prod365B#1 = RMul(iden35BB,prod3612);
          real basisEval365C#1 = RMul(coeff35AF,prod365B);
          real prod365D#1 = RMul(iden35BB,prod3615);
          real basisEval365E#1 = RMul(coeff35AF,prod365D);
          real prod365F#1 = RMul(iden35BB,prod3618);
          real basisEval3660#1 = RMul(coeff35AF,prod365F);
          real prod3661#1 = RMul(iden35BB,prod361B);
          real basisEval3662#1 = RMul(coeff35AF,prod3661);
          real prod3663#1 = RMul(iden35BB,prod361E);
          real basisEval3664#1 = RMul(coeff35AF,prod3663);
          real prod3665#1 = RMul(iden35BB,prod3622);
          real basisEval3666#1 = RMul(coeff35AF,prod3665);
          real prod3667#1 = RMul(prod235CD,prod35EC);
          real basisEval3668#1 = RMul(coeff35AF,prod3667);
          real prod3669#1 = RMul(prod235CD,prod35EF);
          real basisEval366A#1 = RMul(coeff35AF,prod3669);
          real prod366B#1 = RMul(prod235CD,prod35F2);
          real basisEval366C#1 = RMul(coeff35AF,prod366B);
          real prod366D#1 = RMul(prod235CD,prod35F5);
          real basisEval366E#1 = RMul(coeff35AF,prod366D);
          real prod366F#1 = RMul(prod235CD,prod35F9);
          real basisEval3670#1 = RMul(coeff35AF,prod366F);
          real prod3671#1 = RMul(prod335E8,prod35D1);
          real basisEval3672#1 = RMul(coeff35AF,prod3671);
          real prod3673#1 = RMul(prod335E8,prod35D4);
          real basisEval3674#1 = RMul(coeff35AF,prod3673);
          real prod3675#1 = RMul(prod335E8,prod35D7);
          real basisEval3676#1 = RMul(coeff35AF,prod3675);
          real prod3677#1 = RMul(prod335E8,prod35DB);
          real basisEval3678#1 = RMul(coeff35AF,prod3677);
          real prod3679#1 = RMul(prod4360E,prod35BF);
          real basisEval367A#1 = RMul(coeff35AF,prod3679);
          real prod367B#1 = RMul(prod4360E,prod35C2);
          real basisEval367C#1 = RMul(coeff35AF,prod367B);
          real prod367D#1 = RMul(prod4360E,prod35C6);
          real basisEval367E#1 = RMul(coeff35AF,prod367D);
          real prod367F#1 = RMul(prod53641,prod35B4);
          real basisEval3680#1 = RMul(coeff35AF,prod367F);
          real prod3681#1 = RMul(prod53641,prod35B8);
          real basisEval3682#1 = RMul(coeff35AF,prod3681);
          real prod63683#1 = RMul(prod53641,varAcc35AC);
          real prod3684#1 = RMul(prod63683,prod35B0);
          real basisEval3685#1 = RMul(coeff35AF,prod3684);
          tensor[84] intermediateCons3686#1 = <tensor[84]>[basisEval35B2,basisEval35B6,basisEval35BA,basisEval35BD,basisEval35C1,basisEval35C4,basisEval35C8,basisEval35CA,basisEval35CC,basisEval35CF,basisEval35D3,basisEval35D6,basisEval35D9,basisEval35DD,basisEval35DF,basisEval35E1,basisEval35E3,basisEval35E5,basisEval35E7,basisEval35EA,basisEval35EE,basisEval35F1,basisEval35F4,basisEval35F7,basisEval35FB,basisEval35FD,basisEval35FF,basisEval3601,basisEval3603,basisEval3605,basisEval3607,basisEval3609,basisEval360B,basisEval360D,basisEval3610,basisEval3614,basisEval3617,basisEval361A,basisEval361D,basisEval3620,basisEval3624,basisEval3626,basisEval3628,basisEval362A,basisEval362C,basisEval362E,basisEval3630,basisEval3632,basisEval3634,basisEval3636,basisEval3638,basisEval363A,basisEval363C,basisEval363E,basisEval3640,basisEval3643,basisEval3647,basisEval364A,basisEval364D,basisEval3650,basisEval3653,basisEval3656,basisEval365A,basisEval365C,basisEval365E,basisEval3660,basisEval3662,basisEval3664,basisEval3666,basisEval3668,basisEval366A,basisEval366C,basisEval366E,basisEval3670,basisEval3672,basisEval3674,basisEval3676,basisEval3678,basisEval367A,basisEval367C,basisEval367E,basisEval3680,basisEval3682,basisEval3685];
          tensor[84] basisResult35AB#1 = intermediateCons3686;
          real probe_l_83763#1 = VDot<84>(femDofs2E0F,basisResult35AB);
          real op1_e3_l_93766#1 = RSub(probe_l_83763,cmin359D);
          real op1_e3_l_103769#1 = RSub(cmax359F,cmin359D);
          real op1_e3_l_11376C#1 = RDiv(op1_e3_l_93766,op1_e3_l_103769);
          real op1_e3_l_12376F#1 = RSub(_t32AB,_t32A9);
          real op1_e3_l_133772#1 = RMul(op1_e3_l_11376C,op1_e3_l_12376F);
          real _t3775#1 = RAdd(_t32A9,op1_e3_l_133772);
          real Mtransform3778#1 = Transform<IMAGE1D<double[3]>>(cmap2311);
          real MxPos377A#1 = RMul(Mtransform3778,_t3775);
          real Ttranslate377D#1 = Translate<IMAGE1D<double[3]>>(cmap2311);
          real imgPos377F#2 = RAdd(MxPos377A,Ttranslate377D);
          real nd3782#2 = Floor<1>(imgPos377F);
          real f3784#2 = RSub(imgPos377F,nd3782);
          int n3787#1 = RealToInt<1>(nd3782);
          int idx3789#5 = n3787;
          bool isInside378B#1 = IndexInside<IMAGE1D<double[3]>,2>(idx3789,cmap2311);
          if isInside378B then goto ASSIGN39CB else goto ASSIGN39CF
        ASSIGN39CB:  preds = [COND378D]
          int addRes3790#1 = idx3789;
          int stride3791#2 = 3;
          int offp3792#3 = IMul(stride3791,addRes3790);
          real v0_3793#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3792);
          int ilit3794#3 = 1;
          int addRes3795#1 = IAdd(idx3789,ilit3794);
          int offp3796#3 = IMul(stride3791,addRes3795);
          real v1_3797#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3796);
          tensor[2] v_3798#1 = <tensor[2]>[v0_3793,v1_3797];
          int offp3799#1 = IAdd(offp3792,ilit3794);
          real v0_379A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3799);
          int offp379B#1 = IAdd(offp3796,ilit3794);
          real v1_379C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379B);
          tensor[2] v_379D#1 = <tensor[2]>[v0_379A,v1_379C];
          int offset379E#2 = 2;
          int offp379F#1 = IAdd(offp3792,offset379E);
          real v0_37A0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379F);
          int offp37A1#1 = IAdd(offp3796,offset379E);
          real v1_37A2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp37A1);
          tensor[2] v_37A3#1 = <tensor[2]>[v0_37A0,v1_37A2];
          tensor[3,2] voxels37A4#1 = <tensor[3,2]>[v_3798,v_379D,v_37A3];
          tensor[3,2] ldvox378E#1 = voxels37A4;
          goto JOIN37BE
        JOIN37BE:  preds = [ASSIGN37BB,ASSIGN3898]
          tensor[3,2] ldvox37BC#3 = phi(ldvox378E,ldvox37BD)
          real rlit37C0#1 = 0.1e1;
          real idx37C1#1 = RSub(f3784,rlit37C0);
          tensor[2] kernX_37BF#1 = <tensor[2]>[f3784,idx37C1];
          real _f37CA#1 = 0.1e1;
          real _f37CB#1 = 0.1e1;
          tensor[2] a037C6#1 = <tensor[2]>[_f37CA,_f37CB];
          real _f37C8#1 = -0.1e1;
          real _f37C9#1 = 0.1e1;
          tensor[2] a137C7#1 = <tensor[2]>[_f37C8,_f37C9];
          tensor[2] prod137CC#1 = VMul<2>(kernX_37BF,a137C7);
          tensor[2] kevalX_d0_37C5#3 = VAdd<2>(a037C6,prod137CC);
          tensor[2] projIx37D6#1 = ProjectLast<tensor[3,2],[0]>(ldvox37BC);
          real vdot37D7#1 = VDot<2>(projIx37D6,kevalX_d0_37C5);
          tensor[2] projIx37D8#1 = ProjectLast<tensor[3,2],[1]>(ldvox37BC);
          real vdot37D9#1 = VDot<2>(projIx37D8,kevalX_d0_37C5);
          tensor[2] projIx37DA#1 = ProjectLast<tensor[3,2],[2]>(ldvox37BC);
          real vdot37DB#1 = VDot<2>(projIx37DA,kevalX_d0_37C5);
          tensor[3] mcol37D5#1 = <tensor[3]>[vdot37D7,vdot37D9,vdot37DB];
          goto JOIN37E5
        JOIN37E5:  preds = [ASSIGN37E3,COND35A5]
          tensor[3] mcol37E4#3 = phi(mcol37D5,mcol35A1)
          real realLit37E7#1 = 0.1e1;
          real op1_e3_l_6337E6#1 = RDiv(realLit37E7,op1_e3_l_33354E);
          tensor[3] op1_e3_l_6437EB#1 = VScale<3>(op1_e3_l_6337E6,op1_e3_l_30353C);
          tensor[3] op1_e3_l_6537EE#1 = VNeg<3>(op1_e3_l_6437EB);
          real op1_e3_l_6637F1#2 = VDot<3>(op1_e3_l_6537EE,litwsp2337);
          real op1_e3_l_6737F4#1 = RMul(op1_e3_l_6637F1,op1_e3_l_6637F1);
          real op1_e3_l_6837F7#1 = RMul(phKd2345,op1_e3_l_6737F4);
          real op1_e3_l_7037FA#1 = RSub(rayN234F,camNearVsp2333);
          real op1_e3_l_7137FD#1 = RSub(camFarVsp2335,camNearVsp2333);
          real op1_e3_l_723800#1 = RDiv(op1_e3_l_7037FA,op1_e3_l_7137FD);
          tensor[3] op1_e3_l_733803#1 = VSub<3>(mcFar232F,mcNear232D);
          tensor[3] op1_e3_l_743806#1 = VScale<3>(op1_e3_l_723800,op1_e3_l_733803);
          real op1_e3_l_753809#3 = RAdd(phKa2343,op1_e3_l_6837F7);
          tensor[3] op1_e3_l_76380C#3 = VAdd<3>(mcNear232D,op1_e3_l_743806);
          real r3810#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_76380C);
          real r3811#1 = TensorIndex<tensor[3],[0]>(mcol37E4);
          real r3812#1 = RMul(op1_e3_l_753809,r3810);
          real r3813#1 = RMul(r3812,r3811);
          real r3814#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_76380C);
          real r3815#1 = TensorIndex<tensor[3],[1]>(mcol37E4);
          real r3816#1 = RMul(op1_e3_l_753809,r3814);
          real r3817#1 = RMul(r3816,r3815);
          real r3818#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_76380C);
          real r3819#1 = TensorIndex<tensor[3],[2]>(mcol37E4);
          real r381A#1 = RMul(op1_e3_l_753809,r3818);
          real r381B#1 = RMul(r381A,r3819);
          tensor[3] op1_e3_l_77380F#1 = <tensor[3]>[r3813,r3817,r381B];
          real r382B#1 = _t32AB;
          real r382C#3 = RMul(phKs2347,scomp359B);
          real r382D#1 = RMul(r382C,r382B);
          real r382E#1 = _t32AB;
          real r382F#1 = RMul(r382C,r382E);
          real r3830#1 = _t32AB;
          real r3831#1 = RMul(r382C,r3830);
          tensor[3] op1_e3_l_78382A#1 = <tensor[3]>[r382D,r382F,r3831];
          real op1_e3_l_79383B#2 = RSub(_t32AB,_t3572);
          tensor[3] op1_e3_l_80383E#3 = VAdd<3>(op1_e3_l_77380F,op1_e3_l_78382A);
          real r3842#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_80383E);
          real r3843#3 = RMul(transp234D,op1_e3_l_79383B);
          real r3844#1 = RMul(r3843,r3842);
          real r3845#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_80383E);
          real r3846#1 = RMul(r3843,r3845);
          real r3847#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_80383E);
          real r3848#1 = RMul(r3843,r3847);
          tensor[3] op1_e3_l_813841#1 = <tensor[3]>[r3844,r3846,r3848];
          tensor[3] rgb3852#2 = VAdd<3>(rgb234B,op1_e3_l_813841);
          real op1_e3_l_53855#1 = RSub(_t32AB,op1_e3_l_79383B);
          real transp3858#2 = RMul(transp234D,op1_e3_l_53855);
          bool _t385B#1 = LT<real>(transp3858,transp02321);
          if _t385B then goto SAVE385E else goto JOIN3863
        SAVE385E:  preds = [COND385D]
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = _t32A9;
          stabilize
          goto JOIN3863
        JOIN3863:  preds = [*STABILIZE3861,COND385D]
          real transp3862#1 = phi(transp3858)
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = transp3862;
          active
        ASSIGN39CF:  preds = [COND378D]
          int addRes3869#1 = idx3789;
          int ix386A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,addRes3869);
          int stride386B#2 = 3;
          int offp386C#3 = IMul(stride386B,ix386A);
          real v0_386D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp386C);
          int ilit386E#3 = 1;
          int addRes386F#1 = IAdd(idx3789,ilit386E);
          int ix3870#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,addRes386F);
          int offp3871#3 = IMul(stride386B,ix3870);
          real v1_3872#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3871);
          tensor[2] v_3873#1 = <tensor[2]>[v0_386D,v1_3872];
          int offp3874#1 = IAdd(offp386C,ilit386E);
          real v0_3875#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3874);
          int offp3876#1 = IAdd(offp3871,ilit386E);
          real v1_3877#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3876);
          tensor[2] v_3878#1 = <tensor[2]>[v0_3875,v1_3877];
          int offset3879#2 = 2;
          int offp387A#1 = IAdd(offp386C,offset3879);
          real v0_387B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387A);
          int offp387C#1 = IAdd(offp3871,offset3879);
          real v1_387D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387C);
          tensor[2] v_387E#1 = <tensor[2]>[v0_387B,v1_387D];
          tensor[3,2] voxels387F#1 = <tensor[3,2]>[v_3873,v_3878,v_387E];
          tensor[3,2] ldvox37BD#1 = voxels387F;
          goto JOIN37BE
        ASSIGN3899:  preds = [COND2BFD]
          bool _t2C01#1 = false;
          goto JOIN2C02
        ASSIGN389A:  preds = [COND2BF8]
          bool _t2C04#1 = false;
          goto JOIN2C05
        ASSIGN389B:  preds = [COND2364]
          bool _t2C07#1 = false;
          goto JOIN2C08
    end update
    method stabilize
        ENTRY389C:  preds = []
          tensor[4] rgba389D#1 = self.rgba;
          tensor[3] rgb389F#3 = self.rgb;
          real transp38A1#2 = self.transp;
          real _t38A3#2 = 0.1e1;
          bool _t38A5#1 = LT<real>(transp38A1,_t38A3);
          if _t38A5 then goto ASSIGN38AA else goto JOIN38BD
        ASSIGN38AA:  preds = [COND38A7]
          real aa38A8#4 = RSub(_t38A3,transp38A1);
          real _t38AB#1 = VIndex<3,0>(rgb389F);
          real _t38AD#1 = RDiv(_t38AB,aa38A8);
          real _t38B0#1 = VIndex<3,1>(rgb389F);
          real _t38B2#1 = RDiv(_t38B0,aa38A8);
          real _t38B5#1 = VIndex<3,2>(rgb389F);
          real _t38B7#1 = RDiv(_t38B5,aa38A8);
          tensor[4] rgba38BA#1 = <tensor[4]>[_t38AD,_t38B2,_t38B7,aa38A8];
          goto JOIN38BD
        JOIN38BD:  preds = [ASSIGN38BB,COND38A7]
          tensor[4] rgba38BC#1 = phi(rgba38BA,rgba389D)
          self.rgba = rgba38BC;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY38C0:  preds = []
      int iresU38C1#1 = globals.iresU2033;
      int iresV38C3#1 = globals.iresV2034;
      int _t38C5#2 = 0;
      int _t38C7#2 = 1;
      int _t38C9#1 = ISub(iresV38C3,_t38C7);
      int[] _t38CB#1 = Range(_t38C5,_t38C9);
    FOREACH38CE:  preds = [ASSIGN38CC,NEXT38D7]
      foreach (vi38CD in _t38CB) on exit goto RETURN38D8
      int _t38CF#1 = ISub(iresU38C1,_t38C7);
      int[] _t38D1#1 = Range(_t38C5,_t38CF);
    FOREACH38D4:  preds = [ASSIGN38D2,NEXT38D6]
      foreach (ui38D3 in _t38D1) on exit goto NEXT38D7
      new ray(ui38D3,vi38CD);
      goto FOREACH38D4
    NEXT38D7:  preds = [FOREACH38D4]
      goto FOREACH38CE
    RETURN38D8:  preds = [FOREACH38CE]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2027 (block) = <no-default>
  input 0space04CF_intermedateGlobal2028 (space) = <no-default>
  input 0U04D1_intermedateGlobal2029 (U) = <no-default>
  input cellChoice202A (cellChoice) = <no-default>
  input cmap202B (cmap) = image("cmap.nrrd")
  input camEye202C (camEye) = <default>
  input camAt202D (camAt) = <default>
  input camUp202E (camUp) = <default>
  input camNear202F (camNear) = <default>
  input camFar2030 (camFar) = <default>
  input camFOV2031 (camFOV) = <default>
  input camOrtho2032 (camOrtho) = <default>
  input iresU2033 (iresU) = <default>
  input iresV2034 (iresV) = <default>
  input rayStep2035 (rayStep) = <default>
  input refStep2036 (refStep) = <default>
  input transp02037 (transp0) = <default>
  input thick2038 (thick) = <default>
  input fStrTh2039 (fStrTh) = <default>
  input fMaskTh203A (fMaskTh) = <default>
  input fBias203B (fBias) = <default>
  input maxAlpha203C (maxAlpha) = <default>
  input light203D (light) = <default>
  input phong203E (phong) = <default>
  input mcNear203F (mcNear) = <default>
  input mcFar2040 (mcFar) = <default>
  input litdir2041 (litdir) = <default>
  input cminmax2042 (cminmax) = <default>
  global tensor[3] camN2043
  global tensor[3] camU2044
  global tensor[3] camV2045
  global real camDist2046
  global real camVmax2047
  global real camUmax2048
  global real camNearVsp2049
  global real camFarVsp204A
  global tensor[3] litwsp204B
  global int _t204C
  global femData:Space _tX204D
  global femData:FemFunc _tXX204E
## functions
## input initialization
  ENTRY2051:  preds = []
    real _t2052#13 = 0.e0;
    real _t2054#1 = -0.2e1;
    tensor[3] camEye2056#1 = <tensor[3]>[_t2052,_t2054,_t2052];
    globals.camEye202C = camEye2056;
    tensor[3] camAt2059#1 = <tensor[3]>[_t2052,_t2052,_t2052];
    globals.camAt202D = camAt2059;
    real _t205C#5 = 0.1e1;
    tensor[3] camUp205E#1 = <tensor[3]>[_t2052,_t2052,_t205C];
    globals.camUp202E = camUp205E;
    real camNear2061#1 = -0.4e1;
    globals.camNear202F = camNear2061;
    real camFar2064#1 = 0.4e1;
    globals.camFar2030 = camFar2064;
    real camFOV2067#1 = 0.1e2;
    globals.camFOV2031 = camFOV2067;
    bool camOrtho206A#2 = false;
    globals.camOrtho2032 = camOrtho206A;
    int iresU206D#2 = 100;
    globals.iresU2033 = iresU206D;
    globals.iresV2034 = iresU206D;
    real rayStep2071#2 = 0.1e-3;
    globals.rayStep2035 = rayStep2071;
    globals.refStep2036 = rayStep2071;
    real transp02075#1 = 0.5e-2;
    globals.transp02037 = transp02075;
    real thick2078#1 = 0.1e-1;
    globals.thick2038 = thick2078;
    globals.fStrTh2039 = _t2052;
    globals.fMaskTh203A = _t2052;
    real fBias207D#2 = 0.1e0;
    globals.fBias203B = fBias207D;
    globals.maxAlpha203C = _t205C;
    globals.light203D = camOrtho206A;
    real _t2082#1 = 0.7e0;
    real _t2084#1 = 0.2e0;
    real _t2086#1 = 0.1e3;
    tensor[4] phong2088#1 = <tensor[4]>[fBias207D,_t2082,_t2084,_t2086];
    globals.phong203E = phong2088;
    tensor[3] mcNear208B#2 = <tensor[3]>[_t205C,_t205C,_t205C];
    globals.mcNear203F = mcNear208B;
    globals.mcFar2040 = mcNear208B;
    real _t208F#1 = -0.1e1;
    tensor[3] litdir2091#1 = <tensor[3]>[_t2052,_t208F,_t2052];
    globals.litdir2041 = litdir2091;
    tensor[2] cminmax2094#1 = <tensor[2]>[_t2052,_t2052];
    globals.cminmax2042 = cminmax2094;
    return
## global-variable initialization
  ENTRY2098:  preds = []
    femData:Mesh block2099#3 = globals.block2027;
    femData:Space 0space04CF_intermedateGlobal209B#1 = globals.0space04CF_intermedateGlobal2028;
    femData:FemFunc 0U04D1_intermedateGlobal209D#1 = globals.0U04D1_intermedateGlobal2029;
    int cellChoice209F#1 = globals.cellChoice202A;
    tensor[3] camEye20A3#1 = globals.camEye202C;
    tensor[3] camAt20A5#1 = globals.camAt202D;
    tensor[3] camUp20A7#3 = globals.camUp202E;
    real camNear20A9#1 = globals.camNear202F;
    real camFar20AB#1 = globals.camFar2030;
    real camFOV20AD#1 = globals.camFOV2031;
    int iresU20AF#1 = globals.iresU2033;
    int iresV20B1#1 = globals.iresV2034;
    tensor[3] litdir20B3#5 = globals.litdir2041;
    int _t20B5#1 = 0;
    int _t20B7#1 = 1;
    int _t20B9#1 = ExtractFemItem<int,NumCell(Mesh)>(block2099);
    int _t20BB#1 = ISub(_t20B9,_t20B7);
    int[] _t20BD#1 = Range(_t20B5,_t20BB);
    femData:MeshCell[] _t20BF#1 = <femData:MeshCell[]>{};
  FOREACH20C2:  preds = [ASSIGN20C0,NEXT20C8]
    foreach (_t20C1 in _t20BD) on exit goto ASSIGN20CA
      femData:MeshCell[] _t20C6#2 = phi(_t20BF,_t20C5)
    femData:MeshCell _t20C3#1 = LoadFem<femData:MeshCell>(block2099,_t20C1);
    femData:MeshCell[] _t20C5#1 = Append<femData:MeshCell>(_t20C6,_t20C3);
    goto FOREACH20C2
  ASSIGN20CA:  preds = [FOREACH20C2]
    femData:Space space20C9#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal209B,block2099);
    femData:FemFunc U20CB#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal209D,space20C9);
    femData:MeshCell c120CD#1 = Subscript<femData:MeshCell[]>(_t20C6,cellChoice209F);
    int _t20CF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c120CD);
    femData:FuncCell _t20D1#2 = LoadFem<femData:FuncCell>(U20CB,_t20CF);
    femData:FemFunc _t20D3#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t20D1);
    femData:Space _t20D5#1 = ExtractFem<femData:Space,femData:FemFunc>(_t20D3);
    int _t20D7#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t20D1);
    tensor[3] op1_e3_l_420DD#9 = VSub<3>(camAt20A5,camEye20A3);
    real op1_e3_l_620E0#1 = VDot<3>(op1_e3_l_420DD,op1_e3_l_420DD);
    real op1_e3_l_720E3#6 = Sqrt(op1_e3_l_620E0);
    real realLit20E7#9 = 0.1e1;
    real op1_e3_l_920E6#6 = RDiv(realLit20E7,op1_e3_l_720E3);
    tensor[3] camN20EB#4 = VScale<3>(op1_e3_l_920E6,op1_e3_l_420DD);
    globals.camN2043 = camN20EB;
    real realLit20F0#6 = 0.e0;
    real r20F1#3 = TensorIndex<tensor[3],[0]>(camUp20A7);
    real r20F2#3 = RMul(realLit20F0,r20F1);
    real r20F3#3 = TensorIndex<tensor[3],[1]>(camUp20A7);
    real r20F4#3 = RMul(realLit20F0,r20F3);
    real r20F5#3 = TensorIndex<tensor[3],[2]>(camUp20A7);
    real r20F6#5 = RMul(realLit20F0,r20F5);
    real r20F7#3 = RAdd(r20F2,r20F4);
    real r20F8#3 = RAdd(r20F7,r20F6);
    real r20FA#1 = RMul(realLit20E7,r20F5);
    real r20FB#1 = RAdd(r20F7,r20FA);
    real realLit20FC#6 = -0.1e1;
    real r20FD#1 = RMul(realLit20FC,r20F3);
    real r20FE#1 = RAdd(r20F2,r20FD);
    real r20FF#1 = RAdd(r20FE,r20F6);
    tensor[3] tensor2100#1 = <tensor[3]>[r20F8,r20FB,r20FF];
    real r2101#1 = RMul(realLit20FC,r20F5);
    real r2102#1 = RAdd(r20F7,r2101);
    real r2103#1 = RMul(realLit20E7,r20F1);
    real r2104#1 = RAdd(r2103,r20F4);
    real r2105#1 = RAdd(r2104,r20F6);
    tensor[3] tensor2106#1 = <tensor[3]>[r2102,r20F8,r2105];
    real r2107#1 = RMul(realLit20E7,r20F3);
    real r2108#1 = RAdd(r20F2,r2107);
    real r2109#1 = RAdd(r2108,r20F6);
    real r210A#1 = RMul(realLit20FC,r20F1);
    real r210B#1 = RAdd(r210A,r20F4);
    real r210C#1 = RAdd(r210B,r20F6);
    tensor[3] tensor210D#1 = <tensor[3]>[r2109,r210C,r20F8];
    real vdot2130#4 = VDot<3>(op1_e3_l_420DD,tensor2100);
    real vdot2132#4 = VDot<3>(op1_e3_l_420DD,tensor2106);
    real vdot2134#4 = VDot<3>(op1_e3_l_420DD,tensor210D);
    tensor[3] op1_e3_l_17212E#3 = <tensor[3]>[vdot2130,vdot2132,vdot2134];
    real op1_e3_l_34213D#1 = VDot<3>(op1_e3_l_17212E,op1_e3_l_17212E);
    real r2141#1 = RMul(op1_e3_l_920E6,op1_e3_l_920E6);
    real op1_e3_l_352140#1 = RMul(r2141,op1_e3_l_34213D);
    real op1_e3_l_362145#1 = Sqrt(op1_e3_l_352140);
    tensor[3] op1_e3_l_372148#1 = VScale<3>(op1_e3_l_920E6,op1_e3_l_17212E);
    real op1_e3_l_38214B#2 = RDiv(realLit20E7,op1_e3_l_362145);
    tensor[3] camU2150#4 = VScale<3>(op1_e3_l_38214B,op1_e3_l_372148);
    globals.camU2044 = camU2150;
    real r2157#3 = RMul(realLit20F0,vdot2130);
    real r2159#3 = RMul(realLit20F0,vdot2132);
    real r215B#5 = RMul(realLit20F0,vdot2134);
    real r215C#3 = RAdd(r2157,r2159);
    real r215D#3 = RAdd(r215C,r215B);
    real r215F#1 = RMul(realLit20E7,vdot2134);
    real r2160#1 = RAdd(r215C,r215F);
    real r2162#1 = RMul(realLit20FC,vdot2132);
    real r2163#1 = RAdd(r2157,r2162);
    real r2164#1 = RAdd(r2163,r215B);
    tensor[3] tensor2165#1 = <tensor[3]>[r215D,r2160,r2164];
    real r2166#1 = RMul(realLit20FC,vdot2134);
    real r2167#1 = RAdd(r215C,r2166);
    real r2168#1 = RMul(realLit20E7,vdot2130);
    real r2169#1 = RAdd(r2168,r2159);
    real r216A#1 = RAdd(r2169,r215B);
    tensor[3] tensor216B#1 = <tensor[3]>[r2167,r215D,r216A];
    real r216C#1 = RMul(realLit20E7,vdot2132);
    real r216D#1 = RAdd(r2157,r216C);
    real r216E#1 = RAdd(r216D,r215B);
    real r216F#1 = RMul(realLit20FC,vdot2130);
    real r2170#1 = RAdd(r216F,r2159);
    real r2171#1 = RAdd(r2170,r215B);
    tensor[3] tensor2172#1 = <tensor[3]>[r216E,r2171,r215D];
    real vdot2195#1 = VDot<3>(op1_e3_l_420DD,tensor2165);
    real vdot2197#1 = VDot<3>(op1_e3_l_420DD,tensor216B);
    real vdot2199#1 = VDot<3>(op1_e3_l_420DD,tensor2172);
    tensor[3] op1_e3_l_472193#1 = <tensor[3]>[vdot2195,vdot2197,vdot2199];
    tensor[3] op1_e3_l_5021A2#3 = VScale<3>(op1_e3_l_920E6,op1_e3_l_472193);
    real r21A6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5021A2);
    real r21A7#3 = RMul(op1_e3_l_920E6,op1_e3_l_38214B);
    real r21A8#2 = RMul(r21A7,r21A6);
    real r21A9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5021A2);
    real r21AA#2 = RMul(r21A7,r21A9);
    real r21AB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5021A2);
    real r21AC#2 = RMul(r21A7,r21AB);
    tensor[3] camV21A5#1 = <tensor[3]>[r21A8,r21AA,r21AC];
    globals.camV2045 = camV21A5;
    globals.camDist2046 = op1_e3_l_720E3;
    real _t21B8#1 = 0.314159265358979323846264338327950288e1;
    real _t21BA#1 = 0.36e3;
    real op1_e3_l_521BC#1 = RMul(camFOV20AD,_t21B8);
    real op1_e3_l_621BF#1 = RDiv(op1_e3_l_521BC,_t21BA);
    real op1_e3_l_1021C2#2 = Tan(op1_e3_l_621BF);
    real camVmax21C5#1 = RMul(op1_e3_l_1021C2,op1_e3_l_720E3);
    globals.camVmax2047 = camVmax21C5;
    real _t21C9#1 = IntToReal(iresU20AF);
    real _t21CB#1 = IntToReal(iresV20B1);
    real r21CE#1 = RMul(_t21C9,op1_e3_l_1021C2);
    real op1_e3_l_1421CD#1 = RMul(r21CE,op1_e3_l_720E3);
    real camUmax21D2#1 = RDiv(op1_e3_l_1421CD,_t21CB);
    globals.camUmax2048 = camUmax21D2;
    real camNearVsp21D6#1 = RAdd(camNear20A9,op1_e3_l_720E3);
    globals.camNearVsp2049 = camNearVsp21D6;
    real camFarVsp21DA#1 = RAdd(camFar20AB,op1_e3_l_720E3);
    globals.camFarVsp204A = camFarVsp21DA;
    real op1_e3_l_321E0#1 = VDot<3>(litdir20B3,litdir20B3);
    real op1_e3_l_421E3#1 = Sqrt(op1_e3_l_321E0);
    real op1_e3_l_521E6#1 = RDiv(realLit20E7,op1_e3_l_421E3);
    real r21EC#1 = VIndex<3,0>(camU2150);
    real r21ED#3 = TensorIndex<tensor[3],[0]>(litdir20B3);
    real r21EE#1 = RMul(r21EC,r21ED);
    real r21F0#3 = TensorIndex<tensor[3],[1]>(litdir20B3);
    real r21F1#1 = RMul(r21A8,r21F0);
    real r21F2#1 = VIndex<3,0>(camN20EB);
    real r21F3#3 = TensorIndex<tensor[3],[2]>(litdir20B3);
    real r21F4#1 = RMul(r21F2,r21F3);
    real r21F5#1 = RAdd(r21EE,r21F1);
    real r21F6#1 = RAdd(r21F5,r21F4);
    real r21F7#1 = VIndex<3,1>(camU2150);
    real r21F8#1 = RMul(r21F7,r21ED);
    real r21FA#1 = RMul(r21AA,r21F0);
    real r21FB#1 = VIndex<3,1>(camN20EB);
    real r21FC#1 = RMul(r21FB,r21F3);
    real r21FD#1 = RAdd(r21F8,r21FA);
    real r21FE#1 = RAdd(r21FD,r21FC);
    real r21FF#1 = VIndex<3,2>(camU2150);
    real r2200#1 = RMul(r21FF,r21ED);
    real r2202#1 = RMul(r21AC,r21F0);
    real r2203#1 = VIndex<3,2>(camN20EB);
    real r2204#1 = RMul(r2203,r21F3);
    real r2205#1 = RAdd(r2200,r2202);
    real r2206#1 = RAdd(r2205,r2204);
    tensor[3] op1_e3_l_621EB#1 = <tensor[3]>[r21F6,r21FE,r2206];
    tensor[3] litwsp2224#1 = VScale<3>(op1_e3_l_521E6,op1_e3_l_621EB);
    globals.litwsp204B = litwsp2224;
    globals._t204C = _t20D7;
    globals._tX204D = _t20D5;
    globals._tXX204E = _t20D3;
    return
## strand
  strand ray (int ui222E#1, int vi222F#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2240:  preds = []
        tensor[3] camEye2241#1 = globals.camEye202C;
        bool camOrtho2243#2 = globals.camOrtho2032;
        int iresU2245#1 = globals.iresU2033;
        int iresV2247#1 = globals.iresV2034;
        real rayStep2249#1 = globals.rayStep2035;
        real refStep224B#1 = globals.refStep2036;
        tensor[4] phong224D#4 = globals.phong203E;
        tensor[3] camN224F#1 = globals.camN2043;
        tensor[3] camU2251#1 = globals.camU2044;
        tensor[3] camV2253#1 = globals.camV2045;
        real camDist2255#1 = globals.camDist2046;
        real camVmax2257#2 = globals.camVmax2047;
        real camUmax2259#2 = globals.camUmax2048;
        real camNearVsp225B#1 = globals.camNearVsp2049;
        real _t225D#4 = -0.5e0;
        real _t225F#1 = IntToReal(ui222E);
        real _t2261#1 = IntToReal(iresU2245);
        real _t2263#2 = 0.5e0;
        real op1_e3_l_62265#1 = RSub(_t2261,_t2263);
        real op1_e3_l_72268#1 = RSub(_t225F,_t225D);
        real op1_e3_l_8226B#1 = RSub(op1_e3_l_62265,_t225D);
        real op1_e3_l_9226E#2 = RNeg(camUmax2259);
        real op1_e3_l_102271#1 = RDiv(op1_e3_l_72268,op1_e3_l_8226B);
        real op1_e3_l_112274#1 = RSub(camUmax2259,op1_e3_l_9226E);
        real op1_e3_l_132277#1 = RMul(op1_e3_l_102271,op1_e3_l_112274);
        real rayU227A#2 = RAdd(op1_e3_l_9226E,op1_e3_l_132277);
        real _t227D#1 = IntToReal(vi222F);
        real _t227F#1 = IntToReal(iresV2247);
        real op1_e3_l_62281#1 = RSub(_t227F,_t2263);
        real op1_e3_l_72284#1 = RSub(_t227D,_t225D);
        real op1_e3_l_82287#1 = RSub(op1_e3_l_62281,_t225D);
        real op1_e3_l_9228A#2 = RNeg(camVmax2257);
        real op1_e3_l_10228D#1 = RDiv(op1_e3_l_72284,op1_e3_l_82287);
        real op1_e3_l_112290#1 = RSub(camVmax2257,op1_e3_l_9228A);
        real op1_e3_l_132293#1 = RMul(op1_e3_l_10228D,op1_e3_l_112290);
        real rayV2296#2 = RAdd(op1_e3_l_9228A,op1_e3_l_132293);
        tensor[3] op1_e3_l_3222A8#1 = VScale<3>(rayU227A,camU2251);
        tensor[3] op1_e3_l_3322AB#1 = VScale<3>(rayV2296,camV2253);
        tensor[3] UV22AE#5 = VAdd<3>(op1_e3_l_3222A8,op1_e3_l_3322AB);
        if camOrtho2243 then goto JOIN22B4 else goto ASSIGN230E
      JOIN22B4:  preds = [COND22B1,ASSIGN230F]
        tensor[3] _t22B2#1 = phi(UV22AE,_t22B3)
        tensor[3] rayOrig22B5#1 = VAdd<3>(camEye2241,_t22B2);
        if camOrtho2243 then goto ASSIGN22BA else goto ASSIGN2304
      ASSIGN22BA:  preds = [COND22B8]
        real _t22B9#3 = 0.e0;
        tensor[3] _t22BB#1 = <tensor[3]>[_t22B9,_t22B9,_t22B9];
        goto JOIN22BF
      JOIN22BF:  preds = [ASSIGN22BC,ASSIGN230C]
        tensor[3] _t22BD#1 = phi(_t22BB,_t22BE)
        tensor[3] rayVec22C0#4 = VAdd<3>(camN224F,_t22BD);
        real op1_e3_l_622C3#1 = VDot<3>(rayVec22C0,rayVec22C0);
        real op1_e3_l_722C6#2 = Sqrt(op1_e3_l_622C3);
        real op1_e3_l_822C9#1 = RMul(rayStep2249,op1_e3_l_722C6);
        real alphaFix22CC#1 = RDiv(op1_e3_l_822C9,refStep224B);
        real realLit22D0#2 = 0.1e1;
        real op1_e3_l_922CF#1 = RDiv(realLit22D0,op1_e3_l_722C6);
        tensor[3] op1_e3_l_1022D4#1 = VScale<3>(op1_e3_l_922CF,rayVec22C0);
        tensor[3] eyeDir22D7#1 = VNeg<3>(op1_e3_l_1022D4);
        real phKa22DA#1 = VIndex<4,0>(phong224D);
        real phKd22DC#1 = VIndex<4,1>(phong224D);
        real phKs22DE#1 = VIndex<4,2>(phong224D);
        real phSp22E0#1 = VIndex<4,3>(phong224D);
        real _t22E2#8 = 0.e0;
        tensor[4] rgba22E4#1 = <tensor[4]>[_t22E2,_t22E2,_t22E2,_t22E2];
        tensor[3] rgb22E6#1 = <tensor[3]>[_t22E2,_t22E2,_t22E2];
        self.rayU = rayU227A;
        self.rayV = rayV2296;
        self.rayN = camNearVsp225B;
        self.UV = UV22AE;
        self.rayOrig = rayOrig22B5;
        self.rayVec = rayVec22C0;
        self.alphaFix = alphaFix22CC;
        self.eyeDir = eyeDir22D7;
        self.phKa = phKa22DA;
        self.phKd = phKd22DC;
        self.phKs = phKs22DE;
        self.phSp = phSp22E0;
        self.rgba = rgba22E4;
        self.raw = _t22E2;
        self.rgb = rgb22E6;
        self.transp = realLit22D0;
        return
      ASSIGN2304:  preds = [COND22B8]
        real realLit22FB#1 = 0.1e1;
        real r22FC#3 = RDiv(realLit22FB,camDist2255);
        real r22FD#1 = TensorIndex<tensor[3],[0]>(UV22AE);
        real r22FE#1 = RMul(r22FC,r22FD);
        real r22FF#1 = TensorIndex<tensor[3],[1]>(UV22AE);
        real r2300#1 = RMul(r22FC,r22FF);
        real r2301#1 = TensorIndex<tensor[3],[2]>(UV22AE);
        real r2302#1 = RMul(r22FC,r2301);
        tensor[3] _t22BE#1 = <tensor[3]>[r22FE,r2300,r2302];
        goto JOIN22BF
      ASSIGN230E:  preds = [COND22B1]
        real _t230D#3 = 0.e0;
        tensor[3] _t22B3#1 = <tensor[3]>[_t230D,_t230D,_t230D];
        goto JOIN22B4
    end state init
    method update
        ENTRY2310:  preds = []
          image(IMAGE1D<double[3]>) cmap2311#17 = globals.cmap202B;
          int _t2313#2 = globals._t204C;
          femData:Space _t2315#168 = globals._tX204D;
          femData:FemFunc _t2317#168 = globals._tXX204E;
          femData:Mesh block231D#1 = globals.block2027;
          real rayStep231F#1 = globals.rayStep2035;
          real transp02321#1 = globals.transp02037;
          real thick2323#1 = globals.thick2038;
          real fStrTh2325#1 = globals.fStrTh2039;
          real fMaskTh2327#1 = globals.fMaskTh203A;
          real fBias2329#1 = globals.fBias203B;
          real maxAlpha232B#1 = globals.maxAlpha203C;
          tensor[3] mcNear232D#2 = globals.mcNear203F;
          tensor[3] mcFar232F#1 = globals.mcFar2040;
          tensor[2] cminmax2331#2 = globals.cminmax2042;
          real camNearVsp2333#2 = globals.camNearVsp2049;
          real camFarVsp2335#2 = globals.camFarVsp204A;
          tensor[3] litwsp2337#2 = globals.litwsp204B;
          real rayN2339#1 = self.rayN;
          tensor[3] rayOrig233B#1 = self.rayOrig;
          tensor[3] rayVec233D#1 = self.rayVec;
          real alphaFix233F#1 = self.alphaFix;
          tensor[3] eyeDir2341#1 = self.eyeDir;
          real phKa2343#1 = self.phKa;
          real phKd2345#1 = self.phKd;
          real phKs2347#2 = self.phKs;
          real phSp2349#1 = self.phSp;
          tensor[3] rgb234B#1 = self.rgb;
          real transp234D#2 = self.transp;
          real rayN234F#8 = RAdd(rayN2339,rayStep231F);
          bool _t2352#1 = GT<real>(rayN234F,camFarVsp2335);
          if _t2352 then goto SAVE2355 else goto JOIN2357
        SAVE2355:  preds = [COND2354]
          self.rayN = rayN234F;
          stabilize
          goto JOIN2357
        JOIN2357:  preds = [*STABILIZE2356,COND2354]
          tensor[3] op1_e3_l_52358#1 = VScale<3>(rayN234F,rayVec233D);
          tensor[3] pos235B#8 = VAdd<3>(rayOrig233B,op1_e3_l_52358);
          femData:RefCell _t235E#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block231D);
          real _t2360#1 = 0.1e-8;
          bool _t2362#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t235E,pos235B,_t2360);
          if _t2362 then goto ASSIGN2465 else goto ASSIGN389B
        ASSIGN2465:  preds = [COND2364]
          int ilit2366#1 = 84;
          int mulRes2367#84 = IMul(_t2313,ilit2366);
          int idx236A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,mulRes2367);
          int ilit236B#86 = 1;
          int addRes236C#1 = IAdd(mulRes2367,ilit236B);
          int idx236D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236C);
          int ilit236E#1 = 2;
          int addRes236F#1 = IAdd(mulRes2367,ilit236E);
          int idx2370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236F);
          int ilit2371#1 = 3;
          int addRes2372#1 = IAdd(mulRes2367,ilit2371);
          int idx2373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2372);
          int ilit2374#1 = 4;
          int addRes2375#1 = IAdd(mulRes2367,ilit2374);
          int idx2376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2375);
          int ilit2377#1 = 5;
          int addRes2378#1 = IAdd(mulRes2367,ilit2377);
          int idx2379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2378);
          int ilit237A#1 = 6;
          int addRes237B#1 = IAdd(mulRes2367,ilit237A);
          int idx237C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237B);
          int ilit237D#1 = 7;
          int addRes237E#1 = IAdd(mulRes2367,ilit237D);
          int idx237F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237E);
          int ilit2380#1 = 8;
          int addRes2381#1 = IAdd(mulRes2367,ilit2380);
          int idx2382#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2381);
          int ilit2383#1 = 9;
          int addRes2384#1 = IAdd(mulRes2367,ilit2383);
          int idx2385#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2384);
          int ilit2386#1 = 10;
          int addRes2387#1 = IAdd(mulRes2367,ilit2386);
          int idx2388#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2387);
          int ilit2389#1 = 11;
          int addRes238A#1 = IAdd(mulRes2367,ilit2389);
          int idx238B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238A);
          int ilit238C#1 = 12;
          int addRes238D#1 = IAdd(mulRes2367,ilit238C);
          int idx238E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238D);
          int ilit238F#1 = 13;
          int addRes2390#1 = IAdd(mulRes2367,ilit238F);
          int idx2391#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2390);
          int ilit2392#1 = 14;
          int addRes2393#1 = IAdd(mulRes2367,ilit2392);
          int idx2394#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2393);
          int ilit2395#1 = 15;
          int addRes2396#1 = IAdd(mulRes2367,ilit2395);
          int idx2397#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2396);
          int ilit2398#1 = 16;
          int addRes2399#1 = IAdd(mulRes2367,ilit2398);
          int idx239A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2399);
          int ilit239B#1 = 17;
          int addRes239C#1 = IAdd(mulRes2367,ilit239B);
          int idx239D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239C);
          int ilit239E#1 = 18;
          int addRes239F#1 = IAdd(mulRes2367,ilit239E);
          int idx23A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239F);
          int ilit23A1#1 = 19;
          int addRes23A2#1 = IAdd(mulRes2367,ilit23A1);
          int idx23A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A2);
          int ilit23A4#1 = 20;
          int addRes23A5#1 = IAdd(mulRes2367,ilit23A4);
          int idx23A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A5);
          int ilit23A7#1 = 21;
          int addRes23A8#1 = IAdd(mulRes2367,ilit23A7);
          int idx23A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A8);
          int ilit23AA#1 = 22;
          int addRes23AB#1 = IAdd(mulRes2367,ilit23AA);
          int idx23AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AB);
          int ilit23AD#1 = 23;
          int addRes23AE#1 = IAdd(mulRes2367,ilit23AD);
          int idx23AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AE);
          int ilit23B0#1 = 24;
          int addRes23B1#1 = IAdd(mulRes2367,ilit23B0);
          int idx23B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B1);
          int ilit23B3#1 = 25;
          int addRes23B4#1 = IAdd(mulRes2367,ilit23B3);
          int idx23B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B4);
          int ilit23B6#1 = 26;
          int addRes23B7#1 = IAdd(mulRes2367,ilit23B6);
          int idx23B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B7);
          int ilit23B9#1 = 27;
          int addRes23BA#1 = IAdd(mulRes2367,ilit23B9);
          int idx23BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BA);
          int ilit23BC#1 = 28;
          int addRes23BD#1 = IAdd(mulRes2367,ilit23BC);
          int idx23BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BD);
          int ilit23BF#1 = 29;
          int addRes23C0#1 = IAdd(mulRes2367,ilit23BF);
          int idx23C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C0);
          int ilit23C2#1 = 30;
          int addRes23C3#1 = IAdd(mulRes2367,ilit23C2);
          int idx23C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C3);
          int ilit23C5#1 = 31;
          int addRes23C6#1 = IAdd(mulRes2367,ilit23C5);
          int idx23C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C6);
          int ilit23C8#1 = 32;
          int addRes23C9#1 = IAdd(mulRes2367,ilit23C8);
          int idx23CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C9);
          int ilit23CB#1 = 33;
          int addRes23CC#1 = IAdd(mulRes2367,ilit23CB);
          int idx23CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CC);
          int ilit23CE#1 = 34;
          int addRes23CF#1 = IAdd(mulRes2367,ilit23CE);
          int idx23D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CF);
          int ilit23D1#1 = 35;
          int addRes23D2#1 = IAdd(mulRes2367,ilit23D1);
          int idx23D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D2);
          int ilit23D4#1 = 36;
          int addRes23D5#1 = IAdd(mulRes2367,ilit23D4);
          int idx23D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D5);
          int ilit23D7#1 = 37;
          int addRes23D8#1 = IAdd(mulRes2367,ilit23D7);
          int idx23D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D8);
          int ilit23DA#1 = 38;
          int addRes23DB#1 = IAdd(mulRes2367,ilit23DA);
          int idx23DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DB);
          int ilit23DD#1 = 39;
          int addRes23DE#1 = IAdd(mulRes2367,ilit23DD);
          int idx23DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DE);
          int ilit23E0#1 = 40;
          int addRes23E1#1 = IAdd(mulRes2367,ilit23E0);
          int idx23E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E1);
          int ilit23E3#1 = 41;
          int addRes23E4#1 = IAdd(mulRes2367,ilit23E3);
          int idx23E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E4);
          int ilit23E6#1 = 42;
          int addRes23E7#1 = IAdd(mulRes2367,ilit23E6);
          int idx23E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E7);
          int ilit23E9#1 = 43;
          int addRes23EA#1 = IAdd(mulRes2367,ilit23E9);
          int idx23EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23EA);
          int ilit23EC#1 = 44;
          int addRes23ED#1 = IAdd(mulRes2367,ilit23EC);
          int idx23EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23ED);
          int ilit23EF#1 = 45;
          int addRes23F0#1 = IAdd(mulRes2367,ilit23EF);
          int idx23F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F0);
          int ilit23F2#1 = 46;
          int addRes23F3#1 = IAdd(mulRes2367,ilit23F2);
          int idx23F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F3);
          int ilit23F5#1 = 47;
          int addRes23F6#1 = IAdd(mulRes2367,ilit23F5);
          int idx23F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F6);
          int ilit23F8#1 = 48;
          int addRes23F9#1 = IAdd(mulRes2367,ilit23F8);
          int idx23FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F9);
          int ilit23FB#1 = 49;
          int addRes23FC#1 = IAdd(mulRes2367,ilit23FB);
          int idx23FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FC);
          int ilit23FE#1 = 50;
          int addRes23FF#1 = IAdd(mulRes2367,ilit23FE);
          int idx2400#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FF);
          int ilit2401#1 = 51;
          int addRes2402#1 = IAdd(mulRes2367,ilit2401);
          int idx2403#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2402);
          int ilit2404#1 = 52;
          int addRes2405#1 = IAdd(mulRes2367,ilit2404);
          int idx2406#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2405);
          int ilit2407#1 = 53;
          int addRes2408#1 = IAdd(mulRes2367,ilit2407);
          int idx2409#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2408);
          int ilit240A#1 = 54;
          int addRes240B#1 = IAdd(mulRes2367,ilit240A);
          int idx240C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240B);
          int ilit240D#1 = 55;
          int addRes240E#1 = IAdd(mulRes2367,ilit240D);
          int idx240F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240E);
          int ilit2410#1 = 56;
          int addRes2411#1 = IAdd(mulRes2367,ilit2410);
          int idx2412#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2411);
          int ilit2413#1 = 57;
          int addRes2414#1 = IAdd(mulRes2367,ilit2413);
          int idx2415#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2414);
          int ilit2416#1 = 58;
          int addRes2417#1 = IAdd(mulRes2367,ilit2416);
          int idx2418#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2417);
          int ilit2419#1 = 59;
          int addRes241A#1 = IAdd(mulRes2367,ilit2419);
          int idx241B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241A);
          int ilit241C#1 = 60;
          int addRes241D#1 = IAdd(mulRes2367,ilit241C);
          int idx241E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241D);
          int ilit241F#1 = 61;
          int addRes2420#1 = IAdd(mulRes2367,ilit241F);
          int idx2421#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2420);
          int ilit2422#1 = 62;
          int addRes2423#1 = IAdd(mulRes2367,ilit2422);
          int idx2424#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2423);
          int ilit2425#1 = 63;
          int addRes2426#1 = IAdd(mulRes2367,ilit2425);
          int idx2427#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2426);
          int ilit2428#1 = 64;
          int addRes2429#1 = IAdd(mulRes2367,ilit2428);
          int idx242A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2429);
          int ilit242B#1 = 65;
          int addRes242C#1 = IAdd(mulRes2367,ilit242B);
          int idx242D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242C);
          int ilit242E#1 = 66;
          int addRes242F#1 = IAdd(mulRes2367,ilit242E);
          int idx2430#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242F);
          int ilit2431#1 = 67;
          int addRes2432#1 = IAdd(mulRes2367,ilit2431);
          int idx2433#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2432);
          int ilit2434#1 = 68;
          int addRes2435#1 = IAdd(mulRes2367,ilit2434);
          int idx2436#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2435);
          int ilit2437#1 = 69;
          int addRes2438#1 = IAdd(mulRes2367,ilit2437);
          int idx2439#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2438);
          int ilit243A#1 = 70;
          int addRes243B#1 = IAdd(mulRes2367,ilit243A);
          int idx243C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243B);
          int ilit243D#1 = 71;
          int addRes243E#1 = IAdd(mulRes2367,ilit243D);
          int idx243F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243E);
          int ilit2440#1 = 72;
          int addRes2441#1 = IAdd(mulRes2367,ilit2440);
          int idx2442#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2441);
          int ilit2443#1 = 73;
          int addRes2444#1 = IAdd(mulRes2367,ilit2443);
          int idx2445#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2444);
          int ilit2446#1 = 74;
          int addRes2447#1 = IAdd(mulRes2367,ilit2446);
          int idx2448#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2447);
          int ilit2449#1 = 75;
          int addRes244A#1 = IAdd(mulRes2367,ilit2449);
          int idx244B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244A);
          int ilit244C#1 = 76;
          int addRes244D#1 = IAdd(mulRes2367,ilit244C);
          int idx244E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244D);
          int ilit244F#1 = 77;
          int addRes2450#1 = IAdd(mulRes2367,ilit244F);
          int idx2451#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2450);
          int ilit2452#1 = 78;
          int addRes2453#1 = IAdd(mulRes2367,ilit2452);
          int idx2454#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2453);
          int ilit2455#1 = 79;
          int addRes2456#1 = IAdd(mulRes2367,ilit2455);
          int idx2457#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2456);
          int ilit2458#1 = 80;
          int addRes2459#1 = IAdd(mulRes2367,ilit2458);
          int idx245A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2459);
          int ilit245B#1 = 81;
          int addRes245C#1 = IAdd(mulRes2367,ilit245B);
          int idx245D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245C);
          int ilit245E#1 = 82;
          int addRes245F#1 = IAdd(mulRes2367,ilit245E);
          int idx2460#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245F);
          int ilit2461#1 = 83;
          int addRes2462#1 = IAdd(mulRes2367,ilit2461);
          int idx2463#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2462);
          int mulRes2569#1 = IMul(ilit236B,idx236A);
          int mulRes256B#1 = IMul(ilit236B,idx236D);
          int mulRes256E#1 = IMul(ilit236B,idx2370);
          int mulRes2571#1 = IMul(ilit236B,idx2373);
          int mulRes2574#1 = IMul(ilit236B,idx2376);
          int mulRes2577#1 = IMul(ilit236B,idx2379);
          int mulRes257A#1 = IMul(ilit236B,idx237C);
          int mulRes257D#1 = IMul(ilit236B,idx237F);
          int mulRes2580#1 = IMul(ilit236B,idx2382);
          int mulRes2583#1 = IMul(ilit236B,idx2385);
          int mulRes2586#1 = IMul(ilit236B,idx2388);
          int mulRes2589#1 = IMul(ilit236B,idx238B);
          int mulRes258C#1 = IMul(ilit236B,idx238E);
          int mulRes258F#1 = IMul(ilit236B,idx2391);
          int mulRes2592#1 = IMul(ilit236B,idx2394);
          int mulRes2595#1 = IMul(ilit236B,idx2397);
          int mulRes2598#1 = IMul(ilit236B,idx239A);
          int mulRes259B#1 = IMul(ilit236B,idx239D);
          int mulRes259E#1 = IMul(ilit236B,idx23A0);
          int mulRes25A1#1 = IMul(ilit236B,idx23A3);
          int mulRes25A4#1 = IMul(ilit236B,idx23A6);
          int mulRes25A7#1 = IMul(ilit236B,idx23A9);
          int mulRes25AA#1 = IMul(ilit236B,idx23AC);
          int mulRes25AD#1 = IMul(ilit236B,idx23AF);
          int mulRes25B0#1 = IMul(ilit236B,idx23B2);
          int mulRes25B3#1 = IMul(ilit236B,idx23B5);
          int mulRes25B6#1 = IMul(ilit236B,idx23B8);
          int mulRes25B9#1 = IMul(ilit236B,idx23BB);
          int mulRes25BC#1 = IMul(ilit236B,idx23BE);
          int mulRes25BF#1 = IMul(ilit236B,idx23C1);
          int mulRes25C2#1 = IMul(ilit236B,idx23C4);
          int mulRes25C5#1 = IMul(ilit236B,idx23C7);
          int mulRes25C8#1 = IMul(ilit236B,idx23CA);
          int mulRes25CB#1 = IMul(ilit236B,idx23CD);
          int mulRes25CE#1 = IMul(ilit236B,idx23D0);
          int mulRes25D1#1 = IMul(ilit236B,idx23D3);
          int mulRes25D4#1 = IMul(ilit236B,idx23D6);
          int mulRes25D7#1 = IMul(ilit236B,idx23D9);
          int mulRes25DA#1 = IMul(ilit236B,idx23DC);
          int mulRes25DD#1 = IMul(ilit236B,idx23DF);
          int mulRes25E0#1 = IMul(ilit236B,idx23E2);
          int mulRes25E3#1 = IMul(ilit236B,idx23E5);
          int mulRes25E6#1 = IMul(ilit236B,idx23E8);
          int mulRes25E9#1 = IMul(ilit236B,idx23EB);
          int mulRes25EC#1 = IMul(ilit236B,idx23EE);
          int mulRes25EF#1 = IMul(ilit236B,idx23F1);
          int mulRes25F2#1 = IMul(ilit236B,idx23F4);
          int mulRes25F5#1 = IMul(ilit236B,idx23F7);
          int mulRes25F8#1 = IMul(ilit236B,idx23FA);
          int mulRes25FB#1 = IMul(ilit236B,idx23FD);
          int mulRes25FE#1 = IMul(ilit236B,idx2400);
          int mulRes2601#1 = IMul(ilit236B,idx2403);
          int mulRes2604#1 = IMul(ilit236B,idx2406);
          int mulRes2607#1 = IMul(ilit236B,idx2409);
          int mulRes260A#1 = IMul(ilit236B,idx240C);
          int mulRes260D#1 = IMul(ilit236B,idx240F);
          int mulRes2610#1 = IMul(ilit236B,idx2412);
          int mulRes2613#1 = IMul(ilit236B,idx2415);
          int mulRes2616#1 = IMul(ilit236B,idx2418);
          int mulRes2619#1 = IMul(ilit236B,idx241B);
          int mulRes261C#1 = IMul(ilit236B,idx241E);
          int mulRes261F#1 = IMul(ilit236B,idx2421);
          int mulRes2622#1 = IMul(ilit236B,idx2424);
          int mulRes2625#1 = IMul(ilit236B,idx2427);
          int mulRes2628#1 = IMul(ilit236B,idx242A);
          int mulRes262B#1 = IMul(ilit236B,idx242D);
          int mulRes262E#1 = IMul(ilit236B,idx2430);
          int mulRes2631#1 = IMul(ilit236B,idx2433);
          int mulRes2634#1 = IMul(ilit236B,idx2436);
          int mulRes2637#1 = IMul(ilit236B,idx2439);
          int mulRes263A#1 = IMul(ilit236B,idx243C);
          int mulRes263D#1 = IMul(ilit236B,idx243F);
          int mulRes2640#1 = IMul(ilit236B,idx2442);
          int mulRes2643#1 = IMul(ilit236B,idx2445);
          int mulRes2646#1 = IMul(ilit236B,idx2448);
          int mulRes2649#1 = IMul(ilit236B,idx244B);
          int mulRes264C#1 = IMul(ilit236B,idx244E);
          int mulRes264F#1 = IMul(ilit236B,idx2451);
          int mulRes2652#1 = IMul(ilit236B,idx2454);
          int mulRes2655#1 = IMul(ilit236B,idx2457);
          int mulRes2658#1 = IMul(ilit236B,idx245A);
          int mulRes265B#1 = IMul(ilit236B,idx245D);
          int mulRes265E#1 = IMul(ilit236B,idx2460);
          int mulRes2661#1 = IMul(ilit236B,idx2463);
          real dof2662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2569);
          real dof2663#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256B);
          real dof2664#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256E);
          real dof2665#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2571);
          real dof2666#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2574);
          real dof2667#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2577);
          real dof2668#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257A);
          real dof2669#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257D);
          real dof266A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2580);
          real dof266B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2583);
          real dof266C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2586);
          real dof266D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2589);
          real dof266E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258C);
          real dof266F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258F);
          real dof2670#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2592);
          real dof2671#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2595);
          real dof2672#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2598);
          real dof2673#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259B);
          real dof2674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259E);
          real dof2675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A1);
          real dof2676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A4);
          real dof2677#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A7);
          real dof2678#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AA);
          real dof2679#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AD);
          real dof267A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B0);
          real dof267B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B3);
          real dof267C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B6);
          real dof267D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B9);
          real dof267E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BC);
          real dof267F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BF);
          real dof2680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C2);
          real dof2681#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C5);
          real dof2682#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C8);
          real dof2683#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CB);
          real dof2684#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CE);
          real dof2685#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D1);
          real dof2686#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D4);
          real dof2687#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D7);
          real dof2688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DA);
          real dof2689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DD);
          real dof268A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E0);
          real dof268B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E3);
          real dof268C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E6);
          real dof268D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E9);
          real dof268E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EC);
          real dof268F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EF);
          real dof2690#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F2);
          real dof2691#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F5);
          real dof2692#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F8);
          real dof2693#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FB);
          real dof2694#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FE);
          real dof2695#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2601);
          real dof2696#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2604);
          real dof2697#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2607);
          real dof2698#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260A);
          real dof2699#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260D);
          real dof269A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2610);
          real dof269B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2613);
          real dof269C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2616);
          real dof269D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2619);
          real dof269E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261C);
          real dof269F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261F);
          real dof26A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2622);
          real dof26A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2625);
          real dof26A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2628);
          real dof26A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262B);
          real dof26A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262E);
          real dof26A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2631);
          real dof26A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2634);
          real dof26A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2637);
          real dof26A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263A);
          real dof26A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263D);
          real dof26AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2640);
          real dof26AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2643);
          real dof26AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2646);
          real dof26AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2649);
          real dof26AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264C);
          real dof26AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264F);
          real dof26B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2652);
          real dof26B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2655);
          real dof26B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2658);
          real dof26B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265B);
          real dof26B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265E);
          real dof26B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2661);
          tensor[84] dofs26B6#9 = <tensor[84]>[dof2662,dof2663,dof2664,dof2665,dof2666,dof2667,dof2668,dof2669,dof266A,dof266B,dof266C,dof266D,dof266E,dof266F,dof2670,dof2671,dof2672,dof2673,dof2674,dof2675,dof2676,dof2677,dof2678,dof2679,dof267A,dof267B,dof267C,dof267D,dof267E,dof267F,dof2680,dof2681,dof2682,dof2683,dof2684,dof2685,dof2686,dof2687,dof2688,dof2689,dof268A,dof268B,dof268C,dof268D,dof268E,dof268F,dof2690,dof2691,dof2692,dof2693,dof2694,dof2695,dof2696,dof2697,dof2698,dof2699,dof269A,dof269B,dof269C,dof269D,dof269E,dof269F,dof26A0,dof26A1,dof26A2,dof26A3,dof26A4,dof26A5,dof26A6,dof26A7,dof26A8,dof26A9,dof26AA,dof26AB,dof26AC,dof26AD,dof26AE,dof26AF,dof26B0,dof26B1,dof26B2,dof26B3,dof26B4,dof26B5];
          real varAcc280A#20 = VIndex<3,0>(pos235B);
          real varAcc280B#10 = VIndex<3,1>(pos235B);
          real varAcc280C#10 = VIndex<3,2>(pos235B);
          real basisEval280D#378 = 0.e0;
          real coeff280E#47 = 0.2e1;
          real one280F#80 = 0.1e1;
          real prod2810#6 = RMul(one280F,one280F);
          real prod2811#2 = RMul(one280F,prod2810);
          real basisEval2812#3 = RMul(coeff280E,prod2811);
          real prod2814#5 = RMul(one280F,varAcc280C);
          real prod2815#3 = RMul(one280F,prod2814);
          real basisEval2816#5 = RMul(coeff280E,prod2815);
          real prod2818#5 = RMul(varAcc280B,one280F);
          real prod2819#3 = RMul(one280F,prod2818);
          real basisEval281A#5 = RMul(coeff280E,prod2819);
          real coeff281B#25 = 0.6e1;
          real prod281D#3 = RMul(varAcc280A,prod2810);
          real basisEval281E#1 = RMul(coeff281B,prod281D);
          real prod2281F#5 = RMul(varAcc280C,varAcc280C);
          real prod2820#4 = RMul(one280F,prod2281F);
          real prod2821#4 = RMul(one280F,prod2820);
          real basisEval2822#2 = RMul(coeff280E,prod2821);
          real prod2823#4 = RMul(varAcc280B,varAcc280C);
          real prod2824#4 = RMul(one280F,prod2823);
          real basisEval2825#5 = RMul(coeff280E,prod2824);
          real prod22826#5 = RMul(varAcc280B,varAcc280B);
          real prod2827#4 = RMul(prod22826,one280F);
          real prod2828#4 = RMul(one280F,prod2827);
          real basisEval2829#2 = RMul(coeff280E,prod2828);
          real prod282A#4 = RMul(varAcc280A,prod2814);
          real basisEval282B#2 = RMul(coeff281B,prod282A);
          real prod282C#4 = RMul(varAcc280A,prod2818);
          real basisEval282D#2 = RMul(coeff281B,prod282C);
          real coeff282E#15 = 0.12e2;
          real prod2282F#11 = RMul(varAcc280A,varAcc280A);
          real prod2830#4 = RMul(prod2282F,prod2810);
          real basisEval2831#1 = RMul(coeff282E,prod2830);
          real prod32832#4 = RMul(prod2281F,varAcc280C);
          real prod2833#3 = RMul(one280F,prod32832);
          real prod2834#4 = RMul(one280F,prod2833);
          real basisEval2835#2 = RMul(coeff280E,prod2834);
          real prod2836#3 = RMul(varAcc280B,prod2281F);
          real prod2837#5 = RMul(one280F,prod2836);
          real basisEval2838#3 = RMul(coeff280E,prod2837);
          real prod2839#3 = RMul(prod22826,varAcc280C);
          real prod283A#5 = RMul(one280F,prod2839);
          real basisEval283B#3 = RMul(coeff280E,prod283A);
          real prod3283C#4 = RMul(prod22826,varAcc280B);
          real prod283D#3 = RMul(prod3283C,one280F);
          real prod283E#4 = RMul(one280F,prod283D);
          real basisEval283F#2 = RMul(coeff280E,prod283E);
          real prod2840#5 = RMul(varAcc280A,prod2820);
          real basisEval2841#2 = RMul(coeff281B,prod2840);
          real prod2842#3 = RMul(varAcc280A,prod2823);
          real basisEval2843#3 = RMul(coeff281B,prod2842);
          real prod2844#5 = RMul(varAcc280A,prod2827);
          real basisEval2845#2 = RMul(coeff281B,prod2844);
          real prod2846#5 = RMul(prod2282F,prod2814);
          real basisEval2847#1 = RMul(coeff282E,prod2846);
          real prod2848#5 = RMul(prod2282F,prod2818);
          real basisEval2849#1 = RMul(coeff282E,prod2848);
          real coeff284A#9 = 0.20e2;
          real prod3284B#7 = RMul(prod2282F,varAcc280A);
          real prod284C#4 = RMul(prod3284B,prod2810);
          real basisEval284D#1 = RMul(coeff284A,prod284C);
          real prod4284E#3 = RMul(prod32832,varAcc280C);
          real prod284F#2 = RMul(one280F,prod4284E);
          real prod2850#4 = RMul(one280F,prod284F);
          real basisEval2851#2 = RMul(coeff280E,prod2850);
          real prod2852#2 = RMul(varAcc280B,prod32832);
          real prod2853#6 = RMul(one280F,prod2852);
          real basisEval2854#3 = RMul(coeff280E,prod2853);
          real prod2855#2 = RMul(prod22826,prod2281F);
          real prod2856#5 = RMul(one280F,prod2855);
          real basisEval2857#1 = RMul(coeff280E,prod2856);
          real prod2858#2 = RMul(prod3283C,varAcc280C);
          real prod2859#6 = RMul(one280F,prod2858);
          real basisEval285A#3 = RMul(coeff280E,prod2859);
          real prod4285B#3 = RMul(prod3283C,varAcc280B);
          real prod285C#2 = RMul(prod4285B,one280F);
          real prod285D#4 = RMul(one280F,prod285C);
          real basisEval285E#2 = RMul(coeff280E,prod285D);
          real prod285F#6 = RMul(varAcc280A,prod2833);
          real basisEval2860#1 = RMul(coeff281B,prod285F);
          real prod2861#5 = RMul(varAcc280A,prod2836);
          real basisEval2862#4 = RMul(coeff281B,prod2861);
          real prod2863#5 = RMul(varAcc280A,prod2839);
          real basisEval2864#4 = RMul(coeff281B,prod2863);
          real prod2865#6 = RMul(varAcc280A,prod283D);
          real basisEval2866#1 = RMul(coeff281B,prod2865);
          real prod2867#5 = RMul(prod2282F,prod2820);
          real basisEval2868#2 = RMul(coeff282E,prod2867);
          real prod2869#5 = RMul(prod2282F,prod2823);
          real basisEval286A#1 = RMul(coeff282E,prod2869);
          real prod286B#5 = RMul(prod2282F,prod2827);
          real basisEval286C#2 = RMul(coeff282E,prod286B);
          real prod286D#6 = RMul(prod3284B,prod2814);
          real basisEval286E#1 = RMul(coeff284A,prod286D);
          real prod286F#6 = RMul(prod3284B,prod2818);
          real basisEval2870#1 = RMul(coeff284A,prod286F);
          real coeff2871#3 = 0.30e2;
          real prod42872#4 = RMul(prod3284B,varAcc280A);
          real prod2873#4 = RMul(prod42872,prod2810);
          real basisEval2874#1 = RMul(coeff2871,prod2873);
          real basisEval2875#6 = RMul(one280F,prod2811);
          real basisEval2876#3 = RMul(one280F,prod2815);
          real basisEval2877#5 = RMul(coeff280E,prod281D);
          real basisEval2878#3 = RMul(one280F,prod2821);
          real coeff2879#24 = 0.3e1;
          real basisEval287A#3 = RMul(coeff2879,prod2828);
          real basisEval287B#5 = RMul(coeff280E,prod282A);
          real coeff287C#25 = 0.4e1;
          real basisEval287D#1 = RMul(coeff287C,prod282C);
          real basisEval287E#3 = RMul(coeff2879,prod2830);
          real basisEval287F#3 = RMul(one280F,prod2834);
          real basisEval2880#2 = RMul(coeff2879,prod283A);
          real basisEval2881#3 = RMul(coeff287C,prod283E);
          real basisEval2882#3 = RMul(coeff280E,prod2840);
          real basisEval2883#3 = RMul(coeff287C,prod2842);
          real basisEval2884#2 = RMul(coeff2879,prod2846);
          real basisEval2885#2 = RMul(coeff281B,prod2848);
          real basisEval2886#3 = RMul(coeff287C,prod284C);
          real basisEval2887#3 = RMul(one280F,prod2850);
          real basisEval2888#4 = RMul(coeff2879,prod2856);
          real basisEval2889#2 = RMul(coeff287C,prod2859);
          real coeff288A#9 = 0.5e1;
          real basisEval288B#3 = RMul(coeff288A,prod285D);
          real basisEval288C#3 = RMul(coeff280E,prod285F);
          real basisEval288D#1 = RMul(coeff287C,prod2861);
          real coeff288E#6 = 0.8e1;
          real basisEval288F#1 = RMul(coeff288E,prod2865);
          real basisEval2890#4 = RMul(coeff2879,prod2867);
          real basisEval2891#4 = RMul(coeff281B,prod2869);
          real coeff2892#3 = 0.9e1;
          real basisEval2893#1 = RMul(coeff2892,prod286B);
          real basisEval2894#2 = RMul(coeff287C,prod286D);
          real basisEval2895#1 = RMul(coeff288E,prod286F);
          real basisEval2896#3 = RMul(coeff288A,prod2873);
          real basisEval2897#3 = RMul(one280F,prod2819);
          real basisEval2898#3 = RMul(coeff2879,prod2821);
          real basisEval2899#3 = RMul(one280F,prod2828);
          real basisEval289A#1 = RMul(coeff287C,prod282A);
          real basisEval289B#5 = RMul(coeff280E,prod282C);
          real basisEval289C#3 = RMul(coeff287C,prod2834);
          real basisEval289D#2 = RMul(coeff2879,prod2837);
          real basisEval289E#3 = RMul(one280F,prod283E);
          real basisEval289F#3 = RMul(coeff280E,prod2844);
          real basisEval28A0#2 = RMul(coeff281B,prod2846);
          real basisEval28A1#2 = RMul(coeff2879,prod2848);
          real basisEval28A2#3 = RMul(coeff288A,prod2850);
          real basisEval28A3#2 = RMul(coeff287C,prod2853);
          real basisEval28A4#3 = RMul(one280F,prod285D);
          real basisEval28A5#1 = RMul(coeff288E,prod285F);
          real basisEval28A6#1 = RMul(coeff287C,prod2863);
          real basisEval28A7#3 = RMul(coeff280E,prod2865);
          real basisEval28A8#1 = RMul(coeff2892,prod2867);
          real basisEval28A9#4 = RMul(coeff2879,prod286B);
          real basisEval28AA#1 = RMul(coeff288E,prod286D);
          real basisEval28AB#2 = RMul(coeff287C,prod286F);
          real basisEval28AC#1 = RMul(coeff281B,prod2819);
          real basisEval28AD#2 = RMul(coeff281B,prod2824);
          real basisEval28AE#1 = RMul(coeff282E,prod2828);
          real basisEval28AF#2 = RMul(coeff280E,prod2830);
          real basisEval28B0#2 = RMul(coeff281B,prod2837);
          real basisEval28B1#1 = RMul(coeff282E,prod283A);
          real basisEval28B2#1 = RMul(coeff284A,prod283E);
          real basisEval28B3#1 = RMul(coeff282E,prod2844);
          real basisEval28B4#3 = RMul(coeff280E,prod2846);
          real basisEval28B5#2 = RMul(coeff280E,prod284C);
          real basisEval28B6#1 = RMul(coeff281B,prod2853);
          real basisEval28B7#2 = RMul(coeff282E,prod2856);
          real basisEval28B8#1 = RMul(coeff284A,prod2859);
          real basisEval28B9#1 = RMul(coeff2871,prod285D);
          real basisEval28BA#1 = RMul(coeff282E,prod2863);
          real basisEval28BB#1 = RMul(coeff284A,prod2865);
          real basisEval28BC#1 = RMul(coeff280E,prod2867);
          real basisEval28BD#3 = RMul(coeff280E,prod286D);
          real basisEval28BE#1 = RMul(coeff281B,prod286F);
          real basisEval28BF#2 = RMul(coeff280E,prod2873);
          real basisEval28C0#3 = RMul(one280F,prod281D);
          real basisEval28C1#1 = RMul(coeff287C,prod2824);
          real basisEval28C2#3 = RMul(one280F,prod2830);
          real basisEval28C3#2 = RMul(coeff281B,prod283A);
          real basisEval28C4#2 = RMul(coeff2879,prod2840);
          real basisEval28C5#2 = RMul(coeff2879,prod2844);
          real basisEval28C6#3 = RMul(coeff280E,prod2848);
          real basisEval28C7#3 = RMul(one280F,prod284C);
          real basisEval28C8#1 = RMul(coeff288E,prod2853);
          real basisEval28C9#1 = RMul(coeff2892,prod2856);
          real basisEval28CA#1 = RMul(coeff288E,prod2859);
          real basisEval28CB#2 = RMul(coeff287C,prod285F);
          real basisEval28CC#2 = RMul(coeff287C,prod2865);
          real basisEval28CD#1 = RMul(coeff287C,prod2869);
          real basisEval28CE#3 = RMul(coeff280E,prod286F);
          real basisEval28CF#3 = RMul(one280F,prod2873);
          real basisEval28D0#1 = RMul(coeff281B,prod2815);
          real basisEval28D1#1 = RMul(coeff282E,prod2821);
          real basisEval28D2#1 = RMul(coeff284A,prod2834);
          real basisEval28D3#1 = RMul(coeff282E,prod2837);
          real basisEval28D4#1 = RMul(coeff282E,prod2840);
          real basisEval28D5#1 = RMul(coeff2871,prod2850);
          real basisEval28D6#1 = RMul(coeff284A,prod2853);
          real basisEval28D7#1 = RMul(coeff281B,prod2859);
          real basisEval28D8#1 = RMul(coeff284A,prod285F);
          real basisEval28D9#1 = RMul(coeff282E,prod2861);
          real basisEval28DA#1 = RMul(coeff280E,prod286B);
          real basisEval28DB#1 = RMul(coeff281B,prod286D);
          tensor[84] intermediateCons28DC#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval281E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval2825,basisEval2829,basisEval282B,basisEval282D,basisEval2831,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval2838,basisEval283B,basisEval283F,basisEval2841,basisEval2843,basisEval2845,basisEval2847,basisEval2849,basisEval284D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval2854,basisEval2857,basisEval285A,basisEval285E,basisEval2860,basisEval2862,basisEval2864,basisEval2866,basisEval2868,basisEval286A,basisEval286C,basisEval286E,basisEval2870,basisEval2874];
          tensor[84] intermediateCons28DD#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2876,basisEval281A,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2878,basisEval2825,basisEval287A,basisEval280D,basisEval287B,basisEval287D,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval287F,basisEval2838,basisEval2880,basisEval2881,basisEval280D,basisEval2882,basisEval2883,basisEval2845,basisEval280D,basisEval2884,basisEval2885,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2887,basisEval2854,basisEval2888,basisEval2889,basisEval288B,basisEval280D,basisEval288C,basisEval288D,basisEval2864,basisEval288F,basisEval280D,basisEval2890,basisEval2891,basisEval2893,basisEval280D,basisEval2894,basisEval2895,basisEval280D,basisEval2896,basisEval280D];
          tensor[84] intermediateCons28DE#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval2897,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval2825,basisEval2899,basisEval280D,basisEval289A,basisEval289B,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval289D,basisEval283B,basisEval289E,basisEval280D,basisEval2841,basisEval2883,basisEval289F,basisEval280D,basisEval28A0,basisEval28A1,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28A3,basisEval2888,basisEval285A,basisEval28A4,basisEval280D,basisEval28A5,basisEval2862,basisEval28A6,basisEval28A7,basisEval280D,basisEval28A8,basisEval2891,basisEval28A9,basisEval280D,basisEval28AA,basisEval28AB,basisEval280D,basisEval2896,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28DF#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval28AC,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval28AD,basisEval28AE,basisEval280D,basisEval280D,basisEval287B,basisEval282D,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval28B0,basisEval28B1,basisEval28B2,basisEval280D,basisEval280D,basisEval2882,basisEval2843,basisEval28B3,basisEval280D,basisEval280D,basisEval28B4,basisEval2885,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval28B6,basisEval28B7,basisEval28B8,basisEval28B9,basisEval280D,basisEval280D,basisEval288C,basisEval2862,basisEval28BA,basisEval28BB,basisEval280D,basisEval280D,basisEval28BC,basisEval2891,basisEval286C,basisEval280D,basisEval280D,basisEval28BD,basisEval28BE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E0#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval280D,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval28C1,basisEval287A,basisEval280D,basisEval280D,basisEval287B,basisEval289B,basisEval280D,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval28B0,basisEval28C3,basisEval2881,basisEval280D,basisEval280D,basisEval28C4,basisEval2883,basisEval28C5,basisEval280D,basisEval280D,basisEval28B4,basisEval28C6,basisEval280D,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28C8,basisEval28C9,basisEval28CA,basisEval288B,basisEval280D,basisEval280D,basisEval28CB,basisEval2862,basisEval2864,basisEval28CC,basisEval280D,basisEval280D,basisEval2890,basisEval28CD,basisEval28A9,basisEval280D,basisEval280D,basisEval28BD,basisEval28CE,basisEval280D,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E1#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D0,basisEval281A,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D1,basisEval28AD,basisEval2829,basisEval280D,basisEval280D,basisEval282B,basisEval289B,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D2,basisEval28D3,basisEval28C3,basisEval283F,basisEval280D,basisEval280D,basisEval28D4,basisEval2843,basisEval289F,basisEval280D,basisEval280D,basisEval28A0,basisEval28C6,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D5,basisEval28D6,basisEval28B7,basisEval28D7,basisEval285E,basisEval280D,basisEval280D,basisEval28D8,basisEval28D9,basisEval2864,basisEval28A7,basisEval280D,basisEval280D,basisEval2868,basisEval2891,basisEval28DA,basisEval280D,basisEval280D,basisEval28DB,basisEval28CE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          real vdot29C5#1 = VDot<84>(dofs26B6,intermediateCons28DC);
          real vdot29C7#2 = VDot<84>(dofs26B6,intermediateCons28DD);
          real vdot29C9#2 = VDot<84>(dofs26B6,intermediateCons28DE);
          tensor[3] tensor29CA#1 = <tensor[3]>[vdot29C5,vdot29C7,vdot29C9];
          real vdot29CE#1 = VDot<84>(dofs26B6,intermediateCons28DF);
          real vdot29D0#2 = VDot<84>(dofs26B6,intermediateCons28E0);
          tensor[3] tensor29D1#1 = <tensor[3]>[vdot29C7,vdot29CE,vdot29D0];
          real vdot29D7#1 = VDot<84>(dofs26B6,intermediateCons28E1);
          tensor[3] tensor29D8#1 = <tensor[3]>[vdot29C9,vdot29D0,vdot29D7];
          tensor[3,3] _t29C3#1 = <tensor[3,3]>[tensor29CA,tensor29D1,tensor29D8];
          real[3] _t29F0#1 = EigenVals3x3(_t29C3);
          real _t29F4#1 = Subscript<real[3]>(_t29F0,ilit236B);
          real basisEval2A11#1 = RMul(one280F,prod2824);
          real basisEval2A24#1 = RMul(one280F,prod2837);
          real basisEval2A27#1 = RMul(one280F,prod283A);
          real basisEval2A2F#3 = RMul(coeff280E,prod2842);
          real basisEval2A40#1 = RMul(one280F,prod2853);
          real basisEval2A43#1 = RMul(one280F,prod2856);
          real basisEval2A46#1 = RMul(one280F,prod2859);
          real basisEval2A4E#2 = RMul(coeff280E,prod2861);
          real basisEval2A50#2 = RMul(coeff280E,prod2863);
          real basisEval2A56#1 = RMul(coeff2879,prod2869);
          real prod52A61#1 = RMul(prod4284E,varAcc280C);
          real prod2A62#1 = RMul(one280F,prod52A61);
          real prod2A63#2 = RMul(one280F,prod2A62);
          real basisEval2A64#2 = RMul(one280F,prod2A63);
          real prod2A65#1 = RMul(varAcc280B,prod4284E);
          real prod2A66#3 = RMul(one280F,prod2A65);
          real basisEval2A67#1 = RMul(one280F,prod2A66);
          real prod2A68#1 = RMul(prod22826,prod32832);
          real prod2A69#3 = RMul(one280F,prod2A68);
          real basisEval2A6A#1 = RMul(one280F,prod2A69);
          real prod2A6B#1 = RMul(prod3283C,prod2281F);
          real prod2A6C#3 = RMul(one280F,prod2A6B);
          real basisEval2A6D#1 = RMul(one280F,prod2A6C);
          real prod2A6E#1 = RMul(prod4285B,varAcc280C);
          real prod2A6F#3 = RMul(one280F,prod2A6E);
          real basisEval2A70#1 = RMul(one280F,prod2A6F);
          real prod52A71#1 = RMul(prod4285B,varAcc280B);
          real prod2A72#1 = RMul(prod52A71,one280F);
          real prod2A73#2 = RMul(one280F,prod2A72);
          real basisEval2A74#2 = RMul(one280F,prod2A73);
          real prod2A75#3 = RMul(varAcc280A,prod284F);
          real basisEval2A76#1 = RMul(coeff280E,prod2A75);
          real prod2A77#2 = RMul(varAcc280A,prod2852);
          real basisEval2A78#2 = RMul(coeff280E,prod2A77);
          real prod2A79#2 = RMul(varAcc280A,prod2855);
          real basisEval2A7A#1 = RMul(coeff280E,prod2A79);
          real prod2A7B#2 = RMul(varAcc280A,prod2858);
          real basisEval2A7C#2 = RMul(coeff280E,prod2A7B);
          real prod2A7D#3 = RMul(varAcc280A,prod285C);
          real basisEval2A7E#1 = RMul(coeff280E,prod2A7D);
          real prod2A7F#3 = RMul(prod2282F,prod2833);
          real basisEval2A80#1 = RMul(coeff2879,prod2A7F);
          real prod2A81#2 = RMul(prod2282F,prod2836);
          real basisEval2A82#2 = RMul(coeff2879,prod2A81);
          real prod2A83#2 = RMul(prod2282F,prod2839);
          real basisEval2A84#2 = RMul(coeff2879,prod2A83);
          real prod2A85#3 = RMul(prod2282F,prod283D);
          real basisEval2A86#1 = RMul(coeff2879,prod2A85);
          real prod2A87#3 = RMul(prod3284B,prod2820);
          real basisEval2A88#1 = RMul(coeff287C,prod2A87);
          real prod2A89#2 = RMul(prod3284B,prod2823);
          real basisEval2A8A#1 = RMul(coeff287C,prod2A89);
          real prod2A8B#3 = RMul(prod3284B,prod2827);
          real basisEval2A8C#1 = RMul(coeff287C,prod2A8B);
          real prod2A8D#3 = RMul(prod42872,prod2814);
          real basisEval2A8E#1 = RMul(coeff288A,prod2A8D);
          real prod2A8F#3 = RMul(prod42872,prod2818);
          real basisEval2A90#1 = RMul(coeff288A,prod2A8F);
          real prod52A92#1 = RMul(prod42872,varAcc280A);
          real prod2A93#2 = RMul(prod52A92,prod2810);
          real basisEval2A94#1 = RMul(coeff281B,prod2A93);
          real basisEval2A99#1 = RMul(one280F,prod282A);
          real basisEval2A9E#1 = RMul(one280F,prod2840);
          real basisEval2AA0#1 = RMul(one280F,prod2846);
          real basisEval2AA7#1 = RMul(one280F,prod285F);
          real basisEval2AA8#1 = RMul(coeff2879,prod2863);
          real basisEval2AAA#1 = RMul(one280F,prod2867);
          real basisEval2AAB#2 = RMul(coeff280E,prod2869);
          real basisEval2AAC#1 = RMul(one280F,prod286D);
          real basisEval2AAF#1 = RMul(coeff280E,prod2A66);
          real basisEval2AB0#1 = RMul(coeff2879,prod2A69);
          real basisEval2AB1#1 = RMul(coeff287C,prod2A6C);
          real basisEval2AB2#1 = RMul(coeff288A,prod2A6F);
          real basisEval2AB3#1 = RMul(coeff281B,prod2A73);
          real basisEval2AB4#1 = RMul(one280F,prod2A75);
          real basisEval2AB5#2 = RMul(coeff2879,prod2A79);
          real basisEval2AB6#1 = RMul(coeff287C,prod2A7B);
          real basisEval2AB7#1 = RMul(coeff288A,prod2A7D);
          real basisEval2AB8#1 = RMul(one280F,prod2A7F);
          real basisEval2AB9#1 = RMul(coeff280E,prod2A81);
          real basisEval2ABA#1 = RMul(coeff287C,prod2A85);
          real basisEval2ABB#1 = RMul(one280F,prod2A87);
          real basisEval2ABC#2 = RMul(coeff280E,prod2A89);
          real basisEval2ABD#1 = RMul(coeff2879,prod2A8B);
          real basisEval2ABE#1 = RMul(one280F,prod2A8D);
          real basisEval2ABF#1 = RMul(coeff280E,prod2A8F);
          real basisEval2AC0#2 = RMul(one280F,prod2A93);
          real basisEval2AC3#1 = RMul(one280F,prod282C);
          real basisEval2AC8#1 = RMul(one280F,prod2844);
          real basisEval2ACA#1 = RMul(one280F,prod2848);
          real basisEval2ACF#1 = RMul(coeff2879,prod2861);
          real basisEval2AD0#1 = RMul(one280F,prod2865);
          real basisEval2AD1#1 = RMul(one280F,prod286B);
          real basisEval2AD3#1 = RMul(one280F,prod286F);
          real basisEval2AD4#1 = RMul(coeff281B,prod2A63);
          real basisEval2AD5#1 = RMul(coeff288A,prod2A66);
          real basisEval2AD6#1 = RMul(coeff287C,prod2A69);
          real basisEval2AD7#1 = RMul(coeff2879,prod2A6C);
          real basisEval2AD8#1 = RMul(coeff280E,prod2A6F);
          real basisEval2AD9#1 = RMul(coeff288A,prod2A75);
          real basisEval2ADA#1 = RMul(coeff287C,prod2A77);
          real basisEval2ADB#1 = RMul(one280F,prod2A7D);
          real basisEval2ADC#1 = RMul(coeff287C,prod2A7F);
          real basisEval2ADD#1 = RMul(coeff280E,prod2A83);
          real basisEval2ADE#1 = RMul(one280F,prod2A85);
          real basisEval2ADF#1 = RMul(coeff2879,prod2A87);
          real basisEval2AE0#1 = RMul(one280F,prod2A8B);
          real basisEval2AE1#1 = RMul(coeff280E,prod2A8D);
          real basisEval2AE2#1 = RMul(one280F,prod2A8F);
          tensor[84] intermediateCons2AE3#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval2876,basisEval2897,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2878,basisEval2A11,basisEval2899,basisEval287B,basisEval289B,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval287F,basisEval2A24,basisEval2A27,basisEval289E,basisEval2882,basisEval2A2F,basisEval289F,basisEval2884,basisEval28A1,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2887,basisEval2A40,basisEval2A43,basisEval2A46,basisEval28A4,basisEval288C,basisEval2A4E,basisEval2A50,basisEval28A7,basisEval2890,basisEval2A56,basisEval28A9,basisEval2894,basisEval28AB,basisEval2896,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2A64,basisEval2A67,basisEval2A6A,basisEval2A6D,basisEval2A70,basisEval2A74,basisEval2A76,basisEval2A78,basisEval2A7A,basisEval2A7C,basisEval2A7E,basisEval2A80,basisEval2A82,basisEval2A84,basisEval2A86,basisEval2A88,basisEval2A8A,basisEval2A8C,basisEval2A8E,basisEval2A90,basisEval2A94];
          tensor[84] intermediateCons2AE4#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval2876,basisEval281A,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval2878,basisEval2825,basisEval287A,basisEval280D,basisEval2A99,basisEval289B,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval287F,basisEval2838,basisEval2880,basisEval2881,basisEval280D,basisEval2A9E,basisEval2A2F,basisEval28C5,basisEval280D,basisEval2AA0,basisEval28C6,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval2887,basisEval2854,basisEval2888,basisEval2889,basisEval288B,basisEval280D,basisEval2AA7,basisEval2A4E,basisEval2AA8,basisEval28CC,basisEval280D,basisEval2AAA,basisEval2AAB,basisEval28A9,basisEval280D,basisEval2AAC,basisEval28CE,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval2A64,basisEval2AAF,basisEval2AB0,basisEval2AB1,basisEval2AB2,basisEval2AB3,basisEval280D,basisEval2AB4,basisEval2A78,basisEval2AB5,basisEval2AB6,basisEval2AB7,basisEval280D,basisEval2AB8,basisEval2AB9,basisEval2A84,basisEval2ABA,basisEval280D,basisEval2ABB,basisEval2ABC,basisEval2ABD,basisEval280D,basisEval2ABE,basisEval2ABF,basisEval280D,basisEval2AC0,basisEval280D];
          tensor[84] intermediateCons2AE5#1 = <tensor[84]>[basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval2816,basisEval2897,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval2898,basisEval2825,basisEval2899,basisEval280D,basisEval287B,basisEval2AC3,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval289C,basisEval289D,basisEval283B,basisEval289E,basisEval280D,basisEval28C4,basisEval2A2F,basisEval2AC8,basisEval280D,basisEval28B4,basisEval2ACA,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval28A2,basisEval28A3,basisEval2888,basisEval285A,basisEval28A4,basisEval280D,basisEval28CB,basisEval2ACF,basisEval2A50,basisEval2AD0,basisEval280D,basisEval2890,basisEval2AAB,basisEval2AD1,basisEval280D,basisEval28BD,basisEval2AD3,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval2AD4,basisEval2AD5,basisEval2AD6,basisEval2AD7,basisEval2AD8,basisEval2A74,basisEval280D,basisEval2AD9,basisEval2ADA,basisEval2AB5,basisEval2A7C,basisEval2ADB,basisEval280D,basisEval2ADC,basisEval2A82,basisEval2ADD,basisEval2ADE,basisEval280D,basisEval2ADF,basisEval2ABC,basisEval2AE0,basisEval280D,basisEval2AE1,basisEval2AE2,basisEval280D,basisEval2AC0,basisEval280D,basisEval280D];
          real vdot2BDA#1 = VDot<84>(dofs26B6,intermediateCons2AE3);
          real vdot2BDC#1 = VDot<84>(dofs26B6,intermediateCons2AE4);
          real vdot2BDE#1 = VDot<84>(dofs26B6,intermediateCons2AE5);
          tensor[3] probe_l_62BD8#2 = <tensor[3]>[vdot2BDA,vdot2BDC,vdot2BDE];
          real op1_e3_l_82BE7#1 = VDot<3>(probe_l_62BD8,probe_l_62BD8);
          real op1_e3_l_92BEA#1 = Sqrt(op1_e3_l_82BE7);
          real op1_e3_l_102BED#1 = RNeg(_t29F4);
          real op1_e3_l_112BF0#1 = RAdd(fBias2329,op1_e3_l_92BEA);
          real _t2BF3#1 = RDiv(op1_e3_l_102BED,op1_e3_l_112BF0);
          bool _t2BF6#1 = GT<real>(_t2BF3,fStrTh2325);
          if _t2BF6 then goto ASSIGN3ACE else goto ASSIGN389A
        ASSIGN3ACE:  preds = [COND2BF8]
          bool _t2BFB#1 = GTE<real>(one280F,fMaskTh2327);
          if _t2BFB then goto ASSIGN2BFF else goto ASSIGN3899
        ASSIGN2BFF:  preds = [COND2BFD]
          bool _t2BFE#1 = true;
          goto JOIN2C02
        JOIN2C02:  preds = [ASSIGN2BFF,ASSIGN3899]
          bool _t2C00#1 = phi(_t2BFE,_t2C01)
          goto JOIN2C05
        JOIN2C05:  preds = [JOIN2C02,ASSIGN389A]
          bool _t2C03#1 = phi(_t2C00,_t2C04)
          goto JOIN2C08
        JOIN2C08:  preds = [JOIN2C05,ASSIGN389B]
          bool _t2C06#1 = phi(_t2C03,_t2C07)
          bool _t2C09#1 = BNot(_t2C06);
          if _t2C09 then goto SAVE2C0C else goto JOIN2C0E
        SAVE2C0C:  preds = [COND2C0B]
          self.rayN = rayN234F;
          active
          goto JOIN2C0E
        JOIN2C0E:  preds = [*ACTIVE2C0D,COND2C0B]
          int ilit2C10#1 = 84;
          int mulRes2C11#84 = IMul(_t2313,ilit2C10);
          int idx2C14#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,mulRes2C11);
          int ilit2C15#93 = 1;
          int addRes2C16#1 = IAdd(mulRes2C11,ilit2C15);
          int idx2C17#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C16);
          int ilit2C18#7 = 2;
          int addRes2C19#1 = IAdd(mulRes2C11,ilit2C18);
          int idx2C1A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C19);
          int ilit2C1B#5 = 3;
          int addRes2C1C#1 = IAdd(mulRes2C11,ilit2C1B);
          int idx2C1D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1C);
          int ilit2C1E#1 = 4;
          int addRes2C1F#1 = IAdd(mulRes2C11,ilit2C1E);
          int idx2C20#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1F);
          int ilit2C21#1 = 5;
          int addRes2C22#1 = IAdd(mulRes2C11,ilit2C21);
          int idx2C23#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C22);
          int ilit2C24#1 = 6;
          int addRes2C25#1 = IAdd(mulRes2C11,ilit2C24);
          int idx2C26#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C25);
          int ilit2C27#1 = 7;
          int addRes2C28#1 = IAdd(mulRes2C11,ilit2C27);
          int idx2C29#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C28);
          int ilit2C2A#1 = 8;
          int addRes2C2B#1 = IAdd(mulRes2C11,ilit2C2A);
          int idx2C2C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2B);
          int ilit2C2D#1 = 9;
          int addRes2C2E#1 = IAdd(mulRes2C11,ilit2C2D);
          int idx2C2F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2E);
          int ilit2C30#1 = 10;
          int addRes2C31#1 = IAdd(mulRes2C11,ilit2C30);
          int idx2C32#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C31);
          int ilit2C33#1 = 11;
          int addRes2C34#1 = IAdd(mulRes2C11,ilit2C33);
          int idx2C35#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C34);
          int ilit2C36#1 = 12;
          int addRes2C37#1 = IAdd(mulRes2C11,ilit2C36);
          int idx2C38#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C37);
          int ilit2C39#1 = 13;
          int addRes2C3A#1 = IAdd(mulRes2C11,ilit2C39);
          int idx2C3B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3A);
          int ilit2C3C#1 = 14;
          int addRes2C3D#1 = IAdd(mulRes2C11,ilit2C3C);
          int idx2C3E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3D);
          int ilit2C3F#1 = 15;
          int addRes2C40#1 = IAdd(mulRes2C11,ilit2C3F);
          int idx2C41#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C40);
          int ilit2C42#1 = 16;
          int addRes2C43#1 = IAdd(mulRes2C11,ilit2C42);
          int idx2C44#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C43);
          int ilit2C45#1 = 17;
          int addRes2C46#1 = IAdd(mulRes2C11,ilit2C45);
          int idx2C47#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C46);
          int ilit2C48#1 = 18;
          int addRes2C49#1 = IAdd(mulRes2C11,ilit2C48);
          int idx2C4A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C49);
          int ilit2C4B#1 = 19;
          int addRes2C4C#1 = IAdd(mulRes2C11,ilit2C4B);
          int idx2C4D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4C);
          int ilit2C4E#1 = 20;
          int addRes2C4F#1 = IAdd(mulRes2C11,ilit2C4E);
          int idx2C50#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4F);
          int ilit2C51#1 = 21;
          int addRes2C52#1 = IAdd(mulRes2C11,ilit2C51);
          int idx2C53#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C52);
          int ilit2C54#1 = 22;
          int addRes2C55#1 = IAdd(mulRes2C11,ilit2C54);
          int idx2C56#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C55);
          int ilit2C57#1 = 23;
          int addRes2C58#1 = IAdd(mulRes2C11,ilit2C57);
          int idx2C59#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C58);
          int ilit2C5A#1 = 24;
          int addRes2C5B#1 = IAdd(mulRes2C11,ilit2C5A);
          int idx2C5C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5B);
          int ilit2C5D#1 = 25;
          int addRes2C5E#1 = IAdd(mulRes2C11,ilit2C5D);
          int idx2C5F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5E);
          int ilit2C60#1 = 26;
          int addRes2C61#1 = IAdd(mulRes2C11,ilit2C60);
          int idx2C62#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C61);
          int ilit2C63#1 = 27;
          int addRes2C64#1 = IAdd(mulRes2C11,ilit2C63);
          int idx2C65#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C64);
          int ilit2C66#1 = 28;
          int addRes2C67#1 = IAdd(mulRes2C11,ilit2C66);
          int idx2C68#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C67);
          int ilit2C69#1 = 29;
          int addRes2C6A#1 = IAdd(mulRes2C11,ilit2C69);
          int idx2C6B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6A);
          int ilit2C6C#1 = 30;
          int addRes2C6D#1 = IAdd(mulRes2C11,ilit2C6C);
          int idx2C6E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6D);
          int ilit2C6F#1 = 31;
          int addRes2C70#1 = IAdd(mulRes2C11,ilit2C6F);
          int idx2C71#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C70);
          int ilit2C72#1 = 32;
          int addRes2C73#1 = IAdd(mulRes2C11,ilit2C72);
          int idx2C74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C73);
          int ilit2C75#1 = 33;
          int addRes2C76#1 = IAdd(mulRes2C11,ilit2C75);
          int idx2C77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C76);
          int ilit2C78#1 = 34;
          int addRes2C79#1 = IAdd(mulRes2C11,ilit2C78);
          int idx2C7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C79);
          int ilit2C7B#1 = 35;
          int addRes2C7C#1 = IAdd(mulRes2C11,ilit2C7B);
          int idx2C7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7C);
          int ilit2C7E#1 = 36;
          int addRes2C7F#1 = IAdd(mulRes2C11,ilit2C7E);
          int idx2C80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7F);
          int ilit2C81#1 = 37;
          int addRes2C82#1 = IAdd(mulRes2C11,ilit2C81);
          int idx2C83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C82);
          int ilit2C84#1 = 38;
          int addRes2C85#1 = IAdd(mulRes2C11,ilit2C84);
          int idx2C86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C85);
          int ilit2C87#1 = 39;
          int addRes2C88#1 = IAdd(mulRes2C11,ilit2C87);
          int idx2C89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C88);
          int ilit2C8A#1 = 40;
          int addRes2C8B#1 = IAdd(mulRes2C11,ilit2C8A);
          int idx2C8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8B);
          int ilit2C8D#1 = 41;
          int addRes2C8E#1 = IAdd(mulRes2C11,ilit2C8D);
          int idx2C8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8E);
          int ilit2C90#1 = 42;
          int addRes2C91#1 = IAdd(mulRes2C11,ilit2C90);
          int idx2C92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C91);
          int ilit2C93#1 = 43;
          int addRes2C94#1 = IAdd(mulRes2C11,ilit2C93);
          int idx2C95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C94);
          int ilit2C96#1 = 44;
          int addRes2C97#1 = IAdd(mulRes2C11,ilit2C96);
          int idx2C98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C97);
          int ilit2C99#1 = 45;
          int addRes2C9A#1 = IAdd(mulRes2C11,ilit2C99);
          int idx2C9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9A);
          int ilit2C9C#1 = 46;
          int addRes2C9D#1 = IAdd(mulRes2C11,ilit2C9C);
          int idx2C9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9D);
          int ilit2C9F#1 = 47;
          int addRes2CA0#1 = IAdd(mulRes2C11,ilit2C9F);
          int idx2CA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA0);
          int ilit2CA2#1 = 48;
          int addRes2CA3#1 = IAdd(mulRes2C11,ilit2CA2);
          int idx2CA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA3);
          int ilit2CA5#1 = 49;
          int addRes2CA6#1 = IAdd(mulRes2C11,ilit2CA5);
          int idx2CA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA6);
          int ilit2CA8#1 = 50;
          int addRes2CA9#1 = IAdd(mulRes2C11,ilit2CA8);
          int idx2CAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA9);
          int ilit2CAB#1 = 51;
          int addRes2CAC#1 = IAdd(mulRes2C11,ilit2CAB);
          int idx2CAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAC);
          int ilit2CAE#1 = 52;
          int addRes2CAF#1 = IAdd(mulRes2C11,ilit2CAE);
          int idx2CB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAF);
          int ilit2CB1#1 = 53;
          int addRes2CB2#1 = IAdd(mulRes2C11,ilit2CB1);
          int idx2CB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB2);
          int ilit2CB4#1 = 54;
          int addRes2CB5#1 = IAdd(mulRes2C11,ilit2CB4);
          int idx2CB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB5);
          int ilit2CB7#1 = 55;
          int addRes2CB8#1 = IAdd(mulRes2C11,ilit2CB7);
          int idx2CB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB8);
          int ilit2CBA#1 = 56;
          int addRes2CBB#1 = IAdd(mulRes2C11,ilit2CBA);
          int idx2CBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBB);
          int ilit2CBD#1 = 57;
          int addRes2CBE#1 = IAdd(mulRes2C11,ilit2CBD);
          int idx2CBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBE);
          int ilit2CC0#1 = 58;
          int addRes2CC1#1 = IAdd(mulRes2C11,ilit2CC0);
          int idx2CC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC1);
          int ilit2CC3#1 = 59;
          int addRes2CC4#1 = IAdd(mulRes2C11,ilit2CC3);
          int idx2CC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC4);
          int ilit2CC6#1 = 60;
          int addRes2CC7#1 = IAdd(mulRes2C11,ilit2CC6);
          int idx2CC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC7);
          int ilit2CC9#1 = 61;
          int addRes2CCA#1 = IAdd(mulRes2C11,ilit2CC9);
          int idx2CCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCA);
          int ilit2CCC#1 = 62;
          int addRes2CCD#1 = IAdd(mulRes2C11,ilit2CCC);
          int idx2CCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCD);
          int ilit2CCF#1 = 63;
          int addRes2CD0#1 = IAdd(mulRes2C11,ilit2CCF);
          int idx2CD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD0);
          int ilit2CD2#1 = 64;
          int addRes2CD3#1 = IAdd(mulRes2C11,ilit2CD2);
          int idx2CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD3);
          int ilit2CD5#1 = 65;
          int addRes2CD6#1 = IAdd(mulRes2C11,ilit2CD5);
          int idx2CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD6);
          int ilit2CD8#1 = 66;
          int addRes2CD9#1 = IAdd(mulRes2C11,ilit2CD8);
          int idx2CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD9);
          int ilit2CDB#1 = 67;
          int addRes2CDC#1 = IAdd(mulRes2C11,ilit2CDB);
          int idx2CDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDC);
          int ilit2CDE#1 = 68;
          int addRes2CDF#1 = IAdd(mulRes2C11,ilit2CDE);
          int idx2CE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDF);
          int ilit2CE1#1 = 69;
          int addRes2CE2#1 = IAdd(mulRes2C11,ilit2CE1);
          int idx2CE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE2);
          int ilit2CE4#1 = 70;
          int addRes2CE5#1 = IAdd(mulRes2C11,ilit2CE4);
          int idx2CE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE5);
          int ilit2CE7#1 = 71;
          int addRes2CE8#1 = IAdd(mulRes2C11,ilit2CE7);
          int idx2CE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE8);
          int ilit2CEA#1 = 72;
          int addRes2CEB#1 = IAdd(mulRes2C11,ilit2CEA);
          int idx2CEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEB);
          int ilit2CED#1 = 73;
          int addRes2CEE#1 = IAdd(mulRes2C11,ilit2CED);
          int idx2CEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEE);
          int ilit2CF0#1 = 74;
          int addRes2CF1#1 = IAdd(mulRes2C11,ilit2CF0);
          int idx2CF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF1);
          int ilit2CF3#1 = 75;
          int addRes2CF4#1 = IAdd(mulRes2C11,ilit2CF3);
          int idx2CF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF4);
          int ilit2CF6#1 = 76;
          int addRes2CF7#1 = IAdd(mulRes2C11,ilit2CF6);
          int idx2CF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF7);
          int ilit2CF9#1 = 77;
          int addRes2CFA#1 = IAdd(mulRes2C11,ilit2CF9);
          int idx2CFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFA);
          int ilit2CFC#1 = 78;
          int addRes2CFD#1 = IAdd(mulRes2C11,ilit2CFC);
          int idx2CFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFD);
          int ilit2CFF#1 = 79;
          int addRes2D00#1 = IAdd(mulRes2C11,ilit2CFF);
          int idx2D01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D00);
          int ilit2D02#1 = 80;
          int addRes2D03#1 = IAdd(mulRes2C11,ilit2D02);
          int idx2D04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D03);
          int ilit2D05#1 = 81;
          int addRes2D06#1 = IAdd(mulRes2C11,ilit2D05);
          int idx2D07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D06);
          int ilit2D08#1 = 82;
          int addRes2D09#1 = IAdd(mulRes2C11,ilit2D08);
          int idx2D0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D09);
          int ilit2D0B#1 = 83;
          int addRes2D0C#1 = IAdd(mulRes2C11,ilit2D0B);
          int idx2D0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D0C);
          int mulRes2E13#1 = IMul(ilit2C15,idx2C14);
          int mulRes2E15#1 = IMul(ilit2C15,idx2C17);
          int mulRes2E18#1 = IMul(ilit2C15,idx2C1A);
          int mulRes2E1B#1 = IMul(ilit2C15,idx2C1D);
          int mulRes2E1E#1 = IMul(ilit2C15,idx2C20);
          int mulRes2E21#1 = IMul(ilit2C15,idx2C23);
          int mulRes2E24#1 = IMul(ilit2C15,idx2C26);
          int mulRes2E27#1 = IMul(ilit2C15,idx2C29);
          int mulRes2E2A#1 = IMul(ilit2C15,idx2C2C);
          int mulRes2E2D#1 = IMul(ilit2C15,idx2C2F);
          int mulRes2E30#1 = IMul(ilit2C15,idx2C32);
          int mulRes2E33#1 = IMul(ilit2C15,idx2C35);
          int mulRes2E36#1 = IMul(ilit2C15,idx2C38);
          int mulRes2E39#1 = IMul(ilit2C15,idx2C3B);
          int mulRes2E3C#1 = IMul(ilit2C15,idx2C3E);
          int mulRes2E3F#1 = IMul(ilit2C15,idx2C41);
          int mulRes2E42#1 = IMul(ilit2C15,idx2C44);
          int mulRes2E45#1 = IMul(ilit2C15,idx2C47);
          int mulRes2E48#1 = IMul(ilit2C15,idx2C4A);
          int mulRes2E4B#1 = IMul(ilit2C15,idx2C4D);
          int mulRes2E4E#1 = IMul(ilit2C15,idx2C50);
          int mulRes2E51#1 = IMul(ilit2C15,idx2C53);
          int mulRes2E54#1 = IMul(ilit2C15,idx2C56);
          int mulRes2E57#1 = IMul(ilit2C15,idx2C59);
          int mulRes2E5A#1 = IMul(ilit2C15,idx2C5C);
          int mulRes2E5D#1 = IMul(ilit2C15,idx2C5F);
          int mulRes2E60#1 = IMul(ilit2C15,idx2C62);
          int mulRes2E63#1 = IMul(ilit2C15,idx2C65);
          int mulRes2E66#1 = IMul(ilit2C15,idx2C68);
          int mulRes2E69#1 = IMul(ilit2C15,idx2C6B);
          int mulRes2E6C#1 = IMul(ilit2C15,idx2C6E);
          int mulRes2E6F#1 = IMul(ilit2C15,idx2C71);
          int mulRes2E72#1 = IMul(ilit2C15,idx2C74);
          int mulRes2E75#1 = IMul(ilit2C15,idx2C77);
          int mulRes2E78#1 = IMul(ilit2C15,idx2C7A);
          int mulRes2E7B#1 = IMul(ilit2C15,idx2C7D);
          int mulRes2E7E#1 = IMul(ilit2C15,idx2C80);
          int mulRes2E81#1 = IMul(ilit2C15,idx2C83);
          int mulRes2E84#1 = IMul(ilit2C15,idx2C86);
          int mulRes2E87#1 = IMul(ilit2C15,idx2C89);
          int mulRes2E8A#1 = IMul(ilit2C15,idx2C8C);
          int mulRes2E8D#1 = IMul(ilit2C15,idx2C8F);
          int mulRes2E90#1 = IMul(ilit2C15,idx2C92);
          int mulRes2E93#1 = IMul(ilit2C15,idx2C95);
          int mulRes2E96#1 = IMul(ilit2C15,idx2C98);
          int mulRes2E99#1 = IMul(ilit2C15,idx2C9B);
          int mulRes2E9C#1 = IMul(ilit2C15,idx2C9E);
          int mulRes2E9F#1 = IMul(ilit2C15,idx2CA1);
          int mulRes2EA2#1 = IMul(ilit2C15,idx2CA4);
          int mulRes2EA5#1 = IMul(ilit2C15,idx2CA7);
          int mulRes2EA8#1 = IMul(ilit2C15,idx2CAA);
          int mulRes2EAB#1 = IMul(ilit2C15,idx2CAD);
          int mulRes2EAE#1 = IMul(ilit2C15,idx2CB0);
          int mulRes2EB1#1 = IMul(ilit2C15,idx2CB3);
          int mulRes2EB4#1 = IMul(ilit2C15,idx2CB6);
          int mulRes2EB7#1 = IMul(ilit2C15,idx2CB9);
          int mulRes2EBA#1 = IMul(ilit2C15,idx2CBC);
          int mulRes2EBD#1 = IMul(ilit2C15,idx2CBF);
          int mulRes2EC0#1 = IMul(ilit2C15,idx2CC2);
          int mulRes2EC3#1 = IMul(ilit2C15,idx2CC5);
          int mulRes2EC6#1 = IMul(ilit2C15,idx2CC8);
          int mulRes2EC9#1 = IMul(ilit2C15,idx2CCB);
          int mulRes2ECC#1 = IMul(ilit2C15,idx2CCE);
          int mulRes2ECF#1 = IMul(ilit2C15,idx2CD1);
          int mulRes2ED2#1 = IMul(ilit2C15,idx2CD4);
          int mulRes2ED5#1 = IMul(ilit2C15,idx2CD7);
          int mulRes2ED8#1 = IMul(ilit2C15,idx2CDA);
          int mulRes2EDB#1 = IMul(ilit2C15,idx2CDD);
          int mulRes2EDE#1 = IMul(ilit2C15,idx2CE0);
          int mulRes2EE1#1 = IMul(ilit2C15,idx2CE3);
          int mulRes2EE4#1 = IMul(ilit2C15,idx2CE6);
          int mulRes2EE7#1 = IMul(ilit2C15,idx2CE9);
          int mulRes2EEA#1 = IMul(ilit2C15,idx2CEC);
          int mulRes2EED#1 = IMul(ilit2C15,idx2CEF);
          int mulRes2EF0#1 = IMul(ilit2C15,idx2CF2);
          int mulRes2EF3#1 = IMul(ilit2C15,idx2CF5);
          int mulRes2EF6#1 = IMul(ilit2C15,idx2CF8);
          int mulRes2EF9#1 = IMul(ilit2C15,idx2CFB);
          int mulRes2EFC#1 = IMul(ilit2C15,idx2CFE);
          int mulRes2EFF#1 = IMul(ilit2C15,idx2D01);
          int mulRes2F02#1 = IMul(ilit2C15,idx2D04);
          int mulRes2F05#1 = IMul(ilit2C15,idx2D07);
          int mulRes2F08#1 = IMul(ilit2C15,idx2D0A);
          int mulRes2F0B#1 = IMul(ilit2C15,idx2D0D);
          real dof2F0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E13);
          real dof2F0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E15);
          real dof2F0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E18);
          real dof2F0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1B);
          real dof2F10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1E);
          real dof2F11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E21);
          real dof2F12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E24);
          real dof2F13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E27);
          real dof2F14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2A);
          real dof2F15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2D);
          real dof2F16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E30);
          real dof2F17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E33);
          real dof2F18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E36);
          real dof2F19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E39);
          real dof2F1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3C);
          real dof2F1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3F);
          real dof2F1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E42);
          real dof2F1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E45);
          real dof2F1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E48);
          real dof2F1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4B);
          real dof2F20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4E);
          real dof2F21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E51);
          real dof2F22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E54);
          real dof2F23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E57);
          real dof2F24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5A);
          real dof2F25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5D);
          real dof2F26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E60);
          real dof2F27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E63);
          real dof2F28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E66);
          real dof2F29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E69);
          real dof2F2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6C);
          real dof2F2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6F);
          real dof2F2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E72);
          real dof2F2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E75);
          real dof2F2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E78);
          real dof2F2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7B);
          real dof2F30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7E);
          real dof2F31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E81);
          real dof2F32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E84);
          real dof2F33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E87);
          real dof2F34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8A);
          real dof2F35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8D);
          real dof2F36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E90);
          real dof2F37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E93);
          real dof2F38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E96);
          real dof2F39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E99);
          real dof2F3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9C);
          real dof2F3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9F);
          real dof2F3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA2);
          real dof2F3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA5);
          real dof2F3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA8);
          real dof2F3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAB);
          real dof2F40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAE);
          real dof2F41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB1);
          real dof2F42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB4);
          real dof2F43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB7);
          real dof2F44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBA);
          real dof2F45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBD);
          real dof2F46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC0);
          real dof2F47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC3);
          real dof2F48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC6);
          real dof2F49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC9);
          real dof2F4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECC);
          real dof2F4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECF);
          real dof2F4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED2);
          real dof2F4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED5);
          real dof2F4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED8);
          real dof2F4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDB);
          real dof2F50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDE);
          real dof2F51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE1);
          real dof2F52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE4);
          real dof2F53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE7);
          real dof2F54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EEA);
          real dof2F55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EED);
          real dof2F56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF0);
          real dof2F57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF3);
          real dof2F58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF6);
          real dof2F59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF9);
          real dof2F5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFC);
          real dof2F5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFF);
          real dof2F5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F02);
          real dof2F5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F05);
          real dof2F5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F08);
          real dof2F5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F0B);
          tensor[84] dofs2F60#10 = <tensor[84]>[dof2F0C,dof2F0D,dof2F0E,dof2F0F,dof2F10,dof2F11,dof2F12,dof2F13,dof2F14,dof2F15,dof2F16,dof2F17,dof2F18,dof2F19,dof2F1A,dof2F1B,dof2F1C,dof2F1D,dof2F1E,dof2F1F,dof2F20,dof2F21,dof2F22,dof2F23,dof2F24,dof2F25,dof2F26,dof2F27,dof2F28,dof2F29,dof2F2A,dof2F2B,dof2F2C,dof2F2D,dof2F2E,dof2F2F,dof2F30,dof2F31,dof2F32,dof2F33,dof2F34,dof2F35,dof2F36,dof2F37,dof2F38,dof2F39,dof2F3A,dof2F3B,dof2F3C,dof2F3D,dof2F3E,dof2F3F,dof2F40,dof2F41,dof2F42,dof2F43,dof2F44,dof2F45,dof2F46,dof2F47,dof2F48,dof2F49,dof2F4A,dof2F4B,dof2F4C,dof2F4D,dof2F4E,dof2F4F,dof2F50,dof2F51,dof2F52,dof2F53,dof2F54,dof2F55,dof2F56,dof2F57,dof2F58,dof2F59,dof2F5A,dof2F5B,dof2F5C,dof2F5D,dof2F5E,dof2F5F];
          real varAcc30B4#20 = VIndex<3,0>(pos235B);
          real varAcc30B5#10 = VIndex<3,1>(pos235B);
          real varAcc30B6#10 = VIndex<3,2>(pos235B);
          real basisEval30B7#385 = 0.e0;
          real coeff30B8#47 = 0.2e1;
          real one30B9#218 = 0.1e1;
          real prod30BA#12 = RMul(one30B9,one30B9);
          real prod30BB#2 = RMul(one30B9,prod30BA);
          real basisEval30BC#3 = RMul(coeff30B8,prod30BB);
          real prod30BE#5 = RMul(one30B9,varAcc30B6);
          real prod30BF#3 = RMul(one30B9,prod30BE);
          real basisEval30C0#5 = RMul(coeff30B8,prod30BF);
          real prod30C2#5 = RMul(varAcc30B5,one30B9);
          real prod30C3#3 = RMul(one30B9,prod30C2);
          real basisEval30C4#5 = RMul(coeff30B8,prod30C3);
          real coeff30C5#25 = 0.6e1;
          real prod30C7#3 = RMul(varAcc30B4,prod30BA);
          real basisEval30C8#1 = RMul(coeff30C5,prod30C7);
          real prod230C9#5 = RMul(varAcc30B6,varAcc30B6);
          real prod30CA#4 = RMul(one30B9,prod230C9);
          real prod30CB#4 = RMul(one30B9,prod30CA);
          real basisEval30CC#2 = RMul(coeff30B8,prod30CB);
          real prod30CD#4 = RMul(varAcc30B5,varAcc30B6);
          real prod30CE#4 = RMul(one30B9,prod30CD);
          real basisEval30CF#5 = RMul(coeff30B8,prod30CE);
          real prod230D0#5 = RMul(varAcc30B5,varAcc30B5);
          real prod30D1#4 = RMul(prod230D0,one30B9);
          real prod30D2#4 = RMul(one30B9,prod30D1);
          real basisEval30D3#2 = RMul(coeff30B8,prod30D2);
          real prod30D4#4 = RMul(varAcc30B4,prod30BE);
          real basisEval30D5#2 = RMul(coeff30C5,prod30D4);
          real prod30D6#4 = RMul(varAcc30B4,prod30C2);
          real basisEval30D7#2 = RMul(coeff30C5,prod30D6);
          real coeff30D8#15 = 0.12e2;
          real prod230D9#11 = RMul(varAcc30B4,varAcc30B4);
          real prod30DA#4 = RMul(prod230D9,prod30BA);
          real basisEval30DB#1 = RMul(coeff30D8,prod30DA);
          real prod330DC#4 = RMul(prod230C9,varAcc30B6);
          real prod30DD#3 = RMul(one30B9,prod330DC);
          real prod30DE#4 = RMul(one30B9,prod30DD);
          real basisEval30DF#2 = RMul(coeff30B8,prod30DE);
          real prod30E0#3 = RMul(varAcc30B5,prod230C9);
          real prod30E1#5 = RMul(one30B9,prod30E0);
          real basisEval30E2#3 = RMul(coeff30B8,prod30E1);
          real prod30E3#3 = RMul(prod230D0,varAcc30B6);
          real prod30E4#5 = RMul(one30B9,prod30E3);
          real basisEval30E5#3 = RMul(coeff30B8,prod30E4);
          real prod330E6#4 = RMul(prod230D0,varAcc30B5);
          real prod30E7#3 = RMul(prod330E6,one30B9);
          real prod30E8#4 = RMul(one30B9,prod30E7);
          real basisEval30E9#2 = RMul(coeff30B8,prod30E8);
          real prod30EA#5 = RMul(varAcc30B4,prod30CA);
          real basisEval30EB#2 = RMul(coeff30C5,prod30EA);
          real prod30EC#3 = RMul(varAcc30B4,prod30CD);
          real basisEval30ED#3 = RMul(coeff30C5,prod30EC);
          real prod30EE#5 = RMul(varAcc30B4,prod30D1);
          real basisEval30EF#2 = RMul(coeff30C5,prod30EE);
          real prod30F0#5 = RMul(prod230D9,prod30BE);
          real basisEval30F1#1 = RMul(coeff30D8,prod30F0);
          real prod30F2#5 = RMul(prod230D9,prod30C2);
          real basisEval30F3#1 = RMul(coeff30D8,prod30F2);
          real coeff30F4#9 = 0.20e2;
          real prod330F5#7 = RMul(prod230D9,varAcc30B4);
          real prod30F6#4 = RMul(prod330F5,prod30BA);
          real basisEval30F7#1 = RMul(coeff30F4,prod30F6);
          real prod430F8#3 = RMul(prod330DC,varAcc30B6);
          real prod30F9#2 = RMul(one30B9,prod430F8);
          real prod30FA#4 = RMul(one30B9,prod30F9);
          real basisEval30FB#2 = RMul(coeff30B8,prod30FA);
          real prod30FC#2 = RMul(varAcc30B5,prod330DC);
          real prod30FD#6 = RMul(one30B9,prod30FC);
          real basisEval30FE#3 = RMul(coeff30B8,prod30FD);
          real prod30FF#2 = RMul(prod230D0,prod230C9);
          real prod3100#5 = RMul(one30B9,prod30FF);
          real basisEval3101#1 = RMul(coeff30B8,prod3100);
          real prod3102#2 = RMul(prod330E6,varAcc30B6);
          real prod3103#6 = RMul(one30B9,prod3102);
          real basisEval3104#3 = RMul(coeff30B8,prod3103);
          real prod43105#3 = RMul(prod330E6,varAcc30B5);
          real prod3106#2 = RMul(prod43105,one30B9);
          real prod3107#4 = RMul(one30B9,prod3106);
          real basisEval3108#2 = RMul(coeff30B8,prod3107);
          real prod3109#6 = RMul(varAcc30B4,prod30DD);
          real basisEval310A#1 = RMul(coeff30C5,prod3109);
          real prod310B#5 = RMul(varAcc30B4,prod30E0);
          real basisEval310C#4 = RMul(coeff30C5,prod310B);
          real prod310D#5 = RMul(varAcc30B4,prod30E3);
          real basisEval310E#4 = RMul(coeff30C5,prod310D);
          real prod310F#6 = RMul(varAcc30B4,prod30E7);
          real basisEval3110#1 = RMul(coeff30C5,prod310F);
          real prod3111#5 = RMul(prod230D9,prod30CA);
          real basisEval3112#2 = RMul(coeff30D8,prod3111);
          real prod3113#5 = RMul(prod230D9,prod30CD);
          real basisEval3114#1 = RMul(coeff30D8,prod3113);
          real prod3115#5 = RMul(prod230D9,prod30D1);
          real basisEval3116#2 = RMul(coeff30D8,prod3115);
          real prod3117#6 = RMul(prod330F5,prod30BE);
          real basisEval3118#1 = RMul(coeff30F4,prod3117);
          real prod3119#6 = RMul(prod330F5,prod30C2);
          real basisEval311A#1 = RMul(coeff30F4,prod3119);
          real coeff311B#3 = 0.30e2;
          real prod4311C#4 = RMul(prod330F5,varAcc30B4);
          real prod311D#4 = RMul(prod4311C,prod30BA);
          real basisEval311E#1 = RMul(coeff311B,prod311D);
          real basisEval311F#7 = RMul(one30B9,prod30BB);
          real basisEval3120#3 = RMul(one30B9,prod30BF);
          real basisEval3121#5 = RMul(coeff30B8,prod30C7);
          real basisEval3122#3 = RMul(one30B9,prod30CB);
          real coeff3123#24 = 0.3e1;
          real basisEval3124#3 = RMul(coeff3123,prod30D2);
          real basisEval3125#5 = RMul(coeff30B8,prod30D4);
          real coeff3126#25 = 0.4e1;
          real basisEval3127#1 = RMul(coeff3126,prod30D6);
          real basisEval3128#3 = RMul(coeff3123,prod30DA);
          real basisEval3129#3 = RMul(one30B9,prod30DE);
          real basisEval312A#2 = RMul(coeff3123,prod30E4);
          real basisEval312B#3 = RMul(coeff3126,prod30E8);
          real basisEval312C#3 = RMul(coeff30B8,prod30EA);
          real basisEval312D#3 = RMul(coeff3126,prod30EC);
          real basisEval312E#2 = RMul(coeff3123,prod30F0);
          real basisEval312F#2 = RMul(coeff30C5,prod30F2);
          real basisEval3130#3 = RMul(coeff3126,prod30F6);
          real basisEval3131#3 = RMul(one30B9,prod30FA);
          real basisEval3132#4 = RMul(coeff3123,prod3100);
          real basisEval3133#2 = RMul(coeff3126,prod3103);
          real coeff3134#9 = 0.5e1;
          real basisEval3135#3 = RMul(coeff3134,prod3107);
          real basisEval3136#3 = RMul(coeff30B8,prod3109);
          real basisEval3137#1 = RMul(coeff3126,prod310B);
          real coeff3138#6 = 0.8e1;
          real basisEval3139#1 = RMul(coeff3138,prod310F);
          real basisEval313A#4 = RMul(coeff3123,prod3111);
          real basisEval313B#4 = RMul(coeff30C5,prod3113);
          real coeff313C#3 = 0.9e1;
          real basisEval313D#1 = RMul(coeff313C,prod3115);
          real basisEval313E#2 = RMul(coeff3126,prod3117);
          real basisEval313F#1 = RMul(coeff3138,prod3119);
          real basisEval3140#3 = RMul(coeff3134,prod311D);
          real basisEval3141#3 = RMul(one30B9,prod30C3);
          real basisEval3142#3 = RMul(coeff3123,prod30CB);
          real basisEval3143#3 = RMul(one30B9,prod30D2);
          real basisEval3144#1 = RMul(coeff3126,prod30D4);
          real basisEval3145#5 = RMul(coeff30B8,prod30D6);
          real basisEval3146#3 = RMul(coeff3126,prod30DE);
          real basisEval3147#2 = RMul(coeff3123,prod30E1);
          real basisEval3148#3 = RMul(one30B9,prod30E8);
          real basisEval3149#3 = RMul(coeff30B8,prod30EE);
          real basisEval314A#2 = RMul(coeff30C5,prod30F0);
          real basisEval314B#2 = RMul(coeff3123,prod30F2);
          real basisEval314C#3 = RMul(coeff3134,prod30FA);
          real basisEval314D#2 = RMul(coeff3126,prod30FD);
          real basisEval314E#3 = RMul(one30B9,prod3107);
          real basisEval314F#1 = RMul(coeff3138,prod3109);
          real basisEval3150#1 = RMul(coeff3126,prod310D);
          real basisEval3151#3 = RMul(coeff30B8,prod310F);
          real basisEval3152#1 = RMul(coeff313C,prod3111);
          real basisEval3153#4 = RMul(coeff3123,prod3115);
          real basisEval3154#1 = RMul(coeff3138,prod3117);
          real basisEval3155#2 = RMul(coeff3126,prod3119);
          real basisEval3156#1 = RMul(coeff30C5,prod30C3);
          real basisEval3157#2 = RMul(coeff30C5,prod30CE);
          real basisEval3158#1 = RMul(coeff30D8,prod30D2);
          real basisEval3159#2 = RMul(coeff30B8,prod30DA);
          real basisEval315A#2 = RMul(coeff30C5,prod30E1);
          real basisEval315B#1 = RMul(coeff30D8,prod30E4);
          real basisEval315C#1 = RMul(coeff30F4,prod30E8);
          real basisEval315D#1 = RMul(coeff30D8,prod30EE);
          real basisEval315E#3 = RMul(coeff30B8,prod30F0);
          real basisEval315F#2 = RMul(coeff30B8,prod30F6);
          real basisEval3160#1 = RMul(coeff30C5,prod30FD);
          real basisEval3161#2 = RMul(coeff30D8,prod3100);
          real basisEval3162#1 = RMul(coeff30F4,prod3103);
          real basisEval3163#1 = RMul(coeff311B,prod3107);
          real basisEval3164#1 = RMul(coeff30D8,prod310D);
          real basisEval3165#1 = RMul(coeff30F4,prod310F);
          real basisEval3166#1 = RMul(coeff30B8,prod3111);
          real basisEval3167#3 = RMul(coeff30B8,prod3117);
          real basisEval3168#1 = RMul(coeff30C5,prod3119);
          real basisEval3169#2 = RMul(coeff30B8,prod311D);
          real basisEval316A#3 = RMul(one30B9,prod30C7);
          real basisEval316B#1 = RMul(coeff3126,prod30CE);
          real basisEval316C#3 = RMul(one30B9,prod30DA);
          real basisEval316D#2 = RMul(coeff30C5,prod30E4);
          real basisEval316E#2 = RMul(coeff3123,prod30EA);
          real basisEval316F#2 = RMul(coeff3123,prod30EE);
          real basisEval3170#3 = RMul(coeff30B8,prod30F2);
          real basisEval3171#3 = RMul(one30B9,prod30F6);
          real basisEval3172#1 = RMul(coeff3138,prod30FD);
          real basisEval3173#1 = RMul(coeff313C,prod3100);
          real basisEval3174#1 = RMul(coeff3138,prod3103);
          real basisEval3175#2 = RMul(coeff3126,prod3109);
          real basisEval3176#2 = RMul(coeff3126,prod310F);
          real basisEval3177#1 = RMul(coeff3126,prod3113);
          real basisEval3178#3 = RMul(coeff30B8,prod3119);
          real basisEval3179#3 = RMul(one30B9,prod311D);
          real basisEval317A#1 = RMul(coeff30C5,prod30BF);
          real basisEval317B#1 = RMul(coeff30D8,prod30CB);
          real basisEval317C#1 = RMul(coeff30F4,prod30DE);
          real basisEval317D#1 = RMul(coeff30D8,prod30E1);
          real basisEval317E#1 = RMul(coeff30D8,prod30EA);
          real basisEval317F#1 = RMul(coeff311B,prod30FA);
          real basisEval3180#1 = RMul(coeff30F4,prod30FD);
          real basisEval3181#1 = RMul(coeff30C5,prod3103);
          real basisEval3182#1 = RMul(coeff30F4,prod3109);
          real basisEval3183#1 = RMul(coeff30D8,prod310B);
          real basisEval3184#1 = RMul(coeff30B8,prod3115);
          real basisEval3185#1 = RMul(coeff30C5,prod3117);
          tensor[84] intermediateCons3186#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30C8,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval30CF,basisEval30D3,basisEval30D5,basisEval30D7,basisEval30DB,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval30E2,basisEval30E5,basisEval30E9,basisEval30EB,basisEval30ED,basisEval30EF,basisEval30F1,basisEval30F3,basisEval30F7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval30FE,basisEval3101,basisEval3104,basisEval3108,basisEval310A,basisEval310C,basisEval310E,basisEval3110,basisEval3112,basisEval3114,basisEval3116,basisEval3118,basisEval311A,basisEval311E];
          tensor[84] intermediateCons3187#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3120,basisEval30C4,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3122,basisEval30CF,basisEval3124,basisEval30B7,basisEval3125,basisEval3127,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3129,basisEval30E2,basisEval312A,basisEval312B,basisEval30B7,basisEval312C,basisEval312D,basisEval30EF,basisEval30B7,basisEval312E,basisEval312F,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3131,basisEval30FE,basisEval3132,basisEval3133,basisEval3135,basisEval30B7,basisEval3136,basisEval3137,basisEval310E,basisEval3139,basisEval30B7,basisEval313A,basisEval313B,basisEval313D,basisEval30B7,basisEval313E,basisEval313F,basisEval30B7,basisEval3140,basisEval30B7];
          tensor[84] intermediateCons3188#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3141,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval30CF,basisEval3143,basisEval30B7,basisEval3144,basisEval3145,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval3147,basisEval30E5,basisEval3148,basisEval30B7,basisEval30EB,basisEval312D,basisEval3149,basisEval30B7,basisEval314A,basisEval314B,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval314D,basisEval3132,basisEval3104,basisEval314E,basisEval30B7,basisEval314F,basisEval310C,basisEval3150,basisEval3151,basisEval30B7,basisEval3152,basisEval313B,basisEval3153,basisEval30B7,basisEval3154,basisEval3155,basisEval30B7,basisEval3140,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons3189#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3156,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval3157,basisEval3158,basisEval30B7,basisEval30B7,basisEval3125,basisEval30D7,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval315A,basisEval315B,basisEval315C,basisEval30B7,basisEval30B7,basisEval312C,basisEval30ED,basisEval315D,basisEval30B7,basisEval30B7,basisEval315E,basisEval312F,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval3160,basisEval3161,basisEval3162,basisEval3163,basisEval30B7,basisEval30B7,basisEval3136,basisEval310C,basisEval3164,basisEval3165,basisEval30B7,basisEval30B7,basisEval3166,basisEval313B,basisEval3116,basisEval30B7,basisEval30B7,basisEval3167,basisEval3168,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318A#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30B7,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval316B,basisEval3124,basisEval30B7,basisEval30B7,basisEval3125,basisEval3145,basisEval30B7,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval315A,basisEval316D,basisEval312B,basisEval30B7,basisEval30B7,basisEval316E,basisEval312D,basisEval316F,basisEval30B7,basisEval30B7,basisEval315E,basisEval3170,basisEval30B7,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval3172,basisEval3173,basisEval3174,basisEval3135,basisEval30B7,basisEval30B7,basisEval3175,basisEval310C,basisEval310E,basisEval3176,basisEval30B7,basisEval30B7,basisEval313A,basisEval3177,basisEval3153,basisEval30B7,basisEval30B7,basisEval3167,basisEval3178,basisEval30B7,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318B#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317A,basisEval30C4,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317B,basisEval3157,basisEval30D3,basisEval30B7,basisEval30B7,basisEval30D5,basisEval3145,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317C,basisEval317D,basisEval316D,basisEval30E9,basisEval30B7,basisEval30B7,basisEval317E,basisEval30ED,basisEval3149,basisEval30B7,basisEval30B7,basisEval314A,basisEval3170,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317F,basisEval3180,basisEval3161,basisEval3181,basisEval3108,basisEval30B7,basisEval30B7,basisEval3182,basisEval3183,basisEval310E,basisEval3151,basisEval30B7,basisEval30B7,basisEval3112,basisEval313B,basisEval3184,basisEval30B7,basisEval30B7,basisEval3185,basisEval3178,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          real vdot326F#1 = VDot<84>(dofs2F60,intermediateCons3186);
          real vdot3271#2 = VDot<84>(dofs2F60,intermediateCons3187);
          real vdot3273#2 = VDot<84>(dofs2F60,intermediateCons3188);
          tensor[3] tensor3274#1 = <tensor[3]>[vdot326F,vdot3271,vdot3273];
          real vdot3278#1 = VDot<84>(dofs2F60,intermediateCons3189);
          real vdot327A#2 = VDot<84>(dofs2F60,intermediateCons318A);
          tensor[3] tensor327B#1 = <tensor[3]>[vdot3271,vdot3278,vdot327A];
          real vdot3281#1 = VDot<84>(dofs2F60,intermediateCons318B);
          tensor[3] tensor3282#1 = <tensor[3]>[vdot3273,vdot327A,vdot3281];
          tensor[3,3] _t326D#1 = <tensor[3,3]>[tensor3274,tensor327B,tensor3282];
          (real[3] evals329A#2,tensor[3][3] E329B#2) = EigenVecs3x3(_t326D);
          tensor[3] _t329F#6 = Subscript<tensor[3][3]>(E329B,ilit2C18);
          real _t32A1#9 = Subscript<real[3]>(evals329A,ilit2C18);
          tensor[3] _t32A5#6 = Subscript<tensor[3][3]>(E329B,ilit2C15);
          real _t32A7#9 = Subscript<real[3]>(evals329A,ilit2C15);
          real _t32AD#1 = 0.15e1;
          real r32B0#1 = TensorIndex<tensor[3],[0]>(_t329F);
          tensor[3] binopV32B1#3 = VScale<3>(r32B0,_t329F);
          real r32B2#1 = TensorIndex<tensor[3],[1]>(_t329F);
          tensor[3] binopV32B3#3 = VScale<3>(r32B2,_t329F);
          real r32B4#1 = TensorIndex<tensor[3],[2]>(_t329F);
          tensor[3] binopV32B5#3 = VScale<3>(r32B4,_t329F);
          real r32BF#1 = TensorIndex<tensor[3],[0]>(_t32A5);
          tensor[3] binopV32C0#3 = VScale<3>(r32BF,_t32A5);
          real r32C1#1 = TensorIndex<tensor[3],[1]>(_t32A5);
          tensor[3] binopV32C2#3 = VScale<3>(r32C1,_t32A5);
          real r32C3#1 = TensorIndex<tensor[3],[2]>(_t32A5);
          tensor[3] binopV32C4#3 = VScale<3>(r32C3,_t32A5);
          real r32CE#1 = VIndex<3,0>(binopV32B1);
          real r32CF#1 = RDiv(r32CE,_t32A1);
          real r32D0#1 = VIndex<3,1>(binopV32B1);
          real r32D1#1 = RDiv(r32D0,_t32A1);
          real r32D2#1 = VIndex<3,2>(binopV32B1);
          real r32D3#1 = RDiv(r32D2,_t32A1);
          tensor[3] tensor32D4#1 = <tensor[3]>[r32CF,r32D1,r32D3];
          real r32D5#1 = VIndex<3,0>(binopV32B3);
          real r32D6#1 = RDiv(r32D5,_t32A1);
          real r32D7#1 = VIndex<3,1>(binopV32B3);
          real r32D8#1 = RDiv(r32D7,_t32A1);
          real r32D9#1 = VIndex<3,2>(binopV32B3);
          real r32DA#1 = RDiv(r32D9,_t32A1);
          tensor[3] tensor32DB#1 = <tensor[3]>[r32D6,r32D8,r32DA];
          real r32DC#1 = VIndex<3,0>(binopV32B5);
          real r32DD#1 = RDiv(r32DC,_t32A1);
          real r32DE#1 = VIndex<3,1>(binopV32B5);
          real r32DF#1 = RDiv(r32DE,_t32A1);
          real r32E0#1 = VIndex<3,2>(binopV32B5);
          real r32E1#1 = RDiv(r32E0,_t32A1);
          tensor[3] tensor32E2#1 = <tensor[3]>[r32DD,r32DF,r32E1];
          real r32FB#1 = VIndex<3,0>(binopV32C0);
          real r32FC#1 = RDiv(r32FB,_t32A7);
          real r32FD#1 = VIndex<3,1>(binopV32C0);
          real r32FE#1 = RDiv(r32FD,_t32A7);
          real r32FF#1 = VIndex<3,2>(binopV32C0);
          real r3300#1 = RDiv(r32FF,_t32A7);
          tensor[3] tensor3301#1 = <tensor[3]>[r32FC,r32FE,r3300];
          real r3302#1 = VIndex<3,0>(binopV32C2);
          real r3303#1 = RDiv(r3302,_t32A7);
          real r3304#1 = VIndex<3,1>(binopV32C2);
          real r3305#1 = RDiv(r3304,_t32A7);
          real r3306#1 = VIndex<3,2>(binopV32C2);
          real r3307#1 = RDiv(r3306,_t32A7);
          tensor[3] tensor3308#1 = <tensor[3]>[r3303,r3305,r3307];
          real r3309#1 = VIndex<3,0>(binopV32C4);
          real r330A#1 = RDiv(r3309,_t32A7);
          real r330B#1 = VIndex<3,1>(binopV32C4);
          real r330C#1 = RDiv(r330B,_t32A7);
          real r330D#1 = VIndex<3,2>(binopV32C4);
          real r330E#1 = RDiv(r330D,_t32A7);
          tensor[3] tensor330F#1 = <tensor[3]>[r330A,r330C,r330E];
          tensor[3] v332A#1 = VAdd<3>(tensor32D4,tensor3301);
          tensor[3] v332D#1 = VAdd<3>(tensor32DB,tensor3308);
          tensor[3] v3330#1 = VAdd<3>(tensor32E2,tensor330F);
          real basisEval3357#1 = RMul(one30B9,prod30CE);
          real basisEval336A#1 = RMul(one30B9,prod30E1);
          real basisEval336D#1 = RMul(one30B9,prod30E4);
          real basisEval3375#3 = RMul(coeff30B8,prod30EC);
          real basisEval3386#1 = RMul(one30B9,prod30FD);
          real basisEval3389#1 = RMul(one30B9,prod3100);
          real basisEval338C#1 = RMul(one30B9,prod3103);
          real basisEval3394#2 = RMul(coeff30B8,prod310B);
          real basisEval3396#2 = RMul(coeff30B8,prod310D);
          real basisEval339C#1 = RMul(coeff3123,prod3113);
          real prod533A7#1 = RMul(prod430F8,varAcc30B6);
          real prod33A8#1 = RMul(one30B9,prod533A7);
          real prod33A9#2 = RMul(one30B9,prod33A8);
          real basisEval33AA#2 = RMul(one30B9,prod33A9);
          real prod33AB#1 = RMul(varAcc30B5,prod430F8);
          real prod33AC#3 = RMul(one30B9,prod33AB);
          real basisEval33AD#1 = RMul(one30B9,prod33AC);
          real prod33AE#1 = RMul(prod230D0,prod330DC);
          real prod33AF#3 = RMul(one30B9,prod33AE);
          real basisEval33B0#1 = RMul(one30B9,prod33AF);
          real prod33B1#1 = RMul(prod330E6,prod230C9);
          real prod33B2#3 = RMul(one30B9,prod33B1);
          real basisEval33B3#1 = RMul(one30B9,prod33B2);
          real prod33B4#1 = RMul(prod43105,varAcc30B6);
          real prod33B5#3 = RMul(one30B9,prod33B4);
          real basisEval33B6#1 = RMul(one30B9,prod33B5);
          real prod533B7#1 = RMul(prod43105,varAcc30B5);
          real prod33B8#1 = RMul(prod533B7,one30B9);
          real prod33B9#2 = RMul(one30B9,prod33B8);
          real basisEval33BA#2 = RMul(one30B9,prod33B9);
          real prod33BB#3 = RMul(varAcc30B4,prod30F9);
          real basisEval33BC#1 = RMul(coeff30B8,prod33BB);
          real prod33BD#2 = RMul(varAcc30B4,prod30FC);
          real basisEval33BE#2 = RMul(coeff30B8,prod33BD);
          real prod33BF#2 = RMul(varAcc30B4,prod30FF);
          real basisEval33C0#1 = RMul(coeff30B8,prod33BF);
          real prod33C1#2 = RMul(varAcc30B4,prod3102);
          real basisEval33C2#2 = RMul(coeff30B8,prod33C1);
          real prod33C3#3 = RMul(varAcc30B4,prod3106);
          real basisEval33C4#1 = RMul(coeff30B8,prod33C3);
          real prod33C5#3 = RMul(prod230D9,prod30DD);
          real basisEval33C6#1 = RMul(coeff3123,prod33C5);
          real prod33C7#2 = RMul(prod230D9,prod30E0);
          real basisEval33C8#2 = RMul(coeff3123,prod33C7);
          real prod33C9#2 = RMul(prod230D9,prod30E3);
          real basisEval33CA#2 = RMul(coeff3123,prod33C9);
          real prod33CB#3 = RMul(prod230D9,prod30E7);
          real basisEval33CC#1 = RMul(coeff3123,prod33CB);
          real prod33CD#3 = RMul(prod330F5,prod30CA);
          real basisEval33CE#1 = RMul(coeff3126,prod33CD);
          real prod33CF#2 = RMul(prod330F5,prod30CD);
          real basisEval33D0#1 = RMul(coeff3126,prod33CF);
          real prod33D1#3 = RMul(prod330F5,prod30D1);
          real basisEval33D2#1 = RMul(coeff3126,prod33D1);
          real prod33D3#3 = RMul(prod4311C,prod30BE);
          real basisEval33D4#1 = RMul(coeff3134,prod33D3);
          real prod33D5#3 = RMul(prod4311C,prod30C2);
          real basisEval33D6#1 = RMul(coeff3134,prod33D5);
          real prod533D8#1 = RMul(prod4311C,varAcc30B4);
          real prod33D9#2 = RMul(prod533D8,prod30BA);
          real basisEval33DA#1 = RMul(coeff30C5,prod33D9);
          real basisEval33DF#1 = RMul(one30B9,prod30D4);
          real basisEval33E4#1 = RMul(one30B9,prod30EA);
          real basisEval33E6#1 = RMul(one30B9,prod30F0);
          real basisEval33ED#1 = RMul(one30B9,prod3109);
          real basisEval33EE#1 = RMul(coeff3123,prod310D);
          real basisEval33F0#1 = RMul(one30B9,prod3111);
          real basisEval33F1#2 = RMul(coeff30B8,prod3113);
          real basisEval33F2#1 = RMul(one30B9,prod3117);
          real basisEval33F5#1 = RMul(coeff30B8,prod33AC);
          real basisEval33F6#1 = RMul(coeff3123,prod33AF);
          real basisEval33F7#1 = RMul(coeff3126,prod33B2);
          real basisEval33F8#1 = RMul(coeff3134,prod33B5);
          real basisEval33F9#1 = RMul(coeff30C5,prod33B9);
          real basisEval33FA#1 = RMul(one30B9,prod33BB);
          real basisEval33FB#2 = RMul(coeff3123,prod33BF);
          real basisEval33FC#1 = RMul(coeff3126,prod33C1);
          real basisEval33FD#1 = RMul(coeff3134,prod33C3);
          real basisEval33FE#1 = RMul(one30B9,prod33C5);
          real basisEval33FF#1 = RMul(coeff30B8,prod33C7);
          real basisEval3400#1 = RMul(coeff3126,prod33CB);
          real basisEval3401#1 = RMul(one30B9,prod33CD);
          real basisEval3402#2 = RMul(coeff30B8,prod33CF);
          real basisEval3403#1 = RMul(coeff3123,prod33D1);
          real basisEval3404#1 = RMul(one30B9,prod33D3);
          real basisEval3405#1 = RMul(coeff30B8,prod33D5);
          real basisEval3406#2 = RMul(one30B9,prod33D9);
          real basisEval3409#1 = RMul(one30B9,prod30D6);
          real basisEval340E#1 = RMul(one30B9,prod30EE);
          real basisEval3410#1 = RMul(one30B9,prod30F2);
          real basisEval3415#1 = RMul(coeff3123,prod310B);
          real basisEval3416#1 = RMul(one30B9,prod310F);
          real basisEval3417#1 = RMul(one30B9,prod3115);
          real basisEval3419#1 = RMul(one30B9,prod3119);
          real basisEval341A#1 = RMul(coeff30C5,prod33A9);
          real basisEval341B#1 = RMul(coeff3134,prod33AC);
          real basisEval341C#1 = RMul(coeff3126,prod33AF);
          real basisEval341D#1 = RMul(coeff3123,prod33B2);
          real basisEval341E#1 = RMul(coeff30B8,prod33B5);
          real basisEval341F#1 = RMul(coeff3134,prod33BB);
          real basisEval3420#1 = RMul(coeff3126,prod33BD);
          real basisEval3421#1 = RMul(one30B9,prod33C3);
          real basisEval3422#1 = RMul(coeff3126,prod33C5);
          real basisEval3423#1 = RMul(coeff30B8,prod33C9);
          real basisEval3424#1 = RMul(one30B9,prod33CB);
          real basisEval3425#1 = RMul(coeff3123,prod33CD);
          real basisEval3426#1 = RMul(one30B9,prod33D1);
          real basisEval3427#1 = RMul(coeff30B8,prod33D3);
          real basisEval3428#1 = RMul(one30B9,prod33D5);
          tensor[84] intermediateCons3429#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3120,basisEval3141,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3122,basisEval3357,basisEval3143,basisEval3125,basisEval3145,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3129,basisEval336A,basisEval336D,basisEval3148,basisEval312C,basisEval3375,basisEval3149,basisEval312E,basisEval314B,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3131,basisEval3386,basisEval3389,basisEval338C,basisEval314E,basisEval3136,basisEval3394,basisEval3396,basisEval3151,basisEval313A,basisEval339C,basisEval3153,basisEval313E,basisEval3155,basisEval3140,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval33AA,basisEval33AD,basisEval33B0,basisEval33B3,basisEval33B6,basisEval33BA,basisEval33BC,basisEval33BE,basisEval33C0,basisEval33C2,basisEval33C4,basisEval33C6,basisEval33C8,basisEval33CA,basisEval33CC,basisEval33CE,basisEval33D0,basisEval33D2,basisEval33D4,basisEval33D6,basisEval33DA];
          tensor[84] intermediateCons342A#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval3120,basisEval30C4,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval3122,basisEval30CF,basisEval3124,basisEval30B7,basisEval33DF,basisEval3145,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval3129,basisEval30E2,basisEval312A,basisEval312B,basisEval30B7,basisEval33E4,basisEval3375,basisEval316F,basisEval30B7,basisEval33E6,basisEval3170,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval3131,basisEval30FE,basisEval3132,basisEval3133,basisEval3135,basisEval30B7,basisEval33ED,basisEval3394,basisEval33EE,basisEval3176,basisEval30B7,basisEval33F0,basisEval33F1,basisEval3153,basisEval30B7,basisEval33F2,basisEval3178,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval33AA,basisEval33F5,basisEval33F6,basisEval33F7,basisEval33F8,basisEval33F9,basisEval30B7,basisEval33FA,basisEval33BE,basisEval33FB,basisEval33FC,basisEval33FD,basisEval30B7,basisEval33FE,basisEval33FF,basisEval33CA,basisEval3400,basisEval30B7,basisEval3401,basisEval3402,basisEval3403,basisEval30B7,basisEval3404,basisEval3405,basisEval30B7,basisEval3406,basisEval30B7];
          tensor[84] intermediateCons342B#1 = <tensor[84]>[basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3141,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval3142,basisEval30CF,basisEval3143,basisEval30B7,basisEval3125,basisEval3409,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval3146,basisEval3147,basisEval30E5,basisEval3148,basisEval30B7,basisEval316E,basisEval3375,basisEval340E,basisEval30B7,basisEval315E,basisEval3410,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval314C,basisEval314D,basisEval3132,basisEval3104,basisEval314E,basisEval30B7,basisEval3175,basisEval3415,basisEval3396,basisEval3416,basisEval30B7,basisEval313A,basisEval33F1,basisEval3417,basisEval30B7,basisEval3167,basisEval3419,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval341A,basisEval341B,basisEval341C,basisEval341D,basisEval341E,basisEval33BA,basisEval30B7,basisEval341F,basisEval3420,basisEval33FB,basisEval33C2,basisEval3421,basisEval30B7,basisEval3422,basisEval33C8,basisEval3423,basisEval3424,basisEval30B7,basisEval3425,basisEval3402,basisEval3426,basisEval30B7,basisEval3427,basisEval3428,basisEval30B7,basisEval3406,basisEval30B7,basisEval30B7];
          real vdot3520#1 = VDot<84>(dofs2F60,intermediateCons3429);
          real vdot3522#1 = VDot<84>(dofs2F60,intermediateCons342A);
          real vdot3524#1 = VDot<84>(dofs2F60,intermediateCons342B);
          tensor[3] probe_l_21351E#3 = <tensor[3]>[vdot3520,vdot3522,vdot3524];
          tensor[3] negV352F#1 = VNeg<3>(v332A);
          tensor[3] negV3531#1 = VNeg<3>(v332D);
          tensor[3] negV3533#1 = VNeg<3>(v3330);
          real vdot353E#1 = VDot<3>(negV352F,probe_l_21351E);
          real vdot3540#1 = VDot<3>(negV3531,probe_l_21351E);
          real vdot3542#1 = VDot<3>(negV3533,probe_l_21351E);
          tensor[3] op1_e3_l_30353C#5 = <tensor[3]>[vdot353E,vdot3540,vdot3542];
          real op1_e3_l_32354B#1 = VDot<3>(op1_e3_l_30353C,op1_e3_l_30353C);
          real op1_e3_l_33354E#3 = Sqrt(op1_e3_l_32354B);
          real op1_e3_l_343551#1 = Abs<real>(op1_e3_l_33354E);
          real op1_e3_l_353554#1 = RDiv(op1_e3_l_343551,thick2323);
          real op1_e3_l_363557#1 = RSub(one30B9,op1_e3_l_353554);
          real op1_e3_l_37355A#1 = RMul(_t32AD,op1_e3_l_363557);
          real op1_e3_l_38355D#1 = RClamp(basisEval30B7,one30B9,op1_e3_l_37355A);
          real _t3560#2 = RMul(maxAlpha232B,op1_e3_l_38355D);
          bool _t3563#1 = EQ<real>(_t3560,basisEval30B7);
          if _t3563 then goto SAVE3566 else goto JOIN3568
        SAVE3566:  preds = [COND3565]
          self.rayN = rayN234F;
          active
          goto JOIN3568
        JOIN3568:  preds = [*ACTIVE3567,COND3565]
          real _t356F#1 = RSub(one30B9,_t3560);
          real _t3572#1 = MathFn<pow>(_t356F,alphaFix233F);
          bool _t3574#1 = NEQ<real>(phKs2347,basisEval30B7);
          if _t3574 then goto ASSIGN3579 else goto JOIN359C
        ASSIGN3579:  preds = [COND3576]
          tensor[3] op1_e3_l_243577#3 = VAdd<3>(eyeDir2341,litwsp2337);
          real op1_e3_l_26357A#1 = VDot<3>(op1_e3_l_243577,op1_e3_l_243577);
          real op1_e3_l_27357D#1 = Sqrt(op1_e3_l_26357A);
          real op1_e3_l_543580#1 = RDiv(one30B9,op1_e3_l_33354E);
          tensor[3] op1_e3_l_553585#1 = VScale<3>(op1_e3_l_543580,op1_e3_l_30353C);
          tensor[3] op1_e3_l_563588#1 = VNeg<3>(op1_e3_l_553585);
          real op1_e3_l_58358B#1 = RDiv(one30B9,op1_e3_l_27357D);
          real op1_e3_l_593590#1 = VDot<3>(op1_e3_l_563588,op1_e3_l_243577);
          real op1_e3_l_603593#1 = RMul(op1_e3_l_58358B,op1_e3_l_593590);
          real _t3596#1 = Abs<real>(op1_e3_l_603593);
          real scomp3599#1 = MathFn<pow>(_t3596,phSp2349);
          goto JOIN359C
        JOIN359C:  preds = [ASSIGN359A,COND3576]
          real scomp359B#1 = phi(scomp3599,basisEval30B7)
          real cmin359D#3 = VIndex<2,0>(cminmax2331);
          real cmax359F#2 = VIndex<2,1>(cminmax2331);
          tensor[3] mcol35A1#1 = <tensor[3]>[one30B9,one30B9,one30B9];
          bool _t35A3#1 = NEQ<real>(cmin359D,cmax359F);
          if _t35A3 then goto ASSIGN3BC8 else goto JOIN37E5
        ASSIGN3BC8:  preds = [COND35A5]
          tensor[3] _t35A6#3 = VAdd<3>(pos235B,op1_e3_l_30353C);
          real varAcc35AC#27 = VIndex<3,0>(_t35A6);
          real varAcc35AD#12 = VIndex<3,1>(_t35A6);
          real varAcc35AE#12 = VIndex<3,2>(_t35A6);
          real prod35B4#6 = RMul(one30B9,varAcc35AE);
          real prod35B5#1 = RMul(one30B9,prod35B4);
          real basisEval35B6#1 = RMul(one30B9,prod35B5);
          real prod35B8#6 = RMul(varAcc35AD,one30B9);
          real prod35B9#1 = RMul(one30B9,prod35B8);
          real basisEval35BA#1 = RMul(one30B9,prod35B9);
          real prod35BC#1 = RMul(varAcc35AC,prod30BA);
          real basisEval35BD#1 = RMul(one30B9,prod35BC);
          real prod235BE#6 = RMul(varAcc35AE,varAcc35AE);
          real prod35BF#5 = RMul(one30B9,prod235BE);
          real prod35C0#1 = RMul(one30B9,prod35BF);
          real basisEval35C1#1 = RMul(one30B9,prod35C0);
          real prod35C2#5 = RMul(varAcc35AD,varAcc35AE);
          real prod35C3#1 = RMul(one30B9,prod35C2);
          real basisEval35C4#1 = RMul(one30B9,prod35C3);
          real prod235C5#6 = RMul(varAcc35AD,varAcc35AD);
          real prod35C6#5 = RMul(prod235C5,one30B9);
          real prod35C7#1 = RMul(one30B9,prod35C6);
          real basisEval35C8#1 = RMul(one30B9,prod35C7);
          real prod35C9#1 = RMul(varAcc35AC,prod35B4);
          real basisEval35CA#1 = RMul(one30B9,prod35C9);
          real prod35CB#1 = RMul(varAcc35AC,prod35B8);
          real basisEval35CC#1 = RMul(one30B9,prod35CB);
          real prod235CD#16 = RMul(varAcc35AC,varAcc35AC);
          real prod35CE#1 = RMul(prod235CD,prod30BA);
          real basisEval35CF#1 = RMul(one30B9,prod35CE);
          real prod335D0#5 = RMul(prod235BE,varAcc35AE);
          real prod35D1#4 = RMul(one30B9,prod335D0);
          real prod35D2#1 = RMul(one30B9,prod35D1);
          real basisEval35D3#1 = RMul(one30B9,prod35D2);
          real prod35D4#4 = RMul(varAcc35AD,prod235BE);
          real prod35D5#1 = RMul(one30B9,prod35D4);
          real basisEval35D6#1 = RMul(one30B9,prod35D5);
          real prod35D7#4 = RMul(prod235C5,varAcc35AE);
          real prod35D8#1 = RMul(one30B9,prod35D7);
          real basisEval35D9#1 = RMul(one30B9,prod35D8);
          real prod335DA#5 = RMul(prod235C5,varAcc35AD);
          real prod35DB#4 = RMul(prod335DA,one30B9);
          real prod35DC#1 = RMul(one30B9,prod35DB);
          real basisEval35DD#1 = RMul(one30B9,prod35DC);
          real prod35DE#1 = RMul(varAcc35AC,prod35BF);
          real basisEval35DF#1 = RMul(one30B9,prod35DE);
          real prod35E0#1 = RMul(varAcc35AC,prod35C2);
          real basisEval35E1#1 = RMul(one30B9,prod35E0);
          real prod35E2#1 = RMul(varAcc35AC,prod35C6);
          real basisEval35E3#1 = RMul(one30B9,prod35E2);
          real prod35E4#1 = RMul(prod235CD,prod35B4);
          real basisEval35E5#1 = RMul(one30B9,prod35E4);
          real prod35E6#1 = RMul(prod235CD,prod35B8);
          real basisEval35E7#1 = RMul(one30B9,prod35E6);
          real prod335E8#11 = RMul(prod235CD,varAcc35AC);
          real prod35E9#1 = RMul(prod335E8,prod30BA);
          real basisEval35EA#1 = RMul(one30B9,prod35E9);
          real prod435EB#4 = RMul(prod335D0,varAcc35AE);
          real prod35EC#3 = RMul(one30B9,prod435EB);
          real prod35ED#1 = RMul(one30B9,prod35EC);
          real basisEval35EE#1 = RMul(one30B9,prod35ED);
          real prod35EF#3 = RMul(varAcc35AD,prod335D0);
          real prod35F0#1 = RMul(one30B9,prod35EF);
          real basisEval35F1#1 = RMul(one30B9,prod35F0);
          real prod35F2#3 = RMul(prod235C5,prod235BE);
          real prod35F3#1 = RMul(one30B9,prod35F2);
          real basisEval35F4#1 = RMul(one30B9,prod35F3);
          real prod35F5#3 = RMul(prod335DA,varAcc35AE);
          real prod35F6#1 = RMul(one30B9,prod35F5);
          real basisEval35F7#1 = RMul(one30B9,prod35F6);
          real prod435F8#4 = RMul(prod335DA,varAcc35AD);
          real prod35F9#3 = RMul(prod435F8,one30B9);
          real prod35FA#1 = RMul(one30B9,prod35F9);
          real basisEval35FB#1 = RMul(one30B9,prod35FA);
          real prod35FC#1 = RMul(varAcc35AC,prod35D1);
          real basisEval35FD#1 = RMul(one30B9,prod35FC);
          real prod35FE#1 = RMul(varAcc35AC,prod35D4);
          real basisEval35FF#1 = RMul(one30B9,prod35FE);
          real prod3600#1 = RMul(varAcc35AC,prod35D7);
          real basisEval3601#1 = RMul(one30B9,prod3600);
          real prod3602#1 = RMul(varAcc35AC,prod35DB);
          real basisEval3603#1 = RMul(one30B9,prod3602);
          real prod3604#1 = RMul(prod235CD,prod35BF);
          real basisEval3605#1 = RMul(one30B9,prod3604);
          real prod3606#1 = RMul(prod235CD,prod35C2);
          real basisEval3607#1 = RMul(one30B9,prod3606);
          real prod3608#1 = RMul(prod235CD,prod35C6);
          real basisEval3609#1 = RMul(one30B9,prod3608);
          real prod360A#1 = RMul(prod335E8,prod35B4);
          real basisEval360B#1 = RMul(one30B9,prod360A);
          real prod360C#1 = RMul(prod335E8,prod35B8);
          real basisEval360D#1 = RMul(one30B9,prod360C);
          real prod4360E#7 = RMul(prod335E8,varAcc35AC);
          real prod360F#1 = RMul(prod4360E,prod30BA);
          real basisEval3610#1 = RMul(one30B9,prod360F);
          real prod53611#3 = RMul(prod435EB,varAcc35AE);
          real prod3612#2 = RMul(one30B9,prod53611);
          real prod3613#1 = RMul(one30B9,prod3612);
          real basisEval3614#1 = RMul(one30B9,prod3613);
          real prod3615#2 = RMul(varAcc35AD,prod435EB);
          real prod3616#1 = RMul(one30B9,prod3615);
          real basisEval3617#1 = RMul(one30B9,prod3616);
          real prod3618#2 = RMul(prod235C5,prod335D0);
          real prod3619#1 = RMul(one30B9,prod3618);
          real basisEval361A#1 = RMul(one30B9,prod3619);
          real prod361B#2 = RMul(prod335DA,prod235BE);
          real prod361C#1 = RMul(one30B9,prod361B);
          real basisEval361D#1 = RMul(one30B9,prod361C);
          real prod361E#2 = RMul(prod435F8,varAcc35AE);
          real prod361F#1 = RMul(one30B9,prod361E);
          real basisEval3620#1 = RMul(one30B9,prod361F);
          real prod53621#3 = RMul(prod435F8,varAcc35AD);
          real prod3622#2 = RMul(prod53621,one30B9);
          real prod3623#1 = RMul(one30B9,prod3622);
          real basisEval3624#1 = RMul(one30B9,prod3623);
          real prod3625#1 = RMul(varAcc35AC,prod35EC);
          real basisEval3626#1 = RMul(one30B9,prod3625);
          real prod3627#1 = RMul(varAcc35AC,prod35EF);
          real basisEval3628#1 = RMul(one30B9,prod3627);
          real prod3629#1 = RMul(varAcc35AC,prod35F2);
          real basisEval362A#1 = RMul(one30B9,prod3629);
          real prod362B#1 = RMul(varAcc35AC,prod35F5);
          real basisEval362C#1 = RMul(one30B9,prod362B);
          real prod362D#1 = RMul(varAcc35AC,prod35F9);
          real basisEval362E#1 = RMul(one30B9,prod362D);
          real prod362F#1 = RMul(prod235CD,prod35D1);
          real basisEval3630#1 = RMul(one30B9,prod362F);
          real prod3631#1 = RMul(prod235CD,prod35D4);
          real basisEval3632#1 = RMul(one30B9,prod3631);
          real prod3633#1 = RMul(prod235CD,prod35D7);
          real basisEval3634#1 = RMul(one30B9,prod3633);
          real prod3635#1 = RMul(prod235CD,prod35DB);
          real basisEval3636#1 = RMul(one30B9,prod3635);
          real prod3637#1 = RMul(prod335E8,prod35BF);
          real basisEval3638#1 = RMul(one30B9,prod3637);
          real prod3639#1 = RMul(prod335E8,prod35C2);
          real basisEval363A#1 = RMul(one30B9,prod3639);
          real prod363B#1 = RMul(prod335E8,prod35C6);
          real basisEval363C#1 = RMul(one30B9,prod363B);
          real prod363D#1 = RMul(prod4360E,prod35B4);
          real basisEval363E#1 = RMul(one30B9,prod363D);
          real prod363F#1 = RMul(prod4360E,prod35B8);
          real basisEval3640#1 = RMul(one30B9,prod363F);
          real prod53641#4 = RMul(prod4360E,varAcc35AC);
          real prod3642#1 = RMul(prod53641,prod30BA);
          real basisEval3643#1 = RMul(one30B9,prod3642);
          real prod63644#1 = RMul(prod53611,varAcc35AE);
          real prod3645#1 = RMul(one30B9,prod63644);
          real prod3646#1 = RMul(one30B9,prod3645);
          real basisEval3647#1 = RMul(one30B9,prod3646);
          real prod3648#1 = RMul(varAcc35AD,prod53611);
          real prod3649#1 = RMul(one30B9,prod3648);
          real basisEval364A#1 = RMul(one30B9,prod3649);
          real prod364B#1 = RMul(prod235C5,prod435EB);
          real prod364C#1 = RMul(one30B9,prod364B);
          real basisEval364D#1 = RMul(one30B9,prod364C);
          real prod364E#1 = RMul(prod335DA,prod335D0);
          real prod364F#1 = RMul(one30B9,prod364E);
          real basisEval3650#1 = RMul(one30B9,prod364F);
          real prod3651#1 = RMul(prod435F8,prod235BE);
          real prod3652#1 = RMul(one30B9,prod3651);
          real basisEval3653#1 = RMul(one30B9,prod3652);
          real prod3654#1 = RMul(prod53621,varAcc35AE);
          real prod3655#1 = RMul(one30B9,prod3654);
          real basisEval3656#1 = RMul(one30B9,prod3655);
          real prod63657#1 = RMul(prod53621,varAcc35AD);
          real prod3658#1 = RMul(prod63657,one30B9);
          real prod3659#1 = RMul(one30B9,prod3658);
          real basisEval365A#1 = RMul(one30B9,prod3659);
          real prod365B#1 = RMul(varAcc35AC,prod3612);
          real basisEval365C#1 = RMul(one30B9,prod365B);
          real prod365D#1 = RMul(varAcc35AC,prod3615);
          real basisEval365E#1 = RMul(one30B9,prod365D);
          real prod365F#1 = RMul(varAcc35AC,prod3618);
          real basisEval3660#1 = RMul(one30B9,prod365F);
          real prod3661#1 = RMul(varAcc35AC,prod361B);
          real basisEval3662#1 = RMul(one30B9,prod3661);
          real prod3663#1 = RMul(varAcc35AC,prod361E);
          real basisEval3664#1 = RMul(one30B9,prod3663);
          real prod3665#1 = RMul(varAcc35AC,prod3622);
          real basisEval3666#1 = RMul(one30B9,prod3665);
          real prod3667#1 = RMul(prod235CD,prod35EC);
          real basisEval3668#1 = RMul(one30B9,prod3667);
          real prod3669#1 = RMul(prod235CD,prod35EF);
          real basisEval366A#1 = RMul(one30B9,prod3669);
          real prod366B#1 = RMul(prod235CD,prod35F2);
          real basisEval366C#1 = RMul(one30B9,prod366B);
          real prod366D#1 = RMul(prod235CD,prod35F5);
          real basisEval366E#1 = RMul(one30B9,prod366D);
          real prod366F#1 = RMul(prod235CD,prod35F9);
          real basisEval3670#1 = RMul(one30B9,prod366F);
          real prod3671#1 = RMul(prod335E8,prod35D1);
          real basisEval3672#1 = RMul(one30B9,prod3671);
          real prod3673#1 = RMul(prod335E8,prod35D4);
          real basisEval3674#1 = RMul(one30B9,prod3673);
          real prod3675#1 = RMul(prod335E8,prod35D7);
          real basisEval3676#1 = RMul(one30B9,prod3675);
          real prod3677#1 = RMul(prod335E8,prod35DB);
          real basisEval3678#1 = RMul(one30B9,prod3677);
          real prod3679#1 = RMul(prod4360E,prod35BF);
          real basisEval367A#1 = RMul(one30B9,prod3679);
          real prod367B#1 = RMul(prod4360E,prod35C2);
          real basisEval367C#1 = RMul(one30B9,prod367B);
          real prod367D#1 = RMul(prod4360E,prod35C6);
          real basisEval367E#1 = RMul(one30B9,prod367D);
          real prod367F#1 = RMul(prod53641,prod35B4);
          real basisEval3680#1 = RMul(one30B9,prod367F);
          real prod3681#1 = RMul(prod53641,prod35B8);
          real basisEval3682#1 = RMul(one30B9,prod3681);
          real prod63683#1 = RMul(prod53641,varAcc35AC);
          real prod3684#1 = RMul(prod63683,prod30BA);
          real basisEval3685#1 = RMul(one30B9,prod3684);
          tensor[84] intermediateCons3686#1 = <tensor[84]>[basisEval311F,basisEval35B6,basisEval35BA,basisEval35BD,basisEval35C1,basisEval35C4,basisEval35C8,basisEval35CA,basisEval35CC,basisEval35CF,basisEval35D3,basisEval35D6,basisEval35D9,basisEval35DD,basisEval35DF,basisEval35E1,basisEval35E3,basisEval35E5,basisEval35E7,basisEval35EA,basisEval35EE,basisEval35F1,basisEval35F4,basisEval35F7,basisEval35FB,basisEval35FD,basisEval35FF,basisEval3601,basisEval3603,basisEval3605,basisEval3607,basisEval3609,basisEval360B,basisEval360D,basisEval3610,basisEval3614,basisEval3617,basisEval361A,basisEval361D,basisEval3620,basisEval3624,basisEval3626,basisEval3628,basisEval362A,basisEval362C,basisEval362E,basisEval3630,basisEval3632,basisEval3634,basisEval3636,basisEval3638,basisEval363A,basisEval363C,basisEval363E,basisEval3640,basisEval3643,basisEval3647,basisEval364A,basisEval364D,basisEval3650,basisEval3653,basisEval3656,basisEval365A,basisEval365C,basisEval365E,basisEval3660,basisEval3662,basisEval3664,basisEval3666,basisEval3668,basisEval366A,basisEval366C,basisEval366E,basisEval3670,basisEval3672,basisEval3674,basisEval3676,basisEval3678,basisEval367A,basisEval367C,basisEval367E,basisEval3680,basisEval3682,basisEval3685];
          real probe_l_83763#1 = VDot<84>(dofs2F60,intermediateCons3686);
          real op1_e3_l_93766#1 = RSub(probe_l_83763,cmin359D);
          real op1_e3_l_103769#1 = RSub(cmax359F,cmin359D);
          real op1_e3_l_11376C#1 = RDiv(op1_e3_l_93766,op1_e3_l_103769);
          real op1_e3_l_12376F#1 = RSub(one30B9,basisEval30B7);
          real op1_e3_l_133772#1 = RMul(op1_e3_l_11376C,op1_e3_l_12376F);
          real _t3775#1 = RAdd(basisEval30B7,op1_e3_l_133772);
          real Mtransform3778#1 = Transform<IMAGE1D<double[3]>>(cmap2311);
          real MxPos377A#1 = RMul(Mtransform3778,_t3775);
          real Ttranslate377D#1 = Translate<IMAGE1D<double[3]>>(cmap2311);
          real imgPos377F#2 = RAdd(MxPos377A,Ttranslate377D);
          real nd3782#2 = Floor<1>(imgPos377F);
          real f3784#2 = RSub(imgPos377F,nd3782);
          int n3787#5 = RealToInt<1>(nd3782);
          bool isInside378B#1 = IndexInside<IMAGE1D<double[3]>,2>(n3787,cmap2311);
          if isInside378B then goto ASSIGN3C76 else goto ASSIGN3C6E
        ASSIGN3C76:  preds = [COND378D]
          int offp3792#3 = IMul(ilit2C1B,n3787);
          real v0_3793#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3792);
          int addRes3795#1 = IAdd(n3787,ilit2C15);
          int offp3796#3 = IMul(ilit2C1B,addRes3795);
          real v1_3797#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3796);
          tensor[2] v_3798#1 = <tensor[2]>[v0_3793,v1_3797];
          int offp3799#1 = IAdd(offp3792,ilit2C15);
          real v0_379A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3799);
          int offp379B#1 = IAdd(offp3796,ilit2C15);
          real v1_379C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379B);
          tensor[2] v_379D#1 = <tensor[2]>[v0_379A,v1_379C];
          int offp379F#1 = IAdd(offp3792,ilit2C18);
          real v0_37A0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379F);
          int offp37A1#1 = IAdd(offp3796,ilit2C18);
          real v1_37A2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp37A1);
          tensor[2] v_37A3#1 = <tensor[2]>[v0_37A0,v1_37A2];
          tensor[3,2] voxels37A4#1 = <tensor[3,2]>[v_3798,v_379D,v_37A3];
          goto JOIN37BE
        JOIN37BE:  preds = [ASSIGN37BA,ASSIGN3897]
          tensor[3,2] ldvox37BC#3 = phi(voxels37A4,voxels387F)
          real idx37C1#1 = RSub(f3784,one30B9);
          tensor[2] kernX_37BF#1 = <tensor[2]>[f3784,idx37C1];
          tensor[2] a037C6#1 = <tensor[2]>[one30B9,one30B9];
          real _f37C8#1 = -0.1e1;
          tensor[2] a137C7#1 = <tensor[2]>[_f37C8,one30B9];
          tensor[2] prod137CC#1 = VMul<2>(kernX_37BF,a137C7);
          tensor[2] kevalX_d0_37C5#3 = VAdd<2>(a037C6,prod137CC);
          tensor[2] projIx37D6#1 = ProjectLast<tensor[3,2],[0]>(ldvox37BC);
          real vdot37D7#1 = VDot<2>(projIx37D6,kevalX_d0_37C5);
          tensor[2] projIx37D8#1 = ProjectLast<tensor[3,2],[1]>(ldvox37BC);
          real vdot37D9#1 = VDot<2>(projIx37D8,kevalX_d0_37C5);
          tensor[2] projIx37DA#1 = ProjectLast<tensor[3,2],[2]>(ldvox37BC);
          real vdot37DB#1 = VDot<2>(projIx37DA,kevalX_d0_37C5);
          tensor[3] mcol37D5#1 = <tensor[3]>[vdot37D7,vdot37D9,vdot37DB];
          goto JOIN37E5
        JOIN37E5:  preds = [ASSIGN37E3,COND35A5]
          tensor[3] mcol37E4#3 = phi(mcol37D5,mcol35A1)
          real op1_e3_l_6337E6#1 = RDiv(one30B9,op1_e3_l_33354E);
          tensor[3] op1_e3_l_6437EB#1 = VScale<3>(op1_e3_l_6337E6,op1_e3_l_30353C);
          tensor[3] op1_e3_l_6537EE#1 = VNeg<3>(op1_e3_l_6437EB);
          real op1_e3_l_6637F1#2 = VDot<3>(op1_e3_l_6537EE,litwsp2337);
          real op1_e3_l_6737F4#1 = RMul(op1_e3_l_6637F1,op1_e3_l_6637F1);
          real op1_e3_l_6837F7#1 = RMul(phKd2345,op1_e3_l_6737F4);
          real op1_e3_l_7037FA#1 = RSub(rayN234F,camNearVsp2333);
          real op1_e3_l_7137FD#1 = RSub(camFarVsp2335,camNearVsp2333);
          real op1_e3_l_723800#1 = RDiv(op1_e3_l_7037FA,op1_e3_l_7137FD);
          tensor[3] op1_e3_l_733803#1 = VSub<3>(mcFar232F,mcNear232D);
          tensor[3] op1_e3_l_743806#1 = VScale<3>(op1_e3_l_723800,op1_e3_l_733803);
          real op1_e3_l_753809#3 = RAdd(phKa2343,op1_e3_l_6837F7);
          tensor[3] op1_e3_l_76380C#3 = VAdd<3>(mcNear232D,op1_e3_l_743806);
          real r3810#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_76380C);
          real r3811#1 = TensorIndex<tensor[3],[0]>(mcol37E4);
          real r3812#1 = RMul(op1_e3_l_753809,r3810);
          real r3813#1 = RMul(r3812,r3811);
          real r3814#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_76380C);
          real r3815#1 = TensorIndex<tensor[3],[1]>(mcol37E4);
          real r3816#1 = RMul(op1_e3_l_753809,r3814);
          real r3817#1 = RMul(r3816,r3815);
          real r3818#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_76380C);
          real r3819#1 = TensorIndex<tensor[3],[2]>(mcol37E4);
          real r381A#1 = RMul(op1_e3_l_753809,r3818);
          real r381B#1 = RMul(r381A,r3819);
          tensor[3] op1_e3_l_77380F#1 = <tensor[3]>[r3813,r3817,r381B];
          real r382C#1 = RMul(phKs2347,scomp359B);
          real r382D#3 = RMul(r382C,one30B9);
          tensor[3] op1_e3_l_78382A#1 = <tensor[3]>[r382D,r382D,r382D];
          real op1_e3_l_79383B#2 = RSub(one30B9,_t3572);
          tensor[3] op1_e3_l_80383E#3 = VAdd<3>(op1_e3_l_77380F,op1_e3_l_78382A);
          real r3842#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_80383E);
          real r3843#3 = RMul(transp234D,op1_e3_l_79383B);
          real r3844#1 = RMul(r3843,r3842);
          real r3845#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_80383E);
          real r3846#1 = RMul(r3843,r3845);
          real r3847#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_80383E);
          real r3848#1 = RMul(r3843,r3847);
          tensor[3] op1_e3_l_813841#1 = <tensor[3]>[r3844,r3846,r3848];
          tensor[3] rgb3852#2 = VAdd<3>(rgb234B,op1_e3_l_813841);
          real op1_e3_l_53855#1 = RSub(one30B9,op1_e3_l_79383B);
          real transp3858#2 = RMul(transp234D,op1_e3_l_53855);
          bool _t385B#1 = LT<real>(transp3858,transp02321);
          if _t385B then goto SAVE385E else goto JOIN3863
        SAVE385E:  preds = [COND385D]
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = basisEval30B7;
          stabilize
          goto JOIN3863
        JOIN3863:  preds = [*STABILIZE3861,COND385D]
          real transp3862#1 = phi(transp3858)
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = transp3862;
          active
        ASSIGN3C6E:  preds = [COND378D]
          int ix386A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,n3787);
          int offp386C#3 = IMul(ilit2C1B,ix386A);
          real v0_386D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp386C);
          int addRes386F#1 = IAdd(n3787,ilit2C15);
          int ix3870#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,addRes386F);
          int offp3871#3 = IMul(ilit2C1B,ix3870);
          real v1_3872#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3871);
          tensor[2] v_3873#1 = <tensor[2]>[v0_386D,v1_3872];
          int offp3874#1 = IAdd(offp386C,ilit2C15);
          real v0_3875#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3874);
          int offp3876#1 = IAdd(offp3871,ilit2C15);
          real v1_3877#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3876);
          tensor[2] v_3878#1 = <tensor[2]>[v0_3875,v1_3877];
          int offp387A#1 = IAdd(offp386C,ilit2C18);
          real v0_387B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387A);
          int offp387C#1 = IAdd(offp3871,ilit2C18);
          real v1_387D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387C);
          tensor[2] v_387E#1 = <tensor[2]>[v0_387B,v1_387D];
          tensor[3,2] voxels387F#1 = <tensor[3,2]>[v_3873,v_3878,v_387E];
          goto JOIN37BE
        ASSIGN3899:  preds = [COND2BFD]
          bool _t2C01#1 = false;
          goto JOIN2C02
        ASSIGN389A:  preds = [COND2BF8]
          bool _t2C04#1 = false;
          goto JOIN2C05
        ASSIGN389B:  preds = [COND2364]
          bool _t2C07#1 = false;
          goto JOIN2C08
    end update
    method stabilize
        ENTRY389C:  preds = []
          tensor[4] rgba389D#1 = self.rgba;
          tensor[3] rgb389F#3 = self.rgb;
          real transp38A1#2 = self.transp;
          real _t38A3#2 = 0.1e1;
          bool _t38A5#1 = LT<real>(transp38A1,_t38A3);
          if _t38A5 then goto ASSIGN38AA else goto JOIN38BD
        ASSIGN38AA:  preds = [COND38A7]
          real aa38A8#4 = RSub(_t38A3,transp38A1);
          real _t38AB#1 = VIndex<3,0>(rgb389F);
          real _t38AD#1 = RDiv(_t38AB,aa38A8);
          real _t38B0#1 = VIndex<3,1>(rgb389F);
          real _t38B2#1 = RDiv(_t38B0,aa38A8);
          real _t38B5#1 = VIndex<3,2>(rgb389F);
          real _t38B7#1 = RDiv(_t38B5,aa38A8);
          tensor[4] rgba38BA#1 = <tensor[4]>[_t38AD,_t38B2,_t38B7,aa38A8];
          goto JOIN38BD
        JOIN38BD:  preds = [ASSIGN38BB,COND38A7]
          tensor[4] rgba38BC#1 = phi(rgba38BA,rgba389D)
          self.rgba = rgba38BC;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY38C0:  preds = []
      int iresU38C1#1 = globals.iresU2033;
      int iresV38C3#1 = globals.iresV2034;
      int _t38C5#2 = 0;
      int _t38C7#2 = 1;
      int _t38C9#1 = ISub(iresV38C3,_t38C7);
      int[] _t38CB#1 = Range(_t38C5,_t38C9);
    FOREACH38CE:  preds = [ASSIGN38CC,NEXT38D7]
      foreach (vi38CD in _t38CB) on exit goto RETURN38D8
      int _t38CF#1 = ISub(iresU38C1,_t38C7);
      int[] _t38D1#1 = Range(_t38C5,_t38CF);
    FOREACH38D4:  preds = [ASSIGN38D2,NEXT38D6]
      foreach (ui38D3 in _t38D1) on exit goto NEXT38D7
      new ray(ui38D3,vi38CD);
      goto FOREACH38D4
    NEXT38D7:  preds = [FOREACH38D4]
      goto FOREACH38CE
    RETURN38D8:  preds = [FOREACH38CE]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2027 (block) = <no-default>
  input 0space04CF_intermedateGlobal2028 (space) = <no-default>
  input 0U04D1_intermedateGlobal2029 (U) = <no-default>
  input cellChoice202A (cellChoice) = <no-default>
  input cmap202B (cmap) = image("cmap.nrrd")
  input camEye202C (camEye) = <default>
  input camAt202D (camAt) = <default>
  input camUp202E (camUp) = <default>
  input camNear202F (camNear) = <default>
  input camFar2030 (camFar) = <default>
  input camFOV2031 (camFOV) = <default>
  input camOrtho2032 (camOrtho) = <default>
  input iresU2033 (iresU) = <default>
  input iresV2034 (iresV) = <default>
  input rayStep2035 (rayStep) = <default>
  input refStep2036 (refStep) = <default>
  input transp02037 (transp0) = <default>
  input thick2038 (thick) = <default>
  input fStrTh2039 (fStrTh) = <default>
  input fMaskTh203A (fMaskTh) = <default>
  input fBias203B (fBias) = <default>
  input maxAlpha203C (maxAlpha) = <default>
  input light203D (light) = <default>
  input phong203E (phong) = <default>
  input mcNear203F (mcNear) = <default>
  input mcFar2040 (mcFar) = <default>
  input litdir2041 (litdir) = <default>
  input cminmax2042 (cminmax) = <default>
  global tensor[3] camN2043
  global tensor[3] camU2044
  global tensor[3] camV2045
  global real camDist2046
  global real camVmax2047
  global real camUmax2048
  global real camNearVsp2049
  global real camFarVsp204A
  global tensor[3] litwsp204B
  global int _t204C
  global femData:Space _tX204D
  global femData:FemFunc _tXX204E
## functions
## input initialization
  ENTRY2051:  preds = []
    real _t2052#13 = 0.e0;
    real _t2054#1 = -0.2e1;
    tensor[3] camEye2056#1 = <tensor[3]>[_t2052,_t2054,_t2052];
    globals.camEye202C = camEye2056;
    tensor[3] camAt2059#1 = <tensor[3]>[_t2052,_t2052,_t2052];
    globals.camAt202D = camAt2059;
    real _t205C#5 = 0.1e1;
    tensor[3] camUp205E#1 = <tensor[3]>[_t2052,_t2052,_t205C];
    globals.camUp202E = camUp205E;
    real camNear2061#1 = -0.4e1;
    globals.camNear202F = camNear2061;
    real camFar2064#1 = 0.4e1;
    globals.camFar2030 = camFar2064;
    real camFOV2067#1 = 0.1e2;
    globals.camFOV2031 = camFOV2067;
    bool camOrtho206A#2 = false;
    globals.camOrtho2032 = camOrtho206A;
    int iresU206D#2 = 100;
    globals.iresU2033 = iresU206D;
    globals.iresV2034 = iresU206D;
    real rayStep2071#2 = 0.1e-3;
    globals.rayStep2035 = rayStep2071;
    globals.refStep2036 = rayStep2071;
    real transp02075#1 = 0.5e-2;
    globals.transp02037 = transp02075;
    real thick2078#1 = 0.1e-1;
    globals.thick2038 = thick2078;
    globals.fStrTh2039 = _t2052;
    globals.fMaskTh203A = _t2052;
    real fBias207D#2 = 0.1e0;
    globals.fBias203B = fBias207D;
    globals.maxAlpha203C = _t205C;
    globals.light203D = camOrtho206A;
    real _t2082#1 = 0.7e0;
    real _t2084#1 = 0.2e0;
    real _t2086#1 = 0.1e3;
    tensor[4] phong2088#1 = <tensor[4]>[fBias207D,_t2082,_t2084,_t2086];
    globals.phong203E = phong2088;
    tensor[3] mcNear208B#2 = <tensor[3]>[_t205C,_t205C,_t205C];
    globals.mcNear203F = mcNear208B;
    globals.mcFar2040 = mcNear208B;
    real _t208F#1 = -0.1e1;
    tensor[3] litdir2091#1 = <tensor[3]>[_t2052,_t208F,_t2052];
    globals.litdir2041 = litdir2091;
    tensor[2] cminmax2094#1 = <tensor[2]>[_t2052,_t2052];
    globals.cminmax2042 = cminmax2094;
    return
## global-variable initialization
  ENTRY2098:  preds = []
    femData:Mesh block2099#3 = globals.block2027;
    femData:Space 0space04CF_intermedateGlobal209B#1 = globals.0space04CF_intermedateGlobal2028;
    femData:FemFunc 0U04D1_intermedateGlobal209D#1 = globals.0U04D1_intermedateGlobal2029;
    int cellChoice209F#1 = globals.cellChoice202A;
    tensor[3] camEye20A3#1 = globals.camEye202C;
    tensor[3] camAt20A5#1 = globals.camAt202D;
    tensor[3] camUp20A7#3 = globals.camUp202E;
    real camNear20A9#1 = globals.camNear202F;
    real camFar20AB#1 = globals.camFar2030;
    real camFOV20AD#1 = globals.camFOV2031;
    int iresU20AF#1 = globals.iresU2033;
    int iresV20B1#1 = globals.iresV2034;
    tensor[3] litdir20B3#5 = globals.litdir2041;
    int _t20B5#1 = 0;
    int _t20B7#1 = 1;
    int _t20B9#1 = ExtractFemItem<int,NumCell(Mesh)>(block2099);
    int _t20BB#1 = ISub(_t20B9,_t20B7);
    int[] _t20BD#1 = Range(_t20B5,_t20BB);
    femData:MeshCell[] _t20BF#1 = <femData:MeshCell[]>{};
  FOREACH20C2:  preds = [ASSIGN20C0,NEXT20C8]
    foreach (_t20C1 in _t20BD) on exit goto ASSIGN20CA
      femData:MeshCell[] _t20C6#2 = phi(_t20BF,_t20C5)
    femData:MeshCell _t20C3#1 = LoadFem<femData:MeshCell>(block2099,_t20C1);
    femData:MeshCell[] _t20C5#1 = Append<femData:MeshCell>(_t20C6,_t20C3);
    goto FOREACH20C2
  ASSIGN20CA:  preds = [FOREACH20C2]
    femData:Space space20C9#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal209B,block2099);
    femData:FemFunc U20CB#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal209D,space20C9);
    femData:MeshCell c120CD#1 = Subscript<femData:MeshCell[]>(_t20C6,cellChoice209F);
    int _t20CF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c120CD);
    femData:FuncCell _t20D1#2 = LoadFem<femData:FuncCell>(U20CB,_t20CF);
    femData:FemFunc _t20D3#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t20D1);
    femData:Space _t20D5#1 = ExtractFem<femData:Space,femData:FemFunc>(_t20D3);
    int _t20D7#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t20D1);
    tensor[3] op1_e3_l_420DD#9 = VSub<3>(camAt20A5,camEye20A3);
    real op1_e3_l_620E0#1 = VDot<3>(op1_e3_l_420DD,op1_e3_l_420DD);
    real op1_e3_l_720E3#6 = Sqrt(op1_e3_l_620E0);
    real realLit20E7#9 = 0.1e1;
    real op1_e3_l_920E6#6 = RDiv(realLit20E7,op1_e3_l_720E3);
    tensor[3] camN20EB#4 = VScale<3>(op1_e3_l_920E6,op1_e3_l_420DD);
    globals.camN2043 = camN20EB;
    real realLit20F0#6 = 0.e0;
    real r20F1#3 = TensorIndex<tensor[3],[0]>(camUp20A7);
    real r20F2#3 = RMul(realLit20F0,r20F1);
    real r20F3#3 = TensorIndex<tensor[3],[1]>(camUp20A7);
    real r20F4#3 = RMul(realLit20F0,r20F3);
    real r20F5#3 = TensorIndex<tensor[3],[2]>(camUp20A7);
    real r20F6#5 = RMul(realLit20F0,r20F5);
    real r20F7#3 = RAdd(r20F2,r20F4);
    real r20F8#3 = RAdd(r20F7,r20F6);
    real r20FA#1 = RMul(realLit20E7,r20F5);
    real r20FB#1 = RAdd(r20F7,r20FA);
    real realLit20FC#6 = -0.1e1;
    real r20FD#1 = RMul(realLit20FC,r20F3);
    real r20FE#1 = RAdd(r20F2,r20FD);
    real r20FF#1 = RAdd(r20FE,r20F6);
    tensor[3] tensor2100#1 = <tensor[3]>[r20F8,r20FB,r20FF];
    real r2101#1 = RMul(realLit20FC,r20F5);
    real r2102#1 = RAdd(r20F7,r2101);
    real r2103#1 = RMul(realLit20E7,r20F1);
    real r2104#1 = RAdd(r2103,r20F4);
    real r2105#1 = RAdd(r2104,r20F6);
    tensor[3] tensor2106#1 = <tensor[3]>[r2102,r20F8,r2105];
    real r2107#1 = RMul(realLit20E7,r20F3);
    real r2108#1 = RAdd(r20F2,r2107);
    real r2109#1 = RAdd(r2108,r20F6);
    real r210A#1 = RMul(realLit20FC,r20F1);
    real r210B#1 = RAdd(r210A,r20F4);
    real r210C#1 = RAdd(r210B,r20F6);
    tensor[3] tensor210D#1 = <tensor[3]>[r2109,r210C,r20F8];
    real vdot2130#4 = VDot<3>(op1_e3_l_420DD,tensor2100);
    real vdot2132#4 = VDot<3>(op1_e3_l_420DD,tensor2106);
    real vdot2134#4 = VDot<3>(op1_e3_l_420DD,tensor210D);
    tensor[3] op1_e3_l_17212E#3 = <tensor[3]>[vdot2130,vdot2132,vdot2134];
    real op1_e3_l_34213D#1 = VDot<3>(op1_e3_l_17212E,op1_e3_l_17212E);
    real r2141#1 = RMul(op1_e3_l_920E6,op1_e3_l_920E6);
    real op1_e3_l_352140#1 = RMul(r2141,op1_e3_l_34213D);
    real op1_e3_l_362145#1 = Sqrt(op1_e3_l_352140);
    tensor[3] op1_e3_l_372148#1 = VScale<3>(op1_e3_l_920E6,op1_e3_l_17212E);
    real op1_e3_l_38214B#2 = RDiv(realLit20E7,op1_e3_l_362145);
    tensor[3] camU2150#4 = VScale<3>(op1_e3_l_38214B,op1_e3_l_372148);
    globals.camU2044 = camU2150;
    real r2157#3 = RMul(realLit20F0,vdot2130);
    real r2159#3 = RMul(realLit20F0,vdot2132);
    real r215B#5 = RMul(realLit20F0,vdot2134);
    real r215C#3 = RAdd(r2157,r2159);
    real r215D#3 = RAdd(r215C,r215B);
    real r215F#1 = RMul(realLit20E7,vdot2134);
    real r2160#1 = RAdd(r215C,r215F);
    real r2162#1 = RMul(realLit20FC,vdot2132);
    real r2163#1 = RAdd(r2157,r2162);
    real r2164#1 = RAdd(r2163,r215B);
    tensor[3] tensor2165#1 = <tensor[3]>[r215D,r2160,r2164];
    real r2166#1 = RMul(realLit20FC,vdot2134);
    real r2167#1 = RAdd(r215C,r2166);
    real r2168#1 = RMul(realLit20E7,vdot2130);
    real r2169#1 = RAdd(r2168,r2159);
    real r216A#1 = RAdd(r2169,r215B);
    tensor[3] tensor216B#1 = <tensor[3]>[r2167,r215D,r216A];
    real r216C#1 = RMul(realLit20E7,vdot2132);
    real r216D#1 = RAdd(r2157,r216C);
    real r216E#1 = RAdd(r216D,r215B);
    real r216F#1 = RMul(realLit20FC,vdot2130);
    real r2170#1 = RAdd(r216F,r2159);
    real r2171#1 = RAdd(r2170,r215B);
    tensor[3] tensor2172#1 = <tensor[3]>[r216E,r2171,r215D];
    real vdot2195#1 = VDot<3>(op1_e3_l_420DD,tensor2165);
    real vdot2197#1 = VDot<3>(op1_e3_l_420DD,tensor216B);
    real vdot2199#1 = VDot<3>(op1_e3_l_420DD,tensor2172);
    tensor[3] op1_e3_l_472193#1 = <tensor[3]>[vdot2195,vdot2197,vdot2199];
    tensor[3] op1_e3_l_5021A2#3 = VScale<3>(op1_e3_l_920E6,op1_e3_l_472193);
    real r21A6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5021A2);
    real r21A7#3 = RMul(op1_e3_l_920E6,op1_e3_l_38214B);
    real r21A8#2 = RMul(r21A7,r21A6);
    real r21A9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5021A2);
    real r21AA#2 = RMul(r21A7,r21A9);
    real r21AB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5021A2);
    real r21AC#2 = RMul(r21A7,r21AB);
    tensor[3] camV21A5#1 = <tensor[3]>[r21A8,r21AA,r21AC];
    globals.camV2045 = camV21A5;
    globals.camDist2046 = op1_e3_l_720E3;
    real _t21B8#1 = 0.314159265358979323846264338327950288e1;
    real _t21BA#1 = 0.36e3;
    real op1_e3_l_521BC#1 = RMul(camFOV20AD,_t21B8);
    real op1_e3_l_621BF#1 = RDiv(op1_e3_l_521BC,_t21BA);
    real op1_e3_l_1021C2#2 = Tan(op1_e3_l_621BF);
    real camVmax21C5#1 = RMul(op1_e3_l_1021C2,op1_e3_l_720E3);
    globals.camVmax2047 = camVmax21C5;
    real _t21C9#1 = IntToReal(iresU20AF);
    real _t21CB#1 = IntToReal(iresV20B1);
    real r21CE#1 = RMul(_t21C9,op1_e3_l_1021C2);
    real op1_e3_l_1421CD#1 = RMul(r21CE,op1_e3_l_720E3);
    real camUmax21D2#1 = RDiv(op1_e3_l_1421CD,_t21CB);
    globals.camUmax2048 = camUmax21D2;
    real camNearVsp21D6#1 = RAdd(camNear20A9,op1_e3_l_720E3);
    globals.camNearVsp2049 = camNearVsp21D6;
    real camFarVsp21DA#1 = RAdd(camFar20AB,op1_e3_l_720E3);
    globals.camFarVsp204A = camFarVsp21DA;
    real op1_e3_l_321E0#1 = VDot<3>(litdir20B3,litdir20B3);
    real op1_e3_l_421E3#1 = Sqrt(op1_e3_l_321E0);
    real op1_e3_l_521E6#1 = RDiv(realLit20E7,op1_e3_l_421E3);
    real r21EC#1 = VIndex<3,0>(camU2150);
    real r21ED#3 = TensorIndex<tensor[3],[0]>(litdir20B3);
    real r21EE#1 = RMul(r21EC,r21ED);
    real r21F0#3 = TensorIndex<tensor[3],[1]>(litdir20B3);
    real r21F1#1 = RMul(r21A8,r21F0);
    real r21F2#1 = VIndex<3,0>(camN20EB);
    real r21F3#3 = TensorIndex<tensor[3],[2]>(litdir20B3);
    real r21F4#1 = RMul(r21F2,r21F3);
    real r21F5#1 = RAdd(r21EE,r21F1);
    real r21F6#1 = RAdd(r21F5,r21F4);
    real r21F7#1 = VIndex<3,1>(camU2150);
    real r21F8#1 = RMul(r21F7,r21ED);
    real r21FA#1 = RMul(r21AA,r21F0);
    real r21FB#1 = VIndex<3,1>(camN20EB);
    real r21FC#1 = RMul(r21FB,r21F3);
    real r21FD#1 = RAdd(r21F8,r21FA);
    real r21FE#1 = RAdd(r21FD,r21FC);
    real r21FF#1 = VIndex<3,2>(camU2150);
    real r2200#1 = RMul(r21FF,r21ED);
    real r2202#1 = RMul(r21AC,r21F0);
    real r2203#1 = VIndex<3,2>(camN20EB);
    real r2204#1 = RMul(r2203,r21F3);
    real r2205#1 = RAdd(r2200,r2202);
    real r2206#1 = RAdd(r2205,r2204);
    tensor[3] op1_e3_l_621EB#1 = <tensor[3]>[r21F6,r21FE,r2206];
    tensor[3] litwsp2224#1 = VScale<3>(op1_e3_l_521E6,op1_e3_l_621EB);
    globals.litwsp204B = litwsp2224;
    globals._t204C = _t20D7;
    globals._tX204D = _t20D5;
    globals._tXX204E = _t20D3;
    return
## strand
  strand ray (int ui222E#1, int vi222F#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2240:  preds = []
        tensor[3] camEye2241#1 = globals.camEye202C;
        bool camOrtho2243#2 = globals.camOrtho2032;
        int iresU2245#1 = globals.iresU2033;
        int iresV2247#1 = globals.iresV2034;
        real rayStep2249#1 = globals.rayStep2035;
        real refStep224B#1 = globals.refStep2036;
        tensor[4] phong224D#4 = globals.phong203E;
        tensor[3] camN224F#1 = globals.camN2043;
        tensor[3] camU2251#1 = globals.camU2044;
        tensor[3] camV2253#1 = globals.camV2045;
        real camDist2255#1 = globals.camDist2046;
        real camVmax2257#2 = globals.camVmax2047;
        real camUmax2259#2 = globals.camUmax2048;
        real camNearVsp225B#1 = globals.camNearVsp2049;
        real _t225D#4 = -0.5e0;
        real _t225F#1 = IntToReal(ui222E);
        real _t2261#1 = IntToReal(iresU2245);
        real _t2263#2 = 0.5e0;
        real op1_e3_l_62265#1 = RSub(_t2261,_t2263);
        real op1_e3_l_72268#1 = RSub(_t225F,_t225D);
        real op1_e3_l_8226B#1 = RSub(op1_e3_l_62265,_t225D);
        real op1_e3_l_9226E#2 = RNeg(camUmax2259);
        real op1_e3_l_102271#1 = RDiv(op1_e3_l_72268,op1_e3_l_8226B);
        real op1_e3_l_112274#1 = RSub(camUmax2259,op1_e3_l_9226E);
        real op1_e3_l_132277#1 = RMul(op1_e3_l_102271,op1_e3_l_112274);
        real rayU227A#2 = RAdd(op1_e3_l_9226E,op1_e3_l_132277);
        real _t227D#1 = IntToReal(vi222F);
        real _t227F#1 = IntToReal(iresV2247);
        real op1_e3_l_62281#1 = RSub(_t227F,_t2263);
        real op1_e3_l_72284#1 = RSub(_t227D,_t225D);
        real op1_e3_l_82287#1 = RSub(op1_e3_l_62281,_t225D);
        real op1_e3_l_9228A#2 = RNeg(camVmax2257);
        real op1_e3_l_10228D#1 = RDiv(op1_e3_l_72284,op1_e3_l_82287);
        real op1_e3_l_112290#1 = RSub(camVmax2257,op1_e3_l_9228A);
        real op1_e3_l_132293#1 = RMul(op1_e3_l_10228D,op1_e3_l_112290);
        real rayV2296#2 = RAdd(op1_e3_l_9228A,op1_e3_l_132293);
        tensor[3] op1_e3_l_3222A8#1 = VScale<3>(rayU227A,camU2251);
        tensor[3] op1_e3_l_3322AB#1 = VScale<3>(rayV2296,camV2253);
        tensor[3] UV22AE#5 = VAdd<3>(op1_e3_l_3222A8,op1_e3_l_3322AB);
        if camOrtho2243 then goto JOIN22B4 else goto ASSIGN230E
      JOIN22B4:  preds = [COND22B1,ASSIGN230F]
        tensor[3] _t22B2#1 = phi(UV22AE,_t22B3)
        tensor[3] rayOrig22B5#1 = VAdd<3>(camEye2241,_t22B2);
        if camOrtho2243 then goto ASSIGN22BA else goto ASSIGN2304
      ASSIGN22BA:  preds = [COND22B8]
        real _t22B9#3 = 0.e0;
        tensor[3] _t22BB#1 = <tensor[3]>[_t22B9,_t22B9,_t22B9];
        goto JOIN22BF
      JOIN22BF:  preds = [ASSIGN22BC,ASSIGN230C]
        tensor[3] _t22BD#1 = phi(_t22BB,_t22BE)
        tensor[3] rayVec22C0#4 = VAdd<3>(camN224F,_t22BD);
        real op1_e3_l_622C3#1 = VDot<3>(rayVec22C0,rayVec22C0);
        real op1_e3_l_722C6#2 = Sqrt(op1_e3_l_622C3);
        real op1_e3_l_822C9#1 = RMul(rayStep2249,op1_e3_l_722C6);
        real alphaFix22CC#1 = RDiv(op1_e3_l_822C9,refStep224B);
        real realLit22D0#2 = 0.1e1;
        real op1_e3_l_922CF#1 = RDiv(realLit22D0,op1_e3_l_722C6);
        tensor[3] op1_e3_l_1022D4#1 = VScale<3>(op1_e3_l_922CF,rayVec22C0);
        tensor[3] eyeDir22D7#1 = VNeg<3>(op1_e3_l_1022D4);
        real phKa22DA#1 = VIndex<4,0>(phong224D);
        real phKd22DC#1 = VIndex<4,1>(phong224D);
        real phKs22DE#1 = VIndex<4,2>(phong224D);
        real phSp22E0#1 = VIndex<4,3>(phong224D);
        real _t22E2#8 = 0.e0;
        tensor[4] rgba22E4#1 = <tensor[4]>[_t22E2,_t22E2,_t22E2,_t22E2];
        tensor[3] rgb22E6#1 = <tensor[3]>[_t22E2,_t22E2,_t22E2];
        self.rayU = rayU227A;
        self.rayV = rayV2296;
        self.rayN = camNearVsp225B;
        self.UV = UV22AE;
        self.rayOrig = rayOrig22B5;
        self.rayVec = rayVec22C0;
        self.alphaFix = alphaFix22CC;
        self.eyeDir = eyeDir22D7;
        self.phKa = phKa22DA;
        self.phKd = phKd22DC;
        self.phKs = phKs22DE;
        self.phSp = phSp22E0;
        self.rgba = rgba22E4;
        self.raw = _t22E2;
        self.rgb = rgb22E6;
        self.transp = realLit22D0;
        return
      ASSIGN2304:  preds = [COND22B8]
        real realLit22FB#1 = 0.1e1;
        real r22FC#3 = RDiv(realLit22FB,camDist2255);
        real r22FD#1 = TensorIndex<tensor[3],[0]>(UV22AE);
        real r22FE#1 = RMul(r22FC,r22FD);
        real r22FF#1 = TensorIndex<tensor[3],[1]>(UV22AE);
        real r2300#1 = RMul(r22FC,r22FF);
        real r2301#1 = TensorIndex<tensor[3],[2]>(UV22AE);
        real r2302#1 = RMul(r22FC,r2301);
        tensor[3] _t22BE#1 = <tensor[3]>[r22FE,r2300,r2302];
        goto JOIN22BF
      ASSIGN230E:  preds = [COND22B1]
        real _t230D#3 = 0.e0;
        tensor[3] _t22B3#1 = <tensor[3]>[_t230D,_t230D,_t230D];
        goto JOIN22B4
    end state init
    method update
        ENTRY2310:  preds = []
          image(IMAGE1D<double[3]>) cmap2311#17 = globals.cmap202B;
          int _t2313#2 = globals._t204C;
          femData:Space _t2315#168 = globals._tX204D;
          femData:FemFunc _t2317#168 = globals._tXX204E;
          femData:Mesh block231D#1 = globals.block2027;
          real rayStep231F#1 = globals.rayStep2035;
          real transp02321#1 = globals.transp02037;
          real thick2323#1 = globals.thick2038;
          real fStrTh2325#1 = globals.fStrTh2039;
          real fMaskTh2327#1 = globals.fMaskTh203A;
          real fBias2329#1 = globals.fBias203B;
          real maxAlpha232B#1 = globals.maxAlpha203C;
          tensor[3] mcNear232D#2 = globals.mcNear203F;
          tensor[3] mcFar232F#1 = globals.mcFar2040;
          tensor[2] cminmax2331#2 = globals.cminmax2042;
          real camNearVsp2333#2 = globals.camNearVsp2049;
          real camFarVsp2335#2 = globals.camFarVsp204A;
          tensor[3] litwsp2337#2 = globals.litwsp204B;
          real rayN2339#1 = self.rayN;
          tensor[3] rayOrig233B#1 = self.rayOrig;
          tensor[3] rayVec233D#1 = self.rayVec;
          real alphaFix233F#1 = self.alphaFix;
          tensor[3] eyeDir2341#1 = self.eyeDir;
          real phKa2343#1 = self.phKa;
          real phKd2345#1 = self.phKd;
          real phKs2347#2 = self.phKs;
          real phSp2349#1 = self.phSp;
          tensor[3] rgb234B#1 = self.rgb;
          real transp234D#2 = self.transp;
          real rayN234F#8 = RAdd(rayN2339,rayStep231F);
          bool _t2352#1 = GT<real>(rayN234F,camFarVsp2335);
          if _t2352 then goto SAVE2355 else goto JOIN2357
        SAVE2355:  preds = [COND2354]
          self.rayN = rayN234F;
          stabilize
          goto JOIN2357
        JOIN2357:  preds = [*STABILIZE2356,COND2354]
          tensor[3] op1_e3_l_52358#1 = VScale<3>(rayN234F,rayVec233D);
          tensor[3] pos235B#8 = VAdd<3>(rayOrig233B,op1_e3_l_52358);
          femData:RefCell _t235E#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block231D);
          real _t2360#1 = 0.1e-8;
          bool _t2362#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t235E,pos235B,_t2360);
          if _t2362 then goto ASSIGN2465 else goto ASSIGN389B
        ASSIGN2465:  preds = [COND2364]
          int ilit2366#1 = 84;
          int mulRes2367#84 = IMul(_t2313,ilit2366);
          int idx236A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,mulRes2367);
          int ilit236B#86 = 1;
          int addRes236C#1 = IAdd(mulRes2367,ilit236B);
          int idx236D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236C);
          int ilit236E#1 = 2;
          int addRes236F#1 = IAdd(mulRes2367,ilit236E);
          int idx2370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236F);
          int ilit2371#1 = 3;
          int addRes2372#1 = IAdd(mulRes2367,ilit2371);
          int idx2373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2372);
          int ilit2374#1 = 4;
          int addRes2375#1 = IAdd(mulRes2367,ilit2374);
          int idx2376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2375);
          int ilit2377#1 = 5;
          int addRes2378#1 = IAdd(mulRes2367,ilit2377);
          int idx2379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2378);
          int ilit237A#1 = 6;
          int addRes237B#1 = IAdd(mulRes2367,ilit237A);
          int idx237C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237B);
          int ilit237D#1 = 7;
          int addRes237E#1 = IAdd(mulRes2367,ilit237D);
          int idx237F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237E);
          int ilit2380#1 = 8;
          int addRes2381#1 = IAdd(mulRes2367,ilit2380);
          int idx2382#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2381);
          int ilit2383#1 = 9;
          int addRes2384#1 = IAdd(mulRes2367,ilit2383);
          int idx2385#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2384);
          int ilit2386#1 = 10;
          int addRes2387#1 = IAdd(mulRes2367,ilit2386);
          int idx2388#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2387);
          int ilit2389#1 = 11;
          int addRes238A#1 = IAdd(mulRes2367,ilit2389);
          int idx238B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238A);
          int ilit238C#1 = 12;
          int addRes238D#1 = IAdd(mulRes2367,ilit238C);
          int idx238E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238D);
          int ilit238F#1 = 13;
          int addRes2390#1 = IAdd(mulRes2367,ilit238F);
          int idx2391#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2390);
          int ilit2392#1 = 14;
          int addRes2393#1 = IAdd(mulRes2367,ilit2392);
          int idx2394#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2393);
          int ilit2395#1 = 15;
          int addRes2396#1 = IAdd(mulRes2367,ilit2395);
          int idx2397#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2396);
          int ilit2398#1 = 16;
          int addRes2399#1 = IAdd(mulRes2367,ilit2398);
          int idx239A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2399);
          int ilit239B#1 = 17;
          int addRes239C#1 = IAdd(mulRes2367,ilit239B);
          int idx239D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239C);
          int ilit239E#1 = 18;
          int addRes239F#1 = IAdd(mulRes2367,ilit239E);
          int idx23A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239F);
          int ilit23A1#1 = 19;
          int addRes23A2#1 = IAdd(mulRes2367,ilit23A1);
          int idx23A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A2);
          int ilit23A4#1 = 20;
          int addRes23A5#1 = IAdd(mulRes2367,ilit23A4);
          int idx23A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A5);
          int ilit23A7#1 = 21;
          int addRes23A8#1 = IAdd(mulRes2367,ilit23A7);
          int idx23A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A8);
          int ilit23AA#1 = 22;
          int addRes23AB#1 = IAdd(mulRes2367,ilit23AA);
          int idx23AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AB);
          int ilit23AD#1 = 23;
          int addRes23AE#1 = IAdd(mulRes2367,ilit23AD);
          int idx23AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AE);
          int ilit23B0#1 = 24;
          int addRes23B1#1 = IAdd(mulRes2367,ilit23B0);
          int idx23B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B1);
          int ilit23B3#1 = 25;
          int addRes23B4#1 = IAdd(mulRes2367,ilit23B3);
          int idx23B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B4);
          int ilit23B6#1 = 26;
          int addRes23B7#1 = IAdd(mulRes2367,ilit23B6);
          int idx23B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B7);
          int ilit23B9#1 = 27;
          int addRes23BA#1 = IAdd(mulRes2367,ilit23B9);
          int idx23BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BA);
          int ilit23BC#1 = 28;
          int addRes23BD#1 = IAdd(mulRes2367,ilit23BC);
          int idx23BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BD);
          int ilit23BF#1 = 29;
          int addRes23C0#1 = IAdd(mulRes2367,ilit23BF);
          int idx23C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C0);
          int ilit23C2#1 = 30;
          int addRes23C3#1 = IAdd(mulRes2367,ilit23C2);
          int idx23C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C3);
          int ilit23C5#1 = 31;
          int addRes23C6#1 = IAdd(mulRes2367,ilit23C5);
          int idx23C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C6);
          int ilit23C8#1 = 32;
          int addRes23C9#1 = IAdd(mulRes2367,ilit23C8);
          int idx23CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C9);
          int ilit23CB#1 = 33;
          int addRes23CC#1 = IAdd(mulRes2367,ilit23CB);
          int idx23CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CC);
          int ilit23CE#1 = 34;
          int addRes23CF#1 = IAdd(mulRes2367,ilit23CE);
          int idx23D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CF);
          int ilit23D1#1 = 35;
          int addRes23D2#1 = IAdd(mulRes2367,ilit23D1);
          int idx23D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D2);
          int ilit23D4#1 = 36;
          int addRes23D5#1 = IAdd(mulRes2367,ilit23D4);
          int idx23D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D5);
          int ilit23D7#1 = 37;
          int addRes23D8#1 = IAdd(mulRes2367,ilit23D7);
          int idx23D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D8);
          int ilit23DA#1 = 38;
          int addRes23DB#1 = IAdd(mulRes2367,ilit23DA);
          int idx23DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DB);
          int ilit23DD#1 = 39;
          int addRes23DE#1 = IAdd(mulRes2367,ilit23DD);
          int idx23DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DE);
          int ilit23E0#1 = 40;
          int addRes23E1#1 = IAdd(mulRes2367,ilit23E0);
          int idx23E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E1);
          int ilit23E3#1 = 41;
          int addRes23E4#1 = IAdd(mulRes2367,ilit23E3);
          int idx23E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E4);
          int ilit23E6#1 = 42;
          int addRes23E7#1 = IAdd(mulRes2367,ilit23E6);
          int idx23E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E7);
          int ilit23E9#1 = 43;
          int addRes23EA#1 = IAdd(mulRes2367,ilit23E9);
          int idx23EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23EA);
          int ilit23EC#1 = 44;
          int addRes23ED#1 = IAdd(mulRes2367,ilit23EC);
          int idx23EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23ED);
          int ilit23EF#1 = 45;
          int addRes23F0#1 = IAdd(mulRes2367,ilit23EF);
          int idx23F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F0);
          int ilit23F2#1 = 46;
          int addRes23F3#1 = IAdd(mulRes2367,ilit23F2);
          int idx23F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F3);
          int ilit23F5#1 = 47;
          int addRes23F6#1 = IAdd(mulRes2367,ilit23F5);
          int idx23F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F6);
          int ilit23F8#1 = 48;
          int addRes23F9#1 = IAdd(mulRes2367,ilit23F8);
          int idx23FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F9);
          int ilit23FB#1 = 49;
          int addRes23FC#1 = IAdd(mulRes2367,ilit23FB);
          int idx23FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FC);
          int ilit23FE#1 = 50;
          int addRes23FF#1 = IAdd(mulRes2367,ilit23FE);
          int idx2400#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FF);
          int ilit2401#1 = 51;
          int addRes2402#1 = IAdd(mulRes2367,ilit2401);
          int idx2403#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2402);
          int ilit2404#1 = 52;
          int addRes2405#1 = IAdd(mulRes2367,ilit2404);
          int idx2406#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2405);
          int ilit2407#1 = 53;
          int addRes2408#1 = IAdd(mulRes2367,ilit2407);
          int idx2409#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2408);
          int ilit240A#1 = 54;
          int addRes240B#1 = IAdd(mulRes2367,ilit240A);
          int idx240C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240B);
          int ilit240D#1 = 55;
          int addRes240E#1 = IAdd(mulRes2367,ilit240D);
          int idx240F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240E);
          int ilit2410#1 = 56;
          int addRes2411#1 = IAdd(mulRes2367,ilit2410);
          int idx2412#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2411);
          int ilit2413#1 = 57;
          int addRes2414#1 = IAdd(mulRes2367,ilit2413);
          int idx2415#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2414);
          int ilit2416#1 = 58;
          int addRes2417#1 = IAdd(mulRes2367,ilit2416);
          int idx2418#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2417);
          int ilit2419#1 = 59;
          int addRes241A#1 = IAdd(mulRes2367,ilit2419);
          int idx241B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241A);
          int ilit241C#1 = 60;
          int addRes241D#1 = IAdd(mulRes2367,ilit241C);
          int idx241E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241D);
          int ilit241F#1 = 61;
          int addRes2420#1 = IAdd(mulRes2367,ilit241F);
          int idx2421#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2420);
          int ilit2422#1 = 62;
          int addRes2423#1 = IAdd(mulRes2367,ilit2422);
          int idx2424#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2423);
          int ilit2425#1 = 63;
          int addRes2426#1 = IAdd(mulRes2367,ilit2425);
          int idx2427#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2426);
          int ilit2428#1 = 64;
          int addRes2429#1 = IAdd(mulRes2367,ilit2428);
          int idx242A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2429);
          int ilit242B#1 = 65;
          int addRes242C#1 = IAdd(mulRes2367,ilit242B);
          int idx242D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242C);
          int ilit242E#1 = 66;
          int addRes242F#1 = IAdd(mulRes2367,ilit242E);
          int idx2430#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242F);
          int ilit2431#1 = 67;
          int addRes2432#1 = IAdd(mulRes2367,ilit2431);
          int idx2433#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2432);
          int ilit2434#1 = 68;
          int addRes2435#1 = IAdd(mulRes2367,ilit2434);
          int idx2436#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2435);
          int ilit2437#1 = 69;
          int addRes2438#1 = IAdd(mulRes2367,ilit2437);
          int idx2439#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2438);
          int ilit243A#1 = 70;
          int addRes243B#1 = IAdd(mulRes2367,ilit243A);
          int idx243C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243B);
          int ilit243D#1 = 71;
          int addRes243E#1 = IAdd(mulRes2367,ilit243D);
          int idx243F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243E);
          int ilit2440#1 = 72;
          int addRes2441#1 = IAdd(mulRes2367,ilit2440);
          int idx2442#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2441);
          int ilit2443#1 = 73;
          int addRes2444#1 = IAdd(mulRes2367,ilit2443);
          int idx2445#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2444);
          int ilit2446#1 = 74;
          int addRes2447#1 = IAdd(mulRes2367,ilit2446);
          int idx2448#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2447);
          int ilit2449#1 = 75;
          int addRes244A#1 = IAdd(mulRes2367,ilit2449);
          int idx244B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244A);
          int ilit244C#1 = 76;
          int addRes244D#1 = IAdd(mulRes2367,ilit244C);
          int idx244E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244D);
          int ilit244F#1 = 77;
          int addRes2450#1 = IAdd(mulRes2367,ilit244F);
          int idx2451#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2450);
          int ilit2452#1 = 78;
          int addRes2453#1 = IAdd(mulRes2367,ilit2452);
          int idx2454#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2453);
          int ilit2455#1 = 79;
          int addRes2456#1 = IAdd(mulRes2367,ilit2455);
          int idx2457#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2456);
          int ilit2458#1 = 80;
          int addRes2459#1 = IAdd(mulRes2367,ilit2458);
          int idx245A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2459);
          int ilit245B#1 = 81;
          int addRes245C#1 = IAdd(mulRes2367,ilit245B);
          int idx245D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245C);
          int ilit245E#1 = 82;
          int addRes245F#1 = IAdd(mulRes2367,ilit245E);
          int idx2460#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245F);
          int ilit2461#1 = 83;
          int addRes2462#1 = IAdd(mulRes2367,ilit2461);
          int idx2463#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2462);
          int mulRes2569#1 = IMul(ilit236B,idx236A);
          int mulRes256B#1 = IMul(ilit236B,idx236D);
          int mulRes256E#1 = IMul(ilit236B,idx2370);
          int mulRes2571#1 = IMul(ilit236B,idx2373);
          int mulRes2574#1 = IMul(ilit236B,idx2376);
          int mulRes2577#1 = IMul(ilit236B,idx2379);
          int mulRes257A#1 = IMul(ilit236B,idx237C);
          int mulRes257D#1 = IMul(ilit236B,idx237F);
          int mulRes2580#1 = IMul(ilit236B,idx2382);
          int mulRes2583#1 = IMul(ilit236B,idx2385);
          int mulRes2586#1 = IMul(ilit236B,idx2388);
          int mulRes2589#1 = IMul(ilit236B,idx238B);
          int mulRes258C#1 = IMul(ilit236B,idx238E);
          int mulRes258F#1 = IMul(ilit236B,idx2391);
          int mulRes2592#1 = IMul(ilit236B,idx2394);
          int mulRes2595#1 = IMul(ilit236B,idx2397);
          int mulRes2598#1 = IMul(ilit236B,idx239A);
          int mulRes259B#1 = IMul(ilit236B,idx239D);
          int mulRes259E#1 = IMul(ilit236B,idx23A0);
          int mulRes25A1#1 = IMul(ilit236B,idx23A3);
          int mulRes25A4#1 = IMul(ilit236B,idx23A6);
          int mulRes25A7#1 = IMul(ilit236B,idx23A9);
          int mulRes25AA#1 = IMul(ilit236B,idx23AC);
          int mulRes25AD#1 = IMul(ilit236B,idx23AF);
          int mulRes25B0#1 = IMul(ilit236B,idx23B2);
          int mulRes25B3#1 = IMul(ilit236B,idx23B5);
          int mulRes25B6#1 = IMul(ilit236B,idx23B8);
          int mulRes25B9#1 = IMul(ilit236B,idx23BB);
          int mulRes25BC#1 = IMul(ilit236B,idx23BE);
          int mulRes25BF#1 = IMul(ilit236B,idx23C1);
          int mulRes25C2#1 = IMul(ilit236B,idx23C4);
          int mulRes25C5#1 = IMul(ilit236B,idx23C7);
          int mulRes25C8#1 = IMul(ilit236B,idx23CA);
          int mulRes25CB#1 = IMul(ilit236B,idx23CD);
          int mulRes25CE#1 = IMul(ilit236B,idx23D0);
          int mulRes25D1#1 = IMul(ilit236B,idx23D3);
          int mulRes25D4#1 = IMul(ilit236B,idx23D6);
          int mulRes25D7#1 = IMul(ilit236B,idx23D9);
          int mulRes25DA#1 = IMul(ilit236B,idx23DC);
          int mulRes25DD#1 = IMul(ilit236B,idx23DF);
          int mulRes25E0#1 = IMul(ilit236B,idx23E2);
          int mulRes25E3#1 = IMul(ilit236B,idx23E5);
          int mulRes25E6#1 = IMul(ilit236B,idx23E8);
          int mulRes25E9#1 = IMul(ilit236B,idx23EB);
          int mulRes25EC#1 = IMul(ilit236B,idx23EE);
          int mulRes25EF#1 = IMul(ilit236B,idx23F1);
          int mulRes25F2#1 = IMul(ilit236B,idx23F4);
          int mulRes25F5#1 = IMul(ilit236B,idx23F7);
          int mulRes25F8#1 = IMul(ilit236B,idx23FA);
          int mulRes25FB#1 = IMul(ilit236B,idx23FD);
          int mulRes25FE#1 = IMul(ilit236B,idx2400);
          int mulRes2601#1 = IMul(ilit236B,idx2403);
          int mulRes2604#1 = IMul(ilit236B,idx2406);
          int mulRes2607#1 = IMul(ilit236B,idx2409);
          int mulRes260A#1 = IMul(ilit236B,idx240C);
          int mulRes260D#1 = IMul(ilit236B,idx240F);
          int mulRes2610#1 = IMul(ilit236B,idx2412);
          int mulRes2613#1 = IMul(ilit236B,idx2415);
          int mulRes2616#1 = IMul(ilit236B,idx2418);
          int mulRes2619#1 = IMul(ilit236B,idx241B);
          int mulRes261C#1 = IMul(ilit236B,idx241E);
          int mulRes261F#1 = IMul(ilit236B,idx2421);
          int mulRes2622#1 = IMul(ilit236B,idx2424);
          int mulRes2625#1 = IMul(ilit236B,idx2427);
          int mulRes2628#1 = IMul(ilit236B,idx242A);
          int mulRes262B#1 = IMul(ilit236B,idx242D);
          int mulRes262E#1 = IMul(ilit236B,idx2430);
          int mulRes2631#1 = IMul(ilit236B,idx2433);
          int mulRes2634#1 = IMul(ilit236B,idx2436);
          int mulRes2637#1 = IMul(ilit236B,idx2439);
          int mulRes263A#1 = IMul(ilit236B,idx243C);
          int mulRes263D#1 = IMul(ilit236B,idx243F);
          int mulRes2640#1 = IMul(ilit236B,idx2442);
          int mulRes2643#1 = IMul(ilit236B,idx2445);
          int mulRes2646#1 = IMul(ilit236B,idx2448);
          int mulRes2649#1 = IMul(ilit236B,idx244B);
          int mulRes264C#1 = IMul(ilit236B,idx244E);
          int mulRes264F#1 = IMul(ilit236B,idx2451);
          int mulRes2652#1 = IMul(ilit236B,idx2454);
          int mulRes2655#1 = IMul(ilit236B,idx2457);
          int mulRes2658#1 = IMul(ilit236B,idx245A);
          int mulRes265B#1 = IMul(ilit236B,idx245D);
          int mulRes265E#1 = IMul(ilit236B,idx2460);
          int mulRes2661#1 = IMul(ilit236B,idx2463);
          real dof2662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2569);
          real dof2663#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256B);
          real dof2664#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256E);
          real dof2665#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2571);
          real dof2666#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2574);
          real dof2667#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2577);
          real dof2668#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257A);
          real dof2669#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257D);
          real dof266A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2580);
          real dof266B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2583);
          real dof266C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2586);
          real dof266D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2589);
          real dof266E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258C);
          real dof266F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258F);
          real dof2670#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2592);
          real dof2671#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2595);
          real dof2672#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2598);
          real dof2673#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259B);
          real dof2674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259E);
          real dof2675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A1);
          real dof2676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A4);
          real dof2677#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A7);
          real dof2678#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AA);
          real dof2679#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AD);
          real dof267A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B0);
          real dof267B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B3);
          real dof267C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B6);
          real dof267D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B9);
          real dof267E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BC);
          real dof267F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BF);
          real dof2680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C2);
          real dof2681#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C5);
          real dof2682#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C8);
          real dof2683#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CB);
          real dof2684#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CE);
          real dof2685#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D1);
          real dof2686#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D4);
          real dof2687#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D7);
          real dof2688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DA);
          real dof2689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DD);
          real dof268A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E0);
          real dof268B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E3);
          real dof268C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E6);
          real dof268D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E9);
          real dof268E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EC);
          real dof268F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EF);
          real dof2690#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F2);
          real dof2691#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F5);
          real dof2692#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F8);
          real dof2693#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FB);
          real dof2694#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FE);
          real dof2695#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2601);
          real dof2696#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2604);
          real dof2697#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2607);
          real dof2698#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260A);
          real dof2699#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260D);
          real dof269A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2610);
          real dof269B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2613);
          real dof269C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2616);
          real dof269D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2619);
          real dof269E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261C);
          real dof269F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261F);
          real dof26A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2622);
          real dof26A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2625);
          real dof26A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2628);
          real dof26A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262B);
          real dof26A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262E);
          real dof26A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2631);
          real dof26A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2634);
          real dof26A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2637);
          real dof26A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263A);
          real dof26A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263D);
          real dof26AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2640);
          real dof26AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2643);
          real dof26AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2646);
          real dof26AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2649);
          real dof26AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264C);
          real dof26AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264F);
          real dof26B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2652);
          real dof26B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2655);
          real dof26B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2658);
          real dof26B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265B);
          real dof26B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265E);
          real dof26B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2661);
          tensor[84] dofs26B6#9 = <tensor[84]>[dof2662,dof2663,dof2664,dof2665,dof2666,dof2667,dof2668,dof2669,dof266A,dof266B,dof266C,dof266D,dof266E,dof266F,dof2670,dof2671,dof2672,dof2673,dof2674,dof2675,dof2676,dof2677,dof2678,dof2679,dof267A,dof267B,dof267C,dof267D,dof267E,dof267F,dof2680,dof2681,dof2682,dof2683,dof2684,dof2685,dof2686,dof2687,dof2688,dof2689,dof268A,dof268B,dof268C,dof268D,dof268E,dof268F,dof2690,dof2691,dof2692,dof2693,dof2694,dof2695,dof2696,dof2697,dof2698,dof2699,dof269A,dof269B,dof269C,dof269D,dof269E,dof269F,dof26A0,dof26A1,dof26A2,dof26A3,dof26A4,dof26A5,dof26A6,dof26A7,dof26A8,dof26A9,dof26AA,dof26AB,dof26AC,dof26AD,dof26AE,dof26AF,dof26B0,dof26B1,dof26B2,dof26B3,dof26B4,dof26B5];
          real varAcc280A#20 = VIndex<3,0>(pos235B);
          real varAcc280B#10 = VIndex<3,1>(pos235B);
          real varAcc280C#10 = VIndex<3,2>(pos235B);
          real basisEval280D#378 = 0.e0;
          real coeff280E#47 = 0.2e1;
          real one280F#80 = 0.1e1;
          real prod2810#6 = RMul(one280F,one280F);
          real prod2811#2 = RMul(one280F,prod2810);
          real basisEval2812#3 = RMul(coeff280E,prod2811);
          real prod2814#5 = RMul(one280F,varAcc280C);
          real prod2815#3 = RMul(one280F,prod2814);
          real basisEval2816#5 = RMul(coeff280E,prod2815);
          real prod2818#5 = RMul(varAcc280B,one280F);
          real prod2819#3 = RMul(one280F,prod2818);
          real basisEval281A#5 = RMul(coeff280E,prod2819);
          real coeff281B#25 = 0.6e1;
          real prod281D#3 = RMul(varAcc280A,prod2810);
          real basisEval281E#1 = RMul(coeff281B,prod281D);
          real prod2281F#5 = RMul(varAcc280C,varAcc280C);
          real prod2820#4 = RMul(one280F,prod2281F);
          real prod2821#4 = RMul(one280F,prod2820);
          real basisEval2822#2 = RMul(coeff280E,prod2821);
          real prod2823#4 = RMul(varAcc280B,varAcc280C);
          real prod2824#4 = RMul(one280F,prod2823);
          real basisEval2825#5 = RMul(coeff280E,prod2824);
          real prod22826#5 = RMul(varAcc280B,varAcc280B);
          real prod2827#4 = RMul(prod22826,one280F);
          real prod2828#4 = RMul(one280F,prod2827);
          real basisEval2829#2 = RMul(coeff280E,prod2828);
          real prod282A#4 = RMul(varAcc280A,prod2814);
          real basisEval282B#2 = RMul(coeff281B,prod282A);
          real prod282C#4 = RMul(varAcc280A,prod2818);
          real basisEval282D#2 = RMul(coeff281B,prod282C);
          real coeff282E#15 = 0.12e2;
          real prod2282F#11 = RMul(varAcc280A,varAcc280A);
          real prod2830#4 = RMul(prod2282F,prod2810);
          real basisEval2831#1 = RMul(coeff282E,prod2830);
          real prod32832#4 = RMul(prod2281F,varAcc280C);
          real prod2833#3 = RMul(one280F,prod32832);
          real prod2834#4 = RMul(one280F,prod2833);
          real basisEval2835#2 = RMul(coeff280E,prod2834);
          real prod2836#3 = RMul(varAcc280B,prod2281F);
          real prod2837#5 = RMul(one280F,prod2836);
          real basisEval2838#3 = RMul(coeff280E,prod2837);
          real prod2839#3 = RMul(prod22826,varAcc280C);
          real prod283A#5 = RMul(one280F,prod2839);
          real basisEval283B#3 = RMul(coeff280E,prod283A);
          real prod3283C#4 = RMul(prod22826,varAcc280B);
          real prod283D#3 = RMul(prod3283C,one280F);
          real prod283E#4 = RMul(one280F,prod283D);
          real basisEval283F#2 = RMul(coeff280E,prod283E);
          real prod2840#5 = RMul(varAcc280A,prod2820);
          real basisEval2841#2 = RMul(coeff281B,prod2840);
          real prod2842#3 = RMul(varAcc280A,prod2823);
          real basisEval2843#3 = RMul(coeff281B,prod2842);
          real prod2844#5 = RMul(varAcc280A,prod2827);
          real basisEval2845#2 = RMul(coeff281B,prod2844);
          real prod2846#5 = RMul(prod2282F,prod2814);
          real basisEval2847#1 = RMul(coeff282E,prod2846);
          real prod2848#5 = RMul(prod2282F,prod2818);
          real basisEval2849#1 = RMul(coeff282E,prod2848);
          real coeff284A#9 = 0.20e2;
          real prod3284B#7 = RMul(prod2282F,varAcc280A);
          real prod284C#4 = RMul(prod3284B,prod2810);
          real basisEval284D#1 = RMul(coeff284A,prod284C);
          real prod4284E#3 = RMul(prod32832,varAcc280C);
          real prod284F#2 = RMul(one280F,prod4284E);
          real prod2850#4 = RMul(one280F,prod284F);
          real basisEval2851#2 = RMul(coeff280E,prod2850);
          real prod2852#2 = RMul(varAcc280B,prod32832);
          real prod2853#6 = RMul(one280F,prod2852);
          real basisEval2854#3 = RMul(coeff280E,prod2853);
          real prod2855#2 = RMul(prod22826,prod2281F);
          real prod2856#5 = RMul(one280F,prod2855);
          real basisEval2857#1 = RMul(coeff280E,prod2856);
          real prod2858#2 = RMul(prod3283C,varAcc280C);
          real prod2859#6 = RMul(one280F,prod2858);
          real basisEval285A#3 = RMul(coeff280E,prod2859);
          real prod4285B#3 = RMul(prod3283C,varAcc280B);
          real prod285C#2 = RMul(prod4285B,one280F);
          real prod285D#4 = RMul(one280F,prod285C);
          real basisEval285E#2 = RMul(coeff280E,prod285D);
          real prod285F#6 = RMul(varAcc280A,prod2833);
          real basisEval2860#1 = RMul(coeff281B,prod285F);
          real prod2861#5 = RMul(varAcc280A,prod2836);
          real basisEval2862#4 = RMul(coeff281B,prod2861);
          real prod2863#5 = RMul(varAcc280A,prod2839);
          real basisEval2864#4 = RMul(coeff281B,prod2863);
          real prod2865#6 = RMul(varAcc280A,prod283D);
          real basisEval2866#1 = RMul(coeff281B,prod2865);
          real prod2867#5 = RMul(prod2282F,prod2820);
          real basisEval2868#2 = RMul(coeff282E,prod2867);
          real prod2869#5 = RMul(prod2282F,prod2823);
          real basisEval286A#1 = RMul(coeff282E,prod2869);
          real prod286B#5 = RMul(prod2282F,prod2827);
          real basisEval286C#2 = RMul(coeff282E,prod286B);
          real prod286D#6 = RMul(prod3284B,prod2814);
          real basisEval286E#1 = RMul(coeff284A,prod286D);
          real prod286F#6 = RMul(prod3284B,prod2818);
          real basisEval2870#1 = RMul(coeff284A,prod286F);
          real coeff2871#3 = 0.30e2;
          real prod42872#4 = RMul(prod3284B,varAcc280A);
          real prod2873#4 = RMul(prod42872,prod2810);
          real basisEval2874#1 = RMul(coeff2871,prod2873);
          real basisEval2875#6 = RMul(one280F,prod2811);
          real basisEval2876#3 = RMul(one280F,prod2815);
          real basisEval2877#5 = RMul(coeff280E,prod281D);
          real basisEval2878#3 = RMul(one280F,prod2821);
          real coeff2879#24 = 0.3e1;
          real basisEval287A#3 = RMul(coeff2879,prod2828);
          real basisEval287B#5 = RMul(coeff280E,prod282A);
          real coeff287C#25 = 0.4e1;
          real basisEval287D#1 = RMul(coeff287C,prod282C);
          real basisEval287E#3 = RMul(coeff2879,prod2830);
          real basisEval287F#3 = RMul(one280F,prod2834);
          real basisEval2880#2 = RMul(coeff2879,prod283A);
          real basisEval2881#3 = RMul(coeff287C,prod283E);
          real basisEval2882#3 = RMul(coeff280E,prod2840);
          real basisEval2883#3 = RMul(coeff287C,prod2842);
          real basisEval2884#2 = RMul(coeff2879,prod2846);
          real basisEval2885#2 = RMul(coeff281B,prod2848);
          real basisEval2886#3 = RMul(coeff287C,prod284C);
          real basisEval2887#3 = RMul(one280F,prod2850);
          real basisEval2888#4 = RMul(coeff2879,prod2856);
          real basisEval2889#2 = RMul(coeff287C,prod2859);
          real coeff288A#9 = 0.5e1;
          real basisEval288B#3 = RMul(coeff288A,prod285D);
          real basisEval288C#3 = RMul(coeff280E,prod285F);
          real basisEval288D#1 = RMul(coeff287C,prod2861);
          real coeff288E#6 = 0.8e1;
          real basisEval288F#1 = RMul(coeff288E,prod2865);
          real basisEval2890#4 = RMul(coeff2879,prod2867);
          real basisEval2891#4 = RMul(coeff281B,prod2869);
          real coeff2892#3 = 0.9e1;
          real basisEval2893#1 = RMul(coeff2892,prod286B);
          real basisEval2894#2 = RMul(coeff287C,prod286D);
          real basisEval2895#1 = RMul(coeff288E,prod286F);
          real basisEval2896#3 = RMul(coeff288A,prod2873);
          real basisEval2897#3 = RMul(one280F,prod2819);
          real basisEval2898#3 = RMul(coeff2879,prod2821);
          real basisEval2899#3 = RMul(one280F,prod2828);
          real basisEval289A#1 = RMul(coeff287C,prod282A);
          real basisEval289B#5 = RMul(coeff280E,prod282C);
          real basisEval289C#3 = RMul(coeff287C,prod2834);
          real basisEval289D#2 = RMul(coeff2879,prod2837);
          real basisEval289E#3 = RMul(one280F,prod283E);
          real basisEval289F#3 = RMul(coeff280E,prod2844);
          real basisEval28A0#2 = RMul(coeff281B,prod2846);
          real basisEval28A1#2 = RMul(coeff2879,prod2848);
          real basisEval28A2#3 = RMul(coeff288A,prod2850);
          real basisEval28A3#2 = RMul(coeff287C,prod2853);
          real basisEval28A4#3 = RMul(one280F,prod285D);
          real basisEval28A5#1 = RMul(coeff288E,prod285F);
          real basisEval28A6#1 = RMul(coeff287C,prod2863);
          real basisEval28A7#3 = RMul(coeff280E,prod2865);
          real basisEval28A8#1 = RMul(coeff2892,prod2867);
          real basisEval28A9#4 = RMul(coeff2879,prod286B);
          real basisEval28AA#1 = RMul(coeff288E,prod286D);
          real basisEval28AB#2 = RMul(coeff287C,prod286F);
          real basisEval28AC#1 = RMul(coeff281B,prod2819);
          real basisEval28AD#2 = RMul(coeff281B,prod2824);
          real basisEval28AE#1 = RMul(coeff282E,prod2828);
          real basisEval28AF#2 = RMul(coeff280E,prod2830);
          real basisEval28B0#2 = RMul(coeff281B,prod2837);
          real basisEval28B1#1 = RMul(coeff282E,prod283A);
          real basisEval28B2#1 = RMul(coeff284A,prod283E);
          real basisEval28B3#1 = RMul(coeff282E,prod2844);
          real basisEval28B4#3 = RMul(coeff280E,prod2846);
          real basisEval28B5#2 = RMul(coeff280E,prod284C);
          real basisEval28B6#1 = RMul(coeff281B,prod2853);
          real basisEval28B7#2 = RMul(coeff282E,prod2856);
          real basisEval28B8#1 = RMul(coeff284A,prod2859);
          real basisEval28B9#1 = RMul(coeff2871,prod285D);
          real basisEval28BA#1 = RMul(coeff282E,prod2863);
          real basisEval28BB#1 = RMul(coeff284A,prod2865);
          real basisEval28BC#1 = RMul(coeff280E,prod2867);
          real basisEval28BD#3 = RMul(coeff280E,prod286D);
          real basisEval28BE#1 = RMul(coeff281B,prod286F);
          real basisEval28BF#2 = RMul(coeff280E,prod2873);
          real basisEval28C0#3 = RMul(one280F,prod281D);
          real basisEval28C1#1 = RMul(coeff287C,prod2824);
          real basisEval28C2#3 = RMul(one280F,prod2830);
          real basisEval28C3#2 = RMul(coeff281B,prod283A);
          real basisEval28C4#2 = RMul(coeff2879,prod2840);
          real basisEval28C5#2 = RMul(coeff2879,prod2844);
          real basisEval28C6#3 = RMul(coeff280E,prod2848);
          real basisEval28C7#3 = RMul(one280F,prod284C);
          real basisEval28C8#1 = RMul(coeff288E,prod2853);
          real basisEval28C9#1 = RMul(coeff2892,prod2856);
          real basisEval28CA#1 = RMul(coeff288E,prod2859);
          real basisEval28CB#2 = RMul(coeff287C,prod285F);
          real basisEval28CC#2 = RMul(coeff287C,prod2865);
          real basisEval28CD#1 = RMul(coeff287C,prod2869);
          real basisEval28CE#3 = RMul(coeff280E,prod286F);
          real basisEval28CF#3 = RMul(one280F,prod2873);
          real basisEval28D0#1 = RMul(coeff281B,prod2815);
          real basisEval28D1#1 = RMul(coeff282E,prod2821);
          real basisEval28D2#1 = RMul(coeff284A,prod2834);
          real basisEval28D3#1 = RMul(coeff282E,prod2837);
          real basisEval28D4#1 = RMul(coeff282E,prod2840);
          real basisEval28D5#1 = RMul(coeff2871,prod2850);
          real basisEval28D6#1 = RMul(coeff284A,prod2853);
          real basisEval28D7#1 = RMul(coeff281B,prod2859);
          real basisEval28D8#1 = RMul(coeff284A,prod285F);
          real basisEval28D9#1 = RMul(coeff282E,prod2861);
          real basisEval28DA#1 = RMul(coeff280E,prod286B);
          real basisEval28DB#1 = RMul(coeff281B,prod286D);
          tensor[84] intermediateCons28DC#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval281E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval2825,basisEval2829,basisEval282B,basisEval282D,basisEval2831,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval2838,basisEval283B,basisEval283F,basisEval2841,basisEval2843,basisEval2845,basisEval2847,basisEval2849,basisEval284D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval2854,basisEval2857,basisEval285A,basisEval285E,basisEval2860,basisEval2862,basisEval2864,basisEval2866,basisEval2868,basisEval286A,basisEval286C,basisEval286E,basisEval2870,basisEval2874];
          tensor[84] intermediateCons28DD#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2876,basisEval281A,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2878,basisEval2825,basisEval287A,basisEval280D,basisEval287B,basisEval287D,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval287F,basisEval2838,basisEval2880,basisEval2881,basisEval280D,basisEval2882,basisEval2883,basisEval2845,basisEval280D,basisEval2884,basisEval2885,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2887,basisEval2854,basisEval2888,basisEval2889,basisEval288B,basisEval280D,basisEval288C,basisEval288D,basisEval2864,basisEval288F,basisEval280D,basisEval2890,basisEval2891,basisEval2893,basisEval280D,basisEval2894,basisEval2895,basisEval280D,basisEval2896,basisEval280D];
          tensor[84] intermediateCons28DE#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval2897,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval2825,basisEval2899,basisEval280D,basisEval289A,basisEval289B,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval289D,basisEval283B,basisEval289E,basisEval280D,basisEval2841,basisEval2883,basisEval289F,basisEval280D,basisEval28A0,basisEval28A1,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28A3,basisEval2888,basisEval285A,basisEval28A4,basisEval280D,basisEval28A5,basisEval2862,basisEval28A6,basisEval28A7,basisEval280D,basisEval28A8,basisEval2891,basisEval28A9,basisEval280D,basisEval28AA,basisEval28AB,basisEval280D,basisEval2896,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28DF#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval28AC,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval28AD,basisEval28AE,basisEval280D,basisEval280D,basisEval287B,basisEval282D,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval28B0,basisEval28B1,basisEval28B2,basisEval280D,basisEval280D,basisEval2882,basisEval2843,basisEval28B3,basisEval280D,basisEval280D,basisEval28B4,basisEval2885,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval28B6,basisEval28B7,basisEval28B8,basisEval28B9,basisEval280D,basisEval280D,basisEval288C,basisEval2862,basisEval28BA,basisEval28BB,basisEval280D,basisEval280D,basisEval28BC,basisEval2891,basisEval286C,basisEval280D,basisEval280D,basisEval28BD,basisEval28BE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E0#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval280D,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval28C1,basisEval287A,basisEval280D,basisEval280D,basisEval287B,basisEval289B,basisEval280D,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval28B0,basisEval28C3,basisEval2881,basisEval280D,basisEval280D,basisEval28C4,basisEval2883,basisEval28C5,basisEval280D,basisEval280D,basisEval28B4,basisEval28C6,basisEval280D,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28C8,basisEval28C9,basisEval28CA,basisEval288B,basisEval280D,basisEval280D,basisEval28CB,basisEval2862,basisEval2864,basisEval28CC,basisEval280D,basisEval280D,basisEval2890,basisEval28CD,basisEval28A9,basisEval280D,basisEval280D,basisEval28BD,basisEval28CE,basisEval280D,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E1#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D0,basisEval281A,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D1,basisEval28AD,basisEval2829,basisEval280D,basisEval280D,basisEval282B,basisEval289B,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D2,basisEval28D3,basisEval28C3,basisEval283F,basisEval280D,basisEval280D,basisEval28D4,basisEval2843,basisEval289F,basisEval280D,basisEval280D,basisEval28A0,basisEval28C6,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D5,basisEval28D6,basisEval28B7,basisEval28D7,basisEval285E,basisEval280D,basisEval280D,basisEval28D8,basisEval28D9,basisEval2864,basisEval28A7,basisEval280D,basisEval280D,basisEval2868,basisEval2891,basisEval28DA,basisEval280D,basisEval280D,basisEval28DB,basisEval28CE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          real vdot29C5#1 = VDot<84>(dofs26B6,intermediateCons28DC);
          real vdot29C7#2 = VDot<84>(dofs26B6,intermediateCons28DD);
          real vdot29C9#2 = VDot<84>(dofs26B6,intermediateCons28DE);
          tensor[3] tensor29CA#1 = <tensor[3]>[vdot29C5,vdot29C7,vdot29C9];
          real vdot29CE#1 = VDot<84>(dofs26B6,intermediateCons28DF);
          real vdot29D0#2 = VDot<84>(dofs26B6,intermediateCons28E0);
          tensor[3] tensor29D1#1 = <tensor[3]>[vdot29C7,vdot29CE,vdot29D0];
          real vdot29D7#1 = VDot<84>(dofs26B6,intermediateCons28E1);
          tensor[3] tensor29D8#1 = <tensor[3]>[vdot29C9,vdot29D0,vdot29D7];
          tensor[3,3] _t29C3#1 = <tensor[3,3]>[tensor29CA,tensor29D1,tensor29D8];
          real[3] _t29F0#1 = EigenVals3x3(_t29C3);
          real _t29F4#1 = Subscript<real[3]>(_t29F0,ilit236B);
          real basisEval2A11#1 = RMul(one280F,prod2824);
          real basisEval2A24#1 = RMul(one280F,prod2837);
          real basisEval2A27#1 = RMul(one280F,prod283A);
          real basisEval2A2F#3 = RMul(coeff280E,prod2842);
          real basisEval2A40#1 = RMul(one280F,prod2853);
          real basisEval2A43#1 = RMul(one280F,prod2856);
          real basisEval2A46#1 = RMul(one280F,prod2859);
          real basisEval2A4E#2 = RMul(coeff280E,prod2861);
          real basisEval2A50#2 = RMul(coeff280E,prod2863);
          real basisEval2A56#1 = RMul(coeff2879,prod2869);
          real prod52A61#1 = RMul(prod4284E,varAcc280C);
          real prod2A62#1 = RMul(one280F,prod52A61);
          real prod2A63#2 = RMul(one280F,prod2A62);
          real basisEval2A64#2 = RMul(one280F,prod2A63);
          real prod2A65#1 = RMul(varAcc280B,prod4284E);
          real prod2A66#3 = RMul(one280F,prod2A65);
          real basisEval2A67#1 = RMul(one280F,prod2A66);
          real prod2A68#1 = RMul(prod22826,prod32832);
          real prod2A69#3 = RMul(one280F,prod2A68);
          real basisEval2A6A#1 = RMul(one280F,prod2A69);
          real prod2A6B#1 = RMul(prod3283C,prod2281F);
          real prod2A6C#3 = RMul(one280F,prod2A6B);
          real basisEval2A6D#1 = RMul(one280F,prod2A6C);
          real prod2A6E#1 = RMul(prod4285B,varAcc280C);
          real prod2A6F#3 = RMul(one280F,prod2A6E);
          real basisEval2A70#1 = RMul(one280F,prod2A6F);
          real prod52A71#1 = RMul(prod4285B,varAcc280B);
          real prod2A72#1 = RMul(prod52A71,one280F);
          real prod2A73#2 = RMul(one280F,prod2A72);
          real basisEval2A74#2 = RMul(one280F,prod2A73);
          real prod2A75#3 = RMul(varAcc280A,prod284F);
          real basisEval2A76#1 = RMul(coeff280E,prod2A75);
          real prod2A77#2 = RMul(varAcc280A,prod2852);
          real basisEval2A78#2 = RMul(coeff280E,prod2A77);
          real prod2A79#2 = RMul(varAcc280A,prod2855);
          real basisEval2A7A#1 = RMul(coeff280E,prod2A79);
          real prod2A7B#2 = RMul(varAcc280A,prod2858);
          real basisEval2A7C#2 = RMul(coeff280E,prod2A7B);
          real prod2A7D#3 = RMul(varAcc280A,prod285C);
          real basisEval2A7E#1 = RMul(coeff280E,prod2A7D);
          real prod2A7F#3 = RMul(prod2282F,prod2833);
          real basisEval2A80#1 = RMul(coeff2879,prod2A7F);
          real prod2A81#2 = RMul(prod2282F,prod2836);
          real basisEval2A82#2 = RMul(coeff2879,prod2A81);
          real prod2A83#2 = RMul(prod2282F,prod2839);
          real basisEval2A84#2 = RMul(coeff2879,prod2A83);
          real prod2A85#3 = RMul(prod2282F,prod283D);
          real basisEval2A86#1 = RMul(coeff2879,prod2A85);
          real prod2A87#3 = RMul(prod3284B,prod2820);
          real basisEval2A88#1 = RMul(coeff287C,prod2A87);
          real prod2A89#2 = RMul(prod3284B,prod2823);
          real basisEval2A8A#1 = RMul(coeff287C,prod2A89);
          real prod2A8B#3 = RMul(prod3284B,prod2827);
          real basisEval2A8C#1 = RMul(coeff287C,prod2A8B);
          real prod2A8D#3 = RMul(prod42872,prod2814);
          real basisEval2A8E#1 = RMul(coeff288A,prod2A8D);
          real prod2A8F#3 = RMul(prod42872,prod2818);
          real basisEval2A90#1 = RMul(coeff288A,prod2A8F);
          real prod52A92#1 = RMul(prod42872,varAcc280A);
          real prod2A93#2 = RMul(prod52A92,prod2810);
          real basisEval2A94#1 = RMul(coeff281B,prod2A93);
          real basisEval2A99#1 = RMul(one280F,prod282A);
          real basisEval2A9E#1 = RMul(one280F,prod2840);
          real basisEval2AA0#1 = RMul(one280F,prod2846);
          real basisEval2AA7#1 = RMul(one280F,prod285F);
          real basisEval2AA8#1 = RMul(coeff2879,prod2863);
          real basisEval2AAA#1 = RMul(one280F,prod2867);
          real basisEval2AAB#2 = RMul(coeff280E,prod2869);
          real basisEval2AAC#1 = RMul(one280F,prod286D);
          real basisEval2AAF#1 = RMul(coeff280E,prod2A66);
          real basisEval2AB0#1 = RMul(coeff2879,prod2A69);
          real basisEval2AB1#1 = RMul(coeff287C,prod2A6C);
          real basisEval2AB2#1 = RMul(coeff288A,prod2A6F);
          real basisEval2AB3#1 = RMul(coeff281B,prod2A73);
          real basisEval2AB4#1 = RMul(one280F,prod2A75);
          real basisEval2AB5#2 = RMul(coeff2879,prod2A79);
          real basisEval2AB6#1 = RMul(coeff287C,prod2A7B);
          real basisEval2AB7#1 = RMul(coeff288A,prod2A7D);
          real basisEval2AB8#1 = RMul(one280F,prod2A7F);
          real basisEval2AB9#1 = RMul(coeff280E,prod2A81);
          real basisEval2ABA#1 = RMul(coeff287C,prod2A85);
          real basisEval2ABB#1 = RMul(one280F,prod2A87);
          real basisEval2ABC#2 = RMul(coeff280E,prod2A89);
          real basisEval2ABD#1 = RMul(coeff2879,prod2A8B);
          real basisEval2ABE#1 = RMul(one280F,prod2A8D);
          real basisEval2ABF#1 = RMul(coeff280E,prod2A8F);
          real basisEval2AC0#2 = RMul(one280F,prod2A93);
          real basisEval2AC3#1 = RMul(one280F,prod282C);
          real basisEval2AC8#1 = RMul(one280F,prod2844);
          real basisEval2ACA#1 = RMul(one280F,prod2848);
          real basisEval2ACF#1 = RMul(coeff2879,prod2861);
          real basisEval2AD0#1 = RMul(one280F,prod2865);
          real basisEval2AD1#1 = RMul(one280F,prod286B);
          real basisEval2AD3#1 = RMul(one280F,prod286F);
          real basisEval2AD4#1 = RMul(coeff281B,prod2A63);
          real basisEval2AD5#1 = RMul(coeff288A,prod2A66);
          real basisEval2AD6#1 = RMul(coeff287C,prod2A69);
          real basisEval2AD7#1 = RMul(coeff2879,prod2A6C);
          real basisEval2AD8#1 = RMul(coeff280E,prod2A6F);
          real basisEval2AD9#1 = RMul(coeff288A,prod2A75);
          real basisEval2ADA#1 = RMul(coeff287C,prod2A77);
          real basisEval2ADB#1 = RMul(one280F,prod2A7D);
          real basisEval2ADC#1 = RMul(coeff287C,prod2A7F);
          real basisEval2ADD#1 = RMul(coeff280E,prod2A83);
          real basisEval2ADE#1 = RMul(one280F,prod2A85);
          real basisEval2ADF#1 = RMul(coeff2879,prod2A87);
          real basisEval2AE0#1 = RMul(one280F,prod2A8B);
          real basisEval2AE1#1 = RMul(coeff280E,prod2A8D);
          real basisEval2AE2#1 = RMul(one280F,prod2A8F);
          tensor[84] intermediateCons2AE3#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval2876,basisEval2897,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2878,basisEval2A11,basisEval2899,basisEval287B,basisEval289B,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval287F,basisEval2A24,basisEval2A27,basisEval289E,basisEval2882,basisEval2A2F,basisEval289F,basisEval2884,basisEval28A1,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2887,basisEval2A40,basisEval2A43,basisEval2A46,basisEval28A4,basisEval288C,basisEval2A4E,basisEval2A50,basisEval28A7,basisEval2890,basisEval2A56,basisEval28A9,basisEval2894,basisEval28AB,basisEval2896,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2A64,basisEval2A67,basisEval2A6A,basisEval2A6D,basisEval2A70,basisEval2A74,basisEval2A76,basisEval2A78,basisEval2A7A,basisEval2A7C,basisEval2A7E,basisEval2A80,basisEval2A82,basisEval2A84,basisEval2A86,basisEval2A88,basisEval2A8A,basisEval2A8C,basisEval2A8E,basisEval2A90,basisEval2A94];
          tensor[84] intermediateCons2AE4#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval2876,basisEval281A,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval2878,basisEval2825,basisEval287A,basisEval280D,basisEval2A99,basisEval289B,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval287F,basisEval2838,basisEval2880,basisEval2881,basisEval280D,basisEval2A9E,basisEval2A2F,basisEval28C5,basisEval280D,basisEval2AA0,basisEval28C6,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval2887,basisEval2854,basisEval2888,basisEval2889,basisEval288B,basisEval280D,basisEval2AA7,basisEval2A4E,basisEval2AA8,basisEval28CC,basisEval280D,basisEval2AAA,basisEval2AAB,basisEval28A9,basisEval280D,basisEval2AAC,basisEval28CE,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval2A64,basisEval2AAF,basisEval2AB0,basisEval2AB1,basisEval2AB2,basisEval2AB3,basisEval280D,basisEval2AB4,basisEval2A78,basisEval2AB5,basisEval2AB6,basisEval2AB7,basisEval280D,basisEval2AB8,basisEval2AB9,basisEval2A84,basisEval2ABA,basisEval280D,basisEval2ABB,basisEval2ABC,basisEval2ABD,basisEval280D,basisEval2ABE,basisEval2ABF,basisEval280D,basisEval2AC0,basisEval280D];
          tensor[84] intermediateCons2AE5#1 = <tensor[84]>[basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval2816,basisEval2897,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval2898,basisEval2825,basisEval2899,basisEval280D,basisEval287B,basisEval2AC3,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval289C,basisEval289D,basisEval283B,basisEval289E,basisEval280D,basisEval28C4,basisEval2A2F,basisEval2AC8,basisEval280D,basisEval28B4,basisEval2ACA,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval28A2,basisEval28A3,basisEval2888,basisEval285A,basisEval28A4,basisEval280D,basisEval28CB,basisEval2ACF,basisEval2A50,basisEval2AD0,basisEval280D,basisEval2890,basisEval2AAB,basisEval2AD1,basisEval280D,basisEval28BD,basisEval2AD3,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval2AD4,basisEval2AD5,basisEval2AD6,basisEval2AD7,basisEval2AD8,basisEval2A74,basisEval280D,basisEval2AD9,basisEval2ADA,basisEval2AB5,basisEval2A7C,basisEval2ADB,basisEval280D,basisEval2ADC,basisEval2A82,basisEval2ADD,basisEval2ADE,basisEval280D,basisEval2ADF,basisEval2ABC,basisEval2AE0,basisEval280D,basisEval2AE1,basisEval2AE2,basisEval280D,basisEval2AC0,basisEval280D,basisEval280D];
          real vdot2BDA#1 = VDot<84>(dofs26B6,intermediateCons2AE3);
          real vdot2BDC#1 = VDot<84>(dofs26B6,intermediateCons2AE4);
          real vdot2BDE#1 = VDot<84>(dofs26B6,intermediateCons2AE5);
          tensor[3] probe_l_62BD8#2 = <tensor[3]>[vdot2BDA,vdot2BDC,vdot2BDE];
          real op1_e3_l_82BE7#1 = VDot<3>(probe_l_62BD8,probe_l_62BD8);
          real op1_e3_l_92BEA#1 = Sqrt(op1_e3_l_82BE7);
          real op1_e3_l_102BED#1 = RNeg(_t29F4);
          real op1_e3_l_112BF0#1 = RAdd(fBias2329,op1_e3_l_92BEA);
          real _t2BF3#1 = RDiv(op1_e3_l_102BED,op1_e3_l_112BF0);
          bool _t2BF6#1 = GT<real>(_t2BF3,fStrTh2325);
          if _t2BF6 then goto ASSIGN3ACE else goto ASSIGN389A
        ASSIGN3ACE:  preds = [COND2BF8]
          bool _t2BFB#1 = GTE<real>(one280F,fMaskTh2327);
          if _t2BFB then goto ASSIGN2BFF else goto ASSIGN3899
        ASSIGN2BFF:  preds = [COND2BFD]
          bool _t2BFE#1 = true;
          goto JOIN2C02
        JOIN2C02:  preds = [ASSIGN2BFF,ASSIGN3899]
          bool _t2C00#1 = phi(_t2BFE,_t2C01)
          goto JOIN2C05
        JOIN2C05:  preds = [JOIN2C02,ASSIGN389A]
          bool _t2C03#1 = phi(_t2C00,_t2C04)
          goto JOIN2C08
        JOIN2C08:  preds = [JOIN2C05,ASSIGN389B]
          bool _t2C06#1 = phi(_t2C03,_t2C07)
          bool _t2C09#1 = BNot(_t2C06);
          if _t2C09 then goto SAVE2C0C else goto JOIN2C0E
        SAVE2C0C:  preds = [COND2C0B]
          self.rayN = rayN234F;
          active
          goto JOIN2C0E
        JOIN2C0E:  preds = [*ACTIVE2C0D,COND2C0B]
          int ilit2C10#1 = 84;
          int mulRes2C11#84 = IMul(_t2313,ilit2C10);
          int idx2C14#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,mulRes2C11);
          int ilit2C15#93 = 1;
          int addRes2C16#1 = IAdd(mulRes2C11,ilit2C15);
          int idx2C17#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C16);
          int ilit2C18#7 = 2;
          int addRes2C19#1 = IAdd(mulRes2C11,ilit2C18);
          int idx2C1A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C19);
          int ilit2C1B#5 = 3;
          int addRes2C1C#1 = IAdd(mulRes2C11,ilit2C1B);
          int idx2C1D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1C);
          int ilit2C1E#1 = 4;
          int addRes2C1F#1 = IAdd(mulRes2C11,ilit2C1E);
          int idx2C20#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1F);
          int ilit2C21#1 = 5;
          int addRes2C22#1 = IAdd(mulRes2C11,ilit2C21);
          int idx2C23#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C22);
          int ilit2C24#1 = 6;
          int addRes2C25#1 = IAdd(mulRes2C11,ilit2C24);
          int idx2C26#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C25);
          int ilit2C27#1 = 7;
          int addRes2C28#1 = IAdd(mulRes2C11,ilit2C27);
          int idx2C29#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C28);
          int ilit2C2A#1 = 8;
          int addRes2C2B#1 = IAdd(mulRes2C11,ilit2C2A);
          int idx2C2C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2B);
          int ilit2C2D#1 = 9;
          int addRes2C2E#1 = IAdd(mulRes2C11,ilit2C2D);
          int idx2C2F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2E);
          int ilit2C30#1 = 10;
          int addRes2C31#1 = IAdd(mulRes2C11,ilit2C30);
          int idx2C32#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C31);
          int ilit2C33#1 = 11;
          int addRes2C34#1 = IAdd(mulRes2C11,ilit2C33);
          int idx2C35#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C34);
          int ilit2C36#1 = 12;
          int addRes2C37#1 = IAdd(mulRes2C11,ilit2C36);
          int idx2C38#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C37);
          int ilit2C39#1 = 13;
          int addRes2C3A#1 = IAdd(mulRes2C11,ilit2C39);
          int idx2C3B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3A);
          int ilit2C3C#1 = 14;
          int addRes2C3D#1 = IAdd(mulRes2C11,ilit2C3C);
          int idx2C3E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3D);
          int ilit2C3F#1 = 15;
          int addRes2C40#1 = IAdd(mulRes2C11,ilit2C3F);
          int idx2C41#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C40);
          int ilit2C42#1 = 16;
          int addRes2C43#1 = IAdd(mulRes2C11,ilit2C42);
          int idx2C44#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C43);
          int ilit2C45#1 = 17;
          int addRes2C46#1 = IAdd(mulRes2C11,ilit2C45);
          int idx2C47#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C46);
          int ilit2C48#1 = 18;
          int addRes2C49#1 = IAdd(mulRes2C11,ilit2C48);
          int idx2C4A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C49);
          int ilit2C4B#1 = 19;
          int addRes2C4C#1 = IAdd(mulRes2C11,ilit2C4B);
          int idx2C4D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4C);
          int ilit2C4E#1 = 20;
          int addRes2C4F#1 = IAdd(mulRes2C11,ilit2C4E);
          int idx2C50#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4F);
          int ilit2C51#1 = 21;
          int addRes2C52#1 = IAdd(mulRes2C11,ilit2C51);
          int idx2C53#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C52);
          int ilit2C54#1 = 22;
          int addRes2C55#1 = IAdd(mulRes2C11,ilit2C54);
          int idx2C56#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C55);
          int ilit2C57#1 = 23;
          int addRes2C58#1 = IAdd(mulRes2C11,ilit2C57);
          int idx2C59#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C58);
          int ilit2C5A#1 = 24;
          int addRes2C5B#1 = IAdd(mulRes2C11,ilit2C5A);
          int idx2C5C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5B);
          int ilit2C5D#1 = 25;
          int addRes2C5E#1 = IAdd(mulRes2C11,ilit2C5D);
          int idx2C5F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5E);
          int ilit2C60#1 = 26;
          int addRes2C61#1 = IAdd(mulRes2C11,ilit2C60);
          int idx2C62#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C61);
          int ilit2C63#1 = 27;
          int addRes2C64#1 = IAdd(mulRes2C11,ilit2C63);
          int idx2C65#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C64);
          int ilit2C66#1 = 28;
          int addRes2C67#1 = IAdd(mulRes2C11,ilit2C66);
          int idx2C68#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C67);
          int ilit2C69#1 = 29;
          int addRes2C6A#1 = IAdd(mulRes2C11,ilit2C69);
          int idx2C6B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6A);
          int ilit2C6C#1 = 30;
          int addRes2C6D#1 = IAdd(mulRes2C11,ilit2C6C);
          int idx2C6E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6D);
          int ilit2C6F#1 = 31;
          int addRes2C70#1 = IAdd(mulRes2C11,ilit2C6F);
          int idx2C71#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C70);
          int ilit2C72#1 = 32;
          int addRes2C73#1 = IAdd(mulRes2C11,ilit2C72);
          int idx2C74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C73);
          int ilit2C75#1 = 33;
          int addRes2C76#1 = IAdd(mulRes2C11,ilit2C75);
          int idx2C77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C76);
          int ilit2C78#1 = 34;
          int addRes2C79#1 = IAdd(mulRes2C11,ilit2C78);
          int idx2C7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C79);
          int ilit2C7B#1 = 35;
          int addRes2C7C#1 = IAdd(mulRes2C11,ilit2C7B);
          int idx2C7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7C);
          int ilit2C7E#1 = 36;
          int addRes2C7F#1 = IAdd(mulRes2C11,ilit2C7E);
          int idx2C80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7F);
          int ilit2C81#1 = 37;
          int addRes2C82#1 = IAdd(mulRes2C11,ilit2C81);
          int idx2C83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C82);
          int ilit2C84#1 = 38;
          int addRes2C85#1 = IAdd(mulRes2C11,ilit2C84);
          int idx2C86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C85);
          int ilit2C87#1 = 39;
          int addRes2C88#1 = IAdd(mulRes2C11,ilit2C87);
          int idx2C89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C88);
          int ilit2C8A#1 = 40;
          int addRes2C8B#1 = IAdd(mulRes2C11,ilit2C8A);
          int idx2C8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8B);
          int ilit2C8D#1 = 41;
          int addRes2C8E#1 = IAdd(mulRes2C11,ilit2C8D);
          int idx2C8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8E);
          int ilit2C90#1 = 42;
          int addRes2C91#1 = IAdd(mulRes2C11,ilit2C90);
          int idx2C92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C91);
          int ilit2C93#1 = 43;
          int addRes2C94#1 = IAdd(mulRes2C11,ilit2C93);
          int idx2C95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C94);
          int ilit2C96#1 = 44;
          int addRes2C97#1 = IAdd(mulRes2C11,ilit2C96);
          int idx2C98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C97);
          int ilit2C99#1 = 45;
          int addRes2C9A#1 = IAdd(mulRes2C11,ilit2C99);
          int idx2C9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9A);
          int ilit2C9C#1 = 46;
          int addRes2C9D#1 = IAdd(mulRes2C11,ilit2C9C);
          int idx2C9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9D);
          int ilit2C9F#1 = 47;
          int addRes2CA0#1 = IAdd(mulRes2C11,ilit2C9F);
          int idx2CA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA0);
          int ilit2CA2#1 = 48;
          int addRes2CA3#1 = IAdd(mulRes2C11,ilit2CA2);
          int idx2CA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA3);
          int ilit2CA5#1 = 49;
          int addRes2CA6#1 = IAdd(mulRes2C11,ilit2CA5);
          int idx2CA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA6);
          int ilit2CA8#1 = 50;
          int addRes2CA9#1 = IAdd(mulRes2C11,ilit2CA8);
          int idx2CAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA9);
          int ilit2CAB#1 = 51;
          int addRes2CAC#1 = IAdd(mulRes2C11,ilit2CAB);
          int idx2CAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAC);
          int ilit2CAE#1 = 52;
          int addRes2CAF#1 = IAdd(mulRes2C11,ilit2CAE);
          int idx2CB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAF);
          int ilit2CB1#1 = 53;
          int addRes2CB2#1 = IAdd(mulRes2C11,ilit2CB1);
          int idx2CB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB2);
          int ilit2CB4#1 = 54;
          int addRes2CB5#1 = IAdd(mulRes2C11,ilit2CB4);
          int idx2CB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB5);
          int ilit2CB7#1 = 55;
          int addRes2CB8#1 = IAdd(mulRes2C11,ilit2CB7);
          int idx2CB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB8);
          int ilit2CBA#1 = 56;
          int addRes2CBB#1 = IAdd(mulRes2C11,ilit2CBA);
          int idx2CBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBB);
          int ilit2CBD#1 = 57;
          int addRes2CBE#1 = IAdd(mulRes2C11,ilit2CBD);
          int idx2CBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBE);
          int ilit2CC0#1 = 58;
          int addRes2CC1#1 = IAdd(mulRes2C11,ilit2CC0);
          int idx2CC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC1);
          int ilit2CC3#1 = 59;
          int addRes2CC4#1 = IAdd(mulRes2C11,ilit2CC3);
          int idx2CC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC4);
          int ilit2CC6#1 = 60;
          int addRes2CC7#1 = IAdd(mulRes2C11,ilit2CC6);
          int idx2CC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC7);
          int ilit2CC9#1 = 61;
          int addRes2CCA#1 = IAdd(mulRes2C11,ilit2CC9);
          int idx2CCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCA);
          int ilit2CCC#1 = 62;
          int addRes2CCD#1 = IAdd(mulRes2C11,ilit2CCC);
          int idx2CCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCD);
          int ilit2CCF#1 = 63;
          int addRes2CD0#1 = IAdd(mulRes2C11,ilit2CCF);
          int idx2CD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD0);
          int ilit2CD2#1 = 64;
          int addRes2CD3#1 = IAdd(mulRes2C11,ilit2CD2);
          int idx2CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD3);
          int ilit2CD5#1 = 65;
          int addRes2CD6#1 = IAdd(mulRes2C11,ilit2CD5);
          int idx2CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD6);
          int ilit2CD8#1 = 66;
          int addRes2CD9#1 = IAdd(mulRes2C11,ilit2CD8);
          int idx2CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD9);
          int ilit2CDB#1 = 67;
          int addRes2CDC#1 = IAdd(mulRes2C11,ilit2CDB);
          int idx2CDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDC);
          int ilit2CDE#1 = 68;
          int addRes2CDF#1 = IAdd(mulRes2C11,ilit2CDE);
          int idx2CE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDF);
          int ilit2CE1#1 = 69;
          int addRes2CE2#1 = IAdd(mulRes2C11,ilit2CE1);
          int idx2CE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE2);
          int ilit2CE4#1 = 70;
          int addRes2CE5#1 = IAdd(mulRes2C11,ilit2CE4);
          int idx2CE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE5);
          int ilit2CE7#1 = 71;
          int addRes2CE8#1 = IAdd(mulRes2C11,ilit2CE7);
          int idx2CE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE8);
          int ilit2CEA#1 = 72;
          int addRes2CEB#1 = IAdd(mulRes2C11,ilit2CEA);
          int idx2CEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEB);
          int ilit2CED#1 = 73;
          int addRes2CEE#1 = IAdd(mulRes2C11,ilit2CED);
          int idx2CEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEE);
          int ilit2CF0#1 = 74;
          int addRes2CF1#1 = IAdd(mulRes2C11,ilit2CF0);
          int idx2CF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF1);
          int ilit2CF3#1 = 75;
          int addRes2CF4#1 = IAdd(mulRes2C11,ilit2CF3);
          int idx2CF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF4);
          int ilit2CF6#1 = 76;
          int addRes2CF7#1 = IAdd(mulRes2C11,ilit2CF6);
          int idx2CF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF7);
          int ilit2CF9#1 = 77;
          int addRes2CFA#1 = IAdd(mulRes2C11,ilit2CF9);
          int idx2CFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFA);
          int ilit2CFC#1 = 78;
          int addRes2CFD#1 = IAdd(mulRes2C11,ilit2CFC);
          int idx2CFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFD);
          int ilit2CFF#1 = 79;
          int addRes2D00#1 = IAdd(mulRes2C11,ilit2CFF);
          int idx2D01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D00);
          int ilit2D02#1 = 80;
          int addRes2D03#1 = IAdd(mulRes2C11,ilit2D02);
          int idx2D04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D03);
          int ilit2D05#1 = 81;
          int addRes2D06#1 = IAdd(mulRes2C11,ilit2D05);
          int idx2D07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D06);
          int ilit2D08#1 = 82;
          int addRes2D09#1 = IAdd(mulRes2C11,ilit2D08);
          int idx2D0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D09);
          int ilit2D0B#1 = 83;
          int addRes2D0C#1 = IAdd(mulRes2C11,ilit2D0B);
          int idx2D0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D0C);
          int mulRes2E13#1 = IMul(ilit2C15,idx2C14);
          int mulRes2E15#1 = IMul(ilit2C15,idx2C17);
          int mulRes2E18#1 = IMul(ilit2C15,idx2C1A);
          int mulRes2E1B#1 = IMul(ilit2C15,idx2C1D);
          int mulRes2E1E#1 = IMul(ilit2C15,idx2C20);
          int mulRes2E21#1 = IMul(ilit2C15,idx2C23);
          int mulRes2E24#1 = IMul(ilit2C15,idx2C26);
          int mulRes2E27#1 = IMul(ilit2C15,idx2C29);
          int mulRes2E2A#1 = IMul(ilit2C15,idx2C2C);
          int mulRes2E2D#1 = IMul(ilit2C15,idx2C2F);
          int mulRes2E30#1 = IMul(ilit2C15,idx2C32);
          int mulRes2E33#1 = IMul(ilit2C15,idx2C35);
          int mulRes2E36#1 = IMul(ilit2C15,idx2C38);
          int mulRes2E39#1 = IMul(ilit2C15,idx2C3B);
          int mulRes2E3C#1 = IMul(ilit2C15,idx2C3E);
          int mulRes2E3F#1 = IMul(ilit2C15,idx2C41);
          int mulRes2E42#1 = IMul(ilit2C15,idx2C44);
          int mulRes2E45#1 = IMul(ilit2C15,idx2C47);
          int mulRes2E48#1 = IMul(ilit2C15,idx2C4A);
          int mulRes2E4B#1 = IMul(ilit2C15,idx2C4D);
          int mulRes2E4E#1 = IMul(ilit2C15,idx2C50);
          int mulRes2E51#1 = IMul(ilit2C15,idx2C53);
          int mulRes2E54#1 = IMul(ilit2C15,idx2C56);
          int mulRes2E57#1 = IMul(ilit2C15,idx2C59);
          int mulRes2E5A#1 = IMul(ilit2C15,idx2C5C);
          int mulRes2E5D#1 = IMul(ilit2C15,idx2C5F);
          int mulRes2E60#1 = IMul(ilit2C15,idx2C62);
          int mulRes2E63#1 = IMul(ilit2C15,idx2C65);
          int mulRes2E66#1 = IMul(ilit2C15,idx2C68);
          int mulRes2E69#1 = IMul(ilit2C15,idx2C6B);
          int mulRes2E6C#1 = IMul(ilit2C15,idx2C6E);
          int mulRes2E6F#1 = IMul(ilit2C15,idx2C71);
          int mulRes2E72#1 = IMul(ilit2C15,idx2C74);
          int mulRes2E75#1 = IMul(ilit2C15,idx2C77);
          int mulRes2E78#1 = IMul(ilit2C15,idx2C7A);
          int mulRes2E7B#1 = IMul(ilit2C15,idx2C7D);
          int mulRes2E7E#1 = IMul(ilit2C15,idx2C80);
          int mulRes2E81#1 = IMul(ilit2C15,idx2C83);
          int mulRes2E84#1 = IMul(ilit2C15,idx2C86);
          int mulRes2E87#1 = IMul(ilit2C15,idx2C89);
          int mulRes2E8A#1 = IMul(ilit2C15,idx2C8C);
          int mulRes2E8D#1 = IMul(ilit2C15,idx2C8F);
          int mulRes2E90#1 = IMul(ilit2C15,idx2C92);
          int mulRes2E93#1 = IMul(ilit2C15,idx2C95);
          int mulRes2E96#1 = IMul(ilit2C15,idx2C98);
          int mulRes2E99#1 = IMul(ilit2C15,idx2C9B);
          int mulRes2E9C#1 = IMul(ilit2C15,idx2C9E);
          int mulRes2E9F#1 = IMul(ilit2C15,idx2CA1);
          int mulRes2EA2#1 = IMul(ilit2C15,idx2CA4);
          int mulRes2EA5#1 = IMul(ilit2C15,idx2CA7);
          int mulRes2EA8#1 = IMul(ilit2C15,idx2CAA);
          int mulRes2EAB#1 = IMul(ilit2C15,idx2CAD);
          int mulRes2EAE#1 = IMul(ilit2C15,idx2CB0);
          int mulRes2EB1#1 = IMul(ilit2C15,idx2CB3);
          int mulRes2EB4#1 = IMul(ilit2C15,idx2CB6);
          int mulRes2EB7#1 = IMul(ilit2C15,idx2CB9);
          int mulRes2EBA#1 = IMul(ilit2C15,idx2CBC);
          int mulRes2EBD#1 = IMul(ilit2C15,idx2CBF);
          int mulRes2EC0#1 = IMul(ilit2C15,idx2CC2);
          int mulRes2EC3#1 = IMul(ilit2C15,idx2CC5);
          int mulRes2EC6#1 = IMul(ilit2C15,idx2CC8);
          int mulRes2EC9#1 = IMul(ilit2C15,idx2CCB);
          int mulRes2ECC#1 = IMul(ilit2C15,idx2CCE);
          int mulRes2ECF#1 = IMul(ilit2C15,idx2CD1);
          int mulRes2ED2#1 = IMul(ilit2C15,idx2CD4);
          int mulRes2ED5#1 = IMul(ilit2C15,idx2CD7);
          int mulRes2ED8#1 = IMul(ilit2C15,idx2CDA);
          int mulRes2EDB#1 = IMul(ilit2C15,idx2CDD);
          int mulRes2EDE#1 = IMul(ilit2C15,idx2CE0);
          int mulRes2EE1#1 = IMul(ilit2C15,idx2CE3);
          int mulRes2EE4#1 = IMul(ilit2C15,idx2CE6);
          int mulRes2EE7#1 = IMul(ilit2C15,idx2CE9);
          int mulRes2EEA#1 = IMul(ilit2C15,idx2CEC);
          int mulRes2EED#1 = IMul(ilit2C15,idx2CEF);
          int mulRes2EF0#1 = IMul(ilit2C15,idx2CF2);
          int mulRes2EF3#1 = IMul(ilit2C15,idx2CF5);
          int mulRes2EF6#1 = IMul(ilit2C15,idx2CF8);
          int mulRes2EF9#1 = IMul(ilit2C15,idx2CFB);
          int mulRes2EFC#1 = IMul(ilit2C15,idx2CFE);
          int mulRes2EFF#1 = IMul(ilit2C15,idx2D01);
          int mulRes2F02#1 = IMul(ilit2C15,idx2D04);
          int mulRes2F05#1 = IMul(ilit2C15,idx2D07);
          int mulRes2F08#1 = IMul(ilit2C15,idx2D0A);
          int mulRes2F0B#1 = IMul(ilit2C15,idx2D0D);
          real dof2F0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E13);
          real dof2F0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E15);
          real dof2F0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E18);
          real dof2F0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1B);
          real dof2F10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1E);
          real dof2F11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E21);
          real dof2F12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E24);
          real dof2F13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E27);
          real dof2F14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2A);
          real dof2F15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2D);
          real dof2F16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E30);
          real dof2F17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E33);
          real dof2F18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E36);
          real dof2F19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E39);
          real dof2F1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3C);
          real dof2F1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3F);
          real dof2F1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E42);
          real dof2F1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E45);
          real dof2F1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E48);
          real dof2F1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4B);
          real dof2F20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4E);
          real dof2F21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E51);
          real dof2F22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E54);
          real dof2F23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E57);
          real dof2F24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5A);
          real dof2F25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5D);
          real dof2F26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E60);
          real dof2F27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E63);
          real dof2F28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E66);
          real dof2F29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E69);
          real dof2F2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6C);
          real dof2F2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6F);
          real dof2F2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E72);
          real dof2F2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E75);
          real dof2F2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E78);
          real dof2F2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7B);
          real dof2F30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7E);
          real dof2F31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E81);
          real dof2F32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E84);
          real dof2F33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E87);
          real dof2F34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8A);
          real dof2F35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8D);
          real dof2F36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E90);
          real dof2F37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E93);
          real dof2F38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E96);
          real dof2F39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E99);
          real dof2F3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9C);
          real dof2F3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9F);
          real dof2F3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA2);
          real dof2F3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA5);
          real dof2F3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA8);
          real dof2F3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAB);
          real dof2F40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAE);
          real dof2F41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB1);
          real dof2F42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB4);
          real dof2F43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB7);
          real dof2F44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBA);
          real dof2F45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBD);
          real dof2F46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC0);
          real dof2F47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC3);
          real dof2F48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC6);
          real dof2F49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC9);
          real dof2F4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECC);
          real dof2F4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECF);
          real dof2F4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED2);
          real dof2F4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED5);
          real dof2F4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED8);
          real dof2F4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDB);
          real dof2F50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDE);
          real dof2F51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE1);
          real dof2F52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE4);
          real dof2F53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE7);
          real dof2F54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EEA);
          real dof2F55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EED);
          real dof2F56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF0);
          real dof2F57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF3);
          real dof2F58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF6);
          real dof2F59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF9);
          real dof2F5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFC);
          real dof2F5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFF);
          real dof2F5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F02);
          real dof2F5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F05);
          real dof2F5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F08);
          real dof2F5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F0B);
          tensor[84] dofs2F60#10 = <tensor[84]>[dof2F0C,dof2F0D,dof2F0E,dof2F0F,dof2F10,dof2F11,dof2F12,dof2F13,dof2F14,dof2F15,dof2F16,dof2F17,dof2F18,dof2F19,dof2F1A,dof2F1B,dof2F1C,dof2F1D,dof2F1E,dof2F1F,dof2F20,dof2F21,dof2F22,dof2F23,dof2F24,dof2F25,dof2F26,dof2F27,dof2F28,dof2F29,dof2F2A,dof2F2B,dof2F2C,dof2F2D,dof2F2E,dof2F2F,dof2F30,dof2F31,dof2F32,dof2F33,dof2F34,dof2F35,dof2F36,dof2F37,dof2F38,dof2F39,dof2F3A,dof2F3B,dof2F3C,dof2F3D,dof2F3E,dof2F3F,dof2F40,dof2F41,dof2F42,dof2F43,dof2F44,dof2F45,dof2F46,dof2F47,dof2F48,dof2F49,dof2F4A,dof2F4B,dof2F4C,dof2F4D,dof2F4E,dof2F4F,dof2F50,dof2F51,dof2F52,dof2F53,dof2F54,dof2F55,dof2F56,dof2F57,dof2F58,dof2F59,dof2F5A,dof2F5B,dof2F5C,dof2F5D,dof2F5E,dof2F5F];
          real varAcc30B4#20 = VIndex<3,0>(pos235B);
          real varAcc30B5#10 = VIndex<3,1>(pos235B);
          real varAcc30B6#10 = VIndex<3,2>(pos235B);
          real basisEval30B7#385 = 0.e0;
          real coeff30B8#47 = 0.2e1;
          real one30B9#218 = 0.1e1;
          real prod30BA#12 = RMul(one30B9,one30B9);
          real prod30BB#2 = RMul(one30B9,prod30BA);
          real basisEval30BC#3 = RMul(coeff30B8,prod30BB);
          real prod30BE#5 = RMul(one30B9,varAcc30B6);
          real prod30BF#3 = RMul(one30B9,prod30BE);
          real basisEval30C0#5 = RMul(coeff30B8,prod30BF);
          real prod30C2#5 = RMul(varAcc30B5,one30B9);
          real prod30C3#3 = RMul(one30B9,prod30C2);
          real basisEval30C4#5 = RMul(coeff30B8,prod30C3);
          real coeff30C5#25 = 0.6e1;
          real prod30C7#3 = RMul(varAcc30B4,prod30BA);
          real basisEval30C8#1 = RMul(coeff30C5,prod30C7);
          real prod230C9#5 = RMul(varAcc30B6,varAcc30B6);
          real prod30CA#4 = RMul(one30B9,prod230C9);
          real prod30CB#4 = RMul(one30B9,prod30CA);
          real basisEval30CC#2 = RMul(coeff30B8,prod30CB);
          real prod30CD#4 = RMul(varAcc30B5,varAcc30B6);
          real prod30CE#4 = RMul(one30B9,prod30CD);
          real basisEval30CF#5 = RMul(coeff30B8,prod30CE);
          real prod230D0#5 = RMul(varAcc30B5,varAcc30B5);
          real prod30D1#4 = RMul(prod230D0,one30B9);
          real prod30D2#4 = RMul(one30B9,prod30D1);
          real basisEval30D3#2 = RMul(coeff30B8,prod30D2);
          real prod30D4#4 = RMul(varAcc30B4,prod30BE);
          real basisEval30D5#2 = RMul(coeff30C5,prod30D4);
          real prod30D6#4 = RMul(varAcc30B4,prod30C2);
          real basisEval30D7#2 = RMul(coeff30C5,prod30D6);
          real coeff30D8#15 = 0.12e2;
          real prod230D9#11 = RMul(varAcc30B4,varAcc30B4);
          real prod30DA#4 = RMul(prod230D9,prod30BA);
          real basisEval30DB#1 = RMul(coeff30D8,prod30DA);
          real prod330DC#4 = RMul(prod230C9,varAcc30B6);
          real prod30DD#3 = RMul(one30B9,prod330DC);
          real prod30DE#4 = RMul(one30B9,prod30DD);
          real basisEval30DF#2 = RMul(coeff30B8,prod30DE);
          real prod30E0#3 = RMul(varAcc30B5,prod230C9);
          real prod30E1#5 = RMul(one30B9,prod30E0);
          real basisEval30E2#3 = RMul(coeff30B8,prod30E1);
          real prod30E3#3 = RMul(prod230D0,varAcc30B6);
          real prod30E4#5 = RMul(one30B9,prod30E3);
          real basisEval30E5#3 = RMul(coeff30B8,prod30E4);
          real prod330E6#4 = RMul(prod230D0,varAcc30B5);
          real prod30E7#3 = RMul(prod330E6,one30B9);
          real prod30E8#4 = RMul(one30B9,prod30E7);
          real basisEval30E9#2 = RMul(coeff30B8,prod30E8);
          real prod30EA#5 = RMul(varAcc30B4,prod30CA);
          real basisEval30EB#2 = RMul(coeff30C5,prod30EA);
          real prod30EC#3 = RMul(varAcc30B4,prod30CD);
          real basisEval30ED#3 = RMul(coeff30C5,prod30EC);
          real prod30EE#5 = RMul(varAcc30B4,prod30D1);
          real basisEval30EF#2 = RMul(coeff30C5,prod30EE);
          real prod30F0#5 = RMul(prod230D9,prod30BE);
          real basisEval30F1#1 = RMul(coeff30D8,prod30F0);
          real prod30F2#5 = RMul(prod230D9,prod30C2);
          real basisEval30F3#1 = RMul(coeff30D8,prod30F2);
          real coeff30F4#9 = 0.20e2;
          real prod330F5#7 = RMul(prod230D9,varAcc30B4);
          real prod30F6#4 = RMul(prod330F5,prod30BA);
          real basisEval30F7#1 = RMul(coeff30F4,prod30F6);
          real prod430F8#3 = RMul(prod330DC,varAcc30B6);
          real prod30F9#2 = RMul(one30B9,prod430F8);
          real prod30FA#4 = RMul(one30B9,prod30F9);
          real basisEval30FB#2 = RMul(coeff30B8,prod30FA);
          real prod30FC#2 = RMul(varAcc30B5,prod330DC);
          real prod30FD#6 = RMul(one30B9,prod30FC);
          real basisEval30FE#3 = RMul(coeff30B8,prod30FD);
          real prod30FF#2 = RMul(prod230D0,prod230C9);
          real prod3100#5 = RMul(one30B9,prod30FF);
          real basisEval3101#1 = RMul(coeff30B8,prod3100);
          real prod3102#2 = RMul(prod330E6,varAcc30B6);
          real prod3103#6 = RMul(one30B9,prod3102);
          real basisEval3104#3 = RMul(coeff30B8,prod3103);
          real prod43105#3 = RMul(prod330E6,varAcc30B5);
          real prod3106#2 = RMul(prod43105,one30B9);
          real prod3107#4 = RMul(one30B9,prod3106);
          real basisEval3108#2 = RMul(coeff30B8,prod3107);
          real prod3109#6 = RMul(varAcc30B4,prod30DD);
          real basisEval310A#1 = RMul(coeff30C5,prod3109);
          real prod310B#5 = RMul(varAcc30B4,prod30E0);
          real basisEval310C#4 = RMul(coeff30C5,prod310B);
          real prod310D#5 = RMul(varAcc30B4,prod30E3);
          real basisEval310E#4 = RMul(coeff30C5,prod310D);
          real prod310F#6 = RMul(varAcc30B4,prod30E7);
          real basisEval3110#1 = RMul(coeff30C5,prod310F);
          real prod3111#5 = RMul(prod230D9,prod30CA);
          real basisEval3112#2 = RMul(coeff30D8,prod3111);
          real prod3113#5 = RMul(prod230D9,prod30CD);
          real basisEval3114#1 = RMul(coeff30D8,prod3113);
          real prod3115#5 = RMul(prod230D9,prod30D1);
          real basisEval3116#2 = RMul(coeff30D8,prod3115);
          real prod3117#6 = RMul(prod330F5,prod30BE);
          real basisEval3118#1 = RMul(coeff30F4,prod3117);
          real prod3119#6 = RMul(prod330F5,prod30C2);
          real basisEval311A#1 = RMul(coeff30F4,prod3119);
          real coeff311B#3 = 0.30e2;
          real prod4311C#4 = RMul(prod330F5,varAcc30B4);
          real prod311D#4 = RMul(prod4311C,prod30BA);
          real basisEval311E#1 = RMul(coeff311B,prod311D);
          real basisEval311F#7 = RMul(one30B9,prod30BB);
          real basisEval3120#3 = RMul(one30B9,prod30BF);
          real basisEval3121#5 = RMul(coeff30B8,prod30C7);
          real basisEval3122#3 = RMul(one30B9,prod30CB);
          real coeff3123#24 = 0.3e1;
          real basisEval3124#3 = RMul(coeff3123,prod30D2);
          real basisEval3125#5 = RMul(coeff30B8,prod30D4);
          real coeff3126#25 = 0.4e1;
          real basisEval3127#1 = RMul(coeff3126,prod30D6);
          real basisEval3128#3 = RMul(coeff3123,prod30DA);
          real basisEval3129#3 = RMul(one30B9,prod30DE);
          real basisEval312A#2 = RMul(coeff3123,prod30E4);
          real basisEval312B#3 = RMul(coeff3126,prod30E8);
          real basisEval312C#3 = RMul(coeff30B8,prod30EA);
          real basisEval312D#3 = RMul(coeff3126,prod30EC);
          real basisEval312E#2 = RMul(coeff3123,prod30F0);
          real basisEval312F#2 = RMul(coeff30C5,prod30F2);
          real basisEval3130#3 = RMul(coeff3126,prod30F6);
          real basisEval3131#3 = RMul(one30B9,prod30FA);
          real basisEval3132#4 = RMul(coeff3123,prod3100);
          real basisEval3133#2 = RMul(coeff3126,prod3103);
          real coeff3134#9 = 0.5e1;
          real basisEval3135#3 = RMul(coeff3134,prod3107);
          real basisEval3136#3 = RMul(coeff30B8,prod3109);
          real basisEval3137#1 = RMul(coeff3126,prod310B);
          real coeff3138#6 = 0.8e1;
          real basisEval3139#1 = RMul(coeff3138,prod310F);
          real basisEval313A#4 = RMul(coeff3123,prod3111);
          real basisEval313B#4 = RMul(coeff30C5,prod3113);
          real coeff313C#3 = 0.9e1;
          real basisEval313D#1 = RMul(coeff313C,prod3115);
          real basisEval313E#2 = RMul(coeff3126,prod3117);
          real basisEval313F#1 = RMul(coeff3138,prod3119);
          real basisEval3140#3 = RMul(coeff3134,prod311D);
          real basisEval3141#3 = RMul(one30B9,prod30C3);
          real basisEval3142#3 = RMul(coeff3123,prod30CB);
          real basisEval3143#3 = RMul(one30B9,prod30D2);
          real basisEval3144#1 = RMul(coeff3126,prod30D4);
          real basisEval3145#5 = RMul(coeff30B8,prod30D6);
          real basisEval3146#3 = RMul(coeff3126,prod30DE);
          real basisEval3147#2 = RMul(coeff3123,prod30E1);
          real basisEval3148#3 = RMul(one30B9,prod30E8);
          real basisEval3149#3 = RMul(coeff30B8,prod30EE);
          real basisEval314A#2 = RMul(coeff30C5,prod30F0);
          real basisEval314B#2 = RMul(coeff3123,prod30F2);
          real basisEval314C#3 = RMul(coeff3134,prod30FA);
          real basisEval314D#2 = RMul(coeff3126,prod30FD);
          real basisEval314E#3 = RMul(one30B9,prod3107);
          real basisEval314F#1 = RMul(coeff3138,prod3109);
          real basisEval3150#1 = RMul(coeff3126,prod310D);
          real basisEval3151#3 = RMul(coeff30B8,prod310F);
          real basisEval3152#1 = RMul(coeff313C,prod3111);
          real basisEval3153#4 = RMul(coeff3123,prod3115);
          real basisEval3154#1 = RMul(coeff3138,prod3117);
          real basisEval3155#2 = RMul(coeff3126,prod3119);
          real basisEval3156#1 = RMul(coeff30C5,prod30C3);
          real basisEval3157#2 = RMul(coeff30C5,prod30CE);
          real basisEval3158#1 = RMul(coeff30D8,prod30D2);
          real basisEval3159#2 = RMul(coeff30B8,prod30DA);
          real basisEval315A#2 = RMul(coeff30C5,prod30E1);
          real basisEval315B#1 = RMul(coeff30D8,prod30E4);
          real basisEval315C#1 = RMul(coeff30F4,prod30E8);
          real basisEval315D#1 = RMul(coeff30D8,prod30EE);
          real basisEval315E#3 = RMul(coeff30B8,prod30F0);
          real basisEval315F#2 = RMul(coeff30B8,prod30F6);
          real basisEval3160#1 = RMul(coeff30C5,prod30FD);
          real basisEval3161#2 = RMul(coeff30D8,prod3100);
          real basisEval3162#1 = RMul(coeff30F4,prod3103);
          real basisEval3163#1 = RMul(coeff311B,prod3107);
          real basisEval3164#1 = RMul(coeff30D8,prod310D);
          real basisEval3165#1 = RMul(coeff30F4,prod310F);
          real basisEval3166#1 = RMul(coeff30B8,prod3111);
          real basisEval3167#3 = RMul(coeff30B8,prod3117);
          real basisEval3168#1 = RMul(coeff30C5,prod3119);
          real basisEval3169#2 = RMul(coeff30B8,prod311D);
          real basisEval316A#3 = RMul(one30B9,prod30C7);
          real basisEval316B#1 = RMul(coeff3126,prod30CE);
          real basisEval316C#3 = RMul(one30B9,prod30DA);
          real basisEval316D#2 = RMul(coeff30C5,prod30E4);
          real basisEval316E#2 = RMul(coeff3123,prod30EA);
          real basisEval316F#2 = RMul(coeff3123,prod30EE);
          real basisEval3170#3 = RMul(coeff30B8,prod30F2);
          real basisEval3171#3 = RMul(one30B9,prod30F6);
          real basisEval3172#1 = RMul(coeff3138,prod30FD);
          real basisEval3173#1 = RMul(coeff313C,prod3100);
          real basisEval3174#1 = RMul(coeff3138,prod3103);
          real basisEval3175#2 = RMul(coeff3126,prod3109);
          real basisEval3176#2 = RMul(coeff3126,prod310F);
          real basisEval3177#1 = RMul(coeff3126,prod3113);
          real basisEval3178#3 = RMul(coeff30B8,prod3119);
          real basisEval3179#3 = RMul(one30B9,prod311D);
          real basisEval317A#1 = RMul(coeff30C5,prod30BF);
          real basisEval317B#1 = RMul(coeff30D8,prod30CB);
          real basisEval317C#1 = RMul(coeff30F4,prod30DE);
          real basisEval317D#1 = RMul(coeff30D8,prod30E1);
          real basisEval317E#1 = RMul(coeff30D8,prod30EA);
          real basisEval317F#1 = RMul(coeff311B,prod30FA);
          real basisEval3180#1 = RMul(coeff30F4,prod30FD);
          real basisEval3181#1 = RMul(coeff30C5,prod3103);
          real basisEval3182#1 = RMul(coeff30F4,prod3109);
          real basisEval3183#1 = RMul(coeff30D8,prod310B);
          real basisEval3184#1 = RMul(coeff30B8,prod3115);
          real basisEval3185#1 = RMul(coeff30C5,prod3117);
          tensor[84] intermediateCons3186#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30C8,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval30CF,basisEval30D3,basisEval30D5,basisEval30D7,basisEval30DB,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval30E2,basisEval30E5,basisEval30E9,basisEval30EB,basisEval30ED,basisEval30EF,basisEval30F1,basisEval30F3,basisEval30F7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval30FE,basisEval3101,basisEval3104,basisEval3108,basisEval310A,basisEval310C,basisEval310E,basisEval3110,basisEval3112,basisEval3114,basisEval3116,basisEval3118,basisEval311A,basisEval311E];
          tensor[84] intermediateCons3187#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3120,basisEval30C4,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3122,basisEval30CF,basisEval3124,basisEval30B7,basisEval3125,basisEval3127,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3129,basisEval30E2,basisEval312A,basisEval312B,basisEval30B7,basisEval312C,basisEval312D,basisEval30EF,basisEval30B7,basisEval312E,basisEval312F,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3131,basisEval30FE,basisEval3132,basisEval3133,basisEval3135,basisEval30B7,basisEval3136,basisEval3137,basisEval310E,basisEval3139,basisEval30B7,basisEval313A,basisEval313B,basisEval313D,basisEval30B7,basisEval313E,basisEval313F,basisEval30B7,basisEval3140,basisEval30B7];
          tensor[84] intermediateCons3188#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3141,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval30CF,basisEval3143,basisEval30B7,basisEval3144,basisEval3145,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval3147,basisEval30E5,basisEval3148,basisEval30B7,basisEval30EB,basisEval312D,basisEval3149,basisEval30B7,basisEval314A,basisEval314B,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval314D,basisEval3132,basisEval3104,basisEval314E,basisEval30B7,basisEval314F,basisEval310C,basisEval3150,basisEval3151,basisEval30B7,basisEval3152,basisEval313B,basisEval3153,basisEval30B7,basisEval3154,basisEval3155,basisEval30B7,basisEval3140,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons3189#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3156,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval3157,basisEval3158,basisEval30B7,basisEval30B7,basisEval3125,basisEval30D7,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval315A,basisEval315B,basisEval315C,basisEval30B7,basisEval30B7,basisEval312C,basisEval30ED,basisEval315D,basisEval30B7,basisEval30B7,basisEval315E,basisEval312F,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval3160,basisEval3161,basisEval3162,basisEval3163,basisEval30B7,basisEval30B7,basisEval3136,basisEval310C,basisEval3164,basisEval3165,basisEval30B7,basisEval30B7,basisEval3166,basisEval313B,basisEval3116,basisEval30B7,basisEval30B7,basisEval3167,basisEval3168,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318A#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30B7,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval316B,basisEval3124,basisEval30B7,basisEval30B7,basisEval3125,basisEval3145,basisEval30B7,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval315A,basisEval316D,basisEval312B,basisEval30B7,basisEval30B7,basisEval316E,basisEval312D,basisEval316F,basisEval30B7,basisEval30B7,basisEval315E,basisEval3170,basisEval30B7,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval3172,basisEval3173,basisEval3174,basisEval3135,basisEval30B7,basisEval30B7,basisEval3175,basisEval310C,basisEval310E,basisEval3176,basisEval30B7,basisEval30B7,basisEval313A,basisEval3177,basisEval3153,basisEval30B7,basisEval30B7,basisEval3167,basisEval3178,basisEval30B7,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318B#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317A,basisEval30C4,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317B,basisEval3157,basisEval30D3,basisEval30B7,basisEval30B7,basisEval30D5,basisEval3145,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317C,basisEval317D,basisEval316D,basisEval30E9,basisEval30B7,basisEval30B7,basisEval317E,basisEval30ED,basisEval3149,basisEval30B7,basisEval30B7,basisEval314A,basisEval3170,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317F,basisEval3180,basisEval3161,basisEval3181,basisEval3108,basisEval30B7,basisEval30B7,basisEval3182,basisEval3183,basisEval310E,basisEval3151,basisEval30B7,basisEval30B7,basisEval3112,basisEval313B,basisEval3184,basisEval30B7,basisEval30B7,basisEval3185,basisEval3178,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          real vdot326F#1 = VDot<84>(dofs2F60,intermediateCons3186);
          real vdot3271#2 = VDot<84>(dofs2F60,intermediateCons3187);
          real vdot3273#2 = VDot<84>(dofs2F60,intermediateCons3188);
          tensor[3] tensor3274#1 = <tensor[3]>[vdot326F,vdot3271,vdot3273];
          real vdot3278#1 = VDot<84>(dofs2F60,intermediateCons3189);
          real vdot327A#2 = VDot<84>(dofs2F60,intermediateCons318A);
          tensor[3] tensor327B#1 = <tensor[3]>[vdot3271,vdot3278,vdot327A];
          real vdot3281#1 = VDot<84>(dofs2F60,intermediateCons318B);
          tensor[3] tensor3282#1 = <tensor[3]>[vdot3273,vdot327A,vdot3281];
          tensor[3,3] _t326D#1 = <tensor[3,3]>[tensor3274,tensor327B,tensor3282];
          (real[3] evals329A#2,tensor[3][3] E329B#2) = EigenVecs3x3(_t326D);
          tensor[3] _t329F#6 = Subscript<tensor[3][3]>(E329B,ilit2C18);
          real _t32A1#9 = Subscript<real[3]>(evals329A,ilit2C18);
          tensor[3] _t32A5#6 = Subscript<tensor[3][3]>(E329B,ilit2C15);
          real _t32A7#9 = Subscript<real[3]>(evals329A,ilit2C15);
          real _t32AD#1 = 0.15e1;
          real r32B0#1 = TensorIndex<tensor[3],[0]>(_t329F);
          tensor[3] binopV32B1#3 = VScale<3>(r32B0,_t329F);
          real r32B2#1 = TensorIndex<tensor[3],[1]>(_t329F);
          tensor[3] binopV32B3#3 = VScale<3>(r32B2,_t329F);
          real r32B4#1 = TensorIndex<tensor[3],[2]>(_t329F);
          tensor[3] binopV32B5#3 = VScale<3>(r32B4,_t329F);
          real r32BF#1 = TensorIndex<tensor[3],[0]>(_t32A5);
          tensor[3] binopV32C0#3 = VScale<3>(r32BF,_t32A5);
          real r32C1#1 = TensorIndex<tensor[3],[1]>(_t32A5);
          tensor[3] binopV32C2#3 = VScale<3>(r32C1,_t32A5);
          real r32C3#1 = TensorIndex<tensor[3],[2]>(_t32A5);
          tensor[3] binopV32C4#3 = VScale<3>(r32C3,_t32A5);
          real r32CE#1 = VIndex<3,0>(binopV32B1);
          real r32CF#1 = RDiv(r32CE,_t32A1);
          real r32D0#1 = VIndex<3,1>(binopV32B1);
          real r32D1#1 = RDiv(r32D0,_t32A1);
          real r32D2#1 = VIndex<3,2>(binopV32B1);
          real r32D3#1 = RDiv(r32D2,_t32A1);
          tensor[3] tensor32D4#1 = <tensor[3]>[r32CF,r32D1,r32D3];
          real r32D5#1 = VIndex<3,0>(binopV32B3);
          real r32D6#1 = RDiv(r32D5,_t32A1);
          real r32D7#1 = VIndex<3,1>(binopV32B3);
          real r32D8#1 = RDiv(r32D7,_t32A1);
          real r32D9#1 = VIndex<3,2>(binopV32B3);
          real r32DA#1 = RDiv(r32D9,_t32A1);
          tensor[3] tensor32DB#1 = <tensor[3]>[r32D6,r32D8,r32DA];
          real r32DC#1 = VIndex<3,0>(binopV32B5);
          real r32DD#1 = RDiv(r32DC,_t32A1);
          real r32DE#1 = VIndex<3,1>(binopV32B5);
          real r32DF#1 = RDiv(r32DE,_t32A1);
          real r32E0#1 = VIndex<3,2>(binopV32B5);
          real r32E1#1 = RDiv(r32E0,_t32A1);
          tensor[3] tensor32E2#1 = <tensor[3]>[r32DD,r32DF,r32E1];
          real r32FB#1 = VIndex<3,0>(binopV32C0);
          real r32FC#1 = RDiv(r32FB,_t32A7);
          real r32FD#1 = VIndex<3,1>(binopV32C0);
          real r32FE#1 = RDiv(r32FD,_t32A7);
          real r32FF#1 = VIndex<3,2>(binopV32C0);
          real r3300#1 = RDiv(r32FF,_t32A7);
          tensor[3] tensor3301#1 = <tensor[3]>[r32FC,r32FE,r3300];
          real r3302#1 = VIndex<3,0>(binopV32C2);
          real r3303#1 = RDiv(r3302,_t32A7);
          real r3304#1 = VIndex<3,1>(binopV32C2);
          real r3305#1 = RDiv(r3304,_t32A7);
          real r3306#1 = VIndex<3,2>(binopV32C2);
          real r3307#1 = RDiv(r3306,_t32A7);
          tensor[3] tensor3308#1 = <tensor[3]>[r3303,r3305,r3307];
          real r3309#1 = VIndex<3,0>(binopV32C4);
          real r330A#1 = RDiv(r3309,_t32A7);
          real r330B#1 = VIndex<3,1>(binopV32C4);
          real r330C#1 = RDiv(r330B,_t32A7);
          real r330D#1 = VIndex<3,2>(binopV32C4);
          real r330E#1 = RDiv(r330D,_t32A7);
          tensor[3] tensor330F#1 = <tensor[3]>[r330A,r330C,r330E];
          tensor[3] v332A#1 = VAdd<3>(tensor32D4,tensor3301);
          tensor[3] v332D#1 = VAdd<3>(tensor32DB,tensor3308);
          tensor[3] v3330#1 = VAdd<3>(tensor32E2,tensor330F);
          real basisEval3357#1 = RMul(one30B9,prod30CE);
          real basisEval336A#1 = RMul(one30B9,prod30E1);
          real basisEval336D#1 = RMul(one30B9,prod30E4);
          real basisEval3375#3 = RMul(coeff30B8,prod30EC);
          real basisEval3386#1 = RMul(one30B9,prod30FD);
          real basisEval3389#1 = RMul(one30B9,prod3100);
          real basisEval338C#1 = RMul(one30B9,prod3103);
          real basisEval3394#2 = RMul(coeff30B8,prod310B);
          real basisEval3396#2 = RMul(coeff30B8,prod310D);
          real basisEval339C#1 = RMul(coeff3123,prod3113);
          real prod533A7#1 = RMul(prod430F8,varAcc30B6);
          real prod33A8#1 = RMul(one30B9,prod533A7);
          real prod33A9#2 = RMul(one30B9,prod33A8);
          real basisEval33AA#2 = RMul(one30B9,prod33A9);
          real prod33AB#1 = RMul(varAcc30B5,prod430F8);
          real prod33AC#3 = RMul(one30B9,prod33AB);
          real basisEval33AD#1 = RMul(one30B9,prod33AC);
          real prod33AE#1 = RMul(prod230D0,prod330DC);
          real prod33AF#3 = RMul(one30B9,prod33AE);
          real basisEval33B0#1 = RMul(one30B9,prod33AF);
          real prod33B1#1 = RMul(prod330E6,prod230C9);
          real prod33B2#3 = RMul(one30B9,prod33B1);
          real basisEval33B3#1 = RMul(one30B9,prod33B2);
          real prod33B4#1 = RMul(prod43105,varAcc30B6);
          real prod33B5#3 = RMul(one30B9,prod33B4);
          real basisEval33B6#1 = RMul(one30B9,prod33B5);
          real prod533B7#1 = RMul(prod43105,varAcc30B5);
          real prod33B8#1 = RMul(prod533B7,one30B9);
          real prod33B9#2 = RMul(one30B9,prod33B8);
          real basisEval33BA#2 = RMul(one30B9,prod33B9);
          real prod33BB#3 = RMul(varAcc30B4,prod30F9);
          real basisEval33BC#1 = RMul(coeff30B8,prod33BB);
          real prod33BD#2 = RMul(varAcc30B4,prod30FC);
          real basisEval33BE#2 = RMul(coeff30B8,prod33BD);
          real prod33BF#2 = RMul(varAcc30B4,prod30FF);
          real basisEval33C0#1 = RMul(coeff30B8,prod33BF);
          real prod33C1#2 = RMul(varAcc30B4,prod3102);
          real basisEval33C2#2 = RMul(coeff30B8,prod33C1);
          real prod33C3#3 = RMul(varAcc30B4,prod3106);
          real basisEval33C4#1 = RMul(coeff30B8,prod33C3);
          real prod33C5#3 = RMul(prod230D9,prod30DD);
          real basisEval33C6#1 = RMul(coeff3123,prod33C5);
          real prod33C7#2 = RMul(prod230D9,prod30E0);
          real basisEval33C8#2 = RMul(coeff3123,prod33C7);
          real prod33C9#2 = RMul(prod230D9,prod30E3);
          real basisEval33CA#2 = RMul(coeff3123,prod33C9);
          real prod33CB#3 = RMul(prod230D9,prod30E7);
          real basisEval33CC#1 = RMul(coeff3123,prod33CB);
          real prod33CD#3 = RMul(prod330F5,prod30CA);
          real basisEval33CE#1 = RMul(coeff3126,prod33CD);
          real prod33CF#2 = RMul(prod330F5,prod30CD);
          real basisEval33D0#1 = RMul(coeff3126,prod33CF);
          real prod33D1#3 = RMul(prod330F5,prod30D1);
          real basisEval33D2#1 = RMul(coeff3126,prod33D1);
          real prod33D3#3 = RMul(prod4311C,prod30BE);
          real basisEval33D4#1 = RMul(coeff3134,prod33D3);
          real prod33D5#3 = RMul(prod4311C,prod30C2);
          real basisEval33D6#1 = RMul(coeff3134,prod33D5);
          real prod533D8#1 = RMul(prod4311C,varAcc30B4);
          real prod33D9#2 = RMul(prod533D8,prod30BA);
          real basisEval33DA#1 = RMul(coeff30C5,prod33D9);
          real basisEval33DF#1 = RMul(one30B9,prod30D4);
          real basisEval33E4#1 = RMul(one30B9,prod30EA);
          real basisEval33E6#1 = RMul(one30B9,prod30F0);
          real basisEval33ED#1 = RMul(one30B9,prod3109);
          real basisEval33EE#1 = RMul(coeff3123,prod310D);
          real basisEval33F0#1 = RMul(one30B9,prod3111);
          real basisEval33F1#2 = RMul(coeff30B8,prod3113);
          real basisEval33F2#1 = RMul(one30B9,prod3117);
          real basisEval33F5#1 = RMul(coeff30B8,prod33AC);
          real basisEval33F6#1 = RMul(coeff3123,prod33AF);
          real basisEval33F7#1 = RMul(coeff3126,prod33B2);
          real basisEval33F8#1 = RMul(coeff3134,prod33B5);
          real basisEval33F9#1 = RMul(coeff30C5,prod33B9);
          real basisEval33FA#1 = RMul(one30B9,prod33BB);
          real basisEval33FB#2 = RMul(coeff3123,prod33BF);
          real basisEval33FC#1 = RMul(coeff3126,prod33C1);
          real basisEval33FD#1 = RMul(coeff3134,prod33C3);
          real basisEval33FE#1 = RMul(one30B9,prod33C5);
          real basisEval33FF#1 = RMul(coeff30B8,prod33C7);
          real basisEval3400#1 = RMul(coeff3126,prod33CB);
          real basisEval3401#1 = RMul(one30B9,prod33CD);
          real basisEval3402#2 = RMul(coeff30B8,prod33CF);
          real basisEval3403#1 = RMul(coeff3123,prod33D1);
          real basisEval3404#1 = RMul(one30B9,prod33D3);
          real basisEval3405#1 = RMul(coeff30B8,prod33D5);
          real basisEval3406#2 = RMul(one30B9,prod33D9);
          real basisEval3409#1 = RMul(one30B9,prod30D6);
          real basisEval340E#1 = RMul(one30B9,prod30EE);
          real basisEval3410#1 = RMul(one30B9,prod30F2);
          real basisEval3415#1 = RMul(coeff3123,prod310B);
          real basisEval3416#1 = RMul(one30B9,prod310F);
          real basisEval3417#1 = RMul(one30B9,prod3115);
          real basisEval3419#1 = RMul(one30B9,prod3119);
          real basisEval341A#1 = RMul(coeff30C5,prod33A9);
          real basisEval341B#1 = RMul(coeff3134,prod33AC);
          real basisEval341C#1 = RMul(coeff3126,prod33AF);
          real basisEval341D#1 = RMul(coeff3123,prod33B2);
          real basisEval341E#1 = RMul(coeff30B8,prod33B5);
          real basisEval341F#1 = RMul(coeff3134,prod33BB);
          real basisEval3420#1 = RMul(coeff3126,prod33BD);
          real basisEval3421#1 = RMul(one30B9,prod33C3);
          real basisEval3422#1 = RMul(coeff3126,prod33C5);
          real basisEval3423#1 = RMul(coeff30B8,prod33C9);
          real basisEval3424#1 = RMul(one30B9,prod33CB);
          real basisEval3425#1 = RMul(coeff3123,prod33CD);
          real basisEval3426#1 = RMul(one30B9,prod33D1);
          real basisEval3427#1 = RMul(coeff30B8,prod33D3);
          real basisEval3428#1 = RMul(one30B9,prod33D5);
          tensor[84] intermediateCons3429#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3120,basisEval3141,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3122,basisEval3357,basisEval3143,basisEval3125,basisEval3145,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3129,basisEval336A,basisEval336D,basisEval3148,basisEval312C,basisEval3375,basisEval3149,basisEval312E,basisEval314B,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3131,basisEval3386,basisEval3389,basisEval338C,basisEval314E,basisEval3136,basisEval3394,basisEval3396,basisEval3151,basisEval313A,basisEval339C,basisEval3153,basisEval313E,basisEval3155,basisEval3140,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval33AA,basisEval33AD,basisEval33B0,basisEval33B3,basisEval33B6,basisEval33BA,basisEval33BC,basisEval33BE,basisEval33C0,basisEval33C2,basisEval33C4,basisEval33C6,basisEval33C8,basisEval33CA,basisEval33CC,basisEval33CE,basisEval33D0,basisEval33D2,basisEval33D4,basisEval33D6,basisEval33DA];
          tensor[84] intermediateCons342A#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval3120,basisEval30C4,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval3122,basisEval30CF,basisEval3124,basisEval30B7,basisEval33DF,basisEval3145,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval3129,basisEval30E2,basisEval312A,basisEval312B,basisEval30B7,basisEval33E4,basisEval3375,basisEval316F,basisEval30B7,basisEval33E6,basisEval3170,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval3131,basisEval30FE,basisEval3132,basisEval3133,basisEval3135,basisEval30B7,basisEval33ED,basisEval3394,basisEval33EE,basisEval3176,basisEval30B7,basisEval33F0,basisEval33F1,basisEval3153,basisEval30B7,basisEval33F2,basisEval3178,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval33AA,basisEval33F5,basisEval33F6,basisEval33F7,basisEval33F8,basisEval33F9,basisEval30B7,basisEval33FA,basisEval33BE,basisEval33FB,basisEval33FC,basisEval33FD,basisEval30B7,basisEval33FE,basisEval33FF,basisEval33CA,basisEval3400,basisEval30B7,basisEval3401,basisEval3402,basisEval3403,basisEval30B7,basisEval3404,basisEval3405,basisEval30B7,basisEval3406,basisEval30B7];
          tensor[84] intermediateCons342B#1 = <tensor[84]>[basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3141,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval3142,basisEval30CF,basisEval3143,basisEval30B7,basisEval3125,basisEval3409,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval3146,basisEval3147,basisEval30E5,basisEval3148,basisEval30B7,basisEval316E,basisEval3375,basisEval340E,basisEval30B7,basisEval315E,basisEval3410,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval314C,basisEval314D,basisEval3132,basisEval3104,basisEval314E,basisEval30B7,basisEval3175,basisEval3415,basisEval3396,basisEval3416,basisEval30B7,basisEval313A,basisEval33F1,basisEval3417,basisEval30B7,basisEval3167,basisEval3419,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval341A,basisEval341B,basisEval341C,basisEval341D,basisEval341E,basisEval33BA,basisEval30B7,basisEval341F,basisEval3420,basisEval33FB,basisEval33C2,basisEval3421,basisEval30B7,basisEval3422,basisEval33C8,basisEval3423,basisEval3424,basisEval30B7,basisEval3425,basisEval3402,basisEval3426,basisEval30B7,basisEval3427,basisEval3428,basisEval30B7,basisEval3406,basisEval30B7,basisEval30B7];
          real vdot3520#1 = VDot<84>(dofs2F60,intermediateCons3429);
          real vdot3522#1 = VDot<84>(dofs2F60,intermediateCons342A);
          real vdot3524#1 = VDot<84>(dofs2F60,intermediateCons342B);
          tensor[3] probe_l_21351E#3 = <tensor[3]>[vdot3520,vdot3522,vdot3524];
          tensor[3] negV352F#1 = VNeg<3>(v332A);
          tensor[3] negV3531#1 = VNeg<3>(v332D);
          tensor[3] negV3533#1 = VNeg<3>(v3330);
          real vdot353E#1 = VDot<3>(negV352F,probe_l_21351E);
          real vdot3540#1 = VDot<3>(negV3531,probe_l_21351E);
          real vdot3542#1 = VDot<3>(negV3533,probe_l_21351E);
          tensor[3] op1_e3_l_30353C#5 = <tensor[3]>[vdot353E,vdot3540,vdot3542];
          real op1_e3_l_32354B#1 = VDot<3>(op1_e3_l_30353C,op1_e3_l_30353C);
          real op1_e3_l_33354E#3 = Sqrt(op1_e3_l_32354B);
          real op1_e3_l_343551#1 = Abs<real>(op1_e3_l_33354E);
          real op1_e3_l_353554#1 = RDiv(op1_e3_l_343551,thick2323);
          real op1_e3_l_363557#1 = RSub(one30B9,op1_e3_l_353554);
          real op1_e3_l_37355A#1 = RMul(_t32AD,op1_e3_l_363557);
          real op1_e3_l_38355D#1 = RClamp(basisEval30B7,one30B9,op1_e3_l_37355A);
          real _t3560#2 = RMul(maxAlpha232B,op1_e3_l_38355D);
          bool _t3563#1 = EQ<real>(_t3560,basisEval30B7);
          if _t3563 then goto SAVE3566 else goto JOIN3568
        SAVE3566:  preds = [COND3565]
          self.rayN = rayN234F;
          active
          goto JOIN3568
        JOIN3568:  preds = [*ACTIVE3567,COND3565]
          real _t356F#1 = RSub(one30B9,_t3560);
          real _t3572#1 = MathFn<pow>(_t356F,alphaFix233F);
          bool _t3574#1 = NEQ<real>(phKs2347,basisEval30B7);
          if _t3574 then goto ASSIGN3579 else goto JOIN359C
        ASSIGN3579:  preds = [COND3576]
          tensor[3] op1_e3_l_243577#3 = VAdd<3>(eyeDir2341,litwsp2337);
          real op1_e3_l_26357A#1 = VDot<3>(op1_e3_l_243577,op1_e3_l_243577);
          real op1_e3_l_27357D#1 = Sqrt(op1_e3_l_26357A);
          real op1_e3_l_543580#1 = RDiv(one30B9,op1_e3_l_33354E);
          tensor[3] op1_e3_l_553585#1 = VScale<3>(op1_e3_l_543580,op1_e3_l_30353C);
          tensor[3] op1_e3_l_563588#1 = VNeg<3>(op1_e3_l_553585);
          real op1_e3_l_58358B#1 = RDiv(one30B9,op1_e3_l_27357D);
          real op1_e3_l_593590#1 = VDot<3>(op1_e3_l_563588,op1_e3_l_243577);
          real op1_e3_l_603593#1 = RMul(op1_e3_l_58358B,op1_e3_l_593590);
          real _t3596#1 = Abs<real>(op1_e3_l_603593);
          real scomp3599#1 = MathFn<pow>(_t3596,phSp2349);
          goto JOIN359C
        JOIN359C:  preds = [ASSIGN359A,COND3576]
          real scomp359B#1 = phi(scomp3599,basisEval30B7)
          real cmin359D#3 = VIndex<2,0>(cminmax2331);
          real cmax359F#2 = VIndex<2,1>(cminmax2331);
          tensor[3] mcol35A1#1 = <tensor[3]>[one30B9,one30B9,one30B9];
          bool _t35A3#1 = NEQ<real>(cmin359D,cmax359F);
          if _t35A3 then goto ASSIGN3BC8 else goto JOIN37E5
        ASSIGN3BC8:  preds = [COND35A5]
          tensor[3] _t35A6#3 = VAdd<3>(pos235B,op1_e3_l_30353C);
          real varAcc35AC#27 = VIndex<3,0>(_t35A6);
          real varAcc35AD#12 = VIndex<3,1>(_t35A6);
          real varAcc35AE#12 = VIndex<3,2>(_t35A6);
          real prod35B4#6 = RMul(one30B9,varAcc35AE);
          real prod35B5#1 = RMul(one30B9,prod35B4);
          real basisEval35B6#1 = RMul(one30B9,prod35B5);
          real prod35B8#6 = RMul(varAcc35AD,one30B9);
          real prod35B9#1 = RMul(one30B9,prod35B8);
          real basisEval35BA#1 = RMul(one30B9,prod35B9);
          real prod35BC#1 = RMul(varAcc35AC,prod30BA);
          real basisEval35BD#1 = RMul(one30B9,prod35BC);
          real prod235BE#6 = RMul(varAcc35AE,varAcc35AE);
          real prod35BF#5 = RMul(one30B9,prod235BE);
          real prod35C0#1 = RMul(one30B9,prod35BF);
          real basisEval35C1#1 = RMul(one30B9,prod35C0);
          real prod35C2#5 = RMul(varAcc35AD,varAcc35AE);
          real prod35C3#1 = RMul(one30B9,prod35C2);
          real basisEval35C4#1 = RMul(one30B9,prod35C3);
          real prod235C5#6 = RMul(varAcc35AD,varAcc35AD);
          real prod35C6#5 = RMul(prod235C5,one30B9);
          real prod35C7#1 = RMul(one30B9,prod35C6);
          real basisEval35C8#1 = RMul(one30B9,prod35C7);
          real prod35C9#1 = RMul(varAcc35AC,prod35B4);
          real basisEval35CA#1 = RMul(one30B9,prod35C9);
          real prod35CB#1 = RMul(varAcc35AC,prod35B8);
          real basisEval35CC#1 = RMul(one30B9,prod35CB);
          real prod235CD#16 = RMul(varAcc35AC,varAcc35AC);
          real prod35CE#1 = RMul(prod235CD,prod30BA);
          real basisEval35CF#1 = RMul(one30B9,prod35CE);
          real prod335D0#5 = RMul(prod235BE,varAcc35AE);
          real prod35D1#4 = RMul(one30B9,prod335D0);
          real prod35D2#1 = RMul(one30B9,prod35D1);
          real basisEval35D3#1 = RMul(one30B9,prod35D2);
          real prod35D4#4 = RMul(varAcc35AD,prod235BE);
          real prod35D5#1 = RMul(one30B9,prod35D4);
          real basisEval35D6#1 = RMul(one30B9,prod35D5);
          real prod35D7#4 = RMul(prod235C5,varAcc35AE);
          real prod35D8#1 = RMul(one30B9,prod35D7);
          real basisEval35D9#1 = RMul(one30B9,prod35D8);
          real prod335DA#5 = RMul(prod235C5,varAcc35AD);
          real prod35DB#4 = RMul(prod335DA,one30B9);
          real prod35DC#1 = RMul(one30B9,prod35DB);
          real basisEval35DD#1 = RMul(one30B9,prod35DC);
          real prod35DE#1 = RMul(varAcc35AC,prod35BF);
          real basisEval35DF#1 = RMul(one30B9,prod35DE);
          real prod35E0#1 = RMul(varAcc35AC,prod35C2);
          real basisEval35E1#1 = RMul(one30B9,prod35E0);
          real prod35E2#1 = RMul(varAcc35AC,prod35C6);
          real basisEval35E3#1 = RMul(one30B9,prod35E2);
          real prod35E4#1 = RMul(prod235CD,prod35B4);
          real basisEval35E5#1 = RMul(one30B9,prod35E4);
          real prod35E6#1 = RMul(prod235CD,prod35B8);
          real basisEval35E7#1 = RMul(one30B9,prod35E6);
          real prod335E8#11 = RMul(prod235CD,varAcc35AC);
          real prod35E9#1 = RMul(prod335E8,prod30BA);
          real basisEval35EA#1 = RMul(one30B9,prod35E9);
          real prod435EB#4 = RMul(prod335D0,varAcc35AE);
          real prod35EC#3 = RMul(one30B9,prod435EB);
          real prod35ED#1 = RMul(one30B9,prod35EC);
          real basisEval35EE#1 = RMul(one30B9,prod35ED);
          real prod35EF#3 = RMul(varAcc35AD,prod335D0);
          real prod35F0#1 = RMul(one30B9,prod35EF);
          real basisEval35F1#1 = RMul(one30B9,prod35F0);
          real prod35F2#3 = RMul(prod235C5,prod235BE);
          real prod35F3#1 = RMul(one30B9,prod35F2);
          real basisEval35F4#1 = RMul(one30B9,prod35F3);
          real prod35F5#3 = RMul(prod335DA,varAcc35AE);
          real prod35F6#1 = RMul(one30B9,prod35F5);
          real basisEval35F7#1 = RMul(one30B9,prod35F6);
          real prod435F8#4 = RMul(prod335DA,varAcc35AD);
          real prod35F9#3 = RMul(prod435F8,one30B9);
          real prod35FA#1 = RMul(one30B9,prod35F9);
          real basisEval35FB#1 = RMul(one30B9,prod35FA);
          real prod35FC#1 = RMul(varAcc35AC,prod35D1);
          real basisEval35FD#1 = RMul(one30B9,prod35FC);
          real prod35FE#1 = RMul(varAcc35AC,prod35D4);
          real basisEval35FF#1 = RMul(one30B9,prod35FE);
          real prod3600#1 = RMul(varAcc35AC,prod35D7);
          real basisEval3601#1 = RMul(one30B9,prod3600);
          real prod3602#1 = RMul(varAcc35AC,prod35DB);
          real basisEval3603#1 = RMul(one30B9,prod3602);
          real prod3604#1 = RMul(prod235CD,prod35BF);
          real basisEval3605#1 = RMul(one30B9,prod3604);
          real prod3606#1 = RMul(prod235CD,prod35C2);
          real basisEval3607#1 = RMul(one30B9,prod3606);
          real prod3608#1 = RMul(prod235CD,prod35C6);
          real basisEval3609#1 = RMul(one30B9,prod3608);
          real prod360A#1 = RMul(prod335E8,prod35B4);
          real basisEval360B#1 = RMul(one30B9,prod360A);
          real prod360C#1 = RMul(prod335E8,prod35B8);
          real basisEval360D#1 = RMul(one30B9,prod360C);
          real prod4360E#7 = RMul(prod335E8,varAcc35AC);
          real prod360F#1 = RMul(prod4360E,prod30BA);
          real basisEval3610#1 = RMul(one30B9,prod360F);
          real prod53611#3 = RMul(prod435EB,varAcc35AE);
          real prod3612#2 = RMul(one30B9,prod53611);
          real prod3613#1 = RMul(one30B9,prod3612);
          real basisEval3614#1 = RMul(one30B9,prod3613);
          real prod3615#2 = RMul(varAcc35AD,prod435EB);
          real prod3616#1 = RMul(one30B9,prod3615);
          real basisEval3617#1 = RMul(one30B9,prod3616);
          real prod3618#2 = RMul(prod235C5,prod335D0);
          real prod3619#1 = RMul(one30B9,prod3618);
          real basisEval361A#1 = RMul(one30B9,prod3619);
          real prod361B#2 = RMul(prod335DA,prod235BE);
          real prod361C#1 = RMul(one30B9,prod361B);
          real basisEval361D#1 = RMul(one30B9,prod361C);
          real prod361E#2 = RMul(prod435F8,varAcc35AE);
          real prod361F#1 = RMul(one30B9,prod361E);
          real basisEval3620#1 = RMul(one30B9,prod361F);
          real prod53621#3 = RMul(prod435F8,varAcc35AD);
          real prod3622#2 = RMul(prod53621,one30B9);
          real prod3623#1 = RMul(one30B9,prod3622);
          real basisEval3624#1 = RMul(one30B9,prod3623);
          real prod3625#1 = RMul(varAcc35AC,prod35EC);
          real basisEval3626#1 = RMul(one30B9,prod3625);
          real prod3627#1 = RMul(varAcc35AC,prod35EF);
          real basisEval3628#1 = RMul(one30B9,prod3627);
          real prod3629#1 = RMul(varAcc35AC,prod35F2);
          real basisEval362A#1 = RMul(one30B9,prod3629);
          real prod362B#1 = RMul(varAcc35AC,prod35F5);
          real basisEval362C#1 = RMul(one30B9,prod362B);
          real prod362D#1 = RMul(varAcc35AC,prod35F9);
          real basisEval362E#1 = RMul(one30B9,prod362D);
          real prod362F#1 = RMul(prod235CD,prod35D1);
          real basisEval3630#1 = RMul(one30B9,prod362F);
          real prod3631#1 = RMul(prod235CD,prod35D4);
          real basisEval3632#1 = RMul(one30B9,prod3631);
          real prod3633#1 = RMul(prod235CD,prod35D7);
          real basisEval3634#1 = RMul(one30B9,prod3633);
          real prod3635#1 = RMul(prod235CD,prod35DB);
          real basisEval3636#1 = RMul(one30B9,prod3635);
          real prod3637#1 = RMul(prod335E8,prod35BF);
          real basisEval3638#1 = RMul(one30B9,prod3637);
          real prod3639#1 = RMul(prod335E8,prod35C2);
          real basisEval363A#1 = RMul(one30B9,prod3639);
          real prod363B#1 = RMul(prod335E8,prod35C6);
          real basisEval363C#1 = RMul(one30B9,prod363B);
          real prod363D#1 = RMul(prod4360E,prod35B4);
          real basisEval363E#1 = RMul(one30B9,prod363D);
          real prod363F#1 = RMul(prod4360E,prod35B8);
          real basisEval3640#1 = RMul(one30B9,prod363F);
          real prod53641#4 = RMul(prod4360E,varAcc35AC);
          real prod3642#1 = RMul(prod53641,prod30BA);
          real basisEval3643#1 = RMul(one30B9,prod3642);
          real prod63644#1 = RMul(prod53611,varAcc35AE);
          real prod3645#1 = RMul(one30B9,prod63644);
          real prod3646#1 = RMul(one30B9,prod3645);
          real basisEval3647#1 = RMul(one30B9,prod3646);
          real prod3648#1 = RMul(varAcc35AD,prod53611);
          real prod3649#1 = RMul(one30B9,prod3648);
          real basisEval364A#1 = RMul(one30B9,prod3649);
          real prod364B#1 = RMul(prod235C5,prod435EB);
          real prod364C#1 = RMul(one30B9,prod364B);
          real basisEval364D#1 = RMul(one30B9,prod364C);
          real prod364E#1 = RMul(prod335DA,prod335D0);
          real prod364F#1 = RMul(one30B9,prod364E);
          real basisEval3650#1 = RMul(one30B9,prod364F);
          real prod3651#1 = RMul(prod435F8,prod235BE);
          real prod3652#1 = RMul(one30B9,prod3651);
          real basisEval3653#1 = RMul(one30B9,prod3652);
          real prod3654#1 = RMul(prod53621,varAcc35AE);
          real prod3655#1 = RMul(one30B9,prod3654);
          real basisEval3656#1 = RMul(one30B9,prod3655);
          real prod63657#1 = RMul(prod53621,varAcc35AD);
          real prod3658#1 = RMul(prod63657,one30B9);
          real prod3659#1 = RMul(one30B9,prod3658);
          real basisEval365A#1 = RMul(one30B9,prod3659);
          real prod365B#1 = RMul(varAcc35AC,prod3612);
          real basisEval365C#1 = RMul(one30B9,prod365B);
          real prod365D#1 = RMul(varAcc35AC,prod3615);
          real basisEval365E#1 = RMul(one30B9,prod365D);
          real prod365F#1 = RMul(varAcc35AC,prod3618);
          real basisEval3660#1 = RMul(one30B9,prod365F);
          real prod3661#1 = RMul(varAcc35AC,prod361B);
          real basisEval3662#1 = RMul(one30B9,prod3661);
          real prod3663#1 = RMul(varAcc35AC,prod361E);
          real basisEval3664#1 = RMul(one30B9,prod3663);
          real prod3665#1 = RMul(varAcc35AC,prod3622);
          real basisEval3666#1 = RMul(one30B9,prod3665);
          real prod3667#1 = RMul(prod235CD,prod35EC);
          real basisEval3668#1 = RMul(one30B9,prod3667);
          real prod3669#1 = RMul(prod235CD,prod35EF);
          real basisEval366A#1 = RMul(one30B9,prod3669);
          real prod366B#1 = RMul(prod235CD,prod35F2);
          real basisEval366C#1 = RMul(one30B9,prod366B);
          real prod366D#1 = RMul(prod235CD,prod35F5);
          real basisEval366E#1 = RMul(one30B9,prod366D);
          real prod366F#1 = RMul(prod235CD,prod35F9);
          real basisEval3670#1 = RMul(one30B9,prod366F);
          real prod3671#1 = RMul(prod335E8,prod35D1);
          real basisEval3672#1 = RMul(one30B9,prod3671);
          real prod3673#1 = RMul(prod335E8,prod35D4);
          real basisEval3674#1 = RMul(one30B9,prod3673);
          real prod3675#1 = RMul(prod335E8,prod35D7);
          real basisEval3676#1 = RMul(one30B9,prod3675);
          real prod3677#1 = RMul(prod335E8,prod35DB);
          real basisEval3678#1 = RMul(one30B9,prod3677);
          real prod3679#1 = RMul(prod4360E,prod35BF);
          real basisEval367A#1 = RMul(one30B9,prod3679);
          real prod367B#1 = RMul(prod4360E,prod35C2);
          real basisEval367C#1 = RMul(one30B9,prod367B);
          real prod367D#1 = RMul(prod4360E,prod35C6);
          real basisEval367E#1 = RMul(one30B9,prod367D);
          real prod367F#1 = RMul(prod53641,prod35B4);
          real basisEval3680#1 = RMul(one30B9,prod367F);
          real prod3681#1 = RMul(prod53641,prod35B8);
          real basisEval3682#1 = RMul(one30B9,prod3681);
          real prod63683#1 = RMul(prod53641,varAcc35AC);
          real prod3684#1 = RMul(prod63683,prod30BA);
          real basisEval3685#1 = RMul(one30B9,prod3684);
          tensor[84] intermediateCons3686#1 = <tensor[84]>[basisEval311F,basisEval35B6,basisEval35BA,basisEval35BD,basisEval35C1,basisEval35C4,basisEval35C8,basisEval35CA,basisEval35CC,basisEval35CF,basisEval35D3,basisEval35D6,basisEval35D9,basisEval35DD,basisEval35DF,basisEval35E1,basisEval35E3,basisEval35E5,basisEval35E7,basisEval35EA,basisEval35EE,basisEval35F1,basisEval35F4,basisEval35F7,basisEval35FB,basisEval35FD,basisEval35FF,basisEval3601,basisEval3603,basisEval3605,basisEval3607,basisEval3609,basisEval360B,basisEval360D,basisEval3610,basisEval3614,basisEval3617,basisEval361A,basisEval361D,basisEval3620,basisEval3624,basisEval3626,basisEval3628,basisEval362A,basisEval362C,basisEval362E,basisEval3630,basisEval3632,basisEval3634,basisEval3636,basisEval3638,basisEval363A,basisEval363C,basisEval363E,basisEval3640,basisEval3643,basisEval3647,basisEval364A,basisEval364D,basisEval3650,basisEval3653,basisEval3656,basisEval365A,basisEval365C,basisEval365E,basisEval3660,basisEval3662,basisEval3664,basisEval3666,basisEval3668,basisEval366A,basisEval366C,basisEval366E,basisEval3670,basisEval3672,basisEval3674,basisEval3676,basisEval3678,basisEval367A,basisEval367C,basisEval367E,basisEval3680,basisEval3682,basisEval3685];
          real probe_l_83763#1 = VDot<84>(dofs2F60,intermediateCons3686);
          real op1_e3_l_93766#1 = RSub(probe_l_83763,cmin359D);
          real op1_e3_l_103769#1 = RSub(cmax359F,cmin359D);
          real op1_e3_l_11376C#1 = RDiv(op1_e3_l_93766,op1_e3_l_103769);
          real op1_e3_l_12376F#1 = RSub(one30B9,basisEval30B7);
          real op1_e3_l_133772#1 = RMul(op1_e3_l_11376C,op1_e3_l_12376F);
          real _t3775#1 = RAdd(basisEval30B7,op1_e3_l_133772);
          real Mtransform3778#1 = Transform<IMAGE1D<double[3]>>(cmap2311);
          real MxPos377A#1 = RMul(Mtransform3778,_t3775);
          real Ttranslate377D#1 = Translate<IMAGE1D<double[3]>>(cmap2311);
          real imgPos377F#2 = RAdd(MxPos377A,Ttranslate377D);
          real nd3782#2 = Floor<1>(imgPos377F);
          real f3784#2 = RSub(imgPos377F,nd3782);
          int n3787#5 = RealToInt<1>(nd3782);
          bool isInside378B#1 = IndexInside<IMAGE1D<double[3]>,2>(n3787,cmap2311);
          if isInside378B then goto ASSIGN3C76 else goto ASSIGN3C6E
        ASSIGN3C76:  preds = [COND378D]
          int offp3792#3 = IMul(ilit2C1B,n3787);
          real v0_3793#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3792);
          int addRes3795#1 = IAdd(n3787,ilit2C15);
          int offp3796#3 = IMul(ilit2C1B,addRes3795);
          real v1_3797#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3796);
          tensor[2] v_3798#1 = <tensor[2]>[v0_3793,v1_3797];
          int offp3799#1 = IAdd(offp3792,ilit2C15);
          real v0_379A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3799);
          int offp379B#1 = IAdd(offp3796,ilit2C15);
          real v1_379C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379B);
          tensor[2] v_379D#1 = <tensor[2]>[v0_379A,v1_379C];
          int offp379F#1 = IAdd(offp3792,ilit2C18);
          real v0_37A0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379F);
          int offp37A1#1 = IAdd(offp3796,ilit2C18);
          real v1_37A2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp37A1);
          tensor[2] v_37A3#1 = <tensor[2]>[v0_37A0,v1_37A2];
          tensor[3,2] voxels37A4#1 = <tensor[3,2]>[v_3798,v_379D,v_37A3];
          goto JOIN37BE
        JOIN37BE:  preds = [ASSIGN37BA,ASSIGN3897]
          tensor[3,2] ldvox37BC#3 = phi(voxels37A4,voxels387F)
          real idx37C1#1 = RSub(f3784,one30B9);
          tensor[2] kernX_37BF#1 = <tensor[2]>[f3784,idx37C1];
          tensor[2] a037C6#1 = <tensor[2]>[one30B9,one30B9];
          real _f37C8#1 = -0.1e1;
          tensor[2] a137C7#1 = <tensor[2]>[_f37C8,one30B9];
          tensor[2] prod137CC#1 = VMul<2>(kernX_37BF,a137C7);
          tensor[2] kevalX_d0_37C5#3 = VAdd<2>(a037C6,prod137CC);
          tensor[2] projIx37D6#1 = ProjectLast<tensor[3,2],[0]>(ldvox37BC);
          real vdot37D7#1 = VDot<2>(projIx37D6,kevalX_d0_37C5);
          tensor[2] projIx37D8#1 = ProjectLast<tensor[3,2],[1]>(ldvox37BC);
          real vdot37D9#1 = VDot<2>(projIx37D8,kevalX_d0_37C5);
          tensor[2] projIx37DA#1 = ProjectLast<tensor[3,2],[2]>(ldvox37BC);
          real vdot37DB#1 = VDot<2>(projIx37DA,kevalX_d0_37C5);
          tensor[3] mcol37D5#1 = <tensor[3]>[vdot37D7,vdot37D9,vdot37DB];
          goto JOIN37E5
        JOIN37E5:  preds = [ASSIGN37E3,COND35A5]
          tensor[3] mcol37E4#3 = phi(mcol37D5,mcol35A1)
          real op1_e3_l_6337E6#1 = RDiv(one30B9,op1_e3_l_33354E);
          tensor[3] op1_e3_l_6437EB#1 = VScale<3>(op1_e3_l_6337E6,op1_e3_l_30353C);
          tensor[3] op1_e3_l_6537EE#1 = VNeg<3>(op1_e3_l_6437EB);
          real op1_e3_l_6637F1#2 = VDot<3>(op1_e3_l_6537EE,litwsp2337);
          real op1_e3_l_6737F4#1 = RMul(op1_e3_l_6637F1,op1_e3_l_6637F1);
          real op1_e3_l_6837F7#1 = RMul(phKd2345,op1_e3_l_6737F4);
          real op1_e3_l_7037FA#1 = RSub(rayN234F,camNearVsp2333);
          real op1_e3_l_7137FD#1 = RSub(camFarVsp2335,camNearVsp2333);
          real op1_e3_l_723800#1 = RDiv(op1_e3_l_7037FA,op1_e3_l_7137FD);
          tensor[3] op1_e3_l_733803#1 = VSub<3>(mcFar232F,mcNear232D);
          tensor[3] op1_e3_l_743806#1 = VScale<3>(op1_e3_l_723800,op1_e3_l_733803);
          real op1_e3_l_753809#3 = RAdd(phKa2343,op1_e3_l_6837F7);
          tensor[3] op1_e3_l_76380C#3 = VAdd<3>(mcNear232D,op1_e3_l_743806);
          real r3810#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_76380C);
          real r3811#1 = TensorIndex<tensor[3],[0]>(mcol37E4);
          real r3812#1 = RMul(op1_e3_l_753809,r3810);
          real r3813#1 = RMul(r3812,r3811);
          real r3814#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_76380C);
          real r3815#1 = TensorIndex<tensor[3],[1]>(mcol37E4);
          real r3816#1 = RMul(op1_e3_l_753809,r3814);
          real r3817#1 = RMul(r3816,r3815);
          real r3818#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_76380C);
          real r3819#1 = TensorIndex<tensor[3],[2]>(mcol37E4);
          real r381A#1 = RMul(op1_e3_l_753809,r3818);
          real r381B#1 = RMul(r381A,r3819);
          tensor[3] op1_e3_l_77380F#1 = <tensor[3]>[r3813,r3817,r381B];
          real r382C#1 = RMul(phKs2347,scomp359B);
          real r382D#3 = RMul(r382C,one30B9);
          tensor[3] op1_e3_l_78382A#1 = <tensor[3]>[r382D,r382D,r382D];
          real op1_e3_l_79383B#2 = RSub(one30B9,_t3572);
          tensor[3] op1_e3_l_80383E#3 = VAdd<3>(op1_e3_l_77380F,op1_e3_l_78382A);
          real r3842#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_80383E);
          real r3843#3 = RMul(transp234D,op1_e3_l_79383B);
          real r3844#1 = RMul(r3843,r3842);
          real r3845#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_80383E);
          real r3846#1 = RMul(r3843,r3845);
          real r3847#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_80383E);
          real r3848#1 = RMul(r3843,r3847);
          tensor[3] op1_e3_l_813841#1 = <tensor[3]>[r3844,r3846,r3848];
          tensor[3] rgb3852#2 = VAdd<3>(rgb234B,op1_e3_l_813841);
          real op1_e3_l_53855#1 = RSub(one30B9,op1_e3_l_79383B);
          real transp3858#2 = RMul(transp234D,op1_e3_l_53855);
          bool _t385B#1 = LT<real>(transp3858,transp02321);
          if _t385B then goto SAVE385E else goto JOIN3863
        SAVE385E:  preds = [COND385D]
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = basisEval30B7;
          stabilize
          goto JOIN3863
        JOIN3863:  preds = [*STABILIZE3861,COND385D]
          real transp3862#1 = phi(transp3858)
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = transp3862;
          active
        ASSIGN3C6E:  preds = [COND378D]
          int ix386A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,n3787);
          int offp386C#3 = IMul(ilit2C1B,ix386A);
          real v0_386D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp386C);
          int addRes386F#1 = IAdd(n3787,ilit2C15);
          int ix3870#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,addRes386F);
          int offp3871#3 = IMul(ilit2C1B,ix3870);
          real v1_3872#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3871);
          tensor[2] v_3873#1 = <tensor[2]>[v0_386D,v1_3872];
          int offp3874#1 = IAdd(offp386C,ilit2C15);
          real v0_3875#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3874);
          int offp3876#1 = IAdd(offp3871,ilit2C15);
          real v1_3877#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3876);
          tensor[2] v_3878#1 = <tensor[2]>[v0_3875,v1_3877];
          int offp387A#1 = IAdd(offp386C,ilit2C18);
          real v0_387B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387A);
          int offp387C#1 = IAdd(offp3871,ilit2C18);
          real v1_387D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387C);
          tensor[2] v_387E#1 = <tensor[2]>[v0_387B,v1_387D];
          tensor[3,2] voxels387F#1 = <tensor[3,2]>[v_3873,v_3878,v_387E];
          goto JOIN37BE
        ASSIGN3899:  preds = [COND2BFD]
          bool _t2C01#1 = false;
          goto JOIN2C02
        ASSIGN389A:  preds = [COND2BF8]
          bool _t2C04#1 = false;
          goto JOIN2C05
        ASSIGN389B:  preds = [COND2364]
          bool _t2C07#1 = false;
          goto JOIN2C08
    end update
    method stabilize
        ENTRY389C:  preds = []
          tensor[4] rgba389D#1 = self.rgba;
          tensor[3] rgb389F#3 = self.rgb;
          real transp38A1#2 = self.transp;
          real _t38A3#2 = 0.1e1;
          bool _t38A5#1 = LT<real>(transp38A1,_t38A3);
          if _t38A5 then goto ASSIGN38AA else goto JOIN38BD
        ASSIGN38AA:  preds = [COND38A7]
          real aa38A8#4 = RSub(_t38A3,transp38A1);
          real _t38AB#1 = VIndex<3,0>(rgb389F);
          real _t38AD#1 = RDiv(_t38AB,aa38A8);
          real _t38B0#1 = VIndex<3,1>(rgb389F);
          real _t38B2#1 = RDiv(_t38B0,aa38A8);
          real _t38B5#1 = VIndex<3,2>(rgb389F);
          real _t38B7#1 = RDiv(_t38B5,aa38A8);
          tensor[4] rgba38BA#1 = <tensor[4]>[_t38AD,_t38B2,_t38B7,aa38A8];
          goto JOIN38BD
        JOIN38BD:  preds = [ASSIGN38BB,COND38A7]
          tensor[4] rgba38BC#1 = phi(rgba38BA,rgba389D)
          self.rgba = rgba38BC;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY38C0:  preds = []
      int iresU38C1#1 = globals.iresU2033;
      int iresV38C3#1 = globals.iresV2034;
      int _t38C5#2 = 0;
      int _t38C7#2 = 1;
      int _t38C9#1 = ISub(iresV38C3,_t38C7);
      int[] _t38CB#1 = Range(_t38C5,_t38C9);
    FOREACH38CE:  preds = [ASSIGN38CC,NEXT38D7]
      foreach (vi38CD in _t38CB) on exit goto RETURN38D8
      int _t38CF#1 = ISub(iresU38C1,_t38C7);
      int[] _t38D1#1 = Range(_t38C5,_t38CF);
    FOREACH38D4:  preds = [ASSIGN38D2,NEXT38D6]
      foreach (ui38D3 in _t38D1) on exit goto NEXT38D7
      new ray(ui38D3,vi38CD);
      goto FOREACH38D4
    NEXT38D7:  preds = [FOREACH38D4]
      goto FOREACH38CE
    RETURN38D8:  preds = [FOREACH38CE]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2027 (block) = <no-default>
  input 0space04CF_intermedateGlobal2028 (space) = <no-default>
  input 0U04D1_intermedateGlobal2029 (U) = <no-default>
  input cellChoice202A (cellChoice) = <no-default>
  input cmap202B (cmap) = image("cmap.nrrd")
  input camEye202C (camEye) = <default>
  input camAt202D (camAt) = <default>
  input camUp202E (camUp) = <default>
  input camNear202F (camNear) = <default>
  input camFar2030 (camFar) = <default>
  input camFOV2031 (camFOV) = <default>
  input camOrtho2032 (camOrtho) = <default>
  input iresU2033 (iresU) = <default>
  input iresV2034 (iresV) = <default>
  input rayStep2035 (rayStep) = <default>
  input refStep2036 (refStep) = <default>
  input transp02037 (transp0) = <default>
  input thick2038 (thick) = <default>
  input fStrTh2039 (fStrTh) = <default>
  input fMaskTh203A (fMaskTh) = <default>
  input fBias203B (fBias) = <default>
  input maxAlpha203C (maxAlpha) = <default>
  input light203D (light) = <default>
  input phong203E (phong) = <default>
  input mcNear203F (mcNear) = <default>
  input mcFar2040 (mcFar) = <default>
  input litdir2041 (litdir) = <default>
  input cminmax2042 (cminmax) = <default>
  global tensor[3] camN2043
  global tensor[3] camU2044
  global tensor[3] camV2045
  global real camDist2046
  global real camVmax2047
  global real camUmax2048
  global real camNearVsp2049
  global real camFarVsp204A
  global tensor[3] litwsp204B
  global int _t204C
  global femData:Space _tX204D
  global femData:FemFunc _tXX204E
## functions
## input initialization
  ENTRY2051:  preds = []
    real _t2052#13 = 0.e0;
    real _t2054#1 = -0.2e1;
    tensor[3] camEye2056#1 = <tensor[3]>[_t2052,_t2054,_t2052];
    globals.camEye202C = camEye2056;
    tensor[3] camAt2059#1 = <tensor[3]>[_t2052,_t2052,_t2052];
    globals.camAt202D = camAt2059;
    real _t205C#5 = 0.1e1;
    tensor[3] camUp205E#1 = <tensor[3]>[_t2052,_t2052,_t205C];
    globals.camUp202E = camUp205E;
    real camNear2061#1 = -0.4e1;
    globals.camNear202F = camNear2061;
    real camFar2064#1 = 0.4e1;
    globals.camFar2030 = camFar2064;
    real camFOV2067#1 = 0.1e2;
    globals.camFOV2031 = camFOV2067;
    bool camOrtho206A#2 = false;
    globals.camOrtho2032 = camOrtho206A;
    int iresU206D#2 = 100;
    globals.iresU2033 = iresU206D;
    globals.iresV2034 = iresU206D;
    real rayStep2071#2 = 0.1e-3;
    globals.rayStep2035 = rayStep2071;
    globals.refStep2036 = rayStep2071;
    real transp02075#1 = 0.5e-2;
    globals.transp02037 = transp02075;
    real thick2078#1 = 0.1e-1;
    globals.thick2038 = thick2078;
    globals.fStrTh2039 = _t2052;
    globals.fMaskTh203A = _t2052;
    real fBias207D#2 = 0.1e0;
    globals.fBias203B = fBias207D;
    globals.maxAlpha203C = _t205C;
    globals.light203D = camOrtho206A;
    real _t2082#1 = 0.7e0;
    real _t2084#1 = 0.2e0;
    real _t2086#1 = 0.1e3;
    tensor[4] phong2088#1 = <tensor[4]>[fBias207D,_t2082,_t2084,_t2086];
    globals.phong203E = phong2088;
    tensor[3] mcNear208B#2 = <tensor[3]>[_t205C,_t205C,_t205C];
    globals.mcNear203F = mcNear208B;
    globals.mcFar2040 = mcNear208B;
    real _t208F#1 = -0.1e1;
    tensor[3] litdir2091#1 = <tensor[3]>[_t2052,_t208F,_t2052];
    globals.litdir2041 = litdir2091;
    tensor[2] cminmax2094#1 = <tensor[2]>[_t2052,_t2052];
    globals.cminmax2042 = cminmax2094;
    return
## global-variable initialization
  ENTRY2098:  preds = []
    femData:Mesh block2099#3 = globals.block2027;
    femData:Space 0space04CF_intermedateGlobal209B#1 = globals.0space04CF_intermedateGlobal2028;
    femData:FemFunc 0U04D1_intermedateGlobal209D#1 = globals.0U04D1_intermedateGlobal2029;
    int cellChoice209F#1 = globals.cellChoice202A;
    tensor[3] camEye20A3#1 = globals.camEye202C;
    tensor[3] camAt20A5#1 = globals.camAt202D;
    tensor[3] camUp20A7#3 = globals.camUp202E;
    real camNear20A9#1 = globals.camNear202F;
    real camFar20AB#1 = globals.camFar2030;
    real camFOV20AD#1 = globals.camFOV2031;
    int iresU20AF#1 = globals.iresU2033;
    int iresV20B1#1 = globals.iresV2034;
    tensor[3] litdir20B3#5 = globals.litdir2041;
    int _t20B5#1 = 0;
    int _t20B7#1 = 1;
    int _t20B9#1 = ExtractFemItem<int,NumCell(Mesh)>(block2099);
    int _t20BB#1 = ISub(_t20B9,_t20B7);
    int[] _t20BD#1 = Range(_t20B5,_t20BB);
    femData:MeshCell[] _t20BF#1 = <femData:MeshCell[]>{};
  FOREACH20C2:  preds = [ASSIGN20C0,NEXT20C8]
    foreach (_t20C1 in _t20BD) on exit goto ASSIGN20CA
      femData:MeshCell[] _t20C6#2 = phi(_t20BF,_t20C5)
    femData:MeshCell _t20C3#1 = LoadFem<femData:MeshCell>(block2099,_t20C1);
    femData:MeshCell[] _t20C5#1 = Append<femData:MeshCell>(_t20C6,_t20C3);
    goto FOREACH20C2
  ASSIGN20CA:  preds = [FOREACH20C2]
    femData:Space space20C9#1 = LoadFem<femData:Space>(0space04CF_intermedateGlobal209B,block2099);
    femData:FemFunc U20CB#1 = LoadFem<femData:FemFunc>(0U04D1_intermedateGlobal209D,space20C9);
    femData:MeshCell c120CD#1 = Subscript<femData:MeshCell[]>(_t20C6,cellChoice209F);
    int _t20CF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c120CD);
    femData:FuncCell _t20D1#2 = LoadFem<femData:FuncCell>(U20CB,_t20CF);
    femData:FemFunc _t20D3#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t20D1);
    femData:Space _t20D5#1 = ExtractFem<femData:Space,femData:FemFunc>(_t20D3);
    int _t20D7#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t20D1);
    tensor[3] op1_e3_l_420DD#9 = VSub<3>(camAt20A5,camEye20A3);
    real op1_e3_l_620E0#1 = VDot<3>(op1_e3_l_420DD,op1_e3_l_420DD);
    real op1_e3_l_720E3#6 = Sqrt(op1_e3_l_620E0);
    real realLit20E7#9 = 0.1e1;
    real op1_e3_l_920E6#6 = RDiv(realLit20E7,op1_e3_l_720E3);
    tensor[3] camN20EB#4 = VScale<3>(op1_e3_l_920E6,op1_e3_l_420DD);
    globals.camN2043 = camN20EB;
    real realLit20F0#6 = 0.e0;
    real r20F1#3 = TensorIndex<tensor[3],[0]>(camUp20A7);
    real r20F2#3 = RMul(realLit20F0,r20F1);
    real r20F3#3 = TensorIndex<tensor[3],[1]>(camUp20A7);
    real r20F4#3 = RMul(realLit20F0,r20F3);
    real r20F5#3 = TensorIndex<tensor[3],[2]>(camUp20A7);
    real r20F6#5 = RMul(realLit20F0,r20F5);
    real r20F7#3 = RAdd(r20F2,r20F4);
    real r20F8#3 = RAdd(r20F7,r20F6);
    real r20FA#1 = RMul(realLit20E7,r20F5);
    real r20FB#1 = RAdd(r20F7,r20FA);
    real realLit20FC#6 = -0.1e1;
    real r20FD#1 = RMul(realLit20FC,r20F3);
    real r20FE#1 = RAdd(r20F2,r20FD);
    real r20FF#1 = RAdd(r20FE,r20F6);
    tensor[3] tensor2100#1 = <tensor[3]>[r20F8,r20FB,r20FF];
    real r2101#1 = RMul(realLit20FC,r20F5);
    real r2102#1 = RAdd(r20F7,r2101);
    real r2103#1 = RMul(realLit20E7,r20F1);
    real r2104#1 = RAdd(r2103,r20F4);
    real r2105#1 = RAdd(r2104,r20F6);
    tensor[3] tensor2106#1 = <tensor[3]>[r2102,r20F8,r2105];
    real r2107#1 = RMul(realLit20E7,r20F3);
    real r2108#1 = RAdd(r20F2,r2107);
    real r2109#1 = RAdd(r2108,r20F6);
    real r210A#1 = RMul(realLit20FC,r20F1);
    real r210B#1 = RAdd(r210A,r20F4);
    real r210C#1 = RAdd(r210B,r20F6);
    tensor[3] tensor210D#1 = <tensor[3]>[r2109,r210C,r20F8];
    real vdot2130#4 = VDot<3>(op1_e3_l_420DD,tensor2100);
    real vdot2132#4 = VDot<3>(op1_e3_l_420DD,tensor2106);
    real vdot2134#4 = VDot<3>(op1_e3_l_420DD,tensor210D);
    tensor[3] op1_e3_l_17212E#3 = <tensor[3]>[vdot2130,vdot2132,vdot2134];
    real op1_e3_l_34213D#1 = VDot<3>(op1_e3_l_17212E,op1_e3_l_17212E);
    real r2141#1 = RMul(op1_e3_l_920E6,op1_e3_l_920E6);
    real op1_e3_l_352140#1 = RMul(r2141,op1_e3_l_34213D);
    real op1_e3_l_362145#1 = Sqrt(op1_e3_l_352140);
    tensor[3] op1_e3_l_372148#1 = VScale<3>(op1_e3_l_920E6,op1_e3_l_17212E);
    real op1_e3_l_38214B#2 = RDiv(realLit20E7,op1_e3_l_362145);
    tensor[3] camU2150#4 = VScale<3>(op1_e3_l_38214B,op1_e3_l_372148);
    globals.camU2044 = camU2150;
    real r2157#3 = RMul(realLit20F0,vdot2130);
    real r2159#3 = RMul(realLit20F0,vdot2132);
    real r215B#5 = RMul(realLit20F0,vdot2134);
    real r215C#3 = RAdd(r2157,r2159);
    real r215D#3 = RAdd(r215C,r215B);
    real r215F#1 = RMul(realLit20E7,vdot2134);
    real r2160#1 = RAdd(r215C,r215F);
    real r2162#1 = RMul(realLit20FC,vdot2132);
    real r2163#1 = RAdd(r2157,r2162);
    real r2164#1 = RAdd(r2163,r215B);
    tensor[3] tensor2165#1 = <tensor[3]>[r215D,r2160,r2164];
    real r2166#1 = RMul(realLit20FC,vdot2134);
    real r2167#1 = RAdd(r215C,r2166);
    real r2168#1 = RMul(realLit20E7,vdot2130);
    real r2169#1 = RAdd(r2168,r2159);
    real r216A#1 = RAdd(r2169,r215B);
    tensor[3] tensor216B#1 = <tensor[3]>[r2167,r215D,r216A];
    real r216C#1 = RMul(realLit20E7,vdot2132);
    real r216D#1 = RAdd(r2157,r216C);
    real r216E#1 = RAdd(r216D,r215B);
    real r216F#1 = RMul(realLit20FC,vdot2130);
    real r2170#1 = RAdd(r216F,r2159);
    real r2171#1 = RAdd(r2170,r215B);
    tensor[3] tensor2172#1 = <tensor[3]>[r216E,r2171,r215D];
    real vdot2195#1 = VDot<3>(op1_e3_l_420DD,tensor2165);
    real vdot2197#1 = VDot<3>(op1_e3_l_420DD,tensor216B);
    real vdot2199#1 = VDot<3>(op1_e3_l_420DD,tensor2172);
    tensor[3] op1_e3_l_472193#1 = <tensor[3]>[vdot2195,vdot2197,vdot2199];
    tensor[3] op1_e3_l_5021A2#3 = VScale<3>(op1_e3_l_920E6,op1_e3_l_472193);
    real r21A6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5021A2);
    real r21A7#3 = RMul(op1_e3_l_920E6,op1_e3_l_38214B);
    real r21A8#2 = RMul(r21A7,r21A6);
    real r21A9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5021A2);
    real r21AA#2 = RMul(r21A7,r21A9);
    real r21AB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5021A2);
    real r21AC#2 = RMul(r21A7,r21AB);
    tensor[3] camV21A5#1 = <tensor[3]>[r21A8,r21AA,r21AC];
    globals.camV2045 = camV21A5;
    globals.camDist2046 = op1_e3_l_720E3;
    real _t21B8#1 = 0.314159265358979323846264338327950288e1;
    real _t21BA#1 = 0.36e3;
    real op1_e3_l_521BC#1 = RMul(camFOV20AD,_t21B8);
    real op1_e3_l_621BF#1 = RDiv(op1_e3_l_521BC,_t21BA);
    real op1_e3_l_1021C2#2 = Tan(op1_e3_l_621BF);
    real camVmax21C5#1 = RMul(op1_e3_l_1021C2,op1_e3_l_720E3);
    globals.camVmax2047 = camVmax21C5;
    real _t21C9#1 = IntToReal(iresU20AF);
    real _t21CB#1 = IntToReal(iresV20B1);
    real r21CE#1 = RMul(_t21C9,op1_e3_l_1021C2);
    real op1_e3_l_1421CD#1 = RMul(r21CE,op1_e3_l_720E3);
    real camUmax21D2#1 = RDiv(op1_e3_l_1421CD,_t21CB);
    globals.camUmax2048 = camUmax21D2;
    real camNearVsp21D6#1 = RAdd(camNear20A9,op1_e3_l_720E3);
    globals.camNearVsp2049 = camNearVsp21D6;
    real camFarVsp21DA#1 = RAdd(camFar20AB,op1_e3_l_720E3);
    globals.camFarVsp204A = camFarVsp21DA;
    real op1_e3_l_321E0#1 = VDot<3>(litdir20B3,litdir20B3);
    real op1_e3_l_421E3#1 = Sqrt(op1_e3_l_321E0);
    real op1_e3_l_521E6#1 = RDiv(realLit20E7,op1_e3_l_421E3);
    real r21EC#1 = VIndex<3,0>(camU2150);
    real r21ED#3 = TensorIndex<tensor[3],[0]>(litdir20B3);
    real r21EE#1 = RMul(r21EC,r21ED);
    real r21F0#3 = TensorIndex<tensor[3],[1]>(litdir20B3);
    real r21F1#1 = RMul(r21A8,r21F0);
    real r21F2#1 = VIndex<3,0>(camN20EB);
    real r21F3#3 = TensorIndex<tensor[3],[2]>(litdir20B3);
    real r21F4#1 = RMul(r21F2,r21F3);
    real r21F5#1 = RAdd(r21EE,r21F1);
    real r21F6#1 = RAdd(r21F5,r21F4);
    real r21F7#1 = VIndex<3,1>(camU2150);
    real r21F8#1 = RMul(r21F7,r21ED);
    real r21FA#1 = RMul(r21AA,r21F0);
    real r21FB#1 = VIndex<3,1>(camN20EB);
    real r21FC#1 = RMul(r21FB,r21F3);
    real r21FD#1 = RAdd(r21F8,r21FA);
    real r21FE#1 = RAdd(r21FD,r21FC);
    real r21FF#1 = VIndex<3,2>(camU2150);
    real r2200#1 = RMul(r21FF,r21ED);
    real r2202#1 = RMul(r21AC,r21F0);
    real r2203#1 = VIndex<3,2>(camN20EB);
    real r2204#1 = RMul(r2203,r21F3);
    real r2205#1 = RAdd(r2200,r2202);
    real r2206#1 = RAdd(r2205,r2204);
    tensor[3] op1_e3_l_621EB#1 = <tensor[3]>[r21F6,r21FE,r2206];
    tensor[3] litwsp2224#1 = VScale<3>(op1_e3_l_521E6,op1_e3_l_621EB);
    globals.litwsp204B = litwsp2224;
    globals._t204C = _t20D7;
    globals._tX204D = _t20D5;
    globals._tXX204E = _t20D3;
    return
## strand
  strand ray (int ui222E#1, int vi222F#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2240:  preds = []
        tensor[3] camEye2241#1 = globals.camEye202C;
        bool camOrtho2243#2 = globals.camOrtho2032;
        int iresU2245#1 = globals.iresU2033;
        int iresV2247#1 = globals.iresV2034;
        real rayStep2249#1 = globals.rayStep2035;
        real refStep224B#1 = globals.refStep2036;
        tensor[4] phong224D#4 = globals.phong203E;
        tensor[3] camN224F#1 = globals.camN2043;
        tensor[3] camU2251#1 = globals.camU2044;
        tensor[3] camV2253#1 = globals.camV2045;
        real camDist2255#1 = globals.camDist2046;
        real camVmax2257#2 = globals.camVmax2047;
        real camUmax2259#2 = globals.camUmax2048;
        real camNearVsp225B#1 = globals.camNearVsp2049;
        real _t225D#4 = -0.5e0;
        real _t225F#1 = IntToReal(ui222E);
        real _t2261#1 = IntToReal(iresU2245);
        real _t2263#2 = 0.5e0;
        real op1_e3_l_62265#1 = RSub(_t2261,_t2263);
        real op1_e3_l_72268#1 = RSub(_t225F,_t225D);
        real op1_e3_l_8226B#1 = RSub(op1_e3_l_62265,_t225D);
        real op1_e3_l_9226E#2 = RNeg(camUmax2259);
        real op1_e3_l_102271#1 = RDiv(op1_e3_l_72268,op1_e3_l_8226B);
        real op1_e3_l_112274#1 = RSub(camUmax2259,op1_e3_l_9226E);
        real op1_e3_l_132277#1 = RMul(op1_e3_l_102271,op1_e3_l_112274);
        real rayU227A#2 = RAdd(op1_e3_l_9226E,op1_e3_l_132277);
        real _t227D#1 = IntToReal(vi222F);
        real _t227F#1 = IntToReal(iresV2247);
        real op1_e3_l_62281#1 = RSub(_t227F,_t2263);
        real op1_e3_l_72284#1 = RSub(_t227D,_t225D);
        real op1_e3_l_82287#1 = RSub(op1_e3_l_62281,_t225D);
        real op1_e3_l_9228A#2 = RNeg(camVmax2257);
        real op1_e3_l_10228D#1 = RDiv(op1_e3_l_72284,op1_e3_l_82287);
        real op1_e3_l_112290#1 = RSub(camVmax2257,op1_e3_l_9228A);
        real op1_e3_l_132293#1 = RMul(op1_e3_l_10228D,op1_e3_l_112290);
        real rayV2296#2 = RAdd(op1_e3_l_9228A,op1_e3_l_132293);
        tensor[3] op1_e3_l_3222A8#1 = VScale<3>(rayU227A,camU2251);
        tensor[3] op1_e3_l_3322AB#1 = VScale<3>(rayV2296,camV2253);
        tensor[3] UV22AE#5 = VAdd<3>(op1_e3_l_3222A8,op1_e3_l_3322AB);
        if camOrtho2243 then goto JOIN22B4 else goto ASSIGN230E
      JOIN22B4:  preds = [COND22B1,ASSIGN230F]
        tensor[3] _t22B2#1 = phi(UV22AE,_t22B3)
        tensor[3] rayOrig22B5#1 = VAdd<3>(camEye2241,_t22B2);
        if camOrtho2243 then goto ASSIGN22BA else goto ASSIGN2304
      ASSIGN22BA:  preds = [COND22B8]
        real _t22B9#3 = 0.e0;
        tensor[3] _t22BB#1 = <tensor[3]>[_t22B9,_t22B9,_t22B9];
        goto JOIN22BF
      JOIN22BF:  preds = [ASSIGN22BC,ASSIGN230C]
        tensor[3] _t22BD#1 = phi(_t22BB,_t22BE)
        tensor[3] rayVec22C0#4 = VAdd<3>(camN224F,_t22BD);
        real op1_e3_l_622C3#1 = VDot<3>(rayVec22C0,rayVec22C0);
        real op1_e3_l_722C6#2 = Sqrt(op1_e3_l_622C3);
        real op1_e3_l_822C9#1 = RMul(rayStep2249,op1_e3_l_722C6);
        real alphaFix22CC#1 = RDiv(op1_e3_l_822C9,refStep224B);
        real realLit22D0#2 = 0.1e1;
        real op1_e3_l_922CF#1 = RDiv(realLit22D0,op1_e3_l_722C6);
        tensor[3] op1_e3_l_1022D4#1 = VScale<3>(op1_e3_l_922CF,rayVec22C0);
        tensor[3] eyeDir22D7#1 = VNeg<3>(op1_e3_l_1022D4);
        real phKa22DA#1 = VIndex<4,0>(phong224D);
        real phKd22DC#1 = VIndex<4,1>(phong224D);
        real phKs22DE#1 = VIndex<4,2>(phong224D);
        real phSp22E0#1 = VIndex<4,3>(phong224D);
        real _t22E2#8 = 0.e0;
        tensor[4] rgba22E4#1 = <tensor[4]>[_t22E2,_t22E2,_t22E2,_t22E2];
        tensor[3] rgb22E6#1 = <tensor[3]>[_t22E2,_t22E2,_t22E2];
        self.rayU = rayU227A;
        self.rayV = rayV2296;
        self.rayN = camNearVsp225B;
        self.UV = UV22AE;
        self.rayOrig = rayOrig22B5;
        self.rayVec = rayVec22C0;
        self.alphaFix = alphaFix22CC;
        self.eyeDir = eyeDir22D7;
        self.phKa = phKa22DA;
        self.phKd = phKd22DC;
        self.phKs = phKs22DE;
        self.phSp = phSp22E0;
        self.rgba = rgba22E4;
        self.raw = _t22E2;
        self.rgb = rgb22E6;
        self.transp = realLit22D0;
        return
      ASSIGN2304:  preds = [COND22B8]
        real realLit22FB#1 = 0.1e1;
        real r22FC#3 = RDiv(realLit22FB,camDist2255);
        real r22FD#1 = TensorIndex<tensor[3],[0]>(UV22AE);
        real r22FE#1 = RMul(r22FC,r22FD);
        real r22FF#1 = TensorIndex<tensor[3],[1]>(UV22AE);
        real r2300#1 = RMul(r22FC,r22FF);
        real r2301#1 = TensorIndex<tensor[3],[2]>(UV22AE);
        real r2302#1 = RMul(r22FC,r2301);
        tensor[3] _t22BE#1 = <tensor[3]>[r22FE,r2300,r2302];
        goto JOIN22BF
      ASSIGN230E:  preds = [COND22B1]
        real _t230D#3 = 0.e0;
        tensor[3] _t22B3#1 = <tensor[3]>[_t230D,_t230D,_t230D];
        goto JOIN22B4
    end state init
    method update
        ENTRY2310:  preds = []
          image(IMAGE1D<double[3]>) cmap2311#17 = globals.cmap202B;
          int _t2313#2 = globals._t204C;
          femData:Space _t2315#168 = globals._tX204D;
          femData:FemFunc _t2317#168 = globals._tXX204E;
          femData:Mesh block231D#1 = globals.block2027;
          real rayStep231F#1 = globals.rayStep2035;
          real transp02321#1 = globals.transp02037;
          real thick2323#1 = globals.thick2038;
          real fStrTh2325#1 = globals.fStrTh2039;
          real fMaskTh2327#1 = globals.fMaskTh203A;
          real fBias2329#1 = globals.fBias203B;
          real maxAlpha232B#1 = globals.maxAlpha203C;
          tensor[3] mcNear232D#2 = globals.mcNear203F;
          tensor[3] mcFar232F#1 = globals.mcFar2040;
          tensor[2] cminmax2331#2 = globals.cminmax2042;
          real camNearVsp2333#2 = globals.camNearVsp2049;
          real camFarVsp2335#2 = globals.camFarVsp204A;
          tensor[3] litwsp2337#2 = globals.litwsp204B;
          real rayN2339#1 = self.rayN;
          tensor[3] rayOrig233B#1 = self.rayOrig;
          tensor[3] rayVec233D#1 = self.rayVec;
          real alphaFix233F#1 = self.alphaFix;
          tensor[3] eyeDir2341#1 = self.eyeDir;
          real phKa2343#1 = self.phKa;
          real phKd2345#1 = self.phKd;
          real phKs2347#2 = self.phKs;
          real phSp2349#1 = self.phSp;
          tensor[3] rgb234B#1 = self.rgb;
          real transp234D#2 = self.transp;
          real rayN234F#8 = RAdd(rayN2339,rayStep231F);
          bool _t2352#1 = GT<real>(rayN234F,camFarVsp2335);
          if _t2352 then goto SAVE2355 else goto JOIN2357
        SAVE2355:  preds = [COND2354]
          self.rayN = rayN234F;
          stabilize
          goto JOIN2357
        JOIN2357:  preds = [*STABILIZE2356,COND2354]
          tensor[3] op1_e3_l_52358#1 = VScale<3>(rayN234F,rayVec233D);
          tensor[3] pos235B#8 = VAdd<3>(rayOrig233B,op1_e3_l_52358);
          femData:RefCell _t235E#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block231D);
          real _t2360#1 = 0.1e-8;
          bool _t2362#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t235E,pos235B,_t2360);
          if _t2362 then goto ASSIGN2465 else goto ASSIGN389B
        ASSIGN2465:  preds = [COND2364]
          int ilit2366#1 = 84;
          int mulRes2367#84 = IMul(_t2313,ilit2366);
          int idx236A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,mulRes2367);
          int ilit236B#86 = 1;
          int addRes236C#1 = IAdd(mulRes2367,ilit236B);
          int idx236D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236C);
          int ilit236E#1 = 2;
          int addRes236F#1 = IAdd(mulRes2367,ilit236E);
          int idx2370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes236F);
          int ilit2371#1 = 3;
          int addRes2372#1 = IAdd(mulRes2367,ilit2371);
          int idx2373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2372);
          int ilit2374#1 = 4;
          int addRes2375#1 = IAdd(mulRes2367,ilit2374);
          int idx2376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2375);
          int ilit2377#1 = 5;
          int addRes2378#1 = IAdd(mulRes2367,ilit2377);
          int idx2379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2378);
          int ilit237A#1 = 6;
          int addRes237B#1 = IAdd(mulRes2367,ilit237A);
          int idx237C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237B);
          int ilit237D#1 = 7;
          int addRes237E#1 = IAdd(mulRes2367,ilit237D);
          int idx237F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes237E);
          int ilit2380#1 = 8;
          int addRes2381#1 = IAdd(mulRes2367,ilit2380);
          int idx2382#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2381);
          int ilit2383#1 = 9;
          int addRes2384#1 = IAdd(mulRes2367,ilit2383);
          int idx2385#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2384);
          int ilit2386#1 = 10;
          int addRes2387#1 = IAdd(mulRes2367,ilit2386);
          int idx2388#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2387);
          int ilit2389#1 = 11;
          int addRes238A#1 = IAdd(mulRes2367,ilit2389);
          int idx238B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238A);
          int ilit238C#1 = 12;
          int addRes238D#1 = IAdd(mulRes2367,ilit238C);
          int idx238E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes238D);
          int ilit238F#1 = 13;
          int addRes2390#1 = IAdd(mulRes2367,ilit238F);
          int idx2391#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2390);
          int ilit2392#1 = 14;
          int addRes2393#1 = IAdd(mulRes2367,ilit2392);
          int idx2394#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2393);
          int ilit2395#1 = 15;
          int addRes2396#1 = IAdd(mulRes2367,ilit2395);
          int idx2397#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2396);
          int ilit2398#1 = 16;
          int addRes2399#1 = IAdd(mulRes2367,ilit2398);
          int idx239A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2399);
          int ilit239B#1 = 17;
          int addRes239C#1 = IAdd(mulRes2367,ilit239B);
          int idx239D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239C);
          int ilit239E#1 = 18;
          int addRes239F#1 = IAdd(mulRes2367,ilit239E);
          int idx23A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes239F);
          int ilit23A1#1 = 19;
          int addRes23A2#1 = IAdd(mulRes2367,ilit23A1);
          int idx23A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A2);
          int ilit23A4#1 = 20;
          int addRes23A5#1 = IAdd(mulRes2367,ilit23A4);
          int idx23A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A5);
          int ilit23A7#1 = 21;
          int addRes23A8#1 = IAdd(mulRes2367,ilit23A7);
          int idx23A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23A8);
          int ilit23AA#1 = 22;
          int addRes23AB#1 = IAdd(mulRes2367,ilit23AA);
          int idx23AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AB);
          int ilit23AD#1 = 23;
          int addRes23AE#1 = IAdd(mulRes2367,ilit23AD);
          int idx23AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23AE);
          int ilit23B0#1 = 24;
          int addRes23B1#1 = IAdd(mulRes2367,ilit23B0);
          int idx23B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B1);
          int ilit23B3#1 = 25;
          int addRes23B4#1 = IAdd(mulRes2367,ilit23B3);
          int idx23B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B4);
          int ilit23B6#1 = 26;
          int addRes23B7#1 = IAdd(mulRes2367,ilit23B6);
          int idx23B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23B7);
          int ilit23B9#1 = 27;
          int addRes23BA#1 = IAdd(mulRes2367,ilit23B9);
          int idx23BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BA);
          int ilit23BC#1 = 28;
          int addRes23BD#1 = IAdd(mulRes2367,ilit23BC);
          int idx23BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23BD);
          int ilit23BF#1 = 29;
          int addRes23C0#1 = IAdd(mulRes2367,ilit23BF);
          int idx23C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C0);
          int ilit23C2#1 = 30;
          int addRes23C3#1 = IAdd(mulRes2367,ilit23C2);
          int idx23C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C3);
          int ilit23C5#1 = 31;
          int addRes23C6#1 = IAdd(mulRes2367,ilit23C5);
          int idx23C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C6);
          int ilit23C8#1 = 32;
          int addRes23C9#1 = IAdd(mulRes2367,ilit23C8);
          int idx23CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23C9);
          int ilit23CB#1 = 33;
          int addRes23CC#1 = IAdd(mulRes2367,ilit23CB);
          int idx23CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CC);
          int ilit23CE#1 = 34;
          int addRes23CF#1 = IAdd(mulRes2367,ilit23CE);
          int idx23D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23CF);
          int ilit23D1#1 = 35;
          int addRes23D2#1 = IAdd(mulRes2367,ilit23D1);
          int idx23D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D2);
          int ilit23D4#1 = 36;
          int addRes23D5#1 = IAdd(mulRes2367,ilit23D4);
          int idx23D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D5);
          int ilit23D7#1 = 37;
          int addRes23D8#1 = IAdd(mulRes2367,ilit23D7);
          int idx23D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23D8);
          int ilit23DA#1 = 38;
          int addRes23DB#1 = IAdd(mulRes2367,ilit23DA);
          int idx23DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DB);
          int ilit23DD#1 = 39;
          int addRes23DE#1 = IAdd(mulRes2367,ilit23DD);
          int idx23DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23DE);
          int ilit23E0#1 = 40;
          int addRes23E1#1 = IAdd(mulRes2367,ilit23E0);
          int idx23E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E1);
          int ilit23E3#1 = 41;
          int addRes23E4#1 = IAdd(mulRes2367,ilit23E3);
          int idx23E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E4);
          int ilit23E6#1 = 42;
          int addRes23E7#1 = IAdd(mulRes2367,ilit23E6);
          int idx23E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23E7);
          int ilit23E9#1 = 43;
          int addRes23EA#1 = IAdd(mulRes2367,ilit23E9);
          int idx23EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23EA);
          int ilit23EC#1 = 44;
          int addRes23ED#1 = IAdd(mulRes2367,ilit23EC);
          int idx23EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23ED);
          int ilit23EF#1 = 45;
          int addRes23F0#1 = IAdd(mulRes2367,ilit23EF);
          int idx23F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F0);
          int ilit23F2#1 = 46;
          int addRes23F3#1 = IAdd(mulRes2367,ilit23F2);
          int idx23F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F3);
          int ilit23F5#1 = 47;
          int addRes23F6#1 = IAdd(mulRes2367,ilit23F5);
          int idx23F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F6);
          int ilit23F8#1 = 48;
          int addRes23F9#1 = IAdd(mulRes2367,ilit23F8);
          int idx23FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23F9);
          int ilit23FB#1 = 49;
          int addRes23FC#1 = IAdd(mulRes2367,ilit23FB);
          int idx23FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FC);
          int ilit23FE#1 = 50;
          int addRes23FF#1 = IAdd(mulRes2367,ilit23FE);
          int idx2400#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes23FF);
          int ilit2401#1 = 51;
          int addRes2402#1 = IAdd(mulRes2367,ilit2401);
          int idx2403#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2402);
          int ilit2404#1 = 52;
          int addRes2405#1 = IAdd(mulRes2367,ilit2404);
          int idx2406#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2405);
          int ilit2407#1 = 53;
          int addRes2408#1 = IAdd(mulRes2367,ilit2407);
          int idx2409#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2408);
          int ilit240A#1 = 54;
          int addRes240B#1 = IAdd(mulRes2367,ilit240A);
          int idx240C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240B);
          int ilit240D#1 = 55;
          int addRes240E#1 = IAdd(mulRes2367,ilit240D);
          int idx240F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes240E);
          int ilit2410#1 = 56;
          int addRes2411#1 = IAdd(mulRes2367,ilit2410);
          int idx2412#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2411);
          int ilit2413#1 = 57;
          int addRes2414#1 = IAdd(mulRes2367,ilit2413);
          int idx2415#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2414);
          int ilit2416#1 = 58;
          int addRes2417#1 = IAdd(mulRes2367,ilit2416);
          int idx2418#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2417);
          int ilit2419#1 = 59;
          int addRes241A#1 = IAdd(mulRes2367,ilit2419);
          int idx241B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241A);
          int ilit241C#1 = 60;
          int addRes241D#1 = IAdd(mulRes2367,ilit241C);
          int idx241E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes241D);
          int ilit241F#1 = 61;
          int addRes2420#1 = IAdd(mulRes2367,ilit241F);
          int idx2421#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2420);
          int ilit2422#1 = 62;
          int addRes2423#1 = IAdd(mulRes2367,ilit2422);
          int idx2424#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2423);
          int ilit2425#1 = 63;
          int addRes2426#1 = IAdd(mulRes2367,ilit2425);
          int idx2427#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2426);
          int ilit2428#1 = 64;
          int addRes2429#1 = IAdd(mulRes2367,ilit2428);
          int idx242A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2429);
          int ilit242B#1 = 65;
          int addRes242C#1 = IAdd(mulRes2367,ilit242B);
          int idx242D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242C);
          int ilit242E#1 = 66;
          int addRes242F#1 = IAdd(mulRes2367,ilit242E);
          int idx2430#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes242F);
          int ilit2431#1 = 67;
          int addRes2432#1 = IAdd(mulRes2367,ilit2431);
          int idx2433#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2432);
          int ilit2434#1 = 68;
          int addRes2435#1 = IAdd(mulRes2367,ilit2434);
          int idx2436#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2435);
          int ilit2437#1 = 69;
          int addRes2438#1 = IAdd(mulRes2367,ilit2437);
          int idx2439#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2438);
          int ilit243A#1 = 70;
          int addRes243B#1 = IAdd(mulRes2367,ilit243A);
          int idx243C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243B);
          int ilit243D#1 = 71;
          int addRes243E#1 = IAdd(mulRes2367,ilit243D);
          int idx243F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes243E);
          int ilit2440#1 = 72;
          int addRes2441#1 = IAdd(mulRes2367,ilit2440);
          int idx2442#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2441);
          int ilit2443#1 = 73;
          int addRes2444#1 = IAdd(mulRes2367,ilit2443);
          int idx2445#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2444);
          int ilit2446#1 = 74;
          int addRes2447#1 = IAdd(mulRes2367,ilit2446);
          int idx2448#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2447);
          int ilit2449#1 = 75;
          int addRes244A#1 = IAdd(mulRes2367,ilit2449);
          int idx244B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244A);
          int ilit244C#1 = 76;
          int addRes244D#1 = IAdd(mulRes2367,ilit244C);
          int idx244E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes244D);
          int ilit244F#1 = 77;
          int addRes2450#1 = IAdd(mulRes2367,ilit244F);
          int idx2451#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2450);
          int ilit2452#1 = 78;
          int addRes2453#1 = IAdd(mulRes2367,ilit2452);
          int idx2454#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2453);
          int ilit2455#1 = 79;
          int addRes2456#1 = IAdd(mulRes2367,ilit2455);
          int idx2457#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2456);
          int ilit2458#1 = 80;
          int addRes2459#1 = IAdd(mulRes2367,ilit2458);
          int idx245A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2459);
          int ilit245B#1 = 81;
          int addRes245C#1 = IAdd(mulRes2367,ilit245B);
          int idx245D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245C);
          int ilit245E#1 = 82;
          int addRes245F#1 = IAdd(mulRes2367,ilit245E);
          int idx2460#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes245F);
          int ilit2461#1 = 83;
          int addRes2462#1 = IAdd(mulRes2367,ilit2461);
          int idx2463#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2462);
          int mulRes2569#1 = IMul(ilit236B,idx236A);
          int mulRes256B#1 = IMul(ilit236B,idx236D);
          int mulRes256E#1 = IMul(ilit236B,idx2370);
          int mulRes2571#1 = IMul(ilit236B,idx2373);
          int mulRes2574#1 = IMul(ilit236B,idx2376);
          int mulRes2577#1 = IMul(ilit236B,idx2379);
          int mulRes257A#1 = IMul(ilit236B,idx237C);
          int mulRes257D#1 = IMul(ilit236B,idx237F);
          int mulRes2580#1 = IMul(ilit236B,idx2382);
          int mulRes2583#1 = IMul(ilit236B,idx2385);
          int mulRes2586#1 = IMul(ilit236B,idx2388);
          int mulRes2589#1 = IMul(ilit236B,idx238B);
          int mulRes258C#1 = IMul(ilit236B,idx238E);
          int mulRes258F#1 = IMul(ilit236B,idx2391);
          int mulRes2592#1 = IMul(ilit236B,idx2394);
          int mulRes2595#1 = IMul(ilit236B,idx2397);
          int mulRes2598#1 = IMul(ilit236B,idx239A);
          int mulRes259B#1 = IMul(ilit236B,idx239D);
          int mulRes259E#1 = IMul(ilit236B,idx23A0);
          int mulRes25A1#1 = IMul(ilit236B,idx23A3);
          int mulRes25A4#1 = IMul(ilit236B,idx23A6);
          int mulRes25A7#1 = IMul(ilit236B,idx23A9);
          int mulRes25AA#1 = IMul(ilit236B,idx23AC);
          int mulRes25AD#1 = IMul(ilit236B,idx23AF);
          int mulRes25B0#1 = IMul(ilit236B,idx23B2);
          int mulRes25B3#1 = IMul(ilit236B,idx23B5);
          int mulRes25B6#1 = IMul(ilit236B,idx23B8);
          int mulRes25B9#1 = IMul(ilit236B,idx23BB);
          int mulRes25BC#1 = IMul(ilit236B,idx23BE);
          int mulRes25BF#1 = IMul(ilit236B,idx23C1);
          int mulRes25C2#1 = IMul(ilit236B,idx23C4);
          int mulRes25C5#1 = IMul(ilit236B,idx23C7);
          int mulRes25C8#1 = IMul(ilit236B,idx23CA);
          int mulRes25CB#1 = IMul(ilit236B,idx23CD);
          int mulRes25CE#1 = IMul(ilit236B,idx23D0);
          int mulRes25D1#1 = IMul(ilit236B,idx23D3);
          int mulRes25D4#1 = IMul(ilit236B,idx23D6);
          int mulRes25D7#1 = IMul(ilit236B,idx23D9);
          int mulRes25DA#1 = IMul(ilit236B,idx23DC);
          int mulRes25DD#1 = IMul(ilit236B,idx23DF);
          int mulRes25E0#1 = IMul(ilit236B,idx23E2);
          int mulRes25E3#1 = IMul(ilit236B,idx23E5);
          int mulRes25E6#1 = IMul(ilit236B,idx23E8);
          int mulRes25E9#1 = IMul(ilit236B,idx23EB);
          int mulRes25EC#1 = IMul(ilit236B,idx23EE);
          int mulRes25EF#1 = IMul(ilit236B,idx23F1);
          int mulRes25F2#1 = IMul(ilit236B,idx23F4);
          int mulRes25F5#1 = IMul(ilit236B,idx23F7);
          int mulRes25F8#1 = IMul(ilit236B,idx23FA);
          int mulRes25FB#1 = IMul(ilit236B,idx23FD);
          int mulRes25FE#1 = IMul(ilit236B,idx2400);
          int mulRes2601#1 = IMul(ilit236B,idx2403);
          int mulRes2604#1 = IMul(ilit236B,idx2406);
          int mulRes2607#1 = IMul(ilit236B,idx2409);
          int mulRes260A#1 = IMul(ilit236B,idx240C);
          int mulRes260D#1 = IMul(ilit236B,idx240F);
          int mulRes2610#1 = IMul(ilit236B,idx2412);
          int mulRes2613#1 = IMul(ilit236B,idx2415);
          int mulRes2616#1 = IMul(ilit236B,idx2418);
          int mulRes2619#1 = IMul(ilit236B,idx241B);
          int mulRes261C#1 = IMul(ilit236B,idx241E);
          int mulRes261F#1 = IMul(ilit236B,idx2421);
          int mulRes2622#1 = IMul(ilit236B,idx2424);
          int mulRes2625#1 = IMul(ilit236B,idx2427);
          int mulRes2628#1 = IMul(ilit236B,idx242A);
          int mulRes262B#1 = IMul(ilit236B,idx242D);
          int mulRes262E#1 = IMul(ilit236B,idx2430);
          int mulRes2631#1 = IMul(ilit236B,idx2433);
          int mulRes2634#1 = IMul(ilit236B,idx2436);
          int mulRes2637#1 = IMul(ilit236B,idx2439);
          int mulRes263A#1 = IMul(ilit236B,idx243C);
          int mulRes263D#1 = IMul(ilit236B,idx243F);
          int mulRes2640#1 = IMul(ilit236B,idx2442);
          int mulRes2643#1 = IMul(ilit236B,idx2445);
          int mulRes2646#1 = IMul(ilit236B,idx2448);
          int mulRes2649#1 = IMul(ilit236B,idx244B);
          int mulRes264C#1 = IMul(ilit236B,idx244E);
          int mulRes264F#1 = IMul(ilit236B,idx2451);
          int mulRes2652#1 = IMul(ilit236B,idx2454);
          int mulRes2655#1 = IMul(ilit236B,idx2457);
          int mulRes2658#1 = IMul(ilit236B,idx245A);
          int mulRes265B#1 = IMul(ilit236B,idx245D);
          int mulRes265E#1 = IMul(ilit236B,idx2460);
          int mulRes2661#1 = IMul(ilit236B,idx2463);
          real dof2662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2569);
          real dof2663#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256B);
          real dof2664#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes256E);
          real dof2665#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2571);
          real dof2666#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2574);
          real dof2667#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2577);
          real dof2668#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257A);
          real dof2669#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes257D);
          real dof266A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2580);
          real dof266B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2583);
          real dof266C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2586);
          real dof266D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2589);
          real dof266E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258C);
          real dof266F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes258F);
          real dof2670#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2592);
          real dof2671#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2595);
          real dof2672#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2598);
          real dof2673#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259B);
          real dof2674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes259E);
          real dof2675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A1);
          real dof2676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A4);
          real dof2677#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25A7);
          real dof2678#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AA);
          real dof2679#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25AD);
          real dof267A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B0);
          real dof267B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B3);
          real dof267C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B6);
          real dof267D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25B9);
          real dof267E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BC);
          real dof267F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25BF);
          real dof2680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C2);
          real dof2681#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C5);
          real dof2682#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25C8);
          real dof2683#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CB);
          real dof2684#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25CE);
          real dof2685#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D1);
          real dof2686#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D4);
          real dof2687#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25D7);
          real dof2688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DA);
          real dof2689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25DD);
          real dof268A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E0);
          real dof268B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E3);
          real dof268C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E6);
          real dof268D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25E9);
          real dof268E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EC);
          real dof268F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25EF);
          real dof2690#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F2);
          real dof2691#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F5);
          real dof2692#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25F8);
          real dof2693#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FB);
          real dof2694#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes25FE);
          real dof2695#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2601);
          real dof2696#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2604);
          real dof2697#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2607);
          real dof2698#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260A);
          real dof2699#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes260D);
          real dof269A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2610);
          real dof269B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2613);
          real dof269C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2616);
          real dof269D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2619);
          real dof269E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261C);
          real dof269F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes261F);
          real dof26A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2622);
          real dof26A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2625);
          real dof26A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2628);
          real dof26A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262B);
          real dof26A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes262E);
          real dof26A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2631);
          real dof26A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2634);
          real dof26A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2637);
          real dof26A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263A);
          real dof26A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes263D);
          real dof26AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2640);
          real dof26AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2643);
          real dof26AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2646);
          real dof26AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2649);
          real dof26AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264C);
          real dof26AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes264F);
          real dof26B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2652);
          real dof26B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2655);
          real dof26B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2658);
          real dof26B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265B);
          real dof26B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes265E);
          real dof26B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2661);
          tensor[84] dofs26B6#9 = <tensor[84]>[dof2662,dof2663,dof2664,dof2665,dof2666,dof2667,dof2668,dof2669,dof266A,dof266B,dof266C,dof266D,dof266E,dof266F,dof2670,dof2671,dof2672,dof2673,dof2674,dof2675,dof2676,dof2677,dof2678,dof2679,dof267A,dof267B,dof267C,dof267D,dof267E,dof267F,dof2680,dof2681,dof2682,dof2683,dof2684,dof2685,dof2686,dof2687,dof2688,dof2689,dof268A,dof268B,dof268C,dof268D,dof268E,dof268F,dof2690,dof2691,dof2692,dof2693,dof2694,dof2695,dof2696,dof2697,dof2698,dof2699,dof269A,dof269B,dof269C,dof269D,dof269E,dof269F,dof26A0,dof26A1,dof26A2,dof26A3,dof26A4,dof26A5,dof26A6,dof26A7,dof26A8,dof26A9,dof26AA,dof26AB,dof26AC,dof26AD,dof26AE,dof26AF,dof26B0,dof26B1,dof26B2,dof26B3,dof26B4,dof26B5];
          real varAcc280A#20 = VIndex<3,0>(pos235B);
          real varAcc280B#10 = VIndex<3,1>(pos235B);
          real varAcc280C#10 = VIndex<3,2>(pos235B);
          real basisEval280D#378 = 0.e0;
          real coeff280E#47 = 0.2e1;
          real one280F#80 = 0.1e1;
          real prod2810#6 = RMul(one280F,one280F);
          real prod2811#2 = RMul(one280F,prod2810);
          real basisEval2812#3 = RMul(coeff280E,prod2811);
          real prod2814#5 = RMul(one280F,varAcc280C);
          real prod2815#3 = RMul(one280F,prod2814);
          real basisEval2816#5 = RMul(coeff280E,prod2815);
          real prod2818#5 = RMul(varAcc280B,one280F);
          real prod2819#3 = RMul(one280F,prod2818);
          real basisEval281A#5 = RMul(coeff280E,prod2819);
          real coeff281B#25 = 0.6e1;
          real prod281D#3 = RMul(varAcc280A,prod2810);
          real basisEval281E#1 = RMul(coeff281B,prod281D);
          real prod2281F#5 = RMul(varAcc280C,varAcc280C);
          real prod2820#4 = RMul(one280F,prod2281F);
          real prod2821#4 = RMul(one280F,prod2820);
          real basisEval2822#2 = RMul(coeff280E,prod2821);
          real prod2823#4 = RMul(varAcc280B,varAcc280C);
          real prod2824#4 = RMul(one280F,prod2823);
          real basisEval2825#5 = RMul(coeff280E,prod2824);
          real prod22826#5 = RMul(varAcc280B,varAcc280B);
          real prod2827#4 = RMul(prod22826,one280F);
          real prod2828#4 = RMul(one280F,prod2827);
          real basisEval2829#2 = RMul(coeff280E,prod2828);
          real prod282A#4 = RMul(varAcc280A,prod2814);
          real basisEval282B#2 = RMul(coeff281B,prod282A);
          real prod282C#4 = RMul(varAcc280A,prod2818);
          real basisEval282D#2 = RMul(coeff281B,prod282C);
          real coeff282E#15 = 0.12e2;
          real prod2282F#11 = RMul(varAcc280A,varAcc280A);
          real prod2830#4 = RMul(prod2282F,prod2810);
          real basisEval2831#1 = RMul(coeff282E,prod2830);
          real prod32832#4 = RMul(prod2281F,varAcc280C);
          real prod2833#3 = RMul(one280F,prod32832);
          real prod2834#4 = RMul(one280F,prod2833);
          real basisEval2835#2 = RMul(coeff280E,prod2834);
          real prod2836#3 = RMul(varAcc280B,prod2281F);
          real prod2837#5 = RMul(one280F,prod2836);
          real basisEval2838#3 = RMul(coeff280E,prod2837);
          real prod2839#3 = RMul(prod22826,varAcc280C);
          real prod283A#5 = RMul(one280F,prod2839);
          real basisEval283B#3 = RMul(coeff280E,prod283A);
          real prod3283C#4 = RMul(prod22826,varAcc280B);
          real prod283D#3 = RMul(prod3283C,one280F);
          real prod283E#4 = RMul(one280F,prod283D);
          real basisEval283F#2 = RMul(coeff280E,prod283E);
          real prod2840#5 = RMul(varAcc280A,prod2820);
          real basisEval2841#2 = RMul(coeff281B,prod2840);
          real prod2842#3 = RMul(varAcc280A,prod2823);
          real basisEval2843#3 = RMul(coeff281B,prod2842);
          real prod2844#5 = RMul(varAcc280A,prod2827);
          real basisEval2845#2 = RMul(coeff281B,prod2844);
          real prod2846#5 = RMul(prod2282F,prod2814);
          real basisEval2847#1 = RMul(coeff282E,prod2846);
          real prod2848#5 = RMul(prod2282F,prod2818);
          real basisEval2849#1 = RMul(coeff282E,prod2848);
          real coeff284A#9 = 0.20e2;
          real prod3284B#7 = RMul(prod2282F,varAcc280A);
          real prod284C#4 = RMul(prod3284B,prod2810);
          real basisEval284D#1 = RMul(coeff284A,prod284C);
          real prod4284E#3 = RMul(prod32832,varAcc280C);
          real prod284F#2 = RMul(one280F,prod4284E);
          real prod2850#4 = RMul(one280F,prod284F);
          real basisEval2851#2 = RMul(coeff280E,prod2850);
          real prod2852#2 = RMul(varAcc280B,prod32832);
          real prod2853#6 = RMul(one280F,prod2852);
          real basisEval2854#3 = RMul(coeff280E,prod2853);
          real prod2855#2 = RMul(prod22826,prod2281F);
          real prod2856#5 = RMul(one280F,prod2855);
          real basisEval2857#1 = RMul(coeff280E,prod2856);
          real prod2858#2 = RMul(prod3283C,varAcc280C);
          real prod2859#6 = RMul(one280F,prod2858);
          real basisEval285A#3 = RMul(coeff280E,prod2859);
          real prod4285B#3 = RMul(prod3283C,varAcc280B);
          real prod285C#2 = RMul(prod4285B,one280F);
          real prod285D#4 = RMul(one280F,prod285C);
          real basisEval285E#2 = RMul(coeff280E,prod285D);
          real prod285F#6 = RMul(varAcc280A,prod2833);
          real basisEval2860#1 = RMul(coeff281B,prod285F);
          real prod2861#5 = RMul(varAcc280A,prod2836);
          real basisEval2862#4 = RMul(coeff281B,prod2861);
          real prod2863#5 = RMul(varAcc280A,prod2839);
          real basisEval2864#4 = RMul(coeff281B,prod2863);
          real prod2865#6 = RMul(varAcc280A,prod283D);
          real basisEval2866#1 = RMul(coeff281B,prod2865);
          real prod2867#5 = RMul(prod2282F,prod2820);
          real basisEval2868#2 = RMul(coeff282E,prod2867);
          real prod2869#5 = RMul(prod2282F,prod2823);
          real basisEval286A#1 = RMul(coeff282E,prod2869);
          real prod286B#5 = RMul(prod2282F,prod2827);
          real basisEval286C#2 = RMul(coeff282E,prod286B);
          real prod286D#6 = RMul(prod3284B,prod2814);
          real basisEval286E#1 = RMul(coeff284A,prod286D);
          real prod286F#6 = RMul(prod3284B,prod2818);
          real basisEval2870#1 = RMul(coeff284A,prod286F);
          real coeff2871#3 = 0.30e2;
          real prod42872#4 = RMul(prod3284B,varAcc280A);
          real prod2873#4 = RMul(prod42872,prod2810);
          real basisEval2874#1 = RMul(coeff2871,prod2873);
          real basisEval2875#6 = RMul(one280F,prod2811);
          real basisEval2876#3 = RMul(one280F,prod2815);
          real basisEval2877#5 = RMul(coeff280E,prod281D);
          real basisEval2878#3 = RMul(one280F,prod2821);
          real coeff2879#24 = 0.3e1;
          real basisEval287A#3 = RMul(coeff2879,prod2828);
          real basisEval287B#5 = RMul(coeff280E,prod282A);
          real coeff287C#25 = 0.4e1;
          real basisEval287D#1 = RMul(coeff287C,prod282C);
          real basisEval287E#3 = RMul(coeff2879,prod2830);
          real basisEval287F#3 = RMul(one280F,prod2834);
          real basisEval2880#2 = RMul(coeff2879,prod283A);
          real basisEval2881#3 = RMul(coeff287C,prod283E);
          real basisEval2882#3 = RMul(coeff280E,prod2840);
          real basisEval2883#3 = RMul(coeff287C,prod2842);
          real basisEval2884#2 = RMul(coeff2879,prod2846);
          real basisEval2885#2 = RMul(coeff281B,prod2848);
          real basisEval2886#3 = RMul(coeff287C,prod284C);
          real basisEval2887#3 = RMul(one280F,prod2850);
          real basisEval2888#4 = RMul(coeff2879,prod2856);
          real basisEval2889#2 = RMul(coeff287C,prod2859);
          real coeff288A#9 = 0.5e1;
          real basisEval288B#3 = RMul(coeff288A,prod285D);
          real basisEval288C#3 = RMul(coeff280E,prod285F);
          real basisEval288D#1 = RMul(coeff287C,prod2861);
          real coeff288E#6 = 0.8e1;
          real basisEval288F#1 = RMul(coeff288E,prod2865);
          real basisEval2890#4 = RMul(coeff2879,prod2867);
          real basisEval2891#4 = RMul(coeff281B,prod2869);
          real coeff2892#3 = 0.9e1;
          real basisEval2893#1 = RMul(coeff2892,prod286B);
          real basisEval2894#2 = RMul(coeff287C,prod286D);
          real basisEval2895#1 = RMul(coeff288E,prod286F);
          real basisEval2896#3 = RMul(coeff288A,prod2873);
          real basisEval2897#3 = RMul(one280F,prod2819);
          real basisEval2898#3 = RMul(coeff2879,prod2821);
          real basisEval2899#3 = RMul(one280F,prod2828);
          real basisEval289A#1 = RMul(coeff287C,prod282A);
          real basisEval289B#5 = RMul(coeff280E,prod282C);
          real basisEval289C#3 = RMul(coeff287C,prod2834);
          real basisEval289D#2 = RMul(coeff2879,prod2837);
          real basisEval289E#3 = RMul(one280F,prod283E);
          real basisEval289F#3 = RMul(coeff280E,prod2844);
          real basisEval28A0#2 = RMul(coeff281B,prod2846);
          real basisEval28A1#2 = RMul(coeff2879,prod2848);
          real basisEval28A2#3 = RMul(coeff288A,prod2850);
          real basisEval28A3#2 = RMul(coeff287C,prod2853);
          real basisEval28A4#3 = RMul(one280F,prod285D);
          real basisEval28A5#1 = RMul(coeff288E,prod285F);
          real basisEval28A6#1 = RMul(coeff287C,prod2863);
          real basisEval28A7#3 = RMul(coeff280E,prod2865);
          real basisEval28A8#1 = RMul(coeff2892,prod2867);
          real basisEval28A9#4 = RMul(coeff2879,prod286B);
          real basisEval28AA#1 = RMul(coeff288E,prod286D);
          real basisEval28AB#2 = RMul(coeff287C,prod286F);
          real basisEval28AC#1 = RMul(coeff281B,prod2819);
          real basisEval28AD#2 = RMul(coeff281B,prod2824);
          real basisEval28AE#1 = RMul(coeff282E,prod2828);
          real basisEval28AF#2 = RMul(coeff280E,prod2830);
          real basisEval28B0#2 = RMul(coeff281B,prod2837);
          real basisEval28B1#1 = RMul(coeff282E,prod283A);
          real basisEval28B2#1 = RMul(coeff284A,prod283E);
          real basisEval28B3#1 = RMul(coeff282E,prod2844);
          real basisEval28B4#3 = RMul(coeff280E,prod2846);
          real basisEval28B5#2 = RMul(coeff280E,prod284C);
          real basisEval28B6#1 = RMul(coeff281B,prod2853);
          real basisEval28B7#2 = RMul(coeff282E,prod2856);
          real basisEval28B8#1 = RMul(coeff284A,prod2859);
          real basisEval28B9#1 = RMul(coeff2871,prod285D);
          real basisEval28BA#1 = RMul(coeff282E,prod2863);
          real basisEval28BB#1 = RMul(coeff284A,prod2865);
          real basisEval28BC#1 = RMul(coeff280E,prod2867);
          real basisEval28BD#3 = RMul(coeff280E,prod286D);
          real basisEval28BE#1 = RMul(coeff281B,prod286F);
          real basisEval28BF#2 = RMul(coeff280E,prod2873);
          real basisEval28C0#3 = RMul(one280F,prod281D);
          real basisEval28C1#1 = RMul(coeff287C,prod2824);
          real basisEval28C2#3 = RMul(one280F,prod2830);
          real basisEval28C3#2 = RMul(coeff281B,prod283A);
          real basisEval28C4#2 = RMul(coeff2879,prod2840);
          real basisEval28C5#2 = RMul(coeff2879,prod2844);
          real basisEval28C6#3 = RMul(coeff280E,prod2848);
          real basisEval28C7#3 = RMul(one280F,prod284C);
          real basisEval28C8#1 = RMul(coeff288E,prod2853);
          real basisEval28C9#1 = RMul(coeff2892,prod2856);
          real basisEval28CA#1 = RMul(coeff288E,prod2859);
          real basisEval28CB#2 = RMul(coeff287C,prod285F);
          real basisEval28CC#2 = RMul(coeff287C,prod2865);
          real basisEval28CD#1 = RMul(coeff287C,prod2869);
          real basisEval28CE#3 = RMul(coeff280E,prod286F);
          real basisEval28CF#3 = RMul(one280F,prod2873);
          real basisEval28D0#1 = RMul(coeff281B,prod2815);
          real basisEval28D1#1 = RMul(coeff282E,prod2821);
          real basisEval28D2#1 = RMul(coeff284A,prod2834);
          real basisEval28D3#1 = RMul(coeff282E,prod2837);
          real basisEval28D4#1 = RMul(coeff282E,prod2840);
          real basisEval28D5#1 = RMul(coeff2871,prod2850);
          real basisEval28D6#1 = RMul(coeff284A,prod2853);
          real basisEval28D7#1 = RMul(coeff281B,prod2859);
          real basisEval28D8#1 = RMul(coeff284A,prod285F);
          real basisEval28D9#1 = RMul(coeff282E,prod2861);
          real basisEval28DA#1 = RMul(coeff280E,prod286B);
          real basisEval28DB#1 = RMul(coeff281B,prod286D);
          tensor[84] intermediateCons28DC#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval281E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval2825,basisEval2829,basisEval282B,basisEval282D,basisEval2831,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval2838,basisEval283B,basisEval283F,basisEval2841,basisEval2843,basisEval2845,basisEval2847,basisEval2849,basisEval284D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval2854,basisEval2857,basisEval285A,basisEval285E,basisEval2860,basisEval2862,basisEval2864,basisEval2866,basisEval2868,basisEval286A,basisEval286C,basisEval286E,basisEval2870,basisEval2874];
          tensor[84] intermediateCons28DD#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2876,basisEval281A,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2878,basisEval2825,basisEval287A,basisEval280D,basisEval287B,basisEval287D,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval287F,basisEval2838,basisEval2880,basisEval2881,basisEval280D,basisEval2882,basisEval2883,basisEval2845,basisEval280D,basisEval2884,basisEval2885,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2887,basisEval2854,basisEval2888,basisEval2889,basisEval288B,basisEval280D,basisEval288C,basisEval288D,basisEval2864,basisEval288F,basisEval280D,basisEval2890,basisEval2891,basisEval2893,basisEval280D,basisEval2894,basisEval2895,basisEval280D,basisEval2896,basisEval280D];
          tensor[84] intermediateCons28DE#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval2897,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval2825,basisEval2899,basisEval280D,basisEval289A,basisEval289B,basisEval280D,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval289D,basisEval283B,basisEval289E,basisEval280D,basisEval2841,basisEval2883,basisEval289F,basisEval280D,basisEval28A0,basisEval28A1,basisEval280D,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28A3,basisEval2888,basisEval285A,basisEval28A4,basisEval280D,basisEval28A5,basisEval2862,basisEval28A6,basisEval28A7,basisEval280D,basisEval28A8,basisEval2891,basisEval28A9,basisEval280D,basisEval28AA,basisEval28AB,basisEval280D,basisEval2896,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28DF#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval28AC,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2822,basisEval28AD,basisEval28AE,basisEval280D,basisEval280D,basisEval287B,basisEval282D,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2835,basisEval28B0,basisEval28B1,basisEval28B2,basisEval280D,basisEval280D,basisEval2882,basisEval2843,basisEval28B3,basisEval280D,basisEval280D,basisEval28B4,basisEval2885,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2851,basisEval28B6,basisEval28B7,basisEval28B8,basisEval28B9,basisEval280D,basisEval280D,basisEval288C,basisEval2862,basisEval28BA,basisEval28BB,basisEval280D,basisEval280D,basisEval28BC,basisEval2891,basisEval286C,basisEval280D,basisEval280D,basisEval28BD,basisEval28BE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E0#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2816,basisEval281A,basisEval280D,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2898,basisEval28C1,basisEval287A,basisEval280D,basisEval280D,basisEval287B,basisEval289B,basisEval280D,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval289C,basisEval28B0,basisEval28C3,basisEval2881,basisEval280D,basisEval280D,basisEval28C4,basisEval2883,basisEval28C5,basisEval280D,basisEval280D,basisEval28B4,basisEval28C6,basisEval280D,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28A2,basisEval28C8,basisEval28C9,basisEval28CA,basisEval288B,basisEval280D,basisEval280D,basisEval28CB,basisEval2862,basisEval2864,basisEval28CC,basisEval280D,basisEval280D,basisEval2890,basisEval28CD,basisEval28A9,basisEval280D,basisEval280D,basisEval28BD,basisEval28CE,basisEval280D,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          tensor[84] intermediateCons28E1#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2812,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D0,basisEval281A,basisEval280D,basisEval280D,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D1,basisEval28AD,basisEval2829,basisEval280D,basisEval280D,basisEval282B,basisEval289B,basisEval280D,basisEval280D,basisEval28AF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D2,basisEval28D3,basisEval28C3,basisEval283F,basisEval280D,basisEval280D,basisEval28D4,basisEval2843,basisEval289F,basisEval280D,basisEval280D,basisEval28A0,basisEval28C6,basisEval280D,basisEval280D,basisEval28B5,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval28D5,basisEval28D6,basisEval28B7,basisEval28D7,basisEval285E,basisEval280D,basisEval280D,basisEval28D8,basisEval28D9,basisEval2864,basisEval28A7,basisEval280D,basisEval280D,basisEval2868,basisEval2891,basisEval28DA,basisEval280D,basisEval280D,basisEval28DB,basisEval28CE,basisEval280D,basisEval280D,basisEval28BF,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D];
          real vdot29C5#1 = VDot<84>(dofs26B6,intermediateCons28DC);
          real vdot29C7#2 = VDot<84>(dofs26B6,intermediateCons28DD);
          real vdot29C9#2 = VDot<84>(dofs26B6,intermediateCons28DE);
          real vdot29CE#1 = VDot<84>(dofs26B6,intermediateCons28DF);
          real vdot29D0#2 = VDot<84>(dofs26B6,intermediateCons28E0);
          real vdot29D7#1 = VDot<84>(dofs26B6,intermediateCons28E1);
          tensor[3,3] _t29C3#1 = <tensor[3,3]>[vdot29C5,vdot29C7,vdot29C9,vdot29C7,vdot29CE,vdot29D0,vdot29C9,vdot29D0,vdot29D7];
          real[3] _t29F0#1 = EigenVals3x3(_t29C3);
          real _t29F4#1 = Subscript<real[3]>(_t29F0,ilit236B);
          real basisEval2A11#1 = RMul(one280F,prod2824);
          real basisEval2A24#1 = RMul(one280F,prod2837);
          real basisEval2A27#1 = RMul(one280F,prod283A);
          real basisEval2A2F#3 = RMul(coeff280E,prod2842);
          real basisEval2A40#1 = RMul(one280F,prod2853);
          real basisEval2A43#1 = RMul(one280F,prod2856);
          real basisEval2A46#1 = RMul(one280F,prod2859);
          real basisEval2A4E#2 = RMul(coeff280E,prod2861);
          real basisEval2A50#2 = RMul(coeff280E,prod2863);
          real basisEval2A56#1 = RMul(coeff2879,prod2869);
          real prod52A61#1 = RMul(prod4284E,varAcc280C);
          real prod2A62#1 = RMul(one280F,prod52A61);
          real prod2A63#2 = RMul(one280F,prod2A62);
          real basisEval2A64#2 = RMul(one280F,prod2A63);
          real prod2A65#1 = RMul(varAcc280B,prod4284E);
          real prod2A66#3 = RMul(one280F,prod2A65);
          real basisEval2A67#1 = RMul(one280F,prod2A66);
          real prod2A68#1 = RMul(prod22826,prod32832);
          real prod2A69#3 = RMul(one280F,prod2A68);
          real basisEval2A6A#1 = RMul(one280F,prod2A69);
          real prod2A6B#1 = RMul(prod3283C,prod2281F);
          real prod2A6C#3 = RMul(one280F,prod2A6B);
          real basisEval2A6D#1 = RMul(one280F,prod2A6C);
          real prod2A6E#1 = RMul(prod4285B,varAcc280C);
          real prod2A6F#3 = RMul(one280F,prod2A6E);
          real basisEval2A70#1 = RMul(one280F,prod2A6F);
          real prod52A71#1 = RMul(prod4285B,varAcc280B);
          real prod2A72#1 = RMul(prod52A71,one280F);
          real prod2A73#2 = RMul(one280F,prod2A72);
          real basisEval2A74#2 = RMul(one280F,prod2A73);
          real prod2A75#3 = RMul(varAcc280A,prod284F);
          real basisEval2A76#1 = RMul(coeff280E,prod2A75);
          real prod2A77#2 = RMul(varAcc280A,prod2852);
          real basisEval2A78#2 = RMul(coeff280E,prod2A77);
          real prod2A79#2 = RMul(varAcc280A,prod2855);
          real basisEval2A7A#1 = RMul(coeff280E,prod2A79);
          real prod2A7B#2 = RMul(varAcc280A,prod2858);
          real basisEval2A7C#2 = RMul(coeff280E,prod2A7B);
          real prod2A7D#3 = RMul(varAcc280A,prod285C);
          real basisEval2A7E#1 = RMul(coeff280E,prod2A7D);
          real prod2A7F#3 = RMul(prod2282F,prod2833);
          real basisEval2A80#1 = RMul(coeff2879,prod2A7F);
          real prod2A81#2 = RMul(prod2282F,prod2836);
          real basisEval2A82#2 = RMul(coeff2879,prod2A81);
          real prod2A83#2 = RMul(prod2282F,prod2839);
          real basisEval2A84#2 = RMul(coeff2879,prod2A83);
          real prod2A85#3 = RMul(prod2282F,prod283D);
          real basisEval2A86#1 = RMul(coeff2879,prod2A85);
          real prod2A87#3 = RMul(prod3284B,prod2820);
          real basisEval2A88#1 = RMul(coeff287C,prod2A87);
          real prod2A89#2 = RMul(prod3284B,prod2823);
          real basisEval2A8A#1 = RMul(coeff287C,prod2A89);
          real prod2A8B#3 = RMul(prod3284B,prod2827);
          real basisEval2A8C#1 = RMul(coeff287C,prod2A8B);
          real prod2A8D#3 = RMul(prod42872,prod2814);
          real basisEval2A8E#1 = RMul(coeff288A,prod2A8D);
          real prod2A8F#3 = RMul(prod42872,prod2818);
          real basisEval2A90#1 = RMul(coeff288A,prod2A8F);
          real prod52A92#1 = RMul(prod42872,varAcc280A);
          real prod2A93#2 = RMul(prod52A92,prod2810);
          real basisEval2A94#1 = RMul(coeff281B,prod2A93);
          real basisEval2A99#1 = RMul(one280F,prod282A);
          real basisEval2A9E#1 = RMul(one280F,prod2840);
          real basisEval2AA0#1 = RMul(one280F,prod2846);
          real basisEval2AA7#1 = RMul(one280F,prod285F);
          real basisEval2AA8#1 = RMul(coeff2879,prod2863);
          real basisEval2AAA#1 = RMul(one280F,prod2867);
          real basisEval2AAB#2 = RMul(coeff280E,prod2869);
          real basisEval2AAC#1 = RMul(one280F,prod286D);
          real basisEval2AAF#1 = RMul(coeff280E,prod2A66);
          real basisEval2AB0#1 = RMul(coeff2879,prod2A69);
          real basisEval2AB1#1 = RMul(coeff287C,prod2A6C);
          real basisEval2AB2#1 = RMul(coeff288A,prod2A6F);
          real basisEval2AB3#1 = RMul(coeff281B,prod2A73);
          real basisEval2AB4#1 = RMul(one280F,prod2A75);
          real basisEval2AB5#2 = RMul(coeff2879,prod2A79);
          real basisEval2AB6#1 = RMul(coeff287C,prod2A7B);
          real basisEval2AB7#1 = RMul(coeff288A,prod2A7D);
          real basisEval2AB8#1 = RMul(one280F,prod2A7F);
          real basisEval2AB9#1 = RMul(coeff280E,prod2A81);
          real basisEval2ABA#1 = RMul(coeff287C,prod2A85);
          real basisEval2ABB#1 = RMul(one280F,prod2A87);
          real basisEval2ABC#2 = RMul(coeff280E,prod2A89);
          real basisEval2ABD#1 = RMul(coeff2879,prod2A8B);
          real basisEval2ABE#1 = RMul(one280F,prod2A8D);
          real basisEval2ABF#1 = RMul(coeff280E,prod2A8F);
          real basisEval2AC0#2 = RMul(one280F,prod2A93);
          real basisEval2AC3#1 = RMul(one280F,prod282C);
          real basisEval2AC8#1 = RMul(one280F,prod2844);
          real basisEval2ACA#1 = RMul(one280F,prod2848);
          real basisEval2ACF#1 = RMul(coeff2879,prod2861);
          real basisEval2AD0#1 = RMul(one280F,prod2865);
          real basisEval2AD1#1 = RMul(one280F,prod286B);
          real basisEval2AD3#1 = RMul(one280F,prod286F);
          real basisEval2AD4#1 = RMul(coeff281B,prod2A63);
          real basisEval2AD5#1 = RMul(coeff288A,prod2A66);
          real basisEval2AD6#1 = RMul(coeff287C,prod2A69);
          real basisEval2AD7#1 = RMul(coeff2879,prod2A6C);
          real basisEval2AD8#1 = RMul(coeff280E,prod2A6F);
          real basisEval2AD9#1 = RMul(coeff288A,prod2A75);
          real basisEval2ADA#1 = RMul(coeff287C,prod2A77);
          real basisEval2ADB#1 = RMul(one280F,prod2A7D);
          real basisEval2ADC#1 = RMul(coeff287C,prod2A7F);
          real basisEval2ADD#1 = RMul(coeff280E,prod2A83);
          real basisEval2ADE#1 = RMul(one280F,prod2A85);
          real basisEval2ADF#1 = RMul(coeff2879,prod2A87);
          real basisEval2AE0#1 = RMul(one280F,prod2A8B);
          real basisEval2AE1#1 = RMul(coeff280E,prod2A8D);
          real basisEval2AE2#1 = RMul(one280F,prod2A8F);
          tensor[84] intermediateCons2AE3#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval280D,basisEval2876,basisEval2897,basisEval2877,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2878,basisEval2A11,basisEval2899,basisEval287B,basisEval289B,basisEval287E,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval287F,basisEval2A24,basisEval2A27,basisEval289E,basisEval2882,basisEval2A2F,basisEval289F,basisEval2884,basisEval28A1,basisEval2886,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2887,basisEval2A40,basisEval2A43,basisEval2A46,basisEval28A4,basisEval288C,basisEval2A4E,basisEval2A50,basisEval28A7,basisEval2890,basisEval2A56,basisEval28A9,basisEval2894,basisEval28AB,basisEval2896,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval280D,basisEval2A64,basisEval2A67,basisEval2A6A,basisEval2A6D,basisEval2A70,basisEval2A74,basisEval2A76,basisEval2A78,basisEval2A7A,basisEval2A7C,basisEval2A7E,basisEval2A80,basisEval2A82,basisEval2A84,basisEval2A86,basisEval2A88,basisEval2A8A,basisEval2A8C,basisEval2A8E,basisEval2A90,basisEval2A94];
          tensor[84] intermediateCons2AE4#1 = <tensor[84]>[basisEval280D,basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval2876,basisEval281A,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval2878,basisEval2825,basisEval287A,basisEval280D,basisEval2A99,basisEval289B,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval287F,basisEval2838,basisEval2880,basisEval2881,basisEval280D,basisEval2A9E,basisEval2A2F,basisEval28C5,basisEval280D,basisEval2AA0,basisEval28C6,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval2887,basisEval2854,basisEval2888,basisEval2889,basisEval288B,basisEval280D,basisEval2AA7,basisEval2A4E,basisEval2AA8,basisEval28CC,basisEval280D,basisEval2AAA,basisEval2AAB,basisEval28A9,basisEval280D,basisEval2AAC,basisEval28CE,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval2A64,basisEval2AAF,basisEval2AB0,basisEval2AB1,basisEval2AB2,basisEval2AB3,basisEval280D,basisEval2AB4,basisEval2A78,basisEval2AB5,basisEval2AB6,basisEval2AB7,basisEval280D,basisEval2AB8,basisEval2AB9,basisEval2A84,basisEval2ABA,basisEval280D,basisEval2ABB,basisEval2ABC,basisEval2ABD,basisEval280D,basisEval2ABE,basisEval2ABF,basisEval280D,basisEval2AC0,basisEval280D];
          tensor[84] intermediateCons2AE5#1 = <tensor[84]>[basisEval280D,basisEval2875,basisEval280D,basisEval280D,basisEval2816,basisEval2897,basisEval280D,basisEval28C0,basisEval280D,basisEval280D,basisEval2898,basisEval2825,basisEval2899,basisEval280D,basisEval287B,basisEval2AC3,basisEval280D,basisEval28C2,basisEval280D,basisEval280D,basisEval289C,basisEval289D,basisEval283B,basisEval289E,basisEval280D,basisEval28C4,basisEval2A2F,basisEval2AC8,basisEval280D,basisEval28B4,basisEval2ACA,basisEval280D,basisEval28C7,basisEval280D,basisEval280D,basisEval28A2,basisEval28A3,basisEval2888,basisEval285A,basisEval28A4,basisEval280D,basisEval28CB,basisEval2ACF,basisEval2A50,basisEval2AD0,basisEval280D,basisEval2890,basisEval2AAB,basisEval2AD1,basisEval280D,basisEval28BD,basisEval2AD3,basisEval280D,basisEval28CF,basisEval280D,basisEval280D,basisEval2AD4,basisEval2AD5,basisEval2AD6,basisEval2AD7,basisEval2AD8,basisEval2A74,basisEval280D,basisEval2AD9,basisEval2ADA,basisEval2AB5,basisEval2A7C,basisEval2ADB,basisEval280D,basisEval2ADC,basisEval2A82,basisEval2ADD,basisEval2ADE,basisEval280D,basisEval2ADF,basisEval2ABC,basisEval2AE0,basisEval280D,basisEval2AE1,basisEval2AE2,basisEval280D,basisEval2AC0,basisEval280D,basisEval280D];
          real vdot2BDA#1 = VDot<84>(dofs26B6,intermediateCons2AE3);
          real vdot2BDC#1 = VDot<84>(dofs26B6,intermediateCons2AE4);
          real vdot2BDE#1 = VDot<84>(dofs26B6,intermediateCons2AE5);
          tensor[3] probe_l_62BD8#2 = <tensor[3]>[vdot2BDA,vdot2BDC,vdot2BDE];
          real op1_e3_l_82BE7#1 = VDot<3>(probe_l_62BD8,probe_l_62BD8);
          real op1_e3_l_92BEA#1 = Sqrt(op1_e3_l_82BE7);
          real op1_e3_l_102BED#1 = RNeg(_t29F4);
          real op1_e3_l_112BF0#1 = RAdd(fBias2329,op1_e3_l_92BEA);
          real _t2BF3#1 = RDiv(op1_e3_l_102BED,op1_e3_l_112BF0);
          bool _t2BF6#1 = GT<real>(_t2BF3,fStrTh2325);
          if _t2BF6 then goto ASSIGN3ACE else goto ASSIGN389A
        ASSIGN3ACE:  preds = [COND2BF8]
          bool _t2BFB#1 = GTE<real>(one280F,fMaskTh2327);
          if _t2BFB then goto ASSIGN2BFF else goto ASSIGN3899
        ASSIGN2BFF:  preds = [COND2BFD]
          bool _t2BFE#1 = true;
          goto JOIN2C02
        JOIN2C02:  preds = [ASSIGN2BFF,ASSIGN3899]
          bool _t2C00#1 = phi(_t2BFE,_t2C01)
          goto JOIN2C05
        JOIN2C05:  preds = [JOIN2C02,ASSIGN389A]
          bool _t2C03#1 = phi(_t2C00,_t2C04)
          goto JOIN2C08
        JOIN2C08:  preds = [JOIN2C05,ASSIGN389B]
          bool _t2C06#1 = phi(_t2C03,_t2C07)
          bool _t2C09#1 = BNot(_t2C06);
          if _t2C09 then goto SAVE2C0C else goto JOIN2C0E
        SAVE2C0C:  preds = [COND2C0B]
          self.rayN = rayN234F;
          active
          goto JOIN2C0E
        JOIN2C0E:  preds = [*ACTIVE2C0D,COND2C0B]
          int ilit2C10#1 = 84;
          int mulRes2C11#84 = IMul(_t2313,ilit2C10);
          int idx2C14#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,mulRes2C11);
          int ilit2C15#93 = 1;
          int addRes2C16#1 = IAdd(mulRes2C11,ilit2C15);
          int idx2C17#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C16);
          int ilit2C18#7 = 2;
          int addRes2C19#1 = IAdd(mulRes2C11,ilit2C18);
          int idx2C1A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C19);
          int ilit2C1B#5 = 3;
          int addRes2C1C#1 = IAdd(mulRes2C11,ilit2C1B);
          int idx2C1D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1C);
          int ilit2C1E#1 = 4;
          int addRes2C1F#1 = IAdd(mulRes2C11,ilit2C1E);
          int idx2C20#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C1F);
          int ilit2C21#1 = 5;
          int addRes2C22#1 = IAdd(mulRes2C11,ilit2C21);
          int idx2C23#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C22);
          int ilit2C24#1 = 6;
          int addRes2C25#1 = IAdd(mulRes2C11,ilit2C24);
          int idx2C26#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C25);
          int ilit2C27#1 = 7;
          int addRes2C28#1 = IAdd(mulRes2C11,ilit2C27);
          int idx2C29#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C28);
          int ilit2C2A#1 = 8;
          int addRes2C2B#1 = IAdd(mulRes2C11,ilit2C2A);
          int idx2C2C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2B);
          int ilit2C2D#1 = 9;
          int addRes2C2E#1 = IAdd(mulRes2C11,ilit2C2D);
          int idx2C2F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C2E);
          int ilit2C30#1 = 10;
          int addRes2C31#1 = IAdd(mulRes2C11,ilit2C30);
          int idx2C32#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C31);
          int ilit2C33#1 = 11;
          int addRes2C34#1 = IAdd(mulRes2C11,ilit2C33);
          int idx2C35#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C34);
          int ilit2C36#1 = 12;
          int addRes2C37#1 = IAdd(mulRes2C11,ilit2C36);
          int idx2C38#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C37);
          int ilit2C39#1 = 13;
          int addRes2C3A#1 = IAdd(mulRes2C11,ilit2C39);
          int idx2C3B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3A);
          int ilit2C3C#1 = 14;
          int addRes2C3D#1 = IAdd(mulRes2C11,ilit2C3C);
          int idx2C3E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C3D);
          int ilit2C3F#1 = 15;
          int addRes2C40#1 = IAdd(mulRes2C11,ilit2C3F);
          int idx2C41#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C40);
          int ilit2C42#1 = 16;
          int addRes2C43#1 = IAdd(mulRes2C11,ilit2C42);
          int idx2C44#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C43);
          int ilit2C45#1 = 17;
          int addRes2C46#1 = IAdd(mulRes2C11,ilit2C45);
          int idx2C47#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C46);
          int ilit2C48#1 = 18;
          int addRes2C49#1 = IAdd(mulRes2C11,ilit2C48);
          int idx2C4A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C49);
          int ilit2C4B#1 = 19;
          int addRes2C4C#1 = IAdd(mulRes2C11,ilit2C4B);
          int idx2C4D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4C);
          int ilit2C4E#1 = 20;
          int addRes2C4F#1 = IAdd(mulRes2C11,ilit2C4E);
          int idx2C50#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C4F);
          int ilit2C51#1 = 21;
          int addRes2C52#1 = IAdd(mulRes2C11,ilit2C51);
          int idx2C53#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C52);
          int ilit2C54#1 = 22;
          int addRes2C55#1 = IAdd(mulRes2C11,ilit2C54);
          int idx2C56#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C55);
          int ilit2C57#1 = 23;
          int addRes2C58#1 = IAdd(mulRes2C11,ilit2C57);
          int idx2C59#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C58);
          int ilit2C5A#1 = 24;
          int addRes2C5B#1 = IAdd(mulRes2C11,ilit2C5A);
          int idx2C5C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5B);
          int ilit2C5D#1 = 25;
          int addRes2C5E#1 = IAdd(mulRes2C11,ilit2C5D);
          int idx2C5F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C5E);
          int ilit2C60#1 = 26;
          int addRes2C61#1 = IAdd(mulRes2C11,ilit2C60);
          int idx2C62#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C61);
          int ilit2C63#1 = 27;
          int addRes2C64#1 = IAdd(mulRes2C11,ilit2C63);
          int idx2C65#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C64);
          int ilit2C66#1 = 28;
          int addRes2C67#1 = IAdd(mulRes2C11,ilit2C66);
          int idx2C68#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C67);
          int ilit2C69#1 = 29;
          int addRes2C6A#1 = IAdd(mulRes2C11,ilit2C69);
          int idx2C6B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6A);
          int ilit2C6C#1 = 30;
          int addRes2C6D#1 = IAdd(mulRes2C11,ilit2C6C);
          int idx2C6E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C6D);
          int ilit2C6F#1 = 31;
          int addRes2C70#1 = IAdd(mulRes2C11,ilit2C6F);
          int idx2C71#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C70);
          int ilit2C72#1 = 32;
          int addRes2C73#1 = IAdd(mulRes2C11,ilit2C72);
          int idx2C74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C73);
          int ilit2C75#1 = 33;
          int addRes2C76#1 = IAdd(mulRes2C11,ilit2C75);
          int idx2C77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C76);
          int ilit2C78#1 = 34;
          int addRes2C79#1 = IAdd(mulRes2C11,ilit2C78);
          int idx2C7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C79);
          int ilit2C7B#1 = 35;
          int addRes2C7C#1 = IAdd(mulRes2C11,ilit2C7B);
          int idx2C7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7C);
          int ilit2C7E#1 = 36;
          int addRes2C7F#1 = IAdd(mulRes2C11,ilit2C7E);
          int idx2C80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C7F);
          int ilit2C81#1 = 37;
          int addRes2C82#1 = IAdd(mulRes2C11,ilit2C81);
          int idx2C83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C82);
          int ilit2C84#1 = 38;
          int addRes2C85#1 = IAdd(mulRes2C11,ilit2C84);
          int idx2C86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C85);
          int ilit2C87#1 = 39;
          int addRes2C88#1 = IAdd(mulRes2C11,ilit2C87);
          int idx2C89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C88);
          int ilit2C8A#1 = 40;
          int addRes2C8B#1 = IAdd(mulRes2C11,ilit2C8A);
          int idx2C8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8B);
          int ilit2C8D#1 = 41;
          int addRes2C8E#1 = IAdd(mulRes2C11,ilit2C8D);
          int idx2C8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C8E);
          int ilit2C90#1 = 42;
          int addRes2C91#1 = IAdd(mulRes2C11,ilit2C90);
          int idx2C92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C91);
          int ilit2C93#1 = 43;
          int addRes2C94#1 = IAdd(mulRes2C11,ilit2C93);
          int idx2C95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C94);
          int ilit2C96#1 = 44;
          int addRes2C97#1 = IAdd(mulRes2C11,ilit2C96);
          int idx2C98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C97);
          int ilit2C99#1 = 45;
          int addRes2C9A#1 = IAdd(mulRes2C11,ilit2C99);
          int idx2C9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9A);
          int ilit2C9C#1 = 46;
          int addRes2C9D#1 = IAdd(mulRes2C11,ilit2C9C);
          int idx2C9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2C9D);
          int ilit2C9F#1 = 47;
          int addRes2CA0#1 = IAdd(mulRes2C11,ilit2C9F);
          int idx2CA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA0);
          int ilit2CA2#1 = 48;
          int addRes2CA3#1 = IAdd(mulRes2C11,ilit2CA2);
          int idx2CA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA3);
          int ilit2CA5#1 = 49;
          int addRes2CA6#1 = IAdd(mulRes2C11,ilit2CA5);
          int idx2CA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA6);
          int ilit2CA8#1 = 50;
          int addRes2CA9#1 = IAdd(mulRes2C11,ilit2CA8);
          int idx2CAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CA9);
          int ilit2CAB#1 = 51;
          int addRes2CAC#1 = IAdd(mulRes2C11,ilit2CAB);
          int idx2CAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAC);
          int ilit2CAE#1 = 52;
          int addRes2CAF#1 = IAdd(mulRes2C11,ilit2CAE);
          int idx2CB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CAF);
          int ilit2CB1#1 = 53;
          int addRes2CB2#1 = IAdd(mulRes2C11,ilit2CB1);
          int idx2CB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB2);
          int ilit2CB4#1 = 54;
          int addRes2CB5#1 = IAdd(mulRes2C11,ilit2CB4);
          int idx2CB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB5);
          int ilit2CB7#1 = 55;
          int addRes2CB8#1 = IAdd(mulRes2C11,ilit2CB7);
          int idx2CB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CB8);
          int ilit2CBA#1 = 56;
          int addRes2CBB#1 = IAdd(mulRes2C11,ilit2CBA);
          int idx2CBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBB);
          int ilit2CBD#1 = 57;
          int addRes2CBE#1 = IAdd(mulRes2C11,ilit2CBD);
          int idx2CBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CBE);
          int ilit2CC0#1 = 58;
          int addRes2CC1#1 = IAdd(mulRes2C11,ilit2CC0);
          int idx2CC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC1);
          int ilit2CC3#1 = 59;
          int addRes2CC4#1 = IAdd(mulRes2C11,ilit2CC3);
          int idx2CC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC4);
          int ilit2CC6#1 = 60;
          int addRes2CC7#1 = IAdd(mulRes2C11,ilit2CC6);
          int idx2CC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CC7);
          int ilit2CC9#1 = 61;
          int addRes2CCA#1 = IAdd(mulRes2C11,ilit2CC9);
          int idx2CCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCA);
          int ilit2CCC#1 = 62;
          int addRes2CCD#1 = IAdd(mulRes2C11,ilit2CCC);
          int idx2CCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CCD);
          int ilit2CCF#1 = 63;
          int addRes2CD0#1 = IAdd(mulRes2C11,ilit2CCF);
          int idx2CD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD0);
          int ilit2CD2#1 = 64;
          int addRes2CD3#1 = IAdd(mulRes2C11,ilit2CD2);
          int idx2CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD3);
          int ilit2CD5#1 = 65;
          int addRes2CD6#1 = IAdd(mulRes2C11,ilit2CD5);
          int idx2CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD6);
          int ilit2CD8#1 = 66;
          int addRes2CD9#1 = IAdd(mulRes2C11,ilit2CD8);
          int idx2CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CD9);
          int ilit2CDB#1 = 67;
          int addRes2CDC#1 = IAdd(mulRes2C11,ilit2CDB);
          int idx2CDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDC);
          int ilit2CDE#1 = 68;
          int addRes2CDF#1 = IAdd(mulRes2C11,ilit2CDE);
          int idx2CE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CDF);
          int ilit2CE1#1 = 69;
          int addRes2CE2#1 = IAdd(mulRes2C11,ilit2CE1);
          int idx2CE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE2);
          int ilit2CE4#1 = 70;
          int addRes2CE5#1 = IAdd(mulRes2C11,ilit2CE4);
          int idx2CE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE5);
          int ilit2CE7#1 = 71;
          int addRes2CE8#1 = IAdd(mulRes2C11,ilit2CE7);
          int idx2CE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CE8);
          int ilit2CEA#1 = 72;
          int addRes2CEB#1 = IAdd(mulRes2C11,ilit2CEA);
          int idx2CEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEB);
          int ilit2CED#1 = 73;
          int addRes2CEE#1 = IAdd(mulRes2C11,ilit2CED);
          int idx2CEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CEE);
          int ilit2CF0#1 = 74;
          int addRes2CF1#1 = IAdd(mulRes2C11,ilit2CF0);
          int idx2CF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF1);
          int ilit2CF3#1 = 75;
          int addRes2CF4#1 = IAdd(mulRes2C11,ilit2CF3);
          int idx2CF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF4);
          int ilit2CF6#1 = 76;
          int addRes2CF7#1 = IAdd(mulRes2C11,ilit2CF6);
          int idx2CF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CF7);
          int ilit2CF9#1 = 77;
          int addRes2CFA#1 = IAdd(mulRes2C11,ilit2CF9);
          int idx2CFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFA);
          int ilit2CFC#1 = 78;
          int addRes2CFD#1 = IAdd(mulRes2C11,ilit2CFC);
          int idx2CFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2CFD);
          int ilit2CFF#1 = 79;
          int addRes2D00#1 = IAdd(mulRes2C11,ilit2CFF);
          int idx2D01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D00);
          int ilit2D02#1 = 80;
          int addRes2D03#1 = IAdd(mulRes2C11,ilit2D02);
          int idx2D04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D03);
          int ilit2D05#1 = 81;
          int addRes2D06#1 = IAdd(mulRes2C11,ilit2D05);
          int idx2D07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D06);
          int ilit2D08#1 = 82;
          int addRes2D09#1 = IAdd(mulRes2C11,ilit2D08);
          int idx2D0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D09);
          int ilit2D0B#1 = 83;
          int addRes2D0C#1 = IAdd(mulRes2C11,ilit2D0B);
          int idx2D0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2315,addRes2D0C);
          int mulRes2E13#1 = IMul(ilit2C15,idx2C14);
          int mulRes2E15#1 = IMul(ilit2C15,idx2C17);
          int mulRes2E18#1 = IMul(ilit2C15,idx2C1A);
          int mulRes2E1B#1 = IMul(ilit2C15,idx2C1D);
          int mulRes2E1E#1 = IMul(ilit2C15,idx2C20);
          int mulRes2E21#1 = IMul(ilit2C15,idx2C23);
          int mulRes2E24#1 = IMul(ilit2C15,idx2C26);
          int mulRes2E27#1 = IMul(ilit2C15,idx2C29);
          int mulRes2E2A#1 = IMul(ilit2C15,idx2C2C);
          int mulRes2E2D#1 = IMul(ilit2C15,idx2C2F);
          int mulRes2E30#1 = IMul(ilit2C15,idx2C32);
          int mulRes2E33#1 = IMul(ilit2C15,idx2C35);
          int mulRes2E36#1 = IMul(ilit2C15,idx2C38);
          int mulRes2E39#1 = IMul(ilit2C15,idx2C3B);
          int mulRes2E3C#1 = IMul(ilit2C15,idx2C3E);
          int mulRes2E3F#1 = IMul(ilit2C15,idx2C41);
          int mulRes2E42#1 = IMul(ilit2C15,idx2C44);
          int mulRes2E45#1 = IMul(ilit2C15,idx2C47);
          int mulRes2E48#1 = IMul(ilit2C15,idx2C4A);
          int mulRes2E4B#1 = IMul(ilit2C15,idx2C4D);
          int mulRes2E4E#1 = IMul(ilit2C15,idx2C50);
          int mulRes2E51#1 = IMul(ilit2C15,idx2C53);
          int mulRes2E54#1 = IMul(ilit2C15,idx2C56);
          int mulRes2E57#1 = IMul(ilit2C15,idx2C59);
          int mulRes2E5A#1 = IMul(ilit2C15,idx2C5C);
          int mulRes2E5D#1 = IMul(ilit2C15,idx2C5F);
          int mulRes2E60#1 = IMul(ilit2C15,idx2C62);
          int mulRes2E63#1 = IMul(ilit2C15,idx2C65);
          int mulRes2E66#1 = IMul(ilit2C15,idx2C68);
          int mulRes2E69#1 = IMul(ilit2C15,idx2C6B);
          int mulRes2E6C#1 = IMul(ilit2C15,idx2C6E);
          int mulRes2E6F#1 = IMul(ilit2C15,idx2C71);
          int mulRes2E72#1 = IMul(ilit2C15,idx2C74);
          int mulRes2E75#1 = IMul(ilit2C15,idx2C77);
          int mulRes2E78#1 = IMul(ilit2C15,idx2C7A);
          int mulRes2E7B#1 = IMul(ilit2C15,idx2C7D);
          int mulRes2E7E#1 = IMul(ilit2C15,idx2C80);
          int mulRes2E81#1 = IMul(ilit2C15,idx2C83);
          int mulRes2E84#1 = IMul(ilit2C15,idx2C86);
          int mulRes2E87#1 = IMul(ilit2C15,idx2C89);
          int mulRes2E8A#1 = IMul(ilit2C15,idx2C8C);
          int mulRes2E8D#1 = IMul(ilit2C15,idx2C8F);
          int mulRes2E90#1 = IMul(ilit2C15,idx2C92);
          int mulRes2E93#1 = IMul(ilit2C15,idx2C95);
          int mulRes2E96#1 = IMul(ilit2C15,idx2C98);
          int mulRes2E99#1 = IMul(ilit2C15,idx2C9B);
          int mulRes2E9C#1 = IMul(ilit2C15,idx2C9E);
          int mulRes2E9F#1 = IMul(ilit2C15,idx2CA1);
          int mulRes2EA2#1 = IMul(ilit2C15,idx2CA4);
          int mulRes2EA5#1 = IMul(ilit2C15,idx2CA7);
          int mulRes2EA8#1 = IMul(ilit2C15,idx2CAA);
          int mulRes2EAB#1 = IMul(ilit2C15,idx2CAD);
          int mulRes2EAE#1 = IMul(ilit2C15,idx2CB0);
          int mulRes2EB1#1 = IMul(ilit2C15,idx2CB3);
          int mulRes2EB4#1 = IMul(ilit2C15,idx2CB6);
          int mulRes2EB7#1 = IMul(ilit2C15,idx2CB9);
          int mulRes2EBA#1 = IMul(ilit2C15,idx2CBC);
          int mulRes2EBD#1 = IMul(ilit2C15,idx2CBF);
          int mulRes2EC0#1 = IMul(ilit2C15,idx2CC2);
          int mulRes2EC3#1 = IMul(ilit2C15,idx2CC5);
          int mulRes2EC6#1 = IMul(ilit2C15,idx2CC8);
          int mulRes2EC9#1 = IMul(ilit2C15,idx2CCB);
          int mulRes2ECC#1 = IMul(ilit2C15,idx2CCE);
          int mulRes2ECF#1 = IMul(ilit2C15,idx2CD1);
          int mulRes2ED2#1 = IMul(ilit2C15,idx2CD4);
          int mulRes2ED5#1 = IMul(ilit2C15,idx2CD7);
          int mulRes2ED8#1 = IMul(ilit2C15,idx2CDA);
          int mulRes2EDB#1 = IMul(ilit2C15,idx2CDD);
          int mulRes2EDE#1 = IMul(ilit2C15,idx2CE0);
          int mulRes2EE1#1 = IMul(ilit2C15,idx2CE3);
          int mulRes2EE4#1 = IMul(ilit2C15,idx2CE6);
          int mulRes2EE7#1 = IMul(ilit2C15,idx2CE9);
          int mulRes2EEA#1 = IMul(ilit2C15,idx2CEC);
          int mulRes2EED#1 = IMul(ilit2C15,idx2CEF);
          int mulRes2EF0#1 = IMul(ilit2C15,idx2CF2);
          int mulRes2EF3#1 = IMul(ilit2C15,idx2CF5);
          int mulRes2EF6#1 = IMul(ilit2C15,idx2CF8);
          int mulRes2EF9#1 = IMul(ilit2C15,idx2CFB);
          int mulRes2EFC#1 = IMul(ilit2C15,idx2CFE);
          int mulRes2EFF#1 = IMul(ilit2C15,idx2D01);
          int mulRes2F02#1 = IMul(ilit2C15,idx2D04);
          int mulRes2F05#1 = IMul(ilit2C15,idx2D07);
          int mulRes2F08#1 = IMul(ilit2C15,idx2D0A);
          int mulRes2F0B#1 = IMul(ilit2C15,idx2D0D);
          real dof2F0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E13);
          real dof2F0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E15);
          real dof2F0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E18);
          real dof2F0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1B);
          real dof2F10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E1E);
          real dof2F11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E21);
          real dof2F12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E24);
          real dof2F13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E27);
          real dof2F14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2A);
          real dof2F15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E2D);
          real dof2F16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E30);
          real dof2F17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E33);
          real dof2F18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E36);
          real dof2F19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E39);
          real dof2F1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3C);
          real dof2F1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E3F);
          real dof2F1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E42);
          real dof2F1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E45);
          real dof2F1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E48);
          real dof2F1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4B);
          real dof2F20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E4E);
          real dof2F21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E51);
          real dof2F22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E54);
          real dof2F23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E57);
          real dof2F24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5A);
          real dof2F25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E5D);
          real dof2F26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E60);
          real dof2F27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E63);
          real dof2F28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E66);
          real dof2F29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E69);
          real dof2F2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6C);
          real dof2F2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E6F);
          real dof2F2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E72);
          real dof2F2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E75);
          real dof2F2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E78);
          real dof2F2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7B);
          real dof2F30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E7E);
          real dof2F31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E81);
          real dof2F32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E84);
          real dof2F33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E87);
          real dof2F34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8A);
          real dof2F35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E8D);
          real dof2F36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E90);
          real dof2F37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E93);
          real dof2F38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E96);
          real dof2F39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E99);
          real dof2F3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9C);
          real dof2F3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2E9F);
          real dof2F3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA2);
          real dof2F3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA5);
          real dof2F3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EA8);
          real dof2F3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAB);
          real dof2F40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EAE);
          real dof2F41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB1);
          real dof2F42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB4);
          real dof2F43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EB7);
          real dof2F44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBA);
          real dof2F45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EBD);
          real dof2F46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC0);
          real dof2F47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC3);
          real dof2F48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC6);
          real dof2F49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EC9);
          real dof2F4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECC);
          real dof2F4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ECF);
          real dof2F4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED2);
          real dof2F4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED5);
          real dof2F4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2ED8);
          real dof2F4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDB);
          real dof2F50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EDE);
          real dof2F51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE1);
          real dof2F52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE4);
          real dof2F53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EE7);
          real dof2F54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EEA);
          real dof2F55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EED);
          real dof2F56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF0);
          real dof2F57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF3);
          real dof2F58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF6);
          real dof2F59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EF9);
          real dof2F5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFC);
          real dof2F5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2EFF);
          real dof2F5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F02);
          real dof2F5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F05);
          real dof2F5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F08);
          real dof2F5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2317,mulRes2F0B);
          tensor[84] dofs2F60#10 = <tensor[84]>[dof2F0C,dof2F0D,dof2F0E,dof2F0F,dof2F10,dof2F11,dof2F12,dof2F13,dof2F14,dof2F15,dof2F16,dof2F17,dof2F18,dof2F19,dof2F1A,dof2F1B,dof2F1C,dof2F1D,dof2F1E,dof2F1F,dof2F20,dof2F21,dof2F22,dof2F23,dof2F24,dof2F25,dof2F26,dof2F27,dof2F28,dof2F29,dof2F2A,dof2F2B,dof2F2C,dof2F2D,dof2F2E,dof2F2F,dof2F30,dof2F31,dof2F32,dof2F33,dof2F34,dof2F35,dof2F36,dof2F37,dof2F38,dof2F39,dof2F3A,dof2F3B,dof2F3C,dof2F3D,dof2F3E,dof2F3F,dof2F40,dof2F41,dof2F42,dof2F43,dof2F44,dof2F45,dof2F46,dof2F47,dof2F48,dof2F49,dof2F4A,dof2F4B,dof2F4C,dof2F4D,dof2F4E,dof2F4F,dof2F50,dof2F51,dof2F52,dof2F53,dof2F54,dof2F55,dof2F56,dof2F57,dof2F58,dof2F59,dof2F5A,dof2F5B,dof2F5C,dof2F5D,dof2F5E,dof2F5F];
          real varAcc30B4#20 = VIndex<3,0>(pos235B);
          real varAcc30B5#10 = VIndex<3,1>(pos235B);
          real varAcc30B6#10 = VIndex<3,2>(pos235B);
          real basisEval30B7#385 = 0.e0;
          real coeff30B8#47 = 0.2e1;
          real one30B9#218 = 0.1e1;
          real prod30BA#12 = RMul(one30B9,one30B9);
          real prod30BB#2 = RMul(one30B9,prod30BA);
          real basisEval30BC#3 = RMul(coeff30B8,prod30BB);
          real prod30BE#5 = RMul(one30B9,varAcc30B6);
          real prod30BF#3 = RMul(one30B9,prod30BE);
          real basisEval30C0#5 = RMul(coeff30B8,prod30BF);
          real prod30C2#5 = RMul(varAcc30B5,one30B9);
          real prod30C3#3 = RMul(one30B9,prod30C2);
          real basisEval30C4#5 = RMul(coeff30B8,prod30C3);
          real coeff30C5#25 = 0.6e1;
          real prod30C7#3 = RMul(varAcc30B4,prod30BA);
          real basisEval30C8#1 = RMul(coeff30C5,prod30C7);
          real prod230C9#5 = RMul(varAcc30B6,varAcc30B6);
          real prod30CA#4 = RMul(one30B9,prod230C9);
          real prod30CB#4 = RMul(one30B9,prod30CA);
          real basisEval30CC#2 = RMul(coeff30B8,prod30CB);
          real prod30CD#4 = RMul(varAcc30B5,varAcc30B6);
          real prod30CE#4 = RMul(one30B9,prod30CD);
          real basisEval30CF#5 = RMul(coeff30B8,prod30CE);
          real prod230D0#5 = RMul(varAcc30B5,varAcc30B5);
          real prod30D1#4 = RMul(prod230D0,one30B9);
          real prod30D2#4 = RMul(one30B9,prod30D1);
          real basisEval30D3#2 = RMul(coeff30B8,prod30D2);
          real prod30D4#4 = RMul(varAcc30B4,prod30BE);
          real basisEval30D5#2 = RMul(coeff30C5,prod30D4);
          real prod30D6#4 = RMul(varAcc30B4,prod30C2);
          real basisEval30D7#2 = RMul(coeff30C5,prod30D6);
          real coeff30D8#15 = 0.12e2;
          real prod230D9#11 = RMul(varAcc30B4,varAcc30B4);
          real prod30DA#4 = RMul(prod230D9,prod30BA);
          real basisEval30DB#1 = RMul(coeff30D8,prod30DA);
          real prod330DC#4 = RMul(prod230C9,varAcc30B6);
          real prod30DD#3 = RMul(one30B9,prod330DC);
          real prod30DE#4 = RMul(one30B9,prod30DD);
          real basisEval30DF#2 = RMul(coeff30B8,prod30DE);
          real prod30E0#3 = RMul(varAcc30B5,prod230C9);
          real prod30E1#5 = RMul(one30B9,prod30E0);
          real basisEval30E2#3 = RMul(coeff30B8,prod30E1);
          real prod30E3#3 = RMul(prod230D0,varAcc30B6);
          real prod30E4#5 = RMul(one30B9,prod30E3);
          real basisEval30E5#3 = RMul(coeff30B8,prod30E4);
          real prod330E6#4 = RMul(prod230D0,varAcc30B5);
          real prod30E7#3 = RMul(prod330E6,one30B9);
          real prod30E8#4 = RMul(one30B9,prod30E7);
          real basisEval30E9#2 = RMul(coeff30B8,prod30E8);
          real prod30EA#5 = RMul(varAcc30B4,prod30CA);
          real basisEval30EB#2 = RMul(coeff30C5,prod30EA);
          real prod30EC#3 = RMul(varAcc30B4,prod30CD);
          real basisEval30ED#3 = RMul(coeff30C5,prod30EC);
          real prod30EE#5 = RMul(varAcc30B4,prod30D1);
          real basisEval30EF#2 = RMul(coeff30C5,prod30EE);
          real prod30F0#5 = RMul(prod230D9,prod30BE);
          real basisEval30F1#1 = RMul(coeff30D8,prod30F0);
          real prod30F2#5 = RMul(prod230D9,prod30C2);
          real basisEval30F3#1 = RMul(coeff30D8,prod30F2);
          real coeff30F4#9 = 0.20e2;
          real prod330F5#7 = RMul(prod230D9,varAcc30B4);
          real prod30F6#4 = RMul(prod330F5,prod30BA);
          real basisEval30F7#1 = RMul(coeff30F4,prod30F6);
          real prod430F8#3 = RMul(prod330DC,varAcc30B6);
          real prod30F9#2 = RMul(one30B9,prod430F8);
          real prod30FA#4 = RMul(one30B9,prod30F9);
          real basisEval30FB#2 = RMul(coeff30B8,prod30FA);
          real prod30FC#2 = RMul(varAcc30B5,prod330DC);
          real prod30FD#6 = RMul(one30B9,prod30FC);
          real basisEval30FE#3 = RMul(coeff30B8,prod30FD);
          real prod30FF#2 = RMul(prod230D0,prod230C9);
          real prod3100#5 = RMul(one30B9,prod30FF);
          real basisEval3101#1 = RMul(coeff30B8,prod3100);
          real prod3102#2 = RMul(prod330E6,varAcc30B6);
          real prod3103#6 = RMul(one30B9,prod3102);
          real basisEval3104#3 = RMul(coeff30B8,prod3103);
          real prod43105#3 = RMul(prod330E6,varAcc30B5);
          real prod3106#2 = RMul(prod43105,one30B9);
          real prod3107#4 = RMul(one30B9,prod3106);
          real basisEval3108#2 = RMul(coeff30B8,prod3107);
          real prod3109#6 = RMul(varAcc30B4,prod30DD);
          real basisEval310A#1 = RMul(coeff30C5,prod3109);
          real prod310B#5 = RMul(varAcc30B4,prod30E0);
          real basisEval310C#4 = RMul(coeff30C5,prod310B);
          real prod310D#5 = RMul(varAcc30B4,prod30E3);
          real basisEval310E#4 = RMul(coeff30C5,prod310D);
          real prod310F#6 = RMul(varAcc30B4,prod30E7);
          real basisEval3110#1 = RMul(coeff30C5,prod310F);
          real prod3111#5 = RMul(prod230D9,prod30CA);
          real basisEval3112#2 = RMul(coeff30D8,prod3111);
          real prod3113#5 = RMul(prod230D9,prod30CD);
          real basisEval3114#1 = RMul(coeff30D8,prod3113);
          real prod3115#5 = RMul(prod230D9,prod30D1);
          real basisEval3116#2 = RMul(coeff30D8,prod3115);
          real prod3117#6 = RMul(prod330F5,prod30BE);
          real basisEval3118#1 = RMul(coeff30F4,prod3117);
          real prod3119#6 = RMul(prod330F5,prod30C2);
          real basisEval311A#1 = RMul(coeff30F4,prod3119);
          real coeff311B#3 = 0.30e2;
          real prod4311C#4 = RMul(prod330F5,varAcc30B4);
          real prod311D#4 = RMul(prod4311C,prod30BA);
          real basisEval311E#1 = RMul(coeff311B,prod311D);
          real basisEval311F#7 = RMul(one30B9,prod30BB);
          real basisEval3120#3 = RMul(one30B9,prod30BF);
          real basisEval3121#5 = RMul(coeff30B8,prod30C7);
          real basisEval3122#3 = RMul(one30B9,prod30CB);
          real coeff3123#24 = 0.3e1;
          real basisEval3124#3 = RMul(coeff3123,prod30D2);
          real basisEval3125#5 = RMul(coeff30B8,prod30D4);
          real coeff3126#25 = 0.4e1;
          real basisEval3127#1 = RMul(coeff3126,prod30D6);
          real basisEval3128#3 = RMul(coeff3123,prod30DA);
          real basisEval3129#3 = RMul(one30B9,prod30DE);
          real basisEval312A#2 = RMul(coeff3123,prod30E4);
          real basisEval312B#3 = RMul(coeff3126,prod30E8);
          real basisEval312C#3 = RMul(coeff30B8,prod30EA);
          real basisEval312D#3 = RMul(coeff3126,prod30EC);
          real basisEval312E#2 = RMul(coeff3123,prod30F0);
          real basisEval312F#2 = RMul(coeff30C5,prod30F2);
          real basisEval3130#3 = RMul(coeff3126,prod30F6);
          real basisEval3131#3 = RMul(one30B9,prod30FA);
          real basisEval3132#4 = RMul(coeff3123,prod3100);
          real basisEval3133#2 = RMul(coeff3126,prod3103);
          real coeff3134#9 = 0.5e1;
          real basisEval3135#3 = RMul(coeff3134,prod3107);
          real basisEval3136#3 = RMul(coeff30B8,prod3109);
          real basisEval3137#1 = RMul(coeff3126,prod310B);
          real coeff3138#6 = 0.8e1;
          real basisEval3139#1 = RMul(coeff3138,prod310F);
          real basisEval313A#4 = RMul(coeff3123,prod3111);
          real basisEval313B#4 = RMul(coeff30C5,prod3113);
          real coeff313C#3 = 0.9e1;
          real basisEval313D#1 = RMul(coeff313C,prod3115);
          real basisEval313E#2 = RMul(coeff3126,prod3117);
          real basisEval313F#1 = RMul(coeff3138,prod3119);
          real basisEval3140#3 = RMul(coeff3134,prod311D);
          real basisEval3141#3 = RMul(one30B9,prod30C3);
          real basisEval3142#3 = RMul(coeff3123,prod30CB);
          real basisEval3143#3 = RMul(one30B9,prod30D2);
          real basisEval3144#1 = RMul(coeff3126,prod30D4);
          real basisEval3145#5 = RMul(coeff30B8,prod30D6);
          real basisEval3146#3 = RMul(coeff3126,prod30DE);
          real basisEval3147#2 = RMul(coeff3123,prod30E1);
          real basisEval3148#3 = RMul(one30B9,prod30E8);
          real basisEval3149#3 = RMul(coeff30B8,prod30EE);
          real basisEval314A#2 = RMul(coeff30C5,prod30F0);
          real basisEval314B#2 = RMul(coeff3123,prod30F2);
          real basisEval314C#3 = RMul(coeff3134,prod30FA);
          real basisEval314D#2 = RMul(coeff3126,prod30FD);
          real basisEval314E#3 = RMul(one30B9,prod3107);
          real basisEval314F#1 = RMul(coeff3138,prod3109);
          real basisEval3150#1 = RMul(coeff3126,prod310D);
          real basisEval3151#3 = RMul(coeff30B8,prod310F);
          real basisEval3152#1 = RMul(coeff313C,prod3111);
          real basisEval3153#4 = RMul(coeff3123,prod3115);
          real basisEval3154#1 = RMul(coeff3138,prod3117);
          real basisEval3155#2 = RMul(coeff3126,prod3119);
          real basisEval3156#1 = RMul(coeff30C5,prod30C3);
          real basisEval3157#2 = RMul(coeff30C5,prod30CE);
          real basisEval3158#1 = RMul(coeff30D8,prod30D2);
          real basisEval3159#2 = RMul(coeff30B8,prod30DA);
          real basisEval315A#2 = RMul(coeff30C5,prod30E1);
          real basisEval315B#1 = RMul(coeff30D8,prod30E4);
          real basisEval315C#1 = RMul(coeff30F4,prod30E8);
          real basisEval315D#1 = RMul(coeff30D8,prod30EE);
          real basisEval315E#3 = RMul(coeff30B8,prod30F0);
          real basisEval315F#2 = RMul(coeff30B8,prod30F6);
          real basisEval3160#1 = RMul(coeff30C5,prod30FD);
          real basisEval3161#2 = RMul(coeff30D8,prod3100);
          real basisEval3162#1 = RMul(coeff30F4,prod3103);
          real basisEval3163#1 = RMul(coeff311B,prod3107);
          real basisEval3164#1 = RMul(coeff30D8,prod310D);
          real basisEval3165#1 = RMul(coeff30F4,prod310F);
          real basisEval3166#1 = RMul(coeff30B8,prod3111);
          real basisEval3167#3 = RMul(coeff30B8,prod3117);
          real basisEval3168#1 = RMul(coeff30C5,prod3119);
          real basisEval3169#2 = RMul(coeff30B8,prod311D);
          real basisEval316A#3 = RMul(one30B9,prod30C7);
          real basisEval316B#1 = RMul(coeff3126,prod30CE);
          real basisEval316C#3 = RMul(one30B9,prod30DA);
          real basisEval316D#2 = RMul(coeff30C5,prod30E4);
          real basisEval316E#2 = RMul(coeff3123,prod30EA);
          real basisEval316F#2 = RMul(coeff3123,prod30EE);
          real basisEval3170#3 = RMul(coeff30B8,prod30F2);
          real basisEval3171#3 = RMul(one30B9,prod30F6);
          real basisEval3172#1 = RMul(coeff3138,prod30FD);
          real basisEval3173#1 = RMul(coeff313C,prod3100);
          real basisEval3174#1 = RMul(coeff3138,prod3103);
          real basisEval3175#2 = RMul(coeff3126,prod3109);
          real basisEval3176#2 = RMul(coeff3126,prod310F);
          real basisEval3177#1 = RMul(coeff3126,prod3113);
          real basisEval3178#3 = RMul(coeff30B8,prod3119);
          real basisEval3179#3 = RMul(one30B9,prod311D);
          real basisEval317A#1 = RMul(coeff30C5,prod30BF);
          real basisEval317B#1 = RMul(coeff30D8,prod30CB);
          real basisEval317C#1 = RMul(coeff30F4,prod30DE);
          real basisEval317D#1 = RMul(coeff30D8,prod30E1);
          real basisEval317E#1 = RMul(coeff30D8,prod30EA);
          real basisEval317F#1 = RMul(coeff311B,prod30FA);
          real basisEval3180#1 = RMul(coeff30F4,prod30FD);
          real basisEval3181#1 = RMul(coeff30C5,prod3103);
          real basisEval3182#1 = RMul(coeff30F4,prod3109);
          real basisEval3183#1 = RMul(coeff30D8,prod310B);
          real basisEval3184#1 = RMul(coeff30B8,prod3115);
          real basisEval3185#1 = RMul(coeff30C5,prod3117);
          tensor[84] intermediateCons3186#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30C8,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval30CF,basisEval30D3,basisEval30D5,basisEval30D7,basisEval30DB,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval30E2,basisEval30E5,basisEval30E9,basisEval30EB,basisEval30ED,basisEval30EF,basisEval30F1,basisEval30F3,basisEval30F7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval30FE,basisEval3101,basisEval3104,basisEval3108,basisEval310A,basisEval310C,basisEval310E,basisEval3110,basisEval3112,basisEval3114,basisEval3116,basisEval3118,basisEval311A,basisEval311E];
          tensor[84] intermediateCons3187#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3120,basisEval30C4,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3122,basisEval30CF,basisEval3124,basisEval30B7,basisEval3125,basisEval3127,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3129,basisEval30E2,basisEval312A,basisEval312B,basisEval30B7,basisEval312C,basisEval312D,basisEval30EF,basisEval30B7,basisEval312E,basisEval312F,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3131,basisEval30FE,basisEval3132,basisEval3133,basisEval3135,basisEval30B7,basisEval3136,basisEval3137,basisEval310E,basisEval3139,basisEval30B7,basisEval313A,basisEval313B,basisEval313D,basisEval30B7,basisEval313E,basisEval313F,basisEval30B7,basisEval3140,basisEval30B7];
          tensor[84] intermediateCons3188#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3141,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval30CF,basisEval3143,basisEval30B7,basisEval3144,basisEval3145,basisEval30B7,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval3147,basisEval30E5,basisEval3148,basisEval30B7,basisEval30EB,basisEval312D,basisEval3149,basisEval30B7,basisEval314A,basisEval314B,basisEval30B7,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval314D,basisEval3132,basisEval3104,basisEval314E,basisEval30B7,basisEval314F,basisEval310C,basisEval3150,basisEval3151,basisEval30B7,basisEval3152,basisEval313B,basisEval3153,basisEval30B7,basisEval3154,basisEval3155,basisEval30B7,basisEval3140,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons3189#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3156,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30CC,basisEval3157,basisEval3158,basisEval30B7,basisEval30B7,basisEval3125,basisEval30D7,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30DF,basisEval315A,basisEval315B,basisEval315C,basisEval30B7,basisEval30B7,basisEval312C,basisEval30ED,basisEval315D,basisEval30B7,basisEval30B7,basisEval315E,basisEval312F,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30FB,basisEval3160,basisEval3161,basisEval3162,basisEval3163,basisEval30B7,basisEval30B7,basisEval3136,basisEval310C,basisEval3164,basisEval3165,basisEval30B7,basisEval30B7,basisEval3166,basisEval313B,basisEval3116,basisEval30B7,basisEval30B7,basisEval3167,basisEval3168,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318A#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30C0,basisEval30C4,basisEval30B7,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3142,basisEval316B,basisEval3124,basisEval30B7,basisEval30B7,basisEval3125,basisEval3145,basisEval30B7,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3146,basisEval315A,basisEval316D,basisEval312B,basisEval30B7,basisEval30B7,basisEval316E,basisEval312D,basisEval316F,basisEval30B7,basisEval30B7,basisEval315E,basisEval3170,basisEval30B7,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval314C,basisEval3172,basisEval3173,basisEval3174,basisEval3135,basisEval30B7,basisEval30B7,basisEval3175,basisEval310C,basisEval310E,basisEval3176,basisEval30B7,basisEval30B7,basisEval313A,basisEval3177,basisEval3153,basisEval30B7,basisEval30B7,basisEval3167,basisEval3178,basisEval30B7,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          tensor[84] intermediateCons318B#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30BC,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317A,basisEval30C4,basisEval30B7,basisEval30B7,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317B,basisEval3157,basisEval30D3,basisEval30B7,basisEval30B7,basisEval30D5,basisEval3145,basisEval30B7,basisEval30B7,basisEval3159,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317C,basisEval317D,basisEval316D,basisEval30E9,basisEval30B7,basisEval30B7,basisEval317E,basisEval30ED,basisEval3149,basisEval30B7,basisEval30B7,basisEval314A,basisEval3170,basisEval30B7,basisEval30B7,basisEval315F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval317F,basisEval3180,basisEval3161,basisEval3181,basisEval3108,basisEval30B7,basisEval30B7,basisEval3182,basisEval3183,basisEval310E,basisEval3151,basisEval30B7,basisEval30B7,basisEval3112,basisEval313B,basisEval3184,basisEval30B7,basisEval30B7,basisEval3185,basisEval3178,basisEval30B7,basisEval30B7,basisEval3169,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7];
          real vdot326F#1 = VDot<84>(dofs2F60,intermediateCons3186);
          real vdot3271#2 = VDot<84>(dofs2F60,intermediateCons3187);
          real vdot3273#2 = VDot<84>(dofs2F60,intermediateCons3188);
          real vdot3278#1 = VDot<84>(dofs2F60,intermediateCons3189);
          real vdot327A#2 = VDot<84>(dofs2F60,intermediateCons318A);
          real vdot3281#1 = VDot<84>(dofs2F60,intermediateCons318B);
          tensor[3,3] _t326D#1 = <tensor[3,3]>[vdot326F,vdot3271,vdot3273,vdot3271,vdot3278,vdot327A,vdot3273,vdot327A,vdot3281];
          (real[3] evals329A#2,tensor[3][3] E329B#2) = EigenVecs3x3(_t326D);
          tensor[3] _t329F#6 = Subscript<tensor[3][3]>(E329B,ilit2C18);
          real _t32A1#9 = Subscript<real[3]>(evals329A,ilit2C18);
          tensor[3] _t32A5#6 = Subscript<tensor[3][3]>(E329B,ilit2C15);
          real _t32A7#9 = Subscript<real[3]>(evals329A,ilit2C15);
          real _t32AD#1 = 0.15e1;
          real r32B0#1 = TensorIndex<tensor[3],[0]>(_t329F);
          tensor[3] binopV32B1#3 = VScale<3>(r32B0,_t329F);
          real r32B2#1 = TensorIndex<tensor[3],[1]>(_t329F);
          tensor[3] binopV32B3#3 = VScale<3>(r32B2,_t329F);
          real r32B4#1 = TensorIndex<tensor[3],[2]>(_t329F);
          tensor[3] binopV32B5#3 = VScale<3>(r32B4,_t329F);
          real r32BF#1 = TensorIndex<tensor[3],[0]>(_t32A5);
          tensor[3] binopV32C0#3 = VScale<3>(r32BF,_t32A5);
          real r32C1#1 = TensorIndex<tensor[3],[1]>(_t32A5);
          tensor[3] binopV32C2#3 = VScale<3>(r32C1,_t32A5);
          real r32C3#1 = TensorIndex<tensor[3],[2]>(_t32A5);
          tensor[3] binopV32C4#3 = VScale<3>(r32C3,_t32A5);
          real r32CE#1 = VIndex<3,0>(binopV32B1);
          real r32CF#1 = RDiv(r32CE,_t32A1);
          real r32D0#1 = VIndex<3,1>(binopV32B1);
          real r32D1#1 = RDiv(r32D0,_t32A1);
          real r32D2#1 = VIndex<3,2>(binopV32B1);
          real r32D3#1 = RDiv(r32D2,_t32A1);
          tensor[3] tensor32D4#1 = <tensor[3]>[r32CF,r32D1,r32D3];
          real r32D5#1 = VIndex<3,0>(binopV32B3);
          real r32D6#1 = RDiv(r32D5,_t32A1);
          real r32D7#1 = VIndex<3,1>(binopV32B3);
          real r32D8#1 = RDiv(r32D7,_t32A1);
          real r32D9#1 = VIndex<3,2>(binopV32B3);
          real r32DA#1 = RDiv(r32D9,_t32A1);
          tensor[3] tensor32DB#1 = <tensor[3]>[r32D6,r32D8,r32DA];
          real r32DC#1 = VIndex<3,0>(binopV32B5);
          real r32DD#1 = RDiv(r32DC,_t32A1);
          real r32DE#1 = VIndex<3,1>(binopV32B5);
          real r32DF#1 = RDiv(r32DE,_t32A1);
          real r32E0#1 = VIndex<3,2>(binopV32B5);
          real r32E1#1 = RDiv(r32E0,_t32A1);
          tensor[3] tensor32E2#1 = <tensor[3]>[r32DD,r32DF,r32E1];
          real r32FB#1 = VIndex<3,0>(binopV32C0);
          real r32FC#1 = RDiv(r32FB,_t32A7);
          real r32FD#1 = VIndex<3,1>(binopV32C0);
          real r32FE#1 = RDiv(r32FD,_t32A7);
          real r32FF#1 = VIndex<3,2>(binopV32C0);
          real r3300#1 = RDiv(r32FF,_t32A7);
          tensor[3] tensor3301#1 = <tensor[3]>[r32FC,r32FE,r3300];
          real r3302#1 = VIndex<3,0>(binopV32C2);
          real r3303#1 = RDiv(r3302,_t32A7);
          real r3304#1 = VIndex<3,1>(binopV32C2);
          real r3305#1 = RDiv(r3304,_t32A7);
          real r3306#1 = VIndex<3,2>(binopV32C2);
          real r3307#1 = RDiv(r3306,_t32A7);
          tensor[3] tensor3308#1 = <tensor[3]>[r3303,r3305,r3307];
          real r3309#1 = VIndex<3,0>(binopV32C4);
          real r330A#1 = RDiv(r3309,_t32A7);
          real r330B#1 = VIndex<3,1>(binopV32C4);
          real r330C#1 = RDiv(r330B,_t32A7);
          real r330D#1 = VIndex<3,2>(binopV32C4);
          real r330E#1 = RDiv(r330D,_t32A7);
          tensor[3] tensor330F#1 = <tensor[3]>[r330A,r330C,r330E];
          tensor[3] v332A#1 = VAdd<3>(tensor32D4,tensor3301);
          tensor[3] v332D#1 = VAdd<3>(tensor32DB,tensor3308);
          tensor[3] v3330#1 = VAdd<3>(tensor32E2,tensor330F);
          real basisEval3357#1 = RMul(one30B9,prod30CE);
          real basisEval336A#1 = RMul(one30B9,prod30E1);
          real basisEval336D#1 = RMul(one30B9,prod30E4);
          real basisEval3375#3 = RMul(coeff30B8,prod30EC);
          real basisEval3386#1 = RMul(one30B9,prod30FD);
          real basisEval3389#1 = RMul(one30B9,prod3100);
          real basisEval338C#1 = RMul(one30B9,prod3103);
          real basisEval3394#2 = RMul(coeff30B8,prod310B);
          real basisEval3396#2 = RMul(coeff30B8,prod310D);
          real basisEval339C#1 = RMul(coeff3123,prod3113);
          real prod533A7#1 = RMul(prod430F8,varAcc30B6);
          real prod33A8#1 = RMul(one30B9,prod533A7);
          real prod33A9#2 = RMul(one30B9,prod33A8);
          real basisEval33AA#2 = RMul(one30B9,prod33A9);
          real prod33AB#1 = RMul(varAcc30B5,prod430F8);
          real prod33AC#3 = RMul(one30B9,prod33AB);
          real basisEval33AD#1 = RMul(one30B9,prod33AC);
          real prod33AE#1 = RMul(prod230D0,prod330DC);
          real prod33AF#3 = RMul(one30B9,prod33AE);
          real basisEval33B0#1 = RMul(one30B9,prod33AF);
          real prod33B1#1 = RMul(prod330E6,prod230C9);
          real prod33B2#3 = RMul(one30B9,prod33B1);
          real basisEval33B3#1 = RMul(one30B9,prod33B2);
          real prod33B4#1 = RMul(prod43105,varAcc30B6);
          real prod33B5#3 = RMul(one30B9,prod33B4);
          real basisEval33B6#1 = RMul(one30B9,prod33B5);
          real prod533B7#1 = RMul(prod43105,varAcc30B5);
          real prod33B8#1 = RMul(prod533B7,one30B9);
          real prod33B9#2 = RMul(one30B9,prod33B8);
          real basisEval33BA#2 = RMul(one30B9,prod33B9);
          real prod33BB#3 = RMul(varAcc30B4,prod30F9);
          real basisEval33BC#1 = RMul(coeff30B8,prod33BB);
          real prod33BD#2 = RMul(varAcc30B4,prod30FC);
          real basisEval33BE#2 = RMul(coeff30B8,prod33BD);
          real prod33BF#2 = RMul(varAcc30B4,prod30FF);
          real basisEval33C0#1 = RMul(coeff30B8,prod33BF);
          real prod33C1#2 = RMul(varAcc30B4,prod3102);
          real basisEval33C2#2 = RMul(coeff30B8,prod33C1);
          real prod33C3#3 = RMul(varAcc30B4,prod3106);
          real basisEval33C4#1 = RMul(coeff30B8,prod33C3);
          real prod33C5#3 = RMul(prod230D9,prod30DD);
          real basisEval33C6#1 = RMul(coeff3123,prod33C5);
          real prod33C7#2 = RMul(prod230D9,prod30E0);
          real basisEval33C8#2 = RMul(coeff3123,prod33C7);
          real prod33C9#2 = RMul(prod230D9,prod30E3);
          real basisEval33CA#2 = RMul(coeff3123,prod33C9);
          real prod33CB#3 = RMul(prod230D9,prod30E7);
          real basisEval33CC#1 = RMul(coeff3123,prod33CB);
          real prod33CD#3 = RMul(prod330F5,prod30CA);
          real basisEval33CE#1 = RMul(coeff3126,prod33CD);
          real prod33CF#2 = RMul(prod330F5,prod30CD);
          real basisEval33D0#1 = RMul(coeff3126,prod33CF);
          real prod33D1#3 = RMul(prod330F5,prod30D1);
          real basisEval33D2#1 = RMul(coeff3126,prod33D1);
          real prod33D3#3 = RMul(prod4311C,prod30BE);
          real basisEval33D4#1 = RMul(coeff3134,prod33D3);
          real prod33D5#3 = RMul(prod4311C,prod30C2);
          real basisEval33D6#1 = RMul(coeff3134,prod33D5);
          real prod533D8#1 = RMul(prod4311C,varAcc30B4);
          real prod33D9#2 = RMul(prod533D8,prod30BA);
          real basisEval33DA#1 = RMul(coeff30C5,prod33D9);
          real basisEval33DF#1 = RMul(one30B9,prod30D4);
          real basisEval33E4#1 = RMul(one30B9,prod30EA);
          real basisEval33E6#1 = RMul(one30B9,prod30F0);
          real basisEval33ED#1 = RMul(one30B9,prod3109);
          real basisEval33EE#1 = RMul(coeff3123,prod310D);
          real basisEval33F0#1 = RMul(one30B9,prod3111);
          real basisEval33F1#2 = RMul(coeff30B8,prod3113);
          real basisEval33F2#1 = RMul(one30B9,prod3117);
          real basisEval33F5#1 = RMul(coeff30B8,prod33AC);
          real basisEval33F6#1 = RMul(coeff3123,prod33AF);
          real basisEval33F7#1 = RMul(coeff3126,prod33B2);
          real basisEval33F8#1 = RMul(coeff3134,prod33B5);
          real basisEval33F9#1 = RMul(coeff30C5,prod33B9);
          real basisEval33FA#1 = RMul(one30B9,prod33BB);
          real basisEval33FB#2 = RMul(coeff3123,prod33BF);
          real basisEval33FC#1 = RMul(coeff3126,prod33C1);
          real basisEval33FD#1 = RMul(coeff3134,prod33C3);
          real basisEval33FE#1 = RMul(one30B9,prod33C5);
          real basisEval33FF#1 = RMul(coeff30B8,prod33C7);
          real basisEval3400#1 = RMul(coeff3126,prod33CB);
          real basisEval3401#1 = RMul(one30B9,prod33CD);
          real basisEval3402#2 = RMul(coeff30B8,prod33CF);
          real basisEval3403#1 = RMul(coeff3123,prod33D1);
          real basisEval3404#1 = RMul(one30B9,prod33D3);
          real basisEval3405#1 = RMul(coeff30B8,prod33D5);
          real basisEval3406#2 = RMul(one30B9,prod33D9);
          real basisEval3409#1 = RMul(one30B9,prod30D6);
          real basisEval340E#1 = RMul(one30B9,prod30EE);
          real basisEval3410#1 = RMul(one30B9,prod30F2);
          real basisEval3415#1 = RMul(coeff3123,prod310B);
          real basisEval3416#1 = RMul(one30B9,prod310F);
          real basisEval3417#1 = RMul(one30B9,prod3115);
          real basisEval3419#1 = RMul(one30B9,prod3119);
          real basisEval341A#1 = RMul(coeff30C5,prod33A9);
          real basisEval341B#1 = RMul(coeff3134,prod33AC);
          real basisEval341C#1 = RMul(coeff3126,prod33AF);
          real basisEval341D#1 = RMul(coeff3123,prod33B2);
          real basisEval341E#1 = RMul(coeff30B8,prod33B5);
          real basisEval341F#1 = RMul(coeff3134,prod33BB);
          real basisEval3420#1 = RMul(coeff3126,prod33BD);
          real basisEval3421#1 = RMul(one30B9,prod33C3);
          real basisEval3422#1 = RMul(coeff3126,prod33C5);
          real basisEval3423#1 = RMul(coeff30B8,prod33C9);
          real basisEval3424#1 = RMul(one30B9,prod33CB);
          real basisEval3425#1 = RMul(coeff3123,prod33CD);
          real basisEval3426#1 = RMul(one30B9,prod33D1);
          real basisEval3427#1 = RMul(coeff30B8,prod33D3);
          real basisEval3428#1 = RMul(one30B9,prod33D5);
          tensor[84] intermediateCons3429#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3120,basisEval3141,basisEval3121,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3122,basisEval3357,basisEval3143,basisEval3125,basisEval3145,basisEval3128,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3129,basisEval336A,basisEval336D,basisEval3148,basisEval312C,basisEval3375,basisEval3149,basisEval312E,basisEval314B,basisEval3130,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval3131,basisEval3386,basisEval3389,basisEval338C,basisEval314E,basisEval3136,basisEval3394,basisEval3396,basisEval3151,basisEval313A,basisEval339C,basisEval3153,basisEval313E,basisEval3155,basisEval3140,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval30B7,basisEval33AA,basisEval33AD,basisEval33B0,basisEval33B3,basisEval33B6,basisEval33BA,basisEval33BC,basisEval33BE,basisEval33C0,basisEval33C2,basisEval33C4,basisEval33C6,basisEval33C8,basisEval33CA,basisEval33CC,basisEval33CE,basisEval33D0,basisEval33D2,basisEval33D4,basisEval33D6,basisEval33DA];
          tensor[84] intermediateCons342A#1 = <tensor[84]>[basisEval30B7,basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval3120,basisEval30C4,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval3122,basisEval30CF,basisEval3124,basisEval30B7,basisEval33DF,basisEval3145,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval3129,basisEval30E2,basisEval312A,basisEval312B,basisEval30B7,basisEval33E4,basisEval3375,basisEval316F,basisEval30B7,basisEval33E6,basisEval3170,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval3131,basisEval30FE,basisEval3132,basisEval3133,basisEval3135,basisEval30B7,basisEval33ED,basisEval3394,basisEval33EE,basisEval3176,basisEval30B7,basisEval33F0,basisEval33F1,basisEval3153,basisEval30B7,basisEval33F2,basisEval3178,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval33AA,basisEval33F5,basisEval33F6,basisEval33F7,basisEval33F8,basisEval33F9,basisEval30B7,basisEval33FA,basisEval33BE,basisEval33FB,basisEval33FC,basisEval33FD,basisEval30B7,basisEval33FE,basisEval33FF,basisEval33CA,basisEval3400,basisEval30B7,basisEval3401,basisEval3402,basisEval3403,basisEval30B7,basisEval3404,basisEval3405,basisEval30B7,basisEval3406,basisEval30B7];
          tensor[84] intermediateCons342B#1 = <tensor[84]>[basisEval30B7,basisEval311F,basisEval30B7,basisEval30B7,basisEval30C0,basisEval3141,basisEval30B7,basisEval316A,basisEval30B7,basisEval30B7,basisEval3142,basisEval30CF,basisEval3143,basisEval30B7,basisEval3125,basisEval3409,basisEval30B7,basisEval316C,basisEval30B7,basisEval30B7,basisEval3146,basisEval3147,basisEval30E5,basisEval3148,basisEval30B7,basisEval316E,basisEval3375,basisEval340E,basisEval30B7,basisEval315E,basisEval3410,basisEval30B7,basisEval3171,basisEval30B7,basisEval30B7,basisEval314C,basisEval314D,basisEval3132,basisEval3104,basisEval314E,basisEval30B7,basisEval3175,basisEval3415,basisEval3396,basisEval3416,basisEval30B7,basisEval313A,basisEval33F1,basisEval3417,basisEval30B7,basisEval3167,basisEval3419,basisEval30B7,basisEval3179,basisEval30B7,basisEval30B7,basisEval341A,basisEval341B,basisEval341C,basisEval341D,basisEval341E,basisEval33BA,basisEval30B7,basisEval341F,basisEval3420,basisEval33FB,basisEval33C2,basisEval3421,basisEval30B7,basisEval3422,basisEval33C8,basisEval3423,basisEval3424,basisEval30B7,basisEval3425,basisEval3402,basisEval3426,basisEval30B7,basisEval3427,basisEval3428,basisEval30B7,basisEval3406,basisEval30B7,basisEval30B7];
          real vdot3520#1 = VDot<84>(dofs2F60,intermediateCons3429);
          real vdot3522#1 = VDot<84>(dofs2F60,intermediateCons342A);
          real vdot3524#1 = VDot<84>(dofs2F60,intermediateCons342B);
          tensor[3] probe_l_21351E#3 = <tensor[3]>[vdot3520,vdot3522,vdot3524];
          tensor[3] negV352F#1 = VNeg<3>(v332A);
          tensor[3] negV3531#1 = VNeg<3>(v332D);
          tensor[3] negV3533#1 = VNeg<3>(v3330);
          real vdot353E#1 = VDot<3>(negV352F,probe_l_21351E);
          real vdot3540#1 = VDot<3>(negV3531,probe_l_21351E);
          real vdot3542#1 = VDot<3>(negV3533,probe_l_21351E);
          tensor[3] op1_e3_l_30353C#5 = <tensor[3]>[vdot353E,vdot3540,vdot3542];
          real op1_e3_l_32354B#1 = VDot<3>(op1_e3_l_30353C,op1_e3_l_30353C);
          real op1_e3_l_33354E#3 = Sqrt(op1_e3_l_32354B);
          real op1_e3_l_343551#1 = Abs<real>(op1_e3_l_33354E);
          real op1_e3_l_353554#1 = RDiv(op1_e3_l_343551,thick2323);
          real op1_e3_l_363557#1 = RSub(one30B9,op1_e3_l_353554);
          real op1_e3_l_37355A#1 = RMul(_t32AD,op1_e3_l_363557);
          real op1_e3_l_38355D#1 = RClamp(basisEval30B7,one30B9,op1_e3_l_37355A);
          real _t3560#2 = RMul(maxAlpha232B,op1_e3_l_38355D);
          bool _t3563#1 = EQ<real>(_t3560,basisEval30B7);
          if _t3563 then goto SAVE3566 else goto JOIN3568
        SAVE3566:  preds = [COND3565]
          self.rayN = rayN234F;
          active
          goto JOIN3568
        JOIN3568:  preds = [*ACTIVE3567,COND3565]
          real _t356F#1 = RSub(one30B9,_t3560);
          real _t3572#1 = MathFn<pow>(_t356F,alphaFix233F);
          bool _t3574#1 = NEQ<real>(phKs2347,basisEval30B7);
          if _t3574 then goto ASSIGN3579 else goto JOIN359C
        ASSIGN3579:  preds = [COND3576]
          tensor[3] op1_e3_l_243577#3 = VAdd<3>(eyeDir2341,litwsp2337);
          real op1_e3_l_26357A#1 = VDot<3>(op1_e3_l_243577,op1_e3_l_243577);
          real op1_e3_l_27357D#1 = Sqrt(op1_e3_l_26357A);
          real op1_e3_l_543580#1 = RDiv(one30B9,op1_e3_l_33354E);
          tensor[3] op1_e3_l_553585#1 = VScale<3>(op1_e3_l_543580,op1_e3_l_30353C);
          tensor[3] op1_e3_l_563588#1 = VNeg<3>(op1_e3_l_553585);
          real op1_e3_l_58358B#1 = RDiv(one30B9,op1_e3_l_27357D);
          real op1_e3_l_593590#1 = VDot<3>(op1_e3_l_563588,op1_e3_l_243577);
          real op1_e3_l_603593#1 = RMul(op1_e3_l_58358B,op1_e3_l_593590);
          real _t3596#1 = Abs<real>(op1_e3_l_603593);
          real scomp3599#1 = MathFn<pow>(_t3596,phSp2349);
          goto JOIN359C
        JOIN359C:  preds = [ASSIGN359A,COND3576]
          real scomp359B#1 = phi(scomp3599,basisEval30B7)
          real cmin359D#3 = VIndex<2,0>(cminmax2331);
          real cmax359F#2 = VIndex<2,1>(cminmax2331);
          tensor[3] mcol35A1#1 = <tensor[3]>[one30B9,one30B9,one30B9];
          bool _t35A3#1 = NEQ<real>(cmin359D,cmax359F);
          if _t35A3 then goto ASSIGN3BC8 else goto JOIN37E5
        ASSIGN3BC8:  preds = [COND35A5]
          tensor[3] _t35A6#3 = VAdd<3>(pos235B,op1_e3_l_30353C);
          real varAcc35AC#27 = VIndex<3,0>(_t35A6);
          real varAcc35AD#12 = VIndex<3,1>(_t35A6);
          real varAcc35AE#12 = VIndex<3,2>(_t35A6);
          real prod35B4#6 = RMul(one30B9,varAcc35AE);
          real prod35B5#1 = RMul(one30B9,prod35B4);
          real basisEval35B6#1 = RMul(one30B9,prod35B5);
          real prod35B8#6 = RMul(varAcc35AD,one30B9);
          real prod35B9#1 = RMul(one30B9,prod35B8);
          real basisEval35BA#1 = RMul(one30B9,prod35B9);
          real prod35BC#1 = RMul(varAcc35AC,prod30BA);
          real basisEval35BD#1 = RMul(one30B9,prod35BC);
          real prod235BE#6 = RMul(varAcc35AE,varAcc35AE);
          real prod35BF#5 = RMul(one30B9,prod235BE);
          real prod35C0#1 = RMul(one30B9,prod35BF);
          real basisEval35C1#1 = RMul(one30B9,prod35C0);
          real prod35C2#5 = RMul(varAcc35AD,varAcc35AE);
          real prod35C3#1 = RMul(one30B9,prod35C2);
          real basisEval35C4#1 = RMul(one30B9,prod35C3);
          real prod235C5#6 = RMul(varAcc35AD,varAcc35AD);
          real prod35C6#5 = RMul(prod235C5,one30B9);
          real prod35C7#1 = RMul(one30B9,prod35C6);
          real basisEval35C8#1 = RMul(one30B9,prod35C7);
          real prod35C9#1 = RMul(varAcc35AC,prod35B4);
          real basisEval35CA#1 = RMul(one30B9,prod35C9);
          real prod35CB#1 = RMul(varAcc35AC,prod35B8);
          real basisEval35CC#1 = RMul(one30B9,prod35CB);
          real prod235CD#16 = RMul(varAcc35AC,varAcc35AC);
          real prod35CE#1 = RMul(prod235CD,prod30BA);
          real basisEval35CF#1 = RMul(one30B9,prod35CE);
          real prod335D0#5 = RMul(prod235BE,varAcc35AE);
          real prod35D1#4 = RMul(one30B9,prod335D0);
          real prod35D2#1 = RMul(one30B9,prod35D1);
          real basisEval35D3#1 = RMul(one30B9,prod35D2);
          real prod35D4#4 = RMul(varAcc35AD,prod235BE);
          real prod35D5#1 = RMul(one30B9,prod35D4);
          real basisEval35D6#1 = RMul(one30B9,prod35D5);
          real prod35D7#4 = RMul(prod235C5,varAcc35AE);
          real prod35D8#1 = RMul(one30B9,prod35D7);
          real basisEval35D9#1 = RMul(one30B9,prod35D8);
          real prod335DA#5 = RMul(prod235C5,varAcc35AD);
          real prod35DB#4 = RMul(prod335DA,one30B9);
          real prod35DC#1 = RMul(one30B9,prod35DB);
          real basisEval35DD#1 = RMul(one30B9,prod35DC);
          real prod35DE#1 = RMul(varAcc35AC,prod35BF);
          real basisEval35DF#1 = RMul(one30B9,prod35DE);
          real prod35E0#1 = RMul(varAcc35AC,prod35C2);
          real basisEval35E1#1 = RMul(one30B9,prod35E0);
          real prod35E2#1 = RMul(varAcc35AC,prod35C6);
          real basisEval35E3#1 = RMul(one30B9,prod35E2);
          real prod35E4#1 = RMul(prod235CD,prod35B4);
          real basisEval35E5#1 = RMul(one30B9,prod35E4);
          real prod35E6#1 = RMul(prod235CD,prod35B8);
          real basisEval35E7#1 = RMul(one30B9,prod35E6);
          real prod335E8#11 = RMul(prod235CD,varAcc35AC);
          real prod35E9#1 = RMul(prod335E8,prod30BA);
          real basisEval35EA#1 = RMul(one30B9,prod35E9);
          real prod435EB#4 = RMul(prod335D0,varAcc35AE);
          real prod35EC#3 = RMul(one30B9,prod435EB);
          real prod35ED#1 = RMul(one30B9,prod35EC);
          real basisEval35EE#1 = RMul(one30B9,prod35ED);
          real prod35EF#3 = RMul(varAcc35AD,prod335D0);
          real prod35F0#1 = RMul(one30B9,prod35EF);
          real basisEval35F1#1 = RMul(one30B9,prod35F0);
          real prod35F2#3 = RMul(prod235C5,prod235BE);
          real prod35F3#1 = RMul(one30B9,prod35F2);
          real basisEval35F4#1 = RMul(one30B9,prod35F3);
          real prod35F5#3 = RMul(prod335DA,varAcc35AE);
          real prod35F6#1 = RMul(one30B9,prod35F5);
          real basisEval35F7#1 = RMul(one30B9,prod35F6);
          real prod435F8#4 = RMul(prod335DA,varAcc35AD);
          real prod35F9#3 = RMul(prod435F8,one30B9);
          real prod35FA#1 = RMul(one30B9,prod35F9);
          real basisEval35FB#1 = RMul(one30B9,prod35FA);
          real prod35FC#1 = RMul(varAcc35AC,prod35D1);
          real basisEval35FD#1 = RMul(one30B9,prod35FC);
          real prod35FE#1 = RMul(varAcc35AC,prod35D4);
          real basisEval35FF#1 = RMul(one30B9,prod35FE);
          real prod3600#1 = RMul(varAcc35AC,prod35D7);
          real basisEval3601#1 = RMul(one30B9,prod3600);
          real prod3602#1 = RMul(varAcc35AC,prod35DB);
          real basisEval3603#1 = RMul(one30B9,prod3602);
          real prod3604#1 = RMul(prod235CD,prod35BF);
          real basisEval3605#1 = RMul(one30B9,prod3604);
          real prod3606#1 = RMul(prod235CD,prod35C2);
          real basisEval3607#1 = RMul(one30B9,prod3606);
          real prod3608#1 = RMul(prod235CD,prod35C6);
          real basisEval3609#1 = RMul(one30B9,prod3608);
          real prod360A#1 = RMul(prod335E8,prod35B4);
          real basisEval360B#1 = RMul(one30B9,prod360A);
          real prod360C#1 = RMul(prod335E8,prod35B8);
          real basisEval360D#1 = RMul(one30B9,prod360C);
          real prod4360E#7 = RMul(prod335E8,varAcc35AC);
          real prod360F#1 = RMul(prod4360E,prod30BA);
          real basisEval3610#1 = RMul(one30B9,prod360F);
          real prod53611#3 = RMul(prod435EB,varAcc35AE);
          real prod3612#2 = RMul(one30B9,prod53611);
          real prod3613#1 = RMul(one30B9,prod3612);
          real basisEval3614#1 = RMul(one30B9,prod3613);
          real prod3615#2 = RMul(varAcc35AD,prod435EB);
          real prod3616#1 = RMul(one30B9,prod3615);
          real basisEval3617#1 = RMul(one30B9,prod3616);
          real prod3618#2 = RMul(prod235C5,prod335D0);
          real prod3619#1 = RMul(one30B9,prod3618);
          real basisEval361A#1 = RMul(one30B9,prod3619);
          real prod361B#2 = RMul(prod335DA,prod235BE);
          real prod361C#1 = RMul(one30B9,prod361B);
          real basisEval361D#1 = RMul(one30B9,prod361C);
          real prod361E#2 = RMul(prod435F8,varAcc35AE);
          real prod361F#1 = RMul(one30B9,prod361E);
          real basisEval3620#1 = RMul(one30B9,prod361F);
          real prod53621#3 = RMul(prod435F8,varAcc35AD);
          real prod3622#2 = RMul(prod53621,one30B9);
          real prod3623#1 = RMul(one30B9,prod3622);
          real basisEval3624#1 = RMul(one30B9,prod3623);
          real prod3625#1 = RMul(varAcc35AC,prod35EC);
          real basisEval3626#1 = RMul(one30B9,prod3625);
          real prod3627#1 = RMul(varAcc35AC,prod35EF);
          real basisEval3628#1 = RMul(one30B9,prod3627);
          real prod3629#1 = RMul(varAcc35AC,prod35F2);
          real basisEval362A#1 = RMul(one30B9,prod3629);
          real prod362B#1 = RMul(varAcc35AC,prod35F5);
          real basisEval362C#1 = RMul(one30B9,prod362B);
          real prod362D#1 = RMul(varAcc35AC,prod35F9);
          real basisEval362E#1 = RMul(one30B9,prod362D);
          real prod362F#1 = RMul(prod235CD,prod35D1);
          real basisEval3630#1 = RMul(one30B9,prod362F);
          real prod3631#1 = RMul(prod235CD,prod35D4);
          real basisEval3632#1 = RMul(one30B9,prod3631);
          real prod3633#1 = RMul(prod235CD,prod35D7);
          real basisEval3634#1 = RMul(one30B9,prod3633);
          real prod3635#1 = RMul(prod235CD,prod35DB);
          real basisEval3636#1 = RMul(one30B9,prod3635);
          real prod3637#1 = RMul(prod335E8,prod35BF);
          real basisEval3638#1 = RMul(one30B9,prod3637);
          real prod3639#1 = RMul(prod335E8,prod35C2);
          real basisEval363A#1 = RMul(one30B9,prod3639);
          real prod363B#1 = RMul(prod335E8,prod35C6);
          real basisEval363C#1 = RMul(one30B9,prod363B);
          real prod363D#1 = RMul(prod4360E,prod35B4);
          real basisEval363E#1 = RMul(one30B9,prod363D);
          real prod363F#1 = RMul(prod4360E,prod35B8);
          real basisEval3640#1 = RMul(one30B9,prod363F);
          real prod53641#4 = RMul(prod4360E,varAcc35AC);
          real prod3642#1 = RMul(prod53641,prod30BA);
          real basisEval3643#1 = RMul(one30B9,prod3642);
          real prod63644#1 = RMul(prod53611,varAcc35AE);
          real prod3645#1 = RMul(one30B9,prod63644);
          real prod3646#1 = RMul(one30B9,prod3645);
          real basisEval3647#1 = RMul(one30B9,prod3646);
          real prod3648#1 = RMul(varAcc35AD,prod53611);
          real prod3649#1 = RMul(one30B9,prod3648);
          real basisEval364A#1 = RMul(one30B9,prod3649);
          real prod364B#1 = RMul(prod235C5,prod435EB);
          real prod364C#1 = RMul(one30B9,prod364B);
          real basisEval364D#1 = RMul(one30B9,prod364C);
          real prod364E#1 = RMul(prod335DA,prod335D0);
          real prod364F#1 = RMul(one30B9,prod364E);
          real basisEval3650#1 = RMul(one30B9,prod364F);
          real prod3651#1 = RMul(prod435F8,prod235BE);
          real prod3652#1 = RMul(one30B9,prod3651);
          real basisEval3653#1 = RMul(one30B9,prod3652);
          real prod3654#1 = RMul(prod53621,varAcc35AE);
          real prod3655#1 = RMul(one30B9,prod3654);
          real basisEval3656#1 = RMul(one30B9,prod3655);
          real prod63657#1 = RMul(prod53621,varAcc35AD);
          real prod3658#1 = RMul(prod63657,one30B9);
          real prod3659#1 = RMul(one30B9,prod3658);
          real basisEval365A#1 = RMul(one30B9,prod3659);
          real prod365B#1 = RMul(varAcc35AC,prod3612);
          real basisEval365C#1 = RMul(one30B9,prod365B);
          real prod365D#1 = RMul(varAcc35AC,prod3615);
          real basisEval365E#1 = RMul(one30B9,prod365D);
          real prod365F#1 = RMul(varAcc35AC,prod3618);
          real basisEval3660#1 = RMul(one30B9,prod365F);
          real prod3661#1 = RMul(varAcc35AC,prod361B);
          real basisEval3662#1 = RMul(one30B9,prod3661);
          real prod3663#1 = RMul(varAcc35AC,prod361E);
          real basisEval3664#1 = RMul(one30B9,prod3663);
          real prod3665#1 = RMul(varAcc35AC,prod3622);
          real basisEval3666#1 = RMul(one30B9,prod3665);
          real prod3667#1 = RMul(prod235CD,prod35EC);
          real basisEval3668#1 = RMul(one30B9,prod3667);
          real prod3669#1 = RMul(prod235CD,prod35EF);
          real basisEval366A#1 = RMul(one30B9,prod3669);
          real prod366B#1 = RMul(prod235CD,prod35F2);
          real basisEval366C#1 = RMul(one30B9,prod366B);
          real prod366D#1 = RMul(prod235CD,prod35F5);
          real basisEval366E#1 = RMul(one30B9,prod366D);
          real prod366F#1 = RMul(prod235CD,prod35F9);
          real basisEval3670#1 = RMul(one30B9,prod366F);
          real prod3671#1 = RMul(prod335E8,prod35D1);
          real basisEval3672#1 = RMul(one30B9,prod3671);
          real prod3673#1 = RMul(prod335E8,prod35D4);
          real basisEval3674#1 = RMul(one30B9,prod3673);
          real prod3675#1 = RMul(prod335E8,prod35D7);
          real basisEval3676#1 = RMul(one30B9,prod3675);
          real prod3677#1 = RMul(prod335E8,prod35DB);
          real basisEval3678#1 = RMul(one30B9,prod3677);
          real prod3679#1 = RMul(prod4360E,prod35BF);
          real basisEval367A#1 = RMul(one30B9,prod3679);
          real prod367B#1 = RMul(prod4360E,prod35C2);
          real basisEval367C#1 = RMul(one30B9,prod367B);
          real prod367D#1 = RMul(prod4360E,prod35C6);
          real basisEval367E#1 = RMul(one30B9,prod367D);
          real prod367F#1 = RMul(prod53641,prod35B4);
          real basisEval3680#1 = RMul(one30B9,prod367F);
          real prod3681#1 = RMul(prod53641,prod35B8);
          real basisEval3682#1 = RMul(one30B9,prod3681);
          real prod63683#1 = RMul(prod53641,varAcc35AC);
          real prod3684#1 = RMul(prod63683,prod30BA);
          real basisEval3685#1 = RMul(one30B9,prod3684);
          tensor[84] intermediateCons3686#1 = <tensor[84]>[basisEval311F,basisEval35B6,basisEval35BA,basisEval35BD,basisEval35C1,basisEval35C4,basisEval35C8,basisEval35CA,basisEval35CC,basisEval35CF,basisEval35D3,basisEval35D6,basisEval35D9,basisEval35DD,basisEval35DF,basisEval35E1,basisEval35E3,basisEval35E5,basisEval35E7,basisEval35EA,basisEval35EE,basisEval35F1,basisEval35F4,basisEval35F7,basisEval35FB,basisEval35FD,basisEval35FF,basisEval3601,basisEval3603,basisEval3605,basisEval3607,basisEval3609,basisEval360B,basisEval360D,basisEval3610,basisEval3614,basisEval3617,basisEval361A,basisEval361D,basisEval3620,basisEval3624,basisEval3626,basisEval3628,basisEval362A,basisEval362C,basisEval362E,basisEval3630,basisEval3632,basisEval3634,basisEval3636,basisEval3638,basisEval363A,basisEval363C,basisEval363E,basisEval3640,basisEval3643,basisEval3647,basisEval364A,basisEval364D,basisEval3650,basisEval3653,basisEval3656,basisEval365A,basisEval365C,basisEval365E,basisEval3660,basisEval3662,basisEval3664,basisEval3666,basisEval3668,basisEval366A,basisEval366C,basisEval366E,basisEval3670,basisEval3672,basisEval3674,basisEval3676,basisEval3678,basisEval367A,basisEval367C,basisEval367E,basisEval3680,basisEval3682,basisEval3685];
          real probe_l_83763#1 = VDot<84>(dofs2F60,intermediateCons3686);
          real op1_e3_l_93766#1 = RSub(probe_l_83763,cmin359D);
          real op1_e3_l_103769#1 = RSub(cmax359F,cmin359D);
          real op1_e3_l_11376C#1 = RDiv(op1_e3_l_93766,op1_e3_l_103769);
          real op1_e3_l_12376F#1 = RSub(one30B9,basisEval30B7);
          real op1_e3_l_133772#1 = RMul(op1_e3_l_11376C,op1_e3_l_12376F);
          real _t3775#1 = RAdd(basisEval30B7,op1_e3_l_133772);
          real Mtransform3778#1 = Transform<IMAGE1D<double[3]>>(cmap2311);
          real MxPos377A#1 = RMul(Mtransform3778,_t3775);
          real Ttranslate377D#1 = Translate<IMAGE1D<double[3]>>(cmap2311);
          real imgPos377F#2 = RAdd(MxPos377A,Ttranslate377D);
          real nd3782#2 = Floor<1>(imgPos377F);
          real f3784#2 = RSub(imgPos377F,nd3782);
          int n3787#5 = RealToInt<1>(nd3782);
          bool isInside378B#1 = IndexInside<IMAGE1D<double[3]>,2>(n3787,cmap2311);
          if isInside378B then goto ASSIGN3C76 else goto ASSIGN3C6E
        ASSIGN3C76:  preds = [COND378D]
          int offp3792#3 = IMul(ilit2C1B,n3787);
          real v0_3793#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3792);
          int addRes3795#1 = IAdd(n3787,ilit2C15);
          int offp3796#3 = IMul(ilit2C1B,addRes3795);
          real v1_3797#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3796);
          int offp3799#1 = IAdd(offp3792,ilit2C15);
          real v0_379A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3799);
          int offp379B#1 = IAdd(offp3796,ilit2C15);
          real v1_379C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379B);
          int offp379F#1 = IAdd(offp3792,ilit2C18);
          real v0_37A0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp379F);
          int offp37A1#1 = IAdd(offp3796,ilit2C18);
          real v1_37A2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp37A1);
          tensor[3,2] voxels37A4#1 = <tensor[3,2]>[v0_3793,v1_3797,v0_379A,v1_379C,v0_37A0,v1_37A2];
          goto JOIN37BE
        JOIN37BE:  preds = [ASSIGN3C86,ASSIGN3C87]
          tensor[3,2] ldvox37BC#3 = phi(voxels37A4,voxels387F)
          real idx37C1#1 = RSub(f3784,one30B9);
          tensor[2] kernX_37BF#1 = <tensor[2]>[f3784,idx37C1];
          tensor[2] a037C6#1 = <tensor[2]>[one30B9,one30B9];
          real _f37C8#1 = -0.1e1;
          tensor[2] a137C7#1 = <tensor[2]>[_f37C8,one30B9];
          tensor[2] prod137CC#1 = VMul<2>(kernX_37BF,a137C7);
          tensor[2] kevalX_d0_37C5#3 = VAdd<2>(a037C6,prod137CC);
          tensor[2] projIx37D6#1 = ProjectLast<tensor[3,2],[0]>(ldvox37BC);
          real vdot37D7#1 = VDot<2>(projIx37D6,kevalX_d0_37C5);
          tensor[2] projIx37D8#1 = ProjectLast<tensor[3,2],[1]>(ldvox37BC);
          real vdot37D9#1 = VDot<2>(projIx37D8,kevalX_d0_37C5);
          tensor[2] projIx37DA#1 = ProjectLast<tensor[3,2],[2]>(ldvox37BC);
          real vdot37DB#1 = VDot<2>(projIx37DA,kevalX_d0_37C5);
          tensor[3] mcol37D5#1 = <tensor[3]>[vdot37D7,vdot37D9,vdot37DB];
          goto JOIN37E5
        JOIN37E5:  preds = [ASSIGN37E3,COND35A5]
          tensor[3] mcol37E4#3 = phi(mcol37D5,mcol35A1)
          real op1_e3_l_6337E6#1 = RDiv(one30B9,op1_e3_l_33354E);
          tensor[3] op1_e3_l_6437EB#1 = VScale<3>(op1_e3_l_6337E6,op1_e3_l_30353C);
          tensor[3] op1_e3_l_6537EE#1 = VNeg<3>(op1_e3_l_6437EB);
          real op1_e3_l_6637F1#2 = VDot<3>(op1_e3_l_6537EE,litwsp2337);
          real op1_e3_l_6737F4#1 = RMul(op1_e3_l_6637F1,op1_e3_l_6637F1);
          real op1_e3_l_6837F7#1 = RMul(phKd2345,op1_e3_l_6737F4);
          real op1_e3_l_7037FA#1 = RSub(rayN234F,camNearVsp2333);
          real op1_e3_l_7137FD#1 = RSub(camFarVsp2335,camNearVsp2333);
          real op1_e3_l_723800#1 = RDiv(op1_e3_l_7037FA,op1_e3_l_7137FD);
          tensor[3] op1_e3_l_733803#1 = VSub<3>(mcFar232F,mcNear232D);
          tensor[3] op1_e3_l_743806#1 = VScale<3>(op1_e3_l_723800,op1_e3_l_733803);
          real op1_e3_l_753809#3 = RAdd(phKa2343,op1_e3_l_6837F7);
          tensor[3] op1_e3_l_76380C#3 = VAdd<3>(mcNear232D,op1_e3_l_743806);
          real r3810#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_76380C);
          real r3811#1 = TensorIndex<tensor[3],[0]>(mcol37E4);
          real r3812#1 = RMul(op1_e3_l_753809,r3810);
          real r3813#1 = RMul(r3812,r3811);
          real r3814#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_76380C);
          real r3815#1 = TensorIndex<tensor[3],[1]>(mcol37E4);
          real r3816#1 = RMul(op1_e3_l_753809,r3814);
          real r3817#1 = RMul(r3816,r3815);
          real r3818#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_76380C);
          real r3819#1 = TensorIndex<tensor[3],[2]>(mcol37E4);
          real r381A#1 = RMul(op1_e3_l_753809,r3818);
          real r381B#1 = RMul(r381A,r3819);
          tensor[3] op1_e3_l_77380F#1 = <tensor[3]>[r3813,r3817,r381B];
          real r382C#1 = RMul(phKs2347,scomp359B);
          real r382D#3 = RMul(r382C,one30B9);
          tensor[3] op1_e3_l_78382A#1 = <tensor[3]>[r382D,r382D,r382D];
          real op1_e3_l_79383B#2 = RSub(one30B9,_t3572);
          tensor[3] op1_e3_l_80383E#3 = VAdd<3>(op1_e3_l_77380F,op1_e3_l_78382A);
          real r3842#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_80383E);
          real r3843#3 = RMul(transp234D,op1_e3_l_79383B);
          real r3844#1 = RMul(r3843,r3842);
          real r3845#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_80383E);
          real r3846#1 = RMul(r3843,r3845);
          real r3847#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_80383E);
          real r3848#1 = RMul(r3843,r3847);
          tensor[3] op1_e3_l_813841#1 = <tensor[3]>[r3844,r3846,r3848];
          tensor[3] rgb3852#2 = VAdd<3>(rgb234B,op1_e3_l_813841);
          real op1_e3_l_53855#1 = RSub(one30B9,op1_e3_l_79383B);
          real transp3858#2 = RMul(transp234D,op1_e3_l_53855);
          bool _t385B#1 = LT<real>(transp3858,transp02321);
          if _t385B then goto SAVE385E else goto JOIN3863
        SAVE385E:  preds = [COND385D]
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = basisEval30B7;
          stabilize
          goto JOIN3863
        JOIN3863:  preds = [*STABILIZE3861,COND385D]
          real transp3862#1 = phi(transp3858)
          self.rayN = rayN234F;
          self.rgb = rgb3852;
          self.transp = transp3862;
          active
        ASSIGN3C6E:  preds = [COND378D]
          int ix386A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,n3787);
          int offp386C#3 = IMul(ilit2C1B,ix386A);
          real v0_386D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp386C);
          int addRes386F#1 = IAdd(n3787,ilit2C15);
          int ix3870#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2311,addRes386F);
          int offp3871#3 = IMul(ilit2C1B,ix3870);
          real v1_3872#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3871);
          int offp3874#1 = IAdd(offp386C,ilit2C15);
          real v0_3875#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3874);
          int offp3876#1 = IAdd(offp3871,ilit2C15);
          real v1_3877#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp3876);
          int offp387A#1 = IAdd(offp386C,ilit2C18);
          real v0_387B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387A);
          int offp387C#1 = IAdd(offp3871,ilit2C18);
          real v1_387D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2311,offp387C);
          tensor[3,2] voxels387F#1 = <tensor[3,2]>[v0_386D,v1_3872,v0_3875,v1_3877,v0_387B,v1_387D];
          goto JOIN37BE
        ASSIGN3899:  preds = [COND2BFD]
          bool _t2C01#1 = false;
          goto JOIN2C02
        ASSIGN389A:  preds = [COND2BF8]
          bool _t2C04#1 = false;
          goto JOIN2C05
        ASSIGN389B:  preds = [COND2364]
          bool _t2C07#1 = false;
          goto JOIN2C08
    end update
    method stabilize
        ENTRY389C:  preds = []
          tensor[4] rgba389D#1 = self.rgba;
          tensor[3] rgb389F#3 = self.rgb;
          real transp38A1#2 = self.transp;
          real _t38A3#2 = 0.1e1;
          bool _t38A5#1 = LT<real>(transp38A1,_t38A3);
          if _t38A5 then goto ASSIGN38AA else goto JOIN38BD
        ASSIGN38AA:  preds = [COND38A7]
          real aa38A8#4 = RSub(_t38A3,transp38A1);
          real _t38AB#1 = VIndex<3,0>(rgb389F);
          real _t38AD#1 = RDiv(_t38AB,aa38A8);
          real _t38B0#1 = VIndex<3,1>(rgb389F);
          real _t38B2#1 = RDiv(_t38B0,aa38A8);
          real _t38B5#1 = VIndex<3,2>(rgb389F);
          real _t38B7#1 = RDiv(_t38B5,aa38A8);
          tensor[4] rgba38BA#1 = <tensor[4]>[_t38AD,_t38B2,_t38B7,aa38A8];
          goto JOIN38BD
        JOIN38BD:  preds = [ASSIGN38BB,COND38A7]
          tensor[4] rgba38BC#1 = phi(rgba38BA,rgba389D)
          self.rgba = rgba38BC;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY38C0:  preds = []
      int iresU38C1#1 = globals.iresU2033;
      int iresV38C3#1 = globals.iresV2034;
      int _t38C5#2 = 0;
      int _t38C7#2 = 1;
      int _t38C9#1 = ISub(iresV38C3,_t38C7);
      int[] _t38CB#1 = Range(_t38C5,_t38C9);
    FOREACH38CE:  preds = [ASSIGN38CC,NEXT38D7]
      foreach (vi38CD in _t38CB) on exit goto RETURN38D8
      int _t38CF#1 = ISub(iresU38C1,_t38C7);
      int[] _t38D1#1 = Range(_t38C5,_t38CF);
    FOREACH38D4:  preds = [ASSIGN38D2,NEXT38D6]
      foreach (ui38D3 in _t38D1) on exit goto NEXT38D7
      new ray(ui38D3,vi38CD);
      goto FOREACH38D4
    NEXT38D7:  preds = [FOREACH38D4]
      goto FOREACH38CE
    RETURN38D8:  preds = [FOREACH38CE]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) block;
input femData(Space) 0space04CF_intermedateGlobal;
input femData(FemFunc) 0U04D1_intermedateGlobal;
input int cellChoice;
input image(IMAGE1D<double[3]>) cmap;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camNear;
input real camFar;
input real camFOV;
input bool camOrtho;
input int iresU;
input int iresV;
input real rayStep;
input real refStep;
input real transp0;
input real thick;
input real fStrTh;
input real fMaskTh;
input real fBias;
input real maxAlpha;
input bool light;
input tensor[4] phong;
input tensor[3] mcNear;
input tensor[3] mcFar;
input tensor[3] litdir;
input tensor[2] cminmax;
//***** CONST INIT *****
  {
    globals.camEye = PACK(VEC3{4}(0.e0,-0.2e1,0.e0));
    globals.camAt = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    globals.camUp = PACK(VEC3{4}(0.e0,0.e0,0.1e1));
    globals.camNear = -0.4e1;
    globals.camFar = 0.4e1;
    globals.camFOV = 0.1e2;
    globals.camOrtho = false;
    globals.iresU = 100;
    globals.iresV = 100;
    globals.rayStep = 0.1e-3;
    globals.refStep = 0.1e-3;
    globals.transp0 = 0.5e-2;
    globals.thick = 0.1e-1;
    globals.fStrTh = 0.e0;
    globals.fMaskTh = 0.e0;
    globals.fBias = 0.1e0;
    globals.maxAlpha = 0.1e1;
    globals.light = false;
    globals.phong = PACK(VEC4(0.1e0,0.7e0,0.2e0,0.1e3));
    vec3{4} v_4 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    globals.mcNear = PACK(v_4);
    globals.mcFar = PACK(v_4);
    globals.litdir = PACK(VEC3{4}(0.e0,-0.1e1,0.e0));
    globals.cminmax = PACK(VEC2(0.e0,0.e0));
  }
//***** GLOBALS *****
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camDist;
global real camVmax;
global real camUmax;
global real camNearVsp;
global real camFarVsp;
global tensor[3] litwsp;
global int _t;
global femData(Space) _tX;
global femData(FemFunc) _tXX;
//***** FUNCTIONS *****
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_9;
    l__t_9 = <femData(MeshCell)[]>{};
    for i__t_10 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.block),1) {
      l__t_9 = Append<femData(MeshCell),femData(MeshCell)>(l__t_9,LoadFem<femData(MeshCell)>(globals.block,i__t_10));
    }
    femData(FuncCell) l__t_11 = LoadFem<femData(FuncCell)>(LoadFem<femData(FemFunc)>(globals.0U04D1_intermedateGlobal,LoadFem<femData(Space)>(globals.0space04CF_intermedateGlobal,globals.block)),ExtractFemItem<int,CellIndex(MeshCell)>(Subscript<femData(MeshCell)[]>(l__t_9,globals.cellChoice)));
    femData(FemFunc) l__t_12 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_11);
    vec3{4} v_13 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_14 = Sqrt(VDot<3,4>(v_13,v_13));
    real l_op1_e3_l_9_15 = RDiv(0.1e1,l_op1_e3_l_7_14);
    vec3{4} v_16 = VScale<3,4>(l_op1_e3_l_9_15,v_13);
    globals.camN = PACK(v_16);
    real l_r_18 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_19 = RMul(0.e0,l_r_18);
    real l_r_20 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_21 = RMul(0.e0,l_r_20);
    real l_r_22 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_23 = RMul(0.e0,l_r_22);
    real l_r_24 = RAdd(l_r_19,l_r_21);
    real l_r_25 = RAdd(l_r_24,l_r_23);
    real l_vdot_26 = VDot<3,4>(v_13,VEC3{4}(l_r_25,RAdd(l_r_24,RMul(0.1e1,l_r_22)),RAdd(RAdd(l_r_19,RMul(-0.1e1,l_r_20)),l_r_23)));
    real l_vdot_27 = VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_24,RMul(-0.1e1,l_r_22)),l_r_25,RAdd(RAdd(RMul(0.1e1,l_r_18),l_r_21),l_r_23)));
    real l_vdot_28 = VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_19,RMul(0.1e1,l_r_20)),l_r_23),RAdd(RAdd(RMul(-0.1e1,l_r_18),l_r_21),l_r_23),l_r_25));
    vec3{4} v_29 = VEC3{4}(l_vdot_26,l_vdot_27,l_vdot_28);
    real l_op1_e3_l_38_30 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_15,l_op1_e3_l_9_15),VDot<3,4>(v_29,v_29))));
    vec3{4} v_31 = VScale<3,4>(l_op1_e3_l_38_30,VScale<3,4>(l_op1_e3_l_9_15,v_29));
    globals.camU = PACK(v_31);
    real l_r_33 = RMul(0.e0,l_vdot_26);
    real l_r_34 = RMul(0.e0,l_vdot_27);
    real l_r_35 = RMul(0.e0,l_vdot_28);
    real l_r_36 = RAdd(l_r_33,l_r_34);
    real l_r_37 = RAdd(l_r_36,l_r_35);
    vec3{4} v_38 = VScale<3,4>(l_op1_e3_l_9_15,VEC3{4}(VDot<3,4>(v_13,VEC3{4}(l_r_37,RAdd(l_r_36,RMul(0.1e1,l_vdot_28)),RAdd(RAdd(l_r_33,RMul(-0.1e1,l_vdot_27)),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_36,RMul(-0.1e1,l_vdot_28)),l_r_37,RAdd(RAdd(RMul(0.1e1,l_vdot_26),l_r_34),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_33,RMul(0.1e1,l_vdot_27)),l_r_35),RAdd(RAdd(RMul(-0.1e1,l_vdot_26),l_r_34),l_r_35),l_r_37))));
    real l_r_39 = RMul(l_op1_e3_l_9_15,l_op1_e3_l_38_30);
    real l_r_40 = RMul(l_r_39,VIndex<3,4,0>(v_38));
    real l_r_41 = RMul(l_r_39,VIndex<3,4,1>(v_38));
    real l_r_42 = RMul(l_r_39,VIndex<3,4,2>(v_38));
    globals.camV = PACK(VEC3{4}(l_r_40,l_r_41,l_r_42));
    globals.camDist = l_op1_e3_l_7_14;
    real l_op1_e3_l_10_44 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_44,l_op1_e3_l_7_14);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_44),l_op1_e3_l_7_14),IntToReal(globals.iresV));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_7_14);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_7_14);
    real l_r_45 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.litdir));
    real l_r_46 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.litdir));
    real l_r_47 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.litdir));
    globals.litwsp = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.litdir)),LOAD_0(TensorRef<[3]>(globals.litdir))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_31),l_r_45),RMul(l_r_40,l_r_46)),RMul(VIndex<3,4,0>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_31),l_r_45),RMul(l_r_41,l_r_46)),RMul(VIndex<3,4,1>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_31),l_r_45),RMul(l_r_42,l_r_46)),RMul(VIndex<3,4,2>(v_16),l_r_47)))));
    globals._t = ExtractFemItem<int,CellIndex(FuncCell)>(l__t_11);
    globals._tX = ExtractFem<femData(Space),femData(FemFunc)>(l__t_12);
    globals._tXX = l__t_12;
  }
//***** STRAND *****
strand ray (int p_ui_49,int p_vi_50) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] UV;
  tensor[3] rayOrig;
  tensor[3] rayVec;
  real alphaFix;
  tensor[3] eyeDir;
  real phKa;
  real phKd;
  real phKs;
  real phSp;
  varying output tensor[4] rgba;
  output real raw;
  varying tensor[3] rgb;
  varying real transp;
  initialize (globals) {
    vec3{4} v_59;
    vec3{4} v_57;
    real l_op1_e3_l_9_51 = RNeg(globals.camUmax);
    real l_rayU_52 = RAdd(l_op1_e3_l_9_51,RMul(RDiv(RSub(IntToReal(p_ui_49),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_51)));
    real l_op1_e3_l_9_53 = RNeg(globals.camVmax);
    real l_rayV_54 = RAdd(l_op1_e3_l_9_53,RMul(RDiv(RSub(IntToReal(p_vi_50),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_53)));
    vec3{4} v_55 = VAdd<3,4>(VScale<3,4>(l_rayU_52,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_54,LOAD_0(TensorRef<[3]>(globals.camV))));
    vec3{4} v_56 = v_55;
    if (globals.camOrtho) {
      v_57 = v_56;
    } else {
      v_57 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_58 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_57);
    if (globals.camOrtho) {
      v_59 = VEC3{4}(0.e0,0.e0,0.e0);
    } else {
      real l_r_60 = RDiv(0.1e1,globals.camDist);
      v_59 = VEC3{4}(RMul(l_r_60,VIndex<3,4,0>(v_56)),RMul(l_r_60,VIndex<3,4,1>(v_56)),RMul(l_r_60,VIndex<3,4,2>(v_56)));
    }
    vec3{4} v_61 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),v_59);
    real l_op1_e3_l_7_62 = Sqrt(VDot<3,4>(v_61,v_61));
    self.rayU = l_rayU_52;
    self.rayV = l_rayV_54;
    self.rayN = globals.camNearVsp;
    self.UV = PACK(v_56);
    self.rayOrig = PACK(v_58);
    self.rayVec = PACK(v_61);
    self.alphaFix = RDiv(RMul(globals.rayStep,l_op1_e3_l_7_62),globals.refStep);
    self.eyeDir = PACK(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_7_62),v_61)));
    self.phKa = VIndex<4,4,0>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phKd = VIndex<4,4,1>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phKs = VIndex<4,4,2>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phSp = VIndex<4,4,3>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.rgba = PACK(VEC4(0.e0,0.e0,0.e0,0.e0));
    self.raw = 0.e0;
    self.rgb = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    self.transp = 0.1e1;
  }
  update (globals) {
    real l_transp_924;
    vec3{4} v_912;
    real l_scomp_862;
    tensor[3][3] l_E_789;
    real[3] l_evals_788;
    bool l__t_449;
    real l_rayN_69 = RAdd(self.rayN,globals.rayStep);
    if (GT<real>(l_rayN_69,globals.camFarVsp)) {
      self.rayN = l_rayN_69;
      stabilize;
    }
    vec3{4} v_70 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_69,LOAD_0(TensorRef<[3]>(self.rayVec))));
    tensor[3] _arg_71 = PACK(v_70);
    vec3{4} v_72 = v_70;
    if (ExtractFemItemN<[femData(Mesh),tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),"","",[],int>(ExtractFemItem<femData(RefCell),RefCell(Mesh)>(globals.block),_arg_71,0.1e-8)) {
      bool l__t_448;
      int l_mulRes_73 = IMul(globals._t,84);
      int t_74 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_73);
      int t_75 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,1));
      int t_76 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,2));
      int t_77 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,3));
      int t_78 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,4));
      int t_79 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,5));
      int t_80 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,6));
      int t_81 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,7));
      int t_82 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,8));
      int t_83 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,9));
      int t_84 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,10));
      int t_85 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,11));
      int t_86 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,12));
      int t_87 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,13));
      int t_88 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,14));
      int t_89 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,15));
      int t_90 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,16));
      int t_91 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,17));
      int t_92 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,18));
      int t_93 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,19));
      int t_94 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,20));
      int t_95 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,21));
      int t_96 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,22));
      int t_97 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,23));
      int t_98 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,24));
      int t_99 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,25));
      int t_100 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,26));
      int t_101 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,27));
      int t_102 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,28));
      int t_103 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,29));
      int t_104 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,30));
      int t_105 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,31));
      int t_106 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,32));
      int t_107 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,33));
      int t_108 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,34));
      int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,35));
      int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,36));
      int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,37));
      int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,38));
      int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,39));
      int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,40));
      int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,41));
      int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,42));
      int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,43));
      int t_118 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,44));
      int t_119 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,45));
      int t_120 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,46));
      int t_121 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,47));
      int t_122 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,48));
      int t_123 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,49));
      int t_124 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,50));
      int t_125 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,51));
      int t_126 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,52));
      int t_127 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,53));
      int t_128 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,54));
      int t_129 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,55));
      int t_130 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,56));
      int t_131 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,57));
      int t_132 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,58));
      int t_133 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,59));
      int t_134 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,60));
      int t_135 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,61));
      int t_136 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,62));
      int t_137 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,63));
      int t_138 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,64));
      int t_139 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,65));
      int t_140 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,66));
      int t_141 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,67));
      int t_142 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,68));
      int t_143 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,69));
      int t_144 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,70));
      int t_145 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,71));
      int t_146 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,72));
      int t_147 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,73));
      int t_148 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,74));
      int t_149 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,75));
      int t_150 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,76));
      int t_151 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,77));
      int t_152 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,78));
      int t_153 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,79));
      int t_154 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,80));
      int t_155 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,81));
      int t_156 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,82));
      int t_157 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,83));
      real t_158 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_157));
      real t_159 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_156));
      real t_160 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_155));
      real t_161 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_154));
      real t_162 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_153));
      real t_163 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_152));
      real t_164 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_151));
      real t_165 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_150));
      real t_166 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_149));
      real t_167 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_148));
      real t_168 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_147));
      real t_169 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_146));
      real t_170 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_145));
      real t_171 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_144));
      real t_172 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_143));
      real t_173 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_142));
      real t_174 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_141));
      real t_175 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_140));
      real t_176 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_139));
      real t_177 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_138));
      real t_178 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_137));
      real t_179 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_136));
      real t_180 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_135));
      real t_181 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_134));
      real t_182 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_133));
      real t_183 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_132));
      real t_184 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_131));
      real t_185 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_130));
      real t_186 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_129));
      real t_187 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_128));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_127));
      real t_189 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_126));
      real t_190 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_125));
      real t_191 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_124));
      real t_192 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_123));
      real t_193 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_122));
      real t_194 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_121));
      real t_195 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_120));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_119));
      real t_197 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_118));
      real t_198 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_117));
      real t_199 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_116));
      real t_200 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_115));
      real t_201 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_114));
      real t_202 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_113));
      real t_203 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_112));
      real t_204 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_111));
      real t_205 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_110));
      real t_206 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_109));
      real t_207 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_108));
      real t_208 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_107));
      real t_209 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_106));
      real t_210 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_105));
      real t_211 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_104));
      real t_212 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_103));
      real t_213 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_102));
      real t_214 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_101));
      real t_215 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_100));
      real t_216 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_99));
      real t_217 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_98));
      real t_218 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_97));
      real t_219 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_96));
      real t_220 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_95));
      real t_221 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_94));
      real t_222 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_93));
      real t_223 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_92));
      real t_224 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_91));
      real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_90));
      real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_89));
      real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_88));
      real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_87));
      real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_86));
      real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_85));
      real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_84));
      real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_83));
      real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_82));
      real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_81));
      real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_80));
      real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_79));
      real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_78));
      real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_77));
      real t_239 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_76));
      real t_240 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_75));
      real t_241 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_74));
      vec4 v_242 = VEC4(t_241,t_240,t_239,t_238);
      vec4 v_243 = VEC4(t_237,t_236,t_235,t_234);
      vec4 v_244 = VEC4(t_233,t_232,t_231,t_230);
      vec4 v_245 = VEC4(t_229,t_228,t_227,t_226);
      vec4 v_246 = VEC4(t_225,t_224,t_223,t_222);
      vec4 v_247 = VEC4(t_221,t_220,t_219,t_218);
      vec4 v_248 = VEC4(t_217,t_216,t_215,t_214);
      vec4 v_249 = VEC4(t_213,t_212,t_211,t_210);
      vec4 v_250 = VEC4(t_209,t_208,t_207,t_206);
      vec4 v_251 = VEC4(t_205,t_204,t_203,t_202);
      vec4 v_252 = VEC4(t_201,t_200,t_199,t_198);
      vec4 v_253 = VEC4(t_197,t_196,t_195,t_194);
      vec4 v_254 = VEC4(t_193,t_192,t_191,t_190);
      vec4 v_255 = VEC4(t_189,t_188,t_187,t_186);
      vec4 v_256 = VEC4(t_185,t_184,t_183,t_182);
      vec4 v_257 = VEC4(t_181,t_180,t_179,t_178);
      vec4 v_258 = VEC4(t_177,t_176,t_175,t_174);
      vec4 v_259 = VEC4(t_173,t_172,t_171,t_170);
      vec4 v_260 = VEC4(t_169,t_168,t_167,t_166);
      vec4 v_261 = VEC4(t_165,t_164,t_163,t_162);
      vec4 v_262 = VEC4(t_161,t_160,t_159,t_158);
      real l_varAcc_263 = VIndex<3,4,0>(v_72);
      real l_varAcc_264 = VIndex<3,4,1>(v_72);
      real l_varAcc_265 = VIndex<3,4,2>(v_72);
      real l_prod_266 = RMul(0.1e1,0.1e1);
      real l_prod_267 = RMul(0.1e1,l_prod_266);
      real l_basisEval_268 = RMul(0.2e1,l_prod_267);
      real l_prod_269 = RMul(0.1e1,l_varAcc_265);
      real l_prod_270 = RMul(0.1e1,l_prod_269);
      real l_basisEval_271 = RMul(0.2e1,l_prod_270);
      real l_prod_272 = RMul(l_varAcc_264,0.1e1);
      real l_prod_273 = RMul(0.1e1,l_prod_272);
      real l_basisEval_274 = RMul(0.2e1,l_prod_273);
      real l_prod_275 = RMul(l_varAcc_263,l_prod_266);
      real l_prod2_276 = RMul(l_varAcc_265,l_varAcc_265);
      real l_prod_277 = RMul(0.1e1,l_prod2_276);
      real l_prod_278 = RMul(0.1e1,l_prod_277);
      real l_basisEval_279 = RMul(0.2e1,l_prod_278);
      real l_prod_280 = RMul(l_varAcc_264,l_varAcc_265);
      real l_prod_281 = RMul(0.1e1,l_prod_280);
      real l_basisEval_282 = RMul(0.2e1,l_prod_281);
      real l_prod2_283 = RMul(l_varAcc_264,l_varAcc_264);
      real l_prod_284 = RMul(l_prod2_283,0.1e1);
      real l_prod_285 = RMul(0.1e1,l_prod_284);
      real l_basisEval_286 = RMul(0.2e1,l_prod_285);
      real l_prod_287 = RMul(l_varAcc_263,l_prod_269);
      real l_basisEval_288 = RMul(0.6e1,l_prod_287);
      real l_prod_289 = RMul(l_varAcc_263,l_prod_272);
      real l_basisEval_290 = RMul(0.6e1,l_prod_289);
      real l_prod2_291 = RMul(l_varAcc_263,l_varAcc_263);
      real l_prod_292 = RMul(l_prod2_291,l_prod_266);
      real l_prod3_293 = RMul(l_prod2_276,l_varAcc_265);
      real l_prod_294 = RMul(0.1e1,l_prod3_293);
      real l_prod_295 = RMul(0.1e1,l_prod_294);
      real l_basisEval_296 = RMul(0.2e1,l_prod_295);
      real l_prod_297 = RMul(l_varAcc_264,l_prod2_276);
      real l_prod_298 = RMul(0.1e1,l_prod_297);
      real l_basisEval_299 = RMul(0.2e1,l_prod_298);
      real l_prod_300 = RMul(l_prod2_283,l_varAcc_265);
      real l_prod_301 = RMul(0.1e1,l_prod_300);
      real l_basisEval_302 = RMul(0.2e1,l_prod_301);
      real l_prod3_303 = RMul(l_prod2_283,l_varAcc_264);
      real l_prod_304 = RMul(l_prod3_303,0.1e1);
      real l_prod_305 = RMul(0.1e1,l_prod_304);
      real l_basisEval_306 = RMul(0.2e1,l_prod_305);
      real l_prod_307 = RMul(l_varAcc_263,l_prod_277);
      real l_basisEval_308 = RMul(0.6e1,l_prod_307);
      real l_prod_309 = RMul(l_varAcc_263,l_prod_280);
      real l_basisEval_310 = RMul(0.6e1,l_prod_309);
      real l_prod_311 = RMul(l_varAcc_263,l_prod_284);
      real l_basisEval_312 = RMul(0.6e1,l_prod_311);
      real l_prod_313 = RMul(l_prod2_291,l_prod_269);
      real l_prod_314 = RMul(l_prod2_291,l_prod_272);
      real l_prod3_315 = RMul(l_prod2_291,l_varAcc_263);
      real l_prod_316 = RMul(l_prod3_315,l_prod_266);
      real l_prod4_317 = RMul(l_prod3_293,l_varAcc_265);
      real l_prod_318 = RMul(0.1e1,l_prod4_317);
      real l_prod_319 = RMul(0.1e1,l_prod_318);
      real l_basisEval_320 = RMul(0.2e1,l_prod_319);
      real l_prod_321 = RMul(l_varAcc_264,l_prod3_293);
      real l_prod_322 = RMul(0.1e1,l_prod_321);
      real l_basisEval_323 = RMul(0.2e1,l_prod_322);
      real l_prod_324 = RMul(l_prod2_283,l_prod2_276);
      real l_prod_325 = RMul(0.1e1,l_prod_324);
      real l_prod_326 = RMul(l_prod3_303,l_varAcc_265);
      real l_prod_327 = RMul(0.1e1,l_prod_326);
      real l_basisEval_328 = RMul(0.2e1,l_prod_327);
      real l_prod4_329 = RMul(l_prod3_303,l_varAcc_264);
      real l_prod_330 = RMul(l_prod4_329,0.1e1);
      real l_prod_331 = RMul(0.1e1,l_prod_330);
      real l_basisEval_332 = RMul(0.2e1,l_prod_331);
      real l_prod_333 = RMul(l_varAcc_263,l_prod_294);
      real l_prod_334 = RMul(l_varAcc_263,l_prod_297);
      real l_basisEval_335 = RMul(0.6e1,l_prod_334);
      real l_prod_336 = RMul(l_varAcc_263,l_prod_300);
      real l_basisEval_337 = RMul(0.6e1,l_prod_336);
      real l_prod_338 = RMul(l_varAcc_263,l_prod_304);
      real l_prod_339 = RMul(l_prod2_291,l_prod_277);
      real l_basisEval_340 = RMul(0.12e2,l_prod_339);
      real l_prod_341 = RMul(l_prod2_291,l_prod_280);
      real l_prod_342 = RMul(l_prod2_291,l_prod_284);
      real l_basisEval_343 = RMul(0.12e2,l_prod_342);
      real l_prod_344 = RMul(l_prod3_315,l_prod_269);
      real l_prod_345 = RMul(l_prod3_315,l_prod_272);
      real l_prod4_346 = RMul(l_prod3_315,l_varAcc_263);
      real l_prod_347 = RMul(l_prod4_346,l_prod_266);
      real l_basisEval_348 = RMul(0.1e1,l_prod_267);
      real l_basisEval_349 = RMul(0.1e1,l_prod_270);
      real l_basisEval_350 = RMul(0.2e1,l_prod_275);
      real l_basisEval_351 = RMul(0.1e1,l_prod_278);
      real l_basisEval_352 = RMul(0.3e1,l_prod_285);
      real l_basisEval_353 = RMul(0.2e1,l_prod_287);
      real l_basisEval_354 = RMul(0.3e1,l_prod_292);
      real l_basisEval_355 = RMul(0.1e1,l_prod_295);
      real l_basisEval_356 = RMul(0.3e1,l_prod_301);
      real l_basisEval_357 = RMul(0.4e1,l_prod_305);
      real l_basisEval_358 = RMul(0.2e1,l_prod_307);
      real l_basisEval_359 = RMul(0.4e1,l_prod_309);
      real l_basisEval_360 = RMul(0.3e1,l_prod_313);
      real l_basisEval_361 = RMul(0.6e1,l_prod_314);
      real l_basisEval_362 = RMul(0.4e1,l_prod_316);
      real l_basisEval_363 = RMul(0.1e1,l_prod_319);
      real l_basisEval_364 = RMul(0.3e1,l_prod_325);
      real l_basisEval_365 = RMul(0.4e1,l_prod_327);
      real l_basisEval_366 = RMul(0.5e1,l_prod_331);
      real l_basisEval_367 = RMul(0.2e1,l_prod_333);
      real l_basisEval_368 = RMul(0.3e1,l_prod_339);
      real l_basisEval_369 = RMul(0.6e1,l_prod_341);
      real l_basisEval_370 = RMul(0.4e1,l_prod_344);
      real l_basisEval_371 = RMul(0.5e1,l_prod_347);
      real l_basisEval_372 = RMul(0.1e1,l_prod_273);
      real l_basisEval_373 = RMul(0.3e1,l_prod_278);
      real l_basisEval_374 = RMul(0.1e1,l_prod_285);
      real l_basisEval_375 = RMul(0.2e1,l_prod_289);
      real l_basisEval_376 = RMul(0.4e1,l_prod_295);
      real l_basisEval_377 = RMul(0.3e1,l_prod_298);
      real l_basisEval_378 = RMul(0.1e1,l_prod_305);
      real l_basisEval_379 = RMul(0.2e1,l_prod_311);
      real l_basisEval_380 = RMul(0.6e1,l_prod_313);
      real l_basisEval_381 = RMul(0.3e1,l_prod_314);
      real l_basisEval_382 = RMul(0.5e1,l_prod_319);
      real l_basisEval_383 = RMul(0.4e1,l_prod_322);
      real l_basisEval_384 = RMul(0.1e1,l_prod_331);
      real l_basisEval_385 = RMul(0.2e1,l_prod_338);
      real l_basisEval_386 = RMul(0.3e1,l_prod_342);
      real l_basisEval_387 = RMul(0.4e1,l_prod_345);
      real l_basisEval_388 = RMul(0.6e1,l_prod_281);
      real l_basisEval_389 = RMul(0.2e1,l_prod_292);
      real l_basisEval_390 = RMul(0.6e1,l_prod_298);
      real l_basisEval_391 = RMul(0.2e1,l_prod_313);
      real l_basisEval_392 = RMul(0.2e1,l_prod_316);
      real l_basisEval_393 = RMul(0.12e2,l_prod_325);
      real l_basisEval_394 = RMul(0.2e1,l_prod_344);
      real l_basisEval_395 = RMul(0.2e1,l_prod_347);
      real l_basisEval_396 = RMul(0.1e1,l_prod_275);
      real l_basisEval_397 = RMul(0.1e1,l_prod_292);
      real l_basisEval_398 = RMul(0.6e1,l_prod_301);
      real l_basisEval_399 = RMul(0.3e1,l_prod_307);
      real l_basisEval_400 = RMul(0.3e1,l_prod_311);
      real l_basisEval_401 = RMul(0.2e1,l_prod_314);
      real l_basisEval_402 = RMul(0.1e1,l_prod_316);
      real l_basisEval_403 = RMul(0.4e1,l_prod_333);
      real l_basisEval_404 = RMul(0.4e1,l_prod_338);
      real l_basisEval_405 = RMul(0.2e1,l_prod_345);
      real l_basisEval_406 = RMul(0.1e1,l_prod_347);
      real l_vdot_407 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_348,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_274,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_351,l_basisEval_282)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_352,0.e0,l_basisEval_353,RMul(0.4e1,l_prod_289))),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_354,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_355,l_basisEval_299)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_356,l_basisEval_357,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_359,l_basisEval_312,0.e0,l_basisEval_360)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_361,0.e0,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_366,0.e0,l_basisEval_367,RMul(0.4e1,l_prod_334))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_337,RMul(0.8e1,l_prod_338),0.e0,l_basisEval_368)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_369,RMul(0.9e1,l_prod_342),0.e0,l_basisEval_370)),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.8e1,l_prod_345),0.e0,l_basisEval_371,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_408 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_372)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_373,l_basisEval_282,l_basisEval_374)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,RMul(0.4e1,l_prod_287),l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_354,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_376,l_basisEval_377,l_basisEval_302)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_378,0.e0,l_basisEval_308,l_basisEval_359)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_379,0.e0,l_basisEval_380,l_basisEval_381)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_362,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.8e1,l_prod_333),l_basisEval_335,RMul(0.4e1,l_prod_336))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_385,0.e0,RMul(0.9e1,l_prod_339),l_basisEval_369)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_386,0.e0,RMul(0.8e1,l_prod_344),l_basisEval_387)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_371,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_409 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_274,0.e0,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_373,RMul(0.4e1,l_prod_281),l_basisEval_352)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_353,l_basisEval_375)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_376,l_basisEval_390,l_basisEval_398,l_basisEval_357)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_399,l_basisEval_359)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_400,0.e0,0.e0,l_basisEval_391)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_401,0.e0,0.e0,l_basisEval_402)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_382,RMul(0.8e1,l_prod_322),RMul(0.9e1,l_prod_325))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.8e1,l_prod_327),l_basisEval_366,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_403,l_basisEval_335,l_basisEval_337,l_basisEval_404)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,0.e0,l_basisEval_368,RMul(0.4e1,l_prod_341))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_386,0.e0,0.e0,l_basisEval_394)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_405,0.e0,0.e0,l_basisEval_406)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_410 = <tensor[3,3]>[RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_271,l_basisEval_274,RMul(0.6e1,l_prod_275))),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_279,l_basisEval_282,l_basisEval_286)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_288,l_basisEval_290,RMul(0.12e2,l_prod_292),0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_296,l_basisEval_299)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_302,l_basisEval_306,l_basisEval_308,l_basisEval_310)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_312,RMul(0.12e2,l_prod_313),RMul(0.12e2,l_prod_314),RMul(0.20e2,l_prod_316))),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_320,l_basisEval_323,RMul(0.2e1,l_prod_325))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_328,l_basisEval_332,RMul(0.6e1,l_prod_333),l_basisEval_335)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_337,RMul(0.6e1,l_prod_338),l_basisEval_340,RMul(0.12e2,l_prod_341))),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_343,RMul(0.20e2,l_prod_344),RMul(0.20e2,l_prod_345),RMul(0.30e2,l_prod_347))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_407,l_vdot_408,l_vdot_407,RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_271,RMul(0.6e1,l_prod_273),0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_350,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,l_basisEval_279,l_basisEval_388)),RAdd(VDot<4,4>(v_248,VEC4(RMul(0.12e2,l_prod_285),0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_290,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,l_basisEval_296,l_basisEval_390,RMul(0.12e2,l_prod_301))),RAdd(VDot<4,4>(v_252,VEC4(RMul(0.20e2,l_prod_305),0.e0,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_310,RMul(0.12e2,l_prod_311),0.e0,0.e0)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_391,l_basisEval_361,0.e0,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_392,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,l_basisEval_320,RMul(0.6e1,l_prod_322))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_393,RMul(0.20e2,l_prod_327),RMul(0.30e2,l_prod_331),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,l_basisEval_367,l_basisEval_335,RMul(0.12e2,l_prod_336))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.20e2,l_prod_338),0.e0,0.e0,RMul(0.2e1,l_prod_339))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_369,l_basisEval_343,0.e0,0.e0)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_394,RMul(0.6e1,l_prod_345),0.e0,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_395,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_409,l_vdot_408,l_vdot_409,RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_270),l_basisEval_274)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(RMul(0.12e2,l_prod_278),l_basisEval_388,l_basisEval_286,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_288,l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_389,0.e0,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_295))),RAdd(VDot<4,4>(v_251,VEC4(RMul(0.12e2,l_prod_298),l_basisEval_398,l_basisEval_306,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,RMul(0.12e2,l_prod_307),l_basisEval_310,l_basisEval_379)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_380,l_basisEval_401)),RAdd(VDot<4,4>(v_254,VEC4(0.e0,0.e0,l_basisEval_392,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.30e2,l_prod_319),RMul(0.20e2,l_prod_322),l_basisEval_393,RMul(0.6e1,l_prod_327))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_332,0.e0,0.e0,RMul(0.20e2,l_prod_333))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.12e2,l_prod_334),l_basisEval_337,l_basisEval_385,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_340,l_basisEval_369,RMul(0.2e1,l_prod_342))),RAdd(VDot<4,4>(v_260,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_344),l_basisEval_405)),RAdd(VDot<4,4>(v_261,VEC4(0.e0,0.e0,l_basisEval_395,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      real[3] l__t_411 = EigenVals3x3(TensorRef<[3,3]>(t_410));
      real l_basisEval_412 = RMul(0.2e1,l_prod_309);
      real l_basisEval_413 = RMul(0.2e1,l_prod_334);
      real l_basisEval_414 = RMul(0.2e1,l_prod_336);
      real l_prod_415 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_317,l_varAcc_265)));
      real l_basisEval_416 = RMul(0.1e1,l_prod_415);
      real l_prod_417 = RMul(0.1e1,RMul(l_varAcc_264,l_prod4_317));
      real l_prod_418 = RMul(0.1e1,RMul(l_prod2_283,l_prod3_293));
      real l_prod_419 = RMul(0.1e1,RMul(l_prod3_303,l_prod2_276));
      real l_prod_420 = RMul(0.1e1,RMul(l_prod4_329,l_varAcc_265));
      real l_prod_421 = RMul(0.1e1,RMul(RMul(l_prod4_329,l_varAcc_264),0.1e1));
      real l_basisEval_422 = RMul(0.1e1,l_prod_421);
      real l_prod_423 = RMul(l_varAcc_263,l_prod_318);
      real l_prod_424 = RMul(l_varAcc_263,l_prod_321);
      real l_basisEval_425 = RMul(0.2e1,l_prod_424);
      real l_prod_426 = RMul(l_varAcc_263,l_prod_324);
      real l_prod_427 = RMul(l_varAcc_263,l_prod_326);
      real l_basisEval_428 = RMul(0.2e1,l_prod_427);
      real l_prod_429 = RMul(l_varAcc_263,l_prod_330);
      real l_prod_430 = RMul(l_prod2_291,l_prod_294);
      real l_prod_431 = RMul(l_prod2_291,l_prod_297);
      real l_basisEval_432 = RMul(0.3e1,l_prod_431);
      real l_prod_433 = RMul(l_prod2_291,l_prod_300);
      real l_basisEval_434 = RMul(0.3e1,l_prod_433);
      real l_prod_435 = RMul(l_prod2_291,l_prod_304);
      real l_prod_436 = RMul(l_prod3_315,l_prod_277);
      real l_prod_437 = RMul(l_prod3_315,l_prod_280);
      real l_prod_438 = RMul(l_prod3_315,l_prod_284);
      real l_prod_439 = RMul(l_prod4_346,l_prod_269);
      real l_prod_440 = RMul(l_prod4_346,l_prod_272);
      real l_prod_441 = RMul(RMul(l_prod4_346,l_varAcc_263),l_prod_266);
      real l_basisEval_442 = RMul(0.2e1,l_prod_341);
      real l_basisEval_443 = RMul(0.3e1,l_prod_426);
      real l_basisEval_444 = RMul(0.2e1,l_prod_437);
      real l_basisEval_445 = RMul(0.1e1,l_prod_441);
      vec3{4} v_446 = VEC3{4}(RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_372,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_351,RMul(0.1e1,l_prod_281))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_374,l_basisEval_353,l_basisEval_375,l_basisEval_354)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_355,RMul(0.1e1,l_prod_298),RMul(0.1e1,l_prod_301))),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_378,l_basisEval_358,l_basisEval_412,l_basisEval_379)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_360,l_basisEval_381,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_363,RMul(0.1e1,l_prod_322),RMul(0.1e1,l_prod_325))),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_327),l_basisEval_384,l_basisEval_367,l_basisEval_413)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_414,l_basisEval_385,l_basisEval_368,RMul(0.3e1,l_prod_341))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_386,l_basisEval_370,l_basisEval_387,l_basisEval_371)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_416)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_417),RMul(0.1e1,l_prod_418),RMul(0.1e1,l_prod_419),RMul(0.1e1,l_prod_420))),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_422,RMul(0.2e1,l_prod_423),l_basisEval_425,RMul(0.2e1,l_prod_426))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_428,RMul(0.2e1,l_prod_429),RMul(0.3e1,l_prod_430),l_basisEval_432)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_434,RMul(0.3e1,l_prod_435),RMul(0.4e1,l_prod_436),RMul(0.4e1,l_prod_437))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.4e1,l_prod_438),RMul(0.5e1,l_prod_439),RMul(0.5e1,l_prod_440),RMul(0.6e1,l_prod_441))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_349,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_396,0.e0,0.e0,l_basisEval_351)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_282,l_basisEval_352,0.e0,RMul(0.1e1,l_prod_287))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_375,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_355,l_basisEval_299,l_basisEval_356)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_357,0.e0,RMul(0.1e1,l_prod_307),l_basisEval_412)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_400,0.e0,RMul(0.1e1,l_prod_313),l_basisEval_401)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_402,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_366,0.e0,RMul(0.1e1,l_prod_333),l_basisEval_413)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.3e1,l_prod_336),l_basisEval_404,0.e0,RMul(0.1e1,l_prod_339))),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_442,l_basisEval_386,0.e0,RMul(0.1e1,l_prod_344))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_405,0.e0,l_basisEval_406,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_416,RMul(0.2e1,l_prod_417),RMul(0.3e1,l_prod_418))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.4e1,l_prod_419),RMul(0.5e1,l_prod_420),RMul(0.6e1,l_prod_421),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_423),l_basisEval_425,l_basisEval_443,RMul(0.4e1,l_prod_427))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.5e1,l_prod_429),0.e0,RMul(0.1e1,l_prod_430),RMul(0.2e1,l_prod_431))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_434,RMul(0.4e1,l_prod_435),0.e0,RMul(0.1e1,l_prod_436))),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_444,RMul(0.3e1,l_prod_438),0.e0,RMul(0.1e1,l_prod_439))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.2e1,l_prod_440),0.e0,l_basisEval_445,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,l_basisEval_348,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_271,l_basisEval_372,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_373,l_basisEval_282)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_374,0.e0,l_basisEval_353,RMul(0.1e1,l_prod_289))),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_397,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_376,l_basisEval_377,l_basisEval_302,l_basisEval_378)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_399,l_basisEval_412,RMul(0.1e1,l_prod_311))),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_391,RMul(0.1e1,l_prod_314),0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_402,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_403,RMul(0.3e1,l_prod_334),l_basisEval_414)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_338),0.e0,l_basisEval_368,l_basisEval_442)),RAdd(VDot<4,4>(v_254,VEC4(RMul(0.1e1,l_prod_342),0.e0,l_basisEval_394,RMul(0.1e1,l_prod_345))),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_406,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.6e1,l_prod_415),RMul(0.5e1,l_prod_417),RMul(0.4e1,l_prod_418),RMul(0.3e1,l_prod_419))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.2e1,l_prod_420),l_basisEval_422,0.e0,RMul(0.5e1,l_prod_423))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.4e1,l_prod_424),l_basisEval_443,l_basisEval_428,RMul(0.1e1,l_prod_429))),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.4e1,l_prod_430),l_basisEval_432,RMul(0.2e1,l_prod_433))),RAdd(VDot<4,4>(v_260,VEC4(RMul(0.1e1,l_prod_435),0.e0,RMul(0.3e1,l_prod_436),l_basisEval_444)),RAdd(VDot<4,4>(v_261,VEC4(RMul(0.1e1,l_prod_438),0.e0,RMul(0.2e1,l_prod_439),RMul(0.1e1,l_prod_440))),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_445,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)))))))))))))))))))))));
      if (GT<real>(RDiv(RNeg(Subscript<real[3]>(l__t_411,1)),RAdd(globals.fBias,Sqrt(VDot<3,4>(v_446,v_446)))),globals.fStrTh)) {
        bool l__t_447;
        if (GTE<real>(0.1e1,globals.fMaskTh)) {
          l__t_447 = true;
        } else {
          l__t_447 = false;
        }
        l__t_448 = l__t_447;
      } else {
        l__t_448 = false;
      }
      l__t_449 = l__t_448;
    } else {
      l__t_449 = false;
    }
    if (BNot(l__t_449)) {
      self.rayN = l_rayN_69;
      active;
    }
    int l_mulRes_450 = IMul(globals._t,84);
    int t_451 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_450);
    int t_452 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,1));
    int t_453 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,2));
    int t_454 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,3));
    int t_455 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,4));
    int t_456 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,5));
    int t_457 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,6));
    int t_458 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,7));
    int t_459 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,8));
    int t_460 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,9));
    int t_461 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,10));
    int t_462 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,11));
    int t_463 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,12));
    int t_464 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,13));
    int t_465 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,14));
    int t_466 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,15));
    int t_467 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,16));
    int t_468 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,17));
    int t_469 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,18));
    int t_470 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,19));
    int t_471 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,20));
    int t_472 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,21));
    int t_473 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,22));
    int t_474 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,23));
    int t_475 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,24));
    int t_476 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,25));
    int t_477 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,26));
    int t_478 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,27));
    int t_479 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,28));
    int t_480 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,29));
    int t_481 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,30));
    int t_482 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,31));
    int t_483 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,32));
    int t_484 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,33));
    int t_485 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,34));
    int t_486 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,35));
    int t_487 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,36));
    int t_488 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,37));
    int t_489 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,38));
    int t_490 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,39));
    int t_491 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,40));
    int t_492 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,41));
    int t_493 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,42));
    int t_494 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,43));
    int t_495 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,44));
    int t_496 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,45));
    int t_497 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,46));
    int t_498 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,47));
    int t_499 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,48));
    int t_500 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,49));
    int t_501 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,50));
    int t_502 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,51));
    int t_503 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,52));
    int t_504 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,53));
    int t_505 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,54));
    int t_506 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,55));
    int t_507 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,56));
    int t_508 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,57));
    int t_509 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,58));
    int t_510 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,59));
    int t_511 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,60));
    int t_512 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,61));
    int t_513 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,62));
    int t_514 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,63));
    int t_515 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,64));
    int t_516 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,65));
    int t_517 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,66));
    int t_518 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,67));
    int t_519 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,68));
    int t_520 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,69));
    int t_521 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,70));
    int t_522 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,71));
    int t_523 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,72));
    int t_524 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,73));
    int t_525 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,74));
    int t_526 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,75));
    int t_527 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,76));
    int t_528 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,77));
    int t_529 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,78));
    int t_530 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,79));
    int t_531 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,80));
    int t_532 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,81));
    int t_533 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,82));
    int t_534 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,83));
    real t_535 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_534));
    real t_536 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_533));
    real t_537 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_532));
    real t_538 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_531));
    real t_539 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_530));
    real t_540 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_529));
    real t_541 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_528));
    real t_542 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_527));
    real t_543 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_526));
    real t_544 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_525));
    real t_545 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_524));
    real t_546 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_523));
    real t_547 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_522));
    real t_548 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_521));
    real t_549 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_520));
    real t_550 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_519));
    real t_551 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_518));
    real t_552 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_517));
    real t_553 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_516));
    real t_554 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_515));
    real t_555 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_514));
    real t_556 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_513));
    real t_557 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_512));
    real t_558 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_511));
    real t_559 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_510));
    real t_560 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_509));
    real t_561 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_508));
    real t_562 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_507));
    real t_563 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_506));
    real t_564 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_505));
    real t_565 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_504));
    real t_566 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_503));
    real t_567 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_502));
    real t_568 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_501));
    real t_569 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_500));
    real t_570 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_499));
    real t_571 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_498));
    real t_572 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_497));
    real t_573 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_496));
    real t_574 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_495));
    real t_575 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_494));
    real t_576 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_493));
    real t_577 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_492));
    real t_578 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_491));
    real t_579 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_490));
    real t_580 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_489));
    real t_581 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_488));
    real t_582 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_487));
    real t_583 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_486));
    real t_584 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_485));
    real t_585 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_484));
    real t_586 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_483));
    real t_587 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_482));
    real t_588 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_481));
    real t_589 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_480));
    real t_590 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_479));
    real t_591 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_478));
    real t_592 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_477));
    real t_593 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_476));
    real t_594 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_475));
    real t_595 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_474));
    real t_596 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_473));
    real t_597 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_472));
    real t_598 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_471));
    real t_599 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_470));
    real t_600 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_469));
    real t_601 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_468));
    real t_602 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_467));
    real t_603 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_466));
    real t_604 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_465));
    real t_605 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_464));
    real t_606 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_463));
    real t_607 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_462));
    real t_608 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_461));
    real t_609 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_460));
    real t_610 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_459));
    real t_611 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_458));
    real t_612 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_457));
    real t_613 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_456));
    real t_614 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_455));
    real t_615 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_454));
    real t_616 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_453));
    real t_617 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_452));
    real t_618 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_451));
    vec4 v_619 = VEC4(t_618,t_617,t_616,t_615);
    vec4 v_620 = VEC4(t_614,t_613,t_612,t_611);
    vec4 v_621 = VEC4(t_610,t_609,t_608,t_607);
    vec4 v_622 = VEC4(t_606,t_605,t_604,t_603);
    vec4 v_623 = VEC4(t_602,t_601,t_600,t_599);
    vec4 v_624 = VEC4(t_598,t_597,t_596,t_595);
    vec4 v_625 = VEC4(t_594,t_593,t_592,t_591);
    vec4 v_626 = VEC4(t_590,t_589,t_588,t_587);
    vec4 v_627 = VEC4(t_586,t_585,t_584,t_583);
    vec4 v_628 = VEC4(t_582,t_581,t_580,t_579);
    vec4 v_629 = VEC4(t_578,t_577,t_576,t_575);
    vec4 v_630 = VEC4(t_574,t_573,t_572,t_571);
    vec4 v_631 = VEC4(t_570,t_569,t_568,t_567);
    vec4 v_632 = VEC4(t_566,t_565,t_564,t_563);
    vec4 v_633 = VEC4(t_562,t_561,t_560,t_559);
    vec4 v_634 = VEC4(t_558,t_557,t_556,t_555);
    vec4 v_635 = VEC4(t_554,t_553,t_552,t_551);
    vec4 v_636 = VEC4(t_550,t_549,t_548,t_547);
    vec4 v_637 = VEC4(t_546,t_545,t_544,t_543);
    vec4 v_638 = VEC4(t_542,t_541,t_540,t_539);
    vec4 v_639 = VEC4(t_538,t_537,t_536,t_535);
    real l_varAcc_640 = VIndex<3,4,0>(v_72);
    real l_varAcc_641 = VIndex<3,4,1>(v_72);
    real l_varAcc_642 = VIndex<3,4,2>(v_72);
    real l_prod_643 = RMul(0.1e1,0.1e1);
    real l_prod_644 = RMul(0.1e1,l_prod_643);
    real l_basisEval_645 = RMul(0.2e1,l_prod_644);
    real l_prod_646 = RMul(0.1e1,l_varAcc_642);
    real l_prod_647 = RMul(0.1e1,l_prod_646);
    real l_basisEval_648 = RMul(0.2e1,l_prod_647);
    real l_prod_649 = RMul(l_varAcc_641,0.1e1);
    real l_prod_650 = RMul(0.1e1,l_prod_649);
    real l_basisEval_651 = RMul(0.2e1,l_prod_650);
    real l_prod_652 = RMul(l_varAcc_640,l_prod_643);
    real l_prod2_653 = RMul(l_varAcc_642,l_varAcc_642);
    real l_prod_654 = RMul(0.1e1,l_prod2_653);
    real l_prod_655 = RMul(0.1e1,l_prod_654);
    real l_basisEval_656 = RMul(0.2e1,l_prod_655);
    real l_prod_657 = RMul(l_varAcc_641,l_varAcc_642);
    real l_prod_658 = RMul(0.1e1,l_prod_657);
    real l_basisEval_659 = RMul(0.2e1,l_prod_658);
    real l_prod2_660 = RMul(l_varAcc_641,l_varAcc_641);
    real l_prod_661 = RMul(l_prod2_660,0.1e1);
    real l_prod_662 = RMul(0.1e1,l_prod_661);
    real l_basisEval_663 = RMul(0.2e1,l_prod_662);
    real l_prod_664 = RMul(l_varAcc_640,l_prod_646);
    real l_basisEval_665 = RMul(0.6e1,l_prod_664);
    real l_prod_666 = RMul(l_varAcc_640,l_prod_649);
    real l_basisEval_667 = RMul(0.6e1,l_prod_666);
    real l_prod2_668 = RMul(l_varAcc_640,l_varAcc_640);
    real l_prod_669 = RMul(l_prod2_668,l_prod_643);
    real l_prod3_670 = RMul(l_prod2_653,l_varAcc_642);
    real l_prod_671 = RMul(0.1e1,l_prod3_670);
    real l_prod_672 = RMul(0.1e1,l_prod_671);
    real l_basisEval_673 = RMul(0.2e1,l_prod_672);
    real l_prod_674 = RMul(l_varAcc_641,l_prod2_653);
    real l_prod_675 = RMul(0.1e1,l_prod_674);
    real l_basisEval_676 = RMul(0.2e1,l_prod_675);
    real l_prod_677 = RMul(l_prod2_660,l_varAcc_642);
    real l_prod_678 = RMul(0.1e1,l_prod_677);
    real l_basisEval_679 = RMul(0.2e1,l_prod_678);
    real l_prod3_680 = RMul(l_prod2_660,l_varAcc_641);
    real l_prod_681 = RMul(l_prod3_680,0.1e1);
    real l_prod_682 = RMul(0.1e1,l_prod_681);
    real l_basisEval_683 = RMul(0.2e1,l_prod_682);
    real l_prod_684 = RMul(l_varAcc_640,l_prod_654);
    real l_basisEval_685 = RMul(0.6e1,l_prod_684);
    real l_prod_686 = RMul(l_varAcc_640,l_prod_657);
    real l_basisEval_687 = RMul(0.6e1,l_prod_686);
    real l_prod_688 = RMul(l_varAcc_640,l_prod_661);
    real l_basisEval_689 = RMul(0.6e1,l_prod_688);
    real l_prod_690 = RMul(l_prod2_668,l_prod_646);
    real l_prod_691 = RMul(l_prod2_668,l_prod_649);
    real l_prod3_692 = RMul(l_prod2_668,l_varAcc_640);
    real l_prod_693 = RMul(l_prod3_692,l_prod_643);
    real l_prod4_694 = RMul(l_prod3_670,l_varAcc_642);
    real l_prod_695 = RMul(0.1e1,l_prod4_694);
    real l_prod_696 = RMul(0.1e1,l_prod_695);
    real l_basisEval_697 = RMul(0.2e1,l_prod_696);
    real l_prod_698 = RMul(l_varAcc_641,l_prod3_670);
    real l_prod_699 = RMul(0.1e1,l_prod_698);
    real l_basisEval_700 = RMul(0.2e1,l_prod_699);
    real l_prod_701 = RMul(l_prod2_660,l_prod2_653);
    real l_prod_702 = RMul(0.1e1,l_prod_701);
    real l_prod_703 = RMul(l_prod3_680,l_varAcc_642);
    real l_prod_704 = RMul(0.1e1,l_prod_703);
    real l_basisEval_705 = RMul(0.2e1,l_prod_704);
    real l_prod4_706 = RMul(l_prod3_680,l_varAcc_641);
    real l_prod_707 = RMul(l_prod4_706,0.1e1);
    real l_prod_708 = RMul(0.1e1,l_prod_707);
    real l_basisEval_709 = RMul(0.2e1,l_prod_708);
    real l_prod_710 = RMul(l_varAcc_640,l_prod_671);
    real l_prod_711 = RMul(l_varAcc_640,l_prod_674);
    real l_basisEval_712 = RMul(0.6e1,l_prod_711);
    real l_prod_713 = RMul(l_varAcc_640,l_prod_677);
    real l_basisEval_714 = RMul(0.6e1,l_prod_713);
    real l_prod_715 = RMul(l_varAcc_640,l_prod_681);
    real l_prod_716 = RMul(l_prod2_668,l_prod_654);
    real l_basisEval_717 = RMul(0.12e2,l_prod_716);
    real l_prod_718 = RMul(l_prod2_668,l_prod_657);
    real l_prod_719 = RMul(l_prod2_668,l_prod_661);
    real l_basisEval_720 = RMul(0.12e2,l_prod_719);
    real l_prod_721 = RMul(l_prod3_692,l_prod_646);
    real l_prod_722 = RMul(l_prod3_692,l_prod_649);
    real l_prod4_723 = RMul(l_prod3_692,l_varAcc_640);
    real l_prod_724 = RMul(l_prod4_723,l_prod_643);
    real l_basisEval_725 = RMul(0.1e1,l_prod_644);
    real l_basisEval_726 = RMul(0.1e1,l_prod_647);
    real l_basisEval_727 = RMul(0.2e1,l_prod_652);
    real l_basisEval_728 = RMul(0.1e1,l_prod_655);
    real l_basisEval_729 = RMul(0.3e1,l_prod_662);
    real l_basisEval_730 = RMul(0.2e1,l_prod_664);
    real l_basisEval_731 = RMul(0.3e1,l_prod_669);
    real l_basisEval_732 = RMul(0.1e1,l_prod_672);
    real l_basisEval_733 = RMul(0.3e1,l_prod_678);
    real l_basisEval_734 = RMul(0.4e1,l_prod_682);
    real l_basisEval_735 = RMul(0.2e1,l_prod_684);
    real l_basisEval_736 = RMul(0.4e1,l_prod_686);
    real l_basisEval_737 = RMul(0.3e1,l_prod_690);
    real l_basisEval_738 = RMul(0.6e1,l_prod_691);
    real l_basisEval_739 = RMul(0.4e1,l_prod_693);
    real l_basisEval_740 = RMul(0.1e1,l_prod_696);
    real l_basisEval_741 = RMul(0.3e1,l_prod_702);
    real l_basisEval_742 = RMul(0.4e1,l_prod_704);
    real l_basisEval_743 = RMul(0.5e1,l_prod_708);
    real l_basisEval_744 = RMul(0.2e1,l_prod_710);
    real l_basisEval_745 = RMul(0.3e1,l_prod_716);
    real l_basisEval_746 = RMul(0.6e1,l_prod_718);
    real l_basisEval_747 = RMul(0.4e1,l_prod_721);
    real l_basisEval_748 = RMul(0.5e1,l_prod_724);
    real l_basisEval_749 = RMul(0.1e1,l_prod_650);
    real l_basisEval_750 = RMul(0.3e1,l_prod_655);
    real l_basisEval_751 = RMul(0.1e1,l_prod_662);
    real l_basisEval_752 = RMul(0.2e1,l_prod_666);
    real l_basisEval_753 = RMul(0.4e1,l_prod_672);
    real l_basisEval_754 = RMul(0.3e1,l_prod_675);
    real l_basisEval_755 = RMul(0.1e1,l_prod_682);
    real l_basisEval_756 = RMul(0.2e1,l_prod_688);
    real l_basisEval_757 = RMul(0.6e1,l_prod_690);
    real l_basisEval_758 = RMul(0.3e1,l_prod_691);
    real l_basisEval_759 = RMul(0.5e1,l_prod_696);
    real l_basisEval_760 = RMul(0.4e1,l_prod_699);
    real l_basisEval_761 = RMul(0.1e1,l_prod_708);
    real l_basisEval_762 = RMul(0.2e1,l_prod_715);
    real l_basisEval_763 = RMul(0.3e1,l_prod_719);
    real l_basisEval_764 = RMul(0.4e1,l_prod_722);
    real l_basisEval_765 = RMul(0.6e1,l_prod_658);
    real l_basisEval_766 = RMul(0.2e1,l_prod_669);
    real l_basisEval_767 = RMul(0.6e1,l_prod_675);
    real l_basisEval_768 = RMul(0.2e1,l_prod_690);
    real l_basisEval_769 = RMul(0.2e1,l_prod_693);
    real l_basisEval_770 = RMul(0.12e2,l_prod_702);
    real l_basisEval_771 = RMul(0.2e1,l_prod_721);
    real l_basisEval_772 = RMul(0.2e1,l_prod_724);
    real l_basisEval_773 = RMul(0.1e1,l_prod_652);
    real l_basisEval_774 = RMul(0.1e1,l_prod_669);
    real l_basisEval_775 = RMul(0.6e1,l_prod_678);
    real l_basisEval_776 = RMul(0.3e1,l_prod_684);
    real l_basisEval_777 = RMul(0.3e1,l_prod_688);
    real l_basisEval_778 = RMul(0.2e1,l_prod_691);
    real l_basisEval_779 = RMul(0.1e1,l_prod_693);
    real l_basisEval_780 = RMul(0.4e1,l_prod_710);
    real l_basisEval_781 = RMul(0.4e1,l_prod_715);
    real l_basisEval_782 = RMul(0.2e1,l_prod_722);
    real l_basisEval_783 = RMul(0.1e1,l_prod_724);
    real l_vdot_784 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_725,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_651,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_728,l_basisEval_659)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_729,0.e0,l_basisEval_730,RMul(0.4e1,l_prod_666))),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_731,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_732,l_basisEval_676)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_733,l_basisEval_734,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_736,l_basisEval_689,0.e0,l_basisEval_737)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_738,0.e0,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_743,0.e0,l_basisEval_744,RMul(0.4e1,l_prod_711))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_714,RMul(0.8e1,l_prod_715),0.e0,l_basisEval_745)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_746,RMul(0.9e1,l_prod_719),0.e0,l_basisEval_747)),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.8e1,l_prod_722),0.e0,l_basisEval_748,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_785 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_648,l_basisEval_749)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_750,l_basisEval_659,l_basisEval_751)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,RMul(0.4e1,l_prod_664),l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_731,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_753,l_basisEval_754,l_basisEval_679)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_755,0.e0,l_basisEval_685,l_basisEval_736)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_756,0.e0,l_basisEval_757,l_basisEval_758)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_739,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.8e1,l_prod_710),l_basisEval_712,RMul(0.4e1,l_prod_713))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_762,0.e0,RMul(0.9e1,l_prod_716),l_basisEval_746)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_763,0.e0,RMul(0.8e1,l_prod_721),l_basisEval_764)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_748,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_786 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,l_basisEval_648)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_651,0.e0,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_750,RMul(0.4e1,l_prod_658),l_basisEval_729)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_730,l_basisEval_752)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_753,l_basisEval_767,l_basisEval_775,l_basisEval_734)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_776,l_basisEval_736)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_777,0.e0,0.e0,l_basisEval_768)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_778,0.e0,0.e0,l_basisEval_779)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_759,RMul(0.8e1,l_prod_699),RMul(0.9e1,l_prod_702))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.8e1,l_prod_704),l_basisEval_743,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_780,l_basisEval_712,l_basisEval_714,l_basisEval_781)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,0.e0,l_basisEval_745,RMul(0.4e1,l_prod_718))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_763,0.e0,0.e0,l_basisEval_771)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_782,0.e0,0.e0,l_basisEval_783)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    tensor[3,3] t_787 = <tensor[3,3]>[RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,l_basisEval_645,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_648,l_basisEval_651,RMul(0.6e1,l_prod_652))),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_656,l_basisEval_659,l_basisEval_663)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_665,l_basisEval_667,RMul(0.12e2,l_prod_669),0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_673,l_basisEval_676)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_679,l_basisEval_683,l_basisEval_685,l_basisEval_687)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_689,RMul(0.12e2,l_prod_690),RMul(0.12e2,l_prod_691),RMul(0.20e2,l_prod_693))),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_697,l_basisEval_700,RMul(0.2e1,l_prod_702))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_705,l_basisEval_709,RMul(0.6e1,l_prod_710),l_basisEval_712)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_714,RMul(0.6e1,l_prod_715),l_basisEval_717,RMul(0.12e2,l_prod_718))),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_720,RMul(0.20e2,l_prod_721),RMul(0.20e2,l_prod_722),RMul(0.30e2,l_prod_724))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_784,l_vdot_785,l_vdot_784,RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,l_basisEval_645,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_648,RMul(0.6e1,l_prod_650),0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_727,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,l_basisEval_656,l_basisEval_765)),RAdd(VDot<4,4>(v_625,VEC4(RMul(0.12e2,l_prod_662),0.e0,0.e0,l_basisEval_730)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_667,0.e0,0.e0,l_basisEval_766)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,l_basisEval_673,l_basisEval_767,RMul(0.12e2,l_prod_678))),RAdd(VDot<4,4>(v_629,VEC4(RMul(0.20e2,l_prod_682),0.e0,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_687,RMul(0.12e2,l_prod_688),0.e0,0.e0)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_768,l_basisEval_738,0.e0,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_769,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,l_basisEval_697,RMul(0.6e1,l_prod_699))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_770,RMul(0.20e2,l_prod_704),RMul(0.30e2,l_prod_708),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,l_basisEval_744,l_basisEval_712,RMul(0.12e2,l_prod_713))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.20e2,l_prod_715),0.e0,0.e0,RMul(0.2e1,l_prod_716))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_746,l_basisEval_720,0.e0,0.e0)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_771,RMul(0.6e1,l_prod_722),0.e0,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_772,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_786,l_vdot_785,l_vdot_786,RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_645,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_647),l_basisEval_651)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(RMul(0.12e2,l_prod_655),l_basisEval_765,l_basisEval_663,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_665,l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_766,0.e0,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_672))),RAdd(VDot<4,4>(v_628,VEC4(RMul(0.12e2,l_prod_675),l_basisEval_775,l_basisEval_683,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,RMul(0.12e2,l_prod_684),l_basisEval_687,l_basisEval_756)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_757,l_basisEval_778)),RAdd(VDot<4,4>(v_631,VEC4(0.e0,0.e0,l_basisEval_769,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.30e2,l_prod_696),RMul(0.20e2,l_prod_699),l_basisEval_770,RMul(0.6e1,l_prod_704))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_709,0.e0,0.e0,RMul(0.20e2,l_prod_710))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.12e2,l_prod_711),l_basisEval_714,l_basisEval_762,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_717,l_basisEval_746,RMul(0.2e1,l_prod_719))),RAdd(VDot<4,4>(v_637,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_721),l_basisEval_782)),RAdd(VDot<4,4>(v_638,VEC4(0.e0,0.e0,l_basisEval_772,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
    (l_evals_788,l_E_789) = EigenVecs3x3(TensorRef<[3,3]>(t_787));
    &tensor[3] l__t_790 = Subscript<tensor[3][3]>(l_E_789,2);
    real l__t_791 = Subscript<real[3]>(l_evals_788,2);
    &tensor[3] l__t_792 = Subscript<tensor[3][3]>(l_E_789,1);
    real l__t_793 = Subscript<real[3]>(l_evals_788,1);
    vec3{4} v_794 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_790),LOAD_0(l__t_790));
    vec3{4} v_795 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_790),LOAD_0(l__t_790));
    vec3{4} v_796 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_790),LOAD_0(l__t_790));
    vec3{4} v_797 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_792),LOAD_0(l__t_792));
    vec3{4} v_798 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_792),LOAD_0(l__t_792));
    vec3{4} v_799 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_792),LOAD_0(l__t_792));
    real l_basisEval_800 = RMul(0.2e1,l_prod_686);
    real l_basisEval_801 = RMul(0.2e1,l_prod_711);
    real l_basisEval_802 = RMul(0.2e1,l_prod_713);
    real l_prod_803 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_694,l_varAcc_642)));
    real l_basisEval_804 = RMul(0.1e1,l_prod_803);
    real l_prod_805 = RMul(0.1e1,RMul(l_varAcc_641,l_prod4_694));
    real l_prod_806 = RMul(0.1e1,RMul(l_prod2_660,l_prod3_670));
    real l_prod_807 = RMul(0.1e1,RMul(l_prod3_680,l_prod2_653));
    real l_prod_808 = RMul(0.1e1,RMul(l_prod4_706,l_varAcc_642));
    real l_prod_809 = RMul(0.1e1,RMul(RMul(l_prod4_706,l_varAcc_641),0.1e1));
    real l_basisEval_810 = RMul(0.1e1,l_prod_809);
    real l_prod_811 = RMul(l_varAcc_640,l_prod_695);
    real l_prod_812 = RMul(l_varAcc_640,l_prod_698);
    real l_basisEval_813 = RMul(0.2e1,l_prod_812);
    real l_prod_814 = RMul(l_varAcc_640,l_prod_701);
    real l_prod_815 = RMul(l_varAcc_640,l_prod_703);
    real l_basisEval_816 = RMul(0.2e1,l_prod_815);
    real l_prod_817 = RMul(l_varAcc_640,l_prod_707);
    real l_prod_818 = RMul(l_prod2_668,l_prod_671);
    real l_prod_819 = RMul(l_prod2_668,l_prod_674);
    real l_basisEval_820 = RMul(0.3e1,l_prod_819);
    real l_prod_821 = RMul(l_prod2_668,l_prod_677);
    real l_basisEval_822 = RMul(0.3e1,l_prod_821);
    real l_prod_823 = RMul(l_prod2_668,l_prod_681);
    real l_prod_824 = RMul(l_prod3_692,l_prod_654);
    real l_prod_825 = RMul(l_prod3_692,l_prod_657);
    real l_prod_826 = RMul(l_prod3_692,l_prod_661);
    real l_prod_827 = RMul(l_prod4_723,l_prod_646);
    real l_prod_828 = RMul(l_prod4_723,l_prod_649);
    real l_prod_829 = RMul(RMul(l_prod4_723,l_varAcc_640),l_prod_643);
    real l_basisEval_830 = RMul(0.2e1,l_prod_718);
    real l_basisEval_831 = RMul(0.3e1,l_prod_814);
    real l_basisEval_832 = RMul(0.2e1,l_prod_825);
    real l_basisEval_833 = RMul(0.1e1,l_prod_829);
    vec3{4} v_834 = VEC3{4}(RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_749,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_728,RMul(0.1e1,l_prod_658))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_751,l_basisEval_730,l_basisEval_752,l_basisEval_731)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_732,RMul(0.1e1,l_prod_675),RMul(0.1e1,l_prod_678))),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_755,l_basisEval_735,l_basisEval_800,l_basisEval_756)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_737,l_basisEval_758,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_740,RMul(0.1e1,l_prod_699),RMul(0.1e1,l_prod_702))),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_704),l_basisEval_761,l_basisEval_744,l_basisEval_801)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_802,l_basisEval_762,l_basisEval_745,RMul(0.3e1,l_prod_718))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_763,l_basisEval_747,l_basisEval_764,l_basisEval_748)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_804)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_805),RMul(0.1e1,l_prod_806),RMul(0.1e1,l_prod_807),RMul(0.1e1,l_prod_808))),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_810,RMul(0.2e1,l_prod_811),l_basisEval_813,RMul(0.2e1,l_prod_814))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_816,RMul(0.2e1,l_prod_817),RMul(0.3e1,l_prod_818),l_basisEval_820)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_822,RMul(0.3e1,l_prod_823),RMul(0.4e1,l_prod_824),RMul(0.4e1,l_prod_825))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.4e1,l_prod_826),RMul(0.5e1,l_prod_827),RMul(0.5e1,l_prod_828),RMul(0.6e1,l_prod_829))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_726,l_basisEval_651,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_773,0.e0,0.e0,l_basisEval_728)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_659,l_basisEval_729,0.e0,RMul(0.1e1,l_prod_664))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_752,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_732,l_basisEval_676,l_basisEval_733)),RAdd(VDot<4,4>(v_625,VEC4(l_basisEval_734,0.e0,RMul(0.1e1,l_prod_684),l_basisEval_800)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_777,0.e0,RMul(0.1e1,l_prod_690),l_basisEval_778)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_779,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_629,VEC4(l_basisEval_743,0.e0,RMul(0.1e1,l_prod_710),l_basisEval_801)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.3e1,l_prod_713),l_basisEval_781,0.e0,RMul(0.1e1,l_prod_716))),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_830,l_basisEval_763,0.e0,RMul(0.1e1,l_prod_721))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_782,0.e0,l_basisEval_783,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_804,RMul(0.2e1,l_prod_805),RMul(0.3e1,l_prod_806))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.4e1,l_prod_807),RMul(0.5e1,l_prod_808),RMul(0.6e1,l_prod_809),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_811),l_basisEval_813,l_basisEval_831,RMul(0.4e1,l_prod_815))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.5e1,l_prod_817),0.e0,RMul(0.1e1,l_prod_818),RMul(0.2e1,l_prod_819))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_822,RMul(0.4e1,l_prod_823),0.e0,RMul(0.1e1,l_prod_824))),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_832,RMul(0.3e1,l_prod_826),0.e0,RMul(0.1e1,l_prod_827))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.2e1,l_prod_828),0.e0,l_basisEval_833,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,l_basisEval_725,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_648,l_basisEval_749,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,l_basisEval_750,l_basisEval_659)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_751,0.e0,l_basisEval_730,RMul(0.1e1,l_prod_666))),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_774,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(l_basisEval_753,l_basisEval_754,l_basisEval_679,l_basisEval_755)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_776,l_basisEval_800,RMul(0.1e1,l_prod_688))),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_768,RMul(0.1e1,l_prod_691),0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_779,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_780,RMul(0.3e1,l_prod_711),l_basisEval_802)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_715),0.e0,l_basisEval_745,l_basisEval_830)),RAdd(VDot<4,4>(v_631,VEC4(RMul(0.1e1,l_prod_719),0.e0,l_basisEval_771,RMul(0.1e1,l_prod_722))),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_783,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.6e1,l_prod_803),RMul(0.5e1,l_prod_805),RMul(0.4e1,l_prod_806),RMul(0.3e1,l_prod_807))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.2e1,l_prod_808),l_basisEval_810,0.e0,RMul(0.5e1,l_prod_811))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.4e1,l_prod_812),l_basisEval_831,l_basisEval_816,RMul(0.1e1,l_prod_817))),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.4e1,l_prod_818),l_basisEval_820,RMul(0.2e1,l_prod_821))),RAdd(VDot<4,4>(v_637,VEC4(RMul(0.1e1,l_prod_823),0.e0,RMul(0.3e1,l_prod_824),l_basisEval_832)),RAdd(VDot<4,4>(v_638,VEC4(RMul(0.1e1,l_prod_826),0.e0,RMul(0.2e1,l_prod_827),RMul(0.1e1,l_prod_828))),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_833,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)))))))))))))))))))))));
    vec3{4} v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_794),l__t_791),RDiv(VIndex<3,4,1>(v_794),l__t_791),RDiv(VIndex<3,4,2>(v_794),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_797),l__t_793),RDiv(VIndex<3,4,1>(v_797),l__t_793),RDiv(VIndex<3,4,2>(v_797),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_795),l__t_791),RDiv(VIndex<3,4,1>(v_795),l__t_791),RDiv(VIndex<3,4,2>(v_795),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_798),l__t_793),RDiv(VIndex<3,4,1>(v_798),l__t_793),RDiv(VIndex<3,4,2>(v_798),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_796),l__t_791),RDiv(VIndex<3,4,1>(v_796),l__t_791),RDiv(VIndex<3,4,2>(v_796),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_799),l__t_793),RDiv(VIndex<3,4,1>(v_799),l__t_793),RDiv(VIndex<3,4,2>(v_799),l__t_793)))),v_834));
    real l_op1_e3_l_33_836 = Sqrt(VDot<3,4>(v_835,v_835));
    real l__t_837 = RMul(globals.maxAlpha,RClamp(0.e0,0.1e1,RMul(0.15e1,RSub(0.1e1,RDiv(Abs<real>(l_op1_e3_l_33_836),globals.thick)))));
    vec3{4} v_838 = v_835;
    vec4 v_839 = v_619;
    vec4 v_840 = v_620;
    vec4 v_841 = v_621;
    vec4 v_842 = v_622;
    vec4 v_843 = v_623;
    vec4 v_844 = v_624;
    vec4 v_845 = v_625;
    vec4 v_846 = v_626;
    vec4 v_847 = v_627;
    vec4 v_848 = v_628;
    vec4 v_849 = v_629;
    vec4 v_850 = v_630;
    vec4 v_851 = v_631;
    vec4 v_852 = v_632;
    vec4 v_853 = v_633;
    vec4 v_854 = v_634;
    vec4 v_855 = v_635;
    vec4 v_856 = v_636;
    vec4 v_857 = v_637;
    vec4 v_858 = v_638;
    vec4 v_859 = v_639;
    if (EQ<real>(l__t_837,0.e0)) {
      self.rayN = l_rayN_69;
      active;
    }
    real l__t_860 = MathFn<pow>(RSub(0.1e1,l__t_837),self.alphaFix);
    if (NEQ<real>(self.phKs,0.e0)) {
      vec3{4} v_861 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.eyeDir)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
      l_scomp_862 = MathFn<pow>(Abs<real>(RMul(RDiv(0.1e1,Sqrt(VDot<3,4>(v_861,v_861))),VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_33_836),v_838)),v_861))),self.phSp);
    } else {
      l_scomp_862 = 0.e0;
    }
    real l_cmin_863 = VIndex<2,2,0>(LOAD_0(TensorRef<[2]>(globals.cminmax)));
    real l_cmax_864 = VIndex<2,2,1>(LOAD_0(TensorRef<[2]>(globals.cminmax)));
    vec3{4} v_865 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    if (NEQ<real>(l_cmin_863,l_cmax_864)) {
      tensor[3,2] l_voxels_908;
      vec3{4} v_866 = VAdd<3,4>(v_72,v_838);
      real l_varAcc_867 = VIndex<3,4,0>(v_866);
      real l_varAcc_868 = VIndex<3,4,1>(v_866);
      real l_varAcc_869 = VIndex<3,4,2>(v_866);
      real l_prod_870 = RMul(0.1e1,l_varAcc_869);
      real l_prod_871 = RMul(l_varAcc_868,0.1e1);
      real l_prod2_872 = RMul(l_varAcc_869,l_varAcc_869);
      real l_prod_873 = RMul(0.1e1,l_prod2_872);
      real l_prod_874 = RMul(l_varAcc_868,l_varAcc_869);
      real l_prod2_875 = RMul(l_varAcc_868,l_varAcc_868);
      real l_prod_876 = RMul(l_prod2_875,0.1e1);
      real l_prod2_877 = RMul(l_varAcc_867,l_varAcc_867);
      real l_prod3_878 = RMul(l_prod2_872,l_varAcc_869);
      real l_prod_879 = RMul(0.1e1,l_prod3_878);
      real l_prod_880 = RMul(l_varAcc_868,l_prod2_872);
      real l_prod_881 = RMul(l_prod2_875,l_varAcc_869);
      real l_prod3_882 = RMul(l_prod2_875,l_varAcc_868);
      real l_prod_883 = RMul(l_prod3_882,0.1e1);
      real l_prod3_884 = RMul(l_prod2_877,l_varAcc_867);
      real l_prod4_885 = RMul(l_prod3_878,l_varAcc_869);
      real l_prod_886 = RMul(0.1e1,l_prod4_885);
      real l_prod_887 = RMul(l_varAcc_868,l_prod3_878);
      real l_prod_888 = RMul(l_prod2_875,l_prod2_872);
      real l_prod_889 = RMul(l_prod3_882,l_varAcc_869);
      real l_prod4_890 = RMul(l_prod3_882,l_varAcc_868);
      real l_prod_891 = RMul(l_prod4_890,0.1e1);
      real l_prod4_892 = RMul(l_prod3_884,l_varAcc_867);
      real l_prod5_893 = RMul(l_prod4_885,l_varAcc_869);
      real l_prod_894 = RMul(0.1e1,l_prod5_893);
      real l_prod_895 = RMul(l_varAcc_868,l_prod4_885);
      real l_prod_896 = RMul(l_prod2_875,l_prod3_878);
      real l_prod_897 = RMul(l_prod3_882,l_prod2_872);
      real l_prod_898 = RMul(l_prod4_890,l_varAcc_869);
      real l_prod5_899 = RMul(l_prod4_890,l_varAcc_868);
      real l_prod_900 = RMul(l_prod5_899,0.1e1);
      real l_prod5_901 = RMul(l_prod4_892,l_varAcc_867);
      real l_imgPos_902 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.cmap),RAdd(0.e0,RMul(RDiv(RSub(RAdd(VDot<4,4>(v_840,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_873)),RMul(0.1e1,RMul(0.1e1,l_prod_874)),RMul(0.1e1,RMul(0.1e1,l_prod_876)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_870)))),RAdd(VDot<4,4>(v_841,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_871)),RMul(0.1e1,RMul(l_prod2_877,l_prod_643)),RMul(0.1e1,RMul(0.1e1,l_prod_879)),RMul(0.1e1,RMul(0.1e1,l_prod_880)))),RAdd(VDot<4,4>(v_842,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_881)),RMul(0.1e1,RMul(0.1e1,l_prod_883)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_873)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_874)))),RAdd(VDot<4,4>(v_843,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_876)),RMul(0.1e1,RMul(l_prod2_877,l_prod_870)),RMul(0.1e1,RMul(l_prod2_877,l_prod_871)),RMul(0.1e1,RMul(l_prod3_884,l_prod_643)))),RAdd(VDot<4,4>(v_844,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_886)),RMul(0.1e1,RMul(0.1e1,l_prod_887)),RMul(0.1e1,RMul(0.1e1,l_prod_888)),RMul(0.1e1,RMul(0.1e1,l_prod_889)))),RAdd(VDot<4,4>(v_845,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_891)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_879)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_880)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_881)))),RAdd(VDot<4,4>(v_846,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_883)),RMul(0.1e1,RMul(l_prod2_877,l_prod_873)),RMul(0.1e1,RMul(l_prod2_877,l_prod_874)),RMul(0.1e1,RMul(l_prod2_877,l_prod_876)))),RAdd(VDot<4,4>(v_847,VEC4(RMul(0.1e1,RMul(l_prod3_884,l_prod_870)),RMul(0.1e1,RMul(l_prod3_884,l_prod_871)),RMul(0.1e1,RMul(l_prod4_892,l_prod_643)),RMul(0.1e1,RMul(0.1e1,l_prod_894)))),RAdd(VDot<4,4>(v_848,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_895)),RMul(0.1e1,RMul(0.1e1,l_prod_896)),RMul(0.1e1,RMul(0.1e1,l_prod_897)),RMul(0.1e1,RMul(0.1e1,l_prod_898)))),RAdd(VDot<4,4>(v_849,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_900)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_886)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_887)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_888)))),RAdd(VDot<4,4>(v_850,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_889)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_891)),RMul(0.1e1,RMul(l_prod2_877,l_prod_879)),RMul(0.1e1,RMul(l_prod2_877,l_prod_880)))),RAdd(VDot<4,4>(v_851,VEC4(RMul(0.1e1,RMul(l_prod2_877,l_prod_881)),RMul(0.1e1,RMul(l_prod2_877,l_prod_883)),RMul(0.1e1,RMul(l_prod3_884,l_prod_873)),RMul(0.1e1,RMul(l_prod3_884,l_prod_874)))),RAdd(VDot<4,4>(v_852,VEC4(RMul(0.1e1,RMul(l_prod3_884,l_prod_876)),RMul(0.1e1,RMul(l_prod4_892,l_prod_870)),RMul(0.1e1,RMul(l_prod4_892,l_prod_871)),RMul(0.1e1,RMul(l_prod5_901,l_prod_643)))),RAdd(VDot<4,4>(v_853,VEC4(RMul(0.1e1,RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_893,l_varAcc_869)))),RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_868,l_prod5_893))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod2_875,l_prod4_885))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod3_882,l_prod3_878))))),RAdd(VDot<4,4>(v_854,VEC4(RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_890,l_prod2_872))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_899,l_varAcc_869))),RMul(0.1e1,RMul(0.1e1,RMul(RMul(l_prod5_899,l_varAcc_868),0.1e1))),RMul(0.1e1,RMul(l_varAcc_867,l_prod_894)))),RAdd(VDot<4,4>(v_855,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_895)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_896)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_897)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_898)))),RAdd(VDot<4,4>(v_856,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_900)),RMul(0.1e1,RMul(l_prod2_877,l_prod_886)),RMul(0.1e1,RMul(l_prod2_877,l_prod_887)),RMul(0.1e1,RMul(l_prod2_877,l_prod_888)))),RAdd(VDot<4,4>(v_857,VEC4(RMul(0.1e1,RMul(l_prod2_877,l_prod_889)),RMul(0.1e1,RMul(l_prod2_877,l_prod_891)),RMul(0.1e1,RMul(l_prod3_884,l_prod_879)),RMul(0.1e1,RMul(l_prod3_884,l_prod_880)))),RAdd(VDot<4,4>(v_858,VEC4(RMul(0.1e1,RMul(l_prod3_884,l_prod_881)),RMul(0.1e1,RMul(l_prod3_884,l_prod_883)),RMul(0.1e1,RMul(l_prod4_892,l_prod_873)),RMul(0.1e1,RMul(l_prod4_892,l_prod_874)))),RAdd(VDot<4,4>(v_859,VEC4(RMul(0.1e1,RMul(l_prod4_892,l_prod_876)),RMul(0.1e1,RMul(l_prod5_901,l_prod_870)),RMul(0.1e1,RMul(l_prod5_901,l_prod_871)),RMul(0.1e1,RMul(RMul(l_prod5_901,l_varAcc_867),l_prod_643)))),VDot<4,4>(v_839,VEC4(l_basisEval_725,RMul(0.1e1,RMul(0.1e1,l_prod_870)),RMul(0.1e1,RMul(0.1e1,l_prod_871)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_643)))))))))))))))))))))))),l_cmin_863),RSub(l_cmax_864,l_cmin_863)),RSub(0.1e1,0.e0)))),Translate<IMAGE1D<double[3]>>(globals.cmap));
      real l_nd_903 = RFloor(l_imgPos_902);
      real l_f_904 = RSub(l_imgPos_902,l_nd_903);
      int l_n_905 = RealToInt(l_nd_903);
      if (IndexInside<IMAGE1D<double[3]>,2>(l_n_905,globals.cmap)) {
        int l_offp_906 = IMul(3,l_n_905);
        int l_offp_907 = IMul(3,IAdd(l_n_905,1));
        l_voxels_908 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_906),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_907),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_906,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_907,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_906,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_907,2))];
      } else {
        int l_offp_909 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,l_n_905));
        int l_offp_910 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,IAdd(l_n_905,1)));
        l_voxels_908 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_909),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_910),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_909,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_910,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_909,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_910,2))];
      }
      vec2 v_911 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_904,RSub(l_f_904,0.1e1)),VEC2(-0.1e1,0.1e1)));
      v_912 = VEC3{4}(VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_908)),v_911),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_908)),v_911),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_908)),v_911));
    } else {
      v_912 = v_865;
    }
    real l_op1_e3_l_66_913 = VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_33_836),v_838)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
    real l_op1_e3_l_75_914 = RAdd(self.phKa,RMul(self.phKd,RMul(l_op1_e3_l_66_913,l_op1_e3_l_66_913)));
    vec3{4} v_915 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.mcNear)),VScale<3,4>(RDiv(RSub(l_rayN_69,globals.camNearVsp),RSub(globals.camFarVsp,globals.camNearVsp)),VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.mcFar)),LOAD_0(TensorRef<[3]>(globals.mcNear)))));
    real l_r_916 = RMul(RMul(self.phKs,l_scomp_862),0.1e1);
    real l_op1_e3_l_79_917 = RSub(0.1e1,l__t_860);
    vec3{4} v_918 = VAdd<3,4>(VEC3{4}(RMul(RMul(l_op1_e3_l_75_914,VIndex<3,4,0>(v_915)),VIndex<3,4,0>(v_912)),RMul(RMul(l_op1_e3_l_75_914,VIndex<3,4,1>(v_915)),VIndex<3,4,1>(v_912)),RMul(RMul(l_op1_e3_l_75_914,VIndex<3,4,2>(v_915)),VIndex<3,4,2>(v_912))),VEC3{4}(l_r_916,l_r_916,l_r_916));
    real l_r_919 = RMul(self.transp,l_op1_e3_l_79_917);
    vec3{4} v_920 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_919,VIndex<3,4,0>(v_918)),RMul(l_r_919,VIndex<3,4,1>(v_918)),RMul(l_r_919,VIndex<3,4,2>(v_918))));
    real l_transp_921 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_79_917));
    vec3{4} v_922 = v_920;
    if (LT<real>(l_transp_921,globals.transp0)) {
      self.rayN = l_rayN_69;
      self.rgb = PACK(v_922);
      self.transp = 0.e0;
      stabilize;
    } else {
      l_transp_924 = l_transp_921;
    }
    self.rayN = l_rayN_69;
    self.rgb = PACK(v_922);
    self.transp = l_transp_924;
    active;
  }
  stabilize () {
    vec4 v_927;
    if (LT<real>(self.transp,0.1e1)) {
      real l_aa_926 = RSub(0.1e1,self.transp);
      v_927 = VEC4(RDiv(VIndex<3,4,0>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_926),RDiv(VIndex<3,4,1>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_926),RDiv(VIndex<3,4,2>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_926),l_aa_926);
    } else {
      v_927 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    self.rgba = PACK(v_927);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_929 = 0 to ISub(globals.iresV,1) {
      for i_ui_930 = 0 to ISub(globals.iresU,1) {
        new ray(i_ui_930,i_vi_929);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) block;
input femData(Space) 0space04CF_intermedateGlobal;
input femData(FemFunc) 0U04D1_intermedateGlobal;
input int cellChoice;
input image(IMAGE1D<double[3]>) cmap;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camNear;
input real camFar;
input real camFOV;
input bool camOrtho;
input int iresU;
input int iresV;
input real rayStep;
input real refStep;
input real transp0;
input real thick;
input real fStrTh;
input real fMaskTh;
input real fBias;
input real maxAlpha;
input bool light;
input tensor[4] phong;
input tensor[3] mcNear;
input tensor[3] mcFar;
input tensor[3] litdir;
input tensor[2] cminmax;
//***** CONST INIT *****
  {
    globals.camEye = <tensor[3]>[0.e0,-0.2e1,0.e0];
    globals.camAt = <tensor[3]>[0.e0,0.e0,0.e0];
    globals.camUp = <tensor[3]>[0.e0,0.e0,0.1e1];
    globals.camNear = -0.4e1;
    globals.camFar = 0.4e1;
    globals.camFOV = 0.1e2;
    globals.camOrtho = false;
    globals.iresU = 100;
    globals.iresV = 100;
    globals.rayStep = 0.1e-3;
    globals.refStep = 0.1e-3;
    globals.transp0 = 0.5e-2;
    globals.thick = 0.1e-1;
    globals.fStrTh = 0.e0;
    globals.fMaskTh = 0.e0;
    globals.fBias = 0.1e0;
    globals.maxAlpha = 0.1e1;
    globals.light = false;
    globals.phong = <tensor[4]>[0.1e0,0.7e0,0.2e0,0.1e3];
    vec3{4} v_4 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    globals.mcNear = PACK(v_4);
    globals.mcFar = PACK(v_4);
    globals.litdir = <tensor[3]>[0.e0,-0.1e1,0.e0];
    globals.cminmax = <tensor[2]>[0.e0,0.e0];
  }
//***** GLOBALS *****
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camDist;
global real camVmax;
global real camUmax;
global real camNearVsp;
global real camFarVsp;
global tensor[3] litwsp;
global int _t;
global femData(Space) _tX;
global femData(FemFunc) _tXX;
//***** FUNCTIONS *****
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_9;
    l__t_9 = <femData(MeshCell)[]>{};
    for i__t_10 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.block),1) {
      l__t_9 = Append<femData(MeshCell),femData(MeshCell)>(l__t_9,LoadFem<femData(MeshCell)>(globals.block,i__t_10));
    }
    femData(FuncCell) l__t_11 = LoadFem<femData(FuncCell)>(LoadFem<femData(FemFunc)>(globals.0U04D1_intermedateGlobal,LoadFem<femData(Space)>(globals.0space04CF_intermedateGlobal,globals.block)),ExtractFemItem<int,CellIndex(MeshCell)>(Subscript<femData(MeshCell)[]>(l__t_9,globals.cellChoice)));
    femData(FemFunc) l__t_12 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_11);
    vec3{4} v_13 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_14 = Sqrt(VDot<3,4>(v_13,v_13));
    real l_op1_e3_l_9_15 = RDiv(0.1e1,l_op1_e3_l_7_14);
    vec3{4} v_16 = VScale<3,4>(l_op1_e3_l_9_15,v_13);
    globals.camN = PACK(v_16);
    real l_r_18 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_19 = RMul(0.e0,l_r_18);
    real l_r_20 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_21 = RMul(0.e0,l_r_20);
    real l_r_22 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_23 = RMul(0.e0,l_r_22);
    real l_r_24 = RAdd(l_r_19,l_r_21);
    real l_r_25 = RAdd(l_r_24,l_r_23);
    real l_vdot_26 = VDot<3,4>(v_13,VEC3{4}(l_r_25,RAdd(l_r_24,RMul(0.1e1,l_r_22)),RAdd(RAdd(l_r_19,RMul(-0.1e1,l_r_20)),l_r_23)));
    real l_vdot_27 = VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_24,RMul(-0.1e1,l_r_22)),l_r_25,RAdd(RAdd(RMul(0.1e1,l_r_18),l_r_21),l_r_23)));
    real l_vdot_28 = VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_19,RMul(0.1e1,l_r_20)),l_r_23),RAdd(RAdd(RMul(-0.1e1,l_r_18),l_r_21),l_r_23),l_r_25));
    vec3{4} v_29 = VEC3{4}(l_vdot_26,l_vdot_27,l_vdot_28);
    real l_op1_e3_l_38_30 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_15,l_op1_e3_l_9_15),VDot<3,4>(v_29,v_29))));
    vec3{4} v_31 = VScale<3,4>(l_op1_e3_l_38_30,VScale<3,4>(l_op1_e3_l_9_15,v_29));
    globals.camU = PACK(v_31);
    real l_r_33 = RMul(0.e0,l_vdot_26);
    real l_r_34 = RMul(0.e0,l_vdot_27);
    real l_r_35 = RMul(0.e0,l_vdot_28);
    real l_r_36 = RAdd(l_r_33,l_r_34);
    real l_r_37 = RAdd(l_r_36,l_r_35);
    vec3{4} v_38 = VScale<3,4>(l_op1_e3_l_9_15,VEC3{4}(VDot<3,4>(v_13,VEC3{4}(l_r_37,RAdd(l_r_36,RMul(0.1e1,l_vdot_28)),RAdd(RAdd(l_r_33,RMul(-0.1e1,l_vdot_27)),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_36,RMul(-0.1e1,l_vdot_28)),l_r_37,RAdd(RAdd(RMul(0.1e1,l_vdot_26),l_r_34),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_33,RMul(0.1e1,l_vdot_27)),l_r_35),RAdd(RAdd(RMul(-0.1e1,l_vdot_26),l_r_34),l_r_35),l_r_37))));
    real l_r_39 = RMul(l_op1_e3_l_9_15,l_op1_e3_l_38_30);
    real l_r_40 = RMul(l_r_39,VIndex<3,4,0>(v_38));
    real l_r_41 = RMul(l_r_39,VIndex<3,4,1>(v_38));
    real l_r_42 = RMul(l_r_39,VIndex<3,4,2>(v_38));
    globals.camV = <tensor[3]>[l_r_40,l_r_41,l_r_42];
    globals.camDist = l_op1_e3_l_7_14;
    real l_op1_e3_l_10_44 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_44,l_op1_e3_l_7_14);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_44),l_op1_e3_l_7_14),IntToReal(globals.iresV));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_7_14);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_7_14);
    real l_r_45 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.litdir));
    real l_r_46 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.litdir));
    real l_r_47 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.litdir));
    globals.litwsp = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.litdir)),LOAD_0(TensorRef<[3]>(globals.litdir))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_31),l_r_45),RMul(l_r_40,l_r_46)),RMul(VIndex<3,4,0>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_31),l_r_45),RMul(l_r_41,l_r_46)),RMul(VIndex<3,4,1>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_31),l_r_45),RMul(l_r_42,l_r_46)),RMul(VIndex<3,4,2>(v_16),l_r_47)))));
    globals._t = ExtractFemItem<int,CellIndex(FuncCell)>(l__t_11);
    globals._tX = ExtractFem<femData(Space),femData(FemFunc)>(l__t_12);
    globals._tXX = l__t_12;
  }
//***** STRAND *****
strand ray (int p_ui_49,int p_vi_50) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] UV;
  tensor[3] rayOrig;
  tensor[3] rayVec;
  real alphaFix;
  tensor[3] eyeDir;
  real phKa;
  real phKd;
  real phKs;
  real phSp;
  varying output tensor[4] rgba;
  output real raw;
  varying tensor[3] rgb;
  varying real transp;
  initialize (globals) {
    vec3{4} v_59;
    vec3{4} v_57;
    real l_op1_e3_l_9_51 = RNeg(globals.camUmax);
    real l_rayU_52 = RAdd(l_op1_e3_l_9_51,RMul(RDiv(RSub(IntToReal(p_ui_49),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_51)));
    real l_op1_e3_l_9_53 = RNeg(globals.camVmax);
    real l_rayV_54 = RAdd(l_op1_e3_l_9_53,RMul(RDiv(RSub(IntToReal(p_vi_50),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_53)));
    vec3{4} v_55 = VAdd<3,4>(VScale<3,4>(l_rayU_52,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_54,LOAD_0(TensorRef<[3]>(globals.camV))));
    vec3{4} v_56 = v_55;
    if (globals.camOrtho) {
      v_57 = v_56;
    } else {
      v_57 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_58 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_57);
    if (globals.camOrtho) {
      v_59 = VEC3{4}(0.e0,0.e0,0.e0);
    } else {
      real l_r_60 = RDiv(0.1e1,globals.camDist);
      v_59 = VEC3{4}(RMul(l_r_60,VIndex<3,4,0>(v_56)),RMul(l_r_60,VIndex<3,4,1>(v_56)),RMul(l_r_60,VIndex<3,4,2>(v_56)));
    }
    vec3{4} v_61 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),v_59);
    real l_op1_e3_l_7_62 = Sqrt(VDot<3,4>(v_61,v_61));
    self.rayU = l_rayU_52;
    self.rayV = l_rayV_54;
    self.rayN = globals.camNearVsp;
    self.UV = PACK(v_56);
    self.rayOrig = PACK(v_58);
    self.rayVec = PACK(v_61);
    self.alphaFix = RDiv(RMul(globals.rayStep,l_op1_e3_l_7_62),globals.refStep);
    self.eyeDir = PACK(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_7_62),v_61)));
    self.phKa = TensorIndex<&tensor[4],[0]>(TensorRef<[4]>(globals.phong));
    self.phKd = TensorIndex<&tensor[4],[1]>(TensorRef<[4]>(globals.phong));
    self.phKs = TensorIndex<&tensor[4],[2]>(TensorRef<[4]>(globals.phong));
    self.phSp = TensorIndex<&tensor[4],[3]>(TensorRef<[4]>(globals.phong));
    self.rgba = <tensor[4]>[0.e0,0.e0,0.e0,0.e0];
    self.raw = 0.e0;
    self.rgb = <tensor[3]>[0.e0,0.e0,0.e0];
    self.transp = 0.1e1;
  }
  update (globals) {
    real l_transp_924;
    vec3{4} v_912;
    real l_scomp_862;
    tensor[3][3] l_E_789;
    real[3] l_evals_788;
    bool l__t_449;
    real l_rayN_69 = RAdd(self.rayN,globals.rayStep);
    if (GT<real>(l_rayN_69,globals.camFarVsp)) {
      self.rayN = l_rayN_69;
      stabilize;
    }
    vec3{4} v_70 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_69,LOAD_0(TensorRef<[3]>(self.rayVec))));
    tensor[3] _arg_71 = PACK(v_70);
    vec3{4} v_72 = v_70;
    if (ExtractFemItemN<[femData(Mesh),tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),"","",[],int>(ExtractFemItem<femData(RefCell),RefCell(Mesh)>(globals.block),_arg_71,0.1e-8)) {
      bool l__t_448;
      int l_mulRes_73 = IMul(globals._t,84);
      int t_74 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_73);
      int t_75 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,1));
      int t_76 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,2));
      int t_77 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,3));
      int t_78 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,4));
      int t_79 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,5));
      int t_80 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,6));
      int t_81 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,7));
      int t_82 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,8));
      int t_83 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,9));
      int t_84 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,10));
      int t_85 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,11));
      int t_86 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,12));
      int t_87 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,13));
      int t_88 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,14));
      int t_89 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,15));
      int t_90 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,16));
      int t_91 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,17));
      int t_92 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,18));
      int t_93 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,19));
      int t_94 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,20));
      int t_95 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,21));
      int t_96 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,22));
      int t_97 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,23));
      int t_98 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,24));
      int t_99 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,25));
      int t_100 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,26));
      int t_101 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,27));
      int t_102 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,28));
      int t_103 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,29));
      int t_104 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,30));
      int t_105 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,31));
      int t_106 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,32));
      int t_107 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,33));
      int t_108 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,34));
      int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,35));
      int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,36));
      int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,37));
      int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,38));
      int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,39));
      int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,40));
      int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,41));
      int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,42));
      int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,43));
      int t_118 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,44));
      int t_119 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,45));
      int t_120 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,46));
      int t_121 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,47));
      int t_122 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,48));
      int t_123 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,49));
      int t_124 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,50));
      int t_125 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,51));
      int t_126 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,52));
      int t_127 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,53));
      int t_128 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,54));
      int t_129 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,55));
      int t_130 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,56));
      int t_131 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,57));
      int t_132 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,58));
      int t_133 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,59));
      int t_134 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,60));
      int t_135 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,61));
      int t_136 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,62));
      int t_137 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,63));
      int t_138 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,64));
      int t_139 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,65));
      int t_140 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,66));
      int t_141 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,67));
      int t_142 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,68));
      int t_143 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,69));
      int t_144 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,70));
      int t_145 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,71));
      int t_146 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,72));
      int t_147 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,73));
      int t_148 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,74));
      int t_149 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,75));
      int t_150 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,76));
      int t_151 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,77));
      int t_152 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,78));
      int t_153 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,79));
      int t_154 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,80));
      int t_155 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,81));
      int t_156 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,82));
      int t_157 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,83));
      real t_158 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_157));
      real t_159 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_156));
      real t_160 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_155));
      real t_161 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_154));
      real t_162 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_153));
      real t_163 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_152));
      real t_164 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_151));
      real t_165 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_150));
      real t_166 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_149));
      real t_167 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_148));
      real t_168 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_147));
      real t_169 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_146));
      real t_170 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_145));
      real t_171 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_144));
      real t_172 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_143));
      real t_173 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_142));
      real t_174 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_141));
      real t_175 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_140));
      real t_176 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_139));
      real t_177 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_138));
      real t_178 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_137));
      real t_179 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_136));
      real t_180 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_135));
      real t_181 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_134));
      real t_182 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_133));
      real t_183 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_132));
      real t_184 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_131));
      real t_185 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_130));
      real t_186 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_129));
      real t_187 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_128));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_127));
      real t_189 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_126));
      real t_190 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_125));
      real t_191 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_124));
      real t_192 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_123));
      real t_193 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_122));
      real t_194 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_121));
      real t_195 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_120));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_119));
      real t_197 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_118));
      real t_198 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_117));
      real t_199 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_116));
      real t_200 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_115));
      real t_201 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_114));
      real t_202 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_113));
      real t_203 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_112));
      real t_204 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_111));
      real t_205 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_110));
      real t_206 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_109));
      real t_207 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_108));
      real t_208 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_107));
      real t_209 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_106));
      real t_210 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_105));
      real t_211 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_104));
      real t_212 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_103));
      real t_213 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_102));
      real t_214 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_101));
      real t_215 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_100));
      real t_216 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_99));
      real t_217 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_98));
      real t_218 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_97));
      real t_219 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_96));
      real t_220 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_95));
      real t_221 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_94));
      real t_222 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_93));
      real t_223 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_92));
      real t_224 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_91));
      real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_90));
      real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_89));
      real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_88));
      real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_87));
      real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_86));
      real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_85));
      real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_84));
      real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_83));
      real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_82));
      real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_81));
      real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_80));
      real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_79));
      real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_78));
      real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_77));
      real t_239 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_76));
      real t_240 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_75));
      real t_241 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_74));
      vec4 v_242 = VEC4(t_241,t_240,t_239,t_238);
      vec4 v_243 = VEC4(t_237,t_236,t_235,t_234);
      vec4 v_244 = VEC4(t_233,t_232,t_231,t_230);
      vec4 v_245 = VEC4(t_229,t_228,t_227,t_226);
      vec4 v_246 = VEC4(t_225,t_224,t_223,t_222);
      vec4 v_247 = VEC4(t_221,t_220,t_219,t_218);
      vec4 v_248 = VEC4(t_217,t_216,t_215,t_214);
      vec4 v_249 = VEC4(t_213,t_212,t_211,t_210);
      vec4 v_250 = VEC4(t_209,t_208,t_207,t_206);
      vec4 v_251 = VEC4(t_205,t_204,t_203,t_202);
      vec4 v_252 = VEC4(t_201,t_200,t_199,t_198);
      vec4 v_253 = VEC4(t_197,t_196,t_195,t_194);
      vec4 v_254 = VEC4(t_193,t_192,t_191,t_190);
      vec4 v_255 = VEC4(t_189,t_188,t_187,t_186);
      vec4 v_256 = VEC4(t_185,t_184,t_183,t_182);
      vec4 v_257 = VEC4(t_181,t_180,t_179,t_178);
      vec4 v_258 = VEC4(t_177,t_176,t_175,t_174);
      vec4 v_259 = VEC4(t_173,t_172,t_171,t_170);
      vec4 v_260 = VEC4(t_169,t_168,t_167,t_166);
      vec4 v_261 = VEC4(t_165,t_164,t_163,t_162);
      vec4 v_262 = VEC4(t_161,t_160,t_159,t_158);
      real l_varAcc_263 = VIndex<3,4,0>(v_72);
      real l_varAcc_264 = VIndex<3,4,1>(v_72);
      real l_varAcc_265 = VIndex<3,4,2>(v_72);
      real l_prod_266 = RMul(0.1e1,0.1e1);
      real l_prod_267 = RMul(0.1e1,l_prod_266);
      real l_basisEval_268 = RMul(0.2e1,l_prod_267);
      real l_prod_269 = RMul(0.1e1,l_varAcc_265);
      real l_prod_270 = RMul(0.1e1,l_prod_269);
      real l_basisEval_271 = RMul(0.2e1,l_prod_270);
      real l_prod_272 = RMul(l_varAcc_264,0.1e1);
      real l_prod_273 = RMul(0.1e1,l_prod_272);
      real l_basisEval_274 = RMul(0.2e1,l_prod_273);
      real l_prod_275 = RMul(l_varAcc_263,l_prod_266);
      real l_prod2_276 = RMul(l_varAcc_265,l_varAcc_265);
      real l_prod_277 = RMul(0.1e1,l_prod2_276);
      real l_prod_278 = RMul(0.1e1,l_prod_277);
      real l_basisEval_279 = RMul(0.2e1,l_prod_278);
      real l_prod_280 = RMul(l_varAcc_264,l_varAcc_265);
      real l_prod_281 = RMul(0.1e1,l_prod_280);
      real l_basisEval_282 = RMul(0.2e1,l_prod_281);
      real l_prod2_283 = RMul(l_varAcc_264,l_varAcc_264);
      real l_prod_284 = RMul(l_prod2_283,0.1e1);
      real l_prod_285 = RMul(0.1e1,l_prod_284);
      real l_basisEval_286 = RMul(0.2e1,l_prod_285);
      real l_prod_287 = RMul(l_varAcc_263,l_prod_269);
      real l_basisEval_288 = RMul(0.6e1,l_prod_287);
      real l_prod_289 = RMul(l_varAcc_263,l_prod_272);
      real l_basisEval_290 = RMul(0.6e1,l_prod_289);
      real l_prod2_291 = RMul(l_varAcc_263,l_varAcc_263);
      real l_prod_292 = RMul(l_prod2_291,l_prod_266);
      real l_prod3_293 = RMul(l_prod2_276,l_varAcc_265);
      real l_prod_294 = RMul(0.1e1,l_prod3_293);
      real l_prod_295 = RMul(0.1e1,l_prod_294);
      real l_basisEval_296 = RMul(0.2e1,l_prod_295);
      real l_prod_297 = RMul(l_varAcc_264,l_prod2_276);
      real l_prod_298 = RMul(0.1e1,l_prod_297);
      real l_basisEval_299 = RMul(0.2e1,l_prod_298);
      real l_prod_300 = RMul(l_prod2_283,l_varAcc_265);
      real l_prod_301 = RMul(0.1e1,l_prod_300);
      real l_basisEval_302 = RMul(0.2e1,l_prod_301);
      real l_prod3_303 = RMul(l_prod2_283,l_varAcc_264);
      real l_prod_304 = RMul(l_prod3_303,0.1e1);
      real l_prod_305 = RMul(0.1e1,l_prod_304);
      real l_basisEval_306 = RMul(0.2e1,l_prod_305);
      real l_prod_307 = RMul(l_varAcc_263,l_prod_277);
      real l_basisEval_308 = RMul(0.6e1,l_prod_307);
      real l_prod_309 = RMul(l_varAcc_263,l_prod_280);
      real l_basisEval_310 = RMul(0.6e1,l_prod_309);
      real l_prod_311 = RMul(l_varAcc_263,l_prod_284);
      real l_basisEval_312 = RMul(0.6e1,l_prod_311);
      real l_prod_313 = RMul(l_prod2_291,l_prod_269);
      real l_prod_314 = RMul(l_prod2_291,l_prod_272);
      real l_prod3_315 = RMul(l_prod2_291,l_varAcc_263);
      real l_prod_316 = RMul(l_prod3_315,l_prod_266);
      real l_prod4_317 = RMul(l_prod3_293,l_varAcc_265);
      real l_prod_318 = RMul(0.1e1,l_prod4_317);
      real l_prod_319 = RMul(0.1e1,l_prod_318);
      real l_basisEval_320 = RMul(0.2e1,l_prod_319);
      real l_prod_321 = RMul(l_varAcc_264,l_prod3_293);
      real l_prod_322 = RMul(0.1e1,l_prod_321);
      real l_basisEval_323 = RMul(0.2e1,l_prod_322);
      real l_prod_324 = RMul(l_prod2_283,l_prod2_276);
      real l_prod_325 = RMul(0.1e1,l_prod_324);
      real l_prod_326 = RMul(l_prod3_303,l_varAcc_265);
      real l_prod_327 = RMul(0.1e1,l_prod_326);
      real l_basisEval_328 = RMul(0.2e1,l_prod_327);
      real l_prod4_329 = RMul(l_prod3_303,l_varAcc_264);
      real l_prod_330 = RMul(l_prod4_329,0.1e1);
      real l_prod_331 = RMul(0.1e1,l_prod_330);
      real l_basisEval_332 = RMul(0.2e1,l_prod_331);
      real l_prod_333 = RMul(l_varAcc_263,l_prod_294);
      real l_prod_334 = RMul(l_varAcc_263,l_prod_297);
      real l_basisEval_335 = RMul(0.6e1,l_prod_334);
      real l_prod_336 = RMul(l_varAcc_263,l_prod_300);
      real l_basisEval_337 = RMul(0.6e1,l_prod_336);
      real l_prod_338 = RMul(l_varAcc_263,l_prod_304);
      real l_prod_339 = RMul(l_prod2_291,l_prod_277);
      real l_basisEval_340 = RMul(0.12e2,l_prod_339);
      real l_prod_341 = RMul(l_prod2_291,l_prod_280);
      real l_prod_342 = RMul(l_prod2_291,l_prod_284);
      real l_basisEval_343 = RMul(0.12e2,l_prod_342);
      real l_prod_344 = RMul(l_prod3_315,l_prod_269);
      real l_prod_345 = RMul(l_prod3_315,l_prod_272);
      real l_prod4_346 = RMul(l_prod3_315,l_varAcc_263);
      real l_prod_347 = RMul(l_prod4_346,l_prod_266);
      real l_basisEval_348 = RMul(0.1e1,l_prod_267);
      real l_basisEval_349 = RMul(0.1e1,l_prod_270);
      real l_basisEval_350 = RMul(0.2e1,l_prod_275);
      real l_basisEval_351 = RMul(0.1e1,l_prod_278);
      real l_basisEval_352 = RMul(0.3e1,l_prod_285);
      real l_basisEval_353 = RMul(0.2e1,l_prod_287);
      real l_basisEval_354 = RMul(0.3e1,l_prod_292);
      real l_basisEval_355 = RMul(0.1e1,l_prod_295);
      real l_basisEval_356 = RMul(0.3e1,l_prod_301);
      real l_basisEval_357 = RMul(0.4e1,l_prod_305);
      real l_basisEval_358 = RMul(0.2e1,l_prod_307);
      real l_basisEval_359 = RMul(0.4e1,l_prod_309);
      real l_basisEval_360 = RMul(0.3e1,l_prod_313);
      real l_basisEval_361 = RMul(0.6e1,l_prod_314);
      real l_basisEval_362 = RMul(0.4e1,l_prod_316);
      real l_basisEval_363 = RMul(0.1e1,l_prod_319);
      real l_basisEval_364 = RMul(0.3e1,l_prod_325);
      real l_basisEval_365 = RMul(0.4e1,l_prod_327);
      real l_basisEval_366 = RMul(0.5e1,l_prod_331);
      real l_basisEval_367 = RMul(0.2e1,l_prod_333);
      real l_basisEval_368 = RMul(0.3e1,l_prod_339);
      real l_basisEval_369 = RMul(0.6e1,l_prod_341);
      real l_basisEval_370 = RMul(0.4e1,l_prod_344);
      real l_basisEval_371 = RMul(0.5e1,l_prod_347);
      real l_basisEval_372 = RMul(0.1e1,l_prod_273);
      real l_basisEval_373 = RMul(0.3e1,l_prod_278);
      real l_basisEval_374 = RMul(0.1e1,l_prod_285);
      real l_basisEval_375 = RMul(0.2e1,l_prod_289);
      real l_basisEval_376 = RMul(0.4e1,l_prod_295);
      real l_basisEval_377 = RMul(0.3e1,l_prod_298);
      real l_basisEval_378 = RMul(0.1e1,l_prod_305);
      real l_basisEval_379 = RMul(0.2e1,l_prod_311);
      real l_basisEval_380 = RMul(0.6e1,l_prod_313);
      real l_basisEval_381 = RMul(0.3e1,l_prod_314);
      real l_basisEval_382 = RMul(0.5e1,l_prod_319);
      real l_basisEval_383 = RMul(0.4e1,l_prod_322);
      real l_basisEval_384 = RMul(0.1e1,l_prod_331);
      real l_basisEval_385 = RMul(0.2e1,l_prod_338);
      real l_basisEval_386 = RMul(0.3e1,l_prod_342);
      real l_basisEval_387 = RMul(0.4e1,l_prod_345);
      real l_basisEval_388 = RMul(0.6e1,l_prod_281);
      real l_basisEval_389 = RMul(0.2e1,l_prod_292);
      real l_basisEval_390 = RMul(0.6e1,l_prod_298);
      real l_basisEval_391 = RMul(0.2e1,l_prod_313);
      real l_basisEval_392 = RMul(0.2e1,l_prod_316);
      real l_basisEval_393 = RMul(0.12e2,l_prod_325);
      real l_basisEval_394 = RMul(0.2e1,l_prod_344);
      real l_basisEval_395 = RMul(0.2e1,l_prod_347);
      real l_basisEval_396 = RMul(0.1e1,l_prod_275);
      real l_basisEval_397 = RMul(0.1e1,l_prod_292);
      real l_basisEval_398 = RMul(0.6e1,l_prod_301);
      real l_basisEval_399 = RMul(0.3e1,l_prod_307);
      real l_basisEval_400 = RMul(0.3e1,l_prod_311);
      real l_basisEval_401 = RMul(0.2e1,l_prod_314);
      real l_basisEval_402 = RMul(0.1e1,l_prod_316);
      real l_basisEval_403 = RMul(0.4e1,l_prod_333);
      real l_basisEval_404 = RMul(0.4e1,l_prod_338);
      real l_basisEval_405 = RMul(0.2e1,l_prod_345);
      real l_basisEval_406 = RMul(0.1e1,l_prod_347);
      real l_vdot_407 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_348,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_274,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_351,l_basisEval_282)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_352,0.e0,l_basisEval_353,RMul(0.4e1,l_prod_289))),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_354,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_355,l_basisEval_299)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_356,l_basisEval_357,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_359,l_basisEval_312,0.e0,l_basisEval_360)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_361,0.e0,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_366,0.e0,l_basisEval_367,RMul(0.4e1,l_prod_334))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_337,RMul(0.8e1,l_prod_338),0.e0,l_basisEval_368)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_369,RMul(0.9e1,l_prod_342),0.e0,l_basisEval_370)),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.8e1,l_prod_345),0.e0,l_basisEval_371,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_408 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_372)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_373,l_basisEval_282,l_basisEval_374)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,RMul(0.4e1,l_prod_287),l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_354,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_376,l_basisEval_377,l_basisEval_302)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_378,0.e0,l_basisEval_308,l_basisEval_359)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_379,0.e0,l_basisEval_380,l_basisEval_381)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_362,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.8e1,l_prod_333),l_basisEval_335,RMul(0.4e1,l_prod_336))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_385,0.e0,RMul(0.9e1,l_prod_339),l_basisEval_369)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_386,0.e0,RMul(0.8e1,l_prod_344),l_basisEval_387)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_371,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_409 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_274,0.e0,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_373,RMul(0.4e1,l_prod_281),l_basisEval_352)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_353,l_basisEval_375)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_376,l_basisEval_390,l_basisEval_398,l_basisEval_357)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_399,l_basisEval_359)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_400,0.e0,0.e0,l_basisEval_391)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_401,0.e0,0.e0,l_basisEval_402)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_382,RMul(0.8e1,l_prod_322),RMul(0.9e1,l_prod_325))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.8e1,l_prod_327),l_basisEval_366,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_403,l_basisEval_335,l_basisEval_337,l_basisEval_404)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,0.e0,l_basisEval_368,RMul(0.4e1,l_prod_341))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_386,0.e0,0.e0,l_basisEval_394)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_405,0.e0,0.e0,l_basisEval_406)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_410 = <tensor[3,3]>[RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_271,l_basisEval_274,RMul(0.6e1,l_prod_275))),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_279,l_basisEval_282,l_basisEval_286)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_288,l_basisEval_290,RMul(0.12e2,l_prod_292),0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_296,l_basisEval_299)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_302,l_basisEval_306,l_basisEval_308,l_basisEval_310)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_312,RMul(0.12e2,l_prod_313),RMul(0.12e2,l_prod_314),RMul(0.20e2,l_prod_316))),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_320,l_basisEval_323,RMul(0.2e1,l_prod_325))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_328,l_basisEval_332,RMul(0.6e1,l_prod_333),l_basisEval_335)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_337,RMul(0.6e1,l_prod_338),l_basisEval_340,RMul(0.12e2,l_prod_341))),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_343,RMul(0.20e2,l_prod_344),RMul(0.20e2,l_prod_345),RMul(0.30e2,l_prod_347))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_407,l_vdot_408,l_vdot_407,RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_271,RMul(0.6e1,l_prod_273),0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_350,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,l_basisEval_279,l_basisEval_388)),RAdd(VDot<4,4>(v_248,VEC4(RMul(0.12e2,l_prod_285),0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_290,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,l_basisEval_296,l_basisEval_390,RMul(0.12e2,l_prod_301))),RAdd(VDot<4,4>(v_252,VEC4(RMul(0.20e2,l_prod_305),0.e0,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_310,RMul(0.12e2,l_prod_311),0.e0,0.e0)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_391,l_basisEval_361,0.e0,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_392,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,l_basisEval_320,RMul(0.6e1,l_prod_322))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_393,RMul(0.20e2,l_prod_327),RMul(0.30e2,l_prod_331),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,l_basisEval_367,l_basisEval_335,RMul(0.12e2,l_prod_336))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.20e2,l_prod_338),0.e0,0.e0,RMul(0.2e1,l_prod_339))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_369,l_basisEval_343,0.e0,0.e0)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_394,RMul(0.6e1,l_prod_345),0.e0,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_395,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_409,l_vdot_408,l_vdot_409,RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_270),l_basisEval_274)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(RMul(0.12e2,l_prod_278),l_basisEval_388,l_basisEval_286,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_288,l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_389,0.e0,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_295))),RAdd(VDot<4,4>(v_251,VEC4(RMul(0.12e2,l_prod_298),l_basisEval_398,l_basisEval_306,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,RMul(0.12e2,l_prod_307),l_basisEval_310,l_basisEval_379)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_380,l_basisEval_401)),RAdd(VDot<4,4>(v_254,VEC4(0.e0,0.e0,l_basisEval_392,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.30e2,l_prod_319),RMul(0.20e2,l_prod_322),l_basisEval_393,RMul(0.6e1,l_prod_327))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_332,0.e0,0.e0,RMul(0.20e2,l_prod_333))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.12e2,l_prod_334),l_basisEval_337,l_basisEval_385,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_340,l_basisEval_369,RMul(0.2e1,l_prod_342))),RAdd(VDot<4,4>(v_260,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_344),l_basisEval_405)),RAdd(VDot<4,4>(v_261,VEC4(0.e0,0.e0,l_basisEval_395,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      real[3] l__t_411 = EigenVals3x3(TensorRef<[3,3]>(t_410));
      real l_basisEval_412 = RMul(0.2e1,l_prod_309);
      real l_basisEval_413 = RMul(0.2e1,l_prod_334);
      real l_basisEval_414 = RMul(0.2e1,l_prod_336);
      real l_prod_415 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_317,l_varAcc_265)));
      real l_basisEval_416 = RMul(0.1e1,l_prod_415);
      real l_prod_417 = RMul(0.1e1,RMul(l_varAcc_264,l_prod4_317));
      real l_prod_418 = RMul(0.1e1,RMul(l_prod2_283,l_prod3_293));
      real l_prod_419 = RMul(0.1e1,RMul(l_prod3_303,l_prod2_276));
      real l_prod_420 = RMul(0.1e1,RMul(l_prod4_329,l_varAcc_265));
      real l_prod_421 = RMul(0.1e1,RMul(RMul(l_prod4_329,l_varAcc_264),0.1e1));
      real l_basisEval_422 = RMul(0.1e1,l_prod_421);
      real l_prod_423 = RMul(l_varAcc_263,l_prod_318);
      real l_prod_424 = RMul(l_varAcc_263,l_prod_321);
      real l_basisEval_425 = RMul(0.2e1,l_prod_424);
      real l_prod_426 = RMul(l_varAcc_263,l_prod_324);
      real l_prod_427 = RMul(l_varAcc_263,l_prod_326);
      real l_basisEval_428 = RMul(0.2e1,l_prod_427);
      real l_prod_429 = RMul(l_varAcc_263,l_prod_330);
      real l_prod_430 = RMul(l_prod2_291,l_prod_294);
      real l_prod_431 = RMul(l_prod2_291,l_prod_297);
      real l_basisEval_432 = RMul(0.3e1,l_prod_431);
      real l_prod_433 = RMul(l_prod2_291,l_prod_300);
      real l_basisEval_434 = RMul(0.3e1,l_prod_433);
      real l_prod_435 = RMul(l_prod2_291,l_prod_304);
      real l_prod_436 = RMul(l_prod3_315,l_prod_277);
      real l_prod_437 = RMul(l_prod3_315,l_prod_280);
      real l_prod_438 = RMul(l_prod3_315,l_prod_284);
      real l_prod_439 = RMul(l_prod4_346,l_prod_269);
      real l_prod_440 = RMul(l_prod4_346,l_prod_272);
      real l_prod_441 = RMul(RMul(l_prod4_346,l_varAcc_263),l_prod_266);
      real l_basisEval_442 = RMul(0.2e1,l_prod_341);
      real l_basisEval_443 = RMul(0.3e1,l_prod_426);
      real l_basisEval_444 = RMul(0.2e1,l_prod_437);
      real l_basisEval_445 = RMul(0.1e1,l_prod_441);
      vec3{4} v_446 = VEC3{4}(RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_372,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_351,RMul(0.1e1,l_prod_281))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_374,l_basisEval_353,l_basisEval_375,l_basisEval_354)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_355,RMul(0.1e1,l_prod_298),RMul(0.1e1,l_prod_301))),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_378,l_basisEval_358,l_basisEval_412,l_basisEval_379)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_360,l_basisEval_381,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_363,RMul(0.1e1,l_prod_322),RMul(0.1e1,l_prod_325))),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_327),l_basisEval_384,l_basisEval_367,l_basisEval_413)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_414,l_basisEval_385,l_basisEval_368,RMul(0.3e1,l_prod_341))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_386,l_basisEval_370,l_basisEval_387,l_basisEval_371)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_416)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_417),RMul(0.1e1,l_prod_418),RMul(0.1e1,l_prod_419),RMul(0.1e1,l_prod_420))),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_422,RMul(0.2e1,l_prod_423),l_basisEval_425,RMul(0.2e1,l_prod_426))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_428,RMul(0.2e1,l_prod_429),RMul(0.3e1,l_prod_430),l_basisEval_432)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_434,RMul(0.3e1,l_prod_435),RMul(0.4e1,l_prod_436),RMul(0.4e1,l_prod_437))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.4e1,l_prod_438),RMul(0.5e1,l_prod_439),RMul(0.5e1,l_prod_440),RMul(0.6e1,l_prod_441))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_349,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_396,0.e0,0.e0,l_basisEval_351)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_282,l_basisEval_352,0.e0,RMul(0.1e1,l_prod_287))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_375,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_355,l_basisEval_299,l_basisEval_356)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_357,0.e0,RMul(0.1e1,l_prod_307),l_basisEval_412)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_400,0.e0,RMul(0.1e1,l_prod_313),l_basisEval_401)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_402,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_366,0.e0,RMul(0.1e1,l_prod_333),l_basisEval_413)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.3e1,l_prod_336),l_basisEval_404,0.e0,RMul(0.1e1,l_prod_339))),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_442,l_basisEval_386,0.e0,RMul(0.1e1,l_prod_344))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_405,0.e0,l_basisEval_406,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_416,RMul(0.2e1,l_prod_417),RMul(0.3e1,l_prod_418))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.4e1,l_prod_419),RMul(0.5e1,l_prod_420),RMul(0.6e1,l_prod_421),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_423),l_basisEval_425,l_basisEval_443,RMul(0.4e1,l_prod_427))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.5e1,l_prod_429),0.e0,RMul(0.1e1,l_prod_430),RMul(0.2e1,l_prod_431))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_434,RMul(0.4e1,l_prod_435),0.e0,RMul(0.1e1,l_prod_436))),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_444,RMul(0.3e1,l_prod_438),0.e0,RMul(0.1e1,l_prod_439))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.2e1,l_prod_440),0.e0,l_basisEval_445,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,l_basisEval_348,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_271,l_basisEval_372,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_373,l_basisEval_282)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_374,0.e0,l_basisEval_353,RMul(0.1e1,l_prod_289))),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_397,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_376,l_basisEval_377,l_basisEval_302,l_basisEval_378)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_399,l_basisEval_412,RMul(0.1e1,l_prod_311))),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_391,RMul(0.1e1,l_prod_314),0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_402,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_403,RMul(0.3e1,l_prod_334),l_basisEval_414)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_338),0.e0,l_basisEval_368,l_basisEval_442)),RAdd(VDot<4,4>(v_254,VEC4(RMul(0.1e1,l_prod_342),0.e0,l_basisEval_394,RMul(0.1e1,l_prod_345))),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_406,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.6e1,l_prod_415),RMul(0.5e1,l_prod_417),RMul(0.4e1,l_prod_418),RMul(0.3e1,l_prod_419))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.2e1,l_prod_420),l_basisEval_422,0.e0,RMul(0.5e1,l_prod_423))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.4e1,l_prod_424),l_basisEval_443,l_basisEval_428,RMul(0.1e1,l_prod_429))),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.4e1,l_prod_430),l_basisEval_432,RMul(0.2e1,l_prod_433))),RAdd(VDot<4,4>(v_260,VEC4(RMul(0.1e1,l_prod_435),0.e0,RMul(0.3e1,l_prod_436),l_basisEval_444)),RAdd(VDot<4,4>(v_261,VEC4(RMul(0.1e1,l_prod_438),0.e0,RMul(0.2e1,l_prod_439),RMul(0.1e1,l_prod_440))),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_445,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)))))))))))))))))))))));
      if (GT<real>(RDiv(RNeg(Subscript<real[3]>(l__t_411,1)),RAdd(globals.fBias,Sqrt(VDot<3,4>(v_446,v_446)))),globals.fStrTh)) {
        bool l__t_447;
        if (GTE<real>(0.1e1,globals.fMaskTh)) {
          l__t_447 = true;
        } else {
          l__t_447 = false;
        }
        l__t_448 = l__t_447;
      } else {
        l__t_448 = false;
      }
      l__t_449 = l__t_448;
    } else {
      l__t_449 = false;
    }
    if (BNot(l__t_449)) {
      self.rayN = l_rayN_69;
      active;
    }
    int l_mulRes_450 = IMul(globals._t,84);
    int t_451 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_450);
    int t_452 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,1));
    int t_453 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,2));
    int t_454 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,3));
    int t_455 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,4));
    int t_456 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,5));
    int t_457 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,6));
    int t_458 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,7));
    int t_459 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,8));
    int t_460 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,9));
    int t_461 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,10));
    int t_462 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,11));
    int t_463 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,12));
    int t_464 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,13));
    int t_465 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,14));
    int t_466 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,15));
    int t_467 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,16));
    int t_468 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,17));
    int t_469 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,18));
    int t_470 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,19));
    int t_471 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,20));
    int t_472 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,21));
    int t_473 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,22));
    int t_474 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,23));
    int t_475 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,24));
    int t_476 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,25));
    int t_477 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,26));
    int t_478 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,27));
    int t_479 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,28));
    int t_480 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,29));
    int t_481 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,30));
    int t_482 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,31));
    int t_483 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,32));
    int t_484 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,33));
    int t_485 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,34));
    int t_486 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,35));
    int t_487 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,36));
    int t_488 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,37));
    int t_489 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,38));
    int t_490 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,39));
    int t_491 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,40));
    int t_492 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,41));
    int t_493 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,42));
    int t_494 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,43));
    int t_495 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,44));
    int t_496 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,45));
    int t_497 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,46));
    int t_498 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,47));
    int t_499 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,48));
    int t_500 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,49));
    int t_501 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,50));
    int t_502 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,51));
    int t_503 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,52));
    int t_504 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,53));
    int t_505 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,54));
    int t_506 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,55));
    int t_507 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,56));
    int t_508 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,57));
    int t_509 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,58));
    int t_510 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,59));
    int t_511 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,60));
    int t_512 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,61));
    int t_513 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,62));
    int t_514 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,63));
    int t_515 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,64));
    int t_516 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,65));
    int t_517 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,66));
    int t_518 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,67));
    int t_519 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,68));
    int t_520 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,69));
    int t_521 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,70));
    int t_522 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,71));
    int t_523 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,72));
    int t_524 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,73));
    int t_525 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,74));
    int t_526 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,75));
    int t_527 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,76));
    int t_528 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,77));
    int t_529 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,78));
    int t_530 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,79));
    int t_531 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,80));
    int t_532 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,81));
    int t_533 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,82));
    int t_534 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,83));
    real t_535 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_534));
    real t_536 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_533));
    real t_537 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_532));
    real t_538 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_531));
    real t_539 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_530));
    real t_540 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_529));
    real t_541 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_528));
    real t_542 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_527));
    real t_543 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_526));
    real t_544 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_525));
    real t_545 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_524));
    real t_546 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_523));
    real t_547 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_522));
    real t_548 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_521));
    real t_549 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_520));
    real t_550 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_519));
    real t_551 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_518));
    real t_552 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_517));
    real t_553 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_516));
    real t_554 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_515));
    real t_555 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_514));
    real t_556 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_513));
    real t_557 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_512));
    real t_558 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_511));
    real t_559 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_510));
    real t_560 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_509));
    real t_561 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_508));
    real t_562 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_507));
    real t_563 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_506));
    real t_564 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_505));
    real t_565 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_504));
    real t_566 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_503));
    real t_567 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_502));
    real t_568 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_501));
    real t_569 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_500));
    real t_570 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_499));
    real t_571 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_498));
    real t_572 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_497));
    real t_573 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_496));
    real t_574 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_495));
    real t_575 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_494));
    real t_576 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_493));
    real t_577 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_492));
    real t_578 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_491));
    real t_579 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_490));
    real t_580 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_489));
    real t_581 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_488));
    real t_582 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_487));
    real t_583 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_486));
    real t_584 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_485));
    real t_585 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_484));
    real t_586 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_483));
    real t_587 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_482));
    real t_588 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_481));
    real t_589 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_480));
    real t_590 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_479));
    real t_591 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_478));
    real t_592 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_477));
    real t_593 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_476));
    real t_594 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_475));
    real t_595 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_474));
    real t_596 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_473));
    real t_597 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_472));
    real t_598 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_471));
    real t_599 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_470));
    real t_600 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_469));
    real t_601 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_468));
    real t_602 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_467));
    real t_603 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_466));
    real t_604 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_465));
    real t_605 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_464));
    real t_606 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_463));
    real t_607 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_462));
    real t_608 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_461));
    real t_609 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_460));
    real t_610 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_459));
    real t_611 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_458));
    real t_612 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_457));
    real t_613 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_456));
    real t_614 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_455));
    real t_615 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_454));
    real t_616 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_453));
    real t_617 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_452));
    real t_618 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_451));
    vec4 v_619 = VEC4(t_618,t_617,t_616,t_615);
    vec4 v_620 = VEC4(t_614,t_613,t_612,t_611);
    vec4 v_621 = VEC4(t_610,t_609,t_608,t_607);
    vec4 v_622 = VEC4(t_606,t_605,t_604,t_603);
    vec4 v_623 = VEC4(t_602,t_601,t_600,t_599);
    vec4 v_624 = VEC4(t_598,t_597,t_596,t_595);
    vec4 v_625 = VEC4(t_594,t_593,t_592,t_591);
    vec4 v_626 = VEC4(t_590,t_589,t_588,t_587);
    vec4 v_627 = VEC4(t_586,t_585,t_584,t_583);
    vec4 v_628 = VEC4(t_582,t_581,t_580,t_579);
    vec4 v_629 = VEC4(t_578,t_577,t_576,t_575);
    vec4 v_630 = VEC4(t_574,t_573,t_572,t_571);
    vec4 v_631 = VEC4(t_570,t_569,t_568,t_567);
    vec4 v_632 = VEC4(t_566,t_565,t_564,t_563);
    vec4 v_633 = VEC4(t_562,t_561,t_560,t_559);
    vec4 v_634 = VEC4(t_558,t_557,t_556,t_555);
    vec4 v_635 = VEC4(t_554,t_553,t_552,t_551);
    vec4 v_636 = VEC4(t_550,t_549,t_548,t_547);
    vec4 v_637 = VEC4(t_546,t_545,t_544,t_543);
    vec4 v_638 = VEC4(t_542,t_541,t_540,t_539);
    vec4 v_639 = VEC4(t_538,t_537,t_536,t_535);
    real l_varAcc_640 = VIndex<3,4,0>(v_72);
    real l_varAcc_641 = VIndex<3,4,1>(v_72);
    real l_varAcc_642 = VIndex<3,4,2>(v_72);
    real l_prod_643 = RMul(0.1e1,0.1e1);
    real l_prod_644 = RMul(0.1e1,l_prod_643);
    real l_basisEval_645 = RMul(0.2e1,l_prod_644);
    real l_prod_646 = RMul(0.1e1,l_varAcc_642);
    real l_prod_647 = RMul(0.1e1,l_prod_646);
    real l_basisEval_648 = RMul(0.2e1,l_prod_647);
    real l_prod_649 = RMul(l_varAcc_641,0.1e1);
    real l_prod_650 = RMul(0.1e1,l_prod_649);
    real l_basisEval_651 = RMul(0.2e1,l_prod_650);
    real l_prod_652 = RMul(l_varAcc_640,l_prod_643);
    real l_prod2_653 = RMul(l_varAcc_642,l_varAcc_642);
    real l_prod_654 = RMul(0.1e1,l_prod2_653);
    real l_prod_655 = RMul(0.1e1,l_prod_654);
    real l_basisEval_656 = RMul(0.2e1,l_prod_655);
    real l_prod_657 = RMul(l_varAcc_641,l_varAcc_642);
    real l_prod_658 = RMul(0.1e1,l_prod_657);
    real l_basisEval_659 = RMul(0.2e1,l_prod_658);
    real l_prod2_660 = RMul(l_varAcc_641,l_varAcc_641);
    real l_prod_661 = RMul(l_prod2_660,0.1e1);
    real l_prod_662 = RMul(0.1e1,l_prod_661);
    real l_basisEval_663 = RMul(0.2e1,l_prod_662);
    real l_prod_664 = RMul(l_varAcc_640,l_prod_646);
    real l_basisEval_665 = RMul(0.6e1,l_prod_664);
    real l_prod_666 = RMul(l_varAcc_640,l_prod_649);
    real l_basisEval_667 = RMul(0.6e1,l_prod_666);
    real l_prod2_668 = RMul(l_varAcc_640,l_varAcc_640);
    real l_prod_669 = RMul(l_prod2_668,l_prod_643);
    real l_prod3_670 = RMul(l_prod2_653,l_varAcc_642);
    real l_prod_671 = RMul(0.1e1,l_prod3_670);
    real l_prod_672 = RMul(0.1e1,l_prod_671);
    real l_basisEval_673 = RMul(0.2e1,l_prod_672);
    real l_prod_674 = RMul(l_varAcc_641,l_prod2_653);
    real l_prod_675 = RMul(0.1e1,l_prod_674);
    real l_basisEval_676 = RMul(0.2e1,l_prod_675);
    real l_prod_677 = RMul(l_prod2_660,l_varAcc_642);
    real l_prod_678 = RMul(0.1e1,l_prod_677);
    real l_basisEval_679 = RMul(0.2e1,l_prod_678);
    real l_prod3_680 = RMul(l_prod2_660,l_varAcc_641);
    real l_prod_681 = RMul(l_prod3_680,0.1e1);
    real l_prod_682 = RMul(0.1e1,l_prod_681);
    real l_basisEval_683 = RMul(0.2e1,l_prod_682);
    real l_prod_684 = RMul(l_varAcc_640,l_prod_654);
    real l_basisEval_685 = RMul(0.6e1,l_prod_684);
    real l_prod_686 = RMul(l_varAcc_640,l_prod_657);
    real l_basisEval_687 = RMul(0.6e1,l_prod_686);
    real l_prod_688 = RMul(l_varAcc_640,l_prod_661);
    real l_basisEval_689 = RMul(0.6e1,l_prod_688);
    real l_prod_690 = RMul(l_prod2_668,l_prod_646);
    real l_prod_691 = RMul(l_prod2_668,l_prod_649);
    real l_prod3_692 = RMul(l_prod2_668,l_varAcc_640);
    real l_prod_693 = RMul(l_prod3_692,l_prod_643);
    real l_prod4_694 = RMul(l_prod3_670,l_varAcc_642);
    real l_prod_695 = RMul(0.1e1,l_prod4_694);
    real l_prod_696 = RMul(0.1e1,l_prod_695);
    real l_basisEval_697 = RMul(0.2e1,l_prod_696);
    real l_prod_698 = RMul(l_varAcc_641,l_prod3_670);
    real l_prod_699 = RMul(0.1e1,l_prod_698);
    real l_basisEval_700 = RMul(0.2e1,l_prod_699);
    real l_prod_701 = RMul(l_prod2_660,l_prod2_653);
    real l_prod_702 = RMul(0.1e1,l_prod_701);
    real l_prod_703 = RMul(l_prod3_680,l_varAcc_642);
    real l_prod_704 = RMul(0.1e1,l_prod_703);
    real l_basisEval_705 = RMul(0.2e1,l_prod_704);
    real l_prod4_706 = RMul(l_prod3_680,l_varAcc_641);
    real l_prod_707 = RMul(l_prod4_706,0.1e1);
    real l_prod_708 = RMul(0.1e1,l_prod_707);
    real l_basisEval_709 = RMul(0.2e1,l_prod_708);
    real l_prod_710 = RMul(l_varAcc_640,l_prod_671);
    real l_prod_711 = RMul(l_varAcc_640,l_prod_674);
    real l_basisEval_712 = RMul(0.6e1,l_prod_711);
    real l_prod_713 = RMul(l_varAcc_640,l_prod_677);
    real l_basisEval_714 = RMul(0.6e1,l_prod_713);
    real l_prod_715 = RMul(l_varAcc_640,l_prod_681);
    real l_prod_716 = RMul(l_prod2_668,l_prod_654);
    real l_basisEval_717 = RMul(0.12e2,l_prod_716);
    real l_prod_718 = RMul(l_prod2_668,l_prod_657);
    real l_prod_719 = RMul(l_prod2_668,l_prod_661);
    real l_basisEval_720 = RMul(0.12e2,l_prod_719);
    real l_prod_721 = RMul(l_prod3_692,l_prod_646);
    real l_prod_722 = RMul(l_prod3_692,l_prod_649);
    real l_prod4_723 = RMul(l_prod3_692,l_varAcc_640);
    real l_prod_724 = RMul(l_prod4_723,l_prod_643);
    real l_basisEval_725 = RMul(0.1e1,l_prod_644);
    real l_basisEval_726 = RMul(0.1e1,l_prod_647);
    real l_basisEval_727 = RMul(0.2e1,l_prod_652);
    real l_basisEval_728 = RMul(0.1e1,l_prod_655);
    real l_basisEval_729 = RMul(0.3e1,l_prod_662);
    real l_basisEval_730 = RMul(0.2e1,l_prod_664);
    real l_basisEval_731 = RMul(0.3e1,l_prod_669);
    real l_basisEval_732 = RMul(0.1e1,l_prod_672);
    real l_basisEval_733 = RMul(0.3e1,l_prod_678);
    real l_basisEval_734 = RMul(0.4e1,l_prod_682);
    real l_basisEval_735 = RMul(0.2e1,l_prod_684);
    real l_basisEval_736 = RMul(0.4e1,l_prod_686);
    real l_basisEval_737 = RMul(0.3e1,l_prod_690);
    real l_basisEval_738 = RMul(0.6e1,l_prod_691);
    real l_basisEval_739 = RMul(0.4e1,l_prod_693);
    real l_basisEval_740 = RMul(0.1e1,l_prod_696);
    real l_basisEval_741 = RMul(0.3e1,l_prod_702);
    real l_basisEval_742 = RMul(0.4e1,l_prod_704);
    real l_basisEval_743 = RMul(0.5e1,l_prod_708);
    real l_basisEval_744 = RMul(0.2e1,l_prod_710);
    real l_basisEval_745 = RMul(0.3e1,l_prod_716);
    real l_basisEval_746 = RMul(0.6e1,l_prod_718);
    real l_basisEval_747 = RMul(0.4e1,l_prod_721);
    real l_basisEval_748 = RMul(0.5e1,l_prod_724);
    real l_basisEval_749 = RMul(0.1e1,l_prod_650);
    real l_basisEval_750 = RMul(0.3e1,l_prod_655);
    real l_basisEval_751 = RMul(0.1e1,l_prod_662);
    real l_basisEval_752 = RMul(0.2e1,l_prod_666);
    real l_basisEval_753 = RMul(0.4e1,l_prod_672);
    real l_basisEval_754 = RMul(0.3e1,l_prod_675);
    real l_basisEval_755 = RMul(0.1e1,l_prod_682);
    real l_basisEval_756 = RMul(0.2e1,l_prod_688);
    real l_basisEval_757 = RMul(0.6e1,l_prod_690);
    real l_basisEval_758 = RMul(0.3e1,l_prod_691);
    real l_basisEval_759 = RMul(0.5e1,l_prod_696);
    real l_basisEval_760 = RMul(0.4e1,l_prod_699);
    real l_basisEval_761 = RMul(0.1e1,l_prod_708);
    real l_basisEval_762 = RMul(0.2e1,l_prod_715);
    real l_basisEval_763 = RMul(0.3e1,l_prod_719);
    real l_basisEval_764 = RMul(0.4e1,l_prod_722);
    real l_basisEval_765 = RMul(0.6e1,l_prod_658);
    real l_basisEval_766 = RMul(0.2e1,l_prod_669);
    real l_basisEval_767 = RMul(0.6e1,l_prod_675);
    real l_basisEval_768 = RMul(0.2e1,l_prod_690);
    real l_basisEval_769 = RMul(0.2e1,l_prod_693);
    real l_basisEval_770 = RMul(0.12e2,l_prod_702);
    real l_basisEval_771 = RMul(0.2e1,l_prod_721);
    real l_basisEval_772 = RMul(0.2e1,l_prod_724);
    real l_basisEval_773 = RMul(0.1e1,l_prod_652);
    real l_basisEval_774 = RMul(0.1e1,l_prod_669);
    real l_basisEval_775 = RMul(0.6e1,l_prod_678);
    real l_basisEval_776 = RMul(0.3e1,l_prod_684);
    real l_basisEval_777 = RMul(0.3e1,l_prod_688);
    real l_basisEval_778 = RMul(0.2e1,l_prod_691);
    real l_basisEval_779 = RMul(0.1e1,l_prod_693);
    real l_basisEval_780 = RMul(0.4e1,l_prod_710);
    real l_basisEval_781 = RMul(0.4e1,l_prod_715);
    real l_basisEval_782 = RMul(0.2e1,l_prod_722);
    real l_basisEval_783 = RMul(0.1e1,l_prod_724);
    real l_vdot_784 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_725,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_651,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_728,l_basisEval_659)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_729,0.e0,l_basisEval_730,RMul(0.4e1,l_prod_666))),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_731,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_732,l_basisEval_676)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_733,l_basisEval_734,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_736,l_basisEval_689,0.e0,l_basisEval_737)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_738,0.e0,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_743,0.e0,l_basisEval_744,RMul(0.4e1,l_prod_711))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_714,RMul(0.8e1,l_prod_715),0.e0,l_basisEval_745)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_746,RMul(0.9e1,l_prod_719),0.e0,l_basisEval_747)),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.8e1,l_prod_722),0.e0,l_basisEval_748,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_785 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_648,l_basisEval_749)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_750,l_basisEval_659,l_basisEval_751)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,RMul(0.4e1,l_prod_664),l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_731,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_753,l_basisEval_754,l_basisEval_679)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_755,0.e0,l_basisEval_685,l_basisEval_736)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_756,0.e0,l_basisEval_757,l_basisEval_758)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_739,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.8e1,l_prod_710),l_basisEval_712,RMul(0.4e1,l_prod_713))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_762,0.e0,RMul(0.9e1,l_prod_716),l_basisEval_746)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_763,0.e0,RMul(0.8e1,l_prod_721),l_basisEval_764)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_748,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_786 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,l_basisEval_648)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_651,0.e0,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_750,RMul(0.4e1,l_prod_658),l_basisEval_729)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_730,l_basisEval_752)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_753,l_basisEval_767,l_basisEval_775,l_basisEval_734)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_776,l_basisEval_736)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_777,0.e0,0.e0,l_basisEval_768)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_778,0.e0,0.e0,l_basisEval_779)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_759,RMul(0.8e1,l_prod_699),RMul(0.9e1,l_prod_702))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.8e1,l_prod_704),l_basisEval_743,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_780,l_basisEval_712,l_basisEval_714,l_basisEval_781)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,0.e0,l_basisEval_745,RMul(0.4e1,l_prod_718))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_763,0.e0,0.e0,l_basisEval_771)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_782,0.e0,0.e0,l_basisEval_783)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    tensor[3,3] t_787 = <tensor[3,3]>[RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,l_basisEval_645,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_648,l_basisEval_651,RMul(0.6e1,l_prod_652))),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_656,l_basisEval_659,l_basisEval_663)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_665,l_basisEval_667,RMul(0.12e2,l_prod_669),0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_673,l_basisEval_676)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_679,l_basisEval_683,l_basisEval_685,l_basisEval_687)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_689,RMul(0.12e2,l_prod_690),RMul(0.12e2,l_prod_691),RMul(0.20e2,l_prod_693))),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_697,l_basisEval_700,RMul(0.2e1,l_prod_702))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_705,l_basisEval_709,RMul(0.6e1,l_prod_710),l_basisEval_712)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_714,RMul(0.6e1,l_prod_715),l_basisEval_717,RMul(0.12e2,l_prod_718))),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_720,RMul(0.20e2,l_prod_721),RMul(0.20e2,l_prod_722),RMul(0.30e2,l_prod_724))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_784,l_vdot_785,l_vdot_784,RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,l_basisEval_645,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_648,RMul(0.6e1,l_prod_650),0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_727,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,l_basisEval_656,l_basisEval_765)),RAdd(VDot<4,4>(v_625,VEC4(RMul(0.12e2,l_prod_662),0.e0,0.e0,l_basisEval_730)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_667,0.e0,0.e0,l_basisEval_766)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,l_basisEval_673,l_basisEval_767,RMul(0.12e2,l_prod_678))),RAdd(VDot<4,4>(v_629,VEC4(RMul(0.20e2,l_prod_682),0.e0,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_687,RMul(0.12e2,l_prod_688),0.e0,0.e0)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_768,l_basisEval_738,0.e0,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_769,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,l_basisEval_697,RMul(0.6e1,l_prod_699))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_770,RMul(0.20e2,l_prod_704),RMul(0.30e2,l_prod_708),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,l_basisEval_744,l_basisEval_712,RMul(0.12e2,l_prod_713))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.20e2,l_prod_715),0.e0,0.e0,RMul(0.2e1,l_prod_716))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_746,l_basisEval_720,0.e0,0.e0)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_771,RMul(0.6e1,l_prod_722),0.e0,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_772,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_786,l_vdot_785,l_vdot_786,RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_645,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_647),l_basisEval_651)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(RMul(0.12e2,l_prod_655),l_basisEval_765,l_basisEval_663,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_665,l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_766,0.e0,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_672))),RAdd(VDot<4,4>(v_628,VEC4(RMul(0.12e2,l_prod_675),l_basisEval_775,l_basisEval_683,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,RMul(0.12e2,l_prod_684),l_basisEval_687,l_basisEval_756)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_757,l_basisEval_778)),RAdd(VDot<4,4>(v_631,VEC4(0.e0,0.e0,l_basisEval_769,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.30e2,l_prod_696),RMul(0.20e2,l_prod_699),l_basisEval_770,RMul(0.6e1,l_prod_704))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_709,0.e0,0.e0,RMul(0.20e2,l_prod_710))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.12e2,l_prod_711),l_basisEval_714,l_basisEval_762,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_717,l_basisEval_746,RMul(0.2e1,l_prod_719))),RAdd(VDot<4,4>(v_637,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_721),l_basisEval_782)),RAdd(VDot<4,4>(v_638,VEC4(0.e0,0.e0,l_basisEval_772,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
    (l_evals_788,l_E_789) = EigenVecs3x3(TensorRef<[3,3]>(t_787));
    &tensor[3] l__t_790 = Subscript<tensor[3][3]>(l_E_789,2);
    real l__t_791 = Subscript<real[3]>(l_evals_788,2);
    &tensor[3] l__t_792 = Subscript<tensor[3][3]>(l_E_789,1);
    real l__t_793 = Subscript<real[3]>(l_evals_788,1);
    vec3{4} v_794 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_790),LOAD_0(l__t_790));
    vec3{4} v_795 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_790),LOAD_0(l__t_790));
    vec3{4} v_796 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_790),LOAD_0(l__t_790));
    vec3{4} v_797 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_792),LOAD_0(l__t_792));
    vec3{4} v_798 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_792),LOAD_0(l__t_792));
    vec3{4} v_799 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_792),LOAD_0(l__t_792));
    real l_basisEval_800 = RMul(0.2e1,l_prod_686);
    real l_basisEval_801 = RMul(0.2e1,l_prod_711);
    real l_basisEval_802 = RMul(0.2e1,l_prod_713);
    real l_prod_803 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_694,l_varAcc_642)));
    real l_basisEval_804 = RMul(0.1e1,l_prod_803);
    real l_prod_805 = RMul(0.1e1,RMul(l_varAcc_641,l_prod4_694));
    real l_prod_806 = RMul(0.1e1,RMul(l_prod2_660,l_prod3_670));
    real l_prod_807 = RMul(0.1e1,RMul(l_prod3_680,l_prod2_653));
    real l_prod_808 = RMul(0.1e1,RMul(l_prod4_706,l_varAcc_642));
    real l_prod_809 = RMul(0.1e1,RMul(RMul(l_prod4_706,l_varAcc_641),0.1e1));
    real l_basisEval_810 = RMul(0.1e1,l_prod_809);
    real l_prod_811 = RMul(l_varAcc_640,l_prod_695);
    real l_prod_812 = RMul(l_varAcc_640,l_prod_698);
    real l_basisEval_813 = RMul(0.2e1,l_prod_812);
    real l_prod_814 = RMul(l_varAcc_640,l_prod_701);
    real l_prod_815 = RMul(l_varAcc_640,l_prod_703);
    real l_basisEval_816 = RMul(0.2e1,l_prod_815);
    real l_prod_817 = RMul(l_varAcc_640,l_prod_707);
    real l_prod_818 = RMul(l_prod2_668,l_prod_671);
    real l_prod_819 = RMul(l_prod2_668,l_prod_674);
    real l_basisEval_820 = RMul(0.3e1,l_prod_819);
    real l_prod_821 = RMul(l_prod2_668,l_prod_677);
    real l_basisEval_822 = RMul(0.3e1,l_prod_821);
    real l_prod_823 = RMul(l_prod2_668,l_prod_681);
    real l_prod_824 = RMul(l_prod3_692,l_prod_654);
    real l_prod_825 = RMul(l_prod3_692,l_prod_657);
    real l_prod_826 = RMul(l_prod3_692,l_prod_661);
    real l_prod_827 = RMul(l_prod4_723,l_prod_646);
    real l_prod_828 = RMul(l_prod4_723,l_prod_649);
    real l_prod_829 = RMul(RMul(l_prod4_723,l_varAcc_640),l_prod_643);
    real l_basisEval_830 = RMul(0.2e1,l_prod_718);
    real l_basisEval_831 = RMul(0.3e1,l_prod_814);
    real l_basisEval_832 = RMul(0.2e1,l_prod_825);
    real l_basisEval_833 = RMul(0.1e1,l_prod_829);
    vec3{4} v_834 = VEC3{4}(RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_749,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_728,RMul(0.1e1,l_prod_658))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_751,l_basisEval_730,l_basisEval_752,l_basisEval_731)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_732,RMul(0.1e1,l_prod_675),RMul(0.1e1,l_prod_678))),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_755,l_basisEval_735,l_basisEval_800,l_basisEval_756)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_737,l_basisEval_758,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_740,RMul(0.1e1,l_prod_699),RMul(0.1e1,l_prod_702))),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_704),l_basisEval_761,l_basisEval_744,l_basisEval_801)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_802,l_basisEval_762,l_basisEval_745,RMul(0.3e1,l_prod_718))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_763,l_basisEval_747,l_basisEval_764,l_basisEval_748)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_804)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_805),RMul(0.1e1,l_prod_806),RMul(0.1e1,l_prod_807),RMul(0.1e1,l_prod_808))),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_810,RMul(0.2e1,l_prod_811),l_basisEval_813,RMul(0.2e1,l_prod_814))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_816,RMul(0.2e1,l_prod_817),RMul(0.3e1,l_prod_818),l_basisEval_820)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_822,RMul(0.3e1,l_prod_823),RMul(0.4e1,l_prod_824),RMul(0.4e1,l_prod_825))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.4e1,l_prod_826),RMul(0.5e1,l_prod_827),RMul(0.5e1,l_prod_828),RMul(0.6e1,l_prod_829))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_726,l_basisEval_651,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_773,0.e0,0.e0,l_basisEval_728)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_659,l_basisEval_729,0.e0,RMul(0.1e1,l_prod_664))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_752,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_732,l_basisEval_676,l_basisEval_733)),RAdd(VDot<4,4>(v_625,VEC4(l_basisEval_734,0.e0,RMul(0.1e1,l_prod_684),l_basisEval_800)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_777,0.e0,RMul(0.1e1,l_prod_690),l_basisEval_778)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_779,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_629,VEC4(l_basisEval_743,0.e0,RMul(0.1e1,l_prod_710),l_basisEval_801)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.3e1,l_prod_713),l_basisEval_781,0.e0,RMul(0.1e1,l_prod_716))),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_830,l_basisEval_763,0.e0,RMul(0.1e1,l_prod_721))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_782,0.e0,l_basisEval_783,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_804,RMul(0.2e1,l_prod_805),RMul(0.3e1,l_prod_806))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.4e1,l_prod_807),RMul(0.5e1,l_prod_808),RMul(0.6e1,l_prod_809),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_811),l_basisEval_813,l_basisEval_831,RMul(0.4e1,l_prod_815))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.5e1,l_prod_817),0.e0,RMul(0.1e1,l_prod_818),RMul(0.2e1,l_prod_819))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_822,RMul(0.4e1,l_prod_823),0.e0,RMul(0.1e1,l_prod_824))),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_832,RMul(0.3e1,l_prod_826),0.e0,RMul(0.1e1,l_prod_827))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.2e1,l_prod_828),0.e0,l_basisEval_833,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,l_basisEval_725,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_648,l_basisEval_749,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,l_basisEval_750,l_basisEval_659)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_751,0.e0,l_basisEval_730,RMul(0.1e1,l_prod_666))),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_774,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(l_basisEval_753,l_basisEval_754,l_basisEval_679,l_basisEval_755)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_776,l_basisEval_800,RMul(0.1e1,l_prod_688))),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_768,RMul(0.1e1,l_prod_691),0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_779,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_780,RMul(0.3e1,l_prod_711),l_basisEval_802)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_715),0.e0,l_basisEval_745,l_basisEval_830)),RAdd(VDot<4,4>(v_631,VEC4(RMul(0.1e1,l_prod_719),0.e0,l_basisEval_771,RMul(0.1e1,l_prod_722))),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_783,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.6e1,l_prod_803),RMul(0.5e1,l_prod_805),RMul(0.4e1,l_prod_806),RMul(0.3e1,l_prod_807))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.2e1,l_prod_808),l_basisEval_810,0.e0,RMul(0.5e1,l_prod_811))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.4e1,l_prod_812),l_basisEval_831,l_basisEval_816,RMul(0.1e1,l_prod_817))),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.4e1,l_prod_818),l_basisEval_820,RMul(0.2e1,l_prod_821))),RAdd(VDot<4,4>(v_637,VEC4(RMul(0.1e1,l_prod_823),0.e0,RMul(0.3e1,l_prod_824),l_basisEval_832)),RAdd(VDot<4,4>(v_638,VEC4(RMul(0.1e1,l_prod_826),0.e0,RMul(0.2e1,l_prod_827),RMul(0.1e1,l_prod_828))),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_833,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)))))))))))))))))))))));
    vec3{4} v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_794),l__t_791),RDiv(VIndex<3,4,1>(v_794),l__t_791),RDiv(VIndex<3,4,2>(v_794),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_797),l__t_793),RDiv(VIndex<3,4,1>(v_797),l__t_793),RDiv(VIndex<3,4,2>(v_797),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_795),l__t_791),RDiv(VIndex<3,4,1>(v_795),l__t_791),RDiv(VIndex<3,4,2>(v_795),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_798),l__t_793),RDiv(VIndex<3,4,1>(v_798),l__t_793),RDiv(VIndex<3,4,2>(v_798),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_796),l__t_791),RDiv(VIndex<3,4,1>(v_796),l__t_791),RDiv(VIndex<3,4,2>(v_796),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_799),l__t_793),RDiv(VIndex<3,4,1>(v_799),l__t_793),RDiv(VIndex<3,4,2>(v_799),l__t_793)))),v_834));
    real l_op1_e3_l_33_836 = Sqrt(VDot<3,4>(v_835,v_835));
    real l__t_837 = RMul(globals.maxAlpha,RClamp(0.e0,0.1e1,RMul(0.15e1,RSub(0.1e1,RDiv(Abs<real>(l_op1_e3_l_33_836),globals.thick)))));
    vec3{4} v_838 = v_835;
    vec4 v_839 = v_619;
    vec4 v_840 = v_620;
    vec4 v_841 = v_621;
    vec4 v_842 = v_622;
    vec4 v_843 = v_623;
    vec4 v_844 = v_624;
    vec4 v_845 = v_625;
    vec4 v_846 = v_626;
    vec4 v_847 = v_627;
    vec4 v_848 = v_628;
    vec4 v_849 = v_629;
    vec4 v_850 = v_630;
    vec4 v_851 = v_631;
    vec4 v_852 = v_632;
    vec4 v_853 = v_633;
    vec4 v_854 = v_634;
    vec4 v_855 = v_635;
    vec4 v_856 = v_636;
    vec4 v_857 = v_637;
    vec4 v_858 = v_638;
    vec4 v_859 = v_639;
    if (EQ<real>(l__t_837,0.e0)) {
      self.rayN = l_rayN_69;
      active;
    }
    real l__t_860 = MathFn<pow>(RSub(0.1e1,l__t_837),self.alphaFix);
    if (NEQ<real>(self.phKs,0.e0)) {
      vec3{4} v_861 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.eyeDir)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
      l_scomp_862 = MathFn<pow>(Abs<real>(RMul(RDiv(0.1e1,Sqrt(VDot<3,4>(v_861,v_861))),VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_33_836),v_838)),v_861))),self.phSp);
    } else {
      l_scomp_862 = 0.e0;
    }
    real l_cmin_863 = TensorIndex<&tensor[2],[0]>(TensorRef<[2]>(globals.cminmax));
    real l_cmax_864 = TensorIndex<&tensor[2],[1]>(TensorRef<[2]>(globals.cminmax));
    vec3{4} v_865 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    if (NEQ<real>(l_cmin_863,l_cmax_864)) {
      tensor[3,2] l_voxels_908;
      vec3{4} v_866 = VAdd<3,4>(v_72,v_838);
      real l_varAcc_867 = VIndex<3,4,0>(v_866);
      real l_varAcc_868 = VIndex<3,4,1>(v_866);
      real l_varAcc_869 = VIndex<3,4,2>(v_866);
      real l_prod_870 = RMul(0.1e1,l_varAcc_869);
      real l_prod_871 = RMul(l_varAcc_868,0.1e1);
      real l_prod2_872 = RMul(l_varAcc_869,l_varAcc_869);
      real l_prod_873 = RMul(0.1e1,l_prod2_872);
      real l_prod_874 = RMul(l_varAcc_868,l_varAcc_869);
      real l_prod2_875 = RMul(l_varAcc_868,l_varAcc_868);
      real l_prod_876 = RMul(l_prod2_875,0.1e1);
      real l_prod2_877 = RMul(l_varAcc_867,l_varAcc_867);
      real l_prod3_878 = RMul(l_prod2_872,l_varAcc_869);
      real l_prod_879 = RMul(0.1e1,l_prod3_878);
      real l_prod_880 = RMul(l_varAcc_868,l_prod2_872);
      real l_prod_881 = RMul(l_prod2_875,l_varAcc_869);
      real l_prod3_882 = RMul(l_prod2_875,l_varAcc_868);
      real l_prod_883 = RMul(l_prod3_882,0.1e1);
      real l_prod3_884 = RMul(l_prod2_877,l_varAcc_867);
      real l_prod4_885 = RMul(l_prod3_878,l_varAcc_869);
      real l_prod_886 = RMul(0.1e1,l_prod4_885);
      real l_prod_887 = RMul(l_varAcc_868,l_prod3_878);
      real l_prod_888 = RMul(l_prod2_875,l_prod2_872);
      real l_prod_889 = RMul(l_prod3_882,l_varAcc_869);
      real l_prod4_890 = RMul(l_prod3_882,l_varAcc_868);
      real l_prod_891 = RMul(l_prod4_890,0.1e1);
      real l_prod4_892 = RMul(l_prod3_884,l_varAcc_867);
      real l_prod5_893 = RMul(l_prod4_885,l_varAcc_869);
      real l_prod_894 = RMul(0.1e1,l_prod5_893);
      real l_prod_895 = RMul(l_varAcc_868,l_prod4_885);
      real l_prod_896 = RMul(l_prod2_875,l_prod3_878);
      real l_prod_897 = RMul(l_prod3_882,l_prod2_872);
      real l_prod_898 = RMul(l_prod4_890,l_varAcc_869);
      real l_prod5_899 = RMul(l_prod4_890,l_varAcc_868);
      real l_prod_900 = RMul(l_prod5_899,0.1e1);
      real l_prod5_901 = RMul(l_prod4_892,l_varAcc_867);
      real l_imgPos_902 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.cmap),RAdd(0.e0,RMul(RDiv(RSub(RAdd(VDot<4,4>(v_840,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_873)),RMul(0.1e1,RMul(0.1e1,l_prod_874)),RMul(0.1e1,RMul(0.1e1,l_prod_876)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_870)))),RAdd(VDot<4,4>(v_841,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_871)),RMul(0.1e1,RMul(l_prod2_877,l_prod_643)),RMul(0.1e1,RMul(0.1e1,l_prod_879)),RMul(0.1e1,RMul(0.1e1,l_prod_880)))),RAdd(VDot<4,4>(v_842,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_881)),RMul(0.1e1,RMul(0.1e1,l_prod_883)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_873)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_874)))),RAdd(VDot<4,4>(v_843,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_876)),RMul(0.1e1,RMul(l_prod2_877,l_prod_870)),RMul(0.1e1,RMul(l_prod2_877,l_prod_871)),RMul(0.1e1,RMul(l_prod3_884,l_prod_643)))),RAdd(VDot<4,4>(v_844,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_886)),RMul(0.1e1,RMul(0.1e1,l_prod_887)),RMul(0.1e1,RMul(0.1e1,l_prod_888)),RMul(0.1e1,RMul(0.1e1,l_prod_889)))),RAdd(VDot<4,4>(v_845,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_891)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_879)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_880)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_881)))),RAdd(VDot<4,4>(v_846,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_883)),RMul(0.1e1,RMul(l_prod2_877,l_prod_873)),RMul(0.1e1,RMul(l_prod2_877,l_prod_874)),RMul(0.1e1,RMul(l_prod2_877,l_prod_876)))),RAdd(VDot<4,4>(v_847,VEC4(RMul(0.1e1,RMul(l_prod3_884,l_prod_870)),RMul(0.1e1,RMul(l_prod3_884,l_prod_871)),RMul(0.1e1,RMul(l_prod4_892,l_prod_643)),RMul(0.1e1,RMul(0.1e1,l_prod_894)))),RAdd(VDot<4,4>(v_848,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_895)),RMul(0.1e1,RMul(0.1e1,l_prod_896)),RMul(0.1e1,RMul(0.1e1,l_prod_897)),RMul(0.1e1,RMul(0.1e1,l_prod_898)))),RAdd(VDot<4,4>(v_849,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_900)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_886)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_887)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_888)))),RAdd(VDot<4,4>(v_850,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_889)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_891)),RMul(0.1e1,RMul(l_prod2_877,l_prod_879)),RMul(0.1e1,RMul(l_prod2_877,l_prod_880)))),RAdd(VDot<4,4>(v_851,VEC4(RMul(0.1e1,RMul(l_prod2_877,l_prod_881)),RMul(0.1e1,RMul(l_prod2_877,l_prod_883)),RMul(0.1e1,RMul(l_prod3_884,l_prod_873)),RMul(0.1e1,RMul(l_prod3_884,l_prod_874)))),RAdd(VDot<4,4>(v_852,VEC4(RMul(0.1e1,RMul(l_prod3_884,l_prod_876)),RMul(0.1e1,RMul(l_prod4_892,l_prod_870)),RMul(0.1e1,RMul(l_prod4_892,l_prod_871)),RMul(0.1e1,RMul(l_prod5_901,l_prod_643)))),RAdd(VDot<4,4>(v_853,VEC4(RMul(0.1e1,RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_893,l_varAcc_869)))),RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_868,l_prod5_893))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod2_875,l_prod4_885))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod3_882,l_prod3_878))))),RAdd(VDot<4,4>(v_854,VEC4(RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_890,l_prod2_872))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_899,l_varAcc_869))),RMul(0.1e1,RMul(0.1e1,RMul(RMul(l_prod5_899,l_varAcc_868),0.1e1))),RMul(0.1e1,RMul(l_varAcc_867,l_prod_894)))),RAdd(VDot<4,4>(v_855,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_895)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_896)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_897)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_898)))),RAdd(VDot<4,4>(v_856,VEC4(RMul(0.1e1,RMul(l_varAcc_867,l_prod_900)),RMul(0.1e1,RMul(l_prod2_877,l_prod_886)),RMul(0.1e1,RMul(l_prod2_877,l_prod_887)),RMul(0.1e1,RMul(l_prod2_877,l_prod_888)))),RAdd(VDot<4,4>(v_857,VEC4(RMul(0.1e1,RMul(l_prod2_877,l_prod_889)),RMul(0.1e1,RMul(l_prod2_877,l_prod_891)),RMul(0.1e1,RMul(l_prod3_884,l_prod_879)),RMul(0.1e1,RMul(l_prod3_884,l_prod_880)))),RAdd(VDot<4,4>(v_858,VEC4(RMul(0.1e1,RMul(l_prod3_884,l_prod_881)),RMul(0.1e1,RMul(l_prod3_884,l_prod_883)),RMul(0.1e1,RMul(l_prod4_892,l_prod_873)),RMul(0.1e1,RMul(l_prod4_892,l_prod_874)))),RAdd(VDot<4,4>(v_859,VEC4(RMul(0.1e1,RMul(l_prod4_892,l_prod_876)),RMul(0.1e1,RMul(l_prod5_901,l_prod_870)),RMul(0.1e1,RMul(l_prod5_901,l_prod_871)),RMul(0.1e1,RMul(RMul(l_prod5_901,l_varAcc_867),l_prod_643)))),VDot<4,4>(v_839,VEC4(l_basisEval_725,RMul(0.1e1,RMul(0.1e1,l_prod_870)),RMul(0.1e1,RMul(0.1e1,l_prod_871)),RMul(0.1e1,RMul(l_varAcc_867,l_prod_643)))))))))))))))))))))))),l_cmin_863),RSub(l_cmax_864,l_cmin_863)),RSub(0.1e1,0.e0)))),Translate<IMAGE1D<double[3]>>(globals.cmap));
      real l_nd_903 = RFloor(l_imgPos_902);
      real l_f_904 = RSub(l_imgPos_902,l_nd_903);
      int l_n_905 = RealToInt(l_nd_903);
      if (IndexInside<IMAGE1D<double[3]>,2>(l_n_905,globals.cmap)) {
        int l_offp_906 = IMul(3,l_n_905);
        int l_offp_907 = IMul(3,IAdd(l_n_905,1));
        l_voxels_908 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_906),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_907),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_906,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_907,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_906,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_907,2))];
      } else {
        int l_offp_909 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,l_n_905));
        int l_offp_910 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,IAdd(l_n_905,1)));
        l_voxels_908 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_909),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_910),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_909,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_910,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_909,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_910,2))];
      }
      vec2 v_911 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_904,RSub(l_f_904,0.1e1)),VEC2(-0.1e1,0.1e1)));
      v_912 = VEC3{4}(VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_908)),v_911),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_908)),v_911),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_908)),v_911));
    } else {
      v_912 = v_865;
    }
    real l_op1_e3_l_66_913 = VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_33_836),v_838)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
    real l_op1_e3_l_75_914 = RAdd(self.phKa,RMul(self.phKd,RMul(l_op1_e3_l_66_913,l_op1_e3_l_66_913)));
    vec3{4} v_915 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.mcNear)),VScale<3,4>(RDiv(RSub(l_rayN_69,globals.camNearVsp),RSub(globals.camFarVsp,globals.camNearVsp)),VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.mcFar)),LOAD_0(TensorRef<[3]>(globals.mcNear)))));
    real l_r_916 = RMul(RMul(self.phKs,l_scomp_862),0.1e1);
    real l_op1_e3_l_79_917 = RSub(0.1e1,l__t_860);
    vec3{4} v_918 = VAdd<3,4>(VEC3{4}(RMul(RMul(l_op1_e3_l_75_914,VIndex<3,4,0>(v_915)),VIndex<3,4,0>(v_912)),RMul(RMul(l_op1_e3_l_75_914,VIndex<3,4,1>(v_915)),VIndex<3,4,1>(v_912)),RMul(RMul(l_op1_e3_l_75_914,VIndex<3,4,2>(v_915)),VIndex<3,4,2>(v_912))),VEC3{4}(l_r_916,l_r_916,l_r_916));
    real l_r_919 = RMul(self.transp,l_op1_e3_l_79_917);
    vec3{4} v_920 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_919,VIndex<3,4,0>(v_918)),RMul(l_r_919,VIndex<3,4,1>(v_918)),RMul(l_r_919,VIndex<3,4,2>(v_918))));
    real l_transp_921 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_79_917));
    vec3{4} v_922 = v_920;
    if (LT<real>(l_transp_921,globals.transp0)) {
      self.rayN = l_rayN_69;
      self.rgb = PACK(v_922);
      self.transp = 0.e0;
      stabilize;
    } else {
      l_transp_924 = l_transp_921;
    }
    self.rayN = l_rayN_69;
    self.rgb = PACK(v_922);
    self.transp = l_transp_924;
    active;
  }
  stabilize () {
    vec4 v_927;
    if (LT<real>(self.transp,0.1e1)) {
      real l_aa_926 = RSub(0.1e1,self.transp);
      v_927 = VEC4(RDiv(TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(self.rgb)),l_aa_926),RDiv(TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(self.rgb)),l_aa_926),RDiv(TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(self.rgb)),l_aa_926),l_aa_926);
    } else {
      v_927 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    self.rgba = PACK(v_927);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_929 = 0 to ISub(globals.iresV,1) {
      for i_ui_930 = 0 to ISub(globals.iresU,1) {
        new ray(i_ui_930,i_vi_929);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.064    28.517
    front end .......................................................................   0.550     0.804
      parser ........................................................................   0.042     0.042
      typechecker ...................................................................   0.211     0.211
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.008     0.008
    High IR optimization ............................................................   0.015    26.053
      High IR value numbering .......................................................   0.008     0.008
      High IR normalization .........................................................  26.029    26.029
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.025     0.025
    Mid IR optimization .............................................................   0.017     0.033
      Mid IR contraction ............................................................   0.003     0.003
      Mid IR value numbering ........................................................   0.012     0.012
      Mid IR border control .........................................................   0.002     0.002
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.196     0.196
    Low IR optimization .............................................................   0.084     0.208
      Low IR contraction ............................................................   0.048     0.048
      Low IR value numbering ........................................................   0.076     0.076
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.076     0.076
    Tree IR optimization ............................................................   0.011     0.013
      Tree IR contraction ...........................................................   0.001     0.001
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.056     1.038
      C compiler ....................................................................   0.982     0.982
