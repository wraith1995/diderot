/* ParseTree: After parsing */
  Program @ [evalProg.diderot:4.1-192.0] 
    [
      Type: mesh_t= @ [evalProg.diderot:4.1-5.0] 
        Mesh @ [evalProg.diderot:4.6-10] 
        From File : pagotFile.json @ [evalProg.diderot:4.1-5.0] 
      Type: fns_t= @ [evalProg.diderot:5.1-6.0] 
        FunctionSpace(mesh_t) @ [evalProg.diderot:5.6-29] 
          [ ]
        From File : pagotFile.json @ [evalProg.diderot:5.1-6.0] 
      Type: func_t= @ [evalProg.diderot:6.1-7.0] 
        FemFunction(fns_t) @ [evalProg.diderot:6.6-24] 
        From File : pagotFile.json @ [evalProg.diderot:6.1-7.0] 
      Input: block @ [evalProg.diderot:7.1-8.0] 
      Input: space= @ [evalProg.diderot:8.1-9.0] 
        Apply @ [evalProg.diderot:8.21-33] 
          Var: fns_t @ [evalProg.diderot:8.21-26] 
          [
            Var: block @ [evalProg.diderot:8.27-32] 
          ]
      Input: U= @ [evalProg.diderot:9.1-10.0] 
        Apply @ [evalProg.diderot:9.18-31] 
          Var: func_t @ [evalProg.diderot:9.18-24] 
          [
            Var: space @ [evalProg.diderot:9.25-30] 
          ]
      Input: cellChoice @ [evalProg.diderot:10.1-11.0] 
      Var @ [evalProg.diderot:16.1-17.0] 
        Decl: c1= @ [evalProg.diderot:16.1-17.0] 
          Subscript @ [evalProg.diderot:16.19-42] 
            Select @ [evalProg.diderot:16.19-42] 
              Var: block @ [evalProg.diderot:16.19-24] 
              cells
            [
              Var: cellChoice @ [evalProg.diderot:16.31-41] 
            ]
      Var @ [evalProg.diderot:17.1-18.0] 
        Decl: F= @ [evalProg.diderot:17.1-18.0] 
          Select @ [evalProg.diderot:17.16-39] 
            Apply @ [evalProg.diderot:17.16-39] 
              Select @ [evalProg.diderot:17.16-39] 
                Var: U @ [evalProg.diderot:17.16-17] 
                funcCell
              [
                Var: c1 @ [evalProg.diderot:17.27-29] 
              ]
            refField
      Input: cmap= @ [evalProg.diderot:20.1-21.0] 
        Image @ [evalProg.diderot:20.26-49] 
          Lit: "cmap.nrrd" @ [evalProg.diderot:20.37-48] 
      Var @ [evalProg.diderot:21.1-22.0] 
        Decl: CM= @ [evalProg.diderot:21.1-22.0] 
          BinOp: ⊛ @ [evalProg.diderot:21.20-40] 
            Var: tent @ [evalProg.diderot:21.20-24] 
            Apply @ [evalProg.diderot:21.29-40] 
              Var: clamp @ [evalProg.diderot:21.29-34] 
              [
                Var: cmap @ [evalProg.diderot:21.35-39] 
              ]
      Var @ [evalProg.diderot:22.1-23.0] 
        Decl: C= @ [evalProg.diderot:22.1-23.0] 
          Var: F @ [evalProg.diderot:22.16-17] 
      Input: camEye= @ [evalProg.diderot:26.1-27.0] 
        Cons @ [evalProg.diderot:26.21-29] 
          [
            Lit: 0 @ [evalProg.diderot:26.22-23] 
            UnaryOp: unary - @ [evalProg.diderot:26.24-26] 
              Lit: 2 @ [evalProg.diderot:26.25-26] 
            Lit: 0 @ [evalProg.diderot:26.27-28] 
          ]
      Input: camAt= @ [evalProg.diderot:27.1-28.0] 
        Cons @ [evalProg.diderot:27.21-28] 
          [
            Lit: 0 @ [evalProg.diderot:27.22-23] 
            Lit: 0 @ [evalProg.diderot:27.24-25] 
            Lit: 0 @ [evalProg.diderot:27.26-27] 
          ]
      Input: camUp= @ [evalProg.diderot:28.1-29.0] 
        Cons @ [evalProg.diderot:28.20-27] 
          [
            Lit: 0 @ [evalProg.diderot:28.21-22] 
            Lit: 0 @ [evalProg.diderot:28.23-24] 
            Lit: 1 @ [evalProg.diderot:28.25-26] 
          ]
      Input: camNear= @ [evalProg.diderot:29.1-30.0] 
        UnaryOp: unary - @ [evalProg.diderot:29.22-26] 
          Lit: 0.4e1 @ [evalProg.diderot:29.23-26] 
      Input: camFar= @ [evalProg.diderot:30.1-31.0] 
        Lit: 0.4e1 @ [evalProg.diderot:30.21-24] 
      Input: camFOV= @ [evalProg.diderot:31.1-32.0] 
        Lit: 10 @ [evalProg.diderot:31.21-23] 
      Input: camOrtho= @ [evalProg.diderot:32.1-33.0] 
        Lit: false @ [evalProg.diderot:32.23-28] 
      Input: iresU= @ [evalProg.diderot:33.1-34.0] 
        Lit: 100 @ [evalProg.diderot:33.19-22] 
      Input: iresV= @ [evalProg.diderot:34.1-35.0] 
        Lit: 100 @ [evalProg.diderot:34.19-22] 
      Var @ [evalProg.diderot:37.1-39] 
        Decl: camN= @ [evalProg.diderot:37.1-39] 
          Apply @ [evalProg.diderot:37.13-38] 
            Var: normalize @ [evalProg.diderot:37.13-22] 
            [
              BinOp: - @ [evalProg.diderot:37.23-37] 
                Var: camAt @ [evalProg.diderot:37.23-28] 
                Var: camEye @ [evalProg.diderot:37.31-37] 
            ]
      Var @ [evalProg.diderot:38.1-38] 
        Decl: camU= @ [evalProg.diderot:38.1-38] 
          Apply @ [evalProg.diderot:38.13-37] 
            Var: normalize @ [evalProg.diderot:38.13-22] 
            [
              BinOp: × @ [evalProg.diderot:38.23-36] 
                Var: camN @ [evalProg.diderot:38.23-27] 
                Var: camUp @ [evalProg.diderot:38.31-36] 
            ]
      Var @ [evalProg.diderot:39.1-40.0] 
        Decl: camV= @ [evalProg.diderot:39.1-40.0] 
          BinOp: × @ [evalProg.diderot:39.13-25] 
            Var: camN @ [evalProg.diderot:39.13-17] 
            Var: camU @ [evalProg.diderot:39.21-25] 
      Var @ [evalProg.diderot:40.1-41.0] 
        Decl: camDist= @ [evalProg.diderot:40.1-41.0] 
          UnaryOp: |()| @ [evalProg.diderot:40.16-32] 
            BinOp: - @ [evalProg.diderot:40.17-31] 
              Var: camAt @ [evalProg.diderot:40.17-22] 
              Var: camEye @ [evalProg.diderot:40.25-31] 
      Var @ [evalProg.diderot:41.1-42.0] 
        Decl: camVmax= @ [evalProg.diderot:41.1-42.0] 
          BinOp: * @ [evalProg.diderot:41.16-43] 
            Apply @ [evalProg.diderot:41.16-35] 
              Var: tan @ [evalProg.diderot:41.16-19] 
              [
                BinOp: / @ [evalProg.diderot:41.20-34] 
                  BinOp: * @ [evalProg.diderot:41.20-30] 
                    Var: camFOV @ [evalProg.diderot:41.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [evalProg.diderot:41.28-30] 
                  Lit: 360 @ [evalProg.diderot:41.31-34] 
              ]
            Var: camDist @ [evalProg.diderot:41.36-43] 
      Var @ [evalProg.diderot:42.1-43.0] 
        Decl: camUmax= @ [evalProg.diderot:42.1-43.0] 
          BinOp: / @ [evalProg.diderot:42.16-35] 
            BinOp: * @ [evalProg.diderot:42.16-29] 
              Var: camVmax @ [evalProg.diderot:42.16-23] 
              Var: iresU @ [evalProg.diderot:42.24-29] 
            Var: iresV @ [evalProg.diderot:42.30-35] 
      Var @ [evalProg.diderot:43.1-37] 
        Decl: camNearVsp= @ [evalProg.diderot:43.1-37] 
          BinOp: + @ [evalProg.diderot:43.19-36] 
            Var: camNear @ [evalProg.diderot:43.19-26] 
            Var: camDist @ [evalProg.diderot:43.29-36] 
      Var @ [evalProg.diderot:44.1-45.0] 
        Decl: camFarVsp= @ [evalProg.diderot:44.1-45.0] 
          BinOp: + @ [evalProg.diderot:44.18-34] 
            Var: camFar @ [evalProg.diderot:44.18-24] 
            Var: camDist @ [evalProg.diderot:44.27-34] 
      Input: rayStep= @ [evalProg.diderot:48.1-49.0] 
        Lit: 0.1e-3 @ [evalProg.diderot:48.22-28] 
      Input: refStep= @ [evalProg.diderot:49.1-50.0] 
        Lit: 0.1e-3 @ [evalProg.diderot:49.22-28] 
      Input: transp0= @ [evalProg.diderot:52.1-53.0] 
        Lit: 0.5e-2 @ [evalProg.diderot:52.22-27] 
      Input: thick= @ [evalProg.diderot:53.1-54.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:53.20-24] 
      Input: fStrTh= @ [evalProg.diderot:54.1-55.0] 
        Lit: 0.e0 @ [evalProg.diderot:54.21-24] 
      Input: fMaskTh= @ [evalProg.diderot:55.1-56.0] 
        Lit: 0.e0 @ [evalProg.diderot:55.22-25] 
      Input: fBias= @ [evalProg.diderot:56.1-57.0] 
        Lit: 0.1e0 @ [evalProg.diderot:56.20-23] 
      Input: maxAlpha= @ [evalProg.diderot:57.1-58.0] 
        Lit: 0.1e1 @ [evalProg.diderot:57.23-26] 
      Input: light= @ [evalProg.diderot:60.1-61.0] 
        Lit: false @ [evalProg.diderot:60.20-25] 
      Input: phong= @ [evalProg.diderot:61.1-62.0] 
        Cons @ [evalProg.diderot:61.20-40] 
          [
            Lit: 0.1e0 @ [evalProg.diderot:61.21-24] 
            Lit: 0.7e0 @ [evalProg.diderot:61.26-29] 
            Lit: 0.2e0 @ [evalProg.diderot:61.31-34] 
            Lit: 100 @ [evalProg.diderot:61.36-39] 
          ]
      Input: mcNear= @ [evalProg.diderot:62.1-63.0] 
        Cons @ [evalProg.diderot:62.21-28] 
          [
            Lit: 1 @ [evalProg.diderot:62.22-23] 
            Lit: 1 @ [evalProg.diderot:62.24-25] 
            Lit: 1 @ [evalProg.diderot:62.26-27] 
          ]
      Input: mcFar= @ [evalProg.diderot:63.1-64.0] 
        Cons @ [evalProg.diderot:63.20-27] 
          [
            Lit: 1 @ [evalProg.diderot:63.21-22] 
            Lit: 1 @ [evalProg.diderot:63.23-24] 
            Lit: 1 @ [evalProg.diderot:63.25-26] 
          ]
      Input: litdir= @ [evalProg.diderot:64.1-65.0] 
        Cons @ [evalProg.diderot:64.21-29] 
          [
            Lit: 0 @ [evalProg.diderot:64.22-23] 
            UnaryOp: unary - @ [evalProg.diderot:64.24-26] 
              Lit: 1 @ [evalProg.diderot:64.25-26] 
            Lit: 0 @ [evalProg.diderot:64.27-28] 
          ]
      Input: cminmax= @ [evalProg.diderot:65.1-66.0] 
        Cons @ [evalProg.diderot:65.22-27] 
          [
            Lit: 0 @ [evalProg.diderot:65.23-24] 
            Lit: 0 @ [evalProg.diderot:65.25-26] 
          ]
      Var @ [evalProg.diderot:67.1-68.0] 
        Decl: litwsp= @ [evalProg.diderot:67.1-68.0] 
          BinOp: • @ [evalProg.diderot:67.15-64] 
            Apply @ [evalProg.diderot:67.15-42] 
              Var: transpose @ [evalProg.diderot:67.15-24] 
              [
                Cons @ [evalProg.diderot:67.25-41] 
                  [
                    Var: camU @ [evalProg.diderot:67.26-30] 
                    Var: camV @ [evalProg.diderot:67.31-35] 
                    Var: camN @ [evalProg.diderot:67.36-40] 
                  ]
              ]
            Apply @ [evalProg.diderot:67.47-64] 
              Var: normalize @ [evalProg.diderot:67.47-56] 
              [
                Var: litdir @ [evalProg.diderot:67.57-63] 
              ]
      Input: analytical= @ [evalProg.diderot:70.1-71.0] 
        Lit: true @ [evalProg.diderot:70.25-29] 
      Input: umm= @ [evalProg.diderot:71.1-72.0] 
        Image @ [evalProg.diderot:71.24-47] 
          Lit: "data.nrrd" @ [evalProg.diderot:71.35-46] 
      Var @ [evalProg.diderot:72.1-33] 
        Decl: G= @ [evalProg.diderot:72.1-33] 
          BinOp: ⊛ @ [evalProg.diderot:72.18-32] 
            Var: umm @ [evalProg.diderot:72.18-21] 
            Var: bspln5 @ [evalProg.diderot:72.26-32] 
      Input: rot= @ [evalProg.diderot:73.1-74.0] 
        Cons @ [evalProg.diderot:73.18-69] 
          [
            Cons @ [evalProg.diderot:73.19-34] 
              [
                Lit: 0.1e1 @ [evalProg.diderot:73.20-23] 
                Lit: 0.e0 @ [evalProg.diderot:73.25-28] 
                Lit: 0.e0 @ [evalProg.diderot:73.30-33] 
              ]
            Cons @ [evalProg.diderot:73.36-51] 
              [
                Lit: 0.e0 @ [evalProg.diderot:73.37-40] 
                Lit: 0.1e1 @ [evalProg.diderot:73.42-45] 
                Lit: 0.e0 @ [evalProg.diderot:73.47-50] 
              ]
            Cons @ [evalProg.diderot:73.53-68] 
              [
                Lit: 0.e0 @ [evalProg.diderot:73.54-57] 
                Lit: 0.e0 @ [evalProg.diderot:73.59-62] 
                Lit: 0.1e1 @ [evalProg.diderot:73.64-67] 
              ]
          ]
      Func: atent @ [evalProg.diderot:76.1-77.0] 
        Tensor @ [evalProg.diderot:76.10-15] 
          [ ]
        [
          Param: a0 @ [evalProg.diderot:76.21-28] 
            Tensor @ [evalProg.diderot:76.21-26] 
              [ ]
          Param: d @ [evalProg.diderot:76.30-36] 
            Tensor @ [evalProg.diderot:76.30-35] 
              [ ]
        ]
        Expr @ [evalProg.diderot:76.1-77.0] 
          BinOp: * @ [evalProg.diderot:76.40-75] 
            Var: a0 @ [evalProg.diderot:76.40-42] 
            Apply @ [evalProg.diderot:76.43-75] 
              Var: clamp @ [evalProg.diderot:76.43-48] 
              [
                Lit: 0 @ [evalProg.diderot:76.49-50] 
                Lit: 1 @ [evalProg.diderot:76.52-53] 
                BinOp: * @ [evalProg.diderot:76.55-74] 
                  Lit: 0.15e1 @ [evalProg.diderot:76.55-58] 
                  BinOp: - @ [evalProg.diderot:76.60-73] 
                    Lit: 1 @ [evalProg.diderot:76.60-61] 
                    BinOp: / @ [evalProg.diderot:76.64-73] 
                      UnaryOp: |()| @ [evalProg.diderot:76.64-67] 
                        Var: d @ [evalProg.diderot:76.65-66] 
                      Var: thick @ [evalProg.diderot:76.68-73] 
              ]
      Func: fStep @ [evalProg.diderot:78.1-111.1] 
        Tensor @ [evalProg.diderot:78.10-15] 
          [
            Lit: 3 @ [evalProg.diderot:78.10-15] 
          ]
        [
          Param: x @ [evalProg.diderot:78.21-27] 
            Tensor @ [evalProg.diderot:78.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:78.21-26] 
              ]
        ]
        Stmt @ [evalProg.diderot:78.1-111.1] 
          IfThenElse @ [evalProg.diderot:82.3-110.0] 
            UnaryOp: ! @ [evalProg.diderot:82.6-17] 
              Var: analytical @ [evalProg.diderot:82.7-17] 
            Block @ [evalProg.diderot:82.18-88.0] 
              [
                Decl @ [evalProg.diderot:82.18-88.0] 
                  Decl: E= @ [evalProg.diderot:83.3-84.0] 
                    Apply @ [evalProg.diderot:83.15-36] 
                      Var: evecs @ [evalProg.diderot:83.15-20] 
                      [
                        Apply @ [evalProg.diderot:83.22-35] 
                          UnaryOp: ∇⊗ @ [evalProg.diderot:83.22-32] 
                            UnaryOp: ∇ @ [evalProg.diderot:83.28-32] 
                              Var: F @ [evalProg.diderot:83.31-32] 
                          [
                            Var: x @ [evalProg.diderot:83.33-34] 
                          ]
                      ]
                Decl @ [evalProg.diderot:82.18-88.0] 
                  Decl: L= @ [evalProg.diderot:84.3-85.0] 
                    Apply @ [evalProg.diderot:84.15-36] 
                      Var: evals @ [evalProg.diderot:84.15-20] 
                      [
                        Apply @ [evalProg.diderot:84.22-35] 
                          UnaryOp: ∇⊗ @ [evalProg.diderot:84.22-32] 
                            UnaryOp: ∇ @ [evalProg.diderot:84.28-32] 
                              Var: F @ [evalProg.diderot:84.31-32] 
                          [
                            Var: x @ [evalProg.diderot:84.33-34] 
                          ]
                      ]
                Return @ [evalProg.diderot:85.3-87.0] 
                  BinOp: • @ [evalProg.diderot:85.10-86.36] 
                    UnaryOp: unary - @ [evalProg.diderot:85.10-86.25] 
                      BinOp: + @ [evalProg.diderot:85.12-86.23] 
                        BinOp: / @ [evalProg.diderot:85.12-31] 
                          BinOp: ⊗ @ [evalProg.diderot:85.12-25] 
                            Subscript @ [evalProg.diderot:85.12-16] 
                              Var: E @ [evalProg.diderot:85.12-13] 
                              [
                                Lit: 2 @ [evalProg.diderot:85.14-15] 
                              ]
                            Subscript @ [evalProg.diderot:85.21-25] 
                              Var: E @ [evalProg.diderot:85.21-22] 
                              [
                                Lit: 2 @ [evalProg.diderot:85.23-24] 
                              ]
                          Subscript @ [evalProg.diderot:85.26-30] 
                            Var: L @ [evalProg.diderot:85.26-27] 
                            [
                              Lit: 2 @ [evalProg.diderot:85.28-29] 
                            ]
                        BinOp: / @ [evalProg.diderot:86.5-23] 
                          BinOp: ⊗ @ [evalProg.diderot:86.5-18] 
                            Subscript @ [evalProg.diderot:86.5-9] 
                              Var: E @ [evalProg.diderot:86.5-6] 
                              [
                                Lit: 1 @ [evalProg.diderot:86.7-8] 
                              ]
                            Subscript @ [evalProg.diderot:86.14-18] 
                              Var: E @ [evalProg.diderot:86.14-15] 
                              [
                                Lit: 1 @ [evalProg.diderot:86.16-17] 
                              ]
                          Subscript @ [evalProg.diderot:86.19-23] 
                            Var: L @ [evalProg.diderot:86.19-20] 
                            [
                              Lit: 1 @ [evalProg.diderot:86.21-22] 
                            ]
                    Apply @ [evalProg.diderot:86.28-36] 
                      UnaryOp: ∇ @ [evalProg.diderot:86.28-33] 
                        Var: F @ [evalProg.diderot:86.32-33] 
                      [
                        Var: x @ [evalProg.diderot:86.34-35] 
                      ]
              ]
            Block @ [evalProg.diderot:88.7-110.0] 
              [
                Decl @ [evalProg.diderot:88.7-110.0] 
                  Decl: Gv= @ [evalProg.diderot:89.5-90.0] 
                    BinOp: • @ [evalProg.diderot:89.15-69] 
                      Apply @ [evalProg.diderot:89.15-29] 
                        Var: transpose @ [evalProg.diderot:89.15-24] 
                        [
                          Var: rot @ [evalProg.diderot:89.25-28] 
                        ]
                      Apply @ [evalProg.diderot:89.34-69] 
                        Var: modulate @ [evalProg.diderot:89.34-42] 
                        [
                          Cons @ [evalProg.diderot:89.43-55] 
                            [
                              UnaryOp: unary - @ [evalProg.diderot:89.44-46] 
                                Lit: 1 @ [evalProg.diderot:89.45-46] 
                              UnaryOp: unary - @ [evalProg.diderot:89.48-50] 
                                Lit: 2 @ [evalProg.diderot:89.49-50] 
                              UnaryOp: unary - @ [evalProg.diderot:89.52-54] 
                                Lit: 3 @ [evalProg.diderot:89.53-54] 
                            ]
                          BinOp: • @ [evalProg.diderot:89.58-67] 
                            Var: rot @ [evalProg.diderot:89.58-61] 
                            Var: x @ [evalProg.diderot:89.66-67] 
                        ]
                Decl @ [evalProg.diderot:88.7-110.0] 
                  Decl: H= @ [evalProg.diderot:90.5-91.0] 
                    BinOp: • @ [evalProg.diderot:90.14-97] 
                      BinOp: • @ [evalProg.diderot:90.14-88] 
                        Apply @ [evalProg.diderot:90.14-28] 
                          Var: transpose @ [evalProg.diderot:90.14-23] 
                          [
                            Var: rot @ [evalProg.diderot:90.24-27] 
                          ]
                        Cons @ [evalProg.diderot:90.33-87] 
                          [
                            Cons @ [evalProg.diderot:90.34-50] 
                              [
                                UnaryOp: unary - @ [evalProg.diderot:90.35-39] 
                                  Lit: 0.1e1 @ [evalProg.diderot:90.36-39] 
                                Lit: 0.e0 @ [evalProg.diderot:90.41-44] 
                                Lit: 0.e0 @ [evalProg.diderot:90.46-49] 
                              ]
                            Cons @ [evalProg.diderot:90.52-68] 
                              [
                                Lit: 0.e0 @ [evalProg.diderot:90.53-56] 
                                UnaryOp: unary - @ [evalProg.diderot:90.58-62] 
                                  Lit: 0.2e1 @ [evalProg.diderot:90.59-62] 
                                Lit: 0.e0 @ [evalProg.diderot:90.64-67] 
                              ]
                            Cons @ [evalProg.diderot:90.70-86] 
                              [
                                Lit: 0.e0 @ [evalProg.diderot:90.71-74] 
                                Lit: 0.e0 @ [evalProg.diderot:90.76-79] 
                                UnaryOp: unary - @ [evalProg.diderot:90.81-85] 
                                  Lit: 0.3e1 @ [evalProg.diderot:90.82-85] 
                              ]
                          ]
                      Var: rot @ [evalProg.diderot:90.93-96] 
                Decl @ [evalProg.diderot:88.7-110.0] 
                  Decl: E= @ [evalProg.diderot:92.5-93.0] 
                    Apply @ [evalProg.diderot:92.17-25] 
                      Var: evecs @ [evalProg.diderot:92.17-22] 
                      [
                        Var: H @ [evalProg.diderot:92.23-24] 
                      ]
                Decl @ [evalProg.diderot:88.7-110.0] 
                  Decl: L= @ [evalProg.diderot:93.5-94.0] 
                    Apply @ [evalProg.diderot:93.17-25] 
                      Var: evals @ [evalProg.diderot:93.17-22] 
                      [
                        Var: H @ [evalProg.diderot:93.23-24] 
                      ]
                Return @ [evalProg.diderot:94.5-96.0] 
                  BinOp: • @ [evalProg.diderot:94.12-95.33] 
                    UnaryOp: unary - @ [evalProg.diderot:94.12-95.27] 
                      BinOp: + @ [evalProg.diderot:94.14-95.25] 
                        BinOp: / @ [evalProg.diderot:94.14-33] 
                          BinOp: ⊗ @ [evalProg.diderot:94.14-27] 
                            Subscript @ [evalProg.diderot:94.14-18] 
                              Var: E @ [evalProg.diderot:94.14-15] 
                              [
                                Lit: 2 @ [evalProg.diderot:94.16-17] 
                              ]
                            Subscript @ [evalProg.diderot:94.23-27] 
                              Var: E @ [evalProg.diderot:94.23-24] 
                              [
                                Lit: 2 @ [evalProg.diderot:94.25-26] 
                              ]
                          Subscript @ [evalProg.diderot:94.28-32] 
                            Var: L @ [evalProg.diderot:94.28-29] 
                            [
                              Lit: 2 @ [evalProg.diderot:94.30-31] 
                            ]
                        BinOp: / @ [evalProg.diderot:95.7-25] 
                          BinOp: ⊗ @ [evalProg.diderot:95.7-20] 
                            Subscript @ [evalProg.diderot:95.7-11] 
                              Var: E @ [evalProg.diderot:95.7-8] 
                              [
                                Lit: 1 @ [evalProg.diderot:95.9-10] 
                              ]
                            Subscript @ [evalProg.diderot:95.16-20] 
                              Var: E @ [evalProg.diderot:95.16-17] 
                              [
                                Lit: 1 @ [evalProg.diderot:95.18-19] 
                              ]
                          Subscript @ [evalProg.diderot:95.21-25] 
                            Var: L @ [evalProg.diderot:95.21-22] 
                            [
                              Lit: 1 @ [evalProg.diderot:95.23-24] 
                            ]
                    Var: Gv @ [evalProg.diderot:95.31-33] 
              ]
      Func: fStrength @ [evalProg.diderot:111.1-113.0] 
        Tensor @ [evalProg.diderot:111.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:111.25-31] 
            Tensor @ [evalProg.diderot:111.25-30] 
              [
                Lit: 3 @ [evalProg.diderot:111.25-30] 
              ]
        ]
        Expr @ [evalProg.diderot:111.1-113.0] 
          BinOp: / @ [evalProg.diderot:112.3-50] 
            UnaryOp: unary - @ [evalProg.diderot:112.3-28] 
              Subscript @ [evalProg.diderot:112.4-28] 
                Apply @ [evalProg.diderot:112.4-28] 
                  Var: evals @ [evalProg.diderot:112.4-9] 
                  [
                    Apply @ [evalProg.diderot:112.11-24] 
                      UnaryOp: ∇⊗ @ [evalProg.diderot:112.11-21] 
                        UnaryOp: ∇ @ [evalProg.diderot:112.17-21] 
                          Var: F @ [evalProg.diderot:112.20-21] 
                      [
                        Var: x @ [evalProg.diderot:112.22-23] 
                      ]
                  ]
                [
                  Lit: 1 @ [evalProg.diderot:112.26-27] 
                ]
            BinOp: + @ [evalProg.diderot:112.30-49] 
              Var: fBias @ [evalProg.diderot:112.30-35] 
              UnaryOp: |()| @ [evalProg.diderot:112.38-49] 
                Apply @ [evalProg.diderot:112.40-48] 
                  UnaryOp: ∇ @ [evalProg.diderot:112.40-45] 
                    Var: F @ [evalProg.diderot:112.44-45] 
                  [
                    Var: x @ [evalProg.diderot:112.46-47] 
                  ]
      Func: fTest @ [evalProg.diderot:114.1-36] 
        Bool @ [evalProg.diderot:114.10-15] 
        [
          Param: x @ [evalProg.diderot:114.21-27] 
            Tensor @ [evalProg.diderot:114.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:114.21-26] 
              ]
        ]
        Expr @ [evalProg.diderot:114.1-36] 
          Lit: true @ [evalProg.diderot:114.31-35] 
      Func: fMask @ [evalProg.diderot:116.1-35] 
        Tensor @ [evalProg.diderot:116.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:116.21-27] 
            Tensor @ [evalProg.diderot:116.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:116.21-26] 
              ]
        ]
        Expr @ [evalProg.diderot:116.1-35] 
          Lit: 0.1e1 @ [evalProg.diderot:116.31-34] 
      Func: posTest @ [evalProg.diderot:118.1-119.0] 
        Bool @ [evalProg.diderot:118.10-15] 
        [
          Param: x @ [evalProg.diderot:118.23-29] 
            Tensor @ [evalProg.diderot:118.23-28] 
              [
                Lit: 3 @ [evalProg.diderot:118.23-28] 
              ]
        ]
        Expr @ [evalProg.diderot:118.1-119.0] 
          AndAlso @ [evalProg.diderot:118.33-118] 
            Apply @ [evalProg.diderot:118.33-58] 
              Select @ [evalProg.diderot:118.33-58] 
                Select @ [evalProg.diderot:118.33-58] 
                  Var: block @ [evalProg.diderot:118.33-38] 
                  refcell
                isInside
              [
                Var: x @ [evalProg.diderot:118.56-57] 
              ]
            AndAlso @ [evalProg.diderot:118.59-118] 
              BinOp: > @ [evalProg.diderot:118.62-84] 
                Apply @ [evalProg.diderot:118.62-74] 
                  Var: fStrength @ [evalProg.diderot:118.62-71] 
                  [
                    Var: x @ [evalProg.diderot:118.72-73] 
                  ]
                Var: fStrTh @ [evalProg.diderot:118.77-83] 
              AndAlso @ [evalProg.diderot:118.84-118] 
                BinOp: >= @ [evalProg.diderot:118.87-107] 
                  Apply @ [evalProg.diderot:118.87-95] 
                    Var: fMask @ [evalProg.diderot:118.87-92] 
                    [
                      Var: x @ [evalProg.diderot:118.93-94] 
                    ]
                  Var: fMaskTh @ [evalProg.diderot:118.99-106] 
                Apply @ [evalProg.diderot:118.110-118] 
                  Var: fTest @ [evalProg.diderot:118.110-115] 
                  [
                    Var: x @ [evalProg.diderot:118.116-117] 
                  ]
    ]
    Strand: ray @ [evalProg.diderot:122.1-190.3] 
      [
        Param: ui @ [evalProg.diderot:122.12-18] 
          Int @ [evalProg.diderot:122.12-16] 
        Param: vi @ [evalProg.diderot:122.20-26] 
          Int @ [evalProg.diderot:122.20-24] 
      ]
      [
        VarDcl @ [evalProg.diderot:124.3-125.0] 
        VarDcl @ [evalProg.diderot:125.3-126.0] 
        VarDcl @ [evalProg.diderot:126.3-127.0] 
        VarDcl @ [evalProg.diderot:127.3-128.0] 
        VarDcl @ [evalProg.diderot:128.3-129.0] 
        VarDcl @ [evalProg.diderot:129.3-130.0] 
        VarDcl @ [evalProg.diderot:131.3-132.0] 
        VarDcl @ [evalProg.diderot:132.3-133.0] 
        VarDcl @ [evalProg.diderot:135.3-24] 
        VarDcl @ [evalProg.diderot:135.25-136.0] 
        VarDcl @ [evalProg.diderot:136.3-24] 
        VarDcl @ [evalProg.diderot:136.25-137.0] 
        VarDcl: output @ [evalProg.diderot:137.3-138.0] 
        VarDcl: output @ [evalProg.diderot:138.3-139.0] 
        VarDcl @ [evalProg.diderot:139.3-22] 
        VarDcl @ [evalProg.diderot:140.3-19] 
      ]
      [
        Method: Update @ [evalProg.diderot:142.3-180.3] 
          Block @ [evalProg.diderot:142.10-180.0] 
            [
              Assign: rayN+= @ [evalProg.diderot:144.5-145.0] 
                Var: rayStep @ [evalProg.diderot:144.13-20] 
              IfThen @ [evalProg.diderot:145.5-146.5] 
                BinOp: > @ [evalProg.diderot:145.8-24] 
                  Var: rayN @ [evalProg.diderot:145.8-12] 
                  Var: camFarVsp @ [evalProg.diderot:145.15-24] 
                Stabilize @ [evalProg.diderot:145.27-37] 
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: pos= @ [evalProg.diderot:146.5-147.0] 
                  BinOp: + @ [evalProg.diderot:146.16-39] 
                    Var: rayOrig @ [evalProg.diderot:146.16-23] 
                    BinOp: * @ [evalProg.diderot:146.26-39] 
                      Var: rayN @ [evalProg.diderot:146.26-30] 
                      Var: rayVec @ [evalProg.diderot:146.33-39] 
              IfThen @ [evalProg.diderot:147.5-148.5] 
                UnaryOp: ! @ [evalProg.diderot:147.9-22] 
                  Apply @ [evalProg.diderot:147.10-22] 
                    Var: posTest @ [evalProg.diderot:147.10-17] 
                    [
                      Var: pos @ [evalProg.diderot:147.18-21] 
                    ]
                Continue @ [evalProg.diderot:147.24-33] 
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: step= @ [evalProg.diderot:148.5-149.0] 
                  Apply @ [evalProg.diderot:148.17-27] 
                    Var: fStep @ [evalProg.diderot:148.17-22] 
                    [
                      Var: pos @ [evalProg.diderot:148.23-26] 
                    ]
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: aa= @ [evalProg.diderot:149.5-150.0] 
                  Apply @ [evalProg.diderot:149.15-38] 
                    Var: atent @ [evalProg.diderot:149.15-20] 
                    [
                      Var: maxAlpha @ [evalProg.diderot:149.21-29] 
                      UnaryOp: |()| @ [evalProg.diderot:149.31-37] 
                        Var: step @ [evalProg.diderot:149.32-36] 
                    ]
              IfThen @ [evalProg.diderot:151.5-152.5] 
                BinOp: == @ [evalProg.diderot:151.8-14] 
                  Var: aa @ [evalProg.diderot:151.8-10] 
                  Lit: 0 @ [evalProg.diderot:151.13-14] 
                Continue @ [evalProg.diderot:151.17-26] 
              Assign: aa= @ [evalProg.diderot:152.5-30] 
                BinOp: - @ [evalProg.diderot:152.10-29] 
                  Lit: 1 @ [evalProg.diderot:152.10-11] 
                  BinOp: ^ @ [evalProg.diderot:152.14-29] 
                    BinOp: - @ [evalProg.diderot:152.15-19] 
                      Lit: 1 @ [evalProg.diderot:152.15-16] 
                      Var: aa @ [evalProg.diderot:152.17-19] 
                    Var: alphaFix @ [evalProg.diderot:152.21-29] 
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: snorm= @ [evalProg.diderot:154.5-155.0] 
                  UnaryOp: unary - @ [evalProg.diderot:154.18-34] 
                    Apply @ [evalProg.diderot:154.19-34] 
                      Var: normalize @ [evalProg.diderot:154.19-28] 
                      [
                        Var: step @ [evalProg.diderot:154.29-33] 
                      ]
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: dcomp= @ [evalProg.diderot:155.5-156.0] 
                  BinOp: ^ @ [evalProg.diderot:155.18-38] 
                    BinOp: • @ [evalProg.diderot:155.19-35] 
                      Var: snorm @ [evalProg.diderot:155.19-24] 
                      Var: litwsp @ [evalProg.diderot:155.29-35] 
                    Lit: 2 @ [evalProg.diderot:155.37-38] 
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: scomp= @ [evalProg.diderot:156.5-157.0] 
                  Lit: 0.e0 @ [evalProg.diderot:156.18-21] 
              IfThen @ [evalProg.diderot:157.5-163.5] 
                BinOp: != @ [evalProg.diderot:157.9-18] 
                  Var: phKs @ [evalProg.diderot:157.9-13] 
                  Lit: 0 @ [evalProg.diderot:157.17-18] 
                Assign: scomp= @ [evalProg.diderot:158.7-159.0] 
                  BinOp: ^ @ [evalProg.diderot:158.15-59] 
                    UnaryOp: |()| @ [evalProg.diderot:158.15-54] 
                      BinOp: • @ [evalProg.diderot:158.16-53] 
                        Var: snorm @ [evalProg.diderot:158.16-21] 
                        Apply @ [evalProg.diderot:158.26-52] 
                          Var: normalize @ [evalProg.diderot:158.26-35] 
                          [
                            BinOp: + @ [evalProg.diderot:158.36-51] 
                              Var: eyeDir @ [evalProg.diderot:158.36-42] 
                              Var: litwsp @ [evalProg.diderot:158.45-51] 
                          ]
                    Var: phSp @ [evalProg.diderot:158.55-59] 
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: dcol= @ [evalProg.diderot:163.5-164.0] 
                  Apply @ [evalProg.diderot:163.17-65] 
                    Var: lerp @ [evalProg.diderot:163.17-21] 
                    [
                      Var: mcNear @ [evalProg.diderot:163.22-28] 
                      Var: mcFar @ [evalProg.diderot:163.30-35] 
                      Var: camNearVsp @ [evalProg.diderot:163.37-47] 
                      Var: rayN @ [evalProg.diderot:163.49-53] 
                      Var: camFarVsp @ [evalProg.diderot:163.55-64] 
                    ]
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: cmin= @ [evalProg.diderot:164.5-165.0] 
                  Subscript @ [evalProg.diderot:164.17-27] 
                    Var: cminmax @ [evalProg.diderot:164.17-24] 
                    [
                      Lit: 0 @ [evalProg.diderot:164.25-26] 
                    ]
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: cmax= @ [evalProg.diderot:165.5-166.0] 
                  Subscript @ [evalProg.diderot:165.17-27] 
                    Var: cminmax @ [evalProg.diderot:165.17-24] 
                    [
                      Lit: 1 @ [evalProg.diderot:165.25-26] 
                    ]
              Decl @ [evalProg.diderot:142.10-180.0] 
                Decl: mcol= @ [evalProg.diderot:166.5-167.0] 
                  Cons @ [evalProg.diderot:166.17-24] 
                    [
                      Lit: 1 @ [evalProg.diderot:166.18-19] 
                      Lit: 1 @ [evalProg.diderot:166.20-21] 
                      Lit: 1 @ [evalProg.diderot:166.22-23] 
                    ]
              IfThen @ [evalProg.diderot:167.5-170.5] 
                BinOp: != @ [evalProg.diderot:167.9-21] 
                  Var: cmin @ [evalProg.diderot:167.9-13] 
                  Var: cmax @ [evalProg.diderot:167.17-21] 
                Assign: mcol= @ [evalProg.diderot:168.7-54] 
                  Apply @ [evalProg.diderot:168.14-53] 
                    Var: CM @ [evalProg.diderot:168.14-16] 
                    [
                      Apply @ [evalProg.diderot:168.17-52] 
                        Var: lerp @ [evalProg.diderot:168.17-21] 
                        [
                          Lit: 0 @ [evalProg.diderot:168.22-23] 
                          Lit: 1 @ [evalProg.diderot:168.25-26] 
                          Var: cmin @ [evalProg.diderot:168.28-32] 
                          Apply @ [evalProg.diderot:168.34-45] 
                            Var: C @ [evalProg.diderot:168.34-35] 
                            [
                              BinOp: + @ [evalProg.diderot:168.36-44] 
                                Var: pos @ [evalProg.diderot:168.36-39] 
                                Var: step @ [evalProg.diderot:168.40-44] 
                            ]
                          Var: cmax @ [evalProg.diderot:168.47-51] 
                        ]
                    ]
              Assign: rgb+= @ [evalProg.diderot:170.5-172.0] 
                BinOp: * @ [evalProg.diderot:170.12-171.30] 
                  BinOp: * @ [evalProg.diderot:170.12-21] 
                    Var: transp @ [evalProg.diderot:170.12-18] 
                    Var: aa @ [evalProg.diderot:170.19-21] 
                  BinOp: + @ [evalProg.diderot:170.23-171.29] 
                    BinOp: * @ [evalProg.diderot:170.23-171.9] 
                      BinOp: + @ [evalProg.diderot:170.24-41] 
                        Var: phKa @ [evalProg.diderot:170.24-28] 
                        BinOp: * @ [evalProg.diderot:170.31-41] 
                          Var: phKd @ [evalProg.diderot:170.31-35] 
                          Var: dcomp @ [evalProg.diderot:170.36-41] 
                      Apply @ [evalProg.diderot:170.43-171.0] 
                        Var: modulate @ [evalProg.diderot:170.43-51] 
                        [
                          Var: dcol @ [evalProg.diderot:170.52-56] 
                          Var: mcol @ [evalProg.diderot:170.57-61] 
                        ]
                    BinOp: * @ [evalProg.diderot:171.11-29] 
                      BinOp: * @ [evalProg.diderot:171.11-21] 
                        Var: phKs @ [evalProg.diderot:171.11-15] 
                        Var: scomp @ [evalProg.diderot:171.16-21] 
                      Cons @ [evalProg.diderot:171.22-29] 
                        [
                          Lit: 1 @ [evalProg.diderot:171.23-24] 
                          Lit: 1 @ [evalProg.diderot:171.25-26] 
                          Lit: 1 @ [evalProg.diderot:171.27-28] 
                        ]
              Assign: transp*= @ [evalProg.diderot:173.5-174.0] 
                BinOp: - @ [evalProg.diderot:173.15-21] 
                  Lit: 1 @ [evalProg.diderot:173.15-16] 
                  Var: aa @ [evalProg.diderot:173.19-21] 
              IfThen @ [evalProg.diderot:174.5-179.3] 
                BinOp: < @ [evalProg.diderot:174.8-24] 
                  Var: transp @ [evalProg.diderot:174.8-14] 
                  Var: transp0 @ [evalProg.diderot:174.17-24] 
                Block @ [evalProg.diderot:174.25-178.0] 
                  [
                    Assign: transp= @ [evalProg.diderot:175.7-176.0] 
                      Lit: 0 @ [evalProg.diderot:175.16-17] 
                    Stabilize @ [evalProg.diderot:176.7-177.0] 
                  ]
            ]
        Method: Stabilize @ [evalProg.diderot:180.3-190.1] 
          IfThen @ [evalProg.diderot:181.5-188.3] 
            BinOp: < @ [evalProg.diderot:181.9-19] 
              Var: transp @ [evalProg.diderot:181.9-15] 
              Lit: 1 @ [evalProg.diderot:181.18-19] 
            Block @ [evalProg.diderot:181.21-187.0] 
              [
                Decl @ [evalProg.diderot:181.21-187.0] 
                  Decl: aa= @ [evalProg.diderot:182.7-183.0] 
                    BinOp: - @ [evalProg.diderot:182.17-27] 
                      Lit: 1 @ [evalProg.diderot:182.17-18] 
                      Var: transp @ [evalProg.diderot:182.21-27] 
                Assign: rgba= @ [evalProg.diderot:184.7-52] 
                  Cons @ [evalProg.diderot:184.14-51] 
                    [
                      BinOp: / @ [evalProg.diderot:184.15-24] 
                        Subscript @ [evalProg.diderot:184.15-21] 
                          Var: rgb @ [evalProg.diderot:184.15-18] 
                          [
                            Lit: 0 @ [evalProg.diderot:184.19-20] 
                          ]
                        Var: aa @ [evalProg.diderot:184.22-24] 
                      BinOp: / @ [evalProg.diderot:184.26-35] 
                        Subscript @ [evalProg.diderot:184.26-32] 
                          Var: rgb @ [evalProg.diderot:184.26-29] 
                          [
                            Lit: 1 @ [evalProg.diderot:184.30-31] 
                          ]
                        Var: aa @ [evalProg.diderot:184.33-35] 
                      BinOp: / @ [evalProg.diderot:184.37-46] 
                        Subscript @ [evalProg.diderot:184.37-43] 
                          Var: rgb @ [evalProg.diderot:184.37-40] 
                          [
                            Lit: 2 @ [evalProg.diderot:184.41-42] 
                          ]
                        Var: aa @ [evalProg.diderot:184.44-46] 
                      Var: aa @ [evalProg.diderot:184.48-50] 
                    ]
              ]
      ]
    Grid @ [evalProg.diderot:190.3-192.0] 
      Comprehension @ [evalProg.diderot:190.16-191.44] 
        Apply @ [evalProg.diderot:190.17-191.0] 
          Var: ray @ [evalProg.diderot:190.17-20] 
          [
            Var: ui @ [evalProg.diderot:190.21-23] 
            Var: vi @ [evalProg.diderot:190.25-27] 
          ]
        [
          Iterator: vi @ [evalProg.diderot:191.9-25] 
            Range @ [evalProg.diderot:191.15-25] 
              Lit: 0 @ [evalProg.diderot:191.15-16] 
              BinOp: - @ [evalProg.diderot:191.18-25] 
                Var: iresV @ [evalProg.diderot:191.18-23] 
                Lit: 1 @ [evalProg.diderot:191.24-25] 
          Iterator: ui @ [evalProg.diderot:191.27-43] 
            Range @ [evalProg.diderot:191.33-43] 
              Lit: 0 @ [evalProg.diderot:191.33-34] 
              BinOp: - @ [evalProg.diderot:191.36-43] 
                Var: iresU @ [evalProg.diderot:191.36-41] 
                Lit: 1 @ [evalProg.diderot:191.42-43] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemType: Mesh with type var:NONE block = loadFem(Mesh);
input FemType: Space with type var:mesh_t space = loadFem(Space);
input FemType: FemFunc with type var:fns_t U = loadFem(FemFunc);
input int cellChoice;
input image(1)[3] cmap = loadImage<%1; $[3]> ("cmap.nrrd");
input vec3 camEye = [0.e0, -0.2e1, 0.e0];
input vec3 camAt = [0.e0, 0.e0, 0.e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camNear = -0.4e1;
input real camFar = 0.4e1;
input real camFOV = 0.1e2;
input bool camOrtho = false;
input int iresU = 100;
input int iresV = 100;
input real rayStep = 0.1e-3;
input real refStep = 0.1e-3;
input real transp0 = 0.5e-2;
input real thick = 0.1e-1;
input real fStrTh = 0.e0;
input real fMaskTh = 0.e0;
input real fBias = 0.1e0;
input real maxAlpha = 0.1e1;
input bool light = false;
input vec4 phong = [0.1e0, 0.7e0, 0.2e0, 0.1e3];
input vec3 mcNear = [0.1e1, 0.1e1, 0.1e1];
input vec3 mcFar = [0.1e1, 0.1e1, 0.1e1];
input vec3 litdir = [0.e0, -0.1e1, 0.e0];
input vec2 cminmax = [0.e0, 0.e0];
input bool analytical = true;
input image(3)[] umm = loadImage<%3; $[]> ("data.nrrd");
input mat3 rot = [[0.1e1, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.1e1]];
function bool != (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:mesh_t findPos (FemType: Mesh with type var:mesh_t mesh, vec3 pos)
{
  xn = [0.e0, 0.e0, 0.e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  foreach (int itter in $range (0, * (+ (2, 1), numCell))) {
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.e0, 0.e0, 0.e0]);
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (mesh, xn, 0.1e-8)):bool {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      }
    newtonInt = + (newtonInt, 1);
    if >= (newtonInt, 2) {
      newtonInt = 0;
      if >= (cellInt, numCell) {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        cellInt = + (cellInt, 1);
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: RefCell with type var:mesh_t refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:mesh_t, RefCell(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:mesh_t[], Cells(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] mesh_t_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] mesh_t_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 mesh_t_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 mesh_t_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:mesh_t _mesh_t_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.e0, 0.e0, 0.e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.e0, 0.e0, 0.e0]);
  foreach (int itter in $range (0, 2)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (mesh, xn, 0.1e-8)):bool {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: MeshPos with type var:mesh_t _mesh_pos_mesh_t_build_world_pos (FemType: MeshPos with type var:mesh_t pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:mesh_t,vec3 (pos, mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:mesh_t pos)
{
  return mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:mesh_t $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    print ("face ", $r2i (time[1]), " to ", $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1), "\n", "got: ", $sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), "\n");
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]], $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:mesh_t;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 12), * (faceIdx, 2)))):int[2];
    }
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 0;
      }
    if $and (>= (/ (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 1;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      face = 3;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 4;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      face = 5;
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if != (i, 0) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 0;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      }
    if $and (>= (/ (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if != (i, 1) {
      time = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 1;
      }
    else {
      faceTime = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), 0.1e-20)))
    if != (i, 2) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if != (i, 3) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      face = 3;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if != (i, 4) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 4;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), 0.1e-20)))
    if != (i, 5) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      face = 5;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    if == (-inf, faceTime) {
      return [(real)-1, (real)-1];
      }
    else {
      return [faceTime, (real)i];
      }
    }
  }
function FemType: Mesh with type var:mesh_t domain (FemType: Space with type var:mesh_t arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:mesh_t space (FemType: FemFunc with type var:fns_t arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:func_t funcCell (FemType: FemFunc with type var:fns_t arg0, FemType: MeshCell with type var:mesh_t arg1)
{
  return loadFem(FuncCell);
  }
FemType: MeshCell with type var:mesh_t c1 = $dynsub<FemType: MeshCell with type var:mesh_t> (extractFemItem(block, FemType: MeshCell with type var:mesh_t[], Cells(Mesh)), cellChoice);
field(3)[] F = femField(extractFem(FemFunc,funcCell (U, c1) ),extractFemItem(funcCell (U, c1), int, CellIndex(FuncCell)),field(3)[], refField, );
field#0(1)[3] CM = ⊛<#0; %1; $[3]> (tent, clamp<%1; $[3]> (cmap));
field(3)[] C = F;
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camN, camU);
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
real camNearVsp = +<$[]> (camNear, camDist);
real camFarVsp = +<$[]> (camFar, camDist);
vec3 litwsp = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (litdir));
field#2(3)[] G = (field#2(3)[])(⊛<#4; %3; $[]> (umm, bspln5));
function real atent (real a0, real d)
{
  return * (a0, clamp<$[]> ((real)0, (real)1, * (0.15e1, -<$[]> ((real)1, / (|()|<$[]> (d), thick)))));
  }
function vec3 fStep (vec3 x)
{
  if ! (analytical) {
    vec3[3] E = evecs (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x));
    real[3] L = evals (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x));
    return •<$[3,3]; $[3]; $[3]> (unary -<$[3,3]> (+<$[3,3]> (/<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 2), $sub<vec3; %3> (E, 2)), $sub<real; %3> (L, 2)), /<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 1), $sub<vec3; %3> (E, 1)), $sub<real; %3> (L, 1)))), @<#; %3; $[3]> (∇<#; %3> (F), x));
    }
  else {
    vec3 Gv = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> (rot), modulate<%3> ([(real)(unary - (1)), (real)(unary - (2)), (real)(unary - (3))], •<$[3,3]; $[3]; $[3]> (rot, x)));
    mat3 H = •<$[3,3]; $[3,3]; $[3,3]> (•<$[3,3]; $[3,3]; $[3,3]> (transpose<%3; %3> (rot), [[unary -<$[]> (0.1e1), 0.e0, 0.e0], [0.e0, unary -<$[]> (0.2e1), 0.e0], [0.e0, 0.e0, unary -<$[]> (0.3e1)]]), rot);
    vec3[3] E = evecs (H);
    real[3] L = evals (H);
    return •<$[3,3]; $[3]; $[3]> (unary -<$[3,3]> (+<$[3,3]> (/<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 2), $sub<vec3; %3> (E, 2)), $sub<real; %3> (L, 2)), /<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 1), $sub<vec3; %3> (E, 1)), $sub<real; %3> (L, 1)))), Gv);
    }
  }
function real fStrength (vec3 x)
{
  return / (unary -<$[]> ($sub<real; %3> (evals (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x)), 1)), +<$[]> (fBias, |()|<$[3]> (@<#; %3; $[3]> (∇<#; %3> (F), x))));
  }
function bool fTest (vec3 x)
{
  return true;
  }
function real fMask (vec3 x)
{
  return 0.1e1;
  }
function bool posTest (vec3 x)
{
  return (extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (refcell (block), x, 0.1e-8)):bool && (> (fStrength (x), fStrTh) && (>= (fMask (x), fMaskTh) && fTest (x))));
  }
strand ray (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (unary -<$[]> (camVmax), camVmax, unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  real rayN = camNearVsp;
  vec3 UV = +<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV));
  vec3 rayOrig = +<$[3]> (camEye, (UV if camOrtho else [0.e0, 0.e0, 0.e0]));
  vec3 rayVec = +<$[3]> (camN, ([0.e0, 0.e0, 0.e0] if camOrtho else /<$[3]> (UV, camDist)));
  real alphaFix = / (* (|()|<$[3]> (rayVec), rayStep), refStep);
  vec3 eyeDir = unary -<$[3]> (normalize<$[3]> (rayVec));
  real phKa = phong[0];
  real phKd = phong[1];
  real phKs = phong[2];
  real phSp = phong[3];
  output vec4 rgba = [0.e0, 0.e0, 0.e0, 0.e0];
  output real raw = 0.e0;
  vec3 rgb = [0.e0, 0.e0, 0.e0];
  real transp = 0.1e1;
  update {
    rayN = +<$[]> (rayN, rayStep);
    if > (rayN, camFarVsp)
      stabilize;
      vec3 pos = +<$[3]> (rayOrig, *<$[3]> (rayN, rayVec));
    if ! (posTest (pos))
      continue;
      vec3 step = fStep (pos);
    real aa = atent (maxAlpha, |()|<$[3]> (step));
    if == (aa, (real)0)
      continue;
      aa = -<$[]> ((real)1, ^ (-<$[]> ((real)1, aa), alphaFix));
    vec3 snorm = unary -<$[3]> (normalize<$[3]> (step));
    real dcomp = ^ (•<$[3]; $[3]; $[]> (snorm, litwsp), 2);
    real scomp = 0.e0;
    if != (phKs, (real)0)
      scomp = ^ (|()|<$[]> (•<$[3]; $[3]; $[]> (snorm, normalize<$[3]> (+<$[3]> (eyeDir, litwsp)))), phSp);
      vec3 dcol = lerp<$[3]> (mcNear, mcFar, camNearVsp, rayN, camFarVsp);
    real cmin = cminmax[0];
    real cmax = cminmax[1];
    vec3 mcol = [0.1e1, 0.1e1, 0.1e1];
    if != (cmin, cmax)
      mcol = @<#0; %1; $[3]> (CM, lerp<$[]> ((real)0, (real)1, cmin, @<#; %3; $[]> (C, +<$[3]> (pos, step)), cmax));
      rgb = +<$[3]> (rgb, *<$[3]> (* (transp, aa), +<$[3]> (*<$[3]> (+<$[]> (phKa, * (phKd, dcomp)), modulate<%3> (dcol, mcol)), *<$[3]> (* (phKs, scomp), [0.1e1, 0.1e1, 0.1e1]))));
    transp = * (transp, -<$[]> ((real)1, aa));
    if < (transp, transp0) {
      transp = 0.e0;
      stabilize;
      }
    }
  stabilize {
    if < (transp, (real)1) {
      real aa = -<$[]> ((real)1, transp);
      rgba = [/ (rgb[0], aa), / (rgb[1], aa), / (rgb[2], aa), aa];
      }
    }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresV, 1))) {
      foreach (int ui in $range (0, - (iresU, 1))) {
        new ray (ui, vi);
        }
      }
    }
  
/* Program end */
cmap.nrrd file header:
  type: double
  dimension: 2
  space dimension: 1
  sizes: 3 311
  space directions: none (0.0066445182724252493)
  kinds: 3-vector space
  endian: little
  encoding: raw
  space origin: (-1.0299003322259137)
data.nrrd file header:
  type: double
  dimension: 3
  space dimension: 3
  sizes: 300 300 300
  space directions: (0.0040133779264214043,0,0) (0,0.0040133779264214043,0) (0,0,0.0040133779264214043)
  kinds: space space space
  endian: little
  encoding: raw
  space origin: (-0.59999999999999998,-0.59999999999999998,-0.59999999999999998)
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
input tensor[3,3] rot0542 = <default>;
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
  real _t0543 = 0.1e1;
  real _t0544 = 0.e0;
  real _t0545 = 0.e0;
  vec3 _t0546 = [_t0543, _t0544, _t0545];
  real _t0547 = 0.e0;
  real _t0548 = 0.1e1;
  real _t0549 = 0.e0;
  vec3 _t054A = [_t0547, _t0548, _t0549];
  real _t054B = 0.e0;
  real _t054C = 0.e0;
  real _t054D = 0.1e1;
  vec3 _t054E = [_t054B, _t054C, _t054D];
  rot0542 = [_t0546, _t054A, _t054E];
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115F3;
global field(3)[] F15FB;
global field#0(1)[3] CM15FE;
global field(3)[] C15FF;
global vec3 camN1601;
global vec3 camU1603;
global vec3 camV1604;
global real camDist1606;
global real camVmax160C;
global real camUmax1610;
global real camNearVsp1611;
global real camFarVsp1612;
global vec3 litwsp1616;
global field#2(3)[] G161A;
function bool#0 !=054F (Femdata: MeshCell cell10550, Femdata: MeshCell cell10551)
{
  int _t0552 = extractFemItem(CellIndex(Mesh), int, cell10550);
  int _t0553 = extractFemItem(CellIndex(Mesh), int, cell10551);
  bool _t0554 = prim !=0086 (_t0552, _t0553);
  return _t0554;
}
function bool#0 ==0555 (Femdata: MeshCell cell10550, Femdata: MeshCell cell10551)
{
  int _t0556 = extractFemItem(CellIndex(Mesh), int, cell10550);
  int _t0557 = extractFemItem(CellIndex(Mesh), int, cell10551);
  bool _t0558 = prim ==0082 (_t0556, _t0557);
  return _t0558;
}
function Femdata: MeshPos#0 findPos0559 (Femdata: Mesh mesh055A, vec3 pos055B)
{
  real _t055C = 0.e0;
  real _t055D = 0.e0;
  real _t055E = 0.e0;
  xn055F = [_t055C, _t055D, _t055E];
  newtonInt0560 = 0;
  cellInt0561 = extractFemItem(StartCell(Mesh), int, mesh055A);
  int _t0562 = extractFemItem(NumCell(Mesh), int, mesh055A);
  int _t0563 = 1;
  numCell0564 = prim -0024 (_t0562, _t0563);
  int _t0565 = 0;
  int _t0566 = 2;
  int _t0567 = 1;
  int _t0568 = prim +0015 (_t0566, _t0567);
  int _t0569 = prim *0033 (_t0568, numCell0564);
  int[] _t056A = prim $range01C3 (_t0565, _t0569);
  foreach itter0585 in _t056A {
    field(3)[3] _t056B = femField(mesh055A,cellInt0561,field(3)[3],Transform,);
    field(3)[3,3] _t056C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t056B);
    field(3)[3,3] _t056D = prim inv015E<#∞; %3> (_t056C);
    real _t056E = 0.e0;
    real _t056F = 0.e0;
    real _t0570 = 0.e0;
    vec3 _t0571 = [_t056E, _t056F, _t0570];
    A0572 = prim @00A5<#∞; %3; $[3,3]> (_t056D, _t0571);
    field(3)[3] _t0573 = femField(mesh055A,cellInt0561,field(3)[3],Transform,);
    field(3)[3] _t0574 = prim -002E<#∞; %3; $[3]> (_t0573, pos055B);
    field(3)[3] _t0575 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0572, _t0574);
    delta0576 = prim @00A5<#∞; %3; $[3]> (_t0575, xn055F);
    xn055F = prim -0026<$[3]> (xn055F, delta0576);
    real _t0577 = 0.1e-7;
    real _t0578 = 0.1e-7;
    real _t0579 = prim *0034 (_t0577, _t0578);
    real _t057A = prim •00CE<$[3]; $[3]; $[]> (delta0576, delta0576);
    bool _t057B = prim >=007E (_t0579, _t057A);
    if _t057B {
      real _t057C = 0.1e-8;
      bool _t057D = extractFemItemN((mesh055A, xn055F, _t057C),InsideInsert(File=checkInside.in)(Mesh),);
      if _t057D {
        Femdata: MeshPos _t057E = extractFemItemN((mesh055A, cellInt0561, xn055F, pos055B),AllBuild(MeshPos),);
        return _t057E;
      }
    }
    int _t057F = 1;
    newtonInt0560 = prim +0015 (newtonInt0560, _t057F);
    int _t0580 = 2;
    bool _t0581 = prim >=007D (newtonInt0560, _t0580);
    if _t0581 {
      newtonInt0560 = 0;
      bool _t0582 = prim >=007D (cellInt0561, numCell0564);
      if _t0582 {
        Femdata: MeshPos _t0583 = extractFemItemN((mesh055A),InvalidBuild(MeshPos),);
        return _t0583;
      } else {
        int _t0584 = 1;
        cellInt0561 = prim +0015 (cellInt0561, _t0584);
      }
    }
  }
  string _t0586 = "Bad end 2";
  string _t0587 = "\n";
  print (_t0586, _t0587);
  Femdata: MeshPos _t0588 = extractFemItemN((mesh055A),InvalidBuild(MeshPos),);
  return _t0588;
}
function Femdata: RefCell#1 refcell0589 (Femdata: Mesh arg0058A)
{
  Femdata: RefCell _t058B = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0058A);
  return _t058B;
}
function Femdata: MeshCell[]#0 cells058C (Femdata: Mesh arg0058D)
{
  Femdata: MeshCell[] _t058E = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg0058D);
  return _t058E;
}
function Femdata: MeshCell[]#0 cells058F (Femdata: Mesh arg0058D)
{
  int _t0590 = 0;
  int _t0591 = extractFemItem(NumCell(Mesh), int, arg0058D);
  int[] _t0592 = prim $range01C3 (_t0590, _t0591);
  Femdata: MeshCell[] accum0595 = {};
  foreach i0593 in _t0592 {
    Femdata: MeshCell _t0594 = loadFem(MeshCell, arg0058D, i0593);
    accum0595 = prim @0010<Femdata: MeshCell> (accum0595, _t0594);
  }
  return accum0595;
}
function int#0 numCell0596 (Femdata: Mesh arg0058A)
{
  int _t0597 = extractFemItem(NumCell(Mesh), int, arg0058A);
  return _t0597;
}
function tensor[3,3,3,3]#0 mesh_t_transform_30598 (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t059C = femField(mesh059B,cell059A,field(3)[3],Transform,);
  field(3)[3,3] _t059D = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t059C);
  field(3)[3,3,3] _t059E = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t059D);
  field(3)[3,3,3,3] _t059F = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t059E);
  tensor[3,3,3,3] _t05A0 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t059F, pos0599);
  return _t05A0;
}
function tensor[3,3,3]#0 mesh_t_transform_205A1 (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t05A2 = femField(mesh059B,cell059A,field(3)[3],Transform,);
  field(3)[3,3] _t05A3 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05A2);
  field(3)[3,3,3] _t05A4 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t05A3);
  tensor[3,3,3] _t05A5 = prim @00A5<#∞; %3; $[3,3,3]> (_t05A4, pos0599);
  return _t05A5;
}
function tensor[3,3]#0 mesh_t_transform_105A6 (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t05A7 = femField(mesh059B,cell059A,field(3)[3],Transform,);
  field(3)[3,3] _t05A8 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05A7);
  tensor[3,3] _t05A9 = prim @00A5<#∞; %3; $[3,3]> (_t05A8, pos0599);
  return _t05A9;
}
function vec3#2 mesh_t_transform_005AA (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t05AB = femField(mesh059B,cell059A,field(3)[3],Transform,);
  vec3 _t05AC = prim @00A5<#∞; %3; $[3]> (_t05AB, pos0599);
  return _t05AC;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse05AD (vec3 pos05AE, int cellInt05AF, Femdata: Mesh mesh05B0)
{
  real _t05B1 = 0.e0;
  real _t05B2 = 0.e0;
  real _t05B3 = 0.e0;
  xn05B4 = [_t05B1, _t05B2, _t05B3];
  field(3)[3] _t05B5 = femField(mesh05B0,cellInt05AF,field(3)[3],Transform,);
  field(3)[3,3] _t05B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05B5);
  field(3)[3,3] _t05B7 = prim inv015E<#∞; %3> (_t05B6);
  real _t05B8 = 0.e0;
  real _t05B9 = 0.e0;
  real _t05BA = 0.e0;
  vec3 _t05BB = [_t05B8, _t05B9, _t05BA];
  A05BC = prim @00A5<#∞; %3; $[3,3]> (_t05B7, _t05BB);
  int _t05BD = 0;
  int _t05BE = 2;
  int[] _t05BF = prim $range01C3 (_t05BD, _t05BE);
  foreach itter05CD in _t05BF {
    field(3)[3] _t05C0 = femField(mesh05B0,cellInt05AF,field(3)[3],Transform,);
    field(3)[3] _t05C1 = prim -002E<#∞; %3; $[3]> (_t05C0, pos05AE);
    field(3)[3] _t05C2 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A05BC, _t05C1);
    delta05C3 = prim @00A5<#∞; %3; $[3]> (_t05C2, xn05B4);
    xn05B4 = prim -0026<$[3]> (xn05B4, delta05C3);
    real _t05C4 = 0.1e-7;
    real _t05C5 = 0.1e-7;
    real _t05C6 = prim *0034 (_t05C4, _t05C5);
    real _t05C7 = prim •00CE<$[3]; $[3]; $[]> (delta05C3, delta05C3);
    bool _t05C8 = prim >=007E (_t05C6, _t05C7);
    if _t05C8 {
      real _t05C9 = 0.1e-8;
      bool _t05CA = extractFemItemN((mesh05B0, xn05B4, _t05C9),InsideInsert(File=checkInside.in)(Mesh),);
      if _t05CA {
        Femdata: MeshPos _t05CB = extractFemItemN((mesh05B0, cellInt05AF, xn05B4, pos05AE),AllBuild(MeshPos),);
        return _t05CB;
      } else {
        Femdata: MeshPos _t05CC = extractFemItemN((mesh05B0),InvalidBuild(MeshPos),);
        return _t05CC;
      }
    }
  }
  Femdata: MeshPos _t05CE = extractFemItemN((mesh05B0),InvalidBuild(MeshPos),);
  return _t05CE;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos05CF (Femdata: MeshPos pos05D0)
{
  bool _t05D1 = extractFemItem(WorldTest(MeshPos), bool, pos05D0);
  if _t05D1 {
    vec3 _t05D2 = extractFemItem(RefPos(MeshPos), vec3, pos05D0);
    int _t05D3 = extractFemItem(CellIndex(MeshPos), int, pos05D0);
    Femdata: Mesh _t05D4 = extractFem(pos05D0, Mesh);
    vec3 _t05D5 = func mesh_t_transform_005AA (_t05D2, _t05D3, _t05D4);
    Femdata: MeshPos _t05D6 = extractFemItemN((pos05D0, _t05D5),NewWorld(MeshPos),);
    return _t05D6;
  } else {
    return pos05D0;
  }
}
function vec3#0 worldPos05D7 (Femdata: MeshPos pos05D0)
{
  vec3 _t05D8 = extractFemItem(RefPos(MeshPos), vec3, pos05D0);
  int _t05D9 = extractFemItem(CellIndex(MeshPos), int, pos05D0);
  Femdata: Mesh _t05DA = extractFem(pos05D0, Mesh);
  vec3 _t05DB = func mesh_t_transform_005AA (_t05D8, _t05D9, _t05DA);
  return _t05DB;
}
function Femdata: MeshPos#0 $exitPos05DC (Femdata: Mesh mesh05DD, int cellId05DE, vec3 refPos05DF, vec3 dPos05E0, real[2] time05E1)
{
  int _t05E2 = -1;
  real _t05E3 = time05E1[1];
  int _t05E4 = prim $r2i01B7 (_t05E3);
  int[2] _t05E6 = func nextCell405E5 (_t05E4, cellId05DE, mesh05DD);
  int _t05E7 = 0;
  int _t05E8 = prim $sub01C0<int; %2> (_t05E6, _t05E7);
  bool _t05E9 = prim !=0086 (_t05E2, _t05E8);
  if _t05E9 {
    string _t05EA = "face ";
    real _t05EB = time05E1[1];
    int _t05EC = prim $r2i01B7 (_t05EB);
    string _t05ED = " to ";
    real _t05EE = time05E1[1];
    int _t05EF = prim $r2i01B7 (_t05EE);
    int[2] _t05F0 = func nextCell405E5 (_t05EF, cellId05DE, mesh05DD);
    int _t05F1 = 1;
    int _t05F2 = prim $sub01C0<int; %2> (_t05F0, _t05F1);
    string _t05F3 = "\n";
    string _t05F4 = "got: ";
    real _t05F5 = 0.1e1;
    real _t05F6 = 0.e0;
    real _t05F7 = 0.e0;
    real _t05F8 = 0.e0;
    vec4 _t05F9 = [_t05F5, _t05F6, _t05F7, _t05F8];
    real _t05FA = 0.e0;
    real _t05FB = 0.1e1;
    real _t05FC = 0.e0;
    real _t05FD = 0.e0;
    vec4 _t05FE = [_t05FA, _t05FB, _t05FC, _t05FD];
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    real _t0601 = 0.1e1;
    real _t0602 = 0.e0;
    vec4 _t0603 = [_t05FF, _t0600, _t0601, _t0602];
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    real _t0606 = 0.e0;
    real _t0607 = 0.1e1;
    vec4 _t0608 = [_t0604, _t0605, _t0606, _t0607];
    tensor[4,4] _t0609 = [_t05F9, _t05FE, _t0603, _t0608];
    real _t060A = 0.1e1;
    real _t060B = 0.e0;
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    vec4 _t060E = [_t060A, _t060B, _t060C, _t060D];
    real _t060F = 0.e0;
    real _t0610 = 0.1e1;
    real _t0611 = 0.e0;
    real _t0612 = 0.e0;
    vec4 _t0613 = [_t060F, _t0610, _t0611, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    real _t0616 = 0.1e1;
    real _t0617 = 0.1e1;
    vec4 _t0618 = [_t0614, _t0615, _t0616, _t0617];
    real _t0619 = 0.e0;
    real _t061A = 0.e0;
    real _t061B = 0.e0;
    real _t061C = 0.1e1;
    vec4 _t061D = [_t0619, _t061A, _t061B, _t061C];
    tensor[4,4] _t061E = [_t060E, _t0613, _t0618, _t061D];
    real _t061F = 0.e0;
    real _t0620 = 0.1e1;
    real _t0621 = 0.e0;
    real _t0622 = 0.e0;
    vec4 _t0623 = [_t061F, _t0620, _t0621, _t0622];
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.1e1;
    real _t0627 = 0.e0;
    vec4 _t0628 = [_t0624, _t0625, _t0626, _t0627];
    real _t0629 = 0.1e1;
    real _t062A = -0.1e1;
    real _t062B = 0.e0;
    real _t062C = -0.5e0;
    vec4 _t062D = [_t0629, _t062A, _t062B, _t062C];
    real _t062E = 0.e0;
    real _t062F = 0.e0;
    real _t0630 = 0.e0;
    real _t0631 = 0.1e1;
    vec4 _t0632 = [_t062E, _t062F, _t0630, _t0631];
    tensor[4,4] _t0633 = [_t0623, _t0628, _t062D, _t0632];
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = -0.1e1;
    real _t0637 = 0.e0;
    vec4 _t0638 = [_t0634, _t0635, _t0636, _t0637];
    real _t0639 = 0.e0;
    real _t063A = 0.1e1;
    real _t063B = 0.e0;
    real _t063C = 0.e0;
    vec4 _t063D = [_t0639, _t063A, _t063B, _t063C];
    real _t063E = 0.1e1;
    real _t063F = -0.1e1;
    real _t0640 = 0.e0;
    real _t0641 = -0.5e0;
    vec4 _t0642 = [_t063E, _t063F, _t0640, _t0641];
    real _t0643 = 0.e0;
    real _t0644 = 0.e0;
    real _t0645 = 0.e0;
    real _t0646 = 0.1e1;
    vec4 _t0647 = [_t0643, _t0644, _t0645, _t0646];
    tensor[4,4] _t0648 = [_t0638, _t063D, _t0642, _t0647];
    real _t0649 = 0.e0;
    real _t064A = -0.1e1;
    real _t064B = 0.e0;
    real _t064C = 0.e0;
    vec4 _t064D = [_t0649, _t064A, _t064B, _t064C];
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    real _t0650 = -0.1e1;
    real _t0651 = 0.e0;
    vec4 _t0652 = [_t064E, _t064F, _t0650, _t0651];
    real _t0653 = 0.1e1;
    real _t0654 = -0.1e1;
    real _t0655 = 0.e0;
    real _t0656 = -0.5e0;
    vec4 _t0657 = [_t0653, _t0654, _t0655, _t0656];
    real _t0658 = 0.e0;
    real _t0659 = 0.e0;
    real _t065A = 0.e0;
    real _t065B = 0.1e1;
    vec4 _t065C = [_t0658, _t0659, _t065A, _t065B];
    tensor[4,4] _t065D = [_t064D, _t0652, _t0657, _t065C];
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    real _t0660 = 0.1e1;
    real _t0661 = 0.e0;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    real _t0663 = 0.e0;
    real _t0664 = -0.1e1;
    real _t0665 = 0.e0;
    real _t0666 = 0.e0;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    real _t0668 = 0.1e1;
    real _t0669 = -0.1e1;
    real _t066A = 0.e0;
    real _t066B = -0.5e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    real _t0670 = 0.1e1;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    tensor[4,4] _t0672 = [_t0662, _t0667, _t066C, _t0671];
    tensor[4,4][6] _t0673 = {_t0609, _t061E, _t0633, _t0648, _t065D, _t0672};
    real _t0674 = 0.1e1;
    real _t0675 = 0.e0;
    real _t0676 = 0.e0;
    real _t0677 = 0.e0;
    vec4 _t0678 = [_t0674, _t0675, _t0676, _t0677];
    real _t0679 = 0.e0;
    real _t067A = 0.1e1;
    real _t067B = 0.e0;
    real _t067C = 0.e0;
    vec4 _t067D = [_t0679, _t067A, _t067B, _t067C];
    real _t067E = 0.e0;
    real _t067F = 0.e0;
    real _t0680 = 0.1e1;
    real _t0681 = -0.1e1;
    vec4 _t0682 = [_t067E, _t067F, _t0680, _t0681];
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = 0.e0;
    real _t0686 = 0.1e1;
    vec4 _t0687 = [_t0683, _t0684, _t0685, _t0686];
    tensor[4,4] _t0688 = [_t0678, _t067D, _t0682, _t0687];
    real _t0689 = 0.1e1;
    real _t068A = 0.e0;
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    vec4 _t068D = [_t0689, _t068A, _t068B, _t068C];
    real _t068E = 0.e0;
    real _t068F = 0.1e1;
    real _t0690 = 0.e0;
    real _t0691 = 0.e0;
    vec4 _t0692 = [_t068E, _t068F, _t0690, _t0691];
    real _t0693 = 0.e0;
    real _t0694 = 0.e0;
    real _t0695 = 0.1e1;
    real _t0696 = 0.e0;
    vec4 _t0697 = [_t0693, _t0694, _t0695, _t0696];
    real _t0698 = 0.e0;
    real _t0699 = 0.e0;
    real _t069A = 0.e0;
    real _t069B = 0.1e1;
    vec4 _t069C = [_t0698, _t0699, _t069A, _t069B];
    tensor[4,4] _t069D = [_t068D, _t0692, _t0697, _t069C];
    real _t069E = 0.e0;
    real _t069F = 0.1e1;
    real _t06A0 = 0.e0;
    real _t06A1 = 0.e0;
    vec4 _t06A2 = [_t069E, _t069F, _t06A0, _t06A1];
    real _t06A3 = 0.e0;
    real _t06A4 = 0.e0;
    real _t06A5 = 0.1e1;
    real _t06A6 = -0.1e1;
    vec4 _t06A7 = [_t06A3, _t06A4, _t06A5, _t06A6];
    real _t06A8 = 0.1e1;
    real _t06A9 = -0.1e1;
    real _t06AA = 0.e0;
    real _t06AB = -0.5e0;
    vec4 _t06AC = [_t06A8, _t06A9, _t06AA, _t06AB];
    real _t06AD = 0.e0;
    real _t06AE = 0.e0;
    real _t06AF = 0.e0;
    real _t06B0 = 0.1e1;
    vec4 _t06B1 = [_t06AD, _t06AE, _t06AF, _t06B0];
    tensor[4,4] _t06B2 = [_t06A2, _t06A7, _t06AC, _t06B1];
    real _t06B3 = 0.e0;
    real _t06B4 = 0.e0;
    real _t06B5 = -0.1e1;
    real _t06B6 = 0.1e1;
    vec4 _t06B7 = [_t06B3, _t06B4, _t06B5, _t06B6];
    real _t06B8 = 0.e0;
    real _t06B9 = 0.1e1;
    real _t06BA = 0.e0;
    real _t06BB = 0.e0;
    vec4 _t06BC = [_t06B8, _t06B9, _t06BA, _t06BB];
    real _t06BD = 0.1e1;
    real _t06BE = -0.1e1;
    real _t06BF = 0.e0;
    real _t06C0 = -0.5e0;
    vec4 _t06C1 = [_t06BD, _t06BE, _t06BF, _t06C0];
    real _t06C2 = 0.e0;
    real _t06C3 = 0.e0;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.1e1;
    vec4 _t06C6 = [_t06C2, _t06C3, _t06C4, _t06C5];
    tensor[4,4] _t06C7 = [_t06B7, _t06BC, _t06C1, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = -0.1e1;
    real _t06CA = 0.e0;
    real _t06CB = 0.e0;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = -0.1e1;
    real _t06D0 = 0.1e1;
    vec4 _t06D1 = [_t06CD, _t06CE, _t06CF, _t06D0];
    real _t06D2 = 0.1e1;
    real _t06D3 = -0.1e1;
    real _t06D4 = 0.e0;
    real _t06D5 = -0.5e0;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    real _t06D7 = 0.e0;
    real _t06D8 = 0.e0;
    real _t06D9 = 0.e0;
    real _t06DA = 0.1e1;
    vec4 _t06DB = [_t06D7, _t06D8, _t06D9, _t06DA];
    tensor[4,4] _t06DC = [_t06CC, _t06D1, _t06D6, _t06DB];
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    real _t06DF = 0.1e1;
    real _t06E0 = -0.1e1;
    vec4 _t06E1 = [_t06DD, _t06DE, _t06DF, _t06E0];
    real _t06E2 = 0.e0;
    real _t06E3 = -0.1e1;
    real _t06E4 = 0.e0;
    real _t06E5 = 0.e0;
    vec4 _t06E6 = [_t06E2, _t06E3, _t06E4, _t06E5];
    real _t06E7 = 0.1e1;
    real _t06E8 = -0.1e1;
    real _t06E9 = 0.e0;
    real _t06EA = -0.5e0;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    real _t06EC = 0.e0;
    real _t06ED = 0.e0;
    real _t06EE = 0.e0;
    real _t06EF = 0.1e1;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    tensor[4,4] _t06F1 = [_t06E1, _t06E6, _t06EB, _t06F0];
    tensor[4,4][6] _t06F2 = {_t0688, _t069D, _t06B2, _t06C7, _t06DC, _t06F1};
    real _t06F3 = 0.1e1;
    real _t06F4 = 0.e0;
    real _t06F5 = 0.1e1;
    real _t06F6 = 0.5e0;
    vec4 _t06F7 = [_t06F3, _t06F4, _t06F5, _t06F6];
    real _t06F8 = 0.1e1;
    real _t06F9 = 0.e0;
    real _t06FA = 0.e0;
    real _t06FB = 0.e0;
    vec4 _t06FC = [_t06F8, _t06F9, _t06FA, _t06FB];
    real _t06FD = 0.e0;
    real _t06FE = 0.1e1;
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = 0.e0;
    real _t0703 = 0.e0;
    real _t0704 = 0.e0;
    real _t0705 = 0.1e1;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    tensor[4,4] _t0707 = [_t06F7, _t06FC, _t0701, _t0706];
    real _t0708 = 0.1e1;
    real _t0709 = 0.e0;
    real _t070A = 0.1e1;
    real _t070B = 0.5e0;
    vec4 _t070C = [_t0708, _t0709, _t070A, _t070B];
    real _t070D = 0.1e1;
    real _t070E = 0.e0;
    real _t070F = 0.e0;
    real _t0710 = 0.e0;
    vec4 _t0711 = [_t070D, _t070E, _t070F, _t0710];
    real _t0712 = 0.e0;
    real _t0713 = 0.1e1;
    real _t0714 = 0.e0;
    real _t0715 = 0.1e1;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = 0.e0;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    real _t071A = 0.1e1;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    tensor[4,4] _t071C = [_t070C, _t0711, _t0716, _t071B];
    real _t071D = 0.1e1;
    real _t071E = 0.e0;
    real _t071F = 0.e0;
    real _t0720 = 0.e0;
    vec4 _t0721 = [_t071D, _t071E, _t071F, _t0720];
    real _t0722 = 0.e0;
    real _t0723 = 0.1e1;
    real _t0724 = 0.e0;
    real _t0725 = 0.e0;
    vec4 _t0726 = [_t0722, _t0723, _t0724, _t0725];
    real _t0727 = 0.e0;
    real _t0728 = 0.e0;
    real _t0729 = 0.1e1;
    real _t072A = 0.e0;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    real _t072C = 0.e0;
    real _t072D = 0.e0;
    real _t072E = 0.e0;
    real _t072F = 0.1e1;
    vec4 _t0730 = [_t072C, _t072D, _t072E, _t072F];
    tensor[4,4] _t0731 = [_t0721, _t0726, _t072B, _t0730];
    real _t0732 = 0.e0;
    real _t0733 = -0.1e1;
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.1e1;
    real _t0738 = 0.e0;
    real _t0739 = 0.e0;
    real _t073A = 0.e0;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    real _t073E = 0.1e1;
    real _t073F = 0.e0;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    real _t0741 = 0.e0;
    real _t0742 = 0.e0;
    real _t0743 = 0.e0;
    real _t0744 = 0.1e1;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    tensor[4,4] _t0746 = [_t0736, _t073B, _t0740, _t0745];
    real _t0747 = -0.1e1;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    real _t074A = 0.e0;
    vec4 _t074B = [_t0747, _t0748, _t0749, _t074A];
    real _t074C = 0.e0;
    real _t074D = -0.1e1;
    real _t074E = 0.e0;
    real _t074F = 0.e0;
    vec4 _t0750 = [_t074C, _t074D, _t074E, _t074F];
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    real _t0753 = 0.1e1;
    real _t0754 = 0.e0;
    vec4 _t0755 = [_t0751, _t0752, _t0753, _t0754];
    real _t0756 = 0.e0;
    real _t0757 = 0.e0;
    real _t0758 = 0.e0;
    real _t0759 = 0.1e1;
    vec4 _t075A = [_t0756, _t0757, _t0758, _t0759];
    tensor[4,4] _t075B = [_t074B, _t0750, _t0755, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.1e1;
    real _t075E = 0.e0;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = -0.1e1;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.e0;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    real _t0766 = 0.e0;
    real _t0767 = 0.e0;
    real _t0768 = 0.1e1;
    real _t0769 = 0.e0;
    vec4 _t076A = [_t0766, _t0767, _t0768, _t0769];
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.e0;
    real _t076E = 0.1e1;
    vec4 _t076F = [_t076B, _t076C, _t076D, _t076E];
    tensor[4,4] _t0770 = [_t0760, _t0765, _t076A, _t076F];
    tensor[4,4][6] _t0771 = {_t0707, _t071C, _t0731, _t0746, _t075B, _t0770};
    real _t0772 = 0.e0;
    real _t0773 = 0.1e1;
    real _t0774 = 0.1e1;
    real _t0775 = 0.5e0;
    vec4 _t0776 = [_t0772, _t0773, _t0774, _t0775];
    real _t0777 = 0.e0;
    real _t0778 = 0.1e1;
    real _t0779 = 0.e0;
    real _t077A = 0.e0;
    vec4 _t077B = [_t0777, _t0778, _t0779, _t077A];
    real _t077C = -0.1e1;
    real _t077D = 0.e0;
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    real _t0781 = 0.e0;
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    real _t0784 = 0.1e1;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    tensor[4,4] _t0786 = [_t0776, _t077B, _t0780, _t0785];
    real _t0787 = 0.e0;
    real _t0788 = 0.1e1;
    real _t0789 = 0.1e1;
    real _t078A = 0.5e0;
    vec4 _t078B = [_t0787, _t0788, _t0789, _t078A];
    real _t078C = 0.e0;
    real _t078D = 0.1e1;
    real _t078E = 0.e0;
    real _t078F = 0.e0;
    vec4 _t0790 = [_t078C, _t078D, _t078E, _t078F];
    real _t0791 = -0.1e1;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.1e1;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    real _t0796 = 0.e0;
    real _t0797 = 0.e0;
    real _t0798 = 0.e0;
    real _t0799 = 0.1e1;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    tensor[4,4] _t079B = [_t078B, _t0790, _t0795, _t079A];
    real _t079C = 0.e0;
    real _t079D = 0.1e1;
    real _t079E = 0.e0;
    real _t079F = 0.e0;
    vec4 _t07A0 = [_t079C, _t079D, _t079E, _t079F];
    real _t07A1 = -0.1e1;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.e0;
    real _t07A4 = 0.e0;
    vec4 _t07A5 = [_t07A1, _t07A2, _t07A3, _t07A4];
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.1e1;
    real _t07A9 = 0.e0;
    vec4 _t07AA = [_t07A6, _t07A7, _t07A8, _t07A9];
    real _t07AB = 0.e0;
    real _t07AC = 0.e0;
    real _t07AD = 0.e0;
    real _t07AE = 0.1e1;
    vec4 _t07AF = [_t07AB, _t07AC, _t07AD, _t07AE];
    tensor[4,4] _t07B0 = [_t07A0, _t07A5, _t07AA, _t07AF];
    real _t07B1 = 0.1e1;
    real _t07B2 = 0.e0;
    real _t07B3 = 0.e0;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = 0.1e1;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.e0;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.1e1;
    real _t07BE = 0.e0;
    vec4 _t07BF = [_t07BB, _t07BC, _t07BD, _t07BE];
    real _t07C0 = 0.e0;
    real _t07C1 = 0.e0;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.1e1;
    vec4 _t07C4 = [_t07C0, _t07C1, _t07C2, _t07C3];
    tensor[4,4] _t07C5 = [_t07B5, _t07BA, _t07BF, _t07C4];
    real _t07C6 = 0.e0;
    real _t07C7 = -0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.1e1;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.e0;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.1e1;
    real _t07D3 = 0.e0;
    vec4 _t07D4 = [_t07D0, _t07D1, _t07D2, _t07D3];
    real _t07D5 = 0.e0;
    real _t07D6 = 0.e0;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.1e1;
    vec4 _t07D9 = [_t07D5, _t07D6, _t07D7, _t07D8];
    tensor[4,4] _t07DA = [_t07CA, _t07CF, _t07D4, _t07D9];
    real _t07DB = -0.1e1;
    real _t07DC = 0.e0;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = -0.1e1;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.e0;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    real _t07E5 = 0.e0;
    real _t07E6 = 0.e0;
    real _t07E7 = 0.1e1;
    real _t07E8 = 0.e0;
    vec4 _t07E9 = [_t07E5, _t07E6, _t07E7, _t07E8];
    real _t07EA = 0.e0;
    real _t07EB = 0.e0;
    real _t07EC = 0.e0;
    real _t07ED = 0.1e1;
    vec4 _t07EE = [_t07EA, _t07EB, _t07EC, _t07ED];
    tensor[4,4] _t07EF = [_t07DF, _t07E4, _t07E9, _t07EE];
    tensor[4,4][6] _t07F0 = {_t0786, _t079B, _t07B0, _t07C5, _t07DA, _t07EF};
    real _t07F1 = -0.1e1;
    real _t07F2 = 0.e0;
    real _t07F3 = 0.1e1;
    real _t07F4 = 0.5e0;
    vec4 _t07F5 = [_t07F1, _t07F2, _t07F3, _t07F4];
    real _t07F6 = -0.1e1;
    real _t07F7 = 0.e0;
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    vec4 _t07FA = [_t07F6, _t07F7, _t07F8, _t07F9];
    real _t07FB = 0.e0;
    real _t07FC = -0.1e1;
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    vec4 _t07FF = [_t07FB, _t07FC, _t07FD, _t07FE];
    real _t0800 = 0.e0;
    real _t0801 = 0.e0;
    real _t0802 = 0.e0;
    real _t0803 = 0.1e1;
    vec4 _t0804 = [_t0800, _t0801, _t0802, _t0803];
    tensor[4,4] _t0805 = [_t07F5, _t07FA, _t07FF, _t0804];
    real _t0806 = -0.1e1;
    real _t0807 = 0.e0;
    real _t0808 = 0.1e1;
    real _t0809 = 0.5e0;
    vec4 _t080A = [_t0806, _t0807, _t0808, _t0809];
    real _t080B = -0.1e1;
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    real _t080E = 0.e0;
    vec4 _t080F = [_t080B, _t080C, _t080D, _t080E];
    real _t0810 = 0.e0;
    real _t0811 = -0.1e1;
    real _t0812 = 0.e0;
    real _t0813 = 0.1e1;
    vec4 _t0814 = [_t0810, _t0811, _t0812, _t0813];
    real _t0815 = 0.e0;
    real _t0816 = 0.e0;
    real _t0817 = 0.e0;
    real _t0818 = 0.1e1;
    vec4 _t0819 = [_t0815, _t0816, _t0817, _t0818];
    tensor[4,4] _t081A = [_t080A, _t080F, _t0814, _t0819];
    real _t081B = -0.1e1;
    real _t081C = 0.e0;
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    vec4 _t081F = [_t081B, _t081C, _t081D, _t081E];
    real _t0820 = 0.e0;
    real _t0821 = -0.1e1;
    real _t0822 = 0.e0;
    real _t0823 = 0.e0;
    vec4 _t0824 = [_t0820, _t0821, _t0822, _t0823];
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.1e1;
    real _t0828 = 0.e0;
    vec4 _t0829 = [_t0825, _t0826, _t0827, _t0828];
    real _t082A = 0.e0;
    real _t082B = 0.e0;
    real _t082C = 0.e0;
    real _t082D = 0.1e1;
    vec4 _t082E = [_t082A, _t082B, _t082C, _t082D];
    tensor[4,4] _t082F = [_t081F, _t0824, _t0829, _t082E];
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = -0.1e1;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    real _t0838 = 0.e0;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    real _t083C = 0.1e1;
    real _t083D = 0.e0;
    vec4 _t083E = [_t083A, _t083B, _t083C, _t083D];
    real _t083F = 0.e0;
    real _t0840 = 0.e0;
    real _t0841 = 0.e0;
    real _t0842 = 0.1e1;
    vec4 _t0843 = [_t083F, _t0840, _t0841, _t0842];
    tensor[4,4] _t0844 = [_t0834, _t0839, _t083E, _t0843];
    real _t0845 = 0.1e1;
    real _t0846 = 0.e0;
    real _t0847 = 0.e0;
    real _t0848 = 0.e0;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = 0.e0;
    real _t084B = 0.1e1;
    real _t084C = 0.e0;
    real _t084D = 0.e0;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.1e1;
    real _t0852 = 0.e0;
    vec4 _t0853 = [_t084F, _t0850, _t0851, _t0852];
    real _t0854 = 0.e0;
    real _t0855 = 0.e0;
    real _t0856 = 0.e0;
    real _t0857 = 0.1e1;
    vec4 _t0858 = [_t0854, _t0855, _t0856, _t0857];
    tensor[4,4] _t0859 = [_t0849, _t084E, _t0853, _t0858];
    real _t085A = 0.e0;
    real _t085B = -0.1e1;
    real _t085C = 0.e0;
    real _t085D = 0.e0;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.e0;
    real _t0865 = 0.e0;
    real _t0866 = 0.1e1;
    real _t0867 = 0.e0;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    real _t086C = 0.1e1;
    vec4 _t086D = [_t0869, _t086A, _t086B, _t086C];
    tensor[4,4] _t086E = [_t085E, _t0863, _t0868, _t086D];
    tensor[4,4][6] _t086F = {_t0805, _t081A, _t082F, _t0844, _t0859, _t086E};
    real _t0870 = 0.e0;
    real _t0871 = -0.1e1;
    real _t0872 = 0.1e1;
    real _t0873 = 0.5e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = 0.e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.e0;
    real _t0878 = 0.e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.1e1;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    real _t087D = 0.e0;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    real _t087F = 0.e0;
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.1e1;
    vec4 _t0883 = [_t087F, _t0880, _t0881, _t0882];
    tensor[4,4] _t0884 = [_t0874, _t0879, _t087E, _t0883];
    real _t0885 = 0.e0;
    real _t0886 = -0.1e1;
    real _t0887 = 0.1e1;
    real _t0888 = 0.5e0;
    vec4 _t0889 = [_t0885, _t0886, _t0887, _t0888];
    real _t088A = 0.e0;
    real _t088B = -0.1e1;
    real _t088C = 0.e0;
    real _t088D = 0.e0;
    vec4 _t088E = [_t088A, _t088B, _t088C, _t088D];
    real _t088F = 0.1e1;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    real _t0894 = 0.e0;
    real _t0895 = 0.e0;
    real _t0896 = 0.e0;
    real _t0897 = 0.1e1;
    vec4 _t0898 = [_t0894, _t0895, _t0896, _t0897];
    tensor[4,4] _t0899 = [_t0889, _t088E, _t0893, _t0898];
    real _t089A = 0.e0;
    real _t089B = -0.1e1;
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    vec4 _t089E = [_t089A, _t089B, _t089C, _t089D];
    real _t089F = 0.1e1;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    real _t08A2 = 0.e0;
    vec4 _t08A3 = [_t089F, _t08A0, _t08A1, _t08A2];
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.1e1;
    real _t08A7 = 0.e0;
    vec4 _t08A8 = [_t08A4, _t08A5, _t08A6, _t08A7];
    real _t08A9 = 0.e0;
    real _t08AA = 0.e0;
    real _t08AB = 0.e0;
    real _t08AC = 0.1e1;
    vec4 _t08AD = [_t08A9, _t08AA, _t08AB, _t08AC];
    tensor[4,4] _t08AE = [_t089E, _t08A3, _t08A8, _t08AD];
    real _t08AF = -0.1e1;
    real _t08B0 = 0.e0;
    real _t08B1 = 0.e0;
    real _t08B2 = 0.e0;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.e0;
    real _t08B5 = -0.1e1;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    real _t08BB = 0.1e1;
    real _t08BC = 0.e0;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.1e1;
    vec4 _t08C2 = [_t08BE, _t08BF, _t08C0, _t08C1];
    tensor[4,4] _t08C3 = [_t08B3, _t08B8, _t08BD, _t08C2];
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    real _t08C6 = 0.e0;
    real _t08C7 = 0.e0;
    vec4 _t08C8 = [_t08C4, _t08C5, _t08C6, _t08C7];
    real _t08C9 = -0.1e1;
    real _t08CA = 0.e0;
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.e0;
    real _t08CF = 0.e0;
    real _t08D0 = 0.1e1;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    tensor[4,4] _t08D8 = [_t08C8, _t08CD, _t08D2, _t08D7];
    real _t08D9 = 0.1e1;
    real _t08DA = 0.e0;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    vec4 _t08DD = [_t08D9, _t08DA, _t08DB, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.1e1;
    real _t08E0 = 0.e0;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.e0;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.1e1;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.e0;
    real _t08EA = 0.e0;
    real _t08EB = 0.1e1;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    tensor[4,4] _t08ED = [_t08DD, _t08E2, _t08E7, _t08EC];
    tensor[4,4][6] _t08EE = {_t0884, _t0899, _t08AE, _t08C3, _t08D8, _t08ED};
    tensor[4,4][6][6] _t08EF = {_t0673, _t06F2, _t0771, _t07F0, _t086F, _t08EE};
    real _t08F0 = time05E1[1];
    int _t08F1 = prim $r2i01B7 (_t08F0);
    tensor[4,4][6] _t08F2 = prim $sub01C0<tensor[4,4][6]; %6> (_t08EF, _t08F1);
    real _t08F3 = time05E1[1];
    int _t08F4 = prim $r2i01B7 (_t08F3);
    int[2] _t08F5 = func nextCell405E5 (_t08F4, cellId05DE, mesh05DD);
    int _t08F6 = 1;
    int _t08F7 = prim $sub01C0<int; %2> (_t08F5, _t08F6);
    tensor[4,4] _t08F8 = prim $sub01C0<tensor[4,4]; %6> (_t08F2, _t08F7);
    string _t08F9 = "\n";
    print (_t05EA, _t05EC, _t05ED, _t05F2, _t05F3, _t05F4, _t08F8, _t08F9);
    real _t08FA = time05E1[1];
    int _t08FB = prim $r2i01B7 (_t08FA);
    int[2] _t08FC = func nextCell405E5 (_t08FB, cellId05DE, mesh05DD);
    int _t08FD = 0;
    int _t08FE = prim $sub01C0<int; %2> (_t08FC, _t08FD);
    real _t08FF = 0.1e1;
    real _t0900 = 0.e0;
    real _t0901 = 0.e0;
    real _t0902 = 0.e0;
    vec4 _t0903 = [_t08FF, _t0900, _t0901, _t0902];
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    real _t0906 = 0.e0;
    real _t0907 = 0.e0;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.1e1;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    real _t0911 = 0.1e1;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    tensor[4,4] _t0913 = [_t0903, _t0908, _t090D, _t0912];
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    real _t0916 = 0.e0;
    real _t0917 = 0.e0;
    vec4 _t0918 = [_t0914, _t0915, _t0916, _t0917];
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    real _t091B = 0.e0;
    real _t091C = 0.e0;
    vec4 _t091D = [_t0919, _t091A, _t091B, _t091C];
    real _t091E = 0.e0;
    real _t091F = 0.e0;
    real _t0920 = 0.1e1;
    real _t0921 = 0.1e1;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.e0;
    real _t0924 = 0.e0;
    real _t0925 = 0.e0;
    real _t0926 = 0.1e1;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    tensor[4,4] _t0928 = [_t0918, _t091D, _t0922, _t0927];
    real _t0929 = 0.e0;
    real _t092A = 0.1e1;
    real _t092B = 0.e0;
    real _t092C = 0.e0;
    vec4 _t092D = [_t0929, _t092A, _t092B, _t092C];
    real _t092E = 0.e0;
    real _t092F = 0.e0;
    real _t0930 = 0.1e1;
    real _t0931 = 0.e0;
    vec4 _t0932 = [_t092E, _t092F, _t0930, _t0931];
    real _t0933 = 0.1e1;
    real _t0934 = -0.1e1;
    real _t0935 = 0.e0;
    real _t0936 = -0.5e0;
    vec4 _t0937 = [_t0933, _t0934, _t0935, _t0936];
    real _t0938 = 0.e0;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.1e1;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    tensor[4,4] _t093D = [_t092D, _t0932, _t0937, _t093C];
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = -0.1e1;
    real _t0941 = 0.e0;
    vec4 _t0942 = [_t093E, _t093F, _t0940, _t0941];
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    vec4 _t0947 = [_t0943, _t0944, _t0945, _t0946];
    real _t0948 = 0.1e1;
    real _t0949 = -0.1e1;
    real _t094A = 0.e0;
    real _t094B = -0.5e0;
    vec4 _t094C = [_t0948, _t0949, _t094A, _t094B];
    real _t094D = 0.e0;
    real _t094E = 0.e0;
    real _t094F = 0.e0;
    real _t0950 = 0.1e1;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    tensor[4,4] _t0952 = [_t0942, _t0947, _t094C, _t0951];
    real _t0953 = 0.e0;
    real _t0954 = -0.1e1;
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    vec4 _t0957 = [_t0953, _t0954, _t0955, _t0956];
    real _t0958 = 0.e0;
    real _t0959 = 0.e0;
    real _t095A = -0.1e1;
    real _t095B = 0.e0;
    vec4 _t095C = [_t0958, _t0959, _t095A, _t095B];
    real _t095D = 0.1e1;
    real _t095E = -0.1e1;
    real _t095F = 0.e0;
    real _t0960 = -0.5e0;
    vec4 _t0961 = [_t095D, _t095E, _t095F, _t0960];
    real _t0962 = 0.e0;
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    tensor[4,4] _t0967 = [_t0957, _t095C, _t0961, _t0966];
    real _t0968 = 0.e0;
    real _t0969 = 0.e0;
    real _t096A = 0.1e1;
    real _t096B = 0.e0;
    vec4 _t096C = [_t0968, _t0969, _t096A, _t096B];
    real _t096D = 0.e0;
    real _t096E = -0.1e1;
    real _t096F = 0.e0;
    real _t0970 = 0.e0;
    vec4 _t0971 = [_t096D, _t096E, _t096F, _t0970];
    real _t0972 = 0.1e1;
    real _t0973 = -0.1e1;
    real _t0974 = 0.e0;
    real _t0975 = -0.5e0;
    vec4 _t0976 = [_t0972, _t0973, _t0974, _t0975];
    real _t0977 = 0.e0;
    real _t0978 = 0.e0;
    real _t0979 = 0.e0;
    real _t097A = 0.1e1;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    tensor[4,4] _t097C = [_t096C, _t0971, _t0976, _t097B];
    tensor[4,4][6] _t097D = {_t0913, _t0928, _t093D, _t0952, _t0967, _t097C};
    real _t097E = 0.1e1;
    real _t097F = 0.e0;
    real _t0980 = 0.e0;
    real _t0981 = 0.e0;
    vec4 _t0982 = [_t097E, _t097F, _t0980, _t0981];
    real _t0983 = 0.e0;
    real _t0984 = 0.1e1;
    real _t0985 = 0.e0;
    real _t0986 = 0.e0;
    vec4 _t0987 = [_t0983, _t0984, _t0985, _t0986];
    real _t0988 = 0.e0;
    real _t0989 = 0.e0;
    real _t098A = 0.1e1;
    real _t098B = -0.1e1;
    vec4 _t098C = [_t0988, _t0989, _t098A, _t098B];
    real _t098D = 0.e0;
    real _t098E = 0.e0;
    real _t098F = 0.e0;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    tensor[4,4] _t0992 = [_t0982, _t0987, _t098C, _t0991];
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    real _t0996 = 0.e0;
    vec4 _t0997 = [_t0993, _t0994, _t0995, _t0996];
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    real _t099B = 0.e0;
    vec4 _t099C = [_t0998, _t0999, _t099A, _t099B];
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    real _t09A0 = 0.e0;
    vec4 _t09A1 = [_t099D, _t099E, _t099F, _t09A0];
    real _t09A2 = 0.e0;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.1e1;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    tensor[4,4] _t09A7 = [_t0997, _t099C, _t09A1, _t09A6];
    real _t09A8 = 0.e0;
    real _t09A9 = 0.1e1;
    real _t09AA = 0.e0;
    real _t09AB = 0.e0;
    vec4 _t09AC = [_t09A8, _t09A9, _t09AA, _t09AB];
    real _t09AD = 0.e0;
    real _t09AE = 0.e0;
    real _t09AF = 0.1e1;
    real _t09B0 = -0.1e1;
    vec4 _t09B1 = [_t09AD, _t09AE, _t09AF, _t09B0];
    real _t09B2 = 0.1e1;
    real _t09B3 = -0.1e1;
    real _t09B4 = 0.e0;
    real _t09B5 = -0.5e0;
    vec4 _t09B6 = [_t09B2, _t09B3, _t09B4, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.e0;
    real _t09B9 = 0.e0;
    real _t09BA = 0.1e1;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    tensor[4,4] _t09BC = [_t09AC, _t09B1, _t09B6, _t09BB];
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = -0.1e1;
    real _t09C0 = 0.1e1;
    vec4 _t09C1 = [_t09BD, _t09BE, _t09BF, _t09C0];
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.e0;
    vec4 _t09C6 = [_t09C2, _t09C3, _t09C4, _t09C5];
    real _t09C7 = 0.1e1;
    real _t09C8 = -0.1e1;
    real _t09C9 = 0.e0;
    real _t09CA = -0.5e0;
    vec4 _t09CB = [_t09C7, _t09C8, _t09C9, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.e0;
    real _t09CE = 0.e0;
    real _t09CF = 0.1e1;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    tensor[4,4] _t09D1 = [_t09C1, _t09C6, _t09CB, _t09D0];
    real _t09D2 = 0.e0;
    real _t09D3 = -0.1e1;
    real _t09D4 = 0.e0;
    real _t09D5 = 0.e0;
    vec4 _t09D6 = [_t09D2, _t09D3, _t09D4, _t09D5];
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = -0.1e1;
    real _t09DA = 0.1e1;
    vec4 _t09DB = [_t09D7, _t09D8, _t09D9, _t09DA];
    real _t09DC = 0.1e1;
    real _t09DD = -0.1e1;
    real _t09DE = 0.e0;
    real _t09DF = -0.5e0;
    vec4 _t09E0 = [_t09DC, _t09DD, _t09DE, _t09DF];
    real _t09E1 = 0.e0;
    real _t09E2 = 0.e0;
    real _t09E3 = 0.e0;
    real _t09E4 = 0.1e1;
    vec4 _t09E5 = [_t09E1, _t09E2, _t09E3, _t09E4];
    tensor[4,4] _t09E6 = [_t09D6, _t09DB, _t09E0, _t09E5];
    real _t09E7 = 0.e0;
    real _t09E8 = 0.e0;
    real _t09E9 = 0.1e1;
    real _t09EA = -0.1e1;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.1e1;
    real _t09EE = 0.e0;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.1e1;
    real _t09F2 = -0.1e1;
    real _t09F3 = 0.e0;
    real _t09F4 = -0.5e0;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    real _t09F6 = 0.e0;
    real _t09F7 = 0.e0;
    real _t09F8 = 0.e0;
    real _t09F9 = 0.1e1;
    vec4 _t09FA = [_t09F6, _t09F7, _t09F8, _t09F9];
    tensor[4,4] _t09FB = [_t09EB, _t09F0, _t09F5, _t09FA];
    tensor[4,4][6] _t09FC = {_t0992, _t09A7, _t09BC, _t09D1, _t09E6, _t09FB};
    real _t09FD = 0.1e1;
    real _t09FE = 0.e0;
    real _t09FF = 0.1e1;
    real _t0A00 = 0.5e0;
    vec4 _t0A01 = [_t09FD, _t09FE, _t09FF, _t0A00];
    real _t0A02 = 0.1e1;
    real _t0A03 = 0.e0;
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    vec4 _t0A06 = [_t0A02, _t0A03, _t0A04, _t0A05];
    real _t0A07 = 0.e0;
    real _t0A08 = 0.1e1;
    real _t0A09 = 0.e0;
    real _t0A0A = 0.e0;
    vec4 _t0A0B = [_t0A07, _t0A08, _t0A09, _t0A0A];
    real _t0A0C = 0.e0;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.1e1;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    tensor[4,4] _t0A11 = [_t0A01, _t0A06, _t0A0B, _t0A10];
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.1e1;
    real _t0A15 = 0.5e0;
    vec4 _t0A16 = [_t0A12, _t0A13, _t0A14, _t0A15];
    real _t0A17 = 0.1e1;
    real _t0A18 = 0.e0;
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    vec4 _t0A1B = [_t0A17, _t0A18, _t0A19, _t0A1A];
    real _t0A1C = 0.e0;
    real _t0A1D = 0.1e1;
    real _t0A1E = 0.e0;
    real _t0A1F = 0.1e1;
    vec4 _t0A20 = [_t0A1C, _t0A1D, _t0A1E, _t0A1F];
    real _t0A21 = 0.e0;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.1e1;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    tensor[4,4] _t0A26 = [_t0A16, _t0A1B, _t0A20, _t0A25];
    real _t0A27 = 0.1e1;
    real _t0A28 = 0.e0;
    real _t0A29 = 0.e0;
    real _t0A2A = 0.e0;
    vec4 _t0A2B = [_t0A27, _t0A28, _t0A29, _t0A2A];
    real _t0A2C = 0.e0;
    real _t0A2D = 0.1e1;
    real _t0A2E = 0.e0;
    real _t0A2F = 0.e0;
    vec4 _t0A30 = [_t0A2C, _t0A2D, _t0A2E, _t0A2F];
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    real _t0A34 = 0.e0;
    vec4 _t0A35 = [_t0A31, _t0A32, _t0A33, _t0A34];
    real _t0A36 = 0.e0;
    real _t0A37 = 0.e0;
    real _t0A38 = 0.e0;
    real _t0A39 = 0.1e1;
    vec4 _t0A3A = [_t0A36, _t0A37, _t0A38, _t0A39];
    tensor[4,4] _t0A3B = [_t0A2B, _t0A30, _t0A35, _t0A3A];
    real _t0A3C = 0.e0;
    real _t0A3D = -0.1e1;
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.1e1;
    real _t0A42 = 0.e0;
    real _t0A43 = 0.e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.1e1;
    real _t0A49 = 0.e0;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    real _t0A4B = 0.e0;
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    vec4 _t0A4F = [_t0A4B, _t0A4C, _t0A4D, _t0A4E];
    tensor[4,4] _t0A50 = [_t0A40, _t0A45, _t0A4A, _t0A4F];
    real _t0A51 = -0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = -0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.1e1;
    real _t0A5E = 0.e0;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    real _t0A60 = 0.e0;
    real _t0A61 = 0.e0;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.1e1;
    vec4 _t0A64 = [_t0A60, _t0A61, _t0A62, _t0A63];
    tensor[4,4] _t0A65 = [_t0A55, _t0A5A, _t0A5F, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.1e1;
    real _t0A68 = 0.e0;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = -0.1e1;
    real _t0A6C = 0.e0;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.1e1;
    real _t0A73 = 0.e0;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    real _t0A75 = 0.e0;
    real _t0A76 = 0.e0;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.1e1;
    vec4 _t0A79 = [_t0A75, _t0A76, _t0A77, _t0A78];
    tensor[4,4] _t0A7A = [_t0A6A, _t0A6F, _t0A74, _t0A79];
    tensor[4,4][6] _t0A7B = {_t0A11, _t0A26, _t0A3B, _t0A50, _t0A65, _t0A7A};
    real _t0A7C = 0.e0;
    real _t0A7D = 0.1e1;
    real _t0A7E = 0.1e1;
    real _t0A7F = 0.5e0;
    vec4 _t0A80 = [_t0A7C, _t0A7D, _t0A7E, _t0A7F];
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    real _t0A84 = 0.e0;
    vec4 _t0A85 = [_t0A81, _t0A82, _t0A83, _t0A84];
    real _t0A86 = -0.1e1;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.e0;
    real _t0A89 = 0.e0;
    vec4 _t0A8A = [_t0A86, _t0A87, _t0A88, _t0A89];
    real _t0A8B = 0.e0;
    real _t0A8C = 0.e0;
    real _t0A8D = 0.e0;
    real _t0A8E = 0.1e1;
    vec4 _t0A8F = [_t0A8B, _t0A8C, _t0A8D, _t0A8E];
    tensor[4,4] _t0A90 = [_t0A80, _t0A85, _t0A8A, _t0A8F];
    real _t0A91 = 0.e0;
    real _t0A92 = 0.1e1;
    real _t0A93 = 0.1e1;
    real _t0A94 = 0.5e0;
    vec4 _t0A95 = [_t0A91, _t0A92, _t0A93, _t0A94];
    real _t0A96 = 0.e0;
    real _t0A97 = 0.1e1;
    real _t0A98 = 0.e0;
    real _t0A99 = 0.e0;
    vec4 _t0A9A = [_t0A96, _t0A97, _t0A98, _t0A99];
    real _t0A9B = -0.1e1;
    real _t0A9C = 0.e0;
    real _t0A9D = 0.e0;
    real _t0A9E = 0.1e1;
    vec4 _t0A9F = [_t0A9B, _t0A9C, _t0A9D, _t0A9E];
    real _t0AA0 = 0.e0;
    real _t0AA1 = 0.e0;
    real _t0AA2 = 0.e0;
    real _t0AA3 = 0.1e1;
    vec4 _t0AA4 = [_t0AA0, _t0AA1, _t0AA2, _t0AA3];
    tensor[4,4] _t0AA5 = [_t0A95, _t0A9A, _t0A9F, _t0AA4];
    real _t0AA6 = 0.e0;
    real _t0AA7 = 0.1e1;
    real _t0AA8 = 0.e0;
    real _t0AA9 = 0.e0;
    vec4 _t0AAA = [_t0AA6, _t0AA7, _t0AA8, _t0AA9];
    real _t0AAB = -0.1e1;
    real _t0AAC = 0.e0;
    real _t0AAD = 0.e0;
    real _t0AAE = 0.e0;
    vec4 _t0AAF = [_t0AAB, _t0AAC, _t0AAD, _t0AAE];
    real _t0AB0 = 0.e0;
    real _t0AB1 = 0.e0;
    real _t0AB2 = 0.1e1;
    real _t0AB3 = 0.e0;
    vec4 _t0AB4 = [_t0AB0, _t0AB1, _t0AB2, _t0AB3];
    real _t0AB5 = 0.e0;
    real _t0AB6 = 0.e0;
    real _t0AB7 = 0.e0;
    real _t0AB8 = 0.1e1;
    vec4 _t0AB9 = [_t0AB5, _t0AB6, _t0AB7, _t0AB8];
    tensor[4,4] _t0ABA = [_t0AAA, _t0AAF, _t0AB4, _t0AB9];
    real _t0ABB = 0.1e1;
    real _t0ABC = 0.e0;
    real _t0ABD = 0.e0;
    real _t0ABE = 0.e0;
    vec4 _t0ABF = [_t0ABB, _t0ABC, _t0ABD, _t0ABE];
    real _t0AC0 = 0.e0;
    real _t0AC1 = 0.1e1;
    real _t0AC2 = 0.e0;
    real _t0AC3 = 0.e0;
    vec4 _t0AC4 = [_t0AC0, _t0AC1, _t0AC2, _t0AC3];
    real _t0AC5 = 0.e0;
    real _t0AC6 = 0.e0;
    real _t0AC7 = 0.1e1;
    real _t0AC8 = 0.e0;
    vec4 _t0AC9 = [_t0AC5, _t0AC6, _t0AC7, _t0AC8];
    real _t0ACA = 0.e0;
    real _t0ACB = 0.e0;
    real _t0ACC = 0.e0;
    real _t0ACD = 0.1e1;
    vec4 _t0ACE = [_t0ACA, _t0ACB, _t0ACC, _t0ACD];
    tensor[4,4] _t0ACF = [_t0ABF, _t0AC4, _t0AC9, _t0ACE];
    real _t0AD0 = 0.e0;
    real _t0AD1 = -0.1e1;
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.e0;
    vec4 _t0AD4 = [_t0AD0, _t0AD1, _t0AD2, _t0AD3];
    real _t0AD5 = 0.1e1;
    real _t0AD6 = 0.e0;
    real _t0AD7 = 0.e0;
    real _t0AD8 = 0.e0;
    vec4 _t0AD9 = [_t0AD5, _t0AD6, _t0AD7, _t0AD8];
    real _t0ADA = 0.e0;
    real _t0ADB = 0.e0;
    real _t0ADC = 0.1e1;
    real _t0ADD = 0.e0;
    vec4 _t0ADE = [_t0ADA, _t0ADB, _t0ADC, _t0ADD];
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.e0;
    real _t0AE1 = 0.e0;
    real _t0AE2 = 0.1e1;
    vec4 _t0AE3 = [_t0ADF, _t0AE0, _t0AE1, _t0AE2];
    tensor[4,4] _t0AE4 = [_t0AD4, _t0AD9, _t0ADE, _t0AE3];
    real _t0AE5 = -0.1e1;
    real _t0AE6 = 0.e0;
    real _t0AE7 = 0.e0;
    real _t0AE8 = 0.e0;
    vec4 _t0AE9 = [_t0AE5, _t0AE6, _t0AE7, _t0AE8];
    real _t0AEA = 0.e0;
    real _t0AEB = -0.1e1;
    real _t0AEC = 0.e0;
    real _t0AED = 0.e0;
    vec4 _t0AEE = [_t0AEA, _t0AEB, _t0AEC, _t0AED];
    real _t0AEF = 0.e0;
    real _t0AF0 = 0.e0;
    real _t0AF1 = 0.1e1;
    real _t0AF2 = 0.e0;
    vec4 _t0AF3 = [_t0AEF, _t0AF0, _t0AF1, _t0AF2];
    real _t0AF4 = 0.e0;
    real _t0AF5 = 0.e0;
    real _t0AF6 = 0.e0;
    real _t0AF7 = 0.1e1;
    vec4 _t0AF8 = [_t0AF4, _t0AF5, _t0AF6, _t0AF7];
    tensor[4,4] _t0AF9 = [_t0AE9, _t0AEE, _t0AF3, _t0AF8];
    tensor[4,4][6] _t0AFA = {_t0A90, _t0AA5, _t0ABA, _t0ACF, _t0AE4, _t0AF9};
    real _t0AFB = -0.1e1;
    real _t0AFC = 0.e0;
    real _t0AFD = 0.1e1;
    real _t0AFE = 0.5e0;
    vec4 _t0AFF = [_t0AFB, _t0AFC, _t0AFD, _t0AFE];
    real _t0B00 = -0.1e1;
    real _t0B01 = 0.e0;
    real _t0B02 = 0.e0;
    real _t0B03 = 0.e0;
    vec4 _t0B04 = [_t0B00, _t0B01, _t0B02, _t0B03];
    real _t0B05 = 0.e0;
    real _t0B06 = -0.1e1;
    real _t0B07 = 0.e0;
    real _t0B08 = 0.e0;
    vec4 _t0B09 = [_t0B05, _t0B06, _t0B07, _t0B08];
    real _t0B0A = 0.e0;
    real _t0B0B = 0.e0;
    real _t0B0C = 0.e0;
    real _t0B0D = 0.1e1;
    vec4 _t0B0E = [_t0B0A, _t0B0B, _t0B0C, _t0B0D];
    tensor[4,4] _t0B0F = [_t0AFF, _t0B04, _t0B09, _t0B0E];
    real _t0B10 = -0.1e1;
    real _t0B11 = 0.e0;
    real _t0B12 = 0.1e1;
    real _t0B13 = 0.5e0;
    vec4 _t0B14 = [_t0B10, _t0B11, _t0B12, _t0B13];
    real _t0B15 = -0.1e1;
    real _t0B16 = 0.e0;
    real _t0B17 = 0.e0;
    real _t0B18 = 0.e0;
    vec4 _t0B19 = [_t0B15, _t0B16, _t0B17, _t0B18];
    real _t0B1A = 0.e0;
    real _t0B1B = -0.1e1;
    real _t0B1C = 0.e0;
    real _t0B1D = 0.1e1;
    vec4 _t0B1E = [_t0B1A, _t0B1B, _t0B1C, _t0B1D];
    real _t0B1F = 0.e0;
    real _t0B20 = 0.e0;
    real _t0B21 = 0.e0;
    real _t0B22 = 0.1e1;
    vec4 _t0B23 = [_t0B1F, _t0B20, _t0B21, _t0B22];
    tensor[4,4] _t0B24 = [_t0B14, _t0B19, _t0B1E, _t0B23];
    real _t0B25 = -0.1e1;
    real _t0B26 = 0.e0;
    real _t0B27 = 0.e0;
    real _t0B28 = 0.e0;
    vec4 _t0B29 = [_t0B25, _t0B26, _t0B27, _t0B28];
    real _t0B2A = 0.e0;
    real _t0B2B = -0.1e1;
    real _t0B2C = 0.e0;
    real _t0B2D = 0.e0;
    vec4 _t0B2E = [_t0B2A, _t0B2B, _t0B2C, _t0B2D];
    real _t0B2F = 0.e0;
    real _t0B30 = 0.e0;
    real _t0B31 = 0.1e1;
    real _t0B32 = 0.e0;
    vec4 _t0B33 = [_t0B2F, _t0B30, _t0B31, _t0B32];
    real _t0B34 = 0.e0;
    real _t0B35 = 0.e0;
    real _t0B36 = 0.e0;
    real _t0B37 = 0.1e1;
    vec4 _t0B38 = [_t0B34, _t0B35, _t0B36, _t0B37];
    tensor[4,4] _t0B39 = [_t0B29, _t0B2E, _t0B33, _t0B38];
    real _t0B3A = 0.e0;
    real _t0B3B = 0.1e1;
    real _t0B3C = 0.e0;
    real _t0B3D = 0.e0;
    vec4 _t0B3E = [_t0B3A, _t0B3B, _t0B3C, _t0B3D];
    real _t0B3F = -0.1e1;
    real _t0B40 = 0.e0;
    real _t0B41 = 0.e0;
    real _t0B42 = 0.e0;
    vec4 _t0B43 = [_t0B3F, _t0B40, _t0B41, _t0B42];
    real _t0B44 = 0.e0;
    real _t0B45 = 0.e0;
    real _t0B46 = 0.1e1;
    real _t0B47 = 0.e0;
    vec4 _t0B48 = [_t0B44, _t0B45, _t0B46, _t0B47];
    real _t0B49 = 0.e0;
    real _t0B4A = 0.e0;
    real _t0B4B = 0.e0;
    real _t0B4C = 0.1e1;
    vec4 _t0B4D = [_t0B49, _t0B4A, _t0B4B, _t0B4C];
    tensor[4,4] _t0B4E = [_t0B3E, _t0B43, _t0B48, _t0B4D];
    real _t0B4F = 0.1e1;
    real _t0B50 = 0.e0;
    real _t0B51 = 0.e0;
    real _t0B52 = 0.e0;
    vec4 _t0B53 = [_t0B4F, _t0B50, _t0B51, _t0B52];
    real _t0B54 = 0.e0;
    real _t0B55 = 0.1e1;
    real _t0B56 = 0.e0;
    real _t0B57 = 0.e0;
    vec4 _t0B58 = [_t0B54, _t0B55, _t0B56, _t0B57];
    real _t0B59 = 0.e0;
    real _t0B5A = 0.e0;
    real _t0B5B = 0.1e1;
    real _t0B5C = 0.e0;
    vec4 _t0B5D = [_t0B59, _t0B5A, _t0B5B, _t0B5C];
    real _t0B5E = 0.e0;
    real _t0B5F = 0.e0;
    real _t0B60 = 0.e0;
    real _t0B61 = 0.1e1;
    vec4 _t0B62 = [_t0B5E, _t0B5F, _t0B60, _t0B61];
    tensor[4,4] _t0B63 = [_t0B53, _t0B58, _t0B5D, _t0B62];
    real _t0B64 = 0.e0;
    real _t0B65 = -0.1e1;
    real _t0B66 = 0.e0;
    real _t0B67 = 0.e0;
    vec4 _t0B68 = [_t0B64, _t0B65, _t0B66, _t0B67];
    real _t0B69 = 0.1e1;
    real _t0B6A = 0.e0;
    real _t0B6B = 0.e0;
    real _t0B6C = 0.e0;
    vec4 _t0B6D = [_t0B69, _t0B6A, _t0B6B, _t0B6C];
    real _t0B6E = 0.e0;
    real _t0B6F = 0.e0;
    real _t0B70 = 0.1e1;
    real _t0B71 = 0.e0;
    vec4 _t0B72 = [_t0B6E, _t0B6F, _t0B70, _t0B71];
    real _t0B73 = 0.e0;
    real _t0B74 = 0.e0;
    real _t0B75 = 0.e0;
    real _t0B76 = 0.1e1;
    vec4 _t0B77 = [_t0B73, _t0B74, _t0B75, _t0B76];
    tensor[4,4] _t0B78 = [_t0B68, _t0B6D, _t0B72, _t0B77];
    tensor[4,4][6] _t0B79 = {_t0B0F, _t0B24, _t0B39, _t0B4E, _t0B63, _t0B78};
    real _t0B7A = 0.e0;
    real _t0B7B = -0.1e1;
    real _t0B7C = 0.1e1;
    real _t0B7D = 0.5e0;
    vec4 _t0B7E = [_t0B7A, _t0B7B, _t0B7C, _t0B7D];
    real _t0B7F = 0.e0;
    real _t0B80 = -0.1e1;
    real _t0B81 = 0.e0;
    real _t0B82 = 0.e0;
    vec4 _t0B83 = [_t0B7F, _t0B80, _t0B81, _t0B82];
    real _t0B84 = 0.1e1;
    real _t0B85 = 0.e0;
    real _t0B86 = 0.e0;
    real _t0B87 = 0.e0;
    vec4 _t0B88 = [_t0B84, _t0B85, _t0B86, _t0B87];
    real _t0B89 = 0.e0;
    real _t0B8A = 0.e0;
    real _t0B8B = 0.e0;
    real _t0B8C = 0.1e1;
    vec4 _t0B8D = [_t0B89, _t0B8A, _t0B8B, _t0B8C];
    tensor[4,4] _t0B8E = [_t0B7E, _t0B83, _t0B88, _t0B8D];
    real _t0B8F = 0.e0;
    real _t0B90 = -0.1e1;
    real _t0B91 = 0.1e1;
    real _t0B92 = 0.5e0;
    vec4 _t0B93 = [_t0B8F, _t0B90, _t0B91, _t0B92];
    real _t0B94 = 0.e0;
    real _t0B95 = -0.1e1;
    real _t0B96 = 0.e0;
    real _t0B97 = 0.e0;
    vec4 _t0B98 = [_t0B94, _t0B95, _t0B96, _t0B97];
    real _t0B99 = 0.1e1;
    real _t0B9A = 0.e0;
    real _t0B9B = 0.e0;
    real _t0B9C = 0.1e1;
    vec4 _t0B9D = [_t0B99, _t0B9A, _t0B9B, _t0B9C];
    real _t0B9E = 0.e0;
    real _t0B9F = 0.e0;
    real _t0BA0 = 0.e0;
    real _t0BA1 = 0.1e1;
    vec4 _t0BA2 = [_t0B9E, _t0B9F, _t0BA0, _t0BA1];
    tensor[4,4] _t0BA3 = [_t0B93, _t0B98, _t0B9D, _t0BA2];
    real _t0BA4 = 0.e0;
    real _t0BA5 = -0.1e1;
    real _t0BA6 = 0.e0;
    real _t0BA7 = 0.e0;
    vec4 _t0BA8 = [_t0BA4, _t0BA5, _t0BA6, _t0BA7];
    real _t0BA9 = 0.1e1;
    real _t0BAA = 0.e0;
    real _t0BAB = 0.e0;
    real _t0BAC = 0.e0;
    vec4 _t0BAD = [_t0BA9, _t0BAA, _t0BAB, _t0BAC];
    real _t0BAE = 0.e0;
    real _t0BAF = 0.e0;
    real _t0BB0 = 0.1e1;
    real _t0BB1 = 0.e0;
    vec4 _t0BB2 = [_t0BAE, _t0BAF, _t0BB0, _t0BB1];
    real _t0BB3 = 0.e0;
    real _t0BB4 = 0.e0;
    real _t0BB5 = 0.e0;
    real _t0BB6 = 0.1e1;
    vec4 _t0BB7 = [_t0BB3, _t0BB4, _t0BB5, _t0BB6];
    tensor[4,4] _t0BB8 = [_t0BA8, _t0BAD, _t0BB2, _t0BB7];
    real _t0BB9 = -0.1e1;
    real _t0BBA = 0.e0;
    real _t0BBB = 0.e0;
    real _t0BBC = 0.e0;
    vec4 _t0BBD = [_t0BB9, _t0BBA, _t0BBB, _t0BBC];
    real _t0BBE = 0.e0;
    real _t0BBF = -0.1e1;
    real _t0BC0 = 0.e0;
    real _t0BC1 = 0.e0;
    vec4 _t0BC2 = [_t0BBE, _t0BBF, _t0BC0, _t0BC1];
    real _t0BC3 = 0.e0;
    real _t0BC4 = 0.e0;
    real _t0BC5 = 0.1e1;
    real _t0BC6 = 0.e0;
    vec4 _t0BC7 = [_t0BC3, _t0BC4, _t0BC5, _t0BC6];
    real _t0BC8 = 0.e0;
    real _t0BC9 = 0.e0;
    real _t0BCA = 0.e0;
    real _t0BCB = 0.1e1;
    vec4 _t0BCC = [_t0BC8, _t0BC9, _t0BCA, _t0BCB];
    tensor[4,4] _t0BCD = [_t0BBD, _t0BC2, _t0BC7, _t0BCC];
    real _t0BCE = 0.e0;
    real _t0BCF = 0.1e1;
    real _t0BD0 = 0.e0;
    real _t0BD1 = 0.e0;
    vec4 _t0BD2 = [_t0BCE, _t0BCF, _t0BD0, _t0BD1];
    real _t0BD3 = -0.1e1;
    real _t0BD4 = 0.e0;
    real _t0BD5 = 0.e0;
    real _t0BD6 = 0.e0;
    vec4 _t0BD7 = [_t0BD3, _t0BD4, _t0BD5, _t0BD6];
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    real _t0BDA = 0.1e1;
    real _t0BDB = 0.e0;
    vec4 _t0BDC = [_t0BD8, _t0BD9, _t0BDA, _t0BDB];
    real _t0BDD = 0.e0;
    real _t0BDE = 0.e0;
    real _t0BDF = 0.e0;
    real _t0BE0 = 0.1e1;
    vec4 _t0BE1 = [_t0BDD, _t0BDE, _t0BDF, _t0BE0];
    tensor[4,4] _t0BE2 = [_t0BD2, _t0BD7, _t0BDC, _t0BE1];
    real _t0BE3 = 0.1e1;
    real _t0BE4 = 0.e0;
    real _t0BE5 = 0.e0;
    real _t0BE6 = 0.e0;
    vec4 _t0BE7 = [_t0BE3, _t0BE4, _t0BE5, _t0BE6];
    real _t0BE8 = 0.e0;
    real _t0BE9 = 0.1e1;
    real _t0BEA = 0.e0;
    real _t0BEB = 0.e0;
    vec4 _t0BEC = [_t0BE8, _t0BE9, _t0BEA, _t0BEB];
    real _t0BED = 0.e0;
    real _t0BEE = 0.e0;
    real _t0BEF = 0.1e1;
    real _t0BF0 = 0.e0;
    vec4 _t0BF1 = [_t0BED, _t0BEE, _t0BEF, _t0BF0];
    real _t0BF2 = 0.e0;
    real _t0BF3 = 0.e0;
    real _t0BF4 = 0.e0;
    real _t0BF5 = 0.1e1;
    vec4 _t0BF6 = [_t0BF2, _t0BF3, _t0BF4, _t0BF5];
    tensor[4,4] _t0BF7 = [_t0BE7, _t0BEC, _t0BF1, _t0BF6];
    tensor[4,4][6] _t0BF8 = {_t0B8E, _t0BA3, _t0BB8, _t0BCD, _t0BE2, _t0BF7};
    tensor[4,4][6][6] _t0BF9 = {_t097D, _t09FC, _t0A7B, _t0AFA, _t0B79, _t0BF8};
    real _t0BFA = time05E1[1];
    int _t0BFB = prim $r2i01B7 (_t0BFA);
    tensor[4,4][6] _t0BFC = prim $sub01C0<tensor[4,4][6]; %6> (_t0BF9, _t0BFB);
    real _t0BFD = time05E1[1];
    int _t0BFE = prim $r2i01B7 (_t0BFD);
    int[2] _t0BFF = func nextCell405E5 (_t0BFE, cellId05DE, mesh05DD);
    int _t0C00 = 1;
    int _t0C01 = prim $sub01C0<int; %2> (_t0BFF, _t0C00);
    tensor[4,4] _t0C02 = prim $sub01C0<tensor[4,4]; %6> (_t0BFC, _t0C01);
    real _t0C03 = time05E1[0];
    vec3 _t0C04 = prim *0036<$[3]> (_t0C03, dPos05E0);
    vec3 _t0C05 = prim +0017<$[3]> (_t0C04, refPos05DF);
    real _t0C06 = _t0C05[0];
    real _t0C07 = time05E1[0];
    vec3 _t0C08 = prim *0036<$[3]> (_t0C07, dPos05E0);
    vec3 _t0C09 = prim +0017<$[3]> (_t0C08, refPos05DF);
    real _t0C0A = _t0C09[1];
    real _t0C0B = time05E1[0];
    vec3 _t0C0C = prim *0036<$[3]> (_t0C0B, dPos05E0);
    vec3 _t0C0D = prim +0017<$[3]> (_t0C0C, refPos05DF);
    real _t0C0E = _t0C0D[2];
    real _t0C0F = 0.1e1;
    vec4 _t0C10 = [_t0C06, _t0C0A, _t0C0E, _t0C0F];
    vec4 _t0C11 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0C02, _t0C10);
    real _t0C12 = _t0C11[0];
    real _t0C13 = 0.1e1;
    real _t0C14 = 0.e0;
    real _t0C15 = 0.e0;
    real _t0C16 = 0.e0;
    vec4 _t0C17 = [_t0C13, _t0C14, _t0C15, _t0C16];
    real _t0C18 = 0.e0;
    real _t0C19 = 0.1e1;
    real _t0C1A = 0.e0;
    real _t0C1B = 0.e0;
    vec4 _t0C1C = [_t0C18, _t0C19, _t0C1A, _t0C1B];
    real _t0C1D = 0.e0;
    real _t0C1E = 0.e0;
    real _t0C1F = 0.1e1;
    real _t0C20 = 0.e0;
    vec4 _t0C21 = [_t0C1D, _t0C1E, _t0C1F, _t0C20];
    real _t0C22 = 0.e0;
    real _t0C23 = 0.e0;
    real _t0C24 = 0.e0;
    real _t0C25 = 0.1e1;
    vec4 _t0C26 = [_t0C22, _t0C23, _t0C24, _t0C25];
    tensor[4,4] _t0C27 = [_t0C17, _t0C1C, _t0C21, _t0C26];
    real _t0C28 = 0.1e1;
    real _t0C29 = 0.e0;
    real _t0C2A = 0.e0;
    real _t0C2B = 0.e0;
    vec4 _t0C2C = [_t0C28, _t0C29, _t0C2A, _t0C2B];
    real _t0C2D = 0.e0;
    real _t0C2E = 0.1e1;
    real _t0C2F = 0.e0;
    real _t0C30 = 0.e0;
    vec4 _t0C31 = [_t0C2D, _t0C2E, _t0C2F, _t0C30];
    real _t0C32 = 0.e0;
    real _t0C33 = 0.e0;
    real _t0C34 = 0.1e1;
    real _t0C35 = 0.1e1;
    vec4 _t0C36 = [_t0C32, _t0C33, _t0C34, _t0C35];
    real _t0C37 = 0.e0;
    real _t0C38 = 0.e0;
    real _t0C39 = 0.e0;
    real _t0C3A = 0.1e1;
    vec4 _t0C3B = [_t0C37, _t0C38, _t0C39, _t0C3A];
    tensor[4,4] _t0C3C = [_t0C2C, _t0C31, _t0C36, _t0C3B];
    real _t0C3D = 0.e0;
    real _t0C3E = 0.1e1;
    real _t0C3F = 0.e0;
    real _t0C40 = 0.e0;
    vec4 _t0C41 = [_t0C3D, _t0C3E, _t0C3F, _t0C40];
    real _t0C42 = 0.e0;
    real _t0C43 = 0.e0;
    real _t0C44 = 0.1e1;
    real _t0C45 = 0.e0;
    vec4 _t0C46 = [_t0C42, _t0C43, _t0C44, _t0C45];
    real _t0C47 = 0.1e1;
    real _t0C48 = -0.1e1;
    real _t0C49 = 0.e0;
    real _t0C4A = -0.5e0;
    vec4 _t0C4B = [_t0C47, _t0C48, _t0C49, _t0C4A];
    real _t0C4C = 0.e0;
    real _t0C4D = 0.e0;
    real _t0C4E = 0.e0;
    real _t0C4F = 0.1e1;
    vec4 _t0C50 = [_t0C4C, _t0C4D, _t0C4E, _t0C4F];
    tensor[4,4] _t0C51 = [_t0C41, _t0C46, _t0C4B, _t0C50];
    real _t0C52 = 0.e0;
    real _t0C53 = 0.e0;
    real _t0C54 = -0.1e1;
    real _t0C55 = 0.e0;
    vec4 _t0C56 = [_t0C52, _t0C53, _t0C54, _t0C55];
    real _t0C57 = 0.e0;
    real _t0C58 = 0.1e1;
    real _t0C59 = 0.e0;
    real _t0C5A = 0.e0;
    vec4 _t0C5B = [_t0C57, _t0C58, _t0C59, _t0C5A];
    real _t0C5C = 0.1e1;
    real _t0C5D = -0.1e1;
    real _t0C5E = 0.e0;
    real _t0C5F = -0.5e0;
    vec4 _t0C60 = [_t0C5C, _t0C5D, _t0C5E, _t0C5F];
    real _t0C61 = 0.e0;
    real _t0C62 = 0.e0;
    real _t0C63 = 0.e0;
    real _t0C64 = 0.1e1;
    vec4 _t0C65 = [_t0C61, _t0C62, _t0C63, _t0C64];
    tensor[4,4] _t0C66 = [_t0C56, _t0C5B, _t0C60, _t0C65];
    real _t0C67 = 0.e0;
    real _t0C68 = -0.1e1;
    real _t0C69 = 0.e0;
    real _t0C6A = 0.e0;
    vec4 _t0C6B = [_t0C67, _t0C68, _t0C69, _t0C6A];
    real _t0C6C = 0.e0;
    real _t0C6D = 0.e0;
    real _t0C6E = -0.1e1;
    real _t0C6F = 0.e0;
    vec4 _t0C70 = [_t0C6C, _t0C6D, _t0C6E, _t0C6F];
    real _t0C71 = 0.1e1;
    real _t0C72 = -0.1e1;
    real _t0C73 = 0.e0;
    real _t0C74 = -0.5e0;
    vec4 _t0C75 = [_t0C71, _t0C72, _t0C73, _t0C74];
    real _t0C76 = 0.e0;
    real _t0C77 = 0.e0;
    real _t0C78 = 0.e0;
    real _t0C79 = 0.1e1;
    vec4 _t0C7A = [_t0C76, _t0C77, _t0C78, _t0C79];
    tensor[4,4] _t0C7B = [_t0C6B, _t0C70, _t0C75, _t0C7A];
    real _t0C7C = 0.e0;
    real _t0C7D = 0.e0;
    real _t0C7E = 0.1e1;
    real _t0C7F = 0.e0;
    vec4 _t0C80 = [_t0C7C, _t0C7D, _t0C7E, _t0C7F];
    real _t0C81 = 0.e0;
    real _t0C82 = -0.1e1;
    real _t0C83 = 0.e0;
    real _t0C84 = 0.e0;
    vec4 _t0C85 = [_t0C81, _t0C82, _t0C83, _t0C84];
    real _t0C86 = 0.1e1;
    real _t0C87 = -0.1e1;
    real _t0C88 = 0.e0;
    real _t0C89 = -0.5e0;
    vec4 _t0C8A = [_t0C86, _t0C87, _t0C88, _t0C89];
    real _t0C8B = 0.e0;
    real _t0C8C = 0.e0;
    real _t0C8D = 0.e0;
    real _t0C8E = 0.1e1;
    vec4 _t0C8F = [_t0C8B, _t0C8C, _t0C8D, _t0C8E];
    tensor[4,4] _t0C90 = [_t0C80, _t0C85, _t0C8A, _t0C8F];
    tensor[4,4][6] _t0C91 = {_t0C27, _t0C3C, _t0C51, _t0C66, _t0C7B, _t0C90};
    real _t0C92 = 0.1e1;
    real _t0C93 = 0.e0;
    real _t0C94 = 0.e0;
    real _t0C95 = 0.e0;
    vec4 _t0C96 = [_t0C92, _t0C93, _t0C94, _t0C95];
    real _t0C97 = 0.e0;
    real _t0C98 = 0.1e1;
    real _t0C99 = 0.e0;
    real _t0C9A = 0.e0;
    vec4 _t0C9B = [_t0C97, _t0C98, _t0C99, _t0C9A];
    real _t0C9C = 0.e0;
    real _t0C9D = 0.e0;
    real _t0C9E = 0.1e1;
    real _t0C9F = -0.1e1;
    vec4 _t0CA0 = [_t0C9C, _t0C9D, _t0C9E, _t0C9F];
    real _t0CA1 = 0.e0;
    real _t0CA2 = 0.e0;
    real _t0CA3 = 0.e0;
    real _t0CA4 = 0.1e1;
    vec4 _t0CA5 = [_t0CA1, _t0CA2, _t0CA3, _t0CA4];
    tensor[4,4] _t0CA6 = [_t0C96, _t0C9B, _t0CA0, _t0CA5];
    real _t0CA7 = 0.1e1;
    real _t0CA8 = 0.e0;
    real _t0CA9 = 0.e0;
    real _t0CAA = 0.e0;
    vec4 _t0CAB = [_t0CA7, _t0CA8, _t0CA9, _t0CAA];
    real _t0CAC = 0.e0;
    real _t0CAD = 0.1e1;
    real _t0CAE = 0.e0;
    real _t0CAF = 0.e0;
    vec4 _t0CB0 = [_t0CAC, _t0CAD, _t0CAE, _t0CAF];
    real _t0CB1 = 0.e0;
    real _t0CB2 = 0.e0;
    real _t0CB3 = 0.1e1;
    real _t0CB4 = 0.e0;
    vec4 _t0CB5 = [_t0CB1, _t0CB2, _t0CB3, _t0CB4];
    real _t0CB6 = 0.e0;
    real _t0CB7 = 0.e0;
    real _t0CB8 = 0.e0;
    real _t0CB9 = 0.1e1;
    vec4 _t0CBA = [_t0CB6, _t0CB7, _t0CB8, _t0CB9];
    tensor[4,4] _t0CBB = [_t0CAB, _t0CB0, _t0CB5, _t0CBA];
    real _t0CBC = 0.e0;
    real _t0CBD = 0.1e1;
    real _t0CBE = 0.e0;
    real _t0CBF = 0.e0;
    vec4 _t0CC0 = [_t0CBC, _t0CBD, _t0CBE, _t0CBF];
    real _t0CC1 = 0.e0;
    real _t0CC2 = 0.e0;
    real _t0CC3 = 0.1e1;
    real _t0CC4 = -0.1e1;
    vec4 _t0CC5 = [_t0CC1, _t0CC2, _t0CC3, _t0CC4];
    real _t0CC6 = 0.1e1;
    real _t0CC7 = -0.1e1;
    real _t0CC8 = 0.e0;
    real _t0CC9 = -0.5e0;
    vec4 _t0CCA = [_t0CC6, _t0CC7, _t0CC8, _t0CC9];
    real _t0CCB = 0.e0;
    real _t0CCC = 0.e0;
    real _t0CCD = 0.e0;
    real _t0CCE = 0.1e1;
    vec4 _t0CCF = [_t0CCB, _t0CCC, _t0CCD, _t0CCE];
    tensor[4,4] _t0CD0 = [_t0CC0, _t0CC5, _t0CCA, _t0CCF];
    real _t0CD1 = 0.e0;
    real _t0CD2 = 0.e0;
    real _t0CD3 = -0.1e1;
    real _t0CD4 = 0.1e1;
    vec4 _t0CD5 = [_t0CD1, _t0CD2, _t0CD3, _t0CD4];
    real _t0CD6 = 0.e0;
    real _t0CD7 = 0.1e1;
    real _t0CD8 = 0.e0;
    real _t0CD9 = 0.e0;
    vec4 _t0CDA = [_t0CD6, _t0CD7, _t0CD8, _t0CD9];
    real _t0CDB = 0.1e1;
    real _t0CDC = -0.1e1;
    real _t0CDD = 0.e0;
    real _t0CDE = -0.5e0;
    vec4 _t0CDF = [_t0CDB, _t0CDC, _t0CDD, _t0CDE];
    real _t0CE0 = 0.e0;
    real _t0CE1 = 0.e0;
    real _t0CE2 = 0.e0;
    real _t0CE3 = 0.1e1;
    vec4 _t0CE4 = [_t0CE0, _t0CE1, _t0CE2, _t0CE3];
    tensor[4,4] _t0CE5 = [_t0CD5, _t0CDA, _t0CDF, _t0CE4];
    real _t0CE6 = 0.e0;
    real _t0CE7 = -0.1e1;
    real _t0CE8 = 0.e0;
    real _t0CE9 = 0.e0;
    vec4 _t0CEA = [_t0CE6, _t0CE7, _t0CE8, _t0CE9];
    real _t0CEB = 0.e0;
    real _t0CEC = 0.e0;
    real _t0CED = -0.1e1;
    real _t0CEE = 0.1e1;
    vec4 _t0CEF = [_t0CEB, _t0CEC, _t0CED, _t0CEE];
    real _t0CF0 = 0.1e1;
    real _t0CF1 = -0.1e1;
    real _t0CF2 = 0.e0;
    real _t0CF3 = -0.5e0;
    vec4 _t0CF4 = [_t0CF0, _t0CF1, _t0CF2, _t0CF3];
    real _t0CF5 = 0.e0;
    real _t0CF6 = 0.e0;
    real _t0CF7 = 0.e0;
    real _t0CF8 = 0.1e1;
    vec4 _t0CF9 = [_t0CF5, _t0CF6, _t0CF7, _t0CF8];
    tensor[4,4] _t0CFA = [_t0CEA, _t0CEF, _t0CF4, _t0CF9];
    real _t0CFB = 0.e0;
    real _t0CFC = 0.e0;
    real _t0CFD = 0.1e1;
    real _t0CFE = -0.1e1;
    vec4 _t0CFF = [_t0CFB, _t0CFC, _t0CFD, _t0CFE];
    real _t0D00 = 0.e0;
    real _t0D01 = -0.1e1;
    real _t0D02 = 0.e0;
    real _t0D03 = 0.e0;
    vec4 _t0D04 = [_t0D00, _t0D01, _t0D02, _t0D03];
    real _t0D05 = 0.1e1;
    real _t0D06 = -0.1e1;
    real _t0D07 = 0.e0;
    real _t0D08 = -0.5e0;
    vec4 _t0D09 = [_t0D05, _t0D06, _t0D07, _t0D08];
    real _t0D0A = 0.e0;
    real _t0D0B = 0.e0;
    real _t0D0C = 0.e0;
    real _t0D0D = 0.1e1;
    vec4 _t0D0E = [_t0D0A, _t0D0B, _t0D0C, _t0D0D];
    tensor[4,4] _t0D0F = [_t0CFF, _t0D04, _t0D09, _t0D0E];
    tensor[4,4][6] _t0D10 = {_t0CA6, _t0CBB, _t0CD0, _t0CE5, _t0CFA, _t0D0F};
    real _t0D11 = 0.1e1;
    real _t0D12 = 0.e0;
    real _t0D13 = 0.1e1;
    real _t0D14 = 0.5e0;
    vec4 _t0D15 = [_t0D11, _t0D12, _t0D13, _t0D14];
    real _t0D16 = 0.1e1;
    real _t0D17 = 0.e0;
    real _t0D18 = 0.e0;
    real _t0D19 = 0.e0;
    vec4 _t0D1A = [_t0D16, _t0D17, _t0D18, _t0D19];
    real _t0D1B = 0.e0;
    real _t0D1C = 0.1e1;
    real _t0D1D = 0.e0;
    real _t0D1E = 0.e0;
    vec4 _t0D1F = [_t0D1B, _t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = 0.e0;
    real _t0D21 = 0.e0;
    real _t0D22 = 0.e0;
    real _t0D23 = 0.1e1;
    vec4 _t0D24 = [_t0D20, _t0D21, _t0D22, _t0D23];
    tensor[4,4] _t0D25 = [_t0D15, _t0D1A, _t0D1F, _t0D24];
    real _t0D26 = 0.1e1;
    real _t0D27 = 0.e0;
    real _t0D28 = 0.1e1;
    real _t0D29 = 0.5e0;
    vec4 _t0D2A = [_t0D26, _t0D27, _t0D28, _t0D29];
    real _t0D2B = 0.1e1;
    real _t0D2C = 0.e0;
    real _t0D2D = 0.e0;
    real _t0D2E = 0.e0;
    vec4 _t0D2F = [_t0D2B, _t0D2C, _t0D2D, _t0D2E];
    real _t0D30 = 0.e0;
    real _t0D31 = 0.1e1;
    real _t0D32 = 0.e0;
    real _t0D33 = 0.1e1;
    vec4 _t0D34 = [_t0D30, _t0D31, _t0D32, _t0D33];
    real _t0D35 = 0.e0;
    real _t0D36 = 0.e0;
    real _t0D37 = 0.e0;
    real _t0D38 = 0.1e1;
    vec4 _t0D39 = [_t0D35, _t0D36, _t0D37, _t0D38];
    tensor[4,4] _t0D3A = [_t0D2A, _t0D2F, _t0D34, _t0D39];
    real _t0D3B = 0.1e1;
    real _t0D3C = 0.e0;
    real _t0D3D = 0.e0;
    real _t0D3E = 0.e0;
    vec4 _t0D3F = [_t0D3B, _t0D3C, _t0D3D, _t0D3E];
    real _t0D40 = 0.e0;
    real _t0D41 = 0.1e1;
    real _t0D42 = 0.e0;
    real _t0D43 = 0.e0;
    vec4 _t0D44 = [_t0D40, _t0D41, _t0D42, _t0D43];
    real _t0D45 = 0.e0;
    real _t0D46 = 0.e0;
    real _t0D47 = 0.1e1;
    real _t0D48 = 0.e0;
    vec4 _t0D49 = [_t0D45, _t0D46, _t0D47, _t0D48];
    real _t0D4A = 0.e0;
    real _t0D4B = 0.e0;
    real _t0D4C = 0.e0;
    real _t0D4D = 0.1e1;
    vec4 _t0D4E = [_t0D4A, _t0D4B, _t0D4C, _t0D4D];
    tensor[4,4] _t0D4F = [_t0D3F, _t0D44, _t0D49, _t0D4E];
    real _t0D50 = 0.e0;
    real _t0D51 = -0.1e1;
    real _t0D52 = 0.e0;
    real _t0D53 = 0.e0;
    vec4 _t0D54 = [_t0D50, _t0D51, _t0D52, _t0D53];
    real _t0D55 = 0.1e1;
    real _t0D56 = 0.e0;
    real _t0D57 = 0.e0;
    real _t0D58 = 0.e0;
    vec4 _t0D59 = [_t0D55, _t0D56, _t0D57, _t0D58];
    real _t0D5A = 0.e0;
    real _t0D5B = 0.e0;
    real _t0D5C = 0.1e1;
    real _t0D5D = 0.e0;
    vec4 _t0D5E = [_t0D5A, _t0D5B, _t0D5C, _t0D5D];
    real _t0D5F = 0.e0;
    real _t0D60 = 0.e0;
    real _t0D61 = 0.e0;
    real _t0D62 = 0.1e1;
    vec4 _t0D63 = [_t0D5F, _t0D60, _t0D61, _t0D62];
    tensor[4,4] _t0D64 = [_t0D54, _t0D59, _t0D5E, _t0D63];
    real _t0D65 = -0.1e1;
    real _t0D66 = 0.e0;
    real _t0D67 = 0.e0;
    real _t0D68 = 0.e0;
    vec4 _t0D69 = [_t0D65, _t0D66, _t0D67, _t0D68];
    real _t0D6A = 0.e0;
    real _t0D6B = -0.1e1;
    real _t0D6C = 0.e0;
    real _t0D6D = 0.e0;
    vec4 _t0D6E = [_t0D6A, _t0D6B, _t0D6C, _t0D6D];
    real _t0D6F = 0.e0;
    real _t0D70 = 0.e0;
    real _t0D71 = 0.1e1;
    real _t0D72 = 0.e0;
    vec4 _t0D73 = [_t0D6F, _t0D70, _t0D71, _t0D72];
    real _t0D74 = 0.e0;
    real _t0D75 = 0.e0;
    real _t0D76 = 0.e0;
    real _t0D77 = 0.1e1;
    vec4 _t0D78 = [_t0D74, _t0D75, _t0D76, _t0D77];
    tensor[4,4] _t0D79 = [_t0D69, _t0D6E, _t0D73, _t0D78];
    real _t0D7A = 0.e0;
    real _t0D7B = 0.1e1;
    real _t0D7C = 0.e0;
    real _t0D7D = 0.e0;
    vec4 _t0D7E = [_t0D7A, _t0D7B, _t0D7C, _t0D7D];
    real _t0D7F = -0.1e1;
    real _t0D80 = 0.e0;
    real _t0D81 = 0.e0;
    real _t0D82 = 0.e0;
    vec4 _t0D83 = [_t0D7F, _t0D80, _t0D81, _t0D82];
    real _t0D84 = 0.e0;
    real _t0D85 = 0.e0;
    real _t0D86 = 0.1e1;
    real _t0D87 = 0.e0;
    vec4 _t0D88 = [_t0D84, _t0D85, _t0D86, _t0D87];
    real _t0D89 = 0.e0;
    real _t0D8A = 0.e0;
    real _t0D8B = 0.e0;
    real _t0D8C = 0.1e1;
    vec4 _t0D8D = [_t0D89, _t0D8A, _t0D8B, _t0D8C];
    tensor[4,4] _t0D8E = [_t0D7E, _t0D83, _t0D88, _t0D8D];
    tensor[4,4][6] _t0D8F = {_t0D25, _t0D3A, _t0D4F, _t0D64, _t0D79, _t0D8E};
    real _t0D90 = 0.e0;
    real _t0D91 = 0.1e1;
    real _t0D92 = 0.1e1;
    real _t0D93 = 0.5e0;
    vec4 _t0D94 = [_t0D90, _t0D91, _t0D92, _t0D93];
    real _t0D95 = 0.e0;
    real _t0D96 = 0.1e1;
    real _t0D97 = 0.e0;
    real _t0D98 = 0.e0;
    vec4 _t0D99 = [_t0D95, _t0D96, _t0D97, _t0D98];
    real _t0D9A = -0.1e1;
    real _t0D9B = 0.e0;
    real _t0D9C = 0.e0;
    real _t0D9D = 0.e0;
    vec4 _t0D9E = [_t0D9A, _t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.e0;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.1e1;
    vec4 _t0DA3 = [_t0D9F, _t0DA0, _t0DA1, _t0DA2];
    tensor[4,4] _t0DA4 = [_t0D94, _t0D99, _t0D9E, _t0DA3];
    real _t0DA5 = 0.e0;
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.1e1;
    real _t0DA8 = 0.5e0;
    vec4 _t0DA9 = [_t0DA5, _t0DA6, _t0DA7, _t0DA8];
    real _t0DAA = 0.e0;
    real _t0DAB = 0.1e1;
    real _t0DAC = 0.e0;
    real _t0DAD = 0.e0;
    vec4 _t0DAE = [_t0DAA, _t0DAB, _t0DAC, _t0DAD];
    real _t0DAF = -0.1e1;
    real _t0DB0 = 0.e0;
    real _t0DB1 = 0.e0;
    real _t0DB2 = 0.1e1;
    vec4 _t0DB3 = [_t0DAF, _t0DB0, _t0DB1, _t0DB2];
    real _t0DB4 = 0.e0;
    real _t0DB5 = 0.e0;
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.1e1;
    vec4 _t0DB8 = [_t0DB4, _t0DB5, _t0DB6, _t0DB7];
    tensor[4,4] _t0DB9 = [_t0DA9, _t0DAE, _t0DB3, _t0DB8];
    real _t0DBA = 0.e0;
    real _t0DBB = 0.1e1;
    real _t0DBC = 0.e0;
    real _t0DBD = 0.e0;
    vec4 _t0DBE = [_t0DBA, _t0DBB, _t0DBC, _t0DBD];
    real _t0DBF = -0.1e1;
    real _t0DC0 = 0.e0;
    real _t0DC1 = 0.e0;
    real _t0DC2 = 0.e0;
    vec4 _t0DC3 = [_t0DBF, _t0DC0, _t0DC1, _t0DC2];
    real _t0DC4 = 0.e0;
    real _t0DC5 = 0.e0;
    real _t0DC6 = 0.1e1;
    real _t0DC7 = 0.e0;
    vec4 _t0DC8 = [_t0DC4, _t0DC5, _t0DC6, _t0DC7];
    real _t0DC9 = 0.e0;
    real _t0DCA = 0.e0;
    real _t0DCB = 0.e0;
    real _t0DCC = 0.1e1;
    vec4 _t0DCD = [_t0DC9, _t0DCA, _t0DCB, _t0DCC];
    tensor[4,4] _t0DCE = [_t0DBE, _t0DC3, _t0DC8, _t0DCD];
    real _t0DCF = 0.1e1;
    real _t0DD0 = 0.e0;
    real _t0DD1 = 0.e0;
    real _t0DD2 = 0.e0;
    vec4 _t0DD3 = [_t0DCF, _t0DD0, _t0DD1, _t0DD2];
    real _t0DD4 = 0.e0;
    real _t0DD5 = 0.1e1;
    real _t0DD6 = 0.e0;
    real _t0DD7 = 0.e0;
    vec4 _t0DD8 = [_t0DD4, _t0DD5, _t0DD6, _t0DD7];
    real _t0DD9 = 0.e0;
    real _t0DDA = 0.e0;
    real _t0DDB = 0.1e1;
    real _t0DDC = 0.e0;
    vec4 _t0DDD = [_t0DD9, _t0DDA, _t0DDB, _t0DDC];
    real _t0DDE = 0.e0;
    real _t0DDF = 0.e0;
    real _t0DE0 = 0.e0;
    real _t0DE1 = 0.1e1;
    vec4 _t0DE2 = [_t0DDE, _t0DDF, _t0DE0, _t0DE1];
    tensor[4,4] _t0DE3 = [_t0DD3, _t0DD8, _t0DDD, _t0DE2];
    real _t0DE4 = 0.e0;
    real _t0DE5 = -0.1e1;
    real _t0DE6 = 0.e0;
    real _t0DE7 = 0.e0;
    vec4 _t0DE8 = [_t0DE4, _t0DE5, _t0DE6, _t0DE7];
    real _t0DE9 = 0.1e1;
    real _t0DEA = 0.e0;
    real _t0DEB = 0.e0;
    real _t0DEC = 0.e0;
    vec4 _t0DED = [_t0DE9, _t0DEA, _t0DEB, _t0DEC];
    real _t0DEE = 0.e0;
    real _t0DEF = 0.e0;
    real _t0DF0 = 0.1e1;
    real _t0DF1 = 0.e0;
    vec4 _t0DF2 = [_t0DEE, _t0DEF, _t0DF0, _t0DF1];
    real _t0DF3 = 0.e0;
    real _t0DF4 = 0.e0;
    real _t0DF5 = 0.e0;
    real _t0DF6 = 0.1e1;
    vec4 _t0DF7 = [_t0DF3, _t0DF4, _t0DF5, _t0DF6];
    tensor[4,4] _t0DF8 = [_t0DE8, _t0DED, _t0DF2, _t0DF7];
    real _t0DF9 = -0.1e1;
    real _t0DFA = 0.e0;
    real _t0DFB = 0.e0;
    real _t0DFC = 0.e0;
    vec4 _t0DFD = [_t0DF9, _t0DFA, _t0DFB, _t0DFC];
    real _t0DFE = 0.e0;
    real _t0DFF = -0.1e1;
    real _t0E00 = 0.e0;
    real _t0E01 = 0.e0;
    vec4 _t0E02 = [_t0DFE, _t0DFF, _t0E00, _t0E01];
    real _t0E03 = 0.e0;
    real _t0E04 = 0.e0;
    real _t0E05 = 0.1e1;
    real _t0E06 = 0.e0;
    vec4 _t0E07 = [_t0E03, _t0E04, _t0E05, _t0E06];
    real _t0E08 = 0.e0;
    real _t0E09 = 0.e0;
    real _t0E0A = 0.e0;
    real _t0E0B = 0.1e1;
    vec4 _t0E0C = [_t0E08, _t0E09, _t0E0A, _t0E0B];
    tensor[4,4] _t0E0D = [_t0DFD, _t0E02, _t0E07, _t0E0C];
    tensor[4,4][6] _t0E0E = {_t0DA4, _t0DB9, _t0DCE, _t0DE3, _t0DF8, _t0E0D};
    real _t0E0F = -0.1e1;
    real _t0E10 = 0.e0;
    real _t0E11 = 0.1e1;
    real _t0E12 = 0.5e0;
    vec4 _t0E13 = [_t0E0F, _t0E10, _t0E11, _t0E12];
    real _t0E14 = -0.1e1;
    real _t0E15 = 0.e0;
    real _t0E16 = 0.e0;
    real _t0E17 = 0.e0;
    vec4 _t0E18 = [_t0E14, _t0E15, _t0E16, _t0E17];
    real _t0E19 = 0.e0;
    real _t0E1A = -0.1e1;
    real _t0E1B = 0.e0;
    real _t0E1C = 0.e0;
    vec4 _t0E1D = [_t0E19, _t0E1A, _t0E1B, _t0E1C];
    real _t0E1E = 0.e0;
    real _t0E1F = 0.e0;
    real _t0E20 = 0.e0;
    real _t0E21 = 0.1e1;
    vec4 _t0E22 = [_t0E1E, _t0E1F, _t0E20, _t0E21];
    tensor[4,4] _t0E23 = [_t0E13, _t0E18, _t0E1D, _t0E22];
    real _t0E24 = -0.1e1;
    real _t0E25 = 0.e0;
    real _t0E26 = 0.1e1;
    real _t0E27 = 0.5e0;
    vec4 _t0E28 = [_t0E24, _t0E25, _t0E26, _t0E27];
    real _t0E29 = -0.1e1;
    real _t0E2A = 0.e0;
    real _t0E2B = 0.e0;
    real _t0E2C = 0.e0;
    vec4 _t0E2D = [_t0E29, _t0E2A, _t0E2B, _t0E2C];
    real _t0E2E = 0.e0;
    real _t0E2F = -0.1e1;
    real _t0E30 = 0.e0;
    real _t0E31 = 0.1e1;
    vec4 _t0E32 = [_t0E2E, _t0E2F, _t0E30, _t0E31];
    real _t0E33 = 0.e0;
    real _t0E34 = 0.e0;
    real _t0E35 = 0.e0;
    real _t0E36 = 0.1e1;
    vec4 _t0E37 = [_t0E33, _t0E34, _t0E35, _t0E36];
    tensor[4,4] _t0E38 = [_t0E28, _t0E2D, _t0E32, _t0E37];
    real _t0E39 = -0.1e1;
    real _t0E3A = 0.e0;
    real _t0E3B = 0.e0;
    real _t0E3C = 0.e0;
    vec4 _t0E3D = [_t0E39, _t0E3A, _t0E3B, _t0E3C];
    real _t0E3E = 0.e0;
    real _t0E3F = -0.1e1;
    real _t0E40 = 0.e0;
    real _t0E41 = 0.e0;
    vec4 _t0E42 = [_t0E3E, _t0E3F, _t0E40, _t0E41];
    real _t0E43 = 0.e0;
    real _t0E44 = 0.e0;
    real _t0E45 = 0.1e1;
    real _t0E46 = 0.e0;
    vec4 _t0E47 = [_t0E43, _t0E44, _t0E45, _t0E46];
    real _t0E48 = 0.e0;
    real _t0E49 = 0.e0;
    real _t0E4A = 0.e0;
    real _t0E4B = 0.1e1;
    vec4 _t0E4C = [_t0E48, _t0E49, _t0E4A, _t0E4B];
    tensor[4,4] _t0E4D = [_t0E3D, _t0E42, _t0E47, _t0E4C];
    real _t0E4E = 0.e0;
    real _t0E4F = 0.1e1;
    real _t0E50 = 0.e0;
    real _t0E51 = 0.e0;
    vec4 _t0E52 = [_t0E4E, _t0E4F, _t0E50, _t0E51];
    real _t0E53 = -0.1e1;
    real _t0E54 = 0.e0;
    real _t0E55 = 0.e0;
    real _t0E56 = 0.e0;
    vec4 _t0E57 = [_t0E53, _t0E54, _t0E55, _t0E56];
    real _t0E58 = 0.e0;
    real _t0E59 = 0.e0;
    real _t0E5A = 0.1e1;
    real _t0E5B = 0.e0;
    vec4 _t0E5C = [_t0E58, _t0E59, _t0E5A, _t0E5B];
    real _t0E5D = 0.e0;
    real _t0E5E = 0.e0;
    real _t0E5F = 0.e0;
    real _t0E60 = 0.1e1;
    vec4 _t0E61 = [_t0E5D, _t0E5E, _t0E5F, _t0E60];
    tensor[4,4] _t0E62 = [_t0E52, _t0E57, _t0E5C, _t0E61];
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.e0;
    real _t0E65 = 0.e0;
    real _t0E66 = 0.e0;
    vec4 _t0E67 = [_t0E63, _t0E64, _t0E65, _t0E66];
    real _t0E68 = 0.e0;
    real _t0E69 = 0.1e1;
    real _t0E6A = 0.e0;
    real _t0E6B = 0.e0;
    vec4 _t0E6C = [_t0E68, _t0E69, _t0E6A, _t0E6B];
    real _t0E6D = 0.e0;
    real _t0E6E = 0.e0;
    real _t0E6F = 0.1e1;
    real _t0E70 = 0.e0;
    vec4 _t0E71 = [_t0E6D, _t0E6E, _t0E6F, _t0E70];
    real _t0E72 = 0.e0;
    real _t0E73 = 0.e0;
    real _t0E74 = 0.e0;
    real _t0E75 = 0.1e1;
    vec4 _t0E76 = [_t0E72, _t0E73, _t0E74, _t0E75];
    tensor[4,4] _t0E77 = [_t0E67, _t0E6C, _t0E71, _t0E76];
    real _t0E78 = 0.e0;
    real _t0E79 = -0.1e1;
    real _t0E7A = 0.e0;
    real _t0E7B = 0.e0;
    vec4 _t0E7C = [_t0E78, _t0E79, _t0E7A, _t0E7B];
    real _t0E7D = 0.1e1;
    real _t0E7E = 0.e0;
    real _t0E7F = 0.e0;
    real _t0E80 = 0.e0;
    vec4 _t0E81 = [_t0E7D, _t0E7E, _t0E7F, _t0E80];
    real _t0E82 = 0.e0;
    real _t0E83 = 0.e0;
    real _t0E84 = 0.1e1;
    real _t0E85 = 0.e0;
    vec4 _t0E86 = [_t0E82, _t0E83, _t0E84, _t0E85];
    real _t0E87 = 0.e0;
    real _t0E88 = 0.e0;
    real _t0E89 = 0.e0;
    real _t0E8A = 0.1e1;
    vec4 _t0E8B = [_t0E87, _t0E88, _t0E89, _t0E8A];
    tensor[4,4] _t0E8C = [_t0E7C, _t0E81, _t0E86, _t0E8B];
    tensor[4,4][6] _t0E8D = {_t0E23, _t0E38, _t0E4D, _t0E62, _t0E77, _t0E8C};
    real _t0E8E = 0.e0;
    real _t0E8F = -0.1e1;
    real _t0E90 = 0.1e1;
    real _t0E91 = 0.5e0;
    vec4 _t0E92 = [_t0E8E, _t0E8F, _t0E90, _t0E91];
    real _t0E93 = 0.e0;
    real _t0E94 = -0.1e1;
    real _t0E95 = 0.e0;
    real _t0E96 = 0.e0;
    vec4 _t0E97 = [_t0E93, _t0E94, _t0E95, _t0E96];
    real _t0E98 = 0.1e1;
    real _t0E99 = 0.e0;
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    vec4 _t0E9C = [_t0E98, _t0E99, _t0E9A, _t0E9B];
    real _t0E9D = 0.e0;
    real _t0E9E = 0.e0;
    real _t0E9F = 0.e0;
    real _t0EA0 = 0.1e1;
    vec4 _t0EA1 = [_t0E9D, _t0E9E, _t0E9F, _t0EA0];
    tensor[4,4] _t0EA2 = [_t0E92, _t0E97, _t0E9C, _t0EA1];
    real _t0EA3 = 0.e0;
    real _t0EA4 = -0.1e1;
    real _t0EA5 = 0.1e1;
    real _t0EA6 = 0.5e0;
    vec4 _t0EA7 = [_t0EA3, _t0EA4, _t0EA5, _t0EA6];
    real _t0EA8 = 0.e0;
    real _t0EA9 = -0.1e1;
    real _t0EAA = 0.e0;
    real _t0EAB = 0.e0;
    vec4 _t0EAC = [_t0EA8, _t0EA9, _t0EAA, _t0EAB];
    real _t0EAD = 0.1e1;
    real _t0EAE = 0.e0;
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.1e1;
    vec4 _t0EB1 = [_t0EAD, _t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.e0;
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.1e1;
    vec4 _t0EB6 = [_t0EB2, _t0EB3, _t0EB4, _t0EB5];
    tensor[4,4] _t0EB7 = [_t0EA7, _t0EAC, _t0EB1, _t0EB6];
    real _t0EB8 = 0.e0;
    real _t0EB9 = -0.1e1;
    real _t0EBA = 0.e0;
    real _t0EBB = 0.e0;
    vec4 _t0EBC = [_t0EB8, _t0EB9, _t0EBA, _t0EBB];
    real _t0EBD = 0.1e1;
    real _t0EBE = 0.e0;
    real _t0EBF = 0.e0;
    real _t0EC0 = 0.e0;
    vec4 _t0EC1 = [_t0EBD, _t0EBE, _t0EBF, _t0EC0];
    real _t0EC2 = 0.e0;
    real _t0EC3 = 0.e0;
    real _t0EC4 = 0.1e1;
    real _t0EC5 = 0.e0;
    vec4 _t0EC6 = [_t0EC2, _t0EC3, _t0EC4, _t0EC5];
    real _t0EC7 = 0.e0;
    real _t0EC8 = 0.e0;
    real _t0EC9 = 0.e0;
    real _t0ECA = 0.1e1;
    vec4 _t0ECB = [_t0EC7, _t0EC8, _t0EC9, _t0ECA];
    tensor[4,4] _t0ECC = [_t0EBC, _t0EC1, _t0EC6, _t0ECB];
    real _t0ECD = -0.1e1;
    real _t0ECE = 0.e0;
    real _t0ECF = 0.e0;
    real _t0ED0 = 0.e0;
    vec4 _t0ED1 = [_t0ECD, _t0ECE, _t0ECF, _t0ED0];
    real _t0ED2 = 0.e0;
    real _t0ED3 = -0.1e1;
    real _t0ED4 = 0.e0;
    real _t0ED5 = 0.e0;
    vec4 _t0ED6 = [_t0ED2, _t0ED3, _t0ED4, _t0ED5];
    real _t0ED7 = 0.e0;
    real _t0ED8 = 0.e0;
    real _t0ED9 = 0.1e1;
    real _t0EDA = 0.e0;
    vec4 _t0EDB = [_t0ED7, _t0ED8, _t0ED9, _t0EDA];
    real _t0EDC = 0.e0;
    real _t0EDD = 0.e0;
    real _t0EDE = 0.e0;
    real _t0EDF = 0.1e1;
    vec4 _t0EE0 = [_t0EDC, _t0EDD, _t0EDE, _t0EDF];
    tensor[4,4] _t0EE1 = [_t0ED1, _t0ED6, _t0EDB, _t0EE0];
    real _t0EE2 = 0.e0;
    real _t0EE3 = 0.1e1;
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
    real _t0EE7 = -0.1e1;
    real _t0EE8 = 0.e0;
    real _t0EE9 = 0.e0;
    real _t0EEA = 0.e0;
    vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    real _t0EEE = 0.1e1;
    real _t0EEF = 0.e0;
    vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
    real _t0EF1 = 0.e0;
    real _t0EF2 = 0.e0;
    real _t0EF3 = 0.e0;
    real _t0EF4 = 0.1e1;
    vec4 _t0EF5 = [_t0EF1, _t0EF2, _t0EF3, _t0EF4];
    tensor[4,4] _t0EF6 = [_t0EE6, _t0EEB, _t0EF0, _t0EF5];
    real _t0EF7 = 0.1e1;
    real _t0EF8 = 0.e0;
    real _t0EF9 = 0.e0;
    real _t0EFA = 0.e0;
    vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
    real _t0EFC = 0.e0;
    real _t0EFD = 0.1e1;
    real _t0EFE = 0.e0;
    real _t0EFF = 0.e0;
    vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
    real _t0F01 = 0.e0;
    real _t0F02 = 0.e0;
    real _t0F03 = 0.1e1;
    real _t0F04 = 0.e0;
    vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
    real _t0F06 = 0.e0;
    real _t0F07 = 0.e0;
    real _t0F08 = 0.e0;
    real _t0F09 = 0.1e1;
    vec4 _t0F0A = [_t0F06, _t0F07, _t0F08, _t0F09];
    tensor[4,4] _t0F0B = [_t0EFB, _t0F00, _t0F05, _t0F0A];
    tensor[4,4][6] _t0F0C = {_t0EA2, _t0EB7, _t0ECC, _t0EE1, _t0EF6, _t0F0B};
    tensor[4,4][6][6] _t0F0D = {_t0C91, _t0D10, _t0D8F, _t0E0E, _t0E8D, _t0F0C};
    real _t0F0E = time05E1[1];
    int _t0F0F = prim $r2i01B7 (_t0F0E);
    tensor[4,4][6] _t0F10 = prim $sub01C0<tensor[4,4][6]; %6> (_t0F0D, _t0F0F);
    real _t0F11 = time05E1[1];
    int _t0F12 = prim $r2i01B7 (_t0F11);
    int[2] _t0F13 = func nextCell405E5 (_t0F12, cellId05DE, mesh05DD);
    int _t0F14 = 1;
    int _t0F15 = prim $sub01C0<int; %2> (_t0F13, _t0F14);
    tensor[4,4] _t0F16 = prim $sub01C0<tensor[4,4]; %6> (_t0F10, _t0F15);
    real _t0F17 = time05E1[0];
    vec3 _t0F18 = prim *0036<$[3]> (_t0F17, dPos05E0);
    vec3 _t0F19 = prim +0017<$[3]> (_t0F18, refPos05DF);
    real _t0F1A = _t0F19[0];
    real _t0F1B = time05E1[0];
    vec3 _t0F1C = prim *0036<$[3]> (_t0F1B, dPos05E0);
    vec3 _t0F1D = prim +0017<$[3]> (_t0F1C, refPos05DF);
    real _t0F1E = _t0F1D[1];
    real _t0F1F = time05E1[0];
    vec3 _t0F20 = prim *0036<$[3]> (_t0F1F, dPos05E0);
    vec3 _t0F21 = prim +0017<$[3]> (_t0F20, refPos05DF);
    real _t0F22 = _t0F21[2];
    real _t0F23 = 0.1e1;
    vec4 _t0F24 = [_t0F1A, _t0F1E, _t0F22, _t0F23];
    vec4 _t0F25 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0F16, _t0F24);
    real _t0F26 = _t0F25[1];
    real _t0F27 = 0.1e1;
    real _t0F28 = 0.e0;
    real _t0F29 = 0.e0;
    real _t0F2A = 0.e0;
    vec4 _t0F2B = [_t0F27, _t0F28, _t0F29, _t0F2A];
    real _t0F2C = 0.e0;
    real _t0F2D = 0.1e1;
    real _t0F2E = 0.e0;
    real _t0F2F = 0.e0;
    vec4 _t0F30 = [_t0F2C, _t0F2D, _t0F2E, _t0F2F];
    real _t0F31 = 0.e0;
    real _t0F32 = 0.e0;
    real _t0F33 = 0.1e1;
    real _t0F34 = 0.e0;
    vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
    real _t0F36 = 0.e0;
    real _t0F37 = 0.e0;
    real _t0F38 = 0.e0;
    real _t0F39 = 0.1e1;
    vec4 _t0F3A = [_t0F36, _t0F37, _t0F38, _t0F39];
    tensor[4,4] _t0F3B = [_t0F2B, _t0F30, _t0F35, _t0F3A];
    real _t0F3C = 0.1e1;
    real _t0F3D = 0.e0;
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    vec4 _t0F40 = [_t0F3C, _t0F3D, _t0F3E, _t0F3F];
    real _t0F41 = 0.e0;
    real _t0F42 = 0.1e1;
    real _t0F43 = 0.e0;
    real _t0F44 = 0.e0;
    vec4 _t0F45 = [_t0F41, _t0F42, _t0F43, _t0F44];
    real _t0F46 = 0.e0;
    real _t0F47 = 0.e0;
    real _t0F48 = 0.1e1;
    real _t0F49 = 0.1e1;
    vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
    real _t0F4B = 0.e0;
    real _t0F4C = 0.e0;
    real _t0F4D = 0.e0;
    real _t0F4E = 0.1e1;
    vec4 _t0F4F = [_t0F4B, _t0F4C, _t0F4D, _t0F4E];
    tensor[4,4] _t0F50 = [_t0F40, _t0F45, _t0F4A, _t0F4F];
    real _t0F51 = 0.e0;
    real _t0F52 = 0.1e1;
    real _t0F53 = 0.e0;
    real _t0F54 = 0.e0;
    vec4 _t0F55 = [_t0F51, _t0F52, _t0F53, _t0F54];
    real _t0F56 = 0.e0;
    real _t0F57 = 0.e0;
    real _t0F58 = 0.1e1;
    real _t0F59 = 0.e0;
    vec4 _t0F5A = [_t0F56, _t0F57, _t0F58, _t0F59];
    real _t0F5B = 0.1e1;
    real _t0F5C = -0.1e1;
    real _t0F5D = 0.e0;
    real _t0F5E = -0.5e0;
    vec4 _t0F5F = [_t0F5B, _t0F5C, _t0F5D, _t0F5E];
    real _t0F60 = 0.e0;
    real _t0F61 = 0.e0;
    real _t0F62 = 0.e0;
    real _t0F63 = 0.1e1;
    vec4 _t0F64 = [_t0F60, _t0F61, _t0F62, _t0F63];
    tensor[4,4] _t0F65 = [_t0F55, _t0F5A, _t0F5F, _t0F64];
    real _t0F66 = 0.e0;
    real _t0F67 = 0.e0;
    real _t0F68 = -0.1e1;
    real _t0F69 = 0.e0;
    vec4 _t0F6A = [_t0F66, _t0F67, _t0F68, _t0F69];
    real _t0F6B = 0.e0;
    real _t0F6C = 0.1e1;
    real _t0F6D = 0.e0;
    real _t0F6E = 0.e0;
    vec4 _t0F6F = [_t0F6B, _t0F6C, _t0F6D, _t0F6E];
    real _t0F70 = 0.1e1;
    real _t0F71 = -0.1e1;
    real _t0F72 = 0.e0;
    real _t0F73 = -0.5e0;
    vec4 _t0F74 = [_t0F70, _t0F71, _t0F72, _t0F73];
    real _t0F75 = 0.e0;
    real _t0F76 = 0.e0;
    real _t0F77 = 0.e0;
    real _t0F78 = 0.1e1;
    vec4 _t0F79 = [_t0F75, _t0F76, _t0F77, _t0F78];
    tensor[4,4] _t0F7A = [_t0F6A, _t0F6F, _t0F74, _t0F79];
    real _t0F7B = 0.e0;
    real _t0F7C = -0.1e1;
    real _t0F7D = 0.e0;
    real _t0F7E = 0.e0;
    vec4 _t0F7F = [_t0F7B, _t0F7C, _t0F7D, _t0F7E];
    real _t0F80 = 0.e0;
    real _t0F81 = 0.e0;
    real _t0F82 = -0.1e1;
    real _t0F83 = 0.e0;
    vec4 _t0F84 = [_t0F80, _t0F81, _t0F82, _t0F83];
    real _t0F85 = 0.1e1;
    real _t0F86 = -0.1e1;
    real _t0F87 = 0.e0;
    real _t0F88 = -0.5e0;
    vec4 _t0F89 = [_t0F85, _t0F86, _t0F87, _t0F88];
    real _t0F8A = 0.e0;
    real _t0F8B = 0.e0;
    real _t0F8C = 0.e0;
    real _t0F8D = 0.1e1;
    vec4 _t0F8E = [_t0F8A, _t0F8B, _t0F8C, _t0F8D];
    tensor[4,4] _t0F8F = [_t0F7F, _t0F84, _t0F89, _t0F8E];
    real _t0F90 = 0.e0;
    real _t0F91 = 0.e0;
    real _t0F92 = 0.1e1;
    real _t0F93 = 0.e0;
    vec4 _t0F94 = [_t0F90, _t0F91, _t0F92, _t0F93];
    real _t0F95 = 0.e0;
    real _t0F96 = -0.1e1;
    real _t0F97 = 0.e0;
    real _t0F98 = 0.e0;
    vec4 _t0F99 = [_t0F95, _t0F96, _t0F97, _t0F98];
    real _t0F9A = 0.1e1;
    real _t0F9B = -0.1e1;
    real _t0F9C = 0.e0;
    real _t0F9D = -0.5e0;
    vec4 _t0F9E = [_t0F9A, _t0F9B, _t0F9C, _t0F9D];
    real _t0F9F = 0.e0;
    real _t0FA0 = 0.e0;
    real _t0FA1 = 0.e0;
    real _t0FA2 = 0.1e1;
    vec4 _t0FA3 = [_t0F9F, _t0FA0, _t0FA1, _t0FA2];
    tensor[4,4] _t0FA4 = [_t0F94, _t0F99, _t0F9E, _t0FA3];
    tensor[4,4][6] _t0FA5 = {_t0F3B, _t0F50, _t0F65, _t0F7A, _t0F8F, _t0FA4};
    real _t0FA6 = 0.1e1;
    real _t0FA7 = 0.e0;
    real _t0FA8 = 0.e0;
    real _t0FA9 = 0.e0;
    vec4 _t0FAA = [_t0FA6, _t0FA7, _t0FA8, _t0FA9];
    real _t0FAB = 0.e0;
    real _t0FAC = 0.1e1;
    real _t0FAD = 0.e0;
    real _t0FAE = 0.e0;
    vec4 _t0FAF = [_t0FAB, _t0FAC, _t0FAD, _t0FAE];
    real _t0FB0 = 0.e0;
    real _t0FB1 = 0.e0;
    real _t0FB2 = 0.1e1;
    real _t0FB3 = -0.1e1;
    vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
    real _t0FB5 = 0.e0;
    real _t0FB6 = 0.e0;
    real _t0FB7 = 0.e0;
    real _t0FB8 = 0.1e1;
    vec4 _t0FB9 = [_t0FB5, _t0FB6, _t0FB7, _t0FB8];
    tensor[4,4] _t0FBA = [_t0FAA, _t0FAF, _t0FB4, _t0FB9];
    real _t0FBB = 0.1e1;
    real _t0FBC = 0.e0;
    real _t0FBD = 0.e0;
    real _t0FBE = 0.e0;
    vec4 _t0FBF = [_t0FBB, _t0FBC, _t0FBD, _t0FBE];
    real _t0FC0 = 0.e0;
    real _t0FC1 = 0.1e1;
    real _t0FC2 = 0.e0;
    real _t0FC3 = 0.e0;
    vec4 _t0FC4 = [_t0FC0, _t0FC1, _t0FC2, _t0FC3];
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    real _t0FC7 = 0.1e1;
    real _t0FC8 = 0.e0;
    vec4 _t0FC9 = [_t0FC5, _t0FC6, _t0FC7, _t0FC8];
    real _t0FCA = 0.e0;
    real _t0FCB = 0.e0;
    real _t0FCC = 0.e0;
    real _t0FCD = 0.1e1;
    vec4 _t0FCE = [_t0FCA, _t0FCB, _t0FCC, _t0FCD];
    tensor[4,4] _t0FCF = [_t0FBF, _t0FC4, _t0FC9, _t0FCE];
    real _t0FD0 = 0.e0;
    real _t0FD1 = 0.1e1;
    real _t0FD2 = 0.e0;
    real _t0FD3 = 0.e0;
    vec4 _t0FD4 = [_t0FD0, _t0FD1, _t0FD2, _t0FD3];
    real _t0FD5 = 0.e0;
    real _t0FD6 = 0.e0;
    real _t0FD7 = 0.1e1;
    real _t0FD8 = -0.1e1;
    vec4 _t0FD9 = [_t0FD5, _t0FD6, _t0FD7, _t0FD8];
    real _t0FDA = 0.1e1;
    real _t0FDB = -0.1e1;
    real _t0FDC = 0.e0;
    real _t0FDD = -0.5e0;
    vec4 _t0FDE = [_t0FDA, _t0FDB, _t0FDC, _t0FDD];
    real _t0FDF = 0.e0;
    real _t0FE0 = 0.e0;
    real _t0FE1 = 0.e0;
    real _t0FE2 = 0.1e1;
    vec4 _t0FE3 = [_t0FDF, _t0FE0, _t0FE1, _t0FE2];
    tensor[4,4] _t0FE4 = [_t0FD4, _t0FD9, _t0FDE, _t0FE3];
    real _t0FE5 = 0.e0;
    real _t0FE6 = 0.e0;
    real _t0FE7 = -0.1e1;
    real _t0FE8 = 0.1e1;
    vec4 _t0FE9 = [_t0FE5, _t0FE6, _t0FE7, _t0FE8];
    real _t0FEA = 0.e0;
    real _t0FEB = 0.1e1;
    real _t0FEC = 0.e0;
    real _t0FED = 0.e0;
    vec4 _t0FEE = [_t0FEA, _t0FEB, _t0FEC, _t0FED];
    real _t0FEF = 0.1e1;
    real _t0FF0 = -0.1e1;
    real _t0FF1 = 0.e0;
    real _t0FF2 = -0.5e0;
    vec4 _t0FF3 = [_t0FEF, _t0FF0, _t0FF1, _t0FF2];
    real _t0FF4 = 0.e0;
    real _t0FF5 = 0.e0;
    real _t0FF6 = 0.e0;
    real _t0FF7 = 0.1e1;
    vec4 _t0FF8 = [_t0FF4, _t0FF5, _t0FF6, _t0FF7];
    tensor[4,4] _t0FF9 = [_t0FE9, _t0FEE, _t0FF3, _t0FF8];
    real _t0FFA = 0.e0;
    real _t0FFB = -0.1e1;
    real _t0FFC = 0.e0;
    real _t0FFD = 0.e0;
    vec4 _t0FFE = [_t0FFA, _t0FFB, _t0FFC, _t0FFD];
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = -0.1e1;
    real _t1002 = 0.1e1;
    vec4 _t1003 = [_t0FFF, _t1000, _t1001, _t1002];
    real _t1004 = 0.1e1;
    real _t1005 = -0.1e1;
    real _t1006 = 0.e0;
    real _t1007 = -0.5e0;
    vec4 _t1008 = [_t1004, _t1005, _t1006, _t1007];
    real _t1009 = 0.e0;
    real _t100A = 0.e0;
    real _t100B = 0.e0;
    real _t100C = 0.1e1;
    vec4 _t100D = [_t1009, _t100A, _t100B, _t100C];
    tensor[4,4] _t100E = [_t0FFE, _t1003, _t1008, _t100D];
    real _t100F = 0.e0;
    real _t1010 = 0.e0;
    real _t1011 = 0.1e1;
    real _t1012 = -0.1e1;
    vec4 _t1013 = [_t100F, _t1010, _t1011, _t1012];
    real _t1014 = 0.e0;
    real _t1015 = -0.1e1;
    real _t1016 = 0.e0;
    real _t1017 = 0.e0;
    vec4 _t1018 = [_t1014, _t1015, _t1016, _t1017];
    real _t1019 = 0.1e1;
    real _t101A = -0.1e1;
    real _t101B = 0.e0;
    real _t101C = -0.5e0;
    vec4 _t101D = [_t1019, _t101A, _t101B, _t101C];
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    real _t1021 = 0.1e1;
    vec4 _t1022 = [_t101E, _t101F, _t1020, _t1021];
    tensor[4,4] _t1023 = [_t1013, _t1018, _t101D, _t1022];
    tensor[4,4][6] _t1024 = {_t0FBA, _t0FCF, _t0FE4, _t0FF9, _t100E, _t1023};
    real _t1025 = 0.1e1;
    real _t1026 = 0.e0;
    real _t1027 = 0.1e1;
    real _t1028 = 0.5e0;
    vec4 _t1029 = [_t1025, _t1026, _t1027, _t1028];
    real _t102A = 0.1e1;
    real _t102B = 0.e0;
    real _t102C = 0.e0;
    real _t102D = 0.e0;
    vec4 _t102E = [_t102A, _t102B, _t102C, _t102D];
    real _t102F = 0.e0;
    real _t1030 = 0.1e1;
    real _t1031 = 0.e0;
    real _t1032 = 0.e0;
    vec4 _t1033 = [_t102F, _t1030, _t1031, _t1032];
    real _t1034 = 0.e0;
    real _t1035 = 0.e0;
    real _t1036 = 0.e0;
    real _t1037 = 0.1e1;
    vec4 _t1038 = [_t1034, _t1035, _t1036, _t1037];
    tensor[4,4] _t1039 = [_t1029, _t102E, _t1033, _t1038];
    real _t103A = 0.1e1;
    real _t103B = 0.e0;
    real _t103C = 0.1e1;
    real _t103D = 0.5e0;
    vec4 _t103E = [_t103A, _t103B, _t103C, _t103D];
    real _t103F = 0.1e1;
    real _t1040 = 0.e0;
    real _t1041 = 0.e0;
    real _t1042 = 0.e0;
    vec4 _t1043 = [_t103F, _t1040, _t1041, _t1042];
    real _t1044 = 0.e0;
    real _t1045 = 0.1e1;
    real _t1046 = 0.e0;
    real _t1047 = 0.1e1;
    vec4 _t1048 = [_t1044, _t1045, _t1046, _t1047];
    real _t1049 = 0.e0;
    real _t104A = 0.e0;
    real _t104B = 0.e0;
    real _t104C = 0.1e1;
    vec4 _t104D = [_t1049, _t104A, _t104B, _t104C];
    tensor[4,4] _t104E = [_t103E, _t1043, _t1048, _t104D];
    real _t104F = 0.1e1;
    real _t1050 = 0.e0;
    real _t1051 = 0.e0;
    real _t1052 = 0.e0;
    vec4 _t1053 = [_t104F, _t1050, _t1051, _t1052];
    real _t1054 = 0.e0;
    real _t1055 = 0.1e1;
    real _t1056 = 0.e0;
    real _t1057 = 0.e0;
    vec4 _t1058 = [_t1054, _t1055, _t1056, _t1057];
    real _t1059 = 0.e0;
    real _t105A = 0.e0;
    real _t105B = 0.1e1;
    real _t105C = 0.e0;
    vec4 _t105D = [_t1059, _t105A, _t105B, _t105C];
    real _t105E = 0.e0;
    real _t105F = 0.e0;
    real _t1060 = 0.e0;
    real _t1061 = 0.1e1;
    vec4 _t1062 = [_t105E, _t105F, _t1060, _t1061];
    tensor[4,4] _t1063 = [_t1053, _t1058, _t105D, _t1062];
    real _t1064 = 0.e0;
    real _t1065 = -0.1e1;
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    vec4 _t1068 = [_t1064, _t1065, _t1066, _t1067];
    real _t1069 = 0.1e1;
    real _t106A = 0.e0;
    real _t106B = 0.e0;
    real _t106C = 0.e0;
    vec4 _t106D = [_t1069, _t106A, _t106B, _t106C];
    real _t106E = 0.e0;
    real _t106F = 0.e0;
    real _t1070 = 0.1e1;
    real _t1071 = 0.e0;
    vec4 _t1072 = [_t106E, _t106F, _t1070, _t1071];
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    real _t1076 = 0.1e1;
    vec4 _t1077 = [_t1073, _t1074, _t1075, _t1076];
    tensor[4,4] _t1078 = [_t1068, _t106D, _t1072, _t1077];
    real _t1079 = -0.1e1;
    real _t107A = 0.e0;
    real _t107B = 0.e0;
    real _t107C = 0.e0;
    vec4 _t107D = [_t1079, _t107A, _t107B, _t107C];
    real _t107E = 0.e0;
    real _t107F = -0.1e1;
    real _t1080 = 0.e0;
    real _t1081 = 0.e0;
    vec4 _t1082 = [_t107E, _t107F, _t1080, _t1081];
    real _t1083 = 0.e0;
    real _t1084 = 0.e0;
    real _t1085 = 0.1e1;
    real _t1086 = 0.e0;
    vec4 _t1087 = [_t1083, _t1084, _t1085, _t1086];
    real _t1088 = 0.e0;
    real _t1089 = 0.e0;
    real _t108A = 0.e0;
    real _t108B = 0.1e1;
    vec4 _t108C = [_t1088, _t1089, _t108A, _t108B];
    tensor[4,4] _t108D = [_t107D, _t1082, _t1087, _t108C];
    real _t108E = 0.e0;
    real _t108F = 0.1e1;
    real _t1090 = 0.e0;
    real _t1091 = 0.e0;
    vec4 _t1092 = [_t108E, _t108F, _t1090, _t1091];
    real _t1093 = -0.1e1;
    real _t1094 = 0.e0;
    real _t1095 = 0.e0;
    real _t1096 = 0.e0;
    vec4 _t1097 = [_t1093, _t1094, _t1095, _t1096];
    real _t1098 = 0.e0;
    real _t1099 = 0.e0;
    real _t109A = 0.1e1;
    real _t109B = 0.e0;
    vec4 _t109C = [_t1098, _t1099, _t109A, _t109B];
    real _t109D = 0.e0;
    real _t109E = 0.e0;
    real _t109F = 0.e0;
    real _t10A0 = 0.1e1;
    vec4 _t10A1 = [_t109D, _t109E, _t109F, _t10A0];
    tensor[4,4] _t10A2 = [_t1092, _t1097, _t109C, _t10A1];
    tensor[4,4][6] _t10A3 = {_t1039, _t104E, _t1063, _t1078, _t108D, _t10A2};
    real _t10A4 = 0.e0;
    real _t10A5 = 0.1e1;
    real _t10A6 = 0.1e1;
    real _t10A7 = 0.5e0;
    vec4 _t10A8 = [_t10A4, _t10A5, _t10A6, _t10A7];
    real _t10A9 = 0.e0;
    real _t10AA = 0.1e1;
    real _t10AB = 0.e0;
    real _t10AC = 0.e0;
    vec4 _t10AD = [_t10A9, _t10AA, _t10AB, _t10AC];
    real _t10AE = -0.1e1;
    real _t10AF = 0.e0;
    real _t10B0 = 0.e0;
    real _t10B1 = 0.e0;
    vec4 _t10B2 = [_t10AE, _t10AF, _t10B0, _t10B1];
    real _t10B3 = 0.e0;
    real _t10B4 = 0.e0;
    real _t10B5 = 0.e0;
    real _t10B6 = 0.1e1;
    vec4 _t10B7 = [_t10B3, _t10B4, _t10B5, _t10B6];
    tensor[4,4] _t10B8 = [_t10A8, _t10AD, _t10B2, _t10B7];
    real _t10B9 = 0.e0;
    real _t10BA = 0.1e1;
    real _t10BB = 0.1e1;
    real _t10BC = 0.5e0;
    vec4 _t10BD = [_t10B9, _t10BA, _t10BB, _t10BC];
    real _t10BE = 0.e0;
    real _t10BF = 0.1e1;
    real _t10C0 = 0.e0;
    real _t10C1 = 0.e0;
    vec4 _t10C2 = [_t10BE, _t10BF, _t10C0, _t10C1];
    real _t10C3 = -0.1e1;
    real _t10C4 = 0.e0;
    real _t10C5 = 0.e0;
    real _t10C6 = 0.1e1;
    vec4 _t10C7 = [_t10C3, _t10C4, _t10C5, _t10C6];
    real _t10C8 = 0.e0;
    real _t10C9 = 0.e0;
    real _t10CA = 0.e0;
    real _t10CB = 0.1e1;
    vec4 _t10CC = [_t10C8, _t10C9, _t10CA, _t10CB];
    tensor[4,4] _t10CD = [_t10BD, _t10C2, _t10C7, _t10CC];
    real _t10CE = 0.e0;
    real _t10CF = 0.1e1;
    real _t10D0 = 0.e0;
    real _t10D1 = 0.e0;
    vec4 _t10D2 = [_t10CE, _t10CF, _t10D0, _t10D1];
    real _t10D3 = -0.1e1;
    real _t10D4 = 0.e0;
    real _t10D5 = 0.e0;
    real _t10D6 = 0.e0;
    vec4 _t10D7 = [_t10D3, _t10D4, _t10D5, _t10D6];
    real _t10D8 = 0.e0;
    real _t10D9 = 0.e0;
    real _t10DA = 0.1e1;
    real _t10DB = 0.e0;
    vec4 _t10DC = [_t10D8, _t10D9, _t10DA, _t10DB];
    real _t10DD = 0.e0;
    real _t10DE = 0.e0;
    real _t10DF = 0.e0;
    real _t10E0 = 0.1e1;
    vec4 _t10E1 = [_t10DD, _t10DE, _t10DF, _t10E0];
    tensor[4,4] _t10E2 = [_t10D2, _t10D7, _t10DC, _t10E1];
    real _t10E3 = 0.1e1;
    real _t10E4 = 0.e0;
    real _t10E5 = 0.e0;
    real _t10E6 = 0.e0;
    vec4 _t10E7 = [_t10E3, _t10E4, _t10E5, _t10E6];
    real _t10E8 = 0.e0;
    real _t10E9 = 0.1e1;
    real _t10EA = 0.e0;
    real _t10EB = 0.e0;
    vec4 _t10EC = [_t10E8, _t10E9, _t10EA, _t10EB];
    real _t10ED = 0.e0;
    real _t10EE = 0.e0;
    real _t10EF = 0.1e1;
    real _t10F0 = 0.e0;
    vec4 _t10F1 = [_t10ED, _t10EE, _t10EF, _t10F0];
    real _t10F2 = 0.e0;
    real _t10F3 = 0.e0;
    real _t10F4 = 0.e0;
    real _t10F5 = 0.1e1;
    vec4 _t10F6 = [_t10F2, _t10F3, _t10F4, _t10F5];
    tensor[4,4] _t10F7 = [_t10E7, _t10EC, _t10F1, _t10F6];
    real _t10F8 = 0.e0;
    real _t10F9 = -0.1e1;
    real _t10FA = 0.e0;
    real _t10FB = 0.e0;
    vec4 _t10FC = [_t10F8, _t10F9, _t10FA, _t10FB];
    real _t10FD = 0.1e1;
    real _t10FE = 0.e0;
    real _t10FF = 0.e0;
    real _t1100 = 0.e0;
    vec4 _t1101 = [_t10FD, _t10FE, _t10FF, _t1100];
    real _t1102 = 0.e0;
    real _t1103 = 0.e0;
    real _t1104 = 0.1e1;
    real _t1105 = 0.e0;
    vec4 _t1106 = [_t1102, _t1103, _t1104, _t1105];
    real _t1107 = 0.e0;
    real _t1108 = 0.e0;
    real _t1109 = 0.e0;
    real _t110A = 0.1e1;
    vec4 _t110B = [_t1107, _t1108, _t1109, _t110A];
    tensor[4,4] _t110C = [_t10FC, _t1101, _t1106, _t110B];
    real _t110D = -0.1e1;
    real _t110E = 0.e0;
    real _t110F = 0.e0;
    real _t1110 = 0.e0;
    vec4 _t1111 = [_t110D, _t110E, _t110F, _t1110];
    real _t1112 = 0.e0;
    real _t1113 = -0.1e1;
    real _t1114 = 0.e0;
    real _t1115 = 0.e0;
    vec4 _t1116 = [_t1112, _t1113, _t1114, _t1115];
    real _t1117 = 0.e0;
    real _t1118 = 0.e0;
    real _t1119 = 0.1e1;
    real _t111A = 0.e0;
    vec4 _t111B = [_t1117, _t1118, _t1119, _t111A];
    real _t111C = 0.e0;
    real _t111D = 0.e0;
    real _t111E = 0.e0;
    real _t111F = 0.1e1;
    vec4 _t1120 = [_t111C, _t111D, _t111E, _t111F];
    tensor[4,4] _t1121 = [_t1111, _t1116, _t111B, _t1120];
    tensor[4,4][6] _t1122 = {_t10B8, _t10CD, _t10E2, _t10F7, _t110C, _t1121};
    real _t1123 = -0.1e1;
    real _t1124 = 0.e0;
    real _t1125 = 0.1e1;
    real _t1126 = 0.5e0;
    vec4 _t1127 = [_t1123, _t1124, _t1125, _t1126];
    real _t1128 = -0.1e1;
    real _t1129 = 0.e0;
    real _t112A = 0.e0;
    real _t112B = 0.e0;
    vec4 _t112C = [_t1128, _t1129, _t112A, _t112B];
    real _t112D = 0.e0;
    real _t112E = -0.1e1;
    real _t112F = 0.e0;
    real _t1130 = 0.e0;
    vec4 _t1131 = [_t112D, _t112E, _t112F, _t1130];
    real _t1132 = 0.e0;
    real _t1133 = 0.e0;
    real _t1134 = 0.e0;
    real _t1135 = 0.1e1;
    vec4 _t1136 = [_t1132, _t1133, _t1134, _t1135];
    tensor[4,4] _t1137 = [_t1127, _t112C, _t1131, _t1136];
    real _t1138 = -0.1e1;
    real _t1139 = 0.e0;
    real _t113A = 0.1e1;
    real _t113B = 0.5e0;
    vec4 _t113C = [_t1138, _t1139, _t113A, _t113B];
    real _t113D = -0.1e1;
    real _t113E = 0.e0;
    real _t113F = 0.e0;
    real _t1140 = 0.e0;
    vec4 _t1141 = [_t113D, _t113E, _t113F, _t1140];
    real _t1142 = 0.e0;
    real _t1143 = -0.1e1;
    real _t1144 = 0.e0;
    real _t1145 = 0.1e1;
    vec4 _t1146 = [_t1142, _t1143, _t1144, _t1145];
    real _t1147 = 0.e0;
    real _t1148 = 0.e0;
    real _t1149 = 0.e0;
    real _t114A = 0.1e1;
    vec4 _t114B = [_t1147, _t1148, _t1149, _t114A];
    tensor[4,4] _t114C = [_t113C, _t1141, _t1146, _t114B];
    real _t114D = -0.1e1;
    real _t114E = 0.e0;
    real _t114F = 0.e0;
    real _t1150 = 0.e0;
    vec4 _t1151 = [_t114D, _t114E, _t114F, _t1150];
    real _t1152 = 0.e0;
    real _t1153 = -0.1e1;
    real _t1154 = 0.e0;
    real _t1155 = 0.e0;
    vec4 _t1156 = [_t1152, _t1153, _t1154, _t1155];
    real _t1157 = 0.e0;
    real _t1158 = 0.e0;
    real _t1159 = 0.1e1;
    real _t115A = 0.e0;
    vec4 _t115B = [_t1157, _t1158, _t1159, _t115A];
    real _t115C = 0.e0;
    real _t115D = 0.e0;
    real _t115E = 0.e0;
    real _t115F = 0.1e1;
    vec4 _t1160 = [_t115C, _t115D, _t115E, _t115F];
    tensor[4,4] _t1161 = [_t1151, _t1156, _t115B, _t1160];
    real _t1162 = 0.e0;
    real _t1163 = 0.1e1;
    real _t1164 = 0.e0;
    real _t1165 = 0.e0;
    vec4 _t1166 = [_t1162, _t1163, _t1164, _t1165];
    real _t1167 = -0.1e1;
    real _t1168 = 0.e0;
    real _t1169 = 0.e0;
    real _t116A = 0.e0;
    vec4 _t116B = [_t1167, _t1168, _t1169, _t116A];
    real _t116C = 0.e0;
    real _t116D = 0.e0;
    real _t116E = 0.1e1;
    real _t116F = 0.e0;
    vec4 _t1170 = [_t116C, _t116D, _t116E, _t116F];
    real _t1171 = 0.e0;
    real _t1172 = 0.e0;
    real _t1173 = 0.e0;
    real _t1174 = 0.1e1;
    vec4 _t1175 = [_t1171, _t1172, _t1173, _t1174];
    tensor[4,4] _t1176 = [_t1166, _t116B, _t1170, _t1175];
    real _t1177 = 0.1e1;
    real _t1178 = 0.e0;
    real _t1179 = 0.e0;
    real _t117A = 0.e0;
    vec4 _t117B = [_t1177, _t1178, _t1179, _t117A];
    real _t117C = 0.e0;
    real _t117D = 0.1e1;
    real _t117E = 0.e0;
    real _t117F = 0.e0;
    vec4 _t1180 = [_t117C, _t117D, _t117E, _t117F];
    real _t1181 = 0.e0;
    real _t1182 = 0.e0;
    real _t1183 = 0.1e1;
    real _t1184 = 0.e0;
    vec4 _t1185 = [_t1181, _t1182, _t1183, _t1184];
    real _t1186 = 0.e0;
    real _t1187 = 0.e0;
    real _t1188 = 0.e0;
    real _t1189 = 0.1e1;
    vec4 _t118A = [_t1186, _t1187, _t1188, _t1189];
    tensor[4,4] _t118B = [_t117B, _t1180, _t1185, _t118A];
    real _t118C = 0.e0;
    real _t118D = -0.1e1;
    real _t118E = 0.e0;
    real _t118F = 0.e0;
    vec4 _t1190 = [_t118C, _t118D, _t118E, _t118F];
    real _t1191 = 0.1e1;
    real _t1192 = 0.e0;
    real _t1193 = 0.e0;
    real _t1194 = 0.e0;
    vec4 _t1195 = [_t1191, _t1192, _t1193, _t1194];
    real _t1196 = 0.e0;
    real _t1197 = 0.e0;
    real _t1198 = 0.1e1;
    real _t1199 = 0.e0;
    vec4 _t119A = [_t1196, _t1197, _t1198, _t1199];
    real _t119B = 0.e0;
    real _t119C = 0.e0;
    real _t119D = 0.e0;
    real _t119E = 0.1e1;
    vec4 _t119F = [_t119B, _t119C, _t119D, _t119E];
    tensor[4,4] _t11A0 = [_t1190, _t1195, _t119A, _t119F];
    tensor[4,4][6] _t11A1 = {_t1137, _t114C, _t1161, _t1176, _t118B, _t11A0};
    real _t11A2 = 0.e0;
    real _t11A3 = -0.1e1;
    real _t11A4 = 0.1e1;
    real _t11A5 = 0.5e0;
    vec4 _t11A6 = [_t11A2, _t11A3, _t11A4, _t11A5];
    real _t11A7 = 0.e0;
    real _t11A8 = -0.1e1;
    real _t11A9 = 0.e0;
    real _t11AA = 0.e0;
    vec4 _t11AB = [_t11A7, _t11A8, _t11A9, _t11AA];
    real _t11AC = 0.1e1;
    real _t11AD = 0.e0;
    real _t11AE = 0.e0;
    real _t11AF = 0.e0;
    vec4 _t11B0 = [_t11AC, _t11AD, _t11AE, _t11AF];
    real _t11B1 = 0.e0;
    real _t11B2 = 0.e0;
    real _t11B3 = 0.e0;
    real _t11B4 = 0.1e1;
    vec4 _t11B5 = [_t11B1, _t11B2, _t11B3, _t11B4];
    tensor[4,4] _t11B6 = [_t11A6, _t11AB, _t11B0, _t11B5];
    real _t11B7 = 0.e0;
    real _t11B8 = -0.1e1;
    real _t11B9 = 0.1e1;
    real _t11BA = 0.5e0;
    vec4 _t11BB = [_t11B7, _t11B8, _t11B9, _t11BA];
    real _t11BC = 0.e0;
    real _t11BD = -0.1e1;
    real _t11BE = 0.e0;
    real _t11BF = 0.e0;
    vec4 _t11C0 = [_t11BC, _t11BD, _t11BE, _t11BF];
    real _t11C1 = 0.1e1;
    real _t11C2 = 0.e0;
    real _t11C3 = 0.e0;
    real _t11C4 = 0.1e1;
    vec4 _t11C5 = [_t11C1, _t11C2, _t11C3, _t11C4];
    real _t11C6 = 0.e0;
    real _t11C7 = 0.e0;
    real _t11C8 = 0.e0;
    real _t11C9 = 0.1e1;
    vec4 _t11CA = [_t11C6, _t11C7, _t11C8, _t11C9];
    tensor[4,4] _t11CB = [_t11BB, _t11C0, _t11C5, _t11CA];
    real _t11CC = 0.e0;
    real _t11CD = -0.1e1;
    real _t11CE = 0.e0;
    real _t11CF = 0.e0;
    vec4 _t11D0 = [_t11CC, _t11CD, _t11CE, _t11CF];
    real _t11D1 = 0.1e1;
    real _t11D2 = 0.e0;
    real _t11D3 = 0.e0;
    real _t11D4 = 0.e0;
    vec4 _t11D5 = [_t11D1, _t11D2, _t11D3, _t11D4];
    real _t11D6 = 0.e0;
    real _t11D7 = 0.e0;
    real _t11D8 = 0.1e1;
    real _t11D9 = 0.e0;
    vec4 _t11DA = [_t11D6, _t11D7, _t11D8, _t11D9];
    real _t11DB = 0.e0;
    real _t11DC = 0.e0;
    real _t11DD = 0.e0;
    real _t11DE = 0.1e1;
    vec4 _t11DF = [_t11DB, _t11DC, _t11DD, _t11DE];
    tensor[4,4] _t11E0 = [_t11D0, _t11D5, _t11DA, _t11DF];
    real _t11E1 = -0.1e1;
    real _t11E2 = 0.e0;
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    vec4 _t11E5 = [_t11E1, _t11E2, _t11E3, _t11E4];
    real _t11E6 = 0.e0;
    real _t11E7 = -0.1e1;
    real _t11E8 = 0.e0;
    real _t11E9 = 0.e0;
    vec4 _t11EA = [_t11E6, _t11E7, _t11E8, _t11E9];
    real _t11EB = 0.e0;
    real _t11EC = 0.e0;
    real _t11ED = 0.1e1;
    real _t11EE = 0.e0;
    vec4 _t11EF = [_t11EB, _t11EC, _t11ED, _t11EE];
    real _t11F0 = 0.e0;
    real _t11F1 = 0.e0;
    real _t11F2 = 0.e0;
    real _t11F3 = 0.1e1;
    vec4 _t11F4 = [_t11F0, _t11F1, _t11F2, _t11F3];
    tensor[4,4] _t11F5 = [_t11E5, _t11EA, _t11EF, _t11F4];
    real _t11F6 = 0.e0;
    real _t11F7 = 0.1e1;
    real _t11F8 = 0.e0;
    real _t11F9 = 0.e0;
    vec4 _t11FA = [_t11F6, _t11F7, _t11F8, _t11F9];
    real _t11FB = -0.1e1;
    real _t11FC = 0.e0;
    real _t11FD = 0.e0;
    real _t11FE = 0.e0;
    vec4 _t11FF = [_t11FB, _t11FC, _t11FD, _t11FE];
    real _t1200 = 0.e0;
    real _t1201 = 0.e0;
    real _t1202 = 0.1e1;
    real _t1203 = 0.e0;
    vec4 _t1204 = [_t1200, _t1201, _t1202, _t1203];
    real _t1205 = 0.e0;
    real _t1206 = 0.e0;
    real _t1207 = 0.e0;
    real _t1208 = 0.1e1;
    vec4 _t1209 = [_t1205, _t1206, _t1207, _t1208];
    tensor[4,4] _t120A = [_t11FA, _t11FF, _t1204, _t1209];
    real _t120B = 0.1e1;
    real _t120C = 0.e0;
    real _t120D = 0.e0;
    real _t120E = 0.e0;
    vec4 _t120F = [_t120B, _t120C, _t120D, _t120E];
    real _t1210 = 0.e0;
    real _t1211 = 0.1e1;
    real _t1212 = 0.e0;
    real _t1213 = 0.e0;
    vec4 _t1214 = [_t1210, _t1211, _t1212, _t1213];
    real _t1215 = 0.e0;
    real _t1216 = 0.e0;
    real _t1217 = 0.1e1;
    real _t1218 = 0.e0;
    vec4 _t1219 = [_t1215, _t1216, _t1217, _t1218];
    real _t121A = 0.e0;
    real _t121B = 0.e0;
    real _t121C = 0.e0;
    real _t121D = 0.1e1;
    vec4 _t121E = [_t121A, _t121B, _t121C, _t121D];
    tensor[4,4] _t121F = [_t120F, _t1214, _t1219, _t121E];
    tensor[4,4][6] _t1220 = {_t11B6, _t11CB, _t11E0, _t11F5, _t120A, _t121F};
    tensor[4,4][6][6] _t1221 = {_t0FA5, _t1024, _t10A3, _t1122, _t11A1, _t1220};
    real _t1222 = time05E1[1];
    int _t1223 = prim $r2i01B7 (_t1222);
    tensor[4,4][6] _t1224 = prim $sub01C0<tensor[4,4][6]; %6> (_t1221, _t1223);
    real _t1225 = time05E1[1];
    int _t1226 = prim $r2i01B7 (_t1225);
    int[2] _t1227 = func nextCell405E5 (_t1226, cellId05DE, mesh05DD);
    int _t1228 = 1;
    int _t1229 = prim $sub01C0<int; %2> (_t1227, _t1228);
    tensor[4,4] _t122A = prim $sub01C0<tensor[4,4]; %6> (_t1224, _t1229);
    real _t122B = time05E1[0];
    vec3 _t122C = prim *0036<$[3]> (_t122B, dPos05E0);
    vec3 _t122D = prim +0017<$[3]> (_t122C, refPos05DF);
    real _t122E = _t122D[0];
    real _t122F = time05E1[0];
    vec3 _t1230 = prim *0036<$[3]> (_t122F, dPos05E0);
    vec3 _t1231 = prim +0017<$[3]> (_t1230, refPos05DF);
    real _t1232 = _t1231[1];
    real _t1233 = time05E1[0];
    vec3 _t1234 = prim *0036<$[3]> (_t1233, dPos05E0);
    vec3 _t1235 = prim +0017<$[3]> (_t1234, refPos05DF);
    real _t1236 = _t1235[2];
    real _t1237 = 0.1e1;
    vec4 _t1238 = [_t122E, _t1232, _t1236, _t1237];
    vec4 _t1239 = prim •00CE<$[4,4]; $[4]; $[4]> (_t122A, _t1238);
    real _t123A = _t1239[2];
    vec3 _t123B = [_t0C12, _t0F26, _t123A];
    real _t123C = time05E1[1];
    int _t123D = prim $r2i01B7 (_t123C);
    int[2] _t123E = func nextCell405E5 (_t123D, cellId05DE, mesh05DD);
    int _t123F = 1;
    int _t1240 = prim $sub01C0<int; %2> (_t123E, _t123F);
    Femdata: MeshPos _t1241 = extractFemItemN((mesh05DD, _t08FE, _t123B, _t1240),RefBuild(Mesh),);
    return _t1241;
  } else {
    real _t1242 = time05E1[0];
    vec3 _t1243 = prim *0036<$[3]> (_t1242, dPos05E0);
    vec3 _t1244 = prim +0017<$[3]> (_t1243, refPos05DF);
    Femdata: MeshPos _t1245 = extractFemItemN((mesh05DD, _t1244),InvalidBuildBoundary(MeshPos),);
    return _t1245;
  }
}
function int[2]#8 nextCell405E5 (int faceIdx1246, int cell1247, Femdata: Mesh mesh1248)
{
  int _t1249 = 12;
  int _t124A = prim *0033 (cell1247, _t1249);
  int _t124B = 2;
  int _t124C = prim *0033 (faceIdx1246, _t124B);
  int _t124D = prim +0015 (_t124A, _t124C);
  int[2] _t124E = extractFemItemN((mesh1248, _t124D),CellFaceCell(Mesh),);
  return _t124E;
}
function vec2#0 _enter124F (vec3 refPos1250, vec3 dPos1251)
{
  real time1252 = +inf;
  int face1253 = -1;
  real faceTime1254 = -inf;
  real _t1255 = -0.5e0;
  real _t1256 = 0.e0;
  real _t1257 = 0.e0;
  real _t1258 = 0.1e1;
  vec3 _t1259 = [_t1256, _t1257, _t1258];
  real _t125A = prim •00CE<$[3]; $[3]; $[]> (_t1259, refPos1250);
  real _t125B = prim -0026<$[]> (_t1255, _t125A);
  real _t125C = 0.e0;
  real _t125D = 0.e0;
  real _t125E = 0.1e1;
  vec3 _t125F = [_t125C, _t125D, _t125E];
  real _t1260 = prim •00CE<$[3]; $[3]; $[]> (_t125F, dPos1251);
  real _t1261 = prim /0055 (_t125B, _t1260);
  real _t1262 = -0.1e-15;
  bool _t1263 = prim >=007E (_t1261, _t1262);
  real _t1264 = -0.5e0;
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  real _t1267 = 0.1e1;
  vec3 _t1268 = [_t1265, _t1266, _t1267];
  real _t1269 = prim •00CE<$[3]; $[3]; $[]> (_t1268, refPos1250);
  real _t126A = prim -0026<$[]> (_t1264, _t1269);
  real _t126B = 0.e0;
  real _t126C = 0.e0;
  real _t126D = 0.1e1;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, dPos1251);
  real _t1270 = prim /0055 (_t126A, _t126F);
  bool _t1271 = prim >0080 (time1252, _t1270);
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  real _t1274 = 0.1e1;
  vec3 _t1275 = [_t1272, _t1273, _t1274];
  real _t1276 = prim •00CE<$[3]; $[3]; $[]> (_t1275, dPos1251);
  real _t1277 = prim |()|00B5<$[]> (_t1276);
  real _t1278 = 0.1e-20;
  bool _t1279 = prim >=007E (_t1277, _t1278);
  bool _t127A = prim $and01C4 (_t1271, _t1279);
  bool _t127B = prim $and01C4 (_t1263, _t127A);
  if _t127B {
    real _t127C = -0.5e0;
    real _t127D = 0.e0;
    real _t127E = 0.e0;
    real _t127F = 0.1e1;
    vec3 _t1280 = [_t127D, _t127E, _t127F];
    real _t1281 = prim •00CE<$[3]; $[3]; $[]> (_t1280, refPos1250);
    real _t1282 = prim -0026<$[]> (_t127C, _t1281);
    real _t1283 = 0.e0;
    real _t1284 = 0.e0;
    real _t1285 = 0.1e1;
    vec3 _t1286 = [_t1283, _t1284, _t1285];
    real _t1287 = prim •00CE<$[3]; $[3]; $[]> (_t1286, dPos1251);
    real _t1288 = prim /0055 (_t1282, _t1287);
    vec3 _t1289 = prim *0038<$[3]> (dPos1251, _t1288);
    vec3 _t128A = prim +0017<$[3]> (refPos1250, _t1289);
    real _t128B = -0.5e0;
    real _t128C = 0.e0;
    real _t128D = 0.e0;
    real _t128E = 0.1e1;
    vec3 _t128F = [_t128C, _t128D, _t128E];
    real _t1290 = prim •00CE<$[3]; $[3]; $[]> (_t128F, refPos1250);
    real _t1291 = prim -0026<$[]> (_t128B, _t1290);
    real _t1292 = 0.e0;
    real _t1293 = 0.e0;
    real _t1294 = 0.1e1;
    vec3 _t1295 = [_t1292, _t1293, _t1294];
    real _t1296 = prim •00CE<$[3]; $[3]; $[]> (_t1295, dPos1251);
    real _t1297 = prim /0055 (_t1291, _t1296);
    vec3 _t1298 = prim *0038<$[3]> (dPos1251, _t1297);
    vec3 _t1299 = prim +0017<$[3]> (refPos1250, _t1298);
    real _t129A = 0.1e-8;
    bool _t129B = extractFemItemN((_t128A, _t1299, _t129A),InsideInsert(File=checkInside.in)(Mesh),);
    if _t129B {
      real _t129C = -0.5e0;
      real _t129D = 0.e0;
      real _t129E = 0.e0;
      real _t129F = 0.1e1;
      vec3 _t12A0 = [_t129D, _t129E, _t129F];
      real _t12A1 = prim •00CE<$[3]; $[3]; $[]> (_t12A0, refPos1250);
      real _t12A2 = prim -0026<$[]> (_t129C, _t12A1);
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      real _t12A5 = 0.1e1;
      vec3 _t12A6 = [_t12A3, _t12A4, _t12A5];
      real _t12A7 = prim •00CE<$[3]; $[3]; $[]> (_t12A6, dPos1251);
      time1252 = prim /0055 (_t12A2, _t12A7);
      face1253 = 0;
    }
  }
  real _t12A8 = 0.5e0;
  real _t12A9 = 0.e0;
  real _t12AA = 0.e0;
  real _t12AB = 0.1e1;
  vec3 _t12AC = [_t12A9, _t12AA, _t12AB];
  real _t12AD = prim •00CE<$[3]; $[3]; $[]> (_t12AC, refPos1250);
  real _t12AE = prim -0026<$[]> (_t12A8, _t12AD);
  real _t12AF = 0.e0;
  real _t12B0 = 0.e0;
  real _t12B1 = 0.1e1;
  vec3 _t12B2 = [_t12AF, _t12B0, _t12B1];
  real _t12B3 = prim •00CE<$[3]; $[3]; $[]> (_t12B2, dPos1251);
  real _t12B4 = prim /0055 (_t12AE, _t12B3);
  real _t12B5 = -0.1e-15;
  bool _t12B6 = prim >=007E (_t12B4, _t12B5);
  real _t12B7 = 0.5e0;
  real _t12B8 = 0.e0;
  real _t12B9 = 0.e0;
  real _t12BA = 0.1e1;
  vec3 _t12BB = [_t12B8, _t12B9, _t12BA];
  real _t12BC = prim •00CE<$[3]; $[3]; $[]> (_t12BB, refPos1250);
  real _t12BD = prim -0026<$[]> (_t12B7, _t12BC);
  real _t12BE = 0.e0;
  real _t12BF = 0.e0;
  real _t12C0 = 0.1e1;
  vec3 _t12C1 = [_t12BE, _t12BF, _t12C0];
  real _t12C2 = prim •00CE<$[3]; $[3]; $[]> (_t12C1, dPos1251);
  real _t12C3 = prim /0055 (_t12BD, _t12C2);
  bool _t12C4 = prim >0080 (time1252, _t12C3);
  real _t12C5 = 0.e0;
  real _t12C6 = 0.e0;
  real _t12C7 = 0.1e1;
  vec3 _t12C8 = [_t12C5, _t12C6, _t12C7];
  real _t12C9 = prim •00CE<$[3]; $[3]; $[]> (_t12C8, dPos1251);
  real _t12CA = prim |()|00B5<$[]> (_t12C9);
  real _t12CB = 0.1e-20;
  bool _t12CC = prim >=007E (_t12CA, _t12CB);
  bool _t12CD = prim $and01C4 (_t12C4, _t12CC);
  bool _t12CE = prim $and01C4 (_t12B6, _t12CD);
  if _t12CE {
    real _t12CF = 0.5e0;
    real _t12D0 = 0.e0;
    real _t12D1 = 0.e0;
    real _t12D2 = 0.1e1;
    vec3 _t12D3 = [_t12D0, _t12D1, _t12D2];
    real _t12D4 = prim •00CE<$[3]; $[3]; $[]> (_t12D3, refPos1250);
    real _t12D5 = prim -0026<$[]> (_t12CF, _t12D4);
    real _t12D6 = 0.e0;
    real _t12D7 = 0.e0;
    real _t12D8 = 0.1e1;
    vec3 _t12D9 = [_t12D6, _t12D7, _t12D8];
    real _t12DA = prim •00CE<$[3]; $[3]; $[]> (_t12D9, dPos1251);
    real _t12DB = prim /0055 (_t12D5, _t12DA);
    vec3 _t12DC = prim *0038<$[3]> (dPos1251, _t12DB);
    vec3 _t12DD = prim +0017<$[3]> (refPos1250, _t12DC);
    real _t12DE = 0.5e0;
    real _t12DF = 0.e0;
    real _t12E0 = 0.e0;
    real _t12E1 = 0.1e1;
    vec3 _t12E2 = [_t12DF, _t12E0, _t12E1];
    real _t12E3 = prim •00CE<$[3]; $[3]; $[]> (_t12E2, refPos1250);
    real _t12E4 = prim -0026<$[]> (_t12DE, _t12E3);
    real _t12E5 = 0.e0;
    real _t12E6 = 0.e0;
    real _t12E7 = 0.1e1;
    vec3 _t12E8 = [_t12E5, _t12E6, _t12E7];
    real _t12E9 = prim •00CE<$[3]; $[3]; $[]> (_t12E8, dPos1251);
    real _t12EA = prim /0055 (_t12E4, _t12E9);
    vec3 _t12EB = prim *0038<$[3]> (dPos1251, _t12EA);
    vec3 _t12EC = prim +0017<$[3]> (refPos1250, _t12EB);
    real _t12ED = 0.1e-8;
    bool _t12EE = extractFemItemN((_t12DD, _t12EC, _t12ED),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12EE {
      real _t12EF = 0.5e0;
      real _t12F0 = 0.e0;
      real _t12F1 = 0.e0;
      real _t12F2 = 0.1e1;
      vec3 _t12F3 = [_t12F0, _t12F1, _t12F2];
      real _t12F4 = prim •00CE<$[3]; $[3]; $[]> (_t12F3, refPos1250);
      real _t12F5 = prim -0026<$[]> (_t12EF, _t12F4);
      real _t12F6 = 0.e0;
      real _t12F7 = 0.e0;
      real _t12F8 = 0.1e1;
      vec3 _t12F9 = [_t12F6, _t12F7, _t12F8];
      real _t12FA = prim •00CE<$[3]; $[3]; $[]> (_t12F9, dPos1251);
      time1252 = prim /0055 (_t12F5, _t12FA);
      face1253 = 1;
    }
  }
  real _t12FB = -0.5e0;
  real _t12FC = 0.e0;
  real _t12FD = 0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos1250);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = 0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos1251);
  real _t1307 = prim /0055 (_t1301, _t1306);
  real _t1308 = -0.1e-15;
  bool _t1309 = prim >=007E (_t1307, _t1308);
  real _t130A = -0.5e0;
  real _t130B = 0.e0;
  real _t130C = 0.1e1;
  real _t130D = 0.e0;
  vec3 _t130E = [_t130B, _t130C, _t130D];
  real _t130F = prim •00CE<$[3]; $[3]; $[]> (_t130E, refPos1250);
  real _t1310 = prim -0026<$[]> (_t130A, _t130F);
  real _t1311 = 0.e0;
  real _t1312 = 0.1e1;
  real _t1313 = 0.e0;
  vec3 _t1314 = [_t1311, _t1312, _t1313];
  real _t1315 = prim •00CE<$[3]; $[3]; $[]> (_t1314, dPos1251);
  real _t1316 = prim /0055 (_t1310, _t1315);
  bool _t1317 = prim >0080 (time1252, _t1316);
  real _t1318 = 0.e0;
  real _t1319 = 0.1e1;
  real _t131A = 0.e0;
  vec3 _t131B = [_t1318, _t1319, _t131A];
  real _t131C = prim •00CE<$[3]; $[3]; $[]> (_t131B, dPos1251);
  real _t131D = prim |()|00B5<$[]> (_t131C);
  real _t131E = 0.1e-20;
  bool _t131F = prim >=007E (_t131D, _t131E);
  bool _t1320 = prim $and01C4 (_t1317, _t131F);
  bool _t1321 = prim $and01C4 (_t1309, _t1320);
  if _t1321 {
    real _t1322 = -0.5e0;
    real _t1323 = 0.e0;
    real _t1324 = 0.1e1;
    real _t1325 = 0.e0;
    vec3 _t1326 = [_t1323, _t1324, _t1325];
    real _t1327 = prim •00CE<$[3]; $[3]; $[]> (_t1326, refPos1250);
    real _t1328 = prim -0026<$[]> (_t1322, _t1327);
    real _t1329 = 0.e0;
    real _t132A = 0.1e1;
    real _t132B = 0.e0;
    vec3 _t132C = [_t1329, _t132A, _t132B];
    real _t132D = prim •00CE<$[3]; $[3]; $[]> (_t132C, dPos1251);
    real _t132E = prim /0055 (_t1328, _t132D);
    vec3 _t132F = prim *0038<$[3]> (dPos1251, _t132E);
    vec3 _t1330 = prim +0017<$[3]> (refPos1250, _t132F);
    real _t1331 = -0.5e0;
    real _t1332 = 0.e0;
    real _t1333 = 0.1e1;
    real _t1334 = 0.e0;
    vec3 _t1335 = [_t1332, _t1333, _t1334];
    real _t1336 = prim •00CE<$[3]; $[3]; $[]> (_t1335, refPos1250);
    real _t1337 = prim -0026<$[]> (_t1331, _t1336);
    real _t1338 = 0.e0;
    real _t1339 = 0.1e1;
    real _t133A = 0.e0;
    vec3 _t133B = [_t1338, _t1339, _t133A];
    real _t133C = prim •00CE<$[3]; $[3]; $[]> (_t133B, dPos1251);
    real _t133D = prim /0055 (_t1337, _t133C);
    vec3 _t133E = prim *0038<$[3]> (dPos1251, _t133D);
    vec3 _t133F = prim +0017<$[3]> (refPos1250, _t133E);
    real _t1340 = 0.1e-8;
    bool _t1341 = extractFemItemN((_t1330, _t133F, _t1340),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1341 {
      real _t1342 = -0.5e0;
      real _t1343 = 0.e0;
      real _t1344 = 0.1e1;
      real _t1345 = 0.e0;
      vec3 _t1346 = [_t1343, _t1344, _t1345];
      real _t1347 = prim •00CE<$[3]; $[3]; $[]> (_t1346, refPos1250);
      real _t1348 = prim -0026<$[]> (_t1342, _t1347);
      real _t1349 = 0.e0;
      real _t134A = 0.1e1;
      real _t134B = 0.e0;
      vec3 _t134C = [_t1349, _t134A, _t134B];
      real _t134D = prim •00CE<$[3]; $[3]; $[]> (_t134C, dPos1251);
      time1252 = prim /0055 (_t1348, _t134D);
      face1253 = 2;
    }
  }
  real _t134E = -0.5e0;
  real _t134F = -0.1e1;
  real _t1350 = 0.e0;
  real _t1351 = 0.e0;
  vec3 _t1352 = [_t134F, _t1350, _t1351];
  real _t1353 = prim •00CE<$[3]; $[3]; $[]> (_t1352, refPos1250);
  real _t1354 = prim -0026<$[]> (_t134E, _t1353);
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  real _t1357 = 0.e0;
  vec3 _t1358 = [_t1355, _t1356, _t1357];
  real _t1359 = prim •00CE<$[3]; $[3]; $[]> (_t1358, dPos1251);
  real _t135A = prim /0055 (_t1354, _t1359);
  real _t135B = -0.1e-15;
  bool _t135C = prim >=007E (_t135A, _t135B);
  real _t135D = -0.5e0;
  real _t135E = -0.1e1;
  real _t135F = 0.e0;
  real _t1360 = 0.e0;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = prim •00CE<$[3]; $[3]; $[]> (_t1361, refPos1250);
  real _t1363 = prim -0026<$[]> (_t135D, _t1362);
  real _t1364 = -0.1e1;
  real _t1365 = 0.e0;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = prim •00CE<$[3]; $[3]; $[]> (_t1367, dPos1251);
  real _t1369 = prim /0055 (_t1363, _t1368);
  bool _t136A = prim >0080 (time1252, _t1369);
  real _t136B = -0.1e1;
  real _t136C = 0.e0;
  real _t136D = 0.e0;
  vec3 _t136E = [_t136B, _t136C, _t136D];
  real _t136F = prim •00CE<$[3]; $[3]; $[]> (_t136E, dPos1251);
  real _t1370 = prim |()|00B5<$[]> (_t136F);
  real _t1371 = 0.1e-20;
  bool _t1372 = prim >=007E (_t1370, _t1371);
  bool _t1373 = prim $and01C4 (_t136A, _t1372);
  bool _t1374 = prim $and01C4 (_t135C, _t1373);
  if _t1374 {
    real _t1375 = -0.5e0;
    real _t1376 = -0.1e1;
    real _t1377 = 0.e0;
    real _t1378 = 0.e0;
    vec3 _t1379 = [_t1376, _t1377, _t1378];
    real _t137A = prim •00CE<$[3]; $[3]; $[]> (_t1379, refPos1250);
    real _t137B = prim -0026<$[]> (_t1375, _t137A);
    real _t137C = -0.1e1;
    real _t137D = 0.e0;
    real _t137E = 0.e0;
    vec3 _t137F = [_t137C, _t137D, _t137E];
    real _t1380 = prim •00CE<$[3]; $[3]; $[]> (_t137F, dPos1251);
    real _t1381 = prim /0055 (_t137B, _t1380);
    vec3 _t1382 = prim *0038<$[3]> (dPos1251, _t1381);
    vec3 _t1383 = prim +0017<$[3]> (refPos1250, _t1382);
    real _t1384 = -0.5e0;
    real _t1385 = -0.1e1;
    real _t1386 = 0.e0;
    real _t1387 = 0.e0;
    vec3 _t1388 = [_t1385, _t1386, _t1387];
    real _t1389 = prim •00CE<$[3]; $[3]; $[]> (_t1388, refPos1250);
    real _t138A = prim -0026<$[]> (_t1384, _t1389);
    real _t138B = -0.1e1;
    real _t138C = 0.e0;
    real _t138D = 0.e0;
    vec3 _t138E = [_t138B, _t138C, _t138D];
    real _t138F = prim •00CE<$[3]; $[3]; $[]> (_t138E, dPos1251);
    real _t1390 = prim /0055 (_t138A, _t138F);
    vec3 _t1391 = prim *0038<$[3]> (dPos1251, _t1390);
    vec3 _t1392 = prim +0017<$[3]> (refPos1250, _t1391);
    real _t1393 = 0.1e-8;
    bool _t1394 = extractFemItemN((_t1383, _t1392, _t1393),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1394 {
      real _t1395 = -0.5e0;
      real _t1396 = -0.1e1;
      real _t1397 = 0.e0;
      real _t1398 = 0.e0;
      vec3 _t1399 = [_t1396, _t1397, _t1398];
      real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, refPos1250);
      real _t139B = prim -0026<$[]> (_t1395, _t139A);
      real _t139C = -0.1e1;
      real _t139D = 0.e0;
      real _t139E = 0.e0;
      vec3 _t139F = [_t139C, _t139D, _t139E];
      real _t13A0 = prim •00CE<$[3]; $[3]; $[]> (_t139F, dPos1251);
      time1252 = prim /0055 (_t139B, _t13A0);
      face1253 = 3;
    }
  }
  real _t13A1 = -0.5e0;
  real _t13A2 = 0.e0;
  real _t13A3 = -0.1e1;
  real _t13A4 = 0.e0;
  vec3 _t13A5 = [_t13A2, _t13A3, _t13A4];
  real _t13A6 = prim •00CE<$[3]; $[3]; $[]> (_t13A5, refPos1250);
  real _t13A7 = prim -0026<$[]> (_t13A1, _t13A6);
  real _t13A8 = 0.e0;
  real _t13A9 = -0.1e1;
  real _t13AA = 0.e0;
  vec3 _t13AB = [_t13A8, _t13A9, _t13AA];
  real _t13AC = prim •00CE<$[3]; $[3]; $[]> (_t13AB, dPos1251);
  real _t13AD = prim /0055 (_t13A7, _t13AC);
  real _t13AE = -0.1e-15;
  bool _t13AF = prim >=007E (_t13AD, _t13AE);
  real _t13B0 = -0.5e0;
  real _t13B1 = 0.e0;
  real _t13B2 = -0.1e1;
  real _t13B3 = 0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, refPos1250);
  real _t13B6 = prim -0026<$[]> (_t13B0, _t13B5);
  real _t13B7 = 0.e0;
  real _t13B8 = -0.1e1;
  real _t13B9 = 0.e0;
  vec3 _t13BA = [_t13B7, _t13B8, _t13B9];
  real _t13BB = prim •00CE<$[3]; $[3]; $[]> (_t13BA, dPos1251);
  real _t13BC = prim /0055 (_t13B6, _t13BB);
  bool _t13BD = prim >0080 (time1252, _t13BC);
  real _t13BE = 0.e0;
  real _t13BF = -0.1e1;
  real _t13C0 = 0.e0;
  vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
  real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos1251);
  real _t13C3 = prim |()|00B5<$[]> (_t13C2);
  real _t13C4 = 0.1e-20;
  bool _t13C5 = prim >=007E (_t13C3, _t13C4);
  bool _t13C6 = prim $and01C4 (_t13BD, _t13C5);
  bool _t13C7 = prim $and01C4 (_t13AF, _t13C6);
  if _t13C7 {
    real _t13C8 = -0.5e0;
    real _t13C9 = 0.e0;
    real _t13CA = -0.1e1;
    real _t13CB = 0.e0;
    vec3 _t13CC = [_t13C9, _t13CA, _t13CB];
    real _t13CD = prim •00CE<$[3]; $[3]; $[]> (_t13CC, refPos1250);
    real _t13CE = prim -0026<$[]> (_t13C8, _t13CD);
    real _t13CF = 0.e0;
    real _t13D0 = -0.1e1;
    real _t13D1 = 0.e0;
    vec3 _t13D2 = [_t13CF, _t13D0, _t13D1];
    real _t13D3 = prim •00CE<$[3]; $[3]; $[]> (_t13D2, dPos1251);
    real _t13D4 = prim /0055 (_t13CE, _t13D3);
    vec3 _t13D5 = prim *0038<$[3]> (dPos1251, _t13D4);
    vec3 _t13D6 = prim +0017<$[3]> (refPos1250, _t13D5);
    real _t13D7 = -0.5e0;
    real _t13D8 = 0.e0;
    real _t13D9 = -0.1e1;
    real _t13DA = 0.e0;
    vec3 _t13DB = [_t13D8, _t13D9, _t13DA];
    real _t13DC = prim •00CE<$[3]; $[3]; $[]> (_t13DB, refPos1250);
    real _t13DD = prim -0026<$[]> (_t13D7, _t13DC);
    real _t13DE = 0.e0;
    real _t13DF = -0.1e1;
    real _t13E0 = 0.e0;
    vec3 _t13E1 = [_t13DE, _t13DF, _t13E0];
    real _t13E2 = prim •00CE<$[3]; $[3]; $[]> (_t13E1, dPos1251);
    real _t13E3 = prim /0055 (_t13DD, _t13E2);
    vec3 _t13E4 = prim *0038<$[3]> (dPos1251, _t13E3);
    vec3 _t13E5 = prim +0017<$[3]> (refPos1250, _t13E4);
    real _t13E6 = 0.1e-8;
    bool _t13E7 = extractFemItemN((_t13D6, _t13E5, _t13E6),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13E7 {
      real _t13E8 = -0.5e0;
      real _t13E9 = 0.e0;
      real _t13EA = -0.1e1;
      real _t13EB = 0.e0;
      vec3 _t13EC = [_t13E9, _t13EA, _t13EB];
      real _t13ED = prim •00CE<$[3]; $[3]; $[]> (_t13EC, refPos1250);
      real _t13EE = prim -0026<$[]> (_t13E8, _t13ED);
      real _t13EF = 0.e0;
      real _t13F0 = -0.1e1;
      real _t13F1 = 0.e0;
      vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
      real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos1251);
      time1252 = prim /0055 (_t13EE, _t13F3);
      face1253 = 4;
    }
  }
  real _t13F4 = -0.5e0;
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.e0;
  real _t13F7 = -0.e0;
  vec3 _t13F8 = [_t13F5, _t13F6, _t13F7];
  real _t13F9 = prim •00CE<$[3]; $[3]; $[]> (_t13F8, refPos1250);
  real _t13FA = prim -0026<$[]> (_t13F4, _t13F9);
  real _t13FB = 0.1e1;
  real _t13FC = 0.e0;
  real _t13FD = -0.e0;
  vec3 _t13FE = [_t13FB, _t13FC, _t13FD];
  real _t13FF = prim •00CE<$[3]; $[3]; $[]> (_t13FE, dPos1251);
  real _t1400 = prim /0055 (_t13FA, _t13FF);
  real _t1401 = -0.1e-15;
  bool _t1402 = prim >=007E (_t1400, _t1401);
  real _t1403 = -0.5e0;
  real _t1404 = 0.1e1;
  real _t1405 = 0.e0;
  real _t1406 = -0.e0;
  vec3 _t1407 = [_t1404, _t1405, _t1406];
  real _t1408 = prim •00CE<$[3]; $[3]; $[]> (_t1407, refPos1250);
  real _t1409 = prim -0026<$[]> (_t1403, _t1408);
  real _t140A = 0.1e1;
  real _t140B = 0.e0;
  real _t140C = -0.e0;
  vec3 _t140D = [_t140A, _t140B, _t140C];
  real _t140E = prim •00CE<$[3]; $[3]; $[]> (_t140D, dPos1251);
  real _t140F = prim /0055 (_t1409, _t140E);
  bool _t1410 = prim >0080 (time1252, _t140F);
  real _t1411 = 0.1e1;
  real _t1412 = 0.e0;
  real _t1413 = -0.e0;
  vec3 _t1414 = [_t1411, _t1412, _t1413];
  real _t1415 = prim •00CE<$[3]; $[3]; $[]> (_t1414, dPos1251);
  real _t1416 = prim |()|00B5<$[]> (_t1415);
  real _t1417 = 0.1e-20;
  bool _t1418 = prim >=007E (_t1416, _t1417);
  bool _t1419 = prim $and01C4 (_t1410, _t1418);
  bool _t141A = prim $and01C4 (_t1402, _t1419);
  if _t141A {
    real _t141B = -0.5e0;
    real _t141C = 0.1e1;
    real _t141D = 0.e0;
    real _t141E = -0.e0;
    vec3 _t141F = [_t141C, _t141D, _t141E];
    real _t1420 = prim •00CE<$[3]; $[3]; $[]> (_t141F, refPos1250);
    real _t1421 = prim -0026<$[]> (_t141B, _t1420);
    real _t1422 = 0.1e1;
    real _t1423 = 0.e0;
    real _t1424 = -0.e0;
    vec3 _t1425 = [_t1422, _t1423, _t1424];
    real _t1426 = prim •00CE<$[3]; $[3]; $[]> (_t1425, dPos1251);
    real _t1427 = prim /0055 (_t1421, _t1426);
    vec3 _t1428 = prim *0038<$[3]> (dPos1251, _t1427);
    vec3 _t1429 = prim +0017<$[3]> (refPos1250, _t1428);
    real _t142A = -0.5e0;
    real _t142B = 0.1e1;
    real _t142C = 0.e0;
    real _t142D = -0.e0;
    vec3 _t142E = [_t142B, _t142C, _t142D];
    real _t142F = prim •00CE<$[3]; $[3]; $[]> (_t142E, refPos1250);
    real _t1430 = prim -0026<$[]> (_t142A, _t142F);
    real _t1431 = 0.1e1;
    real _t1432 = 0.e0;
    real _t1433 = -0.e0;
    vec3 _t1434 = [_t1431, _t1432, _t1433];
    real _t1435 = prim •00CE<$[3]; $[3]; $[]> (_t1434, dPos1251);
    real _t1436 = prim /0055 (_t1430, _t1435);
    vec3 _t1437 = prim *0038<$[3]> (dPos1251, _t1436);
    vec3 _t1438 = prim +0017<$[3]> (refPos1250, _t1437);
    real _t1439 = 0.1e-8;
    bool _t143A = extractFemItemN((_t1429, _t1438, _t1439),InsideInsert(File=checkInside.in)(Mesh),);
    if _t143A {
      real _t143B = -0.5e0;
      real _t143C = 0.1e1;
      real _t143D = 0.e0;
      real _t143E = -0.e0;
      vec3 _t143F = [_t143C, _t143D, _t143E];
      real _t1440 = prim •00CE<$[3]; $[3]; $[]> (_t143F, refPos1250);
      real _t1441 = prim -0026<$[]> (_t143B, _t1440);
      real _t1442 = 0.1e1;
      real _t1443 = 0.e0;
      real _t1444 = -0.e0;
      vec3 _t1445 = [_t1442, _t1443, _t1444];
      real _t1446 = prim •00CE<$[3]; $[3]; $[]> (_t1445, dPos1251);
      time1252 = prim /0055 (_t1441, _t1446);
      face1253 = 5;
    }
  }
  int _t1447 = -1;
  bool _t1448 = prim !=0086 (face1253, _t1447);
  if _t1448 {
    real _t1449 = 0.e0;
    real _t144A = prim max0125 (time1252, _t1449);
    real _t144B = (real)face1253;
    vec2 _t144C = [_t144A, _t144B];
    return _t144C;
  } else {
    real _t144D = -0.1e1;
    real _t144E = -0.1e1;
    vec2 _t144F = [_t144D, _t144E];
    return _t144F;
  }
}
function vec2#0 _exit1450 (vec3 refPos1250, vec3 dPos1251, int i1451)
{
  real time1452 = +inf;
  int face1453 = -1;
  real faceTime1454 = -inf;
  real _t1455 = -0.5e0;
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.1e1;
  vec3 _t1459 = [_t1456, _t1457, _t1458];
  real _t145A = prim •00CE<$[3]; $[3]; $[]> (_t1459, refPos1250);
  real _t145B = prim -0026<$[]> (_t1455, _t145A);
  real _t145C = 0.e0;
  real _t145D = 0.e0;
  real _t145E = 0.1e1;
  vec3 _t145F = [_t145C, _t145D, _t145E];
  real _t1460 = prim •00CE<$[3]; $[3]; $[]> (_t145F, dPos1251);
  real _t1461 = prim /0055 (_t145B, _t1460);
  real _t1462 = -0.1e-15;
  bool _t1463 = prim >=007E (_t1461, _t1462);
  real _t1464 = -0.5e0;
  real _t1465 = 0.e0;
  real _t1466 = 0.e0;
  real _t1467 = 0.1e1;
  vec3 _t1468 = [_t1465, _t1466, _t1467];
  real _t1469 = prim •00CE<$[3]; $[3]; $[]> (_t1468, refPos1250);
  real _t146A = prim -0026<$[]> (_t1464, _t1469);
  real _t146B = 0.e0;
  real _t146C = 0.e0;
  real _t146D = 0.1e1;
  vec3 _t146E = [_t146B, _t146C, _t146D];
  real _t146F = prim •00CE<$[3]; $[3]; $[]> (_t146E, dPos1251);
  real _t1470 = prim /0055 (_t146A, _t146F);
  bool _t1471 = prim >0080 (time1452, _t1470);
  real _t1472 = 0.e0;
  real _t1473 = 0.e0;
  real _t1474 = 0.1e1;
  vec3 _t1475 = [_t1472, _t1473, _t1474];
  real _t1476 = prim •00CE<$[3]; $[3]; $[]> (_t1475, dPos1251);
  real _t1477 = prim |()|00B5<$[]> (_t1476);
  real _t1478 = 0.1e-20;
  bool _t1479 = prim >=007E (_t1477, _t1478);
  bool _t147A = prim $and01C4 (_t1471, _t1479);
  bool _t147B = prim $and01C4 (_t1463, _t147A);
  if _t147B {
    int _t147C = 0;
    bool _t147D = prim !=0086 (i1451, _t147C);
    if _t147D {
      real _t147E = -0.5e0;
      real _t147F = 0.e0;
      real _t1480 = 0.e0;
      real _t1481 = 0.1e1;
      vec3 _t1482 = [_t147F, _t1480, _t1481];
      real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos1250);
      real _t1484 = prim -0026<$[]> (_t147E, _t1483);
      real _t1485 = 0.e0;
      real _t1486 = 0.e0;
      real _t1487 = 0.1e1;
      vec3 _t1488 = [_t1485, _t1486, _t1487];
      real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos1251);
      time1452 = prim /0055 (_t1484, _t1489);
      face1453 = 0;
    } else {
      real _t148A = -0.5e0;
      real _t148B = 0.e0;
      real _t148C = 0.e0;
      real _t148D = 0.1e1;
      vec3 _t148E = [_t148B, _t148C, _t148D];
      real _t148F = prim •00CE<$[3]; $[3]; $[]> (_t148E, refPos1250);
      real _t1490 = prim -0026<$[]> (_t148A, _t148F);
      real _t1491 = 0.e0;
      real _t1492 = 0.e0;
      real _t1493 = 0.1e1;
      vec3 _t1494 = [_t1491, _t1492, _t1493];
      real _t1495 = prim •00CE<$[3]; $[3]; $[]> (_t1494, dPos1251);
      faceTime1454 = prim /0055 (_t1490, _t1495);
    }
  }
  real _t1496 = 0.5e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = 0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos1250);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = 0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos1251);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-15;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.5e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = 0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos1250);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = 0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos1251);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time1452, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = 0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos1251);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-20;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 1;
    bool _t14BE = prim !=0086 (i1451, _t14BD);
    if _t14BE {
      real _t14BF = 0.5e0;
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.1e1;
      vec3 _t14C3 = [_t14C0, _t14C1, _t14C2];
      real _t14C4 = prim •00CE<$[3]; $[3]; $[]> (_t14C3, refPos1250);
      real _t14C5 = prim -0026<$[]> (_t14BF, _t14C4);
      real _t14C6 = 0.e0;
      real _t14C7 = 0.e0;
      real _t14C8 = 0.1e1;
      vec3 _t14C9 = [_t14C6, _t14C7, _t14C8];
      real _t14CA = prim •00CE<$[3]; $[3]; $[]> (_t14C9, dPos1251);
      time1452 = prim /0055 (_t14C5, _t14CA);
      face1453 = 1;
    } else {
      real _t14CB = 0.5e0;
      real _t14CC = 0.e0;
      real _t14CD = 0.e0;
      real _t14CE = 0.1e1;
      vec3 _t14CF = [_t14CC, _t14CD, _t14CE];
      real _t14D0 = prim •00CE<$[3]; $[3]; $[]> (_t14CF, refPos1250);
      real _t14D1 = prim -0026<$[]> (_t14CB, _t14D0);
      real _t14D2 = 0.e0;
      real _t14D3 = 0.e0;
      real _t14D4 = 0.1e1;
      vec3 _t14D5 = [_t14D2, _t14D3, _t14D4];
      real _t14D6 = prim •00CE<$[3]; $[3]; $[]> (_t14D5, dPos1251);
      faceTime1454 = prim /0055 (_t14D1, _t14D6);
    }
  }
  real _t14D7 = -0.5e0;
  real _t14D8 = 0.e0;
  real _t14D9 = 0.1e1;
  real _t14DA = 0.e0;
  vec3 _t14DB = [_t14D8, _t14D9, _t14DA];
  real _t14DC = prim •00CE<$[3]; $[3]; $[]> (_t14DB, refPos1250);
  real _t14DD = prim -0026<$[]> (_t14D7, _t14DC);
  real _t14DE = 0.e0;
  real _t14DF = 0.1e1;
  real _t14E0 = 0.e0;
  vec3 _t14E1 = [_t14DE, _t14DF, _t14E0];
  real _t14E2 = prim •00CE<$[3]; $[3]; $[]> (_t14E1, dPos1251);
  real _t14E3 = prim /0055 (_t14DD, _t14E2);
  real _t14E4 = -0.1e-15;
  bool _t14E5 = prim >=007E (_t14E3, _t14E4);
  real _t14E6 = -0.5e0;
  real _t14E7 = 0.e0;
  real _t14E8 = 0.1e1;
  real _t14E9 = 0.e0;
  vec3 _t14EA = [_t14E7, _t14E8, _t14E9];
  real _t14EB = prim •00CE<$[3]; $[3]; $[]> (_t14EA, refPos1250);
  real _t14EC = prim -0026<$[]> (_t14E6, _t14EB);
  real _t14ED = 0.e0;
  real _t14EE = 0.1e1;
  real _t14EF = 0.e0;
  vec3 _t14F0 = [_t14ED, _t14EE, _t14EF];
  real _t14F1 = prim •00CE<$[3]; $[3]; $[]> (_t14F0, dPos1251);
  real _t14F2 = prim /0055 (_t14EC, _t14F1);
  bool _t14F3 = prim >0080 (time1452, _t14F2);
  real _t14F4 = 0.e0;
  real _t14F5 = 0.1e1;
  real _t14F6 = 0.e0;
  vec3 _t14F7 = [_t14F4, _t14F5, _t14F6];
  real _t14F8 = prim •00CE<$[3]; $[3]; $[]> (_t14F7, dPos1251);
  real _t14F9 = prim |()|00B5<$[]> (_t14F8);
  real _t14FA = 0.1e-20;
  bool _t14FB = prim >=007E (_t14F9, _t14FA);
  bool _t14FC = prim $and01C4 (_t14F3, _t14FB);
  bool _t14FD = prim $and01C4 (_t14E5, _t14FC);
  if _t14FD {
    int _t14FE = 2;
    bool _t14FF = prim !=0086 (i1451, _t14FE);
    if _t14FF {
      real _t1500 = -0.5e0;
      real _t1501 = 0.e0;
      real _t1502 = 0.1e1;
      real _t1503 = 0.e0;
      vec3 _t1504 = [_t1501, _t1502, _t1503];
      real _t1505 = prim •00CE<$[3]; $[3]; $[]> (_t1504, refPos1250);
      real _t1506 = prim -0026<$[]> (_t1500, _t1505);
      real _t1507 = 0.e0;
      real _t1508 = 0.1e1;
      real _t1509 = 0.e0;
      vec3 _t150A = [_t1507, _t1508, _t1509];
      real _t150B = prim •00CE<$[3]; $[3]; $[]> (_t150A, dPos1251);
      time1452 = prim /0055 (_t1506, _t150B);
      face1453 = 2;
    } else {
      real _t150C = -0.5e0;
      real _t150D = 0.e0;
      real _t150E = 0.1e1;
      real _t150F = 0.e0;
      vec3 _t1510 = [_t150D, _t150E, _t150F];
      real _t1511 = prim •00CE<$[3]; $[3]; $[]> (_t1510, refPos1250);
      real _t1512 = prim -0026<$[]> (_t150C, _t1511);
      real _t1513 = 0.e0;
      real _t1514 = 0.1e1;
      real _t1515 = 0.e0;
      vec3 _t1516 = [_t1513, _t1514, _t1515];
      real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, dPos1251);
      faceTime1454 = prim /0055 (_t1512, _t1517);
    }
  }
  real _t1518 = -0.5e0;
  real _t1519 = -0.1e1;
  real _t151A = 0.e0;
  real _t151B = 0.e0;
  vec3 _t151C = [_t1519, _t151A, _t151B];
  real _t151D = prim •00CE<$[3]; $[3]; $[]> (_t151C, refPos1250);
  real _t151E = prim -0026<$[]> (_t1518, _t151D);
  real _t151F = -0.1e1;
  real _t1520 = 0.e0;
  real _t1521 = 0.e0;
  vec3 _t1522 = [_t151F, _t1520, _t1521];
  real _t1523 = prim •00CE<$[3]; $[3]; $[]> (_t1522, dPos1251);
  real _t1524 = prim /0055 (_t151E, _t1523);
  real _t1525 = -0.1e-15;
  bool _t1526 = prim >=007E (_t1524, _t1525);
  real _t1527 = -0.5e0;
  real _t1528 = -0.1e1;
  real _t1529 = 0.e0;
  real _t152A = 0.e0;
  vec3 _t152B = [_t1528, _t1529, _t152A];
  real _t152C = prim •00CE<$[3]; $[3]; $[]> (_t152B, refPos1250);
  real _t152D = prim -0026<$[]> (_t1527, _t152C);
  real _t152E = -0.1e1;
  real _t152F = 0.e0;
  real _t1530 = 0.e0;
  vec3 _t1531 = [_t152E, _t152F, _t1530];
  real _t1532 = prim •00CE<$[3]; $[3]; $[]> (_t1531, dPos1251);
  real _t1533 = prim /0055 (_t152D, _t1532);
  bool _t1534 = prim >0080 (time1452, _t1533);
  real _t1535 = -0.1e1;
  real _t1536 = 0.e0;
  real _t1537 = 0.e0;
  vec3 _t1538 = [_t1535, _t1536, _t1537];
  real _t1539 = prim •00CE<$[3]; $[3]; $[]> (_t1538, dPos1251);
  real _t153A = prim |()|00B5<$[]> (_t1539);
  real _t153B = 0.1e-20;
  bool _t153C = prim >=007E (_t153A, _t153B);
  bool _t153D = prim $and01C4 (_t1534, _t153C);
  bool _t153E = prim $and01C4 (_t1526, _t153D);
  if _t153E {
    int _t153F = 3;
    bool _t1540 = prim !=0086 (i1451, _t153F);
    if _t1540 {
      real _t1541 = -0.5e0;
      real _t1542 = -0.1e1;
      real _t1543 = 0.e0;
      real _t1544 = 0.e0;
      vec3 _t1545 = [_t1542, _t1543, _t1544];
      real _t1546 = prim •00CE<$[3]; $[3]; $[]> (_t1545, refPos1250);
      real _t1547 = prim -0026<$[]> (_t1541, _t1546);
      real _t1548 = -0.1e1;
      real _t1549 = 0.e0;
      real _t154A = 0.e0;
      vec3 _t154B = [_t1548, _t1549, _t154A];
      real _t154C = prim •00CE<$[3]; $[3]; $[]> (_t154B, dPos1251);
      time1452 = prim /0055 (_t1547, _t154C);
      face1453 = 3;
    } else {
      real _t154D = -0.5e0;
      real _t154E = -0.1e1;
      real _t154F = 0.e0;
      real _t1550 = 0.e0;
      vec3 _t1551 = [_t154E, _t154F, _t1550];
      real _t1552 = prim •00CE<$[3]; $[3]; $[]> (_t1551, refPos1250);
      real _t1553 = prim -0026<$[]> (_t154D, _t1552);
      real _t1554 = -0.1e1;
      real _t1555 = 0.e0;
      real _t1556 = 0.e0;
      vec3 _t1557 = [_t1554, _t1555, _t1556];
      real _t1558 = prim •00CE<$[3]; $[3]; $[]> (_t1557, dPos1251);
      faceTime1454 = prim /0055 (_t1553, _t1558);
    }
  }
  real _t1559 = -0.5e0;
  real _t155A = 0.e0;
  real _t155B = -0.1e1;
  real _t155C = 0.e0;
  vec3 _t155D = [_t155A, _t155B, _t155C];
  real _t155E = prim •00CE<$[3]; $[3]; $[]> (_t155D, refPos1250);
  real _t155F = prim -0026<$[]> (_t1559, _t155E);
  real _t1560 = 0.e0;
  real _t1561 = -0.1e1;
  real _t1562 = 0.e0;
  vec3 _t1563 = [_t1560, _t1561, _t1562];
  real _t1564 = prim •00CE<$[3]; $[3]; $[]> (_t1563, dPos1251);
  real _t1565 = prim /0055 (_t155F, _t1564);
  real _t1566 = -0.1e-15;
  bool _t1567 = prim >=007E (_t1565, _t1566);
  real _t1568 = -0.5e0;
  real _t1569 = 0.e0;
  real _t156A = -0.1e1;
  real _t156B = 0.e0;
  vec3 _t156C = [_t1569, _t156A, _t156B];
  real _t156D = prim •00CE<$[3]; $[3]; $[]> (_t156C, refPos1250);
  real _t156E = prim -0026<$[]> (_t1568, _t156D);
  real _t156F = 0.e0;
  real _t1570 = -0.1e1;
  real _t1571 = 0.e0;
  vec3 _t1572 = [_t156F, _t1570, _t1571];
  real _t1573 = prim •00CE<$[3]; $[3]; $[]> (_t1572, dPos1251);
  real _t1574 = prim /0055 (_t156E, _t1573);
  bool _t1575 = prim >0080 (time1452, _t1574);
  real _t1576 = 0.e0;
  real _t1577 = -0.1e1;
  real _t1578 = 0.e0;
  vec3 _t1579 = [_t1576, _t1577, _t1578];
  real _t157A = prim •00CE<$[3]; $[3]; $[]> (_t1579, dPos1251);
  real _t157B = prim |()|00B5<$[]> (_t157A);
  real _t157C = 0.1e-20;
  bool _t157D = prim >=007E (_t157B, _t157C);
  bool _t157E = prim $and01C4 (_t1575, _t157D);
  bool _t157F = prim $and01C4 (_t1567, _t157E);
  if _t157F {
    int _t1580 = 4;
    bool _t1581 = prim !=0086 (i1451, _t1580);
    if _t1581 {
      real _t1582 = -0.5e0;
      real _t1583 = 0.e0;
      real _t1584 = -0.1e1;
      real _t1585 = 0.e0;
      vec3 _t1586 = [_t1583, _t1584, _t1585];
      real _t1587 = prim •00CE<$[3]; $[3]; $[]> (_t1586, refPos1250);
      real _t1588 = prim -0026<$[]> (_t1582, _t1587);
      real _t1589 = 0.e0;
      real _t158A = -0.1e1;
      real _t158B = 0.e0;
      vec3 _t158C = [_t1589, _t158A, _t158B];
      real _t158D = prim •00CE<$[3]; $[3]; $[]> (_t158C, dPos1251);
      time1452 = prim /0055 (_t1588, _t158D);
      face1453 = 4;
    } else {
      real _t158E = -0.5e0;
      real _t158F = 0.e0;
      real _t1590 = -0.1e1;
      real _t1591 = 0.e0;
      vec3 _t1592 = [_t158F, _t1590, _t1591];
      real _t1593 = prim •00CE<$[3]; $[3]; $[]> (_t1592, refPos1250);
      real _t1594 = prim -0026<$[]> (_t158E, _t1593);
      real _t1595 = 0.e0;
      real _t1596 = -0.1e1;
      real _t1597 = 0.e0;
      vec3 _t1598 = [_t1595, _t1596, _t1597];
      real _t1599 = prim •00CE<$[3]; $[3]; $[]> (_t1598, dPos1251);
      faceTime1454 = prim /0055 (_t1594, _t1599);
    }
  }
  real _t159A = -0.5e0;
  real _t159B = 0.1e1;
  real _t159C = 0.e0;
  real _t159D = -0.e0;
  vec3 _t159E = [_t159B, _t159C, _t159D];
  real _t159F = prim •00CE<$[3]; $[3]; $[]> (_t159E, refPos1250);
  real _t15A0 = prim -0026<$[]> (_t159A, _t159F);
  real _t15A1 = 0.1e1;
  real _t15A2 = 0.e0;
  real _t15A3 = -0.e0;
  vec3 _t15A4 = [_t15A1, _t15A2, _t15A3];
  real _t15A5 = prim •00CE<$[3]; $[3]; $[]> (_t15A4, dPos1251);
  real _t15A6 = prim /0055 (_t15A0, _t15A5);
  real _t15A7 = -0.1e-15;
  bool _t15A8 = prim >=007E (_t15A6, _t15A7);
  real _t15A9 = -0.5e0;
  real _t15AA = 0.1e1;
  real _t15AB = 0.e0;
  real _t15AC = -0.e0;
  vec3 _t15AD = [_t15AA, _t15AB, _t15AC];
  real _t15AE = prim •00CE<$[3]; $[3]; $[]> (_t15AD, refPos1250);
  real _t15AF = prim -0026<$[]> (_t15A9, _t15AE);
  real _t15B0 = 0.1e1;
  real _t15B1 = 0.e0;
  real _t15B2 = -0.e0;
  vec3 _t15B3 = [_t15B0, _t15B1, _t15B2];
  real _t15B4 = prim •00CE<$[3]; $[3]; $[]> (_t15B3, dPos1251);
  real _t15B5 = prim /0055 (_t15AF, _t15B4);
  bool _t15B6 = prim >0080 (time1452, _t15B5);
  real _t15B7 = 0.1e1;
  real _t15B8 = 0.e0;
  real _t15B9 = -0.e0;
  vec3 _t15BA = [_t15B7, _t15B8, _t15B9];
  real _t15BB = prim •00CE<$[3]; $[3]; $[]> (_t15BA, dPos1251);
  real _t15BC = prim |()|00B5<$[]> (_t15BB);
  real _t15BD = 0.1e-20;
  bool _t15BE = prim >=007E (_t15BC, _t15BD);
  bool _t15BF = prim $and01C4 (_t15B6, _t15BE);
  bool _t15C0 = prim $and01C4 (_t15A8, _t15BF);
  if _t15C0 {
    int _t15C1 = 5;
    bool _t15C2 = prim !=0086 (i1451, _t15C1);
    if _t15C2 {
      real _t15C3 = -0.5e0;
      real _t15C4 = 0.1e1;
      real _t15C5 = 0.e0;
      real _t15C6 = -0.e0;
      vec3 _t15C7 = [_t15C4, _t15C5, _t15C6];
      real _t15C8 = prim •00CE<$[3]; $[3]; $[]> (_t15C7, refPos1250);
      real _t15C9 = prim -0026<$[]> (_t15C3, _t15C8);
      real _t15CA = 0.1e1;
      real _t15CB = 0.e0;
      real _t15CC = -0.e0;
      vec3 _t15CD = [_t15CA, _t15CB, _t15CC];
      real _t15CE = prim •00CE<$[3]; $[3]; $[]> (_t15CD, dPos1251);
      time1452 = prim /0055 (_t15C9, _t15CE);
      face1453 = 5;
    } else {
      real _t15CF = -0.5e0;
      real _t15D0 = 0.1e1;
      real _t15D1 = 0.e0;
      real _t15D2 = -0.e0;
      vec3 _t15D3 = [_t15D0, _t15D1, _t15D2];
      real _t15D4 = prim •00CE<$[3]; $[3]; $[]> (_t15D3, refPos1250);
      real _t15D5 = prim -0026<$[]> (_t15CF, _t15D4);
      real _t15D6 = 0.1e1;
      real _t15D7 = 0.e0;
      real _t15D8 = -0.e0;
      vec3 _t15D9 = [_t15D6, _t15D7, _t15D8];
      real _t15DA = prim •00CE<$[3]; $[3]; $[]> (_t15D9, dPos1251);
      faceTime1454 = prim /0055 (_t15D5, _t15DA);
    }
  }
  int _t15DB = -1;
  bool _t15DC = prim !=0086 (face1453, _t15DB);
  if _t15DC {
    real _t15DD = 0.e0;
    real _t15DE = prim max0125 (time1452, _t15DD);
    real _t15DF = (real)face1453;
    vec2 _t15E0 = [_t15DE, _t15DF];
    return _t15E0;
  } else {
    real _t15E1 = -inf;
    bool _t15E2 = prim ==0084 (_t15E1, faceTime1454);
    if _t15E2 {
      real _t15E3 = -0.1e1;
      real _t15E4 = -0.1e1;
      vec2 _t15E5 = [_t15E3, _t15E4];
      return _t15E5;
    } else {
      real _t15E6 = (real)i1451;
      vec2 _t15E7 = [faceTime1454, _t15E6];
      return _t15E7;
    }
  }
}
function Femdata: Mesh#0 domain15E8 (Femdata: Space arg015E9)
{
  Femdata: Mesh _t15EA = extractFem(arg015E9, Mesh);
  return _t15EA;
}
function Femdata: Space#0 space15EB (Femdata: FemFunc arg015EC)
{
  Femdata: Space _t15ED = extractFem(arg015EC, Space);
  return _t15ED;
}
function Femdata: FuncCell#3 funcCell15EE (Femdata: FemFunc arg015EF, Femdata: MeshCell arg115F0)
{
  int _t15F1 = extractFemItem(CellIndex(MeshCell), int, arg115F0);
  Femdata: FuncCell _t15F2 = loadFem(FuncCell, arg015EF, _t15F1);
  return _t15F2;
}
function real#1 atent161B (real a0161C, real d161D)
{
  real _t161E = 0.e0;
  real _t161F = 0.1e1;
  real _t1620 = 0.15e1;
  real _t1621 = 0.1e1;
  real _t1622 = prim |()|00B5<$[]> (d161D);
  real _t1623 = prim /0055 (_t1622, thick0525);
  real _t1624 = prim -0026<$[]> (_t1621, _t1623);
  real _t1625 = prim *0034 (_t1620, _t1624);
  real _t1626 = prim clamp0094<$[]> (_t161E, _t161F, _t1625);
  real _t1627 = prim *0034 (a0161C, _t1626);
  return _t1627;
}
function vec3#1 fStep1628 (vec3 x1629)
{
  bool _t162A = prim !00BC (analytical053F);
  if _t162A {
    field(3)[3] _t162B = prim ∇00A8<#∞; %3> (F15FB);
    field(3)[3,3] _t162C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t162B);
    tensor[3,3] _t162D = prim @00A5<#∞; %3; $[3,3]> (_t162C, x1629);
    vec3[3] E162E = prim evecs00A0 (_t162D);
    field(3)[3] _t162F = prim ∇00A8<#∞; %3> (F15FB);
    field(3)[3,3] _t1630 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t162F);
    tensor[3,3] _t1631 = prim @00A5<#∞; %3; $[3,3]> (_t1630, x1629);
    real[3] L1632 = prim evals009F (_t1631);
    int _t1633 = 2;
    vec3 _t1634 = prim $sub01C0<vec3; %3> (E162E, _t1633);
    int _t1635 = 2;
    vec3 _t1636 = prim $sub01C0<vec3; %3> (E162E, _t1635);
    tensor[3,3] _t1637 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1634, _t1636);
    int _t1638 = 2;
    real _t1639 = prim $sub01C0<real; %3> (L1632, _t1638);
    tensor[3,3] _t163A = prim /0057<$[3,3]> (_t1637, _t1639);
    int _t163B = 1;
    vec3 _t163C = prim $sub01C0<vec3; %3> (E162E, _t163B);
    int _t163D = 1;
    vec3 _t163E = prim $sub01C0<vec3; %3> (E162E, _t163D);
    tensor[3,3] _t163F = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t163C, _t163E);
    int _t1640 = 1;
    real _t1641 = prim $sub01C0<real; %3> (L1632, _t1640);
    tensor[3,3] _t1642 = prim /0057<$[3,3]> (_t163F, _t1641);
    tensor[3,3] _t1643 = prim +0017<$[3,3]> (_t163A, _t1642);
    tensor[3,3] _t1644 = prim unary -008B<$[3,3]> (_t1643);
    field(3)[3] _t1645 = prim ∇00A8<#∞; %3> (F15FB);
    vec3 _t1646 = prim @00A5<#∞; %3; $[3]> (_t1645, x1629);
    vec3 _t1647 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1644, _t1646);
    return _t1647;
  } else {
    tensor[3,3] _t1648 = prim transpose0145<%3; %3> (rot0542);
    int _t1649 = -1;
    real _t164A = (real)_t1649;
    int _t164B = -2;
    real _t164C = (real)_t164B;
    int _t164D = -3;
    real _t164E = (real)_t164D;
    vec3 _t164F = [_t164A, _t164C, _t164E];
    vec3 _t1650 = prim •00CE<$[3,3]; $[3]; $[3]> (rot0542, x1629);
    vec3 _t1651 = prim modulate0129<%3> (_t164F, _t1650);
    vec3 Gv1652 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1648, _t1651);
    tensor[3,3] _t1653 = prim transpose0145<%3; %3> (rot0542);
    real _t1654 = -0.1e1;
    real _t1655 = 0.e0;
    real _t1656 = 0.e0;
    vec3 _t1657 = [_t1654, _t1655, _t1656];
    real _t1658 = 0.e0;
    real _t1659 = -0.2e1;
    real _t165A = 0.e0;
    vec3 _t165B = [_t1658, _t1659, _t165A];
    real _t165C = 0.e0;
    real _t165D = 0.e0;
    real _t165E = -0.3e1;
    vec3 _t165F = [_t165C, _t165D, _t165E];
    tensor[3,3] _t1660 = [_t1657, _t165B, _t165F];
    tensor[3,3] _t1661 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1653, _t1660);
    tensor[3,3] H1662 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1661, rot0542);
    vec3[3] E1663 = prim evecs00A0 (H1662);
    real[3] L1664 = prim evals009F (H1662);
    int _t1665 = 2;
    vec3 _t1666 = prim $sub01C0<vec3; %3> (E1663, _t1665);
    int _t1667 = 2;
    vec3 _t1668 = prim $sub01C0<vec3; %3> (E1663, _t1667);
    tensor[3,3] _t1669 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1666, _t1668);
    int _t166A = 2;
    real _t166B = prim $sub01C0<real; %3> (L1664, _t166A);
    tensor[3,3] _t166C = prim /0057<$[3,3]> (_t1669, _t166B);
    int _t166D = 1;
    vec3 _t166E = prim $sub01C0<vec3; %3> (E1663, _t166D);
    int _t166F = 1;
    vec3 _t1670 = prim $sub01C0<vec3; %3> (E1663, _t166F);
    tensor[3,3] _t1671 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t166E, _t1670);
    int _t1672 = 1;
    real _t1673 = prim $sub01C0<real; %3> (L1664, _t1672);
    tensor[3,3] _t1674 = prim /0057<$[3,3]> (_t1671, _t1673);
    tensor[3,3] _t1675 = prim +0017<$[3,3]> (_t166C, _t1674);
    tensor[3,3] _t1676 = prim unary -008B<$[3,3]> (_t1675);
    vec3 _t1677 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1676, Gv1652);
    return _t1677;
  }
}
function real#1 fStrength1678 (vec3 x1679)
{
  field(3)[3] _t167A = prim ∇00A8<#∞; %3> (F15FB);
  field(3)[3,3] _t167B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t167A);
  tensor[3,3] _t167C = prim @00A5<#∞; %3; $[3,3]> (_t167B, x1679);
  real[3] _t167D = prim evals009F (_t167C);
  int _t167E = 1;
  real _t167F = prim $sub01C0<real; %3> (_t167D, _t167E);
  real _t1680 = prim unary -008B<$[]> (_t167F);
  field(3)[3] _t1681 = prim ∇00A8<#∞; %3> (F15FB);
  vec3 _t1682 = prim @00A5<#∞; %3; $[3]> (_t1681, x1679);
  real _t1683 = prim |()|00B5<$[3]> (_t1682);
  real _t1684 = prim +0017<$[]> (fBias0528, _t1683);
  real _t1685 = prim /0055 (_t1680, _t1684);
  return _t1685;
}
function bool#1 fTest1686 (vec3 x1687)
{
  bool _t1688 = true;
  return _t1688;
}
function real#1 fMask1689 (vec3 x168A)
{
  real _t168B = 0.1e1;
  return _t168B;
}
function bool#1 posTest168C (vec3 x168D)
{
  bool _t168E;
  Femdata: RefCell _t168F = func refcell0589 (block04FD);
  real _t1690 = 0.1e-8;
  bool _t1691 = extractFemItemN((_t168F, x168D, _t1690),InsideInsert(File=checkInside.in)(Mesh),);
  if _t1691 {
    bool _t1692;
    real _t1693 = func fStrength1678 (x168D);
    bool _t1694 = prim >0080 (_t1693, fStrTh0526);
    if _t1694 {
      bool _t1695;
      real _t1696 = func fMask1689 (x168D);
      bool _t1697 = prim >=007E (_t1696, fMaskTh0527);
      if _t1697 {
        _t1695 = func fTest1686 (x168D);
      } else {
        _t1695 = false;
      }
      _t1692 = _t1695;
    } else {
      _t1692 = false;
    }
    _t168E = _t1692;
  } else {
    _t168E = false;
  }
  return _t168E;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115F3 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15F4 = func funcCell15EE (U050B, c115F3);
  Femdata: FemFunc _t15F5 = extractFem(_t15F4, FemFunc);
  Femdata: FuncCell _t15F6 = func funcCell15EE (U050B, c115F3);
  Femdata: FemFunc _t15F7 = extractFem(_t15F6, FemFunc);
  Femdata: Space _t15F8 = extractFem(_t15F7, Space);
  Femdata: FuncCell _t15F9 = func funcCell15EE (U050B, c115F3);
  int _t15FA = extractFemItem(CellIndex(FuncCell), int, _t15F9);
  F15FB = femField(_t15F5,_t15FA,field(3)[],refField,);
  kernel _t15FC = tent;
  IMAGE1D<double[3]> img15FD = clamp(cmap050F);
  CM15FE = prim ⊛0074<#0; %1; $[3]> (_t15FC, img15FD);
  C15FF = F15FB;
  vec3 _t1600 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN1601 = prim normalize0137<$[3]> (_t1600);
  vec3 _t1602 = prim ×00BE (camN1601, camUp0518);
  camU1603 = prim normalize0137<$[3]> (_t1602);
  camV1604 = prim ×00BE (camN1601, camU1603);
  vec3 _t1605 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist1606 = prim |()|00B5<$[3]> (_t1605);
  real _t1607 = 0.314159265358979323846264338327950288e1;
  real _t1608 = prim *0034 (camFOV051E, _t1607);
  real _t1609 = 0.36e3;
  real _t160A = prim /0055 (_t1608, _t1609);
  real _t160B = prim tan0179 (_t160A);
  camVmax160C = prim *0034 (_t160B, camDist1606);
  real _t160D = (real)iresU0520;
  real _t160E = prim *0034 (camVmax160C, _t160D);
  real _t160F = (real)iresV0521;
  camUmax1610 = prim /0055 (_t160E, _t160F);
  camNearVsp1611 = prim +0017<$[]> (camNear051C, camDist1606);
  camFarVsp1612 = prim +0017<$[]> (camFar051D, camDist1606);
  tensor[3,3] _t1613 = [camU1603, camV1604, camN1601];
  tensor[3,3] _t1614 = prim transpose0145<%3; %3> (_t1613);
  vec3 _t1615 = prim normalize0137<$[3]> (litdir0538);
  litwsp1616 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1614, _t1615);
  kernel _t1617 = bspln5;
  field#4(3)[] _t1618 = prim ⊛0070<#4; %3; $[]> (umm0541, _t1617);
  field#2(3)[] _t1619 = (field#2(3)[])_t1618;
  G161A = _t1619;
}
strand ray (int ui1698, int vi1699) {
  real rayU169A;
  real rayV16A1;
  real rayN16A8;
  vec3 UV16A9;
  vec3 rayOrig16AC;
  vec3 rayVec16B1;
  real alphaFix16B6;
  vec3 eyeDir16B9;
  real phKa16BB;
  real phKd16BC;
  real phKs16BD;
  real phSp16BE;
  output vec4 rgba16BF;
  output real raw16C4;
  vec3 rgb16C5;
  real transp16C9;
  {
    real _t169B = prim unary -008B<$[]> (camUmax1610);
    real _t169C = -0.5e0;
    real _t169D = (real)ui1698;
    real _t169E = (real)iresU0520;
    real _t169F = 0.5e0;
    real _t16A0 = prim -0026<$[]> (_t169E, _t169F);
    rayU169A = prim lerp0098<$[]> (_t169B, camUmax1610, _t169C, _t169D, _t16A0);
    real _t16A2 = prim unary -008B<$[]> (camVmax160C);
    real _t16A3 = -0.5e0;
    real _t16A4 = (real)vi1699;
    real _t16A5 = (real)iresV0521;
    real _t16A6 = 0.5e0;
    real _t16A7 = prim -0026<$[]> (_t16A5, _t16A6);
    rayV16A1 = prim lerp0098<$[]> (_t16A2, camVmax160C, _t16A3, _t16A4, _t16A7);
    rayN16A8 = camNearVsp1611;
    vec3 _t16AA = prim *0036<$[3]> (rayU169A, camU1603);
    vec3 _t16AB = prim *0036<$[3]> (rayV16A1, camV1604);
    UV16A9 = prim +0017<$[3]> (_t16AA, _t16AB);
    vec3 _t16AD;
    if camOrtho051F {
      _t16AD = UV16A9;
    } else {
      real _t16AE = 0.e0;
      real _t16AF = 0.e0;
      real _t16B0 = 0.e0;
      _t16AD = [_t16AE, _t16AF, _t16B0];
    }
    rayOrig16AC = prim +0017<$[3]> (camEye0510, _t16AD);
    vec3 _t16B2;
    if camOrtho051F {
      real _t16B3 = 0.e0;
      real _t16B4 = 0.e0;
      real _t16B5 = 0.e0;
      _t16B2 = [_t16B3, _t16B4, _t16B5];
    } else {
      _t16B2 = prim /0057<$[3]> (UV16A9, camDist1606);
    }
    rayVec16B1 = prim +0017<$[3]> (camN1601, _t16B2);
    real _t16B7 = prim |()|00B5<$[3]> (rayVec16B1);
    real _t16B8 = prim *0034 (_t16B7, rayStep0522);
    alphaFix16B6 = prim /0055 (_t16B8, refStep0523);
    vec3 _t16BA = prim normalize0137<$[3]> (rayVec16B1);
    eyeDir16B9 = prim unary -008B<$[3]> (_t16BA);
    phKa16BB = phong052B[0];
    phKd16BC = phong052B[1];
    phKs16BD = phong052B[2];
    phSp16BE = phong052B[3];
    real _t16C0 = 0.e0;
    real _t16C1 = 0.e0;
    real _t16C2 = 0.e0;
    real _t16C3 = 0.e0;
    rgba16BF = [_t16C0, _t16C1, _t16C2, _t16C3];
    raw16C4 = 0.e0;
    real _t16C6 = 0.e0;
    real _t16C7 = 0.e0;
    real _t16C8 = 0.e0;
    rgb16C5 = [_t16C6, _t16C7, _t16C8];
    transp16C9 = 0.1e1;
  }
  update
  {
    rayN16A8 = prim +0017<$[]> (rayN16A8, rayStep0522);
    bool _t16CA = prim >0080 (rayN16A8, camFarVsp1612);
    if _t16CA {
      stabilize;
    }
    vec3 _t16CB = prim *0036<$[3]> (rayN16A8, rayVec16B1);
    vec3 pos16CC = prim +0017<$[3]> (rayOrig16AC, _t16CB);
    bool _t16CD = func posTest168C (pos16CC);
    bool _t16CE = prim !00BC (_t16CD);
    if _t16CE {
      continue;
    }
    vec3 step16CF = func fStep1628 (pos16CC);
    real _t16D0 = prim |()|00B5<$[3]> (step16CF);
    real aa16D1 = func atent161B (maxAlpha0529, _t16D0);
    real _t16D2 = 0.e0;
    bool _t16D3 = prim ==0084 (aa16D1, _t16D2);
    if _t16D3 {
      continue;
    }
    real _t16D4 = 0.1e1;
    real _t16D5 = 0.1e1;
    real _t16D6 = prim -0026<$[]> (_t16D5, aa16D1);
    real _t16D7 = prim ^0069 (_t16D6, alphaFix16B6);
    aa16D1 = prim -0026<$[]> (_t16D4, _t16D7);
    vec3 _t16D8 = prim normalize0137<$[3]> (step16CF);
    vec3 snorm16D9 = prim unary -008B<$[3]> (_t16D8);
    real _t16DA = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, litwsp1616);
    int _t16DB = 2;
    real dcomp16DC = prim ^0068 (_t16DA, _t16DB);
    real scomp16DD = 0.e0;
    real _t16DE = 0.e0;
    bool _t16DF = prim !=0088 (phKs16BD, _t16DE);
    if _t16DF {
      vec3 _t16E0 = prim +0017<$[3]> (eyeDir16B9, litwsp1616);
      vec3 _t16E1 = prim normalize0137<$[3]> (_t16E0);
      real _t16E2 = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, _t16E1);
      real _t16E3 = prim |()|00B5<$[]> (_t16E2);
      scomp16DD = prim ^0069 (_t16E3, phSp16BE);
    }
    vec3 dcol16E4 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1611, rayN16A8, camFarVsp1612);
    real cmin16E5 = cminmax053C[0];
    real cmax16E6 = cminmax053C[1];
    real _t16E7 = 0.1e1;
    real _t16E8 = 0.1e1;
    real _t16E9 = 0.1e1;
    vec3 mcol16EA = [_t16E7, _t16E8, _t16E9];
    bool _t16EB = prim !=0088 (cmin16E5, cmax16E6);
    if _t16EB {
      real _t16EC = 0.e0;
      real _t16ED = 0.1e1;
      vec3 _t16EE = prim +0017<$[3]> (pos16CC, step16CF);
      real _t16EF = prim @00A5<#∞; %3; $[]> (C15FF, _t16EE);
      real _t16F0 = prim lerp0098<$[]> (_t16EC, _t16ED, cmin16E5, _t16EF, cmax16E6);
      mcol16EA = prim @00A5<#0; %1; $[3]> (CM15FE, _t16F0);
    }
    real _t16F1 = prim *0034 (transp16C9, aa16D1);
    real _t16F2 = prim *0034 (phKd16BC, dcomp16DC);
    real _t16F3 = prim +0017<$[]> (phKa16BB, _t16F2);
    vec3 _t16F4 = prim modulate0129<%3> (dcol16E4, mcol16EA);
    vec3 _t16F5 = prim *0036<$[3]> (_t16F3, _t16F4);
    real _t16F6 = prim *0034 (phKs16BD, scomp16DD);
    real _t16F7 = 0.1e1;
    real _t16F8 = 0.1e1;
    real _t16F9 = 0.1e1;
    vec3 _t16FA = [_t16F7, _t16F8, _t16F9];
    vec3 _t16FB = prim *0036<$[3]> (_t16F6, _t16FA);
    vec3 _t16FC = prim +0017<$[3]> (_t16F5, _t16FB);
    vec3 _t16FD = prim *0036<$[3]> (_t16F1, _t16FC);
    rgb16C5 = prim +0017<$[3]> (rgb16C5, _t16FD);
    real _t16FE = 0.1e1;
    real _t16FF = prim -0026<$[]> (_t16FE, aa16D1);
    transp16C9 = prim *0034 (transp16C9, _t16FF);
    bool _t1700 = prim <007A (transp16C9, transp00524);
    if _t1700 {
      transp16C9 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1701 = 0.1e1;
    bool _t1702 = prim <007A (transp16C9, _t1701);
    if _t1702 {
      real _t1703 = 0.1e1;
      real aa1704 = prim -0026<$[]> (_t1703, transp16C9);
      real _t1705 = rgb16C5[0];
      real _t1706 = prim /0055 (_t1705, aa1704);
      real _t1707 = rgb16C5[1];
      real _t1708 = prim /0055 (_t1707, aa1704);
      real _t1709 = rgb16C5[2];
      real _t170A = prim /0055 (_t1709, aa1704);
      rgba16BF = [_t1706, _t1708, _t170A, aa1704];
    }
  }
}
grid(2) {
  int _t170B = 0;
  int _t170C = 1;
  int _t170D = prim -0024 (iresV0521, _t170C);
  int[] _t170E = prim $range01C3 (_t170B, _t170D);
  foreach vi1714 in _t170E {
    int _t170F = 0;
    int _t1710 = 1;
    int _t1711 = prim -0024 (iresU0520, _t1710);
    int[] _t1712 = prim $range01C3 (_t170F, _t1711);
    foreach ui1713 in _t1712 {
      new ray (ui1713, vi1714);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
input tensor[3,3] rot0542 = <default>;
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
  real _t0543 = 0.1e1;
  real _t0544 = 0.e0;
  real _t0545 = 0.e0;
  vec3 _t0546 = [_t0543, _t0544, _t0545];
  real _t0547 = 0.e0;
  real _t0548 = 0.1e1;
  real _t0549 = 0.e0;
  vec3 _t054A = [_t0547, _t0548, _t0549];
  real _t054B = 0.e0;
  real _t054C = 0.e0;
  real _t054D = 0.1e1;
  vec3 _t054E = [_t054B, _t054C, _t054D];
  rot0542 = [_t0546, _t054A, _t054E];
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115F3;
global field(3)[] F15FB;
global field#0(1)[3] CM15FE;
global field(3)[] C15FF;
global vec3 camN1601;
global vec3 camU1603;
global vec3 camV1604;
global real camDist1606;
global real camVmax160C;
global real camUmax1610;
global real camNearVsp1611;
global real camFarVsp1612;
global vec3 litwsp1616;
function bool#0 !=054F (Femdata: MeshCell cell10550, Femdata: MeshCell cell10551)
{
  int _t0552 = extractFemItem(CellIndex(Mesh), int, cell10550);
  int _t0553 = extractFemItem(CellIndex(Mesh), int, cell10551);
  bool _t0554 = prim !=0086 (_t0552, _t0553);
  return _t0554;
}
function bool#0 ==0555 (Femdata: MeshCell cell10550, Femdata: MeshCell cell10551)
{
  int _t0556 = extractFemItem(CellIndex(Mesh), int, cell10550);
  int _t0557 = extractFemItem(CellIndex(Mesh), int, cell10551);
  bool _t0558 = prim ==0082 (_t0556, _t0557);
  return _t0558;
}
function Femdata: MeshPos#0 findPos0559 (Femdata: Mesh mesh055A, vec3 pos055B)
{
  real _t055C = 0.e0;
  real _t055D = 0.e0;
  real _t055E = 0.e0;
  xn055F = [_t055C, _t055D, _t055E];
  newtonInt0560 = 0;
  cellInt0561 = extractFemItem(StartCell(Mesh), int, mesh055A);
  int _t0562 = extractFemItem(NumCell(Mesh), int, mesh055A);
  int _t0563 = 1;
  numCell0564 = prim -0024 (_t0562, _t0563);
  int _t0565 = 0;
  int _t0566 = 2;
  int _t0567 = 1;
  int _t0568 = prim +0015 (_t0566, _t0567);
  int _t0569 = prim *0033 (_t0568, numCell0564);
  int[] _t056A = prim $range01C3 (_t0565, _t0569);
  foreach itter0585 in _t056A {
    field(3)[3] _t056B = femField(mesh055A,cellInt0561,field(3)[3],Transform,);
    field(3)[3,3] _t056C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t056B);
    field(3)[3,3] _t056D = prim inv015E<#∞; %3> (_t056C);
    real _t056E = 0.e0;
    real _t056F = 0.e0;
    real _t0570 = 0.e0;
    vec3 _t0571 = [_t056E, _t056F, _t0570];
    A0572 = prim @00A5<#∞; %3; $[3,3]> (_t056D, _t0571);
    field(3)[3] _t0573 = femField(mesh055A,cellInt0561,field(3)[3],Transform,);
    field(3)[3] _t0574 = prim -002E<#∞; %3; $[3]> (_t0573, pos055B);
    field(3)[3] _t0575 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0572, _t0574);
    delta0576 = prim @00A5<#∞; %3; $[3]> (_t0575, xn055F);
    xn055F = prim -0026<$[3]> (xn055F, delta0576);
    real _t0577 = 0.1e-7;
    real _t0578 = 0.1e-7;
    real _t0579 = prim *0034 (_t0577, _t0578);
    real _t057A = prim •00CE<$[3]; $[3]; $[]> (delta0576, delta0576);
    bool _t057B = prim >=007E (_t0579, _t057A);
    if _t057B {
      real _t057C = 0.1e-8;
      bool _t057D = extractFemItemN((mesh055A, xn055F, _t057C),InsideInsert(File=checkInside.in)(Mesh),);
      if _t057D {
        Femdata: MeshPos _t057E = extractFemItemN((mesh055A, cellInt0561, xn055F, pos055B),AllBuild(MeshPos),);
        return _t057E;
      }
    }
    int _t057F = 1;
    newtonInt0560 = prim +0015 (newtonInt0560, _t057F);
    int _t0580 = 2;
    bool _t0581 = prim >=007D (newtonInt0560, _t0580);
    if _t0581 {
      newtonInt0560 = 0;
      bool _t0582 = prim >=007D (cellInt0561, numCell0564);
      if _t0582 {
        Femdata: MeshPos _t0583 = extractFemItemN((mesh055A),InvalidBuild(MeshPos),);
        return _t0583;
      } else {
        int _t0584 = 1;
        cellInt0561 = prim +0015 (cellInt0561, _t0584);
      }
    }
  }
  string _t0586 = "Bad end 2";
  string _t0587 = "\n";
  print (_t0586, _t0587);
  Femdata: MeshPos _t0588 = extractFemItemN((mesh055A),InvalidBuild(MeshPos),);
  return _t0588;
}
function Femdata: RefCell#1 refcell0589 (Femdata: Mesh arg0058A)
{
  Femdata: RefCell _t058B = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0058A);
  return _t058B;
}
function Femdata: MeshCell[]#0 cells058C (Femdata: Mesh arg0058D)
{
  Femdata: MeshCell[] _t058E = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg0058D);
  return _t058E;
}
function Femdata: MeshCell[]#0 cells058F (Femdata: Mesh arg0058D)
{
  int _t0590 = 0;
  int _t0591 = extractFemItem(NumCell(Mesh), int, arg0058D);
  int[] _t0592 = prim $range01C3 (_t0590, _t0591);
  Femdata: MeshCell[] accum0595 = {};
  foreach i0593 in _t0592 {
    Femdata: MeshCell _t0594 = loadFem(MeshCell, arg0058D, i0593);
    accum0595 = prim @0010<Femdata: MeshCell> (accum0595, _t0594);
  }
  return accum0595;
}
function int#0 numCell0596 (Femdata: Mesh arg0058A)
{
  int _t0597 = extractFemItem(NumCell(Mesh), int, arg0058A);
  return _t0597;
}
function tensor[3,3,3,3]#0 mesh_t_transform_30598 (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t059C = femField(mesh059B,cell059A,field(3)[3],Transform,);
  field(3)[3,3] _t059D = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t059C);
  field(3)[3,3,3] _t059E = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t059D);
  field(3)[3,3,3,3] _t059F = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t059E);
  tensor[3,3,3,3] _t05A0 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t059F, pos0599);
  return _t05A0;
}
function tensor[3,3,3]#0 mesh_t_transform_205A1 (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t05A2 = femField(mesh059B,cell059A,field(3)[3],Transform,);
  field(3)[3,3] _t05A3 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05A2);
  field(3)[3,3,3] _t05A4 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t05A3);
  tensor[3,3,3] _t05A5 = prim @00A5<#∞; %3; $[3,3,3]> (_t05A4, pos0599);
  return _t05A5;
}
function tensor[3,3]#0 mesh_t_transform_105A6 (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t05A7 = femField(mesh059B,cell059A,field(3)[3],Transform,);
  field(3)[3,3] _t05A8 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05A7);
  tensor[3,3] _t05A9 = prim @00A5<#∞; %3; $[3,3]> (_t05A8, pos0599);
  return _t05A9;
}
function vec3#2 mesh_t_transform_005AA (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t05AB = femField(mesh059B,cell059A,field(3)[3],Transform,);
  vec3 _t05AC = prim @00A5<#∞; %3; $[3]> (_t05AB, pos0599);
  return _t05AC;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse05AD (vec3 pos05AE, int cellInt05AF, Femdata: Mesh mesh05B0)
{
  real _t05B1 = 0.e0;
  real _t05B2 = 0.e0;
  real _t05B3 = 0.e0;
  xn05B4 = [_t05B1, _t05B2, _t05B3];
  field(3)[3] _t05B5 = femField(mesh05B0,cellInt05AF,field(3)[3],Transform,);
  field(3)[3,3] _t05B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05B5);
  field(3)[3,3] _t05B7 = prim inv015E<#∞; %3> (_t05B6);
  real _t05B8 = 0.e0;
  real _t05B9 = 0.e0;
  real _t05BA = 0.e0;
  vec3 _t05BB = [_t05B8, _t05B9, _t05BA];
  A05BC = prim @00A5<#∞; %3; $[3,3]> (_t05B7, _t05BB);
  int _t05BD = 0;
  int _t05BE = 2;
  int[] _t05BF = prim $range01C3 (_t05BD, _t05BE);
  foreach itter05CD in _t05BF {
    field(3)[3] _t05C0 = femField(mesh05B0,cellInt05AF,field(3)[3],Transform,);
    field(3)[3] _t05C1 = prim -002E<#∞; %3; $[3]> (_t05C0, pos05AE);
    field(3)[3] _t05C2 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A05BC, _t05C1);
    delta05C3 = prim @00A5<#∞; %3; $[3]> (_t05C2, xn05B4);
    xn05B4 = prim -0026<$[3]> (xn05B4, delta05C3);
    real _t05C4 = 0.1e-7;
    real _t05C5 = 0.1e-7;
    real _t05C6 = prim *0034 (_t05C4, _t05C5);
    real _t05C7 = prim •00CE<$[3]; $[3]; $[]> (delta05C3, delta05C3);
    bool _t05C8 = prim >=007E (_t05C6, _t05C7);
    if _t05C8 {
      real _t05C9 = 0.1e-8;
      bool _t05CA = extractFemItemN((mesh05B0, xn05B4, _t05C9),InsideInsert(File=checkInside.in)(Mesh),);
      if _t05CA {
        Femdata: MeshPos _t05CB = extractFemItemN((mesh05B0, cellInt05AF, xn05B4, pos05AE),AllBuild(MeshPos),);
        return _t05CB;
      } else {
        Femdata: MeshPos _t05CC = extractFemItemN((mesh05B0),InvalidBuild(MeshPos),);
        return _t05CC;
      }
    }
  }
  Femdata: MeshPos _t05CE = extractFemItemN((mesh05B0),InvalidBuild(MeshPos),);
  return _t05CE;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos05CF (Femdata: MeshPos pos05D0)
{
  bool _t05D1 = extractFemItem(WorldTest(MeshPos), bool, pos05D0);
  if _t05D1 {
    vec3 _t05D2 = extractFemItem(RefPos(MeshPos), vec3, pos05D0);
    int _t05D3 = extractFemItem(CellIndex(MeshPos), int, pos05D0);
    Femdata: Mesh _t05D4 = extractFem(pos05D0, Mesh);
    vec3 _t05D5 = func mesh_t_transform_005AA (_t05D2, _t05D3, _t05D4);
    Femdata: MeshPos _t05D6 = extractFemItemN((pos05D0, _t05D5),NewWorld(MeshPos),);
    return _t05D6;
  } else {
    return pos05D0;
  }
}
function vec3#0 worldPos05D7 (Femdata: MeshPos pos05D0)
{
  vec3 _t05D8 = extractFemItem(RefPos(MeshPos), vec3, pos05D0);
  int _t05D9 = extractFemItem(CellIndex(MeshPos), int, pos05D0);
  Femdata: Mesh _t05DA = extractFem(pos05D0, Mesh);
  vec3 _t05DB = func mesh_t_transform_005AA (_t05D8, _t05D9, _t05DA);
  return _t05DB;
}
function Femdata: MeshPos#0 $exitPos05DC (Femdata: Mesh mesh05DD, int cellId05DE, vec3 refPos05DF, vec3 dPos05E0, real[2] time05E1)
{
  int _t05E2 = -1;
  real _t05E3 = time05E1[1];
  int _t05E4 = prim $r2i01B7 (_t05E3);
  int[2] _t05E6 = func nextCell405E5 (_t05E4, cellId05DE, mesh05DD);
  int _t05E7 = 0;
  int _t05E8 = prim $sub01C0<int; %2> (_t05E6, _t05E7);
  bool _t05E9 = prim !=0086 (_t05E2, _t05E8);
  if _t05E9 {
    string _t05EA = "face ";
    real _t05EB = time05E1[1];
    int _t05EC = prim $r2i01B7 (_t05EB);
    string _t05ED = " to ";
    real _t05EE = time05E1[1];
    int _t05EF = prim $r2i01B7 (_t05EE);
    int[2] _t05F0 = func nextCell405E5 (_t05EF, cellId05DE, mesh05DD);
    int _t05F1 = 1;
    int _t05F2 = prim $sub01C0<int; %2> (_t05F0, _t05F1);
    string _t05F3 = "\n";
    string _t05F4 = "got: ";
    real _t05F5 = 0.1e1;
    real _t05F6 = 0.e0;
    real _t05F7 = 0.e0;
    real _t05F8 = 0.e0;
    vec4 _t05F9 = [_t05F5, _t05F6, _t05F7, _t05F8];
    real _t05FA = 0.e0;
    real _t05FB = 0.1e1;
    real _t05FC = 0.e0;
    real _t05FD = 0.e0;
    vec4 _t05FE = [_t05FA, _t05FB, _t05FC, _t05FD];
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    real _t0601 = 0.1e1;
    real _t0602 = 0.e0;
    vec4 _t0603 = [_t05FF, _t0600, _t0601, _t0602];
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    real _t0606 = 0.e0;
    real _t0607 = 0.1e1;
    vec4 _t0608 = [_t0604, _t0605, _t0606, _t0607];
    tensor[4,4] _t0609 = [_t05F9, _t05FE, _t0603, _t0608];
    real _t060A = 0.1e1;
    real _t060B = 0.e0;
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    vec4 _t060E = [_t060A, _t060B, _t060C, _t060D];
    real _t060F = 0.e0;
    real _t0610 = 0.1e1;
    real _t0611 = 0.e0;
    real _t0612 = 0.e0;
    vec4 _t0613 = [_t060F, _t0610, _t0611, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    real _t0616 = 0.1e1;
    real _t0617 = 0.1e1;
    vec4 _t0618 = [_t0614, _t0615, _t0616, _t0617];
    real _t0619 = 0.e0;
    real _t061A = 0.e0;
    real _t061B = 0.e0;
    real _t061C = 0.1e1;
    vec4 _t061D = [_t0619, _t061A, _t061B, _t061C];
    tensor[4,4] _t061E = [_t060E, _t0613, _t0618, _t061D];
    real _t061F = 0.e0;
    real _t0620 = 0.1e1;
    real _t0621 = 0.e0;
    real _t0622 = 0.e0;
    vec4 _t0623 = [_t061F, _t0620, _t0621, _t0622];
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.1e1;
    real _t0627 = 0.e0;
    vec4 _t0628 = [_t0624, _t0625, _t0626, _t0627];
    real _t0629 = 0.1e1;
    real _t062A = -0.1e1;
    real _t062B = 0.e0;
    real _t062C = -0.5e0;
    vec4 _t062D = [_t0629, _t062A, _t062B, _t062C];
    real _t062E = 0.e0;
    real _t062F = 0.e0;
    real _t0630 = 0.e0;
    real _t0631 = 0.1e1;
    vec4 _t0632 = [_t062E, _t062F, _t0630, _t0631];
    tensor[4,4] _t0633 = [_t0623, _t0628, _t062D, _t0632];
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = -0.1e1;
    real _t0637 = 0.e0;
    vec4 _t0638 = [_t0634, _t0635, _t0636, _t0637];
    real _t0639 = 0.e0;
    real _t063A = 0.1e1;
    real _t063B = 0.e0;
    real _t063C = 0.e0;
    vec4 _t063D = [_t0639, _t063A, _t063B, _t063C];
    real _t063E = 0.1e1;
    real _t063F = -0.1e1;
    real _t0640 = 0.e0;
    real _t0641 = -0.5e0;
    vec4 _t0642 = [_t063E, _t063F, _t0640, _t0641];
    real _t0643 = 0.e0;
    real _t0644 = 0.e0;
    real _t0645 = 0.e0;
    real _t0646 = 0.1e1;
    vec4 _t0647 = [_t0643, _t0644, _t0645, _t0646];
    tensor[4,4] _t0648 = [_t0638, _t063D, _t0642, _t0647];
    real _t0649 = 0.e0;
    real _t064A = -0.1e1;
    real _t064B = 0.e0;
    real _t064C = 0.e0;
    vec4 _t064D = [_t0649, _t064A, _t064B, _t064C];
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    real _t0650 = -0.1e1;
    real _t0651 = 0.e0;
    vec4 _t0652 = [_t064E, _t064F, _t0650, _t0651];
    real _t0653 = 0.1e1;
    real _t0654 = -0.1e1;
    real _t0655 = 0.e0;
    real _t0656 = -0.5e0;
    vec4 _t0657 = [_t0653, _t0654, _t0655, _t0656];
    real _t0658 = 0.e0;
    real _t0659 = 0.e0;
    real _t065A = 0.e0;
    real _t065B = 0.1e1;
    vec4 _t065C = [_t0658, _t0659, _t065A, _t065B];
    tensor[4,4] _t065D = [_t064D, _t0652, _t0657, _t065C];
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    real _t0660 = 0.1e1;
    real _t0661 = 0.e0;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    real _t0663 = 0.e0;
    real _t0664 = -0.1e1;
    real _t0665 = 0.e0;
    real _t0666 = 0.e0;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    real _t0668 = 0.1e1;
    real _t0669 = -0.1e1;
    real _t066A = 0.e0;
    real _t066B = -0.5e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    real _t0670 = 0.1e1;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    tensor[4,4] _t0672 = [_t0662, _t0667, _t066C, _t0671];
    tensor[4,4][6] _t0673 = {_t0609, _t061E, _t0633, _t0648, _t065D, _t0672};
    real _t0674 = 0.1e1;
    real _t0675 = 0.e0;
    real _t0676 = 0.e0;
    real _t0677 = 0.e0;
    vec4 _t0678 = [_t0674, _t0675, _t0676, _t0677];
    real _t0679 = 0.e0;
    real _t067A = 0.1e1;
    real _t067B = 0.e0;
    real _t067C = 0.e0;
    vec4 _t067D = [_t0679, _t067A, _t067B, _t067C];
    real _t067E = 0.e0;
    real _t067F = 0.e0;
    real _t0680 = 0.1e1;
    real _t0681 = -0.1e1;
    vec4 _t0682 = [_t067E, _t067F, _t0680, _t0681];
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = 0.e0;
    real _t0686 = 0.1e1;
    vec4 _t0687 = [_t0683, _t0684, _t0685, _t0686];
    tensor[4,4] _t0688 = [_t0678, _t067D, _t0682, _t0687];
    real _t0689 = 0.1e1;
    real _t068A = 0.e0;
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    vec4 _t068D = [_t0689, _t068A, _t068B, _t068C];
    real _t068E = 0.e0;
    real _t068F = 0.1e1;
    real _t0690 = 0.e0;
    real _t0691 = 0.e0;
    vec4 _t0692 = [_t068E, _t068F, _t0690, _t0691];
    real _t0693 = 0.e0;
    real _t0694 = 0.e0;
    real _t0695 = 0.1e1;
    real _t0696 = 0.e0;
    vec4 _t0697 = [_t0693, _t0694, _t0695, _t0696];
    real _t0698 = 0.e0;
    real _t0699 = 0.e0;
    real _t069A = 0.e0;
    real _t069B = 0.1e1;
    vec4 _t069C = [_t0698, _t0699, _t069A, _t069B];
    tensor[4,4] _t069D = [_t068D, _t0692, _t0697, _t069C];
    real _t069E = 0.e0;
    real _t069F = 0.1e1;
    real _t06A0 = 0.e0;
    real _t06A1 = 0.e0;
    vec4 _t06A2 = [_t069E, _t069F, _t06A0, _t06A1];
    real _t06A3 = 0.e0;
    real _t06A4 = 0.e0;
    real _t06A5 = 0.1e1;
    real _t06A6 = -0.1e1;
    vec4 _t06A7 = [_t06A3, _t06A4, _t06A5, _t06A6];
    real _t06A8 = 0.1e1;
    real _t06A9 = -0.1e1;
    real _t06AA = 0.e0;
    real _t06AB = -0.5e0;
    vec4 _t06AC = [_t06A8, _t06A9, _t06AA, _t06AB];
    real _t06AD = 0.e0;
    real _t06AE = 0.e0;
    real _t06AF = 0.e0;
    real _t06B0 = 0.1e1;
    vec4 _t06B1 = [_t06AD, _t06AE, _t06AF, _t06B0];
    tensor[4,4] _t06B2 = [_t06A2, _t06A7, _t06AC, _t06B1];
    real _t06B3 = 0.e0;
    real _t06B4 = 0.e0;
    real _t06B5 = -0.1e1;
    real _t06B6 = 0.1e1;
    vec4 _t06B7 = [_t06B3, _t06B4, _t06B5, _t06B6];
    real _t06B8 = 0.e0;
    real _t06B9 = 0.1e1;
    real _t06BA = 0.e0;
    real _t06BB = 0.e0;
    vec4 _t06BC = [_t06B8, _t06B9, _t06BA, _t06BB];
    real _t06BD = 0.1e1;
    real _t06BE = -0.1e1;
    real _t06BF = 0.e0;
    real _t06C0 = -0.5e0;
    vec4 _t06C1 = [_t06BD, _t06BE, _t06BF, _t06C0];
    real _t06C2 = 0.e0;
    real _t06C3 = 0.e0;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.1e1;
    vec4 _t06C6 = [_t06C2, _t06C3, _t06C4, _t06C5];
    tensor[4,4] _t06C7 = [_t06B7, _t06BC, _t06C1, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = -0.1e1;
    real _t06CA = 0.e0;
    real _t06CB = 0.e0;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = -0.1e1;
    real _t06D0 = 0.1e1;
    vec4 _t06D1 = [_t06CD, _t06CE, _t06CF, _t06D0];
    real _t06D2 = 0.1e1;
    real _t06D3 = -0.1e1;
    real _t06D4 = 0.e0;
    real _t06D5 = -0.5e0;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    real _t06D7 = 0.e0;
    real _t06D8 = 0.e0;
    real _t06D9 = 0.e0;
    real _t06DA = 0.1e1;
    vec4 _t06DB = [_t06D7, _t06D8, _t06D9, _t06DA];
    tensor[4,4] _t06DC = [_t06CC, _t06D1, _t06D6, _t06DB];
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    real _t06DF = 0.1e1;
    real _t06E0 = -0.1e1;
    vec4 _t06E1 = [_t06DD, _t06DE, _t06DF, _t06E0];
    real _t06E2 = 0.e0;
    real _t06E3 = -0.1e1;
    real _t06E4 = 0.e0;
    real _t06E5 = 0.e0;
    vec4 _t06E6 = [_t06E2, _t06E3, _t06E4, _t06E5];
    real _t06E7 = 0.1e1;
    real _t06E8 = -0.1e1;
    real _t06E9 = 0.e0;
    real _t06EA = -0.5e0;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    real _t06EC = 0.e0;
    real _t06ED = 0.e0;
    real _t06EE = 0.e0;
    real _t06EF = 0.1e1;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    tensor[4,4] _t06F1 = [_t06E1, _t06E6, _t06EB, _t06F0];
    tensor[4,4][6] _t06F2 = {_t0688, _t069D, _t06B2, _t06C7, _t06DC, _t06F1};
    real _t06F3 = 0.1e1;
    real _t06F4 = 0.e0;
    real _t06F5 = 0.1e1;
    real _t06F6 = 0.5e0;
    vec4 _t06F7 = [_t06F3, _t06F4, _t06F5, _t06F6];
    real _t06F8 = 0.1e1;
    real _t06F9 = 0.e0;
    real _t06FA = 0.e0;
    real _t06FB = 0.e0;
    vec4 _t06FC = [_t06F8, _t06F9, _t06FA, _t06FB];
    real _t06FD = 0.e0;
    real _t06FE = 0.1e1;
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = 0.e0;
    real _t0703 = 0.e0;
    real _t0704 = 0.e0;
    real _t0705 = 0.1e1;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    tensor[4,4] _t0707 = [_t06F7, _t06FC, _t0701, _t0706];
    real _t0708 = 0.1e1;
    real _t0709 = 0.e0;
    real _t070A = 0.1e1;
    real _t070B = 0.5e0;
    vec4 _t070C = [_t0708, _t0709, _t070A, _t070B];
    real _t070D = 0.1e1;
    real _t070E = 0.e0;
    real _t070F = 0.e0;
    real _t0710 = 0.e0;
    vec4 _t0711 = [_t070D, _t070E, _t070F, _t0710];
    real _t0712 = 0.e0;
    real _t0713 = 0.1e1;
    real _t0714 = 0.e0;
    real _t0715 = 0.1e1;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = 0.e0;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    real _t071A = 0.1e1;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    tensor[4,4] _t071C = [_t070C, _t0711, _t0716, _t071B];
    real _t071D = 0.1e1;
    real _t071E = 0.e0;
    real _t071F = 0.e0;
    real _t0720 = 0.e0;
    vec4 _t0721 = [_t071D, _t071E, _t071F, _t0720];
    real _t0722 = 0.e0;
    real _t0723 = 0.1e1;
    real _t0724 = 0.e0;
    real _t0725 = 0.e0;
    vec4 _t0726 = [_t0722, _t0723, _t0724, _t0725];
    real _t0727 = 0.e0;
    real _t0728 = 0.e0;
    real _t0729 = 0.1e1;
    real _t072A = 0.e0;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    real _t072C = 0.e0;
    real _t072D = 0.e0;
    real _t072E = 0.e0;
    real _t072F = 0.1e1;
    vec4 _t0730 = [_t072C, _t072D, _t072E, _t072F];
    tensor[4,4] _t0731 = [_t0721, _t0726, _t072B, _t0730];
    real _t0732 = 0.e0;
    real _t0733 = -0.1e1;
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.1e1;
    real _t0738 = 0.e0;
    real _t0739 = 0.e0;
    real _t073A = 0.e0;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    real _t073E = 0.1e1;
    real _t073F = 0.e0;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    real _t0741 = 0.e0;
    real _t0742 = 0.e0;
    real _t0743 = 0.e0;
    real _t0744 = 0.1e1;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    tensor[4,4] _t0746 = [_t0736, _t073B, _t0740, _t0745];
    real _t0747 = -0.1e1;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    real _t074A = 0.e0;
    vec4 _t074B = [_t0747, _t0748, _t0749, _t074A];
    real _t074C = 0.e0;
    real _t074D = -0.1e1;
    real _t074E = 0.e0;
    real _t074F = 0.e0;
    vec4 _t0750 = [_t074C, _t074D, _t074E, _t074F];
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    real _t0753 = 0.1e1;
    real _t0754 = 0.e0;
    vec4 _t0755 = [_t0751, _t0752, _t0753, _t0754];
    real _t0756 = 0.e0;
    real _t0757 = 0.e0;
    real _t0758 = 0.e0;
    real _t0759 = 0.1e1;
    vec4 _t075A = [_t0756, _t0757, _t0758, _t0759];
    tensor[4,4] _t075B = [_t074B, _t0750, _t0755, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.1e1;
    real _t075E = 0.e0;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = -0.1e1;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.e0;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    real _t0766 = 0.e0;
    real _t0767 = 0.e0;
    real _t0768 = 0.1e1;
    real _t0769 = 0.e0;
    vec4 _t076A = [_t0766, _t0767, _t0768, _t0769];
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.e0;
    real _t076E = 0.1e1;
    vec4 _t076F = [_t076B, _t076C, _t076D, _t076E];
    tensor[4,4] _t0770 = [_t0760, _t0765, _t076A, _t076F];
    tensor[4,4][6] _t0771 = {_t0707, _t071C, _t0731, _t0746, _t075B, _t0770};
    real _t0772 = 0.e0;
    real _t0773 = 0.1e1;
    real _t0774 = 0.1e1;
    real _t0775 = 0.5e0;
    vec4 _t0776 = [_t0772, _t0773, _t0774, _t0775];
    real _t0777 = 0.e0;
    real _t0778 = 0.1e1;
    real _t0779 = 0.e0;
    real _t077A = 0.e0;
    vec4 _t077B = [_t0777, _t0778, _t0779, _t077A];
    real _t077C = -0.1e1;
    real _t077D = 0.e0;
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    real _t0781 = 0.e0;
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    real _t0784 = 0.1e1;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    tensor[4,4] _t0786 = [_t0776, _t077B, _t0780, _t0785];
    real _t0787 = 0.e0;
    real _t0788 = 0.1e1;
    real _t0789 = 0.1e1;
    real _t078A = 0.5e0;
    vec4 _t078B = [_t0787, _t0788, _t0789, _t078A];
    real _t078C = 0.e0;
    real _t078D = 0.1e1;
    real _t078E = 0.e0;
    real _t078F = 0.e0;
    vec4 _t0790 = [_t078C, _t078D, _t078E, _t078F];
    real _t0791 = -0.1e1;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.1e1;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    real _t0796 = 0.e0;
    real _t0797 = 0.e0;
    real _t0798 = 0.e0;
    real _t0799 = 0.1e1;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    tensor[4,4] _t079B = [_t078B, _t0790, _t0795, _t079A];
    real _t079C = 0.e0;
    real _t079D = 0.1e1;
    real _t079E = 0.e0;
    real _t079F = 0.e0;
    vec4 _t07A0 = [_t079C, _t079D, _t079E, _t079F];
    real _t07A1 = -0.1e1;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.e0;
    real _t07A4 = 0.e0;
    vec4 _t07A5 = [_t07A1, _t07A2, _t07A3, _t07A4];
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.1e1;
    real _t07A9 = 0.e0;
    vec4 _t07AA = [_t07A6, _t07A7, _t07A8, _t07A9];
    real _t07AB = 0.e0;
    real _t07AC = 0.e0;
    real _t07AD = 0.e0;
    real _t07AE = 0.1e1;
    vec4 _t07AF = [_t07AB, _t07AC, _t07AD, _t07AE];
    tensor[4,4] _t07B0 = [_t07A0, _t07A5, _t07AA, _t07AF];
    real _t07B1 = 0.1e1;
    real _t07B2 = 0.e0;
    real _t07B3 = 0.e0;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = 0.1e1;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.e0;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.1e1;
    real _t07BE = 0.e0;
    vec4 _t07BF = [_t07BB, _t07BC, _t07BD, _t07BE];
    real _t07C0 = 0.e0;
    real _t07C1 = 0.e0;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.1e1;
    vec4 _t07C4 = [_t07C0, _t07C1, _t07C2, _t07C3];
    tensor[4,4] _t07C5 = [_t07B5, _t07BA, _t07BF, _t07C4];
    real _t07C6 = 0.e0;
    real _t07C7 = -0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.1e1;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.e0;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.1e1;
    real _t07D3 = 0.e0;
    vec4 _t07D4 = [_t07D0, _t07D1, _t07D2, _t07D3];
    real _t07D5 = 0.e0;
    real _t07D6 = 0.e0;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.1e1;
    vec4 _t07D9 = [_t07D5, _t07D6, _t07D7, _t07D8];
    tensor[4,4] _t07DA = [_t07CA, _t07CF, _t07D4, _t07D9];
    real _t07DB = -0.1e1;
    real _t07DC = 0.e0;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = -0.1e1;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.e0;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    real _t07E5 = 0.e0;
    real _t07E6 = 0.e0;
    real _t07E7 = 0.1e1;
    real _t07E8 = 0.e0;
    vec4 _t07E9 = [_t07E5, _t07E6, _t07E7, _t07E8];
    real _t07EA = 0.e0;
    real _t07EB = 0.e0;
    real _t07EC = 0.e0;
    real _t07ED = 0.1e1;
    vec4 _t07EE = [_t07EA, _t07EB, _t07EC, _t07ED];
    tensor[4,4] _t07EF = [_t07DF, _t07E4, _t07E9, _t07EE];
    tensor[4,4][6] _t07F0 = {_t0786, _t079B, _t07B0, _t07C5, _t07DA, _t07EF};
    real _t07F1 = -0.1e1;
    real _t07F2 = 0.e0;
    real _t07F3 = 0.1e1;
    real _t07F4 = 0.5e0;
    vec4 _t07F5 = [_t07F1, _t07F2, _t07F3, _t07F4];
    real _t07F6 = -0.1e1;
    real _t07F7 = 0.e0;
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    vec4 _t07FA = [_t07F6, _t07F7, _t07F8, _t07F9];
    real _t07FB = 0.e0;
    real _t07FC = -0.1e1;
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    vec4 _t07FF = [_t07FB, _t07FC, _t07FD, _t07FE];
    real _t0800 = 0.e0;
    real _t0801 = 0.e0;
    real _t0802 = 0.e0;
    real _t0803 = 0.1e1;
    vec4 _t0804 = [_t0800, _t0801, _t0802, _t0803];
    tensor[4,4] _t0805 = [_t07F5, _t07FA, _t07FF, _t0804];
    real _t0806 = -0.1e1;
    real _t0807 = 0.e0;
    real _t0808 = 0.1e1;
    real _t0809 = 0.5e0;
    vec4 _t080A = [_t0806, _t0807, _t0808, _t0809];
    real _t080B = -0.1e1;
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    real _t080E = 0.e0;
    vec4 _t080F = [_t080B, _t080C, _t080D, _t080E];
    real _t0810 = 0.e0;
    real _t0811 = -0.1e1;
    real _t0812 = 0.e0;
    real _t0813 = 0.1e1;
    vec4 _t0814 = [_t0810, _t0811, _t0812, _t0813];
    real _t0815 = 0.e0;
    real _t0816 = 0.e0;
    real _t0817 = 0.e0;
    real _t0818 = 0.1e1;
    vec4 _t0819 = [_t0815, _t0816, _t0817, _t0818];
    tensor[4,4] _t081A = [_t080A, _t080F, _t0814, _t0819];
    real _t081B = -0.1e1;
    real _t081C = 0.e0;
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    vec4 _t081F = [_t081B, _t081C, _t081D, _t081E];
    real _t0820 = 0.e0;
    real _t0821 = -0.1e1;
    real _t0822 = 0.e0;
    real _t0823 = 0.e0;
    vec4 _t0824 = [_t0820, _t0821, _t0822, _t0823];
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.1e1;
    real _t0828 = 0.e0;
    vec4 _t0829 = [_t0825, _t0826, _t0827, _t0828];
    real _t082A = 0.e0;
    real _t082B = 0.e0;
    real _t082C = 0.e0;
    real _t082D = 0.1e1;
    vec4 _t082E = [_t082A, _t082B, _t082C, _t082D];
    tensor[4,4] _t082F = [_t081F, _t0824, _t0829, _t082E];
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = -0.1e1;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    real _t0838 = 0.e0;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    real _t083C = 0.1e1;
    real _t083D = 0.e0;
    vec4 _t083E = [_t083A, _t083B, _t083C, _t083D];
    real _t083F = 0.e0;
    real _t0840 = 0.e0;
    real _t0841 = 0.e0;
    real _t0842 = 0.1e1;
    vec4 _t0843 = [_t083F, _t0840, _t0841, _t0842];
    tensor[4,4] _t0844 = [_t0834, _t0839, _t083E, _t0843];
    real _t0845 = 0.1e1;
    real _t0846 = 0.e0;
    real _t0847 = 0.e0;
    real _t0848 = 0.e0;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = 0.e0;
    real _t084B = 0.1e1;
    real _t084C = 0.e0;
    real _t084D = 0.e0;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.1e1;
    real _t0852 = 0.e0;
    vec4 _t0853 = [_t084F, _t0850, _t0851, _t0852];
    real _t0854 = 0.e0;
    real _t0855 = 0.e0;
    real _t0856 = 0.e0;
    real _t0857 = 0.1e1;
    vec4 _t0858 = [_t0854, _t0855, _t0856, _t0857];
    tensor[4,4] _t0859 = [_t0849, _t084E, _t0853, _t0858];
    real _t085A = 0.e0;
    real _t085B = -0.1e1;
    real _t085C = 0.e0;
    real _t085D = 0.e0;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.e0;
    real _t0865 = 0.e0;
    real _t0866 = 0.1e1;
    real _t0867 = 0.e0;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    real _t086C = 0.1e1;
    vec4 _t086D = [_t0869, _t086A, _t086B, _t086C];
    tensor[4,4] _t086E = [_t085E, _t0863, _t0868, _t086D];
    tensor[4,4][6] _t086F = {_t0805, _t081A, _t082F, _t0844, _t0859, _t086E};
    real _t0870 = 0.e0;
    real _t0871 = -0.1e1;
    real _t0872 = 0.1e1;
    real _t0873 = 0.5e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = 0.e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.e0;
    real _t0878 = 0.e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.1e1;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    real _t087D = 0.e0;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    real _t087F = 0.e0;
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.1e1;
    vec4 _t0883 = [_t087F, _t0880, _t0881, _t0882];
    tensor[4,4] _t0884 = [_t0874, _t0879, _t087E, _t0883];
    real _t0885 = 0.e0;
    real _t0886 = -0.1e1;
    real _t0887 = 0.1e1;
    real _t0888 = 0.5e0;
    vec4 _t0889 = [_t0885, _t0886, _t0887, _t0888];
    real _t088A = 0.e0;
    real _t088B = -0.1e1;
    real _t088C = 0.e0;
    real _t088D = 0.e0;
    vec4 _t088E = [_t088A, _t088B, _t088C, _t088D];
    real _t088F = 0.1e1;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    real _t0894 = 0.e0;
    real _t0895 = 0.e0;
    real _t0896 = 0.e0;
    real _t0897 = 0.1e1;
    vec4 _t0898 = [_t0894, _t0895, _t0896, _t0897];
    tensor[4,4] _t0899 = [_t0889, _t088E, _t0893, _t0898];
    real _t089A = 0.e0;
    real _t089B = -0.1e1;
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    vec4 _t089E = [_t089A, _t089B, _t089C, _t089D];
    real _t089F = 0.1e1;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    real _t08A2 = 0.e0;
    vec4 _t08A3 = [_t089F, _t08A0, _t08A1, _t08A2];
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.1e1;
    real _t08A7 = 0.e0;
    vec4 _t08A8 = [_t08A4, _t08A5, _t08A6, _t08A7];
    real _t08A9 = 0.e0;
    real _t08AA = 0.e0;
    real _t08AB = 0.e0;
    real _t08AC = 0.1e1;
    vec4 _t08AD = [_t08A9, _t08AA, _t08AB, _t08AC];
    tensor[4,4] _t08AE = [_t089E, _t08A3, _t08A8, _t08AD];
    real _t08AF = -0.1e1;
    real _t08B0 = 0.e0;
    real _t08B1 = 0.e0;
    real _t08B2 = 0.e0;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.e0;
    real _t08B5 = -0.1e1;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    real _t08BB = 0.1e1;
    real _t08BC = 0.e0;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.1e1;
    vec4 _t08C2 = [_t08BE, _t08BF, _t08C0, _t08C1];
    tensor[4,4] _t08C3 = [_t08B3, _t08B8, _t08BD, _t08C2];
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    real _t08C6 = 0.e0;
    real _t08C7 = 0.e0;
    vec4 _t08C8 = [_t08C4, _t08C5, _t08C6, _t08C7];
    real _t08C9 = -0.1e1;
    real _t08CA = 0.e0;
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.e0;
    real _t08CF = 0.e0;
    real _t08D0 = 0.1e1;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    tensor[4,4] _t08D8 = [_t08C8, _t08CD, _t08D2, _t08D7];
    real _t08D9 = 0.1e1;
    real _t08DA = 0.e0;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    vec4 _t08DD = [_t08D9, _t08DA, _t08DB, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.1e1;
    real _t08E0 = 0.e0;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.e0;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.1e1;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.e0;
    real _t08EA = 0.e0;
    real _t08EB = 0.1e1;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    tensor[4,4] _t08ED = [_t08DD, _t08E2, _t08E7, _t08EC];
    tensor[4,4][6] _t08EE = {_t0884, _t0899, _t08AE, _t08C3, _t08D8, _t08ED};
    tensor[4,4][6][6] _t08EF = {_t0673, _t06F2, _t0771, _t07F0, _t086F, _t08EE};
    real _t08F0 = time05E1[1];
    int _t08F1 = prim $r2i01B7 (_t08F0);
    tensor[4,4][6] _t08F2 = prim $sub01C0<tensor[4,4][6]; %6> (_t08EF, _t08F1);
    real _t08F3 = time05E1[1];
    int _t08F4 = prim $r2i01B7 (_t08F3);
    int[2] _t08F5 = func nextCell405E5 (_t08F4, cellId05DE, mesh05DD);
    int _t08F6 = 1;
    int _t08F7 = prim $sub01C0<int; %2> (_t08F5, _t08F6);
    tensor[4,4] _t08F8 = prim $sub01C0<tensor[4,4]; %6> (_t08F2, _t08F7);
    string _t08F9 = "\n";
    print (_t05EA, _t05EC, _t05ED, _t05F2, _t05F3, _t05F4, _t08F8, _t08F9);
    real _t08FA = time05E1[1];
    int _t08FB = prim $r2i01B7 (_t08FA);
    int[2] _t08FC = func nextCell405E5 (_t08FB, cellId05DE, mesh05DD);
    int _t08FD = 0;
    int _t08FE = prim $sub01C0<int; %2> (_t08FC, _t08FD);
    real _t08FF = 0.1e1;
    real _t0900 = 0.e0;
    real _t0901 = 0.e0;
    real _t0902 = 0.e0;
    vec4 _t0903 = [_t08FF, _t0900, _t0901, _t0902];
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    real _t0906 = 0.e0;
    real _t0907 = 0.e0;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.1e1;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    real _t0911 = 0.1e1;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    tensor[4,4] _t0913 = [_t0903, _t0908, _t090D, _t0912];
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    real _t0916 = 0.e0;
    real _t0917 = 0.e0;
    vec4 _t0918 = [_t0914, _t0915, _t0916, _t0917];
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    real _t091B = 0.e0;
    real _t091C = 0.e0;
    vec4 _t091D = [_t0919, _t091A, _t091B, _t091C];
    real _t091E = 0.e0;
    real _t091F = 0.e0;
    real _t0920 = 0.1e1;
    real _t0921 = 0.1e1;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.e0;
    real _t0924 = 0.e0;
    real _t0925 = 0.e0;
    real _t0926 = 0.1e1;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    tensor[4,4] _t0928 = [_t0918, _t091D, _t0922, _t0927];
    real _t0929 = 0.e0;
    real _t092A = 0.1e1;
    real _t092B = 0.e0;
    real _t092C = 0.e0;
    vec4 _t092D = [_t0929, _t092A, _t092B, _t092C];
    real _t092E = 0.e0;
    real _t092F = 0.e0;
    real _t0930 = 0.1e1;
    real _t0931 = 0.e0;
    vec4 _t0932 = [_t092E, _t092F, _t0930, _t0931];
    real _t0933 = 0.1e1;
    real _t0934 = -0.1e1;
    real _t0935 = 0.e0;
    real _t0936 = -0.5e0;
    vec4 _t0937 = [_t0933, _t0934, _t0935, _t0936];
    real _t0938 = 0.e0;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.1e1;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    tensor[4,4] _t093D = [_t092D, _t0932, _t0937, _t093C];
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = -0.1e1;
    real _t0941 = 0.e0;
    vec4 _t0942 = [_t093E, _t093F, _t0940, _t0941];
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    vec4 _t0947 = [_t0943, _t0944, _t0945, _t0946];
    real _t0948 = 0.1e1;
    real _t0949 = -0.1e1;
    real _t094A = 0.e0;
    real _t094B = -0.5e0;
    vec4 _t094C = [_t0948, _t0949, _t094A, _t094B];
    real _t094D = 0.e0;
    real _t094E = 0.e0;
    real _t094F = 0.e0;
    real _t0950 = 0.1e1;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    tensor[4,4] _t0952 = [_t0942, _t0947, _t094C, _t0951];
    real _t0953 = 0.e0;
    real _t0954 = -0.1e1;
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    vec4 _t0957 = [_t0953, _t0954, _t0955, _t0956];
    real _t0958 = 0.e0;
    real _t0959 = 0.e0;
    real _t095A = -0.1e1;
    real _t095B = 0.e0;
    vec4 _t095C = [_t0958, _t0959, _t095A, _t095B];
    real _t095D = 0.1e1;
    real _t095E = -0.1e1;
    real _t095F = 0.e0;
    real _t0960 = -0.5e0;
    vec4 _t0961 = [_t095D, _t095E, _t095F, _t0960];
    real _t0962 = 0.e0;
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    tensor[4,4] _t0967 = [_t0957, _t095C, _t0961, _t0966];
    real _t0968 = 0.e0;
    real _t0969 = 0.e0;
    real _t096A = 0.1e1;
    real _t096B = 0.e0;
    vec4 _t096C = [_t0968, _t0969, _t096A, _t096B];
    real _t096D = 0.e0;
    real _t096E = -0.1e1;
    real _t096F = 0.e0;
    real _t0970 = 0.e0;
    vec4 _t0971 = [_t096D, _t096E, _t096F, _t0970];
    real _t0972 = 0.1e1;
    real _t0973 = -0.1e1;
    real _t0974 = 0.e0;
    real _t0975 = -0.5e0;
    vec4 _t0976 = [_t0972, _t0973, _t0974, _t0975];
    real _t0977 = 0.e0;
    real _t0978 = 0.e0;
    real _t0979 = 0.e0;
    real _t097A = 0.1e1;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    tensor[4,4] _t097C = [_t096C, _t0971, _t0976, _t097B];
    tensor[4,4][6] _t097D = {_t0913, _t0928, _t093D, _t0952, _t0967, _t097C};
    real _t097E = 0.1e1;
    real _t097F = 0.e0;
    real _t0980 = 0.e0;
    real _t0981 = 0.e0;
    vec4 _t0982 = [_t097E, _t097F, _t0980, _t0981];
    real _t0983 = 0.e0;
    real _t0984 = 0.1e1;
    real _t0985 = 0.e0;
    real _t0986 = 0.e0;
    vec4 _t0987 = [_t0983, _t0984, _t0985, _t0986];
    real _t0988 = 0.e0;
    real _t0989 = 0.e0;
    real _t098A = 0.1e1;
    real _t098B = -0.1e1;
    vec4 _t098C = [_t0988, _t0989, _t098A, _t098B];
    real _t098D = 0.e0;
    real _t098E = 0.e0;
    real _t098F = 0.e0;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    tensor[4,4] _t0992 = [_t0982, _t0987, _t098C, _t0991];
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    real _t0996 = 0.e0;
    vec4 _t0997 = [_t0993, _t0994, _t0995, _t0996];
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    real _t099B = 0.e0;
    vec4 _t099C = [_t0998, _t0999, _t099A, _t099B];
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    real _t09A0 = 0.e0;
    vec4 _t09A1 = [_t099D, _t099E, _t099F, _t09A0];
    real _t09A2 = 0.e0;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.1e1;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    tensor[4,4] _t09A7 = [_t0997, _t099C, _t09A1, _t09A6];
    real _t09A8 = 0.e0;
    real _t09A9 = 0.1e1;
    real _t09AA = 0.e0;
    real _t09AB = 0.e0;
    vec4 _t09AC = [_t09A8, _t09A9, _t09AA, _t09AB];
    real _t09AD = 0.e0;
    real _t09AE = 0.e0;
    real _t09AF = 0.1e1;
    real _t09B0 = -0.1e1;
    vec4 _t09B1 = [_t09AD, _t09AE, _t09AF, _t09B0];
    real _t09B2 = 0.1e1;
    real _t09B3 = -0.1e1;
    real _t09B4 = 0.e0;
    real _t09B5 = -0.5e0;
    vec4 _t09B6 = [_t09B2, _t09B3, _t09B4, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.e0;
    real _t09B9 = 0.e0;
    real _t09BA = 0.1e1;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    tensor[4,4] _t09BC = [_t09AC, _t09B1, _t09B6, _t09BB];
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = -0.1e1;
    real _t09C0 = 0.1e1;
    vec4 _t09C1 = [_t09BD, _t09BE, _t09BF, _t09C0];
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.e0;
    vec4 _t09C6 = [_t09C2, _t09C3, _t09C4, _t09C5];
    real _t09C7 = 0.1e1;
    real _t09C8 = -0.1e1;
    real _t09C9 = 0.e0;
    real _t09CA = -0.5e0;
    vec4 _t09CB = [_t09C7, _t09C8, _t09C9, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.e0;
    real _t09CE = 0.e0;
    real _t09CF = 0.1e1;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    tensor[4,4] _t09D1 = [_t09C1, _t09C6, _t09CB, _t09D0];
    real _t09D2 = 0.e0;
    real _t09D3 = -0.1e1;
    real _t09D4 = 0.e0;
    real _t09D5 = 0.e0;
    vec4 _t09D6 = [_t09D2, _t09D3, _t09D4, _t09D5];
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = -0.1e1;
    real _t09DA = 0.1e1;
    vec4 _t09DB = [_t09D7, _t09D8, _t09D9, _t09DA];
    real _t09DC = 0.1e1;
    real _t09DD = -0.1e1;
    real _t09DE = 0.e0;
    real _t09DF = -0.5e0;
    vec4 _t09E0 = [_t09DC, _t09DD, _t09DE, _t09DF];
    real _t09E1 = 0.e0;
    real _t09E2 = 0.e0;
    real _t09E3 = 0.e0;
    real _t09E4 = 0.1e1;
    vec4 _t09E5 = [_t09E1, _t09E2, _t09E3, _t09E4];
    tensor[4,4] _t09E6 = [_t09D6, _t09DB, _t09E0, _t09E5];
    real _t09E7 = 0.e0;
    real _t09E8 = 0.e0;
    real _t09E9 = 0.1e1;
    real _t09EA = -0.1e1;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.1e1;
    real _t09EE = 0.e0;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.1e1;
    real _t09F2 = -0.1e1;
    real _t09F3 = 0.e0;
    real _t09F4 = -0.5e0;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    real _t09F6 = 0.e0;
    real _t09F7 = 0.e0;
    real _t09F8 = 0.e0;
    real _t09F9 = 0.1e1;
    vec4 _t09FA = [_t09F6, _t09F7, _t09F8, _t09F9];
    tensor[4,4] _t09FB = [_t09EB, _t09F0, _t09F5, _t09FA];
    tensor[4,4][6] _t09FC = {_t0992, _t09A7, _t09BC, _t09D1, _t09E6, _t09FB};
    real _t09FD = 0.1e1;
    real _t09FE = 0.e0;
    real _t09FF = 0.1e1;
    real _t0A00 = 0.5e0;
    vec4 _t0A01 = [_t09FD, _t09FE, _t09FF, _t0A00];
    real _t0A02 = 0.1e1;
    real _t0A03 = 0.e0;
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    vec4 _t0A06 = [_t0A02, _t0A03, _t0A04, _t0A05];
    real _t0A07 = 0.e0;
    real _t0A08 = 0.1e1;
    real _t0A09 = 0.e0;
    real _t0A0A = 0.e0;
    vec4 _t0A0B = [_t0A07, _t0A08, _t0A09, _t0A0A];
    real _t0A0C = 0.e0;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.1e1;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    tensor[4,4] _t0A11 = [_t0A01, _t0A06, _t0A0B, _t0A10];
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.1e1;
    real _t0A15 = 0.5e0;
    vec4 _t0A16 = [_t0A12, _t0A13, _t0A14, _t0A15];
    real _t0A17 = 0.1e1;
    real _t0A18 = 0.e0;
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    vec4 _t0A1B = [_t0A17, _t0A18, _t0A19, _t0A1A];
    real _t0A1C = 0.e0;
    real _t0A1D = 0.1e1;
    real _t0A1E = 0.e0;
    real _t0A1F = 0.1e1;
    vec4 _t0A20 = [_t0A1C, _t0A1D, _t0A1E, _t0A1F];
    real _t0A21 = 0.e0;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.1e1;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    tensor[4,4] _t0A26 = [_t0A16, _t0A1B, _t0A20, _t0A25];
    real _t0A27 = 0.1e1;
    real _t0A28 = 0.e0;
    real _t0A29 = 0.e0;
    real _t0A2A = 0.e0;
    vec4 _t0A2B = [_t0A27, _t0A28, _t0A29, _t0A2A];
    real _t0A2C = 0.e0;
    real _t0A2D = 0.1e1;
    real _t0A2E = 0.e0;
    real _t0A2F = 0.e0;
    vec4 _t0A30 = [_t0A2C, _t0A2D, _t0A2E, _t0A2F];
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    real _t0A34 = 0.e0;
    vec4 _t0A35 = [_t0A31, _t0A32, _t0A33, _t0A34];
    real _t0A36 = 0.e0;
    real _t0A37 = 0.e0;
    real _t0A38 = 0.e0;
    real _t0A39 = 0.1e1;
    vec4 _t0A3A = [_t0A36, _t0A37, _t0A38, _t0A39];
    tensor[4,4] _t0A3B = [_t0A2B, _t0A30, _t0A35, _t0A3A];
    real _t0A3C = 0.e0;
    real _t0A3D = -0.1e1;
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.1e1;
    real _t0A42 = 0.e0;
    real _t0A43 = 0.e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.1e1;
    real _t0A49 = 0.e0;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    real _t0A4B = 0.e0;
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    vec4 _t0A4F = [_t0A4B, _t0A4C, _t0A4D, _t0A4E];
    tensor[4,4] _t0A50 = [_t0A40, _t0A45, _t0A4A, _t0A4F];
    real _t0A51 = -0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = -0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.1e1;
    real _t0A5E = 0.e0;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    real _t0A60 = 0.e0;
    real _t0A61 = 0.e0;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.1e1;
    vec4 _t0A64 = [_t0A60, _t0A61, _t0A62, _t0A63];
    tensor[4,4] _t0A65 = [_t0A55, _t0A5A, _t0A5F, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.1e1;
    real _t0A68 = 0.e0;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = -0.1e1;
    real _t0A6C = 0.e0;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.1e1;
    real _t0A73 = 0.e0;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    real _t0A75 = 0.e0;
    real _t0A76 = 0.e0;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.1e1;
    vec4 _t0A79 = [_t0A75, _t0A76, _t0A77, _t0A78];
    tensor[4,4] _t0A7A = [_t0A6A, _t0A6F, _t0A74, _t0A79];
    tensor[4,4][6] _t0A7B = {_t0A11, _t0A26, _t0A3B, _t0A50, _t0A65, _t0A7A};
    real _t0A7C = 0.e0;
    real _t0A7D = 0.1e1;
    real _t0A7E = 0.1e1;
    real _t0A7F = 0.5e0;
    vec4 _t0A80 = [_t0A7C, _t0A7D, _t0A7E, _t0A7F];
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    real _t0A84 = 0.e0;
    vec4 _t0A85 = [_t0A81, _t0A82, _t0A83, _t0A84];
    real _t0A86 = -0.1e1;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.e0;
    real _t0A89 = 0.e0;
    vec4 _t0A8A = [_t0A86, _t0A87, _t0A88, _t0A89];
    real _t0A8B = 0.e0;
    real _t0A8C = 0.e0;
    real _t0A8D = 0.e0;
    real _t0A8E = 0.1e1;
    vec4 _t0A8F = [_t0A8B, _t0A8C, _t0A8D, _t0A8E];
    tensor[4,4] _t0A90 = [_t0A80, _t0A85, _t0A8A, _t0A8F];
    real _t0A91 = 0.e0;
    real _t0A92 = 0.1e1;
    real _t0A93 = 0.1e1;
    real _t0A94 = 0.5e0;
    vec4 _t0A95 = [_t0A91, _t0A92, _t0A93, _t0A94];
    real _t0A96 = 0.e0;
    real _t0A97 = 0.1e1;
    real _t0A98 = 0.e0;
    real _t0A99 = 0.e0;
    vec4 _t0A9A = [_t0A96, _t0A97, _t0A98, _t0A99];
    real _t0A9B = -0.1e1;
    real _t0A9C = 0.e0;
    real _t0A9D = 0.e0;
    real _t0A9E = 0.1e1;
    vec4 _t0A9F = [_t0A9B, _t0A9C, _t0A9D, _t0A9E];
    real _t0AA0 = 0.e0;
    real _t0AA1 = 0.e0;
    real _t0AA2 = 0.e0;
    real _t0AA3 = 0.1e1;
    vec4 _t0AA4 = [_t0AA0, _t0AA1, _t0AA2, _t0AA3];
    tensor[4,4] _t0AA5 = [_t0A95, _t0A9A, _t0A9F, _t0AA4];
    real _t0AA6 = 0.e0;
    real _t0AA7 = 0.1e1;
    real _t0AA8 = 0.e0;
    real _t0AA9 = 0.e0;
    vec4 _t0AAA = [_t0AA6, _t0AA7, _t0AA8, _t0AA9];
    real _t0AAB = -0.1e1;
    real _t0AAC = 0.e0;
    real _t0AAD = 0.e0;
    real _t0AAE = 0.e0;
    vec4 _t0AAF = [_t0AAB, _t0AAC, _t0AAD, _t0AAE];
    real _t0AB0 = 0.e0;
    real _t0AB1 = 0.e0;
    real _t0AB2 = 0.1e1;
    real _t0AB3 = 0.e0;
    vec4 _t0AB4 = [_t0AB0, _t0AB1, _t0AB2, _t0AB3];
    real _t0AB5 = 0.e0;
    real _t0AB6 = 0.e0;
    real _t0AB7 = 0.e0;
    real _t0AB8 = 0.1e1;
    vec4 _t0AB9 = [_t0AB5, _t0AB6, _t0AB7, _t0AB8];
    tensor[4,4] _t0ABA = [_t0AAA, _t0AAF, _t0AB4, _t0AB9];
    real _t0ABB = 0.1e1;
    real _t0ABC = 0.e0;
    real _t0ABD = 0.e0;
    real _t0ABE = 0.e0;
    vec4 _t0ABF = [_t0ABB, _t0ABC, _t0ABD, _t0ABE];
    real _t0AC0 = 0.e0;
    real _t0AC1 = 0.1e1;
    real _t0AC2 = 0.e0;
    real _t0AC3 = 0.e0;
    vec4 _t0AC4 = [_t0AC0, _t0AC1, _t0AC2, _t0AC3];
    real _t0AC5 = 0.e0;
    real _t0AC6 = 0.e0;
    real _t0AC7 = 0.1e1;
    real _t0AC8 = 0.e0;
    vec4 _t0AC9 = [_t0AC5, _t0AC6, _t0AC7, _t0AC8];
    real _t0ACA = 0.e0;
    real _t0ACB = 0.e0;
    real _t0ACC = 0.e0;
    real _t0ACD = 0.1e1;
    vec4 _t0ACE = [_t0ACA, _t0ACB, _t0ACC, _t0ACD];
    tensor[4,4] _t0ACF = [_t0ABF, _t0AC4, _t0AC9, _t0ACE];
    real _t0AD0 = 0.e0;
    real _t0AD1 = -0.1e1;
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.e0;
    vec4 _t0AD4 = [_t0AD0, _t0AD1, _t0AD2, _t0AD3];
    real _t0AD5 = 0.1e1;
    real _t0AD6 = 0.e0;
    real _t0AD7 = 0.e0;
    real _t0AD8 = 0.e0;
    vec4 _t0AD9 = [_t0AD5, _t0AD6, _t0AD7, _t0AD8];
    real _t0ADA = 0.e0;
    real _t0ADB = 0.e0;
    real _t0ADC = 0.1e1;
    real _t0ADD = 0.e0;
    vec4 _t0ADE = [_t0ADA, _t0ADB, _t0ADC, _t0ADD];
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.e0;
    real _t0AE1 = 0.e0;
    real _t0AE2 = 0.1e1;
    vec4 _t0AE3 = [_t0ADF, _t0AE0, _t0AE1, _t0AE2];
    tensor[4,4] _t0AE4 = [_t0AD4, _t0AD9, _t0ADE, _t0AE3];
    real _t0AE5 = -0.1e1;
    real _t0AE6 = 0.e0;
    real _t0AE7 = 0.e0;
    real _t0AE8 = 0.e0;
    vec4 _t0AE9 = [_t0AE5, _t0AE6, _t0AE7, _t0AE8];
    real _t0AEA = 0.e0;
    real _t0AEB = -0.1e1;
    real _t0AEC = 0.e0;
    real _t0AED = 0.e0;
    vec4 _t0AEE = [_t0AEA, _t0AEB, _t0AEC, _t0AED];
    real _t0AEF = 0.e0;
    real _t0AF0 = 0.e0;
    real _t0AF1 = 0.1e1;
    real _t0AF2 = 0.e0;
    vec4 _t0AF3 = [_t0AEF, _t0AF0, _t0AF1, _t0AF2];
    real _t0AF4 = 0.e0;
    real _t0AF5 = 0.e0;
    real _t0AF6 = 0.e0;
    real _t0AF7 = 0.1e1;
    vec4 _t0AF8 = [_t0AF4, _t0AF5, _t0AF6, _t0AF7];
    tensor[4,4] _t0AF9 = [_t0AE9, _t0AEE, _t0AF3, _t0AF8];
    tensor[4,4][6] _t0AFA = {_t0A90, _t0AA5, _t0ABA, _t0ACF, _t0AE4, _t0AF9};
    real _t0AFB = -0.1e1;
    real _t0AFC = 0.e0;
    real _t0AFD = 0.1e1;
    real _t0AFE = 0.5e0;
    vec4 _t0AFF = [_t0AFB, _t0AFC, _t0AFD, _t0AFE];
    real _t0B00 = -0.1e1;
    real _t0B01 = 0.e0;
    real _t0B02 = 0.e0;
    real _t0B03 = 0.e0;
    vec4 _t0B04 = [_t0B00, _t0B01, _t0B02, _t0B03];
    real _t0B05 = 0.e0;
    real _t0B06 = -0.1e1;
    real _t0B07 = 0.e0;
    real _t0B08 = 0.e0;
    vec4 _t0B09 = [_t0B05, _t0B06, _t0B07, _t0B08];
    real _t0B0A = 0.e0;
    real _t0B0B = 0.e0;
    real _t0B0C = 0.e0;
    real _t0B0D = 0.1e1;
    vec4 _t0B0E = [_t0B0A, _t0B0B, _t0B0C, _t0B0D];
    tensor[4,4] _t0B0F = [_t0AFF, _t0B04, _t0B09, _t0B0E];
    real _t0B10 = -0.1e1;
    real _t0B11 = 0.e0;
    real _t0B12 = 0.1e1;
    real _t0B13 = 0.5e0;
    vec4 _t0B14 = [_t0B10, _t0B11, _t0B12, _t0B13];
    real _t0B15 = -0.1e1;
    real _t0B16 = 0.e0;
    real _t0B17 = 0.e0;
    real _t0B18 = 0.e0;
    vec4 _t0B19 = [_t0B15, _t0B16, _t0B17, _t0B18];
    real _t0B1A = 0.e0;
    real _t0B1B = -0.1e1;
    real _t0B1C = 0.e0;
    real _t0B1D = 0.1e1;
    vec4 _t0B1E = [_t0B1A, _t0B1B, _t0B1C, _t0B1D];
    real _t0B1F = 0.e0;
    real _t0B20 = 0.e0;
    real _t0B21 = 0.e0;
    real _t0B22 = 0.1e1;
    vec4 _t0B23 = [_t0B1F, _t0B20, _t0B21, _t0B22];
    tensor[4,4] _t0B24 = [_t0B14, _t0B19, _t0B1E, _t0B23];
    real _t0B25 = -0.1e1;
    real _t0B26 = 0.e0;
    real _t0B27 = 0.e0;
    real _t0B28 = 0.e0;
    vec4 _t0B29 = [_t0B25, _t0B26, _t0B27, _t0B28];
    real _t0B2A = 0.e0;
    real _t0B2B = -0.1e1;
    real _t0B2C = 0.e0;
    real _t0B2D = 0.e0;
    vec4 _t0B2E = [_t0B2A, _t0B2B, _t0B2C, _t0B2D];
    real _t0B2F = 0.e0;
    real _t0B30 = 0.e0;
    real _t0B31 = 0.1e1;
    real _t0B32 = 0.e0;
    vec4 _t0B33 = [_t0B2F, _t0B30, _t0B31, _t0B32];
    real _t0B34 = 0.e0;
    real _t0B35 = 0.e0;
    real _t0B36 = 0.e0;
    real _t0B37 = 0.1e1;
    vec4 _t0B38 = [_t0B34, _t0B35, _t0B36, _t0B37];
    tensor[4,4] _t0B39 = [_t0B29, _t0B2E, _t0B33, _t0B38];
    real _t0B3A = 0.e0;
    real _t0B3B = 0.1e1;
    real _t0B3C = 0.e0;
    real _t0B3D = 0.e0;
    vec4 _t0B3E = [_t0B3A, _t0B3B, _t0B3C, _t0B3D];
    real _t0B3F = -0.1e1;
    real _t0B40 = 0.e0;
    real _t0B41 = 0.e0;
    real _t0B42 = 0.e0;
    vec4 _t0B43 = [_t0B3F, _t0B40, _t0B41, _t0B42];
    real _t0B44 = 0.e0;
    real _t0B45 = 0.e0;
    real _t0B46 = 0.1e1;
    real _t0B47 = 0.e0;
    vec4 _t0B48 = [_t0B44, _t0B45, _t0B46, _t0B47];
    real _t0B49 = 0.e0;
    real _t0B4A = 0.e0;
    real _t0B4B = 0.e0;
    real _t0B4C = 0.1e1;
    vec4 _t0B4D = [_t0B49, _t0B4A, _t0B4B, _t0B4C];
    tensor[4,4] _t0B4E = [_t0B3E, _t0B43, _t0B48, _t0B4D];
    real _t0B4F = 0.1e1;
    real _t0B50 = 0.e0;
    real _t0B51 = 0.e0;
    real _t0B52 = 0.e0;
    vec4 _t0B53 = [_t0B4F, _t0B50, _t0B51, _t0B52];
    real _t0B54 = 0.e0;
    real _t0B55 = 0.1e1;
    real _t0B56 = 0.e0;
    real _t0B57 = 0.e0;
    vec4 _t0B58 = [_t0B54, _t0B55, _t0B56, _t0B57];
    real _t0B59 = 0.e0;
    real _t0B5A = 0.e0;
    real _t0B5B = 0.1e1;
    real _t0B5C = 0.e0;
    vec4 _t0B5D = [_t0B59, _t0B5A, _t0B5B, _t0B5C];
    real _t0B5E = 0.e0;
    real _t0B5F = 0.e0;
    real _t0B60 = 0.e0;
    real _t0B61 = 0.1e1;
    vec4 _t0B62 = [_t0B5E, _t0B5F, _t0B60, _t0B61];
    tensor[4,4] _t0B63 = [_t0B53, _t0B58, _t0B5D, _t0B62];
    real _t0B64 = 0.e0;
    real _t0B65 = -0.1e1;
    real _t0B66 = 0.e0;
    real _t0B67 = 0.e0;
    vec4 _t0B68 = [_t0B64, _t0B65, _t0B66, _t0B67];
    real _t0B69 = 0.1e1;
    real _t0B6A = 0.e0;
    real _t0B6B = 0.e0;
    real _t0B6C = 0.e0;
    vec4 _t0B6D = [_t0B69, _t0B6A, _t0B6B, _t0B6C];
    real _t0B6E = 0.e0;
    real _t0B6F = 0.e0;
    real _t0B70 = 0.1e1;
    real _t0B71 = 0.e0;
    vec4 _t0B72 = [_t0B6E, _t0B6F, _t0B70, _t0B71];
    real _t0B73 = 0.e0;
    real _t0B74 = 0.e0;
    real _t0B75 = 0.e0;
    real _t0B76 = 0.1e1;
    vec4 _t0B77 = [_t0B73, _t0B74, _t0B75, _t0B76];
    tensor[4,4] _t0B78 = [_t0B68, _t0B6D, _t0B72, _t0B77];
    tensor[4,4][6] _t0B79 = {_t0B0F, _t0B24, _t0B39, _t0B4E, _t0B63, _t0B78};
    real _t0B7A = 0.e0;
    real _t0B7B = -0.1e1;
    real _t0B7C = 0.1e1;
    real _t0B7D = 0.5e0;
    vec4 _t0B7E = [_t0B7A, _t0B7B, _t0B7C, _t0B7D];
    real _t0B7F = 0.e0;
    real _t0B80 = -0.1e1;
    real _t0B81 = 0.e0;
    real _t0B82 = 0.e0;
    vec4 _t0B83 = [_t0B7F, _t0B80, _t0B81, _t0B82];
    real _t0B84 = 0.1e1;
    real _t0B85 = 0.e0;
    real _t0B86 = 0.e0;
    real _t0B87 = 0.e0;
    vec4 _t0B88 = [_t0B84, _t0B85, _t0B86, _t0B87];
    real _t0B89 = 0.e0;
    real _t0B8A = 0.e0;
    real _t0B8B = 0.e0;
    real _t0B8C = 0.1e1;
    vec4 _t0B8D = [_t0B89, _t0B8A, _t0B8B, _t0B8C];
    tensor[4,4] _t0B8E = [_t0B7E, _t0B83, _t0B88, _t0B8D];
    real _t0B8F = 0.e0;
    real _t0B90 = -0.1e1;
    real _t0B91 = 0.1e1;
    real _t0B92 = 0.5e0;
    vec4 _t0B93 = [_t0B8F, _t0B90, _t0B91, _t0B92];
    real _t0B94 = 0.e0;
    real _t0B95 = -0.1e1;
    real _t0B96 = 0.e0;
    real _t0B97 = 0.e0;
    vec4 _t0B98 = [_t0B94, _t0B95, _t0B96, _t0B97];
    real _t0B99 = 0.1e1;
    real _t0B9A = 0.e0;
    real _t0B9B = 0.e0;
    real _t0B9C = 0.1e1;
    vec4 _t0B9D = [_t0B99, _t0B9A, _t0B9B, _t0B9C];
    real _t0B9E = 0.e0;
    real _t0B9F = 0.e0;
    real _t0BA0 = 0.e0;
    real _t0BA1 = 0.1e1;
    vec4 _t0BA2 = [_t0B9E, _t0B9F, _t0BA0, _t0BA1];
    tensor[4,4] _t0BA3 = [_t0B93, _t0B98, _t0B9D, _t0BA2];
    real _t0BA4 = 0.e0;
    real _t0BA5 = -0.1e1;
    real _t0BA6 = 0.e0;
    real _t0BA7 = 0.e0;
    vec4 _t0BA8 = [_t0BA4, _t0BA5, _t0BA6, _t0BA7];
    real _t0BA9 = 0.1e1;
    real _t0BAA = 0.e0;
    real _t0BAB = 0.e0;
    real _t0BAC = 0.e0;
    vec4 _t0BAD = [_t0BA9, _t0BAA, _t0BAB, _t0BAC];
    real _t0BAE = 0.e0;
    real _t0BAF = 0.e0;
    real _t0BB0 = 0.1e1;
    real _t0BB1 = 0.e0;
    vec4 _t0BB2 = [_t0BAE, _t0BAF, _t0BB0, _t0BB1];
    real _t0BB3 = 0.e0;
    real _t0BB4 = 0.e0;
    real _t0BB5 = 0.e0;
    real _t0BB6 = 0.1e1;
    vec4 _t0BB7 = [_t0BB3, _t0BB4, _t0BB5, _t0BB6];
    tensor[4,4] _t0BB8 = [_t0BA8, _t0BAD, _t0BB2, _t0BB7];
    real _t0BB9 = -0.1e1;
    real _t0BBA = 0.e0;
    real _t0BBB = 0.e0;
    real _t0BBC = 0.e0;
    vec4 _t0BBD = [_t0BB9, _t0BBA, _t0BBB, _t0BBC];
    real _t0BBE = 0.e0;
    real _t0BBF = -0.1e1;
    real _t0BC0 = 0.e0;
    real _t0BC1 = 0.e0;
    vec4 _t0BC2 = [_t0BBE, _t0BBF, _t0BC0, _t0BC1];
    real _t0BC3 = 0.e0;
    real _t0BC4 = 0.e0;
    real _t0BC5 = 0.1e1;
    real _t0BC6 = 0.e0;
    vec4 _t0BC7 = [_t0BC3, _t0BC4, _t0BC5, _t0BC6];
    real _t0BC8 = 0.e0;
    real _t0BC9 = 0.e0;
    real _t0BCA = 0.e0;
    real _t0BCB = 0.1e1;
    vec4 _t0BCC = [_t0BC8, _t0BC9, _t0BCA, _t0BCB];
    tensor[4,4] _t0BCD = [_t0BBD, _t0BC2, _t0BC7, _t0BCC];
    real _t0BCE = 0.e0;
    real _t0BCF = 0.1e1;
    real _t0BD0 = 0.e0;
    real _t0BD1 = 0.e0;
    vec4 _t0BD2 = [_t0BCE, _t0BCF, _t0BD0, _t0BD1];
    real _t0BD3 = -0.1e1;
    real _t0BD4 = 0.e0;
    real _t0BD5 = 0.e0;
    real _t0BD6 = 0.e0;
    vec4 _t0BD7 = [_t0BD3, _t0BD4, _t0BD5, _t0BD6];
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    real _t0BDA = 0.1e1;
    real _t0BDB = 0.e0;
    vec4 _t0BDC = [_t0BD8, _t0BD9, _t0BDA, _t0BDB];
    real _t0BDD = 0.e0;
    real _t0BDE = 0.e0;
    real _t0BDF = 0.e0;
    real _t0BE0 = 0.1e1;
    vec4 _t0BE1 = [_t0BDD, _t0BDE, _t0BDF, _t0BE0];
    tensor[4,4] _t0BE2 = [_t0BD2, _t0BD7, _t0BDC, _t0BE1];
    real _t0BE3 = 0.1e1;
    real _t0BE4 = 0.e0;
    real _t0BE5 = 0.e0;
    real _t0BE6 = 0.e0;
    vec4 _t0BE7 = [_t0BE3, _t0BE4, _t0BE5, _t0BE6];
    real _t0BE8 = 0.e0;
    real _t0BE9 = 0.1e1;
    real _t0BEA = 0.e0;
    real _t0BEB = 0.e0;
    vec4 _t0BEC = [_t0BE8, _t0BE9, _t0BEA, _t0BEB];
    real _t0BED = 0.e0;
    real _t0BEE = 0.e0;
    real _t0BEF = 0.1e1;
    real _t0BF0 = 0.e0;
    vec4 _t0BF1 = [_t0BED, _t0BEE, _t0BEF, _t0BF0];
    real _t0BF2 = 0.e0;
    real _t0BF3 = 0.e0;
    real _t0BF4 = 0.e0;
    real _t0BF5 = 0.1e1;
    vec4 _t0BF6 = [_t0BF2, _t0BF3, _t0BF4, _t0BF5];
    tensor[4,4] _t0BF7 = [_t0BE7, _t0BEC, _t0BF1, _t0BF6];
    tensor[4,4][6] _t0BF8 = {_t0B8E, _t0BA3, _t0BB8, _t0BCD, _t0BE2, _t0BF7};
    tensor[4,4][6][6] _t0BF9 = {_t097D, _t09FC, _t0A7B, _t0AFA, _t0B79, _t0BF8};
    real _t0BFA = time05E1[1];
    int _t0BFB = prim $r2i01B7 (_t0BFA);
    tensor[4,4][6] _t0BFC = prim $sub01C0<tensor[4,4][6]; %6> (_t0BF9, _t0BFB);
    real _t0BFD = time05E1[1];
    int _t0BFE = prim $r2i01B7 (_t0BFD);
    int[2] _t0BFF = func nextCell405E5 (_t0BFE, cellId05DE, mesh05DD);
    int _t0C00 = 1;
    int _t0C01 = prim $sub01C0<int; %2> (_t0BFF, _t0C00);
    tensor[4,4] _t0C02 = prim $sub01C0<tensor[4,4]; %6> (_t0BFC, _t0C01);
    real _t0C03 = time05E1[0];
    vec3 _t0C04 = prim *0036<$[3]> (_t0C03, dPos05E0);
    vec3 _t0C05 = prim +0017<$[3]> (_t0C04, refPos05DF);
    real _t0C06 = _t0C05[0];
    real _t0C07 = time05E1[0];
    vec3 _t0C08 = prim *0036<$[3]> (_t0C07, dPos05E0);
    vec3 _t0C09 = prim +0017<$[3]> (_t0C08, refPos05DF);
    real _t0C0A = _t0C09[1];
    real _t0C0B = time05E1[0];
    vec3 _t0C0C = prim *0036<$[3]> (_t0C0B, dPos05E0);
    vec3 _t0C0D = prim +0017<$[3]> (_t0C0C, refPos05DF);
    real _t0C0E = _t0C0D[2];
    real _t0C0F = 0.1e1;
    vec4 _t0C10 = [_t0C06, _t0C0A, _t0C0E, _t0C0F];
    vec4 _t0C11 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0C02, _t0C10);
    real _t0C12 = _t0C11[0];
    real _t0C13 = 0.1e1;
    real _t0C14 = 0.e0;
    real _t0C15 = 0.e0;
    real _t0C16 = 0.e0;
    vec4 _t0C17 = [_t0C13, _t0C14, _t0C15, _t0C16];
    real _t0C18 = 0.e0;
    real _t0C19 = 0.1e1;
    real _t0C1A = 0.e0;
    real _t0C1B = 0.e0;
    vec4 _t0C1C = [_t0C18, _t0C19, _t0C1A, _t0C1B];
    real _t0C1D = 0.e0;
    real _t0C1E = 0.e0;
    real _t0C1F = 0.1e1;
    real _t0C20 = 0.e0;
    vec4 _t0C21 = [_t0C1D, _t0C1E, _t0C1F, _t0C20];
    real _t0C22 = 0.e0;
    real _t0C23 = 0.e0;
    real _t0C24 = 0.e0;
    real _t0C25 = 0.1e1;
    vec4 _t0C26 = [_t0C22, _t0C23, _t0C24, _t0C25];
    tensor[4,4] _t0C27 = [_t0C17, _t0C1C, _t0C21, _t0C26];
    real _t0C28 = 0.1e1;
    real _t0C29 = 0.e0;
    real _t0C2A = 0.e0;
    real _t0C2B = 0.e0;
    vec4 _t0C2C = [_t0C28, _t0C29, _t0C2A, _t0C2B];
    real _t0C2D = 0.e0;
    real _t0C2E = 0.1e1;
    real _t0C2F = 0.e0;
    real _t0C30 = 0.e0;
    vec4 _t0C31 = [_t0C2D, _t0C2E, _t0C2F, _t0C30];
    real _t0C32 = 0.e0;
    real _t0C33 = 0.e0;
    real _t0C34 = 0.1e1;
    real _t0C35 = 0.1e1;
    vec4 _t0C36 = [_t0C32, _t0C33, _t0C34, _t0C35];
    real _t0C37 = 0.e0;
    real _t0C38 = 0.e0;
    real _t0C39 = 0.e0;
    real _t0C3A = 0.1e1;
    vec4 _t0C3B = [_t0C37, _t0C38, _t0C39, _t0C3A];
    tensor[4,4] _t0C3C = [_t0C2C, _t0C31, _t0C36, _t0C3B];
    real _t0C3D = 0.e0;
    real _t0C3E = 0.1e1;
    real _t0C3F = 0.e0;
    real _t0C40 = 0.e0;
    vec4 _t0C41 = [_t0C3D, _t0C3E, _t0C3F, _t0C40];
    real _t0C42 = 0.e0;
    real _t0C43 = 0.e0;
    real _t0C44 = 0.1e1;
    real _t0C45 = 0.e0;
    vec4 _t0C46 = [_t0C42, _t0C43, _t0C44, _t0C45];
    real _t0C47 = 0.1e1;
    real _t0C48 = -0.1e1;
    real _t0C49 = 0.e0;
    real _t0C4A = -0.5e0;
    vec4 _t0C4B = [_t0C47, _t0C48, _t0C49, _t0C4A];
    real _t0C4C = 0.e0;
    real _t0C4D = 0.e0;
    real _t0C4E = 0.e0;
    real _t0C4F = 0.1e1;
    vec4 _t0C50 = [_t0C4C, _t0C4D, _t0C4E, _t0C4F];
    tensor[4,4] _t0C51 = [_t0C41, _t0C46, _t0C4B, _t0C50];
    real _t0C52 = 0.e0;
    real _t0C53 = 0.e0;
    real _t0C54 = -0.1e1;
    real _t0C55 = 0.e0;
    vec4 _t0C56 = [_t0C52, _t0C53, _t0C54, _t0C55];
    real _t0C57 = 0.e0;
    real _t0C58 = 0.1e1;
    real _t0C59 = 0.e0;
    real _t0C5A = 0.e0;
    vec4 _t0C5B = [_t0C57, _t0C58, _t0C59, _t0C5A];
    real _t0C5C = 0.1e1;
    real _t0C5D = -0.1e1;
    real _t0C5E = 0.e0;
    real _t0C5F = -0.5e0;
    vec4 _t0C60 = [_t0C5C, _t0C5D, _t0C5E, _t0C5F];
    real _t0C61 = 0.e0;
    real _t0C62 = 0.e0;
    real _t0C63 = 0.e0;
    real _t0C64 = 0.1e1;
    vec4 _t0C65 = [_t0C61, _t0C62, _t0C63, _t0C64];
    tensor[4,4] _t0C66 = [_t0C56, _t0C5B, _t0C60, _t0C65];
    real _t0C67 = 0.e0;
    real _t0C68 = -0.1e1;
    real _t0C69 = 0.e0;
    real _t0C6A = 0.e0;
    vec4 _t0C6B = [_t0C67, _t0C68, _t0C69, _t0C6A];
    real _t0C6C = 0.e0;
    real _t0C6D = 0.e0;
    real _t0C6E = -0.1e1;
    real _t0C6F = 0.e0;
    vec4 _t0C70 = [_t0C6C, _t0C6D, _t0C6E, _t0C6F];
    real _t0C71 = 0.1e1;
    real _t0C72 = -0.1e1;
    real _t0C73 = 0.e0;
    real _t0C74 = -0.5e0;
    vec4 _t0C75 = [_t0C71, _t0C72, _t0C73, _t0C74];
    real _t0C76 = 0.e0;
    real _t0C77 = 0.e0;
    real _t0C78 = 0.e0;
    real _t0C79 = 0.1e1;
    vec4 _t0C7A = [_t0C76, _t0C77, _t0C78, _t0C79];
    tensor[4,4] _t0C7B = [_t0C6B, _t0C70, _t0C75, _t0C7A];
    real _t0C7C = 0.e0;
    real _t0C7D = 0.e0;
    real _t0C7E = 0.1e1;
    real _t0C7F = 0.e0;
    vec4 _t0C80 = [_t0C7C, _t0C7D, _t0C7E, _t0C7F];
    real _t0C81 = 0.e0;
    real _t0C82 = -0.1e1;
    real _t0C83 = 0.e0;
    real _t0C84 = 0.e0;
    vec4 _t0C85 = [_t0C81, _t0C82, _t0C83, _t0C84];
    real _t0C86 = 0.1e1;
    real _t0C87 = -0.1e1;
    real _t0C88 = 0.e0;
    real _t0C89 = -0.5e0;
    vec4 _t0C8A = [_t0C86, _t0C87, _t0C88, _t0C89];
    real _t0C8B = 0.e0;
    real _t0C8C = 0.e0;
    real _t0C8D = 0.e0;
    real _t0C8E = 0.1e1;
    vec4 _t0C8F = [_t0C8B, _t0C8C, _t0C8D, _t0C8E];
    tensor[4,4] _t0C90 = [_t0C80, _t0C85, _t0C8A, _t0C8F];
    tensor[4,4][6] _t0C91 = {_t0C27, _t0C3C, _t0C51, _t0C66, _t0C7B, _t0C90};
    real _t0C92 = 0.1e1;
    real _t0C93 = 0.e0;
    real _t0C94 = 0.e0;
    real _t0C95 = 0.e0;
    vec4 _t0C96 = [_t0C92, _t0C93, _t0C94, _t0C95];
    real _t0C97 = 0.e0;
    real _t0C98 = 0.1e1;
    real _t0C99 = 0.e0;
    real _t0C9A = 0.e0;
    vec4 _t0C9B = [_t0C97, _t0C98, _t0C99, _t0C9A];
    real _t0C9C = 0.e0;
    real _t0C9D = 0.e0;
    real _t0C9E = 0.1e1;
    real _t0C9F = -0.1e1;
    vec4 _t0CA0 = [_t0C9C, _t0C9D, _t0C9E, _t0C9F];
    real _t0CA1 = 0.e0;
    real _t0CA2 = 0.e0;
    real _t0CA3 = 0.e0;
    real _t0CA4 = 0.1e1;
    vec4 _t0CA5 = [_t0CA1, _t0CA2, _t0CA3, _t0CA4];
    tensor[4,4] _t0CA6 = [_t0C96, _t0C9B, _t0CA0, _t0CA5];
    real _t0CA7 = 0.1e1;
    real _t0CA8 = 0.e0;
    real _t0CA9 = 0.e0;
    real _t0CAA = 0.e0;
    vec4 _t0CAB = [_t0CA7, _t0CA8, _t0CA9, _t0CAA];
    real _t0CAC = 0.e0;
    real _t0CAD = 0.1e1;
    real _t0CAE = 0.e0;
    real _t0CAF = 0.e0;
    vec4 _t0CB0 = [_t0CAC, _t0CAD, _t0CAE, _t0CAF];
    real _t0CB1 = 0.e0;
    real _t0CB2 = 0.e0;
    real _t0CB3 = 0.1e1;
    real _t0CB4 = 0.e0;
    vec4 _t0CB5 = [_t0CB1, _t0CB2, _t0CB3, _t0CB4];
    real _t0CB6 = 0.e0;
    real _t0CB7 = 0.e0;
    real _t0CB8 = 0.e0;
    real _t0CB9 = 0.1e1;
    vec4 _t0CBA = [_t0CB6, _t0CB7, _t0CB8, _t0CB9];
    tensor[4,4] _t0CBB = [_t0CAB, _t0CB0, _t0CB5, _t0CBA];
    real _t0CBC = 0.e0;
    real _t0CBD = 0.1e1;
    real _t0CBE = 0.e0;
    real _t0CBF = 0.e0;
    vec4 _t0CC0 = [_t0CBC, _t0CBD, _t0CBE, _t0CBF];
    real _t0CC1 = 0.e0;
    real _t0CC2 = 0.e0;
    real _t0CC3 = 0.1e1;
    real _t0CC4 = -0.1e1;
    vec4 _t0CC5 = [_t0CC1, _t0CC2, _t0CC3, _t0CC4];
    real _t0CC6 = 0.1e1;
    real _t0CC7 = -0.1e1;
    real _t0CC8 = 0.e0;
    real _t0CC9 = -0.5e0;
    vec4 _t0CCA = [_t0CC6, _t0CC7, _t0CC8, _t0CC9];
    real _t0CCB = 0.e0;
    real _t0CCC = 0.e0;
    real _t0CCD = 0.e0;
    real _t0CCE = 0.1e1;
    vec4 _t0CCF = [_t0CCB, _t0CCC, _t0CCD, _t0CCE];
    tensor[4,4] _t0CD0 = [_t0CC0, _t0CC5, _t0CCA, _t0CCF];
    real _t0CD1 = 0.e0;
    real _t0CD2 = 0.e0;
    real _t0CD3 = -0.1e1;
    real _t0CD4 = 0.1e1;
    vec4 _t0CD5 = [_t0CD1, _t0CD2, _t0CD3, _t0CD4];
    real _t0CD6 = 0.e0;
    real _t0CD7 = 0.1e1;
    real _t0CD8 = 0.e0;
    real _t0CD9 = 0.e0;
    vec4 _t0CDA = [_t0CD6, _t0CD7, _t0CD8, _t0CD9];
    real _t0CDB = 0.1e1;
    real _t0CDC = -0.1e1;
    real _t0CDD = 0.e0;
    real _t0CDE = -0.5e0;
    vec4 _t0CDF = [_t0CDB, _t0CDC, _t0CDD, _t0CDE];
    real _t0CE0 = 0.e0;
    real _t0CE1 = 0.e0;
    real _t0CE2 = 0.e0;
    real _t0CE3 = 0.1e1;
    vec4 _t0CE4 = [_t0CE0, _t0CE1, _t0CE2, _t0CE3];
    tensor[4,4] _t0CE5 = [_t0CD5, _t0CDA, _t0CDF, _t0CE4];
    real _t0CE6 = 0.e0;
    real _t0CE7 = -0.1e1;
    real _t0CE8 = 0.e0;
    real _t0CE9 = 0.e0;
    vec4 _t0CEA = [_t0CE6, _t0CE7, _t0CE8, _t0CE9];
    real _t0CEB = 0.e0;
    real _t0CEC = 0.e0;
    real _t0CED = -0.1e1;
    real _t0CEE = 0.1e1;
    vec4 _t0CEF = [_t0CEB, _t0CEC, _t0CED, _t0CEE];
    real _t0CF0 = 0.1e1;
    real _t0CF1 = -0.1e1;
    real _t0CF2 = 0.e0;
    real _t0CF3 = -0.5e0;
    vec4 _t0CF4 = [_t0CF0, _t0CF1, _t0CF2, _t0CF3];
    real _t0CF5 = 0.e0;
    real _t0CF6 = 0.e0;
    real _t0CF7 = 0.e0;
    real _t0CF8 = 0.1e1;
    vec4 _t0CF9 = [_t0CF5, _t0CF6, _t0CF7, _t0CF8];
    tensor[4,4] _t0CFA = [_t0CEA, _t0CEF, _t0CF4, _t0CF9];
    real _t0CFB = 0.e0;
    real _t0CFC = 0.e0;
    real _t0CFD = 0.1e1;
    real _t0CFE = -0.1e1;
    vec4 _t0CFF = [_t0CFB, _t0CFC, _t0CFD, _t0CFE];
    real _t0D00 = 0.e0;
    real _t0D01 = -0.1e1;
    real _t0D02 = 0.e0;
    real _t0D03 = 0.e0;
    vec4 _t0D04 = [_t0D00, _t0D01, _t0D02, _t0D03];
    real _t0D05 = 0.1e1;
    real _t0D06 = -0.1e1;
    real _t0D07 = 0.e0;
    real _t0D08 = -0.5e0;
    vec4 _t0D09 = [_t0D05, _t0D06, _t0D07, _t0D08];
    real _t0D0A = 0.e0;
    real _t0D0B = 0.e0;
    real _t0D0C = 0.e0;
    real _t0D0D = 0.1e1;
    vec4 _t0D0E = [_t0D0A, _t0D0B, _t0D0C, _t0D0D];
    tensor[4,4] _t0D0F = [_t0CFF, _t0D04, _t0D09, _t0D0E];
    tensor[4,4][6] _t0D10 = {_t0CA6, _t0CBB, _t0CD0, _t0CE5, _t0CFA, _t0D0F};
    real _t0D11 = 0.1e1;
    real _t0D12 = 0.e0;
    real _t0D13 = 0.1e1;
    real _t0D14 = 0.5e0;
    vec4 _t0D15 = [_t0D11, _t0D12, _t0D13, _t0D14];
    real _t0D16 = 0.1e1;
    real _t0D17 = 0.e0;
    real _t0D18 = 0.e0;
    real _t0D19 = 0.e0;
    vec4 _t0D1A = [_t0D16, _t0D17, _t0D18, _t0D19];
    real _t0D1B = 0.e0;
    real _t0D1C = 0.1e1;
    real _t0D1D = 0.e0;
    real _t0D1E = 0.e0;
    vec4 _t0D1F = [_t0D1B, _t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = 0.e0;
    real _t0D21 = 0.e0;
    real _t0D22 = 0.e0;
    real _t0D23 = 0.1e1;
    vec4 _t0D24 = [_t0D20, _t0D21, _t0D22, _t0D23];
    tensor[4,4] _t0D25 = [_t0D15, _t0D1A, _t0D1F, _t0D24];
    real _t0D26 = 0.1e1;
    real _t0D27 = 0.e0;
    real _t0D28 = 0.1e1;
    real _t0D29 = 0.5e0;
    vec4 _t0D2A = [_t0D26, _t0D27, _t0D28, _t0D29];
    real _t0D2B = 0.1e1;
    real _t0D2C = 0.e0;
    real _t0D2D = 0.e0;
    real _t0D2E = 0.e0;
    vec4 _t0D2F = [_t0D2B, _t0D2C, _t0D2D, _t0D2E];
    real _t0D30 = 0.e0;
    real _t0D31 = 0.1e1;
    real _t0D32 = 0.e0;
    real _t0D33 = 0.1e1;
    vec4 _t0D34 = [_t0D30, _t0D31, _t0D32, _t0D33];
    real _t0D35 = 0.e0;
    real _t0D36 = 0.e0;
    real _t0D37 = 0.e0;
    real _t0D38 = 0.1e1;
    vec4 _t0D39 = [_t0D35, _t0D36, _t0D37, _t0D38];
    tensor[4,4] _t0D3A = [_t0D2A, _t0D2F, _t0D34, _t0D39];
    real _t0D3B = 0.1e1;
    real _t0D3C = 0.e0;
    real _t0D3D = 0.e0;
    real _t0D3E = 0.e0;
    vec4 _t0D3F = [_t0D3B, _t0D3C, _t0D3D, _t0D3E];
    real _t0D40 = 0.e0;
    real _t0D41 = 0.1e1;
    real _t0D42 = 0.e0;
    real _t0D43 = 0.e0;
    vec4 _t0D44 = [_t0D40, _t0D41, _t0D42, _t0D43];
    real _t0D45 = 0.e0;
    real _t0D46 = 0.e0;
    real _t0D47 = 0.1e1;
    real _t0D48 = 0.e0;
    vec4 _t0D49 = [_t0D45, _t0D46, _t0D47, _t0D48];
    real _t0D4A = 0.e0;
    real _t0D4B = 0.e0;
    real _t0D4C = 0.e0;
    real _t0D4D = 0.1e1;
    vec4 _t0D4E = [_t0D4A, _t0D4B, _t0D4C, _t0D4D];
    tensor[4,4] _t0D4F = [_t0D3F, _t0D44, _t0D49, _t0D4E];
    real _t0D50 = 0.e0;
    real _t0D51 = -0.1e1;
    real _t0D52 = 0.e0;
    real _t0D53 = 0.e0;
    vec4 _t0D54 = [_t0D50, _t0D51, _t0D52, _t0D53];
    real _t0D55 = 0.1e1;
    real _t0D56 = 0.e0;
    real _t0D57 = 0.e0;
    real _t0D58 = 0.e0;
    vec4 _t0D59 = [_t0D55, _t0D56, _t0D57, _t0D58];
    real _t0D5A = 0.e0;
    real _t0D5B = 0.e0;
    real _t0D5C = 0.1e1;
    real _t0D5D = 0.e0;
    vec4 _t0D5E = [_t0D5A, _t0D5B, _t0D5C, _t0D5D];
    real _t0D5F = 0.e0;
    real _t0D60 = 0.e0;
    real _t0D61 = 0.e0;
    real _t0D62 = 0.1e1;
    vec4 _t0D63 = [_t0D5F, _t0D60, _t0D61, _t0D62];
    tensor[4,4] _t0D64 = [_t0D54, _t0D59, _t0D5E, _t0D63];
    real _t0D65 = -0.1e1;
    real _t0D66 = 0.e0;
    real _t0D67 = 0.e0;
    real _t0D68 = 0.e0;
    vec4 _t0D69 = [_t0D65, _t0D66, _t0D67, _t0D68];
    real _t0D6A = 0.e0;
    real _t0D6B = -0.1e1;
    real _t0D6C = 0.e0;
    real _t0D6D = 0.e0;
    vec4 _t0D6E = [_t0D6A, _t0D6B, _t0D6C, _t0D6D];
    real _t0D6F = 0.e0;
    real _t0D70 = 0.e0;
    real _t0D71 = 0.1e1;
    real _t0D72 = 0.e0;
    vec4 _t0D73 = [_t0D6F, _t0D70, _t0D71, _t0D72];
    real _t0D74 = 0.e0;
    real _t0D75 = 0.e0;
    real _t0D76 = 0.e0;
    real _t0D77 = 0.1e1;
    vec4 _t0D78 = [_t0D74, _t0D75, _t0D76, _t0D77];
    tensor[4,4] _t0D79 = [_t0D69, _t0D6E, _t0D73, _t0D78];
    real _t0D7A = 0.e0;
    real _t0D7B = 0.1e1;
    real _t0D7C = 0.e0;
    real _t0D7D = 0.e0;
    vec4 _t0D7E = [_t0D7A, _t0D7B, _t0D7C, _t0D7D];
    real _t0D7F = -0.1e1;
    real _t0D80 = 0.e0;
    real _t0D81 = 0.e0;
    real _t0D82 = 0.e0;
    vec4 _t0D83 = [_t0D7F, _t0D80, _t0D81, _t0D82];
    real _t0D84 = 0.e0;
    real _t0D85 = 0.e0;
    real _t0D86 = 0.1e1;
    real _t0D87 = 0.e0;
    vec4 _t0D88 = [_t0D84, _t0D85, _t0D86, _t0D87];
    real _t0D89 = 0.e0;
    real _t0D8A = 0.e0;
    real _t0D8B = 0.e0;
    real _t0D8C = 0.1e1;
    vec4 _t0D8D = [_t0D89, _t0D8A, _t0D8B, _t0D8C];
    tensor[4,4] _t0D8E = [_t0D7E, _t0D83, _t0D88, _t0D8D];
    tensor[4,4][6] _t0D8F = {_t0D25, _t0D3A, _t0D4F, _t0D64, _t0D79, _t0D8E};
    real _t0D90 = 0.e0;
    real _t0D91 = 0.1e1;
    real _t0D92 = 0.1e1;
    real _t0D93 = 0.5e0;
    vec4 _t0D94 = [_t0D90, _t0D91, _t0D92, _t0D93];
    real _t0D95 = 0.e0;
    real _t0D96 = 0.1e1;
    real _t0D97 = 0.e0;
    real _t0D98 = 0.e0;
    vec4 _t0D99 = [_t0D95, _t0D96, _t0D97, _t0D98];
    real _t0D9A = -0.1e1;
    real _t0D9B = 0.e0;
    real _t0D9C = 0.e0;
    real _t0D9D = 0.e0;
    vec4 _t0D9E = [_t0D9A, _t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.e0;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.1e1;
    vec4 _t0DA3 = [_t0D9F, _t0DA0, _t0DA1, _t0DA2];
    tensor[4,4] _t0DA4 = [_t0D94, _t0D99, _t0D9E, _t0DA3];
    real _t0DA5 = 0.e0;
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.1e1;
    real _t0DA8 = 0.5e0;
    vec4 _t0DA9 = [_t0DA5, _t0DA6, _t0DA7, _t0DA8];
    real _t0DAA = 0.e0;
    real _t0DAB = 0.1e1;
    real _t0DAC = 0.e0;
    real _t0DAD = 0.e0;
    vec4 _t0DAE = [_t0DAA, _t0DAB, _t0DAC, _t0DAD];
    real _t0DAF = -0.1e1;
    real _t0DB0 = 0.e0;
    real _t0DB1 = 0.e0;
    real _t0DB2 = 0.1e1;
    vec4 _t0DB3 = [_t0DAF, _t0DB0, _t0DB1, _t0DB2];
    real _t0DB4 = 0.e0;
    real _t0DB5 = 0.e0;
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.1e1;
    vec4 _t0DB8 = [_t0DB4, _t0DB5, _t0DB6, _t0DB7];
    tensor[4,4] _t0DB9 = [_t0DA9, _t0DAE, _t0DB3, _t0DB8];
    real _t0DBA = 0.e0;
    real _t0DBB = 0.1e1;
    real _t0DBC = 0.e0;
    real _t0DBD = 0.e0;
    vec4 _t0DBE = [_t0DBA, _t0DBB, _t0DBC, _t0DBD];
    real _t0DBF = -0.1e1;
    real _t0DC0 = 0.e0;
    real _t0DC1 = 0.e0;
    real _t0DC2 = 0.e0;
    vec4 _t0DC3 = [_t0DBF, _t0DC0, _t0DC1, _t0DC2];
    real _t0DC4 = 0.e0;
    real _t0DC5 = 0.e0;
    real _t0DC6 = 0.1e1;
    real _t0DC7 = 0.e0;
    vec4 _t0DC8 = [_t0DC4, _t0DC5, _t0DC6, _t0DC7];
    real _t0DC9 = 0.e0;
    real _t0DCA = 0.e0;
    real _t0DCB = 0.e0;
    real _t0DCC = 0.1e1;
    vec4 _t0DCD = [_t0DC9, _t0DCA, _t0DCB, _t0DCC];
    tensor[4,4] _t0DCE = [_t0DBE, _t0DC3, _t0DC8, _t0DCD];
    real _t0DCF = 0.1e1;
    real _t0DD0 = 0.e0;
    real _t0DD1 = 0.e0;
    real _t0DD2 = 0.e0;
    vec4 _t0DD3 = [_t0DCF, _t0DD0, _t0DD1, _t0DD2];
    real _t0DD4 = 0.e0;
    real _t0DD5 = 0.1e1;
    real _t0DD6 = 0.e0;
    real _t0DD7 = 0.e0;
    vec4 _t0DD8 = [_t0DD4, _t0DD5, _t0DD6, _t0DD7];
    real _t0DD9 = 0.e0;
    real _t0DDA = 0.e0;
    real _t0DDB = 0.1e1;
    real _t0DDC = 0.e0;
    vec4 _t0DDD = [_t0DD9, _t0DDA, _t0DDB, _t0DDC];
    real _t0DDE = 0.e0;
    real _t0DDF = 0.e0;
    real _t0DE0 = 0.e0;
    real _t0DE1 = 0.1e1;
    vec4 _t0DE2 = [_t0DDE, _t0DDF, _t0DE0, _t0DE1];
    tensor[4,4] _t0DE3 = [_t0DD3, _t0DD8, _t0DDD, _t0DE2];
    real _t0DE4 = 0.e0;
    real _t0DE5 = -0.1e1;
    real _t0DE6 = 0.e0;
    real _t0DE7 = 0.e0;
    vec4 _t0DE8 = [_t0DE4, _t0DE5, _t0DE6, _t0DE7];
    real _t0DE9 = 0.1e1;
    real _t0DEA = 0.e0;
    real _t0DEB = 0.e0;
    real _t0DEC = 0.e0;
    vec4 _t0DED = [_t0DE9, _t0DEA, _t0DEB, _t0DEC];
    real _t0DEE = 0.e0;
    real _t0DEF = 0.e0;
    real _t0DF0 = 0.1e1;
    real _t0DF1 = 0.e0;
    vec4 _t0DF2 = [_t0DEE, _t0DEF, _t0DF0, _t0DF1];
    real _t0DF3 = 0.e0;
    real _t0DF4 = 0.e0;
    real _t0DF5 = 0.e0;
    real _t0DF6 = 0.1e1;
    vec4 _t0DF7 = [_t0DF3, _t0DF4, _t0DF5, _t0DF6];
    tensor[4,4] _t0DF8 = [_t0DE8, _t0DED, _t0DF2, _t0DF7];
    real _t0DF9 = -0.1e1;
    real _t0DFA = 0.e0;
    real _t0DFB = 0.e0;
    real _t0DFC = 0.e0;
    vec4 _t0DFD = [_t0DF9, _t0DFA, _t0DFB, _t0DFC];
    real _t0DFE = 0.e0;
    real _t0DFF = -0.1e1;
    real _t0E00 = 0.e0;
    real _t0E01 = 0.e0;
    vec4 _t0E02 = [_t0DFE, _t0DFF, _t0E00, _t0E01];
    real _t0E03 = 0.e0;
    real _t0E04 = 0.e0;
    real _t0E05 = 0.1e1;
    real _t0E06 = 0.e0;
    vec4 _t0E07 = [_t0E03, _t0E04, _t0E05, _t0E06];
    real _t0E08 = 0.e0;
    real _t0E09 = 0.e0;
    real _t0E0A = 0.e0;
    real _t0E0B = 0.1e1;
    vec4 _t0E0C = [_t0E08, _t0E09, _t0E0A, _t0E0B];
    tensor[4,4] _t0E0D = [_t0DFD, _t0E02, _t0E07, _t0E0C];
    tensor[4,4][6] _t0E0E = {_t0DA4, _t0DB9, _t0DCE, _t0DE3, _t0DF8, _t0E0D};
    real _t0E0F = -0.1e1;
    real _t0E10 = 0.e0;
    real _t0E11 = 0.1e1;
    real _t0E12 = 0.5e0;
    vec4 _t0E13 = [_t0E0F, _t0E10, _t0E11, _t0E12];
    real _t0E14 = -0.1e1;
    real _t0E15 = 0.e0;
    real _t0E16 = 0.e0;
    real _t0E17 = 0.e0;
    vec4 _t0E18 = [_t0E14, _t0E15, _t0E16, _t0E17];
    real _t0E19 = 0.e0;
    real _t0E1A = -0.1e1;
    real _t0E1B = 0.e0;
    real _t0E1C = 0.e0;
    vec4 _t0E1D = [_t0E19, _t0E1A, _t0E1B, _t0E1C];
    real _t0E1E = 0.e0;
    real _t0E1F = 0.e0;
    real _t0E20 = 0.e0;
    real _t0E21 = 0.1e1;
    vec4 _t0E22 = [_t0E1E, _t0E1F, _t0E20, _t0E21];
    tensor[4,4] _t0E23 = [_t0E13, _t0E18, _t0E1D, _t0E22];
    real _t0E24 = -0.1e1;
    real _t0E25 = 0.e0;
    real _t0E26 = 0.1e1;
    real _t0E27 = 0.5e0;
    vec4 _t0E28 = [_t0E24, _t0E25, _t0E26, _t0E27];
    real _t0E29 = -0.1e1;
    real _t0E2A = 0.e0;
    real _t0E2B = 0.e0;
    real _t0E2C = 0.e0;
    vec4 _t0E2D = [_t0E29, _t0E2A, _t0E2B, _t0E2C];
    real _t0E2E = 0.e0;
    real _t0E2F = -0.1e1;
    real _t0E30 = 0.e0;
    real _t0E31 = 0.1e1;
    vec4 _t0E32 = [_t0E2E, _t0E2F, _t0E30, _t0E31];
    real _t0E33 = 0.e0;
    real _t0E34 = 0.e0;
    real _t0E35 = 0.e0;
    real _t0E36 = 0.1e1;
    vec4 _t0E37 = [_t0E33, _t0E34, _t0E35, _t0E36];
    tensor[4,4] _t0E38 = [_t0E28, _t0E2D, _t0E32, _t0E37];
    real _t0E39 = -0.1e1;
    real _t0E3A = 0.e0;
    real _t0E3B = 0.e0;
    real _t0E3C = 0.e0;
    vec4 _t0E3D = [_t0E39, _t0E3A, _t0E3B, _t0E3C];
    real _t0E3E = 0.e0;
    real _t0E3F = -0.1e1;
    real _t0E40 = 0.e0;
    real _t0E41 = 0.e0;
    vec4 _t0E42 = [_t0E3E, _t0E3F, _t0E40, _t0E41];
    real _t0E43 = 0.e0;
    real _t0E44 = 0.e0;
    real _t0E45 = 0.1e1;
    real _t0E46 = 0.e0;
    vec4 _t0E47 = [_t0E43, _t0E44, _t0E45, _t0E46];
    real _t0E48 = 0.e0;
    real _t0E49 = 0.e0;
    real _t0E4A = 0.e0;
    real _t0E4B = 0.1e1;
    vec4 _t0E4C = [_t0E48, _t0E49, _t0E4A, _t0E4B];
    tensor[4,4] _t0E4D = [_t0E3D, _t0E42, _t0E47, _t0E4C];
    real _t0E4E = 0.e0;
    real _t0E4F = 0.1e1;
    real _t0E50 = 0.e0;
    real _t0E51 = 0.e0;
    vec4 _t0E52 = [_t0E4E, _t0E4F, _t0E50, _t0E51];
    real _t0E53 = -0.1e1;
    real _t0E54 = 0.e0;
    real _t0E55 = 0.e0;
    real _t0E56 = 0.e0;
    vec4 _t0E57 = [_t0E53, _t0E54, _t0E55, _t0E56];
    real _t0E58 = 0.e0;
    real _t0E59 = 0.e0;
    real _t0E5A = 0.1e1;
    real _t0E5B = 0.e0;
    vec4 _t0E5C = [_t0E58, _t0E59, _t0E5A, _t0E5B];
    real _t0E5D = 0.e0;
    real _t0E5E = 0.e0;
    real _t0E5F = 0.e0;
    real _t0E60 = 0.1e1;
    vec4 _t0E61 = [_t0E5D, _t0E5E, _t0E5F, _t0E60];
    tensor[4,4] _t0E62 = [_t0E52, _t0E57, _t0E5C, _t0E61];
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.e0;
    real _t0E65 = 0.e0;
    real _t0E66 = 0.e0;
    vec4 _t0E67 = [_t0E63, _t0E64, _t0E65, _t0E66];
    real _t0E68 = 0.e0;
    real _t0E69 = 0.1e1;
    real _t0E6A = 0.e0;
    real _t0E6B = 0.e0;
    vec4 _t0E6C = [_t0E68, _t0E69, _t0E6A, _t0E6B];
    real _t0E6D = 0.e0;
    real _t0E6E = 0.e0;
    real _t0E6F = 0.1e1;
    real _t0E70 = 0.e0;
    vec4 _t0E71 = [_t0E6D, _t0E6E, _t0E6F, _t0E70];
    real _t0E72 = 0.e0;
    real _t0E73 = 0.e0;
    real _t0E74 = 0.e0;
    real _t0E75 = 0.1e1;
    vec4 _t0E76 = [_t0E72, _t0E73, _t0E74, _t0E75];
    tensor[4,4] _t0E77 = [_t0E67, _t0E6C, _t0E71, _t0E76];
    real _t0E78 = 0.e0;
    real _t0E79 = -0.1e1;
    real _t0E7A = 0.e0;
    real _t0E7B = 0.e0;
    vec4 _t0E7C = [_t0E78, _t0E79, _t0E7A, _t0E7B];
    real _t0E7D = 0.1e1;
    real _t0E7E = 0.e0;
    real _t0E7F = 0.e0;
    real _t0E80 = 0.e0;
    vec4 _t0E81 = [_t0E7D, _t0E7E, _t0E7F, _t0E80];
    real _t0E82 = 0.e0;
    real _t0E83 = 0.e0;
    real _t0E84 = 0.1e1;
    real _t0E85 = 0.e0;
    vec4 _t0E86 = [_t0E82, _t0E83, _t0E84, _t0E85];
    real _t0E87 = 0.e0;
    real _t0E88 = 0.e0;
    real _t0E89 = 0.e0;
    real _t0E8A = 0.1e1;
    vec4 _t0E8B = [_t0E87, _t0E88, _t0E89, _t0E8A];
    tensor[4,4] _t0E8C = [_t0E7C, _t0E81, _t0E86, _t0E8B];
    tensor[4,4][6] _t0E8D = {_t0E23, _t0E38, _t0E4D, _t0E62, _t0E77, _t0E8C};
    real _t0E8E = 0.e0;
    real _t0E8F = -0.1e1;
    real _t0E90 = 0.1e1;
    real _t0E91 = 0.5e0;
    vec4 _t0E92 = [_t0E8E, _t0E8F, _t0E90, _t0E91];
    real _t0E93 = 0.e0;
    real _t0E94 = -0.1e1;
    real _t0E95 = 0.e0;
    real _t0E96 = 0.e0;
    vec4 _t0E97 = [_t0E93, _t0E94, _t0E95, _t0E96];
    real _t0E98 = 0.1e1;
    real _t0E99 = 0.e0;
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    vec4 _t0E9C = [_t0E98, _t0E99, _t0E9A, _t0E9B];
    real _t0E9D = 0.e0;
    real _t0E9E = 0.e0;
    real _t0E9F = 0.e0;
    real _t0EA0 = 0.1e1;
    vec4 _t0EA1 = [_t0E9D, _t0E9E, _t0E9F, _t0EA0];
    tensor[4,4] _t0EA2 = [_t0E92, _t0E97, _t0E9C, _t0EA1];
    real _t0EA3 = 0.e0;
    real _t0EA4 = -0.1e1;
    real _t0EA5 = 0.1e1;
    real _t0EA6 = 0.5e0;
    vec4 _t0EA7 = [_t0EA3, _t0EA4, _t0EA5, _t0EA6];
    real _t0EA8 = 0.e0;
    real _t0EA9 = -0.1e1;
    real _t0EAA = 0.e0;
    real _t0EAB = 0.e0;
    vec4 _t0EAC = [_t0EA8, _t0EA9, _t0EAA, _t0EAB];
    real _t0EAD = 0.1e1;
    real _t0EAE = 0.e0;
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.1e1;
    vec4 _t0EB1 = [_t0EAD, _t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.e0;
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.1e1;
    vec4 _t0EB6 = [_t0EB2, _t0EB3, _t0EB4, _t0EB5];
    tensor[4,4] _t0EB7 = [_t0EA7, _t0EAC, _t0EB1, _t0EB6];
    real _t0EB8 = 0.e0;
    real _t0EB9 = -0.1e1;
    real _t0EBA = 0.e0;
    real _t0EBB = 0.e0;
    vec4 _t0EBC = [_t0EB8, _t0EB9, _t0EBA, _t0EBB];
    real _t0EBD = 0.1e1;
    real _t0EBE = 0.e0;
    real _t0EBF = 0.e0;
    real _t0EC0 = 0.e0;
    vec4 _t0EC1 = [_t0EBD, _t0EBE, _t0EBF, _t0EC0];
    real _t0EC2 = 0.e0;
    real _t0EC3 = 0.e0;
    real _t0EC4 = 0.1e1;
    real _t0EC5 = 0.e0;
    vec4 _t0EC6 = [_t0EC2, _t0EC3, _t0EC4, _t0EC5];
    real _t0EC7 = 0.e0;
    real _t0EC8 = 0.e0;
    real _t0EC9 = 0.e0;
    real _t0ECA = 0.1e1;
    vec4 _t0ECB = [_t0EC7, _t0EC8, _t0EC9, _t0ECA];
    tensor[4,4] _t0ECC = [_t0EBC, _t0EC1, _t0EC6, _t0ECB];
    real _t0ECD = -0.1e1;
    real _t0ECE = 0.e0;
    real _t0ECF = 0.e0;
    real _t0ED0 = 0.e0;
    vec4 _t0ED1 = [_t0ECD, _t0ECE, _t0ECF, _t0ED0];
    real _t0ED2 = 0.e0;
    real _t0ED3 = -0.1e1;
    real _t0ED4 = 0.e0;
    real _t0ED5 = 0.e0;
    vec4 _t0ED6 = [_t0ED2, _t0ED3, _t0ED4, _t0ED5];
    real _t0ED7 = 0.e0;
    real _t0ED8 = 0.e0;
    real _t0ED9 = 0.1e1;
    real _t0EDA = 0.e0;
    vec4 _t0EDB = [_t0ED7, _t0ED8, _t0ED9, _t0EDA];
    real _t0EDC = 0.e0;
    real _t0EDD = 0.e0;
    real _t0EDE = 0.e0;
    real _t0EDF = 0.1e1;
    vec4 _t0EE0 = [_t0EDC, _t0EDD, _t0EDE, _t0EDF];
    tensor[4,4] _t0EE1 = [_t0ED1, _t0ED6, _t0EDB, _t0EE0];
    real _t0EE2 = 0.e0;
    real _t0EE3 = 0.1e1;
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
    real _t0EE7 = -0.1e1;
    real _t0EE8 = 0.e0;
    real _t0EE9 = 0.e0;
    real _t0EEA = 0.e0;
    vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    real _t0EEE = 0.1e1;
    real _t0EEF = 0.e0;
    vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
    real _t0EF1 = 0.e0;
    real _t0EF2 = 0.e0;
    real _t0EF3 = 0.e0;
    real _t0EF4 = 0.1e1;
    vec4 _t0EF5 = [_t0EF1, _t0EF2, _t0EF3, _t0EF4];
    tensor[4,4] _t0EF6 = [_t0EE6, _t0EEB, _t0EF0, _t0EF5];
    real _t0EF7 = 0.1e1;
    real _t0EF8 = 0.e0;
    real _t0EF9 = 0.e0;
    real _t0EFA = 0.e0;
    vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
    real _t0EFC = 0.e0;
    real _t0EFD = 0.1e1;
    real _t0EFE = 0.e0;
    real _t0EFF = 0.e0;
    vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
    real _t0F01 = 0.e0;
    real _t0F02 = 0.e0;
    real _t0F03 = 0.1e1;
    real _t0F04 = 0.e0;
    vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
    real _t0F06 = 0.e0;
    real _t0F07 = 0.e0;
    real _t0F08 = 0.e0;
    real _t0F09 = 0.1e1;
    vec4 _t0F0A = [_t0F06, _t0F07, _t0F08, _t0F09];
    tensor[4,4] _t0F0B = [_t0EFB, _t0F00, _t0F05, _t0F0A];
    tensor[4,4][6] _t0F0C = {_t0EA2, _t0EB7, _t0ECC, _t0EE1, _t0EF6, _t0F0B};
    tensor[4,4][6][6] _t0F0D = {_t0C91, _t0D10, _t0D8F, _t0E0E, _t0E8D, _t0F0C};
    real _t0F0E = time05E1[1];
    int _t0F0F = prim $r2i01B7 (_t0F0E);
    tensor[4,4][6] _t0F10 = prim $sub01C0<tensor[4,4][6]; %6> (_t0F0D, _t0F0F);
    real _t0F11 = time05E1[1];
    int _t0F12 = prim $r2i01B7 (_t0F11);
    int[2] _t0F13 = func nextCell405E5 (_t0F12, cellId05DE, mesh05DD);
    int _t0F14 = 1;
    int _t0F15 = prim $sub01C0<int; %2> (_t0F13, _t0F14);
    tensor[4,4] _t0F16 = prim $sub01C0<tensor[4,4]; %6> (_t0F10, _t0F15);
    real _t0F17 = time05E1[0];
    vec3 _t0F18 = prim *0036<$[3]> (_t0F17, dPos05E0);
    vec3 _t0F19 = prim +0017<$[3]> (_t0F18, refPos05DF);
    real _t0F1A = _t0F19[0];
    real _t0F1B = time05E1[0];
    vec3 _t0F1C = prim *0036<$[3]> (_t0F1B, dPos05E0);
    vec3 _t0F1D = prim +0017<$[3]> (_t0F1C, refPos05DF);
    real _t0F1E = _t0F1D[1];
    real _t0F1F = time05E1[0];
    vec3 _t0F20 = prim *0036<$[3]> (_t0F1F, dPos05E0);
    vec3 _t0F21 = prim +0017<$[3]> (_t0F20, refPos05DF);
    real _t0F22 = _t0F21[2];
    real _t0F23 = 0.1e1;
    vec4 _t0F24 = [_t0F1A, _t0F1E, _t0F22, _t0F23];
    vec4 _t0F25 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0F16, _t0F24);
    real _t0F26 = _t0F25[1];
    real _t0F27 = 0.1e1;
    real _t0F28 = 0.e0;
    real _t0F29 = 0.e0;
    real _t0F2A = 0.e0;
    vec4 _t0F2B = [_t0F27, _t0F28, _t0F29, _t0F2A];
    real _t0F2C = 0.e0;
    real _t0F2D = 0.1e1;
    real _t0F2E = 0.e0;
    real _t0F2F = 0.e0;
    vec4 _t0F30 = [_t0F2C, _t0F2D, _t0F2E, _t0F2F];
    real _t0F31 = 0.e0;
    real _t0F32 = 0.e0;
    real _t0F33 = 0.1e1;
    real _t0F34 = 0.e0;
    vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
    real _t0F36 = 0.e0;
    real _t0F37 = 0.e0;
    real _t0F38 = 0.e0;
    real _t0F39 = 0.1e1;
    vec4 _t0F3A = [_t0F36, _t0F37, _t0F38, _t0F39];
    tensor[4,4] _t0F3B = [_t0F2B, _t0F30, _t0F35, _t0F3A];
    real _t0F3C = 0.1e1;
    real _t0F3D = 0.e0;
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    vec4 _t0F40 = [_t0F3C, _t0F3D, _t0F3E, _t0F3F];
    real _t0F41 = 0.e0;
    real _t0F42 = 0.1e1;
    real _t0F43 = 0.e0;
    real _t0F44 = 0.e0;
    vec4 _t0F45 = [_t0F41, _t0F42, _t0F43, _t0F44];
    real _t0F46 = 0.e0;
    real _t0F47 = 0.e0;
    real _t0F48 = 0.1e1;
    real _t0F49 = 0.1e1;
    vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
    real _t0F4B = 0.e0;
    real _t0F4C = 0.e0;
    real _t0F4D = 0.e0;
    real _t0F4E = 0.1e1;
    vec4 _t0F4F = [_t0F4B, _t0F4C, _t0F4D, _t0F4E];
    tensor[4,4] _t0F50 = [_t0F40, _t0F45, _t0F4A, _t0F4F];
    real _t0F51 = 0.e0;
    real _t0F52 = 0.1e1;
    real _t0F53 = 0.e0;
    real _t0F54 = 0.e0;
    vec4 _t0F55 = [_t0F51, _t0F52, _t0F53, _t0F54];
    real _t0F56 = 0.e0;
    real _t0F57 = 0.e0;
    real _t0F58 = 0.1e1;
    real _t0F59 = 0.e0;
    vec4 _t0F5A = [_t0F56, _t0F57, _t0F58, _t0F59];
    real _t0F5B = 0.1e1;
    real _t0F5C = -0.1e1;
    real _t0F5D = 0.e0;
    real _t0F5E = -0.5e0;
    vec4 _t0F5F = [_t0F5B, _t0F5C, _t0F5D, _t0F5E];
    real _t0F60 = 0.e0;
    real _t0F61 = 0.e0;
    real _t0F62 = 0.e0;
    real _t0F63 = 0.1e1;
    vec4 _t0F64 = [_t0F60, _t0F61, _t0F62, _t0F63];
    tensor[4,4] _t0F65 = [_t0F55, _t0F5A, _t0F5F, _t0F64];
    real _t0F66 = 0.e0;
    real _t0F67 = 0.e0;
    real _t0F68 = -0.1e1;
    real _t0F69 = 0.e0;
    vec4 _t0F6A = [_t0F66, _t0F67, _t0F68, _t0F69];
    real _t0F6B = 0.e0;
    real _t0F6C = 0.1e1;
    real _t0F6D = 0.e0;
    real _t0F6E = 0.e0;
    vec4 _t0F6F = [_t0F6B, _t0F6C, _t0F6D, _t0F6E];
    real _t0F70 = 0.1e1;
    real _t0F71 = -0.1e1;
    real _t0F72 = 0.e0;
    real _t0F73 = -0.5e0;
    vec4 _t0F74 = [_t0F70, _t0F71, _t0F72, _t0F73];
    real _t0F75 = 0.e0;
    real _t0F76 = 0.e0;
    real _t0F77 = 0.e0;
    real _t0F78 = 0.1e1;
    vec4 _t0F79 = [_t0F75, _t0F76, _t0F77, _t0F78];
    tensor[4,4] _t0F7A = [_t0F6A, _t0F6F, _t0F74, _t0F79];
    real _t0F7B = 0.e0;
    real _t0F7C = -0.1e1;
    real _t0F7D = 0.e0;
    real _t0F7E = 0.e0;
    vec4 _t0F7F = [_t0F7B, _t0F7C, _t0F7D, _t0F7E];
    real _t0F80 = 0.e0;
    real _t0F81 = 0.e0;
    real _t0F82 = -0.1e1;
    real _t0F83 = 0.e0;
    vec4 _t0F84 = [_t0F80, _t0F81, _t0F82, _t0F83];
    real _t0F85 = 0.1e1;
    real _t0F86 = -0.1e1;
    real _t0F87 = 0.e0;
    real _t0F88 = -0.5e0;
    vec4 _t0F89 = [_t0F85, _t0F86, _t0F87, _t0F88];
    real _t0F8A = 0.e0;
    real _t0F8B = 0.e0;
    real _t0F8C = 0.e0;
    real _t0F8D = 0.1e1;
    vec4 _t0F8E = [_t0F8A, _t0F8B, _t0F8C, _t0F8D];
    tensor[4,4] _t0F8F = [_t0F7F, _t0F84, _t0F89, _t0F8E];
    real _t0F90 = 0.e0;
    real _t0F91 = 0.e0;
    real _t0F92 = 0.1e1;
    real _t0F93 = 0.e0;
    vec4 _t0F94 = [_t0F90, _t0F91, _t0F92, _t0F93];
    real _t0F95 = 0.e0;
    real _t0F96 = -0.1e1;
    real _t0F97 = 0.e0;
    real _t0F98 = 0.e0;
    vec4 _t0F99 = [_t0F95, _t0F96, _t0F97, _t0F98];
    real _t0F9A = 0.1e1;
    real _t0F9B = -0.1e1;
    real _t0F9C = 0.e0;
    real _t0F9D = -0.5e0;
    vec4 _t0F9E = [_t0F9A, _t0F9B, _t0F9C, _t0F9D];
    real _t0F9F = 0.e0;
    real _t0FA0 = 0.e0;
    real _t0FA1 = 0.e0;
    real _t0FA2 = 0.1e1;
    vec4 _t0FA3 = [_t0F9F, _t0FA0, _t0FA1, _t0FA2];
    tensor[4,4] _t0FA4 = [_t0F94, _t0F99, _t0F9E, _t0FA3];
    tensor[4,4][6] _t0FA5 = {_t0F3B, _t0F50, _t0F65, _t0F7A, _t0F8F, _t0FA4};
    real _t0FA6 = 0.1e1;
    real _t0FA7 = 0.e0;
    real _t0FA8 = 0.e0;
    real _t0FA9 = 0.e0;
    vec4 _t0FAA = [_t0FA6, _t0FA7, _t0FA8, _t0FA9];
    real _t0FAB = 0.e0;
    real _t0FAC = 0.1e1;
    real _t0FAD = 0.e0;
    real _t0FAE = 0.e0;
    vec4 _t0FAF = [_t0FAB, _t0FAC, _t0FAD, _t0FAE];
    real _t0FB0 = 0.e0;
    real _t0FB1 = 0.e0;
    real _t0FB2 = 0.1e1;
    real _t0FB3 = -0.1e1;
    vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
    real _t0FB5 = 0.e0;
    real _t0FB6 = 0.e0;
    real _t0FB7 = 0.e0;
    real _t0FB8 = 0.1e1;
    vec4 _t0FB9 = [_t0FB5, _t0FB6, _t0FB7, _t0FB8];
    tensor[4,4] _t0FBA = [_t0FAA, _t0FAF, _t0FB4, _t0FB9];
    real _t0FBB = 0.1e1;
    real _t0FBC = 0.e0;
    real _t0FBD = 0.e0;
    real _t0FBE = 0.e0;
    vec4 _t0FBF = [_t0FBB, _t0FBC, _t0FBD, _t0FBE];
    real _t0FC0 = 0.e0;
    real _t0FC1 = 0.1e1;
    real _t0FC2 = 0.e0;
    real _t0FC3 = 0.e0;
    vec4 _t0FC4 = [_t0FC0, _t0FC1, _t0FC2, _t0FC3];
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    real _t0FC7 = 0.1e1;
    real _t0FC8 = 0.e0;
    vec4 _t0FC9 = [_t0FC5, _t0FC6, _t0FC7, _t0FC8];
    real _t0FCA = 0.e0;
    real _t0FCB = 0.e0;
    real _t0FCC = 0.e0;
    real _t0FCD = 0.1e1;
    vec4 _t0FCE = [_t0FCA, _t0FCB, _t0FCC, _t0FCD];
    tensor[4,4] _t0FCF = [_t0FBF, _t0FC4, _t0FC9, _t0FCE];
    real _t0FD0 = 0.e0;
    real _t0FD1 = 0.1e1;
    real _t0FD2 = 0.e0;
    real _t0FD3 = 0.e0;
    vec4 _t0FD4 = [_t0FD0, _t0FD1, _t0FD2, _t0FD3];
    real _t0FD5 = 0.e0;
    real _t0FD6 = 0.e0;
    real _t0FD7 = 0.1e1;
    real _t0FD8 = -0.1e1;
    vec4 _t0FD9 = [_t0FD5, _t0FD6, _t0FD7, _t0FD8];
    real _t0FDA = 0.1e1;
    real _t0FDB = -0.1e1;
    real _t0FDC = 0.e0;
    real _t0FDD = -0.5e0;
    vec4 _t0FDE = [_t0FDA, _t0FDB, _t0FDC, _t0FDD];
    real _t0FDF = 0.e0;
    real _t0FE0 = 0.e0;
    real _t0FE1 = 0.e0;
    real _t0FE2 = 0.1e1;
    vec4 _t0FE3 = [_t0FDF, _t0FE0, _t0FE1, _t0FE2];
    tensor[4,4] _t0FE4 = [_t0FD4, _t0FD9, _t0FDE, _t0FE3];
    real _t0FE5 = 0.e0;
    real _t0FE6 = 0.e0;
    real _t0FE7 = -0.1e1;
    real _t0FE8 = 0.1e1;
    vec4 _t0FE9 = [_t0FE5, _t0FE6, _t0FE7, _t0FE8];
    real _t0FEA = 0.e0;
    real _t0FEB = 0.1e1;
    real _t0FEC = 0.e0;
    real _t0FED = 0.e0;
    vec4 _t0FEE = [_t0FEA, _t0FEB, _t0FEC, _t0FED];
    real _t0FEF = 0.1e1;
    real _t0FF0 = -0.1e1;
    real _t0FF1 = 0.e0;
    real _t0FF2 = -0.5e0;
    vec4 _t0FF3 = [_t0FEF, _t0FF0, _t0FF1, _t0FF2];
    real _t0FF4 = 0.e0;
    real _t0FF5 = 0.e0;
    real _t0FF6 = 0.e0;
    real _t0FF7 = 0.1e1;
    vec4 _t0FF8 = [_t0FF4, _t0FF5, _t0FF6, _t0FF7];
    tensor[4,4] _t0FF9 = [_t0FE9, _t0FEE, _t0FF3, _t0FF8];
    real _t0FFA = 0.e0;
    real _t0FFB = -0.1e1;
    real _t0FFC = 0.e0;
    real _t0FFD = 0.e0;
    vec4 _t0FFE = [_t0FFA, _t0FFB, _t0FFC, _t0FFD];
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = -0.1e1;
    real _t1002 = 0.1e1;
    vec4 _t1003 = [_t0FFF, _t1000, _t1001, _t1002];
    real _t1004 = 0.1e1;
    real _t1005 = -0.1e1;
    real _t1006 = 0.e0;
    real _t1007 = -0.5e0;
    vec4 _t1008 = [_t1004, _t1005, _t1006, _t1007];
    real _t1009 = 0.e0;
    real _t100A = 0.e0;
    real _t100B = 0.e0;
    real _t100C = 0.1e1;
    vec4 _t100D = [_t1009, _t100A, _t100B, _t100C];
    tensor[4,4] _t100E = [_t0FFE, _t1003, _t1008, _t100D];
    real _t100F = 0.e0;
    real _t1010 = 0.e0;
    real _t1011 = 0.1e1;
    real _t1012 = -0.1e1;
    vec4 _t1013 = [_t100F, _t1010, _t1011, _t1012];
    real _t1014 = 0.e0;
    real _t1015 = -0.1e1;
    real _t1016 = 0.e0;
    real _t1017 = 0.e0;
    vec4 _t1018 = [_t1014, _t1015, _t1016, _t1017];
    real _t1019 = 0.1e1;
    real _t101A = -0.1e1;
    real _t101B = 0.e0;
    real _t101C = -0.5e0;
    vec4 _t101D = [_t1019, _t101A, _t101B, _t101C];
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    real _t1021 = 0.1e1;
    vec4 _t1022 = [_t101E, _t101F, _t1020, _t1021];
    tensor[4,4] _t1023 = [_t1013, _t1018, _t101D, _t1022];
    tensor[4,4][6] _t1024 = {_t0FBA, _t0FCF, _t0FE4, _t0FF9, _t100E, _t1023};
    real _t1025 = 0.1e1;
    real _t1026 = 0.e0;
    real _t1027 = 0.1e1;
    real _t1028 = 0.5e0;
    vec4 _t1029 = [_t1025, _t1026, _t1027, _t1028];
    real _t102A = 0.1e1;
    real _t102B = 0.e0;
    real _t102C = 0.e0;
    real _t102D = 0.e0;
    vec4 _t102E = [_t102A, _t102B, _t102C, _t102D];
    real _t102F = 0.e0;
    real _t1030 = 0.1e1;
    real _t1031 = 0.e0;
    real _t1032 = 0.e0;
    vec4 _t1033 = [_t102F, _t1030, _t1031, _t1032];
    real _t1034 = 0.e0;
    real _t1035 = 0.e0;
    real _t1036 = 0.e0;
    real _t1037 = 0.1e1;
    vec4 _t1038 = [_t1034, _t1035, _t1036, _t1037];
    tensor[4,4] _t1039 = [_t1029, _t102E, _t1033, _t1038];
    real _t103A = 0.1e1;
    real _t103B = 0.e0;
    real _t103C = 0.1e1;
    real _t103D = 0.5e0;
    vec4 _t103E = [_t103A, _t103B, _t103C, _t103D];
    real _t103F = 0.1e1;
    real _t1040 = 0.e0;
    real _t1041 = 0.e0;
    real _t1042 = 0.e0;
    vec4 _t1043 = [_t103F, _t1040, _t1041, _t1042];
    real _t1044 = 0.e0;
    real _t1045 = 0.1e1;
    real _t1046 = 0.e0;
    real _t1047 = 0.1e1;
    vec4 _t1048 = [_t1044, _t1045, _t1046, _t1047];
    real _t1049 = 0.e0;
    real _t104A = 0.e0;
    real _t104B = 0.e0;
    real _t104C = 0.1e1;
    vec4 _t104D = [_t1049, _t104A, _t104B, _t104C];
    tensor[4,4] _t104E = [_t103E, _t1043, _t1048, _t104D];
    real _t104F = 0.1e1;
    real _t1050 = 0.e0;
    real _t1051 = 0.e0;
    real _t1052 = 0.e0;
    vec4 _t1053 = [_t104F, _t1050, _t1051, _t1052];
    real _t1054 = 0.e0;
    real _t1055 = 0.1e1;
    real _t1056 = 0.e0;
    real _t1057 = 0.e0;
    vec4 _t1058 = [_t1054, _t1055, _t1056, _t1057];
    real _t1059 = 0.e0;
    real _t105A = 0.e0;
    real _t105B = 0.1e1;
    real _t105C = 0.e0;
    vec4 _t105D = [_t1059, _t105A, _t105B, _t105C];
    real _t105E = 0.e0;
    real _t105F = 0.e0;
    real _t1060 = 0.e0;
    real _t1061 = 0.1e1;
    vec4 _t1062 = [_t105E, _t105F, _t1060, _t1061];
    tensor[4,4] _t1063 = [_t1053, _t1058, _t105D, _t1062];
    real _t1064 = 0.e0;
    real _t1065 = -0.1e1;
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    vec4 _t1068 = [_t1064, _t1065, _t1066, _t1067];
    real _t1069 = 0.1e1;
    real _t106A = 0.e0;
    real _t106B = 0.e0;
    real _t106C = 0.e0;
    vec4 _t106D = [_t1069, _t106A, _t106B, _t106C];
    real _t106E = 0.e0;
    real _t106F = 0.e0;
    real _t1070 = 0.1e1;
    real _t1071 = 0.e0;
    vec4 _t1072 = [_t106E, _t106F, _t1070, _t1071];
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    real _t1076 = 0.1e1;
    vec4 _t1077 = [_t1073, _t1074, _t1075, _t1076];
    tensor[4,4] _t1078 = [_t1068, _t106D, _t1072, _t1077];
    real _t1079 = -0.1e1;
    real _t107A = 0.e0;
    real _t107B = 0.e0;
    real _t107C = 0.e0;
    vec4 _t107D = [_t1079, _t107A, _t107B, _t107C];
    real _t107E = 0.e0;
    real _t107F = -0.1e1;
    real _t1080 = 0.e0;
    real _t1081 = 0.e0;
    vec4 _t1082 = [_t107E, _t107F, _t1080, _t1081];
    real _t1083 = 0.e0;
    real _t1084 = 0.e0;
    real _t1085 = 0.1e1;
    real _t1086 = 0.e0;
    vec4 _t1087 = [_t1083, _t1084, _t1085, _t1086];
    real _t1088 = 0.e0;
    real _t1089 = 0.e0;
    real _t108A = 0.e0;
    real _t108B = 0.1e1;
    vec4 _t108C = [_t1088, _t1089, _t108A, _t108B];
    tensor[4,4] _t108D = [_t107D, _t1082, _t1087, _t108C];
    real _t108E = 0.e0;
    real _t108F = 0.1e1;
    real _t1090 = 0.e0;
    real _t1091 = 0.e0;
    vec4 _t1092 = [_t108E, _t108F, _t1090, _t1091];
    real _t1093 = -0.1e1;
    real _t1094 = 0.e0;
    real _t1095 = 0.e0;
    real _t1096 = 0.e0;
    vec4 _t1097 = [_t1093, _t1094, _t1095, _t1096];
    real _t1098 = 0.e0;
    real _t1099 = 0.e0;
    real _t109A = 0.1e1;
    real _t109B = 0.e0;
    vec4 _t109C = [_t1098, _t1099, _t109A, _t109B];
    real _t109D = 0.e0;
    real _t109E = 0.e0;
    real _t109F = 0.e0;
    real _t10A0 = 0.1e1;
    vec4 _t10A1 = [_t109D, _t109E, _t109F, _t10A0];
    tensor[4,4] _t10A2 = [_t1092, _t1097, _t109C, _t10A1];
    tensor[4,4][6] _t10A3 = {_t1039, _t104E, _t1063, _t1078, _t108D, _t10A2};
    real _t10A4 = 0.e0;
    real _t10A5 = 0.1e1;
    real _t10A6 = 0.1e1;
    real _t10A7 = 0.5e0;
    vec4 _t10A8 = [_t10A4, _t10A5, _t10A6, _t10A7];
    real _t10A9 = 0.e0;
    real _t10AA = 0.1e1;
    real _t10AB = 0.e0;
    real _t10AC = 0.e0;
    vec4 _t10AD = [_t10A9, _t10AA, _t10AB, _t10AC];
    real _t10AE = -0.1e1;
    real _t10AF = 0.e0;
    real _t10B0 = 0.e0;
    real _t10B1 = 0.e0;
    vec4 _t10B2 = [_t10AE, _t10AF, _t10B0, _t10B1];
    real _t10B3 = 0.e0;
    real _t10B4 = 0.e0;
    real _t10B5 = 0.e0;
    real _t10B6 = 0.1e1;
    vec4 _t10B7 = [_t10B3, _t10B4, _t10B5, _t10B6];
    tensor[4,4] _t10B8 = [_t10A8, _t10AD, _t10B2, _t10B7];
    real _t10B9 = 0.e0;
    real _t10BA = 0.1e1;
    real _t10BB = 0.1e1;
    real _t10BC = 0.5e0;
    vec4 _t10BD = [_t10B9, _t10BA, _t10BB, _t10BC];
    real _t10BE = 0.e0;
    real _t10BF = 0.1e1;
    real _t10C0 = 0.e0;
    real _t10C1 = 0.e0;
    vec4 _t10C2 = [_t10BE, _t10BF, _t10C0, _t10C1];
    real _t10C3 = -0.1e1;
    real _t10C4 = 0.e0;
    real _t10C5 = 0.e0;
    real _t10C6 = 0.1e1;
    vec4 _t10C7 = [_t10C3, _t10C4, _t10C5, _t10C6];
    real _t10C8 = 0.e0;
    real _t10C9 = 0.e0;
    real _t10CA = 0.e0;
    real _t10CB = 0.1e1;
    vec4 _t10CC = [_t10C8, _t10C9, _t10CA, _t10CB];
    tensor[4,4] _t10CD = [_t10BD, _t10C2, _t10C7, _t10CC];
    real _t10CE = 0.e0;
    real _t10CF = 0.1e1;
    real _t10D0 = 0.e0;
    real _t10D1 = 0.e0;
    vec4 _t10D2 = [_t10CE, _t10CF, _t10D0, _t10D1];
    real _t10D3 = -0.1e1;
    real _t10D4 = 0.e0;
    real _t10D5 = 0.e0;
    real _t10D6 = 0.e0;
    vec4 _t10D7 = [_t10D3, _t10D4, _t10D5, _t10D6];
    real _t10D8 = 0.e0;
    real _t10D9 = 0.e0;
    real _t10DA = 0.1e1;
    real _t10DB = 0.e0;
    vec4 _t10DC = [_t10D8, _t10D9, _t10DA, _t10DB];
    real _t10DD = 0.e0;
    real _t10DE = 0.e0;
    real _t10DF = 0.e0;
    real _t10E0 = 0.1e1;
    vec4 _t10E1 = [_t10DD, _t10DE, _t10DF, _t10E0];
    tensor[4,4] _t10E2 = [_t10D2, _t10D7, _t10DC, _t10E1];
    real _t10E3 = 0.1e1;
    real _t10E4 = 0.e0;
    real _t10E5 = 0.e0;
    real _t10E6 = 0.e0;
    vec4 _t10E7 = [_t10E3, _t10E4, _t10E5, _t10E6];
    real _t10E8 = 0.e0;
    real _t10E9 = 0.1e1;
    real _t10EA = 0.e0;
    real _t10EB = 0.e0;
    vec4 _t10EC = [_t10E8, _t10E9, _t10EA, _t10EB];
    real _t10ED = 0.e0;
    real _t10EE = 0.e0;
    real _t10EF = 0.1e1;
    real _t10F0 = 0.e0;
    vec4 _t10F1 = [_t10ED, _t10EE, _t10EF, _t10F0];
    real _t10F2 = 0.e0;
    real _t10F3 = 0.e0;
    real _t10F4 = 0.e0;
    real _t10F5 = 0.1e1;
    vec4 _t10F6 = [_t10F2, _t10F3, _t10F4, _t10F5];
    tensor[4,4] _t10F7 = [_t10E7, _t10EC, _t10F1, _t10F6];
    real _t10F8 = 0.e0;
    real _t10F9 = -0.1e1;
    real _t10FA = 0.e0;
    real _t10FB = 0.e0;
    vec4 _t10FC = [_t10F8, _t10F9, _t10FA, _t10FB];
    real _t10FD = 0.1e1;
    real _t10FE = 0.e0;
    real _t10FF = 0.e0;
    real _t1100 = 0.e0;
    vec4 _t1101 = [_t10FD, _t10FE, _t10FF, _t1100];
    real _t1102 = 0.e0;
    real _t1103 = 0.e0;
    real _t1104 = 0.1e1;
    real _t1105 = 0.e0;
    vec4 _t1106 = [_t1102, _t1103, _t1104, _t1105];
    real _t1107 = 0.e0;
    real _t1108 = 0.e0;
    real _t1109 = 0.e0;
    real _t110A = 0.1e1;
    vec4 _t110B = [_t1107, _t1108, _t1109, _t110A];
    tensor[4,4] _t110C = [_t10FC, _t1101, _t1106, _t110B];
    real _t110D = -0.1e1;
    real _t110E = 0.e0;
    real _t110F = 0.e0;
    real _t1110 = 0.e0;
    vec4 _t1111 = [_t110D, _t110E, _t110F, _t1110];
    real _t1112 = 0.e0;
    real _t1113 = -0.1e1;
    real _t1114 = 0.e0;
    real _t1115 = 0.e0;
    vec4 _t1116 = [_t1112, _t1113, _t1114, _t1115];
    real _t1117 = 0.e0;
    real _t1118 = 0.e0;
    real _t1119 = 0.1e1;
    real _t111A = 0.e0;
    vec4 _t111B = [_t1117, _t1118, _t1119, _t111A];
    real _t111C = 0.e0;
    real _t111D = 0.e0;
    real _t111E = 0.e0;
    real _t111F = 0.1e1;
    vec4 _t1120 = [_t111C, _t111D, _t111E, _t111F];
    tensor[4,4] _t1121 = [_t1111, _t1116, _t111B, _t1120];
    tensor[4,4][6] _t1122 = {_t10B8, _t10CD, _t10E2, _t10F7, _t110C, _t1121};
    real _t1123 = -0.1e1;
    real _t1124 = 0.e0;
    real _t1125 = 0.1e1;
    real _t1126 = 0.5e0;
    vec4 _t1127 = [_t1123, _t1124, _t1125, _t1126];
    real _t1128 = -0.1e1;
    real _t1129 = 0.e0;
    real _t112A = 0.e0;
    real _t112B = 0.e0;
    vec4 _t112C = [_t1128, _t1129, _t112A, _t112B];
    real _t112D = 0.e0;
    real _t112E = -0.1e1;
    real _t112F = 0.e0;
    real _t1130 = 0.e0;
    vec4 _t1131 = [_t112D, _t112E, _t112F, _t1130];
    real _t1132 = 0.e0;
    real _t1133 = 0.e0;
    real _t1134 = 0.e0;
    real _t1135 = 0.1e1;
    vec4 _t1136 = [_t1132, _t1133, _t1134, _t1135];
    tensor[4,4] _t1137 = [_t1127, _t112C, _t1131, _t1136];
    real _t1138 = -0.1e1;
    real _t1139 = 0.e0;
    real _t113A = 0.1e1;
    real _t113B = 0.5e0;
    vec4 _t113C = [_t1138, _t1139, _t113A, _t113B];
    real _t113D = -0.1e1;
    real _t113E = 0.e0;
    real _t113F = 0.e0;
    real _t1140 = 0.e0;
    vec4 _t1141 = [_t113D, _t113E, _t113F, _t1140];
    real _t1142 = 0.e0;
    real _t1143 = -0.1e1;
    real _t1144 = 0.e0;
    real _t1145 = 0.1e1;
    vec4 _t1146 = [_t1142, _t1143, _t1144, _t1145];
    real _t1147 = 0.e0;
    real _t1148 = 0.e0;
    real _t1149 = 0.e0;
    real _t114A = 0.1e1;
    vec4 _t114B = [_t1147, _t1148, _t1149, _t114A];
    tensor[4,4] _t114C = [_t113C, _t1141, _t1146, _t114B];
    real _t114D = -0.1e1;
    real _t114E = 0.e0;
    real _t114F = 0.e0;
    real _t1150 = 0.e0;
    vec4 _t1151 = [_t114D, _t114E, _t114F, _t1150];
    real _t1152 = 0.e0;
    real _t1153 = -0.1e1;
    real _t1154 = 0.e0;
    real _t1155 = 0.e0;
    vec4 _t1156 = [_t1152, _t1153, _t1154, _t1155];
    real _t1157 = 0.e0;
    real _t1158 = 0.e0;
    real _t1159 = 0.1e1;
    real _t115A = 0.e0;
    vec4 _t115B = [_t1157, _t1158, _t1159, _t115A];
    real _t115C = 0.e0;
    real _t115D = 0.e0;
    real _t115E = 0.e0;
    real _t115F = 0.1e1;
    vec4 _t1160 = [_t115C, _t115D, _t115E, _t115F];
    tensor[4,4] _t1161 = [_t1151, _t1156, _t115B, _t1160];
    real _t1162 = 0.e0;
    real _t1163 = 0.1e1;
    real _t1164 = 0.e0;
    real _t1165 = 0.e0;
    vec4 _t1166 = [_t1162, _t1163, _t1164, _t1165];
    real _t1167 = -0.1e1;
    real _t1168 = 0.e0;
    real _t1169 = 0.e0;
    real _t116A = 0.e0;
    vec4 _t116B = [_t1167, _t1168, _t1169, _t116A];
    real _t116C = 0.e0;
    real _t116D = 0.e0;
    real _t116E = 0.1e1;
    real _t116F = 0.e0;
    vec4 _t1170 = [_t116C, _t116D, _t116E, _t116F];
    real _t1171 = 0.e0;
    real _t1172 = 0.e0;
    real _t1173 = 0.e0;
    real _t1174 = 0.1e1;
    vec4 _t1175 = [_t1171, _t1172, _t1173, _t1174];
    tensor[4,4] _t1176 = [_t1166, _t116B, _t1170, _t1175];
    real _t1177 = 0.1e1;
    real _t1178 = 0.e0;
    real _t1179 = 0.e0;
    real _t117A = 0.e0;
    vec4 _t117B = [_t1177, _t1178, _t1179, _t117A];
    real _t117C = 0.e0;
    real _t117D = 0.1e1;
    real _t117E = 0.e0;
    real _t117F = 0.e0;
    vec4 _t1180 = [_t117C, _t117D, _t117E, _t117F];
    real _t1181 = 0.e0;
    real _t1182 = 0.e0;
    real _t1183 = 0.1e1;
    real _t1184 = 0.e0;
    vec4 _t1185 = [_t1181, _t1182, _t1183, _t1184];
    real _t1186 = 0.e0;
    real _t1187 = 0.e0;
    real _t1188 = 0.e0;
    real _t1189 = 0.1e1;
    vec4 _t118A = [_t1186, _t1187, _t1188, _t1189];
    tensor[4,4] _t118B = [_t117B, _t1180, _t1185, _t118A];
    real _t118C = 0.e0;
    real _t118D = -0.1e1;
    real _t118E = 0.e0;
    real _t118F = 0.e0;
    vec4 _t1190 = [_t118C, _t118D, _t118E, _t118F];
    real _t1191 = 0.1e1;
    real _t1192 = 0.e0;
    real _t1193 = 0.e0;
    real _t1194 = 0.e0;
    vec4 _t1195 = [_t1191, _t1192, _t1193, _t1194];
    real _t1196 = 0.e0;
    real _t1197 = 0.e0;
    real _t1198 = 0.1e1;
    real _t1199 = 0.e0;
    vec4 _t119A = [_t1196, _t1197, _t1198, _t1199];
    real _t119B = 0.e0;
    real _t119C = 0.e0;
    real _t119D = 0.e0;
    real _t119E = 0.1e1;
    vec4 _t119F = [_t119B, _t119C, _t119D, _t119E];
    tensor[4,4] _t11A0 = [_t1190, _t1195, _t119A, _t119F];
    tensor[4,4][6] _t11A1 = {_t1137, _t114C, _t1161, _t1176, _t118B, _t11A0};
    real _t11A2 = 0.e0;
    real _t11A3 = -0.1e1;
    real _t11A4 = 0.1e1;
    real _t11A5 = 0.5e0;
    vec4 _t11A6 = [_t11A2, _t11A3, _t11A4, _t11A5];
    real _t11A7 = 0.e0;
    real _t11A8 = -0.1e1;
    real _t11A9 = 0.e0;
    real _t11AA = 0.e0;
    vec4 _t11AB = [_t11A7, _t11A8, _t11A9, _t11AA];
    real _t11AC = 0.1e1;
    real _t11AD = 0.e0;
    real _t11AE = 0.e0;
    real _t11AF = 0.e0;
    vec4 _t11B0 = [_t11AC, _t11AD, _t11AE, _t11AF];
    real _t11B1 = 0.e0;
    real _t11B2 = 0.e0;
    real _t11B3 = 0.e0;
    real _t11B4 = 0.1e1;
    vec4 _t11B5 = [_t11B1, _t11B2, _t11B3, _t11B4];
    tensor[4,4] _t11B6 = [_t11A6, _t11AB, _t11B0, _t11B5];
    real _t11B7 = 0.e0;
    real _t11B8 = -0.1e1;
    real _t11B9 = 0.1e1;
    real _t11BA = 0.5e0;
    vec4 _t11BB = [_t11B7, _t11B8, _t11B9, _t11BA];
    real _t11BC = 0.e0;
    real _t11BD = -0.1e1;
    real _t11BE = 0.e0;
    real _t11BF = 0.e0;
    vec4 _t11C0 = [_t11BC, _t11BD, _t11BE, _t11BF];
    real _t11C1 = 0.1e1;
    real _t11C2 = 0.e0;
    real _t11C3 = 0.e0;
    real _t11C4 = 0.1e1;
    vec4 _t11C5 = [_t11C1, _t11C2, _t11C3, _t11C4];
    real _t11C6 = 0.e0;
    real _t11C7 = 0.e0;
    real _t11C8 = 0.e0;
    real _t11C9 = 0.1e1;
    vec4 _t11CA = [_t11C6, _t11C7, _t11C8, _t11C9];
    tensor[4,4] _t11CB = [_t11BB, _t11C0, _t11C5, _t11CA];
    real _t11CC = 0.e0;
    real _t11CD = -0.1e1;
    real _t11CE = 0.e0;
    real _t11CF = 0.e0;
    vec4 _t11D0 = [_t11CC, _t11CD, _t11CE, _t11CF];
    real _t11D1 = 0.1e1;
    real _t11D2 = 0.e0;
    real _t11D3 = 0.e0;
    real _t11D4 = 0.e0;
    vec4 _t11D5 = [_t11D1, _t11D2, _t11D3, _t11D4];
    real _t11D6 = 0.e0;
    real _t11D7 = 0.e0;
    real _t11D8 = 0.1e1;
    real _t11D9 = 0.e0;
    vec4 _t11DA = [_t11D6, _t11D7, _t11D8, _t11D9];
    real _t11DB = 0.e0;
    real _t11DC = 0.e0;
    real _t11DD = 0.e0;
    real _t11DE = 0.1e1;
    vec4 _t11DF = [_t11DB, _t11DC, _t11DD, _t11DE];
    tensor[4,4] _t11E0 = [_t11D0, _t11D5, _t11DA, _t11DF];
    real _t11E1 = -0.1e1;
    real _t11E2 = 0.e0;
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    vec4 _t11E5 = [_t11E1, _t11E2, _t11E3, _t11E4];
    real _t11E6 = 0.e0;
    real _t11E7 = -0.1e1;
    real _t11E8 = 0.e0;
    real _t11E9 = 0.e0;
    vec4 _t11EA = [_t11E6, _t11E7, _t11E8, _t11E9];
    real _t11EB = 0.e0;
    real _t11EC = 0.e0;
    real _t11ED = 0.1e1;
    real _t11EE = 0.e0;
    vec4 _t11EF = [_t11EB, _t11EC, _t11ED, _t11EE];
    real _t11F0 = 0.e0;
    real _t11F1 = 0.e0;
    real _t11F2 = 0.e0;
    real _t11F3 = 0.1e1;
    vec4 _t11F4 = [_t11F0, _t11F1, _t11F2, _t11F3];
    tensor[4,4] _t11F5 = [_t11E5, _t11EA, _t11EF, _t11F4];
    real _t11F6 = 0.e0;
    real _t11F7 = 0.1e1;
    real _t11F8 = 0.e0;
    real _t11F9 = 0.e0;
    vec4 _t11FA = [_t11F6, _t11F7, _t11F8, _t11F9];
    real _t11FB = -0.1e1;
    real _t11FC = 0.e0;
    real _t11FD = 0.e0;
    real _t11FE = 0.e0;
    vec4 _t11FF = [_t11FB, _t11FC, _t11FD, _t11FE];
    real _t1200 = 0.e0;
    real _t1201 = 0.e0;
    real _t1202 = 0.1e1;
    real _t1203 = 0.e0;
    vec4 _t1204 = [_t1200, _t1201, _t1202, _t1203];
    real _t1205 = 0.e0;
    real _t1206 = 0.e0;
    real _t1207 = 0.e0;
    real _t1208 = 0.1e1;
    vec4 _t1209 = [_t1205, _t1206, _t1207, _t1208];
    tensor[4,4] _t120A = [_t11FA, _t11FF, _t1204, _t1209];
    real _t120B = 0.1e1;
    real _t120C = 0.e0;
    real _t120D = 0.e0;
    real _t120E = 0.e0;
    vec4 _t120F = [_t120B, _t120C, _t120D, _t120E];
    real _t1210 = 0.e0;
    real _t1211 = 0.1e1;
    real _t1212 = 0.e0;
    real _t1213 = 0.e0;
    vec4 _t1214 = [_t1210, _t1211, _t1212, _t1213];
    real _t1215 = 0.e0;
    real _t1216 = 0.e0;
    real _t1217 = 0.1e1;
    real _t1218 = 0.e0;
    vec4 _t1219 = [_t1215, _t1216, _t1217, _t1218];
    real _t121A = 0.e0;
    real _t121B = 0.e0;
    real _t121C = 0.e0;
    real _t121D = 0.1e1;
    vec4 _t121E = [_t121A, _t121B, _t121C, _t121D];
    tensor[4,4] _t121F = [_t120F, _t1214, _t1219, _t121E];
    tensor[4,4][6] _t1220 = {_t11B6, _t11CB, _t11E0, _t11F5, _t120A, _t121F};
    tensor[4,4][6][6] _t1221 = {_t0FA5, _t1024, _t10A3, _t1122, _t11A1, _t1220};
    real _t1222 = time05E1[1];
    int _t1223 = prim $r2i01B7 (_t1222);
    tensor[4,4][6] _t1224 = prim $sub01C0<tensor[4,4][6]; %6> (_t1221, _t1223);
    real _t1225 = time05E1[1];
    int _t1226 = prim $r2i01B7 (_t1225);
    int[2] _t1227 = func nextCell405E5 (_t1226, cellId05DE, mesh05DD);
    int _t1228 = 1;
    int _t1229 = prim $sub01C0<int; %2> (_t1227, _t1228);
    tensor[4,4] _t122A = prim $sub01C0<tensor[4,4]; %6> (_t1224, _t1229);
    real _t122B = time05E1[0];
    vec3 _t122C = prim *0036<$[3]> (_t122B, dPos05E0);
    vec3 _t122D = prim +0017<$[3]> (_t122C, refPos05DF);
    real _t122E = _t122D[0];
    real _t122F = time05E1[0];
    vec3 _t1230 = prim *0036<$[3]> (_t122F, dPos05E0);
    vec3 _t1231 = prim +0017<$[3]> (_t1230, refPos05DF);
    real _t1232 = _t1231[1];
    real _t1233 = time05E1[0];
    vec3 _t1234 = prim *0036<$[3]> (_t1233, dPos05E0);
    vec3 _t1235 = prim +0017<$[3]> (_t1234, refPos05DF);
    real _t1236 = _t1235[2];
    real _t1237 = 0.1e1;
    vec4 _t1238 = [_t122E, _t1232, _t1236, _t1237];
    vec4 _t1239 = prim •00CE<$[4,4]; $[4]; $[4]> (_t122A, _t1238);
    real _t123A = _t1239[2];
    vec3 _t123B = [_t0C12, _t0F26, _t123A];
    real _t123C = time05E1[1];
    int _t123D = prim $r2i01B7 (_t123C);
    int[2] _t123E = func nextCell405E5 (_t123D, cellId05DE, mesh05DD);
    int _t123F = 1;
    int _t1240 = prim $sub01C0<int; %2> (_t123E, _t123F);
    Femdata: MeshPos _t1241 = extractFemItemN((mesh05DD, _t08FE, _t123B, _t1240),RefBuild(Mesh),);
    return _t1241;
  } else {
    real _t1242 = time05E1[0];
    vec3 _t1243 = prim *0036<$[3]> (_t1242, dPos05E0);
    vec3 _t1244 = prim +0017<$[3]> (_t1243, refPos05DF);
    Femdata: MeshPos _t1245 = extractFemItemN((mesh05DD, _t1244),InvalidBuildBoundary(MeshPos),);
    return _t1245;
  }
}
function int[2]#8 nextCell405E5 (int faceIdx1246, int cell1247, Femdata: Mesh mesh1248)
{
  int _t1249 = 12;
  int _t124A = prim *0033 (cell1247, _t1249);
  int _t124B = 2;
  int _t124C = prim *0033 (faceIdx1246, _t124B);
  int _t124D = prim +0015 (_t124A, _t124C);
  int[2] _t124E = extractFemItemN((mesh1248, _t124D),CellFaceCell(Mesh),);
  return _t124E;
}
function vec2#0 _enter124F (vec3 refPos1250, vec3 dPos1251)
{
  real time1252 = +inf;
  int face1253 = -1;
  real faceTime1254 = -inf;
  real _t1255 = -0.5e0;
  real _t1256 = 0.e0;
  real _t1257 = 0.e0;
  real _t1258 = 0.1e1;
  vec3 _t1259 = [_t1256, _t1257, _t1258];
  real _t125A = prim •00CE<$[3]; $[3]; $[]> (_t1259, refPos1250);
  real _t125B = prim -0026<$[]> (_t1255, _t125A);
  real _t125C = 0.e0;
  real _t125D = 0.e0;
  real _t125E = 0.1e1;
  vec3 _t125F = [_t125C, _t125D, _t125E];
  real _t1260 = prim •00CE<$[3]; $[3]; $[]> (_t125F, dPos1251);
  real _t1261 = prim /0055 (_t125B, _t1260);
  real _t1262 = -0.1e-15;
  bool _t1263 = prim >=007E (_t1261, _t1262);
  real _t1264 = -0.5e0;
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  real _t1267 = 0.1e1;
  vec3 _t1268 = [_t1265, _t1266, _t1267];
  real _t1269 = prim •00CE<$[3]; $[3]; $[]> (_t1268, refPos1250);
  real _t126A = prim -0026<$[]> (_t1264, _t1269);
  real _t126B = 0.e0;
  real _t126C = 0.e0;
  real _t126D = 0.1e1;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, dPos1251);
  real _t1270 = prim /0055 (_t126A, _t126F);
  bool _t1271 = prim >0080 (time1252, _t1270);
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  real _t1274 = 0.1e1;
  vec3 _t1275 = [_t1272, _t1273, _t1274];
  real _t1276 = prim •00CE<$[3]; $[3]; $[]> (_t1275, dPos1251);
  real _t1277 = prim |()|00B5<$[]> (_t1276);
  real _t1278 = 0.1e-20;
  bool _t1279 = prim >=007E (_t1277, _t1278);
  bool _t127A = prim $and01C4 (_t1271, _t1279);
  bool _t127B = prim $and01C4 (_t1263, _t127A);
  if _t127B {
    real _t127C = -0.5e0;
    real _t127D = 0.e0;
    real _t127E = 0.e0;
    real _t127F = 0.1e1;
    vec3 _t1280 = [_t127D, _t127E, _t127F];
    real _t1281 = prim •00CE<$[3]; $[3]; $[]> (_t1280, refPos1250);
    real _t1282 = prim -0026<$[]> (_t127C, _t1281);
    real _t1283 = 0.e0;
    real _t1284 = 0.e0;
    real _t1285 = 0.1e1;
    vec3 _t1286 = [_t1283, _t1284, _t1285];
    real _t1287 = prim •00CE<$[3]; $[3]; $[]> (_t1286, dPos1251);
    real _t1288 = prim /0055 (_t1282, _t1287);
    vec3 _t1289 = prim *0038<$[3]> (dPos1251, _t1288);
    vec3 _t128A = prim +0017<$[3]> (refPos1250, _t1289);
    real _t128B = -0.5e0;
    real _t128C = 0.e0;
    real _t128D = 0.e0;
    real _t128E = 0.1e1;
    vec3 _t128F = [_t128C, _t128D, _t128E];
    real _t1290 = prim •00CE<$[3]; $[3]; $[]> (_t128F, refPos1250);
    real _t1291 = prim -0026<$[]> (_t128B, _t1290);
    real _t1292 = 0.e0;
    real _t1293 = 0.e0;
    real _t1294 = 0.1e1;
    vec3 _t1295 = [_t1292, _t1293, _t1294];
    real _t1296 = prim •00CE<$[3]; $[3]; $[]> (_t1295, dPos1251);
    real _t1297 = prim /0055 (_t1291, _t1296);
    vec3 _t1298 = prim *0038<$[3]> (dPos1251, _t1297);
    vec3 _t1299 = prim +0017<$[3]> (refPos1250, _t1298);
    real _t129A = 0.1e-8;
    bool _t129B = extractFemItemN((_t128A, _t1299, _t129A),InsideInsert(File=checkInside.in)(Mesh),);
    if _t129B {
      real _t129C = -0.5e0;
      real _t129D = 0.e0;
      real _t129E = 0.e0;
      real _t129F = 0.1e1;
      vec3 _t12A0 = [_t129D, _t129E, _t129F];
      real _t12A1 = prim •00CE<$[3]; $[3]; $[]> (_t12A0, refPos1250);
      real _t12A2 = prim -0026<$[]> (_t129C, _t12A1);
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      real _t12A5 = 0.1e1;
      vec3 _t12A6 = [_t12A3, _t12A4, _t12A5];
      real _t12A7 = prim •00CE<$[3]; $[3]; $[]> (_t12A6, dPos1251);
      time1252 = prim /0055 (_t12A2, _t12A7);
      face1253 = 0;
    }
  }
  real _t12A8 = 0.5e0;
  real _t12A9 = 0.e0;
  real _t12AA = 0.e0;
  real _t12AB = 0.1e1;
  vec3 _t12AC = [_t12A9, _t12AA, _t12AB];
  real _t12AD = prim •00CE<$[3]; $[3]; $[]> (_t12AC, refPos1250);
  real _t12AE = prim -0026<$[]> (_t12A8, _t12AD);
  real _t12AF = 0.e0;
  real _t12B0 = 0.e0;
  real _t12B1 = 0.1e1;
  vec3 _t12B2 = [_t12AF, _t12B0, _t12B1];
  real _t12B3 = prim •00CE<$[3]; $[3]; $[]> (_t12B2, dPos1251);
  real _t12B4 = prim /0055 (_t12AE, _t12B3);
  real _t12B5 = -0.1e-15;
  bool _t12B6 = prim >=007E (_t12B4, _t12B5);
  real _t12B7 = 0.5e0;
  real _t12B8 = 0.e0;
  real _t12B9 = 0.e0;
  real _t12BA = 0.1e1;
  vec3 _t12BB = [_t12B8, _t12B9, _t12BA];
  real _t12BC = prim •00CE<$[3]; $[3]; $[]> (_t12BB, refPos1250);
  real _t12BD = prim -0026<$[]> (_t12B7, _t12BC);
  real _t12BE = 0.e0;
  real _t12BF = 0.e0;
  real _t12C0 = 0.1e1;
  vec3 _t12C1 = [_t12BE, _t12BF, _t12C0];
  real _t12C2 = prim •00CE<$[3]; $[3]; $[]> (_t12C1, dPos1251);
  real _t12C3 = prim /0055 (_t12BD, _t12C2);
  bool _t12C4 = prim >0080 (time1252, _t12C3);
  real _t12C5 = 0.e0;
  real _t12C6 = 0.e0;
  real _t12C7 = 0.1e1;
  vec3 _t12C8 = [_t12C5, _t12C6, _t12C7];
  real _t12C9 = prim •00CE<$[3]; $[3]; $[]> (_t12C8, dPos1251);
  real _t12CA = prim |()|00B5<$[]> (_t12C9);
  real _t12CB = 0.1e-20;
  bool _t12CC = prim >=007E (_t12CA, _t12CB);
  bool _t12CD = prim $and01C4 (_t12C4, _t12CC);
  bool _t12CE = prim $and01C4 (_t12B6, _t12CD);
  if _t12CE {
    real _t12CF = 0.5e0;
    real _t12D0 = 0.e0;
    real _t12D1 = 0.e0;
    real _t12D2 = 0.1e1;
    vec3 _t12D3 = [_t12D0, _t12D1, _t12D2];
    real _t12D4 = prim •00CE<$[3]; $[3]; $[]> (_t12D3, refPos1250);
    real _t12D5 = prim -0026<$[]> (_t12CF, _t12D4);
    real _t12D6 = 0.e0;
    real _t12D7 = 0.e0;
    real _t12D8 = 0.1e1;
    vec3 _t12D9 = [_t12D6, _t12D7, _t12D8];
    real _t12DA = prim •00CE<$[3]; $[3]; $[]> (_t12D9, dPos1251);
    real _t12DB = prim /0055 (_t12D5, _t12DA);
    vec3 _t12DC = prim *0038<$[3]> (dPos1251, _t12DB);
    vec3 _t12DD = prim +0017<$[3]> (refPos1250, _t12DC);
    real _t12DE = 0.5e0;
    real _t12DF = 0.e0;
    real _t12E0 = 0.e0;
    real _t12E1 = 0.1e1;
    vec3 _t12E2 = [_t12DF, _t12E0, _t12E1];
    real _t12E3 = prim •00CE<$[3]; $[3]; $[]> (_t12E2, refPos1250);
    real _t12E4 = prim -0026<$[]> (_t12DE, _t12E3);
    real _t12E5 = 0.e0;
    real _t12E6 = 0.e0;
    real _t12E7 = 0.1e1;
    vec3 _t12E8 = [_t12E5, _t12E6, _t12E7];
    real _t12E9 = prim •00CE<$[3]; $[3]; $[]> (_t12E8, dPos1251);
    real _t12EA = prim /0055 (_t12E4, _t12E9);
    vec3 _t12EB = prim *0038<$[3]> (dPos1251, _t12EA);
    vec3 _t12EC = prim +0017<$[3]> (refPos1250, _t12EB);
    real _t12ED = 0.1e-8;
    bool _t12EE = extractFemItemN((_t12DD, _t12EC, _t12ED),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12EE {
      real _t12EF = 0.5e0;
      real _t12F0 = 0.e0;
      real _t12F1 = 0.e0;
      real _t12F2 = 0.1e1;
      vec3 _t12F3 = [_t12F0, _t12F1, _t12F2];
      real _t12F4 = prim •00CE<$[3]; $[3]; $[]> (_t12F3, refPos1250);
      real _t12F5 = prim -0026<$[]> (_t12EF, _t12F4);
      real _t12F6 = 0.e0;
      real _t12F7 = 0.e0;
      real _t12F8 = 0.1e1;
      vec3 _t12F9 = [_t12F6, _t12F7, _t12F8];
      real _t12FA = prim •00CE<$[3]; $[3]; $[]> (_t12F9, dPos1251);
      time1252 = prim /0055 (_t12F5, _t12FA);
      face1253 = 1;
    }
  }
  real _t12FB = -0.5e0;
  real _t12FC = 0.e0;
  real _t12FD = 0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos1250);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = 0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos1251);
  real _t1307 = prim /0055 (_t1301, _t1306);
  real _t1308 = -0.1e-15;
  bool _t1309 = prim >=007E (_t1307, _t1308);
  real _t130A = -0.5e0;
  real _t130B = 0.e0;
  real _t130C = 0.1e1;
  real _t130D = 0.e0;
  vec3 _t130E = [_t130B, _t130C, _t130D];
  real _t130F = prim •00CE<$[3]; $[3]; $[]> (_t130E, refPos1250);
  real _t1310 = prim -0026<$[]> (_t130A, _t130F);
  real _t1311 = 0.e0;
  real _t1312 = 0.1e1;
  real _t1313 = 0.e0;
  vec3 _t1314 = [_t1311, _t1312, _t1313];
  real _t1315 = prim •00CE<$[3]; $[3]; $[]> (_t1314, dPos1251);
  real _t1316 = prim /0055 (_t1310, _t1315);
  bool _t1317 = prim >0080 (time1252, _t1316);
  real _t1318 = 0.e0;
  real _t1319 = 0.1e1;
  real _t131A = 0.e0;
  vec3 _t131B = [_t1318, _t1319, _t131A];
  real _t131C = prim •00CE<$[3]; $[3]; $[]> (_t131B, dPos1251);
  real _t131D = prim |()|00B5<$[]> (_t131C);
  real _t131E = 0.1e-20;
  bool _t131F = prim >=007E (_t131D, _t131E);
  bool _t1320 = prim $and01C4 (_t1317, _t131F);
  bool _t1321 = prim $and01C4 (_t1309, _t1320);
  if _t1321 {
    real _t1322 = -0.5e0;
    real _t1323 = 0.e0;
    real _t1324 = 0.1e1;
    real _t1325 = 0.e0;
    vec3 _t1326 = [_t1323, _t1324, _t1325];
    real _t1327 = prim •00CE<$[3]; $[3]; $[]> (_t1326, refPos1250);
    real _t1328 = prim -0026<$[]> (_t1322, _t1327);
    real _t1329 = 0.e0;
    real _t132A = 0.1e1;
    real _t132B = 0.e0;
    vec3 _t132C = [_t1329, _t132A, _t132B];
    real _t132D = prim •00CE<$[3]; $[3]; $[]> (_t132C, dPos1251);
    real _t132E = prim /0055 (_t1328, _t132D);
    vec3 _t132F = prim *0038<$[3]> (dPos1251, _t132E);
    vec3 _t1330 = prim +0017<$[3]> (refPos1250, _t132F);
    real _t1331 = -0.5e0;
    real _t1332 = 0.e0;
    real _t1333 = 0.1e1;
    real _t1334 = 0.e0;
    vec3 _t1335 = [_t1332, _t1333, _t1334];
    real _t1336 = prim •00CE<$[3]; $[3]; $[]> (_t1335, refPos1250);
    real _t1337 = prim -0026<$[]> (_t1331, _t1336);
    real _t1338 = 0.e0;
    real _t1339 = 0.1e1;
    real _t133A = 0.e0;
    vec3 _t133B = [_t1338, _t1339, _t133A];
    real _t133C = prim •00CE<$[3]; $[3]; $[]> (_t133B, dPos1251);
    real _t133D = prim /0055 (_t1337, _t133C);
    vec3 _t133E = prim *0038<$[3]> (dPos1251, _t133D);
    vec3 _t133F = prim +0017<$[3]> (refPos1250, _t133E);
    real _t1340 = 0.1e-8;
    bool _t1341 = extractFemItemN((_t1330, _t133F, _t1340),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1341 {
      real _t1342 = -0.5e0;
      real _t1343 = 0.e0;
      real _t1344 = 0.1e1;
      real _t1345 = 0.e0;
      vec3 _t1346 = [_t1343, _t1344, _t1345];
      real _t1347 = prim •00CE<$[3]; $[3]; $[]> (_t1346, refPos1250);
      real _t1348 = prim -0026<$[]> (_t1342, _t1347);
      real _t1349 = 0.e0;
      real _t134A = 0.1e1;
      real _t134B = 0.e0;
      vec3 _t134C = [_t1349, _t134A, _t134B];
      real _t134D = prim •00CE<$[3]; $[3]; $[]> (_t134C, dPos1251);
      time1252 = prim /0055 (_t1348, _t134D);
      face1253 = 2;
    }
  }
  real _t134E = -0.5e0;
  real _t134F = -0.1e1;
  real _t1350 = 0.e0;
  real _t1351 = 0.e0;
  vec3 _t1352 = [_t134F, _t1350, _t1351];
  real _t1353 = prim •00CE<$[3]; $[3]; $[]> (_t1352, refPos1250);
  real _t1354 = prim -0026<$[]> (_t134E, _t1353);
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  real _t1357 = 0.e0;
  vec3 _t1358 = [_t1355, _t1356, _t1357];
  real _t1359 = prim •00CE<$[3]; $[3]; $[]> (_t1358, dPos1251);
  real _t135A = prim /0055 (_t1354, _t1359);
  real _t135B = -0.1e-15;
  bool _t135C = prim >=007E (_t135A, _t135B);
  real _t135D = -0.5e0;
  real _t135E = -0.1e1;
  real _t135F = 0.e0;
  real _t1360 = 0.e0;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = prim •00CE<$[3]; $[3]; $[]> (_t1361, refPos1250);
  real _t1363 = prim -0026<$[]> (_t135D, _t1362);
  real _t1364 = -0.1e1;
  real _t1365 = 0.e0;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = prim •00CE<$[3]; $[3]; $[]> (_t1367, dPos1251);
  real _t1369 = prim /0055 (_t1363, _t1368);
  bool _t136A = prim >0080 (time1252, _t1369);
  real _t136B = -0.1e1;
  real _t136C = 0.e0;
  real _t136D = 0.e0;
  vec3 _t136E = [_t136B, _t136C, _t136D];
  real _t136F = prim •00CE<$[3]; $[3]; $[]> (_t136E, dPos1251);
  real _t1370 = prim |()|00B5<$[]> (_t136F);
  real _t1371 = 0.1e-20;
  bool _t1372 = prim >=007E (_t1370, _t1371);
  bool _t1373 = prim $and01C4 (_t136A, _t1372);
  bool _t1374 = prim $and01C4 (_t135C, _t1373);
  if _t1374 {
    real _t1375 = -0.5e0;
    real _t1376 = -0.1e1;
    real _t1377 = 0.e0;
    real _t1378 = 0.e0;
    vec3 _t1379 = [_t1376, _t1377, _t1378];
    real _t137A = prim •00CE<$[3]; $[3]; $[]> (_t1379, refPos1250);
    real _t137B = prim -0026<$[]> (_t1375, _t137A);
    real _t137C = -0.1e1;
    real _t137D = 0.e0;
    real _t137E = 0.e0;
    vec3 _t137F = [_t137C, _t137D, _t137E];
    real _t1380 = prim •00CE<$[3]; $[3]; $[]> (_t137F, dPos1251);
    real _t1381 = prim /0055 (_t137B, _t1380);
    vec3 _t1382 = prim *0038<$[3]> (dPos1251, _t1381);
    vec3 _t1383 = prim +0017<$[3]> (refPos1250, _t1382);
    real _t1384 = -0.5e0;
    real _t1385 = -0.1e1;
    real _t1386 = 0.e0;
    real _t1387 = 0.e0;
    vec3 _t1388 = [_t1385, _t1386, _t1387];
    real _t1389 = prim •00CE<$[3]; $[3]; $[]> (_t1388, refPos1250);
    real _t138A = prim -0026<$[]> (_t1384, _t1389);
    real _t138B = -0.1e1;
    real _t138C = 0.e0;
    real _t138D = 0.e0;
    vec3 _t138E = [_t138B, _t138C, _t138D];
    real _t138F = prim •00CE<$[3]; $[3]; $[]> (_t138E, dPos1251);
    real _t1390 = prim /0055 (_t138A, _t138F);
    vec3 _t1391 = prim *0038<$[3]> (dPos1251, _t1390);
    vec3 _t1392 = prim +0017<$[3]> (refPos1250, _t1391);
    real _t1393 = 0.1e-8;
    bool _t1394 = extractFemItemN((_t1383, _t1392, _t1393),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1394 {
      real _t1395 = -0.5e0;
      real _t1396 = -0.1e1;
      real _t1397 = 0.e0;
      real _t1398 = 0.e0;
      vec3 _t1399 = [_t1396, _t1397, _t1398];
      real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, refPos1250);
      real _t139B = prim -0026<$[]> (_t1395, _t139A);
      real _t139C = -0.1e1;
      real _t139D = 0.e0;
      real _t139E = 0.e0;
      vec3 _t139F = [_t139C, _t139D, _t139E];
      real _t13A0 = prim •00CE<$[3]; $[3]; $[]> (_t139F, dPos1251);
      time1252 = prim /0055 (_t139B, _t13A0);
      face1253 = 3;
    }
  }
  real _t13A1 = -0.5e0;
  real _t13A2 = 0.e0;
  real _t13A3 = -0.1e1;
  real _t13A4 = 0.e0;
  vec3 _t13A5 = [_t13A2, _t13A3, _t13A4];
  real _t13A6 = prim •00CE<$[3]; $[3]; $[]> (_t13A5, refPos1250);
  real _t13A7 = prim -0026<$[]> (_t13A1, _t13A6);
  real _t13A8 = 0.e0;
  real _t13A9 = -0.1e1;
  real _t13AA = 0.e0;
  vec3 _t13AB = [_t13A8, _t13A9, _t13AA];
  real _t13AC = prim •00CE<$[3]; $[3]; $[]> (_t13AB, dPos1251);
  real _t13AD = prim /0055 (_t13A7, _t13AC);
  real _t13AE = -0.1e-15;
  bool _t13AF = prim >=007E (_t13AD, _t13AE);
  real _t13B0 = -0.5e0;
  real _t13B1 = 0.e0;
  real _t13B2 = -0.1e1;
  real _t13B3 = 0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, refPos1250);
  real _t13B6 = prim -0026<$[]> (_t13B0, _t13B5);
  real _t13B7 = 0.e0;
  real _t13B8 = -0.1e1;
  real _t13B9 = 0.e0;
  vec3 _t13BA = [_t13B7, _t13B8, _t13B9];
  real _t13BB = prim •00CE<$[3]; $[3]; $[]> (_t13BA, dPos1251);
  real _t13BC = prim /0055 (_t13B6, _t13BB);
  bool _t13BD = prim >0080 (time1252, _t13BC);
  real _t13BE = 0.e0;
  real _t13BF = -0.1e1;
  real _t13C0 = 0.e0;
  vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
  real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos1251);
  real _t13C3 = prim |()|00B5<$[]> (_t13C2);
  real _t13C4 = 0.1e-20;
  bool _t13C5 = prim >=007E (_t13C3, _t13C4);
  bool _t13C6 = prim $and01C4 (_t13BD, _t13C5);
  bool _t13C7 = prim $and01C4 (_t13AF, _t13C6);
  if _t13C7 {
    real _t13C8 = -0.5e0;
    real _t13C9 = 0.e0;
    real _t13CA = -0.1e1;
    real _t13CB = 0.e0;
    vec3 _t13CC = [_t13C9, _t13CA, _t13CB];
    real _t13CD = prim •00CE<$[3]; $[3]; $[]> (_t13CC, refPos1250);
    real _t13CE = prim -0026<$[]> (_t13C8, _t13CD);
    real _t13CF = 0.e0;
    real _t13D0 = -0.1e1;
    real _t13D1 = 0.e0;
    vec3 _t13D2 = [_t13CF, _t13D0, _t13D1];
    real _t13D3 = prim •00CE<$[3]; $[3]; $[]> (_t13D2, dPos1251);
    real _t13D4 = prim /0055 (_t13CE, _t13D3);
    vec3 _t13D5 = prim *0038<$[3]> (dPos1251, _t13D4);
    vec3 _t13D6 = prim +0017<$[3]> (refPos1250, _t13D5);
    real _t13D7 = -0.5e0;
    real _t13D8 = 0.e0;
    real _t13D9 = -0.1e1;
    real _t13DA = 0.e0;
    vec3 _t13DB = [_t13D8, _t13D9, _t13DA];
    real _t13DC = prim •00CE<$[3]; $[3]; $[]> (_t13DB, refPos1250);
    real _t13DD = prim -0026<$[]> (_t13D7, _t13DC);
    real _t13DE = 0.e0;
    real _t13DF = -0.1e1;
    real _t13E0 = 0.e0;
    vec3 _t13E1 = [_t13DE, _t13DF, _t13E0];
    real _t13E2 = prim •00CE<$[3]; $[3]; $[]> (_t13E1, dPos1251);
    real _t13E3 = prim /0055 (_t13DD, _t13E2);
    vec3 _t13E4 = prim *0038<$[3]> (dPos1251, _t13E3);
    vec3 _t13E5 = prim +0017<$[3]> (refPos1250, _t13E4);
    real _t13E6 = 0.1e-8;
    bool _t13E7 = extractFemItemN((_t13D6, _t13E5, _t13E6),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13E7 {
      real _t13E8 = -0.5e0;
      real _t13E9 = 0.e0;
      real _t13EA = -0.1e1;
      real _t13EB = 0.e0;
      vec3 _t13EC = [_t13E9, _t13EA, _t13EB];
      real _t13ED = prim •00CE<$[3]; $[3]; $[]> (_t13EC, refPos1250);
      real _t13EE = prim -0026<$[]> (_t13E8, _t13ED);
      real _t13EF = 0.e0;
      real _t13F0 = -0.1e1;
      real _t13F1 = 0.e0;
      vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
      real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos1251);
      time1252 = prim /0055 (_t13EE, _t13F3);
      face1253 = 4;
    }
  }
  real _t13F4 = -0.5e0;
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.e0;
  real _t13F7 = -0.e0;
  vec3 _t13F8 = [_t13F5, _t13F6, _t13F7];
  real _t13F9 = prim •00CE<$[3]; $[3]; $[]> (_t13F8, refPos1250);
  real _t13FA = prim -0026<$[]> (_t13F4, _t13F9);
  real _t13FB = 0.1e1;
  real _t13FC = 0.e0;
  real _t13FD = -0.e0;
  vec3 _t13FE = [_t13FB, _t13FC, _t13FD];
  real _t13FF = prim •00CE<$[3]; $[3]; $[]> (_t13FE, dPos1251);
  real _t1400 = prim /0055 (_t13FA, _t13FF);
  real _t1401 = -0.1e-15;
  bool _t1402 = prim >=007E (_t1400, _t1401);
  real _t1403 = -0.5e0;
  real _t1404 = 0.1e1;
  real _t1405 = 0.e0;
  real _t1406 = -0.e0;
  vec3 _t1407 = [_t1404, _t1405, _t1406];
  real _t1408 = prim •00CE<$[3]; $[3]; $[]> (_t1407, refPos1250);
  real _t1409 = prim -0026<$[]> (_t1403, _t1408);
  real _t140A = 0.1e1;
  real _t140B = 0.e0;
  real _t140C = -0.e0;
  vec3 _t140D = [_t140A, _t140B, _t140C];
  real _t140E = prim •00CE<$[3]; $[3]; $[]> (_t140D, dPos1251);
  real _t140F = prim /0055 (_t1409, _t140E);
  bool _t1410 = prim >0080 (time1252, _t140F);
  real _t1411 = 0.1e1;
  real _t1412 = 0.e0;
  real _t1413 = -0.e0;
  vec3 _t1414 = [_t1411, _t1412, _t1413];
  real _t1415 = prim •00CE<$[3]; $[3]; $[]> (_t1414, dPos1251);
  real _t1416 = prim |()|00B5<$[]> (_t1415);
  real _t1417 = 0.1e-20;
  bool _t1418 = prim >=007E (_t1416, _t1417);
  bool _t1419 = prim $and01C4 (_t1410, _t1418);
  bool _t141A = prim $and01C4 (_t1402, _t1419);
  if _t141A {
    real _t141B = -0.5e0;
    real _t141C = 0.1e1;
    real _t141D = 0.e0;
    real _t141E = -0.e0;
    vec3 _t141F = [_t141C, _t141D, _t141E];
    real _t1420 = prim •00CE<$[3]; $[3]; $[]> (_t141F, refPos1250);
    real _t1421 = prim -0026<$[]> (_t141B, _t1420);
    real _t1422 = 0.1e1;
    real _t1423 = 0.e0;
    real _t1424 = -0.e0;
    vec3 _t1425 = [_t1422, _t1423, _t1424];
    real _t1426 = prim •00CE<$[3]; $[3]; $[]> (_t1425, dPos1251);
    real _t1427 = prim /0055 (_t1421, _t1426);
    vec3 _t1428 = prim *0038<$[3]> (dPos1251, _t1427);
    vec3 _t1429 = prim +0017<$[3]> (refPos1250, _t1428);
    real _t142A = -0.5e0;
    real _t142B = 0.1e1;
    real _t142C = 0.e0;
    real _t142D = -0.e0;
    vec3 _t142E = [_t142B, _t142C, _t142D];
    real _t142F = prim •00CE<$[3]; $[3]; $[]> (_t142E, refPos1250);
    real _t1430 = prim -0026<$[]> (_t142A, _t142F);
    real _t1431 = 0.1e1;
    real _t1432 = 0.e0;
    real _t1433 = -0.e0;
    vec3 _t1434 = [_t1431, _t1432, _t1433];
    real _t1435 = prim •00CE<$[3]; $[3]; $[]> (_t1434, dPos1251);
    real _t1436 = prim /0055 (_t1430, _t1435);
    vec3 _t1437 = prim *0038<$[3]> (dPos1251, _t1436);
    vec3 _t1438 = prim +0017<$[3]> (refPos1250, _t1437);
    real _t1439 = 0.1e-8;
    bool _t143A = extractFemItemN((_t1429, _t1438, _t1439),InsideInsert(File=checkInside.in)(Mesh),);
    if _t143A {
      real _t143B = -0.5e0;
      real _t143C = 0.1e1;
      real _t143D = 0.e0;
      real _t143E = -0.e0;
      vec3 _t143F = [_t143C, _t143D, _t143E];
      real _t1440 = prim •00CE<$[3]; $[3]; $[]> (_t143F, refPos1250);
      real _t1441 = prim -0026<$[]> (_t143B, _t1440);
      real _t1442 = 0.1e1;
      real _t1443 = 0.e0;
      real _t1444 = -0.e0;
      vec3 _t1445 = [_t1442, _t1443, _t1444];
      real _t1446 = prim •00CE<$[3]; $[3]; $[]> (_t1445, dPos1251);
      time1252 = prim /0055 (_t1441, _t1446);
      face1253 = 5;
    }
  }
  int _t1447 = -1;
  bool _t1448 = prim !=0086 (face1253, _t1447);
  if _t1448 {
    real _t1449 = 0.e0;
    real _t144A = prim max0125 (time1252, _t1449);
    real _t144B = (real)face1253;
    vec2 _t144C = [_t144A, _t144B];
    return _t144C;
  } else {
    real _t144D = -0.1e1;
    real _t144E = -0.1e1;
    vec2 _t144F = [_t144D, _t144E];
    return _t144F;
  }
}
function vec2#0 _exit1450 (vec3 refPos1250, vec3 dPos1251, int i1451)
{
  real time1452 = +inf;
  int face1453 = -1;
  real faceTime1454 = -inf;
  real _t1455 = -0.5e0;
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.1e1;
  vec3 _t1459 = [_t1456, _t1457, _t1458];
  real _t145A = prim •00CE<$[3]; $[3]; $[]> (_t1459, refPos1250);
  real _t145B = prim -0026<$[]> (_t1455, _t145A);
  real _t145C = 0.e0;
  real _t145D = 0.e0;
  real _t145E = 0.1e1;
  vec3 _t145F = [_t145C, _t145D, _t145E];
  real _t1460 = prim •00CE<$[3]; $[3]; $[]> (_t145F, dPos1251);
  real _t1461 = prim /0055 (_t145B, _t1460);
  real _t1462 = -0.1e-15;
  bool _t1463 = prim >=007E (_t1461, _t1462);
  real _t1464 = -0.5e0;
  real _t1465 = 0.e0;
  real _t1466 = 0.e0;
  real _t1467 = 0.1e1;
  vec3 _t1468 = [_t1465, _t1466, _t1467];
  real _t1469 = prim •00CE<$[3]; $[3]; $[]> (_t1468, refPos1250);
  real _t146A = prim -0026<$[]> (_t1464, _t1469);
  real _t146B = 0.e0;
  real _t146C = 0.e0;
  real _t146D = 0.1e1;
  vec3 _t146E = [_t146B, _t146C, _t146D];
  real _t146F = prim •00CE<$[3]; $[3]; $[]> (_t146E, dPos1251);
  real _t1470 = prim /0055 (_t146A, _t146F);
  bool _t1471 = prim >0080 (time1452, _t1470);
  real _t1472 = 0.e0;
  real _t1473 = 0.e0;
  real _t1474 = 0.1e1;
  vec3 _t1475 = [_t1472, _t1473, _t1474];
  real _t1476 = prim •00CE<$[3]; $[3]; $[]> (_t1475, dPos1251);
  real _t1477 = prim |()|00B5<$[]> (_t1476);
  real _t1478 = 0.1e-20;
  bool _t1479 = prim >=007E (_t1477, _t1478);
  bool _t147A = prim $and01C4 (_t1471, _t1479);
  bool _t147B = prim $and01C4 (_t1463, _t147A);
  if _t147B {
    int _t147C = 0;
    bool _t147D = prim !=0086 (i1451, _t147C);
    if _t147D {
      real _t147E = -0.5e0;
      real _t147F = 0.e0;
      real _t1480 = 0.e0;
      real _t1481 = 0.1e1;
      vec3 _t1482 = [_t147F, _t1480, _t1481];
      real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos1250);
      real _t1484 = prim -0026<$[]> (_t147E, _t1483);
      real _t1485 = 0.e0;
      real _t1486 = 0.e0;
      real _t1487 = 0.1e1;
      vec3 _t1488 = [_t1485, _t1486, _t1487];
      real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos1251);
      time1452 = prim /0055 (_t1484, _t1489);
      face1453 = 0;
    } else {
      real _t148A = -0.5e0;
      real _t148B = 0.e0;
      real _t148C = 0.e0;
      real _t148D = 0.1e1;
      vec3 _t148E = [_t148B, _t148C, _t148D];
      real _t148F = prim •00CE<$[3]; $[3]; $[]> (_t148E, refPos1250);
      real _t1490 = prim -0026<$[]> (_t148A, _t148F);
      real _t1491 = 0.e0;
      real _t1492 = 0.e0;
      real _t1493 = 0.1e1;
      vec3 _t1494 = [_t1491, _t1492, _t1493];
      real _t1495 = prim •00CE<$[3]; $[3]; $[]> (_t1494, dPos1251);
      faceTime1454 = prim /0055 (_t1490, _t1495);
    }
  }
  real _t1496 = 0.5e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = 0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos1250);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = 0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos1251);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-15;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.5e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = 0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos1250);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = 0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos1251);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time1452, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = 0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos1251);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-20;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 1;
    bool _t14BE = prim !=0086 (i1451, _t14BD);
    if _t14BE {
      real _t14BF = 0.5e0;
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.1e1;
      vec3 _t14C3 = [_t14C0, _t14C1, _t14C2];
      real _t14C4 = prim •00CE<$[3]; $[3]; $[]> (_t14C3, refPos1250);
      real _t14C5 = prim -0026<$[]> (_t14BF, _t14C4);
      real _t14C6 = 0.e0;
      real _t14C7 = 0.e0;
      real _t14C8 = 0.1e1;
      vec3 _t14C9 = [_t14C6, _t14C7, _t14C8];
      real _t14CA = prim •00CE<$[3]; $[3]; $[]> (_t14C9, dPos1251);
      time1452 = prim /0055 (_t14C5, _t14CA);
      face1453 = 1;
    } else {
      real _t14CB = 0.5e0;
      real _t14CC = 0.e0;
      real _t14CD = 0.e0;
      real _t14CE = 0.1e1;
      vec3 _t14CF = [_t14CC, _t14CD, _t14CE];
      real _t14D0 = prim •00CE<$[3]; $[3]; $[]> (_t14CF, refPos1250);
      real _t14D1 = prim -0026<$[]> (_t14CB, _t14D0);
      real _t14D2 = 0.e0;
      real _t14D3 = 0.e0;
      real _t14D4 = 0.1e1;
      vec3 _t14D5 = [_t14D2, _t14D3, _t14D4];
      real _t14D6 = prim •00CE<$[3]; $[3]; $[]> (_t14D5, dPos1251);
      faceTime1454 = prim /0055 (_t14D1, _t14D6);
    }
  }
  real _t14D7 = -0.5e0;
  real _t14D8 = 0.e0;
  real _t14D9 = 0.1e1;
  real _t14DA = 0.e0;
  vec3 _t14DB = [_t14D8, _t14D9, _t14DA];
  real _t14DC = prim •00CE<$[3]; $[3]; $[]> (_t14DB, refPos1250);
  real _t14DD = prim -0026<$[]> (_t14D7, _t14DC);
  real _t14DE = 0.e0;
  real _t14DF = 0.1e1;
  real _t14E0 = 0.e0;
  vec3 _t14E1 = [_t14DE, _t14DF, _t14E0];
  real _t14E2 = prim •00CE<$[3]; $[3]; $[]> (_t14E1, dPos1251);
  real _t14E3 = prim /0055 (_t14DD, _t14E2);
  real _t14E4 = -0.1e-15;
  bool _t14E5 = prim >=007E (_t14E3, _t14E4);
  real _t14E6 = -0.5e0;
  real _t14E7 = 0.e0;
  real _t14E8 = 0.1e1;
  real _t14E9 = 0.e0;
  vec3 _t14EA = [_t14E7, _t14E8, _t14E9];
  real _t14EB = prim •00CE<$[3]; $[3]; $[]> (_t14EA, refPos1250);
  real _t14EC = prim -0026<$[]> (_t14E6, _t14EB);
  real _t14ED = 0.e0;
  real _t14EE = 0.1e1;
  real _t14EF = 0.e0;
  vec3 _t14F0 = [_t14ED, _t14EE, _t14EF];
  real _t14F1 = prim •00CE<$[3]; $[3]; $[]> (_t14F0, dPos1251);
  real _t14F2 = prim /0055 (_t14EC, _t14F1);
  bool _t14F3 = prim >0080 (time1452, _t14F2);
  real _t14F4 = 0.e0;
  real _t14F5 = 0.1e1;
  real _t14F6 = 0.e0;
  vec3 _t14F7 = [_t14F4, _t14F5, _t14F6];
  real _t14F8 = prim •00CE<$[3]; $[3]; $[]> (_t14F7, dPos1251);
  real _t14F9 = prim |()|00B5<$[]> (_t14F8);
  real _t14FA = 0.1e-20;
  bool _t14FB = prim >=007E (_t14F9, _t14FA);
  bool _t14FC = prim $and01C4 (_t14F3, _t14FB);
  bool _t14FD = prim $and01C4 (_t14E5, _t14FC);
  if _t14FD {
    int _t14FE = 2;
    bool _t14FF = prim !=0086 (i1451, _t14FE);
    if _t14FF {
      real _t1500 = -0.5e0;
      real _t1501 = 0.e0;
      real _t1502 = 0.1e1;
      real _t1503 = 0.e0;
      vec3 _t1504 = [_t1501, _t1502, _t1503];
      real _t1505 = prim •00CE<$[3]; $[3]; $[]> (_t1504, refPos1250);
      real _t1506 = prim -0026<$[]> (_t1500, _t1505);
      real _t1507 = 0.e0;
      real _t1508 = 0.1e1;
      real _t1509 = 0.e0;
      vec3 _t150A = [_t1507, _t1508, _t1509];
      real _t150B = prim •00CE<$[3]; $[3]; $[]> (_t150A, dPos1251);
      time1452 = prim /0055 (_t1506, _t150B);
      face1453 = 2;
    } else {
      real _t150C = -0.5e0;
      real _t150D = 0.e0;
      real _t150E = 0.1e1;
      real _t150F = 0.e0;
      vec3 _t1510 = [_t150D, _t150E, _t150F];
      real _t1511 = prim •00CE<$[3]; $[3]; $[]> (_t1510, refPos1250);
      real _t1512 = prim -0026<$[]> (_t150C, _t1511);
      real _t1513 = 0.e0;
      real _t1514 = 0.1e1;
      real _t1515 = 0.e0;
      vec3 _t1516 = [_t1513, _t1514, _t1515];
      real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, dPos1251);
      faceTime1454 = prim /0055 (_t1512, _t1517);
    }
  }
  real _t1518 = -0.5e0;
  real _t1519 = -0.1e1;
  real _t151A = 0.e0;
  real _t151B = 0.e0;
  vec3 _t151C = [_t1519, _t151A, _t151B];
  real _t151D = prim •00CE<$[3]; $[3]; $[]> (_t151C, refPos1250);
  real _t151E = prim -0026<$[]> (_t1518, _t151D);
  real _t151F = -0.1e1;
  real _t1520 = 0.e0;
  real _t1521 = 0.e0;
  vec3 _t1522 = [_t151F, _t1520, _t1521];
  real _t1523 = prim •00CE<$[3]; $[3]; $[]> (_t1522, dPos1251);
  real _t1524 = prim /0055 (_t151E, _t1523);
  real _t1525 = -0.1e-15;
  bool _t1526 = prim >=007E (_t1524, _t1525);
  real _t1527 = -0.5e0;
  real _t1528 = -0.1e1;
  real _t1529 = 0.e0;
  real _t152A = 0.e0;
  vec3 _t152B = [_t1528, _t1529, _t152A];
  real _t152C = prim •00CE<$[3]; $[3]; $[]> (_t152B, refPos1250);
  real _t152D = prim -0026<$[]> (_t1527, _t152C);
  real _t152E = -0.1e1;
  real _t152F = 0.e0;
  real _t1530 = 0.e0;
  vec3 _t1531 = [_t152E, _t152F, _t1530];
  real _t1532 = prim •00CE<$[3]; $[3]; $[]> (_t1531, dPos1251);
  real _t1533 = prim /0055 (_t152D, _t1532);
  bool _t1534 = prim >0080 (time1452, _t1533);
  real _t1535 = -0.1e1;
  real _t1536 = 0.e0;
  real _t1537 = 0.e0;
  vec3 _t1538 = [_t1535, _t1536, _t1537];
  real _t1539 = prim •00CE<$[3]; $[3]; $[]> (_t1538, dPos1251);
  real _t153A = prim |()|00B5<$[]> (_t1539);
  real _t153B = 0.1e-20;
  bool _t153C = prim >=007E (_t153A, _t153B);
  bool _t153D = prim $and01C4 (_t1534, _t153C);
  bool _t153E = prim $and01C4 (_t1526, _t153D);
  if _t153E {
    int _t153F = 3;
    bool _t1540 = prim !=0086 (i1451, _t153F);
    if _t1540 {
      real _t1541 = -0.5e0;
      real _t1542 = -0.1e1;
      real _t1543 = 0.e0;
      real _t1544 = 0.e0;
      vec3 _t1545 = [_t1542, _t1543, _t1544];
      real _t1546 = prim •00CE<$[3]; $[3]; $[]> (_t1545, refPos1250);
      real _t1547 = prim -0026<$[]> (_t1541, _t1546);
      real _t1548 = -0.1e1;
      real _t1549 = 0.e0;
      real _t154A = 0.e0;
      vec3 _t154B = [_t1548, _t1549, _t154A];
      real _t154C = prim •00CE<$[3]; $[3]; $[]> (_t154B, dPos1251);
      time1452 = prim /0055 (_t1547, _t154C);
      face1453 = 3;
    } else {
      real _t154D = -0.5e0;
      real _t154E = -0.1e1;
      real _t154F = 0.e0;
      real _t1550 = 0.e0;
      vec3 _t1551 = [_t154E, _t154F, _t1550];
      real _t1552 = prim •00CE<$[3]; $[3]; $[]> (_t1551, refPos1250);
      real _t1553 = prim -0026<$[]> (_t154D, _t1552);
      real _t1554 = -0.1e1;
      real _t1555 = 0.e0;
      real _t1556 = 0.e0;
      vec3 _t1557 = [_t1554, _t1555, _t1556];
      real _t1558 = prim •00CE<$[3]; $[3]; $[]> (_t1557, dPos1251);
      faceTime1454 = prim /0055 (_t1553, _t1558);
    }
  }
  real _t1559 = -0.5e0;
  real _t155A = 0.e0;
  real _t155B = -0.1e1;
  real _t155C = 0.e0;
  vec3 _t155D = [_t155A, _t155B, _t155C];
  real _t155E = prim •00CE<$[3]; $[3]; $[]> (_t155D, refPos1250);
  real _t155F = prim -0026<$[]> (_t1559, _t155E);
  real _t1560 = 0.e0;
  real _t1561 = -0.1e1;
  real _t1562 = 0.e0;
  vec3 _t1563 = [_t1560, _t1561, _t1562];
  real _t1564 = prim •00CE<$[3]; $[3]; $[]> (_t1563, dPos1251);
  real _t1565 = prim /0055 (_t155F, _t1564);
  real _t1566 = -0.1e-15;
  bool _t1567 = prim >=007E (_t1565, _t1566);
  real _t1568 = -0.5e0;
  real _t1569 = 0.e0;
  real _t156A = -0.1e1;
  real _t156B = 0.e0;
  vec3 _t156C = [_t1569, _t156A, _t156B];
  real _t156D = prim •00CE<$[3]; $[3]; $[]> (_t156C, refPos1250);
  real _t156E = prim -0026<$[]> (_t1568, _t156D);
  real _t156F = 0.e0;
  real _t1570 = -0.1e1;
  real _t1571 = 0.e0;
  vec3 _t1572 = [_t156F, _t1570, _t1571];
  real _t1573 = prim •00CE<$[3]; $[3]; $[]> (_t1572, dPos1251);
  real _t1574 = prim /0055 (_t156E, _t1573);
  bool _t1575 = prim >0080 (time1452, _t1574);
  real _t1576 = 0.e0;
  real _t1577 = -0.1e1;
  real _t1578 = 0.e0;
  vec3 _t1579 = [_t1576, _t1577, _t1578];
  real _t157A = prim •00CE<$[3]; $[3]; $[]> (_t1579, dPos1251);
  real _t157B = prim |()|00B5<$[]> (_t157A);
  real _t157C = 0.1e-20;
  bool _t157D = prim >=007E (_t157B, _t157C);
  bool _t157E = prim $and01C4 (_t1575, _t157D);
  bool _t157F = prim $and01C4 (_t1567, _t157E);
  if _t157F {
    int _t1580 = 4;
    bool _t1581 = prim !=0086 (i1451, _t1580);
    if _t1581 {
      real _t1582 = -0.5e0;
      real _t1583 = 0.e0;
      real _t1584 = -0.1e1;
      real _t1585 = 0.e0;
      vec3 _t1586 = [_t1583, _t1584, _t1585];
      real _t1587 = prim •00CE<$[3]; $[3]; $[]> (_t1586, refPos1250);
      real _t1588 = prim -0026<$[]> (_t1582, _t1587);
      real _t1589 = 0.e0;
      real _t158A = -0.1e1;
      real _t158B = 0.e0;
      vec3 _t158C = [_t1589, _t158A, _t158B];
      real _t158D = prim •00CE<$[3]; $[3]; $[]> (_t158C, dPos1251);
      time1452 = prim /0055 (_t1588, _t158D);
      face1453 = 4;
    } else {
      real _t158E = -0.5e0;
      real _t158F = 0.e0;
      real _t1590 = -0.1e1;
      real _t1591 = 0.e0;
      vec3 _t1592 = [_t158F, _t1590, _t1591];
      real _t1593 = prim •00CE<$[3]; $[3]; $[]> (_t1592, refPos1250);
      real _t1594 = prim -0026<$[]> (_t158E, _t1593);
      real _t1595 = 0.e0;
      real _t1596 = -0.1e1;
      real _t1597 = 0.e0;
      vec3 _t1598 = [_t1595, _t1596, _t1597];
      real _t1599 = prim •00CE<$[3]; $[3]; $[]> (_t1598, dPos1251);
      faceTime1454 = prim /0055 (_t1594, _t1599);
    }
  }
  real _t159A = -0.5e0;
  real _t159B = 0.1e1;
  real _t159C = 0.e0;
  real _t159D = -0.e0;
  vec3 _t159E = [_t159B, _t159C, _t159D];
  real _t159F = prim •00CE<$[3]; $[3]; $[]> (_t159E, refPos1250);
  real _t15A0 = prim -0026<$[]> (_t159A, _t159F);
  real _t15A1 = 0.1e1;
  real _t15A2 = 0.e0;
  real _t15A3 = -0.e0;
  vec3 _t15A4 = [_t15A1, _t15A2, _t15A3];
  real _t15A5 = prim •00CE<$[3]; $[3]; $[]> (_t15A4, dPos1251);
  real _t15A6 = prim /0055 (_t15A0, _t15A5);
  real _t15A7 = -0.1e-15;
  bool _t15A8 = prim >=007E (_t15A6, _t15A7);
  real _t15A9 = -0.5e0;
  real _t15AA = 0.1e1;
  real _t15AB = 0.e0;
  real _t15AC = -0.e0;
  vec3 _t15AD = [_t15AA, _t15AB, _t15AC];
  real _t15AE = prim •00CE<$[3]; $[3]; $[]> (_t15AD, refPos1250);
  real _t15AF = prim -0026<$[]> (_t15A9, _t15AE);
  real _t15B0 = 0.1e1;
  real _t15B1 = 0.e0;
  real _t15B2 = -0.e0;
  vec3 _t15B3 = [_t15B0, _t15B1, _t15B2];
  real _t15B4 = prim •00CE<$[3]; $[3]; $[]> (_t15B3, dPos1251);
  real _t15B5 = prim /0055 (_t15AF, _t15B4);
  bool _t15B6 = prim >0080 (time1452, _t15B5);
  real _t15B7 = 0.1e1;
  real _t15B8 = 0.e0;
  real _t15B9 = -0.e0;
  vec3 _t15BA = [_t15B7, _t15B8, _t15B9];
  real _t15BB = prim •00CE<$[3]; $[3]; $[]> (_t15BA, dPos1251);
  real _t15BC = prim |()|00B5<$[]> (_t15BB);
  real _t15BD = 0.1e-20;
  bool _t15BE = prim >=007E (_t15BC, _t15BD);
  bool _t15BF = prim $and01C4 (_t15B6, _t15BE);
  bool _t15C0 = prim $and01C4 (_t15A8, _t15BF);
  if _t15C0 {
    int _t15C1 = 5;
    bool _t15C2 = prim !=0086 (i1451, _t15C1);
    if _t15C2 {
      real _t15C3 = -0.5e0;
      real _t15C4 = 0.1e1;
      real _t15C5 = 0.e0;
      real _t15C6 = -0.e0;
      vec3 _t15C7 = [_t15C4, _t15C5, _t15C6];
      real _t15C8 = prim •00CE<$[3]; $[3]; $[]> (_t15C7, refPos1250);
      real _t15C9 = prim -0026<$[]> (_t15C3, _t15C8);
      real _t15CA = 0.1e1;
      real _t15CB = 0.e0;
      real _t15CC = -0.e0;
      vec3 _t15CD = [_t15CA, _t15CB, _t15CC];
      real _t15CE = prim •00CE<$[3]; $[3]; $[]> (_t15CD, dPos1251);
      time1452 = prim /0055 (_t15C9, _t15CE);
      face1453 = 5;
    } else {
      real _t15CF = -0.5e0;
      real _t15D0 = 0.1e1;
      real _t15D1 = 0.e0;
      real _t15D2 = -0.e0;
      vec3 _t15D3 = [_t15D0, _t15D1, _t15D2];
      real _t15D4 = prim •00CE<$[3]; $[3]; $[]> (_t15D3, refPos1250);
      real _t15D5 = prim -0026<$[]> (_t15CF, _t15D4);
      real _t15D6 = 0.1e1;
      real _t15D7 = 0.e0;
      real _t15D8 = -0.e0;
      vec3 _t15D9 = [_t15D6, _t15D7, _t15D8];
      real _t15DA = prim •00CE<$[3]; $[3]; $[]> (_t15D9, dPos1251);
      faceTime1454 = prim /0055 (_t15D5, _t15DA);
    }
  }
  int _t15DB = -1;
  bool _t15DC = prim !=0086 (face1453, _t15DB);
  if _t15DC {
    real _t15DD = 0.e0;
    real _t15DE = prim max0125 (time1452, _t15DD);
    real _t15DF = (real)face1453;
    vec2 _t15E0 = [_t15DE, _t15DF];
    return _t15E0;
  } else {
    real _t15E1 = -inf;
    bool _t15E2 = prim ==0084 (_t15E1, faceTime1454);
    if _t15E2 {
      real _t15E3 = -0.1e1;
      real _t15E4 = -0.1e1;
      vec2 _t15E5 = [_t15E3, _t15E4];
      return _t15E5;
    } else {
      real _t15E6 = (real)i1451;
      vec2 _t15E7 = [faceTime1454, _t15E6];
      return _t15E7;
    }
  }
}
function Femdata: Mesh#0 domain15E8 (Femdata: Space arg015E9)
{
  Femdata: Mesh _t15EA = extractFem(arg015E9, Mesh);
  return _t15EA;
}
function Femdata: Space#0 space15EB (Femdata: FemFunc arg015EC)
{
  Femdata: Space _t15ED = extractFem(arg015EC, Space);
  return _t15ED;
}
function Femdata: FuncCell#3 funcCell15EE (Femdata: FemFunc arg015EF, Femdata: MeshCell arg115F0)
{
  int _t15F1 = extractFemItem(CellIndex(MeshCell), int, arg115F0);
  Femdata: FuncCell _t15F2 = loadFem(FuncCell, arg015EF, _t15F1);
  return _t15F2;
}
function real#1 atent161B (real a0161C, real d161D)
{
  real _t161E = 0.e0;
  real _t161F = 0.1e1;
  real _t1620 = 0.15e1;
  real _t1621 = 0.1e1;
  real _t1622 = prim |()|00B5<$[]> (d161D);
  real _t1623 = prim /0055 (_t1622, thick0525);
  real _t1624 = prim -0026<$[]> (_t1621, _t1623);
  real _t1625 = prim *0034 (_t1620, _t1624);
  real _t1626 = prim clamp0094<$[]> (_t161E, _t161F, _t1625);
  real _t1627 = prim *0034 (a0161C, _t1626);
  return _t1627;
}
function vec3#1 fStep1628 (vec3 x1629)
{
  bool _t162A = prim !00BC (analytical053F);
  if _t162A {
    field(3)[3] _t162B = prim ∇00A8<#∞; %3> (F15FB);
    field(3)[3,3] _t162C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t162B);
    tensor[3,3] _t162D = prim @00A5<#∞; %3; $[3,3]> (_t162C, x1629);
    vec3[3] E162E = prim evecs00A0 (_t162D);
    field(3)[3] _t162F = prim ∇00A8<#∞; %3> (F15FB);
    field(3)[3,3] _t1630 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t162F);
    tensor[3,3] _t1631 = prim @00A5<#∞; %3; $[3,3]> (_t1630, x1629);
    real[3] L1632 = prim evals009F (_t1631);
    int _t1633 = 2;
    vec3 _t1634 = prim $sub01C0<vec3; %3> (E162E, _t1633);
    int _t1635 = 2;
    vec3 _t1636 = prim $sub01C0<vec3; %3> (E162E, _t1635);
    tensor[3,3] _t1637 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1634, _t1636);
    int _t1638 = 2;
    real _t1639 = prim $sub01C0<real; %3> (L1632, _t1638);
    tensor[3,3] _t163A = prim /0057<$[3,3]> (_t1637, _t1639);
    int _t163B = 1;
    vec3 _t163C = prim $sub01C0<vec3; %3> (E162E, _t163B);
    int _t163D = 1;
    vec3 _t163E = prim $sub01C0<vec3; %3> (E162E, _t163D);
    tensor[3,3] _t163F = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t163C, _t163E);
    int _t1640 = 1;
    real _t1641 = prim $sub01C0<real; %3> (L1632, _t1640);
    tensor[3,3] _t1642 = prim /0057<$[3,3]> (_t163F, _t1641);
    tensor[3,3] _t1643 = prim +0017<$[3,3]> (_t163A, _t1642);
    tensor[3,3] _t1644 = prim unary -008B<$[3,3]> (_t1643);
    field(3)[3] _t1645 = prim ∇00A8<#∞; %3> (F15FB);
    vec3 _t1646 = prim @00A5<#∞; %3; $[3]> (_t1645, x1629);
    vec3 _t1647 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1644, _t1646);
    return _t1647;
  } else {
    tensor[3,3] _t1648 = prim transpose0145<%3; %3> (rot0542);
    int _t1649 = -1;
    real _t164A = (real)_t1649;
    int _t164B = -2;
    real _t164C = (real)_t164B;
    int _t164D = -3;
    real _t164E = (real)_t164D;
    vec3 _t164F = [_t164A, _t164C, _t164E];
    vec3 _t1650 = prim •00CE<$[3,3]; $[3]; $[3]> (rot0542, x1629);
    vec3 _t1651 = prim modulate0129<%3> (_t164F, _t1650);
    vec3 Gv1652 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1648, _t1651);
    tensor[3,3] _t1653 = prim transpose0145<%3; %3> (rot0542);
    real _t1654 = -0.1e1;
    real _t1655 = 0.e0;
    real _t1656 = 0.e0;
    vec3 _t1657 = [_t1654, _t1655, _t1656];
    real _t1658 = 0.e0;
    real _t1659 = -0.2e1;
    real _t165A = 0.e0;
    vec3 _t165B = [_t1658, _t1659, _t165A];
    real _t165C = 0.e0;
    real _t165D = 0.e0;
    real _t165E = -0.3e1;
    vec3 _t165F = [_t165C, _t165D, _t165E];
    tensor[3,3] _t1660 = [_t1657, _t165B, _t165F];
    tensor[3,3] _t1661 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1653, _t1660);
    tensor[3,3] H1662 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1661, rot0542);
    vec3[3] E1663 = prim evecs00A0 (H1662);
    real[3] L1664 = prim evals009F (H1662);
    int _t1665 = 2;
    vec3 _t1666 = prim $sub01C0<vec3; %3> (E1663, _t1665);
    int _t1667 = 2;
    vec3 _t1668 = prim $sub01C0<vec3; %3> (E1663, _t1667);
    tensor[3,3] _t1669 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1666, _t1668);
    int _t166A = 2;
    real _t166B = prim $sub01C0<real; %3> (L1664, _t166A);
    tensor[3,3] _t166C = prim /0057<$[3,3]> (_t1669, _t166B);
    int _t166D = 1;
    vec3 _t166E = prim $sub01C0<vec3; %3> (E1663, _t166D);
    int _t166F = 1;
    vec3 _t1670 = prim $sub01C0<vec3; %3> (E1663, _t166F);
    tensor[3,3] _t1671 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t166E, _t1670);
    int _t1672 = 1;
    real _t1673 = prim $sub01C0<real; %3> (L1664, _t1672);
    tensor[3,3] _t1674 = prim /0057<$[3,3]> (_t1671, _t1673);
    tensor[3,3] _t1675 = prim +0017<$[3,3]> (_t166C, _t1674);
    tensor[3,3] _t1676 = prim unary -008B<$[3,3]> (_t1675);
    vec3 _t1677 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1676, Gv1652);
    return _t1677;
  }
}
function real#1 fStrength1678 (vec3 x1679)
{
  field(3)[3] _t167A = prim ∇00A8<#∞; %3> (F15FB);
  field(3)[3,3] _t167B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t167A);
  tensor[3,3] _t167C = prim @00A5<#∞; %3; $[3,3]> (_t167B, x1679);
  real[3] _t167D = prim evals009F (_t167C);
  int _t167E = 1;
  real _t167F = prim $sub01C0<real; %3> (_t167D, _t167E);
  real _t1680 = prim unary -008B<$[]> (_t167F);
  field(3)[3] _t1681 = prim ∇00A8<#∞; %3> (F15FB);
  vec3 _t1682 = prim @00A5<#∞; %3; $[3]> (_t1681, x1679);
  real _t1683 = prim |()|00B5<$[3]> (_t1682);
  real _t1684 = prim +0017<$[]> (fBias0528, _t1683);
  real _t1685 = prim /0055 (_t1680, _t1684);
  return _t1685;
}
function bool#1 fTest1686 (vec3 x1687)
{
  bool _t1688 = true;
  return _t1688;
}
function real#1 fMask1689 (vec3 x168A)
{
  real _t168B = 0.1e1;
  return _t168B;
}
function bool#1 posTest168C (vec3 x168D)
{
  bool _t168E;
  Femdata: RefCell _t168F = func refcell0589 (block04FD);
  real _t1690 = 0.1e-8;
  bool _t1691 = extractFemItemN((_t168F, x168D, _t1690),InsideInsert(File=checkInside.in)(Mesh),);
  if _t1691 {
    bool _t1692;
    real _t1693 = func fStrength1678 (x168D);
    bool _t1694 = prim >0080 (_t1693, fStrTh0526);
    if _t1694 {
      bool _t1695;
      real _t1696 = func fMask1689 (x168D);
      bool _t1697 = prim >=007E (_t1696, fMaskTh0527);
      if _t1697 {
        _t1695 = func fTest1686 (x168D);
      } else {
        _t1695 = false;
      }
      _t1692 = _t1695;
    } else {
      _t1692 = false;
    }
    _t168E = _t1692;
  } else {
    _t168E = false;
  }
  return _t168E;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115F3 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15F4 = func funcCell15EE (U050B, c115F3);
  Femdata: FemFunc _t15F5 = extractFem(_t15F4, FemFunc);
  Femdata: FuncCell _t15F6 = func funcCell15EE (U050B, c115F3);
  Femdata: FemFunc _t15F7 = extractFem(_t15F6, FemFunc);
  Femdata: Space _t15F8 = extractFem(_t15F7, Space);
  Femdata: FuncCell _t15F9 = func funcCell15EE (U050B, c115F3);
  int _t15FA = extractFemItem(CellIndex(FuncCell), int, _t15F9);
  F15FB = femField(_t15F5,_t15FA,field(3)[],refField,);
  kernel _t15FC = tent;
  IMAGE1D<double[3]> img15FD = clamp(cmap050F);
  CM15FE = prim ⊛0074<#0; %1; $[3]> (_t15FC, img15FD);
  C15FF = F15FB;
  vec3 _t1600 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN1601 = prim normalize0137<$[3]> (_t1600);
  vec3 _t1602 = prim ×00BE (camN1601, camUp0518);
  camU1603 = prim normalize0137<$[3]> (_t1602);
  camV1604 = prim ×00BE (camN1601, camU1603);
  vec3 _t1605 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist1606 = prim |()|00B5<$[3]> (_t1605);
  real _t1607 = 0.314159265358979323846264338327950288e1;
  real _t1608 = prim *0034 (camFOV051E, _t1607);
  real _t1609 = 0.36e3;
  real _t160A = prim /0055 (_t1608, _t1609);
  real _t160B = prim tan0179 (_t160A);
  camVmax160C = prim *0034 (_t160B, camDist1606);
  real _t160D = (real)iresU0520;
  real _t160E = prim *0034 (camVmax160C, _t160D);
  real _t160F = (real)iresV0521;
  camUmax1610 = prim /0055 (_t160E, _t160F);
  camNearVsp1611 = prim +0017<$[]> (camNear051C, camDist1606);
  camFarVsp1612 = prim +0017<$[]> (camFar051D, camDist1606);
  tensor[3,3] _t1613 = [camU1603, camV1604, camN1601];
  tensor[3,3] _t1614 = prim transpose0145<%3; %3> (_t1613);
  vec3 _t1615 = prim normalize0137<$[3]> (litdir0538);
  litwsp1616 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1614, _t1615);
}
strand ray (int ui1698, int vi1699) {
  real rayU169A;
  real rayV16A1;
  real rayN16A8;
  vec3 UV16A9;
  vec3 rayOrig16AC;
  vec3 rayVec16B1;
  real alphaFix16B6;
  vec3 eyeDir16B9;
  real phKa16BB;
  real phKd16BC;
  real phKs16BD;
  real phSp16BE;
  output vec4 rgba16BF;
  output real raw16C4;
  vec3 rgb16C5;
  real transp16C9;
  {
    real _t169B = prim unary -008B<$[]> (camUmax1610);
    real _t169C = -0.5e0;
    real _t169D = (real)ui1698;
    real _t169E = (real)iresU0520;
    real _t169F = 0.5e0;
    real _t16A0 = prim -0026<$[]> (_t169E, _t169F);
    rayU169A = prim lerp0098<$[]> (_t169B, camUmax1610, _t169C, _t169D, _t16A0);
    real _t16A2 = prim unary -008B<$[]> (camVmax160C);
    real _t16A3 = -0.5e0;
    real _t16A4 = (real)vi1699;
    real _t16A5 = (real)iresV0521;
    real _t16A6 = 0.5e0;
    real _t16A7 = prim -0026<$[]> (_t16A5, _t16A6);
    rayV16A1 = prim lerp0098<$[]> (_t16A2, camVmax160C, _t16A3, _t16A4, _t16A7);
    rayN16A8 = camNearVsp1611;
    vec3 _t16AA = prim *0036<$[3]> (rayU169A, camU1603);
    vec3 _t16AB = prim *0036<$[3]> (rayV16A1, camV1604);
    UV16A9 = prim +0017<$[3]> (_t16AA, _t16AB);
    vec3 _t16AD;
    if camOrtho051F {
      _t16AD = UV16A9;
    } else {
      real _t16AE = 0.e0;
      real _t16AF = 0.e0;
      real _t16B0 = 0.e0;
      _t16AD = [_t16AE, _t16AF, _t16B0];
    }
    rayOrig16AC = prim +0017<$[3]> (camEye0510, _t16AD);
    vec3 _t16B2;
    if camOrtho051F {
      real _t16B3 = 0.e0;
      real _t16B4 = 0.e0;
      real _t16B5 = 0.e0;
      _t16B2 = [_t16B3, _t16B4, _t16B5];
    } else {
      _t16B2 = prim /0057<$[3]> (UV16A9, camDist1606);
    }
    rayVec16B1 = prim +0017<$[3]> (camN1601, _t16B2);
    real _t16B7 = prim |()|00B5<$[3]> (rayVec16B1);
    real _t16B8 = prim *0034 (_t16B7, rayStep0522);
    alphaFix16B6 = prim /0055 (_t16B8, refStep0523);
    vec3 _t16BA = prim normalize0137<$[3]> (rayVec16B1);
    eyeDir16B9 = prim unary -008B<$[3]> (_t16BA);
    phKa16BB = phong052B[0];
    phKd16BC = phong052B[1];
    phKs16BD = phong052B[2];
    phSp16BE = phong052B[3];
    real _t16C0 = 0.e0;
    real _t16C1 = 0.e0;
    real _t16C2 = 0.e0;
    real _t16C3 = 0.e0;
    rgba16BF = [_t16C0, _t16C1, _t16C2, _t16C3];
    raw16C4 = 0.e0;
    real _t16C6 = 0.e0;
    real _t16C7 = 0.e0;
    real _t16C8 = 0.e0;
    rgb16C5 = [_t16C6, _t16C7, _t16C8];
    transp16C9 = 0.1e1;
  }
  update
  {
    rayN16A8 = prim +0017<$[]> (rayN16A8, rayStep0522);
    bool _t16CA = prim >0080 (rayN16A8, camFarVsp1612);
    if _t16CA {
      stabilize;
    }
    vec3 _t16CB = prim *0036<$[3]> (rayN16A8, rayVec16B1);
    vec3 pos16CC = prim +0017<$[3]> (rayOrig16AC, _t16CB);
    bool _t16CD = func posTest168C (pos16CC);
    bool _t16CE = prim !00BC (_t16CD);
    if _t16CE {
      continue;
    }
    vec3 step16CF = func fStep1628 (pos16CC);
    real _t16D0 = prim |()|00B5<$[3]> (step16CF);
    real aa16D1 = func atent161B (maxAlpha0529, _t16D0);
    real _t16D2 = 0.e0;
    bool _t16D3 = prim ==0084 (aa16D1, _t16D2);
    if _t16D3 {
      continue;
    }
    real _t16D4 = 0.1e1;
    real _t16D5 = 0.1e1;
    real _t16D6 = prim -0026<$[]> (_t16D5, aa16D1);
    real _t16D7 = prim ^0069 (_t16D6, alphaFix16B6);
    aa16D1 = prim -0026<$[]> (_t16D4, _t16D7);
    vec3 _t16D8 = prim normalize0137<$[3]> (step16CF);
    vec3 snorm16D9 = prim unary -008B<$[3]> (_t16D8);
    real _t16DA = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, litwsp1616);
    int _t16DB = 2;
    real dcomp16DC = prim ^0068 (_t16DA, _t16DB);
    real scomp16DD = 0.e0;
    real _t16DE = 0.e0;
    bool _t16DF = prim !=0088 (phKs16BD, _t16DE);
    if _t16DF {
      vec3 _t16E0 = prim +0017<$[3]> (eyeDir16B9, litwsp1616);
      vec3 _t16E1 = prim normalize0137<$[3]> (_t16E0);
      real _t16E2 = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, _t16E1);
      real _t16E3 = prim |()|00B5<$[]> (_t16E2);
      scomp16DD = prim ^0069 (_t16E3, phSp16BE);
    }
    vec3 dcol16E4 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1611, rayN16A8, camFarVsp1612);
    real cmin16E5 = cminmax053C[0];
    real cmax16E6 = cminmax053C[1];
    real _t16E7 = 0.1e1;
    real _t16E8 = 0.1e1;
    real _t16E9 = 0.1e1;
    vec3 mcol16EA = [_t16E7, _t16E8, _t16E9];
    bool _t16EB = prim !=0088 (cmin16E5, cmax16E6);
    if _t16EB {
      real _t16EC = 0.e0;
      real _t16ED = 0.1e1;
      vec3 _t16EE = prim +0017<$[3]> (pos16CC, step16CF);
      real _t16EF = prim @00A5<#∞; %3; $[]> (C15FF, _t16EE);
      real _t16F0 = prim lerp0098<$[]> (_t16EC, _t16ED, cmin16E5, _t16EF, cmax16E6);
      mcol16EA = prim @00A5<#0; %1; $[3]> (CM15FE, _t16F0);
    }
    real _t16F1 = prim *0034 (transp16C9, aa16D1);
    real _t16F2 = prim *0034 (phKd16BC, dcomp16DC);
    real _t16F3 = prim +0017<$[]> (phKa16BB, _t16F2);
    vec3 _t16F4 = prim modulate0129<%3> (dcol16E4, mcol16EA);
    vec3 _t16F5 = prim *0036<$[3]> (_t16F3, _t16F4);
    real _t16F6 = prim *0034 (phKs16BD, scomp16DD);
    real _t16F7 = 0.1e1;
    real _t16F8 = 0.1e1;
    real _t16F9 = 0.1e1;
    vec3 _t16FA = [_t16F7, _t16F8, _t16F9];
    vec3 _t16FB = prim *0036<$[3]> (_t16F6, _t16FA);
    vec3 _t16FC = prim +0017<$[3]> (_t16F5, _t16FB);
    vec3 _t16FD = prim *0036<$[3]> (_t16F1, _t16FC);
    rgb16C5 = prim +0017<$[3]> (rgb16C5, _t16FD);
    real _t16FE = 0.1e1;
    real _t16FF = prim -0026<$[]> (_t16FE, aa16D1);
    transp16C9 = prim *0034 (transp16C9, _t16FF);
    bool _t1700 = prim <007A (transp16C9, transp00524);
    if _t1700 {
      transp16C9 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1701 = 0.1e1;
    bool _t1702 = prim <007A (transp16C9, _t1701);
    if _t1702 {
      real _t1703 = 0.1e1;
      real aa1704 = prim -0026<$[]> (_t1703, transp16C9);
      real _t1705 = rgb16C5[0];
      real _t1706 = prim /0055 (_t1705, aa1704);
      real _t1707 = rgb16C5[1];
      real _t1708 = prim /0055 (_t1707, aa1704);
      real _t1709 = rgb16C5[2];
      real _t170A = prim /0055 (_t1709, aa1704);
      rgba16BF = [_t1706, _t1708, _t170A, aa1704];
    }
  }
}
grid(2) {
  int _t170B = 0;
  int _t170C = 1;
  int _t170D = prim -0024 (iresV0521, _t170C);
  int[] _t170E = prim $range01C3 (_t170B, _t170D);
  foreach vi1714 in _t170E {
    int _t170F = 0;
    int _t1710 = 1;
    int _t1711 = prim -0024 (iresU0520, _t1710);
    int[] _t1712 = prim $range01C3 (_t170F, _t1711);
    foreach ui1713 in _t1712 {
      new ray (ui1713, vi1714);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
input tensor[3,3] rot0542 = <default>;
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
  real _t0543 = 0.1e1;
  real _t0544 = 0.e0;
  real _t0545 = 0.e0;
  vec3 _t0546 = [_t0543, _t0544, _t0545];
  real _t0547 = 0.e0;
  real _t0548 = 0.1e1;
  real _t0549 = 0.e0;
  vec3 _t054A = [_t0547, _t0548, _t0549];
  real _t054B = 0.e0;
  real _t054C = 0.e0;
  real _t054D = 0.1e1;
  vec3 _t054E = [_t054B, _t054C, _t054D];
  rot0542 = [_t0546, _t054A, _t054E];
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115F3;
global field(3)[] F15FB;
global field#0(1)[3] CM15FE;
global field(3)[] C15FF;
global vec3 camN1601;
global vec3 camU1603;
global vec3 camV1604;
global real camDist1606;
global real camVmax160C;
global real camUmax1610;
global real camNearVsp1611;
global real camFarVsp1612;
global vec3 litwsp1616;
function bool#0 !=054F (Femdata: MeshCell cell10550, Femdata: MeshCell cell10551)
{
  int _t0552 = extractFemItem(CellIndex(Mesh), int, cell10550);
  int _t0553 = extractFemItem(CellIndex(Mesh), int, cell10551);
  bool _t0554 = prim !=0086 (_t0552, _t0553);
  return _t0554;
}
function bool#0 ==0555 (Femdata: MeshCell cell10550, Femdata: MeshCell cell10551)
{
  int _t0556 = extractFemItem(CellIndex(Mesh), int, cell10550);
  int _t0557 = extractFemItem(CellIndex(Mesh), int, cell10551);
  bool _t0558 = prim ==0082 (_t0556, _t0557);
  return _t0558;
}
function Femdata: MeshPos#0 findPos0559 (Femdata: Mesh mesh055A, vec3 pos055B)
{
  real _t055C = 0.e0;
  real _t055D = 0.e0;
  real _t055E = 0.e0;
  xn055F = [_t055C, _t055D, _t055E];
  newtonInt0560 = 0;
  cellInt0561 = extractFemItem(StartCell(Mesh), int, mesh055A);
  int _t0562 = extractFemItem(NumCell(Mesh), int, mesh055A);
  int _t0563 = 1;
  numCell0564 = prim -0024 (_t0562, _t0563);
  int _t0565 = 0;
  int _t0566 = 2;
  int _t0567 = 1;
  int _t0568 = prim +0015 (_t0566, _t0567);
  int _t0569 = prim *0033 (_t0568, numCell0564);
  int[] _t056A = prim $range01C3 (_t0565, _t0569);
  foreach itter0585 in _t056A {
    field(3)[3] _t056B = femField(mesh055A,cellInt0561,field(3)[3],Transform,);
    field(3)[3,3] _t056C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t056B);
    field(3)[3,3] _t056D = prim inv015E<#∞; %3> (_t056C);
    real _t056E = 0.e0;
    real _t056F = 0.e0;
    real _t0570 = 0.e0;
    vec3 _t0571 = [_t056E, _t056F, _t0570];
    A0572 = prim @00A5<#∞; %3; $[3,3]> (_t056D, _t0571);
    field(3)[3] _t0573 = femField(mesh055A,cellInt0561,field(3)[3],Transform,);
    field(3)[3] _t0574 = prim -002E<#∞; %3; $[3]> (_t0573, pos055B);
    field(3)[3] _t0575 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0572, _t0574);
    delta0576 = prim @00A5<#∞; %3; $[3]> (_t0575, xn055F);
    xn055F = prim -0026<$[3]> (xn055F, delta0576);
    real _t0577 = 0.1e-7;
    real _t0578 = 0.1e-7;
    real _t0579 = prim *0034 (_t0577, _t0578);
    real _t057A = prim •00CE<$[3]; $[3]; $[]> (delta0576, delta0576);
    bool _t057B = prim >=007E (_t0579, _t057A);
    if _t057B {
      real _t057C = 0.1e-8;
      bool _t057D = extractFemItemN((mesh055A, xn055F, _t057C),InsideInsert(File=checkInside.in)(Mesh),);
      if _t057D {
        Femdata: MeshPos _t057E = extractFemItemN((mesh055A, cellInt0561, xn055F, pos055B),AllBuild(MeshPos),);
        return _t057E;
      }
    }
    int _t057F = 1;
    newtonInt0560 = prim +0015 (newtonInt0560, _t057F);
    int _t0580 = 2;
    bool _t0581 = prim >=007D (newtonInt0560, _t0580);
    if _t0581 {
      newtonInt0560 = 0;
      bool _t0582 = prim >=007D (cellInt0561, numCell0564);
      if _t0582 {
        Femdata: MeshPos _t0583 = extractFemItemN((mesh055A),InvalidBuild(MeshPos),);
        return _t0583;
      } else {
        int _t0584 = 1;
        cellInt0561 = prim +0015 (cellInt0561, _t0584);
      }
    }
  }
  string _t0586 = "Bad end 2";
  string _t0587 = "\n";
  print (_t0586, _t0587);
  Femdata: MeshPos _t0588 = extractFemItemN((mesh055A),InvalidBuild(MeshPos),);
  return _t0588;
}
function Femdata: RefCell#1 refcell0589 (Femdata: Mesh arg0058A)
{
  Femdata: RefCell _t058B = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0058A);
  return _t058B;
}
function Femdata: MeshCell[]#0 cells058C (Femdata: Mesh arg0058D)
{
  Femdata: MeshCell[] _t058E = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg0058D);
  return _t058E;
}
function Femdata: MeshCell[]#0 cells058F (Femdata: Mesh arg0058D)
{
  int _t0590 = 0;
  int _t0591 = extractFemItem(NumCell(Mesh), int, arg0058D);
  int[] _t0592 = prim $range01C3 (_t0590, _t0591);
  Femdata: MeshCell[] accum0595 = {};
  foreach i0593 in _t0592 {
    Femdata: MeshCell _t0594 = loadFem(MeshCell, arg0058D, i0593);
    accum0595 = prim @0010<Femdata: MeshCell> (accum0595, _t0594);
  }
  return accum0595;
}
function int#0 numCell0596 (Femdata: Mesh arg0058A)
{
  int _t0597 = extractFemItem(NumCell(Mesh), int, arg0058A);
  return _t0597;
}
function tensor[3,3,3,3]#0 mesh_t_transform_30598 (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t059C = femField(mesh059B,cell059A,field(3)[3],Transform,);
  field(3)[3,3] _t059D = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t059C);
  field(3)[3,3,3] _t059E = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t059D);
  field(3)[3,3,3,3] _t059F = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t059E);
  tensor[3,3,3,3] _t05A0 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t059F, pos0599);
  return _t05A0;
}
function tensor[3,3,3]#0 mesh_t_transform_205A1 (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t05A2 = femField(mesh059B,cell059A,field(3)[3],Transform,);
  field(3)[3,3] _t05A3 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05A2);
  field(3)[3,3,3] _t05A4 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t05A3);
  tensor[3,3,3] _t05A5 = prim @00A5<#∞; %3; $[3,3,3]> (_t05A4, pos0599);
  return _t05A5;
}
function tensor[3,3]#0 mesh_t_transform_105A6 (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t05A7 = femField(mesh059B,cell059A,field(3)[3],Transform,);
  field(3)[3,3] _t05A8 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05A7);
  tensor[3,3] _t05A9 = prim @00A5<#∞; %3; $[3,3]> (_t05A8, pos0599);
  return _t05A9;
}
function vec3#2 mesh_t_transform_005AA (vec3 pos0599, int cell059A, Femdata: Mesh mesh059B)
{
  field(3)[3] _t05AB = femField(mesh059B,cell059A,field(3)[3],Transform,);
  vec3 _t05AC = prim @00A5<#∞; %3; $[3]> (_t05AB, pos0599);
  return _t05AC;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse05AD (vec3 pos05AE, int cellInt05AF, Femdata: Mesh mesh05B0)
{
  real _t05B1 = 0.e0;
  real _t05B2 = 0.e0;
  real _t05B3 = 0.e0;
  xn05B4 = [_t05B1, _t05B2, _t05B3];
  field(3)[3] _t05B5 = femField(mesh05B0,cellInt05AF,field(3)[3],Transform,);
  field(3)[3,3] _t05B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05B5);
  field(3)[3,3] _t05B7 = prim inv015E<#∞; %3> (_t05B6);
  real _t05B8 = 0.e0;
  real _t05B9 = 0.e0;
  real _t05BA = 0.e0;
  vec3 _t05BB = [_t05B8, _t05B9, _t05BA];
  A05BC = prim @00A5<#∞; %3; $[3,3]> (_t05B7, _t05BB);
  int _t05BD = 0;
  int _t05BE = 2;
  int[] _t05BF = prim $range01C3 (_t05BD, _t05BE);
  foreach itter05CD in _t05BF {
    field(3)[3] _t05C0 = femField(mesh05B0,cellInt05AF,field(3)[3],Transform,);
    field(3)[3] _t05C1 = prim -002E<#∞; %3; $[3]> (_t05C0, pos05AE);
    field(3)[3] _t05C2 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A05BC, _t05C1);
    delta05C3 = prim @00A5<#∞; %3; $[3]> (_t05C2, xn05B4);
    xn05B4 = prim -0026<$[3]> (xn05B4, delta05C3);
    real _t05C4 = 0.1e-7;
    real _t05C5 = 0.1e-7;
    real _t05C6 = prim *0034 (_t05C4, _t05C5);
    real _t05C7 = prim •00CE<$[3]; $[3]; $[]> (delta05C3, delta05C3);
    bool _t05C8 = prim >=007E (_t05C6, _t05C7);
    if _t05C8 {
      real _t05C9 = 0.1e-8;
      bool _t05CA = extractFemItemN((mesh05B0, xn05B4, _t05C9),InsideInsert(File=checkInside.in)(Mesh),);
      if _t05CA {
        Femdata: MeshPos _t05CB = extractFemItemN((mesh05B0, cellInt05AF, xn05B4, pos05AE),AllBuild(MeshPos),);
        return _t05CB;
      } else {
        Femdata: MeshPos _t05CC = extractFemItemN((mesh05B0),InvalidBuild(MeshPos),);
        return _t05CC;
      }
    }
  }
  Femdata: MeshPos _t05CE = extractFemItemN((mesh05B0),InvalidBuild(MeshPos),);
  return _t05CE;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos05CF (Femdata: MeshPos pos05D0)
{
  bool _t05D1 = extractFemItem(WorldTest(MeshPos), bool, pos05D0);
  if _t05D1 {
    vec3 _t05D2 = extractFemItem(RefPos(MeshPos), vec3, pos05D0);
    int _t05D3 = extractFemItem(CellIndex(MeshPos), int, pos05D0);
    Femdata: Mesh _t05D4 = extractFem(pos05D0, Mesh);
    vec3 _t05D5 = func mesh_t_transform_005AA (_t05D2, _t05D3, _t05D4);
    Femdata: MeshPos _t05D6 = extractFemItemN((pos05D0, _t05D5),NewWorld(MeshPos),);
    return _t05D6;
  } else {
    return pos05D0;
  }
}
function vec3#0 worldPos05D7 (Femdata: MeshPos pos05D0)
{
  vec3 _t05D8 = extractFemItem(RefPos(MeshPos), vec3, pos05D0);
  int _t05D9 = extractFemItem(CellIndex(MeshPos), int, pos05D0);
  Femdata: Mesh _t05DA = extractFem(pos05D0, Mesh);
  vec3 _t05DB = func mesh_t_transform_005AA (_t05D8, _t05D9, _t05DA);
  return _t05DB;
}
function Femdata: MeshPos#0 $exitPos05DC (Femdata: Mesh mesh05DD, int cellId05DE, vec3 refPos05DF, vec3 dPos05E0, real[2] time05E1)
{
  int _t05E2 = -1;
  real _t05E3 = time05E1[1];
  int _t05E4 = prim $r2i01B7 (_t05E3);
  int[2] _t05E6 = func nextCell405E5 (_t05E4, cellId05DE, mesh05DD);
  int _t05E7 = 0;
  int _t05E8 = prim $sub01C0<int; %2> (_t05E6, _t05E7);
  bool _t05E9 = prim !=0086 (_t05E2, _t05E8);
  if _t05E9 {
    string _t05EA = "face ";
    real _t05EB = time05E1[1];
    int _t05EC = prim $r2i01B7 (_t05EB);
    string _t05ED = " to ";
    real _t05EE = time05E1[1];
    int _t05EF = prim $r2i01B7 (_t05EE);
    int[2] _t05F0 = func nextCell405E5 (_t05EF, cellId05DE, mesh05DD);
    int _t05F1 = 1;
    int _t05F2 = prim $sub01C0<int; %2> (_t05F0, _t05F1);
    string _t05F3 = "\n";
    string _t05F4 = "got: ";
    real _t05F5 = 0.1e1;
    real _t05F6 = 0.e0;
    real _t05F7 = 0.e0;
    real _t05F8 = 0.e0;
    vec4 _t05F9 = [_t05F5, _t05F6, _t05F7, _t05F8];
    real _t05FA = 0.e0;
    real _t05FB = 0.1e1;
    real _t05FC = 0.e0;
    real _t05FD = 0.e0;
    vec4 _t05FE = [_t05FA, _t05FB, _t05FC, _t05FD];
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    real _t0601 = 0.1e1;
    real _t0602 = 0.e0;
    vec4 _t0603 = [_t05FF, _t0600, _t0601, _t0602];
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    real _t0606 = 0.e0;
    real _t0607 = 0.1e1;
    vec4 _t0608 = [_t0604, _t0605, _t0606, _t0607];
    tensor[4,4] _t0609 = [_t05F9, _t05FE, _t0603, _t0608];
    real _t060A = 0.1e1;
    real _t060B = 0.e0;
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    vec4 _t060E = [_t060A, _t060B, _t060C, _t060D];
    real _t060F = 0.e0;
    real _t0610 = 0.1e1;
    real _t0611 = 0.e0;
    real _t0612 = 0.e0;
    vec4 _t0613 = [_t060F, _t0610, _t0611, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    real _t0616 = 0.1e1;
    real _t0617 = 0.1e1;
    vec4 _t0618 = [_t0614, _t0615, _t0616, _t0617];
    real _t0619 = 0.e0;
    real _t061A = 0.e0;
    real _t061B = 0.e0;
    real _t061C = 0.1e1;
    vec4 _t061D = [_t0619, _t061A, _t061B, _t061C];
    tensor[4,4] _t061E = [_t060E, _t0613, _t0618, _t061D];
    real _t061F = 0.e0;
    real _t0620 = 0.1e1;
    real _t0621 = 0.e0;
    real _t0622 = 0.e0;
    vec4 _t0623 = [_t061F, _t0620, _t0621, _t0622];
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.1e1;
    real _t0627 = 0.e0;
    vec4 _t0628 = [_t0624, _t0625, _t0626, _t0627];
    real _t0629 = 0.1e1;
    real _t062A = -0.1e1;
    real _t062B = 0.e0;
    real _t062C = -0.5e0;
    vec4 _t062D = [_t0629, _t062A, _t062B, _t062C];
    real _t062E = 0.e0;
    real _t062F = 0.e0;
    real _t0630 = 0.e0;
    real _t0631 = 0.1e1;
    vec4 _t0632 = [_t062E, _t062F, _t0630, _t0631];
    tensor[4,4] _t0633 = [_t0623, _t0628, _t062D, _t0632];
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = -0.1e1;
    real _t0637 = 0.e0;
    vec4 _t0638 = [_t0634, _t0635, _t0636, _t0637];
    real _t0639 = 0.e0;
    real _t063A = 0.1e1;
    real _t063B = 0.e0;
    real _t063C = 0.e0;
    vec4 _t063D = [_t0639, _t063A, _t063B, _t063C];
    real _t063E = 0.1e1;
    real _t063F = -0.1e1;
    real _t0640 = 0.e0;
    real _t0641 = -0.5e0;
    vec4 _t0642 = [_t063E, _t063F, _t0640, _t0641];
    real _t0643 = 0.e0;
    real _t0644 = 0.e0;
    real _t0645 = 0.e0;
    real _t0646 = 0.1e1;
    vec4 _t0647 = [_t0643, _t0644, _t0645, _t0646];
    tensor[4,4] _t0648 = [_t0638, _t063D, _t0642, _t0647];
    real _t0649 = 0.e0;
    real _t064A = -0.1e1;
    real _t064B = 0.e0;
    real _t064C = 0.e0;
    vec4 _t064D = [_t0649, _t064A, _t064B, _t064C];
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    real _t0650 = -0.1e1;
    real _t0651 = 0.e0;
    vec4 _t0652 = [_t064E, _t064F, _t0650, _t0651];
    real _t0653 = 0.1e1;
    real _t0654 = -0.1e1;
    real _t0655 = 0.e0;
    real _t0656 = -0.5e0;
    vec4 _t0657 = [_t0653, _t0654, _t0655, _t0656];
    real _t0658 = 0.e0;
    real _t0659 = 0.e0;
    real _t065A = 0.e0;
    real _t065B = 0.1e1;
    vec4 _t065C = [_t0658, _t0659, _t065A, _t065B];
    tensor[4,4] _t065D = [_t064D, _t0652, _t0657, _t065C];
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    real _t0660 = 0.1e1;
    real _t0661 = 0.e0;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    real _t0663 = 0.e0;
    real _t0664 = -0.1e1;
    real _t0665 = 0.e0;
    real _t0666 = 0.e0;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    real _t0668 = 0.1e1;
    real _t0669 = -0.1e1;
    real _t066A = 0.e0;
    real _t066B = -0.5e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    real _t0670 = 0.1e1;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    tensor[4,4] _t0672 = [_t0662, _t0667, _t066C, _t0671];
    tensor[4,4][6] _t0673 = {_t0609, _t061E, _t0633, _t0648, _t065D, _t0672};
    real _t0674 = 0.1e1;
    real _t0675 = 0.e0;
    real _t0676 = 0.e0;
    real _t0677 = 0.e0;
    vec4 _t0678 = [_t0674, _t0675, _t0676, _t0677];
    real _t0679 = 0.e0;
    real _t067A = 0.1e1;
    real _t067B = 0.e0;
    real _t067C = 0.e0;
    vec4 _t067D = [_t0679, _t067A, _t067B, _t067C];
    real _t067E = 0.e0;
    real _t067F = 0.e0;
    real _t0680 = 0.1e1;
    real _t0681 = -0.1e1;
    vec4 _t0682 = [_t067E, _t067F, _t0680, _t0681];
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = 0.e0;
    real _t0686 = 0.1e1;
    vec4 _t0687 = [_t0683, _t0684, _t0685, _t0686];
    tensor[4,4] _t0688 = [_t0678, _t067D, _t0682, _t0687];
    real _t0689 = 0.1e1;
    real _t068A = 0.e0;
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    vec4 _t068D = [_t0689, _t068A, _t068B, _t068C];
    real _t068E = 0.e0;
    real _t068F = 0.1e1;
    real _t0690 = 0.e0;
    real _t0691 = 0.e0;
    vec4 _t0692 = [_t068E, _t068F, _t0690, _t0691];
    real _t0693 = 0.e0;
    real _t0694 = 0.e0;
    real _t0695 = 0.1e1;
    real _t0696 = 0.e0;
    vec4 _t0697 = [_t0693, _t0694, _t0695, _t0696];
    real _t0698 = 0.e0;
    real _t0699 = 0.e0;
    real _t069A = 0.e0;
    real _t069B = 0.1e1;
    vec4 _t069C = [_t0698, _t0699, _t069A, _t069B];
    tensor[4,4] _t069D = [_t068D, _t0692, _t0697, _t069C];
    real _t069E = 0.e0;
    real _t069F = 0.1e1;
    real _t06A0 = 0.e0;
    real _t06A1 = 0.e0;
    vec4 _t06A2 = [_t069E, _t069F, _t06A0, _t06A1];
    real _t06A3 = 0.e0;
    real _t06A4 = 0.e0;
    real _t06A5 = 0.1e1;
    real _t06A6 = -0.1e1;
    vec4 _t06A7 = [_t06A3, _t06A4, _t06A5, _t06A6];
    real _t06A8 = 0.1e1;
    real _t06A9 = -0.1e1;
    real _t06AA = 0.e0;
    real _t06AB = -0.5e0;
    vec4 _t06AC = [_t06A8, _t06A9, _t06AA, _t06AB];
    real _t06AD = 0.e0;
    real _t06AE = 0.e0;
    real _t06AF = 0.e0;
    real _t06B0 = 0.1e1;
    vec4 _t06B1 = [_t06AD, _t06AE, _t06AF, _t06B0];
    tensor[4,4] _t06B2 = [_t06A2, _t06A7, _t06AC, _t06B1];
    real _t06B3 = 0.e0;
    real _t06B4 = 0.e0;
    real _t06B5 = -0.1e1;
    real _t06B6 = 0.1e1;
    vec4 _t06B7 = [_t06B3, _t06B4, _t06B5, _t06B6];
    real _t06B8 = 0.e0;
    real _t06B9 = 0.1e1;
    real _t06BA = 0.e0;
    real _t06BB = 0.e0;
    vec4 _t06BC = [_t06B8, _t06B9, _t06BA, _t06BB];
    real _t06BD = 0.1e1;
    real _t06BE = -0.1e1;
    real _t06BF = 0.e0;
    real _t06C0 = -0.5e0;
    vec4 _t06C1 = [_t06BD, _t06BE, _t06BF, _t06C0];
    real _t06C2 = 0.e0;
    real _t06C3 = 0.e0;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.1e1;
    vec4 _t06C6 = [_t06C2, _t06C3, _t06C4, _t06C5];
    tensor[4,4] _t06C7 = [_t06B7, _t06BC, _t06C1, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = -0.1e1;
    real _t06CA = 0.e0;
    real _t06CB = 0.e0;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = -0.1e1;
    real _t06D0 = 0.1e1;
    vec4 _t06D1 = [_t06CD, _t06CE, _t06CF, _t06D0];
    real _t06D2 = 0.1e1;
    real _t06D3 = -0.1e1;
    real _t06D4 = 0.e0;
    real _t06D5 = -0.5e0;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    real _t06D7 = 0.e0;
    real _t06D8 = 0.e0;
    real _t06D9 = 0.e0;
    real _t06DA = 0.1e1;
    vec4 _t06DB = [_t06D7, _t06D8, _t06D9, _t06DA];
    tensor[4,4] _t06DC = [_t06CC, _t06D1, _t06D6, _t06DB];
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    real _t06DF = 0.1e1;
    real _t06E0 = -0.1e1;
    vec4 _t06E1 = [_t06DD, _t06DE, _t06DF, _t06E0];
    real _t06E2 = 0.e0;
    real _t06E3 = -0.1e1;
    real _t06E4 = 0.e0;
    real _t06E5 = 0.e0;
    vec4 _t06E6 = [_t06E2, _t06E3, _t06E4, _t06E5];
    real _t06E7 = 0.1e1;
    real _t06E8 = -0.1e1;
    real _t06E9 = 0.e0;
    real _t06EA = -0.5e0;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    real _t06EC = 0.e0;
    real _t06ED = 0.e0;
    real _t06EE = 0.e0;
    real _t06EF = 0.1e1;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    tensor[4,4] _t06F1 = [_t06E1, _t06E6, _t06EB, _t06F0];
    tensor[4,4][6] _t06F2 = {_t0688, _t069D, _t06B2, _t06C7, _t06DC, _t06F1};
    real _t06F3 = 0.1e1;
    real _t06F4 = 0.e0;
    real _t06F5 = 0.1e1;
    real _t06F6 = 0.5e0;
    vec4 _t06F7 = [_t06F3, _t06F4, _t06F5, _t06F6];
    real _t06F8 = 0.1e1;
    real _t06F9 = 0.e0;
    real _t06FA = 0.e0;
    real _t06FB = 0.e0;
    vec4 _t06FC = [_t06F8, _t06F9, _t06FA, _t06FB];
    real _t06FD = 0.e0;
    real _t06FE = 0.1e1;
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = 0.e0;
    real _t0703 = 0.e0;
    real _t0704 = 0.e0;
    real _t0705 = 0.1e1;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    tensor[4,4] _t0707 = [_t06F7, _t06FC, _t0701, _t0706];
    real _t0708 = 0.1e1;
    real _t0709 = 0.e0;
    real _t070A = 0.1e1;
    real _t070B = 0.5e0;
    vec4 _t070C = [_t0708, _t0709, _t070A, _t070B];
    real _t070D = 0.1e1;
    real _t070E = 0.e0;
    real _t070F = 0.e0;
    real _t0710 = 0.e0;
    vec4 _t0711 = [_t070D, _t070E, _t070F, _t0710];
    real _t0712 = 0.e0;
    real _t0713 = 0.1e1;
    real _t0714 = 0.e0;
    real _t0715 = 0.1e1;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = 0.e0;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    real _t071A = 0.1e1;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    tensor[4,4] _t071C = [_t070C, _t0711, _t0716, _t071B];
    real _t071D = 0.1e1;
    real _t071E = 0.e0;
    real _t071F = 0.e0;
    real _t0720 = 0.e0;
    vec4 _t0721 = [_t071D, _t071E, _t071F, _t0720];
    real _t0722 = 0.e0;
    real _t0723 = 0.1e1;
    real _t0724 = 0.e0;
    real _t0725 = 0.e0;
    vec4 _t0726 = [_t0722, _t0723, _t0724, _t0725];
    real _t0727 = 0.e0;
    real _t0728 = 0.e0;
    real _t0729 = 0.1e1;
    real _t072A = 0.e0;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    real _t072C = 0.e0;
    real _t072D = 0.e0;
    real _t072E = 0.e0;
    real _t072F = 0.1e1;
    vec4 _t0730 = [_t072C, _t072D, _t072E, _t072F];
    tensor[4,4] _t0731 = [_t0721, _t0726, _t072B, _t0730];
    real _t0732 = 0.e0;
    real _t0733 = -0.1e1;
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.1e1;
    real _t0738 = 0.e0;
    real _t0739 = 0.e0;
    real _t073A = 0.e0;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    real _t073E = 0.1e1;
    real _t073F = 0.e0;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    real _t0741 = 0.e0;
    real _t0742 = 0.e0;
    real _t0743 = 0.e0;
    real _t0744 = 0.1e1;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    tensor[4,4] _t0746 = [_t0736, _t073B, _t0740, _t0745];
    real _t0747 = -0.1e1;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    real _t074A = 0.e0;
    vec4 _t074B = [_t0747, _t0748, _t0749, _t074A];
    real _t074C = 0.e0;
    real _t074D = -0.1e1;
    real _t074E = 0.e0;
    real _t074F = 0.e0;
    vec4 _t0750 = [_t074C, _t074D, _t074E, _t074F];
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    real _t0753 = 0.1e1;
    real _t0754 = 0.e0;
    vec4 _t0755 = [_t0751, _t0752, _t0753, _t0754];
    real _t0756 = 0.e0;
    real _t0757 = 0.e0;
    real _t0758 = 0.e0;
    real _t0759 = 0.1e1;
    vec4 _t075A = [_t0756, _t0757, _t0758, _t0759];
    tensor[4,4] _t075B = [_t074B, _t0750, _t0755, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.1e1;
    real _t075E = 0.e0;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = -0.1e1;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.e0;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    real _t0766 = 0.e0;
    real _t0767 = 0.e0;
    real _t0768 = 0.1e1;
    real _t0769 = 0.e0;
    vec4 _t076A = [_t0766, _t0767, _t0768, _t0769];
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.e0;
    real _t076E = 0.1e1;
    vec4 _t076F = [_t076B, _t076C, _t076D, _t076E];
    tensor[4,4] _t0770 = [_t0760, _t0765, _t076A, _t076F];
    tensor[4,4][6] _t0771 = {_t0707, _t071C, _t0731, _t0746, _t075B, _t0770};
    real _t0772 = 0.e0;
    real _t0773 = 0.1e1;
    real _t0774 = 0.1e1;
    real _t0775 = 0.5e0;
    vec4 _t0776 = [_t0772, _t0773, _t0774, _t0775];
    real _t0777 = 0.e0;
    real _t0778 = 0.1e1;
    real _t0779 = 0.e0;
    real _t077A = 0.e0;
    vec4 _t077B = [_t0777, _t0778, _t0779, _t077A];
    real _t077C = -0.1e1;
    real _t077D = 0.e0;
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    real _t0781 = 0.e0;
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    real _t0784 = 0.1e1;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    tensor[4,4] _t0786 = [_t0776, _t077B, _t0780, _t0785];
    real _t0787 = 0.e0;
    real _t0788 = 0.1e1;
    real _t0789 = 0.1e1;
    real _t078A = 0.5e0;
    vec4 _t078B = [_t0787, _t0788, _t0789, _t078A];
    real _t078C = 0.e0;
    real _t078D = 0.1e1;
    real _t078E = 0.e0;
    real _t078F = 0.e0;
    vec4 _t0790 = [_t078C, _t078D, _t078E, _t078F];
    real _t0791 = -0.1e1;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.1e1;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    real _t0796 = 0.e0;
    real _t0797 = 0.e0;
    real _t0798 = 0.e0;
    real _t0799 = 0.1e1;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    tensor[4,4] _t079B = [_t078B, _t0790, _t0795, _t079A];
    real _t079C = 0.e0;
    real _t079D = 0.1e1;
    real _t079E = 0.e0;
    real _t079F = 0.e0;
    vec4 _t07A0 = [_t079C, _t079D, _t079E, _t079F];
    real _t07A1 = -0.1e1;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.e0;
    real _t07A4 = 0.e0;
    vec4 _t07A5 = [_t07A1, _t07A2, _t07A3, _t07A4];
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.1e1;
    real _t07A9 = 0.e0;
    vec4 _t07AA = [_t07A6, _t07A7, _t07A8, _t07A9];
    real _t07AB = 0.e0;
    real _t07AC = 0.e0;
    real _t07AD = 0.e0;
    real _t07AE = 0.1e1;
    vec4 _t07AF = [_t07AB, _t07AC, _t07AD, _t07AE];
    tensor[4,4] _t07B0 = [_t07A0, _t07A5, _t07AA, _t07AF];
    real _t07B1 = 0.1e1;
    real _t07B2 = 0.e0;
    real _t07B3 = 0.e0;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = 0.1e1;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.e0;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.1e1;
    real _t07BE = 0.e0;
    vec4 _t07BF = [_t07BB, _t07BC, _t07BD, _t07BE];
    real _t07C0 = 0.e0;
    real _t07C1 = 0.e0;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.1e1;
    vec4 _t07C4 = [_t07C0, _t07C1, _t07C2, _t07C3];
    tensor[4,4] _t07C5 = [_t07B5, _t07BA, _t07BF, _t07C4];
    real _t07C6 = 0.e0;
    real _t07C7 = -0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.1e1;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.e0;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.1e1;
    real _t07D3 = 0.e0;
    vec4 _t07D4 = [_t07D0, _t07D1, _t07D2, _t07D3];
    real _t07D5 = 0.e0;
    real _t07D6 = 0.e0;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.1e1;
    vec4 _t07D9 = [_t07D5, _t07D6, _t07D7, _t07D8];
    tensor[4,4] _t07DA = [_t07CA, _t07CF, _t07D4, _t07D9];
    real _t07DB = -0.1e1;
    real _t07DC = 0.e0;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = -0.1e1;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.e0;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    real _t07E5 = 0.e0;
    real _t07E6 = 0.e0;
    real _t07E7 = 0.1e1;
    real _t07E8 = 0.e0;
    vec4 _t07E9 = [_t07E5, _t07E6, _t07E7, _t07E8];
    real _t07EA = 0.e0;
    real _t07EB = 0.e0;
    real _t07EC = 0.e0;
    real _t07ED = 0.1e1;
    vec4 _t07EE = [_t07EA, _t07EB, _t07EC, _t07ED];
    tensor[4,4] _t07EF = [_t07DF, _t07E4, _t07E9, _t07EE];
    tensor[4,4][6] _t07F0 = {_t0786, _t079B, _t07B0, _t07C5, _t07DA, _t07EF};
    real _t07F1 = -0.1e1;
    real _t07F2 = 0.e0;
    real _t07F3 = 0.1e1;
    real _t07F4 = 0.5e0;
    vec4 _t07F5 = [_t07F1, _t07F2, _t07F3, _t07F4];
    real _t07F6 = -0.1e1;
    real _t07F7 = 0.e0;
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    vec4 _t07FA = [_t07F6, _t07F7, _t07F8, _t07F9];
    real _t07FB = 0.e0;
    real _t07FC = -0.1e1;
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    vec4 _t07FF = [_t07FB, _t07FC, _t07FD, _t07FE];
    real _t0800 = 0.e0;
    real _t0801 = 0.e0;
    real _t0802 = 0.e0;
    real _t0803 = 0.1e1;
    vec4 _t0804 = [_t0800, _t0801, _t0802, _t0803];
    tensor[4,4] _t0805 = [_t07F5, _t07FA, _t07FF, _t0804];
    real _t0806 = -0.1e1;
    real _t0807 = 0.e0;
    real _t0808 = 0.1e1;
    real _t0809 = 0.5e0;
    vec4 _t080A = [_t0806, _t0807, _t0808, _t0809];
    real _t080B = -0.1e1;
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    real _t080E = 0.e0;
    vec4 _t080F = [_t080B, _t080C, _t080D, _t080E];
    real _t0810 = 0.e0;
    real _t0811 = -0.1e1;
    real _t0812 = 0.e0;
    real _t0813 = 0.1e1;
    vec4 _t0814 = [_t0810, _t0811, _t0812, _t0813];
    real _t0815 = 0.e0;
    real _t0816 = 0.e0;
    real _t0817 = 0.e0;
    real _t0818 = 0.1e1;
    vec4 _t0819 = [_t0815, _t0816, _t0817, _t0818];
    tensor[4,4] _t081A = [_t080A, _t080F, _t0814, _t0819];
    real _t081B = -0.1e1;
    real _t081C = 0.e0;
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    vec4 _t081F = [_t081B, _t081C, _t081D, _t081E];
    real _t0820 = 0.e0;
    real _t0821 = -0.1e1;
    real _t0822 = 0.e0;
    real _t0823 = 0.e0;
    vec4 _t0824 = [_t0820, _t0821, _t0822, _t0823];
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.1e1;
    real _t0828 = 0.e0;
    vec4 _t0829 = [_t0825, _t0826, _t0827, _t0828];
    real _t082A = 0.e0;
    real _t082B = 0.e0;
    real _t082C = 0.e0;
    real _t082D = 0.1e1;
    vec4 _t082E = [_t082A, _t082B, _t082C, _t082D];
    tensor[4,4] _t082F = [_t081F, _t0824, _t0829, _t082E];
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = -0.1e1;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    real _t0838 = 0.e0;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    real _t083C = 0.1e1;
    real _t083D = 0.e0;
    vec4 _t083E = [_t083A, _t083B, _t083C, _t083D];
    real _t083F = 0.e0;
    real _t0840 = 0.e0;
    real _t0841 = 0.e0;
    real _t0842 = 0.1e1;
    vec4 _t0843 = [_t083F, _t0840, _t0841, _t0842];
    tensor[4,4] _t0844 = [_t0834, _t0839, _t083E, _t0843];
    real _t0845 = 0.1e1;
    real _t0846 = 0.e0;
    real _t0847 = 0.e0;
    real _t0848 = 0.e0;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = 0.e0;
    real _t084B = 0.1e1;
    real _t084C = 0.e0;
    real _t084D = 0.e0;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.1e1;
    real _t0852 = 0.e0;
    vec4 _t0853 = [_t084F, _t0850, _t0851, _t0852];
    real _t0854 = 0.e0;
    real _t0855 = 0.e0;
    real _t0856 = 0.e0;
    real _t0857 = 0.1e1;
    vec4 _t0858 = [_t0854, _t0855, _t0856, _t0857];
    tensor[4,4] _t0859 = [_t0849, _t084E, _t0853, _t0858];
    real _t085A = 0.e0;
    real _t085B = -0.1e1;
    real _t085C = 0.e0;
    real _t085D = 0.e0;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.e0;
    real _t0865 = 0.e0;
    real _t0866 = 0.1e1;
    real _t0867 = 0.e0;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    real _t086C = 0.1e1;
    vec4 _t086D = [_t0869, _t086A, _t086B, _t086C];
    tensor[4,4] _t086E = [_t085E, _t0863, _t0868, _t086D];
    tensor[4,4][6] _t086F = {_t0805, _t081A, _t082F, _t0844, _t0859, _t086E};
    real _t0870 = 0.e0;
    real _t0871 = -0.1e1;
    real _t0872 = 0.1e1;
    real _t0873 = 0.5e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = 0.e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.e0;
    real _t0878 = 0.e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.1e1;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    real _t087D = 0.e0;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    real _t087F = 0.e0;
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.1e1;
    vec4 _t0883 = [_t087F, _t0880, _t0881, _t0882];
    tensor[4,4] _t0884 = [_t0874, _t0879, _t087E, _t0883];
    real _t0885 = 0.e0;
    real _t0886 = -0.1e1;
    real _t0887 = 0.1e1;
    real _t0888 = 0.5e0;
    vec4 _t0889 = [_t0885, _t0886, _t0887, _t0888];
    real _t088A = 0.e0;
    real _t088B = -0.1e1;
    real _t088C = 0.e0;
    real _t088D = 0.e0;
    vec4 _t088E = [_t088A, _t088B, _t088C, _t088D];
    real _t088F = 0.1e1;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    real _t0894 = 0.e0;
    real _t0895 = 0.e0;
    real _t0896 = 0.e0;
    real _t0897 = 0.1e1;
    vec4 _t0898 = [_t0894, _t0895, _t0896, _t0897];
    tensor[4,4] _t0899 = [_t0889, _t088E, _t0893, _t0898];
    real _t089A = 0.e0;
    real _t089B = -0.1e1;
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    vec4 _t089E = [_t089A, _t089B, _t089C, _t089D];
    real _t089F = 0.1e1;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    real _t08A2 = 0.e0;
    vec4 _t08A3 = [_t089F, _t08A0, _t08A1, _t08A2];
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.1e1;
    real _t08A7 = 0.e0;
    vec4 _t08A8 = [_t08A4, _t08A5, _t08A6, _t08A7];
    real _t08A9 = 0.e0;
    real _t08AA = 0.e0;
    real _t08AB = 0.e0;
    real _t08AC = 0.1e1;
    vec4 _t08AD = [_t08A9, _t08AA, _t08AB, _t08AC];
    tensor[4,4] _t08AE = [_t089E, _t08A3, _t08A8, _t08AD];
    real _t08AF = -0.1e1;
    real _t08B0 = 0.e0;
    real _t08B1 = 0.e0;
    real _t08B2 = 0.e0;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.e0;
    real _t08B5 = -0.1e1;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    real _t08BB = 0.1e1;
    real _t08BC = 0.e0;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.1e1;
    vec4 _t08C2 = [_t08BE, _t08BF, _t08C0, _t08C1];
    tensor[4,4] _t08C3 = [_t08B3, _t08B8, _t08BD, _t08C2];
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    real _t08C6 = 0.e0;
    real _t08C7 = 0.e0;
    vec4 _t08C8 = [_t08C4, _t08C5, _t08C6, _t08C7];
    real _t08C9 = -0.1e1;
    real _t08CA = 0.e0;
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.e0;
    real _t08CF = 0.e0;
    real _t08D0 = 0.1e1;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    tensor[4,4] _t08D8 = [_t08C8, _t08CD, _t08D2, _t08D7];
    real _t08D9 = 0.1e1;
    real _t08DA = 0.e0;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    vec4 _t08DD = [_t08D9, _t08DA, _t08DB, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.1e1;
    real _t08E0 = 0.e0;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.e0;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.1e1;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.e0;
    real _t08EA = 0.e0;
    real _t08EB = 0.1e1;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    tensor[4,4] _t08ED = [_t08DD, _t08E2, _t08E7, _t08EC];
    tensor[4,4][6] _t08EE = {_t0884, _t0899, _t08AE, _t08C3, _t08D8, _t08ED};
    tensor[4,4][6][6] _t08EF = {_t0673, _t06F2, _t0771, _t07F0, _t086F, _t08EE};
    real _t08F0 = time05E1[1];
    int _t08F1 = prim $r2i01B7 (_t08F0);
    tensor[4,4][6] _t08F2 = prim $sub01C0<tensor[4,4][6]; %6> (_t08EF, _t08F1);
    real _t08F3 = time05E1[1];
    int _t08F4 = prim $r2i01B7 (_t08F3);
    int[2] _t08F5 = func nextCell405E5 (_t08F4, cellId05DE, mesh05DD);
    int _t08F6 = 1;
    int _t08F7 = prim $sub01C0<int; %2> (_t08F5, _t08F6);
    tensor[4,4] _t08F8 = prim $sub01C0<tensor[4,4]; %6> (_t08F2, _t08F7);
    string _t08F9 = "\n";
    print (_t05EA, _t05EC, _t05ED, _t05F2, _t05F3, _t05F4, _t08F8, _t08F9);
    real _t08FA = time05E1[1];
    int _t08FB = prim $r2i01B7 (_t08FA);
    int[2] _t08FC = func nextCell405E5 (_t08FB, cellId05DE, mesh05DD);
    int _t08FD = 0;
    int _t08FE = prim $sub01C0<int; %2> (_t08FC, _t08FD);
    real _t08FF = 0.1e1;
    real _t0900 = 0.e0;
    real _t0901 = 0.e0;
    real _t0902 = 0.e0;
    vec4 _t0903 = [_t08FF, _t0900, _t0901, _t0902];
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    real _t0906 = 0.e0;
    real _t0907 = 0.e0;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.1e1;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    real _t0911 = 0.1e1;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    tensor[4,4] _t0913 = [_t0903, _t0908, _t090D, _t0912];
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    real _t0916 = 0.e0;
    real _t0917 = 0.e0;
    vec4 _t0918 = [_t0914, _t0915, _t0916, _t0917];
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    real _t091B = 0.e0;
    real _t091C = 0.e0;
    vec4 _t091D = [_t0919, _t091A, _t091B, _t091C];
    real _t091E = 0.e0;
    real _t091F = 0.e0;
    real _t0920 = 0.1e1;
    real _t0921 = 0.1e1;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.e0;
    real _t0924 = 0.e0;
    real _t0925 = 0.e0;
    real _t0926 = 0.1e1;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    tensor[4,4] _t0928 = [_t0918, _t091D, _t0922, _t0927];
    real _t0929 = 0.e0;
    real _t092A = 0.1e1;
    real _t092B = 0.e0;
    real _t092C = 0.e0;
    vec4 _t092D = [_t0929, _t092A, _t092B, _t092C];
    real _t092E = 0.e0;
    real _t092F = 0.e0;
    real _t0930 = 0.1e1;
    real _t0931 = 0.e0;
    vec4 _t0932 = [_t092E, _t092F, _t0930, _t0931];
    real _t0933 = 0.1e1;
    real _t0934 = -0.1e1;
    real _t0935 = 0.e0;
    real _t0936 = -0.5e0;
    vec4 _t0937 = [_t0933, _t0934, _t0935, _t0936];
    real _t0938 = 0.e0;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.1e1;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    tensor[4,4] _t093D = [_t092D, _t0932, _t0937, _t093C];
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = -0.1e1;
    real _t0941 = 0.e0;
    vec4 _t0942 = [_t093E, _t093F, _t0940, _t0941];
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    vec4 _t0947 = [_t0943, _t0944, _t0945, _t0946];
    real _t0948 = 0.1e1;
    real _t0949 = -0.1e1;
    real _t094A = 0.e0;
    real _t094B = -0.5e0;
    vec4 _t094C = [_t0948, _t0949, _t094A, _t094B];
    real _t094D = 0.e0;
    real _t094E = 0.e0;
    real _t094F = 0.e0;
    real _t0950 = 0.1e1;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    tensor[4,4] _t0952 = [_t0942, _t0947, _t094C, _t0951];
    real _t0953 = 0.e0;
    real _t0954 = -0.1e1;
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    vec4 _t0957 = [_t0953, _t0954, _t0955, _t0956];
    real _t0958 = 0.e0;
    real _t0959 = 0.e0;
    real _t095A = -0.1e1;
    real _t095B = 0.e0;
    vec4 _t095C = [_t0958, _t0959, _t095A, _t095B];
    real _t095D = 0.1e1;
    real _t095E = -0.1e1;
    real _t095F = 0.e0;
    real _t0960 = -0.5e0;
    vec4 _t0961 = [_t095D, _t095E, _t095F, _t0960];
    real _t0962 = 0.e0;
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    tensor[4,4] _t0967 = [_t0957, _t095C, _t0961, _t0966];
    real _t0968 = 0.e0;
    real _t0969 = 0.e0;
    real _t096A = 0.1e1;
    real _t096B = 0.e0;
    vec4 _t096C = [_t0968, _t0969, _t096A, _t096B];
    real _t096D = 0.e0;
    real _t096E = -0.1e1;
    real _t096F = 0.e0;
    real _t0970 = 0.e0;
    vec4 _t0971 = [_t096D, _t096E, _t096F, _t0970];
    real _t0972 = 0.1e1;
    real _t0973 = -0.1e1;
    real _t0974 = 0.e0;
    real _t0975 = -0.5e0;
    vec4 _t0976 = [_t0972, _t0973, _t0974, _t0975];
    real _t0977 = 0.e0;
    real _t0978 = 0.e0;
    real _t0979 = 0.e0;
    real _t097A = 0.1e1;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    tensor[4,4] _t097C = [_t096C, _t0971, _t0976, _t097B];
    tensor[4,4][6] _t097D = {_t0913, _t0928, _t093D, _t0952, _t0967, _t097C};
    real _t097E = 0.1e1;
    real _t097F = 0.e0;
    real _t0980 = 0.e0;
    real _t0981 = 0.e0;
    vec4 _t0982 = [_t097E, _t097F, _t0980, _t0981];
    real _t0983 = 0.e0;
    real _t0984 = 0.1e1;
    real _t0985 = 0.e0;
    real _t0986 = 0.e0;
    vec4 _t0987 = [_t0983, _t0984, _t0985, _t0986];
    real _t0988 = 0.e0;
    real _t0989 = 0.e0;
    real _t098A = 0.1e1;
    real _t098B = -0.1e1;
    vec4 _t098C = [_t0988, _t0989, _t098A, _t098B];
    real _t098D = 0.e0;
    real _t098E = 0.e0;
    real _t098F = 0.e0;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    tensor[4,4] _t0992 = [_t0982, _t0987, _t098C, _t0991];
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    real _t0996 = 0.e0;
    vec4 _t0997 = [_t0993, _t0994, _t0995, _t0996];
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    real _t099B = 0.e0;
    vec4 _t099C = [_t0998, _t0999, _t099A, _t099B];
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    real _t09A0 = 0.e0;
    vec4 _t09A1 = [_t099D, _t099E, _t099F, _t09A0];
    real _t09A2 = 0.e0;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.1e1;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    tensor[4,4] _t09A7 = [_t0997, _t099C, _t09A1, _t09A6];
    real _t09A8 = 0.e0;
    real _t09A9 = 0.1e1;
    real _t09AA = 0.e0;
    real _t09AB = 0.e0;
    vec4 _t09AC = [_t09A8, _t09A9, _t09AA, _t09AB];
    real _t09AD = 0.e0;
    real _t09AE = 0.e0;
    real _t09AF = 0.1e1;
    real _t09B0 = -0.1e1;
    vec4 _t09B1 = [_t09AD, _t09AE, _t09AF, _t09B0];
    real _t09B2 = 0.1e1;
    real _t09B3 = -0.1e1;
    real _t09B4 = 0.e0;
    real _t09B5 = -0.5e0;
    vec4 _t09B6 = [_t09B2, _t09B3, _t09B4, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.e0;
    real _t09B9 = 0.e0;
    real _t09BA = 0.1e1;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    tensor[4,4] _t09BC = [_t09AC, _t09B1, _t09B6, _t09BB];
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = -0.1e1;
    real _t09C0 = 0.1e1;
    vec4 _t09C1 = [_t09BD, _t09BE, _t09BF, _t09C0];
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.e0;
    vec4 _t09C6 = [_t09C2, _t09C3, _t09C4, _t09C5];
    real _t09C7 = 0.1e1;
    real _t09C8 = -0.1e1;
    real _t09C9 = 0.e0;
    real _t09CA = -0.5e0;
    vec4 _t09CB = [_t09C7, _t09C8, _t09C9, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.e0;
    real _t09CE = 0.e0;
    real _t09CF = 0.1e1;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    tensor[4,4] _t09D1 = [_t09C1, _t09C6, _t09CB, _t09D0];
    real _t09D2 = 0.e0;
    real _t09D3 = -0.1e1;
    real _t09D4 = 0.e0;
    real _t09D5 = 0.e0;
    vec4 _t09D6 = [_t09D2, _t09D3, _t09D4, _t09D5];
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = -0.1e1;
    real _t09DA = 0.1e1;
    vec4 _t09DB = [_t09D7, _t09D8, _t09D9, _t09DA];
    real _t09DC = 0.1e1;
    real _t09DD = -0.1e1;
    real _t09DE = 0.e0;
    real _t09DF = -0.5e0;
    vec4 _t09E0 = [_t09DC, _t09DD, _t09DE, _t09DF];
    real _t09E1 = 0.e0;
    real _t09E2 = 0.e0;
    real _t09E3 = 0.e0;
    real _t09E4 = 0.1e1;
    vec4 _t09E5 = [_t09E1, _t09E2, _t09E3, _t09E4];
    tensor[4,4] _t09E6 = [_t09D6, _t09DB, _t09E0, _t09E5];
    real _t09E7 = 0.e0;
    real _t09E8 = 0.e0;
    real _t09E9 = 0.1e1;
    real _t09EA = -0.1e1;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.1e1;
    real _t09EE = 0.e0;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.1e1;
    real _t09F2 = -0.1e1;
    real _t09F3 = 0.e0;
    real _t09F4 = -0.5e0;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    real _t09F6 = 0.e0;
    real _t09F7 = 0.e0;
    real _t09F8 = 0.e0;
    real _t09F9 = 0.1e1;
    vec4 _t09FA = [_t09F6, _t09F7, _t09F8, _t09F9];
    tensor[4,4] _t09FB = [_t09EB, _t09F0, _t09F5, _t09FA];
    tensor[4,4][6] _t09FC = {_t0992, _t09A7, _t09BC, _t09D1, _t09E6, _t09FB};
    real _t09FD = 0.1e1;
    real _t09FE = 0.e0;
    real _t09FF = 0.1e1;
    real _t0A00 = 0.5e0;
    vec4 _t0A01 = [_t09FD, _t09FE, _t09FF, _t0A00];
    real _t0A02 = 0.1e1;
    real _t0A03 = 0.e0;
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    vec4 _t0A06 = [_t0A02, _t0A03, _t0A04, _t0A05];
    real _t0A07 = 0.e0;
    real _t0A08 = 0.1e1;
    real _t0A09 = 0.e0;
    real _t0A0A = 0.e0;
    vec4 _t0A0B = [_t0A07, _t0A08, _t0A09, _t0A0A];
    real _t0A0C = 0.e0;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.1e1;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    tensor[4,4] _t0A11 = [_t0A01, _t0A06, _t0A0B, _t0A10];
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.1e1;
    real _t0A15 = 0.5e0;
    vec4 _t0A16 = [_t0A12, _t0A13, _t0A14, _t0A15];
    real _t0A17 = 0.1e1;
    real _t0A18 = 0.e0;
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    vec4 _t0A1B = [_t0A17, _t0A18, _t0A19, _t0A1A];
    real _t0A1C = 0.e0;
    real _t0A1D = 0.1e1;
    real _t0A1E = 0.e0;
    real _t0A1F = 0.1e1;
    vec4 _t0A20 = [_t0A1C, _t0A1D, _t0A1E, _t0A1F];
    real _t0A21 = 0.e0;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.1e1;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    tensor[4,4] _t0A26 = [_t0A16, _t0A1B, _t0A20, _t0A25];
    real _t0A27 = 0.1e1;
    real _t0A28 = 0.e0;
    real _t0A29 = 0.e0;
    real _t0A2A = 0.e0;
    vec4 _t0A2B = [_t0A27, _t0A28, _t0A29, _t0A2A];
    real _t0A2C = 0.e0;
    real _t0A2D = 0.1e1;
    real _t0A2E = 0.e0;
    real _t0A2F = 0.e0;
    vec4 _t0A30 = [_t0A2C, _t0A2D, _t0A2E, _t0A2F];
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    real _t0A34 = 0.e0;
    vec4 _t0A35 = [_t0A31, _t0A32, _t0A33, _t0A34];
    real _t0A36 = 0.e0;
    real _t0A37 = 0.e0;
    real _t0A38 = 0.e0;
    real _t0A39 = 0.1e1;
    vec4 _t0A3A = [_t0A36, _t0A37, _t0A38, _t0A39];
    tensor[4,4] _t0A3B = [_t0A2B, _t0A30, _t0A35, _t0A3A];
    real _t0A3C = 0.e0;
    real _t0A3D = -0.1e1;
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.1e1;
    real _t0A42 = 0.e0;
    real _t0A43 = 0.e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.1e1;
    real _t0A49 = 0.e0;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    real _t0A4B = 0.e0;
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    vec4 _t0A4F = [_t0A4B, _t0A4C, _t0A4D, _t0A4E];
    tensor[4,4] _t0A50 = [_t0A40, _t0A45, _t0A4A, _t0A4F];
    real _t0A51 = -0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = -0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.1e1;
    real _t0A5E = 0.e0;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    real _t0A60 = 0.e0;
    real _t0A61 = 0.e0;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.1e1;
    vec4 _t0A64 = [_t0A60, _t0A61, _t0A62, _t0A63];
    tensor[4,4] _t0A65 = [_t0A55, _t0A5A, _t0A5F, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.1e1;
    real _t0A68 = 0.e0;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = -0.1e1;
    real _t0A6C = 0.e0;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.1e1;
    real _t0A73 = 0.e0;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    real _t0A75 = 0.e0;
    real _t0A76 = 0.e0;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.1e1;
    vec4 _t0A79 = [_t0A75, _t0A76, _t0A77, _t0A78];
    tensor[4,4] _t0A7A = [_t0A6A, _t0A6F, _t0A74, _t0A79];
    tensor[4,4][6] _t0A7B = {_t0A11, _t0A26, _t0A3B, _t0A50, _t0A65, _t0A7A};
    real _t0A7C = 0.e0;
    real _t0A7D = 0.1e1;
    real _t0A7E = 0.1e1;
    real _t0A7F = 0.5e0;
    vec4 _t0A80 = [_t0A7C, _t0A7D, _t0A7E, _t0A7F];
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    real _t0A84 = 0.e0;
    vec4 _t0A85 = [_t0A81, _t0A82, _t0A83, _t0A84];
    real _t0A86 = -0.1e1;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.e0;
    real _t0A89 = 0.e0;
    vec4 _t0A8A = [_t0A86, _t0A87, _t0A88, _t0A89];
    real _t0A8B = 0.e0;
    real _t0A8C = 0.e0;
    real _t0A8D = 0.e0;
    real _t0A8E = 0.1e1;
    vec4 _t0A8F = [_t0A8B, _t0A8C, _t0A8D, _t0A8E];
    tensor[4,4] _t0A90 = [_t0A80, _t0A85, _t0A8A, _t0A8F];
    real _t0A91 = 0.e0;
    real _t0A92 = 0.1e1;
    real _t0A93 = 0.1e1;
    real _t0A94 = 0.5e0;
    vec4 _t0A95 = [_t0A91, _t0A92, _t0A93, _t0A94];
    real _t0A96 = 0.e0;
    real _t0A97 = 0.1e1;
    real _t0A98 = 0.e0;
    real _t0A99 = 0.e0;
    vec4 _t0A9A = [_t0A96, _t0A97, _t0A98, _t0A99];
    real _t0A9B = -0.1e1;
    real _t0A9C = 0.e0;
    real _t0A9D = 0.e0;
    real _t0A9E = 0.1e1;
    vec4 _t0A9F = [_t0A9B, _t0A9C, _t0A9D, _t0A9E];
    real _t0AA0 = 0.e0;
    real _t0AA1 = 0.e0;
    real _t0AA2 = 0.e0;
    real _t0AA3 = 0.1e1;
    vec4 _t0AA4 = [_t0AA0, _t0AA1, _t0AA2, _t0AA3];
    tensor[4,4] _t0AA5 = [_t0A95, _t0A9A, _t0A9F, _t0AA4];
    real _t0AA6 = 0.e0;
    real _t0AA7 = 0.1e1;
    real _t0AA8 = 0.e0;
    real _t0AA9 = 0.e0;
    vec4 _t0AAA = [_t0AA6, _t0AA7, _t0AA8, _t0AA9];
    real _t0AAB = -0.1e1;
    real _t0AAC = 0.e0;
    real _t0AAD = 0.e0;
    real _t0AAE = 0.e0;
    vec4 _t0AAF = [_t0AAB, _t0AAC, _t0AAD, _t0AAE];
    real _t0AB0 = 0.e0;
    real _t0AB1 = 0.e0;
    real _t0AB2 = 0.1e1;
    real _t0AB3 = 0.e0;
    vec4 _t0AB4 = [_t0AB0, _t0AB1, _t0AB2, _t0AB3];
    real _t0AB5 = 0.e0;
    real _t0AB6 = 0.e0;
    real _t0AB7 = 0.e0;
    real _t0AB8 = 0.1e1;
    vec4 _t0AB9 = [_t0AB5, _t0AB6, _t0AB7, _t0AB8];
    tensor[4,4] _t0ABA = [_t0AAA, _t0AAF, _t0AB4, _t0AB9];
    real _t0ABB = 0.1e1;
    real _t0ABC = 0.e0;
    real _t0ABD = 0.e0;
    real _t0ABE = 0.e0;
    vec4 _t0ABF = [_t0ABB, _t0ABC, _t0ABD, _t0ABE];
    real _t0AC0 = 0.e0;
    real _t0AC1 = 0.1e1;
    real _t0AC2 = 0.e0;
    real _t0AC3 = 0.e0;
    vec4 _t0AC4 = [_t0AC0, _t0AC1, _t0AC2, _t0AC3];
    real _t0AC5 = 0.e0;
    real _t0AC6 = 0.e0;
    real _t0AC7 = 0.1e1;
    real _t0AC8 = 0.e0;
    vec4 _t0AC9 = [_t0AC5, _t0AC6, _t0AC7, _t0AC8];
    real _t0ACA = 0.e0;
    real _t0ACB = 0.e0;
    real _t0ACC = 0.e0;
    real _t0ACD = 0.1e1;
    vec4 _t0ACE = [_t0ACA, _t0ACB, _t0ACC, _t0ACD];
    tensor[4,4] _t0ACF = [_t0ABF, _t0AC4, _t0AC9, _t0ACE];
    real _t0AD0 = 0.e0;
    real _t0AD1 = -0.1e1;
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.e0;
    vec4 _t0AD4 = [_t0AD0, _t0AD1, _t0AD2, _t0AD3];
    real _t0AD5 = 0.1e1;
    real _t0AD6 = 0.e0;
    real _t0AD7 = 0.e0;
    real _t0AD8 = 0.e0;
    vec4 _t0AD9 = [_t0AD5, _t0AD6, _t0AD7, _t0AD8];
    real _t0ADA = 0.e0;
    real _t0ADB = 0.e0;
    real _t0ADC = 0.1e1;
    real _t0ADD = 0.e0;
    vec4 _t0ADE = [_t0ADA, _t0ADB, _t0ADC, _t0ADD];
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.e0;
    real _t0AE1 = 0.e0;
    real _t0AE2 = 0.1e1;
    vec4 _t0AE3 = [_t0ADF, _t0AE0, _t0AE1, _t0AE2];
    tensor[4,4] _t0AE4 = [_t0AD4, _t0AD9, _t0ADE, _t0AE3];
    real _t0AE5 = -0.1e1;
    real _t0AE6 = 0.e0;
    real _t0AE7 = 0.e0;
    real _t0AE8 = 0.e0;
    vec4 _t0AE9 = [_t0AE5, _t0AE6, _t0AE7, _t0AE8];
    real _t0AEA = 0.e0;
    real _t0AEB = -0.1e1;
    real _t0AEC = 0.e0;
    real _t0AED = 0.e0;
    vec4 _t0AEE = [_t0AEA, _t0AEB, _t0AEC, _t0AED];
    real _t0AEF = 0.e0;
    real _t0AF0 = 0.e0;
    real _t0AF1 = 0.1e1;
    real _t0AF2 = 0.e0;
    vec4 _t0AF3 = [_t0AEF, _t0AF0, _t0AF1, _t0AF2];
    real _t0AF4 = 0.e0;
    real _t0AF5 = 0.e0;
    real _t0AF6 = 0.e0;
    real _t0AF7 = 0.1e1;
    vec4 _t0AF8 = [_t0AF4, _t0AF5, _t0AF6, _t0AF7];
    tensor[4,4] _t0AF9 = [_t0AE9, _t0AEE, _t0AF3, _t0AF8];
    tensor[4,4][6] _t0AFA = {_t0A90, _t0AA5, _t0ABA, _t0ACF, _t0AE4, _t0AF9};
    real _t0AFB = -0.1e1;
    real _t0AFC = 0.e0;
    real _t0AFD = 0.1e1;
    real _t0AFE = 0.5e0;
    vec4 _t0AFF = [_t0AFB, _t0AFC, _t0AFD, _t0AFE];
    real _t0B00 = -0.1e1;
    real _t0B01 = 0.e0;
    real _t0B02 = 0.e0;
    real _t0B03 = 0.e0;
    vec4 _t0B04 = [_t0B00, _t0B01, _t0B02, _t0B03];
    real _t0B05 = 0.e0;
    real _t0B06 = -0.1e1;
    real _t0B07 = 0.e0;
    real _t0B08 = 0.e0;
    vec4 _t0B09 = [_t0B05, _t0B06, _t0B07, _t0B08];
    real _t0B0A = 0.e0;
    real _t0B0B = 0.e0;
    real _t0B0C = 0.e0;
    real _t0B0D = 0.1e1;
    vec4 _t0B0E = [_t0B0A, _t0B0B, _t0B0C, _t0B0D];
    tensor[4,4] _t0B0F = [_t0AFF, _t0B04, _t0B09, _t0B0E];
    real _t0B10 = -0.1e1;
    real _t0B11 = 0.e0;
    real _t0B12 = 0.1e1;
    real _t0B13 = 0.5e0;
    vec4 _t0B14 = [_t0B10, _t0B11, _t0B12, _t0B13];
    real _t0B15 = -0.1e1;
    real _t0B16 = 0.e0;
    real _t0B17 = 0.e0;
    real _t0B18 = 0.e0;
    vec4 _t0B19 = [_t0B15, _t0B16, _t0B17, _t0B18];
    real _t0B1A = 0.e0;
    real _t0B1B = -0.1e1;
    real _t0B1C = 0.e0;
    real _t0B1D = 0.1e1;
    vec4 _t0B1E = [_t0B1A, _t0B1B, _t0B1C, _t0B1D];
    real _t0B1F = 0.e0;
    real _t0B20 = 0.e0;
    real _t0B21 = 0.e0;
    real _t0B22 = 0.1e1;
    vec4 _t0B23 = [_t0B1F, _t0B20, _t0B21, _t0B22];
    tensor[4,4] _t0B24 = [_t0B14, _t0B19, _t0B1E, _t0B23];
    real _t0B25 = -0.1e1;
    real _t0B26 = 0.e0;
    real _t0B27 = 0.e0;
    real _t0B28 = 0.e0;
    vec4 _t0B29 = [_t0B25, _t0B26, _t0B27, _t0B28];
    real _t0B2A = 0.e0;
    real _t0B2B = -0.1e1;
    real _t0B2C = 0.e0;
    real _t0B2D = 0.e0;
    vec4 _t0B2E = [_t0B2A, _t0B2B, _t0B2C, _t0B2D];
    real _t0B2F = 0.e0;
    real _t0B30 = 0.e0;
    real _t0B31 = 0.1e1;
    real _t0B32 = 0.e0;
    vec4 _t0B33 = [_t0B2F, _t0B30, _t0B31, _t0B32];
    real _t0B34 = 0.e0;
    real _t0B35 = 0.e0;
    real _t0B36 = 0.e0;
    real _t0B37 = 0.1e1;
    vec4 _t0B38 = [_t0B34, _t0B35, _t0B36, _t0B37];
    tensor[4,4] _t0B39 = [_t0B29, _t0B2E, _t0B33, _t0B38];
    real _t0B3A = 0.e0;
    real _t0B3B = 0.1e1;
    real _t0B3C = 0.e0;
    real _t0B3D = 0.e0;
    vec4 _t0B3E = [_t0B3A, _t0B3B, _t0B3C, _t0B3D];
    real _t0B3F = -0.1e1;
    real _t0B40 = 0.e0;
    real _t0B41 = 0.e0;
    real _t0B42 = 0.e0;
    vec4 _t0B43 = [_t0B3F, _t0B40, _t0B41, _t0B42];
    real _t0B44 = 0.e0;
    real _t0B45 = 0.e0;
    real _t0B46 = 0.1e1;
    real _t0B47 = 0.e0;
    vec4 _t0B48 = [_t0B44, _t0B45, _t0B46, _t0B47];
    real _t0B49 = 0.e0;
    real _t0B4A = 0.e0;
    real _t0B4B = 0.e0;
    real _t0B4C = 0.1e1;
    vec4 _t0B4D = [_t0B49, _t0B4A, _t0B4B, _t0B4C];
    tensor[4,4] _t0B4E = [_t0B3E, _t0B43, _t0B48, _t0B4D];
    real _t0B4F = 0.1e1;
    real _t0B50 = 0.e0;
    real _t0B51 = 0.e0;
    real _t0B52 = 0.e0;
    vec4 _t0B53 = [_t0B4F, _t0B50, _t0B51, _t0B52];
    real _t0B54 = 0.e0;
    real _t0B55 = 0.1e1;
    real _t0B56 = 0.e0;
    real _t0B57 = 0.e0;
    vec4 _t0B58 = [_t0B54, _t0B55, _t0B56, _t0B57];
    real _t0B59 = 0.e0;
    real _t0B5A = 0.e0;
    real _t0B5B = 0.1e1;
    real _t0B5C = 0.e0;
    vec4 _t0B5D = [_t0B59, _t0B5A, _t0B5B, _t0B5C];
    real _t0B5E = 0.e0;
    real _t0B5F = 0.e0;
    real _t0B60 = 0.e0;
    real _t0B61 = 0.1e1;
    vec4 _t0B62 = [_t0B5E, _t0B5F, _t0B60, _t0B61];
    tensor[4,4] _t0B63 = [_t0B53, _t0B58, _t0B5D, _t0B62];
    real _t0B64 = 0.e0;
    real _t0B65 = -0.1e1;
    real _t0B66 = 0.e0;
    real _t0B67 = 0.e0;
    vec4 _t0B68 = [_t0B64, _t0B65, _t0B66, _t0B67];
    real _t0B69 = 0.1e1;
    real _t0B6A = 0.e0;
    real _t0B6B = 0.e0;
    real _t0B6C = 0.e0;
    vec4 _t0B6D = [_t0B69, _t0B6A, _t0B6B, _t0B6C];
    real _t0B6E = 0.e0;
    real _t0B6F = 0.e0;
    real _t0B70 = 0.1e1;
    real _t0B71 = 0.e0;
    vec4 _t0B72 = [_t0B6E, _t0B6F, _t0B70, _t0B71];
    real _t0B73 = 0.e0;
    real _t0B74 = 0.e0;
    real _t0B75 = 0.e0;
    real _t0B76 = 0.1e1;
    vec4 _t0B77 = [_t0B73, _t0B74, _t0B75, _t0B76];
    tensor[4,4] _t0B78 = [_t0B68, _t0B6D, _t0B72, _t0B77];
    tensor[4,4][6] _t0B79 = {_t0B0F, _t0B24, _t0B39, _t0B4E, _t0B63, _t0B78};
    real _t0B7A = 0.e0;
    real _t0B7B = -0.1e1;
    real _t0B7C = 0.1e1;
    real _t0B7D = 0.5e0;
    vec4 _t0B7E = [_t0B7A, _t0B7B, _t0B7C, _t0B7D];
    real _t0B7F = 0.e0;
    real _t0B80 = -0.1e1;
    real _t0B81 = 0.e0;
    real _t0B82 = 0.e0;
    vec4 _t0B83 = [_t0B7F, _t0B80, _t0B81, _t0B82];
    real _t0B84 = 0.1e1;
    real _t0B85 = 0.e0;
    real _t0B86 = 0.e0;
    real _t0B87 = 0.e0;
    vec4 _t0B88 = [_t0B84, _t0B85, _t0B86, _t0B87];
    real _t0B89 = 0.e0;
    real _t0B8A = 0.e0;
    real _t0B8B = 0.e0;
    real _t0B8C = 0.1e1;
    vec4 _t0B8D = [_t0B89, _t0B8A, _t0B8B, _t0B8C];
    tensor[4,4] _t0B8E = [_t0B7E, _t0B83, _t0B88, _t0B8D];
    real _t0B8F = 0.e0;
    real _t0B90 = -0.1e1;
    real _t0B91 = 0.1e1;
    real _t0B92 = 0.5e0;
    vec4 _t0B93 = [_t0B8F, _t0B90, _t0B91, _t0B92];
    real _t0B94 = 0.e0;
    real _t0B95 = -0.1e1;
    real _t0B96 = 0.e0;
    real _t0B97 = 0.e0;
    vec4 _t0B98 = [_t0B94, _t0B95, _t0B96, _t0B97];
    real _t0B99 = 0.1e1;
    real _t0B9A = 0.e0;
    real _t0B9B = 0.e0;
    real _t0B9C = 0.1e1;
    vec4 _t0B9D = [_t0B99, _t0B9A, _t0B9B, _t0B9C];
    real _t0B9E = 0.e0;
    real _t0B9F = 0.e0;
    real _t0BA0 = 0.e0;
    real _t0BA1 = 0.1e1;
    vec4 _t0BA2 = [_t0B9E, _t0B9F, _t0BA0, _t0BA1];
    tensor[4,4] _t0BA3 = [_t0B93, _t0B98, _t0B9D, _t0BA2];
    real _t0BA4 = 0.e0;
    real _t0BA5 = -0.1e1;
    real _t0BA6 = 0.e0;
    real _t0BA7 = 0.e0;
    vec4 _t0BA8 = [_t0BA4, _t0BA5, _t0BA6, _t0BA7];
    real _t0BA9 = 0.1e1;
    real _t0BAA = 0.e0;
    real _t0BAB = 0.e0;
    real _t0BAC = 0.e0;
    vec4 _t0BAD = [_t0BA9, _t0BAA, _t0BAB, _t0BAC];
    real _t0BAE = 0.e0;
    real _t0BAF = 0.e0;
    real _t0BB0 = 0.1e1;
    real _t0BB1 = 0.e0;
    vec4 _t0BB2 = [_t0BAE, _t0BAF, _t0BB0, _t0BB1];
    real _t0BB3 = 0.e0;
    real _t0BB4 = 0.e0;
    real _t0BB5 = 0.e0;
    real _t0BB6 = 0.1e1;
    vec4 _t0BB7 = [_t0BB3, _t0BB4, _t0BB5, _t0BB6];
    tensor[4,4] _t0BB8 = [_t0BA8, _t0BAD, _t0BB2, _t0BB7];
    real _t0BB9 = -0.1e1;
    real _t0BBA = 0.e0;
    real _t0BBB = 0.e0;
    real _t0BBC = 0.e0;
    vec4 _t0BBD = [_t0BB9, _t0BBA, _t0BBB, _t0BBC];
    real _t0BBE = 0.e0;
    real _t0BBF = -0.1e1;
    real _t0BC0 = 0.e0;
    real _t0BC1 = 0.e0;
    vec4 _t0BC2 = [_t0BBE, _t0BBF, _t0BC0, _t0BC1];
    real _t0BC3 = 0.e0;
    real _t0BC4 = 0.e0;
    real _t0BC5 = 0.1e1;
    real _t0BC6 = 0.e0;
    vec4 _t0BC7 = [_t0BC3, _t0BC4, _t0BC5, _t0BC6];
    real _t0BC8 = 0.e0;
    real _t0BC9 = 0.e0;
    real _t0BCA = 0.e0;
    real _t0BCB = 0.1e1;
    vec4 _t0BCC = [_t0BC8, _t0BC9, _t0BCA, _t0BCB];
    tensor[4,4] _t0BCD = [_t0BBD, _t0BC2, _t0BC7, _t0BCC];
    real _t0BCE = 0.e0;
    real _t0BCF = 0.1e1;
    real _t0BD0 = 0.e0;
    real _t0BD1 = 0.e0;
    vec4 _t0BD2 = [_t0BCE, _t0BCF, _t0BD0, _t0BD1];
    real _t0BD3 = -0.1e1;
    real _t0BD4 = 0.e0;
    real _t0BD5 = 0.e0;
    real _t0BD6 = 0.e0;
    vec4 _t0BD7 = [_t0BD3, _t0BD4, _t0BD5, _t0BD6];
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    real _t0BDA = 0.1e1;
    real _t0BDB = 0.e0;
    vec4 _t0BDC = [_t0BD8, _t0BD9, _t0BDA, _t0BDB];
    real _t0BDD = 0.e0;
    real _t0BDE = 0.e0;
    real _t0BDF = 0.e0;
    real _t0BE0 = 0.1e1;
    vec4 _t0BE1 = [_t0BDD, _t0BDE, _t0BDF, _t0BE0];
    tensor[4,4] _t0BE2 = [_t0BD2, _t0BD7, _t0BDC, _t0BE1];
    real _t0BE3 = 0.1e1;
    real _t0BE4 = 0.e0;
    real _t0BE5 = 0.e0;
    real _t0BE6 = 0.e0;
    vec4 _t0BE7 = [_t0BE3, _t0BE4, _t0BE5, _t0BE6];
    real _t0BE8 = 0.e0;
    real _t0BE9 = 0.1e1;
    real _t0BEA = 0.e0;
    real _t0BEB = 0.e0;
    vec4 _t0BEC = [_t0BE8, _t0BE9, _t0BEA, _t0BEB];
    real _t0BED = 0.e0;
    real _t0BEE = 0.e0;
    real _t0BEF = 0.1e1;
    real _t0BF0 = 0.e0;
    vec4 _t0BF1 = [_t0BED, _t0BEE, _t0BEF, _t0BF0];
    real _t0BF2 = 0.e0;
    real _t0BF3 = 0.e0;
    real _t0BF4 = 0.e0;
    real _t0BF5 = 0.1e1;
    vec4 _t0BF6 = [_t0BF2, _t0BF3, _t0BF4, _t0BF5];
    tensor[4,4] _t0BF7 = [_t0BE7, _t0BEC, _t0BF1, _t0BF6];
    tensor[4,4][6] _t0BF8 = {_t0B8E, _t0BA3, _t0BB8, _t0BCD, _t0BE2, _t0BF7};
    tensor[4,4][6][6] _t0BF9 = {_t097D, _t09FC, _t0A7B, _t0AFA, _t0B79, _t0BF8};
    real _t0BFA = time05E1[1];
    int _t0BFB = prim $r2i01B7 (_t0BFA);
    tensor[4,4][6] _t0BFC = prim $sub01C0<tensor[4,4][6]; %6> (_t0BF9, _t0BFB);
    real _t0BFD = time05E1[1];
    int _t0BFE = prim $r2i01B7 (_t0BFD);
    int[2] _t0BFF = func nextCell405E5 (_t0BFE, cellId05DE, mesh05DD);
    int _t0C00 = 1;
    int _t0C01 = prim $sub01C0<int; %2> (_t0BFF, _t0C00);
    tensor[4,4] _t0C02 = prim $sub01C0<tensor[4,4]; %6> (_t0BFC, _t0C01);
    real _t0C03 = time05E1[0];
    vec3 _t0C04 = prim *0036<$[3]> (_t0C03, dPos05E0);
    vec3 _t0C05 = prim +0017<$[3]> (_t0C04, refPos05DF);
    real _t0C06 = _t0C05[0];
    real _t0C07 = time05E1[0];
    vec3 _t0C08 = prim *0036<$[3]> (_t0C07, dPos05E0);
    vec3 _t0C09 = prim +0017<$[3]> (_t0C08, refPos05DF);
    real _t0C0A = _t0C09[1];
    real _t0C0B = time05E1[0];
    vec3 _t0C0C = prim *0036<$[3]> (_t0C0B, dPos05E0);
    vec3 _t0C0D = prim +0017<$[3]> (_t0C0C, refPos05DF);
    real _t0C0E = _t0C0D[2];
    real _t0C0F = 0.1e1;
    vec4 _t0C10 = [_t0C06, _t0C0A, _t0C0E, _t0C0F];
    vec4 _t0C11 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0C02, _t0C10);
    real _t0C12 = _t0C11[0];
    real _t0C13 = 0.1e1;
    real _t0C14 = 0.e0;
    real _t0C15 = 0.e0;
    real _t0C16 = 0.e0;
    vec4 _t0C17 = [_t0C13, _t0C14, _t0C15, _t0C16];
    real _t0C18 = 0.e0;
    real _t0C19 = 0.1e1;
    real _t0C1A = 0.e0;
    real _t0C1B = 0.e0;
    vec4 _t0C1C = [_t0C18, _t0C19, _t0C1A, _t0C1B];
    real _t0C1D = 0.e0;
    real _t0C1E = 0.e0;
    real _t0C1F = 0.1e1;
    real _t0C20 = 0.e0;
    vec4 _t0C21 = [_t0C1D, _t0C1E, _t0C1F, _t0C20];
    real _t0C22 = 0.e0;
    real _t0C23 = 0.e0;
    real _t0C24 = 0.e0;
    real _t0C25 = 0.1e1;
    vec4 _t0C26 = [_t0C22, _t0C23, _t0C24, _t0C25];
    tensor[4,4] _t0C27 = [_t0C17, _t0C1C, _t0C21, _t0C26];
    real _t0C28 = 0.1e1;
    real _t0C29 = 0.e0;
    real _t0C2A = 0.e0;
    real _t0C2B = 0.e0;
    vec4 _t0C2C = [_t0C28, _t0C29, _t0C2A, _t0C2B];
    real _t0C2D = 0.e0;
    real _t0C2E = 0.1e1;
    real _t0C2F = 0.e0;
    real _t0C30 = 0.e0;
    vec4 _t0C31 = [_t0C2D, _t0C2E, _t0C2F, _t0C30];
    real _t0C32 = 0.e0;
    real _t0C33 = 0.e0;
    real _t0C34 = 0.1e1;
    real _t0C35 = 0.1e1;
    vec4 _t0C36 = [_t0C32, _t0C33, _t0C34, _t0C35];
    real _t0C37 = 0.e0;
    real _t0C38 = 0.e0;
    real _t0C39 = 0.e0;
    real _t0C3A = 0.1e1;
    vec4 _t0C3B = [_t0C37, _t0C38, _t0C39, _t0C3A];
    tensor[4,4] _t0C3C = [_t0C2C, _t0C31, _t0C36, _t0C3B];
    real _t0C3D = 0.e0;
    real _t0C3E = 0.1e1;
    real _t0C3F = 0.e0;
    real _t0C40 = 0.e0;
    vec4 _t0C41 = [_t0C3D, _t0C3E, _t0C3F, _t0C40];
    real _t0C42 = 0.e0;
    real _t0C43 = 0.e0;
    real _t0C44 = 0.1e1;
    real _t0C45 = 0.e0;
    vec4 _t0C46 = [_t0C42, _t0C43, _t0C44, _t0C45];
    real _t0C47 = 0.1e1;
    real _t0C48 = -0.1e1;
    real _t0C49 = 0.e0;
    real _t0C4A = -0.5e0;
    vec4 _t0C4B = [_t0C47, _t0C48, _t0C49, _t0C4A];
    real _t0C4C = 0.e0;
    real _t0C4D = 0.e0;
    real _t0C4E = 0.e0;
    real _t0C4F = 0.1e1;
    vec4 _t0C50 = [_t0C4C, _t0C4D, _t0C4E, _t0C4F];
    tensor[4,4] _t0C51 = [_t0C41, _t0C46, _t0C4B, _t0C50];
    real _t0C52 = 0.e0;
    real _t0C53 = 0.e0;
    real _t0C54 = -0.1e1;
    real _t0C55 = 0.e0;
    vec4 _t0C56 = [_t0C52, _t0C53, _t0C54, _t0C55];
    real _t0C57 = 0.e0;
    real _t0C58 = 0.1e1;
    real _t0C59 = 0.e0;
    real _t0C5A = 0.e0;
    vec4 _t0C5B = [_t0C57, _t0C58, _t0C59, _t0C5A];
    real _t0C5C = 0.1e1;
    real _t0C5D = -0.1e1;
    real _t0C5E = 0.e0;
    real _t0C5F = -0.5e0;
    vec4 _t0C60 = [_t0C5C, _t0C5D, _t0C5E, _t0C5F];
    real _t0C61 = 0.e0;
    real _t0C62 = 0.e0;
    real _t0C63 = 0.e0;
    real _t0C64 = 0.1e1;
    vec4 _t0C65 = [_t0C61, _t0C62, _t0C63, _t0C64];
    tensor[4,4] _t0C66 = [_t0C56, _t0C5B, _t0C60, _t0C65];
    real _t0C67 = 0.e0;
    real _t0C68 = -0.1e1;
    real _t0C69 = 0.e0;
    real _t0C6A = 0.e0;
    vec4 _t0C6B = [_t0C67, _t0C68, _t0C69, _t0C6A];
    real _t0C6C = 0.e0;
    real _t0C6D = 0.e0;
    real _t0C6E = -0.1e1;
    real _t0C6F = 0.e0;
    vec4 _t0C70 = [_t0C6C, _t0C6D, _t0C6E, _t0C6F];
    real _t0C71 = 0.1e1;
    real _t0C72 = -0.1e1;
    real _t0C73 = 0.e0;
    real _t0C74 = -0.5e0;
    vec4 _t0C75 = [_t0C71, _t0C72, _t0C73, _t0C74];
    real _t0C76 = 0.e0;
    real _t0C77 = 0.e0;
    real _t0C78 = 0.e0;
    real _t0C79 = 0.1e1;
    vec4 _t0C7A = [_t0C76, _t0C77, _t0C78, _t0C79];
    tensor[4,4] _t0C7B = [_t0C6B, _t0C70, _t0C75, _t0C7A];
    real _t0C7C = 0.e0;
    real _t0C7D = 0.e0;
    real _t0C7E = 0.1e1;
    real _t0C7F = 0.e0;
    vec4 _t0C80 = [_t0C7C, _t0C7D, _t0C7E, _t0C7F];
    real _t0C81 = 0.e0;
    real _t0C82 = -0.1e1;
    real _t0C83 = 0.e0;
    real _t0C84 = 0.e0;
    vec4 _t0C85 = [_t0C81, _t0C82, _t0C83, _t0C84];
    real _t0C86 = 0.1e1;
    real _t0C87 = -0.1e1;
    real _t0C88 = 0.e0;
    real _t0C89 = -0.5e0;
    vec4 _t0C8A = [_t0C86, _t0C87, _t0C88, _t0C89];
    real _t0C8B = 0.e0;
    real _t0C8C = 0.e0;
    real _t0C8D = 0.e0;
    real _t0C8E = 0.1e1;
    vec4 _t0C8F = [_t0C8B, _t0C8C, _t0C8D, _t0C8E];
    tensor[4,4] _t0C90 = [_t0C80, _t0C85, _t0C8A, _t0C8F];
    tensor[4,4][6] _t0C91 = {_t0C27, _t0C3C, _t0C51, _t0C66, _t0C7B, _t0C90};
    real _t0C92 = 0.1e1;
    real _t0C93 = 0.e0;
    real _t0C94 = 0.e0;
    real _t0C95 = 0.e0;
    vec4 _t0C96 = [_t0C92, _t0C93, _t0C94, _t0C95];
    real _t0C97 = 0.e0;
    real _t0C98 = 0.1e1;
    real _t0C99 = 0.e0;
    real _t0C9A = 0.e0;
    vec4 _t0C9B = [_t0C97, _t0C98, _t0C99, _t0C9A];
    real _t0C9C = 0.e0;
    real _t0C9D = 0.e0;
    real _t0C9E = 0.1e1;
    real _t0C9F = -0.1e1;
    vec4 _t0CA0 = [_t0C9C, _t0C9D, _t0C9E, _t0C9F];
    real _t0CA1 = 0.e0;
    real _t0CA2 = 0.e0;
    real _t0CA3 = 0.e0;
    real _t0CA4 = 0.1e1;
    vec4 _t0CA5 = [_t0CA1, _t0CA2, _t0CA3, _t0CA4];
    tensor[4,4] _t0CA6 = [_t0C96, _t0C9B, _t0CA0, _t0CA5];
    real _t0CA7 = 0.1e1;
    real _t0CA8 = 0.e0;
    real _t0CA9 = 0.e0;
    real _t0CAA = 0.e0;
    vec4 _t0CAB = [_t0CA7, _t0CA8, _t0CA9, _t0CAA];
    real _t0CAC = 0.e0;
    real _t0CAD = 0.1e1;
    real _t0CAE = 0.e0;
    real _t0CAF = 0.e0;
    vec4 _t0CB0 = [_t0CAC, _t0CAD, _t0CAE, _t0CAF];
    real _t0CB1 = 0.e0;
    real _t0CB2 = 0.e0;
    real _t0CB3 = 0.1e1;
    real _t0CB4 = 0.e0;
    vec4 _t0CB5 = [_t0CB1, _t0CB2, _t0CB3, _t0CB4];
    real _t0CB6 = 0.e0;
    real _t0CB7 = 0.e0;
    real _t0CB8 = 0.e0;
    real _t0CB9 = 0.1e1;
    vec4 _t0CBA = [_t0CB6, _t0CB7, _t0CB8, _t0CB9];
    tensor[4,4] _t0CBB = [_t0CAB, _t0CB0, _t0CB5, _t0CBA];
    real _t0CBC = 0.e0;
    real _t0CBD = 0.1e1;
    real _t0CBE = 0.e0;
    real _t0CBF = 0.e0;
    vec4 _t0CC0 = [_t0CBC, _t0CBD, _t0CBE, _t0CBF];
    real _t0CC1 = 0.e0;
    real _t0CC2 = 0.e0;
    real _t0CC3 = 0.1e1;
    real _t0CC4 = -0.1e1;
    vec4 _t0CC5 = [_t0CC1, _t0CC2, _t0CC3, _t0CC4];
    real _t0CC6 = 0.1e1;
    real _t0CC7 = -0.1e1;
    real _t0CC8 = 0.e0;
    real _t0CC9 = -0.5e0;
    vec4 _t0CCA = [_t0CC6, _t0CC7, _t0CC8, _t0CC9];
    real _t0CCB = 0.e0;
    real _t0CCC = 0.e0;
    real _t0CCD = 0.e0;
    real _t0CCE = 0.1e1;
    vec4 _t0CCF = [_t0CCB, _t0CCC, _t0CCD, _t0CCE];
    tensor[4,4] _t0CD0 = [_t0CC0, _t0CC5, _t0CCA, _t0CCF];
    real _t0CD1 = 0.e0;
    real _t0CD2 = 0.e0;
    real _t0CD3 = -0.1e1;
    real _t0CD4 = 0.1e1;
    vec4 _t0CD5 = [_t0CD1, _t0CD2, _t0CD3, _t0CD4];
    real _t0CD6 = 0.e0;
    real _t0CD7 = 0.1e1;
    real _t0CD8 = 0.e0;
    real _t0CD9 = 0.e0;
    vec4 _t0CDA = [_t0CD6, _t0CD7, _t0CD8, _t0CD9];
    real _t0CDB = 0.1e1;
    real _t0CDC = -0.1e1;
    real _t0CDD = 0.e0;
    real _t0CDE = -0.5e0;
    vec4 _t0CDF = [_t0CDB, _t0CDC, _t0CDD, _t0CDE];
    real _t0CE0 = 0.e0;
    real _t0CE1 = 0.e0;
    real _t0CE2 = 0.e0;
    real _t0CE3 = 0.1e1;
    vec4 _t0CE4 = [_t0CE0, _t0CE1, _t0CE2, _t0CE3];
    tensor[4,4] _t0CE5 = [_t0CD5, _t0CDA, _t0CDF, _t0CE4];
    real _t0CE6 = 0.e0;
    real _t0CE7 = -0.1e1;
    real _t0CE8 = 0.e0;
    real _t0CE9 = 0.e0;
    vec4 _t0CEA = [_t0CE6, _t0CE7, _t0CE8, _t0CE9];
    real _t0CEB = 0.e0;
    real _t0CEC = 0.e0;
    real _t0CED = -0.1e1;
    real _t0CEE = 0.1e1;
    vec4 _t0CEF = [_t0CEB, _t0CEC, _t0CED, _t0CEE];
    real _t0CF0 = 0.1e1;
    real _t0CF1 = -0.1e1;
    real _t0CF2 = 0.e0;
    real _t0CF3 = -0.5e0;
    vec4 _t0CF4 = [_t0CF0, _t0CF1, _t0CF2, _t0CF3];
    real _t0CF5 = 0.e0;
    real _t0CF6 = 0.e0;
    real _t0CF7 = 0.e0;
    real _t0CF8 = 0.1e1;
    vec4 _t0CF9 = [_t0CF5, _t0CF6, _t0CF7, _t0CF8];
    tensor[4,4] _t0CFA = [_t0CEA, _t0CEF, _t0CF4, _t0CF9];
    real _t0CFB = 0.e0;
    real _t0CFC = 0.e0;
    real _t0CFD = 0.1e1;
    real _t0CFE = -0.1e1;
    vec4 _t0CFF = [_t0CFB, _t0CFC, _t0CFD, _t0CFE];
    real _t0D00 = 0.e0;
    real _t0D01 = -0.1e1;
    real _t0D02 = 0.e0;
    real _t0D03 = 0.e0;
    vec4 _t0D04 = [_t0D00, _t0D01, _t0D02, _t0D03];
    real _t0D05 = 0.1e1;
    real _t0D06 = -0.1e1;
    real _t0D07 = 0.e0;
    real _t0D08 = -0.5e0;
    vec4 _t0D09 = [_t0D05, _t0D06, _t0D07, _t0D08];
    real _t0D0A = 0.e0;
    real _t0D0B = 0.e0;
    real _t0D0C = 0.e0;
    real _t0D0D = 0.1e1;
    vec4 _t0D0E = [_t0D0A, _t0D0B, _t0D0C, _t0D0D];
    tensor[4,4] _t0D0F = [_t0CFF, _t0D04, _t0D09, _t0D0E];
    tensor[4,4][6] _t0D10 = {_t0CA6, _t0CBB, _t0CD0, _t0CE5, _t0CFA, _t0D0F};
    real _t0D11 = 0.1e1;
    real _t0D12 = 0.e0;
    real _t0D13 = 0.1e1;
    real _t0D14 = 0.5e0;
    vec4 _t0D15 = [_t0D11, _t0D12, _t0D13, _t0D14];
    real _t0D16 = 0.1e1;
    real _t0D17 = 0.e0;
    real _t0D18 = 0.e0;
    real _t0D19 = 0.e0;
    vec4 _t0D1A = [_t0D16, _t0D17, _t0D18, _t0D19];
    real _t0D1B = 0.e0;
    real _t0D1C = 0.1e1;
    real _t0D1D = 0.e0;
    real _t0D1E = 0.e0;
    vec4 _t0D1F = [_t0D1B, _t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = 0.e0;
    real _t0D21 = 0.e0;
    real _t0D22 = 0.e0;
    real _t0D23 = 0.1e1;
    vec4 _t0D24 = [_t0D20, _t0D21, _t0D22, _t0D23];
    tensor[4,4] _t0D25 = [_t0D15, _t0D1A, _t0D1F, _t0D24];
    real _t0D26 = 0.1e1;
    real _t0D27 = 0.e0;
    real _t0D28 = 0.1e1;
    real _t0D29 = 0.5e0;
    vec4 _t0D2A = [_t0D26, _t0D27, _t0D28, _t0D29];
    real _t0D2B = 0.1e1;
    real _t0D2C = 0.e0;
    real _t0D2D = 0.e0;
    real _t0D2E = 0.e0;
    vec4 _t0D2F = [_t0D2B, _t0D2C, _t0D2D, _t0D2E];
    real _t0D30 = 0.e0;
    real _t0D31 = 0.1e1;
    real _t0D32 = 0.e0;
    real _t0D33 = 0.1e1;
    vec4 _t0D34 = [_t0D30, _t0D31, _t0D32, _t0D33];
    real _t0D35 = 0.e0;
    real _t0D36 = 0.e0;
    real _t0D37 = 0.e0;
    real _t0D38 = 0.1e1;
    vec4 _t0D39 = [_t0D35, _t0D36, _t0D37, _t0D38];
    tensor[4,4] _t0D3A = [_t0D2A, _t0D2F, _t0D34, _t0D39];
    real _t0D3B = 0.1e1;
    real _t0D3C = 0.e0;
    real _t0D3D = 0.e0;
    real _t0D3E = 0.e0;
    vec4 _t0D3F = [_t0D3B, _t0D3C, _t0D3D, _t0D3E];
    real _t0D40 = 0.e0;
    real _t0D41 = 0.1e1;
    real _t0D42 = 0.e0;
    real _t0D43 = 0.e0;
    vec4 _t0D44 = [_t0D40, _t0D41, _t0D42, _t0D43];
    real _t0D45 = 0.e0;
    real _t0D46 = 0.e0;
    real _t0D47 = 0.1e1;
    real _t0D48 = 0.e0;
    vec4 _t0D49 = [_t0D45, _t0D46, _t0D47, _t0D48];
    real _t0D4A = 0.e0;
    real _t0D4B = 0.e0;
    real _t0D4C = 0.e0;
    real _t0D4D = 0.1e1;
    vec4 _t0D4E = [_t0D4A, _t0D4B, _t0D4C, _t0D4D];
    tensor[4,4] _t0D4F = [_t0D3F, _t0D44, _t0D49, _t0D4E];
    real _t0D50 = 0.e0;
    real _t0D51 = -0.1e1;
    real _t0D52 = 0.e0;
    real _t0D53 = 0.e0;
    vec4 _t0D54 = [_t0D50, _t0D51, _t0D52, _t0D53];
    real _t0D55 = 0.1e1;
    real _t0D56 = 0.e0;
    real _t0D57 = 0.e0;
    real _t0D58 = 0.e0;
    vec4 _t0D59 = [_t0D55, _t0D56, _t0D57, _t0D58];
    real _t0D5A = 0.e0;
    real _t0D5B = 0.e0;
    real _t0D5C = 0.1e1;
    real _t0D5D = 0.e0;
    vec4 _t0D5E = [_t0D5A, _t0D5B, _t0D5C, _t0D5D];
    real _t0D5F = 0.e0;
    real _t0D60 = 0.e0;
    real _t0D61 = 0.e0;
    real _t0D62 = 0.1e1;
    vec4 _t0D63 = [_t0D5F, _t0D60, _t0D61, _t0D62];
    tensor[4,4] _t0D64 = [_t0D54, _t0D59, _t0D5E, _t0D63];
    real _t0D65 = -0.1e1;
    real _t0D66 = 0.e0;
    real _t0D67 = 0.e0;
    real _t0D68 = 0.e0;
    vec4 _t0D69 = [_t0D65, _t0D66, _t0D67, _t0D68];
    real _t0D6A = 0.e0;
    real _t0D6B = -0.1e1;
    real _t0D6C = 0.e0;
    real _t0D6D = 0.e0;
    vec4 _t0D6E = [_t0D6A, _t0D6B, _t0D6C, _t0D6D];
    real _t0D6F = 0.e0;
    real _t0D70 = 0.e0;
    real _t0D71 = 0.1e1;
    real _t0D72 = 0.e0;
    vec4 _t0D73 = [_t0D6F, _t0D70, _t0D71, _t0D72];
    real _t0D74 = 0.e0;
    real _t0D75 = 0.e0;
    real _t0D76 = 0.e0;
    real _t0D77 = 0.1e1;
    vec4 _t0D78 = [_t0D74, _t0D75, _t0D76, _t0D77];
    tensor[4,4] _t0D79 = [_t0D69, _t0D6E, _t0D73, _t0D78];
    real _t0D7A = 0.e0;
    real _t0D7B = 0.1e1;
    real _t0D7C = 0.e0;
    real _t0D7D = 0.e0;
    vec4 _t0D7E = [_t0D7A, _t0D7B, _t0D7C, _t0D7D];
    real _t0D7F = -0.1e1;
    real _t0D80 = 0.e0;
    real _t0D81 = 0.e0;
    real _t0D82 = 0.e0;
    vec4 _t0D83 = [_t0D7F, _t0D80, _t0D81, _t0D82];
    real _t0D84 = 0.e0;
    real _t0D85 = 0.e0;
    real _t0D86 = 0.1e1;
    real _t0D87 = 0.e0;
    vec4 _t0D88 = [_t0D84, _t0D85, _t0D86, _t0D87];
    real _t0D89 = 0.e0;
    real _t0D8A = 0.e0;
    real _t0D8B = 0.e0;
    real _t0D8C = 0.1e1;
    vec4 _t0D8D = [_t0D89, _t0D8A, _t0D8B, _t0D8C];
    tensor[4,4] _t0D8E = [_t0D7E, _t0D83, _t0D88, _t0D8D];
    tensor[4,4][6] _t0D8F = {_t0D25, _t0D3A, _t0D4F, _t0D64, _t0D79, _t0D8E};
    real _t0D90 = 0.e0;
    real _t0D91 = 0.1e1;
    real _t0D92 = 0.1e1;
    real _t0D93 = 0.5e0;
    vec4 _t0D94 = [_t0D90, _t0D91, _t0D92, _t0D93];
    real _t0D95 = 0.e0;
    real _t0D96 = 0.1e1;
    real _t0D97 = 0.e0;
    real _t0D98 = 0.e0;
    vec4 _t0D99 = [_t0D95, _t0D96, _t0D97, _t0D98];
    real _t0D9A = -0.1e1;
    real _t0D9B = 0.e0;
    real _t0D9C = 0.e0;
    real _t0D9D = 0.e0;
    vec4 _t0D9E = [_t0D9A, _t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.e0;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.1e1;
    vec4 _t0DA3 = [_t0D9F, _t0DA0, _t0DA1, _t0DA2];
    tensor[4,4] _t0DA4 = [_t0D94, _t0D99, _t0D9E, _t0DA3];
    real _t0DA5 = 0.e0;
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.1e1;
    real _t0DA8 = 0.5e0;
    vec4 _t0DA9 = [_t0DA5, _t0DA6, _t0DA7, _t0DA8];
    real _t0DAA = 0.e0;
    real _t0DAB = 0.1e1;
    real _t0DAC = 0.e0;
    real _t0DAD = 0.e0;
    vec4 _t0DAE = [_t0DAA, _t0DAB, _t0DAC, _t0DAD];
    real _t0DAF = -0.1e1;
    real _t0DB0 = 0.e0;
    real _t0DB1 = 0.e0;
    real _t0DB2 = 0.1e1;
    vec4 _t0DB3 = [_t0DAF, _t0DB0, _t0DB1, _t0DB2];
    real _t0DB4 = 0.e0;
    real _t0DB5 = 0.e0;
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.1e1;
    vec4 _t0DB8 = [_t0DB4, _t0DB5, _t0DB6, _t0DB7];
    tensor[4,4] _t0DB9 = [_t0DA9, _t0DAE, _t0DB3, _t0DB8];
    real _t0DBA = 0.e0;
    real _t0DBB = 0.1e1;
    real _t0DBC = 0.e0;
    real _t0DBD = 0.e0;
    vec4 _t0DBE = [_t0DBA, _t0DBB, _t0DBC, _t0DBD];
    real _t0DBF = -0.1e1;
    real _t0DC0 = 0.e0;
    real _t0DC1 = 0.e0;
    real _t0DC2 = 0.e0;
    vec4 _t0DC3 = [_t0DBF, _t0DC0, _t0DC1, _t0DC2];
    real _t0DC4 = 0.e0;
    real _t0DC5 = 0.e0;
    real _t0DC6 = 0.1e1;
    real _t0DC7 = 0.e0;
    vec4 _t0DC8 = [_t0DC4, _t0DC5, _t0DC6, _t0DC7];
    real _t0DC9 = 0.e0;
    real _t0DCA = 0.e0;
    real _t0DCB = 0.e0;
    real _t0DCC = 0.1e1;
    vec4 _t0DCD = [_t0DC9, _t0DCA, _t0DCB, _t0DCC];
    tensor[4,4] _t0DCE = [_t0DBE, _t0DC3, _t0DC8, _t0DCD];
    real _t0DCF = 0.1e1;
    real _t0DD0 = 0.e0;
    real _t0DD1 = 0.e0;
    real _t0DD2 = 0.e0;
    vec4 _t0DD3 = [_t0DCF, _t0DD0, _t0DD1, _t0DD2];
    real _t0DD4 = 0.e0;
    real _t0DD5 = 0.1e1;
    real _t0DD6 = 0.e0;
    real _t0DD7 = 0.e0;
    vec4 _t0DD8 = [_t0DD4, _t0DD5, _t0DD6, _t0DD7];
    real _t0DD9 = 0.e0;
    real _t0DDA = 0.e0;
    real _t0DDB = 0.1e1;
    real _t0DDC = 0.e0;
    vec4 _t0DDD = [_t0DD9, _t0DDA, _t0DDB, _t0DDC];
    real _t0DDE = 0.e0;
    real _t0DDF = 0.e0;
    real _t0DE0 = 0.e0;
    real _t0DE1 = 0.1e1;
    vec4 _t0DE2 = [_t0DDE, _t0DDF, _t0DE0, _t0DE1];
    tensor[4,4] _t0DE3 = [_t0DD3, _t0DD8, _t0DDD, _t0DE2];
    real _t0DE4 = 0.e0;
    real _t0DE5 = -0.1e1;
    real _t0DE6 = 0.e0;
    real _t0DE7 = 0.e0;
    vec4 _t0DE8 = [_t0DE4, _t0DE5, _t0DE6, _t0DE7];
    real _t0DE9 = 0.1e1;
    real _t0DEA = 0.e0;
    real _t0DEB = 0.e0;
    real _t0DEC = 0.e0;
    vec4 _t0DED = [_t0DE9, _t0DEA, _t0DEB, _t0DEC];
    real _t0DEE = 0.e0;
    real _t0DEF = 0.e0;
    real _t0DF0 = 0.1e1;
    real _t0DF1 = 0.e0;
    vec4 _t0DF2 = [_t0DEE, _t0DEF, _t0DF0, _t0DF1];
    real _t0DF3 = 0.e0;
    real _t0DF4 = 0.e0;
    real _t0DF5 = 0.e0;
    real _t0DF6 = 0.1e1;
    vec4 _t0DF7 = [_t0DF3, _t0DF4, _t0DF5, _t0DF6];
    tensor[4,4] _t0DF8 = [_t0DE8, _t0DED, _t0DF2, _t0DF7];
    real _t0DF9 = -0.1e1;
    real _t0DFA = 0.e0;
    real _t0DFB = 0.e0;
    real _t0DFC = 0.e0;
    vec4 _t0DFD = [_t0DF9, _t0DFA, _t0DFB, _t0DFC];
    real _t0DFE = 0.e0;
    real _t0DFF = -0.1e1;
    real _t0E00 = 0.e0;
    real _t0E01 = 0.e0;
    vec4 _t0E02 = [_t0DFE, _t0DFF, _t0E00, _t0E01];
    real _t0E03 = 0.e0;
    real _t0E04 = 0.e0;
    real _t0E05 = 0.1e1;
    real _t0E06 = 0.e0;
    vec4 _t0E07 = [_t0E03, _t0E04, _t0E05, _t0E06];
    real _t0E08 = 0.e0;
    real _t0E09 = 0.e0;
    real _t0E0A = 0.e0;
    real _t0E0B = 0.1e1;
    vec4 _t0E0C = [_t0E08, _t0E09, _t0E0A, _t0E0B];
    tensor[4,4] _t0E0D = [_t0DFD, _t0E02, _t0E07, _t0E0C];
    tensor[4,4][6] _t0E0E = {_t0DA4, _t0DB9, _t0DCE, _t0DE3, _t0DF8, _t0E0D};
    real _t0E0F = -0.1e1;
    real _t0E10 = 0.e0;
    real _t0E11 = 0.1e1;
    real _t0E12 = 0.5e0;
    vec4 _t0E13 = [_t0E0F, _t0E10, _t0E11, _t0E12];
    real _t0E14 = -0.1e1;
    real _t0E15 = 0.e0;
    real _t0E16 = 0.e0;
    real _t0E17 = 0.e0;
    vec4 _t0E18 = [_t0E14, _t0E15, _t0E16, _t0E17];
    real _t0E19 = 0.e0;
    real _t0E1A = -0.1e1;
    real _t0E1B = 0.e0;
    real _t0E1C = 0.e0;
    vec4 _t0E1D = [_t0E19, _t0E1A, _t0E1B, _t0E1C];
    real _t0E1E = 0.e0;
    real _t0E1F = 0.e0;
    real _t0E20 = 0.e0;
    real _t0E21 = 0.1e1;
    vec4 _t0E22 = [_t0E1E, _t0E1F, _t0E20, _t0E21];
    tensor[4,4] _t0E23 = [_t0E13, _t0E18, _t0E1D, _t0E22];
    real _t0E24 = -0.1e1;
    real _t0E25 = 0.e0;
    real _t0E26 = 0.1e1;
    real _t0E27 = 0.5e0;
    vec4 _t0E28 = [_t0E24, _t0E25, _t0E26, _t0E27];
    real _t0E29 = -0.1e1;
    real _t0E2A = 0.e0;
    real _t0E2B = 0.e0;
    real _t0E2C = 0.e0;
    vec4 _t0E2D = [_t0E29, _t0E2A, _t0E2B, _t0E2C];
    real _t0E2E = 0.e0;
    real _t0E2F = -0.1e1;
    real _t0E30 = 0.e0;
    real _t0E31 = 0.1e1;
    vec4 _t0E32 = [_t0E2E, _t0E2F, _t0E30, _t0E31];
    real _t0E33 = 0.e0;
    real _t0E34 = 0.e0;
    real _t0E35 = 0.e0;
    real _t0E36 = 0.1e1;
    vec4 _t0E37 = [_t0E33, _t0E34, _t0E35, _t0E36];
    tensor[4,4] _t0E38 = [_t0E28, _t0E2D, _t0E32, _t0E37];
    real _t0E39 = -0.1e1;
    real _t0E3A = 0.e0;
    real _t0E3B = 0.e0;
    real _t0E3C = 0.e0;
    vec4 _t0E3D = [_t0E39, _t0E3A, _t0E3B, _t0E3C];
    real _t0E3E = 0.e0;
    real _t0E3F = -0.1e1;
    real _t0E40 = 0.e0;
    real _t0E41 = 0.e0;
    vec4 _t0E42 = [_t0E3E, _t0E3F, _t0E40, _t0E41];
    real _t0E43 = 0.e0;
    real _t0E44 = 0.e0;
    real _t0E45 = 0.1e1;
    real _t0E46 = 0.e0;
    vec4 _t0E47 = [_t0E43, _t0E44, _t0E45, _t0E46];
    real _t0E48 = 0.e0;
    real _t0E49 = 0.e0;
    real _t0E4A = 0.e0;
    real _t0E4B = 0.1e1;
    vec4 _t0E4C = [_t0E48, _t0E49, _t0E4A, _t0E4B];
    tensor[4,4] _t0E4D = [_t0E3D, _t0E42, _t0E47, _t0E4C];
    real _t0E4E = 0.e0;
    real _t0E4F = 0.1e1;
    real _t0E50 = 0.e0;
    real _t0E51 = 0.e0;
    vec4 _t0E52 = [_t0E4E, _t0E4F, _t0E50, _t0E51];
    real _t0E53 = -0.1e1;
    real _t0E54 = 0.e0;
    real _t0E55 = 0.e0;
    real _t0E56 = 0.e0;
    vec4 _t0E57 = [_t0E53, _t0E54, _t0E55, _t0E56];
    real _t0E58 = 0.e0;
    real _t0E59 = 0.e0;
    real _t0E5A = 0.1e1;
    real _t0E5B = 0.e0;
    vec4 _t0E5C = [_t0E58, _t0E59, _t0E5A, _t0E5B];
    real _t0E5D = 0.e0;
    real _t0E5E = 0.e0;
    real _t0E5F = 0.e0;
    real _t0E60 = 0.1e1;
    vec4 _t0E61 = [_t0E5D, _t0E5E, _t0E5F, _t0E60];
    tensor[4,4] _t0E62 = [_t0E52, _t0E57, _t0E5C, _t0E61];
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.e0;
    real _t0E65 = 0.e0;
    real _t0E66 = 0.e0;
    vec4 _t0E67 = [_t0E63, _t0E64, _t0E65, _t0E66];
    real _t0E68 = 0.e0;
    real _t0E69 = 0.1e1;
    real _t0E6A = 0.e0;
    real _t0E6B = 0.e0;
    vec4 _t0E6C = [_t0E68, _t0E69, _t0E6A, _t0E6B];
    real _t0E6D = 0.e0;
    real _t0E6E = 0.e0;
    real _t0E6F = 0.1e1;
    real _t0E70 = 0.e0;
    vec4 _t0E71 = [_t0E6D, _t0E6E, _t0E6F, _t0E70];
    real _t0E72 = 0.e0;
    real _t0E73 = 0.e0;
    real _t0E74 = 0.e0;
    real _t0E75 = 0.1e1;
    vec4 _t0E76 = [_t0E72, _t0E73, _t0E74, _t0E75];
    tensor[4,4] _t0E77 = [_t0E67, _t0E6C, _t0E71, _t0E76];
    real _t0E78 = 0.e0;
    real _t0E79 = -0.1e1;
    real _t0E7A = 0.e0;
    real _t0E7B = 0.e0;
    vec4 _t0E7C = [_t0E78, _t0E79, _t0E7A, _t0E7B];
    real _t0E7D = 0.1e1;
    real _t0E7E = 0.e0;
    real _t0E7F = 0.e0;
    real _t0E80 = 0.e0;
    vec4 _t0E81 = [_t0E7D, _t0E7E, _t0E7F, _t0E80];
    real _t0E82 = 0.e0;
    real _t0E83 = 0.e0;
    real _t0E84 = 0.1e1;
    real _t0E85 = 0.e0;
    vec4 _t0E86 = [_t0E82, _t0E83, _t0E84, _t0E85];
    real _t0E87 = 0.e0;
    real _t0E88 = 0.e0;
    real _t0E89 = 0.e0;
    real _t0E8A = 0.1e1;
    vec4 _t0E8B = [_t0E87, _t0E88, _t0E89, _t0E8A];
    tensor[4,4] _t0E8C = [_t0E7C, _t0E81, _t0E86, _t0E8B];
    tensor[4,4][6] _t0E8D = {_t0E23, _t0E38, _t0E4D, _t0E62, _t0E77, _t0E8C};
    real _t0E8E = 0.e0;
    real _t0E8F = -0.1e1;
    real _t0E90 = 0.1e1;
    real _t0E91 = 0.5e0;
    vec4 _t0E92 = [_t0E8E, _t0E8F, _t0E90, _t0E91];
    real _t0E93 = 0.e0;
    real _t0E94 = -0.1e1;
    real _t0E95 = 0.e0;
    real _t0E96 = 0.e0;
    vec4 _t0E97 = [_t0E93, _t0E94, _t0E95, _t0E96];
    real _t0E98 = 0.1e1;
    real _t0E99 = 0.e0;
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    vec4 _t0E9C = [_t0E98, _t0E99, _t0E9A, _t0E9B];
    real _t0E9D = 0.e0;
    real _t0E9E = 0.e0;
    real _t0E9F = 0.e0;
    real _t0EA0 = 0.1e1;
    vec4 _t0EA1 = [_t0E9D, _t0E9E, _t0E9F, _t0EA0];
    tensor[4,4] _t0EA2 = [_t0E92, _t0E97, _t0E9C, _t0EA1];
    real _t0EA3 = 0.e0;
    real _t0EA4 = -0.1e1;
    real _t0EA5 = 0.1e1;
    real _t0EA6 = 0.5e0;
    vec4 _t0EA7 = [_t0EA3, _t0EA4, _t0EA5, _t0EA6];
    real _t0EA8 = 0.e0;
    real _t0EA9 = -0.1e1;
    real _t0EAA = 0.e0;
    real _t0EAB = 0.e0;
    vec4 _t0EAC = [_t0EA8, _t0EA9, _t0EAA, _t0EAB];
    real _t0EAD = 0.1e1;
    real _t0EAE = 0.e0;
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.1e1;
    vec4 _t0EB1 = [_t0EAD, _t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.e0;
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.1e1;
    vec4 _t0EB6 = [_t0EB2, _t0EB3, _t0EB4, _t0EB5];
    tensor[4,4] _t0EB7 = [_t0EA7, _t0EAC, _t0EB1, _t0EB6];
    real _t0EB8 = 0.e0;
    real _t0EB9 = -0.1e1;
    real _t0EBA = 0.e0;
    real _t0EBB = 0.e0;
    vec4 _t0EBC = [_t0EB8, _t0EB9, _t0EBA, _t0EBB];
    real _t0EBD = 0.1e1;
    real _t0EBE = 0.e0;
    real _t0EBF = 0.e0;
    real _t0EC0 = 0.e0;
    vec4 _t0EC1 = [_t0EBD, _t0EBE, _t0EBF, _t0EC0];
    real _t0EC2 = 0.e0;
    real _t0EC3 = 0.e0;
    real _t0EC4 = 0.1e1;
    real _t0EC5 = 0.e0;
    vec4 _t0EC6 = [_t0EC2, _t0EC3, _t0EC4, _t0EC5];
    real _t0EC7 = 0.e0;
    real _t0EC8 = 0.e0;
    real _t0EC9 = 0.e0;
    real _t0ECA = 0.1e1;
    vec4 _t0ECB = [_t0EC7, _t0EC8, _t0EC9, _t0ECA];
    tensor[4,4] _t0ECC = [_t0EBC, _t0EC1, _t0EC6, _t0ECB];
    real _t0ECD = -0.1e1;
    real _t0ECE = 0.e0;
    real _t0ECF = 0.e0;
    real _t0ED0 = 0.e0;
    vec4 _t0ED1 = [_t0ECD, _t0ECE, _t0ECF, _t0ED0];
    real _t0ED2 = 0.e0;
    real _t0ED3 = -0.1e1;
    real _t0ED4 = 0.e0;
    real _t0ED5 = 0.e0;
    vec4 _t0ED6 = [_t0ED2, _t0ED3, _t0ED4, _t0ED5];
    real _t0ED7 = 0.e0;
    real _t0ED8 = 0.e0;
    real _t0ED9 = 0.1e1;
    real _t0EDA = 0.e0;
    vec4 _t0EDB = [_t0ED7, _t0ED8, _t0ED9, _t0EDA];
    real _t0EDC = 0.e0;
    real _t0EDD = 0.e0;
    real _t0EDE = 0.e0;
    real _t0EDF = 0.1e1;
    vec4 _t0EE0 = [_t0EDC, _t0EDD, _t0EDE, _t0EDF];
    tensor[4,4] _t0EE1 = [_t0ED1, _t0ED6, _t0EDB, _t0EE0];
    real _t0EE2 = 0.e0;
    real _t0EE3 = 0.1e1;
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
    real _t0EE7 = -0.1e1;
    real _t0EE8 = 0.e0;
    real _t0EE9 = 0.e0;
    real _t0EEA = 0.e0;
    vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    real _t0EEE = 0.1e1;
    real _t0EEF = 0.e0;
    vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
    real _t0EF1 = 0.e0;
    real _t0EF2 = 0.e0;
    real _t0EF3 = 0.e0;
    real _t0EF4 = 0.1e1;
    vec4 _t0EF5 = [_t0EF1, _t0EF2, _t0EF3, _t0EF4];
    tensor[4,4] _t0EF6 = [_t0EE6, _t0EEB, _t0EF0, _t0EF5];
    real _t0EF7 = 0.1e1;
    real _t0EF8 = 0.e0;
    real _t0EF9 = 0.e0;
    real _t0EFA = 0.e0;
    vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
    real _t0EFC = 0.e0;
    real _t0EFD = 0.1e1;
    real _t0EFE = 0.e0;
    real _t0EFF = 0.e0;
    vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
    real _t0F01 = 0.e0;
    real _t0F02 = 0.e0;
    real _t0F03 = 0.1e1;
    real _t0F04 = 0.e0;
    vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
    real _t0F06 = 0.e0;
    real _t0F07 = 0.e0;
    real _t0F08 = 0.e0;
    real _t0F09 = 0.1e1;
    vec4 _t0F0A = [_t0F06, _t0F07, _t0F08, _t0F09];
    tensor[4,4] _t0F0B = [_t0EFB, _t0F00, _t0F05, _t0F0A];
    tensor[4,4][6] _t0F0C = {_t0EA2, _t0EB7, _t0ECC, _t0EE1, _t0EF6, _t0F0B};
    tensor[4,4][6][6] _t0F0D = {_t0C91, _t0D10, _t0D8F, _t0E0E, _t0E8D, _t0F0C};
    real _t0F0E = time05E1[1];
    int _t0F0F = prim $r2i01B7 (_t0F0E);
    tensor[4,4][6] _t0F10 = prim $sub01C0<tensor[4,4][6]; %6> (_t0F0D, _t0F0F);
    real _t0F11 = time05E1[1];
    int _t0F12 = prim $r2i01B7 (_t0F11);
    int[2] _t0F13 = func nextCell405E5 (_t0F12, cellId05DE, mesh05DD);
    int _t0F14 = 1;
    int _t0F15 = prim $sub01C0<int; %2> (_t0F13, _t0F14);
    tensor[4,4] _t0F16 = prim $sub01C0<tensor[4,4]; %6> (_t0F10, _t0F15);
    real _t0F17 = time05E1[0];
    vec3 _t0F18 = prim *0036<$[3]> (_t0F17, dPos05E0);
    vec3 _t0F19 = prim +0017<$[3]> (_t0F18, refPos05DF);
    real _t0F1A = _t0F19[0];
    real _t0F1B = time05E1[0];
    vec3 _t0F1C = prim *0036<$[3]> (_t0F1B, dPos05E0);
    vec3 _t0F1D = prim +0017<$[3]> (_t0F1C, refPos05DF);
    real _t0F1E = _t0F1D[1];
    real _t0F1F = time05E1[0];
    vec3 _t0F20 = prim *0036<$[3]> (_t0F1F, dPos05E0);
    vec3 _t0F21 = prim +0017<$[3]> (_t0F20, refPos05DF);
    real _t0F22 = _t0F21[2];
    real _t0F23 = 0.1e1;
    vec4 _t0F24 = [_t0F1A, _t0F1E, _t0F22, _t0F23];
    vec4 _t0F25 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0F16, _t0F24);
    real _t0F26 = _t0F25[1];
    real _t0F27 = 0.1e1;
    real _t0F28 = 0.e0;
    real _t0F29 = 0.e0;
    real _t0F2A = 0.e0;
    vec4 _t0F2B = [_t0F27, _t0F28, _t0F29, _t0F2A];
    real _t0F2C = 0.e0;
    real _t0F2D = 0.1e1;
    real _t0F2E = 0.e0;
    real _t0F2F = 0.e0;
    vec4 _t0F30 = [_t0F2C, _t0F2D, _t0F2E, _t0F2F];
    real _t0F31 = 0.e0;
    real _t0F32 = 0.e0;
    real _t0F33 = 0.1e1;
    real _t0F34 = 0.e0;
    vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
    real _t0F36 = 0.e0;
    real _t0F37 = 0.e0;
    real _t0F38 = 0.e0;
    real _t0F39 = 0.1e1;
    vec4 _t0F3A = [_t0F36, _t0F37, _t0F38, _t0F39];
    tensor[4,4] _t0F3B = [_t0F2B, _t0F30, _t0F35, _t0F3A];
    real _t0F3C = 0.1e1;
    real _t0F3D = 0.e0;
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    vec4 _t0F40 = [_t0F3C, _t0F3D, _t0F3E, _t0F3F];
    real _t0F41 = 0.e0;
    real _t0F42 = 0.1e1;
    real _t0F43 = 0.e0;
    real _t0F44 = 0.e0;
    vec4 _t0F45 = [_t0F41, _t0F42, _t0F43, _t0F44];
    real _t0F46 = 0.e0;
    real _t0F47 = 0.e0;
    real _t0F48 = 0.1e1;
    real _t0F49 = 0.1e1;
    vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
    real _t0F4B = 0.e0;
    real _t0F4C = 0.e0;
    real _t0F4D = 0.e0;
    real _t0F4E = 0.1e1;
    vec4 _t0F4F = [_t0F4B, _t0F4C, _t0F4D, _t0F4E];
    tensor[4,4] _t0F50 = [_t0F40, _t0F45, _t0F4A, _t0F4F];
    real _t0F51 = 0.e0;
    real _t0F52 = 0.1e1;
    real _t0F53 = 0.e0;
    real _t0F54 = 0.e0;
    vec4 _t0F55 = [_t0F51, _t0F52, _t0F53, _t0F54];
    real _t0F56 = 0.e0;
    real _t0F57 = 0.e0;
    real _t0F58 = 0.1e1;
    real _t0F59 = 0.e0;
    vec4 _t0F5A = [_t0F56, _t0F57, _t0F58, _t0F59];
    real _t0F5B = 0.1e1;
    real _t0F5C = -0.1e1;
    real _t0F5D = 0.e0;
    real _t0F5E = -0.5e0;
    vec4 _t0F5F = [_t0F5B, _t0F5C, _t0F5D, _t0F5E];
    real _t0F60 = 0.e0;
    real _t0F61 = 0.e0;
    real _t0F62 = 0.e0;
    real _t0F63 = 0.1e1;
    vec4 _t0F64 = [_t0F60, _t0F61, _t0F62, _t0F63];
    tensor[4,4] _t0F65 = [_t0F55, _t0F5A, _t0F5F, _t0F64];
    real _t0F66 = 0.e0;
    real _t0F67 = 0.e0;
    real _t0F68 = -0.1e1;
    real _t0F69 = 0.e0;
    vec4 _t0F6A = [_t0F66, _t0F67, _t0F68, _t0F69];
    real _t0F6B = 0.e0;
    real _t0F6C = 0.1e1;
    real _t0F6D = 0.e0;
    real _t0F6E = 0.e0;
    vec4 _t0F6F = [_t0F6B, _t0F6C, _t0F6D, _t0F6E];
    real _t0F70 = 0.1e1;
    real _t0F71 = -0.1e1;
    real _t0F72 = 0.e0;
    real _t0F73 = -0.5e0;
    vec4 _t0F74 = [_t0F70, _t0F71, _t0F72, _t0F73];
    real _t0F75 = 0.e0;
    real _t0F76 = 0.e0;
    real _t0F77 = 0.e0;
    real _t0F78 = 0.1e1;
    vec4 _t0F79 = [_t0F75, _t0F76, _t0F77, _t0F78];
    tensor[4,4] _t0F7A = [_t0F6A, _t0F6F, _t0F74, _t0F79];
    real _t0F7B = 0.e0;
    real _t0F7C = -0.1e1;
    real _t0F7D = 0.e0;
    real _t0F7E = 0.e0;
    vec4 _t0F7F = [_t0F7B, _t0F7C, _t0F7D, _t0F7E];
    real _t0F80 = 0.e0;
    real _t0F81 = 0.e0;
    real _t0F82 = -0.1e1;
    real _t0F83 = 0.e0;
    vec4 _t0F84 = [_t0F80, _t0F81, _t0F82, _t0F83];
    real _t0F85 = 0.1e1;
    real _t0F86 = -0.1e1;
    real _t0F87 = 0.e0;
    real _t0F88 = -0.5e0;
    vec4 _t0F89 = [_t0F85, _t0F86, _t0F87, _t0F88];
    real _t0F8A = 0.e0;
    real _t0F8B = 0.e0;
    real _t0F8C = 0.e0;
    real _t0F8D = 0.1e1;
    vec4 _t0F8E = [_t0F8A, _t0F8B, _t0F8C, _t0F8D];
    tensor[4,4] _t0F8F = [_t0F7F, _t0F84, _t0F89, _t0F8E];
    real _t0F90 = 0.e0;
    real _t0F91 = 0.e0;
    real _t0F92 = 0.1e1;
    real _t0F93 = 0.e0;
    vec4 _t0F94 = [_t0F90, _t0F91, _t0F92, _t0F93];
    real _t0F95 = 0.e0;
    real _t0F96 = -0.1e1;
    real _t0F97 = 0.e0;
    real _t0F98 = 0.e0;
    vec4 _t0F99 = [_t0F95, _t0F96, _t0F97, _t0F98];
    real _t0F9A = 0.1e1;
    real _t0F9B = -0.1e1;
    real _t0F9C = 0.e0;
    real _t0F9D = -0.5e0;
    vec4 _t0F9E = [_t0F9A, _t0F9B, _t0F9C, _t0F9D];
    real _t0F9F = 0.e0;
    real _t0FA0 = 0.e0;
    real _t0FA1 = 0.e0;
    real _t0FA2 = 0.1e1;
    vec4 _t0FA3 = [_t0F9F, _t0FA0, _t0FA1, _t0FA2];
    tensor[4,4] _t0FA4 = [_t0F94, _t0F99, _t0F9E, _t0FA3];
    tensor[4,4][6] _t0FA5 = {_t0F3B, _t0F50, _t0F65, _t0F7A, _t0F8F, _t0FA4};
    real _t0FA6 = 0.1e1;
    real _t0FA7 = 0.e0;
    real _t0FA8 = 0.e0;
    real _t0FA9 = 0.e0;
    vec4 _t0FAA = [_t0FA6, _t0FA7, _t0FA8, _t0FA9];
    real _t0FAB = 0.e0;
    real _t0FAC = 0.1e1;
    real _t0FAD = 0.e0;
    real _t0FAE = 0.e0;
    vec4 _t0FAF = [_t0FAB, _t0FAC, _t0FAD, _t0FAE];
    real _t0FB0 = 0.e0;
    real _t0FB1 = 0.e0;
    real _t0FB2 = 0.1e1;
    real _t0FB3 = -0.1e1;
    vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
    real _t0FB5 = 0.e0;
    real _t0FB6 = 0.e0;
    real _t0FB7 = 0.e0;
    real _t0FB8 = 0.1e1;
    vec4 _t0FB9 = [_t0FB5, _t0FB6, _t0FB7, _t0FB8];
    tensor[4,4] _t0FBA = [_t0FAA, _t0FAF, _t0FB4, _t0FB9];
    real _t0FBB = 0.1e1;
    real _t0FBC = 0.e0;
    real _t0FBD = 0.e0;
    real _t0FBE = 0.e0;
    vec4 _t0FBF = [_t0FBB, _t0FBC, _t0FBD, _t0FBE];
    real _t0FC0 = 0.e0;
    real _t0FC1 = 0.1e1;
    real _t0FC2 = 0.e0;
    real _t0FC3 = 0.e0;
    vec4 _t0FC4 = [_t0FC0, _t0FC1, _t0FC2, _t0FC3];
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    real _t0FC7 = 0.1e1;
    real _t0FC8 = 0.e0;
    vec4 _t0FC9 = [_t0FC5, _t0FC6, _t0FC7, _t0FC8];
    real _t0FCA = 0.e0;
    real _t0FCB = 0.e0;
    real _t0FCC = 0.e0;
    real _t0FCD = 0.1e1;
    vec4 _t0FCE = [_t0FCA, _t0FCB, _t0FCC, _t0FCD];
    tensor[4,4] _t0FCF = [_t0FBF, _t0FC4, _t0FC9, _t0FCE];
    real _t0FD0 = 0.e0;
    real _t0FD1 = 0.1e1;
    real _t0FD2 = 0.e0;
    real _t0FD3 = 0.e0;
    vec4 _t0FD4 = [_t0FD0, _t0FD1, _t0FD2, _t0FD3];
    real _t0FD5 = 0.e0;
    real _t0FD6 = 0.e0;
    real _t0FD7 = 0.1e1;
    real _t0FD8 = -0.1e1;
    vec4 _t0FD9 = [_t0FD5, _t0FD6, _t0FD7, _t0FD8];
    real _t0FDA = 0.1e1;
    real _t0FDB = -0.1e1;
    real _t0FDC = 0.e0;
    real _t0FDD = -0.5e0;
    vec4 _t0FDE = [_t0FDA, _t0FDB, _t0FDC, _t0FDD];
    real _t0FDF = 0.e0;
    real _t0FE0 = 0.e0;
    real _t0FE1 = 0.e0;
    real _t0FE2 = 0.1e1;
    vec4 _t0FE3 = [_t0FDF, _t0FE0, _t0FE1, _t0FE2];
    tensor[4,4] _t0FE4 = [_t0FD4, _t0FD9, _t0FDE, _t0FE3];
    real _t0FE5 = 0.e0;
    real _t0FE6 = 0.e0;
    real _t0FE7 = -0.1e1;
    real _t0FE8 = 0.1e1;
    vec4 _t0FE9 = [_t0FE5, _t0FE6, _t0FE7, _t0FE8];
    real _t0FEA = 0.e0;
    real _t0FEB = 0.1e1;
    real _t0FEC = 0.e0;
    real _t0FED = 0.e0;
    vec4 _t0FEE = [_t0FEA, _t0FEB, _t0FEC, _t0FED];
    real _t0FEF = 0.1e1;
    real _t0FF0 = -0.1e1;
    real _t0FF1 = 0.e0;
    real _t0FF2 = -0.5e0;
    vec4 _t0FF3 = [_t0FEF, _t0FF0, _t0FF1, _t0FF2];
    real _t0FF4 = 0.e0;
    real _t0FF5 = 0.e0;
    real _t0FF6 = 0.e0;
    real _t0FF7 = 0.1e1;
    vec4 _t0FF8 = [_t0FF4, _t0FF5, _t0FF6, _t0FF7];
    tensor[4,4] _t0FF9 = [_t0FE9, _t0FEE, _t0FF3, _t0FF8];
    real _t0FFA = 0.e0;
    real _t0FFB = -0.1e1;
    real _t0FFC = 0.e0;
    real _t0FFD = 0.e0;
    vec4 _t0FFE = [_t0FFA, _t0FFB, _t0FFC, _t0FFD];
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = -0.1e1;
    real _t1002 = 0.1e1;
    vec4 _t1003 = [_t0FFF, _t1000, _t1001, _t1002];
    real _t1004 = 0.1e1;
    real _t1005 = -0.1e1;
    real _t1006 = 0.e0;
    real _t1007 = -0.5e0;
    vec4 _t1008 = [_t1004, _t1005, _t1006, _t1007];
    real _t1009 = 0.e0;
    real _t100A = 0.e0;
    real _t100B = 0.e0;
    real _t100C = 0.1e1;
    vec4 _t100D = [_t1009, _t100A, _t100B, _t100C];
    tensor[4,4] _t100E = [_t0FFE, _t1003, _t1008, _t100D];
    real _t100F = 0.e0;
    real _t1010 = 0.e0;
    real _t1011 = 0.1e1;
    real _t1012 = -0.1e1;
    vec4 _t1013 = [_t100F, _t1010, _t1011, _t1012];
    real _t1014 = 0.e0;
    real _t1015 = -0.1e1;
    real _t1016 = 0.e0;
    real _t1017 = 0.e0;
    vec4 _t1018 = [_t1014, _t1015, _t1016, _t1017];
    real _t1019 = 0.1e1;
    real _t101A = -0.1e1;
    real _t101B = 0.e0;
    real _t101C = -0.5e0;
    vec4 _t101D = [_t1019, _t101A, _t101B, _t101C];
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    real _t1021 = 0.1e1;
    vec4 _t1022 = [_t101E, _t101F, _t1020, _t1021];
    tensor[4,4] _t1023 = [_t1013, _t1018, _t101D, _t1022];
    tensor[4,4][6] _t1024 = {_t0FBA, _t0FCF, _t0FE4, _t0FF9, _t100E, _t1023};
    real _t1025 = 0.1e1;
    real _t1026 = 0.e0;
    real _t1027 = 0.1e1;
    real _t1028 = 0.5e0;
    vec4 _t1029 = [_t1025, _t1026, _t1027, _t1028];
    real _t102A = 0.1e1;
    real _t102B = 0.e0;
    real _t102C = 0.e0;
    real _t102D = 0.e0;
    vec4 _t102E = [_t102A, _t102B, _t102C, _t102D];
    real _t102F = 0.e0;
    real _t1030 = 0.1e1;
    real _t1031 = 0.e0;
    real _t1032 = 0.e0;
    vec4 _t1033 = [_t102F, _t1030, _t1031, _t1032];
    real _t1034 = 0.e0;
    real _t1035 = 0.e0;
    real _t1036 = 0.e0;
    real _t1037 = 0.1e1;
    vec4 _t1038 = [_t1034, _t1035, _t1036, _t1037];
    tensor[4,4] _t1039 = [_t1029, _t102E, _t1033, _t1038];
    real _t103A = 0.1e1;
    real _t103B = 0.e0;
    real _t103C = 0.1e1;
    real _t103D = 0.5e0;
    vec4 _t103E = [_t103A, _t103B, _t103C, _t103D];
    real _t103F = 0.1e1;
    real _t1040 = 0.e0;
    real _t1041 = 0.e0;
    real _t1042 = 0.e0;
    vec4 _t1043 = [_t103F, _t1040, _t1041, _t1042];
    real _t1044 = 0.e0;
    real _t1045 = 0.1e1;
    real _t1046 = 0.e0;
    real _t1047 = 0.1e1;
    vec4 _t1048 = [_t1044, _t1045, _t1046, _t1047];
    real _t1049 = 0.e0;
    real _t104A = 0.e0;
    real _t104B = 0.e0;
    real _t104C = 0.1e1;
    vec4 _t104D = [_t1049, _t104A, _t104B, _t104C];
    tensor[4,4] _t104E = [_t103E, _t1043, _t1048, _t104D];
    real _t104F = 0.1e1;
    real _t1050 = 0.e0;
    real _t1051 = 0.e0;
    real _t1052 = 0.e0;
    vec4 _t1053 = [_t104F, _t1050, _t1051, _t1052];
    real _t1054 = 0.e0;
    real _t1055 = 0.1e1;
    real _t1056 = 0.e0;
    real _t1057 = 0.e0;
    vec4 _t1058 = [_t1054, _t1055, _t1056, _t1057];
    real _t1059 = 0.e0;
    real _t105A = 0.e0;
    real _t105B = 0.1e1;
    real _t105C = 0.e0;
    vec4 _t105D = [_t1059, _t105A, _t105B, _t105C];
    real _t105E = 0.e0;
    real _t105F = 0.e0;
    real _t1060 = 0.e0;
    real _t1061 = 0.1e1;
    vec4 _t1062 = [_t105E, _t105F, _t1060, _t1061];
    tensor[4,4] _t1063 = [_t1053, _t1058, _t105D, _t1062];
    real _t1064 = 0.e0;
    real _t1065 = -0.1e1;
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    vec4 _t1068 = [_t1064, _t1065, _t1066, _t1067];
    real _t1069 = 0.1e1;
    real _t106A = 0.e0;
    real _t106B = 0.e0;
    real _t106C = 0.e0;
    vec4 _t106D = [_t1069, _t106A, _t106B, _t106C];
    real _t106E = 0.e0;
    real _t106F = 0.e0;
    real _t1070 = 0.1e1;
    real _t1071 = 0.e0;
    vec4 _t1072 = [_t106E, _t106F, _t1070, _t1071];
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    real _t1076 = 0.1e1;
    vec4 _t1077 = [_t1073, _t1074, _t1075, _t1076];
    tensor[4,4] _t1078 = [_t1068, _t106D, _t1072, _t1077];
    real _t1079 = -0.1e1;
    real _t107A = 0.e0;
    real _t107B = 0.e0;
    real _t107C = 0.e0;
    vec4 _t107D = [_t1079, _t107A, _t107B, _t107C];
    real _t107E = 0.e0;
    real _t107F = -0.1e1;
    real _t1080 = 0.e0;
    real _t1081 = 0.e0;
    vec4 _t1082 = [_t107E, _t107F, _t1080, _t1081];
    real _t1083 = 0.e0;
    real _t1084 = 0.e0;
    real _t1085 = 0.1e1;
    real _t1086 = 0.e0;
    vec4 _t1087 = [_t1083, _t1084, _t1085, _t1086];
    real _t1088 = 0.e0;
    real _t1089 = 0.e0;
    real _t108A = 0.e0;
    real _t108B = 0.1e1;
    vec4 _t108C = [_t1088, _t1089, _t108A, _t108B];
    tensor[4,4] _t108D = [_t107D, _t1082, _t1087, _t108C];
    real _t108E = 0.e0;
    real _t108F = 0.1e1;
    real _t1090 = 0.e0;
    real _t1091 = 0.e0;
    vec4 _t1092 = [_t108E, _t108F, _t1090, _t1091];
    real _t1093 = -0.1e1;
    real _t1094 = 0.e0;
    real _t1095 = 0.e0;
    real _t1096 = 0.e0;
    vec4 _t1097 = [_t1093, _t1094, _t1095, _t1096];
    real _t1098 = 0.e0;
    real _t1099 = 0.e0;
    real _t109A = 0.1e1;
    real _t109B = 0.e0;
    vec4 _t109C = [_t1098, _t1099, _t109A, _t109B];
    real _t109D = 0.e0;
    real _t109E = 0.e0;
    real _t109F = 0.e0;
    real _t10A0 = 0.1e1;
    vec4 _t10A1 = [_t109D, _t109E, _t109F, _t10A0];
    tensor[4,4] _t10A2 = [_t1092, _t1097, _t109C, _t10A1];
    tensor[4,4][6] _t10A3 = {_t1039, _t104E, _t1063, _t1078, _t108D, _t10A2};
    real _t10A4 = 0.e0;
    real _t10A5 = 0.1e1;
    real _t10A6 = 0.1e1;
    real _t10A7 = 0.5e0;
    vec4 _t10A8 = [_t10A4, _t10A5, _t10A6, _t10A7];
    real _t10A9 = 0.e0;
    real _t10AA = 0.1e1;
    real _t10AB = 0.e0;
    real _t10AC = 0.e0;
    vec4 _t10AD = [_t10A9, _t10AA, _t10AB, _t10AC];
    real _t10AE = -0.1e1;
    real _t10AF = 0.e0;
    real _t10B0 = 0.e0;
    real _t10B1 = 0.e0;
    vec4 _t10B2 = [_t10AE, _t10AF, _t10B0, _t10B1];
    real _t10B3 = 0.e0;
    real _t10B4 = 0.e0;
    real _t10B5 = 0.e0;
    real _t10B6 = 0.1e1;
    vec4 _t10B7 = [_t10B3, _t10B4, _t10B5, _t10B6];
    tensor[4,4] _t10B8 = [_t10A8, _t10AD, _t10B2, _t10B7];
    real _t10B9 = 0.e0;
    real _t10BA = 0.1e1;
    real _t10BB = 0.1e1;
    real _t10BC = 0.5e0;
    vec4 _t10BD = [_t10B9, _t10BA, _t10BB, _t10BC];
    real _t10BE = 0.e0;
    real _t10BF = 0.1e1;
    real _t10C0 = 0.e0;
    real _t10C1 = 0.e0;
    vec4 _t10C2 = [_t10BE, _t10BF, _t10C0, _t10C1];
    real _t10C3 = -0.1e1;
    real _t10C4 = 0.e0;
    real _t10C5 = 0.e0;
    real _t10C6 = 0.1e1;
    vec4 _t10C7 = [_t10C3, _t10C4, _t10C5, _t10C6];
    real _t10C8 = 0.e0;
    real _t10C9 = 0.e0;
    real _t10CA = 0.e0;
    real _t10CB = 0.1e1;
    vec4 _t10CC = [_t10C8, _t10C9, _t10CA, _t10CB];
    tensor[4,4] _t10CD = [_t10BD, _t10C2, _t10C7, _t10CC];
    real _t10CE = 0.e0;
    real _t10CF = 0.1e1;
    real _t10D0 = 0.e0;
    real _t10D1 = 0.e0;
    vec4 _t10D2 = [_t10CE, _t10CF, _t10D0, _t10D1];
    real _t10D3 = -0.1e1;
    real _t10D4 = 0.e0;
    real _t10D5 = 0.e0;
    real _t10D6 = 0.e0;
    vec4 _t10D7 = [_t10D3, _t10D4, _t10D5, _t10D6];
    real _t10D8 = 0.e0;
    real _t10D9 = 0.e0;
    real _t10DA = 0.1e1;
    real _t10DB = 0.e0;
    vec4 _t10DC = [_t10D8, _t10D9, _t10DA, _t10DB];
    real _t10DD = 0.e0;
    real _t10DE = 0.e0;
    real _t10DF = 0.e0;
    real _t10E0 = 0.1e1;
    vec4 _t10E1 = [_t10DD, _t10DE, _t10DF, _t10E0];
    tensor[4,4] _t10E2 = [_t10D2, _t10D7, _t10DC, _t10E1];
    real _t10E3 = 0.1e1;
    real _t10E4 = 0.e0;
    real _t10E5 = 0.e0;
    real _t10E6 = 0.e0;
    vec4 _t10E7 = [_t10E3, _t10E4, _t10E5, _t10E6];
    real _t10E8 = 0.e0;
    real _t10E9 = 0.1e1;
    real _t10EA = 0.e0;
    real _t10EB = 0.e0;
    vec4 _t10EC = [_t10E8, _t10E9, _t10EA, _t10EB];
    real _t10ED = 0.e0;
    real _t10EE = 0.e0;
    real _t10EF = 0.1e1;
    real _t10F0 = 0.e0;
    vec4 _t10F1 = [_t10ED, _t10EE, _t10EF, _t10F0];
    real _t10F2 = 0.e0;
    real _t10F3 = 0.e0;
    real _t10F4 = 0.e0;
    real _t10F5 = 0.1e1;
    vec4 _t10F6 = [_t10F2, _t10F3, _t10F4, _t10F5];
    tensor[4,4] _t10F7 = [_t10E7, _t10EC, _t10F1, _t10F6];
    real _t10F8 = 0.e0;
    real _t10F9 = -0.1e1;
    real _t10FA = 0.e0;
    real _t10FB = 0.e0;
    vec4 _t10FC = [_t10F8, _t10F9, _t10FA, _t10FB];
    real _t10FD = 0.1e1;
    real _t10FE = 0.e0;
    real _t10FF = 0.e0;
    real _t1100 = 0.e0;
    vec4 _t1101 = [_t10FD, _t10FE, _t10FF, _t1100];
    real _t1102 = 0.e0;
    real _t1103 = 0.e0;
    real _t1104 = 0.1e1;
    real _t1105 = 0.e0;
    vec4 _t1106 = [_t1102, _t1103, _t1104, _t1105];
    real _t1107 = 0.e0;
    real _t1108 = 0.e0;
    real _t1109 = 0.e0;
    real _t110A = 0.1e1;
    vec4 _t110B = [_t1107, _t1108, _t1109, _t110A];
    tensor[4,4] _t110C = [_t10FC, _t1101, _t1106, _t110B];
    real _t110D = -0.1e1;
    real _t110E = 0.e0;
    real _t110F = 0.e0;
    real _t1110 = 0.e0;
    vec4 _t1111 = [_t110D, _t110E, _t110F, _t1110];
    real _t1112 = 0.e0;
    real _t1113 = -0.1e1;
    real _t1114 = 0.e0;
    real _t1115 = 0.e0;
    vec4 _t1116 = [_t1112, _t1113, _t1114, _t1115];
    real _t1117 = 0.e0;
    real _t1118 = 0.e0;
    real _t1119 = 0.1e1;
    real _t111A = 0.e0;
    vec4 _t111B = [_t1117, _t1118, _t1119, _t111A];
    real _t111C = 0.e0;
    real _t111D = 0.e0;
    real _t111E = 0.e0;
    real _t111F = 0.1e1;
    vec4 _t1120 = [_t111C, _t111D, _t111E, _t111F];
    tensor[4,4] _t1121 = [_t1111, _t1116, _t111B, _t1120];
    tensor[4,4][6] _t1122 = {_t10B8, _t10CD, _t10E2, _t10F7, _t110C, _t1121};
    real _t1123 = -0.1e1;
    real _t1124 = 0.e0;
    real _t1125 = 0.1e1;
    real _t1126 = 0.5e0;
    vec4 _t1127 = [_t1123, _t1124, _t1125, _t1126];
    real _t1128 = -0.1e1;
    real _t1129 = 0.e0;
    real _t112A = 0.e0;
    real _t112B = 0.e0;
    vec4 _t112C = [_t1128, _t1129, _t112A, _t112B];
    real _t112D = 0.e0;
    real _t112E = -0.1e1;
    real _t112F = 0.e0;
    real _t1130 = 0.e0;
    vec4 _t1131 = [_t112D, _t112E, _t112F, _t1130];
    real _t1132 = 0.e0;
    real _t1133 = 0.e0;
    real _t1134 = 0.e0;
    real _t1135 = 0.1e1;
    vec4 _t1136 = [_t1132, _t1133, _t1134, _t1135];
    tensor[4,4] _t1137 = [_t1127, _t112C, _t1131, _t1136];
    real _t1138 = -0.1e1;
    real _t1139 = 0.e0;
    real _t113A = 0.1e1;
    real _t113B = 0.5e0;
    vec4 _t113C = [_t1138, _t1139, _t113A, _t113B];
    real _t113D = -0.1e1;
    real _t113E = 0.e0;
    real _t113F = 0.e0;
    real _t1140 = 0.e0;
    vec4 _t1141 = [_t113D, _t113E, _t113F, _t1140];
    real _t1142 = 0.e0;
    real _t1143 = -0.1e1;
    real _t1144 = 0.e0;
    real _t1145 = 0.1e1;
    vec4 _t1146 = [_t1142, _t1143, _t1144, _t1145];
    real _t1147 = 0.e0;
    real _t1148 = 0.e0;
    real _t1149 = 0.e0;
    real _t114A = 0.1e1;
    vec4 _t114B = [_t1147, _t1148, _t1149, _t114A];
    tensor[4,4] _t114C = [_t113C, _t1141, _t1146, _t114B];
    real _t114D = -0.1e1;
    real _t114E = 0.e0;
    real _t114F = 0.e0;
    real _t1150 = 0.e0;
    vec4 _t1151 = [_t114D, _t114E, _t114F, _t1150];
    real _t1152 = 0.e0;
    real _t1153 = -0.1e1;
    real _t1154 = 0.e0;
    real _t1155 = 0.e0;
    vec4 _t1156 = [_t1152, _t1153, _t1154, _t1155];
    real _t1157 = 0.e0;
    real _t1158 = 0.e0;
    real _t1159 = 0.1e1;
    real _t115A = 0.e0;
    vec4 _t115B = [_t1157, _t1158, _t1159, _t115A];
    real _t115C = 0.e0;
    real _t115D = 0.e0;
    real _t115E = 0.e0;
    real _t115F = 0.1e1;
    vec4 _t1160 = [_t115C, _t115D, _t115E, _t115F];
    tensor[4,4] _t1161 = [_t1151, _t1156, _t115B, _t1160];
    real _t1162 = 0.e0;
    real _t1163 = 0.1e1;
    real _t1164 = 0.e0;
    real _t1165 = 0.e0;
    vec4 _t1166 = [_t1162, _t1163, _t1164, _t1165];
    real _t1167 = -0.1e1;
    real _t1168 = 0.e0;
    real _t1169 = 0.e0;
    real _t116A = 0.e0;
    vec4 _t116B = [_t1167, _t1168, _t1169, _t116A];
    real _t116C = 0.e0;
    real _t116D = 0.e0;
    real _t116E = 0.1e1;
    real _t116F = 0.e0;
    vec4 _t1170 = [_t116C, _t116D, _t116E, _t116F];
    real _t1171 = 0.e0;
    real _t1172 = 0.e0;
    real _t1173 = 0.e0;
    real _t1174 = 0.1e1;
    vec4 _t1175 = [_t1171, _t1172, _t1173, _t1174];
    tensor[4,4] _t1176 = [_t1166, _t116B, _t1170, _t1175];
    real _t1177 = 0.1e1;
    real _t1178 = 0.e0;
    real _t1179 = 0.e0;
    real _t117A = 0.e0;
    vec4 _t117B = [_t1177, _t1178, _t1179, _t117A];
    real _t117C = 0.e0;
    real _t117D = 0.1e1;
    real _t117E = 0.e0;
    real _t117F = 0.e0;
    vec4 _t1180 = [_t117C, _t117D, _t117E, _t117F];
    real _t1181 = 0.e0;
    real _t1182 = 0.e0;
    real _t1183 = 0.1e1;
    real _t1184 = 0.e0;
    vec4 _t1185 = [_t1181, _t1182, _t1183, _t1184];
    real _t1186 = 0.e0;
    real _t1187 = 0.e0;
    real _t1188 = 0.e0;
    real _t1189 = 0.1e1;
    vec4 _t118A = [_t1186, _t1187, _t1188, _t1189];
    tensor[4,4] _t118B = [_t117B, _t1180, _t1185, _t118A];
    real _t118C = 0.e0;
    real _t118D = -0.1e1;
    real _t118E = 0.e0;
    real _t118F = 0.e0;
    vec4 _t1190 = [_t118C, _t118D, _t118E, _t118F];
    real _t1191 = 0.1e1;
    real _t1192 = 0.e0;
    real _t1193 = 0.e0;
    real _t1194 = 0.e0;
    vec4 _t1195 = [_t1191, _t1192, _t1193, _t1194];
    real _t1196 = 0.e0;
    real _t1197 = 0.e0;
    real _t1198 = 0.1e1;
    real _t1199 = 0.e0;
    vec4 _t119A = [_t1196, _t1197, _t1198, _t1199];
    real _t119B = 0.e0;
    real _t119C = 0.e0;
    real _t119D = 0.e0;
    real _t119E = 0.1e1;
    vec4 _t119F = [_t119B, _t119C, _t119D, _t119E];
    tensor[4,4] _t11A0 = [_t1190, _t1195, _t119A, _t119F];
    tensor[4,4][6] _t11A1 = {_t1137, _t114C, _t1161, _t1176, _t118B, _t11A0};
    real _t11A2 = 0.e0;
    real _t11A3 = -0.1e1;
    real _t11A4 = 0.1e1;
    real _t11A5 = 0.5e0;
    vec4 _t11A6 = [_t11A2, _t11A3, _t11A4, _t11A5];
    real _t11A7 = 0.e0;
    real _t11A8 = -0.1e1;
    real _t11A9 = 0.e0;
    real _t11AA = 0.e0;
    vec4 _t11AB = [_t11A7, _t11A8, _t11A9, _t11AA];
    real _t11AC = 0.1e1;
    real _t11AD = 0.e0;
    real _t11AE = 0.e0;
    real _t11AF = 0.e0;
    vec4 _t11B0 = [_t11AC, _t11AD, _t11AE, _t11AF];
    real _t11B1 = 0.e0;
    real _t11B2 = 0.e0;
    real _t11B3 = 0.e0;
    real _t11B4 = 0.1e1;
    vec4 _t11B5 = [_t11B1, _t11B2, _t11B3, _t11B4];
    tensor[4,4] _t11B6 = [_t11A6, _t11AB, _t11B0, _t11B5];
    real _t11B7 = 0.e0;
    real _t11B8 = -0.1e1;
    real _t11B9 = 0.1e1;
    real _t11BA = 0.5e0;
    vec4 _t11BB = [_t11B7, _t11B8, _t11B9, _t11BA];
    real _t11BC = 0.e0;
    real _t11BD = -0.1e1;
    real _t11BE = 0.e0;
    real _t11BF = 0.e0;
    vec4 _t11C0 = [_t11BC, _t11BD, _t11BE, _t11BF];
    real _t11C1 = 0.1e1;
    real _t11C2 = 0.e0;
    real _t11C3 = 0.e0;
    real _t11C4 = 0.1e1;
    vec4 _t11C5 = [_t11C1, _t11C2, _t11C3, _t11C4];
    real _t11C6 = 0.e0;
    real _t11C7 = 0.e0;
    real _t11C8 = 0.e0;
    real _t11C9 = 0.1e1;
    vec4 _t11CA = [_t11C6, _t11C7, _t11C8, _t11C9];
    tensor[4,4] _t11CB = [_t11BB, _t11C0, _t11C5, _t11CA];
    real _t11CC = 0.e0;
    real _t11CD = -0.1e1;
    real _t11CE = 0.e0;
    real _t11CF = 0.e0;
    vec4 _t11D0 = [_t11CC, _t11CD, _t11CE, _t11CF];
    real _t11D1 = 0.1e1;
    real _t11D2 = 0.e0;
    real _t11D3 = 0.e0;
    real _t11D4 = 0.e0;
    vec4 _t11D5 = [_t11D1, _t11D2, _t11D3, _t11D4];
    real _t11D6 = 0.e0;
    real _t11D7 = 0.e0;
    real _t11D8 = 0.1e1;
    real _t11D9 = 0.e0;
    vec4 _t11DA = [_t11D6, _t11D7, _t11D8, _t11D9];
    real _t11DB = 0.e0;
    real _t11DC = 0.e0;
    real _t11DD = 0.e0;
    real _t11DE = 0.1e1;
    vec4 _t11DF = [_t11DB, _t11DC, _t11DD, _t11DE];
    tensor[4,4] _t11E0 = [_t11D0, _t11D5, _t11DA, _t11DF];
    real _t11E1 = -0.1e1;
    real _t11E2 = 0.e0;
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    vec4 _t11E5 = [_t11E1, _t11E2, _t11E3, _t11E4];
    real _t11E6 = 0.e0;
    real _t11E7 = -0.1e1;
    real _t11E8 = 0.e0;
    real _t11E9 = 0.e0;
    vec4 _t11EA = [_t11E6, _t11E7, _t11E8, _t11E9];
    real _t11EB = 0.e0;
    real _t11EC = 0.e0;
    real _t11ED = 0.1e1;
    real _t11EE = 0.e0;
    vec4 _t11EF = [_t11EB, _t11EC, _t11ED, _t11EE];
    real _t11F0 = 0.e0;
    real _t11F1 = 0.e0;
    real _t11F2 = 0.e0;
    real _t11F3 = 0.1e1;
    vec4 _t11F4 = [_t11F0, _t11F1, _t11F2, _t11F3];
    tensor[4,4] _t11F5 = [_t11E5, _t11EA, _t11EF, _t11F4];
    real _t11F6 = 0.e0;
    real _t11F7 = 0.1e1;
    real _t11F8 = 0.e0;
    real _t11F9 = 0.e0;
    vec4 _t11FA = [_t11F6, _t11F7, _t11F8, _t11F9];
    real _t11FB = -0.1e1;
    real _t11FC = 0.e0;
    real _t11FD = 0.e0;
    real _t11FE = 0.e0;
    vec4 _t11FF = [_t11FB, _t11FC, _t11FD, _t11FE];
    real _t1200 = 0.e0;
    real _t1201 = 0.e0;
    real _t1202 = 0.1e1;
    real _t1203 = 0.e0;
    vec4 _t1204 = [_t1200, _t1201, _t1202, _t1203];
    real _t1205 = 0.e0;
    real _t1206 = 0.e0;
    real _t1207 = 0.e0;
    real _t1208 = 0.1e1;
    vec4 _t1209 = [_t1205, _t1206, _t1207, _t1208];
    tensor[4,4] _t120A = [_t11FA, _t11FF, _t1204, _t1209];
    real _t120B = 0.1e1;
    real _t120C = 0.e0;
    real _t120D = 0.e0;
    real _t120E = 0.e0;
    vec4 _t120F = [_t120B, _t120C, _t120D, _t120E];
    real _t1210 = 0.e0;
    real _t1211 = 0.1e1;
    real _t1212 = 0.e0;
    real _t1213 = 0.e0;
    vec4 _t1214 = [_t1210, _t1211, _t1212, _t1213];
    real _t1215 = 0.e0;
    real _t1216 = 0.e0;
    real _t1217 = 0.1e1;
    real _t1218 = 0.e0;
    vec4 _t1219 = [_t1215, _t1216, _t1217, _t1218];
    real _t121A = 0.e0;
    real _t121B = 0.e0;
    real _t121C = 0.e0;
    real _t121D = 0.1e1;
    vec4 _t121E = [_t121A, _t121B, _t121C, _t121D];
    tensor[4,4] _t121F = [_t120F, _t1214, _t1219, _t121E];
    tensor[4,4][6] _t1220 = {_t11B6, _t11CB, _t11E0, _t11F5, _t120A, _t121F};
    tensor[4,4][6][6] _t1221 = {_t0FA5, _t1024, _t10A3, _t1122, _t11A1, _t1220};
    real _t1222 = time05E1[1];
    int _t1223 = prim $r2i01B7 (_t1222);
    tensor[4,4][6] _t1224 = prim $sub01C0<tensor[4,4][6]; %6> (_t1221, _t1223);
    real _t1225 = time05E1[1];
    int _t1226 = prim $r2i01B7 (_t1225);
    int[2] _t1227 = func nextCell405E5 (_t1226, cellId05DE, mesh05DD);
    int _t1228 = 1;
    int _t1229 = prim $sub01C0<int; %2> (_t1227, _t1228);
    tensor[4,4] _t122A = prim $sub01C0<tensor[4,4]; %6> (_t1224, _t1229);
    real _t122B = time05E1[0];
    vec3 _t122C = prim *0036<$[3]> (_t122B, dPos05E0);
    vec3 _t122D = prim +0017<$[3]> (_t122C, refPos05DF);
    real _t122E = _t122D[0];
    real _t122F = time05E1[0];
    vec3 _t1230 = prim *0036<$[3]> (_t122F, dPos05E0);
    vec3 _t1231 = prim +0017<$[3]> (_t1230, refPos05DF);
    real _t1232 = _t1231[1];
    real _t1233 = time05E1[0];
    vec3 _t1234 = prim *0036<$[3]> (_t1233, dPos05E0);
    vec3 _t1235 = prim +0017<$[3]> (_t1234, refPos05DF);
    real _t1236 = _t1235[2];
    real _t1237 = 0.1e1;
    vec4 _t1238 = [_t122E, _t1232, _t1236, _t1237];
    vec4 _t1239 = prim •00CE<$[4,4]; $[4]; $[4]> (_t122A, _t1238);
    real _t123A = _t1239[2];
    vec3 _t123B = [_t0C12, _t0F26, _t123A];
    real _t123C = time05E1[1];
    int _t123D = prim $r2i01B7 (_t123C);
    int[2] _t123E = func nextCell405E5 (_t123D, cellId05DE, mesh05DD);
    int _t123F = 1;
    int _t1240 = prim $sub01C0<int; %2> (_t123E, _t123F);
    Femdata: MeshPos _t1241 = extractFemItemN((mesh05DD, _t08FE, _t123B, _t1240),RefBuild(Mesh),);
    return _t1241;
  } else {
    real _t1242 = time05E1[0];
    vec3 _t1243 = prim *0036<$[3]> (_t1242, dPos05E0);
    vec3 _t1244 = prim +0017<$[3]> (_t1243, refPos05DF);
    Femdata: MeshPos _t1245 = extractFemItemN((mesh05DD, _t1244),InvalidBuildBoundary(MeshPos),);
    return _t1245;
  }
}
function int[2]#8 nextCell405E5 (int faceIdx1246, int cell1247, Femdata: Mesh mesh1248)
{
  int _t1249 = 12;
  int _t124A = prim *0033 (cell1247, _t1249);
  int _t124B = 2;
  int _t124C = prim *0033 (faceIdx1246, _t124B);
  int _t124D = prim +0015 (_t124A, _t124C);
  int[2] _t124E = extractFemItemN((mesh1248, _t124D),CellFaceCell(Mesh),);
  return _t124E;
}
function vec2#0 _enter124F (vec3 refPos1250, vec3 dPos1251)
{
  real time1252 = +inf;
  int face1253 = -1;
  real faceTime1254 = -inf;
  real _t1255 = -0.5e0;
  real _t1256 = 0.e0;
  real _t1257 = 0.e0;
  real _t1258 = 0.1e1;
  vec3 _t1259 = [_t1256, _t1257, _t1258];
  real _t125A = prim •00CE<$[3]; $[3]; $[]> (_t1259, refPos1250);
  real _t125B = prim -0026<$[]> (_t1255, _t125A);
  real _t125C = 0.e0;
  real _t125D = 0.e0;
  real _t125E = 0.1e1;
  vec3 _t125F = [_t125C, _t125D, _t125E];
  real _t1260 = prim •00CE<$[3]; $[3]; $[]> (_t125F, dPos1251);
  real _t1261 = prim /0055 (_t125B, _t1260);
  real _t1262 = -0.1e-15;
  bool _t1263 = prim >=007E (_t1261, _t1262);
  real _t1264 = -0.5e0;
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  real _t1267 = 0.1e1;
  vec3 _t1268 = [_t1265, _t1266, _t1267];
  real _t1269 = prim •00CE<$[3]; $[3]; $[]> (_t1268, refPos1250);
  real _t126A = prim -0026<$[]> (_t1264, _t1269);
  real _t126B = 0.e0;
  real _t126C = 0.e0;
  real _t126D = 0.1e1;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, dPos1251);
  real _t1270 = prim /0055 (_t126A, _t126F);
  bool _t1271 = prim >0080 (time1252, _t1270);
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  real _t1274 = 0.1e1;
  vec3 _t1275 = [_t1272, _t1273, _t1274];
  real _t1276 = prim •00CE<$[3]; $[3]; $[]> (_t1275, dPos1251);
  real _t1277 = prim |()|00B5<$[]> (_t1276);
  real _t1278 = 0.1e-20;
  bool _t1279 = prim >=007E (_t1277, _t1278);
  bool _t127A = prim $and01C4 (_t1271, _t1279);
  bool _t127B = prim $and01C4 (_t1263, _t127A);
  if _t127B {
    real _t127C = -0.5e0;
    real _t127D = 0.e0;
    real _t127E = 0.e0;
    real _t127F = 0.1e1;
    vec3 _t1280 = [_t127D, _t127E, _t127F];
    real _t1281 = prim •00CE<$[3]; $[3]; $[]> (_t1280, refPos1250);
    real _t1282 = prim -0026<$[]> (_t127C, _t1281);
    real _t1283 = 0.e0;
    real _t1284 = 0.e0;
    real _t1285 = 0.1e1;
    vec3 _t1286 = [_t1283, _t1284, _t1285];
    real _t1287 = prim •00CE<$[3]; $[3]; $[]> (_t1286, dPos1251);
    real _t1288 = prim /0055 (_t1282, _t1287);
    vec3 _t1289 = prim *0038<$[3]> (dPos1251, _t1288);
    vec3 _t128A = prim +0017<$[3]> (refPos1250, _t1289);
    real _t128B = -0.5e0;
    real _t128C = 0.e0;
    real _t128D = 0.e0;
    real _t128E = 0.1e1;
    vec3 _t128F = [_t128C, _t128D, _t128E];
    real _t1290 = prim •00CE<$[3]; $[3]; $[]> (_t128F, refPos1250);
    real _t1291 = prim -0026<$[]> (_t128B, _t1290);
    real _t1292 = 0.e0;
    real _t1293 = 0.e0;
    real _t1294 = 0.1e1;
    vec3 _t1295 = [_t1292, _t1293, _t1294];
    real _t1296 = prim •00CE<$[3]; $[3]; $[]> (_t1295, dPos1251);
    real _t1297 = prim /0055 (_t1291, _t1296);
    vec3 _t1298 = prim *0038<$[3]> (dPos1251, _t1297);
    vec3 _t1299 = prim +0017<$[3]> (refPos1250, _t1298);
    real _t129A = 0.1e-8;
    bool _t129B = extractFemItemN((_t128A, _t1299, _t129A),InsideInsert(File=checkInside.in)(Mesh),);
    if _t129B {
      real _t129C = -0.5e0;
      real _t129D = 0.e0;
      real _t129E = 0.e0;
      real _t129F = 0.1e1;
      vec3 _t12A0 = [_t129D, _t129E, _t129F];
      real _t12A1 = prim •00CE<$[3]; $[3]; $[]> (_t12A0, refPos1250);
      real _t12A2 = prim -0026<$[]> (_t129C, _t12A1);
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      real _t12A5 = 0.1e1;
      vec3 _t12A6 = [_t12A3, _t12A4, _t12A5];
      real _t12A7 = prim •00CE<$[3]; $[3]; $[]> (_t12A6, dPos1251);
      time1252 = prim /0055 (_t12A2, _t12A7);
      face1253 = 0;
    }
  }
  real _t12A8 = 0.5e0;
  real _t12A9 = 0.e0;
  real _t12AA = 0.e0;
  real _t12AB = 0.1e1;
  vec3 _t12AC = [_t12A9, _t12AA, _t12AB];
  real _t12AD = prim •00CE<$[3]; $[3]; $[]> (_t12AC, refPos1250);
  real _t12AE = prim -0026<$[]> (_t12A8, _t12AD);
  real _t12AF = 0.e0;
  real _t12B0 = 0.e0;
  real _t12B1 = 0.1e1;
  vec3 _t12B2 = [_t12AF, _t12B0, _t12B1];
  real _t12B3 = prim •00CE<$[3]; $[3]; $[]> (_t12B2, dPos1251);
  real _t12B4 = prim /0055 (_t12AE, _t12B3);
  real _t12B5 = -0.1e-15;
  bool _t12B6 = prim >=007E (_t12B4, _t12B5);
  real _t12B7 = 0.5e0;
  real _t12B8 = 0.e0;
  real _t12B9 = 0.e0;
  real _t12BA = 0.1e1;
  vec3 _t12BB = [_t12B8, _t12B9, _t12BA];
  real _t12BC = prim •00CE<$[3]; $[3]; $[]> (_t12BB, refPos1250);
  real _t12BD = prim -0026<$[]> (_t12B7, _t12BC);
  real _t12BE = 0.e0;
  real _t12BF = 0.e0;
  real _t12C0 = 0.1e1;
  vec3 _t12C1 = [_t12BE, _t12BF, _t12C0];
  real _t12C2 = prim •00CE<$[3]; $[3]; $[]> (_t12C1, dPos1251);
  real _t12C3 = prim /0055 (_t12BD, _t12C2);
  bool _t12C4 = prim >0080 (time1252, _t12C3);
  real _t12C5 = 0.e0;
  real _t12C6 = 0.e0;
  real _t12C7 = 0.1e1;
  vec3 _t12C8 = [_t12C5, _t12C6, _t12C7];
  real _t12C9 = prim •00CE<$[3]; $[3]; $[]> (_t12C8, dPos1251);
  real _t12CA = prim |()|00B5<$[]> (_t12C9);
  real _t12CB = 0.1e-20;
  bool _t12CC = prim >=007E (_t12CA, _t12CB);
  bool _t12CD = prim $and01C4 (_t12C4, _t12CC);
  bool _t12CE = prim $and01C4 (_t12B6, _t12CD);
  if _t12CE {
    real _t12CF = 0.5e0;
    real _t12D0 = 0.e0;
    real _t12D1 = 0.e0;
    real _t12D2 = 0.1e1;
    vec3 _t12D3 = [_t12D0, _t12D1, _t12D2];
    real _t12D4 = prim •00CE<$[3]; $[3]; $[]> (_t12D3, refPos1250);
    real _t12D5 = prim -0026<$[]> (_t12CF, _t12D4);
    real _t12D6 = 0.e0;
    real _t12D7 = 0.e0;
    real _t12D8 = 0.1e1;
    vec3 _t12D9 = [_t12D6, _t12D7, _t12D8];
    real _t12DA = prim •00CE<$[3]; $[3]; $[]> (_t12D9, dPos1251);
    real _t12DB = prim /0055 (_t12D5, _t12DA);
    vec3 _t12DC = prim *0038<$[3]> (dPos1251, _t12DB);
    vec3 _t12DD = prim +0017<$[3]> (refPos1250, _t12DC);
    real _t12DE = 0.5e0;
    real _t12DF = 0.e0;
    real _t12E0 = 0.e0;
    real _t12E1 = 0.1e1;
    vec3 _t12E2 = [_t12DF, _t12E0, _t12E1];
    real _t12E3 = prim •00CE<$[3]; $[3]; $[]> (_t12E2, refPos1250);
    real _t12E4 = prim -0026<$[]> (_t12DE, _t12E3);
    real _t12E5 = 0.e0;
    real _t12E6 = 0.e0;
    real _t12E7 = 0.1e1;
    vec3 _t12E8 = [_t12E5, _t12E6, _t12E7];
    real _t12E9 = prim •00CE<$[3]; $[3]; $[]> (_t12E8, dPos1251);
    real _t12EA = prim /0055 (_t12E4, _t12E9);
    vec3 _t12EB = prim *0038<$[3]> (dPos1251, _t12EA);
    vec3 _t12EC = prim +0017<$[3]> (refPos1250, _t12EB);
    real _t12ED = 0.1e-8;
    bool _t12EE = extractFemItemN((_t12DD, _t12EC, _t12ED),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12EE {
      real _t12EF = 0.5e0;
      real _t12F0 = 0.e0;
      real _t12F1 = 0.e0;
      real _t12F2 = 0.1e1;
      vec3 _t12F3 = [_t12F0, _t12F1, _t12F2];
      real _t12F4 = prim •00CE<$[3]; $[3]; $[]> (_t12F3, refPos1250);
      real _t12F5 = prim -0026<$[]> (_t12EF, _t12F4);
      real _t12F6 = 0.e0;
      real _t12F7 = 0.e0;
      real _t12F8 = 0.1e1;
      vec3 _t12F9 = [_t12F6, _t12F7, _t12F8];
      real _t12FA = prim •00CE<$[3]; $[3]; $[]> (_t12F9, dPos1251);
      time1252 = prim /0055 (_t12F5, _t12FA);
      face1253 = 1;
    }
  }
  real _t12FB = -0.5e0;
  real _t12FC = 0.e0;
  real _t12FD = 0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos1250);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = 0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos1251);
  real _t1307 = prim /0055 (_t1301, _t1306);
  real _t1308 = -0.1e-15;
  bool _t1309 = prim >=007E (_t1307, _t1308);
  real _t130A = -0.5e0;
  real _t130B = 0.e0;
  real _t130C = 0.1e1;
  real _t130D = 0.e0;
  vec3 _t130E = [_t130B, _t130C, _t130D];
  real _t130F = prim •00CE<$[3]; $[3]; $[]> (_t130E, refPos1250);
  real _t1310 = prim -0026<$[]> (_t130A, _t130F);
  real _t1311 = 0.e0;
  real _t1312 = 0.1e1;
  real _t1313 = 0.e0;
  vec3 _t1314 = [_t1311, _t1312, _t1313];
  real _t1315 = prim •00CE<$[3]; $[3]; $[]> (_t1314, dPos1251);
  real _t1316 = prim /0055 (_t1310, _t1315);
  bool _t1317 = prim >0080 (time1252, _t1316);
  real _t1318 = 0.e0;
  real _t1319 = 0.1e1;
  real _t131A = 0.e0;
  vec3 _t131B = [_t1318, _t1319, _t131A];
  real _t131C = prim •00CE<$[3]; $[3]; $[]> (_t131B, dPos1251);
  real _t131D = prim |()|00B5<$[]> (_t131C);
  real _t131E = 0.1e-20;
  bool _t131F = prim >=007E (_t131D, _t131E);
  bool _t1320 = prim $and01C4 (_t1317, _t131F);
  bool _t1321 = prim $and01C4 (_t1309, _t1320);
  if _t1321 {
    real _t1322 = -0.5e0;
    real _t1323 = 0.e0;
    real _t1324 = 0.1e1;
    real _t1325 = 0.e0;
    vec3 _t1326 = [_t1323, _t1324, _t1325];
    real _t1327 = prim •00CE<$[3]; $[3]; $[]> (_t1326, refPos1250);
    real _t1328 = prim -0026<$[]> (_t1322, _t1327);
    real _t1329 = 0.e0;
    real _t132A = 0.1e1;
    real _t132B = 0.e0;
    vec3 _t132C = [_t1329, _t132A, _t132B];
    real _t132D = prim •00CE<$[3]; $[3]; $[]> (_t132C, dPos1251);
    real _t132E = prim /0055 (_t1328, _t132D);
    vec3 _t132F = prim *0038<$[3]> (dPos1251, _t132E);
    vec3 _t1330 = prim +0017<$[3]> (refPos1250, _t132F);
    real _t1331 = -0.5e0;
    real _t1332 = 0.e0;
    real _t1333 = 0.1e1;
    real _t1334 = 0.e0;
    vec3 _t1335 = [_t1332, _t1333, _t1334];
    real _t1336 = prim •00CE<$[3]; $[3]; $[]> (_t1335, refPos1250);
    real _t1337 = prim -0026<$[]> (_t1331, _t1336);
    real _t1338 = 0.e0;
    real _t1339 = 0.1e1;
    real _t133A = 0.e0;
    vec3 _t133B = [_t1338, _t1339, _t133A];
    real _t133C = prim •00CE<$[3]; $[3]; $[]> (_t133B, dPos1251);
    real _t133D = prim /0055 (_t1337, _t133C);
    vec3 _t133E = prim *0038<$[3]> (dPos1251, _t133D);
    vec3 _t133F = prim +0017<$[3]> (refPos1250, _t133E);
    real _t1340 = 0.1e-8;
    bool _t1341 = extractFemItemN((_t1330, _t133F, _t1340),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1341 {
      real _t1342 = -0.5e0;
      real _t1343 = 0.e0;
      real _t1344 = 0.1e1;
      real _t1345 = 0.e0;
      vec3 _t1346 = [_t1343, _t1344, _t1345];
      real _t1347 = prim •00CE<$[3]; $[3]; $[]> (_t1346, refPos1250);
      real _t1348 = prim -0026<$[]> (_t1342, _t1347);
      real _t1349 = 0.e0;
      real _t134A = 0.1e1;
      real _t134B = 0.e0;
      vec3 _t134C = [_t1349, _t134A, _t134B];
      real _t134D = prim •00CE<$[3]; $[3]; $[]> (_t134C, dPos1251);
      time1252 = prim /0055 (_t1348, _t134D);
      face1253 = 2;
    }
  }
  real _t134E = -0.5e0;
  real _t134F = -0.1e1;
  real _t1350 = 0.e0;
  real _t1351 = 0.e0;
  vec3 _t1352 = [_t134F, _t1350, _t1351];
  real _t1353 = prim •00CE<$[3]; $[3]; $[]> (_t1352, refPos1250);
  real _t1354 = prim -0026<$[]> (_t134E, _t1353);
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  real _t1357 = 0.e0;
  vec3 _t1358 = [_t1355, _t1356, _t1357];
  real _t1359 = prim •00CE<$[3]; $[3]; $[]> (_t1358, dPos1251);
  real _t135A = prim /0055 (_t1354, _t1359);
  real _t135B = -0.1e-15;
  bool _t135C = prim >=007E (_t135A, _t135B);
  real _t135D = -0.5e0;
  real _t135E = -0.1e1;
  real _t135F = 0.e0;
  real _t1360 = 0.e0;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = prim •00CE<$[3]; $[3]; $[]> (_t1361, refPos1250);
  real _t1363 = prim -0026<$[]> (_t135D, _t1362);
  real _t1364 = -0.1e1;
  real _t1365 = 0.e0;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = prim •00CE<$[3]; $[3]; $[]> (_t1367, dPos1251);
  real _t1369 = prim /0055 (_t1363, _t1368);
  bool _t136A = prim >0080 (time1252, _t1369);
  real _t136B = -0.1e1;
  real _t136C = 0.e0;
  real _t136D = 0.e0;
  vec3 _t136E = [_t136B, _t136C, _t136D];
  real _t136F = prim •00CE<$[3]; $[3]; $[]> (_t136E, dPos1251);
  real _t1370 = prim |()|00B5<$[]> (_t136F);
  real _t1371 = 0.1e-20;
  bool _t1372 = prim >=007E (_t1370, _t1371);
  bool _t1373 = prim $and01C4 (_t136A, _t1372);
  bool _t1374 = prim $and01C4 (_t135C, _t1373);
  if _t1374 {
    real _t1375 = -0.5e0;
    real _t1376 = -0.1e1;
    real _t1377 = 0.e0;
    real _t1378 = 0.e0;
    vec3 _t1379 = [_t1376, _t1377, _t1378];
    real _t137A = prim •00CE<$[3]; $[3]; $[]> (_t1379, refPos1250);
    real _t137B = prim -0026<$[]> (_t1375, _t137A);
    real _t137C = -0.1e1;
    real _t137D = 0.e0;
    real _t137E = 0.e0;
    vec3 _t137F = [_t137C, _t137D, _t137E];
    real _t1380 = prim •00CE<$[3]; $[3]; $[]> (_t137F, dPos1251);
    real _t1381 = prim /0055 (_t137B, _t1380);
    vec3 _t1382 = prim *0038<$[3]> (dPos1251, _t1381);
    vec3 _t1383 = prim +0017<$[3]> (refPos1250, _t1382);
    real _t1384 = -0.5e0;
    real _t1385 = -0.1e1;
    real _t1386 = 0.e0;
    real _t1387 = 0.e0;
    vec3 _t1388 = [_t1385, _t1386, _t1387];
    real _t1389 = prim •00CE<$[3]; $[3]; $[]> (_t1388, refPos1250);
    real _t138A = prim -0026<$[]> (_t1384, _t1389);
    real _t138B = -0.1e1;
    real _t138C = 0.e0;
    real _t138D = 0.e0;
    vec3 _t138E = [_t138B, _t138C, _t138D];
    real _t138F = prim •00CE<$[3]; $[3]; $[]> (_t138E, dPos1251);
    real _t1390 = prim /0055 (_t138A, _t138F);
    vec3 _t1391 = prim *0038<$[3]> (dPos1251, _t1390);
    vec3 _t1392 = prim +0017<$[3]> (refPos1250, _t1391);
    real _t1393 = 0.1e-8;
    bool _t1394 = extractFemItemN((_t1383, _t1392, _t1393),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1394 {
      real _t1395 = -0.5e0;
      real _t1396 = -0.1e1;
      real _t1397 = 0.e0;
      real _t1398 = 0.e0;
      vec3 _t1399 = [_t1396, _t1397, _t1398];
      real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, refPos1250);
      real _t139B = prim -0026<$[]> (_t1395, _t139A);
      real _t139C = -0.1e1;
      real _t139D = 0.e0;
      real _t139E = 0.e0;
      vec3 _t139F = [_t139C, _t139D, _t139E];
      real _t13A0 = prim •00CE<$[3]; $[3]; $[]> (_t139F, dPos1251);
      time1252 = prim /0055 (_t139B, _t13A0);
      face1253 = 3;
    }
  }
  real _t13A1 = -0.5e0;
  real _t13A2 = 0.e0;
  real _t13A3 = -0.1e1;
  real _t13A4 = 0.e0;
  vec3 _t13A5 = [_t13A2, _t13A3, _t13A4];
  real _t13A6 = prim •00CE<$[3]; $[3]; $[]> (_t13A5, refPos1250);
  real _t13A7 = prim -0026<$[]> (_t13A1, _t13A6);
  real _t13A8 = 0.e0;
  real _t13A9 = -0.1e1;
  real _t13AA = 0.e0;
  vec3 _t13AB = [_t13A8, _t13A9, _t13AA];
  real _t13AC = prim •00CE<$[3]; $[3]; $[]> (_t13AB, dPos1251);
  real _t13AD = prim /0055 (_t13A7, _t13AC);
  real _t13AE = -0.1e-15;
  bool _t13AF = prim >=007E (_t13AD, _t13AE);
  real _t13B0 = -0.5e0;
  real _t13B1 = 0.e0;
  real _t13B2 = -0.1e1;
  real _t13B3 = 0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, refPos1250);
  real _t13B6 = prim -0026<$[]> (_t13B0, _t13B5);
  real _t13B7 = 0.e0;
  real _t13B8 = -0.1e1;
  real _t13B9 = 0.e0;
  vec3 _t13BA = [_t13B7, _t13B8, _t13B9];
  real _t13BB = prim •00CE<$[3]; $[3]; $[]> (_t13BA, dPos1251);
  real _t13BC = prim /0055 (_t13B6, _t13BB);
  bool _t13BD = prim >0080 (time1252, _t13BC);
  real _t13BE = 0.e0;
  real _t13BF = -0.1e1;
  real _t13C0 = 0.e0;
  vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
  real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos1251);
  real _t13C3 = prim |()|00B5<$[]> (_t13C2);
  real _t13C4 = 0.1e-20;
  bool _t13C5 = prim >=007E (_t13C3, _t13C4);
  bool _t13C6 = prim $and01C4 (_t13BD, _t13C5);
  bool _t13C7 = prim $and01C4 (_t13AF, _t13C6);
  if _t13C7 {
    real _t13C8 = -0.5e0;
    real _t13C9 = 0.e0;
    real _t13CA = -0.1e1;
    real _t13CB = 0.e0;
    vec3 _t13CC = [_t13C9, _t13CA, _t13CB];
    real _t13CD = prim •00CE<$[3]; $[3]; $[]> (_t13CC, refPos1250);
    real _t13CE = prim -0026<$[]> (_t13C8, _t13CD);
    real _t13CF = 0.e0;
    real _t13D0 = -0.1e1;
    real _t13D1 = 0.e0;
    vec3 _t13D2 = [_t13CF, _t13D0, _t13D1];
    real _t13D3 = prim •00CE<$[3]; $[3]; $[]> (_t13D2, dPos1251);
    real _t13D4 = prim /0055 (_t13CE, _t13D3);
    vec3 _t13D5 = prim *0038<$[3]> (dPos1251, _t13D4);
    vec3 _t13D6 = prim +0017<$[3]> (refPos1250, _t13D5);
    real _t13D7 = -0.5e0;
    real _t13D8 = 0.e0;
    real _t13D9 = -0.1e1;
    real _t13DA = 0.e0;
    vec3 _t13DB = [_t13D8, _t13D9, _t13DA];
    real _t13DC = prim •00CE<$[3]; $[3]; $[]> (_t13DB, refPos1250);
    real _t13DD = prim -0026<$[]> (_t13D7, _t13DC);
    real _t13DE = 0.e0;
    real _t13DF = -0.1e1;
    real _t13E0 = 0.e0;
    vec3 _t13E1 = [_t13DE, _t13DF, _t13E0];
    real _t13E2 = prim •00CE<$[3]; $[3]; $[]> (_t13E1, dPos1251);
    real _t13E3 = prim /0055 (_t13DD, _t13E2);
    vec3 _t13E4 = prim *0038<$[3]> (dPos1251, _t13E3);
    vec3 _t13E5 = prim +0017<$[3]> (refPos1250, _t13E4);
    real _t13E6 = 0.1e-8;
    bool _t13E7 = extractFemItemN((_t13D6, _t13E5, _t13E6),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13E7 {
      real _t13E8 = -0.5e0;
      real _t13E9 = 0.e0;
      real _t13EA = -0.1e1;
      real _t13EB = 0.e0;
      vec3 _t13EC = [_t13E9, _t13EA, _t13EB];
      real _t13ED = prim •00CE<$[3]; $[3]; $[]> (_t13EC, refPos1250);
      real _t13EE = prim -0026<$[]> (_t13E8, _t13ED);
      real _t13EF = 0.e0;
      real _t13F0 = -0.1e1;
      real _t13F1 = 0.e0;
      vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
      real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos1251);
      time1252 = prim /0055 (_t13EE, _t13F3);
      face1253 = 4;
    }
  }
  real _t13F4 = -0.5e0;
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.e0;
  real _t13F7 = -0.e0;
  vec3 _t13F8 = [_t13F5, _t13F6, _t13F7];
  real _t13F9 = prim •00CE<$[3]; $[3]; $[]> (_t13F8, refPos1250);
  real _t13FA = prim -0026<$[]> (_t13F4, _t13F9);
  real _t13FB = 0.1e1;
  real _t13FC = 0.e0;
  real _t13FD = -0.e0;
  vec3 _t13FE = [_t13FB, _t13FC, _t13FD];
  real _t13FF = prim •00CE<$[3]; $[3]; $[]> (_t13FE, dPos1251);
  real _t1400 = prim /0055 (_t13FA, _t13FF);
  real _t1401 = -0.1e-15;
  bool _t1402 = prim >=007E (_t1400, _t1401);
  real _t1403 = -0.5e0;
  real _t1404 = 0.1e1;
  real _t1405 = 0.e0;
  real _t1406 = -0.e0;
  vec3 _t1407 = [_t1404, _t1405, _t1406];
  real _t1408 = prim •00CE<$[3]; $[3]; $[]> (_t1407, refPos1250);
  real _t1409 = prim -0026<$[]> (_t1403, _t1408);
  real _t140A = 0.1e1;
  real _t140B = 0.e0;
  real _t140C = -0.e0;
  vec3 _t140D = [_t140A, _t140B, _t140C];
  real _t140E = prim •00CE<$[3]; $[3]; $[]> (_t140D, dPos1251);
  real _t140F = prim /0055 (_t1409, _t140E);
  bool _t1410 = prim >0080 (time1252, _t140F);
  real _t1411 = 0.1e1;
  real _t1412 = 0.e0;
  real _t1413 = -0.e0;
  vec3 _t1414 = [_t1411, _t1412, _t1413];
  real _t1415 = prim •00CE<$[3]; $[3]; $[]> (_t1414, dPos1251);
  real _t1416 = prim |()|00B5<$[]> (_t1415);
  real _t1417 = 0.1e-20;
  bool _t1418 = prim >=007E (_t1416, _t1417);
  bool _t1419 = prim $and01C4 (_t1410, _t1418);
  bool _t141A = prim $and01C4 (_t1402, _t1419);
  if _t141A {
    real _t141B = -0.5e0;
    real _t141C = 0.1e1;
    real _t141D = 0.e0;
    real _t141E = -0.e0;
    vec3 _t141F = [_t141C, _t141D, _t141E];
    real _t1420 = prim •00CE<$[3]; $[3]; $[]> (_t141F, refPos1250);
    real _t1421 = prim -0026<$[]> (_t141B, _t1420);
    real _t1422 = 0.1e1;
    real _t1423 = 0.e0;
    real _t1424 = -0.e0;
    vec3 _t1425 = [_t1422, _t1423, _t1424];
    real _t1426 = prim •00CE<$[3]; $[3]; $[]> (_t1425, dPos1251);
    real _t1427 = prim /0055 (_t1421, _t1426);
    vec3 _t1428 = prim *0038<$[3]> (dPos1251, _t1427);
    vec3 _t1429 = prim +0017<$[3]> (refPos1250, _t1428);
    real _t142A = -0.5e0;
    real _t142B = 0.1e1;
    real _t142C = 0.e0;
    real _t142D = -0.e0;
    vec3 _t142E = [_t142B, _t142C, _t142D];
    real _t142F = prim •00CE<$[3]; $[3]; $[]> (_t142E, refPos1250);
    real _t1430 = prim -0026<$[]> (_t142A, _t142F);
    real _t1431 = 0.1e1;
    real _t1432 = 0.e0;
    real _t1433 = -0.e0;
    vec3 _t1434 = [_t1431, _t1432, _t1433];
    real _t1435 = prim •00CE<$[3]; $[3]; $[]> (_t1434, dPos1251);
    real _t1436 = prim /0055 (_t1430, _t1435);
    vec3 _t1437 = prim *0038<$[3]> (dPos1251, _t1436);
    vec3 _t1438 = prim +0017<$[3]> (refPos1250, _t1437);
    real _t1439 = 0.1e-8;
    bool _t143A = extractFemItemN((_t1429, _t1438, _t1439),InsideInsert(File=checkInside.in)(Mesh),);
    if _t143A {
      real _t143B = -0.5e0;
      real _t143C = 0.1e1;
      real _t143D = 0.e0;
      real _t143E = -0.e0;
      vec3 _t143F = [_t143C, _t143D, _t143E];
      real _t1440 = prim •00CE<$[3]; $[3]; $[]> (_t143F, refPos1250);
      real _t1441 = prim -0026<$[]> (_t143B, _t1440);
      real _t1442 = 0.1e1;
      real _t1443 = 0.e0;
      real _t1444 = -0.e0;
      vec3 _t1445 = [_t1442, _t1443, _t1444];
      real _t1446 = prim •00CE<$[3]; $[3]; $[]> (_t1445, dPos1251);
      time1252 = prim /0055 (_t1441, _t1446);
      face1253 = 5;
    }
  }
  int _t1447 = -1;
  bool _t1448 = prim !=0086 (face1253, _t1447);
  if _t1448 {
    real _t1449 = 0.e0;
    real _t144A = prim max0125 (time1252, _t1449);
    real _t144B = (real)face1253;
    vec2 _t144C = [_t144A, _t144B];
    return _t144C;
  } else {
    real _t144D = -0.1e1;
    real _t144E = -0.1e1;
    vec2 _t144F = [_t144D, _t144E];
    return _t144F;
  }
}
function vec2#0 _exit1450 (vec3 refPos1250, vec3 dPos1251, int i1451)
{
  real time1452 = +inf;
  int face1453 = -1;
  real faceTime1454 = -inf;
  real _t1455 = -0.5e0;
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.1e1;
  vec3 _t1459 = [_t1456, _t1457, _t1458];
  real _t145A = prim •00CE<$[3]; $[3]; $[]> (_t1459, refPos1250);
  real _t145B = prim -0026<$[]> (_t1455, _t145A);
  real _t145C = 0.e0;
  real _t145D = 0.e0;
  real _t145E = 0.1e1;
  vec3 _t145F = [_t145C, _t145D, _t145E];
  real _t1460 = prim •00CE<$[3]; $[3]; $[]> (_t145F, dPos1251);
  real _t1461 = prim /0055 (_t145B, _t1460);
  real _t1462 = -0.1e-15;
  bool _t1463 = prim >=007E (_t1461, _t1462);
  real _t1464 = -0.5e0;
  real _t1465 = 0.e0;
  real _t1466 = 0.e0;
  real _t1467 = 0.1e1;
  vec3 _t1468 = [_t1465, _t1466, _t1467];
  real _t1469 = prim •00CE<$[3]; $[3]; $[]> (_t1468, refPos1250);
  real _t146A = prim -0026<$[]> (_t1464, _t1469);
  real _t146B = 0.e0;
  real _t146C = 0.e0;
  real _t146D = 0.1e1;
  vec3 _t146E = [_t146B, _t146C, _t146D];
  real _t146F = prim •00CE<$[3]; $[3]; $[]> (_t146E, dPos1251);
  real _t1470 = prim /0055 (_t146A, _t146F);
  bool _t1471 = prim >0080 (time1452, _t1470);
  real _t1472 = 0.e0;
  real _t1473 = 0.e0;
  real _t1474 = 0.1e1;
  vec3 _t1475 = [_t1472, _t1473, _t1474];
  real _t1476 = prim •00CE<$[3]; $[3]; $[]> (_t1475, dPos1251);
  real _t1477 = prim |()|00B5<$[]> (_t1476);
  real _t1478 = 0.1e-20;
  bool _t1479 = prim >=007E (_t1477, _t1478);
  bool _t147A = prim $and01C4 (_t1471, _t1479);
  bool _t147B = prim $and01C4 (_t1463, _t147A);
  if _t147B {
    int _t147C = 0;
    bool _t147D = prim !=0086 (i1451, _t147C);
    if _t147D {
      real _t147E = -0.5e0;
      real _t147F = 0.e0;
      real _t1480 = 0.e0;
      real _t1481 = 0.1e1;
      vec3 _t1482 = [_t147F, _t1480, _t1481];
      real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos1250);
      real _t1484 = prim -0026<$[]> (_t147E, _t1483);
      real _t1485 = 0.e0;
      real _t1486 = 0.e0;
      real _t1487 = 0.1e1;
      vec3 _t1488 = [_t1485, _t1486, _t1487];
      real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos1251);
      time1452 = prim /0055 (_t1484, _t1489);
      face1453 = 0;
    } else {
      real _t148A = -0.5e0;
      real _t148B = 0.e0;
      real _t148C = 0.e0;
      real _t148D = 0.1e1;
      vec3 _t148E = [_t148B, _t148C, _t148D];
      real _t148F = prim •00CE<$[3]; $[3]; $[]> (_t148E, refPos1250);
      real _t1490 = prim -0026<$[]> (_t148A, _t148F);
      real _t1491 = 0.e0;
      real _t1492 = 0.e0;
      real _t1493 = 0.1e1;
      vec3 _t1494 = [_t1491, _t1492, _t1493];
      real _t1495 = prim •00CE<$[3]; $[3]; $[]> (_t1494, dPos1251);
      faceTime1454 = prim /0055 (_t1490, _t1495);
    }
  }
  real _t1496 = 0.5e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = 0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos1250);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = 0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos1251);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-15;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.5e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = 0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos1250);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = 0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos1251);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time1452, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = 0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos1251);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-20;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 1;
    bool _t14BE = prim !=0086 (i1451, _t14BD);
    if _t14BE {
      real _t14BF = 0.5e0;
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.1e1;
      vec3 _t14C3 = [_t14C0, _t14C1, _t14C2];
      real _t14C4 = prim •00CE<$[3]; $[3]; $[]> (_t14C3, refPos1250);
      real _t14C5 = prim -0026<$[]> (_t14BF, _t14C4);
      real _t14C6 = 0.e0;
      real _t14C7 = 0.e0;
      real _t14C8 = 0.1e1;
      vec3 _t14C9 = [_t14C6, _t14C7, _t14C8];
      real _t14CA = prim •00CE<$[3]; $[3]; $[]> (_t14C9, dPos1251);
      time1452 = prim /0055 (_t14C5, _t14CA);
      face1453 = 1;
    } else {
      real _t14CB = 0.5e0;
      real _t14CC = 0.e0;
      real _t14CD = 0.e0;
      real _t14CE = 0.1e1;
      vec3 _t14CF = [_t14CC, _t14CD, _t14CE];
      real _t14D0 = prim •00CE<$[3]; $[3]; $[]> (_t14CF, refPos1250);
      real _t14D1 = prim -0026<$[]> (_t14CB, _t14D0);
      real _t14D2 = 0.e0;
      real _t14D3 = 0.e0;
      real _t14D4 = 0.1e1;
      vec3 _t14D5 = [_t14D2, _t14D3, _t14D4];
      real _t14D6 = prim •00CE<$[3]; $[3]; $[]> (_t14D5, dPos1251);
      faceTime1454 = prim /0055 (_t14D1, _t14D6);
    }
  }
  real _t14D7 = -0.5e0;
  real _t14D8 = 0.e0;
  real _t14D9 = 0.1e1;
  real _t14DA = 0.e0;
  vec3 _t14DB = [_t14D8, _t14D9, _t14DA];
  real _t14DC = prim •00CE<$[3]; $[3]; $[]> (_t14DB, refPos1250);
  real _t14DD = prim -0026<$[]> (_t14D7, _t14DC);
  real _t14DE = 0.e0;
  real _t14DF = 0.1e1;
  real _t14E0 = 0.e0;
  vec3 _t14E1 = [_t14DE, _t14DF, _t14E0];
  real _t14E2 = prim •00CE<$[3]; $[3]; $[]> (_t14E1, dPos1251);
  real _t14E3 = prim /0055 (_t14DD, _t14E2);
  real _t14E4 = -0.1e-15;
  bool _t14E5 = prim >=007E (_t14E3, _t14E4);
  real _t14E6 = -0.5e0;
  real _t14E7 = 0.e0;
  real _t14E8 = 0.1e1;
  real _t14E9 = 0.e0;
  vec3 _t14EA = [_t14E7, _t14E8, _t14E9];
  real _t14EB = prim •00CE<$[3]; $[3]; $[]> (_t14EA, refPos1250);
  real _t14EC = prim -0026<$[]> (_t14E6, _t14EB);
  real _t14ED = 0.e0;
  real _t14EE = 0.1e1;
  real _t14EF = 0.e0;
  vec3 _t14F0 = [_t14ED, _t14EE, _t14EF];
  real _t14F1 = prim •00CE<$[3]; $[3]; $[]> (_t14F0, dPos1251);
  real _t14F2 = prim /0055 (_t14EC, _t14F1);
  bool _t14F3 = prim >0080 (time1452, _t14F2);
  real _t14F4 = 0.e0;
  real _t14F5 = 0.1e1;
  real _t14F6 = 0.e0;
  vec3 _t14F7 = [_t14F4, _t14F5, _t14F6];
  real _t14F8 = prim •00CE<$[3]; $[3]; $[]> (_t14F7, dPos1251);
  real _t14F9 = prim |()|00B5<$[]> (_t14F8);
  real _t14FA = 0.1e-20;
  bool _t14FB = prim >=007E (_t14F9, _t14FA);
  bool _t14FC = prim $and01C4 (_t14F3, _t14FB);
  bool _t14FD = prim $and01C4 (_t14E5, _t14FC);
  if _t14FD {
    int _t14FE = 2;
    bool _t14FF = prim !=0086 (i1451, _t14FE);
    if _t14FF {
      real _t1500 = -0.5e0;
      real _t1501 = 0.e0;
      real _t1502 = 0.1e1;
      real _t1503 = 0.e0;
      vec3 _t1504 = [_t1501, _t1502, _t1503];
      real _t1505 = prim •00CE<$[3]; $[3]; $[]> (_t1504, refPos1250);
      real _t1506 = prim -0026<$[]> (_t1500, _t1505);
      real _t1507 = 0.e0;
      real _t1508 = 0.1e1;
      real _t1509 = 0.e0;
      vec3 _t150A = [_t1507, _t1508, _t1509];
      real _t150B = prim •00CE<$[3]; $[3]; $[]> (_t150A, dPos1251);
      time1452 = prim /0055 (_t1506, _t150B);
      face1453 = 2;
    } else {
      real _t150C = -0.5e0;
      real _t150D = 0.e0;
      real _t150E = 0.1e1;
      real _t150F = 0.e0;
      vec3 _t1510 = [_t150D, _t150E, _t150F];
      real _t1511 = prim •00CE<$[3]; $[3]; $[]> (_t1510, refPos1250);
      real _t1512 = prim -0026<$[]> (_t150C, _t1511);
      real _t1513 = 0.e0;
      real _t1514 = 0.1e1;
      real _t1515 = 0.e0;
      vec3 _t1516 = [_t1513, _t1514, _t1515];
      real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, dPos1251);
      faceTime1454 = prim /0055 (_t1512, _t1517);
    }
  }
  real _t1518 = -0.5e0;
  real _t1519 = -0.1e1;
  real _t151A = 0.e0;
  real _t151B = 0.e0;
  vec3 _t151C = [_t1519, _t151A, _t151B];
  real _t151D = prim •00CE<$[3]; $[3]; $[]> (_t151C, refPos1250);
  real _t151E = prim -0026<$[]> (_t1518, _t151D);
  real _t151F = -0.1e1;
  real _t1520 = 0.e0;
  real _t1521 = 0.e0;
  vec3 _t1522 = [_t151F, _t1520, _t1521];
  real _t1523 = prim •00CE<$[3]; $[3]; $[]> (_t1522, dPos1251);
  real _t1524 = prim /0055 (_t151E, _t1523);
  real _t1525 = -0.1e-15;
  bool _t1526 = prim >=007E (_t1524, _t1525);
  real _t1527 = -0.5e0;
  real _t1528 = -0.1e1;
  real _t1529 = 0.e0;
  real _t152A = 0.e0;
  vec3 _t152B = [_t1528, _t1529, _t152A];
  real _t152C = prim •00CE<$[3]; $[3]; $[]> (_t152B, refPos1250);
  real _t152D = prim -0026<$[]> (_t1527, _t152C);
  real _t152E = -0.1e1;
  real _t152F = 0.e0;
  real _t1530 = 0.e0;
  vec3 _t1531 = [_t152E, _t152F, _t1530];
  real _t1532 = prim •00CE<$[3]; $[3]; $[]> (_t1531, dPos1251);
  real _t1533 = prim /0055 (_t152D, _t1532);
  bool _t1534 = prim >0080 (time1452, _t1533);
  real _t1535 = -0.1e1;
  real _t1536 = 0.e0;
  real _t1537 = 0.e0;
  vec3 _t1538 = [_t1535, _t1536, _t1537];
  real _t1539 = prim •00CE<$[3]; $[3]; $[]> (_t1538, dPos1251);
  real _t153A = prim |()|00B5<$[]> (_t1539);
  real _t153B = 0.1e-20;
  bool _t153C = prim >=007E (_t153A, _t153B);
  bool _t153D = prim $and01C4 (_t1534, _t153C);
  bool _t153E = prim $and01C4 (_t1526, _t153D);
  if _t153E {
    int _t153F = 3;
    bool _t1540 = prim !=0086 (i1451, _t153F);
    if _t1540 {
      real _t1541 = -0.5e0;
      real _t1542 = -0.1e1;
      real _t1543 = 0.e0;
      real _t1544 = 0.e0;
      vec3 _t1545 = [_t1542, _t1543, _t1544];
      real _t1546 = prim •00CE<$[3]; $[3]; $[]> (_t1545, refPos1250);
      real _t1547 = prim -0026<$[]> (_t1541, _t1546);
      real _t1548 = -0.1e1;
      real _t1549 = 0.e0;
      real _t154A = 0.e0;
      vec3 _t154B = [_t1548, _t1549, _t154A];
      real _t154C = prim •00CE<$[3]; $[3]; $[]> (_t154B, dPos1251);
      time1452 = prim /0055 (_t1547, _t154C);
      face1453 = 3;
    } else {
      real _t154D = -0.5e0;
      real _t154E = -0.1e1;
      real _t154F = 0.e0;
      real _t1550 = 0.e0;
      vec3 _t1551 = [_t154E, _t154F, _t1550];
      real _t1552 = prim •00CE<$[3]; $[3]; $[]> (_t1551, refPos1250);
      real _t1553 = prim -0026<$[]> (_t154D, _t1552);
      real _t1554 = -0.1e1;
      real _t1555 = 0.e0;
      real _t1556 = 0.e0;
      vec3 _t1557 = [_t1554, _t1555, _t1556];
      real _t1558 = prim •00CE<$[3]; $[3]; $[]> (_t1557, dPos1251);
      faceTime1454 = prim /0055 (_t1553, _t1558);
    }
  }
  real _t1559 = -0.5e0;
  real _t155A = 0.e0;
  real _t155B = -0.1e1;
  real _t155C = 0.e0;
  vec3 _t155D = [_t155A, _t155B, _t155C];
  real _t155E = prim •00CE<$[3]; $[3]; $[]> (_t155D, refPos1250);
  real _t155F = prim -0026<$[]> (_t1559, _t155E);
  real _t1560 = 0.e0;
  real _t1561 = -0.1e1;
  real _t1562 = 0.e0;
  vec3 _t1563 = [_t1560, _t1561, _t1562];
  real _t1564 = prim •00CE<$[3]; $[3]; $[]> (_t1563, dPos1251);
  real _t1565 = prim /0055 (_t155F, _t1564);
  real _t1566 = -0.1e-15;
  bool _t1567 = prim >=007E (_t1565, _t1566);
  real _t1568 = -0.5e0;
  real _t1569 = 0.e0;
  real _t156A = -0.1e1;
  real _t156B = 0.e0;
  vec3 _t156C = [_t1569, _t156A, _t156B];
  real _t156D = prim •00CE<$[3]; $[3]; $[]> (_t156C, refPos1250);
  real _t156E = prim -0026<$[]> (_t1568, _t156D);
  real _t156F = 0.e0;
  real _t1570 = -0.1e1;
  real _t1571 = 0.e0;
  vec3 _t1572 = [_t156F, _t1570, _t1571];
  real _t1573 = prim •00CE<$[3]; $[3]; $[]> (_t1572, dPos1251);
  real _t1574 = prim /0055 (_t156E, _t1573);
  bool _t1575 = prim >0080 (time1452, _t1574);
  real _t1576 = 0.e0;
  real _t1577 = -0.1e1;
  real _t1578 = 0.e0;
  vec3 _t1579 = [_t1576, _t1577, _t1578];
  real _t157A = prim •00CE<$[3]; $[3]; $[]> (_t1579, dPos1251);
  real _t157B = prim |()|00B5<$[]> (_t157A);
  real _t157C = 0.1e-20;
  bool _t157D = prim >=007E (_t157B, _t157C);
  bool _t157E = prim $and01C4 (_t1575, _t157D);
  bool _t157F = prim $and01C4 (_t1567, _t157E);
  if _t157F {
    int _t1580 = 4;
    bool _t1581 = prim !=0086 (i1451, _t1580);
    if _t1581 {
      real _t1582 = -0.5e0;
      real _t1583 = 0.e0;
      real _t1584 = -0.1e1;
      real _t1585 = 0.e0;
      vec3 _t1586 = [_t1583, _t1584, _t1585];
      real _t1587 = prim •00CE<$[3]; $[3]; $[]> (_t1586, refPos1250);
      real _t1588 = prim -0026<$[]> (_t1582, _t1587);
      real _t1589 = 0.e0;
      real _t158A = -0.1e1;
      real _t158B = 0.e0;
      vec3 _t158C = [_t1589, _t158A, _t158B];
      real _t158D = prim •00CE<$[3]; $[3]; $[]> (_t158C, dPos1251);
      time1452 = prim /0055 (_t1588, _t158D);
      face1453 = 4;
    } else {
      real _t158E = -0.5e0;
      real _t158F = 0.e0;
      real _t1590 = -0.1e1;
      real _t1591 = 0.e0;
      vec3 _t1592 = [_t158F, _t1590, _t1591];
      real _t1593 = prim •00CE<$[3]; $[3]; $[]> (_t1592, refPos1250);
      real _t1594 = prim -0026<$[]> (_t158E, _t1593);
      real _t1595 = 0.e0;
      real _t1596 = -0.1e1;
      real _t1597 = 0.e0;
      vec3 _t1598 = [_t1595, _t1596, _t1597];
      real _t1599 = prim •00CE<$[3]; $[3]; $[]> (_t1598, dPos1251);
      faceTime1454 = prim /0055 (_t1594, _t1599);
    }
  }
  real _t159A = -0.5e0;
  real _t159B = 0.1e1;
  real _t159C = 0.e0;
  real _t159D = -0.e0;
  vec3 _t159E = [_t159B, _t159C, _t159D];
  real _t159F = prim •00CE<$[3]; $[3]; $[]> (_t159E, refPos1250);
  real _t15A0 = prim -0026<$[]> (_t159A, _t159F);
  real _t15A1 = 0.1e1;
  real _t15A2 = 0.e0;
  real _t15A3 = -0.e0;
  vec3 _t15A4 = [_t15A1, _t15A2, _t15A3];
  real _t15A5 = prim •00CE<$[3]; $[3]; $[]> (_t15A4, dPos1251);
  real _t15A6 = prim /0055 (_t15A0, _t15A5);
  real _t15A7 = -0.1e-15;
  bool _t15A8 = prim >=007E (_t15A6, _t15A7);
  real _t15A9 = -0.5e0;
  real _t15AA = 0.1e1;
  real _t15AB = 0.e0;
  real _t15AC = -0.e0;
  vec3 _t15AD = [_t15AA, _t15AB, _t15AC];
  real _t15AE = prim •00CE<$[3]; $[3]; $[]> (_t15AD, refPos1250);
  real _t15AF = prim -0026<$[]> (_t15A9, _t15AE);
  real _t15B0 = 0.1e1;
  real _t15B1 = 0.e0;
  real _t15B2 = -0.e0;
  vec3 _t15B3 = [_t15B0, _t15B1, _t15B2];
  real _t15B4 = prim •00CE<$[3]; $[3]; $[]> (_t15B3, dPos1251);
  real _t15B5 = prim /0055 (_t15AF, _t15B4);
  bool _t15B6 = prim >0080 (time1452, _t15B5);
  real _t15B7 = 0.1e1;
  real _t15B8 = 0.e0;
  real _t15B9 = -0.e0;
  vec3 _t15BA = [_t15B7, _t15B8, _t15B9];
  real _t15BB = prim •00CE<$[3]; $[3]; $[]> (_t15BA, dPos1251);
  real _t15BC = prim |()|00B5<$[]> (_t15BB);
  real _t15BD = 0.1e-20;
  bool _t15BE = prim >=007E (_t15BC, _t15BD);
  bool _t15BF = prim $and01C4 (_t15B6, _t15BE);
  bool _t15C0 = prim $and01C4 (_t15A8, _t15BF);
  if _t15C0 {
    int _t15C1 = 5;
    bool _t15C2 = prim !=0086 (i1451, _t15C1);
    if _t15C2 {
      real _t15C3 = -0.5e0;
      real _t15C4 = 0.1e1;
      real _t15C5 = 0.e0;
      real _t15C6 = -0.e0;
      vec3 _t15C7 = [_t15C4, _t15C5, _t15C6];
      real _t15C8 = prim •00CE<$[3]; $[3]; $[]> (_t15C7, refPos1250);
      real _t15C9 = prim -0026<$[]> (_t15C3, _t15C8);
      real _t15CA = 0.1e1;
      real _t15CB = 0.e0;
      real _t15CC = -0.e0;
      vec3 _t15CD = [_t15CA, _t15CB, _t15CC];
      real _t15CE = prim •00CE<$[3]; $[3]; $[]> (_t15CD, dPos1251);
      time1452 = prim /0055 (_t15C9, _t15CE);
      face1453 = 5;
    } else {
      real _t15CF = -0.5e0;
      real _t15D0 = 0.1e1;
      real _t15D1 = 0.e0;
      real _t15D2 = -0.e0;
      vec3 _t15D3 = [_t15D0, _t15D1, _t15D2];
      real _t15D4 = prim •00CE<$[3]; $[3]; $[]> (_t15D3, refPos1250);
      real _t15D5 = prim -0026<$[]> (_t15CF, _t15D4);
      real _t15D6 = 0.1e1;
      real _t15D7 = 0.e0;
      real _t15D8 = -0.e0;
      vec3 _t15D9 = [_t15D6, _t15D7, _t15D8];
      real _t15DA = prim •00CE<$[3]; $[3]; $[]> (_t15D9, dPos1251);
      faceTime1454 = prim /0055 (_t15D5, _t15DA);
    }
  }
  int _t15DB = -1;
  bool _t15DC = prim !=0086 (face1453, _t15DB);
  if _t15DC {
    real _t15DD = 0.e0;
    real _t15DE = prim max0125 (time1452, _t15DD);
    real _t15DF = (real)face1453;
    vec2 _t15E0 = [_t15DE, _t15DF];
    return _t15E0;
  } else {
    real _t15E1 = -inf;
    bool _t15E2 = prim ==0084 (_t15E1, faceTime1454);
    if _t15E2 {
      real _t15E3 = -0.1e1;
      real _t15E4 = -0.1e1;
      vec2 _t15E5 = [_t15E3, _t15E4];
      return _t15E5;
    } else {
      real _t15E6 = (real)i1451;
      vec2 _t15E7 = [faceTime1454, _t15E6];
      return _t15E7;
    }
  }
}
function Femdata: Mesh#0 domain15E8 (Femdata: Space arg015E9)
{
  Femdata: Mesh _t15EA = extractFem(arg015E9, Mesh);
  return _t15EA;
}
function Femdata: Space#0 space15EB (Femdata: FemFunc arg015EC)
{
  Femdata: Space _t15ED = extractFem(arg015EC, Space);
  return _t15ED;
}
function Femdata: FuncCell#3 funcCell15EE (Femdata: FemFunc arg015EF, Femdata: MeshCell arg115F0)
{
  int _t15F1 = extractFemItem(CellIndex(MeshCell), int, arg115F0);
  Femdata: FuncCell _t15F2 = loadFem(FuncCell, arg015EF, _t15F1);
  return _t15F2;
}
function real#1 atent161B (real a0161C, real d161D)
{
  real _t161E = 0.e0;
  real _t161F = 0.1e1;
  real _t1620 = 0.15e1;
  real _t1621 = 0.1e1;
  real _t1622 = prim |()|00B5<$[]> (d161D);
  real _t1623 = prim /0055 (_t1622, thick0525);
  real _t1624 = prim -0026<$[]> (_t1621, _t1623);
  real _t1625 = prim *0034 (_t1620, _t1624);
  real _t1626 = prim clamp0094<$[]> (_t161E, _t161F, _t1625);
  real _t1627 = prim *0034 (a0161C, _t1626);
  return _t1627;
}
function vec3#1 fStep1628 (vec3 x1629)
{
  bool _t162A = prim !00BC (analytical053F);
  if _t162A {
    field(3)[3] _t162B = prim ∇00A8<#∞; %3> (F15FB);
    field(3)[3,3] _t162C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t162B);
    tensor[3,3] _t162D = prim @00A5<#∞; %3; $[3,3]> (_t162C, x1629);
    vec3[3] E162E = prim evecs00A0 (_t162D);
    field(3)[3] _t162F = prim ∇00A8<#∞; %3> (F15FB);
    field(3)[3,3] _t1630 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t162F);
    tensor[3,3] _t1631 = prim @00A5<#∞; %3; $[3,3]> (_t1630, x1629);
    real[3] L1632 = prim evals009F (_t1631);
    int _t1633 = 2;
    vec3 _t1634 = prim $sub01C0<vec3; %3> (E162E, _t1633);
    int _t1635 = 2;
    vec3 _t1636 = prim $sub01C0<vec3; %3> (E162E, _t1635);
    tensor[3,3] _t1637 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1634, _t1636);
    int _t1638 = 2;
    real _t1639 = prim $sub01C0<real; %3> (L1632, _t1638);
    tensor[3,3] _t163A = prim /0057<$[3,3]> (_t1637, _t1639);
    int _t163B = 1;
    vec3 _t163C = prim $sub01C0<vec3; %3> (E162E, _t163B);
    int _t163D = 1;
    vec3 _t163E = prim $sub01C0<vec3; %3> (E162E, _t163D);
    tensor[3,3] _t163F = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t163C, _t163E);
    int _t1640 = 1;
    real _t1641 = prim $sub01C0<real; %3> (L1632, _t1640);
    tensor[3,3] _t1642 = prim /0057<$[3,3]> (_t163F, _t1641);
    tensor[3,3] _t1643 = prim +0017<$[3,3]> (_t163A, _t1642);
    tensor[3,3] _t1644 = prim unary -008B<$[3,3]> (_t1643);
    field(3)[3] _t1645 = prim ∇00A8<#∞; %3> (F15FB);
    vec3 _t1646 = prim @00A5<#∞; %3; $[3]> (_t1645, x1629);
    vec3 _t1647 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1644, _t1646);
    return _t1647;
  } else {
    tensor[3,3] _t1648 = prim transpose0145<%3; %3> (rot0542);
    int _t1649 = -1;
    real _t164A = (real)_t1649;
    int _t164B = -2;
    real _t164C = (real)_t164B;
    int _t164D = -3;
    real _t164E = (real)_t164D;
    vec3 _t164F = [_t164A, _t164C, _t164E];
    vec3 _t1650 = prim •00CE<$[3,3]; $[3]; $[3]> (rot0542, x1629);
    vec3 _t1651 = prim modulate0129<%3> (_t164F, _t1650);
    vec3 Gv1652 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1648, _t1651);
    tensor[3,3] _t1653 = prim transpose0145<%3; %3> (rot0542);
    real _t1654 = -0.1e1;
    real _t1655 = 0.e0;
    real _t1656 = 0.e0;
    vec3 _t1657 = [_t1654, _t1655, _t1656];
    real _t1658 = 0.e0;
    real _t1659 = -0.2e1;
    real _t165A = 0.e0;
    vec3 _t165B = [_t1658, _t1659, _t165A];
    real _t165C = 0.e0;
    real _t165D = 0.e0;
    real _t165E = -0.3e1;
    vec3 _t165F = [_t165C, _t165D, _t165E];
    tensor[3,3] _t1660 = [_t1657, _t165B, _t165F];
    tensor[3,3] _t1661 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1653, _t1660);
    tensor[3,3] H1662 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1661, rot0542);
    vec3[3] E1663 = prim evecs00A0 (H1662);
    real[3] L1664 = prim evals009F (H1662);
    int _t1665 = 2;
    vec3 _t1666 = prim $sub01C0<vec3; %3> (E1663, _t1665);
    int _t1667 = 2;
    vec3 _t1668 = prim $sub01C0<vec3; %3> (E1663, _t1667);
    tensor[3,3] _t1669 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1666, _t1668);
    int _t166A = 2;
    real _t166B = prim $sub01C0<real; %3> (L1664, _t166A);
    tensor[3,3] _t166C = prim /0057<$[3,3]> (_t1669, _t166B);
    int _t166D = 1;
    vec3 _t166E = prim $sub01C0<vec3; %3> (E1663, _t166D);
    int _t166F = 1;
    vec3 _t1670 = prim $sub01C0<vec3; %3> (E1663, _t166F);
    tensor[3,3] _t1671 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t166E, _t1670);
    int _t1672 = 1;
    real _t1673 = prim $sub01C0<real; %3> (L1664, _t1672);
    tensor[3,3] _t1674 = prim /0057<$[3,3]> (_t1671, _t1673);
    tensor[3,3] _t1675 = prim +0017<$[3,3]> (_t166C, _t1674);
    tensor[3,3] _t1676 = prim unary -008B<$[3,3]> (_t1675);
    vec3 _t1677 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1676, Gv1652);
    return _t1677;
  }
}
function real#1 fStrength1678 (vec3 x1679)
{
  field(3)[3] _t167A = prim ∇00A8<#∞; %3> (F15FB);
  field(3)[3,3] _t167B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t167A);
  tensor[3,3] _t167C = prim @00A5<#∞; %3; $[3,3]> (_t167B, x1679);
  real[3] _t167D = prim evals009F (_t167C);
  int _t167E = 1;
  real _t167F = prim $sub01C0<real; %3> (_t167D, _t167E);
  real _t1680 = prim unary -008B<$[]> (_t167F);
  field(3)[3] _t1681 = prim ∇00A8<#∞; %3> (F15FB);
  vec3 _t1682 = prim @00A5<#∞; %3; $[3]> (_t1681, x1679);
  real _t1683 = prim |()|00B5<$[3]> (_t1682);
  real _t1684 = prim +0017<$[]> (fBias0528, _t1683);
  real _t1685 = prim /0055 (_t1680, _t1684);
  return _t1685;
}
function bool#1 fTest1686 (vec3 x1687)
{
  bool _t1688 = true;
  return _t1688;
}
function real#1 fMask1689 (vec3 x168A)
{
  real _t168B = 0.1e1;
  return _t168B;
}
function bool#1 posTest168C (vec3 x168D)
{
  bool _t168E;
  Femdata: RefCell _t168F = func refcell0589 (block04FD);
  real _t1690 = 0.1e-8;
  bool _t1691 = extractFemItemN((_t168F, x168D, _t1690),InsideInsert(File=checkInside.in)(Mesh),);
  if _t1691 {
    bool _t1692;
    real _t1693 = func fStrength1678 (x168D);
    bool _t1694 = prim >0080 (_t1693, fStrTh0526);
    if _t1694 {
      bool _t1695;
      real _t1696 = func fMask1689 (x168D);
      bool _t1697 = prim >=007E (_t1696, fMaskTh0527);
      if _t1697 {
        _t1695 = func fTest1686 (x168D);
      } else {
        _t1695 = false;
      }
      _t1692 = _t1695;
    } else {
      _t1692 = false;
    }
    _t168E = _t1692;
  } else {
    _t168E = false;
  }
  return _t168E;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115F3 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15F4 = func funcCell15EE (U050B, c115F3);
  Femdata: FemFunc _t15F5 = extractFem(_t15F4, FemFunc);
  Femdata: FuncCell _t15F6 = func funcCell15EE (U050B, c115F3);
  Femdata: FemFunc _t15F7 = extractFem(_t15F6, FemFunc);
  Femdata: Space _t15F8 = extractFem(_t15F7, Space);
  Femdata: FuncCell _t15F9 = func funcCell15EE (U050B, c115F3);
  int _t15FA = extractFemItem(CellIndex(FuncCell), int, _t15F9);
  F15FB = femField(_t15F5,_t15FA,field(3)[],refField,);
  kernel _t15FC = tent;
  IMAGE1D<double[3]> img15FD = clamp(cmap050F);
  CM15FE = prim ⊛0074<#0; %1; $[3]> (_t15FC, img15FD);
  C15FF = F15FB;
  vec3 _t1600 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN1601 = prim normalize0137<$[3]> (_t1600);
  vec3 _t1602 = prim ×00BE (camN1601, camUp0518);
  camU1603 = prim normalize0137<$[3]> (_t1602);
  camV1604 = prim ×00BE (camN1601, camU1603);
  vec3 _t1605 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist1606 = prim |()|00B5<$[3]> (_t1605);
  real _t1607 = 0.314159265358979323846264338327950288e1;
  real _t1608 = prim *0034 (camFOV051E, _t1607);
  real _t1609 = 0.36e3;
  real _t160A = prim /0055 (_t1608, _t1609);
  real _t160B = prim tan0179 (_t160A);
  camVmax160C = prim *0034 (_t160B, camDist1606);
  real _t160D = (real)iresU0520;
  real _t160E = prim *0034 (camVmax160C, _t160D);
  real _t160F = (real)iresV0521;
  camUmax1610 = prim /0055 (_t160E, _t160F);
  camNearVsp1611 = prim +0017<$[]> (camNear051C, camDist1606);
  camFarVsp1612 = prim +0017<$[]> (camFar051D, camDist1606);
  tensor[3,3] _t1613 = [camU1603, camV1604, camN1601];
  tensor[3,3] _t1614 = prim transpose0145<%3; %3> (_t1613);
  vec3 _t1615 = prim normalize0137<$[3]> (litdir0538);
  litwsp1616 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1614, _t1615);
}
strand ray (int ui1698, int vi1699) {
  real rayU169A;
  real rayV16A1;
  real rayN16A8;
  vec3 UV16A9;
  vec3 rayOrig16AC;
  vec3 rayVec16B1;
  real alphaFix16B6;
  vec3 eyeDir16B9;
  real phKa16BB;
  real phKd16BC;
  real phKs16BD;
  real phSp16BE;
  output vec4 rgba16BF;
  output real raw16C4;
  vec3 rgb16C5;
  real transp16C9;
  {
    real _t169B = prim unary -008B<$[]> (camUmax1610);
    real _t169C = -0.5e0;
    real _t169D = (real)ui1698;
    real _t169E = (real)iresU0520;
    real _t169F = 0.5e0;
    real _t16A0 = prim -0026<$[]> (_t169E, _t169F);
    rayU169A = prim lerp0098<$[]> (_t169B, camUmax1610, _t169C, _t169D, _t16A0);
    real _t16A2 = prim unary -008B<$[]> (camVmax160C);
    real _t16A3 = -0.5e0;
    real _t16A4 = (real)vi1699;
    real _t16A5 = (real)iresV0521;
    real _t16A6 = 0.5e0;
    real _t16A7 = prim -0026<$[]> (_t16A5, _t16A6);
    rayV16A1 = prim lerp0098<$[]> (_t16A2, camVmax160C, _t16A3, _t16A4, _t16A7);
    rayN16A8 = camNearVsp1611;
    vec3 _t16AA = prim *0036<$[3]> (rayU169A, camU1603);
    vec3 _t16AB = prim *0036<$[3]> (rayV16A1, camV1604);
    UV16A9 = prim +0017<$[3]> (_t16AA, _t16AB);
    vec3 _t16AD;
    if camOrtho051F {
      _t16AD = UV16A9;
    } else {
      real _t16AE = 0.e0;
      real _t16AF = 0.e0;
      real _t16B0 = 0.e0;
      _t16AD = [_t16AE, _t16AF, _t16B0];
    }
    rayOrig16AC = prim +0017<$[3]> (camEye0510, _t16AD);
    vec3 _t16B2;
    if camOrtho051F {
      real _t16B3 = 0.e0;
      real _t16B4 = 0.e0;
      real _t16B5 = 0.e0;
      _t16B2 = [_t16B3, _t16B4, _t16B5];
    } else {
      _t16B2 = prim /0057<$[3]> (UV16A9, camDist1606);
    }
    rayVec16B1 = prim +0017<$[3]> (camN1601, _t16B2);
    real _t16B7 = prim |()|00B5<$[3]> (rayVec16B1);
    real _t16B8 = prim *0034 (_t16B7, rayStep0522);
    alphaFix16B6 = prim /0055 (_t16B8, refStep0523);
    vec3 _t16BA = prim normalize0137<$[3]> (rayVec16B1);
    eyeDir16B9 = prim unary -008B<$[3]> (_t16BA);
    phKa16BB = phong052B[0];
    phKd16BC = phong052B[1];
    phKs16BD = phong052B[2];
    phSp16BE = phong052B[3];
    real _t16C0 = 0.e0;
    real _t16C1 = 0.e0;
    real _t16C2 = 0.e0;
    real _t16C3 = 0.e0;
    rgba16BF = [_t16C0, _t16C1, _t16C2, _t16C3];
    raw16C4 = 0.e0;
    real _t16C6 = 0.e0;
    real _t16C7 = 0.e0;
    real _t16C8 = 0.e0;
    rgb16C5 = [_t16C6, _t16C7, _t16C8];
    transp16C9 = 0.1e1;
  }
  update
  {
    rayN16A8 = prim +0017<$[]> (rayN16A8, rayStep0522);
    bool _t16CA = prim >0080 (rayN16A8, camFarVsp1612);
    if _t16CA {
      stabilize;
    }
    vec3 _t16CB = prim *0036<$[3]> (rayN16A8, rayVec16B1);
    vec3 pos16CC = prim +0017<$[3]> (rayOrig16AC, _t16CB);
    bool _t16CD = func posTest168C (pos16CC);
    bool _t16CE = prim !00BC (_t16CD);
    if _t16CE {
      continue;
    }
    vec3 step16CF = func fStep1628 (pos16CC);
    real _t16D0 = prim |()|00B5<$[3]> (step16CF);
    real aa16D1 = func atent161B (maxAlpha0529, _t16D0);
    real _t16D2 = 0.e0;
    bool _t16D3 = prim ==0084 (aa16D1, _t16D2);
    if _t16D3 {
      continue;
    }
    real _t16D4 = 0.1e1;
    real _t16D5 = 0.1e1;
    real _t16D6 = prim -0026<$[]> (_t16D5, aa16D1);
    real _t16D7 = prim ^0069 (_t16D6, alphaFix16B6);
    aa16D1 = prim -0026<$[]> (_t16D4, _t16D7);
    vec3 _t16D8 = prim normalize0137<$[3]> (step16CF);
    vec3 snorm16D9 = prim unary -008B<$[3]> (_t16D8);
    real _t16DA = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, litwsp1616);
    int _t16DB = 2;
    real dcomp16DC = prim ^0068 (_t16DA, _t16DB);
    real scomp16DD = 0.e0;
    real _t16DE = 0.e0;
    bool _t16DF = prim !=0088 (phKs16BD, _t16DE);
    if _t16DF {
      vec3 _t16E0 = prim +0017<$[3]> (eyeDir16B9, litwsp1616);
      vec3 _t16E1 = prim normalize0137<$[3]> (_t16E0);
      real _t16E2 = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, _t16E1);
      real _t16E3 = prim |()|00B5<$[]> (_t16E2);
      scomp16DD = prim ^0069 (_t16E3, phSp16BE);
    }
    vec3 dcol16E4 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1611, rayN16A8, camFarVsp1612);
    real cmin16E5 = cminmax053C[0];
    real cmax16E6 = cminmax053C[1];
    real _t16E7 = 0.1e1;
    real _t16E8 = 0.1e1;
    real _t16E9 = 0.1e1;
    vec3 mcol16EA = [_t16E7, _t16E8, _t16E9];
    bool _t16EB = prim !=0088 (cmin16E5, cmax16E6);
    if _t16EB {
      real _t16EC = 0.e0;
      real _t16ED = 0.1e1;
      vec3 _t16EE = prim +0017<$[3]> (pos16CC, step16CF);
      real _t16EF = prim @00A5<#∞; %3; $[]> (C15FF, _t16EE);
      real _t16F0 = prim lerp0098<$[]> (_t16EC, _t16ED, cmin16E5, _t16EF, cmax16E6);
      mcol16EA = prim @00A5<#0; %1; $[3]> (CM15FE, _t16F0);
    }
    real _t16F1 = prim *0034 (transp16C9, aa16D1);
    real _t16F2 = prim *0034 (phKd16BC, dcomp16DC);
    real _t16F3 = prim +0017<$[]> (phKa16BB, _t16F2);
    vec3 _t16F4 = prim modulate0129<%3> (dcol16E4, mcol16EA);
    vec3 _t16F5 = prim *0036<$[3]> (_t16F3, _t16F4);
    real _t16F6 = prim *0034 (phKs16BD, scomp16DD);
    real _t16F7 = 0.1e1;
    real _t16F8 = 0.1e1;
    real _t16F9 = 0.1e1;
    vec3 _t16FA = [_t16F7, _t16F8, _t16F9];
    vec3 _t16FB = prim *0036<$[3]> (_t16F6, _t16FA);
    vec3 _t16FC = prim +0017<$[3]> (_t16F5, _t16FB);
    vec3 _t16FD = prim *0036<$[3]> (_t16F1, _t16FC);
    rgb16C5 = prim +0017<$[3]> (rgb16C5, _t16FD);
    real _t16FE = 0.1e1;
    real _t16FF = prim -0026<$[]> (_t16FE, aa16D1);
    transp16C9 = prim *0034 (transp16C9, _t16FF);
    bool _t1700 = prim <007A (transp16C9, transp00524);
    if _t1700 {
      transp16C9 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1701 = 0.1e1;
    bool _t1702 = prim <007A (transp16C9, _t1701);
    if _t1702 {
      real _t1703 = 0.1e1;
      real aa1704 = prim -0026<$[]> (_t1703, transp16C9);
      real _t1705 = rgb16C5[0];
      real _t1706 = prim /0055 (_t1705, aa1704);
      real _t1707 = rgb16C5[1];
      real _t1708 = prim /0055 (_t1707, aa1704);
      real _t1709 = rgb16C5[2];
      real _t170A = prim /0055 (_t1709, aa1704);
      rgba16BF = [_t1706, _t1708, _t170A, aa1704];
    }
  }
}
grid(2) {
  int _t170B = 0;
  int _t170C = 1;
  int _t170D = prim -0024 (iresV0521, _t170C);
  int[] _t170E = prim $range01C3 (_t170B, _t170D);
  foreach vi1714 in _t170E {
    int _t170F = 0;
    int _t1710 = 1;
    int _t1711 = prim -0024 (iresU0520, _t1710);
    int[] _t1712 = prim $range01C3 (_t170F, _t1711);
    foreach ui1713 in _t1712 {
      new ray (ui1713, vi1714);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
input tensor[3,3] rot0542 = <default>;
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
  real _t0543 = 0.1e1;
  real _t0544 = 0.e0;
  real _t0545 = 0.e0;
  vec3 _t0546 = [_t0543, _t0544, _t0545];
  real _t0547 = 0.e0;
  real _t0548 = 0.1e1;
  real _t0549 = 0.e0;
  vec3 _t054A = [_t0547, _t0548, _t0549];
  real _t054B = 0.e0;
  real _t054C = 0.e0;
  real _t054D = 0.1e1;
  vec3 _t054E = [_t054B, _t054C, _t054D];
  rot0542 = [_t0546, _t054A, _t054E];
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115F3;
global field(3)[] F15FB;
global field#0(1)[3] CM15FE;
global field(3)[] C15FF;
global vec3 camN1601;
global vec3 camU1603;
global vec3 camV1604;
global real camDist1606;
global real camVmax160C;
global real camUmax1610;
global real camNearVsp1611;
global real camFarVsp1612;
global vec3 litwsp1616;
function int[2]#8 nextCell405E5 (int faceIdx1246, int cell1247, Femdata: Mesh mesh1248)
{
  int _t1249 = 12;
  int _t124A = prim *0033 (cell1247, _t1249);
  int _t124B = 2;
  int _t124C = prim *0033 (faceIdx1246, _t124B);
  int _t124D = prim +0015 (_t124A, _t124C);
  int[2] _t124E = extractFemItemN((mesh1248, _t124D),CellFaceCell(Mesh),);
  return _t124E;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115F3 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15F4;
  int _t172C = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172D = loadFem(FuncCell, U050B, _t172C);
  _t15F4 = _t172D;
  Femdata: FemFunc _t15F5 = extractFem(_t15F4, FemFunc);
  Femdata: FuncCell _t15F6;
  int _t172A = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172B = loadFem(FuncCell, U050B, _t172A);
  _t15F6 = _t172B;
  Femdata: FemFunc _t15F7 = extractFem(_t15F6, FemFunc);
  Femdata: Space _t15F8 = extractFem(_t15F7, Space);
  Femdata: FuncCell _t15F9;
  int _t1728 = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t1729 = loadFem(FuncCell, U050B, _t1728);
  _t15F9 = _t1729;
  int _t15FA = extractFemItem(CellIndex(FuncCell), int, _t15F9);
  F15FB = femField(_t15F5,_t15FA,field(3)[],refField,);
  kernel _t15FC = tent;
  IMAGE1D<double[3]> img15FD = clamp(cmap050F);
  CM15FE = prim ⊛0074<#0; %1; $[3]> (_t15FC, img15FD);
  C15FF = F15FB;
  vec3 _t1600 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN1601 = prim normalize0137<$[3]> (_t1600);
  vec3 _t1602 = prim ×00BE (camN1601, camUp0518);
  camU1603 = prim normalize0137<$[3]> (_t1602);
  camV1604 = prim ×00BE (camN1601, camU1603);
  vec3 _t1605 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist1606 = prim |()|00B5<$[3]> (_t1605);
  real _t1607 = 0.314159265358979323846264338327950288e1;
  real _t1608 = prim *0034 (camFOV051E, _t1607);
  real _t1609 = 0.36e3;
  real _t160A = prim /0055 (_t1608, _t1609);
  real _t160B = prim tan0179 (_t160A);
  camVmax160C = prim *0034 (_t160B, camDist1606);
  real _t160D = (real)iresU0520;
  real _t160E = prim *0034 (camVmax160C, _t160D);
  real _t160F = (real)iresV0521;
  camUmax1610 = prim /0055 (_t160E, _t160F);
  camNearVsp1611 = prim +0017<$[]> (camNear051C, camDist1606);
  camFarVsp1612 = prim +0017<$[]> (camFar051D, camDist1606);
  tensor[3,3] _t1613 = [camU1603, camV1604, camN1601];
  tensor[3,3] _t1614 = prim transpose0145<%3; %3> (_t1613);
  vec3 _t1615 = prim normalize0137<$[3]> (litdir0538);
  litwsp1616 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1614, _t1615);
}
strand ray (int ui1698, int vi1699) {
  real rayU169A;
  real rayV16A1;
  real rayN16A8;
  vec3 UV16A9;
  vec3 rayOrig16AC;
  vec3 rayVec16B1;
  real alphaFix16B6;
  vec3 eyeDir16B9;
  real phKa16BB;
  real phKd16BC;
  real phKs16BD;
  real phSp16BE;
  output vec4 rgba16BF;
  output real raw16C4;
  vec3 rgb16C5;
  real transp16C9;
  {
    real _t169B = prim unary -008B<$[]> (camUmax1610);
    real _t169C = -0.5e0;
    real _t169D = (real)ui1698;
    real _t169E = (real)iresU0520;
    real _t169F = 0.5e0;
    real _t16A0 = prim -0026<$[]> (_t169E, _t169F);
    rayU169A = prim lerp0098<$[]> (_t169B, camUmax1610, _t169C, _t169D, _t16A0);
    real _t16A2 = prim unary -008B<$[]> (camVmax160C);
    real _t16A3 = -0.5e0;
    real _t16A4 = (real)vi1699;
    real _t16A5 = (real)iresV0521;
    real _t16A6 = 0.5e0;
    real _t16A7 = prim -0026<$[]> (_t16A5, _t16A6);
    rayV16A1 = prim lerp0098<$[]> (_t16A2, camVmax160C, _t16A3, _t16A4, _t16A7);
    rayN16A8 = camNearVsp1611;
    vec3 _t16AA = prim *0036<$[3]> (rayU169A, camU1603);
    vec3 _t16AB = prim *0036<$[3]> (rayV16A1, camV1604);
    UV16A9 = prim +0017<$[3]> (_t16AA, _t16AB);
    vec3 _t16AD;
    if camOrtho051F {
      _t16AD = UV16A9;
    } else {
      real _t16AE = 0.e0;
      real _t16AF = 0.e0;
      real _t16B0 = 0.e0;
      _t16AD = [_t16AE, _t16AF, _t16B0];
    }
    rayOrig16AC = prim +0017<$[3]> (camEye0510, _t16AD);
    vec3 _t16B2;
    if camOrtho051F {
      real _t16B3 = 0.e0;
      real _t16B4 = 0.e0;
      real _t16B5 = 0.e0;
      _t16B2 = [_t16B3, _t16B4, _t16B5];
    } else {
      _t16B2 = prim /0057<$[3]> (UV16A9, camDist1606);
    }
    rayVec16B1 = prim +0017<$[3]> (camN1601, _t16B2);
    real _t16B7 = prim |()|00B5<$[3]> (rayVec16B1);
    real _t16B8 = prim *0034 (_t16B7, rayStep0522);
    alphaFix16B6 = prim /0055 (_t16B8, refStep0523);
    vec3 _t16BA = prim normalize0137<$[3]> (rayVec16B1);
    eyeDir16B9 = prim unary -008B<$[3]> (_t16BA);
    phKa16BB = phong052B[0];
    phKd16BC = phong052B[1];
    phKs16BD = phong052B[2];
    phSp16BE = phong052B[3];
    real _t16C0 = 0.e0;
    real _t16C1 = 0.e0;
    real _t16C2 = 0.e0;
    real _t16C3 = 0.e0;
    rgba16BF = [_t16C0, _t16C1, _t16C2, _t16C3];
    raw16C4 = 0.e0;
    real _t16C6 = 0.e0;
    real _t16C7 = 0.e0;
    real _t16C8 = 0.e0;
    rgb16C5 = [_t16C6, _t16C7, _t16C8];
    transp16C9 = 0.1e1;
  }
  update
  {
    rayN16A8 = prim +0017<$[]> (rayN16A8, rayStep0522);
    bool _t16CA = prim >0080 (rayN16A8, camFarVsp1612);
    if _t16CA {
      stabilize;
    }
    vec3 _t16CB = prim *0036<$[3]> (rayN16A8, rayVec16B1);
    vec3 pos16CC = prim +0017<$[3]> (rayOrig16AC, _t16CB);
    bool _t16CD;
    bool _t1786;
    Femdata: RefCell _t1787;
    Femdata: RefCell _t1788 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1787 = _t1788;
    real _t1789 = 0.1e-8;
    bool _t178A = extractFemItemN((_t1787, pos16CC, _t1789),InsideInsert(File=checkInside.in)(Mesh),);
    if _t178A {
      bool _t178B;
      real _t178C;
      field(3)[3] _t178D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t178E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t178D);
      tensor[3,3] _t178F = prim @00A5<#∞; %3; $[3,3]> (_t178E, pos16CC);
      real[3] _t1790 = prim evals009F (_t178F);
      int _t1791 = 1;
      real _t1792 = prim $sub01C0<real; %3> (_t1790, _t1791);
      real _t1793 = prim unary -008B<$[]> (_t1792);
      field(3)[3] _t1794 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1795 = prim @00A5<#∞; %3; $[3]> (_t1794, pos16CC);
      real _t1796 = prim |()|00B5<$[3]> (_t1795);
      real _t1797 = prim +0017<$[]> (fBias0528, _t1796);
      real _t1798 = prim /0055 (_t1793, _t1797);
      _t178C = _t1798;
      bool _t1799 = prim >0080 (_t178C, fStrTh0526);
      if _t1799 {
        bool _t179A;
        real _t179B;
        real _t179C = 0.1e1;
        _t179B = _t179C;
        bool _t179D = prim >=007E (_t179B, fMaskTh0527);
        if _t179D {
          bool _t179E = true;
          _t179A = _t179E;
        } else {
          _t179A = false;
        }
        _t178B = _t179A;
      } else {
        _t178B = false;
      }
      _t1786 = _t178B;
    } else {
      _t1786 = false;
    }
    _t16CD = _t1786;
    bool _t16CE = prim !00BC (_t16CD);
    if _t16CE {
      continue;
    }
    vec3 step16CF;
    bool _t1738 = prim !00BC (analytical053F);
    if _t1738 {
      field(3)[3] _t1739 = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173A = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1739);
      tensor[3,3] _t173B = prim @00A5<#∞; %3; $[3,3]> (_t173A, pos16CC);
      vec3[3] E173C = prim evecs00A0 (_t173B);
      field(3)[3] _t173D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t173D);
      tensor[3,3] _t173F = prim @00A5<#∞; %3; $[3,3]> (_t173E, pos16CC);
      real[3] L1740 = prim evals009F (_t173F);
      int _t1741 = 2;
      vec3 _t1742 = prim $sub01C0<vec3; %3> (E173C, _t1741);
      int _t1743 = 2;
      vec3 _t1744 = prim $sub01C0<vec3; %3> (E173C, _t1743);
      tensor[3,3] _t1745 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1742, _t1744);
      int _t1746 = 2;
      real _t1747 = prim $sub01C0<real; %3> (L1740, _t1746);
      tensor[3,3] _t1748 = prim /0057<$[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      vec3 _t174A = prim $sub01C0<vec3; %3> (E173C, _t1749);
      int _t174B = 1;
      vec3 _t174C = prim $sub01C0<vec3; %3> (E173C, _t174B);
      tensor[3,3] _t174D = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t174A, _t174C);
      int _t174E = 1;
      real _t174F = prim $sub01C0<real; %3> (L1740, _t174E);
      tensor[3,3] _t1750 = prim /0057<$[3,3]> (_t174D, _t174F);
      tensor[3,3] _t1751 = prim +0017<$[3,3]> (_t1748, _t1750);
      tensor[3,3] _t1752 = prim unary -008B<$[3,3]> (_t1751);
      field(3)[3] _t1753 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1754 = prim @00A5<#∞; %3; $[3]> (_t1753, pos16CC);
      vec3 _t1755 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1752, _t1754);
      step16CF = _t1755;
    } else {
      tensor[3,3] _t1756 = prim transpose0145<%3; %3> (rot0542);
      int _t1757 = -1;
      real _t1758 = (real)_t1757;
      int _t1759 = -2;
      real _t175A = (real)_t1759;
      int _t175B = -3;
      real _t175C = (real)_t175B;
      vec3 _t175D = [_t1758, _t175A, _t175C];
      vec3 _t175E = prim •00CE<$[3,3]; $[3]; $[3]> (rot0542, pos16CC);
      vec3 _t175F = prim modulate0129<%3> (_t175D, _t175E);
      vec3 Gv1760 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1756, _t175F);
      tensor[3,3] _t1761 = prim transpose0145<%3; %3> (rot0542);
      real _t1762 = -0.1e1;
      real _t1763 = 0.e0;
      real _t1764 = 0.e0;
      vec3 _t1765 = [_t1762, _t1763, _t1764];
      real _t1766 = 0.e0;
      real _t1767 = -0.2e1;
      real _t1768 = 0.e0;
      vec3 _t1769 = [_t1766, _t1767, _t1768];
      real _t176A = 0.e0;
      real _t176B = 0.e0;
      real _t176C = -0.3e1;
      vec3 _t176D = [_t176A, _t176B, _t176C];
      tensor[3,3] _t176E = [_t1765, _t1769, _t176D];
      tensor[3,3] _t176F = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1761, _t176E);
      tensor[3,3] H1770 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t176F, rot0542);
      vec3[3] E1771 = prim evecs00A0 (H1770);
      real[3] L1772 = prim evals009F (H1770);
      int _t1773 = 2;
      vec3 _t1774 = prim $sub01C0<vec3; %3> (E1771, _t1773);
      int _t1775 = 2;
      vec3 _t1776 = prim $sub01C0<vec3; %3> (E1771, _t1775);
      tensor[3,3] _t1777 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1774, _t1776);
      int _t1778 = 2;
      real _t1779 = prim $sub01C0<real; %3> (L1772, _t1778);
      tensor[3,3] _t177A = prim /0057<$[3,3]> (_t1777, _t1779);
      int _t177B = 1;
      vec3 _t177C = prim $sub01C0<vec3; %3> (E1771, _t177B);
      int _t177D = 1;
      vec3 _t177E = prim $sub01C0<vec3; %3> (E1771, _t177D);
      tensor[3,3] _t177F = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t177C, _t177E);
      int _t1780 = 1;
      real _t1781 = prim $sub01C0<real; %3> (L1772, _t1780);
      tensor[3,3] _t1782 = prim /0057<$[3,3]> (_t177F, _t1781);
      tensor[3,3] _t1783 = prim +0017<$[3,3]> (_t177A, _t1782);
      tensor[3,3] _t1784 = prim unary -008B<$[3,3]> (_t1783);
      vec3 _t1785 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1784, Gv1760);
      step16CF = _t1785;
    }
    real _t16D0 = prim |()|00B5<$[3]> (step16CF);
    real aa16D1;
    real _t172E = 0.e0;
    real _t172F = 0.1e1;
    real _t1730 = 0.15e1;
    real _t1731 = 0.1e1;
    real _t1732 = prim |()|00B5<$[]> (_t16D0);
    real _t1733 = prim /0055 (_t1732, thick0525);
    real _t1734 = prim -0026<$[]> (_t1731, _t1733);
    real _t1735 = prim *0034 (_t1730, _t1734);
    real _t1736 = prim clamp0094<$[]> (_t172E, _t172F, _t1735);
    real _t1737 = prim *0034 (maxAlpha0529, _t1736);
    aa16D1 = _t1737;
    real _t16D2 = 0.e0;
    bool _t16D3 = prim ==0084 (aa16D1, _t16D2);
    if _t16D3 {
      continue;
    }
    real _t16D4 = 0.1e1;
    real _t16D5 = 0.1e1;
    real _t16D6 = prim -0026<$[]> (_t16D5, aa16D1);
    real _t16D7 = prim ^0069 (_t16D6, alphaFix16B6);
    aa16D1 = prim -0026<$[]> (_t16D4, _t16D7);
    vec3 _t16D8 = prim normalize0137<$[3]> (step16CF);
    vec3 snorm16D9 = prim unary -008B<$[3]> (_t16D8);
    real _t16DA = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, litwsp1616);
    int _t16DB = 2;
    real dcomp16DC = prim ^0068 (_t16DA, _t16DB);
    real scomp16DD = 0.e0;
    real _t16DE = 0.e0;
    bool _t16DF = prim !=0088 (phKs16BD, _t16DE);
    if _t16DF {
      vec3 _t16E0 = prim +0017<$[3]> (eyeDir16B9, litwsp1616);
      vec3 _t16E1 = prim normalize0137<$[3]> (_t16E0);
      real _t16E2 = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, _t16E1);
      real _t16E3 = prim |()|00B5<$[]> (_t16E2);
      scomp16DD = prim ^0069 (_t16E3, phSp16BE);
    }
    vec3 dcol16E4 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1611, rayN16A8, camFarVsp1612);
    real cmin16E5 = cminmax053C[0];
    real cmax16E6 = cminmax053C[1];
    real _t16E7 = 0.1e1;
    real _t16E8 = 0.1e1;
    real _t16E9 = 0.1e1;
    vec3 mcol16EA = [_t16E7, _t16E8, _t16E9];
    bool _t16EB = prim !=0088 (cmin16E5, cmax16E6);
    if _t16EB {
      real _t16EC = 0.e0;
      real _t16ED = 0.1e1;
      vec3 _t16EE = prim +0017<$[3]> (pos16CC, step16CF);
      real _t16EF = prim @00A5<#∞; %3; $[]> (C15FF, _t16EE);
      real _t16F0 = prim lerp0098<$[]> (_t16EC, _t16ED, cmin16E5, _t16EF, cmax16E6);
      mcol16EA = prim @00A5<#0; %1; $[3]> (CM15FE, _t16F0);
    }
    real _t16F1 = prim *0034 (transp16C9, aa16D1);
    real _t16F2 = prim *0034 (phKd16BC, dcomp16DC);
    real _t16F3 = prim +0017<$[]> (phKa16BB, _t16F2);
    vec3 _t16F4 = prim modulate0129<%3> (dcol16E4, mcol16EA);
    vec3 _t16F5 = prim *0036<$[3]> (_t16F3, _t16F4);
    real _t16F6 = prim *0034 (phKs16BD, scomp16DD);
    real _t16F7 = 0.1e1;
    real _t16F8 = 0.1e1;
    real _t16F9 = 0.1e1;
    vec3 _t16FA = [_t16F7, _t16F8, _t16F9];
    vec3 _t16FB = prim *0036<$[3]> (_t16F6, _t16FA);
    vec3 _t16FC = prim +0017<$[3]> (_t16F5, _t16FB);
    vec3 _t16FD = prim *0036<$[3]> (_t16F1, _t16FC);
    rgb16C5 = prim +0017<$[3]> (rgb16C5, _t16FD);
    real _t16FE = 0.1e1;
    real _t16FF = prim -0026<$[]> (_t16FE, aa16D1);
    transp16C9 = prim *0034 (transp16C9, _t16FF);
    bool _t1700 = prim <007A (transp16C9, transp00524);
    if _t1700 {
      transp16C9 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1701 = 0.1e1;
    bool _t1702 = prim <007A (transp16C9, _t1701);
    if _t1702 {
      real _t1703 = 0.1e1;
      real aa1704 = prim -0026<$[]> (_t1703, transp16C9);
      real _t1705 = rgb16C5[0];
      real _t1706 = prim /0055 (_t1705, aa1704);
      real _t1707 = rgb16C5[1];
      real _t1708 = prim /0055 (_t1707, aa1704);
      real _t1709 = rgb16C5[2];
      real _t170A = prim /0055 (_t1709, aa1704);
      rgba16BF = [_t1706, _t1708, _t170A, aa1704];
    }
  }
}
grid(2) {
  int _t170B = 0;
  int _t170C = 1;
  int _t170D = prim -0024 (iresV0521, _t170C);
  int[] _t170E = prim $range01C3 (_t170B, _t170D);
  foreach vi1714 in _t170E {
    int _t170F = 0;
    int _t1710 = 1;
    int _t1711 = prim -0024 (iresU0520, _t1710);
    int[] _t1712 = prim $range01C3 (_t170F, _t1711);
    foreach ui1713 in _t1712 {
      new ray (ui1713, vi1714);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
input tensor[3,3] rot0542 = <default>;
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
  real _t0543 = 0.1e1;
  real _t0544 = 0.e0;
  real _t0545 = 0.e0;
  vec3 _t0546 = [_t0543, _t0544, _t0545];
  real _t0547 = 0.e0;
  real _t0548 = 0.1e1;
  real _t0549 = 0.e0;
  vec3 _t054A = [_t0547, _t0548, _t0549];
  real _t054B = 0.e0;
  real _t054C = 0.e0;
  real _t054D = 0.1e1;
  vec3 _t054E = [_t054B, _t054C, _t054D];
  rot0542 = [_t0546, _t054A, _t054E];
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115F3;
global field(3)[] F15FB;
global field#0(1)[3] CM15FE;
global field(3)[] C15FF;
global vec3 camN1601;
global vec3 camU1603;
global vec3 camV1604;
global real camDist1606;
global real camVmax160C;
global real camUmax1610;
global real camNearVsp1611;
global real camFarVsp1612;
global vec3 litwsp1616;
function int[2]#8 nextCell405E5 (int faceIdx1246, int cell1247, Femdata: Mesh mesh1248)
{
  int _t1249 = 12;
  int _t124A = prim *0033 (cell1247, _t1249);
  int _t124B = 2;
  int _t124C = prim *0033 (faceIdx1246, _t124B);
  int _t124D = prim +0015 (_t124A, _t124C);
  int[2] _t124E = extractFemItemN((mesh1248, _t124D),CellFaceCell(Mesh),);
  return _t124E;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115F3 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15F4;
  int _t172C = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172D = loadFem(FuncCell, U050B, _t172C);
  _t15F4 = _t172D;
  Femdata: FemFunc _t15F5 = extractFem(_t15F4, FemFunc);
  Femdata: FuncCell _t15F6;
  int _t172A = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172B = loadFem(FuncCell, U050B, _t172A);
  _t15F6 = _t172B;
  Femdata: FemFunc _t15F7 = extractFem(_t15F6, FemFunc);
  Femdata: Space _t15F8 = extractFem(_t15F7, Space);
  Femdata: FuncCell _t15F9;
  int _t1728 = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t1729 = loadFem(FuncCell, U050B, _t1728);
  _t15F9 = _t1729;
  int _t15FA = extractFemItem(CellIndex(FuncCell), int, _t15F9);
  F15FB = femField(_t15F5,_t15FA,field(3)[],refField,);
  kernel _t15FC = tent;
  IMAGE1D<double[3]> img15FD = clamp(cmap050F);
  CM15FE = prim ⊛0074<#0; %1; $[3]> (_t15FC, img15FD);
  C15FF = F15FB;
  vec3 _t1600 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN1601 = prim normalize0137<$[3]> (_t1600);
  vec3 _t1602 = prim ×00BE (camN1601, camUp0518);
  camU1603 = prim normalize0137<$[3]> (_t1602);
  camV1604 = prim ×00BE (camN1601, camU1603);
  vec3 _t1605 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist1606 = prim |()|00B5<$[3]> (_t1605);
  real _t1607 = 0.314159265358979323846264338327950288e1;
  real _t1608 = prim *0034 (camFOV051E, _t1607);
  real _t1609 = 0.36e3;
  real _t160A = prim /0055 (_t1608, _t1609);
  real _t160B = prim tan0179 (_t160A);
  camVmax160C = prim *0034 (_t160B, camDist1606);
  real _t160D = (real)iresU0520;
  real _t160E = prim *0034 (camVmax160C, _t160D);
  real _t160F = (real)iresV0521;
  camUmax1610 = prim /0055 (_t160E, _t160F);
  camNearVsp1611 = prim +0017<$[]> (camNear051C, camDist1606);
  camFarVsp1612 = prim +0017<$[]> (camFar051D, camDist1606);
  tensor[3,3] _t1613 = [camU1603, camV1604, camN1601];
  tensor[3,3] _t1614 = prim transpose0145<%3; %3> (_t1613);
  vec3 _t1615 = prim normalize0137<$[3]> (litdir0538);
  litwsp1616 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1614, _t1615);
}
strand ray (int ui1698, int vi1699) {
  real rayU169A;
  real rayV16A1;
  real rayN16A8;
  vec3 UV16A9;
  vec3 rayOrig16AC;
  vec3 rayVec16B1;
  real alphaFix16B6;
  vec3 eyeDir16B9;
  real phKa16BB;
  real phKd16BC;
  real phKs16BD;
  real phSp16BE;
  output vec4 rgba16BF;
  output real raw16C4;
  vec3 rgb16C5;
  real transp16C9;
  {
    real _t169B = prim unary -008B<$[]> (camUmax1610);
    real _t169C = -0.5e0;
    real _t169D = (real)ui1698;
    real _t169E = (real)iresU0520;
    real _t169F = 0.5e0;
    real _t16A0 = prim -0026<$[]> (_t169E, _t169F);
    rayU169A = prim lerp0098<$[]> (_t169B, camUmax1610, _t169C, _t169D, _t16A0);
    real _t16A2 = prim unary -008B<$[]> (camVmax160C);
    real _t16A3 = -0.5e0;
    real _t16A4 = (real)vi1699;
    real _t16A5 = (real)iresV0521;
    real _t16A6 = 0.5e0;
    real _t16A7 = prim -0026<$[]> (_t16A5, _t16A6);
    rayV16A1 = prim lerp0098<$[]> (_t16A2, camVmax160C, _t16A3, _t16A4, _t16A7);
    rayN16A8 = camNearVsp1611;
    vec3 _t16AA = prim *0036<$[3]> (rayU169A, camU1603);
    vec3 _t16AB = prim *0036<$[3]> (rayV16A1, camV1604);
    UV16A9 = prim +0017<$[3]> (_t16AA, _t16AB);
    vec3 _t16AD;
    if camOrtho051F {
      _t16AD = UV16A9;
    } else {
      real _t16AE = 0.e0;
      real _t16AF = 0.e0;
      real _t16B0 = 0.e0;
      _t16AD = [_t16AE, _t16AF, _t16B0];
    }
    rayOrig16AC = prim +0017<$[3]> (camEye0510, _t16AD);
    vec3 _t16B2;
    if camOrtho051F {
      real _t16B3 = 0.e0;
      real _t16B4 = 0.e0;
      real _t16B5 = 0.e0;
      _t16B2 = [_t16B3, _t16B4, _t16B5];
    } else {
      _t16B2 = prim /0057<$[3]> (UV16A9, camDist1606);
    }
    rayVec16B1 = prim +0017<$[3]> (camN1601, _t16B2);
    real _t16B7 = prim |()|00B5<$[3]> (rayVec16B1);
    real _t16B8 = prim *0034 (_t16B7, rayStep0522);
    alphaFix16B6 = prim /0055 (_t16B8, refStep0523);
    vec3 _t16BA = prim normalize0137<$[3]> (rayVec16B1);
    eyeDir16B9 = prim unary -008B<$[3]> (_t16BA);
    phKa16BB = phong052B[0];
    phKd16BC = phong052B[1];
    phKs16BD = phong052B[2];
    phSp16BE = phong052B[3];
    real _t16C0 = 0.e0;
    real _t16C1 = 0.e0;
    real _t16C2 = 0.e0;
    real _t16C3 = 0.e0;
    rgba16BF = [_t16C0, _t16C1, _t16C2, _t16C3];
    raw16C4 = 0.e0;
    real _t16C6 = 0.e0;
    real _t16C7 = 0.e0;
    real _t16C8 = 0.e0;
    rgb16C5 = [_t16C6, _t16C7, _t16C8];
    transp16C9 = 0.1e1;
  }
  update
  {
    rayN16A8 = prim +0017<$[]> (rayN16A8, rayStep0522);
    bool _t16CA = prim >0080 (rayN16A8, camFarVsp1612);
    if _t16CA {
      stabilize;
    }
    vec3 _t16CB = prim *0036<$[3]> (rayN16A8, rayVec16B1);
    vec3 pos16CC = prim +0017<$[3]> (rayOrig16AC, _t16CB);
    bool _t16CD;
    bool _t1786;
    Femdata: RefCell _t1787;
    Femdata: RefCell _t1788 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1787 = _t1788;
    real _t1789 = 0.1e-8;
    bool _t178A = extractFemItemN((_t1787, pos16CC, _t1789),InsideInsert(File=checkInside.in)(Mesh),);
    if _t178A {
      bool _t178B;
      real _t178C;
      field(3)[3] _t178D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t178E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t178D);
      tensor[3,3] _t178F = prim @00A5<#∞; %3; $[3,3]> (_t178E, pos16CC);
      real[3] _t1790 = prim evals009F (_t178F);
      int _t1791 = 1;
      real _t1792 = prim $sub01C0<real; %3> (_t1790, _t1791);
      real _t1793 = prim unary -008B<$[]> (_t1792);
      field(3)[3] _t1794 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1795 = prim @00A5<#∞; %3; $[3]> (_t1794, pos16CC);
      real _t1796 = prim |()|00B5<$[3]> (_t1795);
      real _t1797 = prim +0017<$[]> (fBias0528, _t1796);
      real _t1798 = prim /0055 (_t1793, _t1797);
      _t178C = _t1798;
      bool _t1799 = prim >0080 (_t178C, fStrTh0526);
      if _t1799 {
        bool _t179A;
        real _t179B;
        real _t179C = 0.1e1;
        _t179B = _t179C;
        bool _t179D = prim >=007E (_t179B, fMaskTh0527);
        if _t179D {
          bool _t179E = true;
          _t179A = _t179E;
        } else {
          _t179A = false;
        }
        _t178B = _t179A;
      } else {
        _t178B = false;
      }
      _t1786 = _t178B;
    } else {
      _t1786 = false;
    }
    _t16CD = _t1786;
    bool _t16CE = prim !00BC (_t16CD);
    if _t16CE {
      continue;
    }
    vec3 step16CF;
    bool _t1738 = prim !00BC (analytical053F);
    if _t1738 {
      field(3)[3] _t1739 = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173A = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1739);
      tensor[3,3] _t173B = prim @00A5<#∞; %3; $[3,3]> (_t173A, pos16CC);
      vec3[3] E173C = prim evecs00A0 (_t173B);
      field(3)[3] _t173D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t173D);
      tensor[3,3] _t173F = prim @00A5<#∞; %3; $[3,3]> (_t173E, pos16CC);
      real[3] L1740 = prim evals009F (_t173F);
      int _t1741 = 2;
      vec3 _t1742 = prim $sub01C0<vec3; %3> (E173C, _t1741);
      int _t1743 = 2;
      vec3 _t1744 = prim $sub01C0<vec3; %3> (E173C, _t1743);
      tensor[3,3] _t1745 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1742, _t1744);
      int _t1746 = 2;
      real _t1747 = prim $sub01C0<real; %3> (L1740, _t1746);
      tensor[3,3] _t1748 = prim /0057<$[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      vec3 _t174A = prim $sub01C0<vec3; %3> (E173C, _t1749);
      int _t174B = 1;
      vec3 _t174C = prim $sub01C0<vec3; %3> (E173C, _t174B);
      tensor[3,3] _t174D = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t174A, _t174C);
      int _t174E = 1;
      real _t174F = prim $sub01C0<real; %3> (L1740, _t174E);
      tensor[3,3] _t1750 = prim /0057<$[3,3]> (_t174D, _t174F);
      tensor[3,3] _t1751 = prim +0017<$[3,3]> (_t1748, _t1750);
      tensor[3,3] _t1752 = prim unary -008B<$[3,3]> (_t1751);
      field(3)[3] _t1753 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1754 = prim @00A5<#∞; %3; $[3]> (_t1753, pos16CC);
      vec3 _t1755 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1752, _t1754);
      step16CF = _t1755;
    } else {
      tensor[3,3] _t1756 = prim transpose0145<%3; %3> (rot0542);
      int _t1757 = -1;
      real _t1758 = (real)_t1757;
      int _t1759 = -2;
      real _t175A = (real)_t1759;
      int _t175B = -3;
      real _t175C = (real)_t175B;
      vec3 _t175D = [_t1758, _t175A, _t175C];
      vec3 _t175E = prim •00CE<$[3,3]; $[3]; $[3]> (rot0542, pos16CC);
      vec3 _t175F = prim modulate0129<%3> (_t175D, _t175E);
      vec3 Gv1760 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1756, _t175F);
      tensor[3,3] _t1761 = prim transpose0145<%3; %3> (rot0542);
      real _t1762 = -0.1e1;
      real _t1763 = 0.e0;
      real _t1764 = 0.e0;
      vec3 _t1765 = [_t1762, _t1763, _t1764];
      real _t1766 = 0.e0;
      real _t1767 = -0.2e1;
      real _t1768 = 0.e0;
      vec3 _t1769 = [_t1766, _t1767, _t1768];
      real _t176A = 0.e0;
      real _t176B = 0.e0;
      real _t176C = -0.3e1;
      vec3 _t176D = [_t176A, _t176B, _t176C];
      tensor[3,3] _t176E = [_t1765, _t1769, _t176D];
      tensor[3,3] _t176F = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1761, _t176E);
      tensor[3,3] H1770 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t176F, rot0542);
      vec3[3] E1771 = prim evecs00A0 (H1770);
      real[3] L1772 = prim evals009F (H1770);
      int _t1773 = 2;
      vec3 _t1774 = prim $sub01C0<vec3; %3> (E1771, _t1773);
      int _t1775 = 2;
      vec3 _t1776 = prim $sub01C0<vec3; %3> (E1771, _t1775);
      tensor[3,3] _t1777 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1774, _t1776);
      int _t1778 = 2;
      real _t1779 = prim $sub01C0<real; %3> (L1772, _t1778);
      tensor[3,3] _t177A = prim /0057<$[3,3]> (_t1777, _t1779);
      int _t177B = 1;
      vec3 _t177C = prim $sub01C0<vec3; %3> (E1771, _t177B);
      int _t177D = 1;
      vec3 _t177E = prim $sub01C0<vec3; %3> (E1771, _t177D);
      tensor[3,3] _t177F = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t177C, _t177E);
      int _t1780 = 1;
      real _t1781 = prim $sub01C0<real; %3> (L1772, _t1780);
      tensor[3,3] _t1782 = prim /0057<$[3,3]> (_t177F, _t1781);
      tensor[3,3] _t1783 = prim +0017<$[3,3]> (_t177A, _t1782);
      tensor[3,3] _t1784 = prim unary -008B<$[3,3]> (_t1783);
      vec3 _t1785 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1784, Gv1760);
      step16CF = _t1785;
    }
    real _t16D0 = prim |()|00B5<$[3]> (step16CF);
    real aa16D1;
    real _t172E = 0.e0;
    real _t172F = 0.1e1;
    real _t1730 = 0.15e1;
    real _t1731 = 0.1e1;
    real _t1732 = prim |()|00B5<$[]> (_t16D0);
    real _t1733 = prim /0055 (_t1732, thick0525);
    real _t1734 = prim -0026<$[]> (_t1731, _t1733);
    real _t1735 = prim *0034 (_t1730, _t1734);
    real _t1736 = prim clamp0094<$[]> (_t172E, _t172F, _t1735);
    real _t1737 = prim *0034 (maxAlpha0529, _t1736);
    aa16D1 = _t1737;
    real _t16D2 = 0.e0;
    bool _t16D3 = prim ==0084 (aa16D1, _t16D2);
    if _t16D3 {
      continue;
    }
    real _t16D4 = 0.1e1;
    real _t16D5 = 0.1e1;
    real _t16D6 = prim -0026<$[]> (_t16D5, aa16D1);
    real _t16D7 = prim ^0069 (_t16D6, alphaFix16B6);
    aa16D1 = prim -0026<$[]> (_t16D4, _t16D7);
    vec3 _t16D8 = prim normalize0137<$[3]> (step16CF);
    vec3 snorm16D9 = prim unary -008B<$[3]> (_t16D8);
    real _t16DA = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, litwsp1616);
    int _t16DB = 2;
    real dcomp16DC = prim ^0068 (_t16DA, _t16DB);
    real scomp16DD = 0.e0;
    real _t16DE = 0.e0;
    bool _t16DF = prim !=0088 (phKs16BD, _t16DE);
    if _t16DF {
      vec3 _t16E0 = prim +0017<$[3]> (eyeDir16B9, litwsp1616);
      vec3 _t16E1 = prim normalize0137<$[3]> (_t16E0);
      real _t16E2 = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, _t16E1);
      real _t16E3 = prim |()|00B5<$[]> (_t16E2);
      scomp16DD = prim ^0069 (_t16E3, phSp16BE);
    }
    vec3 dcol16E4 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1611, rayN16A8, camFarVsp1612);
    real cmin16E5 = cminmax053C[0];
    real cmax16E6 = cminmax053C[1];
    real _t16E7 = 0.1e1;
    real _t16E8 = 0.1e1;
    real _t16E9 = 0.1e1;
    vec3 mcol16EA = [_t16E7, _t16E8, _t16E9];
    bool _t16EB = prim !=0088 (cmin16E5, cmax16E6);
    if _t16EB {
      real _t16EC = 0.e0;
      real _t16ED = 0.1e1;
      vec3 _t16EE = prim +0017<$[3]> (pos16CC, step16CF);
      real _t16EF = prim @00A5<#∞; %3; $[]> (C15FF, _t16EE);
      real _t16F0 = prim lerp0098<$[]> (_t16EC, _t16ED, cmin16E5, _t16EF, cmax16E6);
      mcol16EA = prim @00A5<#0; %1; $[3]> (CM15FE, _t16F0);
    }
    real _t16F1 = prim *0034 (transp16C9, aa16D1);
    real _t16F2 = prim *0034 (phKd16BC, dcomp16DC);
    real _t16F3 = prim +0017<$[]> (phKa16BB, _t16F2);
    vec3 _t16F4 = prim modulate0129<%3> (dcol16E4, mcol16EA);
    vec3 _t16F5 = prim *0036<$[3]> (_t16F3, _t16F4);
    real _t16F6 = prim *0034 (phKs16BD, scomp16DD);
    real _t16F7 = 0.1e1;
    real _t16F8 = 0.1e1;
    real _t16F9 = 0.1e1;
    vec3 _t16FA = [_t16F7, _t16F8, _t16F9];
    vec3 _t16FB = prim *0036<$[3]> (_t16F6, _t16FA);
    vec3 _t16FC = prim +0017<$[3]> (_t16F5, _t16FB);
    vec3 _t16FD = prim *0036<$[3]> (_t16F1, _t16FC);
    rgb16C5 = prim +0017<$[3]> (rgb16C5, _t16FD);
    real _t16FE = 0.1e1;
    real _t16FF = prim -0026<$[]> (_t16FE, aa16D1);
    transp16C9 = prim *0034 (transp16C9, _t16FF);
    bool _t1700 = prim <007A (transp16C9, transp00524);
    if _t1700 {
      transp16C9 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1701 = 0.1e1;
    bool _t1702 = prim <007A (transp16C9, _t1701);
    if _t1702 {
      real _t1703 = 0.1e1;
      real aa1704 = prim -0026<$[]> (_t1703, transp16C9);
      real _t1705 = rgb16C5[0];
      real _t1706 = prim /0055 (_t1705, aa1704);
      real _t1707 = rgb16C5[1];
      real _t1708 = prim /0055 (_t1707, aa1704);
      real _t1709 = rgb16C5[2];
      real _t170A = prim /0055 (_t1709, aa1704);
      rgba16BF = [_t1706, _t1708, _t170A, aa1704];
    }
  }
}
grid(2) {
  int _t170B = 0;
  int _t170C = 1;
  int _t170D = prim -0024 (iresV0521, _t170C);
  int[] _t170E = prim $range01C3 (_t170B, _t170D);
  foreach vi1714 in _t170E {
    int _t170F = 0;
    int _t1710 = 1;
    int _t1711 = prim -0024 (iresU0520, _t1710);
    int[] _t1712 = prim $range01C3 (_t170F, _t1711);
    foreach ui1713 in _t1712 {
      new ray (ui1713, vi1714);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
input tensor[3,3] rot0542 = <default>;
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
  real _t0543 = 0.1e1;
  real _t0544 = 0.e0;
  real _t0545 = 0.e0;
  vec3 _t0546 = [_t0543, _t0544, _t0545];
  real _t0547 = 0.e0;
  real _t0548 = 0.1e1;
  real _t0549 = 0.e0;
  vec3 _t054A = [_t0547, _t0548, _t0549];
  real _t054B = 0.e0;
  real _t054C = 0.e0;
  real _t054D = 0.1e1;
  vec3 _t054E = [_t054B, _t054C, _t054D];
  rot0542 = [_t0546, _t054A, _t054E];
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115F3;
global field(3)[] F15FB;
global field#0(1)[3] CM15FE;
global field(3)[] C15FF;
global vec3 camN1601;
global vec3 camU1603;
global vec3 camV1604;
global real camDist1606;
global real camVmax160C;
global real camUmax1610;
global real camNearVsp1611;
global real camFarVsp1612;
global vec3 litwsp1616;
function int[2]#8 nextCell405E5 (int faceIdx1246, int cell1247, Femdata: Mesh mesh1248)
{
  int _t1249 = 12;
  int _t124A = prim *0033 (cell1247, _t1249);
  int _t124B = 2;
  int _t124C = prim *0033 (faceIdx1246, _t124B);
  int _t124D = prim +0015 (_t124A, _t124C);
  int[2] _t124E = extractFemItemN((mesh1248, _t124D),CellFaceCell(Mesh),);
  return _t124E;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115F3 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15F4;
  int _t172C = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172D = loadFem(FuncCell, U050B, _t172C);
  _t15F4 = _t172D;
  Femdata: FemFunc _t15F5 = extractFem(_t15F4, FemFunc);
  Femdata: FuncCell _t15F6;
  int _t172A = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172B = loadFem(FuncCell, U050B, _t172A);
  _t15F6 = _t172B;
  Femdata: FemFunc _t15F7 = extractFem(_t15F6, FemFunc);
  Femdata: Space _t15F8 = extractFem(_t15F7, Space);
  Femdata: FuncCell _t15F9;
  int _t1728 = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t1729 = loadFem(FuncCell, U050B, _t1728);
  _t15F9 = _t1729;
  int _t15FA = extractFemItem(CellIndex(FuncCell), int, _t15F9);
  F15FB = femField(_t15F5,_t15FA,field(3)[],refField,);
  kernel _t15FC = tent;
  IMAGE1D<double[3]> img15FD = clamp(cmap050F);
  CM15FE = prim ⊛0074<#0; %1; $[3]> (_t15FC, img15FD);
  C15FF = F15FB;
  vec3 _t1600 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN1601 = prim normalize0137<$[3]> (_t1600);
  vec3 _t1602 = prim ×00BE (camN1601, camUp0518);
  camU1603 = prim normalize0137<$[3]> (_t1602);
  camV1604 = prim ×00BE (camN1601, camU1603);
  vec3 _t1605 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist1606 = prim |()|00B5<$[3]> (_t1605);
  real _t1607 = 0.314159265358979323846264338327950288e1;
  real _t1608 = prim *0034 (camFOV051E, _t1607);
  real _t1609 = 0.36e3;
  real _t160A = prim /0055 (_t1608, _t1609);
  real _t160B = prim tan0179 (_t160A);
  camVmax160C = prim *0034 (_t160B, camDist1606);
  real _t160D = (real)iresU0520;
  real _t160E = prim *0034 (camVmax160C, _t160D);
  real _t160F = (real)iresV0521;
  camUmax1610 = prim /0055 (_t160E, _t160F);
  camNearVsp1611 = prim +0017<$[]> (camNear051C, camDist1606);
  camFarVsp1612 = prim +0017<$[]> (camFar051D, camDist1606);
  tensor[3,3] _t1613 = [camU1603, camV1604, camN1601];
  tensor[3,3] _t1614 = prim transpose0145<%3; %3> (_t1613);
  vec3 _t1615 = prim normalize0137<$[3]> (litdir0538);
  litwsp1616 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1614, _t1615);
}
strand ray (int ui1698, int vi1699) {
  real rayU169A;
  real rayV16A1;
  real rayN16A8;
  vec3 UV16A9;
  vec3 rayOrig16AC;
  vec3 rayVec16B1;
  real alphaFix16B6;
  vec3 eyeDir16B9;
  real phKa16BB;
  real phKd16BC;
  real phKs16BD;
  real phSp16BE;
  output vec4 rgba16BF;
  output real raw16C4;
  vec3 rgb16C5;
  real transp16C9;
  {
    real _t169B = prim unary -008B<$[]> (camUmax1610);
    real _t169C = -0.5e0;
    real _t169D = (real)ui1698;
    real _t169E = (real)iresU0520;
    real _t169F = 0.5e0;
    real _t16A0 = prim -0026<$[]> (_t169E, _t169F);
    rayU169A = prim lerp0098<$[]> (_t169B, camUmax1610, _t169C, _t169D, _t16A0);
    real _t16A2 = prim unary -008B<$[]> (camVmax160C);
    real _t16A3 = -0.5e0;
    real _t16A4 = (real)vi1699;
    real _t16A5 = (real)iresV0521;
    real _t16A6 = 0.5e0;
    real _t16A7 = prim -0026<$[]> (_t16A5, _t16A6);
    rayV16A1 = prim lerp0098<$[]> (_t16A2, camVmax160C, _t16A3, _t16A4, _t16A7);
    rayN16A8 = camNearVsp1611;
    vec3 _t16AA = prim *0036<$[3]> (rayU169A, camU1603);
    vec3 _t16AB = prim *0036<$[3]> (rayV16A1, camV1604);
    UV16A9 = prim +0017<$[3]> (_t16AA, _t16AB);
    vec3 _t16AD;
    if camOrtho051F {
      _t16AD = UV16A9;
    } else {
      real _t16AE = 0.e0;
      real _t16AF = 0.e0;
      real _t16B0 = 0.e0;
      _t16AD = [_t16AE, _t16AF, _t16B0];
    }
    rayOrig16AC = prim +0017<$[3]> (camEye0510, _t16AD);
    vec3 _t16B2;
    if camOrtho051F {
      real _t16B3 = 0.e0;
      real _t16B4 = 0.e0;
      real _t16B5 = 0.e0;
      _t16B2 = [_t16B3, _t16B4, _t16B5];
    } else {
      _t16B2 = prim /0057<$[3]> (UV16A9, camDist1606);
    }
    rayVec16B1 = prim +0017<$[3]> (camN1601, _t16B2);
    real _t16B7 = prim |()|00B5<$[3]> (rayVec16B1);
    real _t16B8 = prim *0034 (_t16B7, rayStep0522);
    alphaFix16B6 = prim /0055 (_t16B8, refStep0523);
    vec3 _t16BA = prim normalize0137<$[3]> (rayVec16B1);
    eyeDir16B9 = prim unary -008B<$[3]> (_t16BA);
    phKa16BB = phong052B[0];
    phKd16BC = phong052B[1];
    phKs16BD = phong052B[2];
    phSp16BE = phong052B[3];
    real _t16C0 = 0.e0;
    real _t16C1 = 0.e0;
    real _t16C2 = 0.e0;
    real _t16C3 = 0.e0;
    rgba16BF = [_t16C0, _t16C1, _t16C2, _t16C3];
    raw16C4 = 0.e0;
    real _t16C6 = 0.e0;
    real _t16C7 = 0.e0;
    real _t16C8 = 0.e0;
    rgb16C5 = [_t16C6, _t16C7, _t16C8];
    transp16C9 = 0.1e1;
  }
  update
  {
    rayN16A8 = prim +0017<$[]> (rayN16A8, rayStep0522);
    bool _t16CA = prim >0080 (rayN16A8, camFarVsp1612);
    if _t16CA {
      stabilize;
    }
    vec3 _t16CB = prim *0036<$[3]> (rayN16A8, rayVec16B1);
    vec3 pos16CC = prim +0017<$[3]> (rayOrig16AC, _t16CB);
    bool _t16CD;
    bool _t1786;
    Femdata: RefCell _t1787;
    Femdata: RefCell _t1788 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1787 = _t1788;
    real _t1789 = 0.1e-8;
    bool _t178A = extractFemItemN((_t1787, pos16CC, _t1789),InsideInsert(File=checkInside.in)(Mesh),);
    if _t178A {
      bool _t178B;
      real _t178C;
      field(3)[3] _t178D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t178E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t178D);
      tensor[3,3] _t178F = prim @00A5<#∞; %3; $[3,3]> (_t178E, pos16CC);
      real[3] _t1790 = prim evals009F (_t178F);
      int _t1791 = 1;
      real _t1792 = prim $sub01C0<real; %3> (_t1790, _t1791);
      real _t1793 = prim unary -008B<$[]> (_t1792);
      field(3)[3] _t1794 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1795 = prim @00A5<#∞; %3; $[3]> (_t1794, pos16CC);
      real _t1796 = prim |()|00B5<$[3]> (_t1795);
      real _t1797 = prim +0017<$[]> (fBias0528, _t1796);
      real _t1798 = prim /0055 (_t1793, _t1797);
      _t178C = _t1798;
      bool _t1799 = prim >0080 (_t178C, fStrTh0526);
      if _t1799 {
        bool _t179A;
        real _t179B;
        real _t179C = 0.1e1;
        _t179B = _t179C;
        bool _t179D = prim >=007E (_t179B, fMaskTh0527);
        if _t179D {
          bool _t179E = true;
          _t179A = _t179E;
        } else {
          _t179A = false;
        }
        _t178B = _t179A;
      } else {
        _t178B = false;
      }
      _t1786 = _t178B;
    } else {
      _t1786 = false;
    }
    _t16CD = _t1786;
    bool _t16CE = prim !00BC (_t16CD);
    if _t16CE {
      continue;
    }
    vec3 step16CF;
    bool _t1738 = prim !00BC (analytical053F);
    if _t1738 {
      field(3)[3] _t1739 = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173A = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1739);
      tensor[3,3] _t173B = prim @00A5<#∞; %3; $[3,3]> (_t173A, pos16CC);
      vec3[3] E173C = prim evecs00A0 (_t173B);
      field(3)[3] _t173D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t173D);
      tensor[3,3] _t173F = prim @00A5<#∞; %3; $[3,3]> (_t173E, pos16CC);
      real[3] L1740 = prim evals009F (_t173F);
      int _t1741 = 2;
      vec3 _t1742 = prim $sub01C0<vec3; %3> (E173C, _t1741);
      int _t1743 = 2;
      vec3 _t1744 = prim $sub01C0<vec3; %3> (E173C, _t1743);
      tensor[3,3] _t1745 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1742, _t1744);
      int _t1746 = 2;
      real _t1747 = prim $sub01C0<real; %3> (L1740, _t1746);
      tensor[3,3] _t1748 = prim /0057<$[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      vec3 _t174A = prim $sub01C0<vec3; %3> (E173C, _t1749);
      int _t174B = 1;
      vec3 _t174C = prim $sub01C0<vec3; %3> (E173C, _t174B);
      tensor[3,3] _t174D = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t174A, _t174C);
      int _t174E = 1;
      real _t174F = prim $sub01C0<real; %3> (L1740, _t174E);
      tensor[3,3] _t1750 = prim /0057<$[3,3]> (_t174D, _t174F);
      tensor[3,3] _t1751 = prim +0017<$[3,3]> (_t1748, _t1750);
      tensor[3,3] _t1752 = prim unary -008B<$[3,3]> (_t1751);
      field(3)[3] _t1753 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1754 = prim @00A5<#∞; %3; $[3]> (_t1753, pos16CC);
      vec3 _t1755 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1752, _t1754);
      step16CF = _t1755;
    } else {
      tensor[3,3] _t1756 = prim transpose0145<%3; %3> (rot0542);
      int _t1757 = -1;
      real _t1758 = (real)_t1757;
      int _t1759 = -2;
      real _t175A = (real)_t1759;
      int _t175B = -3;
      real _t175C = (real)_t175B;
      vec3 _t175D = [_t1758, _t175A, _t175C];
      vec3 _t175E = prim •00CE<$[3,3]; $[3]; $[3]> (rot0542, pos16CC);
      vec3 _t175F = prim modulate0129<%3> (_t175D, _t175E);
      vec3 Gv1760 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1756, _t175F);
      tensor[3,3] _t1761 = prim transpose0145<%3; %3> (rot0542);
      real _t1762 = -0.1e1;
      real _t1763 = 0.e0;
      real _t1764 = 0.e0;
      vec3 _t1765 = [_t1762, _t1763, _t1764];
      real _t1766 = 0.e0;
      real _t1767 = -0.2e1;
      real _t1768 = 0.e0;
      vec3 _t1769 = [_t1766, _t1767, _t1768];
      real _t176A = 0.e0;
      real _t176B = 0.e0;
      real _t176C = -0.3e1;
      vec3 _t176D = [_t176A, _t176B, _t176C];
      tensor[3,3] _t176E = [_t1765, _t1769, _t176D];
      tensor[3,3] _t176F = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1761, _t176E);
      tensor[3,3] H1770 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t176F, rot0542);
      vec3[3] E1771 = prim evecs00A0 (H1770);
      real[3] L1772 = prim evals009F (H1770);
      int _t1773 = 2;
      vec3 _t1774 = prim $sub01C0<vec3; %3> (E1771, _t1773);
      int _t1775 = 2;
      vec3 _t1776 = prim $sub01C0<vec3; %3> (E1771, _t1775);
      tensor[3,3] _t1777 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1774, _t1776);
      int _t1778 = 2;
      real _t1779 = prim $sub01C0<real; %3> (L1772, _t1778);
      tensor[3,3] _t177A = prim /0057<$[3,3]> (_t1777, _t1779);
      int _t177B = 1;
      vec3 _t177C = prim $sub01C0<vec3; %3> (E1771, _t177B);
      int _t177D = 1;
      vec3 _t177E = prim $sub01C0<vec3; %3> (E1771, _t177D);
      tensor[3,3] _t177F = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t177C, _t177E);
      int _t1780 = 1;
      real _t1781 = prim $sub01C0<real; %3> (L1772, _t1780);
      tensor[3,3] _t1782 = prim /0057<$[3,3]> (_t177F, _t1781);
      tensor[3,3] _t1783 = prim +0017<$[3,3]> (_t177A, _t1782);
      tensor[3,3] _t1784 = prim unary -008B<$[3,3]> (_t1783);
      vec3 _t1785 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1784, Gv1760);
      step16CF = _t1785;
    }
    real _t16D0 = prim |()|00B5<$[3]> (step16CF);
    real aa16D1;
    real _t172E = 0.e0;
    real _t172F = 0.1e1;
    real _t1730 = 0.15e1;
    real _t1731 = 0.1e1;
    real _t1732 = prim |()|00B5<$[]> (_t16D0);
    real _t1733 = prim /0055 (_t1732, thick0525);
    real _t1734 = prim -0026<$[]> (_t1731, _t1733);
    real _t1735 = prim *0034 (_t1730, _t1734);
    real _t1736 = prim clamp0094<$[]> (_t172E, _t172F, _t1735);
    real _t1737 = prim *0034 (maxAlpha0529, _t1736);
    aa16D1 = _t1737;
    real _t16D2 = 0.e0;
    bool _t16D3 = prim ==0084 (aa16D1, _t16D2);
    if _t16D3 {
      continue;
    }
    real _t16D4 = 0.1e1;
    real _t16D5 = 0.1e1;
    real _t16D6 = prim -0026<$[]> (_t16D5, aa16D1);
    real _t16D7 = prim ^0069 (_t16D6, alphaFix16B6);
    aa16D1 = prim -0026<$[]> (_t16D4, _t16D7);
    vec3 _t16D8 = prim normalize0137<$[3]> (step16CF);
    vec3 snorm16D9 = prim unary -008B<$[3]> (_t16D8);
    real _t16DA = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, litwsp1616);
    int _t16DB = 2;
    real dcomp16DC = prim ^0068 (_t16DA, _t16DB);
    real scomp16DD = 0.e0;
    real _t16DE = 0.e0;
    bool _t16DF = prim !=0088 (phKs16BD, _t16DE);
    if _t16DF {
      vec3 _t16E0 = prim +0017<$[3]> (eyeDir16B9, litwsp1616);
      vec3 _t16E1 = prim normalize0137<$[3]> (_t16E0);
      real _t16E2 = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, _t16E1);
      real _t16E3 = prim |()|00B5<$[]> (_t16E2);
      scomp16DD = prim ^0069 (_t16E3, phSp16BE);
    }
    vec3 dcol16E4 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1611, rayN16A8, camFarVsp1612);
    real cmin16E5 = cminmax053C[0];
    real cmax16E6 = cminmax053C[1];
    real _t16E7 = 0.1e1;
    real _t16E8 = 0.1e1;
    real _t16E9 = 0.1e1;
    vec3 mcol16EA = [_t16E7, _t16E8, _t16E9];
    bool _t16EB = prim !=0088 (cmin16E5, cmax16E6);
    if _t16EB {
      real _t16EC = 0.e0;
      real _t16ED = 0.1e1;
      vec3 _t16EE = prim +0017<$[3]> (pos16CC, step16CF);
      real _t16EF = prim @00A5<#∞; %3; $[]> (C15FF, _t16EE);
      real _t16F0 = prim lerp0098<$[]> (_t16EC, _t16ED, cmin16E5, _t16EF, cmax16E6);
      mcol16EA = prim @00A5<#0; %1; $[3]> (CM15FE, _t16F0);
    }
    real _t16F1 = prim *0034 (transp16C9, aa16D1);
    real _t16F2 = prim *0034 (phKd16BC, dcomp16DC);
    real _t16F3 = prim +0017<$[]> (phKa16BB, _t16F2);
    vec3 _t16F4 = prim modulate0129<%3> (dcol16E4, mcol16EA);
    vec3 _t16F5 = prim *0036<$[3]> (_t16F3, _t16F4);
    real _t16F6 = prim *0034 (phKs16BD, scomp16DD);
    real _t16F7 = 0.1e1;
    real _t16F8 = 0.1e1;
    real _t16F9 = 0.1e1;
    vec3 _t16FA = [_t16F7, _t16F8, _t16F9];
    vec3 _t16FB = prim *0036<$[3]> (_t16F6, _t16FA);
    vec3 _t16FC = prim +0017<$[3]> (_t16F5, _t16FB);
    vec3 _t16FD = prim *0036<$[3]> (_t16F1, _t16FC);
    rgb16C5 = prim +0017<$[3]> (rgb16C5, _t16FD);
    real _t16FE = 0.1e1;
    real _t16FF = prim -0026<$[]> (_t16FE, aa16D1);
    transp16C9 = prim *0034 (transp16C9, _t16FF);
    bool _t1700 = prim <007A (transp16C9, transp00524);
    if _t1700 {
      transp16C9 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1701 = 0.1e1;
    bool _t1702 = prim <007A (transp16C9, _t1701);
    if _t1702 {
      real _t1703 = 0.1e1;
      real aa1704 = prim -0026<$[]> (_t1703, transp16C9);
      real _t1705 = rgb16C5[0];
      real _t1706 = prim /0055 (_t1705, aa1704);
      real _t1707 = rgb16C5[1];
      real _t1708 = prim /0055 (_t1707, aa1704);
      real _t1709 = rgb16C5[2];
      real _t170A = prim /0055 (_t1709, aa1704);
      rgba16BF = [_t1706, _t1708, _t170A, aa1704];
    }
  }
}
grid(2) {
  int _t170B = 0;
  int _t170C = 1;
  int _t170D = prim -0024 (iresV0521, _t170C);
  int[] _t170E = prim $range01C3 (_t170B, _t170D);
  foreach vi1714 in _t170E {
    int _t170F = 0;
    int _t1710 = 1;
    int _t1711 = prim -0024 (iresU0520, _t1710);
    int[] _t1712 = prim $range01C3 (_t170F, _t1711);
    foreach ui1713 in _t1712 {
      new ray (ui1713, vi1714);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
input tensor[3,3] rot0542 = <default>;
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
  real _t0543 = 0.1e1;
  real _t0544 = 0.e0;
  real _t0545 = 0.e0;
  vec3 _t0546 = [_t0543, _t0544, _t0545];
  real _t0547 = 0.e0;
  real _t0548 = 0.1e1;
  real _t0549 = 0.e0;
  vec3 _t054A = [_t0547, _t0548, _t0549];
  real _t054B = 0.e0;
  real _t054C = 0.e0;
  real _t054D = 0.1e1;
  vec3 _t054E = [_t054B, _t054C, _t054D];
  rot0542 = [_t0546, _t054A, _t054E];
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115F3;
global field(3)[] F15FB;
global field#0(1)[3] CM15FE;
global field(3)[] C15FF;
global vec3 camN1601;
global vec3 camU1603;
global vec3 camV1604;
global real camDist1606;
global real camVmax160C;
global real camUmax1610;
global real camNearVsp1611;
global real camFarVsp1612;
global vec3 litwsp1616;
function int[2]#8 nextCell405E5 (int faceIdx1246, int cell1247, Femdata: Mesh mesh1248)
{
  int _t1249 = 12;
  int _t124A = prim *0033 (cell1247, _t1249);
  int _t124B = 2;
  int _t124C = prim *0033 (faceIdx1246, _t124B);
  int _t124D = prim +0015 (_t124A, _t124C);
  int[2] _t124E = extractFemItemN((mesh1248, _t124D),CellFaceCell(Mesh),);
  return _t124E;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115F3 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15F4;
  int _t172C = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172D = loadFem(FuncCell, U050B, _t172C);
  _t15F4 = _t172D;
  Femdata: FemFunc _t15F5 = extractFem(_t15F4, FemFunc);
  Femdata: FuncCell _t15F6;
  int _t172A = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172B = loadFem(FuncCell, U050B, _t172A);
  _t15F6 = _t172B;
  Femdata: FemFunc _t15F7 = extractFem(_t15F6, FemFunc);
  Femdata: Space _t15F8 = extractFem(_t15F7, Space);
  Femdata: FuncCell _t15F9;
  int _t1728 = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t1729 = loadFem(FuncCell, U050B, _t1728);
  _t15F9 = _t1729;
  int _t15FA = extractFemItem(CellIndex(FuncCell), int, _t15F9);
  F15FB = femField(_t15F5,_t15FA,field(3)[],refField,);
  kernel _t15FC = tent;
  IMAGE1D<double[3]> img15FD = clamp(cmap050F);
  CM15FE = prim ⊛0074<#0; %1; $[3]> (_t15FC, img15FD);
  C15FF = F15FB;
  vec3 _t1600 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN1601 = prim normalize0137<$[3]> (_t1600);
  vec3 _t1602 = prim ×00BE (camN1601, camUp0518);
  camU1603 = prim normalize0137<$[3]> (_t1602);
  camV1604 = prim ×00BE (camN1601, camU1603);
  vec3 _t1605 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist1606 = prim |()|00B5<$[3]> (_t1605);
  real _t1607 = 0.314159265358979323846264338327950288e1;
  real _t1608 = prim *0034 (camFOV051E, _t1607);
  real _t1609 = 0.36e3;
  real _t160A = prim /0055 (_t1608, _t1609);
  real _t160B = prim tan0179 (_t160A);
  camVmax160C = prim *0034 (_t160B, camDist1606);
  real _t160D = (real)iresU0520;
  real _t160E = prim *0034 (camVmax160C, _t160D);
  real _t160F = (real)iresV0521;
  camUmax1610 = prim /0055 (_t160E, _t160F);
  camNearVsp1611 = prim +0017<$[]> (camNear051C, camDist1606);
  camFarVsp1612 = prim +0017<$[]> (camFar051D, camDist1606);
  tensor[3,3] _t1613 = [camU1603, camV1604, camN1601];
  tensor[3,3] _t1614 = prim transpose0145<%3; %3> (_t1613);
  vec3 _t1615 = prim normalize0137<$[3]> (litdir0538);
  litwsp1616 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1614, _t1615);
}
strand ray (int ui1698, int vi1699) {
  real rayU169A;
  real rayV16A1;
  real rayN16A8;
  vec3 UV16A9;
  vec3 rayOrig16AC;
  vec3 rayVec16B1;
  real alphaFix16B6;
  vec3 eyeDir16B9;
  real phKa16BB;
  real phKd16BC;
  real phKs16BD;
  real phSp16BE;
  output vec4 rgba16BF;
  output real raw16C4;
  vec3 rgb16C5;
  real transp16C9;
  {
    real _t169B = prim unary -008B<$[]> (camUmax1610);
    real _t169C = -0.5e0;
    real _t169D = (real)ui1698;
    real _t169E = (real)iresU0520;
    real _t169F = 0.5e0;
    real _t16A0 = prim -0026<$[]> (_t169E, _t169F);
    rayU169A = prim lerp0098<$[]> (_t169B, camUmax1610, _t169C, _t169D, _t16A0);
    real _t16A2 = prim unary -008B<$[]> (camVmax160C);
    real _t16A3 = -0.5e0;
    real _t16A4 = (real)vi1699;
    real _t16A5 = (real)iresV0521;
    real _t16A6 = 0.5e0;
    real _t16A7 = prim -0026<$[]> (_t16A5, _t16A6);
    rayV16A1 = prim lerp0098<$[]> (_t16A2, camVmax160C, _t16A3, _t16A4, _t16A7);
    rayN16A8 = camNearVsp1611;
    vec3 _t16AA = prim *0036<$[3]> (rayU169A, camU1603);
    vec3 _t16AB = prim *0036<$[3]> (rayV16A1, camV1604);
    UV16A9 = prim +0017<$[3]> (_t16AA, _t16AB);
    vec3 _t16AD;
    if camOrtho051F {
      _t16AD = UV16A9;
    } else {
      real _t16AE = 0.e0;
      real _t16AF = 0.e0;
      real _t16B0 = 0.e0;
      _t16AD = [_t16AE, _t16AF, _t16B0];
    }
    rayOrig16AC = prim +0017<$[3]> (camEye0510, _t16AD);
    vec3 _t16B2;
    if camOrtho051F {
      real _t16B3 = 0.e0;
      real _t16B4 = 0.e0;
      real _t16B5 = 0.e0;
      _t16B2 = [_t16B3, _t16B4, _t16B5];
    } else {
      _t16B2 = prim /0057<$[3]> (UV16A9, camDist1606);
    }
    rayVec16B1 = prim +0017<$[3]> (camN1601, _t16B2);
    real _t16B7 = prim |()|00B5<$[3]> (rayVec16B1);
    real _t16B8 = prim *0034 (_t16B7, rayStep0522);
    alphaFix16B6 = prim /0055 (_t16B8, refStep0523);
    vec3 _t16BA = prim normalize0137<$[3]> (rayVec16B1);
    eyeDir16B9 = prim unary -008B<$[3]> (_t16BA);
    phKa16BB = phong052B[0];
    phKd16BC = phong052B[1];
    phKs16BD = phong052B[2];
    phSp16BE = phong052B[3];
    real _t16C0 = 0.e0;
    real _t16C1 = 0.e0;
    real _t16C2 = 0.e0;
    real _t16C3 = 0.e0;
    rgba16BF = [_t16C0, _t16C1, _t16C2, _t16C3];
    raw16C4 = 0.e0;
    real _t16C6 = 0.e0;
    real _t16C7 = 0.e0;
    real _t16C8 = 0.e0;
    rgb16C5 = [_t16C6, _t16C7, _t16C8];
    transp16C9 = 0.1e1;
  }
  update
  {
    rayN16A8 = prim +0017<$[]> (rayN16A8, rayStep0522);
    bool _t16CA = prim >0080 (rayN16A8, camFarVsp1612);
    if _t16CA {
      stabilize;
    }
    vec3 _t16CB = prim *0036<$[3]> (rayN16A8, rayVec16B1);
    vec3 pos16CC = prim +0017<$[3]> (rayOrig16AC, _t16CB);
    bool _t16CD;
    bool _t1786;
    Femdata: RefCell _t1787;
    Femdata: RefCell _t1788 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1787 = _t1788;
    real _t1789 = 0.1e-8;
    bool _t178A = extractFemItemN((_t1787, pos16CC, _t1789),InsideInsert(File=checkInside.in)(Mesh),);
    if _t178A {
      bool _t178B;
      real _t178C;
      field(3)[3] _t178D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t178E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t178D);
      tensor[3,3] _t178F = prim @00A5<#∞; %3; $[3,3]> (_t178E, pos16CC);
      real[3] _t1790 = prim evals009F (_t178F);
      int _t1791 = 1;
      real _t1792 = prim $sub01C0<real; %3> (_t1790, _t1791);
      real _t1793 = prim unary -008B<$[]> (_t1792);
      field(3)[3] _t1794 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1795 = prim @00A5<#∞; %3; $[3]> (_t1794, pos16CC);
      real _t1796 = prim |()|00B5<$[3]> (_t1795);
      real _t1797 = prim +0017<$[]> (fBias0528, _t1796);
      real _t1798 = prim /0055 (_t1793, _t1797);
      _t178C = _t1798;
      bool _t1799 = prim >0080 (_t178C, fStrTh0526);
      if _t1799 {
        bool _t179A;
        real _t179B;
        real _t179C = 0.1e1;
        _t179B = _t179C;
        bool _t179D = prim >=007E (_t179B, fMaskTh0527);
        if _t179D {
          bool _t179E = true;
          _t179A = _t179E;
        } else {
          _t179A = false;
        }
        _t178B = _t179A;
      } else {
        _t178B = false;
      }
      _t1786 = _t178B;
    } else {
      _t1786 = false;
    }
    _t16CD = _t1786;
    bool _t16CE = prim !00BC (_t16CD);
    if _t16CE {
      continue;
    }
    vec3 step16CF;
    bool _t1738 = prim !00BC (analytical053F);
    if _t1738 {
      field(3)[3] _t1739 = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173A = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1739);
      tensor[3,3] _t173B = prim @00A5<#∞; %3; $[3,3]> (_t173A, pos16CC);
      vec3[3] E173C = prim evecs00A0 (_t173B);
      field(3)[3] _t173D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t173D);
      tensor[3,3] _t173F = prim @00A5<#∞; %3; $[3,3]> (_t173E, pos16CC);
      real[3] L1740 = prim evals009F (_t173F);
      int _t1741 = 2;
      vec3 _t1742 = prim $sub01C0<vec3; %3> (E173C, _t1741);
      int _t1743 = 2;
      vec3 _t1744 = prim $sub01C0<vec3; %3> (E173C, _t1743);
      tensor[3,3] _t1745 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1742, _t1744);
      int _t1746 = 2;
      real _t1747 = prim $sub01C0<real; %3> (L1740, _t1746);
      tensor[3,3] _t1748 = prim /0057<$[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      vec3 _t174A = prim $sub01C0<vec3; %3> (E173C, _t1749);
      int _t174B = 1;
      vec3 _t174C = prim $sub01C0<vec3; %3> (E173C, _t174B);
      tensor[3,3] _t174D = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t174A, _t174C);
      int _t174E = 1;
      real _t174F = prim $sub01C0<real; %3> (L1740, _t174E);
      tensor[3,3] _t1750 = prim /0057<$[3,3]> (_t174D, _t174F);
      tensor[3,3] _t1751 = prim +0017<$[3,3]> (_t1748, _t1750);
      tensor[3,3] _t1752 = prim unary -008B<$[3,3]> (_t1751);
      field(3)[3] _t1753 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1754 = prim @00A5<#∞; %3; $[3]> (_t1753, pos16CC);
      vec3 _t1755 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1752, _t1754);
      step16CF = _t1755;
    } else {
      tensor[3,3] _t1756 = prim transpose0145<%3; %3> (rot0542);
      int _t1757 = -1;
      real _t1758 = (real)_t1757;
      int _t1759 = -2;
      real _t175A = (real)_t1759;
      int _t175B = -3;
      real _t175C = (real)_t175B;
      vec3 _t175D = [_t1758, _t175A, _t175C];
      vec3 _t175E = prim •00CE<$[3,3]; $[3]; $[3]> (rot0542, pos16CC);
      vec3 _t175F = prim modulate0129<%3> (_t175D, _t175E);
      vec3 Gv1760 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1756, _t175F);
      tensor[3,3] _t1761 = prim transpose0145<%3; %3> (rot0542);
      real _t1762 = -0.1e1;
      real _t1763 = 0.e0;
      real _t1764 = 0.e0;
      vec3 _t1765 = [_t1762, _t1763, _t1764];
      real _t1766 = 0.e0;
      real _t1767 = -0.2e1;
      real _t1768 = 0.e0;
      vec3 _t1769 = [_t1766, _t1767, _t1768];
      real _t176A = 0.e0;
      real _t176B = 0.e0;
      real _t176C = -0.3e1;
      vec3 _t176D = [_t176A, _t176B, _t176C];
      tensor[3,3] _t176E = [_t1765, _t1769, _t176D];
      tensor[3,3] _t176F = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1761, _t176E);
      tensor[3,3] H1770 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t176F, rot0542);
      vec3[3] E1771 = prim evecs00A0 (H1770);
      real[3] L1772 = prim evals009F (H1770);
      int _t1773 = 2;
      vec3 _t1774 = prim $sub01C0<vec3; %3> (E1771, _t1773);
      int _t1775 = 2;
      vec3 _t1776 = prim $sub01C0<vec3; %3> (E1771, _t1775);
      tensor[3,3] _t1777 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1774, _t1776);
      int _t1778 = 2;
      real _t1779 = prim $sub01C0<real; %3> (L1772, _t1778);
      tensor[3,3] _t177A = prim /0057<$[3,3]> (_t1777, _t1779);
      int _t177B = 1;
      vec3 _t177C = prim $sub01C0<vec3; %3> (E1771, _t177B);
      int _t177D = 1;
      vec3 _t177E = prim $sub01C0<vec3; %3> (E1771, _t177D);
      tensor[3,3] _t177F = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t177C, _t177E);
      int _t1780 = 1;
      real _t1781 = prim $sub01C0<real; %3> (L1772, _t1780);
      tensor[3,3] _t1782 = prim /0057<$[3,3]> (_t177F, _t1781);
      tensor[3,3] _t1783 = prim +0017<$[3,3]> (_t177A, _t1782);
      tensor[3,3] _t1784 = prim unary -008B<$[3,3]> (_t1783);
      vec3 _t1785 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1784, Gv1760);
      step16CF = _t1785;
    }
    real _t16D0 = prim |()|00B5<$[3]> (step16CF);
    real aa16D1;
    real _t172E = 0.e0;
    real _t172F = 0.1e1;
    real _t1730 = 0.15e1;
    real _t1731 = 0.1e1;
    real _t1732 = prim |()|00B5<$[]> (_t16D0);
    real _t1733 = prim /0055 (_t1732, thick0525);
    real _t1734 = prim -0026<$[]> (_t1731, _t1733);
    real _t1735 = prim *0034 (_t1730, _t1734);
    real _t1736 = prim clamp0094<$[]> (_t172E, _t172F, _t1735);
    real _t1737 = prim *0034 (maxAlpha0529, _t1736);
    aa16D1 = _t1737;
    real _t16D2 = 0.e0;
    bool _t16D3 = prim ==0084 (aa16D1, _t16D2);
    if _t16D3 {
      continue;
    }
    real _t16D4 = 0.1e1;
    real _t16D5 = 0.1e1;
    real _t16D6 = prim -0026<$[]> (_t16D5, aa16D1);
    real _t16D7 = prim ^0069 (_t16D6, alphaFix16B6);
    aa16D1 = prim -0026<$[]> (_t16D4, _t16D7);
    vec3 _t16D8 = prim normalize0137<$[3]> (step16CF);
    vec3 snorm16D9 = prim unary -008B<$[3]> (_t16D8);
    real _t16DA = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, litwsp1616);
    int _t16DB = 2;
    real dcomp16DC = prim ^0068 (_t16DA, _t16DB);
    real scomp16DD = 0.e0;
    real _t16DE = 0.e0;
    bool _t16DF = prim !=0088 (phKs16BD, _t16DE);
    if _t16DF {
      vec3 _t16E0 = prim +0017<$[3]> (eyeDir16B9, litwsp1616);
      vec3 _t16E1 = prim normalize0137<$[3]> (_t16E0);
      real _t16E2 = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, _t16E1);
      real _t16E3 = prim |()|00B5<$[]> (_t16E2);
      scomp16DD = prim ^0069 (_t16E3, phSp16BE);
    }
    vec3 dcol16E4 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1611, rayN16A8, camFarVsp1612);
    real cmin16E5 = cminmax053C[0];
    real cmax16E6 = cminmax053C[1];
    real _t16E7 = 0.1e1;
    real _t16E8 = 0.1e1;
    real _t16E9 = 0.1e1;
    vec3 mcol16EA = [_t16E7, _t16E8, _t16E9];
    bool _t16EB = prim !=0088 (cmin16E5, cmax16E6);
    if _t16EB {
      real _t16EC = 0.e0;
      real _t16ED = 0.1e1;
      vec3 _t16EE = prim +0017<$[3]> (pos16CC, step16CF);
      real _t16EF = prim @00A5<#∞; %3; $[]> (C15FF, _t16EE);
      real _t16F0 = prim lerp0098<$[]> (_t16EC, _t16ED, cmin16E5, _t16EF, cmax16E6);
      mcol16EA = prim @00A5<#0; %1; $[3]> (CM15FE, _t16F0);
    }
    real _t16F1 = prim *0034 (transp16C9, aa16D1);
    real _t16F2 = prim *0034 (phKd16BC, dcomp16DC);
    real _t16F3 = prim +0017<$[]> (phKa16BB, _t16F2);
    vec3 _t16F4 = prim modulate0129<%3> (dcol16E4, mcol16EA);
    vec3 _t16F5 = prim *0036<$[3]> (_t16F3, _t16F4);
    real _t16F6 = prim *0034 (phKs16BD, scomp16DD);
    real _t16F7 = 0.1e1;
    real _t16F8 = 0.1e1;
    real _t16F9 = 0.1e1;
    vec3 _t16FA = [_t16F7, _t16F8, _t16F9];
    vec3 _t16FB = prim *0036<$[3]> (_t16F6, _t16FA);
    vec3 _t16FC = prim +0017<$[3]> (_t16F5, _t16FB);
    vec3 _t16FD = prim *0036<$[3]> (_t16F1, _t16FC);
    rgb16C5 = prim +0017<$[3]> (rgb16C5, _t16FD);
    real _t16FE = 0.1e1;
    real _t16FF = prim -0026<$[]> (_t16FE, aa16D1);
    transp16C9 = prim *0034 (transp16C9, _t16FF);
    bool _t1700 = prim <007A (transp16C9, transp00524);
    if _t1700 {
      transp16C9 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1701 = 0.1e1;
    bool _t1702 = prim <007A (transp16C9, _t1701);
    if _t1702 {
      real _t1703 = 0.1e1;
      real aa1704 = prim -0026<$[]> (_t1703, transp16C9);
      real _t1705 = rgb16C5[0];
      real _t1706 = prim /0055 (_t1705, aa1704);
      real _t1707 = rgb16C5[1];
      real _t1708 = prim /0055 (_t1707, aa1704);
      real _t1709 = rgb16C5[2];
      real _t170A = prim /0055 (_t1709, aa1704);
      rgba16BF = [_t1706, _t1708, _t170A, aa1704];
    }
  }
}
grid(2) {
  int _t170B = 0;
  int _t170C = 1;
  int _t170D = prim -0024 (iresV0521, _t170C);
  int[] _t170E = prim $range01C3 (_t170B, _t170D);
  foreach vi1714 in _t170E {
    int _t170F = 0;
    int _t1710 = 1;
    int _t1711 = prim -0024 (iresU0520, _t1710);
    int[] _t1712 = prim $range01C3 (_t170F, _t1711);
    foreach ui1713 in _t1712 {
      new ray (ui1713, vi1714);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
input tensor[3,3] rot0542 = <default>;
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
  real _t0543 = 0.1e1;
  real _t0544 = 0.e0;
  real _t0545 = 0.e0;
  vec3 _t0546 = [_t0543, _t0544, _t0545];
  real _t0547 = 0.e0;
  real _t0548 = 0.1e1;
  real _t0549 = 0.e0;
  vec3 _t054A = [_t0547, _t0548, _t0549];
  real _t054B = 0.e0;
  real _t054C = 0.e0;
  real _t054D = 0.1e1;
  vec3 _t054E = [_t054B, _t054C, _t054D];
  rot0542 = [_t0546, _t054A, _t054E];
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115F3;
global field(3)[] F15FB;
global field#0(1)[3] CM15FE;
global field(3)[] C15FF;
global vec3 camN1601;
global vec3 camU1603;
global vec3 camV1604;
global real camDist1606;
global real camVmax160C;
global real camUmax1610;
global real camNearVsp1611;
global real camFarVsp1612;
global vec3 litwsp1616;
function int[2]#8 nextCell405E5 (int faceIdx1246, int cell1247, Femdata: Mesh mesh1248)
{
  int _t1249 = 12;
  int _t124A = prim *0033 (cell1247, _t1249);
  int _t124B = 2;
  int _t124C = prim *0033 (faceIdx1246, _t124B);
  int _t124D = prim +0015 (_t124A, _t124C);
  int[2] _t124E = extractFemItemN((mesh1248, _t124D),CellFaceCell(Mesh),);
  return _t124E;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115F3 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15F4;
  int _t172C = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172D = loadFem(FuncCell, U050B, _t172C);
  _t15F4 = _t172D;
  Femdata: FemFunc _t15F5 = extractFem(_t15F4, FemFunc);
  Femdata: FuncCell _t15F6;
  int _t172A = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t172B = loadFem(FuncCell, U050B, _t172A);
  _t15F6 = _t172B;
  Femdata: FemFunc _t15F7 = extractFem(_t15F6, FemFunc);
  Femdata: Space _t15F8 = extractFem(_t15F7, Space);
  Femdata: FuncCell _t15F9;
  int _t1728 = extractFemItem(CellIndex(MeshCell), int, c115F3);
  Femdata: FuncCell _t1729 = loadFem(FuncCell, U050B, _t1728);
  _t15F9 = _t1729;
  int _t15FA = extractFemItem(CellIndex(FuncCell), int, _t15F9);
  F15FB = femField(_t15F5,_t15FA,field(3)[],refField,);
  kernel _t15FC = tent;
  IMAGE1D<double[3]> img15FD = clamp(cmap050F);
  CM15FE = prim ⊛0074<#0; %1; $[3]> (_t15FC, img15FD);
  C15FF = F15FB;
  vec3 _t1600 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN1601 = prim normalize0137<$[3]> (_t1600);
  vec3 _t1602 = prim ×00BE (camN1601, camUp0518);
  camU1603 = prim normalize0137<$[3]> (_t1602);
  camV1604 = prim ×00BE (camN1601, camU1603);
  vec3 _t1605 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist1606 = prim |()|00B5<$[3]> (_t1605);
  real _t1607 = 0.314159265358979323846264338327950288e1;
  real _t1608 = prim *0034 (camFOV051E, _t1607);
  real _t1609 = 0.36e3;
  real _t160A = prim /0055 (_t1608, _t1609);
  real _t160B = prim tan0179 (_t160A);
  camVmax160C = prim *0034 (_t160B, camDist1606);
  real _t160D = (real)iresU0520;
  real _t160E = prim *0034 (camVmax160C, _t160D);
  real _t160F = (real)iresV0521;
  camUmax1610 = prim /0055 (_t160E, _t160F);
  camNearVsp1611 = prim +0017<$[]> (camNear051C, camDist1606);
  camFarVsp1612 = prim +0017<$[]> (camFar051D, camDist1606);
  tensor[3,3] _t1613 = [camU1603, camV1604, camN1601];
  tensor[3,3] _t1614 = prim transpose0145<%3; %3> (_t1613);
  vec3 _t1615 = prim normalize0137<$[3]> (litdir0538);
  litwsp1616 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1614, _t1615);
}
strand ray (int ui1698, int vi1699) {
  real rayU169A;
  real rayV16A1;
  real rayN16A8;
  vec3 UV16A9;
  vec3 rayOrig16AC;
  vec3 rayVec16B1;
  real alphaFix16B6;
  vec3 eyeDir16B9;
  real phKa16BB;
  real phKd16BC;
  real phKs16BD;
  real phSp16BE;
  output vec4 rgba16BF;
  output real raw16C4;
  vec3 rgb16C5;
  real transp16C9;
  {
    real _t169B = prim unary -008B<$[]> (camUmax1610);
    real _t169C = -0.5e0;
    real _t169D = (real)ui1698;
    real _t169E = (real)iresU0520;
    real _t169F = 0.5e0;
    real _t16A0 = prim -0026<$[]> (_t169E, _t169F);
    rayU169A = prim lerp0098<$[]> (_t169B, camUmax1610, _t169C, _t169D, _t16A0);
    real _t16A2 = prim unary -008B<$[]> (camVmax160C);
    real _t16A3 = -0.5e0;
    real _t16A4 = (real)vi1699;
    real _t16A5 = (real)iresV0521;
    real _t16A6 = 0.5e0;
    real _t16A7 = prim -0026<$[]> (_t16A5, _t16A6);
    rayV16A1 = prim lerp0098<$[]> (_t16A2, camVmax160C, _t16A3, _t16A4, _t16A7);
    rayN16A8 = camNearVsp1611;
    vec3 _t16AA = prim *0036<$[3]> (rayU169A, camU1603);
    vec3 _t16AB = prim *0036<$[3]> (rayV16A1, camV1604);
    UV16A9 = prim +0017<$[3]> (_t16AA, _t16AB);
    vec3 _t16AD;
    if camOrtho051F {
      _t16AD = UV16A9;
    } else {
      real _t16AE = 0.e0;
      real _t16AF = 0.e0;
      real _t16B0 = 0.e0;
      _t16AD = [_t16AE, _t16AF, _t16B0];
    }
    rayOrig16AC = prim +0017<$[3]> (camEye0510, _t16AD);
    vec3 _t16B2;
    if camOrtho051F {
      real _t16B3 = 0.e0;
      real _t16B4 = 0.e0;
      real _t16B5 = 0.e0;
      _t16B2 = [_t16B3, _t16B4, _t16B5];
    } else {
      _t16B2 = prim /0057<$[3]> (UV16A9, camDist1606);
    }
    rayVec16B1 = prim +0017<$[3]> (camN1601, _t16B2);
    real _t16B7 = prim |()|00B5<$[3]> (rayVec16B1);
    real _t16B8 = prim *0034 (_t16B7, rayStep0522);
    alphaFix16B6 = prim /0055 (_t16B8, refStep0523);
    vec3 _t16BA = prim normalize0137<$[3]> (rayVec16B1);
    eyeDir16B9 = prim unary -008B<$[3]> (_t16BA);
    phKa16BB = phong052B[0];
    phKd16BC = phong052B[1];
    phKs16BD = phong052B[2];
    phSp16BE = phong052B[3];
    real _t16C0 = 0.e0;
    real _t16C1 = 0.e0;
    real _t16C2 = 0.e0;
    real _t16C3 = 0.e0;
    rgba16BF = [_t16C0, _t16C1, _t16C2, _t16C3];
    raw16C4 = 0.e0;
    real _t16C6 = 0.e0;
    real _t16C7 = 0.e0;
    real _t16C8 = 0.e0;
    rgb16C5 = [_t16C6, _t16C7, _t16C8];
    transp16C9 = 0.1e1;
  }
  update
  {
    rayN16A8 = prim +0017<$[]> (rayN16A8, rayStep0522);
    bool _t16CA = prim >0080 (rayN16A8, camFarVsp1612);
    if _t16CA {
      stabilize;
    }
    vec3 _t16CB = prim *0036<$[3]> (rayN16A8, rayVec16B1);
    vec3 pos16CC = prim +0017<$[3]> (rayOrig16AC, _t16CB);
    bool _t16CD;
    bool _t1786;
    Femdata: RefCell _t1787;
    Femdata: RefCell _t1788 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1787 = _t1788;
    real _t1789 = 0.1e-8;
    bool _t178A = extractFemItemN((_t1787, pos16CC, _t1789),InsideInsert(File=checkInside.in)(Mesh),);
    if _t178A {
      bool _t178B;
      real _t178C;
      field(3)[3] _t178D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t178E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t178D);
      tensor[3,3] _t178F = prim @00A5<#∞; %3; $[3,3]> (_t178E, pos16CC);
      real[3] _t1790 = prim evals009F (_t178F);
      int _t1791 = 1;
      real _t1792 = prim $sub01C0<real; %3> (_t1790, _t1791);
      real _t1793 = prim unary -008B<$[]> (_t1792);
      field(3)[3] _t1794 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1795 = prim @00A5<#∞; %3; $[3]> (_t1794, pos16CC);
      real _t1796 = prim |()|00B5<$[3]> (_t1795);
      real _t1797 = prim +0017<$[]> (fBias0528, _t1796);
      real _t1798 = prim /0055 (_t1793, _t1797);
      _t178C = _t1798;
      bool _t1799 = prim >0080 (_t178C, fStrTh0526);
      if _t1799 {
        bool _t179A;
        real _t179B;
        real _t179C = 0.1e1;
        _t179B = _t179C;
        bool _t179D = prim >=007E (_t179B, fMaskTh0527);
        if _t179D {
          bool _t179E = true;
          _t179A = _t179E;
        } else {
          _t179A = false;
        }
        _t178B = _t179A;
      } else {
        _t178B = false;
      }
      _t1786 = _t178B;
    } else {
      _t1786 = false;
    }
    _t16CD = _t1786;
    bool _t16CE = prim !00BC (_t16CD);
    if _t16CE {
      continue;
    }
    vec3 step16CF;
    bool _t1738 = prim !00BC (analytical053F);
    if _t1738 {
      field(3)[3] _t1739 = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173A = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1739);
      tensor[3,3] _t173B = prim @00A5<#∞; %3; $[3,3]> (_t173A, pos16CC);
      vec3[3] E173C = prim evecs00A0 (_t173B);
      field(3)[3] _t173D = prim ∇00A8<#∞; %3> (F15FB);
      field(3)[3,3] _t173E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t173D);
      tensor[3,3] _t173F = prim @00A5<#∞; %3; $[3,3]> (_t173E, pos16CC);
      real[3] L1740 = prim evals009F (_t173F);
      int _t1741 = 2;
      vec3 _t1742 = prim $sub01C0<vec3; %3> (E173C, _t1741);
      int _t1743 = 2;
      vec3 _t1744 = prim $sub01C0<vec3; %3> (E173C, _t1743);
      tensor[3,3] _t1745 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1742, _t1744);
      int _t1746 = 2;
      real _t1747 = prim $sub01C0<real; %3> (L1740, _t1746);
      tensor[3,3] _t1748 = prim /0057<$[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      vec3 _t174A = prim $sub01C0<vec3; %3> (E173C, _t1749);
      int _t174B = 1;
      vec3 _t174C = prim $sub01C0<vec3; %3> (E173C, _t174B);
      tensor[3,3] _t174D = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t174A, _t174C);
      int _t174E = 1;
      real _t174F = prim $sub01C0<real; %3> (L1740, _t174E);
      tensor[3,3] _t1750 = prim /0057<$[3,3]> (_t174D, _t174F);
      tensor[3,3] _t1751 = prim +0017<$[3,3]> (_t1748, _t1750);
      tensor[3,3] _t1752 = prim unary -008B<$[3,3]> (_t1751);
      field(3)[3] _t1753 = prim ∇00A8<#∞; %3> (F15FB);
      vec3 _t1754 = prim @00A5<#∞; %3; $[3]> (_t1753, pos16CC);
      vec3 _t1755 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1752, _t1754);
      step16CF = _t1755;
    } else {
      tensor[3,3] _t1756 = prim transpose0145<%3; %3> (rot0542);
      int _t1757 = -1;
      real _t1758 = (real)_t1757;
      int _t1759 = -2;
      real _t175A = (real)_t1759;
      int _t175B = -3;
      real _t175C = (real)_t175B;
      vec3 _t175D = [_t1758, _t175A, _t175C];
      vec3 _t175E = prim •00CE<$[3,3]; $[3]; $[3]> (rot0542, pos16CC);
      vec3 _t175F = prim modulate0129<%3> (_t175D, _t175E);
      vec3 Gv1760 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1756, _t175F);
      tensor[3,3] _t1761 = prim transpose0145<%3; %3> (rot0542);
      real _t1762 = -0.1e1;
      real _t1763 = 0.e0;
      real _t1764 = 0.e0;
      vec3 _t1765 = [_t1762, _t1763, _t1764];
      real _t1766 = 0.e0;
      real _t1767 = -0.2e1;
      real _t1768 = 0.e0;
      vec3 _t1769 = [_t1766, _t1767, _t1768];
      real _t176A = 0.e0;
      real _t176B = 0.e0;
      real _t176C = -0.3e1;
      vec3 _t176D = [_t176A, _t176B, _t176C];
      tensor[3,3] _t176E = [_t1765, _t1769, _t176D];
      tensor[3,3] _t176F = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t1761, _t176E);
      tensor[3,3] H1770 = prim •00CE<$[3,3]; $[3,3]; $[3,3]> (_t176F, rot0542);
      vec3[3] E1771 = prim evecs00A0 (H1770);
      real[3] L1772 = prim evals009F (H1770);
      int _t1773 = 2;
      vec3 _t1774 = prim $sub01C0<vec3; %3> (E1771, _t1773);
      int _t1775 = 2;
      vec3 _t1776 = prim $sub01C0<vec3; %3> (E1771, _t1775);
      tensor[3,3] _t1777 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1774, _t1776);
      int _t1778 = 2;
      real _t1779 = prim $sub01C0<real; %3> (L1772, _t1778);
      tensor[3,3] _t177A = prim /0057<$[3,3]> (_t1777, _t1779);
      int _t177B = 1;
      vec3 _t177C = prim $sub01C0<vec3; %3> (E1771, _t177B);
      int _t177D = 1;
      vec3 _t177E = prim $sub01C0<vec3; %3> (E1771, _t177D);
      tensor[3,3] _t177F = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t177C, _t177E);
      int _t1780 = 1;
      real _t1781 = prim $sub01C0<real; %3> (L1772, _t1780);
      tensor[3,3] _t1782 = prim /0057<$[3,3]> (_t177F, _t1781);
      tensor[3,3] _t1783 = prim +0017<$[3,3]> (_t177A, _t1782);
      tensor[3,3] _t1784 = prim unary -008B<$[3,3]> (_t1783);
      vec3 _t1785 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1784, Gv1760);
      step16CF = _t1785;
    }
    real _t16D0 = prim |()|00B5<$[3]> (step16CF);
    real aa16D1;
    real _t172E = 0.e0;
    real _t172F = 0.1e1;
    real _t1730 = 0.15e1;
    real _t1731 = 0.1e1;
    real _t1732 = prim |()|00B5<$[]> (_t16D0);
    real _t1733 = prim /0055 (_t1732, thick0525);
    real _t1734 = prim -0026<$[]> (_t1731, _t1733);
    real _t1735 = prim *0034 (_t1730, _t1734);
    real _t1736 = prim clamp0094<$[]> (_t172E, _t172F, _t1735);
    real _t1737 = prim *0034 (maxAlpha0529, _t1736);
    aa16D1 = _t1737;
    real _t16D2 = 0.e0;
    bool _t16D3 = prim ==0084 (aa16D1, _t16D2);
    if _t16D3 {
      continue;
    }
    real _t16D4 = 0.1e1;
    real _t16D5 = 0.1e1;
    real _t16D6 = prim -0026<$[]> (_t16D5, aa16D1);
    real _t16D7 = prim ^0069 (_t16D6, alphaFix16B6);
    aa16D1 = prim -0026<$[]> (_t16D4, _t16D7);
    vec3 _t16D8 = prim normalize0137<$[3]> (step16CF);
    vec3 snorm16D9 = prim unary -008B<$[3]> (_t16D8);
    real _t16DA = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, litwsp1616);
    int _t16DB = 2;
    real dcomp16DC = prim ^0068 (_t16DA, _t16DB);
    real scomp16DD = 0.e0;
    real _t16DE = 0.e0;
    bool _t16DF = prim !=0088 (phKs16BD, _t16DE);
    if _t16DF {
      vec3 _t16E0 = prim +0017<$[3]> (eyeDir16B9, litwsp1616);
      vec3 _t16E1 = prim normalize0137<$[3]> (_t16E0);
      real _t16E2 = prim •00CE<$[3]; $[3]; $[]> (snorm16D9, _t16E1);
      real _t16E3 = prim |()|00B5<$[]> (_t16E2);
      scomp16DD = prim ^0069 (_t16E3, phSp16BE);
    }
    vec3 dcol16E4 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1611, rayN16A8, camFarVsp1612);
    real cmin16E5 = cminmax053C[0];
    real cmax16E6 = cminmax053C[1];
    real _t16E7 = 0.1e1;
    real _t16E8 = 0.1e1;
    real _t16E9 = 0.1e1;
    vec3 mcol16EA = [_t16E7, _t16E8, _t16E9];
    bool _t16EB = prim !=0088 (cmin16E5, cmax16E6);
    if _t16EB {
      real _t16EC = 0.e0;
      real _t16ED = 0.1e1;
      vec3 _t16EE = prim +0017<$[3]> (pos16CC, step16CF);
      real _t16EF = prim @00A5<#∞; %3; $[]> (C15FF, _t16EE);
      real _t16F0 = prim lerp0098<$[]> (_t16EC, _t16ED, cmin16E5, _t16EF, cmax16E6);
      mcol16EA = prim @00A5<#0; %1; $[3]> (CM15FE, _t16F0);
    }
    real _t16F1 = prim *0034 (transp16C9, aa16D1);
    real _t16F2 = prim *0034 (phKd16BC, dcomp16DC);
    real _t16F3 = prim +0017<$[]> (phKa16BB, _t16F2);
    vec3 _t16F4 = prim modulate0129<%3> (dcol16E4, mcol16EA);
    vec3 _t16F5 = prim *0036<$[3]> (_t16F3, _t16F4);
    real _t16F6 = prim *0034 (phKs16BD, scomp16DD);
    real _t16F7 = 0.1e1;
    real _t16F8 = 0.1e1;
    real _t16F9 = 0.1e1;
    vec3 _t16FA = [_t16F7, _t16F8, _t16F9];
    vec3 _t16FB = prim *0036<$[3]> (_t16F6, _t16FA);
    vec3 _t16FC = prim +0017<$[3]> (_t16F5, _t16FB);
    vec3 _t16FD = prim *0036<$[3]> (_t16F1, _t16FC);
    rgb16C5 = prim +0017<$[3]> (rgb16C5, _t16FD);
    real _t16FE = 0.1e1;
    real _t16FF = prim -0026<$[]> (_t16FE, aa16D1);
    transp16C9 = prim *0034 (transp16C9, _t16FF);
    bool _t1700 = prim <007A (transp16C9, transp00524);
    if _t1700 {
      transp16C9 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1701 = 0.1e1;
    bool _t1702 = prim <007A (transp16C9, _t1701);
    if _t1702 {
      real _t1703 = 0.1e1;
      real aa1704 = prim -0026<$[]> (_t1703, transp16C9);
      real _t1705 = rgb16C5[0];
      real _t1706 = prim /0055 (_t1705, aa1704);
      real _t1707 = rgb16C5[1];
      real _t1708 = prim /0055 (_t1707, aa1704);
      real _t1709 = rgb16C5[2];
      real _t170A = prim /0055 (_t1709, aa1704);
      rgba16BF = [_t1706, _t1708, _t170A, aa1704];
    }
  }
}
grid(2) {
  int _t170B = 0;
  int _t170C = 1;
  int _t170D = prim -0024 (iresV0521, _t170C);
  int[] _t170E = prim $range01C3 (_t170B, _t170D);
  foreach vi1714 in _t170E {
    int _t170F = 0;
    int _t1710 = 1;
    int _t1711 = prim -0024 (iresU0520, _t1710);
    int[] _t1712 = prim $range01C3 (_t170F, _t1711);
    foreach ui1713 in _t1712 {
      new ray (ui1713, vi1714);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block179F (block) = <no-default>
  input 0space0509_intermedateGlobal17A0 (space) = <no-default>
  input 0U050B_intermedateGlobal17A1 (U) = <no-default>
  input cellChoice17A2 (cellChoice) = <no-default>
  input cmap17A3 (cmap) = image("cmap.nrrd")
  input camEye17A4 (camEye) = <default>
  input camAt17A5 (camAt) = <default>
  input camUp17A6 (camUp) = <default>
  input camNear17A7 (camNear) = <default>
  input camFar17A8 (camFar) = <default>
  input camFOV17A9 (camFOV) = <default>
  input camOrtho17AA (camOrtho) = <default>
  input iresU17AB (iresU) = <default>
  input iresV17AC (iresV) = <default>
  input rayStep17AD (rayStep) = <default>
  input refStep17AE (refStep) = <default>
  input transp017AF (transp0) = <default>
  input thick17B0 (thick) = <default>
  input fStrTh17B1 (fStrTh) = <default>
  input fMaskTh17B2 (fMaskTh) = <default>
  input fBias17B3 (fBias) = <default>
  input maxAlpha17B4 (maxAlpha) = <default>
  input light17B5 (light) = <default>
  input phong17B6 (phong) = <default>
  input mcNear17B7 (mcNear) = <default>
  input mcFar17B8 (mcFar) = <default>
  input litdir17B9 (litdir) = <default>
  input cminmax17BA (cminmax) = <default>
  input analytical17BB (analytical) = <default>
  input umm17BC (umm) = image("data.nrrd")
  input rot17BD (rot) = <default>
  global femData:MeshCell[] 0cell_block1853
  global femData:Space space1854
  global femData:FemFunc U1855
  global femData:MeshCell c11856
  global field F1857
  global field CM1858
  global field C1859
  global tensor[3] camN185A
  global tensor[3] camU185B
  global tensor[3] camV185C
  global real camDist185D
  global real camVmax185E
  global real camUmax185F
  global real camNearVsp1860
  global real camFarVsp1861
  global tensor[3] litwsp1862
## functions
  function int[2] nextCell41874 (int faceIdx1863#1, int cell1864#1, femData:Mesh mesh1865#1) {
    ENTRY1873:  preds = []
      int _t1866#1 = 12;
      int _t1868#1 = IMul(cell1864,_t1866);
      int _t186A#1 = 2;
      int _t186C#1 = IMul(faceIdx1863,_t186A);
      int _t186E#1 = IAdd(_t1868,_t186C);
      int[2] _t1870#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1865,_t186E);
      return _t1870
}
## input initialization
  ENTRY1851:  preds = []
    real _t17BE#1 = 0.e0;
    real _t17C0#1 = -0.2e1;
    real _t17C2#1 = 0.e0;
    tensor[3] camEye17C4#1 = <tensor[3]>[_t17BE,_t17C0,_t17C2];
    globals.camEye17A4 = camEye17C4;
    real _t17C7#1 = 0.e0;
    real _t17C9#1 = 0.e0;
    real _t17CB#1 = 0.e0;
    tensor[3] camAt17CD#1 = <tensor[3]>[_t17C7,_t17C9,_t17CB];
    globals.camAt17A5 = camAt17CD;
    real _t17D0#1 = 0.e0;
    real _t17D2#1 = 0.e0;
    real _t17D4#1 = 0.1e1;
    tensor[3] camUp17D6#1 = <tensor[3]>[_t17D0,_t17D2,_t17D4];
    globals.camUp17A6 = camUp17D6;
    real camNear17D9#1 = -0.4e1;
    globals.camNear17A7 = camNear17D9;
    real camFar17DC#1 = 0.4e1;
    globals.camFar17A8 = camFar17DC;
    real camFOV17DF#1 = 0.1e2;
    globals.camFOV17A9 = camFOV17DF;
    bool camOrtho17E2#1 = false;
    globals.camOrtho17AA = camOrtho17E2;
    int iresU17E5#1 = 100;
    globals.iresU17AB = iresU17E5;
    int iresV17E8#1 = 100;
    globals.iresV17AC = iresV17E8;
    real rayStep17EB#1 = 0.1e-3;
    globals.rayStep17AD = rayStep17EB;
    real refStep17EE#1 = 0.1e-3;
    globals.refStep17AE = refStep17EE;
    real transp017F1#1 = 0.5e-2;
    globals.transp017AF = transp017F1;
    real thick17F4#1 = 0.1e-1;
    globals.thick17B0 = thick17F4;
    real fStrTh17F7#1 = 0.e0;
    globals.fStrTh17B1 = fStrTh17F7;
    real fMaskTh17FA#1 = 0.e0;
    globals.fMaskTh17B2 = fMaskTh17FA;
    real fBias17FD#1 = 0.1e0;
    globals.fBias17B3 = fBias17FD;
    real maxAlpha1800#1 = 0.1e1;
    globals.maxAlpha17B4 = maxAlpha1800;
    bool light1803#1 = false;
    globals.light17B5 = light1803;
    real _t1806#1 = 0.1e0;
    real _t1808#1 = 0.7e0;
    real _t180A#1 = 0.2e0;
    real _t180C#1 = 0.1e3;
    tensor[4] phong180E#1 = <tensor[4]>[_t1806,_t1808,_t180A,_t180C];
    globals.phong17B6 = phong180E;
    real _t1811#1 = 0.1e1;
    real _t1813#1 = 0.1e1;
    real _t1815#1 = 0.1e1;
    tensor[3] mcNear1817#1 = <tensor[3]>[_t1811,_t1813,_t1815];
    globals.mcNear17B7 = mcNear1817;
    real _t181A#1 = 0.1e1;
    real _t181C#1 = 0.1e1;
    real _t181E#1 = 0.1e1;
    tensor[3] mcFar1820#1 = <tensor[3]>[_t181A,_t181C,_t181E];
    globals.mcFar17B8 = mcFar1820;
    real _t1823#1 = 0.e0;
    real _t1825#1 = -0.1e1;
    real _t1827#1 = 0.e0;
    tensor[3] litdir1829#1 = <tensor[3]>[_t1823,_t1825,_t1827];
    globals.litdir17B9 = litdir1829;
    real _t182C#1 = 0.e0;
    real _t182E#1 = 0.e0;
    tensor[2] cminmax1830#1 = <tensor[2]>[_t182C,_t182E];
    globals.cminmax17BA = cminmax1830;
    bool analytical1833#1 = true;
    globals.analytical17BB = analytical1833;
    real _t1836#1 = 0.1e1;
    real _t1838#1 = 0.e0;
    real _t183A#1 = 0.e0;
    tensor[3] _t183C#1 = <tensor[3]>[_t1836,_t1838,_t183A];
    real _t183E#1 = 0.e0;
    real _t1840#1 = 0.1e1;
    real _t1842#1 = 0.e0;
    tensor[3] _t1844#1 = <tensor[3]>[_t183E,_t1840,_t1842];
    real _t1846#1 = 0.e0;
    real _t1848#1 = 0.e0;
    real _t184A#1 = 0.1e1;
    tensor[3] _t184C#1 = <tensor[3]>[_t1846,_t1848,_t184A];
    tensor[3,3] rot184E#1 = <tensor[3,3]>[_t183C,_t1844,_t184C];
    globals.rot17BD = rot184E;
    return
## global-variable initialization
  ENTRY1912:  preds = []
    femData:Mesh block1882#3 = globals.block179F;
    femData:Space 0space0509_intermedateGlobal1881#1 = globals.0space0509_intermedateGlobal17A0;
    femData:FemFunc 0U050B_intermedateGlobal1880#1 = globals.0U050B_intermedateGlobal17A1;
    int cellChoice187F#1 = globals.cellChoice17A2;
    image(IMAGE1D<double[3]>) cmap187E#1 = globals.cmap17A3;
    tensor[3] camEye187D#2 = globals.camEye17A4;
    tensor[3] camAt187C#2 = globals.camAt17A5;
    tensor[3] camUp187B#1 = globals.camUp17A6;
    real camNear187A#1 = globals.camNear17A7;
    real camFar1879#1 = globals.camFar17A8;
    real camFOV1878#1 = globals.camFOV17A9;
    int iresU1877#1 = globals.iresU17AB;
    int iresV1876#1 = globals.iresV17AC;
    tensor[3] litdir1875#2 = globals.litdir17B9;
    int _t1891#1 = 0;
    int _t1893#1 = 1;
    int _t1895#1 = ExtractFemItem<int,NumCell(Mesh)>(block1882);
    int _t1897#1 = ISub(_t1895,_t1893);
    int[] _t1899#1 = Range(_t1891,_t1897);
    femData:MeshCell[] _t189B#1 = <femData:MeshCell[]>{};
  FOREACH189F:  preds = [ASSIGN189C,NEXT18A4]
    foreach (_t189D in _t1899) on exit goto ASSIGN18A6
      femData:MeshCell[] _t189E#2 = phi(_t189B,_t18A2)
    femData:MeshCell _t18A0#1 = LoadFem<femData:MeshCell>(block1882,_t189D);
    femData:MeshCell[] _t18A2#1 = Append<femData:MeshCell>(_t189E,_t18A0);
    goto FOREACH189F
  ASSIGN18A6:  preds = [FOREACH189F]
    femData:MeshCell[] 0cell_block18A5#2 = _t189E;
    globals.0cell_block1853 = 0cell_block18A5;
    femData:Space space18A8#2 = LoadFem<femData:Space>(0space0509_intermedateGlobal1881,block1882);
    globals.space1854 = space18A8;
    femData:FemFunc U18AB#4 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1880,space18A8);
    globals.U1855 = U18AB;
    femData:MeshCell c118AE#4 = Subscript<femData:MeshCell[]>(0cell_block18A5,cellChoice187F);
    globals.c11856 = c118AE;
    int _t18B2#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c118AE);
    femData:FuncCell _t18B4#1 = LoadFem<femData:FuncCell>(U18AB,_t18B2);
    femData:FuncCell _t18B6#1 = _t18B4;
    femData:FemFunc _t18B8#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t18B6);
    int _t18BB#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c118AE);
    femData:FuncCell _t18BD#1 = LoadFem<femData:FuncCell>(U18AB,_t18BB);
    femData:FuncCell _t18BF#1 = _t18BD;
    femData:FemFunc _t18C1#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t18BF);
    femData:Space _t18C3#1 = ExtractFem<femData:Space,femData:FemFunc>(_t18C1);
    int _t18C6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c118AE);
    femData:FuncCell _t18C8#1 = LoadFem<femData:FuncCell>(U18AB,_t18C6);
    femData:FuncCell _t18CA#1 = _t18C8;
    int _t18CC#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t18CA);
    field F18CE#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t18CC,_t18C3,_t18B8);
    globals.F1857 = F18CE;
    kernel _t18D1#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img18D3#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap187E);
    field CM18D5#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img18D3,_t18D1);
    globals.CM1858 = CM18D5;
    field C18D8#1 = F18CE;
    globals.C1859 = C18D8;
    tensor[3] _t18DB#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt187C,camEye187D);
    tensor[3] camN18DD#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t18DB,_t18DB);
    globals.camN185A = camN18DD;
    tensor[3] _t18E0#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN18DD,camUp187B);
    tensor[3] camU18E2#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t18E0,_t18E0);
    globals.camU185B = camU18E2;
    tensor[3] camV18E5#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN18DD,camU18E2);
    globals.camV185C = camV18E5;
    tensor[3] _t18E8#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt187C,camEye187D);
    real camDist18EA#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t18E8);
    globals.camDist185D = camDist18EA;
    real _t18ED#1 = 0.314159265358979323846264338327950288e1;
    real _t18EF#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1878,_t18ED);
    real _t18F1#1 = 0.36e3;
    real _t18F3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18EF,_t18F1);
    real _t18F5#1 = λ(T0[])<Tangent(T0)> (_t18F3);
    real camVmax18F7#2 = λ(T0[],T1[])<(T0 * T1)> (_t18F5,camDist18EA);
    globals.camVmax185E = camVmax18F7;
    real _t18FA#1 = IntToReal(iresU1877);
    real _t18FC#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax18F7,_t18FA);
    real _t18FE#1 = IntToReal(iresV1876);
    real camUmax1900#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18FC,_t18FE);
    globals.camUmax185F = camUmax1900;
    real camNearVsp1903#1 = λ(T0[],T1[])<(T0 + T1)> (camNear187A,camDist18EA);
    globals.camNearVsp1860 = camNearVsp1903;
    real camFarVsp1906#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1879,camDist18EA);
    globals.camFarVsp1861 = camFarVsp1906;
    tensor[3,3] _t1909#1 = <tensor[3,3]>[camU18E2,camV18E5,camN18DD];
    tensor[3,3] _t190B#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t1909);
    tensor[3] _t190D#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (litdir1875,litdir1875);
    tensor[3] litwsp190F#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t190B,_t190D);
    globals.litwsp1862 = litwsp190F;
    return
## strand
  strand ray (int ui1931#1, int vi1932#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY19DB:  preds = []
        tensor[3] camEye1950#1 = globals.camEye17A4;
        bool camOrtho194F#2 = globals.camOrtho17AA;
        int iresU194E#1 = globals.iresU17AB;
        int iresV194D#1 = globals.iresV17AC;
        real rayStep194C#1 = globals.rayStep17AD;
        real refStep194B#1 = globals.refStep17AE;
        tensor[4] phong194A#4 = globals.phong17B6;
        tensor[3] camN1949#1 = globals.camN185A;
        tensor[3] camU1948#1 = globals.camU185B;
        tensor[3] camV1947#1 = globals.camV185C;
        real camDist1946#1 = globals.camDist185D;
        real camVmax1945#2 = globals.camVmax185E;
        real camUmax1944#2 = globals.camUmax185F;
        real camNearVsp1943#1 = globals.camNearVsp1860;
        real _t196F#1 = λ(T0[])<Neg(T0)> (camUmax1944);
        real _t1971#1 = -0.5e0;
        real _t1973#1 = IntToReal(ui1931);
        real _t1975#1 = IntToReal(iresU194E);
        real _t1977#1 = 0.5e0;
        real _t1979#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1975,_t1977);
        real rayU197B#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t196F,camUmax1944,_t1971,_t1973,_t1979);
        real _t197D#1 = λ(T0[])<Neg(T0)> (camVmax1945);
        real _t197F#1 = -0.5e0;
        real _t1981#1 = IntToReal(vi1932);
        real _t1983#1 = IntToReal(iresV194D);
        real _t1985#1 = 0.5e0;
        real _t1987#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1983,_t1985);
        real rayV1989#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t197D,camVmax1945,_t197F,_t1981,_t1987);
        real rayN198B#1 = camNearVsp1943;
        tensor[3] _t198D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU197B,camU1948);
        tensor[3] _t198F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV1989,camV1947);
        tensor[3] UV1991#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t198D,_t198F);
        if camOrtho194F then goto ASSIGN1997 else goto ASSIGN1999
      ASSIGN1997:  preds = [COND19A0]
        tensor[3] _t1995#1 = UV1991;
        goto JOIN1994
      JOIN1994:  preds = [ASSIGN1997,ASSIGN199F]
        tensor[3] _t1996#1 = phi(_t1995,_t199E)
        tensor[3] rayOrig19A1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1950,_t1996);
        if camOrtho194F then goto ASSIGN19A6 else goto ASSIGN19AF
      ASSIGN19A6:  preds = [COND19B0]
        real _t19A5#1 = 0.e0;
        real _t19A7#1 = 0.e0;
        real _t19A9#1 = 0.e0;
        tensor[3] _t19AB#1 = <tensor[3]>[_t19A5,_t19A7,_t19A9];
        goto JOIN19A4
      JOIN19A4:  preds = [ASSIGN19AD,ASSIGN19AF]
        tensor[3] _t19AC#1 = phi(_t19AB,_t19AE)
        tensor[3] rayVec19B1#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1949,_t19AC);
        real _t19B3#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec19B1);
        real _t19B5#1 = λ(T0[],T1[])<(T0 * T1)> (_t19B3,rayStep194C);
        real alphaFix19B7#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t19B5,refStep194B);
        tensor[3] _t19B9#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (rayVec19B1,rayVec19B1);
        tensor[3] eyeDir19BB#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t19B9);
        real phKa19BD#1 = TensorIndex<tensor[4],[0]>(phong194A);
        real phKd19BF#1 = TensorIndex<tensor[4],[1]>(phong194A);
        real phKs19C1#1 = TensorIndex<tensor[4],[2]>(phong194A);
        real phSp19C3#1 = TensorIndex<tensor[4],[3]>(phong194A);
        real _t19C5#1 = 0.e0;
        real _t19C7#1 = 0.e0;
        real _t19C9#1 = 0.e0;
        real _t19CB#1 = 0.e0;
        tensor[4] rgba19CD#1 = <tensor[4]>[_t19C5,_t19C7,_t19C9,_t19CB];
        real raw19CF#1 = 0.e0;
        real _t19D1#1 = 0.e0;
        real _t19D3#1 = 0.e0;
        real _t19D5#1 = 0.e0;
        tensor[3] rgb19D7#1 = <tensor[3]>[_t19D1,_t19D3,_t19D5];
        real transp19D9#1 = 0.1e1;
        self.rayU = rayU197B;
        self.rayV = rayV1989;
        self.rayN = rayN198B;
        self.UV = UV1991;
        self.rayOrig = rayOrig19A1;
        self.rayVec = rayVec19B1;
        self.alphaFix = alphaFix19B7;
        self.eyeDir = eyeDir19BB;
        self.phKa = phKa19BD;
        self.phKd = phKd19BF;
        self.phKs = phKs19C1;
        self.phSp = phSp19C3;
        self.rgba = rgba19CD;
        self.raw = raw19CF;
        self.rgb = rgb19D7;
        self.transp = transp19D9;
        return
      ASSIGN19AF:  preds = [COND19B0]
        tensor[3] _t19AE#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (UV1991,camDist1946);
        goto JOIN19A4
      ASSIGN1999:  preds = [COND19A0]
        real _t1998#1 = 0.e0;
        real _t199A#1 = 0.e0;
        real _t199C#1 = 0.e0;
        tensor[3] _t199E#1 = <tensor[3]>[_t1998,_t199A,_t199C];
        goto JOIN1994
    end state init
    method update
        ENTRY1BD6:  preds = []
          femData:Mesh block19FF#1 = globals.block179F;
          real rayStep19FE#1 = globals.rayStep17AD;
          real transp019FD#1 = globals.transp017AF;
          real thick19FC#1 = globals.thick17B0;
          real fStrTh19FB#1 = globals.fStrTh17B1;
          real fMaskTh19FA#1 = globals.fMaskTh17B2;
          real fBias19F9#1 = globals.fBias17B3;
          real maxAlpha19F8#1 = globals.maxAlpha17B4;
          tensor[3] mcNear19F7#1 = globals.mcNear17B7;
          tensor[3] mcFar19F6#1 = globals.mcFar17B8;
          tensor[2] cminmax19F5#2 = globals.cminmax17BA;
          bool analytical19F4#1 = globals.analytical17BB;
          tensor[3,3] rot19F3#4 = globals.rot17BD;
          field F19F2#5 = globals.F1857;
          field CM19F1#1 = globals.CM1858;
          field C19F0#1 = globals.C1859;
          real camNearVsp19EF#1 = globals.camNearVsp1860;
          real camFarVsp19EE#2 = globals.camFarVsp1861;
          tensor[3] litwsp19ED#2 = globals.litwsp1862;
          real rayU1A13#0 = self.rayU;
          real rayV1A14#0 = self.rayV;
          real rayN1A15#1 = self.rayN;
          tensor[3] UV1A16#0 = self.UV;
          tensor[3] rayOrig1A17#1 = self.rayOrig;
          tensor[3] rayVec1A18#1 = self.rayVec;
          real alphaFix1A19#1 = self.alphaFix;
          tensor[3] eyeDir1A1A#1 = self.eyeDir;
          real phKa1A1B#1 = self.phKa;
          real phKd1A1C#1 = self.phKd;
          real phKs1A1D#2 = self.phKs;
          real phSp1A1E#1 = self.phSp;
          tensor[4] rgba1A1F#5 = self.rgba;
          real raw1A20#0 = self.raw;
          tensor[3] rgb1A21#4 = self.rgb;
          real transp1A22#5 = self.transp;
          real rayN1A33#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1A15,rayStep19FE);
          bool _t1A35#1 = GT<real>(rayN1A33,camFarVsp19EE);
          if _t1A35 then goto SAVE1A39 else goto JOIN1A37
        SAVE1A39:  preds = [COND1A3D]
          self.rayN = rayN1A33;
          self.rgba = rgba1A1F;
          self.rgb = rgb1A21;
          self.transp = transp1A22;
          stabilize
          goto JOIN1A37
        JOIN1A37:  preds = [*STABILIZE1A38,COND1A3D]
          tensor[3] _t1A3E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN1A33,rayVec1A18);
          tensor[3] pos1A40#8 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1A17,_t1A3E);
          femData:RefCell _t1A45#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block19FF);
          femData:RefCell _t1A47#1 = _t1A45;
          real _t1A49#1 = 0.1e-8;
          bool _t1A4B#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1A47,pos1A40,_t1A49);
          if _t1A4B then goto ASSIGN1A51 else goto ASSIGN1A89
        ASSIGN1A51:  preds = [COND1A8A]
          field _t1A50#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19F2);
          field _t1A52#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A50);
          tensor[3,3] _t1A54#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A52,pos1A40);
          (real[3] _t1A56#1,tensor[3][3] evecs1A57#0) = Eigen3x3(_t1A54);
          int _t1A59#1 = 1;
          real _t1A5B#1 = Subscript<real[3]>(_t1A56,_t1A59);
          real _t1A5D#1 = λ(T0[])<Neg(T0)> (_t1A5B);
          field _t1A5F#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19F2);
          tensor[3] _t1A61#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1A5F,pos1A40);
          real _t1A63#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1A61);
          real _t1A65#1 = λ(T0[],T1[])<(T0 + T1)> (fBias19F9,_t1A63);
          real _t1A67#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A5D,_t1A65);
          real _t1A69#1 = _t1A67;
          bool _t1A6B#1 = GT<real>(_t1A69,fStrTh19FB);
          if _t1A6B then goto ASSIGN1A71 else goto ASSIGN1A83
        ASSIGN1A71:  preds = [COND1A84]
          real _t1A70#1 = 0.1e1;
          real _t1A72#1 = _t1A70;
          bool _t1A74#1 = GTE<real>(_t1A72,fMaskTh19FA);
          if _t1A74 then goto ASSIGN1A78 else goto ASSIGN1A7D
        ASSIGN1A78:  preds = [COND1A7E]
          bool _t1A77#1 = true;
          bool _t1A79#1 = _t1A77;
          goto JOIN1A76
        JOIN1A76:  preds = [ASSIGN1A7B,ASSIGN1A7D]
          bool _t1A7A#1 = phi(_t1A79,_t1A7C)
          bool _t1A7F#1 = _t1A7A;
          goto JOIN1A6D
        JOIN1A6D:  preds = [ASSIGN1A81,ASSIGN1A83]
          bool _t1A80#1 = phi(_t1A7F,_t1A82)
          bool _t1A85#1 = _t1A80;
          goto JOIN1A4D
        JOIN1A4D:  preds = [ASSIGN1A87,ASSIGN1A89]
          bool _t1A86#1 = phi(_t1A85,_t1A88)
          bool _t1A8B#1 = _t1A86;
          bool _t1A8D#1 = BNot(_t1A8B);
          if _t1A8D then goto SAVE1A91 else goto JOIN1A8F
        SAVE1A91:  preds = [COND1A95]
          self.rayN = rayN1A33;
          self.rgba = rgba1A1F;
          self.rgb = rgb1A21;
          self.transp = transp1A22;
          active
          goto JOIN1A8F
        JOIN1A8F:  preds = [*ACTIVE1A90,COND1A95]
          bool _t1A97#1 = BNot(analytical19F4);
          if _t1A97 then goto ASSIGN1A9B else goto ASSIGN1ADA
        ASSIGN1A9B:  preds = [COND1B3D]
          field _t1A9A#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19F2);
          field _t1A9C#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A9A);
          tensor[3,3] _t1A9E#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A9C,pos1A40);
          (real[3] evals1AA1#0,tensor[3][3] E1AA0#4) = Eigen3x3(_t1A9E);
          field _t1AA3#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19F2);
          field _t1AA5#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1AA3);
          tensor[3,3] _t1AA7#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1AA5,pos1A40);
          (real[3] L1AA9#2,tensor[3][3] evecs1AAA#0) = Eigen3x3(_t1AA7);
          int _t1AAC#1 = 2;
          tensor[3] _t1AAE#1 = Subscript<tensor[3][3]>(E1AA0,_t1AAC);
          int _t1AB0#1 = 2;
          tensor[3] _t1AB2#1 = Subscript<tensor[3][3]>(E1AA0,_t1AB0);
          tensor[3,3] _t1AB4#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1AAE,_t1AB2);
          int _t1AB6#1 = 2;
          real _t1AB8#1 = Subscript<real[3]>(L1AA9,_t1AB6);
          tensor[3,3] _t1ABA#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1AB4,_t1AB8);
          int _t1ABC#1 = 1;
          tensor[3] _t1ABE#1 = Subscript<tensor[3][3]>(E1AA0,_t1ABC);
          int _t1AC0#1 = 1;
          tensor[3] _t1AC2#1 = Subscript<tensor[3][3]>(E1AA0,_t1AC0);
          tensor[3,3] _t1AC4#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1ABE,_t1AC2);
          int _t1AC6#1 = 1;
          real _t1AC8#1 = Subscript<real[3]>(L1AA9,_t1AC6);
          tensor[3,3] _t1ACA#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1AC4,_t1AC8);
          tensor[3,3] _t1ACC#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t1ABA,_t1ACA);
          tensor[3,3] _t1ACE#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t1ACC);
          field _t1AD0#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19F2);
          tensor[3] _t1AD2#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1AD0,pos1A40);
          tensor[3] _t1AD4#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1ACE,_t1AD2);
          tensor[3] step1AD6#1 = _t1AD4;
          goto JOIN1A99
        JOIN1A99:  preds = [ASSIGN1AD8,ASSIGN1B3C]
          tensor[3] step1AD7#4 = phi(step1AD6,step1B3B)
          real _t1B3E#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (step1AD7);
          real _t1B41#1 = 0.e0;
          real _t1B43#1 = 0.1e1;
          real _t1B45#1 = 0.15e1;
          real _t1B47#1 = 0.1e1;
          real _t1B49#1 = λ(T0[])<Abs(T0)> (_t1B3E);
          real _t1B4B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B49,thick19FC);
          real _t1B4D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B47,_t1B4B);
          real _t1B4F#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B45,_t1B4D);
          real _t1B51#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1B41,_t1B43,_t1B4F);
          real _t1B53#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha19F8,_t1B51);
          real aa1B55#2 = _t1B53;
          real _t1B57#1 = 0.e0;
          bool _t1B59#1 = EQ<real>(aa1B55,_t1B57);
          if _t1B59 then goto SAVE1B5D else goto JOIN1B5B
        SAVE1B5D:  preds = [COND1B61]
          self.rayN = rayN1A33;
          self.rgba = rgba1A1F;
          self.rgb = rgb1A21;
          self.transp = transp1A22;
          active
          goto JOIN1B5B
        JOIN1B5B:  preds = [*ACTIVE1B5C,COND1B61]
          real _t1B62#1 = 0.1e1;
          real _t1B64#1 = 0.1e1;
          real _t1B66#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B64,aa1B55);
          real _t1B68#1 = MathFn<pow>(_t1B66,alphaFix1A19);
          real aa1B6A#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1B62,_t1B68);
          tensor[3] _t1B6C#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (step1AD7,step1AD7);
          tensor[3] snorm1B6E#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1B6C);
          real _t1B70#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1B6E,litwsp19ED);
          int _t1B72#0 = 2;
          real dcomp1B74#1 = λ(T0[])<(T0)^2> (_t1B70);
          real scomp1B76#1 = 0.e0;
          real _t1B78#1 = 0.e0;
          bool _t1B7A#1 = NEQ<real>(phKs1A1D,_t1B78);
          if _t1B7A then goto ASSIGN1B7E else goto JOIN1B7C
        ASSIGN1B7E:  preds = [COND1B88]
          tensor[3] _t1B7D#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1A1A,litwsp19ED);
          tensor[3] _t1B7F#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1B7D,_t1B7D);
          real _t1B81#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1B6E,_t1B7F);
          real _t1B83#1 = λ(T0[])<Abs(T0)> (_t1B81);
          real scomp1B85#1 = MathFn<pow>(_t1B83,phSp1A1E);
          goto JOIN1B7C
        JOIN1B7C:  preds = [ASSIGN1B87,COND1B88]
          real scomp1B86#1 = phi(scomp1B85,scomp1B76)
          tensor[3] dcol1B89#1 = λ(T0[3],T1[3],T2[],T3[],T4[])<(T0_{i0} + (((T3) - (T2)) / ( (T4) - (T2)) * (T1_{i0}) - (T0_{i0})))>_{3} (mcNear19F7,mcFar19F6,camNearVsp19EF,rayN1A33,camFarVsp19EE);
          real cmin1B8B#2 = TensorIndex<tensor[2],[0]>(cminmax19F5);
          real cmax1B8D#2 = TensorIndex<tensor[2],[1]>(cminmax19F5);
          real _t1B8F#1 = 0.1e1;
          real _t1B91#1 = 0.1e1;
          real _t1B93#1 = 0.1e1;
          tensor[3] mcol1B95#1 = <tensor[3]>[_t1B8F,_t1B91,_t1B93];
          bool _t1B97#1 = NEQ<real>(cmin1B8B,cmax1B8D);
          if _t1B97 then goto ASSIGN1B9B else goto JOIN1B99
        ASSIGN1B9B:  preds = [COND1BA7]
          real _t1B9A#1 = 0.e0;
          real _t1B9C#1 = 0.1e1;
          tensor[3] _t1B9E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1A40,step1AD7);
          real _t1BA0#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (C19F0,_t1B9E);
          real _t1BA2#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1B9A,_t1B9C,cmin1B8B,_t1BA0,cmax1B8D);
          tensor[3] mcol1BA4#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (CM19F1,_t1BA2);
          goto JOIN1B99
        JOIN1B99:  preds = [ASSIGN1BA6,COND1BA7]
          tensor[3] mcol1BA5#1 = phi(mcol1BA4,mcol1B95)
          real _t1BA8#1 = λ(T0[],T1[])<(T0 * T1)> (transp1A22,aa1B6A);
          real _t1BAA#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1A1C,dcomp1B74);
          real _t1BAC#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1A1B,_t1BAA);
          tensor[3] _t1BAE#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (dcol1B89,mcol1BA5);
          tensor[3] _t1BB0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BAC,_t1BAE);
          real _t1BB2#1 = λ(T0[],T1[])<(T0 * T1)> (phKs1A1D,scomp1B86);
          real _t1BB4#1 = 0.1e1;
          real _t1BB6#1 = 0.1e1;
          real _t1BB8#1 = 0.1e1;
          tensor[3] _t1BBA#1 = <tensor[3]>[_t1BB4,_t1BB6,_t1BB8];
          tensor[3] _t1BBC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BB2,_t1BBA);
          tensor[3] _t1BBE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1BB0,_t1BBC);
          tensor[3] _t1BC0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BA8,_t1BBE);
          tensor[3] rgb1BC2#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1A21,_t1BC0);
          real _t1BC4#1 = 0.1e1;
          real _t1BC6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1BC4,aa1B6A);
          real transp1BC8#2 = λ(T0[],T1[])<(T0 * T1)> (transp1A22,_t1BC6);
          bool _t1BCA#1 = LT<real>(transp1BC8,transp019FD);
          if _t1BCA then goto ASSIGN1BCF else goto JOIN1BCC
        ASSIGN1BCF:  preds = [COND1BD5]
          real transp1BCD#1 = 0.e0;
          self.rayN = rayN1A33;
          self.rgba = rgba1A1F;
          self.rgb = rgb1BC2;
          self.transp = transp1BCD;
          stabilize
          goto JOIN1BCC
        JOIN1BCC:  preds = [*STABILIZE1BD0,COND1BD5]
          real transp1BCE#1 = phi(transp1BC8)
          self.rayN = rayN1A33;
          self.rgba = rgba1A1F;
          self.rgb = rgb1BC2;
          self.transp = transp1BCE;
          active
        ASSIGN1ADA:  preds = [COND1B3D]
          tensor[3,3] _t1AD9#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (rot19F3);
          int _t1ADB#1 = -1;
          real _t1ADD#1 = IntToReal(_t1ADB);
          int _t1ADF#1 = -2;
          real _t1AE1#1 = IntToReal(_t1ADF);
          int _t1AE3#1 = -3;
          real _t1AE5#1 = IntToReal(_t1AE3);
          tensor[3] _t1AE7#1 = <tensor[3]>[_t1ADD,_t1AE1,_t1AE5];
          tensor[3] _t1AE9#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (rot19F3,pos1A40);
          tensor[3] _t1AEB#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (_t1AE7,_t1AE9);
          tensor[3] Gv1AED#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1AD9,_t1AEB);
          tensor[3,3] _t1AEF#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (rot19F3);
          real _t1AF1#1 = -0.1e1;
          real _t1AF3#1 = 0.e0;
          real _t1AF5#1 = 0.e0;
          tensor[3] _t1AF7#1 = <tensor[3]>[_t1AF1,_t1AF3,_t1AF5];
          real _t1AF9#1 = 0.e0;
          real _t1AFB#1 = -0.2e1;
          real _t1AFD#1 = 0.e0;
          tensor[3] _t1AFF#1 = <tensor[3]>[_t1AF9,_t1AFB,_t1AFD];
          real _t1B01#1 = 0.e0;
          real _t1B03#1 = 0.e0;
          real _t1B05#1 = -0.3e1;
          tensor[3] _t1B07#1 = <tensor[3]>[_t1B01,_t1B03,_t1B05];
          tensor[3,3] _t1B09#1 = <tensor[3,3]>[_t1AF7,_t1AFF,_t1B07];
          tensor[3,3] _t1B0B#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (_t1AEF,_t1B09);
          tensor[3,3] H1B0D#2 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (_t1B0B,rot19F3);
          (real[3] evals1B10#0,tensor[3][3] E1B0F#4) = Eigen3x3(H1B0D);
          (real[3] L1B12#2,tensor[3][3] evecs1B13#0) = Eigen3x3(H1B0D);
          int _t1B15#1 = 2;
          tensor[3] _t1B17#1 = Subscript<tensor[3][3]>(E1B0F,_t1B15);
          int _t1B19#1 = 2;
          tensor[3] _t1B1B#1 = Subscript<tensor[3][3]>(E1B0F,_t1B19);
          tensor[3,3] _t1B1D#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1B17,_t1B1B);
          int _t1B1F#1 = 2;
          real _t1B21#1 = Subscript<real[3]>(L1B12,_t1B1F);
          tensor[3,3] _t1B23#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1B1D,_t1B21);
          int _t1B25#1 = 1;
          tensor[3] _t1B27#1 = Subscript<tensor[3][3]>(E1B0F,_t1B25);
          int _t1B29#1 = 1;
          tensor[3] _t1B2B#1 = Subscript<tensor[3][3]>(E1B0F,_t1B29);
          tensor[3,3] _t1B2D#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1B27,_t1B2B);
          int _t1B2F#1 = 1;
          real _t1B31#1 = Subscript<real[3]>(L1B12,_t1B2F);
          tensor[3,3] _t1B33#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1B2D,_t1B31);
          tensor[3,3] _t1B35#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t1B23,_t1B33);
          tensor[3,3] _t1B37#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t1B35);
          tensor[3] _t1B39#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1B37,Gv1AED);
          tensor[3] step1B3B#1 = _t1B39;
          goto JOIN1A99
        ASSIGN1A7D:  preds = [COND1A7E]
          bool _t1A7C#1 = false;
          goto JOIN1A76
        ASSIGN1A83:  preds = [COND1A84]
          bool _t1A82#1 = false;
          goto JOIN1A6D
        ASSIGN1A89:  preds = [COND1A8A]
          bool _t1A88#1 = false;
          goto JOIN1A4D
    end update
    method stabilize
        ENTRY1C15:  preds = []
          real rayU1BDC#0 = self.rayU;
          real rayV1BDD#0 = self.rayV;
          real rayN1BDE#1 = self.rayN;
          tensor[3] UV1BDF#0 = self.UV;
          tensor[3] rayOrig1BE0#0 = self.rayOrig;
          tensor[3] rayVec1BE1#0 = self.rayVec;
          real alphaFix1BE2#0 = self.alphaFix;
          tensor[3] eyeDir1BE3#0 = self.eyeDir;
          real phKa1BE4#0 = self.phKa;
          real phKd1BE5#0 = self.phKd;
          real phKs1BE6#0 = self.phKs;
          real phSp1BE7#0 = self.phSp;
          tensor[4] rgba1BE8#1 = self.rgba;
          real raw1BE9#0 = self.raw;
          tensor[3] rgb1BEA#4 = self.rgb;
          real transp1BEB#3 = self.transp;
          real _t1BFC#1 = 0.1e1;
          bool _t1BFE#1 = LT<real>(transp1BEB,_t1BFC);
          if _t1BFE then goto ASSIGN1C02 else goto JOIN1C00
        ASSIGN1C02:  preds = [COND1C14]
          real _t1C01#1 = 0.1e1;
          real aa1C03#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1C01,transp1BEB);
          real _t1C05#1 = TensorIndex<tensor[3],[0]>(rgb1BEA);
          real _t1C07#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C05,aa1C03);
          real _t1C09#1 = TensorIndex<tensor[3],[1]>(rgb1BEA);
          real _t1C0B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C09,aa1C03);
          real _t1C0D#1 = TensorIndex<tensor[3],[2]>(rgb1BEA);
          real _t1C0F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C0D,aa1C03);
          tensor[4] rgba1C11#1 = <tensor[4]>[_t1C07,_t1C0B,_t1C0F,aa1C03];
          goto JOIN1C00
        JOIN1C00:  preds = [ASSIGN1C13,COND1C14]
          tensor[4] rgba1C12#1 = phi(rgba1C11,rgba1BE8)
          self.rayN = rayN1BDE;
          self.rgba = rgba1C12;
          self.rgb = rgb1BEA;
          self.transp = transp1BEB;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY192F:  preds = []
      int iresU1915#1 = globals.iresU17AB;
      int iresV1914#1 = globals.iresV17AC;
      int _t1918#1 = 0;
      int _t191A#1 = 1;
      int _t191C#1 = ISub(iresV1914,_t191A);
      int[] _t191E#1 = Range(_t1918,_t191C);
    FOREACH1921:  preds = [ASSIGN191F,NEXT192E]
      foreach (vi1920 in _t191E) on exit goto RETURN1930
      int _t1922#1 = 0;
      int _t1924#1 = 1;
      int _t1926#1 = ISub(iresU1915,_t1924);
      int[] _t1928#1 = Range(_t1922,_t1926);
    FOREACH192B:  preds = [ASSIGN1929,NEXT192D]
      foreach (ui192A in _t1928) on exit goto NEXT192E
      new ray(ui192A,vi1920);
      goto FOREACH192B
    NEXT192E:  preds = [FOREACH192B]
      goto FOREACH1921
    RETURN1930:  preds = [FOREACH1921]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block179F (block) = <no-default>
  input 0space0509_intermedateGlobal17A0 (space) = <no-default>
  input 0U050B_intermedateGlobal17A1 (U) = <no-default>
  input cellChoice17A2 (cellChoice) = <no-default>
  input cmap17A3 (cmap) = image("cmap.nrrd")
  input camEye17A4 (camEye) = <default>
  input camAt17A5 (camAt) = <default>
  input camUp17A6 (camUp) = <default>
  input camNear17A7 (camNear) = <default>
  input camFar17A8 (camFar) = <default>
  input camFOV17A9 (camFOV) = <default>
  input camOrtho17AA (camOrtho) = <default>
  input iresU17AB (iresU) = <default>
  input iresV17AC (iresV) = <default>
  input rayStep17AD (rayStep) = <default>
  input refStep17AE (refStep) = <default>
  input transp017AF (transp0) = <default>
  input thick17B0 (thick) = <default>
  input fStrTh17B1 (fStrTh) = <default>
  input fMaskTh17B2 (fMaskTh) = <default>
  input fBias17B3 (fBias) = <default>
  input maxAlpha17B4 (maxAlpha) = <default>
  input light17B5 (light) = <default>
  input phong17B6 (phong) = <default>
  input mcNear17B7 (mcNear) = <default>
  input mcFar17B8 (mcFar) = <default>
  input litdir17B9 (litdir) = <default>
  input cminmax17BA (cminmax) = <default>
  input analytical17BB (analytical) = <default>
  input umm17BC (umm) = image("data.nrrd")
  input rot17BD (rot) = <default>
  global femData:MeshCell[] 0cell_block1853
  global femData:Space space1854
  global femData:FemFunc U1855
  global femData:MeshCell c11856
  global field F1857
  global field CM1858
  global field C1859
  global tensor[3] camN185A
  global tensor[3] camU185B
  global tensor[3] camV185C
  global real camDist185D
  global real camVmax185E
  global real camUmax185F
  global real camNearVsp1860
  global real camFarVsp1861
  global tensor[3] litwsp1862
## functions
  function int[2] nextCell41874 (int faceIdx1863#1, int cell1864#1, femData:Mesh mesh1865#1) {
    ENTRY1873:  preds = []
      int _t1866#1 = 12;
      int _t1868#1 = IMul(cell1864,_t1866);
      int _t186A#1 = 2;
      int _t186C#1 = IMul(faceIdx1863,_t186A);
      int _t186E#1 = IAdd(_t1868,_t186C);
      int[2] _t1870#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1865,_t186E);
      return _t1870
}
## input initialization
  ENTRY1851:  preds = []
    real _t17BE#17 = 0.e0;
    real _t17C0#1 = -0.2e1;
    tensor[3] camEye17C4#1 = <tensor[3]>[_t17BE,_t17C0,_t17BE];
    globals.camEye17A4 = camEye17C4;
    tensor[3] camAt17CD#1 = <tensor[3]>[_t17BE,_t17BE,_t17BE];
    globals.camAt17A5 = camAt17CD;
    real _t17D4#7 = 0.1e1;
    tensor[3] camUp17D6#2 = <tensor[3]>[_t17BE,_t17BE,_t17D4];
    globals.camUp17A6 = camUp17D6;
    real camNear17D9#1 = -0.4e1;
    globals.camNear17A7 = camNear17D9;
    real camFar17DC#1 = 0.4e1;
    globals.camFar17A8 = camFar17DC;
    real camFOV17DF#1 = 0.1e2;
    globals.camFOV17A9 = camFOV17DF;
    bool camOrtho17E2#2 = false;
    globals.camOrtho17AA = camOrtho17E2;
    int iresU17E5#2 = 100;
    globals.iresU17AB = iresU17E5;
    globals.iresV17AC = iresU17E5;
    real rayStep17EB#2 = 0.1e-3;
    globals.rayStep17AD = rayStep17EB;
    globals.refStep17AE = rayStep17EB;
    real transp017F1#1 = 0.5e-2;
    globals.transp017AF = transp017F1;
    real thick17F4#1 = 0.1e-1;
    globals.thick17B0 = thick17F4;
    globals.fStrTh17B1 = _t17BE;
    globals.fMaskTh17B2 = _t17BE;
    real fBias17FD#2 = 0.1e0;
    globals.fBias17B3 = fBias17FD;
    globals.maxAlpha17B4 = _t17D4;
    globals.light17B5 = camOrtho17E2;
    real _t1808#1 = 0.7e0;
    real _t180A#1 = 0.2e0;
    real _t180C#1 = 0.1e3;
    tensor[4] phong180E#1 = <tensor[4]>[fBias17FD,_t1808,_t180A,_t180C];
    globals.phong17B6 = phong180E;
    tensor[3] mcNear1817#2 = <tensor[3]>[_t17D4,_t17D4,_t17D4];
    globals.mcNear17B7 = mcNear1817;
    globals.mcFar17B8 = mcNear1817;
    real _t1825#1 = -0.1e1;
    tensor[3] litdir1829#1 = <tensor[3]>[_t17BE,_t1825,_t17BE];
    globals.litdir17B9 = litdir1829;
    tensor[2] cminmax1830#1 = <tensor[2]>[_t17BE,_t17BE];
    globals.cminmax17BA = cminmax1830;
    bool analytical1833#1 = true;
    globals.analytical17BB = analytical1833;
    tensor[3] _t183C#1 = <tensor[3]>[_t17D4,_t17BE,_t17BE];
    tensor[3] _t1844#1 = <tensor[3]>[_t17BE,_t17D4,_t17BE];
    tensor[3,3] rot184E#1 = <tensor[3,3]>[_t183C,_t1844,camUp17D6];
    globals.rot17BD = rot184E;
    return
## global-variable initialization
  ENTRY1912:  preds = []
    femData:Mesh block1882#3 = globals.block179F;
    femData:Space 0space0509_intermedateGlobal1881#1 = globals.0space0509_intermedateGlobal17A0;
    femData:FemFunc 0U050B_intermedateGlobal1880#1 = globals.0U050B_intermedateGlobal17A1;
    int cellChoice187F#1 = globals.cellChoice17A2;
    image(IMAGE1D<double[3]>) cmap187E#1 = globals.cmap17A3;
    tensor[3] camEye187D#1 = globals.camEye17A4;
    tensor[3] camAt187C#1 = globals.camAt17A5;
    tensor[3] camUp187B#1 = globals.camUp17A6;
    real camNear187A#1 = globals.camNear17A7;
    real camFar1879#1 = globals.camFar17A8;
    real camFOV1878#1 = globals.camFOV17A9;
    int iresU1877#1 = globals.iresU17AB;
    int iresV1876#1 = globals.iresV17AC;
    tensor[3] litdir1875#2 = globals.litdir17B9;
    int _t1891#1 = 0;
    int _t1893#1 = 1;
    int _t1895#1 = ExtractFemItem<int,NumCell(Mesh)>(block1882);
    int _t1897#1 = ISub(_t1895,_t1893);
    int[] _t1899#1 = Range(_t1891,_t1897);
    femData:MeshCell[] _t189B#1 = <femData:MeshCell[]>{};
  FOREACH189F:  preds = [ASSIGN189C,NEXT18A4]
    foreach (_t189D in _t1899) on exit goto GASSIGN1C2E
      femData:MeshCell[] _t189E#3 = phi(_t189B,_t18A2)
    femData:MeshCell _t18A0#1 = LoadFem<femData:MeshCell>(block1882,_t189D);
    femData:MeshCell[] _t18A2#1 = Append<femData:MeshCell>(_t189E,_t18A0);
    goto FOREACH189F
  GASSIGN1C2E:  preds = [FOREACH189F]
    globals.0cell_block1853 = _t189E;
    femData:Space space18A8#2 = LoadFem<femData:Space>(0space0509_intermedateGlobal1881,block1882);
    globals.space1854 = space18A8;
    femData:FemFunc U18AB#2 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1880,space18A8);
    globals.U1855 = U18AB;
    femData:MeshCell c118AE#2 = Subscript<femData:MeshCell[]>(_t189E,cellChoice187F);
    globals.c11856 = c118AE;
    int _t18B2#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c118AE);
    femData:FuncCell _t18B4#2 = LoadFem<femData:FuncCell>(U18AB,_t18B2);
    femData:FemFunc _t18B8#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t18B4);
    femData:Space _t18C3#1 = ExtractFem<femData:Space,femData:FemFunc>(_t18B8);
    int _t18CC#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t18B4);
    field F18CE#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t18CC,_t18C3,_t18B8);
    globals.F1857 = F18CE;
    kernel _t18D1#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img18D3#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap187E);
    field CM18D5#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img18D3,_t18D1);
    globals.CM1858 = CM18D5;
    globals.C1859 = F18CE;
    tensor[3] _t18DB#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt187C,camEye187D);
    tensor[3] camN18DD#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t18DB,_t18DB);
    globals.camN185A = camN18DD;
    tensor[3] _t18E0#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN18DD,camUp187B);
    tensor[3] camU18E2#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t18E0,_t18E0);
    globals.camU185B = camU18E2;
    tensor[3] camV18E5#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN18DD,camU18E2);
    globals.camV185C = camV18E5;
    real camDist18EA#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t18DB);
    globals.camDist185D = camDist18EA;
    real _t18ED#1 = 0.314159265358979323846264338327950288e1;
    real _t18EF#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1878,_t18ED);
    real _t18F1#1 = 0.36e3;
    real _t18F3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18EF,_t18F1);
    real _t18F5#1 = λ(T0[])<Tangent(T0)> (_t18F3);
    real camVmax18F7#2 = λ(T0[],T1[])<(T0 * T1)> (_t18F5,camDist18EA);
    globals.camVmax185E = camVmax18F7;
    real _t18FA#1 = IntToReal(iresU1877);
    real _t18FC#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax18F7,_t18FA);
    real _t18FE#1 = IntToReal(iresV1876);
    real camUmax1900#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18FC,_t18FE);
    globals.camUmax185F = camUmax1900;
    real camNearVsp1903#1 = λ(T0[],T1[])<(T0 + T1)> (camNear187A,camDist18EA);
    globals.camNearVsp1860 = camNearVsp1903;
    real camFarVsp1906#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1879,camDist18EA);
    globals.camFarVsp1861 = camFarVsp1906;
    tensor[3,3] _t1909#1 = <tensor[3,3]>[camU18E2,camV18E5,camN18DD];
    tensor[3,3] _t190B#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t1909);
    tensor[3] _t190D#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (litdir1875,litdir1875);
    tensor[3] litwsp190F#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t190B,_t190D);
    globals.litwsp1862 = litwsp190F;
    return
## strand
  strand ray (int ui1931#1, int vi1932#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY19DB:  preds = []
        tensor[3] camEye1950#1 = globals.camEye17A4;
        bool camOrtho194F#2 = globals.camOrtho17AA;
        int iresU194E#1 = globals.iresU17AB;
        int iresV194D#1 = globals.iresV17AC;
        real rayStep194C#1 = globals.rayStep17AD;
        real refStep194B#1 = globals.refStep17AE;
        tensor[4] phong194A#4 = globals.phong17B6;
        tensor[3] camN1949#1 = globals.camN185A;
        tensor[3] camU1948#1 = globals.camU185B;
        tensor[3] camV1947#1 = globals.camV185C;
        real camDist1946#1 = globals.camDist185D;
        real camVmax1945#2 = globals.camVmax185E;
        real camUmax1944#2 = globals.camUmax185F;
        real camNearVsp1943#1 = globals.camNearVsp1860;
        real _t196F#1 = λ(T0[])<Neg(T0)> (camUmax1944);
        real _t1971#2 = -0.5e0;
        real _t1973#1 = IntToReal(ui1931);
        real _t1975#1 = IntToReal(iresU194E);
        real _t1977#2 = 0.5e0;
        real _t1979#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1975,_t1977);
        real rayU197B#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t196F,camUmax1944,_t1971,_t1973,_t1979);
        real _t197D#1 = λ(T0[])<Neg(T0)> (camVmax1945);
        real _t1981#1 = IntToReal(vi1932);
        real _t1983#1 = IntToReal(iresV194D);
        real _t1987#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1983,_t1977);
        real rayV1989#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t197D,camVmax1945,_t1971,_t1981,_t1987);
        tensor[3] _t198D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU197B,camU1948);
        tensor[3] _t198F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV1989,camV1947);
        tensor[3] UV1991#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t198D,_t198F);
        if camOrtho194F then goto JOIN1994 else goto ASSIGN1999
      JOIN1994:  preds = [COND19A0,ASSIGN1C37]
        tensor[3] _t1996#1 = phi(UV1991,_t199E)
        tensor[3] rayOrig19A1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1950,_t1996);
        if camOrtho194F then goto ASSIGN19A6 else goto ASSIGN19AF
      ASSIGN19A6:  preds = [COND19B0]
        real _t19A5#3 = 0.e0;
        tensor[3] _t19AB#1 = <tensor[3]>[_t19A5,_t19A5,_t19A5];
        goto JOIN19A4
      JOIN19A4:  preds = [ASSIGN1C38,ASSIGN19AF]
        tensor[3] _t19AC#1 = phi(_t19AB,_t19AE)
        tensor[3] rayVec19B1#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1949,_t19AC);
        real _t19B3#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec19B1);
        real _t19B5#1 = λ(T0[],T1[])<(T0 * T1)> (_t19B3,rayStep194C);
        real alphaFix19B7#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t19B5,refStep194B);
        tensor[3] _t19B9#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (rayVec19B1,rayVec19B1);
        tensor[3] eyeDir19BB#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t19B9);
        real phKa19BD#1 = TensorIndex<tensor[4],[0]>(phong194A);
        real phKd19BF#1 = TensorIndex<tensor[4],[1]>(phong194A);
        real phKs19C1#1 = TensorIndex<tensor[4],[2]>(phong194A);
        real phSp19C3#1 = TensorIndex<tensor[4],[3]>(phong194A);
        real _t19C5#8 = 0.e0;
        tensor[4] rgba19CD#1 = <tensor[4]>[_t19C5,_t19C5,_t19C5,_t19C5];
        tensor[3] rgb19D7#1 = <tensor[3]>[_t19C5,_t19C5,_t19C5];
        real transp19D9#1 = 0.1e1;
        self.rayU = rayU197B;
        self.rayV = rayV1989;
        self.rayN = camNearVsp1943;
        self.UV = UV1991;
        self.rayOrig = rayOrig19A1;
        self.rayVec = rayVec19B1;
        self.alphaFix = alphaFix19B7;
        self.eyeDir = eyeDir19BB;
        self.phKa = phKa19BD;
        self.phKd = phKd19BF;
        self.phKs = phKs19C1;
        self.phSp = phSp19C3;
        self.rgba = rgba19CD;
        self.raw = _t19C5;
        self.rgb = rgb19D7;
        self.transp = transp19D9;
        return
      ASSIGN19AF:  preds = [COND19B0]
        tensor[3] _t19AE#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (UV1991,camDist1946);
        goto JOIN19A4
      ASSIGN1999:  preds = [COND19A0]
        real _t1998#3 = 0.e0;
        tensor[3] _t199E#1 = <tensor[3]>[_t1998,_t1998,_t1998];
        goto JOIN1994
    end state init
    method update
        ENTRY1BD6:  preds = []
          femData:Mesh block19FF#1 = globals.block179F;
          real rayStep19FE#1 = globals.rayStep17AD;
          real transp019FD#1 = globals.transp017AF;
          real thick19FC#1 = globals.thick17B0;
          real fStrTh19FB#1 = globals.fStrTh17B1;
          real fMaskTh19FA#1 = globals.fMaskTh17B2;
          real fBias19F9#1 = globals.fBias17B3;
          real maxAlpha19F8#1 = globals.maxAlpha17B4;
          tensor[3] mcNear19F7#1 = globals.mcNear17B7;
          tensor[3] mcFar19F6#1 = globals.mcFar17B8;
          tensor[2] cminmax19F5#2 = globals.cminmax17BA;
          bool analytical19F4#1 = globals.analytical17BB;
          tensor[3,3] rot19F3#3 = globals.rot17BD;
          field F19F2#2 = globals.F1857;
          field CM19F1#1 = globals.CM1858;
          field C19F0#1 = globals.C1859;
          real camNearVsp19EF#1 = globals.camNearVsp1860;
          real camFarVsp19EE#2 = globals.camFarVsp1861;
          tensor[3] litwsp19ED#2 = globals.litwsp1862;
          real rayU1A13#0 = self.rayU;
          real rayV1A14#0 = self.rayV;
          real rayN1A15#1 = self.rayN;
          tensor[3] UV1A16#0 = self.UV;
          tensor[3] rayOrig1A17#1 = self.rayOrig;
          tensor[3] rayVec1A18#1 = self.rayVec;
          real alphaFix1A19#1 = self.alphaFix;
          tensor[3] eyeDir1A1A#1 = self.eyeDir;
          real phKa1A1B#1 = self.phKa;
          real phKd1A1C#1 = self.phKd;
          real phKs1A1D#2 = self.phKs;
          real phSp1A1E#1 = self.phSp;
          tensor[4] rgba1A1F#0 = self.rgba;
          real raw1A20#0 = self.raw;
          tensor[3] rgb1A21#1 = self.rgb;
          real transp1A22#2 = self.transp;
          real rayN1A33#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1A15,rayStep19FE);
          bool _t1A35#1 = GT<real>(rayN1A33,camFarVsp19EE);
          if _t1A35 then goto SAVE1A39 else goto JOIN1A37
        SAVE1A39:  preds = [COND1A3D]
          self.rayN = rayN1A33;
          stabilize
          goto JOIN1A37
        JOIN1A37:  preds = [*STABILIZE1A38,COND1A3D]
          tensor[3] _t1A3E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN1A33,rayVec1A18);
          tensor[3] pos1A40#7 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1A17,_t1A3E);
          femData:RefCell _t1A45#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block19FF);
          real _t1A49#1 = 0.1e-8;
          bool _t1A4B#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1A45,pos1A40,_t1A49);
          if _t1A4B then goto ASSIGN1A51 else goto ASSIGN1A89
        ASSIGN1A51:  preds = [COND1A8A]
          field _t1A50#2 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19F2);
          field _t1A52#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A50);
          tensor[3,3] _t1A54#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A52,pos1A40);
          (real[3] _t1A56#1,tensor[3][3] evecs1A57#0) = Eigen3x3(_t1A54);
          int _t1A59#1 = 1;
          real _t1A5B#1 = Subscript<real[3]>(_t1A56,_t1A59);
          real _t1A5D#1 = λ(T0[])<Neg(T0)> (_t1A5B);
          tensor[3] _t1A61#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1A50,pos1A40);
          real _t1A63#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1A61);
          real _t1A65#1 = λ(T0[],T1[])<(T0 + T1)> (fBias19F9,_t1A63);
          real _t1A67#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A5D,_t1A65);
          bool _t1A6B#1 = GT<real>(_t1A67,fStrTh19FB);
          if _t1A6B then goto ASSIGN1A71 else goto ASSIGN1A83
        ASSIGN1A71:  preds = [COND1A84]
          real _t1A70#1 = 0.1e1;
          bool _t1A74#1 = GTE<real>(_t1A70,fMaskTh19FA);
          if _t1A74 then goto ASSIGN1A78 else goto ASSIGN1A7D
        ASSIGN1A78:  preds = [COND1A7E]
          bool _t1A77#1 = true;
          goto JOIN1A76
        JOIN1A76:  preds = [ASSIGN1A78,ASSIGN1A7D]
          bool _t1A7A#1 = phi(_t1A77,_t1A7C)
          goto JOIN1A6D
        JOIN1A6D:  preds = [JOIN1A76,ASSIGN1A83]
          bool _t1A80#1 = phi(_t1A7A,_t1A82)
          goto JOIN1A4D
        JOIN1A4D:  preds = [JOIN1A6D,ASSIGN1A89]
          bool _t1A86#1 = phi(_t1A80,_t1A88)
          bool _t1A8D#1 = BNot(_t1A86);
          if _t1A8D then goto SAVE1A91 else goto JOIN1A8F
        SAVE1A91:  preds = [COND1A95]
          self.rayN = rayN1A33;
          active
          goto JOIN1A8F
        JOIN1A8F:  preds = [*ACTIVE1A90,COND1A95]
          bool _t1A97#1 = BNot(analytical19F4);
          if _t1A97 then goto ASSIGN1A9B else goto ASSIGN1ADA
        ASSIGN1A9B:  preds = [COND1B3D]
          field _t1A9A#2 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19F2);
          field _t1A9C#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A9A);
          tensor[3,3] _t1A9E#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A9C,pos1A40);
          (real[3] evals1AA1#2,tensor[3][3] E1AA0#2) = Eigen3x3(_t1A9E);
          int _t1AAC#2 = 2;
          tensor[3] _t1AAE#2 = Subscript<tensor[3][3]>(E1AA0,_t1AAC);
          tensor[3,3] _t1AB4#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1AAE,_t1AAE);
          real _t1AB8#1 = Subscript<real[3]>(evals1AA1,_t1AAC);
          tensor[3,3] _t1ABA#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1AB4,_t1AB8);
          int _t1ABC#2 = 1;
          tensor[3] _t1ABE#2 = Subscript<tensor[3][3]>(E1AA0,_t1ABC);
          tensor[3,3] _t1AC4#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1ABE,_t1ABE);
          real _t1AC8#1 = Subscript<real[3]>(evals1AA1,_t1ABC);
          tensor[3,3] _t1ACA#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1AC4,_t1AC8);
          tensor[3,3] _t1ACC#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t1ABA,_t1ACA);
          tensor[3,3] _t1ACE#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t1ACC);
          tensor[3] _t1AD2#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1A9A,pos1A40);
          tensor[3] _t1AD4#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1ACE,_t1AD2);
          goto JOIN1A99
        JOIN1A99:  preds = [ASSIGN1AD5,ASSIGN1B3A]
          tensor[3] step1AD7#4 = phi(_t1AD4,_t1B39)
          real _t1B3E#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (step1AD7);
          real _t1B41#6 = 0.e0;
          real _t1B43#9 = 0.1e1;
          real _t1B45#1 = 0.15e1;
          real _t1B49#1 = λ(T0[])<Abs(T0)> (_t1B3E);
          real _t1B4B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B49,thick19FC);
          real _t1B4D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B43,_t1B4B);
          real _t1B4F#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B45,_t1B4D);
          real _t1B51#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1B41,_t1B43,_t1B4F);
          real _t1B53#2 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha19F8,_t1B51);
          bool _t1B59#1 = EQ<real>(_t1B53,_t1B41);
          if _t1B59 then goto SAVE1B5D else goto JOIN1B5B
        SAVE1B5D:  preds = [COND1B61]
          self.rayN = rayN1A33;
          active
          goto JOIN1B5B
        JOIN1B5B:  preds = [*ACTIVE1B5C,COND1B61]
          real _t1B66#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B43,_t1B53);
          real _t1B68#1 = MathFn<pow>(_t1B66,alphaFix1A19);
          real aa1B6A#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1B43,_t1B68);
          tensor[3] _t1B6C#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (step1AD7,step1AD7);
          tensor[3] snorm1B6E#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1B6C);
          real _t1B70#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1B6E,litwsp19ED);
          int _t1B72#0 = 2;
          real dcomp1B74#1 = λ(T0[])<(T0)^2> (_t1B70);
          bool _t1B7A#1 = NEQ<real>(phKs1A1D,_t1B41);
          if _t1B7A then goto ASSIGN1B7E else goto JOIN1B7C
        ASSIGN1B7E:  preds = [COND1B88]
          tensor[3] _t1B7D#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1A1A,litwsp19ED);
          tensor[3] _t1B7F#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1B7D,_t1B7D);
          real _t1B81#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1B6E,_t1B7F);
          real _t1B83#1 = λ(T0[])<Abs(T0)> (_t1B81);
          real scomp1B85#1 = MathFn<pow>(_t1B83,phSp1A1E);
          goto JOIN1B7C
        JOIN1B7C:  preds = [ASSIGN1B87,COND1B88]
          real scomp1B86#1 = phi(scomp1B85,_t1B41)
          tensor[3] dcol1B89#1 = λ(T0[3],T1[3],T2[],T3[],T4[])<(T0_{i0} + (((T3) - (T2)) / ( (T4) - (T2)) * (T1_{i0}) - (T0_{i0})))>_{3} (mcNear19F7,mcFar19F6,camNearVsp19EF,rayN1A33,camFarVsp19EE);
          real cmin1B8B#2 = TensorIndex<tensor[2],[0]>(cminmax19F5);
          real cmax1B8D#2 = TensorIndex<tensor[2],[1]>(cminmax19F5);
          tensor[3] mcol1B95#2 = <tensor[3]>[_t1B43,_t1B43,_t1B43];
          bool _t1B97#1 = NEQ<real>(cmin1B8B,cmax1B8D);
          if _t1B97 then goto ASSIGN1B9F else goto JOIN1B99
        ASSIGN1B9F:  preds = [COND1BA7]
          tensor[3] _t1B9E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1A40,step1AD7);
          real _t1BA0#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (C19F0,_t1B9E);
          real _t1BA2#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1B41,_t1B43,cmin1B8B,_t1BA0,cmax1B8D);
          tensor[3] mcol1BA4#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (CM19F1,_t1BA2);
          goto JOIN1B99
        JOIN1B99:  preds = [ASSIGN1BA6,COND1BA7]
          tensor[3] mcol1BA5#1 = phi(mcol1BA4,mcol1B95)
          real _t1BA8#1 = λ(T0[],T1[])<(T0 * T1)> (transp1A22,aa1B6A);
          real _t1BAA#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1A1C,dcomp1B74);
          real _t1BAC#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1A1B,_t1BAA);
          tensor[3] _t1BAE#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (dcol1B89,mcol1BA5);
          tensor[3] _t1BB0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BAC,_t1BAE);
          real _t1BB2#1 = λ(T0[],T1[])<(T0 * T1)> (phKs1A1D,scomp1B86);
          tensor[3] _t1BBC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BB2,mcol1B95);
          tensor[3] _t1BBE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1BB0,_t1BBC);
          tensor[3] _t1BC0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BA8,_t1BBE);
          tensor[3] rgb1BC2#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1A21,_t1BC0);
          real _t1BC6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B43,aa1B6A);
          real transp1BC8#2 = λ(T0[],T1[])<(T0 * T1)> (transp1A22,_t1BC6);
          bool _t1BCA#1 = LT<real>(transp1BC8,transp019FD);
          if _t1BCA then goto SAVE1BD1 else goto JOIN1BCC
        SAVE1BD1:  preds = [COND1BD5]
          self.rayN = rayN1A33;
          self.rgb = rgb1BC2;
          self.transp = _t1B41;
          stabilize
          goto JOIN1BCC
        JOIN1BCC:  preds = [*STABILIZE1BD0,COND1BD5]
          real transp1BCE#1 = phi(transp1BC8)
          self.rayN = rayN1A33;
          self.rgb = rgb1BC2;
          self.transp = transp1BCE;
          active
        ASSIGN1ADA:  preds = [COND1B3D]
          tensor[3,3] _t1AD9#2 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (rot19F3);
          int _t1ADB#1 = -1;
          real _t1ADD#1 = IntToReal(_t1ADB);
          int _t1ADF#1 = -2;
          real _t1AE1#1 = IntToReal(_t1ADF);
          int _t1AE3#1 = -3;
          real _t1AE5#1 = IntToReal(_t1AE3);
          tensor[3] _t1AE7#1 = <tensor[3]>[_t1ADD,_t1AE1,_t1AE5];
          tensor[3] _t1AE9#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (rot19F3,pos1A40);
          tensor[3] _t1AEB#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (_t1AE7,_t1AE9);
          tensor[3] Gv1AED#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1AD9,_t1AEB);
          real _t1AF1#1 = -0.1e1;
          real _t1AF3#6 = 0.e0;
          tensor[3] _t1AF7#1 = <tensor[3]>[_t1AF1,_t1AF3,_t1AF3];
          real _t1AFB#1 = -0.2e1;
          tensor[3] _t1AFF#1 = <tensor[3]>[_t1AF3,_t1AFB,_t1AF3];
          real _t1B05#1 = -0.3e1;
          tensor[3] _t1B07#1 = <tensor[3]>[_t1AF3,_t1AF3,_t1B05];
          tensor[3,3] _t1B09#1 = <tensor[3,3]>[_t1AF7,_t1AFF,_t1B07];
          tensor[3,3] _t1B0B#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (_t1AD9,_t1B09);
          tensor[3,3] H1B0D#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (_t1B0B,rot19F3);
          (real[3] evals1B10#2,tensor[3][3] E1B0F#2) = Eigen3x3(H1B0D);
          int _t1B15#2 = 2;
          tensor[3] _t1B17#2 = Subscript<tensor[3][3]>(E1B0F,_t1B15);
          tensor[3,3] _t1B1D#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1B17,_t1B17);
          real _t1B21#1 = Subscript<real[3]>(evals1B10,_t1B15);
          tensor[3,3] _t1B23#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1B1D,_t1B21);
          int _t1B25#2 = 1;
          tensor[3] _t1B27#2 = Subscript<tensor[3][3]>(E1B0F,_t1B25);
          tensor[3,3] _t1B2D#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1B27,_t1B27);
          real _t1B31#1 = Subscript<real[3]>(evals1B10,_t1B25);
          tensor[3,3] _t1B33#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1B2D,_t1B31);
          tensor[3,3] _t1B35#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t1B23,_t1B33);
          tensor[3,3] _t1B37#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t1B35);
          tensor[3] _t1B39#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1B37,Gv1AED);
          goto JOIN1A99
        ASSIGN1A7D:  preds = [COND1A7E]
          bool _t1A7C#1 = false;
          goto JOIN1A76
        ASSIGN1A83:  preds = [COND1A84]
          bool _t1A82#1 = false;
          goto JOIN1A6D
        ASSIGN1A89:  preds = [COND1A8A]
          bool _t1A88#1 = false;
          goto JOIN1A4D
    end update
    method stabilize
        ENTRY1C15:  preds = []
          real rayU1BDC#0 = self.rayU;
          real rayV1BDD#0 = self.rayV;
          real rayN1BDE#0 = self.rayN;
          tensor[3] UV1BDF#0 = self.UV;
          tensor[3] rayOrig1BE0#0 = self.rayOrig;
          tensor[3] rayVec1BE1#0 = self.rayVec;
          real alphaFix1BE2#0 = self.alphaFix;
          tensor[3] eyeDir1BE3#0 = self.eyeDir;
          real phKa1BE4#0 = self.phKa;
          real phKd1BE5#0 = self.phKd;
          real phKs1BE6#0 = self.phKs;
          real phSp1BE7#0 = self.phSp;
          tensor[4] rgba1BE8#1 = self.rgba;
          real raw1BE9#0 = self.raw;
          tensor[3] rgb1BEA#3 = self.rgb;
          real transp1BEB#2 = self.transp;
          real _t1BFC#2 = 0.1e1;
          bool _t1BFE#1 = LT<real>(transp1BEB,_t1BFC);
          if _t1BFE then goto ASSIGN1C59 else goto JOIN1C00
        ASSIGN1C59:  preds = [COND1C14]
          real aa1C03#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1BFC,transp1BEB);
          real _t1C05#1 = TensorIndex<tensor[3],[0]>(rgb1BEA);
          real _t1C07#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C05,aa1C03);
          real _t1C09#1 = TensorIndex<tensor[3],[1]>(rgb1BEA);
          real _t1C0B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C09,aa1C03);
          real _t1C0D#1 = TensorIndex<tensor[3],[2]>(rgb1BEA);
          real _t1C0F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C0D,aa1C03);
          tensor[4] rgba1C11#1 = <tensor[4]>[_t1C07,_t1C0B,_t1C0F,aa1C03];
          goto JOIN1C00
        JOIN1C00:  preds = [ASSIGN1C13,COND1C14]
          tensor[4] rgba1C12#1 = phi(rgba1C11,rgba1BE8)
          self.rgba = rgba1C12;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY192F:  preds = []
      int iresU1915#1 = globals.iresU17AB;
      int iresV1914#1 = globals.iresV17AC;
      int _t1918#2 = 0;
      int _t191A#2 = 1;
      int _t191C#1 = ISub(iresV1914,_t191A);
      int[] _t191E#1 = Range(_t1918,_t191C);
    FOREACH1921:  preds = [ASSIGN191F,NEXT192E]
      foreach (vi1920 in _t191E) on exit goto RETURN1930
      int _t1926#1 = ISub(iresU1915,_t191A);
      int[] _t1928#1 = Range(_t1918,_t1926);
    FOREACH192B:  preds = [ASSIGN1C1C,NEXT192D]
      foreach (ui192A in _t1928) on exit goto NEXT192E
      new ray(ui192A,vi1920);
      goto FOREACH192B
    NEXT192E:  preds = [FOREACH192B]
      goto FOREACH1921
    RETURN1930:  preds = [FOREACH1921]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block179F (block) = <no-default>
  input 0space0509_intermedateGlobal17A0 (space) = <no-default>
  input 0U050B_intermedateGlobal17A1 (U) = <no-default>
  input cellChoice17A2 (cellChoice) = <no-default>
  input cmap17A3 (cmap) = image("cmap.nrrd")
  input camEye17A4 (camEye) = <default>
  input camAt17A5 (camAt) = <default>
  input camUp17A6 (camUp) = <default>
  input camNear17A7 (camNear) = <default>
  input camFar17A8 (camFar) = <default>
  input camFOV17A9 (camFOV) = <default>
  input camOrtho17AA (camOrtho) = <default>
  input iresU17AB (iresU) = <default>
  input iresV17AC (iresV) = <default>
  input rayStep17AD (rayStep) = <default>
  input refStep17AE (refStep) = <default>
  input transp017AF (transp0) = <default>
  input thick17B0 (thick) = <default>
  input fStrTh17B1 (fStrTh) = <default>
  input fMaskTh17B2 (fMaskTh) = <default>
  input fBias17B3 (fBias) = <default>
  input maxAlpha17B4 (maxAlpha) = <default>
  input light17B5 (light) = <default>
  input phong17B6 (phong) = <default>
  input mcNear17B7 (mcNear) = <default>
  input mcFar17B8 (mcFar) = <default>
  input litdir17B9 (litdir) = <default>
  input cminmax17BA (cminmax) = <default>
  input analytical17BB (analytical) = <default>
  input umm17BC (umm) = image("data.nrrd")
  input rot17BD (rot) = <default>
  global tensor[3] camN185A
  global tensor[3] camU185B
  global tensor[3] camV185C
  global real camDist185D
  global real camVmax185E
  global real camUmax185F
  global real camNearVsp1860
  global real camFarVsp1861
  global tensor[3] litwsp1862
## functions
  function int[2] nextCell41874 (int faceIdx1863#1, int cell1864#1, femData:Mesh mesh1865#1) {
    ENTRY1873:  preds = []
      int _t1866#1 = 12;
      int _t1868#1 = IMul(cell1864,_t1866);
      int _t186A#1 = 2;
      int _t186C#1 = IMul(faceIdx1863,_t186A);
      int _t186E#1 = IAdd(_t1868,_t186C);
      int[2] _t1870#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1865,_t186E);
      return _t1870
}
## input initialization
  ENTRY1851:  preds = []
    real _t17BE#17 = 0.e0;
    real _t17C0#1 = -0.2e1;
    tensor[3] camEye17C4#1 = <tensor[3]>[_t17BE,_t17C0,_t17BE];
    globals.camEye17A4 = camEye17C4;
    tensor[3] camAt17CD#1 = <tensor[3]>[_t17BE,_t17BE,_t17BE];
    globals.camAt17A5 = camAt17CD;
    real _t17D4#7 = 0.1e1;
    tensor[3] camUp17D6#2 = <tensor[3]>[_t17BE,_t17BE,_t17D4];
    globals.camUp17A6 = camUp17D6;
    real camNear17D9#1 = -0.4e1;
    globals.camNear17A7 = camNear17D9;
    real camFar17DC#1 = 0.4e1;
    globals.camFar17A8 = camFar17DC;
    real camFOV17DF#1 = 0.1e2;
    globals.camFOV17A9 = camFOV17DF;
    bool camOrtho17E2#2 = false;
    globals.camOrtho17AA = camOrtho17E2;
    int iresU17E5#2 = 100;
    globals.iresU17AB = iresU17E5;
    globals.iresV17AC = iresU17E5;
    real rayStep17EB#2 = 0.1e-3;
    globals.rayStep17AD = rayStep17EB;
    globals.refStep17AE = rayStep17EB;
    real transp017F1#1 = 0.5e-2;
    globals.transp017AF = transp017F1;
    real thick17F4#1 = 0.1e-1;
    globals.thick17B0 = thick17F4;
    globals.fStrTh17B1 = _t17BE;
    globals.fMaskTh17B2 = _t17BE;
    real fBias17FD#2 = 0.1e0;
    globals.fBias17B3 = fBias17FD;
    globals.maxAlpha17B4 = _t17D4;
    globals.light17B5 = camOrtho17E2;
    real _t1808#1 = 0.7e0;
    real _t180A#1 = 0.2e0;
    real _t180C#1 = 0.1e3;
    tensor[4] phong180E#1 = <tensor[4]>[fBias17FD,_t1808,_t180A,_t180C];
    globals.phong17B6 = phong180E;
    tensor[3] mcNear1817#2 = <tensor[3]>[_t17D4,_t17D4,_t17D4];
    globals.mcNear17B7 = mcNear1817;
    globals.mcFar17B8 = mcNear1817;
    real _t1825#1 = -0.1e1;
    tensor[3] litdir1829#1 = <tensor[3]>[_t17BE,_t1825,_t17BE];
    globals.litdir17B9 = litdir1829;
    tensor[2] cminmax1830#1 = <tensor[2]>[_t17BE,_t17BE];
    globals.cminmax17BA = cminmax1830;
    bool analytical1833#1 = true;
    globals.analytical17BB = analytical1833;
    tensor[3] _t183C#1 = <tensor[3]>[_t17D4,_t17BE,_t17BE];
    tensor[3] _t1844#1 = <tensor[3]>[_t17BE,_t17D4,_t17BE];
    tensor[3,3] rot184E#1 = <tensor[3,3]>[_t183C,_t1844,camUp17D6];
    globals.rot17BD = rot184E;
    return
## global-variable initialization
  ENTRY1912:  preds = []
    femData:Mesh block1882#3 = globals.block179F;
    femData:Space 0space0509_intermedateGlobal1881#1 = globals.0space0509_intermedateGlobal17A0;
    femData:FemFunc 0U050B_intermedateGlobal1880#1 = globals.0U050B_intermedateGlobal17A1;
    int cellChoice187F#1 = globals.cellChoice17A2;
    image(IMAGE1D<double[3]>) cmap187E#1 = globals.cmap17A3;
    tensor[3] camEye187D#17 = globals.camEye17A4;
    tensor[3] camAt187C#17 = globals.camAt17A5;
    tensor[3] camUp187B#4 = globals.camUp17A6;
    real camNear187A#1 = globals.camNear17A7;
    real camFar1879#1 = globals.camFar17A8;
    real camFOV1878#2 = globals.camFOV17A9;
    int iresU1877#1 = globals.iresU17AB;
    int iresV1876#1 = globals.iresV17AC;
    tensor[3] litdir1875#2 = globals.litdir17B9;
    int _t1891#1 = 0;
    int _t1893#1 = 1;
    int _t1895#1 = ExtractFemItem<int,NumCell(Mesh)>(block1882);
    int _t1897#1 = ISub(_t1895,_t1893);
    int[] _t1899#1 = Range(_t1891,_t1897);
    femData:MeshCell[] _t189B#1 = <femData:MeshCell[]>{};
  FOREACH189F:  preds = [ASSIGN189C,NEXT18A4]
    foreach (_t189D in _t1899) on exit goto ASSIGN18A9
      femData:MeshCell[] _t189E#2 = phi(_t189B,_t18A2)
    femData:MeshCell _t18A0#1 = LoadFem<femData:MeshCell>(block1882,_t189D);
    femData:MeshCell[] _t18A2#1 = Append<femData:MeshCell>(_t189E,_t18A0);
    goto FOREACH189F
  ASSIGN18A9:  preds = [FOREACH189F]
    femData:Space space18A8#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1881,block1882);
    femData:FemFunc U18AB#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1880,space18A8);
    femData:MeshCell c118AE#1 = Subscript<femData:MeshCell[]>(_t189E,cellChoice187F);
    int _t18B2#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c118AE);
    femData:FuncCell _t18B4#2 = LoadFem<femData:FuncCell>(U18AB,_t18B2);
    femData:FemFunc _t18B8#6 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t18B4);
    femData:Space _t18C3#5 = ExtractFem<femData:Space,femData:FemFunc>(_t18B8);
    int _t18CC#5 = ExtractFemItem<int,CellIndex(FuncCell)>(_t18B4);
    kernel _t18D1#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img18D3#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap187E);
    tensor[3] camN18DD#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt187C,camEye187D,camAt187C,camEye187D);
    globals.camN185A = camN18DD;
    tensor[3] camU18E2#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt187C,camEye187D,camAt187C,camEye187D,camUp187B,camAt187C,camEye187D,camAt187C,camEye187D,camUp187B);
    globals.camU185B = camU18E2;
    tensor[3] camV18E5#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * (T0_{i1}) - (T1_{i1}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T0_{i3}) - (T1_{i3}) * (T0_{i3}) - (T1_{i3})))>(i3=0..2))) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii2,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * (1) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2)))>(i4=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt187C,camEye187D,camAt187C,camEye187D,camAt187C,camEye187D,camAt187C,camEye187D,camUp187B,camAt187C,camEye187D,camAt187C,camEye187D,camUp187B);
    globals.camV185C = camV18E5;
    real camDist18EA#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt187C,camEye187D);
    globals.camDist185D = camDist18EA;
    real _t18ED#2 = 0.314159265358979323846264338327950288e1;
    real _t18F1#2 = 0.36e3;
    real camVmax18F7#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV1878,_t18ED,_t18F1,camAt187C,camEye187D);
    globals.camVmax185E = camVmax18F7;
    real _t18FA#1 = IntToReal(iresU1877);
    real _t18FE#1 = IntToReal(iresV1876);
    real camUmax1900#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV1878,_t18ED,_t18F1,camAt187C,camEye187D,_t18FA,_t18FE);
    globals.camUmax185F = camUmax1900;
    real camNearVsp1903#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear187A,camAt187C,camEye187D);
    globals.camNearVsp1860 = camNearVsp1903;
    real camFarVsp1906#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar1879,camAt187C,camEye187D);
    globals.camFarVsp1861 = camFarVsp1906;
    tensor[3,3] _t1909#1 = <tensor[3,3]>[camU18E2,camV18E5,camN18DD];
    tensor[3] litwsp190F#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t1909,litdir1875,litdir1875);
    globals.litwsp1862 = litwsp190F;
    return
## strand
  strand ray (int ui1931#1, int vi1932#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY19DB:  preds = []
        tensor[3] camEye1950#1 = globals.camEye17A4;
        bool camOrtho194F#2 = globals.camOrtho17AA;
        int iresU194E#1 = globals.iresU17AB;
        int iresV194D#1 = globals.iresV17AC;
        real rayStep194C#1 = globals.rayStep17AD;
        real refStep194B#1 = globals.refStep17AE;
        tensor[4] phong194A#4 = globals.phong17B6;
        tensor[3] camN1949#4 = globals.camN185A;
        tensor[3] camU1948#2 = globals.camU185B;
        tensor[3] camV1947#2 = globals.camV185C;
        real camDist1946#1 = globals.camDist185D;
        real camVmax1945#6 = globals.camVmax185E;
        real camUmax1944#6 = globals.camUmax185F;
        real camNearVsp1943#1 = globals.camNearVsp1860;
        real _t1971#6 = -0.5e0;
        real _t1973#3 = IntToReal(ui1931);
        real _t1975#3 = IntToReal(iresU194E);
        real _t1977#6 = 0.5e0;
        real rayU197B#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1944,camUmax1944,_t1971,_t1973,_t1975,_t1977);
        real _t1981#3 = IntToReal(vi1932);
        real _t1983#3 = IntToReal(iresV194D);
        real rayV1989#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax1945,camVmax1945,_t1971,_t1981,_t1983,_t1977);
        tensor[3] UV1991#2 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax1944,camUmax1944,_t1971,_t1973,_t1975,_t1977,camU1948,camVmax1945,camVmax1945,_t1971,_t1981,_t1983,_t1977,camV1947);
        if camOrtho194F then goto JOIN1994 else goto ASSIGN1999
      JOIN1994:  preds = [COND19A0,ASSIGN1C37]
        tensor[3] _t1996#1 = phi(UV1991,_t199E)
        tensor[3] rayOrig19A1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1950,_t1996);
        if camOrtho194F then goto ASSIGN19A6 else goto ASSIGN1C71
      ASSIGN19A6:  preds = [COND19B0]
        real _t19A5#3 = 0.e0;
        tensor[3] _t19AB#1 = <tensor[3]>[_t19A5,_t19A5,_t19A5];
        goto JOIN19A4
      JOIN19A4:  preds = [ASSIGN1C38,ASSIGN1C71]
        tensor[3] _t19AC#4 = phi(_t19AB,_t19AE)
        tensor[3] rayVec19B1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1949,_t19AC);
        real alphaFix19B7#1 = λ(T0[3],T1[3],T2[],T3[])<((T2 * Sqrt(Σ(i0=0..2)<(((T0_{i0} + T1_{i0}) * (T0_{i0} + T1_{i0})))>(i0=0..2)))) / ( T3)> (camN1949,_t19AC,rayStep194C,refStep194B);
        tensor[3] eyeDir19BB#1 = λ(T0[3],T1[3],T2[3],T3[3])<Neg(((T0_{i0} + T1_{i0}) * (1) / ( Sqrt(Σ(i2=0..2)<(((T0_{i2} + T1_{i2}) * (T0_{i2} + T1_{i2})))>(i2=0..2)))))>_{3} (camN1949,_t19AC,camN1949,_t19AC);
        real phKa19BD#1 = TensorIndex<tensor[4],[0]>(phong194A);
        real phKd19BF#1 = TensorIndex<tensor[4],[1]>(phong194A);
        real phKs19C1#1 = TensorIndex<tensor[4],[2]>(phong194A);
        real phSp19C3#1 = TensorIndex<tensor[4],[3]>(phong194A);
        real _t19C5#8 = 0.e0;
        tensor[4] rgba19CD#1 = <tensor[4]>[_t19C5,_t19C5,_t19C5,_t19C5];
        tensor[3] rgb19D7#1 = <tensor[3]>[_t19C5,_t19C5,_t19C5];
        real transp19D9#1 = 0.1e1;
        self.rayU = rayU197B;
        self.rayV = rayV1989;
        self.rayN = camNearVsp1943;
        self.UV = UV1991;
        self.rayOrig = rayOrig19A1;
        self.rayVec = rayVec19B1;
        self.alphaFix = alphaFix19B7;
        self.eyeDir = eyeDir19BB;
        self.phKa = phKa19BD;
        self.phKd = phKd19BF;
        self.phKs = phKs19C1;
        self.phSp = phSp19C3;
        self.rgba = rgba19CD;
        self.raw = _t19C5;
        self.rgb = rgb19D7;
        self.transp = transp19D9;
        return
      ASSIGN1C71:  preds = [COND19B0]
        tensor[3] _t19AE#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3],T14[])<((((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))) / ( T14)>_{3} (camUmax1944,camUmax1944,_t1971,_t1973,_t1975,_t1977,camU1948,camVmax1945,camVmax1945,_t1971,_t1981,_t1983,_t1977,camV1947,camDist1946);
        goto JOIN19A4
      ASSIGN1999:  preds = [COND19A0]
        real _t1998#3 = 0.e0;
        tensor[3] _t199E#1 = <tensor[3]>[_t1998,_t1998,_t1998];
        goto JOIN1994
    end state init
    method update
        ENTRY1BD6:  preds = []
          femData:Mesh block19FF#1 = globals.block179F;
          real rayStep19FE#5 = globals.rayStep17AD;
          real transp019FD#1 = globals.transp017AF;
          real thick19FC#2 = globals.thick17B0;
          real fStrTh19FB#1 = globals.fStrTh17B1;
          real fMaskTh19FA#1 = globals.fMaskTh17B2;
          real fBias19F9#1 = globals.fBias17B3;
          real maxAlpha19F8#2 = globals.maxAlpha17B4;
          tensor[3] mcNear19F7#1 = globals.mcNear17B7;
          tensor[3] mcFar19F6#1 = globals.mcFar17B8;
          tensor[2] cminmax19F5#2 = globals.cminmax17BA;
          bool analytical19F4#1 = globals.analytical17BB;
          tensor[3,3] rot19F3#4 = globals.rot17BD;
          real camNearVsp19EF#1 = globals.camNearVsp1860;
          real camFarVsp19EE#2 = globals.camFarVsp1861;
          tensor[3] litwsp19ED#3 = globals.litwsp1862;
          real rayN1A15#5 = self.rayN;
          tensor[3] rayOrig1A17#3 = self.rayOrig;
          tensor[3] rayVec1A18#3 = self.rayVec;
          real alphaFix1A19#1 = self.alphaFix;
          tensor[3] eyeDir1A1A#2 = self.eyeDir;
          real phKa1A1B#1 = self.phKa;
          real phKd1A1C#1 = self.phKd;
          real phKs1A1D#2 = self.phKs;
          real phSp1A1E#1 = self.phSp;
          tensor[3] rgb1A21#1 = self.rgb;
          real transp1A22#2 = self.transp;
          real rayN1A33#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1A15,rayStep19FE);
          bool _t1A35#1 = GT<real>(rayN1A33,camFarVsp19EE);
          if _t1A35 then goto SAVE1A39 else goto JOIN1A37
        SAVE1A39:  preds = [COND1A3D]
          self.rayN = rayN1A33;
          stabilize
          goto JOIN1A37
        JOIN1A37:  preds = [*STABILIZE1A38,COND1A3D]
          tensor[3] pos1A40#5 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig1A17,rayN1A15,rayStep19FE,rayVec1A18);
          femData:RefCell _t1A45#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block19FF);
          real _t1A49#1 = 0.1e-8;
          bool _t1A4B#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1A45,pos1A40,_t1A49);
          if _t1A4B then goto ASSIGN1C76 else goto ASSIGN1A89
        ASSIGN1C76:  preds = [COND1A8A]
          tensor[3,3] _t1A54#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t18CC,_t18C3,_t18B8,pos1A40);
          (real[3] _t1A56#1,tensor[3][3] evecs1A57#0) = Eigen3x3(_t1A54);
          int _t1A59#1 = 1;
          real _t1A5B#1 = Subscript<real[3]>(_t1A56,_t1A59);
          real _t1A67#1 = λ(T0[],T1[],INT2,FEM(fns_t)3,FEM(func_t)4,T5[3])<(Neg(T0)) / ( (T1 + Sqrt(Σ(i0=0..2)<((Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5) * Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5)))>(i0=0..2))))> (_t1A5B,fBias19F9,_t18CC,_t18C3,_t18B8,pos1A40);
          bool _t1A6B#1 = GT<real>(_t1A67,fStrTh19FB);
          if _t1A6B then goto ASSIGN1A71 else goto ASSIGN1A83
        ASSIGN1A71:  preds = [COND1A84]
          real _t1A70#1 = 0.1e1;
          bool _t1A74#1 = GTE<real>(_t1A70,fMaskTh19FA);
          if _t1A74 then goto ASSIGN1A78 else goto ASSIGN1A7D
        ASSIGN1A78:  preds = [COND1A7E]
          bool _t1A77#1 = true;
          goto JOIN1A76
        JOIN1A76:  preds = [ASSIGN1A78,ASSIGN1A7D]
          bool _t1A7A#1 = phi(_t1A77,_t1A7C)
          goto JOIN1A6D
        JOIN1A6D:  preds = [JOIN1A76,ASSIGN1A83]
          bool _t1A80#1 = phi(_t1A7A,_t1A82)
          goto JOIN1A4D
        JOIN1A4D:  preds = [JOIN1A6D,ASSIGN1A89]
          bool _t1A86#1 = phi(_t1A80,_t1A88)
          bool _t1A8D#1 = BNot(_t1A86);
          if _t1A8D then goto SAVE1A91 else goto JOIN1A8F
        SAVE1A91:  preds = [COND1A95]
          self.rayN = rayN1A33;
          active
          goto JOIN1A8F
        JOIN1A8F:  preds = [*ACTIVE1A90,COND1A95]
          bool _t1A97#1 = BNot(analytical19F4);
          if _t1A97 then goto ASSIGN1C7D else goto ASSIGN1ADC
        ASSIGN1C7D:  preds = [COND1B3D]
          tensor[3,3] _t1A9E#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t18CC,_t18C3,_t18B8,pos1A40);
          (real[3] evals1AA1#2,tensor[3][3] E1AA0#2) = Eigen3x3(_t1A9E);
          int _t1AAC#2 = 2;
          tensor[3] _t1AAE#2 = Subscript<tensor[3][3]>(E1AA0,_t1AAC);
          real _t1AB8#1 = Subscript<real[3]>(evals1AA1,_t1AAC);
          int _t1ABC#2 = 1;
          tensor[3] _t1ABE#2 = Subscript<tensor[3][3]>(E1AA0,_t1ABC);
          real _t1AC8#1 = Subscript<real[3]>(evals1AA1,_t1ABC);
          tensor[3] _t1AD4#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,T9[3])<Σ(i1=0..2)<((Neg((((T0_{i0} * T0_{i1})) / ( T2) + ((T3_{i0} * T3_{i1})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i1},T9)))>(i1=0..2)>_{3} (_t1AAE,_t1AAE,_t1AB8,_t1ABE,_t1ABE,_t1AC8,_t18CC,_t18C3,_t18B8,pos1A40);
          goto JOIN1A99
        JOIN1A99:  preds = [ASSIGN1C83,ASSIGN1CAA]
          tensor[3] step1AD7#7 = phi(_t1AD4,_t1B39)
          real _t1B41#7 = 0.e0;
          real _t1B43#12 = 0.1e1;
          real _t1B45#2 = 0.15e1;
          real _t1B53#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[3],T6[])<(T0 * Clamp <T1,T2,(T3 * (T2) - ((Abs(Sqrt(Σ(i0=0..2)<((T5_{i0} * T5_{i0}))>(i0=0..2)))) / ( T6)))>)> (maxAlpha19F8,_t1B41,_t1B43,_t1B45,_t1B43,step1AD7,thick19FC);
          bool _t1B59#1 = EQ<real>(_t1B53,_t1B41);
          if _t1B59 then goto SAVE1B5D else goto JOIN1B5B
        SAVE1B5D:  preds = [COND1B61]
          self.rayN = rayN1A33;
          active
          goto JOIN1B5B
        JOIN1B5B:  preds = [*ACTIVE1B5C,COND1B61]
          real _t1B66#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[])<(T0) - ((T1 * Clamp <T2,T0,(T4 * (T0) - ((Abs(Sqrt(Σ(i0=0..2)<((T6_{i0} * T6_{i0}))>(i0=0..2)))) / ( T7)))>))> (_t1B43,maxAlpha19F8,_t1B41,_t1B43,_t1B45,_t1B43,step1AD7,thick19FC);
          real _t1B68#2 = MathFn<pow>(_t1B66,alphaFix1A19);
          bool _t1B7A#1 = NEQ<real>(phKs1A1D,_t1B41);
          if _t1B7A then goto ASSIGN1C90 else goto JOIN1B7C
        ASSIGN1C90:  preds = [COND1B88]
          real _t1B83#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3])<Abs(Σ(i0=0..2)<((Neg((T0_{i0} * (1) / ( Sqrt(Σ(i2=0..2)<((T0_{i2} * T0_{i2}))>(i2=0..2))))) * (T2_{i0} + T3_{i0}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T2_{i3} + T3_{i3}) * (T2_{i3} + T3_{i3})))>(i3=0..2)))))>(i0=0..2))> (step1AD7,step1AD7,eyeDir1A1A,litwsp19ED,eyeDir1A1A,litwsp19ED);
          real scomp1B85#1 = MathFn<pow>(_t1B83,phSp1A1E);
          goto JOIN1B7C
        JOIN1B7C:  preds = [ASSIGN1B87,COND1B88]
          real scomp1B86#1 = phi(scomp1B85,_t1B41)
          real cmin1B8B#2 = TensorIndex<tensor[2],[0]>(cminmax19F5);
          real cmax1B8D#2 = TensorIndex<tensor[2],[1]>(cminmax19F5);
          tensor[3] mcol1B95#2 = <tensor[3]>[_t1B43,_t1B43,_t1B43];
          bool _t1B97#1 = NEQ<real>(cmin1B8B,cmax1B8D);
          if _t1B97 then goto ASSIGN1C92 else goto JOIN1B99
        ASSIGN1C92:  preds = [COND1BA7]
          tensor[3] _t1B9E#1 = λ(T0[3],T1[],T2[],T3[3],T4[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}) + T4_{i0})>_{3} (rayOrig1A17,rayN1A15,rayStep19FE,rayVec1A18,step1AD7);
          real _t1BA2#1 = λ(T0[],T1[],T2[],INT3,FEM(fns_t)4,FEM(func_t)5,T6[3],T7[])<(T0 + (((Probe(femV(noFunc, 3, 4, 5)⊛Basis(),T6)) - (T2)) / ( (T7) - (T2)) * (T1) - (T0)))> (_t1B41,_t1B43,cmin1B8B,_t18CC,_t18C3,_t18B8,_t1B9E,cmax1B8D);
          tensor[3] mcol1BA4#1 = λ(V0(1)[3],H1,T2[1])<Probe(V0_{i0}⊛H1,T2)>_{3} (img18D3,_t18D1,_t1BA2);
          goto JOIN1B99
        JOIN1B99:  preds = [ASSIGN1C95,COND1BA7]
          tensor[3] mcol1BA5#1 = phi(mcol1BA4,mcol1B95)
          tensor[3] rgb1BC2#2 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[3],T7[3],T8[3],T9[3],T10[3],T11[],T12[],T13[],T14[],T15[3],T16[],T17[],T18[3])<(T0_{i0} + (T1 * (T2) - (T3) * (((T4 + (T5 * (Σ(i4=0..2)<((Neg((T6_{i4} * (1) / ( Sqrt(Σ(i6=0..2)<((T6_{i6} * T6_{i6}))>(i6=0..2))))) * T8_{i4}))>(i4=0..2))^2)) * (T9_{i0} + ((((T12 + T13)) - (T11)) / ( (T14) - (T11)) * (T10_{i0}) - (T9_{i0}))) * T15_{i0}) + (T16 * T17 * T18_{i0}))))>_{3} (rgb1A21,transp1A22,_t1B43,_t1B68,phKa1A1B,phKd1A1C,step1AD7,step1AD7,litwsp19ED,mcNear19F7,mcFar19F6,camNearVsp19EF,rayN1A15,rayStep19FE,camFarVsp19EE,mcol1BA5,phKs1A1D,scomp1B86,mcol1B95);
          real transp1BC8#2 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp1A22,_t1B43,_t1B43,_t1B68);
          bool _t1BCA#1 = LT<real>(transp1BC8,transp019FD);
          if _t1BCA then goto SAVE1BD1 else goto JOIN1BCC
        SAVE1BD1:  preds = [COND1BD5]
          self.rayN = rayN1A33;
          self.rgb = rgb1BC2;
          self.transp = _t1B41;
          stabilize
          goto JOIN1BCC
        JOIN1BCC:  preds = [*STABILIZE1BD0,COND1BD5]
          real transp1BCE#1 = phi(transp1BC8)
          self.rayN = rayN1A33;
          self.rgb = rgb1BC2;
          self.transp = transp1BCE;
          active
        ASSIGN1ADC:  preds = [COND1B3D]
          int _t1ADB#1 = -1;
          real _t1ADD#1 = IntToReal(_t1ADB);
          int _t1ADF#1 = -2;
          real _t1AE1#1 = IntToReal(_t1ADF);
          int _t1AE3#1 = -3;
          real _t1AE5#1 = IntToReal(_t1AE3);
          tensor[3] _t1AE7#1 = <tensor[3]>[_t1ADD,_t1AE1,_t1AE5];
          real _t1AF1#1 = -0.1e1;
          real _t1AF3#6 = 0.e0;
          tensor[3] _t1AF7#1 = <tensor[3]>[_t1AF1,_t1AF3,_t1AF3];
          real _t1AFB#1 = -0.2e1;
          tensor[3] _t1AFF#1 = <tensor[3]>[_t1AF3,_t1AFB,_t1AF3];
          real _t1B05#1 = -0.3e1;
          tensor[3] _t1B07#1 = <tensor[3]>[_t1AF3,_t1AF3,_t1B05];
          tensor[3,3] _t1B09#1 = <tensor[3,3]>[_t1AF7,_t1AFF,_t1B07];
          tensor[3,3] H1B0D#1 = λ(T0[3 3],T1[3 3],T2[3 3])<Σ(i2=0..2)<((Σ(i4=0..2)<((T0_{i4,i0} * T1_{i4,i2}))>(i4=0..2) * T2_{i2,i1}))>(i2=0..2)>_{3 3} (rot19F3,_t1B09,rot19F3);
          (real[3] evals1B10#2,tensor[3][3] E1B0F#2) = Eigen3x3(H1B0D);
          int _t1B15#2 = 2;
          tensor[3] _t1B17#2 = Subscript<tensor[3][3]>(E1B0F,_t1B15);
          real _t1B21#1 = Subscript<real[3]>(evals1B10,_t1B15);
          int _t1B25#2 = 1;
          tensor[3] _t1B27#2 = Subscript<tensor[3][3]>(E1B0F,_t1B25);
          real _t1B31#1 = Subscript<real[3]>(evals1B10,_t1B25);
          tensor[3] _t1B39#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],T6[3 3],T7[3],T8[3 3],T9[3],T10[],T11[],T12[3])<Σ(i1=0..2)<((Neg((((T0_{i0} * T0_{i1})) / ( T2) + ((T3_{i0} * T3_{i1})) / ( T5))) * Σ(i2=0..2)<((T6_{i2,i1} * T7_{i2} * Σ(i4=0..2)<((T6_{i2,i4} * (T9_{i4} + ((T10 + T11) * T12_{i4}))))>(i4=0..2)))>(i2=0..2)))>(i1=0..2)>_{3} (_t1B17,_t1B17,_t1B21,_t1B27,_t1B27,_t1B31,rot19F3,_t1AE7,rot19F3,rayOrig1A17,rayN1A15,rayStep19FE,rayVec1A18);
          goto JOIN1A99
        ASSIGN1A7D:  preds = [COND1A7E]
          bool _t1A7C#1 = false;
          goto JOIN1A76
        ASSIGN1A83:  preds = [COND1A84]
          bool _t1A82#1 = false;
          goto JOIN1A6D
        ASSIGN1A89:  preds = [COND1A8A]
          bool _t1A88#1 = false;
          goto JOIN1A4D
    end update
    method stabilize
        ENTRY1C15:  preds = []
          tensor[4] rgba1BE8#1 = self.rgba;
          tensor[3] rgb1BEA#3 = self.rgb;
          real transp1BEB#5 = self.transp;
          real _t1BFC#5 = 0.1e1;
          bool _t1BFE#1 = LT<real>(transp1BEB,_t1BFC);
          if _t1BFE then goto ASSIGN1C59 else goto JOIN1C00
        ASSIGN1C59:  preds = [COND1C14]
          real aa1C03#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1BFC,transp1BEB);
          real _t1C05#1 = TensorIndex<tensor[3],[0]>(rgb1BEA);
          real _t1C07#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1C05,_t1BFC,transp1BEB);
          real _t1C09#1 = TensorIndex<tensor[3],[1]>(rgb1BEA);
          real _t1C0B#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1C09,_t1BFC,transp1BEB);
          real _t1C0D#1 = TensorIndex<tensor[3],[2]>(rgb1BEA);
          real _t1C0F#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1C0D,_t1BFC,transp1BEB);
          tensor[4] rgba1C11#1 = <tensor[4]>[_t1C07,_t1C0B,_t1C0F,aa1C03];
          goto JOIN1C00
        JOIN1C00:  preds = [ASSIGN1C13,COND1C14]
          tensor[4] rgba1C12#1 = phi(rgba1C11,rgba1BE8)
          self.rgba = rgba1C12;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY192F:  preds = []
      int iresU1915#1 = globals.iresU17AB;
      int iresV1914#1 = globals.iresV17AC;
      int _t1918#2 = 0;
      int _t191A#2 = 1;
      int _t191C#1 = ISub(iresV1914,_t191A);
      int[] _t191E#1 = Range(_t1918,_t191C);
    FOREACH1921:  preds = [ASSIGN191F,NEXT192E]
      foreach (vi1920 in _t191E) on exit goto RETURN1930
      int _t1926#1 = ISub(iresU1915,_t191A);
      int[] _t1928#1 = Range(_t1918,_t1926);
    FOREACH192B:  preds = [ASSIGN1C1C,NEXT192D]
      foreach (ui192A in _t1928) on exit goto NEXT192E
      new ray(ui192A,vi1920);
      goto FOREACH192B
    NEXT192E:  preds = [FOREACH192B]
      goto FOREACH1921
    RETURN1930:  preds = [FOREACH1921]
      return
#### end program ####
promote _t18CC --> globals._t1CAF
promote _t18C3 --> globals._tX1CB2
promote _t18B8 --> globals._tXX1CB5
promote img18D3 --> globals.img1CBD
promote _t18D1 --> globals._tXXX1CC0
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block179F (block) = <no-default>
  input 0space0509_intermedateGlobal17A0 (space) = <no-default>
  input 0U050B_intermedateGlobal17A1 (U) = <no-default>
  input cellChoice17A2 (cellChoice) = <no-default>
  input cmap17A3 (cmap) = image("cmap.nrrd")
  input camEye17A4 (camEye) = <default>
  input camAt17A5 (camAt) = <default>
  input camUp17A6 (camUp) = <default>
  input camNear17A7 (camNear) = <default>
  input camFar17A8 (camFar) = <default>
  input camFOV17A9 (camFOV) = <default>
  input camOrtho17AA (camOrtho) = <default>
  input iresU17AB (iresU) = <default>
  input iresV17AC (iresV) = <default>
  input rayStep17AD (rayStep) = <default>
  input refStep17AE (refStep) = <default>
  input transp017AF (transp0) = <default>
  input thick17B0 (thick) = <default>
  input fStrTh17B1 (fStrTh) = <default>
  input fMaskTh17B2 (fMaskTh) = <default>
  input fBias17B3 (fBias) = <default>
  input maxAlpha17B4 (maxAlpha) = <default>
  input light17B5 (light) = <default>
  input phong17B6 (phong) = <default>
  input mcNear17B7 (mcNear) = <default>
  input mcFar17B8 (mcFar) = <default>
  input litdir17B9 (litdir) = <default>
  input cminmax17BA (cminmax) = <default>
  input analytical17BB (analytical) = <default>
  input umm17BC (umm) = image("data.nrrd")
  input rot17BD (rot) = <default>
  global tensor[3] camN185A
  global tensor[3] camU185B
  global tensor[3] camV185C
  global real camDist185D
  global real camVmax185E
  global real camUmax185F
  global real camNearVsp1860
  global real camFarVsp1861
  global tensor[3] litwsp1862
  global int _t1CAF
  global femData:Space _tX1CB2
  global femData:FemFunc _tXX1CB5
  global image(IMAGE1D<double[3]>) img1CBD
  global kernel _tXXX1CC0
## functions
  function int[2] nextCell41874 (int faceIdx1863#1, int cell1864#1, femData:Mesh mesh1865#1) {
    ENTRY1873:  preds = []
      int _t1866#1 = 12;
      int _t1868#1 = IMul(cell1864,_t1866);
      int _t186A#1 = 2;
      int _t186C#1 = IMul(faceIdx1863,_t186A);
      int _t186E#1 = IAdd(_t1868,_t186C);
      int[2] _t1870#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1865,_t186E);
      return _t1870
}
## input initialization
  ENTRY1851:  preds = []
    real _t17BE#17 = 0.e0;
    real _t17C0#1 = -0.2e1;
    tensor[3] camEye17C4#1 = <tensor[3]>[_t17BE,_t17C0,_t17BE];
    globals.camEye17A4 = camEye17C4;
    tensor[3] camAt17CD#1 = <tensor[3]>[_t17BE,_t17BE,_t17BE];
    globals.camAt17A5 = camAt17CD;
    real _t17D4#7 = 0.1e1;
    tensor[3] camUp17D6#2 = <tensor[3]>[_t17BE,_t17BE,_t17D4];
    globals.camUp17A6 = camUp17D6;
    real camNear17D9#1 = -0.4e1;
    globals.camNear17A7 = camNear17D9;
    real camFar17DC#1 = 0.4e1;
    globals.camFar17A8 = camFar17DC;
    real camFOV17DF#1 = 0.1e2;
    globals.camFOV17A9 = camFOV17DF;
    bool camOrtho17E2#2 = false;
    globals.camOrtho17AA = camOrtho17E2;
    int iresU17E5#2 = 100;
    globals.iresU17AB = iresU17E5;
    globals.iresV17AC = iresU17E5;
    real rayStep17EB#2 = 0.1e-3;
    globals.rayStep17AD = rayStep17EB;
    globals.refStep17AE = rayStep17EB;
    real transp017F1#1 = 0.5e-2;
    globals.transp017AF = transp017F1;
    real thick17F4#1 = 0.1e-1;
    globals.thick17B0 = thick17F4;
    globals.fStrTh17B1 = _t17BE;
    globals.fMaskTh17B2 = _t17BE;
    real fBias17FD#2 = 0.1e0;
    globals.fBias17B3 = fBias17FD;
    globals.maxAlpha17B4 = _t17D4;
    globals.light17B5 = camOrtho17E2;
    real _t1808#1 = 0.7e0;
    real _t180A#1 = 0.2e0;
    real _t180C#1 = 0.1e3;
    tensor[4] phong180E#1 = <tensor[4]>[fBias17FD,_t1808,_t180A,_t180C];
    globals.phong17B6 = phong180E;
    tensor[3] mcNear1817#2 = <tensor[3]>[_t17D4,_t17D4,_t17D4];
    globals.mcNear17B7 = mcNear1817;
    globals.mcFar17B8 = mcNear1817;
    real _t1825#1 = -0.1e1;
    tensor[3] litdir1829#1 = <tensor[3]>[_t17BE,_t1825,_t17BE];
    globals.litdir17B9 = litdir1829;
    tensor[2] cminmax1830#1 = <tensor[2]>[_t17BE,_t17BE];
    globals.cminmax17BA = cminmax1830;
    bool analytical1833#1 = true;
    globals.analytical17BB = analytical1833;
    tensor[3] _t183C#1 = <tensor[3]>[_t17D4,_t17BE,_t17BE];
    tensor[3] _t1844#1 = <tensor[3]>[_t17BE,_t17D4,_t17BE];
    tensor[3,3] rot184E#1 = <tensor[3,3]>[_t183C,_t1844,camUp17D6];
    globals.rot17BD = rot184E;
    return
## global-variable initialization
  ENTRY1912:  preds = []
    femData:Mesh block1882#3 = globals.block179F;
    femData:Space 0space0509_intermedateGlobal1881#1 = globals.0space0509_intermedateGlobal17A0;
    femData:FemFunc 0U050B_intermedateGlobal1880#1 = globals.0U050B_intermedateGlobal17A1;
    int cellChoice187F#1 = globals.cellChoice17A2;
    image(IMAGE1D<double[3]>) cmap187E#1 = globals.cmap17A3;
    tensor[3] camEye187D#17 = globals.camEye17A4;
    tensor[3] camAt187C#17 = globals.camAt17A5;
    tensor[3] camUp187B#4 = globals.camUp17A6;
    real camNear187A#1 = globals.camNear17A7;
    real camFar1879#1 = globals.camFar17A8;
    real camFOV1878#2 = globals.camFOV17A9;
    int iresU1877#1 = globals.iresU17AB;
    int iresV1876#1 = globals.iresV17AC;
    tensor[3] litdir1875#2 = globals.litdir17B9;
    int _t1891#1 = 0;
    int _t1893#1 = 1;
    int _t1895#1 = ExtractFemItem<int,NumCell(Mesh)>(block1882);
    int _t1897#1 = ISub(_t1895,_t1893);
    int[] _t1899#1 = Range(_t1891,_t1897);
    femData:MeshCell[] _t189B#1 = <femData:MeshCell[]>{};
  FOREACH189F:  preds = [ASSIGN189C,NEXT18A4]
    foreach (_t189D in _t1899) on exit goto ASSIGN18A9
      femData:MeshCell[] _t189E#2 = phi(_t189B,_t18A2)
    femData:MeshCell _t18A0#1 = LoadFem<femData:MeshCell>(block1882,_t189D);
    femData:MeshCell[] _t18A2#1 = Append<femData:MeshCell>(_t189E,_t18A0);
    goto FOREACH189F
  ASSIGN18A9:  preds = [FOREACH189F]
    femData:Space space18A8#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1881,block1882);
    femData:FemFunc U18AB#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1880,space18A8);
    femData:MeshCell c118AE#1 = Subscript<femData:MeshCell[]>(_t189E,cellChoice187F);
    int _t18B2#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c118AE);
    femData:FuncCell _t18B4#2 = LoadFem<femData:FuncCell>(U18AB,_t18B2);
    femData:FemFunc _t18B8#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t18B4);
    femData:Space _t18C3#1 = ExtractFem<femData:Space,femData:FemFunc>(_t18B8);
    int _t18CC#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t18B4);
    kernel _t18D1#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img18D3#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap187E);
    tensor[3] camN18DD#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt187C,camEye187D,camAt187C,camEye187D);
    globals.camN185A = camN18DD;
    tensor[3] camU18E2#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt187C,camEye187D,camAt187C,camEye187D,camUp187B,camAt187C,camEye187D,camAt187C,camEye187D,camUp187B);
    globals.camU185B = camU18E2;
    tensor[3] camV18E5#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * (T0_{i1}) - (T1_{i1}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T0_{i3}) - (T1_{i3}) * (T0_{i3}) - (T1_{i3})))>(i3=0..2))) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii2,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * (1) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2)))>(i4=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt187C,camEye187D,camAt187C,camEye187D,camAt187C,camEye187D,camAt187C,camEye187D,camUp187B,camAt187C,camEye187D,camAt187C,camEye187D,camUp187B);
    globals.camV185C = camV18E5;
    real camDist18EA#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt187C,camEye187D);
    globals.camDist185D = camDist18EA;
    real _t18ED#2 = 0.314159265358979323846264338327950288e1;
    real _t18F1#2 = 0.36e3;
    real camVmax18F7#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV1878,_t18ED,_t18F1,camAt187C,camEye187D);
    globals.camVmax185E = camVmax18F7;
    real _t18FA#1 = IntToReal(iresU1877);
    real _t18FE#1 = IntToReal(iresV1876);
    real camUmax1900#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV1878,_t18ED,_t18F1,camAt187C,camEye187D,_t18FA,_t18FE);
    globals.camUmax185F = camUmax1900;
    real camNearVsp1903#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear187A,camAt187C,camEye187D);
    globals.camNearVsp1860 = camNearVsp1903;
    real camFarVsp1906#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar1879,camAt187C,camEye187D);
    globals.camFarVsp1861 = camFarVsp1906;
    tensor[3,3] _t1909#1 = <tensor[3,3]>[camU18E2,camV18E5,camN18DD];
    tensor[3] litwsp190F#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t1909,litdir1875,litdir1875);
    globals.litwsp1862 = litwsp190F;
    globals._t1CAF = _t18CC;
    globals._tX1CB2 = _t18C3;
    globals._tXX1CB5 = _t18B8;
    globals.img1CBD = img18D3;
    globals._tXXX1CC0 = _t18D1;
    return
## strand
  strand ray (int ui1931#1, int vi1932#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY19DB:  preds = []
        tensor[3] camEye1950#1 = globals.camEye17A4;
        bool camOrtho194F#2 = globals.camOrtho17AA;
        int iresU194E#1 = globals.iresU17AB;
        int iresV194D#1 = globals.iresV17AC;
        real rayStep194C#1 = globals.rayStep17AD;
        real refStep194B#1 = globals.refStep17AE;
        tensor[4] phong194A#4 = globals.phong17B6;
        tensor[3] camN1949#4 = globals.camN185A;
        tensor[3] camU1948#2 = globals.camU185B;
        tensor[3] camV1947#2 = globals.camV185C;
        real camDist1946#1 = globals.camDist185D;
        real camVmax1945#6 = globals.camVmax185E;
        real camUmax1944#6 = globals.camUmax185F;
        real camNearVsp1943#1 = globals.camNearVsp1860;
        real _t1971#6 = -0.5e0;
        real _t1973#3 = IntToReal(ui1931);
        real _t1975#3 = IntToReal(iresU194E);
        real _t1977#6 = 0.5e0;
        real rayU197B#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1944,camUmax1944,_t1971,_t1973,_t1975,_t1977);
        real _t1981#3 = IntToReal(vi1932);
        real _t1983#3 = IntToReal(iresV194D);
        real rayV1989#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax1945,camVmax1945,_t1971,_t1981,_t1983,_t1977);
        tensor[3] UV1991#2 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax1944,camUmax1944,_t1971,_t1973,_t1975,_t1977,camU1948,camVmax1945,camVmax1945,_t1971,_t1981,_t1983,_t1977,camV1947);
        if camOrtho194F then goto JOIN1994 else goto ASSIGN1999
      JOIN1994:  preds = [COND19A0,ASSIGN1C37]
        tensor[3] _t1996#1 = phi(UV1991,_t199E)
        tensor[3] rayOrig19A1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1950,_t1996);
        if camOrtho194F then goto ASSIGN19A6 else goto ASSIGN1C71
      ASSIGN19A6:  preds = [COND19B0]
        real _t19A5#3 = 0.e0;
        tensor[3] _t19AB#1 = <tensor[3]>[_t19A5,_t19A5,_t19A5];
        goto JOIN19A4
      JOIN19A4:  preds = [ASSIGN1C38,ASSIGN1C71]
        tensor[3] _t19AC#4 = phi(_t19AB,_t19AE)
        tensor[3] rayVec19B1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1949,_t19AC);
        real alphaFix19B7#1 = λ(T0[3],T1[3],T2[],T3[])<((T2 * Sqrt(Σ(i0=0..2)<(((T0_{i0} + T1_{i0}) * (T0_{i0} + T1_{i0})))>(i0=0..2)))) / ( T3)> (camN1949,_t19AC,rayStep194C,refStep194B);
        tensor[3] eyeDir19BB#1 = λ(T0[3],T1[3],T2[3],T3[3])<Neg(((T0_{i0} + T1_{i0}) * (1) / ( Sqrt(Σ(i2=0..2)<(((T0_{i2} + T1_{i2}) * (T0_{i2} + T1_{i2})))>(i2=0..2)))))>_{3} (camN1949,_t19AC,camN1949,_t19AC);
        real phKa19BD#1 = TensorIndex<tensor[4],[0]>(phong194A);
        real phKd19BF#1 = TensorIndex<tensor[4],[1]>(phong194A);
        real phKs19C1#1 = TensorIndex<tensor[4],[2]>(phong194A);
        real phSp19C3#1 = TensorIndex<tensor[4],[3]>(phong194A);
        real _t19C5#8 = 0.e0;
        tensor[4] rgba19CD#1 = <tensor[4]>[_t19C5,_t19C5,_t19C5,_t19C5];
        tensor[3] rgb19D7#1 = <tensor[3]>[_t19C5,_t19C5,_t19C5];
        real transp19D9#1 = 0.1e1;
        self.rayU = rayU197B;
        self.rayV = rayV1989;
        self.rayN = camNearVsp1943;
        self.UV = UV1991;
        self.rayOrig = rayOrig19A1;
        self.rayVec = rayVec19B1;
        self.alphaFix = alphaFix19B7;
        self.eyeDir = eyeDir19BB;
        self.phKa = phKa19BD;
        self.phKd = phKd19BF;
        self.phKs = phKs19C1;
        self.phSp = phSp19C3;
        self.rgba = rgba19CD;
        self.raw = _t19C5;
        self.rgb = rgb19D7;
        self.transp = transp19D9;
        return
      ASSIGN1C71:  preds = [COND19B0]
        tensor[3] _t19AE#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3],T14[])<((((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))) / ( T14)>_{3} (camUmax1944,camUmax1944,_t1971,_t1973,_t1975,_t1977,camU1948,camVmax1945,camVmax1945,_t1971,_t1981,_t1983,_t1977,camV1947,camDist1946);
        goto JOIN19A4
      ASSIGN1999:  preds = [COND19A0]
        real _t1998#3 = 0.e0;
        tensor[3] _t199E#1 = <tensor[3]>[_t1998,_t1998,_t1998];
        goto JOIN1994
    end state init
    method update
        ENTRY1BD6:  preds = []
          int _t1CB0#5 = globals._t1CAF;
          femData:Space _t1CB3#5 = globals._tX1CB2;
          femData:FemFunc _t1CB6#5 = globals._tXX1CB5;
          image(IMAGE1D<double[3]>) img1CBE#1 = globals.img1CBD;
          kernel _t1CC1#1 = globals._tXXX1CC0;
          femData:Mesh block19FF#1 = globals.block179F;
          real rayStep19FE#5 = globals.rayStep17AD;
          real transp019FD#1 = globals.transp017AF;
          real thick19FC#2 = globals.thick17B0;
          real fStrTh19FB#1 = globals.fStrTh17B1;
          real fMaskTh19FA#1 = globals.fMaskTh17B2;
          real fBias19F9#1 = globals.fBias17B3;
          real maxAlpha19F8#2 = globals.maxAlpha17B4;
          tensor[3] mcNear19F7#1 = globals.mcNear17B7;
          tensor[3] mcFar19F6#1 = globals.mcFar17B8;
          tensor[2] cminmax19F5#2 = globals.cminmax17BA;
          bool analytical19F4#1 = globals.analytical17BB;
          tensor[3,3] rot19F3#4 = globals.rot17BD;
          real camNearVsp19EF#1 = globals.camNearVsp1860;
          real camFarVsp19EE#2 = globals.camFarVsp1861;
          tensor[3] litwsp19ED#3 = globals.litwsp1862;
          real rayN1A15#5 = self.rayN;
          tensor[3] rayOrig1A17#3 = self.rayOrig;
          tensor[3] rayVec1A18#3 = self.rayVec;
          real alphaFix1A19#1 = self.alphaFix;
          tensor[3] eyeDir1A1A#2 = self.eyeDir;
          real phKa1A1B#1 = self.phKa;
          real phKd1A1C#1 = self.phKd;
          real phKs1A1D#2 = self.phKs;
          real phSp1A1E#1 = self.phSp;
          tensor[3] rgb1A21#1 = self.rgb;
          real transp1A22#2 = self.transp;
          real rayN1A33#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1A15,rayStep19FE);
          bool _t1A35#1 = GT<real>(rayN1A33,camFarVsp19EE);
          if _t1A35 then goto SAVE1A39 else goto JOIN1A37
        SAVE1A39:  preds = [COND1A3D]
          self.rayN = rayN1A33;
          stabilize
          goto JOIN1A37
        JOIN1A37:  preds = [*STABILIZE1A38,COND1A3D]
          tensor[3] pos1A40#5 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig1A17,rayN1A15,rayStep19FE,rayVec1A18);
          femData:RefCell _t1A45#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block19FF);
          real _t1A49#1 = 0.1e-8;
          bool _t1A4B#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1A45,pos1A40,_t1A49);
          if _t1A4B then goto ASSIGN1CB7 else goto ASSIGN1A89
        ASSIGN1CB7:  preds = [COND1A8A]
          tensor[3,3] _t1A54#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t1CB0,_t1CB3,_t1CB6,pos1A40);
          (real[3] _t1A56#1,tensor[3][3] evecs1A57#0) = Eigen3x3(_t1A54);
          int _t1A59#1 = 1;
          real _t1A5B#1 = Subscript<real[3]>(_t1A56,_t1A59);
          real _t1A67#1 = λ(T0[],T1[],INT2,FEM(fns_t)3,FEM(func_t)4,T5[3])<(Neg(T0)) / ( (T1 + Sqrt(Σ(i0=0..2)<((Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5) * Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5)))>(i0=0..2))))> (_t1A5B,fBias19F9,_t1CB0,_t1CB3,_t1CB6,pos1A40);
          bool _t1A6B#1 = GT<real>(_t1A67,fStrTh19FB);
          if _t1A6B then goto ASSIGN1A71 else goto ASSIGN1A83
        ASSIGN1A71:  preds = [COND1A84]
          real _t1A70#1 = 0.1e1;
          bool _t1A74#1 = GTE<real>(_t1A70,fMaskTh19FA);
          if _t1A74 then goto ASSIGN1A78 else goto ASSIGN1A7D
        ASSIGN1A78:  preds = [COND1A7E]
          bool _t1A77#1 = true;
          goto JOIN1A76
        JOIN1A76:  preds = [ASSIGN1A78,ASSIGN1A7D]
          bool _t1A7A#1 = phi(_t1A77,_t1A7C)
          goto JOIN1A6D
        JOIN1A6D:  preds = [JOIN1A76,ASSIGN1A83]
          bool _t1A80#1 = phi(_t1A7A,_t1A82)
          goto JOIN1A4D
        JOIN1A4D:  preds = [JOIN1A6D,ASSIGN1A89]
          bool _t1A86#1 = phi(_t1A80,_t1A88)
          bool _t1A8D#1 = BNot(_t1A86);
          if _t1A8D then goto SAVE1A91 else goto JOIN1A8F
        SAVE1A91:  preds = [COND1A95]
          self.rayN = rayN1A33;
          active
          goto JOIN1A8F
        JOIN1A8F:  preds = [*ACTIVE1A90,COND1A95]
          bool _t1A97#1 = BNot(analytical19F4);
          if _t1A97 then goto ASSIGN1CB9 else goto ASSIGN1ADC
        ASSIGN1CB9:  preds = [COND1B3D]
          tensor[3,3] _t1A9E#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t1CB0,_t1CB3,_t1CB6,pos1A40);
          (real[3] evals1AA1#2,tensor[3][3] E1AA0#2) = Eigen3x3(_t1A9E);
          int _t1AAC#2 = 2;
          tensor[3] _t1AAE#2 = Subscript<tensor[3][3]>(E1AA0,_t1AAC);
          real _t1AB8#1 = Subscript<real[3]>(evals1AA1,_t1AAC);
          int _t1ABC#2 = 1;
          tensor[3] _t1ABE#2 = Subscript<tensor[3][3]>(E1AA0,_t1ABC);
          real _t1AC8#1 = Subscript<real[3]>(evals1AA1,_t1ABC);
          tensor[3] _t1AD4#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,T9[3])<Σ(i1=0..2)<((Neg((((T0_{i0} * T0_{i1})) / ( T2) + ((T3_{i0} * T3_{i1})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i1},T9)))>(i1=0..2)>_{3} (_t1AAE,_t1AAE,_t1AB8,_t1ABE,_t1ABE,_t1AC8,_t1CB0,_t1CB3,_t1CB6,pos1A40);
          goto JOIN1A99
        JOIN1A99:  preds = [ASSIGN1CBA,ASSIGN1CAA]
          tensor[3] step1AD7#7 = phi(_t1AD4,_t1B39)
          real _t1B41#7 = 0.e0;
          real _t1B43#12 = 0.1e1;
          real _t1B45#2 = 0.15e1;
          real _t1B53#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[3],T6[])<(T0 * Clamp <T1,T2,(T3 * (T2) - ((Abs(Sqrt(Σ(i0=0..2)<((T5_{i0} * T5_{i0}))>(i0=0..2)))) / ( T6)))>)> (maxAlpha19F8,_t1B41,_t1B43,_t1B45,_t1B43,step1AD7,thick19FC);
          bool _t1B59#1 = EQ<real>(_t1B53,_t1B41);
          if _t1B59 then goto SAVE1B5D else goto JOIN1B5B
        SAVE1B5D:  preds = [COND1B61]
          self.rayN = rayN1A33;
          active
          goto JOIN1B5B
        JOIN1B5B:  preds = [*ACTIVE1B5C,COND1B61]
          real _t1B66#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[])<(T0) - ((T1 * Clamp <T2,T0,(T4 * (T0) - ((Abs(Sqrt(Σ(i0=0..2)<((T6_{i0} * T6_{i0}))>(i0=0..2)))) / ( T7)))>))> (_t1B43,maxAlpha19F8,_t1B41,_t1B43,_t1B45,_t1B43,step1AD7,thick19FC);
          real _t1B68#2 = MathFn<pow>(_t1B66,alphaFix1A19);
          bool _t1B7A#1 = NEQ<real>(phKs1A1D,_t1B41);
          if _t1B7A then goto ASSIGN1C90 else goto JOIN1B7C
        ASSIGN1C90:  preds = [COND1B88]
          real _t1B83#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3])<Abs(Σ(i0=0..2)<((Neg((T0_{i0} * (1) / ( Sqrt(Σ(i2=0..2)<((T0_{i2} * T0_{i2}))>(i2=0..2))))) * (T2_{i0} + T3_{i0}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T2_{i3} + T3_{i3}) * (T2_{i3} + T3_{i3})))>(i3=0..2)))))>(i0=0..2))> (step1AD7,step1AD7,eyeDir1A1A,litwsp19ED,eyeDir1A1A,litwsp19ED);
          real scomp1B85#1 = MathFn<pow>(_t1B83,phSp1A1E);
          goto JOIN1B7C
        JOIN1B7C:  preds = [ASSIGN1B87,COND1B88]
          real scomp1B86#1 = phi(scomp1B85,_t1B41)
          real cmin1B8B#2 = TensorIndex<tensor[2],[0]>(cminmax19F5);
          real cmax1B8D#2 = TensorIndex<tensor[2],[1]>(cminmax19F5);
          tensor[3] mcol1B95#2 = <tensor[3]>[_t1B43,_t1B43,_t1B43];
          bool _t1B97#1 = NEQ<real>(cmin1B8B,cmax1B8D);
          if _t1B97 then goto ASSIGN1C92 else goto JOIN1B99
        ASSIGN1C92:  preds = [COND1BA7]
          tensor[3] _t1B9E#1 = λ(T0[3],T1[],T2[],T3[3],T4[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}) + T4_{i0})>_{3} (rayOrig1A17,rayN1A15,rayStep19FE,rayVec1A18,step1AD7);
          real _t1BA2#1 = λ(T0[],T1[],T2[],INT3,FEM(fns_t)4,FEM(func_t)5,T6[3],T7[])<(T0 + (((Probe(femV(noFunc, 3, 4, 5)⊛Basis(),T6)) - (T2)) / ( (T7) - (T2)) * (T1) - (T0)))> (_t1B41,_t1B43,cmin1B8B,_t1CB0,_t1CB3,_t1CB6,_t1B9E,cmax1B8D);
          tensor[3] mcol1BA4#1 = λ(V0(1)[3],H1,T2[1])<Probe(V0_{i0}⊛H1,T2)>_{3} (img1CBE,_t1CC1,_t1BA2);
          goto JOIN1B99
        JOIN1B99:  preds = [ASSIGN1CC2,COND1BA7]
          tensor[3] mcol1BA5#1 = phi(mcol1BA4,mcol1B95)
          tensor[3] rgb1BC2#2 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[3],T7[3],T8[3],T9[3],T10[3],T11[],T12[],T13[],T14[],T15[3],T16[],T17[],T18[3])<(T0_{i0} + (T1 * (T2) - (T3) * (((T4 + (T5 * (Σ(i4=0..2)<((Neg((T6_{i4} * (1) / ( Sqrt(Σ(i6=0..2)<((T6_{i6} * T6_{i6}))>(i6=0..2))))) * T8_{i4}))>(i4=0..2))^2)) * (T9_{i0} + ((((T12 + T13)) - (T11)) / ( (T14) - (T11)) * (T10_{i0}) - (T9_{i0}))) * T15_{i0}) + (T16 * T17 * T18_{i0}))))>_{3} (rgb1A21,transp1A22,_t1B43,_t1B68,phKa1A1B,phKd1A1C,step1AD7,step1AD7,litwsp19ED,mcNear19F7,mcFar19F6,camNearVsp19EF,rayN1A15,rayStep19FE,camFarVsp19EE,mcol1BA5,phKs1A1D,scomp1B86,mcol1B95);
          real transp1BC8#2 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp1A22,_t1B43,_t1B43,_t1B68);
          bool _t1BCA#1 = LT<real>(transp1BC8,transp019FD);
          if _t1BCA then goto SAVE1BD1 else goto JOIN1BCC
        SAVE1BD1:  preds = [COND1BD5]
          self.rayN = rayN1A33;
          self.rgb = rgb1BC2;
          self.transp = _t1B41;
          stabilize
          goto JOIN1BCC
        JOIN1BCC:  preds = [*STABILIZE1BD0,COND1BD5]
          real transp1BCE#1 = phi(transp1BC8)
          self.rayN = rayN1A33;
          self.rgb = rgb1BC2;
          self.transp = transp1BCE;
          active
        ASSIGN1ADC:  preds = [COND1B3D]
          int _t1ADB#1 = -1;
          real _t1ADD#1 = IntToReal(_t1ADB);
          int _t1ADF#1 = -2;
          real _t1AE1#1 = IntToReal(_t1ADF);
          int _t1AE3#1 = -3;
          real _t1AE5#1 = IntToReal(_t1AE3);
          tensor[3] _t1AE7#1 = <tensor[3]>[_t1ADD,_t1AE1,_t1AE5];
          real _t1AF1#1 = -0.1e1;
          real _t1AF3#6 = 0.e0;
          tensor[3] _t1AF7#1 = <tensor[3]>[_t1AF1,_t1AF3,_t1AF3];
          real _t1AFB#1 = -0.2e1;
          tensor[3] _t1AFF#1 = <tensor[3]>[_t1AF3,_t1AFB,_t1AF3];
          real _t1B05#1 = -0.3e1;
          tensor[3] _t1B07#1 = <tensor[3]>[_t1AF3,_t1AF3,_t1B05];
          tensor[3,3] _t1B09#1 = <tensor[3,3]>[_t1AF7,_t1AFF,_t1B07];
          tensor[3,3] H1B0D#1 = λ(T0[3 3],T1[3 3],T2[3 3])<Σ(i2=0..2)<((Σ(i4=0..2)<((T0_{i4,i0} * T1_{i4,i2}))>(i4=0..2) * T2_{i2,i1}))>(i2=0..2)>_{3 3} (rot19F3,_t1B09,rot19F3);
          (real[3] evals1B10#2,tensor[3][3] E1B0F#2) = Eigen3x3(H1B0D);
          int _t1B15#2 = 2;
          tensor[3] _t1B17#2 = Subscript<tensor[3][3]>(E1B0F,_t1B15);
          real _t1B21#1 = Subscript<real[3]>(evals1B10,_t1B15);
          int _t1B25#2 = 1;
          tensor[3] _t1B27#2 = Subscript<tensor[3][3]>(E1B0F,_t1B25);
          real _t1B31#1 = Subscript<real[3]>(evals1B10,_t1B25);
          tensor[3] _t1B39#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],T6[3 3],T7[3],T8[3 3],T9[3],T10[],T11[],T12[3])<Σ(i1=0..2)<((Neg((((T0_{i0} * T0_{i1})) / ( T2) + ((T3_{i0} * T3_{i1})) / ( T5))) * Σ(i2=0..2)<((T6_{i2,i1} * T7_{i2} * Σ(i4=0..2)<((T6_{i2,i4} * (T9_{i4} + ((T10 + T11) * T12_{i4}))))>(i4=0..2)))>(i2=0..2)))>(i1=0..2)>_{3} (_t1B17,_t1B17,_t1B21,_t1B27,_t1B27,_t1B31,rot19F3,_t1AE7,rot19F3,rayOrig1A17,rayN1A15,rayStep19FE,rayVec1A18);
          goto JOIN1A99
        ASSIGN1A7D:  preds = [COND1A7E]
          bool _t1A7C#1 = false;
          goto JOIN1A76
        ASSIGN1A83:  preds = [COND1A84]
          bool _t1A82#1 = false;
          goto JOIN1A6D
        ASSIGN1A89:  preds = [COND1A8A]
          bool _t1A88#1 = false;
          goto JOIN1A4D
    end update
    method stabilize
        ENTRY1C15:  preds = []
          tensor[4] rgba1BE8#1 = self.rgba;
          tensor[3] rgb1BEA#3 = self.rgb;
          real transp1BEB#5 = self.transp;
          real _t1BFC#5 = 0.1e1;
          bool _t1BFE#1 = LT<real>(transp1BEB,_t1BFC);
          if _t1BFE then goto ASSIGN1C59 else goto JOIN1C00
        ASSIGN1C59:  preds = [COND1C14]
          real aa1C03#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1BFC,transp1BEB);
          real _t1C05#1 = TensorIndex<tensor[3],[0]>(rgb1BEA);
          real _t1C07#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1C05,_t1BFC,transp1BEB);
          real _t1C09#1 = TensorIndex<tensor[3],[1]>(rgb1BEA);
          real _t1C0B#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1C09,_t1BFC,transp1BEB);
          real _t1C0D#1 = TensorIndex<tensor[3],[2]>(rgb1BEA);
          real _t1C0F#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1C0D,_t1BFC,transp1BEB);
          tensor[4] rgba1C11#1 = <tensor[4]>[_t1C07,_t1C0B,_t1C0F,aa1C03];
          goto JOIN1C00
        JOIN1C00:  preds = [ASSIGN1C13,COND1C14]
          tensor[4] rgba1C12#1 = phi(rgba1C11,rgba1BE8)
          self.rgba = rgba1C12;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY192F:  preds = []
      int iresU1915#1 = globals.iresU17AB;
      int iresV1914#1 = globals.iresV17AC;
      int _t1918#2 = 0;
      int _t191A#2 = 1;
      int _t191C#1 = ISub(iresV1914,_t191A);
      int[] _t191E#1 = Range(_t1918,_t191C);
    FOREACH1921:  preds = [ASSIGN191F,NEXT192E]
      foreach (vi1920 in _t191E) on exit goto RETURN1930
      int _t1926#1 = ISub(iresU1915,_t191A);
      int[] _t1928#1 = Range(_t1918,_t1926);
    FOREACH192B:  preds = [ASSIGN1C1C,NEXT192D]
      foreach (ui192A in _t1928) on exit goto NEXT192E
      new ray(ui192A,vi1920);
      goto FOREACH192B
    NEXT192E:  preds = [FOREACH192B]
      goto FOREACH1921
    RETURN1930:  preds = [FOREACH1921]
      return
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1CCD (block) = <no-default>
  input 0space0509_intermedateGlobal1CCE (space) = <no-default>
  input 0U050B_intermedateGlobal1CCF (U) = <no-default>
  input cellChoice1CD0 (cellChoice) = <no-default>
  input cmap1CD1 (cmap) = image("cmap.nrrd")
  input camEye1CD2 (camEye) = <default>
  input camAt1CD3 (camAt) = <default>
  input camUp1CD4 (camUp) = <default>
  input camNear1CD5 (camNear) = <default>
  input camFar1CD6 (camFar) = <default>
  input camFOV1CD7 (camFOV) = <default>
  input camOrtho1CD8 (camOrtho) = <default>
  input iresU1CD9 (iresU) = <default>
  input iresV1CDA (iresV) = <default>
  input rayStep1CDB (rayStep) = <default>
  input refStep1CDC (refStep) = <default>
  input transp01CDD (transp0) = <default>
  input thick1CDE (thick) = <default>
  input fStrTh1CDF (fStrTh) = <default>
  input fMaskTh1CE0 (fMaskTh) = <default>
  input fBias1CE1 (fBias) = <default>
  input maxAlpha1CE2 (maxAlpha) = <default>
  input light1CE3 (light) = <default>
  input phong1CE4 (phong) = <default>
  input mcNear1CE5 (mcNear) = <default>
  input mcFar1CE6 (mcFar) = <default>
  input litdir1CE7 (litdir) = <default>
  input cminmax1CE8 (cminmax) = <default>
  input analytical1CE9 (analytical) = <default>
  input umm1CEA (umm) = image("data.nrrd")
  input rot1CEB (rot) = <default>
  global tensor[3] camN1CEC
  global tensor[3] camU1CED
  global tensor[3] camV1CEE
  global real camDist1CEF
  global real camVmax1CF0
  global real camUmax1CF1
  global real camNearVsp1CF2
  global real camFarVsp1CF3
  global tensor[3] litwsp1CF4
  global int _t1CF5
  global femData:Space _tX1CF6
  global femData:FemFunc _tXX1CF7
  global image(IMAGE1D<double[3]>) img1CF8
  global kernel _tXXX1CF9
## functions
## input initialization
  ENTRY1CFA:  preds = []
    real _t1CFB#17 = 0.e0;
    real _t1CFD#1 = -0.2e1;
    tensor[3] camEye1CFF#1 = <tensor[3]>[_t1CFB,_t1CFD,_t1CFB];
    globals.camEye1CD2 = camEye1CFF;
    tensor[3] camAt1D02#1 = <tensor[3]>[_t1CFB,_t1CFB,_t1CFB];
    globals.camAt1CD3 = camAt1D02;
    real _t1D05#7 = 0.1e1;
    tensor[3] camUp1D07#2 = <tensor[3]>[_t1CFB,_t1CFB,_t1D05];
    globals.camUp1CD4 = camUp1D07;
    real camNear1D0A#1 = -0.4e1;
    globals.camNear1CD5 = camNear1D0A;
    real camFar1D0D#1 = 0.4e1;
    globals.camFar1CD6 = camFar1D0D;
    real camFOV1D10#1 = 0.1e2;
    globals.camFOV1CD7 = camFOV1D10;
    bool camOrtho1D13#2 = false;
    globals.camOrtho1CD8 = camOrtho1D13;
    int iresU1D16#2 = 100;
    globals.iresU1CD9 = iresU1D16;
    globals.iresV1CDA = iresU1D16;
    real rayStep1D1A#2 = 0.1e-3;
    globals.rayStep1CDB = rayStep1D1A;
    globals.refStep1CDC = rayStep1D1A;
    real transp01D1E#1 = 0.5e-2;
    globals.transp01CDD = transp01D1E;
    real thick1D21#1 = 0.1e-1;
    globals.thick1CDE = thick1D21;
    globals.fStrTh1CDF = _t1CFB;
    globals.fMaskTh1CE0 = _t1CFB;
    real fBias1D26#2 = 0.1e0;
    globals.fBias1CE1 = fBias1D26;
    globals.maxAlpha1CE2 = _t1D05;
    globals.light1CE3 = camOrtho1D13;
    real _t1D2B#1 = 0.7e0;
    real _t1D2D#1 = 0.2e0;
    real _t1D2F#1 = 0.1e3;
    tensor[4] phong1D31#1 = <tensor[4]>[fBias1D26,_t1D2B,_t1D2D,_t1D2F];
    globals.phong1CE4 = phong1D31;
    tensor[3] mcNear1D34#2 = <tensor[3]>[_t1D05,_t1D05,_t1D05];
    globals.mcNear1CE5 = mcNear1D34;
    globals.mcFar1CE6 = mcNear1D34;
    real _t1D38#1 = -0.1e1;
    tensor[3] litdir1D3A#1 = <tensor[3]>[_t1CFB,_t1D38,_t1CFB];
    globals.litdir1CE7 = litdir1D3A;
    tensor[2] cminmax1D3D#1 = <tensor[2]>[_t1CFB,_t1CFB];
    globals.cminmax1CE8 = cminmax1D3D;
    bool analytical1D40#1 = true;
    globals.analytical1CE9 = analytical1D40;
    tensor[3] _t1D43#1 = <tensor[3]>[_t1D05,_t1CFB,_t1CFB];
    tensor[3] _t1D45#1 = <tensor[3]>[_t1CFB,_t1D05,_t1CFB];
    tensor[3,3] rot1D47#1 = <tensor[3,3]>[_t1D43,_t1D45,camUp1D07];
    globals.rot1CEB = rot1D47;
    return
## global-variable initialization
  ENTRY1D4B:  preds = []
    femData:Mesh block1D4C#3 = globals.block1CCD;
    femData:Space 0space0509_intermedateGlobal1D4E#1 = globals.0space0509_intermedateGlobal1CCE;
    femData:FemFunc 0U050B_intermedateGlobal1D50#1 = globals.0U050B_intermedateGlobal1CCF;
    int cellChoice1D52#1 = globals.cellChoice1CD0;
    image(IMAGE1D<double[3]>) cmap1D54#1 = globals.cmap1CD1;
    tensor[3] camEye1D56#8 = globals.camEye1CD2;
    tensor[3] camAt1D58#8 = globals.camAt1CD3;
    tensor[3] camUp1D5A#2 = globals.camUp1CD4;
    real camNear1D5C#1 = globals.camNear1CD5;
    real camFar1D5E#1 = globals.camFar1CD6;
    real camFOV1D60#2 = globals.camFOV1CD7;
    int iresU1D62#1 = globals.iresU1CD9;
    int iresV1D64#1 = globals.iresV1CDA;
    tensor[3] litdir1D66#2 = globals.litdir1CE7;
    int _t1D68#1 = 0;
    int _t1D6A#1 = 1;
    int _t1D6C#1 = ExtractFemItem<int,NumCell(Mesh)>(block1D4C);
    int _t1D6E#1 = ISub(_t1D6C,_t1D6A);
    int[] _t1D70#1 = Range(_t1D68,_t1D6E);
    femData:MeshCell[] _t1D72#1 = <femData:MeshCell[]>{};
  FOREACH1D75:  preds = [ASSIGN1D73,NEXT1D7B]
    foreach (_t1D74 in _t1D70) on exit goto ASSIGN1D7D
      femData:MeshCell[] _t1D79#2 = phi(_t1D72,_t1D78)
    femData:MeshCell _t1D76#1 = LoadFem<femData:MeshCell>(block1D4C,_t1D74);
    femData:MeshCell[] _t1D78#1 = Append<femData:MeshCell>(_t1D79,_t1D76);
    goto FOREACH1D75
  ASSIGN1D7D:  preds = [FOREACH1D75]
    femData:Space space1D7C#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1D4E,block1D4C);
    femData:FemFunc U1D7E#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1D50,space1D7C);
    femData:MeshCell c11D80#1 = Subscript<femData:MeshCell[]>(_t1D79,cellChoice1D52);
    int _t1D82#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11D80);
    femData:FuncCell _t1D84#2 = LoadFem<femData:FuncCell>(U1D7E,_t1D82);
    femData:FemFunc _t1D86#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1D84);
    femData:Space _t1D88#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1D86);
    int _t1D8A#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1D84);
    kernel _t1D8C#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1D8E#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1D54);
    tensor[3] op1_e3_l_41D91#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_61D92#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D91,op1_e3_l_41D91);
    real op1_e3_l_71D93#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D92);
    real op1_e3_l_91D94#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D93);
    tensor[3] camN1D90#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D91,op1_e3_l_91D94);
    globals.camN1CEC = camN1D90;
    tensor[3] op1_e3_l_101D9C#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_121D9D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_101D9C,op1_e3_l_101D9C);
    real op1_e3_l_131D9E#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_121D9D);
    tensor[3,3] op1_e3_l_151D9F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1D5A);
    real op1_e3_l_161DA0#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_131D9E);
    tensor[3] op1_e3_l_171DA1#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_101D9C,op1_e3_l_151D9F);
    real op1_e3_l_341DA2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171DA1,op1_e3_l_171DA1);
    real op1_e3_l_351DA3#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_161DA0,op1_e3_l_161DA0,op1_e3_l_341DA2);
    real op1_e3_l_361DA4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351DA3);
    tensor[3] op1_e3_l_371DA5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_161DA0,op1_e3_l_171DA1);
    real op1_e3_l_381DA6#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361DA4);
    tensor[3] camU1D9B#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371DA5,op1_e3_l_381DA6);
    globals.camU1CED = camU1D9B;
    tensor[3] op1_e3_l_141DB5#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_161DB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141DB5,op1_e3_l_141DB5);
    real op1_e3_l_171DB7#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_161DB6);
    tensor[3,3] op1_e3_l_271DB8#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1D5A);
    tensor[3] op1_e3_l_301DB9#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141DB5,op1_e3_l_271DB8);
    real op1_e3_l_321DBA#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_171DB7);
    real op1_e3_l_341DBB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_301DB9,op1_e3_l_301DB9);
    real op1_e3_l_351DBC#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_321DBA,op1_e3_l_321DBA,op1_e3_l_341DBB);
    real op1_e3_l_361DBD#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351DBC);
    tensor[3,3] op1_e3_l_451DBE#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_301DB9);
    tensor[3] op1_e3_l_471DBF#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141DB5,op1_e3_l_451DBE);
    real op1_e3_l_491DC0#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361DBD);
    tensor[3] op1_e3_l_501DC1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_321DBA,op1_e3_l_471DBF);
    tensor[3] camV1DB4#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_321DBA,op1_e3_l_491DC0,op1_e3_l_501DC1);
    globals.camV1CEE = camV1DB4;
    tensor[3] op1_e3_l_21DD2#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_41DD3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21DD2,op1_e3_l_21DD2);
    real camDist1DD1#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41DD3);
    globals.camDist1CEF = camDist1DD1;
    real _t1DD8#2 = 0.314159265358979323846264338327950288e1;
    real _t1DDA#2 = 0.36e3;
    real op1_e3_l_51DDD#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1D60,_t1DD8);
    real op1_e3_l_61DDE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1DDA,op1_e3_l_51DDD);
    tensor[3] op1_e3_l_71DDF#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_91DE0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_71DDF,op1_e3_l_71DDF);
    real op1_e3_l_101DE1#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_61DDE);
    real op1_e3_l_111DE2#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_91DE0);
    real camVmax1DDC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101DE1,op1_e3_l_111DE2);
    globals.camVmax1CF0 = camVmax1DDC;
    real _t1DEB#1 = IntToReal(iresU1D62);
    real _t1DED#1 = IntToReal(iresV1D64);
    real op1_e3_l_71DF0#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1D60,_t1DD8);
    real op1_e3_l_81DF1#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1DDA,op1_e3_l_71DF0);
    tensor[3] op1_e3_l_91DF2#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_111DF3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_91DF2,op1_e3_l_91DF2);
    real op1_e3_l_121DF4#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_81DF1);
    real op1_e3_l_131DF5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_111DF3);
    real op1_e3_l_141DF6#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1DEB,op1_e3_l_121DF4,op1_e3_l_131DF5);
    real camUmax1DEF#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1DED,op1_e3_l_141DF6);
    globals.camUmax1CF1 = camUmax1DEF;
    tensor[3] op1_e3_l_31E01#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_51E02#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_31E01,op1_e3_l_31E01);
    real op1_e3_l_61E03#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_51E02);
    real camNearVsp1E00#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1D5C,op1_e3_l_61E03);
    globals.camNearVsp1CF2 = camNearVsp1E00;
    tensor[3] op1_e3_l_31E0A#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_51E0B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_31E0A,op1_e3_l_31E0A);
    real op1_e3_l_61E0C#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_51E0B);
    real camFarVsp1E09#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1D5E,op1_e3_l_61E0C);
    globals.camFarVsp1CF3 = camFarVsp1E09;
    tensor[3,3] _t1E12#1 = <tensor[3,3]>[camU1D9B,camV1DB4,camN1D90];
    real op1_e3_l_31E15#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1D66);
    real op1_e3_l_41E16#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31E15);
    real op1_e3_l_51E17#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41E16);
    tensor[3] op1_e3_l_61E18#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1E12,litdir1D66);
    tensor[3] litwsp1E14#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51E17,op1_e3_l_61E18);
    globals.litwsp1CF4 = litwsp1E14;
    globals._t1CF5 = _t1D8A;
    globals._tX1CF6 = _t1D88;
    globals._tXX1CF7 = _t1D86;
    globals.img1CF8 = img1D8E;
    globals._tXXX1CF9 = _t1D8C;
    return
## strand
  strand ray (int ui1E25#1, int vi1E26#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1E37:  preds = []
        tensor[3] camEye1E38#1 = globals.camEye1CD2;
        bool camOrtho1E3A#2 = globals.camOrtho1CD8;
        int iresU1E3C#1 = globals.iresU1CD9;
        int iresV1E3E#1 = globals.iresV1CDA;
        real rayStep1E40#1 = globals.rayStep1CDB;
        real refStep1E42#1 = globals.refStep1CDC;
        tensor[4] phong1E44#4 = globals.phong1CE4;
        tensor[3] camN1E46#3 = globals.camN1CEC;
        tensor[3] camU1E48#2 = globals.camU1CED;
        tensor[3] camV1E4A#2 = globals.camV1CEE;
        real camDist1E4C#1 = globals.camDist1CEF;
        real camVmax1E4E#6 = globals.camVmax1CF0;
        real camUmax1E50#6 = globals.camUmax1CF1;
        real camNearVsp1E52#1 = globals.camNearVsp1CF2;
        real _t1E54#12 = -0.5e0;
        real _t1E56#3 = IntToReal(ui1E25);
        real _t1E58#3 = IntToReal(iresU1E3C);
        real _t1E5A#6 = 0.5e0;
        real op1_e3_l_61E5D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E58,_t1E5A);
        real op1_e3_l_71E5E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E56);
        real op1_e3_l_81E5F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_61E5D);
        real op1_e3_l_91E60#2 = λ(T0[])<Neg(T0)> (camUmax1E50);
        real op1_e3_l_101E61#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E5E,op1_e3_l_81E5F);
        real op1_e3_l_111E62#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1E50,op1_e3_l_91E60);
        real op1_e3_l_131E63#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E61,op1_e3_l_111E62);
        real rayU1E5C#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E60,op1_e3_l_131E63);
        real _t1E6C#3 = IntToReal(vi1E26);
        real _t1E6E#3 = IntToReal(iresV1E3E);
        real op1_e3_l_61E71#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6E,_t1E5A);
        real op1_e3_l_71E72#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E6C);
        real op1_e3_l_81E73#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_61E71);
        real op1_e3_l_91E74#2 = λ(T0[])<Neg(T0)> (camVmax1E4E);
        real op1_e3_l_101E75#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E72,op1_e3_l_81E73);
        real op1_e3_l_111E76#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1E4E,op1_e3_l_91E74);
        real op1_e3_l_131E77#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E75,op1_e3_l_111E76);
        real rayV1E70#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E74,op1_e3_l_131E77);
        real op1_e3_l_141E81#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E58,_t1E5A);
        real op1_e3_l_151E82#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E56);
        real op1_e3_l_161E83#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_141E81);
        real op1_e3_l_171E84#2 = λ(T0[])<Neg(T0)> (camUmax1E50);
        real op1_e3_l_181E85#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_151E82,op1_e3_l_161E83);
        real op1_e3_l_191E86#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1E50,op1_e3_l_171E84);
        real op1_e3_l_211E87#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_181E85,op1_e3_l_191E86);
        real op1_e3_l_221E88#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_171E84,op1_e3_l_211E87);
        real op1_e3_l_231E89#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E5A,_t1E6E);
        real op1_e3_l_241E8A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E6C);
        real op1_e3_l_251E8B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_231E89);
        real op1_e3_l_261E8C#2 = λ(T0[])<Neg(T0)> (camVmax1E4E);
        real op1_e3_l_271E8D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_241E8A,op1_e3_l_251E8B);
        real op1_e3_l_281E8E#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1E4E,op1_e3_l_261E8C);
        real op1_e3_l_301E8F#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271E8D,op1_e3_l_281E8E);
        real op1_e3_l_311E90#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_261E8C,op1_e3_l_301E8F);
        tensor[3] op1_e3_l_321E91#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1E48,op1_e3_l_221E88);
        tensor[3] op1_e3_l_331E92#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1E4A,op1_e3_l_311E90);
        tensor[3] UV1E80#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321E91,op1_e3_l_331E92);
        if camOrtho1E3A then goto JOIN1EA9 else goto ASSIGN1F15
      JOIN1EA9:  preds = [COND1EA6,ASSIGN1F16]
        tensor[3] _t1EA7#1 = phi(UV1E80,_t1EA8)
        tensor[3] rayOrig1EAA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1E38,_t1EA7);
        if camOrtho1E3A then goto ASSIGN1EAE else goto ASSIGN1F00
      ASSIGN1EAE:  preds = [COND1EAC]
        real _t1EAD#3 = 0.e0;
        tensor[3] _t1EAF#1 = <tensor[3]>[_t1EAD,_t1EAD,_t1EAD];
        goto JOIN1EB3
      JOIN1EB3:  preds = [ASSIGN1EB0,ASSIGN1F13]
        tensor[3] _t1EB1#3 = phi(_t1EAF,_t1EB2)
        tensor[3] rayVec1EB4#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1E46,_t1EB1);
        tensor[3] op1_e3_l_41EB7#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1E46,_t1EB1);
        real op1_e3_l_61EB8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41EB7,op1_e3_l_41EB7);
        real op1_e3_l_71EB9#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61EB8);
        real op1_e3_l_81EBA#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1E40,op1_e3_l_71EB9);
        real alphaFix1EB6#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1E42,op1_e3_l_81EBA);
        tensor[3] op1_e3_l_41EC1#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1E46,_t1EB1);
        real op1_e3_l_61EC2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41EC1,op1_e3_l_41EC1);
        real op1_e3_l_71EC3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61EC2);
        real op1_e3_l_91EC4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71EC3);
        tensor[3] op1_e3_l_101EC5#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41EC1,op1_e3_l_91EC4);
        tensor[3] eyeDir1EC0#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101EC5);
        real phKa1ECC#1 = TensorIndex<tensor[4],[0]>(phong1E44);
        real phKd1ECE#1 = TensorIndex<tensor[4],[1]>(phong1E44);
        real phKs1ED0#1 = TensorIndex<tensor[4],[2]>(phong1E44);
        real phSp1ED2#1 = TensorIndex<tensor[4],[3]>(phong1E44);
        real _t1ED4#8 = 0.e0;
        tensor[4] rgba1ED6#1 = <tensor[4]>[_t1ED4,_t1ED4,_t1ED4,_t1ED4];
        tensor[3] rgb1ED8#1 = <tensor[3]>[_t1ED4,_t1ED4,_t1ED4];
        real transp1EDA#1 = 0.1e1;
        self.rayU = rayU1E5C;
        self.rayV = rayV1E70;
        self.rayN = camNearVsp1E52;
        self.UV = UV1E80;
        self.rayOrig = rayOrig1EAA;
        self.rayVec = rayVec1EB4;
        self.alphaFix = alphaFix1EB6;
        self.eyeDir = eyeDir1EC0;
        self.phKa = phKa1ECC;
        self.phKd = phKd1ECE;
        self.phKs = phKs1ED0;
        self.phSp = phSp1ED2;
        self.rgba = rgba1ED6;
        self.raw = _t1ED4;
        self.rgb = rgb1ED8;
        self.transp = transp1EDA;
        return
      ASSIGN1F00:  preds = [COND1EAC]
        real op1_e3_l_151EED#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E58,_t1E5A);
        real op1_e3_l_161EEE#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E56);
        real op1_e3_l_171EEF#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_151EED);
        real op1_e3_l_181EF0#2 = λ(T0[])<Neg(T0)> (camUmax1E50);
        real op1_e3_l_191EF1#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_161EEE,op1_e3_l_171EEF);
        real op1_e3_l_201EF2#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1E50,op1_e3_l_181EF0);
        real op1_e3_l_221EF3#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_191EF1,op1_e3_l_201EF2);
        real op1_e3_l_231EF4#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_181EF0,op1_e3_l_221EF3);
        real op1_e3_l_241EF5#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E5A,_t1E6E);
        real op1_e3_l_251EF6#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E6C);
        real op1_e3_l_261EF7#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_241EF5);
        real op1_e3_l_271EF8#2 = λ(T0[])<Neg(T0)> (camVmax1E4E);
        real op1_e3_l_281EF9#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_251EF6,op1_e3_l_261EF7);
        real op1_e3_l_291EFA#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1E4E,op1_e3_l_271EF8);
        real op1_e3_l_311EFB#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_281EF9,op1_e3_l_291EFA);
        real op1_e3_l_321EFC#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_271EF8,op1_e3_l_311EFB);
        tensor[3] op1_e3_l_331EFD#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1E48,op1_e3_l_231EF4);
        tensor[3] op1_e3_l_341EFE#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1E4A,op1_e3_l_321EFC);
        tensor[3] op1_e3_l_351EFF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_331EFD,op1_e3_l_341EFE);
        tensor[3] _t1EB2#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1E4C,op1_e3_l_351EFF);
        goto JOIN1EB3
      ASSIGN1F15:  preds = [COND1EA6]
        real _t1F14#3 = 0.e0;
        tensor[3] _t1EA8#1 = <tensor[3]>[_t1F14,_t1F14,_t1F14];
        goto JOIN1EA9
    end state init
    method update
        ENTRY1F17:  preds = []
          image(IMAGE1D<double[3]>) cmap213C#3 = globals.cmap1CD1;
          int _t1F18#10 = globals._t1CF5;
          femData:Space _t1F1A#10 = globals._tX1CF6;
          femData:FemFunc _t1F1C#10 = globals._tXX1CF7;
          image(IMAGE1D<double[3]>) img1F1E#1 = globals.img1CF8;
          kernel _t1F20#1 = globals._tXXX1CF9;
          femData:Mesh block1F22#1 = globals.block1CCD;
          real rayStep1F24#5 = globals.rayStep1CDB;
          real transp01F26#1 = globals.transp01CDD;
          real thick1F28#2 = globals.thick1CDE;
          real fStrTh1F2A#1 = globals.fStrTh1CDF;
          real fMaskTh1F2C#1 = globals.fMaskTh1CE0;
          real fBias1F2E#1 = globals.fBias1CE1;
          real maxAlpha1F30#2 = globals.maxAlpha1CE2;
          tensor[3] mcNear1F32#2 = globals.mcNear1CE5;
          tensor[3] mcFar1F34#1 = globals.mcFar1CE6;
          tensor[2] cminmax1F36#2 = globals.cminmax1CE8;
          bool analytical1F38#1 = globals.analytical1CE9;
          tensor[3,3] rot1F3A#4 = globals.rot1CEB;
          real camNearVsp1F3C#2 = globals.camNearVsp1CF2;
          real camFarVsp1F3E#2 = globals.camFarVsp1CF3;
          tensor[3] litwsp1F40#2 = globals.litwsp1CF4;
          real rayN1F42#5 = self.rayN;
          tensor[3] rayOrig1F44#3 = self.rayOrig;
          tensor[3] rayVec1F46#3 = self.rayVec;
          real alphaFix1F48#1 = self.alphaFix;
          tensor[3] eyeDir1F4A#1 = self.eyeDir;
          real phKa1F4C#1 = self.phKa;
          real phKd1F4E#1 = self.phKd;
          real phKs1F50#2 = self.phKs;
          real phSp1F52#1 = self.phSp;
          tensor[3] rgb1F54#1 = self.rgb;
          real transp1F56#2 = self.transp;
          real rayN1F58#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1F42,rayStep1F24);
          bool _t1F5A#1 = GT<real>(rayN1F58,camFarVsp1F3E);
          if _t1F5A then goto SAVE1F5D else goto JOIN1F5F
        SAVE1F5D:  preds = [COND1F5C]
          self.rayN = rayN1F58;
          stabilize
          goto JOIN1F5F
        JOIN1F5F:  preds = [*STABILIZE1F5E,COND1F5C]
          real op1_e3_l_41F61#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1F42,rayStep1F24);
          tensor[3] op1_e3_l_51F62#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1F46,op1_e3_l_41F61);
          tensor[3] pos1F60#13 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1F44,op1_e3_l_51F62);
          femData:RefCell _t1F66#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1F22);
          real _t1F68#1 = 0.1e-8;
          bool _t1F6A#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1F66,pos1F60,_t1F68);
          if _t1F6A then goto ASSIGN1F72 else goto ASSIGN20FB
        ASSIGN1F72:  preds = [COND1F6C]
          int[84] femIndicies1F6F#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1F70#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1F6F);
          tensor[84] dofs1F6E#1 = femDofs1F70;
          tensor[3,3,84] basisResult1F71#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1F60);
          tensor[3,3] _t1F6D#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1F18,_t1F1A,_t1F1C,pos1F60,dofs1F6E,basisResult1F71,pos1F60);
          (real[3] _t1F77#1,tensor[3][3] evecs1F78#0) = EigenVecs3x3(_t1F6D);
          int _t1F7A#1 = 1;
          real _t1F7C#1 = Subscript<real[3]>(_t1F77,_t1F7A);
          int[84] femIndicies1F85#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1F86#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1F85);
          tensor[84] dofs1F84#1 = femDofs1F86;
          tensor[3,84] basisResult1F87#1 = EvaluateBasis<BasisArray(3,84)>(pos1F60);
          tensor[3] probe_l_61F7F#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1F18,_t1F1A,_t1F1C,pos1F60,dofs1F84,basisResult1F87,pos1F60);
          real op1_e3_l_81F80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61F7F,probe_l_61F7F);
          real op1_e3_l_91F81#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81F80);
          real op1_e3_l_101F82#1 = λ(T0[])<Neg(T0)> (_t1F7C);
          real op1_e3_l_111F83#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1F2E,op1_e3_l_91F81);
          real _t1F7E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101F82,op1_e3_l_111F83);
          bool _t1F92#1 = GT<real>(_t1F7E,fStrTh1F2A);
          if _t1F92 then goto ASSIGN1F96 else goto ASSIGN20FA
        ASSIGN1F96:  preds = [COND1F94]
          real _t1F95#1 = 0.1e1;
          bool _t1F97#1 = GTE<real>(_t1F95,fMaskTh1F2C);
          if _t1F97 then goto ASSIGN1F9B else goto ASSIGN20F9
        ASSIGN1F9B:  preds = [COND1F99]
          bool _t1F9A#1 = true;
          goto JOIN1F9E
        JOIN1F9E:  preds = [ASSIGN1F9B,ASSIGN20F9]
          bool _t1F9C#1 = phi(_t1F9A,_t1F9D)
          goto JOIN1FA1
        JOIN1FA1:  preds = [JOIN1F9E,ASSIGN20FA]
          bool _t1F9F#1 = phi(_t1F9C,_t1FA0)
          goto JOIN1FA4
        JOIN1FA4:  preds = [JOIN1FA1,ASSIGN20FB]
          bool _t1FA2#1 = phi(_t1F9F,_t1FA3)
          bool _t1FA5#1 = BNot(_t1FA2);
          if _t1FA5 then goto SAVE1FA8 else goto JOIN1FAA
        SAVE1FA8:  preds = [COND1FA7]
          self.rayN = rayN1F58;
          active
          goto JOIN1FAA
        JOIN1FAA:  preds = [*ACTIVE1FA9,COND1FA7]
          bool _t1FAB#1 = BNot(analytical1F38);
          if _t1FAB then goto ASSIGN1FB3 else goto ASSIGN20B2
        ASSIGN1FB3:  preds = [COND1FAD]
          int[84] femIndicies1FB0#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1FB1#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1FB0);
          tensor[84] dofs1FAF#1 = femDofs1FB1;
          tensor[3,3,84] basisResult1FB2#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1F60);
          tensor[3,3] _t1FAE#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1F18,_t1F1A,_t1F1C,pos1F60,dofs1FAF,basisResult1FB2,pos1F60);
          (real[3] evals1FB8#2,tensor[3][3] E1FB9#2) = EigenVecs3x3(_t1FAE);
          int _t1FBB#2 = 2;
          tensor[3] _t1FBD#1 = Subscript<tensor[3][3]>(E1FB9,_t1FBB);
          real _t1FBF#1 = Subscript<real[3]>(evals1FB8,_t1FBB);
          int _t1FC1#2 = 1;
          tensor[3] _t1FC3#1 = Subscript<tensor[3][3]>(E1FB9,_t1FC1);
          real _t1FC5#1 = Subscript<real[3]>(evals1FB8,_t1FC1);
          tensor[3,3] op1_e3_l_101FC8#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1FBD);
          tensor[3,3] op1_e3_l_111FC9#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1FC3);
          tensor[3,3] op1_e3_l_121FCA#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1FBF,op1_e3_l_101FC8);
          tensor[3,3] op1_e3_l_131FCB#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1FC5,op1_e3_l_111FC9);
          tensor[3,3] op1_e3_l_141FCC#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_121FCA,op1_e3_l_131FCB);
          int[84] femIndicies1FD0#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1FD1#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1FD0);
          tensor[84] dofs1FCF#1 = femDofs1FD1;
          tensor[3,84] basisResult1FD2#1 = EvaluateBasis<BasisArray(3,84)>(pos1F60);
          tensor[3] probe_l_151FCD#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1F18,_t1F1A,_t1F1C,pos1F60,dofs1FCF,basisResult1FD2,pos1F60);
          tensor[3,3] op1_e3_l_161FCE#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_141FCC);
          tensor[3] _t1FC7#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_151FCD,op1_e3_l_161FCE);
          goto JOIN1FE1
        JOIN1FE1:  preds = [ASSIGN1FDE,ASSIGN20F8]
          tensor[3] step1FDF#7 = phi(_t1FC7,_t1FE0)
          real _t1FE2#8 = 0.e0;
          real _t1FE4#12 = 0.1e1;
          real _t1FE6#2 = 0.15e1;
          real op1_e3_l_71FE9#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1FDF);
          real op1_e3_l_81FEA#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_71FE9);
          real op1_e3_l_91FEB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_81FEA);
          real op1_e3_l_101FEC#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1F28,op1_e3_l_91FEB);
          real op1_e3_l_111FED#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_101FEC);
          real op1_e3_l_121FEE#1 = λ(T0[],T1[])<(T0 * T1)> (_t1FE6,op1_e3_l_111FED);
          real op1_e3_l_131FEF#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1FE2,_t1FE4,op1_e3_l_121FEE);
          real _t1FE8#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1F30,op1_e3_l_131FEF);
          bool _t1FF8#1 = EQ<real>(_t1FE8,_t1FE2);
          if _t1FF8 then goto SAVE1FFB else goto JOIN1FFD
        SAVE1FFB:  preds = [COND1FFA]
          self.rayN = rayN1F58;
          active
          goto JOIN1FFD
        JOIN1FFD:  preds = [*ACTIVE1FFC,COND1FFA]
          real op1_e3_l_81FFF#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1FDF);
          real op1_e3_l_92000#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81FFF);
          real op1_e3_l_102001#1 = λ(T0[])<Abs(T0)> (op1_e3_l_92000);
          real op1_e3_l_112002#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1F28,op1_e3_l_102001);
          real op1_e3_l_122003#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_112002);
          real op1_e3_l_132004#1 = λ(T0[],T1[])<(T0 * T1)> (_t1FE6,op1_e3_l_122003);
          real op1_e3_l_142005#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1FE4,_t1FE2,op1_e3_l_132004);
          real op1_e3_l_152006#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1F30,op1_e3_l_142005);
          real _t1FFE#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_152006);
          real _t2010#2 = MathFn<pow>(_t1FFE,alphaFix1F48);
          bool _t2012#1 = NEQ<real>(phKs1F50,_t1FE2);
          if _t2012 then goto ASSIGN2021 else goto JOIN2030
        ASSIGN2021:  preds = [COND2014]
          tensor[3] op1_e3_l_62016#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1F4A,litwsp1F40);
          real op1_e3_l_82017#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_62016,op1_e3_l_62016);
          real op1_e3_l_92018#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_82017);
          real op1_e3_l_102019#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1FDF);
          real op1_e3_l_11201A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_102019);
          real op1_e3_l_12201B#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_11201A);
          tensor[3] op1_e3_l_13201C#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1FDF,op1_e3_l_12201B);
          tensor[3] op1_e3_l_14201D#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_13201C);
          real op1_e3_l_16201E#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_92018);
          real op1_e3_l_17201F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_14201D,op1_e3_l_62016);
          real op1_e3_l_182020#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_16201E,op1_e3_l_17201F);
          real _t2015#1 = λ(T0[])<Abs(T0)> (op1_e3_l_182020);
          real scomp202D#1 = MathFn<pow>(_t2015,phSp1F52);
          goto JOIN2030
        JOIN2030:  preds = [ASSIGN202E,COND2014]
          real scomp202F#1 = phi(scomp202D,_t1FE2)
          real cmin2031#3 = TensorIndex<tensor[2],[0]>(cminmax1F36);
          real cmax2033#2 = TensorIndex<tensor[2],[1]>(cminmax1F36);
          tensor[3] mcol2035#2 = <tensor[3]>[_t1FE4,_t1FE4,_t1FE4];
          bool _t2037#1 = NEQ<real>(cmin2031,cmax2033);
          if _t2037 then goto ASSIGN203D else goto JOIN2071
        ASSIGN203D:  preds = [COND2039]
          real op1_e3_l_5203B#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1F42,rayStep1F24);
          tensor[3] op1_e3_l_6203C#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1F46,op1_e3_l_5203B);
          tensor[3] _t203A#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (rayOrig1F44,step1FDF,op1_e3_l_6203C);
          int[84] femIndicies2048#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs2049#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies2048);
          tensor[84] dofs2047#1 = femDofs2049;
          tensor[84] basisResult204A#1 = EvaluateBasis<BasisArray(84)>(_t203A);
          real probe_l_82041#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1F18,_t1F1A,_t1F1C,_t203A,dofs2047,basisResult204A,_t203A);
          real op1_e3_l_92042#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin2031,probe_l_82041);
          real op1_e3_l_102043#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin2031,cmax2033);
          real op1_e3_l_112044#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_92042,op1_e3_l_102043);
          real op1_e3_l_122045#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1FE2,_t1FE4);
          real op1_e3_l_132046#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_112044,op1_e3_l_122045);
          real _t2040#2 = λ(T0[],T1[])<(T0 + T1)> (_t1FE2,op1_e3_l_132046);
          real Mtransform2057#2 = Transform<IMAGE1D<double[3]>>(cmap213C);
          real MxPos2058#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform2057,_t2040);
          real Ttranslate2059#1 = Translate<IMAGE1D<double[3]>>(cmap213C);
          real imgPos205A#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos2058,Ttranslate2059);
          real nd205B#2 = Floor<1>(imgPos205A);
          real f205C#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos205A,nd205B);
          int n205D#1 = RealToInt<1>(nd205B);
          int lit205E#1 = 0;
          int idx205F#1 = IAdd(n205D,lit205E);
          tensor[3,2] ldvox2060#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap213C,idx205F);
          tensor[2] kernX_2061#1 = BuildPos<1>(f205C);
          tensor[2] kevalX_d0_2062#1 = EvalKernel<2,tent,0>(kernX_2061);
          tensor[3] mcol2056#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1F1E,_t1F20,_t2040,Mtransform2057,ldvox2060,kevalX_d0_2062);
          goto JOIN2071
        JOIN2071:  preds = [ASSIGN206F,COND2039]
          tensor[3] mcol2070#1 = phi(mcol2056,mcol2035)
          real op1_e3_l_192073#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1FDF);
          real op1_e3_l_202074#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_192073);
          real op1_e3_l_212075#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_202074);
          tensor[3] op1_e3_l_222076#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1FDF,op1_e3_l_212075);
          tensor[3] op1_e3_l_232077#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_222076);
          real op1_e3_l_242078#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1F40,op1_e3_l_232077);
          real op1_e3_l_252079#1 = λ(T0[])<(T0)^2> (op1_e3_l_242078);
          real op1_e3_l_26207A#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1F4E,op1_e3_l_252079);
          real op1_e3_l_27207B#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1F42,rayStep1F24);
          real op1_e3_l_28207C#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1F3C,op1_e3_l_27207B);
          real op1_e3_l_29207D#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1F3C,camFarVsp1F3E);
          real op1_e3_l_30207E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_28207C,op1_e3_l_29207D);
          tensor[3] op1_e3_l_31207F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1F32,mcFar1F34);
          tensor[3] op1_e3_l_322080#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_30207E,op1_e3_l_31207F);
          real op1_e3_l_332081#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1F4C,op1_e3_l_26207A);
          tensor[3] op1_e3_l_342082#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1F32,op1_e3_l_322080);
          tensor[3] op1_e3_l_352083#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2070,op1_e3_l_332081,op1_e3_l_342082);
          tensor[3] op1_e3_l_362084#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1F50,scomp202F,mcol2035);
          real op1_e3_l_372085#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,_t2010);
          tensor[3] op1_e3_l_382086#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_352083,op1_e3_l_362084);
          tensor[3] op1_e3_l_392087#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1F56,op1_e3_l_372085,op1_e3_l_382086);
          tensor[3] rgb2072#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1F54,op1_e3_l_392087);
          real op1_e3_l_4209F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,_t2010);
          real op1_e3_l_520A0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_4209F);
          real transp209E#2 = λ(T0[],T1[])<(T0 * T1)> (transp1F56,op1_e3_l_520A0);
          bool _t20A4#1 = LT<real>(transp209E,transp01F26);
          if _t20A4 then goto SAVE20A7 else goto JOIN20AC
        SAVE20A7:  preds = [COND20A6]
          self.rayN = rayN1F58;
          self.rgb = rgb2072;
          self.transp = _t1FE2;
          stabilize
          goto JOIN20AC
        JOIN20AC:  preds = [*STABILIZE20AA,COND20A6]
          real transp20AB#1 = phi(transp209E)
          self.rayN = rayN1F58;
          self.rgb = rgb2072;
          self.transp = transp20AB;
          active
        ASSIGN20B2:  preds = [COND1FAD]
          int _t20B1#1 = -1;
          real _t20B3#1 = IntToReal(_t20B1);
          int _t20B5#1 = -2;
          real _t20B7#1 = IntToReal(_t20B5);
          int _t20B9#1 = -3;
          real _t20BB#1 = IntToReal(_t20B9);
          tensor[3] _t20BD#1 = <tensor[3]>[_t20B3,_t20B7,_t20BB];
          real _t20BF#1 = -0.1e1;
          real _t20C1#6 = 0.e0;
          tensor[3] _t20C3#1 = <tensor[3]>[_t20BF,_t20C1,_t20C1];
          real _t20C5#1 = -0.2e1;
          tensor[3] _t20C7#1 = <tensor[3]>[_t20C1,_t20C5,_t20C1];
          real _t20C9#1 = -0.3e1;
          tensor[3] _t20CB#1 = <tensor[3]>[_t20C1,_t20C1,_t20C9];
          tensor[3,3] _t20CD#1 = <tensor[3,3]>[_t20C3,_t20C7,_t20CB];
          tensor[3,3] op1_e3_l_320D0#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (rot1F3A,_t20CD);
          tensor[3,3] H20CF#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T1_{i0,i2} * T0_{i2,i1}))>(i2=0..2)>_{3 3} (rot1F3A,op1_e3_l_320D0);
          (real[3] evals20D3#2,tensor[3][3] E20D4#2) = EigenVecs3x3(H20CF);
          int _t20D6#2 = 2;
          tensor[3] _t20D8#1 = Subscript<tensor[3][3]>(E20D4,_t20D6);
          real _t20DA#1 = Subscript<real[3]>(evals20D3,_t20D6);
          int _t20DC#2 = 1;
          tensor[3] _t20DE#1 = Subscript<tensor[3][3]>(E20D4,_t20DC);
          real _t20E0#1 = Subscript<real[3]>(evals20D3,_t20DC);
          tensor[3,3] op1_e3_l_1320E2#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20D8);
          tensor[3,3] op1_e3_l_1420E3#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20DE);
          tensor[3,3] op1_e3_l_1520E4#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20DA,op1_e3_l_1320E2);
          tensor[3,3] op1_e3_l_1620E5#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20E0,op1_e3_l_1420E3);
          tensor[3,3] op1_e3_l_1720E6#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1520E4,op1_e3_l_1620E5);
          real op1_e3_l_1820E7#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1F42,rayStep1F24);
          tensor[3] op1_e3_l_1920E8#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1F46,op1_e3_l_1820E7);
          tensor[3] op1_e3_l_2020E9#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1F44,op1_e3_l_1920E8);
          tensor[3] op1_e3_l_2120EA#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (rot1F3A,op1_e3_l_2020E9);
          tensor[3,3] op1_e3_l_2220EB#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_1720E6);
          tensor[3] op1_e3_l_2320EC#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * T2_{i1}))>(i1=0..2)>_{3} (rot1F3A,_t20BD,op1_e3_l_2120EA);
          tensor[3] _t1FE0#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2220EB,op1_e3_l_2320EC);
          goto JOIN1FE1
        ASSIGN20F9:  preds = [COND1F99]
          bool _t1F9D#1 = false;
          goto JOIN1F9E
        ASSIGN20FA:  preds = [COND1F94]
          bool _t1FA0#1 = false;
          goto JOIN1FA1
        ASSIGN20FB:  preds = [COND1F6C]
          bool _t1FA3#1 = false;
          goto JOIN1FA4
    end update
    method stabilize
        ENTRY20FC:  preds = []
          tensor[4] rgba20FD#1 = self.rgba;
          tensor[3] rgb20FF#3 = self.rgb;
          real transp2101#5 = self.transp;
          real _t2103#5 = 0.1e1;
          bool _t2105#1 = LT<real>(transp2101,_t2103);
          if _t2105 then goto ASSIGN2109 else goto JOIN211F
        ASSIGN2109:  preds = [COND2107]
          real aa2108#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2103,transp2101);
          real _t210A#1 = TensorIndex<tensor[3],[0]>(rgb20FF);
          real op1_e3_l_3210D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2103,transp2101);
          real _t210C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t210A,op1_e3_l_3210D);
          real _t2110#1 = TensorIndex<tensor[3],[1]>(rgb20FF);
          real op1_e3_l_32113#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2103,transp2101);
          real _t2112#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2110,op1_e3_l_32113);
          real _t2116#1 = TensorIndex<tensor[3],[2]>(rgb20FF);
          real op1_e3_l_32119#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2103,transp2101);
          real _t2118#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2116,op1_e3_l_32119);
          tensor[4] rgba211C#1 = <tensor[4]>[_t210C,_t2112,_t2118,aa2108];
          goto JOIN211F
        JOIN211F:  preds = [ASSIGN211D,COND2107]
          tensor[4] rgba211E#1 = phi(rgba211C,rgba20FD)
          self.rgba = rgba211E;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY2122:  preds = []
      int iresU2123#1 = globals.iresU1CD9;
      int iresV2125#1 = globals.iresV1CDA;
      int _t2127#2 = 0;
      int _t2129#2 = 1;
      int _t212B#1 = ISub(iresV2125,_t2129);
      int[] _t212D#1 = Range(_t2127,_t212B);
    FOREACH2130:  preds = [ASSIGN212E,NEXT2139]
      foreach (vi212F in _t212D) on exit goto RETURN213A
      int _t2131#1 = ISub(iresU2123,_t2129);
      int[] _t2133#1 = Range(_t2127,_t2131);
    FOREACH2136:  preds = [ASSIGN2134,NEXT2138]
      foreach (ui2135 in _t2133) on exit goto NEXT2139
      new ray(ui2135,vi212F);
      goto FOREACH2136
    NEXT2139:  preds = [FOREACH2136]
      goto FOREACH2130
    RETURN213A:  preds = [FOREACH2130]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1CCD (block) = <no-default>
  input 0space0509_intermedateGlobal1CCE (space) = <no-default>
  input 0U050B_intermedateGlobal1CCF (U) = <no-default>
  input cellChoice1CD0 (cellChoice) = <no-default>
  input cmap1CD1 (cmap) = image("cmap.nrrd")
  input camEye1CD2 (camEye) = <default>
  input camAt1CD3 (camAt) = <default>
  input camUp1CD4 (camUp) = <default>
  input camNear1CD5 (camNear) = <default>
  input camFar1CD6 (camFar) = <default>
  input camFOV1CD7 (camFOV) = <default>
  input camOrtho1CD8 (camOrtho) = <default>
  input iresU1CD9 (iresU) = <default>
  input iresV1CDA (iresV) = <default>
  input rayStep1CDB (rayStep) = <default>
  input refStep1CDC (refStep) = <default>
  input transp01CDD (transp0) = <default>
  input thick1CDE (thick) = <default>
  input fStrTh1CDF (fStrTh) = <default>
  input fMaskTh1CE0 (fMaskTh) = <default>
  input fBias1CE1 (fBias) = <default>
  input maxAlpha1CE2 (maxAlpha) = <default>
  input light1CE3 (light) = <default>
  input phong1CE4 (phong) = <default>
  input mcNear1CE5 (mcNear) = <default>
  input mcFar1CE6 (mcFar) = <default>
  input litdir1CE7 (litdir) = <default>
  input cminmax1CE8 (cminmax) = <default>
  input analytical1CE9 (analytical) = <default>
  input umm1CEA (umm) = image("data.nrrd")
  input rot1CEB (rot) = <default>
  global tensor[3] camN1CEC
  global tensor[3] camU1CED
  global tensor[3] camV1CEE
  global real camDist1CEF
  global real camVmax1CF0
  global real camUmax1CF1
  global real camNearVsp1CF2
  global real camFarVsp1CF3
  global tensor[3] litwsp1CF4
  global int _t1CF5
  global femData:Space _tX1CF6
  global femData:FemFunc _tXX1CF7
  global image(IMAGE1D<double[3]>) img1CF8
  global kernel _tXXX1CF9
## functions
## input initialization
  ENTRY1CFA:  preds = []
    real _t1CFB#17 = 0.e0;
    real _t1CFD#1 = -0.2e1;
    tensor[3] camEye1CFF#1 = <tensor[3]>[_t1CFB,_t1CFD,_t1CFB];
    globals.camEye1CD2 = camEye1CFF;
    tensor[3] camAt1D02#1 = <tensor[3]>[_t1CFB,_t1CFB,_t1CFB];
    globals.camAt1CD3 = camAt1D02;
    real _t1D05#7 = 0.1e1;
    tensor[3] camUp1D07#2 = <tensor[3]>[_t1CFB,_t1CFB,_t1D05];
    globals.camUp1CD4 = camUp1D07;
    real camNear1D0A#1 = -0.4e1;
    globals.camNear1CD5 = camNear1D0A;
    real camFar1D0D#1 = 0.4e1;
    globals.camFar1CD6 = camFar1D0D;
    real camFOV1D10#1 = 0.1e2;
    globals.camFOV1CD7 = camFOV1D10;
    bool camOrtho1D13#2 = false;
    globals.camOrtho1CD8 = camOrtho1D13;
    int iresU1D16#2 = 100;
    globals.iresU1CD9 = iresU1D16;
    globals.iresV1CDA = iresU1D16;
    real rayStep1D1A#2 = 0.1e-3;
    globals.rayStep1CDB = rayStep1D1A;
    globals.refStep1CDC = rayStep1D1A;
    real transp01D1E#1 = 0.5e-2;
    globals.transp01CDD = transp01D1E;
    real thick1D21#1 = 0.1e-1;
    globals.thick1CDE = thick1D21;
    globals.fStrTh1CDF = _t1CFB;
    globals.fMaskTh1CE0 = _t1CFB;
    real fBias1D26#2 = 0.1e0;
    globals.fBias1CE1 = fBias1D26;
    globals.maxAlpha1CE2 = _t1D05;
    globals.light1CE3 = camOrtho1D13;
    real _t1D2B#1 = 0.7e0;
    real _t1D2D#1 = 0.2e0;
    real _t1D2F#1 = 0.1e3;
    tensor[4] phong1D31#1 = <tensor[4]>[fBias1D26,_t1D2B,_t1D2D,_t1D2F];
    globals.phong1CE4 = phong1D31;
    tensor[3] mcNear1D34#2 = <tensor[3]>[_t1D05,_t1D05,_t1D05];
    globals.mcNear1CE5 = mcNear1D34;
    globals.mcFar1CE6 = mcNear1D34;
    real _t1D38#1 = -0.1e1;
    tensor[3] litdir1D3A#1 = <tensor[3]>[_t1CFB,_t1D38,_t1CFB];
    globals.litdir1CE7 = litdir1D3A;
    tensor[2] cminmax1D3D#1 = <tensor[2]>[_t1CFB,_t1CFB];
    globals.cminmax1CE8 = cminmax1D3D;
    bool analytical1D40#1 = true;
    globals.analytical1CE9 = analytical1D40;
    tensor[3] _t1D43#1 = <tensor[3]>[_t1D05,_t1CFB,_t1CFB];
    tensor[3] _t1D45#1 = <tensor[3]>[_t1CFB,_t1D05,_t1CFB];
    tensor[3,3] rot1D47#1 = <tensor[3,3]>[_t1D43,_t1D45,camUp1D07];
    globals.rot1CEB = rot1D47;
    return
## global-variable initialization
  ENTRY1D4B:  preds = []
    femData:Mesh block1D4C#3 = globals.block1CCD;
    femData:Space 0space0509_intermedateGlobal1D4E#1 = globals.0space0509_intermedateGlobal1CCE;
    femData:FemFunc 0U050B_intermedateGlobal1D50#1 = globals.0U050B_intermedateGlobal1CCF;
    int cellChoice1D52#1 = globals.cellChoice1CD0;
    image(IMAGE1D<double[3]>) cmap1D54#1 = globals.cmap1CD1;
    tensor[3] camEye1D56#1 = globals.camEye1CD2;
    tensor[3] camAt1D58#1 = globals.camAt1CD3;
    tensor[3] camUp1D5A#1 = globals.camUp1CD4;
    real camNear1D5C#1 = globals.camNear1CD5;
    real camFar1D5E#1 = globals.camFar1CD6;
    real camFOV1D60#1 = globals.camFOV1CD7;
    int iresU1D62#1 = globals.iresU1CD9;
    int iresV1D64#1 = globals.iresV1CDA;
    tensor[3] litdir1D66#2 = globals.litdir1CE7;
    int _t1D68#1 = 0;
    int _t1D6A#1 = 1;
    int _t1D6C#1 = ExtractFemItem<int,NumCell(Mesh)>(block1D4C);
    int _t1D6E#1 = ISub(_t1D6C,_t1D6A);
    int[] _t1D70#1 = Range(_t1D68,_t1D6E);
    femData:MeshCell[] _t1D72#1 = <femData:MeshCell[]>{};
  FOREACH1D75:  preds = [ASSIGN1D73,NEXT1D7B]
    foreach (_t1D74 in _t1D70) on exit goto ASSIGN1D7D
      femData:MeshCell[] _t1D79#2 = phi(_t1D72,_t1D78)
    femData:MeshCell _t1D76#1 = LoadFem<femData:MeshCell>(block1D4C,_t1D74);
    femData:MeshCell[] _t1D78#1 = Append<femData:MeshCell>(_t1D79,_t1D76);
    goto FOREACH1D75
  ASSIGN1D7D:  preds = [FOREACH1D75]
    femData:Space space1D7C#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1D4E,block1D4C);
    femData:FemFunc U1D7E#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1D50,space1D7C);
    femData:MeshCell c11D80#1 = Subscript<femData:MeshCell[]>(_t1D79,cellChoice1D52);
    int _t1D82#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11D80);
    femData:FuncCell _t1D84#2 = LoadFem<femData:FuncCell>(U1D7E,_t1D82);
    femData:FemFunc _t1D86#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1D84);
    femData:Space _t1D88#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1D86);
    int _t1D8A#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1D84);
    kernel _t1D8C#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1D8E#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1D54);
    tensor[3] op1_e3_l_41D91#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_61D92#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D91,op1_e3_l_41D91);
    real op1_e3_l_71D93#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D92);
    real op1_e3_l_91D94#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D93);
    tensor[3] camN1D90#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D91,op1_e3_l_91D94);
    globals.camN1CEC = camN1D90;
    tensor[3,3] op1_e3_l_151D9F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1D5A);
    tensor[3] op1_e3_l_171DA1#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D91,op1_e3_l_151D9F);
    real op1_e3_l_341DA2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171DA1,op1_e3_l_171DA1);
    real op1_e3_l_351DA3#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91D94,op1_e3_l_91D94,op1_e3_l_341DA2);
    real op1_e3_l_361DA4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351DA3);
    tensor[3] op1_e3_l_371DA5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D94,op1_e3_l_171DA1);
    real op1_e3_l_381DA6#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361DA4);
    tensor[3] camU1D9B#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371DA5,op1_e3_l_381DA6);
    globals.camU1CED = camU1D9B;
    tensor[3,3] op1_e3_l_451DBE#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171DA1);
    tensor[3] op1_e3_l_471DBF#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D91,op1_e3_l_451DBE);
    tensor[3] op1_e3_l_501DC1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D94,op1_e3_l_471DBF);
    tensor[3] camV1DB4#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91D94,op1_e3_l_381DA6,op1_e3_l_501DC1);
    globals.camV1CEE = camV1DB4;
    globals.camDist1CEF = op1_e3_l_71D93;
    real _t1DD8#1 = 0.314159265358979323846264338327950288e1;
    real _t1DDA#1 = 0.36e3;
    real op1_e3_l_51DDD#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1D60,_t1DD8);
    real op1_e3_l_61DDE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1DDA,op1_e3_l_51DDD);
    real op1_e3_l_101DE1#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61DDE);
    real camVmax1DDC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101DE1,op1_e3_l_71D93);
    globals.camVmax1CF0 = camVmax1DDC;
    real _t1DEB#1 = IntToReal(iresU1D62);
    real _t1DED#1 = IntToReal(iresV1D64);
    real op1_e3_l_141DF6#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1DEB,op1_e3_l_101DE1,op1_e3_l_71D93);
    real camUmax1DEF#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1DED,op1_e3_l_141DF6);
    globals.camUmax1CF1 = camUmax1DEF;
    real camNearVsp1E00#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1D5C,op1_e3_l_71D93);
    globals.camNearVsp1CF2 = camNearVsp1E00;
    real camFarVsp1E09#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1D5E,op1_e3_l_71D93);
    globals.camFarVsp1CF3 = camFarVsp1E09;
    tensor[3,3] _t1E12#1 = <tensor[3,3]>[camU1D9B,camV1DB4,camN1D90];
    real op1_e3_l_31E15#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1D66);
    real op1_e3_l_41E16#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31E15);
    real op1_e3_l_51E17#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41E16);
    tensor[3] op1_e3_l_61E18#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1E12,litdir1D66);
    tensor[3] litwsp1E14#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51E17,op1_e3_l_61E18);
    globals.litwsp1CF4 = litwsp1E14;
    globals._t1CF5 = _t1D8A;
    globals._tX1CF6 = _t1D88;
    globals._tXX1CF7 = _t1D86;
    globals.img1CF8 = img1D8E;
    globals._tXXX1CF9 = _t1D8C;
    return
## strand
  strand ray (int ui1E25#1, int vi1E26#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1E37:  preds = []
        tensor[3] camEye1E38#1 = globals.camEye1CD2;
        bool camOrtho1E3A#2 = globals.camOrtho1CD8;
        int iresU1E3C#1 = globals.iresU1CD9;
        int iresV1E3E#1 = globals.iresV1CDA;
        real rayStep1E40#1 = globals.rayStep1CDB;
        real refStep1E42#1 = globals.refStep1CDC;
        tensor[4] phong1E44#4 = globals.phong1CE4;
        tensor[3] camN1E46#1 = globals.camN1CEC;
        tensor[3] camU1E48#1 = globals.camU1CED;
        tensor[3] camV1E4A#1 = globals.camV1CEE;
        real camDist1E4C#1 = globals.camDist1CEF;
        real camVmax1E4E#2 = globals.camVmax1CF0;
        real camUmax1E50#2 = globals.camUmax1CF1;
        real camNearVsp1E52#1 = globals.camNearVsp1CF2;
        real _t1E54#5 = -0.5e0;
        real _t1E56#1 = IntToReal(ui1E25);
        real _t1E58#1 = IntToReal(iresU1E3C);
        real _t1E5A#3 = 0.5e0;
        real op1_e3_l_61E5D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E58,_t1E5A);
        real op1_e3_l_71E5E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E56);
        real op1_e3_l_81E5F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_61E5D);
        real op1_e3_l_91E60#2 = λ(T0[])<Neg(T0)> (camUmax1E50);
        real op1_e3_l_101E61#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E5E,op1_e3_l_81E5F);
        real op1_e3_l_111E62#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1E50,op1_e3_l_91E60);
        real op1_e3_l_131E63#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E61,op1_e3_l_111E62);
        real rayU1E5C#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E60,op1_e3_l_131E63);
        real _t1E6C#1 = IntToReal(vi1E26);
        real _t1E6E#2 = IntToReal(iresV1E3E);
        real op1_e3_l_61E71#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6E,_t1E5A);
        real op1_e3_l_71E72#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E6C);
        real op1_e3_l_81E73#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_61E71);
        real op1_e3_l_91E74#3 = λ(T0[])<Neg(T0)> (camVmax1E4E);
        real op1_e3_l_101E75#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E72,op1_e3_l_81E73);
        real op1_e3_l_111E76#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1E4E,op1_e3_l_91E74);
        real op1_e3_l_131E77#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E75,op1_e3_l_111E76);
        real rayV1E70#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E74,op1_e3_l_131E77);
        real op1_e3_l_231E89#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E5A,_t1E6E);
        real op1_e3_l_251E8B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_231E89);
        real op1_e3_l_271E8D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E72,op1_e3_l_251E8B);
        real op1_e3_l_301E8F#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271E8D,op1_e3_l_111E76);
        real op1_e3_l_311E90#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E74,op1_e3_l_301E8F);
        tensor[3] op1_e3_l_321E91#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1E48,rayU1E5C);
        tensor[3] op1_e3_l_331E92#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1E4A,op1_e3_l_311E90);
        tensor[3] UV1E80#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321E91,op1_e3_l_331E92);
        if camOrtho1E3A then goto JOIN1EA9 else goto ASSIGN1F15
      JOIN1EA9:  preds = [COND1EA6,ASSIGN1F16]
        tensor[3] _t1EA7#1 = phi(UV1E80,_t1EA8)
        tensor[3] rayOrig1EAA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1E38,_t1EA7);
        if camOrtho1E3A then goto ASSIGN1EAE else goto ASSIGN2151
      ASSIGN1EAE:  preds = [COND1EAC]
        real _t1EAD#3 = 0.e0;
        tensor[3] _t1EAF#1 = <tensor[3]>[_t1EAD,_t1EAD,_t1EAD];
        goto JOIN1EB3
      JOIN1EB3:  preds = [ASSIGN1EB0,ASSIGN2151]
        tensor[3] _t1EB1#1 = phi(_t1EAF,_t1EB2)
        tensor[3] rayVec1EB4#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1E46,_t1EB1);
        real op1_e3_l_61EB8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1EB4,rayVec1EB4);
        real op1_e3_l_71EB9#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61EB8);
        real op1_e3_l_81EBA#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1E40,op1_e3_l_71EB9);
        real alphaFix1EB6#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1E42,op1_e3_l_81EBA);
        real op1_e3_l_91EC4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71EB9);
        tensor[3] op1_e3_l_101EC5#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1EB4,op1_e3_l_91EC4);
        tensor[3] eyeDir1EC0#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101EC5);
        real phKa1ECC#1 = TensorIndex<tensor[4],[0]>(phong1E44);
        real phKd1ECE#1 = TensorIndex<tensor[4],[1]>(phong1E44);
        real phKs1ED0#1 = TensorIndex<tensor[4],[2]>(phong1E44);
        real phSp1ED2#1 = TensorIndex<tensor[4],[3]>(phong1E44);
        real _t1ED4#8 = 0.e0;
        tensor[4] rgba1ED6#1 = <tensor[4]>[_t1ED4,_t1ED4,_t1ED4,_t1ED4];
        tensor[3] rgb1ED8#1 = <tensor[3]>[_t1ED4,_t1ED4,_t1ED4];
        real transp1EDA#1 = 0.1e1;
        self.rayU = rayU1E5C;
        self.rayV = rayV1E70;
        self.rayN = camNearVsp1E52;
        self.UV = UV1E80;
        self.rayOrig = rayOrig1EAA;
        self.rayVec = rayVec1EB4;
        self.alphaFix = alphaFix1EB6;
        self.eyeDir = eyeDir1EC0;
        self.phKa = phKa1ECC;
        self.phKd = phKd1ECE;
        self.phKs = phKs1ED0;
        self.phSp = phSp1ED2;
        self.rgba = rgba1ED6;
        self.raw = _t1ED4;
        self.rgb = rgb1ED8;
        self.transp = transp1EDA;
        return
      ASSIGN2151:  preds = [COND1EAC]
        tensor[3] _t1EB2#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1E4C,UV1E80);
        goto JOIN1EB3
      ASSIGN1F15:  preds = [COND1EA6]
        real _t1F14#3 = 0.e0;
        tensor[3] _t1EA8#1 = <tensor[3]>[_t1F14,_t1F14,_t1F14];
        goto JOIN1EA9
    end state init
    method update
        ENTRY1F17:  preds = []
          image(IMAGE1D<double[3]>) cmap213C#3 = globals.cmap1CD1;
          int _t1F18#8 = globals._t1CF5;
          femData:Space _t1F1A#8 = globals._tX1CF6;
          femData:FemFunc _t1F1C#8 = globals._tXX1CF7;
          image(IMAGE1D<double[3]>) img1F1E#1 = globals.img1CF8;
          kernel _t1F20#1 = globals._tXXX1CF9;
          femData:Mesh block1F22#1 = globals.block1CCD;
          real rayStep1F24#1 = globals.rayStep1CDB;
          real transp01F26#1 = globals.transp01CDD;
          real thick1F28#1 = globals.thick1CDE;
          real fStrTh1F2A#1 = globals.fStrTh1CDF;
          real fMaskTh1F2C#1 = globals.fMaskTh1CE0;
          real fBias1F2E#1 = globals.fBias1CE1;
          real maxAlpha1F30#2 = globals.maxAlpha1CE2;
          tensor[3] mcNear1F32#2 = globals.mcNear1CE5;
          tensor[3] mcFar1F34#1 = globals.mcFar1CE6;
          tensor[2] cminmax1F36#2 = globals.cminmax1CE8;
          bool analytical1F38#1 = globals.analytical1CE9;
          tensor[3,3] rot1F3A#4 = globals.rot1CEB;
          real camNearVsp1F3C#2 = globals.camNearVsp1CF2;
          real camFarVsp1F3E#2 = globals.camFarVsp1CF3;
          tensor[3] litwsp1F40#2 = globals.litwsp1CF4;
          real rayN1F42#1 = self.rayN;
          tensor[3] rayOrig1F44#2 = self.rayOrig;
          tensor[3] rayVec1F46#1 = self.rayVec;
          real alphaFix1F48#1 = self.alphaFix;
          tensor[3] eyeDir1F4A#1 = self.eyeDir;
          real phKa1F4C#1 = self.phKa;
          real phKd1F4E#1 = self.phKd;
          real phKs1F50#2 = self.phKs;
          real phSp1F52#1 = self.phSp;
          tensor[3] rgb1F54#1 = self.rgb;
          real transp1F56#2 = self.transp;
          real rayN1F58#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1F42,rayStep1F24);
          bool _t1F5A#1 = GT<real>(rayN1F58,camFarVsp1F3E);
          if _t1F5A then goto SAVE1F5D else goto JOIN1F5F
        SAVE1F5D:  preds = [COND1F5C]
          self.rayN = rayN1F58;
          stabilize
          goto JOIN1F5F
        JOIN1F5F:  preds = [*STABILIZE1F5E,COND1F5C]
          tensor[3] op1_e3_l_51F62#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1F46,rayN1F58);
          tensor[3] pos1F60#14 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1F44,op1_e3_l_51F62);
          femData:RefCell _t1F66#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1F22);
          real _t1F68#1 = 0.1e-8;
          bool _t1F6A#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1F66,pos1F60,_t1F68);
          if _t1F6A then goto ASSIGN1F72 else goto ASSIGN20FB
        ASSIGN1F72:  preds = [COND1F6C]
          int[84] femIndicies1F6F#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1F70#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1F6F);
          tensor[3,3,84] basisResult1F71#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1F60);
          tensor[3,3] _t1F6D#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1F70,basisResult1F71,pos1F60);
          (real[3] _t1F77#1,tensor[3][3] evecs1F78#0) = EigenVecs3x3(_t1F6D);
          int _t1F7A#1 = 1;
          real _t1F7C#1 = Subscript<real[3]>(_t1F77,_t1F7A);
          tensor[3,84] basisResult1F87#1 = EvaluateBasis<BasisArray(3,84)>(pos1F60);
          tensor[3] probe_l_61F7F#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1F70,basisResult1F87,pos1F60);
          real op1_e3_l_81F80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61F7F,probe_l_61F7F);
          real op1_e3_l_91F81#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81F80);
          real op1_e3_l_101F82#1 = λ(T0[])<Neg(T0)> (_t1F7C);
          real op1_e3_l_111F83#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1F2E,op1_e3_l_91F81);
          real _t1F7E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101F82,op1_e3_l_111F83);
          bool _t1F92#1 = GT<real>(_t1F7E,fStrTh1F2A);
          if _t1F92 then goto ASSIGN1F96 else goto ASSIGN20FA
        ASSIGN1F96:  preds = [COND1F94]
          real _t1F95#1 = 0.1e1;
          bool _t1F97#1 = GTE<real>(_t1F95,fMaskTh1F2C);
          if _t1F97 then goto ASSIGN1F9B else goto ASSIGN20F9
        ASSIGN1F9B:  preds = [COND1F99]
          bool _t1F9A#1 = true;
          goto JOIN1F9E
        JOIN1F9E:  preds = [ASSIGN1F9B,ASSIGN20F9]
          bool _t1F9C#1 = phi(_t1F9A,_t1F9D)
          goto JOIN1FA1
        JOIN1FA1:  preds = [JOIN1F9E,ASSIGN20FA]
          bool _t1F9F#1 = phi(_t1F9C,_t1FA0)
          goto JOIN1FA4
        JOIN1FA4:  preds = [JOIN1FA1,ASSIGN20FB]
          bool _t1FA2#1 = phi(_t1F9F,_t1FA3)
          bool _t1FA5#1 = BNot(_t1FA2);
          if _t1FA5 then goto SAVE1FA8 else goto JOIN1FAA
        SAVE1FA8:  preds = [COND1FA7]
          self.rayN = rayN1F58;
          active
          goto JOIN1FAA
        JOIN1FAA:  preds = [*ACTIVE1FA9,COND1FA7]
          bool _t1FAB#1 = BNot(analytical1F38);
          if _t1FAB then goto ASSIGN1FB3 else goto ASSIGN20B2
        ASSIGN1FB3:  preds = [COND1FAD]
          int[84] femIndicies1FB0#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1FB1#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1FB0);
          tensor[3,3,84] basisResult1FB2#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1F60);
          tensor[3,3] _t1FAE#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1FB1,basisResult1FB2,pos1F60);
          (real[3] evals1FB8#2,tensor[3][3] E1FB9#2) = EigenVecs3x3(_t1FAE);
          int _t1FBB#2 = 2;
          tensor[3] _t1FBD#1 = Subscript<tensor[3][3]>(E1FB9,_t1FBB);
          real _t1FBF#1 = Subscript<real[3]>(evals1FB8,_t1FBB);
          int _t1FC1#2 = 1;
          tensor[3] _t1FC3#1 = Subscript<tensor[3][3]>(E1FB9,_t1FC1);
          real _t1FC5#1 = Subscript<real[3]>(evals1FB8,_t1FC1);
          tensor[3,3] op1_e3_l_101FC8#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1FBD);
          tensor[3,3] op1_e3_l_111FC9#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1FC3);
          tensor[3,3] op1_e3_l_121FCA#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1FBF,op1_e3_l_101FC8);
          tensor[3,3] op1_e3_l_131FCB#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1FC5,op1_e3_l_111FC9);
          tensor[3,3] op1_e3_l_141FCC#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_121FCA,op1_e3_l_131FCB);
          tensor[3,84] basisResult1FD2#1 = EvaluateBasis<BasisArray(3,84)>(pos1F60);
          tensor[3] probe_l_151FCD#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1FB1,basisResult1FD2,pos1F60);
          tensor[3,3] op1_e3_l_161FCE#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_141FCC);
          tensor[3] _t1FC7#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_151FCD,op1_e3_l_161FCE);
          goto JOIN1FE1
        JOIN1FE1:  preds = [ASSIGN1FDE,ASSIGN20F8]
          tensor[3] step1FDF#4 = phi(_t1FC7,_t1FE0)
          real _t1FE2#8 = 0.e0;
          real _t1FE4#10 = 0.1e1;
          real _t1FE6#1 = 0.15e1;
          real op1_e3_l_71FE9#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1FDF);
          real op1_e3_l_81FEA#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_71FE9);
          real op1_e3_l_91FEB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_81FEA);
          real op1_e3_l_101FEC#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1F28,op1_e3_l_91FEB);
          real op1_e3_l_111FED#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_101FEC);
          real op1_e3_l_121FEE#2 = λ(T0[],T1[])<(T0 * T1)> (_t1FE6,op1_e3_l_111FED);
          real op1_e3_l_131FEF#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1FE2,_t1FE4,op1_e3_l_121FEE);
          real _t1FE8#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1F30,op1_e3_l_131FEF);
          bool _t1FF8#1 = EQ<real>(_t1FE8,_t1FE2);
          if _t1FF8 then goto SAVE1FFB else goto JOIN1FFD
        SAVE1FFB:  preds = [COND1FFA]
          self.rayN = rayN1F58;
          active
          goto JOIN1FFD
        JOIN1FFD:  preds = [*ACTIVE1FFC,COND1FFA]
          real op1_e3_l_142005#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1FE4,_t1FE2,op1_e3_l_121FEE);
          real op1_e3_l_152006#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1F30,op1_e3_l_142005);
          real _t1FFE#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_152006);
          real _t2010#1 = MathFn<pow>(_t1FFE,alphaFix1F48);
          bool _t2012#1 = NEQ<real>(phKs1F50,_t1FE2);
          if _t2012 then goto ASSIGN2021 else goto JOIN2030
        ASSIGN2021:  preds = [COND2014]
          tensor[3] op1_e3_l_62016#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1F4A,litwsp1F40);
          real op1_e3_l_82017#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_62016,op1_e3_l_62016);
          real op1_e3_l_92018#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_82017);
          real op1_e3_l_12201B#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81FEA);
          tensor[3] op1_e3_l_13201C#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1FDF,op1_e3_l_12201B);
          tensor[3] op1_e3_l_14201D#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_13201C);
          real op1_e3_l_16201E#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_92018);
          real op1_e3_l_17201F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_14201D,op1_e3_l_62016);
          real op1_e3_l_182020#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_16201E,op1_e3_l_17201F);
          real _t2015#1 = λ(T0[])<Abs(T0)> (op1_e3_l_182020);
          real scomp202D#1 = MathFn<pow>(_t2015,phSp1F52);
          goto JOIN2030
        JOIN2030:  preds = [ASSIGN202E,COND2014]
          real scomp202F#1 = phi(scomp202D,_t1FE2)
          real cmin2031#3 = TensorIndex<tensor[2],[0]>(cminmax1F36);
          real cmax2033#2 = TensorIndex<tensor[2],[1]>(cminmax1F36);
          tensor[3] mcol2035#2 = <tensor[3]>[_t1FE4,_t1FE4,_t1FE4];
          bool _t2037#1 = NEQ<real>(cmin2031,cmax2033);
          if _t2037 then goto ASSIGN215D else goto JOIN2071
        ASSIGN215D:  preds = [COND2039]
          tensor[3] _t203A#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (rayOrig1F44,step1FDF,op1_e3_l_51F62);
          int[84] femIndicies2048#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs2049#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies2048);
          tensor[84] basisResult204A#1 = EvaluateBasis<BasisArray(84)>(_t203A);
          real probe_l_82041#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1F18,_t1F1A,_t1F1C,_t203A,femDofs2049,basisResult204A,_t203A);
          real op1_e3_l_92042#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin2031,probe_l_82041);
          real op1_e3_l_102043#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin2031,cmax2033);
          real op1_e3_l_112044#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_92042,op1_e3_l_102043);
          real op1_e3_l_122045#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1FE2,_t1FE4);
          real op1_e3_l_132046#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_112044,op1_e3_l_122045);
          real _t2040#2 = λ(T0[],T1[])<(T0 + T1)> (_t1FE2,op1_e3_l_132046);
          real Mtransform2057#2 = Transform<IMAGE1D<double[3]>>(cmap213C);
          real MxPos2058#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform2057,_t2040);
          real Ttranslate2059#1 = Translate<IMAGE1D<double[3]>>(cmap213C);
          real imgPos205A#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos2058,Ttranslate2059);
          real nd205B#2 = Floor<1>(imgPos205A);
          real f205C#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos205A,nd205B);
          int n205D#1 = RealToInt<1>(nd205B);
          int lit205E#1 = 0;
          int idx205F#1 = IAdd(n205D,lit205E);
          tensor[3,2] ldvox2060#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap213C,idx205F);
          tensor[2] kernX_2061#1 = BuildPos<1>(f205C);
          tensor[2] kevalX_d0_2062#1 = EvalKernel<2,tent,0>(kernX_2061);
          tensor[3] mcol2056#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1F1E,_t1F20,_t2040,Mtransform2057,ldvox2060,kevalX_d0_2062);
          goto JOIN2071
        JOIN2071:  preds = [ASSIGN206F,COND2039]
          tensor[3] mcol2070#1 = phi(mcol2056,mcol2035)
          real op1_e3_l_212075#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81FEA);
          tensor[3] op1_e3_l_222076#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1FDF,op1_e3_l_212075);
          tensor[3] op1_e3_l_232077#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_222076);
          real op1_e3_l_242078#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1F40,op1_e3_l_232077);
          real op1_e3_l_252079#1 = λ(T0[])<(T0)^2> (op1_e3_l_242078);
          real op1_e3_l_26207A#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1F4E,op1_e3_l_252079);
          real op1_e3_l_28207C#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1F3C,rayN1F58);
          real op1_e3_l_29207D#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1F3C,camFarVsp1F3E);
          real op1_e3_l_30207E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_28207C,op1_e3_l_29207D);
          tensor[3] op1_e3_l_31207F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1F32,mcFar1F34);
          tensor[3] op1_e3_l_322080#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_30207E,op1_e3_l_31207F);
          real op1_e3_l_332081#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1F4C,op1_e3_l_26207A);
          tensor[3] op1_e3_l_342082#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1F32,op1_e3_l_322080);
          tensor[3] op1_e3_l_352083#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2070,op1_e3_l_332081,op1_e3_l_342082);
          tensor[3] op1_e3_l_362084#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1F50,scomp202F,mcol2035);
          real op1_e3_l_372085#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,_t2010);
          tensor[3] op1_e3_l_382086#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_352083,op1_e3_l_362084);
          tensor[3] op1_e3_l_392087#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1F56,op1_e3_l_372085,op1_e3_l_382086);
          tensor[3] rgb2072#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1F54,op1_e3_l_392087);
          real op1_e3_l_520A0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_372085);
          real transp209E#2 = λ(T0[],T1[])<(T0 * T1)> (transp1F56,op1_e3_l_520A0);
          bool _t20A4#1 = LT<real>(transp209E,transp01F26);
          if _t20A4 then goto SAVE20A7 else goto JOIN20AC
        SAVE20A7:  preds = [COND20A6]
          self.rayN = rayN1F58;
          self.rgb = rgb2072;
          self.transp = _t1FE2;
          stabilize
          goto JOIN20AC
        JOIN20AC:  preds = [*STABILIZE20AA,COND20A6]
          real transp20AB#1 = phi(transp209E)
          self.rayN = rayN1F58;
          self.rgb = rgb2072;
          self.transp = transp20AB;
          active
        ASSIGN20B2:  preds = [COND1FAD]
          int _t20B1#1 = -1;
          real _t20B3#1 = IntToReal(_t20B1);
          int _t20B5#1 = -2;
          real _t20B7#1 = IntToReal(_t20B5);
          int _t20B9#1 = -3;
          real _t20BB#1 = IntToReal(_t20B9);
          tensor[3] _t20BD#1 = <tensor[3]>[_t20B3,_t20B7,_t20BB];
          real _t20BF#1 = -0.1e1;
          real _t20C1#6 = 0.e0;
          tensor[3] _t20C3#1 = <tensor[3]>[_t20BF,_t20C1,_t20C1];
          real _t20C5#1 = -0.2e1;
          tensor[3] _t20C7#1 = <tensor[3]>[_t20C1,_t20C5,_t20C1];
          real _t20C9#1 = -0.3e1;
          tensor[3] _t20CB#1 = <tensor[3]>[_t20C1,_t20C1,_t20C9];
          tensor[3,3] _t20CD#1 = <tensor[3,3]>[_t20C3,_t20C7,_t20CB];
          tensor[3,3] op1_e3_l_320D0#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (rot1F3A,_t20CD);
          tensor[3,3] H20CF#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T1_{i0,i2} * T0_{i2,i1}))>(i2=0..2)>_{3 3} (rot1F3A,op1_e3_l_320D0);
          (real[3] evals20D3#2,tensor[3][3] E20D4#2) = EigenVecs3x3(H20CF);
          int _t20D6#2 = 2;
          tensor[3] _t20D8#1 = Subscript<tensor[3][3]>(E20D4,_t20D6);
          real _t20DA#1 = Subscript<real[3]>(evals20D3,_t20D6);
          int _t20DC#2 = 1;
          tensor[3] _t20DE#1 = Subscript<tensor[3][3]>(E20D4,_t20DC);
          real _t20E0#1 = Subscript<real[3]>(evals20D3,_t20DC);
          tensor[3,3] op1_e3_l_1320E2#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20D8);
          tensor[3,3] op1_e3_l_1420E3#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20DE);
          tensor[3,3] op1_e3_l_1520E4#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20DA,op1_e3_l_1320E2);
          tensor[3,3] op1_e3_l_1620E5#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20E0,op1_e3_l_1420E3);
          tensor[3,3] op1_e3_l_1720E6#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1520E4,op1_e3_l_1620E5);
          tensor[3] op1_e3_l_2120EA#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (rot1F3A,pos1F60);
          tensor[3,3] op1_e3_l_2220EB#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_1720E6);
          tensor[3] op1_e3_l_2320EC#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * T2_{i1}))>(i1=0..2)>_{3} (rot1F3A,_t20BD,op1_e3_l_2120EA);
          tensor[3] _t1FE0#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2220EB,op1_e3_l_2320EC);
          goto JOIN1FE1
        ASSIGN20F9:  preds = [COND1F99]
          bool _t1F9D#1 = false;
          goto JOIN1F9E
        ASSIGN20FA:  preds = [COND1F94]
          bool _t1FA0#1 = false;
          goto JOIN1FA1
        ASSIGN20FB:  preds = [COND1F6C]
          bool _t1FA3#1 = false;
          goto JOIN1FA4
    end update
    method stabilize
        ENTRY20FC:  preds = []
          tensor[4] rgba20FD#1 = self.rgba;
          tensor[3] rgb20FF#3 = self.rgb;
          real transp2101#2 = self.transp;
          real _t2103#2 = 0.1e1;
          bool _t2105#1 = LT<real>(transp2101,_t2103);
          if _t2105 then goto ASSIGN2109 else goto JOIN211F
        ASSIGN2109:  preds = [COND2107]
          real aa2108#4 = λ(T0[],T1[])<(T0) - (T1)> (_t2103,transp2101);
          real _t210A#1 = TensorIndex<tensor[3],[0]>(rgb20FF);
          real _t210C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t210A,aa2108);
          real _t2110#1 = TensorIndex<tensor[3],[1]>(rgb20FF);
          real _t2112#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2110,aa2108);
          real _t2116#1 = TensorIndex<tensor[3],[2]>(rgb20FF);
          real _t2118#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2116,aa2108);
          tensor[4] rgba211C#1 = <tensor[4]>[_t210C,_t2112,_t2118,aa2108];
          goto JOIN211F
        JOIN211F:  preds = [ASSIGN211D,COND2107]
          tensor[4] rgba211E#1 = phi(rgba211C,rgba20FD)
          self.rgba = rgba211E;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY2122:  preds = []
      int iresU2123#1 = globals.iresU1CD9;
      int iresV2125#1 = globals.iresV1CDA;
      int _t2127#2 = 0;
      int _t2129#2 = 1;
      int _t212B#1 = ISub(iresV2125,_t2129);
      int[] _t212D#1 = Range(_t2127,_t212B);
    FOREACH2130:  preds = [ASSIGN212E,NEXT2139]
      foreach (vi212F in _t212D) on exit goto RETURN213A
      int _t2131#1 = ISub(iresU2123,_t2129);
      int[] _t2133#1 = Range(_t2127,_t2131);
    FOREACH2136:  preds = [ASSIGN2134,NEXT2138]
      foreach (ui2135 in _t2133) on exit goto NEXT2139
      new ray(ui2135,vi212F);
      goto FOREACH2136
    NEXT2139:  preds = [FOREACH2136]
      goto FOREACH2130
    RETURN213A:  preds = [FOREACH2130]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1CCD (block) = <no-default>
  input 0space0509_intermedateGlobal1CCE (space) = <no-default>
  input 0U050B_intermedateGlobal1CCF (U) = <no-default>
  input cellChoice1CD0 (cellChoice) = <no-default>
  input cmap1CD1 (cmap) = image("cmap.nrrd")
  input camEye1CD2 (camEye) = <default>
  input camAt1CD3 (camAt) = <default>
  input camUp1CD4 (camUp) = <default>
  input camNear1CD5 (camNear) = <default>
  input camFar1CD6 (camFar) = <default>
  input camFOV1CD7 (camFOV) = <default>
  input camOrtho1CD8 (camOrtho) = <default>
  input iresU1CD9 (iresU) = <default>
  input iresV1CDA (iresV) = <default>
  input rayStep1CDB (rayStep) = <default>
  input refStep1CDC (refStep) = <default>
  input transp01CDD (transp0) = <default>
  input thick1CDE (thick) = <default>
  input fStrTh1CDF (fStrTh) = <default>
  input fMaskTh1CE0 (fMaskTh) = <default>
  input fBias1CE1 (fBias) = <default>
  input maxAlpha1CE2 (maxAlpha) = <default>
  input light1CE3 (light) = <default>
  input phong1CE4 (phong) = <default>
  input mcNear1CE5 (mcNear) = <default>
  input mcFar1CE6 (mcFar) = <default>
  input litdir1CE7 (litdir) = <default>
  input cminmax1CE8 (cminmax) = <default>
  input analytical1CE9 (analytical) = <default>
  input umm1CEA (umm) = image("data.nrrd")
  input rot1CEB (rot) = <default>
  global tensor[3] camN1CEC
  global tensor[3] camU1CED
  global tensor[3] camV1CEE
  global real camDist1CEF
  global real camVmax1CF0
  global real camUmax1CF1
  global real camNearVsp1CF2
  global real camFarVsp1CF3
  global tensor[3] litwsp1CF4
  global int _t1CF5
  global femData:Space _tX1CF6
  global femData:FemFunc _tXX1CF7
  global image(IMAGE1D<double[3]>) img1CF8
  global kernel _tXXX1CF9
## functions
## input initialization
  ENTRY1CFA:  preds = []
    real _t1CFB#17 = 0.e0;
    real _t1CFD#1 = -0.2e1;
    tensor[3] camEye1CFF#1 = <tensor[3]>[_t1CFB,_t1CFD,_t1CFB];
    globals.camEye1CD2 = camEye1CFF;
    tensor[3] camAt1D02#1 = <tensor[3]>[_t1CFB,_t1CFB,_t1CFB];
    globals.camAt1CD3 = camAt1D02;
    real _t1D05#7 = 0.1e1;
    tensor[3] camUp1D07#2 = <tensor[3]>[_t1CFB,_t1CFB,_t1D05];
    globals.camUp1CD4 = camUp1D07;
    real camNear1D0A#1 = -0.4e1;
    globals.camNear1CD5 = camNear1D0A;
    real camFar1D0D#1 = 0.4e1;
    globals.camFar1CD6 = camFar1D0D;
    real camFOV1D10#1 = 0.1e2;
    globals.camFOV1CD7 = camFOV1D10;
    bool camOrtho1D13#2 = false;
    globals.camOrtho1CD8 = camOrtho1D13;
    int iresU1D16#2 = 100;
    globals.iresU1CD9 = iresU1D16;
    globals.iresV1CDA = iresU1D16;
    real rayStep1D1A#2 = 0.1e-3;
    globals.rayStep1CDB = rayStep1D1A;
    globals.refStep1CDC = rayStep1D1A;
    real transp01D1E#1 = 0.5e-2;
    globals.transp01CDD = transp01D1E;
    real thick1D21#1 = 0.1e-1;
    globals.thick1CDE = thick1D21;
    globals.fStrTh1CDF = _t1CFB;
    globals.fMaskTh1CE0 = _t1CFB;
    real fBias1D26#2 = 0.1e0;
    globals.fBias1CE1 = fBias1D26;
    globals.maxAlpha1CE2 = _t1D05;
    globals.light1CE3 = camOrtho1D13;
    real _t1D2B#1 = 0.7e0;
    real _t1D2D#1 = 0.2e0;
    real _t1D2F#1 = 0.1e3;
    tensor[4] phong1D31#1 = <tensor[4]>[fBias1D26,_t1D2B,_t1D2D,_t1D2F];
    globals.phong1CE4 = phong1D31;
    tensor[3] mcNear1D34#2 = <tensor[3]>[_t1D05,_t1D05,_t1D05];
    globals.mcNear1CE5 = mcNear1D34;
    globals.mcFar1CE6 = mcNear1D34;
    real _t1D38#1 = -0.1e1;
    tensor[3] litdir1D3A#1 = <tensor[3]>[_t1CFB,_t1D38,_t1CFB];
    globals.litdir1CE7 = litdir1D3A;
    tensor[2] cminmax1D3D#1 = <tensor[2]>[_t1CFB,_t1CFB];
    globals.cminmax1CE8 = cminmax1D3D;
    bool analytical1D40#1 = true;
    globals.analytical1CE9 = analytical1D40;
    tensor[3] _t1D43#1 = <tensor[3]>[_t1D05,_t1CFB,_t1CFB];
    tensor[3] _t1D45#1 = <tensor[3]>[_t1CFB,_t1D05,_t1CFB];
    tensor[3,3] rot1D47#1 = <tensor[3,3]>[_t1D43,_t1D45,camUp1D07];
    globals.rot1CEB = rot1D47;
    return
## global-variable initialization
  ENTRY1D4B:  preds = []
    femData:Mesh block1D4C#3 = globals.block1CCD;
    femData:Space 0space0509_intermedateGlobal1D4E#1 = globals.0space0509_intermedateGlobal1CCE;
    femData:FemFunc 0U050B_intermedateGlobal1D50#1 = globals.0U050B_intermedateGlobal1CCF;
    int cellChoice1D52#1 = globals.cellChoice1CD0;
    image(IMAGE1D<double[3]>) cmap1D54#1 = globals.cmap1CD1;
    tensor[3] camEye1D56#1 = globals.camEye1CD2;
    tensor[3] camAt1D58#1 = globals.camAt1CD3;
    tensor[3] camUp1D5A#1 = globals.camUp1CD4;
    real camNear1D5C#1 = globals.camNear1CD5;
    real camFar1D5E#1 = globals.camFar1CD6;
    real camFOV1D60#1 = globals.camFOV1CD7;
    int iresU1D62#1 = globals.iresU1CD9;
    int iresV1D64#1 = globals.iresV1CDA;
    tensor[3] litdir1D66#2 = globals.litdir1CE7;
    int _t1D68#1 = 0;
    int _t1D6A#1 = 1;
    int _t1D6C#1 = ExtractFemItem<int,NumCell(Mesh)>(block1D4C);
    int _t1D6E#1 = ISub(_t1D6C,_t1D6A);
    int[] _t1D70#1 = Range(_t1D68,_t1D6E);
    femData:MeshCell[] _t1D72#1 = <femData:MeshCell[]>{};
  FOREACH1D75:  preds = [ASSIGN1D73,NEXT1D7B]
    foreach (_t1D74 in _t1D70) on exit goto ASSIGN1D7D
      femData:MeshCell[] _t1D79#2 = phi(_t1D72,_t1D78)
    femData:MeshCell _t1D76#1 = LoadFem<femData:MeshCell>(block1D4C,_t1D74);
    femData:MeshCell[] _t1D78#1 = Append<femData:MeshCell>(_t1D79,_t1D76);
    goto FOREACH1D75
  ASSIGN1D7D:  preds = [FOREACH1D75]
    femData:Space space1D7C#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1D4E,block1D4C);
    femData:FemFunc U1D7E#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1D50,space1D7C);
    femData:MeshCell c11D80#1 = Subscript<femData:MeshCell[]>(_t1D79,cellChoice1D52);
    int _t1D82#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11D80);
    femData:FuncCell _t1D84#2 = LoadFem<femData:FuncCell>(U1D7E,_t1D82);
    femData:FemFunc _t1D86#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1D84);
    femData:Space _t1D88#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1D86);
    int _t1D8A#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1D84);
    kernel _t1D8C#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1D8E#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1D54);
    tensor[3] op1_e3_l_41D91#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_61D92#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D91,op1_e3_l_41D91);
    real op1_e3_l_71D93#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D92);
    real op1_e3_l_91D94#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D93);
    tensor[3] camN1D90#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D91,op1_e3_l_91D94);
    globals.camN1CEC = camN1D90;
    tensor[3,3] op1_e3_l_151D9F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1D5A);
    tensor[3] op1_e3_l_171DA1#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D91,op1_e3_l_151D9F);
    real op1_e3_l_341DA2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171DA1,op1_e3_l_171DA1);
    real op1_e3_l_351DA3#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91D94,op1_e3_l_91D94,op1_e3_l_341DA2);
    real op1_e3_l_361DA4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351DA3);
    tensor[3] op1_e3_l_371DA5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D94,op1_e3_l_171DA1);
    real op1_e3_l_381DA6#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361DA4);
    tensor[3] camU1D9B#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371DA5,op1_e3_l_381DA6);
    globals.camU1CED = camU1D9B;
    tensor[3,3] op1_e3_l_451DBE#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171DA1);
    tensor[3] op1_e3_l_471DBF#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D91,op1_e3_l_451DBE);
    tensor[3] op1_e3_l_501DC1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D94,op1_e3_l_471DBF);
    tensor[3] camV1DB4#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91D94,op1_e3_l_381DA6,op1_e3_l_501DC1);
    globals.camV1CEE = camV1DB4;
    globals.camDist1CEF = op1_e3_l_71D93;
    real _t1DD8#1 = 0.314159265358979323846264338327950288e1;
    real _t1DDA#1 = 0.36e3;
    real op1_e3_l_51DDD#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1D60,_t1DD8);
    real op1_e3_l_61DDE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1DDA,op1_e3_l_51DDD);
    real op1_e3_l_101DE1#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61DDE);
    real camVmax1DDC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101DE1,op1_e3_l_71D93);
    globals.camVmax1CF0 = camVmax1DDC;
    real _t1DEB#1 = IntToReal(iresU1D62);
    real _t1DED#1 = IntToReal(iresV1D64);
    real op1_e3_l_141DF6#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1DEB,op1_e3_l_101DE1,op1_e3_l_71D93);
    real camUmax1DEF#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1DED,op1_e3_l_141DF6);
    globals.camUmax1CF1 = camUmax1DEF;
    real camNearVsp1E00#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1D5C,op1_e3_l_71D93);
    globals.camNearVsp1CF2 = camNearVsp1E00;
    real camFarVsp1E09#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1D5E,op1_e3_l_71D93);
    globals.camFarVsp1CF3 = camFarVsp1E09;
    tensor[3,3] _t1E12#1 = <tensor[3,3]>[camU1D9B,camV1DB4,camN1D90];
    real op1_e3_l_31E15#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1D66);
    real op1_e3_l_41E16#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31E15);
    real op1_e3_l_51E17#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41E16);
    tensor[3] op1_e3_l_61E18#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1E12,litdir1D66);
    tensor[3] litwsp1E14#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51E17,op1_e3_l_61E18);
    globals.litwsp1CF4 = litwsp1E14;
    globals._t1CF5 = _t1D8A;
    globals._tX1CF6 = _t1D88;
    globals._tXX1CF7 = _t1D86;
    globals.img1CF8 = img1D8E;
    globals._tXXX1CF9 = _t1D8C;
    return
## strand
  strand ray (int ui1E25#1, int vi1E26#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1E37:  preds = []
        tensor[3] camEye1E38#1 = globals.camEye1CD2;
        bool camOrtho1E3A#2 = globals.camOrtho1CD8;
        int iresU1E3C#1 = globals.iresU1CD9;
        int iresV1E3E#1 = globals.iresV1CDA;
        real rayStep1E40#1 = globals.rayStep1CDB;
        real refStep1E42#1 = globals.refStep1CDC;
        tensor[4] phong1E44#4 = globals.phong1CE4;
        tensor[3] camN1E46#1 = globals.camN1CEC;
        tensor[3] camU1E48#1 = globals.camU1CED;
        tensor[3] camV1E4A#1 = globals.camV1CEE;
        real camDist1E4C#1 = globals.camDist1CEF;
        real camVmax1E4E#2 = globals.camVmax1CF0;
        real camUmax1E50#2 = globals.camUmax1CF1;
        real camNearVsp1E52#1 = globals.camNearVsp1CF2;
        real _t1E54#5 = -0.5e0;
        real _t1E56#1 = IntToReal(ui1E25);
        real _t1E58#1 = IntToReal(iresU1E3C);
        real _t1E5A#3 = 0.5e0;
        real op1_e3_l_61E5D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E58,_t1E5A);
        real op1_e3_l_71E5E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E56);
        real op1_e3_l_81E5F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_61E5D);
        real op1_e3_l_91E60#2 = λ(T0[])<Neg(T0)> (camUmax1E50);
        real op1_e3_l_101E61#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E5E,op1_e3_l_81E5F);
        real op1_e3_l_111E62#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1E50,op1_e3_l_91E60);
        real op1_e3_l_131E63#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E61,op1_e3_l_111E62);
        real rayU1E5C#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E60,op1_e3_l_131E63);
        real _t1E6C#1 = IntToReal(vi1E26);
        real _t1E6E#2 = IntToReal(iresV1E3E);
        real op1_e3_l_61E71#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6E,_t1E5A);
        real op1_e3_l_71E72#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E6C);
        real op1_e3_l_81E73#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_61E71);
        real op1_e3_l_91E74#3 = λ(T0[])<Neg(T0)> (camVmax1E4E);
        real op1_e3_l_101E75#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E72,op1_e3_l_81E73);
        real op1_e3_l_111E76#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1E4E,op1_e3_l_91E74);
        real op1_e3_l_131E77#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E75,op1_e3_l_111E76);
        real rayV1E70#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E74,op1_e3_l_131E77);
        real op1_e3_l_231E89#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E5A,_t1E6E);
        real op1_e3_l_251E8B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_231E89);
        real op1_e3_l_271E8D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E72,op1_e3_l_251E8B);
        real op1_e3_l_301E8F#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271E8D,op1_e3_l_111E76);
        real op1_e3_l_311E90#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E74,op1_e3_l_301E8F);
        tensor[3] op1_e3_l_321E91#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1E48,rayU1E5C);
        tensor[3] op1_e3_l_331E92#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1E4A,op1_e3_l_311E90);
        tensor[3] UV1E80#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321E91,op1_e3_l_331E92);
        if camOrtho1E3A then goto JOIN1EA9 else goto ASSIGN1F15
      JOIN1EA9:  preds = [COND1EA6,ASSIGN1F16]
        tensor[3] _t1EA7#1 = phi(UV1E80,_t1EA8)
        tensor[3] rayOrig1EAA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1E38,_t1EA7);
        if camOrtho1E3A then goto ASSIGN1EAE else goto ASSIGN2151
      ASSIGN1EAE:  preds = [COND1EAC]
        real _t1EAD#3 = 0.e0;
        tensor[3] _t1EAF#1 = <tensor[3]>[_t1EAD,_t1EAD,_t1EAD];
        goto JOIN1EB3
      JOIN1EB3:  preds = [ASSIGN1EB0,ASSIGN2151]
        tensor[3] _t1EB1#1 = phi(_t1EAF,_t1EB2)
        tensor[3] rayVec1EB4#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1E46,_t1EB1);
        real op1_e3_l_61EB8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1EB4,rayVec1EB4);
        real op1_e3_l_71EB9#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61EB8);
        real op1_e3_l_81EBA#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1E40,op1_e3_l_71EB9);
        real alphaFix1EB6#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1E42,op1_e3_l_81EBA);
        real op1_e3_l_91EC4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71EB9);
        tensor[3] op1_e3_l_101EC5#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1EB4,op1_e3_l_91EC4);
        tensor[3] eyeDir1EC0#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101EC5);
        real phKa1ECC#1 = TensorIndex<tensor[4],[0]>(phong1E44);
        real phKd1ECE#1 = TensorIndex<tensor[4],[1]>(phong1E44);
        real phKs1ED0#1 = TensorIndex<tensor[4],[2]>(phong1E44);
        real phSp1ED2#1 = TensorIndex<tensor[4],[3]>(phong1E44);
        real _t1ED4#8 = 0.e0;
        tensor[4] rgba1ED6#1 = <tensor[4]>[_t1ED4,_t1ED4,_t1ED4,_t1ED4];
        tensor[3] rgb1ED8#1 = <tensor[3]>[_t1ED4,_t1ED4,_t1ED4];
        real transp1EDA#1 = 0.1e1;
        self.rayU = rayU1E5C;
        self.rayV = rayV1E70;
        self.rayN = camNearVsp1E52;
        self.UV = UV1E80;
        self.rayOrig = rayOrig1EAA;
        self.rayVec = rayVec1EB4;
        self.alphaFix = alphaFix1EB6;
        self.eyeDir = eyeDir1EC0;
        self.phKa = phKa1ECC;
        self.phKd = phKd1ECE;
        self.phKs = phKs1ED0;
        self.phSp = phSp1ED2;
        self.rgba = rgba1ED6;
        self.raw = _t1ED4;
        self.rgb = rgb1ED8;
        self.transp = transp1EDA;
        return
      ASSIGN2151:  preds = [COND1EAC]
        tensor[3] _t1EB2#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1E4C,UV1E80);
        goto JOIN1EB3
      ASSIGN1F15:  preds = [COND1EA6]
        real _t1F14#3 = 0.e0;
        tensor[3] _t1EA8#1 = <tensor[3]>[_t1F14,_t1F14,_t1F14];
        goto JOIN1EA9
    end state init
    method update
        ENTRY1F17:  preds = []
          image(IMAGE1D<double[3]>) cmap213C#3 = globals.cmap1CD1;
          int _t1F18#8 = globals._t1CF5;
          femData:Space _t1F1A#8 = globals._tX1CF6;
          femData:FemFunc _t1F1C#8 = globals._tXX1CF7;
          image(IMAGE1D<double[3]>) img1F1E#1 = globals.img1CF8;
          kernel _t1F20#1 = globals._tXXX1CF9;
          femData:Mesh block1F22#1 = globals.block1CCD;
          real rayStep1F24#1 = globals.rayStep1CDB;
          real transp01F26#1 = globals.transp01CDD;
          real thick1F28#1 = globals.thick1CDE;
          real fStrTh1F2A#1 = globals.fStrTh1CDF;
          real fMaskTh1F2C#1 = globals.fMaskTh1CE0;
          real fBias1F2E#1 = globals.fBias1CE1;
          real maxAlpha1F30#2 = globals.maxAlpha1CE2;
          tensor[3] mcNear1F32#2 = globals.mcNear1CE5;
          tensor[3] mcFar1F34#1 = globals.mcFar1CE6;
          tensor[2] cminmax1F36#2 = globals.cminmax1CE8;
          bool analytical1F38#1 = globals.analytical1CE9;
          tensor[3,3] rot1F3A#4 = globals.rot1CEB;
          real camNearVsp1F3C#2 = globals.camNearVsp1CF2;
          real camFarVsp1F3E#2 = globals.camFarVsp1CF3;
          tensor[3] litwsp1F40#2 = globals.litwsp1CF4;
          real rayN1F42#1 = self.rayN;
          tensor[3] rayOrig1F44#2 = self.rayOrig;
          tensor[3] rayVec1F46#1 = self.rayVec;
          real alphaFix1F48#1 = self.alphaFix;
          tensor[3] eyeDir1F4A#1 = self.eyeDir;
          real phKa1F4C#1 = self.phKa;
          real phKd1F4E#1 = self.phKd;
          real phKs1F50#2 = self.phKs;
          real phSp1F52#1 = self.phSp;
          tensor[3] rgb1F54#1 = self.rgb;
          real transp1F56#2 = self.transp;
          real rayN1F58#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1F42,rayStep1F24);
          bool _t1F5A#1 = GT<real>(rayN1F58,camFarVsp1F3E);
          if _t1F5A then goto SAVE1F5D else goto JOIN1F5F
        SAVE1F5D:  preds = [COND1F5C]
          self.rayN = rayN1F58;
          stabilize
          goto JOIN1F5F
        JOIN1F5F:  preds = [*STABILIZE1F5E,COND1F5C]
          tensor[3] op1_e3_l_51F62#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1F46,rayN1F58);
          tensor[3] pos1F60#14 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1F44,op1_e3_l_51F62);
          femData:RefCell _t1F66#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1F22);
          real _t1F68#1 = 0.1e-8;
          bool _t1F6A#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1F66,pos1F60,_t1F68);
          if _t1F6A then goto ASSIGN1F72 else goto ASSIGN20FB
        ASSIGN1F72:  preds = [COND1F6C]
          int[84] femIndicies1F6F#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1F70#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1F6F);
          tensor[3,3,84] basisResult1F71#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1F60);
          tensor[3,3] _t1F6D#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1F70,basisResult1F71,pos1F60);
          real[3] _t1F77#1 = EigenVals3x3(_t1F6D);
          int _t1F7A#1 = 1;
          real _t1F7C#1 = Subscript<real[3]>(_t1F77,_t1F7A);
          tensor[3,84] basisResult1F87#1 = EvaluateBasis<BasisArray(3,84)>(pos1F60);
          tensor[3] probe_l_61F7F#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1F70,basisResult1F87,pos1F60);
          real op1_e3_l_81F80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61F7F,probe_l_61F7F);
          real op1_e3_l_91F81#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81F80);
          real op1_e3_l_101F82#1 = λ(T0[])<Neg(T0)> (_t1F7C);
          real op1_e3_l_111F83#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1F2E,op1_e3_l_91F81);
          real _t1F7E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101F82,op1_e3_l_111F83);
          bool _t1F92#1 = GT<real>(_t1F7E,fStrTh1F2A);
          if _t1F92 then goto ASSIGN1F96 else goto ASSIGN20FA
        ASSIGN1F96:  preds = [COND1F94]
          real _t1F95#1 = 0.1e1;
          bool _t1F97#1 = GTE<real>(_t1F95,fMaskTh1F2C);
          if _t1F97 then goto ASSIGN1F9B else goto ASSIGN20F9
        ASSIGN1F9B:  preds = [COND1F99]
          bool _t1F9A#1 = true;
          goto JOIN1F9E
        JOIN1F9E:  preds = [ASSIGN1F9B,ASSIGN20F9]
          bool _t1F9C#1 = phi(_t1F9A,_t1F9D)
          goto JOIN1FA1
        JOIN1FA1:  preds = [JOIN1F9E,ASSIGN20FA]
          bool _t1F9F#1 = phi(_t1F9C,_t1FA0)
          goto JOIN1FA4
        JOIN1FA4:  preds = [JOIN1FA1,ASSIGN20FB]
          bool _t1FA2#1 = phi(_t1F9F,_t1FA3)
          bool _t1FA5#1 = BNot(_t1FA2);
          if _t1FA5 then goto SAVE1FA8 else goto JOIN1FAA
        SAVE1FA8:  preds = [COND1FA7]
          self.rayN = rayN1F58;
          active
          goto JOIN1FAA
        JOIN1FAA:  preds = [*ACTIVE1FA9,COND1FA7]
          bool _t1FAB#1 = BNot(analytical1F38);
          if _t1FAB then goto ASSIGN1FB3 else goto ASSIGN2167
        ASSIGN1FB3:  preds = [COND1FAD]
          int[84] femIndicies1FB0#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1FB1#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1FB0);
          tensor[3,3,84] basisResult1FB2#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1F60);
          tensor[3,3] _t1FAE#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1FB1,basisResult1FB2,pos1F60);
          (real[3] evals1FB8#2,tensor[3][3] E1FB9#2) = EigenVecs3x3(_t1FAE);
          int _t1FBB#2 = 2;
          tensor[3] _t1FBD#1 = Subscript<tensor[3][3]>(E1FB9,_t1FBB);
          real _t1FBF#1 = Subscript<real[3]>(evals1FB8,_t1FBB);
          int _t1FC1#2 = 1;
          tensor[3] _t1FC3#1 = Subscript<tensor[3][3]>(E1FB9,_t1FC1);
          real _t1FC5#1 = Subscript<real[3]>(evals1FB8,_t1FC1);
          tensor[3,3] op1_e3_l_101FC8#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1FBD);
          tensor[3,3] op1_e3_l_111FC9#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1FC3);
          tensor[3,3] op1_e3_l_121FCA#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1FBF,op1_e3_l_101FC8);
          tensor[3,3] op1_e3_l_131FCB#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1FC5,op1_e3_l_111FC9);
          tensor[3,3] op1_e3_l_141FCC#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_121FCA,op1_e3_l_131FCB);
          tensor[3,84] basisResult1FD2#1 = EvaluateBasis<BasisArray(3,84)>(pos1F60);
          tensor[3] probe_l_151FCD#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1FB1,basisResult1FD2,pos1F60);
          tensor[3,3] op1_e3_l_161FCE#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_141FCC);
          tensor[3] _t1FC7#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_151FCD,op1_e3_l_161FCE);
          goto JOIN1FE1
        JOIN1FE1:  preds = [ASSIGN1FDE,ASSIGN20F8]
          tensor[3] step1FDF#4 = phi(_t1FC7,_t1FE0)
          real _t1FE2#8 = 0.e0;
          real _t1FE4#10 = 0.1e1;
          real _t1FE6#1 = 0.15e1;
          real op1_e3_l_71FE9#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1FDF);
          real op1_e3_l_81FEA#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_71FE9);
          real op1_e3_l_91FEB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_81FEA);
          real op1_e3_l_101FEC#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1F28,op1_e3_l_91FEB);
          real op1_e3_l_111FED#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_101FEC);
          real op1_e3_l_121FEE#2 = λ(T0[],T1[])<(T0 * T1)> (_t1FE6,op1_e3_l_111FED);
          real op1_e3_l_131FEF#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1FE2,_t1FE4,op1_e3_l_121FEE);
          real _t1FE8#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1F30,op1_e3_l_131FEF);
          bool _t1FF8#1 = EQ<real>(_t1FE8,_t1FE2);
          if _t1FF8 then goto SAVE1FFB else goto JOIN1FFD
        SAVE1FFB:  preds = [COND1FFA]
          self.rayN = rayN1F58;
          active
          goto JOIN1FFD
        JOIN1FFD:  preds = [*ACTIVE1FFC,COND1FFA]
          real op1_e3_l_142005#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1FE4,_t1FE2,op1_e3_l_121FEE);
          real op1_e3_l_152006#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1F30,op1_e3_l_142005);
          real _t1FFE#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_152006);
          real _t2010#1 = MathFn<pow>(_t1FFE,alphaFix1F48);
          bool _t2012#1 = NEQ<real>(phKs1F50,_t1FE2);
          if _t2012 then goto ASSIGN2021 else goto JOIN2030
        ASSIGN2021:  preds = [COND2014]
          tensor[3] op1_e3_l_62016#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1F4A,litwsp1F40);
          real op1_e3_l_82017#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_62016,op1_e3_l_62016);
          real op1_e3_l_92018#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_82017);
          real op1_e3_l_12201B#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81FEA);
          tensor[3] op1_e3_l_13201C#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1FDF,op1_e3_l_12201B);
          tensor[3] op1_e3_l_14201D#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_13201C);
          real op1_e3_l_16201E#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_92018);
          real op1_e3_l_17201F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_14201D,op1_e3_l_62016);
          real op1_e3_l_182020#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_16201E,op1_e3_l_17201F);
          real _t2015#1 = λ(T0[])<Abs(T0)> (op1_e3_l_182020);
          real scomp202D#1 = MathFn<pow>(_t2015,phSp1F52);
          goto JOIN2030
        JOIN2030:  preds = [ASSIGN202E,COND2014]
          real scomp202F#1 = phi(scomp202D,_t1FE2)
          real cmin2031#3 = TensorIndex<tensor[2],[0]>(cminmax1F36);
          real cmax2033#2 = TensorIndex<tensor[2],[1]>(cminmax1F36);
          tensor[3] mcol2035#2 = <tensor[3]>[_t1FE4,_t1FE4,_t1FE4];
          bool _t2037#1 = NEQ<real>(cmin2031,cmax2033);
          if _t2037 then goto ASSIGN215D else goto JOIN2071
        ASSIGN215D:  preds = [COND2039]
          tensor[3] _t203A#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (rayOrig1F44,step1FDF,op1_e3_l_51F62);
          int[84] femIndicies2048#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs2049#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies2048);
          tensor[84] basisResult204A#1 = EvaluateBasis<BasisArray(84)>(_t203A);
          real probe_l_82041#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1F18,_t1F1A,_t1F1C,_t203A,femDofs2049,basisResult204A,_t203A);
          real op1_e3_l_92042#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin2031,probe_l_82041);
          real op1_e3_l_102043#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin2031,cmax2033);
          real op1_e3_l_112044#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_92042,op1_e3_l_102043);
          real op1_e3_l_122045#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1FE2,_t1FE4);
          real op1_e3_l_132046#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_112044,op1_e3_l_122045);
          real _t2040#2 = λ(T0[],T1[])<(T0 + T1)> (_t1FE2,op1_e3_l_132046);
          real Mtransform2057#2 = Transform<IMAGE1D<double[3]>>(cmap213C);
          real MxPos2058#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform2057,_t2040);
          real Ttranslate2059#1 = Translate<IMAGE1D<double[3]>>(cmap213C);
          real imgPos205A#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos2058,Ttranslate2059);
          real nd205B#2 = Floor<1>(imgPos205A);
          real f205C#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos205A,nd205B);
          int n205D#1 = RealToInt<1>(nd205B);
          int idx205F#1 = n205D;
          tensor[3,2] ldvox2060#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap213C,idx205F);
          tensor[2] kernX_2061#1 = BuildPos<1>(f205C);
          tensor[2] kevalX_d0_2062#1 = EvalKernel<2,tent,0>(kernX_2061);
          tensor[3] mcol2056#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1F1E,_t1F20,_t2040,Mtransform2057,ldvox2060,kevalX_d0_2062);
          goto JOIN2071
        JOIN2071:  preds = [ASSIGN206F,COND2039]
          tensor[3] mcol2070#1 = phi(mcol2056,mcol2035)
          real op1_e3_l_212075#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81FEA);
          tensor[3] op1_e3_l_222076#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1FDF,op1_e3_l_212075);
          tensor[3] op1_e3_l_232077#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_222076);
          real op1_e3_l_242078#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1F40,op1_e3_l_232077);
          real op1_e3_l_252079#1 = λ(T0[])<(T0)^2> (op1_e3_l_242078);
          real op1_e3_l_26207A#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1F4E,op1_e3_l_252079);
          real op1_e3_l_28207C#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1F3C,rayN1F58);
          real op1_e3_l_29207D#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1F3C,camFarVsp1F3E);
          real op1_e3_l_30207E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_28207C,op1_e3_l_29207D);
          tensor[3] op1_e3_l_31207F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1F32,mcFar1F34);
          tensor[3] op1_e3_l_322080#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_30207E,op1_e3_l_31207F);
          real op1_e3_l_332081#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1F4C,op1_e3_l_26207A);
          tensor[3] op1_e3_l_342082#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1F32,op1_e3_l_322080);
          tensor[3] op1_e3_l_352083#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2070,op1_e3_l_332081,op1_e3_l_342082);
          tensor[3] op1_e3_l_362084#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1F50,scomp202F,mcol2035);
          real op1_e3_l_372085#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,_t2010);
          tensor[3] op1_e3_l_382086#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_352083,op1_e3_l_362084);
          tensor[3] op1_e3_l_392087#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1F56,op1_e3_l_372085,op1_e3_l_382086);
          tensor[3] rgb2072#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1F54,op1_e3_l_392087);
          real op1_e3_l_520A0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_372085);
          real transp209E#2 = λ(T0[],T1[])<(T0 * T1)> (transp1F56,op1_e3_l_520A0);
          bool _t20A4#1 = LT<real>(transp209E,transp01F26);
          if _t20A4 then goto SAVE20A7 else goto JOIN20AC
        SAVE20A7:  preds = [COND20A6]
          self.rayN = rayN1F58;
          self.rgb = rgb2072;
          self.transp = _t1FE2;
          stabilize
          goto JOIN20AC
        JOIN20AC:  preds = [*STABILIZE20AA,COND20A6]
          real transp20AB#1 = phi(transp209E)
          self.rayN = rayN1F58;
          self.rgb = rgb2072;
          self.transp = transp20AB;
          active
        ASSIGN2167:  preds = [COND1FAD]
          real _t20B3#1 = -0.1e1;
          real _t20B7#1 = -0.2e1;
          real _t20BB#1 = -0.3e1;
          tensor[3] _t20BD#1 = <tensor[3]>[_t20B3,_t20B7,_t20BB];
          real _t20BF#1 = -0.1e1;
          real _t20C1#6 = 0.e0;
          tensor[3] _t20C3#1 = <tensor[3]>[_t20BF,_t20C1,_t20C1];
          real _t20C5#1 = -0.2e1;
          tensor[3] _t20C7#1 = <tensor[3]>[_t20C1,_t20C5,_t20C1];
          real _t20C9#1 = -0.3e1;
          tensor[3] _t20CB#1 = <tensor[3]>[_t20C1,_t20C1,_t20C9];
          tensor[3,3] _t20CD#1 = <tensor[3,3]>[_t20C3,_t20C7,_t20CB];
          tensor[3,3] op1_e3_l_320D0#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (rot1F3A,_t20CD);
          tensor[3,3] H20CF#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T1_{i0,i2} * T0_{i2,i1}))>(i2=0..2)>_{3 3} (rot1F3A,op1_e3_l_320D0);
          (real[3] evals20D3#2,tensor[3][3] E20D4#2) = EigenVecs3x3(H20CF);
          int _t20D6#2 = 2;
          tensor[3] _t20D8#1 = Subscript<tensor[3][3]>(E20D4,_t20D6);
          real _t20DA#1 = Subscript<real[3]>(evals20D3,_t20D6);
          int _t20DC#2 = 1;
          tensor[3] _t20DE#1 = Subscript<tensor[3][3]>(E20D4,_t20DC);
          real _t20E0#1 = Subscript<real[3]>(evals20D3,_t20DC);
          tensor[3,3] op1_e3_l_1320E2#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20D8);
          tensor[3,3] op1_e3_l_1420E3#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20DE);
          tensor[3,3] op1_e3_l_1520E4#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20DA,op1_e3_l_1320E2);
          tensor[3,3] op1_e3_l_1620E5#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20E0,op1_e3_l_1420E3);
          tensor[3,3] op1_e3_l_1720E6#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1520E4,op1_e3_l_1620E5);
          tensor[3] op1_e3_l_2120EA#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (rot1F3A,pos1F60);
          tensor[3,3] op1_e3_l_2220EB#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_1720E6);
          tensor[3] op1_e3_l_2320EC#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * T2_{i1}))>(i1=0..2)>_{3} (rot1F3A,_t20BD,op1_e3_l_2120EA);
          tensor[3] _t1FE0#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2220EB,op1_e3_l_2320EC);
          goto JOIN1FE1
        ASSIGN20F9:  preds = [COND1F99]
          bool _t1F9D#1 = false;
          goto JOIN1F9E
        ASSIGN20FA:  preds = [COND1F94]
          bool _t1FA0#1 = false;
          goto JOIN1FA1
        ASSIGN20FB:  preds = [COND1F6C]
          bool _t1FA3#1 = false;
          goto JOIN1FA4
    end update
    method stabilize
        ENTRY20FC:  preds = []
          tensor[4] rgba20FD#1 = self.rgba;
          tensor[3] rgb20FF#3 = self.rgb;
          real transp2101#2 = self.transp;
          real _t2103#2 = 0.1e1;
          bool _t2105#1 = LT<real>(transp2101,_t2103);
          if _t2105 then goto ASSIGN2109 else goto JOIN211F
        ASSIGN2109:  preds = [COND2107]
          real aa2108#4 = λ(T0[],T1[])<(T0) - (T1)> (_t2103,transp2101);
          real _t210A#1 = TensorIndex<tensor[3],[0]>(rgb20FF);
          real _t210C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t210A,aa2108);
          real _t2110#1 = TensorIndex<tensor[3],[1]>(rgb20FF);
          real _t2112#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2110,aa2108);
          real _t2116#1 = TensorIndex<tensor[3],[2]>(rgb20FF);
          real _t2118#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2116,aa2108);
          tensor[4] rgba211C#1 = <tensor[4]>[_t210C,_t2112,_t2118,aa2108];
          goto JOIN211F
        JOIN211F:  preds = [ASSIGN211D,COND2107]
          tensor[4] rgba211E#1 = phi(rgba211C,rgba20FD)
          self.rgba = rgba211E;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY2122:  preds = []
      int iresU2123#1 = globals.iresU1CD9;
      int iresV2125#1 = globals.iresV1CDA;
      int _t2127#2 = 0;
      int _t2129#2 = 1;
      int _t212B#1 = ISub(iresV2125,_t2129);
      int[] _t212D#1 = Range(_t2127,_t212B);
    FOREACH2130:  preds = [ASSIGN212E,NEXT2139]
      foreach (vi212F in _t212D) on exit goto RETURN213A
      int _t2131#1 = ISub(iresU2123,_t2129);
      int[] _t2133#1 = Range(_t2127,_t2131);
    FOREACH2136:  preds = [ASSIGN2134,NEXT2138]
      foreach (ui2135 in _t2133) on exit goto NEXT2139
      new ray(ui2135,vi212F);
      goto FOREACH2136
    NEXT2139:  preds = [FOREACH2136]
      goto FOREACH2130
    RETURN213A:  preds = [FOREACH2130]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1CCD (block) = <no-default>
  input 0space0509_intermedateGlobal1CCE (space) = <no-default>
  input 0U050B_intermedateGlobal1CCF (U) = <no-default>
  input cellChoice1CD0 (cellChoice) = <no-default>
  input cmap1CD1 (cmap) = image("cmap.nrrd")
  input camEye1CD2 (camEye) = <default>
  input camAt1CD3 (camAt) = <default>
  input camUp1CD4 (camUp) = <default>
  input camNear1CD5 (camNear) = <default>
  input camFar1CD6 (camFar) = <default>
  input camFOV1CD7 (camFOV) = <default>
  input camOrtho1CD8 (camOrtho) = <default>
  input iresU1CD9 (iresU) = <default>
  input iresV1CDA (iresV) = <default>
  input rayStep1CDB (rayStep) = <default>
  input refStep1CDC (refStep) = <default>
  input transp01CDD (transp0) = <default>
  input thick1CDE (thick) = <default>
  input fStrTh1CDF (fStrTh) = <default>
  input fMaskTh1CE0 (fMaskTh) = <default>
  input fBias1CE1 (fBias) = <default>
  input maxAlpha1CE2 (maxAlpha) = <default>
  input light1CE3 (light) = <default>
  input phong1CE4 (phong) = <default>
  input mcNear1CE5 (mcNear) = <default>
  input mcFar1CE6 (mcFar) = <default>
  input litdir1CE7 (litdir) = <default>
  input cminmax1CE8 (cminmax) = <default>
  input analytical1CE9 (analytical) = <default>
  input umm1CEA (umm) = image("data.nrrd")
  input rot1CEB (rot) = <default>
  global tensor[3] camN1CEC
  global tensor[3] camU1CED
  global tensor[3] camV1CEE
  global real camDist1CEF
  global real camVmax1CF0
  global real camUmax1CF1
  global real camNearVsp1CF2
  global real camFarVsp1CF3
  global tensor[3] litwsp1CF4
  global int _t1CF5
  global femData:Space _tX1CF6
  global femData:FemFunc _tXX1CF7
  global image(IMAGE1D<double[3]>) img1CF8
  global kernel _tXXX1CF9
## functions
## input initialization
  ENTRY1CFA:  preds = []
    real _t1CFB#17 = 0.e0;
    real _t1CFD#1 = -0.2e1;
    tensor[3] camEye1CFF#1 = <tensor[3]>[_t1CFB,_t1CFD,_t1CFB];
    globals.camEye1CD2 = camEye1CFF;
    tensor[3] camAt1D02#1 = <tensor[3]>[_t1CFB,_t1CFB,_t1CFB];
    globals.camAt1CD3 = camAt1D02;
    real _t1D05#7 = 0.1e1;
    tensor[3] camUp1D07#2 = <tensor[3]>[_t1CFB,_t1CFB,_t1D05];
    globals.camUp1CD4 = camUp1D07;
    real camNear1D0A#1 = -0.4e1;
    globals.camNear1CD5 = camNear1D0A;
    real camFar1D0D#1 = 0.4e1;
    globals.camFar1CD6 = camFar1D0D;
    real camFOV1D10#1 = 0.1e2;
    globals.camFOV1CD7 = camFOV1D10;
    bool camOrtho1D13#2 = false;
    globals.camOrtho1CD8 = camOrtho1D13;
    int iresU1D16#2 = 100;
    globals.iresU1CD9 = iresU1D16;
    globals.iresV1CDA = iresU1D16;
    real rayStep1D1A#2 = 0.1e-3;
    globals.rayStep1CDB = rayStep1D1A;
    globals.refStep1CDC = rayStep1D1A;
    real transp01D1E#1 = 0.5e-2;
    globals.transp01CDD = transp01D1E;
    real thick1D21#1 = 0.1e-1;
    globals.thick1CDE = thick1D21;
    globals.fStrTh1CDF = _t1CFB;
    globals.fMaskTh1CE0 = _t1CFB;
    real fBias1D26#2 = 0.1e0;
    globals.fBias1CE1 = fBias1D26;
    globals.maxAlpha1CE2 = _t1D05;
    globals.light1CE3 = camOrtho1D13;
    real _t1D2B#1 = 0.7e0;
    real _t1D2D#1 = 0.2e0;
    real _t1D2F#1 = 0.1e3;
    tensor[4] phong1D31#1 = <tensor[4]>[fBias1D26,_t1D2B,_t1D2D,_t1D2F];
    globals.phong1CE4 = phong1D31;
    tensor[3] mcNear1D34#2 = <tensor[3]>[_t1D05,_t1D05,_t1D05];
    globals.mcNear1CE5 = mcNear1D34;
    globals.mcFar1CE6 = mcNear1D34;
    real _t1D38#1 = -0.1e1;
    tensor[3] litdir1D3A#1 = <tensor[3]>[_t1CFB,_t1D38,_t1CFB];
    globals.litdir1CE7 = litdir1D3A;
    tensor[2] cminmax1D3D#1 = <tensor[2]>[_t1CFB,_t1CFB];
    globals.cminmax1CE8 = cminmax1D3D;
    bool analytical1D40#1 = true;
    globals.analytical1CE9 = analytical1D40;
    tensor[3] _t1D43#1 = <tensor[3]>[_t1D05,_t1CFB,_t1CFB];
    tensor[3] _t1D45#1 = <tensor[3]>[_t1CFB,_t1D05,_t1CFB];
    tensor[3,3] rot1D47#1 = <tensor[3,3]>[_t1D43,_t1D45,camUp1D07];
    globals.rot1CEB = rot1D47;
    return
## global-variable initialization
  ENTRY1D4B:  preds = []
    femData:Mesh block1D4C#3 = globals.block1CCD;
    femData:Space 0space0509_intermedateGlobal1D4E#1 = globals.0space0509_intermedateGlobal1CCE;
    femData:FemFunc 0U050B_intermedateGlobal1D50#1 = globals.0U050B_intermedateGlobal1CCF;
    int cellChoice1D52#1 = globals.cellChoice1CD0;
    image(IMAGE1D<double[3]>) cmap1D54#1 = globals.cmap1CD1;
    tensor[3] camEye1D56#1 = globals.camEye1CD2;
    tensor[3] camAt1D58#1 = globals.camAt1CD3;
    tensor[3] camUp1D5A#1 = globals.camUp1CD4;
    real camNear1D5C#1 = globals.camNear1CD5;
    real camFar1D5E#1 = globals.camFar1CD6;
    real camFOV1D60#1 = globals.camFOV1CD7;
    int iresU1D62#1 = globals.iresU1CD9;
    int iresV1D64#1 = globals.iresV1CDA;
    tensor[3] litdir1D66#2 = globals.litdir1CE7;
    int _t1D68#1 = 0;
    int _t1D6A#1 = 1;
    int _t1D6C#1 = ExtractFemItem<int,NumCell(Mesh)>(block1D4C);
    int _t1D6E#1 = ISub(_t1D6C,_t1D6A);
    int[] _t1D70#1 = Range(_t1D68,_t1D6E);
    femData:MeshCell[] _t1D72#1 = <femData:MeshCell[]>{};
  FOREACH1D75:  preds = [ASSIGN1D73,NEXT1D7B]
    foreach (_t1D74 in _t1D70) on exit goto ASSIGN1D7D
      femData:MeshCell[] _t1D79#2 = phi(_t1D72,_t1D78)
    femData:MeshCell _t1D76#1 = LoadFem<femData:MeshCell>(block1D4C,_t1D74);
    femData:MeshCell[] _t1D78#1 = Append<femData:MeshCell>(_t1D79,_t1D76);
    goto FOREACH1D75
  ASSIGN1D7D:  preds = [FOREACH1D75]
    femData:Space space1D7C#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1D4E,block1D4C);
    femData:FemFunc U1D7E#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1D50,space1D7C);
    femData:MeshCell c11D80#1 = Subscript<femData:MeshCell[]>(_t1D79,cellChoice1D52);
    int _t1D82#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11D80);
    femData:FuncCell _t1D84#2 = LoadFem<femData:FuncCell>(U1D7E,_t1D82);
    femData:FemFunc _t1D86#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1D84);
    femData:Space _t1D88#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1D86);
    int _t1D8A#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1D84);
    kernel _t1D8C#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1D8E#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1D54);
    tensor[3] op1_e3_l_41D91#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1D58,camEye1D56);
    real op1_e3_l_61D92#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D91,op1_e3_l_41D91);
    real op1_e3_l_71D93#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D92);
    real op1_e3_l_91D94#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D93);
    tensor[3] camN1D90#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D91,op1_e3_l_91D94);
    globals.camN1CEC = camN1D90;
    tensor[3,3] op1_e3_l_151D9F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1D5A);
    tensor[3] op1_e3_l_171DA1#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D91,op1_e3_l_151D9F);
    real op1_e3_l_341DA2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171DA1,op1_e3_l_171DA1);
    real op1_e3_l_351DA3#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91D94,op1_e3_l_91D94,op1_e3_l_341DA2);
    real op1_e3_l_361DA4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351DA3);
    tensor[3] op1_e3_l_371DA5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D94,op1_e3_l_171DA1);
    real op1_e3_l_381DA6#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361DA4);
    tensor[3] camU1D9B#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371DA5,op1_e3_l_381DA6);
    globals.camU1CED = camU1D9B;
    tensor[3,3] op1_e3_l_451DBE#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171DA1);
    tensor[3] op1_e3_l_471DBF#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D91,op1_e3_l_451DBE);
    tensor[3] op1_e3_l_501DC1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D94,op1_e3_l_471DBF);
    tensor[3] camV1DB4#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91D94,op1_e3_l_381DA6,op1_e3_l_501DC1);
    globals.camV1CEE = camV1DB4;
    globals.camDist1CEF = op1_e3_l_71D93;
    real _t1DD8#1 = 0.314159265358979323846264338327950288e1;
    real _t1DDA#1 = 0.36e3;
    real op1_e3_l_51DDD#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1D60,_t1DD8);
    real op1_e3_l_61DDE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1DDA,op1_e3_l_51DDD);
    real op1_e3_l_101DE1#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61DDE);
    real camVmax1DDC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101DE1,op1_e3_l_71D93);
    globals.camVmax1CF0 = camVmax1DDC;
    real _t1DEB#1 = IntToReal(iresU1D62);
    real _t1DED#1 = IntToReal(iresV1D64);
    real op1_e3_l_141DF6#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1DEB,op1_e3_l_101DE1,op1_e3_l_71D93);
    real camUmax1DEF#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1DED,op1_e3_l_141DF6);
    globals.camUmax1CF1 = camUmax1DEF;
    real camNearVsp1E00#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1D5C,op1_e3_l_71D93);
    globals.camNearVsp1CF2 = camNearVsp1E00;
    real camFarVsp1E09#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1D5E,op1_e3_l_71D93);
    globals.camFarVsp1CF3 = camFarVsp1E09;
    tensor[3,3] _t1E12#1 = <tensor[3,3]>[camU1D9B,camV1DB4,camN1D90];
    real op1_e3_l_31E15#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1D66);
    real op1_e3_l_41E16#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31E15);
    real op1_e3_l_51E17#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41E16);
    tensor[3] op1_e3_l_61E18#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1E12,litdir1D66);
    tensor[3] litwsp1E14#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51E17,op1_e3_l_61E18);
    globals.litwsp1CF4 = litwsp1E14;
    globals._t1CF5 = _t1D8A;
    globals._tX1CF6 = _t1D88;
    globals._tXX1CF7 = _t1D86;
    globals.img1CF8 = img1D8E;
    globals._tXXX1CF9 = _t1D8C;
    return
## strand
  strand ray (int ui1E25#1, int vi1E26#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1E37:  preds = []
        tensor[3] camEye1E38#1 = globals.camEye1CD2;
        bool camOrtho1E3A#2 = globals.camOrtho1CD8;
        int iresU1E3C#1 = globals.iresU1CD9;
        int iresV1E3E#1 = globals.iresV1CDA;
        real rayStep1E40#1 = globals.rayStep1CDB;
        real refStep1E42#1 = globals.refStep1CDC;
        tensor[4] phong1E44#4 = globals.phong1CE4;
        tensor[3] camN1E46#1 = globals.camN1CEC;
        tensor[3] camU1E48#1 = globals.camU1CED;
        tensor[3] camV1E4A#1 = globals.camV1CEE;
        real camDist1E4C#1 = globals.camDist1CEF;
        real camVmax1E4E#2 = globals.camVmax1CF0;
        real camUmax1E50#2 = globals.camUmax1CF1;
        real camNearVsp1E52#1 = globals.camNearVsp1CF2;
        real _t1E54#5 = -0.5e0;
        real _t1E56#1 = IntToReal(ui1E25);
        real _t1E58#1 = IntToReal(iresU1E3C);
        real _t1E5A#3 = 0.5e0;
        real op1_e3_l_61E5D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E58,_t1E5A);
        real op1_e3_l_71E5E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E56);
        real op1_e3_l_81E5F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_61E5D);
        real op1_e3_l_91E60#2 = λ(T0[])<Neg(T0)> (camUmax1E50);
        real op1_e3_l_101E61#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E5E,op1_e3_l_81E5F);
        real op1_e3_l_111E62#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1E50,op1_e3_l_91E60);
        real op1_e3_l_131E63#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E61,op1_e3_l_111E62);
        real rayU1E5C#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E60,op1_e3_l_131E63);
        real _t1E6C#1 = IntToReal(vi1E26);
        real _t1E6E#2 = IntToReal(iresV1E3E);
        real op1_e3_l_61E71#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E6E,_t1E5A);
        real op1_e3_l_71E72#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,_t1E6C);
        real op1_e3_l_81E73#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_61E71);
        real op1_e3_l_91E74#3 = λ(T0[])<Neg(T0)> (camVmax1E4E);
        real op1_e3_l_101E75#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E72,op1_e3_l_81E73);
        real op1_e3_l_111E76#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1E4E,op1_e3_l_91E74);
        real op1_e3_l_131E77#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E75,op1_e3_l_111E76);
        real rayV1E70#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E74,op1_e3_l_131E77);
        real op1_e3_l_231E89#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E5A,_t1E6E);
        real op1_e3_l_251E8B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E54,op1_e3_l_231E89);
        real op1_e3_l_271E8D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E72,op1_e3_l_251E8B);
        real op1_e3_l_301E8F#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271E8D,op1_e3_l_111E76);
        real op1_e3_l_311E90#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E74,op1_e3_l_301E8F);
        tensor[3] op1_e3_l_321E91#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1E48,rayU1E5C);
        tensor[3] op1_e3_l_331E92#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1E4A,op1_e3_l_311E90);
        tensor[3] UV1E80#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321E91,op1_e3_l_331E92);
        if camOrtho1E3A then goto JOIN1EA9 else goto ASSIGN1F15
      JOIN1EA9:  preds = [COND1EA6,ASSIGN1F16]
        tensor[3] _t1EA7#1 = phi(UV1E80,_t1EA8)
        tensor[3] rayOrig1EAA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1E38,_t1EA7);
        if camOrtho1E3A then goto ASSIGN1EAE else goto ASSIGN2151
      ASSIGN1EAE:  preds = [COND1EAC]
        real _t1EAD#3 = 0.e0;
        tensor[3] _t1EAF#1 = <tensor[3]>[_t1EAD,_t1EAD,_t1EAD];
        goto JOIN1EB3
      JOIN1EB3:  preds = [ASSIGN1EB0,ASSIGN2151]
        tensor[3] _t1EB1#1 = phi(_t1EAF,_t1EB2)
        tensor[3] rayVec1EB4#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1E46,_t1EB1);
        real op1_e3_l_61EB8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1EB4,rayVec1EB4);
        real op1_e3_l_71EB9#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61EB8);
        real op1_e3_l_81EBA#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1E40,op1_e3_l_71EB9);
        real alphaFix1EB6#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1E42,op1_e3_l_81EBA);
        real op1_e3_l_91EC4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71EB9);
        tensor[3] op1_e3_l_101EC5#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1EB4,op1_e3_l_91EC4);
        tensor[3] eyeDir1EC0#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101EC5);
        real phKa1ECC#1 = TensorIndex<tensor[4],[0]>(phong1E44);
        real phKd1ECE#1 = TensorIndex<tensor[4],[1]>(phong1E44);
        real phKs1ED0#1 = TensorIndex<tensor[4],[2]>(phong1E44);
        real phSp1ED2#1 = TensorIndex<tensor[4],[3]>(phong1E44);
        real _t1ED4#8 = 0.e0;
        tensor[4] rgba1ED6#1 = <tensor[4]>[_t1ED4,_t1ED4,_t1ED4,_t1ED4];
        tensor[3] rgb1ED8#1 = <tensor[3]>[_t1ED4,_t1ED4,_t1ED4];
        real transp1EDA#1 = 0.1e1;
        self.rayU = rayU1E5C;
        self.rayV = rayV1E70;
        self.rayN = camNearVsp1E52;
        self.UV = UV1E80;
        self.rayOrig = rayOrig1EAA;
        self.rayVec = rayVec1EB4;
        self.alphaFix = alphaFix1EB6;
        self.eyeDir = eyeDir1EC0;
        self.phKa = phKa1ECC;
        self.phKd = phKd1ECE;
        self.phKs = phKs1ED0;
        self.phSp = phSp1ED2;
        self.rgba = rgba1ED6;
        self.raw = _t1ED4;
        self.rgb = rgb1ED8;
        self.transp = transp1EDA;
        return
      ASSIGN2151:  preds = [COND1EAC]
        tensor[3] _t1EB2#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1E4C,UV1E80);
        goto JOIN1EB3
      ASSIGN1F15:  preds = [COND1EA6]
        real _t1F14#3 = 0.e0;
        tensor[3] _t1EA8#1 = <tensor[3]>[_t1F14,_t1F14,_t1F14];
        goto JOIN1EA9
    end state init
    method update
        ENTRY1F17:  preds = []
          image(IMAGE1D<double[3]>) cmap213C#5 = globals.cmap1CD1;
          int _t1F18#8 = globals._t1CF5;
          femData:Space _t1F1A#8 = globals._tX1CF6;
          femData:FemFunc _t1F1C#8 = globals._tXX1CF7;
          image(IMAGE1D<double[3]>) img1F1E#1 = globals.img1CF8;
          kernel _t1F20#1 = globals._tXXX1CF9;
          femData:Mesh block1F22#1 = globals.block1CCD;
          real rayStep1F24#1 = globals.rayStep1CDB;
          real transp01F26#1 = globals.transp01CDD;
          real thick1F28#1 = globals.thick1CDE;
          real fStrTh1F2A#1 = globals.fStrTh1CDF;
          real fMaskTh1F2C#1 = globals.fMaskTh1CE0;
          real fBias1F2E#1 = globals.fBias1CE1;
          real maxAlpha1F30#2 = globals.maxAlpha1CE2;
          tensor[3] mcNear1F32#2 = globals.mcNear1CE5;
          tensor[3] mcFar1F34#1 = globals.mcFar1CE6;
          tensor[2] cminmax1F36#2 = globals.cminmax1CE8;
          bool analytical1F38#1 = globals.analytical1CE9;
          tensor[3,3] rot1F3A#4 = globals.rot1CEB;
          real camNearVsp1F3C#2 = globals.camNearVsp1CF2;
          real camFarVsp1F3E#2 = globals.camFarVsp1CF3;
          tensor[3] litwsp1F40#2 = globals.litwsp1CF4;
          real rayN1F42#1 = self.rayN;
          tensor[3] rayOrig1F44#2 = self.rayOrig;
          tensor[3] rayVec1F46#1 = self.rayVec;
          real alphaFix1F48#1 = self.alphaFix;
          tensor[3] eyeDir1F4A#1 = self.eyeDir;
          real phKa1F4C#1 = self.phKa;
          real phKd1F4E#1 = self.phKd;
          real phKs1F50#2 = self.phKs;
          real phSp1F52#1 = self.phSp;
          tensor[3] rgb1F54#1 = self.rgb;
          real transp1F56#2 = self.transp;
          real rayN1F58#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1F42,rayStep1F24);
          bool _t1F5A#1 = GT<real>(rayN1F58,camFarVsp1F3E);
          if _t1F5A then goto SAVE1F5D else goto JOIN1F5F
        SAVE1F5D:  preds = [COND1F5C]
          self.rayN = rayN1F58;
          stabilize
          goto JOIN1F5F
        JOIN1F5F:  preds = [*STABILIZE1F5E,COND1F5C]
          tensor[3] op1_e3_l_51F62#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1F46,rayN1F58);
          tensor[3] pos1F60#14 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1F44,op1_e3_l_51F62);
          femData:RefCell _t1F66#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1F22);
          real _t1F68#1 = 0.1e-8;
          bool _t1F6A#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1F66,pos1F60,_t1F68);
          if _t1F6A then goto ASSIGN1F72 else goto ASSIGN20FB
        ASSIGN1F72:  preds = [COND1F6C]
          int[84] femIndicies1F6F#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1F70#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1F6F);
          tensor[3,3,84] basisResult1F71#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1F60);
          tensor[3,3] _t1F6D#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1F70,basisResult1F71,pos1F60);
          real[3] _t1F77#1 = EigenVals3x3(_t1F6D);
          int _t1F7A#1 = 1;
          real _t1F7C#1 = Subscript<real[3]>(_t1F77,_t1F7A);
          tensor[3,84] basisResult1F87#1 = EvaluateBasis<BasisArray(3,84)>(pos1F60);
          tensor[3] probe_l_61F7F#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1F70,basisResult1F87,pos1F60);
          real op1_e3_l_81F80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61F7F,probe_l_61F7F);
          real op1_e3_l_91F81#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81F80);
          real op1_e3_l_101F82#1 = λ(T0[])<Neg(T0)> (_t1F7C);
          real op1_e3_l_111F83#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1F2E,op1_e3_l_91F81);
          real _t1F7E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101F82,op1_e3_l_111F83);
          bool _t1F92#1 = GT<real>(_t1F7E,fStrTh1F2A);
          if _t1F92 then goto ASSIGN1F96 else goto ASSIGN20FA
        ASSIGN1F96:  preds = [COND1F94]
          real _t1F95#1 = 0.1e1;
          bool _t1F97#1 = GTE<real>(_t1F95,fMaskTh1F2C);
          if _t1F97 then goto ASSIGN1F9B else goto ASSIGN20F9
        ASSIGN1F9B:  preds = [COND1F99]
          bool _t1F9A#1 = true;
          goto JOIN1F9E
        JOIN1F9E:  preds = [ASSIGN1F9B,ASSIGN20F9]
          bool _t1F9C#1 = phi(_t1F9A,_t1F9D)
          goto JOIN1FA1
        JOIN1FA1:  preds = [JOIN1F9E,ASSIGN20FA]
          bool _t1F9F#1 = phi(_t1F9C,_t1FA0)
          goto JOIN1FA4
        JOIN1FA4:  preds = [JOIN1FA1,ASSIGN20FB]
          bool _t1FA2#1 = phi(_t1F9F,_t1FA3)
          bool _t1FA5#1 = BNot(_t1FA2);
          if _t1FA5 then goto SAVE1FA8 else goto JOIN1FAA
        SAVE1FA8:  preds = [COND1FA7]
          self.rayN = rayN1F58;
          active
          goto JOIN1FAA
        JOIN1FAA:  preds = [*ACTIVE1FA9,COND1FA7]
          bool _t1FAB#1 = BNot(analytical1F38);
          if _t1FAB then goto ASSIGN1FB3 else goto ASSIGN2167
        ASSIGN1FB3:  preds = [COND1FAD]
          int[84] femIndicies1FB0#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs1FB1#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies1FB0);
          tensor[3,3,84] basisResult1FB2#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1F60);
          tensor[3,3] _t1FAE#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1FB1,basisResult1FB2,pos1F60);
          (real[3] evals1FB8#2,tensor[3][3] E1FB9#2) = EigenVecs3x3(_t1FAE);
          int _t1FBB#2 = 2;
          tensor[3] _t1FBD#1 = Subscript<tensor[3][3]>(E1FB9,_t1FBB);
          real _t1FBF#1 = Subscript<real[3]>(evals1FB8,_t1FBB);
          int _t1FC1#2 = 1;
          tensor[3] _t1FC3#1 = Subscript<tensor[3][3]>(E1FB9,_t1FC1);
          real _t1FC5#1 = Subscript<real[3]>(evals1FB8,_t1FC1);
          tensor[3,3] op1_e3_l_101FC8#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1FBD);
          tensor[3,3] op1_e3_l_111FC9#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1FC3);
          tensor[3,3] op1_e3_l_121FCA#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1FBF,op1_e3_l_101FC8);
          tensor[3,3] op1_e3_l_131FCB#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1FC5,op1_e3_l_111FC9);
          tensor[3,3] op1_e3_l_141FCC#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_121FCA,op1_e3_l_131FCB);
          tensor[3,84] basisResult1FD2#1 = EvaluateBasis<BasisArray(3,84)>(pos1F60);
          tensor[3] probe_l_151FCD#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1F18,_t1F1A,_t1F1C,pos1F60,femDofs1FB1,basisResult1FD2,pos1F60);
          tensor[3,3] op1_e3_l_161FCE#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_141FCC);
          tensor[3] _t1FC7#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_151FCD,op1_e3_l_161FCE);
          goto JOIN1FE1
        JOIN1FE1:  preds = [ASSIGN1FDE,ASSIGN20F8]
          tensor[3] step1FDF#4 = phi(_t1FC7,_t1FE0)
          real _t1FE2#8 = 0.e0;
          real _t1FE4#10 = 0.1e1;
          real _t1FE6#1 = 0.15e1;
          real op1_e3_l_71FE9#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1FDF);
          real op1_e3_l_81FEA#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_71FE9);
          real op1_e3_l_91FEB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_81FEA);
          real op1_e3_l_101FEC#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1F28,op1_e3_l_91FEB);
          real op1_e3_l_111FED#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_101FEC);
          real op1_e3_l_121FEE#2 = λ(T0[],T1[])<(T0 * T1)> (_t1FE6,op1_e3_l_111FED);
          real op1_e3_l_131FEF#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1FE2,_t1FE4,op1_e3_l_121FEE);
          real _t1FE8#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1F30,op1_e3_l_131FEF);
          bool _t1FF8#1 = EQ<real>(_t1FE8,_t1FE2);
          if _t1FF8 then goto SAVE1FFB else goto JOIN1FFD
        SAVE1FFB:  preds = [COND1FFA]
          self.rayN = rayN1F58;
          active
          goto JOIN1FFD
        JOIN1FFD:  preds = [*ACTIVE1FFC,COND1FFA]
          real op1_e3_l_142005#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1FE4,_t1FE2,op1_e3_l_121FEE);
          real op1_e3_l_152006#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1F30,op1_e3_l_142005);
          real _t1FFE#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_152006);
          real _t2010#1 = MathFn<pow>(_t1FFE,alphaFix1F48);
          bool _t2012#1 = NEQ<real>(phKs1F50,_t1FE2);
          if _t2012 then goto ASSIGN2021 else goto JOIN2030
        ASSIGN2021:  preds = [COND2014]
          tensor[3] op1_e3_l_62016#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1F4A,litwsp1F40);
          real op1_e3_l_82017#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_62016,op1_e3_l_62016);
          real op1_e3_l_92018#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_82017);
          real op1_e3_l_12201B#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81FEA);
          tensor[3] op1_e3_l_13201C#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1FDF,op1_e3_l_12201B);
          tensor[3] op1_e3_l_14201D#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_13201C);
          real op1_e3_l_16201E#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_92018);
          real op1_e3_l_17201F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_14201D,op1_e3_l_62016);
          real op1_e3_l_182020#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_16201E,op1_e3_l_17201F);
          real _t2015#1 = λ(T0[])<Abs(T0)> (op1_e3_l_182020);
          real scomp202D#1 = MathFn<pow>(_t2015,phSp1F52);
          goto JOIN2030
        JOIN2030:  preds = [ASSIGN202E,COND2014]
          real scomp202F#1 = phi(scomp202D,_t1FE2)
          real cmin2031#3 = TensorIndex<tensor[2],[0]>(cminmax1F36);
          real cmax2033#2 = TensorIndex<tensor[2],[1]>(cminmax1F36);
          tensor[3] mcol2035#2 = <tensor[3]>[_t1FE4,_t1FE4,_t1FE4];
          bool _t2037#1 = NEQ<real>(cmin2031,cmax2033);
          if _t2037 then goto ASSIGN215D else goto JOIN2071
        ASSIGN215D:  preds = [COND2039]
          tensor[3] _t203A#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (rayOrig1F44,step1FDF,op1_e3_l_51F62);
          int[84] femIndicies2048#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1F1A,_t1F18);
          tensor[84] femDofs2049#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1F1C,femIndicies2048);
          tensor[84] basisResult204A#1 = EvaluateBasis<BasisArray(84)>(_t203A);
          real probe_l_82041#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1F18,_t1F1A,_t1F1C,_t203A,femDofs2049,basisResult204A,_t203A);
          real op1_e3_l_92042#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin2031,probe_l_82041);
          real op1_e3_l_102043#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin2031,cmax2033);
          real op1_e3_l_112044#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_92042,op1_e3_l_102043);
          real op1_e3_l_122045#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1FE2,_t1FE4);
          real op1_e3_l_132046#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_112044,op1_e3_l_122045);
          real _t2040#2 = λ(T0[],T1[])<(T0 + T1)> (_t1FE2,op1_e3_l_132046);
          real Mtransform2057#2 = Transform<IMAGE1D<double[3]>>(cmap213C);
          real MxPos2058#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform2057,_t2040);
          real Ttranslate2059#1 = Translate<IMAGE1D<double[3]>>(cmap213C);
          real imgPos205A#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos2058,Ttranslate2059);
          real nd205B#2 = Floor<1>(imgPos205A);
          real f205C#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos205A,nd205B);
          int n205D#1 = RealToInt<1>(nd205B);
          int idx205F#3 = n205D;
          bool isInside216C#1 = IndexInside<IMAGE1D<double[3]>,2>(idx205F,cmap213C);
          if isInside216C then goto ASSIGN216D else goto ASSIGN216E
        ASSIGN216D:  preds = [COND2170]
          tensor[3,2] ldvox216A#1 = LoadVoxels<IMAGE1D<double[3]>,2>(cmap213C,idx205F);
          goto JOIN2171
        JOIN2171:  preds = [ASSIGN216D,ASSIGN216E]
          tensor[3,2] ldvox2060#1 = phi(ldvox216A,ldvox216B)
          tensor[2] kernX_2061#1 = BuildPos<1>(f205C);
          tensor[2] kevalX_d0_2062#1 = EvalKernel<2,tent,0>(kernX_2061);
          tensor[3] mcol2056#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1F1E,_t1F20,_t2040,Mtransform2057,ldvox2060,kevalX_d0_2062);
          goto JOIN2071
        JOIN2071:  preds = [ASSIGN206F,COND2039]
          tensor[3] mcol2070#1 = phi(mcol2056,mcol2035)
          real op1_e3_l_212075#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81FEA);
          tensor[3] op1_e3_l_222076#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1FDF,op1_e3_l_212075);
          tensor[3] op1_e3_l_232077#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_222076);
          real op1_e3_l_242078#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1F40,op1_e3_l_232077);
          real op1_e3_l_252079#1 = λ(T0[])<(T0)^2> (op1_e3_l_242078);
          real op1_e3_l_26207A#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1F4E,op1_e3_l_252079);
          real op1_e3_l_28207C#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1F3C,rayN1F58);
          real op1_e3_l_29207D#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1F3C,camFarVsp1F3E);
          real op1_e3_l_30207E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_28207C,op1_e3_l_29207D);
          tensor[3] op1_e3_l_31207F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1F32,mcFar1F34);
          tensor[3] op1_e3_l_322080#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_30207E,op1_e3_l_31207F);
          real op1_e3_l_332081#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1F4C,op1_e3_l_26207A);
          tensor[3] op1_e3_l_342082#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1F32,op1_e3_l_322080);
          tensor[3] op1_e3_l_352083#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2070,op1_e3_l_332081,op1_e3_l_342082);
          tensor[3] op1_e3_l_362084#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1F50,scomp202F,mcol2035);
          real op1_e3_l_372085#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,_t2010);
          tensor[3] op1_e3_l_382086#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_352083,op1_e3_l_362084);
          tensor[3] op1_e3_l_392087#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1F56,op1_e3_l_372085,op1_e3_l_382086);
          tensor[3] rgb2072#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1F54,op1_e3_l_392087);
          real op1_e3_l_520A0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1FE4,op1_e3_l_372085);
          real transp209E#2 = λ(T0[],T1[])<(T0 * T1)> (transp1F56,op1_e3_l_520A0);
          bool _t20A4#1 = LT<real>(transp209E,transp01F26);
          if _t20A4 then goto SAVE20A7 else goto JOIN20AC
        SAVE20A7:  preds = [COND20A6]
          self.rayN = rayN1F58;
          self.rgb = rgb2072;
          self.transp = _t1FE2;
          stabilize
          goto JOIN20AC
        JOIN20AC:  preds = [*STABILIZE20AA,COND20A6]
          real transp20AB#1 = phi(transp209E)
          self.rayN = rayN1F58;
          self.rgb = rgb2072;
          self.transp = transp20AB;
          active
        ASSIGN216E:  preds = [COND2170]
          tensor[3,2] ldvox216B#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap213C,idx205F);
          goto JOIN2171
        ASSIGN2167:  preds = [COND1FAD]
          real _t20B3#1 = -0.1e1;
          real _t20B7#1 = -0.2e1;
          real _t20BB#1 = -0.3e1;
          tensor[3] _t20BD#1 = <tensor[3]>[_t20B3,_t20B7,_t20BB];
          real _t20BF#1 = -0.1e1;
          real _t20C1#6 = 0.e0;
          tensor[3] _t20C3#1 = <tensor[3]>[_t20BF,_t20C1,_t20C1];
          real _t20C5#1 = -0.2e1;
          tensor[3] _t20C7#1 = <tensor[3]>[_t20C1,_t20C5,_t20C1];
          real _t20C9#1 = -0.3e1;
          tensor[3] _t20CB#1 = <tensor[3]>[_t20C1,_t20C1,_t20C9];
          tensor[3,3] _t20CD#1 = <tensor[3,3]>[_t20C3,_t20C7,_t20CB];
          tensor[3,3] op1_e3_l_320D0#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (rot1F3A,_t20CD);
          tensor[3,3] H20CF#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T1_{i0,i2} * T0_{i2,i1}))>(i2=0..2)>_{3 3} (rot1F3A,op1_e3_l_320D0);
          (real[3] evals20D3#2,tensor[3][3] E20D4#2) = EigenVecs3x3(H20CF);
          int _t20D6#2 = 2;
          tensor[3] _t20D8#1 = Subscript<tensor[3][3]>(E20D4,_t20D6);
          real _t20DA#1 = Subscript<real[3]>(evals20D3,_t20D6);
          int _t20DC#2 = 1;
          tensor[3] _t20DE#1 = Subscript<tensor[3][3]>(E20D4,_t20DC);
          real _t20E0#1 = Subscript<real[3]>(evals20D3,_t20DC);
          tensor[3,3] op1_e3_l_1320E2#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20D8);
          tensor[3,3] op1_e3_l_1420E3#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20DE);
          tensor[3,3] op1_e3_l_1520E4#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20DA,op1_e3_l_1320E2);
          tensor[3,3] op1_e3_l_1620E5#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20E0,op1_e3_l_1420E3);
          tensor[3,3] op1_e3_l_1720E6#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1520E4,op1_e3_l_1620E5);
          tensor[3] op1_e3_l_2120EA#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (rot1F3A,pos1F60);
          tensor[3,3] op1_e3_l_2220EB#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_1720E6);
          tensor[3] op1_e3_l_2320EC#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * T2_{i1}))>(i1=0..2)>_{3} (rot1F3A,_t20BD,op1_e3_l_2120EA);
          tensor[3] _t1FE0#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2220EB,op1_e3_l_2320EC);
          goto JOIN1FE1
        ASSIGN20F9:  preds = [COND1F99]
          bool _t1F9D#1 = false;
          goto JOIN1F9E
        ASSIGN20FA:  preds = [COND1F94]
          bool _t1FA0#1 = false;
          goto JOIN1FA1
        ASSIGN20FB:  preds = [COND1F6C]
          bool _t1FA3#1 = false;
          goto JOIN1FA4
    end update
    method stabilize
        ENTRY20FC:  preds = []
          tensor[4] rgba20FD#1 = self.rgba;
          tensor[3] rgb20FF#3 = self.rgb;
          real transp2101#2 = self.transp;
          real _t2103#2 = 0.1e1;
          bool _t2105#1 = LT<real>(transp2101,_t2103);
          if _t2105 then goto ASSIGN2109 else goto JOIN211F
        ASSIGN2109:  preds = [COND2107]
          real aa2108#4 = λ(T0[],T1[])<(T0) - (T1)> (_t2103,transp2101);
          real _t210A#1 = TensorIndex<tensor[3],[0]>(rgb20FF);
          real _t210C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t210A,aa2108);
          real _t2110#1 = TensorIndex<tensor[3],[1]>(rgb20FF);
          real _t2112#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2110,aa2108);
          real _t2116#1 = TensorIndex<tensor[3],[2]>(rgb20FF);
          real _t2118#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2116,aa2108);
          tensor[4] rgba211C#1 = <tensor[4]>[_t210C,_t2112,_t2118,aa2108];
          goto JOIN211F
        JOIN211F:  preds = [ASSIGN211D,COND2107]
          tensor[4] rgba211E#1 = phi(rgba211C,rgba20FD)
          self.rgba = rgba211E;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY2122:  preds = []
      int iresU2123#1 = globals.iresU1CD9;
      int iresV2125#1 = globals.iresV1CDA;
      int _t2127#2 = 0;
      int _t2129#2 = 1;
      int _t212B#1 = ISub(iresV2125,_t2129);
      int[] _t212D#1 = Range(_t2127,_t212B);
    FOREACH2130:  preds = [ASSIGN212E,NEXT2139]
      foreach (vi212F in _t212D) on exit goto RETURN213A
      int _t2131#1 = ISub(iresU2123,_t2129);
      int[] _t2133#1 = Range(_t2127,_t2131);
    FOREACH2136:  preds = [ASSIGN2134,NEXT2138]
      foreach (ui2135 in _t2133) on exit goto NEXT2139
      new ray(ui2135,vi212F);
      goto FOREACH2136
    NEXT2139:  preds = [FOREACH2136]
      goto FOREACH2130
    RETURN213A:  preds = [FOREACH2130]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2172 (block) = <no-default>
  input 0space0509_intermedateGlobal2173 (space) = <no-default>
  input 0U050B_intermedateGlobal2174 (U) = <no-default>
  input cellChoice2175 (cellChoice) = <no-default>
  input cmap2176 (cmap) = image("cmap.nrrd")
  input camEye2177 (camEye) = <default>
  input camAt2178 (camAt) = <default>
  input camUp2179 (camUp) = <default>
  input camNear217A (camNear) = <default>
  input camFar217B (camFar) = <default>
  input camFOV217C (camFOV) = <default>
  input camOrtho217D (camOrtho) = <default>
  input iresU217E (iresU) = <default>
  input iresV217F (iresV) = <default>
  input rayStep2180 (rayStep) = <default>
  input refStep2181 (refStep) = <default>
  input transp02182 (transp0) = <default>
  input thick2183 (thick) = <default>
  input fStrTh2184 (fStrTh) = <default>
  input fMaskTh2185 (fMaskTh) = <default>
  input fBias2186 (fBias) = <default>
  input maxAlpha2187 (maxAlpha) = <default>
  input light2188 (light) = <default>
  input phong2189 (phong) = <default>
  input mcNear218A (mcNear) = <default>
  input mcFar218B (mcFar) = <default>
  input litdir218C (litdir) = <default>
  input cminmax218D (cminmax) = <default>
  input analytical218E (analytical) = <default>
  input umm218F (umm) = image("data.nrrd")
  input rot2190 (rot) = <default>
  global tensor[3] camN2191
  global tensor[3] camU2192
  global tensor[3] camV2193
  global real camDist2194
  global real camVmax2195
  global real camUmax2196
  global real camNearVsp2197
  global real camFarVsp2198
  global tensor[3] litwsp2199
  global int _t219A
  global femData:Space _tX219B
  global femData:FemFunc _tXX219C
  global image(IMAGE1D<double[3]>) img219D
  global int _tXXX219E
## functions
## input initialization
  ENTRY219F:  preds = []
    real _t21A0#17 = 0.e0;
    real _t21A2#1 = -0.2e1;
    tensor[3] camEye21A4#1 = <tensor[3]>[_t21A0,_t21A2,_t21A0];
    globals.camEye2177 = camEye21A4;
    tensor[3] camAt21A7#1 = <tensor[3]>[_t21A0,_t21A0,_t21A0];
    globals.camAt2178 = camAt21A7;
    real _t21AA#7 = 0.1e1;
    tensor[3] camUp21AC#2 = <tensor[3]>[_t21A0,_t21A0,_t21AA];
    globals.camUp2179 = camUp21AC;
    real camNear21AF#1 = -0.4e1;
    globals.camNear217A = camNear21AF;
    real camFar21B2#1 = 0.4e1;
    globals.camFar217B = camFar21B2;
    real camFOV21B5#1 = 0.1e2;
    globals.camFOV217C = camFOV21B5;
    bool camOrtho21B8#2 = false;
    globals.camOrtho217D = camOrtho21B8;
    int iresU21BB#2 = 100;
    globals.iresU217E = iresU21BB;
    globals.iresV217F = iresU21BB;
    real rayStep21BF#2 = 0.1e-3;
    globals.rayStep2180 = rayStep21BF;
    globals.refStep2181 = rayStep21BF;
    real transp021C3#1 = 0.5e-2;
    globals.transp02182 = transp021C3;
    real thick21C6#1 = 0.1e-1;
    globals.thick2183 = thick21C6;
    globals.fStrTh2184 = _t21A0;
    globals.fMaskTh2185 = _t21A0;
    real fBias21CB#2 = 0.1e0;
    globals.fBias2186 = fBias21CB;
    globals.maxAlpha2187 = _t21AA;
    globals.light2188 = camOrtho21B8;
    real _t21D0#1 = 0.7e0;
    real _t21D2#1 = 0.2e0;
    real _t21D4#1 = 0.1e3;
    tensor[4] phong21D6#1 = <tensor[4]>[fBias21CB,_t21D0,_t21D2,_t21D4];
    globals.phong2189 = phong21D6;
    tensor[3] mcNear21D9#2 = <tensor[3]>[_t21AA,_t21AA,_t21AA];
    globals.mcNear218A = mcNear21D9;
    globals.mcFar218B = mcNear21D9;
    real _t21DD#1 = -0.1e1;
    tensor[3] litdir21DF#1 = <tensor[3]>[_t21A0,_t21DD,_t21A0];
    globals.litdir218C = litdir21DF;
    tensor[2] cminmax21E2#1 = <tensor[2]>[_t21A0,_t21A0];
    globals.cminmax218D = cminmax21E2;
    bool analytical21E5#1 = true;
    globals.analytical218E = analytical21E5;
    tensor[3] _t21E8#1 = <tensor[3]>[_t21AA,_t21A0,_t21A0];
    tensor[3] _t21EA#1 = <tensor[3]>[_t21A0,_t21AA,_t21A0];
    tensor[3,3] rot21EC#1 = <tensor[3,3]>[_t21E8,_t21EA,camUp21AC];
    globals.rot2190 = rot21EC;
    return
## global-variable initialization
  ENTRY21F0:  preds = []
    femData:Mesh block21F1#3 = globals.block2172;
    femData:Space 0space0509_intermedateGlobal21F3#1 = globals.0space0509_intermedateGlobal2173;
    femData:FemFunc 0U050B_intermedateGlobal21F5#1 = globals.0U050B_intermedateGlobal2174;
    int cellChoice21F7#1 = globals.cellChoice2175;
    image(IMAGE1D<double[3]>) cmap21F9#1 = globals.cmap2176;
    tensor[3] camEye21FB#1 = globals.camEye2177;
    tensor[3] camAt21FD#1 = globals.camAt2178;
    tensor[3] camUp21FF#3 = globals.camUp2179;
    real camNear2201#1 = globals.camNear217A;
    real camFar2203#1 = globals.camFar217B;
    real camFOV2205#1 = globals.camFOV217C;
    int iresU2207#1 = globals.iresU217E;
    int iresV2209#1 = globals.iresV217F;
    tensor[3] litdir220B#5 = globals.litdir218C;
    int _t220D#1 = 0;
    int _t220F#1 = 1;
    int _t2211#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F1);
    int _t2213#1 = ISub(_t2211,_t220F);
    int[] _t2215#1 = Range(_t220D,_t2213);
    femData:MeshCell[] _t2217#1 = <femData:MeshCell[]>{};
  FOREACH221A:  preds = [ASSIGN2218,NEXT2220]
    foreach (_t2219 in _t2215) on exit goto ASSIGN2222
      femData:MeshCell[] _t221E#2 = phi(_t2217,_t221D)
    femData:MeshCell _t221B#1 = LoadFem<femData:MeshCell>(block21F1,_t2219);
    femData:MeshCell[] _t221D#1 = Append<femData:MeshCell>(_t221E,_t221B);
    goto FOREACH221A
  ASSIGN2222:  preds = [FOREACH221A]
    femData:Space space2221#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F3,block21F1);
    femData:FemFunc U2223#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F5,space2221);
    femData:MeshCell c12225#1 = Subscript<femData:MeshCell[]>(_t221E,cellChoice21F7);
    int _t2227#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12225);
    femData:FuncCell _t2229#2 = LoadFem<femData:FuncCell>(U2223,_t2227);
    femData:FemFunc _t222B#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2229);
    femData:Space _t222D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222B);
    int _t222F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2229);
    int _t2231#1 = 0;
    image(IMAGE1D<double[3]>) img2233#1 = cmap21F9;
    tensor[3] op1_e3_l_42235#9 = VSub<3>(camAt21FD,camEye21FB);
    real op1_e3_l_62238#1 = VDot<3>(op1_e3_l_42235,op1_e3_l_42235);
    real op1_e3_l_7223B#6 = Sqrt(op1_e3_l_62238);
    real realLit223F#1 = 0.1e1;
    real op1_e3_l_9223E#6 = RDiv(realLit223F,op1_e3_l_7223B);
    tensor[3] camN2243#2 = VScale<3>(op1_e3_l_9223E,op1_e3_l_42235);
    globals.camN2191 = camN2243;
    real realLit2248#3 = 0.e0;
    real r2249#3 = TensorIndex<tensor[3],[0]>(camUp21FF);
    real r224A#3 = RMul(realLit2248,r2249);
    real r224B#3 = TensorIndex<tensor[3],[1]>(camUp21FF);
    real r224C#3 = RMul(realLit2248,r224B);
    real r224D#3 = TensorIndex<tensor[3],[2]>(camUp21FF);
    real r224E#5 = RMul(realLit2248,r224D);
    real r224F#3 = RAdd(r224A,r224C);
    real r2250#3 = RAdd(r224F,r224E);
    real realLit2251#3 = 0.1e1;
    real r2252#1 = RMul(realLit2251,r224D);
    real r2253#1 = RAdd(r224F,r2252);
    real realLit2254#3 = -0.1e1;
    real r2255#1 = RMul(realLit2254,r224B);
    real r2256#1 = RAdd(r224A,r2255);
    real r2257#1 = RAdd(r2256,r224E);
    tensor[3] tensor2258#1 = <tensor[3]>[r2250,r2253,r2257];
    real r2259#1 = RMul(realLit2254,r224D);
    real r225A#1 = RAdd(r224F,r2259);
    real r225B#1 = RMul(realLit2251,r2249);
    real r225C#1 = RAdd(r225B,r224C);
    real r225D#1 = RAdd(r225C,r224E);
    tensor[3] tensor225E#1 = <tensor[3]>[r225A,r2250,r225D];
    real r225F#1 = RMul(realLit2251,r224B);
    real r2260#1 = RAdd(r224A,r225F);
    real r2261#1 = RAdd(r2260,r224E);
    real r2262#1 = RMul(realLit2254,r2249);
    real r2263#1 = RAdd(r2262,r224C);
    real r2264#1 = RAdd(r2263,r224E);
    tensor[3] tensor2265#1 = <tensor[3]>[r2261,r2264,r2250];
    tensor[3,3] op1_e3_l_152247#3 = <tensor[3,3]>[tensor2258,tensor225E,tensor2265];
    tensor[3] projParam2287#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_152247);
    real vdot2288#1 = VDot<3>(op1_e3_l_42235,projParam2287);
    tensor[3] projParam2289#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_152247);
    real vdot228A#1 = VDot<3>(op1_e3_l_42235,projParam2289);
    tensor[3] projParam228B#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_152247);
    real vdot228C#1 = VDot<3>(op1_e3_l_42235,projParam228B);
    tensor[3] op1_e3_l_172286#6 = <tensor[3]>[vdot2288,vdot228A,vdot228C];
    real op1_e3_l_342295#1 = VDot<3>(op1_e3_l_172286,op1_e3_l_172286);
    real r2299#1 = RMul(op1_e3_l_9223E,op1_e3_l_9223E);
    real op1_e3_l_352298#1 = RMul(r2299,op1_e3_l_342295);
    real op1_e3_l_36229D#1 = Sqrt(op1_e3_l_352298);
    tensor[3] op1_e3_l_3722A0#1 = VScale<3>(op1_e3_l_9223E,op1_e3_l_172286);
    real realLit22A4#1 = 0.1e1;
    real op1_e3_l_3822A3#2 = RDiv(realLit22A4,op1_e3_l_36229D);
    tensor[3] camU22A8#2 = VScale<3>(op1_e3_l_3822A3,op1_e3_l_3722A0);
    globals.camU2192 = camU22A8;
    real realLit22AD#3 = 0.e0;
    real r22AE#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_172286);
    real r22AF#3 = RMul(realLit22AD,r22AE);
    real r22B0#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_172286);
    real r22B1#3 = RMul(realLit22AD,r22B0);
    real r22B2#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_172286);
    real r22B3#5 = RMul(realLit22AD,r22B2);
    real r22B4#3 = RAdd(r22AF,r22B1);
    real r22B5#3 = RAdd(r22B4,r22B3);
    real realLit22B6#3 = 0.1e1;
    real r22B7#1 = RMul(realLit22B6,r22B2);
    real r22B8#1 = RAdd(r22B4,r22B7);
    real realLit22B9#3 = -0.1e1;
    real r22BA#1 = RMul(realLit22B9,r22B0);
    real r22BB#1 = RAdd(r22AF,r22BA);
    real r22BC#1 = RAdd(r22BB,r22B3);
    tensor[3] tensor22BD#1 = <tensor[3]>[r22B5,r22B8,r22BC];
    real r22BE#1 = RMul(realLit22B9,r22B2);
    real r22BF#1 = RAdd(r22B4,r22BE);
    real r22C0#1 = RMul(realLit22B6,r22AE);
    real r22C1#1 = RAdd(r22C0,r22B1);
    real r22C2#1 = RAdd(r22C1,r22B3);
    tensor[3] tensor22C3#1 = <tensor[3]>[r22BF,r22B5,r22C2];
    real r22C4#1 = RMul(realLit22B6,r22B0);
    real r22C5#1 = RAdd(r22AF,r22C4);
    real r22C6#1 = RAdd(r22C5,r22B3);
    real r22C7#1 = RMul(realLit22B9,r22AE);
    real r22C8#1 = RAdd(r22C7,r22B1);
    real r22C9#1 = RAdd(r22C8,r22B3);
    tensor[3] tensor22CA#1 = <tensor[3]>[r22C6,r22C9,r22B5];
    tensor[3,3] op1_e3_l_4522AC#3 = <tensor[3,3]>[tensor22BD,tensor22C3,tensor22CA];
    tensor[3] projParam22EC#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_4522AC);
    real vdot22ED#1 = VDot<3>(op1_e3_l_42235,projParam22EC);
    tensor[3] projParam22EE#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_4522AC);
    real vdot22EF#1 = VDot<3>(op1_e3_l_42235,projParam22EE);
    tensor[3] projParam22F0#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_4522AC);
    real vdot22F1#1 = VDot<3>(op1_e3_l_42235,projParam22F0);
    tensor[3] op1_e3_l_4722EB#1 = <tensor[3]>[vdot22ED,vdot22EF,vdot22F1];
    tensor[3] op1_e3_l_5022FA#3 = VScale<3>(op1_e3_l_9223E,op1_e3_l_4722EB);
    real r22FE#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FA);
    real r22FF#3 = RMul(op1_e3_l_9223E,op1_e3_l_3822A3);
    real r2300#1 = RMul(r22FF,r22FE);
    real r2301#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FA);
    real r2302#1 = RMul(r22FF,r2301);
    real r2303#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FA);
    real r2304#1 = RMul(r22FF,r2303);
    tensor[3] camV22FD#2 = <tensor[3]>[r2300,r2302,r2304];
    globals.camV2193 = camV22FD;
    globals.camDist2194 = op1_e3_l_7223B;
    real _t2310#1 = 0.314159265358979323846264338327950288e1;
    real _t2312#1 = 0.36e3;
    real op1_e3_l_52314#1 = RMul(camFOV2205,_t2310);
    real op1_e3_l_62317#1 = RDiv(op1_e3_l_52314,_t2312);
    real op1_e3_l_10231A#2 = Tan(op1_e3_l_62317);
    real camVmax231D#1 = RMul(op1_e3_l_10231A,op1_e3_l_7223B);
    globals.camVmax2195 = camVmax231D;
    real _t2321#1 = IntToReal(iresU2207);
    real _t2323#1 = IntToReal(iresV2209);
    real r2326#1 = RMul(_t2321,op1_e3_l_10231A);
    real op1_e3_l_142325#1 = RMul(r2326,op1_e3_l_7223B);
    real camUmax232A#1 = RDiv(op1_e3_l_142325,_t2323);
    globals.camUmax2196 = camUmax232A;
    real camNearVsp232E#1 = RAdd(camNear2201,op1_e3_l_7223B);
    globals.camNearVsp2197 = camNearVsp232E;
    real camFarVsp2332#1 = RAdd(camFar2203,op1_e3_l_7223B);
    globals.camFarVsp2198 = camFarVsp2332;
    tensor[3,3] _t2336#9 = <tensor[3,3]>[camU22A8,camV22FD,camN2243];
    real op1_e3_l_32338#1 = VDot<3>(litdir220B,litdir220B);
    real op1_e3_l_4233B#1 = Sqrt(op1_e3_l_32338);
    real realLit233F#1 = 0.1e1;
    real op1_e3_l_5233E#1 = RDiv(realLit233F,op1_e3_l_4233B);
    real r2344#1 = TensorIndex<tensor[3,3],[0,0]>(_t2336);
    real r2345#3 = TensorIndex<tensor[3],[0]>(litdir220B);
    real r2346#1 = RMul(r2344,r2345);
    real r2347#1 = TensorIndex<tensor[3,3],[1,0]>(_t2336);
    real r2348#3 = TensorIndex<tensor[3],[1]>(litdir220B);
    real r2349#1 = RMul(r2347,r2348);
    real r234A#1 = TensorIndex<tensor[3,3],[2,0]>(_t2336);
    real r234B#3 = TensorIndex<tensor[3],[2]>(litdir220B);
    real r234C#1 = RMul(r234A,r234B);
    real r234D#1 = RAdd(r2346,r2349);
    real r234E#1 = RAdd(r234D,r234C);
    real r234F#1 = TensorIndex<tensor[3,3],[0,1]>(_t2336);
    real r2350#1 = RMul(r234F,r2345);
    real r2351#1 = TensorIndex<tensor[3,3],[1,1]>(_t2336);
    real r2352#1 = RMul(r2351,r2348);
    real r2353#1 = TensorIndex<tensor[3,3],[2,1]>(_t2336);
    real r2354#1 = RMul(r2353,r234B);
    real r2355#1 = RAdd(r2350,r2352);
    real r2356#1 = RAdd(r2355,r2354);
    real r2357#1 = TensorIndex<tensor[3,3],[0,2]>(_t2336);
    real r2358#1 = RMul(r2357,r2345);
    real r2359#1 = TensorIndex<tensor[3,3],[1,2]>(_t2336);
    real r235A#1 = RMul(r2359,r2348);
    real r235B#1 = TensorIndex<tensor[3,3],[2,2]>(_t2336);
    real r235C#1 = RMul(r235B,r234B);
    real r235D#1 = RAdd(r2358,r235A);
    real r235E#1 = RAdd(r235D,r235C);
    tensor[3] op1_e3_l_62343#1 = <tensor[3]>[r234E,r2356,r235E];
    tensor[3] litwsp237C#1 = VScale<3>(op1_e3_l_5233E,op1_e3_l_62343);
    globals.litwsp2199 = litwsp237C;
    globals._t219A = _t222F;
    globals._tX219B = _t222D;
    globals._tXX219C = _t222B;
    globals.img219D = img2233;
    globals._tXXX219E = _t2231;
    return
## strand
  strand ray (int ui2386#1, int vi2387#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2398:  preds = []
        tensor[3] camEye2399#1 = globals.camEye2177;
        bool camOrtho239B#2 = globals.camOrtho217D;
        int iresU239D#1 = globals.iresU217E;
        int iresV239F#1 = globals.iresV217F;
        real rayStep23A1#1 = globals.rayStep2180;
        real refStep23A3#1 = globals.refStep2181;
        tensor[4] phong23A5#4 = globals.phong2189;
        tensor[3] camN23A7#1 = globals.camN2191;
        tensor[3] camU23A9#1 = globals.camU2192;
        tensor[3] camV23AB#1 = globals.camV2193;
        real camDist23AD#1 = globals.camDist2194;
        real camVmax23AF#2 = globals.camVmax2195;
        real camUmax23B1#2 = globals.camUmax2196;
        real camNearVsp23B3#1 = globals.camNearVsp2197;
        real _t23B5#5 = -0.5e0;
        real _t23B7#1 = IntToReal(ui2386);
        real _t23B9#1 = IntToReal(iresU239D);
        real _t23BB#3 = 0.5e0;
        real op1_e3_l_623BD#1 = RSub(_t23B9,_t23BB);
        real op1_e3_l_723C0#1 = RSub(_t23B7,_t23B5);
        real op1_e3_l_823C3#1 = RSub(op1_e3_l_623BD,_t23B5);
        real op1_e3_l_923C6#2 = RNeg(camUmax23B1);
        real op1_e3_l_1023C9#1 = RDiv(op1_e3_l_723C0,op1_e3_l_823C3);
        real op1_e3_l_1123CC#1 = RSub(camUmax23B1,op1_e3_l_923C6);
        real op1_e3_l_1323CF#1 = RMul(op1_e3_l_1023C9,op1_e3_l_1123CC);
        real rayU23D2#2 = RAdd(op1_e3_l_923C6,op1_e3_l_1323CF);
        real _t23D5#1 = IntToReal(vi2387);
        real _t23D7#2 = IntToReal(iresV239F);
        real op1_e3_l_623D9#1 = RSub(_t23D7,_t23BB);
        real op1_e3_l_723DC#2 = RSub(_t23D5,_t23B5);
        real op1_e3_l_823DF#1 = RSub(op1_e3_l_623D9,_t23B5);
        real op1_e3_l_923E2#3 = RNeg(camVmax23AF);
        real op1_e3_l_1023E5#1 = RDiv(op1_e3_l_723DC,op1_e3_l_823DF);
        real op1_e3_l_1123E8#2 = RSub(camVmax23AF,op1_e3_l_923E2);
        real op1_e3_l_1323EB#1 = RMul(op1_e3_l_1023E5,op1_e3_l_1123E8);
        real rayV23EE#1 = RAdd(op1_e3_l_923E2,op1_e3_l_1323EB);
        real op1_e3_l_2323F1#1 = RSub(_t23D7,_t23BB);
        real op1_e3_l_2523F4#1 = RSub(op1_e3_l_2323F1,_t23B5);
        real op1_e3_l_2723F7#1 = RDiv(op1_e3_l_723DC,op1_e3_l_2523F4);
        real op1_e3_l_3023FA#1 = RMul(op1_e3_l_2723F7,op1_e3_l_1123E8);
        real op1_e3_l_3123FD#1 = RAdd(op1_e3_l_923E2,op1_e3_l_3023FA);
        tensor[3] op1_e3_l_322400#1 = VScale<3>(rayU23D2,camU23A9);
        tensor[3] op1_e3_l_332403#1 = VScale<3>(op1_e3_l_3123FD,camV23AB);
        tensor[3] UV2406#5 = VAdd<3>(op1_e3_l_322400,op1_e3_l_332403);
        if camOrtho239B then goto JOIN240C else goto ASSIGN2466
      JOIN240C:  preds = [COND2409,ASSIGN2467]
        tensor[3] _t240A#1 = phi(UV2406,_t240B)
        tensor[3] rayOrig240D#1 = VAdd<3>(camEye2399,_t240A);
        if camOrtho239B then goto ASSIGN2412 else goto ASSIGN245C
      ASSIGN2412:  preds = [COND2410]
        real _t2411#3 = 0.e0;
        tensor[3] _t2413#1 = <tensor[3]>[_t2411,_t2411,_t2411];
        goto JOIN2417
      JOIN2417:  preds = [ASSIGN2414,ASSIGN2464]
        tensor[3] _t2415#1 = phi(_t2413,_t2416)
        tensor[3] rayVec2418#4 = VAdd<3>(camN23A7,_t2415);
        real op1_e3_l_6241B#1 = VDot<3>(rayVec2418,rayVec2418);
        real op1_e3_l_7241E#2 = Sqrt(op1_e3_l_6241B);
        real op1_e3_l_82421#1 = RMul(rayStep23A1,op1_e3_l_7241E);
        real alphaFix2424#1 = RDiv(op1_e3_l_82421,refStep23A3);
        real realLit2428#1 = 0.1e1;
        real op1_e3_l_92427#1 = RDiv(realLit2428,op1_e3_l_7241E);
        tensor[3] op1_e3_l_10242C#1 = VScale<3>(op1_e3_l_92427,rayVec2418);
        tensor[3] eyeDir242F#1 = VNeg<3>(op1_e3_l_10242C);
        real phKa2432#1 = VIndex<4,0>(phong23A5);
        real phKd2434#1 = VIndex<4,1>(phong23A5);
        real phKs2436#1 = VIndex<4,2>(phong23A5);
        real phSp2438#1 = VIndex<4,3>(phong23A5);
        real _t243A#8 = 0.e0;
        tensor[4] rgba243C#1 = <tensor[4]>[_t243A,_t243A,_t243A,_t243A];
        tensor[3] rgb243E#1 = <tensor[3]>[_t243A,_t243A,_t243A];
        real transp2440#1 = 0.1e1;
        self.rayU = rayU23D2;
        self.rayV = rayV23EE;
        self.rayN = camNearVsp23B3;
        self.UV = UV2406;
        self.rayOrig = rayOrig240D;
        self.rayVec = rayVec2418;
        self.alphaFix = alphaFix2424;
        self.eyeDir = eyeDir242F;
        self.phKa = phKa2432;
        self.phKd = phKd2434;
        self.phKs = phKs2436;
        self.phSp = phSp2438;
        self.rgba = rgba243C;
        self.raw = _t243A;
        self.rgb = rgb243E;
        self.transp = transp2440;
        return
      ASSIGN245C:  preds = [COND2410]
        real realLit2453#1 = 0.1e1;
        real r2454#3 = RDiv(realLit2453,camDist23AD);
        real r2455#1 = TensorIndex<tensor[3],[0]>(UV2406);
        real r2456#1 = RMul(r2454,r2455);
        real r2457#1 = TensorIndex<tensor[3],[1]>(UV2406);
        real r2458#1 = RMul(r2454,r2457);
        real r2459#1 = TensorIndex<tensor[3],[2]>(UV2406);
        real r245A#1 = RMul(r2454,r2459);
        tensor[3] _t2416#1 = <tensor[3]>[r2456,r2458,r245A];
        goto JOIN2417
      ASSIGN2466:  preds = [COND2409]
        real _t2465#3 = 0.e0;
        tensor[3] _t240B#1 = <tensor[3]>[_t2465,_t2465,_t2465];
        goto JOIN240C
    end state init
    method update
        ENTRY2468:  preds = []
          image(IMAGE1D<double[3]>) cmap2469#17 = globals.cmap2176;
          int _t246B#3 = globals._t219A;
          femData:Space _t246D#252 = globals._tX219B;
          femData:FemFunc _t246F#252 = globals._tXX219C;
          image(IMAGE1D<double[3]>) img2471#0 = globals.img219D;
          int _t2473#0 = globals._tXXX219E;
          femData:Mesh block2475#1 = globals.block2172;
          real rayStep2477#1 = globals.rayStep2180;
          real transp02479#1 = globals.transp02182;
          real thick247B#1 = globals.thick2183;
          real fStrTh247D#1 = globals.fStrTh2184;
          real fMaskTh247F#1 = globals.fMaskTh2185;
          real fBias2481#1 = globals.fBias2186;
          real maxAlpha2483#2 = globals.maxAlpha2187;
          tensor[3] mcNear2485#2 = globals.mcNear218A;
          tensor[3] mcFar2487#1 = globals.mcFar218B;
          tensor[2] cminmax2489#2 = globals.cminmax218D;
          bool analytical248B#1 = globals.analytical218E;
          tensor[3,3] rot248D#30 = globals.rot2190;
          real camNearVsp248F#2 = globals.camNearVsp2197;
          real camFarVsp2491#2 = globals.camFarVsp2198;
          tensor[3] litwsp2493#2 = globals.litwsp2199;
          real rayN2495#1 = self.rayN;
          tensor[3] rayOrig2497#2 = self.rayOrig;
          tensor[3] rayVec2499#1 = self.rayVec;
          real alphaFix249B#1 = self.alphaFix;
          tensor[3] eyeDir249D#1 = self.eyeDir;
          real phKa249F#1 = self.phKa;
          real phKd24A1#1 = self.phKd;
          real phKs24A3#2 = self.phKs;
          real phSp24A5#1 = self.phSp;
          tensor[3] rgb24A7#1 = self.rgb;
          real transp24A9#2 = self.transp;
          real rayN24AB#8 = RAdd(rayN2495,rayStep2477);
          bool _t24AE#1 = GT<real>(rayN24AB,camFarVsp2491);
          if _t24AE then goto SAVE24B1 else goto JOIN24B3
        SAVE24B1:  preds = [COND24B0]
          self.rayN = rayN24AB;
          stabilize
          goto JOIN24B3
        JOIN24B3:  preds = [*STABILIZE24B2,COND24B0]
          tensor[3] op1_e3_l_524B4#2 = VScale<3>(rayN24AB,rayVec2499);
          tensor[3] pos24B7#16 = VAdd<3>(rayOrig2497,op1_e3_l_524B4);
          femData:RefCell _t24BA#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2475);
          real _t24BC#1 = 0.1e-8;
          bool _t24BE#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BA,pos24B7,_t24BC);
          if _t24BE then goto ASSIGN25C1 else goto ASSIGN40E0
        ASSIGN25C1:  preds = [COND24C0]
          int ilit24C2#1 = 84;
          int mulRes24C3#84 = IMul(_t246B,ilit24C2);
          int ilit24C4#1 = 0;
          int addRes24C5#1 = IAdd(mulRes24C3,ilit24C4);
          int idx24C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24C5);
          int ilit24C7#1 = 1;
          int addRes24C8#1 = IAdd(mulRes24C3,ilit24C7);
          int idx24C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24C8);
          int ilit24CA#1 = 2;
          int addRes24CB#1 = IAdd(mulRes24C3,ilit24CA);
          int idx24CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CB);
          int ilit24CD#1 = 3;
          int addRes24CE#1 = IAdd(mulRes24C3,ilit24CD);
          int idx24CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CE);
          int ilit24D0#1 = 4;
          int addRes24D1#1 = IAdd(mulRes24C3,ilit24D0);
          int idx24D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D1);
          int ilit24D3#1 = 5;
          int addRes24D4#1 = IAdd(mulRes24C3,ilit24D3);
          int idx24D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D4);
          int ilit24D6#1 = 6;
          int addRes24D7#1 = IAdd(mulRes24C3,ilit24D6);
          int idx24D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D7);
          int ilit24D9#1 = 7;
          int addRes24DA#1 = IAdd(mulRes24C3,ilit24D9);
          int idx24DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DA);
          int ilit24DC#1 = 8;
          int addRes24DD#1 = IAdd(mulRes24C3,ilit24DC);
          int idx24DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DD);
          int ilit24DF#1 = 9;
          int addRes24E0#1 = IAdd(mulRes24C3,ilit24DF);
          int idx24E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E0);
          int ilit24E2#1 = 10;
          int addRes24E3#1 = IAdd(mulRes24C3,ilit24E2);
          int idx24E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E3);
          int ilit24E5#1 = 11;
          int addRes24E6#1 = IAdd(mulRes24C3,ilit24E5);
          int idx24E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E6);
          int ilit24E8#1 = 12;
          int addRes24E9#1 = IAdd(mulRes24C3,ilit24E8);
          int idx24EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E9);
          int ilit24EB#1 = 13;
          int addRes24EC#1 = IAdd(mulRes24C3,ilit24EB);
          int idx24ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EC);
          int ilit24EE#1 = 14;
          int addRes24EF#1 = IAdd(mulRes24C3,ilit24EE);
          int idx24F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EF);
          int ilit24F1#1 = 15;
          int addRes24F2#1 = IAdd(mulRes24C3,ilit24F1);
          int idx24F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F2);
          int ilit24F4#1 = 16;
          int addRes24F5#1 = IAdd(mulRes24C3,ilit24F4);
          int idx24F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F5);
          int ilit24F7#1 = 17;
          int addRes24F8#1 = IAdd(mulRes24C3,ilit24F7);
          int idx24F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F8);
          int ilit24FA#1 = 18;
          int addRes24FB#1 = IAdd(mulRes24C3,ilit24FA);
          int idx24FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FB);
          int ilit24FD#1 = 19;
          int addRes24FE#1 = IAdd(mulRes24C3,ilit24FD);
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FE);
          int ilit2500#1 = 20;
          int addRes2501#1 = IAdd(mulRes24C3,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2501);
          int ilit2503#1 = 21;
          int addRes2504#1 = IAdd(mulRes24C3,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2504);
          int ilit2506#1 = 22;
          int addRes2507#1 = IAdd(mulRes24C3,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2507);
          int ilit2509#1 = 23;
          int addRes250A#1 = IAdd(mulRes24C3,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250A);
          int ilit250C#1 = 24;
          int addRes250D#1 = IAdd(mulRes24C3,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250D);
          int ilit250F#1 = 25;
          int addRes2510#1 = IAdd(mulRes24C3,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2510);
          int ilit2512#1 = 26;
          int addRes2513#1 = IAdd(mulRes24C3,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2513);
          int ilit2515#1 = 27;
          int addRes2516#1 = IAdd(mulRes24C3,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2516);
          int ilit2518#1 = 28;
          int addRes2519#1 = IAdd(mulRes24C3,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2519);
          int ilit251B#1 = 29;
          int addRes251C#1 = IAdd(mulRes24C3,ilit251B);
          int idx251D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251C);
          int ilit251E#1 = 30;
          int addRes251F#1 = IAdd(mulRes24C3,ilit251E);
          int idx2520#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251F);
          int ilit2521#1 = 31;
          int addRes2522#1 = IAdd(mulRes24C3,ilit2521);
          int idx2523#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2522);
          int ilit2524#1 = 32;
          int addRes2525#1 = IAdd(mulRes24C3,ilit2524);
          int idx2526#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2525);
          int ilit2527#1 = 33;
          int addRes2528#1 = IAdd(mulRes24C3,ilit2527);
          int idx2529#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2528);
          int ilit252A#1 = 34;
          int addRes252B#1 = IAdd(mulRes24C3,ilit252A);
          int idx252C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252B);
          int ilit252D#1 = 35;
          int addRes252E#1 = IAdd(mulRes24C3,ilit252D);
          int idx252F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252E);
          int ilit2530#1 = 36;
          int addRes2531#1 = IAdd(mulRes24C3,ilit2530);
          int idx2532#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2531);
          int ilit2533#1 = 37;
          int addRes2534#1 = IAdd(mulRes24C3,ilit2533);
          int idx2535#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2534);
          int ilit2536#1 = 38;
          int addRes2537#1 = IAdd(mulRes24C3,ilit2536);
          int idx2538#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2537);
          int ilit2539#1 = 39;
          int addRes253A#1 = IAdd(mulRes24C3,ilit2539);
          int idx253B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253A);
          int ilit253C#1 = 40;
          int addRes253D#1 = IAdd(mulRes24C3,ilit253C);
          int idx253E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253D);
          int ilit253F#1 = 41;
          int addRes2540#1 = IAdd(mulRes24C3,ilit253F);
          int idx2541#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2540);
          int ilit2542#1 = 42;
          int addRes2543#1 = IAdd(mulRes24C3,ilit2542);
          int idx2544#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2543);
          int ilit2545#1 = 43;
          int addRes2546#1 = IAdd(mulRes24C3,ilit2545);
          int idx2547#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2546);
          int ilit2548#1 = 44;
          int addRes2549#1 = IAdd(mulRes24C3,ilit2548);
          int idx254A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2549);
          int ilit254B#1 = 45;
          int addRes254C#1 = IAdd(mulRes24C3,ilit254B);
          int idx254D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254C);
          int ilit254E#1 = 46;
          int addRes254F#1 = IAdd(mulRes24C3,ilit254E);
          int idx2550#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254F);
          int ilit2551#1 = 47;
          int addRes2552#1 = IAdd(mulRes24C3,ilit2551);
          int idx2553#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2552);
          int ilit2554#1 = 48;
          int addRes2555#1 = IAdd(mulRes24C3,ilit2554);
          int idx2556#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2555);
          int ilit2557#1 = 49;
          int addRes2558#1 = IAdd(mulRes24C3,ilit2557);
          int idx2559#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2558);
          int ilit255A#1 = 50;
          int addRes255B#1 = IAdd(mulRes24C3,ilit255A);
          int idx255C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255B);
          int ilit255D#1 = 51;
          int addRes255E#1 = IAdd(mulRes24C3,ilit255D);
          int idx255F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255E);
          int ilit2560#1 = 52;
          int addRes2561#1 = IAdd(mulRes24C3,ilit2560);
          int idx2562#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2561);
          int ilit2563#1 = 53;
          int addRes2564#1 = IAdd(mulRes24C3,ilit2563);
          int idx2565#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2564);
          int ilit2566#1 = 54;
          int addRes2567#1 = IAdd(mulRes24C3,ilit2566);
          int idx2568#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2567);
          int ilit2569#1 = 55;
          int addRes256A#1 = IAdd(mulRes24C3,ilit2569);
          int idx256B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256A);
          int ilit256C#1 = 56;
          int addRes256D#1 = IAdd(mulRes24C3,ilit256C);
          int idx256E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256D);
          int ilit256F#1 = 57;
          int addRes2570#1 = IAdd(mulRes24C3,ilit256F);
          int idx2571#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2570);
          int ilit2572#1 = 58;
          int addRes2573#1 = IAdd(mulRes24C3,ilit2572);
          int idx2574#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2573);
          int ilit2575#1 = 59;
          int addRes2576#1 = IAdd(mulRes24C3,ilit2575);
          int idx2577#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2576);
          int ilit2578#1 = 60;
          int addRes2579#1 = IAdd(mulRes24C3,ilit2578);
          int idx257A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2579);
          int ilit257B#1 = 61;
          int addRes257C#1 = IAdd(mulRes24C3,ilit257B);
          int idx257D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257C);
          int ilit257E#1 = 62;
          int addRes257F#1 = IAdd(mulRes24C3,ilit257E);
          int idx2580#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257F);
          int ilit2581#1 = 63;
          int addRes2582#1 = IAdd(mulRes24C3,ilit2581);
          int idx2583#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2582);
          int ilit2584#1 = 64;
          int addRes2585#1 = IAdd(mulRes24C3,ilit2584);
          int idx2586#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2585);
          int ilit2587#1 = 65;
          int addRes2588#1 = IAdd(mulRes24C3,ilit2587);
          int idx2589#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2588);
          int ilit258A#1 = 66;
          int addRes258B#1 = IAdd(mulRes24C3,ilit258A);
          int idx258C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258B);
          int ilit258D#1 = 67;
          int addRes258E#1 = IAdd(mulRes24C3,ilit258D);
          int idx258F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258E);
          int ilit2590#1 = 68;
          int addRes2591#1 = IAdd(mulRes24C3,ilit2590);
          int idx2592#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2591);
          int ilit2593#1 = 69;
          int addRes2594#1 = IAdd(mulRes24C3,ilit2593);
          int idx2595#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2594);
          int ilit2596#1 = 70;
          int addRes2597#1 = IAdd(mulRes24C3,ilit2596);
          int idx2598#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2597);
          int ilit2599#1 = 71;
          int addRes259A#1 = IAdd(mulRes24C3,ilit2599);
          int idx259B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259A);
          int ilit259C#1 = 72;
          int addRes259D#1 = IAdd(mulRes24C3,ilit259C);
          int idx259E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259D);
          int ilit259F#1 = 73;
          int addRes25A0#1 = IAdd(mulRes24C3,ilit259F);
          int idx25A1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A0);
          int ilit25A2#1 = 74;
          int addRes25A3#1 = IAdd(mulRes24C3,ilit25A2);
          int idx25A4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A3);
          int ilit25A5#1 = 75;
          int addRes25A6#1 = IAdd(mulRes24C3,ilit25A5);
          int idx25A7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A6);
          int ilit25A8#1 = 76;
          int addRes25A9#1 = IAdd(mulRes24C3,ilit25A8);
          int idx25AA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A9);
          int ilit25AB#1 = 77;
          int addRes25AC#1 = IAdd(mulRes24C3,ilit25AB);
          int idx25AD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AC);
          int ilit25AE#1 = 78;
          int addRes25AF#1 = IAdd(mulRes24C3,ilit25AE);
          int idx25B0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AF);
          int ilit25B1#1 = 79;
          int addRes25B2#1 = IAdd(mulRes24C3,ilit25B1);
          int idx25B3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B2);
          int ilit25B4#1 = 80;
          int addRes25B5#1 = IAdd(mulRes24C3,ilit25B4);
          int idx25B6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B5);
          int ilit25B7#1 = 81;
          int addRes25B8#1 = IAdd(mulRes24C3,ilit25B7);
          int idx25B9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B8);
          int ilit25BA#1 = 82;
          int addRes25BB#1 = IAdd(mulRes24C3,ilit25BA);
          int idx25BC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BB);
          int ilit25BD#1 = 83;
          int addRes25BE#1 = IAdd(mulRes24C3,ilit25BD);
          int idx25BF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BE);
          int[84] seq25C0#1 = <int[84]>{idx24C6,idx24C9,idx24CC,idx24CF,idx24D2,idx24D5,idx24D8,idx24DB,idx24DE,idx24E1,idx24E4,idx24E7,idx24EA,idx24ED,idx24F0,idx24F3,idx24F6,idx24F9,idx24FC,idx24FF,idx2502,idx2505,idx2508,idx250B,idx250E,idx2511,idx2514,idx2517,idx251A,idx251D,idx2520,idx2523,idx2526,idx2529,idx252C,idx252F,idx2532,idx2535,idx2538,idx253B,idx253E,idx2541,idx2544,idx2547,idx254A,idx254D,idx2550,idx2553,idx2556,idx2559,idx255C,idx255F,idx2562,idx2565,idx2568,idx256B,idx256E,idx2571,idx2574,idx2577,idx257A,idx257D,idx2580,idx2583,idx2586,idx2589,idx258C,idx258F,idx2592,idx2595,idx2598,idx259B,idx259E,idx25A1,idx25A4,idx25A7,idx25AA,idx25AD,idx25B0,idx25B3,idx25B6,idx25B9,idx25BC,idx25BF};
          int[84] femIndicies24C1#84 = seq25C0;
          int ilit26C2#85 = 1;
          int ilit26C3#1 = 0;
          int idx26C4#1 = Subscript<int>(femIndicies24C1,ilit26C3);
          int mulRes26C5#1 = IMul(ilit26C2,idx26C4);
          int idx26C6#1 = Subscript<int>(femIndicies24C1,ilit26C2);
          int mulRes26C7#1 = IMul(ilit26C2,idx26C6);
          int ilit26C8#1 = 2;
          int idx26C9#1 = Subscript<int>(femIndicies24C1,ilit26C8);
          int mulRes26CA#1 = IMul(ilit26C2,idx26C9);
          int ilit26CB#1 = 3;
          int idx26CC#1 = Subscript<int>(femIndicies24C1,ilit26CB);
          int mulRes26CD#1 = IMul(ilit26C2,idx26CC);
          int ilit26CE#1 = 4;
          int idx26CF#1 = Subscript<int>(femIndicies24C1,ilit26CE);
          int mulRes26D0#1 = IMul(ilit26C2,idx26CF);
          int ilit26D1#1 = 5;
          int idx26D2#1 = Subscript<int>(femIndicies24C1,ilit26D1);
          int mulRes26D3#1 = IMul(ilit26C2,idx26D2);
          int ilit26D4#1 = 6;
          int idx26D5#1 = Subscript<int>(femIndicies24C1,ilit26D4);
          int mulRes26D6#1 = IMul(ilit26C2,idx26D5);
          int ilit26D7#1 = 7;
          int idx26D8#1 = Subscript<int>(femIndicies24C1,ilit26D7);
          int mulRes26D9#1 = IMul(ilit26C2,idx26D8);
          int ilit26DA#1 = 8;
          int idx26DB#1 = Subscript<int>(femIndicies24C1,ilit26DA);
          int mulRes26DC#1 = IMul(ilit26C2,idx26DB);
          int ilit26DD#1 = 9;
          int idx26DE#1 = Subscript<int>(femIndicies24C1,ilit26DD);
          int mulRes26DF#1 = IMul(ilit26C2,idx26DE);
          int ilit26E0#1 = 10;
          int idx26E1#1 = Subscript<int>(femIndicies24C1,ilit26E0);
          int mulRes26E2#1 = IMul(ilit26C2,idx26E1);
          int ilit26E3#1 = 11;
          int idx26E4#1 = Subscript<int>(femIndicies24C1,ilit26E3);
          int mulRes26E5#1 = IMul(ilit26C2,idx26E4);
          int ilit26E6#1 = 12;
          int idx26E7#1 = Subscript<int>(femIndicies24C1,ilit26E6);
          int mulRes26E8#1 = IMul(ilit26C2,idx26E7);
          int ilit26E9#1 = 13;
          int idx26EA#1 = Subscript<int>(femIndicies24C1,ilit26E9);
          int mulRes26EB#1 = IMul(ilit26C2,idx26EA);
          int ilit26EC#1 = 14;
          int idx26ED#1 = Subscript<int>(femIndicies24C1,ilit26EC);
          int mulRes26EE#1 = IMul(ilit26C2,idx26ED);
          int ilit26EF#1 = 15;
          int idx26F0#1 = Subscript<int>(femIndicies24C1,ilit26EF);
          int mulRes26F1#1 = IMul(ilit26C2,idx26F0);
          int ilit26F2#1 = 16;
          int idx26F3#1 = Subscript<int>(femIndicies24C1,ilit26F2);
          int mulRes26F4#1 = IMul(ilit26C2,idx26F3);
          int ilit26F5#1 = 17;
          int idx26F6#1 = Subscript<int>(femIndicies24C1,ilit26F5);
          int mulRes26F7#1 = IMul(ilit26C2,idx26F6);
          int ilit26F8#1 = 18;
          int idx26F9#1 = Subscript<int>(femIndicies24C1,ilit26F8);
          int mulRes26FA#1 = IMul(ilit26C2,idx26F9);
          int ilit26FB#1 = 19;
          int idx26FC#1 = Subscript<int>(femIndicies24C1,ilit26FB);
          int mulRes26FD#1 = IMul(ilit26C2,idx26FC);
          int ilit26FE#1 = 20;
          int idx26FF#1 = Subscript<int>(femIndicies24C1,ilit26FE);
          int mulRes2700#1 = IMul(ilit26C2,idx26FF);
          int ilit2701#1 = 21;
          int idx2702#1 = Subscript<int>(femIndicies24C1,ilit2701);
          int mulRes2703#1 = IMul(ilit26C2,idx2702);
          int ilit2704#1 = 22;
          int idx2705#1 = Subscript<int>(femIndicies24C1,ilit2704);
          int mulRes2706#1 = IMul(ilit26C2,idx2705);
          int ilit2707#1 = 23;
          int idx2708#1 = Subscript<int>(femIndicies24C1,ilit2707);
          int mulRes2709#1 = IMul(ilit26C2,idx2708);
          int ilit270A#1 = 24;
          int idx270B#1 = Subscript<int>(femIndicies24C1,ilit270A);
          int mulRes270C#1 = IMul(ilit26C2,idx270B);
          int ilit270D#1 = 25;
          int idx270E#1 = Subscript<int>(femIndicies24C1,ilit270D);
          int mulRes270F#1 = IMul(ilit26C2,idx270E);
          int ilit2710#1 = 26;
          int idx2711#1 = Subscript<int>(femIndicies24C1,ilit2710);
          int mulRes2712#1 = IMul(ilit26C2,idx2711);
          int ilit2713#1 = 27;
          int idx2714#1 = Subscript<int>(femIndicies24C1,ilit2713);
          int mulRes2715#1 = IMul(ilit26C2,idx2714);
          int ilit2716#1 = 28;
          int idx2717#1 = Subscript<int>(femIndicies24C1,ilit2716);
          int mulRes2718#1 = IMul(ilit26C2,idx2717);
          int ilit2719#1 = 29;
          int idx271A#1 = Subscript<int>(femIndicies24C1,ilit2719);
          int mulRes271B#1 = IMul(ilit26C2,idx271A);
          int ilit271C#1 = 30;
          int idx271D#1 = Subscript<int>(femIndicies24C1,ilit271C);
          int mulRes271E#1 = IMul(ilit26C2,idx271D);
          int ilit271F#1 = 31;
          int idx2720#1 = Subscript<int>(femIndicies24C1,ilit271F);
          int mulRes2721#1 = IMul(ilit26C2,idx2720);
          int ilit2722#1 = 32;
          int idx2723#1 = Subscript<int>(femIndicies24C1,ilit2722);
          int mulRes2724#1 = IMul(ilit26C2,idx2723);
          int ilit2725#1 = 33;
          int idx2726#1 = Subscript<int>(femIndicies24C1,ilit2725);
          int mulRes2727#1 = IMul(ilit26C2,idx2726);
          int ilit2728#1 = 34;
          int idx2729#1 = Subscript<int>(femIndicies24C1,ilit2728);
          int mulRes272A#1 = IMul(ilit26C2,idx2729);
          int ilit272B#1 = 35;
          int idx272C#1 = Subscript<int>(femIndicies24C1,ilit272B);
          int mulRes272D#1 = IMul(ilit26C2,idx272C);
          int ilit272E#1 = 36;
          int idx272F#1 = Subscript<int>(femIndicies24C1,ilit272E);
          int mulRes2730#1 = IMul(ilit26C2,idx272F);
          int ilit2731#1 = 37;
          int idx2732#1 = Subscript<int>(femIndicies24C1,ilit2731);
          int mulRes2733#1 = IMul(ilit26C2,idx2732);
          int ilit2734#1 = 38;
          int idx2735#1 = Subscript<int>(femIndicies24C1,ilit2734);
          int mulRes2736#1 = IMul(ilit26C2,idx2735);
          int ilit2737#1 = 39;
          int idx2738#1 = Subscript<int>(femIndicies24C1,ilit2737);
          int mulRes2739#1 = IMul(ilit26C2,idx2738);
          int ilit273A#1 = 40;
          int idx273B#1 = Subscript<int>(femIndicies24C1,ilit273A);
          int mulRes273C#1 = IMul(ilit26C2,idx273B);
          int ilit273D#1 = 41;
          int idx273E#1 = Subscript<int>(femIndicies24C1,ilit273D);
          int mulRes273F#1 = IMul(ilit26C2,idx273E);
          int ilit2740#1 = 42;
          int idx2741#1 = Subscript<int>(femIndicies24C1,ilit2740);
          int mulRes2742#1 = IMul(ilit26C2,idx2741);
          int ilit2743#1 = 43;
          int idx2744#1 = Subscript<int>(femIndicies24C1,ilit2743);
          int mulRes2745#1 = IMul(ilit26C2,idx2744);
          int ilit2746#1 = 44;
          int idx2747#1 = Subscript<int>(femIndicies24C1,ilit2746);
          int mulRes2748#1 = IMul(ilit26C2,idx2747);
          int ilit2749#1 = 45;
          int idx274A#1 = Subscript<int>(femIndicies24C1,ilit2749);
          int mulRes274B#1 = IMul(ilit26C2,idx274A);
          int ilit274C#1 = 46;
          int idx274D#1 = Subscript<int>(femIndicies24C1,ilit274C);
          int mulRes274E#1 = IMul(ilit26C2,idx274D);
          int ilit274F#1 = 47;
          int idx2750#1 = Subscript<int>(femIndicies24C1,ilit274F);
          int mulRes2751#1 = IMul(ilit26C2,idx2750);
          int ilit2752#1 = 48;
          int idx2753#1 = Subscript<int>(femIndicies24C1,ilit2752);
          int mulRes2754#1 = IMul(ilit26C2,idx2753);
          int ilit2755#1 = 49;
          int idx2756#1 = Subscript<int>(femIndicies24C1,ilit2755);
          int mulRes2757#1 = IMul(ilit26C2,idx2756);
          int ilit2758#1 = 50;
          int idx2759#1 = Subscript<int>(femIndicies24C1,ilit2758);
          int mulRes275A#1 = IMul(ilit26C2,idx2759);
          int ilit275B#1 = 51;
          int idx275C#1 = Subscript<int>(femIndicies24C1,ilit275B);
          int mulRes275D#1 = IMul(ilit26C2,idx275C);
          int ilit275E#1 = 52;
          int idx275F#1 = Subscript<int>(femIndicies24C1,ilit275E);
          int mulRes2760#1 = IMul(ilit26C2,idx275F);
          int ilit2761#1 = 53;
          int idx2762#1 = Subscript<int>(femIndicies24C1,ilit2761);
          int mulRes2763#1 = IMul(ilit26C2,idx2762);
          int ilit2764#1 = 54;
          int idx2765#1 = Subscript<int>(femIndicies24C1,ilit2764);
          int mulRes2766#1 = IMul(ilit26C2,idx2765);
          int ilit2767#1 = 55;
          int idx2768#1 = Subscript<int>(femIndicies24C1,ilit2767);
          int mulRes2769#1 = IMul(ilit26C2,idx2768);
          int ilit276A#1 = 56;
          int idx276B#1 = Subscript<int>(femIndicies24C1,ilit276A);
          int mulRes276C#1 = IMul(ilit26C2,idx276B);
          int ilit276D#1 = 57;
          int idx276E#1 = Subscript<int>(femIndicies24C1,ilit276D);
          int mulRes276F#1 = IMul(ilit26C2,idx276E);
          int ilit2770#1 = 58;
          int idx2771#1 = Subscript<int>(femIndicies24C1,ilit2770);
          int mulRes2772#1 = IMul(ilit26C2,idx2771);
          int ilit2773#1 = 59;
          int idx2774#1 = Subscript<int>(femIndicies24C1,ilit2773);
          int mulRes2775#1 = IMul(ilit26C2,idx2774);
          int ilit2776#1 = 60;
          int idx2777#1 = Subscript<int>(femIndicies24C1,ilit2776);
          int mulRes2778#1 = IMul(ilit26C2,idx2777);
          int ilit2779#1 = 61;
          int idx277A#1 = Subscript<int>(femIndicies24C1,ilit2779);
          int mulRes277B#1 = IMul(ilit26C2,idx277A);
          int ilit277C#1 = 62;
          int idx277D#1 = Subscript<int>(femIndicies24C1,ilit277C);
          int mulRes277E#1 = IMul(ilit26C2,idx277D);
          int ilit277F#1 = 63;
          int idx2780#1 = Subscript<int>(femIndicies24C1,ilit277F);
          int mulRes2781#1 = IMul(ilit26C2,idx2780);
          int ilit2782#1 = 64;
          int idx2783#1 = Subscript<int>(femIndicies24C1,ilit2782);
          int mulRes2784#1 = IMul(ilit26C2,idx2783);
          int ilit2785#1 = 65;
          int idx2786#1 = Subscript<int>(femIndicies24C1,ilit2785);
          int mulRes2787#1 = IMul(ilit26C2,idx2786);
          int ilit2788#1 = 66;
          int idx2789#1 = Subscript<int>(femIndicies24C1,ilit2788);
          int mulRes278A#1 = IMul(ilit26C2,idx2789);
          int ilit278B#1 = 67;
          int idx278C#1 = Subscript<int>(femIndicies24C1,ilit278B);
          int mulRes278D#1 = IMul(ilit26C2,idx278C);
          int ilit278E#1 = 68;
          int idx278F#1 = Subscript<int>(femIndicies24C1,ilit278E);
          int mulRes2790#1 = IMul(ilit26C2,idx278F);
          int ilit2791#1 = 69;
          int idx2792#1 = Subscript<int>(femIndicies24C1,ilit2791);
          int mulRes2793#1 = IMul(ilit26C2,idx2792);
          int ilit2794#1 = 70;
          int idx2795#1 = Subscript<int>(femIndicies24C1,ilit2794);
          int mulRes2796#1 = IMul(ilit26C2,idx2795);
          int ilit2797#1 = 71;
          int idx2798#1 = Subscript<int>(femIndicies24C1,ilit2797);
          int mulRes2799#1 = IMul(ilit26C2,idx2798);
          int ilit279A#1 = 72;
          int idx279B#1 = Subscript<int>(femIndicies24C1,ilit279A);
          int mulRes279C#1 = IMul(ilit26C2,idx279B);
          int ilit279D#1 = 73;
          int idx279E#1 = Subscript<int>(femIndicies24C1,ilit279D);
          int mulRes279F#1 = IMul(ilit26C2,idx279E);
          int ilit27A0#1 = 74;
          int idx27A1#1 = Subscript<int>(femIndicies24C1,ilit27A0);
          int mulRes27A2#1 = IMul(ilit26C2,idx27A1);
          int ilit27A3#1 = 75;
          int idx27A4#1 = Subscript<int>(femIndicies24C1,ilit27A3);
          int mulRes27A5#1 = IMul(ilit26C2,idx27A4);
          int ilit27A6#1 = 76;
          int idx27A7#1 = Subscript<int>(femIndicies24C1,ilit27A6);
          int mulRes27A8#1 = IMul(ilit26C2,idx27A7);
          int ilit27A9#1 = 77;
          int idx27AA#1 = Subscript<int>(femIndicies24C1,ilit27A9);
          int mulRes27AB#1 = IMul(ilit26C2,idx27AA);
          int ilit27AC#1 = 78;
          int idx27AD#1 = Subscript<int>(femIndicies24C1,ilit27AC);
          int mulRes27AE#1 = IMul(ilit26C2,idx27AD);
          int ilit27AF#1 = 79;
          int idx27B0#1 = Subscript<int>(femIndicies24C1,ilit27AF);
          int mulRes27B1#1 = IMul(ilit26C2,idx27B0);
          int ilit27B2#1 = 80;
          int idx27B3#1 = Subscript<int>(femIndicies24C1,ilit27B2);
          int mulRes27B4#1 = IMul(ilit26C2,idx27B3);
          int ilit27B5#1 = 81;
          int idx27B6#1 = Subscript<int>(femIndicies24C1,ilit27B5);
          int mulRes27B7#1 = IMul(ilit26C2,idx27B6);
          int ilit27B8#1 = 82;
          int idx27B9#1 = Subscript<int>(femIndicies24C1,ilit27B8);
          int mulRes27BA#1 = IMul(ilit26C2,idx27B9);
          int ilit27BB#1 = 83;
          int idx27BC#1 = Subscript<int>(femIndicies24C1,ilit27BB);
          int mulRes27BD#1 = IMul(ilit26C2,idx27BC);
          real dof27BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C5);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C7);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CA);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CD);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D0);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D3);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D6);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D9);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DC);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DF);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E2);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E5);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E8);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EB);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EE);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F1);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F4);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F7);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FA);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FD);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2700);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2703);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2706);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2709);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270C);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270F);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2712);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2715);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2718);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271B);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271E);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2721);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2724);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2727);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272A);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272D);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2730);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2733);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2736);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2739);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273C);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273F);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2742);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2745);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2748);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274B);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274E);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2751);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2754);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2757);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275A);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275D);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2760);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2763);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2766);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2769);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276C);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276F);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2772);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2775);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2778);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277B);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277E);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2781);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2784);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2787);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278A);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278D);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2790);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2793);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2796);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2799);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279C);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279F);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A2);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A5);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A8);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AB);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AE);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B1);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B4);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B7);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BA);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BD);
          tensor[84] dofs2812#1 = <tensor[84]>[dof27BE,dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811];
          tensor[84] femDofs26C1#12 = dofs2812;
          real varAcc2966#4 = VIndex<3,0>(pos24B7);
          real varAcc2967#4 = VIndex<3,1>(pos24B7);
          real varAcc2968#4 = VIndex<3,2>(pos24B7);
          real basisEval2969#294 = 0.e0;
          real coeff296A#31 = 0.2e1;
          real one296B#38 = 0.1e1;
          real prod296C#5 = RMul(one296B,one296B);
          real prod296D#2 = RMul(one296B,prod296C);
          real basisEval296E#3 = RMul(coeff296A,prod296D);
          real iden296F#5 = varAcc2968;
          real prod2970#4 = RMul(one296B,iden296F);
          real prod2971#3 = RMul(one296B,prod2970);
          real basisEval2972#4 = RMul(coeff296A,prod2971);
          real iden2973#5 = varAcc2967;
          real prod2974#4 = RMul(iden2973,one296B);
          real prod2975#3 = RMul(one296B,prod2974);
          real basisEval2976#4 = RMul(coeff296A,prod2975);
          real coeff2977#22 = 0.6e1;
          real iden2978#11 = varAcc2966;
          real prod2979#3 = RMul(iden2978,prod296C);
          real basisEval297A#1 = RMul(coeff2977,prod2979);
          real prod2297B#4 = RMul(iden296F,varAcc2968);
          real prod297C#3 = RMul(one296B,prod2297B);
          real prod297D#4 = RMul(one296B,prod297C);
          real basisEval297E#2 = RMul(coeff296A,prod297D);
          real prod297F#3 = RMul(iden2973,iden296F);
          real prod2980#3 = RMul(one296B,prod297F);
          real basisEval2981#3 = RMul(coeff296A,prod2980);
          real prod22982#4 = RMul(iden2973,varAcc2967);
          real prod2983#3 = RMul(prod22982,one296B);
          real prod2984#4 = RMul(one296B,prod2983);
          real basisEval2985#2 = RMul(coeff296A,prod2984);
          real prod2986#3 = RMul(iden2978,prod2970);
          real basisEval2987#2 = RMul(coeff2977,prod2986);
          real prod2988#3 = RMul(iden2978,prod2974);
          real basisEval2989#2 = RMul(coeff2977,prod2988);
          real coeff298A#15 = 0.12e2;
          real prod2298B#7 = RMul(iden2978,varAcc2966);
          real prod298C#4 = RMul(prod2298B,prod296C);
          real basisEval298D#1 = RMul(coeff298A,prod298C);
          real prod3298E#3 = RMul(prod2297B,varAcc2968);
          real prod298F#2 = RMul(one296B,prod3298E);
          real prod2990#4 = RMul(one296B,prod298F);
          real basisEval2991#2 = RMul(coeff296A,prod2990);
          real prod2992#2 = RMul(iden2973,prod2297B);
          real prod2993#4 = RMul(one296B,prod2992);
          real basisEval2994#2 = RMul(coeff296A,prod2993);
          real prod2995#2 = RMul(prod22982,iden296F);
          real prod2996#4 = RMul(one296B,prod2995);
          real basisEval2997#2 = RMul(coeff296A,prod2996);
          real prod32998#3 = RMul(prod22982,varAcc2967);
          real prod2999#2 = RMul(prod32998,one296B);
          real prod299A#4 = RMul(one296B,prod2999);
          real basisEval299B#2 = RMul(coeff296A,prod299A);
          real prod299C#4 = RMul(iden2978,prod297C);
          real basisEval299D#2 = RMul(coeff2977,prod299C);
          real prod299E#2 = RMul(iden2978,prod297F);
          real basisEval299F#3 = RMul(coeff2977,prod299E);
          real prod29A0#4 = RMul(iden2978,prod2983);
          real basisEval29A1#2 = RMul(coeff2977,prod29A0);
          real prod29A2#4 = RMul(prod2298B,prod2970);
          real basisEval29A3#1 = RMul(coeff298A,prod29A2);
          real prod29A4#4 = RMul(prod2298B,prod2974);
          real basisEval29A5#1 = RMul(coeff298A,prod29A4);
          real coeff29A6#9 = 0.20e2;
          real prod329A7#4 = RMul(prod2298B,varAcc2966);
          real prod29A8#4 = RMul(prod329A7,prod296C);
          real basisEval29A9#1 = RMul(coeff29A6,prod29A8);
          real prod429AA#1 = RMul(prod3298E,varAcc2968);
          real prod29AB#1 = RMul(one296B,prod429AA);
          real prod29AC#4 = RMul(one296B,prod29AB);
          real basisEval29AD#2 = RMul(coeff296A,prod29AC);
          real prod29AE#1 = RMul(iden2973,prod3298E);
          real prod29AF#5 = RMul(one296B,prod29AE);
          real basisEval29B0#2 = RMul(coeff296A,prod29AF);
          real prod29B1#1 = RMul(prod22982,prod2297B);
          real prod29B2#4 = RMul(one296B,prod29B1);
          real basisEval29B3#1 = RMul(coeff296A,prod29B2);
          real prod29B4#1 = RMul(prod32998,iden296F);
          real prod29B5#5 = RMul(one296B,prod29B4);
          real basisEval29B6#2 = RMul(coeff296A,prod29B5);
          real prod429B7#1 = RMul(prod32998,varAcc2967);
          real prod29B8#1 = RMul(prod429B7,one296B);
          real prod29B9#4 = RMul(one296B,prod29B8);
          real basisEval29BA#2 = RMul(coeff296A,prod29B9);
          real prod29BB#5 = RMul(iden2978,prod298F);
          real basisEval29BC#1 = RMul(coeff2977,prod29BB);
          real prod29BD#3 = RMul(iden2978,prod2992);
          real basisEval29BE#4 = RMul(coeff2977,prod29BD);
          real prod29BF#3 = RMul(iden2978,prod2995);
          real basisEval29C0#4 = RMul(coeff2977,prod29BF);
          real prod29C1#5 = RMul(iden2978,prod2999);
          real basisEval29C2#1 = RMul(coeff2977,prod29C1);
          real prod29C3#4 = RMul(prod2298B,prod297C);
          real basisEval29C4#2 = RMul(coeff298A,prod29C3);
          real prod29C5#3 = RMul(prod2298B,prod297F);
          real basisEval29C6#1 = RMul(coeff298A,prod29C5);
          real prod29C7#4 = RMul(prod2298B,prod2983);
          real basisEval29C8#2 = RMul(coeff298A,prod29C7);
          real prod29C9#5 = RMul(prod329A7,prod2970);
          real basisEval29CA#1 = RMul(coeff29A6,prod29C9);
          real prod29CB#5 = RMul(prod329A7,prod2974);
          real basisEval29CC#1 = RMul(coeff29A6,prod29CB);
          real coeff29CD#3 = 0.30e2;
          real prod429CE#1 = RMul(prod329A7,varAcc2966);
          real prod29CF#4 = RMul(prod429CE,prod296C);
          real basisEval29D0#1 = RMul(coeff29CD,prod29CF);
          real basisEval29D1#3 = RMul(one296B,prod296D);
          real basisEval29D2#1 = RMul(one296B,prod2971);
          real basisEval29D3#4 = RMul(coeff296A,prod2979);
          real basisEval29D4#1 = RMul(one296B,prod297D);
          real coeff29D5#12 = 0.3e1;
          real basisEval29D6#2 = RMul(coeff29D5,prod2984);
          real basisEval29D7#3 = RMul(coeff296A,prod2986);
          real coeff29D8#16 = 0.4e1;
          real basisEval29D9#1 = RMul(coeff29D8,prod2988);
          real basisEval29DA#2 = RMul(coeff29D5,prod298C);
          real basisEval29DB#1 = RMul(one296B,prod2990);
          real basisEval29DC#1 = RMul(coeff29D5,prod2996);
          real basisEval29DD#2 = RMul(coeff29D8,prod299A);
          real basisEval29DE#2 = RMul(coeff296A,prod299C);
          real basisEval29DF#3 = RMul(coeff29D8,prod299E);
          real basisEval29E0#1 = RMul(coeff29D5,prod29A2);
          real basisEval29E1#2 = RMul(coeff2977,prod29A4);
          real basisEval29E2#2 = RMul(coeff29D8,prod29A8);
          real basisEval29E3#1 = RMul(one296B,prod29AC);
          real basisEval29E4#2 = RMul(coeff29D5,prod29B2);
          real basisEval29E5#1 = RMul(coeff29D8,prod29B5);
          real coeff29E6#3 = 0.5e1;
          real basisEval29E7#2 = RMul(coeff29E6,prod29B9);
          real basisEval29E8#2 = RMul(coeff296A,prod29BB);
          real basisEval29E9#1 = RMul(coeff29D8,prod29BD);
          real coeff29EA#6 = 0.8e1;
          real basisEval29EB#1 = RMul(coeff29EA,prod29C1);
          real basisEval29EC#2 = RMul(coeff29D5,prod29C3);
          real basisEval29ED#4 = RMul(coeff2977,prod29C5);
          real coeff29EE#3 = 0.9e1;
          real basisEval29EF#1 = RMul(coeff29EE,prod29C7);
          real basisEval29F0#1 = RMul(coeff29D8,prod29C9);
          real basisEval29F1#1 = RMul(coeff29EA,prod29CB);
          real basisEval29F2#2 = RMul(coeff29E6,prod29CF);
          real basisEval29F3#1 = RMul(one296B,prod2975);
          real basisEval29F4#2 = RMul(coeff29D5,prod297D);
          real basisEval29F5#1 = RMul(one296B,prod2984);
          real basisEval29F6#1 = RMul(coeff29D8,prod2986);
          real basisEval29F7#3 = RMul(coeff296A,prod2988);
          real basisEval29F8#2 = RMul(coeff29D8,prod2990);
          real basisEval29F9#1 = RMul(coeff29D5,prod2993);
          real basisEval29FA#1 = RMul(one296B,prod299A);
          real basisEval29FB#2 = RMul(coeff296A,prod29A0);
          real basisEval29FC#2 = RMul(coeff2977,prod29A2);
          real basisEval29FD#1 = RMul(coeff29D5,prod29A4);
          real basisEval29FE#2 = RMul(coeff29E6,prod29AC);
          real basisEval29FF#1 = RMul(coeff29D8,prod29AF);
          real basisEval2A00#1 = RMul(one296B,prod29B9);
          real basisEval2A01#1 = RMul(coeff29EA,prod29BB);
          real basisEval2A02#1 = RMul(coeff29D8,prod29BF);
          real basisEval2A03#2 = RMul(coeff296A,prod29C1);
          real basisEval2A04#1 = RMul(coeff29EE,prod29C3);
          real basisEval2A05#2 = RMul(coeff29D5,prod29C7);
          real basisEval2A06#1 = RMul(coeff29EA,prod29C9);
          real basisEval2A07#1 = RMul(coeff29D8,prod29CB);
          real basisEval2A08#1 = RMul(coeff2977,prod2975);
          real basisEval2A09#2 = RMul(coeff2977,prod2980);
          real basisEval2A0A#1 = RMul(coeff298A,prod2984);
          real basisEval2A0B#2 = RMul(coeff296A,prod298C);
          real basisEval2A0C#2 = RMul(coeff2977,prod2993);
          real basisEval2A0D#1 = RMul(coeff298A,prod2996);
          real basisEval2A0E#1 = RMul(coeff29A6,prod299A);
          real basisEval2A0F#1 = RMul(coeff298A,prod29A0);
          real basisEval2A10#2 = RMul(coeff296A,prod29A2);
          real basisEval2A11#2 = RMul(coeff296A,prod29A8);
          real basisEval2A12#1 = RMul(coeff2977,prod29AF);
          real basisEval2A13#2 = RMul(coeff298A,prod29B2);
          real basisEval2A14#1 = RMul(coeff29A6,prod29B5);
          real basisEval2A15#1 = RMul(coeff29CD,prod29B9);
          real basisEval2A16#1 = RMul(coeff298A,prod29BF);
          real basisEval2A17#1 = RMul(coeff29A6,prod29C1);
          real basisEval2A18#1 = RMul(coeff296A,prod29C3);
          real basisEval2A19#2 = RMul(coeff296A,prod29C9);
          real basisEval2A1A#1 = RMul(coeff2977,prod29CB);
          real basisEval2A1B#2 = RMul(coeff296A,prod29CF);
          real basisEval2A1C#1 = RMul(one296B,prod2979);
          real basisEval2A1D#1 = RMul(coeff29D8,prod2980);
          real basisEval2A1E#1 = RMul(one296B,prod298C);
          real basisEval2A1F#2 = RMul(coeff2977,prod2996);
          real basisEval2A20#1 = RMul(coeff29D5,prod299C);
          real basisEval2A21#1 = RMul(coeff29D5,prod29A0);
          real basisEval2A22#2 = RMul(coeff296A,prod29A4);
          real basisEval2A23#1 = RMul(one296B,prod29A8);
          real basisEval2A24#1 = RMul(coeff29EA,prod29AF);
          real basisEval2A25#1 = RMul(coeff29EE,prod29B2);
          real basisEval2A26#1 = RMul(coeff29EA,prod29B5);
          real basisEval2A27#1 = RMul(coeff29D8,prod29BB);
          real basisEval2A28#1 = RMul(coeff29D8,prod29C1);
          real basisEval2A29#1 = RMul(coeff29D8,prod29C5);
          real basisEval2A2A#2 = RMul(coeff296A,prod29CB);
          real basisEval2A2B#1 = RMul(one296B,prod29CF);
          real basisEval2A2C#1 = RMul(coeff2977,prod2971);
          real basisEval2A2D#1 = RMul(coeff298A,prod297D);
          real basisEval2A2E#1 = RMul(coeff29A6,prod2990);
          real basisEval2A2F#1 = RMul(coeff298A,prod2993);
          real basisEval2A30#1 = RMul(coeff298A,prod299C);
          real basisEval2A31#1 = RMul(coeff29CD,prod29AC);
          real basisEval2A32#1 = RMul(coeff29A6,prod29AF);
          real basisEval2A33#1 = RMul(coeff2977,prod29B5);
          real basisEval2A34#1 = RMul(coeff29A6,prod29BB);
          real basisEval2A35#1 = RMul(coeff298A,prod29BD);
          real basisEval2A36#1 = RMul(coeff296A,prod29C7);
          real basisEval2A37#1 = RMul(coeff2977,prod29C9);
          tensor[84] intermediateCons2A38#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval297A,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2981,basisEval2985,basisEval2987,basisEval2989,basisEval298D,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2994,basisEval2997,basisEval299B,basisEval299D,basisEval299F,basisEval29A1,basisEval29A3,basisEval29A5,basisEval29A9,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval29B0,basisEval29B3,basisEval29B6,basisEval29BA,basisEval29BC,basisEval29BE,basisEval29C0,basisEval29C2,basisEval29C4,basisEval29C6,basisEval29C8,basisEval29CA,basisEval29CC,basisEval29D0];
          tensor[84] intermediateCons2A39#2 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D2,basisEval2976,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D4,basisEval2981,basisEval29D6,basisEval2969,basisEval29D7,basisEval29D9,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29DB,basisEval2994,basisEval29DC,basisEval29DD,basisEval2969,basisEval29DE,basisEval29DF,basisEval29A1,basisEval2969,basisEval29E0,basisEval29E1,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29E3,basisEval29B0,basisEval29E4,basisEval29E5,basisEval29E7,basisEval2969,basisEval29E8,basisEval29E9,basisEval29C0,basisEval29EB,basisEval2969,basisEval29EC,basisEval29ED,basisEval29EF,basisEval2969,basisEval29F0,basisEval29F1,basisEval2969,basisEval29F2,basisEval2969];
          tensor[84] intermediateCons2A3A#2 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval29F3,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2981,basisEval29F5,basisEval2969,basisEval29F6,basisEval29F7,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval29F9,basisEval2997,basisEval29FA,basisEval2969,basisEval299D,basisEval29DF,basisEval29FB,basisEval2969,basisEval29FC,basisEval29FD,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval29FF,basisEval29E4,basisEval29B6,basisEval2A00,basisEval2969,basisEval2A01,basisEval29BE,basisEval2A02,basisEval2A03,basisEval2969,basisEval2A04,basisEval29ED,basisEval2A05,basisEval2969,basisEval2A06,basisEval2A07,basisEval2969,basisEval29F2,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3B#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2A08,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2A09,basisEval2A0A,basisEval2969,basisEval2969,basisEval29D7,basisEval2989,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2A0C,basisEval2A0D,basisEval2A0E,basisEval2969,basisEval2969,basisEval29DE,basisEval299F,basisEval2A0F,basisEval2969,basisEval2969,basisEval2A10,basisEval29E1,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval2A12,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2969,basisEval2969,basisEval29E8,basisEval29BE,basisEval2A16,basisEval2A17,basisEval2969,basisEval2969,basisEval2A18,basisEval29ED,basisEval29C8,basisEval2969,basisEval2969,basisEval2A19,basisEval2A1A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3C#2 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval2969,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2A1D,basisEval29D6,basisEval2969,basisEval2969,basisEval29D7,basisEval29F7,basisEval2969,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval2A0C,basisEval2A1F,basisEval29DD,basisEval2969,basisEval2969,basisEval2A20,basisEval29DF,basisEval2A21,basisEval2969,basisEval2969,basisEval2A10,basisEval2A22,basisEval2969,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval2A24,basisEval2A25,basisEval2A26,basisEval29E7,basisEval2969,basisEval2969,basisEval2A27,basisEval29BE,basisEval29C0,basisEval2A28,basisEval2969,basisEval2969,basisEval29EC,basisEval2A29,basisEval2A05,basisEval2969,basisEval2969,basisEval2A19,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3D#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2C,basisEval2976,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2D,basisEval2A09,basisEval2985,basisEval2969,basisEval2969,basisEval2987,basisEval29F7,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2E,basisEval2A2F,basisEval2A1F,basisEval299B,basisEval2969,basisEval2969,basisEval2A30,basisEval299F,basisEval29FB,basisEval2969,basisEval2969,basisEval29FC,basisEval2A22,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A31,basisEval2A32,basisEval2A13,basisEval2A33,basisEval29BA,basisEval2969,basisEval2969,basisEval2A34,basisEval2A35,basisEval29C0,basisEval2A03,basisEval2969,basisEval2969,basisEval29C4,basisEval29ED,basisEval2A36,basisEval2969,basisEval2969,basisEval2A37,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          tensor[3,84] intermediateCons2A3E#1 = <tensor[3,84]>[intermediateCons2A38,intermediateCons2A39,intermediateCons2A3A];
          tensor[3,84] intermediateCons2A3F#1 = <tensor[3,84]>[intermediateCons2A39,intermediateCons2A3B,intermediateCons2A3C];
          tensor[3,84] intermediateCons2A40#1 = <tensor[3,84]>[intermediateCons2A3A,intermediateCons2A3C,intermediateCons2A3D];
          tensor[3,3,84] intermediateCons2A41#1 = <tensor[3,3,84]>[intermediateCons2A3E,intermediateCons2A3F,intermediateCons2A40];
          tensor[3,3,84] basisResult2965#9 = intermediateCons2A41;
          tensor[84] projParam2B20#1 = ProjectLast<tensor[3,3,84],[0,0]>(basisResult2965);
          real vdot2B21#1 = VDot<84>(femDofs26C1,projParam2B20);
          tensor[84] projParam2B22#1 = ProjectLast<tensor[3,3,84],[0,1]>(basisResult2965);
          real vdot2B23#1 = VDot<84>(femDofs26C1,projParam2B22);
          tensor[84] projParam2B24#1 = ProjectLast<tensor[3,3,84],[0,2]>(basisResult2965);
          real vdot2B25#1 = VDot<84>(femDofs26C1,projParam2B24);
          tensor[3] tensor2B26#1 = <tensor[3]>[vdot2B21,vdot2B23,vdot2B25];
          tensor[84] projParam2B27#1 = ProjectLast<tensor[3,3,84],[1,0]>(basisResult2965);
          real vdot2B28#1 = VDot<84>(femDofs26C1,projParam2B27);
          tensor[84] projParam2B29#1 = ProjectLast<tensor[3,3,84],[1,1]>(basisResult2965);
          real vdot2B2A#1 = VDot<84>(femDofs26C1,projParam2B29);
          tensor[84] projParam2B2B#1 = ProjectLast<tensor[3,3,84],[1,2]>(basisResult2965);
          real vdot2B2C#1 = VDot<84>(femDofs26C1,projParam2B2B);
          tensor[3] tensor2B2D#1 = <tensor[3]>[vdot2B28,vdot2B2A,vdot2B2C];
          tensor[84] projParam2B2E#1 = ProjectLast<tensor[3,3,84],[2,0]>(basisResult2965);
          real vdot2B2F#1 = VDot<84>(femDofs26C1,projParam2B2E);
          tensor[84] projParam2B30#1 = ProjectLast<tensor[3,3,84],[2,1]>(basisResult2965);
          real vdot2B31#1 = VDot<84>(femDofs26C1,projParam2B30);
          tensor[84] projParam2B32#1 = ProjectLast<tensor[3,3,84],[2,2]>(basisResult2965);
          real vdot2B33#1 = VDot<84>(femDofs26C1,projParam2B32);
          tensor[3] tensor2B34#1 = <tensor[3]>[vdot2B2F,vdot2B31,vdot2B33];
          tensor[3,3] _t2B1F#1 = <tensor[3,3]>[tensor2B26,tensor2B2D,tensor2B34];
          real[3] _t2B4C#1 = EigenVals3x3(_t2B1F);
          int _t2B4E#1 = 1;
          real _t2B50#1 = Subscript<real[3]>(_t2B4C,_t2B4E);
          real varAcc2B53#5 = VIndex<3,0>(pos24B7);
          real varAcc2B54#5 = VIndex<3,1>(pos24B7);
          real varAcc2B55#5 = VIndex<3,2>(pos24B7);
          real basisEval2B56#84 = 0.e0;
          real coeff2B57#79 = 0.1e1;
          real prod2B58#6 = RMul(coeff2B57,coeff2B57);
          real prod2B59#1 = RMul(coeff2B57,prod2B58);
          real basisEval2B5A#3 = RMul(coeff2B57,prod2B59);
          real iden2B5B#6 = varAcc2B55;
          real prod2B5C#5 = RMul(coeff2B57,iden2B5B);
          real prod2B5D#2 = RMul(coeff2B57,prod2B5C);
          real basisEval2B5E#2 = RMul(coeff2B57,prod2B5D);
          real iden2B5F#6 = varAcc2B54;
          real prod2B60#5 = RMul(iden2B5F,coeff2B57);
          real prod2B61#2 = RMul(coeff2B57,prod2B60);
          real basisEval2B62#2 = RMul(coeff2B57,prod2B61);
          real coeff2B63#34 = 0.2e1;
          real iden2B64#16 = varAcc2B53;
          real prod2B65#2 = RMul(iden2B64,prod2B58);
          real basisEval2B66#1 = RMul(coeff2B63,prod2B65);
          real prod22B67#5 = RMul(iden2B5B,varAcc2B55);
          real prod2B68#4 = RMul(coeff2B57,prod22B67);
          real prod2B69#2 = RMul(coeff2B57,prod2B68);
          real basisEval2B6A#2 = RMul(coeff2B57,prod2B69);
          real prod2B6B#4 = RMul(iden2B5F,iden2B5B);
          real prod2B6C#2 = RMul(coeff2B57,prod2B6B);
          real basisEval2B6D#1 = RMul(coeff2B57,prod2B6C);
          real prod22B6E#5 = RMul(iden2B5F,varAcc2B54);
          real prod2B6F#4 = RMul(prod22B6E,coeff2B57);
          real prod2B70#2 = RMul(coeff2B57,prod2B6F);
          real basisEval2B71#2 = RMul(coeff2B57,prod2B70);
          real prod2B72#2 = RMul(iden2B64,prod2B5C);
          real basisEval2B73#2 = RMul(coeff2B63,prod2B72);
          real prod2B74#2 = RMul(iden2B64,prod2B60);
          real basisEval2B75#2 = RMul(coeff2B63,prod2B74);
          real coeff2B76#24 = 0.3e1;
          real prod22B77#11 = RMul(iden2B64,varAcc2B53);
          real prod2B78#2 = RMul(prod22B77,prod2B58);
          real basisEval2B79#1 = RMul(coeff2B76,prod2B78);
          real prod32B7A#4 = RMul(prod22B67,varAcc2B55);
          real prod2B7B#3 = RMul(coeff2B57,prod32B7A);
          real prod2B7C#2 = RMul(coeff2B57,prod2B7B);
          real basisEval2B7D#2 = RMul(coeff2B57,prod2B7C);
          real prod2B7E#3 = RMul(iden2B5F,prod22B67);
          real prod2B7F#3 = RMul(coeff2B57,prod2B7E);
          real basisEval2B80#1 = RMul(coeff2B57,prod2B7F);
          real prod2B81#3 = RMul(prod22B6E,iden2B5B);
          real prod2B82#3 = RMul(coeff2B57,prod2B81);
          real basisEval2B83#1 = RMul(coeff2B57,prod2B82);
          real prod32B84#4 = RMul(prod22B6E,varAcc2B54);
          real prod2B85#3 = RMul(prod32B84,coeff2B57);
          real prod2B86#2 = RMul(coeff2B57,prod2B85);
          real basisEval2B87#2 = RMul(coeff2B57,prod2B86);
          real prod2B88#3 = RMul(iden2B64,prod2B68);
          real basisEval2B89#1 = RMul(coeff2B63,prod2B88);
          real prod2B8A#1 = RMul(iden2B64,prod2B6B);
          real basisEval2B8B#3 = RMul(coeff2B63,prod2B8A);
          real prod2B8C#3 = RMul(iden2B64,prod2B6F);
          real basisEval2B8D#1 = RMul(coeff2B63,prod2B8C);
          real prod2B8E#3 = RMul(prod22B77,prod2B5C);
          real basisEval2B8F#1 = RMul(coeff2B76,prod2B8E);
          real prod2B90#3 = RMul(prod22B77,prod2B60);
          real basisEval2B91#1 = RMul(coeff2B76,prod2B90);
          real coeff2B92#18 = 0.4e1;
          real prod32B93#7 = RMul(prod22B77,varAcc2B53);
          real prod2B94#2 = RMul(prod32B93,prod2B58);
          real basisEval2B95#1 = RMul(coeff2B92,prod2B94);
          real prod42B96#3 = RMul(prod32B7A,varAcc2B55);
          real prod2B97#2 = RMul(coeff2B57,prod42B96);
          real prod2B98#2 = RMul(coeff2B57,prod2B97);
          real basisEval2B99#2 = RMul(coeff2B57,prod2B98);
          real prod2B9A#2 = RMul(iden2B5F,prod32B7A);
          real prod2B9B#3 = RMul(coeff2B57,prod2B9A);
          real basisEval2B9C#1 = RMul(coeff2B57,prod2B9B);
          real prod2B9D#2 = RMul(prod22B6E,prod22B67);
          real prod2B9E#2 = RMul(coeff2B57,prod2B9D);
          real basisEval2B9F#1 = RMul(coeff2B57,prod2B9E);
          real prod2BA0#2 = RMul(prod32B84,iden2B5B);
          real prod2BA1#3 = RMul(coeff2B57,prod2BA0);
          real basisEval2BA2#1 = RMul(coeff2B57,prod2BA1);
          real prod42BA3#3 = RMul(prod32B84,varAcc2B54);
          real prod2BA4#2 = RMul(prod42BA3,coeff2B57);
          real prod2BA5#2 = RMul(coeff2B57,prod2BA4);
          real basisEval2BA6#2 = RMul(coeff2B57,prod2BA5);
          real prod2BA7#3 = RMul(iden2B64,prod2B7B);
          real basisEval2BA8#1 = RMul(coeff2B63,prod2BA7);
          real prod2BA9#2 = RMul(iden2B64,prod2B7E);
          real basisEval2BAA#2 = RMul(coeff2B63,prod2BA9);
          real prod2BAB#2 = RMul(iden2B64,prod2B81);
          real basisEval2BAC#2 = RMul(coeff2B63,prod2BAB);
          real prod2BAD#3 = RMul(iden2B64,prod2B85);
          real basisEval2BAE#1 = RMul(coeff2B63,prod2BAD);
          real prod2BAF#2 = RMul(prod22B77,prod2B68);
          real basisEval2BB0#2 = RMul(coeff2B76,prod2BAF);
          real prod2BB1#2 = RMul(prod22B77,prod2B6B);
          real basisEval2BB2#1 = RMul(coeff2B76,prod2BB1);
          real prod2BB3#2 = RMul(prod22B77,prod2B6F);
          real basisEval2BB4#2 = RMul(coeff2B76,prod2BB3);
          real prod2BB5#3 = RMul(prod32B93,prod2B5C);
          real basisEval2BB6#1 = RMul(coeff2B92,prod2BB5);
          real prod2BB7#3 = RMul(prod32B93,prod2B60);
          real basisEval2BB8#1 = RMul(coeff2B92,prod2BB7);
          real coeff2BB9#9 = 0.5e1;
          real prod42BBA#4 = RMul(prod32B93,varAcc2B53);
          real prod2BBB#2 = RMul(prod42BBA,prod2B58);
          real basisEval2BBC#1 = RMul(coeff2BB9,prod2BBB);
          real prod52BBD#1 = RMul(prod42B96,varAcc2B55);
          real prod2BBE#1 = RMul(coeff2B57,prod52BBD);
          real prod2BBF#2 = RMul(coeff2B57,prod2BBE);
          real basisEval2BC0#2 = RMul(coeff2B57,prod2BBF);
          real prod2BC1#1 = RMul(iden2B5F,prod42B96);
          real prod2BC2#3 = RMul(coeff2B57,prod2BC1);
          real basisEval2BC3#1 = RMul(coeff2B57,prod2BC2);
          real prod2BC4#1 = RMul(prod22B6E,prod32B7A);
          real prod2BC5#3 = RMul(coeff2B57,prod2BC4);
          real basisEval2BC6#1 = RMul(coeff2B57,prod2BC5);
          real prod2BC7#1 = RMul(prod32B84,prod22B67);
          real prod2BC8#3 = RMul(coeff2B57,prod2BC7);
          real basisEval2BC9#1 = RMul(coeff2B57,prod2BC8);
          real prod2BCA#1 = RMul(prod42BA3,iden2B5B);
          real prod2BCB#3 = RMul(coeff2B57,prod2BCA);
          real basisEval2BCC#1 = RMul(coeff2B57,prod2BCB);
          real prod52BCD#1 = RMul(prod42BA3,varAcc2B54);
          real prod2BCE#1 = RMul(prod52BCD,coeff2B57);
          real prod2BCF#2 = RMul(coeff2B57,prod2BCE);
          real basisEval2BD0#2 = RMul(coeff2B57,prod2BCF);
          real prod2BD1#3 = RMul(iden2B64,prod2B97);
          real basisEval2BD2#1 = RMul(coeff2B63,prod2BD1);
          real prod2BD3#2 = RMul(iden2B64,prod2B9A);
          real basisEval2BD4#2 = RMul(coeff2B63,prod2BD3);
          real prod2BD5#2 = RMul(iden2B64,prod2B9D);
          real basisEval2BD6#1 = RMul(coeff2B63,prod2BD5);
          real prod2BD7#2 = RMul(iden2B64,prod2BA0);
          real basisEval2BD8#2 = RMul(coeff2B63,prod2BD7);
          real prod2BD9#3 = RMul(iden2B64,prod2BA4);
          real basisEval2BDA#1 = RMul(coeff2B63,prod2BD9);
          real prod2BDB#3 = RMul(prod22B77,prod2B7B);
          real basisEval2BDC#1 = RMul(coeff2B76,prod2BDB);
          real prod2BDD#2 = RMul(prod22B77,prod2B7E);
          real basisEval2BDE#2 = RMul(coeff2B76,prod2BDD);
          real prod2BDF#2 = RMul(prod22B77,prod2B81);
          real basisEval2BE0#2 = RMul(coeff2B76,prod2BDF);
          real prod2BE1#3 = RMul(prod22B77,prod2B85);
          real basisEval2BE2#1 = RMul(coeff2B76,prod2BE1);
          real prod2BE3#3 = RMul(prod32B93,prod2B68);
          real basisEval2BE4#1 = RMul(coeff2B92,prod2BE3);
          real prod2BE5#2 = RMul(prod32B93,prod2B6B);
          real basisEval2BE6#1 = RMul(coeff2B92,prod2BE5);
          real prod2BE7#3 = RMul(prod32B93,prod2B6F);
          real basisEval2BE8#1 = RMul(coeff2B92,prod2BE7);
          real prod2BE9#3 = RMul(prod42BBA,prod2B5C);
          real basisEval2BEA#1 = RMul(coeff2BB9,prod2BE9);
          real prod2BEB#3 = RMul(prod42BBA,prod2B60);
          real basisEval2BEC#1 = RMul(coeff2BB9,prod2BEB);
          real coeff2BED#3 = 0.6e1;
          real prod52BEE#1 = RMul(prod42BBA,varAcc2B53);
          real prod2BEF#2 = RMul(prod52BEE,prod2B58);
          real basisEval2BF0#1 = RMul(coeff2BED,prod2BEF);
          real basisEval2BF1#1 = RMul(coeff2B63,prod2B61);
          real basisEval2BF2#2 = RMul(coeff2B57,prod2B65);
          real basisEval2BF3#2 = RMul(coeff2B63,prod2B6C);
          real basisEval2BF4#1 = RMul(coeff2B76,prod2B70);
          real basisEval2BF5#1 = RMul(coeff2B57,prod2B72);
          real basisEval2BF6#2 = RMul(coeff2B57,prod2B78);
          real basisEval2BF7#1 = RMul(coeff2B63,prod2B7F);
          real basisEval2BF8#1 = RMul(coeff2B76,prod2B82);
          real basisEval2BF9#1 = RMul(coeff2B92,prod2B86);
          real basisEval2BFA#1 = RMul(coeff2B57,prod2B88);
          real basisEval2BFB#1 = RMul(coeff2B76,prod2B8C);
          real basisEval2BFC#1 = RMul(coeff2B57,prod2B8E);
          real basisEval2BFD#1 = RMul(coeff2B63,prod2B90);
          real basisEval2BFE#2 = RMul(coeff2B57,prod2B94);
          real basisEval2BFF#1 = RMul(coeff2B63,prod2B9B);
          real basisEval2C00#2 = RMul(coeff2B76,prod2B9E);
          real basisEval2C01#1 = RMul(coeff2B92,prod2BA1);
          real basisEval2C02#1 = RMul(coeff2BB9,prod2BA5);
          real basisEval2C03#1 = RMul(coeff2B57,prod2BA7);
          real basisEval2C04#1 = RMul(coeff2B76,prod2BAB);
          real basisEval2C05#1 = RMul(coeff2B92,prod2BAD);
          real basisEval2C06#1 = RMul(coeff2B57,prod2BAF);
          real basisEval2C07#2 = RMul(coeff2B63,prod2BB1);
          real basisEval2C08#1 = RMul(coeff2B57,prod2BB5);
          real basisEval2C09#1 = RMul(coeff2B63,prod2BB7);
          real basisEval2C0A#2 = RMul(coeff2B57,prod2BBB);
          real basisEval2C0B#1 = RMul(coeff2B63,prod2BC2);
          real basisEval2C0C#1 = RMul(coeff2B76,prod2BC5);
          real basisEval2C0D#1 = RMul(coeff2B92,prod2BC8);
          real basisEval2C0E#1 = RMul(coeff2BB9,prod2BCB);
          real basisEval2C0F#1 = RMul(coeff2BED,prod2BCF);
          real basisEval2C10#1 = RMul(coeff2B57,prod2BD1);
          real basisEval2C11#2 = RMul(coeff2B76,prod2BD5);
          real basisEval2C12#1 = RMul(coeff2B92,prod2BD7);
          real basisEval2C13#1 = RMul(coeff2BB9,prod2BD9);
          real basisEval2C14#1 = RMul(coeff2B57,prod2BDB);
          real basisEval2C15#1 = RMul(coeff2B63,prod2BDD);
          real basisEval2C16#1 = RMul(coeff2B92,prod2BE1);
          real basisEval2C17#1 = RMul(coeff2B57,prod2BE3);
          real basisEval2C18#2 = RMul(coeff2B63,prod2BE5);
          real basisEval2C19#1 = RMul(coeff2B76,prod2BE7);
          real basisEval2C1A#1 = RMul(coeff2B57,prod2BE9);
          real basisEval2C1B#1 = RMul(coeff2B63,prod2BEB);
          real basisEval2C1C#2 = RMul(coeff2B57,prod2BEF);
          real basisEval2C1D#1 = RMul(coeff2B63,prod2B5D);
          real basisEval2C1E#1 = RMul(coeff2B76,prod2B69);
          real basisEval2C1F#1 = RMul(coeff2B57,prod2B74);
          real basisEval2C20#1 = RMul(coeff2B92,prod2B7C);
          real basisEval2C21#1 = RMul(coeff2B76,prod2B7F);
          real basisEval2C22#1 = RMul(coeff2B63,prod2B82);
          real basisEval2C23#1 = RMul(coeff2B76,prod2B88);
          real basisEval2C24#1 = RMul(coeff2B57,prod2B8C);
          real basisEval2C25#1 = RMul(coeff2B63,prod2B8E);
          real basisEval2C26#1 = RMul(coeff2B57,prod2B90);
          real basisEval2C27#1 = RMul(coeff2BB9,prod2B98);
          real basisEval2C28#1 = RMul(coeff2B92,prod2B9B);
          real basisEval2C29#1 = RMul(coeff2B63,prod2BA1);
          real basisEval2C2A#1 = RMul(coeff2B92,prod2BA7);
          real basisEval2C2B#1 = RMul(coeff2B76,prod2BA9);
          real basisEval2C2C#1 = RMul(coeff2B57,prod2BAD);
          real basisEval2C2D#1 = RMul(coeff2B57,prod2BB3);
          real basisEval2C2E#1 = RMul(coeff2B63,prod2BB5);
          real basisEval2C2F#1 = RMul(coeff2B57,prod2BB7);
          real basisEval2C30#1 = RMul(coeff2BED,prod2BBF);
          real basisEval2C31#1 = RMul(coeff2BB9,prod2BC2);
          real basisEval2C32#1 = RMul(coeff2B92,prod2BC5);
          real basisEval2C33#1 = RMul(coeff2B76,prod2BC8);
          real basisEval2C34#1 = RMul(coeff2B63,prod2BCB);
          real basisEval2C35#1 = RMul(coeff2BB9,prod2BD1);
          real basisEval2C36#1 = RMul(coeff2B92,prod2BD3);
          real basisEval2C37#1 = RMul(coeff2B57,prod2BD9);
          real basisEval2C38#1 = RMul(coeff2B92,prod2BDB);
          real basisEval2C39#1 = RMul(coeff2B63,prod2BDF);
          real basisEval2C3A#1 = RMul(coeff2B57,prod2BE1);
          real basisEval2C3B#1 = RMul(coeff2B76,prod2BE3);
          real basisEval2C3C#1 = RMul(coeff2B57,prod2BE7);
          real basisEval2C3D#1 = RMul(coeff2B63,prod2BE9);
          real basisEval2C3E#1 = RMul(coeff2B57,prod2BEB);
          tensor[84] intermediateCons2C3F#1 = <tensor[84]>[basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B5A,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B5E,basisEval2B62,basisEval2B66,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B6A,basisEval2B6D,basisEval2B71,basisEval2B73,basisEval2B75,basisEval2B79,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B7D,basisEval2B80,basisEval2B83,basisEval2B87,basisEval2B89,basisEval2B8B,basisEval2B8D,basisEval2B8F,basisEval2B91,basisEval2B95,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B99,basisEval2B9C,basisEval2B9F,basisEval2BA2,basisEval2BA6,basisEval2BA8,basisEval2BAA,basisEval2BAC,basisEval2BAE,basisEval2BB0,basisEval2BB2,basisEval2BB4,basisEval2BB6,basisEval2BB8,basisEval2BBC,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2BC0,basisEval2BC3,basisEval2BC6,basisEval2BC9,basisEval2BCC,basisEval2BD0,basisEval2BD2,basisEval2BD4,basisEval2BD6,basisEval2BD8,basisEval2BDA,basisEval2BDC,basisEval2BDE,basisEval2BE0,basisEval2BE2,basisEval2BE4,basisEval2BE6,basisEval2BE8,basisEval2BEA,basisEval2BEC,basisEval2BF0];
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval2B56,basisEval2B56,basisEval2B5A,basisEval2B56,basisEval2B56,basisEval2B5E,basisEval2BF1,basisEval2B56,basisEval2BF2,basisEval2B56,basisEval2B56,basisEval2B6A,basisEval2BF3,basisEval2BF4,basisEval2B56,basisEval2BF5,basisEval2B75,basisEval2B56,basisEval2BF6,basisEval2B56,basisEval2B56,basisEval2B7D,basisEval2BF7,basisEval2BF8,basisEval2BF9,basisEval2B56,basisEval2BFA,basisEval2B8B,basisEval2BFB,basisEval2B56,basisEval2BFC,basisEval2BFD,basisEval2B56,basisEval2BFE,basisEval2B56,basisEval2B56,basisEval2B99,basisEval2BFF,basisEval2C00,basisEval2C01,basisEval2C02,basisEval2B56,basisEval2C03,basisEval2BAA,basisEval2C04,basisEval2C05,basisEval2B56,basisEval2C06,basisEval2C07,basisEval2BB4,basisEval2B56,basisEval2C08,basisEval2C09,basisEval2B56,basisEval2C0A,basisEval2B56,basisEval2B56,basisEval2BC0,basisEval2C0B,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2B56,basisEval2C10,basisEval2BD4,basisEval2C11,basisEval2C12,basisEval2C13,basisEval2B56,basisEval2C14,basisEval2C15,basisEval2BE0,basisEval2C16,basisEval2B56,basisEval2C17,basisEval2C18,basisEval2C19,basisEval2B56,basisEval2C1A,basisEval2C1B,basisEval2B56,basisEval2C1C,basisEval2B56];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval2B56,basisEval2B5A,basisEval2B56,basisEval2B56,basisEval2C1D,basisEval2B62,basisEval2B56,basisEval2BF2,basisEval2B56,basisEval2B56,basisEval2C1E,basisEval2BF3,basisEval2B71,basisEval2B56,basisEval2B73,basisEval2C1F,basisEval2B56,basisEval2BF6,basisEval2B56,basisEval2B56,basisEval2C20,basisEval2C21,basisEval2C22,basisEval2B87,basisEval2B56,basisEval2C23,basisEval2B8B,basisEval2C24,basisEval2B56,basisEval2C25,basisEval2C26,basisEval2B56,basisEval2BFE,basisEval2B56,basisEval2B56,basisEval2C27,basisEval2C28,basisEval2C00,basisEval2C29,basisEval2BA6,basisEval2B56,basisEval2C2A,basisEval2C2B,basisEval2BAC,basisEval2C2C,basisEval2B56,basisEval2BB0,basisEval2C07,basisEval2C2D,basisEval2B56,basisEval2C2E,basisEval2C2F,basisEval2B56,basisEval2C0A,basisEval2B56,basisEval2B56,basisEval2C30,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2BD0,basisEval2B56,basisEval2C35,basisEval2C36,basisEval2C11,basisEval2BD8,basisEval2C37,basisEval2B56,basisEval2C38,basisEval2BDE,basisEval2C39,basisEval2C3A,basisEval2B56,basisEval2C3B,basisEval2C18,basisEval2C3C,basisEval2B56,basisEval2C3D,basisEval2C3E,basisEval2B56,basisEval2C1C,basisEval2B56,basisEval2B56];
          tensor[3,84] intermediateCons2C42#1 = <tensor[3,84]>[intermediateCons2C3F,intermediateCons2C40,intermediateCons2C41];
          tensor[3,84] basisResult2B52#3 = intermediateCons2C42;
          tensor[84] projParam2D35#1 = ProjectLast<tensor[3,84],[0]>(basisResult2B52);
          real vdot2D36#1 = VDot<84>(femDofs26C1,projParam2D35);
          tensor[84] projParam2D37#1 = ProjectLast<tensor[3,84],[1]>(basisResult2B52);
          real vdot2D38#1 = VDot<84>(femDofs26C1,projParam2D37);
          tensor[84] projParam2D39#1 = ProjectLast<tensor[3,84],[2]>(basisResult2B52);
          real vdot2D3A#1 = VDot<84>(femDofs26C1,projParam2D39);
          tensor[3] probe_l_62D34#2 = <tensor[3]>[vdot2D36,vdot2D38,vdot2D3A];
          real op1_e3_l_82D43#1 = VDot<3>(probe_l_62D34,probe_l_62D34);
          real op1_e3_l_92D46#1 = Sqrt(op1_e3_l_82D43);
          real op1_e3_l_102D49#1 = RNeg(_t2B50);
          real op1_e3_l_112D4C#1 = RAdd(fBias2481,op1_e3_l_92D46);
          real _t2D4F#1 = RDiv(op1_e3_l_102D49,op1_e3_l_112D4C);
          bool _t2D52#1 = GT<real>(_t2D4F,fStrTh247D);
          if _t2D52 then goto ASSIGN2D56 else goto ASSIGN40DF
        ASSIGN2D56:  preds = [COND2D54]
          real _t2D55#1 = 0.1e1;
          bool _t2D57#1 = GTE<real>(_t2D55,fMaskTh247F);
          if _t2D57 then goto ASSIGN2D5B else goto ASSIGN40DE
        ASSIGN2D5B:  preds = [COND2D59]
          bool _t2D5A#1 = true;
          goto JOIN2D5E
        JOIN2D5E:  preds = [ASSIGN2D5B,ASSIGN40DE]
          bool _t2D5C#1 = phi(_t2D5A,_t2D5D)
          goto JOIN2D61
        JOIN2D61:  preds = [JOIN2D5E,ASSIGN40DF]
          bool _t2D5F#1 = phi(_t2D5C,_t2D60)
          goto JOIN2D64
        JOIN2D64:  preds = [JOIN2D61,ASSIGN40E0]
          bool _t2D62#1 = phi(_t2D5F,_t2D63)
          bool _t2D65#1 = BNot(_t2D62);
          if _t2D65 then goto SAVE2D68 else goto JOIN2D6A
        SAVE2D68:  preds = [COND2D67]
          self.rayN = rayN24AB;
          active
          goto JOIN2D6A
        JOIN2D6A:  preds = [*ACTIVE2D69,COND2D67]
          bool _t2D6B#1 = BNot(analytical248B);
          if _t2D6B then goto ASSIGN2E6E else goto ASSIGN3EA0
        ASSIGN2E6E:  preds = [COND2D6D]
          int ilit2D6F#1 = 84;
          int mulRes2D70#84 = IMul(_t246B,ilit2D6F);
          int ilit2D71#1 = 0;
          int addRes2D72#1 = IAdd(mulRes2D70,ilit2D71);
          int idx2D73#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D72);
          int ilit2D74#1 = 1;
          int addRes2D75#1 = IAdd(mulRes2D70,ilit2D74);
          int idx2D76#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D75);
          int ilit2D77#1 = 2;
          int addRes2D78#1 = IAdd(mulRes2D70,ilit2D77);
          int idx2D79#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D78);
          int ilit2D7A#1 = 3;
          int addRes2D7B#1 = IAdd(mulRes2D70,ilit2D7A);
          int idx2D7C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7B);
          int ilit2D7D#1 = 4;
          int addRes2D7E#1 = IAdd(mulRes2D70,ilit2D7D);
          int idx2D7F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7E);
          int ilit2D80#1 = 5;
          int addRes2D81#1 = IAdd(mulRes2D70,ilit2D80);
          int idx2D82#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D81);
          int ilit2D83#1 = 6;
          int addRes2D84#1 = IAdd(mulRes2D70,ilit2D83);
          int idx2D85#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D84);
          int ilit2D86#1 = 7;
          int addRes2D87#1 = IAdd(mulRes2D70,ilit2D86);
          int idx2D88#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D87);
          int ilit2D89#1 = 8;
          int addRes2D8A#1 = IAdd(mulRes2D70,ilit2D89);
          int idx2D8B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8A);
          int ilit2D8C#1 = 9;
          int addRes2D8D#1 = IAdd(mulRes2D70,ilit2D8C);
          int idx2D8E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8D);
          int ilit2D8F#1 = 10;
          int addRes2D90#1 = IAdd(mulRes2D70,ilit2D8F);
          int idx2D91#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D90);
          int ilit2D92#1 = 11;
          int addRes2D93#1 = IAdd(mulRes2D70,ilit2D92);
          int idx2D94#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D93);
          int ilit2D95#1 = 12;
          int addRes2D96#1 = IAdd(mulRes2D70,ilit2D95);
          int idx2D97#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D96);
          int ilit2D98#1 = 13;
          int addRes2D99#1 = IAdd(mulRes2D70,ilit2D98);
          int idx2D9A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D99);
          int ilit2D9B#1 = 14;
          int addRes2D9C#1 = IAdd(mulRes2D70,ilit2D9B);
          int idx2D9D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9C);
          int ilit2D9E#1 = 15;
          int addRes2D9F#1 = IAdd(mulRes2D70,ilit2D9E);
          int idx2DA0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9F);
          int ilit2DA1#1 = 16;
          int addRes2DA2#1 = IAdd(mulRes2D70,ilit2DA1);
          int idx2DA3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA2);
          int ilit2DA4#1 = 17;
          int addRes2DA5#1 = IAdd(mulRes2D70,ilit2DA4);
          int idx2DA6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA5);
          int ilit2DA7#1 = 18;
          int addRes2DA8#1 = IAdd(mulRes2D70,ilit2DA7);
          int idx2DA9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA8);
          int ilit2DAA#1 = 19;
          int addRes2DAB#1 = IAdd(mulRes2D70,ilit2DAA);
          int idx2DAC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAB);
          int ilit2DAD#1 = 20;
          int addRes2DAE#1 = IAdd(mulRes2D70,ilit2DAD);
          int idx2DAF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAE);
          int ilit2DB0#1 = 21;
          int addRes2DB1#1 = IAdd(mulRes2D70,ilit2DB0);
          int idx2DB2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB1);
          int ilit2DB3#1 = 22;
          int addRes2DB4#1 = IAdd(mulRes2D70,ilit2DB3);
          int idx2DB5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB4);
          int ilit2DB6#1 = 23;
          int addRes2DB7#1 = IAdd(mulRes2D70,ilit2DB6);
          int idx2DB8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB7);
          int ilit2DB9#1 = 24;
          int addRes2DBA#1 = IAdd(mulRes2D70,ilit2DB9);
          int idx2DBB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBA);
          int ilit2DBC#1 = 25;
          int addRes2DBD#1 = IAdd(mulRes2D70,ilit2DBC);
          int idx2DBE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBD);
          int ilit2DBF#1 = 26;
          int addRes2DC0#1 = IAdd(mulRes2D70,ilit2DBF);
          int idx2DC1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC0);
          int ilit2DC2#1 = 27;
          int addRes2DC3#1 = IAdd(mulRes2D70,ilit2DC2);
          int idx2DC4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC3);
          int ilit2DC5#1 = 28;
          int addRes2DC6#1 = IAdd(mulRes2D70,ilit2DC5);
          int idx2DC7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC6);
          int ilit2DC8#1 = 29;
          int addRes2DC9#1 = IAdd(mulRes2D70,ilit2DC8);
          int idx2DCA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC9);
          int ilit2DCB#1 = 30;
          int addRes2DCC#1 = IAdd(mulRes2D70,ilit2DCB);
          int idx2DCD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCC);
          int ilit2DCE#1 = 31;
          int addRes2DCF#1 = IAdd(mulRes2D70,ilit2DCE);
          int idx2DD0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCF);
          int ilit2DD1#1 = 32;
          int addRes2DD2#1 = IAdd(mulRes2D70,ilit2DD1);
          int idx2DD3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD2);
          int ilit2DD4#1 = 33;
          int addRes2DD5#1 = IAdd(mulRes2D70,ilit2DD4);
          int idx2DD6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD5);
          int ilit2DD7#1 = 34;
          int addRes2DD8#1 = IAdd(mulRes2D70,ilit2DD7);
          int idx2DD9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD8);
          int ilit2DDA#1 = 35;
          int addRes2DDB#1 = IAdd(mulRes2D70,ilit2DDA);
          int idx2DDC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDB);
          int ilit2DDD#1 = 36;
          int addRes2DDE#1 = IAdd(mulRes2D70,ilit2DDD);
          int idx2DDF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDE);
          int ilit2DE0#1 = 37;
          int addRes2DE1#1 = IAdd(mulRes2D70,ilit2DE0);
          int idx2DE2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE1);
          int ilit2DE3#1 = 38;
          int addRes2DE4#1 = IAdd(mulRes2D70,ilit2DE3);
          int idx2DE5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE4);
          int ilit2DE6#1 = 39;
          int addRes2DE7#1 = IAdd(mulRes2D70,ilit2DE6);
          int idx2DE8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE7);
          int ilit2DE9#1 = 40;
          int addRes2DEA#1 = IAdd(mulRes2D70,ilit2DE9);
          int idx2DEB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DEA);
          int ilit2DEC#1 = 41;
          int addRes2DED#1 = IAdd(mulRes2D70,ilit2DEC);
          int idx2DEE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DED);
          int ilit2DEF#1 = 42;
          int addRes2DF0#1 = IAdd(mulRes2D70,ilit2DEF);
          int idx2DF1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF0);
          int ilit2DF2#1 = 43;
          int addRes2DF3#1 = IAdd(mulRes2D70,ilit2DF2);
          int idx2DF4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF3);
          int ilit2DF5#1 = 44;
          int addRes2DF6#1 = IAdd(mulRes2D70,ilit2DF5);
          int idx2DF7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF6);
          int ilit2DF8#1 = 45;
          int addRes2DF9#1 = IAdd(mulRes2D70,ilit2DF8);
          int idx2DFA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF9);
          int ilit2DFB#1 = 46;
          int addRes2DFC#1 = IAdd(mulRes2D70,ilit2DFB);
          int idx2DFD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFC);
          int ilit2DFE#1 = 47;
          int addRes2DFF#1 = IAdd(mulRes2D70,ilit2DFE);
          int idx2E00#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFF);
          int ilit2E01#1 = 48;
          int addRes2E02#1 = IAdd(mulRes2D70,ilit2E01);
          int idx2E03#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E02);
          int ilit2E04#1 = 49;
          int addRes2E05#1 = IAdd(mulRes2D70,ilit2E04);
          int idx2E06#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E05);
          int ilit2E07#1 = 50;
          int addRes2E08#1 = IAdd(mulRes2D70,ilit2E07);
          int idx2E09#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E08);
          int ilit2E0A#1 = 51;
          int addRes2E0B#1 = IAdd(mulRes2D70,ilit2E0A);
          int idx2E0C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0B);
          int ilit2E0D#1 = 52;
          int addRes2E0E#1 = IAdd(mulRes2D70,ilit2E0D);
          int idx2E0F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0E);
          int ilit2E10#1 = 53;
          int addRes2E11#1 = IAdd(mulRes2D70,ilit2E10);
          int idx2E12#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E11);
          int ilit2E13#1 = 54;
          int addRes2E14#1 = IAdd(mulRes2D70,ilit2E13);
          int idx2E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E14);
          int ilit2E16#1 = 55;
          int addRes2E17#1 = IAdd(mulRes2D70,ilit2E16);
          int idx2E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E17);
          int ilit2E19#1 = 56;
          int addRes2E1A#1 = IAdd(mulRes2D70,ilit2E19);
          int idx2E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1A);
          int ilit2E1C#1 = 57;
          int addRes2E1D#1 = IAdd(mulRes2D70,ilit2E1C);
          int idx2E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1D);
          int ilit2E1F#1 = 58;
          int addRes2E20#1 = IAdd(mulRes2D70,ilit2E1F);
          int idx2E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E20);
          int ilit2E22#1 = 59;
          int addRes2E23#1 = IAdd(mulRes2D70,ilit2E22);
          int idx2E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E23);
          int ilit2E25#1 = 60;
          int addRes2E26#1 = IAdd(mulRes2D70,ilit2E25);
          int idx2E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E26);
          int ilit2E28#1 = 61;
          int addRes2E29#1 = IAdd(mulRes2D70,ilit2E28);
          int idx2E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E29);
          int ilit2E2B#1 = 62;
          int addRes2E2C#1 = IAdd(mulRes2D70,ilit2E2B);
          int idx2E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2C);
          int ilit2E2E#1 = 63;
          int addRes2E2F#1 = IAdd(mulRes2D70,ilit2E2E);
          int idx2E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2F);
          int ilit2E31#1 = 64;
          int addRes2E32#1 = IAdd(mulRes2D70,ilit2E31);
          int idx2E33#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E32);
          int ilit2E34#1 = 65;
          int addRes2E35#1 = IAdd(mulRes2D70,ilit2E34);
          int idx2E36#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E35);
          int ilit2E37#1 = 66;
          int addRes2E38#1 = IAdd(mulRes2D70,ilit2E37);
          int idx2E39#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E38);
          int ilit2E3A#1 = 67;
          int addRes2E3B#1 = IAdd(mulRes2D70,ilit2E3A);
          int idx2E3C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3B);
          int ilit2E3D#1 = 68;
          int addRes2E3E#1 = IAdd(mulRes2D70,ilit2E3D);
          int idx2E3F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3E);
          int ilit2E40#1 = 69;
          int addRes2E41#1 = IAdd(mulRes2D70,ilit2E40);
          int idx2E42#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E41);
          int ilit2E43#1 = 70;
          int addRes2E44#1 = IAdd(mulRes2D70,ilit2E43);
          int idx2E45#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E44);
          int ilit2E46#1 = 71;
          int addRes2E47#1 = IAdd(mulRes2D70,ilit2E46);
          int idx2E48#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E47);
          int ilit2E49#1 = 72;
          int addRes2E4A#1 = IAdd(mulRes2D70,ilit2E49);
          int idx2E4B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4A);
          int ilit2E4C#1 = 73;
          int addRes2E4D#1 = IAdd(mulRes2D70,ilit2E4C);
          int idx2E4E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4D);
          int ilit2E4F#1 = 74;
          int addRes2E50#1 = IAdd(mulRes2D70,ilit2E4F);
          int idx2E51#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E50);
          int ilit2E52#1 = 75;
          int addRes2E53#1 = IAdd(mulRes2D70,ilit2E52);
          int idx2E54#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E53);
          int ilit2E55#1 = 76;
          int addRes2E56#1 = IAdd(mulRes2D70,ilit2E55);
          int idx2E57#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E56);
          int ilit2E58#1 = 77;
          int addRes2E59#1 = IAdd(mulRes2D70,ilit2E58);
          int idx2E5A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E59);
          int ilit2E5B#1 = 78;
          int addRes2E5C#1 = IAdd(mulRes2D70,ilit2E5B);
          int idx2E5D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5C);
          int ilit2E5E#1 = 79;
          int addRes2E5F#1 = IAdd(mulRes2D70,ilit2E5E);
          int idx2E60#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5F);
          int ilit2E61#1 = 80;
          int addRes2E62#1 = IAdd(mulRes2D70,ilit2E61);
          int idx2E63#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E62);
          int ilit2E64#1 = 81;
          int addRes2E65#1 = IAdd(mulRes2D70,ilit2E64);
          int idx2E66#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E65);
          int ilit2E67#1 = 82;
          int addRes2E68#1 = IAdd(mulRes2D70,ilit2E67);
          int idx2E69#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E68);
          int ilit2E6A#1 = 83;
          int addRes2E6B#1 = IAdd(mulRes2D70,ilit2E6A);
          int idx2E6C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E6B);
          int[84] seq2E6D#1 = <int[84]>{idx2D73,idx2D76,idx2D79,idx2D7C,idx2D7F,idx2D82,idx2D85,idx2D88,idx2D8B,idx2D8E,idx2D91,idx2D94,idx2D97,idx2D9A,idx2D9D,idx2DA0,idx2DA3,idx2DA6,idx2DA9,idx2DAC,idx2DAF,idx2DB2,idx2DB5,idx2DB8,idx2DBB,idx2DBE,idx2DC1,idx2DC4,idx2DC7,idx2DCA,idx2DCD,idx2DD0,idx2DD3,idx2DD6,idx2DD9,idx2DDC,idx2DDF,idx2DE2,idx2DE5,idx2DE8,idx2DEB,idx2DEE,idx2DF1,idx2DF4,idx2DF7,idx2DFA,idx2DFD,idx2E00,idx2E03,idx2E06,idx2E09,idx2E0C,idx2E0F,idx2E12,idx2E15,idx2E18,idx2E1B,idx2E1E,idx2E21,idx2E24,idx2E27,idx2E2A,idx2E2D,idx2E30,idx2E33,idx2E36,idx2E39,idx2E3C,idx2E3F,idx2E42,idx2E45,idx2E48,idx2E4B,idx2E4E,idx2E51,idx2E54,idx2E57,idx2E5A,idx2E5D,idx2E60,idx2E63,idx2E66,idx2E69,idx2E6C};
          int[84] femIndicies2D6E#84 = seq2E6D;
          int ilit2F6F#85 = 1;
          int ilit2F70#1 = 0;
          int idx2F71#1 = Subscript<int>(femIndicies2D6E,ilit2F70);
          int mulRes2F72#1 = IMul(ilit2F6F,idx2F71);
          int idx2F73#1 = Subscript<int>(femIndicies2D6E,ilit2F6F);
          int mulRes2F74#1 = IMul(ilit2F6F,idx2F73);
          int ilit2F75#1 = 2;
          int idx2F76#1 = Subscript<int>(femIndicies2D6E,ilit2F75);
          int mulRes2F77#1 = IMul(ilit2F6F,idx2F76);
          int ilit2F78#1 = 3;
          int idx2F79#1 = Subscript<int>(femIndicies2D6E,ilit2F78);
          int mulRes2F7A#1 = IMul(ilit2F6F,idx2F79);
          int ilit2F7B#1 = 4;
          int idx2F7C#1 = Subscript<int>(femIndicies2D6E,ilit2F7B);
          int mulRes2F7D#1 = IMul(ilit2F6F,idx2F7C);
          int ilit2F7E#1 = 5;
          int idx2F7F#1 = Subscript<int>(femIndicies2D6E,ilit2F7E);
          int mulRes2F80#1 = IMul(ilit2F6F,idx2F7F);
          int ilit2F81#1 = 6;
          int idx2F82#1 = Subscript<int>(femIndicies2D6E,ilit2F81);
          int mulRes2F83#1 = IMul(ilit2F6F,idx2F82);
          int ilit2F84#1 = 7;
          int idx2F85#1 = Subscript<int>(femIndicies2D6E,ilit2F84);
          int mulRes2F86#1 = IMul(ilit2F6F,idx2F85);
          int ilit2F87#1 = 8;
          int idx2F88#1 = Subscript<int>(femIndicies2D6E,ilit2F87);
          int mulRes2F89#1 = IMul(ilit2F6F,idx2F88);
          int ilit2F8A#1 = 9;
          int idx2F8B#1 = Subscript<int>(femIndicies2D6E,ilit2F8A);
          int mulRes2F8C#1 = IMul(ilit2F6F,idx2F8B);
          int ilit2F8D#1 = 10;
          int idx2F8E#1 = Subscript<int>(femIndicies2D6E,ilit2F8D);
          int mulRes2F8F#1 = IMul(ilit2F6F,idx2F8E);
          int ilit2F90#1 = 11;
          int idx2F91#1 = Subscript<int>(femIndicies2D6E,ilit2F90);
          int mulRes2F92#1 = IMul(ilit2F6F,idx2F91);
          int ilit2F93#1 = 12;
          int idx2F94#1 = Subscript<int>(femIndicies2D6E,ilit2F93);
          int mulRes2F95#1 = IMul(ilit2F6F,idx2F94);
          int ilit2F96#1 = 13;
          int idx2F97#1 = Subscript<int>(femIndicies2D6E,ilit2F96);
          int mulRes2F98#1 = IMul(ilit2F6F,idx2F97);
          int ilit2F99#1 = 14;
          int idx2F9A#1 = Subscript<int>(femIndicies2D6E,ilit2F99);
          int mulRes2F9B#1 = IMul(ilit2F6F,idx2F9A);
          int ilit2F9C#1 = 15;
          int idx2F9D#1 = Subscript<int>(femIndicies2D6E,ilit2F9C);
          int mulRes2F9E#1 = IMul(ilit2F6F,idx2F9D);
          int ilit2F9F#1 = 16;
          int idx2FA0#1 = Subscript<int>(femIndicies2D6E,ilit2F9F);
          int mulRes2FA1#1 = IMul(ilit2F6F,idx2FA0);
          int ilit2FA2#1 = 17;
          int idx2FA3#1 = Subscript<int>(femIndicies2D6E,ilit2FA2);
          int mulRes2FA4#1 = IMul(ilit2F6F,idx2FA3);
          int ilit2FA5#1 = 18;
          int idx2FA6#1 = Subscript<int>(femIndicies2D6E,ilit2FA5);
          int mulRes2FA7#1 = IMul(ilit2F6F,idx2FA6);
          int ilit2FA8#1 = 19;
          int idx2FA9#1 = Subscript<int>(femIndicies2D6E,ilit2FA8);
          int mulRes2FAA#1 = IMul(ilit2F6F,idx2FA9);
          int ilit2FAB#1 = 20;
          int idx2FAC#1 = Subscript<int>(femIndicies2D6E,ilit2FAB);
          int mulRes2FAD#1 = IMul(ilit2F6F,idx2FAC);
          int ilit2FAE#1 = 21;
          int idx2FAF#1 = Subscript<int>(femIndicies2D6E,ilit2FAE);
          int mulRes2FB0#1 = IMul(ilit2F6F,idx2FAF);
          int ilit2FB1#1 = 22;
          int idx2FB2#1 = Subscript<int>(femIndicies2D6E,ilit2FB1);
          int mulRes2FB3#1 = IMul(ilit2F6F,idx2FB2);
          int ilit2FB4#1 = 23;
          int idx2FB5#1 = Subscript<int>(femIndicies2D6E,ilit2FB4);
          int mulRes2FB6#1 = IMul(ilit2F6F,idx2FB5);
          int ilit2FB7#1 = 24;
          int idx2FB8#1 = Subscript<int>(femIndicies2D6E,ilit2FB7);
          int mulRes2FB9#1 = IMul(ilit2F6F,idx2FB8);
          int ilit2FBA#1 = 25;
          int idx2FBB#1 = Subscript<int>(femIndicies2D6E,ilit2FBA);
          int mulRes2FBC#1 = IMul(ilit2F6F,idx2FBB);
          int ilit2FBD#1 = 26;
          int idx2FBE#1 = Subscript<int>(femIndicies2D6E,ilit2FBD);
          int mulRes2FBF#1 = IMul(ilit2F6F,idx2FBE);
          int ilit2FC0#1 = 27;
          int idx2FC1#1 = Subscript<int>(femIndicies2D6E,ilit2FC0);
          int mulRes2FC2#1 = IMul(ilit2F6F,idx2FC1);
          int ilit2FC3#1 = 28;
          int idx2FC4#1 = Subscript<int>(femIndicies2D6E,ilit2FC3);
          int mulRes2FC5#1 = IMul(ilit2F6F,idx2FC4);
          int ilit2FC6#1 = 29;
          int idx2FC7#1 = Subscript<int>(femIndicies2D6E,ilit2FC6);
          int mulRes2FC8#1 = IMul(ilit2F6F,idx2FC7);
          int ilit2FC9#1 = 30;
          int idx2FCA#1 = Subscript<int>(femIndicies2D6E,ilit2FC9);
          int mulRes2FCB#1 = IMul(ilit2F6F,idx2FCA);
          int ilit2FCC#1 = 31;
          int idx2FCD#1 = Subscript<int>(femIndicies2D6E,ilit2FCC);
          int mulRes2FCE#1 = IMul(ilit2F6F,idx2FCD);
          int ilit2FCF#1 = 32;
          int idx2FD0#1 = Subscript<int>(femIndicies2D6E,ilit2FCF);
          int mulRes2FD1#1 = IMul(ilit2F6F,idx2FD0);
          int ilit2FD2#1 = 33;
          int idx2FD3#1 = Subscript<int>(femIndicies2D6E,ilit2FD2);
          int mulRes2FD4#1 = IMul(ilit2F6F,idx2FD3);
          int ilit2FD5#1 = 34;
          int idx2FD6#1 = Subscript<int>(femIndicies2D6E,ilit2FD5);
          int mulRes2FD7#1 = IMul(ilit2F6F,idx2FD6);
          int ilit2FD8#1 = 35;
          int idx2FD9#1 = Subscript<int>(femIndicies2D6E,ilit2FD8);
          int mulRes2FDA#1 = IMul(ilit2F6F,idx2FD9);
          int ilit2FDB#1 = 36;
          int idx2FDC#1 = Subscript<int>(femIndicies2D6E,ilit2FDB);
          int mulRes2FDD#1 = IMul(ilit2F6F,idx2FDC);
          int ilit2FDE#1 = 37;
          int idx2FDF#1 = Subscript<int>(femIndicies2D6E,ilit2FDE);
          int mulRes2FE0#1 = IMul(ilit2F6F,idx2FDF);
          int ilit2FE1#1 = 38;
          int idx2FE2#1 = Subscript<int>(femIndicies2D6E,ilit2FE1);
          int mulRes2FE3#1 = IMul(ilit2F6F,idx2FE2);
          int ilit2FE4#1 = 39;
          int idx2FE5#1 = Subscript<int>(femIndicies2D6E,ilit2FE4);
          int mulRes2FE6#1 = IMul(ilit2F6F,idx2FE5);
          int ilit2FE7#1 = 40;
          int idx2FE8#1 = Subscript<int>(femIndicies2D6E,ilit2FE7);
          int mulRes2FE9#1 = IMul(ilit2F6F,idx2FE8);
          int ilit2FEA#1 = 41;
          int idx2FEB#1 = Subscript<int>(femIndicies2D6E,ilit2FEA);
          int mulRes2FEC#1 = IMul(ilit2F6F,idx2FEB);
          int ilit2FED#1 = 42;
          int idx2FEE#1 = Subscript<int>(femIndicies2D6E,ilit2FED);
          int mulRes2FEF#1 = IMul(ilit2F6F,idx2FEE);
          int ilit2FF0#1 = 43;
          int idx2FF1#1 = Subscript<int>(femIndicies2D6E,ilit2FF0);
          int mulRes2FF2#1 = IMul(ilit2F6F,idx2FF1);
          int ilit2FF3#1 = 44;
          int idx2FF4#1 = Subscript<int>(femIndicies2D6E,ilit2FF3);
          int mulRes2FF5#1 = IMul(ilit2F6F,idx2FF4);
          int ilit2FF6#1 = 45;
          int idx2FF7#1 = Subscript<int>(femIndicies2D6E,ilit2FF6);
          int mulRes2FF8#1 = IMul(ilit2F6F,idx2FF7);
          int ilit2FF9#1 = 46;
          int idx2FFA#1 = Subscript<int>(femIndicies2D6E,ilit2FF9);
          int mulRes2FFB#1 = IMul(ilit2F6F,idx2FFA);
          int ilit2FFC#1 = 47;
          int idx2FFD#1 = Subscript<int>(femIndicies2D6E,ilit2FFC);
          int mulRes2FFE#1 = IMul(ilit2F6F,idx2FFD);
          int ilit2FFF#1 = 48;
          int idx3000#1 = Subscript<int>(femIndicies2D6E,ilit2FFF);
          int mulRes3001#1 = IMul(ilit2F6F,idx3000);
          int ilit3002#1 = 49;
          int idx3003#1 = Subscript<int>(femIndicies2D6E,ilit3002);
          int mulRes3004#1 = IMul(ilit2F6F,idx3003);
          int ilit3005#1 = 50;
          int idx3006#1 = Subscript<int>(femIndicies2D6E,ilit3005);
          int mulRes3007#1 = IMul(ilit2F6F,idx3006);
          int ilit3008#1 = 51;
          int idx3009#1 = Subscript<int>(femIndicies2D6E,ilit3008);
          int mulRes300A#1 = IMul(ilit2F6F,idx3009);
          int ilit300B#1 = 52;
          int idx300C#1 = Subscript<int>(femIndicies2D6E,ilit300B);
          int mulRes300D#1 = IMul(ilit2F6F,idx300C);
          int ilit300E#1 = 53;
          int idx300F#1 = Subscript<int>(femIndicies2D6E,ilit300E);
          int mulRes3010#1 = IMul(ilit2F6F,idx300F);
          int ilit3011#1 = 54;
          int idx3012#1 = Subscript<int>(femIndicies2D6E,ilit3011);
          int mulRes3013#1 = IMul(ilit2F6F,idx3012);
          int ilit3014#1 = 55;
          int idx3015#1 = Subscript<int>(femIndicies2D6E,ilit3014);
          int mulRes3016#1 = IMul(ilit2F6F,idx3015);
          int ilit3017#1 = 56;
          int idx3018#1 = Subscript<int>(femIndicies2D6E,ilit3017);
          int mulRes3019#1 = IMul(ilit2F6F,idx3018);
          int ilit301A#1 = 57;
          int idx301B#1 = Subscript<int>(femIndicies2D6E,ilit301A);
          int mulRes301C#1 = IMul(ilit2F6F,idx301B);
          int ilit301D#1 = 58;
          int idx301E#1 = Subscript<int>(femIndicies2D6E,ilit301D);
          int mulRes301F#1 = IMul(ilit2F6F,idx301E);
          int ilit3020#1 = 59;
          int idx3021#1 = Subscript<int>(femIndicies2D6E,ilit3020);
          int mulRes3022#1 = IMul(ilit2F6F,idx3021);
          int ilit3023#1 = 60;
          int idx3024#1 = Subscript<int>(femIndicies2D6E,ilit3023);
          int mulRes3025#1 = IMul(ilit2F6F,idx3024);
          int ilit3026#1 = 61;
          int idx3027#1 = Subscript<int>(femIndicies2D6E,ilit3026);
          int mulRes3028#1 = IMul(ilit2F6F,idx3027);
          int ilit3029#1 = 62;
          int idx302A#1 = Subscript<int>(femIndicies2D6E,ilit3029);
          int mulRes302B#1 = IMul(ilit2F6F,idx302A);
          int ilit302C#1 = 63;
          int idx302D#1 = Subscript<int>(femIndicies2D6E,ilit302C);
          int mulRes302E#1 = IMul(ilit2F6F,idx302D);
          int ilit302F#1 = 64;
          int idx3030#1 = Subscript<int>(femIndicies2D6E,ilit302F);
          int mulRes3031#1 = IMul(ilit2F6F,idx3030);
          int ilit3032#1 = 65;
          int idx3033#1 = Subscript<int>(femIndicies2D6E,ilit3032);
          int mulRes3034#1 = IMul(ilit2F6F,idx3033);
          int ilit3035#1 = 66;
          int idx3036#1 = Subscript<int>(femIndicies2D6E,ilit3035);
          int mulRes3037#1 = IMul(ilit2F6F,idx3036);
          int ilit3038#1 = 67;
          int idx3039#1 = Subscript<int>(femIndicies2D6E,ilit3038);
          int mulRes303A#1 = IMul(ilit2F6F,idx3039);
          int ilit303B#1 = 68;
          int idx303C#1 = Subscript<int>(femIndicies2D6E,ilit303B);
          int mulRes303D#1 = IMul(ilit2F6F,idx303C);
          int ilit303E#1 = 69;
          int idx303F#1 = Subscript<int>(femIndicies2D6E,ilit303E);
          int mulRes3040#1 = IMul(ilit2F6F,idx303F);
          int ilit3041#1 = 70;
          int idx3042#1 = Subscript<int>(femIndicies2D6E,ilit3041);
          int mulRes3043#1 = IMul(ilit2F6F,idx3042);
          int ilit3044#1 = 71;
          int idx3045#1 = Subscript<int>(femIndicies2D6E,ilit3044);
          int mulRes3046#1 = IMul(ilit2F6F,idx3045);
          int ilit3047#1 = 72;
          int idx3048#1 = Subscript<int>(femIndicies2D6E,ilit3047);
          int mulRes3049#1 = IMul(ilit2F6F,idx3048);
          int ilit304A#1 = 73;
          int idx304B#1 = Subscript<int>(femIndicies2D6E,ilit304A);
          int mulRes304C#1 = IMul(ilit2F6F,idx304B);
          int ilit304D#1 = 74;
          int idx304E#1 = Subscript<int>(femIndicies2D6E,ilit304D);
          int mulRes304F#1 = IMul(ilit2F6F,idx304E);
          int ilit3050#1 = 75;
          int idx3051#1 = Subscript<int>(femIndicies2D6E,ilit3050);
          int mulRes3052#1 = IMul(ilit2F6F,idx3051);
          int ilit3053#1 = 76;
          int idx3054#1 = Subscript<int>(femIndicies2D6E,ilit3053);
          int mulRes3055#1 = IMul(ilit2F6F,idx3054);
          int ilit3056#1 = 77;
          int idx3057#1 = Subscript<int>(femIndicies2D6E,ilit3056);
          int mulRes3058#1 = IMul(ilit2F6F,idx3057);
          int ilit3059#1 = 78;
          int idx305A#1 = Subscript<int>(femIndicies2D6E,ilit3059);
          int mulRes305B#1 = IMul(ilit2F6F,idx305A);
          int ilit305C#1 = 79;
          int idx305D#1 = Subscript<int>(femIndicies2D6E,ilit305C);
          int mulRes305E#1 = IMul(ilit2F6F,idx305D);
          int ilit305F#1 = 80;
          int idx3060#1 = Subscript<int>(femIndicies2D6E,ilit305F);
          int mulRes3061#1 = IMul(ilit2F6F,idx3060);
          int ilit3062#1 = 81;
          int idx3063#1 = Subscript<int>(femIndicies2D6E,ilit3062);
          int mulRes3064#1 = IMul(ilit2F6F,idx3063);
          int ilit3065#1 = 82;
          int idx3066#1 = Subscript<int>(femIndicies2D6E,ilit3065);
          int mulRes3067#1 = IMul(ilit2F6F,idx3066);
          int ilit3068#1 = 83;
          int idx3069#1 = Subscript<int>(femIndicies2D6E,ilit3068);
          int mulRes306A#1 = IMul(ilit2F6F,idx3069);
          real dof306B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F72);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F74);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F77);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7A);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7D);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F80);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F83);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F86);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F89);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8C);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8F);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F92);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F95);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F98);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9B);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9E);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA1);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA4);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA7);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAA);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAD);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB0);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB3);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB6);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB9);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBC);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBF);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC2);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC5);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC8);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCB);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCE);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD1);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD4);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD7);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDA);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDD);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE0);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE3);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE6);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE9);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEC);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEF);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF2);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF5);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF8);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFB);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFE);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3001);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3004);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3007);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300A);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300D);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3010);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3013);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3016);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3019);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301C);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301F);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3022);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3025);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3028);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302B);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302E);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3031);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3034);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3037);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303A);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303D);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3040);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3043);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3046);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3049);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304C);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304F);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3052);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3055);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3058);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305B);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305E);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3061);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3064);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3067);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes306A);
          tensor[84] dofs30BF#1 = <tensor[84]>[dof306B,dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE];
          tensor[84] femDofs2F6E#12 = dofs30BF;
          real varAcc3213#4 = VIndex<3,0>(pos24B7);
          real varAcc3214#4 = VIndex<3,1>(pos24B7);
          real varAcc3215#4 = VIndex<3,2>(pos24B7);
          real basisEval3216#294 = 0.e0;
          real coeff3217#31 = 0.2e1;
          real one3218#38 = 0.1e1;
          real prod3219#5 = RMul(one3218,one3218);
          real prod321A#2 = RMul(one3218,prod3219);
          real basisEval321B#3 = RMul(coeff3217,prod321A);
          real iden321C#5 = varAcc3215;
          real prod321D#4 = RMul(one3218,iden321C);
          real prod321E#3 = RMul(one3218,prod321D);
          real basisEval321F#4 = RMul(coeff3217,prod321E);
          real iden3220#5 = varAcc3214;
          real prod3221#4 = RMul(iden3220,one3218);
          real prod3222#3 = RMul(one3218,prod3221);
          real basisEval3223#4 = RMul(coeff3217,prod3222);
          real coeff3224#22 = 0.6e1;
          real iden3225#11 = varAcc3213;
          real prod3226#3 = RMul(iden3225,prod3219);
          real basisEval3227#1 = RMul(coeff3224,prod3226);
          real prod23228#4 = RMul(iden321C,varAcc3215);
          real prod3229#3 = RMul(one3218,prod23228);
          real prod322A#4 = RMul(one3218,prod3229);
          real basisEval322B#2 = RMul(coeff3217,prod322A);
          real prod322C#3 = RMul(iden3220,iden321C);
          real prod322D#3 = RMul(one3218,prod322C);
          real basisEval322E#3 = RMul(coeff3217,prod322D);
          real prod2322F#4 = RMul(iden3220,varAcc3214);
          real prod3230#3 = RMul(prod2322F,one3218);
          real prod3231#4 = RMul(one3218,prod3230);
          real basisEval3232#2 = RMul(coeff3217,prod3231);
          real prod3233#3 = RMul(iden3225,prod321D);
          real basisEval3234#2 = RMul(coeff3224,prod3233);
          real prod3235#3 = RMul(iden3225,prod3221);
          real basisEval3236#2 = RMul(coeff3224,prod3235);
          real coeff3237#15 = 0.12e2;
          real prod23238#7 = RMul(iden3225,varAcc3213);
          real prod3239#4 = RMul(prod23238,prod3219);
          real basisEval323A#1 = RMul(coeff3237,prod3239);
          real prod3323B#3 = RMul(prod23228,varAcc3215);
          real prod323C#2 = RMul(one3218,prod3323B);
          real prod323D#4 = RMul(one3218,prod323C);
          real basisEval323E#2 = RMul(coeff3217,prod323D);
          real prod323F#2 = RMul(iden3220,prod23228);
          real prod3240#4 = RMul(one3218,prod323F);
          real basisEval3241#2 = RMul(coeff3217,prod3240);
          real prod3242#2 = RMul(prod2322F,iden321C);
          real prod3243#4 = RMul(one3218,prod3242);
          real basisEval3244#2 = RMul(coeff3217,prod3243);
          real prod33245#3 = RMul(prod2322F,varAcc3214);
          real prod3246#2 = RMul(prod33245,one3218);
          real prod3247#4 = RMul(one3218,prod3246);
          real basisEval3248#2 = RMul(coeff3217,prod3247);
          real prod3249#4 = RMul(iden3225,prod3229);
          real basisEval324A#2 = RMul(coeff3224,prod3249);
          real prod324B#2 = RMul(iden3225,prod322C);
          real basisEval324C#3 = RMul(coeff3224,prod324B);
          real prod324D#4 = RMul(iden3225,prod3230);
          real basisEval324E#2 = RMul(coeff3224,prod324D);
          real prod324F#4 = RMul(prod23238,prod321D);
          real basisEval3250#1 = RMul(coeff3237,prod324F);
          real prod3251#4 = RMul(prod23238,prod3221);
          real basisEval3252#1 = RMul(coeff3237,prod3251);
          real coeff3253#9 = 0.20e2;
          real prod33254#4 = RMul(prod23238,varAcc3213);
          real prod3255#4 = RMul(prod33254,prod3219);
          real basisEval3256#1 = RMul(coeff3253,prod3255);
          real prod43257#1 = RMul(prod3323B,varAcc3215);
          real prod3258#1 = RMul(one3218,prod43257);
          real prod3259#4 = RMul(one3218,prod3258);
          real basisEval325A#2 = RMul(coeff3217,prod3259);
          real prod325B#1 = RMul(iden3220,prod3323B);
          real prod325C#5 = RMul(one3218,prod325B);
          real basisEval325D#2 = RMul(coeff3217,prod325C);
          real prod325E#1 = RMul(prod2322F,prod23228);
          real prod325F#4 = RMul(one3218,prod325E);
          real basisEval3260#1 = RMul(coeff3217,prod325F);
          real prod3261#1 = RMul(prod33245,iden321C);
          real prod3262#5 = RMul(one3218,prod3261);
          real basisEval3263#2 = RMul(coeff3217,prod3262);
          real prod43264#1 = RMul(prod33245,varAcc3214);
          real prod3265#1 = RMul(prod43264,one3218);
          real prod3266#4 = RMul(one3218,prod3265);
          real basisEval3267#2 = RMul(coeff3217,prod3266);
          real prod3268#5 = RMul(iden3225,prod323C);
          real basisEval3269#1 = RMul(coeff3224,prod3268);
          real prod326A#3 = RMul(iden3225,prod323F);
          real basisEval326B#4 = RMul(coeff3224,prod326A);
          real prod326C#3 = RMul(iden3225,prod3242);
          real basisEval326D#4 = RMul(coeff3224,prod326C);
          real prod326E#5 = RMul(iden3225,prod3246);
          real basisEval326F#1 = RMul(coeff3224,prod326E);
          real prod3270#4 = RMul(prod23238,prod3229);
          real basisEval3271#2 = RMul(coeff3237,prod3270);
          real prod3272#3 = RMul(prod23238,prod322C);
          real basisEval3273#1 = RMul(coeff3237,prod3272);
          real prod3274#4 = RMul(prod23238,prod3230);
          real basisEval3275#2 = RMul(coeff3237,prod3274);
          real prod3276#5 = RMul(prod33254,prod321D);
          real basisEval3277#1 = RMul(coeff3253,prod3276);
          real prod3278#5 = RMul(prod33254,prod3221);
          real basisEval3279#1 = RMul(coeff3253,prod3278);
          real coeff327A#3 = 0.30e2;
          real prod4327B#1 = RMul(prod33254,varAcc3213);
          real prod327C#4 = RMul(prod4327B,prod3219);
          real basisEval327D#1 = RMul(coeff327A,prod327C);
          real basisEval327E#3 = RMul(one3218,prod321A);
          real basisEval327F#1 = RMul(one3218,prod321E);
          real basisEval3280#4 = RMul(coeff3217,prod3226);
          real basisEval3281#1 = RMul(one3218,prod322A);
          real coeff3282#12 = 0.3e1;
          real basisEval3283#2 = RMul(coeff3282,prod3231);
          real basisEval3284#3 = RMul(coeff3217,prod3233);
          real coeff3285#16 = 0.4e1;
          real basisEval3286#1 = RMul(coeff3285,prod3235);
          real basisEval3287#2 = RMul(coeff3282,prod3239);
          real basisEval3288#1 = RMul(one3218,prod323D);
          real basisEval3289#1 = RMul(coeff3282,prod3243);
          real basisEval328A#2 = RMul(coeff3285,prod3247);
          real basisEval328B#2 = RMul(coeff3217,prod3249);
          real basisEval328C#3 = RMul(coeff3285,prod324B);
          real basisEval328D#1 = RMul(coeff3282,prod324F);
          real basisEval328E#2 = RMul(coeff3224,prod3251);
          real basisEval328F#2 = RMul(coeff3285,prod3255);
          real basisEval3290#1 = RMul(one3218,prod3259);
          real basisEval3291#2 = RMul(coeff3282,prod325F);
          real basisEval3292#1 = RMul(coeff3285,prod3262);
          real coeff3293#3 = 0.5e1;
          real basisEval3294#2 = RMul(coeff3293,prod3266);
          real basisEval3295#2 = RMul(coeff3217,prod3268);
          real basisEval3296#1 = RMul(coeff3285,prod326A);
          real coeff3297#6 = 0.8e1;
          real basisEval3298#1 = RMul(coeff3297,prod326E);
          real basisEval3299#2 = RMul(coeff3282,prod3270);
          real basisEval329A#4 = RMul(coeff3224,prod3272);
          real coeff329B#3 = 0.9e1;
          real basisEval329C#1 = RMul(coeff329B,prod3274);
          real basisEval329D#1 = RMul(coeff3285,prod3276);
          real basisEval329E#1 = RMul(coeff3297,prod3278);
          real basisEval329F#2 = RMul(coeff3293,prod327C);
          real basisEval32A0#1 = RMul(one3218,prod3222);
          real basisEval32A1#2 = RMul(coeff3282,prod322A);
          real basisEval32A2#1 = RMul(one3218,prod3231);
          real basisEval32A3#1 = RMul(coeff3285,prod3233);
          real basisEval32A4#3 = RMul(coeff3217,prod3235);
          real basisEval32A5#2 = RMul(coeff3285,prod323D);
          real basisEval32A6#1 = RMul(coeff3282,prod3240);
          real basisEval32A7#1 = RMul(one3218,prod3247);
          real basisEval32A8#2 = RMul(coeff3217,prod324D);
          real basisEval32A9#2 = RMul(coeff3224,prod324F);
          real basisEval32AA#1 = RMul(coeff3282,prod3251);
          real basisEval32AB#2 = RMul(coeff3293,prod3259);
          real basisEval32AC#1 = RMul(coeff3285,prod325C);
          real basisEval32AD#1 = RMul(one3218,prod3266);
          real basisEval32AE#1 = RMul(coeff3297,prod3268);
          real basisEval32AF#1 = RMul(coeff3285,prod326C);
          real basisEval32B0#2 = RMul(coeff3217,prod326E);
          real basisEval32B1#1 = RMul(coeff329B,prod3270);
          real basisEval32B2#2 = RMul(coeff3282,prod3274);
          real basisEval32B3#1 = RMul(coeff3297,prod3276);
          real basisEval32B4#1 = RMul(coeff3285,prod3278);
          real basisEval32B5#1 = RMul(coeff3224,prod3222);
          real basisEval32B6#2 = RMul(coeff3224,prod322D);
          real basisEval32B7#1 = RMul(coeff3237,prod3231);
          real basisEval32B8#2 = RMul(coeff3217,prod3239);
          real basisEval32B9#2 = RMul(coeff3224,prod3240);
          real basisEval32BA#1 = RMul(coeff3237,prod3243);
          real basisEval32BB#1 = RMul(coeff3253,prod3247);
          real basisEval32BC#1 = RMul(coeff3237,prod324D);
          real basisEval32BD#2 = RMul(coeff3217,prod324F);
          real basisEval32BE#2 = RMul(coeff3217,prod3255);
          real basisEval32BF#1 = RMul(coeff3224,prod325C);
          real basisEval32C0#2 = RMul(coeff3237,prod325F);
          real basisEval32C1#1 = RMul(coeff3253,prod3262);
          real basisEval32C2#1 = RMul(coeff327A,prod3266);
          real basisEval32C3#1 = RMul(coeff3237,prod326C);
          real basisEval32C4#1 = RMul(coeff3253,prod326E);
          real basisEval32C5#1 = RMul(coeff3217,prod3270);
          real basisEval32C6#2 = RMul(coeff3217,prod3276);
          real basisEval32C7#1 = RMul(coeff3224,prod3278);
          real basisEval32C8#2 = RMul(coeff3217,prod327C);
          real basisEval32C9#1 = RMul(one3218,prod3226);
          real basisEval32CA#1 = RMul(coeff3285,prod322D);
          real basisEval32CB#1 = RMul(one3218,prod3239);
          real basisEval32CC#2 = RMul(coeff3224,prod3243);
          real basisEval32CD#1 = RMul(coeff3282,prod3249);
          real basisEval32CE#1 = RMul(coeff3282,prod324D);
          real basisEval32CF#2 = RMul(coeff3217,prod3251);
          real basisEval32D0#1 = RMul(one3218,prod3255);
          real basisEval32D1#1 = RMul(coeff3297,prod325C);
          real basisEval32D2#1 = RMul(coeff329B,prod325F);
          real basisEval32D3#1 = RMul(coeff3297,prod3262);
          real basisEval32D4#1 = RMul(coeff3285,prod3268);
          real basisEval32D5#1 = RMul(coeff3285,prod326E);
          real basisEval32D6#1 = RMul(coeff3285,prod3272);
          real basisEval32D7#2 = RMul(coeff3217,prod3278);
          real basisEval32D8#1 = RMul(one3218,prod327C);
          real basisEval32D9#1 = RMul(coeff3224,prod321E);
          real basisEval32DA#1 = RMul(coeff3237,prod322A);
          real basisEval32DB#1 = RMul(coeff3253,prod323D);
          real basisEval32DC#1 = RMul(coeff3237,prod3240);
          real basisEval32DD#1 = RMul(coeff3237,prod3249);
          real basisEval32DE#1 = RMul(coeff327A,prod3259);
          real basisEval32DF#1 = RMul(coeff3253,prod325C);
          real basisEval32E0#1 = RMul(coeff3224,prod3262);
          real basisEval32E1#1 = RMul(coeff3253,prod3268);
          real basisEval32E2#1 = RMul(coeff3237,prod326A);
          real basisEval32E3#1 = RMul(coeff3217,prod3274);
          real basisEval32E4#1 = RMul(coeff3224,prod3276);
          tensor[84] intermediateCons32E5#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3227,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval322E,basisEval3232,basisEval3234,basisEval3236,basisEval323A,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval3241,basisEval3244,basisEval3248,basisEval324A,basisEval324C,basisEval324E,basisEval3250,basisEval3252,basisEval3256,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval325D,basisEval3260,basisEval3263,basisEval3267,basisEval3269,basisEval326B,basisEval326D,basisEval326F,basisEval3271,basisEval3273,basisEval3275,basisEval3277,basisEval3279,basisEval327D];
          tensor[84] intermediateCons32E6#2 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327F,basisEval3223,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3281,basisEval322E,basisEval3283,basisEval3216,basisEval3284,basisEval3286,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3288,basisEval3241,basisEval3289,basisEval328A,basisEval3216,basisEval328B,basisEval328C,basisEval324E,basisEval3216,basisEval328D,basisEval328E,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3290,basisEval325D,basisEval3291,basisEval3292,basisEval3294,basisEval3216,basisEval3295,basisEval3296,basisEval326D,basisEval3298,basisEval3216,basisEval3299,basisEval329A,basisEval329C,basisEval3216,basisEval329D,basisEval329E,basisEval3216,basisEval329F,basisEval3216];
          tensor[84] intermediateCons32E7#2 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32A0,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval322E,basisEval32A2,basisEval3216,basisEval32A3,basisEval32A4,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32A6,basisEval3244,basisEval32A7,basisEval3216,basisEval324A,basisEval328C,basisEval32A8,basisEval3216,basisEval32A9,basisEval32AA,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32AC,basisEval3291,basisEval3263,basisEval32AD,basisEval3216,basisEval32AE,basisEval326B,basisEval32AF,basisEval32B0,basisEval3216,basisEval32B1,basisEval329A,basisEval32B2,basisEval3216,basisEval32B3,basisEval32B4,basisEval3216,basisEval329F,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E8#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32B5,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval32B6,basisEval32B7,basisEval3216,basisEval3216,basisEval3284,basisEval3236,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval32B9,basisEval32BA,basisEval32BB,basisEval3216,basisEval3216,basisEval328B,basisEval324C,basisEval32BC,basisEval3216,basisEval3216,basisEval32BD,basisEval328E,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval32BF,basisEval32C0,basisEval32C1,basisEval32C2,basisEval3216,basisEval3216,basisEval3295,basisEval326B,basisEval32C3,basisEval32C4,basisEval3216,basisEval3216,basisEval32C5,basisEval329A,basisEval3275,basisEval3216,basisEval3216,basisEval32C6,basisEval32C7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E9#2 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3216,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval32CA,basisEval3283,basisEval3216,basisEval3216,basisEval3284,basisEval32A4,basisEval3216,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32B9,basisEval32CC,basisEval328A,basisEval3216,basisEval3216,basisEval32CD,basisEval328C,basisEval32CE,basisEval3216,basisEval3216,basisEval32BD,basisEval32CF,basisEval3216,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32D1,basisEval32D2,basisEval32D3,basisEval3294,basisEval3216,basisEval3216,basisEval32D4,basisEval326B,basisEval326D,basisEval32D5,basisEval3216,basisEval3216,basisEval3299,basisEval32D6,basisEval32B2,basisEval3216,basisEval3216,basisEval32C6,basisEval32D7,basisEval3216,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32EA#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32D9,basisEval3223,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DA,basisEval32B6,basisEval3232,basisEval3216,basisEval3216,basisEval3234,basisEval32A4,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DB,basisEval32DC,basisEval32CC,basisEval3248,basisEval3216,basisEval3216,basisEval32DD,basisEval324C,basisEval32A8,basisEval3216,basisEval3216,basisEval32A9,basisEval32CF,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DE,basisEval32DF,basisEval32C0,basisEval32E0,basisEval3267,basisEval3216,basisEval3216,basisEval32E1,basisEval32E2,basisEval326D,basisEval32B0,basisEval3216,basisEval3216,basisEval3271,basisEval329A,basisEval32E3,basisEval3216,basisEval3216,basisEval32E4,basisEval32D7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          tensor[3,84] intermediateCons32EB#1 = <tensor[3,84]>[intermediateCons32E5,intermediateCons32E6,intermediateCons32E7];
          tensor[3,84] intermediateCons32EC#1 = <tensor[3,84]>[intermediateCons32E6,intermediateCons32E8,intermediateCons32E9];
          tensor[3,84] intermediateCons32ED#1 = <tensor[3,84]>[intermediateCons32E7,intermediateCons32E9,intermediateCons32EA];
          tensor[3,3,84] intermediateCons32EE#1 = <tensor[3,3,84]>[intermediateCons32EB,intermediateCons32EC,intermediateCons32ED];
          tensor[3,3,84] basisResult3212#9 = intermediateCons32EE;
          tensor[84] projParam33CD#1 = ProjectLast<tensor[3,3,84],[0,0]>(basisResult3212);
          real vdot33CE#1 = VDot<84>(femDofs2F6E,projParam33CD);
          tensor[84] projParam33CF#1 = ProjectLast<tensor[3,3,84],[0,1]>(basisResult3212);
          real vdot33D0#1 = VDot<84>(femDofs2F6E,projParam33CF);
          tensor[84] projParam33D1#1 = ProjectLast<tensor[3,3,84],[0,2]>(basisResult3212);
          real vdot33D2#1 = VDot<84>(femDofs2F6E,projParam33D1);
          tensor[3] tensor33D3#1 = <tensor[3]>[vdot33CE,vdot33D0,vdot33D2];
          tensor[84] projParam33D4#1 = ProjectLast<tensor[3,3,84],[1,0]>(basisResult3212);
          real vdot33D5#1 = VDot<84>(femDofs2F6E,projParam33D4);
          tensor[84] projParam33D6#1 = ProjectLast<tensor[3,3,84],[1,1]>(basisResult3212);
          real vdot33D7#1 = VDot<84>(femDofs2F6E,projParam33D6);
          tensor[84] projParam33D8#1 = ProjectLast<tensor[3,3,84],[1,2]>(basisResult3212);
          real vdot33D9#1 = VDot<84>(femDofs2F6E,projParam33D8);
          tensor[3] tensor33DA#1 = <tensor[3]>[vdot33D5,vdot33D7,vdot33D9];
          tensor[84] projParam33DB#1 = ProjectLast<tensor[3,3,84],[2,0]>(basisResult3212);
          real vdot33DC#1 = VDot<84>(femDofs2F6E,projParam33DB);
          tensor[84] projParam33DD#1 = ProjectLast<tensor[3,3,84],[2,1]>(basisResult3212);
          real vdot33DE#1 = VDot<84>(femDofs2F6E,projParam33DD);
          tensor[84] projParam33DF#1 = ProjectLast<tensor[3,3,84],[2,2]>(basisResult3212);
          real vdot33E0#1 = VDot<84>(femDofs2F6E,projParam33DF);
          tensor[3] tensor33E1#1 = <tensor[3]>[vdot33DC,vdot33DE,vdot33E0];
          tensor[3,3] _t33CC#1 = <tensor[3,3]>[tensor33D3,tensor33DA,tensor33E1];
          (real[3] evals33F9#2,tensor[3][3] E33FA#2) = EigenVecs3x3(_t33CC);
          int _t33FC#2 = 2;
          tensor[3] _t33FE#6 = Subscript<tensor[3][3]>(E33FA,_t33FC);
          real _t3400#9 = Subscript<real[3]>(evals33F9,_t33FC);
          int _t3402#2 = 1;
          tensor[3] _t3404#6 = Subscript<tensor[3][3]>(E33FA,_t3402);
          real _t3406#9 = Subscript<real[3]>(evals33F9,_t3402);
          real r3409#1 = TensorIndex<tensor[3],[0]>(_t33FE);
          tensor[3] binopV340A#1 = VScale<3>(r3409,_t33FE);
          real r340B#1 = TensorIndex<tensor[3],[1]>(_t33FE);
          tensor[3] binopV340C#1 = VScale<3>(r340B,_t33FE);
          real r340D#1 = TensorIndex<tensor[3],[2]>(_t33FE);
          tensor[3] binopV340E#1 = VScale<3>(r340D,_t33FE);
          tensor[3,3] op1_e3_l_103408#9 = <tensor[3,3]>[binopV340A,binopV340C,binopV340E];
          real r3418#1 = TensorIndex<tensor[3],[0]>(_t3404);
          tensor[3] binopV3419#1 = VScale<3>(r3418,_t3404);
          real r341A#1 = TensorIndex<tensor[3],[1]>(_t3404);
          tensor[3] binopV341B#1 = VScale<3>(r341A,_t3404);
          real r341C#1 = TensorIndex<tensor[3],[2]>(_t3404);
          tensor[3] binopV341D#1 = VScale<3>(r341C,_t3404);
          tensor[3,3] op1_e3_l_113417#9 = <tensor[3,3]>[binopV3419,binopV341B,binopV341D];
          real r3427#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_103408);
          real r3428#1 = RDiv(r3427,_t3400);
          real r3429#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_103408);
          real r342A#1 = RDiv(r3429,_t3400);
          real r342B#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_103408);
          real r342C#1 = RDiv(r342B,_t3400);
          tensor[3] tensor342D#1 = <tensor[3]>[r3428,r342A,r342C];
          real r342E#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_103408);
          real r342F#1 = RDiv(r342E,_t3400);
          real r3430#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_103408);
          real r3431#1 = RDiv(r3430,_t3400);
          real r3432#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_103408);
          real r3433#1 = RDiv(r3432,_t3400);
          tensor[3] tensor3434#1 = <tensor[3]>[r342F,r3431,r3433];
          real r3435#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_103408);
          real r3436#1 = RDiv(r3435,_t3400);
          real r3437#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_103408);
          real r3438#1 = RDiv(r3437,_t3400);
          real r3439#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_103408);
          real r343A#1 = RDiv(r3439,_t3400);
          tensor[3] tensor343B#1 = <tensor[3]>[r3436,r3438,r343A];
          tensor[3,3] op1_e3_l_123426#3 = <tensor[3,3]>[tensor342D,tensor3434,tensor343B];
          real r3454#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_113417);
          real r3455#1 = RDiv(r3454,_t3406);
          real r3456#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_113417);
          real r3457#1 = RDiv(r3456,_t3406);
          real r3458#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_113417);
          real r3459#1 = RDiv(r3458,_t3406);
          tensor[3] tensor345A#1 = <tensor[3]>[r3455,r3457,r3459];
          real r345B#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_113417);
          real r345C#1 = RDiv(r345B,_t3406);
          real r345D#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_113417);
          real r345E#1 = RDiv(r345D,_t3406);
          real r345F#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_113417);
          real r3460#1 = RDiv(r345F,_t3406);
          tensor[3] tensor3461#1 = <tensor[3]>[r345C,r345E,r3460];
          real r3462#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_113417);
          real r3463#1 = RDiv(r3462,_t3406);
          real r3464#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_113417);
          real r3465#1 = RDiv(r3464,_t3406);
          real r3466#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_113417);
          real r3467#1 = RDiv(r3466,_t3406);
          tensor[3] tensor3468#1 = <tensor[3]>[r3463,r3465,r3467];
          tensor[3,3] op1_e3_l_133453#3 = <tensor[3,3]>[tensor345A,tensor3461,tensor3468];
          tensor[3] projParam3481#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_123426);
          tensor[3] projParam3482#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_133453);
          tensor[3] v3483#1 = VAdd<3>(projParam3481,projParam3482);
          tensor[3] projParam3484#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_123426);
          tensor[3] projParam3485#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_133453);
          tensor[3] v3486#1 = VAdd<3>(projParam3484,projParam3485);
          tensor[3] projParam3487#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_123426);
          tensor[3] projParam3488#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_133453);
          tensor[3] v3489#1 = VAdd<3>(projParam3487,projParam3488);
          tensor[3,3] op1_e3_l_143480#3 = <tensor[3,3]>[v3483,v3486,v3489];
          real varAcc3496#5 = VIndex<3,0>(pos24B7);
          real varAcc3497#5 = VIndex<3,1>(pos24B7);
          real varAcc3498#5 = VIndex<3,2>(pos24B7);
          real basisEval3499#84 = 0.e0;
          real coeff349A#79 = 0.1e1;
          real prod349B#6 = RMul(coeff349A,coeff349A);
          real prod349C#1 = RMul(coeff349A,prod349B);
          real basisEval349D#3 = RMul(coeff349A,prod349C);
          real iden349E#6 = varAcc3498;
          real prod349F#5 = RMul(coeff349A,iden349E);
          real prod34A0#2 = RMul(coeff349A,prod349F);
          real basisEval34A1#2 = RMul(coeff349A,prod34A0);
          real iden34A2#6 = varAcc3497;
          real prod34A3#5 = RMul(iden34A2,coeff349A);
          real prod34A4#2 = RMul(coeff349A,prod34A3);
          real basisEval34A5#2 = RMul(coeff349A,prod34A4);
          real coeff34A6#34 = 0.2e1;
          real iden34A7#16 = varAcc3496;
          real prod34A8#2 = RMul(iden34A7,prod349B);
          real basisEval34A9#1 = RMul(coeff34A6,prod34A8);
          real prod234AA#5 = RMul(iden349E,varAcc3498);
          real prod34AB#4 = RMul(coeff349A,prod234AA);
          real prod34AC#2 = RMul(coeff349A,prod34AB);
          real basisEval34AD#2 = RMul(coeff349A,prod34AC);
          real prod34AE#4 = RMul(iden34A2,iden349E);
          real prod34AF#2 = RMul(coeff349A,prod34AE);
          real basisEval34B0#1 = RMul(coeff349A,prod34AF);
          real prod234B1#5 = RMul(iden34A2,varAcc3497);
          real prod34B2#4 = RMul(prod234B1,coeff349A);
          real prod34B3#2 = RMul(coeff349A,prod34B2);
          real basisEval34B4#2 = RMul(coeff349A,prod34B3);
          real prod34B5#2 = RMul(iden34A7,prod349F);
          real basisEval34B6#2 = RMul(coeff34A6,prod34B5);
          real prod34B7#2 = RMul(iden34A7,prod34A3);
          real basisEval34B8#2 = RMul(coeff34A6,prod34B7);
          real coeff34B9#24 = 0.3e1;
          real prod234BA#11 = RMul(iden34A7,varAcc3496);
          real prod34BB#2 = RMul(prod234BA,prod349B);
          real basisEval34BC#1 = RMul(coeff34B9,prod34BB);
          real prod334BD#4 = RMul(prod234AA,varAcc3498);
          real prod34BE#3 = RMul(coeff349A,prod334BD);
          real prod34BF#2 = RMul(coeff349A,prod34BE);
          real basisEval34C0#2 = RMul(coeff349A,prod34BF);
          real prod34C1#3 = RMul(iden34A2,prod234AA);
          real prod34C2#3 = RMul(coeff349A,prod34C1);
          real basisEval34C3#1 = RMul(coeff349A,prod34C2);
          real prod34C4#3 = RMul(prod234B1,iden349E);
          real prod34C5#3 = RMul(coeff349A,prod34C4);
          real basisEval34C6#1 = RMul(coeff349A,prod34C5);
          real prod334C7#4 = RMul(prod234B1,varAcc3497);
          real prod34C8#3 = RMul(prod334C7,coeff349A);
          real prod34C9#2 = RMul(coeff349A,prod34C8);
          real basisEval34CA#2 = RMul(coeff349A,prod34C9);
          real prod34CB#3 = RMul(iden34A7,prod34AB);
          real basisEval34CC#1 = RMul(coeff34A6,prod34CB);
          real prod34CD#1 = RMul(iden34A7,prod34AE);
          real basisEval34CE#3 = RMul(coeff34A6,prod34CD);
          real prod34CF#3 = RMul(iden34A7,prod34B2);
          real basisEval34D0#1 = RMul(coeff34A6,prod34CF);
          real prod34D1#3 = RMul(prod234BA,prod349F);
          real basisEval34D2#1 = RMul(coeff34B9,prod34D1);
          real prod34D3#3 = RMul(prod234BA,prod34A3);
          real basisEval34D4#1 = RMul(coeff34B9,prod34D3);
          real coeff34D5#18 = 0.4e1;
          real prod334D6#7 = RMul(prod234BA,varAcc3496);
          real prod34D7#2 = RMul(prod334D6,prod349B);
          real basisEval34D8#1 = RMul(coeff34D5,prod34D7);
          real prod434D9#3 = RMul(prod334BD,varAcc3498);
          real prod34DA#2 = RMul(coeff349A,prod434D9);
          real prod34DB#2 = RMul(coeff349A,prod34DA);
          real basisEval34DC#2 = RMul(coeff349A,prod34DB);
          real prod34DD#2 = RMul(iden34A2,prod334BD);
          real prod34DE#3 = RMul(coeff349A,prod34DD);
          real basisEval34DF#1 = RMul(coeff349A,prod34DE);
          real prod34E0#2 = RMul(prod234B1,prod234AA);
          real prod34E1#2 = RMul(coeff349A,prod34E0);
          real basisEval34E2#1 = RMul(coeff349A,prod34E1);
          real prod34E3#2 = RMul(prod334C7,iden349E);
          real prod34E4#3 = RMul(coeff349A,prod34E3);
          real basisEval34E5#1 = RMul(coeff349A,prod34E4);
          real prod434E6#3 = RMul(prod334C7,varAcc3497);
          real prod34E7#2 = RMul(prod434E6,coeff349A);
          real prod34E8#2 = RMul(coeff349A,prod34E7);
          real basisEval34E9#2 = RMul(coeff349A,prod34E8);
          real prod34EA#3 = RMul(iden34A7,prod34BE);
          real basisEval34EB#1 = RMul(coeff34A6,prod34EA);
          real prod34EC#2 = RMul(iden34A7,prod34C1);
          real basisEval34ED#2 = RMul(coeff34A6,prod34EC);
          real prod34EE#2 = RMul(iden34A7,prod34C4);
          real basisEval34EF#2 = RMul(coeff34A6,prod34EE);
          real prod34F0#3 = RMul(iden34A7,prod34C8);
          real basisEval34F1#1 = RMul(coeff34A6,prod34F0);
          real prod34F2#2 = RMul(prod234BA,prod34AB);
          real basisEval34F3#2 = RMul(coeff34B9,prod34F2);
          real prod34F4#2 = RMul(prod234BA,prod34AE);
          real basisEval34F5#1 = RMul(coeff34B9,prod34F4);
          real prod34F6#2 = RMul(prod234BA,prod34B2);
          real basisEval34F7#2 = RMul(coeff34B9,prod34F6);
          real prod34F8#3 = RMul(prod334D6,prod349F);
          real basisEval34F9#1 = RMul(coeff34D5,prod34F8);
          real prod34FA#3 = RMul(prod334D6,prod34A3);
          real basisEval34FB#1 = RMul(coeff34D5,prod34FA);
          real coeff34FC#9 = 0.5e1;
          real prod434FD#4 = RMul(prod334D6,varAcc3496);
          real prod34FE#2 = RMul(prod434FD,prod349B);
          real basisEval34FF#1 = RMul(coeff34FC,prod34FE);
          real prod53500#1 = RMul(prod434D9,varAcc3498);
          real prod3501#1 = RMul(coeff349A,prod53500);
          real prod3502#2 = RMul(coeff349A,prod3501);
          real basisEval3503#2 = RMul(coeff349A,prod3502);
          real prod3504#1 = RMul(iden34A2,prod434D9);
          real prod3505#3 = RMul(coeff349A,prod3504);
          real basisEval3506#1 = RMul(coeff349A,prod3505);
          real prod3507#1 = RMul(prod234B1,prod334BD);
          real prod3508#3 = RMul(coeff349A,prod3507);
          real basisEval3509#1 = RMul(coeff349A,prod3508);
          real prod350A#1 = RMul(prod334C7,prod234AA);
          real prod350B#3 = RMul(coeff349A,prod350A);
          real basisEval350C#1 = RMul(coeff349A,prod350B);
          real prod350D#1 = RMul(prod434E6,iden349E);
          real prod350E#3 = RMul(coeff349A,prod350D);
          real basisEval350F#1 = RMul(coeff349A,prod350E);
          real prod53510#1 = RMul(prod434E6,varAcc3497);
          real prod3511#1 = RMul(prod53510,coeff349A);
          real prod3512#2 = RMul(coeff349A,prod3511);
          real basisEval3513#2 = RMul(coeff349A,prod3512);
          real prod3514#3 = RMul(iden34A7,prod34DA);
          real basisEval3515#1 = RMul(coeff34A6,prod3514);
          real prod3516#2 = RMul(iden34A7,prod34DD);
          real basisEval3517#2 = RMul(coeff34A6,prod3516);
          real prod3518#2 = RMul(iden34A7,prod34E0);
          real basisEval3519#1 = RMul(coeff34A6,prod3518);
          real prod351A#2 = RMul(iden34A7,prod34E3);
          real basisEval351B#2 = RMul(coeff34A6,prod351A);
          real prod351C#3 = RMul(iden34A7,prod34E7);
          real basisEval351D#1 = RMul(coeff34A6,prod351C);
          real prod351E#3 = RMul(prod234BA,prod34BE);
          real basisEval351F#1 = RMul(coeff34B9,prod351E);
          real prod3520#2 = RMul(prod234BA,prod34C1);
          real basisEval3521#2 = RMul(coeff34B9,prod3520);
          real prod3522#2 = RMul(prod234BA,prod34C4);
          real basisEval3523#2 = RMul(coeff34B9,prod3522);
          real prod3524#3 = RMul(prod234BA,prod34C8);
          real basisEval3525#1 = RMul(coeff34B9,prod3524);
          real prod3526#3 = RMul(prod334D6,prod34AB);
          real basisEval3527#1 = RMul(coeff34D5,prod3526);
          real prod3528#2 = RMul(prod334D6,prod34AE);
          real basisEval3529#1 = RMul(coeff34D5,prod3528);
          real prod352A#3 = RMul(prod334D6,prod34B2);
          real basisEval352B#1 = RMul(coeff34D5,prod352A);
          real prod352C#3 = RMul(prod434FD,prod349F);
          real basisEval352D#1 = RMul(coeff34FC,prod352C);
          real prod352E#3 = RMul(prod434FD,prod34A3);
          real basisEval352F#1 = RMul(coeff34FC,prod352E);
          real coeff3530#3 = 0.6e1;
          real prod53531#1 = RMul(prod434FD,varAcc3496);
          real prod3532#2 = RMul(prod53531,prod349B);
          real basisEval3533#1 = RMul(coeff3530,prod3532);
          real basisEval3534#1 = RMul(coeff34A6,prod34A4);
          real basisEval3535#2 = RMul(coeff349A,prod34A8);
          real basisEval3536#2 = RMul(coeff34A6,prod34AF);
          real basisEval3537#1 = RMul(coeff34B9,prod34B3);
          real basisEval3538#1 = RMul(coeff349A,prod34B5);
          real basisEval3539#2 = RMul(coeff349A,prod34BB);
          real basisEval353A#1 = RMul(coeff34A6,prod34C2);
          real basisEval353B#1 = RMul(coeff34B9,prod34C5);
          real basisEval353C#1 = RMul(coeff34D5,prod34C9);
          real basisEval353D#1 = RMul(coeff349A,prod34CB);
          real basisEval353E#1 = RMul(coeff34B9,prod34CF);
          real basisEval353F#1 = RMul(coeff349A,prod34D1);
          real basisEval3540#1 = RMul(coeff34A6,prod34D3);
          real basisEval3541#2 = RMul(coeff349A,prod34D7);
          real basisEval3542#1 = RMul(coeff34A6,prod34DE);
          real basisEval3543#2 = RMul(coeff34B9,prod34E1);
          real basisEval3544#1 = RMul(coeff34D5,prod34E4);
          real basisEval3545#1 = RMul(coeff34FC,prod34E8);
          real basisEval3546#1 = RMul(coeff349A,prod34EA);
          real basisEval3547#1 = RMul(coeff34B9,prod34EE);
          real basisEval3548#1 = RMul(coeff34D5,prod34F0);
          real basisEval3549#1 = RMul(coeff349A,prod34F2);
          real basisEval354A#2 = RMul(coeff34A6,prod34F4);
          real basisEval354B#1 = RMul(coeff349A,prod34F8);
          real basisEval354C#1 = RMul(coeff34A6,prod34FA);
          real basisEval354D#2 = RMul(coeff349A,prod34FE);
          real basisEval354E#1 = RMul(coeff34A6,prod3505);
          real basisEval354F#1 = RMul(coeff34B9,prod3508);
          real basisEval3550#1 = RMul(coeff34D5,prod350B);
          real basisEval3551#1 = RMul(coeff34FC,prod350E);
          real basisEval3552#1 = RMul(coeff3530,prod3512);
          real basisEval3553#1 = RMul(coeff349A,prod3514);
          real basisEval3554#2 = RMul(coeff34B9,prod3518);
          real basisEval3555#1 = RMul(coeff34D5,prod351A);
          real basisEval3556#1 = RMul(coeff34FC,prod351C);
          real basisEval3557#1 = RMul(coeff349A,prod351E);
          real basisEval3558#1 = RMul(coeff34A6,prod3520);
          real basisEval3559#1 = RMul(coeff34D5,prod3524);
          real basisEval355A#1 = RMul(coeff349A,prod3526);
          real basisEval355B#2 = RMul(coeff34A6,prod3528);
          real basisEval355C#1 = RMul(coeff34B9,prod352A);
          real basisEval355D#1 = RMul(coeff349A,prod352C);
          real basisEval355E#1 = RMul(coeff34A6,prod352E);
          real basisEval355F#2 = RMul(coeff349A,prod3532);
          real basisEval3560#1 = RMul(coeff34A6,prod34A0);
          real basisEval3561#1 = RMul(coeff34B9,prod34AC);
          real basisEval3562#1 = RMul(coeff349A,prod34B7);
          real basisEval3563#1 = RMul(coeff34D5,prod34BF);
          real basisEval3564#1 = RMul(coeff34B9,prod34C2);
          real basisEval3565#1 = RMul(coeff34A6,prod34C5);
          real basisEval3566#1 = RMul(coeff34B9,prod34CB);
          real basisEval3567#1 = RMul(coeff349A,prod34CF);
          real basisEval3568#1 = RMul(coeff34A6,prod34D1);
          real basisEval3569#1 = RMul(coeff349A,prod34D3);
          real basisEval356A#1 = RMul(coeff34FC,prod34DB);
          real basisEval356B#1 = RMul(coeff34D5,prod34DE);
          real basisEval356C#1 = RMul(coeff34A6,prod34E4);
          real basisEval356D#1 = RMul(coeff34D5,prod34EA);
          real basisEval356E#1 = RMul(coeff34B9,prod34EC);
          real basisEval356F#1 = RMul(coeff349A,prod34F0);
          real basisEval3570#1 = RMul(coeff349A,prod34F6);
          real basisEval3571#1 = RMul(coeff34A6,prod34F8);
          real basisEval3572#1 = RMul(coeff349A,prod34FA);
          real basisEval3573#1 = RMul(coeff3530,prod3502);
          real basisEval3574#1 = RMul(coeff34FC,prod3505);
          real basisEval3575#1 = RMul(coeff34D5,prod3508);
          real basisEval3576#1 = RMul(coeff34B9,prod350B);
          real basisEval3577#1 = RMul(coeff34A6,prod350E);
          real basisEval3578#1 = RMul(coeff34FC,prod3514);
          real basisEval3579#1 = RMul(coeff34D5,prod3516);
          real basisEval357A#1 = RMul(coeff349A,prod351C);
          real basisEval357B#1 = RMul(coeff34D5,prod351E);
          real basisEval357C#1 = RMul(coeff34A6,prod3522);
          real basisEval357D#1 = RMul(coeff349A,prod3524);
          real basisEval357E#1 = RMul(coeff34B9,prod3526);
          real basisEval357F#1 = RMul(coeff349A,prod352A);
          real basisEval3580#1 = RMul(coeff34A6,prod352C);
          real basisEval3581#1 = RMul(coeff349A,prod352E);
          tensor[84] intermediateCons3582#1 = <tensor[84]>[basisEval3499,basisEval3499,basisEval3499,basisEval349D,basisEval3499,basisEval3499,basisEval3499,basisEval34A1,basisEval34A5,basisEval34A9,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval34AD,basisEval34B0,basisEval34B4,basisEval34B6,basisEval34B8,basisEval34BC,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval34C0,basisEval34C3,basisEval34C6,basisEval34CA,basisEval34CC,basisEval34CE,basisEval34D0,basisEval34D2,basisEval34D4,basisEval34D8,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval34DC,basisEval34DF,basisEval34E2,basisEval34E5,basisEval34E9,basisEval34EB,basisEval34ED,basisEval34EF,basisEval34F1,basisEval34F3,basisEval34F5,basisEval34F7,basisEval34F9,basisEval34FB,basisEval34FF,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3503,basisEval3506,basisEval3509,basisEval350C,basisEval350F,basisEval3513,basisEval3515,basisEval3517,basisEval3519,basisEval351B,basisEval351D,basisEval351F,basisEval3521,basisEval3523,basisEval3525,basisEval3527,basisEval3529,basisEval352B,basisEval352D,basisEval352F,basisEval3533];
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval3499,basisEval3499,basisEval349D,basisEval3499,basisEval3499,basisEval34A1,basisEval3534,basisEval3499,basisEval3535,basisEval3499,basisEval3499,basisEval34AD,basisEval3536,basisEval3537,basisEval3499,basisEval3538,basisEval34B8,basisEval3499,basisEval3539,basisEval3499,basisEval3499,basisEval34C0,basisEval353A,basisEval353B,basisEval353C,basisEval3499,basisEval353D,basisEval34CE,basisEval353E,basisEval3499,basisEval353F,basisEval3540,basisEval3499,basisEval3541,basisEval3499,basisEval3499,basisEval34DC,basisEval3542,basisEval3543,basisEval3544,basisEval3545,basisEval3499,basisEval3546,basisEval34ED,basisEval3547,basisEval3548,basisEval3499,basisEval3549,basisEval354A,basisEval34F7,basisEval3499,basisEval354B,basisEval354C,basisEval3499,basisEval354D,basisEval3499,basisEval3499,basisEval3503,basisEval354E,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3499,basisEval3553,basisEval3517,basisEval3554,basisEval3555,basisEval3556,basisEval3499,basisEval3557,basisEval3558,basisEval3523,basisEval3559,basisEval3499,basisEval355A,basisEval355B,basisEval355C,basisEval3499,basisEval355D,basisEval355E,basisEval3499,basisEval355F,basisEval3499];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval3499,basisEval349D,basisEval3499,basisEval3499,basisEval3560,basisEval34A5,basisEval3499,basisEval3535,basisEval3499,basisEval3499,basisEval3561,basisEval3536,basisEval34B4,basisEval3499,basisEval34B6,basisEval3562,basisEval3499,basisEval3539,basisEval3499,basisEval3499,basisEval3563,basisEval3564,basisEval3565,basisEval34CA,basisEval3499,basisEval3566,basisEval34CE,basisEval3567,basisEval3499,basisEval3568,basisEval3569,basisEval3499,basisEval3541,basisEval3499,basisEval3499,basisEval356A,basisEval356B,basisEval3543,basisEval356C,basisEval34E9,basisEval3499,basisEval356D,basisEval356E,basisEval34EF,basisEval356F,basisEval3499,basisEval34F3,basisEval354A,basisEval3570,basisEval3499,basisEval3571,basisEval3572,basisEval3499,basisEval354D,basisEval3499,basisEval3499,basisEval3573,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3513,basisEval3499,basisEval3578,basisEval3579,basisEval3554,basisEval351B,basisEval357A,basisEval3499,basisEval357B,basisEval3521,basisEval357C,basisEval357D,basisEval3499,basisEval357E,basisEval355B,basisEval357F,basisEval3499,basisEval3580,basisEval3581,basisEval3499,basisEval355F,basisEval3499,basisEval3499];
          tensor[3,84] intermediateCons3585#1 = <tensor[3,84]>[intermediateCons3582,intermediateCons3583,intermediateCons3584];
          tensor[3,84] basisResult3495#3 = intermediateCons3585;
          tensor[84] projParam3678#1 = ProjectLast<tensor[3,84],[0]>(basisResult3495);
          real vdot3679#1 = VDot<84>(femDofs2F6E,projParam3678);
          tensor[84] projParam367A#1 = ProjectLast<tensor[3,84],[1]>(basisResult3495);
          real vdot367B#1 = VDot<84>(femDofs2F6E,projParam367A);
          tensor[84] projParam367C#1 = ProjectLast<tensor[3,84],[2]>(basisResult3495);
          real vdot367D#1 = VDot<84>(femDofs2F6E,projParam367C);
          tensor[3] probe_l_153677#3 = <tensor[3]>[vdot3679,vdot367B,vdot367D];
          tensor[3] projParam3687#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_143480);
          tensor[3] negV3688#1 = VNeg<3>(projParam3687);
          tensor[3] projParam3689#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_143480);
          tensor[3] negV368A#1 = VNeg<3>(projParam3689);
          tensor[3] projParam368B#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_143480);
          tensor[3] negV368C#1 = VNeg<3>(projParam368B);
          tensor[3,3] op1_e3_l_163686#3 = <tensor[3,3]>[negV3688,negV368A,negV368C];
          tensor[3] projParam3696#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_163686);
          real vdot3697#1 = VDot<3>(projParam3696,probe_l_153677);
          tensor[3] projParam3698#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_163686);
          real vdot3699#1 = VDot<3>(projParam3698,probe_l_153677);
          tensor[3] projParam369A#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_163686);
          real vdot369B#1 = VDot<3>(projParam369A,probe_l_153677);
          tensor[3] _t3695#1 = <tensor[3]>[vdot3697,vdot3699,vdot369B];
          goto JOIN36A6
        JOIN36A6:  preds = [ASSIGN36A3,ASSIGN40DD]
          tensor[3] step36A4#5 = phi(_t3695,_t36A5)
          real _t36A7#8 = 0.e0;
          real _t36A9#10 = 0.1e1;
          real _t36AB#1 = 0.15e1;
          real op1_e3_l_736AD#1 = VDot<3>(step36A4,step36A4);
          real op1_e3_l_836B0#3 = Sqrt(op1_e3_l_736AD);
          real op1_e3_l_936B3#1 = Abs<real>(op1_e3_l_836B0);
          real op1_e3_l_1036B6#1 = RDiv(op1_e3_l_936B3,thick247B);
          real op1_e3_l_1136B9#1 = RSub(_t36A9,op1_e3_l_1036B6);
          real op1_e3_l_1236BC#2 = RMul(_t36AB,op1_e3_l_1136B9);
          real op1_e3_l_1336BF#1 = RClamp(_t36A7,_t36A9,op1_e3_l_1236BC);
          real _t36C2#1 = RMul(maxAlpha2483,op1_e3_l_1336BF);
          bool _t36C5#1 = EQ<real>(_t36C2,_t36A7);
          if _t36C5 then goto SAVE36C8 else goto JOIN36CA
        SAVE36C8:  preds = [COND36C7]
          self.rayN = rayN24AB;
          active
          goto JOIN36CA
        JOIN36CA:  preds = [*ACTIVE36C9,COND36C7]
          real op1_e3_l_1436CB#1 = RClamp(_t36A7,_t36A9,op1_e3_l_1236BC);
          real op1_e3_l_1536CE#1 = RMul(maxAlpha2483,op1_e3_l_1436CB);
          real _t36D1#1 = RSub(_t36A9,op1_e3_l_1536CE);
          real _t36D4#1 = MathFn<pow>(_t36D1,alphaFix249B);
          bool _t36D6#1 = NEQ<real>(phKs24A3,_t36A7);
          if _t36D6 then goto ASSIGN36DB else goto JOIN36FE
        ASSIGN36DB:  preds = [COND36D8]
          tensor[3] op1_e3_l_636D9#3 = VAdd<3>(eyeDir249D,litwsp2493);
          real op1_e3_l_836DC#1 = VDot<3>(op1_e3_l_636D9,op1_e3_l_636D9);
          real op1_e3_l_936DF#1 = Sqrt(op1_e3_l_836DC);
          real realLit36E3#1 = 0.1e1;
          real op1_e3_l_1236E2#1 = RDiv(realLit36E3,op1_e3_l_836B0);
          tensor[3] op1_e3_l_1336E7#1 = VScale<3>(op1_e3_l_1236E2,step36A4);
          tensor[3] op1_e3_l_1436EA#1 = VNeg<3>(op1_e3_l_1336E7);
          real realLit36EE#1 = 0.1e1;
          real op1_e3_l_1636ED#1 = RDiv(realLit36EE,op1_e3_l_936DF);
          real op1_e3_l_1736F2#1 = VDot<3>(op1_e3_l_1436EA,op1_e3_l_636D9);
          real op1_e3_l_1836F5#1 = RMul(op1_e3_l_1636ED,op1_e3_l_1736F2);
          real _t36F8#1 = Abs<real>(op1_e3_l_1836F5);
          real scomp36FB#1 = MathFn<pow>(_t36F8,phSp24A5);
          goto JOIN36FE
        JOIN36FE:  preds = [ASSIGN36FC,COND36D8]
          real scomp36FD#1 = phi(scomp36FB,_t36A7)
          real cmin36FF#3 = VIndex<2,0>(cminmax2489);
          real cmax3701#2 = VIndex<2,1>(cminmax2489);
          tensor[3] mcol3703#4 = <tensor[3]>[_t36A9,_t36A9,_t36A9];
          bool _t3705#1 = NEQ<real>(cmin36FF,cmax3701);
          if _t3705 then goto ASSIGN370B else goto JOIN3DEB
        ASSIGN370B:  preds = [COND3707]
          tensor[3] v3709#1 = VAdd<3>(rayOrig2497,op1_e3_l_524B4);
          tensor[3] _t3708#3 = VAdd<3>(v3709,step36A4);
          int ilit370E#1 = 84;
          int mulRes370F#84 = IMul(_t246B,ilit370E);
          int ilit3710#1 = 0;
          int addRes3711#1 = IAdd(mulRes370F,ilit3710);
          int idx3712#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3711);
          int ilit3713#1 = 1;
          int addRes3714#1 = IAdd(mulRes370F,ilit3713);
          int idx3715#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3714);
          int ilit3716#1 = 2;
          int addRes3717#1 = IAdd(mulRes370F,ilit3716);
          int idx3718#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3717);
          int ilit3719#1 = 3;
          int addRes371A#1 = IAdd(mulRes370F,ilit3719);
          int idx371B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371A);
          int ilit371C#1 = 4;
          int addRes371D#1 = IAdd(mulRes370F,ilit371C);
          int idx371E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371D);
          int ilit371F#1 = 5;
          int addRes3720#1 = IAdd(mulRes370F,ilit371F);
          int idx3721#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3720);
          int ilit3722#1 = 6;
          int addRes3723#1 = IAdd(mulRes370F,ilit3722);
          int idx3724#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3723);
          int ilit3725#1 = 7;
          int addRes3726#1 = IAdd(mulRes370F,ilit3725);
          int idx3727#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3726);
          int ilit3728#1 = 8;
          int addRes3729#1 = IAdd(mulRes370F,ilit3728);
          int idx372A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3729);
          int ilit372B#1 = 9;
          int addRes372C#1 = IAdd(mulRes370F,ilit372B);
          int idx372D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372C);
          int ilit372E#1 = 10;
          int addRes372F#1 = IAdd(mulRes370F,ilit372E);
          int idx3730#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372F);
          int ilit3731#1 = 11;
          int addRes3732#1 = IAdd(mulRes370F,ilit3731);
          int idx3733#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3732);
          int ilit3734#1 = 12;
          int addRes3735#1 = IAdd(mulRes370F,ilit3734);
          int idx3736#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3735);
          int ilit3737#1 = 13;
          int addRes3738#1 = IAdd(mulRes370F,ilit3737);
          int idx3739#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3738);
          int ilit373A#1 = 14;
          int addRes373B#1 = IAdd(mulRes370F,ilit373A);
          int idx373C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373B);
          int ilit373D#1 = 15;
          int addRes373E#1 = IAdd(mulRes370F,ilit373D);
          int idx373F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373E);
          int ilit3740#1 = 16;
          int addRes3741#1 = IAdd(mulRes370F,ilit3740);
          int idx3742#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3741);
          int ilit3743#1 = 17;
          int addRes3744#1 = IAdd(mulRes370F,ilit3743);
          int idx3745#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3744);
          int ilit3746#1 = 18;
          int addRes3747#1 = IAdd(mulRes370F,ilit3746);
          int idx3748#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3747);
          int ilit3749#1 = 19;
          int addRes374A#1 = IAdd(mulRes370F,ilit3749);
          int idx374B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374A);
          int ilit374C#1 = 20;
          int addRes374D#1 = IAdd(mulRes370F,ilit374C);
          int idx374E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374D);
          int ilit374F#1 = 21;
          int addRes3750#1 = IAdd(mulRes370F,ilit374F);
          int idx3751#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3750);
          int ilit3752#1 = 22;
          int addRes3753#1 = IAdd(mulRes370F,ilit3752);
          int idx3754#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3753);
          int ilit3755#1 = 23;
          int addRes3756#1 = IAdd(mulRes370F,ilit3755);
          int idx3757#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3756);
          int ilit3758#1 = 24;
          int addRes3759#1 = IAdd(mulRes370F,ilit3758);
          int idx375A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3759);
          int ilit375B#1 = 25;
          int addRes375C#1 = IAdd(mulRes370F,ilit375B);
          int idx375D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375C);
          int ilit375E#1 = 26;
          int addRes375F#1 = IAdd(mulRes370F,ilit375E);
          int idx3760#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375F);
          int ilit3761#1 = 27;
          int addRes3762#1 = IAdd(mulRes370F,ilit3761);
          int idx3763#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3762);
          int ilit3764#1 = 28;
          int addRes3765#1 = IAdd(mulRes370F,ilit3764);
          int idx3766#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3765);
          int ilit3767#1 = 29;
          int addRes3768#1 = IAdd(mulRes370F,ilit3767);
          int idx3769#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3768);
          int ilit376A#1 = 30;
          int addRes376B#1 = IAdd(mulRes370F,ilit376A);
          int idx376C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376B);
          int ilit376D#1 = 31;
          int addRes376E#1 = IAdd(mulRes370F,ilit376D);
          int idx376F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376E);
          int ilit3770#1 = 32;
          int addRes3771#1 = IAdd(mulRes370F,ilit3770);
          int idx3772#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3771);
          int ilit3773#1 = 33;
          int addRes3774#1 = IAdd(mulRes370F,ilit3773);
          int idx3775#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3774);
          int ilit3776#1 = 34;
          int addRes3777#1 = IAdd(mulRes370F,ilit3776);
          int idx3778#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3777);
          int ilit3779#1 = 35;
          int addRes377A#1 = IAdd(mulRes370F,ilit3779);
          int idx377B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377A);
          int ilit377C#1 = 36;
          int addRes377D#1 = IAdd(mulRes370F,ilit377C);
          int idx377E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377D);
          int ilit377F#1 = 37;
          int addRes3780#1 = IAdd(mulRes370F,ilit377F);
          int idx3781#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3780);
          int ilit3782#1 = 38;
          int addRes3783#1 = IAdd(mulRes370F,ilit3782);
          int idx3784#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3783);
          int ilit3785#1 = 39;
          int addRes3786#1 = IAdd(mulRes370F,ilit3785);
          int idx3787#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3786);
          int ilit3788#1 = 40;
          int addRes3789#1 = IAdd(mulRes370F,ilit3788);
          int idx378A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3789);
          int ilit378B#1 = 41;
          int addRes378C#1 = IAdd(mulRes370F,ilit378B);
          int idx378D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378C);
          int ilit378E#1 = 42;
          int addRes378F#1 = IAdd(mulRes370F,ilit378E);
          int idx3790#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378F);
          int ilit3791#1 = 43;
          int addRes3792#1 = IAdd(mulRes370F,ilit3791);
          int idx3793#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3792);
          int ilit3794#1 = 44;
          int addRes3795#1 = IAdd(mulRes370F,ilit3794);
          int idx3796#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3795);
          int ilit3797#1 = 45;
          int addRes3798#1 = IAdd(mulRes370F,ilit3797);
          int idx3799#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3798);
          int ilit379A#1 = 46;
          int addRes379B#1 = IAdd(mulRes370F,ilit379A);
          int idx379C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379B);
          int ilit379D#1 = 47;
          int addRes379E#1 = IAdd(mulRes370F,ilit379D);
          int idx379F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379E);
          int ilit37A0#1 = 48;
          int addRes37A1#1 = IAdd(mulRes370F,ilit37A0);
          int idx37A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A1);
          int ilit37A3#1 = 49;
          int addRes37A4#1 = IAdd(mulRes370F,ilit37A3);
          int idx37A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A4);
          int ilit37A6#1 = 50;
          int addRes37A7#1 = IAdd(mulRes370F,ilit37A6);
          int idx37A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A7);
          int ilit37A9#1 = 51;
          int addRes37AA#1 = IAdd(mulRes370F,ilit37A9);
          int idx37AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AA);
          int ilit37AC#1 = 52;
          int addRes37AD#1 = IAdd(mulRes370F,ilit37AC);
          int idx37AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AD);
          int ilit37AF#1 = 53;
          int addRes37B0#1 = IAdd(mulRes370F,ilit37AF);
          int idx37B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B0);
          int ilit37B2#1 = 54;
          int addRes37B3#1 = IAdd(mulRes370F,ilit37B2);
          int idx37B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B3);
          int ilit37B5#1 = 55;
          int addRes37B6#1 = IAdd(mulRes370F,ilit37B5);
          int idx37B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B6);
          int ilit37B8#1 = 56;
          int addRes37B9#1 = IAdd(mulRes370F,ilit37B8);
          int idx37BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B9);
          int ilit37BB#1 = 57;
          int addRes37BC#1 = IAdd(mulRes370F,ilit37BB);
          int idx37BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BC);
          int ilit37BE#1 = 58;
          int addRes37BF#1 = IAdd(mulRes370F,ilit37BE);
          int idx37C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BF);
          int ilit37C1#1 = 59;
          int addRes37C2#1 = IAdd(mulRes370F,ilit37C1);
          int idx37C3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C2);
          int ilit37C4#1 = 60;
          int addRes37C5#1 = IAdd(mulRes370F,ilit37C4);
          int idx37C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C5);
          int ilit37C7#1 = 61;
          int addRes37C8#1 = IAdd(mulRes370F,ilit37C7);
          int idx37C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C8);
          int ilit37CA#1 = 62;
          int addRes37CB#1 = IAdd(mulRes370F,ilit37CA);
          int idx37CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CB);
          int ilit37CD#1 = 63;
          int addRes37CE#1 = IAdd(mulRes370F,ilit37CD);
          int idx37CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CE);
          int ilit37D0#1 = 64;
          int addRes37D1#1 = IAdd(mulRes370F,ilit37D0);
          int idx37D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D1);
          int ilit37D3#1 = 65;
          int addRes37D4#1 = IAdd(mulRes370F,ilit37D3);
          int idx37D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D4);
          int ilit37D6#1 = 66;
          int addRes37D7#1 = IAdd(mulRes370F,ilit37D6);
          int idx37D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D7);
          int ilit37D9#1 = 67;
          int addRes37DA#1 = IAdd(mulRes370F,ilit37D9);
          int idx37DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DA);
          int ilit37DC#1 = 68;
          int addRes37DD#1 = IAdd(mulRes370F,ilit37DC);
          int idx37DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DD);
          int ilit37DF#1 = 69;
          int addRes37E0#1 = IAdd(mulRes370F,ilit37DF);
          int idx37E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E0);
          int ilit37E2#1 = 70;
          int addRes37E3#1 = IAdd(mulRes370F,ilit37E2);
          int idx37E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E3);
          int ilit37E5#1 = 71;
          int addRes37E6#1 = IAdd(mulRes370F,ilit37E5);
          int idx37E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E6);
          int ilit37E8#1 = 72;
          int addRes37E9#1 = IAdd(mulRes370F,ilit37E8);
          int idx37EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E9);
          int ilit37EB#1 = 73;
          int addRes37EC#1 = IAdd(mulRes370F,ilit37EB);
          int idx37ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EC);
          int ilit37EE#1 = 74;
          int addRes37EF#1 = IAdd(mulRes370F,ilit37EE);
          int idx37F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EF);
          int ilit37F1#1 = 75;
          int addRes37F2#1 = IAdd(mulRes370F,ilit37F1);
          int idx37F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F2);
          int ilit37F4#1 = 76;
          int addRes37F5#1 = IAdd(mulRes370F,ilit37F4);
          int idx37F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F5);
          int ilit37F7#1 = 77;
          int addRes37F8#1 = IAdd(mulRes370F,ilit37F7);
          int idx37F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F8);
          int ilit37FA#1 = 78;
          int addRes37FB#1 = IAdd(mulRes370F,ilit37FA);
          int idx37FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FB);
          int ilit37FD#1 = 79;
          int addRes37FE#1 = IAdd(mulRes370F,ilit37FD);
          int idx37FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FE);
          int ilit3800#1 = 80;
          int addRes3801#1 = IAdd(mulRes370F,ilit3800);
          int idx3802#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3801);
          int ilit3803#1 = 81;
          int addRes3804#1 = IAdd(mulRes370F,ilit3803);
          int idx3805#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3804);
          int ilit3806#1 = 82;
          int addRes3807#1 = IAdd(mulRes370F,ilit3806);
          int idx3808#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3807);
          int ilit3809#1 = 83;
          int addRes380A#1 = IAdd(mulRes370F,ilit3809);
          int idx380B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes380A);
          int[84] seq380C#1 = <int[84]>{idx3712,idx3715,idx3718,idx371B,idx371E,idx3721,idx3724,idx3727,idx372A,idx372D,idx3730,idx3733,idx3736,idx3739,idx373C,idx373F,idx3742,idx3745,idx3748,idx374B,idx374E,idx3751,idx3754,idx3757,idx375A,idx375D,idx3760,idx3763,idx3766,idx3769,idx376C,idx376F,idx3772,idx3775,idx3778,idx377B,idx377E,idx3781,idx3784,idx3787,idx378A,idx378D,idx3790,idx3793,idx3796,idx3799,idx379C,idx379F,idx37A2,idx37A5,idx37A8,idx37AB,idx37AE,idx37B1,idx37B4,idx37B7,idx37BA,idx37BD,idx37C0,idx37C3,idx37C6,idx37C9,idx37CC,idx37CF,idx37D2,idx37D5,idx37D8,idx37DB,idx37DE,idx37E1,idx37E4,idx37E7,idx37EA,idx37ED,idx37F0,idx37F3,idx37F6,idx37F9,idx37FC,idx37FF,idx3802,idx3805,idx3808,idx380B};
          int[84] femIndicies370D#84 = seq380C;
          int ilit390E#85 = 1;
          int ilit390F#1 = 0;
          int idx3910#1 = Subscript<int>(femIndicies370D,ilit390F);
          int mulRes3911#1 = IMul(ilit390E,idx3910);
          int idx3912#1 = Subscript<int>(femIndicies370D,ilit390E);
          int mulRes3913#1 = IMul(ilit390E,idx3912);
          int ilit3914#1 = 2;
          int idx3915#1 = Subscript<int>(femIndicies370D,ilit3914);
          int mulRes3916#1 = IMul(ilit390E,idx3915);
          int ilit3917#1 = 3;
          int idx3918#1 = Subscript<int>(femIndicies370D,ilit3917);
          int mulRes3919#1 = IMul(ilit390E,idx3918);
          int ilit391A#1 = 4;
          int idx391B#1 = Subscript<int>(femIndicies370D,ilit391A);
          int mulRes391C#1 = IMul(ilit390E,idx391B);
          int ilit391D#1 = 5;
          int idx391E#1 = Subscript<int>(femIndicies370D,ilit391D);
          int mulRes391F#1 = IMul(ilit390E,idx391E);
          int ilit3920#1 = 6;
          int idx3921#1 = Subscript<int>(femIndicies370D,ilit3920);
          int mulRes3922#1 = IMul(ilit390E,idx3921);
          int ilit3923#1 = 7;
          int idx3924#1 = Subscript<int>(femIndicies370D,ilit3923);
          int mulRes3925#1 = IMul(ilit390E,idx3924);
          int ilit3926#1 = 8;
          int idx3927#1 = Subscript<int>(femIndicies370D,ilit3926);
          int mulRes3928#1 = IMul(ilit390E,idx3927);
          int ilit3929#1 = 9;
          int idx392A#1 = Subscript<int>(femIndicies370D,ilit3929);
          int mulRes392B#1 = IMul(ilit390E,idx392A);
          int ilit392C#1 = 10;
          int idx392D#1 = Subscript<int>(femIndicies370D,ilit392C);
          int mulRes392E#1 = IMul(ilit390E,idx392D);
          int ilit392F#1 = 11;
          int idx3930#1 = Subscript<int>(femIndicies370D,ilit392F);
          int mulRes3931#1 = IMul(ilit390E,idx3930);
          int ilit3932#1 = 12;
          int idx3933#1 = Subscript<int>(femIndicies370D,ilit3932);
          int mulRes3934#1 = IMul(ilit390E,idx3933);
          int ilit3935#1 = 13;
          int idx3936#1 = Subscript<int>(femIndicies370D,ilit3935);
          int mulRes3937#1 = IMul(ilit390E,idx3936);
          int ilit3938#1 = 14;
          int idx3939#1 = Subscript<int>(femIndicies370D,ilit3938);
          int mulRes393A#1 = IMul(ilit390E,idx3939);
          int ilit393B#1 = 15;
          int idx393C#1 = Subscript<int>(femIndicies370D,ilit393B);
          int mulRes393D#1 = IMul(ilit390E,idx393C);
          int ilit393E#1 = 16;
          int idx393F#1 = Subscript<int>(femIndicies370D,ilit393E);
          int mulRes3940#1 = IMul(ilit390E,idx393F);
          int ilit3941#1 = 17;
          int idx3942#1 = Subscript<int>(femIndicies370D,ilit3941);
          int mulRes3943#1 = IMul(ilit390E,idx3942);
          int ilit3944#1 = 18;
          int idx3945#1 = Subscript<int>(femIndicies370D,ilit3944);
          int mulRes3946#1 = IMul(ilit390E,idx3945);
          int ilit3947#1 = 19;
          int idx3948#1 = Subscript<int>(femIndicies370D,ilit3947);
          int mulRes3949#1 = IMul(ilit390E,idx3948);
          int ilit394A#1 = 20;
          int idx394B#1 = Subscript<int>(femIndicies370D,ilit394A);
          int mulRes394C#1 = IMul(ilit390E,idx394B);
          int ilit394D#1 = 21;
          int idx394E#1 = Subscript<int>(femIndicies370D,ilit394D);
          int mulRes394F#1 = IMul(ilit390E,idx394E);
          int ilit3950#1 = 22;
          int idx3951#1 = Subscript<int>(femIndicies370D,ilit3950);
          int mulRes3952#1 = IMul(ilit390E,idx3951);
          int ilit3953#1 = 23;
          int idx3954#1 = Subscript<int>(femIndicies370D,ilit3953);
          int mulRes3955#1 = IMul(ilit390E,idx3954);
          int ilit3956#1 = 24;
          int idx3957#1 = Subscript<int>(femIndicies370D,ilit3956);
          int mulRes3958#1 = IMul(ilit390E,idx3957);
          int ilit3959#1 = 25;
          int idx395A#1 = Subscript<int>(femIndicies370D,ilit3959);
          int mulRes395B#1 = IMul(ilit390E,idx395A);
          int ilit395C#1 = 26;
          int idx395D#1 = Subscript<int>(femIndicies370D,ilit395C);
          int mulRes395E#1 = IMul(ilit390E,idx395D);
          int ilit395F#1 = 27;
          int idx3960#1 = Subscript<int>(femIndicies370D,ilit395F);
          int mulRes3961#1 = IMul(ilit390E,idx3960);
          int ilit3962#1 = 28;
          int idx3963#1 = Subscript<int>(femIndicies370D,ilit3962);
          int mulRes3964#1 = IMul(ilit390E,idx3963);
          int ilit3965#1 = 29;
          int idx3966#1 = Subscript<int>(femIndicies370D,ilit3965);
          int mulRes3967#1 = IMul(ilit390E,idx3966);
          int ilit3968#1 = 30;
          int idx3969#1 = Subscript<int>(femIndicies370D,ilit3968);
          int mulRes396A#1 = IMul(ilit390E,idx3969);
          int ilit396B#1 = 31;
          int idx396C#1 = Subscript<int>(femIndicies370D,ilit396B);
          int mulRes396D#1 = IMul(ilit390E,idx396C);
          int ilit396E#1 = 32;
          int idx396F#1 = Subscript<int>(femIndicies370D,ilit396E);
          int mulRes3970#1 = IMul(ilit390E,idx396F);
          int ilit3971#1 = 33;
          int idx3972#1 = Subscript<int>(femIndicies370D,ilit3971);
          int mulRes3973#1 = IMul(ilit390E,idx3972);
          int ilit3974#1 = 34;
          int idx3975#1 = Subscript<int>(femIndicies370D,ilit3974);
          int mulRes3976#1 = IMul(ilit390E,idx3975);
          int ilit3977#1 = 35;
          int idx3978#1 = Subscript<int>(femIndicies370D,ilit3977);
          int mulRes3979#1 = IMul(ilit390E,idx3978);
          int ilit397A#1 = 36;
          int idx397B#1 = Subscript<int>(femIndicies370D,ilit397A);
          int mulRes397C#1 = IMul(ilit390E,idx397B);
          int ilit397D#1 = 37;
          int idx397E#1 = Subscript<int>(femIndicies370D,ilit397D);
          int mulRes397F#1 = IMul(ilit390E,idx397E);
          int ilit3980#1 = 38;
          int idx3981#1 = Subscript<int>(femIndicies370D,ilit3980);
          int mulRes3982#1 = IMul(ilit390E,idx3981);
          int ilit3983#1 = 39;
          int idx3984#1 = Subscript<int>(femIndicies370D,ilit3983);
          int mulRes3985#1 = IMul(ilit390E,idx3984);
          int ilit3986#1 = 40;
          int idx3987#1 = Subscript<int>(femIndicies370D,ilit3986);
          int mulRes3988#1 = IMul(ilit390E,idx3987);
          int ilit3989#1 = 41;
          int idx398A#1 = Subscript<int>(femIndicies370D,ilit3989);
          int mulRes398B#1 = IMul(ilit390E,idx398A);
          int ilit398C#1 = 42;
          int idx398D#1 = Subscript<int>(femIndicies370D,ilit398C);
          int mulRes398E#1 = IMul(ilit390E,idx398D);
          int ilit398F#1 = 43;
          int idx3990#1 = Subscript<int>(femIndicies370D,ilit398F);
          int mulRes3991#1 = IMul(ilit390E,idx3990);
          int ilit3992#1 = 44;
          int idx3993#1 = Subscript<int>(femIndicies370D,ilit3992);
          int mulRes3994#1 = IMul(ilit390E,idx3993);
          int ilit3995#1 = 45;
          int idx3996#1 = Subscript<int>(femIndicies370D,ilit3995);
          int mulRes3997#1 = IMul(ilit390E,idx3996);
          int ilit3998#1 = 46;
          int idx3999#1 = Subscript<int>(femIndicies370D,ilit3998);
          int mulRes399A#1 = IMul(ilit390E,idx3999);
          int ilit399B#1 = 47;
          int idx399C#1 = Subscript<int>(femIndicies370D,ilit399B);
          int mulRes399D#1 = IMul(ilit390E,idx399C);
          int ilit399E#1 = 48;
          int idx399F#1 = Subscript<int>(femIndicies370D,ilit399E);
          int mulRes39A0#1 = IMul(ilit390E,idx399F);
          int ilit39A1#1 = 49;
          int idx39A2#1 = Subscript<int>(femIndicies370D,ilit39A1);
          int mulRes39A3#1 = IMul(ilit390E,idx39A2);
          int ilit39A4#1 = 50;
          int idx39A5#1 = Subscript<int>(femIndicies370D,ilit39A4);
          int mulRes39A6#1 = IMul(ilit390E,idx39A5);
          int ilit39A7#1 = 51;
          int idx39A8#1 = Subscript<int>(femIndicies370D,ilit39A7);
          int mulRes39A9#1 = IMul(ilit390E,idx39A8);
          int ilit39AA#1 = 52;
          int idx39AB#1 = Subscript<int>(femIndicies370D,ilit39AA);
          int mulRes39AC#1 = IMul(ilit390E,idx39AB);
          int ilit39AD#1 = 53;
          int idx39AE#1 = Subscript<int>(femIndicies370D,ilit39AD);
          int mulRes39AF#1 = IMul(ilit390E,idx39AE);
          int ilit39B0#1 = 54;
          int idx39B1#1 = Subscript<int>(femIndicies370D,ilit39B0);
          int mulRes39B2#1 = IMul(ilit390E,idx39B1);
          int ilit39B3#1 = 55;
          int idx39B4#1 = Subscript<int>(femIndicies370D,ilit39B3);
          int mulRes39B5#1 = IMul(ilit390E,idx39B4);
          int ilit39B6#1 = 56;
          int idx39B7#1 = Subscript<int>(femIndicies370D,ilit39B6);
          int mulRes39B8#1 = IMul(ilit390E,idx39B7);
          int ilit39B9#1 = 57;
          int idx39BA#1 = Subscript<int>(femIndicies370D,ilit39B9);
          int mulRes39BB#1 = IMul(ilit390E,idx39BA);
          int ilit39BC#1 = 58;
          int idx39BD#1 = Subscript<int>(femIndicies370D,ilit39BC);
          int mulRes39BE#1 = IMul(ilit390E,idx39BD);
          int ilit39BF#1 = 59;
          int idx39C0#1 = Subscript<int>(femIndicies370D,ilit39BF);
          int mulRes39C1#1 = IMul(ilit390E,idx39C0);
          int ilit39C2#1 = 60;
          int idx39C3#1 = Subscript<int>(femIndicies370D,ilit39C2);
          int mulRes39C4#1 = IMul(ilit390E,idx39C3);
          int ilit39C5#1 = 61;
          int idx39C6#1 = Subscript<int>(femIndicies370D,ilit39C5);
          int mulRes39C7#1 = IMul(ilit390E,idx39C6);
          int ilit39C8#1 = 62;
          int idx39C9#1 = Subscript<int>(femIndicies370D,ilit39C8);
          int mulRes39CA#1 = IMul(ilit390E,idx39C9);
          int ilit39CB#1 = 63;
          int idx39CC#1 = Subscript<int>(femIndicies370D,ilit39CB);
          int mulRes39CD#1 = IMul(ilit390E,idx39CC);
          int ilit39CE#1 = 64;
          int idx39CF#1 = Subscript<int>(femIndicies370D,ilit39CE);
          int mulRes39D0#1 = IMul(ilit390E,idx39CF);
          int ilit39D1#1 = 65;
          int idx39D2#1 = Subscript<int>(femIndicies370D,ilit39D1);
          int mulRes39D3#1 = IMul(ilit390E,idx39D2);
          int ilit39D4#1 = 66;
          int idx39D5#1 = Subscript<int>(femIndicies370D,ilit39D4);
          int mulRes39D6#1 = IMul(ilit390E,idx39D5);
          int ilit39D7#1 = 67;
          int idx39D8#1 = Subscript<int>(femIndicies370D,ilit39D7);
          int mulRes39D9#1 = IMul(ilit390E,idx39D8);
          int ilit39DA#1 = 68;
          int idx39DB#1 = Subscript<int>(femIndicies370D,ilit39DA);
          int mulRes39DC#1 = IMul(ilit390E,idx39DB);
          int ilit39DD#1 = 69;
          int idx39DE#1 = Subscript<int>(femIndicies370D,ilit39DD);
          int mulRes39DF#1 = IMul(ilit390E,idx39DE);
          int ilit39E0#1 = 70;
          int idx39E1#1 = Subscript<int>(femIndicies370D,ilit39E0);
          int mulRes39E2#1 = IMul(ilit390E,idx39E1);
          int ilit39E3#1 = 71;
          int idx39E4#1 = Subscript<int>(femIndicies370D,ilit39E3);
          int mulRes39E5#1 = IMul(ilit390E,idx39E4);
          int ilit39E6#1 = 72;
          int idx39E7#1 = Subscript<int>(femIndicies370D,ilit39E6);
          int mulRes39E8#1 = IMul(ilit390E,idx39E7);
          int ilit39E9#1 = 73;
          int idx39EA#1 = Subscript<int>(femIndicies370D,ilit39E9);
          int mulRes39EB#1 = IMul(ilit390E,idx39EA);
          int ilit39EC#1 = 74;
          int idx39ED#1 = Subscript<int>(femIndicies370D,ilit39EC);
          int mulRes39EE#1 = IMul(ilit390E,idx39ED);
          int ilit39EF#1 = 75;
          int idx39F0#1 = Subscript<int>(femIndicies370D,ilit39EF);
          int mulRes39F1#1 = IMul(ilit390E,idx39F0);
          int ilit39F2#1 = 76;
          int idx39F3#1 = Subscript<int>(femIndicies370D,ilit39F2);
          int mulRes39F4#1 = IMul(ilit390E,idx39F3);
          int ilit39F5#1 = 77;
          int idx39F6#1 = Subscript<int>(femIndicies370D,ilit39F5);
          int mulRes39F7#1 = IMul(ilit390E,idx39F6);
          int ilit39F8#1 = 78;
          int idx39F9#1 = Subscript<int>(femIndicies370D,ilit39F8);
          int mulRes39FA#1 = IMul(ilit390E,idx39F9);
          int ilit39FB#1 = 79;
          int idx39FC#1 = Subscript<int>(femIndicies370D,ilit39FB);
          int mulRes39FD#1 = IMul(ilit390E,idx39FC);
          int ilit39FE#1 = 80;
          int idx39FF#1 = Subscript<int>(femIndicies370D,ilit39FE);
          int mulRes3A00#1 = IMul(ilit390E,idx39FF);
          int ilit3A01#1 = 81;
          int idx3A02#1 = Subscript<int>(femIndicies370D,ilit3A01);
          int mulRes3A03#1 = IMul(ilit390E,idx3A02);
          int ilit3A04#1 = 82;
          int idx3A05#1 = Subscript<int>(femIndicies370D,ilit3A04);
          int mulRes3A06#1 = IMul(ilit390E,idx3A05);
          int ilit3A07#1 = 83;
          int idx3A08#1 = Subscript<int>(femIndicies370D,ilit3A07);
          int mulRes3A09#1 = IMul(ilit390E,idx3A08);
          real dof3A0A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3911);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3913);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3916);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3919);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391C);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391F);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3922);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3925);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3928);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392B);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392E);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3931);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3934);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3937);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393A);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393D);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3940);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3943);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3946);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3949);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394C);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394F);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3952);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3955);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3958);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395B);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395E);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3961);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3964);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3967);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396A);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396D);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3970);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3973);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3976);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3979);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397C);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397F);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3982);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3985);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3988);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398B);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398E);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3991);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3994);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3997);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399A);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399D);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A0);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A3);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A6);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A9);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AC);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AF);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B2);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B5);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B8);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BB);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BE);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C1);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C4);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C7);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CA);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CD);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D0);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D3);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D6);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D9);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DC);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DF);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E2);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E5);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E8);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EB);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EE);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F1);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F4);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F7);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FA);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FD);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A00);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A03);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A06);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A09);
          tensor[84] dofs3A5E#1 = <tensor[84]>[dof3A0A,dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D];
          tensor[84] femDofs390D#1 = dofs3A5E;
          real varAcc3BB2#6 = VIndex<3,0>(_t3708);
          real varAcc3BB3#6 = VIndex<3,1>(_t3708);
          real varAcc3BB4#6 = VIndex<3,2>(_t3708);
          real coeff3BB5#126 = 0.1e1;
          real prod3BB6#7 = RMul(coeff3BB5,coeff3BB5);
          real prod3BB7#1 = RMul(coeff3BB5,prod3BB6);
          real basisEval3BB8#1 = RMul(coeff3BB5,prod3BB7);
          real iden3BB9#7 = varAcc3BB4;
          real prod3BBA#6 = RMul(coeff3BB5,iden3BB9);
          real prod3BBB#1 = RMul(coeff3BB5,prod3BBA);
          real basisEval3BBC#1 = RMul(coeff3BB5,prod3BBB);
          real iden3BBD#7 = varAcc3BB3;
          real prod3BBE#6 = RMul(iden3BBD,coeff3BB5);
          real prod3BBF#1 = RMul(coeff3BB5,prod3BBE);
          real basisEval3BC0#1 = RMul(coeff3BB5,prod3BBF);
          real iden3BC1#22 = varAcc3BB2;
          real prod3BC2#1 = RMul(iden3BC1,prod3BB6);
          real basisEval3BC3#1 = RMul(coeff3BB5,prod3BC2);
          real prod23BC4#6 = RMul(iden3BB9,varAcc3BB4);
          real prod3BC5#5 = RMul(coeff3BB5,prod23BC4);
          real prod3BC6#1 = RMul(coeff3BB5,prod3BC5);
          real basisEval3BC7#1 = RMul(coeff3BB5,prod3BC6);
          real prod3BC8#5 = RMul(iden3BBD,iden3BB9);
          real prod3BC9#1 = RMul(coeff3BB5,prod3BC8);
          real basisEval3BCA#1 = RMul(coeff3BB5,prod3BC9);
          real prod23BCB#6 = RMul(iden3BBD,varAcc3BB3);
          real prod3BCC#5 = RMul(prod23BCB,coeff3BB5);
          real prod3BCD#1 = RMul(coeff3BB5,prod3BCC);
          real basisEval3BCE#1 = RMul(coeff3BB5,prod3BCD);
          real prod3BCF#1 = RMul(iden3BC1,prod3BBA);
          real basisEval3BD0#1 = RMul(coeff3BB5,prod3BCF);
          real prod3BD1#1 = RMul(iden3BC1,prod3BBE);
          real basisEval3BD2#1 = RMul(coeff3BB5,prod3BD1);
          real prod23BD3#16 = RMul(iden3BC1,varAcc3BB2);
          real prod3BD4#1 = RMul(prod23BD3,prod3BB6);
          real basisEval3BD5#1 = RMul(coeff3BB5,prod3BD4);
          real prod33BD6#5 = RMul(prod23BC4,varAcc3BB4);
          real prod3BD7#4 = RMul(coeff3BB5,prod33BD6);
          real prod3BD8#1 = RMul(coeff3BB5,prod3BD7);
          real basisEval3BD9#1 = RMul(coeff3BB5,prod3BD8);
          real prod3BDA#4 = RMul(iden3BBD,prod23BC4);
          real prod3BDB#1 = RMul(coeff3BB5,prod3BDA);
          real basisEval3BDC#1 = RMul(coeff3BB5,prod3BDB);
          real prod3BDD#4 = RMul(prod23BCB,iden3BB9);
          real prod3BDE#1 = RMul(coeff3BB5,prod3BDD);
          real basisEval3BDF#1 = RMul(coeff3BB5,prod3BDE);
          real prod33BE0#5 = RMul(prod23BCB,varAcc3BB3);
          real prod3BE1#4 = RMul(prod33BE0,coeff3BB5);
          real prod3BE2#1 = RMul(coeff3BB5,prod3BE1);
          real basisEval3BE3#1 = RMul(coeff3BB5,prod3BE2);
          real prod3BE4#1 = RMul(iden3BC1,prod3BC5);
          real basisEval3BE5#1 = RMul(coeff3BB5,prod3BE4);
          real prod3BE6#1 = RMul(iden3BC1,prod3BC8);
          real basisEval3BE7#1 = RMul(coeff3BB5,prod3BE6);
          real prod3BE8#1 = RMul(iden3BC1,prod3BCC);
          real basisEval3BE9#1 = RMul(coeff3BB5,prod3BE8);
          real prod3BEA#1 = RMul(prod23BD3,prod3BBA);
          real basisEval3BEB#1 = RMul(coeff3BB5,prod3BEA);
          real prod3BEC#1 = RMul(prod23BD3,prod3BBE);
          real basisEval3BED#1 = RMul(coeff3BB5,prod3BEC);
          real prod33BEE#11 = RMul(prod23BD3,varAcc3BB2);
          real prod3BEF#1 = RMul(prod33BEE,prod3BB6);
          real basisEval3BF0#1 = RMul(coeff3BB5,prod3BEF);
          real prod43BF1#4 = RMul(prod33BD6,varAcc3BB4);
          real prod3BF2#3 = RMul(coeff3BB5,prod43BF1);
          real prod3BF3#1 = RMul(coeff3BB5,prod3BF2);
          real basisEval3BF4#1 = RMul(coeff3BB5,prod3BF3);
          real prod3BF5#3 = RMul(iden3BBD,prod33BD6);
          real prod3BF6#1 = RMul(coeff3BB5,prod3BF5);
          real basisEval3BF7#1 = RMul(coeff3BB5,prod3BF6);
          real prod3BF8#3 = RMul(prod23BCB,prod23BC4);
          real prod3BF9#1 = RMul(coeff3BB5,prod3BF8);
          real basisEval3BFA#1 = RMul(coeff3BB5,prod3BF9);
          real prod3BFB#3 = RMul(prod33BE0,iden3BB9);
          real prod3BFC#1 = RMul(coeff3BB5,prod3BFB);
          real basisEval3BFD#1 = RMul(coeff3BB5,prod3BFC);
          real prod43BFE#4 = RMul(prod33BE0,varAcc3BB3);
          real prod3BFF#3 = RMul(prod43BFE,coeff3BB5);
          real prod3C00#1 = RMul(coeff3BB5,prod3BFF);
          real basisEval3C01#1 = RMul(coeff3BB5,prod3C00);
          real prod3C02#1 = RMul(iden3BC1,prod3BD7);
          real basisEval3C03#1 = RMul(coeff3BB5,prod3C02);
          real prod3C04#1 = RMul(iden3BC1,prod3BDA);
          real basisEval3C05#1 = RMul(coeff3BB5,prod3C04);
          real prod3C06#1 = RMul(iden3BC1,prod3BDD);
          real basisEval3C07#1 = RMul(coeff3BB5,prod3C06);
          real prod3C08#1 = RMul(iden3BC1,prod3BE1);
          real basisEval3C09#1 = RMul(coeff3BB5,prod3C08);
          real prod3C0A#1 = RMul(prod23BD3,prod3BC5);
          real basisEval3C0B#1 = RMul(coeff3BB5,prod3C0A);
          real prod3C0C#1 = RMul(prod23BD3,prod3BC8);
          real basisEval3C0D#1 = RMul(coeff3BB5,prod3C0C);
          real prod3C0E#1 = RMul(prod23BD3,prod3BCC);
          real basisEval3C0F#1 = RMul(coeff3BB5,prod3C0E);
          real prod3C10#1 = RMul(prod33BEE,prod3BBA);
          real basisEval3C11#1 = RMul(coeff3BB5,prod3C10);
          real prod3C12#1 = RMul(prod33BEE,prod3BBE);
          real basisEval3C13#1 = RMul(coeff3BB5,prod3C12);
          real prod43C14#7 = RMul(prod33BEE,varAcc3BB2);
          real prod3C15#1 = RMul(prod43C14,prod3BB6);
          real basisEval3C16#1 = RMul(coeff3BB5,prod3C15);
          real prod53C17#3 = RMul(prod43BF1,varAcc3BB4);
          real prod3C18#2 = RMul(coeff3BB5,prod53C17);
          real prod3C19#1 = RMul(coeff3BB5,prod3C18);
          real basisEval3C1A#1 = RMul(coeff3BB5,prod3C19);
          real prod3C1B#2 = RMul(iden3BBD,prod43BF1);
          real prod3C1C#1 = RMul(coeff3BB5,prod3C1B);
          real basisEval3C1D#1 = RMul(coeff3BB5,prod3C1C);
          real prod3C1E#2 = RMul(prod23BCB,prod33BD6);
          real prod3C1F#1 = RMul(coeff3BB5,prod3C1E);
          real basisEval3C20#1 = RMul(coeff3BB5,prod3C1F);
          real prod3C21#2 = RMul(prod33BE0,prod23BC4);
          real prod3C22#1 = RMul(coeff3BB5,prod3C21);
          real basisEval3C23#1 = RMul(coeff3BB5,prod3C22);
          real prod3C24#2 = RMul(prod43BFE,iden3BB9);
          real prod3C25#1 = RMul(coeff3BB5,prod3C24);
          real basisEval3C26#1 = RMul(coeff3BB5,prod3C25);
          real prod53C27#3 = RMul(prod43BFE,varAcc3BB3);
          real prod3C28#2 = RMul(prod53C27,coeff3BB5);
          real prod3C29#1 = RMul(coeff3BB5,prod3C28);
          real basisEval3C2A#1 = RMul(coeff3BB5,prod3C29);
          real prod3C2B#1 = RMul(iden3BC1,prod3BF2);
          real basisEval3C2C#1 = RMul(coeff3BB5,prod3C2B);
          real prod3C2D#1 = RMul(iden3BC1,prod3BF5);
          real basisEval3C2E#1 = RMul(coeff3BB5,prod3C2D);
          real prod3C2F#1 = RMul(iden3BC1,prod3BF8);
          real basisEval3C30#1 = RMul(coeff3BB5,prod3C2F);
          real prod3C31#1 = RMul(iden3BC1,prod3BFB);
          real basisEval3C32#1 = RMul(coeff3BB5,prod3C31);
          real prod3C33#1 = RMul(iden3BC1,prod3BFF);
          real basisEval3C34#1 = RMul(coeff3BB5,prod3C33);
          real prod3C35#1 = RMul(prod23BD3,prod3BD7);
          real basisEval3C36#1 = RMul(coeff3BB5,prod3C35);
          real prod3C37#1 = RMul(prod23BD3,prod3BDA);
          real basisEval3C38#1 = RMul(coeff3BB5,prod3C37);
          real prod3C39#1 = RMul(prod23BD3,prod3BDD);
          real basisEval3C3A#1 = RMul(coeff3BB5,prod3C39);
          real prod3C3B#1 = RMul(prod23BD3,prod3BE1);
          real basisEval3C3C#1 = RMul(coeff3BB5,prod3C3B);
          real prod3C3D#1 = RMul(prod33BEE,prod3BC5);
          real basisEval3C3E#1 = RMul(coeff3BB5,prod3C3D);
          real prod3C3F#1 = RMul(prod33BEE,prod3BC8);
          real basisEval3C40#1 = RMul(coeff3BB5,prod3C3F);
          real prod3C41#1 = RMul(prod33BEE,prod3BCC);
          real basisEval3C42#1 = RMul(coeff3BB5,prod3C41);
          real prod3C43#1 = RMul(prod43C14,prod3BBA);
          real basisEval3C44#1 = RMul(coeff3BB5,prod3C43);
          real prod3C45#1 = RMul(prod43C14,prod3BBE);
          real basisEval3C46#1 = RMul(coeff3BB5,prod3C45);
          real prod53C47#4 = RMul(prod43C14,varAcc3BB2);
          real prod3C48#1 = RMul(prod53C47,prod3BB6);
          real basisEval3C49#1 = RMul(coeff3BB5,prod3C48);
          real prod63C4A#1 = RMul(prod53C17,varAcc3BB4);
          real prod3C4B#1 = RMul(coeff3BB5,prod63C4A);
          real prod3C4C#1 = RMul(coeff3BB5,prod3C4B);
          real basisEval3C4D#1 = RMul(coeff3BB5,prod3C4C);
          real prod3C4E#1 = RMul(iden3BBD,prod53C17);
          real prod3C4F#1 = RMul(coeff3BB5,prod3C4E);
          real basisEval3C50#1 = RMul(coeff3BB5,prod3C4F);
          real prod3C51#1 = RMul(prod23BCB,prod43BF1);
          real prod3C52#1 = RMul(coeff3BB5,prod3C51);
          real basisEval3C53#1 = RMul(coeff3BB5,prod3C52);
          real prod3C54#1 = RMul(prod33BE0,prod33BD6);
          real prod3C55#1 = RMul(coeff3BB5,prod3C54);
          real basisEval3C56#1 = RMul(coeff3BB5,prod3C55);
          real prod3C57#1 = RMul(prod43BFE,prod23BC4);
          real prod3C58#1 = RMul(coeff3BB5,prod3C57);
          real basisEval3C59#1 = RMul(coeff3BB5,prod3C58);
          real prod3C5A#1 = RMul(prod53C27,iden3BB9);
          real prod3C5B#1 = RMul(coeff3BB5,prod3C5A);
          real basisEval3C5C#1 = RMul(coeff3BB5,prod3C5B);
          real prod63C5D#1 = RMul(prod53C27,varAcc3BB3);
          real prod3C5E#1 = RMul(prod63C5D,coeff3BB5);
          real prod3C5F#1 = RMul(coeff3BB5,prod3C5E);
          real basisEval3C60#1 = RMul(coeff3BB5,prod3C5F);
          real prod3C61#1 = RMul(iden3BC1,prod3C18);
          real basisEval3C62#1 = RMul(coeff3BB5,prod3C61);
          real prod3C63#1 = RMul(iden3BC1,prod3C1B);
          real basisEval3C64#1 = RMul(coeff3BB5,prod3C63);
          real prod3C65#1 = RMul(iden3BC1,prod3C1E);
          real basisEval3C66#1 = RMul(coeff3BB5,prod3C65);
          real prod3C67#1 = RMul(iden3BC1,prod3C21);
          real basisEval3C68#1 = RMul(coeff3BB5,prod3C67);
          real prod3C69#1 = RMul(iden3BC1,prod3C24);
          real basisEval3C6A#1 = RMul(coeff3BB5,prod3C69);
          real prod3C6B#1 = RMul(iden3BC1,prod3C28);
          real basisEval3C6C#1 = RMul(coeff3BB5,prod3C6B);
          real prod3C6D#1 = RMul(prod23BD3,prod3BF2);
          real basisEval3C6E#1 = RMul(coeff3BB5,prod3C6D);
          real prod3C6F#1 = RMul(prod23BD3,prod3BF5);
          real basisEval3C70#1 = RMul(coeff3BB5,prod3C6F);
          real prod3C71#1 = RMul(prod23BD3,prod3BF8);
          real basisEval3C72#1 = RMul(coeff3BB5,prod3C71);
          real prod3C73#1 = RMul(prod23BD3,prod3BFB);
          real basisEval3C74#1 = RMul(coeff3BB5,prod3C73);
          real prod3C75#1 = RMul(prod23BD3,prod3BFF);
          real basisEval3C76#1 = RMul(coeff3BB5,prod3C75);
          real prod3C77#1 = RMul(prod33BEE,prod3BD7);
          real basisEval3C78#1 = RMul(coeff3BB5,prod3C77);
          real prod3C79#1 = RMul(prod33BEE,prod3BDA);
          real basisEval3C7A#1 = RMul(coeff3BB5,prod3C79);
          real prod3C7B#1 = RMul(prod33BEE,prod3BDD);
          real basisEval3C7C#1 = RMul(coeff3BB5,prod3C7B);
          real prod3C7D#1 = RMul(prod33BEE,prod3BE1);
          real basisEval3C7E#1 = RMul(coeff3BB5,prod3C7D);
          real prod3C7F#1 = RMul(prod43C14,prod3BC5);
          real basisEval3C80#1 = RMul(coeff3BB5,prod3C7F);
          real prod3C81#1 = RMul(prod43C14,prod3BC8);
          real basisEval3C82#1 = RMul(coeff3BB5,prod3C81);
          real prod3C83#1 = RMul(prod43C14,prod3BCC);
          real basisEval3C84#1 = RMul(coeff3BB5,prod3C83);
          real prod3C85#1 = RMul(prod53C47,prod3BBA);
          real basisEval3C86#1 = RMul(coeff3BB5,prod3C85);
          real prod3C87#1 = RMul(prod53C47,prod3BBE);
          real basisEval3C88#1 = RMul(coeff3BB5,prod3C87);
          real prod63C89#1 = RMul(prod53C47,varAcc3BB2);
          real prod3C8A#1 = RMul(prod63C89,prod3BB6);
          real basisEval3C8B#1 = RMul(coeff3BB5,prod3C8A);
          tensor[84] intermediateCons3C8C#1 = <tensor[84]>[basisEval3BB8,basisEval3BBC,basisEval3BC0,basisEval3BC3,basisEval3BC7,basisEval3BCA,basisEval3BCE,basisEval3BD0,basisEval3BD2,basisEval3BD5,basisEval3BD9,basisEval3BDC,basisEval3BDF,basisEval3BE3,basisEval3BE5,basisEval3BE7,basisEval3BE9,basisEval3BEB,basisEval3BED,basisEval3BF0,basisEval3BF4,basisEval3BF7,basisEval3BFA,basisEval3BFD,basisEval3C01,basisEval3C03,basisEval3C05,basisEval3C07,basisEval3C09,basisEval3C0B,basisEval3C0D,basisEval3C0F,basisEval3C11,basisEval3C13,basisEval3C16,basisEval3C1A,basisEval3C1D,basisEval3C20,basisEval3C23,basisEval3C26,basisEval3C2A,basisEval3C2C,basisEval3C2E,basisEval3C30,basisEval3C32,basisEval3C34,basisEval3C36,basisEval3C38,basisEval3C3A,basisEval3C3C,basisEval3C3E,basisEval3C40,basisEval3C42,basisEval3C44,basisEval3C46,basisEval3C49,basisEval3C4D,basisEval3C50,basisEval3C53,basisEval3C56,basisEval3C59,basisEval3C5C,basisEval3C60,basisEval3C62,basisEval3C64,basisEval3C66,basisEval3C68,basisEval3C6A,basisEval3C6C,basisEval3C6E,basisEval3C70,basisEval3C72,basisEval3C74,basisEval3C76,basisEval3C78,basisEval3C7A,basisEval3C7C,basisEval3C7E,basisEval3C80,basisEval3C82,basisEval3C84,basisEval3C86,basisEval3C88,basisEval3C8B];
          tensor[84] basisResult3BB1#1 = intermediateCons3C8C;
          real probe_l_83D69#1 = VDot<84>(femDofs390D,basisResult3BB1);
          real op1_e3_l_93D6C#1 = RSub(probe_l_83D69,cmin36FF);
          real op1_e3_l_103D6F#1 = RSub(cmax3701,cmin36FF);
          real op1_e3_l_113D72#1 = RDiv(op1_e3_l_93D6C,op1_e3_l_103D6F);
          real op1_e3_l_123D75#1 = RSub(_t36A9,_t36A7);
          real op1_e3_l_133D78#1 = RMul(op1_e3_l_113D72,op1_e3_l_123D75);
          real _t3D7B#1 = RAdd(_t36A7,op1_e3_l_133D78);
          real Mtransform3D7E#1 = Transform<IMAGE1D<double[3]>>(cmap2469);
          real MxPos3D80#1 = RMul(Mtransform3D7E,_t3D7B);
          real Ttranslate3D83#1 = Translate<IMAGE1D<double[3]>>(cmap2469);
          real imgPos3D85#2 = RAdd(MxPos3D80,Ttranslate3D83);
          real nd3D88#2 = Floor<1>(imgPos3D85);
          real f3D8A#2 = RSub(imgPos3D85,nd3D88);
          int n3D8D#1 = RealToInt<1>(nd3D88);
          int idx3D8F#5 = n3D8D;
          bool isInside3D91#1 = IndexInside<IMAGE1D<double[3]>,2>(idx3D8F,cmap2469);
          if isInside3D91 then goto ASSIGN3DAB else goto ASSIGN3E86
        ASSIGN3DAB:  preds = [COND3D93]
          int ilit3D95#1 = 0;
          int addRes3D96#1 = IAdd(idx3D8F,ilit3D95);
          int stride3D97#2 = 3;
          int offp3D98#3 = IMul(stride3D97,addRes3D96);
          real v0_3D99#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D98);
          int ilit3D9A#3 = 1;
          int addRes3D9B#1 = IAdd(idx3D8F,ilit3D9A);
          int offp3D9C#3 = IMul(stride3D97,addRes3D9B);
          real v1_3D9D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9C);
          tensor[2] v_3D9E#1 = <tensor[2]>[v0_3D99,v1_3D9D];
          int offp3D9F#1 = IAdd(offp3D98,ilit3D9A);
          real v0_3DA0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9F);
          int offp3DA1#1 = IAdd(offp3D9C,ilit3D9A);
          real v1_3DA2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA1);
          tensor[2] v_3DA3#1 = <tensor[2]>[v0_3DA0,v1_3DA2];
          int offset3DA4#2 = 2;
          int offp3DA5#1 = IAdd(offp3D98,offset3DA4);
          real v0_3DA6#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA5);
          int offp3DA7#1 = IAdd(offp3D9C,offset3DA4);
          real v1_3DA8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA7);
          tensor[2] v_3DA9#1 = <tensor[2]>[v0_3DA6,v1_3DA8];
          tensor[3,2] voxels3DAA#1 = <tensor[3,2]>[v_3D9E,v_3DA3,v_3DA9];
          tensor[3,2] ldvox3D94#1 = voxels3DAA;
          goto JOIN3DC4
        JOIN3DC4:  preds = [ASSIGN3DC1,ASSIGN3E9E]
          tensor[3,2] ldvox3DC2#3 = phi(ldvox3D94,ldvox3DC3)
          real rlit3DC6#1 = 0.1e1;
          real idx3DC7#1 = RSub(f3D8A,rlit3DC6);
          tensor[2] kernX_3DC5#1 = <tensor[2]>[f3D8A,idx3DC7];
          real _f3DD0#1 = 0.1e1;
          real _f3DD1#1 = 0.1e1;
          tensor[2] a03DCC#1 = <tensor[2]>[_f3DD0,_f3DD1];
          real _f3DCE#1 = -0.1e1;
          real _f3DCF#1 = 0.1e1;
          tensor[2] a13DCD#1 = <tensor[2]>[_f3DCE,_f3DCF];
          tensor[2] prod13DD2#1 = VMul<2>(kernX_3DC5,a13DCD);
          tensor[2] kevalX_d0_3DCB#3 = VAdd<2>(a03DCC,prod13DD2);
          tensor[2] projIx3DDC#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC2);
          real vdot3DDD#1 = VDot<2>(projIx3DDC,kevalX_d0_3DCB);
          tensor[2] projIx3DDE#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC2);
          real vdot3DDF#1 = VDot<2>(projIx3DDE,kevalX_d0_3DCB);
          tensor[2] projIx3DE0#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC2);
          real vdot3DE1#1 = VDot<2>(projIx3DE0,kevalX_d0_3DCB);
          tensor[3] mcol3DDB#1 = <tensor[3]>[vdot3DDD,vdot3DDF,vdot3DE1];
          goto JOIN3DEB
        JOIN3DEB:  preds = [ASSIGN3DE9,COND3707]
          tensor[3] mcol3DEA#3 = phi(mcol3DDB,mcol3703)
          real realLit3DED#1 = 0.1e1;
          real op1_e3_l_213DEC#1 = RDiv(realLit3DED,op1_e3_l_836B0);
          tensor[3] op1_e3_l_223DF1#1 = VScale<3>(op1_e3_l_213DEC,step36A4);
          tensor[3] op1_e3_l_233DF4#1 = VNeg<3>(op1_e3_l_223DF1);
          real op1_e3_l_243DF7#2 = VDot<3>(op1_e3_l_233DF4,litwsp2493);
          real op1_e3_l_253DFA#1 = RMul(op1_e3_l_243DF7,op1_e3_l_243DF7);
          real op1_e3_l_263DFD#1 = RMul(phKd24A1,op1_e3_l_253DFA);
          real op1_e3_l_283E00#1 = RSub(rayN24AB,camNearVsp248F);
          real op1_e3_l_293E03#1 = RSub(camFarVsp2491,camNearVsp248F);
          real op1_e3_l_303E06#1 = RDiv(op1_e3_l_283E00,op1_e3_l_293E03);
          tensor[3] op1_e3_l_313E09#1 = VSub<3>(mcFar2487,mcNear2485);
          tensor[3] op1_e3_l_323E0C#1 = VScale<3>(op1_e3_l_303E06,op1_e3_l_313E09);
          real op1_e3_l_333E0F#3 = RAdd(phKa249F,op1_e3_l_263DFD);
          tensor[3] op1_e3_l_343E12#3 = VAdd<3>(mcNear2485,op1_e3_l_323E0C);
          real r3E16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E12);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(mcol3DEA);
          real r3E18#1 = RMul(op1_e3_l_333E0F,r3E16);
          real r3E19#1 = RMul(r3E18,r3E17);
          real r3E1A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E12);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(mcol3DEA);
          real r3E1C#1 = RMul(op1_e3_l_333E0F,r3E1A);
          real r3E1D#1 = RMul(r3E1C,r3E1B);
          real r3E1E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E12);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(mcol3DEA);
          real r3E20#1 = RMul(op1_e3_l_333E0F,r3E1E);
          real r3E21#1 = RMul(r3E20,r3E1F);
          tensor[3] op1_e3_l_353E15#1 = <tensor[3]>[r3E19,r3E1D,r3E21];
          real r3E31#1 = TensorIndex<tensor[3],[0]>(mcol3703);
          real r3E32#3 = RMul(phKs24A3,scomp36FD);
          real r3E33#1 = RMul(r3E32,r3E31);
          real r3E34#1 = TensorIndex<tensor[3],[1]>(mcol3703);
          real r3E35#1 = RMul(r3E32,r3E34);
          real r3E36#1 = TensorIndex<tensor[3],[2]>(mcol3703);
          real r3E37#1 = RMul(r3E32,r3E36);
          tensor[3] op1_e3_l_363E30#1 = <tensor[3]>[r3E33,r3E35,r3E37];
          real op1_e3_l_373E41#2 = RSub(_t36A9,_t36D4);
          tensor[3] op1_e3_l_383E44#3 = VAdd<3>(op1_e3_l_353E15,op1_e3_l_363E30);
          real r3E48#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E44);
          real r3E49#3 = RMul(transp24A9,op1_e3_l_373E41);
          real r3E4A#1 = RMul(r3E49,r3E48);
          real r3E4B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E44);
          real r3E4C#1 = RMul(r3E49,r3E4B);
          real r3E4D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E44);
          real r3E4E#1 = RMul(r3E49,r3E4D);
          tensor[3] op1_e3_l_393E47#1 = <tensor[3]>[r3E4A,r3E4C,r3E4E];
          tensor[3] rgb3E58#2 = VAdd<3>(rgb24A7,op1_e3_l_393E47);
          real op1_e3_l_53E5B#1 = RSub(_t36A9,op1_e3_l_373E41);
          real transp3E5E#2 = RMul(transp24A9,op1_e3_l_53E5B);
          bool _t3E61#1 = LT<real>(transp3E5E,transp02479);
          if _t3E61 then goto SAVE3E64 else goto JOIN3E69
        SAVE3E64:  preds = [COND3E63]
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = _t36A7;
          stabilize
          goto JOIN3E69
        JOIN3E69:  preds = [*STABILIZE3E67,COND3E63]
          real transp3E68#1 = phi(transp3E5E)
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = transp3E68;
          active
        ASSIGN3E86:  preds = [COND3D93]
          int ilit3E6E#1 = 0;
          int addRes3E6F#1 = IAdd(idx3D8F,ilit3E6E);
          int ix3E70#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,addRes3E6F);
          int stride3E71#2 = 3;
          int offp3E72#3 = IMul(stride3E71,ix3E70);
          real v0_3E73#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E72);
          int ilit3E74#3 = 1;
          int addRes3E75#1 = IAdd(idx3D8F,ilit3E74);
          int ix3E76#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,addRes3E75);
          int offp3E77#3 = IMul(stride3E71,ix3E76);
          real v1_3E78#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E77);
          tensor[2] v_3E79#1 = <tensor[2]>[v0_3E73,v1_3E78];
          int offp3E7A#1 = IAdd(offp3E72,ilit3E74);
          real v0_3E7B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7A);
          int offp3E7C#1 = IAdd(offp3E77,ilit3E74);
          real v1_3E7D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7C);
          tensor[2] v_3E7E#1 = <tensor[2]>[v0_3E7B,v1_3E7D];
          int offset3E7F#2 = 2;
          int offp3E80#1 = IAdd(offp3E72,offset3E7F);
          real v0_3E81#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E80);
          int offp3E82#1 = IAdd(offp3E77,offset3E7F);
          real v1_3E83#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E82);
          tensor[2] v_3E84#1 = <tensor[2]>[v0_3E81,v1_3E83];
          tensor[3,2] voxels3E85#1 = <tensor[3,2]>[v_3E79,v_3E7E,v_3E84];
          tensor[3,2] ldvox3DC3#1 = voxels3E85;
          goto JOIN3DC4
        ASSIGN3EA0:  preds = [COND2D6D]
          real _t3E9F#1 = -0.1e1;
          real _t3EA1#1 = -0.2e1;
          real _t3EA3#1 = -0.3e1;
          tensor[3] _t3EA5#3 = <tensor[3]>[_t3E9F,_t3EA1,_t3EA3];
          real _t3EA7#1 = -0.1e1;
          real _t3EA9#6 = 0.e0;
          tensor[3] _t3EAB#1 = <tensor[3]>[_t3EA7,_t3EA9,_t3EA9];
          real _t3EAD#1 = -0.2e1;
          tensor[3] _t3EAF#1 = <tensor[3]>[_t3EA9,_t3EAD,_t3EA9];
          real _t3EB1#1 = -0.3e1;
          tensor[3] _t3EB3#1 = <tensor[3]>[_t3EA9,_t3EA9,_t3EB1];
          tensor[3,3] _t3EB5#9 = <tensor[3,3]>[_t3EAB,_t3EAF,_t3EB3];
          real r3EB8#3 = TensorIndex<tensor[3,3],[0,0]>(rot248D);
          real r3EB9#3 = TensorIndex<tensor[3,3],[0,0]>(_t3EB5);
          real r3EBA#1 = RMul(r3EB8,r3EB9);
          real r3EBB#3 = TensorIndex<tensor[3,3],[1,0]>(rot248D);
          real r3EBC#3 = TensorIndex<tensor[3,3],[1,0]>(_t3EB5);
          real r3EBD#1 = RMul(r3EBB,r3EBC);
          real r3EBE#3 = TensorIndex<tensor[3,3],[2,0]>(rot248D);
          real r3EBF#3 = TensorIndex<tensor[3,3],[2,0]>(_t3EB5);
          real r3EC0#1 = RMul(r3EBE,r3EBF);
          real r3EC1#1 = RAdd(r3EBA,r3EBD);
          real r3EC2#1 = RAdd(r3EC1,r3EC0);
          real r3EC3#3 = TensorIndex<tensor[3,3],[0,1]>(_t3EB5);
          real r3EC4#1 = RMul(r3EB8,r3EC3);
          real r3EC5#3 = TensorIndex<tensor[3,3],[1,1]>(_t3EB5);
          real r3EC6#1 = RMul(r3EBB,r3EC5);
          real r3EC7#3 = TensorIndex<tensor[3,3],[2,1]>(_t3EB5);
          real r3EC8#1 = RMul(r3EBE,r3EC7);
          real r3EC9#1 = RAdd(r3EC4,r3EC6);
          real r3ECA#1 = RAdd(r3EC9,r3EC8);
          real r3ECB#3 = TensorIndex<tensor[3,3],[0,2]>(_t3EB5);
          real r3ECC#1 = RMul(r3EB8,r3ECB);
          real r3ECD#3 = TensorIndex<tensor[3,3],[1,2]>(_t3EB5);
          real r3ECE#1 = RMul(r3EBB,r3ECD);
          real r3ECF#3 = TensorIndex<tensor[3,3],[2,2]>(_t3EB5);
          real r3ED0#1 = RMul(r3EBE,r3ECF);
          real r3ED1#1 = RAdd(r3ECC,r3ECE);
          real r3ED2#1 = RAdd(r3ED1,r3ED0);
          tensor[3] tensor3ED3#1 = <tensor[3]>[r3EC2,r3ECA,r3ED2];
          real r3ED4#3 = TensorIndex<tensor[3,3],[0,1]>(rot248D);
          real r3ED5#1 = RMul(r3ED4,r3EB9);
          real r3ED6#3 = TensorIndex<tensor[3,3],[1,1]>(rot248D);
          real r3ED7#1 = RMul(r3ED6,r3EBC);
          real r3ED8#3 = TensorIndex<tensor[3,3],[2,1]>(rot248D);
          real r3ED9#1 = RMul(r3ED8,r3EBF);
          real r3EDA#1 = RAdd(r3ED5,r3ED7);
          real r3EDB#1 = RAdd(r3EDA,r3ED9);
          real r3EDC#1 = RMul(r3ED4,r3EC3);
          real r3EDD#1 = RMul(r3ED6,r3EC5);
          real r3EDE#1 = RMul(r3ED8,r3EC7);
          real r3EDF#1 = RAdd(r3EDC,r3EDD);
          real r3EE0#1 = RAdd(r3EDF,r3EDE);
          real r3EE1#1 = RMul(r3ED4,r3ECB);
          real r3EE2#1 = RMul(r3ED6,r3ECD);
          real r3EE3#1 = RMul(r3ED8,r3ECF);
          real r3EE4#1 = RAdd(r3EE1,r3EE2);
          real r3EE5#1 = RAdd(r3EE4,r3EE3);
          tensor[3] tensor3EE6#1 = <tensor[3]>[r3EDB,r3EE0,r3EE5];
          real r3EE7#3 = TensorIndex<tensor[3,3],[0,2]>(rot248D);
          real r3EE8#1 = RMul(r3EE7,r3EB9);
          real r3EE9#3 = TensorIndex<tensor[3,3],[1,2]>(rot248D);
          real r3EEA#1 = RMul(r3EE9,r3EBC);
          real r3EEB#3 = TensorIndex<tensor[3,3],[2,2]>(rot248D);
          real r3EEC#1 = RMul(r3EEB,r3EBF);
          real r3EED#1 = RAdd(r3EE8,r3EEA);
          real r3EEE#1 = RAdd(r3EED,r3EEC);
          real r3EEF#1 = RMul(r3EE7,r3EC3);
          real r3EF0#1 = RMul(r3EE9,r3EC5);
          real r3EF1#1 = RMul(r3EEB,r3EC7);
          real r3EF2#1 = RAdd(r3EEF,r3EF0);
          real r3EF3#1 = RAdd(r3EF2,r3EF1);
          real r3EF4#1 = RMul(r3EE7,r3ECB);
          real r3EF5#1 = RMul(r3EE9,r3ECD);
          real r3EF6#1 = RMul(r3EEB,r3ECF);
          real r3EF7#1 = RAdd(r3EF4,r3EF5);
          real r3EF8#1 = RAdd(r3EF7,r3EF6);
          tensor[3] tensor3EF9#1 = <tensor[3]>[r3EEE,r3EF3,r3EF8];
          tensor[3,3] op1_e3_l_33EB7#9 = <tensor[3,3]>[tensor3ED3,tensor3EE6,tensor3EF9];
          real r3F3F#3 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_33EB7);
          real r3F40#3 = TensorIndex<tensor[3,3],[0,0]>(rot248D);
          real r3F41#1 = RMul(r3F3F,r3F40);
          real r3F42#3 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_33EB7);
          real r3F43#3 = TensorIndex<tensor[3,3],[1,0]>(rot248D);
          real r3F44#1 = RMul(r3F42,r3F43);
          real r3F45#3 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_33EB7);
          real r3F46#3 = TensorIndex<tensor[3,3],[2,0]>(rot248D);
          real r3F47#1 = RMul(r3F45,r3F46);
          real r3F48#1 = RAdd(r3F41,r3F44);
          real r3F49#1 = RAdd(r3F48,r3F47);
          real r3F4A#3 = TensorIndex<tensor[3,3],[0,1]>(rot248D);
          real r3F4B#1 = RMul(r3F3F,r3F4A);
          real r3F4C#3 = TensorIndex<tensor[3,3],[1,1]>(rot248D);
          real r3F4D#1 = RMul(r3F42,r3F4C);
          real r3F4E#3 = TensorIndex<tensor[3,3],[2,1]>(rot248D);
          real r3F4F#1 = RMul(r3F45,r3F4E);
          real r3F50#1 = RAdd(r3F4B,r3F4D);
          real r3F51#1 = RAdd(r3F50,r3F4F);
          real r3F52#3 = TensorIndex<tensor[3,3],[0,2]>(rot248D);
          real r3F53#1 = RMul(r3F3F,r3F52);
          real r3F54#3 = TensorIndex<tensor[3,3],[1,2]>(rot248D);
          real r3F55#1 = RMul(r3F42,r3F54);
          real r3F56#3 = TensorIndex<tensor[3,3],[2,2]>(rot248D);
          real r3F57#1 = RMul(r3F45,r3F56);
          real r3F58#1 = RAdd(r3F53,r3F55);
          real r3F59#1 = RAdd(r3F58,r3F57);
          tensor[3] tensor3F5A#1 = <tensor[3]>[r3F49,r3F51,r3F59];
          real r3F5B#3 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_33EB7);
          real r3F5C#1 = RMul(r3F5B,r3F40);
          real r3F5D#3 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_33EB7);
          real r3F5E#1 = RMul(r3F5D,r3F43);
          real r3F5F#3 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_33EB7);
          real r3F60#1 = RMul(r3F5F,r3F46);
          real r3F61#1 = RAdd(r3F5C,r3F5E);
          real r3F62#1 = RAdd(r3F61,r3F60);
          real r3F63#1 = RMul(r3F5B,r3F4A);
          real r3F64#1 = RMul(r3F5D,r3F4C);
          real r3F65#1 = RMul(r3F5F,r3F4E);
          real r3F66#1 = RAdd(r3F63,r3F64);
          real r3F67#1 = RAdd(r3F66,r3F65);
          real r3F68#1 = RMul(r3F5B,r3F52);
          real r3F69#1 = RMul(r3F5D,r3F54);
          real r3F6A#1 = RMul(r3F5F,r3F56);
          real r3F6B#1 = RAdd(r3F68,r3F69);
          real r3F6C#1 = RAdd(r3F6B,r3F6A);
          tensor[3] tensor3F6D#1 = <tensor[3]>[r3F62,r3F67,r3F6C];
          real r3F6E#3 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_33EB7);
          real r3F6F#1 = RMul(r3F6E,r3F40);
          real r3F70#3 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_33EB7);
          real r3F71#1 = RMul(r3F70,r3F43);
          real r3F72#3 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_33EB7);
          real r3F73#1 = RMul(r3F72,r3F46);
          real r3F74#1 = RAdd(r3F6F,r3F71);
          real r3F75#1 = RAdd(r3F74,r3F73);
          real r3F76#1 = RMul(r3F6E,r3F4A);
          real r3F77#1 = RMul(r3F70,r3F4C);
          real r3F78#1 = RMul(r3F72,r3F4E);
          real r3F79#1 = RAdd(r3F76,r3F77);
          real r3F7A#1 = RAdd(r3F79,r3F78);
          real r3F7B#1 = RMul(r3F6E,r3F52);
          real r3F7C#1 = RMul(r3F70,r3F54);
          real r3F7D#1 = RMul(r3F72,r3F56);
          real r3F7E#1 = RAdd(r3F7B,r3F7C);
          real r3F7F#1 = RAdd(r3F7E,r3F7D);
          tensor[3] tensor3F80#1 = <tensor[3]>[r3F75,r3F7A,r3F7F];
          tensor[3,3] H3F3E#1 = <tensor[3,3]>[tensor3F5A,tensor3F6D,tensor3F80];
          (real[3] evals3FC5#2,tensor[3][3] E3FC6#2) = EigenVecs3x3(H3F3E);
          int _t3FC8#2 = 2;
          tensor[3] _t3FCA#6 = Subscript<tensor[3][3]>(E3FC6,_t3FC8);
          real _t3FCC#9 = Subscript<real[3]>(evals3FC5,_t3FC8);
          int _t3FCE#2 = 1;
          tensor[3] _t3FD0#6 = Subscript<tensor[3][3]>(E3FC6,_t3FCE);
          real _t3FD2#9 = Subscript<real[3]>(evals3FC5,_t3FCE);
          real r3FD5#1 = TensorIndex<tensor[3],[0]>(_t3FCA);
          tensor[3] binopV3FD6#1 = VScale<3>(r3FD5,_t3FCA);
          real r3FD7#1 = TensorIndex<tensor[3],[1]>(_t3FCA);
          tensor[3] binopV3FD8#1 = VScale<3>(r3FD7,_t3FCA);
          real r3FD9#1 = TensorIndex<tensor[3],[2]>(_t3FCA);
          tensor[3] binopV3FDA#1 = VScale<3>(r3FD9,_t3FCA);
          tensor[3,3] op1_e3_l_133FD4#9 = <tensor[3,3]>[binopV3FD6,binopV3FD8,binopV3FDA];
          real r3FE4#1 = TensorIndex<tensor[3],[0]>(_t3FD0);
          tensor[3] binopV3FE5#1 = VScale<3>(r3FE4,_t3FD0);
          real r3FE6#1 = TensorIndex<tensor[3],[1]>(_t3FD0);
          tensor[3] binopV3FE7#1 = VScale<3>(r3FE6,_t3FD0);
          real r3FE8#1 = TensorIndex<tensor[3],[2]>(_t3FD0);
          tensor[3] binopV3FE9#1 = VScale<3>(r3FE8,_t3FD0);
          tensor[3,3] op1_e3_l_143FE3#9 = <tensor[3,3]>[binopV3FE5,binopV3FE7,binopV3FE9];
          real r3FF3#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_133FD4);
          real r3FF4#1 = RDiv(r3FF3,_t3FCC);
          real r3FF5#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_133FD4);
          real r3FF6#1 = RDiv(r3FF5,_t3FCC);
          real r3FF7#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_133FD4);
          real r3FF8#1 = RDiv(r3FF7,_t3FCC);
          tensor[3] tensor3FF9#1 = <tensor[3]>[r3FF4,r3FF6,r3FF8];
          real r3FFA#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_133FD4);
          real r3FFB#1 = RDiv(r3FFA,_t3FCC);
          real r3FFC#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_133FD4);
          real r3FFD#1 = RDiv(r3FFC,_t3FCC);
          real r3FFE#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_133FD4);
          real r3FFF#1 = RDiv(r3FFE,_t3FCC);
          tensor[3] tensor4000#1 = <tensor[3]>[r3FFB,r3FFD,r3FFF];
          real r4001#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_133FD4);
          real r4002#1 = RDiv(r4001,_t3FCC);
          real r4003#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_133FD4);
          real r4004#1 = RDiv(r4003,_t3FCC);
          real r4005#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_133FD4);
          real r4006#1 = RDiv(r4005,_t3FCC);
          tensor[3] tensor4007#1 = <tensor[3]>[r4002,r4004,r4006];
          tensor[3,3] op1_e3_l_153FF2#3 = <tensor[3,3]>[tensor3FF9,tensor4000,tensor4007];
          real r4020#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_143FE3);
          real r4021#1 = RDiv(r4020,_t3FD2);
          real r4022#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_143FE3);
          real r4023#1 = RDiv(r4022,_t3FD2);
          real r4024#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_143FE3);
          real r4025#1 = RDiv(r4024,_t3FD2);
          tensor[3] tensor4026#1 = <tensor[3]>[r4021,r4023,r4025];
          real r4027#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_143FE3);
          real r4028#1 = RDiv(r4027,_t3FD2);
          real r4029#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_143FE3);
          real r402A#1 = RDiv(r4029,_t3FD2);
          real r402B#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_143FE3);
          real r402C#1 = RDiv(r402B,_t3FD2);
          tensor[3] tensor402D#1 = <tensor[3]>[r4028,r402A,r402C];
          real r402E#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_143FE3);
          real r402F#1 = RDiv(r402E,_t3FD2);
          real r4030#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_143FE3);
          real r4031#1 = RDiv(r4030,_t3FD2);
          real r4032#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_143FE3);
          real r4033#1 = RDiv(r4032,_t3FD2);
          tensor[3] tensor4034#1 = <tensor[3]>[r402F,r4031,r4033];
          tensor[3,3] op1_e3_l_16401F#3 = <tensor[3,3]>[tensor4026,tensor402D,tensor4034];
          tensor[3] projParam404D#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_153FF2);
          tensor[3] projParam404E#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_16401F);
          tensor[3] v404F#1 = VAdd<3>(projParam404D,projParam404E);
          tensor[3] projParam4050#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_153FF2);
          tensor[3] projParam4051#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_16401F);
          tensor[3] v4052#1 = VAdd<3>(projParam4050,projParam4051);
          tensor[3] projParam4053#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_153FF2);
          tensor[3] projParam4054#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_16401F);
          tensor[3] v4055#1 = VAdd<3>(projParam4053,projParam4054);
          tensor[3,3] op1_e3_l_17404C#3 = <tensor[3,3]>[v404F,v4052,v4055];
          tensor[3] projParam4062#1 = ProjectLast<tensor[3,3],[0]>(rot248D);
          real vdot4063#1 = VDot<3>(projParam4062,pos24B7);
          tensor[3] projParam4064#1 = ProjectLast<tensor[3,3],[1]>(rot248D);
          real vdot4065#1 = VDot<3>(projParam4064,pos24B7);
          tensor[3] projParam4066#1 = ProjectLast<tensor[3,3],[2]>(rot248D);
          real vdot4067#1 = VDot<3>(projParam4066,pos24B7);
          tensor[3] op1_e3_l_214061#3 = <tensor[3]>[vdot4063,vdot4065,vdot4067];
          tensor[3] projParam4071#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_17404C);
          tensor[3] negV4072#1 = VNeg<3>(projParam4071);
          tensor[3] projParam4073#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_17404C);
          tensor[3] negV4074#1 = VNeg<3>(projParam4073);
          tensor[3] projParam4075#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_17404C);
          tensor[3] negV4076#1 = VNeg<3>(projParam4075);
          tensor[3,3] op1_e3_l_224070#3 = <tensor[3,3]>[negV4072,negV4074,negV4076];
          real r4080#1 = TensorIndex<tensor[3,3],[0,0]>(rot248D);
          real r4081#3 = TensorIndex<tensor[3],[0]>(_t3EA5);
          real r4082#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_214061);
          real r4083#1 = RMul(r4080,r4081);
          real r4084#1 = RMul(r4083,r4082);
          real r4085#1 = TensorIndex<tensor[3,3],[1,0]>(rot248D);
          real r4086#3 = TensorIndex<tensor[3],[1]>(_t3EA5);
          real r4087#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_214061);
          real r4088#1 = RMul(r4085,r4086);
          real r4089#1 = RMul(r4088,r4087);
          real r408A#1 = TensorIndex<tensor[3,3],[2,0]>(rot248D);
          real r408B#3 = TensorIndex<tensor[3],[2]>(_t3EA5);
          real r408C#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_214061);
          real r408D#1 = RMul(r408A,r408B);
          real r408E#1 = RMul(r408D,r408C);
          real r408F#1 = RAdd(r4084,r4089);
          real r4090#1 = RAdd(r408F,r408E);
          real r4091#1 = TensorIndex<tensor[3,3],[0,1]>(rot248D);
          real r4092#1 = RMul(r4091,r4081);
          real r4093#1 = RMul(r4092,r4082);
          real r4094#1 = TensorIndex<tensor[3,3],[1,1]>(rot248D);
          real r4095#1 = RMul(r4094,r4086);
          real r4096#1 = RMul(r4095,r4087);
          real r4097#1 = TensorIndex<tensor[3,3],[2,1]>(rot248D);
          real r4098#1 = RMul(r4097,r408B);
          real r4099#1 = RMul(r4098,r408C);
          real r409A#1 = RAdd(r4093,r4096);
          real r409B#1 = RAdd(r409A,r4099);
          real r409C#1 = TensorIndex<tensor[3,3],[0,2]>(rot248D);
          real r409D#1 = RMul(r409C,r4081);
          real r409E#1 = RMul(r409D,r4082);
          real r409F#1 = TensorIndex<tensor[3,3],[1,2]>(rot248D);
          real r40A0#1 = RMul(r409F,r4086);
          real r40A1#1 = RMul(r40A0,r4087);
          real r40A2#1 = TensorIndex<tensor[3,3],[2,2]>(rot248D);
          real r40A3#1 = RMul(r40A2,r408B);
          real r40A4#1 = RMul(r40A3,r408C);
          real r40A5#1 = RAdd(r409E,r40A1);
          real r40A6#1 = RAdd(r40A5,r40A4);
          tensor[3] op1_e3_l_23407F#3 = <tensor[3]>[r4090,r409B,r40A6];
          tensor[3] projParam40D0#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_224070);
          real vdot40D1#1 = VDot<3>(projParam40D0,op1_e3_l_23407F);
          tensor[3] projParam40D2#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_224070);
          real vdot40D3#1 = VDot<3>(projParam40D2,op1_e3_l_23407F);
          tensor[3] projParam40D4#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_224070);
          real vdot40D5#1 = VDot<3>(projParam40D4,op1_e3_l_23407F);
          tensor[3] _t36A5#1 = <tensor[3]>[vdot40D1,vdot40D3,vdot40D5];
          goto JOIN36A6
        ASSIGN40DE:  preds = [COND2D59]
          bool _t2D5D#1 = false;
          goto JOIN2D5E
        ASSIGN40DF:  preds = [COND2D54]
          bool _t2D60#1 = false;
          goto JOIN2D61
        ASSIGN40E0:  preds = [COND24C0]
          bool _t2D63#1 = false;
          goto JOIN2D64
    end update
    method stabilize
        ENTRY40E1:  preds = []
          tensor[4] rgba40E2#1 = self.rgba;
          tensor[3] rgb40E4#3 = self.rgb;
          real transp40E6#2 = self.transp;
          real _t40E8#2 = 0.1e1;
          bool _t40EA#1 = LT<real>(transp40E6,_t40E8);
          if _t40EA then goto ASSIGN40EF else goto JOIN4102
        ASSIGN40EF:  preds = [COND40EC]
          real aa40ED#4 = RSub(_t40E8,transp40E6);
          real _t40F0#1 = VIndex<3,0>(rgb40E4);
          real _t40F2#1 = RDiv(_t40F0,aa40ED);
          real _t40F5#1 = VIndex<3,1>(rgb40E4);
          real _t40F7#1 = RDiv(_t40F5,aa40ED);
          real _t40FA#1 = VIndex<3,2>(rgb40E4);
          real _t40FC#1 = RDiv(_t40FA,aa40ED);
          tensor[4] rgba40FF#1 = <tensor[4]>[_t40F2,_t40F7,_t40FC,aa40ED];
          goto JOIN4102
        JOIN4102:  preds = [ASSIGN4100,COND40EC]
          tensor[4] rgba4101#1 = phi(rgba40FF,rgba40E2)
          self.rgba = rgba4101;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY4105:  preds = []
      int iresU4106#1 = globals.iresU217E;
      int iresV4108#1 = globals.iresV217F;
      int _t410A#2 = 0;
      int _t410C#2 = 1;
      int _t410E#1 = ISub(iresV4108,_t410C);
      int[] _t4110#1 = Range(_t410A,_t410E);
    FOREACH4113:  preds = [ASSIGN4111,NEXT411C]
      foreach (vi4112 in _t4110) on exit goto RETURN411D
      int _t4114#1 = ISub(iresU4106,_t410C);
      int[] _t4116#1 = Range(_t410A,_t4114);
    FOREACH4119:  preds = [ASSIGN4117,NEXT411B]
      foreach (ui4118 in _t4116) on exit goto NEXT411C
      new ray(ui4118,vi4112);
      goto FOREACH4119
    NEXT411C:  preds = [FOREACH4119]
      goto FOREACH4113
    RETURN411D:  preds = [FOREACH4113]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2172 (block) = <no-default>
  input 0space0509_intermedateGlobal2173 (space) = <no-default>
  input 0U050B_intermedateGlobal2174 (U) = <no-default>
  input cellChoice2175 (cellChoice) = <no-default>
  input cmap2176 (cmap) = image("cmap.nrrd")
  input camEye2177 (camEye) = <default>
  input camAt2178 (camAt) = <default>
  input camUp2179 (camUp) = <default>
  input camNear217A (camNear) = <default>
  input camFar217B (camFar) = <default>
  input camFOV217C (camFOV) = <default>
  input camOrtho217D (camOrtho) = <default>
  input iresU217E (iresU) = <default>
  input iresV217F (iresV) = <default>
  input rayStep2180 (rayStep) = <default>
  input refStep2181 (refStep) = <default>
  input transp02182 (transp0) = <default>
  input thick2183 (thick) = <default>
  input fStrTh2184 (fStrTh) = <default>
  input fMaskTh2185 (fMaskTh) = <default>
  input fBias2186 (fBias) = <default>
  input maxAlpha2187 (maxAlpha) = <default>
  input light2188 (light) = <default>
  input phong2189 (phong) = <default>
  input mcNear218A (mcNear) = <default>
  input mcFar218B (mcFar) = <default>
  input litdir218C (litdir) = <default>
  input cminmax218D (cminmax) = <default>
  input analytical218E (analytical) = <default>
  input umm218F (umm) = image("data.nrrd")
  input rot2190 (rot) = <default>
  global tensor[3] camN2191
  global tensor[3] camU2192
  global tensor[3] camV2193
  global real camDist2194
  global real camVmax2195
  global real camUmax2196
  global real camNearVsp2197
  global real camFarVsp2198
  global tensor[3] litwsp2199
  global int _t219A
  global femData:Space _tX219B
  global femData:FemFunc _tXX219C
## functions
## input initialization
  ENTRY219F:  preds = []
    real _t21A0#17 = 0.e0;
    real _t21A2#1 = -0.2e1;
    tensor[3] camEye21A4#1 = <tensor[3]>[_t21A0,_t21A2,_t21A0];
    globals.camEye2177 = camEye21A4;
    tensor[3] camAt21A7#1 = <tensor[3]>[_t21A0,_t21A0,_t21A0];
    globals.camAt2178 = camAt21A7;
    real _t21AA#7 = 0.1e1;
    tensor[3] camUp21AC#2 = <tensor[3]>[_t21A0,_t21A0,_t21AA];
    globals.camUp2179 = camUp21AC;
    real camNear21AF#1 = -0.4e1;
    globals.camNear217A = camNear21AF;
    real camFar21B2#1 = 0.4e1;
    globals.camFar217B = camFar21B2;
    real camFOV21B5#1 = 0.1e2;
    globals.camFOV217C = camFOV21B5;
    bool camOrtho21B8#2 = false;
    globals.camOrtho217D = camOrtho21B8;
    int iresU21BB#2 = 100;
    globals.iresU217E = iresU21BB;
    globals.iresV217F = iresU21BB;
    real rayStep21BF#2 = 0.1e-3;
    globals.rayStep2180 = rayStep21BF;
    globals.refStep2181 = rayStep21BF;
    real transp021C3#1 = 0.5e-2;
    globals.transp02182 = transp021C3;
    real thick21C6#1 = 0.1e-1;
    globals.thick2183 = thick21C6;
    globals.fStrTh2184 = _t21A0;
    globals.fMaskTh2185 = _t21A0;
    real fBias21CB#2 = 0.1e0;
    globals.fBias2186 = fBias21CB;
    globals.maxAlpha2187 = _t21AA;
    globals.light2188 = camOrtho21B8;
    real _t21D0#1 = 0.7e0;
    real _t21D2#1 = 0.2e0;
    real _t21D4#1 = 0.1e3;
    tensor[4] phong21D6#1 = <tensor[4]>[fBias21CB,_t21D0,_t21D2,_t21D4];
    globals.phong2189 = phong21D6;
    tensor[3] mcNear21D9#2 = <tensor[3]>[_t21AA,_t21AA,_t21AA];
    globals.mcNear218A = mcNear21D9;
    globals.mcFar218B = mcNear21D9;
    real _t21DD#1 = -0.1e1;
    tensor[3] litdir21DF#1 = <tensor[3]>[_t21A0,_t21DD,_t21A0];
    globals.litdir218C = litdir21DF;
    tensor[2] cminmax21E2#1 = <tensor[2]>[_t21A0,_t21A0];
    globals.cminmax218D = cminmax21E2;
    bool analytical21E5#1 = true;
    globals.analytical218E = analytical21E5;
    tensor[3] _t21E8#1 = <tensor[3]>[_t21AA,_t21A0,_t21A0];
    tensor[3] _t21EA#1 = <tensor[3]>[_t21A0,_t21AA,_t21A0];
    tensor[3,3] rot21EC#1 = <tensor[3,3]>[_t21E8,_t21EA,camUp21AC];
    globals.rot2190 = rot21EC;
    return
## global-variable initialization
  ENTRY21F0:  preds = []
    femData:Mesh block21F1#3 = globals.block2172;
    femData:Space 0space0509_intermedateGlobal21F3#1 = globals.0space0509_intermedateGlobal2173;
    femData:FemFunc 0U050B_intermedateGlobal21F5#1 = globals.0U050B_intermedateGlobal2174;
    int cellChoice21F7#1 = globals.cellChoice2175;
    tensor[3] camEye21FB#1 = globals.camEye2177;
    tensor[3] camAt21FD#1 = globals.camAt2178;
    tensor[3] camUp21FF#3 = globals.camUp2179;
    real camNear2201#1 = globals.camNear217A;
    real camFar2203#1 = globals.camFar217B;
    real camFOV2205#1 = globals.camFOV217C;
    int iresU2207#1 = globals.iresU217E;
    int iresV2209#1 = globals.iresV217F;
    tensor[3] litdir220B#5 = globals.litdir218C;
    int _t220D#1 = 0;
    int _t220F#1 = 1;
    int _t2211#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F1);
    int _t2213#1 = ISub(_t2211,_t220F);
    int[] _t2215#1 = Range(_t220D,_t2213);
    femData:MeshCell[] _t2217#1 = <femData:MeshCell[]>{};
  FOREACH221A:  preds = [ASSIGN2218,NEXT2220]
    foreach (_t2219 in _t2215) on exit goto ASSIGN2222
      femData:MeshCell[] _t221E#2 = phi(_t2217,_t221D)
    femData:MeshCell _t221B#1 = LoadFem<femData:MeshCell>(block21F1,_t2219);
    femData:MeshCell[] _t221D#1 = Append<femData:MeshCell>(_t221E,_t221B);
    goto FOREACH221A
  ASSIGN2222:  preds = [FOREACH221A]
    femData:Space space2221#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F3,block21F1);
    femData:FemFunc U2223#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F5,space2221);
    femData:MeshCell c12225#1 = Subscript<femData:MeshCell[]>(_t221E,cellChoice21F7);
    int _t2227#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12225);
    femData:FuncCell _t2229#2 = LoadFem<femData:FuncCell>(U2223,_t2227);
    femData:FemFunc _t222B#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2229);
    femData:Space _t222D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222B);
    int _t222F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2229);
    tensor[3] op1_e3_l_42235#9 = VSub<3>(camAt21FD,camEye21FB);
    real op1_e3_l_62238#1 = VDot<3>(op1_e3_l_42235,op1_e3_l_42235);
    real op1_e3_l_7223B#6 = Sqrt(op1_e3_l_62238);
    real realLit223F#1 = 0.1e1;
    real op1_e3_l_9223E#6 = RDiv(realLit223F,op1_e3_l_7223B);
    tensor[3] camN2243#4 = VScale<3>(op1_e3_l_9223E,op1_e3_l_42235);
    globals.camN2191 = camN2243;
    real realLit2248#3 = 0.e0;
    real r2249#3 = TensorIndex<tensor[3],[0]>(camUp21FF);
    real r224A#3 = RMul(realLit2248,r2249);
    real r224B#3 = TensorIndex<tensor[3],[1]>(camUp21FF);
    real r224C#3 = RMul(realLit2248,r224B);
    real r224D#3 = TensorIndex<tensor[3],[2]>(camUp21FF);
    real r224E#5 = RMul(realLit2248,r224D);
    real r224F#3 = RAdd(r224A,r224C);
    real r2250#3 = RAdd(r224F,r224E);
    real realLit2251#3 = 0.1e1;
    real r2252#1 = RMul(realLit2251,r224D);
    real r2253#1 = RAdd(r224F,r2252);
    real realLit2254#3 = -0.1e1;
    real r2255#1 = RMul(realLit2254,r224B);
    real r2256#1 = RAdd(r224A,r2255);
    real r2257#1 = RAdd(r2256,r224E);
    tensor[3] tensor2258#1 = <tensor[3]>[r2250,r2253,r2257];
    real r2259#1 = RMul(realLit2254,r224D);
    real r225A#1 = RAdd(r224F,r2259);
    real r225B#1 = RMul(realLit2251,r2249);
    real r225C#1 = RAdd(r225B,r224C);
    real r225D#1 = RAdd(r225C,r224E);
    tensor[3] tensor225E#1 = <tensor[3]>[r225A,r2250,r225D];
    real r225F#1 = RMul(realLit2251,r224B);
    real r2260#1 = RAdd(r224A,r225F);
    real r2261#1 = RAdd(r2260,r224E);
    real r2262#1 = RMul(realLit2254,r2249);
    real r2263#1 = RAdd(r2262,r224C);
    real r2264#1 = RAdd(r2263,r224E);
    tensor[3] tensor2265#1 = <tensor[3]>[r2261,r2264,r2250];
    tensor[3] projParam2287#1 = tensor2258;
    real vdot2288#2 = VDot<3>(op1_e3_l_42235,projParam2287);
    tensor[3] projParam2289#1 = tensor225E;
    real vdot228A#2 = VDot<3>(op1_e3_l_42235,projParam2289);
    tensor[3] projParam228B#1 = tensor2265;
    real vdot228C#2 = VDot<3>(op1_e3_l_42235,projParam228B);
    tensor[3] op1_e3_l_172286#3 = <tensor[3]>[vdot2288,vdot228A,vdot228C];
    real op1_e3_l_342295#1 = VDot<3>(op1_e3_l_172286,op1_e3_l_172286);
    real r2299#1 = RMul(op1_e3_l_9223E,op1_e3_l_9223E);
    real op1_e3_l_352298#1 = RMul(r2299,op1_e3_l_342295);
    real op1_e3_l_36229D#1 = Sqrt(op1_e3_l_352298);
    tensor[3] op1_e3_l_3722A0#1 = VScale<3>(op1_e3_l_9223E,op1_e3_l_172286);
    real realLit22A4#1 = 0.1e1;
    real op1_e3_l_3822A3#2 = RDiv(realLit22A4,op1_e3_l_36229D);
    tensor[3] camU22A8#4 = VScale<3>(op1_e3_l_3822A3,op1_e3_l_3722A0);
    globals.camU2192 = camU22A8;
    real realLit22AD#3 = 0.e0;
    real r22AE#3 = vdot2288;
    real r22AF#3 = RMul(realLit22AD,r22AE);
    real r22B0#3 = vdot228A;
    real r22B1#3 = RMul(realLit22AD,r22B0);
    real r22B2#3 = vdot228C;
    real r22B3#5 = RMul(realLit22AD,r22B2);
    real r22B4#3 = RAdd(r22AF,r22B1);
    real r22B5#3 = RAdd(r22B4,r22B3);
    real realLit22B6#3 = 0.1e1;
    real r22B7#1 = RMul(realLit22B6,r22B2);
    real r22B8#1 = RAdd(r22B4,r22B7);
    real realLit22B9#3 = -0.1e1;
    real r22BA#1 = RMul(realLit22B9,r22B0);
    real r22BB#1 = RAdd(r22AF,r22BA);
    real r22BC#1 = RAdd(r22BB,r22B3);
    tensor[3] tensor22BD#1 = <tensor[3]>[r22B5,r22B8,r22BC];
    real r22BE#1 = RMul(realLit22B9,r22B2);
    real r22BF#1 = RAdd(r22B4,r22BE);
    real r22C0#1 = RMul(realLit22B6,r22AE);
    real r22C1#1 = RAdd(r22C0,r22B1);
    real r22C2#1 = RAdd(r22C1,r22B3);
    tensor[3] tensor22C3#1 = <tensor[3]>[r22BF,r22B5,r22C2];
    real r22C4#1 = RMul(realLit22B6,r22B0);
    real r22C5#1 = RAdd(r22AF,r22C4);
    real r22C6#1 = RAdd(r22C5,r22B3);
    real r22C7#1 = RMul(realLit22B9,r22AE);
    real r22C8#1 = RAdd(r22C7,r22B1);
    real r22C9#1 = RAdd(r22C8,r22B3);
    tensor[3] tensor22CA#1 = <tensor[3]>[r22C6,r22C9,r22B5];
    tensor[3] projParam22EC#1 = tensor22BD;
    real vdot22ED#1 = VDot<3>(op1_e3_l_42235,projParam22EC);
    tensor[3] projParam22EE#1 = tensor22C3;
    real vdot22EF#1 = VDot<3>(op1_e3_l_42235,projParam22EE);
    tensor[3] projParam22F0#1 = tensor22CA;
    real vdot22F1#1 = VDot<3>(op1_e3_l_42235,projParam22F0);
    tensor[3] op1_e3_l_4722EB#1 = <tensor[3]>[vdot22ED,vdot22EF,vdot22F1];
    tensor[3] op1_e3_l_5022FA#3 = VScale<3>(op1_e3_l_9223E,op1_e3_l_4722EB);
    real r22FE#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FA);
    real r22FF#3 = RMul(op1_e3_l_9223E,op1_e3_l_3822A3);
    real r2300#2 = RMul(r22FF,r22FE);
    real r2301#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FA);
    real r2302#2 = RMul(r22FF,r2301);
    real r2303#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FA);
    real r2304#2 = RMul(r22FF,r2303);
    tensor[3] camV22FD#1 = <tensor[3]>[r2300,r2302,r2304];
    globals.camV2193 = camV22FD;
    globals.camDist2194 = op1_e3_l_7223B;
    real _t2310#1 = 0.314159265358979323846264338327950288e1;
    real _t2312#1 = 0.36e3;
    real op1_e3_l_52314#1 = RMul(camFOV2205,_t2310);
    real op1_e3_l_62317#1 = RDiv(op1_e3_l_52314,_t2312);
    real op1_e3_l_10231A#2 = Tan(op1_e3_l_62317);
    real camVmax231D#1 = RMul(op1_e3_l_10231A,op1_e3_l_7223B);
    globals.camVmax2195 = camVmax231D;
    real _t2321#1 = IntToReal(iresU2207);
    real _t2323#1 = IntToReal(iresV2209);
    real r2326#1 = RMul(_t2321,op1_e3_l_10231A);
    real op1_e3_l_142325#1 = RMul(r2326,op1_e3_l_7223B);
    real camUmax232A#1 = RDiv(op1_e3_l_142325,_t2323);
    globals.camUmax2196 = camUmax232A;
    real camNearVsp232E#1 = RAdd(camNear2201,op1_e3_l_7223B);
    globals.camNearVsp2197 = camNearVsp232E;
    real camFarVsp2332#1 = RAdd(camFar2203,op1_e3_l_7223B);
    globals.camFarVsp2198 = camFarVsp2332;
    real op1_e3_l_32338#1 = VDot<3>(litdir220B,litdir220B);
    real op1_e3_l_4233B#1 = Sqrt(op1_e3_l_32338);
    real realLit233F#1 = 0.1e1;
    real op1_e3_l_5233E#1 = RDiv(realLit233F,op1_e3_l_4233B);
    real r2344#1 = VIndex<3,0>(camU22A8);
    real r2345#3 = TensorIndex<tensor[3],[0]>(litdir220B);
    real r2346#1 = RMul(r2344,r2345);
    real r2347#1 = r2300;
    real r2348#3 = TensorIndex<tensor[3],[1]>(litdir220B);
    real r2349#1 = RMul(r2347,r2348);
    real r234A#1 = VIndex<3,0>(camN2243);
    real r234B#3 = TensorIndex<tensor[3],[2]>(litdir220B);
    real r234C#1 = RMul(r234A,r234B);
    real r234D#1 = RAdd(r2346,r2349);
    real r234E#1 = RAdd(r234D,r234C);
    real r234F#1 = VIndex<3,1>(camU22A8);
    real r2350#1 = RMul(r234F,r2345);
    real r2351#1 = r2302;
    real r2352#1 = RMul(r2351,r2348);
    real r2353#1 = VIndex<3,1>(camN2243);
    real r2354#1 = RMul(r2353,r234B);
    real r2355#1 = RAdd(r2350,r2352);
    real r2356#1 = RAdd(r2355,r2354);
    real r2357#1 = VIndex<3,2>(camU22A8);
    real r2358#1 = RMul(r2357,r2345);
    real r2359#1 = r2304;
    real r235A#1 = RMul(r2359,r2348);
    real r235B#1 = VIndex<3,2>(camN2243);
    real r235C#1 = RMul(r235B,r234B);
    real r235D#1 = RAdd(r2358,r235A);
    real r235E#1 = RAdd(r235D,r235C);
    tensor[3] op1_e3_l_62343#1 = <tensor[3]>[r234E,r2356,r235E];
    tensor[3] litwsp237C#1 = VScale<3>(op1_e3_l_5233E,op1_e3_l_62343);
    globals.litwsp2199 = litwsp237C;
    globals._t219A = _t222F;
    globals._tX219B = _t222D;
    globals._tXX219C = _t222B;
    return
## strand
  strand ray (int ui2386#1, int vi2387#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2398:  preds = []
        tensor[3] camEye2399#1 = globals.camEye2177;
        bool camOrtho239B#2 = globals.camOrtho217D;
        int iresU239D#1 = globals.iresU217E;
        int iresV239F#1 = globals.iresV217F;
        real rayStep23A1#1 = globals.rayStep2180;
        real refStep23A3#1 = globals.refStep2181;
        tensor[4] phong23A5#4 = globals.phong2189;
        tensor[3] camN23A7#1 = globals.camN2191;
        tensor[3] camU23A9#1 = globals.camU2192;
        tensor[3] camV23AB#1 = globals.camV2193;
        real camDist23AD#1 = globals.camDist2194;
        real camVmax23AF#2 = globals.camVmax2195;
        real camUmax23B1#2 = globals.camUmax2196;
        real camNearVsp23B3#1 = globals.camNearVsp2197;
        real _t23B5#5 = -0.5e0;
        real _t23B7#1 = IntToReal(ui2386);
        real _t23B9#1 = IntToReal(iresU239D);
        real _t23BB#3 = 0.5e0;
        real op1_e3_l_623BD#1 = RSub(_t23B9,_t23BB);
        real op1_e3_l_723C0#1 = RSub(_t23B7,_t23B5);
        real op1_e3_l_823C3#1 = RSub(op1_e3_l_623BD,_t23B5);
        real op1_e3_l_923C6#2 = RNeg(camUmax23B1);
        real op1_e3_l_1023C9#1 = RDiv(op1_e3_l_723C0,op1_e3_l_823C3);
        real op1_e3_l_1123CC#1 = RSub(camUmax23B1,op1_e3_l_923C6);
        real op1_e3_l_1323CF#1 = RMul(op1_e3_l_1023C9,op1_e3_l_1123CC);
        real rayU23D2#2 = RAdd(op1_e3_l_923C6,op1_e3_l_1323CF);
        real _t23D5#1 = IntToReal(vi2387);
        real _t23D7#2 = IntToReal(iresV239F);
        real op1_e3_l_623D9#1 = RSub(_t23D7,_t23BB);
        real op1_e3_l_723DC#2 = RSub(_t23D5,_t23B5);
        real op1_e3_l_823DF#1 = RSub(op1_e3_l_623D9,_t23B5);
        real op1_e3_l_923E2#3 = RNeg(camVmax23AF);
        real op1_e3_l_1023E5#1 = RDiv(op1_e3_l_723DC,op1_e3_l_823DF);
        real op1_e3_l_1123E8#2 = RSub(camVmax23AF,op1_e3_l_923E2);
        real op1_e3_l_1323EB#1 = RMul(op1_e3_l_1023E5,op1_e3_l_1123E8);
        real rayV23EE#1 = RAdd(op1_e3_l_923E2,op1_e3_l_1323EB);
        real op1_e3_l_2323F1#1 = RSub(_t23D7,_t23BB);
        real op1_e3_l_2523F4#1 = RSub(op1_e3_l_2323F1,_t23B5);
        real op1_e3_l_2723F7#1 = RDiv(op1_e3_l_723DC,op1_e3_l_2523F4);
        real op1_e3_l_3023FA#1 = RMul(op1_e3_l_2723F7,op1_e3_l_1123E8);
        real op1_e3_l_3123FD#1 = RAdd(op1_e3_l_923E2,op1_e3_l_3023FA);
        tensor[3] op1_e3_l_322400#1 = VScale<3>(rayU23D2,camU23A9);
        tensor[3] op1_e3_l_332403#1 = VScale<3>(op1_e3_l_3123FD,camV23AB);
        tensor[3] UV2406#5 = VAdd<3>(op1_e3_l_322400,op1_e3_l_332403);
        if camOrtho239B then goto JOIN240C else goto ASSIGN2466
      JOIN240C:  preds = [COND2409,ASSIGN2467]
        tensor[3] _t240A#1 = phi(UV2406,_t240B)
        tensor[3] rayOrig240D#1 = VAdd<3>(camEye2399,_t240A);
        if camOrtho239B then goto ASSIGN2412 else goto ASSIGN245C
      ASSIGN2412:  preds = [COND2410]
        real _t2411#3 = 0.e0;
        tensor[3] _t2413#1 = <tensor[3]>[_t2411,_t2411,_t2411];
        goto JOIN2417
      JOIN2417:  preds = [ASSIGN2414,ASSIGN2464]
        tensor[3] _t2415#1 = phi(_t2413,_t2416)
        tensor[3] rayVec2418#4 = VAdd<3>(camN23A7,_t2415);
        real op1_e3_l_6241B#1 = VDot<3>(rayVec2418,rayVec2418);
        real op1_e3_l_7241E#2 = Sqrt(op1_e3_l_6241B);
        real op1_e3_l_82421#1 = RMul(rayStep23A1,op1_e3_l_7241E);
        real alphaFix2424#1 = RDiv(op1_e3_l_82421,refStep23A3);
        real realLit2428#1 = 0.1e1;
        real op1_e3_l_92427#1 = RDiv(realLit2428,op1_e3_l_7241E);
        tensor[3] op1_e3_l_10242C#1 = VScale<3>(op1_e3_l_92427,rayVec2418);
        tensor[3] eyeDir242F#1 = VNeg<3>(op1_e3_l_10242C);
        real phKa2432#1 = VIndex<4,0>(phong23A5);
        real phKd2434#1 = VIndex<4,1>(phong23A5);
        real phKs2436#1 = VIndex<4,2>(phong23A5);
        real phSp2438#1 = VIndex<4,3>(phong23A5);
        real _t243A#8 = 0.e0;
        tensor[4] rgba243C#1 = <tensor[4]>[_t243A,_t243A,_t243A,_t243A];
        tensor[3] rgb243E#1 = <tensor[3]>[_t243A,_t243A,_t243A];
        real transp2440#1 = 0.1e1;
        self.rayU = rayU23D2;
        self.rayV = rayV23EE;
        self.rayN = camNearVsp23B3;
        self.UV = UV2406;
        self.rayOrig = rayOrig240D;
        self.rayVec = rayVec2418;
        self.alphaFix = alphaFix2424;
        self.eyeDir = eyeDir242F;
        self.phKa = phKa2432;
        self.phKd = phKd2434;
        self.phKs = phKs2436;
        self.phSp = phSp2438;
        self.rgba = rgba243C;
        self.raw = _t243A;
        self.rgb = rgb243E;
        self.transp = transp2440;
        return
      ASSIGN245C:  preds = [COND2410]
        real realLit2453#1 = 0.1e1;
        real r2454#3 = RDiv(realLit2453,camDist23AD);
        real r2455#1 = TensorIndex<tensor[3],[0]>(UV2406);
        real r2456#1 = RMul(r2454,r2455);
        real r2457#1 = TensorIndex<tensor[3],[1]>(UV2406);
        real r2458#1 = RMul(r2454,r2457);
        real r2459#1 = TensorIndex<tensor[3],[2]>(UV2406);
        real r245A#1 = RMul(r2454,r2459);
        tensor[3] _t2416#1 = <tensor[3]>[r2456,r2458,r245A];
        goto JOIN2417
      ASSIGN2466:  preds = [COND2409]
        real _t2465#3 = 0.e0;
        tensor[3] _t240B#1 = <tensor[3]>[_t2465,_t2465,_t2465];
        goto JOIN240C
    end state init
    method update
        ENTRY2468:  preds = []
          image(IMAGE1D<double[3]>) cmap2469#17 = globals.cmap2176;
          int _t246B#3 = globals._t219A;
          femData:Space _t246D#252 = globals._tX219B;
          femData:FemFunc _t246F#252 = globals._tXX219C;
          femData:Mesh block2475#1 = globals.block2172;
          real rayStep2477#1 = globals.rayStep2180;
          real transp02479#1 = globals.transp02182;
          real thick247B#1 = globals.thick2183;
          real fStrTh247D#1 = globals.fStrTh2184;
          real fMaskTh247F#1 = globals.fMaskTh2185;
          real fBias2481#1 = globals.fBias2186;
          real maxAlpha2483#2 = globals.maxAlpha2187;
          tensor[3] mcNear2485#2 = globals.mcNear218A;
          tensor[3] mcFar2487#1 = globals.mcFar218B;
          tensor[2] cminmax2489#2 = globals.cminmax218D;
          bool analytical248B#1 = globals.analytical218E;
          tensor[3,3] rot248D#30 = globals.rot2190;
          real camNearVsp248F#2 = globals.camNearVsp2197;
          real camFarVsp2491#2 = globals.camFarVsp2198;
          tensor[3] litwsp2493#2 = globals.litwsp2199;
          real rayN2495#1 = self.rayN;
          tensor[3] rayOrig2497#2 = self.rayOrig;
          tensor[3] rayVec2499#1 = self.rayVec;
          real alphaFix249B#1 = self.alphaFix;
          tensor[3] eyeDir249D#1 = self.eyeDir;
          real phKa249F#1 = self.phKa;
          real phKd24A1#1 = self.phKd;
          real phKs24A3#2 = self.phKs;
          real phSp24A5#1 = self.phSp;
          tensor[3] rgb24A7#1 = self.rgb;
          real transp24A9#2 = self.transp;
          real rayN24AB#8 = RAdd(rayN2495,rayStep2477);
          bool _t24AE#1 = GT<real>(rayN24AB,camFarVsp2491);
          if _t24AE then goto SAVE24B1 else goto JOIN24B3
        SAVE24B1:  preds = [COND24B0]
          self.rayN = rayN24AB;
          stabilize
          goto JOIN24B3
        JOIN24B3:  preds = [*STABILIZE24B2,COND24B0]
          tensor[3] op1_e3_l_524B4#2 = VScale<3>(rayN24AB,rayVec2499);
          tensor[3] pos24B7#16 = VAdd<3>(rayOrig2497,op1_e3_l_524B4);
          femData:RefCell _t24BA#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2475);
          real _t24BC#1 = 0.1e-8;
          bool _t24BE#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BA,pos24B7,_t24BC);
          if _t24BE then goto ASSIGN25C1 else goto ASSIGN40E0
        ASSIGN25C1:  preds = [COND24C0]
          int ilit24C2#1 = 84;
          int mulRes24C3#84 = IMul(_t246B,ilit24C2);
          int addRes24C5#1 = mulRes24C3;
          int idx24C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24C5);
          int ilit24C7#1 = 1;
          int addRes24C8#1 = IAdd(mulRes24C3,ilit24C7);
          int idx24C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24C8);
          int ilit24CA#1 = 2;
          int addRes24CB#1 = IAdd(mulRes24C3,ilit24CA);
          int idx24CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CB);
          int ilit24CD#1 = 3;
          int addRes24CE#1 = IAdd(mulRes24C3,ilit24CD);
          int idx24CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CE);
          int ilit24D0#1 = 4;
          int addRes24D1#1 = IAdd(mulRes24C3,ilit24D0);
          int idx24D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D1);
          int ilit24D3#1 = 5;
          int addRes24D4#1 = IAdd(mulRes24C3,ilit24D3);
          int idx24D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D4);
          int ilit24D6#1 = 6;
          int addRes24D7#1 = IAdd(mulRes24C3,ilit24D6);
          int idx24D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D7);
          int ilit24D9#1 = 7;
          int addRes24DA#1 = IAdd(mulRes24C3,ilit24D9);
          int idx24DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DA);
          int ilit24DC#1 = 8;
          int addRes24DD#1 = IAdd(mulRes24C3,ilit24DC);
          int idx24DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DD);
          int ilit24DF#1 = 9;
          int addRes24E0#1 = IAdd(mulRes24C3,ilit24DF);
          int idx24E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E0);
          int ilit24E2#1 = 10;
          int addRes24E3#1 = IAdd(mulRes24C3,ilit24E2);
          int idx24E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E3);
          int ilit24E5#1 = 11;
          int addRes24E6#1 = IAdd(mulRes24C3,ilit24E5);
          int idx24E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E6);
          int ilit24E8#1 = 12;
          int addRes24E9#1 = IAdd(mulRes24C3,ilit24E8);
          int idx24EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E9);
          int ilit24EB#1 = 13;
          int addRes24EC#1 = IAdd(mulRes24C3,ilit24EB);
          int idx24ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EC);
          int ilit24EE#1 = 14;
          int addRes24EF#1 = IAdd(mulRes24C3,ilit24EE);
          int idx24F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EF);
          int ilit24F1#1 = 15;
          int addRes24F2#1 = IAdd(mulRes24C3,ilit24F1);
          int idx24F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F2);
          int ilit24F4#1 = 16;
          int addRes24F5#1 = IAdd(mulRes24C3,ilit24F4);
          int idx24F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F5);
          int ilit24F7#1 = 17;
          int addRes24F8#1 = IAdd(mulRes24C3,ilit24F7);
          int idx24F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F8);
          int ilit24FA#1 = 18;
          int addRes24FB#1 = IAdd(mulRes24C3,ilit24FA);
          int idx24FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FB);
          int ilit24FD#1 = 19;
          int addRes24FE#1 = IAdd(mulRes24C3,ilit24FD);
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FE);
          int ilit2500#1 = 20;
          int addRes2501#1 = IAdd(mulRes24C3,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2501);
          int ilit2503#1 = 21;
          int addRes2504#1 = IAdd(mulRes24C3,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2504);
          int ilit2506#1 = 22;
          int addRes2507#1 = IAdd(mulRes24C3,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2507);
          int ilit2509#1 = 23;
          int addRes250A#1 = IAdd(mulRes24C3,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250A);
          int ilit250C#1 = 24;
          int addRes250D#1 = IAdd(mulRes24C3,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250D);
          int ilit250F#1 = 25;
          int addRes2510#1 = IAdd(mulRes24C3,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2510);
          int ilit2512#1 = 26;
          int addRes2513#1 = IAdd(mulRes24C3,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2513);
          int ilit2515#1 = 27;
          int addRes2516#1 = IAdd(mulRes24C3,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2516);
          int ilit2518#1 = 28;
          int addRes2519#1 = IAdd(mulRes24C3,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2519);
          int ilit251B#1 = 29;
          int addRes251C#1 = IAdd(mulRes24C3,ilit251B);
          int idx251D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251C);
          int ilit251E#1 = 30;
          int addRes251F#1 = IAdd(mulRes24C3,ilit251E);
          int idx2520#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251F);
          int ilit2521#1 = 31;
          int addRes2522#1 = IAdd(mulRes24C3,ilit2521);
          int idx2523#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2522);
          int ilit2524#1 = 32;
          int addRes2525#1 = IAdd(mulRes24C3,ilit2524);
          int idx2526#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2525);
          int ilit2527#1 = 33;
          int addRes2528#1 = IAdd(mulRes24C3,ilit2527);
          int idx2529#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2528);
          int ilit252A#1 = 34;
          int addRes252B#1 = IAdd(mulRes24C3,ilit252A);
          int idx252C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252B);
          int ilit252D#1 = 35;
          int addRes252E#1 = IAdd(mulRes24C3,ilit252D);
          int idx252F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252E);
          int ilit2530#1 = 36;
          int addRes2531#1 = IAdd(mulRes24C3,ilit2530);
          int idx2532#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2531);
          int ilit2533#1 = 37;
          int addRes2534#1 = IAdd(mulRes24C3,ilit2533);
          int idx2535#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2534);
          int ilit2536#1 = 38;
          int addRes2537#1 = IAdd(mulRes24C3,ilit2536);
          int idx2538#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2537);
          int ilit2539#1 = 39;
          int addRes253A#1 = IAdd(mulRes24C3,ilit2539);
          int idx253B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253A);
          int ilit253C#1 = 40;
          int addRes253D#1 = IAdd(mulRes24C3,ilit253C);
          int idx253E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253D);
          int ilit253F#1 = 41;
          int addRes2540#1 = IAdd(mulRes24C3,ilit253F);
          int idx2541#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2540);
          int ilit2542#1 = 42;
          int addRes2543#1 = IAdd(mulRes24C3,ilit2542);
          int idx2544#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2543);
          int ilit2545#1 = 43;
          int addRes2546#1 = IAdd(mulRes24C3,ilit2545);
          int idx2547#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2546);
          int ilit2548#1 = 44;
          int addRes2549#1 = IAdd(mulRes24C3,ilit2548);
          int idx254A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2549);
          int ilit254B#1 = 45;
          int addRes254C#1 = IAdd(mulRes24C3,ilit254B);
          int idx254D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254C);
          int ilit254E#1 = 46;
          int addRes254F#1 = IAdd(mulRes24C3,ilit254E);
          int idx2550#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254F);
          int ilit2551#1 = 47;
          int addRes2552#1 = IAdd(mulRes24C3,ilit2551);
          int idx2553#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2552);
          int ilit2554#1 = 48;
          int addRes2555#1 = IAdd(mulRes24C3,ilit2554);
          int idx2556#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2555);
          int ilit2557#1 = 49;
          int addRes2558#1 = IAdd(mulRes24C3,ilit2557);
          int idx2559#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2558);
          int ilit255A#1 = 50;
          int addRes255B#1 = IAdd(mulRes24C3,ilit255A);
          int idx255C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255B);
          int ilit255D#1 = 51;
          int addRes255E#1 = IAdd(mulRes24C3,ilit255D);
          int idx255F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255E);
          int ilit2560#1 = 52;
          int addRes2561#1 = IAdd(mulRes24C3,ilit2560);
          int idx2562#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2561);
          int ilit2563#1 = 53;
          int addRes2564#1 = IAdd(mulRes24C3,ilit2563);
          int idx2565#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2564);
          int ilit2566#1 = 54;
          int addRes2567#1 = IAdd(mulRes24C3,ilit2566);
          int idx2568#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2567);
          int ilit2569#1 = 55;
          int addRes256A#1 = IAdd(mulRes24C3,ilit2569);
          int idx256B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256A);
          int ilit256C#1 = 56;
          int addRes256D#1 = IAdd(mulRes24C3,ilit256C);
          int idx256E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256D);
          int ilit256F#1 = 57;
          int addRes2570#1 = IAdd(mulRes24C3,ilit256F);
          int idx2571#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2570);
          int ilit2572#1 = 58;
          int addRes2573#1 = IAdd(mulRes24C3,ilit2572);
          int idx2574#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2573);
          int ilit2575#1 = 59;
          int addRes2576#1 = IAdd(mulRes24C3,ilit2575);
          int idx2577#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2576);
          int ilit2578#1 = 60;
          int addRes2579#1 = IAdd(mulRes24C3,ilit2578);
          int idx257A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2579);
          int ilit257B#1 = 61;
          int addRes257C#1 = IAdd(mulRes24C3,ilit257B);
          int idx257D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257C);
          int ilit257E#1 = 62;
          int addRes257F#1 = IAdd(mulRes24C3,ilit257E);
          int idx2580#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257F);
          int ilit2581#1 = 63;
          int addRes2582#1 = IAdd(mulRes24C3,ilit2581);
          int idx2583#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2582);
          int ilit2584#1 = 64;
          int addRes2585#1 = IAdd(mulRes24C3,ilit2584);
          int idx2586#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2585);
          int ilit2587#1 = 65;
          int addRes2588#1 = IAdd(mulRes24C3,ilit2587);
          int idx2589#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2588);
          int ilit258A#1 = 66;
          int addRes258B#1 = IAdd(mulRes24C3,ilit258A);
          int idx258C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258B);
          int ilit258D#1 = 67;
          int addRes258E#1 = IAdd(mulRes24C3,ilit258D);
          int idx258F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258E);
          int ilit2590#1 = 68;
          int addRes2591#1 = IAdd(mulRes24C3,ilit2590);
          int idx2592#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2591);
          int ilit2593#1 = 69;
          int addRes2594#1 = IAdd(mulRes24C3,ilit2593);
          int idx2595#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2594);
          int ilit2596#1 = 70;
          int addRes2597#1 = IAdd(mulRes24C3,ilit2596);
          int idx2598#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2597);
          int ilit2599#1 = 71;
          int addRes259A#1 = IAdd(mulRes24C3,ilit2599);
          int idx259B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259A);
          int ilit259C#1 = 72;
          int addRes259D#1 = IAdd(mulRes24C3,ilit259C);
          int idx259E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259D);
          int ilit259F#1 = 73;
          int addRes25A0#1 = IAdd(mulRes24C3,ilit259F);
          int idx25A1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A0);
          int ilit25A2#1 = 74;
          int addRes25A3#1 = IAdd(mulRes24C3,ilit25A2);
          int idx25A4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A3);
          int ilit25A5#1 = 75;
          int addRes25A6#1 = IAdd(mulRes24C3,ilit25A5);
          int idx25A7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A6);
          int ilit25A8#1 = 76;
          int addRes25A9#1 = IAdd(mulRes24C3,ilit25A8);
          int idx25AA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A9);
          int ilit25AB#1 = 77;
          int addRes25AC#1 = IAdd(mulRes24C3,ilit25AB);
          int idx25AD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AC);
          int ilit25AE#1 = 78;
          int addRes25AF#1 = IAdd(mulRes24C3,ilit25AE);
          int idx25B0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AF);
          int ilit25B1#1 = 79;
          int addRes25B2#1 = IAdd(mulRes24C3,ilit25B1);
          int idx25B3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B2);
          int ilit25B4#1 = 80;
          int addRes25B5#1 = IAdd(mulRes24C3,ilit25B4);
          int idx25B6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B5);
          int ilit25B7#1 = 81;
          int addRes25B8#1 = IAdd(mulRes24C3,ilit25B7);
          int idx25B9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B8);
          int ilit25BA#1 = 82;
          int addRes25BB#1 = IAdd(mulRes24C3,ilit25BA);
          int idx25BC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BB);
          int ilit25BD#1 = 83;
          int addRes25BE#1 = IAdd(mulRes24C3,ilit25BD);
          int idx25BF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BE);
          int ilit26C2#84 = 1;
          int idx26C4#1 = idx24C6;
          int mulRes26C5#1 = IMul(ilit26C2,idx26C4);
          int idx26C6#1 = idx24C9;
          int mulRes26C7#1 = IMul(ilit26C2,idx26C6);
          int idx26C9#1 = idx24CC;
          int mulRes26CA#1 = IMul(ilit26C2,idx26C9);
          int idx26CC#1 = idx24CF;
          int mulRes26CD#1 = IMul(ilit26C2,idx26CC);
          int idx26CF#1 = idx24D2;
          int mulRes26D0#1 = IMul(ilit26C2,idx26CF);
          int idx26D2#1 = idx24D5;
          int mulRes26D3#1 = IMul(ilit26C2,idx26D2);
          int idx26D5#1 = idx24D8;
          int mulRes26D6#1 = IMul(ilit26C2,idx26D5);
          int idx26D8#1 = idx24DB;
          int mulRes26D9#1 = IMul(ilit26C2,idx26D8);
          int idx26DB#1 = idx24DE;
          int mulRes26DC#1 = IMul(ilit26C2,idx26DB);
          int idx26DE#1 = idx24E1;
          int mulRes26DF#1 = IMul(ilit26C2,idx26DE);
          int idx26E1#1 = idx24E4;
          int mulRes26E2#1 = IMul(ilit26C2,idx26E1);
          int idx26E4#1 = idx24E7;
          int mulRes26E5#1 = IMul(ilit26C2,idx26E4);
          int idx26E7#1 = idx24EA;
          int mulRes26E8#1 = IMul(ilit26C2,idx26E7);
          int idx26EA#1 = idx24ED;
          int mulRes26EB#1 = IMul(ilit26C2,idx26EA);
          int idx26ED#1 = idx24F0;
          int mulRes26EE#1 = IMul(ilit26C2,idx26ED);
          int idx26F0#1 = idx24F3;
          int mulRes26F1#1 = IMul(ilit26C2,idx26F0);
          int idx26F3#1 = idx24F6;
          int mulRes26F4#1 = IMul(ilit26C2,idx26F3);
          int idx26F6#1 = idx24F9;
          int mulRes26F7#1 = IMul(ilit26C2,idx26F6);
          int idx26F9#1 = idx24FC;
          int mulRes26FA#1 = IMul(ilit26C2,idx26F9);
          int idx26FC#1 = idx24FF;
          int mulRes26FD#1 = IMul(ilit26C2,idx26FC);
          int idx26FF#1 = idx2502;
          int mulRes2700#1 = IMul(ilit26C2,idx26FF);
          int idx2702#1 = idx2505;
          int mulRes2703#1 = IMul(ilit26C2,idx2702);
          int idx2705#1 = idx2508;
          int mulRes2706#1 = IMul(ilit26C2,idx2705);
          int idx2708#1 = idx250B;
          int mulRes2709#1 = IMul(ilit26C2,idx2708);
          int idx270B#1 = idx250E;
          int mulRes270C#1 = IMul(ilit26C2,idx270B);
          int idx270E#1 = idx2511;
          int mulRes270F#1 = IMul(ilit26C2,idx270E);
          int idx2711#1 = idx2514;
          int mulRes2712#1 = IMul(ilit26C2,idx2711);
          int idx2714#1 = idx2517;
          int mulRes2715#1 = IMul(ilit26C2,idx2714);
          int idx2717#1 = idx251A;
          int mulRes2718#1 = IMul(ilit26C2,idx2717);
          int idx271A#1 = idx251D;
          int mulRes271B#1 = IMul(ilit26C2,idx271A);
          int idx271D#1 = idx2520;
          int mulRes271E#1 = IMul(ilit26C2,idx271D);
          int idx2720#1 = idx2523;
          int mulRes2721#1 = IMul(ilit26C2,idx2720);
          int idx2723#1 = idx2526;
          int mulRes2724#1 = IMul(ilit26C2,idx2723);
          int idx2726#1 = idx2529;
          int mulRes2727#1 = IMul(ilit26C2,idx2726);
          int idx2729#1 = idx252C;
          int mulRes272A#1 = IMul(ilit26C2,idx2729);
          int idx272C#1 = idx252F;
          int mulRes272D#1 = IMul(ilit26C2,idx272C);
          int idx272F#1 = idx2532;
          int mulRes2730#1 = IMul(ilit26C2,idx272F);
          int idx2732#1 = idx2535;
          int mulRes2733#1 = IMul(ilit26C2,idx2732);
          int idx2735#1 = idx2538;
          int mulRes2736#1 = IMul(ilit26C2,idx2735);
          int idx2738#1 = idx253B;
          int mulRes2739#1 = IMul(ilit26C2,idx2738);
          int idx273B#1 = idx253E;
          int mulRes273C#1 = IMul(ilit26C2,idx273B);
          int idx273E#1 = idx2541;
          int mulRes273F#1 = IMul(ilit26C2,idx273E);
          int idx2741#1 = idx2544;
          int mulRes2742#1 = IMul(ilit26C2,idx2741);
          int idx2744#1 = idx2547;
          int mulRes2745#1 = IMul(ilit26C2,idx2744);
          int idx2747#1 = idx254A;
          int mulRes2748#1 = IMul(ilit26C2,idx2747);
          int idx274A#1 = idx254D;
          int mulRes274B#1 = IMul(ilit26C2,idx274A);
          int idx274D#1 = idx2550;
          int mulRes274E#1 = IMul(ilit26C2,idx274D);
          int idx2750#1 = idx2553;
          int mulRes2751#1 = IMul(ilit26C2,idx2750);
          int idx2753#1 = idx2556;
          int mulRes2754#1 = IMul(ilit26C2,idx2753);
          int idx2756#1 = idx2559;
          int mulRes2757#1 = IMul(ilit26C2,idx2756);
          int idx2759#1 = idx255C;
          int mulRes275A#1 = IMul(ilit26C2,idx2759);
          int idx275C#1 = idx255F;
          int mulRes275D#1 = IMul(ilit26C2,idx275C);
          int idx275F#1 = idx2562;
          int mulRes2760#1 = IMul(ilit26C2,idx275F);
          int idx2762#1 = idx2565;
          int mulRes2763#1 = IMul(ilit26C2,idx2762);
          int idx2765#1 = idx2568;
          int mulRes2766#1 = IMul(ilit26C2,idx2765);
          int idx2768#1 = idx256B;
          int mulRes2769#1 = IMul(ilit26C2,idx2768);
          int idx276B#1 = idx256E;
          int mulRes276C#1 = IMul(ilit26C2,idx276B);
          int idx276E#1 = idx2571;
          int mulRes276F#1 = IMul(ilit26C2,idx276E);
          int idx2771#1 = idx2574;
          int mulRes2772#1 = IMul(ilit26C2,idx2771);
          int idx2774#1 = idx2577;
          int mulRes2775#1 = IMul(ilit26C2,idx2774);
          int idx2777#1 = idx257A;
          int mulRes2778#1 = IMul(ilit26C2,idx2777);
          int idx277A#1 = idx257D;
          int mulRes277B#1 = IMul(ilit26C2,idx277A);
          int idx277D#1 = idx2580;
          int mulRes277E#1 = IMul(ilit26C2,idx277D);
          int idx2780#1 = idx2583;
          int mulRes2781#1 = IMul(ilit26C2,idx2780);
          int idx2783#1 = idx2586;
          int mulRes2784#1 = IMul(ilit26C2,idx2783);
          int idx2786#1 = idx2589;
          int mulRes2787#1 = IMul(ilit26C2,idx2786);
          int idx2789#1 = idx258C;
          int mulRes278A#1 = IMul(ilit26C2,idx2789);
          int idx278C#1 = idx258F;
          int mulRes278D#1 = IMul(ilit26C2,idx278C);
          int idx278F#1 = idx2592;
          int mulRes2790#1 = IMul(ilit26C2,idx278F);
          int idx2792#1 = idx2595;
          int mulRes2793#1 = IMul(ilit26C2,idx2792);
          int idx2795#1 = idx2598;
          int mulRes2796#1 = IMul(ilit26C2,idx2795);
          int idx2798#1 = idx259B;
          int mulRes2799#1 = IMul(ilit26C2,idx2798);
          int idx279B#1 = idx259E;
          int mulRes279C#1 = IMul(ilit26C2,idx279B);
          int idx279E#1 = idx25A1;
          int mulRes279F#1 = IMul(ilit26C2,idx279E);
          int idx27A1#1 = idx25A4;
          int mulRes27A2#1 = IMul(ilit26C2,idx27A1);
          int idx27A4#1 = idx25A7;
          int mulRes27A5#1 = IMul(ilit26C2,idx27A4);
          int idx27A7#1 = idx25AA;
          int mulRes27A8#1 = IMul(ilit26C2,idx27A7);
          int idx27AA#1 = idx25AD;
          int mulRes27AB#1 = IMul(ilit26C2,idx27AA);
          int idx27AD#1 = idx25B0;
          int mulRes27AE#1 = IMul(ilit26C2,idx27AD);
          int idx27B0#1 = idx25B3;
          int mulRes27B1#1 = IMul(ilit26C2,idx27B0);
          int idx27B3#1 = idx25B6;
          int mulRes27B4#1 = IMul(ilit26C2,idx27B3);
          int idx27B6#1 = idx25B9;
          int mulRes27B7#1 = IMul(ilit26C2,idx27B6);
          int idx27B9#1 = idx25BC;
          int mulRes27BA#1 = IMul(ilit26C2,idx27B9);
          int idx27BC#1 = idx25BF;
          int mulRes27BD#1 = IMul(ilit26C2,idx27BC);
          real dof27BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C5);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C7);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CA);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CD);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D0);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D3);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D6);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D9);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DC);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DF);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E2);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E5);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E8);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EB);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EE);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F1);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F4);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F7);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FA);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FD);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2700);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2703);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2706);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2709);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270C);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270F);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2712);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2715);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2718);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271B);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271E);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2721);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2724);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2727);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272A);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272D);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2730);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2733);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2736);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2739);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273C);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273F);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2742);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2745);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2748);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274B);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274E);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2751);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2754);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2757);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275A);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275D);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2760);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2763);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2766);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2769);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276C);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276F);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2772);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2775);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2778);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277B);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277E);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2781);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2784);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2787);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278A);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278D);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2790);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2793);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2796);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2799);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279C);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279F);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A2);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A5);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A8);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AB);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AE);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B1);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B4);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B7);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BA);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BD);
          tensor[84] dofs2812#1 = <tensor[84]>[dof27BE,dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811];
          tensor[84] femDofs26C1#12 = dofs2812;
          real varAcc2966#4 = VIndex<3,0>(pos24B7);
          real varAcc2967#4 = VIndex<3,1>(pos24B7);
          real varAcc2968#4 = VIndex<3,2>(pos24B7);
          real basisEval2969#294 = 0.e0;
          real coeff296A#31 = 0.2e1;
          real one296B#38 = 0.1e1;
          real prod296C#5 = RMul(one296B,one296B);
          real prod296D#2 = RMul(one296B,prod296C);
          real basisEval296E#3 = RMul(coeff296A,prod296D);
          real iden296F#5 = varAcc2968;
          real prod2970#4 = RMul(one296B,iden296F);
          real prod2971#3 = RMul(one296B,prod2970);
          real basisEval2972#4 = RMul(coeff296A,prod2971);
          real iden2973#5 = varAcc2967;
          real prod2974#4 = RMul(iden2973,one296B);
          real prod2975#3 = RMul(one296B,prod2974);
          real basisEval2976#4 = RMul(coeff296A,prod2975);
          real coeff2977#22 = 0.6e1;
          real iden2978#11 = varAcc2966;
          real prod2979#3 = RMul(iden2978,prod296C);
          real basisEval297A#1 = RMul(coeff2977,prod2979);
          real prod2297B#4 = RMul(iden296F,varAcc2968);
          real prod297C#3 = RMul(one296B,prod2297B);
          real prod297D#4 = RMul(one296B,prod297C);
          real basisEval297E#2 = RMul(coeff296A,prod297D);
          real prod297F#3 = RMul(iden2973,iden296F);
          real prod2980#3 = RMul(one296B,prod297F);
          real basisEval2981#3 = RMul(coeff296A,prod2980);
          real prod22982#4 = RMul(iden2973,varAcc2967);
          real prod2983#3 = RMul(prod22982,one296B);
          real prod2984#4 = RMul(one296B,prod2983);
          real basisEval2985#2 = RMul(coeff296A,prod2984);
          real prod2986#3 = RMul(iden2978,prod2970);
          real basisEval2987#2 = RMul(coeff2977,prod2986);
          real prod2988#3 = RMul(iden2978,prod2974);
          real basisEval2989#2 = RMul(coeff2977,prod2988);
          real coeff298A#15 = 0.12e2;
          real prod2298B#7 = RMul(iden2978,varAcc2966);
          real prod298C#4 = RMul(prod2298B,prod296C);
          real basisEval298D#1 = RMul(coeff298A,prod298C);
          real prod3298E#3 = RMul(prod2297B,varAcc2968);
          real prod298F#2 = RMul(one296B,prod3298E);
          real prod2990#4 = RMul(one296B,prod298F);
          real basisEval2991#2 = RMul(coeff296A,prod2990);
          real prod2992#2 = RMul(iden2973,prod2297B);
          real prod2993#4 = RMul(one296B,prod2992);
          real basisEval2994#2 = RMul(coeff296A,prod2993);
          real prod2995#2 = RMul(prod22982,iden296F);
          real prod2996#4 = RMul(one296B,prod2995);
          real basisEval2997#2 = RMul(coeff296A,prod2996);
          real prod32998#3 = RMul(prod22982,varAcc2967);
          real prod2999#2 = RMul(prod32998,one296B);
          real prod299A#4 = RMul(one296B,prod2999);
          real basisEval299B#2 = RMul(coeff296A,prod299A);
          real prod299C#4 = RMul(iden2978,prod297C);
          real basisEval299D#2 = RMul(coeff2977,prod299C);
          real prod299E#2 = RMul(iden2978,prod297F);
          real basisEval299F#3 = RMul(coeff2977,prod299E);
          real prod29A0#4 = RMul(iden2978,prod2983);
          real basisEval29A1#2 = RMul(coeff2977,prod29A0);
          real prod29A2#4 = RMul(prod2298B,prod2970);
          real basisEval29A3#1 = RMul(coeff298A,prod29A2);
          real prod29A4#4 = RMul(prod2298B,prod2974);
          real basisEval29A5#1 = RMul(coeff298A,prod29A4);
          real coeff29A6#9 = 0.20e2;
          real prod329A7#4 = RMul(prod2298B,varAcc2966);
          real prod29A8#4 = RMul(prod329A7,prod296C);
          real basisEval29A9#1 = RMul(coeff29A6,prod29A8);
          real prod429AA#1 = RMul(prod3298E,varAcc2968);
          real prod29AB#1 = RMul(one296B,prod429AA);
          real prod29AC#4 = RMul(one296B,prod29AB);
          real basisEval29AD#2 = RMul(coeff296A,prod29AC);
          real prod29AE#1 = RMul(iden2973,prod3298E);
          real prod29AF#5 = RMul(one296B,prod29AE);
          real basisEval29B0#2 = RMul(coeff296A,prod29AF);
          real prod29B1#1 = RMul(prod22982,prod2297B);
          real prod29B2#4 = RMul(one296B,prod29B1);
          real basisEval29B3#1 = RMul(coeff296A,prod29B2);
          real prod29B4#1 = RMul(prod32998,iden296F);
          real prod29B5#5 = RMul(one296B,prod29B4);
          real basisEval29B6#2 = RMul(coeff296A,prod29B5);
          real prod429B7#1 = RMul(prod32998,varAcc2967);
          real prod29B8#1 = RMul(prod429B7,one296B);
          real prod29B9#4 = RMul(one296B,prod29B8);
          real basisEval29BA#2 = RMul(coeff296A,prod29B9);
          real prod29BB#5 = RMul(iden2978,prod298F);
          real basisEval29BC#1 = RMul(coeff2977,prod29BB);
          real prod29BD#3 = RMul(iden2978,prod2992);
          real basisEval29BE#4 = RMul(coeff2977,prod29BD);
          real prod29BF#3 = RMul(iden2978,prod2995);
          real basisEval29C0#4 = RMul(coeff2977,prod29BF);
          real prod29C1#5 = RMul(iden2978,prod2999);
          real basisEval29C2#1 = RMul(coeff2977,prod29C1);
          real prod29C3#4 = RMul(prod2298B,prod297C);
          real basisEval29C4#2 = RMul(coeff298A,prod29C3);
          real prod29C5#3 = RMul(prod2298B,prod297F);
          real basisEval29C6#1 = RMul(coeff298A,prod29C5);
          real prod29C7#4 = RMul(prod2298B,prod2983);
          real basisEval29C8#2 = RMul(coeff298A,prod29C7);
          real prod29C9#5 = RMul(prod329A7,prod2970);
          real basisEval29CA#1 = RMul(coeff29A6,prod29C9);
          real prod29CB#5 = RMul(prod329A7,prod2974);
          real basisEval29CC#1 = RMul(coeff29A6,prod29CB);
          real coeff29CD#3 = 0.30e2;
          real prod429CE#1 = RMul(prod329A7,varAcc2966);
          real prod29CF#4 = RMul(prod429CE,prod296C);
          real basisEval29D0#1 = RMul(coeff29CD,prod29CF);
          real basisEval29D1#3 = RMul(one296B,prod296D);
          real basisEval29D2#1 = RMul(one296B,prod2971);
          real basisEval29D3#4 = RMul(coeff296A,prod2979);
          real basisEval29D4#1 = RMul(one296B,prod297D);
          real coeff29D5#12 = 0.3e1;
          real basisEval29D6#2 = RMul(coeff29D5,prod2984);
          real basisEval29D7#3 = RMul(coeff296A,prod2986);
          real coeff29D8#16 = 0.4e1;
          real basisEval29D9#1 = RMul(coeff29D8,prod2988);
          real basisEval29DA#2 = RMul(coeff29D5,prod298C);
          real basisEval29DB#1 = RMul(one296B,prod2990);
          real basisEval29DC#1 = RMul(coeff29D5,prod2996);
          real basisEval29DD#2 = RMul(coeff29D8,prod299A);
          real basisEval29DE#2 = RMul(coeff296A,prod299C);
          real basisEval29DF#3 = RMul(coeff29D8,prod299E);
          real basisEval29E0#1 = RMul(coeff29D5,prod29A2);
          real basisEval29E1#2 = RMul(coeff2977,prod29A4);
          real basisEval29E2#2 = RMul(coeff29D8,prod29A8);
          real basisEval29E3#1 = RMul(one296B,prod29AC);
          real basisEval29E4#2 = RMul(coeff29D5,prod29B2);
          real basisEval29E5#1 = RMul(coeff29D8,prod29B5);
          real coeff29E6#3 = 0.5e1;
          real basisEval29E7#2 = RMul(coeff29E6,prod29B9);
          real basisEval29E8#2 = RMul(coeff296A,prod29BB);
          real basisEval29E9#1 = RMul(coeff29D8,prod29BD);
          real coeff29EA#6 = 0.8e1;
          real basisEval29EB#1 = RMul(coeff29EA,prod29C1);
          real basisEval29EC#2 = RMul(coeff29D5,prod29C3);
          real basisEval29ED#4 = RMul(coeff2977,prod29C5);
          real coeff29EE#3 = 0.9e1;
          real basisEval29EF#1 = RMul(coeff29EE,prod29C7);
          real basisEval29F0#1 = RMul(coeff29D8,prod29C9);
          real basisEval29F1#1 = RMul(coeff29EA,prod29CB);
          real basisEval29F2#2 = RMul(coeff29E6,prod29CF);
          real basisEval29F3#1 = RMul(one296B,prod2975);
          real basisEval29F4#2 = RMul(coeff29D5,prod297D);
          real basisEval29F5#1 = RMul(one296B,prod2984);
          real basisEval29F6#1 = RMul(coeff29D8,prod2986);
          real basisEval29F7#3 = RMul(coeff296A,prod2988);
          real basisEval29F8#2 = RMul(coeff29D8,prod2990);
          real basisEval29F9#1 = RMul(coeff29D5,prod2993);
          real basisEval29FA#1 = RMul(one296B,prod299A);
          real basisEval29FB#2 = RMul(coeff296A,prod29A0);
          real basisEval29FC#2 = RMul(coeff2977,prod29A2);
          real basisEval29FD#1 = RMul(coeff29D5,prod29A4);
          real basisEval29FE#2 = RMul(coeff29E6,prod29AC);
          real basisEval29FF#1 = RMul(coeff29D8,prod29AF);
          real basisEval2A00#1 = RMul(one296B,prod29B9);
          real basisEval2A01#1 = RMul(coeff29EA,prod29BB);
          real basisEval2A02#1 = RMul(coeff29D8,prod29BF);
          real basisEval2A03#2 = RMul(coeff296A,prod29C1);
          real basisEval2A04#1 = RMul(coeff29EE,prod29C3);
          real basisEval2A05#2 = RMul(coeff29D5,prod29C7);
          real basisEval2A06#1 = RMul(coeff29EA,prod29C9);
          real basisEval2A07#1 = RMul(coeff29D8,prod29CB);
          real basisEval2A08#1 = RMul(coeff2977,prod2975);
          real basisEval2A09#2 = RMul(coeff2977,prod2980);
          real basisEval2A0A#1 = RMul(coeff298A,prod2984);
          real basisEval2A0B#2 = RMul(coeff296A,prod298C);
          real basisEval2A0C#2 = RMul(coeff2977,prod2993);
          real basisEval2A0D#1 = RMul(coeff298A,prod2996);
          real basisEval2A0E#1 = RMul(coeff29A6,prod299A);
          real basisEval2A0F#1 = RMul(coeff298A,prod29A0);
          real basisEval2A10#2 = RMul(coeff296A,prod29A2);
          real basisEval2A11#2 = RMul(coeff296A,prod29A8);
          real basisEval2A12#1 = RMul(coeff2977,prod29AF);
          real basisEval2A13#2 = RMul(coeff298A,prod29B2);
          real basisEval2A14#1 = RMul(coeff29A6,prod29B5);
          real basisEval2A15#1 = RMul(coeff29CD,prod29B9);
          real basisEval2A16#1 = RMul(coeff298A,prod29BF);
          real basisEval2A17#1 = RMul(coeff29A6,prod29C1);
          real basisEval2A18#1 = RMul(coeff296A,prod29C3);
          real basisEval2A19#2 = RMul(coeff296A,prod29C9);
          real basisEval2A1A#1 = RMul(coeff2977,prod29CB);
          real basisEval2A1B#2 = RMul(coeff296A,prod29CF);
          real basisEval2A1C#1 = RMul(one296B,prod2979);
          real basisEval2A1D#1 = RMul(coeff29D8,prod2980);
          real basisEval2A1E#1 = RMul(one296B,prod298C);
          real basisEval2A1F#2 = RMul(coeff2977,prod2996);
          real basisEval2A20#1 = RMul(coeff29D5,prod299C);
          real basisEval2A21#1 = RMul(coeff29D5,prod29A0);
          real basisEval2A22#2 = RMul(coeff296A,prod29A4);
          real basisEval2A23#1 = RMul(one296B,prod29A8);
          real basisEval2A24#1 = RMul(coeff29EA,prod29AF);
          real basisEval2A25#1 = RMul(coeff29EE,prod29B2);
          real basisEval2A26#1 = RMul(coeff29EA,prod29B5);
          real basisEval2A27#1 = RMul(coeff29D8,prod29BB);
          real basisEval2A28#1 = RMul(coeff29D8,prod29C1);
          real basisEval2A29#1 = RMul(coeff29D8,prod29C5);
          real basisEval2A2A#2 = RMul(coeff296A,prod29CB);
          real basisEval2A2B#1 = RMul(one296B,prod29CF);
          real basisEval2A2C#1 = RMul(coeff2977,prod2971);
          real basisEval2A2D#1 = RMul(coeff298A,prod297D);
          real basisEval2A2E#1 = RMul(coeff29A6,prod2990);
          real basisEval2A2F#1 = RMul(coeff298A,prod2993);
          real basisEval2A30#1 = RMul(coeff298A,prod299C);
          real basisEval2A31#1 = RMul(coeff29CD,prod29AC);
          real basisEval2A32#1 = RMul(coeff29A6,prod29AF);
          real basisEval2A33#1 = RMul(coeff2977,prod29B5);
          real basisEval2A34#1 = RMul(coeff29A6,prod29BB);
          real basisEval2A35#1 = RMul(coeff298A,prod29BD);
          real basisEval2A36#1 = RMul(coeff296A,prod29C7);
          real basisEval2A37#1 = RMul(coeff2977,prod29C9);
          tensor[84] intermediateCons2A38#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval297A,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2981,basisEval2985,basisEval2987,basisEval2989,basisEval298D,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2994,basisEval2997,basisEval299B,basisEval299D,basisEval299F,basisEval29A1,basisEval29A3,basisEval29A5,basisEval29A9,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval29B0,basisEval29B3,basisEval29B6,basisEval29BA,basisEval29BC,basisEval29BE,basisEval29C0,basisEval29C2,basisEval29C4,basisEval29C6,basisEval29C8,basisEval29CA,basisEval29CC,basisEval29D0];
          tensor[84] intermediateCons2A39#2 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D2,basisEval2976,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D4,basisEval2981,basisEval29D6,basisEval2969,basisEval29D7,basisEval29D9,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29DB,basisEval2994,basisEval29DC,basisEval29DD,basisEval2969,basisEval29DE,basisEval29DF,basisEval29A1,basisEval2969,basisEval29E0,basisEval29E1,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29E3,basisEval29B0,basisEval29E4,basisEval29E5,basisEval29E7,basisEval2969,basisEval29E8,basisEval29E9,basisEval29C0,basisEval29EB,basisEval2969,basisEval29EC,basisEval29ED,basisEval29EF,basisEval2969,basisEval29F0,basisEval29F1,basisEval2969,basisEval29F2,basisEval2969];
          tensor[84] intermediateCons2A3A#2 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval29F3,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2981,basisEval29F5,basisEval2969,basisEval29F6,basisEval29F7,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval29F9,basisEval2997,basisEval29FA,basisEval2969,basisEval299D,basisEval29DF,basisEval29FB,basisEval2969,basisEval29FC,basisEval29FD,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval29FF,basisEval29E4,basisEval29B6,basisEval2A00,basisEval2969,basisEval2A01,basisEval29BE,basisEval2A02,basisEval2A03,basisEval2969,basisEval2A04,basisEval29ED,basisEval2A05,basisEval2969,basisEval2A06,basisEval2A07,basisEval2969,basisEval29F2,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3B#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2A08,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2A09,basisEval2A0A,basisEval2969,basisEval2969,basisEval29D7,basisEval2989,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2A0C,basisEval2A0D,basisEval2A0E,basisEval2969,basisEval2969,basisEval29DE,basisEval299F,basisEval2A0F,basisEval2969,basisEval2969,basisEval2A10,basisEval29E1,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval2A12,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2969,basisEval2969,basisEval29E8,basisEval29BE,basisEval2A16,basisEval2A17,basisEval2969,basisEval2969,basisEval2A18,basisEval29ED,basisEval29C8,basisEval2969,basisEval2969,basisEval2A19,basisEval2A1A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3C#2 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval2969,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2A1D,basisEval29D6,basisEval2969,basisEval2969,basisEval29D7,basisEval29F7,basisEval2969,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval2A0C,basisEval2A1F,basisEval29DD,basisEval2969,basisEval2969,basisEval2A20,basisEval29DF,basisEval2A21,basisEval2969,basisEval2969,basisEval2A10,basisEval2A22,basisEval2969,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval2A24,basisEval2A25,basisEval2A26,basisEval29E7,basisEval2969,basisEval2969,basisEval2A27,basisEval29BE,basisEval29C0,basisEval2A28,basisEval2969,basisEval2969,basisEval29EC,basisEval2A29,basisEval2A05,basisEval2969,basisEval2969,basisEval2A19,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3D#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2C,basisEval2976,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2D,basisEval2A09,basisEval2985,basisEval2969,basisEval2969,basisEval2987,basisEval29F7,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2E,basisEval2A2F,basisEval2A1F,basisEval299B,basisEval2969,basisEval2969,basisEval2A30,basisEval299F,basisEval29FB,basisEval2969,basisEval2969,basisEval29FC,basisEval2A22,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A31,basisEval2A32,basisEval2A13,basisEval2A33,basisEval29BA,basisEval2969,basisEval2969,basisEval2A34,basisEval2A35,basisEval29C0,basisEval2A03,basisEval2969,basisEval2969,basisEval29C4,basisEval29ED,basisEval2A36,basisEval2969,basisEval2969,basisEval2A37,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] projParam2B20#1 = intermediateCons2A38;
          real vdot2B21#1 = VDot<84>(femDofs26C1,projParam2B20);
          tensor[84] projParam2B22#1 = intermediateCons2A39;
          real vdot2B23#1 = VDot<84>(femDofs26C1,projParam2B22);
          tensor[84] projParam2B24#1 = intermediateCons2A3A;
          real vdot2B25#1 = VDot<84>(femDofs26C1,projParam2B24);
          tensor[3] tensor2B26#1 = <tensor[3]>[vdot2B21,vdot2B23,vdot2B25];
          tensor[84] projParam2B27#1 = intermediateCons2A39;
          real vdot2B28#1 = VDot<84>(femDofs26C1,projParam2B27);
          tensor[84] projParam2B29#1 = intermediateCons2A3B;
          real vdot2B2A#1 = VDot<84>(femDofs26C1,projParam2B29);
          tensor[84] projParam2B2B#1 = intermediateCons2A3C;
          real vdot2B2C#1 = VDot<84>(femDofs26C1,projParam2B2B);
          tensor[3] tensor2B2D#1 = <tensor[3]>[vdot2B28,vdot2B2A,vdot2B2C];
          tensor[84] projParam2B2E#1 = intermediateCons2A3A;
          real vdot2B2F#1 = VDot<84>(femDofs26C1,projParam2B2E);
          tensor[84] projParam2B30#1 = intermediateCons2A3C;
          real vdot2B31#1 = VDot<84>(femDofs26C1,projParam2B30);
          tensor[84] projParam2B32#1 = intermediateCons2A3D;
          real vdot2B33#1 = VDot<84>(femDofs26C1,projParam2B32);
          tensor[3] tensor2B34#1 = <tensor[3]>[vdot2B2F,vdot2B31,vdot2B33];
          tensor[3,3] _t2B1F#1 = <tensor[3,3]>[tensor2B26,tensor2B2D,tensor2B34];
          real[3] _t2B4C#1 = EigenVals3x3(_t2B1F);
          int _t2B4E#1 = 1;
          real _t2B50#1 = Subscript<real[3]>(_t2B4C,_t2B4E);
          real varAcc2B53#5 = VIndex<3,0>(pos24B7);
          real varAcc2B54#5 = VIndex<3,1>(pos24B7);
          real varAcc2B55#5 = VIndex<3,2>(pos24B7);
          real basisEval2B56#84 = 0.e0;
          real coeff2B57#79 = 0.1e1;
          real prod2B58#6 = RMul(coeff2B57,coeff2B57);
          real prod2B59#1 = RMul(coeff2B57,prod2B58);
          real basisEval2B5A#3 = RMul(coeff2B57,prod2B59);
          real iden2B5B#6 = varAcc2B55;
          real prod2B5C#5 = RMul(coeff2B57,iden2B5B);
          real prod2B5D#2 = RMul(coeff2B57,prod2B5C);
          real basisEval2B5E#2 = RMul(coeff2B57,prod2B5D);
          real iden2B5F#6 = varAcc2B54;
          real prod2B60#5 = RMul(iden2B5F,coeff2B57);
          real prod2B61#2 = RMul(coeff2B57,prod2B60);
          real basisEval2B62#2 = RMul(coeff2B57,prod2B61);
          real coeff2B63#34 = 0.2e1;
          real iden2B64#16 = varAcc2B53;
          real prod2B65#2 = RMul(iden2B64,prod2B58);
          real basisEval2B66#1 = RMul(coeff2B63,prod2B65);
          real prod22B67#5 = RMul(iden2B5B,varAcc2B55);
          real prod2B68#4 = RMul(coeff2B57,prod22B67);
          real prod2B69#2 = RMul(coeff2B57,prod2B68);
          real basisEval2B6A#2 = RMul(coeff2B57,prod2B69);
          real prod2B6B#4 = RMul(iden2B5F,iden2B5B);
          real prod2B6C#2 = RMul(coeff2B57,prod2B6B);
          real basisEval2B6D#1 = RMul(coeff2B57,prod2B6C);
          real prod22B6E#5 = RMul(iden2B5F,varAcc2B54);
          real prod2B6F#4 = RMul(prod22B6E,coeff2B57);
          real prod2B70#2 = RMul(coeff2B57,prod2B6F);
          real basisEval2B71#2 = RMul(coeff2B57,prod2B70);
          real prod2B72#2 = RMul(iden2B64,prod2B5C);
          real basisEval2B73#2 = RMul(coeff2B63,prod2B72);
          real prod2B74#2 = RMul(iden2B64,prod2B60);
          real basisEval2B75#2 = RMul(coeff2B63,prod2B74);
          real coeff2B76#24 = 0.3e1;
          real prod22B77#11 = RMul(iden2B64,varAcc2B53);
          real prod2B78#2 = RMul(prod22B77,prod2B58);
          real basisEval2B79#1 = RMul(coeff2B76,prod2B78);
          real prod32B7A#4 = RMul(prod22B67,varAcc2B55);
          real prod2B7B#3 = RMul(coeff2B57,prod32B7A);
          real prod2B7C#2 = RMul(coeff2B57,prod2B7B);
          real basisEval2B7D#2 = RMul(coeff2B57,prod2B7C);
          real prod2B7E#3 = RMul(iden2B5F,prod22B67);
          real prod2B7F#3 = RMul(coeff2B57,prod2B7E);
          real basisEval2B80#1 = RMul(coeff2B57,prod2B7F);
          real prod2B81#3 = RMul(prod22B6E,iden2B5B);
          real prod2B82#3 = RMul(coeff2B57,prod2B81);
          real basisEval2B83#1 = RMul(coeff2B57,prod2B82);
          real prod32B84#4 = RMul(prod22B6E,varAcc2B54);
          real prod2B85#3 = RMul(prod32B84,coeff2B57);
          real prod2B86#2 = RMul(coeff2B57,prod2B85);
          real basisEval2B87#2 = RMul(coeff2B57,prod2B86);
          real prod2B88#3 = RMul(iden2B64,prod2B68);
          real basisEval2B89#1 = RMul(coeff2B63,prod2B88);
          real prod2B8A#1 = RMul(iden2B64,prod2B6B);
          real basisEval2B8B#3 = RMul(coeff2B63,prod2B8A);
          real prod2B8C#3 = RMul(iden2B64,prod2B6F);
          real basisEval2B8D#1 = RMul(coeff2B63,prod2B8C);
          real prod2B8E#3 = RMul(prod22B77,prod2B5C);
          real basisEval2B8F#1 = RMul(coeff2B76,prod2B8E);
          real prod2B90#3 = RMul(prod22B77,prod2B60);
          real basisEval2B91#1 = RMul(coeff2B76,prod2B90);
          real coeff2B92#18 = 0.4e1;
          real prod32B93#7 = RMul(prod22B77,varAcc2B53);
          real prod2B94#2 = RMul(prod32B93,prod2B58);
          real basisEval2B95#1 = RMul(coeff2B92,prod2B94);
          real prod42B96#3 = RMul(prod32B7A,varAcc2B55);
          real prod2B97#2 = RMul(coeff2B57,prod42B96);
          real prod2B98#2 = RMul(coeff2B57,prod2B97);
          real basisEval2B99#2 = RMul(coeff2B57,prod2B98);
          real prod2B9A#2 = RMul(iden2B5F,prod32B7A);
          real prod2B9B#3 = RMul(coeff2B57,prod2B9A);
          real basisEval2B9C#1 = RMul(coeff2B57,prod2B9B);
          real prod2B9D#2 = RMul(prod22B6E,prod22B67);
          real prod2B9E#2 = RMul(coeff2B57,prod2B9D);
          real basisEval2B9F#1 = RMul(coeff2B57,prod2B9E);
          real prod2BA0#2 = RMul(prod32B84,iden2B5B);
          real prod2BA1#3 = RMul(coeff2B57,prod2BA0);
          real basisEval2BA2#1 = RMul(coeff2B57,prod2BA1);
          real prod42BA3#3 = RMul(prod32B84,varAcc2B54);
          real prod2BA4#2 = RMul(prod42BA3,coeff2B57);
          real prod2BA5#2 = RMul(coeff2B57,prod2BA4);
          real basisEval2BA6#2 = RMul(coeff2B57,prod2BA5);
          real prod2BA7#3 = RMul(iden2B64,prod2B7B);
          real basisEval2BA8#1 = RMul(coeff2B63,prod2BA7);
          real prod2BA9#2 = RMul(iden2B64,prod2B7E);
          real basisEval2BAA#2 = RMul(coeff2B63,prod2BA9);
          real prod2BAB#2 = RMul(iden2B64,prod2B81);
          real basisEval2BAC#2 = RMul(coeff2B63,prod2BAB);
          real prod2BAD#3 = RMul(iden2B64,prod2B85);
          real basisEval2BAE#1 = RMul(coeff2B63,prod2BAD);
          real prod2BAF#2 = RMul(prod22B77,prod2B68);
          real basisEval2BB0#2 = RMul(coeff2B76,prod2BAF);
          real prod2BB1#2 = RMul(prod22B77,prod2B6B);
          real basisEval2BB2#1 = RMul(coeff2B76,prod2BB1);
          real prod2BB3#2 = RMul(prod22B77,prod2B6F);
          real basisEval2BB4#2 = RMul(coeff2B76,prod2BB3);
          real prod2BB5#3 = RMul(prod32B93,prod2B5C);
          real basisEval2BB6#1 = RMul(coeff2B92,prod2BB5);
          real prod2BB7#3 = RMul(prod32B93,prod2B60);
          real basisEval2BB8#1 = RMul(coeff2B92,prod2BB7);
          real coeff2BB9#9 = 0.5e1;
          real prod42BBA#4 = RMul(prod32B93,varAcc2B53);
          real prod2BBB#2 = RMul(prod42BBA,prod2B58);
          real basisEval2BBC#1 = RMul(coeff2BB9,prod2BBB);
          real prod52BBD#1 = RMul(prod42B96,varAcc2B55);
          real prod2BBE#1 = RMul(coeff2B57,prod52BBD);
          real prod2BBF#2 = RMul(coeff2B57,prod2BBE);
          real basisEval2BC0#2 = RMul(coeff2B57,prod2BBF);
          real prod2BC1#1 = RMul(iden2B5F,prod42B96);
          real prod2BC2#3 = RMul(coeff2B57,prod2BC1);
          real basisEval2BC3#1 = RMul(coeff2B57,prod2BC2);
          real prod2BC4#1 = RMul(prod22B6E,prod32B7A);
          real prod2BC5#3 = RMul(coeff2B57,prod2BC4);
          real basisEval2BC6#1 = RMul(coeff2B57,prod2BC5);
          real prod2BC7#1 = RMul(prod32B84,prod22B67);
          real prod2BC8#3 = RMul(coeff2B57,prod2BC7);
          real basisEval2BC9#1 = RMul(coeff2B57,prod2BC8);
          real prod2BCA#1 = RMul(prod42BA3,iden2B5B);
          real prod2BCB#3 = RMul(coeff2B57,prod2BCA);
          real basisEval2BCC#1 = RMul(coeff2B57,prod2BCB);
          real prod52BCD#1 = RMul(prod42BA3,varAcc2B54);
          real prod2BCE#1 = RMul(prod52BCD,coeff2B57);
          real prod2BCF#2 = RMul(coeff2B57,prod2BCE);
          real basisEval2BD0#2 = RMul(coeff2B57,prod2BCF);
          real prod2BD1#3 = RMul(iden2B64,prod2B97);
          real basisEval2BD2#1 = RMul(coeff2B63,prod2BD1);
          real prod2BD3#2 = RMul(iden2B64,prod2B9A);
          real basisEval2BD4#2 = RMul(coeff2B63,prod2BD3);
          real prod2BD5#2 = RMul(iden2B64,prod2B9D);
          real basisEval2BD6#1 = RMul(coeff2B63,prod2BD5);
          real prod2BD7#2 = RMul(iden2B64,prod2BA0);
          real basisEval2BD8#2 = RMul(coeff2B63,prod2BD7);
          real prod2BD9#3 = RMul(iden2B64,prod2BA4);
          real basisEval2BDA#1 = RMul(coeff2B63,prod2BD9);
          real prod2BDB#3 = RMul(prod22B77,prod2B7B);
          real basisEval2BDC#1 = RMul(coeff2B76,prod2BDB);
          real prod2BDD#2 = RMul(prod22B77,prod2B7E);
          real basisEval2BDE#2 = RMul(coeff2B76,prod2BDD);
          real prod2BDF#2 = RMul(prod22B77,prod2B81);
          real basisEval2BE0#2 = RMul(coeff2B76,prod2BDF);
          real prod2BE1#3 = RMul(prod22B77,prod2B85);
          real basisEval2BE2#1 = RMul(coeff2B76,prod2BE1);
          real prod2BE3#3 = RMul(prod32B93,prod2B68);
          real basisEval2BE4#1 = RMul(coeff2B92,prod2BE3);
          real prod2BE5#2 = RMul(prod32B93,prod2B6B);
          real basisEval2BE6#1 = RMul(coeff2B92,prod2BE5);
          real prod2BE7#3 = RMul(prod32B93,prod2B6F);
          real basisEval2BE8#1 = RMul(coeff2B92,prod2BE7);
          real prod2BE9#3 = RMul(prod42BBA,prod2B5C);
          real basisEval2BEA#1 = RMul(coeff2BB9,prod2BE9);
          real prod2BEB#3 = RMul(prod42BBA,prod2B60);
          real basisEval2BEC#1 = RMul(coeff2BB9,prod2BEB);
          real coeff2BED#3 = 0.6e1;
          real prod52BEE#1 = RMul(prod42BBA,varAcc2B53);
          real prod2BEF#2 = RMul(prod52BEE,prod2B58);
          real basisEval2BF0#1 = RMul(coeff2BED,prod2BEF);
          real basisEval2BF1#1 = RMul(coeff2B63,prod2B61);
          real basisEval2BF2#2 = RMul(coeff2B57,prod2B65);
          real basisEval2BF3#2 = RMul(coeff2B63,prod2B6C);
          real basisEval2BF4#1 = RMul(coeff2B76,prod2B70);
          real basisEval2BF5#1 = RMul(coeff2B57,prod2B72);
          real basisEval2BF6#2 = RMul(coeff2B57,prod2B78);
          real basisEval2BF7#1 = RMul(coeff2B63,prod2B7F);
          real basisEval2BF8#1 = RMul(coeff2B76,prod2B82);
          real basisEval2BF9#1 = RMul(coeff2B92,prod2B86);
          real basisEval2BFA#1 = RMul(coeff2B57,prod2B88);
          real basisEval2BFB#1 = RMul(coeff2B76,prod2B8C);
          real basisEval2BFC#1 = RMul(coeff2B57,prod2B8E);
          real basisEval2BFD#1 = RMul(coeff2B63,prod2B90);
          real basisEval2BFE#2 = RMul(coeff2B57,prod2B94);
          real basisEval2BFF#1 = RMul(coeff2B63,prod2B9B);
          real basisEval2C00#2 = RMul(coeff2B76,prod2B9E);
          real basisEval2C01#1 = RMul(coeff2B92,prod2BA1);
          real basisEval2C02#1 = RMul(coeff2BB9,prod2BA5);
          real basisEval2C03#1 = RMul(coeff2B57,prod2BA7);
          real basisEval2C04#1 = RMul(coeff2B76,prod2BAB);
          real basisEval2C05#1 = RMul(coeff2B92,prod2BAD);
          real basisEval2C06#1 = RMul(coeff2B57,prod2BAF);
          real basisEval2C07#2 = RMul(coeff2B63,prod2BB1);
          real basisEval2C08#1 = RMul(coeff2B57,prod2BB5);
          real basisEval2C09#1 = RMul(coeff2B63,prod2BB7);
          real basisEval2C0A#2 = RMul(coeff2B57,prod2BBB);
          real basisEval2C0B#1 = RMul(coeff2B63,prod2BC2);
          real basisEval2C0C#1 = RMul(coeff2B76,prod2BC5);
          real basisEval2C0D#1 = RMul(coeff2B92,prod2BC8);
          real basisEval2C0E#1 = RMul(coeff2BB9,prod2BCB);
          real basisEval2C0F#1 = RMul(coeff2BED,prod2BCF);
          real basisEval2C10#1 = RMul(coeff2B57,prod2BD1);
          real basisEval2C11#2 = RMul(coeff2B76,prod2BD5);
          real basisEval2C12#1 = RMul(coeff2B92,prod2BD7);
          real basisEval2C13#1 = RMul(coeff2BB9,prod2BD9);
          real basisEval2C14#1 = RMul(coeff2B57,prod2BDB);
          real basisEval2C15#1 = RMul(coeff2B63,prod2BDD);
          real basisEval2C16#1 = RMul(coeff2B92,prod2BE1);
          real basisEval2C17#1 = RMul(coeff2B57,prod2BE3);
          real basisEval2C18#2 = RMul(coeff2B63,prod2BE5);
          real basisEval2C19#1 = RMul(coeff2B76,prod2BE7);
          real basisEval2C1A#1 = RMul(coeff2B57,prod2BE9);
          real basisEval2C1B#1 = RMul(coeff2B63,prod2BEB);
          real basisEval2C1C#2 = RMul(coeff2B57,prod2BEF);
          real basisEval2C1D#1 = RMul(coeff2B63,prod2B5D);
          real basisEval2C1E#1 = RMul(coeff2B76,prod2B69);
          real basisEval2C1F#1 = RMul(coeff2B57,prod2B74);
          real basisEval2C20#1 = RMul(coeff2B92,prod2B7C);
          real basisEval2C21#1 = RMul(coeff2B76,prod2B7F);
          real basisEval2C22#1 = RMul(coeff2B63,prod2B82);
          real basisEval2C23#1 = RMul(coeff2B76,prod2B88);
          real basisEval2C24#1 = RMul(coeff2B57,prod2B8C);
          real basisEval2C25#1 = RMul(coeff2B63,prod2B8E);
          real basisEval2C26#1 = RMul(coeff2B57,prod2B90);
          real basisEval2C27#1 = RMul(coeff2BB9,prod2B98);
          real basisEval2C28#1 = RMul(coeff2B92,prod2B9B);
          real basisEval2C29#1 = RMul(coeff2B63,prod2BA1);
          real basisEval2C2A#1 = RMul(coeff2B92,prod2BA7);
          real basisEval2C2B#1 = RMul(coeff2B76,prod2BA9);
          real basisEval2C2C#1 = RMul(coeff2B57,prod2BAD);
          real basisEval2C2D#1 = RMul(coeff2B57,prod2BB3);
          real basisEval2C2E#1 = RMul(coeff2B63,prod2BB5);
          real basisEval2C2F#1 = RMul(coeff2B57,prod2BB7);
          real basisEval2C30#1 = RMul(coeff2BED,prod2BBF);
          real basisEval2C31#1 = RMul(coeff2BB9,prod2BC2);
          real basisEval2C32#1 = RMul(coeff2B92,prod2BC5);
          real basisEval2C33#1 = RMul(coeff2B76,prod2BC8);
          real basisEval2C34#1 = RMul(coeff2B63,prod2BCB);
          real basisEval2C35#1 = RMul(coeff2BB9,prod2BD1);
          real basisEval2C36#1 = RMul(coeff2B92,prod2BD3);
          real basisEval2C37#1 = RMul(coeff2B57,prod2BD9);
          real basisEval2C38#1 = RMul(coeff2B92,prod2BDB);
          real basisEval2C39#1 = RMul(coeff2B63,prod2BDF);
          real basisEval2C3A#1 = RMul(coeff2B57,prod2BE1);
          real basisEval2C3B#1 = RMul(coeff2B76,prod2BE3);
          real basisEval2C3C#1 = RMul(coeff2B57,prod2BE7);
          real basisEval2C3D#1 = RMul(coeff2B63,prod2BE9);
          real basisEval2C3E#1 = RMul(coeff2B57,prod2BEB);
          tensor[84] intermediateCons2C3F#1 = <tensor[84]>[basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B5A,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B5E,basisEval2B62,basisEval2B66,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B6A,basisEval2B6D,basisEval2B71,basisEval2B73,basisEval2B75,basisEval2B79,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B7D,basisEval2B80,basisEval2B83,basisEval2B87,basisEval2B89,basisEval2B8B,basisEval2B8D,basisEval2B8F,basisEval2B91,basisEval2B95,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B99,basisEval2B9C,basisEval2B9F,basisEval2BA2,basisEval2BA6,basisEval2BA8,basisEval2BAA,basisEval2BAC,basisEval2BAE,basisEval2BB0,basisEval2BB2,basisEval2BB4,basisEval2BB6,basisEval2BB8,basisEval2BBC,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2B56,basisEval2BC0,basisEval2BC3,basisEval2BC6,basisEval2BC9,basisEval2BCC,basisEval2BD0,basisEval2BD2,basisEval2BD4,basisEval2BD6,basisEval2BD8,basisEval2BDA,basisEval2BDC,basisEval2BDE,basisEval2BE0,basisEval2BE2,basisEval2BE4,basisEval2BE6,basisEval2BE8,basisEval2BEA,basisEval2BEC,basisEval2BF0];
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval2B56,basisEval2B56,basisEval2B5A,basisEval2B56,basisEval2B56,basisEval2B5E,basisEval2BF1,basisEval2B56,basisEval2BF2,basisEval2B56,basisEval2B56,basisEval2B6A,basisEval2BF3,basisEval2BF4,basisEval2B56,basisEval2BF5,basisEval2B75,basisEval2B56,basisEval2BF6,basisEval2B56,basisEval2B56,basisEval2B7D,basisEval2BF7,basisEval2BF8,basisEval2BF9,basisEval2B56,basisEval2BFA,basisEval2B8B,basisEval2BFB,basisEval2B56,basisEval2BFC,basisEval2BFD,basisEval2B56,basisEval2BFE,basisEval2B56,basisEval2B56,basisEval2B99,basisEval2BFF,basisEval2C00,basisEval2C01,basisEval2C02,basisEval2B56,basisEval2C03,basisEval2BAA,basisEval2C04,basisEval2C05,basisEval2B56,basisEval2C06,basisEval2C07,basisEval2BB4,basisEval2B56,basisEval2C08,basisEval2C09,basisEval2B56,basisEval2C0A,basisEval2B56,basisEval2B56,basisEval2BC0,basisEval2C0B,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2B56,basisEval2C10,basisEval2BD4,basisEval2C11,basisEval2C12,basisEval2C13,basisEval2B56,basisEval2C14,basisEval2C15,basisEval2BE0,basisEval2C16,basisEval2B56,basisEval2C17,basisEval2C18,basisEval2C19,basisEval2B56,basisEval2C1A,basisEval2C1B,basisEval2B56,basisEval2C1C,basisEval2B56];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval2B56,basisEval2B5A,basisEval2B56,basisEval2B56,basisEval2C1D,basisEval2B62,basisEval2B56,basisEval2BF2,basisEval2B56,basisEval2B56,basisEval2C1E,basisEval2BF3,basisEval2B71,basisEval2B56,basisEval2B73,basisEval2C1F,basisEval2B56,basisEval2BF6,basisEval2B56,basisEval2B56,basisEval2C20,basisEval2C21,basisEval2C22,basisEval2B87,basisEval2B56,basisEval2C23,basisEval2B8B,basisEval2C24,basisEval2B56,basisEval2C25,basisEval2C26,basisEval2B56,basisEval2BFE,basisEval2B56,basisEval2B56,basisEval2C27,basisEval2C28,basisEval2C00,basisEval2C29,basisEval2BA6,basisEval2B56,basisEval2C2A,basisEval2C2B,basisEval2BAC,basisEval2C2C,basisEval2B56,basisEval2BB0,basisEval2C07,basisEval2C2D,basisEval2B56,basisEval2C2E,basisEval2C2F,basisEval2B56,basisEval2C0A,basisEval2B56,basisEval2B56,basisEval2C30,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2BD0,basisEval2B56,basisEval2C35,basisEval2C36,basisEval2C11,basisEval2BD8,basisEval2C37,basisEval2B56,basisEval2C38,basisEval2BDE,basisEval2C39,basisEval2C3A,basisEval2B56,basisEval2C3B,basisEval2C18,basisEval2C3C,basisEval2B56,basisEval2C3D,basisEval2C3E,basisEval2B56,basisEval2C1C,basisEval2B56,basisEval2B56];
          tensor[84] projParam2D35#1 = intermediateCons2C3F;
          real vdot2D36#1 = VDot<84>(femDofs26C1,projParam2D35);
          tensor[84] projParam2D37#1 = intermediateCons2C40;
          real vdot2D38#1 = VDot<84>(femDofs26C1,projParam2D37);
          tensor[84] projParam2D39#1 = intermediateCons2C41;
          real vdot2D3A#1 = VDot<84>(femDofs26C1,projParam2D39);
          tensor[3] probe_l_62D34#2 = <tensor[3]>[vdot2D36,vdot2D38,vdot2D3A];
          real op1_e3_l_82D43#1 = VDot<3>(probe_l_62D34,probe_l_62D34);
          real op1_e3_l_92D46#1 = Sqrt(op1_e3_l_82D43);
          real op1_e3_l_102D49#1 = RNeg(_t2B50);
          real op1_e3_l_112D4C#1 = RAdd(fBias2481,op1_e3_l_92D46);
          real _t2D4F#1 = RDiv(op1_e3_l_102D49,op1_e3_l_112D4C);
          bool _t2D52#1 = GT<real>(_t2D4F,fStrTh247D);
          if _t2D52 then goto ASSIGN2D56 else goto ASSIGN40DF
        ASSIGN2D56:  preds = [COND2D54]
          real _t2D55#1 = 0.1e1;
          bool _t2D57#1 = GTE<real>(_t2D55,fMaskTh247F);
          if _t2D57 then goto ASSIGN2D5B else goto ASSIGN40DE
        ASSIGN2D5B:  preds = [COND2D59]
          bool _t2D5A#1 = true;
          goto JOIN2D5E
        JOIN2D5E:  preds = [ASSIGN2D5B,ASSIGN40DE]
          bool _t2D5C#1 = phi(_t2D5A,_t2D5D)
          goto JOIN2D61
        JOIN2D61:  preds = [JOIN2D5E,ASSIGN40DF]
          bool _t2D5F#1 = phi(_t2D5C,_t2D60)
          goto JOIN2D64
        JOIN2D64:  preds = [JOIN2D61,ASSIGN40E0]
          bool _t2D62#1 = phi(_t2D5F,_t2D63)
          bool _t2D65#1 = BNot(_t2D62);
          if _t2D65 then goto SAVE2D68 else goto JOIN2D6A
        SAVE2D68:  preds = [COND2D67]
          self.rayN = rayN24AB;
          active
          goto JOIN2D6A
        JOIN2D6A:  preds = [*ACTIVE2D69,COND2D67]
          bool _t2D6B#1 = BNot(analytical248B);
          if _t2D6B then goto ASSIGN2E6E else goto ASSIGN3EA0
        ASSIGN2E6E:  preds = [COND2D6D]
          int ilit2D6F#1 = 84;
          int mulRes2D70#84 = IMul(_t246B,ilit2D6F);
          int addRes2D72#1 = mulRes2D70;
          int idx2D73#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D72);
          int ilit2D74#1 = 1;
          int addRes2D75#1 = IAdd(mulRes2D70,ilit2D74);
          int idx2D76#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D75);
          int ilit2D77#1 = 2;
          int addRes2D78#1 = IAdd(mulRes2D70,ilit2D77);
          int idx2D79#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D78);
          int ilit2D7A#1 = 3;
          int addRes2D7B#1 = IAdd(mulRes2D70,ilit2D7A);
          int idx2D7C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7B);
          int ilit2D7D#1 = 4;
          int addRes2D7E#1 = IAdd(mulRes2D70,ilit2D7D);
          int idx2D7F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7E);
          int ilit2D80#1 = 5;
          int addRes2D81#1 = IAdd(mulRes2D70,ilit2D80);
          int idx2D82#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D81);
          int ilit2D83#1 = 6;
          int addRes2D84#1 = IAdd(mulRes2D70,ilit2D83);
          int idx2D85#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D84);
          int ilit2D86#1 = 7;
          int addRes2D87#1 = IAdd(mulRes2D70,ilit2D86);
          int idx2D88#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D87);
          int ilit2D89#1 = 8;
          int addRes2D8A#1 = IAdd(mulRes2D70,ilit2D89);
          int idx2D8B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8A);
          int ilit2D8C#1 = 9;
          int addRes2D8D#1 = IAdd(mulRes2D70,ilit2D8C);
          int idx2D8E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8D);
          int ilit2D8F#1 = 10;
          int addRes2D90#1 = IAdd(mulRes2D70,ilit2D8F);
          int idx2D91#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D90);
          int ilit2D92#1 = 11;
          int addRes2D93#1 = IAdd(mulRes2D70,ilit2D92);
          int idx2D94#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D93);
          int ilit2D95#1 = 12;
          int addRes2D96#1 = IAdd(mulRes2D70,ilit2D95);
          int idx2D97#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D96);
          int ilit2D98#1 = 13;
          int addRes2D99#1 = IAdd(mulRes2D70,ilit2D98);
          int idx2D9A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D99);
          int ilit2D9B#1 = 14;
          int addRes2D9C#1 = IAdd(mulRes2D70,ilit2D9B);
          int idx2D9D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9C);
          int ilit2D9E#1 = 15;
          int addRes2D9F#1 = IAdd(mulRes2D70,ilit2D9E);
          int idx2DA0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9F);
          int ilit2DA1#1 = 16;
          int addRes2DA2#1 = IAdd(mulRes2D70,ilit2DA1);
          int idx2DA3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA2);
          int ilit2DA4#1 = 17;
          int addRes2DA5#1 = IAdd(mulRes2D70,ilit2DA4);
          int idx2DA6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA5);
          int ilit2DA7#1 = 18;
          int addRes2DA8#1 = IAdd(mulRes2D70,ilit2DA7);
          int idx2DA9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA8);
          int ilit2DAA#1 = 19;
          int addRes2DAB#1 = IAdd(mulRes2D70,ilit2DAA);
          int idx2DAC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAB);
          int ilit2DAD#1 = 20;
          int addRes2DAE#1 = IAdd(mulRes2D70,ilit2DAD);
          int idx2DAF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAE);
          int ilit2DB0#1 = 21;
          int addRes2DB1#1 = IAdd(mulRes2D70,ilit2DB0);
          int idx2DB2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB1);
          int ilit2DB3#1 = 22;
          int addRes2DB4#1 = IAdd(mulRes2D70,ilit2DB3);
          int idx2DB5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB4);
          int ilit2DB6#1 = 23;
          int addRes2DB7#1 = IAdd(mulRes2D70,ilit2DB6);
          int idx2DB8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB7);
          int ilit2DB9#1 = 24;
          int addRes2DBA#1 = IAdd(mulRes2D70,ilit2DB9);
          int idx2DBB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBA);
          int ilit2DBC#1 = 25;
          int addRes2DBD#1 = IAdd(mulRes2D70,ilit2DBC);
          int idx2DBE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBD);
          int ilit2DBF#1 = 26;
          int addRes2DC0#1 = IAdd(mulRes2D70,ilit2DBF);
          int idx2DC1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC0);
          int ilit2DC2#1 = 27;
          int addRes2DC3#1 = IAdd(mulRes2D70,ilit2DC2);
          int idx2DC4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC3);
          int ilit2DC5#1 = 28;
          int addRes2DC6#1 = IAdd(mulRes2D70,ilit2DC5);
          int idx2DC7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC6);
          int ilit2DC8#1 = 29;
          int addRes2DC9#1 = IAdd(mulRes2D70,ilit2DC8);
          int idx2DCA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC9);
          int ilit2DCB#1 = 30;
          int addRes2DCC#1 = IAdd(mulRes2D70,ilit2DCB);
          int idx2DCD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCC);
          int ilit2DCE#1 = 31;
          int addRes2DCF#1 = IAdd(mulRes2D70,ilit2DCE);
          int idx2DD0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCF);
          int ilit2DD1#1 = 32;
          int addRes2DD2#1 = IAdd(mulRes2D70,ilit2DD1);
          int idx2DD3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD2);
          int ilit2DD4#1 = 33;
          int addRes2DD5#1 = IAdd(mulRes2D70,ilit2DD4);
          int idx2DD6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD5);
          int ilit2DD7#1 = 34;
          int addRes2DD8#1 = IAdd(mulRes2D70,ilit2DD7);
          int idx2DD9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD8);
          int ilit2DDA#1 = 35;
          int addRes2DDB#1 = IAdd(mulRes2D70,ilit2DDA);
          int idx2DDC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDB);
          int ilit2DDD#1 = 36;
          int addRes2DDE#1 = IAdd(mulRes2D70,ilit2DDD);
          int idx2DDF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDE);
          int ilit2DE0#1 = 37;
          int addRes2DE1#1 = IAdd(mulRes2D70,ilit2DE0);
          int idx2DE2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE1);
          int ilit2DE3#1 = 38;
          int addRes2DE4#1 = IAdd(mulRes2D70,ilit2DE3);
          int idx2DE5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE4);
          int ilit2DE6#1 = 39;
          int addRes2DE7#1 = IAdd(mulRes2D70,ilit2DE6);
          int idx2DE8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE7);
          int ilit2DE9#1 = 40;
          int addRes2DEA#1 = IAdd(mulRes2D70,ilit2DE9);
          int idx2DEB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DEA);
          int ilit2DEC#1 = 41;
          int addRes2DED#1 = IAdd(mulRes2D70,ilit2DEC);
          int idx2DEE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DED);
          int ilit2DEF#1 = 42;
          int addRes2DF0#1 = IAdd(mulRes2D70,ilit2DEF);
          int idx2DF1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF0);
          int ilit2DF2#1 = 43;
          int addRes2DF3#1 = IAdd(mulRes2D70,ilit2DF2);
          int idx2DF4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF3);
          int ilit2DF5#1 = 44;
          int addRes2DF6#1 = IAdd(mulRes2D70,ilit2DF5);
          int idx2DF7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF6);
          int ilit2DF8#1 = 45;
          int addRes2DF9#1 = IAdd(mulRes2D70,ilit2DF8);
          int idx2DFA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF9);
          int ilit2DFB#1 = 46;
          int addRes2DFC#1 = IAdd(mulRes2D70,ilit2DFB);
          int idx2DFD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFC);
          int ilit2DFE#1 = 47;
          int addRes2DFF#1 = IAdd(mulRes2D70,ilit2DFE);
          int idx2E00#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFF);
          int ilit2E01#1 = 48;
          int addRes2E02#1 = IAdd(mulRes2D70,ilit2E01);
          int idx2E03#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E02);
          int ilit2E04#1 = 49;
          int addRes2E05#1 = IAdd(mulRes2D70,ilit2E04);
          int idx2E06#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E05);
          int ilit2E07#1 = 50;
          int addRes2E08#1 = IAdd(mulRes2D70,ilit2E07);
          int idx2E09#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E08);
          int ilit2E0A#1 = 51;
          int addRes2E0B#1 = IAdd(mulRes2D70,ilit2E0A);
          int idx2E0C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0B);
          int ilit2E0D#1 = 52;
          int addRes2E0E#1 = IAdd(mulRes2D70,ilit2E0D);
          int idx2E0F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0E);
          int ilit2E10#1 = 53;
          int addRes2E11#1 = IAdd(mulRes2D70,ilit2E10);
          int idx2E12#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E11);
          int ilit2E13#1 = 54;
          int addRes2E14#1 = IAdd(mulRes2D70,ilit2E13);
          int idx2E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E14);
          int ilit2E16#1 = 55;
          int addRes2E17#1 = IAdd(mulRes2D70,ilit2E16);
          int idx2E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E17);
          int ilit2E19#1 = 56;
          int addRes2E1A#1 = IAdd(mulRes2D70,ilit2E19);
          int idx2E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1A);
          int ilit2E1C#1 = 57;
          int addRes2E1D#1 = IAdd(mulRes2D70,ilit2E1C);
          int idx2E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1D);
          int ilit2E1F#1 = 58;
          int addRes2E20#1 = IAdd(mulRes2D70,ilit2E1F);
          int idx2E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E20);
          int ilit2E22#1 = 59;
          int addRes2E23#1 = IAdd(mulRes2D70,ilit2E22);
          int idx2E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E23);
          int ilit2E25#1 = 60;
          int addRes2E26#1 = IAdd(mulRes2D70,ilit2E25);
          int idx2E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E26);
          int ilit2E28#1 = 61;
          int addRes2E29#1 = IAdd(mulRes2D70,ilit2E28);
          int idx2E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E29);
          int ilit2E2B#1 = 62;
          int addRes2E2C#1 = IAdd(mulRes2D70,ilit2E2B);
          int idx2E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2C);
          int ilit2E2E#1 = 63;
          int addRes2E2F#1 = IAdd(mulRes2D70,ilit2E2E);
          int idx2E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2F);
          int ilit2E31#1 = 64;
          int addRes2E32#1 = IAdd(mulRes2D70,ilit2E31);
          int idx2E33#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E32);
          int ilit2E34#1 = 65;
          int addRes2E35#1 = IAdd(mulRes2D70,ilit2E34);
          int idx2E36#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E35);
          int ilit2E37#1 = 66;
          int addRes2E38#1 = IAdd(mulRes2D70,ilit2E37);
          int idx2E39#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E38);
          int ilit2E3A#1 = 67;
          int addRes2E3B#1 = IAdd(mulRes2D70,ilit2E3A);
          int idx2E3C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3B);
          int ilit2E3D#1 = 68;
          int addRes2E3E#1 = IAdd(mulRes2D70,ilit2E3D);
          int idx2E3F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3E);
          int ilit2E40#1 = 69;
          int addRes2E41#1 = IAdd(mulRes2D70,ilit2E40);
          int idx2E42#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E41);
          int ilit2E43#1 = 70;
          int addRes2E44#1 = IAdd(mulRes2D70,ilit2E43);
          int idx2E45#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E44);
          int ilit2E46#1 = 71;
          int addRes2E47#1 = IAdd(mulRes2D70,ilit2E46);
          int idx2E48#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E47);
          int ilit2E49#1 = 72;
          int addRes2E4A#1 = IAdd(mulRes2D70,ilit2E49);
          int idx2E4B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4A);
          int ilit2E4C#1 = 73;
          int addRes2E4D#1 = IAdd(mulRes2D70,ilit2E4C);
          int idx2E4E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4D);
          int ilit2E4F#1 = 74;
          int addRes2E50#1 = IAdd(mulRes2D70,ilit2E4F);
          int idx2E51#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E50);
          int ilit2E52#1 = 75;
          int addRes2E53#1 = IAdd(mulRes2D70,ilit2E52);
          int idx2E54#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E53);
          int ilit2E55#1 = 76;
          int addRes2E56#1 = IAdd(mulRes2D70,ilit2E55);
          int idx2E57#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E56);
          int ilit2E58#1 = 77;
          int addRes2E59#1 = IAdd(mulRes2D70,ilit2E58);
          int idx2E5A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E59);
          int ilit2E5B#1 = 78;
          int addRes2E5C#1 = IAdd(mulRes2D70,ilit2E5B);
          int idx2E5D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5C);
          int ilit2E5E#1 = 79;
          int addRes2E5F#1 = IAdd(mulRes2D70,ilit2E5E);
          int idx2E60#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5F);
          int ilit2E61#1 = 80;
          int addRes2E62#1 = IAdd(mulRes2D70,ilit2E61);
          int idx2E63#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E62);
          int ilit2E64#1 = 81;
          int addRes2E65#1 = IAdd(mulRes2D70,ilit2E64);
          int idx2E66#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E65);
          int ilit2E67#1 = 82;
          int addRes2E68#1 = IAdd(mulRes2D70,ilit2E67);
          int idx2E69#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E68);
          int ilit2E6A#1 = 83;
          int addRes2E6B#1 = IAdd(mulRes2D70,ilit2E6A);
          int idx2E6C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E6B);
          int ilit2F6F#84 = 1;
          int idx2F71#1 = idx2D73;
          int mulRes2F72#1 = IMul(ilit2F6F,idx2F71);
          int idx2F73#1 = idx2D76;
          int mulRes2F74#1 = IMul(ilit2F6F,idx2F73);
          int idx2F76#1 = idx2D79;
          int mulRes2F77#1 = IMul(ilit2F6F,idx2F76);
          int idx2F79#1 = idx2D7C;
          int mulRes2F7A#1 = IMul(ilit2F6F,idx2F79);
          int idx2F7C#1 = idx2D7F;
          int mulRes2F7D#1 = IMul(ilit2F6F,idx2F7C);
          int idx2F7F#1 = idx2D82;
          int mulRes2F80#1 = IMul(ilit2F6F,idx2F7F);
          int idx2F82#1 = idx2D85;
          int mulRes2F83#1 = IMul(ilit2F6F,idx2F82);
          int idx2F85#1 = idx2D88;
          int mulRes2F86#1 = IMul(ilit2F6F,idx2F85);
          int idx2F88#1 = idx2D8B;
          int mulRes2F89#1 = IMul(ilit2F6F,idx2F88);
          int idx2F8B#1 = idx2D8E;
          int mulRes2F8C#1 = IMul(ilit2F6F,idx2F8B);
          int idx2F8E#1 = idx2D91;
          int mulRes2F8F#1 = IMul(ilit2F6F,idx2F8E);
          int idx2F91#1 = idx2D94;
          int mulRes2F92#1 = IMul(ilit2F6F,idx2F91);
          int idx2F94#1 = idx2D97;
          int mulRes2F95#1 = IMul(ilit2F6F,idx2F94);
          int idx2F97#1 = idx2D9A;
          int mulRes2F98#1 = IMul(ilit2F6F,idx2F97);
          int idx2F9A#1 = idx2D9D;
          int mulRes2F9B#1 = IMul(ilit2F6F,idx2F9A);
          int idx2F9D#1 = idx2DA0;
          int mulRes2F9E#1 = IMul(ilit2F6F,idx2F9D);
          int idx2FA0#1 = idx2DA3;
          int mulRes2FA1#1 = IMul(ilit2F6F,idx2FA0);
          int idx2FA3#1 = idx2DA6;
          int mulRes2FA4#1 = IMul(ilit2F6F,idx2FA3);
          int idx2FA6#1 = idx2DA9;
          int mulRes2FA7#1 = IMul(ilit2F6F,idx2FA6);
          int idx2FA9#1 = idx2DAC;
          int mulRes2FAA#1 = IMul(ilit2F6F,idx2FA9);
          int idx2FAC#1 = idx2DAF;
          int mulRes2FAD#1 = IMul(ilit2F6F,idx2FAC);
          int idx2FAF#1 = idx2DB2;
          int mulRes2FB0#1 = IMul(ilit2F6F,idx2FAF);
          int idx2FB2#1 = idx2DB5;
          int mulRes2FB3#1 = IMul(ilit2F6F,idx2FB2);
          int idx2FB5#1 = idx2DB8;
          int mulRes2FB6#1 = IMul(ilit2F6F,idx2FB5);
          int idx2FB8#1 = idx2DBB;
          int mulRes2FB9#1 = IMul(ilit2F6F,idx2FB8);
          int idx2FBB#1 = idx2DBE;
          int mulRes2FBC#1 = IMul(ilit2F6F,idx2FBB);
          int idx2FBE#1 = idx2DC1;
          int mulRes2FBF#1 = IMul(ilit2F6F,idx2FBE);
          int idx2FC1#1 = idx2DC4;
          int mulRes2FC2#1 = IMul(ilit2F6F,idx2FC1);
          int idx2FC4#1 = idx2DC7;
          int mulRes2FC5#1 = IMul(ilit2F6F,idx2FC4);
          int idx2FC7#1 = idx2DCA;
          int mulRes2FC8#1 = IMul(ilit2F6F,idx2FC7);
          int idx2FCA#1 = idx2DCD;
          int mulRes2FCB#1 = IMul(ilit2F6F,idx2FCA);
          int idx2FCD#1 = idx2DD0;
          int mulRes2FCE#1 = IMul(ilit2F6F,idx2FCD);
          int idx2FD0#1 = idx2DD3;
          int mulRes2FD1#1 = IMul(ilit2F6F,idx2FD0);
          int idx2FD3#1 = idx2DD6;
          int mulRes2FD4#1 = IMul(ilit2F6F,idx2FD3);
          int idx2FD6#1 = idx2DD9;
          int mulRes2FD7#1 = IMul(ilit2F6F,idx2FD6);
          int idx2FD9#1 = idx2DDC;
          int mulRes2FDA#1 = IMul(ilit2F6F,idx2FD9);
          int idx2FDC#1 = idx2DDF;
          int mulRes2FDD#1 = IMul(ilit2F6F,idx2FDC);
          int idx2FDF#1 = idx2DE2;
          int mulRes2FE0#1 = IMul(ilit2F6F,idx2FDF);
          int idx2FE2#1 = idx2DE5;
          int mulRes2FE3#1 = IMul(ilit2F6F,idx2FE2);
          int idx2FE5#1 = idx2DE8;
          int mulRes2FE6#1 = IMul(ilit2F6F,idx2FE5);
          int idx2FE8#1 = idx2DEB;
          int mulRes2FE9#1 = IMul(ilit2F6F,idx2FE8);
          int idx2FEB#1 = idx2DEE;
          int mulRes2FEC#1 = IMul(ilit2F6F,idx2FEB);
          int idx2FEE#1 = idx2DF1;
          int mulRes2FEF#1 = IMul(ilit2F6F,idx2FEE);
          int idx2FF1#1 = idx2DF4;
          int mulRes2FF2#1 = IMul(ilit2F6F,idx2FF1);
          int idx2FF4#1 = idx2DF7;
          int mulRes2FF5#1 = IMul(ilit2F6F,idx2FF4);
          int idx2FF7#1 = idx2DFA;
          int mulRes2FF8#1 = IMul(ilit2F6F,idx2FF7);
          int idx2FFA#1 = idx2DFD;
          int mulRes2FFB#1 = IMul(ilit2F6F,idx2FFA);
          int idx2FFD#1 = idx2E00;
          int mulRes2FFE#1 = IMul(ilit2F6F,idx2FFD);
          int idx3000#1 = idx2E03;
          int mulRes3001#1 = IMul(ilit2F6F,idx3000);
          int idx3003#1 = idx2E06;
          int mulRes3004#1 = IMul(ilit2F6F,idx3003);
          int idx3006#1 = idx2E09;
          int mulRes3007#1 = IMul(ilit2F6F,idx3006);
          int idx3009#1 = idx2E0C;
          int mulRes300A#1 = IMul(ilit2F6F,idx3009);
          int idx300C#1 = idx2E0F;
          int mulRes300D#1 = IMul(ilit2F6F,idx300C);
          int idx300F#1 = idx2E12;
          int mulRes3010#1 = IMul(ilit2F6F,idx300F);
          int idx3012#1 = idx2E15;
          int mulRes3013#1 = IMul(ilit2F6F,idx3012);
          int idx3015#1 = idx2E18;
          int mulRes3016#1 = IMul(ilit2F6F,idx3015);
          int idx3018#1 = idx2E1B;
          int mulRes3019#1 = IMul(ilit2F6F,idx3018);
          int idx301B#1 = idx2E1E;
          int mulRes301C#1 = IMul(ilit2F6F,idx301B);
          int idx301E#1 = idx2E21;
          int mulRes301F#1 = IMul(ilit2F6F,idx301E);
          int idx3021#1 = idx2E24;
          int mulRes3022#1 = IMul(ilit2F6F,idx3021);
          int idx3024#1 = idx2E27;
          int mulRes3025#1 = IMul(ilit2F6F,idx3024);
          int idx3027#1 = idx2E2A;
          int mulRes3028#1 = IMul(ilit2F6F,idx3027);
          int idx302A#1 = idx2E2D;
          int mulRes302B#1 = IMul(ilit2F6F,idx302A);
          int idx302D#1 = idx2E30;
          int mulRes302E#1 = IMul(ilit2F6F,idx302D);
          int idx3030#1 = idx2E33;
          int mulRes3031#1 = IMul(ilit2F6F,idx3030);
          int idx3033#1 = idx2E36;
          int mulRes3034#1 = IMul(ilit2F6F,idx3033);
          int idx3036#1 = idx2E39;
          int mulRes3037#1 = IMul(ilit2F6F,idx3036);
          int idx3039#1 = idx2E3C;
          int mulRes303A#1 = IMul(ilit2F6F,idx3039);
          int idx303C#1 = idx2E3F;
          int mulRes303D#1 = IMul(ilit2F6F,idx303C);
          int idx303F#1 = idx2E42;
          int mulRes3040#1 = IMul(ilit2F6F,idx303F);
          int idx3042#1 = idx2E45;
          int mulRes3043#1 = IMul(ilit2F6F,idx3042);
          int idx3045#1 = idx2E48;
          int mulRes3046#1 = IMul(ilit2F6F,idx3045);
          int idx3048#1 = idx2E4B;
          int mulRes3049#1 = IMul(ilit2F6F,idx3048);
          int idx304B#1 = idx2E4E;
          int mulRes304C#1 = IMul(ilit2F6F,idx304B);
          int idx304E#1 = idx2E51;
          int mulRes304F#1 = IMul(ilit2F6F,idx304E);
          int idx3051#1 = idx2E54;
          int mulRes3052#1 = IMul(ilit2F6F,idx3051);
          int idx3054#1 = idx2E57;
          int mulRes3055#1 = IMul(ilit2F6F,idx3054);
          int idx3057#1 = idx2E5A;
          int mulRes3058#1 = IMul(ilit2F6F,idx3057);
          int idx305A#1 = idx2E5D;
          int mulRes305B#1 = IMul(ilit2F6F,idx305A);
          int idx305D#1 = idx2E60;
          int mulRes305E#1 = IMul(ilit2F6F,idx305D);
          int idx3060#1 = idx2E63;
          int mulRes3061#1 = IMul(ilit2F6F,idx3060);
          int idx3063#1 = idx2E66;
          int mulRes3064#1 = IMul(ilit2F6F,idx3063);
          int idx3066#1 = idx2E69;
          int mulRes3067#1 = IMul(ilit2F6F,idx3066);
          int idx3069#1 = idx2E6C;
          int mulRes306A#1 = IMul(ilit2F6F,idx3069);
          real dof306B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F72);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F74);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F77);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7A);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7D);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F80);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F83);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F86);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F89);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8C);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8F);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F92);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F95);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F98);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9B);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9E);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA1);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA4);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA7);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAA);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAD);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB0);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB3);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB6);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB9);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBC);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBF);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC2);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC5);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC8);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCB);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCE);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD1);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD4);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD7);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDA);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDD);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE0);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE3);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE6);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE9);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEC);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEF);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF2);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF5);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF8);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFB);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFE);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3001);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3004);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3007);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300A);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300D);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3010);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3013);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3016);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3019);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301C);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301F);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3022);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3025);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3028);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302B);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302E);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3031);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3034);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3037);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303A);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303D);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3040);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3043);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3046);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3049);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304C);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304F);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3052);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3055);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3058);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305B);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305E);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3061);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3064);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3067);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes306A);
          tensor[84] dofs30BF#1 = <tensor[84]>[dof306B,dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE];
          tensor[84] femDofs2F6E#12 = dofs30BF;
          real varAcc3213#4 = VIndex<3,0>(pos24B7);
          real varAcc3214#4 = VIndex<3,1>(pos24B7);
          real varAcc3215#4 = VIndex<3,2>(pos24B7);
          real basisEval3216#294 = 0.e0;
          real coeff3217#31 = 0.2e1;
          real one3218#38 = 0.1e1;
          real prod3219#5 = RMul(one3218,one3218);
          real prod321A#2 = RMul(one3218,prod3219);
          real basisEval321B#3 = RMul(coeff3217,prod321A);
          real iden321C#5 = varAcc3215;
          real prod321D#4 = RMul(one3218,iden321C);
          real prod321E#3 = RMul(one3218,prod321D);
          real basisEval321F#4 = RMul(coeff3217,prod321E);
          real iden3220#5 = varAcc3214;
          real prod3221#4 = RMul(iden3220,one3218);
          real prod3222#3 = RMul(one3218,prod3221);
          real basisEval3223#4 = RMul(coeff3217,prod3222);
          real coeff3224#22 = 0.6e1;
          real iden3225#11 = varAcc3213;
          real prod3226#3 = RMul(iden3225,prod3219);
          real basisEval3227#1 = RMul(coeff3224,prod3226);
          real prod23228#4 = RMul(iden321C,varAcc3215);
          real prod3229#3 = RMul(one3218,prod23228);
          real prod322A#4 = RMul(one3218,prod3229);
          real basisEval322B#2 = RMul(coeff3217,prod322A);
          real prod322C#3 = RMul(iden3220,iden321C);
          real prod322D#3 = RMul(one3218,prod322C);
          real basisEval322E#3 = RMul(coeff3217,prod322D);
          real prod2322F#4 = RMul(iden3220,varAcc3214);
          real prod3230#3 = RMul(prod2322F,one3218);
          real prod3231#4 = RMul(one3218,prod3230);
          real basisEval3232#2 = RMul(coeff3217,prod3231);
          real prod3233#3 = RMul(iden3225,prod321D);
          real basisEval3234#2 = RMul(coeff3224,prod3233);
          real prod3235#3 = RMul(iden3225,prod3221);
          real basisEval3236#2 = RMul(coeff3224,prod3235);
          real coeff3237#15 = 0.12e2;
          real prod23238#7 = RMul(iden3225,varAcc3213);
          real prod3239#4 = RMul(prod23238,prod3219);
          real basisEval323A#1 = RMul(coeff3237,prod3239);
          real prod3323B#3 = RMul(prod23228,varAcc3215);
          real prod323C#2 = RMul(one3218,prod3323B);
          real prod323D#4 = RMul(one3218,prod323C);
          real basisEval323E#2 = RMul(coeff3217,prod323D);
          real prod323F#2 = RMul(iden3220,prod23228);
          real prod3240#4 = RMul(one3218,prod323F);
          real basisEval3241#2 = RMul(coeff3217,prod3240);
          real prod3242#2 = RMul(prod2322F,iden321C);
          real prod3243#4 = RMul(one3218,prod3242);
          real basisEval3244#2 = RMul(coeff3217,prod3243);
          real prod33245#3 = RMul(prod2322F,varAcc3214);
          real prod3246#2 = RMul(prod33245,one3218);
          real prod3247#4 = RMul(one3218,prod3246);
          real basisEval3248#2 = RMul(coeff3217,prod3247);
          real prod3249#4 = RMul(iden3225,prod3229);
          real basisEval324A#2 = RMul(coeff3224,prod3249);
          real prod324B#2 = RMul(iden3225,prod322C);
          real basisEval324C#3 = RMul(coeff3224,prod324B);
          real prod324D#4 = RMul(iden3225,prod3230);
          real basisEval324E#2 = RMul(coeff3224,prod324D);
          real prod324F#4 = RMul(prod23238,prod321D);
          real basisEval3250#1 = RMul(coeff3237,prod324F);
          real prod3251#4 = RMul(prod23238,prod3221);
          real basisEval3252#1 = RMul(coeff3237,prod3251);
          real coeff3253#9 = 0.20e2;
          real prod33254#4 = RMul(prod23238,varAcc3213);
          real prod3255#4 = RMul(prod33254,prod3219);
          real basisEval3256#1 = RMul(coeff3253,prod3255);
          real prod43257#1 = RMul(prod3323B,varAcc3215);
          real prod3258#1 = RMul(one3218,prod43257);
          real prod3259#4 = RMul(one3218,prod3258);
          real basisEval325A#2 = RMul(coeff3217,prod3259);
          real prod325B#1 = RMul(iden3220,prod3323B);
          real prod325C#5 = RMul(one3218,prod325B);
          real basisEval325D#2 = RMul(coeff3217,prod325C);
          real prod325E#1 = RMul(prod2322F,prod23228);
          real prod325F#4 = RMul(one3218,prod325E);
          real basisEval3260#1 = RMul(coeff3217,prod325F);
          real prod3261#1 = RMul(prod33245,iden321C);
          real prod3262#5 = RMul(one3218,prod3261);
          real basisEval3263#2 = RMul(coeff3217,prod3262);
          real prod43264#1 = RMul(prod33245,varAcc3214);
          real prod3265#1 = RMul(prod43264,one3218);
          real prod3266#4 = RMul(one3218,prod3265);
          real basisEval3267#2 = RMul(coeff3217,prod3266);
          real prod3268#5 = RMul(iden3225,prod323C);
          real basisEval3269#1 = RMul(coeff3224,prod3268);
          real prod326A#3 = RMul(iden3225,prod323F);
          real basisEval326B#4 = RMul(coeff3224,prod326A);
          real prod326C#3 = RMul(iden3225,prod3242);
          real basisEval326D#4 = RMul(coeff3224,prod326C);
          real prod326E#5 = RMul(iden3225,prod3246);
          real basisEval326F#1 = RMul(coeff3224,prod326E);
          real prod3270#4 = RMul(prod23238,prod3229);
          real basisEval3271#2 = RMul(coeff3237,prod3270);
          real prod3272#3 = RMul(prod23238,prod322C);
          real basisEval3273#1 = RMul(coeff3237,prod3272);
          real prod3274#4 = RMul(prod23238,prod3230);
          real basisEval3275#2 = RMul(coeff3237,prod3274);
          real prod3276#5 = RMul(prod33254,prod321D);
          real basisEval3277#1 = RMul(coeff3253,prod3276);
          real prod3278#5 = RMul(prod33254,prod3221);
          real basisEval3279#1 = RMul(coeff3253,prod3278);
          real coeff327A#3 = 0.30e2;
          real prod4327B#1 = RMul(prod33254,varAcc3213);
          real prod327C#4 = RMul(prod4327B,prod3219);
          real basisEval327D#1 = RMul(coeff327A,prod327C);
          real basisEval327E#3 = RMul(one3218,prod321A);
          real basisEval327F#1 = RMul(one3218,prod321E);
          real basisEval3280#4 = RMul(coeff3217,prod3226);
          real basisEval3281#1 = RMul(one3218,prod322A);
          real coeff3282#12 = 0.3e1;
          real basisEval3283#2 = RMul(coeff3282,prod3231);
          real basisEval3284#3 = RMul(coeff3217,prod3233);
          real coeff3285#16 = 0.4e1;
          real basisEval3286#1 = RMul(coeff3285,prod3235);
          real basisEval3287#2 = RMul(coeff3282,prod3239);
          real basisEval3288#1 = RMul(one3218,prod323D);
          real basisEval3289#1 = RMul(coeff3282,prod3243);
          real basisEval328A#2 = RMul(coeff3285,prod3247);
          real basisEval328B#2 = RMul(coeff3217,prod3249);
          real basisEval328C#3 = RMul(coeff3285,prod324B);
          real basisEval328D#1 = RMul(coeff3282,prod324F);
          real basisEval328E#2 = RMul(coeff3224,prod3251);
          real basisEval328F#2 = RMul(coeff3285,prod3255);
          real basisEval3290#1 = RMul(one3218,prod3259);
          real basisEval3291#2 = RMul(coeff3282,prod325F);
          real basisEval3292#1 = RMul(coeff3285,prod3262);
          real coeff3293#3 = 0.5e1;
          real basisEval3294#2 = RMul(coeff3293,prod3266);
          real basisEval3295#2 = RMul(coeff3217,prod3268);
          real basisEval3296#1 = RMul(coeff3285,prod326A);
          real coeff3297#6 = 0.8e1;
          real basisEval3298#1 = RMul(coeff3297,prod326E);
          real basisEval3299#2 = RMul(coeff3282,prod3270);
          real basisEval329A#4 = RMul(coeff3224,prod3272);
          real coeff329B#3 = 0.9e1;
          real basisEval329C#1 = RMul(coeff329B,prod3274);
          real basisEval329D#1 = RMul(coeff3285,prod3276);
          real basisEval329E#1 = RMul(coeff3297,prod3278);
          real basisEval329F#2 = RMul(coeff3293,prod327C);
          real basisEval32A0#1 = RMul(one3218,prod3222);
          real basisEval32A1#2 = RMul(coeff3282,prod322A);
          real basisEval32A2#1 = RMul(one3218,prod3231);
          real basisEval32A3#1 = RMul(coeff3285,prod3233);
          real basisEval32A4#3 = RMul(coeff3217,prod3235);
          real basisEval32A5#2 = RMul(coeff3285,prod323D);
          real basisEval32A6#1 = RMul(coeff3282,prod3240);
          real basisEval32A7#1 = RMul(one3218,prod3247);
          real basisEval32A8#2 = RMul(coeff3217,prod324D);
          real basisEval32A9#2 = RMul(coeff3224,prod324F);
          real basisEval32AA#1 = RMul(coeff3282,prod3251);
          real basisEval32AB#2 = RMul(coeff3293,prod3259);
          real basisEval32AC#1 = RMul(coeff3285,prod325C);
          real basisEval32AD#1 = RMul(one3218,prod3266);
          real basisEval32AE#1 = RMul(coeff3297,prod3268);
          real basisEval32AF#1 = RMul(coeff3285,prod326C);
          real basisEval32B0#2 = RMul(coeff3217,prod326E);
          real basisEval32B1#1 = RMul(coeff329B,prod3270);
          real basisEval32B2#2 = RMul(coeff3282,prod3274);
          real basisEval32B3#1 = RMul(coeff3297,prod3276);
          real basisEval32B4#1 = RMul(coeff3285,prod3278);
          real basisEval32B5#1 = RMul(coeff3224,prod3222);
          real basisEval32B6#2 = RMul(coeff3224,prod322D);
          real basisEval32B7#1 = RMul(coeff3237,prod3231);
          real basisEval32B8#2 = RMul(coeff3217,prod3239);
          real basisEval32B9#2 = RMul(coeff3224,prod3240);
          real basisEval32BA#1 = RMul(coeff3237,prod3243);
          real basisEval32BB#1 = RMul(coeff3253,prod3247);
          real basisEval32BC#1 = RMul(coeff3237,prod324D);
          real basisEval32BD#2 = RMul(coeff3217,prod324F);
          real basisEval32BE#2 = RMul(coeff3217,prod3255);
          real basisEval32BF#1 = RMul(coeff3224,prod325C);
          real basisEval32C0#2 = RMul(coeff3237,prod325F);
          real basisEval32C1#1 = RMul(coeff3253,prod3262);
          real basisEval32C2#1 = RMul(coeff327A,prod3266);
          real basisEval32C3#1 = RMul(coeff3237,prod326C);
          real basisEval32C4#1 = RMul(coeff3253,prod326E);
          real basisEval32C5#1 = RMul(coeff3217,prod3270);
          real basisEval32C6#2 = RMul(coeff3217,prod3276);
          real basisEval32C7#1 = RMul(coeff3224,prod3278);
          real basisEval32C8#2 = RMul(coeff3217,prod327C);
          real basisEval32C9#1 = RMul(one3218,prod3226);
          real basisEval32CA#1 = RMul(coeff3285,prod322D);
          real basisEval32CB#1 = RMul(one3218,prod3239);
          real basisEval32CC#2 = RMul(coeff3224,prod3243);
          real basisEval32CD#1 = RMul(coeff3282,prod3249);
          real basisEval32CE#1 = RMul(coeff3282,prod324D);
          real basisEval32CF#2 = RMul(coeff3217,prod3251);
          real basisEval32D0#1 = RMul(one3218,prod3255);
          real basisEval32D1#1 = RMul(coeff3297,prod325C);
          real basisEval32D2#1 = RMul(coeff329B,prod325F);
          real basisEval32D3#1 = RMul(coeff3297,prod3262);
          real basisEval32D4#1 = RMul(coeff3285,prod3268);
          real basisEval32D5#1 = RMul(coeff3285,prod326E);
          real basisEval32D6#1 = RMul(coeff3285,prod3272);
          real basisEval32D7#2 = RMul(coeff3217,prod3278);
          real basisEval32D8#1 = RMul(one3218,prod327C);
          real basisEval32D9#1 = RMul(coeff3224,prod321E);
          real basisEval32DA#1 = RMul(coeff3237,prod322A);
          real basisEval32DB#1 = RMul(coeff3253,prod323D);
          real basisEval32DC#1 = RMul(coeff3237,prod3240);
          real basisEval32DD#1 = RMul(coeff3237,prod3249);
          real basisEval32DE#1 = RMul(coeff327A,prod3259);
          real basisEval32DF#1 = RMul(coeff3253,prod325C);
          real basisEval32E0#1 = RMul(coeff3224,prod3262);
          real basisEval32E1#1 = RMul(coeff3253,prod3268);
          real basisEval32E2#1 = RMul(coeff3237,prod326A);
          real basisEval32E3#1 = RMul(coeff3217,prod3274);
          real basisEval32E4#1 = RMul(coeff3224,prod3276);
          tensor[84] intermediateCons32E5#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3227,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval322E,basisEval3232,basisEval3234,basisEval3236,basisEval323A,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval3241,basisEval3244,basisEval3248,basisEval324A,basisEval324C,basisEval324E,basisEval3250,basisEval3252,basisEval3256,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval325D,basisEval3260,basisEval3263,basisEval3267,basisEval3269,basisEval326B,basisEval326D,basisEval326F,basisEval3271,basisEval3273,basisEval3275,basisEval3277,basisEval3279,basisEval327D];
          tensor[84] intermediateCons32E6#2 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327F,basisEval3223,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3281,basisEval322E,basisEval3283,basisEval3216,basisEval3284,basisEval3286,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3288,basisEval3241,basisEval3289,basisEval328A,basisEval3216,basisEval328B,basisEval328C,basisEval324E,basisEval3216,basisEval328D,basisEval328E,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3290,basisEval325D,basisEval3291,basisEval3292,basisEval3294,basisEval3216,basisEval3295,basisEval3296,basisEval326D,basisEval3298,basisEval3216,basisEval3299,basisEval329A,basisEval329C,basisEval3216,basisEval329D,basisEval329E,basisEval3216,basisEval329F,basisEval3216];
          tensor[84] intermediateCons32E7#2 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32A0,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval322E,basisEval32A2,basisEval3216,basisEval32A3,basisEval32A4,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32A6,basisEval3244,basisEval32A7,basisEval3216,basisEval324A,basisEval328C,basisEval32A8,basisEval3216,basisEval32A9,basisEval32AA,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32AC,basisEval3291,basisEval3263,basisEval32AD,basisEval3216,basisEval32AE,basisEval326B,basisEval32AF,basisEval32B0,basisEval3216,basisEval32B1,basisEval329A,basisEval32B2,basisEval3216,basisEval32B3,basisEval32B4,basisEval3216,basisEval329F,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E8#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32B5,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval32B6,basisEval32B7,basisEval3216,basisEval3216,basisEval3284,basisEval3236,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval32B9,basisEval32BA,basisEval32BB,basisEval3216,basisEval3216,basisEval328B,basisEval324C,basisEval32BC,basisEval3216,basisEval3216,basisEval32BD,basisEval328E,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval32BF,basisEval32C0,basisEval32C1,basisEval32C2,basisEval3216,basisEval3216,basisEval3295,basisEval326B,basisEval32C3,basisEval32C4,basisEval3216,basisEval3216,basisEval32C5,basisEval329A,basisEval3275,basisEval3216,basisEval3216,basisEval32C6,basisEval32C7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E9#2 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3216,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval32CA,basisEval3283,basisEval3216,basisEval3216,basisEval3284,basisEval32A4,basisEval3216,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32B9,basisEval32CC,basisEval328A,basisEval3216,basisEval3216,basisEval32CD,basisEval328C,basisEval32CE,basisEval3216,basisEval3216,basisEval32BD,basisEval32CF,basisEval3216,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32D1,basisEval32D2,basisEval32D3,basisEval3294,basisEval3216,basisEval3216,basisEval32D4,basisEval326B,basisEval326D,basisEval32D5,basisEval3216,basisEval3216,basisEval3299,basisEval32D6,basisEval32B2,basisEval3216,basisEval3216,basisEval32C6,basisEval32D7,basisEval3216,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32EA#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32D9,basisEval3223,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DA,basisEval32B6,basisEval3232,basisEval3216,basisEval3216,basisEval3234,basisEval32A4,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DB,basisEval32DC,basisEval32CC,basisEval3248,basisEval3216,basisEval3216,basisEval32DD,basisEval324C,basisEval32A8,basisEval3216,basisEval3216,basisEval32A9,basisEval32CF,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DE,basisEval32DF,basisEval32C0,basisEval32E0,basisEval3267,basisEval3216,basisEval3216,basisEval32E1,basisEval32E2,basisEval326D,basisEval32B0,basisEval3216,basisEval3216,basisEval3271,basisEval329A,basisEval32E3,basisEval3216,basisEval3216,basisEval32E4,basisEval32D7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] projParam33CD#1 = intermediateCons32E5;
          real vdot33CE#1 = VDot<84>(femDofs2F6E,projParam33CD);
          tensor[84] projParam33CF#1 = intermediateCons32E6;
          real vdot33D0#1 = VDot<84>(femDofs2F6E,projParam33CF);
          tensor[84] projParam33D1#1 = intermediateCons32E7;
          real vdot33D2#1 = VDot<84>(femDofs2F6E,projParam33D1);
          tensor[3] tensor33D3#1 = <tensor[3]>[vdot33CE,vdot33D0,vdot33D2];
          tensor[84] projParam33D4#1 = intermediateCons32E6;
          real vdot33D5#1 = VDot<84>(femDofs2F6E,projParam33D4);
          tensor[84] projParam33D6#1 = intermediateCons32E8;
          real vdot33D7#1 = VDot<84>(femDofs2F6E,projParam33D6);
          tensor[84] projParam33D8#1 = intermediateCons32E9;
          real vdot33D9#1 = VDot<84>(femDofs2F6E,projParam33D8);
          tensor[3] tensor33DA#1 = <tensor[3]>[vdot33D5,vdot33D7,vdot33D9];
          tensor[84] projParam33DB#1 = intermediateCons32E7;
          real vdot33DC#1 = VDot<84>(femDofs2F6E,projParam33DB);
          tensor[84] projParam33DD#1 = intermediateCons32E9;
          real vdot33DE#1 = VDot<84>(femDofs2F6E,projParam33DD);
          tensor[84] projParam33DF#1 = intermediateCons32EA;
          real vdot33E0#1 = VDot<84>(femDofs2F6E,projParam33DF);
          tensor[3] tensor33E1#1 = <tensor[3]>[vdot33DC,vdot33DE,vdot33E0];
          tensor[3,3] _t33CC#1 = <tensor[3,3]>[tensor33D3,tensor33DA,tensor33E1];
          (real[3] evals33F9#2,tensor[3][3] E33FA#2) = EigenVecs3x3(_t33CC);
          int _t33FC#2 = 2;
          tensor[3] _t33FE#6 = Subscript<tensor[3][3]>(E33FA,_t33FC);
          real _t3400#9 = Subscript<real[3]>(evals33F9,_t33FC);
          int _t3402#2 = 1;
          tensor[3] _t3404#6 = Subscript<tensor[3][3]>(E33FA,_t3402);
          real _t3406#9 = Subscript<real[3]>(evals33F9,_t3402);
          real r3409#1 = TensorIndex<tensor[3],[0]>(_t33FE);
          tensor[3] binopV340A#3 = VScale<3>(r3409,_t33FE);
          real r340B#1 = TensorIndex<tensor[3],[1]>(_t33FE);
          tensor[3] binopV340C#3 = VScale<3>(r340B,_t33FE);
          real r340D#1 = TensorIndex<tensor[3],[2]>(_t33FE);
          tensor[3] binopV340E#3 = VScale<3>(r340D,_t33FE);
          real r3418#1 = TensorIndex<tensor[3],[0]>(_t3404);
          tensor[3] binopV3419#3 = VScale<3>(r3418,_t3404);
          real r341A#1 = TensorIndex<tensor[3],[1]>(_t3404);
          tensor[3] binopV341B#3 = VScale<3>(r341A,_t3404);
          real r341C#1 = TensorIndex<tensor[3],[2]>(_t3404);
          tensor[3] binopV341D#3 = VScale<3>(r341C,_t3404);
          real r3427#1 = VIndex<3,0>(binopV340A);
          real r3428#1 = RDiv(r3427,_t3400);
          real r3429#1 = VIndex<3,1>(binopV340A);
          real r342A#1 = RDiv(r3429,_t3400);
          real r342B#1 = VIndex<3,2>(binopV340A);
          real r342C#1 = RDiv(r342B,_t3400);
          tensor[3] tensor342D#1 = <tensor[3]>[r3428,r342A,r342C];
          real r342E#1 = VIndex<3,0>(binopV340C);
          real r342F#1 = RDiv(r342E,_t3400);
          real r3430#1 = VIndex<3,1>(binopV340C);
          real r3431#1 = RDiv(r3430,_t3400);
          real r3432#1 = VIndex<3,2>(binopV340C);
          real r3433#1 = RDiv(r3432,_t3400);
          tensor[3] tensor3434#1 = <tensor[3]>[r342F,r3431,r3433];
          real r3435#1 = VIndex<3,0>(binopV340E);
          real r3436#1 = RDiv(r3435,_t3400);
          real r3437#1 = VIndex<3,1>(binopV340E);
          real r3438#1 = RDiv(r3437,_t3400);
          real r3439#1 = VIndex<3,2>(binopV340E);
          real r343A#1 = RDiv(r3439,_t3400);
          tensor[3] tensor343B#1 = <tensor[3]>[r3436,r3438,r343A];
          real r3454#1 = VIndex<3,0>(binopV3419);
          real r3455#1 = RDiv(r3454,_t3406);
          real r3456#1 = VIndex<3,1>(binopV3419);
          real r3457#1 = RDiv(r3456,_t3406);
          real r3458#1 = VIndex<3,2>(binopV3419);
          real r3459#1 = RDiv(r3458,_t3406);
          tensor[3] tensor345A#1 = <tensor[3]>[r3455,r3457,r3459];
          real r345B#1 = VIndex<3,0>(binopV341B);
          real r345C#1 = RDiv(r345B,_t3406);
          real r345D#1 = VIndex<3,1>(binopV341B);
          real r345E#1 = RDiv(r345D,_t3406);
          real r345F#1 = VIndex<3,2>(binopV341B);
          real r3460#1 = RDiv(r345F,_t3406);
          tensor[3] tensor3461#1 = <tensor[3]>[r345C,r345E,r3460];
          real r3462#1 = VIndex<3,0>(binopV341D);
          real r3463#1 = RDiv(r3462,_t3406);
          real r3464#1 = VIndex<3,1>(binopV341D);
          real r3465#1 = RDiv(r3464,_t3406);
          real r3466#1 = VIndex<3,2>(binopV341D);
          real r3467#1 = RDiv(r3466,_t3406);
          tensor[3] tensor3468#1 = <tensor[3]>[r3463,r3465,r3467];
          tensor[3] projParam3481#1 = tensor342D;
          tensor[3] projParam3482#1 = tensor345A;
          tensor[3] v3483#1 = VAdd<3>(projParam3481,projParam3482);
          tensor[3] projParam3484#1 = tensor3434;
          tensor[3] projParam3485#1 = tensor3461;
          tensor[3] v3486#1 = VAdd<3>(projParam3484,projParam3485);
          tensor[3] projParam3487#1 = tensor343B;
          tensor[3] projParam3488#1 = tensor3468;
          tensor[3] v3489#1 = VAdd<3>(projParam3487,projParam3488);
          real varAcc3496#5 = VIndex<3,0>(pos24B7);
          real varAcc3497#5 = VIndex<3,1>(pos24B7);
          real varAcc3498#5 = VIndex<3,2>(pos24B7);
          real basisEval3499#84 = 0.e0;
          real coeff349A#79 = 0.1e1;
          real prod349B#6 = RMul(coeff349A,coeff349A);
          real prod349C#1 = RMul(coeff349A,prod349B);
          real basisEval349D#3 = RMul(coeff349A,prod349C);
          real iden349E#6 = varAcc3498;
          real prod349F#5 = RMul(coeff349A,iden349E);
          real prod34A0#2 = RMul(coeff349A,prod349F);
          real basisEval34A1#2 = RMul(coeff349A,prod34A0);
          real iden34A2#6 = varAcc3497;
          real prod34A3#5 = RMul(iden34A2,coeff349A);
          real prod34A4#2 = RMul(coeff349A,prod34A3);
          real basisEval34A5#2 = RMul(coeff349A,prod34A4);
          real coeff34A6#34 = 0.2e1;
          real iden34A7#16 = varAcc3496;
          real prod34A8#2 = RMul(iden34A7,prod349B);
          real basisEval34A9#1 = RMul(coeff34A6,prod34A8);
          real prod234AA#5 = RMul(iden349E,varAcc3498);
          real prod34AB#4 = RMul(coeff349A,prod234AA);
          real prod34AC#2 = RMul(coeff349A,prod34AB);
          real basisEval34AD#2 = RMul(coeff349A,prod34AC);
          real prod34AE#4 = RMul(iden34A2,iden349E);
          real prod34AF#2 = RMul(coeff349A,prod34AE);
          real basisEval34B0#1 = RMul(coeff349A,prod34AF);
          real prod234B1#5 = RMul(iden34A2,varAcc3497);
          real prod34B2#4 = RMul(prod234B1,coeff349A);
          real prod34B3#2 = RMul(coeff349A,prod34B2);
          real basisEval34B4#2 = RMul(coeff349A,prod34B3);
          real prod34B5#2 = RMul(iden34A7,prod349F);
          real basisEval34B6#2 = RMul(coeff34A6,prod34B5);
          real prod34B7#2 = RMul(iden34A7,prod34A3);
          real basisEval34B8#2 = RMul(coeff34A6,prod34B7);
          real coeff34B9#24 = 0.3e1;
          real prod234BA#11 = RMul(iden34A7,varAcc3496);
          real prod34BB#2 = RMul(prod234BA,prod349B);
          real basisEval34BC#1 = RMul(coeff34B9,prod34BB);
          real prod334BD#4 = RMul(prod234AA,varAcc3498);
          real prod34BE#3 = RMul(coeff349A,prod334BD);
          real prod34BF#2 = RMul(coeff349A,prod34BE);
          real basisEval34C0#2 = RMul(coeff349A,prod34BF);
          real prod34C1#3 = RMul(iden34A2,prod234AA);
          real prod34C2#3 = RMul(coeff349A,prod34C1);
          real basisEval34C3#1 = RMul(coeff349A,prod34C2);
          real prod34C4#3 = RMul(prod234B1,iden349E);
          real prod34C5#3 = RMul(coeff349A,prod34C4);
          real basisEval34C6#1 = RMul(coeff349A,prod34C5);
          real prod334C7#4 = RMul(prod234B1,varAcc3497);
          real prod34C8#3 = RMul(prod334C7,coeff349A);
          real prod34C9#2 = RMul(coeff349A,prod34C8);
          real basisEval34CA#2 = RMul(coeff349A,prod34C9);
          real prod34CB#3 = RMul(iden34A7,prod34AB);
          real basisEval34CC#1 = RMul(coeff34A6,prod34CB);
          real prod34CD#1 = RMul(iden34A7,prod34AE);
          real basisEval34CE#3 = RMul(coeff34A6,prod34CD);
          real prod34CF#3 = RMul(iden34A7,prod34B2);
          real basisEval34D0#1 = RMul(coeff34A6,prod34CF);
          real prod34D1#3 = RMul(prod234BA,prod349F);
          real basisEval34D2#1 = RMul(coeff34B9,prod34D1);
          real prod34D3#3 = RMul(prod234BA,prod34A3);
          real basisEval34D4#1 = RMul(coeff34B9,prod34D3);
          real coeff34D5#18 = 0.4e1;
          real prod334D6#7 = RMul(prod234BA,varAcc3496);
          real prod34D7#2 = RMul(prod334D6,prod349B);
          real basisEval34D8#1 = RMul(coeff34D5,prod34D7);
          real prod434D9#3 = RMul(prod334BD,varAcc3498);
          real prod34DA#2 = RMul(coeff349A,prod434D9);
          real prod34DB#2 = RMul(coeff349A,prod34DA);
          real basisEval34DC#2 = RMul(coeff349A,prod34DB);
          real prod34DD#2 = RMul(iden34A2,prod334BD);
          real prod34DE#3 = RMul(coeff349A,prod34DD);
          real basisEval34DF#1 = RMul(coeff349A,prod34DE);
          real prod34E0#2 = RMul(prod234B1,prod234AA);
          real prod34E1#2 = RMul(coeff349A,prod34E0);
          real basisEval34E2#1 = RMul(coeff349A,prod34E1);
          real prod34E3#2 = RMul(prod334C7,iden349E);
          real prod34E4#3 = RMul(coeff349A,prod34E3);
          real basisEval34E5#1 = RMul(coeff349A,prod34E4);
          real prod434E6#3 = RMul(prod334C7,varAcc3497);
          real prod34E7#2 = RMul(prod434E6,coeff349A);
          real prod34E8#2 = RMul(coeff349A,prod34E7);
          real basisEval34E9#2 = RMul(coeff349A,prod34E8);
          real prod34EA#3 = RMul(iden34A7,prod34BE);
          real basisEval34EB#1 = RMul(coeff34A6,prod34EA);
          real prod34EC#2 = RMul(iden34A7,prod34C1);
          real basisEval34ED#2 = RMul(coeff34A6,prod34EC);
          real prod34EE#2 = RMul(iden34A7,prod34C4);
          real basisEval34EF#2 = RMul(coeff34A6,prod34EE);
          real prod34F0#3 = RMul(iden34A7,prod34C8);
          real basisEval34F1#1 = RMul(coeff34A6,prod34F0);
          real prod34F2#2 = RMul(prod234BA,prod34AB);
          real basisEval34F3#2 = RMul(coeff34B9,prod34F2);
          real prod34F4#2 = RMul(prod234BA,prod34AE);
          real basisEval34F5#1 = RMul(coeff34B9,prod34F4);
          real prod34F6#2 = RMul(prod234BA,prod34B2);
          real basisEval34F7#2 = RMul(coeff34B9,prod34F6);
          real prod34F8#3 = RMul(prod334D6,prod349F);
          real basisEval34F9#1 = RMul(coeff34D5,prod34F8);
          real prod34FA#3 = RMul(prod334D6,prod34A3);
          real basisEval34FB#1 = RMul(coeff34D5,prod34FA);
          real coeff34FC#9 = 0.5e1;
          real prod434FD#4 = RMul(prod334D6,varAcc3496);
          real prod34FE#2 = RMul(prod434FD,prod349B);
          real basisEval34FF#1 = RMul(coeff34FC,prod34FE);
          real prod53500#1 = RMul(prod434D9,varAcc3498);
          real prod3501#1 = RMul(coeff349A,prod53500);
          real prod3502#2 = RMul(coeff349A,prod3501);
          real basisEval3503#2 = RMul(coeff349A,prod3502);
          real prod3504#1 = RMul(iden34A2,prod434D9);
          real prod3505#3 = RMul(coeff349A,prod3504);
          real basisEval3506#1 = RMul(coeff349A,prod3505);
          real prod3507#1 = RMul(prod234B1,prod334BD);
          real prod3508#3 = RMul(coeff349A,prod3507);
          real basisEval3509#1 = RMul(coeff349A,prod3508);
          real prod350A#1 = RMul(prod334C7,prod234AA);
          real prod350B#3 = RMul(coeff349A,prod350A);
          real basisEval350C#1 = RMul(coeff349A,prod350B);
          real prod350D#1 = RMul(prod434E6,iden349E);
          real prod350E#3 = RMul(coeff349A,prod350D);
          real basisEval350F#1 = RMul(coeff349A,prod350E);
          real prod53510#1 = RMul(prod434E6,varAcc3497);
          real prod3511#1 = RMul(prod53510,coeff349A);
          real prod3512#2 = RMul(coeff349A,prod3511);
          real basisEval3513#2 = RMul(coeff349A,prod3512);
          real prod3514#3 = RMul(iden34A7,prod34DA);
          real basisEval3515#1 = RMul(coeff34A6,prod3514);
          real prod3516#2 = RMul(iden34A7,prod34DD);
          real basisEval3517#2 = RMul(coeff34A6,prod3516);
          real prod3518#2 = RMul(iden34A7,prod34E0);
          real basisEval3519#1 = RMul(coeff34A6,prod3518);
          real prod351A#2 = RMul(iden34A7,prod34E3);
          real basisEval351B#2 = RMul(coeff34A6,prod351A);
          real prod351C#3 = RMul(iden34A7,prod34E7);
          real basisEval351D#1 = RMul(coeff34A6,prod351C);
          real prod351E#3 = RMul(prod234BA,prod34BE);
          real basisEval351F#1 = RMul(coeff34B9,prod351E);
          real prod3520#2 = RMul(prod234BA,prod34C1);
          real basisEval3521#2 = RMul(coeff34B9,prod3520);
          real prod3522#2 = RMul(prod234BA,prod34C4);
          real basisEval3523#2 = RMul(coeff34B9,prod3522);
          real prod3524#3 = RMul(prod234BA,prod34C8);
          real basisEval3525#1 = RMul(coeff34B9,prod3524);
          real prod3526#3 = RMul(prod334D6,prod34AB);
          real basisEval3527#1 = RMul(coeff34D5,prod3526);
          real prod3528#2 = RMul(prod334D6,prod34AE);
          real basisEval3529#1 = RMul(coeff34D5,prod3528);
          real prod352A#3 = RMul(prod334D6,prod34B2);
          real basisEval352B#1 = RMul(coeff34D5,prod352A);
          real prod352C#3 = RMul(prod434FD,prod349F);
          real basisEval352D#1 = RMul(coeff34FC,prod352C);
          real prod352E#3 = RMul(prod434FD,prod34A3);
          real basisEval352F#1 = RMul(coeff34FC,prod352E);
          real coeff3530#3 = 0.6e1;
          real prod53531#1 = RMul(prod434FD,varAcc3496);
          real prod3532#2 = RMul(prod53531,prod349B);
          real basisEval3533#1 = RMul(coeff3530,prod3532);
          real basisEval3534#1 = RMul(coeff34A6,prod34A4);
          real basisEval3535#2 = RMul(coeff349A,prod34A8);
          real basisEval3536#2 = RMul(coeff34A6,prod34AF);
          real basisEval3537#1 = RMul(coeff34B9,prod34B3);
          real basisEval3538#1 = RMul(coeff349A,prod34B5);
          real basisEval3539#2 = RMul(coeff349A,prod34BB);
          real basisEval353A#1 = RMul(coeff34A6,prod34C2);
          real basisEval353B#1 = RMul(coeff34B9,prod34C5);
          real basisEval353C#1 = RMul(coeff34D5,prod34C9);
          real basisEval353D#1 = RMul(coeff349A,prod34CB);
          real basisEval353E#1 = RMul(coeff34B9,prod34CF);
          real basisEval353F#1 = RMul(coeff349A,prod34D1);
          real basisEval3540#1 = RMul(coeff34A6,prod34D3);
          real basisEval3541#2 = RMul(coeff349A,prod34D7);
          real basisEval3542#1 = RMul(coeff34A6,prod34DE);
          real basisEval3543#2 = RMul(coeff34B9,prod34E1);
          real basisEval3544#1 = RMul(coeff34D5,prod34E4);
          real basisEval3545#1 = RMul(coeff34FC,prod34E8);
          real basisEval3546#1 = RMul(coeff349A,prod34EA);
          real basisEval3547#1 = RMul(coeff34B9,prod34EE);
          real basisEval3548#1 = RMul(coeff34D5,prod34F0);
          real basisEval3549#1 = RMul(coeff349A,prod34F2);
          real basisEval354A#2 = RMul(coeff34A6,prod34F4);
          real basisEval354B#1 = RMul(coeff349A,prod34F8);
          real basisEval354C#1 = RMul(coeff34A6,prod34FA);
          real basisEval354D#2 = RMul(coeff349A,prod34FE);
          real basisEval354E#1 = RMul(coeff34A6,prod3505);
          real basisEval354F#1 = RMul(coeff34B9,prod3508);
          real basisEval3550#1 = RMul(coeff34D5,prod350B);
          real basisEval3551#1 = RMul(coeff34FC,prod350E);
          real basisEval3552#1 = RMul(coeff3530,prod3512);
          real basisEval3553#1 = RMul(coeff349A,prod3514);
          real basisEval3554#2 = RMul(coeff34B9,prod3518);
          real basisEval3555#1 = RMul(coeff34D5,prod351A);
          real basisEval3556#1 = RMul(coeff34FC,prod351C);
          real basisEval3557#1 = RMul(coeff349A,prod351E);
          real basisEval3558#1 = RMul(coeff34A6,prod3520);
          real basisEval3559#1 = RMul(coeff34D5,prod3524);
          real basisEval355A#1 = RMul(coeff349A,prod3526);
          real basisEval355B#2 = RMul(coeff34A6,prod3528);
          real basisEval355C#1 = RMul(coeff34B9,prod352A);
          real basisEval355D#1 = RMul(coeff349A,prod352C);
          real basisEval355E#1 = RMul(coeff34A6,prod352E);
          real basisEval355F#2 = RMul(coeff349A,prod3532);
          real basisEval3560#1 = RMul(coeff34A6,prod34A0);
          real basisEval3561#1 = RMul(coeff34B9,prod34AC);
          real basisEval3562#1 = RMul(coeff349A,prod34B7);
          real basisEval3563#1 = RMul(coeff34D5,prod34BF);
          real basisEval3564#1 = RMul(coeff34B9,prod34C2);
          real basisEval3565#1 = RMul(coeff34A6,prod34C5);
          real basisEval3566#1 = RMul(coeff34B9,prod34CB);
          real basisEval3567#1 = RMul(coeff349A,prod34CF);
          real basisEval3568#1 = RMul(coeff34A6,prod34D1);
          real basisEval3569#1 = RMul(coeff349A,prod34D3);
          real basisEval356A#1 = RMul(coeff34FC,prod34DB);
          real basisEval356B#1 = RMul(coeff34D5,prod34DE);
          real basisEval356C#1 = RMul(coeff34A6,prod34E4);
          real basisEval356D#1 = RMul(coeff34D5,prod34EA);
          real basisEval356E#1 = RMul(coeff34B9,prod34EC);
          real basisEval356F#1 = RMul(coeff349A,prod34F0);
          real basisEval3570#1 = RMul(coeff349A,prod34F6);
          real basisEval3571#1 = RMul(coeff34A6,prod34F8);
          real basisEval3572#1 = RMul(coeff349A,prod34FA);
          real basisEval3573#1 = RMul(coeff3530,prod3502);
          real basisEval3574#1 = RMul(coeff34FC,prod3505);
          real basisEval3575#1 = RMul(coeff34D5,prod3508);
          real basisEval3576#1 = RMul(coeff34B9,prod350B);
          real basisEval3577#1 = RMul(coeff34A6,prod350E);
          real basisEval3578#1 = RMul(coeff34FC,prod3514);
          real basisEval3579#1 = RMul(coeff34D5,prod3516);
          real basisEval357A#1 = RMul(coeff349A,prod351C);
          real basisEval357B#1 = RMul(coeff34D5,prod351E);
          real basisEval357C#1 = RMul(coeff34A6,prod3522);
          real basisEval357D#1 = RMul(coeff349A,prod3524);
          real basisEval357E#1 = RMul(coeff34B9,prod3526);
          real basisEval357F#1 = RMul(coeff349A,prod352A);
          real basisEval3580#1 = RMul(coeff34A6,prod352C);
          real basisEval3581#1 = RMul(coeff349A,prod352E);
          tensor[84] intermediateCons3582#1 = <tensor[84]>[basisEval3499,basisEval3499,basisEval3499,basisEval349D,basisEval3499,basisEval3499,basisEval3499,basisEval34A1,basisEval34A5,basisEval34A9,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval34AD,basisEval34B0,basisEval34B4,basisEval34B6,basisEval34B8,basisEval34BC,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval34C0,basisEval34C3,basisEval34C6,basisEval34CA,basisEval34CC,basisEval34CE,basisEval34D0,basisEval34D2,basisEval34D4,basisEval34D8,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval34DC,basisEval34DF,basisEval34E2,basisEval34E5,basisEval34E9,basisEval34EB,basisEval34ED,basisEval34EF,basisEval34F1,basisEval34F3,basisEval34F5,basisEval34F7,basisEval34F9,basisEval34FB,basisEval34FF,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3499,basisEval3503,basisEval3506,basisEval3509,basisEval350C,basisEval350F,basisEval3513,basisEval3515,basisEval3517,basisEval3519,basisEval351B,basisEval351D,basisEval351F,basisEval3521,basisEval3523,basisEval3525,basisEval3527,basisEval3529,basisEval352B,basisEval352D,basisEval352F,basisEval3533];
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval3499,basisEval3499,basisEval349D,basisEval3499,basisEval3499,basisEval34A1,basisEval3534,basisEval3499,basisEval3535,basisEval3499,basisEval3499,basisEval34AD,basisEval3536,basisEval3537,basisEval3499,basisEval3538,basisEval34B8,basisEval3499,basisEval3539,basisEval3499,basisEval3499,basisEval34C0,basisEval353A,basisEval353B,basisEval353C,basisEval3499,basisEval353D,basisEval34CE,basisEval353E,basisEval3499,basisEval353F,basisEval3540,basisEval3499,basisEval3541,basisEval3499,basisEval3499,basisEval34DC,basisEval3542,basisEval3543,basisEval3544,basisEval3545,basisEval3499,basisEval3546,basisEval34ED,basisEval3547,basisEval3548,basisEval3499,basisEval3549,basisEval354A,basisEval34F7,basisEval3499,basisEval354B,basisEval354C,basisEval3499,basisEval354D,basisEval3499,basisEval3499,basisEval3503,basisEval354E,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3499,basisEval3553,basisEval3517,basisEval3554,basisEval3555,basisEval3556,basisEval3499,basisEval3557,basisEval3558,basisEval3523,basisEval3559,basisEval3499,basisEval355A,basisEval355B,basisEval355C,basisEval3499,basisEval355D,basisEval355E,basisEval3499,basisEval355F,basisEval3499];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval3499,basisEval349D,basisEval3499,basisEval3499,basisEval3560,basisEval34A5,basisEval3499,basisEval3535,basisEval3499,basisEval3499,basisEval3561,basisEval3536,basisEval34B4,basisEval3499,basisEval34B6,basisEval3562,basisEval3499,basisEval3539,basisEval3499,basisEval3499,basisEval3563,basisEval3564,basisEval3565,basisEval34CA,basisEval3499,basisEval3566,basisEval34CE,basisEval3567,basisEval3499,basisEval3568,basisEval3569,basisEval3499,basisEval3541,basisEval3499,basisEval3499,basisEval356A,basisEval356B,basisEval3543,basisEval356C,basisEval34E9,basisEval3499,basisEval356D,basisEval356E,basisEval34EF,basisEval356F,basisEval3499,basisEval34F3,basisEval354A,basisEval3570,basisEval3499,basisEval3571,basisEval3572,basisEval3499,basisEval354D,basisEval3499,basisEval3499,basisEval3573,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3513,basisEval3499,basisEval3578,basisEval3579,basisEval3554,basisEval351B,basisEval357A,basisEval3499,basisEval357B,basisEval3521,basisEval357C,basisEval357D,basisEval3499,basisEval357E,basisEval355B,basisEval357F,basisEval3499,basisEval3580,basisEval3581,basisEval3499,basisEval355F,basisEval3499,basisEval3499];
          tensor[84] projParam3678#1 = intermediateCons3582;
          real vdot3679#1 = VDot<84>(femDofs2F6E,projParam3678);
          tensor[84] projParam367A#1 = intermediateCons3583;
          real vdot367B#1 = VDot<84>(femDofs2F6E,projParam367A);
          tensor[84] projParam367C#1 = intermediateCons3584;
          real vdot367D#1 = VDot<84>(femDofs2F6E,projParam367C);
          tensor[3] probe_l_153677#3 = <tensor[3]>[vdot3679,vdot367B,vdot367D];
          tensor[3] projParam3687#1 = v3483;
          tensor[3] negV3688#1 = VNeg<3>(projParam3687);
          tensor[3] projParam3689#1 = v3486;
          tensor[3] negV368A#1 = VNeg<3>(projParam3689);
          tensor[3] projParam368B#1 = v3489;
          tensor[3] negV368C#1 = VNeg<3>(projParam368B);
          tensor[3] projParam3696#1 = negV3688;
          real vdot3697#1 = VDot<3>(projParam3696,probe_l_153677);
          tensor[3] projParam3698#1 = negV368A;
          real vdot3699#1 = VDot<3>(projParam3698,probe_l_153677);
          tensor[3] projParam369A#1 = negV368C;
          real vdot369B#1 = VDot<3>(projParam369A,probe_l_153677);
          tensor[3] _t3695#1 = <tensor[3]>[vdot3697,vdot3699,vdot369B];
          goto JOIN36A6
        JOIN36A6:  preds = [ASSIGN36A3,ASSIGN40DD]
          tensor[3] step36A4#5 = phi(_t3695,_t36A5)
          real _t36A7#8 = 0.e0;
          real _t36A9#13 = 0.1e1;
          real _t36AB#1 = 0.15e1;
          real op1_e3_l_736AD#1 = VDot<3>(step36A4,step36A4);
          real op1_e3_l_836B0#3 = Sqrt(op1_e3_l_736AD);
          real op1_e3_l_936B3#1 = Abs<real>(op1_e3_l_836B0);
          real op1_e3_l_1036B6#1 = RDiv(op1_e3_l_936B3,thick247B);
          real op1_e3_l_1136B9#1 = RSub(_t36A9,op1_e3_l_1036B6);
          real op1_e3_l_1236BC#2 = RMul(_t36AB,op1_e3_l_1136B9);
          real op1_e3_l_1336BF#1 = RClamp(_t36A7,_t36A9,op1_e3_l_1236BC);
          real _t36C2#1 = RMul(maxAlpha2483,op1_e3_l_1336BF);
          bool _t36C5#1 = EQ<real>(_t36C2,_t36A7);
          if _t36C5 then goto SAVE36C8 else goto JOIN36CA
        SAVE36C8:  preds = [COND36C7]
          self.rayN = rayN24AB;
          active
          goto JOIN36CA
        JOIN36CA:  preds = [*ACTIVE36C9,COND36C7]
          real op1_e3_l_1436CB#1 = RClamp(_t36A7,_t36A9,op1_e3_l_1236BC);
          real op1_e3_l_1536CE#1 = RMul(maxAlpha2483,op1_e3_l_1436CB);
          real _t36D1#1 = RSub(_t36A9,op1_e3_l_1536CE);
          real _t36D4#1 = MathFn<pow>(_t36D1,alphaFix249B);
          bool _t36D6#1 = NEQ<real>(phKs24A3,_t36A7);
          if _t36D6 then goto ASSIGN36DB else goto JOIN36FE
        ASSIGN36DB:  preds = [COND36D8]
          tensor[3] op1_e3_l_636D9#3 = VAdd<3>(eyeDir249D,litwsp2493);
          real op1_e3_l_836DC#1 = VDot<3>(op1_e3_l_636D9,op1_e3_l_636D9);
          real op1_e3_l_936DF#1 = Sqrt(op1_e3_l_836DC);
          real realLit36E3#1 = 0.1e1;
          real op1_e3_l_1236E2#1 = RDiv(realLit36E3,op1_e3_l_836B0);
          tensor[3] op1_e3_l_1336E7#1 = VScale<3>(op1_e3_l_1236E2,step36A4);
          tensor[3] op1_e3_l_1436EA#1 = VNeg<3>(op1_e3_l_1336E7);
          real realLit36EE#1 = 0.1e1;
          real op1_e3_l_1636ED#1 = RDiv(realLit36EE,op1_e3_l_936DF);
          real op1_e3_l_1736F2#1 = VDot<3>(op1_e3_l_1436EA,op1_e3_l_636D9);
          real op1_e3_l_1836F5#1 = RMul(op1_e3_l_1636ED,op1_e3_l_1736F2);
          real _t36F8#1 = Abs<real>(op1_e3_l_1836F5);
          real scomp36FB#1 = MathFn<pow>(_t36F8,phSp24A5);
          goto JOIN36FE
        JOIN36FE:  preds = [ASSIGN36FC,COND36D8]
          real scomp36FD#1 = phi(scomp36FB,_t36A7)
          real cmin36FF#3 = VIndex<2,0>(cminmax2489);
          real cmax3701#2 = VIndex<2,1>(cminmax2489);
          tensor[3] mcol3703#1 = <tensor[3]>[_t36A9,_t36A9,_t36A9];
          bool _t3705#1 = NEQ<real>(cmin36FF,cmax3701);
          if _t3705 then goto ASSIGN370B else goto JOIN3DEB
        ASSIGN370B:  preds = [COND3707]
          tensor[3] v3709#1 = VAdd<3>(rayOrig2497,op1_e3_l_524B4);
          tensor[3] _t3708#3 = VAdd<3>(v3709,step36A4);
          int ilit370E#1 = 84;
          int mulRes370F#84 = IMul(_t246B,ilit370E);
          int addRes3711#1 = mulRes370F;
          int idx3712#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3711);
          int ilit3713#1 = 1;
          int addRes3714#1 = IAdd(mulRes370F,ilit3713);
          int idx3715#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3714);
          int ilit3716#1 = 2;
          int addRes3717#1 = IAdd(mulRes370F,ilit3716);
          int idx3718#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3717);
          int ilit3719#1 = 3;
          int addRes371A#1 = IAdd(mulRes370F,ilit3719);
          int idx371B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371A);
          int ilit371C#1 = 4;
          int addRes371D#1 = IAdd(mulRes370F,ilit371C);
          int idx371E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371D);
          int ilit371F#1 = 5;
          int addRes3720#1 = IAdd(mulRes370F,ilit371F);
          int idx3721#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3720);
          int ilit3722#1 = 6;
          int addRes3723#1 = IAdd(mulRes370F,ilit3722);
          int idx3724#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3723);
          int ilit3725#1 = 7;
          int addRes3726#1 = IAdd(mulRes370F,ilit3725);
          int idx3727#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3726);
          int ilit3728#1 = 8;
          int addRes3729#1 = IAdd(mulRes370F,ilit3728);
          int idx372A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3729);
          int ilit372B#1 = 9;
          int addRes372C#1 = IAdd(mulRes370F,ilit372B);
          int idx372D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372C);
          int ilit372E#1 = 10;
          int addRes372F#1 = IAdd(mulRes370F,ilit372E);
          int idx3730#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372F);
          int ilit3731#1 = 11;
          int addRes3732#1 = IAdd(mulRes370F,ilit3731);
          int idx3733#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3732);
          int ilit3734#1 = 12;
          int addRes3735#1 = IAdd(mulRes370F,ilit3734);
          int idx3736#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3735);
          int ilit3737#1 = 13;
          int addRes3738#1 = IAdd(mulRes370F,ilit3737);
          int idx3739#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3738);
          int ilit373A#1 = 14;
          int addRes373B#1 = IAdd(mulRes370F,ilit373A);
          int idx373C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373B);
          int ilit373D#1 = 15;
          int addRes373E#1 = IAdd(mulRes370F,ilit373D);
          int idx373F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373E);
          int ilit3740#1 = 16;
          int addRes3741#1 = IAdd(mulRes370F,ilit3740);
          int idx3742#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3741);
          int ilit3743#1 = 17;
          int addRes3744#1 = IAdd(mulRes370F,ilit3743);
          int idx3745#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3744);
          int ilit3746#1 = 18;
          int addRes3747#1 = IAdd(mulRes370F,ilit3746);
          int idx3748#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3747);
          int ilit3749#1 = 19;
          int addRes374A#1 = IAdd(mulRes370F,ilit3749);
          int idx374B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374A);
          int ilit374C#1 = 20;
          int addRes374D#1 = IAdd(mulRes370F,ilit374C);
          int idx374E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374D);
          int ilit374F#1 = 21;
          int addRes3750#1 = IAdd(mulRes370F,ilit374F);
          int idx3751#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3750);
          int ilit3752#1 = 22;
          int addRes3753#1 = IAdd(mulRes370F,ilit3752);
          int idx3754#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3753);
          int ilit3755#1 = 23;
          int addRes3756#1 = IAdd(mulRes370F,ilit3755);
          int idx3757#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3756);
          int ilit3758#1 = 24;
          int addRes3759#1 = IAdd(mulRes370F,ilit3758);
          int idx375A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3759);
          int ilit375B#1 = 25;
          int addRes375C#1 = IAdd(mulRes370F,ilit375B);
          int idx375D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375C);
          int ilit375E#1 = 26;
          int addRes375F#1 = IAdd(mulRes370F,ilit375E);
          int idx3760#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375F);
          int ilit3761#1 = 27;
          int addRes3762#1 = IAdd(mulRes370F,ilit3761);
          int idx3763#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3762);
          int ilit3764#1 = 28;
          int addRes3765#1 = IAdd(mulRes370F,ilit3764);
          int idx3766#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3765);
          int ilit3767#1 = 29;
          int addRes3768#1 = IAdd(mulRes370F,ilit3767);
          int idx3769#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3768);
          int ilit376A#1 = 30;
          int addRes376B#1 = IAdd(mulRes370F,ilit376A);
          int idx376C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376B);
          int ilit376D#1 = 31;
          int addRes376E#1 = IAdd(mulRes370F,ilit376D);
          int idx376F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376E);
          int ilit3770#1 = 32;
          int addRes3771#1 = IAdd(mulRes370F,ilit3770);
          int idx3772#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3771);
          int ilit3773#1 = 33;
          int addRes3774#1 = IAdd(mulRes370F,ilit3773);
          int idx3775#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3774);
          int ilit3776#1 = 34;
          int addRes3777#1 = IAdd(mulRes370F,ilit3776);
          int idx3778#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3777);
          int ilit3779#1 = 35;
          int addRes377A#1 = IAdd(mulRes370F,ilit3779);
          int idx377B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377A);
          int ilit377C#1 = 36;
          int addRes377D#1 = IAdd(mulRes370F,ilit377C);
          int idx377E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377D);
          int ilit377F#1 = 37;
          int addRes3780#1 = IAdd(mulRes370F,ilit377F);
          int idx3781#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3780);
          int ilit3782#1 = 38;
          int addRes3783#1 = IAdd(mulRes370F,ilit3782);
          int idx3784#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3783);
          int ilit3785#1 = 39;
          int addRes3786#1 = IAdd(mulRes370F,ilit3785);
          int idx3787#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3786);
          int ilit3788#1 = 40;
          int addRes3789#1 = IAdd(mulRes370F,ilit3788);
          int idx378A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3789);
          int ilit378B#1 = 41;
          int addRes378C#1 = IAdd(mulRes370F,ilit378B);
          int idx378D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378C);
          int ilit378E#1 = 42;
          int addRes378F#1 = IAdd(mulRes370F,ilit378E);
          int idx3790#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378F);
          int ilit3791#1 = 43;
          int addRes3792#1 = IAdd(mulRes370F,ilit3791);
          int idx3793#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3792);
          int ilit3794#1 = 44;
          int addRes3795#1 = IAdd(mulRes370F,ilit3794);
          int idx3796#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3795);
          int ilit3797#1 = 45;
          int addRes3798#1 = IAdd(mulRes370F,ilit3797);
          int idx3799#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3798);
          int ilit379A#1 = 46;
          int addRes379B#1 = IAdd(mulRes370F,ilit379A);
          int idx379C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379B);
          int ilit379D#1 = 47;
          int addRes379E#1 = IAdd(mulRes370F,ilit379D);
          int idx379F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379E);
          int ilit37A0#1 = 48;
          int addRes37A1#1 = IAdd(mulRes370F,ilit37A0);
          int idx37A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A1);
          int ilit37A3#1 = 49;
          int addRes37A4#1 = IAdd(mulRes370F,ilit37A3);
          int idx37A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A4);
          int ilit37A6#1 = 50;
          int addRes37A7#1 = IAdd(mulRes370F,ilit37A6);
          int idx37A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A7);
          int ilit37A9#1 = 51;
          int addRes37AA#1 = IAdd(mulRes370F,ilit37A9);
          int idx37AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AA);
          int ilit37AC#1 = 52;
          int addRes37AD#1 = IAdd(mulRes370F,ilit37AC);
          int idx37AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AD);
          int ilit37AF#1 = 53;
          int addRes37B0#1 = IAdd(mulRes370F,ilit37AF);
          int idx37B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B0);
          int ilit37B2#1 = 54;
          int addRes37B3#1 = IAdd(mulRes370F,ilit37B2);
          int idx37B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B3);
          int ilit37B5#1 = 55;
          int addRes37B6#1 = IAdd(mulRes370F,ilit37B5);
          int idx37B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B6);
          int ilit37B8#1 = 56;
          int addRes37B9#1 = IAdd(mulRes370F,ilit37B8);
          int idx37BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B9);
          int ilit37BB#1 = 57;
          int addRes37BC#1 = IAdd(mulRes370F,ilit37BB);
          int idx37BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BC);
          int ilit37BE#1 = 58;
          int addRes37BF#1 = IAdd(mulRes370F,ilit37BE);
          int idx37C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BF);
          int ilit37C1#1 = 59;
          int addRes37C2#1 = IAdd(mulRes370F,ilit37C1);
          int idx37C3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C2);
          int ilit37C4#1 = 60;
          int addRes37C5#1 = IAdd(mulRes370F,ilit37C4);
          int idx37C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C5);
          int ilit37C7#1 = 61;
          int addRes37C8#1 = IAdd(mulRes370F,ilit37C7);
          int idx37C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C8);
          int ilit37CA#1 = 62;
          int addRes37CB#1 = IAdd(mulRes370F,ilit37CA);
          int idx37CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CB);
          int ilit37CD#1 = 63;
          int addRes37CE#1 = IAdd(mulRes370F,ilit37CD);
          int idx37CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CE);
          int ilit37D0#1 = 64;
          int addRes37D1#1 = IAdd(mulRes370F,ilit37D0);
          int idx37D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D1);
          int ilit37D3#1 = 65;
          int addRes37D4#1 = IAdd(mulRes370F,ilit37D3);
          int idx37D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D4);
          int ilit37D6#1 = 66;
          int addRes37D7#1 = IAdd(mulRes370F,ilit37D6);
          int idx37D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D7);
          int ilit37D9#1 = 67;
          int addRes37DA#1 = IAdd(mulRes370F,ilit37D9);
          int idx37DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DA);
          int ilit37DC#1 = 68;
          int addRes37DD#1 = IAdd(mulRes370F,ilit37DC);
          int idx37DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DD);
          int ilit37DF#1 = 69;
          int addRes37E0#1 = IAdd(mulRes370F,ilit37DF);
          int idx37E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E0);
          int ilit37E2#1 = 70;
          int addRes37E3#1 = IAdd(mulRes370F,ilit37E2);
          int idx37E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E3);
          int ilit37E5#1 = 71;
          int addRes37E6#1 = IAdd(mulRes370F,ilit37E5);
          int idx37E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E6);
          int ilit37E8#1 = 72;
          int addRes37E9#1 = IAdd(mulRes370F,ilit37E8);
          int idx37EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E9);
          int ilit37EB#1 = 73;
          int addRes37EC#1 = IAdd(mulRes370F,ilit37EB);
          int idx37ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EC);
          int ilit37EE#1 = 74;
          int addRes37EF#1 = IAdd(mulRes370F,ilit37EE);
          int idx37F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EF);
          int ilit37F1#1 = 75;
          int addRes37F2#1 = IAdd(mulRes370F,ilit37F1);
          int idx37F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F2);
          int ilit37F4#1 = 76;
          int addRes37F5#1 = IAdd(mulRes370F,ilit37F4);
          int idx37F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F5);
          int ilit37F7#1 = 77;
          int addRes37F8#1 = IAdd(mulRes370F,ilit37F7);
          int idx37F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F8);
          int ilit37FA#1 = 78;
          int addRes37FB#1 = IAdd(mulRes370F,ilit37FA);
          int idx37FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FB);
          int ilit37FD#1 = 79;
          int addRes37FE#1 = IAdd(mulRes370F,ilit37FD);
          int idx37FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FE);
          int ilit3800#1 = 80;
          int addRes3801#1 = IAdd(mulRes370F,ilit3800);
          int idx3802#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3801);
          int ilit3803#1 = 81;
          int addRes3804#1 = IAdd(mulRes370F,ilit3803);
          int idx3805#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3804);
          int ilit3806#1 = 82;
          int addRes3807#1 = IAdd(mulRes370F,ilit3806);
          int idx3808#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3807);
          int ilit3809#1 = 83;
          int addRes380A#1 = IAdd(mulRes370F,ilit3809);
          int idx380B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes380A);
          int ilit390E#84 = 1;
          int idx3910#1 = idx3712;
          int mulRes3911#1 = IMul(ilit390E,idx3910);
          int idx3912#1 = idx3715;
          int mulRes3913#1 = IMul(ilit390E,idx3912);
          int idx3915#1 = idx3718;
          int mulRes3916#1 = IMul(ilit390E,idx3915);
          int idx3918#1 = idx371B;
          int mulRes3919#1 = IMul(ilit390E,idx3918);
          int idx391B#1 = idx371E;
          int mulRes391C#1 = IMul(ilit390E,idx391B);
          int idx391E#1 = idx3721;
          int mulRes391F#1 = IMul(ilit390E,idx391E);
          int idx3921#1 = idx3724;
          int mulRes3922#1 = IMul(ilit390E,idx3921);
          int idx3924#1 = idx3727;
          int mulRes3925#1 = IMul(ilit390E,idx3924);
          int idx3927#1 = idx372A;
          int mulRes3928#1 = IMul(ilit390E,idx3927);
          int idx392A#1 = idx372D;
          int mulRes392B#1 = IMul(ilit390E,idx392A);
          int idx392D#1 = idx3730;
          int mulRes392E#1 = IMul(ilit390E,idx392D);
          int idx3930#1 = idx3733;
          int mulRes3931#1 = IMul(ilit390E,idx3930);
          int idx3933#1 = idx3736;
          int mulRes3934#1 = IMul(ilit390E,idx3933);
          int idx3936#1 = idx3739;
          int mulRes3937#1 = IMul(ilit390E,idx3936);
          int idx3939#1 = idx373C;
          int mulRes393A#1 = IMul(ilit390E,idx3939);
          int idx393C#1 = idx373F;
          int mulRes393D#1 = IMul(ilit390E,idx393C);
          int idx393F#1 = idx3742;
          int mulRes3940#1 = IMul(ilit390E,idx393F);
          int idx3942#1 = idx3745;
          int mulRes3943#1 = IMul(ilit390E,idx3942);
          int idx3945#1 = idx3748;
          int mulRes3946#1 = IMul(ilit390E,idx3945);
          int idx3948#1 = idx374B;
          int mulRes3949#1 = IMul(ilit390E,idx3948);
          int idx394B#1 = idx374E;
          int mulRes394C#1 = IMul(ilit390E,idx394B);
          int idx394E#1 = idx3751;
          int mulRes394F#1 = IMul(ilit390E,idx394E);
          int idx3951#1 = idx3754;
          int mulRes3952#1 = IMul(ilit390E,idx3951);
          int idx3954#1 = idx3757;
          int mulRes3955#1 = IMul(ilit390E,idx3954);
          int idx3957#1 = idx375A;
          int mulRes3958#1 = IMul(ilit390E,idx3957);
          int idx395A#1 = idx375D;
          int mulRes395B#1 = IMul(ilit390E,idx395A);
          int idx395D#1 = idx3760;
          int mulRes395E#1 = IMul(ilit390E,idx395D);
          int idx3960#1 = idx3763;
          int mulRes3961#1 = IMul(ilit390E,idx3960);
          int idx3963#1 = idx3766;
          int mulRes3964#1 = IMul(ilit390E,idx3963);
          int idx3966#1 = idx3769;
          int mulRes3967#1 = IMul(ilit390E,idx3966);
          int idx3969#1 = idx376C;
          int mulRes396A#1 = IMul(ilit390E,idx3969);
          int idx396C#1 = idx376F;
          int mulRes396D#1 = IMul(ilit390E,idx396C);
          int idx396F#1 = idx3772;
          int mulRes3970#1 = IMul(ilit390E,idx396F);
          int idx3972#1 = idx3775;
          int mulRes3973#1 = IMul(ilit390E,idx3972);
          int idx3975#1 = idx3778;
          int mulRes3976#1 = IMul(ilit390E,idx3975);
          int idx3978#1 = idx377B;
          int mulRes3979#1 = IMul(ilit390E,idx3978);
          int idx397B#1 = idx377E;
          int mulRes397C#1 = IMul(ilit390E,idx397B);
          int idx397E#1 = idx3781;
          int mulRes397F#1 = IMul(ilit390E,idx397E);
          int idx3981#1 = idx3784;
          int mulRes3982#1 = IMul(ilit390E,idx3981);
          int idx3984#1 = idx3787;
          int mulRes3985#1 = IMul(ilit390E,idx3984);
          int idx3987#1 = idx378A;
          int mulRes3988#1 = IMul(ilit390E,idx3987);
          int idx398A#1 = idx378D;
          int mulRes398B#1 = IMul(ilit390E,idx398A);
          int idx398D#1 = idx3790;
          int mulRes398E#1 = IMul(ilit390E,idx398D);
          int idx3990#1 = idx3793;
          int mulRes3991#1 = IMul(ilit390E,idx3990);
          int idx3993#1 = idx3796;
          int mulRes3994#1 = IMul(ilit390E,idx3993);
          int idx3996#1 = idx3799;
          int mulRes3997#1 = IMul(ilit390E,idx3996);
          int idx3999#1 = idx379C;
          int mulRes399A#1 = IMul(ilit390E,idx3999);
          int idx399C#1 = idx379F;
          int mulRes399D#1 = IMul(ilit390E,idx399C);
          int idx399F#1 = idx37A2;
          int mulRes39A0#1 = IMul(ilit390E,idx399F);
          int idx39A2#1 = idx37A5;
          int mulRes39A3#1 = IMul(ilit390E,idx39A2);
          int idx39A5#1 = idx37A8;
          int mulRes39A6#1 = IMul(ilit390E,idx39A5);
          int idx39A8#1 = idx37AB;
          int mulRes39A9#1 = IMul(ilit390E,idx39A8);
          int idx39AB#1 = idx37AE;
          int mulRes39AC#1 = IMul(ilit390E,idx39AB);
          int idx39AE#1 = idx37B1;
          int mulRes39AF#1 = IMul(ilit390E,idx39AE);
          int idx39B1#1 = idx37B4;
          int mulRes39B2#1 = IMul(ilit390E,idx39B1);
          int idx39B4#1 = idx37B7;
          int mulRes39B5#1 = IMul(ilit390E,idx39B4);
          int idx39B7#1 = idx37BA;
          int mulRes39B8#1 = IMul(ilit390E,idx39B7);
          int idx39BA#1 = idx37BD;
          int mulRes39BB#1 = IMul(ilit390E,idx39BA);
          int idx39BD#1 = idx37C0;
          int mulRes39BE#1 = IMul(ilit390E,idx39BD);
          int idx39C0#1 = idx37C3;
          int mulRes39C1#1 = IMul(ilit390E,idx39C0);
          int idx39C3#1 = idx37C6;
          int mulRes39C4#1 = IMul(ilit390E,idx39C3);
          int idx39C6#1 = idx37C9;
          int mulRes39C7#1 = IMul(ilit390E,idx39C6);
          int idx39C9#1 = idx37CC;
          int mulRes39CA#1 = IMul(ilit390E,idx39C9);
          int idx39CC#1 = idx37CF;
          int mulRes39CD#1 = IMul(ilit390E,idx39CC);
          int idx39CF#1 = idx37D2;
          int mulRes39D0#1 = IMul(ilit390E,idx39CF);
          int idx39D2#1 = idx37D5;
          int mulRes39D3#1 = IMul(ilit390E,idx39D2);
          int idx39D5#1 = idx37D8;
          int mulRes39D6#1 = IMul(ilit390E,idx39D5);
          int idx39D8#1 = idx37DB;
          int mulRes39D9#1 = IMul(ilit390E,idx39D8);
          int idx39DB#1 = idx37DE;
          int mulRes39DC#1 = IMul(ilit390E,idx39DB);
          int idx39DE#1 = idx37E1;
          int mulRes39DF#1 = IMul(ilit390E,idx39DE);
          int idx39E1#1 = idx37E4;
          int mulRes39E2#1 = IMul(ilit390E,idx39E1);
          int idx39E4#1 = idx37E7;
          int mulRes39E5#1 = IMul(ilit390E,idx39E4);
          int idx39E7#1 = idx37EA;
          int mulRes39E8#1 = IMul(ilit390E,idx39E7);
          int idx39EA#1 = idx37ED;
          int mulRes39EB#1 = IMul(ilit390E,idx39EA);
          int idx39ED#1 = idx37F0;
          int mulRes39EE#1 = IMul(ilit390E,idx39ED);
          int idx39F0#1 = idx37F3;
          int mulRes39F1#1 = IMul(ilit390E,idx39F0);
          int idx39F3#1 = idx37F6;
          int mulRes39F4#1 = IMul(ilit390E,idx39F3);
          int idx39F6#1 = idx37F9;
          int mulRes39F7#1 = IMul(ilit390E,idx39F6);
          int idx39F9#1 = idx37FC;
          int mulRes39FA#1 = IMul(ilit390E,idx39F9);
          int idx39FC#1 = idx37FF;
          int mulRes39FD#1 = IMul(ilit390E,idx39FC);
          int idx39FF#1 = idx3802;
          int mulRes3A00#1 = IMul(ilit390E,idx39FF);
          int idx3A02#1 = idx3805;
          int mulRes3A03#1 = IMul(ilit390E,idx3A02);
          int idx3A05#1 = idx3808;
          int mulRes3A06#1 = IMul(ilit390E,idx3A05);
          int idx3A08#1 = idx380B;
          int mulRes3A09#1 = IMul(ilit390E,idx3A08);
          real dof3A0A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3911);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3913);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3916);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3919);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391C);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391F);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3922);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3925);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3928);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392B);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392E);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3931);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3934);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3937);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393A);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393D);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3940);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3943);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3946);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3949);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394C);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394F);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3952);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3955);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3958);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395B);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395E);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3961);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3964);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3967);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396A);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396D);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3970);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3973);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3976);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3979);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397C);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397F);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3982);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3985);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3988);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398B);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398E);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3991);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3994);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3997);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399A);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399D);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A0);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A3);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A6);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A9);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AC);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AF);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B2);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B5);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B8);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BB);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BE);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C1);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C4);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C7);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CA);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CD);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D0);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D3);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D6);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D9);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DC);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DF);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E2);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E5);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E8);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EB);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EE);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F1);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F4);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F7);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FA);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FD);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A00);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A03);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A06);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A09);
          tensor[84] dofs3A5E#1 = <tensor[84]>[dof3A0A,dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D];
          tensor[84] femDofs390D#1 = dofs3A5E;
          real varAcc3BB2#6 = VIndex<3,0>(_t3708);
          real varAcc3BB3#6 = VIndex<3,1>(_t3708);
          real varAcc3BB4#6 = VIndex<3,2>(_t3708);
          real coeff3BB5#126 = 0.1e1;
          real prod3BB6#7 = RMul(coeff3BB5,coeff3BB5);
          real prod3BB7#1 = RMul(coeff3BB5,prod3BB6);
          real basisEval3BB8#1 = RMul(coeff3BB5,prod3BB7);
          real iden3BB9#7 = varAcc3BB4;
          real prod3BBA#6 = RMul(coeff3BB5,iden3BB9);
          real prod3BBB#1 = RMul(coeff3BB5,prod3BBA);
          real basisEval3BBC#1 = RMul(coeff3BB5,prod3BBB);
          real iden3BBD#7 = varAcc3BB3;
          real prod3BBE#6 = RMul(iden3BBD,coeff3BB5);
          real prod3BBF#1 = RMul(coeff3BB5,prod3BBE);
          real basisEval3BC0#1 = RMul(coeff3BB5,prod3BBF);
          real iden3BC1#22 = varAcc3BB2;
          real prod3BC2#1 = RMul(iden3BC1,prod3BB6);
          real basisEval3BC3#1 = RMul(coeff3BB5,prod3BC2);
          real prod23BC4#6 = RMul(iden3BB9,varAcc3BB4);
          real prod3BC5#5 = RMul(coeff3BB5,prod23BC4);
          real prod3BC6#1 = RMul(coeff3BB5,prod3BC5);
          real basisEval3BC7#1 = RMul(coeff3BB5,prod3BC6);
          real prod3BC8#5 = RMul(iden3BBD,iden3BB9);
          real prod3BC9#1 = RMul(coeff3BB5,prod3BC8);
          real basisEval3BCA#1 = RMul(coeff3BB5,prod3BC9);
          real prod23BCB#6 = RMul(iden3BBD,varAcc3BB3);
          real prod3BCC#5 = RMul(prod23BCB,coeff3BB5);
          real prod3BCD#1 = RMul(coeff3BB5,prod3BCC);
          real basisEval3BCE#1 = RMul(coeff3BB5,prod3BCD);
          real prod3BCF#1 = RMul(iden3BC1,prod3BBA);
          real basisEval3BD0#1 = RMul(coeff3BB5,prod3BCF);
          real prod3BD1#1 = RMul(iden3BC1,prod3BBE);
          real basisEval3BD2#1 = RMul(coeff3BB5,prod3BD1);
          real prod23BD3#16 = RMul(iden3BC1,varAcc3BB2);
          real prod3BD4#1 = RMul(prod23BD3,prod3BB6);
          real basisEval3BD5#1 = RMul(coeff3BB5,prod3BD4);
          real prod33BD6#5 = RMul(prod23BC4,varAcc3BB4);
          real prod3BD7#4 = RMul(coeff3BB5,prod33BD6);
          real prod3BD8#1 = RMul(coeff3BB5,prod3BD7);
          real basisEval3BD9#1 = RMul(coeff3BB5,prod3BD8);
          real prod3BDA#4 = RMul(iden3BBD,prod23BC4);
          real prod3BDB#1 = RMul(coeff3BB5,prod3BDA);
          real basisEval3BDC#1 = RMul(coeff3BB5,prod3BDB);
          real prod3BDD#4 = RMul(prod23BCB,iden3BB9);
          real prod3BDE#1 = RMul(coeff3BB5,prod3BDD);
          real basisEval3BDF#1 = RMul(coeff3BB5,prod3BDE);
          real prod33BE0#5 = RMul(prod23BCB,varAcc3BB3);
          real prod3BE1#4 = RMul(prod33BE0,coeff3BB5);
          real prod3BE2#1 = RMul(coeff3BB5,prod3BE1);
          real basisEval3BE3#1 = RMul(coeff3BB5,prod3BE2);
          real prod3BE4#1 = RMul(iden3BC1,prod3BC5);
          real basisEval3BE5#1 = RMul(coeff3BB5,prod3BE4);
          real prod3BE6#1 = RMul(iden3BC1,prod3BC8);
          real basisEval3BE7#1 = RMul(coeff3BB5,prod3BE6);
          real prod3BE8#1 = RMul(iden3BC1,prod3BCC);
          real basisEval3BE9#1 = RMul(coeff3BB5,prod3BE8);
          real prod3BEA#1 = RMul(prod23BD3,prod3BBA);
          real basisEval3BEB#1 = RMul(coeff3BB5,prod3BEA);
          real prod3BEC#1 = RMul(prod23BD3,prod3BBE);
          real basisEval3BED#1 = RMul(coeff3BB5,prod3BEC);
          real prod33BEE#11 = RMul(prod23BD3,varAcc3BB2);
          real prod3BEF#1 = RMul(prod33BEE,prod3BB6);
          real basisEval3BF0#1 = RMul(coeff3BB5,prod3BEF);
          real prod43BF1#4 = RMul(prod33BD6,varAcc3BB4);
          real prod3BF2#3 = RMul(coeff3BB5,prod43BF1);
          real prod3BF3#1 = RMul(coeff3BB5,prod3BF2);
          real basisEval3BF4#1 = RMul(coeff3BB5,prod3BF3);
          real prod3BF5#3 = RMul(iden3BBD,prod33BD6);
          real prod3BF6#1 = RMul(coeff3BB5,prod3BF5);
          real basisEval3BF7#1 = RMul(coeff3BB5,prod3BF6);
          real prod3BF8#3 = RMul(prod23BCB,prod23BC4);
          real prod3BF9#1 = RMul(coeff3BB5,prod3BF8);
          real basisEval3BFA#1 = RMul(coeff3BB5,prod3BF9);
          real prod3BFB#3 = RMul(prod33BE0,iden3BB9);
          real prod3BFC#1 = RMul(coeff3BB5,prod3BFB);
          real basisEval3BFD#1 = RMul(coeff3BB5,prod3BFC);
          real prod43BFE#4 = RMul(prod33BE0,varAcc3BB3);
          real prod3BFF#3 = RMul(prod43BFE,coeff3BB5);
          real prod3C00#1 = RMul(coeff3BB5,prod3BFF);
          real basisEval3C01#1 = RMul(coeff3BB5,prod3C00);
          real prod3C02#1 = RMul(iden3BC1,prod3BD7);
          real basisEval3C03#1 = RMul(coeff3BB5,prod3C02);
          real prod3C04#1 = RMul(iden3BC1,prod3BDA);
          real basisEval3C05#1 = RMul(coeff3BB5,prod3C04);
          real prod3C06#1 = RMul(iden3BC1,prod3BDD);
          real basisEval3C07#1 = RMul(coeff3BB5,prod3C06);
          real prod3C08#1 = RMul(iden3BC1,prod3BE1);
          real basisEval3C09#1 = RMul(coeff3BB5,prod3C08);
          real prod3C0A#1 = RMul(prod23BD3,prod3BC5);
          real basisEval3C0B#1 = RMul(coeff3BB5,prod3C0A);
          real prod3C0C#1 = RMul(prod23BD3,prod3BC8);
          real basisEval3C0D#1 = RMul(coeff3BB5,prod3C0C);
          real prod3C0E#1 = RMul(prod23BD3,prod3BCC);
          real basisEval3C0F#1 = RMul(coeff3BB5,prod3C0E);
          real prod3C10#1 = RMul(prod33BEE,prod3BBA);
          real basisEval3C11#1 = RMul(coeff3BB5,prod3C10);
          real prod3C12#1 = RMul(prod33BEE,prod3BBE);
          real basisEval3C13#1 = RMul(coeff3BB5,prod3C12);
          real prod43C14#7 = RMul(prod33BEE,varAcc3BB2);
          real prod3C15#1 = RMul(prod43C14,prod3BB6);
          real basisEval3C16#1 = RMul(coeff3BB5,prod3C15);
          real prod53C17#3 = RMul(prod43BF1,varAcc3BB4);
          real prod3C18#2 = RMul(coeff3BB5,prod53C17);
          real prod3C19#1 = RMul(coeff3BB5,prod3C18);
          real basisEval3C1A#1 = RMul(coeff3BB5,prod3C19);
          real prod3C1B#2 = RMul(iden3BBD,prod43BF1);
          real prod3C1C#1 = RMul(coeff3BB5,prod3C1B);
          real basisEval3C1D#1 = RMul(coeff3BB5,prod3C1C);
          real prod3C1E#2 = RMul(prod23BCB,prod33BD6);
          real prod3C1F#1 = RMul(coeff3BB5,prod3C1E);
          real basisEval3C20#1 = RMul(coeff3BB5,prod3C1F);
          real prod3C21#2 = RMul(prod33BE0,prod23BC4);
          real prod3C22#1 = RMul(coeff3BB5,prod3C21);
          real basisEval3C23#1 = RMul(coeff3BB5,prod3C22);
          real prod3C24#2 = RMul(prod43BFE,iden3BB9);
          real prod3C25#1 = RMul(coeff3BB5,prod3C24);
          real basisEval3C26#1 = RMul(coeff3BB5,prod3C25);
          real prod53C27#3 = RMul(prod43BFE,varAcc3BB3);
          real prod3C28#2 = RMul(prod53C27,coeff3BB5);
          real prod3C29#1 = RMul(coeff3BB5,prod3C28);
          real basisEval3C2A#1 = RMul(coeff3BB5,prod3C29);
          real prod3C2B#1 = RMul(iden3BC1,prod3BF2);
          real basisEval3C2C#1 = RMul(coeff3BB5,prod3C2B);
          real prod3C2D#1 = RMul(iden3BC1,prod3BF5);
          real basisEval3C2E#1 = RMul(coeff3BB5,prod3C2D);
          real prod3C2F#1 = RMul(iden3BC1,prod3BF8);
          real basisEval3C30#1 = RMul(coeff3BB5,prod3C2F);
          real prod3C31#1 = RMul(iden3BC1,prod3BFB);
          real basisEval3C32#1 = RMul(coeff3BB5,prod3C31);
          real prod3C33#1 = RMul(iden3BC1,prod3BFF);
          real basisEval3C34#1 = RMul(coeff3BB5,prod3C33);
          real prod3C35#1 = RMul(prod23BD3,prod3BD7);
          real basisEval3C36#1 = RMul(coeff3BB5,prod3C35);
          real prod3C37#1 = RMul(prod23BD3,prod3BDA);
          real basisEval3C38#1 = RMul(coeff3BB5,prod3C37);
          real prod3C39#1 = RMul(prod23BD3,prod3BDD);
          real basisEval3C3A#1 = RMul(coeff3BB5,prod3C39);
          real prod3C3B#1 = RMul(prod23BD3,prod3BE1);
          real basisEval3C3C#1 = RMul(coeff3BB5,prod3C3B);
          real prod3C3D#1 = RMul(prod33BEE,prod3BC5);
          real basisEval3C3E#1 = RMul(coeff3BB5,prod3C3D);
          real prod3C3F#1 = RMul(prod33BEE,prod3BC8);
          real basisEval3C40#1 = RMul(coeff3BB5,prod3C3F);
          real prod3C41#1 = RMul(prod33BEE,prod3BCC);
          real basisEval3C42#1 = RMul(coeff3BB5,prod3C41);
          real prod3C43#1 = RMul(prod43C14,prod3BBA);
          real basisEval3C44#1 = RMul(coeff3BB5,prod3C43);
          real prod3C45#1 = RMul(prod43C14,prod3BBE);
          real basisEval3C46#1 = RMul(coeff3BB5,prod3C45);
          real prod53C47#4 = RMul(prod43C14,varAcc3BB2);
          real prod3C48#1 = RMul(prod53C47,prod3BB6);
          real basisEval3C49#1 = RMul(coeff3BB5,prod3C48);
          real prod63C4A#1 = RMul(prod53C17,varAcc3BB4);
          real prod3C4B#1 = RMul(coeff3BB5,prod63C4A);
          real prod3C4C#1 = RMul(coeff3BB5,prod3C4B);
          real basisEval3C4D#1 = RMul(coeff3BB5,prod3C4C);
          real prod3C4E#1 = RMul(iden3BBD,prod53C17);
          real prod3C4F#1 = RMul(coeff3BB5,prod3C4E);
          real basisEval3C50#1 = RMul(coeff3BB5,prod3C4F);
          real prod3C51#1 = RMul(prod23BCB,prod43BF1);
          real prod3C52#1 = RMul(coeff3BB5,prod3C51);
          real basisEval3C53#1 = RMul(coeff3BB5,prod3C52);
          real prod3C54#1 = RMul(prod33BE0,prod33BD6);
          real prod3C55#1 = RMul(coeff3BB5,prod3C54);
          real basisEval3C56#1 = RMul(coeff3BB5,prod3C55);
          real prod3C57#1 = RMul(prod43BFE,prod23BC4);
          real prod3C58#1 = RMul(coeff3BB5,prod3C57);
          real basisEval3C59#1 = RMul(coeff3BB5,prod3C58);
          real prod3C5A#1 = RMul(prod53C27,iden3BB9);
          real prod3C5B#1 = RMul(coeff3BB5,prod3C5A);
          real basisEval3C5C#1 = RMul(coeff3BB5,prod3C5B);
          real prod63C5D#1 = RMul(prod53C27,varAcc3BB3);
          real prod3C5E#1 = RMul(prod63C5D,coeff3BB5);
          real prod3C5F#1 = RMul(coeff3BB5,prod3C5E);
          real basisEval3C60#1 = RMul(coeff3BB5,prod3C5F);
          real prod3C61#1 = RMul(iden3BC1,prod3C18);
          real basisEval3C62#1 = RMul(coeff3BB5,prod3C61);
          real prod3C63#1 = RMul(iden3BC1,prod3C1B);
          real basisEval3C64#1 = RMul(coeff3BB5,prod3C63);
          real prod3C65#1 = RMul(iden3BC1,prod3C1E);
          real basisEval3C66#1 = RMul(coeff3BB5,prod3C65);
          real prod3C67#1 = RMul(iden3BC1,prod3C21);
          real basisEval3C68#1 = RMul(coeff3BB5,prod3C67);
          real prod3C69#1 = RMul(iden3BC1,prod3C24);
          real basisEval3C6A#1 = RMul(coeff3BB5,prod3C69);
          real prod3C6B#1 = RMul(iden3BC1,prod3C28);
          real basisEval3C6C#1 = RMul(coeff3BB5,prod3C6B);
          real prod3C6D#1 = RMul(prod23BD3,prod3BF2);
          real basisEval3C6E#1 = RMul(coeff3BB5,prod3C6D);
          real prod3C6F#1 = RMul(prod23BD3,prod3BF5);
          real basisEval3C70#1 = RMul(coeff3BB5,prod3C6F);
          real prod3C71#1 = RMul(prod23BD3,prod3BF8);
          real basisEval3C72#1 = RMul(coeff3BB5,prod3C71);
          real prod3C73#1 = RMul(prod23BD3,prod3BFB);
          real basisEval3C74#1 = RMul(coeff3BB5,prod3C73);
          real prod3C75#1 = RMul(prod23BD3,prod3BFF);
          real basisEval3C76#1 = RMul(coeff3BB5,prod3C75);
          real prod3C77#1 = RMul(prod33BEE,prod3BD7);
          real basisEval3C78#1 = RMul(coeff3BB5,prod3C77);
          real prod3C79#1 = RMul(prod33BEE,prod3BDA);
          real basisEval3C7A#1 = RMul(coeff3BB5,prod3C79);
          real prod3C7B#1 = RMul(prod33BEE,prod3BDD);
          real basisEval3C7C#1 = RMul(coeff3BB5,prod3C7B);
          real prod3C7D#1 = RMul(prod33BEE,prod3BE1);
          real basisEval3C7E#1 = RMul(coeff3BB5,prod3C7D);
          real prod3C7F#1 = RMul(prod43C14,prod3BC5);
          real basisEval3C80#1 = RMul(coeff3BB5,prod3C7F);
          real prod3C81#1 = RMul(prod43C14,prod3BC8);
          real basisEval3C82#1 = RMul(coeff3BB5,prod3C81);
          real prod3C83#1 = RMul(prod43C14,prod3BCC);
          real basisEval3C84#1 = RMul(coeff3BB5,prod3C83);
          real prod3C85#1 = RMul(prod53C47,prod3BBA);
          real basisEval3C86#1 = RMul(coeff3BB5,prod3C85);
          real prod3C87#1 = RMul(prod53C47,prod3BBE);
          real basisEval3C88#1 = RMul(coeff3BB5,prod3C87);
          real prod63C89#1 = RMul(prod53C47,varAcc3BB2);
          real prod3C8A#1 = RMul(prod63C89,prod3BB6);
          real basisEval3C8B#1 = RMul(coeff3BB5,prod3C8A);
          tensor[84] intermediateCons3C8C#1 = <tensor[84]>[basisEval3BB8,basisEval3BBC,basisEval3BC0,basisEval3BC3,basisEval3BC7,basisEval3BCA,basisEval3BCE,basisEval3BD0,basisEval3BD2,basisEval3BD5,basisEval3BD9,basisEval3BDC,basisEval3BDF,basisEval3BE3,basisEval3BE5,basisEval3BE7,basisEval3BE9,basisEval3BEB,basisEval3BED,basisEval3BF0,basisEval3BF4,basisEval3BF7,basisEval3BFA,basisEval3BFD,basisEval3C01,basisEval3C03,basisEval3C05,basisEval3C07,basisEval3C09,basisEval3C0B,basisEval3C0D,basisEval3C0F,basisEval3C11,basisEval3C13,basisEval3C16,basisEval3C1A,basisEval3C1D,basisEval3C20,basisEval3C23,basisEval3C26,basisEval3C2A,basisEval3C2C,basisEval3C2E,basisEval3C30,basisEval3C32,basisEval3C34,basisEval3C36,basisEval3C38,basisEval3C3A,basisEval3C3C,basisEval3C3E,basisEval3C40,basisEval3C42,basisEval3C44,basisEval3C46,basisEval3C49,basisEval3C4D,basisEval3C50,basisEval3C53,basisEval3C56,basisEval3C59,basisEval3C5C,basisEval3C60,basisEval3C62,basisEval3C64,basisEval3C66,basisEval3C68,basisEval3C6A,basisEval3C6C,basisEval3C6E,basisEval3C70,basisEval3C72,basisEval3C74,basisEval3C76,basisEval3C78,basisEval3C7A,basisEval3C7C,basisEval3C7E,basisEval3C80,basisEval3C82,basisEval3C84,basisEval3C86,basisEval3C88,basisEval3C8B];
          tensor[84] basisResult3BB1#1 = intermediateCons3C8C;
          real probe_l_83D69#1 = VDot<84>(femDofs390D,basisResult3BB1);
          real op1_e3_l_93D6C#1 = RSub(probe_l_83D69,cmin36FF);
          real op1_e3_l_103D6F#1 = RSub(cmax3701,cmin36FF);
          real op1_e3_l_113D72#1 = RDiv(op1_e3_l_93D6C,op1_e3_l_103D6F);
          real op1_e3_l_123D75#1 = RSub(_t36A9,_t36A7);
          real op1_e3_l_133D78#1 = RMul(op1_e3_l_113D72,op1_e3_l_123D75);
          real _t3D7B#1 = RAdd(_t36A7,op1_e3_l_133D78);
          real Mtransform3D7E#1 = Transform<IMAGE1D<double[3]>>(cmap2469);
          real MxPos3D80#1 = RMul(Mtransform3D7E,_t3D7B);
          real Ttranslate3D83#1 = Translate<IMAGE1D<double[3]>>(cmap2469);
          real imgPos3D85#2 = RAdd(MxPos3D80,Ttranslate3D83);
          real nd3D88#2 = Floor<1>(imgPos3D85);
          real f3D8A#2 = RSub(imgPos3D85,nd3D88);
          int n3D8D#1 = RealToInt<1>(nd3D88);
          int idx3D8F#5 = n3D8D;
          bool isInside3D91#1 = IndexInside<IMAGE1D<double[3]>,2>(idx3D8F,cmap2469);
          if isInside3D91 then goto ASSIGN4265 else goto ASSIGN4269
        ASSIGN4265:  preds = [COND3D93]
          int addRes3D96#1 = idx3D8F;
          int stride3D97#2 = 3;
          int offp3D98#3 = IMul(stride3D97,addRes3D96);
          real v0_3D99#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D98);
          int ilit3D9A#3 = 1;
          int addRes3D9B#1 = IAdd(idx3D8F,ilit3D9A);
          int offp3D9C#3 = IMul(stride3D97,addRes3D9B);
          real v1_3D9D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9C);
          tensor[2] v_3D9E#1 = <tensor[2]>[v0_3D99,v1_3D9D];
          int offp3D9F#1 = IAdd(offp3D98,ilit3D9A);
          real v0_3DA0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9F);
          int offp3DA1#1 = IAdd(offp3D9C,ilit3D9A);
          real v1_3DA2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA1);
          tensor[2] v_3DA3#1 = <tensor[2]>[v0_3DA0,v1_3DA2];
          int offset3DA4#2 = 2;
          int offp3DA5#1 = IAdd(offp3D98,offset3DA4);
          real v0_3DA6#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA5);
          int offp3DA7#1 = IAdd(offp3D9C,offset3DA4);
          real v1_3DA8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA7);
          tensor[2] v_3DA9#1 = <tensor[2]>[v0_3DA6,v1_3DA8];
          tensor[3,2] voxels3DAA#1 = <tensor[3,2]>[v_3D9E,v_3DA3,v_3DA9];
          tensor[3,2] ldvox3D94#1 = voxels3DAA;
          goto JOIN3DC4
        JOIN3DC4:  preds = [ASSIGN3DC1,ASSIGN3E9E]
          tensor[3,2] ldvox3DC2#3 = phi(ldvox3D94,ldvox3DC3)
          real rlit3DC6#1 = 0.1e1;
          real idx3DC7#1 = RSub(f3D8A,rlit3DC6);
          tensor[2] kernX_3DC5#1 = <tensor[2]>[f3D8A,idx3DC7];
          real _f3DD0#1 = 0.1e1;
          real _f3DD1#1 = 0.1e1;
          tensor[2] a03DCC#1 = <tensor[2]>[_f3DD0,_f3DD1];
          real _f3DCE#1 = -0.1e1;
          real _f3DCF#1 = 0.1e1;
          tensor[2] a13DCD#1 = <tensor[2]>[_f3DCE,_f3DCF];
          tensor[2] prod13DD2#1 = VMul<2>(kernX_3DC5,a13DCD);
          tensor[2] kevalX_d0_3DCB#3 = VAdd<2>(a03DCC,prod13DD2);
          tensor[2] projIx3DDC#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC2);
          real vdot3DDD#1 = VDot<2>(projIx3DDC,kevalX_d0_3DCB);
          tensor[2] projIx3DDE#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC2);
          real vdot3DDF#1 = VDot<2>(projIx3DDE,kevalX_d0_3DCB);
          tensor[2] projIx3DE0#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC2);
          real vdot3DE1#1 = VDot<2>(projIx3DE0,kevalX_d0_3DCB);
          tensor[3] mcol3DDB#1 = <tensor[3]>[vdot3DDD,vdot3DDF,vdot3DE1];
          goto JOIN3DEB
        JOIN3DEB:  preds = [ASSIGN3DE9,COND3707]
          tensor[3] mcol3DEA#3 = phi(mcol3DDB,mcol3703)
          real realLit3DED#1 = 0.1e1;
          real op1_e3_l_213DEC#1 = RDiv(realLit3DED,op1_e3_l_836B0);
          tensor[3] op1_e3_l_223DF1#1 = VScale<3>(op1_e3_l_213DEC,step36A4);
          tensor[3] op1_e3_l_233DF4#1 = VNeg<3>(op1_e3_l_223DF1);
          real op1_e3_l_243DF7#2 = VDot<3>(op1_e3_l_233DF4,litwsp2493);
          real op1_e3_l_253DFA#1 = RMul(op1_e3_l_243DF7,op1_e3_l_243DF7);
          real op1_e3_l_263DFD#1 = RMul(phKd24A1,op1_e3_l_253DFA);
          real op1_e3_l_283E00#1 = RSub(rayN24AB,camNearVsp248F);
          real op1_e3_l_293E03#1 = RSub(camFarVsp2491,camNearVsp248F);
          real op1_e3_l_303E06#1 = RDiv(op1_e3_l_283E00,op1_e3_l_293E03);
          tensor[3] op1_e3_l_313E09#1 = VSub<3>(mcFar2487,mcNear2485);
          tensor[3] op1_e3_l_323E0C#1 = VScale<3>(op1_e3_l_303E06,op1_e3_l_313E09);
          real op1_e3_l_333E0F#3 = RAdd(phKa249F,op1_e3_l_263DFD);
          tensor[3] op1_e3_l_343E12#3 = VAdd<3>(mcNear2485,op1_e3_l_323E0C);
          real r3E16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E12);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(mcol3DEA);
          real r3E18#1 = RMul(op1_e3_l_333E0F,r3E16);
          real r3E19#1 = RMul(r3E18,r3E17);
          real r3E1A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E12);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(mcol3DEA);
          real r3E1C#1 = RMul(op1_e3_l_333E0F,r3E1A);
          real r3E1D#1 = RMul(r3E1C,r3E1B);
          real r3E1E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E12);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(mcol3DEA);
          real r3E20#1 = RMul(op1_e3_l_333E0F,r3E1E);
          real r3E21#1 = RMul(r3E20,r3E1F);
          tensor[3] op1_e3_l_353E15#1 = <tensor[3]>[r3E19,r3E1D,r3E21];
          real r3E31#1 = _t36A9;
          real r3E32#3 = RMul(phKs24A3,scomp36FD);
          real r3E33#1 = RMul(r3E32,r3E31);
          real r3E34#1 = _t36A9;
          real r3E35#1 = RMul(r3E32,r3E34);
          real r3E36#1 = _t36A9;
          real r3E37#1 = RMul(r3E32,r3E36);
          tensor[3] op1_e3_l_363E30#1 = <tensor[3]>[r3E33,r3E35,r3E37];
          real op1_e3_l_373E41#2 = RSub(_t36A9,_t36D4);
          tensor[3] op1_e3_l_383E44#3 = VAdd<3>(op1_e3_l_353E15,op1_e3_l_363E30);
          real r3E48#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E44);
          real r3E49#3 = RMul(transp24A9,op1_e3_l_373E41);
          real r3E4A#1 = RMul(r3E49,r3E48);
          real r3E4B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E44);
          real r3E4C#1 = RMul(r3E49,r3E4B);
          real r3E4D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E44);
          real r3E4E#1 = RMul(r3E49,r3E4D);
          tensor[3] op1_e3_l_393E47#1 = <tensor[3]>[r3E4A,r3E4C,r3E4E];
          tensor[3] rgb3E58#2 = VAdd<3>(rgb24A7,op1_e3_l_393E47);
          real op1_e3_l_53E5B#1 = RSub(_t36A9,op1_e3_l_373E41);
          real transp3E5E#2 = RMul(transp24A9,op1_e3_l_53E5B);
          bool _t3E61#1 = LT<real>(transp3E5E,transp02479);
          if _t3E61 then goto SAVE3E64 else goto JOIN3E69
        SAVE3E64:  preds = [COND3E63]
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = _t36A7;
          stabilize
          goto JOIN3E69
        JOIN3E69:  preds = [*STABILIZE3E67,COND3E63]
          real transp3E68#1 = phi(transp3E5E)
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = transp3E68;
          active
        ASSIGN4269:  preds = [COND3D93]
          int addRes3E6F#1 = idx3D8F;
          int ix3E70#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,addRes3E6F);
          int stride3E71#2 = 3;
          int offp3E72#3 = IMul(stride3E71,ix3E70);
          real v0_3E73#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E72);
          int ilit3E74#3 = 1;
          int addRes3E75#1 = IAdd(idx3D8F,ilit3E74);
          int ix3E76#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,addRes3E75);
          int offp3E77#3 = IMul(stride3E71,ix3E76);
          real v1_3E78#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E77);
          tensor[2] v_3E79#1 = <tensor[2]>[v0_3E73,v1_3E78];
          int offp3E7A#1 = IAdd(offp3E72,ilit3E74);
          real v0_3E7B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7A);
          int offp3E7C#1 = IAdd(offp3E77,ilit3E74);
          real v1_3E7D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7C);
          tensor[2] v_3E7E#1 = <tensor[2]>[v0_3E7B,v1_3E7D];
          int offset3E7F#2 = 2;
          int offp3E80#1 = IAdd(offp3E72,offset3E7F);
          real v0_3E81#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E80);
          int offp3E82#1 = IAdd(offp3E77,offset3E7F);
          real v1_3E83#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E82);
          tensor[2] v_3E84#1 = <tensor[2]>[v0_3E81,v1_3E83];
          tensor[3,2] voxels3E85#1 = <tensor[3,2]>[v_3E79,v_3E7E,v_3E84];
          tensor[3,2] ldvox3DC3#1 = voxels3E85;
          goto JOIN3DC4
        ASSIGN3EA0:  preds = [COND2D6D]
          real _t3E9F#1 = -0.1e1;
          real _t3EA1#1 = -0.2e1;
          real _t3EA3#1 = -0.3e1;
          real _t3EA7#1 = -0.1e1;
          real _t3EA9#6 = 0.e0;
          real _t3EAD#1 = -0.2e1;
          real _t3EB1#1 = -0.3e1;
          real r3EB8#3 = TensorIndex<tensor[3,3],[0,0]>(rot248D);
          real r3EB9#3 = _t3EA7;
          real r3EBA#1 = RMul(r3EB8,r3EB9);
          real r3EBB#3 = TensorIndex<tensor[3,3],[1,0]>(rot248D);
          real r3EBC#3 = _t3EA9;
          real r3EBD#1 = RMul(r3EBB,r3EBC);
          real r3EBE#3 = TensorIndex<tensor[3,3],[2,0]>(rot248D);
          real r3EBF#3 = _t3EA9;
          real r3EC0#1 = RMul(r3EBE,r3EBF);
          real r3EC1#1 = RAdd(r3EBA,r3EBD);
          real r3EC2#1 = RAdd(r3EC1,r3EC0);
          real r3EC3#3 = _t3EA9;
          real r3EC4#1 = RMul(r3EB8,r3EC3);
          real r3EC5#3 = _t3EAD;
          real r3EC6#1 = RMul(r3EBB,r3EC5);
          real r3EC7#3 = _t3EA9;
          real r3EC8#1 = RMul(r3EBE,r3EC7);
          real r3EC9#1 = RAdd(r3EC4,r3EC6);
          real r3ECA#1 = RAdd(r3EC9,r3EC8);
          real r3ECB#3 = _t3EA9;
          real r3ECC#1 = RMul(r3EB8,r3ECB);
          real r3ECD#3 = _t3EA9;
          real r3ECE#1 = RMul(r3EBB,r3ECD);
          real r3ECF#3 = _t3EB1;
          real r3ED0#1 = RMul(r3EBE,r3ECF);
          real r3ED1#1 = RAdd(r3ECC,r3ECE);
          real r3ED2#1 = RAdd(r3ED1,r3ED0);
          real r3ED4#3 = TensorIndex<tensor[3,3],[0,1]>(rot248D);
          real r3ED5#1 = RMul(r3ED4,r3EB9);
          real r3ED6#3 = TensorIndex<tensor[3,3],[1,1]>(rot248D);
          real r3ED7#1 = RMul(r3ED6,r3EBC);
          real r3ED8#3 = TensorIndex<tensor[3,3],[2,1]>(rot248D);
          real r3ED9#1 = RMul(r3ED8,r3EBF);
          real r3EDA#1 = RAdd(r3ED5,r3ED7);
          real r3EDB#1 = RAdd(r3EDA,r3ED9);
          real r3EDC#1 = RMul(r3ED4,r3EC3);
          real r3EDD#1 = RMul(r3ED6,r3EC5);
          real r3EDE#1 = RMul(r3ED8,r3EC7);
          real r3EDF#1 = RAdd(r3EDC,r3EDD);
          real r3EE0#1 = RAdd(r3EDF,r3EDE);
          real r3EE1#1 = RMul(r3ED4,r3ECB);
          real r3EE2#1 = RMul(r3ED6,r3ECD);
          real r3EE3#1 = RMul(r3ED8,r3ECF);
          real r3EE4#1 = RAdd(r3EE1,r3EE2);
          real r3EE5#1 = RAdd(r3EE4,r3EE3);
          real r3EE7#3 = TensorIndex<tensor[3,3],[0,2]>(rot248D);
          real r3EE8#1 = RMul(r3EE7,r3EB9);
          real r3EE9#3 = TensorIndex<tensor[3,3],[1,2]>(rot248D);
          real r3EEA#1 = RMul(r3EE9,r3EBC);
          real r3EEB#3 = TensorIndex<tensor[3,3],[2,2]>(rot248D);
          real r3EEC#1 = RMul(r3EEB,r3EBF);
          real r3EED#1 = RAdd(r3EE8,r3EEA);
          real r3EEE#1 = RAdd(r3EED,r3EEC);
          real r3EEF#1 = RMul(r3EE7,r3EC3);
          real r3EF0#1 = RMul(r3EE9,r3EC5);
          real r3EF1#1 = RMul(r3EEB,r3EC7);
          real r3EF2#1 = RAdd(r3EEF,r3EF0);
          real r3EF3#1 = RAdd(r3EF2,r3EF1);
          real r3EF4#1 = RMul(r3EE7,r3ECB);
          real r3EF5#1 = RMul(r3EE9,r3ECD);
          real r3EF6#1 = RMul(r3EEB,r3ECF);
          real r3EF7#1 = RAdd(r3EF4,r3EF5);
          real r3EF8#1 = RAdd(r3EF7,r3EF6);
          real r3F3F#3 = r3EC2;
          real r3F40#3 = TensorIndex<tensor[3,3],[0,0]>(rot248D);
          real r3F41#1 = RMul(r3F3F,r3F40);
          real r3F42#3 = r3ECA;
          real r3F43#3 = TensorIndex<tensor[3,3],[1,0]>(rot248D);
          real r3F44#1 = RMul(r3F42,r3F43);
          real r3F45#3 = r3ED2;
          real r3F46#3 = TensorIndex<tensor[3,3],[2,0]>(rot248D);
          real r3F47#1 = RMul(r3F45,r3F46);
          real r3F48#1 = RAdd(r3F41,r3F44);
          real r3F49#1 = RAdd(r3F48,r3F47);
          real r3F4A#3 = TensorIndex<tensor[3,3],[0,1]>(rot248D);
          real r3F4B#1 = RMul(r3F3F,r3F4A);
          real r3F4C#3 = TensorIndex<tensor[3,3],[1,1]>(rot248D);
          real r3F4D#1 = RMul(r3F42,r3F4C);
          real r3F4E#3 = TensorIndex<tensor[3,3],[2,1]>(rot248D);
          real r3F4F#1 = RMul(r3F45,r3F4E);
          real r3F50#1 = RAdd(r3F4B,r3F4D);
          real r3F51#1 = RAdd(r3F50,r3F4F);
          real r3F52#3 = TensorIndex<tensor[3,3],[0,2]>(rot248D);
          real r3F53#1 = RMul(r3F3F,r3F52);
          real r3F54#3 = TensorIndex<tensor[3,3],[1,2]>(rot248D);
          real r3F55#1 = RMul(r3F42,r3F54);
          real r3F56#3 = TensorIndex<tensor[3,3],[2,2]>(rot248D);
          real r3F57#1 = RMul(r3F45,r3F56);
          real r3F58#1 = RAdd(r3F53,r3F55);
          real r3F59#1 = RAdd(r3F58,r3F57);
          tensor[3] tensor3F5A#1 = <tensor[3]>[r3F49,r3F51,r3F59];
          real r3F5B#3 = r3EDB;
          real r3F5C#1 = RMul(r3F5B,r3F40);
          real r3F5D#3 = r3EE0;
          real r3F5E#1 = RMul(r3F5D,r3F43);
          real r3F5F#3 = r3EE5;
          real r3F60#1 = RMul(r3F5F,r3F46);
          real r3F61#1 = RAdd(r3F5C,r3F5E);
          real r3F62#1 = RAdd(r3F61,r3F60);
          real r3F63#1 = RMul(r3F5B,r3F4A);
          real r3F64#1 = RMul(r3F5D,r3F4C);
          real r3F65#1 = RMul(r3F5F,r3F4E);
          real r3F66#1 = RAdd(r3F63,r3F64);
          real r3F67#1 = RAdd(r3F66,r3F65);
          real r3F68#1 = RMul(r3F5B,r3F52);
          real r3F69#1 = RMul(r3F5D,r3F54);
          real r3F6A#1 = RMul(r3F5F,r3F56);
          real r3F6B#1 = RAdd(r3F68,r3F69);
          real r3F6C#1 = RAdd(r3F6B,r3F6A);
          tensor[3] tensor3F6D#1 = <tensor[3]>[r3F62,r3F67,r3F6C];
          real r3F6E#3 = r3EEE;
          real r3F6F#1 = RMul(r3F6E,r3F40);
          real r3F70#3 = r3EF3;
          real r3F71#1 = RMul(r3F70,r3F43);
          real r3F72#3 = r3EF8;
          real r3F73#1 = RMul(r3F72,r3F46);
          real r3F74#1 = RAdd(r3F6F,r3F71);
          real r3F75#1 = RAdd(r3F74,r3F73);
          real r3F76#1 = RMul(r3F6E,r3F4A);
          real r3F77#1 = RMul(r3F70,r3F4C);
          real r3F78#1 = RMul(r3F72,r3F4E);
          real r3F79#1 = RAdd(r3F76,r3F77);
          real r3F7A#1 = RAdd(r3F79,r3F78);
          real r3F7B#1 = RMul(r3F6E,r3F52);
          real r3F7C#1 = RMul(r3F70,r3F54);
          real r3F7D#1 = RMul(r3F72,r3F56);
          real r3F7E#1 = RAdd(r3F7B,r3F7C);
          real r3F7F#1 = RAdd(r3F7E,r3F7D);
          tensor[3] tensor3F80#1 = <tensor[3]>[r3F75,r3F7A,r3F7F];
          tensor[3,3] H3F3E#1 = <tensor[3,3]>[tensor3F5A,tensor3F6D,tensor3F80];
          (real[3] evals3FC5#2,tensor[3][3] E3FC6#2) = EigenVecs3x3(H3F3E);
          int _t3FC8#2 = 2;
          tensor[3] _t3FCA#6 = Subscript<tensor[3][3]>(E3FC6,_t3FC8);
          real _t3FCC#9 = Subscript<real[3]>(evals3FC5,_t3FC8);
          int _t3FCE#2 = 1;
          tensor[3] _t3FD0#6 = Subscript<tensor[3][3]>(E3FC6,_t3FCE);
          real _t3FD2#9 = Subscript<real[3]>(evals3FC5,_t3FCE);
          real r3FD5#1 = TensorIndex<tensor[3],[0]>(_t3FCA);
          tensor[3] binopV3FD6#3 = VScale<3>(r3FD5,_t3FCA);
          real r3FD7#1 = TensorIndex<tensor[3],[1]>(_t3FCA);
          tensor[3] binopV3FD8#3 = VScale<3>(r3FD7,_t3FCA);
          real r3FD9#1 = TensorIndex<tensor[3],[2]>(_t3FCA);
          tensor[3] binopV3FDA#3 = VScale<3>(r3FD9,_t3FCA);
          real r3FE4#1 = TensorIndex<tensor[3],[0]>(_t3FD0);
          tensor[3] binopV3FE5#3 = VScale<3>(r3FE4,_t3FD0);
          real r3FE6#1 = TensorIndex<tensor[3],[1]>(_t3FD0);
          tensor[3] binopV3FE7#3 = VScale<3>(r3FE6,_t3FD0);
          real r3FE8#1 = TensorIndex<tensor[3],[2]>(_t3FD0);
          tensor[3] binopV3FE9#3 = VScale<3>(r3FE8,_t3FD0);
          real r3FF3#1 = VIndex<3,0>(binopV3FD6);
          real r3FF4#1 = RDiv(r3FF3,_t3FCC);
          real r3FF5#1 = VIndex<3,1>(binopV3FD6);
          real r3FF6#1 = RDiv(r3FF5,_t3FCC);
          real r3FF7#1 = VIndex<3,2>(binopV3FD6);
          real r3FF8#1 = RDiv(r3FF7,_t3FCC);
          tensor[3] tensor3FF9#1 = <tensor[3]>[r3FF4,r3FF6,r3FF8];
          real r3FFA#1 = VIndex<3,0>(binopV3FD8);
          real r3FFB#1 = RDiv(r3FFA,_t3FCC);
          real r3FFC#1 = VIndex<3,1>(binopV3FD8);
          real r3FFD#1 = RDiv(r3FFC,_t3FCC);
          real r3FFE#1 = VIndex<3,2>(binopV3FD8);
          real r3FFF#1 = RDiv(r3FFE,_t3FCC);
          tensor[3] tensor4000#1 = <tensor[3]>[r3FFB,r3FFD,r3FFF];
          real r4001#1 = VIndex<3,0>(binopV3FDA);
          real r4002#1 = RDiv(r4001,_t3FCC);
          real r4003#1 = VIndex<3,1>(binopV3FDA);
          real r4004#1 = RDiv(r4003,_t3FCC);
          real r4005#1 = VIndex<3,2>(binopV3FDA);
          real r4006#1 = RDiv(r4005,_t3FCC);
          tensor[3] tensor4007#1 = <tensor[3]>[r4002,r4004,r4006];
          real r4020#1 = VIndex<3,0>(binopV3FE5);
          real r4021#1 = RDiv(r4020,_t3FD2);
          real r4022#1 = VIndex<3,1>(binopV3FE5);
          real r4023#1 = RDiv(r4022,_t3FD2);
          real r4024#1 = VIndex<3,2>(binopV3FE5);
          real r4025#1 = RDiv(r4024,_t3FD2);
          tensor[3] tensor4026#1 = <tensor[3]>[r4021,r4023,r4025];
          real r4027#1 = VIndex<3,0>(binopV3FE7);
          real r4028#1 = RDiv(r4027,_t3FD2);
          real r4029#1 = VIndex<3,1>(binopV3FE7);
          real r402A#1 = RDiv(r4029,_t3FD2);
          real r402B#1 = VIndex<3,2>(binopV3FE7);
          real r402C#1 = RDiv(r402B,_t3FD2);
          tensor[3] tensor402D#1 = <tensor[3]>[r4028,r402A,r402C];
          real r402E#1 = VIndex<3,0>(binopV3FE9);
          real r402F#1 = RDiv(r402E,_t3FD2);
          real r4030#1 = VIndex<3,1>(binopV3FE9);
          real r4031#1 = RDiv(r4030,_t3FD2);
          real r4032#1 = VIndex<3,2>(binopV3FE9);
          real r4033#1 = RDiv(r4032,_t3FD2);
          tensor[3] tensor4034#1 = <tensor[3]>[r402F,r4031,r4033];
          tensor[3] projParam404D#1 = tensor3FF9;
          tensor[3] projParam404E#1 = tensor4026;
          tensor[3] v404F#1 = VAdd<3>(projParam404D,projParam404E);
          tensor[3] projParam4050#1 = tensor4000;
          tensor[3] projParam4051#1 = tensor402D;
          tensor[3] v4052#1 = VAdd<3>(projParam4050,projParam4051);
          tensor[3] projParam4053#1 = tensor4007;
          tensor[3] projParam4054#1 = tensor4034;
          tensor[3] v4055#1 = VAdd<3>(projParam4053,projParam4054);
          tensor[3] projParam4062#1 = ProjectLast<tensor[3,3],[0]>(rot248D);
          real vdot4063#1 = VDot<3>(projParam4062,pos24B7);
          tensor[3] projParam4064#1 = ProjectLast<tensor[3,3],[1]>(rot248D);
          real vdot4065#1 = VDot<3>(projParam4064,pos24B7);
          tensor[3] projParam4066#1 = ProjectLast<tensor[3,3],[2]>(rot248D);
          real vdot4067#1 = VDot<3>(projParam4066,pos24B7);
          tensor[3] projParam4071#1 = v404F;
          tensor[3] negV4072#1 = VNeg<3>(projParam4071);
          tensor[3] projParam4073#1 = v4052;
          tensor[3] negV4074#1 = VNeg<3>(projParam4073);
          tensor[3] projParam4075#1 = v4055;
          tensor[3] negV4076#1 = VNeg<3>(projParam4075);
          real r4080#1 = TensorIndex<tensor[3,3],[0,0]>(rot248D);
          real r4081#3 = _t3E9F;
          real r4082#3 = vdot4063;
          real r4083#1 = RMul(r4080,r4081);
          real r4084#1 = RMul(r4083,r4082);
          real r4085#1 = TensorIndex<tensor[3,3],[1,0]>(rot248D);
          real r4086#3 = _t3EA1;
          real r4087#3 = vdot4065;
          real r4088#1 = RMul(r4085,r4086);
          real r4089#1 = RMul(r4088,r4087);
          real r408A#1 = TensorIndex<tensor[3,3],[2,0]>(rot248D);
          real r408B#3 = _t3EA3;
          real r408C#3 = vdot4067;
          real r408D#1 = RMul(r408A,r408B);
          real r408E#1 = RMul(r408D,r408C);
          real r408F#1 = RAdd(r4084,r4089);
          real r4090#1 = RAdd(r408F,r408E);
          real r4091#1 = TensorIndex<tensor[3,3],[0,1]>(rot248D);
          real r4092#1 = RMul(r4091,r4081);
          real r4093#1 = RMul(r4092,r4082);
          real r4094#1 = TensorIndex<tensor[3,3],[1,1]>(rot248D);
          real r4095#1 = RMul(r4094,r4086);
          real r4096#1 = RMul(r4095,r4087);
          real r4097#1 = TensorIndex<tensor[3,3],[2,1]>(rot248D);
          real r4098#1 = RMul(r4097,r408B);
          real r4099#1 = RMul(r4098,r408C);
          real r409A#1 = RAdd(r4093,r4096);
          real r409B#1 = RAdd(r409A,r4099);
          real r409C#1 = TensorIndex<tensor[3,3],[0,2]>(rot248D);
          real r409D#1 = RMul(r409C,r4081);
          real r409E#1 = RMul(r409D,r4082);
          real r409F#1 = TensorIndex<tensor[3,3],[1,2]>(rot248D);
          real r40A0#1 = RMul(r409F,r4086);
          real r40A1#1 = RMul(r40A0,r4087);
          real r40A2#1 = TensorIndex<tensor[3,3],[2,2]>(rot248D);
          real r40A3#1 = RMul(r40A2,r408B);
          real r40A4#1 = RMul(r40A3,r408C);
          real r40A5#1 = RAdd(r409E,r40A1);
          real r40A6#1 = RAdd(r40A5,r40A4);
          tensor[3] op1_e3_l_23407F#3 = <tensor[3]>[r4090,r409B,r40A6];
          tensor[3] projParam40D0#1 = negV4072;
          real vdot40D1#1 = VDot<3>(projParam40D0,op1_e3_l_23407F);
          tensor[3] projParam40D2#1 = negV4074;
          real vdot40D3#1 = VDot<3>(projParam40D2,op1_e3_l_23407F);
          tensor[3] projParam40D4#1 = negV4076;
          real vdot40D5#1 = VDot<3>(projParam40D4,op1_e3_l_23407F);
          tensor[3] _t36A5#1 = <tensor[3]>[vdot40D1,vdot40D3,vdot40D5];
          goto JOIN36A6
        ASSIGN40DE:  preds = [COND2D59]
          bool _t2D5D#1 = false;
          goto JOIN2D5E
        ASSIGN40DF:  preds = [COND2D54]
          bool _t2D60#1 = false;
          goto JOIN2D61
        ASSIGN40E0:  preds = [COND24C0]
          bool _t2D63#1 = false;
          goto JOIN2D64
    end update
    method stabilize
        ENTRY40E1:  preds = []
          tensor[4] rgba40E2#1 = self.rgba;
          tensor[3] rgb40E4#3 = self.rgb;
          real transp40E6#2 = self.transp;
          real _t40E8#2 = 0.1e1;
          bool _t40EA#1 = LT<real>(transp40E6,_t40E8);
          if _t40EA then goto ASSIGN40EF else goto JOIN4102
        ASSIGN40EF:  preds = [COND40EC]
          real aa40ED#4 = RSub(_t40E8,transp40E6);
          real _t40F0#1 = VIndex<3,0>(rgb40E4);
          real _t40F2#1 = RDiv(_t40F0,aa40ED);
          real _t40F5#1 = VIndex<3,1>(rgb40E4);
          real _t40F7#1 = RDiv(_t40F5,aa40ED);
          real _t40FA#1 = VIndex<3,2>(rgb40E4);
          real _t40FC#1 = RDiv(_t40FA,aa40ED);
          tensor[4] rgba40FF#1 = <tensor[4]>[_t40F2,_t40F7,_t40FC,aa40ED];
          goto JOIN4102
        JOIN4102:  preds = [ASSIGN4100,COND40EC]
          tensor[4] rgba4101#1 = phi(rgba40FF,rgba40E2)
          self.rgba = rgba4101;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY4105:  preds = []
      int iresU4106#1 = globals.iresU217E;
      int iresV4108#1 = globals.iresV217F;
      int _t410A#2 = 0;
      int _t410C#2 = 1;
      int _t410E#1 = ISub(iresV4108,_t410C);
      int[] _t4110#1 = Range(_t410A,_t410E);
    FOREACH4113:  preds = [ASSIGN4111,NEXT411C]
      foreach (vi4112 in _t4110) on exit goto RETURN411D
      int _t4114#1 = ISub(iresU4106,_t410C);
      int[] _t4116#1 = Range(_t410A,_t4114);
    FOREACH4119:  preds = [ASSIGN4117,NEXT411B]
      foreach (ui4118 in _t4116) on exit goto NEXT411C
      new ray(ui4118,vi4112);
      goto FOREACH4119
    NEXT411C:  preds = [FOREACH4119]
      goto FOREACH4113
    RETURN411D:  preds = [FOREACH4113]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2172 (block) = <no-default>
  input 0space0509_intermedateGlobal2173 (space) = <no-default>
  input 0U050B_intermedateGlobal2174 (U) = <no-default>
  input cellChoice2175 (cellChoice) = <no-default>
  input cmap2176 (cmap) = image("cmap.nrrd")
  input camEye2177 (camEye) = <default>
  input camAt2178 (camAt) = <default>
  input camUp2179 (camUp) = <default>
  input camNear217A (camNear) = <default>
  input camFar217B (camFar) = <default>
  input camFOV217C (camFOV) = <default>
  input camOrtho217D (camOrtho) = <default>
  input iresU217E (iresU) = <default>
  input iresV217F (iresV) = <default>
  input rayStep2180 (rayStep) = <default>
  input refStep2181 (refStep) = <default>
  input transp02182 (transp0) = <default>
  input thick2183 (thick) = <default>
  input fStrTh2184 (fStrTh) = <default>
  input fMaskTh2185 (fMaskTh) = <default>
  input fBias2186 (fBias) = <default>
  input maxAlpha2187 (maxAlpha) = <default>
  input light2188 (light) = <default>
  input phong2189 (phong) = <default>
  input mcNear218A (mcNear) = <default>
  input mcFar218B (mcFar) = <default>
  input litdir218C (litdir) = <default>
  input cminmax218D (cminmax) = <default>
  input analytical218E (analytical) = <default>
  input umm218F (umm) = image("data.nrrd")
  input rot2190 (rot) = <default>
  global tensor[3] camN2191
  global tensor[3] camU2192
  global tensor[3] camV2193
  global real camDist2194
  global real camVmax2195
  global real camUmax2196
  global real camNearVsp2197
  global real camFarVsp2198
  global tensor[3] litwsp2199
  global int _t219A
  global femData:Space _tX219B
  global femData:FemFunc _tXX219C
## functions
## input initialization
  ENTRY219F:  preds = []
    real _t21A0#17 = 0.e0;
    real _t21A2#1 = -0.2e1;
    tensor[3] camEye21A4#1 = <tensor[3]>[_t21A0,_t21A2,_t21A0];
    globals.camEye2177 = camEye21A4;
    tensor[3] camAt21A7#1 = <tensor[3]>[_t21A0,_t21A0,_t21A0];
    globals.camAt2178 = camAt21A7;
    real _t21AA#7 = 0.1e1;
    tensor[3] camUp21AC#2 = <tensor[3]>[_t21A0,_t21A0,_t21AA];
    globals.camUp2179 = camUp21AC;
    real camNear21AF#1 = -0.4e1;
    globals.camNear217A = camNear21AF;
    real camFar21B2#1 = 0.4e1;
    globals.camFar217B = camFar21B2;
    real camFOV21B5#1 = 0.1e2;
    globals.camFOV217C = camFOV21B5;
    bool camOrtho21B8#2 = false;
    globals.camOrtho217D = camOrtho21B8;
    int iresU21BB#2 = 100;
    globals.iresU217E = iresU21BB;
    globals.iresV217F = iresU21BB;
    real rayStep21BF#2 = 0.1e-3;
    globals.rayStep2180 = rayStep21BF;
    globals.refStep2181 = rayStep21BF;
    real transp021C3#1 = 0.5e-2;
    globals.transp02182 = transp021C3;
    real thick21C6#1 = 0.1e-1;
    globals.thick2183 = thick21C6;
    globals.fStrTh2184 = _t21A0;
    globals.fMaskTh2185 = _t21A0;
    real fBias21CB#2 = 0.1e0;
    globals.fBias2186 = fBias21CB;
    globals.maxAlpha2187 = _t21AA;
    globals.light2188 = camOrtho21B8;
    real _t21D0#1 = 0.7e0;
    real _t21D2#1 = 0.2e0;
    real _t21D4#1 = 0.1e3;
    tensor[4] phong21D6#1 = <tensor[4]>[fBias21CB,_t21D0,_t21D2,_t21D4];
    globals.phong2189 = phong21D6;
    tensor[3] mcNear21D9#2 = <tensor[3]>[_t21AA,_t21AA,_t21AA];
    globals.mcNear218A = mcNear21D9;
    globals.mcFar218B = mcNear21D9;
    real _t21DD#1 = -0.1e1;
    tensor[3] litdir21DF#1 = <tensor[3]>[_t21A0,_t21DD,_t21A0];
    globals.litdir218C = litdir21DF;
    tensor[2] cminmax21E2#1 = <tensor[2]>[_t21A0,_t21A0];
    globals.cminmax218D = cminmax21E2;
    bool analytical21E5#1 = true;
    globals.analytical218E = analytical21E5;
    tensor[3] _t21E8#1 = <tensor[3]>[_t21AA,_t21A0,_t21A0];
    tensor[3] _t21EA#1 = <tensor[3]>[_t21A0,_t21AA,_t21A0];
    tensor[3,3] rot21EC#1 = <tensor[3,3]>[_t21E8,_t21EA,camUp21AC];
    globals.rot2190 = rot21EC;
    return
## global-variable initialization
  ENTRY21F0:  preds = []
    femData:Mesh block21F1#3 = globals.block2172;
    femData:Space 0space0509_intermedateGlobal21F3#1 = globals.0space0509_intermedateGlobal2173;
    femData:FemFunc 0U050B_intermedateGlobal21F5#1 = globals.0U050B_intermedateGlobal2174;
    int cellChoice21F7#1 = globals.cellChoice2175;
    tensor[3] camEye21FB#1 = globals.camEye2177;
    tensor[3] camAt21FD#1 = globals.camAt2178;
    tensor[3] camUp21FF#3 = globals.camUp2179;
    real camNear2201#1 = globals.camNear217A;
    real camFar2203#1 = globals.camFar217B;
    real camFOV2205#1 = globals.camFOV217C;
    int iresU2207#1 = globals.iresU217E;
    int iresV2209#1 = globals.iresV217F;
    tensor[3] litdir220B#5 = globals.litdir218C;
    int _t220D#1 = 0;
    int _t220F#1 = 1;
    int _t2211#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F1);
    int _t2213#1 = ISub(_t2211,_t220F);
    int[] _t2215#1 = Range(_t220D,_t2213);
    femData:MeshCell[] _t2217#1 = <femData:MeshCell[]>{};
  FOREACH221A:  preds = [ASSIGN2218,NEXT2220]
    foreach (_t2219 in _t2215) on exit goto ASSIGN2222
      femData:MeshCell[] _t221E#2 = phi(_t2217,_t221D)
    femData:MeshCell _t221B#1 = LoadFem<femData:MeshCell>(block21F1,_t2219);
    femData:MeshCell[] _t221D#1 = Append<femData:MeshCell>(_t221E,_t221B);
    goto FOREACH221A
  ASSIGN2222:  preds = [FOREACH221A]
    femData:Space space2221#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F3,block21F1);
    femData:FemFunc U2223#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F5,space2221);
    femData:MeshCell c12225#1 = Subscript<femData:MeshCell[]>(_t221E,cellChoice21F7);
    int _t2227#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12225);
    femData:FuncCell _t2229#2 = LoadFem<femData:FuncCell>(U2223,_t2227);
    femData:FemFunc _t222B#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2229);
    femData:Space _t222D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222B);
    int _t222F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2229);
    tensor[3] op1_e3_l_42235#9 = VSub<3>(camAt21FD,camEye21FB);
    real op1_e3_l_62238#1 = VDot<3>(op1_e3_l_42235,op1_e3_l_42235);
    real op1_e3_l_7223B#6 = Sqrt(op1_e3_l_62238);
    real realLit223F#9 = 0.1e1;
    real op1_e3_l_9223E#6 = RDiv(realLit223F,op1_e3_l_7223B);
    tensor[3] camN2243#4 = VScale<3>(op1_e3_l_9223E,op1_e3_l_42235);
    globals.camN2191 = camN2243;
    real realLit2248#6 = 0.e0;
    real r2249#3 = TensorIndex<tensor[3],[0]>(camUp21FF);
    real r224A#3 = RMul(realLit2248,r2249);
    real r224B#3 = TensorIndex<tensor[3],[1]>(camUp21FF);
    real r224C#3 = RMul(realLit2248,r224B);
    real r224D#3 = TensorIndex<tensor[3],[2]>(camUp21FF);
    real r224E#5 = RMul(realLit2248,r224D);
    real r224F#3 = RAdd(r224A,r224C);
    real r2250#3 = RAdd(r224F,r224E);
    real r2252#1 = RMul(realLit223F,r224D);
    real r2253#1 = RAdd(r224F,r2252);
    real realLit2254#6 = -0.1e1;
    real r2255#1 = RMul(realLit2254,r224B);
    real r2256#1 = RAdd(r224A,r2255);
    real r2257#1 = RAdd(r2256,r224E);
    tensor[3] tensor2258#1 = <tensor[3]>[r2250,r2253,r2257];
    real r2259#1 = RMul(realLit2254,r224D);
    real r225A#1 = RAdd(r224F,r2259);
    real r225B#1 = RMul(realLit223F,r2249);
    real r225C#1 = RAdd(r225B,r224C);
    real r225D#1 = RAdd(r225C,r224E);
    tensor[3] tensor225E#1 = <tensor[3]>[r225A,r2250,r225D];
    real r225F#1 = RMul(realLit223F,r224B);
    real r2260#1 = RAdd(r224A,r225F);
    real r2261#1 = RAdd(r2260,r224E);
    real r2262#1 = RMul(realLit2254,r2249);
    real r2263#1 = RAdd(r2262,r224C);
    real r2264#1 = RAdd(r2263,r224E);
    tensor[3] tensor2265#1 = <tensor[3]>[r2261,r2264,r2250];
    real vdot2288#4 = VDot<3>(op1_e3_l_42235,tensor2258);
    real vdot228A#4 = VDot<3>(op1_e3_l_42235,tensor225E);
    real vdot228C#4 = VDot<3>(op1_e3_l_42235,tensor2265);
    tensor[3] op1_e3_l_172286#3 = <tensor[3]>[vdot2288,vdot228A,vdot228C];
    real op1_e3_l_342295#1 = VDot<3>(op1_e3_l_172286,op1_e3_l_172286);
    real r2299#1 = RMul(op1_e3_l_9223E,op1_e3_l_9223E);
    real op1_e3_l_352298#1 = RMul(r2299,op1_e3_l_342295);
    real op1_e3_l_36229D#1 = Sqrt(op1_e3_l_352298);
    tensor[3] op1_e3_l_3722A0#1 = VScale<3>(op1_e3_l_9223E,op1_e3_l_172286);
    real op1_e3_l_3822A3#2 = RDiv(realLit223F,op1_e3_l_36229D);
    tensor[3] camU22A8#4 = VScale<3>(op1_e3_l_3822A3,op1_e3_l_3722A0);
    globals.camU2192 = camU22A8;
    real r22AF#3 = RMul(realLit2248,vdot2288);
    real r22B1#3 = RMul(realLit2248,vdot228A);
    real r22B3#5 = RMul(realLit2248,vdot228C);
    real r22B4#3 = RAdd(r22AF,r22B1);
    real r22B5#3 = RAdd(r22B4,r22B3);
    real r22B7#1 = RMul(realLit223F,vdot228C);
    real r22B8#1 = RAdd(r22B4,r22B7);
    real r22BA#1 = RMul(realLit2254,vdot228A);
    real r22BB#1 = RAdd(r22AF,r22BA);
    real r22BC#1 = RAdd(r22BB,r22B3);
    tensor[3] tensor22BD#1 = <tensor[3]>[r22B5,r22B8,r22BC];
    real r22BE#1 = RMul(realLit2254,vdot228C);
    real r22BF#1 = RAdd(r22B4,r22BE);
    real r22C0#1 = RMul(realLit223F,vdot2288);
    real r22C1#1 = RAdd(r22C0,r22B1);
    real r22C2#1 = RAdd(r22C1,r22B3);
    tensor[3] tensor22C3#1 = <tensor[3]>[r22BF,r22B5,r22C2];
    real r22C4#1 = RMul(realLit223F,vdot228A);
    real r22C5#1 = RAdd(r22AF,r22C4);
    real r22C6#1 = RAdd(r22C5,r22B3);
    real r22C7#1 = RMul(realLit2254,vdot2288);
    real r22C8#1 = RAdd(r22C7,r22B1);
    real r22C9#1 = RAdd(r22C8,r22B3);
    tensor[3] tensor22CA#1 = <tensor[3]>[r22C6,r22C9,r22B5];
    real vdot22ED#1 = VDot<3>(op1_e3_l_42235,tensor22BD);
    real vdot22EF#1 = VDot<3>(op1_e3_l_42235,tensor22C3);
    real vdot22F1#1 = VDot<3>(op1_e3_l_42235,tensor22CA);
    tensor[3] op1_e3_l_4722EB#1 = <tensor[3]>[vdot22ED,vdot22EF,vdot22F1];
    tensor[3] op1_e3_l_5022FA#3 = VScale<3>(op1_e3_l_9223E,op1_e3_l_4722EB);
    real r22FE#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FA);
    real r22FF#3 = RMul(op1_e3_l_9223E,op1_e3_l_3822A3);
    real r2300#2 = RMul(r22FF,r22FE);
    real r2301#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FA);
    real r2302#2 = RMul(r22FF,r2301);
    real r2303#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FA);
    real r2304#2 = RMul(r22FF,r2303);
    tensor[3] camV22FD#1 = <tensor[3]>[r2300,r2302,r2304];
    globals.camV2193 = camV22FD;
    globals.camDist2194 = op1_e3_l_7223B;
    real _t2310#1 = 0.314159265358979323846264338327950288e1;
    real _t2312#1 = 0.36e3;
    real op1_e3_l_52314#1 = RMul(camFOV2205,_t2310);
    real op1_e3_l_62317#1 = RDiv(op1_e3_l_52314,_t2312);
    real op1_e3_l_10231A#2 = Tan(op1_e3_l_62317);
    real camVmax231D#1 = RMul(op1_e3_l_10231A,op1_e3_l_7223B);
    globals.camVmax2195 = camVmax231D;
    real _t2321#1 = IntToReal(iresU2207);
    real _t2323#1 = IntToReal(iresV2209);
    real r2326#1 = RMul(_t2321,op1_e3_l_10231A);
    real op1_e3_l_142325#1 = RMul(r2326,op1_e3_l_7223B);
    real camUmax232A#1 = RDiv(op1_e3_l_142325,_t2323);
    globals.camUmax2196 = camUmax232A;
    real camNearVsp232E#1 = RAdd(camNear2201,op1_e3_l_7223B);
    globals.camNearVsp2197 = camNearVsp232E;
    real camFarVsp2332#1 = RAdd(camFar2203,op1_e3_l_7223B);
    globals.camFarVsp2198 = camFarVsp2332;
    real op1_e3_l_32338#1 = VDot<3>(litdir220B,litdir220B);
    real op1_e3_l_4233B#1 = Sqrt(op1_e3_l_32338);
    real op1_e3_l_5233E#1 = RDiv(realLit223F,op1_e3_l_4233B);
    real r2344#1 = VIndex<3,0>(camU22A8);
    real r2345#3 = TensorIndex<tensor[3],[0]>(litdir220B);
    real r2346#1 = RMul(r2344,r2345);
    real r2348#3 = TensorIndex<tensor[3],[1]>(litdir220B);
    real r2349#1 = RMul(r2300,r2348);
    real r234A#1 = VIndex<3,0>(camN2243);
    real r234B#3 = TensorIndex<tensor[3],[2]>(litdir220B);
    real r234C#1 = RMul(r234A,r234B);
    real r234D#1 = RAdd(r2346,r2349);
    real r234E#1 = RAdd(r234D,r234C);
    real r234F#1 = VIndex<3,1>(camU22A8);
    real r2350#1 = RMul(r234F,r2345);
    real r2352#1 = RMul(r2302,r2348);
    real r2353#1 = VIndex<3,1>(camN2243);
    real r2354#1 = RMul(r2353,r234B);
    real r2355#1 = RAdd(r2350,r2352);
    real r2356#1 = RAdd(r2355,r2354);
    real r2357#1 = VIndex<3,2>(camU22A8);
    real r2358#1 = RMul(r2357,r2345);
    real r235A#1 = RMul(r2304,r2348);
    real r235B#1 = VIndex<3,2>(camN2243);
    real r235C#1 = RMul(r235B,r234B);
    real r235D#1 = RAdd(r2358,r235A);
    real r235E#1 = RAdd(r235D,r235C);
    tensor[3] op1_e3_l_62343#1 = <tensor[3]>[r234E,r2356,r235E];
    tensor[3] litwsp237C#1 = VScale<3>(op1_e3_l_5233E,op1_e3_l_62343);
    globals.litwsp2199 = litwsp237C;
    globals._t219A = _t222F;
    globals._tX219B = _t222D;
    globals._tXX219C = _t222B;
    return
## strand
  strand ray (int ui2386#1, int vi2387#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2398:  preds = []
        tensor[3] camEye2399#1 = globals.camEye2177;
        bool camOrtho239B#2 = globals.camOrtho217D;
        int iresU239D#1 = globals.iresU217E;
        int iresV239F#1 = globals.iresV217F;
        real rayStep23A1#1 = globals.rayStep2180;
        real refStep23A3#1 = globals.refStep2181;
        tensor[4] phong23A5#4 = globals.phong2189;
        tensor[3] camN23A7#1 = globals.camN2191;
        tensor[3] camU23A9#1 = globals.camU2192;
        tensor[3] camV23AB#1 = globals.camV2193;
        real camDist23AD#1 = globals.camDist2194;
        real camVmax23AF#2 = globals.camVmax2195;
        real camUmax23B1#2 = globals.camUmax2196;
        real camNearVsp23B3#1 = globals.camNearVsp2197;
        real _t23B5#4 = -0.5e0;
        real _t23B7#1 = IntToReal(ui2386);
        real _t23B9#1 = IntToReal(iresU239D);
        real _t23BB#2 = 0.5e0;
        real op1_e3_l_623BD#1 = RSub(_t23B9,_t23BB);
        real op1_e3_l_723C0#1 = RSub(_t23B7,_t23B5);
        real op1_e3_l_823C3#1 = RSub(op1_e3_l_623BD,_t23B5);
        real op1_e3_l_923C6#2 = RNeg(camUmax23B1);
        real op1_e3_l_1023C9#1 = RDiv(op1_e3_l_723C0,op1_e3_l_823C3);
        real op1_e3_l_1123CC#1 = RSub(camUmax23B1,op1_e3_l_923C6);
        real op1_e3_l_1323CF#1 = RMul(op1_e3_l_1023C9,op1_e3_l_1123CC);
        real rayU23D2#2 = RAdd(op1_e3_l_923C6,op1_e3_l_1323CF);
        real _t23D5#1 = IntToReal(vi2387);
        real _t23D7#1 = IntToReal(iresV239F);
        real op1_e3_l_623D9#1 = RSub(_t23D7,_t23BB);
        real op1_e3_l_723DC#1 = RSub(_t23D5,_t23B5);
        real op1_e3_l_823DF#1 = RSub(op1_e3_l_623D9,_t23B5);
        real op1_e3_l_923E2#2 = RNeg(camVmax23AF);
        real op1_e3_l_1023E5#1 = RDiv(op1_e3_l_723DC,op1_e3_l_823DF);
        real op1_e3_l_1123E8#1 = RSub(camVmax23AF,op1_e3_l_923E2);
        real op1_e3_l_1323EB#1 = RMul(op1_e3_l_1023E5,op1_e3_l_1123E8);
        real rayV23EE#2 = RAdd(op1_e3_l_923E2,op1_e3_l_1323EB);
        tensor[3] op1_e3_l_322400#1 = VScale<3>(rayU23D2,camU23A9);
        tensor[3] op1_e3_l_332403#1 = VScale<3>(rayV23EE,camV23AB);
        tensor[3] UV2406#5 = VAdd<3>(op1_e3_l_322400,op1_e3_l_332403);
        if camOrtho239B then goto JOIN240C else goto ASSIGN2466
      JOIN240C:  preds = [COND2409,ASSIGN2467]
        tensor[3] _t240A#1 = phi(UV2406,_t240B)
        tensor[3] rayOrig240D#1 = VAdd<3>(camEye2399,_t240A);
        if camOrtho239B then goto ASSIGN2412 else goto ASSIGN245C
      ASSIGN2412:  preds = [COND2410]
        real _t2411#3 = 0.e0;
        tensor[3] _t2413#1 = <tensor[3]>[_t2411,_t2411,_t2411];
        goto JOIN2417
      JOIN2417:  preds = [ASSIGN2414,ASSIGN2464]
        tensor[3] _t2415#1 = phi(_t2413,_t2416)
        tensor[3] rayVec2418#4 = VAdd<3>(camN23A7,_t2415);
        real op1_e3_l_6241B#1 = VDot<3>(rayVec2418,rayVec2418);
        real op1_e3_l_7241E#2 = Sqrt(op1_e3_l_6241B);
        real op1_e3_l_82421#1 = RMul(rayStep23A1,op1_e3_l_7241E);
        real alphaFix2424#1 = RDiv(op1_e3_l_82421,refStep23A3);
        real realLit2428#2 = 0.1e1;
        real op1_e3_l_92427#1 = RDiv(realLit2428,op1_e3_l_7241E);
        tensor[3] op1_e3_l_10242C#1 = VScale<3>(op1_e3_l_92427,rayVec2418);
        tensor[3] eyeDir242F#1 = VNeg<3>(op1_e3_l_10242C);
        real phKa2432#1 = VIndex<4,0>(phong23A5);
        real phKd2434#1 = VIndex<4,1>(phong23A5);
        real phKs2436#1 = VIndex<4,2>(phong23A5);
        real phSp2438#1 = VIndex<4,3>(phong23A5);
        real _t243A#8 = 0.e0;
        tensor[4] rgba243C#1 = <tensor[4]>[_t243A,_t243A,_t243A,_t243A];
        tensor[3] rgb243E#1 = <tensor[3]>[_t243A,_t243A,_t243A];
        self.rayU = rayU23D2;
        self.rayV = rayV23EE;
        self.rayN = camNearVsp23B3;
        self.UV = UV2406;
        self.rayOrig = rayOrig240D;
        self.rayVec = rayVec2418;
        self.alphaFix = alphaFix2424;
        self.eyeDir = eyeDir242F;
        self.phKa = phKa2432;
        self.phKd = phKd2434;
        self.phKs = phKs2436;
        self.phSp = phSp2438;
        self.rgba = rgba243C;
        self.raw = _t243A;
        self.rgb = rgb243E;
        self.transp = realLit2428;
        return
      ASSIGN245C:  preds = [COND2410]
        real realLit2453#1 = 0.1e1;
        real r2454#3 = RDiv(realLit2453,camDist23AD);
        real r2455#1 = TensorIndex<tensor[3],[0]>(UV2406);
        real r2456#1 = RMul(r2454,r2455);
        real r2457#1 = TensorIndex<tensor[3],[1]>(UV2406);
        real r2458#1 = RMul(r2454,r2457);
        real r2459#1 = TensorIndex<tensor[3],[2]>(UV2406);
        real r245A#1 = RMul(r2454,r2459);
        tensor[3] _t2416#1 = <tensor[3]>[r2456,r2458,r245A];
        goto JOIN2417
      ASSIGN2466:  preds = [COND2409]
        real _t2465#3 = 0.e0;
        tensor[3] _t240B#1 = <tensor[3]>[_t2465,_t2465,_t2465];
        goto JOIN240C
    end state init
    method update
        ENTRY2468:  preds = []
          image(IMAGE1D<double[3]>) cmap2469#17 = globals.cmap2176;
          int _t246B#3 = globals._t219A;
          femData:Space _t246D#252 = globals._tX219B;
          femData:FemFunc _t246F#252 = globals._tXX219C;
          femData:Mesh block2475#1 = globals.block2172;
          real rayStep2477#1 = globals.rayStep2180;
          real transp02479#1 = globals.transp02182;
          real thick247B#1 = globals.thick2183;
          real fStrTh247D#1 = globals.fStrTh2184;
          real fMaskTh247F#1 = globals.fMaskTh2185;
          real fBias2481#1 = globals.fBias2186;
          real maxAlpha2483#1 = globals.maxAlpha2187;
          tensor[3] mcNear2485#2 = globals.mcNear218A;
          tensor[3] mcFar2487#1 = globals.mcFar218B;
          tensor[2] cminmax2489#2 = globals.cminmax218D;
          bool analytical248B#1 = globals.analytical218E;
          tensor[3,3] rot248D#12 = globals.rot2190;
          real camNearVsp248F#2 = globals.camNearVsp2197;
          real camFarVsp2491#2 = globals.camFarVsp2198;
          tensor[3] litwsp2493#2 = globals.litwsp2199;
          real rayN2495#1 = self.rayN;
          tensor[3] rayOrig2497#1 = self.rayOrig;
          tensor[3] rayVec2499#1 = self.rayVec;
          real alphaFix249B#1 = self.alphaFix;
          tensor[3] eyeDir249D#1 = self.eyeDir;
          real phKa249F#1 = self.phKa;
          real phKd24A1#1 = self.phKd;
          real phKs24A3#2 = self.phKs;
          real phSp24A5#1 = self.phSp;
          tensor[3] rgb24A7#1 = self.rgb;
          real transp24A9#2 = self.transp;
          real rayN24AB#8 = RAdd(rayN2495,rayStep2477);
          bool _t24AE#1 = GT<real>(rayN24AB,camFarVsp2491);
          if _t24AE then goto SAVE24B1 else goto JOIN24B3
        SAVE24B1:  preds = [COND24B0]
          self.rayN = rayN24AB;
          stabilize
          goto JOIN24B3
        JOIN24B3:  preds = [*STABILIZE24B2,COND24B0]
          tensor[3] op1_e3_l_524B4#1 = VScale<3>(rayN24AB,rayVec2499);
          tensor[3] pos24B7#11 = VAdd<3>(rayOrig2497,op1_e3_l_524B4);
          femData:RefCell _t24BA#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2475);
          real _t24BC#1 = 0.1e-8;
          bool _t24BE#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BA,pos24B7,_t24BC);
          if _t24BE then goto ASSIGN25C1 else goto ASSIGN40E0
        ASSIGN25C1:  preds = [COND24C0]
          int ilit24C2#1 = 84;
          int mulRes24C3#84 = IMul(_t246B,ilit24C2);
          int idx24C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,mulRes24C3);
          int ilit24C7#86 = 1;
          int addRes24C8#1 = IAdd(mulRes24C3,ilit24C7);
          int idx24C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24C8);
          int ilit24CA#1 = 2;
          int addRes24CB#1 = IAdd(mulRes24C3,ilit24CA);
          int idx24CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CB);
          int ilit24CD#1 = 3;
          int addRes24CE#1 = IAdd(mulRes24C3,ilit24CD);
          int idx24CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CE);
          int ilit24D0#1 = 4;
          int addRes24D1#1 = IAdd(mulRes24C3,ilit24D0);
          int idx24D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D1);
          int ilit24D3#1 = 5;
          int addRes24D4#1 = IAdd(mulRes24C3,ilit24D3);
          int idx24D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D4);
          int ilit24D6#1 = 6;
          int addRes24D7#1 = IAdd(mulRes24C3,ilit24D6);
          int idx24D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D7);
          int ilit24D9#1 = 7;
          int addRes24DA#1 = IAdd(mulRes24C3,ilit24D9);
          int idx24DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DA);
          int ilit24DC#1 = 8;
          int addRes24DD#1 = IAdd(mulRes24C3,ilit24DC);
          int idx24DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DD);
          int ilit24DF#1 = 9;
          int addRes24E0#1 = IAdd(mulRes24C3,ilit24DF);
          int idx24E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E0);
          int ilit24E2#1 = 10;
          int addRes24E3#1 = IAdd(mulRes24C3,ilit24E2);
          int idx24E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E3);
          int ilit24E5#1 = 11;
          int addRes24E6#1 = IAdd(mulRes24C3,ilit24E5);
          int idx24E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E6);
          int ilit24E8#1 = 12;
          int addRes24E9#1 = IAdd(mulRes24C3,ilit24E8);
          int idx24EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E9);
          int ilit24EB#1 = 13;
          int addRes24EC#1 = IAdd(mulRes24C3,ilit24EB);
          int idx24ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EC);
          int ilit24EE#1 = 14;
          int addRes24EF#1 = IAdd(mulRes24C3,ilit24EE);
          int idx24F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EF);
          int ilit24F1#1 = 15;
          int addRes24F2#1 = IAdd(mulRes24C3,ilit24F1);
          int idx24F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F2);
          int ilit24F4#1 = 16;
          int addRes24F5#1 = IAdd(mulRes24C3,ilit24F4);
          int idx24F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F5);
          int ilit24F7#1 = 17;
          int addRes24F8#1 = IAdd(mulRes24C3,ilit24F7);
          int idx24F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F8);
          int ilit24FA#1 = 18;
          int addRes24FB#1 = IAdd(mulRes24C3,ilit24FA);
          int idx24FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FB);
          int ilit24FD#1 = 19;
          int addRes24FE#1 = IAdd(mulRes24C3,ilit24FD);
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FE);
          int ilit2500#1 = 20;
          int addRes2501#1 = IAdd(mulRes24C3,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2501);
          int ilit2503#1 = 21;
          int addRes2504#1 = IAdd(mulRes24C3,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2504);
          int ilit2506#1 = 22;
          int addRes2507#1 = IAdd(mulRes24C3,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2507);
          int ilit2509#1 = 23;
          int addRes250A#1 = IAdd(mulRes24C3,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250A);
          int ilit250C#1 = 24;
          int addRes250D#1 = IAdd(mulRes24C3,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250D);
          int ilit250F#1 = 25;
          int addRes2510#1 = IAdd(mulRes24C3,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2510);
          int ilit2512#1 = 26;
          int addRes2513#1 = IAdd(mulRes24C3,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2513);
          int ilit2515#1 = 27;
          int addRes2516#1 = IAdd(mulRes24C3,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2516);
          int ilit2518#1 = 28;
          int addRes2519#1 = IAdd(mulRes24C3,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2519);
          int ilit251B#1 = 29;
          int addRes251C#1 = IAdd(mulRes24C3,ilit251B);
          int idx251D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251C);
          int ilit251E#1 = 30;
          int addRes251F#1 = IAdd(mulRes24C3,ilit251E);
          int idx2520#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251F);
          int ilit2521#1 = 31;
          int addRes2522#1 = IAdd(mulRes24C3,ilit2521);
          int idx2523#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2522);
          int ilit2524#1 = 32;
          int addRes2525#1 = IAdd(mulRes24C3,ilit2524);
          int idx2526#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2525);
          int ilit2527#1 = 33;
          int addRes2528#1 = IAdd(mulRes24C3,ilit2527);
          int idx2529#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2528);
          int ilit252A#1 = 34;
          int addRes252B#1 = IAdd(mulRes24C3,ilit252A);
          int idx252C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252B);
          int ilit252D#1 = 35;
          int addRes252E#1 = IAdd(mulRes24C3,ilit252D);
          int idx252F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252E);
          int ilit2530#1 = 36;
          int addRes2531#1 = IAdd(mulRes24C3,ilit2530);
          int idx2532#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2531);
          int ilit2533#1 = 37;
          int addRes2534#1 = IAdd(mulRes24C3,ilit2533);
          int idx2535#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2534);
          int ilit2536#1 = 38;
          int addRes2537#1 = IAdd(mulRes24C3,ilit2536);
          int idx2538#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2537);
          int ilit2539#1 = 39;
          int addRes253A#1 = IAdd(mulRes24C3,ilit2539);
          int idx253B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253A);
          int ilit253C#1 = 40;
          int addRes253D#1 = IAdd(mulRes24C3,ilit253C);
          int idx253E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253D);
          int ilit253F#1 = 41;
          int addRes2540#1 = IAdd(mulRes24C3,ilit253F);
          int idx2541#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2540);
          int ilit2542#1 = 42;
          int addRes2543#1 = IAdd(mulRes24C3,ilit2542);
          int idx2544#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2543);
          int ilit2545#1 = 43;
          int addRes2546#1 = IAdd(mulRes24C3,ilit2545);
          int idx2547#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2546);
          int ilit2548#1 = 44;
          int addRes2549#1 = IAdd(mulRes24C3,ilit2548);
          int idx254A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2549);
          int ilit254B#1 = 45;
          int addRes254C#1 = IAdd(mulRes24C3,ilit254B);
          int idx254D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254C);
          int ilit254E#1 = 46;
          int addRes254F#1 = IAdd(mulRes24C3,ilit254E);
          int idx2550#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254F);
          int ilit2551#1 = 47;
          int addRes2552#1 = IAdd(mulRes24C3,ilit2551);
          int idx2553#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2552);
          int ilit2554#1 = 48;
          int addRes2555#1 = IAdd(mulRes24C3,ilit2554);
          int idx2556#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2555);
          int ilit2557#1 = 49;
          int addRes2558#1 = IAdd(mulRes24C3,ilit2557);
          int idx2559#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2558);
          int ilit255A#1 = 50;
          int addRes255B#1 = IAdd(mulRes24C3,ilit255A);
          int idx255C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255B);
          int ilit255D#1 = 51;
          int addRes255E#1 = IAdd(mulRes24C3,ilit255D);
          int idx255F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255E);
          int ilit2560#1 = 52;
          int addRes2561#1 = IAdd(mulRes24C3,ilit2560);
          int idx2562#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2561);
          int ilit2563#1 = 53;
          int addRes2564#1 = IAdd(mulRes24C3,ilit2563);
          int idx2565#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2564);
          int ilit2566#1 = 54;
          int addRes2567#1 = IAdd(mulRes24C3,ilit2566);
          int idx2568#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2567);
          int ilit2569#1 = 55;
          int addRes256A#1 = IAdd(mulRes24C3,ilit2569);
          int idx256B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256A);
          int ilit256C#1 = 56;
          int addRes256D#1 = IAdd(mulRes24C3,ilit256C);
          int idx256E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256D);
          int ilit256F#1 = 57;
          int addRes2570#1 = IAdd(mulRes24C3,ilit256F);
          int idx2571#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2570);
          int ilit2572#1 = 58;
          int addRes2573#1 = IAdd(mulRes24C3,ilit2572);
          int idx2574#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2573);
          int ilit2575#1 = 59;
          int addRes2576#1 = IAdd(mulRes24C3,ilit2575);
          int idx2577#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2576);
          int ilit2578#1 = 60;
          int addRes2579#1 = IAdd(mulRes24C3,ilit2578);
          int idx257A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2579);
          int ilit257B#1 = 61;
          int addRes257C#1 = IAdd(mulRes24C3,ilit257B);
          int idx257D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257C);
          int ilit257E#1 = 62;
          int addRes257F#1 = IAdd(mulRes24C3,ilit257E);
          int idx2580#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257F);
          int ilit2581#1 = 63;
          int addRes2582#1 = IAdd(mulRes24C3,ilit2581);
          int idx2583#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2582);
          int ilit2584#1 = 64;
          int addRes2585#1 = IAdd(mulRes24C3,ilit2584);
          int idx2586#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2585);
          int ilit2587#1 = 65;
          int addRes2588#1 = IAdd(mulRes24C3,ilit2587);
          int idx2589#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2588);
          int ilit258A#1 = 66;
          int addRes258B#1 = IAdd(mulRes24C3,ilit258A);
          int idx258C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258B);
          int ilit258D#1 = 67;
          int addRes258E#1 = IAdd(mulRes24C3,ilit258D);
          int idx258F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258E);
          int ilit2590#1 = 68;
          int addRes2591#1 = IAdd(mulRes24C3,ilit2590);
          int idx2592#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2591);
          int ilit2593#1 = 69;
          int addRes2594#1 = IAdd(mulRes24C3,ilit2593);
          int idx2595#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2594);
          int ilit2596#1 = 70;
          int addRes2597#1 = IAdd(mulRes24C3,ilit2596);
          int idx2598#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2597);
          int ilit2599#1 = 71;
          int addRes259A#1 = IAdd(mulRes24C3,ilit2599);
          int idx259B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259A);
          int ilit259C#1 = 72;
          int addRes259D#1 = IAdd(mulRes24C3,ilit259C);
          int idx259E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259D);
          int ilit259F#1 = 73;
          int addRes25A0#1 = IAdd(mulRes24C3,ilit259F);
          int idx25A1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A0);
          int ilit25A2#1 = 74;
          int addRes25A3#1 = IAdd(mulRes24C3,ilit25A2);
          int idx25A4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A3);
          int ilit25A5#1 = 75;
          int addRes25A6#1 = IAdd(mulRes24C3,ilit25A5);
          int idx25A7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A6);
          int ilit25A8#1 = 76;
          int addRes25A9#1 = IAdd(mulRes24C3,ilit25A8);
          int idx25AA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A9);
          int ilit25AB#1 = 77;
          int addRes25AC#1 = IAdd(mulRes24C3,ilit25AB);
          int idx25AD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AC);
          int ilit25AE#1 = 78;
          int addRes25AF#1 = IAdd(mulRes24C3,ilit25AE);
          int idx25B0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AF);
          int ilit25B1#1 = 79;
          int addRes25B2#1 = IAdd(mulRes24C3,ilit25B1);
          int idx25B3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B2);
          int ilit25B4#1 = 80;
          int addRes25B5#1 = IAdd(mulRes24C3,ilit25B4);
          int idx25B6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B5);
          int ilit25B7#1 = 81;
          int addRes25B8#1 = IAdd(mulRes24C3,ilit25B7);
          int idx25B9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B8);
          int ilit25BA#1 = 82;
          int addRes25BB#1 = IAdd(mulRes24C3,ilit25BA);
          int idx25BC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BB);
          int ilit25BD#1 = 83;
          int addRes25BE#1 = IAdd(mulRes24C3,ilit25BD);
          int idx25BF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BE);
          int mulRes26C5#1 = IMul(ilit24C7,idx24C6);
          int mulRes26C7#1 = IMul(ilit24C7,idx24C9);
          int mulRes26CA#1 = IMul(ilit24C7,idx24CC);
          int mulRes26CD#1 = IMul(ilit24C7,idx24CF);
          int mulRes26D0#1 = IMul(ilit24C7,idx24D2);
          int mulRes26D3#1 = IMul(ilit24C7,idx24D5);
          int mulRes26D6#1 = IMul(ilit24C7,idx24D8);
          int mulRes26D9#1 = IMul(ilit24C7,idx24DB);
          int mulRes26DC#1 = IMul(ilit24C7,idx24DE);
          int mulRes26DF#1 = IMul(ilit24C7,idx24E1);
          int mulRes26E2#1 = IMul(ilit24C7,idx24E4);
          int mulRes26E5#1 = IMul(ilit24C7,idx24E7);
          int mulRes26E8#1 = IMul(ilit24C7,idx24EA);
          int mulRes26EB#1 = IMul(ilit24C7,idx24ED);
          int mulRes26EE#1 = IMul(ilit24C7,idx24F0);
          int mulRes26F1#1 = IMul(ilit24C7,idx24F3);
          int mulRes26F4#1 = IMul(ilit24C7,idx24F6);
          int mulRes26F7#1 = IMul(ilit24C7,idx24F9);
          int mulRes26FA#1 = IMul(ilit24C7,idx24FC);
          int mulRes26FD#1 = IMul(ilit24C7,idx24FF);
          int mulRes2700#1 = IMul(ilit24C7,idx2502);
          int mulRes2703#1 = IMul(ilit24C7,idx2505);
          int mulRes2706#1 = IMul(ilit24C7,idx2508);
          int mulRes2709#1 = IMul(ilit24C7,idx250B);
          int mulRes270C#1 = IMul(ilit24C7,idx250E);
          int mulRes270F#1 = IMul(ilit24C7,idx2511);
          int mulRes2712#1 = IMul(ilit24C7,idx2514);
          int mulRes2715#1 = IMul(ilit24C7,idx2517);
          int mulRes2718#1 = IMul(ilit24C7,idx251A);
          int mulRes271B#1 = IMul(ilit24C7,idx251D);
          int mulRes271E#1 = IMul(ilit24C7,idx2520);
          int mulRes2721#1 = IMul(ilit24C7,idx2523);
          int mulRes2724#1 = IMul(ilit24C7,idx2526);
          int mulRes2727#1 = IMul(ilit24C7,idx2529);
          int mulRes272A#1 = IMul(ilit24C7,idx252C);
          int mulRes272D#1 = IMul(ilit24C7,idx252F);
          int mulRes2730#1 = IMul(ilit24C7,idx2532);
          int mulRes2733#1 = IMul(ilit24C7,idx2535);
          int mulRes2736#1 = IMul(ilit24C7,idx2538);
          int mulRes2739#1 = IMul(ilit24C7,idx253B);
          int mulRes273C#1 = IMul(ilit24C7,idx253E);
          int mulRes273F#1 = IMul(ilit24C7,idx2541);
          int mulRes2742#1 = IMul(ilit24C7,idx2544);
          int mulRes2745#1 = IMul(ilit24C7,idx2547);
          int mulRes2748#1 = IMul(ilit24C7,idx254A);
          int mulRes274B#1 = IMul(ilit24C7,idx254D);
          int mulRes274E#1 = IMul(ilit24C7,idx2550);
          int mulRes2751#1 = IMul(ilit24C7,idx2553);
          int mulRes2754#1 = IMul(ilit24C7,idx2556);
          int mulRes2757#1 = IMul(ilit24C7,idx2559);
          int mulRes275A#1 = IMul(ilit24C7,idx255C);
          int mulRes275D#1 = IMul(ilit24C7,idx255F);
          int mulRes2760#1 = IMul(ilit24C7,idx2562);
          int mulRes2763#1 = IMul(ilit24C7,idx2565);
          int mulRes2766#1 = IMul(ilit24C7,idx2568);
          int mulRes2769#1 = IMul(ilit24C7,idx256B);
          int mulRes276C#1 = IMul(ilit24C7,idx256E);
          int mulRes276F#1 = IMul(ilit24C7,idx2571);
          int mulRes2772#1 = IMul(ilit24C7,idx2574);
          int mulRes2775#1 = IMul(ilit24C7,idx2577);
          int mulRes2778#1 = IMul(ilit24C7,idx257A);
          int mulRes277B#1 = IMul(ilit24C7,idx257D);
          int mulRes277E#1 = IMul(ilit24C7,idx2580);
          int mulRes2781#1 = IMul(ilit24C7,idx2583);
          int mulRes2784#1 = IMul(ilit24C7,idx2586);
          int mulRes2787#1 = IMul(ilit24C7,idx2589);
          int mulRes278A#1 = IMul(ilit24C7,idx258C);
          int mulRes278D#1 = IMul(ilit24C7,idx258F);
          int mulRes2790#1 = IMul(ilit24C7,idx2592);
          int mulRes2793#1 = IMul(ilit24C7,idx2595);
          int mulRes2796#1 = IMul(ilit24C7,idx2598);
          int mulRes2799#1 = IMul(ilit24C7,idx259B);
          int mulRes279C#1 = IMul(ilit24C7,idx259E);
          int mulRes279F#1 = IMul(ilit24C7,idx25A1);
          int mulRes27A2#1 = IMul(ilit24C7,idx25A4);
          int mulRes27A5#1 = IMul(ilit24C7,idx25A7);
          int mulRes27A8#1 = IMul(ilit24C7,idx25AA);
          int mulRes27AB#1 = IMul(ilit24C7,idx25AD);
          int mulRes27AE#1 = IMul(ilit24C7,idx25B0);
          int mulRes27B1#1 = IMul(ilit24C7,idx25B3);
          int mulRes27B4#1 = IMul(ilit24C7,idx25B6);
          int mulRes27B7#1 = IMul(ilit24C7,idx25B9);
          int mulRes27BA#1 = IMul(ilit24C7,idx25BC);
          int mulRes27BD#1 = IMul(ilit24C7,idx25BF);
          real dof27BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C5);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C7);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CA);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CD);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D0);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D3);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D6);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D9);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DC);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DF);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E2);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E5);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E8);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EB);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EE);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F1);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F4);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F7);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FA);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FD);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2700);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2703);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2706);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2709);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270C);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270F);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2712);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2715);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2718);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271B);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271E);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2721);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2724);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2727);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272A);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272D);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2730);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2733);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2736);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2739);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273C);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273F);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2742);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2745);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2748);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274B);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274E);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2751);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2754);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2757);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275A);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275D);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2760);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2763);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2766);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2769);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276C);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276F);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2772);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2775);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2778);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277B);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277E);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2781);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2784);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2787);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278A);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278D);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2790);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2793);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2796);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2799);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279C);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279F);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A2);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A5);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A8);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AB);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AE);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B1);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B4);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B7);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BA);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BD);
          tensor[84] dofs2812#9 = <tensor[84]>[dof27BE,dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811];
          real varAcc2966#20 = VIndex<3,0>(pos24B7);
          real varAcc2967#10 = VIndex<3,1>(pos24B7);
          real varAcc2968#10 = VIndex<3,2>(pos24B7);
          real basisEval2969#378 = 0.e0;
          real coeff296A#47 = 0.2e1;
          real one296B#80 = 0.1e1;
          real prod296C#6 = RMul(one296B,one296B);
          real prod296D#2 = RMul(one296B,prod296C);
          real basisEval296E#3 = RMul(coeff296A,prod296D);
          real prod2970#5 = RMul(one296B,varAcc2968);
          real prod2971#3 = RMul(one296B,prod2970);
          real basisEval2972#5 = RMul(coeff296A,prod2971);
          real prod2974#5 = RMul(varAcc2967,one296B);
          real prod2975#3 = RMul(one296B,prod2974);
          real basisEval2976#5 = RMul(coeff296A,prod2975);
          real coeff2977#25 = 0.6e1;
          real prod2979#3 = RMul(varAcc2966,prod296C);
          real basisEval297A#1 = RMul(coeff2977,prod2979);
          real prod2297B#5 = RMul(varAcc2968,varAcc2968);
          real prod297C#4 = RMul(one296B,prod2297B);
          real prod297D#4 = RMul(one296B,prod297C);
          real basisEval297E#2 = RMul(coeff296A,prod297D);
          real prod297F#4 = RMul(varAcc2967,varAcc2968);
          real prod2980#4 = RMul(one296B,prod297F);
          real basisEval2981#5 = RMul(coeff296A,prod2980);
          real prod22982#5 = RMul(varAcc2967,varAcc2967);
          real prod2983#4 = RMul(prod22982,one296B);
          real prod2984#4 = RMul(one296B,prod2983);
          real basisEval2985#2 = RMul(coeff296A,prod2984);
          real prod2986#4 = RMul(varAcc2966,prod2970);
          real basisEval2987#2 = RMul(coeff2977,prod2986);
          real prod2988#4 = RMul(varAcc2966,prod2974);
          real basisEval2989#2 = RMul(coeff2977,prod2988);
          real coeff298A#15 = 0.12e2;
          real prod2298B#11 = RMul(varAcc2966,varAcc2966);
          real prod298C#4 = RMul(prod2298B,prod296C);
          real basisEval298D#1 = RMul(coeff298A,prod298C);
          real prod3298E#4 = RMul(prod2297B,varAcc2968);
          real prod298F#3 = RMul(one296B,prod3298E);
          real prod2990#4 = RMul(one296B,prod298F);
          real basisEval2991#2 = RMul(coeff296A,prod2990);
          real prod2992#3 = RMul(varAcc2967,prod2297B);
          real prod2993#5 = RMul(one296B,prod2992);
          real basisEval2994#3 = RMul(coeff296A,prod2993);
          real prod2995#3 = RMul(prod22982,varAcc2968);
          real prod2996#5 = RMul(one296B,prod2995);
          real basisEval2997#3 = RMul(coeff296A,prod2996);
          real prod32998#4 = RMul(prod22982,varAcc2967);
          real prod2999#3 = RMul(prod32998,one296B);
          real prod299A#4 = RMul(one296B,prod2999);
          real basisEval299B#2 = RMul(coeff296A,prod299A);
          real prod299C#5 = RMul(varAcc2966,prod297C);
          real basisEval299D#2 = RMul(coeff2977,prod299C);
          real prod299E#3 = RMul(varAcc2966,prod297F);
          real basisEval299F#3 = RMul(coeff2977,prod299E);
          real prod29A0#5 = RMul(varAcc2966,prod2983);
          real basisEval29A1#2 = RMul(coeff2977,prod29A0);
          real prod29A2#5 = RMul(prod2298B,prod2970);
          real basisEval29A3#1 = RMul(coeff298A,prod29A2);
          real prod29A4#5 = RMul(prod2298B,prod2974);
          real basisEval29A5#1 = RMul(coeff298A,prod29A4);
          real coeff29A6#9 = 0.20e2;
          real prod329A7#7 = RMul(prod2298B,varAcc2966);
          real prod29A8#4 = RMul(prod329A7,prod296C);
          real basisEval29A9#1 = RMul(coeff29A6,prod29A8);
          real prod429AA#3 = RMul(prod3298E,varAcc2968);
          real prod29AB#2 = RMul(one296B,prod429AA);
          real prod29AC#4 = RMul(one296B,prod29AB);
          real basisEval29AD#2 = RMul(coeff296A,prod29AC);
          real prod29AE#2 = RMul(varAcc2967,prod3298E);
          real prod29AF#6 = RMul(one296B,prod29AE);
          real basisEval29B0#3 = RMul(coeff296A,prod29AF);
          real prod29B1#2 = RMul(prod22982,prod2297B);
          real prod29B2#5 = RMul(one296B,prod29B1);
          real basisEval29B3#1 = RMul(coeff296A,prod29B2);
          real prod29B4#2 = RMul(prod32998,varAcc2968);
          real prod29B5#6 = RMul(one296B,prod29B4);
          real basisEval29B6#3 = RMul(coeff296A,prod29B5);
          real prod429B7#3 = RMul(prod32998,varAcc2967);
          real prod29B8#2 = RMul(prod429B7,one296B);
          real prod29B9#4 = RMul(one296B,prod29B8);
          real basisEval29BA#2 = RMul(coeff296A,prod29B9);
          real prod29BB#6 = RMul(varAcc2966,prod298F);
          real basisEval29BC#1 = RMul(coeff2977,prod29BB);
          real prod29BD#5 = RMul(varAcc2966,prod2992);
          real basisEval29BE#4 = RMul(coeff2977,prod29BD);
          real prod29BF#5 = RMul(varAcc2966,prod2995);
          real basisEval29C0#4 = RMul(coeff2977,prod29BF);
          real prod29C1#6 = RMul(varAcc2966,prod2999);
          real basisEval29C2#1 = RMul(coeff2977,prod29C1);
          real prod29C3#5 = RMul(prod2298B,prod297C);
          real basisEval29C4#2 = RMul(coeff298A,prod29C3);
          real prod29C5#5 = RMul(prod2298B,prod297F);
          real basisEval29C6#1 = RMul(coeff298A,prod29C5);
          real prod29C7#5 = RMul(prod2298B,prod2983);
          real basisEval29C8#2 = RMul(coeff298A,prod29C7);
          real prod29C9#6 = RMul(prod329A7,prod2970);
          real basisEval29CA#1 = RMul(coeff29A6,prod29C9);
          real prod29CB#6 = RMul(prod329A7,prod2974);
          real basisEval29CC#1 = RMul(coeff29A6,prod29CB);
          real coeff29CD#3 = 0.30e2;
          real prod429CE#4 = RMul(prod329A7,varAcc2966);
          real prod29CF#4 = RMul(prod429CE,prod296C);
          real basisEval29D0#1 = RMul(coeff29CD,prod29CF);
          real basisEval29D1#6 = RMul(one296B,prod296D);
          real basisEval29D2#3 = RMul(one296B,prod2971);
          real basisEval29D3#5 = RMul(coeff296A,prod2979);
          real basisEval29D4#3 = RMul(one296B,prod297D);
          real coeff29D5#24 = 0.3e1;
          real basisEval29D6#3 = RMul(coeff29D5,prod2984);
          real basisEval29D7#5 = RMul(coeff296A,prod2986);
          real coeff29D8#25 = 0.4e1;
          real basisEval29D9#1 = RMul(coeff29D8,prod2988);
          real basisEval29DA#3 = RMul(coeff29D5,prod298C);
          real basisEval29DB#3 = RMul(one296B,prod2990);
          real basisEval29DC#2 = RMul(coeff29D5,prod2996);
          real basisEval29DD#3 = RMul(coeff29D8,prod299A);
          real basisEval29DE#3 = RMul(coeff296A,prod299C);
          real basisEval29DF#3 = RMul(coeff29D8,prod299E);
          real basisEval29E0#2 = RMul(coeff29D5,prod29A2);
          real basisEval29E1#2 = RMul(coeff2977,prod29A4);
          real basisEval29E2#3 = RMul(coeff29D8,prod29A8);
          real basisEval29E3#3 = RMul(one296B,prod29AC);
          real basisEval29E4#4 = RMul(coeff29D5,prod29B2);
          real basisEval29E5#2 = RMul(coeff29D8,prod29B5);
          real coeff29E6#9 = 0.5e1;
          real basisEval29E7#3 = RMul(coeff29E6,prod29B9);
          real basisEval29E8#3 = RMul(coeff296A,prod29BB);
          real basisEval29E9#1 = RMul(coeff29D8,prod29BD);
          real coeff29EA#6 = 0.8e1;
          real basisEval29EB#1 = RMul(coeff29EA,prod29C1);
          real basisEval29EC#4 = RMul(coeff29D5,prod29C3);
          real basisEval29ED#4 = RMul(coeff2977,prod29C5);
          real coeff29EE#3 = 0.9e1;
          real basisEval29EF#1 = RMul(coeff29EE,prod29C7);
          real basisEval29F0#2 = RMul(coeff29D8,prod29C9);
          real basisEval29F1#1 = RMul(coeff29EA,prod29CB);
          real basisEval29F2#3 = RMul(coeff29E6,prod29CF);
          real basisEval29F3#3 = RMul(one296B,prod2975);
          real basisEval29F4#3 = RMul(coeff29D5,prod297D);
          real basisEval29F5#3 = RMul(one296B,prod2984);
          real basisEval29F6#1 = RMul(coeff29D8,prod2986);
          real basisEval29F7#5 = RMul(coeff296A,prod2988);
          real basisEval29F8#3 = RMul(coeff29D8,prod2990);
          real basisEval29F9#2 = RMul(coeff29D5,prod2993);
          real basisEval29FA#3 = RMul(one296B,prod299A);
          real basisEval29FB#3 = RMul(coeff296A,prod29A0);
          real basisEval29FC#2 = RMul(coeff2977,prod29A2);
          real basisEval29FD#2 = RMul(coeff29D5,prod29A4);
          real basisEval29FE#3 = RMul(coeff29E6,prod29AC);
          real basisEval29FF#2 = RMul(coeff29D8,prod29AF);
          real basisEval2A00#3 = RMul(one296B,prod29B9);
          real basisEval2A01#1 = RMul(coeff29EA,prod29BB);
          real basisEval2A02#1 = RMul(coeff29D8,prod29BF);
          real basisEval2A03#3 = RMul(coeff296A,prod29C1);
          real basisEval2A04#1 = RMul(coeff29EE,prod29C3);
          real basisEval2A05#4 = RMul(coeff29D5,prod29C7);
          real basisEval2A06#1 = RMul(coeff29EA,prod29C9);
          real basisEval2A07#2 = RMul(coeff29D8,prod29CB);
          real basisEval2A08#1 = RMul(coeff2977,prod2975);
          real basisEval2A09#2 = RMul(coeff2977,prod2980);
          real basisEval2A0A#1 = RMul(coeff298A,prod2984);
          real basisEval2A0B#2 = RMul(coeff296A,prod298C);
          real basisEval2A0C#2 = RMul(coeff2977,prod2993);
          real basisEval2A0D#1 = RMul(coeff298A,prod2996);
          real basisEval2A0E#1 = RMul(coeff29A6,prod299A);
          real basisEval2A0F#1 = RMul(coeff298A,prod29A0);
          real basisEval2A10#3 = RMul(coeff296A,prod29A2);
          real basisEval2A11#2 = RMul(coeff296A,prod29A8);
          real basisEval2A12#1 = RMul(coeff2977,prod29AF);
          real basisEval2A13#2 = RMul(coeff298A,prod29B2);
          real basisEval2A14#1 = RMul(coeff29A6,prod29B5);
          real basisEval2A15#1 = RMul(coeff29CD,prod29B9);
          real basisEval2A16#1 = RMul(coeff298A,prod29BF);
          real basisEval2A17#1 = RMul(coeff29A6,prod29C1);
          real basisEval2A18#1 = RMul(coeff296A,prod29C3);
          real basisEval2A19#3 = RMul(coeff296A,prod29C9);
          real basisEval2A1A#1 = RMul(coeff2977,prod29CB);
          real basisEval2A1B#2 = RMul(coeff296A,prod29CF);
          real basisEval2A1C#3 = RMul(one296B,prod2979);
          real basisEval2A1D#1 = RMul(coeff29D8,prod2980);
          real basisEval2A1E#3 = RMul(one296B,prod298C);
          real basisEval2A1F#2 = RMul(coeff2977,prod2996);
          real basisEval2A20#2 = RMul(coeff29D5,prod299C);
          real basisEval2A21#2 = RMul(coeff29D5,prod29A0);
          real basisEval2A22#3 = RMul(coeff296A,prod29A4);
          real basisEval2A23#3 = RMul(one296B,prod29A8);
          real basisEval2A24#1 = RMul(coeff29EA,prod29AF);
          real basisEval2A25#1 = RMul(coeff29EE,prod29B2);
          real basisEval2A26#1 = RMul(coeff29EA,prod29B5);
          real basisEval2A27#2 = RMul(coeff29D8,prod29BB);
          real basisEval2A28#2 = RMul(coeff29D8,prod29C1);
          real basisEval2A29#1 = RMul(coeff29D8,prod29C5);
          real basisEval2A2A#3 = RMul(coeff296A,prod29CB);
          real basisEval2A2B#3 = RMul(one296B,prod29CF);
          real basisEval2A2C#1 = RMul(coeff2977,prod2971);
          real basisEval2A2D#1 = RMul(coeff298A,prod297D);
          real basisEval2A2E#1 = RMul(coeff29A6,prod2990);
          real basisEval2A2F#1 = RMul(coeff298A,prod2993);
          real basisEval2A30#1 = RMul(coeff298A,prod299C);
          real basisEval2A31#1 = RMul(coeff29CD,prod29AC);
          real basisEval2A32#1 = RMul(coeff29A6,prod29AF);
          real basisEval2A33#1 = RMul(coeff2977,prod29B5);
          real basisEval2A34#1 = RMul(coeff29A6,prod29BB);
          real basisEval2A35#1 = RMul(coeff298A,prod29BD);
          real basisEval2A36#1 = RMul(coeff296A,prod29C7);
          real basisEval2A37#1 = RMul(coeff2977,prod29C9);
          tensor[84] intermediateCons2A38#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval297A,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2981,basisEval2985,basisEval2987,basisEval2989,basisEval298D,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2994,basisEval2997,basisEval299B,basisEval299D,basisEval299F,basisEval29A1,basisEval29A3,basisEval29A5,basisEval29A9,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval29B0,basisEval29B3,basisEval29B6,basisEval29BA,basisEval29BC,basisEval29BE,basisEval29C0,basisEval29C2,basisEval29C4,basisEval29C6,basisEval29C8,basisEval29CA,basisEval29CC,basisEval29D0];
          tensor[84] intermediateCons2A39#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D2,basisEval2976,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D4,basisEval2981,basisEval29D6,basisEval2969,basisEval29D7,basisEval29D9,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29DB,basisEval2994,basisEval29DC,basisEval29DD,basisEval2969,basisEval29DE,basisEval29DF,basisEval29A1,basisEval2969,basisEval29E0,basisEval29E1,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29E3,basisEval29B0,basisEval29E4,basisEval29E5,basisEval29E7,basisEval2969,basisEval29E8,basisEval29E9,basisEval29C0,basisEval29EB,basisEval2969,basisEval29EC,basisEval29ED,basisEval29EF,basisEval2969,basisEval29F0,basisEval29F1,basisEval2969,basisEval29F2,basisEval2969];
          tensor[84] intermediateCons2A3A#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval29F3,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2981,basisEval29F5,basisEval2969,basisEval29F6,basisEval29F7,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval29F9,basisEval2997,basisEval29FA,basisEval2969,basisEval299D,basisEval29DF,basisEval29FB,basisEval2969,basisEval29FC,basisEval29FD,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval29FF,basisEval29E4,basisEval29B6,basisEval2A00,basisEval2969,basisEval2A01,basisEval29BE,basisEval2A02,basisEval2A03,basisEval2969,basisEval2A04,basisEval29ED,basisEval2A05,basisEval2969,basisEval2A06,basisEval2A07,basisEval2969,basisEval29F2,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3B#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2A08,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2A09,basisEval2A0A,basisEval2969,basisEval2969,basisEval29D7,basisEval2989,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2A0C,basisEval2A0D,basisEval2A0E,basisEval2969,basisEval2969,basisEval29DE,basisEval299F,basisEval2A0F,basisEval2969,basisEval2969,basisEval2A10,basisEval29E1,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval2A12,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2969,basisEval2969,basisEval29E8,basisEval29BE,basisEval2A16,basisEval2A17,basisEval2969,basisEval2969,basisEval2A18,basisEval29ED,basisEval29C8,basisEval2969,basisEval2969,basisEval2A19,basisEval2A1A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3C#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval2969,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2A1D,basisEval29D6,basisEval2969,basisEval2969,basisEval29D7,basisEval29F7,basisEval2969,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval2A0C,basisEval2A1F,basisEval29DD,basisEval2969,basisEval2969,basisEval2A20,basisEval29DF,basisEval2A21,basisEval2969,basisEval2969,basisEval2A10,basisEval2A22,basisEval2969,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval2A24,basisEval2A25,basisEval2A26,basisEval29E7,basisEval2969,basisEval2969,basisEval2A27,basisEval29BE,basisEval29C0,basisEval2A28,basisEval2969,basisEval2969,basisEval29EC,basisEval2A29,basisEval2A05,basisEval2969,basisEval2969,basisEval2A19,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3D#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2C,basisEval2976,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2D,basisEval2A09,basisEval2985,basisEval2969,basisEval2969,basisEval2987,basisEval29F7,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2E,basisEval2A2F,basisEval2A1F,basisEval299B,basisEval2969,basisEval2969,basisEval2A30,basisEval299F,basisEval29FB,basisEval2969,basisEval2969,basisEval29FC,basisEval2A22,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A31,basisEval2A32,basisEval2A13,basisEval2A33,basisEval29BA,basisEval2969,basisEval2969,basisEval2A34,basisEval2A35,basisEval29C0,basisEval2A03,basisEval2969,basisEval2969,basisEval29C4,basisEval29ED,basisEval2A36,basisEval2969,basisEval2969,basisEval2A37,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          real vdot2B21#1 = VDot<84>(dofs2812,intermediateCons2A38);
          real vdot2B23#2 = VDot<84>(dofs2812,intermediateCons2A39);
          real vdot2B25#2 = VDot<84>(dofs2812,intermediateCons2A3A);
          tensor[3] tensor2B26#1 = <tensor[3]>[vdot2B21,vdot2B23,vdot2B25];
          real vdot2B2A#1 = VDot<84>(dofs2812,intermediateCons2A3B);
          real vdot2B2C#2 = VDot<84>(dofs2812,intermediateCons2A3C);
          tensor[3] tensor2B2D#1 = <tensor[3]>[vdot2B23,vdot2B2A,vdot2B2C];
          real vdot2B33#1 = VDot<84>(dofs2812,intermediateCons2A3D);
          tensor[3] tensor2B34#1 = <tensor[3]>[vdot2B25,vdot2B2C,vdot2B33];
          tensor[3,3] _t2B1F#1 = <tensor[3,3]>[tensor2B26,tensor2B2D,tensor2B34];
          real[3] _t2B4C#1 = EigenVals3x3(_t2B1F);
          real _t2B50#1 = Subscript<real[3]>(_t2B4C,ilit24C7);
          real basisEval2B6D#1 = RMul(one296B,prod2980);
          real basisEval2B80#1 = RMul(one296B,prod2993);
          real basisEval2B83#1 = RMul(one296B,prod2996);
          real basisEval2B8B#3 = RMul(coeff296A,prod299E);
          real basisEval2B9C#1 = RMul(one296B,prod29AF);
          real basisEval2B9F#1 = RMul(one296B,prod29B2);
          real basisEval2BA2#1 = RMul(one296B,prod29B5);
          real basisEval2BAA#2 = RMul(coeff296A,prod29BD);
          real basisEval2BAC#2 = RMul(coeff296A,prod29BF);
          real basisEval2BB2#1 = RMul(coeff29D5,prod29C5);
          real prod52BBD#1 = RMul(prod429AA,varAcc2968);
          real prod2BBE#1 = RMul(one296B,prod52BBD);
          real prod2BBF#2 = RMul(one296B,prod2BBE);
          real basisEval2BC0#2 = RMul(one296B,prod2BBF);
          real prod2BC1#1 = RMul(varAcc2967,prod429AA);
          real prod2BC2#3 = RMul(one296B,prod2BC1);
          real basisEval2BC3#1 = RMul(one296B,prod2BC2);
          real prod2BC4#1 = RMul(prod22982,prod3298E);
          real prod2BC5#3 = RMul(one296B,prod2BC4);
          real basisEval2BC6#1 = RMul(one296B,prod2BC5);
          real prod2BC7#1 = RMul(prod32998,prod2297B);
          real prod2BC8#3 = RMul(one296B,prod2BC7);
          real basisEval2BC9#1 = RMul(one296B,prod2BC8);
          real prod2BCA#1 = RMul(prod429B7,varAcc2968);
          real prod2BCB#3 = RMul(one296B,prod2BCA);
          real basisEval2BCC#1 = RMul(one296B,prod2BCB);
          real prod52BCD#1 = RMul(prod429B7,varAcc2967);
          real prod2BCE#1 = RMul(prod52BCD,one296B);
          real prod2BCF#2 = RMul(one296B,prod2BCE);
          real basisEval2BD0#2 = RMul(one296B,prod2BCF);
          real prod2BD1#3 = RMul(varAcc2966,prod29AB);
          real basisEval2BD2#1 = RMul(coeff296A,prod2BD1);
          real prod2BD3#2 = RMul(varAcc2966,prod29AE);
          real basisEval2BD4#2 = RMul(coeff296A,prod2BD3);
          real prod2BD5#2 = RMul(varAcc2966,prod29B1);
          real basisEval2BD6#1 = RMul(coeff296A,prod2BD5);
          real prod2BD7#2 = RMul(varAcc2966,prod29B4);
          real basisEval2BD8#2 = RMul(coeff296A,prod2BD7);
          real prod2BD9#3 = RMul(varAcc2966,prod29B8);
          real basisEval2BDA#1 = RMul(coeff296A,prod2BD9);
          real prod2BDB#3 = RMul(prod2298B,prod298F);
          real basisEval2BDC#1 = RMul(coeff29D5,prod2BDB);
          real prod2BDD#2 = RMul(prod2298B,prod2992);
          real basisEval2BDE#2 = RMul(coeff29D5,prod2BDD);
          real prod2BDF#2 = RMul(prod2298B,prod2995);
          real basisEval2BE0#2 = RMul(coeff29D5,prod2BDF);
          real prod2BE1#3 = RMul(prod2298B,prod2999);
          real basisEval2BE2#1 = RMul(coeff29D5,prod2BE1);
          real prod2BE3#3 = RMul(prod329A7,prod297C);
          real basisEval2BE4#1 = RMul(coeff29D8,prod2BE3);
          real prod2BE5#2 = RMul(prod329A7,prod297F);
          real basisEval2BE6#1 = RMul(coeff29D8,prod2BE5);
          real prod2BE7#3 = RMul(prod329A7,prod2983);
          real basisEval2BE8#1 = RMul(coeff29D8,prod2BE7);
          real prod2BE9#3 = RMul(prod429CE,prod2970);
          real basisEval2BEA#1 = RMul(coeff29E6,prod2BE9);
          real prod2BEB#3 = RMul(prod429CE,prod2974);
          real basisEval2BEC#1 = RMul(coeff29E6,prod2BEB);
          real prod52BEE#1 = RMul(prod429CE,varAcc2966);
          real prod2BEF#2 = RMul(prod52BEE,prod296C);
          real basisEval2BF0#1 = RMul(coeff2977,prod2BEF);
          real basisEval2BF5#1 = RMul(one296B,prod2986);
          real basisEval2BFA#1 = RMul(one296B,prod299C);
          real basisEval2BFC#1 = RMul(one296B,prod29A2);
          real basisEval2C03#1 = RMul(one296B,prod29BB);
          real basisEval2C04#1 = RMul(coeff29D5,prod29BF);
          real basisEval2C06#1 = RMul(one296B,prod29C3);
          real basisEval2C07#2 = RMul(coeff296A,prod29C5);
          real basisEval2C08#1 = RMul(one296B,prod29C9);
          real basisEval2C0B#1 = RMul(coeff296A,prod2BC2);
          real basisEval2C0C#1 = RMul(coeff29D5,prod2BC5);
          real basisEval2C0D#1 = RMul(coeff29D8,prod2BC8);
          real basisEval2C0E#1 = RMul(coeff29E6,prod2BCB);
          real basisEval2C0F#1 = RMul(coeff2977,prod2BCF);
          real basisEval2C10#1 = RMul(one296B,prod2BD1);
          real basisEval2C11#2 = RMul(coeff29D5,prod2BD5);
          real basisEval2C12#1 = RMul(coeff29D8,prod2BD7);
          real basisEval2C13#1 = RMul(coeff29E6,prod2BD9);
          real basisEval2C14#1 = RMul(one296B,prod2BDB);
          real basisEval2C15#1 = RMul(coeff296A,prod2BDD);
          real basisEval2C16#1 = RMul(coeff29D8,prod2BE1);
          real basisEval2C17#1 = RMul(one296B,prod2BE3);
          real basisEval2C18#2 = RMul(coeff296A,prod2BE5);
          real basisEval2C19#1 = RMul(coeff29D5,prod2BE7);
          real basisEval2C1A#1 = RMul(one296B,prod2BE9);
          real basisEval2C1B#1 = RMul(coeff296A,prod2BEB);
          real basisEval2C1C#2 = RMul(one296B,prod2BEF);
          real basisEval2C1F#1 = RMul(one296B,prod2988);
          real basisEval2C24#1 = RMul(one296B,prod29A0);
          real basisEval2C26#1 = RMul(one296B,prod29A4);
          real basisEval2C2B#1 = RMul(coeff29D5,prod29BD);
          real basisEval2C2C#1 = RMul(one296B,prod29C1);
          real basisEval2C2D#1 = RMul(one296B,prod29C7);
          real basisEval2C2F#1 = RMul(one296B,prod29CB);
          real basisEval2C30#1 = RMul(coeff2977,prod2BBF);
          real basisEval2C31#1 = RMul(coeff29E6,prod2BC2);
          real basisEval2C32#1 = RMul(coeff29D8,prod2BC5);
          real basisEval2C33#1 = RMul(coeff29D5,prod2BC8);
          real basisEval2C34#1 = RMul(coeff296A,prod2BCB);
          real basisEval2C35#1 = RMul(coeff29E6,prod2BD1);
          real basisEval2C36#1 = RMul(coeff29D8,prod2BD3);
          real basisEval2C37#1 = RMul(one296B,prod2BD9);
          real basisEval2C38#1 = RMul(coeff29D8,prod2BDB);
          real basisEval2C39#1 = RMul(coeff296A,prod2BDF);
          real basisEval2C3A#1 = RMul(one296B,prod2BE1);
          real basisEval2C3B#1 = RMul(coeff29D5,prod2BE3);
          real basisEval2C3C#1 = RMul(one296B,prod2BE7);
          real basisEval2C3D#1 = RMul(coeff296A,prod2BE9);
          real basisEval2C3E#1 = RMul(one296B,prod2BEB);
          tensor[84] intermediateCons2C3F#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval29D2,basisEval29F3,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D4,basisEval2B6D,basisEval29F5,basisEval29D7,basisEval29F7,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29DB,basisEval2B80,basisEval2B83,basisEval29FA,basisEval29DE,basisEval2B8B,basisEval29FB,basisEval29E0,basisEval29FD,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29E3,basisEval2B9C,basisEval2B9F,basisEval2BA2,basisEval2A00,basisEval29E8,basisEval2BAA,basisEval2BAC,basisEval2A03,basisEval29EC,basisEval2BB2,basisEval2A05,basisEval29F0,basisEval2A07,basisEval29F2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2BC0,basisEval2BC3,basisEval2BC6,basisEval2BC9,basisEval2BCC,basisEval2BD0,basisEval2BD2,basisEval2BD4,basisEval2BD6,basisEval2BD8,basisEval2BDA,basisEval2BDC,basisEval2BDE,basisEval2BE0,basisEval2BE2,basisEval2BE4,basisEval2BE6,basisEval2BE8,basisEval2BEA,basisEval2BEC,basisEval2BF0];
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval29D2,basisEval2976,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval29D4,basisEval2981,basisEval29D6,basisEval2969,basisEval2BF5,basisEval29F7,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval29DB,basisEval2994,basisEval29DC,basisEval29DD,basisEval2969,basisEval2BFA,basisEval2B8B,basisEval2A21,basisEval2969,basisEval2BFC,basisEval2A22,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval29E3,basisEval29B0,basisEval29E4,basisEval29E5,basisEval29E7,basisEval2969,basisEval2C03,basisEval2BAA,basisEval2C04,basisEval2A28,basisEval2969,basisEval2C06,basisEval2C07,basisEval2A05,basisEval2969,basisEval2C08,basisEval2A2A,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2BC0,basisEval2C0B,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2969,basisEval2C10,basisEval2BD4,basisEval2C11,basisEval2C12,basisEval2C13,basisEval2969,basisEval2C14,basisEval2C15,basisEval2BE0,basisEval2C16,basisEval2969,basisEval2C17,basisEval2C18,basisEval2C19,basisEval2969,basisEval2C1A,basisEval2C1B,basisEval2969,basisEval2C1C,basisEval2969];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2972,basisEval29F3,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval29F4,basisEval2981,basisEval29F5,basisEval2969,basisEval29D7,basisEval2C1F,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval29F8,basisEval29F9,basisEval2997,basisEval29FA,basisEval2969,basisEval2A20,basisEval2B8B,basisEval2C24,basisEval2969,basisEval2A10,basisEval2C26,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval29FE,basisEval29FF,basisEval29E4,basisEval29B6,basisEval2A00,basisEval2969,basisEval2A27,basisEval2C2B,basisEval2BAC,basisEval2C2C,basisEval2969,basisEval29EC,basisEval2C07,basisEval2C2D,basisEval2969,basisEval2A19,basisEval2C2F,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2C30,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2BD0,basisEval2969,basisEval2C35,basisEval2C36,basisEval2C11,basisEval2BD8,basisEval2C37,basisEval2969,basisEval2C38,basisEval2BDE,basisEval2C39,basisEval2C3A,basisEval2969,basisEval2C3B,basisEval2C18,basisEval2C3C,basisEval2969,basisEval2C3D,basisEval2C3E,basisEval2969,basisEval2C1C,basisEval2969,basisEval2969];
          real vdot2D36#1 = VDot<84>(dofs2812,intermediateCons2C3F);
          real vdot2D38#1 = VDot<84>(dofs2812,intermediateCons2C40);
          real vdot2D3A#1 = VDot<84>(dofs2812,intermediateCons2C41);
          tensor[3] probe_l_62D34#2 = <tensor[3]>[vdot2D36,vdot2D38,vdot2D3A];
          real op1_e3_l_82D43#1 = VDot<3>(probe_l_62D34,probe_l_62D34);
          real op1_e3_l_92D46#1 = Sqrt(op1_e3_l_82D43);
          real op1_e3_l_102D49#1 = RNeg(_t2B50);
          real op1_e3_l_112D4C#1 = RAdd(fBias2481,op1_e3_l_92D46);
          real _t2D4F#1 = RDiv(op1_e3_l_102D49,op1_e3_l_112D4C);
          bool _t2D52#1 = GT<real>(_t2D4F,fStrTh247D);
          if _t2D52 then goto ASSIGN439E else goto ASSIGN40DF
        ASSIGN439E:  preds = [COND2D54]
          bool _t2D57#1 = GTE<real>(one296B,fMaskTh247F);
          if _t2D57 then goto ASSIGN2D5B else goto ASSIGN40DE
        ASSIGN2D5B:  preds = [COND2D59]
          bool _t2D5A#1 = true;
          goto JOIN2D5E
        JOIN2D5E:  preds = [ASSIGN2D5B,ASSIGN40DE]
          bool _t2D5C#1 = phi(_t2D5A,_t2D5D)
          goto JOIN2D61
        JOIN2D61:  preds = [JOIN2D5E,ASSIGN40DF]
          bool _t2D5F#1 = phi(_t2D5C,_t2D60)
          goto JOIN2D64
        JOIN2D64:  preds = [JOIN2D61,ASSIGN40E0]
          bool _t2D62#1 = phi(_t2D5F,_t2D63)
          bool _t2D65#1 = BNot(_t2D62);
          if _t2D65 then goto SAVE2D68 else goto JOIN2D6A
        SAVE2D68:  preds = [COND2D67]
          self.rayN = rayN24AB;
          active
          goto JOIN2D6A
        JOIN2D6A:  preds = [*ACTIVE2D69,COND2D67]
          bool _t2D6B#1 = BNot(analytical248B);
          if _t2D6B then goto ASSIGN2E6E else goto ASSIGN3EA0
        ASSIGN2E6E:  preds = [COND2D6D]
          int ilit2D6F#1 = 84;
          int mulRes2D70#84 = IMul(_t246B,ilit2D6F);
          int idx2D73#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,mulRes2D70);
          int ilit2D74#87 = 1;
          int addRes2D75#1 = IAdd(mulRes2D70,ilit2D74);
          int idx2D76#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D75);
          int ilit2D77#3 = 2;
          int addRes2D78#1 = IAdd(mulRes2D70,ilit2D77);
          int idx2D79#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D78);
          int ilit2D7A#1 = 3;
          int addRes2D7B#1 = IAdd(mulRes2D70,ilit2D7A);
          int idx2D7C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7B);
          int ilit2D7D#1 = 4;
          int addRes2D7E#1 = IAdd(mulRes2D70,ilit2D7D);
          int idx2D7F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7E);
          int ilit2D80#1 = 5;
          int addRes2D81#1 = IAdd(mulRes2D70,ilit2D80);
          int idx2D82#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D81);
          int ilit2D83#1 = 6;
          int addRes2D84#1 = IAdd(mulRes2D70,ilit2D83);
          int idx2D85#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D84);
          int ilit2D86#1 = 7;
          int addRes2D87#1 = IAdd(mulRes2D70,ilit2D86);
          int idx2D88#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D87);
          int ilit2D89#1 = 8;
          int addRes2D8A#1 = IAdd(mulRes2D70,ilit2D89);
          int idx2D8B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8A);
          int ilit2D8C#1 = 9;
          int addRes2D8D#1 = IAdd(mulRes2D70,ilit2D8C);
          int idx2D8E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8D);
          int ilit2D8F#1 = 10;
          int addRes2D90#1 = IAdd(mulRes2D70,ilit2D8F);
          int idx2D91#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D90);
          int ilit2D92#1 = 11;
          int addRes2D93#1 = IAdd(mulRes2D70,ilit2D92);
          int idx2D94#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D93);
          int ilit2D95#1 = 12;
          int addRes2D96#1 = IAdd(mulRes2D70,ilit2D95);
          int idx2D97#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D96);
          int ilit2D98#1 = 13;
          int addRes2D99#1 = IAdd(mulRes2D70,ilit2D98);
          int idx2D9A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D99);
          int ilit2D9B#1 = 14;
          int addRes2D9C#1 = IAdd(mulRes2D70,ilit2D9B);
          int idx2D9D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9C);
          int ilit2D9E#1 = 15;
          int addRes2D9F#1 = IAdd(mulRes2D70,ilit2D9E);
          int idx2DA0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9F);
          int ilit2DA1#1 = 16;
          int addRes2DA2#1 = IAdd(mulRes2D70,ilit2DA1);
          int idx2DA3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA2);
          int ilit2DA4#1 = 17;
          int addRes2DA5#1 = IAdd(mulRes2D70,ilit2DA4);
          int idx2DA6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA5);
          int ilit2DA7#1 = 18;
          int addRes2DA8#1 = IAdd(mulRes2D70,ilit2DA7);
          int idx2DA9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA8);
          int ilit2DAA#1 = 19;
          int addRes2DAB#1 = IAdd(mulRes2D70,ilit2DAA);
          int idx2DAC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAB);
          int ilit2DAD#1 = 20;
          int addRes2DAE#1 = IAdd(mulRes2D70,ilit2DAD);
          int idx2DAF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAE);
          int ilit2DB0#1 = 21;
          int addRes2DB1#1 = IAdd(mulRes2D70,ilit2DB0);
          int idx2DB2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB1);
          int ilit2DB3#1 = 22;
          int addRes2DB4#1 = IAdd(mulRes2D70,ilit2DB3);
          int idx2DB5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB4);
          int ilit2DB6#1 = 23;
          int addRes2DB7#1 = IAdd(mulRes2D70,ilit2DB6);
          int idx2DB8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB7);
          int ilit2DB9#1 = 24;
          int addRes2DBA#1 = IAdd(mulRes2D70,ilit2DB9);
          int idx2DBB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBA);
          int ilit2DBC#1 = 25;
          int addRes2DBD#1 = IAdd(mulRes2D70,ilit2DBC);
          int idx2DBE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBD);
          int ilit2DBF#1 = 26;
          int addRes2DC0#1 = IAdd(mulRes2D70,ilit2DBF);
          int idx2DC1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC0);
          int ilit2DC2#1 = 27;
          int addRes2DC3#1 = IAdd(mulRes2D70,ilit2DC2);
          int idx2DC4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC3);
          int ilit2DC5#1 = 28;
          int addRes2DC6#1 = IAdd(mulRes2D70,ilit2DC5);
          int idx2DC7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC6);
          int ilit2DC8#1 = 29;
          int addRes2DC9#1 = IAdd(mulRes2D70,ilit2DC8);
          int idx2DCA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC9);
          int ilit2DCB#1 = 30;
          int addRes2DCC#1 = IAdd(mulRes2D70,ilit2DCB);
          int idx2DCD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCC);
          int ilit2DCE#1 = 31;
          int addRes2DCF#1 = IAdd(mulRes2D70,ilit2DCE);
          int idx2DD0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCF);
          int ilit2DD1#1 = 32;
          int addRes2DD2#1 = IAdd(mulRes2D70,ilit2DD1);
          int idx2DD3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD2);
          int ilit2DD4#1 = 33;
          int addRes2DD5#1 = IAdd(mulRes2D70,ilit2DD4);
          int idx2DD6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD5);
          int ilit2DD7#1 = 34;
          int addRes2DD8#1 = IAdd(mulRes2D70,ilit2DD7);
          int idx2DD9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD8);
          int ilit2DDA#1 = 35;
          int addRes2DDB#1 = IAdd(mulRes2D70,ilit2DDA);
          int idx2DDC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDB);
          int ilit2DDD#1 = 36;
          int addRes2DDE#1 = IAdd(mulRes2D70,ilit2DDD);
          int idx2DDF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDE);
          int ilit2DE0#1 = 37;
          int addRes2DE1#1 = IAdd(mulRes2D70,ilit2DE0);
          int idx2DE2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE1);
          int ilit2DE3#1 = 38;
          int addRes2DE4#1 = IAdd(mulRes2D70,ilit2DE3);
          int idx2DE5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE4);
          int ilit2DE6#1 = 39;
          int addRes2DE7#1 = IAdd(mulRes2D70,ilit2DE6);
          int idx2DE8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE7);
          int ilit2DE9#1 = 40;
          int addRes2DEA#1 = IAdd(mulRes2D70,ilit2DE9);
          int idx2DEB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DEA);
          int ilit2DEC#1 = 41;
          int addRes2DED#1 = IAdd(mulRes2D70,ilit2DEC);
          int idx2DEE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DED);
          int ilit2DEF#1 = 42;
          int addRes2DF0#1 = IAdd(mulRes2D70,ilit2DEF);
          int idx2DF1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF0);
          int ilit2DF2#1 = 43;
          int addRes2DF3#1 = IAdd(mulRes2D70,ilit2DF2);
          int idx2DF4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF3);
          int ilit2DF5#1 = 44;
          int addRes2DF6#1 = IAdd(mulRes2D70,ilit2DF5);
          int idx2DF7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF6);
          int ilit2DF8#1 = 45;
          int addRes2DF9#1 = IAdd(mulRes2D70,ilit2DF8);
          int idx2DFA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF9);
          int ilit2DFB#1 = 46;
          int addRes2DFC#1 = IAdd(mulRes2D70,ilit2DFB);
          int idx2DFD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFC);
          int ilit2DFE#1 = 47;
          int addRes2DFF#1 = IAdd(mulRes2D70,ilit2DFE);
          int idx2E00#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFF);
          int ilit2E01#1 = 48;
          int addRes2E02#1 = IAdd(mulRes2D70,ilit2E01);
          int idx2E03#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E02);
          int ilit2E04#1 = 49;
          int addRes2E05#1 = IAdd(mulRes2D70,ilit2E04);
          int idx2E06#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E05);
          int ilit2E07#1 = 50;
          int addRes2E08#1 = IAdd(mulRes2D70,ilit2E07);
          int idx2E09#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E08);
          int ilit2E0A#1 = 51;
          int addRes2E0B#1 = IAdd(mulRes2D70,ilit2E0A);
          int idx2E0C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0B);
          int ilit2E0D#1 = 52;
          int addRes2E0E#1 = IAdd(mulRes2D70,ilit2E0D);
          int idx2E0F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0E);
          int ilit2E10#1 = 53;
          int addRes2E11#1 = IAdd(mulRes2D70,ilit2E10);
          int idx2E12#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E11);
          int ilit2E13#1 = 54;
          int addRes2E14#1 = IAdd(mulRes2D70,ilit2E13);
          int idx2E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E14);
          int ilit2E16#1 = 55;
          int addRes2E17#1 = IAdd(mulRes2D70,ilit2E16);
          int idx2E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E17);
          int ilit2E19#1 = 56;
          int addRes2E1A#1 = IAdd(mulRes2D70,ilit2E19);
          int idx2E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1A);
          int ilit2E1C#1 = 57;
          int addRes2E1D#1 = IAdd(mulRes2D70,ilit2E1C);
          int idx2E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1D);
          int ilit2E1F#1 = 58;
          int addRes2E20#1 = IAdd(mulRes2D70,ilit2E1F);
          int idx2E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E20);
          int ilit2E22#1 = 59;
          int addRes2E23#1 = IAdd(mulRes2D70,ilit2E22);
          int idx2E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E23);
          int ilit2E25#1 = 60;
          int addRes2E26#1 = IAdd(mulRes2D70,ilit2E25);
          int idx2E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E26);
          int ilit2E28#1 = 61;
          int addRes2E29#1 = IAdd(mulRes2D70,ilit2E28);
          int idx2E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E29);
          int ilit2E2B#1 = 62;
          int addRes2E2C#1 = IAdd(mulRes2D70,ilit2E2B);
          int idx2E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2C);
          int ilit2E2E#1 = 63;
          int addRes2E2F#1 = IAdd(mulRes2D70,ilit2E2E);
          int idx2E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2F);
          int ilit2E31#1 = 64;
          int addRes2E32#1 = IAdd(mulRes2D70,ilit2E31);
          int idx2E33#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E32);
          int ilit2E34#1 = 65;
          int addRes2E35#1 = IAdd(mulRes2D70,ilit2E34);
          int idx2E36#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E35);
          int ilit2E37#1 = 66;
          int addRes2E38#1 = IAdd(mulRes2D70,ilit2E37);
          int idx2E39#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E38);
          int ilit2E3A#1 = 67;
          int addRes2E3B#1 = IAdd(mulRes2D70,ilit2E3A);
          int idx2E3C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3B);
          int ilit2E3D#1 = 68;
          int addRes2E3E#1 = IAdd(mulRes2D70,ilit2E3D);
          int idx2E3F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3E);
          int ilit2E40#1 = 69;
          int addRes2E41#1 = IAdd(mulRes2D70,ilit2E40);
          int idx2E42#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E41);
          int ilit2E43#1 = 70;
          int addRes2E44#1 = IAdd(mulRes2D70,ilit2E43);
          int idx2E45#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E44);
          int ilit2E46#1 = 71;
          int addRes2E47#1 = IAdd(mulRes2D70,ilit2E46);
          int idx2E48#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E47);
          int ilit2E49#1 = 72;
          int addRes2E4A#1 = IAdd(mulRes2D70,ilit2E49);
          int idx2E4B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4A);
          int ilit2E4C#1 = 73;
          int addRes2E4D#1 = IAdd(mulRes2D70,ilit2E4C);
          int idx2E4E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4D);
          int ilit2E4F#1 = 74;
          int addRes2E50#1 = IAdd(mulRes2D70,ilit2E4F);
          int idx2E51#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E50);
          int ilit2E52#1 = 75;
          int addRes2E53#1 = IAdd(mulRes2D70,ilit2E52);
          int idx2E54#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E53);
          int ilit2E55#1 = 76;
          int addRes2E56#1 = IAdd(mulRes2D70,ilit2E55);
          int idx2E57#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E56);
          int ilit2E58#1 = 77;
          int addRes2E59#1 = IAdd(mulRes2D70,ilit2E58);
          int idx2E5A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E59);
          int ilit2E5B#1 = 78;
          int addRes2E5C#1 = IAdd(mulRes2D70,ilit2E5B);
          int idx2E5D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5C);
          int ilit2E5E#1 = 79;
          int addRes2E5F#1 = IAdd(mulRes2D70,ilit2E5E);
          int idx2E60#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5F);
          int ilit2E61#1 = 80;
          int addRes2E62#1 = IAdd(mulRes2D70,ilit2E61);
          int idx2E63#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E62);
          int ilit2E64#1 = 81;
          int addRes2E65#1 = IAdd(mulRes2D70,ilit2E64);
          int idx2E66#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E65);
          int ilit2E67#1 = 82;
          int addRes2E68#1 = IAdd(mulRes2D70,ilit2E67);
          int idx2E69#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E68);
          int ilit2E6A#1 = 83;
          int addRes2E6B#1 = IAdd(mulRes2D70,ilit2E6A);
          int idx2E6C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E6B);
          int mulRes2F72#1 = IMul(ilit2D74,idx2D73);
          int mulRes2F74#1 = IMul(ilit2D74,idx2D76);
          int mulRes2F77#1 = IMul(ilit2D74,idx2D79);
          int mulRes2F7A#1 = IMul(ilit2D74,idx2D7C);
          int mulRes2F7D#1 = IMul(ilit2D74,idx2D7F);
          int mulRes2F80#1 = IMul(ilit2D74,idx2D82);
          int mulRes2F83#1 = IMul(ilit2D74,idx2D85);
          int mulRes2F86#1 = IMul(ilit2D74,idx2D88);
          int mulRes2F89#1 = IMul(ilit2D74,idx2D8B);
          int mulRes2F8C#1 = IMul(ilit2D74,idx2D8E);
          int mulRes2F8F#1 = IMul(ilit2D74,idx2D91);
          int mulRes2F92#1 = IMul(ilit2D74,idx2D94);
          int mulRes2F95#1 = IMul(ilit2D74,idx2D97);
          int mulRes2F98#1 = IMul(ilit2D74,idx2D9A);
          int mulRes2F9B#1 = IMul(ilit2D74,idx2D9D);
          int mulRes2F9E#1 = IMul(ilit2D74,idx2DA0);
          int mulRes2FA1#1 = IMul(ilit2D74,idx2DA3);
          int mulRes2FA4#1 = IMul(ilit2D74,idx2DA6);
          int mulRes2FA7#1 = IMul(ilit2D74,idx2DA9);
          int mulRes2FAA#1 = IMul(ilit2D74,idx2DAC);
          int mulRes2FAD#1 = IMul(ilit2D74,idx2DAF);
          int mulRes2FB0#1 = IMul(ilit2D74,idx2DB2);
          int mulRes2FB3#1 = IMul(ilit2D74,idx2DB5);
          int mulRes2FB6#1 = IMul(ilit2D74,idx2DB8);
          int mulRes2FB9#1 = IMul(ilit2D74,idx2DBB);
          int mulRes2FBC#1 = IMul(ilit2D74,idx2DBE);
          int mulRes2FBF#1 = IMul(ilit2D74,idx2DC1);
          int mulRes2FC2#1 = IMul(ilit2D74,idx2DC4);
          int mulRes2FC5#1 = IMul(ilit2D74,idx2DC7);
          int mulRes2FC8#1 = IMul(ilit2D74,idx2DCA);
          int mulRes2FCB#1 = IMul(ilit2D74,idx2DCD);
          int mulRes2FCE#1 = IMul(ilit2D74,idx2DD0);
          int mulRes2FD1#1 = IMul(ilit2D74,idx2DD3);
          int mulRes2FD4#1 = IMul(ilit2D74,idx2DD6);
          int mulRes2FD7#1 = IMul(ilit2D74,idx2DD9);
          int mulRes2FDA#1 = IMul(ilit2D74,idx2DDC);
          int mulRes2FDD#1 = IMul(ilit2D74,idx2DDF);
          int mulRes2FE0#1 = IMul(ilit2D74,idx2DE2);
          int mulRes2FE3#1 = IMul(ilit2D74,idx2DE5);
          int mulRes2FE6#1 = IMul(ilit2D74,idx2DE8);
          int mulRes2FE9#1 = IMul(ilit2D74,idx2DEB);
          int mulRes2FEC#1 = IMul(ilit2D74,idx2DEE);
          int mulRes2FEF#1 = IMul(ilit2D74,idx2DF1);
          int mulRes2FF2#1 = IMul(ilit2D74,idx2DF4);
          int mulRes2FF5#1 = IMul(ilit2D74,idx2DF7);
          int mulRes2FF8#1 = IMul(ilit2D74,idx2DFA);
          int mulRes2FFB#1 = IMul(ilit2D74,idx2DFD);
          int mulRes2FFE#1 = IMul(ilit2D74,idx2E00);
          int mulRes3001#1 = IMul(ilit2D74,idx2E03);
          int mulRes3004#1 = IMul(ilit2D74,idx2E06);
          int mulRes3007#1 = IMul(ilit2D74,idx2E09);
          int mulRes300A#1 = IMul(ilit2D74,idx2E0C);
          int mulRes300D#1 = IMul(ilit2D74,idx2E0F);
          int mulRes3010#1 = IMul(ilit2D74,idx2E12);
          int mulRes3013#1 = IMul(ilit2D74,idx2E15);
          int mulRes3016#1 = IMul(ilit2D74,idx2E18);
          int mulRes3019#1 = IMul(ilit2D74,idx2E1B);
          int mulRes301C#1 = IMul(ilit2D74,idx2E1E);
          int mulRes301F#1 = IMul(ilit2D74,idx2E21);
          int mulRes3022#1 = IMul(ilit2D74,idx2E24);
          int mulRes3025#1 = IMul(ilit2D74,idx2E27);
          int mulRes3028#1 = IMul(ilit2D74,idx2E2A);
          int mulRes302B#1 = IMul(ilit2D74,idx2E2D);
          int mulRes302E#1 = IMul(ilit2D74,idx2E30);
          int mulRes3031#1 = IMul(ilit2D74,idx2E33);
          int mulRes3034#1 = IMul(ilit2D74,idx2E36);
          int mulRes3037#1 = IMul(ilit2D74,idx2E39);
          int mulRes303A#1 = IMul(ilit2D74,idx2E3C);
          int mulRes303D#1 = IMul(ilit2D74,idx2E3F);
          int mulRes3040#1 = IMul(ilit2D74,idx2E42);
          int mulRes3043#1 = IMul(ilit2D74,idx2E45);
          int mulRes3046#1 = IMul(ilit2D74,idx2E48);
          int mulRes3049#1 = IMul(ilit2D74,idx2E4B);
          int mulRes304C#1 = IMul(ilit2D74,idx2E4E);
          int mulRes304F#1 = IMul(ilit2D74,idx2E51);
          int mulRes3052#1 = IMul(ilit2D74,idx2E54);
          int mulRes3055#1 = IMul(ilit2D74,idx2E57);
          int mulRes3058#1 = IMul(ilit2D74,idx2E5A);
          int mulRes305B#1 = IMul(ilit2D74,idx2E5D);
          int mulRes305E#1 = IMul(ilit2D74,idx2E60);
          int mulRes3061#1 = IMul(ilit2D74,idx2E63);
          int mulRes3064#1 = IMul(ilit2D74,idx2E66);
          int mulRes3067#1 = IMul(ilit2D74,idx2E69);
          int mulRes306A#1 = IMul(ilit2D74,idx2E6C);
          real dof306B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F72);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F74);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F77);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7A);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7D);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F80);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F83);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F86);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F89);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8C);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8F);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F92);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F95);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F98);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9B);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9E);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA1);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA4);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA7);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAA);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAD);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB0);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB3);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB6);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB9);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBC);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBF);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC2);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC5);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC8);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCB);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCE);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD1);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD4);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD7);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDA);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDD);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE0);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE3);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE6);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE9);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEC);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEF);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF2);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF5);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF8);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFB);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFE);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3001);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3004);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3007);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300A);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300D);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3010);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3013);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3016);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3019);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301C);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301F);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3022);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3025);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3028);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302B);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302E);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3031);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3034);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3037);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303A);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303D);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3040);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3043);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3046);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3049);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304C);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304F);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3052);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3055);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3058);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305B);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305E);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3061);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3064);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3067);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes306A);
          tensor[84] dofs30BF#9 = <tensor[84]>[dof306B,dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE];
          real varAcc3213#20 = VIndex<3,0>(pos24B7);
          real varAcc3214#10 = VIndex<3,1>(pos24B7);
          real varAcc3215#10 = VIndex<3,2>(pos24B7);
          real basisEval3216#378 = 0.e0;
          real coeff3217#47 = 0.2e1;
          real one3218#79 = 0.1e1;
          real prod3219#6 = RMul(one3218,one3218);
          real prod321A#2 = RMul(one3218,prod3219);
          real basisEval321B#3 = RMul(coeff3217,prod321A);
          real prod321D#5 = RMul(one3218,varAcc3215);
          real prod321E#3 = RMul(one3218,prod321D);
          real basisEval321F#5 = RMul(coeff3217,prod321E);
          real prod3221#5 = RMul(varAcc3214,one3218);
          real prod3222#3 = RMul(one3218,prod3221);
          real basisEval3223#5 = RMul(coeff3217,prod3222);
          real coeff3224#25 = 0.6e1;
          real prod3226#3 = RMul(varAcc3213,prod3219);
          real basisEval3227#1 = RMul(coeff3224,prod3226);
          real prod23228#5 = RMul(varAcc3215,varAcc3215);
          real prod3229#4 = RMul(one3218,prod23228);
          real prod322A#4 = RMul(one3218,prod3229);
          real basisEval322B#2 = RMul(coeff3217,prod322A);
          real prod322C#4 = RMul(varAcc3214,varAcc3215);
          real prod322D#4 = RMul(one3218,prod322C);
          real basisEval322E#5 = RMul(coeff3217,prod322D);
          real prod2322F#5 = RMul(varAcc3214,varAcc3214);
          real prod3230#4 = RMul(prod2322F,one3218);
          real prod3231#4 = RMul(one3218,prod3230);
          real basisEval3232#2 = RMul(coeff3217,prod3231);
          real prod3233#4 = RMul(varAcc3213,prod321D);
          real basisEval3234#2 = RMul(coeff3224,prod3233);
          real prod3235#4 = RMul(varAcc3213,prod3221);
          real basisEval3236#2 = RMul(coeff3224,prod3235);
          real coeff3237#15 = 0.12e2;
          real prod23238#11 = RMul(varAcc3213,varAcc3213);
          real prod3239#4 = RMul(prod23238,prod3219);
          real basisEval323A#1 = RMul(coeff3237,prod3239);
          real prod3323B#4 = RMul(prod23228,varAcc3215);
          real prod323C#3 = RMul(one3218,prod3323B);
          real prod323D#4 = RMul(one3218,prod323C);
          real basisEval323E#2 = RMul(coeff3217,prod323D);
          real prod323F#3 = RMul(varAcc3214,prod23228);
          real prod3240#5 = RMul(one3218,prod323F);
          real basisEval3241#3 = RMul(coeff3217,prod3240);
          real prod3242#3 = RMul(prod2322F,varAcc3215);
          real prod3243#5 = RMul(one3218,prod3242);
          real basisEval3244#3 = RMul(coeff3217,prod3243);
          real prod33245#4 = RMul(prod2322F,varAcc3214);
          real prod3246#3 = RMul(prod33245,one3218);
          real prod3247#4 = RMul(one3218,prod3246);
          real basisEval3248#2 = RMul(coeff3217,prod3247);
          real prod3249#5 = RMul(varAcc3213,prod3229);
          real basisEval324A#2 = RMul(coeff3224,prod3249);
          real prod324B#3 = RMul(varAcc3213,prod322C);
          real basisEval324C#3 = RMul(coeff3224,prod324B);
          real prod324D#5 = RMul(varAcc3213,prod3230);
          real basisEval324E#2 = RMul(coeff3224,prod324D);
          real prod324F#5 = RMul(prod23238,prod321D);
          real basisEval3250#1 = RMul(coeff3237,prod324F);
          real prod3251#5 = RMul(prod23238,prod3221);
          real basisEval3252#1 = RMul(coeff3237,prod3251);
          real coeff3253#9 = 0.20e2;
          real prod33254#7 = RMul(prod23238,varAcc3213);
          real prod3255#4 = RMul(prod33254,prod3219);
          real basisEval3256#1 = RMul(coeff3253,prod3255);
          real prod43257#3 = RMul(prod3323B,varAcc3215);
          real prod3258#2 = RMul(one3218,prod43257);
          real prod3259#4 = RMul(one3218,prod3258);
          real basisEval325A#2 = RMul(coeff3217,prod3259);
          real prod325B#2 = RMul(varAcc3214,prod3323B);
          real prod325C#6 = RMul(one3218,prod325B);
          real basisEval325D#3 = RMul(coeff3217,prod325C);
          real prod325E#2 = RMul(prod2322F,prod23228);
          real prod325F#5 = RMul(one3218,prod325E);
          real basisEval3260#1 = RMul(coeff3217,prod325F);
          real prod3261#2 = RMul(prod33245,varAcc3215);
          real prod3262#6 = RMul(one3218,prod3261);
          real basisEval3263#3 = RMul(coeff3217,prod3262);
          real prod43264#3 = RMul(prod33245,varAcc3214);
          real prod3265#2 = RMul(prod43264,one3218);
          real prod3266#4 = RMul(one3218,prod3265);
          real basisEval3267#2 = RMul(coeff3217,prod3266);
          real prod3268#6 = RMul(varAcc3213,prod323C);
          real basisEval3269#1 = RMul(coeff3224,prod3268);
          real prod326A#5 = RMul(varAcc3213,prod323F);
          real basisEval326B#4 = RMul(coeff3224,prod326A);
          real prod326C#5 = RMul(varAcc3213,prod3242);
          real basisEval326D#4 = RMul(coeff3224,prod326C);
          real prod326E#6 = RMul(varAcc3213,prod3246);
          real basisEval326F#1 = RMul(coeff3224,prod326E);
          real prod3270#5 = RMul(prod23238,prod3229);
          real basisEval3271#2 = RMul(coeff3237,prod3270);
          real prod3272#5 = RMul(prod23238,prod322C);
          real basisEval3273#1 = RMul(coeff3237,prod3272);
          real prod3274#5 = RMul(prod23238,prod3230);
          real basisEval3275#2 = RMul(coeff3237,prod3274);
          real prod3276#6 = RMul(prod33254,prod321D);
          real basisEval3277#1 = RMul(coeff3253,prod3276);
          real prod3278#6 = RMul(prod33254,prod3221);
          real basisEval3279#1 = RMul(coeff3253,prod3278);
          real coeff327A#3 = 0.30e2;
          real prod4327B#4 = RMul(prod33254,varAcc3213);
          real prod327C#4 = RMul(prod4327B,prod3219);
          real basisEval327D#1 = RMul(coeff327A,prod327C);
          real basisEval327E#6 = RMul(one3218,prod321A);
          real basisEval327F#3 = RMul(one3218,prod321E);
          real basisEval3280#5 = RMul(coeff3217,prod3226);
          real basisEval3281#3 = RMul(one3218,prod322A);
          real coeff3282#24 = 0.3e1;
          real basisEval3283#3 = RMul(coeff3282,prod3231);
          real basisEval3284#5 = RMul(coeff3217,prod3233);
          real coeff3285#25 = 0.4e1;
          real basisEval3286#1 = RMul(coeff3285,prod3235);
          real basisEval3287#3 = RMul(coeff3282,prod3239);
          real basisEval3288#3 = RMul(one3218,prod323D);
          real basisEval3289#2 = RMul(coeff3282,prod3243);
          real basisEval328A#3 = RMul(coeff3285,prod3247);
          real basisEval328B#3 = RMul(coeff3217,prod3249);
          real basisEval328C#3 = RMul(coeff3285,prod324B);
          real basisEval328D#2 = RMul(coeff3282,prod324F);
          real basisEval328E#2 = RMul(coeff3224,prod3251);
          real basisEval328F#3 = RMul(coeff3285,prod3255);
          real basisEval3290#3 = RMul(one3218,prod3259);
          real basisEval3291#4 = RMul(coeff3282,prod325F);
          real basisEval3292#2 = RMul(coeff3285,prod3262);
          real coeff3293#9 = 0.5e1;
          real basisEval3294#3 = RMul(coeff3293,prod3266);
          real basisEval3295#3 = RMul(coeff3217,prod3268);
          real basisEval3296#1 = RMul(coeff3285,prod326A);
          real coeff3297#6 = 0.8e1;
          real basisEval3298#1 = RMul(coeff3297,prod326E);
          real basisEval3299#4 = RMul(coeff3282,prod3270);
          real basisEval329A#4 = RMul(coeff3224,prod3272);
          real coeff329B#3 = 0.9e1;
          real basisEval329C#1 = RMul(coeff329B,prod3274);
          real basisEval329D#2 = RMul(coeff3285,prod3276);
          real basisEval329E#1 = RMul(coeff3297,prod3278);
          real basisEval329F#3 = RMul(coeff3293,prod327C);
          real basisEval32A0#3 = RMul(one3218,prod3222);
          real basisEval32A1#3 = RMul(coeff3282,prod322A);
          real basisEval32A2#3 = RMul(one3218,prod3231);
          real basisEval32A3#1 = RMul(coeff3285,prod3233);
          real basisEval32A4#5 = RMul(coeff3217,prod3235);
          real basisEval32A5#3 = RMul(coeff3285,prod323D);
          real basisEval32A6#2 = RMul(coeff3282,prod3240);
          real basisEval32A7#3 = RMul(one3218,prod3247);
          real basisEval32A8#3 = RMul(coeff3217,prod324D);
          real basisEval32A9#2 = RMul(coeff3224,prod324F);
          real basisEval32AA#2 = RMul(coeff3282,prod3251);
          real basisEval32AB#3 = RMul(coeff3293,prod3259);
          real basisEval32AC#2 = RMul(coeff3285,prod325C);
          real basisEval32AD#3 = RMul(one3218,prod3266);
          real basisEval32AE#1 = RMul(coeff3297,prod3268);
          real basisEval32AF#1 = RMul(coeff3285,prod326C);
          real basisEval32B0#3 = RMul(coeff3217,prod326E);
          real basisEval32B1#1 = RMul(coeff329B,prod3270);
          real basisEval32B2#4 = RMul(coeff3282,prod3274);
          real basisEval32B3#1 = RMul(coeff3297,prod3276);
          real basisEval32B4#2 = RMul(coeff3285,prod3278);
          real basisEval32B5#1 = RMul(coeff3224,prod3222);
          real basisEval32B6#2 = RMul(coeff3224,prod322D);
          real basisEval32B7#1 = RMul(coeff3237,prod3231);
          real basisEval32B8#2 = RMul(coeff3217,prod3239);
          real basisEval32B9#2 = RMul(coeff3224,prod3240);
          real basisEval32BA#1 = RMul(coeff3237,prod3243);
          real basisEval32BB#1 = RMul(coeff3253,prod3247);
          real basisEval32BC#1 = RMul(coeff3237,prod324D);
          real basisEval32BD#3 = RMul(coeff3217,prod324F);
          real basisEval32BE#2 = RMul(coeff3217,prod3255);
          real basisEval32BF#1 = RMul(coeff3224,prod325C);
          real basisEval32C0#2 = RMul(coeff3237,prod325F);
          real basisEval32C1#1 = RMul(coeff3253,prod3262);
          real basisEval32C2#1 = RMul(coeff327A,prod3266);
          real basisEval32C3#1 = RMul(coeff3237,prod326C);
          real basisEval32C4#1 = RMul(coeff3253,prod326E);
          real basisEval32C5#1 = RMul(coeff3217,prod3270);
          real basisEval32C6#3 = RMul(coeff3217,prod3276);
          real basisEval32C7#1 = RMul(coeff3224,prod3278);
          real basisEval32C8#2 = RMul(coeff3217,prod327C);
          real basisEval32C9#3 = RMul(one3218,prod3226);
          real basisEval32CA#1 = RMul(coeff3285,prod322D);
          real basisEval32CB#3 = RMul(one3218,prod3239);
          real basisEval32CC#2 = RMul(coeff3224,prod3243);
          real basisEval32CD#2 = RMul(coeff3282,prod3249);
          real basisEval32CE#2 = RMul(coeff3282,prod324D);
          real basisEval32CF#3 = RMul(coeff3217,prod3251);
          real basisEval32D0#3 = RMul(one3218,prod3255);
          real basisEval32D1#1 = RMul(coeff3297,prod325C);
          real basisEval32D2#1 = RMul(coeff329B,prod325F);
          real basisEval32D3#1 = RMul(coeff3297,prod3262);
          real basisEval32D4#2 = RMul(coeff3285,prod3268);
          real basisEval32D5#2 = RMul(coeff3285,prod326E);
          real basisEval32D6#1 = RMul(coeff3285,prod3272);
          real basisEval32D7#3 = RMul(coeff3217,prod3278);
          real basisEval32D8#3 = RMul(one3218,prod327C);
          real basisEval32D9#1 = RMul(coeff3224,prod321E);
          real basisEval32DA#1 = RMul(coeff3237,prod322A);
          real basisEval32DB#1 = RMul(coeff3253,prod323D);
          real basisEval32DC#1 = RMul(coeff3237,prod3240);
          real basisEval32DD#1 = RMul(coeff3237,prod3249);
          real basisEval32DE#1 = RMul(coeff327A,prod3259);
          real basisEval32DF#1 = RMul(coeff3253,prod325C);
          real basisEval32E0#1 = RMul(coeff3224,prod3262);
          real basisEval32E1#1 = RMul(coeff3253,prod3268);
          real basisEval32E2#1 = RMul(coeff3237,prod326A);
          real basisEval32E3#1 = RMul(coeff3217,prod3274);
          real basisEval32E4#1 = RMul(coeff3224,prod3276);
          tensor[84] intermediateCons32E5#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3227,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval322E,basisEval3232,basisEval3234,basisEval3236,basisEval323A,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval3241,basisEval3244,basisEval3248,basisEval324A,basisEval324C,basisEval324E,basisEval3250,basisEval3252,basisEval3256,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval325D,basisEval3260,basisEval3263,basisEval3267,basisEval3269,basisEval326B,basisEval326D,basisEval326F,basisEval3271,basisEval3273,basisEval3275,basisEval3277,basisEval3279,basisEval327D];
          tensor[84] intermediateCons32E6#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327F,basisEval3223,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3281,basisEval322E,basisEval3283,basisEval3216,basisEval3284,basisEval3286,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3288,basisEval3241,basisEval3289,basisEval328A,basisEval3216,basisEval328B,basisEval328C,basisEval324E,basisEval3216,basisEval328D,basisEval328E,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3290,basisEval325D,basisEval3291,basisEval3292,basisEval3294,basisEval3216,basisEval3295,basisEval3296,basisEval326D,basisEval3298,basisEval3216,basisEval3299,basisEval329A,basisEval329C,basisEval3216,basisEval329D,basisEval329E,basisEval3216,basisEval329F,basisEval3216];
          tensor[84] intermediateCons32E7#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32A0,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval322E,basisEval32A2,basisEval3216,basisEval32A3,basisEval32A4,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32A6,basisEval3244,basisEval32A7,basisEval3216,basisEval324A,basisEval328C,basisEval32A8,basisEval3216,basisEval32A9,basisEval32AA,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32AC,basisEval3291,basisEval3263,basisEval32AD,basisEval3216,basisEval32AE,basisEval326B,basisEval32AF,basisEval32B0,basisEval3216,basisEval32B1,basisEval329A,basisEval32B2,basisEval3216,basisEval32B3,basisEval32B4,basisEval3216,basisEval329F,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E8#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32B5,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval32B6,basisEval32B7,basisEval3216,basisEval3216,basisEval3284,basisEval3236,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval32B9,basisEval32BA,basisEval32BB,basisEval3216,basisEval3216,basisEval328B,basisEval324C,basisEval32BC,basisEval3216,basisEval3216,basisEval32BD,basisEval328E,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval32BF,basisEval32C0,basisEval32C1,basisEval32C2,basisEval3216,basisEval3216,basisEval3295,basisEval326B,basisEval32C3,basisEval32C4,basisEval3216,basisEval3216,basisEval32C5,basisEval329A,basisEval3275,basisEval3216,basisEval3216,basisEval32C6,basisEval32C7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E9#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3216,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval32CA,basisEval3283,basisEval3216,basisEval3216,basisEval3284,basisEval32A4,basisEval3216,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32B9,basisEval32CC,basisEval328A,basisEval3216,basisEval3216,basisEval32CD,basisEval328C,basisEval32CE,basisEval3216,basisEval3216,basisEval32BD,basisEval32CF,basisEval3216,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32D1,basisEval32D2,basisEval32D3,basisEval3294,basisEval3216,basisEval3216,basisEval32D4,basisEval326B,basisEval326D,basisEval32D5,basisEval3216,basisEval3216,basisEval3299,basisEval32D6,basisEval32B2,basisEval3216,basisEval3216,basisEval32C6,basisEval32D7,basisEval3216,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32EA#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32D9,basisEval3223,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DA,basisEval32B6,basisEval3232,basisEval3216,basisEval3216,basisEval3234,basisEval32A4,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DB,basisEval32DC,basisEval32CC,basisEval3248,basisEval3216,basisEval3216,basisEval32DD,basisEval324C,basisEval32A8,basisEval3216,basisEval3216,basisEval32A9,basisEval32CF,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DE,basisEval32DF,basisEval32C0,basisEval32E0,basisEval3267,basisEval3216,basisEval3216,basisEval32E1,basisEval32E2,basisEval326D,basisEval32B0,basisEval3216,basisEval3216,basisEval3271,basisEval329A,basisEval32E3,basisEval3216,basisEval3216,basisEval32E4,basisEval32D7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          real vdot33CE#1 = VDot<84>(dofs30BF,intermediateCons32E5);
          real vdot33D0#2 = VDot<84>(dofs30BF,intermediateCons32E6);
          real vdot33D2#2 = VDot<84>(dofs30BF,intermediateCons32E7);
          tensor[3] tensor33D3#1 = <tensor[3]>[vdot33CE,vdot33D0,vdot33D2];
          real vdot33D7#1 = VDot<84>(dofs30BF,intermediateCons32E8);
          real vdot33D9#2 = VDot<84>(dofs30BF,intermediateCons32E9);
          tensor[3] tensor33DA#1 = <tensor[3]>[vdot33D0,vdot33D7,vdot33D9];
          real vdot33E0#1 = VDot<84>(dofs30BF,intermediateCons32EA);
          tensor[3] tensor33E1#1 = <tensor[3]>[vdot33D2,vdot33D9,vdot33E0];
          tensor[3,3] _t33CC#1 = <tensor[3,3]>[tensor33D3,tensor33DA,tensor33E1];
          (real[3] evals33F9#2,tensor[3][3] E33FA#2) = EigenVecs3x3(_t33CC);
          tensor[3] _t33FE#6 = Subscript<tensor[3][3]>(E33FA,ilit2D77);
          real _t3400#9 = Subscript<real[3]>(evals33F9,ilit2D77);
          tensor[3] _t3404#6 = Subscript<tensor[3][3]>(E33FA,ilit2D74);
          real _t3406#9 = Subscript<real[3]>(evals33F9,ilit2D74);
          real r3409#1 = TensorIndex<tensor[3],[0]>(_t33FE);
          tensor[3] binopV340A#3 = VScale<3>(r3409,_t33FE);
          real r340B#1 = TensorIndex<tensor[3],[1]>(_t33FE);
          tensor[3] binopV340C#3 = VScale<3>(r340B,_t33FE);
          real r340D#1 = TensorIndex<tensor[3],[2]>(_t33FE);
          tensor[3] binopV340E#3 = VScale<3>(r340D,_t33FE);
          real r3418#1 = TensorIndex<tensor[3],[0]>(_t3404);
          tensor[3] binopV3419#3 = VScale<3>(r3418,_t3404);
          real r341A#1 = TensorIndex<tensor[3],[1]>(_t3404);
          tensor[3] binopV341B#3 = VScale<3>(r341A,_t3404);
          real r341C#1 = TensorIndex<tensor[3],[2]>(_t3404);
          tensor[3] binopV341D#3 = VScale<3>(r341C,_t3404);
          real r3427#1 = VIndex<3,0>(binopV340A);
          real r3428#1 = RDiv(r3427,_t3400);
          real r3429#1 = VIndex<3,1>(binopV340A);
          real r342A#1 = RDiv(r3429,_t3400);
          real r342B#1 = VIndex<3,2>(binopV340A);
          real r342C#1 = RDiv(r342B,_t3400);
          tensor[3] tensor342D#1 = <tensor[3]>[r3428,r342A,r342C];
          real r342E#1 = VIndex<3,0>(binopV340C);
          real r342F#1 = RDiv(r342E,_t3400);
          real r3430#1 = VIndex<3,1>(binopV340C);
          real r3431#1 = RDiv(r3430,_t3400);
          real r3432#1 = VIndex<3,2>(binopV340C);
          real r3433#1 = RDiv(r3432,_t3400);
          tensor[3] tensor3434#1 = <tensor[3]>[r342F,r3431,r3433];
          real r3435#1 = VIndex<3,0>(binopV340E);
          real r3436#1 = RDiv(r3435,_t3400);
          real r3437#1 = VIndex<3,1>(binopV340E);
          real r3438#1 = RDiv(r3437,_t3400);
          real r3439#1 = VIndex<3,2>(binopV340E);
          real r343A#1 = RDiv(r3439,_t3400);
          tensor[3] tensor343B#1 = <tensor[3]>[r3436,r3438,r343A];
          real r3454#1 = VIndex<3,0>(binopV3419);
          real r3455#1 = RDiv(r3454,_t3406);
          real r3456#1 = VIndex<3,1>(binopV3419);
          real r3457#1 = RDiv(r3456,_t3406);
          real r3458#1 = VIndex<3,2>(binopV3419);
          real r3459#1 = RDiv(r3458,_t3406);
          tensor[3] tensor345A#1 = <tensor[3]>[r3455,r3457,r3459];
          real r345B#1 = VIndex<3,0>(binopV341B);
          real r345C#1 = RDiv(r345B,_t3406);
          real r345D#1 = VIndex<3,1>(binopV341B);
          real r345E#1 = RDiv(r345D,_t3406);
          real r345F#1 = VIndex<3,2>(binopV341B);
          real r3460#1 = RDiv(r345F,_t3406);
          tensor[3] tensor3461#1 = <tensor[3]>[r345C,r345E,r3460];
          real r3462#1 = VIndex<3,0>(binopV341D);
          real r3463#1 = RDiv(r3462,_t3406);
          real r3464#1 = VIndex<3,1>(binopV341D);
          real r3465#1 = RDiv(r3464,_t3406);
          real r3466#1 = VIndex<3,2>(binopV341D);
          real r3467#1 = RDiv(r3466,_t3406);
          tensor[3] tensor3468#1 = <tensor[3]>[r3463,r3465,r3467];
          tensor[3] v3483#1 = VAdd<3>(tensor342D,tensor345A);
          tensor[3] v3486#1 = VAdd<3>(tensor3434,tensor3461);
          tensor[3] v3489#1 = VAdd<3>(tensor343B,tensor3468);
          real basisEval34B0#1 = RMul(one3218,prod322D);
          real basisEval34C3#1 = RMul(one3218,prod3240);
          real basisEval34C6#1 = RMul(one3218,prod3243);
          real basisEval34CE#3 = RMul(coeff3217,prod324B);
          real basisEval34DF#1 = RMul(one3218,prod325C);
          real basisEval34E2#1 = RMul(one3218,prod325F);
          real basisEval34E5#1 = RMul(one3218,prod3262);
          real basisEval34ED#2 = RMul(coeff3217,prod326A);
          real basisEval34EF#2 = RMul(coeff3217,prod326C);
          real basisEval34F5#1 = RMul(coeff3282,prod3272);
          real prod53500#1 = RMul(prod43257,varAcc3215);
          real prod3501#1 = RMul(one3218,prod53500);
          real prod3502#2 = RMul(one3218,prod3501);
          real basisEval3503#2 = RMul(one3218,prod3502);
          real prod3504#1 = RMul(varAcc3214,prod43257);
          real prod3505#3 = RMul(one3218,prod3504);
          real basisEval3506#1 = RMul(one3218,prod3505);
          real prod3507#1 = RMul(prod2322F,prod3323B);
          real prod3508#3 = RMul(one3218,prod3507);
          real basisEval3509#1 = RMul(one3218,prod3508);
          real prod350A#1 = RMul(prod33245,prod23228);
          real prod350B#3 = RMul(one3218,prod350A);
          real basisEval350C#1 = RMul(one3218,prod350B);
          real prod350D#1 = RMul(prod43264,varAcc3215);
          real prod350E#3 = RMul(one3218,prod350D);
          real basisEval350F#1 = RMul(one3218,prod350E);
          real prod53510#1 = RMul(prod43264,varAcc3214);
          real prod3511#1 = RMul(prod53510,one3218);
          real prod3512#2 = RMul(one3218,prod3511);
          real basisEval3513#2 = RMul(one3218,prod3512);
          real prod3514#3 = RMul(varAcc3213,prod3258);
          real basisEval3515#1 = RMul(coeff3217,prod3514);
          real prod3516#2 = RMul(varAcc3213,prod325B);
          real basisEval3517#2 = RMul(coeff3217,prod3516);
          real prod3518#2 = RMul(varAcc3213,prod325E);
          real basisEval3519#1 = RMul(coeff3217,prod3518);
          real prod351A#2 = RMul(varAcc3213,prod3261);
          real basisEval351B#2 = RMul(coeff3217,prod351A);
          real prod351C#3 = RMul(varAcc3213,prod3265);
          real basisEval351D#1 = RMul(coeff3217,prod351C);
          real prod351E#3 = RMul(prod23238,prod323C);
          real basisEval351F#1 = RMul(coeff3282,prod351E);
          real prod3520#2 = RMul(prod23238,prod323F);
          real basisEval3521#2 = RMul(coeff3282,prod3520);
          real prod3522#2 = RMul(prod23238,prod3242);
          real basisEval3523#2 = RMul(coeff3282,prod3522);
          real prod3524#3 = RMul(prod23238,prod3246);
          real basisEval3525#1 = RMul(coeff3282,prod3524);
          real prod3526#3 = RMul(prod33254,prod3229);
          real basisEval3527#1 = RMul(coeff3285,prod3526);
          real prod3528#2 = RMul(prod33254,prod322C);
          real basisEval3529#1 = RMul(coeff3285,prod3528);
          real prod352A#3 = RMul(prod33254,prod3230);
          real basisEval352B#1 = RMul(coeff3285,prod352A);
          real prod352C#3 = RMul(prod4327B,prod321D);
          real basisEval352D#1 = RMul(coeff3293,prod352C);
          real prod352E#3 = RMul(prod4327B,prod3221);
          real basisEval352F#1 = RMul(coeff3293,prod352E);
          real prod53531#1 = RMul(prod4327B,varAcc3213);
          real prod3532#2 = RMul(prod53531,prod3219);
          real basisEval3533#1 = RMul(coeff3224,prod3532);
          real basisEval3538#1 = RMul(one3218,prod3233);
          real basisEval353D#1 = RMul(one3218,prod3249);
          real basisEval353F#1 = RMul(one3218,prod324F);
          real basisEval3546#1 = RMul(one3218,prod3268);
          real basisEval3547#1 = RMul(coeff3282,prod326C);
          real basisEval3549#1 = RMul(one3218,prod3270);
          real basisEval354A#2 = RMul(coeff3217,prod3272);
          real basisEval354B#1 = RMul(one3218,prod3276);
          real basisEval354E#1 = RMul(coeff3217,prod3505);
          real basisEval354F#1 = RMul(coeff3282,prod3508);
          real basisEval3550#1 = RMul(coeff3285,prod350B);
          real basisEval3551#1 = RMul(coeff3293,prod350E);
          real basisEval3552#1 = RMul(coeff3224,prod3512);
          real basisEval3553#1 = RMul(one3218,prod3514);
          real basisEval3554#2 = RMul(coeff3282,prod3518);
          real basisEval3555#1 = RMul(coeff3285,prod351A);
          real basisEval3556#1 = RMul(coeff3293,prod351C);
          real basisEval3557#1 = RMul(one3218,prod351E);
          real basisEval3558#1 = RMul(coeff3217,prod3520);
          real basisEval3559#1 = RMul(coeff3285,prod3524);
          real basisEval355A#1 = RMul(one3218,prod3526);
          real basisEval355B#2 = RMul(coeff3217,prod3528);
          real basisEval355C#1 = RMul(coeff3282,prod352A);
          real basisEval355D#1 = RMul(one3218,prod352C);
          real basisEval355E#1 = RMul(coeff3217,prod352E);
          real basisEval355F#2 = RMul(one3218,prod3532);
          real basisEval3562#1 = RMul(one3218,prod3235);
          real basisEval3567#1 = RMul(one3218,prod324D);
          real basisEval3569#1 = RMul(one3218,prod3251);
          real basisEval356E#1 = RMul(coeff3282,prod326A);
          real basisEval356F#1 = RMul(one3218,prod326E);
          real basisEval3570#1 = RMul(one3218,prod3274);
          real basisEval3572#1 = RMul(one3218,prod3278);
          real basisEval3573#1 = RMul(coeff3224,prod3502);
          real basisEval3574#1 = RMul(coeff3293,prod3505);
          real basisEval3575#1 = RMul(coeff3285,prod3508);
          real basisEval3576#1 = RMul(coeff3282,prod350B);
          real basisEval3577#1 = RMul(coeff3217,prod350E);
          real basisEval3578#1 = RMul(coeff3293,prod3514);
          real basisEval3579#1 = RMul(coeff3285,prod3516);
          real basisEval357A#1 = RMul(one3218,prod351C);
          real basisEval357B#1 = RMul(coeff3285,prod351E);
          real basisEval357C#1 = RMul(coeff3217,prod3522);
          real basisEval357D#1 = RMul(one3218,prod3524);
          real basisEval357E#1 = RMul(coeff3282,prod3526);
          real basisEval357F#1 = RMul(one3218,prod352A);
          real basisEval3580#1 = RMul(coeff3217,prod352C);
          real basisEval3581#1 = RMul(one3218,prod352E);
          tensor[84] intermediateCons3582#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval327F,basisEval32A0,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3281,basisEval34B0,basisEval32A2,basisEval3284,basisEval32A4,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3288,basisEval34C3,basisEval34C6,basisEval32A7,basisEval328B,basisEval34CE,basisEval32A8,basisEval328D,basisEval32AA,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3290,basisEval34DF,basisEval34E2,basisEval34E5,basisEval32AD,basisEval3295,basisEval34ED,basisEval34EF,basisEval32B0,basisEval3299,basisEval34F5,basisEval32B2,basisEval329D,basisEval32B4,basisEval329F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3503,basisEval3506,basisEval3509,basisEval350C,basisEval350F,basisEval3513,basisEval3515,basisEval3517,basisEval3519,basisEval351B,basisEval351D,basisEval351F,basisEval3521,basisEval3523,basisEval3525,basisEval3527,basisEval3529,basisEval352B,basisEval352D,basisEval352F,basisEval3533];
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval327F,basisEval3223,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval3281,basisEval322E,basisEval3283,basisEval3216,basisEval3538,basisEval32A4,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval3288,basisEval3241,basisEval3289,basisEval328A,basisEval3216,basisEval353D,basisEval34CE,basisEval32CE,basisEval3216,basisEval353F,basisEval32CF,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval3290,basisEval325D,basisEval3291,basisEval3292,basisEval3294,basisEval3216,basisEval3546,basisEval34ED,basisEval3547,basisEval32D5,basisEval3216,basisEval3549,basisEval354A,basisEval32B2,basisEval3216,basisEval354B,basisEval32D7,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3503,basisEval354E,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3216,basisEval3553,basisEval3517,basisEval3554,basisEval3555,basisEval3556,basisEval3216,basisEval3557,basisEval3558,basisEval3523,basisEval3559,basisEval3216,basisEval355A,basisEval355B,basisEval355C,basisEval3216,basisEval355D,basisEval355E,basisEval3216,basisEval355F,basisEval3216];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval321F,basisEval32A0,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval32A1,basisEval322E,basisEval32A2,basisEval3216,basisEval3284,basisEval3562,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval32A5,basisEval32A6,basisEval3244,basisEval32A7,basisEval3216,basisEval32CD,basisEval34CE,basisEval3567,basisEval3216,basisEval32BD,basisEval3569,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval32AB,basisEval32AC,basisEval3291,basisEval3263,basisEval32AD,basisEval3216,basisEval32D4,basisEval356E,basisEval34EF,basisEval356F,basisEval3216,basisEval3299,basisEval354A,basisEval3570,basisEval3216,basisEval32C6,basisEval3572,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3573,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3513,basisEval3216,basisEval3578,basisEval3579,basisEval3554,basisEval351B,basisEval357A,basisEval3216,basisEval357B,basisEval3521,basisEval357C,basisEval357D,basisEval3216,basisEval357E,basisEval355B,basisEval357F,basisEval3216,basisEval3580,basisEval3581,basisEval3216,basisEval355F,basisEval3216,basisEval3216];
          real vdot3679#1 = VDot<84>(dofs30BF,intermediateCons3582);
          real vdot367B#1 = VDot<84>(dofs30BF,intermediateCons3583);
          real vdot367D#1 = VDot<84>(dofs30BF,intermediateCons3584);
          tensor[3] probe_l_153677#3 = <tensor[3]>[vdot3679,vdot367B,vdot367D];
          tensor[3] negV3688#1 = VNeg<3>(v3483);
          tensor[3] negV368A#1 = VNeg<3>(v3486);
          tensor[3] negV368C#1 = VNeg<3>(v3489);
          real vdot3697#1 = VDot<3>(negV3688,probe_l_153677);
          real vdot3699#1 = VDot<3>(negV368A,probe_l_153677);
          real vdot369B#1 = VDot<3>(negV368C,probe_l_153677);
          tensor[3] _t3695#1 = <tensor[3]>[vdot3697,vdot3699,vdot369B];
          goto JOIN36A6
        JOIN36A6:  preds = [ASSIGN36A3,ASSIGN40DD]
          tensor[3] step36A4#5 = phi(_t3695,_t36A5)
          real _t36A7#7 = 0.e0;
          real _t36A9#143 = 0.1e1;
          real _t36AB#1 = 0.15e1;
          real op1_e3_l_736AD#1 = VDot<3>(step36A4,step36A4);
          real op1_e3_l_836B0#3 = Sqrt(op1_e3_l_736AD);
          real op1_e3_l_936B3#1 = Abs<real>(op1_e3_l_836B0);
          real op1_e3_l_1036B6#1 = RDiv(op1_e3_l_936B3,thick247B);
          real op1_e3_l_1136B9#1 = RSub(_t36A9,op1_e3_l_1036B6);
          real op1_e3_l_1236BC#1 = RMul(_t36AB,op1_e3_l_1136B9);
          real op1_e3_l_1336BF#1 = RClamp(_t36A7,_t36A9,op1_e3_l_1236BC);
          real _t36C2#2 = RMul(maxAlpha2483,op1_e3_l_1336BF);
          bool _t36C5#1 = EQ<real>(_t36C2,_t36A7);
          if _t36C5 then goto SAVE36C8 else goto JOIN36CA
        SAVE36C8:  preds = [COND36C7]
          self.rayN = rayN24AB;
          active
          goto JOIN36CA
        JOIN36CA:  preds = [*ACTIVE36C9,COND36C7]
          real _t36D1#1 = RSub(_t36A9,_t36C2);
          real _t36D4#1 = MathFn<pow>(_t36D1,alphaFix249B);
          bool _t36D6#1 = NEQ<real>(phKs24A3,_t36A7);
          if _t36D6 then goto ASSIGN36DB else goto JOIN36FE
        ASSIGN36DB:  preds = [COND36D8]
          tensor[3] op1_e3_l_636D9#3 = VAdd<3>(eyeDir249D,litwsp2493);
          real op1_e3_l_836DC#1 = VDot<3>(op1_e3_l_636D9,op1_e3_l_636D9);
          real op1_e3_l_936DF#1 = Sqrt(op1_e3_l_836DC);
          real op1_e3_l_1236E2#1 = RDiv(_t36A9,op1_e3_l_836B0);
          tensor[3] op1_e3_l_1336E7#1 = VScale<3>(op1_e3_l_1236E2,step36A4);
          tensor[3] op1_e3_l_1436EA#1 = VNeg<3>(op1_e3_l_1336E7);
          real op1_e3_l_1636ED#1 = RDiv(_t36A9,op1_e3_l_936DF);
          real op1_e3_l_1736F2#1 = VDot<3>(op1_e3_l_1436EA,op1_e3_l_636D9);
          real op1_e3_l_1836F5#1 = RMul(op1_e3_l_1636ED,op1_e3_l_1736F2);
          real _t36F8#1 = Abs<real>(op1_e3_l_1836F5);
          real scomp36FB#1 = MathFn<pow>(_t36F8,phSp24A5);
          goto JOIN36FE
        JOIN36FE:  preds = [ASSIGN36FC,COND36D8]
          real scomp36FD#1 = phi(scomp36FB,_t36A7)
          real cmin36FF#3 = VIndex<2,0>(cminmax2489);
          real cmax3701#2 = VIndex<2,1>(cminmax2489);
          tensor[3] mcol3703#1 = <tensor[3]>[_t36A9,_t36A9,_t36A9];
          bool _t3705#1 = NEQ<real>(cmin36FF,cmax3701);
          if _t3705 then goto ASSIGN44D8 else goto JOIN3DEB
        ASSIGN44D8:  preds = [COND3707]
          tensor[3] _t3708#3 = VAdd<3>(pos24B7,step36A4);
          int ilit370E#1 = 84;
          int mulRes370F#84 = IMul(_t246B,ilit370E);
          int idx3712#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,mulRes370F);
          int ilit3713#91 = 1;
          int addRes3714#1 = IAdd(mulRes370F,ilit3713);
          int idx3715#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3714);
          int ilit3716#5 = 2;
          int addRes3717#1 = IAdd(mulRes370F,ilit3716);
          int idx3718#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3717);
          int ilit3719#5 = 3;
          int addRes371A#1 = IAdd(mulRes370F,ilit3719);
          int idx371B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371A);
          int ilit371C#1 = 4;
          int addRes371D#1 = IAdd(mulRes370F,ilit371C);
          int idx371E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371D);
          int ilit371F#1 = 5;
          int addRes3720#1 = IAdd(mulRes370F,ilit371F);
          int idx3721#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3720);
          int ilit3722#1 = 6;
          int addRes3723#1 = IAdd(mulRes370F,ilit3722);
          int idx3724#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3723);
          int ilit3725#1 = 7;
          int addRes3726#1 = IAdd(mulRes370F,ilit3725);
          int idx3727#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3726);
          int ilit3728#1 = 8;
          int addRes3729#1 = IAdd(mulRes370F,ilit3728);
          int idx372A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3729);
          int ilit372B#1 = 9;
          int addRes372C#1 = IAdd(mulRes370F,ilit372B);
          int idx372D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372C);
          int ilit372E#1 = 10;
          int addRes372F#1 = IAdd(mulRes370F,ilit372E);
          int idx3730#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372F);
          int ilit3731#1 = 11;
          int addRes3732#1 = IAdd(mulRes370F,ilit3731);
          int idx3733#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3732);
          int ilit3734#1 = 12;
          int addRes3735#1 = IAdd(mulRes370F,ilit3734);
          int idx3736#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3735);
          int ilit3737#1 = 13;
          int addRes3738#1 = IAdd(mulRes370F,ilit3737);
          int idx3739#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3738);
          int ilit373A#1 = 14;
          int addRes373B#1 = IAdd(mulRes370F,ilit373A);
          int idx373C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373B);
          int ilit373D#1 = 15;
          int addRes373E#1 = IAdd(mulRes370F,ilit373D);
          int idx373F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373E);
          int ilit3740#1 = 16;
          int addRes3741#1 = IAdd(mulRes370F,ilit3740);
          int idx3742#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3741);
          int ilit3743#1 = 17;
          int addRes3744#1 = IAdd(mulRes370F,ilit3743);
          int idx3745#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3744);
          int ilit3746#1 = 18;
          int addRes3747#1 = IAdd(mulRes370F,ilit3746);
          int idx3748#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3747);
          int ilit3749#1 = 19;
          int addRes374A#1 = IAdd(mulRes370F,ilit3749);
          int idx374B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374A);
          int ilit374C#1 = 20;
          int addRes374D#1 = IAdd(mulRes370F,ilit374C);
          int idx374E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374D);
          int ilit374F#1 = 21;
          int addRes3750#1 = IAdd(mulRes370F,ilit374F);
          int idx3751#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3750);
          int ilit3752#1 = 22;
          int addRes3753#1 = IAdd(mulRes370F,ilit3752);
          int idx3754#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3753);
          int ilit3755#1 = 23;
          int addRes3756#1 = IAdd(mulRes370F,ilit3755);
          int idx3757#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3756);
          int ilit3758#1 = 24;
          int addRes3759#1 = IAdd(mulRes370F,ilit3758);
          int idx375A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3759);
          int ilit375B#1 = 25;
          int addRes375C#1 = IAdd(mulRes370F,ilit375B);
          int idx375D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375C);
          int ilit375E#1 = 26;
          int addRes375F#1 = IAdd(mulRes370F,ilit375E);
          int idx3760#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375F);
          int ilit3761#1 = 27;
          int addRes3762#1 = IAdd(mulRes370F,ilit3761);
          int idx3763#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3762);
          int ilit3764#1 = 28;
          int addRes3765#1 = IAdd(mulRes370F,ilit3764);
          int idx3766#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3765);
          int ilit3767#1 = 29;
          int addRes3768#1 = IAdd(mulRes370F,ilit3767);
          int idx3769#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3768);
          int ilit376A#1 = 30;
          int addRes376B#1 = IAdd(mulRes370F,ilit376A);
          int idx376C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376B);
          int ilit376D#1 = 31;
          int addRes376E#1 = IAdd(mulRes370F,ilit376D);
          int idx376F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376E);
          int ilit3770#1 = 32;
          int addRes3771#1 = IAdd(mulRes370F,ilit3770);
          int idx3772#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3771);
          int ilit3773#1 = 33;
          int addRes3774#1 = IAdd(mulRes370F,ilit3773);
          int idx3775#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3774);
          int ilit3776#1 = 34;
          int addRes3777#1 = IAdd(mulRes370F,ilit3776);
          int idx3778#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3777);
          int ilit3779#1 = 35;
          int addRes377A#1 = IAdd(mulRes370F,ilit3779);
          int idx377B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377A);
          int ilit377C#1 = 36;
          int addRes377D#1 = IAdd(mulRes370F,ilit377C);
          int idx377E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377D);
          int ilit377F#1 = 37;
          int addRes3780#1 = IAdd(mulRes370F,ilit377F);
          int idx3781#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3780);
          int ilit3782#1 = 38;
          int addRes3783#1 = IAdd(mulRes370F,ilit3782);
          int idx3784#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3783);
          int ilit3785#1 = 39;
          int addRes3786#1 = IAdd(mulRes370F,ilit3785);
          int idx3787#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3786);
          int ilit3788#1 = 40;
          int addRes3789#1 = IAdd(mulRes370F,ilit3788);
          int idx378A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3789);
          int ilit378B#1 = 41;
          int addRes378C#1 = IAdd(mulRes370F,ilit378B);
          int idx378D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378C);
          int ilit378E#1 = 42;
          int addRes378F#1 = IAdd(mulRes370F,ilit378E);
          int idx3790#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378F);
          int ilit3791#1 = 43;
          int addRes3792#1 = IAdd(mulRes370F,ilit3791);
          int idx3793#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3792);
          int ilit3794#1 = 44;
          int addRes3795#1 = IAdd(mulRes370F,ilit3794);
          int idx3796#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3795);
          int ilit3797#1 = 45;
          int addRes3798#1 = IAdd(mulRes370F,ilit3797);
          int idx3799#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3798);
          int ilit379A#1 = 46;
          int addRes379B#1 = IAdd(mulRes370F,ilit379A);
          int idx379C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379B);
          int ilit379D#1 = 47;
          int addRes379E#1 = IAdd(mulRes370F,ilit379D);
          int idx379F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379E);
          int ilit37A0#1 = 48;
          int addRes37A1#1 = IAdd(mulRes370F,ilit37A0);
          int idx37A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A1);
          int ilit37A3#1 = 49;
          int addRes37A4#1 = IAdd(mulRes370F,ilit37A3);
          int idx37A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A4);
          int ilit37A6#1 = 50;
          int addRes37A7#1 = IAdd(mulRes370F,ilit37A6);
          int idx37A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A7);
          int ilit37A9#1 = 51;
          int addRes37AA#1 = IAdd(mulRes370F,ilit37A9);
          int idx37AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AA);
          int ilit37AC#1 = 52;
          int addRes37AD#1 = IAdd(mulRes370F,ilit37AC);
          int idx37AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AD);
          int ilit37AF#1 = 53;
          int addRes37B0#1 = IAdd(mulRes370F,ilit37AF);
          int idx37B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B0);
          int ilit37B2#1 = 54;
          int addRes37B3#1 = IAdd(mulRes370F,ilit37B2);
          int idx37B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B3);
          int ilit37B5#1 = 55;
          int addRes37B6#1 = IAdd(mulRes370F,ilit37B5);
          int idx37B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B6);
          int ilit37B8#1 = 56;
          int addRes37B9#1 = IAdd(mulRes370F,ilit37B8);
          int idx37BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B9);
          int ilit37BB#1 = 57;
          int addRes37BC#1 = IAdd(mulRes370F,ilit37BB);
          int idx37BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BC);
          int ilit37BE#1 = 58;
          int addRes37BF#1 = IAdd(mulRes370F,ilit37BE);
          int idx37C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BF);
          int ilit37C1#1 = 59;
          int addRes37C2#1 = IAdd(mulRes370F,ilit37C1);
          int idx37C3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C2);
          int ilit37C4#1 = 60;
          int addRes37C5#1 = IAdd(mulRes370F,ilit37C4);
          int idx37C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C5);
          int ilit37C7#1 = 61;
          int addRes37C8#1 = IAdd(mulRes370F,ilit37C7);
          int idx37C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C8);
          int ilit37CA#1 = 62;
          int addRes37CB#1 = IAdd(mulRes370F,ilit37CA);
          int idx37CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CB);
          int ilit37CD#1 = 63;
          int addRes37CE#1 = IAdd(mulRes370F,ilit37CD);
          int idx37CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CE);
          int ilit37D0#1 = 64;
          int addRes37D1#1 = IAdd(mulRes370F,ilit37D0);
          int idx37D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D1);
          int ilit37D3#1 = 65;
          int addRes37D4#1 = IAdd(mulRes370F,ilit37D3);
          int idx37D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D4);
          int ilit37D6#1 = 66;
          int addRes37D7#1 = IAdd(mulRes370F,ilit37D6);
          int idx37D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D7);
          int ilit37D9#1 = 67;
          int addRes37DA#1 = IAdd(mulRes370F,ilit37D9);
          int idx37DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DA);
          int ilit37DC#1 = 68;
          int addRes37DD#1 = IAdd(mulRes370F,ilit37DC);
          int idx37DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DD);
          int ilit37DF#1 = 69;
          int addRes37E0#1 = IAdd(mulRes370F,ilit37DF);
          int idx37E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E0);
          int ilit37E2#1 = 70;
          int addRes37E3#1 = IAdd(mulRes370F,ilit37E2);
          int idx37E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E3);
          int ilit37E5#1 = 71;
          int addRes37E6#1 = IAdd(mulRes370F,ilit37E5);
          int idx37E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E6);
          int ilit37E8#1 = 72;
          int addRes37E9#1 = IAdd(mulRes370F,ilit37E8);
          int idx37EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E9);
          int ilit37EB#1 = 73;
          int addRes37EC#1 = IAdd(mulRes370F,ilit37EB);
          int idx37ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EC);
          int ilit37EE#1 = 74;
          int addRes37EF#1 = IAdd(mulRes370F,ilit37EE);
          int idx37F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EF);
          int ilit37F1#1 = 75;
          int addRes37F2#1 = IAdd(mulRes370F,ilit37F1);
          int idx37F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F2);
          int ilit37F4#1 = 76;
          int addRes37F5#1 = IAdd(mulRes370F,ilit37F4);
          int idx37F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F5);
          int ilit37F7#1 = 77;
          int addRes37F8#1 = IAdd(mulRes370F,ilit37F7);
          int idx37F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F8);
          int ilit37FA#1 = 78;
          int addRes37FB#1 = IAdd(mulRes370F,ilit37FA);
          int idx37FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FB);
          int ilit37FD#1 = 79;
          int addRes37FE#1 = IAdd(mulRes370F,ilit37FD);
          int idx37FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FE);
          int ilit3800#1 = 80;
          int addRes3801#1 = IAdd(mulRes370F,ilit3800);
          int idx3802#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3801);
          int ilit3803#1 = 81;
          int addRes3804#1 = IAdd(mulRes370F,ilit3803);
          int idx3805#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3804);
          int ilit3806#1 = 82;
          int addRes3807#1 = IAdd(mulRes370F,ilit3806);
          int idx3808#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3807);
          int ilit3809#1 = 83;
          int addRes380A#1 = IAdd(mulRes370F,ilit3809);
          int idx380B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes380A);
          int mulRes3911#1 = IMul(ilit3713,idx3712);
          int mulRes3913#1 = IMul(ilit3713,idx3715);
          int mulRes3916#1 = IMul(ilit3713,idx3718);
          int mulRes3919#1 = IMul(ilit3713,idx371B);
          int mulRes391C#1 = IMul(ilit3713,idx371E);
          int mulRes391F#1 = IMul(ilit3713,idx3721);
          int mulRes3922#1 = IMul(ilit3713,idx3724);
          int mulRes3925#1 = IMul(ilit3713,idx3727);
          int mulRes3928#1 = IMul(ilit3713,idx372A);
          int mulRes392B#1 = IMul(ilit3713,idx372D);
          int mulRes392E#1 = IMul(ilit3713,idx3730);
          int mulRes3931#1 = IMul(ilit3713,idx3733);
          int mulRes3934#1 = IMul(ilit3713,idx3736);
          int mulRes3937#1 = IMul(ilit3713,idx3739);
          int mulRes393A#1 = IMul(ilit3713,idx373C);
          int mulRes393D#1 = IMul(ilit3713,idx373F);
          int mulRes3940#1 = IMul(ilit3713,idx3742);
          int mulRes3943#1 = IMul(ilit3713,idx3745);
          int mulRes3946#1 = IMul(ilit3713,idx3748);
          int mulRes3949#1 = IMul(ilit3713,idx374B);
          int mulRes394C#1 = IMul(ilit3713,idx374E);
          int mulRes394F#1 = IMul(ilit3713,idx3751);
          int mulRes3952#1 = IMul(ilit3713,idx3754);
          int mulRes3955#1 = IMul(ilit3713,idx3757);
          int mulRes3958#1 = IMul(ilit3713,idx375A);
          int mulRes395B#1 = IMul(ilit3713,idx375D);
          int mulRes395E#1 = IMul(ilit3713,idx3760);
          int mulRes3961#1 = IMul(ilit3713,idx3763);
          int mulRes3964#1 = IMul(ilit3713,idx3766);
          int mulRes3967#1 = IMul(ilit3713,idx3769);
          int mulRes396A#1 = IMul(ilit3713,idx376C);
          int mulRes396D#1 = IMul(ilit3713,idx376F);
          int mulRes3970#1 = IMul(ilit3713,idx3772);
          int mulRes3973#1 = IMul(ilit3713,idx3775);
          int mulRes3976#1 = IMul(ilit3713,idx3778);
          int mulRes3979#1 = IMul(ilit3713,idx377B);
          int mulRes397C#1 = IMul(ilit3713,idx377E);
          int mulRes397F#1 = IMul(ilit3713,idx3781);
          int mulRes3982#1 = IMul(ilit3713,idx3784);
          int mulRes3985#1 = IMul(ilit3713,idx3787);
          int mulRes3988#1 = IMul(ilit3713,idx378A);
          int mulRes398B#1 = IMul(ilit3713,idx378D);
          int mulRes398E#1 = IMul(ilit3713,idx3790);
          int mulRes3991#1 = IMul(ilit3713,idx3793);
          int mulRes3994#1 = IMul(ilit3713,idx3796);
          int mulRes3997#1 = IMul(ilit3713,idx3799);
          int mulRes399A#1 = IMul(ilit3713,idx379C);
          int mulRes399D#1 = IMul(ilit3713,idx379F);
          int mulRes39A0#1 = IMul(ilit3713,idx37A2);
          int mulRes39A3#1 = IMul(ilit3713,idx37A5);
          int mulRes39A6#1 = IMul(ilit3713,idx37A8);
          int mulRes39A9#1 = IMul(ilit3713,idx37AB);
          int mulRes39AC#1 = IMul(ilit3713,idx37AE);
          int mulRes39AF#1 = IMul(ilit3713,idx37B1);
          int mulRes39B2#1 = IMul(ilit3713,idx37B4);
          int mulRes39B5#1 = IMul(ilit3713,idx37B7);
          int mulRes39B8#1 = IMul(ilit3713,idx37BA);
          int mulRes39BB#1 = IMul(ilit3713,idx37BD);
          int mulRes39BE#1 = IMul(ilit3713,idx37C0);
          int mulRes39C1#1 = IMul(ilit3713,idx37C3);
          int mulRes39C4#1 = IMul(ilit3713,idx37C6);
          int mulRes39C7#1 = IMul(ilit3713,idx37C9);
          int mulRes39CA#1 = IMul(ilit3713,idx37CC);
          int mulRes39CD#1 = IMul(ilit3713,idx37CF);
          int mulRes39D0#1 = IMul(ilit3713,idx37D2);
          int mulRes39D3#1 = IMul(ilit3713,idx37D5);
          int mulRes39D6#1 = IMul(ilit3713,idx37D8);
          int mulRes39D9#1 = IMul(ilit3713,idx37DB);
          int mulRes39DC#1 = IMul(ilit3713,idx37DE);
          int mulRes39DF#1 = IMul(ilit3713,idx37E1);
          int mulRes39E2#1 = IMul(ilit3713,idx37E4);
          int mulRes39E5#1 = IMul(ilit3713,idx37E7);
          int mulRes39E8#1 = IMul(ilit3713,idx37EA);
          int mulRes39EB#1 = IMul(ilit3713,idx37ED);
          int mulRes39EE#1 = IMul(ilit3713,idx37F0);
          int mulRes39F1#1 = IMul(ilit3713,idx37F3);
          int mulRes39F4#1 = IMul(ilit3713,idx37F6);
          int mulRes39F7#1 = IMul(ilit3713,idx37F9);
          int mulRes39FA#1 = IMul(ilit3713,idx37FC);
          int mulRes39FD#1 = IMul(ilit3713,idx37FF);
          int mulRes3A00#1 = IMul(ilit3713,idx3802);
          int mulRes3A03#1 = IMul(ilit3713,idx3805);
          int mulRes3A06#1 = IMul(ilit3713,idx3808);
          int mulRes3A09#1 = IMul(ilit3713,idx380B);
          real dof3A0A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3911);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3913);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3916);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3919);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391C);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391F);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3922);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3925);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3928);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392B);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392E);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3931);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3934);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3937);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393A);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393D);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3940);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3943);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3946);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3949);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394C);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394F);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3952);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3955);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3958);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395B);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395E);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3961);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3964);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3967);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396A);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396D);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3970);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3973);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3976);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3979);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397C);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397F);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3982);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3985);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3988);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398B);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398E);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3991);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3994);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3997);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399A);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399D);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A0);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A3);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A6);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A9);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AC);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AF);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B2);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B5);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B8);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BB);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BE);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C1);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C4);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C7);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CA);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CD);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D0);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D3);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D6);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D9);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DC);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DF);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E2);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E5);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E8);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EB);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EE);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F1);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F4);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F7);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FA);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FD);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A00);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A03);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A06);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A09);
          tensor[84] dofs3A5E#1 = <tensor[84]>[dof3A0A,dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D];
          real varAcc3BB2#27 = VIndex<3,0>(_t3708);
          real varAcc3BB3#12 = VIndex<3,1>(_t3708);
          real varAcc3BB4#12 = VIndex<3,2>(_t3708);
          real prod3BB6#7 = RMul(_t36A9,_t36A9);
          real prod3BB7#1 = RMul(_t36A9,prod3BB6);
          real basisEval3BB8#1 = RMul(_t36A9,prod3BB7);
          real prod3BBA#6 = RMul(_t36A9,varAcc3BB4);
          real prod3BBB#1 = RMul(_t36A9,prod3BBA);
          real basisEval3BBC#1 = RMul(_t36A9,prod3BBB);
          real prod3BBE#6 = RMul(varAcc3BB3,_t36A9);
          real prod3BBF#1 = RMul(_t36A9,prod3BBE);
          real basisEval3BC0#1 = RMul(_t36A9,prod3BBF);
          real prod3BC2#1 = RMul(varAcc3BB2,prod3BB6);
          real basisEval3BC3#1 = RMul(_t36A9,prod3BC2);
          real prod23BC4#6 = RMul(varAcc3BB4,varAcc3BB4);
          real prod3BC5#5 = RMul(_t36A9,prod23BC4);
          real prod3BC6#1 = RMul(_t36A9,prod3BC5);
          real basisEval3BC7#1 = RMul(_t36A9,prod3BC6);
          real prod3BC8#5 = RMul(varAcc3BB3,varAcc3BB4);
          real prod3BC9#1 = RMul(_t36A9,prod3BC8);
          real basisEval3BCA#1 = RMul(_t36A9,prod3BC9);
          real prod23BCB#6 = RMul(varAcc3BB3,varAcc3BB3);
          real prod3BCC#5 = RMul(prod23BCB,_t36A9);
          real prod3BCD#1 = RMul(_t36A9,prod3BCC);
          real basisEval3BCE#1 = RMul(_t36A9,prod3BCD);
          real prod3BCF#1 = RMul(varAcc3BB2,prod3BBA);
          real basisEval3BD0#1 = RMul(_t36A9,prod3BCF);
          real prod3BD1#1 = RMul(varAcc3BB2,prod3BBE);
          real basisEval3BD2#1 = RMul(_t36A9,prod3BD1);
          real prod23BD3#16 = RMul(varAcc3BB2,varAcc3BB2);
          real prod3BD4#1 = RMul(prod23BD3,prod3BB6);
          real basisEval3BD5#1 = RMul(_t36A9,prod3BD4);
          real prod33BD6#5 = RMul(prod23BC4,varAcc3BB4);
          real prod3BD7#4 = RMul(_t36A9,prod33BD6);
          real prod3BD8#1 = RMul(_t36A9,prod3BD7);
          real basisEval3BD9#1 = RMul(_t36A9,prod3BD8);
          real prod3BDA#4 = RMul(varAcc3BB3,prod23BC4);
          real prod3BDB#1 = RMul(_t36A9,prod3BDA);
          real basisEval3BDC#1 = RMul(_t36A9,prod3BDB);
          real prod3BDD#4 = RMul(prod23BCB,varAcc3BB4);
          real prod3BDE#1 = RMul(_t36A9,prod3BDD);
          real basisEval3BDF#1 = RMul(_t36A9,prod3BDE);
          real prod33BE0#5 = RMul(prod23BCB,varAcc3BB3);
          real prod3BE1#4 = RMul(prod33BE0,_t36A9);
          real prod3BE2#1 = RMul(_t36A9,prod3BE1);
          real basisEval3BE3#1 = RMul(_t36A9,prod3BE2);
          real prod3BE4#1 = RMul(varAcc3BB2,prod3BC5);
          real basisEval3BE5#1 = RMul(_t36A9,prod3BE4);
          real prod3BE6#1 = RMul(varAcc3BB2,prod3BC8);
          real basisEval3BE7#1 = RMul(_t36A9,prod3BE6);
          real prod3BE8#1 = RMul(varAcc3BB2,prod3BCC);
          real basisEval3BE9#1 = RMul(_t36A9,prod3BE8);
          real prod3BEA#1 = RMul(prod23BD3,prod3BBA);
          real basisEval3BEB#1 = RMul(_t36A9,prod3BEA);
          real prod3BEC#1 = RMul(prod23BD3,prod3BBE);
          real basisEval3BED#1 = RMul(_t36A9,prod3BEC);
          real prod33BEE#11 = RMul(prod23BD3,varAcc3BB2);
          real prod3BEF#1 = RMul(prod33BEE,prod3BB6);
          real basisEval3BF0#1 = RMul(_t36A9,prod3BEF);
          real prod43BF1#4 = RMul(prod33BD6,varAcc3BB4);
          real prod3BF2#3 = RMul(_t36A9,prod43BF1);
          real prod3BF3#1 = RMul(_t36A9,prod3BF2);
          real basisEval3BF4#1 = RMul(_t36A9,prod3BF3);
          real prod3BF5#3 = RMul(varAcc3BB3,prod33BD6);
          real prod3BF6#1 = RMul(_t36A9,prod3BF5);
          real basisEval3BF7#1 = RMul(_t36A9,prod3BF6);
          real prod3BF8#3 = RMul(prod23BCB,prod23BC4);
          real prod3BF9#1 = RMul(_t36A9,prod3BF8);
          real basisEval3BFA#1 = RMul(_t36A9,prod3BF9);
          real prod3BFB#3 = RMul(prod33BE0,varAcc3BB4);
          real prod3BFC#1 = RMul(_t36A9,prod3BFB);
          real basisEval3BFD#1 = RMul(_t36A9,prod3BFC);
          real prod43BFE#4 = RMul(prod33BE0,varAcc3BB3);
          real prod3BFF#3 = RMul(prod43BFE,_t36A9);
          real prod3C00#1 = RMul(_t36A9,prod3BFF);
          real basisEval3C01#1 = RMul(_t36A9,prod3C00);
          real prod3C02#1 = RMul(varAcc3BB2,prod3BD7);
          real basisEval3C03#1 = RMul(_t36A9,prod3C02);
          real prod3C04#1 = RMul(varAcc3BB2,prod3BDA);
          real basisEval3C05#1 = RMul(_t36A9,prod3C04);
          real prod3C06#1 = RMul(varAcc3BB2,prod3BDD);
          real basisEval3C07#1 = RMul(_t36A9,prod3C06);
          real prod3C08#1 = RMul(varAcc3BB2,prod3BE1);
          real basisEval3C09#1 = RMul(_t36A9,prod3C08);
          real prod3C0A#1 = RMul(prod23BD3,prod3BC5);
          real basisEval3C0B#1 = RMul(_t36A9,prod3C0A);
          real prod3C0C#1 = RMul(prod23BD3,prod3BC8);
          real basisEval3C0D#1 = RMul(_t36A9,prod3C0C);
          real prod3C0E#1 = RMul(prod23BD3,prod3BCC);
          real basisEval3C0F#1 = RMul(_t36A9,prod3C0E);
          real prod3C10#1 = RMul(prod33BEE,prod3BBA);
          real basisEval3C11#1 = RMul(_t36A9,prod3C10);
          real prod3C12#1 = RMul(prod33BEE,prod3BBE);
          real basisEval3C13#1 = RMul(_t36A9,prod3C12);
          real prod43C14#7 = RMul(prod33BEE,varAcc3BB2);
          real prod3C15#1 = RMul(prod43C14,prod3BB6);
          real basisEval3C16#1 = RMul(_t36A9,prod3C15);
          real prod53C17#3 = RMul(prod43BF1,varAcc3BB4);
          real prod3C18#2 = RMul(_t36A9,prod53C17);
          real prod3C19#1 = RMul(_t36A9,prod3C18);
          real basisEval3C1A#1 = RMul(_t36A9,prod3C19);
          real prod3C1B#2 = RMul(varAcc3BB3,prod43BF1);
          real prod3C1C#1 = RMul(_t36A9,prod3C1B);
          real basisEval3C1D#1 = RMul(_t36A9,prod3C1C);
          real prod3C1E#2 = RMul(prod23BCB,prod33BD6);
          real prod3C1F#1 = RMul(_t36A9,prod3C1E);
          real basisEval3C20#1 = RMul(_t36A9,prod3C1F);
          real prod3C21#2 = RMul(prod33BE0,prod23BC4);
          real prod3C22#1 = RMul(_t36A9,prod3C21);
          real basisEval3C23#1 = RMul(_t36A9,prod3C22);
          real prod3C24#2 = RMul(prod43BFE,varAcc3BB4);
          real prod3C25#1 = RMul(_t36A9,prod3C24);
          real basisEval3C26#1 = RMul(_t36A9,prod3C25);
          real prod53C27#3 = RMul(prod43BFE,varAcc3BB3);
          real prod3C28#2 = RMul(prod53C27,_t36A9);
          real prod3C29#1 = RMul(_t36A9,prod3C28);
          real basisEval3C2A#1 = RMul(_t36A9,prod3C29);
          real prod3C2B#1 = RMul(varAcc3BB2,prod3BF2);
          real basisEval3C2C#1 = RMul(_t36A9,prod3C2B);
          real prod3C2D#1 = RMul(varAcc3BB2,prod3BF5);
          real basisEval3C2E#1 = RMul(_t36A9,prod3C2D);
          real prod3C2F#1 = RMul(varAcc3BB2,prod3BF8);
          real basisEval3C30#1 = RMul(_t36A9,prod3C2F);
          real prod3C31#1 = RMul(varAcc3BB2,prod3BFB);
          real basisEval3C32#1 = RMul(_t36A9,prod3C31);
          real prod3C33#1 = RMul(varAcc3BB2,prod3BFF);
          real basisEval3C34#1 = RMul(_t36A9,prod3C33);
          real prod3C35#1 = RMul(prod23BD3,prod3BD7);
          real basisEval3C36#1 = RMul(_t36A9,prod3C35);
          real prod3C37#1 = RMul(prod23BD3,prod3BDA);
          real basisEval3C38#1 = RMul(_t36A9,prod3C37);
          real prod3C39#1 = RMul(prod23BD3,prod3BDD);
          real basisEval3C3A#1 = RMul(_t36A9,prod3C39);
          real prod3C3B#1 = RMul(prod23BD3,prod3BE1);
          real basisEval3C3C#1 = RMul(_t36A9,prod3C3B);
          real prod3C3D#1 = RMul(prod33BEE,prod3BC5);
          real basisEval3C3E#1 = RMul(_t36A9,prod3C3D);
          real prod3C3F#1 = RMul(prod33BEE,prod3BC8);
          real basisEval3C40#1 = RMul(_t36A9,prod3C3F);
          real prod3C41#1 = RMul(prod33BEE,prod3BCC);
          real basisEval3C42#1 = RMul(_t36A9,prod3C41);
          real prod3C43#1 = RMul(prod43C14,prod3BBA);
          real basisEval3C44#1 = RMul(_t36A9,prod3C43);
          real prod3C45#1 = RMul(prod43C14,prod3BBE);
          real basisEval3C46#1 = RMul(_t36A9,prod3C45);
          real prod53C47#4 = RMul(prod43C14,varAcc3BB2);
          real prod3C48#1 = RMul(prod53C47,prod3BB6);
          real basisEval3C49#1 = RMul(_t36A9,prod3C48);
          real prod63C4A#1 = RMul(prod53C17,varAcc3BB4);
          real prod3C4B#1 = RMul(_t36A9,prod63C4A);
          real prod3C4C#1 = RMul(_t36A9,prod3C4B);
          real basisEval3C4D#1 = RMul(_t36A9,prod3C4C);
          real prod3C4E#1 = RMul(varAcc3BB3,prod53C17);
          real prod3C4F#1 = RMul(_t36A9,prod3C4E);
          real basisEval3C50#1 = RMul(_t36A9,prod3C4F);
          real prod3C51#1 = RMul(prod23BCB,prod43BF1);
          real prod3C52#1 = RMul(_t36A9,prod3C51);
          real basisEval3C53#1 = RMul(_t36A9,prod3C52);
          real prod3C54#1 = RMul(prod33BE0,prod33BD6);
          real prod3C55#1 = RMul(_t36A9,prod3C54);
          real basisEval3C56#1 = RMul(_t36A9,prod3C55);
          real prod3C57#1 = RMul(prod43BFE,prod23BC4);
          real prod3C58#1 = RMul(_t36A9,prod3C57);
          real basisEval3C59#1 = RMul(_t36A9,prod3C58);
          real prod3C5A#1 = RMul(prod53C27,varAcc3BB4);
          real prod3C5B#1 = RMul(_t36A9,prod3C5A);
          real basisEval3C5C#1 = RMul(_t36A9,prod3C5B);
          real prod63C5D#1 = RMul(prod53C27,varAcc3BB3);
          real prod3C5E#1 = RMul(prod63C5D,_t36A9);
          real prod3C5F#1 = RMul(_t36A9,prod3C5E);
          real basisEval3C60#1 = RMul(_t36A9,prod3C5F);
          real prod3C61#1 = RMul(varAcc3BB2,prod3C18);
          real basisEval3C62#1 = RMul(_t36A9,prod3C61);
          real prod3C63#1 = RMul(varAcc3BB2,prod3C1B);
          real basisEval3C64#1 = RMul(_t36A9,prod3C63);
          real prod3C65#1 = RMul(varAcc3BB2,prod3C1E);
          real basisEval3C66#1 = RMul(_t36A9,prod3C65);
          real prod3C67#1 = RMul(varAcc3BB2,prod3C21);
          real basisEval3C68#1 = RMul(_t36A9,prod3C67);
          real prod3C69#1 = RMul(varAcc3BB2,prod3C24);
          real basisEval3C6A#1 = RMul(_t36A9,prod3C69);
          real prod3C6B#1 = RMul(varAcc3BB2,prod3C28);
          real basisEval3C6C#1 = RMul(_t36A9,prod3C6B);
          real prod3C6D#1 = RMul(prod23BD3,prod3BF2);
          real basisEval3C6E#1 = RMul(_t36A9,prod3C6D);
          real prod3C6F#1 = RMul(prod23BD3,prod3BF5);
          real basisEval3C70#1 = RMul(_t36A9,prod3C6F);
          real prod3C71#1 = RMul(prod23BD3,prod3BF8);
          real basisEval3C72#1 = RMul(_t36A9,prod3C71);
          real prod3C73#1 = RMul(prod23BD3,prod3BFB);
          real basisEval3C74#1 = RMul(_t36A9,prod3C73);
          real prod3C75#1 = RMul(prod23BD3,prod3BFF);
          real basisEval3C76#1 = RMul(_t36A9,prod3C75);
          real prod3C77#1 = RMul(prod33BEE,prod3BD7);
          real basisEval3C78#1 = RMul(_t36A9,prod3C77);
          real prod3C79#1 = RMul(prod33BEE,prod3BDA);
          real basisEval3C7A#1 = RMul(_t36A9,prod3C79);
          real prod3C7B#1 = RMul(prod33BEE,prod3BDD);
          real basisEval3C7C#1 = RMul(_t36A9,prod3C7B);
          real prod3C7D#1 = RMul(prod33BEE,prod3BE1);
          real basisEval3C7E#1 = RMul(_t36A9,prod3C7D);
          real prod3C7F#1 = RMul(prod43C14,prod3BC5);
          real basisEval3C80#1 = RMul(_t36A9,prod3C7F);
          real prod3C81#1 = RMul(prod43C14,prod3BC8);
          real basisEval3C82#1 = RMul(_t36A9,prod3C81);
          real prod3C83#1 = RMul(prod43C14,prod3BCC);
          real basisEval3C84#1 = RMul(_t36A9,prod3C83);
          real prod3C85#1 = RMul(prod53C47,prod3BBA);
          real basisEval3C86#1 = RMul(_t36A9,prod3C85);
          real prod3C87#1 = RMul(prod53C47,prod3BBE);
          real basisEval3C88#1 = RMul(_t36A9,prod3C87);
          real prod63C89#1 = RMul(prod53C47,varAcc3BB2);
          real prod3C8A#1 = RMul(prod63C89,prod3BB6);
          real basisEval3C8B#1 = RMul(_t36A9,prod3C8A);
          tensor[84] intermediateCons3C8C#1 = <tensor[84]>[basisEval3BB8,basisEval3BBC,basisEval3BC0,basisEval3BC3,basisEval3BC7,basisEval3BCA,basisEval3BCE,basisEval3BD0,basisEval3BD2,basisEval3BD5,basisEval3BD9,basisEval3BDC,basisEval3BDF,basisEval3BE3,basisEval3BE5,basisEval3BE7,basisEval3BE9,basisEval3BEB,basisEval3BED,basisEval3BF0,basisEval3BF4,basisEval3BF7,basisEval3BFA,basisEval3BFD,basisEval3C01,basisEval3C03,basisEval3C05,basisEval3C07,basisEval3C09,basisEval3C0B,basisEval3C0D,basisEval3C0F,basisEval3C11,basisEval3C13,basisEval3C16,basisEval3C1A,basisEval3C1D,basisEval3C20,basisEval3C23,basisEval3C26,basisEval3C2A,basisEval3C2C,basisEval3C2E,basisEval3C30,basisEval3C32,basisEval3C34,basisEval3C36,basisEval3C38,basisEval3C3A,basisEval3C3C,basisEval3C3E,basisEval3C40,basisEval3C42,basisEval3C44,basisEval3C46,basisEval3C49,basisEval3C4D,basisEval3C50,basisEval3C53,basisEval3C56,basisEval3C59,basisEval3C5C,basisEval3C60,basisEval3C62,basisEval3C64,basisEval3C66,basisEval3C68,basisEval3C6A,basisEval3C6C,basisEval3C6E,basisEval3C70,basisEval3C72,basisEval3C74,basisEval3C76,basisEval3C78,basisEval3C7A,basisEval3C7C,basisEval3C7E,basisEval3C80,basisEval3C82,basisEval3C84,basisEval3C86,basisEval3C88,basisEval3C8B];
          real probe_l_83D69#1 = VDot<84>(dofs3A5E,intermediateCons3C8C);
          real op1_e3_l_93D6C#1 = RSub(probe_l_83D69,cmin36FF);
          real op1_e3_l_103D6F#1 = RSub(cmax3701,cmin36FF);
          real op1_e3_l_113D72#1 = RDiv(op1_e3_l_93D6C,op1_e3_l_103D6F);
          real op1_e3_l_123D75#1 = RSub(_t36A9,_t36A7);
          real op1_e3_l_133D78#1 = RMul(op1_e3_l_113D72,op1_e3_l_123D75);
          real _t3D7B#1 = RAdd(_t36A7,op1_e3_l_133D78);
          real Mtransform3D7E#1 = Transform<IMAGE1D<double[3]>>(cmap2469);
          real MxPos3D80#1 = RMul(Mtransform3D7E,_t3D7B);
          real Ttranslate3D83#1 = Translate<IMAGE1D<double[3]>>(cmap2469);
          real imgPos3D85#2 = RAdd(MxPos3D80,Ttranslate3D83);
          real nd3D88#2 = Floor<1>(imgPos3D85);
          real f3D8A#2 = RSub(imgPos3D85,nd3D88);
          int n3D8D#5 = RealToInt<1>(nd3D88);
          bool isInside3D91#1 = IndexInside<IMAGE1D<double[3]>,2>(n3D8D,cmap2469);
          if isInside3D91 then goto ASSIGN45D6 else goto ASSIGN45CE
        ASSIGN45D6:  preds = [COND3D93]
          int offp3D98#3 = IMul(ilit3719,n3D8D);
          real v0_3D99#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D98);
          int addRes3D9B#1 = IAdd(n3D8D,ilit3713);
          int offp3D9C#3 = IMul(ilit3719,addRes3D9B);
          real v1_3D9D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9C);
          tensor[2] v_3D9E#1 = <tensor[2]>[v0_3D99,v1_3D9D];
          int offp3D9F#1 = IAdd(offp3D98,ilit3713);
          real v0_3DA0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9F);
          int offp3DA1#1 = IAdd(offp3D9C,ilit3713);
          real v1_3DA2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA1);
          tensor[2] v_3DA3#1 = <tensor[2]>[v0_3DA0,v1_3DA2];
          int offp3DA5#1 = IAdd(offp3D98,ilit3716);
          real v0_3DA6#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA5);
          int offp3DA7#1 = IAdd(offp3D9C,ilit3716);
          real v1_3DA8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA7);
          tensor[2] v_3DA9#1 = <tensor[2]>[v0_3DA6,v1_3DA8];
          tensor[3,2] voxels3DAA#1 = <tensor[3,2]>[v_3D9E,v_3DA3,v_3DA9];
          goto JOIN3DC4
        JOIN3DC4:  preds = [ASSIGN3DC0,ASSIGN3E9D]
          tensor[3,2] ldvox3DC2#3 = phi(voxels3DAA,voxels3E85)
          real idx3DC7#1 = RSub(f3D8A,_t36A9);
          tensor[2] kernX_3DC5#1 = <tensor[2]>[f3D8A,idx3DC7];
          tensor[2] a03DCC#1 = <tensor[2]>[_t36A9,_t36A9];
          real _f3DCE#1 = -0.1e1;
          tensor[2] a13DCD#1 = <tensor[2]>[_f3DCE,_t36A9];
          tensor[2] prod13DD2#1 = VMul<2>(kernX_3DC5,a13DCD);
          tensor[2] kevalX_d0_3DCB#3 = VAdd<2>(a03DCC,prod13DD2);
          tensor[2] projIx3DDC#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC2);
          real vdot3DDD#1 = VDot<2>(projIx3DDC,kevalX_d0_3DCB);
          tensor[2] projIx3DDE#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC2);
          real vdot3DDF#1 = VDot<2>(projIx3DDE,kevalX_d0_3DCB);
          tensor[2] projIx3DE0#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC2);
          real vdot3DE1#1 = VDot<2>(projIx3DE0,kevalX_d0_3DCB);
          tensor[3] mcol3DDB#1 = <tensor[3]>[vdot3DDD,vdot3DDF,vdot3DE1];
          goto JOIN3DEB
        JOIN3DEB:  preds = [ASSIGN3DE9,COND3707]
          tensor[3] mcol3DEA#3 = phi(mcol3DDB,mcol3703)
          real op1_e3_l_213DEC#1 = RDiv(_t36A9,op1_e3_l_836B0);
          tensor[3] op1_e3_l_223DF1#1 = VScale<3>(op1_e3_l_213DEC,step36A4);
          tensor[3] op1_e3_l_233DF4#1 = VNeg<3>(op1_e3_l_223DF1);
          real op1_e3_l_243DF7#2 = VDot<3>(op1_e3_l_233DF4,litwsp2493);
          real op1_e3_l_253DFA#1 = RMul(op1_e3_l_243DF7,op1_e3_l_243DF7);
          real op1_e3_l_263DFD#1 = RMul(phKd24A1,op1_e3_l_253DFA);
          real op1_e3_l_283E00#1 = RSub(rayN24AB,camNearVsp248F);
          real op1_e3_l_293E03#1 = RSub(camFarVsp2491,camNearVsp248F);
          real op1_e3_l_303E06#1 = RDiv(op1_e3_l_283E00,op1_e3_l_293E03);
          tensor[3] op1_e3_l_313E09#1 = VSub<3>(mcFar2487,mcNear2485);
          tensor[3] op1_e3_l_323E0C#1 = VScale<3>(op1_e3_l_303E06,op1_e3_l_313E09);
          real op1_e3_l_333E0F#3 = RAdd(phKa249F,op1_e3_l_263DFD);
          tensor[3] op1_e3_l_343E12#3 = VAdd<3>(mcNear2485,op1_e3_l_323E0C);
          real r3E16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E12);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(mcol3DEA);
          real r3E18#1 = RMul(op1_e3_l_333E0F,r3E16);
          real r3E19#1 = RMul(r3E18,r3E17);
          real r3E1A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E12);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(mcol3DEA);
          real r3E1C#1 = RMul(op1_e3_l_333E0F,r3E1A);
          real r3E1D#1 = RMul(r3E1C,r3E1B);
          real r3E1E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E12);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(mcol3DEA);
          real r3E20#1 = RMul(op1_e3_l_333E0F,r3E1E);
          real r3E21#1 = RMul(r3E20,r3E1F);
          tensor[3] op1_e3_l_353E15#1 = <tensor[3]>[r3E19,r3E1D,r3E21];
          real r3E32#1 = RMul(phKs24A3,scomp36FD);
          real r3E33#3 = RMul(r3E32,_t36A9);
          tensor[3] op1_e3_l_363E30#1 = <tensor[3]>[r3E33,r3E33,r3E33];
          real op1_e3_l_373E41#2 = RSub(_t36A9,_t36D4);
          tensor[3] op1_e3_l_383E44#3 = VAdd<3>(op1_e3_l_353E15,op1_e3_l_363E30);
          real r3E48#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E44);
          real r3E49#3 = RMul(transp24A9,op1_e3_l_373E41);
          real r3E4A#1 = RMul(r3E49,r3E48);
          real r3E4B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E44);
          real r3E4C#1 = RMul(r3E49,r3E4B);
          real r3E4D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E44);
          real r3E4E#1 = RMul(r3E49,r3E4D);
          tensor[3] op1_e3_l_393E47#1 = <tensor[3]>[r3E4A,r3E4C,r3E4E];
          tensor[3] rgb3E58#2 = VAdd<3>(rgb24A7,op1_e3_l_393E47);
          real op1_e3_l_53E5B#1 = RSub(_t36A9,op1_e3_l_373E41);
          real transp3E5E#2 = RMul(transp24A9,op1_e3_l_53E5B);
          bool _t3E61#1 = LT<real>(transp3E5E,transp02479);
          if _t3E61 then goto SAVE3E64 else goto JOIN3E69
        SAVE3E64:  preds = [COND3E63]
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = _t36A7;
          stabilize
          goto JOIN3E69
        JOIN3E69:  preds = [*STABILIZE3E67,COND3E63]
          real transp3E68#1 = phi(transp3E5E)
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = transp3E68;
          active
        ASSIGN45CE:  preds = [COND3D93]
          int ix3E70#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,n3D8D);
          int offp3E72#3 = IMul(ilit3719,ix3E70);
          real v0_3E73#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E72);
          int addRes3E75#1 = IAdd(n3D8D,ilit3713);
          int ix3E76#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,addRes3E75);
          int offp3E77#3 = IMul(ilit3719,ix3E76);
          real v1_3E78#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E77);
          tensor[2] v_3E79#1 = <tensor[2]>[v0_3E73,v1_3E78];
          int offp3E7A#1 = IAdd(offp3E72,ilit3713);
          real v0_3E7B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7A);
          int offp3E7C#1 = IAdd(offp3E77,ilit3713);
          real v1_3E7D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7C);
          tensor[2] v_3E7E#1 = <tensor[2]>[v0_3E7B,v1_3E7D];
          int offp3E80#1 = IAdd(offp3E72,ilit3716);
          real v0_3E81#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E80);
          int offp3E82#1 = IAdd(offp3E77,ilit3716);
          real v1_3E83#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E82);
          tensor[2] v_3E84#1 = <tensor[2]>[v0_3E81,v1_3E83];
          tensor[3,2] voxels3E85#1 = <tensor[3,2]>[v_3E79,v_3E7E,v_3E84];
          goto JOIN3DC4
        ASSIGN3EA0:  preds = [COND2D6D]
          real _t3E9F#3 = -0.1e1;
          real _t3EA1#3 = -0.2e1;
          real _t3EA3#3 = -0.3e1;
          real _t3EA9#9 = 0.e0;
          real r3EB8#5 = TensorIndex<tensor[3,3],[0,0]>(rot248D);
          real r3EBA#2 = RMul(r3EB8,_t3E9F);
          real r3EBB#5 = TensorIndex<tensor[3,3],[1,0]>(rot248D);
          real r3EBD#2 = RMul(r3EBB,_t3EA9);
          real r3EBE#5 = TensorIndex<tensor[3,3],[2,0]>(rot248D);
          real r3EC0#2 = RMul(r3EBE,_t3EA9);
          real r3EC1#1 = RAdd(r3EBA,r3EBD);
          real r3EC2#3 = RAdd(r3EC1,r3EC0);
          real r3EC4#2 = RMul(r3EB8,_t3EA9);
          real r3EC6#2 = RMul(r3EBB,_t3EA1);
          real r3EC9#1 = RAdd(r3EC4,r3EC6);
          real r3ECA#3 = RAdd(r3EC9,r3EC0);
          real r3ED0#2 = RMul(r3EBE,_t3EA3);
          real r3ED1#1 = RAdd(r3EC4,r3EBD);
          real r3ED2#3 = RAdd(r3ED1,r3ED0);
          real r3ED4#5 = TensorIndex<tensor[3,3],[0,1]>(rot248D);
          real r3ED5#2 = RMul(r3ED4,_t3E9F);
          real r3ED6#5 = TensorIndex<tensor[3,3],[1,1]>(rot248D);
          real r3ED7#2 = RMul(r3ED6,_t3EA9);
          real r3ED8#5 = TensorIndex<tensor[3,3],[2,1]>(rot248D);
          real r3ED9#2 = RMul(r3ED8,_t3EA9);
          real r3EDA#1 = RAdd(r3ED5,r3ED7);
          real r3EDB#3 = RAdd(r3EDA,r3ED9);
          real r3EDC#2 = RMul(r3ED4,_t3EA9);
          real r3EDD#2 = RMul(r3ED6,_t3EA1);
          real r3EDF#1 = RAdd(r3EDC,r3EDD);
          real r3EE0#3 = RAdd(r3EDF,r3ED9);
          real r3EE3#2 = RMul(r3ED8,_t3EA3);
          real r3EE4#1 = RAdd(r3EDC,r3ED7);
          real r3EE5#3 = RAdd(r3EE4,r3EE3);
          real r3EE7#5 = TensorIndex<tensor[3,3],[0,2]>(rot248D);
          real r3EE8#2 = RMul(r3EE7,_t3E9F);
          real r3EE9#5 = TensorIndex<tensor[3,3],[1,2]>(rot248D);
          real r3EEA#2 = RMul(r3EE9,_t3EA9);
          real r3EEB#5 = TensorIndex<tensor[3,3],[2,2]>(rot248D);
          real r3EEC#2 = RMul(r3EEB,_t3EA9);
          real r3EED#1 = RAdd(r3EE8,r3EEA);
          real r3EEE#3 = RAdd(r3EED,r3EEC);
          real r3EEF#2 = RMul(r3EE7,_t3EA9);
          real r3EF0#2 = RMul(r3EE9,_t3EA1);
          real r3EF2#1 = RAdd(r3EEF,r3EF0);
          real r3EF3#3 = RAdd(r3EF2,r3EEC);
          real r3EF6#2 = RMul(r3EEB,_t3EA3);
          real r3EF7#1 = RAdd(r3EEF,r3EEA);
          real r3EF8#3 = RAdd(r3EF7,r3EF6);
          real r3F41#1 = RMul(r3EC2,r3EB8);
          real r3F44#1 = RMul(r3ECA,r3EBB);
          real r3F47#1 = RMul(r3ED2,r3EBE);
          real r3F48#1 = RAdd(r3F41,r3F44);
          real r3F49#1 = RAdd(r3F48,r3F47);
          real r3F4B#1 = RMul(r3EC2,r3ED4);
          real r3F4D#1 = RMul(r3ECA,r3ED6);
          real r3F4F#1 = RMul(r3ED2,r3ED8);
          real r3F50#1 = RAdd(r3F4B,r3F4D);
          real r3F51#1 = RAdd(r3F50,r3F4F);
          real r3F53#1 = RMul(r3EC2,r3EE7);
          real r3F55#1 = RMul(r3ECA,r3EE9);
          real r3F57#1 = RMul(r3ED2,r3EEB);
          real r3F58#1 = RAdd(r3F53,r3F55);
          real r3F59#1 = RAdd(r3F58,r3F57);
          tensor[3] tensor3F5A#1 = <tensor[3]>[r3F49,r3F51,r3F59];
          real r3F5C#1 = RMul(r3EDB,r3EB8);
          real r3F5E#1 = RMul(r3EE0,r3EBB);
          real r3F60#1 = RMul(r3EE5,r3EBE);
          real r3F61#1 = RAdd(r3F5C,r3F5E);
          real r3F62#1 = RAdd(r3F61,r3F60);
          real r3F63#1 = RMul(r3EDB,r3ED4);
          real r3F64#1 = RMul(r3EE0,r3ED6);
          real r3F65#1 = RMul(r3EE5,r3ED8);
          real r3F66#1 = RAdd(r3F63,r3F64);
          real r3F67#1 = RAdd(r3F66,r3F65);
          real r3F68#1 = RMul(r3EDB,r3EE7);
          real r3F69#1 = RMul(r3EE0,r3EE9);
          real r3F6A#1 = RMul(r3EE5,r3EEB);
          real r3F6B#1 = RAdd(r3F68,r3F69);
          real r3F6C#1 = RAdd(r3F6B,r3F6A);
          tensor[3] tensor3F6D#1 = <tensor[3]>[r3F62,r3F67,r3F6C];
          real r3F6F#1 = RMul(r3EEE,r3EB8);
          real r3F71#1 = RMul(r3EF3,r3EBB);
          real r3F73#1 = RMul(r3EF8,r3EBE);
          real r3F74#1 = RAdd(r3F6F,r3F71);
          real r3F75#1 = RAdd(r3F74,r3F73);
          real r3F76#1 = RMul(r3EEE,r3ED4);
          real r3F77#1 = RMul(r3EF3,r3ED6);
          real r3F78#1 = RMul(r3EF8,r3ED8);
          real r3F79#1 = RAdd(r3F76,r3F77);
          real r3F7A#1 = RAdd(r3F79,r3F78);
          real r3F7B#1 = RMul(r3EEE,r3EE7);
          real r3F7C#1 = RMul(r3EF3,r3EE9);
          real r3F7D#1 = RMul(r3EF8,r3EEB);
          real r3F7E#1 = RAdd(r3F7B,r3F7C);
          real r3F7F#1 = RAdd(r3F7E,r3F7D);
          tensor[3] tensor3F80#1 = <tensor[3]>[r3F75,r3F7A,r3F7F];
          tensor[3,3] H3F3E#1 = <tensor[3,3]>[tensor3F5A,tensor3F6D,tensor3F80];
          (real[3] evals3FC5#2,tensor[3][3] E3FC6#2) = EigenVecs3x3(H3F3E);
          int _t3FC8#2 = 2;
          tensor[3] _t3FCA#6 = Subscript<tensor[3][3]>(E3FC6,_t3FC8);
          real _t3FCC#9 = Subscript<real[3]>(evals3FC5,_t3FC8);
          int _t3FCE#2 = 1;
          tensor[3] _t3FD0#6 = Subscript<tensor[3][3]>(E3FC6,_t3FCE);
          real _t3FD2#9 = Subscript<real[3]>(evals3FC5,_t3FCE);
          real r3FD5#1 = TensorIndex<tensor[3],[0]>(_t3FCA);
          tensor[3] binopV3FD6#3 = VScale<3>(r3FD5,_t3FCA);
          real r3FD7#1 = TensorIndex<tensor[3],[1]>(_t3FCA);
          tensor[3] binopV3FD8#3 = VScale<3>(r3FD7,_t3FCA);
          real r3FD9#1 = TensorIndex<tensor[3],[2]>(_t3FCA);
          tensor[3] binopV3FDA#3 = VScale<3>(r3FD9,_t3FCA);
          real r3FE4#1 = TensorIndex<tensor[3],[0]>(_t3FD0);
          tensor[3] binopV3FE5#3 = VScale<3>(r3FE4,_t3FD0);
          real r3FE6#1 = TensorIndex<tensor[3],[1]>(_t3FD0);
          tensor[3] binopV3FE7#3 = VScale<3>(r3FE6,_t3FD0);
          real r3FE8#1 = TensorIndex<tensor[3],[2]>(_t3FD0);
          tensor[3] binopV3FE9#3 = VScale<3>(r3FE8,_t3FD0);
          real r3FF3#1 = VIndex<3,0>(binopV3FD6);
          real r3FF4#1 = RDiv(r3FF3,_t3FCC);
          real r3FF5#1 = VIndex<3,1>(binopV3FD6);
          real r3FF6#1 = RDiv(r3FF5,_t3FCC);
          real r3FF7#1 = VIndex<3,2>(binopV3FD6);
          real r3FF8#1 = RDiv(r3FF7,_t3FCC);
          tensor[3] tensor3FF9#1 = <tensor[3]>[r3FF4,r3FF6,r3FF8];
          real r3FFA#1 = VIndex<3,0>(binopV3FD8);
          real r3FFB#1 = RDiv(r3FFA,_t3FCC);
          real r3FFC#1 = VIndex<3,1>(binopV3FD8);
          real r3FFD#1 = RDiv(r3FFC,_t3FCC);
          real r3FFE#1 = VIndex<3,2>(binopV3FD8);
          real r3FFF#1 = RDiv(r3FFE,_t3FCC);
          tensor[3] tensor4000#1 = <tensor[3]>[r3FFB,r3FFD,r3FFF];
          real r4001#1 = VIndex<3,0>(binopV3FDA);
          real r4002#1 = RDiv(r4001,_t3FCC);
          real r4003#1 = VIndex<3,1>(binopV3FDA);
          real r4004#1 = RDiv(r4003,_t3FCC);
          real r4005#1 = VIndex<3,2>(binopV3FDA);
          real r4006#1 = RDiv(r4005,_t3FCC);
          tensor[3] tensor4007#1 = <tensor[3]>[r4002,r4004,r4006];
          real r4020#1 = VIndex<3,0>(binopV3FE5);
          real r4021#1 = RDiv(r4020,_t3FD2);
          real r4022#1 = VIndex<3,1>(binopV3FE5);
          real r4023#1 = RDiv(r4022,_t3FD2);
          real r4024#1 = VIndex<3,2>(binopV3FE5);
          real r4025#1 = RDiv(r4024,_t3FD2);
          tensor[3] tensor4026#1 = <tensor[3]>[r4021,r4023,r4025];
          real r4027#1 = VIndex<3,0>(binopV3FE7);
          real r4028#1 = RDiv(r4027,_t3FD2);
          real r4029#1 = VIndex<3,1>(binopV3FE7);
          real r402A#1 = RDiv(r4029,_t3FD2);
          real r402B#1 = VIndex<3,2>(binopV3FE7);
          real r402C#1 = RDiv(r402B,_t3FD2);
          tensor[3] tensor402D#1 = <tensor[3]>[r4028,r402A,r402C];
          real r402E#1 = VIndex<3,0>(binopV3FE9);
          real r402F#1 = RDiv(r402E,_t3FD2);
          real r4030#1 = VIndex<3,1>(binopV3FE9);
          real r4031#1 = RDiv(r4030,_t3FD2);
          real r4032#1 = VIndex<3,2>(binopV3FE9);
          real r4033#1 = RDiv(r4032,_t3FD2);
          tensor[3] tensor4034#1 = <tensor[3]>[r402F,r4031,r4033];
          tensor[3] v404F#1 = VAdd<3>(tensor3FF9,tensor4026);
          tensor[3] v4052#1 = VAdd<3>(tensor4000,tensor402D);
          tensor[3] v4055#1 = VAdd<3>(tensor4007,tensor4034);
          tensor[3] projParam4062#1 = ProjectLast<tensor[3,3],[0]>(rot248D);
          real vdot4063#3 = VDot<3>(projParam4062,pos24B7);
          tensor[3] projParam4064#1 = ProjectLast<tensor[3,3],[1]>(rot248D);
          real vdot4065#3 = VDot<3>(projParam4064,pos24B7);
          tensor[3] projParam4066#1 = ProjectLast<tensor[3,3],[2]>(rot248D);
          real vdot4067#3 = VDot<3>(projParam4066,pos24B7);
          tensor[3] negV4072#1 = VNeg<3>(v404F);
          tensor[3] negV4074#1 = VNeg<3>(v4052);
          tensor[3] negV4076#1 = VNeg<3>(v4055);
          real r4084#1 = RMul(r3EBA,vdot4063);
          real r4089#1 = RMul(r3EC6,vdot4065);
          real r408E#1 = RMul(r3ED0,vdot4067);
          real r408F#1 = RAdd(r4084,r4089);
          real r4090#1 = RAdd(r408F,r408E);
          real r4093#1 = RMul(r3ED5,vdot4063);
          real r4096#1 = RMul(r3EDD,vdot4065);
          real r4099#1 = RMul(r3EE3,vdot4067);
          real r409A#1 = RAdd(r4093,r4096);
          real r409B#1 = RAdd(r409A,r4099);
          real r409E#1 = RMul(r3EE8,vdot4063);
          real r40A1#1 = RMul(r3EF0,vdot4065);
          real r40A4#1 = RMul(r3EF6,vdot4067);
          real r40A5#1 = RAdd(r409E,r40A1);
          real r40A6#1 = RAdd(r40A5,r40A4);
          tensor[3] op1_e3_l_23407F#3 = <tensor[3]>[r4090,r409B,r40A6];
          real vdot40D1#1 = VDot<3>(negV4072,op1_e3_l_23407F);
          real vdot40D3#1 = VDot<3>(negV4074,op1_e3_l_23407F);
          real vdot40D5#1 = VDot<3>(negV4076,op1_e3_l_23407F);
          tensor[3] _t36A5#1 = <tensor[3]>[vdot40D1,vdot40D3,vdot40D5];
          goto JOIN36A6
        ASSIGN40DE:  preds = [COND2D59]
          bool _t2D5D#1 = false;
          goto JOIN2D5E
        ASSIGN40DF:  preds = [COND2D54]
          bool _t2D60#1 = false;
          goto JOIN2D61
        ASSIGN40E0:  preds = [COND24C0]
          bool _t2D63#1 = false;
          goto JOIN2D64
    end update
    method stabilize
        ENTRY40E1:  preds = []
          tensor[4] rgba40E2#1 = self.rgba;
          tensor[3] rgb40E4#3 = self.rgb;
          real transp40E6#2 = self.transp;
          real _t40E8#2 = 0.1e1;
          bool _t40EA#1 = LT<real>(transp40E6,_t40E8);
          if _t40EA then goto ASSIGN40EF else goto JOIN4102
        ASSIGN40EF:  preds = [COND40EC]
          real aa40ED#4 = RSub(_t40E8,transp40E6);
          real _t40F0#1 = VIndex<3,0>(rgb40E4);
          real _t40F2#1 = RDiv(_t40F0,aa40ED);
          real _t40F5#1 = VIndex<3,1>(rgb40E4);
          real _t40F7#1 = RDiv(_t40F5,aa40ED);
          real _t40FA#1 = VIndex<3,2>(rgb40E4);
          real _t40FC#1 = RDiv(_t40FA,aa40ED);
          tensor[4] rgba40FF#1 = <tensor[4]>[_t40F2,_t40F7,_t40FC,aa40ED];
          goto JOIN4102
        JOIN4102:  preds = [ASSIGN4100,COND40EC]
          tensor[4] rgba4101#1 = phi(rgba40FF,rgba40E2)
          self.rgba = rgba4101;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY4105:  preds = []
      int iresU4106#1 = globals.iresU217E;
      int iresV4108#1 = globals.iresV217F;
      int _t410A#2 = 0;
      int _t410C#2 = 1;
      int _t410E#1 = ISub(iresV4108,_t410C);
      int[] _t4110#1 = Range(_t410A,_t410E);
    FOREACH4113:  preds = [ASSIGN4111,NEXT411C]
      foreach (vi4112 in _t4110) on exit goto RETURN411D
      int _t4114#1 = ISub(iresU4106,_t410C);
      int[] _t4116#1 = Range(_t410A,_t4114);
    FOREACH4119:  preds = [ASSIGN4117,NEXT411B]
      foreach (ui4118 in _t4116) on exit goto NEXT411C
      new ray(ui4118,vi4112);
      goto FOREACH4119
    NEXT411C:  preds = [FOREACH4119]
      goto FOREACH4113
    RETURN411D:  preds = [FOREACH4113]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2172 (block) = <no-default>
  input 0space0509_intermedateGlobal2173 (space) = <no-default>
  input 0U050B_intermedateGlobal2174 (U) = <no-default>
  input cellChoice2175 (cellChoice) = <no-default>
  input cmap2176 (cmap) = image("cmap.nrrd")
  input camEye2177 (camEye) = <default>
  input camAt2178 (camAt) = <default>
  input camUp2179 (camUp) = <default>
  input camNear217A (camNear) = <default>
  input camFar217B (camFar) = <default>
  input camFOV217C (camFOV) = <default>
  input camOrtho217D (camOrtho) = <default>
  input iresU217E (iresU) = <default>
  input iresV217F (iresV) = <default>
  input rayStep2180 (rayStep) = <default>
  input refStep2181 (refStep) = <default>
  input transp02182 (transp0) = <default>
  input thick2183 (thick) = <default>
  input fStrTh2184 (fStrTh) = <default>
  input fMaskTh2185 (fMaskTh) = <default>
  input fBias2186 (fBias) = <default>
  input maxAlpha2187 (maxAlpha) = <default>
  input light2188 (light) = <default>
  input phong2189 (phong) = <default>
  input mcNear218A (mcNear) = <default>
  input mcFar218B (mcFar) = <default>
  input litdir218C (litdir) = <default>
  input cminmax218D (cminmax) = <default>
  input analytical218E (analytical) = <default>
  input umm218F (umm) = image("data.nrrd")
  input rot2190 (rot) = <default>
  global tensor[3] camN2191
  global tensor[3] camU2192
  global tensor[3] camV2193
  global real camDist2194
  global real camVmax2195
  global real camUmax2196
  global real camNearVsp2197
  global real camFarVsp2198
  global tensor[3] litwsp2199
  global int _t219A
  global femData:Space _tX219B
  global femData:FemFunc _tXX219C
## functions
## input initialization
  ENTRY219F:  preds = []
    real _t21A0#17 = 0.e0;
    real _t21A2#1 = -0.2e1;
    tensor[3] camEye21A4#1 = <tensor[3]>[_t21A0,_t21A2,_t21A0];
    globals.camEye2177 = camEye21A4;
    tensor[3] camAt21A7#1 = <tensor[3]>[_t21A0,_t21A0,_t21A0];
    globals.camAt2178 = camAt21A7;
    real _t21AA#7 = 0.1e1;
    tensor[3] camUp21AC#2 = <tensor[3]>[_t21A0,_t21A0,_t21AA];
    globals.camUp2179 = camUp21AC;
    real camNear21AF#1 = -0.4e1;
    globals.camNear217A = camNear21AF;
    real camFar21B2#1 = 0.4e1;
    globals.camFar217B = camFar21B2;
    real camFOV21B5#1 = 0.1e2;
    globals.camFOV217C = camFOV21B5;
    bool camOrtho21B8#2 = false;
    globals.camOrtho217D = camOrtho21B8;
    int iresU21BB#2 = 100;
    globals.iresU217E = iresU21BB;
    globals.iresV217F = iresU21BB;
    real rayStep21BF#2 = 0.1e-3;
    globals.rayStep2180 = rayStep21BF;
    globals.refStep2181 = rayStep21BF;
    real transp021C3#1 = 0.5e-2;
    globals.transp02182 = transp021C3;
    real thick21C6#1 = 0.1e-1;
    globals.thick2183 = thick21C6;
    globals.fStrTh2184 = _t21A0;
    globals.fMaskTh2185 = _t21A0;
    real fBias21CB#2 = 0.1e0;
    globals.fBias2186 = fBias21CB;
    globals.maxAlpha2187 = _t21AA;
    globals.light2188 = camOrtho21B8;
    real _t21D0#1 = 0.7e0;
    real _t21D2#1 = 0.2e0;
    real _t21D4#1 = 0.1e3;
    tensor[4] phong21D6#1 = <tensor[4]>[fBias21CB,_t21D0,_t21D2,_t21D4];
    globals.phong2189 = phong21D6;
    tensor[3] mcNear21D9#2 = <tensor[3]>[_t21AA,_t21AA,_t21AA];
    globals.mcNear218A = mcNear21D9;
    globals.mcFar218B = mcNear21D9;
    real _t21DD#1 = -0.1e1;
    tensor[3] litdir21DF#1 = <tensor[3]>[_t21A0,_t21DD,_t21A0];
    globals.litdir218C = litdir21DF;
    tensor[2] cminmax21E2#1 = <tensor[2]>[_t21A0,_t21A0];
    globals.cminmax218D = cminmax21E2;
    bool analytical21E5#1 = true;
    globals.analytical218E = analytical21E5;
    tensor[3] _t21E8#1 = <tensor[3]>[_t21AA,_t21A0,_t21A0];
    tensor[3] _t21EA#1 = <tensor[3]>[_t21A0,_t21AA,_t21A0];
    tensor[3,3] rot21EC#1 = <tensor[3,3]>[_t21E8,_t21EA,camUp21AC];
    globals.rot2190 = rot21EC;
    return
## global-variable initialization
  ENTRY21F0:  preds = []
    femData:Mesh block21F1#3 = globals.block2172;
    femData:Space 0space0509_intermedateGlobal21F3#1 = globals.0space0509_intermedateGlobal2173;
    femData:FemFunc 0U050B_intermedateGlobal21F5#1 = globals.0U050B_intermedateGlobal2174;
    int cellChoice21F7#1 = globals.cellChoice2175;
    tensor[3] camEye21FB#1 = globals.camEye2177;
    tensor[3] camAt21FD#1 = globals.camAt2178;
    tensor[3] camUp21FF#3 = globals.camUp2179;
    real camNear2201#1 = globals.camNear217A;
    real camFar2203#1 = globals.camFar217B;
    real camFOV2205#1 = globals.camFOV217C;
    int iresU2207#1 = globals.iresU217E;
    int iresV2209#1 = globals.iresV217F;
    tensor[3] litdir220B#5 = globals.litdir218C;
    int _t220D#1 = 0;
    int _t220F#1 = 1;
    int _t2211#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F1);
    int _t2213#1 = ISub(_t2211,_t220F);
    int[] _t2215#1 = Range(_t220D,_t2213);
    femData:MeshCell[] _t2217#1 = <femData:MeshCell[]>{};
  FOREACH221A:  preds = [ASSIGN2218,NEXT2220]
    foreach (_t2219 in _t2215) on exit goto ASSIGN2222
      femData:MeshCell[] _t221E#2 = phi(_t2217,_t221D)
    femData:MeshCell _t221B#1 = LoadFem<femData:MeshCell>(block21F1,_t2219);
    femData:MeshCell[] _t221D#1 = Append<femData:MeshCell>(_t221E,_t221B);
    goto FOREACH221A
  ASSIGN2222:  preds = [FOREACH221A]
    femData:Space space2221#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F3,block21F1);
    femData:FemFunc U2223#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F5,space2221);
    femData:MeshCell c12225#1 = Subscript<femData:MeshCell[]>(_t221E,cellChoice21F7);
    int _t2227#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12225);
    femData:FuncCell _t2229#2 = LoadFem<femData:FuncCell>(U2223,_t2227);
    femData:FemFunc _t222B#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2229);
    femData:Space _t222D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222B);
    int _t222F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2229);
    tensor[3] op1_e3_l_42235#9 = VSub<3>(camAt21FD,camEye21FB);
    real op1_e3_l_62238#1 = VDot<3>(op1_e3_l_42235,op1_e3_l_42235);
    real op1_e3_l_7223B#6 = Sqrt(op1_e3_l_62238);
    real realLit223F#9 = 0.1e1;
    real op1_e3_l_9223E#6 = RDiv(realLit223F,op1_e3_l_7223B);
    tensor[3] camN2243#4 = VScale<3>(op1_e3_l_9223E,op1_e3_l_42235);
    globals.camN2191 = camN2243;
    real realLit2248#6 = 0.e0;
    real r2249#3 = TensorIndex<tensor[3],[0]>(camUp21FF);
    real r224A#3 = RMul(realLit2248,r2249);
    real r224B#3 = TensorIndex<tensor[3],[1]>(camUp21FF);
    real r224C#3 = RMul(realLit2248,r224B);
    real r224D#3 = TensorIndex<tensor[3],[2]>(camUp21FF);
    real r224E#5 = RMul(realLit2248,r224D);
    real r224F#3 = RAdd(r224A,r224C);
    real r2250#3 = RAdd(r224F,r224E);
    real r2252#1 = RMul(realLit223F,r224D);
    real r2253#1 = RAdd(r224F,r2252);
    real realLit2254#6 = -0.1e1;
    real r2255#1 = RMul(realLit2254,r224B);
    real r2256#1 = RAdd(r224A,r2255);
    real r2257#1 = RAdd(r2256,r224E);
    tensor[3] tensor2258#1 = <tensor[3]>[r2250,r2253,r2257];
    real r2259#1 = RMul(realLit2254,r224D);
    real r225A#1 = RAdd(r224F,r2259);
    real r225B#1 = RMul(realLit223F,r2249);
    real r225C#1 = RAdd(r225B,r224C);
    real r225D#1 = RAdd(r225C,r224E);
    tensor[3] tensor225E#1 = <tensor[3]>[r225A,r2250,r225D];
    real r225F#1 = RMul(realLit223F,r224B);
    real r2260#1 = RAdd(r224A,r225F);
    real r2261#1 = RAdd(r2260,r224E);
    real r2262#1 = RMul(realLit2254,r2249);
    real r2263#1 = RAdd(r2262,r224C);
    real r2264#1 = RAdd(r2263,r224E);
    tensor[3] tensor2265#1 = <tensor[3]>[r2261,r2264,r2250];
    real vdot2288#4 = VDot<3>(op1_e3_l_42235,tensor2258);
    real vdot228A#4 = VDot<3>(op1_e3_l_42235,tensor225E);
    real vdot228C#4 = VDot<3>(op1_e3_l_42235,tensor2265);
    tensor[3] op1_e3_l_172286#3 = <tensor[3]>[vdot2288,vdot228A,vdot228C];
    real op1_e3_l_342295#1 = VDot<3>(op1_e3_l_172286,op1_e3_l_172286);
    real r2299#1 = RMul(op1_e3_l_9223E,op1_e3_l_9223E);
    real op1_e3_l_352298#1 = RMul(r2299,op1_e3_l_342295);
    real op1_e3_l_36229D#1 = Sqrt(op1_e3_l_352298);
    tensor[3] op1_e3_l_3722A0#1 = VScale<3>(op1_e3_l_9223E,op1_e3_l_172286);
    real op1_e3_l_3822A3#2 = RDiv(realLit223F,op1_e3_l_36229D);
    tensor[3] camU22A8#4 = VScale<3>(op1_e3_l_3822A3,op1_e3_l_3722A0);
    globals.camU2192 = camU22A8;
    real r22AF#3 = RMul(realLit2248,vdot2288);
    real r22B1#3 = RMul(realLit2248,vdot228A);
    real r22B3#5 = RMul(realLit2248,vdot228C);
    real r22B4#3 = RAdd(r22AF,r22B1);
    real r22B5#3 = RAdd(r22B4,r22B3);
    real r22B7#1 = RMul(realLit223F,vdot228C);
    real r22B8#1 = RAdd(r22B4,r22B7);
    real r22BA#1 = RMul(realLit2254,vdot228A);
    real r22BB#1 = RAdd(r22AF,r22BA);
    real r22BC#1 = RAdd(r22BB,r22B3);
    tensor[3] tensor22BD#1 = <tensor[3]>[r22B5,r22B8,r22BC];
    real r22BE#1 = RMul(realLit2254,vdot228C);
    real r22BF#1 = RAdd(r22B4,r22BE);
    real r22C0#1 = RMul(realLit223F,vdot2288);
    real r22C1#1 = RAdd(r22C0,r22B1);
    real r22C2#1 = RAdd(r22C1,r22B3);
    tensor[3] tensor22C3#1 = <tensor[3]>[r22BF,r22B5,r22C2];
    real r22C4#1 = RMul(realLit223F,vdot228A);
    real r22C5#1 = RAdd(r22AF,r22C4);
    real r22C6#1 = RAdd(r22C5,r22B3);
    real r22C7#1 = RMul(realLit2254,vdot2288);
    real r22C8#1 = RAdd(r22C7,r22B1);
    real r22C9#1 = RAdd(r22C8,r22B3);
    tensor[3] tensor22CA#1 = <tensor[3]>[r22C6,r22C9,r22B5];
    real vdot22ED#1 = VDot<3>(op1_e3_l_42235,tensor22BD);
    real vdot22EF#1 = VDot<3>(op1_e3_l_42235,tensor22C3);
    real vdot22F1#1 = VDot<3>(op1_e3_l_42235,tensor22CA);
    tensor[3] op1_e3_l_4722EB#1 = <tensor[3]>[vdot22ED,vdot22EF,vdot22F1];
    tensor[3] op1_e3_l_5022FA#3 = VScale<3>(op1_e3_l_9223E,op1_e3_l_4722EB);
    real r22FE#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FA);
    real r22FF#3 = RMul(op1_e3_l_9223E,op1_e3_l_3822A3);
    real r2300#2 = RMul(r22FF,r22FE);
    real r2301#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FA);
    real r2302#2 = RMul(r22FF,r2301);
    real r2303#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FA);
    real r2304#2 = RMul(r22FF,r2303);
    tensor[3] camV22FD#1 = <tensor[3]>[r2300,r2302,r2304];
    globals.camV2193 = camV22FD;
    globals.camDist2194 = op1_e3_l_7223B;
    real _t2310#1 = 0.314159265358979323846264338327950288e1;
    real _t2312#1 = 0.36e3;
    real op1_e3_l_52314#1 = RMul(camFOV2205,_t2310);
    real op1_e3_l_62317#1 = RDiv(op1_e3_l_52314,_t2312);
    real op1_e3_l_10231A#2 = Tan(op1_e3_l_62317);
    real camVmax231D#1 = RMul(op1_e3_l_10231A,op1_e3_l_7223B);
    globals.camVmax2195 = camVmax231D;
    real _t2321#1 = IntToReal(iresU2207);
    real _t2323#1 = IntToReal(iresV2209);
    real r2326#1 = RMul(_t2321,op1_e3_l_10231A);
    real op1_e3_l_142325#1 = RMul(r2326,op1_e3_l_7223B);
    real camUmax232A#1 = RDiv(op1_e3_l_142325,_t2323);
    globals.camUmax2196 = camUmax232A;
    real camNearVsp232E#1 = RAdd(camNear2201,op1_e3_l_7223B);
    globals.camNearVsp2197 = camNearVsp232E;
    real camFarVsp2332#1 = RAdd(camFar2203,op1_e3_l_7223B);
    globals.camFarVsp2198 = camFarVsp2332;
    real op1_e3_l_32338#1 = VDot<3>(litdir220B,litdir220B);
    real op1_e3_l_4233B#1 = Sqrt(op1_e3_l_32338);
    real op1_e3_l_5233E#1 = RDiv(realLit223F,op1_e3_l_4233B);
    real r2344#1 = VIndex<3,0>(camU22A8);
    real r2345#3 = TensorIndex<tensor[3],[0]>(litdir220B);
    real r2346#1 = RMul(r2344,r2345);
    real r2348#3 = TensorIndex<tensor[3],[1]>(litdir220B);
    real r2349#1 = RMul(r2300,r2348);
    real r234A#1 = VIndex<3,0>(camN2243);
    real r234B#3 = TensorIndex<tensor[3],[2]>(litdir220B);
    real r234C#1 = RMul(r234A,r234B);
    real r234D#1 = RAdd(r2346,r2349);
    real r234E#1 = RAdd(r234D,r234C);
    real r234F#1 = VIndex<3,1>(camU22A8);
    real r2350#1 = RMul(r234F,r2345);
    real r2352#1 = RMul(r2302,r2348);
    real r2353#1 = VIndex<3,1>(camN2243);
    real r2354#1 = RMul(r2353,r234B);
    real r2355#1 = RAdd(r2350,r2352);
    real r2356#1 = RAdd(r2355,r2354);
    real r2357#1 = VIndex<3,2>(camU22A8);
    real r2358#1 = RMul(r2357,r2345);
    real r235A#1 = RMul(r2304,r2348);
    real r235B#1 = VIndex<3,2>(camN2243);
    real r235C#1 = RMul(r235B,r234B);
    real r235D#1 = RAdd(r2358,r235A);
    real r235E#1 = RAdd(r235D,r235C);
    tensor[3] op1_e3_l_62343#1 = <tensor[3]>[r234E,r2356,r235E];
    tensor[3] litwsp237C#1 = VScale<3>(op1_e3_l_5233E,op1_e3_l_62343);
    globals.litwsp2199 = litwsp237C;
    globals._t219A = _t222F;
    globals._tX219B = _t222D;
    globals._tXX219C = _t222B;
    return
## strand
  strand ray (int ui2386#1, int vi2387#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2398:  preds = []
        tensor[3] camEye2399#1 = globals.camEye2177;
        bool camOrtho239B#2 = globals.camOrtho217D;
        int iresU239D#1 = globals.iresU217E;
        int iresV239F#1 = globals.iresV217F;
        real rayStep23A1#1 = globals.rayStep2180;
        real refStep23A3#1 = globals.refStep2181;
        tensor[4] phong23A5#4 = globals.phong2189;
        tensor[3] camN23A7#1 = globals.camN2191;
        tensor[3] camU23A9#1 = globals.camU2192;
        tensor[3] camV23AB#1 = globals.camV2193;
        real camDist23AD#1 = globals.camDist2194;
        real camVmax23AF#2 = globals.camVmax2195;
        real camUmax23B1#2 = globals.camUmax2196;
        real camNearVsp23B3#1 = globals.camNearVsp2197;
        real _t23B5#4 = -0.5e0;
        real _t23B7#1 = IntToReal(ui2386);
        real _t23B9#1 = IntToReal(iresU239D);
        real _t23BB#2 = 0.5e0;
        real op1_e3_l_623BD#1 = RSub(_t23B9,_t23BB);
        real op1_e3_l_723C0#1 = RSub(_t23B7,_t23B5);
        real op1_e3_l_823C3#1 = RSub(op1_e3_l_623BD,_t23B5);
        real op1_e3_l_923C6#2 = RNeg(camUmax23B1);
        real op1_e3_l_1023C9#1 = RDiv(op1_e3_l_723C0,op1_e3_l_823C3);
        real op1_e3_l_1123CC#1 = RSub(camUmax23B1,op1_e3_l_923C6);
        real op1_e3_l_1323CF#1 = RMul(op1_e3_l_1023C9,op1_e3_l_1123CC);
        real rayU23D2#2 = RAdd(op1_e3_l_923C6,op1_e3_l_1323CF);
        real _t23D5#1 = IntToReal(vi2387);
        real _t23D7#1 = IntToReal(iresV239F);
        real op1_e3_l_623D9#1 = RSub(_t23D7,_t23BB);
        real op1_e3_l_723DC#1 = RSub(_t23D5,_t23B5);
        real op1_e3_l_823DF#1 = RSub(op1_e3_l_623D9,_t23B5);
        real op1_e3_l_923E2#2 = RNeg(camVmax23AF);
        real op1_e3_l_1023E5#1 = RDiv(op1_e3_l_723DC,op1_e3_l_823DF);
        real op1_e3_l_1123E8#1 = RSub(camVmax23AF,op1_e3_l_923E2);
        real op1_e3_l_1323EB#1 = RMul(op1_e3_l_1023E5,op1_e3_l_1123E8);
        real rayV23EE#2 = RAdd(op1_e3_l_923E2,op1_e3_l_1323EB);
        tensor[3] op1_e3_l_322400#1 = VScale<3>(rayU23D2,camU23A9);
        tensor[3] op1_e3_l_332403#1 = VScale<3>(rayV23EE,camV23AB);
        tensor[3] UV2406#5 = VAdd<3>(op1_e3_l_322400,op1_e3_l_332403);
        if camOrtho239B then goto JOIN240C else goto ASSIGN2466
      JOIN240C:  preds = [COND2409,ASSIGN2467]
        tensor[3] _t240A#1 = phi(UV2406,_t240B)
        tensor[3] rayOrig240D#1 = VAdd<3>(camEye2399,_t240A);
        if camOrtho239B then goto ASSIGN2412 else goto ASSIGN245C
      ASSIGN2412:  preds = [COND2410]
        real _t2411#3 = 0.e0;
        tensor[3] _t2413#1 = <tensor[3]>[_t2411,_t2411,_t2411];
        goto JOIN2417
      JOIN2417:  preds = [ASSIGN2414,ASSIGN2464]
        tensor[3] _t2415#1 = phi(_t2413,_t2416)
        tensor[3] rayVec2418#4 = VAdd<3>(camN23A7,_t2415);
        real op1_e3_l_6241B#1 = VDot<3>(rayVec2418,rayVec2418);
        real op1_e3_l_7241E#2 = Sqrt(op1_e3_l_6241B);
        real op1_e3_l_82421#1 = RMul(rayStep23A1,op1_e3_l_7241E);
        real alphaFix2424#1 = RDiv(op1_e3_l_82421,refStep23A3);
        real realLit2428#2 = 0.1e1;
        real op1_e3_l_92427#1 = RDiv(realLit2428,op1_e3_l_7241E);
        tensor[3] op1_e3_l_10242C#1 = VScale<3>(op1_e3_l_92427,rayVec2418);
        tensor[3] eyeDir242F#1 = VNeg<3>(op1_e3_l_10242C);
        real phKa2432#1 = VIndex<4,0>(phong23A5);
        real phKd2434#1 = VIndex<4,1>(phong23A5);
        real phKs2436#1 = VIndex<4,2>(phong23A5);
        real phSp2438#1 = VIndex<4,3>(phong23A5);
        real _t243A#8 = 0.e0;
        tensor[4] rgba243C#1 = <tensor[4]>[_t243A,_t243A,_t243A,_t243A];
        tensor[3] rgb243E#1 = <tensor[3]>[_t243A,_t243A,_t243A];
        self.rayU = rayU23D2;
        self.rayV = rayV23EE;
        self.rayN = camNearVsp23B3;
        self.UV = UV2406;
        self.rayOrig = rayOrig240D;
        self.rayVec = rayVec2418;
        self.alphaFix = alphaFix2424;
        self.eyeDir = eyeDir242F;
        self.phKa = phKa2432;
        self.phKd = phKd2434;
        self.phKs = phKs2436;
        self.phSp = phSp2438;
        self.rgba = rgba243C;
        self.raw = _t243A;
        self.rgb = rgb243E;
        self.transp = realLit2428;
        return
      ASSIGN245C:  preds = [COND2410]
        real realLit2453#1 = 0.1e1;
        real r2454#3 = RDiv(realLit2453,camDist23AD);
        real r2455#1 = TensorIndex<tensor[3],[0]>(UV2406);
        real r2456#1 = RMul(r2454,r2455);
        real r2457#1 = TensorIndex<tensor[3],[1]>(UV2406);
        real r2458#1 = RMul(r2454,r2457);
        real r2459#1 = TensorIndex<tensor[3],[2]>(UV2406);
        real r245A#1 = RMul(r2454,r2459);
        tensor[3] _t2416#1 = <tensor[3]>[r2456,r2458,r245A];
        goto JOIN2417
      ASSIGN2466:  preds = [COND2409]
        real _t2465#3 = 0.e0;
        tensor[3] _t240B#1 = <tensor[3]>[_t2465,_t2465,_t2465];
        goto JOIN240C
    end state init
    method update
        ENTRY2468:  preds = []
          image(IMAGE1D<double[3]>) cmap2469#17 = globals.cmap2176;
          int _t246B#3 = globals._t219A;
          femData:Space _t246D#252 = globals._tX219B;
          femData:FemFunc _t246F#252 = globals._tXX219C;
          femData:Mesh block2475#1 = globals.block2172;
          real rayStep2477#1 = globals.rayStep2180;
          real transp02479#1 = globals.transp02182;
          real thick247B#1 = globals.thick2183;
          real fStrTh247D#1 = globals.fStrTh2184;
          real fMaskTh247F#1 = globals.fMaskTh2185;
          real fBias2481#1 = globals.fBias2186;
          real maxAlpha2483#1 = globals.maxAlpha2187;
          tensor[3] mcNear2485#2 = globals.mcNear218A;
          tensor[3] mcFar2487#1 = globals.mcFar218B;
          tensor[2] cminmax2489#2 = globals.cminmax218D;
          bool analytical248B#1 = globals.analytical218E;
          tensor[3,3] rot248D#12 = globals.rot2190;
          real camNearVsp248F#2 = globals.camNearVsp2197;
          real camFarVsp2491#2 = globals.camFarVsp2198;
          tensor[3] litwsp2493#2 = globals.litwsp2199;
          real rayN2495#1 = self.rayN;
          tensor[3] rayOrig2497#1 = self.rayOrig;
          tensor[3] rayVec2499#1 = self.rayVec;
          real alphaFix249B#1 = self.alphaFix;
          tensor[3] eyeDir249D#1 = self.eyeDir;
          real phKa249F#1 = self.phKa;
          real phKd24A1#1 = self.phKd;
          real phKs24A3#2 = self.phKs;
          real phSp24A5#1 = self.phSp;
          tensor[3] rgb24A7#1 = self.rgb;
          real transp24A9#2 = self.transp;
          real rayN24AB#8 = RAdd(rayN2495,rayStep2477);
          bool _t24AE#1 = GT<real>(rayN24AB,camFarVsp2491);
          if _t24AE then goto SAVE24B1 else goto JOIN24B3
        SAVE24B1:  preds = [COND24B0]
          self.rayN = rayN24AB;
          stabilize
          goto JOIN24B3
        JOIN24B3:  preds = [*STABILIZE24B2,COND24B0]
          tensor[3] op1_e3_l_524B4#1 = VScale<3>(rayN24AB,rayVec2499);
          tensor[3] pos24B7#11 = VAdd<3>(rayOrig2497,op1_e3_l_524B4);
          femData:RefCell _t24BA#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2475);
          real _t24BC#1 = 0.1e-8;
          bool _t24BE#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BA,pos24B7,_t24BC);
          if _t24BE then goto ASSIGN25C1 else goto ASSIGN40E0
        ASSIGN25C1:  preds = [COND24C0]
          int ilit24C2#1 = 84;
          int mulRes24C3#84 = IMul(_t246B,ilit24C2);
          int idx24C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,mulRes24C3);
          int ilit24C7#86 = 1;
          int addRes24C8#1 = IAdd(mulRes24C3,ilit24C7);
          int idx24C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24C8);
          int ilit24CA#1 = 2;
          int addRes24CB#1 = IAdd(mulRes24C3,ilit24CA);
          int idx24CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CB);
          int ilit24CD#1 = 3;
          int addRes24CE#1 = IAdd(mulRes24C3,ilit24CD);
          int idx24CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CE);
          int ilit24D0#1 = 4;
          int addRes24D1#1 = IAdd(mulRes24C3,ilit24D0);
          int idx24D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D1);
          int ilit24D3#1 = 5;
          int addRes24D4#1 = IAdd(mulRes24C3,ilit24D3);
          int idx24D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D4);
          int ilit24D6#1 = 6;
          int addRes24D7#1 = IAdd(mulRes24C3,ilit24D6);
          int idx24D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D7);
          int ilit24D9#1 = 7;
          int addRes24DA#1 = IAdd(mulRes24C3,ilit24D9);
          int idx24DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DA);
          int ilit24DC#1 = 8;
          int addRes24DD#1 = IAdd(mulRes24C3,ilit24DC);
          int idx24DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DD);
          int ilit24DF#1 = 9;
          int addRes24E0#1 = IAdd(mulRes24C3,ilit24DF);
          int idx24E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E0);
          int ilit24E2#1 = 10;
          int addRes24E3#1 = IAdd(mulRes24C3,ilit24E2);
          int idx24E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E3);
          int ilit24E5#1 = 11;
          int addRes24E6#1 = IAdd(mulRes24C3,ilit24E5);
          int idx24E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E6);
          int ilit24E8#1 = 12;
          int addRes24E9#1 = IAdd(mulRes24C3,ilit24E8);
          int idx24EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E9);
          int ilit24EB#1 = 13;
          int addRes24EC#1 = IAdd(mulRes24C3,ilit24EB);
          int idx24ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EC);
          int ilit24EE#1 = 14;
          int addRes24EF#1 = IAdd(mulRes24C3,ilit24EE);
          int idx24F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EF);
          int ilit24F1#1 = 15;
          int addRes24F2#1 = IAdd(mulRes24C3,ilit24F1);
          int idx24F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F2);
          int ilit24F4#1 = 16;
          int addRes24F5#1 = IAdd(mulRes24C3,ilit24F4);
          int idx24F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F5);
          int ilit24F7#1 = 17;
          int addRes24F8#1 = IAdd(mulRes24C3,ilit24F7);
          int idx24F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F8);
          int ilit24FA#1 = 18;
          int addRes24FB#1 = IAdd(mulRes24C3,ilit24FA);
          int idx24FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FB);
          int ilit24FD#1 = 19;
          int addRes24FE#1 = IAdd(mulRes24C3,ilit24FD);
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FE);
          int ilit2500#1 = 20;
          int addRes2501#1 = IAdd(mulRes24C3,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2501);
          int ilit2503#1 = 21;
          int addRes2504#1 = IAdd(mulRes24C3,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2504);
          int ilit2506#1 = 22;
          int addRes2507#1 = IAdd(mulRes24C3,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2507);
          int ilit2509#1 = 23;
          int addRes250A#1 = IAdd(mulRes24C3,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250A);
          int ilit250C#1 = 24;
          int addRes250D#1 = IAdd(mulRes24C3,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250D);
          int ilit250F#1 = 25;
          int addRes2510#1 = IAdd(mulRes24C3,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2510);
          int ilit2512#1 = 26;
          int addRes2513#1 = IAdd(mulRes24C3,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2513);
          int ilit2515#1 = 27;
          int addRes2516#1 = IAdd(mulRes24C3,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2516);
          int ilit2518#1 = 28;
          int addRes2519#1 = IAdd(mulRes24C3,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2519);
          int ilit251B#1 = 29;
          int addRes251C#1 = IAdd(mulRes24C3,ilit251B);
          int idx251D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251C);
          int ilit251E#1 = 30;
          int addRes251F#1 = IAdd(mulRes24C3,ilit251E);
          int idx2520#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251F);
          int ilit2521#1 = 31;
          int addRes2522#1 = IAdd(mulRes24C3,ilit2521);
          int idx2523#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2522);
          int ilit2524#1 = 32;
          int addRes2525#1 = IAdd(mulRes24C3,ilit2524);
          int idx2526#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2525);
          int ilit2527#1 = 33;
          int addRes2528#1 = IAdd(mulRes24C3,ilit2527);
          int idx2529#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2528);
          int ilit252A#1 = 34;
          int addRes252B#1 = IAdd(mulRes24C3,ilit252A);
          int idx252C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252B);
          int ilit252D#1 = 35;
          int addRes252E#1 = IAdd(mulRes24C3,ilit252D);
          int idx252F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252E);
          int ilit2530#1 = 36;
          int addRes2531#1 = IAdd(mulRes24C3,ilit2530);
          int idx2532#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2531);
          int ilit2533#1 = 37;
          int addRes2534#1 = IAdd(mulRes24C3,ilit2533);
          int idx2535#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2534);
          int ilit2536#1 = 38;
          int addRes2537#1 = IAdd(mulRes24C3,ilit2536);
          int idx2538#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2537);
          int ilit2539#1 = 39;
          int addRes253A#1 = IAdd(mulRes24C3,ilit2539);
          int idx253B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253A);
          int ilit253C#1 = 40;
          int addRes253D#1 = IAdd(mulRes24C3,ilit253C);
          int idx253E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253D);
          int ilit253F#1 = 41;
          int addRes2540#1 = IAdd(mulRes24C3,ilit253F);
          int idx2541#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2540);
          int ilit2542#1 = 42;
          int addRes2543#1 = IAdd(mulRes24C3,ilit2542);
          int idx2544#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2543);
          int ilit2545#1 = 43;
          int addRes2546#1 = IAdd(mulRes24C3,ilit2545);
          int idx2547#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2546);
          int ilit2548#1 = 44;
          int addRes2549#1 = IAdd(mulRes24C3,ilit2548);
          int idx254A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2549);
          int ilit254B#1 = 45;
          int addRes254C#1 = IAdd(mulRes24C3,ilit254B);
          int idx254D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254C);
          int ilit254E#1 = 46;
          int addRes254F#1 = IAdd(mulRes24C3,ilit254E);
          int idx2550#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254F);
          int ilit2551#1 = 47;
          int addRes2552#1 = IAdd(mulRes24C3,ilit2551);
          int idx2553#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2552);
          int ilit2554#1 = 48;
          int addRes2555#1 = IAdd(mulRes24C3,ilit2554);
          int idx2556#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2555);
          int ilit2557#1 = 49;
          int addRes2558#1 = IAdd(mulRes24C3,ilit2557);
          int idx2559#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2558);
          int ilit255A#1 = 50;
          int addRes255B#1 = IAdd(mulRes24C3,ilit255A);
          int idx255C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255B);
          int ilit255D#1 = 51;
          int addRes255E#1 = IAdd(mulRes24C3,ilit255D);
          int idx255F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255E);
          int ilit2560#1 = 52;
          int addRes2561#1 = IAdd(mulRes24C3,ilit2560);
          int idx2562#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2561);
          int ilit2563#1 = 53;
          int addRes2564#1 = IAdd(mulRes24C3,ilit2563);
          int idx2565#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2564);
          int ilit2566#1 = 54;
          int addRes2567#1 = IAdd(mulRes24C3,ilit2566);
          int idx2568#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2567);
          int ilit2569#1 = 55;
          int addRes256A#1 = IAdd(mulRes24C3,ilit2569);
          int idx256B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256A);
          int ilit256C#1 = 56;
          int addRes256D#1 = IAdd(mulRes24C3,ilit256C);
          int idx256E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256D);
          int ilit256F#1 = 57;
          int addRes2570#1 = IAdd(mulRes24C3,ilit256F);
          int idx2571#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2570);
          int ilit2572#1 = 58;
          int addRes2573#1 = IAdd(mulRes24C3,ilit2572);
          int idx2574#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2573);
          int ilit2575#1 = 59;
          int addRes2576#1 = IAdd(mulRes24C3,ilit2575);
          int idx2577#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2576);
          int ilit2578#1 = 60;
          int addRes2579#1 = IAdd(mulRes24C3,ilit2578);
          int idx257A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2579);
          int ilit257B#1 = 61;
          int addRes257C#1 = IAdd(mulRes24C3,ilit257B);
          int idx257D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257C);
          int ilit257E#1 = 62;
          int addRes257F#1 = IAdd(mulRes24C3,ilit257E);
          int idx2580#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257F);
          int ilit2581#1 = 63;
          int addRes2582#1 = IAdd(mulRes24C3,ilit2581);
          int idx2583#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2582);
          int ilit2584#1 = 64;
          int addRes2585#1 = IAdd(mulRes24C3,ilit2584);
          int idx2586#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2585);
          int ilit2587#1 = 65;
          int addRes2588#1 = IAdd(mulRes24C3,ilit2587);
          int idx2589#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2588);
          int ilit258A#1 = 66;
          int addRes258B#1 = IAdd(mulRes24C3,ilit258A);
          int idx258C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258B);
          int ilit258D#1 = 67;
          int addRes258E#1 = IAdd(mulRes24C3,ilit258D);
          int idx258F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258E);
          int ilit2590#1 = 68;
          int addRes2591#1 = IAdd(mulRes24C3,ilit2590);
          int idx2592#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2591);
          int ilit2593#1 = 69;
          int addRes2594#1 = IAdd(mulRes24C3,ilit2593);
          int idx2595#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2594);
          int ilit2596#1 = 70;
          int addRes2597#1 = IAdd(mulRes24C3,ilit2596);
          int idx2598#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2597);
          int ilit2599#1 = 71;
          int addRes259A#1 = IAdd(mulRes24C3,ilit2599);
          int idx259B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259A);
          int ilit259C#1 = 72;
          int addRes259D#1 = IAdd(mulRes24C3,ilit259C);
          int idx259E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259D);
          int ilit259F#1 = 73;
          int addRes25A0#1 = IAdd(mulRes24C3,ilit259F);
          int idx25A1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A0);
          int ilit25A2#1 = 74;
          int addRes25A3#1 = IAdd(mulRes24C3,ilit25A2);
          int idx25A4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A3);
          int ilit25A5#1 = 75;
          int addRes25A6#1 = IAdd(mulRes24C3,ilit25A5);
          int idx25A7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A6);
          int ilit25A8#1 = 76;
          int addRes25A9#1 = IAdd(mulRes24C3,ilit25A8);
          int idx25AA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A9);
          int ilit25AB#1 = 77;
          int addRes25AC#1 = IAdd(mulRes24C3,ilit25AB);
          int idx25AD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AC);
          int ilit25AE#1 = 78;
          int addRes25AF#1 = IAdd(mulRes24C3,ilit25AE);
          int idx25B0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AF);
          int ilit25B1#1 = 79;
          int addRes25B2#1 = IAdd(mulRes24C3,ilit25B1);
          int idx25B3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B2);
          int ilit25B4#1 = 80;
          int addRes25B5#1 = IAdd(mulRes24C3,ilit25B4);
          int idx25B6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B5);
          int ilit25B7#1 = 81;
          int addRes25B8#1 = IAdd(mulRes24C3,ilit25B7);
          int idx25B9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B8);
          int ilit25BA#1 = 82;
          int addRes25BB#1 = IAdd(mulRes24C3,ilit25BA);
          int idx25BC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BB);
          int ilit25BD#1 = 83;
          int addRes25BE#1 = IAdd(mulRes24C3,ilit25BD);
          int idx25BF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BE);
          int mulRes26C5#1 = IMul(ilit24C7,idx24C6);
          int mulRes26C7#1 = IMul(ilit24C7,idx24C9);
          int mulRes26CA#1 = IMul(ilit24C7,idx24CC);
          int mulRes26CD#1 = IMul(ilit24C7,idx24CF);
          int mulRes26D0#1 = IMul(ilit24C7,idx24D2);
          int mulRes26D3#1 = IMul(ilit24C7,idx24D5);
          int mulRes26D6#1 = IMul(ilit24C7,idx24D8);
          int mulRes26D9#1 = IMul(ilit24C7,idx24DB);
          int mulRes26DC#1 = IMul(ilit24C7,idx24DE);
          int mulRes26DF#1 = IMul(ilit24C7,idx24E1);
          int mulRes26E2#1 = IMul(ilit24C7,idx24E4);
          int mulRes26E5#1 = IMul(ilit24C7,idx24E7);
          int mulRes26E8#1 = IMul(ilit24C7,idx24EA);
          int mulRes26EB#1 = IMul(ilit24C7,idx24ED);
          int mulRes26EE#1 = IMul(ilit24C7,idx24F0);
          int mulRes26F1#1 = IMul(ilit24C7,idx24F3);
          int mulRes26F4#1 = IMul(ilit24C7,idx24F6);
          int mulRes26F7#1 = IMul(ilit24C7,idx24F9);
          int mulRes26FA#1 = IMul(ilit24C7,idx24FC);
          int mulRes26FD#1 = IMul(ilit24C7,idx24FF);
          int mulRes2700#1 = IMul(ilit24C7,idx2502);
          int mulRes2703#1 = IMul(ilit24C7,idx2505);
          int mulRes2706#1 = IMul(ilit24C7,idx2508);
          int mulRes2709#1 = IMul(ilit24C7,idx250B);
          int mulRes270C#1 = IMul(ilit24C7,idx250E);
          int mulRes270F#1 = IMul(ilit24C7,idx2511);
          int mulRes2712#1 = IMul(ilit24C7,idx2514);
          int mulRes2715#1 = IMul(ilit24C7,idx2517);
          int mulRes2718#1 = IMul(ilit24C7,idx251A);
          int mulRes271B#1 = IMul(ilit24C7,idx251D);
          int mulRes271E#1 = IMul(ilit24C7,idx2520);
          int mulRes2721#1 = IMul(ilit24C7,idx2523);
          int mulRes2724#1 = IMul(ilit24C7,idx2526);
          int mulRes2727#1 = IMul(ilit24C7,idx2529);
          int mulRes272A#1 = IMul(ilit24C7,idx252C);
          int mulRes272D#1 = IMul(ilit24C7,idx252F);
          int mulRes2730#1 = IMul(ilit24C7,idx2532);
          int mulRes2733#1 = IMul(ilit24C7,idx2535);
          int mulRes2736#1 = IMul(ilit24C7,idx2538);
          int mulRes2739#1 = IMul(ilit24C7,idx253B);
          int mulRes273C#1 = IMul(ilit24C7,idx253E);
          int mulRes273F#1 = IMul(ilit24C7,idx2541);
          int mulRes2742#1 = IMul(ilit24C7,idx2544);
          int mulRes2745#1 = IMul(ilit24C7,idx2547);
          int mulRes2748#1 = IMul(ilit24C7,idx254A);
          int mulRes274B#1 = IMul(ilit24C7,idx254D);
          int mulRes274E#1 = IMul(ilit24C7,idx2550);
          int mulRes2751#1 = IMul(ilit24C7,idx2553);
          int mulRes2754#1 = IMul(ilit24C7,idx2556);
          int mulRes2757#1 = IMul(ilit24C7,idx2559);
          int mulRes275A#1 = IMul(ilit24C7,idx255C);
          int mulRes275D#1 = IMul(ilit24C7,idx255F);
          int mulRes2760#1 = IMul(ilit24C7,idx2562);
          int mulRes2763#1 = IMul(ilit24C7,idx2565);
          int mulRes2766#1 = IMul(ilit24C7,idx2568);
          int mulRes2769#1 = IMul(ilit24C7,idx256B);
          int mulRes276C#1 = IMul(ilit24C7,idx256E);
          int mulRes276F#1 = IMul(ilit24C7,idx2571);
          int mulRes2772#1 = IMul(ilit24C7,idx2574);
          int mulRes2775#1 = IMul(ilit24C7,idx2577);
          int mulRes2778#1 = IMul(ilit24C7,idx257A);
          int mulRes277B#1 = IMul(ilit24C7,idx257D);
          int mulRes277E#1 = IMul(ilit24C7,idx2580);
          int mulRes2781#1 = IMul(ilit24C7,idx2583);
          int mulRes2784#1 = IMul(ilit24C7,idx2586);
          int mulRes2787#1 = IMul(ilit24C7,idx2589);
          int mulRes278A#1 = IMul(ilit24C7,idx258C);
          int mulRes278D#1 = IMul(ilit24C7,idx258F);
          int mulRes2790#1 = IMul(ilit24C7,idx2592);
          int mulRes2793#1 = IMul(ilit24C7,idx2595);
          int mulRes2796#1 = IMul(ilit24C7,idx2598);
          int mulRes2799#1 = IMul(ilit24C7,idx259B);
          int mulRes279C#1 = IMul(ilit24C7,idx259E);
          int mulRes279F#1 = IMul(ilit24C7,idx25A1);
          int mulRes27A2#1 = IMul(ilit24C7,idx25A4);
          int mulRes27A5#1 = IMul(ilit24C7,idx25A7);
          int mulRes27A8#1 = IMul(ilit24C7,idx25AA);
          int mulRes27AB#1 = IMul(ilit24C7,idx25AD);
          int mulRes27AE#1 = IMul(ilit24C7,idx25B0);
          int mulRes27B1#1 = IMul(ilit24C7,idx25B3);
          int mulRes27B4#1 = IMul(ilit24C7,idx25B6);
          int mulRes27B7#1 = IMul(ilit24C7,idx25B9);
          int mulRes27BA#1 = IMul(ilit24C7,idx25BC);
          int mulRes27BD#1 = IMul(ilit24C7,idx25BF);
          real dof27BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C5);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C7);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CA);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CD);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D0);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D3);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D6);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D9);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DC);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DF);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E2);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E5);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E8);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EB);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EE);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F1);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F4);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F7);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FA);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FD);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2700);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2703);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2706);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2709);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270C);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270F);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2712);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2715);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2718);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271B);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271E);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2721);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2724);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2727);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272A);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272D);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2730);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2733);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2736);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2739);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273C);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273F);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2742);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2745);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2748);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274B);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274E);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2751);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2754);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2757);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275A);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275D);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2760);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2763);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2766);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2769);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276C);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276F);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2772);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2775);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2778);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277B);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277E);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2781);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2784);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2787);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278A);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278D);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2790);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2793);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2796);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2799);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279C);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279F);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A2);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A5);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A8);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AB);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AE);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B1);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B4);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B7);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BA);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BD);
          tensor[84] dofs2812#9 = <tensor[84]>[dof27BE,dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811];
          real varAcc2966#20 = VIndex<3,0>(pos24B7);
          real varAcc2967#10 = VIndex<3,1>(pos24B7);
          real varAcc2968#10 = VIndex<3,2>(pos24B7);
          real basisEval2969#378 = 0.e0;
          real coeff296A#47 = 0.2e1;
          real one296B#80 = 0.1e1;
          real prod296C#6 = RMul(one296B,one296B);
          real prod296D#2 = RMul(one296B,prod296C);
          real basisEval296E#3 = RMul(coeff296A,prod296D);
          real prod2970#5 = RMul(one296B,varAcc2968);
          real prod2971#3 = RMul(one296B,prod2970);
          real basisEval2972#5 = RMul(coeff296A,prod2971);
          real prod2974#5 = RMul(varAcc2967,one296B);
          real prod2975#3 = RMul(one296B,prod2974);
          real basisEval2976#5 = RMul(coeff296A,prod2975);
          real coeff2977#25 = 0.6e1;
          real prod2979#3 = RMul(varAcc2966,prod296C);
          real basisEval297A#1 = RMul(coeff2977,prod2979);
          real prod2297B#5 = RMul(varAcc2968,varAcc2968);
          real prod297C#4 = RMul(one296B,prod2297B);
          real prod297D#4 = RMul(one296B,prod297C);
          real basisEval297E#2 = RMul(coeff296A,prod297D);
          real prod297F#4 = RMul(varAcc2967,varAcc2968);
          real prod2980#4 = RMul(one296B,prod297F);
          real basisEval2981#5 = RMul(coeff296A,prod2980);
          real prod22982#5 = RMul(varAcc2967,varAcc2967);
          real prod2983#4 = RMul(prod22982,one296B);
          real prod2984#4 = RMul(one296B,prod2983);
          real basisEval2985#2 = RMul(coeff296A,prod2984);
          real prod2986#4 = RMul(varAcc2966,prod2970);
          real basisEval2987#2 = RMul(coeff2977,prod2986);
          real prod2988#4 = RMul(varAcc2966,prod2974);
          real basisEval2989#2 = RMul(coeff2977,prod2988);
          real coeff298A#15 = 0.12e2;
          real prod2298B#11 = RMul(varAcc2966,varAcc2966);
          real prod298C#4 = RMul(prod2298B,prod296C);
          real basisEval298D#1 = RMul(coeff298A,prod298C);
          real prod3298E#4 = RMul(prod2297B,varAcc2968);
          real prod298F#3 = RMul(one296B,prod3298E);
          real prod2990#4 = RMul(one296B,prod298F);
          real basisEval2991#2 = RMul(coeff296A,prod2990);
          real prod2992#3 = RMul(varAcc2967,prod2297B);
          real prod2993#5 = RMul(one296B,prod2992);
          real basisEval2994#3 = RMul(coeff296A,prod2993);
          real prod2995#3 = RMul(prod22982,varAcc2968);
          real prod2996#5 = RMul(one296B,prod2995);
          real basisEval2997#3 = RMul(coeff296A,prod2996);
          real prod32998#4 = RMul(prod22982,varAcc2967);
          real prod2999#3 = RMul(prod32998,one296B);
          real prod299A#4 = RMul(one296B,prod2999);
          real basisEval299B#2 = RMul(coeff296A,prod299A);
          real prod299C#5 = RMul(varAcc2966,prod297C);
          real basisEval299D#2 = RMul(coeff2977,prod299C);
          real prod299E#3 = RMul(varAcc2966,prod297F);
          real basisEval299F#3 = RMul(coeff2977,prod299E);
          real prod29A0#5 = RMul(varAcc2966,prod2983);
          real basisEval29A1#2 = RMul(coeff2977,prod29A0);
          real prod29A2#5 = RMul(prod2298B,prod2970);
          real basisEval29A3#1 = RMul(coeff298A,prod29A2);
          real prod29A4#5 = RMul(prod2298B,prod2974);
          real basisEval29A5#1 = RMul(coeff298A,prod29A4);
          real coeff29A6#9 = 0.20e2;
          real prod329A7#7 = RMul(prod2298B,varAcc2966);
          real prod29A8#4 = RMul(prod329A7,prod296C);
          real basisEval29A9#1 = RMul(coeff29A6,prod29A8);
          real prod429AA#3 = RMul(prod3298E,varAcc2968);
          real prod29AB#2 = RMul(one296B,prod429AA);
          real prod29AC#4 = RMul(one296B,prod29AB);
          real basisEval29AD#2 = RMul(coeff296A,prod29AC);
          real prod29AE#2 = RMul(varAcc2967,prod3298E);
          real prod29AF#6 = RMul(one296B,prod29AE);
          real basisEval29B0#3 = RMul(coeff296A,prod29AF);
          real prod29B1#2 = RMul(prod22982,prod2297B);
          real prod29B2#5 = RMul(one296B,prod29B1);
          real basisEval29B3#1 = RMul(coeff296A,prod29B2);
          real prod29B4#2 = RMul(prod32998,varAcc2968);
          real prod29B5#6 = RMul(one296B,prod29B4);
          real basisEval29B6#3 = RMul(coeff296A,prod29B5);
          real prod429B7#3 = RMul(prod32998,varAcc2967);
          real prod29B8#2 = RMul(prod429B7,one296B);
          real prod29B9#4 = RMul(one296B,prod29B8);
          real basisEval29BA#2 = RMul(coeff296A,prod29B9);
          real prod29BB#6 = RMul(varAcc2966,prod298F);
          real basisEval29BC#1 = RMul(coeff2977,prod29BB);
          real prod29BD#5 = RMul(varAcc2966,prod2992);
          real basisEval29BE#4 = RMul(coeff2977,prod29BD);
          real prod29BF#5 = RMul(varAcc2966,prod2995);
          real basisEval29C0#4 = RMul(coeff2977,prod29BF);
          real prod29C1#6 = RMul(varAcc2966,prod2999);
          real basisEval29C2#1 = RMul(coeff2977,prod29C1);
          real prod29C3#5 = RMul(prod2298B,prod297C);
          real basisEval29C4#2 = RMul(coeff298A,prod29C3);
          real prod29C5#5 = RMul(prod2298B,prod297F);
          real basisEval29C6#1 = RMul(coeff298A,prod29C5);
          real prod29C7#5 = RMul(prod2298B,prod2983);
          real basisEval29C8#2 = RMul(coeff298A,prod29C7);
          real prod29C9#6 = RMul(prod329A7,prod2970);
          real basisEval29CA#1 = RMul(coeff29A6,prod29C9);
          real prod29CB#6 = RMul(prod329A7,prod2974);
          real basisEval29CC#1 = RMul(coeff29A6,prod29CB);
          real coeff29CD#3 = 0.30e2;
          real prod429CE#4 = RMul(prod329A7,varAcc2966);
          real prod29CF#4 = RMul(prod429CE,prod296C);
          real basisEval29D0#1 = RMul(coeff29CD,prod29CF);
          real basisEval29D1#6 = RMul(one296B,prod296D);
          real basisEval29D2#3 = RMul(one296B,prod2971);
          real basisEval29D3#5 = RMul(coeff296A,prod2979);
          real basisEval29D4#3 = RMul(one296B,prod297D);
          real coeff29D5#24 = 0.3e1;
          real basisEval29D6#3 = RMul(coeff29D5,prod2984);
          real basisEval29D7#5 = RMul(coeff296A,prod2986);
          real coeff29D8#25 = 0.4e1;
          real basisEval29D9#1 = RMul(coeff29D8,prod2988);
          real basisEval29DA#3 = RMul(coeff29D5,prod298C);
          real basisEval29DB#3 = RMul(one296B,prod2990);
          real basisEval29DC#2 = RMul(coeff29D5,prod2996);
          real basisEval29DD#3 = RMul(coeff29D8,prod299A);
          real basisEval29DE#3 = RMul(coeff296A,prod299C);
          real basisEval29DF#3 = RMul(coeff29D8,prod299E);
          real basisEval29E0#2 = RMul(coeff29D5,prod29A2);
          real basisEval29E1#2 = RMul(coeff2977,prod29A4);
          real basisEval29E2#3 = RMul(coeff29D8,prod29A8);
          real basisEval29E3#3 = RMul(one296B,prod29AC);
          real basisEval29E4#4 = RMul(coeff29D5,prod29B2);
          real basisEval29E5#2 = RMul(coeff29D8,prod29B5);
          real coeff29E6#9 = 0.5e1;
          real basisEval29E7#3 = RMul(coeff29E6,prod29B9);
          real basisEval29E8#3 = RMul(coeff296A,prod29BB);
          real basisEval29E9#1 = RMul(coeff29D8,prod29BD);
          real coeff29EA#6 = 0.8e1;
          real basisEval29EB#1 = RMul(coeff29EA,prod29C1);
          real basisEval29EC#4 = RMul(coeff29D5,prod29C3);
          real basisEval29ED#4 = RMul(coeff2977,prod29C5);
          real coeff29EE#3 = 0.9e1;
          real basisEval29EF#1 = RMul(coeff29EE,prod29C7);
          real basisEval29F0#2 = RMul(coeff29D8,prod29C9);
          real basisEval29F1#1 = RMul(coeff29EA,prod29CB);
          real basisEval29F2#3 = RMul(coeff29E6,prod29CF);
          real basisEval29F3#3 = RMul(one296B,prod2975);
          real basisEval29F4#3 = RMul(coeff29D5,prod297D);
          real basisEval29F5#3 = RMul(one296B,prod2984);
          real basisEval29F6#1 = RMul(coeff29D8,prod2986);
          real basisEval29F7#5 = RMul(coeff296A,prod2988);
          real basisEval29F8#3 = RMul(coeff29D8,prod2990);
          real basisEval29F9#2 = RMul(coeff29D5,prod2993);
          real basisEval29FA#3 = RMul(one296B,prod299A);
          real basisEval29FB#3 = RMul(coeff296A,prod29A0);
          real basisEval29FC#2 = RMul(coeff2977,prod29A2);
          real basisEval29FD#2 = RMul(coeff29D5,prod29A4);
          real basisEval29FE#3 = RMul(coeff29E6,prod29AC);
          real basisEval29FF#2 = RMul(coeff29D8,prod29AF);
          real basisEval2A00#3 = RMul(one296B,prod29B9);
          real basisEval2A01#1 = RMul(coeff29EA,prod29BB);
          real basisEval2A02#1 = RMul(coeff29D8,prod29BF);
          real basisEval2A03#3 = RMul(coeff296A,prod29C1);
          real basisEval2A04#1 = RMul(coeff29EE,prod29C3);
          real basisEval2A05#4 = RMul(coeff29D5,prod29C7);
          real basisEval2A06#1 = RMul(coeff29EA,prod29C9);
          real basisEval2A07#2 = RMul(coeff29D8,prod29CB);
          real basisEval2A08#1 = RMul(coeff2977,prod2975);
          real basisEval2A09#2 = RMul(coeff2977,prod2980);
          real basisEval2A0A#1 = RMul(coeff298A,prod2984);
          real basisEval2A0B#2 = RMul(coeff296A,prod298C);
          real basisEval2A0C#2 = RMul(coeff2977,prod2993);
          real basisEval2A0D#1 = RMul(coeff298A,prod2996);
          real basisEval2A0E#1 = RMul(coeff29A6,prod299A);
          real basisEval2A0F#1 = RMul(coeff298A,prod29A0);
          real basisEval2A10#3 = RMul(coeff296A,prod29A2);
          real basisEval2A11#2 = RMul(coeff296A,prod29A8);
          real basisEval2A12#1 = RMul(coeff2977,prod29AF);
          real basisEval2A13#2 = RMul(coeff298A,prod29B2);
          real basisEval2A14#1 = RMul(coeff29A6,prod29B5);
          real basisEval2A15#1 = RMul(coeff29CD,prod29B9);
          real basisEval2A16#1 = RMul(coeff298A,prod29BF);
          real basisEval2A17#1 = RMul(coeff29A6,prod29C1);
          real basisEval2A18#1 = RMul(coeff296A,prod29C3);
          real basisEval2A19#3 = RMul(coeff296A,prod29C9);
          real basisEval2A1A#1 = RMul(coeff2977,prod29CB);
          real basisEval2A1B#2 = RMul(coeff296A,prod29CF);
          real basisEval2A1C#3 = RMul(one296B,prod2979);
          real basisEval2A1D#1 = RMul(coeff29D8,prod2980);
          real basisEval2A1E#3 = RMul(one296B,prod298C);
          real basisEval2A1F#2 = RMul(coeff2977,prod2996);
          real basisEval2A20#2 = RMul(coeff29D5,prod299C);
          real basisEval2A21#2 = RMul(coeff29D5,prod29A0);
          real basisEval2A22#3 = RMul(coeff296A,prod29A4);
          real basisEval2A23#3 = RMul(one296B,prod29A8);
          real basisEval2A24#1 = RMul(coeff29EA,prod29AF);
          real basisEval2A25#1 = RMul(coeff29EE,prod29B2);
          real basisEval2A26#1 = RMul(coeff29EA,prod29B5);
          real basisEval2A27#2 = RMul(coeff29D8,prod29BB);
          real basisEval2A28#2 = RMul(coeff29D8,prod29C1);
          real basisEval2A29#1 = RMul(coeff29D8,prod29C5);
          real basisEval2A2A#3 = RMul(coeff296A,prod29CB);
          real basisEval2A2B#3 = RMul(one296B,prod29CF);
          real basisEval2A2C#1 = RMul(coeff2977,prod2971);
          real basisEval2A2D#1 = RMul(coeff298A,prod297D);
          real basisEval2A2E#1 = RMul(coeff29A6,prod2990);
          real basisEval2A2F#1 = RMul(coeff298A,prod2993);
          real basisEval2A30#1 = RMul(coeff298A,prod299C);
          real basisEval2A31#1 = RMul(coeff29CD,prod29AC);
          real basisEval2A32#1 = RMul(coeff29A6,prod29AF);
          real basisEval2A33#1 = RMul(coeff2977,prod29B5);
          real basisEval2A34#1 = RMul(coeff29A6,prod29BB);
          real basisEval2A35#1 = RMul(coeff298A,prod29BD);
          real basisEval2A36#1 = RMul(coeff296A,prod29C7);
          real basisEval2A37#1 = RMul(coeff2977,prod29C9);
          tensor[84] intermediateCons2A38#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval297A,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2981,basisEval2985,basisEval2987,basisEval2989,basisEval298D,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2994,basisEval2997,basisEval299B,basisEval299D,basisEval299F,basisEval29A1,basisEval29A3,basisEval29A5,basisEval29A9,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval29B0,basisEval29B3,basisEval29B6,basisEval29BA,basisEval29BC,basisEval29BE,basisEval29C0,basisEval29C2,basisEval29C4,basisEval29C6,basisEval29C8,basisEval29CA,basisEval29CC,basisEval29D0];
          tensor[84] intermediateCons2A39#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D2,basisEval2976,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D4,basisEval2981,basisEval29D6,basisEval2969,basisEval29D7,basisEval29D9,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29DB,basisEval2994,basisEval29DC,basisEval29DD,basisEval2969,basisEval29DE,basisEval29DF,basisEval29A1,basisEval2969,basisEval29E0,basisEval29E1,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29E3,basisEval29B0,basisEval29E4,basisEval29E5,basisEval29E7,basisEval2969,basisEval29E8,basisEval29E9,basisEval29C0,basisEval29EB,basisEval2969,basisEval29EC,basisEval29ED,basisEval29EF,basisEval2969,basisEval29F0,basisEval29F1,basisEval2969,basisEval29F2,basisEval2969];
          tensor[84] intermediateCons2A3A#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval29F3,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2981,basisEval29F5,basisEval2969,basisEval29F6,basisEval29F7,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval29F9,basisEval2997,basisEval29FA,basisEval2969,basisEval299D,basisEval29DF,basisEval29FB,basisEval2969,basisEval29FC,basisEval29FD,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval29FF,basisEval29E4,basisEval29B6,basisEval2A00,basisEval2969,basisEval2A01,basisEval29BE,basisEval2A02,basisEval2A03,basisEval2969,basisEval2A04,basisEval29ED,basisEval2A05,basisEval2969,basisEval2A06,basisEval2A07,basisEval2969,basisEval29F2,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3B#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2A08,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2A09,basisEval2A0A,basisEval2969,basisEval2969,basisEval29D7,basisEval2989,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2A0C,basisEval2A0D,basisEval2A0E,basisEval2969,basisEval2969,basisEval29DE,basisEval299F,basisEval2A0F,basisEval2969,basisEval2969,basisEval2A10,basisEval29E1,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval2A12,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2969,basisEval2969,basisEval29E8,basisEval29BE,basisEval2A16,basisEval2A17,basisEval2969,basisEval2969,basisEval2A18,basisEval29ED,basisEval29C8,basisEval2969,basisEval2969,basisEval2A19,basisEval2A1A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3C#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval2969,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2A1D,basisEval29D6,basisEval2969,basisEval2969,basisEval29D7,basisEval29F7,basisEval2969,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval2A0C,basisEval2A1F,basisEval29DD,basisEval2969,basisEval2969,basisEval2A20,basisEval29DF,basisEval2A21,basisEval2969,basisEval2969,basisEval2A10,basisEval2A22,basisEval2969,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval2A24,basisEval2A25,basisEval2A26,basisEval29E7,basisEval2969,basisEval2969,basisEval2A27,basisEval29BE,basisEval29C0,basisEval2A28,basisEval2969,basisEval2969,basisEval29EC,basisEval2A29,basisEval2A05,basisEval2969,basisEval2969,basisEval2A19,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3D#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2C,basisEval2976,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2D,basisEval2A09,basisEval2985,basisEval2969,basisEval2969,basisEval2987,basisEval29F7,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2E,basisEval2A2F,basisEval2A1F,basisEval299B,basisEval2969,basisEval2969,basisEval2A30,basisEval299F,basisEval29FB,basisEval2969,basisEval2969,basisEval29FC,basisEval2A22,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A31,basisEval2A32,basisEval2A13,basisEval2A33,basisEval29BA,basisEval2969,basisEval2969,basisEval2A34,basisEval2A35,basisEval29C0,basisEval2A03,basisEval2969,basisEval2969,basisEval29C4,basisEval29ED,basisEval2A36,basisEval2969,basisEval2969,basisEval2A37,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          real vdot2B21#1 = VDot<84>(dofs2812,intermediateCons2A38);
          real vdot2B23#2 = VDot<84>(dofs2812,intermediateCons2A39);
          real vdot2B25#2 = VDot<84>(dofs2812,intermediateCons2A3A);
          tensor[3] tensor2B26#1 = <tensor[3]>[vdot2B21,vdot2B23,vdot2B25];
          real vdot2B2A#1 = VDot<84>(dofs2812,intermediateCons2A3B);
          real vdot2B2C#2 = VDot<84>(dofs2812,intermediateCons2A3C);
          tensor[3] tensor2B2D#1 = <tensor[3]>[vdot2B23,vdot2B2A,vdot2B2C];
          real vdot2B33#1 = VDot<84>(dofs2812,intermediateCons2A3D);
          tensor[3] tensor2B34#1 = <tensor[3]>[vdot2B25,vdot2B2C,vdot2B33];
          tensor[3,3] _t2B1F#1 = <tensor[3,3]>[tensor2B26,tensor2B2D,tensor2B34];
          real[3] _t2B4C#1 = EigenVals3x3(_t2B1F);
          real _t2B50#1 = Subscript<real[3]>(_t2B4C,ilit24C7);
          real basisEval2B6D#1 = RMul(one296B,prod2980);
          real basisEval2B80#1 = RMul(one296B,prod2993);
          real basisEval2B83#1 = RMul(one296B,prod2996);
          real basisEval2B8B#3 = RMul(coeff296A,prod299E);
          real basisEval2B9C#1 = RMul(one296B,prod29AF);
          real basisEval2B9F#1 = RMul(one296B,prod29B2);
          real basisEval2BA2#1 = RMul(one296B,prod29B5);
          real basisEval2BAA#2 = RMul(coeff296A,prod29BD);
          real basisEval2BAC#2 = RMul(coeff296A,prod29BF);
          real basisEval2BB2#1 = RMul(coeff29D5,prod29C5);
          real prod52BBD#1 = RMul(prod429AA,varAcc2968);
          real prod2BBE#1 = RMul(one296B,prod52BBD);
          real prod2BBF#2 = RMul(one296B,prod2BBE);
          real basisEval2BC0#2 = RMul(one296B,prod2BBF);
          real prod2BC1#1 = RMul(varAcc2967,prod429AA);
          real prod2BC2#3 = RMul(one296B,prod2BC1);
          real basisEval2BC3#1 = RMul(one296B,prod2BC2);
          real prod2BC4#1 = RMul(prod22982,prod3298E);
          real prod2BC5#3 = RMul(one296B,prod2BC4);
          real basisEval2BC6#1 = RMul(one296B,prod2BC5);
          real prod2BC7#1 = RMul(prod32998,prod2297B);
          real prod2BC8#3 = RMul(one296B,prod2BC7);
          real basisEval2BC9#1 = RMul(one296B,prod2BC8);
          real prod2BCA#1 = RMul(prod429B7,varAcc2968);
          real prod2BCB#3 = RMul(one296B,prod2BCA);
          real basisEval2BCC#1 = RMul(one296B,prod2BCB);
          real prod52BCD#1 = RMul(prod429B7,varAcc2967);
          real prod2BCE#1 = RMul(prod52BCD,one296B);
          real prod2BCF#2 = RMul(one296B,prod2BCE);
          real basisEval2BD0#2 = RMul(one296B,prod2BCF);
          real prod2BD1#3 = RMul(varAcc2966,prod29AB);
          real basisEval2BD2#1 = RMul(coeff296A,prod2BD1);
          real prod2BD3#2 = RMul(varAcc2966,prod29AE);
          real basisEval2BD4#2 = RMul(coeff296A,prod2BD3);
          real prod2BD5#2 = RMul(varAcc2966,prod29B1);
          real basisEval2BD6#1 = RMul(coeff296A,prod2BD5);
          real prod2BD7#2 = RMul(varAcc2966,prod29B4);
          real basisEval2BD8#2 = RMul(coeff296A,prod2BD7);
          real prod2BD9#3 = RMul(varAcc2966,prod29B8);
          real basisEval2BDA#1 = RMul(coeff296A,prod2BD9);
          real prod2BDB#3 = RMul(prod2298B,prod298F);
          real basisEval2BDC#1 = RMul(coeff29D5,prod2BDB);
          real prod2BDD#2 = RMul(prod2298B,prod2992);
          real basisEval2BDE#2 = RMul(coeff29D5,prod2BDD);
          real prod2BDF#2 = RMul(prod2298B,prod2995);
          real basisEval2BE0#2 = RMul(coeff29D5,prod2BDF);
          real prod2BE1#3 = RMul(prod2298B,prod2999);
          real basisEval2BE2#1 = RMul(coeff29D5,prod2BE1);
          real prod2BE3#3 = RMul(prod329A7,prod297C);
          real basisEval2BE4#1 = RMul(coeff29D8,prod2BE3);
          real prod2BE5#2 = RMul(prod329A7,prod297F);
          real basisEval2BE6#1 = RMul(coeff29D8,prod2BE5);
          real prod2BE7#3 = RMul(prod329A7,prod2983);
          real basisEval2BE8#1 = RMul(coeff29D8,prod2BE7);
          real prod2BE9#3 = RMul(prod429CE,prod2970);
          real basisEval2BEA#1 = RMul(coeff29E6,prod2BE9);
          real prod2BEB#3 = RMul(prod429CE,prod2974);
          real basisEval2BEC#1 = RMul(coeff29E6,prod2BEB);
          real prod52BEE#1 = RMul(prod429CE,varAcc2966);
          real prod2BEF#2 = RMul(prod52BEE,prod296C);
          real basisEval2BF0#1 = RMul(coeff2977,prod2BEF);
          real basisEval2BF5#1 = RMul(one296B,prod2986);
          real basisEval2BFA#1 = RMul(one296B,prod299C);
          real basisEval2BFC#1 = RMul(one296B,prod29A2);
          real basisEval2C03#1 = RMul(one296B,prod29BB);
          real basisEval2C04#1 = RMul(coeff29D5,prod29BF);
          real basisEval2C06#1 = RMul(one296B,prod29C3);
          real basisEval2C07#2 = RMul(coeff296A,prod29C5);
          real basisEval2C08#1 = RMul(one296B,prod29C9);
          real basisEval2C0B#1 = RMul(coeff296A,prod2BC2);
          real basisEval2C0C#1 = RMul(coeff29D5,prod2BC5);
          real basisEval2C0D#1 = RMul(coeff29D8,prod2BC8);
          real basisEval2C0E#1 = RMul(coeff29E6,prod2BCB);
          real basisEval2C0F#1 = RMul(coeff2977,prod2BCF);
          real basisEval2C10#1 = RMul(one296B,prod2BD1);
          real basisEval2C11#2 = RMul(coeff29D5,prod2BD5);
          real basisEval2C12#1 = RMul(coeff29D8,prod2BD7);
          real basisEval2C13#1 = RMul(coeff29E6,prod2BD9);
          real basisEval2C14#1 = RMul(one296B,prod2BDB);
          real basisEval2C15#1 = RMul(coeff296A,prod2BDD);
          real basisEval2C16#1 = RMul(coeff29D8,prod2BE1);
          real basisEval2C17#1 = RMul(one296B,prod2BE3);
          real basisEval2C18#2 = RMul(coeff296A,prod2BE5);
          real basisEval2C19#1 = RMul(coeff29D5,prod2BE7);
          real basisEval2C1A#1 = RMul(one296B,prod2BE9);
          real basisEval2C1B#1 = RMul(coeff296A,prod2BEB);
          real basisEval2C1C#2 = RMul(one296B,prod2BEF);
          real basisEval2C1F#1 = RMul(one296B,prod2988);
          real basisEval2C24#1 = RMul(one296B,prod29A0);
          real basisEval2C26#1 = RMul(one296B,prod29A4);
          real basisEval2C2B#1 = RMul(coeff29D5,prod29BD);
          real basisEval2C2C#1 = RMul(one296B,prod29C1);
          real basisEval2C2D#1 = RMul(one296B,prod29C7);
          real basisEval2C2F#1 = RMul(one296B,prod29CB);
          real basisEval2C30#1 = RMul(coeff2977,prod2BBF);
          real basisEval2C31#1 = RMul(coeff29E6,prod2BC2);
          real basisEval2C32#1 = RMul(coeff29D8,prod2BC5);
          real basisEval2C33#1 = RMul(coeff29D5,prod2BC8);
          real basisEval2C34#1 = RMul(coeff296A,prod2BCB);
          real basisEval2C35#1 = RMul(coeff29E6,prod2BD1);
          real basisEval2C36#1 = RMul(coeff29D8,prod2BD3);
          real basisEval2C37#1 = RMul(one296B,prod2BD9);
          real basisEval2C38#1 = RMul(coeff29D8,prod2BDB);
          real basisEval2C39#1 = RMul(coeff296A,prod2BDF);
          real basisEval2C3A#1 = RMul(one296B,prod2BE1);
          real basisEval2C3B#1 = RMul(coeff29D5,prod2BE3);
          real basisEval2C3C#1 = RMul(one296B,prod2BE7);
          real basisEval2C3D#1 = RMul(coeff296A,prod2BE9);
          real basisEval2C3E#1 = RMul(one296B,prod2BEB);
          tensor[84] intermediateCons2C3F#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval29D2,basisEval29F3,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D4,basisEval2B6D,basisEval29F5,basisEval29D7,basisEval29F7,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29DB,basisEval2B80,basisEval2B83,basisEval29FA,basisEval29DE,basisEval2B8B,basisEval29FB,basisEval29E0,basisEval29FD,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29E3,basisEval2B9C,basisEval2B9F,basisEval2BA2,basisEval2A00,basisEval29E8,basisEval2BAA,basisEval2BAC,basisEval2A03,basisEval29EC,basisEval2BB2,basisEval2A05,basisEval29F0,basisEval2A07,basisEval29F2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2BC0,basisEval2BC3,basisEval2BC6,basisEval2BC9,basisEval2BCC,basisEval2BD0,basisEval2BD2,basisEval2BD4,basisEval2BD6,basisEval2BD8,basisEval2BDA,basisEval2BDC,basisEval2BDE,basisEval2BE0,basisEval2BE2,basisEval2BE4,basisEval2BE6,basisEval2BE8,basisEval2BEA,basisEval2BEC,basisEval2BF0];
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval29D2,basisEval2976,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval29D4,basisEval2981,basisEval29D6,basisEval2969,basisEval2BF5,basisEval29F7,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval29DB,basisEval2994,basisEval29DC,basisEval29DD,basisEval2969,basisEval2BFA,basisEval2B8B,basisEval2A21,basisEval2969,basisEval2BFC,basisEval2A22,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval29E3,basisEval29B0,basisEval29E4,basisEval29E5,basisEval29E7,basisEval2969,basisEval2C03,basisEval2BAA,basisEval2C04,basisEval2A28,basisEval2969,basisEval2C06,basisEval2C07,basisEval2A05,basisEval2969,basisEval2C08,basisEval2A2A,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2BC0,basisEval2C0B,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2969,basisEval2C10,basisEval2BD4,basisEval2C11,basisEval2C12,basisEval2C13,basisEval2969,basisEval2C14,basisEval2C15,basisEval2BE0,basisEval2C16,basisEval2969,basisEval2C17,basisEval2C18,basisEval2C19,basisEval2969,basisEval2C1A,basisEval2C1B,basisEval2969,basisEval2C1C,basisEval2969];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2972,basisEval29F3,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval29F4,basisEval2981,basisEval29F5,basisEval2969,basisEval29D7,basisEval2C1F,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval29F8,basisEval29F9,basisEval2997,basisEval29FA,basisEval2969,basisEval2A20,basisEval2B8B,basisEval2C24,basisEval2969,basisEval2A10,basisEval2C26,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval29FE,basisEval29FF,basisEval29E4,basisEval29B6,basisEval2A00,basisEval2969,basisEval2A27,basisEval2C2B,basisEval2BAC,basisEval2C2C,basisEval2969,basisEval29EC,basisEval2C07,basisEval2C2D,basisEval2969,basisEval2A19,basisEval2C2F,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2C30,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2BD0,basisEval2969,basisEval2C35,basisEval2C36,basisEval2C11,basisEval2BD8,basisEval2C37,basisEval2969,basisEval2C38,basisEval2BDE,basisEval2C39,basisEval2C3A,basisEval2969,basisEval2C3B,basisEval2C18,basisEval2C3C,basisEval2969,basisEval2C3D,basisEval2C3E,basisEval2969,basisEval2C1C,basisEval2969,basisEval2969];
          real vdot2D36#1 = VDot<84>(dofs2812,intermediateCons2C3F);
          real vdot2D38#1 = VDot<84>(dofs2812,intermediateCons2C40);
          real vdot2D3A#1 = VDot<84>(dofs2812,intermediateCons2C41);
          tensor[3] probe_l_62D34#2 = <tensor[3]>[vdot2D36,vdot2D38,vdot2D3A];
          real op1_e3_l_82D43#1 = VDot<3>(probe_l_62D34,probe_l_62D34);
          real op1_e3_l_92D46#1 = Sqrt(op1_e3_l_82D43);
          real op1_e3_l_102D49#1 = RNeg(_t2B50);
          real op1_e3_l_112D4C#1 = RAdd(fBias2481,op1_e3_l_92D46);
          real _t2D4F#1 = RDiv(op1_e3_l_102D49,op1_e3_l_112D4C);
          bool _t2D52#1 = GT<real>(_t2D4F,fStrTh247D);
          if _t2D52 then goto ASSIGN439E else goto ASSIGN40DF
        ASSIGN439E:  preds = [COND2D54]
          bool _t2D57#1 = GTE<real>(one296B,fMaskTh247F);
          if _t2D57 then goto ASSIGN2D5B else goto ASSIGN40DE
        ASSIGN2D5B:  preds = [COND2D59]
          bool _t2D5A#1 = true;
          goto JOIN2D5E
        JOIN2D5E:  preds = [ASSIGN2D5B,ASSIGN40DE]
          bool _t2D5C#1 = phi(_t2D5A,_t2D5D)
          goto JOIN2D61
        JOIN2D61:  preds = [JOIN2D5E,ASSIGN40DF]
          bool _t2D5F#1 = phi(_t2D5C,_t2D60)
          goto JOIN2D64
        JOIN2D64:  preds = [JOIN2D61,ASSIGN40E0]
          bool _t2D62#1 = phi(_t2D5F,_t2D63)
          bool _t2D65#1 = BNot(_t2D62);
          if _t2D65 then goto SAVE2D68 else goto JOIN2D6A
        SAVE2D68:  preds = [COND2D67]
          self.rayN = rayN24AB;
          active
          goto JOIN2D6A
        JOIN2D6A:  preds = [*ACTIVE2D69,COND2D67]
          bool _t2D6B#1 = BNot(analytical248B);
          if _t2D6B then goto ASSIGN2E6E else goto ASSIGN3EA0
        ASSIGN2E6E:  preds = [COND2D6D]
          int ilit2D6F#1 = 84;
          int mulRes2D70#84 = IMul(_t246B,ilit2D6F);
          int idx2D73#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,mulRes2D70);
          int ilit2D74#87 = 1;
          int addRes2D75#1 = IAdd(mulRes2D70,ilit2D74);
          int idx2D76#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D75);
          int ilit2D77#3 = 2;
          int addRes2D78#1 = IAdd(mulRes2D70,ilit2D77);
          int idx2D79#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D78);
          int ilit2D7A#1 = 3;
          int addRes2D7B#1 = IAdd(mulRes2D70,ilit2D7A);
          int idx2D7C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7B);
          int ilit2D7D#1 = 4;
          int addRes2D7E#1 = IAdd(mulRes2D70,ilit2D7D);
          int idx2D7F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7E);
          int ilit2D80#1 = 5;
          int addRes2D81#1 = IAdd(mulRes2D70,ilit2D80);
          int idx2D82#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D81);
          int ilit2D83#1 = 6;
          int addRes2D84#1 = IAdd(mulRes2D70,ilit2D83);
          int idx2D85#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D84);
          int ilit2D86#1 = 7;
          int addRes2D87#1 = IAdd(mulRes2D70,ilit2D86);
          int idx2D88#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D87);
          int ilit2D89#1 = 8;
          int addRes2D8A#1 = IAdd(mulRes2D70,ilit2D89);
          int idx2D8B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8A);
          int ilit2D8C#1 = 9;
          int addRes2D8D#1 = IAdd(mulRes2D70,ilit2D8C);
          int idx2D8E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8D);
          int ilit2D8F#1 = 10;
          int addRes2D90#1 = IAdd(mulRes2D70,ilit2D8F);
          int idx2D91#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D90);
          int ilit2D92#1 = 11;
          int addRes2D93#1 = IAdd(mulRes2D70,ilit2D92);
          int idx2D94#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D93);
          int ilit2D95#1 = 12;
          int addRes2D96#1 = IAdd(mulRes2D70,ilit2D95);
          int idx2D97#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D96);
          int ilit2D98#1 = 13;
          int addRes2D99#1 = IAdd(mulRes2D70,ilit2D98);
          int idx2D9A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D99);
          int ilit2D9B#1 = 14;
          int addRes2D9C#1 = IAdd(mulRes2D70,ilit2D9B);
          int idx2D9D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9C);
          int ilit2D9E#1 = 15;
          int addRes2D9F#1 = IAdd(mulRes2D70,ilit2D9E);
          int idx2DA0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9F);
          int ilit2DA1#1 = 16;
          int addRes2DA2#1 = IAdd(mulRes2D70,ilit2DA1);
          int idx2DA3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA2);
          int ilit2DA4#1 = 17;
          int addRes2DA5#1 = IAdd(mulRes2D70,ilit2DA4);
          int idx2DA6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA5);
          int ilit2DA7#1 = 18;
          int addRes2DA8#1 = IAdd(mulRes2D70,ilit2DA7);
          int idx2DA9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA8);
          int ilit2DAA#1 = 19;
          int addRes2DAB#1 = IAdd(mulRes2D70,ilit2DAA);
          int idx2DAC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAB);
          int ilit2DAD#1 = 20;
          int addRes2DAE#1 = IAdd(mulRes2D70,ilit2DAD);
          int idx2DAF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAE);
          int ilit2DB0#1 = 21;
          int addRes2DB1#1 = IAdd(mulRes2D70,ilit2DB0);
          int idx2DB2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB1);
          int ilit2DB3#1 = 22;
          int addRes2DB4#1 = IAdd(mulRes2D70,ilit2DB3);
          int idx2DB5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB4);
          int ilit2DB6#1 = 23;
          int addRes2DB7#1 = IAdd(mulRes2D70,ilit2DB6);
          int idx2DB8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB7);
          int ilit2DB9#1 = 24;
          int addRes2DBA#1 = IAdd(mulRes2D70,ilit2DB9);
          int idx2DBB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBA);
          int ilit2DBC#1 = 25;
          int addRes2DBD#1 = IAdd(mulRes2D70,ilit2DBC);
          int idx2DBE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBD);
          int ilit2DBF#1 = 26;
          int addRes2DC0#1 = IAdd(mulRes2D70,ilit2DBF);
          int idx2DC1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC0);
          int ilit2DC2#1 = 27;
          int addRes2DC3#1 = IAdd(mulRes2D70,ilit2DC2);
          int idx2DC4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC3);
          int ilit2DC5#1 = 28;
          int addRes2DC6#1 = IAdd(mulRes2D70,ilit2DC5);
          int idx2DC7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC6);
          int ilit2DC8#1 = 29;
          int addRes2DC9#1 = IAdd(mulRes2D70,ilit2DC8);
          int idx2DCA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC9);
          int ilit2DCB#1 = 30;
          int addRes2DCC#1 = IAdd(mulRes2D70,ilit2DCB);
          int idx2DCD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCC);
          int ilit2DCE#1 = 31;
          int addRes2DCF#1 = IAdd(mulRes2D70,ilit2DCE);
          int idx2DD0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCF);
          int ilit2DD1#1 = 32;
          int addRes2DD2#1 = IAdd(mulRes2D70,ilit2DD1);
          int idx2DD3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD2);
          int ilit2DD4#1 = 33;
          int addRes2DD5#1 = IAdd(mulRes2D70,ilit2DD4);
          int idx2DD6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD5);
          int ilit2DD7#1 = 34;
          int addRes2DD8#1 = IAdd(mulRes2D70,ilit2DD7);
          int idx2DD9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD8);
          int ilit2DDA#1 = 35;
          int addRes2DDB#1 = IAdd(mulRes2D70,ilit2DDA);
          int idx2DDC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDB);
          int ilit2DDD#1 = 36;
          int addRes2DDE#1 = IAdd(mulRes2D70,ilit2DDD);
          int idx2DDF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDE);
          int ilit2DE0#1 = 37;
          int addRes2DE1#1 = IAdd(mulRes2D70,ilit2DE0);
          int idx2DE2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE1);
          int ilit2DE3#1 = 38;
          int addRes2DE4#1 = IAdd(mulRes2D70,ilit2DE3);
          int idx2DE5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE4);
          int ilit2DE6#1 = 39;
          int addRes2DE7#1 = IAdd(mulRes2D70,ilit2DE6);
          int idx2DE8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE7);
          int ilit2DE9#1 = 40;
          int addRes2DEA#1 = IAdd(mulRes2D70,ilit2DE9);
          int idx2DEB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DEA);
          int ilit2DEC#1 = 41;
          int addRes2DED#1 = IAdd(mulRes2D70,ilit2DEC);
          int idx2DEE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DED);
          int ilit2DEF#1 = 42;
          int addRes2DF0#1 = IAdd(mulRes2D70,ilit2DEF);
          int idx2DF1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF0);
          int ilit2DF2#1 = 43;
          int addRes2DF3#1 = IAdd(mulRes2D70,ilit2DF2);
          int idx2DF4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF3);
          int ilit2DF5#1 = 44;
          int addRes2DF6#1 = IAdd(mulRes2D70,ilit2DF5);
          int idx2DF7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF6);
          int ilit2DF8#1 = 45;
          int addRes2DF9#1 = IAdd(mulRes2D70,ilit2DF8);
          int idx2DFA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF9);
          int ilit2DFB#1 = 46;
          int addRes2DFC#1 = IAdd(mulRes2D70,ilit2DFB);
          int idx2DFD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFC);
          int ilit2DFE#1 = 47;
          int addRes2DFF#1 = IAdd(mulRes2D70,ilit2DFE);
          int idx2E00#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFF);
          int ilit2E01#1 = 48;
          int addRes2E02#1 = IAdd(mulRes2D70,ilit2E01);
          int idx2E03#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E02);
          int ilit2E04#1 = 49;
          int addRes2E05#1 = IAdd(mulRes2D70,ilit2E04);
          int idx2E06#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E05);
          int ilit2E07#1 = 50;
          int addRes2E08#1 = IAdd(mulRes2D70,ilit2E07);
          int idx2E09#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E08);
          int ilit2E0A#1 = 51;
          int addRes2E0B#1 = IAdd(mulRes2D70,ilit2E0A);
          int idx2E0C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0B);
          int ilit2E0D#1 = 52;
          int addRes2E0E#1 = IAdd(mulRes2D70,ilit2E0D);
          int idx2E0F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0E);
          int ilit2E10#1 = 53;
          int addRes2E11#1 = IAdd(mulRes2D70,ilit2E10);
          int idx2E12#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E11);
          int ilit2E13#1 = 54;
          int addRes2E14#1 = IAdd(mulRes2D70,ilit2E13);
          int idx2E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E14);
          int ilit2E16#1 = 55;
          int addRes2E17#1 = IAdd(mulRes2D70,ilit2E16);
          int idx2E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E17);
          int ilit2E19#1 = 56;
          int addRes2E1A#1 = IAdd(mulRes2D70,ilit2E19);
          int idx2E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1A);
          int ilit2E1C#1 = 57;
          int addRes2E1D#1 = IAdd(mulRes2D70,ilit2E1C);
          int idx2E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1D);
          int ilit2E1F#1 = 58;
          int addRes2E20#1 = IAdd(mulRes2D70,ilit2E1F);
          int idx2E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E20);
          int ilit2E22#1 = 59;
          int addRes2E23#1 = IAdd(mulRes2D70,ilit2E22);
          int idx2E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E23);
          int ilit2E25#1 = 60;
          int addRes2E26#1 = IAdd(mulRes2D70,ilit2E25);
          int idx2E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E26);
          int ilit2E28#1 = 61;
          int addRes2E29#1 = IAdd(mulRes2D70,ilit2E28);
          int idx2E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E29);
          int ilit2E2B#1 = 62;
          int addRes2E2C#1 = IAdd(mulRes2D70,ilit2E2B);
          int idx2E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2C);
          int ilit2E2E#1 = 63;
          int addRes2E2F#1 = IAdd(mulRes2D70,ilit2E2E);
          int idx2E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2F);
          int ilit2E31#1 = 64;
          int addRes2E32#1 = IAdd(mulRes2D70,ilit2E31);
          int idx2E33#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E32);
          int ilit2E34#1 = 65;
          int addRes2E35#1 = IAdd(mulRes2D70,ilit2E34);
          int idx2E36#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E35);
          int ilit2E37#1 = 66;
          int addRes2E38#1 = IAdd(mulRes2D70,ilit2E37);
          int idx2E39#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E38);
          int ilit2E3A#1 = 67;
          int addRes2E3B#1 = IAdd(mulRes2D70,ilit2E3A);
          int idx2E3C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3B);
          int ilit2E3D#1 = 68;
          int addRes2E3E#1 = IAdd(mulRes2D70,ilit2E3D);
          int idx2E3F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3E);
          int ilit2E40#1 = 69;
          int addRes2E41#1 = IAdd(mulRes2D70,ilit2E40);
          int idx2E42#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E41);
          int ilit2E43#1 = 70;
          int addRes2E44#1 = IAdd(mulRes2D70,ilit2E43);
          int idx2E45#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E44);
          int ilit2E46#1 = 71;
          int addRes2E47#1 = IAdd(mulRes2D70,ilit2E46);
          int idx2E48#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E47);
          int ilit2E49#1 = 72;
          int addRes2E4A#1 = IAdd(mulRes2D70,ilit2E49);
          int idx2E4B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4A);
          int ilit2E4C#1 = 73;
          int addRes2E4D#1 = IAdd(mulRes2D70,ilit2E4C);
          int idx2E4E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4D);
          int ilit2E4F#1 = 74;
          int addRes2E50#1 = IAdd(mulRes2D70,ilit2E4F);
          int idx2E51#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E50);
          int ilit2E52#1 = 75;
          int addRes2E53#1 = IAdd(mulRes2D70,ilit2E52);
          int idx2E54#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E53);
          int ilit2E55#1 = 76;
          int addRes2E56#1 = IAdd(mulRes2D70,ilit2E55);
          int idx2E57#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E56);
          int ilit2E58#1 = 77;
          int addRes2E59#1 = IAdd(mulRes2D70,ilit2E58);
          int idx2E5A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E59);
          int ilit2E5B#1 = 78;
          int addRes2E5C#1 = IAdd(mulRes2D70,ilit2E5B);
          int idx2E5D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5C);
          int ilit2E5E#1 = 79;
          int addRes2E5F#1 = IAdd(mulRes2D70,ilit2E5E);
          int idx2E60#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5F);
          int ilit2E61#1 = 80;
          int addRes2E62#1 = IAdd(mulRes2D70,ilit2E61);
          int idx2E63#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E62);
          int ilit2E64#1 = 81;
          int addRes2E65#1 = IAdd(mulRes2D70,ilit2E64);
          int idx2E66#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E65);
          int ilit2E67#1 = 82;
          int addRes2E68#1 = IAdd(mulRes2D70,ilit2E67);
          int idx2E69#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E68);
          int ilit2E6A#1 = 83;
          int addRes2E6B#1 = IAdd(mulRes2D70,ilit2E6A);
          int idx2E6C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E6B);
          int mulRes2F72#1 = IMul(ilit2D74,idx2D73);
          int mulRes2F74#1 = IMul(ilit2D74,idx2D76);
          int mulRes2F77#1 = IMul(ilit2D74,idx2D79);
          int mulRes2F7A#1 = IMul(ilit2D74,idx2D7C);
          int mulRes2F7D#1 = IMul(ilit2D74,idx2D7F);
          int mulRes2F80#1 = IMul(ilit2D74,idx2D82);
          int mulRes2F83#1 = IMul(ilit2D74,idx2D85);
          int mulRes2F86#1 = IMul(ilit2D74,idx2D88);
          int mulRes2F89#1 = IMul(ilit2D74,idx2D8B);
          int mulRes2F8C#1 = IMul(ilit2D74,idx2D8E);
          int mulRes2F8F#1 = IMul(ilit2D74,idx2D91);
          int mulRes2F92#1 = IMul(ilit2D74,idx2D94);
          int mulRes2F95#1 = IMul(ilit2D74,idx2D97);
          int mulRes2F98#1 = IMul(ilit2D74,idx2D9A);
          int mulRes2F9B#1 = IMul(ilit2D74,idx2D9D);
          int mulRes2F9E#1 = IMul(ilit2D74,idx2DA0);
          int mulRes2FA1#1 = IMul(ilit2D74,idx2DA3);
          int mulRes2FA4#1 = IMul(ilit2D74,idx2DA6);
          int mulRes2FA7#1 = IMul(ilit2D74,idx2DA9);
          int mulRes2FAA#1 = IMul(ilit2D74,idx2DAC);
          int mulRes2FAD#1 = IMul(ilit2D74,idx2DAF);
          int mulRes2FB0#1 = IMul(ilit2D74,idx2DB2);
          int mulRes2FB3#1 = IMul(ilit2D74,idx2DB5);
          int mulRes2FB6#1 = IMul(ilit2D74,idx2DB8);
          int mulRes2FB9#1 = IMul(ilit2D74,idx2DBB);
          int mulRes2FBC#1 = IMul(ilit2D74,idx2DBE);
          int mulRes2FBF#1 = IMul(ilit2D74,idx2DC1);
          int mulRes2FC2#1 = IMul(ilit2D74,idx2DC4);
          int mulRes2FC5#1 = IMul(ilit2D74,idx2DC7);
          int mulRes2FC8#1 = IMul(ilit2D74,idx2DCA);
          int mulRes2FCB#1 = IMul(ilit2D74,idx2DCD);
          int mulRes2FCE#1 = IMul(ilit2D74,idx2DD0);
          int mulRes2FD1#1 = IMul(ilit2D74,idx2DD3);
          int mulRes2FD4#1 = IMul(ilit2D74,idx2DD6);
          int mulRes2FD7#1 = IMul(ilit2D74,idx2DD9);
          int mulRes2FDA#1 = IMul(ilit2D74,idx2DDC);
          int mulRes2FDD#1 = IMul(ilit2D74,idx2DDF);
          int mulRes2FE0#1 = IMul(ilit2D74,idx2DE2);
          int mulRes2FE3#1 = IMul(ilit2D74,idx2DE5);
          int mulRes2FE6#1 = IMul(ilit2D74,idx2DE8);
          int mulRes2FE9#1 = IMul(ilit2D74,idx2DEB);
          int mulRes2FEC#1 = IMul(ilit2D74,idx2DEE);
          int mulRes2FEF#1 = IMul(ilit2D74,idx2DF1);
          int mulRes2FF2#1 = IMul(ilit2D74,idx2DF4);
          int mulRes2FF5#1 = IMul(ilit2D74,idx2DF7);
          int mulRes2FF8#1 = IMul(ilit2D74,idx2DFA);
          int mulRes2FFB#1 = IMul(ilit2D74,idx2DFD);
          int mulRes2FFE#1 = IMul(ilit2D74,idx2E00);
          int mulRes3001#1 = IMul(ilit2D74,idx2E03);
          int mulRes3004#1 = IMul(ilit2D74,idx2E06);
          int mulRes3007#1 = IMul(ilit2D74,idx2E09);
          int mulRes300A#1 = IMul(ilit2D74,idx2E0C);
          int mulRes300D#1 = IMul(ilit2D74,idx2E0F);
          int mulRes3010#1 = IMul(ilit2D74,idx2E12);
          int mulRes3013#1 = IMul(ilit2D74,idx2E15);
          int mulRes3016#1 = IMul(ilit2D74,idx2E18);
          int mulRes3019#1 = IMul(ilit2D74,idx2E1B);
          int mulRes301C#1 = IMul(ilit2D74,idx2E1E);
          int mulRes301F#1 = IMul(ilit2D74,idx2E21);
          int mulRes3022#1 = IMul(ilit2D74,idx2E24);
          int mulRes3025#1 = IMul(ilit2D74,idx2E27);
          int mulRes3028#1 = IMul(ilit2D74,idx2E2A);
          int mulRes302B#1 = IMul(ilit2D74,idx2E2D);
          int mulRes302E#1 = IMul(ilit2D74,idx2E30);
          int mulRes3031#1 = IMul(ilit2D74,idx2E33);
          int mulRes3034#1 = IMul(ilit2D74,idx2E36);
          int mulRes3037#1 = IMul(ilit2D74,idx2E39);
          int mulRes303A#1 = IMul(ilit2D74,idx2E3C);
          int mulRes303D#1 = IMul(ilit2D74,idx2E3F);
          int mulRes3040#1 = IMul(ilit2D74,idx2E42);
          int mulRes3043#1 = IMul(ilit2D74,idx2E45);
          int mulRes3046#1 = IMul(ilit2D74,idx2E48);
          int mulRes3049#1 = IMul(ilit2D74,idx2E4B);
          int mulRes304C#1 = IMul(ilit2D74,idx2E4E);
          int mulRes304F#1 = IMul(ilit2D74,idx2E51);
          int mulRes3052#1 = IMul(ilit2D74,idx2E54);
          int mulRes3055#1 = IMul(ilit2D74,idx2E57);
          int mulRes3058#1 = IMul(ilit2D74,idx2E5A);
          int mulRes305B#1 = IMul(ilit2D74,idx2E5D);
          int mulRes305E#1 = IMul(ilit2D74,idx2E60);
          int mulRes3061#1 = IMul(ilit2D74,idx2E63);
          int mulRes3064#1 = IMul(ilit2D74,idx2E66);
          int mulRes3067#1 = IMul(ilit2D74,idx2E69);
          int mulRes306A#1 = IMul(ilit2D74,idx2E6C);
          real dof306B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F72);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F74);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F77);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7A);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7D);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F80);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F83);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F86);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F89);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8C);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8F);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F92);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F95);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F98);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9B);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9E);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA1);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA4);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA7);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAA);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAD);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB0);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB3);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB6);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB9);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBC);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBF);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC2);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC5);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC8);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCB);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCE);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD1);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD4);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD7);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDA);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDD);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE0);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE3);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE6);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE9);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEC);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEF);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF2);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF5);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF8);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFB);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFE);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3001);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3004);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3007);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300A);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300D);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3010);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3013);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3016);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3019);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301C);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301F);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3022);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3025);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3028);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302B);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302E);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3031);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3034);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3037);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303A);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303D);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3040);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3043);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3046);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3049);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304C);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304F);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3052);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3055);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3058);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305B);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305E);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3061);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3064);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3067);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes306A);
          tensor[84] dofs30BF#9 = <tensor[84]>[dof306B,dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE];
          real varAcc3213#20 = VIndex<3,0>(pos24B7);
          real varAcc3214#10 = VIndex<3,1>(pos24B7);
          real varAcc3215#10 = VIndex<3,2>(pos24B7);
          real basisEval3216#378 = 0.e0;
          real coeff3217#47 = 0.2e1;
          real one3218#79 = 0.1e1;
          real prod3219#6 = RMul(one3218,one3218);
          real prod321A#2 = RMul(one3218,prod3219);
          real basisEval321B#3 = RMul(coeff3217,prod321A);
          real prod321D#5 = RMul(one3218,varAcc3215);
          real prod321E#3 = RMul(one3218,prod321D);
          real basisEval321F#5 = RMul(coeff3217,prod321E);
          real prod3221#5 = RMul(varAcc3214,one3218);
          real prod3222#3 = RMul(one3218,prod3221);
          real basisEval3223#5 = RMul(coeff3217,prod3222);
          real coeff3224#25 = 0.6e1;
          real prod3226#3 = RMul(varAcc3213,prod3219);
          real basisEval3227#1 = RMul(coeff3224,prod3226);
          real prod23228#5 = RMul(varAcc3215,varAcc3215);
          real prod3229#4 = RMul(one3218,prod23228);
          real prod322A#4 = RMul(one3218,prod3229);
          real basisEval322B#2 = RMul(coeff3217,prod322A);
          real prod322C#4 = RMul(varAcc3214,varAcc3215);
          real prod322D#4 = RMul(one3218,prod322C);
          real basisEval322E#5 = RMul(coeff3217,prod322D);
          real prod2322F#5 = RMul(varAcc3214,varAcc3214);
          real prod3230#4 = RMul(prod2322F,one3218);
          real prod3231#4 = RMul(one3218,prod3230);
          real basisEval3232#2 = RMul(coeff3217,prod3231);
          real prod3233#4 = RMul(varAcc3213,prod321D);
          real basisEval3234#2 = RMul(coeff3224,prod3233);
          real prod3235#4 = RMul(varAcc3213,prod3221);
          real basisEval3236#2 = RMul(coeff3224,prod3235);
          real coeff3237#15 = 0.12e2;
          real prod23238#11 = RMul(varAcc3213,varAcc3213);
          real prod3239#4 = RMul(prod23238,prod3219);
          real basisEval323A#1 = RMul(coeff3237,prod3239);
          real prod3323B#4 = RMul(prod23228,varAcc3215);
          real prod323C#3 = RMul(one3218,prod3323B);
          real prod323D#4 = RMul(one3218,prod323C);
          real basisEval323E#2 = RMul(coeff3217,prod323D);
          real prod323F#3 = RMul(varAcc3214,prod23228);
          real prod3240#5 = RMul(one3218,prod323F);
          real basisEval3241#3 = RMul(coeff3217,prod3240);
          real prod3242#3 = RMul(prod2322F,varAcc3215);
          real prod3243#5 = RMul(one3218,prod3242);
          real basisEval3244#3 = RMul(coeff3217,prod3243);
          real prod33245#4 = RMul(prod2322F,varAcc3214);
          real prod3246#3 = RMul(prod33245,one3218);
          real prod3247#4 = RMul(one3218,prod3246);
          real basisEval3248#2 = RMul(coeff3217,prod3247);
          real prod3249#5 = RMul(varAcc3213,prod3229);
          real basisEval324A#2 = RMul(coeff3224,prod3249);
          real prod324B#3 = RMul(varAcc3213,prod322C);
          real basisEval324C#3 = RMul(coeff3224,prod324B);
          real prod324D#5 = RMul(varAcc3213,prod3230);
          real basisEval324E#2 = RMul(coeff3224,prod324D);
          real prod324F#5 = RMul(prod23238,prod321D);
          real basisEval3250#1 = RMul(coeff3237,prod324F);
          real prod3251#5 = RMul(prod23238,prod3221);
          real basisEval3252#1 = RMul(coeff3237,prod3251);
          real coeff3253#9 = 0.20e2;
          real prod33254#7 = RMul(prod23238,varAcc3213);
          real prod3255#4 = RMul(prod33254,prod3219);
          real basisEval3256#1 = RMul(coeff3253,prod3255);
          real prod43257#3 = RMul(prod3323B,varAcc3215);
          real prod3258#2 = RMul(one3218,prod43257);
          real prod3259#4 = RMul(one3218,prod3258);
          real basisEval325A#2 = RMul(coeff3217,prod3259);
          real prod325B#2 = RMul(varAcc3214,prod3323B);
          real prod325C#6 = RMul(one3218,prod325B);
          real basisEval325D#3 = RMul(coeff3217,prod325C);
          real prod325E#2 = RMul(prod2322F,prod23228);
          real prod325F#5 = RMul(one3218,prod325E);
          real basisEval3260#1 = RMul(coeff3217,prod325F);
          real prod3261#2 = RMul(prod33245,varAcc3215);
          real prod3262#6 = RMul(one3218,prod3261);
          real basisEval3263#3 = RMul(coeff3217,prod3262);
          real prod43264#3 = RMul(prod33245,varAcc3214);
          real prod3265#2 = RMul(prod43264,one3218);
          real prod3266#4 = RMul(one3218,prod3265);
          real basisEval3267#2 = RMul(coeff3217,prod3266);
          real prod3268#6 = RMul(varAcc3213,prod323C);
          real basisEval3269#1 = RMul(coeff3224,prod3268);
          real prod326A#5 = RMul(varAcc3213,prod323F);
          real basisEval326B#4 = RMul(coeff3224,prod326A);
          real prod326C#5 = RMul(varAcc3213,prod3242);
          real basisEval326D#4 = RMul(coeff3224,prod326C);
          real prod326E#6 = RMul(varAcc3213,prod3246);
          real basisEval326F#1 = RMul(coeff3224,prod326E);
          real prod3270#5 = RMul(prod23238,prod3229);
          real basisEval3271#2 = RMul(coeff3237,prod3270);
          real prod3272#5 = RMul(prod23238,prod322C);
          real basisEval3273#1 = RMul(coeff3237,prod3272);
          real prod3274#5 = RMul(prod23238,prod3230);
          real basisEval3275#2 = RMul(coeff3237,prod3274);
          real prod3276#6 = RMul(prod33254,prod321D);
          real basisEval3277#1 = RMul(coeff3253,prod3276);
          real prod3278#6 = RMul(prod33254,prod3221);
          real basisEval3279#1 = RMul(coeff3253,prod3278);
          real coeff327A#3 = 0.30e2;
          real prod4327B#4 = RMul(prod33254,varAcc3213);
          real prod327C#4 = RMul(prod4327B,prod3219);
          real basisEval327D#1 = RMul(coeff327A,prod327C);
          real basisEval327E#6 = RMul(one3218,prod321A);
          real basisEval327F#3 = RMul(one3218,prod321E);
          real basisEval3280#5 = RMul(coeff3217,prod3226);
          real basisEval3281#3 = RMul(one3218,prod322A);
          real coeff3282#24 = 0.3e1;
          real basisEval3283#3 = RMul(coeff3282,prod3231);
          real basisEval3284#5 = RMul(coeff3217,prod3233);
          real coeff3285#25 = 0.4e1;
          real basisEval3286#1 = RMul(coeff3285,prod3235);
          real basisEval3287#3 = RMul(coeff3282,prod3239);
          real basisEval3288#3 = RMul(one3218,prod323D);
          real basisEval3289#2 = RMul(coeff3282,prod3243);
          real basisEval328A#3 = RMul(coeff3285,prod3247);
          real basisEval328B#3 = RMul(coeff3217,prod3249);
          real basisEval328C#3 = RMul(coeff3285,prod324B);
          real basisEval328D#2 = RMul(coeff3282,prod324F);
          real basisEval328E#2 = RMul(coeff3224,prod3251);
          real basisEval328F#3 = RMul(coeff3285,prod3255);
          real basisEval3290#3 = RMul(one3218,prod3259);
          real basisEval3291#4 = RMul(coeff3282,prod325F);
          real basisEval3292#2 = RMul(coeff3285,prod3262);
          real coeff3293#9 = 0.5e1;
          real basisEval3294#3 = RMul(coeff3293,prod3266);
          real basisEval3295#3 = RMul(coeff3217,prod3268);
          real basisEval3296#1 = RMul(coeff3285,prod326A);
          real coeff3297#6 = 0.8e1;
          real basisEval3298#1 = RMul(coeff3297,prod326E);
          real basisEval3299#4 = RMul(coeff3282,prod3270);
          real basisEval329A#4 = RMul(coeff3224,prod3272);
          real coeff329B#3 = 0.9e1;
          real basisEval329C#1 = RMul(coeff329B,prod3274);
          real basisEval329D#2 = RMul(coeff3285,prod3276);
          real basisEval329E#1 = RMul(coeff3297,prod3278);
          real basisEval329F#3 = RMul(coeff3293,prod327C);
          real basisEval32A0#3 = RMul(one3218,prod3222);
          real basisEval32A1#3 = RMul(coeff3282,prod322A);
          real basisEval32A2#3 = RMul(one3218,prod3231);
          real basisEval32A3#1 = RMul(coeff3285,prod3233);
          real basisEval32A4#5 = RMul(coeff3217,prod3235);
          real basisEval32A5#3 = RMul(coeff3285,prod323D);
          real basisEval32A6#2 = RMul(coeff3282,prod3240);
          real basisEval32A7#3 = RMul(one3218,prod3247);
          real basisEval32A8#3 = RMul(coeff3217,prod324D);
          real basisEval32A9#2 = RMul(coeff3224,prod324F);
          real basisEval32AA#2 = RMul(coeff3282,prod3251);
          real basisEval32AB#3 = RMul(coeff3293,prod3259);
          real basisEval32AC#2 = RMul(coeff3285,prod325C);
          real basisEval32AD#3 = RMul(one3218,prod3266);
          real basisEval32AE#1 = RMul(coeff3297,prod3268);
          real basisEval32AF#1 = RMul(coeff3285,prod326C);
          real basisEval32B0#3 = RMul(coeff3217,prod326E);
          real basisEval32B1#1 = RMul(coeff329B,prod3270);
          real basisEval32B2#4 = RMul(coeff3282,prod3274);
          real basisEval32B3#1 = RMul(coeff3297,prod3276);
          real basisEval32B4#2 = RMul(coeff3285,prod3278);
          real basisEval32B5#1 = RMul(coeff3224,prod3222);
          real basisEval32B6#2 = RMul(coeff3224,prod322D);
          real basisEval32B7#1 = RMul(coeff3237,prod3231);
          real basisEval32B8#2 = RMul(coeff3217,prod3239);
          real basisEval32B9#2 = RMul(coeff3224,prod3240);
          real basisEval32BA#1 = RMul(coeff3237,prod3243);
          real basisEval32BB#1 = RMul(coeff3253,prod3247);
          real basisEval32BC#1 = RMul(coeff3237,prod324D);
          real basisEval32BD#3 = RMul(coeff3217,prod324F);
          real basisEval32BE#2 = RMul(coeff3217,prod3255);
          real basisEval32BF#1 = RMul(coeff3224,prod325C);
          real basisEval32C0#2 = RMul(coeff3237,prod325F);
          real basisEval32C1#1 = RMul(coeff3253,prod3262);
          real basisEval32C2#1 = RMul(coeff327A,prod3266);
          real basisEval32C3#1 = RMul(coeff3237,prod326C);
          real basisEval32C4#1 = RMul(coeff3253,prod326E);
          real basisEval32C5#1 = RMul(coeff3217,prod3270);
          real basisEval32C6#3 = RMul(coeff3217,prod3276);
          real basisEval32C7#1 = RMul(coeff3224,prod3278);
          real basisEval32C8#2 = RMul(coeff3217,prod327C);
          real basisEval32C9#3 = RMul(one3218,prod3226);
          real basisEval32CA#1 = RMul(coeff3285,prod322D);
          real basisEval32CB#3 = RMul(one3218,prod3239);
          real basisEval32CC#2 = RMul(coeff3224,prod3243);
          real basisEval32CD#2 = RMul(coeff3282,prod3249);
          real basisEval32CE#2 = RMul(coeff3282,prod324D);
          real basisEval32CF#3 = RMul(coeff3217,prod3251);
          real basisEval32D0#3 = RMul(one3218,prod3255);
          real basisEval32D1#1 = RMul(coeff3297,prod325C);
          real basisEval32D2#1 = RMul(coeff329B,prod325F);
          real basisEval32D3#1 = RMul(coeff3297,prod3262);
          real basisEval32D4#2 = RMul(coeff3285,prod3268);
          real basisEval32D5#2 = RMul(coeff3285,prod326E);
          real basisEval32D6#1 = RMul(coeff3285,prod3272);
          real basisEval32D7#3 = RMul(coeff3217,prod3278);
          real basisEval32D8#3 = RMul(one3218,prod327C);
          real basisEval32D9#1 = RMul(coeff3224,prod321E);
          real basisEval32DA#1 = RMul(coeff3237,prod322A);
          real basisEval32DB#1 = RMul(coeff3253,prod323D);
          real basisEval32DC#1 = RMul(coeff3237,prod3240);
          real basisEval32DD#1 = RMul(coeff3237,prod3249);
          real basisEval32DE#1 = RMul(coeff327A,prod3259);
          real basisEval32DF#1 = RMul(coeff3253,prod325C);
          real basisEval32E0#1 = RMul(coeff3224,prod3262);
          real basisEval32E1#1 = RMul(coeff3253,prod3268);
          real basisEval32E2#1 = RMul(coeff3237,prod326A);
          real basisEval32E3#1 = RMul(coeff3217,prod3274);
          real basisEval32E4#1 = RMul(coeff3224,prod3276);
          tensor[84] intermediateCons32E5#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3227,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval322E,basisEval3232,basisEval3234,basisEval3236,basisEval323A,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval3241,basisEval3244,basisEval3248,basisEval324A,basisEval324C,basisEval324E,basisEval3250,basisEval3252,basisEval3256,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval325D,basisEval3260,basisEval3263,basisEval3267,basisEval3269,basisEval326B,basisEval326D,basisEval326F,basisEval3271,basisEval3273,basisEval3275,basisEval3277,basisEval3279,basisEval327D];
          tensor[84] intermediateCons32E6#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327F,basisEval3223,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3281,basisEval322E,basisEval3283,basisEval3216,basisEval3284,basisEval3286,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3288,basisEval3241,basisEval3289,basisEval328A,basisEval3216,basisEval328B,basisEval328C,basisEval324E,basisEval3216,basisEval328D,basisEval328E,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3290,basisEval325D,basisEval3291,basisEval3292,basisEval3294,basisEval3216,basisEval3295,basisEval3296,basisEval326D,basisEval3298,basisEval3216,basisEval3299,basisEval329A,basisEval329C,basisEval3216,basisEval329D,basisEval329E,basisEval3216,basisEval329F,basisEval3216];
          tensor[84] intermediateCons32E7#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32A0,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval322E,basisEval32A2,basisEval3216,basisEval32A3,basisEval32A4,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32A6,basisEval3244,basisEval32A7,basisEval3216,basisEval324A,basisEval328C,basisEval32A8,basisEval3216,basisEval32A9,basisEval32AA,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32AC,basisEval3291,basisEval3263,basisEval32AD,basisEval3216,basisEval32AE,basisEval326B,basisEval32AF,basisEval32B0,basisEval3216,basisEval32B1,basisEval329A,basisEval32B2,basisEval3216,basisEval32B3,basisEval32B4,basisEval3216,basisEval329F,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E8#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32B5,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval32B6,basisEval32B7,basisEval3216,basisEval3216,basisEval3284,basisEval3236,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval32B9,basisEval32BA,basisEval32BB,basisEval3216,basisEval3216,basisEval328B,basisEval324C,basisEval32BC,basisEval3216,basisEval3216,basisEval32BD,basisEval328E,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval32BF,basisEval32C0,basisEval32C1,basisEval32C2,basisEval3216,basisEval3216,basisEval3295,basisEval326B,basisEval32C3,basisEval32C4,basisEval3216,basisEval3216,basisEval32C5,basisEval329A,basisEval3275,basisEval3216,basisEval3216,basisEval32C6,basisEval32C7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E9#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3216,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval32CA,basisEval3283,basisEval3216,basisEval3216,basisEval3284,basisEval32A4,basisEval3216,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32B9,basisEval32CC,basisEval328A,basisEval3216,basisEval3216,basisEval32CD,basisEval328C,basisEval32CE,basisEval3216,basisEval3216,basisEval32BD,basisEval32CF,basisEval3216,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32D1,basisEval32D2,basisEval32D3,basisEval3294,basisEval3216,basisEval3216,basisEval32D4,basisEval326B,basisEval326D,basisEval32D5,basisEval3216,basisEval3216,basisEval3299,basisEval32D6,basisEval32B2,basisEval3216,basisEval3216,basisEval32C6,basisEval32D7,basisEval3216,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32EA#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32D9,basisEval3223,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DA,basisEval32B6,basisEval3232,basisEval3216,basisEval3216,basisEval3234,basisEval32A4,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DB,basisEval32DC,basisEval32CC,basisEval3248,basisEval3216,basisEval3216,basisEval32DD,basisEval324C,basisEval32A8,basisEval3216,basisEval3216,basisEval32A9,basisEval32CF,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DE,basisEval32DF,basisEval32C0,basisEval32E0,basisEval3267,basisEval3216,basisEval3216,basisEval32E1,basisEval32E2,basisEval326D,basisEval32B0,basisEval3216,basisEval3216,basisEval3271,basisEval329A,basisEval32E3,basisEval3216,basisEval3216,basisEval32E4,basisEval32D7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          real vdot33CE#1 = VDot<84>(dofs30BF,intermediateCons32E5);
          real vdot33D0#2 = VDot<84>(dofs30BF,intermediateCons32E6);
          real vdot33D2#2 = VDot<84>(dofs30BF,intermediateCons32E7);
          tensor[3] tensor33D3#1 = <tensor[3]>[vdot33CE,vdot33D0,vdot33D2];
          real vdot33D7#1 = VDot<84>(dofs30BF,intermediateCons32E8);
          real vdot33D9#2 = VDot<84>(dofs30BF,intermediateCons32E9);
          tensor[3] tensor33DA#1 = <tensor[3]>[vdot33D0,vdot33D7,vdot33D9];
          real vdot33E0#1 = VDot<84>(dofs30BF,intermediateCons32EA);
          tensor[3] tensor33E1#1 = <tensor[3]>[vdot33D2,vdot33D9,vdot33E0];
          tensor[3,3] _t33CC#1 = <tensor[3,3]>[tensor33D3,tensor33DA,tensor33E1];
          (real[3] evals33F9#2,tensor[3][3] E33FA#2) = EigenVecs3x3(_t33CC);
          tensor[3] _t33FE#6 = Subscript<tensor[3][3]>(E33FA,ilit2D77);
          real _t3400#9 = Subscript<real[3]>(evals33F9,ilit2D77);
          tensor[3] _t3404#6 = Subscript<tensor[3][3]>(E33FA,ilit2D74);
          real _t3406#9 = Subscript<real[3]>(evals33F9,ilit2D74);
          real r3409#1 = TensorIndex<tensor[3],[0]>(_t33FE);
          tensor[3] binopV340A#3 = VScale<3>(r3409,_t33FE);
          real r340B#1 = TensorIndex<tensor[3],[1]>(_t33FE);
          tensor[3] binopV340C#3 = VScale<3>(r340B,_t33FE);
          real r340D#1 = TensorIndex<tensor[3],[2]>(_t33FE);
          tensor[3] binopV340E#3 = VScale<3>(r340D,_t33FE);
          real r3418#1 = TensorIndex<tensor[3],[0]>(_t3404);
          tensor[3] binopV3419#3 = VScale<3>(r3418,_t3404);
          real r341A#1 = TensorIndex<tensor[3],[1]>(_t3404);
          tensor[3] binopV341B#3 = VScale<3>(r341A,_t3404);
          real r341C#1 = TensorIndex<tensor[3],[2]>(_t3404);
          tensor[3] binopV341D#3 = VScale<3>(r341C,_t3404);
          real r3427#1 = VIndex<3,0>(binopV340A);
          real r3428#1 = RDiv(r3427,_t3400);
          real r3429#1 = VIndex<3,1>(binopV340A);
          real r342A#1 = RDiv(r3429,_t3400);
          real r342B#1 = VIndex<3,2>(binopV340A);
          real r342C#1 = RDiv(r342B,_t3400);
          tensor[3] tensor342D#1 = <tensor[3]>[r3428,r342A,r342C];
          real r342E#1 = VIndex<3,0>(binopV340C);
          real r342F#1 = RDiv(r342E,_t3400);
          real r3430#1 = VIndex<3,1>(binopV340C);
          real r3431#1 = RDiv(r3430,_t3400);
          real r3432#1 = VIndex<3,2>(binopV340C);
          real r3433#1 = RDiv(r3432,_t3400);
          tensor[3] tensor3434#1 = <tensor[3]>[r342F,r3431,r3433];
          real r3435#1 = VIndex<3,0>(binopV340E);
          real r3436#1 = RDiv(r3435,_t3400);
          real r3437#1 = VIndex<3,1>(binopV340E);
          real r3438#1 = RDiv(r3437,_t3400);
          real r3439#1 = VIndex<3,2>(binopV340E);
          real r343A#1 = RDiv(r3439,_t3400);
          tensor[3] tensor343B#1 = <tensor[3]>[r3436,r3438,r343A];
          real r3454#1 = VIndex<3,0>(binopV3419);
          real r3455#1 = RDiv(r3454,_t3406);
          real r3456#1 = VIndex<3,1>(binopV3419);
          real r3457#1 = RDiv(r3456,_t3406);
          real r3458#1 = VIndex<3,2>(binopV3419);
          real r3459#1 = RDiv(r3458,_t3406);
          tensor[3] tensor345A#1 = <tensor[3]>[r3455,r3457,r3459];
          real r345B#1 = VIndex<3,0>(binopV341B);
          real r345C#1 = RDiv(r345B,_t3406);
          real r345D#1 = VIndex<3,1>(binopV341B);
          real r345E#1 = RDiv(r345D,_t3406);
          real r345F#1 = VIndex<3,2>(binopV341B);
          real r3460#1 = RDiv(r345F,_t3406);
          tensor[3] tensor3461#1 = <tensor[3]>[r345C,r345E,r3460];
          real r3462#1 = VIndex<3,0>(binopV341D);
          real r3463#1 = RDiv(r3462,_t3406);
          real r3464#1 = VIndex<3,1>(binopV341D);
          real r3465#1 = RDiv(r3464,_t3406);
          real r3466#1 = VIndex<3,2>(binopV341D);
          real r3467#1 = RDiv(r3466,_t3406);
          tensor[3] tensor3468#1 = <tensor[3]>[r3463,r3465,r3467];
          tensor[3] v3483#1 = VAdd<3>(tensor342D,tensor345A);
          tensor[3] v3486#1 = VAdd<3>(tensor3434,tensor3461);
          tensor[3] v3489#1 = VAdd<3>(tensor343B,tensor3468);
          real basisEval34B0#1 = RMul(one3218,prod322D);
          real basisEval34C3#1 = RMul(one3218,prod3240);
          real basisEval34C6#1 = RMul(one3218,prod3243);
          real basisEval34CE#3 = RMul(coeff3217,prod324B);
          real basisEval34DF#1 = RMul(one3218,prod325C);
          real basisEval34E2#1 = RMul(one3218,prod325F);
          real basisEval34E5#1 = RMul(one3218,prod3262);
          real basisEval34ED#2 = RMul(coeff3217,prod326A);
          real basisEval34EF#2 = RMul(coeff3217,prod326C);
          real basisEval34F5#1 = RMul(coeff3282,prod3272);
          real prod53500#1 = RMul(prod43257,varAcc3215);
          real prod3501#1 = RMul(one3218,prod53500);
          real prod3502#2 = RMul(one3218,prod3501);
          real basisEval3503#2 = RMul(one3218,prod3502);
          real prod3504#1 = RMul(varAcc3214,prod43257);
          real prod3505#3 = RMul(one3218,prod3504);
          real basisEval3506#1 = RMul(one3218,prod3505);
          real prod3507#1 = RMul(prod2322F,prod3323B);
          real prod3508#3 = RMul(one3218,prod3507);
          real basisEval3509#1 = RMul(one3218,prod3508);
          real prod350A#1 = RMul(prod33245,prod23228);
          real prod350B#3 = RMul(one3218,prod350A);
          real basisEval350C#1 = RMul(one3218,prod350B);
          real prod350D#1 = RMul(prod43264,varAcc3215);
          real prod350E#3 = RMul(one3218,prod350D);
          real basisEval350F#1 = RMul(one3218,prod350E);
          real prod53510#1 = RMul(prod43264,varAcc3214);
          real prod3511#1 = RMul(prod53510,one3218);
          real prod3512#2 = RMul(one3218,prod3511);
          real basisEval3513#2 = RMul(one3218,prod3512);
          real prod3514#3 = RMul(varAcc3213,prod3258);
          real basisEval3515#1 = RMul(coeff3217,prod3514);
          real prod3516#2 = RMul(varAcc3213,prod325B);
          real basisEval3517#2 = RMul(coeff3217,prod3516);
          real prod3518#2 = RMul(varAcc3213,prod325E);
          real basisEval3519#1 = RMul(coeff3217,prod3518);
          real prod351A#2 = RMul(varAcc3213,prod3261);
          real basisEval351B#2 = RMul(coeff3217,prod351A);
          real prod351C#3 = RMul(varAcc3213,prod3265);
          real basisEval351D#1 = RMul(coeff3217,prod351C);
          real prod351E#3 = RMul(prod23238,prod323C);
          real basisEval351F#1 = RMul(coeff3282,prod351E);
          real prod3520#2 = RMul(prod23238,prod323F);
          real basisEval3521#2 = RMul(coeff3282,prod3520);
          real prod3522#2 = RMul(prod23238,prod3242);
          real basisEval3523#2 = RMul(coeff3282,prod3522);
          real prod3524#3 = RMul(prod23238,prod3246);
          real basisEval3525#1 = RMul(coeff3282,prod3524);
          real prod3526#3 = RMul(prod33254,prod3229);
          real basisEval3527#1 = RMul(coeff3285,prod3526);
          real prod3528#2 = RMul(prod33254,prod322C);
          real basisEval3529#1 = RMul(coeff3285,prod3528);
          real prod352A#3 = RMul(prod33254,prod3230);
          real basisEval352B#1 = RMul(coeff3285,prod352A);
          real prod352C#3 = RMul(prod4327B,prod321D);
          real basisEval352D#1 = RMul(coeff3293,prod352C);
          real prod352E#3 = RMul(prod4327B,prod3221);
          real basisEval352F#1 = RMul(coeff3293,prod352E);
          real prod53531#1 = RMul(prod4327B,varAcc3213);
          real prod3532#2 = RMul(prod53531,prod3219);
          real basisEval3533#1 = RMul(coeff3224,prod3532);
          real basisEval3538#1 = RMul(one3218,prod3233);
          real basisEval353D#1 = RMul(one3218,prod3249);
          real basisEval353F#1 = RMul(one3218,prod324F);
          real basisEval3546#1 = RMul(one3218,prod3268);
          real basisEval3547#1 = RMul(coeff3282,prod326C);
          real basisEval3549#1 = RMul(one3218,prod3270);
          real basisEval354A#2 = RMul(coeff3217,prod3272);
          real basisEval354B#1 = RMul(one3218,prod3276);
          real basisEval354E#1 = RMul(coeff3217,prod3505);
          real basisEval354F#1 = RMul(coeff3282,prod3508);
          real basisEval3550#1 = RMul(coeff3285,prod350B);
          real basisEval3551#1 = RMul(coeff3293,prod350E);
          real basisEval3552#1 = RMul(coeff3224,prod3512);
          real basisEval3553#1 = RMul(one3218,prod3514);
          real basisEval3554#2 = RMul(coeff3282,prod3518);
          real basisEval3555#1 = RMul(coeff3285,prod351A);
          real basisEval3556#1 = RMul(coeff3293,prod351C);
          real basisEval3557#1 = RMul(one3218,prod351E);
          real basisEval3558#1 = RMul(coeff3217,prod3520);
          real basisEval3559#1 = RMul(coeff3285,prod3524);
          real basisEval355A#1 = RMul(one3218,prod3526);
          real basisEval355B#2 = RMul(coeff3217,prod3528);
          real basisEval355C#1 = RMul(coeff3282,prod352A);
          real basisEval355D#1 = RMul(one3218,prod352C);
          real basisEval355E#1 = RMul(coeff3217,prod352E);
          real basisEval355F#2 = RMul(one3218,prod3532);
          real basisEval3562#1 = RMul(one3218,prod3235);
          real basisEval3567#1 = RMul(one3218,prod324D);
          real basisEval3569#1 = RMul(one3218,prod3251);
          real basisEval356E#1 = RMul(coeff3282,prod326A);
          real basisEval356F#1 = RMul(one3218,prod326E);
          real basisEval3570#1 = RMul(one3218,prod3274);
          real basisEval3572#1 = RMul(one3218,prod3278);
          real basisEval3573#1 = RMul(coeff3224,prod3502);
          real basisEval3574#1 = RMul(coeff3293,prod3505);
          real basisEval3575#1 = RMul(coeff3285,prod3508);
          real basisEval3576#1 = RMul(coeff3282,prod350B);
          real basisEval3577#1 = RMul(coeff3217,prod350E);
          real basisEval3578#1 = RMul(coeff3293,prod3514);
          real basisEval3579#1 = RMul(coeff3285,prod3516);
          real basisEval357A#1 = RMul(one3218,prod351C);
          real basisEval357B#1 = RMul(coeff3285,prod351E);
          real basisEval357C#1 = RMul(coeff3217,prod3522);
          real basisEval357D#1 = RMul(one3218,prod3524);
          real basisEval357E#1 = RMul(coeff3282,prod3526);
          real basisEval357F#1 = RMul(one3218,prod352A);
          real basisEval3580#1 = RMul(coeff3217,prod352C);
          real basisEval3581#1 = RMul(one3218,prod352E);
          tensor[84] intermediateCons3582#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval327F,basisEval32A0,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3281,basisEval34B0,basisEval32A2,basisEval3284,basisEval32A4,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3288,basisEval34C3,basisEval34C6,basisEval32A7,basisEval328B,basisEval34CE,basisEval32A8,basisEval328D,basisEval32AA,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3290,basisEval34DF,basisEval34E2,basisEval34E5,basisEval32AD,basisEval3295,basisEval34ED,basisEval34EF,basisEval32B0,basisEval3299,basisEval34F5,basisEval32B2,basisEval329D,basisEval32B4,basisEval329F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3503,basisEval3506,basisEval3509,basisEval350C,basisEval350F,basisEval3513,basisEval3515,basisEval3517,basisEval3519,basisEval351B,basisEval351D,basisEval351F,basisEval3521,basisEval3523,basisEval3525,basisEval3527,basisEval3529,basisEval352B,basisEval352D,basisEval352F,basisEval3533];
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval327F,basisEval3223,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval3281,basisEval322E,basisEval3283,basisEval3216,basisEval3538,basisEval32A4,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval3288,basisEval3241,basisEval3289,basisEval328A,basisEval3216,basisEval353D,basisEval34CE,basisEval32CE,basisEval3216,basisEval353F,basisEval32CF,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval3290,basisEval325D,basisEval3291,basisEval3292,basisEval3294,basisEval3216,basisEval3546,basisEval34ED,basisEval3547,basisEval32D5,basisEval3216,basisEval3549,basisEval354A,basisEval32B2,basisEval3216,basisEval354B,basisEval32D7,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3503,basisEval354E,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3216,basisEval3553,basisEval3517,basisEval3554,basisEval3555,basisEval3556,basisEval3216,basisEval3557,basisEval3558,basisEval3523,basisEval3559,basisEval3216,basisEval355A,basisEval355B,basisEval355C,basisEval3216,basisEval355D,basisEval355E,basisEval3216,basisEval355F,basisEval3216];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval321F,basisEval32A0,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval32A1,basisEval322E,basisEval32A2,basisEval3216,basisEval3284,basisEval3562,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval32A5,basisEval32A6,basisEval3244,basisEval32A7,basisEval3216,basisEval32CD,basisEval34CE,basisEval3567,basisEval3216,basisEval32BD,basisEval3569,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval32AB,basisEval32AC,basisEval3291,basisEval3263,basisEval32AD,basisEval3216,basisEval32D4,basisEval356E,basisEval34EF,basisEval356F,basisEval3216,basisEval3299,basisEval354A,basisEval3570,basisEval3216,basisEval32C6,basisEval3572,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3573,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3513,basisEval3216,basisEval3578,basisEval3579,basisEval3554,basisEval351B,basisEval357A,basisEval3216,basisEval357B,basisEval3521,basisEval357C,basisEval357D,basisEval3216,basisEval357E,basisEval355B,basisEval357F,basisEval3216,basisEval3580,basisEval3581,basisEval3216,basisEval355F,basisEval3216,basisEval3216];
          real vdot3679#1 = VDot<84>(dofs30BF,intermediateCons3582);
          real vdot367B#1 = VDot<84>(dofs30BF,intermediateCons3583);
          real vdot367D#1 = VDot<84>(dofs30BF,intermediateCons3584);
          tensor[3] probe_l_153677#3 = <tensor[3]>[vdot3679,vdot367B,vdot367D];
          tensor[3] negV3688#1 = VNeg<3>(v3483);
          tensor[3] negV368A#1 = VNeg<3>(v3486);
          tensor[3] negV368C#1 = VNeg<3>(v3489);
          real vdot3697#1 = VDot<3>(negV3688,probe_l_153677);
          real vdot3699#1 = VDot<3>(negV368A,probe_l_153677);
          real vdot369B#1 = VDot<3>(negV368C,probe_l_153677);
          tensor[3] _t3695#1 = <tensor[3]>[vdot3697,vdot3699,vdot369B];
          goto JOIN36A6
        JOIN36A6:  preds = [ASSIGN36A3,ASSIGN40DD]
          tensor[3] step36A4#5 = phi(_t3695,_t36A5)
          real _t36A7#7 = 0.e0;
          real _t36A9#143 = 0.1e1;
          real _t36AB#1 = 0.15e1;
          real op1_e3_l_736AD#1 = VDot<3>(step36A4,step36A4);
          real op1_e3_l_836B0#3 = Sqrt(op1_e3_l_736AD);
          real op1_e3_l_936B3#1 = Abs<real>(op1_e3_l_836B0);
          real op1_e3_l_1036B6#1 = RDiv(op1_e3_l_936B3,thick247B);
          real op1_e3_l_1136B9#1 = RSub(_t36A9,op1_e3_l_1036B6);
          real op1_e3_l_1236BC#1 = RMul(_t36AB,op1_e3_l_1136B9);
          real op1_e3_l_1336BF#1 = RClamp(_t36A7,_t36A9,op1_e3_l_1236BC);
          real _t36C2#2 = RMul(maxAlpha2483,op1_e3_l_1336BF);
          bool _t36C5#1 = EQ<real>(_t36C2,_t36A7);
          if _t36C5 then goto SAVE36C8 else goto JOIN36CA
        SAVE36C8:  preds = [COND36C7]
          self.rayN = rayN24AB;
          active
          goto JOIN36CA
        JOIN36CA:  preds = [*ACTIVE36C9,COND36C7]
          real _t36D1#1 = RSub(_t36A9,_t36C2);
          real _t36D4#1 = MathFn<pow>(_t36D1,alphaFix249B);
          bool _t36D6#1 = NEQ<real>(phKs24A3,_t36A7);
          if _t36D6 then goto ASSIGN36DB else goto JOIN36FE
        ASSIGN36DB:  preds = [COND36D8]
          tensor[3] op1_e3_l_636D9#3 = VAdd<3>(eyeDir249D,litwsp2493);
          real op1_e3_l_836DC#1 = VDot<3>(op1_e3_l_636D9,op1_e3_l_636D9);
          real op1_e3_l_936DF#1 = Sqrt(op1_e3_l_836DC);
          real op1_e3_l_1236E2#1 = RDiv(_t36A9,op1_e3_l_836B0);
          tensor[3] op1_e3_l_1336E7#1 = VScale<3>(op1_e3_l_1236E2,step36A4);
          tensor[3] op1_e3_l_1436EA#1 = VNeg<3>(op1_e3_l_1336E7);
          real op1_e3_l_1636ED#1 = RDiv(_t36A9,op1_e3_l_936DF);
          real op1_e3_l_1736F2#1 = VDot<3>(op1_e3_l_1436EA,op1_e3_l_636D9);
          real op1_e3_l_1836F5#1 = RMul(op1_e3_l_1636ED,op1_e3_l_1736F2);
          real _t36F8#1 = Abs<real>(op1_e3_l_1836F5);
          real scomp36FB#1 = MathFn<pow>(_t36F8,phSp24A5);
          goto JOIN36FE
        JOIN36FE:  preds = [ASSIGN36FC,COND36D8]
          real scomp36FD#1 = phi(scomp36FB,_t36A7)
          real cmin36FF#3 = VIndex<2,0>(cminmax2489);
          real cmax3701#2 = VIndex<2,1>(cminmax2489);
          tensor[3] mcol3703#1 = <tensor[3]>[_t36A9,_t36A9,_t36A9];
          bool _t3705#1 = NEQ<real>(cmin36FF,cmax3701);
          if _t3705 then goto ASSIGN44D8 else goto JOIN3DEB
        ASSIGN44D8:  preds = [COND3707]
          tensor[3] _t3708#3 = VAdd<3>(pos24B7,step36A4);
          int ilit370E#1 = 84;
          int mulRes370F#84 = IMul(_t246B,ilit370E);
          int idx3712#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,mulRes370F);
          int ilit3713#91 = 1;
          int addRes3714#1 = IAdd(mulRes370F,ilit3713);
          int idx3715#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3714);
          int ilit3716#5 = 2;
          int addRes3717#1 = IAdd(mulRes370F,ilit3716);
          int idx3718#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3717);
          int ilit3719#5 = 3;
          int addRes371A#1 = IAdd(mulRes370F,ilit3719);
          int idx371B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371A);
          int ilit371C#1 = 4;
          int addRes371D#1 = IAdd(mulRes370F,ilit371C);
          int idx371E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371D);
          int ilit371F#1 = 5;
          int addRes3720#1 = IAdd(mulRes370F,ilit371F);
          int idx3721#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3720);
          int ilit3722#1 = 6;
          int addRes3723#1 = IAdd(mulRes370F,ilit3722);
          int idx3724#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3723);
          int ilit3725#1 = 7;
          int addRes3726#1 = IAdd(mulRes370F,ilit3725);
          int idx3727#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3726);
          int ilit3728#1 = 8;
          int addRes3729#1 = IAdd(mulRes370F,ilit3728);
          int idx372A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3729);
          int ilit372B#1 = 9;
          int addRes372C#1 = IAdd(mulRes370F,ilit372B);
          int idx372D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372C);
          int ilit372E#1 = 10;
          int addRes372F#1 = IAdd(mulRes370F,ilit372E);
          int idx3730#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372F);
          int ilit3731#1 = 11;
          int addRes3732#1 = IAdd(mulRes370F,ilit3731);
          int idx3733#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3732);
          int ilit3734#1 = 12;
          int addRes3735#1 = IAdd(mulRes370F,ilit3734);
          int idx3736#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3735);
          int ilit3737#1 = 13;
          int addRes3738#1 = IAdd(mulRes370F,ilit3737);
          int idx3739#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3738);
          int ilit373A#1 = 14;
          int addRes373B#1 = IAdd(mulRes370F,ilit373A);
          int idx373C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373B);
          int ilit373D#1 = 15;
          int addRes373E#1 = IAdd(mulRes370F,ilit373D);
          int idx373F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373E);
          int ilit3740#1 = 16;
          int addRes3741#1 = IAdd(mulRes370F,ilit3740);
          int idx3742#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3741);
          int ilit3743#1 = 17;
          int addRes3744#1 = IAdd(mulRes370F,ilit3743);
          int idx3745#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3744);
          int ilit3746#1 = 18;
          int addRes3747#1 = IAdd(mulRes370F,ilit3746);
          int idx3748#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3747);
          int ilit3749#1 = 19;
          int addRes374A#1 = IAdd(mulRes370F,ilit3749);
          int idx374B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374A);
          int ilit374C#1 = 20;
          int addRes374D#1 = IAdd(mulRes370F,ilit374C);
          int idx374E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374D);
          int ilit374F#1 = 21;
          int addRes3750#1 = IAdd(mulRes370F,ilit374F);
          int idx3751#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3750);
          int ilit3752#1 = 22;
          int addRes3753#1 = IAdd(mulRes370F,ilit3752);
          int idx3754#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3753);
          int ilit3755#1 = 23;
          int addRes3756#1 = IAdd(mulRes370F,ilit3755);
          int idx3757#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3756);
          int ilit3758#1 = 24;
          int addRes3759#1 = IAdd(mulRes370F,ilit3758);
          int idx375A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3759);
          int ilit375B#1 = 25;
          int addRes375C#1 = IAdd(mulRes370F,ilit375B);
          int idx375D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375C);
          int ilit375E#1 = 26;
          int addRes375F#1 = IAdd(mulRes370F,ilit375E);
          int idx3760#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375F);
          int ilit3761#1 = 27;
          int addRes3762#1 = IAdd(mulRes370F,ilit3761);
          int idx3763#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3762);
          int ilit3764#1 = 28;
          int addRes3765#1 = IAdd(mulRes370F,ilit3764);
          int idx3766#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3765);
          int ilit3767#1 = 29;
          int addRes3768#1 = IAdd(mulRes370F,ilit3767);
          int idx3769#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3768);
          int ilit376A#1 = 30;
          int addRes376B#1 = IAdd(mulRes370F,ilit376A);
          int idx376C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376B);
          int ilit376D#1 = 31;
          int addRes376E#1 = IAdd(mulRes370F,ilit376D);
          int idx376F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376E);
          int ilit3770#1 = 32;
          int addRes3771#1 = IAdd(mulRes370F,ilit3770);
          int idx3772#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3771);
          int ilit3773#1 = 33;
          int addRes3774#1 = IAdd(mulRes370F,ilit3773);
          int idx3775#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3774);
          int ilit3776#1 = 34;
          int addRes3777#1 = IAdd(mulRes370F,ilit3776);
          int idx3778#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3777);
          int ilit3779#1 = 35;
          int addRes377A#1 = IAdd(mulRes370F,ilit3779);
          int idx377B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377A);
          int ilit377C#1 = 36;
          int addRes377D#1 = IAdd(mulRes370F,ilit377C);
          int idx377E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377D);
          int ilit377F#1 = 37;
          int addRes3780#1 = IAdd(mulRes370F,ilit377F);
          int idx3781#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3780);
          int ilit3782#1 = 38;
          int addRes3783#1 = IAdd(mulRes370F,ilit3782);
          int idx3784#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3783);
          int ilit3785#1 = 39;
          int addRes3786#1 = IAdd(mulRes370F,ilit3785);
          int idx3787#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3786);
          int ilit3788#1 = 40;
          int addRes3789#1 = IAdd(mulRes370F,ilit3788);
          int idx378A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3789);
          int ilit378B#1 = 41;
          int addRes378C#1 = IAdd(mulRes370F,ilit378B);
          int idx378D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378C);
          int ilit378E#1 = 42;
          int addRes378F#1 = IAdd(mulRes370F,ilit378E);
          int idx3790#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378F);
          int ilit3791#1 = 43;
          int addRes3792#1 = IAdd(mulRes370F,ilit3791);
          int idx3793#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3792);
          int ilit3794#1 = 44;
          int addRes3795#1 = IAdd(mulRes370F,ilit3794);
          int idx3796#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3795);
          int ilit3797#1 = 45;
          int addRes3798#1 = IAdd(mulRes370F,ilit3797);
          int idx3799#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3798);
          int ilit379A#1 = 46;
          int addRes379B#1 = IAdd(mulRes370F,ilit379A);
          int idx379C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379B);
          int ilit379D#1 = 47;
          int addRes379E#1 = IAdd(mulRes370F,ilit379D);
          int idx379F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379E);
          int ilit37A0#1 = 48;
          int addRes37A1#1 = IAdd(mulRes370F,ilit37A0);
          int idx37A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A1);
          int ilit37A3#1 = 49;
          int addRes37A4#1 = IAdd(mulRes370F,ilit37A3);
          int idx37A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A4);
          int ilit37A6#1 = 50;
          int addRes37A7#1 = IAdd(mulRes370F,ilit37A6);
          int idx37A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A7);
          int ilit37A9#1 = 51;
          int addRes37AA#1 = IAdd(mulRes370F,ilit37A9);
          int idx37AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AA);
          int ilit37AC#1 = 52;
          int addRes37AD#1 = IAdd(mulRes370F,ilit37AC);
          int idx37AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AD);
          int ilit37AF#1 = 53;
          int addRes37B0#1 = IAdd(mulRes370F,ilit37AF);
          int idx37B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B0);
          int ilit37B2#1 = 54;
          int addRes37B3#1 = IAdd(mulRes370F,ilit37B2);
          int idx37B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B3);
          int ilit37B5#1 = 55;
          int addRes37B6#1 = IAdd(mulRes370F,ilit37B5);
          int idx37B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B6);
          int ilit37B8#1 = 56;
          int addRes37B9#1 = IAdd(mulRes370F,ilit37B8);
          int idx37BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B9);
          int ilit37BB#1 = 57;
          int addRes37BC#1 = IAdd(mulRes370F,ilit37BB);
          int idx37BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BC);
          int ilit37BE#1 = 58;
          int addRes37BF#1 = IAdd(mulRes370F,ilit37BE);
          int idx37C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BF);
          int ilit37C1#1 = 59;
          int addRes37C2#1 = IAdd(mulRes370F,ilit37C1);
          int idx37C3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C2);
          int ilit37C4#1 = 60;
          int addRes37C5#1 = IAdd(mulRes370F,ilit37C4);
          int idx37C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C5);
          int ilit37C7#1 = 61;
          int addRes37C8#1 = IAdd(mulRes370F,ilit37C7);
          int idx37C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C8);
          int ilit37CA#1 = 62;
          int addRes37CB#1 = IAdd(mulRes370F,ilit37CA);
          int idx37CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CB);
          int ilit37CD#1 = 63;
          int addRes37CE#1 = IAdd(mulRes370F,ilit37CD);
          int idx37CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CE);
          int ilit37D0#1 = 64;
          int addRes37D1#1 = IAdd(mulRes370F,ilit37D0);
          int idx37D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D1);
          int ilit37D3#1 = 65;
          int addRes37D4#1 = IAdd(mulRes370F,ilit37D3);
          int idx37D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D4);
          int ilit37D6#1 = 66;
          int addRes37D7#1 = IAdd(mulRes370F,ilit37D6);
          int idx37D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D7);
          int ilit37D9#1 = 67;
          int addRes37DA#1 = IAdd(mulRes370F,ilit37D9);
          int idx37DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DA);
          int ilit37DC#1 = 68;
          int addRes37DD#1 = IAdd(mulRes370F,ilit37DC);
          int idx37DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DD);
          int ilit37DF#1 = 69;
          int addRes37E0#1 = IAdd(mulRes370F,ilit37DF);
          int idx37E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E0);
          int ilit37E2#1 = 70;
          int addRes37E3#1 = IAdd(mulRes370F,ilit37E2);
          int idx37E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E3);
          int ilit37E5#1 = 71;
          int addRes37E6#1 = IAdd(mulRes370F,ilit37E5);
          int idx37E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E6);
          int ilit37E8#1 = 72;
          int addRes37E9#1 = IAdd(mulRes370F,ilit37E8);
          int idx37EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E9);
          int ilit37EB#1 = 73;
          int addRes37EC#1 = IAdd(mulRes370F,ilit37EB);
          int idx37ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EC);
          int ilit37EE#1 = 74;
          int addRes37EF#1 = IAdd(mulRes370F,ilit37EE);
          int idx37F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EF);
          int ilit37F1#1 = 75;
          int addRes37F2#1 = IAdd(mulRes370F,ilit37F1);
          int idx37F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F2);
          int ilit37F4#1 = 76;
          int addRes37F5#1 = IAdd(mulRes370F,ilit37F4);
          int idx37F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F5);
          int ilit37F7#1 = 77;
          int addRes37F8#1 = IAdd(mulRes370F,ilit37F7);
          int idx37F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F8);
          int ilit37FA#1 = 78;
          int addRes37FB#1 = IAdd(mulRes370F,ilit37FA);
          int idx37FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FB);
          int ilit37FD#1 = 79;
          int addRes37FE#1 = IAdd(mulRes370F,ilit37FD);
          int idx37FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FE);
          int ilit3800#1 = 80;
          int addRes3801#1 = IAdd(mulRes370F,ilit3800);
          int idx3802#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3801);
          int ilit3803#1 = 81;
          int addRes3804#1 = IAdd(mulRes370F,ilit3803);
          int idx3805#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3804);
          int ilit3806#1 = 82;
          int addRes3807#1 = IAdd(mulRes370F,ilit3806);
          int idx3808#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3807);
          int ilit3809#1 = 83;
          int addRes380A#1 = IAdd(mulRes370F,ilit3809);
          int idx380B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes380A);
          int mulRes3911#1 = IMul(ilit3713,idx3712);
          int mulRes3913#1 = IMul(ilit3713,idx3715);
          int mulRes3916#1 = IMul(ilit3713,idx3718);
          int mulRes3919#1 = IMul(ilit3713,idx371B);
          int mulRes391C#1 = IMul(ilit3713,idx371E);
          int mulRes391F#1 = IMul(ilit3713,idx3721);
          int mulRes3922#1 = IMul(ilit3713,idx3724);
          int mulRes3925#1 = IMul(ilit3713,idx3727);
          int mulRes3928#1 = IMul(ilit3713,idx372A);
          int mulRes392B#1 = IMul(ilit3713,idx372D);
          int mulRes392E#1 = IMul(ilit3713,idx3730);
          int mulRes3931#1 = IMul(ilit3713,idx3733);
          int mulRes3934#1 = IMul(ilit3713,idx3736);
          int mulRes3937#1 = IMul(ilit3713,idx3739);
          int mulRes393A#1 = IMul(ilit3713,idx373C);
          int mulRes393D#1 = IMul(ilit3713,idx373F);
          int mulRes3940#1 = IMul(ilit3713,idx3742);
          int mulRes3943#1 = IMul(ilit3713,idx3745);
          int mulRes3946#1 = IMul(ilit3713,idx3748);
          int mulRes3949#1 = IMul(ilit3713,idx374B);
          int mulRes394C#1 = IMul(ilit3713,idx374E);
          int mulRes394F#1 = IMul(ilit3713,idx3751);
          int mulRes3952#1 = IMul(ilit3713,idx3754);
          int mulRes3955#1 = IMul(ilit3713,idx3757);
          int mulRes3958#1 = IMul(ilit3713,idx375A);
          int mulRes395B#1 = IMul(ilit3713,idx375D);
          int mulRes395E#1 = IMul(ilit3713,idx3760);
          int mulRes3961#1 = IMul(ilit3713,idx3763);
          int mulRes3964#1 = IMul(ilit3713,idx3766);
          int mulRes3967#1 = IMul(ilit3713,idx3769);
          int mulRes396A#1 = IMul(ilit3713,idx376C);
          int mulRes396D#1 = IMul(ilit3713,idx376F);
          int mulRes3970#1 = IMul(ilit3713,idx3772);
          int mulRes3973#1 = IMul(ilit3713,idx3775);
          int mulRes3976#1 = IMul(ilit3713,idx3778);
          int mulRes3979#1 = IMul(ilit3713,idx377B);
          int mulRes397C#1 = IMul(ilit3713,idx377E);
          int mulRes397F#1 = IMul(ilit3713,idx3781);
          int mulRes3982#1 = IMul(ilit3713,idx3784);
          int mulRes3985#1 = IMul(ilit3713,idx3787);
          int mulRes3988#1 = IMul(ilit3713,idx378A);
          int mulRes398B#1 = IMul(ilit3713,idx378D);
          int mulRes398E#1 = IMul(ilit3713,idx3790);
          int mulRes3991#1 = IMul(ilit3713,idx3793);
          int mulRes3994#1 = IMul(ilit3713,idx3796);
          int mulRes3997#1 = IMul(ilit3713,idx3799);
          int mulRes399A#1 = IMul(ilit3713,idx379C);
          int mulRes399D#1 = IMul(ilit3713,idx379F);
          int mulRes39A0#1 = IMul(ilit3713,idx37A2);
          int mulRes39A3#1 = IMul(ilit3713,idx37A5);
          int mulRes39A6#1 = IMul(ilit3713,idx37A8);
          int mulRes39A9#1 = IMul(ilit3713,idx37AB);
          int mulRes39AC#1 = IMul(ilit3713,idx37AE);
          int mulRes39AF#1 = IMul(ilit3713,idx37B1);
          int mulRes39B2#1 = IMul(ilit3713,idx37B4);
          int mulRes39B5#1 = IMul(ilit3713,idx37B7);
          int mulRes39B8#1 = IMul(ilit3713,idx37BA);
          int mulRes39BB#1 = IMul(ilit3713,idx37BD);
          int mulRes39BE#1 = IMul(ilit3713,idx37C0);
          int mulRes39C1#1 = IMul(ilit3713,idx37C3);
          int mulRes39C4#1 = IMul(ilit3713,idx37C6);
          int mulRes39C7#1 = IMul(ilit3713,idx37C9);
          int mulRes39CA#1 = IMul(ilit3713,idx37CC);
          int mulRes39CD#1 = IMul(ilit3713,idx37CF);
          int mulRes39D0#1 = IMul(ilit3713,idx37D2);
          int mulRes39D3#1 = IMul(ilit3713,idx37D5);
          int mulRes39D6#1 = IMul(ilit3713,idx37D8);
          int mulRes39D9#1 = IMul(ilit3713,idx37DB);
          int mulRes39DC#1 = IMul(ilit3713,idx37DE);
          int mulRes39DF#1 = IMul(ilit3713,idx37E1);
          int mulRes39E2#1 = IMul(ilit3713,idx37E4);
          int mulRes39E5#1 = IMul(ilit3713,idx37E7);
          int mulRes39E8#1 = IMul(ilit3713,idx37EA);
          int mulRes39EB#1 = IMul(ilit3713,idx37ED);
          int mulRes39EE#1 = IMul(ilit3713,idx37F0);
          int mulRes39F1#1 = IMul(ilit3713,idx37F3);
          int mulRes39F4#1 = IMul(ilit3713,idx37F6);
          int mulRes39F7#1 = IMul(ilit3713,idx37F9);
          int mulRes39FA#1 = IMul(ilit3713,idx37FC);
          int mulRes39FD#1 = IMul(ilit3713,idx37FF);
          int mulRes3A00#1 = IMul(ilit3713,idx3802);
          int mulRes3A03#1 = IMul(ilit3713,idx3805);
          int mulRes3A06#1 = IMul(ilit3713,idx3808);
          int mulRes3A09#1 = IMul(ilit3713,idx380B);
          real dof3A0A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3911);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3913);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3916);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3919);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391C);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391F);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3922);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3925);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3928);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392B);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392E);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3931);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3934);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3937);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393A);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393D);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3940);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3943);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3946);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3949);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394C);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394F);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3952);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3955);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3958);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395B);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395E);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3961);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3964);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3967);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396A);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396D);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3970);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3973);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3976);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3979);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397C);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397F);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3982);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3985);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3988);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398B);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398E);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3991);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3994);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3997);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399A);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399D);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A0);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A3);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A6);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A9);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AC);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AF);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B2);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B5);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B8);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BB);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BE);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C1);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C4);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C7);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CA);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CD);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D0);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D3);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D6);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D9);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DC);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DF);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E2);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E5);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E8);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EB);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EE);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F1);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F4);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F7);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FA);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FD);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A00);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A03);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A06);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A09);
          tensor[84] dofs3A5E#1 = <tensor[84]>[dof3A0A,dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D];
          real varAcc3BB2#27 = VIndex<3,0>(_t3708);
          real varAcc3BB3#12 = VIndex<3,1>(_t3708);
          real varAcc3BB4#12 = VIndex<3,2>(_t3708);
          real prod3BB6#7 = RMul(_t36A9,_t36A9);
          real prod3BB7#1 = RMul(_t36A9,prod3BB6);
          real basisEval3BB8#1 = RMul(_t36A9,prod3BB7);
          real prod3BBA#6 = RMul(_t36A9,varAcc3BB4);
          real prod3BBB#1 = RMul(_t36A9,prod3BBA);
          real basisEval3BBC#1 = RMul(_t36A9,prod3BBB);
          real prod3BBE#6 = RMul(varAcc3BB3,_t36A9);
          real prod3BBF#1 = RMul(_t36A9,prod3BBE);
          real basisEval3BC0#1 = RMul(_t36A9,prod3BBF);
          real prod3BC2#1 = RMul(varAcc3BB2,prod3BB6);
          real basisEval3BC3#1 = RMul(_t36A9,prod3BC2);
          real prod23BC4#6 = RMul(varAcc3BB4,varAcc3BB4);
          real prod3BC5#5 = RMul(_t36A9,prod23BC4);
          real prod3BC6#1 = RMul(_t36A9,prod3BC5);
          real basisEval3BC7#1 = RMul(_t36A9,prod3BC6);
          real prod3BC8#5 = RMul(varAcc3BB3,varAcc3BB4);
          real prod3BC9#1 = RMul(_t36A9,prod3BC8);
          real basisEval3BCA#1 = RMul(_t36A9,prod3BC9);
          real prod23BCB#6 = RMul(varAcc3BB3,varAcc3BB3);
          real prod3BCC#5 = RMul(prod23BCB,_t36A9);
          real prod3BCD#1 = RMul(_t36A9,prod3BCC);
          real basisEval3BCE#1 = RMul(_t36A9,prod3BCD);
          real prod3BCF#1 = RMul(varAcc3BB2,prod3BBA);
          real basisEval3BD0#1 = RMul(_t36A9,prod3BCF);
          real prod3BD1#1 = RMul(varAcc3BB2,prod3BBE);
          real basisEval3BD2#1 = RMul(_t36A9,prod3BD1);
          real prod23BD3#16 = RMul(varAcc3BB2,varAcc3BB2);
          real prod3BD4#1 = RMul(prod23BD3,prod3BB6);
          real basisEval3BD5#1 = RMul(_t36A9,prod3BD4);
          real prod33BD6#5 = RMul(prod23BC4,varAcc3BB4);
          real prod3BD7#4 = RMul(_t36A9,prod33BD6);
          real prod3BD8#1 = RMul(_t36A9,prod3BD7);
          real basisEval3BD9#1 = RMul(_t36A9,prod3BD8);
          real prod3BDA#4 = RMul(varAcc3BB3,prod23BC4);
          real prod3BDB#1 = RMul(_t36A9,prod3BDA);
          real basisEval3BDC#1 = RMul(_t36A9,prod3BDB);
          real prod3BDD#4 = RMul(prod23BCB,varAcc3BB4);
          real prod3BDE#1 = RMul(_t36A9,prod3BDD);
          real basisEval3BDF#1 = RMul(_t36A9,prod3BDE);
          real prod33BE0#5 = RMul(prod23BCB,varAcc3BB3);
          real prod3BE1#4 = RMul(prod33BE0,_t36A9);
          real prod3BE2#1 = RMul(_t36A9,prod3BE1);
          real basisEval3BE3#1 = RMul(_t36A9,prod3BE2);
          real prod3BE4#1 = RMul(varAcc3BB2,prod3BC5);
          real basisEval3BE5#1 = RMul(_t36A9,prod3BE4);
          real prod3BE6#1 = RMul(varAcc3BB2,prod3BC8);
          real basisEval3BE7#1 = RMul(_t36A9,prod3BE6);
          real prod3BE8#1 = RMul(varAcc3BB2,prod3BCC);
          real basisEval3BE9#1 = RMul(_t36A9,prod3BE8);
          real prod3BEA#1 = RMul(prod23BD3,prod3BBA);
          real basisEval3BEB#1 = RMul(_t36A9,prod3BEA);
          real prod3BEC#1 = RMul(prod23BD3,prod3BBE);
          real basisEval3BED#1 = RMul(_t36A9,prod3BEC);
          real prod33BEE#11 = RMul(prod23BD3,varAcc3BB2);
          real prod3BEF#1 = RMul(prod33BEE,prod3BB6);
          real basisEval3BF0#1 = RMul(_t36A9,prod3BEF);
          real prod43BF1#4 = RMul(prod33BD6,varAcc3BB4);
          real prod3BF2#3 = RMul(_t36A9,prod43BF1);
          real prod3BF3#1 = RMul(_t36A9,prod3BF2);
          real basisEval3BF4#1 = RMul(_t36A9,prod3BF3);
          real prod3BF5#3 = RMul(varAcc3BB3,prod33BD6);
          real prod3BF6#1 = RMul(_t36A9,prod3BF5);
          real basisEval3BF7#1 = RMul(_t36A9,prod3BF6);
          real prod3BF8#3 = RMul(prod23BCB,prod23BC4);
          real prod3BF9#1 = RMul(_t36A9,prod3BF8);
          real basisEval3BFA#1 = RMul(_t36A9,prod3BF9);
          real prod3BFB#3 = RMul(prod33BE0,varAcc3BB4);
          real prod3BFC#1 = RMul(_t36A9,prod3BFB);
          real basisEval3BFD#1 = RMul(_t36A9,prod3BFC);
          real prod43BFE#4 = RMul(prod33BE0,varAcc3BB3);
          real prod3BFF#3 = RMul(prod43BFE,_t36A9);
          real prod3C00#1 = RMul(_t36A9,prod3BFF);
          real basisEval3C01#1 = RMul(_t36A9,prod3C00);
          real prod3C02#1 = RMul(varAcc3BB2,prod3BD7);
          real basisEval3C03#1 = RMul(_t36A9,prod3C02);
          real prod3C04#1 = RMul(varAcc3BB2,prod3BDA);
          real basisEval3C05#1 = RMul(_t36A9,prod3C04);
          real prod3C06#1 = RMul(varAcc3BB2,prod3BDD);
          real basisEval3C07#1 = RMul(_t36A9,prod3C06);
          real prod3C08#1 = RMul(varAcc3BB2,prod3BE1);
          real basisEval3C09#1 = RMul(_t36A9,prod3C08);
          real prod3C0A#1 = RMul(prod23BD3,prod3BC5);
          real basisEval3C0B#1 = RMul(_t36A9,prod3C0A);
          real prod3C0C#1 = RMul(prod23BD3,prod3BC8);
          real basisEval3C0D#1 = RMul(_t36A9,prod3C0C);
          real prod3C0E#1 = RMul(prod23BD3,prod3BCC);
          real basisEval3C0F#1 = RMul(_t36A9,prod3C0E);
          real prod3C10#1 = RMul(prod33BEE,prod3BBA);
          real basisEval3C11#1 = RMul(_t36A9,prod3C10);
          real prod3C12#1 = RMul(prod33BEE,prod3BBE);
          real basisEval3C13#1 = RMul(_t36A9,prod3C12);
          real prod43C14#7 = RMul(prod33BEE,varAcc3BB2);
          real prod3C15#1 = RMul(prod43C14,prod3BB6);
          real basisEval3C16#1 = RMul(_t36A9,prod3C15);
          real prod53C17#3 = RMul(prod43BF1,varAcc3BB4);
          real prod3C18#2 = RMul(_t36A9,prod53C17);
          real prod3C19#1 = RMul(_t36A9,prod3C18);
          real basisEval3C1A#1 = RMul(_t36A9,prod3C19);
          real prod3C1B#2 = RMul(varAcc3BB3,prod43BF1);
          real prod3C1C#1 = RMul(_t36A9,prod3C1B);
          real basisEval3C1D#1 = RMul(_t36A9,prod3C1C);
          real prod3C1E#2 = RMul(prod23BCB,prod33BD6);
          real prod3C1F#1 = RMul(_t36A9,prod3C1E);
          real basisEval3C20#1 = RMul(_t36A9,prod3C1F);
          real prod3C21#2 = RMul(prod33BE0,prod23BC4);
          real prod3C22#1 = RMul(_t36A9,prod3C21);
          real basisEval3C23#1 = RMul(_t36A9,prod3C22);
          real prod3C24#2 = RMul(prod43BFE,varAcc3BB4);
          real prod3C25#1 = RMul(_t36A9,prod3C24);
          real basisEval3C26#1 = RMul(_t36A9,prod3C25);
          real prod53C27#3 = RMul(prod43BFE,varAcc3BB3);
          real prod3C28#2 = RMul(prod53C27,_t36A9);
          real prod3C29#1 = RMul(_t36A9,prod3C28);
          real basisEval3C2A#1 = RMul(_t36A9,prod3C29);
          real prod3C2B#1 = RMul(varAcc3BB2,prod3BF2);
          real basisEval3C2C#1 = RMul(_t36A9,prod3C2B);
          real prod3C2D#1 = RMul(varAcc3BB2,prod3BF5);
          real basisEval3C2E#1 = RMul(_t36A9,prod3C2D);
          real prod3C2F#1 = RMul(varAcc3BB2,prod3BF8);
          real basisEval3C30#1 = RMul(_t36A9,prod3C2F);
          real prod3C31#1 = RMul(varAcc3BB2,prod3BFB);
          real basisEval3C32#1 = RMul(_t36A9,prod3C31);
          real prod3C33#1 = RMul(varAcc3BB2,prod3BFF);
          real basisEval3C34#1 = RMul(_t36A9,prod3C33);
          real prod3C35#1 = RMul(prod23BD3,prod3BD7);
          real basisEval3C36#1 = RMul(_t36A9,prod3C35);
          real prod3C37#1 = RMul(prod23BD3,prod3BDA);
          real basisEval3C38#1 = RMul(_t36A9,prod3C37);
          real prod3C39#1 = RMul(prod23BD3,prod3BDD);
          real basisEval3C3A#1 = RMul(_t36A9,prod3C39);
          real prod3C3B#1 = RMul(prod23BD3,prod3BE1);
          real basisEval3C3C#1 = RMul(_t36A9,prod3C3B);
          real prod3C3D#1 = RMul(prod33BEE,prod3BC5);
          real basisEval3C3E#1 = RMul(_t36A9,prod3C3D);
          real prod3C3F#1 = RMul(prod33BEE,prod3BC8);
          real basisEval3C40#1 = RMul(_t36A9,prod3C3F);
          real prod3C41#1 = RMul(prod33BEE,prod3BCC);
          real basisEval3C42#1 = RMul(_t36A9,prod3C41);
          real prod3C43#1 = RMul(prod43C14,prod3BBA);
          real basisEval3C44#1 = RMul(_t36A9,prod3C43);
          real prod3C45#1 = RMul(prod43C14,prod3BBE);
          real basisEval3C46#1 = RMul(_t36A9,prod3C45);
          real prod53C47#4 = RMul(prod43C14,varAcc3BB2);
          real prod3C48#1 = RMul(prod53C47,prod3BB6);
          real basisEval3C49#1 = RMul(_t36A9,prod3C48);
          real prod63C4A#1 = RMul(prod53C17,varAcc3BB4);
          real prod3C4B#1 = RMul(_t36A9,prod63C4A);
          real prod3C4C#1 = RMul(_t36A9,prod3C4B);
          real basisEval3C4D#1 = RMul(_t36A9,prod3C4C);
          real prod3C4E#1 = RMul(varAcc3BB3,prod53C17);
          real prod3C4F#1 = RMul(_t36A9,prod3C4E);
          real basisEval3C50#1 = RMul(_t36A9,prod3C4F);
          real prod3C51#1 = RMul(prod23BCB,prod43BF1);
          real prod3C52#1 = RMul(_t36A9,prod3C51);
          real basisEval3C53#1 = RMul(_t36A9,prod3C52);
          real prod3C54#1 = RMul(prod33BE0,prod33BD6);
          real prod3C55#1 = RMul(_t36A9,prod3C54);
          real basisEval3C56#1 = RMul(_t36A9,prod3C55);
          real prod3C57#1 = RMul(prod43BFE,prod23BC4);
          real prod3C58#1 = RMul(_t36A9,prod3C57);
          real basisEval3C59#1 = RMul(_t36A9,prod3C58);
          real prod3C5A#1 = RMul(prod53C27,varAcc3BB4);
          real prod3C5B#1 = RMul(_t36A9,prod3C5A);
          real basisEval3C5C#1 = RMul(_t36A9,prod3C5B);
          real prod63C5D#1 = RMul(prod53C27,varAcc3BB3);
          real prod3C5E#1 = RMul(prod63C5D,_t36A9);
          real prod3C5F#1 = RMul(_t36A9,prod3C5E);
          real basisEval3C60#1 = RMul(_t36A9,prod3C5F);
          real prod3C61#1 = RMul(varAcc3BB2,prod3C18);
          real basisEval3C62#1 = RMul(_t36A9,prod3C61);
          real prod3C63#1 = RMul(varAcc3BB2,prod3C1B);
          real basisEval3C64#1 = RMul(_t36A9,prod3C63);
          real prod3C65#1 = RMul(varAcc3BB2,prod3C1E);
          real basisEval3C66#1 = RMul(_t36A9,prod3C65);
          real prod3C67#1 = RMul(varAcc3BB2,prod3C21);
          real basisEval3C68#1 = RMul(_t36A9,prod3C67);
          real prod3C69#1 = RMul(varAcc3BB2,prod3C24);
          real basisEval3C6A#1 = RMul(_t36A9,prod3C69);
          real prod3C6B#1 = RMul(varAcc3BB2,prod3C28);
          real basisEval3C6C#1 = RMul(_t36A9,prod3C6B);
          real prod3C6D#1 = RMul(prod23BD3,prod3BF2);
          real basisEval3C6E#1 = RMul(_t36A9,prod3C6D);
          real prod3C6F#1 = RMul(prod23BD3,prod3BF5);
          real basisEval3C70#1 = RMul(_t36A9,prod3C6F);
          real prod3C71#1 = RMul(prod23BD3,prod3BF8);
          real basisEval3C72#1 = RMul(_t36A9,prod3C71);
          real prod3C73#1 = RMul(prod23BD3,prod3BFB);
          real basisEval3C74#1 = RMul(_t36A9,prod3C73);
          real prod3C75#1 = RMul(prod23BD3,prod3BFF);
          real basisEval3C76#1 = RMul(_t36A9,prod3C75);
          real prod3C77#1 = RMul(prod33BEE,prod3BD7);
          real basisEval3C78#1 = RMul(_t36A9,prod3C77);
          real prod3C79#1 = RMul(prod33BEE,prod3BDA);
          real basisEval3C7A#1 = RMul(_t36A9,prod3C79);
          real prod3C7B#1 = RMul(prod33BEE,prod3BDD);
          real basisEval3C7C#1 = RMul(_t36A9,prod3C7B);
          real prod3C7D#1 = RMul(prod33BEE,prod3BE1);
          real basisEval3C7E#1 = RMul(_t36A9,prod3C7D);
          real prod3C7F#1 = RMul(prod43C14,prod3BC5);
          real basisEval3C80#1 = RMul(_t36A9,prod3C7F);
          real prod3C81#1 = RMul(prod43C14,prod3BC8);
          real basisEval3C82#1 = RMul(_t36A9,prod3C81);
          real prod3C83#1 = RMul(prod43C14,prod3BCC);
          real basisEval3C84#1 = RMul(_t36A9,prod3C83);
          real prod3C85#1 = RMul(prod53C47,prod3BBA);
          real basisEval3C86#1 = RMul(_t36A9,prod3C85);
          real prod3C87#1 = RMul(prod53C47,prod3BBE);
          real basisEval3C88#1 = RMul(_t36A9,prod3C87);
          real prod63C89#1 = RMul(prod53C47,varAcc3BB2);
          real prod3C8A#1 = RMul(prod63C89,prod3BB6);
          real basisEval3C8B#1 = RMul(_t36A9,prod3C8A);
          tensor[84] intermediateCons3C8C#1 = <tensor[84]>[basisEval3BB8,basisEval3BBC,basisEval3BC0,basisEval3BC3,basisEval3BC7,basisEval3BCA,basisEval3BCE,basisEval3BD0,basisEval3BD2,basisEval3BD5,basisEval3BD9,basisEval3BDC,basisEval3BDF,basisEval3BE3,basisEval3BE5,basisEval3BE7,basisEval3BE9,basisEval3BEB,basisEval3BED,basisEval3BF0,basisEval3BF4,basisEval3BF7,basisEval3BFA,basisEval3BFD,basisEval3C01,basisEval3C03,basisEval3C05,basisEval3C07,basisEval3C09,basisEval3C0B,basisEval3C0D,basisEval3C0F,basisEval3C11,basisEval3C13,basisEval3C16,basisEval3C1A,basisEval3C1D,basisEval3C20,basisEval3C23,basisEval3C26,basisEval3C2A,basisEval3C2C,basisEval3C2E,basisEval3C30,basisEval3C32,basisEval3C34,basisEval3C36,basisEval3C38,basisEval3C3A,basisEval3C3C,basisEval3C3E,basisEval3C40,basisEval3C42,basisEval3C44,basisEval3C46,basisEval3C49,basisEval3C4D,basisEval3C50,basisEval3C53,basisEval3C56,basisEval3C59,basisEval3C5C,basisEval3C60,basisEval3C62,basisEval3C64,basisEval3C66,basisEval3C68,basisEval3C6A,basisEval3C6C,basisEval3C6E,basisEval3C70,basisEval3C72,basisEval3C74,basisEval3C76,basisEval3C78,basisEval3C7A,basisEval3C7C,basisEval3C7E,basisEval3C80,basisEval3C82,basisEval3C84,basisEval3C86,basisEval3C88,basisEval3C8B];
          real probe_l_83D69#1 = VDot<84>(dofs3A5E,intermediateCons3C8C);
          real op1_e3_l_93D6C#1 = RSub(probe_l_83D69,cmin36FF);
          real op1_e3_l_103D6F#1 = RSub(cmax3701,cmin36FF);
          real op1_e3_l_113D72#1 = RDiv(op1_e3_l_93D6C,op1_e3_l_103D6F);
          real op1_e3_l_123D75#1 = RSub(_t36A9,_t36A7);
          real op1_e3_l_133D78#1 = RMul(op1_e3_l_113D72,op1_e3_l_123D75);
          real _t3D7B#1 = RAdd(_t36A7,op1_e3_l_133D78);
          real Mtransform3D7E#1 = Transform<IMAGE1D<double[3]>>(cmap2469);
          real MxPos3D80#1 = RMul(Mtransform3D7E,_t3D7B);
          real Ttranslate3D83#1 = Translate<IMAGE1D<double[3]>>(cmap2469);
          real imgPos3D85#2 = RAdd(MxPos3D80,Ttranslate3D83);
          real nd3D88#2 = Floor<1>(imgPos3D85);
          real f3D8A#2 = RSub(imgPos3D85,nd3D88);
          int n3D8D#5 = RealToInt<1>(nd3D88);
          bool isInside3D91#1 = IndexInside<IMAGE1D<double[3]>,2>(n3D8D,cmap2469);
          if isInside3D91 then goto ASSIGN45D6 else goto ASSIGN45CE
        ASSIGN45D6:  preds = [COND3D93]
          int offp3D98#3 = IMul(ilit3719,n3D8D);
          real v0_3D99#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D98);
          int addRes3D9B#1 = IAdd(n3D8D,ilit3713);
          int offp3D9C#3 = IMul(ilit3719,addRes3D9B);
          real v1_3D9D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9C);
          tensor[2] v_3D9E#1 = <tensor[2]>[v0_3D99,v1_3D9D];
          int offp3D9F#1 = IAdd(offp3D98,ilit3713);
          real v0_3DA0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9F);
          int offp3DA1#1 = IAdd(offp3D9C,ilit3713);
          real v1_3DA2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA1);
          tensor[2] v_3DA3#1 = <tensor[2]>[v0_3DA0,v1_3DA2];
          int offp3DA5#1 = IAdd(offp3D98,ilit3716);
          real v0_3DA6#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA5);
          int offp3DA7#1 = IAdd(offp3D9C,ilit3716);
          real v1_3DA8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA7);
          tensor[2] v_3DA9#1 = <tensor[2]>[v0_3DA6,v1_3DA8];
          tensor[3,2] voxels3DAA#1 = <tensor[3,2]>[v_3D9E,v_3DA3,v_3DA9];
          goto JOIN3DC4
        JOIN3DC4:  preds = [ASSIGN3DC0,ASSIGN3E9D]
          tensor[3,2] ldvox3DC2#3 = phi(voxels3DAA,voxels3E85)
          real idx3DC7#1 = RSub(f3D8A,_t36A9);
          tensor[2] kernX_3DC5#1 = <tensor[2]>[f3D8A,idx3DC7];
          tensor[2] a03DCC#1 = <tensor[2]>[_t36A9,_t36A9];
          real _f3DCE#1 = -0.1e1;
          tensor[2] a13DCD#1 = <tensor[2]>[_f3DCE,_t36A9];
          tensor[2] prod13DD2#1 = VMul<2>(kernX_3DC5,a13DCD);
          tensor[2] kevalX_d0_3DCB#3 = VAdd<2>(a03DCC,prod13DD2);
          tensor[2] projIx3DDC#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC2);
          real vdot3DDD#1 = VDot<2>(projIx3DDC,kevalX_d0_3DCB);
          tensor[2] projIx3DDE#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC2);
          real vdot3DDF#1 = VDot<2>(projIx3DDE,kevalX_d0_3DCB);
          tensor[2] projIx3DE0#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC2);
          real vdot3DE1#1 = VDot<2>(projIx3DE0,kevalX_d0_3DCB);
          tensor[3] mcol3DDB#1 = <tensor[3]>[vdot3DDD,vdot3DDF,vdot3DE1];
          goto JOIN3DEB
        JOIN3DEB:  preds = [ASSIGN3DE9,COND3707]
          tensor[3] mcol3DEA#3 = phi(mcol3DDB,mcol3703)
          real op1_e3_l_213DEC#1 = RDiv(_t36A9,op1_e3_l_836B0);
          tensor[3] op1_e3_l_223DF1#1 = VScale<3>(op1_e3_l_213DEC,step36A4);
          tensor[3] op1_e3_l_233DF4#1 = VNeg<3>(op1_e3_l_223DF1);
          real op1_e3_l_243DF7#2 = VDot<3>(op1_e3_l_233DF4,litwsp2493);
          real op1_e3_l_253DFA#1 = RMul(op1_e3_l_243DF7,op1_e3_l_243DF7);
          real op1_e3_l_263DFD#1 = RMul(phKd24A1,op1_e3_l_253DFA);
          real op1_e3_l_283E00#1 = RSub(rayN24AB,camNearVsp248F);
          real op1_e3_l_293E03#1 = RSub(camFarVsp2491,camNearVsp248F);
          real op1_e3_l_303E06#1 = RDiv(op1_e3_l_283E00,op1_e3_l_293E03);
          tensor[3] op1_e3_l_313E09#1 = VSub<3>(mcFar2487,mcNear2485);
          tensor[3] op1_e3_l_323E0C#1 = VScale<3>(op1_e3_l_303E06,op1_e3_l_313E09);
          real op1_e3_l_333E0F#3 = RAdd(phKa249F,op1_e3_l_263DFD);
          tensor[3] op1_e3_l_343E12#3 = VAdd<3>(mcNear2485,op1_e3_l_323E0C);
          real r3E16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E12);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(mcol3DEA);
          real r3E18#1 = RMul(op1_e3_l_333E0F,r3E16);
          real r3E19#1 = RMul(r3E18,r3E17);
          real r3E1A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E12);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(mcol3DEA);
          real r3E1C#1 = RMul(op1_e3_l_333E0F,r3E1A);
          real r3E1D#1 = RMul(r3E1C,r3E1B);
          real r3E1E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E12);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(mcol3DEA);
          real r3E20#1 = RMul(op1_e3_l_333E0F,r3E1E);
          real r3E21#1 = RMul(r3E20,r3E1F);
          tensor[3] op1_e3_l_353E15#1 = <tensor[3]>[r3E19,r3E1D,r3E21];
          real r3E32#1 = RMul(phKs24A3,scomp36FD);
          real r3E33#3 = RMul(r3E32,_t36A9);
          tensor[3] op1_e3_l_363E30#1 = <tensor[3]>[r3E33,r3E33,r3E33];
          real op1_e3_l_373E41#2 = RSub(_t36A9,_t36D4);
          tensor[3] op1_e3_l_383E44#3 = VAdd<3>(op1_e3_l_353E15,op1_e3_l_363E30);
          real r3E48#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E44);
          real r3E49#3 = RMul(transp24A9,op1_e3_l_373E41);
          real r3E4A#1 = RMul(r3E49,r3E48);
          real r3E4B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E44);
          real r3E4C#1 = RMul(r3E49,r3E4B);
          real r3E4D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E44);
          real r3E4E#1 = RMul(r3E49,r3E4D);
          tensor[3] op1_e3_l_393E47#1 = <tensor[3]>[r3E4A,r3E4C,r3E4E];
          tensor[3] rgb3E58#2 = VAdd<3>(rgb24A7,op1_e3_l_393E47);
          real op1_e3_l_53E5B#1 = RSub(_t36A9,op1_e3_l_373E41);
          real transp3E5E#2 = RMul(transp24A9,op1_e3_l_53E5B);
          bool _t3E61#1 = LT<real>(transp3E5E,transp02479);
          if _t3E61 then goto SAVE3E64 else goto JOIN3E69
        SAVE3E64:  preds = [COND3E63]
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = _t36A7;
          stabilize
          goto JOIN3E69
        JOIN3E69:  preds = [*STABILIZE3E67,COND3E63]
          real transp3E68#1 = phi(transp3E5E)
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = transp3E68;
          active
        ASSIGN45CE:  preds = [COND3D93]
          int ix3E70#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,n3D8D);
          int offp3E72#3 = IMul(ilit3719,ix3E70);
          real v0_3E73#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E72);
          int addRes3E75#1 = IAdd(n3D8D,ilit3713);
          int ix3E76#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,addRes3E75);
          int offp3E77#3 = IMul(ilit3719,ix3E76);
          real v1_3E78#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E77);
          tensor[2] v_3E79#1 = <tensor[2]>[v0_3E73,v1_3E78];
          int offp3E7A#1 = IAdd(offp3E72,ilit3713);
          real v0_3E7B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7A);
          int offp3E7C#1 = IAdd(offp3E77,ilit3713);
          real v1_3E7D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7C);
          tensor[2] v_3E7E#1 = <tensor[2]>[v0_3E7B,v1_3E7D];
          int offp3E80#1 = IAdd(offp3E72,ilit3716);
          real v0_3E81#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E80);
          int offp3E82#1 = IAdd(offp3E77,ilit3716);
          real v1_3E83#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E82);
          tensor[2] v_3E84#1 = <tensor[2]>[v0_3E81,v1_3E83];
          tensor[3,2] voxels3E85#1 = <tensor[3,2]>[v_3E79,v_3E7E,v_3E84];
          goto JOIN3DC4
        ASSIGN3EA0:  preds = [COND2D6D]
          real _t3E9F#3 = -0.1e1;
          real _t3EA1#3 = -0.2e1;
          real _t3EA3#3 = -0.3e1;
          real _t3EA9#9 = 0.e0;
          real r3EB8#5 = TensorIndex<tensor[3,3],[0,0]>(rot248D);
          real r3EBA#2 = RMul(r3EB8,_t3E9F);
          real r3EBB#5 = TensorIndex<tensor[3,3],[1,0]>(rot248D);
          real r3EBD#2 = RMul(r3EBB,_t3EA9);
          real r3EBE#5 = TensorIndex<tensor[3,3],[2,0]>(rot248D);
          real r3EC0#2 = RMul(r3EBE,_t3EA9);
          real r3EC1#1 = RAdd(r3EBA,r3EBD);
          real r3EC2#3 = RAdd(r3EC1,r3EC0);
          real r3EC4#2 = RMul(r3EB8,_t3EA9);
          real r3EC6#2 = RMul(r3EBB,_t3EA1);
          real r3EC9#1 = RAdd(r3EC4,r3EC6);
          real r3ECA#3 = RAdd(r3EC9,r3EC0);
          real r3ED0#2 = RMul(r3EBE,_t3EA3);
          real r3ED1#1 = RAdd(r3EC4,r3EBD);
          real r3ED2#3 = RAdd(r3ED1,r3ED0);
          real r3ED4#5 = TensorIndex<tensor[3,3],[0,1]>(rot248D);
          real r3ED5#2 = RMul(r3ED4,_t3E9F);
          real r3ED6#5 = TensorIndex<tensor[3,3],[1,1]>(rot248D);
          real r3ED7#2 = RMul(r3ED6,_t3EA9);
          real r3ED8#5 = TensorIndex<tensor[3,3],[2,1]>(rot248D);
          real r3ED9#2 = RMul(r3ED8,_t3EA9);
          real r3EDA#1 = RAdd(r3ED5,r3ED7);
          real r3EDB#3 = RAdd(r3EDA,r3ED9);
          real r3EDC#2 = RMul(r3ED4,_t3EA9);
          real r3EDD#2 = RMul(r3ED6,_t3EA1);
          real r3EDF#1 = RAdd(r3EDC,r3EDD);
          real r3EE0#3 = RAdd(r3EDF,r3ED9);
          real r3EE3#2 = RMul(r3ED8,_t3EA3);
          real r3EE4#1 = RAdd(r3EDC,r3ED7);
          real r3EE5#3 = RAdd(r3EE4,r3EE3);
          real r3EE7#5 = TensorIndex<tensor[3,3],[0,2]>(rot248D);
          real r3EE8#2 = RMul(r3EE7,_t3E9F);
          real r3EE9#5 = TensorIndex<tensor[3,3],[1,2]>(rot248D);
          real r3EEA#2 = RMul(r3EE9,_t3EA9);
          real r3EEB#5 = TensorIndex<tensor[3,3],[2,2]>(rot248D);
          real r3EEC#2 = RMul(r3EEB,_t3EA9);
          real r3EED#1 = RAdd(r3EE8,r3EEA);
          real r3EEE#3 = RAdd(r3EED,r3EEC);
          real r3EEF#2 = RMul(r3EE7,_t3EA9);
          real r3EF0#2 = RMul(r3EE9,_t3EA1);
          real r3EF2#1 = RAdd(r3EEF,r3EF0);
          real r3EF3#3 = RAdd(r3EF2,r3EEC);
          real r3EF6#2 = RMul(r3EEB,_t3EA3);
          real r3EF7#1 = RAdd(r3EEF,r3EEA);
          real r3EF8#3 = RAdd(r3EF7,r3EF6);
          real r3F41#1 = RMul(r3EC2,r3EB8);
          real r3F44#1 = RMul(r3ECA,r3EBB);
          real r3F47#1 = RMul(r3ED2,r3EBE);
          real r3F48#1 = RAdd(r3F41,r3F44);
          real r3F49#1 = RAdd(r3F48,r3F47);
          real r3F4B#1 = RMul(r3EC2,r3ED4);
          real r3F4D#1 = RMul(r3ECA,r3ED6);
          real r3F4F#1 = RMul(r3ED2,r3ED8);
          real r3F50#1 = RAdd(r3F4B,r3F4D);
          real r3F51#1 = RAdd(r3F50,r3F4F);
          real r3F53#1 = RMul(r3EC2,r3EE7);
          real r3F55#1 = RMul(r3ECA,r3EE9);
          real r3F57#1 = RMul(r3ED2,r3EEB);
          real r3F58#1 = RAdd(r3F53,r3F55);
          real r3F59#1 = RAdd(r3F58,r3F57);
          tensor[3] tensor3F5A#1 = <tensor[3]>[r3F49,r3F51,r3F59];
          real r3F5C#1 = RMul(r3EDB,r3EB8);
          real r3F5E#1 = RMul(r3EE0,r3EBB);
          real r3F60#1 = RMul(r3EE5,r3EBE);
          real r3F61#1 = RAdd(r3F5C,r3F5E);
          real r3F62#1 = RAdd(r3F61,r3F60);
          real r3F63#1 = RMul(r3EDB,r3ED4);
          real r3F64#1 = RMul(r3EE0,r3ED6);
          real r3F65#1 = RMul(r3EE5,r3ED8);
          real r3F66#1 = RAdd(r3F63,r3F64);
          real r3F67#1 = RAdd(r3F66,r3F65);
          real r3F68#1 = RMul(r3EDB,r3EE7);
          real r3F69#1 = RMul(r3EE0,r3EE9);
          real r3F6A#1 = RMul(r3EE5,r3EEB);
          real r3F6B#1 = RAdd(r3F68,r3F69);
          real r3F6C#1 = RAdd(r3F6B,r3F6A);
          tensor[3] tensor3F6D#1 = <tensor[3]>[r3F62,r3F67,r3F6C];
          real r3F6F#1 = RMul(r3EEE,r3EB8);
          real r3F71#1 = RMul(r3EF3,r3EBB);
          real r3F73#1 = RMul(r3EF8,r3EBE);
          real r3F74#1 = RAdd(r3F6F,r3F71);
          real r3F75#1 = RAdd(r3F74,r3F73);
          real r3F76#1 = RMul(r3EEE,r3ED4);
          real r3F77#1 = RMul(r3EF3,r3ED6);
          real r3F78#1 = RMul(r3EF8,r3ED8);
          real r3F79#1 = RAdd(r3F76,r3F77);
          real r3F7A#1 = RAdd(r3F79,r3F78);
          real r3F7B#1 = RMul(r3EEE,r3EE7);
          real r3F7C#1 = RMul(r3EF3,r3EE9);
          real r3F7D#1 = RMul(r3EF8,r3EEB);
          real r3F7E#1 = RAdd(r3F7B,r3F7C);
          real r3F7F#1 = RAdd(r3F7E,r3F7D);
          tensor[3] tensor3F80#1 = <tensor[3]>[r3F75,r3F7A,r3F7F];
          tensor[3,3] H3F3E#1 = <tensor[3,3]>[tensor3F5A,tensor3F6D,tensor3F80];
          (real[3] evals3FC5#2,tensor[3][3] E3FC6#2) = EigenVecs3x3(H3F3E);
          int _t3FC8#2 = 2;
          tensor[3] _t3FCA#6 = Subscript<tensor[3][3]>(E3FC6,_t3FC8);
          real _t3FCC#9 = Subscript<real[3]>(evals3FC5,_t3FC8);
          int _t3FCE#2 = 1;
          tensor[3] _t3FD0#6 = Subscript<tensor[3][3]>(E3FC6,_t3FCE);
          real _t3FD2#9 = Subscript<real[3]>(evals3FC5,_t3FCE);
          real r3FD5#1 = TensorIndex<tensor[3],[0]>(_t3FCA);
          tensor[3] binopV3FD6#3 = VScale<3>(r3FD5,_t3FCA);
          real r3FD7#1 = TensorIndex<tensor[3],[1]>(_t3FCA);
          tensor[3] binopV3FD8#3 = VScale<3>(r3FD7,_t3FCA);
          real r3FD9#1 = TensorIndex<tensor[3],[2]>(_t3FCA);
          tensor[3] binopV3FDA#3 = VScale<3>(r3FD9,_t3FCA);
          real r3FE4#1 = TensorIndex<tensor[3],[0]>(_t3FD0);
          tensor[3] binopV3FE5#3 = VScale<3>(r3FE4,_t3FD0);
          real r3FE6#1 = TensorIndex<tensor[3],[1]>(_t3FD0);
          tensor[3] binopV3FE7#3 = VScale<3>(r3FE6,_t3FD0);
          real r3FE8#1 = TensorIndex<tensor[3],[2]>(_t3FD0);
          tensor[3] binopV3FE9#3 = VScale<3>(r3FE8,_t3FD0);
          real r3FF3#1 = VIndex<3,0>(binopV3FD6);
          real r3FF4#1 = RDiv(r3FF3,_t3FCC);
          real r3FF5#1 = VIndex<3,1>(binopV3FD6);
          real r3FF6#1 = RDiv(r3FF5,_t3FCC);
          real r3FF7#1 = VIndex<3,2>(binopV3FD6);
          real r3FF8#1 = RDiv(r3FF7,_t3FCC);
          tensor[3] tensor3FF9#1 = <tensor[3]>[r3FF4,r3FF6,r3FF8];
          real r3FFA#1 = VIndex<3,0>(binopV3FD8);
          real r3FFB#1 = RDiv(r3FFA,_t3FCC);
          real r3FFC#1 = VIndex<3,1>(binopV3FD8);
          real r3FFD#1 = RDiv(r3FFC,_t3FCC);
          real r3FFE#1 = VIndex<3,2>(binopV3FD8);
          real r3FFF#1 = RDiv(r3FFE,_t3FCC);
          tensor[3] tensor4000#1 = <tensor[3]>[r3FFB,r3FFD,r3FFF];
          real r4001#1 = VIndex<3,0>(binopV3FDA);
          real r4002#1 = RDiv(r4001,_t3FCC);
          real r4003#1 = VIndex<3,1>(binopV3FDA);
          real r4004#1 = RDiv(r4003,_t3FCC);
          real r4005#1 = VIndex<3,2>(binopV3FDA);
          real r4006#1 = RDiv(r4005,_t3FCC);
          tensor[3] tensor4007#1 = <tensor[3]>[r4002,r4004,r4006];
          real r4020#1 = VIndex<3,0>(binopV3FE5);
          real r4021#1 = RDiv(r4020,_t3FD2);
          real r4022#1 = VIndex<3,1>(binopV3FE5);
          real r4023#1 = RDiv(r4022,_t3FD2);
          real r4024#1 = VIndex<3,2>(binopV3FE5);
          real r4025#1 = RDiv(r4024,_t3FD2);
          tensor[3] tensor4026#1 = <tensor[3]>[r4021,r4023,r4025];
          real r4027#1 = VIndex<3,0>(binopV3FE7);
          real r4028#1 = RDiv(r4027,_t3FD2);
          real r4029#1 = VIndex<3,1>(binopV3FE7);
          real r402A#1 = RDiv(r4029,_t3FD2);
          real r402B#1 = VIndex<3,2>(binopV3FE7);
          real r402C#1 = RDiv(r402B,_t3FD2);
          tensor[3] tensor402D#1 = <tensor[3]>[r4028,r402A,r402C];
          real r402E#1 = VIndex<3,0>(binopV3FE9);
          real r402F#1 = RDiv(r402E,_t3FD2);
          real r4030#1 = VIndex<3,1>(binopV3FE9);
          real r4031#1 = RDiv(r4030,_t3FD2);
          real r4032#1 = VIndex<3,2>(binopV3FE9);
          real r4033#1 = RDiv(r4032,_t3FD2);
          tensor[3] tensor4034#1 = <tensor[3]>[r402F,r4031,r4033];
          tensor[3] v404F#1 = VAdd<3>(tensor3FF9,tensor4026);
          tensor[3] v4052#1 = VAdd<3>(tensor4000,tensor402D);
          tensor[3] v4055#1 = VAdd<3>(tensor4007,tensor4034);
          tensor[3] projParam4062#1 = ProjectLast<tensor[3,3],[0]>(rot248D);
          real vdot4063#3 = VDot<3>(projParam4062,pos24B7);
          tensor[3] projParam4064#1 = ProjectLast<tensor[3,3],[1]>(rot248D);
          real vdot4065#3 = VDot<3>(projParam4064,pos24B7);
          tensor[3] projParam4066#1 = ProjectLast<tensor[3,3],[2]>(rot248D);
          real vdot4067#3 = VDot<3>(projParam4066,pos24B7);
          tensor[3] negV4072#1 = VNeg<3>(v404F);
          tensor[3] negV4074#1 = VNeg<3>(v4052);
          tensor[3] negV4076#1 = VNeg<3>(v4055);
          real r4084#1 = RMul(r3EBA,vdot4063);
          real r4089#1 = RMul(r3EC6,vdot4065);
          real r408E#1 = RMul(r3ED0,vdot4067);
          real r408F#1 = RAdd(r4084,r4089);
          real r4090#1 = RAdd(r408F,r408E);
          real r4093#1 = RMul(r3ED5,vdot4063);
          real r4096#1 = RMul(r3EDD,vdot4065);
          real r4099#1 = RMul(r3EE3,vdot4067);
          real r409A#1 = RAdd(r4093,r4096);
          real r409B#1 = RAdd(r409A,r4099);
          real r409E#1 = RMul(r3EE8,vdot4063);
          real r40A1#1 = RMul(r3EF0,vdot4065);
          real r40A4#1 = RMul(r3EF6,vdot4067);
          real r40A5#1 = RAdd(r409E,r40A1);
          real r40A6#1 = RAdd(r40A5,r40A4);
          tensor[3] op1_e3_l_23407F#3 = <tensor[3]>[r4090,r409B,r40A6];
          real vdot40D1#1 = VDot<3>(negV4072,op1_e3_l_23407F);
          real vdot40D3#1 = VDot<3>(negV4074,op1_e3_l_23407F);
          real vdot40D5#1 = VDot<3>(negV4076,op1_e3_l_23407F);
          tensor[3] _t36A5#1 = <tensor[3]>[vdot40D1,vdot40D3,vdot40D5];
          goto JOIN36A6
        ASSIGN40DE:  preds = [COND2D59]
          bool _t2D5D#1 = false;
          goto JOIN2D5E
        ASSIGN40DF:  preds = [COND2D54]
          bool _t2D60#1 = false;
          goto JOIN2D61
        ASSIGN40E0:  preds = [COND24C0]
          bool _t2D63#1 = false;
          goto JOIN2D64
    end update
    method stabilize
        ENTRY40E1:  preds = []
          tensor[4] rgba40E2#1 = self.rgba;
          tensor[3] rgb40E4#3 = self.rgb;
          real transp40E6#2 = self.transp;
          real _t40E8#2 = 0.1e1;
          bool _t40EA#1 = LT<real>(transp40E6,_t40E8);
          if _t40EA then goto ASSIGN40EF else goto JOIN4102
        ASSIGN40EF:  preds = [COND40EC]
          real aa40ED#4 = RSub(_t40E8,transp40E6);
          real _t40F0#1 = VIndex<3,0>(rgb40E4);
          real _t40F2#1 = RDiv(_t40F0,aa40ED);
          real _t40F5#1 = VIndex<3,1>(rgb40E4);
          real _t40F7#1 = RDiv(_t40F5,aa40ED);
          real _t40FA#1 = VIndex<3,2>(rgb40E4);
          real _t40FC#1 = RDiv(_t40FA,aa40ED);
          tensor[4] rgba40FF#1 = <tensor[4]>[_t40F2,_t40F7,_t40FC,aa40ED];
          goto JOIN4102
        JOIN4102:  preds = [ASSIGN4100,COND40EC]
          tensor[4] rgba4101#1 = phi(rgba40FF,rgba40E2)
          self.rgba = rgba4101;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY4105:  preds = []
      int iresU4106#1 = globals.iresU217E;
      int iresV4108#1 = globals.iresV217F;
      int _t410A#2 = 0;
      int _t410C#2 = 1;
      int _t410E#1 = ISub(iresV4108,_t410C);
      int[] _t4110#1 = Range(_t410A,_t410E);
    FOREACH4113:  preds = [ASSIGN4111,NEXT411C]
      foreach (vi4112 in _t4110) on exit goto RETURN411D
      int _t4114#1 = ISub(iresU4106,_t410C);
      int[] _t4116#1 = Range(_t410A,_t4114);
    FOREACH4119:  preds = [ASSIGN4117,NEXT411B]
      foreach (ui4118 in _t4116) on exit goto NEXT411C
      new ray(ui4118,vi4112);
      goto FOREACH4119
    NEXT411C:  preds = [FOREACH4119]
      goto FOREACH4113
    RETURN411D:  preds = [FOREACH4113]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2172 (block) = <no-default>
  input 0space0509_intermedateGlobal2173 (space) = <no-default>
  input 0U050B_intermedateGlobal2174 (U) = <no-default>
  input cellChoice2175 (cellChoice) = <no-default>
  input cmap2176 (cmap) = image("cmap.nrrd")
  input camEye2177 (camEye) = <default>
  input camAt2178 (camAt) = <default>
  input camUp2179 (camUp) = <default>
  input camNear217A (camNear) = <default>
  input camFar217B (camFar) = <default>
  input camFOV217C (camFOV) = <default>
  input camOrtho217D (camOrtho) = <default>
  input iresU217E (iresU) = <default>
  input iresV217F (iresV) = <default>
  input rayStep2180 (rayStep) = <default>
  input refStep2181 (refStep) = <default>
  input transp02182 (transp0) = <default>
  input thick2183 (thick) = <default>
  input fStrTh2184 (fStrTh) = <default>
  input fMaskTh2185 (fMaskTh) = <default>
  input fBias2186 (fBias) = <default>
  input maxAlpha2187 (maxAlpha) = <default>
  input light2188 (light) = <default>
  input phong2189 (phong) = <default>
  input mcNear218A (mcNear) = <default>
  input mcFar218B (mcFar) = <default>
  input litdir218C (litdir) = <default>
  input cminmax218D (cminmax) = <default>
  input analytical218E (analytical) = <default>
  input umm218F (umm) = image("data.nrrd")
  input rot2190 (rot) = <default>
  global tensor[3] camN2191
  global tensor[3] camU2192
  global tensor[3] camV2193
  global real camDist2194
  global real camVmax2195
  global real camUmax2196
  global real camNearVsp2197
  global real camFarVsp2198
  global tensor[3] litwsp2199
  global int _t219A
  global femData:Space _tX219B
  global femData:FemFunc _tXX219C
## functions
## input initialization
  ENTRY219F:  preds = []
    real _t21A0#19 = 0.e0;
    real _t21A2#1 = -0.2e1;
    tensor[3] camEye21A4#1 = <tensor[3]>[_t21A0,_t21A2,_t21A0];
    globals.camEye2177 = camEye21A4;
    tensor[3] camAt21A7#1 = <tensor[3]>[_t21A0,_t21A0,_t21A0];
    globals.camAt2178 = camAt21A7;
    real _t21AA#8 = 0.1e1;
    tensor[3] camUp21AC#1 = <tensor[3]>[_t21A0,_t21A0,_t21AA];
    globals.camUp2179 = camUp21AC;
    real camNear21AF#1 = -0.4e1;
    globals.camNear217A = camNear21AF;
    real camFar21B2#1 = 0.4e1;
    globals.camFar217B = camFar21B2;
    real camFOV21B5#1 = 0.1e2;
    globals.camFOV217C = camFOV21B5;
    bool camOrtho21B8#2 = false;
    globals.camOrtho217D = camOrtho21B8;
    int iresU21BB#2 = 100;
    globals.iresU217E = iresU21BB;
    globals.iresV217F = iresU21BB;
    real rayStep21BF#2 = 0.1e-3;
    globals.rayStep2180 = rayStep21BF;
    globals.refStep2181 = rayStep21BF;
    real transp021C3#1 = 0.5e-2;
    globals.transp02182 = transp021C3;
    real thick21C6#1 = 0.1e-1;
    globals.thick2183 = thick21C6;
    globals.fStrTh2184 = _t21A0;
    globals.fMaskTh2185 = _t21A0;
    real fBias21CB#2 = 0.1e0;
    globals.fBias2186 = fBias21CB;
    globals.maxAlpha2187 = _t21AA;
    globals.light2188 = camOrtho21B8;
    real _t21D0#1 = 0.7e0;
    real _t21D2#1 = 0.2e0;
    real _t21D4#1 = 0.1e3;
    tensor[4] phong21D6#1 = <tensor[4]>[fBias21CB,_t21D0,_t21D2,_t21D4];
    globals.phong2189 = phong21D6;
    tensor[3] mcNear21D9#2 = <tensor[3]>[_t21AA,_t21AA,_t21AA];
    globals.mcNear218A = mcNear21D9;
    globals.mcFar218B = mcNear21D9;
    real _t21DD#1 = -0.1e1;
    tensor[3] litdir21DF#1 = <tensor[3]>[_t21A0,_t21DD,_t21A0];
    globals.litdir218C = litdir21DF;
    tensor[2] cminmax21E2#1 = <tensor[2]>[_t21A0,_t21A0];
    globals.cminmax218D = cminmax21E2;
    bool analytical21E5#1 = true;
    globals.analytical218E = analytical21E5;
    tensor[3,3] rot21EC#1 = <tensor[3,3]>[_t21AA,_t21A0,_t21A0,_t21A0,_t21AA,_t21A0,_t21A0,_t21A0,_t21AA];
    globals.rot2190 = rot21EC;
    return
## global-variable initialization
  ENTRY21F0:  preds = []
    femData:Mesh block21F1#3 = globals.block2172;
    femData:Space 0space0509_intermedateGlobal21F3#1 = globals.0space0509_intermedateGlobal2173;
    femData:FemFunc 0U050B_intermedateGlobal21F5#1 = globals.0U050B_intermedateGlobal2174;
    int cellChoice21F7#1 = globals.cellChoice2175;
    tensor[3] camEye21FB#1 = globals.camEye2177;
    tensor[3] camAt21FD#1 = globals.camAt2178;
    tensor[3] camUp21FF#3 = globals.camUp2179;
    real camNear2201#1 = globals.camNear217A;
    real camFar2203#1 = globals.camFar217B;
    real camFOV2205#1 = globals.camFOV217C;
    int iresU2207#1 = globals.iresU217E;
    int iresV2209#1 = globals.iresV217F;
    tensor[3] litdir220B#5 = globals.litdir218C;
    int _t220D#1 = 0;
    int _t220F#1 = 1;
    int _t2211#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F1);
    int _t2213#1 = ISub(_t2211,_t220F);
    int[] _t2215#1 = Range(_t220D,_t2213);
    femData:MeshCell[] _t2217#1 = <femData:MeshCell[]>{};
  FOREACH221A:  preds = [ASSIGN2218,NEXT2220]
    foreach (_t2219 in _t2215) on exit goto ASSIGN2222
      femData:MeshCell[] _t221E#2 = phi(_t2217,_t221D)
    femData:MeshCell _t221B#1 = LoadFem<femData:MeshCell>(block21F1,_t2219);
    femData:MeshCell[] _t221D#1 = Append<femData:MeshCell>(_t221E,_t221B);
    goto FOREACH221A
  ASSIGN2222:  preds = [FOREACH221A]
    femData:Space space2221#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F3,block21F1);
    femData:FemFunc U2223#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F5,space2221);
    femData:MeshCell c12225#1 = Subscript<femData:MeshCell[]>(_t221E,cellChoice21F7);
    int _t2227#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12225);
    femData:FuncCell _t2229#2 = LoadFem<femData:FuncCell>(U2223,_t2227);
    femData:FemFunc _t222B#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2229);
    femData:Space _t222D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222B);
    int _t222F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2229);
    tensor[3] op1_e3_l_42235#9 = VSub<3>(camAt21FD,camEye21FB);
    real op1_e3_l_62238#1 = VDot<3>(op1_e3_l_42235,op1_e3_l_42235);
    real op1_e3_l_7223B#6 = Sqrt(op1_e3_l_62238);
    real realLit223F#9 = 0.1e1;
    real op1_e3_l_9223E#6 = RDiv(realLit223F,op1_e3_l_7223B);
    tensor[3] camN2243#4 = VScale<3>(op1_e3_l_9223E,op1_e3_l_42235);
    globals.camN2191 = camN2243;
    real realLit2248#6 = 0.e0;
    real r2249#3 = TensorIndex<tensor[3],[0]>(camUp21FF);
    real r224A#3 = RMul(realLit2248,r2249);
    real r224B#3 = TensorIndex<tensor[3],[1]>(camUp21FF);
    real r224C#3 = RMul(realLit2248,r224B);
    real r224D#3 = TensorIndex<tensor[3],[2]>(camUp21FF);
    real r224E#5 = RMul(realLit2248,r224D);
    real r224F#3 = RAdd(r224A,r224C);
    real r2250#3 = RAdd(r224F,r224E);
    real r2252#1 = RMul(realLit223F,r224D);
    real r2253#1 = RAdd(r224F,r2252);
    real realLit2254#6 = -0.1e1;
    real r2255#1 = RMul(realLit2254,r224B);
    real r2256#1 = RAdd(r224A,r2255);
    real r2257#1 = RAdd(r2256,r224E);
    tensor[3] tensor2258#1 = <tensor[3]>[r2250,r2253,r2257];
    real r2259#1 = RMul(realLit2254,r224D);
    real r225A#1 = RAdd(r224F,r2259);
    real r225B#1 = RMul(realLit223F,r2249);
    real r225C#1 = RAdd(r225B,r224C);
    real r225D#1 = RAdd(r225C,r224E);
    tensor[3] tensor225E#1 = <tensor[3]>[r225A,r2250,r225D];
    real r225F#1 = RMul(realLit223F,r224B);
    real r2260#1 = RAdd(r224A,r225F);
    real r2261#1 = RAdd(r2260,r224E);
    real r2262#1 = RMul(realLit2254,r2249);
    real r2263#1 = RAdd(r2262,r224C);
    real r2264#1 = RAdd(r2263,r224E);
    tensor[3] tensor2265#1 = <tensor[3]>[r2261,r2264,r2250];
    real vdot2288#4 = VDot<3>(op1_e3_l_42235,tensor2258);
    real vdot228A#4 = VDot<3>(op1_e3_l_42235,tensor225E);
    real vdot228C#4 = VDot<3>(op1_e3_l_42235,tensor2265);
    tensor[3] op1_e3_l_172286#3 = <tensor[3]>[vdot2288,vdot228A,vdot228C];
    real op1_e3_l_342295#1 = VDot<3>(op1_e3_l_172286,op1_e3_l_172286);
    real r2299#1 = RMul(op1_e3_l_9223E,op1_e3_l_9223E);
    real op1_e3_l_352298#1 = RMul(r2299,op1_e3_l_342295);
    real op1_e3_l_36229D#1 = Sqrt(op1_e3_l_352298);
    tensor[3] op1_e3_l_3722A0#1 = VScale<3>(op1_e3_l_9223E,op1_e3_l_172286);
    real op1_e3_l_3822A3#2 = RDiv(realLit223F,op1_e3_l_36229D);
    tensor[3] camU22A8#4 = VScale<3>(op1_e3_l_3822A3,op1_e3_l_3722A0);
    globals.camU2192 = camU22A8;
    real r22AF#3 = RMul(realLit2248,vdot2288);
    real r22B1#3 = RMul(realLit2248,vdot228A);
    real r22B3#5 = RMul(realLit2248,vdot228C);
    real r22B4#3 = RAdd(r22AF,r22B1);
    real r22B5#3 = RAdd(r22B4,r22B3);
    real r22B7#1 = RMul(realLit223F,vdot228C);
    real r22B8#1 = RAdd(r22B4,r22B7);
    real r22BA#1 = RMul(realLit2254,vdot228A);
    real r22BB#1 = RAdd(r22AF,r22BA);
    real r22BC#1 = RAdd(r22BB,r22B3);
    tensor[3] tensor22BD#1 = <tensor[3]>[r22B5,r22B8,r22BC];
    real r22BE#1 = RMul(realLit2254,vdot228C);
    real r22BF#1 = RAdd(r22B4,r22BE);
    real r22C0#1 = RMul(realLit223F,vdot2288);
    real r22C1#1 = RAdd(r22C0,r22B1);
    real r22C2#1 = RAdd(r22C1,r22B3);
    tensor[3] tensor22C3#1 = <tensor[3]>[r22BF,r22B5,r22C2];
    real r22C4#1 = RMul(realLit223F,vdot228A);
    real r22C5#1 = RAdd(r22AF,r22C4);
    real r22C6#1 = RAdd(r22C5,r22B3);
    real r22C7#1 = RMul(realLit2254,vdot2288);
    real r22C8#1 = RAdd(r22C7,r22B1);
    real r22C9#1 = RAdd(r22C8,r22B3);
    tensor[3] tensor22CA#1 = <tensor[3]>[r22C6,r22C9,r22B5];
    real vdot22ED#1 = VDot<3>(op1_e3_l_42235,tensor22BD);
    real vdot22EF#1 = VDot<3>(op1_e3_l_42235,tensor22C3);
    real vdot22F1#1 = VDot<3>(op1_e3_l_42235,tensor22CA);
    tensor[3] op1_e3_l_4722EB#1 = <tensor[3]>[vdot22ED,vdot22EF,vdot22F1];
    tensor[3] op1_e3_l_5022FA#3 = VScale<3>(op1_e3_l_9223E,op1_e3_l_4722EB);
    real r22FE#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FA);
    real r22FF#3 = RMul(op1_e3_l_9223E,op1_e3_l_3822A3);
    real r2300#2 = RMul(r22FF,r22FE);
    real r2301#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FA);
    real r2302#2 = RMul(r22FF,r2301);
    real r2303#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FA);
    real r2304#2 = RMul(r22FF,r2303);
    tensor[3] camV22FD#1 = <tensor[3]>[r2300,r2302,r2304];
    globals.camV2193 = camV22FD;
    globals.camDist2194 = op1_e3_l_7223B;
    real _t2310#1 = 0.314159265358979323846264338327950288e1;
    real _t2312#1 = 0.36e3;
    real op1_e3_l_52314#1 = RMul(camFOV2205,_t2310);
    real op1_e3_l_62317#1 = RDiv(op1_e3_l_52314,_t2312);
    real op1_e3_l_10231A#2 = Tan(op1_e3_l_62317);
    real camVmax231D#1 = RMul(op1_e3_l_10231A,op1_e3_l_7223B);
    globals.camVmax2195 = camVmax231D;
    real _t2321#1 = IntToReal(iresU2207);
    real _t2323#1 = IntToReal(iresV2209);
    real r2326#1 = RMul(_t2321,op1_e3_l_10231A);
    real op1_e3_l_142325#1 = RMul(r2326,op1_e3_l_7223B);
    real camUmax232A#1 = RDiv(op1_e3_l_142325,_t2323);
    globals.camUmax2196 = camUmax232A;
    real camNearVsp232E#1 = RAdd(camNear2201,op1_e3_l_7223B);
    globals.camNearVsp2197 = camNearVsp232E;
    real camFarVsp2332#1 = RAdd(camFar2203,op1_e3_l_7223B);
    globals.camFarVsp2198 = camFarVsp2332;
    real op1_e3_l_32338#1 = VDot<3>(litdir220B,litdir220B);
    real op1_e3_l_4233B#1 = Sqrt(op1_e3_l_32338);
    real op1_e3_l_5233E#1 = RDiv(realLit223F,op1_e3_l_4233B);
    real r2344#1 = VIndex<3,0>(camU22A8);
    real r2345#3 = TensorIndex<tensor[3],[0]>(litdir220B);
    real r2346#1 = RMul(r2344,r2345);
    real r2348#3 = TensorIndex<tensor[3],[1]>(litdir220B);
    real r2349#1 = RMul(r2300,r2348);
    real r234A#1 = VIndex<3,0>(camN2243);
    real r234B#3 = TensorIndex<tensor[3],[2]>(litdir220B);
    real r234C#1 = RMul(r234A,r234B);
    real r234D#1 = RAdd(r2346,r2349);
    real r234E#1 = RAdd(r234D,r234C);
    real r234F#1 = VIndex<3,1>(camU22A8);
    real r2350#1 = RMul(r234F,r2345);
    real r2352#1 = RMul(r2302,r2348);
    real r2353#1 = VIndex<3,1>(camN2243);
    real r2354#1 = RMul(r2353,r234B);
    real r2355#1 = RAdd(r2350,r2352);
    real r2356#1 = RAdd(r2355,r2354);
    real r2357#1 = VIndex<3,2>(camU22A8);
    real r2358#1 = RMul(r2357,r2345);
    real r235A#1 = RMul(r2304,r2348);
    real r235B#1 = VIndex<3,2>(camN2243);
    real r235C#1 = RMul(r235B,r234B);
    real r235D#1 = RAdd(r2358,r235A);
    real r235E#1 = RAdd(r235D,r235C);
    tensor[3] op1_e3_l_62343#1 = <tensor[3]>[r234E,r2356,r235E];
    tensor[3] litwsp237C#1 = VScale<3>(op1_e3_l_5233E,op1_e3_l_62343);
    globals.litwsp2199 = litwsp237C;
    globals._t219A = _t222F;
    globals._tX219B = _t222D;
    globals._tXX219C = _t222B;
    return
## strand
  strand ray (int ui2386#1, int vi2387#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2398:  preds = []
        tensor[3] camEye2399#1 = globals.camEye2177;
        bool camOrtho239B#2 = globals.camOrtho217D;
        int iresU239D#1 = globals.iresU217E;
        int iresV239F#1 = globals.iresV217F;
        real rayStep23A1#1 = globals.rayStep2180;
        real refStep23A3#1 = globals.refStep2181;
        tensor[4] phong23A5#4 = globals.phong2189;
        tensor[3] camN23A7#1 = globals.camN2191;
        tensor[3] camU23A9#1 = globals.camU2192;
        tensor[3] camV23AB#1 = globals.camV2193;
        real camDist23AD#1 = globals.camDist2194;
        real camVmax23AF#2 = globals.camVmax2195;
        real camUmax23B1#2 = globals.camUmax2196;
        real camNearVsp23B3#1 = globals.camNearVsp2197;
        real _t23B5#4 = -0.5e0;
        real _t23B7#1 = IntToReal(ui2386);
        real _t23B9#1 = IntToReal(iresU239D);
        real _t23BB#2 = 0.5e0;
        real op1_e3_l_623BD#1 = RSub(_t23B9,_t23BB);
        real op1_e3_l_723C0#1 = RSub(_t23B7,_t23B5);
        real op1_e3_l_823C3#1 = RSub(op1_e3_l_623BD,_t23B5);
        real op1_e3_l_923C6#2 = RNeg(camUmax23B1);
        real op1_e3_l_1023C9#1 = RDiv(op1_e3_l_723C0,op1_e3_l_823C3);
        real op1_e3_l_1123CC#1 = RSub(camUmax23B1,op1_e3_l_923C6);
        real op1_e3_l_1323CF#1 = RMul(op1_e3_l_1023C9,op1_e3_l_1123CC);
        real rayU23D2#2 = RAdd(op1_e3_l_923C6,op1_e3_l_1323CF);
        real _t23D5#1 = IntToReal(vi2387);
        real _t23D7#1 = IntToReal(iresV239F);
        real op1_e3_l_623D9#1 = RSub(_t23D7,_t23BB);
        real op1_e3_l_723DC#1 = RSub(_t23D5,_t23B5);
        real op1_e3_l_823DF#1 = RSub(op1_e3_l_623D9,_t23B5);
        real op1_e3_l_923E2#2 = RNeg(camVmax23AF);
        real op1_e3_l_1023E5#1 = RDiv(op1_e3_l_723DC,op1_e3_l_823DF);
        real op1_e3_l_1123E8#1 = RSub(camVmax23AF,op1_e3_l_923E2);
        real op1_e3_l_1323EB#1 = RMul(op1_e3_l_1023E5,op1_e3_l_1123E8);
        real rayV23EE#2 = RAdd(op1_e3_l_923E2,op1_e3_l_1323EB);
        tensor[3] op1_e3_l_322400#1 = VScale<3>(rayU23D2,camU23A9);
        tensor[3] op1_e3_l_332403#1 = VScale<3>(rayV23EE,camV23AB);
        tensor[3] UV2406#5 = VAdd<3>(op1_e3_l_322400,op1_e3_l_332403);
        if camOrtho239B then goto JOIN240C else goto ASSIGN2466
      JOIN240C:  preds = [COND2409,ASSIGN2467]
        tensor[3] _t240A#1 = phi(UV2406,_t240B)
        tensor[3] rayOrig240D#1 = VAdd<3>(camEye2399,_t240A);
        if camOrtho239B then goto ASSIGN2412 else goto ASSIGN245C
      ASSIGN2412:  preds = [COND2410]
        real _t2411#3 = 0.e0;
        tensor[3] _t2413#1 = <tensor[3]>[_t2411,_t2411,_t2411];
        goto JOIN2417
      JOIN2417:  preds = [ASSIGN2414,ASSIGN2464]
        tensor[3] _t2415#1 = phi(_t2413,_t2416)
        tensor[3] rayVec2418#4 = VAdd<3>(camN23A7,_t2415);
        real op1_e3_l_6241B#1 = VDot<3>(rayVec2418,rayVec2418);
        real op1_e3_l_7241E#2 = Sqrt(op1_e3_l_6241B);
        real op1_e3_l_82421#1 = RMul(rayStep23A1,op1_e3_l_7241E);
        real alphaFix2424#1 = RDiv(op1_e3_l_82421,refStep23A3);
        real realLit2428#2 = 0.1e1;
        real op1_e3_l_92427#1 = RDiv(realLit2428,op1_e3_l_7241E);
        tensor[3] op1_e3_l_10242C#1 = VScale<3>(op1_e3_l_92427,rayVec2418);
        tensor[3] eyeDir242F#1 = VNeg<3>(op1_e3_l_10242C);
        real phKa2432#1 = VIndex<4,0>(phong23A5);
        real phKd2434#1 = VIndex<4,1>(phong23A5);
        real phKs2436#1 = VIndex<4,2>(phong23A5);
        real phSp2438#1 = VIndex<4,3>(phong23A5);
        real _t243A#8 = 0.e0;
        tensor[4] rgba243C#1 = <tensor[4]>[_t243A,_t243A,_t243A,_t243A];
        tensor[3] rgb243E#1 = <tensor[3]>[_t243A,_t243A,_t243A];
        self.rayU = rayU23D2;
        self.rayV = rayV23EE;
        self.rayN = camNearVsp23B3;
        self.UV = UV2406;
        self.rayOrig = rayOrig240D;
        self.rayVec = rayVec2418;
        self.alphaFix = alphaFix2424;
        self.eyeDir = eyeDir242F;
        self.phKa = phKa2432;
        self.phKd = phKd2434;
        self.phKs = phKs2436;
        self.phSp = phSp2438;
        self.rgba = rgba243C;
        self.raw = _t243A;
        self.rgb = rgb243E;
        self.transp = realLit2428;
        return
      ASSIGN245C:  preds = [COND2410]
        real realLit2453#1 = 0.1e1;
        real r2454#3 = RDiv(realLit2453,camDist23AD);
        real r2455#1 = TensorIndex<tensor[3],[0]>(UV2406);
        real r2456#1 = RMul(r2454,r2455);
        real r2457#1 = TensorIndex<tensor[3],[1]>(UV2406);
        real r2458#1 = RMul(r2454,r2457);
        real r2459#1 = TensorIndex<tensor[3],[2]>(UV2406);
        real r245A#1 = RMul(r2454,r2459);
        tensor[3] _t2416#1 = <tensor[3]>[r2456,r2458,r245A];
        goto JOIN2417
      ASSIGN2466:  preds = [COND2409]
        real _t2465#3 = 0.e0;
        tensor[3] _t240B#1 = <tensor[3]>[_t2465,_t2465,_t2465];
        goto JOIN240C
    end state init
    method update
        ENTRY2468:  preds = []
          image(IMAGE1D<double[3]>) cmap2469#17 = globals.cmap2176;
          int _t246B#3 = globals._t219A;
          femData:Space _t246D#252 = globals._tX219B;
          femData:FemFunc _t246F#252 = globals._tXX219C;
          femData:Mesh block2475#1 = globals.block2172;
          real rayStep2477#1 = globals.rayStep2180;
          real transp02479#1 = globals.transp02182;
          real thick247B#1 = globals.thick2183;
          real fStrTh247D#1 = globals.fStrTh2184;
          real fMaskTh247F#1 = globals.fMaskTh2185;
          real fBias2481#1 = globals.fBias2186;
          real maxAlpha2483#1 = globals.maxAlpha2187;
          tensor[3] mcNear2485#2 = globals.mcNear218A;
          tensor[3] mcFar2487#1 = globals.mcFar218B;
          tensor[2] cminmax2489#2 = globals.cminmax218D;
          bool analytical248B#1 = globals.analytical218E;
          tensor[3,3] rot248D#12 = globals.rot2190;
          real camNearVsp248F#2 = globals.camNearVsp2197;
          real camFarVsp2491#2 = globals.camFarVsp2198;
          tensor[3] litwsp2493#2 = globals.litwsp2199;
          real rayN2495#1 = self.rayN;
          tensor[3] rayOrig2497#1 = self.rayOrig;
          tensor[3] rayVec2499#1 = self.rayVec;
          real alphaFix249B#1 = self.alphaFix;
          tensor[3] eyeDir249D#1 = self.eyeDir;
          real phKa249F#1 = self.phKa;
          real phKd24A1#1 = self.phKd;
          real phKs24A3#2 = self.phKs;
          real phSp24A5#1 = self.phSp;
          tensor[3] rgb24A7#1 = self.rgb;
          real transp24A9#2 = self.transp;
          real rayN24AB#8 = RAdd(rayN2495,rayStep2477);
          bool _t24AE#1 = GT<real>(rayN24AB,camFarVsp2491);
          if _t24AE then goto SAVE24B1 else goto JOIN24B3
        SAVE24B1:  preds = [COND24B0]
          self.rayN = rayN24AB;
          stabilize
          goto JOIN24B3
        JOIN24B3:  preds = [*STABILIZE24B2,COND24B0]
          tensor[3] op1_e3_l_524B4#1 = VScale<3>(rayN24AB,rayVec2499);
          tensor[3] pos24B7#11 = VAdd<3>(rayOrig2497,op1_e3_l_524B4);
          femData:RefCell _t24BA#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2475);
          real _t24BC#1 = 0.1e-8;
          bool _t24BE#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BA,pos24B7,_t24BC);
          if _t24BE then goto ASSIGN25C1 else goto ASSIGN40E0
        ASSIGN25C1:  preds = [COND24C0]
          int ilit24C2#1 = 84;
          int mulRes24C3#84 = IMul(_t246B,ilit24C2);
          int idx24C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,mulRes24C3);
          int ilit24C7#86 = 1;
          int addRes24C8#1 = IAdd(mulRes24C3,ilit24C7);
          int idx24C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24C8);
          int ilit24CA#1 = 2;
          int addRes24CB#1 = IAdd(mulRes24C3,ilit24CA);
          int idx24CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CB);
          int ilit24CD#1 = 3;
          int addRes24CE#1 = IAdd(mulRes24C3,ilit24CD);
          int idx24CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24CE);
          int ilit24D0#1 = 4;
          int addRes24D1#1 = IAdd(mulRes24C3,ilit24D0);
          int idx24D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D1);
          int ilit24D3#1 = 5;
          int addRes24D4#1 = IAdd(mulRes24C3,ilit24D3);
          int idx24D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D4);
          int ilit24D6#1 = 6;
          int addRes24D7#1 = IAdd(mulRes24C3,ilit24D6);
          int idx24D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24D7);
          int ilit24D9#1 = 7;
          int addRes24DA#1 = IAdd(mulRes24C3,ilit24D9);
          int idx24DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DA);
          int ilit24DC#1 = 8;
          int addRes24DD#1 = IAdd(mulRes24C3,ilit24DC);
          int idx24DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24DD);
          int ilit24DF#1 = 9;
          int addRes24E0#1 = IAdd(mulRes24C3,ilit24DF);
          int idx24E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E0);
          int ilit24E2#1 = 10;
          int addRes24E3#1 = IAdd(mulRes24C3,ilit24E2);
          int idx24E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E3);
          int ilit24E5#1 = 11;
          int addRes24E6#1 = IAdd(mulRes24C3,ilit24E5);
          int idx24E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E6);
          int ilit24E8#1 = 12;
          int addRes24E9#1 = IAdd(mulRes24C3,ilit24E8);
          int idx24EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24E9);
          int ilit24EB#1 = 13;
          int addRes24EC#1 = IAdd(mulRes24C3,ilit24EB);
          int idx24ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EC);
          int ilit24EE#1 = 14;
          int addRes24EF#1 = IAdd(mulRes24C3,ilit24EE);
          int idx24F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24EF);
          int ilit24F1#1 = 15;
          int addRes24F2#1 = IAdd(mulRes24C3,ilit24F1);
          int idx24F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F2);
          int ilit24F4#1 = 16;
          int addRes24F5#1 = IAdd(mulRes24C3,ilit24F4);
          int idx24F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F5);
          int ilit24F7#1 = 17;
          int addRes24F8#1 = IAdd(mulRes24C3,ilit24F7);
          int idx24F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24F8);
          int ilit24FA#1 = 18;
          int addRes24FB#1 = IAdd(mulRes24C3,ilit24FA);
          int idx24FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FB);
          int ilit24FD#1 = 19;
          int addRes24FE#1 = IAdd(mulRes24C3,ilit24FD);
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes24FE);
          int ilit2500#1 = 20;
          int addRes2501#1 = IAdd(mulRes24C3,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2501);
          int ilit2503#1 = 21;
          int addRes2504#1 = IAdd(mulRes24C3,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2504);
          int ilit2506#1 = 22;
          int addRes2507#1 = IAdd(mulRes24C3,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2507);
          int ilit2509#1 = 23;
          int addRes250A#1 = IAdd(mulRes24C3,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250A);
          int ilit250C#1 = 24;
          int addRes250D#1 = IAdd(mulRes24C3,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes250D);
          int ilit250F#1 = 25;
          int addRes2510#1 = IAdd(mulRes24C3,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2510);
          int ilit2512#1 = 26;
          int addRes2513#1 = IAdd(mulRes24C3,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2513);
          int ilit2515#1 = 27;
          int addRes2516#1 = IAdd(mulRes24C3,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2516);
          int ilit2518#1 = 28;
          int addRes2519#1 = IAdd(mulRes24C3,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2519);
          int ilit251B#1 = 29;
          int addRes251C#1 = IAdd(mulRes24C3,ilit251B);
          int idx251D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251C);
          int ilit251E#1 = 30;
          int addRes251F#1 = IAdd(mulRes24C3,ilit251E);
          int idx2520#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes251F);
          int ilit2521#1 = 31;
          int addRes2522#1 = IAdd(mulRes24C3,ilit2521);
          int idx2523#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2522);
          int ilit2524#1 = 32;
          int addRes2525#1 = IAdd(mulRes24C3,ilit2524);
          int idx2526#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2525);
          int ilit2527#1 = 33;
          int addRes2528#1 = IAdd(mulRes24C3,ilit2527);
          int idx2529#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2528);
          int ilit252A#1 = 34;
          int addRes252B#1 = IAdd(mulRes24C3,ilit252A);
          int idx252C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252B);
          int ilit252D#1 = 35;
          int addRes252E#1 = IAdd(mulRes24C3,ilit252D);
          int idx252F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes252E);
          int ilit2530#1 = 36;
          int addRes2531#1 = IAdd(mulRes24C3,ilit2530);
          int idx2532#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2531);
          int ilit2533#1 = 37;
          int addRes2534#1 = IAdd(mulRes24C3,ilit2533);
          int idx2535#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2534);
          int ilit2536#1 = 38;
          int addRes2537#1 = IAdd(mulRes24C3,ilit2536);
          int idx2538#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2537);
          int ilit2539#1 = 39;
          int addRes253A#1 = IAdd(mulRes24C3,ilit2539);
          int idx253B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253A);
          int ilit253C#1 = 40;
          int addRes253D#1 = IAdd(mulRes24C3,ilit253C);
          int idx253E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes253D);
          int ilit253F#1 = 41;
          int addRes2540#1 = IAdd(mulRes24C3,ilit253F);
          int idx2541#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2540);
          int ilit2542#1 = 42;
          int addRes2543#1 = IAdd(mulRes24C3,ilit2542);
          int idx2544#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2543);
          int ilit2545#1 = 43;
          int addRes2546#1 = IAdd(mulRes24C3,ilit2545);
          int idx2547#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2546);
          int ilit2548#1 = 44;
          int addRes2549#1 = IAdd(mulRes24C3,ilit2548);
          int idx254A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2549);
          int ilit254B#1 = 45;
          int addRes254C#1 = IAdd(mulRes24C3,ilit254B);
          int idx254D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254C);
          int ilit254E#1 = 46;
          int addRes254F#1 = IAdd(mulRes24C3,ilit254E);
          int idx2550#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes254F);
          int ilit2551#1 = 47;
          int addRes2552#1 = IAdd(mulRes24C3,ilit2551);
          int idx2553#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2552);
          int ilit2554#1 = 48;
          int addRes2555#1 = IAdd(mulRes24C3,ilit2554);
          int idx2556#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2555);
          int ilit2557#1 = 49;
          int addRes2558#1 = IAdd(mulRes24C3,ilit2557);
          int idx2559#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2558);
          int ilit255A#1 = 50;
          int addRes255B#1 = IAdd(mulRes24C3,ilit255A);
          int idx255C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255B);
          int ilit255D#1 = 51;
          int addRes255E#1 = IAdd(mulRes24C3,ilit255D);
          int idx255F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes255E);
          int ilit2560#1 = 52;
          int addRes2561#1 = IAdd(mulRes24C3,ilit2560);
          int idx2562#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2561);
          int ilit2563#1 = 53;
          int addRes2564#1 = IAdd(mulRes24C3,ilit2563);
          int idx2565#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2564);
          int ilit2566#1 = 54;
          int addRes2567#1 = IAdd(mulRes24C3,ilit2566);
          int idx2568#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2567);
          int ilit2569#1 = 55;
          int addRes256A#1 = IAdd(mulRes24C3,ilit2569);
          int idx256B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256A);
          int ilit256C#1 = 56;
          int addRes256D#1 = IAdd(mulRes24C3,ilit256C);
          int idx256E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes256D);
          int ilit256F#1 = 57;
          int addRes2570#1 = IAdd(mulRes24C3,ilit256F);
          int idx2571#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2570);
          int ilit2572#1 = 58;
          int addRes2573#1 = IAdd(mulRes24C3,ilit2572);
          int idx2574#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2573);
          int ilit2575#1 = 59;
          int addRes2576#1 = IAdd(mulRes24C3,ilit2575);
          int idx2577#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2576);
          int ilit2578#1 = 60;
          int addRes2579#1 = IAdd(mulRes24C3,ilit2578);
          int idx257A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2579);
          int ilit257B#1 = 61;
          int addRes257C#1 = IAdd(mulRes24C3,ilit257B);
          int idx257D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257C);
          int ilit257E#1 = 62;
          int addRes257F#1 = IAdd(mulRes24C3,ilit257E);
          int idx2580#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes257F);
          int ilit2581#1 = 63;
          int addRes2582#1 = IAdd(mulRes24C3,ilit2581);
          int idx2583#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2582);
          int ilit2584#1 = 64;
          int addRes2585#1 = IAdd(mulRes24C3,ilit2584);
          int idx2586#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2585);
          int ilit2587#1 = 65;
          int addRes2588#1 = IAdd(mulRes24C3,ilit2587);
          int idx2589#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2588);
          int ilit258A#1 = 66;
          int addRes258B#1 = IAdd(mulRes24C3,ilit258A);
          int idx258C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258B);
          int ilit258D#1 = 67;
          int addRes258E#1 = IAdd(mulRes24C3,ilit258D);
          int idx258F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes258E);
          int ilit2590#1 = 68;
          int addRes2591#1 = IAdd(mulRes24C3,ilit2590);
          int idx2592#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2591);
          int ilit2593#1 = 69;
          int addRes2594#1 = IAdd(mulRes24C3,ilit2593);
          int idx2595#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2594);
          int ilit2596#1 = 70;
          int addRes2597#1 = IAdd(mulRes24C3,ilit2596);
          int idx2598#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2597);
          int ilit2599#1 = 71;
          int addRes259A#1 = IAdd(mulRes24C3,ilit2599);
          int idx259B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259A);
          int ilit259C#1 = 72;
          int addRes259D#1 = IAdd(mulRes24C3,ilit259C);
          int idx259E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes259D);
          int ilit259F#1 = 73;
          int addRes25A0#1 = IAdd(mulRes24C3,ilit259F);
          int idx25A1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A0);
          int ilit25A2#1 = 74;
          int addRes25A3#1 = IAdd(mulRes24C3,ilit25A2);
          int idx25A4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A3);
          int ilit25A5#1 = 75;
          int addRes25A6#1 = IAdd(mulRes24C3,ilit25A5);
          int idx25A7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A6);
          int ilit25A8#1 = 76;
          int addRes25A9#1 = IAdd(mulRes24C3,ilit25A8);
          int idx25AA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25A9);
          int ilit25AB#1 = 77;
          int addRes25AC#1 = IAdd(mulRes24C3,ilit25AB);
          int idx25AD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AC);
          int ilit25AE#1 = 78;
          int addRes25AF#1 = IAdd(mulRes24C3,ilit25AE);
          int idx25B0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25AF);
          int ilit25B1#1 = 79;
          int addRes25B2#1 = IAdd(mulRes24C3,ilit25B1);
          int idx25B3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B2);
          int ilit25B4#1 = 80;
          int addRes25B5#1 = IAdd(mulRes24C3,ilit25B4);
          int idx25B6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B5);
          int ilit25B7#1 = 81;
          int addRes25B8#1 = IAdd(mulRes24C3,ilit25B7);
          int idx25B9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25B8);
          int ilit25BA#1 = 82;
          int addRes25BB#1 = IAdd(mulRes24C3,ilit25BA);
          int idx25BC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BB);
          int ilit25BD#1 = 83;
          int addRes25BE#1 = IAdd(mulRes24C3,ilit25BD);
          int idx25BF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes25BE);
          int mulRes26C5#1 = IMul(ilit24C7,idx24C6);
          int mulRes26C7#1 = IMul(ilit24C7,idx24C9);
          int mulRes26CA#1 = IMul(ilit24C7,idx24CC);
          int mulRes26CD#1 = IMul(ilit24C7,idx24CF);
          int mulRes26D0#1 = IMul(ilit24C7,idx24D2);
          int mulRes26D3#1 = IMul(ilit24C7,idx24D5);
          int mulRes26D6#1 = IMul(ilit24C7,idx24D8);
          int mulRes26D9#1 = IMul(ilit24C7,idx24DB);
          int mulRes26DC#1 = IMul(ilit24C7,idx24DE);
          int mulRes26DF#1 = IMul(ilit24C7,idx24E1);
          int mulRes26E2#1 = IMul(ilit24C7,idx24E4);
          int mulRes26E5#1 = IMul(ilit24C7,idx24E7);
          int mulRes26E8#1 = IMul(ilit24C7,idx24EA);
          int mulRes26EB#1 = IMul(ilit24C7,idx24ED);
          int mulRes26EE#1 = IMul(ilit24C7,idx24F0);
          int mulRes26F1#1 = IMul(ilit24C7,idx24F3);
          int mulRes26F4#1 = IMul(ilit24C7,idx24F6);
          int mulRes26F7#1 = IMul(ilit24C7,idx24F9);
          int mulRes26FA#1 = IMul(ilit24C7,idx24FC);
          int mulRes26FD#1 = IMul(ilit24C7,idx24FF);
          int mulRes2700#1 = IMul(ilit24C7,idx2502);
          int mulRes2703#1 = IMul(ilit24C7,idx2505);
          int mulRes2706#1 = IMul(ilit24C7,idx2508);
          int mulRes2709#1 = IMul(ilit24C7,idx250B);
          int mulRes270C#1 = IMul(ilit24C7,idx250E);
          int mulRes270F#1 = IMul(ilit24C7,idx2511);
          int mulRes2712#1 = IMul(ilit24C7,idx2514);
          int mulRes2715#1 = IMul(ilit24C7,idx2517);
          int mulRes2718#1 = IMul(ilit24C7,idx251A);
          int mulRes271B#1 = IMul(ilit24C7,idx251D);
          int mulRes271E#1 = IMul(ilit24C7,idx2520);
          int mulRes2721#1 = IMul(ilit24C7,idx2523);
          int mulRes2724#1 = IMul(ilit24C7,idx2526);
          int mulRes2727#1 = IMul(ilit24C7,idx2529);
          int mulRes272A#1 = IMul(ilit24C7,idx252C);
          int mulRes272D#1 = IMul(ilit24C7,idx252F);
          int mulRes2730#1 = IMul(ilit24C7,idx2532);
          int mulRes2733#1 = IMul(ilit24C7,idx2535);
          int mulRes2736#1 = IMul(ilit24C7,idx2538);
          int mulRes2739#1 = IMul(ilit24C7,idx253B);
          int mulRes273C#1 = IMul(ilit24C7,idx253E);
          int mulRes273F#1 = IMul(ilit24C7,idx2541);
          int mulRes2742#1 = IMul(ilit24C7,idx2544);
          int mulRes2745#1 = IMul(ilit24C7,idx2547);
          int mulRes2748#1 = IMul(ilit24C7,idx254A);
          int mulRes274B#1 = IMul(ilit24C7,idx254D);
          int mulRes274E#1 = IMul(ilit24C7,idx2550);
          int mulRes2751#1 = IMul(ilit24C7,idx2553);
          int mulRes2754#1 = IMul(ilit24C7,idx2556);
          int mulRes2757#1 = IMul(ilit24C7,idx2559);
          int mulRes275A#1 = IMul(ilit24C7,idx255C);
          int mulRes275D#1 = IMul(ilit24C7,idx255F);
          int mulRes2760#1 = IMul(ilit24C7,idx2562);
          int mulRes2763#1 = IMul(ilit24C7,idx2565);
          int mulRes2766#1 = IMul(ilit24C7,idx2568);
          int mulRes2769#1 = IMul(ilit24C7,idx256B);
          int mulRes276C#1 = IMul(ilit24C7,idx256E);
          int mulRes276F#1 = IMul(ilit24C7,idx2571);
          int mulRes2772#1 = IMul(ilit24C7,idx2574);
          int mulRes2775#1 = IMul(ilit24C7,idx2577);
          int mulRes2778#1 = IMul(ilit24C7,idx257A);
          int mulRes277B#1 = IMul(ilit24C7,idx257D);
          int mulRes277E#1 = IMul(ilit24C7,idx2580);
          int mulRes2781#1 = IMul(ilit24C7,idx2583);
          int mulRes2784#1 = IMul(ilit24C7,idx2586);
          int mulRes2787#1 = IMul(ilit24C7,idx2589);
          int mulRes278A#1 = IMul(ilit24C7,idx258C);
          int mulRes278D#1 = IMul(ilit24C7,idx258F);
          int mulRes2790#1 = IMul(ilit24C7,idx2592);
          int mulRes2793#1 = IMul(ilit24C7,idx2595);
          int mulRes2796#1 = IMul(ilit24C7,idx2598);
          int mulRes2799#1 = IMul(ilit24C7,idx259B);
          int mulRes279C#1 = IMul(ilit24C7,idx259E);
          int mulRes279F#1 = IMul(ilit24C7,idx25A1);
          int mulRes27A2#1 = IMul(ilit24C7,idx25A4);
          int mulRes27A5#1 = IMul(ilit24C7,idx25A7);
          int mulRes27A8#1 = IMul(ilit24C7,idx25AA);
          int mulRes27AB#1 = IMul(ilit24C7,idx25AD);
          int mulRes27AE#1 = IMul(ilit24C7,idx25B0);
          int mulRes27B1#1 = IMul(ilit24C7,idx25B3);
          int mulRes27B4#1 = IMul(ilit24C7,idx25B6);
          int mulRes27B7#1 = IMul(ilit24C7,idx25B9);
          int mulRes27BA#1 = IMul(ilit24C7,idx25BC);
          int mulRes27BD#1 = IMul(ilit24C7,idx25BF);
          real dof27BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C5);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26C7);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CA);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26CD);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D0);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D3);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D6);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26D9);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DC);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26DF);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E2);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E5);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26E8);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EB);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26EE);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F1);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F4);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26F7);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FA);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes26FD);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2700);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2703);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2706);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2709);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270C);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes270F);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2712);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2715);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2718);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271B);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes271E);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2721);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2724);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2727);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272A);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes272D);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2730);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2733);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2736);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2739);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273C);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes273F);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2742);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2745);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2748);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274B);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes274E);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2751);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2754);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2757);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275A);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes275D);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2760);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2763);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2766);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2769);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276C);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes276F);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2772);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2775);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2778);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277B);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes277E);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2781);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2784);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2787);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278A);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes278D);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2790);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2793);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2796);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2799);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279C);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes279F);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A2);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A5);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27A8);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AB);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27AE);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B1);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B4);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27B7);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BA);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes27BD);
          tensor[84] dofs2812#9 = <tensor[84]>[dof27BE,dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811];
          real varAcc2966#20 = VIndex<3,0>(pos24B7);
          real varAcc2967#10 = VIndex<3,1>(pos24B7);
          real varAcc2968#10 = VIndex<3,2>(pos24B7);
          real basisEval2969#378 = 0.e0;
          real coeff296A#47 = 0.2e1;
          real one296B#80 = 0.1e1;
          real prod296C#6 = RMul(one296B,one296B);
          real prod296D#2 = RMul(one296B,prod296C);
          real basisEval296E#3 = RMul(coeff296A,prod296D);
          real prod2970#5 = RMul(one296B,varAcc2968);
          real prod2971#3 = RMul(one296B,prod2970);
          real basisEval2972#5 = RMul(coeff296A,prod2971);
          real prod2974#5 = RMul(varAcc2967,one296B);
          real prod2975#3 = RMul(one296B,prod2974);
          real basisEval2976#5 = RMul(coeff296A,prod2975);
          real coeff2977#25 = 0.6e1;
          real prod2979#3 = RMul(varAcc2966,prod296C);
          real basisEval297A#1 = RMul(coeff2977,prod2979);
          real prod2297B#5 = RMul(varAcc2968,varAcc2968);
          real prod297C#4 = RMul(one296B,prod2297B);
          real prod297D#4 = RMul(one296B,prod297C);
          real basisEval297E#2 = RMul(coeff296A,prod297D);
          real prod297F#4 = RMul(varAcc2967,varAcc2968);
          real prod2980#4 = RMul(one296B,prod297F);
          real basisEval2981#5 = RMul(coeff296A,prod2980);
          real prod22982#5 = RMul(varAcc2967,varAcc2967);
          real prod2983#4 = RMul(prod22982,one296B);
          real prod2984#4 = RMul(one296B,prod2983);
          real basisEval2985#2 = RMul(coeff296A,prod2984);
          real prod2986#4 = RMul(varAcc2966,prod2970);
          real basisEval2987#2 = RMul(coeff2977,prod2986);
          real prod2988#4 = RMul(varAcc2966,prod2974);
          real basisEval2989#2 = RMul(coeff2977,prod2988);
          real coeff298A#15 = 0.12e2;
          real prod2298B#11 = RMul(varAcc2966,varAcc2966);
          real prod298C#4 = RMul(prod2298B,prod296C);
          real basisEval298D#1 = RMul(coeff298A,prod298C);
          real prod3298E#4 = RMul(prod2297B,varAcc2968);
          real prod298F#3 = RMul(one296B,prod3298E);
          real prod2990#4 = RMul(one296B,prod298F);
          real basisEval2991#2 = RMul(coeff296A,prod2990);
          real prod2992#3 = RMul(varAcc2967,prod2297B);
          real prod2993#5 = RMul(one296B,prod2992);
          real basisEval2994#3 = RMul(coeff296A,prod2993);
          real prod2995#3 = RMul(prod22982,varAcc2968);
          real prod2996#5 = RMul(one296B,prod2995);
          real basisEval2997#3 = RMul(coeff296A,prod2996);
          real prod32998#4 = RMul(prod22982,varAcc2967);
          real prod2999#3 = RMul(prod32998,one296B);
          real prod299A#4 = RMul(one296B,prod2999);
          real basisEval299B#2 = RMul(coeff296A,prod299A);
          real prod299C#5 = RMul(varAcc2966,prod297C);
          real basisEval299D#2 = RMul(coeff2977,prod299C);
          real prod299E#3 = RMul(varAcc2966,prod297F);
          real basisEval299F#3 = RMul(coeff2977,prod299E);
          real prod29A0#5 = RMul(varAcc2966,prod2983);
          real basisEval29A1#2 = RMul(coeff2977,prod29A0);
          real prod29A2#5 = RMul(prod2298B,prod2970);
          real basisEval29A3#1 = RMul(coeff298A,prod29A2);
          real prod29A4#5 = RMul(prod2298B,prod2974);
          real basisEval29A5#1 = RMul(coeff298A,prod29A4);
          real coeff29A6#9 = 0.20e2;
          real prod329A7#7 = RMul(prod2298B,varAcc2966);
          real prod29A8#4 = RMul(prod329A7,prod296C);
          real basisEval29A9#1 = RMul(coeff29A6,prod29A8);
          real prod429AA#3 = RMul(prod3298E,varAcc2968);
          real prod29AB#2 = RMul(one296B,prod429AA);
          real prod29AC#4 = RMul(one296B,prod29AB);
          real basisEval29AD#2 = RMul(coeff296A,prod29AC);
          real prod29AE#2 = RMul(varAcc2967,prod3298E);
          real prod29AF#6 = RMul(one296B,prod29AE);
          real basisEval29B0#3 = RMul(coeff296A,prod29AF);
          real prod29B1#2 = RMul(prod22982,prod2297B);
          real prod29B2#5 = RMul(one296B,prod29B1);
          real basisEval29B3#1 = RMul(coeff296A,prod29B2);
          real prod29B4#2 = RMul(prod32998,varAcc2968);
          real prod29B5#6 = RMul(one296B,prod29B4);
          real basisEval29B6#3 = RMul(coeff296A,prod29B5);
          real prod429B7#3 = RMul(prod32998,varAcc2967);
          real prod29B8#2 = RMul(prod429B7,one296B);
          real prod29B9#4 = RMul(one296B,prod29B8);
          real basisEval29BA#2 = RMul(coeff296A,prod29B9);
          real prod29BB#6 = RMul(varAcc2966,prod298F);
          real basisEval29BC#1 = RMul(coeff2977,prod29BB);
          real prod29BD#5 = RMul(varAcc2966,prod2992);
          real basisEval29BE#4 = RMul(coeff2977,prod29BD);
          real prod29BF#5 = RMul(varAcc2966,prod2995);
          real basisEval29C0#4 = RMul(coeff2977,prod29BF);
          real prod29C1#6 = RMul(varAcc2966,prod2999);
          real basisEval29C2#1 = RMul(coeff2977,prod29C1);
          real prod29C3#5 = RMul(prod2298B,prod297C);
          real basisEval29C4#2 = RMul(coeff298A,prod29C3);
          real prod29C5#5 = RMul(prod2298B,prod297F);
          real basisEval29C6#1 = RMul(coeff298A,prod29C5);
          real prod29C7#5 = RMul(prod2298B,prod2983);
          real basisEval29C8#2 = RMul(coeff298A,prod29C7);
          real prod29C9#6 = RMul(prod329A7,prod2970);
          real basisEval29CA#1 = RMul(coeff29A6,prod29C9);
          real prod29CB#6 = RMul(prod329A7,prod2974);
          real basisEval29CC#1 = RMul(coeff29A6,prod29CB);
          real coeff29CD#3 = 0.30e2;
          real prod429CE#4 = RMul(prod329A7,varAcc2966);
          real prod29CF#4 = RMul(prod429CE,prod296C);
          real basisEval29D0#1 = RMul(coeff29CD,prod29CF);
          real basisEval29D1#6 = RMul(one296B,prod296D);
          real basisEval29D2#3 = RMul(one296B,prod2971);
          real basisEval29D3#5 = RMul(coeff296A,prod2979);
          real basisEval29D4#3 = RMul(one296B,prod297D);
          real coeff29D5#24 = 0.3e1;
          real basisEval29D6#3 = RMul(coeff29D5,prod2984);
          real basisEval29D7#5 = RMul(coeff296A,prod2986);
          real coeff29D8#25 = 0.4e1;
          real basisEval29D9#1 = RMul(coeff29D8,prod2988);
          real basisEval29DA#3 = RMul(coeff29D5,prod298C);
          real basisEval29DB#3 = RMul(one296B,prod2990);
          real basisEval29DC#2 = RMul(coeff29D5,prod2996);
          real basisEval29DD#3 = RMul(coeff29D8,prod299A);
          real basisEval29DE#3 = RMul(coeff296A,prod299C);
          real basisEval29DF#3 = RMul(coeff29D8,prod299E);
          real basisEval29E0#2 = RMul(coeff29D5,prod29A2);
          real basisEval29E1#2 = RMul(coeff2977,prod29A4);
          real basisEval29E2#3 = RMul(coeff29D8,prod29A8);
          real basisEval29E3#3 = RMul(one296B,prod29AC);
          real basisEval29E4#4 = RMul(coeff29D5,prod29B2);
          real basisEval29E5#2 = RMul(coeff29D8,prod29B5);
          real coeff29E6#9 = 0.5e1;
          real basisEval29E7#3 = RMul(coeff29E6,prod29B9);
          real basisEval29E8#3 = RMul(coeff296A,prod29BB);
          real basisEval29E9#1 = RMul(coeff29D8,prod29BD);
          real coeff29EA#6 = 0.8e1;
          real basisEval29EB#1 = RMul(coeff29EA,prod29C1);
          real basisEval29EC#4 = RMul(coeff29D5,prod29C3);
          real basisEval29ED#4 = RMul(coeff2977,prod29C5);
          real coeff29EE#3 = 0.9e1;
          real basisEval29EF#1 = RMul(coeff29EE,prod29C7);
          real basisEval29F0#2 = RMul(coeff29D8,prod29C9);
          real basisEval29F1#1 = RMul(coeff29EA,prod29CB);
          real basisEval29F2#3 = RMul(coeff29E6,prod29CF);
          real basisEval29F3#3 = RMul(one296B,prod2975);
          real basisEval29F4#3 = RMul(coeff29D5,prod297D);
          real basisEval29F5#3 = RMul(one296B,prod2984);
          real basisEval29F6#1 = RMul(coeff29D8,prod2986);
          real basisEval29F7#5 = RMul(coeff296A,prod2988);
          real basisEval29F8#3 = RMul(coeff29D8,prod2990);
          real basisEval29F9#2 = RMul(coeff29D5,prod2993);
          real basisEval29FA#3 = RMul(one296B,prod299A);
          real basisEval29FB#3 = RMul(coeff296A,prod29A0);
          real basisEval29FC#2 = RMul(coeff2977,prod29A2);
          real basisEval29FD#2 = RMul(coeff29D5,prod29A4);
          real basisEval29FE#3 = RMul(coeff29E6,prod29AC);
          real basisEval29FF#2 = RMul(coeff29D8,prod29AF);
          real basisEval2A00#3 = RMul(one296B,prod29B9);
          real basisEval2A01#1 = RMul(coeff29EA,prod29BB);
          real basisEval2A02#1 = RMul(coeff29D8,prod29BF);
          real basisEval2A03#3 = RMul(coeff296A,prod29C1);
          real basisEval2A04#1 = RMul(coeff29EE,prod29C3);
          real basisEval2A05#4 = RMul(coeff29D5,prod29C7);
          real basisEval2A06#1 = RMul(coeff29EA,prod29C9);
          real basisEval2A07#2 = RMul(coeff29D8,prod29CB);
          real basisEval2A08#1 = RMul(coeff2977,prod2975);
          real basisEval2A09#2 = RMul(coeff2977,prod2980);
          real basisEval2A0A#1 = RMul(coeff298A,prod2984);
          real basisEval2A0B#2 = RMul(coeff296A,prod298C);
          real basisEval2A0C#2 = RMul(coeff2977,prod2993);
          real basisEval2A0D#1 = RMul(coeff298A,prod2996);
          real basisEval2A0E#1 = RMul(coeff29A6,prod299A);
          real basisEval2A0F#1 = RMul(coeff298A,prod29A0);
          real basisEval2A10#3 = RMul(coeff296A,prod29A2);
          real basisEval2A11#2 = RMul(coeff296A,prod29A8);
          real basisEval2A12#1 = RMul(coeff2977,prod29AF);
          real basisEval2A13#2 = RMul(coeff298A,prod29B2);
          real basisEval2A14#1 = RMul(coeff29A6,prod29B5);
          real basisEval2A15#1 = RMul(coeff29CD,prod29B9);
          real basisEval2A16#1 = RMul(coeff298A,prod29BF);
          real basisEval2A17#1 = RMul(coeff29A6,prod29C1);
          real basisEval2A18#1 = RMul(coeff296A,prod29C3);
          real basisEval2A19#3 = RMul(coeff296A,prod29C9);
          real basisEval2A1A#1 = RMul(coeff2977,prod29CB);
          real basisEval2A1B#2 = RMul(coeff296A,prod29CF);
          real basisEval2A1C#3 = RMul(one296B,prod2979);
          real basisEval2A1D#1 = RMul(coeff29D8,prod2980);
          real basisEval2A1E#3 = RMul(one296B,prod298C);
          real basisEval2A1F#2 = RMul(coeff2977,prod2996);
          real basisEval2A20#2 = RMul(coeff29D5,prod299C);
          real basisEval2A21#2 = RMul(coeff29D5,prod29A0);
          real basisEval2A22#3 = RMul(coeff296A,prod29A4);
          real basisEval2A23#3 = RMul(one296B,prod29A8);
          real basisEval2A24#1 = RMul(coeff29EA,prod29AF);
          real basisEval2A25#1 = RMul(coeff29EE,prod29B2);
          real basisEval2A26#1 = RMul(coeff29EA,prod29B5);
          real basisEval2A27#2 = RMul(coeff29D8,prod29BB);
          real basisEval2A28#2 = RMul(coeff29D8,prod29C1);
          real basisEval2A29#1 = RMul(coeff29D8,prod29C5);
          real basisEval2A2A#3 = RMul(coeff296A,prod29CB);
          real basisEval2A2B#3 = RMul(one296B,prod29CF);
          real basisEval2A2C#1 = RMul(coeff2977,prod2971);
          real basisEval2A2D#1 = RMul(coeff298A,prod297D);
          real basisEval2A2E#1 = RMul(coeff29A6,prod2990);
          real basisEval2A2F#1 = RMul(coeff298A,prod2993);
          real basisEval2A30#1 = RMul(coeff298A,prod299C);
          real basisEval2A31#1 = RMul(coeff29CD,prod29AC);
          real basisEval2A32#1 = RMul(coeff29A6,prod29AF);
          real basisEval2A33#1 = RMul(coeff2977,prod29B5);
          real basisEval2A34#1 = RMul(coeff29A6,prod29BB);
          real basisEval2A35#1 = RMul(coeff298A,prod29BD);
          real basisEval2A36#1 = RMul(coeff296A,prod29C7);
          real basisEval2A37#1 = RMul(coeff2977,prod29C9);
          tensor[84] intermediateCons2A38#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval297A,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2981,basisEval2985,basisEval2987,basisEval2989,basisEval298D,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2994,basisEval2997,basisEval299B,basisEval299D,basisEval299F,basisEval29A1,basisEval29A3,basisEval29A5,basisEval29A9,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval29B0,basisEval29B3,basisEval29B6,basisEval29BA,basisEval29BC,basisEval29BE,basisEval29C0,basisEval29C2,basisEval29C4,basisEval29C6,basisEval29C8,basisEval29CA,basisEval29CC,basisEval29D0];
          tensor[84] intermediateCons2A39#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D2,basisEval2976,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D4,basisEval2981,basisEval29D6,basisEval2969,basisEval29D7,basisEval29D9,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29DB,basisEval2994,basisEval29DC,basisEval29DD,basisEval2969,basisEval29DE,basisEval29DF,basisEval29A1,basisEval2969,basisEval29E0,basisEval29E1,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29E3,basisEval29B0,basisEval29E4,basisEval29E5,basisEval29E7,basisEval2969,basisEval29E8,basisEval29E9,basisEval29C0,basisEval29EB,basisEval2969,basisEval29EC,basisEval29ED,basisEval29EF,basisEval2969,basisEval29F0,basisEval29F1,basisEval2969,basisEval29F2,basisEval2969];
          tensor[84] intermediateCons2A3A#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval29F3,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2981,basisEval29F5,basisEval2969,basisEval29F6,basisEval29F7,basisEval2969,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval29F9,basisEval2997,basisEval29FA,basisEval2969,basisEval299D,basisEval29DF,basisEval29FB,basisEval2969,basisEval29FC,basisEval29FD,basisEval2969,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval29FF,basisEval29E4,basisEval29B6,basisEval2A00,basisEval2969,basisEval2A01,basisEval29BE,basisEval2A02,basisEval2A03,basisEval2969,basisEval2A04,basisEval29ED,basisEval2A05,basisEval2969,basisEval2A06,basisEval2A07,basisEval2969,basisEval29F2,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3B#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2A08,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval297E,basisEval2A09,basisEval2A0A,basisEval2969,basisEval2969,basisEval29D7,basisEval2989,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2991,basisEval2A0C,basisEval2A0D,basisEval2A0E,basisEval2969,basisEval2969,basisEval29DE,basisEval299F,basisEval2A0F,basisEval2969,basisEval2969,basisEval2A10,basisEval29E1,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29AD,basisEval2A12,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2969,basisEval2969,basisEval29E8,basisEval29BE,basisEval2A16,basisEval2A17,basisEval2969,basisEval2969,basisEval2A18,basisEval29ED,basisEval29C8,basisEval2969,basisEval2969,basisEval2A19,basisEval2A1A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3C#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2972,basisEval2976,basisEval2969,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F4,basisEval2A1D,basisEval29D6,basisEval2969,basisEval2969,basisEval29D7,basisEval29F7,basisEval2969,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29F8,basisEval2A0C,basisEval2A1F,basisEval29DD,basisEval2969,basisEval2969,basisEval2A20,basisEval29DF,basisEval2A21,basisEval2969,basisEval2969,basisEval2A10,basisEval2A22,basisEval2969,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29FE,basisEval2A24,basisEval2A25,basisEval2A26,basisEval29E7,basisEval2969,basisEval2969,basisEval2A27,basisEval29BE,basisEval29C0,basisEval2A28,basisEval2969,basisEval2969,basisEval29EC,basisEval2A29,basisEval2A05,basisEval2969,basisEval2969,basisEval2A19,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          tensor[84] intermediateCons2A3D#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval296E,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2C,basisEval2976,basisEval2969,basisEval2969,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2D,basisEval2A09,basisEval2985,basisEval2969,basisEval2969,basisEval2987,basisEval29F7,basisEval2969,basisEval2969,basisEval2A0B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A2E,basisEval2A2F,basisEval2A1F,basisEval299B,basisEval2969,basisEval2969,basisEval2A30,basisEval299F,basisEval29FB,basisEval2969,basisEval2969,basisEval29FC,basisEval2A22,basisEval2969,basisEval2969,basisEval2A11,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2A31,basisEval2A32,basisEval2A13,basisEval2A33,basisEval29BA,basisEval2969,basisEval2969,basisEval2A34,basisEval2A35,basisEval29C0,basisEval2A03,basisEval2969,basisEval2969,basisEval29C4,basisEval29ED,basisEval2A36,basisEval2969,basisEval2969,basisEval2A37,basisEval2A2A,basisEval2969,basisEval2969,basisEval2A1B,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969];
          real vdot2B21#1 = VDot<84>(dofs2812,intermediateCons2A38);
          real vdot2B23#2 = VDot<84>(dofs2812,intermediateCons2A39);
          real vdot2B25#2 = VDot<84>(dofs2812,intermediateCons2A3A);
          real vdot2B2A#1 = VDot<84>(dofs2812,intermediateCons2A3B);
          real vdot2B2C#2 = VDot<84>(dofs2812,intermediateCons2A3C);
          real vdot2B33#1 = VDot<84>(dofs2812,intermediateCons2A3D);
          tensor[3,3] _t2B1F#1 = <tensor[3,3]>[vdot2B21,vdot2B23,vdot2B25,vdot2B23,vdot2B2A,vdot2B2C,vdot2B25,vdot2B2C,vdot2B33];
          real[3] _t2B4C#1 = EigenVals3x3(_t2B1F);
          real _t2B50#1 = Subscript<real[3]>(_t2B4C,ilit24C7);
          real basisEval2B6D#1 = RMul(one296B,prod2980);
          real basisEval2B80#1 = RMul(one296B,prod2993);
          real basisEval2B83#1 = RMul(one296B,prod2996);
          real basisEval2B8B#3 = RMul(coeff296A,prod299E);
          real basisEval2B9C#1 = RMul(one296B,prod29AF);
          real basisEval2B9F#1 = RMul(one296B,prod29B2);
          real basisEval2BA2#1 = RMul(one296B,prod29B5);
          real basisEval2BAA#2 = RMul(coeff296A,prod29BD);
          real basisEval2BAC#2 = RMul(coeff296A,prod29BF);
          real basisEval2BB2#1 = RMul(coeff29D5,prod29C5);
          real prod52BBD#1 = RMul(prod429AA,varAcc2968);
          real prod2BBE#1 = RMul(one296B,prod52BBD);
          real prod2BBF#2 = RMul(one296B,prod2BBE);
          real basisEval2BC0#2 = RMul(one296B,prod2BBF);
          real prod2BC1#1 = RMul(varAcc2967,prod429AA);
          real prod2BC2#3 = RMul(one296B,prod2BC1);
          real basisEval2BC3#1 = RMul(one296B,prod2BC2);
          real prod2BC4#1 = RMul(prod22982,prod3298E);
          real prod2BC5#3 = RMul(one296B,prod2BC4);
          real basisEval2BC6#1 = RMul(one296B,prod2BC5);
          real prod2BC7#1 = RMul(prod32998,prod2297B);
          real prod2BC8#3 = RMul(one296B,prod2BC7);
          real basisEval2BC9#1 = RMul(one296B,prod2BC8);
          real prod2BCA#1 = RMul(prod429B7,varAcc2968);
          real prod2BCB#3 = RMul(one296B,prod2BCA);
          real basisEval2BCC#1 = RMul(one296B,prod2BCB);
          real prod52BCD#1 = RMul(prod429B7,varAcc2967);
          real prod2BCE#1 = RMul(prod52BCD,one296B);
          real prod2BCF#2 = RMul(one296B,prod2BCE);
          real basisEval2BD0#2 = RMul(one296B,prod2BCF);
          real prod2BD1#3 = RMul(varAcc2966,prod29AB);
          real basisEval2BD2#1 = RMul(coeff296A,prod2BD1);
          real prod2BD3#2 = RMul(varAcc2966,prod29AE);
          real basisEval2BD4#2 = RMul(coeff296A,prod2BD3);
          real prod2BD5#2 = RMul(varAcc2966,prod29B1);
          real basisEval2BD6#1 = RMul(coeff296A,prod2BD5);
          real prod2BD7#2 = RMul(varAcc2966,prod29B4);
          real basisEval2BD8#2 = RMul(coeff296A,prod2BD7);
          real prod2BD9#3 = RMul(varAcc2966,prod29B8);
          real basisEval2BDA#1 = RMul(coeff296A,prod2BD9);
          real prod2BDB#3 = RMul(prod2298B,prod298F);
          real basisEval2BDC#1 = RMul(coeff29D5,prod2BDB);
          real prod2BDD#2 = RMul(prod2298B,prod2992);
          real basisEval2BDE#2 = RMul(coeff29D5,prod2BDD);
          real prod2BDF#2 = RMul(prod2298B,prod2995);
          real basisEval2BE0#2 = RMul(coeff29D5,prod2BDF);
          real prod2BE1#3 = RMul(prod2298B,prod2999);
          real basisEval2BE2#1 = RMul(coeff29D5,prod2BE1);
          real prod2BE3#3 = RMul(prod329A7,prod297C);
          real basisEval2BE4#1 = RMul(coeff29D8,prod2BE3);
          real prod2BE5#2 = RMul(prod329A7,prod297F);
          real basisEval2BE6#1 = RMul(coeff29D8,prod2BE5);
          real prod2BE7#3 = RMul(prod329A7,prod2983);
          real basisEval2BE8#1 = RMul(coeff29D8,prod2BE7);
          real prod2BE9#3 = RMul(prod429CE,prod2970);
          real basisEval2BEA#1 = RMul(coeff29E6,prod2BE9);
          real prod2BEB#3 = RMul(prod429CE,prod2974);
          real basisEval2BEC#1 = RMul(coeff29E6,prod2BEB);
          real prod52BEE#1 = RMul(prod429CE,varAcc2966);
          real prod2BEF#2 = RMul(prod52BEE,prod296C);
          real basisEval2BF0#1 = RMul(coeff2977,prod2BEF);
          real basisEval2BF5#1 = RMul(one296B,prod2986);
          real basisEval2BFA#1 = RMul(one296B,prod299C);
          real basisEval2BFC#1 = RMul(one296B,prod29A2);
          real basisEval2C03#1 = RMul(one296B,prod29BB);
          real basisEval2C04#1 = RMul(coeff29D5,prod29BF);
          real basisEval2C06#1 = RMul(one296B,prod29C3);
          real basisEval2C07#2 = RMul(coeff296A,prod29C5);
          real basisEval2C08#1 = RMul(one296B,prod29C9);
          real basisEval2C0B#1 = RMul(coeff296A,prod2BC2);
          real basisEval2C0C#1 = RMul(coeff29D5,prod2BC5);
          real basisEval2C0D#1 = RMul(coeff29D8,prod2BC8);
          real basisEval2C0E#1 = RMul(coeff29E6,prod2BCB);
          real basisEval2C0F#1 = RMul(coeff2977,prod2BCF);
          real basisEval2C10#1 = RMul(one296B,prod2BD1);
          real basisEval2C11#2 = RMul(coeff29D5,prod2BD5);
          real basisEval2C12#1 = RMul(coeff29D8,prod2BD7);
          real basisEval2C13#1 = RMul(coeff29E6,prod2BD9);
          real basisEval2C14#1 = RMul(one296B,prod2BDB);
          real basisEval2C15#1 = RMul(coeff296A,prod2BDD);
          real basisEval2C16#1 = RMul(coeff29D8,prod2BE1);
          real basisEval2C17#1 = RMul(one296B,prod2BE3);
          real basisEval2C18#2 = RMul(coeff296A,prod2BE5);
          real basisEval2C19#1 = RMul(coeff29D5,prod2BE7);
          real basisEval2C1A#1 = RMul(one296B,prod2BE9);
          real basisEval2C1B#1 = RMul(coeff296A,prod2BEB);
          real basisEval2C1C#2 = RMul(one296B,prod2BEF);
          real basisEval2C1F#1 = RMul(one296B,prod2988);
          real basisEval2C24#1 = RMul(one296B,prod29A0);
          real basisEval2C26#1 = RMul(one296B,prod29A4);
          real basisEval2C2B#1 = RMul(coeff29D5,prod29BD);
          real basisEval2C2C#1 = RMul(one296B,prod29C1);
          real basisEval2C2D#1 = RMul(one296B,prod29C7);
          real basisEval2C2F#1 = RMul(one296B,prod29CB);
          real basisEval2C30#1 = RMul(coeff2977,prod2BBF);
          real basisEval2C31#1 = RMul(coeff29E6,prod2BC2);
          real basisEval2C32#1 = RMul(coeff29D8,prod2BC5);
          real basisEval2C33#1 = RMul(coeff29D5,prod2BC8);
          real basisEval2C34#1 = RMul(coeff296A,prod2BCB);
          real basisEval2C35#1 = RMul(coeff29E6,prod2BD1);
          real basisEval2C36#1 = RMul(coeff29D8,prod2BD3);
          real basisEval2C37#1 = RMul(one296B,prod2BD9);
          real basisEval2C38#1 = RMul(coeff29D8,prod2BDB);
          real basisEval2C39#1 = RMul(coeff296A,prod2BDF);
          real basisEval2C3A#1 = RMul(one296B,prod2BE1);
          real basisEval2C3B#1 = RMul(coeff29D5,prod2BE3);
          real basisEval2C3C#1 = RMul(one296B,prod2BE7);
          real basisEval2C3D#1 = RMul(coeff296A,prod2BE9);
          real basisEval2C3E#1 = RMul(one296B,prod2BEB);
          tensor[84] intermediateCons2C3F#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2969,basisEval29D2,basisEval29F3,basisEval29D3,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29D4,basisEval2B6D,basisEval29F5,basisEval29D7,basisEval29F7,basisEval29DA,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29DB,basisEval2B80,basisEval2B83,basisEval29FA,basisEval29DE,basisEval2B8B,basisEval29FB,basisEval29E0,basisEval29FD,basisEval29E2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval29E3,basisEval2B9C,basisEval2B9F,basisEval2BA2,basisEval2A00,basisEval29E8,basisEval2BAA,basisEval2BAC,basisEval2A03,basisEval29EC,basisEval2BB2,basisEval2A05,basisEval29F0,basisEval2A07,basisEval29F2,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2969,basisEval2BC0,basisEval2BC3,basisEval2BC6,basisEval2BC9,basisEval2BCC,basisEval2BD0,basisEval2BD2,basisEval2BD4,basisEval2BD6,basisEval2BD8,basisEval2BDA,basisEval2BDC,basisEval2BDE,basisEval2BE0,basisEval2BE2,basisEval2BE4,basisEval2BE6,basisEval2BE8,basisEval2BEA,basisEval2BEC,basisEval2BF0];
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval2969,basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval29D2,basisEval2976,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval29D4,basisEval2981,basisEval29D6,basisEval2969,basisEval2BF5,basisEval29F7,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval29DB,basisEval2994,basisEval29DC,basisEval29DD,basisEval2969,basisEval2BFA,basisEval2B8B,basisEval2A21,basisEval2969,basisEval2BFC,basisEval2A22,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval29E3,basisEval29B0,basisEval29E4,basisEval29E5,basisEval29E7,basisEval2969,basisEval2C03,basisEval2BAA,basisEval2C04,basisEval2A28,basisEval2969,basisEval2C06,basisEval2C07,basisEval2A05,basisEval2969,basisEval2C08,basisEval2A2A,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2BC0,basisEval2C0B,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2969,basisEval2C10,basisEval2BD4,basisEval2C11,basisEval2C12,basisEval2C13,basisEval2969,basisEval2C14,basisEval2C15,basisEval2BE0,basisEval2C16,basisEval2969,basisEval2C17,basisEval2C18,basisEval2C19,basisEval2969,basisEval2C1A,basisEval2C1B,basisEval2969,basisEval2C1C,basisEval2969];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval2969,basisEval29D1,basisEval2969,basisEval2969,basisEval2972,basisEval29F3,basisEval2969,basisEval2A1C,basisEval2969,basisEval2969,basisEval29F4,basisEval2981,basisEval29F5,basisEval2969,basisEval29D7,basisEval2C1F,basisEval2969,basisEval2A1E,basisEval2969,basisEval2969,basisEval29F8,basisEval29F9,basisEval2997,basisEval29FA,basisEval2969,basisEval2A20,basisEval2B8B,basisEval2C24,basisEval2969,basisEval2A10,basisEval2C26,basisEval2969,basisEval2A23,basisEval2969,basisEval2969,basisEval29FE,basisEval29FF,basisEval29E4,basisEval29B6,basisEval2A00,basisEval2969,basisEval2A27,basisEval2C2B,basisEval2BAC,basisEval2C2C,basisEval2969,basisEval29EC,basisEval2C07,basisEval2C2D,basisEval2969,basisEval2A19,basisEval2C2F,basisEval2969,basisEval2A2B,basisEval2969,basisEval2969,basisEval2C30,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2BD0,basisEval2969,basisEval2C35,basisEval2C36,basisEval2C11,basisEval2BD8,basisEval2C37,basisEval2969,basisEval2C38,basisEval2BDE,basisEval2C39,basisEval2C3A,basisEval2969,basisEval2C3B,basisEval2C18,basisEval2C3C,basisEval2969,basisEval2C3D,basisEval2C3E,basisEval2969,basisEval2C1C,basisEval2969,basisEval2969];
          real vdot2D36#1 = VDot<84>(dofs2812,intermediateCons2C3F);
          real vdot2D38#1 = VDot<84>(dofs2812,intermediateCons2C40);
          real vdot2D3A#1 = VDot<84>(dofs2812,intermediateCons2C41);
          tensor[3] probe_l_62D34#2 = <tensor[3]>[vdot2D36,vdot2D38,vdot2D3A];
          real op1_e3_l_82D43#1 = VDot<3>(probe_l_62D34,probe_l_62D34);
          real op1_e3_l_92D46#1 = Sqrt(op1_e3_l_82D43);
          real op1_e3_l_102D49#1 = RNeg(_t2B50);
          real op1_e3_l_112D4C#1 = RAdd(fBias2481,op1_e3_l_92D46);
          real _t2D4F#1 = RDiv(op1_e3_l_102D49,op1_e3_l_112D4C);
          bool _t2D52#1 = GT<real>(_t2D4F,fStrTh247D);
          if _t2D52 then goto ASSIGN439E else goto ASSIGN40DF
        ASSIGN439E:  preds = [COND2D54]
          bool _t2D57#1 = GTE<real>(one296B,fMaskTh247F);
          if _t2D57 then goto ASSIGN2D5B else goto ASSIGN40DE
        ASSIGN2D5B:  preds = [COND2D59]
          bool _t2D5A#1 = true;
          goto JOIN2D5E
        JOIN2D5E:  preds = [ASSIGN2D5B,ASSIGN40DE]
          bool _t2D5C#1 = phi(_t2D5A,_t2D5D)
          goto JOIN2D61
        JOIN2D61:  preds = [JOIN2D5E,ASSIGN40DF]
          bool _t2D5F#1 = phi(_t2D5C,_t2D60)
          goto JOIN2D64
        JOIN2D64:  preds = [JOIN2D61,ASSIGN40E0]
          bool _t2D62#1 = phi(_t2D5F,_t2D63)
          bool _t2D65#1 = BNot(_t2D62);
          if _t2D65 then goto SAVE2D68 else goto JOIN2D6A
        SAVE2D68:  preds = [COND2D67]
          self.rayN = rayN24AB;
          active
          goto JOIN2D6A
        JOIN2D6A:  preds = [*ACTIVE2D69,COND2D67]
          bool _t2D6B#1 = BNot(analytical248B);
          if _t2D6B then goto ASSIGN2E6E else goto ASSIGN3EA0
        ASSIGN2E6E:  preds = [COND2D6D]
          int ilit2D6F#1 = 84;
          int mulRes2D70#84 = IMul(_t246B,ilit2D6F);
          int idx2D73#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,mulRes2D70);
          int ilit2D74#87 = 1;
          int addRes2D75#1 = IAdd(mulRes2D70,ilit2D74);
          int idx2D76#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D75);
          int ilit2D77#3 = 2;
          int addRes2D78#1 = IAdd(mulRes2D70,ilit2D77);
          int idx2D79#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D78);
          int ilit2D7A#1 = 3;
          int addRes2D7B#1 = IAdd(mulRes2D70,ilit2D7A);
          int idx2D7C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7B);
          int ilit2D7D#1 = 4;
          int addRes2D7E#1 = IAdd(mulRes2D70,ilit2D7D);
          int idx2D7F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D7E);
          int ilit2D80#1 = 5;
          int addRes2D81#1 = IAdd(mulRes2D70,ilit2D80);
          int idx2D82#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D81);
          int ilit2D83#1 = 6;
          int addRes2D84#1 = IAdd(mulRes2D70,ilit2D83);
          int idx2D85#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D84);
          int ilit2D86#1 = 7;
          int addRes2D87#1 = IAdd(mulRes2D70,ilit2D86);
          int idx2D88#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D87);
          int ilit2D89#1 = 8;
          int addRes2D8A#1 = IAdd(mulRes2D70,ilit2D89);
          int idx2D8B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8A);
          int ilit2D8C#1 = 9;
          int addRes2D8D#1 = IAdd(mulRes2D70,ilit2D8C);
          int idx2D8E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D8D);
          int ilit2D8F#1 = 10;
          int addRes2D90#1 = IAdd(mulRes2D70,ilit2D8F);
          int idx2D91#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D90);
          int ilit2D92#1 = 11;
          int addRes2D93#1 = IAdd(mulRes2D70,ilit2D92);
          int idx2D94#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D93);
          int ilit2D95#1 = 12;
          int addRes2D96#1 = IAdd(mulRes2D70,ilit2D95);
          int idx2D97#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D96);
          int ilit2D98#1 = 13;
          int addRes2D99#1 = IAdd(mulRes2D70,ilit2D98);
          int idx2D9A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D99);
          int ilit2D9B#1 = 14;
          int addRes2D9C#1 = IAdd(mulRes2D70,ilit2D9B);
          int idx2D9D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9C);
          int ilit2D9E#1 = 15;
          int addRes2D9F#1 = IAdd(mulRes2D70,ilit2D9E);
          int idx2DA0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2D9F);
          int ilit2DA1#1 = 16;
          int addRes2DA2#1 = IAdd(mulRes2D70,ilit2DA1);
          int idx2DA3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA2);
          int ilit2DA4#1 = 17;
          int addRes2DA5#1 = IAdd(mulRes2D70,ilit2DA4);
          int idx2DA6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA5);
          int ilit2DA7#1 = 18;
          int addRes2DA8#1 = IAdd(mulRes2D70,ilit2DA7);
          int idx2DA9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DA8);
          int ilit2DAA#1 = 19;
          int addRes2DAB#1 = IAdd(mulRes2D70,ilit2DAA);
          int idx2DAC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAB);
          int ilit2DAD#1 = 20;
          int addRes2DAE#1 = IAdd(mulRes2D70,ilit2DAD);
          int idx2DAF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DAE);
          int ilit2DB0#1 = 21;
          int addRes2DB1#1 = IAdd(mulRes2D70,ilit2DB0);
          int idx2DB2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB1);
          int ilit2DB3#1 = 22;
          int addRes2DB4#1 = IAdd(mulRes2D70,ilit2DB3);
          int idx2DB5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB4);
          int ilit2DB6#1 = 23;
          int addRes2DB7#1 = IAdd(mulRes2D70,ilit2DB6);
          int idx2DB8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DB7);
          int ilit2DB9#1 = 24;
          int addRes2DBA#1 = IAdd(mulRes2D70,ilit2DB9);
          int idx2DBB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBA);
          int ilit2DBC#1 = 25;
          int addRes2DBD#1 = IAdd(mulRes2D70,ilit2DBC);
          int idx2DBE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DBD);
          int ilit2DBF#1 = 26;
          int addRes2DC0#1 = IAdd(mulRes2D70,ilit2DBF);
          int idx2DC1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC0);
          int ilit2DC2#1 = 27;
          int addRes2DC3#1 = IAdd(mulRes2D70,ilit2DC2);
          int idx2DC4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC3);
          int ilit2DC5#1 = 28;
          int addRes2DC6#1 = IAdd(mulRes2D70,ilit2DC5);
          int idx2DC7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC6);
          int ilit2DC8#1 = 29;
          int addRes2DC9#1 = IAdd(mulRes2D70,ilit2DC8);
          int idx2DCA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DC9);
          int ilit2DCB#1 = 30;
          int addRes2DCC#1 = IAdd(mulRes2D70,ilit2DCB);
          int idx2DCD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCC);
          int ilit2DCE#1 = 31;
          int addRes2DCF#1 = IAdd(mulRes2D70,ilit2DCE);
          int idx2DD0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DCF);
          int ilit2DD1#1 = 32;
          int addRes2DD2#1 = IAdd(mulRes2D70,ilit2DD1);
          int idx2DD3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD2);
          int ilit2DD4#1 = 33;
          int addRes2DD5#1 = IAdd(mulRes2D70,ilit2DD4);
          int idx2DD6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD5);
          int ilit2DD7#1 = 34;
          int addRes2DD8#1 = IAdd(mulRes2D70,ilit2DD7);
          int idx2DD9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DD8);
          int ilit2DDA#1 = 35;
          int addRes2DDB#1 = IAdd(mulRes2D70,ilit2DDA);
          int idx2DDC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDB);
          int ilit2DDD#1 = 36;
          int addRes2DDE#1 = IAdd(mulRes2D70,ilit2DDD);
          int idx2DDF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DDE);
          int ilit2DE0#1 = 37;
          int addRes2DE1#1 = IAdd(mulRes2D70,ilit2DE0);
          int idx2DE2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE1);
          int ilit2DE3#1 = 38;
          int addRes2DE4#1 = IAdd(mulRes2D70,ilit2DE3);
          int idx2DE5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE4);
          int ilit2DE6#1 = 39;
          int addRes2DE7#1 = IAdd(mulRes2D70,ilit2DE6);
          int idx2DE8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DE7);
          int ilit2DE9#1 = 40;
          int addRes2DEA#1 = IAdd(mulRes2D70,ilit2DE9);
          int idx2DEB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DEA);
          int ilit2DEC#1 = 41;
          int addRes2DED#1 = IAdd(mulRes2D70,ilit2DEC);
          int idx2DEE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DED);
          int ilit2DEF#1 = 42;
          int addRes2DF0#1 = IAdd(mulRes2D70,ilit2DEF);
          int idx2DF1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF0);
          int ilit2DF2#1 = 43;
          int addRes2DF3#1 = IAdd(mulRes2D70,ilit2DF2);
          int idx2DF4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF3);
          int ilit2DF5#1 = 44;
          int addRes2DF6#1 = IAdd(mulRes2D70,ilit2DF5);
          int idx2DF7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF6);
          int ilit2DF8#1 = 45;
          int addRes2DF9#1 = IAdd(mulRes2D70,ilit2DF8);
          int idx2DFA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DF9);
          int ilit2DFB#1 = 46;
          int addRes2DFC#1 = IAdd(mulRes2D70,ilit2DFB);
          int idx2DFD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFC);
          int ilit2DFE#1 = 47;
          int addRes2DFF#1 = IAdd(mulRes2D70,ilit2DFE);
          int idx2E00#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2DFF);
          int ilit2E01#1 = 48;
          int addRes2E02#1 = IAdd(mulRes2D70,ilit2E01);
          int idx2E03#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E02);
          int ilit2E04#1 = 49;
          int addRes2E05#1 = IAdd(mulRes2D70,ilit2E04);
          int idx2E06#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E05);
          int ilit2E07#1 = 50;
          int addRes2E08#1 = IAdd(mulRes2D70,ilit2E07);
          int idx2E09#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E08);
          int ilit2E0A#1 = 51;
          int addRes2E0B#1 = IAdd(mulRes2D70,ilit2E0A);
          int idx2E0C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0B);
          int ilit2E0D#1 = 52;
          int addRes2E0E#1 = IAdd(mulRes2D70,ilit2E0D);
          int idx2E0F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E0E);
          int ilit2E10#1 = 53;
          int addRes2E11#1 = IAdd(mulRes2D70,ilit2E10);
          int idx2E12#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E11);
          int ilit2E13#1 = 54;
          int addRes2E14#1 = IAdd(mulRes2D70,ilit2E13);
          int idx2E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E14);
          int ilit2E16#1 = 55;
          int addRes2E17#1 = IAdd(mulRes2D70,ilit2E16);
          int idx2E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E17);
          int ilit2E19#1 = 56;
          int addRes2E1A#1 = IAdd(mulRes2D70,ilit2E19);
          int idx2E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1A);
          int ilit2E1C#1 = 57;
          int addRes2E1D#1 = IAdd(mulRes2D70,ilit2E1C);
          int idx2E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E1D);
          int ilit2E1F#1 = 58;
          int addRes2E20#1 = IAdd(mulRes2D70,ilit2E1F);
          int idx2E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E20);
          int ilit2E22#1 = 59;
          int addRes2E23#1 = IAdd(mulRes2D70,ilit2E22);
          int idx2E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E23);
          int ilit2E25#1 = 60;
          int addRes2E26#1 = IAdd(mulRes2D70,ilit2E25);
          int idx2E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E26);
          int ilit2E28#1 = 61;
          int addRes2E29#1 = IAdd(mulRes2D70,ilit2E28);
          int idx2E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E29);
          int ilit2E2B#1 = 62;
          int addRes2E2C#1 = IAdd(mulRes2D70,ilit2E2B);
          int idx2E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2C);
          int ilit2E2E#1 = 63;
          int addRes2E2F#1 = IAdd(mulRes2D70,ilit2E2E);
          int idx2E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E2F);
          int ilit2E31#1 = 64;
          int addRes2E32#1 = IAdd(mulRes2D70,ilit2E31);
          int idx2E33#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E32);
          int ilit2E34#1 = 65;
          int addRes2E35#1 = IAdd(mulRes2D70,ilit2E34);
          int idx2E36#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E35);
          int ilit2E37#1 = 66;
          int addRes2E38#1 = IAdd(mulRes2D70,ilit2E37);
          int idx2E39#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E38);
          int ilit2E3A#1 = 67;
          int addRes2E3B#1 = IAdd(mulRes2D70,ilit2E3A);
          int idx2E3C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3B);
          int ilit2E3D#1 = 68;
          int addRes2E3E#1 = IAdd(mulRes2D70,ilit2E3D);
          int idx2E3F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E3E);
          int ilit2E40#1 = 69;
          int addRes2E41#1 = IAdd(mulRes2D70,ilit2E40);
          int idx2E42#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E41);
          int ilit2E43#1 = 70;
          int addRes2E44#1 = IAdd(mulRes2D70,ilit2E43);
          int idx2E45#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E44);
          int ilit2E46#1 = 71;
          int addRes2E47#1 = IAdd(mulRes2D70,ilit2E46);
          int idx2E48#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E47);
          int ilit2E49#1 = 72;
          int addRes2E4A#1 = IAdd(mulRes2D70,ilit2E49);
          int idx2E4B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4A);
          int ilit2E4C#1 = 73;
          int addRes2E4D#1 = IAdd(mulRes2D70,ilit2E4C);
          int idx2E4E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E4D);
          int ilit2E4F#1 = 74;
          int addRes2E50#1 = IAdd(mulRes2D70,ilit2E4F);
          int idx2E51#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E50);
          int ilit2E52#1 = 75;
          int addRes2E53#1 = IAdd(mulRes2D70,ilit2E52);
          int idx2E54#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E53);
          int ilit2E55#1 = 76;
          int addRes2E56#1 = IAdd(mulRes2D70,ilit2E55);
          int idx2E57#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E56);
          int ilit2E58#1 = 77;
          int addRes2E59#1 = IAdd(mulRes2D70,ilit2E58);
          int idx2E5A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E59);
          int ilit2E5B#1 = 78;
          int addRes2E5C#1 = IAdd(mulRes2D70,ilit2E5B);
          int idx2E5D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5C);
          int ilit2E5E#1 = 79;
          int addRes2E5F#1 = IAdd(mulRes2D70,ilit2E5E);
          int idx2E60#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E5F);
          int ilit2E61#1 = 80;
          int addRes2E62#1 = IAdd(mulRes2D70,ilit2E61);
          int idx2E63#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E62);
          int ilit2E64#1 = 81;
          int addRes2E65#1 = IAdd(mulRes2D70,ilit2E64);
          int idx2E66#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E65);
          int ilit2E67#1 = 82;
          int addRes2E68#1 = IAdd(mulRes2D70,ilit2E67);
          int idx2E69#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E68);
          int ilit2E6A#1 = 83;
          int addRes2E6B#1 = IAdd(mulRes2D70,ilit2E6A);
          int idx2E6C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes2E6B);
          int mulRes2F72#1 = IMul(ilit2D74,idx2D73);
          int mulRes2F74#1 = IMul(ilit2D74,idx2D76);
          int mulRes2F77#1 = IMul(ilit2D74,idx2D79);
          int mulRes2F7A#1 = IMul(ilit2D74,idx2D7C);
          int mulRes2F7D#1 = IMul(ilit2D74,idx2D7F);
          int mulRes2F80#1 = IMul(ilit2D74,idx2D82);
          int mulRes2F83#1 = IMul(ilit2D74,idx2D85);
          int mulRes2F86#1 = IMul(ilit2D74,idx2D88);
          int mulRes2F89#1 = IMul(ilit2D74,idx2D8B);
          int mulRes2F8C#1 = IMul(ilit2D74,idx2D8E);
          int mulRes2F8F#1 = IMul(ilit2D74,idx2D91);
          int mulRes2F92#1 = IMul(ilit2D74,idx2D94);
          int mulRes2F95#1 = IMul(ilit2D74,idx2D97);
          int mulRes2F98#1 = IMul(ilit2D74,idx2D9A);
          int mulRes2F9B#1 = IMul(ilit2D74,idx2D9D);
          int mulRes2F9E#1 = IMul(ilit2D74,idx2DA0);
          int mulRes2FA1#1 = IMul(ilit2D74,idx2DA3);
          int mulRes2FA4#1 = IMul(ilit2D74,idx2DA6);
          int mulRes2FA7#1 = IMul(ilit2D74,idx2DA9);
          int mulRes2FAA#1 = IMul(ilit2D74,idx2DAC);
          int mulRes2FAD#1 = IMul(ilit2D74,idx2DAF);
          int mulRes2FB0#1 = IMul(ilit2D74,idx2DB2);
          int mulRes2FB3#1 = IMul(ilit2D74,idx2DB5);
          int mulRes2FB6#1 = IMul(ilit2D74,idx2DB8);
          int mulRes2FB9#1 = IMul(ilit2D74,idx2DBB);
          int mulRes2FBC#1 = IMul(ilit2D74,idx2DBE);
          int mulRes2FBF#1 = IMul(ilit2D74,idx2DC1);
          int mulRes2FC2#1 = IMul(ilit2D74,idx2DC4);
          int mulRes2FC5#1 = IMul(ilit2D74,idx2DC7);
          int mulRes2FC8#1 = IMul(ilit2D74,idx2DCA);
          int mulRes2FCB#1 = IMul(ilit2D74,idx2DCD);
          int mulRes2FCE#1 = IMul(ilit2D74,idx2DD0);
          int mulRes2FD1#1 = IMul(ilit2D74,idx2DD3);
          int mulRes2FD4#1 = IMul(ilit2D74,idx2DD6);
          int mulRes2FD7#1 = IMul(ilit2D74,idx2DD9);
          int mulRes2FDA#1 = IMul(ilit2D74,idx2DDC);
          int mulRes2FDD#1 = IMul(ilit2D74,idx2DDF);
          int mulRes2FE0#1 = IMul(ilit2D74,idx2DE2);
          int mulRes2FE3#1 = IMul(ilit2D74,idx2DE5);
          int mulRes2FE6#1 = IMul(ilit2D74,idx2DE8);
          int mulRes2FE9#1 = IMul(ilit2D74,idx2DEB);
          int mulRes2FEC#1 = IMul(ilit2D74,idx2DEE);
          int mulRes2FEF#1 = IMul(ilit2D74,idx2DF1);
          int mulRes2FF2#1 = IMul(ilit2D74,idx2DF4);
          int mulRes2FF5#1 = IMul(ilit2D74,idx2DF7);
          int mulRes2FF8#1 = IMul(ilit2D74,idx2DFA);
          int mulRes2FFB#1 = IMul(ilit2D74,idx2DFD);
          int mulRes2FFE#1 = IMul(ilit2D74,idx2E00);
          int mulRes3001#1 = IMul(ilit2D74,idx2E03);
          int mulRes3004#1 = IMul(ilit2D74,idx2E06);
          int mulRes3007#1 = IMul(ilit2D74,idx2E09);
          int mulRes300A#1 = IMul(ilit2D74,idx2E0C);
          int mulRes300D#1 = IMul(ilit2D74,idx2E0F);
          int mulRes3010#1 = IMul(ilit2D74,idx2E12);
          int mulRes3013#1 = IMul(ilit2D74,idx2E15);
          int mulRes3016#1 = IMul(ilit2D74,idx2E18);
          int mulRes3019#1 = IMul(ilit2D74,idx2E1B);
          int mulRes301C#1 = IMul(ilit2D74,idx2E1E);
          int mulRes301F#1 = IMul(ilit2D74,idx2E21);
          int mulRes3022#1 = IMul(ilit2D74,idx2E24);
          int mulRes3025#1 = IMul(ilit2D74,idx2E27);
          int mulRes3028#1 = IMul(ilit2D74,idx2E2A);
          int mulRes302B#1 = IMul(ilit2D74,idx2E2D);
          int mulRes302E#1 = IMul(ilit2D74,idx2E30);
          int mulRes3031#1 = IMul(ilit2D74,idx2E33);
          int mulRes3034#1 = IMul(ilit2D74,idx2E36);
          int mulRes3037#1 = IMul(ilit2D74,idx2E39);
          int mulRes303A#1 = IMul(ilit2D74,idx2E3C);
          int mulRes303D#1 = IMul(ilit2D74,idx2E3F);
          int mulRes3040#1 = IMul(ilit2D74,idx2E42);
          int mulRes3043#1 = IMul(ilit2D74,idx2E45);
          int mulRes3046#1 = IMul(ilit2D74,idx2E48);
          int mulRes3049#1 = IMul(ilit2D74,idx2E4B);
          int mulRes304C#1 = IMul(ilit2D74,idx2E4E);
          int mulRes304F#1 = IMul(ilit2D74,idx2E51);
          int mulRes3052#1 = IMul(ilit2D74,idx2E54);
          int mulRes3055#1 = IMul(ilit2D74,idx2E57);
          int mulRes3058#1 = IMul(ilit2D74,idx2E5A);
          int mulRes305B#1 = IMul(ilit2D74,idx2E5D);
          int mulRes305E#1 = IMul(ilit2D74,idx2E60);
          int mulRes3061#1 = IMul(ilit2D74,idx2E63);
          int mulRes3064#1 = IMul(ilit2D74,idx2E66);
          int mulRes3067#1 = IMul(ilit2D74,idx2E69);
          int mulRes306A#1 = IMul(ilit2D74,idx2E6C);
          real dof306B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F72);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F74);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F77);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7A);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F7D);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F80);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F83);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F86);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F89);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8C);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F8F);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F92);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F95);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F98);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9B);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2F9E);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA1);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA4);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FA7);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAA);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FAD);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB0);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB3);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB6);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FB9);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBC);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FBF);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC2);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC5);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FC8);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCB);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FCE);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD1);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD4);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FD7);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDA);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FDD);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE0);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE3);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE6);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FE9);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEC);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FEF);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF2);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF5);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FF8);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFB);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes2FFE);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3001);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3004);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3007);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300A);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes300D);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3010);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3013);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3016);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3019);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301C);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes301F);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3022);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3025);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3028);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302B);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes302E);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3031);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3034);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3037);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303A);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes303D);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3040);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3043);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3046);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3049);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304C);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes304F);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3052);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3055);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3058);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305B);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes305E);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3061);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3064);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3067);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes306A);
          tensor[84] dofs30BF#9 = <tensor[84]>[dof306B,dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE];
          real varAcc3213#20 = VIndex<3,0>(pos24B7);
          real varAcc3214#10 = VIndex<3,1>(pos24B7);
          real varAcc3215#10 = VIndex<3,2>(pos24B7);
          real basisEval3216#378 = 0.e0;
          real coeff3217#47 = 0.2e1;
          real one3218#79 = 0.1e1;
          real prod3219#6 = RMul(one3218,one3218);
          real prod321A#2 = RMul(one3218,prod3219);
          real basisEval321B#3 = RMul(coeff3217,prod321A);
          real prod321D#5 = RMul(one3218,varAcc3215);
          real prod321E#3 = RMul(one3218,prod321D);
          real basisEval321F#5 = RMul(coeff3217,prod321E);
          real prod3221#5 = RMul(varAcc3214,one3218);
          real prod3222#3 = RMul(one3218,prod3221);
          real basisEval3223#5 = RMul(coeff3217,prod3222);
          real coeff3224#25 = 0.6e1;
          real prod3226#3 = RMul(varAcc3213,prod3219);
          real basisEval3227#1 = RMul(coeff3224,prod3226);
          real prod23228#5 = RMul(varAcc3215,varAcc3215);
          real prod3229#4 = RMul(one3218,prod23228);
          real prod322A#4 = RMul(one3218,prod3229);
          real basisEval322B#2 = RMul(coeff3217,prod322A);
          real prod322C#4 = RMul(varAcc3214,varAcc3215);
          real prod322D#4 = RMul(one3218,prod322C);
          real basisEval322E#5 = RMul(coeff3217,prod322D);
          real prod2322F#5 = RMul(varAcc3214,varAcc3214);
          real prod3230#4 = RMul(prod2322F,one3218);
          real prod3231#4 = RMul(one3218,prod3230);
          real basisEval3232#2 = RMul(coeff3217,prod3231);
          real prod3233#4 = RMul(varAcc3213,prod321D);
          real basisEval3234#2 = RMul(coeff3224,prod3233);
          real prod3235#4 = RMul(varAcc3213,prod3221);
          real basisEval3236#2 = RMul(coeff3224,prod3235);
          real coeff3237#15 = 0.12e2;
          real prod23238#11 = RMul(varAcc3213,varAcc3213);
          real prod3239#4 = RMul(prod23238,prod3219);
          real basisEval323A#1 = RMul(coeff3237,prod3239);
          real prod3323B#4 = RMul(prod23228,varAcc3215);
          real prod323C#3 = RMul(one3218,prod3323B);
          real prod323D#4 = RMul(one3218,prod323C);
          real basisEval323E#2 = RMul(coeff3217,prod323D);
          real prod323F#3 = RMul(varAcc3214,prod23228);
          real prod3240#5 = RMul(one3218,prod323F);
          real basisEval3241#3 = RMul(coeff3217,prod3240);
          real prod3242#3 = RMul(prod2322F,varAcc3215);
          real prod3243#5 = RMul(one3218,prod3242);
          real basisEval3244#3 = RMul(coeff3217,prod3243);
          real prod33245#4 = RMul(prod2322F,varAcc3214);
          real prod3246#3 = RMul(prod33245,one3218);
          real prod3247#4 = RMul(one3218,prod3246);
          real basisEval3248#2 = RMul(coeff3217,prod3247);
          real prod3249#5 = RMul(varAcc3213,prod3229);
          real basisEval324A#2 = RMul(coeff3224,prod3249);
          real prod324B#3 = RMul(varAcc3213,prod322C);
          real basisEval324C#3 = RMul(coeff3224,prod324B);
          real prod324D#5 = RMul(varAcc3213,prod3230);
          real basisEval324E#2 = RMul(coeff3224,prod324D);
          real prod324F#5 = RMul(prod23238,prod321D);
          real basisEval3250#1 = RMul(coeff3237,prod324F);
          real prod3251#5 = RMul(prod23238,prod3221);
          real basisEval3252#1 = RMul(coeff3237,prod3251);
          real coeff3253#9 = 0.20e2;
          real prod33254#7 = RMul(prod23238,varAcc3213);
          real prod3255#4 = RMul(prod33254,prod3219);
          real basisEval3256#1 = RMul(coeff3253,prod3255);
          real prod43257#3 = RMul(prod3323B,varAcc3215);
          real prod3258#2 = RMul(one3218,prod43257);
          real prod3259#4 = RMul(one3218,prod3258);
          real basisEval325A#2 = RMul(coeff3217,prod3259);
          real prod325B#2 = RMul(varAcc3214,prod3323B);
          real prod325C#6 = RMul(one3218,prod325B);
          real basisEval325D#3 = RMul(coeff3217,prod325C);
          real prod325E#2 = RMul(prod2322F,prod23228);
          real prod325F#5 = RMul(one3218,prod325E);
          real basisEval3260#1 = RMul(coeff3217,prod325F);
          real prod3261#2 = RMul(prod33245,varAcc3215);
          real prod3262#6 = RMul(one3218,prod3261);
          real basisEval3263#3 = RMul(coeff3217,prod3262);
          real prod43264#3 = RMul(prod33245,varAcc3214);
          real prod3265#2 = RMul(prod43264,one3218);
          real prod3266#4 = RMul(one3218,prod3265);
          real basisEval3267#2 = RMul(coeff3217,prod3266);
          real prod3268#6 = RMul(varAcc3213,prod323C);
          real basisEval3269#1 = RMul(coeff3224,prod3268);
          real prod326A#5 = RMul(varAcc3213,prod323F);
          real basisEval326B#4 = RMul(coeff3224,prod326A);
          real prod326C#5 = RMul(varAcc3213,prod3242);
          real basisEval326D#4 = RMul(coeff3224,prod326C);
          real prod326E#6 = RMul(varAcc3213,prod3246);
          real basisEval326F#1 = RMul(coeff3224,prod326E);
          real prod3270#5 = RMul(prod23238,prod3229);
          real basisEval3271#2 = RMul(coeff3237,prod3270);
          real prod3272#5 = RMul(prod23238,prod322C);
          real basisEval3273#1 = RMul(coeff3237,prod3272);
          real prod3274#5 = RMul(prod23238,prod3230);
          real basisEval3275#2 = RMul(coeff3237,prod3274);
          real prod3276#6 = RMul(prod33254,prod321D);
          real basisEval3277#1 = RMul(coeff3253,prod3276);
          real prod3278#6 = RMul(prod33254,prod3221);
          real basisEval3279#1 = RMul(coeff3253,prod3278);
          real coeff327A#3 = 0.30e2;
          real prod4327B#4 = RMul(prod33254,varAcc3213);
          real prod327C#4 = RMul(prod4327B,prod3219);
          real basisEval327D#1 = RMul(coeff327A,prod327C);
          real basisEval327E#6 = RMul(one3218,prod321A);
          real basisEval327F#3 = RMul(one3218,prod321E);
          real basisEval3280#5 = RMul(coeff3217,prod3226);
          real basisEval3281#3 = RMul(one3218,prod322A);
          real coeff3282#24 = 0.3e1;
          real basisEval3283#3 = RMul(coeff3282,prod3231);
          real basisEval3284#5 = RMul(coeff3217,prod3233);
          real coeff3285#25 = 0.4e1;
          real basisEval3286#1 = RMul(coeff3285,prod3235);
          real basisEval3287#3 = RMul(coeff3282,prod3239);
          real basisEval3288#3 = RMul(one3218,prod323D);
          real basisEval3289#2 = RMul(coeff3282,prod3243);
          real basisEval328A#3 = RMul(coeff3285,prod3247);
          real basisEval328B#3 = RMul(coeff3217,prod3249);
          real basisEval328C#3 = RMul(coeff3285,prod324B);
          real basisEval328D#2 = RMul(coeff3282,prod324F);
          real basisEval328E#2 = RMul(coeff3224,prod3251);
          real basisEval328F#3 = RMul(coeff3285,prod3255);
          real basisEval3290#3 = RMul(one3218,prod3259);
          real basisEval3291#4 = RMul(coeff3282,prod325F);
          real basisEval3292#2 = RMul(coeff3285,prod3262);
          real coeff3293#9 = 0.5e1;
          real basisEval3294#3 = RMul(coeff3293,prod3266);
          real basisEval3295#3 = RMul(coeff3217,prod3268);
          real basisEval3296#1 = RMul(coeff3285,prod326A);
          real coeff3297#6 = 0.8e1;
          real basisEval3298#1 = RMul(coeff3297,prod326E);
          real basisEval3299#4 = RMul(coeff3282,prod3270);
          real basisEval329A#4 = RMul(coeff3224,prod3272);
          real coeff329B#3 = 0.9e1;
          real basisEval329C#1 = RMul(coeff329B,prod3274);
          real basisEval329D#2 = RMul(coeff3285,prod3276);
          real basisEval329E#1 = RMul(coeff3297,prod3278);
          real basisEval329F#3 = RMul(coeff3293,prod327C);
          real basisEval32A0#3 = RMul(one3218,prod3222);
          real basisEval32A1#3 = RMul(coeff3282,prod322A);
          real basisEval32A2#3 = RMul(one3218,prod3231);
          real basisEval32A3#1 = RMul(coeff3285,prod3233);
          real basisEval32A4#5 = RMul(coeff3217,prod3235);
          real basisEval32A5#3 = RMul(coeff3285,prod323D);
          real basisEval32A6#2 = RMul(coeff3282,prod3240);
          real basisEval32A7#3 = RMul(one3218,prod3247);
          real basisEval32A8#3 = RMul(coeff3217,prod324D);
          real basisEval32A9#2 = RMul(coeff3224,prod324F);
          real basisEval32AA#2 = RMul(coeff3282,prod3251);
          real basisEval32AB#3 = RMul(coeff3293,prod3259);
          real basisEval32AC#2 = RMul(coeff3285,prod325C);
          real basisEval32AD#3 = RMul(one3218,prod3266);
          real basisEval32AE#1 = RMul(coeff3297,prod3268);
          real basisEval32AF#1 = RMul(coeff3285,prod326C);
          real basisEval32B0#3 = RMul(coeff3217,prod326E);
          real basisEval32B1#1 = RMul(coeff329B,prod3270);
          real basisEval32B2#4 = RMul(coeff3282,prod3274);
          real basisEval32B3#1 = RMul(coeff3297,prod3276);
          real basisEval32B4#2 = RMul(coeff3285,prod3278);
          real basisEval32B5#1 = RMul(coeff3224,prod3222);
          real basisEval32B6#2 = RMul(coeff3224,prod322D);
          real basisEval32B7#1 = RMul(coeff3237,prod3231);
          real basisEval32B8#2 = RMul(coeff3217,prod3239);
          real basisEval32B9#2 = RMul(coeff3224,prod3240);
          real basisEval32BA#1 = RMul(coeff3237,prod3243);
          real basisEval32BB#1 = RMul(coeff3253,prod3247);
          real basisEval32BC#1 = RMul(coeff3237,prod324D);
          real basisEval32BD#3 = RMul(coeff3217,prod324F);
          real basisEval32BE#2 = RMul(coeff3217,prod3255);
          real basisEval32BF#1 = RMul(coeff3224,prod325C);
          real basisEval32C0#2 = RMul(coeff3237,prod325F);
          real basisEval32C1#1 = RMul(coeff3253,prod3262);
          real basisEval32C2#1 = RMul(coeff327A,prod3266);
          real basisEval32C3#1 = RMul(coeff3237,prod326C);
          real basisEval32C4#1 = RMul(coeff3253,prod326E);
          real basisEval32C5#1 = RMul(coeff3217,prod3270);
          real basisEval32C6#3 = RMul(coeff3217,prod3276);
          real basisEval32C7#1 = RMul(coeff3224,prod3278);
          real basisEval32C8#2 = RMul(coeff3217,prod327C);
          real basisEval32C9#3 = RMul(one3218,prod3226);
          real basisEval32CA#1 = RMul(coeff3285,prod322D);
          real basisEval32CB#3 = RMul(one3218,prod3239);
          real basisEval32CC#2 = RMul(coeff3224,prod3243);
          real basisEval32CD#2 = RMul(coeff3282,prod3249);
          real basisEval32CE#2 = RMul(coeff3282,prod324D);
          real basisEval32CF#3 = RMul(coeff3217,prod3251);
          real basisEval32D0#3 = RMul(one3218,prod3255);
          real basisEval32D1#1 = RMul(coeff3297,prod325C);
          real basisEval32D2#1 = RMul(coeff329B,prod325F);
          real basisEval32D3#1 = RMul(coeff3297,prod3262);
          real basisEval32D4#2 = RMul(coeff3285,prod3268);
          real basisEval32D5#2 = RMul(coeff3285,prod326E);
          real basisEval32D6#1 = RMul(coeff3285,prod3272);
          real basisEval32D7#3 = RMul(coeff3217,prod3278);
          real basisEval32D8#3 = RMul(one3218,prod327C);
          real basisEval32D9#1 = RMul(coeff3224,prod321E);
          real basisEval32DA#1 = RMul(coeff3237,prod322A);
          real basisEval32DB#1 = RMul(coeff3253,prod323D);
          real basisEval32DC#1 = RMul(coeff3237,prod3240);
          real basisEval32DD#1 = RMul(coeff3237,prod3249);
          real basisEval32DE#1 = RMul(coeff327A,prod3259);
          real basisEval32DF#1 = RMul(coeff3253,prod325C);
          real basisEval32E0#1 = RMul(coeff3224,prod3262);
          real basisEval32E1#1 = RMul(coeff3253,prod3268);
          real basisEval32E2#1 = RMul(coeff3237,prod326A);
          real basisEval32E3#1 = RMul(coeff3217,prod3274);
          real basisEval32E4#1 = RMul(coeff3224,prod3276);
          tensor[84] intermediateCons32E5#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3227,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval322E,basisEval3232,basisEval3234,basisEval3236,basisEval323A,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval3241,basisEval3244,basisEval3248,basisEval324A,basisEval324C,basisEval324E,basisEval3250,basisEval3252,basisEval3256,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval325D,basisEval3260,basisEval3263,basisEval3267,basisEval3269,basisEval326B,basisEval326D,basisEval326F,basisEval3271,basisEval3273,basisEval3275,basisEval3277,basisEval3279,basisEval327D];
          tensor[84] intermediateCons32E6#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327F,basisEval3223,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3281,basisEval322E,basisEval3283,basisEval3216,basisEval3284,basisEval3286,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3288,basisEval3241,basisEval3289,basisEval328A,basisEval3216,basisEval328B,basisEval328C,basisEval324E,basisEval3216,basisEval328D,basisEval328E,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3290,basisEval325D,basisEval3291,basisEval3292,basisEval3294,basisEval3216,basisEval3295,basisEval3296,basisEval326D,basisEval3298,basisEval3216,basisEval3299,basisEval329A,basisEval329C,basisEval3216,basisEval329D,basisEval329E,basisEval3216,basisEval329F,basisEval3216];
          tensor[84] intermediateCons32E7#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32A0,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval322E,basisEval32A2,basisEval3216,basisEval32A3,basisEval32A4,basisEval3216,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32A6,basisEval3244,basisEval32A7,basisEval3216,basisEval324A,basisEval328C,basisEval32A8,basisEval3216,basisEval32A9,basisEval32AA,basisEval3216,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32AC,basisEval3291,basisEval3263,basisEval32AD,basisEval3216,basisEval32AE,basisEval326B,basisEval32AF,basisEval32B0,basisEval3216,basisEval32B1,basisEval329A,basisEval32B2,basisEval3216,basisEval32B3,basisEval32B4,basisEval3216,basisEval329F,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E8#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval32B5,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval322B,basisEval32B6,basisEval32B7,basisEval3216,basisEval3216,basisEval3284,basisEval3236,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval323E,basisEval32B9,basisEval32BA,basisEval32BB,basisEval3216,basisEval3216,basisEval328B,basisEval324C,basisEval32BC,basisEval3216,basisEval3216,basisEval32BD,basisEval328E,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval325A,basisEval32BF,basisEval32C0,basisEval32C1,basisEval32C2,basisEval3216,basisEval3216,basisEval3295,basisEval326B,basisEval32C3,basisEval32C4,basisEval3216,basisEval3216,basisEval32C5,basisEval329A,basisEval3275,basisEval3216,basisEval3216,basisEval32C6,basisEval32C7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32E9#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321F,basisEval3223,basisEval3216,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A1,basisEval32CA,basisEval3283,basisEval3216,basisEval3216,basisEval3284,basisEval32A4,basisEval3216,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32A5,basisEval32B9,basisEval32CC,basisEval328A,basisEval3216,basisEval3216,basisEval32CD,basisEval328C,basisEval32CE,basisEval3216,basisEval3216,basisEval32BD,basisEval32CF,basisEval3216,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32AB,basisEval32D1,basisEval32D2,basisEval32D3,basisEval3294,basisEval3216,basisEval3216,basisEval32D4,basisEval326B,basisEval326D,basisEval32D5,basisEval3216,basisEval3216,basisEval3299,basisEval32D6,basisEval32B2,basisEval3216,basisEval3216,basisEval32C6,basisEval32D7,basisEval3216,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          tensor[84] intermediateCons32EA#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval321B,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32D9,basisEval3223,basisEval3216,basisEval3216,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DA,basisEval32B6,basisEval3232,basisEval3216,basisEval3216,basisEval3234,basisEval32A4,basisEval3216,basisEval3216,basisEval32B8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DB,basisEval32DC,basisEval32CC,basisEval3248,basisEval3216,basisEval3216,basisEval32DD,basisEval324C,basisEval32A8,basisEval3216,basisEval3216,basisEval32A9,basisEval32CF,basisEval3216,basisEval3216,basisEval32BE,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval32DE,basisEval32DF,basisEval32C0,basisEval32E0,basisEval3267,basisEval3216,basisEval3216,basisEval32E1,basisEval32E2,basisEval326D,basisEval32B0,basisEval3216,basisEval3216,basisEval3271,basisEval329A,basisEval32E3,basisEval3216,basisEval3216,basisEval32E4,basisEval32D7,basisEval3216,basisEval3216,basisEval32C8,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216];
          real vdot33CE#1 = VDot<84>(dofs30BF,intermediateCons32E5);
          real vdot33D0#2 = VDot<84>(dofs30BF,intermediateCons32E6);
          real vdot33D2#2 = VDot<84>(dofs30BF,intermediateCons32E7);
          real vdot33D7#1 = VDot<84>(dofs30BF,intermediateCons32E8);
          real vdot33D9#2 = VDot<84>(dofs30BF,intermediateCons32E9);
          real vdot33E0#1 = VDot<84>(dofs30BF,intermediateCons32EA);
          tensor[3,3] _t33CC#1 = <tensor[3,3]>[vdot33CE,vdot33D0,vdot33D2,vdot33D0,vdot33D7,vdot33D9,vdot33D2,vdot33D9,vdot33E0];
          (real[3] evals33F9#2,tensor[3][3] E33FA#2) = EigenVecs3x3(_t33CC);
          tensor[3] _t33FE#6 = Subscript<tensor[3][3]>(E33FA,ilit2D77);
          real _t3400#9 = Subscript<real[3]>(evals33F9,ilit2D77);
          tensor[3] _t3404#6 = Subscript<tensor[3][3]>(E33FA,ilit2D74);
          real _t3406#9 = Subscript<real[3]>(evals33F9,ilit2D74);
          real r3409#1 = TensorIndex<tensor[3],[0]>(_t33FE);
          tensor[3] binopV340A#3 = VScale<3>(r3409,_t33FE);
          real r340B#1 = TensorIndex<tensor[3],[1]>(_t33FE);
          tensor[3] binopV340C#3 = VScale<3>(r340B,_t33FE);
          real r340D#1 = TensorIndex<tensor[3],[2]>(_t33FE);
          tensor[3] binopV340E#3 = VScale<3>(r340D,_t33FE);
          real r3418#1 = TensorIndex<tensor[3],[0]>(_t3404);
          tensor[3] binopV3419#3 = VScale<3>(r3418,_t3404);
          real r341A#1 = TensorIndex<tensor[3],[1]>(_t3404);
          tensor[3] binopV341B#3 = VScale<3>(r341A,_t3404);
          real r341C#1 = TensorIndex<tensor[3],[2]>(_t3404);
          tensor[3] binopV341D#3 = VScale<3>(r341C,_t3404);
          real r3427#1 = VIndex<3,0>(binopV340A);
          real r3428#1 = RDiv(r3427,_t3400);
          real r3429#1 = VIndex<3,1>(binopV340A);
          real r342A#1 = RDiv(r3429,_t3400);
          real r342B#1 = VIndex<3,2>(binopV340A);
          real r342C#1 = RDiv(r342B,_t3400);
          tensor[3] tensor342D#1 = <tensor[3]>[r3428,r342A,r342C];
          real r342E#1 = VIndex<3,0>(binopV340C);
          real r342F#1 = RDiv(r342E,_t3400);
          real r3430#1 = VIndex<3,1>(binopV340C);
          real r3431#1 = RDiv(r3430,_t3400);
          real r3432#1 = VIndex<3,2>(binopV340C);
          real r3433#1 = RDiv(r3432,_t3400);
          tensor[3] tensor3434#1 = <tensor[3]>[r342F,r3431,r3433];
          real r3435#1 = VIndex<3,0>(binopV340E);
          real r3436#1 = RDiv(r3435,_t3400);
          real r3437#1 = VIndex<3,1>(binopV340E);
          real r3438#1 = RDiv(r3437,_t3400);
          real r3439#1 = VIndex<3,2>(binopV340E);
          real r343A#1 = RDiv(r3439,_t3400);
          tensor[3] tensor343B#1 = <tensor[3]>[r3436,r3438,r343A];
          real r3454#1 = VIndex<3,0>(binopV3419);
          real r3455#1 = RDiv(r3454,_t3406);
          real r3456#1 = VIndex<3,1>(binopV3419);
          real r3457#1 = RDiv(r3456,_t3406);
          real r3458#1 = VIndex<3,2>(binopV3419);
          real r3459#1 = RDiv(r3458,_t3406);
          tensor[3] tensor345A#1 = <tensor[3]>[r3455,r3457,r3459];
          real r345B#1 = VIndex<3,0>(binopV341B);
          real r345C#1 = RDiv(r345B,_t3406);
          real r345D#1 = VIndex<3,1>(binopV341B);
          real r345E#1 = RDiv(r345D,_t3406);
          real r345F#1 = VIndex<3,2>(binopV341B);
          real r3460#1 = RDiv(r345F,_t3406);
          tensor[3] tensor3461#1 = <tensor[3]>[r345C,r345E,r3460];
          real r3462#1 = VIndex<3,0>(binopV341D);
          real r3463#1 = RDiv(r3462,_t3406);
          real r3464#1 = VIndex<3,1>(binopV341D);
          real r3465#1 = RDiv(r3464,_t3406);
          real r3466#1 = VIndex<3,2>(binopV341D);
          real r3467#1 = RDiv(r3466,_t3406);
          tensor[3] tensor3468#1 = <tensor[3]>[r3463,r3465,r3467];
          tensor[3] v3483#1 = VAdd<3>(tensor342D,tensor345A);
          tensor[3] v3486#1 = VAdd<3>(tensor3434,tensor3461);
          tensor[3] v3489#1 = VAdd<3>(tensor343B,tensor3468);
          real basisEval34B0#1 = RMul(one3218,prod322D);
          real basisEval34C3#1 = RMul(one3218,prod3240);
          real basisEval34C6#1 = RMul(one3218,prod3243);
          real basisEval34CE#3 = RMul(coeff3217,prod324B);
          real basisEval34DF#1 = RMul(one3218,prod325C);
          real basisEval34E2#1 = RMul(one3218,prod325F);
          real basisEval34E5#1 = RMul(one3218,prod3262);
          real basisEval34ED#2 = RMul(coeff3217,prod326A);
          real basisEval34EF#2 = RMul(coeff3217,prod326C);
          real basisEval34F5#1 = RMul(coeff3282,prod3272);
          real prod53500#1 = RMul(prod43257,varAcc3215);
          real prod3501#1 = RMul(one3218,prod53500);
          real prod3502#2 = RMul(one3218,prod3501);
          real basisEval3503#2 = RMul(one3218,prod3502);
          real prod3504#1 = RMul(varAcc3214,prod43257);
          real prod3505#3 = RMul(one3218,prod3504);
          real basisEval3506#1 = RMul(one3218,prod3505);
          real prod3507#1 = RMul(prod2322F,prod3323B);
          real prod3508#3 = RMul(one3218,prod3507);
          real basisEval3509#1 = RMul(one3218,prod3508);
          real prod350A#1 = RMul(prod33245,prod23228);
          real prod350B#3 = RMul(one3218,prod350A);
          real basisEval350C#1 = RMul(one3218,prod350B);
          real prod350D#1 = RMul(prod43264,varAcc3215);
          real prod350E#3 = RMul(one3218,prod350D);
          real basisEval350F#1 = RMul(one3218,prod350E);
          real prod53510#1 = RMul(prod43264,varAcc3214);
          real prod3511#1 = RMul(prod53510,one3218);
          real prod3512#2 = RMul(one3218,prod3511);
          real basisEval3513#2 = RMul(one3218,prod3512);
          real prod3514#3 = RMul(varAcc3213,prod3258);
          real basisEval3515#1 = RMul(coeff3217,prod3514);
          real prod3516#2 = RMul(varAcc3213,prod325B);
          real basisEval3517#2 = RMul(coeff3217,prod3516);
          real prod3518#2 = RMul(varAcc3213,prod325E);
          real basisEval3519#1 = RMul(coeff3217,prod3518);
          real prod351A#2 = RMul(varAcc3213,prod3261);
          real basisEval351B#2 = RMul(coeff3217,prod351A);
          real prod351C#3 = RMul(varAcc3213,prod3265);
          real basisEval351D#1 = RMul(coeff3217,prod351C);
          real prod351E#3 = RMul(prod23238,prod323C);
          real basisEval351F#1 = RMul(coeff3282,prod351E);
          real prod3520#2 = RMul(prod23238,prod323F);
          real basisEval3521#2 = RMul(coeff3282,prod3520);
          real prod3522#2 = RMul(prod23238,prod3242);
          real basisEval3523#2 = RMul(coeff3282,prod3522);
          real prod3524#3 = RMul(prod23238,prod3246);
          real basisEval3525#1 = RMul(coeff3282,prod3524);
          real prod3526#3 = RMul(prod33254,prod3229);
          real basisEval3527#1 = RMul(coeff3285,prod3526);
          real prod3528#2 = RMul(prod33254,prod322C);
          real basisEval3529#1 = RMul(coeff3285,prod3528);
          real prod352A#3 = RMul(prod33254,prod3230);
          real basisEval352B#1 = RMul(coeff3285,prod352A);
          real prod352C#3 = RMul(prod4327B,prod321D);
          real basisEval352D#1 = RMul(coeff3293,prod352C);
          real prod352E#3 = RMul(prod4327B,prod3221);
          real basisEval352F#1 = RMul(coeff3293,prod352E);
          real prod53531#1 = RMul(prod4327B,varAcc3213);
          real prod3532#2 = RMul(prod53531,prod3219);
          real basisEval3533#1 = RMul(coeff3224,prod3532);
          real basisEval3538#1 = RMul(one3218,prod3233);
          real basisEval353D#1 = RMul(one3218,prod3249);
          real basisEval353F#1 = RMul(one3218,prod324F);
          real basisEval3546#1 = RMul(one3218,prod3268);
          real basisEval3547#1 = RMul(coeff3282,prod326C);
          real basisEval3549#1 = RMul(one3218,prod3270);
          real basisEval354A#2 = RMul(coeff3217,prod3272);
          real basisEval354B#1 = RMul(one3218,prod3276);
          real basisEval354E#1 = RMul(coeff3217,prod3505);
          real basisEval354F#1 = RMul(coeff3282,prod3508);
          real basisEval3550#1 = RMul(coeff3285,prod350B);
          real basisEval3551#1 = RMul(coeff3293,prod350E);
          real basisEval3552#1 = RMul(coeff3224,prod3512);
          real basisEval3553#1 = RMul(one3218,prod3514);
          real basisEval3554#2 = RMul(coeff3282,prod3518);
          real basisEval3555#1 = RMul(coeff3285,prod351A);
          real basisEval3556#1 = RMul(coeff3293,prod351C);
          real basisEval3557#1 = RMul(one3218,prod351E);
          real basisEval3558#1 = RMul(coeff3217,prod3520);
          real basisEval3559#1 = RMul(coeff3285,prod3524);
          real basisEval355A#1 = RMul(one3218,prod3526);
          real basisEval355B#2 = RMul(coeff3217,prod3528);
          real basisEval355C#1 = RMul(coeff3282,prod352A);
          real basisEval355D#1 = RMul(one3218,prod352C);
          real basisEval355E#1 = RMul(coeff3217,prod352E);
          real basisEval355F#2 = RMul(one3218,prod3532);
          real basisEval3562#1 = RMul(one3218,prod3235);
          real basisEval3567#1 = RMul(one3218,prod324D);
          real basisEval3569#1 = RMul(one3218,prod3251);
          real basisEval356E#1 = RMul(coeff3282,prod326A);
          real basisEval356F#1 = RMul(one3218,prod326E);
          real basisEval3570#1 = RMul(one3218,prod3274);
          real basisEval3572#1 = RMul(one3218,prod3278);
          real basisEval3573#1 = RMul(coeff3224,prod3502);
          real basisEval3574#1 = RMul(coeff3293,prod3505);
          real basisEval3575#1 = RMul(coeff3285,prod3508);
          real basisEval3576#1 = RMul(coeff3282,prod350B);
          real basisEval3577#1 = RMul(coeff3217,prod350E);
          real basisEval3578#1 = RMul(coeff3293,prod3514);
          real basisEval3579#1 = RMul(coeff3285,prod3516);
          real basisEval357A#1 = RMul(one3218,prod351C);
          real basisEval357B#1 = RMul(coeff3285,prod351E);
          real basisEval357C#1 = RMul(coeff3217,prod3522);
          real basisEval357D#1 = RMul(one3218,prod3524);
          real basisEval357E#1 = RMul(coeff3282,prod3526);
          real basisEval357F#1 = RMul(one3218,prod352A);
          real basisEval3580#1 = RMul(coeff3217,prod352C);
          real basisEval3581#1 = RMul(one3218,prod352E);
          tensor[84] intermediateCons3582#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval3216,basisEval327F,basisEval32A0,basisEval3280,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3281,basisEval34B0,basisEval32A2,basisEval3284,basisEval32A4,basisEval3287,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3288,basisEval34C3,basisEval34C6,basisEval32A7,basisEval328B,basisEval34CE,basisEval32A8,basisEval328D,basisEval32AA,basisEval328F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3290,basisEval34DF,basisEval34E2,basisEval34E5,basisEval32AD,basisEval3295,basisEval34ED,basisEval34EF,basisEval32B0,basisEval3299,basisEval34F5,basisEval32B2,basisEval329D,basisEval32B4,basisEval329F,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3216,basisEval3503,basisEval3506,basisEval3509,basisEval350C,basisEval350F,basisEval3513,basisEval3515,basisEval3517,basisEval3519,basisEval351B,basisEval351D,basisEval351F,basisEval3521,basisEval3523,basisEval3525,basisEval3527,basisEval3529,basisEval352B,basisEval352D,basisEval352F,basisEval3533];
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval3216,basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval327F,basisEval3223,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval3281,basisEval322E,basisEval3283,basisEval3216,basisEval3538,basisEval32A4,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval3288,basisEval3241,basisEval3289,basisEval328A,basisEval3216,basisEval353D,basisEval34CE,basisEval32CE,basisEval3216,basisEval353F,basisEval32CF,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval3290,basisEval325D,basisEval3291,basisEval3292,basisEval3294,basisEval3216,basisEval3546,basisEval34ED,basisEval3547,basisEval32D5,basisEval3216,basisEval3549,basisEval354A,basisEval32B2,basisEval3216,basisEval354B,basisEval32D7,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3503,basisEval354E,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3216,basisEval3553,basisEval3517,basisEval3554,basisEval3555,basisEval3556,basisEval3216,basisEval3557,basisEval3558,basisEval3523,basisEval3559,basisEval3216,basisEval355A,basisEval355B,basisEval355C,basisEval3216,basisEval355D,basisEval355E,basisEval3216,basisEval355F,basisEval3216];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval3216,basisEval327E,basisEval3216,basisEval3216,basisEval321F,basisEval32A0,basisEval3216,basisEval32C9,basisEval3216,basisEval3216,basisEval32A1,basisEval322E,basisEval32A2,basisEval3216,basisEval3284,basisEval3562,basisEval3216,basisEval32CB,basisEval3216,basisEval3216,basisEval32A5,basisEval32A6,basisEval3244,basisEval32A7,basisEval3216,basisEval32CD,basisEval34CE,basisEval3567,basisEval3216,basisEval32BD,basisEval3569,basisEval3216,basisEval32D0,basisEval3216,basisEval3216,basisEval32AB,basisEval32AC,basisEval3291,basisEval3263,basisEval32AD,basisEval3216,basisEval32D4,basisEval356E,basisEval34EF,basisEval356F,basisEval3216,basisEval3299,basisEval354A,basisEval3570,basisEval3216,basisEval32C6,basisEval3572,basisEval3216,basisEval32D8,basisEval3216,basisEval3216,basisEval3573,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3513,basisEval3216,basisEval3578,basisEval3579,basisEval3554,basisEval351B,basisEval357A,basisEval3216,basisEval357B,basisEval3521,basisEval357C,basisEval357D,basisEval3216,basisEval357E,basisEval355B,basisEval357F,basisEval3216,basisEval3580,basisEval3581,basisEval3216,basisEval355F,basisEval3216,basisEval3216];
          real vdot3679#1 = VDot<84>(dofs30BF,intermediateCons3582);
          real vdot367B#1 = VDot<84>(dofs30BF,intermediateCons3583);
          real vdot367D#1 = VDot<84>(dofs30BF,intermediateCons3584);
          tensor[3] probe_l_153677#3 = <tensor[3]>[vdot3679,vdot367B,vdot367D];
          tensor[3] negV3688#1 = VNeg<3>(v3483);
          tensor[3] negV368A#1 = VNeg<3>(v3486);
          tensor[3] negV368C#1 = VNeg<3>(v3489);
          real vdot3697#1 = VDot<3>(negV3688,probe_l_153677);
          real vdot3699#1 = VDot<3>(negV368A,probe_l_153677);
          real vdot369B#1 = VDot<3>(negV368C,probe_l_153677);
          tensor[3] _t3695#1 = <tensor[3]>[vdot3697,vdot3699,vdot369B];
          goto JOIN36A6
        JOIN36A6:  preds = [ASSIGN36A3,ASSIGN40DD]
          tensor[3] step36A4#5 = phi(_t3695,_t36A5)
          real _t36A7#7 = 0.e0;
          real _t36A9#143 = 0.1e1;
          real _t36AB#1 = 0.15e1;
          real op1_e3_l_736AD#1 = VDot<3>(step36A4,step36A4);
          real op1_e3_l_836B0#3 = Sqrt(op1_e3_l_736AD);
          real op1_e3_l_936B3#1 = Abs<real>(op1_e3_l_836B0);
          real op1_e3_l_1036B6#1 = RDiv(op1_e3_l_936B3,thick247B);
          real op1_e3_l_1136B9#1 = RSub(_t36A9,op1_e3_l_1036B6);
          real op1_e3_l_1236BC#1 = RMul(_t36AB,op1_e3_l_1136B9);
          real op1_e3_l_1336BF#1 = RClamp(_t36A7,_t36A9,op1_e3_l_1236BC);
          real _t36C2#2 = RMul(maxAlpha2483,op1_e3_l_1336BF);
          bool _t36C5#1 = EQ<real>(_t36C2,_t36A7);
          if _t36C5 then goto SAVE36C8 else goto JOIN36CA
        SAVE36C8:  preds = [COND36C7]
          self.rayN = rayN24AB;
          active
          goto JOIN36CA
        JOIN36CA:  preds = [*ACTIVE36C9,COND36C7]
          real _t36D1#1 = RSub(_t36A9,_t36C2);
          real _t36D4#1 = MathFn<pow>(_t36D1,alphaFix249B);
          bool _t36D6#1 = NEQ<real>(phKs24A3,_t36A7);
          if _t36D6 then goto ASSIGN36DB else goto JOIN36FE
        ASSIGN36DB:  preds = [COND36D8]
          tensor[3] op1_e3_l_636D9#3 = VAdd<3>(eyeDir249D,litwsp2493);
          real op1_e3_l_836DC#1 = VDot<3>(op1_e3_l_636D9,op1_e3_l_636D9);
          real op1_e3_l_936DF#1 = Sqrt(op1_e3_l_836DC);
          real op1_e3_l_1236E2#1 = RDiv(_t36A9,op1_e3_l_836B0);
          tensor[3] op1_e3_l_1336E7#1 = VScale<3>(op1_e3_l_1236E2,step36A4);
          tensor[3] op1_e3_l_1436EA#1 = VNeg<3>(op1_e3_l_1336E7);
          real op1_e3_l_1636ED#1 = RDiv(_t36A9,op1_e3_l_936DF);
          real op1_e3_l_1736F2#1 = VDot<3>(op1_e3_l_1436EA,op1_e3_l_636D9);
          real op1_e3_l_1836F5#1 = RMul(op1_e3_l_1636ED,op1_e3_l_1736F2);
          real _t36F8#1 = Abs<real>(op1_e3_l_1836F5);
          real scomp36FB#1 = MathFn<pow>(_t36F8,phSp24A5);
          goto JOIN36FE
        JOIN36FE:  preds = [ASSIGN36FC,COND36D8]
          real scomp36FD#1 = phi(scomp36FB,_t36A7)
          real cmin36FF#3 = VIndex<2,0>(cminmax2489);
          real cmax3701#2 = VIndex<2,1>(cminmax2489);
          tensor[3] mcol3703#1 = <tensor[3]>[_t36A9,_t36A9,_t36A9];
          bool _t3705#1 = NEQ<real>(cmin36FF,cmax3701);
          if _t3705 then goto ASSIGN44D8 else goto JOIN3DEB
        ASSIGN44D8:  preds = [COND3707]
          tensor[3] _t3708#3 = VAdd<3>(pos24B7,step36A4);
          int ilit370E#1 = 84;
          int mulRes370F#84 = IMul(_t246B,ilit370E);
          int idx3712#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,mulRes370F);
          int ilit3713#91 = 1;
          int addRes3714#1 = IAdd(mulRes370F,ilit3713);
          int idx3715#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3714);
          int ilit3716#5 = 2;
          int addRes3717#1 = IAdd(mulRes370F,ilit3716);
          int idx3718#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3717);
          int ilit3719#5 = 3;
          int addRes371A#1 = IAdd(mulRes370F,ilit3719);
          int idx371B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371A);
          int ilit371C#1 = 4;
          int addRes371D#1 = IAdd(mulRes370F,ilit371C);
          int idx371E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes371D);
          int ilit371F#1 = 5;
          int addRes3720#1 = IAdd(mulRes370F,ilit371F);
          int idx3721#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3720);
          int ilit3722#1 = 6;
          int addRes3723#1 = IAdd(mulRes370F,ilit3722);
          int idx3724#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3723);
          int ilit3725#1 = 7;
          int addRes3726#1 = IAdd(mulRes370F,ilit3725);
          int idx3727#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3726);
          int ilit3728#1 = 8;
          int addRes3729#1 = IAdd(mulRes370F,ilit3728);
          int idx372A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3729);
          int ilit372B#1 = 9;
          int addRes372C#1 = IAdd(mulRes370F,ilit372B);
          int idx372D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372C);
          int ilit372E#1 = 10;
          int addRes372F#1 = IAdd(mulRes370F,ilit372E);
          int idx3730#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes372F);
          int ilit3731#1 = 11;
          int addRes3732#1 = IAdd(mulRes370F,ilit3731);
          int idx3733#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3732);
          int ilit3734#1 = 12;
          int addRes3735#1 = IAdd(mulRes370F,ilit3734);
          int idx3736#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3735);
          int ilit3737#1 = 13;
          int addRes3738#1 = IAdd(mulRes370F,ilit3737);
          int idx3739#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3738);
          int ilit373A#1 = 14;
          int addRes373B#1 = IAdd(mulRes370F,ilit373A);
          int idx373C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373B);
          int ilit373D#1 = 15;
          int addRes373E#1 = IAdd(mulRes370F,ilit373D);
          int idx373F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes373E);
          int ilit3740#1 = 16;
          int addRes3741#1 = IAdd(mulRes370F,ilit3740);
          int idx3742#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3741);
          int ilit3743#1 = 17;
          int addRes3744#1 = IAdd(mulRes370F,ilit3743);
          int idx3745#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3744);
          int ilit3746#1 = 18;
          int addRes3747#1 = IAdd(mulRes370F,ilit3746);
          int idx3748#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3747);
          int ilit3749#1 = 19;
          int addRes374A#1 = IAdd(mulRes370F,ilit3749);
          int idx374B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374A);
          int ilit374C#1 = 20;
          int addRes374D#1 = IAdd(mulRes370F,ilit374C);
          int idx374E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes374D);
          int ilit374F#1 = 21;
          int addRes3750#1 = IAdd(mulRes370F,ilit374F);
          int idx3751#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3750);
          int ilit3752#1 = 22;
          int addRes3753#1 = IAdd(mulRes370F,ilit3752);
          int idx3754#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3753);
          int ilit3755#1 = 23;
          int addRes3756#1 = IAdd(mulRes370F,ilit3755);
          int idx3757#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3756);
          int ilit3758#1 = 24;
          int addRes3759#1 = IAdd(mulRes370F,ilit3758);
          int idx375A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3759);
          int ilit375B#1 = 25;
          int addRes375C#1 = IAdd(mulRes370F,ilit375B);
          int idx375D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375C);
          int ilit375E#1 = 26;
          int addRes375F#1 = IAdd(mulRes370F,ilit375E);
          int idx3760#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes375F);
          int ilit3761#1 = 27;
          int addRes3762#1 = IAdd(mulRes370F,ilit3761);
          int idx3763#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3762);
          int ilit3764#1 = 28;
          int addRes3765#1 = IAdd(mulRes370F,ilit3764);
          int idx3766#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3765);
          int ilit3767#1 = 29;
          int addRes3768#1 = IAdd(mulRes370F,ilit3767);
          int idx3769#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3768);
          int ilit376A#1 = 30;
          int addRes376B#1 = IAdd(mulRes370F,ilit376A);
          int idx376C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376B);
          int ilit376D#1 = 31;
          int addRes376E#1 = IAdd(mulRes370F,ilit376D);
          int idx376F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes376E);
          int ilit3770#1 = 32;
          int addRes3771#1 = IAdd(mulRes370F,ilit3770);
          int idx3772#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3771);
          int ilit3773#1 = 33;
          int addRes3774#1 = IAdd(mulRes370F,ilit3773);
          int idx3775#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3774);
          int ilit3776#1 = 34;
          int addRes3777#1 = IAdd(mulRes370F,ilit3776);
          int idx3778#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3777);
          int ilit3779#1 = 35;
          int addRes377A#1 = IAdd(mulRes370F,ilit3779);
          int idx377B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377A);
          int ilit377C#1 = 36;
          int addRes377D#1 = IAdd(mulRes370F,ilit377C);
          int idx377E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes377D);
          int ilit377F#1 = 37;
          int addRes3780#1 = IAdd(mulRes370F,ilit377F);
          int idx3781#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3780);
          int ilit3782#1 = 38;
          int addRes3783#1 = IAdd(mulRes370F,ilit3782);
          int idx3784#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3783);
          int ilit3785#1 = 39;
          int addRes3786#1 = IAdd(mulRes370F,ilit3785);
          int idx3787#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3786);
          int ilit3788#1 = 40;
          int addRes3789#1 = IAdd(mulRes370F,ilit3788);
          int idx378A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3789);
          int ilit378B#1 = 41;
          int addRes378C#1 = IAdd(mulRes370F,ilit378B);
          int idx378D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378C);
          int ilit378E#1 = 42;
          int addRes378F#1 = IAdd(mulRes370F,ilit378E);
          int idx3790#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes378F);
          int ilit3791#1 = 43;
          int addRes3792#1 = IAdd(mulRes370F,ilit3791);
          int idx3793#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3792);
          int ilit3794#1 = 44;
          int addRes3795#1 = IAdd(mulRes370F,ilit3794);
          int idx3796#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3795);
          int ilit3797#1 = 45;
          int addRes3798#1 = IAdd(mulRes370F,ilit3797);
          int idx3799#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3798);
          int ilit379A#1 = 46;
          int addRes379B#1 = IAdd(mulRes370F,ilit379A);
          int idx379C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379B);
          int ilit379D#1 = 47;
          int addRes379E#1 = IAdd(mulRes370F,ilit379D);
          int idx379F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes379E);
          int ilit37A0#1 = 48;
          int addRes37A1#1 = IAdd(mulRes370F,ilit37A0);
          int idx37A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A1);
          int ilit37A3#1 = 49;
          int addRes37A4#1 = IAdd(mulRes370F,ilit37A3);
          int idx37A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A4);
          int ilit37A6#1 = 50;
          int addRes37A7#1 = IAdd(mulRes370F,ilit37A6);
          int idx37A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37A7);
          int ilit37A9#1 = 51;
          int addRes37AA#1 = IAdd(mulRes370F,ilit37A9);
          int idx37AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AA);
          int ilit37AC#1 = 52;
          int addRes37AD#1 = IAdd(mulRes370F,ilit37AC);
          int idx37AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37AD);
          int ilit37AF#1 = 53;
          int addRes37B0#1 = IAdd(mulRes370F,ilit37AF);
          int idx37B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B0);
          int ilit37B2#1 = 54;
          int addRes37B3#1 = IAdd(mulRes370F,ilit37B2);
          int idx37B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B3);
          int ilit37B5#1 = 55;
          int addRes37B6#1 = IAdd(mulRes370F,ilit37B5);
          int idx37B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B6);
          int ilit37B8#1 = 56;
          int addRes37B9#1 = IAdd(mulRes370F,ilit37B8);
          int idx37BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37B9);
          int ilit37BB#1 = 57;
          int addRes37BC#1 = IAdd(mulRes370F,ilit37BB);
          int idx37BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BC);
          int ilit37BE#1 = 58;
          int addRes37BF#1 = IAdd(mulRes370F,ilit37BE);
          int idx37C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37BF);
          int ilit37C1#1 = 59;
          int addRes37C2#1 = IAdd(mulRes370F,ilit37C1);
          int idx37C3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C2);
          int ilit37C4#1 = 60;
          int addRes37C5#1 = IAdd(mulRes370F,ilit37C4);
          int idx37C6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C5);
          int ilit37C7#1 = 61;
          int addRes37C8#1 = IAdd(mulRes370F,ilit37C7);
          int idx37C9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37C8);
          int ilit37CA#1 = 62;
          int addRes37CB#1 = IAdd(mulRes370F,ilit37CA);
          int idx37CC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CB);
          int ilit37CD#1 = 63;
          int addRes37CE#1 = IAdd(mulRes370F,ilit37CD);
          int idx37CF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37CE);
          int ilit37D0#1 = 64;
          int addRes37D1#1 = IAdd(mulRes370F,ilit37D0);
          int idx37D2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D1);
          int ilit37D3#1 = 65;
          int addRes37D4#1 = IAdd(mulRes370F,ilit37D3);
          int idx37D5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D4);
          int ilit37D6#1 = 66;
          int addRes37D7#1 = IAdd(mulRes370F,ilit37D6);
          int idx37D8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37D7);
          int ilit37D9#1 = 67;
          int addRes37DA#1 = IAdd(mulRes370F,ilit37D9);
          int idx37DB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DA);
          int ilit37DC#1 = 68;
          int addRes37DD#1 = IAdd(mulRes370F,ilit37DC);
          int idx37DE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37DD);
          int ilit37DF#1 = 69;
          int addRes37E0#1 = IAdd(mulRes370F,ilit37DF);
          int idx37E1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E0);
          int ilit37E2#1 = 70;
          int addRes37E3#1 = IAdd(mulRes370F,ilit37E2);
          int idx37E4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E3);
          int ilit37E5#1 = 71;
          int addRes37E6#1 = IAdd(mulRes370F,ilit37E5);
          int idx37E7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E6);
          int ilit37E8#1 = 72;
          int addRes37E9#1 = IAdd(mulRes370F,ilit37E8);
          int idx37EA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37E9);
          int ilit37EB#1 = 73;
          int addRes37EC#1 = IAdd(mulRes370F,ilit37EB);
          int idx37ED#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EC);
          int ilit37EE#1 = 74;
          int addRes37EF#1 = IAdd(mulRes370F,ilit37EE);
          int idx37F0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37EF);
          int ilit37F1#1 = 75;
          int addRes37F2#1 = IAdd(mulRes370F,ilit37F1);
          int idx37F3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F2);
          int ilit37F4#1 = 76;
          int addRes37F5#1 = IAdd(mulRes370F,ilit37F4);
          int idx37F6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F5);
          int ilit37F7#1 = 77;
          int addRes37F8#1 = IAdd(mulRes370F,ilit37F7);
          int idx37F9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37F8);
          int ilit37FA#1 = 78;
          int addRes37FB#1 = IAdd(mulRes370F,ilit37FA);
          int idx37FC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FB);
          int ilit37FD#1 = 79;
          int addRes37FE#1 = IAdd(mulRes370F,ilit37FD);
          int idx37FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes37FE);
          int ilit3800#1 = 80;
          int addRes3801#1 = IAdd(mulRes370F,ilit3800);
          int idx3802#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3801);
          int ilit3803#1 = 81;
          int addRes3804#1 = IAdd(mulRes370F,ilit3803);
          int idx3805#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3804);
          int ilit3806#1 = 82;
          int addRes3807#1 = IAdd(mulRes370F,ilit3806);
          int idx3808#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes3807);
          int ilit3809#1 = 83;
          int addRes380A#1 = IAdd(mulRes370F,ilit3809);
          int idx380B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246D,addRes380A);
          int mulRes3911#1 = IMul(ilit3713,idx3712);
          int mulRes3913#1 = IMul(ilit3713,idx3715);
          int mulRes3916#1 = IMul(ilit3713,idx3718);
          int mulRes3919#1 = IMul(ilit3713,idx371B);
          int mulRes391C#1 = IMul(ilit3713,idx371E);
          int mulRes391F#1 = IMul(ilit3713,idx3721);
          int mulRes3922#1 = IMul(ilit3713,idx3724);
          int mulRes3925#1 = IMul(ilit3713,idx3727);
          int mulRes3928#1 = IMul(ilit3713,idx372A);
          int mulRes392B#1 = IMul(ilit3713,idx372D);
          int mulRes392E#1 = IMul(ilit3713,idx3730);
          int mulRes3931#1 = IMul(ilit3713,idx3733);
          int mulRes3934#1 = IMul(ilit3713,idx3736);
          int mulRes3937#1 = IMul(ilit3713,idx3739);
          int mulRes393A#1 = IMul(ilit3713,idx373C);
          int mulRes393D#1 = IMul(ilit3713,idx373F);
          int mulRes3940#1 = IMul(ilit3713,idx3742);
          int mulRes3943#1 = IMul(ilit3713,idx3745);
          int mulRes3946#1 = IMul(ilit3713,idx3748);
          int mulRes3949#1 = IMul(ilit3713,idx374B);
          int mulRes394C#1 = IMul(ilit3713,idx374E);
          int mulRes394F#1 = IMul(ilit3713,idx3751);
          int mulRes3952#1 = IMul(ilit3713,idx3754);
          int mulRes3955#1 = IMul(ilit3713,idx3757);
          int mulRes3958#1 = IMul(ilit3713,idx375A);
          int mulRes395B#1 = IMul(ilit3713,idx375D);
          int mulRes395E#1 = IMul(ilit3713,idx3760);
          int mulRes3961#1 = IMul(ilit3713,idx3763);
          int mulRes3964#1 = IMul(ilit3713,idx3766);
          int mulRes3967#1 = IMul(ilit3713,idx3769);
          int mulRes396A#1 = IMul(ilit3713,idx376C);
          int mulRes396D#1 = IMul(ilit3713,idx376F);
          int mulRes3970#1 = IMul(ilit3713,idx3772);
          int mulRes3973#1 = IMul(ilit3713,idx3775);
          int mulRes3976#1 = IMul(ilit3713,idx3778);
          int mulRes3979#1 = IMul(ilit3713,idx377B);
          int mulRes397C#1 = IMul(ilit3713,idx377E);
          int mulRes397F#1 = IMul(ilit3713,idx3781);
          int mulRes3982#1 = IMul(ilit3713,idx3784);
          int mulRes3985#1 = IMul(ilit3713,idx3787);
          int mulRes3988#1 = IMul(ilit3713,idx378A);
          int mulRes398B#1 = IMul(ilit3713,idx378D);
          int mulRes398E#1 = IMul(ilit3713,idx3790);
          int mulRes3991#1 = IMul(ilit3713,idx3793);
          int mulRes3994#1 = IMul(ilit3713,idx3796);
          int mulRes3997#1 = IMul(ilit3713,idx3799);
          int mulRes399A#1 = IMul(ilit3713,idx379C);
          int mulRes399D#1 = IMul(ilit3713,idx379F);
          int mulRes39A0#1 = IMul(ilit3713,idx37A2);
          int mulRes39A3#1 = IMul(ilit3713,idx37A5);
          int mulRes39A6#1 = IMul(ilit3713,idx37A8);
          int mulRes39A9#1 = IMul(ilit3713,idx37AB);
          int mulRes39AC#1 = IMul(ilit3713,idx37AE);
          int mulRes39AF#1 = IMul(ilit3713,idx37B1);
          int mulRes39B2#1 = IMul(ilit3713,idx37B4);
          int mulRes39B5#1 = IMul(ilit3713,idx37B7);
          int mulRes39B8#1 = IMul(ilit3713,idx37BA);
          int mulRes39BB#1 = IMul(ilit3713,idx37BD);
          int mulRes39BE#1 = IMul(ilit3713,idx37C0);
          int mulRes39C1#1 = IMul(ilit3713,idx37C3);
          int mulRes39C4#1 = IMul(ilit3713,idx37C6);
          int mulRes39C7#1 = IMul(ilit3713,idx37C9);
          int mulRes39CA#1 = IMul(ilit3713,idx37CC);
          int mulRes39CD#1 = IMul(ilit3713,idx37CF);
          int mulRes39D0#1 = IMul(ilit3713,idx37D2);
          int mulRes39D3#1 = IMul(ilit3713,idx37D5);
          int mulRes39D6#1 = IMul(ilit3713,idx37D8);
          int mulRes39D9#1 = IMul(ilit3713,idx37DB);
          int mulRes39DC#1 = IMul(ilit3713,idx37DE);
          int mulRes39DF#1 = IMul(ilit3713,idx37E1);
          int mulRes39E2#1 = IMul(ilit3713,idx37E4);
          int mulRes39E5#1 = IMul(ilit3713,idx37E7);
          int mulRes39E8#1 = IMul(ilit3713,idx37EA);
          int mulRes39EB#1 = IMul(ilit3713,idx37ED);
          int mulRes39EE#1 = IMul(ilit3713,idx37F0);
          int mulRes39F1#1 = IMul(ilit3713,idx37F3);
          int mulRes39F4#1 = IMul(ilit3713,idx37F6);
          int mulRes39F7#1 = IMul(ilit3713,idx37F9);
          int mulRes39FA#1 = IMul(ilit3713,idx37FC);
          int mulRes39FD#1 = IMul(ilit3713,idx37FF);
          int mulRes3A00#1 = IMul(ilit3713,idx3802);
          int mulRes3A03#1 = IMul(ilit3713,idx3805);
          int mulRes3A06#1 = IMul(ilit3713,idx3808);
          int mulRes3A09#1 = IMul(ilit3713,idx380B);
          real dof3A0A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3911);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3913);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3916);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3919);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391C);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes391F);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3922);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3925);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3928);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392B);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes392E);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3931);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3934);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3937);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393A);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes393D);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3940);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3943);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3946);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3949);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394C);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes394F);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3952);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3955);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3958);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395B);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes395E);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3961);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3964);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3967);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396A);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes396D);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3970);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3973);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3976);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3979);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397C);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes397F);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3982);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3985);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3988);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398B);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes398E);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3991);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3994);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3997);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399A);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes399D);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A0);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A3);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A6);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39A9);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AC);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39AF);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B2);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B5);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39B8);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BB);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39BE);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C1);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C4);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39C7);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CA);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39CD);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D0);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D3);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D6);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39D9);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DC);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39DF);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E2);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E5);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39E8);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EB);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39EE);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F1);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F4);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39F7);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FA);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes39FD);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A00);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A03);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A06);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t246F,mulRes3A09);
          tensor[84] dofs3A5E#1 = <tensor[84]>[dof3A0A,dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D];
          real varAcc3BB2#27 = VIndex<3,0>(_t3708);
          real varAcc3BB3#12 = VIndex<3,1>(_t3708);
          real varAcc3BB4#12 = VIndex<3,2>(_t3708);
          real prod3BB6#7 = RMul(_t36A9,_t36A9);
          real prod3BB7#1 = RMul(_t36A9,prod3BB6);
          real basisEval3BB8#1 = RMul(_t36A9,prod3BB7);
          real prod3BBA#6 = RMul(_t36A9,varAcc3BB4);
          real prod3BBB#1 = RMul(_t36A9,prod3BBA);
          real basisEval3BBC#1 = RMul(_t36A9,prod3BBB);
          real prod3BBE#6 = RMul(varAcc3BB3,_t36A9);
          real prod3BBF#1 = RMul(_t36A9,prod3BBE);
          real basisEval3BC0#1 = RMul(_t36A9,prod3BBF);
          real prod3BC2#1 = RMul(varAcc3BB2,prod3BB6);
          real basisEval3BC3#1 = RMul(_t36A9,prod3BC2);
          real prod23BC4#6 = RMul(varAcc3BB4,varAcc3BB4);
          real prod3BC5#5 = RMul(_t36A9,prod23BC4);
          real prod3BC6#1 = RMul(_t36A9,prod3BC5);
          real basisEval3BC7#1 = RMul(_t36A9,prod3BC6);
          real prod3BC8#5 = RMul(varAcc3BB3,varAcc3BB4);
          real prod3BC9#1 = RMul(_t36A9,prod3BC8);
          real basisEval3BCA#1 = RMul(_t36A9,prod3BC9);
          real prod23BCB#6 = RMul(varAcc3BB3,varAcc3BB3);
          real prod3BCC#5 = RMul(prod23BCB,_t36A9);
          real prod3BCD#1 = RMul(_t36A9,prod3BCC);
          real basisEval3BCE#1 = RMul(_t36A9,prod3BCD);
          real prod3BCF#1 = RMul(varAcc3BB2,prod3BBA);
          real basisEval3BD0#1 = RMul(_t36A9,prod3BCF);
          real prod3BD1#1 = RMul(varAcc3BB2,prod3BBE);
          real basisEval3BD2#1 = RMul(_t36A9,prod3BD1);
          real prod23BD3#16 = RMul(varAcc3BB2,varAcc3BB2);
          real prod3BD4#1 = RMul(prod23BD3,prod3BB6);
          real basisEval3BD5#1 = RMul(_t36A9,prod3BD4);
          real prod33BD6#5 = RMul(prod23BC4,varAcc3BB4);
          real prod3BD7#4 = RMul(_t36A9,prod33BD6);
          real prod3BD8#1 = RMul(_t36A9,prod3BD7);
          real basisEval3BD9#1 = RMul(_t36A9,prod3BD8);
          real prod3BDA#4 = RMul(varAcc3BB3,prod23BC4);
          real prod3BDB#1 = RMul(_t36A9,prod3BDA);
          real basisEval3BDC#1 = RMul(_t36A9,prod3BDB);
          real prod3BDD#4 = RMul(prod23BCB,varAcc3BB4);
          real prod3BDE#1 = RMul(_t36A9,prod3BDD);
          real basisEval3BDF#1 = RMul(_t36A9,prod3BDE);
          real prod33BE0#5 = RMul(prod23BCB,varAcc3BB3);
          real prod3BE1#4 = RMul(prod33BE0,_t36A9);
          real prod3BE2#1 = RMul(_t36A9,prod3BE1);
          real basisEval3BE3#1 = RMul(_t36A9,prod3BE2);
          real prod3BE4#1 = RMul(varAcc3BB2,prod3BC5);
          real basisEval3BE5#1 = RMul(_t36A9,prod3BE4);
          real prod3BE6#1 = RMul(varAcc3BB2,prod3BC8);
          real basisEval3BE7#1 = RMul(_t36A9,prod3BE6);
          real prod3BE8#1 = RMul(varAcc3BB2,prod3BCC);
          real basisEval3BE9#1 = RMul(_t36A9,prod3BE8);
          real prod3BEA#1 = RMul(prod23BD3,prod3BBA);
          real basisEval3BEB#1 = RMul(_t36A9,prod3BEA);
          real prod3BEC#1 = RMul(prod23BD3,prod3BBE);
          real basisEval3BED#1 = RMul(_t36A9,prod3BEC);
          real prod33BEE#11 = RMul(prod23BD3,varAcc3BB2);
          real prod3BEF#1 = RMul(prod33BEE,prod3BB6);
          real basisEval3BF0#1 = RMul(_t36A9,prod3BEF);
          real prod43BF1#4 = RMul(prod33BD6,varAcc3BB4);
          real prod3BF2#3 = RMul(_t36A9,prod43BF1);
          real prod3BF3#1 = RMul(_t36A9,prod3BF2);
          real basisEval3BF4#1 = RMul(_t36A9,prod3BF3);
          real prod3BF5#3 = RMul(varAcc3BB3,prod33BD6);
          real prod3BF6#1 = RMul(_t36A9,prod3BF5);
          real basisEval3BF7#1 = RMul(_t36A9,prod3BF6);
          real prod3BF8#3 = RMul(prod23BCB,prod23BC4);
          real prod3BF9#1 = RMul(_t36A9,prod3BF8);
          real basisEval3BFA#1 = RMul(_t36A9,prod3BF9);
          real prod3BFB#3 = RMul(prod33BE0,varAcc3BB4);
          real prod3BFC#1 = RMul(_t36A9,prod3BFB);
          real basisEval3BFD#1 = RMul(_t36A9,prod3BFC);
          real prod43BFE#4 = RMul(prod33BE0,varAcc3BB3);
          real prod3BFF#3 = RMul(prod43BFE,_t36A9);
          real prod3C00#1 = RMul(_t36A9,prod3BFF);
          real basisEval3C01#1 = RMul(_t36A9,prod3C00);
          real prod3C02#1 = RMul(varAcc3BB2,prod3BD7);
          real basisEval3C03#1 = RMul(_t36A9,prod3C02);
          real prod3C04#1 = RMul(varAcc3BB2,prod3BDA);
          real basisEval3C05#1 = RMul(_t36A9,prod3C04);
          real prod3C06#1 = RMul(varAcc3BB2,prod3BDD);
          real basisEval3C07#1 = RMul(_t36A9,prod3C06);
          real prod3C08#1 = RMul(varAcc3BB2,prod3BE1);
          real basisEval3C09#1 = RMul(_t36A9,prod3C08);
          real prod3C0A#1 = RMul(prod23BD3,prod3BC5);
          real basisEval3C0B#1 = RMul(_t36A9,prod3C0A);
          real prod3C0C#1 = RMul(prod23BD3,prod3BC8);
          real basisEval3C0D#1 = RMul(_t36A9,prod3C0C);
          real prod3C0E#1 = RMul(prod23BD3,prod3BCC);
          real basisEval3C0F#1 = RMul(_t36A9,prod3C0E);
          real prod3C10#1 = RMul(prod33BEE,prod3BBA);
          real basisEval3C11#1 = RMul(_t36A9,prod3C10);
          real prod3C12#1 = RMul(prod33BEE,prod3BBE);
          real basisEval3C13#1 = RMul(_t36A9,prod3C12);
          real prod43C14#7 = RMul(prod33BEE,varAcc3BB2);
          real prod3C15#1 = RMul(prod43C14,prod3BB6);
          real basisEval3C16#1 = RMul(_t36A9,prod3C15);
          real prod53C17#3 = RMul(prod43BF1,varAcc3BB4);
          real prod3C18#2 = RMul(_t36A9,prod53C17);
          real prod3C19#1 = RMul(_t36A9,prod3C18);
          real basisEval3C1A#1 = RMul(_t36A9,prod3C19);
          real prod3C1B#2 = RMul(varAcc3BB3,prod43BF1);
          real prod3C1C#1 = RMul(_t36A9,prod3C1B);
          real basisEval3C1D#1 = RMul(_t36A9,prod3C1C);
          real prod3C1E#2 = RMul(prod23BCB,prod33BD6);
          real prod3C1F#1 = RMul(_t36A9,prod3C1E);
          real basisEval3C20#1 = RMul(_t36A9,prod3C1F);
          real prod3C21#2 = RMul(prod33BE0,prod23BC4);
          real prod3C22#1 = RMul(_t36A9,prod3C21);
          real basisEval3C23#1 = RMul(_t36A9,prod3C22);
          real prod3C24#2 = RMul(prod43BFE,varAcc3BB4);
          real prod3C25#1 = RMul(_t36A9,prod3C24);
          real basisEval3C26#1 = RMul(_t36A9,prod3C25);
          real prod53C27#3 = RMul(prod43BFE,varAcc3BB3);
          real prod3C28#2 = RMul(prod53C27,_t36A9);
          real prod3C29#1 = RMul(_t36A9,prod3C28);
          real basisEval3C2A#1 = RMul(_t36A9,prod3C29);
          real prod3C2B#1 = RMul(varAcc3BB2,prod3BF2);
          real basisEval3C2C#1 = RMul(_t36A9,prod3C2B);
          real prod3C2D#1 = RMul(varAcc3BB2,prod3BF5);
          real basisEval3C2E#1 = RMul(_t36A9,prod3C2D);
          real prod3C2F#1 = RMul(varAcc3BB2,prod3BF8);
          real basisEval3C30#1 = RMul(_t36A9,prod3C2F);
          real prod3C31#1 = RMul(varAcc3BB2,prod3BFB);
          real basisEval3C32#1 = RMul(_t36A9,prod3C31);
          real prod3C33#1 = RMul(varAcc3BB2,prod3BFF);
          real basisEval3C34#1 = RMul(_t36A9,prod3C33);
          real prod3C35#1 = RMul(prod23BD3,prod3BD7);
          real basisEval3C36#1 = RMul(_t36A9,prod3C35);
          real prod3C37#1 = RMul(prod23BD3,prod3BDA);
          real basisEval3C38#1 = RMul(_t36A9,prod3C37);
          real prod3C39#1 = RMul(prod23BD3,prod3BDD);
          real basisEval3C3A#1 = RMul(_t36A9,prod3C39);
          real prod3C3B#1 = RMul(prod23BD3,prod3BE1);
          real basisEval3C3C#1 = RMul(_t36A9,prod3C3B);
          real prod3C3D#1 = RMul(prod33BEE,prod3BC5);
          real basisEval3C3E#1 = RMul(_t36A9,prod3C3D);
          real prod3C3F#1 = RMul(prod33BEE,prod3BC8);
          real basisEval3C40#1 = RMul(_t36A9,prod3C3F);
          real prod3C41#1 = RMul(prod33BEE,prod3BCC);
          real basisEval3C42#1 = RMul(_t36A9,prod3C41);
          real prod3C43#1 = RMul(prod43C14,prod3BBA);
          real basisEval3C44#1 = RMul(_t36A9,prod3C43);
          real prod3C45#1 = RMul(prod43C14,prod3BBE);
          real basisEval3C46#1 = RMul(_t36A9,prod3C45);
          real prod53C47#4 = RMul(prod43C14,varAcc3BB2);
          real prod3C48#1 = RMul(prod53C47,prod3BB6);
          real basisEval3C49#1 = RMul(_t36A9,prod3C48);
          real prod63C4A#1 = RMul(prod53C17,varAcc3BB4);
          real prod3C4B#1 = RMul(_t36A9,prod63C4A);
          real prod3C4C#1 = RMul(_t36A9,prod3C4B);
          real basisEval3C4D#1 = RMul(_t36A9,prod3C4C);
          real prod3C4E#1 = RMul(varAcc3BB3,prod53C17);
          real prod3C4F#1 = RMul(_t36A9,prod3C4E);
          real basisEval3C50#1 = RMul(_t36A9,prod3C4F);
          real prod3C51#1 = RMul(prod23BCB,prod43BF1);
          real prod3C52#1 = RMul(_t36A9,prod3C51);
          real basisEval3C53#1 = RMul(_t36A9,prod3C52);
          real prod3C54#1 = RMul(prod33BE0,prod33BD6);
          real prod3C55#1 = RMul(_t36A9,prod3C54);
          real basisEval3C56#1 = RMul(_t36A9,prod3C55);
          real prod3C57#1 = RMul(prod43BFE,prod23BC4);
          real prod3C58#1 = RMul(_t36A9,prod3C57);
          real basisEval3C59#1 = RMul(_t36A9,prod3C58);
          real prod3C5A#1 = RMul(prod53C27,varAcc3BB4);
          real prod3C5B#1 = RMul(_t36A9,prod3C5A);
          real basisEval3C5C#1 = RMul(_t36A9,prod3C5B);
          real prod63C5D#1 = RMul(prod53C27,varAcc3BB3);
          real prod3C5E#1 = RMul(prod63C5D,_t36A9);
          real prod3C5F#1 = RMul(_t36A9,prod3C5E);
          real basisEval3C60#1 = RMul(_t36A9,prod3C5F);
          real prod3C61#1 = RMul(varAcc3BB2,prod3C18);
          real basisEval3C62#1 = RMul(_t36A9,prod3C61);
          real prod3C63#1 = RMul(varAcc3BB2,prod3C1B);
          real basisEval3C64#1 = RMul(_t36A9,prod3C63);
          real prod3C65#1 = RMul(varAcc3BB2,prod3C1E);
          real basisEval3C66#1 = RMul(_t36A9,prod3C65);
          real prod3C67#1 = RMul(varAcc3BB2,prod3C21);
          real basisEval3C68#1 = RMul(_t36A9,prod3C67);
          real prod3C69#1 = RMul(varAcc3BB2,prod3C24);
          real basisEval3C6A#1 = RMul(_t36A9,prod3C69);
          real prod3C6B#1 = RMul(varAcc3BB2,prod3C28);
          real basisEval3C6C#1 = RMul(_t36A9,prod3C6B);
          real prod3C6D#1 = RMul(prod23BD3,prod3BF2);
          real basisEval3C6E#1 = RMul(_t36A9,prod3C6D);
          real prod3C6F#1 = RMul(prod23BD3,prod3BF5);
          real basisEval3C70#1 = RMul(_t36A9,prod3C6F);
          real prod3C71#1 = RMul(prod23BD3,prod3BF8);
          real basisEval3C72#1 = RMul(_t36A9,prod3C71);
          real prod3C73#1 = RMul(prod23BD3,prod3BFB);
          real basisEval3C74#1 = RMul(_t36A9,prod3C73);
          real prod3C75#1 = RMul(prod23BD3,prod3BFF);
          real basisEval3C76#1 = RMul(_t36A9,prod3C75);
          real prod3C77#1 = RMul(prod33BEE,prod3BD7);
          real basisEval3C78#1 = RMul(_t36A9,prod3C77);
          real prod3C79#1 = RMul(prod33BEE,prod3BDA);
          real basisEval3C7A#1 = RMul(_t36A9,prod3C79);
          real prod3C7B#1 = RMul(prod33BEE,prod3BDD);
          real basisEval3C7C#1 = RMul(_t36A9,prod3C7B);
          real prod3C7D#1 = RMul(prod33BEE,prod3BE1);
          real basisEval3C7E#1 = RMul(_t36A9,prod3C7D);
          real prod3C7F#1 = RMul(prod43C14,prod3BC5);
          real basisEval3C80#1 = RMul(_t36A9,prod3C7F);
          real prod3C81#1 = RMul(prod43C14,prod3BC8);
          real basisEval3C82#1 = RMul(_t36A9,prod3C81);
          real prod3C83#1 = RMul(prod43C14,prod3BCC);
          real basisEval3C84#1 = RMul(_t36A9,prod3C83);
          real prod3C85#1 = RMul(prod53C47,prod3BBA);
          real basisEval3C86#1 = RMul(_t36A9,prod3C85);
          real prod3C87#1 = RMul(prod53C47,prod3BBE);
          real basisEval3C88#1 = RMul(_t36A9,prod3C87);
          real prod63C89#1 = RMul(prod53C47,varAcc3BB2);
          real prod3C8A#1 = RMul(prod63C89,prod3BB6);
          real basisEval3C8B#1 = RMul(_t36A9,prod3C8A);
          tensor[84] intermediateCons3C8C#1 = <tensor[84]>[basisEval3BB8,basisEval3BBC,basisEval3BC0,basisEval3BC3,basisEval3BC7,basisEval3BCA,basisEval3BCE,basisEval3BD0,basisEval3BD2,basisEval3BD5,basisEval3BD9,basisEval3BDC,basisEval3BDF,basisEval3BE3,basisEval3BE5,basisEval3BE7,basisEval3BE9,basisEval3BEB,basisEval3BED,basisEval3BF0,basisEval3BF4,basisEval3BF7,basisEval3BFA,basisEval3BFD,basisEval3C01,basisEval3C03,basisEval3C05,basisEval3C07,basisEval3C09,basisEval3C0B,basisEval3C0D,basisEval3C0F,basisEval3C11,basisEval3C13,basisEval3C16,basisEval3C1A,basisEval3C1D,basisEval3C20,basisEval3C23,basisEval3C26,basisEval3C2A,basisEval3C2C,basisEval3C2E,basisEval3C30,basisEval3C32,basisEval3C34,basisEval3C36,basisEval3C38,basisEval3C3A,basisEval3C3C,basisEval3C3E,basisEval3C40,basisEval3C42,basisEval3C44,basisEval3C46,basisEval3C49,basisEval3C4D,basisEval3C50,basisEval3C53,basisEval3C56,basisEval3C59,basisEval3C5C,basisEval3C60,basisEval3C62,basisEval3C64,basisEval3C66,basisEval3C68,basisEval3C6A,basisEval3C6C,basisEval3C6E,basisEval3C70,basisEval3C72,basisEval3C74,basisEval3C76,basisEval3C78,basisEval3C7A,basisEval3C7C,basisEval3C7E,basisEval3C80,basisEval3C82,basisEval3C84,basisEval3C86,basisEval3C88,basisEval3C8B];
          real probe_l_83D69#1 = VDot<84>(dofs3A5E,intermediateCons3C8C);
          real op1_e3_l_93D6C#1 = RSub(probe_l_83D69,cmin36FF);
          real op1_e3_l_103D6F#1 = RSub(cmax3701,cmin36FF);
          real op1_e3_l_113D72#1 = RDiv(op1_e3_l_93D6C,op1_e3_l_103D6F);
          real op1_e3_l_123D75#1 = RSub(_t36A9,_t36A7);
          real op1_e3_l_133D78#1 = RMul(op1_e3_l_113D72,op1_e3_l_123D75);
          real _t3D7B#1 = RAdd(_t36A7,op1_e3_l_133D78);
          real Mtransform3D7E#1 = Transform<IMAGE1D<double[3]>>(cmap2469);
          real MxPos3D80#1 = RMul(Mtransform3D7E,_t3D7B);
          real Ttranslate3D83#1 = Translate<IMAGE1D<double[3]>>(cmap2469);
          real imgPos3D85#2 = RAdd(MxPos3D80,Ttranslate3D83);
          real nd3D88#2 = Floor<1>(imgPos3D85);
          real f3D8A#2 = RSub(imgPos3D85,nd3D88);
          int n3D8D#5 = RealToInt<1>(nd3D88);
          bool isInside3D91#1 = IndexInside<IMAGE1D<double[3]>,2>(n3D8D,cmap2469);
          if isInside3D91 then goto ASSIGN45D6 else goto ASSIGN45CE
        ASSIGN45D6:  preds = [COND3D93]
          int offp3D98#3 = IMul(ilit3719,n3D8D);
          real v0_3D99#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D98);
          int addRes3D9B#1 = IAdd(n3D8D,ilit3713);
          int offp3D9C#3 = IMul(ilit3719,addRes3D9B);
          real v1_3D9D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9C);
          int offp3D9F#1 = IAdd(offp3D98,ilit3713);
          real v0_3DA0#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3D9F);
          int offp3DA1#1 = IAdd(offp3D9C,ilit3713);
          real v1_3DA2#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA1);
          int offp3DA5#1 = IAdd(offp3D98,ilit3716);
          real v0_3DA6#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA5);
          int offp3DA7#1 = IAdd(offp3D9C,ilit3716);
          real v1_3DA8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3DA7);
          tensor[3,2] voxels3DAA#1 = <tensor[3,2]>[v0_3D99,v1_3D9D,v0_3DA0,v1_3DA2,v0_3DA6,v1_3DA8];
          goto JOIN3DC4
        JOIN3DC4:  preds = [ASSIGN45E3,ASSIGN45E4]
          tensor[3,2] ldvox3DC2#3 = phi(voxels3DAA,voxels3E85)
          real idx3DC7#1 = RSub(f3D8A,_t36A9);
          tensor[2] kernX_3DC5#1 = <tensor[2]>[f3D8A,idx3DC7];
          tensor[2] a03DCC#1 = <tensor[2]>[_t36A9,_t36A9];
          real _f3DCE#1 = -0.1e1;
          tensor[2] a13DCD#1 = <tensor[2]>[_f3DCE,_t36A9];
          tensor[2] prod13DD2#1 = VMul<2>(kernX_3DC5,a13DCD);
          tensor[2] kevalX_d0_3DCB#3 = VAdd<2>(a03DCC,prod13DD2);
          tensor[2] projIx3DDC#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC2);
          real vdot3DDD#1 = VDot<2>(projIx3DDC,kevalX_d0_3DCB);
          tensor[2] projIx3DDE#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC2);
          real vdot3DDF#1 = VDot<2>(projIx3DDE,kevalX_d0_3DCB);
          tensor[2] projIx3DE0#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC2);
          real vdot3DE1#1 = VDot<2>(projIx3DE0,kevalX_d0_3DCB);
          tensor[3] mcol3DDB#1 = <tensor[3]>[vdot3DDD,vdot3DDF,vdot3DE1];
          goto JOIN3DEB
        JOIN3DEB:  preds = [ASSIGN3DE9,COND3707]
          tensor[3] mcol3DEA#3 = phi(mcol3DDB,mcol3703)
          real op1_e3_l_213DEC#1 = RDiv(_t36A9,op1_e3_l_836B0);
          tensor[3] op1_e3_l_223DF1#1 = VScale<3>(op1_e3_l_213DEC,step36A4);
          tensor[3] op1_e3_l_233DF4#1 = VNeg<3>(op1_e3_l_223DF1);
          real op1_e3_l_243DF7#2 = VDot<3>(op1_e3_l_233DF4,litwsp2493);
          real op1_e3_l_253DFA#1 = RMul(op1_e3_l_243DF7,op1_e3_l_243DF7);
          real op1_e3_l_263DFD#1 = RMul(phKd24A1,op1_e3_l_253DFA);
          real op1_e3_l_283E00#1 = RSub(rayN24AB,camNearVsp248F);
          real op1_e3_l_293E03#1 = RSub(camFarVsp2491,camNearVsp248F);
          real op1_e3_l_303E06#1 = RDiv(op1_e3_l_283E00,op1_e3_l_293E03);
          tensor[3] op1_e3_l_313E09#1 = VSub<3>(mcFar2487,mcNear2485);
          tensor[3] op1_e3_l_323E0C#1 = VScale<3>(op1_e3_l_303E06,op1_e3_l_313E09);
          real op1_e3_l_333E0F#3 = RAdd(phKa249F,op1_e3_l_263DFD);
          tensor[3] op1_e3_l_343E12#3 = VAdd<3>(mcNear2485,op1_e3_l_323E0C);
          real r3E16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E12);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(mcol3DEA);
          real r3E18#1 = RMul(op1_e3_l_333E0F,r3E16);
          real r3E19#1 = RMul(r3E18,r3E17);
          real r3E1A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E12);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(mcol3DEA);
          real r3E1C#1 = RMul(op1_e3_l_333E0F,r3E1A);
          real r3E1D#1 = RMul(r3E1C,r3E1B);
          real r3E1E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E12);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(mcol3DEA);
          real r3E20#1 = RMul(op1_e3_l_333E0F,r3E1E);
          real r3E21#1 = RMul(r3E20,r3E1F);
          tensor[3] op1_e3_l_353E15#1 = <tensor[3]>[r3E19,r3E1D,r3E21];
          real r3E32#1 = RMul(phKs24A3,scomp36FD);
          real r3E33#3 = RMul(r3E32,_t36A9);
          tensor[3] op1_e3_l_363E30#1 = <tensor[3]>[r3E33,r3E33,r3E33];
          real op1_e3_l_373E41#2 = RSub(_t36A9,_t36D4);
          tensor[3] op1_e3_l_383E44#3 = VAdd<3>(op1_e3_l_353E15,op1_e3_l_363E30);
          real r3E48#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E44);
          real r3E49#3 = RMul(transp24A9,op1_e3_l_373E41);
          real r3E4A#1 = RMul(r3E49,r3E48);
          real r3E4B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E44);
          real r3E4C#1 = RMul(r3E49,r3E4B);
          real r3E4D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E44);
          real r3E4E#1 = RMul(r3E49,r3E4D);
          tensor[3] op1_e3_l_393E47#1 = <tensor[3]>[r3E4A,r3E4C,r3E4E];
          tensor[3] rgb3E58#2 = VAdd<3>(rgb24A7,op1_e3_l_393E47);
          real op1_e3_l_53E5B#1 = RSub(_t36A9,op1_e3_l_373E41);
          real transp3E5E#2 = RMul(transp24A9,op1_e3_l_53E5B);
          bool _t3E61#1 = LT<real>(transp3E5E,transp02479);
          if _t3E61 then goto SAVE3E64 else goto JOIN3E69
        SAVE3E64:  preds = [COND3E63]
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = _t36A7;
          stabilize
          goto JOIN3E69
        JOIN3E69:  preds = [*STABILIZE3E67,COND3E63]
          real transp3E68#1 = phi(transp3E5E)
          self.rayN = rayN24AB;
          self.rgb = rgb3E58;
          self.transp = transp3E68;
          active
        ASSIGN45CE:  preds = [COND3D93]
          int ix3E70#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,n3D8D);
          int offp3E72#3 = IMul(ilit3719,ix3E70);
          real v0_3E73#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E72);
          int addRes3E75#1 = IAdd(n3D8D,ilit3713);
          int ix3E76#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap2469,addRes3E75);
          int offp3E77#3 = IMul(ilit3719,ix3E76);
          real v1_3E78#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E77);
          int offp3E7A#1 = IAdd(offp3E72,ilit3713);
          real v0_3E7B#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7A);
          int offp3E7C#1 = IAdd(offp3E77,ilit3713);
          real v1_3E7D#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E7C);
          int offp3E80#1 = IAdd(offp3E72,ilit3716);
          real v0_3E81#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E80);
          int offp3E82#1 = IAdd(offp3E77,ilit3716);
          real v1_3E83#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap2469,offp3E82);
          tensor[3,2] voxels3E85#1 = <tensor[3,2]>[v0_3E73,v1_3E78,v0_3E7B,v1_3E7D,v0_3E81,v1_3E83];
          goto JOIN3DC4
        ASSIGN3EA0:  preds = [COND2D6D]
          real _t3E9F#3 = -0.1e1;
          real _t3EA1#3 = -0.2e1;
          real _t3EA3#3 = -0.3e1;
          real _t3EA9#9 = 0.e0;
          real r3EB8#5 = TensorIndex<tensor[3,3],[0,0]>(rot248D);
          real r3EBA#2 = RMul(r3EB8,_t3E9F);
          real r3EBB#5 = TensorIndex<tensor[3,3],[1,0]>(rot248D);
          real r3EBD#2 = RMul(r3EBB,_t3EA9);
          real r3EBE#5 = TensorIndex<tensor[3,3],[2,0]>(rot248D);
          real r3EC0#2 = RMul(r3EBE,_t3EA9);
          real r3EC1#1 = RAdd(r3EBA,r3EBD);
          real r3EC2#3 = RAdd(r3EC1,r3EC0);
          real r3EC4#2 = RMul(r3EB8,_t3EA9);
          real r3EC6#2 = RMul(r3EBB,_t3EA1);
          real r3EC9#1 = RAdd(r3EC4,r3EC6);
          real r3ECA#3 = RAdd(r3EC9,r3EC0);
          real r3ED0#2 = RMul(r3EBE,_t3EA3);
          real r3ED1#1 = RAdd(r3EC4,r3EBD);
          real r3ED2#3 = RAdd(r3ED1,r3ED0);
          real r3ED4#5 = TensorIndex<tensor[3,3],[0,1]>(rot248D);
          real r3ED5#2 = RMul(r3ED4,_t3E9F);
          real r3ED6#5 = TensorIndex<tensor[3,3],[1,1]>(rot248D);
          real r3ED7#2 = RMul(r3ED6,_t3EA9);
          real r3ED8#5 = TensorIndex<tensor[3,3],[2,1]>(rot248D);
          real r3ED9#2 = RMul(r3ED8,_t3EA9);
          real r3EDA#1 = RAdd(r3ED5,r3ED7);
          real r3EDB#3 = RAdd(r3EDA,r3ED9);
          real r3EDC#2 = RMul(r3ED4,_t3EA9);
          real r3EDD#2 = RMul(r3ED6,_t3EA1);
          real r3EDF#1 = RAdd(r3EDC,r3EDD);
          real r3EE0#3 = RAdd(r3EDF,r3ED9);
          real r3EE3#2 = RMul(r3ED8,_t3EA3);
          real r3EE4#1 = RAdd(r3EDC,r3ED7);
          real r3EE5#3 = RAdd(r3EE4,r3EE3);
          real r3EE7#5 = TensorIndex<tensor[3,3],[0,2]>(rot248D);
          real r3EE8#2 = RMul(r3EE7,_t3E9F);
          real r3EE9#5 = TensorIndex<tensor[3,3],[1,2]>(rot248D);
          real r3EEA#2 = RMul(r3EE9,_t3EA9);
          real r3EEB#5 = TensorIndex<tensor[3,3],[2,2]>(rot248D);
          real r3EEC#2 = RMul(r3EEB,_t3EA9);
          real r3EED#1 = RAdd(r3EE8,r3EEA);
          real r3EEE#3 = RAdd(r3EED,r3EEC);
          real r3EEF#2 = RMul(r3EE7,_t3EA9);
          real r3EF0#2 = RMul(r3EE9,_t3EA1);
          real r3EF2#1 = RAdd(r3EEF,r3EF0);
          real r3EF3#3 = RAdd(r3EF2,r3EEC);
          real r3EF6#2 = RMul(r3EEB,_t3EA3);
          real r3EF7#1 = RAdd(r3EEF,r3EEA);
          real r3EF8#3 = RAdd(r3EF7,r3EF6);
          real r3F41#1 = RMul(r3EC2,r3EB8);
          real r3F44#1 = RMul(r3ECA,r3EBB);
          real r3F47#1 = RMul(r3ED2,r3EBE);
          real r3F48#1 = RAdd(r3F41,r3F44);
          real r3F49#1 = RAdd(r3F48,r3F47);
          real r3F4B#1 = RMul(r3EC2,r3ED4);
          real r3F4D#1 = RMul(r3ECA,r3ED6);
          real r3F4F#1 = RMul(r3ED2,r3ED8);
          real r3F50#1 = RAdd(r3F4B,r3F4D);
          real r3F51#1 = RAdd(r3F50,r3F4F);
          real r3F53#1 = RMul(r3EC2,r3EE7);
          real r3F55#1 = RMul(r3ECA,r3EE9);
          real r3F57#1 = RMul(r3ED2,r3EEB);
          real r3F58#1 = RAdd(r3F53,r3F55);
          real r3F59#1 = RAdd(r3F58,r3F57);
          real r3F5C#1 = RMul(r3EDB,r3EB8);
          real r3F5E#1 = RMul(r3EE0,r3EBB);
          real r3F60#1 = RMul(r3EE5,r3EBE);
          real r3F61#1 = RAdd(r3F5C,r3F5E);
          real r3F62#1 = RAdd(r3F61,r3F60);
          real r3F63#1 = RMul(r3EDB,r3ED4);
          real r3F64#1 = RMul(r3EE0,r3ED6);
          real r3F65#1 = RMul(r3EE5,r3ED8);
          real r3F66#1 = RAdd(r3F63,r3F64);
          real r3F67#1 = RAdd(r3F66,r3F65);
          real r3F68#1 = RMul(r3EDB,r3EE7);
          real r3F69#1 = RMul(r3EE0,r3EE9);
          real r3F6A#1 = RMul(r3EE5,r3EEB);
          real r3F6B#1 = RAdd(r3F68,r3F69);
          real r3F6C#1 = RAdd(r3F6B,r3F6A);
          real r3F6F#1 = RMul(r3EEE,r3EB8);
          real r3F71#1 = RMul(r3EF3,r3EBB);
          real r3F73#1 = RMul(r3EF8,r3EBE);
          real r3F74#1 = RAdd(r3F6F,r3F71);
          real r3F75#1 = RAdd(r3F74,r3F73);
          real r3F76#1 = RMul(r3EEE,r3ED4);
          real r3F77#1 = RMul(r3EF3,r3ED6);
          real r3F78#1 = RMul(r3EF8,r3ED8);
          real r3F79#1 = RAdd(r3F76,r3F77);
          real r3F7A#1 = RAdd(r3F79,r3F78);
          real r3F7B#1 = RMul(r3EEE,r3EE7);
          real r3F7C#1 = RMul(r3EF3,r3EE9);
          real r3F7D#1 = RMul(r3EF8,r3EEB);
          real r3F7E#1 = RAdd(r3F7B,r3F7C);
          real r3F7F#1 = RAdd(r3F7E,r3F7D);
          tensor[3,3] H3F3E#1 = <tensor[3,3]>[r3F49,r3F51,r3F59,r3F62,r3F67,r3F6C,r3F75,r3F7A,r3F7F];
          (real[3] evals3FC5#2,tensor[3][3] E3FC6#2) = EigenVecs3x3(H3F3E);
          int _t3FC8#2 = 2;
          tensor[3] _t3FCA#6 = Subscript<tensor[3][3]>(E3FC6,_t3FC8);
          real _t3FCC#9 = Subscript<real[3]>(evals3FC5,_t3FC8);
          int _t3FCE#2 = 1;
          tensor[3] _t3FD0#6 = Subscript<tensor[3][3]>(E3FC6,_t3FCE);
          real _t3FD2#9 = Subscript<real[3]>(evals3FC5,_t3FCE);
          real r3FD5#1 = TensorIndex<tensor[3],[0]>(_t3FCA);
          tensor[3] binopV3FD6#3 = VScale<3>(r3FD5,_t3FCA);
          real r3FD7#1 = TensorIndex<tensor[3],[1]>(_t3FCA);
          tensor[3] binopV3FD8#3 = VScale<3>(r3FD7,_t3FCA);
          real r3FD9#1 = TensorIndex<tensor[3],[2]>(_t3FCA);
          tensor[3] binopV3FDA#3 = VScale<3>(r3FD9,_t3FCA);
          real r3FE4#1 = TensorIndex<tensor[3],[0]>(_t3FD0);
          tensor[3] binopV3FE5#3 = VScale<3>(r3FE4,_t3FD0);
          real r3FE6#1 = TensorIndex<tensor[3],[1]>(_t3FD0);
          tensor[3] binopV3FE7#3 = VScale<3>(r3FE6,_t3FD0);
          real r3FE8#1 = TensorIndex<tensor[3],[2]>(_t3FD0);
          tensor[3] binopV3FE9#3 = VScale<3>(r3FE8,_t3FD0);
          real r3FF3#1 = VIndex<3,0>(binopV3FD6);
          real r3FF4#1 = RDiv(r3FF3,_t3FCC);
          real r3FF5#1 = VIndex<3,1>(binopV3FD6);
          real r3FF6#1 = RDiv(r3FF5,_t3FCC);
          real r3FF7#1 = VIndex<3,2>(binopV3FD6);
          real r3FF8#1 = RDiv(r3FF7,_t3FCC);
          tensor[3] tensor3FF9#1 = <tensor[3]>[r3FF4,r3FF6,r3FF8];
          real r3FFA#1 = VIndex<3,0>(binopV3FD8);
          real r3FFB#1 = RDiv(r3FFA,_t3FCC);
          real r3FFC#1 = VIndex<3,1>(binopV3FD8);
          real r3FFD#1 = RDiv(r3FFC,_t3FCC);
          real r3FFE#1 = VIndex<3,2>(binopV3FD8);
          real r3FFF#1 = RDiv(r3FFE,_t3FCC);
          tensor[3] tensor4000#1 = <tensor[3]>[r3FFB,r3FFD,r3FFF];
          real r4001#1 = VIndex<3,0>(binopV3FDA);
          real r4002#1 = RDiv(r4001,_t3FCC);
          real r4003#1 = VIndex<3,1>(binopV3FDA);
          real r4004#1 = RDiv(r4003,_t3FCC);
          real r4005#1 = VIndex<3,2>(binopV3FDA);
          real r4006#1 = RDiv(r4005,_t3FCC);
          tensor[3] tensor4007#1 = <tensor[3]>[r4002,r4004,r4006];
          real r4020#1 = VIndex<3,0>(binopV3FE5);
          real r4021#1 = RDiv(r4020,_t3FD2);
          real r4022#1 = VIndex<3,1>(binopV3FE5);
          real r4023#1 = RDiv(r4022,_t3FD2);
          real r4024#1 = VIndex<3,2>(binopV3FE5);
          real r4025#1 = RDiv(r4024,_t3FD2);
          tensor[3] tensor4026#1 = <tensor[3]>[r4021,r4023,r4025];
          real r4027#1 = VIndex<3,0>(binopV3FE7);
          real r4028#1 = RDiv(r4027,_t3FD2);
          real r4029#1 = VIndex<3,1>(binopV3FE7);
          real r402A#1 = RDiv(r4029,_t3FD2);
          real r402B#1 = VIndex<3,2>(binopV3FE7);
          real r402C#1 = RDiv(r402B,_t3FD2);
          tensor[3] tensor402D#1 = <tensor[3]>[r4028,r402A,r402C];
          real r402E#1 = VIndex<3,0>(binopV3FE9);
          real r402F#1 = RDiv(r402E,_t3FD2);
          real r4030#1 = VIndex<3,1>(binopV3FE9);
          real r4031#1 = RDiv(r4030,_t3FD2);
          real r4032#1 = VIndex<3,2>(binopV3FE9);
          real r4033#1 = RDiv(r4032,_t3FD2);
          tensor[3] tensor4034#1 = <tensor[3]>[r402F,r4031,r4033];
          tensor[3] v404F#1 = VAdd<3>(tensor3FF9,tensor4026);
          tensor[3] v4052#1 = VAdd<3>(tensor4000,tensor402D);
          tensor[3] v4055#1 = VAdd<3>(tensor4007,tensor4034);
          tensor[3] projParam4062#1 = ProjectLast<tensor[3,3],[0]>(rot248D);
          real vdot4063#3 = VDot<3>(projParam4062,pos24B7);
          tensor[3] projParam4064#1 = ProjectLast<tensor[3,3],[1]>(rot248D);
          real vdot4065#3 = VDot<3>(projParam4064,pos24B7);
          tensor[3] projParam4066#1 = ProjectLast<tensor[3,3],[2]>(rot248D);
          real vdot4067#3 = VDot<3>(projParam4066,pos24B7);
          tensor[3] negV4072#1 = VNeg<3>(v404F);
          tensor[3] negV4074#1 = VNeg<3>(v4052);
          tensor[3] negV4076#1 = VNeg<3>(v4055);
          real r4084#1 = RMul(r3EBA,vdot4063);
          real r4089#1 = RMul(r3EC6,vdot4065);
          real r408E#1 = RMul(r3ED0,vdot4067);
          real r408F#1 = RAdd(r4084,r4089);
          real r4090#1 = RAdd(r408F,r408E);
          real r4093#1 = RMul(r3ED5,vdot4063);
          real r4096#1 = RMul(r3EDD,vdot4065);
          real r4099#1 = RMul(r3EE3,vdot4067);
          real r409A#1 = RAdd(r4093,r4096);
          real r409B#1 = RAdd(r409A,r4099);
          real r409E#1 = RMul(r3EE8,vdot4063);
          real r40A1#1 = RMul(r3EF0,vdot4065);
          real r40A4#1 = RMul(r3EF6,vdot4067);
          real r40A5#1 = RAdd(r409E,r40A1);
          real r40A6#1 = RAdd(r40A5,r40A4);
          tensor[3] op1_e3_l_23407F#3 = <tensor[3]>[r4090,r409B,r40A6];
          real vdot40D1#1 = VDot<3>(negV4072,op1_e3_l_23407F);
          real vdot40D3#1 = VDot<3>(negV4074,op1_e3_l_23407F);
          real vdot40D5#1 = VDot<3>(negV4076,op1_e3_l_23407F);
          tensor[3] _t36A5#1 = <tensor[3]>[vdot40D1,vdot40D3,vdot40D5];
          goto JOIN36A6
        ASSIGN40DE:  preds = [COND2D59]
          bool _t2D5D#1 = false;
          goto JOIN2D5E
        ASSIGN40DF:  preds = [COND2D54]
          bool _t2D60#1 = false;
          goto JOIN2D61
        ASSIGN40E0:  preds = [COND24C0]
          bool _t2D63#1 = false;
          goto JOIN2D64
    end update
    method stabilize
        ENTRY40E1:  preds = []
          tensor[4] rgba40E2#1 = self.rgba;
          tensor[3] rgb40E4#3 = self.rgb;
          real transp40E6#2 = self.transp;
          real _t40E8#2 = 0.1e1;
          bool _t40EA#1 = LT<real>(transp40E6,_t40E8);
          if _t40EA then goto ASSIGN40EF else goto JOIN4102
        ASSIGN40EF:  preds = [COND40EC]
          real aa40ED#4 = RSub(_t40E8,transp40E6);
          real _t40F0#1 = VIndex<3,0>(rgb40E4);
          real _t40F2#1 = RDiv(_t40F0,aa40ED);
          real _t40F5#1 = VIndex<3,1>(rgb40E4);
          real _t40F7#1 = RDiv(_t40F5,aa40ED);
          real _t40FA#1 = VIndex<3,2>(rgb40E4);
          real _t40FC#1 = RDiv(_t40FA,aa40ED);
          tensor[4] rgba40FF#1 = <tensor[4]>[_t40F2,_t40F7,_t40FC,aa40ED];
          goto JOIN4102
        JOIN4102:  preds = [ASSIGN4100,COND40EC]
          tensor[4] rgba4101#1 = phi(rgba40FF,rgba40E2)
          self.rgba = rgba4101;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY4105:  preds = []
      int iresU4106#1 = globals.iresU217E;
      int iresV4108#1 = globals.iresV217F;
      int _t410A#2 = 0;
      int _t410C#2 = 1;
      int _t410E#1 = ISub(iresV4108,_t410C);
      int[] _t4110#1 = Range(_t410A,_t410E);
    FOREACH4113:  preds = [ASSIGN4111,NEXT411C]
      foreach (vi4112 in _t4110) on exit goto RETURN411D
      int _t4114#1 = ISub(iresU4106,_t410C);
      int[] _t4116#1 = Range(_t410A,_t4114);
    FOREACH4119:  preds = [ASSIGN4117,NEXT411B]
      foreach (ui4118 in _t4116) on exit goto NEXT411C
      new ray(ui4118,vi4112);
      goto FOREACH4119
    NEXT411C:  preds = [FOREACH4119]
      goto FOREACH4113
    RETURN411D:  preds = [FOREACH4113]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) block;
input femData(Space) 0space0509_intermedateGlobal;
input femData(FemFunc) 0U050B_intermedateGlobal;
input int cellChoice;
input image(IMAGE1D<double[3]>) cmap;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camNear;
input real camFar;
input real camFOV;
input bool camOrtho;
input int iresU;
input int iresV;
input real rayStep;
input real refStep;
input real transp0;
input real thick;
input real fStrTh;
input real fMaskTh;
input real fBias;
input real maxAlpha;
input bool light;
input tensor[4] phong;
input tensor[3] mcNear;
input tensor[3] mcFar;
input tensor[3] litdir;
input tensor[2] cminmax;
input bool analytical;
input image(IMAGE3D<double[]>) umm;
input tensor[3,3] rot;
//***** CONST INIT *****
  {
    globals.camEye = PACK(VEC3{4}(0.e0,-0.2e1,0.e0));
    globals.camAt = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    globals.camUp = PACK(VEC3{4}(0.e0,0.e0,0.1e1));
    globals.camNear = -0.4e1;
    globals.camFar = 0.4e1;
    globals.camFOV = 0.1e2;
    globals.camOrtho = false;
    globals.iresU = 100;
    globals.iresV = 100;
    globals.rayStep = 0.1e-3;
    globals.refStep = 0.1e-3;
    globals.transp0 = 0.5e-2;
    globals.thick = 0.1e-1;
    globals.fStrTh = 0.e0;
    globals.fMaskTh = 0.e0;
    globals.fBias = 0.1e0;
    globals.maxAlpha = 0.1e1;
    globals.light = false;
    globals.phong = PACK(VEC4(0.1e0,0.7e0,0.2e0,0.1e3));
    vec3{4} v_4 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    globals.mcNear = PACK(v_4);
    globals.mcFar = PACK(v_4);
    globals.litdir = PACK(VEC3{4}(0.e0,-0.1e1,0.e0));
    globals.cminmax = PACK(VEC2(0.e0,0.e0));
    globals.analytical = true;
    globals.rot = <tensor[3,3]>[0.1e1,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.1e1];
  }
//***** GLOBALS *****
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camDist;
global real camVmax;
global real camUmax;
global real camNearVsp;
global real camFarVsp;
global tensor[3] litwsp;
global int _t;
global femData(Space) _tX;
global femData(FemFunc) _tXX;
//***** FUNCTIONS *****
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_9;
    l__t_9 = <femData(MeshCell)[]>{};
    for i__t_10 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.block),1) {
      l__t_9 = Append<femData(MeshCell),femData(MeshCell)>(l__t_9,LoadFem<femData(MeshCell)>(globals.block,i__t_10));
    }
    femData(FuncCell) l__t_11 = LoadFem<femData(FuncCell)>(LoadFem<femData(FemFunc)>(globals.0U050B_intermedateGlobal,LoadFem<femData(Space)>(globals.0space0509_intermedateGlobal,globals.block)),ExtractFemItem<int,CellIndex(MeshCell)>(Subscript<femData(MeshCell)[]>(l__t_9,globals.cellChoice)));
    femData(FemFunc) l__t_12 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_11);
    vec3{4} v_13 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_14 = Sqrt(VDot<3,4>(v_13,v_13));
    real l_op1_e3_l_9_15 = RDiv(0.1e1,l_op1_e3_l_7_14);
    vec3{4} v_16 = VScale<3,4>(l_op1_e3_l_9_15,v_13);
    globals.camN = PACK(v_16);
    real l_r_18 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_19 = RMul(0.e0,l_r_18);
    real l_r_20 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_21 = RMul(0.e0,l_r_20);
    real l_r_22 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_23 = RMul(0.e0,l_r_22);
    real l_r_24 = RAdd(l_r_19,l_r_21);
    real l_r_25 = RAdd(l_r_24,l_r_23);
    real l_vdot_26 = VDot<3,4>(v_13,VEC3{4}(l_r_25,RAdd(l_r_24,RMul(0.1e1,l_r_22)),RAdd(RAdd(l_r_19,RMul(-0.1e1,l_r_20)),l_r_23)));
    real l_vdot_27 = VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_24,RMul(-0.1e1,l_r_22)),l_r_25,RAdd(RAdd(RMul(0.1e1,l_r_18),l_r_21),l_r_23)));
    real l_vdot_28 = VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_19,RMul(0.1e1,l_r_20)),l_r_23),RAdd(RAdd(RMul(-0.1e1,l_r_18),l_r_21),l_r_23),l_r_25));
    vec3{4} v_29 = VEC3{4}(l_vdot_26,l_vdot_27,l_vdot_28);
    real l_op1_e3_l_38_30 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_15,l_op1_e3_l_9_15),VDot<3,4>(v_29,v_29))));
    vec3{4} v_31 = VScale<3,4>(l_op1_e3_l_38_30,VScale<3,4>(l_op1_e3_l_9_15,v_29));
    globals.camU = PACK(v_31);
    real l_r_33 = RMul(0.e0,l_vdot_26);
    real l_r_34 = RMul(0.e0,l_vdot_27);
    real l_r_35 = RMul(0.e0,l_vdot_28);
    real l_r_36 = RAdd(l_r_33,l_r_34);
    real l_r_37 = RAdd(l_r_36,l_r_35);
    vec3{4} v_38 = VScale<3,4>(l_op1_e3_l_9_15,VEC3{4}(VDot<3,4>(v_13,VEC3{4}(l_r_37,RAdd(l_r_36,RMul(0.1e1,l_vdot_28)),RAdd(RAdd(l_r_33,RMul(-0.1e1,l_vdot_27)),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_36,RMul(-0.1e1,l_vdot_28)),l_r_37,RAdd(RAdd(RMul(0.1e1,l_vdot_26),l_r_34),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_33,RMul(0.1e1,l_vdot_27)),l_r_35),RAdd(RAdd(RMul(-0.1e1,l_vdot_26),l_r_34),l_r_35),l_r_37))));
    real l_r_39 = RMul(l_op1_e3_l_9_15,l_op1_e3_l_38_30);
    real l_r_40 = RMul(l_r_39,VIndex<3,4,0>(v_38));
    real l_r_41 = RMul(l_r_39,VIndex<3,4,1>(v_38));
    real l_r_42 = RMul(l_r_39,VIndex<3,4,2>(v_38));
    globals.camV = PACK(VEC3{4}(l_r_40,l_r_41,l_r_42));
    globals.camDist = l_op1_e3_l_7_14;
    real l_op1_e3_l_10_44 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_44,l_op1_e3_l_7_14);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_44),l_op1_e3_l_7_14),IntToReal(globals.iresV));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_7_14);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_7_14);
    real l_r_45 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.litdir));
    real l_r_46 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.litdir));
    real l_r_47 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.litdir));
    globals.litwsp = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.litdir)),LOAD_0(TensorRef<[3]>(globals.litdir))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_31),l_r_45),RMul(l_r_40,l_r_46)),RMul(VIndex<3,4,0>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_31),l_r_45),RMul(l_r_41,l_r_46)),RMul(VIndex<3,4,1>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_31),l_r_45),RMul(l_r_42,l_r_46)),RMul(VIndex<3,4,2>(v_16),l_r_47)))));
    globals._t = ExtractFemItem<int,CellIndex(FuncCell)>(l__t_11);
    globals._tX = ExtractFem<femData(Space),femData(FemFunc)>(l__t_12);
    globals._tXX = l__t_12;
  }
//***** STRAND *****
strand ray (int p_ui_49,int p_vi_50) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] UV;
  tensor[3] rayOrig;
  tensor[3] rayVec;
  real alphaFix;
  tensor[3] eyeDir;
  real phKa;
  real phKd;
  real phKs;
  real phSp;
  varying output tensor[4] rgba;
  output real raw;
  varying tensor[3] rgb;
  varying real transp;
  initialize (globals) {
    vec3{4} v_59;
    vec3{4} v_57;
    real l_op1_e3_l_9_51 = RNeg(globals.camUmax);
    real l_rayU_52 = RAdd(l_op1_e3_l_9_51,RMul(RDiv(RSub(IntToReal(p_ui_49),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_51)));
    real l_op1_e3_l_9_53 = RNeg(globals.camVmax);
    real l_rayV_54 = RAdd(l_op1_e3_l_9_53,RMul(RDiv(RSub(IntToReal(p_vi_50),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_53)));
    vec3{4} v_55 = VAdd<3,4>(VScale<3,4>(l_rayU_52,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_54,LOAD_0(TensorRef<[3]>(globals.camV))));
    vec3{4} v_56 = v_55;
    if (globals.camOrtho) {
      v_57 = v_56;
    } else {
      v_57 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_58 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_57);
    if (globals.camOrtho) {
      v_59 = VEC3{4}(0.e0,0.e0,0.e0);
    } else {
      real l_r_60 = RDiv(0.1e1,globals.camDist);
      v_59 = VEC3{4}(RMul(l_r_60,VIndex<3,4,0>(v_56)),RMul(l_r_60,VIndex<3,4,1>(v_56)),RMul(l_r_60,VIndex<3,4,2>(v_56)));
    }
    vec3{4} v_61 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),v_59);
    real l_op1_e3_l_7_62 = Sqrt(VDot<3,4>(v_61,v_61));
    self.rayU = l_rayU_52;
    self.rayV = l_rayV_54;
    self.rayN = globals.camNearVsp;
    self.UV = PACK(v_56);
    self.rayOrig = PACK(v_58);
    self.rayVec = PACK(v_61);
    self.alphaFix = RDiv(RMul(globals.rayStep,l_op1_e3_l_7_62),globals.refStep);
    self.eyeDir = PACK(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_7_62),v_61)));
    self.phKa = VIndex<4,4,0>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phKd = VIndex<4,4,1>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phKs = VIndex<4,4,2>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phSp = VIndex<4,4,3>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.rgba = PACK(VEC4(0.e0,0.e0,0.e0,0.e0));
    self.raw = 0.e0;
    self.rgb = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    self.transp = 0.1e1;
  }
  update (globals) {
    real l_transp_1125;
    vec3{4} v_1113;
    real l_scomp_893;
    vec3{4} v_835;
    bool l__t_449;
    real l_rayN_69 = RAdd(self.rayN,globals.rayStep);
    if (GT<real>(l_rayN_69,globals.camFarVsp)) {
      self.rayN = l_rayN_69;
      stabilize;
    }
    vec3{4} v_70 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_69,LOAD_0(TensorRef<[3]>(self.rayVec))));
    tensor[3] _arg_71 = PACK(v_70);
    vec3{4} v_72 = v_70;
    if (ExtractFemItemN<[femData(Mesh),tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),"","",[],int>(ExtractFemItem<femData(RefCell),RefCell(Mesh)>(globals.block),_arg_71,0.1e-8)) {
      bool l__t_448;
      int l_mulRes_73 = IMul(globals._t,84);
      int t_74 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_73);
      int t_75 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,1));
      int t_76 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,2));
      int t_77 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,3));
      int t_78 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,4));
      int t_79 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,5));
      int t_80 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,6));
      int t_81 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,7));
      int t_82 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,8));
      int t_83 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,9));
      int t_84 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,10));
      int t_85 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,11));
      int t_86 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,12));
      int t_87 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,13));
      int t_88 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,14));
      int t_89 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,15));
      int t_90 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,16));
      int t_91 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,17));
      int t_92 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,18));
      int t_93 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,19));
      int t_94 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,20));
      int t_95 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,21));
      int t_96 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,22));
      int t_97 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,23));
      int t_98 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,24));
      int t_99 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,25));
      int t_100 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,26));
      int t_101 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,27));
      int t_102 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,28));
      int t_103 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,29));
      int t_104 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,30));
      int t_105 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,31));
      int t_106 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,32));
      int t_107 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,33));
      int t_108 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,34));
      int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,35));
      int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,36));
      int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,37));
      int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,38));
      int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,39));
      int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,40));
      int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,41));
      int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,42));
      int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,43));
      int t_118 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,44));
      int t_119 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,45));
      int t_120 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,46));
      int t_121 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,47));
      int t_122 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,48));
      int t_123 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,49));
      int t_124 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,50));
      int t_125 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,51));
      int t_126 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,52));
      int t_127 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,53));
      int t_128 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,54));
      int t_129 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,55));
      int t_130 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,56));
      int t_131 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,57));
      int t_132 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,58));
      int t_133 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,59));
      int t_134 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,60));
      int t_135 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,61));
      int t_136 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,62));
      int t_137 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,63));
      int t_138 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,64));
      int t_139 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,65));
      int t_140 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,66));
      int t_141 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,67));
      int t_142 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,68));
      int t_143 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,69));
      int t_144 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,70));
      int t_145 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,71));
      int t_146 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,72));
      int t_147 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,73));
      int t_148 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,74));
      int t_149 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,75));
      int t_150 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,76));
      int t_151 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,77));
      int t_152 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,78));
      int t_153 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,79));
      int t_154 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,80));
      int t_155 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,81));
      int t_156 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,82));
      int t_157 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,83));
      real t_158 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_157));
      real t_159 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_156));
      real t_160 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_155));
      real t_161 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_154));
      real t_162 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_153));
      real t_163 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_152));
      real t_164 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_151));
      real t_165 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_150));
      real t_166 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_149));
      real t_167 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_148));
      real t_168 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_147));
      real t_169 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_146));
      real t_170 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_145));
      real t_171 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_144));
      real t_172 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_143));
      real t_173 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_142));
      real t_174 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_141));
      real t_175 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_140));
      real t_176 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_139));
      real t_177 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_138));
      real t_178 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_137));
      real t_179 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_136));
      real t_180 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_135));
      real t_181 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_134));
      real t_182 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_133));
      real t_183 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_132));
      real t_184 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_131));
      real t_185 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_130));
      real t_186 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_129));
      real t_187 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_128));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_127));
      real t_189 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_126));
      real t_190 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_125));
      real t_191 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_124));
      real t_192 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_123));
      real t_193 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_122));
      real t_194 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_121));
      real t_195 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_120));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_119));
      real t_197 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_118));
      real t_198 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_117));
      real t_199 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_116));
      real t_200 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_115));
      real t_201 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_114));
      real t_202 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_113));
      real t_203 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_112));
      real t_204 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_111));
      real t_205 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_110));
      real t_206 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_109));
      real t_207 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_108));
      real t_208 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_107));
      real t_209 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_106));
      real t_210 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_105));
      real t_211 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_104));
      real t_212 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_103));
      real t_213 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_102));
      real t_214 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_101));
      real t_215 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_100));
      real t_216 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_99));
      real t_217 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_98));
      real t_218 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_97));
      real t_219 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_96));
      real t_220 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_95));
      real t_221 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_94));
      real t_222 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_93));
      real t_223 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_92));
      real t_224 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_91));
      real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_90));
      real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_89));
      real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_88));
      real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_87));
      real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_86));
      real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_85));
      real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_84));
      real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_83));
      real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_82));
      real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_81));
      real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_80));
      real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_79));
      real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_78));
      real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_77));
      real t_239 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_76));
      real t_240 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_75));
      real t_241 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_74));
      vec4 v_242 = VEC4(t_241,t_240,t_239,t_238);
      vec4 v_243 = VEC4(t_237,t_236,t_235,t_234);
      vec4 v_244 = VEC4(t_233,t_232,t_231,t_230);
      vec4 v_245 = VEC4(t_229,t_228,t_227,t_226);
      vec4 v_246 = VEC4(t_225,t_224,t_223,t_222);
      vec4 v_247 = VEC4(t_221,t_220,t_219,t_218);
      vec4 v_248 = VEC4(t_217,t_216,t_215,t_214);
      vec4 v_249 = VEC4(t_213,t_212,t_211,t_210);
      vec4 v_250 = VEC4(t_209,t_208,t_207,t_206);
      vec4 v_251 = VEC4(t_205,t_204,t_203,t_202);
      vec4 v_252 = VEC4(t_201,t_200,t_199,t_198);
      vec4 v_253 = VEC4(t_197,t_196,t_195,t_194);
      vec4 v_254 = VEC4(t_193,t_192,t_191,t_190);
      vec4 v_255 = VEC4(t_189,t_188,t_187,t_186);
      vec4 v_256 = VEC4(t_185,t_184,t_183,t_182);
      vec4 v_257 = VEC4(t_181,t_180,t_179,t_178);
      vec4 v_258 = VEC4(t_177,t_176,t_175,t_174);
      vec4 v_259 = VEC4(t_173,t_172,t_171,t_170);
      vec4 v_260 = VEC4(t_169,t_168,t_167,t_166);
      vec4 v_261 = VEC4(t_165,t_164,t_163,t_162);
      vec4 v_262 = VEC4(t_161,t_160,t_159,t_158);
      real l_varAcc_263 = VIndex<3,4,0>(v_72);
      real l_varAcc_264 = VIndex<3,4,1>(v_72);
      real l_varAcc_265 = VIndex<3,4,2>(v_72);
      real l_prod_266 = RMul(0.1e1,0.1e1);
      real l_prod_267 = RMul(0.1e1,l_prod_266);
      real l_basisEval_268 = RMul(0.2e1,l_prod_267);
      real l_prod_269 = RMul(0.1e1,l_varAcc_265);
      real l_prod_270 = RMul(0.1e1,l_prod_269);
      real l_basisEval_271 = RMul(0.2e1,l_prod_270);
      real l_prod_272 = RMul(l_varAcc_264,0.1e1);
      real l_prod_273 = RMul(0.1e1,l_prod_272);
      real l_basisEval_274 = RMul(0.2e1,l_prod_273);
      real l_prod_275 = RMul(l_varAcc_263,l_prod_266);
      real l_prod2_276 = RMul(l_varAcc_265,l_varAcc_265);
      real l_prod_277 = RMul(0.1e1,l_prod2_276);
      real l_prod_278 = RMul(0.1e1,l_prod_277);
      real l_basisEval_279 = RMul(0.2e1,l_prod_278);
      real l_prod_280 = RMul(l_varAcc_264,l_varAcc_265);
      real l_prod_281 = RMul(0.1e1,l_prod_280);
      real l_basisEval_282 = RMul(0.2e1,l_prod_281);
      real l_prod2_283 = RMul(l_varAcc_264,l_varAcc_264);
      real l_prod_284 = RMul(l_prod2_283,0.1e1);
      real l_prod_285 = RMul(0.1e1,l_prod_284);
      real l_basisEval_286 = RMul(0.2e1,l_prod_285);
      real l_prod_287 = RMul(l_varAcc_263,l_prod_269);
      real l_basisEval_288 = RMul(0.6e1,l_prod_287);
      real l_prod_289 = RMul(l_varAcc_263,l_prod_272);
      real l_basisEval_290 = RMul(0.6e1,l_prod_289);
      real l_prod2_291 = RMul(l_varAcc_263,l_varAcc_263);
      real l_prod_292 = RMul(l_prod2_291,l_prod_266);
      real l_prod3_293 = RMul(l_prod2_276,l_varAcc_265);
      real l_prod_294 = RMul(0.1e1,l_prod3_293);
      real l_prod_295 = RMul(0.1e1,l_prod_294);
      real l_basisEval_296 = RMul(0.2e1,l_prod_295);
      real l_prod_297 = RMul(l_varAcc_264,l_prod2_276);
      real l_prod_298 = RMul(0.1e1,l_prod_297);
      real l_basisEval_299 = RMul(0.2e1,l_prod_298);
      real l_prod_300 = RMul(l_prod2_283,l_varAcc_265);
      real l_prod_301 = RMul(0.1e1,l_prod_300);
      real l_basisEval_302 = RMul(0.2e1,l_prod_301);
      real l_prod3_303 = RMul(l_prod2_283,l_varAcc_264);
      real l_prod_304 = RMul(l_prod3_303,0.1e1);
      real l_prod_305 = RMul(0.1e1,l_prod_304);
      real l_basisEval_306 = RMul(0.2e1,l_prod_305);
      real l_prod_307 = RMul(l_varAcc_263,l_prod_277);
      real l_basisEval_308 = RMul(0.6e1,l_prod_307);
      real l_prod_309 = RMul(l_varAcc_263,l_prod_280);
      real l_basisEval_310 = RMul(0.6e1,l_prod_309);
      real l_prod_311 = RMul(l_varAcc_263,l_prod_284);
      real l_basisEval_312 = RMul(0.6e1,l_prod_311);
      real l_prod_313 = RMul(l_prod2_291,l_prod_269);
      real l_prod_314 = RMul(l_prod2_291,l_prod_272);
      real l_prod3_315 = RMul(l_prod2_291,l_varAcc_263);
      real l_prod_316 = RMul(l_prod3_315,l_prod_266);
      real l_prod4_317 = RMul(l_prod3_293,l_varAcc_265);
      real l_prod_318 = RMul(0.1e1,l_prod4_317);
      real l_prod_319 = RMul(0.1e1,l_prod_318);
      real l_basisEval_320 = RMul(0.2e1,l_prod_319);
      real l_prod_321 = RMul(l_varAcc_264,l_prod3_293);
      real l_prod_322 = RMul(0.1e1,l_prod_321);
      real l_basisEval_323 = RMul(0.2e1,l_prod_322);
      real l_prod_324 = RMul(l_prod2_283,l_prod2_276);
      real l_prod_325 = RMul(0.1e1,l_prod_324);
      real l_prod_326 = RMul(l_prod3_303,l_varAcc_265);
      real l_prod_327 = RMul(0.1e1,l_prod_326);
      real l_basisEval_328 = RMul(0.2e1,l_prod_327);
      real l_prod4_329 = RMul(l_prod3_303,l_varAcc_264);
      real l_prod_330 = RMul(l_prod4_329,0.1e1);
      real l_prod_331 = RMul(0.1e1,l_prod_330);
      real l_basisEval_332 = RMul(0.2e1,l_prod_331);
      real l_prod_333 = RMul(l_varAcc_263,l_prod_294);
      real l_prod_334 = RMul(l_varAcc_263,l_prod_297);
      real l_basisEval_335 = RMul(0.6e1,l_prod_334);
      real l_prod_336 = RMul(l_varAcc_263,l_prod_300);
      real l_basisEval_337 = RMul(0.6e1,l_prod_336);
      real l_prod_338 = RMul(l_varAcc_263,l_prod_304);
      real l_prod_339 = RMul(l_prod2_291,l_prod_277);
      real l_basisEval_340 = RMul(0.12e2,l_prod_339);
      real l_prod_341 = RMul(l_prod2_291,l_prod_280);
      real l_prod_342 = RMul(l_prod2_291,l_prod_284);
      real l_basisEval_343 = RMul(0.12e2,l_prod_342);
      real l_prod_344 = RMul(l_prod3_315,l_prod_269);
      real l_prod_345 = RMul(l_prod3_315,l_prod_272);
      real l_prod4_346 = RMul(l_prod3_315,l_varAcc_263);
      real l_prod_347 = RMul(l_prod4_346,l_prod_266);
      real l_basisEval_348 = RMul(0.1e1,l_prod_267);
      real l_basisEval_349 = RMul(0.1e1,l_prod_270);
      real l_basisEval_350 = RMul(0.2e1,l_prod_275);
      real l_basisEval_351 = RMul(0.1e1,l_prod_278);
      real l_basisEval_352 = RMul(0.3e1,l_prod_285);
      real l_basisEval_353 = RMul(0.2e1,l_prod_287);
      real l_basisEval_354 = RMul(0.3e1,l_prod_292);
      real l_basisEval_355 = RMul(0.1e1,l_prod_295);
      real l_basisEval_356 = RMul(0.3e1,l_prod_301);
      real l_basisEval_357 = RMul(0.4e1,l_prod_305);
      real l_basisEval_358 = RMul(0.2e1,l_prod_307);
      real l_basisEval_359 = RMul(0.4e1,l_prod_309);
      real l_basisEval_360 = RMul(0.3e1,l_prod_313);
      real l_basisEval_361 = RMul(0.6e1,l_prod_314);
      real l_basisEval_362 = RMul(0.4e1,l_prod_316);
      real l_basisEval_363 = RMul(0.1e1,l_prod_319);
      real l_basisEval_364 = RMul(0.3e1,l_prod_325);
      real l_basisEval_365 = RMul(0.4e1,l_prod_327);
      real l_basisEval_366 = RMul(0.5e1,l_prod_331);
      real l_basisEval_367 = RMul(0.2e1,l_prod_333);
      real l_basisEval_368 = RMul(0.3e1,l_prod_339);
      real l_basisEval_369 = RMul(0.6e1,l_prod_341);
      real l_basisEval_370 = RMul(0.4e1,l_prod_344);
      real l_basisEval_371 = RMul(0.5e1,l_prod_347);
      real l_basisEval_372 = RMul(0.1e1,l_prod_273);
      real l_basisEval_373 = RMul(0.3e1,l_prod_278);
      real l_basisEval_374 = RMul(0.1e1,l_prod_285);
      real l_basisEval_375 = RMul(0.2e1,l_prod_289);
      real l_basisEval_376 = RMul(0.4e1,l_prod_295);
      real l_basisEval_377 = RMul(0.3e1,l_prod_298);
      real l_basisEval_378 = RMul(0.1e1,l_prod_305);
      real l_basisEval_379 = RMul(0.2e1,l_prod_311);
      real l_basisEval_380 = RMul(0.6e1,l_prod_313);
      real l_basisEval_381 = RMul(0.3e1,l_prod_314);
      real l_basisEval_382 = RMul(0.5e1,l_prod_319);
      real l_basisEval_383 = RMul(0.4e1,l_prod_322);
      real l_basisEval_384 = RMul(0.1e1,l_prod_331);
      real l_basisEval_385 = RMul(0.2e1,l_prod_338);
      real l_basisEval_386 = RMul(0.3e1,l_prod_342);
      real l_basisEval_387 = RMul(0.4e1,l_prod_345);
      real l_basisEval_388 = RMul(0.6e1,l_prod_281);
      real l_basisEval_389 = RMul(0.2e1,l_prod_292);
      real l_basisEval_390 = RMul(0.6e1,l_prod_298);
      real l_basisEval_391 = RMul(0.2e1,l_prod_313);
      real l_basisEval_392 = RMul(0.2e1,l_prod_316);
      real l_basisEval_393 = RMul(0.12e2,l_prod_325);
      real l_basisEval_394 = RMul(0.2e1,l_prod_344);
      real l_basisEval_395 = RMul(0.2e1,l_prod_347);
      real l_basisEval_396 = RMul(0.1e1,l_prod_275);
      real l_basisEval_397 = RMul(0.1e1,l_prod_292);
      real l_basisEval_398 = RMul(0.6e1,l_prod_301);
      real l_basisEval_399 = RMul(0.3e1,l_prod_307);
      real l_basisEval_400 = RMul(0.3e1,l_prod_311);
      real l_basisEval_401 = RMul(0.2e1,l_prod_314);
      real l_basisEval_402 = RMul(0.1e1,l_prod_316);
      real l_basisEval_403 = RMul(0.4e1,l_prod_333);
      real l_basisEval_404 = RMul(0.4e1,l_prod_338);
      real l_basisEval_405 = RMul(0.2e1,l_prod_345);
      real l_basisEval_406 = RMul(0.1e1,l_prod_347);
      real l_vdot_407 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_348,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_274,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_351,l_basisEval_282)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_352,0.e0,l_basisEval_353,RMul(0.4e1,l_prod_289))),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_354,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_355,l_basisEval_299)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_356,l_basisEval_357,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_359,l_basisEval_312,0.e0,l_basisEval_360)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_361,0.e0,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_366,0.e0,l_basisEval_367,RMul(0.4e1,l_prod_334))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_337,RMul(0.8e1,l_prod_338),0.e0,l_basisEval_368)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_369,RMul(0.9e1,l_prod_342),0.e0,l_basisEval_370)),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.8e1,l_prod_345),0.e0,l_basisEval_371,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_408 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_372)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_373,l_basisEval_282,l_basisEval_374)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,RMul(0.4e1,l_prod_287),l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_354,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_376,l_basisEval_377,l_basisEval_302)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_378,0.e0,l_basisEval_308,l_basisEval_359)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_379,0.e0,l_basisEval_380,l_basisEval_381)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_362,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.8e1,l_prod_333),l_basisEval_335,RMul(0.4e1,l_prod_336))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_385,0.e0,RMul(0.9e1,l_prod_339),l_basisEval_369)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_386,0.e0,RMul(0.8e1,l_prod_344),l_basisEval_387)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_371,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_409 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_274,0.e0,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_373,RMul(0.4e1,l_prod_281),l_basisEval_352)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_353,l_basisEval_375)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_376,l_basisEval_390,l_basisEval_398,l_basisEval_357)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_399,l_basisEval_359)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_400,0.e0,0.e0,l_basisEval_391)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_401,0.e0,0.e0,l_basisEval_402)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_382,RMul(0.8e1,l_prod_322),RMul(0.9e1,l_prod_325))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.8e1,l_prod_327),l_basisEval_366,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_403,l_basisEval_335,l_basisEval_337,l_basisEval_404)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,0.e0,l_basisEval_368,RMul(0.4e1,l_prod_341))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_386,0.e0,0.e0,l_basisEval_394)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_405,0.e0,0.e0,l_basisEval_406)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_410 = <tensor[3,3]>[RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_271,l_basisEval_274,RMul(0.6e1,l_prod_275))),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_279,l_basisEval_282,l_basisEval_286)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_288,l_basisEval_290,RMul(0.12e2,l_prod_292),0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_296,l_basisEval_299)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_302,l_basisEval_306,l_basisEval_308,l_basisEval_310)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_312,RMul(0.12e2,l_prod_313),RMul(0.12e2,l_prod_314),RMul(0.20e2,l_prod_316))),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_320,l_basisEval_323,RMul(0.2e1,l_prod_325))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_328,l_basisEval_332,RMul(0.6e1,l_prod_333),l_basisEval_335)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_337,RMul(0.6e1,l_prod_338),l_basisEval_340,RMul(0.12e2,l_prod_341))),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_343,RMul(0.20e2,l_prod_344),RMul(0.20e2,l_prod_345),RMul(0.30e2,l_prod_347))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_407,l_vdot_408,l_vdot_407,RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_271,RMul(0.6e1,l_prod_273),0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_350,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,l_basisEval_279,l_basisEval_388)),RAdd(VDot<4,4>(v_248,VEC4(RMul(0.12e2,l_prod_285),0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_290,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,l_basisEval_296,l_basisEval_390,RMul(0.12e2,l_prod_301))),RAdd(VDot<4,4>(v_252,VEC4(RMul(0.20e2,l_prod_305),0.e0,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_310,RMul(0.12e2,l_prod_311),0.e0,0.e0)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_391,l_basisEval_361,0.e0,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_392,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,l_basisEval_320,RMul(0.6e1,l_prod_322))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_393,RMul(0.20e2,l_prod_327),RMul(0.30e2,l_prod_331),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,l_basisEval_367,l_basisEval_335,RMul(0.12e2,l_prod_336))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.20e2,l_prod_338),0.e0,0.e0,RMul(0.2e1,l_prod_339))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_369,l_basisEval_343,0.e0,0.e0)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_394,RMul(0.6e1,l_prod_345),0.e0,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_395,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_409,l_vdot_408,l_vdot_409,RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_270),l_basisEval_274)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(RMul(0.12e2,l_prod_278),l_basisEval_388,l_basisEval_286,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_288,l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_389,0.e0,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_295))),RAdd(VDot<4,4>(v_251,VEC4(RMul(0.12e2,l_prod_298),l_basisEval_398,l_basisEval_306,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,RMul(0.12e2,l_prod_307),l_basisEval_310,l_basisEval_379)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_380,l_basisEval_401)),RAdd(VDot<4,4>(v_254,VEC4(0.e0,0.e0,l_basisEval_392,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.30e2,l_prod_319),RMul(0.20e2,l_prod_322),l_basisEval_393,RMul(0.6e1,l_prod_327))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_332,0.e0,0.e0,RMul(0.20e2,l_prod_333))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.12e2,l_prod_334),l_basisEval_337,l_basisEval_385,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_340,l_basisEval_369,RMul(0.2e1,l_prod_342))),RAdd(VDot<4,4>(v_260,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_344),l_basisEval_405)),RAdd(VDot<4,4>(v_261,VEC4(0.e0,0.e0,l_basisEval_395,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      real[3] l__t_411 = EigenVals3x3(TensorRef<[3,3]>(t_410));
      real l_basisEval_412 = RMul(0.2e1,l_prod_309);
      real l_basisEval_413 = RMul(0.2e1,l_prod_334);
      real l_basisEval_414 = RMul(0.2e1,l_prod_336);
      real l_prod_415 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_317,l_varAcc_265)));
      real l_basisEval_416 = RMul(0.1e1,l_prod_415);
      real l_prod_417 = RMul(0.1e1,RMul(l_varAcc_264,l_prod4_317));
      real l_prod_418 = RMul(0.1e1,RMul(l_prod2_283,l_prod3_293));
      real l_prod_419 = RMul(0.1e1,RMul(l_prod3_303,l_prod2_276));
      real l_prod_420 = RMul(0.1e1,RMul(l_prod4_329,l_varAcc_265));
      real l_prod_421 = RMul(0.1e1,RMul(RMul(l_prod4_329,l_varAcc_264),0.1e1));
      real l_basisEval_422 = RMul(0.1e1,l_prod_421);
      real l_prod_423 = RMul(l_varAcc_263,l_prod_318);
      real l_prod_424 = RMul(l_varAcc_263,l_prod_321);
      real l_basisEval_425 = RMul(0.2e1,l_prod_424);
      real l_prod_426 = RMul(l_varAcc_263,l_prod_324);
      real l_prod_427 = RMul(l_varAcc_263,l_prod_326);
      real l_basisEval_428 = RMul(0.2e1,l_prod_427);
      real l_prod_429 = RMul(l_varAcc_263,l_prod_330);
      real l_prod_430 = RMul(l_prod2_291,l_prod_294);
      real l_prod_431 = RMul(l_prod2_291,l_prod_297);
      real l_basisEval_432 = RMul(0.3e1,l_prod_431);
      real l_prod_433 = RMul(l_prod2_291,l_prod_300);
      real l_basisEval_434 = RMul(0.3e1,l_prod_433);
      real l_prod_435 = RMul(l_prod2_291,l_prod_304);
      real l_prod_436 = RMul(l_prod3_315,l_prod_277);
      real l_prod_437 = RMul(l_prod3_315,l_prod_280);
      real l_prod_438 = RMul(l_prod3_315,l_prod_284);
      real l_prod_439 = RMul(l_prod4_346,l_prod_269);
      real l_prod_440 = RMul(l_prod4_346,l_prod_272);
      real l_prod_441 = RMul(RMul(l_prod4_346,l_varAcc_263),l_prod_266);
      real l_basisEval_442 = RMul(0.2e1,l_prod_341);
      real l_basisEval_443 = RMul(0.3e1,l_prod_426);
      real l_basisEval_444 = RMul(0.2e1,l_prod_437);
      real l_basisEval_445 = RMul(0.1e1,l_prod_441);
      vec3{4} v_446 = VEC3{4}(RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_372,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_351,RMul(0.1e1,l_prod_281))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_374,l_basisEval_353,l_basisEval_375,l_basisEval_354)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_355,RMul(0.1e1,l_prod_298),RMul(0.1e1,l_prod_301))),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_378,l_basisEval_358,l_basisEval_412,l_basisEval_379)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_360,l_basisEval_381,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_363,RMul(0.1e1,l_prod_322),RMul(0.1e1,l_prod_325))),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_327),l_basisEval_384,l_basisEval_367,l_basisEval_413)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_414,l_basisEval_385,l_basisEval_368,RMul(0.3e1,l_prod_341))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_386,l_basisEval_370,l_basisEval_387,l_basisEval_371)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_416)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_417),RMul(0.1e1,l_prod_418),RMul(0.1e1,l_prod_419),RMul(0.1e1,l_prod_420))),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_422,RMul(0.2e1,l_prod_423),l_basisEval_425,RMul(0.2e1,l_prod_426))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_428,RMul(0.2e1,l_prod_429),RMul(0.3e1,l_prod_430),l_basisEval_432)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_434,RMul(0.3e1,l_prod_435),RMul(0.4e1,l_prod_436),RMul(0.4e1,l_prod_437))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.4e1,l_prod_438),RMul(0.5e1,l_prod_439),RMul(0.5e1,l_prod_440),RMul(0.6e1,l_prod_441))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_349,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_396,0.e0,0.e0,l_basisEval_351)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_282,l_basisEval_352,0.e0,RMul(0.1e1,l_prod_287))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_375,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_355,l_basisEval_299,l_basisEval_356)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_357,0.e0,RMul(0.1e1,l_prod_307),l_basisEval_412)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_400,0.e0,RMul(0.1e1,l_prod_313),l_basisEval_401)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_402,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_366,0.e0,RMul(0.1e1,l_prod_333),l_basisEval_413)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.3e1,l_prod_336),l_basisEval_404,0.e0,RMul(0.1e1,l_prod_339))),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_442,l_basisEval_386,0.e0,RMul(0.1e1,l_prod_344))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_405,0.e0,l_basisEval_406,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_416,RMul(0.2e1,l_prod_417),RMul(0.3e1,l_prod_418))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.4e1,l_prod_419),RMul(0.5e1,l_prod_420),RMul(0.6e1,l_prod_421),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_423),l_basisEval_425,l_basisEval_443,RMul(0.4e1,l_prod_427))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.5e1,l_prod_429),0.e0,RMul(0.1e1,l_prod_430),RMul(0.2e1,l_prod_431))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_434,RMul(0.4e1,l_prod_435),0.e0,RMul(0.1e1,l_prod_436))),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_444,RMul(0.3e1,l_prod_438),0.e0,RMul(0.1e1,l_prod_439))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.2e1,l_prod_440),0.e0,l_basisEval_445,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,l_basisEval_348,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_271,l_basisEval_372,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_373,l_basisEval_282)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_374,0.e0,l_basisEval_353,RMul(0.1e1,l_prod_289))),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_397,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_376,l_basisEval_377,l_basisEval_302,l_basisEval_378)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_399,l_basisEval_412,RMul(0.1e1,l_prod_311))),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_391,RMul(0.1e1,l_prod_314),0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_402,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_403,RMul(0.3e1,l_prod_334),l_basisEval_414)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_338),0.e0,l_basisEval_368,l_basisEval_442)),RAdd(VDot<4,4>(v_254,VEC4(RMul(0.1e1,l_prod_342),0.e0,l_basisEval_394,RMul(0.1e1,l_prod_345))),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_406,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.6e1,l_prod_415),RMul(0.5e1,l_prod_417),RMul(0.4e1,l_prod_418),RMul(0.3e1,l_prod_419))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.2e1,l_prod_420),l_basisEval_422,0.e0,RMul(0.5e1,l_prod_423))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.4e1,l_prod_424),l_basisEval_443,l_basisEval_428,RMul(0.1e1,l_prod_429))),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.4e1,l_prod_430),l_basisEval_432,RMul(0.2e1,l_prod_433))),RAdd(VDot<4,4>(v_260,VEC4(RMul(0.1e1,l_prod_435),0.e0,RMul(0.3e1,l_prod_436),l_basisEval_444)),RAdd(VDot<4,4>(v_261,VEC4(RMul(0.1e1,l_prod_438),0.e0,RMul(0.2e1,l_prod_439),RMul(0.1e1,l_prod_440))),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_445,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)))))))))))))))))))))));
      if (GT<real>(RDiv(RNeg(Subscript<real[3]>(l__t_411,1)),RAdd(globals.fBias,Sqrt(VDot<3,4>(v_446,v_446)))),globals.fStrTh)) {
        bool l__t_447;
        if (GTE<real>(0.1e1,globals.fMaskTh)) {
          l__t_447 = true;
        } else {
          l__t_447 = false;
        }
        l__t_448 = l__t_447;
      } else {
        l__t_448 = false;
      }
      l__t_449 = l__t_448;
    } else {
      l__t_449 = false;
    }
    if (BNot(l__t_449)) {
      self.rayN = l_rayN_69;
      active;
    }
    if (BNot(globals.analytical)) {
      tensor[3][3] l_E_789;
      real[3] l_evals_788;
      int l_mulRes_450 = IMul(globals._t,84);
      int t_451 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_450);
      int t_452 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,1));
      int t_453 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,2));
      int t_454 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,3));
      int t_455 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,4));
      int t_456 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,5));
      int t_457 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,6));
      int t_458 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,7));
      int t_459 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,8));
      int t_460 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,9));
      int t_461 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,10));
      int t_462 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,11));
      int t_463 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,12));
      int t_464 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,13));
      int t_465 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,14));
      int t_466 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,15));
      int t_467 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,16));
      int t_468 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,17));
      int t_469 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,18));
      int t_470 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,19));
      int t_471 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,20));
      int t_472 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,21));
      int t_473 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,22));
      int t_474 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,23));
      int t_475 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,24));
      int t_476 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,25));
      int t_477 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,26));
      int t_478 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,27));
      int t_479 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,28));
      int t_480 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,29));
      int t_481 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,30));
      int t_482 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,31));
      int t_483 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,32));
      int t_484 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,33));
      int t_485 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,34));
      int t_486 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,35));
      int t_487 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,36));
      int t_488 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,37));
      int t_489 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,38));
      int t_490 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,39));
      int t_491 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,40));
      int t_492 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,41));
      int t_493 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,42));
      int t_494 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,43));
      int t_495 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,44));
      int t_496 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,45));
      int t_497 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,46));
      int t_498 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,47));
      int t_499 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,48));
      int t_500 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,49));
      int t_501 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,50));
      int t_502 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,51));
      int t_503 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,52));
      int t_504 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,53));
      int t_505 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,54));
      int t_506 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,55));
      int t_507 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,56));
      int t_508 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,57));
      int t_509 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,58));
      int t_510 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,59));
      int t_511 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,60));
      int t_512 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,61));
      int t_513 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,62));
      int t_514 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,63));
      int t_515 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,64));
      int t_516 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,65));
      int t_517 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,66));
      int t_518 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,67));
      int t_519 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,68));
      int t_520 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,69));
      int t_521 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,70));
      int t_522 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,71));
      int t_523 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,72));
      int t_524 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,73));
      int t_525 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,74));
      int t_526 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,75));
      int t_527 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,76));
      int t_528 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,77));
      int t_529 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,78));
      int t_530 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,79));
      int t_531 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,80));
      int t_532 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,81));
      int t_533 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,82));
      int t_534 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,83));
      real t_535 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_534));
      real t_536 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_533));
      real t_537 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_532));
      real t_538 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_531));
      real t_539 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_530));
      real t_540 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_529));
      real t_541 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_528));
      real t_542 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_527));
      real t_543 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_526));
      real t_544 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_525));
      real t_545 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_524));
      real t_546 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_523));
      real t_547 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_522));
      real t_548 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_521));
      real t_549 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_520));
      real t_550 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_519));
      real t_551 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_518));
      real t_552 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_517));
      real t_553 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_516));
      real t_554 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_515));
      real t_555 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_514));
      real t_556 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_513));
      real t_557 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_512));
      real t_558 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_511));
      real t_559 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_510));
      real t_560 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_509));
      real t_561 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_508));
      real t_562 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_507));
      real t_563 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_506));
      real t_564 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_505));
      real t_565 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_504));
      real t_566 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_503));
      real t_567 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_502));
      real t_568 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_501));
      real t_569 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_500));
      real t_570 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_499));
      real t_571 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_498));
      real t_572 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_497));
      real t_573 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_496));
      real t_574 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_495));
      real t_575 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_494));
      real t_576 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_493));
      real t_577 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_492));
      real t_578 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_491));
      real t_579 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_490));
      real t_580 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_489));
      real t_581 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_488));
      real t_582 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_487));
      real t_583 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_486));
      real t_584 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_485));
      real t_585 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_484));
      real t_586 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_483));
      real t_587 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_482));
      real t_588 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_481));
      real t_589 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_480));
      real t_590 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_479));
      real t_591 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_478));
      real t_592 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_477));
      real t_593 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_476));
      real t_594 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_475));
      real t_595 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_474));
      real t_596 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_473));
      real t_597 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_472));
      real t_598 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_471));
      real t_599 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_470));
      real t_600 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_469));
      real t_601 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_468));
      real t_602 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_467));
      real t_603 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_466));
      real t_604 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_465));
      real t_605 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_464));
      real t_606 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_463));
      real t_607 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_462));
      real t_608 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_461));
      real t_609 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_460));
      real t_610 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_459));
      real t_611 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_458));
      real t_612 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_457));
      real t_613 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_456));
      real t_614 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_455));
      real t_615 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_454));
      real t_616 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_453));
      real t_617 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_452));
      real t_618 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_451));
      vec4 v_619 = VEC4(t_618,t_617,t_616,t_615);
      vec4 v_620 = VEC4(t_614,t_613,t_612,t_611);
      vec4 v_621 = VEC4(t_610,t_609,t_608,t_607);
      vec4 v_622 = VEC4(t_606,t_605,t_604,t_603);
      vec4 v_623 = VEC4(t_602,t_601,t_600,t_599);
      vec4 v_624 = VEC4(t_598,t_597,t_596,t_595);
      vec4 v_625 = VEC4(t_594,t_593,t_592,t_591);
      vec4 v_626 = VEC4(t_590,t_589,t_588,t_587);
      vec4 v_627 = VEC4(t_586,t_585,t_584,t_583);
      vec4 v_628 = VEC4(t_582,t_581,t_580,t_579);
      vec4 v_629 = VEC4(t_578,t_577,t_576,t_575);
      vec4 v_630 = VEC4(t_574,t_573,t_572,t_571);
      vec4 v_631 = VEC4(t_570,t_569,t_568,t_567);
      vec4 v_632 = VEC4(t_566,t_565,t_564,t_563);
      vec4 v_633 = VEC4(t_562,t_561,t_560,t_559);
      vec4 v_634 = VEC4(t_558,t_557,t_556,t_555);
      vec4 v_635 = VEC4(t_554,t_553,t_552,t_551);
      vec4 v_636 = VEC4(t_550,t_549,t_548,t_547);
      vec4 v_637 = VEC4(t_546,t_545,t_544,t_543);
      vec4 v_638 = VEC4(t_542,t_541,t_540,t_539);
      vec4 v_639 = VEC4(t_538,t_537,t_536,t_535);
      real l_varAcc_640 = VIndex<3,4,0>(v_72);
      real l_varAcc_641 = VIndex<3,4,1>(v_72);
      real l_varAcc_642 = VIndex<3,4,2>(v_72);
      real l_prod_643 = RMul(0.1e1,0.1e1);
      real l_prod_644 = RMul(0.1e1,l_prod_643);
      real l_basisEval_645 = RMul(0.2e1,l_prod_644);
      real l_prod_646 = RMul(0.1e1,l_varAcc_642);
      real l_prod_647 = RMul(0.1e1,l_prod_646);
      real l_basisEval_648 = RMul(0.2e1,l_prod_647);
      real l_prod_649 = RMul(l_varAcc_641,0.1e1);
      real l_prod_650 = RMul(0.1e1,l_prod_649);
      real l_basisEval_651 = RMul(0.2e1,l_prod_650);
      real l_prod_652 = RMul(l_varAcc_640,l_prod_643);
      real l_prod2_653 = RMul(l_varAcc_642,l_varAcc_642);
      real l_prod_654 = RMul(0.1e1,l_prod2_653);
      real l_prod_655 = RMul(0.1e1,l_prod_654);
      real l_basisEval_656 = RMul(0.2e1,l_prod_655);
      real l_prod_657 = RMul(l_varAcc_641,l_varAcc_642);
      real l_prod_658 = RMul(0.1e1,l_prod_657);
      real l_basisEval_659 = RMul(0.2e1,l_prod_658);
      real l_prod2_660 = RMul(l_varAcc_641,l_varAcc_641);
      real l_prod_661 = RMul(l_prod2_660,0.1e1);
      real l_prod_662 = RMul(0.1e1,l_prod_661);
      real l_basisEval_663 = RMul(0.2e1,l_prod_662);
      real l_prod_664 = RMul(l_varAcc_640,l_prod_646);
      real l_basisEval_665 = RMul(0.6e1,l_prod_664);
      real l_prod_666 = RMul(l_varAcc_640,l_prod_649);
      real l_basisEval_667 = RMul(0.6e1,l_prod_666);
      real l_prod2_668 = RMul(l_varAcc_640,l_varAcc_640);
      real l_prod_669 = RMul(l_prod2_668,l_prod_643);
      real l_prod3_670 = RMul(l_prod2_653,l_varAcc_642);
      real l_prod_671 = RMul(0.1e1,l_prod3_670);
      real l_prod_672 = RMul(0.1e1,l_prod_671);
      real l_basisEval_673 = RMul(0.2e1,l_prod_672);
      real l_prod_674 = RMul(l_varAcc_641,l_prod2_653);
      real l_prod_675 = RMul(0.1e1,l_prod_674);
      real l_basisEval_676 = RMul(0.2e1,l_prod_675);
      real l_prod_677 = RMul(l_prod2_660,l_varAcc_642);
      real l_prod_678 = RMul(0.1e1,l_prod_677);
      real l_basisEval_679 = RMul(0.2e1,l_prod_678);
      real l_prod3_680 = RMul(l_prod2_660,l_varAcc_641);
      real l_prod_681 = RMul(l_prod3_680,0.1e1);
      real l_prod_682 = RMul(0.1e1,l_prod_681);
      real l_basisEval_683 = RMul(0.2e1,l_prod_682);
      real l_prod_684 = RMul(l_varAcc_640,l_prod_654);
      real l_basisEval_685 = RMul(0.6e1,l_prod_684);
      real l_prod_686 = RMul(l_varAcc_640,l_prod_657);
      real l_basisEval_687 = RMul(0.6e1,l_prod_686);
      real l_prod_688 = RMul(l_varAcc_640,l_prod_661);
      real l_basisEval_689 = RMul(0.6e1,l_prod_688);
      real l_prod_690 = RMul(l_prod2_668,l_prod_646);
      real l_prod_691 = RMul(l_prod2_668,l_prod_649);
      real l_prod3_692 = RMul(l_prod2_668,l_varAcc_640);
      real l_prod_693 = RMul(l_prod3_692,l_prod_643);
      real l_prod4_694 = RMul(l_prod3_670,l_varAcc_642);
      real l_prod_695 = RMul(0.1e1,l_prod4_694);
      real l_prod_696 = RMul(0.1e1,l_prod_695);
      real l_basisEval_697 = RMul(0.2e1,l_prod_696);
      real l_prod_698 = RMul(l_varAcc_641,l_prod3_670);
      real l_prod_699 = RMul(0.1e1,l_prod_698);
      real l_basisEval_700 = RMul(0.2e1,l_prod_699);
      real l_prod_701 = RMul(l_prod2_660,l_prod2_653);
      real l_prod_702 = RMul(0.1e1,l_prod_701);
      real l_prod_703 = RMul(l_prod3_680,l_varAcc_642);
      real l_prod_704 = RMul(0.1e1,l_prod_703);
      real l_basisEval_705 = RMul(0.2e1,l_prod_704);
      real l_prod4_706 = RMul(l_prod3_680,l_varAcc_641);
      real l_prod_707 = RMul(l_prod4_706,0.1e1);
      real l_prod_708 = RMul(0.1e1,l_prod_707);
      real l_basisEval_709 = RMul(0.2e1,l_prod_708);
      real l_prod_710 = RMul(l_varAcc_640,l_prod_671);
      real l_prod_711 = RMul(l_varAcc_640,l_prod_674);
      real l_basisEval_712 = RMul(0.6e1,l_prod_711);
      real l_prod_713 = RMul(l_varAcc_640,l_prod_677);
      real l_basisEval_714 = RMul(0.6e1,l_prod_713);
      real l_prod_715 = RMul(l_varAcc_640,l_prod_681);
      real l_prod_716 = RMul(l_prod2_668,l_prod_654);
      real l_basisEval_717 = RMul(0.12e2,l_prod_716);
      real l_prod_718 = RMul(l_prod2_668,l_prod_657);
      real l_prod_719 = RMul(l_prod2_668,l_prod_661);
      real l_basisEval_720 = RMul(0.12e2,l_prod_719);
      real l_prod_721 = RMul(l_prod3_692,l_prod_646);
      real l_prod_722 = RMul(l_prod3_692,l_prod_649);
      real l_prod4_723 = RMul(l_prod3_692,l_varAcc_640);
      real l_prod_724 = RMul(l_prod4_723,l_prod_643);
      real l_basisEval_725 = RMul(0.1e1,l_prod_644);
      real l_basisEval_726 = RMul(0.1e1,l_prod_647);
      real l_basisEval_727 = RMul(0.2e1,l_prod_652);
      real l_basisEval_728 = RMul(0.1e1,l_prod_655);
      real l_basisEval_729 = RMul(0.3e1,l_prod_662);
      real l_basisEval_730 = RMul(0.2e1,l_prod_664);
      real l_basisEval_731 = RMul(0.3e1,l_prod_669);
      real l_basisEval_732 = RMul(0.1e1,l_prod_672);
      real l_basisEval_733 = RMul(0.3e1,l_prod_678);
      real l_basisEval_734 = RMul(0.4e1,l_prod_682);
      real l_basisEval_735 = RMul(0.2e1,l_prod_684);
      real l_basisEval_736 = RMul(0.4e1,l_prod_686);
      real l_basisEval_737 = RMul(0.3e1,l_prod_690);
      real l_basisEval_738 = RMul(0.6e1,l_prod_691);
      real l_basisEval_739 = RMul(0.4e1,l_prod_693);
      real l_basisEval_740 = RMul(0.1e1,l_prod_696);
      real l_basisEval_741 = RMul(0.3e1,l_prod_702);
      real l_basisEval_742 = RMul(0.4e1,l_prod_704);
      real l_basisEval_743 = RMul(0.5e1,l_prod_708);
      real l_basisEval_744 = RMul(0.2e1,l_prod_710);
      real l_basisEval_745 = RMul(0.3e1,l_prod_716);
      real l_basisEval_746 = RMul(0.6e1,l_prod_718);
      real l_basisEval_747 = RMul(0.4e1,l_prod_721);
      real l_basisEval_748 = RMul(0.5e1,l_prod_724);
      real l_basisEval_749 = RMul(0.1e1,l_prod_650);
      real l_basisEval_750 = RMul(0.3e1,l_prod_655);
      real l_basisEval_751 = RMul(0.1e1,l_prod_662);
      real l_basisEval_752 = RMul(0.2e1,l_prod_666);
      real l_basisEval_753 = RMul(0.4e1,l_prod_672);
      real l_basisEval_754 = RMul(0.3e1,l_prod_675);
      real l_basisEval_755 = RMul(0.1e1,l_prod_682);
      real l_basisEval_756 = RMul(0.2e1,l_prod_688);
      real l_basisEval_757 = RMul(0.6e1,l_prod_690);
      real l_basisEval_758 = RMul(0.3e1,l_prod_691);
      real l_basisEval_759 = RMul(0.5e1,l_prod_696);
      real l_basisEval_760 = RMul(0.4e1,l_prod_699);
      real l_basisEval_761 = RMul(0.1e1,l_prod_708);
      real l_basisEval_762 = RMul(0.2e1,l_prod_715);
      real l_basisEval_763 = RMul(0.3e1,l_prod_719);
      real l_basisEval_764 = RMul(0.4e1,l_prod_722);
      real l_basisEval_765 = RMul(0.6e1,l_prod_658);
      real l_basisEval_766 = RMul(0.2e1,l_prod_669);
      real l_basisEval_767 = RMul(0.6e1,l_prod_675);
      real l_basisEval_768 = RMul(0.2e1,l_prod_690);
      real l_basisEval_769 = RMul(0.2e1,l_prod_693);
      real l_basisEval_770 = RMul(0.12e2,l_prod_702);
      real l_basisEval_771 = RMul(0.2e1,l_prod_721);
      real l_basisEval_772 = RMul(0.2e1,l_prod_724);
      real l_basisEval_773 = RMul(0.1e1,l_prod_652);
      real l_basisEval_774 = RMul(0.1e1,l_prod_669);
      real l_basisEval_775 = RMul(0.6e1,l_prod_678);
      real l_basisEval_776 = RMul(0.3e1,l_prod_684);
      real l_basisEval_777 = RMul(0.3e1,l_prod_688);
      real l_basisEval_778 = RMul(0.2e1,l_prod_691);
      real l_basisEval_779 = RMul(0.1e1,l_prod_693);
      real l_basisEval_780 = RMul(0.4e1,l_prod_710);
      real l_basisEval_781 = RMul(0.4e1,l_prod_715);
      real l_basisEval_782 = RMul(0.2e1,l_prod_722);
      real l_basisEval_783 = RMul(0.1e1,l_prod_724);
      real l_vdot_784 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_725,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_651,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_728,l_basisEval_659)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_729,0.e0,l_basisEval_730,RMul(0.4e1,l_prod_666))),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_731,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_732,l_basisEval_676)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_733,l_basisEval_734,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_736,l_basisEval_689,0.e0,l_basisEval_737)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_738,0.e0,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_743,0.e0,l_basisEval_744,RMul(0.4e1,l_prod_711))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_714,RMul(0.8e1,l_prod_715),0.e0,l_basisEval_745)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_746,RMul(0.9e1,l_prod_719),0.e0,l_basisEval_747)),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.8e1,l_prod_722),0.e0,l_basisEval_748,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_785 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_648,l_basisEval_749)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_750,l_basisEval_659,l_basisEval_751)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,RMul(0.4e1,l_prod_664),l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_731,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_753,l_basisEval_754,l_basisEval_679)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_755,0.e0,l_basisEval_685,l_basisEval_736)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_756,0.e0,l_basisEval_757,l_basisEval_758)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_739,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.8e1,l_prod_710),l_basisEval_712,RMul(0.4e1,l_prod_713))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_762,0.e0,RMul(0.9e1,l_prod_716),l_basisEval_746)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_763,0.e0,RMul(0.8e1,l_prod_721),l_basisEval_764)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_748,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_786 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,l_basisEval_648)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_651,0.e0,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_750,RMul(0.4e1,l_prod_658),l_basisEval_729)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_730,l_basisEval_752)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_753,l_basisEval_767,l_basisEval_775,l_basisEval_734)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_776,l_basisEval_736)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_777,0.e0,0.e0,l_basisEval_768)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_778,0.e0,0.e0,l_basisEval_779)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_759,RMul(0.8e1,l_prod_699),RMul(0.9e1,l_prod_702))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.8e1,l_prod_704),l_basisEval_743,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_780,l_basisEval_712,l_basisEval_714,l_basisEval_781)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,0.e0,l_basisEval_745,RMul(0.4e1,l_prod_718))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_763,0.e0,0.e0,l_basisEval_771)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_782,0.e0,0.e0,l_basisEval_783)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_787 = <tensor[3,3]>[RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,l_basisEval_645,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_648,l_basisEval_651,RMul(0.6e1,l_prod_652))),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_656,l_basisEval_659,l_basisEval_663)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_665,l_basisEval_667,RMul(0.12e2,l_prod_669),0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_673,l_basisEval_676)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_679,l_basisEval_683,l_basisEval_685,l_basisEval_687)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_689,RMul(0.12e2,l_prod_690),RMul(0.12e2,l_prod_691),RMul(0.20e2,l_prod_693))),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_697,l_basisEval_700,RMul(0.2e1,l_prod_702))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_705,l_basisEval_709,RMul(0.6e1,l_prod_710),l_basisEval_712)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_714,RMul(0.6e1,l_prod_715),l_basisEval_717,RMul(0.12e2,l_prod_718))),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_720,RMul(0.20e2,l_prod_721),RMul(0.20e2,l_prod_722),RMul(0.30e2,l_prod_724))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_784,l_vdot_785,l_vdot_784,RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,l_basisEval_645,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_648,RMul(0.6e1,l_prod_650),0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_727,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,l_basisEval_656,l_basisEval_765)),RAdd(VDot<4,4>(v_625,VEC4(RMul(0.12e2,l_prod_662),0.e0,0.e0,l_basisEval_730)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_667,0.e0,0.e0,l_basisEval_766)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,l_basisEval_673,l_basisEval_767,RMul(0.12e2,l_prod_678))),RAdd(VDot<4,4>(v_629,VEC4(RMul(0.20e2,l_prod_682),0.e0,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_687,RMul(0.12e2,l_prod_688),0.e0,0.e0)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_768,l_basisEval_738,0.e0,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_769,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,l_basisEval_697,RMul(0.6e1,l_prod_699))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_770,RMul(0.20e2,l_prod_704),RMul(0.30e2,l_prod_708),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,l_basisEval_744,l_basisEval_712,RMul(0.12e2,l_prod_713))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.20e2,l_prod_715),0.e0,0.e0,RMul(0.2e1,l_prod_716))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_746,l_basisEval_720,0.e0,0.e0)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_771,RMul(0.6e1,l_prod_722),0.e0,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_772,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_786,l_vdot_785,l_vdot_786,RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_645,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_647),l_basisEval_651)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(RMul(0.12e2,l_prod_655),l_basisEval_765,l_basisEval_663,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_665,l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_766,0.e0,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_672))),RAdd(VDot<4,4>(v_628,VEC4(RMul(0.12e2,l_prod_675),l_basisEval_775,l_basisEval_683,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,RMul(0.12e2,l_prod_684),l_basisEval_687,l_basisEval_756)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_757,l_basisEval_778)),RAdd(VDot<4,4>(v_631,VEC4(0.e0,0.e0,l_basisEval_769,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.30e2,l_prod_696),RMul(0.20e2,l_prod_699),l_basisEval_770,RMul(0.6e1,l_prod_704))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_709,0.e0,0.e0,RMul(0.20e2,l_prod_710))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.12e2,l_prod_711),l_basisEval_714,l_basisEval_762,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_717,l_basisEval_746,RMul(0.2e1,l_prod_719))),RAdd(VDot<4,4>(v_637,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_721),l_basisEval_782)),RAdd(VDot<4,4>(v_638,VEC4(0.e0,0.e0,l_basisEval_772,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      (l_evals_788,l_E_789) = EigenVecs3x3(TensorRef<[3,3]>(t_787));
      &tensor[3] l__t_790 = Subscript<tensor[3][3]>(l_E_789,2);
      real l__t_791 = Subscript<real[3]>(l_evals_788,2);
      &tensor[3] l__t_792 = Subscript<tensor[3][3]>(l_E_789,1);
      real l__t_793 = Subscript<real[3]>(l_evals_788,1);
      vec3{4} v_794 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_795 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_796 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_797 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_792),LOAD_0(l__t_792));
      vec3{4} v_798 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_792),LOAD_0(l__t_792));
      vec3{4} v_799 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_792),LOAD_0(l__t_792));
      real l_basisEval_800 = RMul(0.2e1,l_prod_686);
      real l_basisEval_801 = RMul(0.2e1,l_prod_711);
      real l_basisEval_802 = RMul(0.2e1,l_prod_713);
      real l_prod_803 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_694,l_varAcc_642)));
      real l_basisEval_804 = RMul(0.1e1,l_prod_803);
      real l_prod_805 = RMul(0.1e1,RMul(l_varAcc_641,l_prod4_694));
      real l_prod_806 = RMul(0.1e1,RMul(l_prod2_660,l_prod3_670));
      real l_prod_807 = RMul(0.1e1,RMul(l_prod3_680,l_prod2_653));
      real l_prod_808 = RMul(0.1e1,RMul(l_prod4_706,l_varAcc_642));
      real l_prod_809 = RMul(0.1e1,RMul(RMul(l_prod4_706,l_varAcc_641),0.1e1));
      real l_basisEval_810 = RMul(0.1e1,l_prod_809);
      real l_prod_811 = RMul(l_varAcc_640,l_prod_695);
      real l_prod_812 = RMul(l_varAcc_640,l_prod_698);
      real l_basisEval_813 = RMul(0.2e1,l_prod_812);
      real l_prod_814 = RMul(l_varAcc_640,l_prod_701);
      real l_prod_815 = RMul(l_varAcc_640,l_prod_703);
      real l_basisEval_816 = RMul(0.2e1,l_prod_815);
      real l_prod_817 = RMul(l_varAcc_640,l_prod_707);
      real l_prod_818 = RMul(l_prod2_668,l_prod_671);
      real l_prod_819 = RMul(l_prod2_668,l_prod_674);
      real l_basisEval_820 = RMul(0.3e1,l_prod_819);
      real l_prod_821 = RMul(l_prod2_668,l_prod_677);
      real l_basisEval_822 = RMul(0.3e1,l_prod_821);
      real l_prod_823 = RMul(l_prod2_668,l_prod_681);
      real l_prod_824 = RMul(l_prod3_692,l_prod_654);
      real l_prod_825 = RMul(l_prod3_692,l_prod_657);
      real l_prod_826 = RMul(l_prod3_692,l_prod_661);
      real l_prod_827 = RMul(l_prod4_723,l_prod_646);
      real l_prod_828 = RMul(l_prod4_723,l_prod_649);
      real l_prod_829 = RMul(RMul(l_prod4_723,l_varAcc_640),l_prod_643);
      real l_basisEval_830 = RMul(0.2e1,l_prod_718);
      real l_basisEval_831 = RMul(0.3e1,l_prod_814);
      real l_basisEval_832 = RMul(0.2e1,l_prod_825);
      real l_basisEval_833 = RMul(0.1e1,l_prod_829);
      vec3{4} v_834 = VEC3{4}(RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_749,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_728,RMul(0.1e1,l_prod_658))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_751,l_basisEval_730,l_basisEval_752,l_basisEval_731)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_732,RMul(0.1e1,l_prod_675),RMul(0.1e1,l_prod_678))),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_755,l_basisEval_735,l_basisEval_800,l_basisEval_756)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_737,l_basisEval_758,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_740,RMul(0.1e1,l_prod_699),RMul(0.1e1,l_prod_702))),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_704),l_basisEval_761,l_basisEval_744,l_basisEval_801)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_802,l_basisEval_762,l_basisEval_745,RMul(0.3e1,l_prod_718))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_763,l_basisEval_747,l_basisEval_764,l_basisEval_748)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_804)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_805),RMul(0.1e1,l_prod_806),RMul(0.1e1,l_prod_807),RMul(0.1e1,l_prod_808))),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_810,RMul(0.2e1,l_prod_811),l_basisEval_813,RMul(0.2e1,l_prod_814))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_816,RMul(0.2e1,l_prod_817),RMul(0.3e1,l_prod_818),l_basisEval_820)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_822,RMul(0.3e1,l_prod_823),RMul(0.4e1,l_prod_824),RMul(0.4e1,l_prod_825))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.4e1,l_prod_826),RMul(0.5e1,l_prod_827),RMul(0.5e1,l_prod_828),RMul(0.6e1,l_prod_829))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_726,l_basisEval_651,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_773,0.e0,0.e0,l_basisEval_728)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_659,l_basisEval_729,0.e0,RMul(0.1e1,l_prod_664))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_752,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_732,l_basisEval_676,l_basisEval_733)),RAdd(VDot<4,4>(v_625,VEC4(l_basisEval_734,0.e0,RMul(0.1e1,l_prod_684),l_basisEval_800)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_777,0.e0,RMul(0.1e1,l_prod_690),l_basisEval_778)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_779,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_629,VEC4(l_basisEval_743,0.e0,RMul(0.1e1,l_prod_710),l_basisEval_801)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.3e1,l_prod_713),l_basisEval_781,0.e0,RMul(0.1e1,l_prod_716))),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_830,l_basisEval_763,0.e0,RMul(0.1e1,l_prod_721))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_782,0.e0,l_basisEval_783,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_804,RMul(0.2e1,l_prod_805),RMul(0.3e1,l_prod_806))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.4e1,l_prod_807),RMul(0.5e1,l_prod_808),RMul(0.6e1,l_prod_809),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_811),l_basisEval_813,l_basisEval_831,RMul(0.4e1,l_prod_815))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.5e1,l_prod_817),0.e0,RMul(0.1e1,l_prod_818),RMul(0.2e1,l_prod_819))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_822,RMul(0.4e1,l_prod_823),0.e0,RMul(0.1e1,l_prod_824))),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_832,RMul(0.3e1,l_prod_826),0.e0,RMul(0.1e1,l_prod_827))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.2e1,l_prod_828),0.e0,l_basisEval_833,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,l_basisEval_725,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_648,l_basisEval_749,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,l_basisEval_750,l_basisEval_659)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_751,0.e0,l_basisEval_730,RMul(0.1e1,l_prod_666))),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_774,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(l_basisEval_753,l_basisEval_754,l_basisEval_679,l_basisEval_755)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_776,l_basisEval_800,RMul(0.1e1,l_prod_688))),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_768,RMul(0.1e1,l_prod_691),0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_779,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_780,RMul(0.3e1,l_prod_711),l_basisEval_802)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_715),0.e0,l_basisEval_745,l_basisEval_830)),RAdd(VDot<4,4>(v_631,VEC4(RMul(0.1e1,l_prod_719),0.e0,l_basisEval_771,RMul(0.1e1,l_prod_722))),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_783,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.6e1,l_prod_803),RMul(0.5e1,l_prod_805),RMul(0.4e1,l_prod_806),RMul(0.3e1,l_prod_807))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.2e1,l_prod_808),l_basisEval_810,0.e0,RMul(0.5e1,l_prod_811))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.4e1,l_prod_812),l_basisEval_831,l_basisEval_816,RMul(0.1e1,l_prod_817))),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.4e1,l_prod_818),l_basisEval_820,RMul(0.2e1,l_prod_821))),RAdd(VDot<4,4>(v_637,VEC4(RMul(0.1e1,l_prod_823),0.e0,RMul(0.3e1,l_prod_824),l_basisEval_832)),RAdd(VDot<4,4>(v_638,VEC4(RMul(0.1e1,l_prod_826),0.e0,RMul(0.2e1,l_prod_827),RMul(0.1e1,l_prod_828))),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_833,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)))))))))))))))))))))));
      v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_794),l__t_791),RDiv(VIndex<3,4,1>(v_794),l__t_791),RDiv(VIndex<3,4,2>(v_794),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_797),l__t_793),RDiv(VIndex<3,4,1>(v_797),l__t_793),RDiv(VIndex<3,4,2>(v_797),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_795),l__t_791),RDiv(VIndex<3,4,1>(v_795),l__t_791),RDiv(VIndex<3,4,2>(v_795),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_798),l__t_793),RDiv(VIndex<3,4,1>(v_798),l__t_793),RDiv(VIndex<3,4,2>(v_798),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_796),l__t_791),RDiv(VIndex<3,4,1>(v_796),l__t_791),RDiv(VIndex<3,4,2>(v_796),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_799),l__t_793),RDiv(VIndex<3,4,1>(v_799),l__t_793),RDiv(VIndex<3,4,2>(v_799),l__t_793)))),v_834));
    } else {
      tensor[3][3] l_E_874;
      real[3] l_evals_873;
      real l_r_836 = TensorIndex<&tensor[3,3],[0,0]>(TensorRef<[3,3]>(globals.rot));
      real l_r_837 = RMul(l_r_836,-0.1e1);
      real l_r_838 = TensorIndex<&tensor[3,3],[1,0]>(TensorRef<[3,3]>(globals.rot));
      real l_r_839 = RMul(l_r_838,0.e0);
      real l_r_840 = TensorIndex<&tensor[3,3],[2,0]>(TensorRef<[3,3]>(globals.rot));
      real l_r_841 = RMul(l_r_840,0.e0);
      real l_r_842 = RAdd(RAdd(l_r_837,l_r_839),l_r_841);
      real l_r_843 = RMul(l_r_836,0.e0);
      real l_r_844 = RMul(l_r_838,-0.2e1);
      real l_r_845 = RAdd(RAdd(l_r_843,l_r_844),l_r_841);
      real l_r_846 = RMul(l_r_840,-0.3e1);
      real l_r_847 = RAdd(RAdd(l_r_843,l_r_839),l_r_846);
      real l_r_848 = TensorIndex<&tensor[3,3],[0,1]>(TensorRef<[3,3]>(globals.rot));
      real l_r_849 = RMul(l_r_848,-0.1e1);
      real l_r_850 = TensorIndex<&tensor[3,3],[1,1]>(TensorRef<[3,3]>(globals.rot));
      real l_r_851 = RMul(l_r_850,0.e0);
      real l_r_852 = TensorIndex<&tensor[3,3],[2,1]>(TensorRef<[3,3]>(globals.rot));
      real l_r_853 = RMul(l_r_852,0.e0);
      real l_r_854 = RAdd(RAdd(l_r_849,l_r_851),l_r_853);
      real l_r_855 = RMul(l_r_848,0.e0);
      real l_r_856 = RMul(l_r_850,-0.2e1);
      real l_r_857 = RAdd(RAdd(l_r_855,l_r_856),l_r_853);
      real l_r_858 = RMul(l_r_852,-0.3e1);
      real l_r_859 = RAdd(RAdd(l_r_855,l_r_851),l_r_858);
      real l_r_860 = TensorIndex<&tensor[3,3],[0,2]>(TensorRef<[3,3]>(globals.rot));
      real l_r_861 = RMul(l_r_860,-0.1e1);
      real l_r_862 = TensorIndex<&tensor[3,3],[1,2]>(TensorRef<[3,3]>(globals.rot));
      real l_r_863 = RMul(l_r_862,0.e0);
      real l_r_864 = TensorIndex<&tensor[3,3],[2,2]>(TensorRef<[3,3]>(globals.rot));
      real l_r_865 = RMul(l_r_864,0.e0);
      real l_r_866 = RAdd(RAdd(l_r_861,l_r_863),l_r_865);
      real l_r_867 = RMul(l_r_860,0.e0);
      real l_r_868 = RMul(l_r_862,-0.2e1);
      real l_r_869 = RAdd(RAdd(l_r_867,l_r_868),l_r_865);
      real l_r_870 = RMul(l_r_864,-0.3e1);
      real l_r_871 = RAdd(RAdd(l_r_867,l_r_863),l_r_870);
      tensor[3,3] t_872 = <tensor[3,3]>[RAdd(RAdd(RMul(l_r_842,l_r_836),RMul(l_r_845,l_r_838)),RMul(l_r_847,l_r_840)),RAdd(RAdd(RMul(l_r_842,l_r_848),RMul(l_r_845,l_r_850)),RMul(l_r_847,l_r_852)),RAdd(RAdd(RMul(l_r_842,l_r_860),RMul(l_r_845,l_r_862)),RMul(l_r_847,l_r_864)),RAdd(RAdd(RMul(l_r_854,l_r_836),RMul(l_r_857,l_r_838)),RMul(l_r_859,l_r_840)),RAdd(RAdd(RMul(l_r_854,l_r_848),RMul(l_r_857,l_r_850)),RMul(l_r_859,l_r_852)),RAdd(RAdd(RMul(l_r_854,l_r_860),RMul(l_r_857,l_r_862)),RMul(l_r_859,l_r_864)),RAdd(RAdd(RMul(l_r_866,l_r_836),RMul(l_r_869,l_r_838)),RMul(l_r_871,l_r_840)),RAdd(RAdd(RMul(l_r_866,l_r_848),RMul(l_r_869,l_r_850)),RMul(l_r_871,l_r_852)),RAdd(RAdd(RMul(l_r_866,l_r_860),RMul(l_r_869,l_r_862)),RMul(l_r_871,l_r_864))];
      (l_evals_873,l_E_874) = EigenVecs3x3(TensorRef<[3,3]>(t_872));
      &tensor[3] l__t_875 = Subscript<tensor[3][3]>(l_E_874,2);
      real l__t_876 = Subscript<real[3]>(l_evals_873,2);
      &tensor[3] l__t_877 = Subscript<tensor[3][3]>(l_E_874,1);
      real l__t_878 = Subscript<real[3]>(l_evals_873,1);
      vec3{4} v_879 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_875),LOAD_0(l__t_875));
      vec3{4} v_880 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_875),LOAD_0(l__t_875));
      vec3{4} v_881 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_875),LOAD_0(l__t_875));
      vec3{4} v_882 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_877),LOAD_0(l__t_877));
      vec3{4} v_883 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_877),LOAD_0(l__t_877));
      vec3{4} v_884 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_877),LOAD_0(l__t_877));
      real l_vdot_885 = VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[0]>(TensorRef<[3,3]>(globals.rot))),v_72);
      real l_vdot_886 = VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[1]>(TensorRef<[3,3]>(globals.rot))),v_72);
      real l_vdot_887 = VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[2]>(TensorRef<[3,3]>(globals.rot))),v_72);
      vec3{4} v_888 = VEC3{4}(RAdd(RAdd(RMul(l_r_837,l_vdot_885),RMul(l_r_844,l_vdot_886)),RMul(l_r_846,l_vdot_887)),RAdd(RAdd(RMul(l_r_849,l_vdot_885),RMul(l_r_856,l_vdot_886)),RMul(l_r_858,l_vdot_887)),RAdd(RAdd(RMul(l_r_861,l_vdot_885),RMul(l_r_868,l_vdot_886)),RMul(l_r_870,l_vdot_887)));
      v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_879),l__t_876),RDiv(VIndex<3,4,1>(v_879),l__t_876),RDiv(VIndex<3,4,2>(v_879),l__t_876)),VEC3{4}(RDiv(VIndex<3,4,0>(v_882),l__t_878),RDiv(VIndex<3,4,1>(v_882),l__t_878),RDiv(VIndex<3,4,2>(v_882),l__t_878)))),v_888),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_880),l__t_876),RDiv(VIndex<3,4,1>(v_880),l__t_876),RDiv(VIndex<3,4,2>(v_880),l__t_876)),VEC3{4}(RDiv(VIndex<3,4,0>(v_883),l__t_878),RDiv(VIndex<3,4,1>(v_883),l__t_878),RDiv(VIndex<3,4,2>(v_883),l__t_878)))),v_888),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_881),l__t_876),RDiv(VIndex<3,4,1>(v_881),l__t_876),RDiv(VIndex<3,4,2>(v_881),l__t_876)),VEC3{4}(RDiv(VIndex<3,4,0>(v_884),l__t_878),RDiv(VIndex<3,4,1>(v_884),l__t_878),RDiv(VIndex<3,4,2>(v_884),l__t_878)))),v_888));
    }
    real l_op1_e3_l_8_889 = Sqrt(VDot<3,4>(v_835,v_835));
    real l__t_890 = RMul(globals.maxAlpha,RClamp(0.e0,0.1e1,RMul(0.15e1,RSub(0.1e1,RDiv(Abs<real>(l_op1_e3_l_8_889),globals.thick)))));
    if (EQ<real>(l__t_890,0.e0)) {
      self.rayN = l_rayN_69;
      active;
    }
    real l__t_891 = MathFn<pow>(RSub(0.1e1,l__t_890),self.alphaFix);
    if (NEQ<real>(self.phKs,0.e0)) {
      vec3{4} v_892 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.eyeDir)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
      l_scomp_893 = MathFn<pow>(Abs<real>(RMul(RDiv(0.1e1,Sqrt(VDot<3,4>(v_892,v_892))),VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_8_889),v_835)),v_892))),self.phSp);
    } else {
      l_scomp_893 = 0.e0;
    }
    real l_cmin_894 = VIndex<2,2,0>(LOAD_0(TensorRef<[2]>(globals.cminmax)));
    real l_cmax_895 = VIndex<2,2,1>(LOAD_0(TensorRef<[2]>(globals.cminmax)));
    vec3{4} v_896 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    if (NEQ<real>(l_cmin_894,l_cmax_895)) {
      tensor[3,2] l_voxels_1109;
      vec3{4} v_897 = VAdd<3,4>(v_72,v_835);
      int l_mulRes_898 = IMul(globals._t,84);
      int t_899 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_898);
      int t_900 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,1));
      int t_901 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,2));
      int t_902 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,3));
      int t_903 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,4));
      int t_904 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,5));
      int t_905 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,6));
      int t_906 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,7));
      int t_907 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,8));
      int t_908 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,9));
      int t_909 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,10));
      int t_910 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,11));
      int t_911 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,12));
      int t_912 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,13));
      int t_913 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,14));
      int t_914 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,15));
      int t_915 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,16));
      int t_916 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,17));
      int t_917 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,18));
      int t_918 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,19));
      int t_919 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,20));
      int t_920 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,21));
      int t_921 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,22));
      int t_922 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,23));
      int t_923 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,24));
      int t_924 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,25));
      int t_925 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,26));
      int t_926 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,27));
      int t_927 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,28));
      int t_928 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,29));
      int t_929 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,30));
      int t_930 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,31));
      int t_931 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,32));
      int t_932 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,33));
      int t_933 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,34));
      int t_934 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,35));
      int t_935 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,36));
      int t_936 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,37));
      int t_937 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,38));
      int t_938 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,39));
      int t_939 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,40));
      int t_940 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,41));
      int t_941 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,42));
      int t_942 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,43));
      int t_943 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,44));
      int t_944 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,45));
      int t_945 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,46));
      int t_946 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,47));
      int t_947 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,48));
      int t_948 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,49));
      int t_949 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,50));
      int t_950 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,51));
      int t_951 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,52));
      int t_952 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,53));
      int t_953 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,54));
      int t_954 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,55));
      int t_955 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,56));
      int t_956 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,57));
      int t_957 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,58));
      int t_958 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,59));
      int t_959 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,60));
      int t_960 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,61));
      int t_961 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,62));
      int t_962 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,63));
      int t_963 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,64));
      int t_964 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,65));
      int t_965 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,66));
      int t_966 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,67));
      int t_967 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,68));
      int t_968 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,69));
      int t_969 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,70));
      int t_970 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,71));
      int t_971 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,72));
      int t_972 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,73));
      int t_973 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,74));
      int t_974 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,75));
      int t_975 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,76));
      int t_976 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,77));
      int t_977 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,78));
      int t_978 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,79));
      int t_979 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,80));
      int t_980 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,81));
      int t_981 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,82));
      int t_982 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,83));
      real t_983 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_982));
      real t_984 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_981));
      real t_985 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_980));
      real t_986 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_979));
      real t_987 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_978));
      real t_988 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_977));
      real t_989 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_976));
      real t_990 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_975));
      real t_991 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_974));
      real t_992 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_973));
      real t_993 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_972));
      real t_994 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_971));
      real t_995 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_970));
      real t_996 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_969));
      real t_997 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_968));
      real t_998 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_967));
      real t_999 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_966));
      real t_1000 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_965));
      real t_1001 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_964));
      real t_1002 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_963));
      real t_1003 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_962));
      real t_1004 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_961));
      real t_1005 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_960));
      real t_1006 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_959));
      real t_1007 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_958));
      real t_1008 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_957));
      real t_1009 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_956));
      real t_1010 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_955));
      real t_1011 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_954));
      real t_1012 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_953));
      real t_1013 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_952));
      real t_1014 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_951));
      real t_1015 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_950));
      real t_1016 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_949));
      real t_1017 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_948));
      real t_1018 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_947));
      real t_1019 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_946));
      real t_1020 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_945));
      real t_1021 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_944));
      real t_1022 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_943));
      real t_1023 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_942));
      real t_1024 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_941));
      real t_1025 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_940));
      real t_1026 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_939));
      real t_1027 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_938));
      real t_1028 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_937));
      real t_1029 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_936));
      real t_1030 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_935));
      real t_1031 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_934));
      real t_1032 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_933));
      real t_1033 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_932));
      real t_1034 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_931));
      real t_1035 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_930));
      real t_1036 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_929));
      real t_1037 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_928));
      real t_1038 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_927));
      real t_1039 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_926));
      real t_1040 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_925));
      real t_1041 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_924));
      real t_1042 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_923));
      real t_1043 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_922));
      real t_1044 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_921));
      real t_1045 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_920));
      real t_1046 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_919));
      real t_1047 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_918));
      real t_1048 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_917));
      real t_1049 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_916));
      real t_1050 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_915));
      real t_1051 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_914));
      real t_1052 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_913));
      real t_1053 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_912));
      real t_1054 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_911));
      real t_1055 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_910));
      real t_1056 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_909));
      real t_1057 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_908));
      real t_1058 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_907));
      real t_1059 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_906));
      real t_1060 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_905));
      real t_1061 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_904));
      real t_1062 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_903));
      real t_1063 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_902));
      real t_1064 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_901));
      real t_1065 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_900));
      real t_1066 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_899));
      real l_varAcc_1067 = VIndex<3,4,0>(v_897);
      real l_varAcc_1068 = VIndex<3,4,1>(v_897);
      real l_varAcc_1069 = VIndex<3,4,2>(v_897);
      real l_prod_1070 = RMul(0.1e1,0.1e1);
      real l_prod_1071 = RMul(0.1e1,l_varAcc_1069);
      real l_prod_1072 = RMul(l_varAcc_1068,0.1e1);
      real l_prod2_1073 = RMul(l_varAcc_1069,l_varAcc_1069);
      real l_prod_1074 = RMul(0.1e1,l_prod2_1073);
      real l_prod_1075 = RMul(l_varAcc_1068,l_varAcc_1069);
      real l_prod2_1076 = RMul(l_varAcc_1068,l_varAcc_1068);
      real l_prod_1077 = RMul(l_prod2_1076,0.1e1);
      real l_prod2_1078 = RMul(l_varAcc_1067,l_varAcc_1067);
      real l_prod3_1079 = RMul(l_prod2_1073,l_varAcc_1069);
      real l_prod_1080 = RMul(0.1e1,l_prod3_1079);
      real l_prod_1081 = RMul(l_varAcc_1068,l_prod2_1073);
      real l_prod_1082 = RMul(l_prod2_1076,l_varAcc_1069);
      real l_prod3_1083 = RMul(l_prod2_1076,l_varAcc_1068);
      real l_prod_1084 = RMul(l_prod3_1083,0.1e1);
      real l_prod3_1085 = RMul(l_prod2_1078,l_varAcc_1067);
      real l_prod4_1086 = RMul(l_prod3_1079,l_varAcc_1069);
      real l_prod_1087 = RMul(0.1e1,l_prod4_1086);
      real l_prod_1088 = RMul(l_varAcc_1068,l_prod3_1079);
      real l_prod_1089 = RMul(l_prod2_1076,l_prod2_1073);
      real l_prod_1090 = RMul(l_prod3_1083,l_varAcc_1069);
      real l_prod4_1091 = RMul(l_prod3_1083,l_varAcc_1068);
      real l_prod_1092 = RMul(l_prod4_1091,0.1e1);
      real l_prod4_1093 = RMul(l_prod3_1085,l_varAcc_1067);
      real l_prod5_1094 = RMul(l_prod4_1086,l_varAcc_1069);
      real l_prod_1095 = RMul(0.1e1,l_prod5_1094);
      real l_prod_1096 = RMul(l_varAcc_1068,l_prod4_1086);
      real l_prod_1097 = RMul(l_prod2_1076,l_prod3_1079);
      real l_prod_1098 = RMul(l_prod3_1083,l_prod2_1073);
      real l_prod_1099 = RMul(l_prod4_1091,l_varAcc_1069);
      real l_prod5_1100 = RMul(l_prod4_1091,l_varAcc_1068);
      real l_prod_1101 = RMul(l_prod5_1100,0.1e1);
      real l_prod5_1102 = RMul(l_prod4_1093,l_varAcc_1067);
      real l_imgPos_1103 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.cmap),RAdd(0.e0,RMul(RDiv(RSub(RAdd(VDot<4,4>(VEC4(t_1062,t_1061,t_1060,t_1059),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1074)),RMul(0.1e1,RMul(0.1e1,l_prod_1075)),RMul(0.1e1,RMul(0.1e1,l_prod_1077)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1071)))),RAdd(VDot<4,4>(VEC4(t_1058,t_1057,t_1056,t_1055),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1072)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1070)),RMul(0.1e1,RMul(0.1e1,l_prod_1080)),RMul(0.1e1,RMul(0.1e1,l_prod_1081)))),RAdd(VDot<4,4>(VEC4(t_1054,t_1053,t_1052,t_1051),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1082)),RMul(0.1e1,RMul(0.1e1,l_prod_1084)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1074)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1075)))),RAdd(VDot<4,4>(VEC4(t_1050,t_1049,t_1048,t_1047),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1077)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1071)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1072)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1070)))),RAdd(VDot<4,4>(VEC4(t_1046,t_1045,t_1044,t_1043),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1087)),RMul(0.1e1,RMul(0.1e1,l_prod_1088)),RMul(0.1e1,RMul(0.1e1,l_prod_1089)),RMul(0.1e1,RMul(0.1e1,l_prod_1090)))),RAdd(VDot<4,4>(VEC4(t_1042,t_1041,t_1040,t_1039),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1092)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1080)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1081)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1082)))),RAdd(VDot<4,4>(VEC4(t_1038,t_1037,t_1036,t_1035),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1084)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1074)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1075)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1077)))),RAdd(VDot<4,4>(VEC4(t_1034,t_1033,t_1032,t_1031),VEC4(RMul(0.1e1,RMul(l_prod3_1085,l_prod_1071)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1072)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1070)),RMul(0.1e1,RMul(0.1e1,l_prod_1095)))),RAdd(VDot<4,4>(VEC4(t_1030,t_1029,t_1028,t_1027),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1096)),RMul(0.1e1,RMul(0.1e1,l_prod_1097)),RMul(0.1e1,RMul(0.1e1,l_prod_1098)),RMul(0.1e1,RMul(0.1e1,l_prod_1099)))),RAdd(VDot<4,4>(VEC4(t_1026,t_1025,t_1024,t_1023),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1101)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1087)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1088)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1089)))),RAdd(VDot<4,4>(VEC4(t_1022,t_1021,t_1020,t_1019),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1090)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1092)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1080)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1081)))),RAdd(VDot<4,4>(VEC4(t_1018,t_1017,t_1016,t_1015),VEC4(RMul(0.1e1,RMul(l_prod2_1078,l_prod_1082)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1084)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1074)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1075)))),RAdd(VDot<4,4>(VEC4(t_1014,t_1013,t_1012,t_1011),VEC4(RMul(0.1e1,RMul(l_prod3_1085,l_prod_1077)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1071)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1072)),RMul(0.1e1,RMul(l_prod5_1102,l_prod_1070)))),RAdd(VDot<4,4>(VEC4(t_1010,t_1009,t_1008,t_1007),VEC4(RMul(0.1e1,RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1094,l_varAcc_1069)))),RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_1068,l_prod5_1094))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod2_1076,l_prod4_1086))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod3_1083,l_prod3_1079))))),RAdd(VDot<4,4>(VEC4(t_1006,t_1005,t_1004,t_1003),VEC4(RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_1091,l_prod2_1073))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1100,l_varAcc_1069))),RMul(0.1e1,RMul(0.1e1,RMul(RMul(l_prod5_1100,l_varAcc_1068),0.1e1))),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1095)))),RAdd(VDot<4,4>(VEC4(t_1002,t_1001,t_1000,t_999),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1096)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1097)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1098)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1099)))),RAdd(VDot<4,4>(VEC4(t_998,t_997,t_996,t_995),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1101)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1087)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1088)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1089)))),RAdd(VDot<4,4>(VEC4(t_994,t_993,t_992,t_991),VEC4(RMul(0.1e1,RMul(l_prod2_1078,l_prod_1090)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1092)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1080)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1081)))),RAdd(VDot<4,4>(VEC4(t_990,t_989,t_988,t_987),VEC4(RMul(0.1e1,RMul(l_prod3_1085,l_prod_1082)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1084)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1074)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1075)))),RAdd(VDot<4,4>(VEC4(t_986,t_985,t_984,t_983),VEC4(RMul(0.1e1,RMul(l_prod4_1093,l_prod_1077)),RMul(0.1e1,RMul(l_prod5_1102,l_prod_1071)),RMul(0.1e1,RMul(l_prod5_1102,l_prod_1072)),RMul(0.1e1,RMul(RMul(l_prod5_1102,l_varAcc_1067),l_prod_1070)))),VDot<4,4>(VEC4(t_1066,t_1065,t_1064,t_1063),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1070)),RMul(0.1e1,RMul(0.1e1,l_prod_1071)),RMul(0.1e1,RMul(0.1e1,l_prod_1072)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1070)))))))))))))))))))))))),l_cmin_894),RSub(l_cmax_895,l_cmin_894)),RSub(0.1e1,0.e0)))),Translate<IMAGE1D<double[3]>>(globals.cmap));
      real l_nd_1104 = RFloor(l_imgPos_1103);
      real l_f_1105 = RSub(l_imgPos_1103,l_nd_1104);
      int l_n_1106 = RealToInt(l_nd_1104);
      if (IndexInside<IMAGE1D<double[3]>,2>(l_n_1106,globals.cmap)) {
        int l_offp_1107 = IMul(3,l_n_1106);
        int l_offp_1108 = IMul(3,IAdd(l_n_1106,1));
        l_voxels_1109 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1107),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1108),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1107,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1108,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1107,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1108,2))];
      } else {
        int l_offp_1110 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,l_n_1106));
        int l_offp_1111 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,IAdd(l_n_1106,1)));
        l_voxels_1109 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1110),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1111),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1110,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1111,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1110,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1111,2))];
      }
      vec2 v_1112 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_1105,RSub(l_f_1105,0.1e1)),VEC2(-0.1e1,0.1e1)));
      v_1113 = VEC3{4}(VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_1109)),v_1112),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_1109)),v_1112),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_1109)),v_1112));
    } else {
      v_1113 = v_896;
    }
    real l_op1_e3_l_24_1114 = VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_8_889),v_835)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
    real l_op1_e3_l_33_1115 = RAdd(self.phKa,RMul(self.phKd,RMul(l_op1_e3_l_24_1114,l_op1_e3_l_24_1114)));
    vec3{4} v_1116 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.mcNear)),VScale<3,4>(RDiv(RSub(l_rayN_69,globals.camNearVsp),RSub(globals.camFarVsp,globals.camNearVsp)),VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.mcFar)),LOAD_0(TensorRef<[3]>(globals.mcNear)))));
    real l_r_1117 = RMul(RMul(self.phKs,l_scomp_893),0.1e1);
    real l_op1_e3_l_37_1118 = RSub(0.1e1,l__t_891);
    vec3{4} v_1119 = VAdd<3,4>(VEC3{4}(RMul(RMul(l_op1_e3_l_33_1115,VIndex<3,4,0>(v_1116)),VIndex<3,4,0>(v_1113)),RMul(RMul(l_op1_e3_l_33_1115,VIndex<3,4,1>(v_1116)),VIndex<3,4,1>(v_1113)),RMul(RMul(l_op1_e3_l_33_1115,VIndex<3,4,2>(v_1116)),VIndex<3,4,2>(v_1113))),VEC3{4}(l_r_1117,l_r_1117,l_r_1117));
    real l_r_1120 = RMul(self.transp,l_op1_e3_l_37_1118);
    vec3{4} v_1121 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_1120,VIndex<3,4,0>(v_1119)),RMul(l_r_1120,VIndex<3,4,1>(v_1119)),RMul(l_r_1120,VIndex<3,4,2>(v_1119))));
    real l_transp_1122 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_37_1118));
    vec3{4} v_1123 = v_1121;
    if (LT<real>(l_transp_1122,globals.transp0)) {
      self.rayN = l_rayN_69;
      self.rgb = PACK(v_1123);
      self.transp = 0.e0;
      stabilize;
    } else {
      l_transp_1125 = l_transp_1122;
    }
    self.rayN = l_rayN_69;
    self.rgb = PACK(v_1123);
    self.transp = l_transp_1125;
    active;
  }
  stabilize () {
    vec4 v_1128;
    if (LT<real>(self.transp,0.1e1)) {
      real l_aa_1127 = RSub(0.1e1,self.transp);
      v_1128 = VEC4(RDiv(VIndex<3,4,0>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_1127),RDiv(VIndex<3,4,1>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_1127),RDiv(VIndex<3,4,2>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_1127),l_aa_1127);
    } else {
      v_1128 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    self.rgba = PACK(v_1128);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_1130 = 0 to ISub(globals.iresV,1) {
      for i_ui_1131 = 0 to ISub(globals.iresU,1) {
        new ray(i_ui_1131,i_vi_1130);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) block;
input femData(Space) 0space0509_intermedateGlobal;
input femData(FemFunc) 0U050B_intermedateGlobal;
input int cellChoice;
input image(IMAGE1D<double[3]>) cmap;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camNear;
input real camFar;
input real camFOV;
input bool camOrtho;
input int iresU;
input int iresV;
input real rayStep;
input real refStep;
input real transp0;
input real thick;
input real fStrTh;
input real fMaskTh;
input real fBias;
input real maxAlpha;
input bool light;
input tensor[4] phong;
input tensor[3] mcNear;
input tensor[3] mcFar;
input tensor[3] litdir;
input tensor[2] cminmax;
input bool analytical;
input image(IMAGE3D<double[]>) umm;
input tensor[3,3] rot;
//***** CONST INIT *****
  {
    globals.camEye = <tensor[3]>[0.e0,-0.2e1,0.e0];
    globals.camAt = <tensor[3]>[0.e0,0.e0,0.e0];
    globals.camUp = <tensor[3]>[0.e0,0.e0,0.1e1];
    globals.camNear = -0.4e1;
    globals.camFar = 0.4e1;
    globals.camFOV = 0.1e2;
    globals.camOrtho = false;
    globals.iresU = 100;
    globals.iresV = 100;
    globals.rayStep = 0.1e-3;
    globals.refStep = 0.1e-3;
    globals.transp0 = 0.5e-2;
    globals.thick = 0.1e-1;
    globals.fStrTh = 0.e0;
    globals.fMaskTh = 0.e0;
    globals.fBias = 0.1e0;
    globals.maxAlpha = 0.1e1;
    globals.light = false;
    globals.phong = <tensor[4]>[0.1e0,0.7e0,0.2e0,0.1e3];
    vec3{4} v_4 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    globals.mcNear = PACK(v_4);
    globals.mcFar = PACK(v_4);
    globals.litdir = <tensor[3]>[0.e0,-0.1e1,0.e0];
    globals.cminmax = <tensor[2]>[0.e0,0.e0];
    globals.analytical = true;
    globals.rot = <tensor[3,3]>[0.1e1,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.1e1];
  }
//***** GLOBALS *****
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camDist;
global real camVmax;
global real camUmax;
global real camNearVsp;
global real camFarVsp;
global tensor[3] litwsp;
global int _t;
global femData(Space) _tX;
global femData(FemFunc) _tXX;
//***** FUNCTIONS *****
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_9;
    l__t_9 = <femData(MeshCell)[]>{};
    for i__t_10 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.block),1) {
      l__t_9 = Append<femData(MeshCell),femData(MeshCell)>(l__t_9,LoadFem<femData(MeshCell)>(globals.block,i__t_10));
    }
    femData(FuncCell) l__t_11 = LoadFem<femData(FuncCell)>(LoadFem<femData(FemFunc)>(globals.0U050B_intermedateGlobal,LoadFem<femData(Space)>(globals.0space0509_intermedateGlobal,globals.block)),ExtractFemItem<int,CellIndex(MeshCell)>(Subscript<femData(MeshCell)[]>(l__t_9,globals.cellChoice)));
    femData(FemFunc) l__t_12 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_11);
    vec3{4} v_13 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_14 = Sqrt(VDot<3,4>(v_13,v_13));
    real l_op1_e3_l_9_15 = RDiv(0.1e1,l_op1_e3_l_7_14);
    vec3{4} v_16 = VScale<3,4>(l_op1_e3_l_9_15,v_13);
    globals.camN = PACK(v_16);
    real l_r_18 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_19 = RMul(0.e0,l_r_18);
    real l_r_20 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_21 = RMul(0.e0,l_r_20);
    real l_r_22 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_23 = RMul(0.e0,l_r_22);
    real l_r_24 = RAdd(l_r_19,l_r_21);
    real l_r_25 = RAdd(l_r_24,l_r_23);
    real l_vdot_26 = VDot<3,4>(v_13,VEC3{4}(l_r_25,RAdd(l_r_24,RMul(0.1e1,l_r_22)),RAdd(RAdd(l_r_19,RMul(-0.1e1,l_r_20)),l_r_23)));
    real l_vdot_27 = VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_24,RMul(-0.1e1,l_r_22)),l_r_25,RAdd(RAdd(RMul(0.1e1,l_r_18),l_r_21),l_r_23)));
    real l_vdot_28 = VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_19,RMul(0.1e1,l_r_20)),l_r_23),RAdd(RAdd(RMul(-0.1e1,l_r_18),l_r_21),l_r_23),l_r_25));
    vec3{4} v_29 = VEC3{4}(l_vdot_26,l_vdot_27,l_vdot_28);
    real l_op1_e3_l_38_30 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_15,l_op1_e3_l_9_15),VDot<3,4>(v_29,v_29))));
    vec3{4} v_31 = VScale<3,4>(l_op1_e3_l_38_30,VScale<3,4>(l_op1_e3_l_9_15,v_29));
    globals.camU = PACK(v_31);
    real l_r_33 = RMul(0.e0,l_vdot_26);
    real l_r_34 = RMul(0.e0,l_vdot_27);
    real l_r_35 = RMul(0.e0,l_vdot_28);
    real l_r_36 = RAdd(l_r_33,l_r_34);
    real l_r_37 = RAdd(l_r_36,l_r_35);
    vec3{4} v_38 = VScale<3,4>(l_op1_e3_l_9_15,VEC3{4}(VDot<3,4>(v_13,VEC3{4}(l_r_37,RAdd(l_r_36,RMul(0.1e1,l_vdot_28)),RAdd(RAdd(l_r_33,RMul(-0.1e1,l_vdot_27)),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_36,RMul(-0.1e1,l_vdot_28)),l_r_37,RAdd(RAdd(RMul(0.1e1,l_vdot_26),l_r_34),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_33,RMul(0.1e1,l_vdot_27)),l_r_35),RAdd(RAdd(RMul(-0.1e1,l_vdot_26),l_r_34),l_r_35),l_r_37))));
    real l_r_39 = RMul(l_op1_e3_l_9_15,l_op1_e3_l_38_30);
    real l_r_40 = RMul(l_r_39,VIndex<3,4,0>(v_38));
    real l_r_41 = RMul(l_r_39,VIndex<3,4,1>(v_38));
    real l_r_42 = RMul(l_r_39,VIndex<3,4,2>(v_38));
    globals.camV = <tensor[3]>[l_r_40,l_r_41,l_r_42];
    globals.camDist = l_op1_e3_l_7_14;
    real l_op1_e3_l_10_44 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_44,l_op1_e3_l_7_14);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_44),l_op1_e3_l_7_14),IntToReal(globals.iresV));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_7_14);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_7_14);
    real l_r_45 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.litdir));
    real l_r_46 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.litdir));
    real l_r_47 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.litdir));
    globals.litwsp = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.litdir)),LOAD_0(TensorRef<[3]>(globals.litdir))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_31),l_r_45),RMul(l_r_40,l_r_46)),RMul(VIndex<3,4,0>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_31),l_r_45),RMul(l_r_41,l_r_46)),RMul(VIndex<3,4,1>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_31),l_r_45),RMul(l_r_42,l_r_46)),RMul(VIndex<3,4,2>(v_16),l_r_47)))));
    globals._t = ExtractFemItem<int,CellIndex(FuncCell)>(l__t_11);
    globals._tX = ExtractFem<femData(Space),femData(FemFunc)>(l__t_12);
    globals._tXX = l__t_12;
  }
//***** STRAND *****
strand ray (int p_ui_49,int p_vi_50) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] UV;
  tensor[3] rayOrig;
  tensor[3] rayVec;
  real alphaFix;
  tensor[3] eyeDir;
  real phKa;
  real phKd;
  real phKs;
  real phSp;
  varying output tensor[4] rgba;
  output real raw;
  varying tensor[3] rgb;
  varying real transp;
  initialize (globals) {
    vec3{4} v_59;
    vec3{4} v_57;
    real l_op1_e3_l_9_51 = RNeg(globals.camUmax);
    real l_rayU_52 = RAdd(l_op1_e3_l_9_51,RMul(RDiv(RSub(IntToReal(p_ui_49),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_51)));
    real l_op1_e3_l_9_53 = RNeg(globals.camVmax);
    real l_rayV_54 = RAdd(l_op1_e3_l_9_53,RMul(RDiv(RSub(IntToReal(p_vi_50),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_53)));
    vec3{4} v_55 = VAdd<3,4>(VScale<3,4>(l_rayU_52,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_54,LOAD_0(TensorRef<[3]>(globals.camV))));
    vec3{4} v_56 = v_55;
    if (globals.camOrtho) {
      v_57 = v_56;
    } else {
      v_57 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_58 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_57);
    if (globals.camOrtho) {
      v_59 = VEC3{4}(0.e0,0.e0,0.e0);
    } else {
      real l_r_60 = RDiv(0.1e1,globals.camDist);
      v_59 = VEC3{4}(RMul(l_r_60,VIndex<3,4,0>(v_56)),RMul(l_r_60,VIndex<3,4,1>(v_56)),RMul(l_r_60,VIndex<3,4,2>(v_56)));
    }
    vec3{4} v_61 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),v_59);
    real l_op1_e3_l_7_62 = Sqrt(VDot<3,4>(v_61,v_61));
    self.rayU = l_rayU_52;
    self.rayV = l_rayV_54;
    self.rayN = globals.camNearVsp;
    self.UV = PACK(v_56);
    self.rayOrig = PACK(v_58);
    self.rayVec = PACK(v_61);
    self.alphaFix = RDiv(RMul(globals.rayStep,l_op1_e3_l_7_62),globals.refStep);
    self.eyeDir = PACK(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_7_62),v_61)));
    self.phKa = TensorIndex<&tensor[4],[0]>(TensorRef<[4]>(globals.phong));
    self.phKd = TensorIndex<&tensor[4],[1]>(TensorRef<[4]>(globals.phong));
    self.phKs = TensorIndex<&tensor[4],[2]>(TensorRef<[4]>(globals.phong));
    self.phSp = TensorIndex<&tensor[4],[3]>(TensorRef<[4]>(globals.phong));
    self.rgba = <tensor[4]>[0.e0,0.e0,0.e0,0.e0];
    self.raw = 0.e0;
    self.rgb = <tensor[3]>[0.e0,0.e0,0.e0];
    self.transp = 0.1e1;
  }
  update (globals) {
    real l_transp_1125;
    vec3{4} v_1113;
    real l_scomp_893;
    vec3{4} v_835;
    bool l__t_449;
    real l_rayN_69 = RAdd(self.rayN,globals.rayStep);
    if (GT<real>(l_rayN_69,globals.camFarVsp)) {
      self.rayN = l_rayN_69;
      stabilize;
    }
    vec3{4} v_70 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_69,LOAD_0(TensorRef<[3]>(self.rayVec))));
    tensor[3] _arg_71 = PACK(v_70);
    vec3{4} v_72 = v_70;
    if (ExtractFemItemN<[femData(Mesh),tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),"","",[],int>(ExtractFemItem<femData(RefCell),RefCell(Mesh)>(globals.block),_arg_71,0.1e-8)) {
      bool l__t_448;
      int l_mulRes_73 = IMul(globals._t,84);
      int t_74 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_73);
      int t_75 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,1));
      int t_76 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,2));
      int t_77 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,3));
      int t_78 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,4));
      int t_79 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,5));
      int t_80 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,6));
      int t_81 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,7));
      int t_82 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,8));
      int t_83 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,9));
      int t_84 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,10));
      int t_85 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,11));
      int t_86 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,12));
      int t_87 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,13));
      int t_88 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,14));
      int t_89 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,15));
      int t_90 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,16));
      int t_91 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,17));
      int t_92 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,18));
      int t_93 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,19));
      int t_94 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,20));
      int t_95 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,21));
      int t_96 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,22));
      int t_97 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,23));
      int t_98 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,24));
      int t_99 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,25));
      int t_100 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,26));
      int t_101 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,27));
      int t_102 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,28));
      int t_103 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,29));
      int t_104 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,30));
      int t_105 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,31));
      int t_106 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,32));
      int t_107 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,33));
      int t_108 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,34));
      int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,35));
      int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,36));
      int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,37));
      int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,38));
      int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,39));
      int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,40));
      int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,41));
      int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,42));
      int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,43));
      int t_118 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,44));
      int t_119 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,45));
      int t_120 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,46));
      int t_121 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,47));
      int t_122 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,48));
      int t_123 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,49));
      int t_124 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,50));
      int t_125 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,51));
      int t_126 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,52));
      int t_127 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,53));
      int t_128 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,54));
      int t_129 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,55));
      int t_130 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,56));
      int t_131 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,57));
      int t_132 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,58));
      int t_133 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,59));
      int t_134 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,60));
      int t_135 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,61));
      int t_136 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,62));
      int t_137 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,63));
      int t_138 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,64));
      int t_139 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,65));
      int t_140 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,66));
      int t_141 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,67));
      int t_142 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,68));
      int t_143 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,69));
      int t_144 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,70));
      int t_145 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,71));
      int t_146 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,72));
      int t_147 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,73));
      int t_148 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,74));
      int t_149 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,75));
      int t_150 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,76));
      int t_151 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,77));
      int t_152 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,78));
      int t_153 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,79));
      int t_154 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,80));
      int t_155 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,81));
      int t_156 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,82));
      int t_157 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,83));
      real t_158 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_157));
      real t_159 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_156));
      real t_160 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_155));
      real t_161 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_154));
      real t_162 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_153));
      real t_163 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_152));
      real t_164 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_151));
      real t_165 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_150));
      real t_166 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_149));
      real t_167 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_148));
      real t_168 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_147));
      real t_169 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_146));
      real t_170 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_145));
      real t_171 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_144));
      real t_172 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_143));
      real t_173 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_142));
      real t_174 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_141));
      real t_175 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_140));
      real t_176 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_139));
      real t_177 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_138));
      real t_178 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_137));
      real t_179 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_136));
      real t_180 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_135));
      real t_181 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_134));
      real t_182 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_133));
      real t_183 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_132));
      real t_184 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_131));
      real t_185 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_130));
      real t_186 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_129));
      real t_187 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_128));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_127));
      real t_189 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_126));
      real t_190 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_125));
      real t_191 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_124));
      real t_192 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_123));
      real t_193 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_122));
      real t_194 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_121));
      real t_195 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_120));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_119));
      real t_197 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_118));
      real t_198 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_117));
      real t_199 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_116));
      real t_200 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_115));
      real t_201 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_114));
      real t_202 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_113));
      real t_203 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_112));
      real t_204 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_111));
      real t_205 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_110));
      real t_206 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_109));
      real t_207 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_108));
      real t_208 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_107));
      real t_209 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_106));
      real t_210 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_105));
      real t_211 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_104));
      real t_212 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_103));
      real t_213 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_102));
      real t_214 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_101));
      real t_215 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_100));
      real t_216 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_99));
      real t_217 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_98));
      real t_218 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_97));
      real t_219 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_96));
      real t_220 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_95));
      real t_221 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_94));
      real t_222 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_93));
      real t_223 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_92));
      real t_224 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_91));
      real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_90));
      real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_89));
      real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_88));
      real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_87));
      real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_86));
      real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_85));
      real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_84));
      real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_83));
      real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_82));
      real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_81));
      real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_80));
      real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_79));
      real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_78));
      real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_77));
      real t_239 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_76));
      real t_240 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_75));
      real t_241 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_74));
      vec4 v_242 = VEC4(t_241,t_240,t_239,t_238);
      vec4 v_243 = VEC4(t_237,t_236,t_235,t_234);
      vec4 v_244 = VEC4(t_233,t_232,t_231,t_230);
      vec4 v_245 = VEC4(t_229,t_228,t_227,t_226);
      vec4 v_246 = VEC4(t_225,t_224,t_223,t_222);
      vec4 v_247 = VEC4(t_221,t_220,t_219,t_218);
      vec4 v_248 = VEC4(t_217,t_216,t_215,t_214);
      vec4 v_249 = VEC4(t_213,t_212,t_211,t_210);
      vec4 v_250 = VEC4(t_209,t_208,t_207,t_206);
      vec4 v_251 = VEC4(t_205,t_204,t_203,t_202);
      vec4 v_252 = VEC4(t_201,t_200,t_199,t_198);
      vec4 v_253 = VEC4(t_197,t_196,t_195,t_194);
      vec4 v_254 = VEC4(t_193,t_192,t_191,t_190);
      vec4 v_255 = VEC4(t_189,t_188,t_187,t_186);
      vec4 v_256 = VEC4(t_185,t_184,t_183,t_182);
      vec4 v_257 = VEC4(t_181,t_180,t_179,t_178);
      vec4 v_258 = VEC4(t_177,t_176,t_175,t_174);
      vec4 v_259 = VEC4(t_173,t_172,t_171,t_170);
      vec4 v_260 = VEC4(t_169,t_168,t_167,t_166);
      vec4 v_261 = VEC4(t_165,t_164,t_163,t_162);
      vec4 v_262 = VEC4(t_161,t_160,t_159,t_158);
      real l_varAcc_263 = VIndex<3,4,0>(v_72);
      real l_varAcc_264 = VIndex<3,4,1>(v_72);
      real l_varAcc_265 = VIndex<3,4,2>(v_72);
      real l_prod_266 = RMul(0.1e1,0.1e1);
      real l_prod_267 = RMul(0.1e1,l_prod_266);
      real l_basisEval_268 = RMul(0.2e1,l_prod_267);
      real l_prod_269 = RMul(0.1e1,l_varAcc_265);
      real l_prod_270 = RMul(0.1e1,l_prod_269);
      real l_basisEval_271 = RMul(0.2e1,l_prod_270);
      real l_prod_272 = RMul(l_varAcc_264,0.1e1);
      real l_prod_273 = RMul(0.1e1,l_prod_272);
      real l_basisEval_274 = RMul(0.2e1,l_prod_273);
      real l_prod_275 = RMul(l_varAcc_263,l_prod_266);
      real l_prod2_276 = RMul(l_varAcc_265,l_varAcc_265);
      real l_prod_277 = RMul(0.1e1,l_prod2_276);
      real l_prod_278 = RMul(0.1e1,l_prod_277);
      real l_basisEval_279 = RMul(0.2e1,l_prod_278);
      real l_prod_280 = RMul(l_varAcc_264,l_varAcc_265);
      real l_prod_281 = RMul(0.1e1,l_prod_280);
      real l_basisEval_282 = RMul(0.2e1,l_prod_281);
      real l_prod2_283 = RMul(l_varAcc_264,l_varAcc_264);
      real l_prod_284 = RMul(l_prod2_283,0.1e1);
      real l_prod_285 = RMul(0.1e1,l_prod_284);
      real l_basisEval_286 = RMul(0.2e1,l_prod_285);
      real l_prod_287 = RMul(l_varAcc_263,l_prod_269);
      real l_basisEval_288 = RMul(0.6e1,l_prod_287);
      real l_prod_289 = RMul(l_varAcc_263,l_prod_272);
      real l_basisEval_290 = RMul(0.6e1,l_prod_289);
      real l_prod2_291 = RMul(l_varAcc_263,l_varAcc_263);
      real l_prod_292 = RMul(l_prod2_291,l_prod_266);
      real l_prod3_293 = RMul(l_prod2_276,l_varAcc_265);
      real l_prod_294 = RMul(0.1e1,l_prod3_293);
      real l_prod_295 = RMul(0.1e1,l_prod_294);
      real l_basisEval_296 = RMul(0.2e1,l_prod_295);
      real l_prod_297 = RMul(l_varAcc_264,l_prod2_276);
      real l_prod_298 = RMul(0.1e1,l_prod_297);
      real l_basisEval_299 = RMul(0.2e1,l_prod_298);
      real l_prod_300 = RMul(l_prod2_283,l_varAcc_265);
      real l_prod_301 = RMul(0.1e1,l_prod_300);
      real l_basisEval_302 = RMul(0.2e1,l_prod_301);
      real l_prod3_303 = RMul(l_prod2_283,l_varAcc_264);
      real l_prod_304 = RMul(l_prod3_303,0.1e1);
      real l_prod_305 = RMul(0.1e1,l_prod_304);
      real l_basisEval_306 = RMul(0.2e1,l_prod_305);
      real l_prod_307 = RMul(l_varAcc_263,l_prod_277);
      real l_basisEval_308 = RMul(0.6e1,l_prod_307);
      real l_prod_309 = RMul(l_varAcc_263,l_prod_280);
      real l_basisEval_310 = RMul(0.6e1,l_prod_309);
      real l_prod_311 = RMul(l_varAcc_263,l_prod_284);
      real l_basisEval_312 = RMul(0.6e1,l_prod_311);
      real l_prod_313 = RMul(l_prod2_291,l_prod_269);
      real l_prod_314 = RMul(l_prod2_291,l_prod_272);
      real l_prod3_315 = RMul(l_prod2_291,l_varAcc_263);
      real l_prod_316 = RMul(l_prod3_315,l_prod_266);
      real l_prod4_317 = RMul(l_prod3_293,l_varAcc_265);
      real l_prod_318 = RMul(0.1e1,l_prod4_317);
      real l_prod_319 = RMul(0.1e1,l_prod_318);
      real l_basisEval_320 = RMul(0.2e1,l_prod_319);
      real l_prod_321 = RMul(l_varAcc_264,l_prod3_293);
      real l_prod_322 = RMul(0.1e1,l_prod_321);
      real l_basisEval_323 = RMul(0.2e1,l_prod_322);
      real l_prod_324 = RMul(l_prod2_283,l_prod2_276);
      real l_prod_325 = RMul(0.1e1,l_prod_324);
      real l_prod_326 = RMul(l_prod3_303,l_varAcc_265);
      real l_prod_327 = RMul(0.1e1,l_prod_326);
      real l_basisEval_328 = RMul(0.2e1,l_prod_327);
      real l_prod4_329 = RMul(l_prod3_303,l_varAcc_264);
      real l_prod_330 = RMul(l_prod4_329,0.1e1);
      real l_prod_331 = RMul(0.1e1,l_prod_330);
      real l_basisEval_332 = RMul(0.2e1,l_prod_331);
      real l_prod_333 = RMul(l_varAcc_263,l_prod_294);
      real l_prod_334 = RMul(l_varAcc_263,l_prod_297);
      real l_basisEval_335 = RMul(0.6e1,l_prod_334);
      real l_prod_336 = RMul(l_varAcc_263,l_prod_300);
      real l_basisEval_337 = RMul(0.6e1,l_prod_336);
      real l_prod_338 = RMul(l_varAcc_263,l_prod_304);
      real l_prod_339 = RMul(l_prod2_291,l_prod_277);
      real l_basisEval_340 = RMul(0.12e2,l_prod_339);
      real l_prod_341 = RMul(l_prod2_291,l_prod_280);
      real l_prod_342 = RMul(l_prod2_291,l_prod_284);
      real l_basisEval_343 = RMul(0.12e2,l_prod_342);
      real l_prod_344 = RMul(l_prod3_315,l_prod_269);
      real l_prod_345 = RMul(l_prod3_315,l_prod_272);
      real l_prod4_346 = RMul(l_prod3_315,l_varAcc_263);
      real l_prod_347 = RMul(l_prod4_346,l_prod_266);
      real l_basisEval_348 = RMul(0.1e1,l_prod_267);
      real l_basisEval_349 = RMul(0.1e1,l_prod_270);
      real l_basisEval_350 = RMul(0.2e1,l_prod_275);
      real l_basisEval_351 = RMul(0.1e1,l_prod_278);
      real l_basisEval_352 = RMul(0.3e1,l_prod_285);
      real l_basisEval_353 = RMul(0.2e1,l_prod_287);
      real l_basisEval_354 = RMul(0.3e1,l_prod_292);
      real l_basisEval_355 = RMul(0.1e1,l_prod_295);
      real l_basisEval_356 = RMul(0.3e1,l_prod_301);
      real l_basisEval_357 = RMul(0.4e1,l_prod_305);
      real l_basisEval_358 = RMul(0.2e1,l_prod_307);
      real l_basisEval_359 = RMul(0.4e1,l_prod_309);
      real l_basisEval_360 = RMul(0.3e1,l_prod_313);
      real l_basisEval_361 = RMul(0.6e1,l_prod_314);
      real l_basisEval_362 = RMul(0.4e1,l_prod_316);
      real l_basisEval_363 = RMul(0.1e1,l_prod_319);
      real l_basisEval_364 = RMul(0.3e1,l_prod_325);
      real l_basisEval_365 = RMul(0.4e1,l_prod_327);
      real l_basisEval_366 = RMul(0.5e1,l_prod_331);
      real l_basisEval_367 = RMul(0.2e1,l_prod_333);
      real l_basisEval_368 = RMul(0.3e1,l_prod_339);
      real l_basisEval_369 = RMul(0.6e1,l_prod_341);
      real l_basisEval_370 = RMul(0.4e1,l_prod_344);
      real l_basisEval_371 = RMul(0.5e1,l_prod_347);
      real l_basisEval_372 = RMul(0.1e1,l_prod_273);
      real l_basisEval_373 = RMul(0.3e1,l_prod_278);
      real l_basisEval_374 = RMul(0.1e1,l_prod_285);
      real l_basisEval_375 = RMul(0.2e1,l_prod_289);
      real l_basisEval_376 = RMul(0.4e1,l_prod_295);
      real l_basisEval_377 = RMul(0.3e1,l_prod_298);
      real l_basisEval_378 = RMul(0.1e1,l_prod_305);
      real l_basisEval_379 = RMul(0.2e1,l_prod_311);
      real l_basisEval_380 = RMul(0.6e1,l_prod_313);
      real l_basisEval_381 = RMul(0.3e1,l_prod_314);
      real l_basisEval_382 = RMul(0.5e1,l_prod_319);
      real l_basisEval_383 = RMul(0.4e1,l_prod_322);
      real l_basisEval_384 = RMul(0.1e1,l_prod_331);
      real l_basisEval_385 = RMul(0.2e1,l_prod_338);
      real l_basisEval_386 = RMul(0.3e1,l_prod_342);
      real l_basisEval_387 = RMul(0.4e1,l_prod_345);
      real l_basisEval_388 = RMul(0.6e1,l_prod_281);
      real l_basisEval_389 = RMul(0.2e1,l_prod_292);
      real l_basisEval_390 = RMul(0.6e1,l_prod_298);
      real l_basisEval_391 = RMul(0.2e1,l_prod_313);
      real l_basisEval_392 = RMul(0.2e1,l_prod_316);
      real l_basisEval_393 = RMul(0.12e2,l_prod_325);
      real l_basisEval_394 = RMul(0.2e1,l_prod_344);
      real l_basisEval_395 = RMul(0.2e1,l_prod_347);
      real l_basisEval_396 = RMul(0.1e1,l_prod_275);
      real l_basisEval_397 = RMul(0.1e1,l_prod_292);
      real l_basisEval_398 = RMul(0.6e1,l_prod_301);
      real l_basisEval_399 = RMul(0.3e1,l_prod_307);
      real l_basisEval_400 = RMul(0.3e1,l_prod_311);
      real l_basisEval_401 = RMul(0.2e1,l_prod_314);
      real l_basisEval_402 = RMul(0.1e1,l_prod_316);
      real l_basisEval_403 = RMul(0.4e1,l_prod_333);
      real l_basisEval_404 = RMul(0.4e1,l_prod_338);
      real l_basisEval_405 = RMul(0.2e1,l_prod_345);
      real l_basisEval_406 = RMul(0.1e1,l_prod_347);
      real l_vdot_407 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_348,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_274,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_351,l_basisEval_282)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_352,0.e0,l_basisEval_353,RMul(0.4e1,l_prod_289))),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_354,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_355,l_basisEval_299)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_356,l_basisEval_357,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_359,l_basisEval_312,0.e0,l_basisEval_360)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_361,0.e0,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_366,0.e0,l_basisEval_367,RMul(0.4e1,l_prod_334))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_337,RMul(0.8e1,l_prod_338),0.e0,l_basisEval_368)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_369,RMul(0.9e1,l_prod_342),0.e0,l_basisEval_370)),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.8e1,l_prod_345),0.e0,l_basisEval_371,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_408 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_372)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_373,l_basisEval_282,l_basisEval_374)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,RMul(0.4e1,l_prod_287),l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_354,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_376,l_basisEval_377,l_basisEval_302)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_378,0.e0,l_basisEval_308,l_basisEval_359)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_379,0.e0,l_basisEval_380,l_basisEval_381)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_362,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.8e1,l_prod_333),l_basisEval_335,RMul(0.4e1,l_prod_336))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_385,0.e0,RMul(0.9e1,l_prod_339),l_basisEval_369)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_386,0.e0,RMul(0.8e1,l_prod_344),l_basisEval_387)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_371,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_409 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_274,0.e0,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_373,RMul(0.4e1,l_prod_281),l_basisEval_352)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_353,l_basisEval_375)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_376,l_basisEval_390,l_basisEval_398,l_basisEval_357)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_399,l_basisEval_359)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_400,0.e0,0.e0,l_basisEval_391)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_401,0.e0,0.e0,l_basisEval_402)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_382,RMul(0.8e1,l_prod_322),RMul(0.9e1,l_prod_325))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.8e1,l_prod_327),l_basisEval_366,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_403,l_basisEval_335,l_basisEval_337,l_basisEval_404)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,0.e0,l_basisEval_368,RMul(0.4e1,l_prod_341))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_386,0.e0,0.e0,l_basisEval_394)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_405,0.e0,0.e0,l_basisEval_406)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_410 = <tensor[3,3]>[RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_271,l_basisEval_274,RMul(0.6e1,l_prod_275))),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_279,l_basisEval_282,l_basisEval_286)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_288,l_basisEval_290,RMul(0.12e2,l_prod_292),0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_296,l_basisEval_299)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_302,l_basisEval_306,l_basisEval_308,l_basisEval_310)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_312,RMul(0.12e2,l_prod_313),RMul(0.12e2,l_prod_314),RMul(0.20e2,l_prod_316))),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_320,l_basisEval_323,RMul(0.2e1,l_prod_325))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_328,l_basisEval_332,RMul(0.6e1,l_prod_333),l_basisEval_335)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_337,RMul(0.6e1,l_prod_338),l_basisEval_340,RMul(0.12e2,l_prod_341))),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_343,RMul(0.20e2,l_prod_344),RMul(0.20e2,l_prod_345),RMul(0.30e2,l_prod_347))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_407,l_vdot_408,l_vdot_407,RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_271,RMul(0.6e1,l_prod_273),0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_350,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,l_basisEval_279,l_basisEval_388)),RAdd(VDot<4,4>(v_248,VEC4(RMul(0.12e2,l_prod_285),0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_290,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,l_basisEval_296,l_basisEval_390,RMul(0.12e2,l_prod_301))),RAdd(VDot<4,4>(v_252,VEC4(RMul(0.20e2,l_prod_305),0.e0,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_310,RMul(0.12e2,l_prod_311),0.e0,0.e0)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_391,l_basisEval_361,0.e0,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_392,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,l_basisEval_320,RMul(0.6e1,l_prod_322))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_393,RMul(0.20e2,l_prod_327),RMul(0.30e2,l_prod_331),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,l_basisEval_367,l_basisEval_335,RMul(0.12e2,l_prod_336))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.20e2,l_prod_338),0.e0,0.e0,RMul(0.2e1,l_prod_339))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_369,l_basisEval_343,0.e0,0.e0)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_394,RMul(0.6e1,l_prod_345),0.e0,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_395,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_409,l_vdot_408,l_vdot_409,RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_270),l_basisEval_274)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(RMul(0.12e2,l_prod_278),l_basisEval_388,l_basisEval_286,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_288,l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_389,0.e0,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_295))),RAdd(VDot<4,4>(v_251,VEC4(RMul(0.12e2,l_prod_298),l_basisEval_398,l_basisEval_306,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,RMul(0.12e2,l_prod_307),l_basisEval_310,l_basisEval_379)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_380,l_basisEval_401)),RAdd(VDot<4,4>(v_254,VEC4(0.e0,0.e0,l_basisEval_392,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.30e2,l_prod_319),RMul(0.20e2,l_prod_322),l_basisEval_393,RMul(0.6e1,l_prod_327))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_332,0.e0,0.e0,RMul(0.20e2,l_prod_333))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.12e2,l_prod_334),l_basisEval_337,l_basisEval_385,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_340,l_basisEval_369,RMul(0.2e1,l_prod_342))),RAdd(VDot<4,4>(v_260,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_344),l_basisEval_405)),RAdd(VDot<4,4>(v_261,VEC4(0.e0,0.e0,l_basisEval_395,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      real[3] l__t_411 = EigenVals3x3(TensorRef<[3,3]>(t_410));
      real l_basisEval_412 = RMul(0.2e1,l_prod_309);
      real l_basisEval_413 = RMul(0.2e1,l_prod_334);
      real l_basisEval_414 = RMul(0.2e1,l_prod_336);
      real l_prod_415 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_317,l_varAcc_265)));
      real l_basisEval_416 = RMul(0.1e1,l_prod_415);
      real l_prod_417 = RMul(0.1e1,RMul(l_varAcc_264,l_prod4_317));
      real l_prod_418 = RMul(0.1e1,RMul(l_prod2_283,l_prod3_293));
      real l_prod_419 = RMul(0.1e1,RMul(l_prod3_303,l_prod2_276));
      real l_prod_420 = RMul(0.1e1,RMul(l_prod4_329,l_varAcc_265));
      real l_prod_421 = RMul(0.1e1,RMul(RMul(l_prod4_329,l_varAcc_264),0.1e1));
      real l_basisEval_422 = RMul(0.1e1,l_prod_421);
      real l_prod_423 = RMul(l_varAcc_263,l_prod_318);
      real l_prod_424 = RMul(l_varAcc_263,l_prod_321);
      real l_basisEval_425 = RMul(0.2e1,l_prod_424);
      real l_prod_426 = RMul(l_varAcc_263,l_prod_324);
      real l_prod_427 = RMul(l_varAcc_263,l_prod_326);
      real l_basisEval_428 = RMul(0.2e1,l_prod_427);
      real l_prod_429 = RMul(l_varAcc_263,l_prod_330);
      real l_prod_430 = RMul(l_prod2_291,l_prod_294);
      real l_prod_431 = RMul(l_prod2_291,l_prod_297);
      real l_basisEval_432 = RMul(0.3e1,l_prod_431);
      real l_prod_433 = RMul(l_prod2_291,l_prod_300);
      real l_basisEval_434 = RMul(0.3e1,l_prod_433);
      real l_prod_435 = RMul(l_prod2_291,l_prod_304);
      real l_prod_436 = RMul(l_prod3_315,l_prod_277);
      real l_prod_437 = RMul(l_prod3_315,l_prod_280);
      real l_prod_438 = RMul(l_prod3_315,l_prod_284);
      real l_prod_439 = RMul(l_prod4_346,l_prod_269);
      real l_prod_440 = RMul(l_prod4_346,l_prod_272);
      real l_prod_441 = RMul(RMul(l_prod4_346,l_varAcc_263),l_prod_266);
      real l_basisEval_442 = RMul(0.2e1,l_prod_341);
      real l_basisEval_443 = RMul(0.3e1,l_prod_426);
      real l_basisEval_444 = RMul(0.2e1,l_prod_437);
      real l_basisEval_445 = RMul(0.1e1,l_prod_441);
      vec3{4} v_446 = VEC3{4}(RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_372,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_351,RMul(0.1e1,l_prod_281))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_374,l_basisEval_353,l_basisEval_375,l_basisEval_354)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_355,RMul(0.1e1,l_prod_298),RMul(0.1e1,l_prod_301))),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_378,l_basisEval_358,l_basisEval_412,l_basisEval_379)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_360,l_basisEval_381,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_363,RMul(0.1e1,l_prod_322),RMul(0.1e1,l_prod_325))),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_327),l_basisEval_384,l_basisEval_367,l_basisEval_413)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_414,l_basisEval_385,l_basisEval_368,RMul(0.3e1,l_prod_341))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_386,l_basisEval_370,l_basisEval_387,l_basisEval_371)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_416)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_417),RMul(0.1e1,l_prod_418),RMul(0.1e1,l_prod_419),RMul(0.1e1,l_prod_420))),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_422,RMul(0.2e1,l_prod_423),l_basisEval_425,RMul(0.2e1,l_prod_426))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_428,RMul(0.2e1,l_prod_429),RMul(0.3e1,l_prod_430),l_basisEval_432)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_434,RMul(0.3e1,l_prod_435),RMul(0.4e1,l_prod_436),RMul(0.4e1,l_prod_437))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.4e1,l_prod_438),RMul(0.5e1,l_prod_439),RMul(0.5e1,l_prod_440),RMul(0.6e1,l_prod_441))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_349,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_396,0.e0,0.e0,l_basisEval_351)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_282,l_basisEval_352,0.e0,RMul(0.1e1,l_prod_287))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_375,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_355,l_basisEval_299,l_basisEval_356)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_357,0.e0,RMul(0.1e1,l_prod_307),l_basisEval_412)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_400,0.e0,RMul(0.1e1,l_prod_313),l_basisEval_401)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_402,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_366,0.e0,RMul(0.1e1,l_prod_333),l_basisEval_413)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.3e1,l_prod_336),l_basisEval_404,0.e0,RMul(0.1e1,l_prod_339))),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_442,l_basisEval_386,0.e0,RMul(0.1e1,l_prod_344))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_405,0.e0,l_basisEval_406,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_416,RMul(0.2e1,l_prod_417),RMul(0.3e1,l_prod_418))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.4e1,l_prod_419),RMul(0.5e1,l_prod_420),RMul(0.6e1,l_prod_421),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_423),l_basisEval_425,l_basisEval_443,RMul(0.4e1,l_prod_427))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.5e1,l_prod_429),0.e0,RMul(0.1e1,l_prod_430),RMul(0.2e1,l_prod_431))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_434,RMul(0.4e1,l_prod_435),0.e0,RMul(0.1e1,l_prod_436))),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_444,RMul(0.3e1,l_prod_438),0.e0,RMul(0.1e1,l_prod_439))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.2e1,l_prod_440),0.e0,l_basisEval_445,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,l_basisEval_348,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_271,l_basisEval_372,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_373,l_basisEval_282)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_374,0.e0,l_basisEval_353,RMul(0.1e1,l_prod_289))),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_397,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_376,l_basisEval_377,l_basisEval_302,l_basisEval_378)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_399,l_basisEval_412,RMul(0.1e1,l_prod_311))),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_391,RMul(0.1e1,l_prod_314),0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_402,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_403,RMul(0.3e1,l_prod_334),l_basisEval_414)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_338),0.e0,l_basisEval_368,l_basisEval_442)),RAdd(VDot<4,4>(v_254,VEC4(RMul(0.1e1,l_prod_342),0.e0,l_basisEval_394,RMul(0.1e1,l_prod_345))),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_406,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.6e1,l_prod_415),RMul(0.5e1,l_prod_417),RMul(0.4e1,l_prod_418),RMul(0.3e1,l_prod_419))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.2e1,l_prod_420),l_basisEval_422,0.e0,RMul(0.5e1,l_prod_423))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.4e1,l_prod_424),l_basisEval_443,l_basisEval_428,RMul(0.1e1,l_prod_429))),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.4e1,l_prod_430),l_basisEval_432,RMul(0.2e1,l_prod_433))),RAdd(VDot<4,4>(v_260,VEC4(RMul(0.1e1,l_prod_435),0.e0,RMul(0.3e1,l_prod_436),l_basisEval_444)),RAdd(VDot<4,4>(v_261,VEC4(RMul(0.1e1,l_prod_438),0.e0,RMul(0.2e1,l_prod_439),RMul(0.1e1,l_prod_440))),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_445,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)))))))))))))))))))))));
      if (GT<real>(RDiv(RNeg(Subscript<real[3]>(l__t_411,1)),RAdd(globals.fBias,Sqrt(VDot<3,4>(v_446,v_446)))),globals.fStrTh)) {
        bool l__t_447;
        if (GTE<real>(0.1e1,globals.fMaskTh)) {
          l__t_447 = true;
        } else {
          l__t_447 = false;
        }
        l__t_448 = l__t_447;
      } else {
        l__t_448 = false;
      }
      l__t_449 = l__t_448;
    } else {
      l__t_449 = false;
    }
    if (BNot(l__t_449)) {
      self.rayN = l_rayN_69;
      active;
    }
    if (BNot(globals.analytical)) {
      tensor[3][3] l_E_789;
      real[3] l_evals_788;
      int l_mulRes_450 = IMul(globals._t,84);
      int t_451 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_450);
      int t_452 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,1));
      int t_453 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,2));
      int t_454 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,3));
      int t_455 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,4));
      int t_456 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,5));
      int t_457 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,6));
      int t_458 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,7));
      int t_459 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,8));
      int t_460 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,9));
      int t_461 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,10));
      int t_462 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,11));
      int t_463 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,12));
      int t_464 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,13));
      int t_465 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,14));
      int t_466 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,15));
      int t_467 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,16));
      int t_468 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,17));
      int t_469 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,18));
      int t_470 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,19));
      int t_471 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,20));
      int t_472 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,21));
      int t_473 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,22));
      int t_474 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,23));
      int t_475 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,24));
      int t_476 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,25));
      int t_477 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,26));
      int t_478 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,27));
      int t_479 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,28));
      int t_480 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,29));
      int t_481 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,30));
      int t_482 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,31));
      int t_483 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,32));
      int t_484 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,33));
      int t_485 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,34));
      int t_486 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,35));
      int t_487 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,36));
      int t_488 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,37));
      int t_489 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,38));
      int t_490 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,39));
      int t_491 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,40));
      int t_492 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,41));
      int t_493 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,42));
      int t_494 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,43));
      int t_495 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,44));
      int t_496 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,45));
      int t_497 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,46));
      int t_498 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,47));
      int t_499 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,48));
      int t_500 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,49));
      int t_501 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,50));
      int t_502 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,51));
      int t_503 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,52));
      int t_504 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,53));
      int t_505 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,54));
      int t_506 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,55));
      int t_507 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,56));
      int t_508 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,57));
      int t_509 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,58));
      int t_510 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,59));
      int t_511 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,60));
      int t_512 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,61));
      int t_513 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,62));
      int t_514 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,63));
      int t_515 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,64));
      int t_516 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,65));
      int t_517 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,66));
      int t_518 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,67));
      int t_519 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,68));
      int t_520 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,69));
      int t_521 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,70));
      int t_522 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,71));
      int t_523 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,72));
      int t_524 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,73));
      int t_525 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,74));
      int t_526 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,75));
      int t_527 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,76));
      int t_528 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,77));
      int t_529 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,78));
      int t_530 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,79));
      int t_531 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,80));
      int t_532 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,81));
      int t_533 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,82));
      int t_534 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,83));
      real t_535 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_534));
      real t_536 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_533));
      real t_537 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_532));
      real t_538 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_531));
      real t_539 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_530));
      real t_540 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_529));
      real t_541 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_528));
      real t_542 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_527));
      real t_543 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_526));
      real t_544 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_525));
      real t_545 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_524));
      real t_546 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_523));
      real t_547 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_522));
      real t_548 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_521));
      real t_549 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_520));
      real t_550 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_519));
      real t_551 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_518));
      real t_552 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_517));
      real t_553 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_516));
      real t_554 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_515));
      real t_555 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_514));
      real t_556 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_513));
      real t_557 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_512));
      real t_558 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_511));
      real t_559 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_510));
      real t_560 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_509));
      real t_561 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_508));
      real t_562 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_507));
      real t_563 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_506));
      real t_564 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_505));
      real t_565 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_504));
      real t_566 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_503));
      real t_567 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_502));
      real t_568 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_501));
      real t_569 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_500));
      real t_570 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_499));
      real t_571 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_498));
      real t_572 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_497));
      real t_573 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_496));
      real t_574 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_495));
      real t_575 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_494));
      real t_576 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_493));
      real t_577 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_492));
      real t_578 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_491));
      real t_579 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_490));
      real t_580 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_489));
      real t_581 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_488));
      real t_582 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_487));
      real t_583 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_486));
      real t_584 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_485));
      real t_585 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_484));
      real t_586 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_483));
      real t_587 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_482));
      real t_588 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_481));
      real t_589 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_480));
      real t_590 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_479));
      real t_591 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_478));
      real t_592 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_477));
      real t_593 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_476));
      real t_594 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_475));
      real t_595 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_474));
      real t_596 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_473));
      real t_597 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_472));
      real t_598 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_471));
      real t_599 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_470));
      real t_600 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_469));
      real t_601 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_468));
      real t_602 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_467));
      real t_603 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_466));
      real t_604 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_465));
      real t_605 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_464));
      real t_606 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_463));
      real t_607 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_462));
      real t_608 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_461));
      real t_609 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_460));
      real t_610 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_459));
      real t_611 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_458));
      real t_612 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_457));
      real t_613 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_456));
      real t_614 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_455));
      real t_615 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_454));
      real t_616 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_453));
      real t_617 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_452));
      real t_618 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_451));
      vec4 v_619 = VEC4(t_618,t_617,t_616,t_615);
      vec4 v_620 = VEC4(t_614,t_613,t_612,t_611);
      vec4 v_621 = VEC4(t_610,t_609,t_608,t_607);
      vec4 v_622 = VEC4(t_606,t_605,t_604,t_603);
      vec4 v_623 = VEC4(t_602,t_601,t_600,t_599);
      vec4 v_624 = VEC4(t_598,t_597,t_596,t_595);
      vec4 v_625 = VEC4(t_594,t_593,t_592,t_591);
      vec4 v_626 = VEC4(t_590,t_589,t_588,t_587);
      vec4 v_627 = VEC4(t_586,t_585,t_584,t_583);
      vec4 v_628 = VEC4(t_582,t_581,t_580,t_579);
      vec4 v_629 = VEC4(t_578,t_577,t_576,t_575);
      vec4 v_630 = VEC4(t_574,t_573,t_572,t_571);
      vec4 v_631 = VEC4(t_570,t_569,t_568,t_567);
      vec4 v_632 = VEC4(t_566,t_565,t_564,t_563);
      vec4 v_633 = VEC4(t_562,t_561,t_560,t_559);
      vec4 v_634 = VEC4(t_558,t_557,t_556,t_555);
      vec4 v_635 = VEC4(t_554,t_553,t_552,t_551);
      vec4 v_636 = VEC4(t_550,t_549,t_548,t_547);
      vec4 v_637 = VEC4(t_546,t_545,t_544,t_543);
      vec4 v_638 = VEC4(t_542,t_541,t_540,t_539);
      vec4 v_639 = VEC4(t_538,t_537,t_536,t_535);
      real l_varAcc_640 = VIndex<3,4,0>(v_72);
      real l_varAcc_641 = VIndex<3,4,1>(v_72);
      real l_varAcc_642 = VIndex<3,4,2>(v_72);
      real l_prod_643 = RMul(0.1e1,0.1e1);
      real l_prod_644 = RMul(0.1e1,l_prod_643);
      real l_basisEval_645 = RMul(0.2e1,l_prod_644);
      real l_prod_646 = RMul(0.1e1,l_varAcc_642);
      real l_prod_647 = RMul(0.1e1,l_prod_646);
      real l_basisEval_648 = RMul(0.2e1,l_prod_647);
      real l_prod_649 = RMul(l_varAcc_641,0.1e1);
      real l_prod_650 = RMul(0.1e1,l_prod_649);
      real l_basisEval_651 = RMul(0.2e1,l_prod_650);
      real l_prod_652 = RMul(l_varAcc_640,l_prod_643);
      real l_prod2_653 = RMul(l_varAcc_642,l_varAcc_642);
      real l_prod_654 = RMul(0.1e1,l_prod2_653);
      real l_prod_655 = RMul(0.1e1,l_prod_654);
      real l_basisEval_656 = RMul(0.2e1,l_prod_655);
      real l_prod_657 = RMul(l_varAcc_641,l_varAcc_642);
      real l_prod_658 = RMul(0.1e1,l_prod_657);
      real l_basisEval_659 = RMul(0.2e1,l_prod_658);
      real l_prod2_660 = RMul(l_varAcc_641,l_varAcc_641);
      real l_prod_661 = RMul(l_prod2_660,0.1e1);
      real l_prod_662 = RMul(0.1e1,l_prod_661);
      real l_basisEval_663 = RMul(0.2e1,l_prod_662);
      real l_prod_664 = RMul(l_varAcc_640,l_prod_646);
      real l_basisEval_665 = RMul(0.6e1,l_prod_664);
      real l_prod_666 = RMul(l_varAcc_640,l_prod_649);
      real l_basisEval_667 = RMul(0.6e1,l_prod_666);
      real l_prod2_668 = RMul(l_varAcc_640,l_varAcc_640);
      real l_prod_669 = RMul(l_prod2_668,l_prod_643);
      real l_prod3_670 = RMul(l_prod2_653,l_varAcc_642);
      real l_prod_671 = RMul(0.1e1,l_prod3_670);
      real l_prod_672 = RMul(0.1e1,l_prod_671);
      real l_basisEval_673 = RMul(0.2e1,l_prod_672);
      real l_prod_674 = RMul(l_varAcc_641,l_prod2_653);
      real l_prod_675 = RMul(0.1e1,l_prod_674);
      real l_basisEval_676 = RMul(0.2e1,l_prod_675);
      real l_prod_677 = RMul(l_prod2_660,l_varAcc_642);
      real l_prod_678 = RMul(0.1e1,l_prod_677);
      real l_basisEval_679 = RMul(0.2e1,l_prod_678);
      real l_prod3_680 = RMul(l_prod2_660,l_varAcc_641);
      real l_prod_681 = RMul(l_prod3_680,0.1e1);
      real l_prod_682 = RMul(0.1e1,l_prod_681);
      real l_basisEval_683 = RMul(0.2e1,l_prod_682);
      real l_prod_684 = RMul(l_varAcc_640,l_prod_654);
      real l_basisEval_685 = RMul(0.6e1,l_prod_684);
      real l_prod_686 = RMul(l_varAcc_640,l_prod_657);
      real l_basisEval_687 = RMul(0.6e1,l_prod_686);
      real l_prod_688 = RMul(l_varAcc_640,l_prod_661);
      real l_basisEval_689 = RMul(0.6e1,l_prod_688);
      real l_prod_690 = RMul(l_prod2_668,l_prod_646);
      real l_prod_691 = RMul(l_prod2_668,l_prod_649);
      real l_prod3_692 = RMul(l_prod2_668,l_varAcc_640);
      real l_prod_693 = RMul(l_prod3_692,l_prod_643);
      real l_prod4_694 = RMul(l_prod3_670,l_varAcc_642);
      real l_prod_695 = RMul(0.1e1,l_prod4_694);
      real l_prod_696 = RMul(0.1e1,l_prod_695);
      real l_basisEval_697 = RMul(0.2e1,l_prod_696);
      real l_prod_698 = RMul(l_varAcc_641,l_prod3_670);
      real l_prod_699 = RMul(0.1e1,l_prod_698);
      real l_basisEval_700 = RMul(0.2e1,l_prod_699);
      real l_prod_701 = RMul(l_prod2_660,l_prod2_653);
      real l_prod_702 = RMul(0.1e1,l_prod_701);
      real l_prod_703 = RMul(l_prod3_680,l_varAcc_642);
      real l_prod_704 = RMul(0.1e1,l_prod_703);
      real l_basisEval_705 = RMul(0.2e1,l_prod_704);
      real l_prod4_706 = RMul(l_prod3_680,l_varAcc_641);
      real l_prod_707 = RMul(l_prod4_706,0.1e1);
      real l_prod_708 = RMul(0.1e1,l_prod_707);
      real l_basisEval_709 = RMul(0.2e1,l_prod_708);
      real l_prod_710 = RMul(l_varAcc_640,l_prod_671);
      real l_prod_711 = RMul(l_varAcc_640,l_prod_674);
      real l_basisEval_712 = RMul(0.6e1,l_prod_711);
      real l_prod_713 = RMul(l_varAcc_640,l_prod_677);
      real l_basisEval_714 = RMul(0.6e1,l_prod_713);
      real l_prod_715 = RMul(l_varAcc_640,l_prod_681);
      real l_prod_716 = RMul(l_prod2_668,l_prod_654);
      real l_basisEval_717 = RMul(0.12e2,l_prod_716);
      real l_prod_718 = RMul(l_prod2_668,l_prod_657);
      real l_prod_719 = RMul(l_prod2_668,l_prod_661);
      real l_basisEval_720 = RMul(0.12e2,l_prod_719);
      real l_prod_721 = RMul(l_prod3_692,l_prod_646);
      real l_prod_722 = RMul(l_prod3_692,l_prod_649);
      real l_prod4_723 = RMul(l_prod3_692,l_varAcc_640);
      real l_prod_724 = RMul(l_prod4_723,l_prod_643);
      real l_basisEval_725 = RMul(0.1e1,l_prod_644);
      real l_basisEval_726 = RMul(0.1e1,l_prod_647);
      real l_basisEval_727 = RMul(0.2e1,l_prod_652);
      real l_basisEval_728 = RMul(0.1e1,l_prod_655);
      real l_basisEval_729 = RMul(0.3e1,l_prod_662);
      real l_basisEval_730 = RMul(0.2e1,l_prod_664);
      real l_basisEval_731 = RMul(0.3e1,l_prod_669);
      real l_basisEval_732 = RMul(0.1e1,l_prod_672);
      real l_basisEval_733 = RMul(0.3e1,l_prod_678);
      real l_basisEval_734 = RMul(0.4e1,l_prod_682);
      real l_basisEval_735 = RMul(0.2e1,l_prod_684);
      real l_basisEval_736 = RMul(0.4e1,l_prod_686);
      real l_basisEval_737 = RMul(0.3e1,l_prod_690);
      real l_basisEval_738 = RMul(0.6e1,l_prod_691);
      real l_basisEval_739 = RMul(0.4e1,l_prod_693);
      real l_basisEval_740 = RMul(0.1e1,l_prod_696);
      real l_basisEval_741 = RMul(0.3e1,l_prod_702);
      real l_basisEval_742 = RMul(0.4e1,l_prod_704);
      real l_basisEval_743 = RMul(0.5e1,l_prod_708);
      real l_basisEval_744 = RMul(0.2e1,l_prod_710);
      real l_basisEval_745 = RMul(0.3e1,l_prod_716);
      real l_basisEval_746 = RMul(0.6e1,l_prod_718);
      real l_basisEval_747 = RMul(0.4e1,l_prod_721);
      real l_basisEval_748 = RMul(0.5e1,l_prod_724);
      real l_basisEval_749 = RMul(0.1e1,l_prod_650);
      real l_basisEval_750 = RMul(0.3e1,l_prod_655);
      real l_basisEval_751 = RMul(0.1e1,l_prod_662);
      real l_basisEval_752 = RMul(0.2e1,l_prod_666);
      real l_basisEval_753 = RMul(0.4e1,l_prod_672);
      real l_basisEval_754 = RMul(0.3e1,l_prod_675);
      real l_basisEval_755 = RMul(0.1e1,l_prod_682);
      real l_basisEval_756 = RMul(0.2e1,l_prod_688);
      real l_basisEval_757 = RMul(0.6e1,l_prod_690);
      real l_basisEval_758 = RMul(0.3e1,l_prod_691);
      real l_basisEval_759 = RMul(0.5e1,l_prod_696);
      real l_basisEval_760 = RMul(0.4e1,l_prod_699);
      real l_basisEval_761 = RMul(0.1e1,l_prod_708);
      real l_basisEval_762 = RMul(0.2e1,l_prod_715);
      real l_basisEval_763 = RMul(0.3e1,l_prod_719);
      real l_basisEval_764 = RMul(0.4e1,l_prod_722);
      real l_basisEval_765 = RMul(0.6e1,l_prod_658);
      real l_basisEval_766 = RMul(0.2e1,l_prod_669);
      real l_basisEval_767 = RMul(0.6e1,l_prod_675);
      real l_basisEval_768 = RMul(0.2e1,l_prod_690);
      real l_basisEval_769 = RMul(0.2e1,l_prod_693);
      real l_basisEval_770 = RMul(0.12e2,l_prod_702);
      real l_basisEval_771 = RMul(0.2e1,l_prod_721);
      real l_basisEval_772 = RMul(0.2e1,l_prod_724);
      real l_basisEval_773 = RMul(0.1e1,l_prod_652);
      real l_basisEval_774 = RMul(0.1e1,l_prod_669);
      real l_basisEval_775 = RMul(0.6e1,l_prod_678);
      real l_basisEval_776 = RMul(0.3e1,l_prod_684);
      real l_basisEval_777 = RMul(0.3e1,l_prod_688);
      real l_basisEval_778 = RMul(0.2e1,l_prod_691);
      real l_basisEval_779 = RMul(0.1e1,l_prod_693);
      real l_basisEval_780 = RMul(0.4e1,l_prod_710);
      real l_basisEval_781 = RMul(0.4e1,l_prod_715);
      real l_basisEval_782 = RMul(0.2e1,l_prod_722);
      real l_basisEval_783 = RMul(0.1e1,l_prod_724);
      real l_vdot_784 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_725,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_651,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_728,l_basisEval_659)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_729,0.e0,l_basisEval_730,RMul(0.4e1,l_prod_666))),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_731,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_732,l_basisEval_676)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_733,l_basisEval_734,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_736,l_basisEval_689,0.e0,l_basisEval_737)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_738,0.e0,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_743,0.e0,l_basisEval_744,RMul(0.4e1,l_prod_711))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_714,RMul(0.8e1,l_prod_715),0.e0,l_basisEval_745)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_746,RMul(0.9e1,l_prod_719),0.e0,l_basisEval_747)),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.8e1,l_prod_722),0.e0,l_basisEval_748,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_785 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_648,l_basisEval_749)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_750,l_basisEval_659,l_basisEval_751)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,RMul(0.4e1,l_prod_664),l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_731,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_753,l_basisEval_754,l_basisEval_679)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_755,0.e0,l_basisEval_685,l_basisEval_736)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_756,0.e0,l_basisEval_757,l_basisEval_758)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_739,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.8e1,l_prod_710),l_basisEval_712,RMul(0.4e1,l_prod_713))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_762,0.e0,RMul(0.9e1,l_prod_716),l_basisEval_746)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_763,0.e0,RMul(0.8e1,l_prod_721),l_basisEval_764)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_748,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_786 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,l_basisEval_648)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_651,0.e0,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_750,RMul(0.4e1,l_prod_658),l_basisEval_729)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_730,l_basisEval_752)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_753,l_basisEval_767,l_basisEval_775,l_basisEval_734)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_776,l_basisEval_736)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_777,0.e0,0.e0,l_basisEval_768)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_778,0.e0,0.e0,l_basisEval_779)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_759,RMul(0.8e1,l_prod_699),RMul(0.9e1,l_prod_702))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.8e1,l_prod_704),l_basisEval_743,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_780,l_basisEval_712,l_basisEval_714,l_basisEval_781)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,0.e0,l_basisEval_745,RMul(0.4e1,l_prod_718))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_763,0.e0,0.e0,l_basisEval_771)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_782,0.e0,0.e0,l_basisEval_783)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_787 = <tensor[3,3]>[RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,l_basisEval_645,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_648,l_basisEval_651,RMul(0.6e1,l_prod_652))),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_656,l_basisEval_659,l_basisEval_663)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_665,l_basisEval_667,RMul(0.12e2,l_prod_669),0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_673,l_basisEval_676)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_679,l_basisEval_683,l_basisEval_685,l_basisEval_687)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_689,RMul(0.12e2,l_prod_690),RMul(0.12e2,l_prod_691),RMul(0.20e2,l_prod_693))),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_697,l_basisEval_700,RMul(0.2e1,l_prod_702))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_705,l_basisEval_709,RMul(0.6e1,l_prod_710),l_basisEval_712)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_714,RMul(0.6e1,l_prod_715),l_basisEval_717,RMul(0.12e2,l_prod_718))),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_720,RMul(0.20e2,l_prod_721),RMul(0.20e2,l_prod_722),RMul(0.30e2,l_prod_724))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_784,l_vdot_785,l_vdot_784,RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,l_basisEval_645,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_648,RMul(0.6e1,l_prod_650),0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_727,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,l_basisEval_656,l_basisEval_765)),RAdd(VDot<4,4>(v_625,VEC4(RMul(0.12e2,l_prod_662),0.e0,0.e0,l_basisEval_730)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_667,0.e0,0.e0,l_basisEval_766)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,l_basisEval_673,l_basisEval_767,RMul(0.12e2,l_prod_678))),RAdd(VDot<4,4>(v_629,VEC4(RMul(0.20e2,l_prod_682),0.e0,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_687,RMul(0.12e2,l_prod_688),0.e0,0.e0)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_768,l_basisEval_738,0.e0,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_769,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,l_basisEval_697,RMul(0.6e1,l_prod_699))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_770,RMul(0.20e2,l_prod_704),RMul(0.30e2,l_prod_708),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,l_basisEval_744,l_basisEval_712,RMul(0.12e2,l_prod_713))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.20e2,l_prod_715),0.e0,0.e0,RMul(0.2e1,l_prod_716))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_746,l_basisEval_720,0.e0,0.e0)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_771,RMul(0.6e1,l_prod_722),0.e0,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_772,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_786,l_vdot_785,l_vdot_786,RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_645,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_647),l_basisEval_651)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(RMul(0.12e2,l_prod_655),l_basisEval_765,l_basisEval_663,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_665,l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_766,0.e0,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_672))),RAdd(VDot<4,4>(v_628,VEC4(RMul(0.12e2,l_prod_675),l_basisEval_775,l_basisEval_683,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,RMul(0.12e2,l_prod_684),l_basisEval_687,l_basisEval_756)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_757,l_basisEval_778)),RAdd(VDot<4,4>(v_631,VEC4(0.e0,0.e0,l_basisEval_769,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.30e2,l_prod_696),RMul(0.20e2,l_prod_699),l_basisEval_770,RMul(0.6e1,l_prod_704))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_709,0.e0,0.e0,RMul(0.20e2,l_prod_710))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.12e2,l_prod_711),l_basisEval_714,l_basisEval_762,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_717,l_basisEval_746,RMul(0.2e1,l_prod_719))),RAdd(VDot<4,4>(v_637,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_721),l_basisEval_782)),RAdd(VDot<4,4>(v_638,VEC4(0.e0,0.e0,l_basisEval_772,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      (l_evals_788,l_E_789) = EigenVecs3x3(TensorRef<[3,3]>(t_787));
      &tensor[3] l__t_790 = Subscript<tensor[3][3]>(l_E_789,2);
      real l__t_791 = Subscript<real[3]>(l_evals_788,2);
      &tensor[3] l__t_792 = Subscript<tensor[3][3]>(l_E_789,1);
      real l__t_793 = Subscript<real[3]>(l_evals_788,1);
      vec3{4} v_794 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_795 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_796 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_797 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_792),LOAD_0(l__t_792));
      vec3{4} v_798 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_792),LOAD_0(l__t_792));
      vec3{4} v_799 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_792),LOAD_0(l__t_792));
      real l_basisEval_800 = RMul(0.2e1,l_prod_686);
      real l_basisEval_801 = RMul(0.2e1,l_prod_711);
      real l_basisEval_802 = RMul(0.2e1,l_prod_713);
      real l_prod_803 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_694,l_varAcc_642)));
      real l_basisEval_804 = RMul(0.1e1,l_prod_803);
      real l_prod_805 = RMul(0.1e1,RMul(l_varAcc_641,l_prod4_694));
      real l_prod_806 = RMul(0.1e1,RMul(l_prod2_660,l_prod3_670));
      real l_prod_807 = RMul(0.1e1,RMul(l_prod3_680,l_prod2_653));
      real l_prod_808 = RMul(0.1e1,RMul(l_prod4_706,l_varAcc_642));
      real l_prod_809 = RMul(0.1e1,RMul(RMul(l_prod4_706,l_varAcc_641),0.1e1));
      real l_basisEval_810 = RMul(0.1e1,l_prod_809);
      real l_prod_811 = RMul(l_varAcc_640,l_prod_695);
      real l_prod_812 = RMul(l_varAcc_640,l_prod_698);
      real l_basisEval_813 = RMul(0.2e1,l_prod_812);
      real l_prod_814 = RMul(l_varAcc_640,l_prod_701);
      real l_prod_815 = RMul(l_varAcc_640,l_prod_703);
      real l_basisEval_816 = RMul(0.2e1,l_prod_815);
      real l_prod_817 = RMul(l_varAcc_640,l_prod_707);
      real l_prod_818 = RMul(l_prod2_668,l_prod_671);
      real l_prod_819 = RMul(l_prod2_668,l_prod_674);
      real l_basisEval_820 = RMul(0.3e1,l_prod_819);
      real l_prod_821 = RMul(l_prod2_668,l_prod_677);
      real l_basisEval_822 = RMul(0.3e1,l_prod_821);
      real l_prod_823 = RMul(l_prod2_668,l_prod_681);
      real l_prod_824 = RMul(l_prod3_692,l_prod_654);
      real l_prod_825 = RMul(l_prod3_692,l_prod_657);
      real l_prod_826 = RMul(l_prod3_692,l_prod_661);
      real l_prod_827 = RMul(l_prod4_723,l_prod_646);
      real l_prod_828 = RMul(l_prod4_723,l_prod_649);
      real l_prod_829 = RMul(RMul(l_prod4_723,l_varAcc_640),l_prod_643);
      real l_basisEval_830 = RMul(0.2e1,l_prod_718);
      real l_basisEval_831 = RMul(0.3e1,l_prod_814);
      real l_basisEval_832 = RMul(0.2e1,l_prod_825);
      real l_basisEval_833 = RMul(0.1e1,l_prod_829);
      vec3{4} v_834 = VEC3{4}(RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_749,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_728,RMul(0.1e1,l_prod_658))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_751,l_basisEval_730,l_basisEval_752,l_basisEval_731)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_732,RMul(0.1e1,l_prod_675),RMul(0.1e1,l_prod_678))),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_755,l_basisEval_735,l_basisEval_800,l_basisEval_756)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_737,l_basisEval_758,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_740,RMul(0.1e1,l_prod_699),RMul(0.1e1,l_prod_702))),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_704),l_basisEval_761,l_basisEval_744,l_basisEval_801)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_802,l_basisEval_762,l_basisEval_745,RMul(0.3e1,l_prod_718))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_763,l_basisEval_747,l_basisEval_764,l_basisEval_748)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_804)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_805),RMul(0.1e1,l_prod_806),RMul(0.1e1,l_prod_807),RMul(0.1e1,l_prod_808))),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_810,RMul(0.2e1,l_prod_811),l_basisEval_813,RMul(0.2e1,l_prod_814))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_816,RMul(0.2e1,l_prod_817),RMul(0.3e1,l_prod_818),l_basisEval_820)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_822,RMul(0.3e1,l_prod_823),RMul(0.4e1,l_prod_824),RMul(0.4e1,l_prod_825))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.4e1,l_prod_826),RMul(0.5e1,l_prod_827),RMul(0.5e1,l_prod_828),RMul(0.6e1,l_prod_829))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_726,l_basisEval_651,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_773,0.e0,0.e0,l_basisEval_728)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_659,l_basisEval_729,0.e0,RMul(0.1e1,l_prod_664))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_752,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_732,l_basisEval_676,l_basisEval_733)),RAdd(VDot<4,4>(v_625,VEC4(l_basisEval_734,0.e0,RMul(0.1e1,l_prod_684),l_basisEval_800)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_777,0.e0,RMul(0.1e1,l_prod_690),l_basisEval_778)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_779,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_629,VEC4(l_basisEval_743,0.e0,RMul(0.1e1,l_prod_710),l_basisEval_801)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.3e1,l_prod_713),l_basisEval_781,0.e0,RMul(0.1e1,l_prod_716))),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_830,l_basisEval_763,0.e0,RMul(0.1e1,l_prod_721))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_782,0.e0,l_basisEval_783,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_804,RMul(0.2e1,l_prod_805),RMul(0.3e1,l_prod_806))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.4e1,l_prod_807),RMul(0.5e1,l_prod_808),RMul(0.6e1,l_prod_809),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_811),l_basisEval_813,l_basisEval_831,RMul(0.4e1,l_prod_815))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.5e1,l_prod_817),0.e0,RMul(0.1e1,l_prod_818),RMul(0.2e1,l_prod_819))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_822,RMul(0.4e1,l_prod_823),0.e0,RMul(0.1e1,l_prod_824))),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_832,RMul(0.3e1,l_prod_826),0.e0,RMul(0.1e1,l_prod_827))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.2e1,l_prod_828),0.e0,l_basisEval_833,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,l_basisEval_725,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_648,l_basisEval_749,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,l_basisEval_750,l_basisEval_659)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_751,0.e0,l_basisEval_730,RMul(0.1e1,l_prod_666))),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_774,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(l_basisEval_753,l_basisEval_754,l_basisEval_679,l_basisEval_755)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_776,l_basisEval_800,RMul(0.1e1,l_prod_688))),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_768,RMul(0.1e1,l_prod_691),0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_779,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_780,RMul(0.3e1,l_prod_711),l_basisEval_802)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_715),0.e0,l_basisEval_745,l_basisEval_830)),RAdd(VDot<4,4>(v_631,VEC4(RMul(0.1e1,l_prod_719),0.e0,l_basisEval_771,RMul(0.1e1,l_prod_722))),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_783,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.6e1,l_prod_803),RMul(0.5e1,l_prod_805),RMul(0.4e1,l_prod_806),RMul(0.3e1,l_prod_807))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.2e1,l_prod_808),l_basisEval_810,0.e0,RMul(0.5e1,l_prod_811))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.4e1,l_prod_812),l_basisEval_831,l_basisEval_816,RMul(0.1e1,l_prod_817))),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.4e1,l_prod_818),l_basisEval_820,RMul(0.2e1,l_prod_821))),RAdd(VDot<4,4>(v_637,VEC4(RMul(0.1e1,l_prod_823),0.e0,RMul(0.3e1,l_prod_824),l_basisEval_832)),RAdd(VDot<4,4>(v_638,VEC4(RMul(0.1e1,l_prod_826),0.e0,RMul(0.2e1,l_prod_827),RMul(0.1e1,l_prod_828))),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_833,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)))))))))))))))))))))));
      v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_794),l__t_791),RDiv(VIndex<3,4,1>(v_794),l__t_791),RDiv(VIndex<3,4,2>(v_794),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_797),l__t_793),RDiv(VIndex<3,4,1>(v_797),l__t_793),RDiv(VIndex<3,4,2>(v_797),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_795),l__t_791),RDiv(VIndex<3,4,1>(v_795),l__t_791),RDiv(VIndex<3,4,2>(v_795),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_798),l__t_793),RDiv(VIndex<3,4,1>(v_798),l__t_793),RDiv(VIndex<3,4,2>(v_798),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_796),l__t_791),RDiv(VIndex<3,4,1>(v_796),l__t_791),RDiv(VIndex<3,4,2>(v_796),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_799),l__t_793),RDiv(VIndex<3,4,1>(v_799),l__t_793),RDiv(VIndex<3,4,2>(v_799),l__t_793)))),v_834));
    } else {
      tensor[3][3] l_E_874;
      real[3] l_evals_873;
      real l_r_836 = TensorIndex<&tensor[3,3],[0,0]>(TensorRef<[3,3]>(globals.rot));
      real l_r_837 = RMul(l_r_836,-0.1e1);
      real l_r_838 = TensorIndex<&tensor[3,3],[1,0]>(TensorRef<[3,3]>(globals.rot));
      real l_r_839 = RMul(l_r_838,0.e0);
      real l_r_840 = TensorIndex<&tensor[3,3],[2,0]>(TensorRef<[3,3]>(globals.rot));
      real l_r_841 = RMul(l_r_840,0.e0);
      real l_r_842 = RAdd(RAdd(l_r_837,l_r_839),l_r_841);
      real l_r_843 = RMul(l_r_836,0.e0);
      real l_r_844 = RMul(l_r_838,-0.2e1);
      real l_r_845 = RAdd(RAdd(l_r_843,l_r_844),l_r_841);
      real l_r_846 = RMul(l_r_840,-0.3e1);
      real l_r_847 = RAdd(RAdd(l_r_843,l_r_839),l_r_846);
      real l_r_848 = TensorIndex<&tensor[3,3],[0,1]>(TensorRef<[3,3]>(globals.rot));
      real l_r_849 = RMul(l_r_848,-0.1e1);
      real l_r_850 = TensorIndex<&tensor[3,3],[1,1]>(TensorRef<[3,3]>(globals.rot));
      real l_r_851 = RMul(l_r_850,0.e0);
      real l_r_852 = TensorIndex<&tensor[3,3],[2,1]>(TensorRef<[3,3]>(globals.rot));
      real l_r_853 = RMul(l_r_852,0.e0);
      real l_r_854 = RAdd(RAdd(l_r_849,l_r_851),l_r_853);
      real l_r_855 = RMul(l_r_848,0.e0);
      real l_r_856 = RMul(l_r_850,-0.2e1);
      real l_r_857 = RAdd(RAdd(l_r_855,l_r_856),l_r_853);
      real l_r_858 = RMul(l_r_852,-0.3e1);
      real l_r_859 = RAdd(RAdd(l_r_855,l_r_851),l_r_858);
      real l_r_860 = TensorIndex<&tensor[3,3],[0,2]>(TensorRef<[3,3]>(globals.rot));
      real l_r_861 = RMul(l_r_860,-0.1e1);
      real l_r_862 = TensorIndex<&tensor[3,3],[1,2]>(TensorRef<[3,3]>(globals.rot));
      real l_r_863 = RMul(l_r_862,0.e0);
      real l_r_864 = TensorIndex<&tensor[3,3],[2,2]>(TensorRef<[3,3]>(globals.rot));
      real l_r_865 = RMul(l_r_864,0.e0);
      real l_r_866 = RAdd(RAdd(l_r_861,l_r_863),l_r_865);
      real l_r_867 = RMul(l_r_860,0.e0);
      real l_r_868 = RMul(l_r_862,-0.2e1);
      real l_r_869 = RAdd(RAdd(l_r_867,l_r_868),l_r_865);
      real l_r_870 = RMul(l_r_864,-0.3e1);
      real l_r_871 = RAdd(RAdd(l_r_867,l_r_863),l_r_870);
      tensor[3,3] t_872 = <tensor[3,3]>[RAdd(RAdd(RMul(l_r_842,l_r_836),RMul(l_r_845,l_r_838)),RMul(l_r_847,l_r_840)),RAdd(RAdd(RMul(l_r_842,l_r_848),RMul(l_r_845,l_r_850)),RMul(l_r_847,l_r_852)),RAdd(RAdd(RMul(l_r_842,l_r_860),RMul(l_r_845,l_r_862)),RMul(l_r_847,l_r_864)),RAdd(RAdd(RMul(l_r_854,l_r_836),RMul(l_r_857,l_r_838)),RMul(l_r_859,l_r_840)),RAdd(RAdd(RMul(l_r_854,l_r_848),RMul(l_r_857,l_r_850)),RMul(l_r_859,l_r_852)),RAdd(RAdd(RMul(l_r_854,l_r_860),RMul(l_r_857,l_r_862)),RMul(l_r_859,l_r_864)),RAdd(RAdd(RMul(l_r_866,l_r_836),RMul(l_r_869,l_r_838)),RMul(l_r_871,l_r_840)),RAdd(RAdd(RMul(l_r_866,l_r_848),RMul(l_r_869,l_r_850)),RMul(l_r_871,l_r_852)),RAdd(RAdd(RMul(l_r_866,l_r_860),RMul(l_r_869,l_r_862)),RMul(l_r_871,l_r_864))];
      (l_evals_873,l_E_874) = EigenVecs3x3(TensorRef<[3,3]>(t_872));
      &tensor[3] l__t_875 = Subscript<tensor[3][3]>(l_E_874,2);
      real l__t_876 = Subscript<real[3]>(l_evals_873,2);
      &tensor[3] l__t_877 = Subscript<tensor[3][3]>(l_E_874,1);
      real l__t_878 = Subscript<real[3]>(l_evals_873,1);
      vec3{4} v_879 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_875),LOAD_0(l__t_875));
      vec3{4} v_880 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_875),LOAD_0(l__t_875));
      vec3{4} v_881 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_875),LOAD_0(l__t_875));
      vec3{4} v_882 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_877),LOAD_0(l__t_877));
      vec3{4} v_883 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_877),LOAD_0(l__t_877));
      vec3{4} v_884 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_877),LOAD_0(l__t_877));
      real l_vdot_885 = VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[0]>(TensorRef<[3,3]>(globals.rot))),v_72);
      real l_vdot_886 = VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[1]>(TensorRef<[3,3]>(globals.rot))),v_72);
      real l_vdot_887 = VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[2]>(TensorRef<[3,3]>(globals.rot))),v_72);
      vec3{4} v_888 = VEC3{4}(RAdd(RAdd(RMul(l_r_837,l_vdot_885),RMul(l_r_844,l_vdot_886)),RMul(l_r_846,l_vdot_887)),RAdd(RAdd(RMul(l_r_849,l_vdot_885),RMul(l_r_856,l_vdot_886)),RMul(l_r_858,l_vdot_887)),RAdd(RAdd(RMul(l_r_861,l_vdot_885),RMul(l_r_868,l_vdot_886)),RMul(l_r_870,l_vdot_887)));
      v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_879),l__t_876),RDiv(VIndex<3,4,1>(v_879),l__t_876),RDiv(VIndex<3,4,2>(v_879),l__t_876)),VEC3{4}(RDiv(VIndex<3,4,0>(v_882),l__t_878),RDiv(VIndex<3,4,1>(v_882),l__t_878),RDiv(VIndex<3,4,2>(v_882),l__t_878)))),v_888),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_880),l__t_876),RDiv(VIndex<3,4,1>(v_880),l__t_876),RDiv(VIndex<3,4,2>(v_880),l__t_876)),VEC3{4}(RDiv(VIndex<3,4,0>(v_883),l__t_878),RDiv(VIndex<3,4,1>(v_883),l__t_878),RDiv(VIndex<3,4,2>(v_883),l__t_878)))),v_888),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_881),l__t_876),RDiv(VIndex<3,4,1>(v_881),l__t_876),RDiv(VIndex<3,4,2>(v_881),l__t_876)),VEC3{4}(RDiv(VIndex<3,4,0>(v_884),l__t_878),RDiv(VIndex<3,4,1>(v_884),l__t_878),RDiv(VIndex<3,4,2>(v_884),l__t_878)))),v_888));
    }
    real l_op1_e3_l_8_889 = Sqrt(VDot<3,4>(v_835,v_835));
    real l__t_890 = RMul(globals.maxAlpha,RClamp(0.e0,0.1e1,RMul(0.15e1,RSub(0.1e1,RDiv(Abs<real>(l_op1_e3_l_8_889),globals.thick)))));
    if (EQ<real>(l__t_890,0.e0)) {
      self.rayN = l_rayN_69;
      active;
    }
    real l__t_891 = MathFn<pow>(RSub(0.1e1,l__t_890),self.alphaFix);
    if (NEQ<real>(self.phKs,0.e0)) {
      vec3{4} v_892 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.eyeDir)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
      l_scomp_893 = MathFn<pow>(Abs<real>(RMul(RDiv(0.1e1,Sqrt(VDot<3,4>(v_892,v_892))),VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_8_889),v_835)),v_892))),self.phSp);
    } else {
      l_scomp_893 = 0.e0;
    }
    real l_cmin_894 = TensorIndex<&tensor[2],[0]>(TensorRef<[2]>(globals.cminmax));
    real l_cmax_895 = TensorIndex<&tensor[2],[1]>(TensorRef<[2]>(globals.cminmax));
    vec3{4} v_896 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    if (NEQ<real>(l_cmin_894,l_cmax_895)) {
      tensor[3,2] l_voxels_1109;
      vec3{4} v_897 = VAdd<3,4>(v_72,v_835);
      int l_mulRes_898 = IMul(globals._t,84);
      int t_899 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_898);
      int t_900 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,1));
      int t_901 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,2));
      int t_902 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,3));
      int t_903 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,4));
      int t_904 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,5));
      int t_905 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,6));
      int t_906 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,7));
      int t_907 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,8));
      int t_908 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,9));
      int t_909 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,10));
      int t_910 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,11));
      int t_911 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,12));
      int t_912 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,13));
      int t_913 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,14));
      int t_914 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,15));
      int t_915 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,16));
      int t_916 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,17));
      int t_917 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,18));
      int t_918 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,19));
      int t_919 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,20));
      int t_920 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,21));
      int t_921 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,22));
      int t_922 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,23));
      int t_923 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,24));
      int t_924 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,25));
      int t_925 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,26));
      int t_926 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,27));
      int t_927 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,28));
      int t_928 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,29));
      int t_929 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,30));
      int t_930 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,31));
      int t_931 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,32));
      int t_932 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,33));
      int t_933 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,34));
      int t_934 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,35));
      int t_935 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,36));
      int t_936 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,37));
      int t_937 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,38));
      int t_938 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,39));
      int t_939 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,40));
      int t_940 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,41));
      int t_941 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,42));
      int t_942 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,43));
      int t_943 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,44));
      int t_944 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,45));
      int t_945 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,46));
      int t_946 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,47));
      int t_947 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,48));
      int t_948 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,49));
      int t_949 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,50));
      int t_950 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,51));
      int t_951 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,52));
      int t_952 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,53));
      int t_953 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,54));
      int t_954 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,55));
      int t_955 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,56));
      int t_956 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,57));
      int t_957 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,58));
      int t_958 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,59));
      int t_959 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,60));
      int t_960 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,61));
      int t_961 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,62));
      int t_962 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,63));
      int t_963 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,64));
      int t_964 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,65));
      int t_965 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,66));
      int t_966 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,67));
      int t_967 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,68));
      int t_968 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,69));
      int t_969 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,70));
      int t_970 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,71));
      int t_971 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,72));
      int t_972 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,73));
      int t_973 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,74));
      int t_974 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,75));
      int t_975 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,76));
      int t_976 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,77));
      int t_977 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,78));
      int t_978 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,79));
      int t_979 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,80));
      int t_980 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,81));
      int t_981 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,82));
      int t_982 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_898,83));
      real t_983 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_982));
      real t_984 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_981));
      real t_985 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_980));
      real t_986 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_979));
      real t_987 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_978));
      real t_988 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_977));
      real t_989 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_976));
      real t_990 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_975));
      real t_991 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_974));
      real t_992 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_973));
      real t_993 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_972));
      real t_994 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_971));
      real t_995 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_970));
      real t_996 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_969));
      real t_997 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_968));
      real t_998 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_967));
      real t_999 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_966));
      real t_1000 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_965));
      real t_1001 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_964));
      real t_1002 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_963));
      real t_1003 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_962));
      real t_1004 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_961));
      real t_1005 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_960));
      real t_1006 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_959));
      real t_1007 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_958));
      real t_1008 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_957));
      real t_1009 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_956));
      real t_1010 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_955));
      real t_1011 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_954));
      real t_1012 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_953));
      real t_1013 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_952));
      real t_1014 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_951));
      real t_1015 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_950));
      real t_1016 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_949));
      real t_1017 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_948));
      real t_1018 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_947));
      real t_1019 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_946));
      real t_1020 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_945));
      real t_1021 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_944));
      real t_1022 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_943));
      real t_1023 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_942));
      real t_1024 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_941));
      real t_1025 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_940));
      real t_1026 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_939));
      real t_1027 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_938));
      real t_1028 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_937));
      real t_1029 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_936));
      real t_1030 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_935));
      real t_1031 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_934));
      real t_1032 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_933));
      real t_1033 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_932));
      real t_1034 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_931));
      real t_1035 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_930));
      real t_1036 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_929));
      real t_1037 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_928));
      real t_1038 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_927));
      real t_1039 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_926));
      real t_1040 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_925));
      real t_1041 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_924));
      real t_1042 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_923));
      real t_1043 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_922));
      real t_1044 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_921));
      real t_1045 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_920));
      real t_1046 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_919));
      real t_1047 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_918));
      real t_1048 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_917));
      real t_1049 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_916));
      real t_1050 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_915));
      real t_1051 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_914));
      real t_1052 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_913));
      real t_1053 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_912));
      real t_1054 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_911));
      real t_1055 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_910));
      real t_1056 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_909));
      real t_1057 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_908));
      real t_1058 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_907));
      real t_1059 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_906));
      real t_1060 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_905));
      real t_1061 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_904));
      real t_1062 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_903));
      real t_1063 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_902));
      real t_1064 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_901));
      real t_1065 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_900));
      real t_1066 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_899));
      real l_varAcc_1067 = VIndex<3,4,0>(v_897);
      real l_varAcc_1068 = VIndex<3,4,1>(v_897);
      real l_varAcc_1069 = VIndex<3,4,2>(v_897);
      real l_prod_1070 = RMul(0.1e1,0.1e1);
      real l_prod_1071 = RMul(0.1e1,l_varAcc_1069);
      real l_prod_1072 = RMul(l_varAcc_1068,0.1e1);
      real l_prod2_1073 = RMul(l_varAcc_1069,l_varAcc_1069);
      real l_prod_1074 = RMul(0.1e1,l_prod2_1073);
      real l_prod_1075 = RMul(l_varAcc_1068,l_varAcc_1069);
      real l_prod2_1076 = RMul(l_varAcc_1068,l_varAcc_1068);
      real l_prod_1077 = RMul(l_prod2_1076,0.1e1);
      real l_prod2_1078 = RMul(l_varAcc_1067,l_varAcc_1067);
      real l_prod3_1079 = RMul(l_prod2_1073,l_varAcc_1069);
      real l_prod_1080 = RMul(0.1e1,l_prod3_1079);
      real l_prod_1081 = RMul(l_varAcc_1068,l_prod2_1073);
      real l_prod_1082 = RMul(l_prod2_1076,l_varAcc_1069);
      real l_prod3_1083 = RMul(l_prod2_1076,l_varAcc_1068);
      real l_prod_1084 = RMul(l_prod3_1083,0.1e1);
      real l_prod3_1085 = RMul(l_prod2_1078,l_varAcc_1067);
      real l_prod4_1086 = RMul(l_prod3_1079,l_varAcc_1069);
      real l_prod_1087 = RMul(0.1e1,l_prod4_1086);
      real l_prod_1088 = RMul(l_varAcc_1068,l_prod3_1079);
      real l_prod_1089 = RMul(l_prod2_1076,l_prod2_1073);
      real l_prod_1090 = RMul(l_prod3_1083,l_varAcc_1069);
      real l_prod4_1091 = RMul(l_prod3_1083,l_varAcc_1068);
      real l_prod_1092 = RMul(l_prod4_1091,0.1e1);
      real l_prod4_1093 = RMul(l_prod3_1085,l_varAcc_1067);
      real l_prod5_1094 = RMul(l_prod4_1086,l_varAcc_1069);
      real l_prod_1095 = RMul(0.1e1,l_prod5_1094);
      real l_prod_1096 = RMul(l_varAcc_1068,l_prod4_1086);
      real l_prod_1097 = RMul(l_prod2_1076,l_prod3_1079);
      real l_prod_1098 = RMul(l_prod3_1083,l_prod2_1073);
      real l_prod_1099 = RMul(l_prod4_1091,l_varAcc_1069);
      real l_prod5_1100 = RMul(l_prod4_1091,l_varAcc_1068);
      real l_prod_1101 = RMul(l_prod5_1100,0.1e1);
      real l_prod5_1102 = RMul(l_prod4_1093,l_varAcc_1067);
      real l_imgPos_1103 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.cmap),RAdd(0.e0,RMul(RDiv(RSub(RAdd(VDot<4,4>(VEC4(t_1062,t_1061,t_1060,t_1059),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1074)),RMul(0.1e1,RMul(0.1e1,l_prod_1075)),RMul(0.1e1,RMul(0.1e1,l_prod_1077)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1071)))),RAdd(VDot<4,4>(VEC4(t_1058,t_1057,t_1056,t_1055),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1072)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1070)),RMul(0.1e1,RMul(0.1e1,l_prod_1080)),RMul(0.1e1,RMul(0.1e1,l_prod_1081)))),RAdd(VDot<4,4>(VEC4(t_1054,t_1053,t_1052,t_1051),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1082)),RMul(0.1e1,RMul(0.1e1,l_prod_1084)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1074)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1075)))),RAdd(VDot<4,4>(VEC4(t_1050,t_1049,t_1048,t_1047),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1077)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1071)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1072)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1070)))),RAdd(VDot<4,4>(VEC4(t_1046,t_1045,t_1044,t_1043),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1087)),RMul(0.1e1,RMul(0.1e1,l_prod_1088)),RMul(0.1e1,RMul(0.1e1,l_prod_1089)),RMul(0.1e1,RMul(0.1e1,l_prod_1090)))),RAdd(VDot<4,4>(VEC4(t_1042,t_1041,t_1040,t_1039),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1092)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1080)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1081)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1082)))),RAdd(VDot<4,4>(VEC4(t_1038,t_1037,t_1036,t_1035),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1084)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1074)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1075)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1077)))),RAdd(VDot<4,4>(VEC4(t_1034,t_1033,t_1032,t_1031),VEC4(RMul(0.1e1,RMul(l_prod3_1085,l_prod_1071)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1072)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1070)),RMul(0.1e1,RMul(0.1e1,l_prod_1095)))),RAdd(VDot<4,4>(VEC4(t_1030,t_1029,t_1028,t_1027),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1096)),RMul(0.1e1,RMul(0.1e1,l_prod_1097)),RMul(0.1e1,RMul(0.1e1,l_prod_1098)),RMul(0.1e1,RMul(0.1e1,l_prod_1099)))),RAdd(VDot<4,4>(VEC4(t_1026,t_1025,t_1024,t_1023),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1101)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1087)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1088)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1089)))),RAdd(VDot<4,4>(VEC4(t_1022,t_1021,t_1020,t_1019),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1090)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1092)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1080)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1081)))),RAdd(VDot<4,4>(VEC4(t_1018,t_1017,t_1016,t_1015),VEC4(RMul(0.1e1,RMul(l_prod2_1078,l_prod_1082)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1084)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1074)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1075)))),RAdd(VDot<4,4>(VEC4(t_1014,t_1013,t_1012,t_1011),VEC4(RMul(0.1e1,RMul(l_prod3_1085,l_prod_1077)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1071)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1072)),RMul(0.1e1,RMul(l_prod5_1102,l_prod_1070)))),RAdd(VDot<4,4>(VEC4(t_1010,t_1009,t_1008,t_1007),VEC4(RMul(0.1e1,RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1094,l_varAcc_1069)))),RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_1068,l_prod5_1094))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod2_1076,l_prod4_1086))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod3_1083,l_prod3_1079))))),RAdd(VDot<4,4>(VEC4(t_1006,t_1005,t_1004,t_1003),VEC4(RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_1091,l_prod2_1073))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1100,l_varAcc_1069))),RMul(0.1e1,RMul(0.1e1,RMul(RMul(l_prod5_1100,l_varAcc_1068),0.1e1))),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1095)))),RAdd(VDot<4,4>(VEC4(t_1002,t_1001,t_1000,t_999),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1096)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1097)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1098)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1099)))),RAdd(VDot<4,4>(VEC4(t_998,t_997,t_996,t_995),VEC4(RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1101)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1087)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1088)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1089)))),RAdd(VDot<4,4>(VEC4(t_994,t_993,t_992,t_991),VEC4(RMul(0.1e1,RMul(l_prod2_1078,l_prod_1090)),RMul(0.1e1,RMul(l_prod2_1078,l_prod_1092)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1080)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1081)))),RAdd(VDot<4,4>(VEC4(t_990,t_989,t_988,t_987),VEC4(RMul(0.1e1,RMul(l_prod3_1085,l_prod_1082)),RMul(0.1e1,RMul(l_prod3_1085,l_prod_1084)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1074)),RMul(0.1e1,RMul(l_prod4_1093,l_prod_1075)))),RAdd(VDot<4,4>(VEC4(t_986,t_985,t_984,t_983),VEC4(RMul(0.1e1,RMul(l_prod4_1093,l_prod_1077)),RMul(0.1e1,RMul(l_prod5_1102,l_prod_1071)),RMul(0.1e1,RMul(l_prod5_1102,l_prod_1072)),RMul(0.1e1,RMul(RMul(l_prod5_1102,l_varAcc_1067),l_prod_1070)))),VDot<4,4>(VEC4(t_1066,t_1065,t_1064,t_1063),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1070)),RMul(0.1e1,RMul(0.1e1,l_prod_1071)),RMul(0.1e1,RMul(0.1e1,l_prod_1072)),RMul(0.1e1,RMul(l_varAcc_1067,l_prod_1070)))))))))))))))))))))))),l_cmin_894),RSub(l_cmax_895,l_cmin_894)),RSub(0.1e1,0.e0)))),Translate<IMAGE1D<double[3]>>(globals.cmap));
      real l_nd_1104 = RFloor(l_imgPos_1103);
      real l_f_1105 = RSub(l_imgPos_1103,l_nd_1104);
      int l_n_1106 = RealToInt(l_nd_1104);
      if (IndexInside<IMAGE1D<double[3]>,2>(l_n_1106,globals.cmap)) {
        int l_offp_1107 = IMul(3,l_n_1106);
        int l_offp_1108 = IMul(3,IAdd(l_n_1106,1));
        l_voxels_1109 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1107),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1108),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1107,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1108,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1107,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1108,2))];
      } else {
        int l_offp_1110 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,l_n_1106));
        int l_offp_1111 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,IAdd(l_n_1106,1)));
        l_voxels_1109 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1110),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1111),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1110,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1111,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1110,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1111,2))];
      }
      vec2 v_1112 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_1105,RSub(l_f_1105,0.1e1)),VEC2(-0.1e1,0.1e1)));
      v_1113 = VEC3{4}(VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_1109)),v_1112),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_1109)),v_1112),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_1109)),v_1112));
    } else {
      v_1113 = v_896;
    }
    real l_op1_e3_l_24_1114 = VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_8_889),v_835)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
    real l_op1_e3_l_33_1115 = RAdd(self.phKa,RMul(self.phKd,RMul(l_op1_e3_l_24_1114,l_op1_e3_l_24_1114)));
    vec3{4} v_1116 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.mcNear)),VScale<3,4>(RDiv(RSub(l_rayN_69,globals.camNearVsp),RSub(globals.camFarVsp,globals.camNearVsp)),VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.mcFar)),LOAD_0(TensorRef<[3]>(globals.mcNear)))));
    real l_r_1117 = RMul(RMul(self.phKs,l_scomp_893),0.1e1);
    real l_op1_e3_l_37_1118 = RSub(0.1e1,l__t_891);
    vec3{4} v_1119 = VAdd<3,4>(VEC3{4}(RMul(RMul(l_op1_e3_l_33_1115,VIndex<3,4,0>(v_1116)),VIndex<3,4,0>(v_1113)),RMul(RMul(l_op1_e3_l_33_1115,VIndex<3,4,1>(v_1116)),VIndex<3,4,1>(v_1113)),RMul(RMul(l_op1_e3_l_33_1115,VIndex<3,4,2>(v_1116)),VIndex<3,4,2>(v_1113))),VEC3{4}(l_r_1117,l_r_1117,l_r_1117));
    real l_r_1120 = RMul(self.transp,l_op1_e3_l_37_1118);
    vec3{4} v_1121 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_1120,VIndex<3,4,0>(v_1119)),RMul(l_r_1120,VIndex<3,4,1>(v_1119)),RMul(l_r_1120,VIndex<3,4,2>(v_1119))));
    real l_transp_1122 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_37_1118));
    vec3{4} v_1123 = v_1121;
    if (LT<real>(l_transp_1122,globals.transp0)) {
      self.rayN = l_rayN_69;
      self.rgb = PACK(v_1123);
      self.transp = 0.e0;
      stabilize;
    } else {
      l_transp_1125 = l_transp_1122;
    }
    self.rayN = l_rayN_69;
    self.rgb = PACK(v_1123);
    self.transp = l_transp_1125;
    active;
  }
  stabilize () {
    vec4 v_1128;
    if (LT<real>(self.transp,0.1e1)) {
      real l_aa_1127 = RSub(0.1e1,self.transp);
      v_1128 = VEC4(RDiv(TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(self.rgb)),l_aa_1127),RDiv(TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(self.rgb)),l_aa_1127),RDiv(TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(self.rgb)),l_aa_1127),l_aa_1127);
    } else {
      v_1128 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    self.rgba = PACK(v_1128);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_1130 = 0 to ISub(globals.iresV,1) {
      for i_ui_1131 = 0 to ISub(globals.iresU,1) {
        new ray(i_ui_1131,i_vi_1130);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -pthread -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-par-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.064    25.691
    front end .......................................................................   0.606     0.817
      parser ........................................................................   0.045     0.045
      typechecker ...................................................................   0.167     0.167
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.008     0.008
    High IR optimization ............................................................   0.014    22.475
      High IR value numbering .......................................................   0.008     0.008
      High IR normalization .........................................................  22.453    22.453
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.019     0.019
    Mid IR optimization .............................................................   0.018     0.032
      Mid IR contraction ............................................................   0.003     0.003
      Mid IR value numbering ........................................................   0.010     0.010
      Mid IR border control .........................................................   0.001     0.001
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.191     0.191
    Low IR optimization .............................................................   0.087     0.228
      Low IR contraction ............................................................   0.058     0.058
      Low IR value numbering ........................................................   0.083     0.083
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.089     0.089
    Tree IR optimization ............................................................   0.011     0.012
      Tree IR contraction ...........................................................   0.001     0.001
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.050     1.756
      C compiler ....................................................................   1.706     1.706
