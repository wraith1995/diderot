/* ParseTree: After parsing */
  Program @ [evalProg.diderot:4.1-176.0] 
    [
      Type: mesh_t= @ [evalProg.diderot:4.1-5.0] 
        Mesh @ [evalProg.diderot:4.6-10] 
        From File : pagotFile.json @ [evalProg.diderot:4.1-5.0] 
      Type: fns_t= @ [evalProg.diderot:5.1-6.0] 
        FunctionSpace(mesh_t) @ [evalProg.diderot:5.6-29] 
          [ ]
        From File : pagotFile.json @ [evalProg.diderot:5.1-6.0] 
      Type: func_t= @ [evalProg.diderot:6.1-7.0] 
        FemFunction(fns_t) @ [evalProg.diderot:6.6-24] 
        From File : pagotFile.json @ [evalProg.diderot:6.1-7.0] 
      Input: block @ [evalProg.diderot:7.1-8.0] 
      Input: space= @ [evalProg.diderot:8.1-9.0] 
        Apply @ [evalProg.diderot:8.21-33] 
          Var: fns_t @ [evalProg.diderot:8.21-26] 
          [
            Var: block @ [evalProg.diderot:8.27-32] 
          ]
      Input: U= @ [evalProg.diderot:9.1-10.0] 
        Apply @ [evalProg.diderot:9.18-31] 
          Var: func_t @ [evalProg.diderot:9.18-24] 
          [
            Var: space @ [evalProg.diderot:9.25-30] 
          ]
      Input: cellChoice @ [evalProg.diderot:10.1-11.0] 
      Var @ [evalProg.diderot:16.1-17.0] 
        Decl: c1= @ [evalProg.diderot:16.1-17.0] 
          Subscript @ [evalProg.diderot:16.19-42] 
            Select @ [evalProg.diderot:16.19-42] 
              Var: block @ [evalProg.diderot:16.19-24] 
              cells
            [
              Var: cellChoice @ [evalProg.diderot:16.31-41] 
            ]
      Var @ [evalProg.diderot:17.1-18.0] 
        Decl: F= @ [evalProg.diderot:17.1-18.0] 
          Select @ [evalProg.diderot:17.16-39] 
            Apply @ [evalProg.diderot:17.16-39] 
              Select @ [evalProg.diderot:17.16-39] 
                Var: U @ [evalProg.diderot:17.16-17] 
                funcCell
              [
                Var: c1 @ [evalProg.diderot:17.27-29] 
              ]
            refField
      Input: cmap= @ [evalProg.diderot:20.1-21.0] 
        Image @ [evalProg.diderot:20.26-49] 
          Lit: "cmap.nrrd" @ [evalProg.diderot:20.37-48] 
      Var @ [evalProg.diderot:21.1-22.0] 
        Decl: CM= @ [evalProg.diderot:21.1-22.0] 
          BinOp: ⊛ @ [evalProg.diderot:21.20-40] 
            Var: tent @ [evalProg.diderot:21.20-24] 
            Apply @ [evalProg.diderot:21.29-40] 
              Var: clamp @ [evalProg.diderot:21.29-34] 
              [
                Var: cmap @ [evalProg.diderot:21.35-39] 
              ]
      Var @ [evalProg.diderot:22.1-23.0] 
        Decl: C= @ [evalProg.diderot:22.1-23.0] 
          Var: F @ [evalProg.diderot:22.16-17] 
      Input: camEye= @ [evalProg.diderot:26.1-27.0] 
        Cons @ [evalProg.diderot:26.21-29] 
          [
            Lit: 0 @ [evalProg.diderot:26.22-23] 
            UnaryOp: unary - @ [evalProg.diderot:26.24-26] 
              Lit: 2 @ [evalProg.diderot:26.25-26] 
            Lit: 0 @ [evalProg.diderot:26.27-28] 
          ]
      Input: camAt= @ [evalProg.diderot:27.1-28.0] 
        Cons @ [evalProg.diderot:27.21-28] 
          [
            Lit: 0 @ [evalProg.diderot:27.22-23] 
            Lit: 0 @ [evalProg.diderot:27.24-25] 
            Lit: 0 @ [evalProg.diderot:27.26-27] 
          ]
      Input: camUp= @ [evalProg.diderot:28.1-29.0] 
        Cons @ [evalProg.diderot:28.20-27] 
          [
            Lit: 0 @ [evalProg.diderot:28.21-22] 
            Lit: 0 @ [evalProg.diderot:28.23-24] 
            Lit: 1 @ [evalProg.diderot:28.25-26] 
          ]
      Input: camNear= @ [evalProg.diderot:29.1-30.0] 
        UnaryOp: unary - @ [evalProg.diderot:29.22-26] 
          Lit: 0.4e1 @ [evalProg.diderot:29.23-26] 
      Input: camFar= @ [evalProg.diderot:30.1-31.0] 
        Lit: 0.4e1 @ [evalProg.diderot:30.21-24] 
      Input: camFOV= @ [evalProg.diderot:31.1-32.0] 
        Lit: 10 @ [evalProg.diderot:31.21-23] 
      Input: camOrtho= @ [evalProg.diderot:32.1-33.0] 
        Lit: false @ [evalProg.diderot:32.23-28] 
      Input: iresU= @ [evalProg.diderot:33.1-34.0] 
        Lit: 100 @ [evalProg.diderot:33.19-22] 
      Input: iresV= @ [evalProg.diderot:34.1-35.0] 
        Lit: 100 @ [evalProg.diderot:34.19-22] 
      Var @ [evalProg.diderot:37.1-39] 
        Decl: camN= @ [evalProg.diderot:37.1-39] 
          Apply @ [evalProg.diderot:37.13-38] 
            Var: normalize @ [evalProg.diderot:37.13-22] 
            [
              BinOp: - @ [evalProg.diderot:37.23-37] 
                Var: camAt @ [evalProg.diderot:37.23-28] 
                Var: camEye @ [evalProg.diderot:37.31-37] 
            ]
      Var @ [evalProg.diderot:38.1-38] 
        Decl: camU= @ [evalProg.diderot:38.1-38] 
          Apply @ [evalProg.diderot:38.13-37] 
            Var: normalize @ [evalProg.diderot:38.13-22] 
            [
              BinOp: × @ [evalProg.diderot:38.23-36] 
                Var: camN @ [evalProg.diderot:38.23-27] 
                Var: camUp @ [evalProg.diderot:38.31-36] 
            ]
      Var @ [evalProg.diderot:39.1-40.0] 
        Decl: camV= @ [evalProg.diderot:39.1-40.0] 
          BinOp: × @ [evalProg.diderot:39.13-25] 
            Var: camN @ [evalProg.diderot:39.13-17] 
            Var: camU @ [evalProg.diderot:39.21-25] 
      Var @ [evalProg.diderot:40.1-41.0] 
        Decl: camDist= @ [evalProg.diderot:40.1-41.0] 
          UnaryOp: |()| @ [evalProg.diderot:40.16-32] 
            BinOp: - @ [evalProg.diderot:40.17-31] 
              Var: camAt @ [evalProg.diderot:40.17-22] 
              Var: camEye @ [evalProg.diderot:40.25-31] 
      Var @ [evalProg.diderot:41.1-42.0] 
        Decl: camVmax= @ [evalProg.diderot:41.1-42.0] 
          BinOp: * @ [evalProg.diderot:41.16-43] 
            Apply @ [evalProg.diderot:41.16-35] 
              Var: tan @ [evalProg.diderot:41.16-19] 
              [
                BinOp: / @ [evalProg.diderot:41.20-34] 
                  BinOp: * @ [evalProg.diderot:41.20-30] 
                    Var: camFOV @ [evalProg.diderot:41.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [evalProg.diderot:41.28-30] 
                  Lit: 360 @ [evalProg.diderot:41.31-34] 
              ]
            Var: camDist @ [evalProg.diderot:41.36-43] 
      Var @ [evalProg.diderot:42.1-43.0] 
        Decl: camUmax= @ [evalProg.diderot:42.1-43.0] 
          BinOp: / @ [evalProg.diderot:42.16-35] 
            BinOp: * @ [evalProg.diderot:42.16-29] 
              Var: camVmax @ [evalProg.diderot:42.16-23] 
              Var: iresU @ [evalProg.diderot:42.24-29] 
            Var: iresV @ [evalProg.diderot:42.30-35] 
      Var @ [evalProg.diderot:43.1-37] 
        Decl: camNearVsp= @ [evalProg.diderot:43.1-37] 
          BinOp: + @ [evalProg.diderot:43.19-36] 
            Var: camNear @ [evalProg.diderot:43.19-26] 
            Var: camDist @ [evalProg.diderot:43.29-36] 
      Var @ [evalProg.diderot:44.1-45.0] 
        Decl: camFarVsp= @ [evalProg.diderot:44.1-45.0] 
          BinOp: + @ [evalProg.diderot:44.18-34] 
            Var: camFar @ [evalProg.diderot:44.18-24] 
            Var: camDist @ [evalProg.diderot:44.27-34] 
      Input: rayStep= @ [evalProg.diderot:48.1-49.0] 
        Lit: 0.1e-3 @ [evalProg.diderot:48.22-28] 
      Input: refStep= @ [evalProg.diderot:49.1-50.0] 
        Lit: 0.1e-3 @ [evalProg.diderot:49.22-28] 
      Input: transp0= @ [evalProg.diderot:52.1-53.0] 
        Lit: 0.5e-2 @ [evalProg.diderot:52.22-27] 
      Input: thick= @ [evalProg.diderot:53.1-54.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:53.20-24] 
      Input: fStrTh= @ [evalProg.diderot:54.1-55.0] 
        Lit: 0.e0 @ [evalProg.diderot:54.21-24] 
      Input: fMaskTh= @ [evalProg.diderot:55.1-56.0] 
        Lit: 0.e0 @ [evalProg.diderot:55.22-25] 
      Input: fBias= @ [evalProg.diderot:56.1-57.0] 
        Lit: 0.1e0 @ [evalProg.diderot:56.20-23] 
      Input: maxAlpha= @ [evalProg.diderot:57.1-58.0] 
        Lit: 0.1e1 @ [evalProg.diderot:57.23-26] 
      Input: light= @ [evalProg.diderot:60.1-61.0] 
        Lit: false @ [evalProg.diderot:60.20-25] 
      Input: phong= @ [evalProg.diderot:61.1-62.0] 
        Cons @ [evalProg.diderot:61.20-40] 
          [
            Lit: 0.1e0 @ [evalProg.diderot:61.21-24] 
            Lit: 0.7e0 @ [evalProg.diderot:61.26-29] 
            Lit: 0.2e0 @ [evalProg.diderot:61.31-34] 
            Lit: 100 @ [evalProg.diderot:61.36-39] 
          ]
      Input: mcNear= @ [evalProg.diderot:62.1-63.0] 
        Cons @ [evalProg.diderot:62.21-28] 
          [
            Lit: 1 @ [evalProg.diderot:62.22-23] 
            Lit: 1 @ [evalProg.diderot:62.24-25] 
            Lit: 1 @ [evalProg.diderot:62.26-27] 
          ]
      Input: mcFar= @ [evalProg.diderot:63.1-64.0] 
        Cons @ [evalProg.diderot:63.20-27] 
          [
            Lit: 1 @ [evalProg.diderot:63.21-22] 
            Lit: 1 @ [evalProg.diderot:63.23-24] 
            Lit: 1 @ [evalProg.diderot:63.25-26] 
          ]
      Input: litdir= @ [evalProg.diderot:64.1-65.0] 
        Cons @ [evalProg.diderot:64.21-29] 
          [
            Lit: 0 @ [evalProg.diderot:64.22-23] 
            UnaryOp: unary - @ [evalProg.diderot:64.24-26] 
              Lit: 1 @ [evalProg.diderot:64.25-26] 
            Lit: 0 @ [evalProg.diderot:64.27-28] 
          ]
      Input: cminmax= @ [evalProg.diderot:65.1-66.0] 
        Cons @ [evalProg.diderot:65.22-27] 
          [
            Lit: 0 @ [evalProg.diderot:65.23-24] 
            Lit: 0 @ [evalProg.diderot:65.25-26] 
          ]
      Var @ [evalProg.diderot:67.1-68.0] 
        Decl: litwsp= @ [evalProg.diderot:67.1-68.0] 
          BinOp: • @ [evalProg.diderot:67.15-64] 
            Apply @ [evalProg.diderot:67.15-42] 
              Var: transpose @ [evalProg.diderot:67.15-24] 
              [
                Cons @ [evalProg.diderot:67.25-41] 
                  [
                    Var: camU @ [evalProg.diderot:67.26-30] 
                    Var: camV @ [evalProg.diderot:67.31-35] 
                    Var: camN @ [evalProg.diderot:67.36-40] 
                  ]
              ]
            Apply @ [evalProg.diderot:67.47-64] 
              Var: normalize @ [evalProg.diderot:67.47-56] 
              [
                Var: litdir @ [evalProg.diderot:67.57-63] 
              ]
      Input: analytical= @ [evalProg.diderot:70.1-71.0] 
        Lit: true @ [evalProg.diderot:70.25-29] 
      Input: umm= @ [evalProg.diderot:71.1-72.0] 
        Image @ [evalProg.diderot:71.24-47] 
          Lit: "data.nrrd" @ [evalProg.diderot:71.35-46] 
      Var @ [evalProg.diderot:72.1-33] 
        Decl: G= @ [evalProg.diderot:72.1-33] 
          BinOp: ⊛ @ [evalProg.diderot:72.18-32] 
            Var: umm @ [evalProg.diderot:72.18-21] 
            Var: bspln3 @ [evalProg.diderot:72.26-32] 
      Func: atent @ [evalProg.diderot:75.1-76.0] 
        Tensor @ [evalProg.diderot:75.10-15] 
          [ ]
        [
          Param: a0 @ [evalProg.diderot:75.21-28] 
            Tensor @ [evalProg.diderot:75.21-26] 
              [ ]
          Param: d @ [evalProg.diderot:75.30-36] 
            Tensor @ [evalProg.diderot:75.30-35] 
              [ ]
        ]
        Expr @ [evalProg.diderot:75.1-76.0] 
          BinOp: * @ [evalProg.diderot:75.40-75] 
            Var: a0 @ [evalProg.diderot:75.40-42] 
            Apply @ [evalProg.diderot:75.43-75] 
              Var: clamp @ [evalProg.diderot:75.43-48] 
              [
                Lit: 0 @ [evalProg.diderot:75.49-50] 
                Lit: 1 @ [evalProg.diderot:75.52-53] 
                BinOp: * @ [evalProg.diderot:75.55-74] 
                  Lit: 0.15e1 @ [evalProg.diderot:75.55-58] 
                  BinOp: - @ [evalProg.diderot:75.60-73] 
                    Lit: 1 @ [evalProg.diderot:75.60-61] 
                    BinOp: / @ [evalProg.diderot:75.64-73] 
                      UnaryOp: |()| @ [evalProg.diderot:75.64-67] 
                        Var: d @ [evalProg.diderot:75.65-66] 
                      Var: thick @ [evalProg.diderot:75.68-73] 
              ]
      Func: fStep @ [evalProg.diderot:77.1-95.1] 
        Tensor @ [evalProg.diderot:77.10-15] 
          [
            Lit: 3 @ [evalProg.diderot:77.10-15] 
          ]
        [
          Param: x @ [evalProg.diderot:77.21-27] 
            Tensor @ [evalProg.diderot:77.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:77.21-26] 
              ]
        ]
        Stmt @ [evalProg.diderot:77.1-95.1] 
          IfThenElse @ [evalProg.diderot:81.3-94.0] 
            UnaryOp: ! @ [evalProg.diderot:81.6-17] 
              Var: analytical @ [evalProg.diderot:81.7-17] 
            Block @ [evalProg.diderot:81.18-87.0] 
              [
                Decl @ [evalProg.diderot:81.18-87.0] 
                  Decl: E= @ [evalProg.diderot:82.3-83.0] 
                    Apply @ [evalProg.diderot:82.15-36] 
                      Var: evecs @ [evalProg.diderot:82.15-20] 
                      [
                        Apply @ [evalProg.diderot:82.22-35] 
                          UnaryOp: ∇⊗ @ [evalProg.diderot:82.22-32] 
                            UnaryOp: ∇ @ [evalProg.diderot:82.28-32] 
                              Var: F @ [evalProg.diderot:82.31-32] 
                          [
                            Var: x @ [evalProg.diderot:82.33-34] 
                          ]
                      ]
                Decl @ [evalProg.diderot:81.18-87.0] 
                  Decl: L= @ [evalProg.diderot:83.3-84.0] 
                    Apply @ [evalProg.diderot:83.15-36] 
                      Var: evals @ [evalProg.diderot:83.15-20] 
                      [
                        Apply @ [evalProg.diderot:83.22-35] 
                          UnaryOp: ∇⊗ @ [evalProg.diderot:83.22-32] 
                            UnaryOp: ∇ @ [evalProg.diderot:83.28-32] 
                              Var: F @ [evalProg.diderot:83.31-32] 
                          [
                            Var: x @ [evalProg.diderot:83.33-34] 
                          ]
                      ]
                Return @ [evalProg.diderot:84.3-86.0] 
                  BinOp: • @ [evalProg.diderot:84.10-85.36] 
                    UnaryOp: unary - @ [evalProg.diderot:84.10-85.25] 
                      BinOp: + @ [evalProg.diderot:84.12-85.23] 
                        BinOp: / @ [evalProg.diderot:84.12-31] 
                          BinOp: ⊗ @ [evalProg.diderot:84.12-25] 
                            Subscript @ [evalProg.diderot:84.12-16] 
                              Var: E @ [evalProg.diderot:84.12-13] 
                              [
                                Lit: 2 @ [evalProg.diderot:84.14-15] 
                              ]
                            Subscript @ [evalProg.diderot:84.21-25] 
                              Var: E @ [evalProg.diderot:84.21-22] 
                              [
                                Lit: 2 @ [evalProg.diderot:84.23-24] 
                              ]
                          Subscript @ [evalProg.diderot:84.26-30] 
                            Var: L @ [evalProg.diderot:84.26-27] 
                            [
                              Lit: 2 @ [evalProg.diderot:84.28-29] 
                            ]
                        BinOp: / @ [evalProg.diderot:85.5-23] 
                          BinOp: ⊗ @ [evalProg.diderot:85.5-18] 
                            Subscript @ [evalProg.diderot:85.5-9] 
                              Var: E @ [evalProg.diderot:85.5-6] 
                              [
                                Lit: 1 @ [evalProg.diderot:85.7-8] 
                              ]
                            Subscript @ [evalProg.diderot:85.14-18] 
                              Var: E @ [evalProg.diderot:85.14-15] 
                              [
                                Lit: 1 @ [evalProg.diderot:85.16-17] 
                              ]
                          Subscript @ [evalProg.diderot:85.19-23] 
                            Var: L @ [evalProg.diderot:85.19-20] 
                            [
                              Lit: 1 @ [evalProg.diderot:85.21-22] 
                            ]
                    Apply @ [evalProg.diderot:85.28-36] 
                      UnaryOp: ∇ @ [evalProg.diderot:85.28-33] 
                        Var: F @ [evalProg.diderot:85.32-33] 
                      [
                        Var: x @ [evalProg.diderot:85.34-35] 
                      ]
              ]
            Block @ [evalProg.diderot:87.7-94.0] 
              [
                Decl @ [evalProg.diderot:87.7-94.0] 
                  Decl: E= @ [evalProg.diderot:88.5-89.0] 
                    Apply @ [evalProg.diderot:88.17-38] 
                      Var: evecs @ [evalProg.diderot:88.17-22] 
                      [
                        Apply @ [evalProg.diderot:88.24-37] 
                          UnaryOp: ∇⊗ @ [evalProg.diderot:88.24-34] 
                            UnaryOp: ∇ @ [evalProg.diderot:88.30-34] 
                              Var: G @ [evalProg.diderot:88.33-34] 
                          [
                            Var: x @ [evalProg.diderot:88.35-36] 
                          ]
                      ]
                Decl @ [evalProg.diderot:87.7-94.0] 
                  Decl: L= @ [evalProg.diderot:89.5-90.0] 
                    Apply @ [evalProg.diderot:89.17-38] 
                      Var: evals @ [evalProg.diderot:89.17-22] 
                      [
                        Apply @ [evalProg.diderot:89.24-37] 
                          UnaryOp: ∇⊗ @ [evalProg.diderot:89.24-34] 
                            UnaryOp: ∇ @ [evalProg.diderot:89.30-34] 
                              Var: G @ [evalProg.diderot:89.33-34] 
                          [
                            Var: x @ [evalProg.diderot:89.35-36] 
                          ]
                      ]
                Return @ [evalProg.diderot:90.3-92.0] 
                  BinOp: • @ [evalProg.diderot:90.10-91.36] 
                    UnaryOp: unary - @ [evalProg.diderot:90.10-91.25] 
                      BinOp: + @ [evalProg.diderot:90.12-91.23] 
                        BinOp: / @ [evalProg.diderot:90.12-31] 
                          BinOp: ⊗ @ [evalProg.diderot:90.12-25] 
                            Subscript @ [evalProg.diderot:90.12-16] 
                              Var: E @ [evalProg.diderot:90.12-13] 
                              [
                                Lit: 2 @ [evalProg.diderot:90.14-15] 
                              ]
                            Subscript @ [evalProg.diderot:90.21-25] 
                              Var: E @ [evalProg.diderot:90.21-22] 
                              [
                                Lit: 2 @ [evalProg.diderot:90.23-24] 
                              ]
                          Subscript @ [evalProg.diderot:90.26-30] 
                            Var: L @ [evalProg.diderot:90.26-27] 
                            [
                              Lit: 2 @ [evalProg.diderot:90.28-29] 
                            ]
                        BinOp: / @ [evalProg.diderot:91.5-23] 
                          BinOp: ⊗ @ [evalProg.diderot:91.5-18] 
                            Subscript @ [evalProg.diderot:91.5-9] 
                              Var: E @ [evalProg.diderot:91.5-6] 
                              [
                                Lit: 1 @ [evalProg.diderot:91.7-8] 
                              ]
                            Subscript @ [evalProg.diderot:91.14-18] 
                              Var: E @ [evalProg.diderot:91.14-15] 
                              [
                                Lit: 1 @ [evalProg.diderot:91.16-17] 
                              ]
                          Subscript @ [evalProg.diderot:91.19-23] 
                            Var: L @ [evalProg.diderot:91.19-20] 
                            [
                              Lit: 1 @ [evalProg.diderot:91.21-22] 
                            ]
                    Apply @ [evalProg.diderot:91.29-36] 
                      UnaryOp: ∇ @ [evalProg.diderot:91.29-33] 
                        Var: G @ [evalProg.diderot:91.32-33] 
                      [
                        Var: x @ [evalProg.diderot:91.34-35] 
                      ]
              ]
      Func: fStrength @ [evalProg.diderot:95.1-97.0] 
        Tensor @ [evalProg.diderot:95.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:95.25-31] 
            Tensor @ [evalProg.diderot:95.25-30] 
              [
                Lit: 3 @ [evalProg.diderot:95.25-30] 
              ]
        ]
        Expr @ [evalProg.diderot:95.1-97.0] 
          BinOp: / @ [evalProg.diderot:96.3-50] 
            UnaryOp: unary - @ [evalProg.diderot:96.3-28] 
              Subscript @ [evalProg.diderot:96.4-28] 
                Apply @ [evalProg.diderot:96.4-28] 
                  Var: evals @ [evalProg.diderot:96.4-9] 
                  [
                    Apply @ [evalProg.diderot:96.11-24] 
                      UnaryOp: ∇⊗ @ [evalProg.diderot:96.11-21] 
                        UnaryOp: ∇ @ [evalProg.diderot:96.17-21] 
                          Var: F @ [evalProg.diderot:96.20-21] 
                      [
                        Var: x @ [evalProg.diderot:96.22-23] 
                      ]
                  ]
                [
                  Lit: 1 @ [evalProg.diderot:96.26-27] 
                ]
            BinOp: + @ [evalProg.diderot:96.30-49] 
              Var: fBias @ [evalProg.diderot:96.30-35] 
              UnaryOp: |()| @ [evalProg.diderot:96.38-49] 
                Apply @ [evalProg.diderot:96.40-48] 
                  UnaryOp: ∇ @ [evalProg.diderot:96.40-45] 
                    Var: F @ [evalProg.diderot:96.44-45] 
                  [
                    Var: x @ [evalProg.diderot:96.46-47] 
                  ]
      Func: fTest @ [evalProg.diderot:98.1-36] 
        Bool @ [evalProg.diderot:98.10-15] 
        [
          Param: x @ [evalProg.diderot:98.21-27] 
            Tensor @ [evalProg.diderot:98.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:98.21-26] 
              ]
        ]
        Expr @ [evalProg.diderot:98.1-36] 
          Lit: true @ [evalProg.diderot:98.31-35] 
      Func: fMask @ [evalProg.diderot:100.1-35] 
        Tensor @ [evalProg.diderot:100.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:100.21-27] 
            Tensor @ [evalProg.diderot:100.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:100.21-26] 
              ]
        ]
        Expr @ [evalProg.diderot:100.1-35] 
          Lit: 0.1e1 @ [evalProg.diderot:100.31-34] 
      Func: posTest @ [evalProg.diderot:102.1-103.0] 
        Bool @ [evalProg.diderot:102.10-15] 
        [
          Param: x @ [evalProg.diderot:102.23-29] 
            Tensor @ [evalProg.diderot:102.23-28] 
              [
                Lit: 3 @ [evalProg.diderot:102.23-28] 
              ]
        ]
        Expr @ [evalProg.diderot:102.1-103.0] 
          AndAlso @ [evalProg.diderot:102.33-118] 
            Apply @ [evalProg.diderot:102.33-58] 
              Select @ [evalProg.diderot:102.33-58] 
                Select @ [evalProg.diderot:102.33-58] 
                  Var: block @ [evalProg.diderot:102.33-38] 
                  refcell
                isInside
              [
                Var: x @ [evalProg.diderot:102.56-57] 
              ]
            AndAlso @ [evalProg.diderot:102.59-118] 
              BinOp: > @ [evalProg.diderot:102.62-84] 
                Apply @ [evalProg.diderot:102.62-74] 
                  Var: fStrength @ [evalProg.diderot:102.62-71] 
                  [
                    Var: x @ [evalProg.diderot:102.72-73] 
                  ]
                Var: fStrTh @ [evalProg.diderot:102.77-83] 
              AndAlso @ [evalProg.diderot:102.84-118] 
                BinOp: >= @ [evalProg.diderot:102.87-107] 
                  Apply @ [evalProg.diderot:102.87-95] 
                    Var: fMask @ [evalProg.diderot:102.87-92] 
                    [
                      Var: x @ [evalProg.diderot:102.93-94] 
                    ]
                  Var: fMaskTh @ [evalProg.diderot:102.99-106] 
                Apply @ [evalProg.diderot:102.110-118] 
                  Var: fTest @ [evalProg.diderot:102.110-115] 
                  [
                    Var: x @ [evalProg.diderot:102.116-117] 
                  ]
    ]
    Strand: ray @ [evalProg.diderot:106.1-174.3] 
      [
        Param: ui @ [evalProg.diderot:106.12-18] 
          Int @ [evalProg.diderot:106.12-16] 
        Param: vi @ [evalProg.diderot:106.20-26] 
          Int @ [evalProg.diderot:106.20-24] 
      ]
      [
        VarDcl @ [evalProg.diderot:108.3-109.0] 
        VarDcl @ [evalProg.diderot:109.3-110.0] 
        VarDcl @ [evalProg.diderot:110.3-111.0] 
        VarDcl @ [evalProg.diderot:111.3-112.0] 
        VarDcl @ [evalProg.diderot:112.3-113.0] 
        VarDcl @ [evalProg.diderot:113.3-114.0] 
        VarDcl @ [evalProg.diderot:115.3-116.0] 
        VarDcl @ [evalProg.diderot:116.3-117.0] 
        VarDcl @ [evalProg.diderot:119.3-24] 
        VarDcl @ [evalProg.diderot:119.25-120.0] 
        VarDcl @ [evalProg.diderot:120.3-24] 
        VarDcl @ [evalProg.diderot:120.25-121.0] 
        VarDcl: output @ [evalProg.diderot:121.3-122.0] 
        VarDcl: output @ [evalProg.diderot:122.3-123.0] 
        VarDcl @ [evalProg.diderot:123.3-22] 
        VarDcl @ [evalProg.diderot:124.3-19] 
      ]
      [
        Method: Update @ [evalProg.diderot:126.3-164.3] 
          Block @ [evalProg.diderot:126.10-164.0] 
            [
              Assign: rayN+= @ [evalProg.diderot:128.5-129.0] 
                Var: rayStep @ [evalProg.diderot:128.13-20] 
              IfThen @ [evalProg.diderot:129.5-130.5] 
                BinOp: > @ [evalProg.diderot:129.8-24] 
                  Var: rayN @ [evalProg.diderot:129.8-12] 
                  Var: camFarVsp @ [evalProg.diderot:129.15-24] 
                Stabilize @ [evalProg.diderot:129.27-37] 
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: pos= @ [evalProg.diderot:130.5-131.0] 
                  BinOp: + @ [evalProg.diderot:130.16-39] 
                    Var: rayOrig @ [evalProg.diderot:130.16-23] 
                    BinOp: * @ [evalProg.diderot:130.26-39] 
                      Var: rayN @ [evalProg.diderot:130.26-30] 
                      Var: rayVec @ [evalProg.diderot:130.33-39] 
              IfThen @ [evalProg.diderot:131.5-132.5] 
                UnaryOp: ! @ [evalProg.diderot:131.9-22] 
                  Apply @ [evalProg.diderot:131.10-22] 
                    Var: posTest @ [evalProg.diderot:131.10-17] 
                    [
                      Var: pos @ [evalProg.diderot:131.18-21] 
                    ]
                Continue @ [evalProg.diderot:131.24-33] 
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: step= @ [evalProg.diderot:132.5-133.0] 
                  Apply @ [evalProg.diderot:132.17-27] 
                    Var: fStep @ [evalProg.diderot:132.17-22] 
                    [
                      Var: pos @ [evalProg.diderot:132.23-26] 
                    ]
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: aa= @ [evalProg.diderot:133.5-134.0] 
                  Apply @ [evalProg.diderot:133.15-38] 
                    Var: atent @ [evalProg.diderot:133.15-20] 
                    [
                      Var: maxAlpha @ [evalProg.diderot:133.21-29] 
                      UnaryOp: |()| @ [evalProg.diderot:133.31-37] 
                        Var: step @ [evalProg.diderot:133.32-36] 
                    ]
              IfThen @ [evalProg.diderot:135.5-136.5] 
                BinOp: == @ [evalProg.diderot:135.8-14] 
                  Var: aa @ [evalProg.diderot:135.8-10] 
                  Lit: 0 @ [evalProg.diderot:135.13-14] 
                Continue @ [evalProg.diderot:135.17-26] 
              Assign: aa= @ [evalProg.diderot:136.5-30] 
                BinOp: - @ [evalProg.diderot:136.10-29] 
                  Lit: 1 @ [evalProg.diderot:136.10-11] 
                  BinOp: ^ @ [evalProg.diderot:136.14-29] 
                    BinOp: - @ [evalProg.diderot:136.15-19] 
                      Lit: 1 @ [evalProg.diderot:136.15-16] 
                      Var: aa @ [evalProg.diderot:136.17-19] 
                    Var: alphaFix @ [evalProg.diderot:136.21-29] 
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: snorm= @ [evalProg.diderot:138.5-139.0] 
                  UnaryOp: unary - @ [evalProg.diderot:138.18-34] 
                    Apply @ [evalProg.diderot:138.19-34] 
                      Var: normalize @ [evalProg.diderot:138.19-28] 
                      [
                        Var: step @ [evalProg.diderot:138.29-33] 
                      ]
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: dcomp= @ [evalProg.diderot:139.5-140.0] 
                  BinOp: ^ @ [evalProg.diderot:139.18-38] 
                    BinOp: • @ [evalProg.diderot:139.19-35] 
                      Var: snorm @ [evalProg.diderot:139.19-24] 
                      Var: litwsp @ [evalProg.diderot:139.29-35] 
                    Lit: 2 @ [evalProg.diderot:139.37-38] 
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: scomp= @ [evalProg.diderot:140.5-141.0] 
                  Lit: 0.e0 @ [evalProg.diderot:140.18-21] 
              IfThen @ [evalProg.diderot:141.5-147.5] 
                BinOp: != @ [evalProg.diderot:141.9-18] 
                  Var: phKs @ [evalProg.diderot:141.9-13] 
                  Lit: 0 @ [evalProg.diderot:141.17-18] 
                Assign: scomp= @ [evalProg.diderot:142.7-143.0] 
                  BinOp: ^ @ [evalProg.diderot:142.15-59] 
                    UnaryOp: |()| @ [evalProg.diderot:142.15-54] 
                      BinOp: • @ [evalProg.diderot:142.16-53] 
                        Var: snorm @ [evalProg.diderot:142.16-21] 
                        Apply @ [evalProg.diderot:142.26-52] 
                          Var: normalize @ [evalProg.diderot:142.26-35] 
                          [
                            BinOp: + @ [evalProg.diderot:142.36-51] 
                              Var: eyeDir @ [evalProg.diderot:142.36-42] 
                              Var: litwsp @ [evalProg.diderot:142.45-51] 
                          ]
                    Var: phSp @ [evalProg.diderot:142.55-59] 
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: dcol= @ [evalProg.diderot:147.5-148.0] 
                  Apply @ [evalProg.diderot:147.17-65] 
                    Var: lerp @ [evalProg.diderot:147.17-21] 
                    [
                      Var: mcNear @ [evalProg.diderot:147.22-28] 
                      Var: mcFar @ [evalProg.diderot:147.30-35] 
                      Var: camNearVsp @ [evalProg.diderot:147.37-47] 
                      Var: rayN @ [evalProg.diderot:147.49-53] 
                      Var: camFarVsp @ [evalProg.diderot:147.55-64] 
                    ]
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: cmin= @ [evalProg.diderot:148.5-149.0] 
                  Subscript @ [evalProg.diderot:148.17-27] 
                    Var: cminmax @ [evalProg.diderot:148.17-24] 
                    [
                      Lit: 0 @ [evalProg.diderot:148.25-26] 
                    ]
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: cmax= @ [evalProg.diderot:149.5-150.0] 
                  Subscript @ [evalProg.diderot:149.17-27] 
                    Var: cminmax @ [evalProg.diderot:149.17-24] 
                    [
                      Lit: 1 @ [evalProg.diderot:149.25-26] 
                    ]
              Decl @ [evalProg.diderot:126.10-164.0] 
                Decl: mcol= @ [evalProg.diderot:150.5-151.0] 
                  Cons @ [evalProg.diderot:150.17-24] 
                    [
                      Lit: 1 @ [evalProg.diderot:150.18-19] 
                      Lit: 1 @ [evalProg.diderot:150.20-21] 
                      Lit: 1 @ [evalProg.diderot:150.22-23] 
                    ]
              IfThen @ [evalProg.diderot:151.5-154.5] 
                BinOp: != @ [evalProg.diderot:151.9-21] 
                  Var: cmin @ [evalProg.diderot:151.9-13] 
                  Var: cmax @ [evalProg.diderot:151.17-21] 
                Assign: mcol= @ [evalProg.diderot:152.7-54] 
                  Apply @ [evalProg.diderot:152.14-53] 
                    Var: CM @ [evalProg.diderot:152.14-16] 
                    [
                      Apply @ [evalProg.diderot:152.17-52] 
                        Var: lerp @ [evalProg.diderot:152.17-21] 
                        [
                          Lit: 0 @ [evalProg.diderot:152.22-23] 
                          Lit: 1 @ [evalProg.diderot:152.25-26] 
                          Var: cmin @ [evalProg.diderot:152.28-32] 
                          Apply @ [evalProg.diderot:152.34-45] 
                            Var: C @ [evalProg.diderot:152.34-35] 
                            [
                              BinOp: + @ [evalProg.diderot:152.36-44] 
                                Var: pos @ [evalProg.diderot:152.36-39] 
                                Var: step @ [evalProg.diderot:152.40-44] 
                            ]
                          Var: cmax @ [evalProg.diderot:152.47-51] 
                        ]
                    ]
              Assign: rgb+= @ [evalProg.diderot:154.5-156.0] 
                BinOp: * @ [evalProg.diderot:154.12-155.30] 
                  BinOp: * @ [evalProg.diderot:154.12-21] 
                    Var: transp @ [evalProg.diderot:154.12-18] 
                    Var: aa @ [evalProg.diderot:154.19-21] 
                  BinOp: + @ [evalProg.diderot:154.23-155.29] 
                    BinOp: * @ [evalProg.diderot:154.23-155.9] 
                      BinOp: + @ [evalProg.diderot:154.24-41] 
                        Var: phKa @ [evalProg.diderot:154.24-28] 
                        BinOp: * @ [evalProg.diderot:154.31-41] 
                          Var: phKd @ [evalProg.diderot:154.31-35] 
                          Var: dcomp @ [evalProg.diderot:154.36-41] 
                      Apply @ [evalProg.diderot:154.43-155.0] 
                        Var: modulate @ [evalProg.diderot:154.43-51] 
                        [
                          Var: dcol @ [evalProg.diderot:154.52-56] 
                          Var: mcol @ [evalProg.diderot:154.57-61] 
                        ]
                    BinOp: * @ [evalProg.diderot:155.11-29] 
                      BinOp: * @ [evalProg.diderot:155.11-21] 
                        Var: phKs @ [evalProg.diderot:155.11-15] 
                        Var: scomp @ [evalProg.diderot:155.16-21] 
                      Cons @ [evalProg.diderot:155.22-29] 
                        [
                          Lit: 1 @ [evalProg.diderot:155.23-24] 
                          Lit: 1 @ [evalProg.diderot:155.25-26] 
                          Lit: 1 @ [evalProg.diderot:155.27-28] 
                        ]
              Assign: transp*= @ [evalProg.diderot:157.5-158.0] 
                BinOp: - @ [evalProg.diderot:157.15-21] 
                  Lit: 1 @ [evalProg.diderot:157.15-16] 
                  Var: aa @ [evalProg.diderot:157.19-21] 
              IfThen @ [evalProg.diderot:158.5-163.3] 
                BinOp: < @ [evalProg.diderot:158.8-24] 
                  Var: transp @ [evalProg.diderot:158.8-14] 
                  Var: transp0 @ [evalProg.diderot:158.17-24] 
                Block @ [evalProg.diderot:158.25-162.0] 
                  [
                    Assign: transp= @ [evalProg.diderot:159.7-160.0] 
                      Lit: 0 @ [evalProg.diderot:159.16-17] 
                    Stabilize @ [evalProg.diderot:160.7-161.0] 
                  ]
            ]
        Method: Stabilize @ [evalProg.diderot:164.3-174.1] 
          IfThen @ [evalProg.diderot:165.5-172.3] 
            BinOp: < @ [evalProg.diderot:165.9-19] 
              Var: transp @ [evalProg.diderot:165.9-15] 
              Lit: 1 @ [evalProg.diderot:165.18-19] 
            Block @ [evalProg.diderot:165.21-171.0] 
              [
                Decl @ [evalProg.diderot:165.21-171.0] 
                  Decl: aa= @ [evalProg.diderot:166.7-167.0] 
                    BinOp: - @ [evalProg.diderot:166.17-27] 
                      Lit: 1 @ [evalProg.diderot:166.17-18] 
                      Var: transp @ [evalProg.diderot:166.21-27] 
                Assign: rgba= @ [evalProg.diderot:168.7-52] 
                  Cons @ [evalProg.diderot:168.14-51] 
                    [
                      BinOp: / @ [evalProg.diderot:168.15-24] 
                        Subscript @ [evalProg.diderot:168.15-21] 
                          Var: rgb @ [evalProg.diderot:168.15-18] 
                          [
                            Lit: 0 @ [evalProg.diderot:168.19-20] 
                          ]
                        Var: aa @ [evalProg.diderot:168.22-24] 
                      BinOp: / @ [evalProg.diderot:168.26-35] 
                        Subscript @ [evalProg.diderot:168.26-32] 
                          Var: rgb @ [evalProg.diderot:168.26-29] 
                          [
                            Lit: 1 @ [evalProg.diderot:168.30-31] 
                          ]
                        Var: aa @ [evalProg.diderot:168.33-35] 
                      BinOp: / @ [evalProg.diderot:168.37-46] 
                        Subscript @ [evalProg.diderot:168.37-43] 
                          Var: rgb @ [evalProg.diderot:168.37-40] 
                          [
                            Lit: 2 @ [evalProg.diderot:168.41-42] 
                          ]
                        Var: aa @ [evalProg.diderot:168.44-46] 
                      Var: aa @ [evalProg.diderot:168.48-50] 
                    ]
              ]
      ]
    Grid @ [evalProg.diderot:174.3-176.0] 
      Comprehension @ [evalProg.diderot:174.16-175.44] 
        Apply @ [evalProg.diderot:174.17-175.0] 
          Var: ray @ [evalProg.diderot:174.17-20] 
          [
            Var: ui @ [evalProg.diderot:174.21-23] 
            Var: vi @ [evalProg.diderot:174.25-27] 
          ]
        [
          Iterator: vi @ [evalProg.diderot:175.9-25] 
            Range @ [evalProg.diderot:175.15-25] 
              Lit: 0 @ [evalProg.diderot:175.15-16] 
              BinOp: - @ [evalProg.diderot:175.18-25] 
                Var: iresV @ [evalProg.diderot:175.18-23] 
                Lit: 1 @ [evalProg.diderot:175.24-25] 
          Iterator: ui @ [evalProg.diderot:175.27-43] 
            Range @ [evalProg.diderot:175.33-43] 
              Lit: 0 @ [evalProg.diderot:175.33-34] 
              BinOp: - @ [evalProg.diderot:175.36-43] 
                Var: iresU @ [evalProg.diderot:175.36-41] 
                Lit: 1 @ [evalProg.diderot:175.42-43] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemType: Mesh with type var:NONE block = loadFem(Mesh);
input FemType: Space with type var:mesh_t space = loadFem(Space);
input FemType: FemFunc with type var:fns_t U = loadFem(FemFunc);
input int cellChoice;
input image(1)[3] cmap = loadImage<%1; $[3]> ("cmap.nrrd");
input vec3 camEye = [0.e0, -0.2e1, 0.e0];
input vec3 camAt = [0.e0, 0.e0, 0.e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camNear = -0.4e1;
input real camFar = 0.4e1;
input real camFOV = 0.1e2;
input bool camOrtho = false;
input int iresU = 100;
input int iresV = 100;
input real rayStep = 0.1e-3;
input real refStep = 0.1e-3;
input real transp0 = 0.5e-2;
input real thick = 0.1e-1;
input real fStrTh = 0.e0;
input real fMaskTh = 0.e0;
input real fBias = 0.1e0;
input real maxAlpha = 0.1e1;
input bool light = false;
input vec4 phong = [0.1e0, 0.7e0, 0.2e0, 0.1e3];
input vec3 mcNear = [0.1e1, 0.1e1, 0.1e1];
input vec3 mcFar = [0.1e1, 0.1e1, 0.1e1];
input vec3 litdir = [0.e0, -0.1e1, 0.e0];
input vec2 cminmax = [0.e0, 0.e0];
input bool analytical = true;
input image(3)[] umm = loadImage<%3; $[]> ("data.nrrd");
function bool != (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:mesh_t findPos (FemType: Mesh with type var:mesh_t mesh, vec3 pos)
{
  xn = [0.e0, 0.e0, 0.e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  foreach (int itter in $range (0, * (+ (2, 1), numCell))) {
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.e0, 0.e0, 0.e0]);
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (mesh, xn, 0.1e-8)):bool {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      }
    newtonInt = + (newtonInt, 1);
    if >= (newtonInt, 2) {
      newtonInt = 0;
      if >= (cellInt, numCell) {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        cellInt = + (cellInt, 1);
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: RefCell with type var:mesh_t refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:mesh_t, RefCell(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:mesh_t[], Cells(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] mesh_t_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] mesh_t_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 mesh_t_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 mesh_t_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:mesh_t _mesh_t_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.e0, 0.e0, 0.e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.e0, 0.e0, 0.e0]);
  foreach (int itter in $range (0, 2)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (mesh, xn, 0.1e-8)):bool {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: MeshPos with type var:mesh_t _mesh_pos_mesh_t_build_world_pos (FemType: MeshPos with type var:mesh_t pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:mesh_t,vec3 (pos, mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:mesh_t pos)
{
  return mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:mesh_t $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    print ("face ", $r2i (time[1]), " to ", $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1), "\n", "got: ", $sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), "\n");
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]], $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:mesh_t;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 12), * (faceIdx, 2)))):int[2];
    }
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 0;
      }
    if $and (>= (/ (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 1;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      face = 3;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 4;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      face = 5;
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if != (i, 0) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 0;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      }
    if $and (>= (/ (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if != (i, 1) {
      time = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 1;
      }
    else {
      faceTime = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), 0.1e-20)))
    if != (i, 2) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if != (i, 3) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      face = 3;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if != (i, 4) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 4;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), 0.1e-20)))
    if != (i, 5) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      face = 5;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    if == (-inf, faceTime) {
      return [(real)-1, (real)-1];
      }
    else {
      return [faceTime, (real)i];
      }
    }
  }
function FemType: Mesh with type var:mesh_t domain (FemType: Space with type var:mesh_t arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:mesh_t space (FemType: FemFunc with type var:fns_t arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:func_t funcCell (FemType: FemFunc with type var:fns_t arg0, FemType: MeshCell with type var:mesh_t arg1)
{
  return loadFem(FuncCell);
  }
FemType: MeshCell with type var:mesh_t c1 = $dynsub<FemType: MeshCell with type var:mesh_t> (extractFemItem(block, FemType: MeshCell with type var:mesh_t[], Cells(Mesh)), cellChoice);
field(3)[] F = femField(extractFem(FemFunc,funcCell (U, c1) ),extractFemItem(funcCell (U, c1), int, CellIndex(FuncCell)),field(3)[], refField, );
field#0(1)[3] CM = ⊛<#0; %1; $[3]> (tent, clamp<%1; $[3]> (cmap));
field(3)[] C = F;
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camN, camU);
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
real camNearVsp = +<$[]> (camNear, camDist);
real camFarVsp = +<$[]> (camFar, camDist);
vec3 litwsp = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (litdir));
field#2(3)[] G = ⊛<#2; %3; $[]> (umm, bspln3);
function real atent (real a0, real d)
{
  return * (a0, clamp<$[]> ((real)0, (real)1, * (0.15e1, -<$[]> ((real)1, / (|()|<$[]> (d), thick)))));
  }
function vec3 fStep (vec3 x)
{
  if ! (analytical) {
    vec3[3] E = evecs (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x));
    real[3] L = evals (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x));
    return •<$[3,3]; $[3]; $[3]> (unary -<$[3,3]> (+<$[3,3]> (/<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 2), $sub<vec3; %3> (E, 2)), $sub<real; %3> (L, 2)), /<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 1), $sub<vec3; %3> (E, 1)), $sub<real; %3> (L, 1)))), @<#; %3; $[3]> (∇<#; %3> (F), x));
    }
  else {
    vec3[3] E = evecs (@<#0; %3; $[3,3]> (∇⊗<#1; %3; $[]; %3> (∇<#2; %3> (G)), x));
    real[3] L = evals (@<#0; %3; $[3,3]> (∇⊗<#1; %3; $[]; %3> (∇<#2; %3> (G)), x));
    return •<$[3,3]; $[3]; $[3]> (unary -<$[3,3]> (+<$[3,3]> (/<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 2), $sub<vec3; %3> (E, 2)), $sub<real; %3> (L, 2)), /<$[3,3]> (⊗<$[3]; $[3]; $[3,3]> ($sub<vec3; %3> (E, 1), $sub<vec3; %3> (E, 1)), $sub<real; %3> (L, 1)))), @<#1; %3; $[3]> (∇<#2; %3> (G), x));
    }
  }
function real fStrength (vec3 x)
{
  return / (unary -<$[]> ($sub<real; %3> (evals (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x)), 1)), +<$[]> (fBias, |()|<$[3]> (@<#; %3; $[3]> (∇<#; %3> (F), x))));
  }
function bool fTest (vec3 x)
{
  return true;
  }
function real fMask (vec3 x)
{
  return 0.1e1;
  }
function bool posTest (vec3 x)
{
  return (extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (refcell (block), x, 0.1e-8)):bool && (> (fStrength (x), fStrTh) && (>= (fMask (x), fMaskTh) && fTest (x))));
  }
strand ray (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (unary -<$[]> (camVmax), camVmax, unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  real rayN = camNearVsp;
  vec3 UV = +<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV));
  vec3 rayOrig = +<$[3]> (camEye, (UV if camOrtho else [0.e0, 0.e0, 0.e0]));
  vec3 rayVec = +<$[3]> (camN, ([0.e0, 0.e0, 0.e0] if camOrtho else /<$[3]> (UV, camDist)));
  real alphaFix = / (* (|()|<$[3]> (rayVec), rayStep), refStep);
  vec3 eyeDir = unary -<$[3]> (normalize<$[3]> (rayVec));
  real phKa = phong[0];
  real phKd = phong[1];
  real phKs = phong[2];
  real phSp = phong[3];
  output vec4 rgba = [0.e0, 0.e0, 0.e0, 0.e0];
  output real raw = 0.e0;
  vec3 rgb = [0.e0, 0.e0, 0.e0];
  real transp = 0.1e1;
  update {
    rayN = +<$[]> (rayN, rayStep);
    if > (rayN, camFarVsp)
      stabilize;
      vec3 pos = +<$[3]> (rayOrig, *<$[3]> (rayN, rayVec));
    if ! (posTest (pos))
      continue;
      vec3 step = fStep (pos);
    real aa = atent (maxAlpha, |()|<$[3]> (step));
    if == (aa, (real)0)
      continue;
      aa = -<$[]> ((real)1, ^ (-<$[]> ((real)1, aa), alphaFix));
    vec3 snorm = unary -<$[3]> (normalize<$[3]> (step));
    real dcomp = ^ (•<$[3]; $[3]; $[]> (snorm, litwsp), 2);
    real scomp = 0.e0;
    if != (phKs, (real)0)
      scomp = ^ (|()|<$[]> (•<$[3]; $[3]; $[]> (snorm, normalize<$[3]> (+<$[3]> (eyeDir, litwsp)))), phSp);
      vec3 dcol = lerp<$[3]> (mcNear, mcFar, camNearVsp, rayN, camFarVsp);
    real cmin = cminmax[0];
    real cmax = cminmax[1];
    vec3 mcol = [0.1e1, 0.1e1, 0.1e1];
    if != (cmin, cmax)
      mcol = @<#0; %1; $[3]> (CM, lerp<$[]> ((real)0, (real)1, cmin, @<#; %3; $[]> (C, +<$[3]> (pos, step)), cmax));
      rgb = +<$[3]> (rgb, *<$[3]> (* (transp, aa), +<$[3]> (*<$[3]> (+<$[]> (phKa, * (phKd, dcomp)), modulate<%3> (dcol, mcol)), *<$[3]> (* (phKs, scomp), [0.1e1, 0.1e1, 0.1e1]))));
    transp = * (transp, -<$[]> ((real)1, aa));
    if < (transp, transp0) {
      transp = 0.e0;
      stabilize;
      }
    }
  stabilize {
    if < (transp, (real)1) {
      real aa = -<$[]> ((real)1, transp);
      rgba = [/ (rgb[0], aa), / (rgb[1], aa), / (rgb[2], aa), aa];
      }
    }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresV, 1))) {
      foreach (int ui in $range (0, - (iresU, 1))) {
        new ray (ui, vi);
        }
      }
    }
  
/* Program end */
cmap.nrrd file header:
  type: double
  dimension: 2
  space dimension: 1
  sizes: 3 311
  space directions: none (0.0066445182724252493)
  kinds: 3-vector space
  endian: little
  encoding: raw
  space origin: (-1.0299003322259137)
data.nrrd file header:
  type: float
  dimension: 3
  space dimension: 3
  sizes: 300 300 300
  space directions: (0.0040133779264214043,0,0) (0,0.0040133779264214043,0) (0,0,0.0040133779264214043)
  kinds: space space space
  endian: little
  encoding: raw
  space origin: (-0.59999999999999998,-0.59999999999999998,-0.59999999999999998)
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115E6;
global field(3)[] F15EE;
global field#0(1)[3] CM15F1;
global field(3)[] C15F2;
global vec3 camN15F4;
global vec3 camU15F6;
global vec3 camV15F7;
global real camDist15F9;
global real camVmax15FF;
global real camUmax1603;
global real camNearVsp1604;
global real camFarVsp1605;
global vec3 litwsp1609;
global field#2(3)[] G160B;
function bool#0 !=0542 (Femdata: MeshCell cell10543, Femdata: MeshCell cell10544)
{
  int _t0545 = extractFemItem(CellIndex(Mesh), int, cell10543);
  int _t0546 = extractFemItem(CellIndex(Mesh), int, cell10544);
  bool _t0547 = prim !=0086 (_t0545, _t0546);
  return _t0547;
}
function bool#0 ==0548 (Femdata: MeshCell cell10543, Femdata: MeshCell cell10544)
{
  int _t0549 = extractFemItem(CellIndex(Mesh), int, cell10543);
  int _t054A = extractFemItem(CellIndex(Mesh), int, cell10544);
  bool _t054B = prim ==0082 (_t0549, _t054A);
  return _t054B;
}
function Femdata: MeshPos#0 findPos054C (Femdata: Mesh mesh054D, vec3 pos054E)
{
  real _t054F = 0.e0;
  real _t0550 = 0.e0;
  real _t0551 = 0.e0;
  xn0552 = [_t054F, _t0550, _t0551];
  newtonInt0553 = 0;
  cellInt0554 = extractFemItem(StartCell(Mesh), int, mesh054D);
  int _t0555 = extractFemItem(NumCell(Mesh), int, mesh054D);
  int _t0556 = 1;
  numCell0557 = prim -0024 (_t0555, _t0556);
  int _t0558 = 0;
  int _t0559 = 2;
  int _t055A = 1;
  int _t055B = prim +0015 (_t0559, _t055A);
  int _t055C = prim *0033 (_t055B, numCell0557);
  int[] _t055D = prim $range01C3 (_t0558, _t055C);
  foreach itter0578 in _t055D {
    field(3)[3] _t055E = femField(mesh054D,cellInt0554,field(3)[3],Transform,);
    field(3)[3,3] _t055F = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t055E);
    field(3)[3,3] _t0560 = prim inv015E<#∞; %3> (_t055F);
    real _t0561 = 0.e0;
    real _t0562 = 0.e0;
    real _t0563 = 0.e0;
    vec3 _t0564 = [_t0561, _t0562, _t0563];
    A0565 = prim @00A5<#∞; %3; $[3,3]> (_t0560, _t0564);
    field(3)[3] _t0566 = femField(mesh054D,cellInt0554,field(3)[3],Transform,);
    field(3)[3] _t0567 = prim -002E<#∞; %3; $[3]> (_t0566, pos054E);
    field(3)[3] _t0568 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0565, _t0567);
    delta0569 = prim @00A5<#∞; %3; $[3]> (_t0568, xn0552);
    xn0552 = prim -0026<$[3]> (xn0552, delta0569);
    real _t056A = 0.1e-7;
    real _t056B = 0.1e-7;
    real _t056C = prim *0034 (_t056A, _t056B);
    real _t056D = prim •00CE<$[3]; $[3]; $[]> (delta0569, delta0569);
    bool _t056E = prim >=007E (_t056C, _t056D);
    if _t056E {
      real _t056F = 0.1e-8;
      bool _t0570 = extractFemItemN((mesh054D, xn0552, _t056F),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0570 {
        Femdata: MeshPos _t0571 = extractFemItemN((mesh054D, cellInt0554, xn0552, pos054E),AllBuild(MeshPos),);
        return _t0571;
      }
    }
    int _t0572 = 1;
    newtonInt0553 = prim +0015 (newtonInt0553, _t0572);
    int _t0573 = 2;
    bool _t0574 = prim >=007D (newtonInt0553, _t0573);
    if _t0574 {
      newtonInt0553 = 0;
      bool _t0575 = prim >=007D (cellInt0554, numCell0557);
      if _t0575 {
        Femdata: MeshPos _t0576 = extractFemItemN((mesh054D),InvalidBuild(MeshPos),);
        return _t0576;
      } else {
        int _t0577 = 1;
        cellInt0554 = prim +0015 (cellInt0554, _t0577);
      }
    }
  }
  string _t0579 = "Bad end 2";
  string _t057A = "\n";
  print (_t0579, _t057A);
  Femdata: MeshPos _t057B = extractFemItemN((mesh054D),InvalidBuild(MeshPos),);
  return _t057B;
}
function Femdata: RefCell#1 refcell057C (Femdata: Mesh arg0057D)
{
  Femdata: RefCell _t057E = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0057D);
  return _t057E;
}
function Femdata: MeshCell[]#0 cells057F (Femdata: Mesh arg00580)
{
  Femdata: MeshCell[] _t0581 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00580);
  return _t0581;
}
function Femdata: MeshCell[]#0 cells0582 (Femdata: Mesh arg00580)
{
  int _t0583 = 0;
  int _t0584 = extractFemItem(NumCell(Mesh), int, arg00580);
  int[] _t0585 = prim $range01C3 (_t0583, _t0584);
  Femdata: MeshCell[] accum0588 = {};
  foreach i0586 in _t0585 {
    Femdata: MeshCell _t0587 = loadFem(MeshCell, arg00580, i0586);
    accum0588 = prim @0010<Femdata: MeshCell> (accum0588, _t0587);
  }
  return accum0588;
}
function int#0 numCell0589 (Femdata: Mesh arg0057D)
{
  int _t058A = extractFemItem(NumCell(Mesh), int, arg0057D);
  return _t058A;
}
function tensor[3,3,3,3]#0 mesh_t_transform_3058B (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t058F = femField(mesh058E,cell058D,field(3)[3],Transform,);
  field(3)[3,3] _t0590 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t058F);
  field(3)[3,3,3] _t0591 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0590);
  field(3)[3,3,3,3] _t0592 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0591);
  tensor[3,3,3,3] _t0593 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0592, pos058C);
  return _t0593;
}
function tensor[3,3,3]#0 mesh_t_transform_20594 (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t0595 = femField(mesh058E,cell058D,field(3)[3],Transform,);
  field(3)[3,3] _t0596 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0595);
  field(3)[3,3,3] _t0597 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0596);
  tensor[3,3,3] _t0598 = prim @00A5<#∞; %3; $[3,3,3]> (_t0597, pos058C);
  return _t0598;
}
function tensor[3,3]#0 mesh_t_transform_10599 (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t059A = femField(mesh058E,cell058D,field(3)[3],Transform,);
  field(3)[3,3] _t059B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t059A);
  tensor[3,3] _t059C = prim @00A5<#∞; %3; $[3,3]> (_t059B, pos058C);
  return _t059C;
}
function vec3#2 mesh_t_transform_0059D (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t059E = femField(mesh058E,cell058D,field(3)[3],Transform,);
  vec3 _t059F = prim @00A5<#∞; %3; $[3]> (_t059E, pos058C);
  return _t059F;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse05A0 (vec3 pos05A1, int cellInt05A2, Femdata: Mesh mesh05A3)
{
  real _t05A4 = 0.e0;
  real _t05A5 = 0.e0;
  real _t05A6 = 0.e0;
  xn05A7 = [_t05A4, _t05A5, _t05A6];
  field(3)[3] _t05A8 = femField(mesh05A3,cellInt05A2,field(3)[3],Transform,);
  field(3)[3,3] _t05A9 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05A8);
  field(3)[3,3] _t05AA = prim inv015E<#∞; %3> (_t05A9);
  real _t05AB = 0.e0;
  real _t05AC = 0.e0;
  real _t05AD = 0.e0;
  vec3 _t05AE = [_t05AB, _t05AC, _t05AD];
  A05AF = prim @00A5<#∞; %3; $[3,3]> (_t05AA, _t05AE);
  int _t05B0 = 0;
  int _t05B1 = 2;
  int[] _t05B2 = prim $range01C3 (_t05B0, _t05B1);
  foreach itter05C0 in _t05B2 {
    field(3)[3] _t05B3 = femField(mesh05A3,cellInt05A2,field(3)[3],Transform,);
    field(3)[3] _t05B4 = prim -002E<#∞; %3; $[3]> (_t05B3, pos05A1);
    field(3)[3] _t05B5 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A05AF, _t05B4);
    delta05B6 = prim @00A5<#∞; %3; $[3]> (_t05B5, xn05A7);
    xn05A7 = prim -0026<$[3]> (xn05A7, delta05B6);
    real _t05B7 = 0.1e-7;
    real _t05B8 = 0.1e-7;
    real _t05B9 = prim *0034 (_t05B7, _t05B8);
    real _t05BA = prim •00CE<$[3]; $[3]; $[]> (delta05B6, delta05B6);
    bool _t05BB = prim >=007E (_t05B9, _t05BA);
    if _t05BB {
      real _t05BC = 0.1e-8;
      bool _t05BD = extractFemItemN((mesh05A3, xn05A7, _t05BC),InsideInsert(File=checkInside.in)(Mesh),);
      if _t05BD {
        Femdata: MeshPos _t05BE = extractFemItemN((mesh05A3, cellInt05A2, xn05A7, pos05A1),AllBuild(MeshPos),);
        return _t05BE;
      } else {
        Femdata: MeshPos _t05BF = extractFemItemN((mesh05A3),InvalidBuild(MeshPos),);
        return _t05BF;
      }
    }
  }
  Femdata: MeshPos _t05C1 = extractFemItemN((mesh05A3),InvalidBuild(MeshPos),);
  return _t05C1;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos05C2 (Femdata: MeshPos pos05C3)
{
  bool _t05C4 = extractFemItem(WorldTest(MeshPos), bool, pos05C3);
  if _t05C4 {
    vec3 _t05C5 = extractFemItem(RefPos(MeshPos), vec3, pos05C3);
    int _t05C6 = extractFemItem(CellIndex(MeshPos), int, pos05C3);
    Femdata: Mesh _t05C7 = extractFem(pos05C3, Mesh);
    vec3 _t05C8 = func mesh_t_transform_0059D (_t05C5, _t05C6, _t05C7);
    Femdata: MeshPos _t05C9 = extractFemItemN((pos05C3, _t05C8),NewWorld(MeshPos),);
    return _t05C9;
  } else {
    return pos05C3;
  }
}
function vec3#0 worldPos05CA (Femdata: MeshPos pos05C3)
{
  vec3 _t05CB = extractFemItem(RefPos(MeshPos), vec3, pos05C3);
  int _t05CC = extractFemItem(CellIndex(MeshPos), int, pos05C3);
  Femdata: Mesh _t05CD = extractFem(pos05C3, Mesh);
  vec3 _t05CE = func mesh_t_transform_0059D (_t05CB, _t05CC, _t05CD);
  return _t05CE;
}
function Femdata: MeshPos#0 $exitPos05CF (Femdata: Mesh mesh05D0, int cellId05D1, vec3 refPos05D2, vec3 dPos05D3, real[2] time05D4)
{
  int _t05D5 = -1;
  real _t05D6 = time05D4[1];
  int _t05D7 = prim $r2i01B7 (_t05D6);
  int[2] _t05D9 = func nextCell405D8 (_t05D7, cellId05D1, mesh05D0);
  int _t05DA = 0;
  int _t05DB = prim $sub01C0<int; %2> (_t05D9, _t05DA);
  bool _t05DC = prim !=0086 (_t05D5, _t05DB);
  if _t05DC {
    string _t05DD = "face ";
    real _t05DE = time05D4[1];
    int _t05DF = prim $r2i01B7 (_t05DE);
    string _t05E0 = " to ";
    real _t05E1 = time05D4[1];
    int _t05E2 = prim $r2i01B7 (_t05E1);
    int[2] _t05E3 = func nextCell405D8 (_t05E2, cellId05D1, mesh05D0);
    int _t05E4 = 1;
    int _t05E5 = prim $sub01C0<int; %2> (_t05E3, _t05E4);
    string _t05E6 = "\n";
    string _t05E7 = "got: ";
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    real _t05EA = 0.e0;
    real _t05EB = 0.e0;
    vec4 _t05EC = [_t05E8, _t05E9, _t05EA, _t05EB];
    real _t05ED = 0.e0;
    real _t05EE = 0.1e1;
    real _t05EF = 0.e0;
    real _t05F0 = 0.e0;
    vec4 _t05F1 = [_t05ED, _t05EE, _t05EF, _t05F0];
    real _t05F2 = 0.e0;
    real _t05F3 = 0.e0;
    real _t05F4 = 0.1e1;
    real _t05F5 = 0.e0;
    vec4 _t05F6 = [_t05F2, _t05F3, _t05F4, _t05F5];
    real _t05F7 = 0.e0;
    real _t05F8 = 0.e0;
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    tensor[4,4] _t05FC = [_t05EC, _t05F1, _t05F6, _t05FB];
    real _t05FD = 0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    vec4 _t0601 = [_t05FD, _t05FE, _t05FF, _t0600];
    real _t0602 = 0.e0;
    real _t0603 = 0.1e1;
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    vec4 _t0606 = [_t0602, _t0603, _t0604, _t0605];
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    real _t060A = 0.1e1;
    vec4 _t060B = [_t0607, _t0608, _t0609, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.e0;
    real _t060F = 0.1e1;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    tensor[4,4] _t0611 = [_t0601, _t0606, _t060B, _t0610];
    real _t0612 = 0.e0;
    real _t0613 = 0.1e1;
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    vec4 _t0616 = [_t0612, _t0613, _t0614, _t0615];
    real _t0617 = 0.e0;
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    real _t061A = 0.e0;
    vec4 _t061B = [_t0617, _t0618, _t0619, _t061A];
    real _t061C = 0.1e1;
    real _t061D = -0.1e1;
    real _t061E = 0.e0;
    real _t061F = -0.5e0;
    vec4 _t0620 = [_t061C, _t061D, _t061E, _t061F];
    real _t0621 = 0.e0;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.1e1;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    tensor[4,4] _t0626 = [_t0616, _t061B, _t0620, _t0625];
    real _t0627 = 0.e0;
    real _t0628 = 0.e0;
    real _t0629 = -0.1e1;
    real _t062A = 0.e0;
    vec4 _t062B = [_t0627, _t0628, _t0629, _t062A];
    real _t062C = 0.e0;
    real _t062D = 0.1e1;
    real _t062E = 0.e0;
    real _t062F = 0.e0;
    vec4 _t0630 = [_t062C, _t062D, _t062E, _t062F];
    real _t0631 = 0.1e1;
    real _t0632 = -0.1e1;
    real _t0633 = 0.e0;
    real _t0634 = -0.5e0;
    vec4 _t0635 = [_t0631, _t0632, _t0633, _t0634];
    real _t0636 = 0.e0;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.1e1;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    tensor[4,4] _t063B = [_t062B, _t0630, _t0635, _t063A];
    real _t063C = 0.e0;
    real _t063D = -0.1e1;
    real _t063E = 0.e0;
    real _t063F = 0.e0;
    vec4 _t0640 = [_t063C, _t063D, _t063E, _t063F];
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    real _t0643 = -0.1e1;
    real _t0644 = 0.e0;
    vec4 _t0645 = [_t0641, _t0642, _t0643, _t0644];
    real _t0646 = 0.1e1;
    real _t0647 = -0.1e1;
    real _t0648 = 0.e0;
    real _t0649 = -0.5e0;
    vec4 _t064A = [_t0646, _t0647, _t0648, _t0649];
    real _t064B = 0.e0;
    real _t064C = 0.e0;
    real _t064D = 0.e0;
    real _t064E = 0.1e1;
    vec4 _t064F = [_t064B, _t064C, _t064D, _t064E];
    tensor[4,4] _t0650 = [_t0640, _t0645, _t064A, _t064F];
    real _t0651 = 0.e0;
    real _t0652 = 0.e0;
    real _t0653 = 0.1e1;
    real _t0654 = 0.e0;
    vec4 _t0655 = [_t0651, _t0652, _t0653, _t0654];
    real _t0656 = 0.e0;
    real _t0657 = -0.1e1;
    real _t0658 = 0.e0;
    real _t0659 = 0.e0;
    vec4 _t065A = [_t0656, _t0657, _t0658, _t0659];
    real _t065B = 0.1e1;
    real _t065C = -0.1e1;
    real _t065D = 0.e0;
    real _t065E = -0.5e0;
    vec4 _t065F = [_t065B, _t065C, _t065D, _t065E];
    real _t0660 = 0.e0;
    real _t0661 = 0.e0;
    real _t0662 = 0.e0;
    real _t0663 = 0.1e1;
    vec4 _t0664 = [_t0660, _t0661, _t0662, _t0663];
    tensor[4,4] _t0665 = [_t0655, _t065A, _t065F, _t0664];
    tensor[4,4][6] _t0666 = {_t05FC, _t0611, _t0626, _t063B, _t0650, _t0665};
    real _t0667 = 0.1e1;
    real _t0668 = 0.e0;
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    vec4 _t066B = [_t0667, _t0668, _t0669, _t066A];
    real _t066C = 0.e0;
    real _t066D = 0.1e1;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    vec4 _t0670 = [_t066C, _t066D, _t066E, _t066F];
    real _t0671 = 0.e0;
    real _t0672 = 0.e0;
    real _t0673 = 0.1e1;
    real _t0674 = -0.1e1;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.e0;
    real _t0678 = 0.e0;
    real _t0679 = 0.1e1;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    tensor[4,4] _t067B = [_t066B, _t0670, _t0675, _t067A];
    real _t067C = 0.1e1;
    real _t067D = 0.e0;
    real _t067E = 0.e0;
    real _t067F = 0.e0;
    vec4 _t0680 = [_t067C, _t067D, _t067E, _t067F];
    real _t0681 = 0.e0;
    real _t0682 = 0.1e1;
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    vec4 _t0685 = [_t0681, _t0682, _t0683, _t0684];
    real _t0686 = 0.e0;
    real _t0687 = 0.e0;
    real _t0688 = 0.1e1;
    real _t0689 = 0.e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    real _t068D = 0.e0;
    real _t068E = 0.1e1;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    tensor[4,4] _t0690 = [_t0680, _t0685, _t068A, _t068F];
    real _t0691 = 0.e0;
    real _t0692 = 0.1e1;
    real _t0693 = 0.e0;
    real _t0694 = 0.e0;
    vec4 _t0695 = [_t0691, _t0692, _t0693, _t0694];
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    real _t0699 = -0.1e1;
    vec4 _t069A = [_t0696, _t0697, _t0698, _t0699];
    real _t069B = 0.1e1;
    real _t069C = -0.1e1;
    real _t069D = 0.e0;
    real _t069E = -0.5e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = 0.e0;
    real _t06A1 = 0.e0;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.1e1;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    tensor[4,4] _t06A5 = [_t0695, _t069A, _t069F, _t06A4];
    real _t06A6 = 0.e0;
    real _t06A7 = 0.e0;
    real _t06A8 = -0.1e1;
    real _t06A9 = 0.1e1;
    vec4 _t06AA = [_t06A6, _t06A7, _t06A8, _t06A9];
    real _t06AB = 0.e0;
    real _t06AC = 0.1e1;
    real _t06AD = 0.e0;
    real _t06AE = 0.e0;
    vec4 _t06AF = [_t06AB, _t06AC, _t06AD, _t06AE];
    real _t06B0 = 0.1e1;
    real _t06B1 = -0.1e1;
    real _t06B2 = 0.e0;
    real _t06B3 = -0.5e0;
    vec4 _t06B4 = [_t06B0, _t06B1, _t06B2, _t06B3];
    real _t06B5 = 0.e0;
    real _t06B6 = 0.e0;
    real _t06B7 = 0.e0;
    real _t06B8 = 0.1e1;
    vec4 _t06B9 = [_t06B5, _t06B6, _t06B7, _t06B8];
    tensor[4,4] _t06BA = [_t06AA, _t06AF, _t06B4, _t06B9];
    real _t06BB = 0.e0;
    real _t06BC = -0.1e1;
    real _t06BD = 0.e0;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = -0.1e1;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    real _t06C5 = 0.1e1;
    real _t06C6 = -0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = -0.5e0;
    vec4 _t06C9 = [_t06C5, _t06C6, _t06C7, _t06C8];
    real _t06CA = 0.e0;
    real _t06CB = 0.e0;
    real _t06CC = 0.e0;
    real _t06CD = 0.1e1;
    vec4 _t06CE = [_t06CA, _t06CB, _t06CC, _t06CD];
    tensor[4,4] _t06CF = [_t06BF, _t06C4, _t06C9, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = -0.1e1;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = -0.1e1;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.e0;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    real _t06DA = 0.1e1;
    real _t06DB = -0.1e1;
    real _t06DC = 0.e0;
    real _t06DD = -0.5e0;
    vec4 _t06DE = [_t06DA, _t06DB, _t06DC, _t06DD];
    real _t06DF = 0.e0;
    real _t06E0 = 0.e0;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.1e1;
    vec4 _t06E3 = [_t06DF, _t06E0, _t06E1, _t06E2];
    tensor[4,4] _t06E4 = [_t06D4, _t06D9, _t06DE, _t06E3];
    tensor[4,4][6] _t06E5 = {_t067B, _t0690, _t06A5, _t06BA, _t06CF, _t06E4};
    real _t06E6 = 0.1e1;
    real _t06E7 = 0.e0;
    real _t06E8 = 0.1e1;
    real _t06E9 = 0.5e0;
    vec4 _t06EA = [_t06E6, _t06E7, _t06E8, _t06E9];
    real _t06EB = 0.1e1;
    real _t06EC = 0.e0;
    real _t06ED = 0.e0;
    real _t06EE = 0.e0;
    vec4 _t06EF = [_t06EB, _t06EC, _t06ED, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.1e1;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    tensor[4,4] _t06FA = [_t06EA, _t06EF, _t06F4, _t06F9];
    real _t06FB = 0.1e1;
    real _t06FC = 0.e0;
    real _t06FD = 0.1e1;
    real _t06FE = 0.5e0;
    vec4 _t06FF = [_t06FB, _t06FC, _t06FD, _t06FE];
    real _t0700 = 0.1e1;
    real _t0701 = 0.e0;
    real _t0702 = 0.e0;
    real _t0703 = 0.e0;
    vec4 _t0704 = [_t0700, _t0701, _t0702, _t0703];
    real _t0705 = 0.e0;
    real _t0706 = 0.1e1;
    real _t0707 = 0.e0;
    real _t0708 = 0.1e1;
    vec4 _t0709 = [_t0705, _t0706, _t0707, _t0708];
    real _t070A = 0.e0;
    real _t070B = 0.e0;
    real _t070C = 0.e0;
    real _t070D = 0.1e1;
    vec4 _t070E = [_t070A, _t070B, _t070C, _t070D];
    tensor[4,4] _t070F = [_t06FF, _t0704, _t0709, _t070E];
    real _t0710 = 0.1e1;
    real _t0711 = 0.e0;
    real _t0712 = 0.e0;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.1e1;
    real _t0717 = 0.e0;
    real _t0718 = 0.e0;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    real _t071A = 0.e0;
    real _t071B = 0.e0;
    real _t071C = 0.1e1;
    real _t071D = 0.e0;
    vec4 _t071E = [_t071A, _t071B, _t071C, _t071D];
    real _t071F = 0.e0;
    real _t0720 = 0.e0;
    real _t0721 = 0.e0;
    real _t0722 = 0.1e1;
    vec4 _t0723 = [_t071F, _t0720, _t0721, _t0722];
    tensor[4,4] _t0724 = [_t0714, _t0719, _t071E, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = -0.1e1;
    real _t0727 = 0.e0;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.1e1;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.e0;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    real _t072F = 0.e0;
    real _t0730 = 0.e0;
    real _t0731 = 0.1e1;
    real _t0732 = 0.e0;
    vec4 _t0733 = [_t072F, _t0730, _t0731, _t0732];
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    real _t0736 = 0.e0;
    real _t0737 = 0.1e1;
    vec4 _t0738 = [_t0734, _t0735, _t0736, _t0737];
    tensor[4,4] _t0739 = [_t0729, _t072E, _t0733, _t0738];
    real _t073A = -0.1e1;
    real _t073B = 0.e0;
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = -0.1e1;
    real _t0741 = 0.e0;
    real _t0742 = 0.e0;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    real _t0744 = 0.e0;
    real _t0745 = 0.e0;
    real _t0746 = 0.1e1;
    real _t0747 = 0.e0;
    vec4 _t0748 = [_t0744, _t0745, _t0746, _t0747];
    real _t0749 = 0.e0;
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    vec4 _t074D = [_t0749, _t074A, _t074B, _t074C];
    tensor[4,4] _t074E = [_t073E, _t0743, _t0748, _t074D];
    real _t074F = 0.e0;
    real _t0750 = 0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = -0.1e1;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.e0;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    real _t075B = 0.1e1;
    real _t075C = 0.e0;
    vec4 _t075D = [_t0759, _t075A, _t075B, _t075C];
    real _t075E = 0.e0;
    real _t075F = 0.e0;
    real _t0760 = 0.e0;
    real _t0761 = 0.1e1;
    vec4 _t0762 = [_t075E, _t075F, _t0760, _t0761];
    tensor[4,4] _t0763 = [_t0753, _t0758, _t075D, _t0762];
    tensor[4,4][6] _t0764 = {_t06FA, _t070F, _t0724, _t0739, _t074E, _t0763};
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.1e1;
    real _t0768 = 0.5e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.1e1;
    real _t076C = 0.e0;
    real _t076D = 0.e0;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    real _t076F = -0.1e1;
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    vec4 _t0773 = [_t076F, _t0770, _t0771, _t0772];
    real _t0774 = 0.e0;
    real _t0775 = 0.e0;
    real _t0776 = 0.e0;
    real _t0777 = 0.1e1;
    vec4 _t0778 = [_t0774, _t0775, _t0776, _t0777];
    tensor[4,4] _t0779 = [_t0769, _t076E, _t0773, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.1e1;
    real _t077D = 0.5e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.1e1;
    real _t0781 = 0.e0;
    real _t0782 = 0.e0;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    real _t0784 = -0.1e1;
    real _t0785 = 0.e0;
    real _t0786 = 0.e0;
    real _t0787 = 0.1e1;
    vec4 _t0788 = [_t0784, _t0785, _t0786, _t0787];
    real _t0789 = 0.e0;
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = 0.1e1;
    vec4 _t078D = [_t0789, _t078A, _t078B, _t078C];
    tensor[4,4] _t078E = [_t077E, _t0783, _t0788, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = -0.1e1;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.e0;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    real _t0799 = 0.e0;
    real _t079A = 0.e0;
    real _t079B = 0.1e1;
    real _t079C = 0.e0;
    vec4 _t079D = [_t0799, _t079A, _t079B, _t079C];
    real _t079E = 0.e0;
    real _t079F = 0.e0;
    real _t07A0 = 0.e0;
    real _t07A1 = 0.1e1;
    vec4 _t07A2 = [_t079E, _t079F, _t07A0, _t07A1];
    tensor[4,4] _t07A3 = [_t0793, _t0798, _t079D, _t07A2];
    real _t07A4 = 0.1e1;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.1e1;
    real _t07AB = 0.e0;
    real _t07AC = 0.e0;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    real _t07B0 = 0.1e1;
    real _t07B1 = 0.e0;
    vec4 _t07B2 = [_t07AE, _t07AF, _t07B0, _t07B1];
    real _t07B3 = 0.e0;
    real _t07B4 = 0.e0;
    real _t07B5 = 0.e0;
    real _t07B6 = 0.1e1;
    vec4 _t07B7 = [_t07B3, _t07B4, _t07B5, _t07B6];
    tensor[4,4] _t07B8 = [_t07A8, _t07AD, _t07B2, _t07B7];
    real _t07B9 = 0.e0;
    real _t07BA = -0.1e1;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    vec4 _t07BD = [_t07B9, _t07BA, _t07BB, _t07BC];
    real _t07BE = 0.1e1;
    real _t07BF = 0.e0;
    real _t07C0 = 0.e0;
    real _t07C1 = 0.e0;
    vec4 _t07C2 = [_t07BE, _t07BF, _t07C0, _t07C1];
    real _t07C3 = 0.e0;
    real _t07C4 = 0.e0;
    real _t07C5 = 0.1e1;
    real _t07C6 = 0.e0;
    vec4 _t07C7 = [_t07C3, _t07C4, _t07C5, _t07C6];
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    real _t07CA = 0.e0;
    real _t07CB = 0.1e1;
    vec4 _t07CC = [_t07C8, _t07C9, _t07CA, _t07CB];
    tensor[4,4] _t07CD = [_t07BD, _t07C2, _t07C7, _t07CC];
    real _t07CE = -0.1e1;
    real _t07CF = 0.e0;
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    vec4 _t07D2 = [_t07CE, _t07CF, _t07D0, _t07D1];
    real _t07D3 = 0.e0;
    real _t07D4 = -0.1e1;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.e0;
    vec4 _t07D7 = [_t07D3, _t07D4, _t07D5, _t07D6];
    real _t07D8 = 0.e0;
    real _t07D9 = 0.e0;
    real _t07DA = 0.1e1;
    real _t07DB = 0.e0;
    vec4 _t07DC = [_t07D8, _t07D9, _t07DA, _t07DB];
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    real _t07DF = 0.e0;
    real _t07E0 = 0.1e1;
    vec4 _t07E1 = [_t07DD, _t07DE, _t07DF, _t07E0];
    tensor[4,4] _t07E2 = [_t07D2, _t07D7, _t07DC, _t07E1];
    tensor[4,4][6] _t07E3 = {_t0779, _t078E, _t07A3, _t07B8, _t07CD, _t07E2};
    real _t07E4 = -0.1e1;
    real _t07E5 = 0.e0;
    real _t07E6 = 0.1e1;
    real _t07E7 = 0.5e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.1e1;
    real _t07EA = 0.e0;
    real _t07EB = 0.e0;
    real _t07EC = 0.e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.e0;
    real _t07EF = -0.1e1;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    real _t07F3 = 0.e0;
    real _t07F4 = 0.e0;
    real _t07F5 = 0.e0;
    real _t07F6 = 0.1e1;
    vec4 _t07F7 = [_t07F3, _t07F4, _t07F5, _t07F6];
    tensor[4,4] _t07F8 = [_t07E8, _t07ED, _t07F2, _t07F7];
    real _t07F9 = -0.1e1;
    real _t07FA = 0.e0;
    real _t07FB = 0.1e1;
    real _t07FC = 0.5e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.1e1;
    real _t07FF = 0.e0;
    real _t0800 = 0.e0;
    real _t0801 = 0.e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.e0;
    real _t0804 = -0.1e1;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    real _t0808 = 0.e0;
    real _t0809 = 0.e0;
    real _t080A = 0.e0;
    real _t080B = 0.1e1;
    vec4 _t080C = [_t0808, _t0809, _t080A, _t080B];
    tensor[4,4] _t080D = [_t07FD, _t0802, _t0807, _t080C];
    real _t080E = -0.1e1;
    real _t080F = 0.e0;
    real _t0810 = 0.e0;
    real _t0811 = 0.e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.e0;
    real _t0814 = -0.1e1;
    real _t0815 = 0.e0;
    real _t0816 = 0.e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.e0;
    real _t0819 = 0.e0;
    real _t081A = 0.1e1;
    real _t081B = 0.e0;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    real _t081F = 0.e0;
    real _t0820 = 0.1e1;
    vec4 _t0821 = [_t081D, _t081E, _t081F, _t0820];
    tensor[4,4] _t0822 = [_t0812, _t0817, _t081C, _t0821];
    real _t0823 = 0.e0;
    real _t0824 = 0.1e1;
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    vec4 _t0827 = [_t0823, _t0824, _t0825, _t0826];
    real _t0828 = -0.1e1;
    real _t0829 = 0.e0;
    real _t082A = 0.e0;
    real _t082B = 0.e0;
    vec4 _t082C = [_t0828, _t0829, _t082A, _t082B];
    real _t082D = 0.e0;
    real _t082E = 0.e0;
    real _t082F = 0.1e1;
    real _t0830 = 0.e0;
    vec4 _t0831 = [_t082D, _t082E, _t082F, _t0830];
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    real _t0834 = 0.e0;
    real _t0835 = 0.1e1;
    vec4 _t0836 = [_t0832, _t0833, _t0834, _t0835];
    tensor[4,4] _t0837 = [_t0827, _t082C, _t0831, _t0836];
    real _t0838 = 0.1e1;
    real _t0839 = 0.e0;
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    vec4 _t083C = [_t0838, _t0839, _t083A, _t083B];
    real _t083D = 0.e0;
    real _t083E = 0.1e1;
    real _t083F = 0.e0;
    real _t0840 = 0.e0;
    vec4 _t0841 = [_t083D, _t083E, _t083F, _t0840];
    real _t0842 = 0.e0;
    real _t0843 = 0.e0;
    real _t0844 = 0.1e1;
    real _t0845 = 0.e0;
    vec4 _t0846 = [_t0842, _t0843, _t0844, _t0845];
    real _t0847 = 0.e0;
    real _t0848 = 0.e0;
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    vec4 _t084B = [_t0847, _t0848, _t0849, _t084A];
    tensor[4,4] _t084C = [_t083C, _t0841, _t0846, _t084B];
    real _t084D = 0.e0;
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    vec4 _t0851 = [_t084D, _t084E, _t084F, _t0850];
    real _t0852 = 0.1e1;
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.e0;
    vec4 _t0856 = [_t0852, _t0853, _t0854, _t0855];
    real _t0857 = 0.e0;
    real _t0858 = 0.e0;
    real _t0859 = 0.1e1;
    real _t085A = 0.e0;
    vec4 _t085B = [_t0857, _t0858, _t0859, _t085A];
    real _t085C = 0.e0;
    real _t085D = 0.e0;
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    vec4 _t0860 = [_t085C, _t085D, _t085E, _t085F];
    tensor[4,4] _t0861 = [_t0851, _t0856, _t085B, _t0860];
    tensor[4,4][6] _t0862 = {_t07F8, _t080D, _t0822, _t0837, _t084C, _t0861};
    real _t0863 = 0.e0;
    real _t0864 = -0.1e1;
    real _t0865 = 0.1e1;
    real _t0866 = 0.5e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.e0;
    real _t0869 = -0.1e1;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.1e1;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.e0;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    real _t0872 = 0.e0;
    real _t0873 = 0.e0;
    real _t0874 = 0.e0;
    real _t0875 = 0.1e1;
    vec4 _t0876 = [_t0872, _t0873, _t0874, _t0875];
    tensor[4,4] _t0877 = [_t0867, _t086C, _t0871, _t0876];
    real _t0878 = 0.e0;
    real _t0879 = -0.1e1;
    real _t087A = 0.1e1;
    real _t087B = 0.5e0;
    vec4 _t087C = [_t0878, _t0879, _t087A, _t087B];
    real _t087D = 0.e0;
    real _t087E = -0.1e1;
    real _t087F = 0.e0;
    real _t0880 = 0.e0;
    vec4 _t0881 = [_t087D, _t087E, _t087F, _t0880];
    real _t0882 = 0.1e1;
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.1e1;
    vec4 _t0886 = [_t0882, _t0883, _t0884, _t0885];
    real _t0887 = 0.e0;
    real _t0888 = 0.e0;
    real _t0889 = 0.e0;
    real _t088A = 0.1e1;
    vec4 _t088B = [_t0887, _t0888, _t0889, _t088A];
    tensor[4,4] _t088C = [_t087C, _t0881, _t0886, _t088B];
    real _t088D = 0.e0;
    real _t088E = -0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    vec4 _t0891 = [_t088D, _t088E, _t088F, _t0890];
    real _t0892 = 0.1e1;
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.e0;
    vec4 _t0896 = [_t0892, _t0893, _t0894, _t0895];
    real _t0897 = 0.e0;
    real _t0898 = 0.e0;
    real _t0899 = 0.1e1;
    real _t089A = 0.e0;
    vec4 _t089B = [_t0897, _t0898, _t0899, _t089A];
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    real _t089E = 0.e0;
    real _t089F = 0.1e1;
    vec4 _t08A0 = [_t089C, _t089D, _t089E, _t089F];
    tensor[4,4] _t08A1 = [_t0891, _t0896, _t089B, _t08A0];
    real _t08A2 = -0.1e1;
    real _t08A3 = 0.e0;
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    vec4 _t08A6 = [_t08A2, _t08A3, _t08A4, _t08A5];
    real _t08A7 = 0.e0;
    real _t08A8 = -0.1e1;
    real _t08A9 = 0.e0;
    real _t08AA = 0.e0;
    vec4 _t08AB = [_t08A7, _t08A8, _t08A9, _t08AA];
    real _t08AC = 0.e0;
    real _t08AD = 0.e0;
    real _t08AE = 0.1e1;
    real _t08AF = 0.e0;
    vec4 _t08B0 = [_t08AC, _t08AD, _t08AE, _t08AF];
    real _t08B1 = 0.e0;
    real _t08B2 = 0.e0;
    real _t08B3 = 0.e0;
    real _t08B4 = 0.1e1;
    vec4 _t08B5 = [_t08B1, _t08B2, _t08B3, _t08B4];
    tensor[4,4] _t08B6 = [_t08A6, _t08AB, _t08B0, _t08B5];
    real _t08B7 = 0.e0;
    real _t08B8 = 0.1e1;
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    vec4 _t08BB = [_t08B7, _t08B8, _t08B9, _t08BA];
    real _t08BC = -0.1e1;
    real _t08BD = 0.e0;
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    vec4 _t08C0 = [_t08BC, _t08BD, _t08BE, _t08BF];
    real _t08C1 = 0.e0;
    real _t08C2 = 0.e0;
    real _t08C3 = 0.1e1;
    real _t08C4 = 0.e0;
    vec4 _t08C5 = [_t08C1, _t08C2, _t08C3, _t08C4];
    real _t08C6 = 0.e0;
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    real _t08C9 = 0.1e1;
    vec4 _t08CA = [_t08C6, _t08C7, _t08C8, _t08C9];
    tensor[4,4] _t08CB = [_t08BB, _t08C0, _t08C5, _t08CA];
    real _t08CC = 0.1e1;
    real _t08CD = 0.e0;
    real _t08CE = 0.e0;
    real _t08CF = 0.e0;
    vec4 _t08D0 = [_t08CC, _t08CD, _t08CE, _t08CF];
    real _t08D1 = 0.e0;
    real _t08D2 = 0.1e1;
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    vec4 _t08D5 = [_t08D1, _t08D2, _t08D3, _t08D4];
    real _t08D6 = 0.e0;
    real _t08D7 = 0.e0;
    real _t08D8 = 0.1e1;
    real _t08D9 = 0.e0;
    vec4 _t08DA = [_t08D6, _t08D7, _t08D8, _t08D9];
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    real _t08DE = 0.1e1;
    vec4 _t08DF = [_t08DB, _t08DC, _t08DD, _t08DE];
    tensor[4,4] _t08E0 = [_t08D0, _t08D5, _t08DA, _t08DF];
    tensor[4,4][6] _t08E1 = {_t0877, _t088C, _t08A1, _t08B6, _t08CB, _t08E0};
    tensor[4,4][6][6] _t08E2 = {_t0666, _t06E5, _t0764, _t07E3, _t0862, _t08E1};
    real _t08E3 = time05D4[1];
    int _t08E4 = prim $r2i01B7 (_t08E3);
    tensor[4,4][6] _t08E5 = prim $sub01C0<tensor[4,4][6]; %6> (_t08E2, _t08E4);
    real _t08E6 = time05D4[1];
    int _t08E7 = prim $r2i01B7 (_t08E6);
    int[2] _t08E8 = func nextCell405D8 (_t08E7, cellId05D1, mesh05D0);
    int _t08E9 = 1;
    int _t08EA = prim $sub01C0<int; %2> (_t08E8, _t08E9);
    tensor[4,4] _t08EB = prim $sub01C0<tensor[4,4]; %6> (_t08E5, _t08EA);
    string _t08EC = "\n";
    print (_t05DD, _t05DF, _t05E0, _t05E5, _t05E6, _t05E7, _t08EB, _t08EC);
    real _t08ED = time05D4[1];
    int _t08EE = prim $r2i01B7 (_t08ED);
    int[2] _t08EF = func nextCell405D8 (_t08EE, cellId05D1, mesh05D0);
    int _t08F0 = 0;
    int _t08F1 = prim $sub01C0<int; %2> (_t08EF, _t08F0);
    real _t08F2 = 0.1e1;
    real _t08F3 = 0.e0;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    vec4 _t08F6 = [_t08F2, _t08F3, _t08F4, _t08F5];
    real _t08F7 = 0.e0;
    real _t08F8 = 0.1e1;
    real _t08F9 = 0.e0;
    real _t08FA = 0.e0;
    vec4 _t08FB = [_t08F7, _t08F8, _t08F9, _t08FA];
    real _t08FC = 0.e0;
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    vec4 _t0900 = [_t08FC, _t08FD, _t08FE, _t08FF];
    real _t0901 = 0.e0;
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.1e1;
    vec4 _t0905 = [_t0901, _t0902, _t0903, _t0904];
    tensor[4,4] _t0906 = [_t08F6, _t08FB, _t0900, _t0905];
    real _t0907 = 0.1e1;
    real _t0908 = 0.e0;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    vec4 _t090B = [_t0907, _t0908, _t0909, _t090A];
    real _t090C = 0.e0;
    real _t090D = 0.1e1;
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    vec4 _t0910 = [_t090C, _t090D, _t090E, _t090F];
    real _t0911 = 0.e0;
    real _t0912 = 0.e0;
    real _t0913 = 0.1e1;
    real _t0914 = 0.1e1;
    vec4 _t0915 = [_t0911, _t0912, _t0913, _t0914];
    real _t0916 = 0.e0;
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.1e1;
    vec4 _t091A = [_t0916, _t0917, _t0918, _t0919];
    tensor[4,4] _t091B = [_t090B, _t0910, _t0915, _t091A];
    real _t091C = 0.e0;
    real _t091D = 0.1e1;
    real _t091E = 0.e0;
    real _t091F = 0.e0;
    vec4 _t0920 = [_t091C, _t091D, _t091E, _t091F];
    real _t0921 = 0.e0;
    real _t0922 = 0.e0;
    real _t0923 = 0.1e1;
    real _t0924 = 0.e0;
    vec4 _t0925 = [_t0921, _t0922, _t0923, _t0924];
    real _t0926 = 0.1e1;
    real _t0927 = -0.1e1;
    real _t0928 = 0.e0;
    real _t0929 = -0.5e0;
    vec4 _t092A = [_t0926, _t0927, _t0928, _t0929];
    real _t092B = 0.e0;
    real _t092C = 0.e0;
    real _t092D = 0.e0;
    real _t092E = 0.1e1;
    vec4 _t092F = [_t092B, _t092C, _t092D, _t092E];
    tensor[4,4] _t0930 = [_t0920, _t0925, _t092A, _t092F];
    real _t0931 = 0.e0;
    real _t0932 = 0.e0;
    real _t0933 = -0.1e1;
    real _t0934 = 0.e0;
    vec4 _t0935 = [_t0931, _t0932, _t0933, _t0934];
    real _t0936 = 0.e0;
    real _t0937 = 0.1e1;
    real _t0938 = 0.e0;
    real _t0939 = 0.e0;
    vec4 _t093A = [_t0936, _t0937, _t0938, _t0939];
    real _t093B = 0.1e1;
    real _t093C = -0.1e1;
    real _t093D = 0.e0;
    real _t093E = -0.5e0;
    vec4 _t093F = [_t093B, _t093C, _t093D, _t093E];
    real _t0940 = 0.e0;
    real _t0941 = 0.e0;
    real _t0942 = 0.e0;
    real _t0943 = 0.1e1;
    vec4 _t0944 = [_t0940, _t0941, _t0942, _t0943];
    tensor[4,4] _t0945 = [_t0935, _t093A, _t093F, _t0944];
    real _t0946 = 0.e0;
    real _t0947 = -0.1e1;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    vec4 _t094A = [_t0946, _t0947, _t0948, _t0949];
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    real _t094D = -0.1e1;
    real _t094E = 0.e0;
    vec4 _t094F = [_t094B, _t094C, _t094D, _t094E];
    real _t0950 = 0.1e1;
    real _t0951 = -0.1e1;
    real _t0952 = 0.e0;
    real _t0953 = -0.5e0;
    vec4 _t0954 = [_t0950, _t0951, _t0952, _t0953];
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    real _t0957 = 0.e0;
    real _t0958 = 0.1e1;
    vec4 _t0959 = [_t0955, _t0956, _t0957, _t0958];
    tensor[4,4] _t095A = [_t094A, _t094F, _t0954, _t0959];
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    real _t095D = 0.1e1;
    real _t095E = 0.e0;
    vec4 _t095F = [_t095B, _t095C, _t095D, _t095E];
    real _t0960 = 0.e0;
    real _t0961 = -0.1e1;
    real _t0962 = 0.e0;
    real _t0963 = 0.e0;
    vec4 _t0964 = [_t0960, _t0961, _t0962, _t0963];
    real _t0965 = 0.1e1;
    real _t0966 = -0.1e1;
    real _t0967 = 0.e0;
    real _t0968 = -0.5e0;
    vec4 _t0969 = [_t0965, _t0966, _t0967, _t0968];
    real _t096A = 0.e0;
    real _t096B = 0.e0;
    real _t096C = 0.e0;
    real _t096D = 0.1e1;
    vec4 _t096E = [_t096A, _t096B, _t096C, _t096D];
    tensor[4,4] _t096F = [_t095F, _t0964, _t0969, _t096E];
    tensor[4,4][6] _t0970 = {_t0906, _t091B, _t0930, _t0945, _t095A, _t096F};
    real _t0971 = 0.1e1;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.e0;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    real _t0976 = 0.e0;
    real _t0977 = 0.1e1;
    real _t0978 = 0.e0;
    real _t0979 = 0.e0;
    vec4 _t097A = [_t0976, _t0977, _t0978, _t0979];
    real _t097B = 0.e0;
    real _t097C = 0.e0;
    real _t097D = 0.1e1;
    real _t097E = -0.1e1;
    vec4 _t097F = [_t097B, _t097C, _t097D, _t097E];
    real _t0980 = 0.e0;
    real _t0981 = 0.e0;
    real _t0982 = 0.e0;
    real _t0983 = 0.1e1;
    vec4 _t0984 = [_t0980, _t0981, _t0982, _t0983];
    tensor[4,4] _t0985 = [_t0975, _t097A, _t097F, _t0984];
    real _t0986 = 0.1e1;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.e0;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    real _t098B = 0.e0;
    real _t098C = 0.1e1;
    real _t098D = 0.e0;
    real _t098E = 0.e0;
    vec4 _t098F = [_t098B, _t098C, _t098D, _t098E];
    real _t0990 = 0.e0;
    real _t0991 = 0.e0;
    real _t0992 = 0.1e1;
    real _t0993 = 0.e0;
    vec4 _t0994 = [_t0990, _t0991, _t0992, _t0993];
    real _t0995 = 0.e0;
    real _t0996 = 0.e0;
    real _t0997 = 0.e0;
    real _t0998 = 0.1e1;
    vec4 _t0999 = [_t0995, _t0996, _t0997, _t0998];
    tensor[4,4] _t099A = [_t098A, _t098F, _t0994, _t0999];
    real _t099B = 0.e0;
    real _t099C = 0.1e1;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    vec4 _t099F = [_t099B, _t099C, _t099D, _t099E];
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    real _t09A2 = 0.1e1;
    real _t09A3 = -0.1e1;
    vec4 _t09A4 = [_t09A0, _t09A1, _t09A2, _t09A3];
    real _t09A5 = 0.1e1;
    real _t09A6 = -0.1e1;
    real _t09A7 = 0.e0;
    real _t09A8 = -0.5e0;
    vec4 _t09A9 = [_t09A5, _t09A6, _t09A7, _t09A8];
    real _t09AA = 0.e0;
    real _t09AB = 0.e0;
    real _t09AC = 0.e0;
    real _t09AD = 0.1e1;
    vec4 _t09AE = [_t09AA, _t09AB, _t09AC, _t09AD];
    tensor[4,4] _t09AF = [_t099F, _t09A4, _t09A9, _t09AE];
    real _t09B0 = 0.e0;
    real _t09B1 = 0.e0;
    real _t09B2 = -0.1e1;
    real _t09B3 = 0.1e1;
    vec4 _t09B4 = [_t09B0, _t09B1, _t09B2, _t09B3];
    real _t09B5 = 0.e0;
    real _t09B6 = 0.1e1;
    real _t09B7 = 0.e0;
    real _t09B8 = 0.e0;
    vec4 _t09B9 = [_t09B5, _t09B6, _t09B7, _t09B8];
    real _t09BA = 0.1e1;
    real _t09BB = -0.1e1;
    real _t09BC = 0.e0;
    real _t09BD = -0.5e0;
    vec4 _t09BE = [_t09BA, _t09BB, _t09BC, _t09BD];
    real _t09BF = 0.e0;
    real _t09C0 = 0.e0;
    real _t09C1 = 0.e0;
    real _t09C2 = 0.1e1;
    vec4 _t09C3 = [_t09BF, _t09C0, _t09C1, _t09C2];
    tensor[4,4] _t09C4 = [_t09B4, _t09B9, _t09BE, _t09C3];
    real _t09C5 = 0.e0;
    real _t09C6 = -0.1e1;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    vec4 _t09C9 = [_t09C5, _t09C6, _t09C7, _t09C8];
    real _t09CA = 0.e0;
    real _t09CB = 0.e0;
    real _t09CC = -0.1e1;
    real _t09CD = 0.1e1;
    vec4 _t09CE = [_t09CA, _t09CB, _t09CC, _t09CD];
    real _t09CF = 0.1e1;
    real _t09D0 = -0.1e1;
    real _t09D1 = 0.e0;
    real _t09D2 = -0.5e0;
    vec4 _t09D3 = [_t09CF, _t09D0, _t09D1, _t09D2];
    real _t09D4 = 0.e0;
    real _t09D5 = 0.e0;
    real _t09D6 = 0.e0;
    real _t09D7 = 0.1e1;
    vec4 _t09D8 = [_t09D4, _t09D5, _t09D6, _t09D7];
    tensor[4,4] _t09D9 = [_t09C9, _t09CE, _t09D3, _t09D8];
    real _t09DA = 0.e0;
    real _t09DB = 0.e0;
    real _t09DC = 0.1e1;
    real _t09DD = -0.1e1;
    vec4 _t09DE = [_t09DA, _t09DB, _t09DC, _t09DD];
    real _t09DF = 0.e0;
    real _t09E0 = -0.1e1;
    real _t09E1 = 0.e0;
    real _t09E2 = 0.e0;
    vec4 _t09E3 = [_t09DF, _t09E0, _t09E1, _t09E2];
    real _t09E4 = 0.1e1;
    real _t09E5 = -0.1e1;
    real _t09E6 = 0.e0;
    real _t09E7 = -0.5e0;
    vec4 _t09E8 = [_t09E4, _t09E5, _t09E6, _t09E7];
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    real _t09EB = 0.e0;
    real _t09EC = 0.1e1;
    vec4 _t09ED = [_t09E9, _t09EA, _t09EB, _t09EC];
    tensor[4,4] _t09EE = [_t09DE, _t09E3, _t09E8, _t09ED];
    tensor[4,4][6] _t09EF = {_t0985, _t099A, _t09AF, _t09C4, _t09D9, _t09EE};
    real _t09F0 = 0.1e1;
    real _t09F1 = 0.e0;
    real _t09F2 = 0.1e1;
    real _t09F3 = 0.5e0;
    vec4 _t09F4 = [_t09F0, _t09F1, _t09F2, _t09F3];
    real _t09F5 = 0.1e1;
    real _t09F6 = 0.e0;
    real _t09F7 = 0.e0;
    real _t09F8 = 0.e0;
    vec4 _t09F9 = [_t09F5, _t09F6, _t09F7, _t09F8];
    real _t09FA = 0.e0;
    real _t09FB = 0.1e1;
    real _t09FC = 0.e0;
    real _t09FD = 0.e0;
    vec4 _t09FE = [_t09FA, _t09FB, _t09FC, _t09FD];
    real _t09FF = 0.e0;
    real _t0A00 = 0.e0;
    real _t0A01 = 0.e0;
    real _t0A02 = 0.1e1;
    vec4 _t0A03 = [_t09FF, _t0A00, _t0A01, _t0A02];
    tensor[4,4] _t0A04 = [_t09F4, _t09F9, _t09FE, _t0A03];
    real _t0A05 = 0.1e1;
    real _t0A06 = 0.e0;
    real _t0A07 = 0.1e1;
    real _t0A08 = 0.5e0;
    vec4 _t0A09 = [_t0A05, _t0A06, _t0A07, _t0A08];
    real _t0A0A = 0.1e1;
    real _t0A0B = 0.e0;
    real _t0A0C = 0.e0;
    real _t0A0D = 0.e0;
    vec4 _t0A0E = [_t0A0A, _t0A0B, _t0A0C, _t0A0D];
    real _t0A0F = 0.e0;
    real _t0A10 = 0.1e1;
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    vec4 _t0A13 = [_t0A0F, _t0A10, _t0A11, _t0A12];
    real _t0A14 = 0.e0;
    real _t0A15 = 0.e0;
    real _t0A16 = 0.e0;
    real _t0A17 = 0.1e1;
    vec4 _t0A18 = [_t0A14, _t0A15, _t0A16, _t0A17];
    tensor[4,4] _t0A19 = [_t0A09, _t0A0E, _t0A13, _t0A18];
    real _t0A1A = 0.1e1;
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    vec4 _t0A1E = [_t0A1A, _t0A1B, _t0A1C, _t0A1D];
    real _t0A1F = 0.e0;
    real _t0A20 = 0.1e1;
    real _t0A21 = 0.e0;
    real _t0A22 = 0.e0;
    vec4 _t0A23 = [_t0A1F, _t0A20, _t0A21, _t0A22];
    real _t0A24 = 0.e0;
    real _t0A25 = 0.e0;
    real _t0A26 = 0.1e1;
    real _t0A27 = 0.e0;
    vec4 _t0A28 = [_t0A24, _t0A25, _t0A26, _t0A27];
    real _t0A29 = 0.e0;
    real _t0A2A = 0.e0;
    real _t0A2B = 0.e0;
    real _t0A2C = 0.1e1;
    vec4 _t0A2D = [_t0A29, _t0A2A, _t0A2B, _t0A2C];
    tensor[4,4] _t0A2E = [_t0A1E, _t0A23, _t0A28, _t0A2D];
    real _t0A2F = 0.e0;
    real _t0A30 = -0.1e1;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    vec4 _t0A33 = [_t0A2F, _t0A30, _t0A31, _t0A32];
    real _t0A34 = 0.1e1;
    real _t0A35 = 0.e0;
    real _t0A36 = 0.e0;
    real _t0A37 = 0.e0;
    vec4 _t0A38 = [_t0A34, _t0A35, _t0A36, _t0A37];
    real _t0A39 = 0.e0;
    real _t0A3A = 0.e0;
    real _t0A3B = 0.1e1;
    real _t0A3C = 0.e0;
    vec4 _t0A3D = [_t0A39, _t0A3A, _t0A3B, _t0A3C];
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    real _t0A40 = 0.e0;
    real _t0A41 = 0.1e1;
    vec4 _t0A42 = [_t0A3E, _t0A3F, _t0A40, _t0A41];
    tensor[4,4] _t0A43 = [_t0A33, _t0A38, _t0A3D, _t0A42];
    real _t0A44 = -0.1e1;
    real _t0A45 = 0.e0;
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    vec4 _t0A48 = [_t0A44, _t0A45, _t0A46, _t0A47];
    real _t0A49 = 0.e0;
    real _t0A4A = -0.1e1;
    real _t0A4B = 0.e0;
    real _t0A4C = 0.e0;
    vec4 _t0A4D = [_t0A49, _t0A4A, _t0A4B, _t0A4C];
    real _t0A4E = 0.e0;
    real _t0A4F = 0.e0;
    real _t0A50 = 0.1e1;
    real _t0A51 = 0.e0;
    vec4 _t0A52 = [_t0A4E, _t0A4F, _t0A50, _t0A51];
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    real _t0A55 = 0.e0;
    real _t0A56 = 0.1e1;
    vec4 _t0A57 = [_t0A53, _t0A54, _t0A55, _t0A56];
    tensor[4,4] _t0A58 = [_t0A48, _t0A4D, _t0A52, _t0A57];
    real _t0A59 = 0.e0;
    real _t0A5A = 0.1e1;
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    vec4 _t0A5D = [_t0A59, _t0A5A, _t0A5B, _t0A5C];
    real _t0A5E = -0.1e1;
    real _t0A5F = 0.e0;
    real _t0A60 = 0.e0;
    real _t0A61 = 0.e0;
    vec4 _t0A62 = [_t0A5E, _t0A5F, _t0A60, _t0A61];
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    real _t0A65 = 0.1e1;
    real _t0A66 = 0.e0;
    vec4 _t0A67 = [_t0A63, _t0A64, _t0A65, _t0A66];
    real _t0A68 = 0.e0;
    real _t0A69 = 0.e0;
    real _t0A6A = 0.e0;
    real _t0A6B = 0.1e1;
    vec4 _t0A6C = [_t0A68, _t0A69, _t0A6A, _t0A6B];
    tensor[4,4] _t0A6D = [_t0A5D, _t0A62, _t0A67, _t0A6C];
    tensor[4,4][6] _t0A6E = {_t0A04, _t0A19, _t0A2E, _t0A43, _t0A58, _t0A6D};
    real _t0A6F = 0.e0;
    real _t0A70 = 0.1e1;
    real _t0A71 = 0.1e1;
    real _t0A72 = 0.5e0;
    vec4 _t0A73 = [_t0A6F, _t0A70, _t0A71, _t0A72];
    real _t0A74 = 0.e0;
    real _t0A75 = 0.1e1;
    real _t0A76 = 0.e0;
    real _t0A77 = 0.e0;
    vec4 _t0A78 = [_t0A74, _t0A75, _t0A76, _t0A77];
    real _t0A79 = -0.1e1;
    real _t0A7A = 0.e0;
    real _t0A7B = 0.e0;
    real _t0A7C = 0.e0;
    vec4 _t0A7D = [_t0A79, _t0A7A, _t0A7B, _t0A7C];
    real _t0A7E = 0.e0;
    real _t0A7F = 0.e0;
    real _t0A80 = 0.e0;
    real _t0A81 = 0.1e1;
    vec4 _t0A82 = [_t0A7E, _t0A7F, _t0A80, _t0A81];
    tensor[4,4] _t0A83 = [_t0A73, _t0A78, _t0A7D, _t0A82];
    real _t0A84 = 0.e0;
    real _t0A85 = 0.1e1;
    real _t0A86 = 0.1e1;
    real _t0A87 = 0.5e0;
    vec4 _t0A88 = [_t0A84, _t0A85, _t0A86, _t0A87];
    real _t0A89 = 0.e0;
    real _t0A8A = 0.1e1;
    real _t0A8B = 0.e0;
    real _t0A8C = 0.e0;
    vec4 _t0A8D = [_t0A89, _t0A8A, _t0A8B, _t0A8C];
    real _t0A8E = -0.1e1;
    real _t0A8F = 0.e0;
    real _t0A90 = 0.e0;
    real _t0A91 = 0.1e1;
    vec4 _t0A92 = [_t0A8E, _t0A8F, _t0A90, _t0A91];
    real _t0A93 = 0.e0;
    real _t0A94 = 0.e0;
    real _t0A95 = 0.e0;
    real _t0A96 = 0.1e1;
    vec4 _t0A97 = [_t0A93, _t0A94, _t0A95, _t0A96];
    tensor[4,4] _t0A98 = [_t0A88, _t0A8D, _t0A92, _t0A97];
    real _t0A99 = 0.e0;
    real _t0A9A = 0.1e1;
    real _t0A9B = 0.e0;
    real _t0A9C = 0.e0;
    vec4 _t0A9D = [_t0A99, _t0A9A, _t0A9B, _t0A9C];
    real _t0A9E = -0.1e1;
    real _t0A9F = 0.e0;
    real _t0AA0 = 0.e0;
    real _t0AA1 = 0.e0;
    vec4 _t0AA2 = [_t0A9E, _t0A9F, _t0AA0, _t0AA1];
    real _t0AA3 = 0.e0;
    real _t0AA4 = 0.e0;
    real _t0AA5 = 0.1e1;
    real _t0AA6 = 0.e0;
    vec4 _t0AA7 = [_t0AA3, _t0AA4, _t0AA5, _t0AA6];
    real _t0AA8 = 0.e0;
    real _t0AA9 = 0.e0;
    real _t0AAA = 0.e0;
    real _t0AAB = 0.1e1;
    vec4 _t0AAC = [_t0AA8, _t0AA9, _t0AAA, _t0AAB];
    tensor[4,4] _t0AAD = [_t0A9D, _t0AA2, _t0AA7, _t0AAC];
    real _t0AAE = 0.1e1;
    real _t0AAF = 0.e0;
    real _t0AB0 = 0.e0;
    real _t0AB1 = 0.e0;
    vec4 _t0AB2 = [_t0AAE, _t0AAF, _t0AB0, _t0AB1];
    real _t0AB3 = 0.e0;
    real _t0AB4 = 0.1e1;
    real _t0AB5 = 0.e0;
    real _t0AB6 = 0.e0;
    vec4 _t0AB7 = [_t0AB3, _t0AB4, _t0AB5, _t0AB6];
    real _t0AB8 = 0.e0;
    real _t0AB9 = 0.e0;
    real _t0ABA = 0.1e1;
    real _t0ABB = 0.e0;
    vec4 _t0ABC = [_t0AB8, _t0AB9, _t0ABA, _t0ABB];
    real _t0ABD = 0.e0;
    real _t0ABE = 0.e0;
    real _t0ABF = 0.e0;
    real _t0AC0 = 0.1e1;
    vec4 _t0AC1 = [_t0ABD, _t0ABE, _t0ABF, _t0AC0];
    tensor[4,4] _t0AC2 = [_t0AB2, _t0AB7, _t0ABC, _t0AC1];
    real _t0AC3 = 0.e0;
    real _t0AC4 = -0.1e1;
    real _t0AC5 = 0.e0;
    real _t0AC6 = 0.e0;
    vec4 _t0AC7 = [_t0AC3, _t0AC4, _t0AC5, _t0AC6];
    real _t0AC8 = 0.1e1;
    real _t0AC9 = 0.e0;
    real _t0ACA = 0.e0;
    real _t0ACB = 0.e0;
    vec4 _t0ACC = [_t0AC8, _t0AC9, _t0ACA, _t0ACB];
    real _t0ACD = 0.e0;
    real _t0ACE = 0.e0;
    real _t0ACF = 0.1e1;
    real _t0AD0 = 0.e0;
    vec4 _t0AD1 = [_t0ACD, _t0ACE, _t0ACF, _t0AD0];
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.e0;
    real _t0AD4 = 0.e0;
    real _t0AD5 = 0.1e1;
    vec4 _t0AD6 = [_t0AD2, _t0AD3, _t0AD4, _t0AD5];
    tensor[4,4] _t0AD7 = [_t0AC7, _t0ACC, _t0AD1, _t0AD6];
    real _t0AD8 = -0.1e1;
    real _t0AD9 = 0.e0;
    real _t0ADA = 0.e0;
    real _t0ADB = 0.e0;
    vec4 _t0ADC = [_t0AD8, _t0AD9, _t0ADA, _t0ADB];
    real _t0ADD = 0.e0;
    real _t0ADE = -0.1e1;
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.e0;
    vec4 _t0AE1 = [_t0ADD, _t0ADE, _t0ADF, _t0AE0];
    real _t0AE2 = 0.e0;
    real _t0AE3 = 0.e0;
    real _t0AE4 = 0.1e1;
    real _t0AE5 = 0.e0;
    vec4 _t0AE6 = [_t0AE2, _t0AE3, _t0AE4, _t0AE5];
    real _t0AE7 = 0.e0;
    real _t0AE8 = 0.e0;
    real _t0AE9 = 0.e0;
    real _t0AEA = 0.1e1;
    vec4 _t0AEB = [_t0AE7, _t0AE8, _t0AE9, _t0AEA];
    tensor[4,4] _t0AEC = [_t0ADC, _t0AE1, _t0AE6, _t0AEB];
    tensor[4,4][6] _t0AED = {_t0A83, _t0A98, _t0AAD, _t0AC2, _t0AD7, _t0AEC};
    real _t0AEE = -0.1e1;
    real _t0AEF = 0.e0;
    real _t0AF0 = 0.1e1;
    real _t0AF1 = 0.5e0;
    vec4 _t0AF2 = [_t0AEE, _t0AEF, _t0AF0, _t0AF1];
    real _t0AF3 = -0.1e1;
    real _t0AF4 = 0.e0;
    real _t0AF5 = 0.e0;
    real _t0AF6 = 0.e0;
    vec4 _t0AF7 = [_t0AF3, _t0AF4, _t0AF5, _t0AF6];
    real _t0AF8 = 0.e0;
    real _t0AF9 = -0.1e1;
    real _t0AFA = 0.e0;
    real _t0AFB = 0.e0;
    vec4 _t0AFC = [_t0AF8, _t0AF9, _t0AFA, _t0AFB];
    real _t0AFD = 0.e0;
    real _t0AFE = 0.e0;
    real _t0AFF = 0.e0;
    real _t0B00 = 0.1e1;
    vec4 _t0B01 = [_t0AFD, _t0AFE, _t0AFF, _t0B00];
    tensor[4,4] _t0B02 = [_t0AF2, _t0AF7, _t0AFC, _t0B01];
    real _t0B03 = -0.1e1;
    real _t0B04 = 0.e0;
    real _t0B05 = 0.1e1;
    real _t0B06 = 0.5e0;
    vec4 _t0B07 = [_t0B03, _t0B04, _t0B05, _t0B06];
    real _t0B08 = -0.1e1;
    real _t0B09 = 0.e0;
    real _t0B0A = 0.e0;
    real _t0B0B = 0.e0;
    vec4 _t0B0C = [_t0B08, _t0B09, _t0B0A, _t0B0B];
    real _t0B0D = 0.e0;
    real _t0B0E = -0.1e1;
    real _t0B0F = 0.e0;
    real _t0B10 = 0.1e1;
    vec4 _t0B11 = [_t0B0D, _t0B0E, _t0B0F, _t0B10];
    real _t0B12 = 0.e0;
    real _t0B13 = 0.e0;
    real _t0B14 = 0.e0;
    real _t0B15 = 0.1e1;
    vec4 _t0B16 = [_t0B12, _t0B13, _t0B14, _t0B15];
    tensor[4,4] _t0B17 = [_t0B07, _t0B0C, _t0B11, _t0B16];
    real _t0B18 = -0.1e1;
    real _t0B19 = 0.e0;
    real _t0B1A = 0.e0;
    real _t0B1B = 0.e0;
    vec4 _t0B1C = [_t0B18, _t0B19, _t0B1A, _t0B1B];
    real _t0B1D = 0.e0;
    real _t0B1E = -0.1e1;
    real _t0B1F = 0.e0;
    real _t0B20 = 0.e0;
    vec4 _t0B21 = [_t0B1D, _t0B1E, _t0B1F, _t0B20];
    real _t0B22 = 0.e0;
    real _t0B23 = 0.e0;
    real _t0B24 = 0.1e1;
    real _t0B25 = 0.e0;
    vec4 _t0B26 = [_t0B22, _t0B23, _t0B24, _t0B25];
    real _t0B27 = 0.e0;
    real _t0B28 = 0.e0;
    real _t0B29 = 0.e0;
    real _t0B2A = 0.1e1;
    vec4 _t0B2B = [_t0B27, _t0B28, _t0B29, _t0B2A];
    tensor[4,4] _t0B2C = [_t0B1C, _t0B21, _t0B26, _t0B2B];
    real _t0B2D = 0.e0;
    real _t0B2E = 0.1e1;
    real _t0B2F = 0.e0;
    real _t0B30 = 0.e0;
    vec4 _t0B31 = [_t0B2D, _t0B2E, _t0B2F, _t0B30];
    real _t0B32 = -0.1e1;
    real _t0B33 = 0.e0;
    real _t0B34 = 0.e0;
    real _t0B35 = 0.e0;
    vec4 _t0B36 = [_t0B32, _t0B33, _t0B34, _t0B35];
    real _t0B37 = 0.e0;
    real _t0B38 = 0.e0;
    real _t0B39 = 0.1e1;
    real _t0B3A = 0.e0;
    vec4 _t0B3B = [_t0B37, _t0B38, _t0B39, _t0B3A];
    real _t0B3C = 0.e0;
    real _t0B3D = 0.e0;
    real _t0B3E = 0.e0;
    real _t0B3F = 0.1e1;
    vec4 _t0B40 = [_t0B3C, _t0B3D, _t0B3E, _t0B3F];
    tensor[4,4] _t0B41 = [_t0B31, _t0B36, _t0B3B, _t0B40];
    real _t0B42 = 0.1e1;
    real _t0B43 = 0.e0;
    real _t0B44 = 0.e0;
    real _t0B45 = 0.e0;
    vec4 _t0B46 = [_t0B42, _t0B43, _t0B44, _t0B45];
    real _t0B47 = 0.e0;
    real _t0B48 = 0.1e1;
    real _t0B49 = 0.e0;
    real _t0B4A = 0.e0;
    vec4 _t0B4B = [_t0B47, _t0B48, _t0B49, _t0B4A];
    real _t0B4C = 0.e0;
    real _t0B4D = 0.e0;
    real _t0B4E = 0.1e1;
    real _t0B4F = 0.e0;
    vec4 _t0B50 = [_t0B4C, _t0B4D, _t0B4E, _t0B4F];
    real _t0B51 = 0.e0;
    real _t0B52 = 0.e0;
    real _t0B53 = 0.e0;
    real _t0B54 = 0.1e1;
    vec4 _t0B55 = [_t0B51, _t0B52, _t0B53, _t0B54];
    tensor[4,4] _t0B56 = [_t0B46, _t0B4B, _t0B50, _t0B55];
    real _t0B57 = 0.e0;
    real _t0B58 = -0.1e1;
    real _t0B59 = 0.e0;
    real _t0B5A = 0.e0;
    vec4 _t0B5B = [_t0B57, _t0B58, _t0B59, _t0B5A];
    real _t0B5C = 0.1e1;
    real _t0B5D = 0.e0;
    real _t0B5E = 0.e0;
    real _t0B5F = 0.e0;
    vec4 _t0B60 = [_t0B5C, _t0B5D, _t0B5E, _t0B5F];
    real _t0B61 = 0.e0;
    real _t0B62 = 0.e0;
    real _t0B63 = 0.1e1;
    real _t0B64 = 0.e0;
    vec4 _t0B65 = [_t0B61, _t0B62, _t0B63, _t0B64];
    real _t0B66 = 0.e0;
    real _t0B67 = 0.e0;
    real _t0B68 = 0.e0;
    real _t0B69 = 0.1e1;
    vec4 _t0B6A = [_t0B66, _t0B67, _t0B68, _t0B69];
    tensor[4,4] _t0B6B = [_t0B5B, _t0B60, _t0B65, _t0B6A];
    tensor[4,4][6] _t0B6C = {_t0B02, _t0B17, _t0B2C, _t0B41, _t0B56, _t0B6B};
    real _t0B6D = 0.e0;
    real _t0B6E = -0.1e1;
    real _t0B6F = 0.1e1;
    real _t0B70 = 0.5e0;
    vec4 _t0B71 = [_t0B6D, _t0B6E, _t0B6F, _t0B70];
    real _t0B72 = 0.e0;
    real _t0B73 = -0.1e1;
    real _t0B74 = 0.e0;
    real _t0B75 = 0.e0;
    vec4 _t0B76 = [_t0B72, _t0B73, _t0B74, _t0B75];
    real _t0B77 = 0.1e1;
    real _t0B78 = 0.e0;
    real _t0B79 = 0.e0;
    real _t0B7A = 0.e0;
    vec4 _t0B7B = [_t0B77, _t0B78, _t0B79, _t0B7A];
    real _t0B7C = 0.e0;
    real _t0B7D = 0.e0;
    real _t0B7E = 0.e0;
    real _t0B7F = 0.1e1;
    vec4 _t0B80 = [_t0B7C, _t0B7D, _t0B7E, _t0B7F];
    tensor[4,4] _t0B81 = [_t0B71, _t0B76, _t0B7B, _t0B80];
    real _t0B82 = 0.e0;
    real _t0B83 = -0.1e1;
    real _t0B84 = 0.1e1;
    real _t0B85 = 0.5e0;
    vec4 _t0B86 = [_t0B82, _t0B83, _t0B84, _t0B85];
    real _t0B87 = 0.e0;
    real _t0B88 = -0.1e1;
    real _t0B89 = 0.e0;
    real _t0B8A = 0.e0;
    vec4 _t0B8B = [_t0B87, _t0B88, _t0B89, _t0B8A];
    real _t0B8C = 0.1e1;
    real _t0B8D = 0.e0;
    real _t0B8E = 0.e0;
    real _t0B8F = 0.1e1;
    vec4 _t0B90 = [_t0B8C, _t0B8D, _t0B8E, _t0B8F];
    real _t0B91 = 0.e0;
    real _t0B92 = 0.e0;
    real _t0B93 = 0.e0;
    real _t0B94 = 0.1e1;
    vec4 _t0B95 = [_t0B91, _t0B92, _t0B93, _t0B94];
    tensor[4,4] _t0B96 = [_t0B86, _t0B8B, _t0B90, _t0B95];
    real _t0B97 = 0.e0;
    real _t0B98 = -0.1e1;
    real _t0B99 = 0.e0;
    real _t0B9A = 0.e0;
    vec4 _t0B9B = [_t0B97, _t0B98, _t0B99, _t0B9A];
    real _t0B9C = 0.1e1;
    real _t0B9D = 0.e0;
    real _t0B9E = 0.e0;
    real _t0B9F = 0.e0;
    vec4 _t0BA0 = [_t0B9C, _t0B9D, _t0B9E, _t0B9F];
    real _t0BA1 = 0.e0;
    real _t0BA2 = 0.e0;
    real _t0BA3 = 0.1e1;
    real _t0BA4 = 0.e0;
    vec4 _t0BA5 = [_t0BA1, _t0BA2, _t0BA3, _t0BA4];
    real _t0BA6 = 0.e0;
    real _t0BA7 = 0.e0;
    real _t0BA8 = 0.e0;
    real _t0BA9 = 0.1e1;
    vec4 _t0BAA = [_t0BA6, _t0BA7, _t0BA8, _t0BA9];
    tensor[4,4] _t0BAB = [_t0B9B, _t0BA0, _t0BA5, _t0BAA];
    real _t0BAC = -0.1e1;
    real _t0BAD = 0.e0;
    real _t0BAE = 0.e0;
    real _t0BAF = 0.e0;
    vec4 _t0BB0 = [_t0BAC, _t0BAD, _t0BAE, _t0BAF];
    real _t0BB1 = 0.e0;
    real _t0BB2 = -0.1e1;
    real _t0BB3 = 0.e0;
    real _t0BB4 = 0.e0;
    vec4 _t0BB5 = [_t0BB1, _t0BB2, _t0BB3, _t0BB4];
    real _t0BB6 = 0.e0;
    real _t0BB7 = 0.e0;
    real _t0BB8 = 0.1e1;
    real _t0BB9 = 0.e0;
    vec4 _t0BBA = [_t0BB6, _t0BB7, _t0BB8, _t0BB9];
    real _t0BBB = 0.e0;
    real _t0BBC = 0.e0;
    real _t0BBD = 0.e0;
    real _t0BBE = 0.1e1;
    vec4 _t0BBF = [_t0BBB, _t0BBC, _t0BBD, _t0BBE];
    tensor[4,4] _t0BC0 = [_t0BB0, _t0BB5, _t0BBA, _t0BBF];
    real _t0BC1 = 0.e0;
    real _t0BC2 = 0.1e1;
    real _t0BC3 = 0.e0;
    real _t0BC4 = 0.e0;
    vec4 _t0BC5 = [_t0BC1, _t0BC2, _t0BC3, _t0BC4];
    real _t0BC6 = -0.1e1;
    real _t0BC7 = 0.e0;
    real _t0BC8 = 0.e0;
    real _t0BC9 = 0.e0;
    vec4 _t0BCA = [_t0BC6, _t0BC7, _t0BC8, _t0BC9];
    real _t0BCB = 0.e0;
    real _t0BCC = 0.e0;
    real _t0BCD = 0.1e1;
    real _t0BCE = 0.e0;
    vec4 _t0BCF = [_t0BCB, _t0BCC, _t0BCD, _t0BCE];
    real _t0BD0 = 0.e0;
    real _t0BD1 = 0.e0;
    real _t0BD2 = 0.e0;
    real _t0BD3 = 0.1e1;
    vec4 _t0BD4 = [_t0BD0, _t0BD1, _t0BD2, _t0BD3];
    tensor[4,4] _t0BD5 = [_t0BC5, _t0BCA, _t0BCF, _t0BD4];
    real _t0BD6 = 0.1e1;
    real _t0BD7 = 0.e0;
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    vec4 _t0BDA = [_t0BD6, _t0BD7, _t0BD8, _t0BD9];
    real _t0BDB = 0.e0;
    real _t0BDC = 0.1e1;
    real _t0BDD = 0.e0;
    real _t0BDE = 0.e0;
    vec4 _t0BDF = [_t0BDB, _t0BDC, _t0BDD, _t0BDE];
    real _t0BE0 = 0.e0;
    real _t0BE1 = 0.e0;
    real _t0BE2 = 0.1e1;
    real _t0BE3 = 0.e0;
    vec4 _t0BE4 = [_t0BE0, _t0BE1, _t0BE2, _t0BE3];
    real _t0BE5 = 0.e0;
    real _t0BE6 = 0.e0;
    real _t0BE7 = 0.e0;
    real _t0BE8 = 0.1e1;
    vec4 _t0BE9 = [_t0BE5, _t0BE6, _t0BE7, _t0BE8];
    tensor[4,4] _t0BEA = [_t0BDA, _t0BDF, _t0BE4, _t0BE9];
    tensor[4,4][6] _t0BEB = {_t0B81, _t0B96, _t0BAB, _t0BC0, _t0BD5, _t0BEA};
    tensor[4,4][6][6] _t0BEC = {_t0970, _t09EF, _t0A6E, _t0AED, _t0B6C, _t0BEB};
    real _t0BED = time05D4[1];
    int _t0BEE = prim $r2i01B7 (_t0BED);
    tensor[4,4][6] _t0BEF = prim $sub01C0<tensor[4,4][6]; %6> (_t0BEC, _t0BEE);
    real _t0BF0 = time05D4[1];
    int _t0BF1 = prim $r2i01B7 (_t0BF0);
    int[2] _t0BF2 = func nextCell405D8 (_t0BF1, cellId05D1, mesh05D0);
    int _t0BF3 = 1;
    int _t0BF4 = prim $sub01C0<int; %2> (_t0BF2, _t0BF3);
    tensor[4,4] _t0BF5 = prim $sub01C0<tensor[4,4]; %6> (_t0BEF, _t0BF4);
    real _t0BF6 = time05D4[0];
    vec3 _t0BF7 = prim *0036<$[3]> (_t0BF6, dPos05D3);
    vec3 _t0BF8 = prim +0017<$[3]> (_t0BF7, refPos05D2);
    real _t0BF9 = _t0BF8[0];
    real _t0BFA = time05D4[0];
    vec3 _t0BFB = prim *0036<$[3]> (_t0BFA, dPos05D3);
    vec3 _t0BFC = prim +0017<$[3]> (_t0BFB, refPos05D2);
    real _t0BFD = _t0BFC[1];
    real _t0BFE = time05D4[0];
    vec3 _t0BFF = prim *0036<$[3]> (_t0BFE, dPos05D3);
    vec3 _t0C00 = prim +0017<$[3]> (_t0BFF, refPos05D2);
    real _t0C01 = _t0C00[2];
    real _t0C02 = 0.1e1;
    vec4 _t0C03 = [_t0BF9, _t0BFD, _t0C01, _t0C02];
    vec4 _t0C04 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0BF5, _t0C03);
    real _t0C05 = _t0C04[0];
    real _t0C06 = 0.1e1;
    real _t0C07 = 0.e0;
    real _t0C08 = 0.e0;
    real _t0C09 = 0.e0;
    vec4 _t0C0A = [_t0C06, _t0C07, _t0C08, _t0C09];
    real _t0C0B = 0.e0;
    real _t0C0C = 0.1e1;
    real _t0C0D = 0.e0;
    real _t0C0E = 0.e0;
    vec4 _t0C0F = [_t0C0B, _t0C0C, _t0C0D, _t0C0E];
    real _t0C10 = 0.e0;
    real _t0C11 = 0.e0;
    real _t0C12 = 0.1e1;
    real _t0C13 = 0.e0;
    vec4 _t0C14 = [_t0C10, _t0C11, _t0C12, _t0C13];
    real _t0C15 = 0.e0;
    real _t0C16 = 0.e0;
    real _t0C17 = 0.e0;
    real _t0C18 = 0.1e1;
    vec4 _t0C19 = [_t0C15, _t0C16, _t0C17, _t0C18];
    tensor[4,4] _t0C1A = [_t0C0A, _t0C0F, _t0C14, _t0C19];
    real _t0C1B = 0.1e1;
    real _t0C1C = 0.e0;
    real _t0C1D = 0.e0;
    real _t0C1E = 0.e0;
    vec4 _t0C1F = [_t0C1B, _t0C1C, _t0C1D, _t0C1E];
    real _t0C20 = 0.e0;
    real _t0C21 = 0.1e1;
    real _t0C22 = 0.e0;
    real _t0C23 = 0.e0;
    vec4 _t0C24 = [_t0C20, _t0C21, _t0C22, _t0C23];
    real _t0C25 = 0.e0;
    real _t0C26 = 0.e0;
    real _t0C27 = 0.1e1;
    real _t0C28 = 0.1e1;
    vec4 _t0C29 = [_t0C25, _t0C26, _t0C27, _t0C28];
    real _t0C2A = 0.e0;
    real _t0C2B = 0.e0;
    real _t0C2C = 0.e0;
    real _t0C2D = 0.1e1;
    vec4 _t0C2E = [_t0C2A, _t0C2B, _t0C2C, _t0C2D];
    tensor[4,4] _t0C2F = [_t0C1F, _t0C24, _t0C29, _t0C2E];
    real _t0C30 = 0.e0;
    real _t0C31 = 0.1e1;
    real _t0C32 = 0.e0;
    real _t0C33 = 0.e0;
    vec4 _t0C34 = [_t0C30, _t0C31, _t0C32, _t0C33];
    real _t0C35 = 0.e0;
    real _t0C36 = 0.e0;
    real _t0C37 = 0.1e1;
    real _t0C38 = 0.e0;
    vec4 _t0C39 = [_t0C35, _t0C36, _t0C37, _t0C38];
    real _t0C3A = 0.1e1;
    real _t0C3B = -0.1e1;
    real _t0C3C = 0.e0;
    real _t0C3D = -0.5e0;
    vec4 _t0C3E = [_t0C3A, _t0C3B, _t0C3C, _t0C3D];
    real _t0C3F = 0.e0;
    real _t0C40 = 0.e0;
    real _t0C41 = 0.e0;
    real _t0C42 = 0.1e1;
    vec4 _t0C43 = [_t0C3F, _t0C40, _t0C41, _t0C42];
    tensor[4,4] _t0C44 = [_t0C34, _t0C39, _t0C3E, _t0C43];
    real _t0C45 = 0.e0;
    real _t0C46 = 0.e0;
    real _t0C47 = -0.1e1;
    real _t0C48 = 0.e0;
    vec4 _t0C49 = [_t0C45, _t0C46, _t0C47, _t0C48];
    real _t0C4A = 0.e0;
    real _t0C4B = 0.1e1;
    real _t0C4C = 0.e0;
    real _t0C4D = 0.e0;
    vec4 _t0C4E = [_t0C4A, _t0C4B, _t0C4C, _t0C4D];
    real _t0C4F = 0.1e1;
    real _t0C50 = -0.1e1;
    real _t0C51 = 0.e0;
    real _t0C52 = -0.5e0;
    vec4 _t0C53 = [_t0C4F, _t0C50, _t0C51, _t0C52];
    real _t0C54 = 0.e0;
    real _t0C55 = 0.e0;
    real _t0C56 = 0.e0;
    real _t0C57 = 0.1e1;
    vec4 _t0C58 = [_t0C54, _t0C55, _t0C56, _t0C57];
    tensor[4,4] _t0C59 = [_t0C49, _t0C4E, _t0C53, _t0C58];
    real _t0C5A = 0.e0;
    real _t0C5B = -0.1e1;
    real _t0C5C = 0.e0;
    real _t0C5D = 0.e0;
    vec4 _t0C5E = [_t0C5A, _t0C5B, _t0C5C, _t0C5D];
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    real _t0C61 = -0.1e1;
    real _t0C62 = 0.e0;
    vec4 _t0C63 = [_t0C5F, _t0C60, _t0C61, _t0C62];
    real _t0C64 = 0.1e1;
    real _t0C65 = -0.1e1;
    real _t0C66 = 0.e0;
    real _t0C67 = -0.5e0;
    vec4 _t0C68 = [_t0C64, _t0C65, _t0C66, _t0C67];
    real _t0C69 = 0.e0;
    real _t0C6A = 0.e0;
    real _t0C6B = 0.e0;
    real _t0C6C = 0.1e1;
    vec4 _t0C6D = [_t0C69, _t0C6A, _t0C6B, _t0C6C];
    tensor[4,4] _t0C6E = [_t0C5E, _t0C63, _t0C68, _t0C6D];
    real _t0C6F = 0.e0;
    real _t0C70 = 0.e0;
    real _t0C71 = 0.1e1;
    real _t0C72 = 0.e0;
    vec4 _t0C73 = [_t0C6F, _t0C70, _t0C71, _t0C72];
    real _t0C74 = 0.e0;
    real _t0C75 = -0.1e1;
    real _t0C76 = 0.e0;
    real _t0C77 = 0.e0;
    vec4 _t0C78 = [_t0C74, _t0C75, _t0C76, _t0C77];
    real _t0C79 = 0.1e1;
    real _t0C7A = -0.1e1;
    real _t0C7B = 0.e0;
    real _t0C7C = -0.5e0;
    vec4 _t0C7D = [_t0C79, _t0C7A, _t0C7B, _t0C7C];
    real _t0C7E = 0.e0;
    real _t0C7F = 0.e0;
    real _t0C80 = 0.e0;
    real _t0C81 = 0.1e1;
    vec4 _t0C82 = [_t0C7E, _t0C7F, _t0C80, _t0C81];
    tensor[4,4] _t0C83 = [_t0C73, _t0C78, _t0C7D, _t0C82];
    tensor[4,4][6] _t0C84 = {_t0C1A, _t0C2F, _t0C44, _t0C59, _t0C6E, _t0C83};
    real _t0C85 = 0.1e1;
    real _t0C86 = 0.e0;
    real _t0C87 = 0.e0;
    real _t0C88 = 0.e0;
    vec4 _t0C89 = [_t0C85, _t0C86, _t0C87, _t0C88];
    real _t0C8A = 0.e0;
    real _t0C8B = 0.1e1;
    real _t0C8C = 0.e0;
    real _t0C8D = 0.e0;
    vec4 _t0C8E = [_t0C8A, _t0C8B, _t0C8C, _t0C8D];
    real _t0C8F = 0.e0;
    real _t0C90 = 0.e0;
    real _t0C91 = 0.1e1;
    real _t0C92 = -0.1e1;
    vec4 _t0C93 = [_t0C8F, _t0C90, _t0C91, _t0C92];
    real _t0C94 = 0.e0;
    real _t0C95 = 0.e0;
    real _t0C96 = 0.e0;
    real _t0C97 = 0.1e1;
    vec4 _t0C98 = [_t0C94, _t0C95, _t0C96, _t0C97];
    tensor[4,4] _t0C99 = [_t0C89, _t0C8E, _t0C93, _t0C98];
    real _t0C9A = 0.1e1;
    real _t0C9B = 0.e0;
    real _t0C9C = 0.e0;
    real _t0C9D = 0.e0;
    vec4 _t0C9E = [_t0C9A, _t0C9B, _t0C9C, _t0C9D];
    real _t0C9F = 0.e0;
    real _t0CA0 = 0.1e1;
    real _t0CA1 = 0.e0;
    real _t0CA2 = 0.e0;
    vec4 _t0CA3 = [_t0C9F, _t0CA0, _t0CA1, _t0CA2];
    real _t0CA4 = 0.e0;
    real _t0CA5 = 0.e0;
    real _t0CA6 = 0.1e1;
    real _t0CA7 = 0.e0;
    vec4 _t0CA8 = [_t0CA4, _t0CA5, _t0CA6, _t0CA7];
    real _t0CA9 = 0.e0;
    real _t0CAA = 0.e0;
    real _t0CAB = 0.e0;
    real _t0CAC = 0.1e1;
    vec4 _t0CAD = [_t0CA9, _t0CAA, _t0CAB, _t0CAC];
    tensor[4,4] _t0CAE = [_t0C9E, _t0CA3, _t0CA8, _t0CAD];
    real _t0CAF = 0.e0;
    real _t0CB0 = 0.1e1;
    real _t0CB1 = 0.e0;
    real _t0CB2 = 0.e0;
    vec4 _t0CB3 = [_t0CAF, _t0CB0, _t0CB1, _t0CB2];
    real _t0CB4 = 0.e0;
    real _t0CB5 = 0.e0;
    real _t0CB6 = 0.1e1;
    real _t0CB7 = -0.1e1;
    vec4 _t0CB8 = [_t0CB4, _t0CB5, _t0CB6, _t0CB7];
    real _t0CB9 = 0.1e1;
    real _t0CBA = -0.1e1;
    real _t0CBB = 0.e0;
    real _t0CBC = -0.5e0;
    vec4 _t0CBD = [_t0CB9, _t0CBA, _t0CBB, _t0CBC];
    real _t0CBE = 0.e0;
    real _t0CBF = 0.e0;
    real _t0CC0 = 0.e0;
    real _t0CC1 = 0.1e1;
    vec4 _t0CC2 = [_t0CBE, _t0CBF, _t0CC0, _t0CC1];
    tensor[4,4] _t0CC3 = [_t0CB3, _t0CB8, _t0CBD, _t0CC2];
    real _t0CC4 = 0.e0;
    real _t0CC5 = 0.e0;
    real _t0CC6 = -0.1e1;
    real _t0CC7 = 0.1e1;
    vec4 _t0CC8 = [_t0CC4, _t0CC5, _t0CC6, _t0CC7];
    real _t0CC9 = 0.e0;
    real _t0CCA = 0.1e1;
    real _t0CCB = 0.e0;
    real _t0CCC = 0.e0;
    vec4 _t0CCD = [_t0CC9, _t0CCA, _t0CCB, _t0CCC];
    real _t0CCE = 0.1e1;
    real _t0CCF = -0.1e1;
    real _t0CD0 = 0.e0;
    real _t0CD1 = -0.5e0;
    vec4 _t0CD2 = [_t0CCE, _t0CCF, _t0CD0, _t0CD1];
    real _t0CD3 = 0.e0;
    real _t0CD4 = 0.e0;
    real _t0CD5 = 0.e0;
    real _t0CD6 = 0.1e1;
    vec4 _t0CD7 = [_t0CD3, _t0CD4, _t0CD5, _t0CD6];
    tensor[4,4] _t0CD8 = [_t0CC8, _t0CCD, _t0CD2, _t0CD7];
    real _t0CD9 = 0.e0;
    real _t0CDA = -0.1e1;
    real _t0CDB = 0.e0;
    real _t0CDC = 0.e0;
    vec4 _t0CDD = [_t0CD9, _t0CDA, _t0CDB, _t0CDC];
    real _t0CDE = 0.e0;
    real _t0CDF = 0.e0;
    real _t0CE0 = -0.1e1;
    real _t0CE1 = 0.1e1;
    vec4 _t0CE2 = [_t0CDE, _t0CDF, _t0CE0, _t0CE1];
    real _t0CE3 = 0.1e1;
    real _t0CE4 = -0.1e1;
    real _t0CE5 = 0.e0;
    real _t0CE6 = -0.5e0;
    vec4 _t0CE7 = [_t0CE3, _t0CE4, _t0CE5, _t0CE6];
    real _t0CE8 = 0.e0;
    real _t0CE9 = 0.e0;
    real _t0CEA = 0.e0;
    real _t0CEB = 0.1e1;
    vec4 _t0CEC = [_t0CE8, _t0CE9, _t0CEA, _t0CEB];
    tensor[4,4] _t0CED = [_t0CDD, _t0CE2, _t0CE7, _t0CEC];
    real _t0CEE = 0.e0;
    real _t0CEF = 0.e0;
    real _t0CF0 = 0.1e1;
    real _t0CF1 = -0.1e1;
    vec4 _t0CF2 = [_t0CEE, _t0CEF, _t0CF0, _t0CF1];
    real _t0CF3 = 0.e0;
    real _t0CF4 = -0.1e1;
    real _t0CF5 = 0.e0;
    real _t0CF6 = 0.e0;
    vec4 _t0CF7 = [_t0CF3, _t0CF4, _t0CF5, _t0CF6];
    real _t0CF8 = 0.1e1;
    real _t0CF9 = -0.1e1;
    real _t0CFA = 0.e0;
    real _t0CFB = -0.5e0;
    vec4 _t0CFC = [_t0CF8, _t0CF9, _t0CFA, _t0CFB];
    real _t0CFD = 0.e0;
    real _t0CFE = 0.e0;
    real _t0CFF = 0.e0;
    real _t0D00 = 0.1e1;
    vec4 _t0D01 = [_t0CFD, _t0CFE, _t0CFF, _t0D00];
    tensor[4,4] _t0D02 = [_t0CF2, _t0CF7, _t0CFC, _t0D01];
    tensor[4,4][6] _t0D03 = {_t0C99, _t0CAE, _t0CC3, _t0CD8, _t0CED, _t0D02};
    real _t0D04 = 0.1e1;
    real _t0D05 = 0.e0;
    real _t0D06 = 0.1e1;
    real _t0D07 = 0.5e0;
    vec4 _t0D08 = [_t0D04, _t0D05, _t0D06, _t0D07];
    real _t0D09 = 0.1e1;
    real _t0D0A = 0.e0;
    real _t0D0B = 0.e0;
    real _t0D0C = 0.e0;
    vec4 _t0D0D = [_t0D09, _t0D0A, _t0D0B, _t0D0C];
    real _t0D0E = 0.e0;
    real _t0D0F = 0.1e1;
    real _t0D10 = 0.e0;
    real _t0D11 = 0.e0;
    vec4 _t0D12 = [_t0D0E, _t0D0F, _t0D10, _t0D11];
    real _t0D13 = 0.e0;
    real _t0D14 = 0.e0;
    real _t0D15 = 0.e0;
    real _t0D16 = 0.1e1;
    vec4 _t0D17 = [_t0D13, _t0D14, _t0D15, _t0D16];
    tensor[4,4] _t0D18 = [_t0D08, _t0D0D, _t0D12, _t0D17];
    real _t0D19 = 0.1e1;
    real _t0D1A = 0.e0;
    real _t0D1B = 0.1e1;
    real _t0D1C = 0.5e0;
    vec4 _t0D1D = [_t0D19, _t0D1A, _t0D1B, _t0D1C];
    real _t0D1E = 0.1e1;
    real _t0D1F = 0.e0;
    real _t0D20 = 0.e0;
    real _t0D21 = 0.e0;
    vec4 _t0D22 = [_t0D1E, _t0D1F, _t0D20, _t0D21];
    real _t0D23 = 0.e0;
    real _t0D24 = 0.1e1;
    real _t0D25 = 0.e0;
    real _t0D26 = 0.1e1;
    vec4 _t0D27 = [_t0D23, _t0D24, _t0D25, _t0D26];
    real _t0D28 = 0.e0;
    real _t0D29 = 0.e0;
    real _t0D2A = 0.e0;
    real _t0D2B = 0.1e1;
    vec4 _t0D2C = [_t0D28, _t0D29, _t0D2A, _t0D2B];
    tensor[4,4] _t0D2D = [_t0D1D, _t0D22, _t0D27, _t0D2C];
    real _t0D2E = 0.1e1;
    real _t0D2F = 0.e0;
    real _t0D30 = 0.e0;
    real _t0D31 = 0.e0;
    vec4 _t0D32 = [_t0D2E, _t0D2F, _t0D30, _t0D31];
    real _t0D33 = 0.e0;
    real _t0D34 = 0.1e1;
    real _t0D35 = 0.e0;
    real _t0D36 = 0.e0;
    vec4 _t0D37 = [_t0D33, _t0D34, _t0D35, _t0D36];
    real _t0D38 = 0.e0;
    real _t0D39 = 0.e0;
    real _t0D3A = 0.1e1;
    real _t0D3B = 0.e0;
    vec4 _t0D3C = [_t0D38, _t0D39, _t0D3A, _t0D3B];
    real _t0D3D = 0.e0;
    real _t0D3E = 0.e0;
    real _t0D3F = 0.e0;
    real _t0D40 = 0.1e1;
    vec4 _t0D41 = [_t0D3D, _t0D3E, _t0D3F, _t0D40];
    tensor[4,4] _t0D42 = [_t0D32, _t0D37, _t0D3C, _t0D41];
    real _t0D43 = 0.e0;
    real _t0D44 = -0.1e1;
    real _t0D45 = 0.e0;
    real _t0D46 = 0.e0;
    vec4 _t0D47 = [_t0D43, _t0D44, _t0D45, _t0D46];
    real _t0D48 = 0.1e1;
    real _t0D49 = 0.e0;
    real _t0D4A = 0.e0;
    real _t0D4B = 0.e0;
    vec4 _t0D4C = [_t0D48, _t0D49, _t0D4A, _t0D4B];
    real _t0D4D = 0.e0;
    real _t0D4E = 0.e0;
    real _t0D4F = 0.1e1;
    real _t0D50 = 0.e0;
    vec4 _t0D51 = [_t0D4D, _t0D4E, _t0D4F, _t0D50];
    real _t0D52 = 0.e0;
    real _t0D53 = 0.e0;
    real _t0D54 = 0.e0;
    real _t0D55 = 0.1e1;
    vec4 _t0D56 = [_t0D52, _t0D53, _t0D54, _t0D55];
    tensor[4,4] _t0D57 = [_t0D47, _t0D4C, _t0D51, _t0D56];
    real _t0D58 = -0.1e1;
    real _t0D59 = 0.e0;
    real _t0D5A = 0.e0;
    real _t0D5B = 0.e0;
    vec4 _t0D5C = [_t0D58, _t0D59, _t0D5A, _t0D5B];
    real _t0D5D = 0.e0;
    real _t0D5E = -0.1e1;
    real _t0D5F = 0.e0;
    real _t0D60 = 0.e0;
    vec4 _t0D61 = [_t0D5D, _t0D5E, _t0D5F, _t0D60];
    real _t0D62 = 0.e0;
    real _t0D63 = 0.e0;
    real _t0D64 = 0.1e1;
    real _t0D65 = 0.e0;
    vec4 _t0D66 = [_t0D62, _t0D63, _t0D64, _t0D65];
    real _t0D67 = 0.e0;
    real _t0D68 = 0.e0;
    real _t0D69 = 0.e0;
    real _t0D6A = 0.1e1;
    vec4 _t0D6B = [_t0D67, _t0D68, _t0D69, _t0D6A];
    tensor[4,4] _t0D6C = [_t0D5C, _t0D61, _t0D66, _t0D6B];
    real _t0D6D = 0.e0;
    real _t0D6E = 0.1e1;
    real _t0D6F = 0.e0;
    real _t0D70 = 0.e0;
    vec4 _t0D71 = [_t0D6D, _t0D6E, _t0D6F, _t0D70];
    real _t0D72 = -0.1e1;
    real _t0D73 = 0.e0;
    real _t0D74 = 0.e0;
    real _t0D75 = 0.e0;
    vec4 _t0D76 = [_t0D72, _t0D73, _t0D74, _t0D75];
    real _t0D77 = 0.e0;
    real _t0D78 = 0.e0;
    real _t0D79 = 0.1e1;
    real _t0D7A = 0.e0;
    vec4 _t0D7B = [_t0D77, _t0D78, _t0D79, _t0D7A];
    real _t0D7C = 0.e0;
    real _t0D7D = 0.e0;
    real _t0D7E = 0.e0;
    real _t0D7F = 0.1e1;
    vec4 _t0D80 = [_t0D7C, _t0D7D, _t0D7E, _t0D7F];
    tensor[4,4] _t0D81 = [_t0D71, _t0D76, _t0D7B, _t0D80];
    tensor[4,4][6] _t0D82 = {_t0D18, _t0D2D, _t0D42, _t0D57, _t0D6C, _t0D81};
    real _t0D83 = 0.e0;
    real _t0D84 = 0.1e1;
    real _t0D85 = 0.1e1;
    real _t0D86 = 0.5e0;
    vec4 _t0D87 = [_t0D83, _t0D84, _t0D85, _t0D86];
    real _t0D88 = 0.e0;
    real _t0D89 = 0.1e1;
    real _t0D8A = 0.e0;
    real _t0D8B = 0.e0;
    vec4 _t0D8C = [_t0D88, _t0D89, _t0D8A, _t0D8B];
    real _t0D8D = -0.1e1;
    real _t0D8E = 0.e0;
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    vec4 _t0D91 = [_t0D8D, _t0D8E, _t0D8F, _t0D90];
    real _t0D92 = 0.e0;
    real _t0D93 = 0.e0;
    real _t0D94 = 0.e0;
    real _t0D95 = 0.1e1;
    vec4 _t0D96 = [_t0D92, _t0D93, _t0D94, _t0D95];
    tensor[4,4] _t0D97 = [_t0D87, _t0D8C, _t0D91, _t0D96];
    real _t0D98 = 0.e0;
    real _t0D99 = 0.1e1;
    real _t0D9A = 0.1e1;
    real _t0D9B = 0.5e0;
    vec4 _t0D9C = [_t0D98, _t0D99, _t0D9A, _t0D9B];
    real _t0D9D = 0.e0;
    real _t0D9E = 0.1e1;
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.e0;
    vec4 _t0DA1 = [_t0D9D, _t0D9E, _t0D9F, _t0DA0];
    real _t0DA2 = -0.1e1;
    real _t0DA3 = 0.e0;
    real _t0DA4 = 0.e0;
    real _t0DA5 = 0.1e1;
    vec4 _t0DA6 = [_t0DA2, _t0DA3, _t0DA4, _t0DA5];
    real _t0DA7 = 0.e0;
    real _t0DA8 = 0.e0;
    real _t0DA9 = 0.e0;
    real _t0DAA = 0.1e1;
    vec4 _t0DAB = [_t0DA7, _t0DA8, _t0DA9, _t0DAA];
    tensor[4,4] _t0DAC = [_t0D9C, _t0DA1, _t0DA6, _t0DAB];
    real _t0DAD = 0.e0;
    real _t0DAE = 0.1e1;
    real _t0DAF = 0.e0;
    real _t0DB0 = 0.e0;
    vec4 _t0DB1 = [_t0DAD, _t0DAE, _t0DAF, _t0DB0];
    real _t0DB2 = -0.1e1;
    real _t0DB3 = 0.e0;
    real _t0DB4 = 0.e0;
    real _t0DB5 = 0.e0;
    vec4 _t0DB6 = [_t0DB2, _t0DB3, _t0DB4, _t0DB5];
    real _t0DB7 = 0.e0;
    real _t0DB8 = 0.e0;
    real _t0DB9 = 0.1e1;
    real _t0DBA = 0.e0;
    vec4 _t0DBB = [_t0DB7, _t0DB8, _t0DB9, _t0DBA];
    real _t0DBC = 0.e0;
    real _t0DBD = 0.e0;
    real _t0DBE = 0.e0;
    real _t0DBF = 0.1e1;
    vec4 _t0DC0 = [_t0DBC, _t0DBD, _t0DBE, _t0DBF];
    tensor[4,4] _t0DC1 = [_t0DB1, _t0DB6, _t0DBB, _t0DC0];
    real _t0DC2 = 0.1e1;
    real _t0DC3 = 0.e0;
    real _t0DC4 = 0.e0;
    real _t0DC5 = 0.e0;
    vec4 _t0DC6 = [_t0DC2, _t0DC3, _t0DC4, _t0DC5];
    real _t0DC7 = 0.e0;
    real _t0DC8 = 0.1e1;
    real _t0DC9 = 0.e0;
    real _t0DCA = 0.e0;
    vec4 _t0DCB = [_t0DC7, _t0DC8, _t0DC9, _t0DCA];
    real _t0DCC = 0.e0;
    real _t0DCD = 0.e0;
    real _t0DCE = 0.1e1;
    real _t0DCF = 0.e0;
    vec4 _t0DD0 = [_t0DCC, _t0DCD, _t0DCE, _t0DCF];
    real _t0DD1 = 0.e0;
    real _t0DD2 = 0.e0;
    real _t0DD3 = 0.e0;
    real _t0DD4 = 0.1e1;
    vec4 _t0DD5 = [_t0DD1, _t0DD2, _t0DD3, _t0DD4];
    tensor[4,4] _t0DD6 = [_t0DC6, _t0DCB, _t0DD0, _t0DD5];
    real _t0DD7 = 0.e0;
    real _t0DD8 = -0.1e1;
    real _t0DD9 = 0.e0;
    real _t0DDA = 0.e0;
    vec4 _t0DDB = [_t0DD7, _t0DD8, _t0DD9, _t0DDA];
    real _t0DDC = 0.1e1;
    real _t0DDD = 0.e0;
    real _t0DDE = 0.e0;
    real _t0DDF = 0.e0;
    vec4 _t0DE0 = [_t0DDC, _t0DDD, _t0DDE, _t0DDF];
    real _t0DE1 = 0.e0;
    real _t0DE2 = 0.e0;
    real _t0DE3 = 0.1e1;
    real _t0DE4 = 0.e0;
    vec4 _t0DE5 = [_t0DE1, _t0DE2, _t0DE3, _t0DE4];
    real _t0DE6 = 0.e0;
    real _t0DE7 = 0.e0;
    real _t0DE8 = 0.e0;
    real _t0DE9 = 0.1e1;
    vec4 _t0DEA = [_t0DE6, _t0DE7, _t0DE8, _t0DE9];
    tensor[4,4] _t0DEB = [_t0DDB, _t0DE0, _t0DE5, _t0DEA];
    real _t0DEC = -0.1e1;
    real _t0DED = 0.e0;
    real _t0DEE = 0.e0;
    real _t0DEF = 0.e0;
    vec4 _t0DF0 = [_t0DEC, _t0DED, _t0DEE, _t0DEF];
    real _t0DF1 = 0.e0;
    real _t0DF2 = -0.1e1;
    real _t0DF3 = 0.e0;
    real _t0DF4 = 0.e0;
    vec4 _t0DF5 = [_t0DF1, _t0DF2, _t0DF3, _t0DF4];
    real _t0DF6 = 0.e0;
    real _t0DF7 = 0.e0;
    real _t0DF8 = 0.1e1;
    real _t0DF9 = 0.e0;
    vec4 _t0DFA = [_t0DF6, _t0DF7, _t0DF8, _t0DF9];
    real _t0DFB = 0.e0;
    real _t0DFC = 0.e0;
    real _t0DFD = 0.e0;
    real _t0DFE = 0.1e1;
    vec4 _t0DFF = [_t0DFB, _t0DFC, _t0DFD, _t0DFE];
    tensor[4,4] _t0E00 = [_t0DF0, _t0DF5, _t0DFA, _t0DFF];
    tensor[4,4][6] _t0E01 = {_t0D97, _t0DAC, _t0DC1, _t0DD6, _t0DEB, _t0E00};
    real _t0E02 = -0.1e1;
    real _t0E03 = 0.e0;
    real _t0E04 = 0.1e1;
    real _t0E05 = 0.5e0;
    vec4 _t0E06 = [_t0E02, _t0E03, _t0E04, _t0E05];
    real _t0E07 = -0.1e1;
    real _t0E08 = 0.e0;
    real _t0E09 = 0.e0;
    real _t0E0A = 0.e0;
    vec4 _t0E0B = [_t0E07, _t0E08, _t0E09, _t0E0A];
    real _t0E0C = 0.e0;
    real _t0E0D = -0.1e1;
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    vec4 _t0E10 = [_t0E0C, _t0E0D, _t0E0E, _t0E0F];
    real _t0E11 = 0.e0;
    real _t0E12 = 0.e0;
    real _t0E13 = 0.e0;
    real _t0E14 = 0.1e1;
    vec4 _t0E15 = [_t0E11, _t0E12, _t0E13, _t0E14];
    tensor[4,4] _t0E16 = [_t0E06, _t0E0B, _t0E10, _t0E15];
    real _t0E17 = -0.1e1;
    real _t0E18 = 0.e0;
    real _t0E19 = 0.1e1;
    real _t0E1A = 0.5e0;
    vec4 _t0E1B = [_t0E17, _t0E18, _t0E19, _t0E1A];
    real _t0E1C = -0.1e1;
    real _t0E1D = 0.e0;
    real _t0E1E = 0.e0;
    real _t0E1F = 0.e0;
    vec4 _t0E20 = [_t0E1C, _t0E1D, _t0E1E, _t0E1F];
    real _t0E21 = 0.e0;
    real _t0E22 = -0.1e1;
    real _t0E23 = 0.e0;
    real _t0E24 = 0.1e1;
    vec4 _t0E25 = [_t0E21, _t0E22, _t0E23, _t0E24];
    real _t0E26 = 0.e0;
    real _t0E27 = 0.e0;
    real _t0E28 = 0.e0;
    real _t0E29 = 0.1e1;
    vec4 _t0E2A = [_t0E26, _t0E27, _t0E28, _t0E29];
    tensor[4,4] _t0E2B = [_t0E1B, _t0E20, _t0E25, _t0E2A];
    real _t0E2C = -0.1e1;
    real _t0E2D = 0.e0;
    real _t0E2E = 0.e0;
    real _t0E2F = 0.e0;
    vec4 _t0E30 = [_t0E2C, _t0E2D, _t0E2E, _t0E2F];
    real _t0E31 = 0.e0;
    real _t0E32 = -0.1e1;
    real _t0E33 = 0.e0;
    real _t0E34 = 0.e0;
    vec4 _t0E35 = [_t0E31, _t0E32, _t0E33, _t0E34];
    real _t0E36 = 0.e0;
    real _t0E37 = 0.e0;
    real _t0E38 = 0.1e1;
    real _t0E39 = 0.e0;
    vec4 _t0E3A = [_t0E36, _t0E37, _t0E38, _t0E39];
    real _t0E3B = 0.e0;
    real _t0E3C = 0.e0;
    real _t0E3D = 0.e0;
    real _t0E3E = 0.1e1;
    vec4 _t0E3F = [_t0E3B, _t0E3C, _t0E3D, _t0E3E];
    tensor[4,4] _t0E40 = [_t0E30, _t0E35, _t0E3A, _t0E3F];
    real _t0E41 = 0.e0;
    real _t0E42 = 0.1e1;
    real _t0E43 = 0.e0;
    real _t0E44 = 0.e0;
    vec4 _t0E45 = [_t0E41, _t0E42, _t0E43, _t0E44];
    real _t0E46 = -0.1e1;
    real _t0E47 = 0.e0;
    real _t0E48 = 0.e0;
    real _t0E49 = 0.e0;
    vec4 _t0E4A = [_t0E46, _t0E47, _t0E48, _t0E49];
    real _t0E4B = 0.e0;
    real _t0E4C = 0.e0;
    real _t0E4D = 0.1e1;
    real _t0E4E = 0.e0;
    vec4 _t0E4F = [_t0E4B, _t0E4C, _t0E4D, _t0E4E];
    real _t0E50 = 0.e0;
    real _t0E51 = 0.e0;
    real _t0E52 = 0.e0;
    real _t0E53 = 0.1e1;
    vec4 _t0E54 = [_t0E50, _t0E51, _t0E52, _t0E53];
    tensor[4,4] _t0E55 = [_t0E45, _t0E4A, _t0E4F, _t0E54];
    real _t0E56 = 0.1e1;
    real _t0E57 = 0.e0;
    real _t0E58 = 0.e0;
    real _t0E59 = 0.e0;
    vec4 _t0E5A = [_t0E56, _t0E57, _t0E58, _t0E59];
    real _t0E5B = 0.e0;
    real _t0E5C = 0.1e1;
    real _t0E5D = 0.e0;
    real _t0E5E = 0.e0;
    vec4 _t0E5F = [_t0E5B, _t0E5C, _t0E5D, _t0E5E];
    real _t0E60 = 0.e0;
    real _t0E61 = 0.e0;
    real _t0E62 = 0.1e1;
    real _t0E63 = 0.e0;
    vec4 _t0E64 = [_t0E60, _t0E61, _t0E62, _t0E63];
    real _t0E65 = 0.e0;
    real _t0E66 = 0.e0;
    real _t0E67 = 0.e0;
    real _t0E68 = 0.1e1;
    vec4 _t0E69 = [_t0E65, _t0E66, _t0E67, _t0E68];
    tensor[4,4] _t0E6A = [_t0E5A, _t0E5F, _t0E64, _t0E69];
    real _t0E6B = 0.e0;
    real _t0E6C = -0.1e1;
    real _t0E6D = 0.e0;
    real _t0E6E = 0.e0;
    vec4 _t0E6F = [_t0E6B, _t0E6C, _t0E6D, _t0E6E];
    real _t0E70 = 0.1e1;
    real _t0E71 = 0.e0;
    real _t0E72 = 0.e0;
    real _t0E73 = 0.e0;
    vec4 _t0E74 = [_t0E70, _t0E71, _t0E72, _t0E73];
    real _t0E75 = 0.e0;
    real _t0E76 = 0.e0;
    real _t0E77 = 0.1e1;
    real _t0E78 = 0.e0;
    vec4 _t0E79 = [_t0E75, _t0E76, _t0E77, _t0E78];
    real _t0E7A = 0.e0;
    real _t0E7B = 0.e0;
    real _t0E7C = 0.e0;
    real _t0E7D = 0.1e1;
    vec4 _t0E7E = [_t0E7A, _t0E7B, _t0E7C, _t0E7D];
    tensor[4,4] _t0E7F = [_t0E6F, _t0E74, _t0E79, _t0E7E];
    tensor[4,4][6] _t0E80 = {_t0E16, _t0E2B, _t0E40, _t0E55, _t0E6A, _t0E7F};
    real _t0E81 = 0.e0;
    real _t0E82 = -0.1e1;
    real _t0E83 = 0.1e1;
    real _t0E84 = 0.5e0;
    vec4 _t0E85 = [_t0E81, _t0E82, _t0E83, _t0E84];
    real _t0E86 = 0.e0;
    real _t0E87 = -0.1e1;
    real _t0E88 = 0.e0;
    real _t0E89 = 0.e0;
    vec4 _t0E8A = [_t0E86, _t0E87, _t0E88, _t0E89];
    real _t0E8B = 0.1e1;
    real _t0E8C = 0.e0;
    real _t0E8D = 0.e0;
    real _t0E8E = 0.e0;
    vec4 _t0E8F = [_t0E8B, _t0E8C, _t0E8D, _t0E8E];
    real _t0E90 = 0.e0;
    real _t0E91 = 0.e0;
    real _t0E92 = 0.e0;
    real _t0E93 = 0.1e1;
    vec4 _t0E94 = [_t0E90, _t0E91, _t0E92, _t0E93];
    tensor[4,4] _t0E95 = [_t0E85, _t0E8A, _t0E8F, _t0E94];
    real _t0E96 = 0.e0;
    real _t0E97 = -0.1e1;
    real _t0E98 = 0.1e1;
    real _t0E99 = 0.5e0;
    vec4 _t0E9A = [_t0E96, _t0E97, _t0E98, _t0E99];
    real _t0E9B = 0.e0;
    real _t0E9C = -0.1e1;
    real _t0E9D = 0.e0;
    real _t0E9E = 0.e0;
    vec4 _t0E9F = [_t0E9B, _t0E9C, _t0E9D, _t0E9E];
    real _t0EA0 = 0.1e1;
    real _t0EA1 = 0.e0;
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.1e1;
    vec4 _t0EA4 = [_t0EA0, _t0EA1, _t0EA2, _t0EA3];
    real _t0EA5 = 0.e0;
    real _t0EA6 = 0.e0;
    real _t0EA7 = 0.e0;
    real _t0EA8 = 0.1e1;
    vec4 _t0EA9 = [_t0EA5, _t0EA6, _t0EA7, _t0EA8];
    tensor[4,4] _t0EAA = [_t0E9A, _t0E9F, _t0EA4, _t0EA9];
    real _t0EAB = 0.e0;
    real _t0EAC = -0.1e1;
    real _t0EAD = 0.e0;
    real _t0EAE = 0.e0;
    vec4 _t0EAF = [_t0EAB, _t0EAC, _t0EAD, _t0EAE];
    real _t0EB0 = 0.1e1;
    real _t0EB1 = 0.e0;
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.e0;
    vec4 _t0EB4 = [_t0EB0, _t0EB1, _t0EB2, _t0EB3];
    real _t0EB5 = 0.e0;
    real _t0EB6 = 0.e0;
    real _t0EB7 = 0.1e1;
    real _t0EB8 = 0.e0;
    vec4 _t0EB9 = [_t0EB5, _t0EB6, _t0EB7, _t0EB8];
    real _t0EBA = 0.e0;
    real _t0EBB = 0.e0;
    real _t0EBC = 0.e0;
    real _t0EBD = 0.1e1;
    vec4 _t0EBE = [_t0EBA, _t0EBB, _t0EBC, _t0EBD];
    tensor[4,4] _t0EBF = [_t0EAF, _t0EB4, _t0EB9, _t0EBE];
    real _t0EC0 = -0.1e1;
    real _t0EC1 = 0.e0;
    real _t0EC2 = 0.e0;
    real _t0EC3 = 0.e0;
    vec4 _t0EC4 = [_t0EC0, _t0EC1, _t0EC2, _t0EC3];
    real _t0EC5 = 0.e0;
    real _t0EC6 = -0.1e1;
    real _t0EC7 = 0.e0;
    real _t0EC8 = 0.e0;
    vec4 _t0EC9 = [_t0EC5, _t0EC6, _t0EC7, _t0EC8];
    real _t0ECA = 0.e0;
    real _t0ECB = 0.e0;
    real _t0ECC = 0.1e1;
    real _t0ECD = 0.e0;
    vec4 _t0ECE = [_t0ECA, _t0ECB, _t0ECC, _t0ECD];
    real _t0ECF = 0.e0;
    real _t0ED0 = 0.e0;
    real _t0ED1 = 0.e0;
    real _t0ED2 = 0.1e1;
    vec4 _t0ED3 = [_t0ECF, _t0ED0, _t0ED1, _t0ED2];
    tensor[4,4] _t0ED4 = [_t0EC4, _t0EC9, _t0ECE, _t0ED3];
    real _t0ED5 = 0.e0;
    real _t0ED6 = 0.1e1;
    real _t0ED7 = 0.e0;
    real _t0ED8 = 0.e0;
    vec4 _t0ED9 = [_t0ED5, _t0ED6, _t0ED7, _t0ED8];
    real _t0EDA = -0.1e1;
    real _t0EDB = 0.e0;
    real _t0EDC = 0.e0;
    real _t0EDD = 0.e0;
    vec4 _t0EDE = [_t0EDA, _t0EDB, _t0EDC, _t0EDD];
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.e0;
    real _t0EE1 = 0.1e1;
    real _t0EE2 = 0.e0;
    vec4 _t0EE3 = [_t0EDF, _t0EE0, _t0EE1, _t0EE2];
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    real _t0EE6 = 0.e0;
    real _t0EE7 = 0.1e1;
    vec4 _t0EE8 = [_t0EE4, _t0EE5, _t0EE6, _t0EE7];
    tensor[4,4] _t0EE9 = [_t0ED9, _t0EDE, _t0EE3, _t0EE8];
    real _t0EEA = 0.1e1;
    real _t0EEB = 0.e0;
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    vec4 _t0EEE = [_t0EEA, _t0EEB, _t0EEC, _t0EED];
    real _t0EEF = 0.e0;
    real _t0EF0 = 0.1e1;
    real _t0EF1 = 0.e0;
    real _t0EF2 = 0.e0;
    vec4 _t0EF3 = [_t0EEF, _t0EF0, _t0EF1, _t0EF2];
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    real _t0EF6 = 0.1e1;
    real _t0EF7 = 0.e0;
    vec4 _t0EF8 = [_t0EF4, _t0EF5, _t0EF6, _t0EF7];
    real _t0EF9 = 0.e0;
    real _t0EFA = 0.e0;
    real _t0EFB = 0.e0;
    real _t0EFC = 0.1e1;
    vec4 _t0EFD = [_t0EF9, _t0EFA, _t0EFB, _t0EFC];
    tensor[4,4] _t0EFE = [_t0EEE, _t0EF3, _t0EF8, _t0EFD];
    tensor[4,4][6] _t0EFF = {_t0E95, _t0EAA, _t0EBF, _t0ED4, _t0EE9, _t0EFE};
    tensor[4,4][6][6] _t0F00 = {_t0C84, _t0D03, _t0D82, _t0E01, _t0E80, _t0EFF};
    real _t0F01 = time05D4[1];
    int _t0F02 = prim $r2i01B7 (_t0F01);
    tensor[4,4][6] _t0F03 = prim $sub01C0<tensor[4,4][6]; %6> (_t0F00, _t0F02);
    real _t0F04 = time05D4[1];
    int _t0F05 = prim $r2i01B7 (_t0F04);
    int[2] _t0F06 = func nextCell405D8 (_t0F05, cellId05D1, mesh05D0);
    int _t0F07 = 1;
    int _t0F08 = prim $sub01C0<int; %2> (_t0F06, _t0F07);
    tensor[4,4] _t0F09 = prim $sub01C0<tensor[4,4]; %6> (_t0F03, _t0F08);
    real _t0F0A = time05D4[0];
    vec3 _t0F0B = prim *0036<$[3]> (_t0F0A, dPos05D3);
    vec3 _t0F0C = prim +0017<$[3]> (_t0F0B, refPos05D2);
    real _t0F0D = _t0F0C[0];
    real _t0F0E = time05D4[0];
    vec3 _t0F0F = prim *0036<$[3]> (_t0F0E, dPos05D3);
    vec3 _t0F10 = prim +0017<$[3]> (_t0F0F, refPos05D2);
    real _t0F11 = _t0F10[1];
    real _t0F12 = time05D4[0];
    vec3 _t0F13 = prim *0036<$[3]> (_t0F12, dPos05D3);
    vec3 _t0F14 = prim +0017<$[3]> (_t0F13, refPos05D2);
    real _t0F15 = _t0F14[2];
    real _t0F16 = 0.1e1;
    vec4 _t0F17 = [_t0F0D, _t0F11, _t0F15, _t0F16];
    vec4 _t0F18 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0F09, _t0F17);
    real _t0F19 = _t0F18[1];
    real _t0F1A = 0.1e1;
    real _t0F1B = 0.e0;
    real _t0F1C = 0.e0;
    real _t0F1D = 0.e0;
    vec4 _t0F1E = [_t0F1A, _t0F1B, _t0F1C, _t0F1D];
    real _t0F1F = 0.e0;
    real _t0F20 = 0.1e1;
    real _t0F21 = 0.e0;
    real _t0F22 = 0.e0;
    vec4 _t0F23 = [_t0F1F, _t0F20, _t0F21, _t0F22];
    real _t0F24 = 0.e0;
    real _t0F25 = 0.e0;
    real _t0F26 = 0.1e1;
    real _t0F27 = 0.e0;
    vec4 _t0F28 = [_t0F24, _t0F25, _t0F26, _t0F27];
    real _t0F29 = 0.e0;
    real _t0F2A = 0.e0;
    real _t0F2B = 0.e0;
    real _t0F2C = 0.1e1;
    vec4 _t0F2D = [_t0F29, _t0F2A, _t0F2B, _t0F2C];
    tensor[4,4] _t0F2E = [_t0F1E, _t0F23, _t0F28, _t0F2D];
    real _t0F2F = 0.1e1;
    real _t0F30 = 0.e0;
    real _t0F31 = 0.e0;
    real _t0F32 = 0.e0;
    vec4 _t0F33 = [_t0F2F, _t0F30, _t0F31, _t0F32];
    real _t0F34 = 0.e0;
    real _t0F35 = 0.1e1;
    real _t0F36 = 0.e0;
    real _t0F37 = 0.e0;
    vec4 _t0F38 = [_t0F34, _t0F35, _t0F36, _t0F37];
    real _t0F39 = 0.e0;
    real _t0F3A = 0.e0;
    real _t0F3B = 0.1e1;
    real _t0F3C = 0.1e1;
    vec4 _t0F3D = [_t0F39, _t0F3A, _t0F3B, _t0F3C];
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    real _t0F40 = 0.e0;
    real _t0F41 = 0.1e1;
    vec4 _t0F42 = [_t0F3E, _t0F3F, _t0F40, _t0F41];
    tensor[4,4] _t0F43 = [_t0F33, _t0F38, _t0F3D, _t0F42];
    real _t0F44 = 0.e0;
    real _t0F45 = 0.1e1;
    real _t0F46 = 0.e0;
    real _t0F47 = 0.e0;
    vec4 _t0F48 = [_t0F44, _t0F45, _t0F46, _t0F47];
    real _t0F49 = 0.e0;
    real _t0F4A = 0.e0;
    real _t0F4B = 0.1e1;
    real _t0F4C = 0.e0;
    vec4 _t0F4D = [_t0F49, _t0F4A, _t0F4B, _t0F4C];
    real _t0F4E = 0.1e1;
    real _t0F4F = -0.1e1;
    real _t0F50 = 0.e0;
    real _t0F51 = -0.5e0;
    vec4 _t0F52 = [_t0F4E, _t0F4F, _t0F50, _t0F51];
    real _t0F53 = 0.e0;
    real _t0F54 = 0.e0;
    real _t0F55 = 0.e0;
    real _t0F56 = 0.1e1;
    vec4 _t0F57 = [_t0F53, _t0F54, _t0F55, _t0F56];
    tensor[4,4] _t0F58 = [_t0F48, _t0F4D, _t0F52, _t0F57];
    real _t0F59 = 0.e0;
    real _t0F5A = 0.e0;
    real _t0F5B = -0.1e1;
    real _t0F5C = 0.e0;
    vec4 _t0F5D = [_t0F59, _t0F5A, _t0F5B, _t0F5C];
    real _t0F5E = 0.e0;
    real _t0F5F = 0.1e1;
    real _t0F60 = 0.e0;
    real _t0F61 = 0.e0;
    vec4 _t0F62 = [_t0F5E, _t0F5F, _t0F60, _t0F61];
    real _t0F63 = 0.1e1;
    real _t0F64 = -0.1e1;
    real _t0F65 = 0.e0;
    real _t0F66 = -0.5e0;
    vec4 _t0F67 = [_t0F63, _t0F64, _t0F65, _t0F66];
    real _t0F68 = 0.e0;
    real _t0F69 = 0.e0;
    real _t0F6A = 0.e0;
    real _t0F6B = 0.1e1;
    vec4 _t0F6C = [_t0F68, _t0F69, _t0F6A, _t0F6B];
    tensor[4,4] _t0F6D = [_t0F5D, _t0F62, _t0F67, _t0F6C];
    real _t0F6E = 0.e0;
    real _t0F6F = -0.1e1;
    real _t0F70 = 0.e0;
    real _t0F71 = 0.e0;
    vec4 _t0F72 = [_t0F6E, _t0F6F, _t0F70, _t0F71];
    real _t0F73 = 0.e0;
    real _t0F74 = 0.e0;
    real _t0F75 = -0.1e1;
    real _t0F76 = 0.e0;
    vec4 _t0F77 = [_t0F73, _t0F74, _t0F75, _t0F76];
    real _t0F78 = 0.1e1;
    real _t0F79 = -0.1e1;
    real _t0F7A = 0.e0;
    real _t0F7B = -0.5e0;
    vec4 _t0F7C = [_t0F78, _t0F79, _t0F7A, _t0F7B];
    real _t0F7D = 0.e0;
    real _t0F7E = 0.e0;
    real _t0F7F = 0.e0;
    real _t0F80 = 0.1e1;
    vec4 _t0F81 = [_t0F7D, _t0F7E, _t0F7F, _t0F80];
    tensor[4,4] _t0F82 = [_t0F72, _t0F77, _t0F7C, _t0F81];
    real _t0F83 = 0.e0;
    real _t0F84 = 0.e0;
    real _t0F85 = 0.1e1;
    real _t0F86 = 0.e0;
    vec4 _t0F87 = [_t0F83, _t0F84, _t0F85, _t0F86];
    real _t0F88 = 0.e0;
    real _t0F89 = -0.1e1;
    real _t0F8A = 0.e0;
    real _t0F8B = 0.e0;
    vec4 _t0F8C = [_t0F88, _t0F89, _t0F8A, _t0F8B];
    real _t0F8D = 0.1e1;
    real _t0F8E = -0.1e1;
    real _t0F8F = 0.e0;
    real _t0F90 = -0.5e0;
    vec4 _t0F91 = [_t0F8D, _t0F8E, _t0F8F, _t0F90];
    real _t0F92 = 0.e0;
    real _t0F93 = 0.e0;
    real _t0F94 = 0.e0;
    real _t0F95 = 0.1e1;
    vec4 _t0F96 = [_t0F92, _t0F93, _t0F94, _t0F95];
    tensor[4,4] _t0F97 = [_t0F87, _t0F8C, _t0F91, _t0F96];
    tensor[4,4][6] _t0F98 = {_t0F2E, _t0F43, _t0F58, _t0F6D, _t0F82, _t0F97};
    real _t0F99 = 0.1e1;
    real _t0F9A = 0.e0;
    real _t0F9B = 0.e0;
    real _t0F9C = 0.e0;
    vec4 _t0F9D = [_t0F99, _t0F9A, _t0F9B, _t0F9C];
    real _t0F9E = 0.e0;
    real _t0F9F = 0.1e1;
    real _t0FA0 = 0.e0;
    real _t0FA1 = 0.e0;
    vec4 _t0FA2 = [_t0F9E, _t0F9F, _t0FA0, _t0FA1];
    real _t0FA3 = 0.e0;
    real _t0FA4 = 0.e0;
    real _t0FA5 = 0.1e1;
    real _t0FA6 = -0.1e1;
    vec4 _t0FA7 = [_t0FA3, _t0FA4, _t0FA5, _t0FA6];
    real _t0FA8 = 0.e0;
    real _t0FA9 = 0.e0;
    real _t0FAA = 0.e0;
    real _t0FAB = 0.1e1;
    vec4 _t0FAC = [_t0FA8, _t0FA9, _t0FAA, _t0FAB];
    tensor[4,4] _t0FAD = [_t0F9D, _t0FA2, _t0FA7, _t0FAC];
    real _t0FAE = 0.1e1;
    real _t0FAF = 0.e0;
    real _t0FB0 = 0.e0;
    real _t0FB1 = 0.e0;
    vec4 _t0FB2 = [_t0FAE, _t0FAF, _t0FB0, _t0FB1];
    real _t0FB3 = 0.e0;
    real _t0FB4 = 0.1e1;
    real _t0FB5 = 0.e0;
    real _t0FB6 = 0.e0;
    vec4 _t0FB7 = [_t0FB3, _t0FB4, _t0FB5, _t0FB6];
    real _t0FB8 = 0.e0;
    real _t0FB9 = 0.e0;
    real _t0FBA = 0.1e1;
    real _t0FBB = 0.e0;
    vec4 _t0FBC = [_t0FB8, _t0FB9, _t0FBA, _t0FBB];
    real _t0FBD = 0.e0;
    real _t0FBE = 0.e0;
    real _t0FBF = 0.e0;
    real _t0FC0 = 0.1e1;
    vec4 _t0FC1 = [_t0FBD, _t0FBE, _t0FBF, _t0FC0];
    tensor[4,4] _t0FC2 = [_t0FB2, _t0FB7, _t0FBC, _t0FC1];
    real _t0FC3 = 0.e0;
    real _t0FC4 = 0.1e1;
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    vec4 _t0FC7 = [_t0FC3, _t0FC4, _t0FC5, _t0FC6];
    real _t0FC8 = 0.e0;
    real _t0FC9 = 0.e0;
    real _t0FCA = 0.1e1;
    real _t0FCB = -0.1e1;
    vec4 _t0FCC = [_t0FC8, _t0FC9, _t0FCA, _t0FCB];
    real _t0FCD = 0.1e1;
    real _t0FCE = -0.1e1;
    real _t0FCF = 0.e0;
    real _t0FD0 = -0.5e0;
    vec4 _t0FD1 = [_t0FCD, _t0FCE, _t0FCF, _t0FD0];
    real _t0FD2 = 0.e0;
    real _t0FD3 = 0.e0;
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.1e1;
    vec4 _t0FD6 = [_t0FD2, _t0FD3, _t0FD4, _t0FD5];
    tensor[4,4] _t0FD7 = [_t0FC7, _t0FCC, _t0FD1, _t0FD6];
    real _t0FD8 = 0.e0;
    real _t0FD9 = 0.e0;
    real _t0FDA = -0.1e1;
    real _t0FDB = 0.1e1;
    vec4 _t0FDC = [_t0FD8, _t0FD9, _t0FDA, _t0FDB];
    real _t0FDD = 0.e0;
    real _t0FDE = 0.1e1;
    real _t0FDF = 0.e0;
    real _t0FE0 = 0.e0;
    vec4 _t0FE1 = [_t0FDD, _t0FDE, _t0FDF, _t0FE0];
    real _t0FE2 = 0.1e1;
    real _t0FE3 = -0.1e1;
    real _t0FE4 = 0.e0;
    real _t0FE5 = -0.5e0;
    vec4 _t0FE6 = [_t0FE2, _t0FE3, _t0FE4, _t0FE5];
    real _t0FE7 = 0.e0;
    real _t0FE8 = 0.e0;
    real _t0FE9 = 0.e0;
    real _t0FEA = 0.1e1;
    vec4 _t0FEB = [_t0FE7, _t0FE8, _t0FE9, _t0FEA];
    tensor[4,4] _t0FEC = [_t0FDC, _t0FE1, _t0FE6, _t0FEB];
    real _t0FED = 0.e0;
    real _t0FEE = -0.1e1;
    real _t0FEF = 0.e0;
    real _t0FF0 = 0.e0;
    vec4 _t0FF1 = [_t0FED, _t0FEE, _t0FEF, _t0FF0];
    real _t0FF2 = 0.e0;
    real _t0FF3 = 0.e0;
    real _t0FF4 = -0.1e1;
    real _t0FF5 = 0.1e1;
    vec4 _t0FF6 = [_t0FF2, _t0FF3, _t0FF4, _t0FF5];
    real _t0FF7 = 0.1e1;
    real _t0FF8 = -0.1e1;
    real _t0FF9 = 0.e0;
    real _t0FFA = -0.5e0;
    vec4 _t0FFB = [_t0FF7, _t0FF8, _t0FF9, _t0FFA];
    real _t0FFC = 0.e0;
    real _t0FFD = 0.e0;
    real _t0FFE = 0.e0;
    real _t0FFF = 0.1e1;
    vec4 _t1000 = [_t0FFC, _t0FFD, _t0FFE, _t0FFF];
    tensor[4,4] _t1001 = [_t0FF1, _t0FF6, _t0FFB, _t1000];
    real _t1002 = 0.e0;
    real _t1003 = 0.e0;
    real _t1004 = 0.1e1;
    real _t1005 = -0.1e1;
    vec4 _t1006 = [_t1002, _t1003, _t1004, _t1005];
    real _t1007 = 0.e0;
    real _t1008 = -0.1e1;
    real _t1009 = 0.e0;
    real _t100A = 0.e0;
    vec4 _t100B = [_t1007, _t1008, _t1009, _t100A];
    real _t100C = 0.1e1;
    real _t100D = -0.1e1;
    real _t100E = 0.e0;
    real _t100F = -0.5e0;
    vec4 _t1010 = [_t100C, _t100D, _t100E, _t100F];
    real _t1011 = 0.e0;
    real _t1012 = 0.e0;
    real _t1013 = 0.e0;
    real _t1014 = 0.1e1;
    vec4 _t1015 = [_t1011, _t1012, _t1013, _t1014];
    tensor[4,4] _t1016 = [_t1006, _t100B, _t1010, _t1015];
    tensor[4,4][6] _t1017 = {_t0FAD, _t0FC2, _t0FD7, _t0FEC, _t1001, _t1016};
    real _t1018 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.1e1;
    real _t101B = 0.5e0;
    vec4 _t101C = [_t1018, _t1019, _t101A, _t101B];
    real _t101D = 0.1e1;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    vec4 _t1021 = [_t101D, _t101E, _t101F, _t1020];
    real _t1022 = 0.e0;
    real _t1023 = 0.1e1;
    real _t1024 = 0.e0;
    real _t1025 = 0.e0;
    vec4 _t1026 = [_t1022, _t1023, _t1024, _t1025];
    real _t1027 = 0.e0;
    real _t1028 = 0.e0;
    real _t1029 = 0.e0;
    real _t102A = 0.1e1;
    vec4 _t102B = [_t1027, _t1028, _t1029, _t102A];
    tensor[4,4] _t102C = [_t101C, _t1021, _t1026, _t102B];
    real _t102D = 0.1e1;
    real _t102E = 0.e0;
    real _t102F = 0.1e1;
    real _t1030 = 0.5e0;
    vec4 _t1031 = [_t102D, _t102E, _t102F, _t1030];
    real _t1032 = 0.1e1;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    real _t1035 = 0.e0;
    vec4 _t1036 = [_t1032, _t1033, _t1034, _t1035];
    real _t1037 = 0.e0;
    real _t1038 = 0.1e1;
    real _t1039 = 0.e0;
    real _t103A = 0.1e1;
    vec4 _t103B = [_t1037, _t1038, _t1039, _t103A];
    real _t103C = 0.e0;
    real _t103D = 0.e0;
    real _t103E = 0.e0;
    real _t103F = 0.1e1;
    vec4 _t1040 = [_t103C, _t103D, _t103E, _t103F];
    tensor[4,4] _t1041 = [_t1031, _t1036, _t103B, _t1040];
    real _t1042 = 0.1e1;
    real _t1043 = 0.e0;
    real _t1044 = 0.e0;
    real _t1045 = 0.e0;
    vec4 _t1046 = [_t1042, _t1043, _t1044, _t1045];
    real _t1047 = 0.e0;
    real _t1048 = 0.1e1;
    real _t1049 = 0.e0;
    real _t104A = 0.e0;
    vec4 _t104B = [_t1047, _t1048, _t1049, _t104A];
    real _t104C = 0.e0;
    real _t104D = 0.e0;
    real _t104E = 0.1e1;
    real _t104F = 0.e0;
    vec4 _t1050 = [_t104C, _t104D, _t104E, _t104F];
    real _t1051 = 0.e0;
    real _t1052 = 0.e0;
    real _t1053 = 0.e0;
    real _t1054 = 0.1e1;
    vec4 _t1055 = [_t1051, _t1052, _t1053, _t1054];
    tensor[4,4] _t1056 = [_t1046, _t104B, _t1050, _t1055];
    real _t1057 = 0.e0;
    real _t1058 = -0.1e1;
    real _t1059 = 0.e0;
    real _t105A = 0.e0;
    vec4 _t105B = [_t1057, _t1058, _t1059, _t105A];
    real _t105C = 0.1e1;
    real _t105D = 0.e0;
    real _t105E = 0.e0;
    real _t105F = 0.e0;
    vec4 _t1060 = [_t105C, _t105D, _t105E, _t105F];
    real _t1061 = 0.e0;
    real _t1062 = 0.e0;
    real _t1063 = 0.1e1;
    real _t1064 = 0.e0;
    vec4 _t1065 = [_t1061, _t1062, _t1063, _t1064];
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    real _t1068 = 0.e0;
    real _t1069 = 0.1e1;
    vec4 _t106A = [_t1066, _t1067, _t1068, _t1069];
    tensor[4,4] _t106B = [_t105B, _t1060, _t1065, _t106A];
    real _t106C = -0.1e1;
    real _t106D = 0.e0;
    real _t106E = 0.e0;
    real _t106F = 0.e0;
    vec4 _t1070 = [_t106C, _t106D, _t106E, _t106F];
    real _t1071 = 0.e0;
    real _t1072 = -0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
    real _t1076 = 0.e0;
    real _t1077 = 0.e0;
    real _t1078 = 0.1e1;
    real _t1079 = 0.e0;
    vec4 _t107A = [_t1076, _t1077, _t1078, _t1079];
    real _t107B = 0.e0;
    real _t107C = 0.e0;
    real _t107D = 0.e0;
    real _t107E = 0.1e1;
    vec4 _t107F = [_t107B, _t107C, _t107D, _t107E];
    tensor[4,4] _t1080 = [_t1070, _t1075, _t107A, _t107F];
    real _t1081 = 0.e0;
    real _t1082 = 0.1e1;
    real _t1083 = 0.e0;
    real _t1084 = 0.e0;
    vec4 _t1085 = [_t1081, _t1082, _t1083, _t1084];
    real _t1086 = -0.1e1;
    real _t1087 = 0.e0;
    real _t1088 = 0.e0;
    real _t1089 = 0.e0;
    vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
    real _t108B = 0.e0;
    real _t108C = 0.e0;
    real _t108D = 0.1e1;
    real _t108E = 0.e0;
    vec4 _t108F = [_t108B, _t108C, _t108D, _t108E];
    real _t1090 = 0.e0;
    real _t1091 = 0.e0;
    real _t1092 = 0.e0;
    real _t1093 = 0.1e1;
    vec4 _t1094 = [_t1090, _t1091, _t1092, _t1093];
    tensor[4,4] _t1095 = [_t1085, _t108A, _t108F, _t1094];
    tensor[4,4][6] _t1096 = {_t102C, _t1041, _t1056, _t106B, _t1080, _t1095};
    real _t1097 = 0.e0;
    real _t1098 = 0.1e1;
    real _t1099 = 0.1e1;
    real _t109A = 0.5e0;
    vec4 _t109B = [_t1097, _t1098, _t1099, _t109A];
    real _t109C = 0.e0;
    real _t109D = 0.1e1;
    real _t109E = 0.e0;
    real _t109F = 0.e0;
    vec4 _t10A0 = [_t109C, _t109D, _t109E, _t109F];
    real _t10A1 = -0.1e1;
    real _t10A2 = 0.e0;
    real _t10A3 = 0.e0;
    real _t10A4 = 0.e0;
    vec4 _t10A5 = [_t10A1, _t10A2, _t10A3, _t10A4];
    real _t10A6 = 0.e0;
    real _t10A7 = 0.e0;
    real _t10A8 = 0.e0;
    real _t10A9 = 0.1e1;
    vec4 _t10AA = [_t10A6, _t10A7, _t10A8, _t10A9];
    tensor[4,4] _t10AB = [_t109B, _t10A0, _t10A5, _t10AA];
    real _t10AC = 0.e0;
    real _t10AD = 0.1e1;
    real _t10AE = 0.1e1;
    real _t10AF = 0.5e0;
    vec4 _t10B0 = [_t10AC, _t10AD, _t10AE, _t10AF];
    real _t10B1 = 0.e0;
    real _t10B2 = 0.1e1;
    real _t10B3 = 0.e0;
    real _t10B4 = 0.e0;
    vec4 _t10B5 = [_t10B1, _t10B2, _t10B3, _t10B4];
    real _t10B6 = -0.1e1;
    real _t10B7 = 0.e0;
    real _t10B8 = 0.e0;
    real _t10B9 = 0.1e1;
    vec4 _t10BA = [_t10B6, _t10B7, _t10B8, _t10B9];
    real _t10BB = 0.e0;
    real _t10BC = 0.e0;
    real _t10BD = 0.e0;
    real _t10BE = 0.1e1;
    vec4 _t10BF = [_t10BB, _t10BC, _t10BD, _t10BE];
    tensor[4,4] _t10C0 = [_t10B0, _t10B5, _t10BA, _t10BF];
    real _t10C1 = 0.e0;
    real _t10C2 = 0.1e1;
    real _t10C3 = 0.e0;
    real _t10C4 = 0.e0;
    vec4 _t10C5 = [_t10C1, _t10C2, _t10C3, _t10C4];
    real _t10C6 = -0.1e1;
    real _t10C7 = 0.e0;
    real _t10C8 = 0.e0;
    real _t10C9 = 0.e0;
    vec4 _t10CA = [_t10C6, _t10C7, _t10C8, _t10C9];
    real _t10CB = 0.e0;
    real _t10CC = 0.e0;
    real _t10CD = 0.1e1;
    real _t10CE = 0.e0;
    vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
    real _t10D0 = 0.e0;
    real _t10D1 = 0.e0;
    real _t10D2 = 0.e0;
    real _t10D3 = 0.1e1;
    vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
    tensor[4,4] _t10D5 = [_t10C5, _t10CA, _t10CF, _t10D4];
    real _t10D6 = 0.1e1;
    real _t10D7 = 0.e0;
    real _t10D8 = 0.e0;
    real _t10D9 = 0.e0;
    vec4 _t10DA = [_t10D6, _t10D7, _t10D8, _t10D9];
    real _t10DB = 0.e0;
    real _t10DC = 0.1e1;
    real _t10DD = 0.e0;
    real _t10DE = 0.e0;
    vec4 _t10DF = [_t10DB, _t10DC, _t10DD, _t10DE];
    real _t10E0 = 0.e0;
    real _t10E1 = 0.e0;
    real _t10E2 = 0.1e1;
    real _t10E3 = 0.e0;
    vec4 _t10E4 = [_t10E0, _t10E1, _t10E2, _t10E3];
    real _t10E5 = 0.e0;
    real _t10E6 = 0.e0;
    real _t10E7 = 0.e0;
    real _t10E8 = 0.1e1;
    vec4 _t10E9 = [_t10E5, _t10E6, _t10E7, _t10E8];
    tensor[4,4] _t10EA = [_t10DA, _t10DF, _t10E4, _t10E9];
    real _t10EB = 0.e0;
    real _t10EC = -0.1e1;
    real _t10ED = 0.e0;
    real _t10EE = 0.e0;
    vec4 _t10EF = [_t10EB, _t10EC, _t10ED, _t10EE];
    real _t10F0 = 0.1e1;
    real _t10F1 = 0.e0;
    real _t10F2 = 0.e0;
    real _t10F3 = 0.e0;
    vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
    real _t10F5 = 0.e0;
    real _t10F6 = 0.e0;
    real _t10F7 = 0.1e1;
    real _t10F8 = 0.e0;
    vec4 _t10F9 = [_t10F5, _t10F6, _t10F7, _t10F8];
    real _t10FA = 0.e0;
    real _t10FB = 0.e0;
    real _t10FC = 0.e0;
    real _t10FD = 0.1e1;
    vec4 _t10FE = [_t10FA, _t10FB, _t10FC, _t10FD];
    tensor[4,4] _t10FF = [_t10EF, _t10F4, _t10F9, _t10FE];
    real _t1100 = -0.1e1;
    real _t1101 = 0.e0;
    real _t1102 = 0.e0;
    real _t1103 = 0.e0;
    vec4 _t1104 = [_t1100, _t1101, _t1102, _t1103];
    real _t1105 = 0.e0;
    real _t1106 = -0.1e1;
    real _t1107 = 0.e0;
    real _t1108 = 0.e0;
    vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
    real _t110A = 0.e0;
    real _t110B = 0.e0;
    real _t110C = 0.1e1;
    real _t110D = 0.e0;
    vec4 _t110E = [_t110A, _t110B, _t110C, _t110D];
    real _t110F = 0.e0;
    real _t1110 = 0.e0;
    real _t1111 = 0.e0;
    real _t1112 = 0.1e1;
    vec4 _t1113 = [_t110F, _t1110, _t1111, _t1112];
    tensor[4,4] _t1114 = [_t1104, _t1109, _t110E, _t1113];
    tensor[4,4][6] _t1115 = {_t10AB, _t10C0, _t10D5, _t10EA, _t10FF, _t1114};
    real _t1116 = -0.1e1;
    real _t1117 = 0.e0;
    real _t1118 = 0.1e1;
    real _t1119 = 0.5e0;
    vec4 _t111A = [_t1116, _t1117, _t1118, _t1119];
    real _t111B = -0.1e1;
    real _t111C = 0.e0;
    real _t111D = 0.e0;
    real _t111E = 0.e0;
    vec4 _t111F = [_t111B, _t111C, _t111D, _t111E];
    real _t1120 = 0.e0;
    real _t1121 = -0.1e1;
    real _t1122 = 0.e0;
    real _t1123 = 0.e0;
    vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
    real _t1125 = 0.e0;
    real _t1126 = 0.e0;
    real _t1127 = 0.e0;
    real _t1128 = 0.1e1;
    vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
    tensor[4,4] _t112A = [_t111A, _t111F, _t1124, _t1129];
    real _t112B = -0.1e1;
    real _t112C = 0.e0;
    real _t112D = 0.1e1;
    real _t112E = 0.5e0;
    vec4 _t112F = [_t112B, _t112C, _t112D, _t112E];
    real _t1130 = -0.1e1;
    real _t1131 = 0.e0;
    real _t1132 = 0.e0;
    real _t1133 = 0.e0;
    vec4 _t1134 = [_t1130, _t1131, _t1132, _t1133];
    real _t1135 = 0.e0;
    real _t1136 = -0.1e1;
    real _t1137 = 0.e0;
    real _t1138 = 0.1e1;
    vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
    real _t113A = 0.e0;
    real _t113B = 0.e0;
    real _t113C = 0.e0;
    real _t113D = 0.1e1;
    vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
    tensor[4,4] _t113F = [_t112F, _t1134, _t1139, _t113E];
    real _t1140 = -0.1e1;
    real _t1141 = 0.e0;
    real _t1142 = 0.e0;
    real _t1143 = 0.e0;
    vec4 _t1144 = [_t1140, _t1141, _t1142, _t1143];
    real _t1145 = 0.e0;
    real _t1146 = -0.1e1;
    real _t1147 = 0.e0;
    real _t1148 = 0.e0;
    vec4 _t1149 = [_t1145, _t1146, _t1147, _t1148];
    real _t114A = 0.e0;
    real _t114B = 0.e0;
    real _t114C = 0.1e1;
    real _t114D = 0.e0;
    vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
    real _t114F = 0.e0;
    real _t1150 = 0.e0;
    real _t1151 = 0.e0;
    real _t1152 = 0.1e1;
    vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
    tensor[4,4] _t1154 = [_t1144, _t1149, _t114E, _t1153];
    real _t1155 = 0.e0;
    real _t1156 = 0.1e1;
    real _t1157 = 0.e0;
    real _t1158 = 0.e0;
    vec4 _t1159 = [_t1155, _t1156, _t1157, _t1158];
    real _t115A = -0.1e1;
    real _t115B = 0.e0;
    real _t115C = 0.e0;
    real _t115D = 0.e0;
    vec4 _t115E = [_t115A, _t115B, _t115C, _t115D];
    real _t115F = 0.e0;
    real _t1160 = 0.e0;
    real _t1161 = 0.1e1;
    real _t1162 = 0.e0;
    vec4 _t1163 = [_t115F, _t1160, _t1161, _t1162];
    real _t1164 = 0.e0;
    real _t1165 = 0.e0;
    real _t1166 = 0.e0;
    real _t1167 = 0.1e1;
    vec4 _t1168 = [_t1164, _t1165, _t1166, _t1167];
    tensor[4,4] _t1169 = [_t1159, _t115E, _t1163, _t1168];
    real _t116A = 0.1e1;
    real _t116B = 0.e0;
    real _t116C = 0.e0;
    real _t116D = 0.e0;
    vec4 _t116E = [_t116A, _t116B, _t116C, _t116D];
    real _t116F = 0.e0;
    real _t1170 = 0.1e1;
    real _t1171 = 0.e0;
    real _t1172 = 0.e0;
    vec4 _t1173 = [_t116F, _t1170, _t1171, _t1172];
    real _t1174 = 0.e0;
    real _t1175 = 0.e0;
    real _t1176 = 0.1e1;
    real _t1177 = 0.e0;
    vec4 _t1178 = [_t1174, _t1175, _t1176, _t1177];
    real _t1179 = 0.e0;
    real _t117A = 0.e0;
    real _t117B = 0.e0;
    real _t117C = 0.1e1;
    vec4 _t117D = [_t1179, _t117A, _t117B, _t117C];
    tensor[4,4] _t117E = [_t116E, _t1173, _t1178, _t117D];
    real _t117F = 0.e0;
    real _t1180 = -0.1e1;
    real _t1181 = 0.e0;
    real _t1182 = 0.e0;
    vec4 _t1183 = [_t117F, _t1180, _t1181, _t1182];
    real _t1184 = 0.1e1;
    real _t1185 = 0.e0;
    real _t1186 = 0.e0;
    real _t1187 = 0.e0;
    vec4 _t1188 = [_t1184, _t1185, _t1186, _t1187];
    real _t1189 = 0.e0;
    real _t118A = 0.e0;
    real _t118B = 0.1e1;
    real _t118C = 0.e0;
    vec4 _t118D = [_t1189, _t118A, _t118B, _t118C];
    real _t118E = 0.e0;
    real _t118F = 0.e0;
    real _t1190 = 0.e0;
    real _t1191 = 0.1e1;
    vec4 _t1192 = [_t118E, _t118F, _t1190, _t1191];
    tensor[4,4] _t1193 = [_t1183, _t1188, _t118D, _t1192];
    tensor[4,4][6] _t1194 = {_t112A, _t113F, _t1154, _t1169, _t117E, _t1193};
    real _t1195 = 0.e0;
    real _t1196 = -0.1e1;
    real _t1197 = 0.1e1;
    real _t1198 = 0.5e0;
    vec4 _t1199 = [_t1195, _t1196, _t1197, _t1198];
    real _t119A = 0.e0;
    real _t119B = -0.1e1;
    real _t119C = 0.e0;
    real _t119D = 0.e0;
    vec4 _t119E = [_t119A, _t119B, _t119C, _t119D];
    real _t119F = 0.1e1;
    real _t11A0 = 0.e0;
    real _t11A1 = 0.e0;
    real _t11A2 = 0.e0;
    vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
    real _t11A4 = 0.e0;
    real _t11A5 = 0.e0;
    real _t11A6 = 0.e0;
    real _t11A7 = 0.1e1;
    vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
    tensor[4,4] _t11A9 = [_t1199, _t119E, _t11A3, _t11A8];
    real _t11AA = 0.e0;
    real _t11AB = -0.1e1;
    real _t11AC = 0.1e1;
    real _t11AD = 0.5e0;
    vec4 _t11AE = [_t11AA, _t11AB, _t11AC, _t11AD];
    real _t11AF = 0.e0;
    real _t11B0 = -0.1e1;
    real _t11B1 = 0.e0;
    real _t11B2 = 0.e0;
    vec4 _t11B3 = [_t11AF, _t11B0, _t11B1, _t11B2];
    real _t11B4 = 0.1e1;
    real _t11B5 = 0.e0;
    real _t11B6 = 0.e0;
    real _t11B7 = 0.1e1;
    vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
    real _t11B9 = 0.e0;
    real _t11BA = 0.e0;
    real _t11BB = 0.e0;
    real _t11BC = 0.1e1;
    vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
    tensor[4,4] _t11BE = [_t11AE, _t11B3, _t11B8, _t11BD];
    real _t11BF = 0.e0;
    real _t11C0 = -0.1e1;
    real _t11C1 = 0.e0;
    real _t11C2 = 0.e0;
    vec4 _t11C3 = [_t11BF, _t11C0, _t11C1, _t11C2];
    real _t11C4 = 0.1e1;
    real _t11C5 = 0.e0;
    real _t11C6 = 0.e0;
    real _t11C7 = 0.e0;
    vec4 _t11C8 = [_t11C4, _t11C5, _t11C6, _t11C7];
    real _t11C9 = 0.e0;
    real _t11CA = 0.e0;
    real _t11CB = 0.1e1;
    real _t11CC = 0.e0;
    vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
    real _t11CE = 0.e0;
    real _t11CF = 0.e0;
    real _t11D0 = 0.e0;
    real _t11D1 = 0.1e1;
    vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
    tensor[4,4] _t11D3 = [_t11C3, _t11C8, _t11CD, _t11D2];
    real _t11D4 = -0.1e1;
    real _t11D5 = 0.e0;
    real _t11D6 = 0.e0;
    real _t11D7 = 0.e0;
    vec4 _t11D8 = [_t11D4, _t11D5, _t11D6, _t11D7];
    real _t11D9 = 0.e0;
    real _t11DA = -0.1e1;
    real _t11DB = 0.e0;
    real _t11DC = 0.e0;
    vec4 _t11DD = [_t11D9, _t11DA, _t11DB, _t11DC];
    real _t11DE = 0.e0;
    real _t11DF = 0.e0;
    real _t11E0 = 0.1e1;
    real _t11E1 = 0.e0;
    vec4 _t11E2 = [_t11DE, _t11DF, _t11E0, _t11E1];
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    real _t11E5 = 0.e0;
    real _t11E6 = 0.1e1;
    vec4 _t11E7 = [_t11E3, _t11E4, _t11E5, _t11E6];
    tensor[4,4] _t11E8 = [_t11D8, _t11DD, _t11E2, _t11E7];
    real _t11E9 = 0.e0;
    real _t11EA = 0.1e1;
    real _t11EB = 0.e0;
    real _t11EC = 0.e0;
    vec4 _t11ED = [_t11E9, _t11EA, _t11EB, _t11EC];
    real _t11EE = -0.1e1;
    real _t11EF = 0.e0;
    real _t11F0 = 0.e0;
    real _t11F1 = 0.e0;
    vec4 _t11F2 = [_t11EE, _t11EF, _t11F0, _t11F1];
    real _t11F3 = 0.e0;
    real _t11F4 = 0.e0;
    real _t11F5 = 0.1e1;
    real _t11F6 = 0.e0;
    vec4 _t11F7 = [_t11F3, _t11F4, _t11F5, _t11F6];
    real _t11F8 = 0.e0;
    real _t11F9 = 0.e0;
    real _t11FA = 0.e0;
    real _t11FB = 0.1e1;
    vec4 _t11FC = [_t11F8, _t11F9, _t11FA, _t11FB];
    tensor[4,4] _t11FD = [_t11ED, _t11F2, _t11F7, _t11FC];
    real _t11FE = 0.1e1;
    real _t11FF = 0.e0;
    real _t1200 = 0.e0;
    real _t1201 = 0.e0;
    vec4 _t1202 = [_t11FE, _t11FF, _t1200, _t1201];
    real _t1203 = 0.e0;
    real _t1204 = 0.1e1;
    real _t1205 = 0.e0;
    real _t1206 = 0.e0;
    vec4 _t1207 = [_t1203, _t1204, _t1205, _t1206];
    real _t1208 = 0.e0;
    real _t1209 = 0.e0;
    real _t120A = 0.1e1;
    real _t120B = 0.e0;
    vec4 _t120C = [_t1208, _t1209, _t120A, _t120B];
    real _t120D = 0.e0;
    real _t120E = 0.e0;
    real _t120F = 0.e0;
    real _t1210 = 0.1e1;
    vec4 _t1211 = [_t120D, _t120E, _t120F, _t1210];
    tensor[4,4] _t1212 = [_t1202, _t1207, _t120C, _t1211];
    tensor[4,4][6] _t1213 = {_t11A9, _t11BE, _t11D3, _t11E8, _t11FD, _t1212};
    tensor[4,4][6][6] _t1214 = {_t0F98, _t1017, _t1096, _t1115, _t1194, _t1213};
    real _t1215 = time05D4[1];
    int _t1216 = prim $r2i01B7 (_t1215);
    tensor[4,4][6] _t1217 = prim $sub01C0<tensor[4,4][6]; %6> (_t1214, _t1216);
    real _t1218 = time05D4[1];
    int _t1219 = prim $r2i01B7 (_t1218);
    int[2] _t121A = func nextCell405D8 (_t1219, cellId05D1, mesh05D0);
    int _t121B = 1;
    int _t121C = prim $sub01C0<int; %2> (_t121A, _t121B);
    tensor[4,4] _t121D = prim $sub01C0<tensor[4,4]; %6> (_t1217, _t121C);
    real _t121E = time05D4[0];
    vec3 _t121F = prim *0036<$[3]> (_t121E, dPos05D3);
    vec3 _t1220 = prim +0017<$[3]> (_t121F, refPos05D2);
    real _t1221 = _t1220[0];
    real _t1222 = time05D4[0];
    vec3 _t1223 = prim *0036<$[3]> (_t1222, dPos05D3);
    vec3 _t1224 = prim +0017<$[3]> (_t1223, refPos05D2);
    real _t1225 = _t1224[1];
    real _t1226 = time05D4[0];
    vec3 _t1227 = prim *0036<$[3]> (_t1226, dPos05D3);
    vec3 _t1228 = prim +0017<$[3]> (_t1227, refPos05D2);
    real _t1229 = _t1228[2];
    real _t122A = 0.1e1;
    vec4 _t122B = [_t1221, _t1225, _t1229, _t122A];
    vec4 _t122C = prim •00CE<$[4,4]; $[4]; $[4]> (_t121D, _t122B);
    real _t122D = _t122C[2];
    vec3 _t122E = [_t0C05, _t0F19, _t122D];
    real _t122F = time05D4[1];
    int _t1230 = prim $r2i01B7 (_t122F);
    int[2] _t1231 = func nextCell405D8 (_t1230, cellId05D1, mesh05D0);
    int _t1232 = 1;
    int _t1233 = prim $sub01C0<int; %2> (_t1231, _t1232);
    Femdata: MeshPos _t1234 = extractFemItemN((mesh05D0, _t08F1, _t122E, _t1233),RefBuild(Mesh),);
    return _t1234;
  } else {
    real _t1235 = time05D4[0];
    vec3 _t1236 = prim *0036<$[3]> (_t1235, dPos05D3);
    vec3 _t1237 = prim +0017<$[3]> (_t1236, refPos05D2);
    Femdata: MeshPos _t1238 = extractFemItemN((mesh05D0, _t1237),InvalidBuildBoundary(MeshPos),);
    return _t1238;
  }
}
function int[2]#8 nextCell405D8 (int faceIdx1239, int cell123A, Femdata: Mesh mesh123B)
{
  int _t123C = 12;
  int _t123D = prim *0033 (cell123A, _t123C);
  int _t123E = 2;
  int _t123F = prim *0033 (faceIdx1239, _t123E);
  int _t1240 = prim +0015 (_t123D, _t123F);
  int[2] _t1241 = extractFemItemN((mesh123B, _t1240),CellFaceCell(Mesh),);
  return _t1241;
}
function vec2#0 _enter1242 (vec3 refPos1243, vec3 dPos1244)
{
  real time1245 = +inf;
  int face1246 = -1;
  real faceTime1247 = -inf;
  real _t1248 = -0.5e0;
  real _t1249 = 0.e0;
  real _t124A = 0.e0;
  real _t124B = 0.1e1;
  vec3 _t124C = [_t1249, _t124A, _t124B];
  real _t124D = prim •00CE<$[3]; $[3]; $[]> (_t124C, refPos1243);
  real _t124E = prim -0026<$[]> (_t1248, _t124D);
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  real _t1251 = 0.1e1;
  vec3 _t1252 = [_t124F, _t1250, _t1251];
  real _t1253 = prim •00CE<$[3]; $[3]; $[]> (_t1252, dPos1244);
  real _t1254 = prim /0055 (_t124E, _t1253);
  real _t1255 = -0.1e-15;
  bool _t1256 = prim >=007E (_t1254, _t1255);
  real _t1257 = -0.5e0;
  real _t1258 = 0.e0;
  real _t1259 = 0.e0;
  real _t125A = 0.1e1;
  vec3 _t125B = [_t1258, _t1259, _t125A];
  real _t125C = prim •00CE<$[3]; $[3]; $[]> (_t125B, refPos1243);
  real _t125D = prim -0026<$[]> (_t1257, _t125C);
  real _t125E = 0.e0;
  real _t125F = 0.e0;
  real _t1260 = 0.1e1;
  vec3 _t1261 = [_t125E, _t125F, _t1260];
  real _t1262 = prim •00CE<$[3]; $[3]; $[]> (_t1261, dPos1244);
  real _t1263 = prim /0055 (_t125D, _t1262);
  bool _t1264 = prim >0080 (time1245, _t1263);
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  real _t1267 = 0.1e1;
  vec3 _t1268 = [_t1265, _t1266, _t1267];
  real _t1269 = prim •00CE<$[3]; $[3]; $[]> (_t1268, dPos1244);
  real _t126A = prim |()|00B5<$[]> (_t1269);
  real _t126B = 0.1e-20;
  bool _t126C = prim >=007E (_t126A, _t126B);
  bool _t126D = prim $and01C4 (_t1264, _t126C);
  bool _t126E = prim $and01C4 (_t1256, _t126D);
  if _t126E {
    real _t126F = -0.5e0;
    real _t1270 = 0.e0;
    real _t1271 = 0.e0;
    real _t1272 = 0.1e1;
    vec3 _t1273 = [_t1270, _t1271, _t1272];
    real _t1274 = prim •00CE<$[3]; $[3]; $[]> (_t1273, refPos1243);
    real _t1275 = prim -0026<$[]> (_t126F, _t1274);
    real _t1276 = 0.e0;
    real _t1277 = 0.e0;
    real _t1278 = 0.1e1;
    vec3 _t1279 = [_t1276, _t1277, _t1278];
    real _t127A = prim •00CE<$[3]; $[3]; $[]> (_t1279, dPos1244);
    real _t127B = prim /0055 (_t1275, _t127A);
    vec3 _t127C = prim *0038<$[3]> (dPos1244, _t127B);
    vec3 _t127D = prim +0017<$[3]> (refPos1243, _t127C);
    real _t127E = -0.5e0;
    real _t127F = 0.e0;
    real _t1280 = 0.e0;
    real _t1281 = 0.1e1;
    vec3 _t1282 = [_t127F, _t1280, _t1281];
    real _t1283 = prim •00CE<$[3]; $[3]; $[]> (_t1282, refPos1243);
    real _t1284 = prim -0026<$[]> (_t127E, _t1283);
    real _t1285 = 0.e0;
    real _t1286 = 0.e0;
    real _t1287 = 0.1e1;
    vec3 _t1288 = [_t1285, _t1286, _t1287];
    real _t1289 = prim •00CE<$[3]; $[3]; $[]> (_t1288, dPos1244);
    real _t128A = prim /0055 (_t1284, _t1289);
    vec3 _t128B = prim *0038<$[3]> (dPos1244, _t128A);
    vec3 _t128C = prim +0017<$[3]> (refPos1243, _t128B);
    real _t128D = 0.1e-8;
    bool _t128E = extractFemItemN((_t127D, _t128C, _t128D),InsideInsert(File=checkInside.in)(Mesh),);
    if _t128E {
      real _t128F = -0.5e0;
      real _t1290 = 0.e0;
      real _t1291 = 0.e0;
      real _t1292 = 0.1e1;
      vec3 _t1293 = [_t1290, _t1291, _t1292];
      real _t1294 = prim •00CE<$[3]; $[3]; $[]> (_t1293, refPos1243);
      real _t1295 = prim -0026<$[]> (_t128F, _t1294);
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      real _t1298 = 0.1e1;
      vec3 _t1299 = [_t1296, _t1297, _t1298];
      real _t129A = prim •00CE<$[3]; $[3]; $[]> (_t1299, dPos1244);
      time1245 = prim /0055 (_t1295, _t129A);
      face1246 = 0;
    }
  }
  real _t129B = 0.5e0;
  real _t129C = 0.e0;
  real _t129D = 0.e0;
  real _t129E = 0.1e1;
  vec3 _t129F = [_t129C, _t129D, _t129E];
  real _t12A0 = prim •00CE<$[3]; $[3]; $[]> (_t129F, refPos1243);
  real _t12A1 = prim -0026<$[]> (_t129B, _t12A0);
  real _t12A2 = 0.e0;
  real _t12A3 = 0.e0;
  real _t12A4 = 0.1e1;
  vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
  real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, dPos1244);
  real _t12A7 = prim /0055 (_t12A1, _t12A6);
  real _t12A8 = -0.1e-15;
  bool _t12A9 = prim >=007E (_t12A7, _t12A8);
  real _t12AA = 0.5e0;
  real _t12AB = 0.e0;
  real _t12AC = 0.e0;
  real _t12AD = 0.1e1;
  vec3 _t12AE = [_t12AB, _t12AC, _t12AD];
  real _t12AF = prim •00CE<$[3]; $[3]; $[]> (_t12AE, refPos1243);
  real _t12B0 = prim -0026<$[]> (_t12AA, _t12AF);
  real _t12B1 = 0.e0;
  real _t12B2 = 0.e0;
  real _t12B3 = 0.1e1;
  vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
  real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, dPos1244);
  real _t12B6 = prim /0055 (_t12B0, _t12B5);
  bool _t12B7 = prim >0080 (time1245, _t12B6);
  real _t12B8 = 0.e0;
  real _t12B9 = 0.e0;
  real _t12BA = 0.1e1;
  vec3 _t12BB = [_t12B8, _t12B9, _t12BA];
  real _t12BC = prim •00CE<$[3]; $[3]; $[]> (_t12BB, dPos1244);
  real _t12BD = prim |()|00B5<$[]> (_t12BC);
  real _t12BE = 0.1e-20;
  bool _t12BF = prim >=007E (_t12BD, _t12BE);
  bool _t12C0 = prim $and01C4 (_t12B7, _t12BF);
  bool _t12C1 = prim $and01C4 (_t12A9, _t12C0);
  if _t12C1 {
    real _t12C2 = 0.5e0;
    real _t12C3 = 0.e0;
    real _t12C4 = 0.e0;
    real _t12C5 = 0.1e1;
    vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
    real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, refPos1243);
    real _t12C8 = prim -0026<$[]> (_t12C2, _t12C7);
    real _t12C9 = 0.e0;
    real _t12CA = 0.e0;
    real _t12CB = 0.1e1;
    vec3 _t12CC = [_t12C9, _t12CA, _t12CB];
    real _t12CD = prim •00CE<$[3]; $[3]; $[]> (_t12CC, dPos1244);
    real _t12CE = prim /0055 (_t12C8, _t12CD);
    vec3 _t12CF = prim *0038<$[3]> (dPos1244, _t12CE);
    vec3 _t12D0 = prim +0017<$[3]> (refPos1243, _t12CF);
    real _t12D1 = 0.5e0;
    real _t12D2 = 0.e0;
    real _t12D3 = 0.e0;
    real _t12D4 = 0.1e1;
    vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
    real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, refPos1243);
    real _t12D7 = prim -0026<$[]> (_t12D1, _t12D6);
    real _t12D8 = 0.e0;
    real _t12D9 = 0.e0;
    real _t12DA = 0.1e1;
    vec3 _t12DB = [_t12D8, _t12D9, _t12DA];
    real _t12DC = prim •00CE<$[3]; $[3]; $[]> (_t12DB, dPos1244);
    real _t12DD = prim /0055 (_t12D7, _t12DC);
    vec3 _t12DE = prim *0038<$[3]> (dPos1244, _t12DD);
    vec3 _t12DF = prim +0017<$[3]> (refPos1243, _t12DE);
    real _t12E0 = 0.1e-8;
    bool _t12E1 = extractFemItemN((_t12D0, _t12DF, _t12E0),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12E1 {
      real _t12E2 = 0.5e0;
      real _t12E3 = 0.e0;
      real _t12E4 = 0.e0;
      real _t12E5 = 0.1e1;
      vec3 _t12E6 = [_t12E3, _t12E4, _t12E5];
      real _t12E7 = prim •00CE<$[3]; $[3]; $[]> (_t12E6, refPos1243);
      real _t12E8 = prim -0026<$[]> (_t12E2, _t12E7);
      real _t12E9 = 0.e0;
      real _t12EA = 0.e0;
      real _t12EB = 0.1e1;
      vec3 _t12EC = [_t12E9, _t12EA, _t12EB];
      real _t12ED = prim •00CE<$[3]; $[3]; $[]> (_t12EC, dPos1244);
      time1245 = prim /0055 (_t12E8, _t12ED);
      face1246 = 1;
    }
  }
  real _t12EE = -0.5e0;
  real _t12EF = 0.e0;
  real _t12F0 = 0.1e1;
  real _t12F1 = 0.e0;
  vec3 _t12F2 = [_t12EF, _t12F0, _t12F1];
  real _t12F3 = prim •00CE<$[3]; $[3]; $[]> (_t12F2, refPos1243);
  real _t12F4 = prim -0026<$[]> (_t12EE, _t12F3);
  real _t12F5 = 0.e0;
  real _t12F6 = 0.1e1;
  real _t12F7 = 0.e0;
  vec3 _t12F8 = [_t12F5, _t12F6, _t12F7];
  real _t12F9 = prim •00CE<$[3]; $[3]; $[]> (_t12F8, dPos1244);
  real _t12FA = prim /0055 (_t12F4, _t12F9);
  real _t12FB = -0.1e-15;
  bool _t12FC = prim >=007E (_t12FA, _t12FB);
  real _t12FD = -0.5e0;
  real _t12FE = 0.e0;
  real _t12FF = 0.1e1;
  real _t1300 = 0.e0;
  vec3 _t1301 = [_t12FE, _t12FF, _t1300];
  real _t1302 = prim •00CE<$[3]; $[3]; $[]> (_t1301, refPos1243);
  real _t1303 = prim -0026<$[]> (_t12FD, _t1302);
  real _t1304 = 0.e0;
  real _t1305 = 0.1e1;
  real _t1306 = 0.e0;
  vec3 _t1307 = [_t1304, _t1305, _t1306];
  real _t1308 = prim •00CE<$[3]; $[3]; $[]> (_t1307, dPos1244);
  real _t1309 = prim /0055 (_t1303, _t1308);
  bool _t130A = prim >0080 (time1245, _t1309);
  real _t130B = 0.e0;
  real _t130C = 0.1e1;
  real _t130D = 0.e0;
  vec3 _t130E = [_t130B, _t130C, _t130D];
  real _t130F = prim •00CE<$[3]; $[3]; $[]> (_t130E, dPos1244);
  real _t1310 = prim |()|00B5<$[]> (_t130F);
  real _t1311 = 0.1e-20;
  bool _t1312 = prim >=007E (_t1310, _t1311);
  bool _t1313 = prim $and01C4 (_t130A, _t1312);
  bool _t1314 = prim $and01C4 (_t12FC, _t1313);
  if _t1314 {
    real _t1315 = -0.5e0;
    real _t1316 = 0.e0;
    real _t1317 = 0.1e1;
    real _t1318 = 0.e0;
    vec3 _t1319 = [_t1316, _t1317, _t1318];
    real _t131A = prim •00CE<$[3]; $[3]; $[]> (_t1319, refPos1243);
    real _t131B = prim -0026<$[]> (_t1315, _t131A);
    real _t131C = 0.e0;
    real _t131D = 0.1e1;
    real _t131E = 0.e0;
    vec3 _t131F = [_t131C, _t131D, _t131E];
    real _t1320 = prim •00CE<$[3]; $[3]; $[]> (_t131F, dPos1244);
    real _t1321 = prim /0055 (_t131B, _t1320);
    vec3 _t1322 = prim *0038<$[3]> (dPos1244, _t1321);
    vec3 _t1323 = prim +0017<$[3]> (refPos1243, _t1322);
    real _t1324 = -0.5e0;
    real _t1325 = 0.e0;
    real _t1326 = 0.1e1;
    real _t1327 = 0.e0;
    vec3 _t1328 = [_t1325, _t1326, _t1327];
    real _t1329 = prim •00CE<$[3]; $[3]; $[]> (_t1328, refPos1243);
    real _t132A = prim -0026<$[]> (_t1324, _t1329);
    real _t132B = 0.e0;
    real _t132C = 0.1e1;
    real _t132D = 0.e0;
    vec3 _t132E = [_t132B, _t132C, _t132D];
    real _t132F = prim •00CE<$[3]; $[3]; $[]> (_t132E, dPos1244);
    real _t1330 = prim /0055 (_t132A, _t132F);
    vec3 _t1331 = prim *0038<$[3]> (dPos1244, _t1330);
    vec3 _t1332 = prim +0017<$[3]> (refPos1243, _t1331);
    real _t1333 = 0.1e-8;
    bool _t1334 = extractFemItemN((_t1323, _t1332, _t1333),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1334 {
      real _t1335 = -0.5e0;
      real _t1336 = 0.e0;
      real _t1337 = 0.1e1;
      real _t1338 = 0.e0;
      vec3 _t1339 = [_t1336, _t1337, _t1338];
      real _t133A = prim •00CE<$[3]; $[3]; $[]> (_t1339, refPos1243);
      real _t133B = prim -0026<$[]> (_t1335, _t133A);
      real _t133C = 0.e0;
      real _t133D = 0.1e1;
      real _t133E = 0.e0;
      vec3 _t133F = [_t133C, _t133D, _t133E];
      real _t1340 = prim •00CE<$[3]; $[3]; $[]> (_t133F, dPos1244);
      time1245 = prim /0055 (_t133B, _t1340);
      face1246 = 2;
    }
  }
  real _t1341 = -0.5e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  real _t1344 = 0.e0;
  vec3 _t1345 = [_t1342, _t1343, _t1344];
  real _t1346 = prim •00CE<$[3]; $[3]; $[]> (_t1345, refPos1243);
  real _t1347 = prim -0026<$[]> (_t1341, _t1346);
  real _t1348 = -0.1e1;
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  vec3 _t134B = [_t1348, _t1349, _t134A];
  real _t134C = prim •00CE<$[3]; $[3]; $[]> (_t134B, dPos1244);
  real _t134D = prim /0055 (_t1347, _t134C);
  real _t134E = -0.1e-15;
  bool _t134F = prim >=007E (_t134D, _t134E);
  real _t1350 = -0.5e0;
  real _t1351 = -0.1e1;
  real _t1352 = 0.e0;
  real _t1353 = 0.e0;
  vec3 _t1354 = [_t1351, _t1352, _t1353];
  real _t1355 = prim •00CE<$[3]; $[3]; $[]> (_t1354, refPos1243);
  real _t1356 = prim -0026<$[]> (_t1350, _t1355);
  real _t1357 = -0.1e1;
  real _t1358 = 0.e0;
  real _t1359 = 0.e0;
  vec3 _t135A = [_t1357, _t1358, _t1359];
  real _t135B = prim •00CE<$[3]; $[3]; $[]> (_t135A, dPos1244);
  real _t135C = prim /0055 (_t1356, _t135B);
  bool _t135D = prim >0080 (time1245, _t135C);
  real _t135E = -0.1e1;
  real _t135F = 0.e0;
  real _t1360 = 0.e0;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = prim •00CE<$[3]; $[3]; $[]> (_t1361, dPos1244);
  real _t1363 = prim |()|00B5<$[]> (_t1362);
  real _t1364 = 0.1e-20;
  bool _t1365 = prim >=007E (_t1363, _t1364);
  bool _t1366 = prim $and01C4 (_t135D, _t1365);
  bool _t1367 = prim $and01C4 (_t134F, _t1366);
  if _t1367 {
    real _t1368 = -0.5e0;
    real _t1369 = -0.1e1;
    real _t136A = 0.e0;
    real _t136B = 0.e0;
    vec3 _t136C = [_t1369, _t136A, _t136B];
    real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos1243);
    real _t136E = prim -0026<$[]> (_t1368, _t136D);
    real _t136F = -0.1e1;
    real _t1370 = 0.e0;
    real _t1371 = 0.e0;
    vec3 _t1372 = [_t136F, _t1370, _t1371];
    real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos1244);
    real _t1374 = prim /0055 (_t136E, _t1373);
    vec3 _t1375 = prim *0038<$[3]> (dPos1244, _t1374);
    vec3 _t1376 = prim +0017<$[3]> (refPos1243, _t1375);
    real _t1377 = -0.5e0;
    real _t1378 = -0.1e1;
    real _t1379 = 0.e0;
    real _t137A = 0.e0;
    vec3 _t137B = [_t1378, _t1379, _t137A];
    real _t137C = prim •00CE<$[3]; $[3]; $[]> (_t137B, refPos1243);
    real _t137D = prim -0026<$[]> (_t1377, _t137C);
    real _t137E = -0.1e1;
    real _t137F = 0.e0;
    real _t1380 = 0.e0;
    vec3 _t1381 = [_t137E, _t137F, _t1380];
    real _t1382 = prim •00CE<$[3]; $[3]; $[]> (_t1381, dPos1244);
    real _t1383 = prim /0055 (_t137D, _t1382);
    vec3 _t1384 = prim *0038<$[3]> (dPos1244, _t1383);
    vec3 _t1385 = prim +0017<$[3]> (refPos1243, _t1384);
    real _t1386 = 0.1e-8;
    bool _t1387 = extractFemItemN((_t1376, _t1385, _t1386),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1387 {
      real _t1388 = -0.5e0;
      real _t1389 = -0.1e1;
      real _t138A = 0.e0;
      real _t138B = 0.e0;
      vec3 _t138C = [_t1389, _t138A, _t138B];
      real _t138D = prim •00CE<$[3]; $[3]; $[]> (_t138C, refPos1243);
      real _t138E = prim -0026<$[]> (_t1388, _t138D);
      real _t138F = -0.1e1;
      real _t1390 = 0.e0;
      real _t1391 = 0.e0;
      vec3 _t1392 = [_t138F, _t1390, _t1391];
      real _t1393 = prim •00CE<$[3]; $[3]; $[]> (_t1392, dPos1244);
      time1245 = prim /0055 (_t138E, _t1393);
      face1246 = 3;
    }
  }
  real _t1394 = -0.5e0;
  real _t1395 = 0.e0;
  real _t1396 = -0.1e1;
  real _t1397 = 0.e0;
  vec3 _t1398 = [_t1395, _t1396, _t1397];
  real _t1399 = prim •00CE<$[3]; $[3]; $[]> (_t1398, refPos1243);
  real _t139A = prim -0026<$[]> (_t1394, _t1399);
  real _t139B = 0.e0;
  real _t139C = -0.1e1;
  real _t139D = 0.e0;
  vec3 _t139E = [_t139B, _t139C, _t139D];
  real _t139F = prim •00CE<$[3]; $[3]; $[]> (_t139E, dPos1244);
  real _t13A0 = prim /0055 (_t139A, _t139F);
  real _t13A1 = -0.1e-15;
  bool _t13A2 = prim >=007E (_t13A0, _t13A1);
  real _t13A3 = -0.5e0;
  real _t13A4 = 0.e0;
  real _t13A5 = -0.1e1;
  real _t13A6 = 0.e0;
  vec3 _t13A7 = [_t13A4, _t13A5, _t13A6];
  real _t13A8 = prim •00CE<$[3]; $[3]; $[]> (_t13A7, refPos1243);
  real _t13A9 = prim -0026<$[]> (_t13A3, _t13A8);
  real _t13AA = 0.e0;
  real _t13AB = -0.1e1;
  real _t13AC = 0.e0;
  vec3 _t13AD = [_t13AA, _t13AB, _t13AC];
  real _t13AE = prim •00CE<$[3]; $[3]; $[]> (_t13AD, dPos1244);
  real _t13AF = prim /0055 (_t13A9, _t13AE);
  bool _t13B0 = prim >0080 (time1245, _t13AF);
  real _t13B1 = 0.e0;
  real _t13B2 = -0.1e1;
  real _t13B3 = 0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos1244);
  real _t13B6 = prim |()|00B5<$[]> (_t13B5);
  real _t13B7 = 0.1e-20;
  bool _t13B8 = prim >=007E (_t13B6, _t13B7);
  bool _t13B9 = prim $and01C4 (_t13B0, _t13B8);
  bool _t13BA = prim $and01C4 (_t13A2, _t13B9);
  if _t13BA {
    real _t13BB = -0.5e0;
    real _t13BC = 0.e0;
    real _t13BD = -0.1e1;
    real _t13BE = 0.e0;
    vec3 _t13BF = [_t13BC, _t13BD, _t13BE];
    real _t13C0 = prim •00CE<$[3]; $[3]; $[]> (_t13BF, refPos1243);
    real _t13C1 = prim -0026<$[]> (_t13BB, _t13C0);
    real _t13C2 = 0.e0;
    real _t13C3 = -0.1e1;
    real _t13C4 = 0.e0;
    vec3 _t13C5 = [_t13C2, _t13C3, _t13C4];
    real _t13C6 = prim •00CE<$[3]; $[3]; $[]> (_t13C5, dPos1244);
    real _t13C7 = prim /0055 (_t13C1, _t13C6);
    vec3 _t13C8 = prim *0038<$[3]> (dPos1244, _t13C7);
    vec3 _t13C9 = prim +0017<$[3]> (refPos1243, _t13C8);
    real _t13CA = -0.5e0;
    real _t13CB = 0.e0;
    real _t13CC = -0.1e1;
    real _t13CD = 0.e0;
    vec3 _t13CE = [_t13CB, _t13CC, _t13CD];
    real _t13CF = prim •00CE<$[3]; $[3]; $[]> (_t13CE, refPos1243);
    real _t13D0 = prim -0026<$[]> (_t13CA, _t13CF);
    real _t13D1 = 0.e0;
    real _t13D2 = -0.1e1;
    real _t13D3 = 0.e0;
    vec3 _t13D4 = [_t13D1, _t13D2, _t13D3];
    real _t13D5 = prim •00CE<$[3]; $[3]; $[]> (_t13D4, dPos1244);
    real _t13D6 = prim /0055 (_t13D0, _t13D5);
    vec3 _t13D7 = prim *0038<$[3]> (dPos1244, _t13D6);
    vec3 _t13D8 = prim +0017<$[3]> (refPos1243, _t13D7);
    real _t13D9 = 0.1e-8;
    bool _t13DA = extractFemItemN((_t13C9, _t13D8, _t13D9),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13DA {
      real _t13DB = -0.5e0;
      real _t13DC = 0.e0;
      real _t13DD = -0.1e1;
      real _t13DE = 0.e0;
      vec3 _t13DF = [_t13DC, _t13DD, _t13DE];
      real _t13E0 = prim •00CE<$[3]; $[3]; $[]> (_t13DF, refPos1243);
      real _t13E1 = prim -0026<$[]> (_t13DB, _t13E0);
      real _t13E2 = 0.e0;
      real _t13E3 = -0.1e1;
      real _t13E4 = 0.e0;
      vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
      real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, dPos1244);
      time1245 = prim /0055 (_t13E1, _t13E6);
      face1246 = 4;
    }
  }
  real _t13E7 = -0.5e0;
  real _t13E8 = 0.1e1;
  real _t13E9 = 0.e0;
  real _t13EA = -0.e0;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, refPos1243);
  real _t13ED = prim -0026<$[]> (_t13E7, _t13EC);
  real _t13EE = 0.1e1;
  real _t13EF = 0.e0;
  real _t13F0 = -0.e0;
  vec3 _t13F1 = [_t13EE, _t13EF, _t13F0];
  real _t13F2 = prim •00CE<$[3]; $[3]; $[]> (_t13F1, dPos1244);
  real _t13F3 = prim /0055 (_t13ED, _t13F2);
  real _t13F4 = -0.1e-15;
  bool _t13F5 = prim >=007E (_t13F3, _t13F4);
  real _t13F6 = -0.5e0;
  real _t13F7 = 0.1e1;
  real _t13F8 = 0.e0;
  real _t13F9 = -0.e0;
  vec3 _t13FA = [_t13F7, _t13F8, _t13F9];
  real _t13FB = prim •00CE<$[3]; $[3]; $[]> (_t13FA, refPos1243);
  real _t13FC = prim -0026<$[]> (_t13F6, _t13FB);
  real _t13FD = 0.1e1;
  real _t13FE = 0.e0;
  real _t13FF = -0.e0;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, dPos1244);
  real _t1402 = prim /0055 (_t13FC, _t1401);
  bool _t1403 = prim >0080 (time1245, _t1402);
  real _t1404 = 0.1e1;
  real _t1405 = 0.e0;
  real _t1406 = -0.e0;
  vec3 _t1407 = [_t1404, _t1405, _t1406];
  real _t1408 = prim •00CE<$[3]; $[3]; $[]> (_t1407, dPos1244);
  real _t1409 = prim |()|00B5<$[]> (_t1408);
  real _t140A = 0.1e-20;
  bool _t140B = prim >=007E (_t1409, _t140A);
  bool _t140C = prim $and01C4 (_t1403, _t140B);
  bool _t140D = prim $and01C4 (_t13F5, _t140C);
  if _t140D {
    real _t140E = -0.5e0;
    real _t140F = 0.1e1;
    real _t1410 = 0.e0;
    real _t1411 = -0.e0;
    vec3 _t1412 = [_t140F, _t1410, _t1411];
    real _t1413 = prim •00CE<$[3]; $[3]; $[]> (_t1412, refPos1243);
    real _t1414 = prim -0026<$[]> (_t140E, _t1413);
    real _t1415 = 0.1e1;
    real _t1416 = 0.e0;
    real _t1417 = -0.e0;
    vec3 _t1418 = [_t1415, _t1416, _t1417];
    real _t1419 = prim •00CE<$[3]; $[3]; $[]> (_t1418, dPos1244);
    real _t141A = prim /0055 (_t1414, _t1419);
    vec3 _t141B = prim *0038<$[3]> (dPos1244, _t141A);
    vec3 _t141C = prim +0017<$[3]> (refPos1243, _t141B);
    real _t141D = -0.5e0;
    real _t141E = 0.1e1;
    real _t141F = 0.e0;
    real _t1420 = -0.e0;
    vec3 _t1421 = [_t141E, _t141F, _t1420];
    real _t1422 = prim •00CE<$[3]; $[3]; $[]> (_t1421, refPos1243);
    real _t1423 = prim -0026<$[]> (_t141D, _t1422);
    real _t1424 = 0.1e1;
    real _t1425 = 0.e0;
    real _t1426 = -0.e0;
    vec3 _t1427 = [_t1424, _t1425, _t1426];
    real _t1428 = prim •00CE<$[3]; $[3]; $[]> (_t1427, dPos1244);
    real _t1429 = prim /0055 (_t1423, _t1428);
    vec3 _t142A = prim *0038<$[3]> (dPos1244, _t1429);
    vec3 _t142B = prim +0017<$[3]> (refPos1243, _t142A);
    real _t142C = 0.1e-8;
    bool _t142D = extractFemItemN((_t141C, _t142B, _t142C),InsideInsert(File=checkInside.in)(Mesh),);
    if _t142D {
      real _t142E = -0.5e0;
      real _t142F = 0.1e1;
      real _t1430 = 0.e0;
      real _t1431 = -0.e0;
      vec3 _t1432 = [_t142F, _t1430, _t1431];
      real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, refPos1243);
      real _t1434 = prim -0026<$[]> (_t142E, _t1433);
      real _t1435 = 0.1e1;
      real _t1436 = 0.e0;
      real _t1437 = -0.e0;
      vec3 _t1438 = [_t1435, _t1436, _t1437];
      real _t1439 = prim •00CE<$[3]; $[3]; $[]> (_t1438, dPos1244);
      time1245 = prim /0055 (_t1434, _t1439);
      face1246 = 5;
    }
  }
  int _t143A = -1;
  bool _t143B = prim !=0086 (face1246, _t143A);
  if _t143B {
    real _t143C = 0.e0;
    real _t143D = prim max0125 (time1245, _t143C);
    real _t143E = (real)face1246;
    vec2 _t143F = [_t143D, _t143E];
    return _t143F;
  } else {
    real _t1440 = -0.1e1;
    real _t1441 = -0.1e1;
    vec2 _t1442 = [_t1440, _t1441];
    return _t1442;
  }
}
function vec2#0 _exit1443 (vec3 refPos1243, vec3 dPos1244, int i1444)
{
  real time1445 = +inf;
  int face1446 = -1;
  real faceTime1447 = -inf;
  real _t1448 = -0.5e0;
  real _t1449 = 0.e0;
  real _t144A = 0.e0;
  real _t144B = 0.1e1;
  vec3 _t144C = [_t1449, _t144A, _t144B];
  real _t144D = prim •00CE<$[3]; $[3]; $[]> (_t144C, refPos1243);
  real _t144E = prim -0026<$[]> (_t1448, _t144D);
  real _t144F = 0.e0;
  real _t1450 = 0.e0;
  real _t1451 = 0.1e1;
  vec3 _t1452 = [_t144F, _t1450, _t1451];
  real _t1453 = prim •00CE<$[3]; $[3]; $[]> (_t1452, dPos1244);
  real _t1454 = prim /0055 (_t144E, _t1453);
  real _t1455 = -0.1e-15;
  bool _t1456 = prim >=007E (_t1454, _t1455);
  real _t1457 = -0.5e0;
  real _t1458 = 0.e0;
  real _t1459 = 0.e0;
  real _t145A = 0.1e1;
  vec3 _t145B = [_t1458, _t1459, _t145A];
  real _t145C = prim •00CE<$[3]; $[3]; $[]> (_t145B, refPos1243);
  real _t145D = prim -0026<$[]> (_t1457, _t145C);
  real _t145E = 0.e0;
  real _t145F = 0.e0;
  real _t1460 = 0.1e1;
  vec3 _t1461 = [_t145E, _t145F, _t1460];
  real _t1462 = prim •00CE<$[3]; $[3]; $[]> (_t1461, dPos1244);
  real _t1463 = prim /0055 (_t145D, _t1462);
  bool _t1464 = prim >0080 (time1445, _t1463);
  real _t1465 = 0.e0;
  real _t1466 = 0.e0;
  real _t1467 = 0.1e1;
  vec3 _t1468 = [_t1465, _t1466, _t1467];
  real _t1469 = prim •00CE<$[3]; $[3]; $[]> (_t1468, dPos1244);
  real _t146A = prim |()|00B5<$[]> (_t1469);
  real _t146B = 0.1e-20;
  bool _t146C = prim >=007E (_t146A, _t146B);
  bool _t146D = prim $and01C4 (_t1464, _t146C);
  bool _t146E = prim $and01C4 (_t1456, _t146D);
  if _t146E {
    int _t146F = 0;
    bool _t1470 = prim !=0086 (i1444, _t146F);
    if _t1470 {
      real _t1471 = -0.5e0;
      real _t1472 = 0.e0;
      real _t1473 = 0.e0;
      real _t1474 = 0.1e1;
      vec3 _t1475 = [_t1472, _t1473, _t1474];
      real _t1476 = prim •00CE<$[3]; $[3]; $[]> (_t1475, refPos1243);
      real _t1477 = prim -0026<$[]> (_t1471, _t1476);
      real _t1478 = 0.e0;
      real _t1479 = 0.e0;
      real _t147A = 0.1e1;
      vec3 _t147B = [_t1478, _t1479, _t147A];
      real _t147C = prim •00CE<$[3]; $[3]; $[]> (_t147B, dPos1244);
      time1445 = prim /0055 (_t1477, _t147C);
      face1446 = 0;
    } else {
      real _t147D = -0.5e0;
      real _t147E = 0.e0;
      real _t147F = 0.e0;
      real _t1480 = 0.1e1;
      vec3 _t1481 = [_t147E, _t147F, _t1480];
      real _t1482 = prim •00CE<$[3]; $[3]; $[]> (_t1481, refPos1243);
      real _t1483 = prim -0026<$[]> (_t147D, _t1482);
      real _t1484 = 0.e0;
      real _t1485 = 0.e0;
      real _t1486 = 0.1e1;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, dPos1244);
      faceTime1447 = prim /0055 (_t1483, _t1488);
    }
  }
  real _t1489 = 0.5e0;
  real _t148A = 0.e0;
  real _t148B = 0.e0;
  real _t148C = 0.1e1;
  vec3 _t148D = [_t148A, _t148B, _t148C];
  real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, refPos1243);
  real _t148F = prim -0026<$[]> (_t1489, _t148E);
  real _t1490 = 0.e0;
  real _t1491 = 0.e0;
  real _t1492 = 0.1e1;
  vec3 _t1493 = [_t1490, _t1491, _t1492];
  real _t1494 = prim •00CE<$[3]; $[3]; $[]> (_t1493, dPos1244);
  real _t1495 = prim /0055 (_t148F, _t1494);
  real _t1496 = -0.1e-15;
  bool _t1497 = prim >=007E (_t1495, _t1496);
  real _t1498 = 0.5e0;
  real _t1499 = 0.e0;
  real _t149A = 0.e0;
  real _t149B = 0.1e1;
  vec3 _t149C = [_t1499, _t149A, _t149B];
  real _t149D = prim •00CE<$[3]; $[3]; $[]> (_t149C, refPos1243);
  real _t149E = prim -0026<$[]> (_t1498, _t149D);
  real _t149F = 0.e0;
  real _t14A0 = 0.e0;
  real _t14A1 = 0.1e1;
  vec3 _t14A2 = [_t149F, _t14A0, _t14A1];
  real _t14A3 = prim •00CE<$[3]; $[3]; $[]> (_t14A2, dPos1244);
  real _t14A4 = prim /0055 (_t149E, _t14A3);
  bool _t14A5 = prim >0080 (time1445, _t14A4);
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = 0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, dPos1244);
  real _t14AB = prim |()|00B5<$[]> (_t14AA);
  real _t14AC = 0.1e-20;
  bool _t14AD = prim >=007E (_t14AB, _t14AC);
  bool _t14AE = prim $and01C4 (_t14A5, _t14AD);
  bool _t14AF = prim $and01C4 (_t1497, _t14AE);
  if _t14AF {
    int _t14B0 = 1;
    bool _t14B1 = prim !=0086 (i1444, _t14B0);
    if _t14B1 {
      real _t14B2 = 0.5e0;
      real _t14B3 = 0.e0;
      real _t14B4 = 0.e0;
      real _t14B5 = 0.1e1;
      vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
      real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, refPos1243);
      real _t14B8 = prim -0026<$[]> (_t14B2, _t14B7);
      real _t14B9 = 0.e0;
      real _t14BA = 0.e0;
      real _t14BB = 0.1e1;
      vec3 _t14BC = [_t14B9, _t14BA, _t14BB];
      real _t14BD = prim •00CE<$[3]; $[3]; $[]> (_t14BC, dPos1244);
      time1445 = prim /0055 (_t14B8, _t14BD);
      face1446 = 1;
    } else {
      real _t14BE = 0.5e0;
      real _t14BF = 0.e0;
      real _t14C0 = 0.e0;
      real _t14C1 = 0.1e1;
      vec3 _t14C2 = [_t14BF, _t14C0, _t14C1];
      real _t14C3 = prim •00CE<$[3]; $[3]; $[]> (_t14C2, refPos1243);
      real _t14C4 = prim -0026<$[]> (_t14BE, _t14C3);
      real _t14C5 = 0.e0;
      real _t14C6 = 0.e0;
      real _t14C7 = 0.1e1;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, dPos1244);
      faceTime1447 = prim /0055 (_t14C4, _t14C9);
    }
  }
  real _t14CA = -0.5e0;
  real _t14CB = 0.e0;
  real _t14CC = 0.1e1;
  real _t14CD = 0.e0;
  vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
  real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, refPos1243);
  real _t14D0 = prim -0026<$[]> (_t14CA, _t14CF);
  real _t14D1 = 0.e0;
  real _t14D2 = 0.1e1;
  real _t14D3 = 0.e0;
  vec3 _t14D4 = [_t14D1, _t14D2, _t14D3];
  real _t14D5 = prim •00CE<$[3]; $[3]; $[]> (_t14D4, dPos1244);
  real _t14D6 = prim /0055 (_t14D0, _t14D5);
  real _t14D7 = -0.1e-15;
  bool _t14D8 = prim >=007E (_t14D6, _t14D7);
  real _t14D9 = -0.5e0;
  real _t14DA = 0.e0;
  real _t14DB = 0.1e1;
  real _t14DC = 0.e0;
  vec3 _t14DD = [_t14DA, _t14DB, _t14DC];
  real _t14DE = prim •00CE<$[3]; $[3]; $[]> (_t14DD, refPos1243);
  real _t14DF = prim -0026<$[]> (_t14D9, _t14DE);
  real _t14E0 = 0.e0;
  real _t14E1 = 0.1e1;
  real _t14E2 = 0.e0;
  vec3 _t14E3 = [_t14E0, _t14E1, _t14E2];
  real _t14E4 = prim •00CE<$[3]; $[3]; $[]> (_t14E3, dPos1244);
  real _t14E5 = prim /0055 (_t14DF, _t14E4);
  bool _t14E6 = prim >0080 (time1445, _t14E5);
  real _t14E7 = 0.e0;
  real _t14E8 = 0.1e1;
  real _t14E9 = 0.e0;
  vec3 _t14EA = [_t14E7, _t14E8, _t14E9];
  real _t14EB = prim •00CE<$[3]; $[3]; $[]> (_t14EA, dPos1244);
  real _t14EC = prim |()|00B5<$[]> (_t14EB);
  real _t14ED = 0.1e-20;
  bool _t14EE = prim >=007E (_t14EC, _t14ED);
  bool _t14EF = prim $and01C4 (_t14E6, _t14EE);
  bool _t14F0 = prim $and01C4 (_t14D8, _t14EF);
  if _t14F0 {
    int _t14F1 = 2;
    bool _t14F2 = prim !=0086 (i1444, _t14F1);
    if _t14F2 {
      real _t14F3 = -0.5e0;
      real _t14F4 = 0.e0;
      real _t14F5 = 0.1e1;
      real _t14F6 = 0.e0;
      vec3 _t14F7 = [_t14F4, _t14F5, _t14F6];
      real _t14F8 = prim •00CE<$[3]; $[3]; $[]> (_t14F7, refPos1243);
      real _t14F9 = prim -0026<$[]> (_t14F3, _t14F8);
      real _t14FA = 0.e0;
      real _t14FB = 0.1e1;
      real _t14FC = 0.e0;
      vec3 _t14FD = [_t14FA, _t14FB, _t14FC];
      real _t14FE = prim •00CE<$[3]; $[3]; $[]> (_t14FD, dPos1244);
      time1445 = prim /0055 (_t14F9, _t14FE);
      face1446 = 2;
    } else {
      real _t14FF = -0.5e0;
      real _t1500 = 0.e0;
      real _t1501 = 0.1e1;
      real _t1502 = 0.e0;
      vec3 _t1503 = [_t1500, _t1501, _t1502];
      real _t1504 = prim •00CE<$[3]; $[3]; $[]> (_t1503, refPos1243);
      real _t1505 = prim -0026<$[]> (_t14FF, _t1504);
      real _t1506 = 0.e0;
      real _t1507 = 0.1e1;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, dPos1244);
      faceTime1447 = prim /0055 (_t1505, _t150A);
    }
  }
  real _t150B = -0.5e0;
  real _t150C = -0.1e1;
  real _t150D = 0.e0;
  real _t150E = 0.e0;
  vec3 _t150F = [_t150C, _t150D, _t150E];
  real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, refPos1243);
  real _t1511 = prim -0026<$[]> (_t150B, _t1510);
  real _t1512 = -0.1e1;
  real _t1513 = 0.e0;
  real _t1514 = 0.e0;
  vec3 _t1515 = [_t1512, _t1513, _t1514];
  real _t1516 = prim •00CE<$[3]; $[3]; $[]> (_t1515, dPos1244);
  real _t1517 = prim /0055 (_t1511, _t1516);
  real _t1518 = -0.1e-15;
  bool _t1519 = prim >=007E (_t1517, _t1518);
  real _t151A = -0.5e0;
  real _t151B = -0.1e1;
  real _t151C = 0.e0;
  real _t151D = 0.e0;
  vec3 _t151E = [_t151B, _t151C, _t151D];
  real _t151F = prim •00CE<$[3]; $[3]; $[]> (_t151E, refPos1243);
  real _t1520 = prim -0026<$[]> (_t151A, _t151F);
  real _t1521 = -0.1e1;
  real _t1522 = 0.e0;
  real _t1523 = 0.e0;
  vec3 _t1524 = [_t1521, _t1522, _t1523];
  real _t1525 = prim •00CE<$[3]; $[3]; $[]> (_t1524, dPos1244);
  real _t1526 = prim /0055 (_t1520, _t1525);
  bool _t1527 = prim >0080 (time1445, _t1526);
  real _t1528 = -0.1e1;
  real _t1529 = 0.e0;
  real _t152A = 0.e0;
  vec3 _t152B = [_t1528, _t1529, _t152A];
  real _t152C = prim •00CE<$[3]; $[3]; $[]> (_t152B, dPos1244);
  real _t152D = prim |()|00B5<$[]> (_t152C);
  real _t152E = 0.1e-20;
  bool _t152F = prim >=007E (_t152D, _t152E);
  bool _t1530 = prim $and01C4 (_t1527, _t152F);
  bool _t1531 = prim $and01C4 (_t1519, _t1530);
  if _t1531 {
    int _t1532 = 3;
    bool _t1533 = prim !=0086 (i1444, _t1532);
    if _t1533 {
      real _t1534 = -0.5e0;
      real _t1535 = -0.1e1;
      real _t1536 = 0.e0;
      real _t1537 = 0.e0;
      vec3 _t1538 = [_t1535, _t1536, _t1537];
      real _t1539 = prim •00CE<$[3]; $[3]; $[]> (_t1538, refPos1243);
      real _t153A = prim -0026<$[]> (_t1534, _t1539);
      real _t153B = -0.1e1;
      real _t153C = 0.e0;
      real _t153D = 0.e0;
      vec3 _t153E = [_t153B, _t153C, _t153D];
      real _t153F = prim •00CE<$[3]; $[3]; $[]> (_t153E, dPos1244);
      time1445 = prim /0055 (_t153A, _t153F);
      face1446 = 3;
    } else {
      real _t1540 = -0.5e0;
      real _t1541 = -0.1e1;
      real _t1542 = 0.e0;
      real _t1543 = 0.e0;
      vec3 _t1544 = [_t1541, _t1542, _t1543];
      real _t1545 = prim •00CE<$[3]; $[3]; $[]> (_t1544, refPos1243);
      real _t1546 = prim -0026<$[]> (_t1540, _t1545);
      real _t1547 = -0.1e1;
      real _t1548 = 0.e0;
      real _t1549 = 0.e0;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, dPos1244);
      faceTime1447 = prim /0055 (_t1546, _t154B);
    }
  }
  real _t154C = -0.5e0;
  real _t154D = 0.e0;
  real _t154E = -0.1e1;
  real _t154F = 0.e0;
  vec3 _t1550 = [_t154D, _t154E, _t154F];
  real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, refPos1243);
  real _t1552 = prim -0026<$[]> (_t154C, _t1551);
  real _t1553 = 0.e0;
  real _t1554 = -0.1e1;
  real _t1555 = 0.e0;
  vec3 _t1556 = [_t1553, _t1554, _t1555];
  real _t1557 = prim •00CE<$[3]; $[3]; $[]> (_t1556, dPos1244);
  real _t1558 = prim /0055 (_t1552, _t1557);
  real _t1559 = -0.1e-15;
  bool _t155A = prim >=007E (_t1558, _t1559);
  real _t155B = -0.5e0;
  real _t155C = 0.e0;
  real _t155D = -0.1e1;
  real _t155E = 0.e0;
  vec3 _t155F = [_t155C, _t155D, _t155E];
  real _t1560 = prim •00CE<$[3]; $[3]; $[]> (_t155F, refPos1243);
  real _t1561 = prim -0026<$[]> (_t155B, _t1560);
  real _t1562 = 0.e0;
  real _t1563 = -0.1e1;
  real _t1564 = 0.e0;
  vec3 _t1565 = [_t1562, _t1563, _t1564];
  real _t1566 = prim •00CE<$[3]; $[3]; $[]> (_t1565, dPos1244);
  real _t1567 = prim /0055 (_t1561, _t1566);
  bool _t1568 = prim >0080 (time1445, _t1567);
  real _t1569 = 0.e0;
  real _t156A = -0.1e1;
  real _t156B = 0.e0;
  vec3 _t156C = [_t1569, _t156A, _t156B];
  real _t156D = prim •00CE<$[3]; $[3]; $[]> (_t156C, dPos1244);
  real _t156E = prim |()|00B5<$[]> (_t156D);
  real _t156F = 0.1e-20;
  bool _t1570 = prim >=007E (_t156E, _t156F);
  bool _t1571 = prim $and01C4 (_t1568, _t1570);
  bool _t1572 = prim $and01C4 (_t155A, _t1571);
  if _t1572 {
    int _t1573 = 4;
    bool _t1574 = prim !=0086 (i1444, _t1573);
    if _t1574 {
      real _t1575 = -0.5e0;
      real _t1576 = 0.e0;
      real _t1577 = -0.1e1;
      real _t1578 = 0.e0;
      vec3 _t1579 = [_t1576, _t1577, _t1578];
      real _t157A = prim •00CE<$[3]; $[3]; $[]> (_t1579, refPos1243);
      real _t157B = prim -0026<$[]> (_t1575, _t157A);
      real _t157C = 0.e0;
      real _t157D = -0.1e1;
      real _t157E = 0.e0;
      vec3 _t157F = [_t157C, _t157D, _t157E];
      real _t1580 = prim •00CE<$[3]; $[3]; $[]> (_t157F, dPos1244);
      time1445 = prim /0055 (_t157B, _t1580);
      face1446 = 4;
    } else {
      real _t1581 = -0.5e0;
      real _t1582 = 0.e0;
      real _t1583 = -0.1e1;
      real _t1584 = 0.e0;
      vec3 _t1585 = [_t1582, _t1583, _t1584];
      real _t1586 = prim •00CE<$[3]; $[3]; $[]> (_t1585, refPos1243);
      real _t1587 = prim -0026<$[]> (_t1581, _t1586);
      real _t1588 = 0.e0;
      real _t1589 = -0.1e1;
      real _t158A = 0.e0;
      vec3 _t158B = [_t1588, _t1589, _t158A];
      real _t158C = prim •00CE<$[3]; $[3]; $[]> (_t158B, dPos1244);
      faceTime1447 = prim /0055 (_t1587, _t158C);
    }
  }
  real _t158D = -0.5e0;
  real _t158E = 0.1e1;
  real _t158F = 0.e0;
  real _t1590 = -0.e0;
  vec3 _t1591 = [_t158E, _t158F, _t1590];
  real _t1592 = prim •00CE<$[3]; $[3]; $[]> (_t1591, refPos1243);
  real _t1593 = prim -0026<$[]> (_t158D, _t1592);
  real _t1594 = 0.1e1;
  real _t1595 = 0.e0;
  real _t1596 = -0.e0;
  vec3 _t1597 = [_t1594, _t1595, _t1596];
  real _t1598 = prim •00CE<$[3]; $[3]; $[]> (_t1597, dPos1244);
  real _t1599 = prim /0055 (_t1593, _t1598);
  real _t159A = -0.1e-15;
  bool _t159B = prim >=007E (_t1599, _t159A);
  real _t159C = -0.5e0;
  real _t159D = 0.1e1;
  real _t159E = 0.e0;
  real _t159F = -0.e0;
  vec3 _t15A0 = [_t159D, _t159E, _t159F];
  real _t15A1 = prim •00CE<$[3]; $[3]; $[]> (_t15A0, refPos1243);
  real _t15A2 = prim -0026<$[]> (_t159C, _t15A1);
  real _t15A3 = 0.1e1;
  real _t15A4 = 0.e0;
  real _t15A5 = -0.e0;
  vec3 _t15A6 = [_t15A3, _t15A4, _t15A5];
  real _t15A7 = prim •00CE<$[3]; $[3]; $[]> (_t15A6, dPos1244);
  real _t15A8 = prim /0055 (_t15A2, _t15A7);
  bool _t15A9 = prim >0080 (time1445, _t15A8);
  real _t15AA = 0.1e1;
  real _t15AB = 0.e0;
  real _t15AC = -0.e0;
  vec3 _t15AD = [_t15AA, _t15AB, _t15AC];
  real _t15AE = prim •00CE<$[3]; $[3]; $[]> (_t15AD, dPos1244);
  real _t15AF = prim |()|00B5<$[]> (_t15AE);
  real _t15B0 = 0.1e-20;
  bool _t15B1 = prim >=007E (_t15AF, _t15B0);
  bool _t15B2 = prim $and01C4 (_t15A9, _t15B1);
  bool _t15B3 = prim $and01C4 (_t159B, _t15B2);
  if _t15B3 {
    int _t15B4 = 5;
    bool _t15B5 = prim !=0086 (i1444, _t15B4);
    if _t15B5 {
      real _t15B6 = -0.5e0;
      real _t15B7 = 0.1e1;
      real _t15B8 = 0.e0;
      real _t15B9 = -0.e0;
      vec3 _t15BA = [_t15B7, _t15B8, _t15B9];
      real _t15BB = prim •00CE<$[3]; $[3]; $[]> (_t15BA, refPos1243);
      real _t15BC = prim -0026<$[]> (_t15B6, _t15BB);
      real _t15BD = 0.1e1;
      real _t15BE = 0.e0;
      real _t15BF = -0.e0;
      vec3 _t15C0 = [_t15BD, _t15BE, _t15BF];
      real _t15C1 = prim •00CE<$[3]; $[3]; $[]> (_t15C0, dPos1244);
      time1445 = prim /0055 (_t15BC, _t15C1);
      face1446 = 5;
    } else {
      real _t15C2 = -0.5e0;
      real _t15C3 = 0.1e1;
      real _t15C4 = 0.e0;
      real _t15C5 = -0.e0;
      vec3 _t15C6 = [_t15C3, _t15C4, _t15C5];
      real _t15C7 = prim •00CE<$[3]; $[3]; $[]> (_t15C6, refPos1243);
      real _t15C8 = prim -0026<$[]> (_t15C2, _t15C7);
      real _t15C9 = 0.1e1;
      real _t15CA = 0.e0;
      real _t15CB = -0.e0;
      vec3 _t15CC = [_t15C9, _t15CA, _t15CB];
      real _t15CD = prim •00CE<$[3]; $[3]; $[]> (_t15CC, dPos1244);
      faceTime1447 = prim /0055 (_t15C8, _t15CD);
    }
  }
  int _t15CE = -1;
  bool _t15CF = prim !=0086 (face1446, _t15CE);
  if _t15CF {
    real _t15D0 = 0.e0;
    real _t15D1 = prim max0125 (time1445, _t15D0);
    real _t15D2 = (real)face1446;
    vec2 _t15D3 = [_t15D1, _t15D2];
    return _t15D3;
  } else {
    real _t15D4 = -inf;
    bool _t15D5 = prim ==0084 (_t15D4, faceTime1447);
    if _t15D5 {
      real _t15D6 = -0.1e1;
      real _t15D7 = -0.1e1;
      vec2 _t15D8 = [_t15D6, _t15D7];
      return _t15D8;
    } else {
      real _t15D9 = (real)i1444;
      vec2 _t15DA = [faceTime1447, _t15D9];
      return _t15DA;
    }
  }
}
function Femdata: Mesh#0 domain15DB (Femdata: Space arg015DC)
{
  Femdata: Mesh _t15DD = extractFem(arg015DC, Mesh);
  return _t15DD;
}
function Femdata: Space#0 space15DE (Femdata: FemFunc arg015DF)
{
  Femdata: Space _t15E0 = extractFem(arg015DF, Space);
  return _t15E0;
}
function Femdata: FuncCell#3 funcCell15E1 (Femdata: FemFunc arg015E2, Femdata: MeshCell arg115E3)
{
  int _t15E4 = extractFemItem(CellIndex(MeshCell), int, arg115E3);
  Femdata: FuncCell _t15E5 = loadFem(FuncCell, arg015E2, _t15E4);
  return _t15E5;
}
function real#1 atent160C (real a0160D, real d160E)
{
  real _t160F = 0.e0;
  real _t1610 = 0.1e1;
  real _t1611 = 0.15e1;
  real _t1612 = 0.1e1;
  real _t1613 = prim |()|00B5<$[]> (d160E);
  real _t1614 = prim /0055 (_t1613, thick0525);
  real _t1615 = prim -0026<$[]> (_t1612, _t1614);
  real _t1616 = prim *0034 (_t1611, _t1615);
  real _t1617 = prim clamp0094<$[]> (_t160F, _t1610, _t1616);
  real _t1618 = prim *0034 (a0160D, _t1617);
  return _t1618;
}
function vec3#1 fStep1619 (vec3 x161A)
{
  bool _t161B = prim !00BC (analytical053F);
  if _t161B {
    field(3)[3] _t161C = prim ∇00A8<#∞; %3> (F15EE);
    field(3)[3,3] _t161D = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t161C);
    tensor[3,3] _t161E = prim @00A5<#∞; %3; $[3,3]> (_t161D, x161A);
    vec3[3] E161F = prim evecs00A0 (_t161E);
    field(3)[3] _t1620 = prim ∇00A8<#∞; %3> (F15EE);
    field(3)[3,3] _t1621 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1620);
    tensor[3,3] _t1622 = prim @00A5<#∞; %3; $[3,3]> (_t1621, x161A);
    real[3] L1623 = prim evals009F (_t1622);
    int _t1624 = 2;
    vec3 _t1625 = prim $sub01C0<vec3; %3> (E161F, _t1624);
    int _t1626 = 2;
    vec3 _t1627 = prim $sub01C0<vec3; %3> (E161F, _t1626);
    tensor[3,3] _t1628 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1625, _t1627);
    int _t1629 = 2;
    real _t162A = prim $sub01C0<real; %3> (L1623, _t1629);
    tensor[3,3] _t162B = prim /0057<$[3,3]> (_t1628, _t162A);
    int _t162C = 1;
    vec3 _t162D = prim $sub01C0<vec3; %3> (E161F, _t162C);
    int _t162E = 1;
    vec3 _t162F = prim $sub01C0<vec3; %3> (E161F, _t162E);
    tensor[3,3] _t1630 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t162D, _t162F);
    int _t1631 = 1;
    real _t1632 = prim $sub01C0<real; %3> (L1623, _t1631);
    tensor[3,3] _t1633 = prim /0057<$[3,3]> (_t1630, _t1632);
    tensor[3,3] _t1634 = prim +0017<$[3,3]> (_t162B, _t1633);
    tensor[3,3] _t1635 = prim unary -008B<$[3,3]> (_t1634);
    field(3)[3] _t1636 = prim ∇00A8<#∞; %3> (F15EE);
    vec3 _t1637 = prim @00A5<#∞; %3; $[3]> (_t1636, x161A);
    vec3 _t1638 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1635, _t1637);
    return _t1638;
  } else {
    field#1(3)[3] _t1639 = prim ∇00A8<#2; %3> (G160B);
    field#0(3)[3,3] _t163A = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1639);
    tensor[3,3] _t163B = prim @00A5<#0; %3; $[3,3]> (_t163A, x161A);
    vec3[3] E163C = prim evecs00A0 (_t163B);
    field#1(3)[3] _t163D = prim ∇00A8<#2; %3> (G160B);
    field#0(3)[3,3] _t163E = prim ∇⊗00AD<#1; %3; $[]; %3> (_t163D);
    tensor[3,3] _t163F = prim @00A5<#0; %3; $[3,3]> (_t163E, x161A);
    real[3] L1640 = prim evals009F (_t163F);
    int _t1641 = 2;
    vec3 _t1642 = prim $sub01C0<vec3; %3> (E163C, _t1641);
    int _t1643 = 2;
    vec3 _t1644 = prim $sub01C0<vec3; %3> (E163C, _t1643);
    tensor[3,3] _t1645 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1642, _t1644);
    int _t1646 = 2;
    real _t1647 = prim $sub01C0<real; %3> (L1640, _t1646);
    tensor[3,3] _t1648 = prim /0057<$[3,3]> (_t1645, _t1647);
    int _t1649 = 1;
    vec3 _t164A = prim $sub01C0<vec3; %3> (E163C, _t1649);
    int _t164B = 1;
    vec3 _t164C = prim $sub01C0<vec3; %3> (E163C, _t164B);
    tensor[3,3] _t164D = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t164A, _t164C);
    int _t164E = 1;
    real _t164F = prim $sub01C0<real; %3> (L1640, _t164E);
    tensor[3,3] _t1650 = prim /0057<$[3,3]> (_t164D, _t164F);
    tensor[3,3] _t1651 = prim +0017<$[3,3]> (_t1648, _t1650);
    tensor[3,3] _t1652 = prim unary -008B<$[3,3]> (_t1651);
    field#1(3)[3] _t1653 = prim ∇00A8<#2; %3> (G160B);
    vec3 _t1654 = prim @00A5<#1; %3; $[3]> (_t1653, x161A);
    vec3 _t1655 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1652, _t1654);
    return _t1655;
  }
}
function real#1 fStrength1656 (vec3 x1657)
{
  field(3)[3] _t1658 = prim ∇00A8<#∞; %3> (F15EE);
  field(3)[3,3] _t1659 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1658);
  tensor[3,3] _t165A = prim @00A5<#∞; %3; $[3,3]> (_t1659, x1657);
  real[3] _t165B = prim evals009F (_t165A);
  int _t165C = 1;
  real _t165D = prim $sub01C0<real; %3> (_t165B, _t165C);
  real _t165E = prim unary -008B<$[]> (_t165D);
  field(3)[3] _t165F = prim ∇00A8<#∞; %3> (F15EE);
  vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (_t165F, x1657);
  real _t1661 = prim |()|00B5<$[3]> (_t1660);
  real _t1662 = prim +0017<$[]> (fBias0528, _t1661);
  real _t1663 = prim /0055 (_t165E, _t1662);
  return _t1663;
}
function bool#1 fTest1664 (vec3 x1665)
{
  bool _t1666 = true;
  return _t1666;
}
function real#1 fMask1667 (vec3 x1668)
{
  real _t1669 = 0.1e1;
  return _t1669;
}
function bool#1 posTest166A (vec3 x166B)
{
  bool _t166C;
  Femdata: RefCell _t166D = func refcell057C (block04FD);
  real _t166E = 0.1e-8;
  bool _t166F = extractFemItemN((_t166D, x166B, _t166E),InsideInsert(File=checkInside.in)(Mesh),);
  if _t166F {
    bool _t1670;
    real _t1671 = func fStrength1656 (x166B);
    bool _t1672 = prim >0080 (_t1671, fStrTh0526);
    if _t1672 {
      bool _t1673;
      real _t1674 = func fMask1667 (x166B);
      bool _t1675 = prim >=007E (_t1674, fMaskTh0527);
      if _t1675 {
        _t1673 = func fTest1664 (x166B);
      } else {
        _t1673 = false;
      }
      _t1670 = _t1673;
    } else {
      _t1670 = false;
    }
    _t166C = _t1670;
  } else {
    _t166C = false;
  }
  return _t166C;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115E6 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15E7 = func funcCell15E1 (U050B, c115E6);
  Femdata: FemFunc _t15E8 = extractFem(_t15E7, FemFunc);
  Femdata: FuncCell _t15E9 = func funcCell15E1 (U050B, c115E6);
  Femdata: FemFunc _t15EA = extractFem(_t15E9, FemFunc);
  Femdata: Space _t15EB = extractFem(_t15EA, Space);
  Femdata: FuncCell _t15EC = func funcCell15E1 (U050B, c115E6);
  int _t15ED = extractFemItem(CellIndex(FuncCell), int, _t15EC);
  F15EE = femField(_t15E8,_t15ED,field(3)[],refField,);
  kernel _t15EF = tent;
  IMAGE1D<double[3]> img15F0 = clamp(cmap050F);
  CM15F1 = prim ⊛0074<#0; %1; $[3]> (_t15EF, img15F0);
  C15F2 = F15EE;
  vec3 _t15F3 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN15F4 = prim normalize0137<$[3]> (_t15F3);
  vec3 _t15F5 = prim ×00BE (camN15F4, camUp0518);
  camU15F6 = prim normalize0137<$[3]> (_t15F5);
  camV15F7 = prim ×00BE (camN15F4, camU15F6);
  vec3 _t15F8 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist15F9 = prim |()|00B5<$[3]> (_t15F8);
  real _t15FA = 0.314159265358979323846264338327950288e1;
  real _t15FB = prim *0034 (camFOV051E, _t15FA);
  real _t15FC = 0.36e3;
  real _t15FD = prim /0055 (_t15FB, _t15FC);
  real _t15FE = prim tan0179 (_t15FD);
  camVmax15FF = prim *0034 (_t15FE, camDist15F9);
  real _t1600 = (real)iresU0520;
  real _t1601 = prim *0034 (camVmax15FF, _t1600);
  real _t1602 = (real)iresV0521;
  camUmax1603 = prim /0055 (_t1601, _t1602);
  camNearVsp1604 = prim +0017<$[]> (camNear051C, camDist15F9);
  camFarVsp1605 = prim +0017<$[]> (camFar051D, camDist15F9);
  tensor[3,3] _t1606 = [camU15F6, camV15F7, camN15F4];
  tensor[3,3] _t1607 = prim transpose0145<%3; %3> (_t1606);
  vec3 _t1608 = prim normalize0137<$[3]> (litdir0538);
  litwsp1609 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1607, _t1608);
  kernel _t160A = bspln3;
  G160B = prim ⊛0070<#2; %3; $[]> (umm0541, _t160A);
}
strand ray (int ui1676, int vi1677) {
  real rayU1678;
  real rayV167F;
  real rayN1686;
  vec3 UV1687;
  vec3 rayOrig168A;
  vec3 rayVec168F;
  real alphaFix1694;
  vec3 eyeDir1697;
  real phKa1699;
  real phKd169A;
  real phKs169B;
  real phSp169C;
  output vec4 rgba169D;
  output real raw16A2;
  vec3 rgb16A3;
  real transp16A7;
  {
    real _t1679 = prim unary -008B<$[]> (camUmax1603);
    real _t167A = -0.5e0;
    real _t167B = (real)ui1676;
    real _t167C = (real)iresU0520;
    real _t167D = 0.5e0;
    real _t167E = prim -0026<$[]> (_t167C, _t167D);
    rayU1678 = prim lerp0098<$[]> (_t1679, camUmax1603, _t167A, _t167B, _t167E);
    real _t1680 = prim unary -008B<$[]> (camVmax15FF);
    real _t1681 = -0.5e0;
    real _t1682 = (real)vi1677;
    real _t1683 = (real)iresV0521;
    real _t1684 = 0.5e0;
    real _t1685 = prim -0026<$[]> (_t1683, _t1684);
    rayV167F = prim lerp0098<$[]> (_t1680, camVmax15FF, _t1681, _t1682, _t1685);
    rayN1686 = camNearVsp1604;
    vec3 _t1688 = prim *0036<$[3]> (rayU1678, camU15F6);
    vec3 _t1689 = prim *0036<$[3]> (rayV167F, camV15F7);
    UV1687 = prim +0017<$[3]> (_t1688, _t1689);
    vec3 _t168B;
    if camOrtho051F {
      _t168B = UV1687;
    } else {
      real _t168C = 0.e0;
      real _t168D = 0.e0;
      real _t168E = 0.e0;
      _t168B = [_t168C, _t168D, _t168E];
    }
    rayOrig168A = prim +0017<$[3]> (camEye0510, _t168B);
    vec3 _t1690;
    if camOrtho051F {
      real _t1691 = 0.e0;
      real _t1692 = 0.e0;
      real _t1693 = 0.e0;
      _t1690 = [_t1691, _t1692, _t1693];
    } else {
      _t1690 = prim /0057<$[3]> (UV1687, camDist15F9);
    }
    rayVec168F = prim +0017<$[3]> (camN15F4, _t1690);
    real _t1695 = prim |()|00B5<$[3]> (rayVec168F);
    real _t1696 = prim *0034 (_t1695, rayStep0522);
    alphaFix1694 = prim /0055 (_t1696, refStep0523);
    vec3 _t1698 = prim normalize0137<$[3]> (rayVec168F);
    eyeDir1697 = prim unary -008B<$[3]> (_t1698);
    phKa1699 = phong052B[0];
    phKd169A = phong052B[1];
    phKs169B = phong052B[2];
    phSp169C = phong052B[3];
    real _t169E = 0.e0;
    real _t169F = 0.e0;
    real _t16A0 = 0.e0;
    real _t16A1 = 0.e0;
    rgba169D = [_t169E, _t169F, _t16A0, _t16A1];
    raw16A2 = 0.e0;
    real _t16A4 = 0.e0;
    real _t16A5 = 0.e0;
    real _t16A6 = 0.e0;
    rgb16A3 = [_t16A4, _t16A5, _t16A6];
    transp16A7 = 0.1e1;
  }
  update
  {
    rayN1686 = prim +0017<$[]> (rayN1686, rayStep0522);
    bool _t16A8 = prim >0080 (rayN1686, camFarVsp1605);
    if _t16A8 {
      stabilize;
    }
    vec3 _t16A9 = prim *0036<$[3]> (rayN1686, rayVec168F);
    vec3 pos16AA = prim +0017<$[3]> (rayOrig168A, _t16A9);
    bool _t16AB = func posTest166A (pos16AA);
    bool _t16AC = prim !00BC (_t16AB);
    if _t16AC {
      continue;
    }
    vec3 step16AD = func fStep1619 (pos16AA);
    real _t16AE = prim |()|00B5<$[3]> (step16AD);
    real aa16AF = func atent160C (maxAlpha0529, _t16AE);
    real _t16B0 = 0.e0;
    bool _t16B1 = prim ==0084 (aa16AF, _t16B0);
    if _t16B1 {
      continue;
    }
    real _t16B2 = 0.1e1;
    real _t16B3 = 0.1e1;
    real _t16B4 = prim -0026<$[]> (_t16B3, aa16AF);
    real _t16B5 = prim ^0069 (_t16B4, alphaFix1694);
    aa16AF = prim -0026<$[]> (_t16B2, _t16B5);
    vec3 _t16B6 = prim normalize0137<$[3]> (step16AD);
    vec3 snorm16B7 = prim unary -008B<$[3]> (_t16B6);
    real _t16B8 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, litwsp1609);
    int _t16B9 = 2;
    real dcomp16BA = prim ^0068 (_t16B8, _t16B9);
    real scomp16BB = 0.e0;
    real _t16BC = 0.e0;
    bool _t16BD = prim !=0088 (phKs169B, _t16BC);
    if _t16BD {
      vec3 _t16BE = prim +0017<$[3]> (eyeDir1697, litwsp1609);
      vec3 _t16BF = prim normalize0137<$[3]> (_t16BE);
      real _t16C0 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, _t16BF);
      real _t16C1 = prim |()|00B5<$[]> (_t16C0);
      scomp16BB = prim ^0069 (_t16C1, phSp169C);
    }
    vec3 dcol16C2 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1604, rayN1686, camFarVsp1605);
    real cmin16C3 = cminmax053C[0];
    real cmax16C4 = cminmax053C[1];
    real _t16C5 = 0.1e1;
    real _t16C6 = 0.1e1;
    real _t16C7 = 0.1e1;
    vec3 mcol16C8 = [_t16C5, _t16C6, _t16C7];
    bool _t16C9 = prim !=0088 (cmin16C3, cmax16C4);
    if _t16C9 {
      real _t16CA = 0.e0;
      real _t16CB = 0.1e1;
      vec3 _t16CC = prim +0017<$[3]> (pos16AA, step16AD);
      real _t16CD = prim @00A5<#∞; %3; $[]> (C15F2, _t16CC);
      real _t16CE = prim lerp0098<$[]> (_t16CA, _t16CB, cmin16C3, _t16CD, cmax16C4);
      mcol16C8 = prim @00A5<#0; %1; $[3]> (CM15F1, _t16CE);
    }
    real _t16CF = prim *0034 (transp16A7, aa16AF);
    real _t16D0 = prim *0034 (phKd169A, dcomp16BA);
    real _t16D1 = prim +0017<$[]> (phKa1699, _t16D0);
    vec3 _t16D2 = prim modulate0129<%3> (dcol16C2, mcol16C8);
    vec3 _t16D3 = prim *0036<$[3]> (_t16D1, _t16D2);
    real _t16D4 = prim *0034 (phKs169B, scomp16BB);
    real _t16D5 = 0.1e1;
    real _t16D6 = 0.1e1;
    real _t16D7 = 0.1e1;
    vec3 _t16D8 = [_t16D5, _t16D6, _t16D7];
    vec3 _t16D9 = prim *0036<$[3]> (_t16D4, _t16D8);
    vec3 _t16DA = prim +0017<$[3]> (_t16D3, _t16D9);
    vec3 _t16DB = prim *0036<$[3]> (_t16CF, _t16DA);
    rgb16A3 = prim +0017<$[3]> (rgb16A3, _t16DB);
    real _t16DC = 0.1e1;
    real _t16DD = prim -0026<$[]> (_t16DC, aa16AF);
    transp16A7 = prim *0034 (transp16A7, _t16DD);
    bool _t16DE = prim <007A (transp16A7, transp00524);
    if _t16DE {
      transp16A7 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t16DF = 0.1e1;
    bool _t16E0 = prim <007A (transp16A7, _t16DF);
    if _t16E0 {
      real _t16E1 = 0.1e1;
      real aa16E2 = prim -0026<$[]> (_t16E1, transp16A7);
      real _t16E3 = rgb16A3[0];
      real _t16E4 = prim /0055 (_t16E3, aa16E2);
      real _t16E5 = rgb16A3[1];
      real _t16E6 = prim /0055 (_t16E5, aa16E2);
      real _t16E7 = rgb16A3[2];
      real _t16E8 = prim /0055 (_t16E7, aa16E2);
      rgba169D = [_t16E4, _t16E6, _t16E8, aa16E2];
    }
  }
}
grid(2) {
  int _t16E9 = 0;
  int _t16EA = 1;
  int _t16EB = prim -0024 (iresV0521, _t16EA);
  int[] _t16EC = prim $range01C3 (_t16E9, _t16EB);
  foreach vi16F2 in _t16EC {
    int _t16ED = 0;
    int _t16EE = 1;
    int _t16EF = prim -0024 (iresU0520, _t16EE);
    int[] _t16F0 = prim $range01C3 (_t16ED, _t16EF);
    foreach ui16F1 in _t16F0 {
      new ray (ui16F1, vi16F2);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115E6;
global field(3)[] F15EE;
global field#0(1)[3] CM15F1;
global field(3)[] C15F2;
global vec3 camN15F4;
global vec3 camU15F6;
global vec3 camV15F7;
global real camDist15F9;
global real camVmax15FF;
global real camUmax1603;
global real camNearVsp1604;
global real camFarVsp1605;
global vec3 litwsp1609;
global field#2(3)[] G160B;
function bool#0 !=0542 (Femdata: MeshCell cell10543, Femdata: MeshCell cell10544)
{
  int _t0545 = extractFemItem(CellIndex(Mesh), int, cell10543);
  int _t0546 = extractFemItem(CellIndex(Mesh), int, cell10544);
  bool _t0547 = prim !=0086 (_t0545, _t0546);
  return _t0547;
}
function bool#0 ==0548 (Femdata: MeshCell cell10543, Femdata: MeshCell cell10544)
{
  int _t0549 = extractFemItem(CellIndex(Mesh), int, cell10543);
  int _t054A = extractFemItem(CellIndex(Mesh), int, cell10544);
  bool _t054B = prim ==0082 (_t0549, _t054A);
  return _t054B;
}
function Femdata: MeshPos#0 findPos054C (Femdata: Mesh mesh054D, vec3 pos054E)
{
  real _t054F = 0.e0;
  real _t0550 = 0.e0;
  real _t0551 = 0.e0;
  xn0552 = [_t054F, _t0550, _t0551];
  newtonInt0553 = 0;
  cellInt0554 = extractFemItem(StartCell(Mesh), int, mesh054D);
  int _t0555 = extractFemItem(NumCell(Mesh), int, mesh054D);
  int _t0556 = 1;
  numCell0557 = prim -0024 (_t0555, _t0556);
  int _t0558 = 0;
  int _t0559 = 2;
  int _t055A = 1;
  int _t055B = prim +0015 (_t0559, _t055A);
  int _t055C = prim *0033 (_t055B, numCell0557);
  int[] _t055D = prim $range01C3 (_t0558, _t055C);
  foreach itter0578 in _t055D {
    field(3)[3] _t055E = femField(mesh054D,cellInt0554,field(3)[3],Transform,);
    field(3)[3,3] _t055F = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t055E);
    field(3)[3,3] _t0560 = prim inv015E<#∞; %3> (_t055F);
    real _t0561 = 0.e0;
    real _t0562 = 0.e0;
    real _t0563 = 0.e0;
    vec3 _t0564 = [_t0561, _t0562, _t0563];
    A0565 = prim @00A5<#∞; %3; $[3,3]> (_t0560, _t0564);
    field(3)[3] _t0566 = femField(mesh054D,cellInt0554,field(3)[3],Transform,);
    field(3)[3] _t0567 = prim -002E<#∞; %3; $[3]> (_t0566, pos054E);
    field(3)[3] _t0568 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0565, _t0567);
    delta0569 = prim @00A5<#∞; %3; $[3]> (_t0568, xn0552);
    xn0552 = prim -0026<$[3]> (xn0552, delta0569);
    real _t056A = 0.1e-7;
    real _t056B = 0.1e-7;
    real _t056C = prim *0034 (_t056A, _t056B);
    real _t056D = prim •00CE<$[3]; $[3]; $[]> (delta0569, delta0569);
    bool _t056E = prim >=007E (_t056C, _t056D);
    if _t056E {
      real _t056F = 0.1e-8;
      bool _t0570 = extractFemItemN((mesh054D, xn0552, _t056F),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0570 {
        Femdata: MeshPos _t0571 = extractFemItemN((mesh054D, cellInt0554, xn0552, pos054E),AllBuild(MeshPos),);
        return _t0571;
      }
    }
    int _t0572 = 1;
    newtonInt0553 = prim +0015 (newtonInt0553, _t0572);
    int _t0573 = 2;
    bool _t0574 = prim >=007D (newtonInt0553, _t0573);
    if _t0574 {
      newtonInt0553 = 0;
      bool _t0575 = prim >=007D (cellInt0554, numCell0557);
      if _t0575 {
        Femdata: MeshPos _t0576 = extractFemItemN((mesh054D),InvalidBuild(MeshPos),);
        return _t0576;
      } else {
        int _t0577 = 1;
        cellInt0554 = prim +0015 (cellInt0554, _t0577);
      }
    }
  }
  string _t0579 = "Bad end 2";
  string _t057A = "\n";
  print (_t0579, _t057A);
  Femdata: MeshPos _t057B = extractFemItemN((mesh054D),InvalidBuild(MeshPos),);
  return _t057B;
}
function Femdata: RefCell#1 refcell057C (Femdata: Mesh arg0057D)
{
  Femdata: RefCell _t057E = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0057D);
  return _t057E;
}
function Femdata: MeshCell[]#0 cells057F (Femdata: Mesh arg00580)
{
  Femdata: MeshCell[] _t0581 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00580);
  return _t0581;
}
function Femdata: MeshCell[]#0 cells0582 (Femdata: Mesh arg00580)
{
  int _t0583 = 0;
  int _t0584 = extractFemItem(NumCell(Mesh), int, arg00580);
  int[] _t0585 = prim $range01C3 (_t0583, _t0584);
  Femdata: MeshCell[] accum0588 = {};
  foreach i0586 in _t0585 {
    Femdata: MeshCell _t0587 = loadFem(MeshCell, arg00580, i0586);
    accum0588 = prim @0010<Femdata: MeshCell> (accum0588, _t0587);
  }
  return accum0588;
}
function int#0 numCell0589 (Femdata: Mesh arg0057D)
{
  int _t058A = extractFemItem(NumCell(Mesh), int, arg0057D);
  return _t058A;
}
function tensor[3,3,3,3]#0 mesh_t_transform_3058B (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t058F = femField(mesh058E,cell058D,field(3)[3],Transform,);
  field(3)[3,3] _t0590 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t058F);
  field(3)[3,3,3] _t0591 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0590);
  field(3)[3,3,3,3] _t0592 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0591);
  tensor[3,3,3,3] _t0593 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0592, pos058C);
  return _t0593;
}
function tensor[3,3,3]#0 mesh_t_transform_20594 (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t0595 = femField(mesh058E,cell058D,field(3)[3],Transform,);
  field(3)[3,3] _t0596 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0595);
  field(3)[3,3,3] _t0597 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0596);
  tensor[3,3,3] _t0598 = prim @00A5<#∞; %3; $[3,3,3]> (_t0597, pos058C);
  return _t0598;
}
function tensor[3,3]#0 mesh_t_transform_10599 (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t059A = femField(mesh058E,cell058D,field(3)[3],Transform,);
  field(3)[3,3] _t059B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t059A);
  tensor[3,3] _t059C = prim @00A5<#∞; %3; $[3,3]> (_t059B, pos058C);
  return _t059C;
}
function vec3#2 mesh_t_transform_0059D (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t059E = femField(mesh058E,cell058D,field(3)[3],Transform,);
  vec3 _t059F = prim @00A5<#∞; %3; $[3]> (_t059E, pos058C);
  return _t059F;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse05A0 (vec3 pos05A1, int cellInt05A2, Femdata: Mesh mesh05A3)
{
  real _t05A4 = 0.e0;
  real _t05A5 = 0.e0;
  real _t05A6 = 0.e0;
  xn05A7 = [_t05A4, _t05A5, _t05A6];
  field(3)[3] _t05A8 = femField(mesh05A3,cellInt05A2,field(3)[3],Transform,);
  field(3)[3,3] _t05A9 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05A8);
  field(3)[3,3] _t05AA = prim inv015E<#∞; %3> (_t05A9);
  real _t05AB = 0.e0;
  real _t05AC = 0.e0;
  real _t05AD = 0.e0;
  vec3 _t05AE = [_t05AB, _t05AC, _t05AD];
  A05AF = prim @00A5<#∞; %3; $[3,3]> (_t05AA, _t05AE);
  int _t05B0 = 0;
  int _t05B1 = 2;
  int[] _t05B2 = prim $range01C3 (_t05B0, _t05B1);
  foreach itter05C0 in _t05B2 {
    field(3)[3] _t05B3 = femField(mesh05A3,cellInt05A2,field(3)[3],Transform,);
    field(3)[3] _t05B4 = prim -002E<#∞; %3; $[3]> (_t05B3, pos05A1);
    field(3)[3] _t05B5 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A05AF, _t05B4);
    delta05B6 = prim @00A5<#∞; %3; $[3]> (_t05B5, xn05A7);
    xn05A7 = prim -0026<$[3]> (xn05A7, delta05B6);
    real _t05B7 = 0.1e-7;
    real _t05B8 = 0.1e-7;
    real _t05B9 = prim *0034 (_t05B7, _t05B8);
    real _t05BA = prim •00CE<$[3]; $[3]; $[]> (delta05B6, delta05B6);
    bool _t05BB = prim >=007E (_t05B9, _t05BA);
    if _t05BB {
      real _t05BC = 0.1e-8;
      bool _t05BD = extractFemItemN((mesh05A3, xn05A7, _t05BC),InsideInsert(File=checkInside.in)(Mesh),);
      if _t05BD {
        Femdata: MeshPos _t05BE = extractFemItemN((mesh05A3, cellInt05A2, xn05A7, pos05A1),AllBuild(MeshPos),);
        return _t05BE;
      } else {
        Femdata: MeshPos _t05BF = extractFemItemN((mesh05A3),InvalidBuild(MeshPos),);
        return _t05BF;
      }
    }
  }
  Femdata: MeshPos _t05C1 = extractFemItemN((mesh05A3),InvalidBuild(MeshPos),);
  return _t05C1;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos05C2 (Femdata: MeshPos pos05C3)
{
  bool _t05C4 = extractFemItem(WorldTest(MeshPos), bool, pos05C3);
  if _t05C4 {
    vec3 _t05C5 = extractFemItem(RefPos(MeshPos), vec3, pos05C3);
    int _t05C6 = extractFemItem(CellIndex(MeshPos), int, pos05C3);
    Femdata: Mesh _t05C7 = extractFem(pos05C3, Mesh);
    vec3 _t05C8 = func mesh_t_transform_0059D (_t05C5, _t05C6, _t05C7);
    Femdata: MeshPos _t05C9 = extractFemItemN((pos05C3, _t05C8),NewWorld(MeshPos),);
    return _t05C9;
  } else {
    return pos05C3;
  }
}
function vec3#0 worldPos05CA (Femdata: MeshPos pos05C3)
{
  vec3 _t05CB = extractFemItem(RefPos(MeshPos), vec3, pos05C3);
  int _t05CC = extractFemItem(CellIndex(MeshPos), int, pos05C3);
  Femdata: Mesh _t05CD = extractFem(pos05C3, Mesh);
  vec3 _t05CE = func mesh_t_transform_0059D (_t05CB, _t05CC, _t05CD);
  return _t05CE;
}
function Femdata: MeshPos#0 $exitPos05CF (Femdata: Mesh mesh05D0, int cellId05D1, vec3 refPos05D2, vec3 dPos05D3, real[2] time05D4)
{
  int _t05D5 = -1;
  real _t05D6 = time05D4[1];
  int _t05D7 = prim $r2i01B7 (_t05D6);
  int[2] _t05D9 = func nextCell405D8 (_t05D7, cellId05D1, mesh05D0);
  int _t05DA = 0;
  int _t05DB = prim $sub01C0<int; %2> (_t05D9, _t05DA);
  bool _t05DC = prim !=0086 (_t05D5, _t05DB);
  if _t05DC {
    string _t05DD = "face ";
    real _t05DE = time05D4[1];
    int _t05DF = prim $r2i01B7 (_t05DE);
    string _t05E0 = " to ";
    real _t05E1 = time05D4[1];
    int _t05E2 = prim $r2i01B7 (_t05E1);
    int[2] _t05E3 = func nextCell405D8 (_t05E2, cellId05D1, mesh05D0);
    int _t05E4 = 1;
    int _t05E5 = prim $sub01C0<int; %2> (_t05E3, _t05E4);
    string _t05E6 = "\n";
    string _t05E7 = "got: ";
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    real _t05EA = 0.e0;
    real _t05EB = 0.e0;
    vec4 _t05EC = [_t05E8, _t05E9, _t05EA, _t05EB];
    real _t05ED = 0.e0;
    real _t05EE = 0.1e1;
    real _t05EF = 0.e0;
    real _t05F0 = 0.e0;
    vec4 _t05F1 = [_t05ED, _t05EE, _t05EF, _t05F0];
    real _t05F2 = 0.e0;
    real _t05F3 = 0.e0;
    real _t05F4 = 0.1e1;
    real _t05F5 = 0.e0;
    vec4 _t05F6 = [_t05F2, _t05F3, _t05F4, _t05F5];
    real _t05F7 = 0.e0;
    real _t05F8 = 0.e0;
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    tensor[4,4] _t05FC = [_t05EC, _t05F1, _t05F6, _t05FB];
    real _t05FD = 0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    vec4 _t0601 = [_t05FD, _t05FE, _t05FF, _t0600];
    real _t0602 = 0.e0;
    real _t0603 = 0.1e1;
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    vec4 _t0606 = [_t0602, _t0603, _t0604, _t0605];
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    real _t060A = 0.1e1;
    vec4 _t060B = [_t0607, _t0608, _t0609, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.e0;
    real _t060F = 0.1e1;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    tensor[4,4] _t0611 = [_t0601, _t0606, _t060B, _t0610];
    real _t0612 = 0.e0;
    real _t0613 = 0.1e1;
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    vec4 _t0616 = [_t0612, _t0613, _t0614, _t0615];
    real _t0617 = 0.e0;
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    real _t061A = 0.e0;
    vec4 _t061B = [_t0617, _t0618, _t0619, _t061A];
    real _t061C = 0.1e1;
    real _t061D = -0.1e1;
    real _t061E = 0.e0;
    real _t061F = -0.5e0;
    vec4 _t0620 = [_t061C, _t061D, _t061E, _t061F];
    real _t0621 = 0.e0;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.1e1;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    tensor[4,4] _t0626 = [_t0616, _t061B, _t0620, _t0625];
    real _t0627 = 0.e0;
    real _t0628 = 0.e0;
    real _t0629 = -0.1e1;
    real _t062A = 0.e0;
    vec4 _t062B = [_t0627, _t0628, _t0629, _t062A];
    real _t062C = 0.e0;
    real _t062D = 0.1e1;
    real _t062E = 0.e0;
    real _t062F = 0.e0;
    vec4 _t0630 = [_t062C, _t062D, _t062E, _t062F];
    real _t0631 = 0.1e1;
    real _t0632 = -0.1e1;
    real _t0633 = 0.e0;
    real _t0634 = -0.5e0;
    vec4 _t0635 = [_t0631, _t0632, _t0633, _t0634];
    real _t0636 = 0.e0;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.1e1;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    tensor[4,4] _t063B = [_t062B, _t0630, _t0635, _t063A];
    real _t063C = 0.e0;
    real _t063D = -0.1e1;
    real _t063E = 0.e0;
    real _t063F = 0.e0;
    vec4 _t0640 = [_t063C, _t063D, _t063E, _t063F];
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    real _t0643 = -0.1e1;
    real _t0644 = 0.e0;
    vec4 _t0645 = [_t0641, _t0642, _t0643, _t0644];
    real _t0646 = 0.1e1;
    real _t0647 = -0.1e1;
    real _t0648 = 0.e0;
    real _t0649 = -0.5e0;
    vec4 _t064A = [_t0646, _t0647, _t0648, _t0649];
    real _t064B = 0.e0;
    real _t064C = 0.e0;
    real _t064D = 0.e0;
    real _t064E = 0.1e1;
    vec4 _t064F = [_t064B, _t064C, _t064D, _t064E];
    tensor[4,4] _t0650 = [_t0640, _t0645, _t064A, _t064F];
    real _t0651 = 0.e0;
    real _t0652 = 0.e0;
    real _t0653 = 0.1e1;
    real _t0654 = 0.e0;
    vec4 _t0655 = [_t0651, _t0652, _t0653, _t0654];
    real _t0656 = 0.e0;
    real _t0657 = -0.1e1;
    real _t0658 = 0.e0;
    real _t0659 = 0.e0;
    vec4 _t065A = [_t0656, _t0657, _t0658, _t0659];
    real _t065B = 0.1e1;
    real _t065C = -0.1e1;
    real _t065D = 0.e0;
    real _t065E = -0.5e0;
    vec4 _t065F = [_t065B, _t065C, _t065D, _t065E];
    real _t0660 = 0.e0;
    real _t0661 = 0.e0;
    real _t0662 = 0.e0;
    real _t0663 = 0.1e1;
    vec4 _t0664 = [_t0660, _t0661, _t0662, _t0663];
    tensor[4,4] _t0665 = [_t0655, _t065A, _t065F, _t0664];
    tensor[4,4][6] _t0666 = {_t05FC, _t0611, _t0626, _t063B, _t0650, _t0665};
    real _t0667 = 0.1e1;
    real _t0668 = 0.e0;
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    vec4 _t066B = [_t0667, _t0668, _t0669, _t066A];
    real _t066C = 0.e0;
    real _t066D = 0.1e1;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    vec4 _t0670 = [_t066C, _t066D, _t066E, _t066F];
    real _t0671 = 0.e0;
    real _t0672 = 0.e0;
    real _t0673 = 0.1e1;
    real _t0674 = -0.1e1;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.e0;
    real _t0678 = 0.e0;
    real _t0679 = 0.1e1;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    tensor[4,4] _t067B = [_t066B, _t0670, _t0675, _t067A];
    real _t067C = 0.1e1;
    real _t067D = 0.e0;
    real _t067E = 0.e0;
    real _t067F = 0.e0;
    vec4 _t0680 = [_t067C, _t067D, _t067E, _t067F];
    real _t0681 = 0.e0;
    real _t0682 = 0.1e1;
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    vec4 _t0685 = [_t0681, _t0682, _t0683, _t0684];
    real _t0686 = 0.e0;
    real _t0687 = 0.e0;
    real _t0688 = 0.1e1;
    real _t0689 = 0.e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    real _t068D = 0.e0;
    real _t068E = 0.1e1;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    tensor[4,4] _t0690 = [_t0680, _t0685, _t068A, _t068F];
    real _t0691 = 0.e0;
    real _t0692 = 0.1e1;
    real _t0693 = 0.e0;
    real _t0694 = 0.e0;
    vec4 _t0695 = [_t0691, _t0692, _t0693, _t0694];
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    real _t0699 = -0.1e1;
    vec4 _t069A = [_t0696, _t0697, _t0698, _t0699];
    real _t069B = 0.1e1;
    real _t069C = -0.1e1;
    real _t069D = 0.e0;
    real _t069E = -0.5e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = 0.e0;
    real _t06A1 = 0.e0;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.1e1;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    tensor[4,4] _t06A5 = [_t0695, _t069A, _t069F, _t06A4];
    real _t06A6 = 0.e0;
    real _t06A7 = 0.e0;
    real _t06A8 = -0.1e1;
    real _t06A9 = 0.1e1;
    vec4 _t06AA = [_t06A6, _t06A7, _t06A8, _t06A9];
    real _t06AB = 0.e0;
    real _t06AC = 0.1e1;
    real _t06AD = 0.e0;
    real _t06AE = 0.e0;
    vec4 _t06AF = [_t06AB, _t06AC, _t06AD, _t06AE];
    real _t06B0 = 0.1e1;
    real _t06B1 = -0.1e1;
    real _t06B2 = 0.e0;
    real _t06B3 = -0.5e0;
    vec4 _t06B4 = [_t06B0, _t06B1, _t06B2, _t06B3];
    real _t06B5 = 0.e0;
    real _t06B6 = 0.e0;
    real _t06B7 = 0.e0;
    real _t06B8 = 0.1e1;
    vec4 _t06B9 = [_t06B5, _t06B6, _t06B7, _t06B8];
    tensor[4,4] _t06BA = [_t06AA, _t06AF, _t06B4, _t06B9];
    real _t06BB = 0.e0;
    real _t06BC = -0.1e1;
    real _t06BD = 0.e0;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = -0.1e1;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    real _t06C5 = 0.1e1;
    real _t06C6 = -0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = -0.5e0;
    vec4 _t06C9 = [_t06C5, _t06C6, _t06C7, _t06C8];
    real _t06CA = 0.e0;
    real _t06CB = 0.e0;
    real _t06CC = 0.e0;
    real _t06CD = 0.1e1;
    vec4 _t06CE = [_t06CA, _t06CB, _t06CC, _t06CD];
    tensor[4,4] _t06CF = [_t06BF, _t06C4, _t06C9, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = -0.1e1;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = -0.1e1;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.e0;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    real _t06DA = 0.1e1;
    real _t06DB = -0.1e1;
    real _t06DC = 0.e0;
    real _t06DD = -0.5e0;
    vec4 _t06DE = [_t06DA, _t06DB, _t06DC, _t06DD];
    real _t06DF = 0.e0;
    real _t06E0 = 0.e0;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.1e1;
    vec4 _t06E3 = [_t06DF, _t06E0, _t06E1, _t06E2];
    tensor[4,4] _t06E4 = [_t06D4, _t06D9, _t06DE, _t06E3];
    tensor[4,4][6] _t06E5 = {_t067B, _t0690, _t06A5, _t06BA, _t06CF, _t06E4};
    real _t06E6 = 0.1e1;
    real _t06E7 = 0.e0;
    real _t06E8 = 0.1e1;
    real _t06E9 = 0.5e0;
    vec4 _t06EA = [_t06E6, _t06E7, _t06E8, _t06E9];
    real _t06EB = 0.1e1;
    real _t06EC = 0.e0;
    real _t06ED = 0.e0;
    real _t06EE = 0.e0;
    vec4 _t06EF = [_t06EB, _t06EC, _t06ED, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.1e1;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    tensor[4,4] _t06FA = [_t06EA, _t06EF, _t06F4, _t06F9];
    real _t06FB = 0.1e1;
    real _t06FC = 0.e0;
    real _t06FD = 0.1e1;
    real _t06FE = 0.5e0;
    vec4 _t06FF = [_t06FB, _t06FC, _t06FD, _t06FE];
    real _t0700 = 0.1e1;
    real _t0701 = 0.e0;
    real _t0702 = 0.e0;
    real _t0703 = 0.e0;
    vec4 _t0704 = [_t0700, _t0701, _t0702, _t0703];
    real _t0705 = 0.e0;
    real _t0706 = 0.1e1;
    real _t0707 = 0.e0;
    real _t0708 = 0.1e1;
    vec4 _t0709 = [_t0705, _t0706, _t0707, _t0708];
    real _t070A = 0.e0;
    real _t070B = 0.e0;
    real _t070C = 0.e0;
    real _t070D = 0.1e1;
    vec4 _t070E = [_t070A, _t070B, _t070C, _t070D];
    tensor[4,4] _t070F = [_t06FF, _t0704, _t0709, _t070E];
    real _t0710 = 0.1e1;
    real _t0711 = 0.e0;
    real _t0712 = 0.e0;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.1e1;
    real _t0717 = 0.e0;
    real _t0718 = 0.e0;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    real _t071A = 0.e0;
    real _t071B = 0.e0;
    real _t071C = 0.1e1;
    real _t071D = 0.e0;
    vec4 _t071E = [_t071A, _t071B, _t071C, _t071D];
    real _t071F = 0.e0;
    real _t0720 = 0.e0;
    real _t0721 = 0.e0;
    real _t0722 = 0.1e1;
    vec4 _t0723 = [_t071F, _t0720, _t0721, _t0722];
    tensor[4,4] _t0724 = [_t0714, _t0719, _t071E, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = -0.1e1;
    real _t0727 = 0.e0;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.1e1;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.e0;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    real _t072F = 0.e0;
    real _t0730 = 0.e0;
    real _t0731 = 0.1e1;
    real _t0732 = 0.e0;
    vec4 _t0733 = [_t072F, _t0730, _t0731, _t0732];
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    real _t0736 = 0.e0;
    real _t0737 = 0.1e1;
    vec4 _t0738 = [_t0734, _t0735, _t0736, _t0737];
    tensor[4,4] _t0739 = [_t0729, _t072E, _t0733, _t0738];
    real _t073A = -0.1e1;
    real _t073B = 0.e0;
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = -0.1e1;
    real _t0741 = 0.e0;
    real _t0742 = 0.e0;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    real _t0744 = 0.e0;
    real _t0745 = 0.e0;
    real _t0746 = 0.1e1;
    real _t0747 = 0.e0;
    vec4 _t0748 = [_t0744, _t0745, _t0746, _t0747];
    real _t0749 = 0.e0;
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    vec4 _t074D = [_t0749, _t074A, _t074B, _t074C];
    tensor[4,4] _t074E = [_t073E, _t0743, _t0748, _t074D];
    real _t074F = 0.e0;
    real _t0750 = 0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = -0.1e1;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.e0;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    real _t075B = 0.1e1;
    real _t075C = 0.e0;
    vec4 _t075D = [_t0759, _t075A, _t075B, _t075C];
    real _t075E = 0.e0;
    real _t075F = 0.e0;
    real _t0760 = 0.e0;
    real _t0761 = 0.1e1;
    vec4 _t0762 = [_t075E, _t075F, _t0760, _t0761];
    tensor[4,4] _t0763 = [_t0753, _t0758, _t075D, _t0762];
    tensor[4,4][6] _t0764 = {_t06FA, _t070F, _t0724, _t0739, _t074E, _t0763};
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.1e1;
    real _t0768 = 0.5e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.1e1;
    real _t076C = 0.e0;
    real _t076D = 0.e0;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    real _t076F = -0.1e1;
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    vec4 _t0773 = [_t076F, _t0770, _t0771, _t0772];
    real _t0774 = 0.e0;
    real _t0775 = 0.e0;
    real _t0776 = 0.e0;
    real _t0777 = 0.1e1;
    vec4 _t0778 = [_t0774, _t0775, _t0776, _t0777];
    tensor[4,4] _t0779 = [_t0769, _t076E, _t0773, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.1e1;
    real _t077D = 0.5e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.1e1;
    real _t0781 = 0.e0;
    real _t0782 = 0.e0;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    real _t0784 = -0.1e1;
    real _t0785 = 0.e0;
    real _t0786 = 0.e0;
    real _t0787 = 0.1e1;
    vec4 _t0788 = [_t0784, _t0785, _t0786, _t0787];
    real _t0789 = 0.e0;
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = 0.1e1;
    vec4 _t078D = [_t0789, _t078A, _t078B, _t078C];
    tensor[4,4] _t078E = [_t077E, _t0783, _t0788, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = -0.1e1;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.e0;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    real _t0799 = 0.e0;
    real _t079A = 0.e0;
    real _t079B = 0.1e1;
    real _t079C = 0.e0;
    vec4 _t079D = [_t0799, _t079A, _t079B, _t079C];
    real _t079E = 0.e0;
    real _t079F = 0.e0;
    real _t07A0 = 0.e0;
    real _t07A1 = 0.1e1;
    vec4 _t07A2 = [_t079E, _t079F, _t07A0, _t07A1];
    tensor[4,4] _t07A3 = [_t0793, _t0798, _t079D, _t07A2];
    real _t07A4 = 0.1e1;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.1e1;
    real _t07AB = 0.e0;
    real _t07AC = 0.e0;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    real _t07B0 = 0.1e1;
    real _t07B1 = 0.e0;
    vec4 _t07B2 = [_t07AE, _t07AF, _t07B0, _t07B1];
    real _t07B3 = 0.e0;
    real _t07B4 = 0.e0;
    real _t07B5 = 0.e0;
    real _t07B6 = 0.1e1;
    vec4 _t07B7 = [_t07B3, _t07B4, _t07B5, _t07B6];
    tensor[4,4] _t07B8 = [_t07A8, _t07AD, _t07B2, _t07B7];
    real _t07B9 = 0.e0;
    real _t07BA = -0.1e1;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    vec4 _t07BD = [_t07B9, _t07BA, _t07BB, _t07BC];
    real _t07BE = 0.1e1;
    real _t07BF = 0.e0;
    real _t07C0 = 0.e0;
    real _t07C1 = 0.e0;
    vec4 _t07C2 = [_t07BE, _t07BF, _t07C0, _t07C1];
    real _t07C3 = 0.e0;
    real _t07C4 = 0.e0;
    real _t07C5 = 0.1e1;
    real _t07C6 = 0.e0;
    vec4 _t07C7 = [_t07C3, _t07C4, _t07C5, _t07C6];
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    real _t07CA = 0.e0;
    real _t07CB = 0.1e1;
    vec4 _t07CC = [_t07C8, _t07C9, _t07CA, _t07CB];
    tensor[4,4] _t07CD = [_t07BD, _t07C2, _t07C7, _t07CC];
    real _t07CE = -0.1e1;
    real _t07CF = 0.e0;
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    vec4 _t07D2 = [_t07CE, _t07CF, _t07D0, _t07D1];
    real _t07D3 = 0.e0;
    real _t07D4 = -0.1e1;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.e0;
    vec4 _t07D7 = [_t07D3, _t07D4, _t07D5, _t07D6];
    real _t07D8 = 0.e0;
    real _t07D9 = 0.e0;
    real _t07DA = 0.1e1;
    real _t07DB = 0.e0;
    vec4 _t07DC = [_t07D8, _t07D9, _t07DA, _t07DB];
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    real _t07DF = 0.e0;
    real _t07E0 = 0.1e1;
    vec4 _t07E1 = [_t07DD, _t07DE, _t07DF, _t07E0];
    tensor[4,4] _t07E2 = [_t07D2, _t07D7, _t07DC, _t07E1];
    tensor[4,4][6] _t07E3 = {_t0779, _t078E, _t07A3, _t07B8, _t07CD, _t07E2};
    real _t07E4 = -0.1e1;
    real _t07E5 = 0.e0;
    real _t07E6 = 0.1e1;
    real _t07E7 = 0.5e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.1e1;
    real _t07EA = 0.e0;
    real _t07EB = 0.e0;
    real _t07EC = 0.e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.e0;
    real _t07EF = -0.1e1;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    real _t07F3 = 0.e0;
    real _t07F4 = 0.e0;
    real _t07F5 = 0.e0;
    real _t07F6 = 0.1e1;
    vec4 _t07F7 = [_t07F3, _t07F4, _t07F5, _t07F6];
    tensor[4,4] _t07F8 = [_t07E8, _t07ED, _t07F2, _t07F7];
    real _t07F9 = -0.1e1;
    real _t07FA = 0.e0;
    real _t07FB = 0.1e1;
    real _t07FC = 0.5e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.1e1;
    real _t07FF = 0.e0;
    real _t0800 = 0.e0;
    real _t0801 = 0.e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.e0;
    real _t0804 = -0.1e1;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    real _t0808 = 0.e0;
    real _t0809 = 0.e0;
    real _t080A = 0.e0;
    real _t080B = 0.1e1;
    vec4 _t080C = [_t0808, _t0809, _t080A, _t080B];
    tensor[4,4] _t080D = [_t07FD, _t0802, _t0807, _t080C];
    real _t080E = -0.1e1;
    real _t080F = 0.e0;
    real _t0810 = 0.e0;
    real _t0811 = 0.e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.e0;
    real _t0814 = -0.1e1;
    real _t0815 = 0.e0;
    real _t0816 = 0.e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.e0;
    real _t0819 = 0.e0;
    real _t081A = 0.1e1;
    real _t081B = 0.e0;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    real _t081F = 0.e0;
    real _t0820 = 0.1e1;
    vec4 _t0821 = [_t081D, _t081E, _t081F, _t0820];
    tensor[4,4] _t0822 = [_t0812, _t0817, _t081C, _t0821];
    real _t0823 = 0.e0;
    real _t0824 = 0.1e1;
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    vec4 _t0827 = [_t0823, _t0824, _t0825, _t0826];
    real _t0828 = -0.1e1;
    real _t0829 = 0.e0;
    real _t082A = 0.e0;
    real _t082B = 0.e0;
    vec4 _t082C = [_t0828, _t0829, _t082A, _t082B];
    real _t082D = 0.e0;
    real _t082E = 0.e0;
    real _t082F = 0.1e1;
    real _t0830 = 0.e0;
    vec4 _t0831 = [_t082D, _t082E, _t082F, _t0830];
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    real _t0834 = 0.e0;
    real _t0835 = 0.1e1;
    vec4 _t0836 = [_t0832, _t0833, _t0834, _t0835];
    tensor[4,4] _t0837 = [_t0827, _t082C, _t0831, _t0836];
    real _t0838 = 0.1e1;
    real _t0839 = 0.e0;
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    vec4 _t083C = [_t0838, _t0839, _t083A, _t083B];
    real _t083D = 0.e0;
    real _t083E = 0.1e1;
    real _t083F = 0.e0;
    real _t0840 = 0.e0;
    vec4 _t0841 = [_t083D, _t083E, _t083F, _t0840];
    real _t0842 = 0.e0;
    real _t0843 = 0.e0;
    real _t0844 = 0.1e1;
    real _t0845 = 0.e0;
    vec4 _t0846 = [_t0842, _t0843, _t0844, _t0845];
    real _t0847 = 0.e0;
    real _t0848 = 0.e0;
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    vec4 _t084B = [_t0847, _t0848, _t0849, _t084A];
    tensor[4,4] _t084C = [_t083C, _t0841, _t0846, _t084B];
    real _t084D = 0.e0;
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    vec4 _t0851 = [_t084D, _t084E, _t084F, _t0850];
    real _t0852 = 0.1e1;
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.e0;
    vec4 _t0856 = [_t0852, _t0853, _t0854, _t0855];
    real _t0857 = 0.e0;
    real _t0858 = 0.e0;
    real _t0859 = 0.1e1;
    real _t085A = 0.e0;
    vec4 _t085B = [_t0857, _t0858, _t0859, _t085A];
    real _t085C = 0.e0;
    real _t085D = 0.e0;
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    vec4 _t0860 = [_t085C, _t085D, _t085E, _t085F];
    tensor[4,4] _t0861 = [_t0851, _t0856, _t085B, _t0860];
    tensor[4,4][6] _t0862 = {_t07F8, _t080D, _t0822, _t0837, _t084C, _t0861};
    real _t0863 = 0.e0;
    real _t0864 = -0.1e1;
    real _t0865 = 0.1e1;
    real _t0866 = 0.5e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.e0;
    real _t0869 = -0.1e1;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.1e1;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.e0;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    real _t0872 = 0.e0;
    real _t0873 = 0.e0;
    real _t0874 = 0.e0;
    real _t0875 = 0.1e1;
    vec4 _t0876 = [_t0872, _t0873, _t0874, _t0875];
    tensor[4,4] _t0877 = [_t0867, _t086C, _t0871, _t0876];
    real _t0878 = 0.e0;
    real _t0879 = -0.1e1;
    real _t087A = 0.1e1;
    real _t087B = 0.5e0;
    vec4 _t087C = [_t0878, _t0879, _t087A, _t087B];
    real _t087D = 0.e0;
    real _t087E = -0.1e1;
    real _t087F = 0.e0;
    real _t0880 = 0.e0;
    vec4 _t0881 = [_t087D, _t087E, _t087F, _t0880];
    real _t0882 = 0.1e1;
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.1e1;
    vec4 _t0886 = [_t0882, _t0883, _t0884, _t0885];
    real _t0887 = 0.e0;
    real _t0888 = 0.e0;
    real _t0889 = 0.e0;
    real _t088A = 0.1e1;
    vec4 _t088B = [_t0887, _t0888, _t0889, _t088A];
    tensor[4,4] _t088C = [_t087C, _t0881, _t0886, _t088B];
    real _t088D = 0.e0;
    real _t088E = -0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    vec4 _t0891 = [_t088D, _t088E, _t088F, _t0890];
    real _t0892 = 0.1e1;
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.e0;
    vec4 _t0896 = [_t0892, _t0893, _t0894, _t0895];
    real _t0897 = 0.e0;
    real _t0898 = 0.e0;
    real _t0899 = 0.1e1;
    real _t089A = 0.e0;
    vec4 _t089B = [_t0897, _t0898, _t0899, _t089A];
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    real _t089E = 0.e0;
    real _t089F = 0.1e1;
    vec4 _t08A0 = [_t089C, _t089D, _t089E, _t089F];
    tensor[4,4] _t08A1 = [_t0891, _t0896, _t089B, _t08A0];
    real _t08A2 = -0.1e1;
    real _t08A3 = 0.e0;
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    vec4 _t08A6 = [_t08A2, _t08A3, _t08A4, _t08A5];
    real _t08A7 = 0.e0;
    real _t08A8 = -0.1e1;
    real _t08A9 = 0.e0;
    real _t08AA = 0.e0;
    vec4 _t08AB = [_t08A7, _t08A8, _t08A9, _t08AA];
    real _t08AC = 0.e0;
    real _t08AD = 0.e0;
    real _t08AE = 0.1e1;
    real _t08AF = 0.e0;
    vec4 _t08B0 = [_t08AC, _t08AD, _t08AE, _t08AF];
    real _t08B1 = 0.e0;
    real _t08B2 = 0.e0;
    real _t08B3 = 0.e0;
    real _t08B4 = 0.1e1;
    vec4 _t08B5 = [_t08B1, _t08B2, _t08B3, _t08B4];
    tensor[4,4] _t08B6 = [_t08A6, _t08AB, _t08B0, _t08B5];
    real _t08B7 = 0.e0;
    real _t08B8 = 0.1e1;
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    vec4 _t08BB = [_t08B7, _t08B8, _t08B9, _t08BA];
    real _t08BC = -0.1e1;
    real _t08BD = 0.e0;
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    vec4 _t08C0 = [_t08BC, _t08BD, _t08BE, _t08BF];
    real _t08C1 = 0.e0;
    real _t08C2 = 0.e0;
    real _t08C3 = 0.1e1;
    real _t08C4 = 0.e0;
    vec4 _t08C5 = [_t08C1, _t08C2, _t08C3, _t08C4];
    real _t08C6 = 0.e0;
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    real _t08C9 = 0.1e1;
    vec4 _t08CA = [_t08C6, _t08C7, _t08C8, _t08C9];
    tensor[4,4] _t08CB = [_t08BB, _t08C0, _t08C5, _t08CA];
    real _t08CC = 0.1e1;
    real _t08CD = 0.e0;
    real _t08CE = 0.e0;
    real _t08CF = 0.e0;
    vec4 _t08D0 = [_t08CC, _t08CD, _t08CE, _t08CF];
    real _t08D1 = 0.e0;
    real _t08D2 = 0.1e1;
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    vec4 _t08D5 = [_t08D1, _t08D2, _t08D3, _t08D4];
    real _t08D6 = 0.e0;
    real _t08D7 = 0.e0;
    real _t08D8 = 0.1e1;
    real _t08D9 = 0.e0;
    vec4 _t08DA = [_t08D6, _t08D7, _t08D8, _t08D9];
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    real _t08DE = 0.1e1;
    vec4 _t08DF = [_t08DB, _t08DC, _t08DD, _t08DE];
    tensor[4,4] _t08E0 = [_t08D0, _t08D5, _t08DA, _t08DF];
    tensor[4,4][6] _t08E1 = {_t0877, _t088C, _t08A1, _t08B6, _t08CB, _t08E0};
    tensor[4,4][6][6] _t08E2 = {_t0666, _t06E5, _t0764, _t07E3, _t0862, _t08E1};
    real _t08E3 = time05D4[1];
    int _t08E4 = prim $r2i01B7 (_t08E3);
    tensor[4,4][6] _t08E5 = prim $sub01C0<tensor[4,4][6]; %6> (_t08E2, _t08E4);
    real _t08E6 = time05D4[1];
    int _t08E7 = prim $r2i01B7 (_t08E6);
    int[2] _t08E8 = func nextCell405D8 (_t08E7, cellId05D1, mesh05D0);
    int _t08E9 = 1;
    int _t08EA = prim $sub01C0<int; %2> (_t08E8, _t08E9);
    tensor[4,4] _t08EB = prim $sub01C0<tensor[4,4]; %6> (_t08E5, _t08EA);
    string _t08EC = "\n";
    print (_t05DD, _t05DF, _t05E0, _t05E5, _t05E6, _t05E7, _t08EB, _t08EC);
    real _t08ED = time05D4[1];
    int _t08EE = prim $r2i01B7 (_t08ED);
    int[2] _t08EF = func nextCell405D8 (_t08EE, cellId05D1, mesh05D0);
    int _t08F0 = 0;
    int _t08F1 = prim $sub01C0<int; %2> (_t08EF, _t08F0);
    real _t08F2 = 0.1e1;
    real _t08F3 = 0.e0;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    vec4 _t08F6 = [_t08F2, _t08F3, _t08F4, _t08F5];
    real _t08F7 = 0.e0;
    real _t08F8 = 0.1e1;
    real _t08F9 = 0.e0;
    real _t08FA = 0.e0;
    vec4 _t08FB = [_t08F7, _t08F8, _t08F9, _t08FA];
    real _t08FC = 0.e0;
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    vec4 _t0900 = [_t08FC, _t08FD, _t08FE, _t08FF];
    real _t0901 = 0.e0;
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.1e1;
    vec4 _t0905 = [_t0901, _t0902, _t0903, _t0904];
    tensor[4,4] _t0906 = [_t08F6, _t08FB, _t0900, _t0905];
    real _t0907 = 0.1e1;
    real _t0908 = 0.e0;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    vec4 _t090B = [_t0907, _t0908, _t0909, _t090A];
    real _t090C = 0.e0;
    real _t090D = 0.1e1;
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    vec4 _t0910 = [_t090C, _t090D, _t090E, _t090F];
    real _t0911 = 0.e0;
    real _t0912 = 0.e0;
    real _t0913 = 0.1e1;
    real _t0914 = 0.1e1;
    vec4 _t0915 = [_t0911, _t0912, _t0913, _t0914];
    real _t0916 = 0.e0;
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.1e1;
    vec4 _t091A = [_t0916, _t0917, _t0918, _t0919];
    tensor[4,4] _t091B = [_t090B, _t0910, _t0915, _t091A];
    real _t091C = 0.e0;
    real _t091D = 0.1e1;
    real _t091E = 0.e0;
    real _t091F = 0.e0;
    vec4 _t0920 = [_t091C, _t091D, _t091E, _t091F];
    real _t0921 = 0.e0;
    real _t0922 = 0.e0;
    real _t0923 = 0.1e1;
    real _t0924 = 0.e0;
    vec4 _t0925 = [_t0921, _t0922, _t0923, _t0924];
    real _t0926 = 0.1e1;
    real _t0927 = -0.1e1;
    real _t0928 = 0.e0;
    real _t0929 = -0.5e0;
    vec4 _t092A = [_t0926, _t0927, _t0928, _t0929];
    real _t092B = 0.e0;
    real _t092C = 0.e0;
    real _t092D = 0.e0;
    real _t092E = 0.1e1;
    vec4 _t092F = [_t092B, _t092C, _t092D, _t092E];
    tensor[4,4] _t0930 = [_t0920, _t0925, _t092A, _t092F];
    real _t0931 = 0.e0;
    real _t0932 = 0.e0;
    real _t0933 = -0.1e1;
    real _t0934 = 0.e0;
    vec4 _t0935 = [_t0931, _t0932, _t0933, _t0934];
    real _t0936 = 0.e0;
    real _t0937 = 0.1e1;
    real _t0938 = 0.e0;
    real _t0939 = 0.e0;
    vec4 _t093A = [_t0936, _t0937, _t0938, _t0939];
    real _t093B = 0.1e1;
    real _t093C = -0.1e1;
    real _t093D = 0.e0;
    real _t093E = -0.5e0;
    vec4 _t093F = [_t093B, _t093C, _t093D, _t093E];
    real _t0940 = 0.e0;
    real _t0941 = 0.e0;
    real _t0942 = 0.e0;
    real _t0943 = 0.1e1;
    vec4 _t0944 = [_t0940, _t0941, _t0942, _t0943];
    tensor[4,4] _t0945 = [_t0935, _t093A, _t093F, _t0944];
    real _t0946 = 0.e0;
    real _t0947 = -0.1e1;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    vec4 _t094A = [_t0946, _t0947, _t0948, _t0949];
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    real _t094D = -0.1e1;
    real _t094E = 0.e0;
    vec4 _t094F = [_t094B, _t094C, _t094D, _t094E];
    real _t0950 = 0.1e1;
    real _t0951 = -0.1e1;
    real _t0952 = 0.e0;
    real _t0953 = -0.5e0;
    vec4 _t0954 = [_t0950, _t0951, _t0952, _t0953];
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    real _t0957 = 0.e0;
    real _t0958 = 0.1e1;
    vec4 _t0959 = [_t0955, _t0956, _t0957, _t0958];
    tensor[4,4] _t095A = [_t094A, _t094F, _t0954, _t0959];
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    real _t095D = 0.1e1;
    real _t095E = 0.e0;
    vec4 _t095F = [_t095B, _t095C, _t095D, _t095E];
    real _t0960 = 0.e0;
    real _t0961 = -0.1e1;
    real _t0962 = 0.e0;
    real _t0963 = 0.e0;
    vec4 _t0964 = [_t0960, _t0961, _t0962, _t0963];
    real _t0965 = 0.1e1;
    real _t0966 = -0.1e1;
    real _t0967 = 0.e0;
    real _t0968 = -0.5e0;
    vec4 _t0969 = [_t0965, _t0966, _t0967, _t0968];
    real _t096A = 0.e0;
    real _t096B = 0.e0;
    real _t096C = 0.e0;
    real _t096D = 0.1e1;
    vec4 _t096E = [_t096A, _t096B, _t096C, _t096D];
    tensor[4,4] _t096F = [_t095F, _t0964, _t0969, _t096E];
    tensor[4,4][6] _t0970 = {_t0906, _t091B, _t0930, _t0945, _t095A, _t096F};
    real _t0971 = 0.1e1;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.e0;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    real _t0976 = 0.e0;
    real _t0977 = 0.1e1;
    real _t0978 = 0.e0;
    real _t0979 = 0.e0;
    vec4 _t097A = [_t0976, _t0977, _t0978, _t0979];
    real _t097B = 0.e0;
    real _t097C = 0.e0;
    real _t097D = 0.1e1;
    real _t097E = -0.1e1;
    vec4 _t097F = [_t097B, _t097C, _t097D, _t097E];
    real _t0980 = 0.e0;
    real _t0981 = 0.e0;
    real _t0982 = 0.e0;
    real _t0983 = 0.1e1;
    vec4 _t0984 = [_t0980, _t0981, _t0982, _t0983];
    tensor[4,4] _t0985 = [_t0975, _t097A, _t097F, _t0984];
    real _t0986 = 0.1e1;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.e0;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    real _t098B = 0.e0;
    real _t098C = 0.1e1;
    real _t098D = 0.e0;
    real _t098E = 0.e0;
    vec4 _t098F = [_t098B, _t098C, _t098D, _t098E];
    real _t0990 = 0.e0;
    real _t0991 = 0.e0;
    real _t0992 = 0.1e1;
    real _t0993 = 0.e0;
    vec4 _t0994 = [_t0990, _t0991, _t0992, _t0993];
    real _t0995 = 0.e0;
    real _t0996 = 0.e0;
    real _t0997 = 0.e0;
    real _t0998 = 0.1e1;
    vec4 _t0999 = [_t0995, _t0996, _t0997, _t0998];
    tensor[4,4] _t099A = [_t098A, _t098F, _t0994, _t0999];
    real _t099B = 0.e0;
    real _t099C = 0.1e1;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    vec4 _t099F = [_t099B, _t099C, _t099D, _t099E];
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    real _t09A2 = 0.1e1;
    real _t09A3 = -0.1e1;
    vec4 _t09A4 = [_t09A0, _t09A1, _t09A2, _t09A3];
    real _t09A5 = 0.1e1;
    real _t09A6 = -0.1e1;
    real _t09A7 = 0.e0;
    real _t09A8 = -0.5e0;
    vec4 _t09A9 = [_t09A5, _t09A6, _t09A7, _t09A8];
    real _t09AA = 0.e0;
    real _t09AB = 0.e0;
    real _t09AC = 0.e0;
    real _t09AD = 0.1e1;
    vec4 _t09AE = [_t09AA, _t09AB, _t09AC, _t09AD];
    tensor[4,4] _t09AF = [_t099F, _t09A4, _t09A9, _t09AE];
    real _t09B0 = 0.e0;
    real _t09B1 = 0.e0;
    real _t09B2 = -0.1e1;
    real _t09B3 = 0.1e1;
    vec4 _t09B4 = [_t09B0, _t09B1, _t09B2, _t09B3];
    real _t09B5 = 0.e0;
    real _t09B6 = 0.1e1;
    real _t09B7 = 0.e0;
    real _t09B8 = 0.e0;
    vec4 _t09B9 = [_t09B5, _t09B6, _t09B7, _t09B8];
    real _t09BA = 0.1e1;
    real _t09BB = -0.1e1;
    real _t09BC = 0.e0;
    real _t09BD = -0.5e0;
    vec4 _t09BE = [_t09BA, _t09BB, _t09BC, _t09BD];
    real _t09BF = 0.e0;
    real _t09C0 = 0.e0;
    real _t09C1 = 0.e0;
    real _t09C2 = 0.1e1;
    vec4 _t09C3 = [_t09BF, _t09C0, _t09C1, _t09C2];
    tensor[4,4] _t09C4 = [_t09B4, _t09B9, _t09BE, _t09C3];
    real _t09C5 = 0.e0;
    real _t09C6 = -0.1e1;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    vec4 _t09C9 = [_t09C5, _t09C6, _t09C7, _t09C8];
    real _t09CA = 0.e0;
    real _t09CB = 0.e0;
    real _t09CC = -0.1e1;
    real _t09CD = 0.1e1;
    vec4 _t09CE = [_t09CA, _t09CB, _t09CC, _t09CD];
    real _t09CF = 0.1e1;
    real _t09D0 = -0.1e1;
    real _t09D1 = 0.e0;
    real _t09D2 = -0.5e0;
    vec4 _t09D3 = [_t09CF, _t09D0, _t09D1, _t09D2];
    real _t09D4 = 0.e0;
    real _t09D5 = 0.e0;
    real _t09D6 = 0.e0;
    real _t09D7 = 0.1e1;
    vec4 _t09D8 = [_t09D4, _t09D5, _t09D6, _t09D7];
    tensor[4,4] _t09D9 = [_t09C9, _t09CE, _t09D3, _t09D8];
    real _t09DA = 0.e0;
    real _t09DB = 0.e0;
    real _t09DC = 0.1e1;
    real _t09DD = -0.1e1;
    vec4 _t09DE = [_t09DA, _t09DB, _t09DC, _t09DD];
    real _t09DF = 0.e0;
    real _t09E0 = -0.1e1;
    real _t09E1 = 0.e0;
    real _t09E2 = 0.e0;
    vec4 _t09E3 = [_t09DF, _t09E0, _t09E1, _t09E2];
    real _t09E4 = 0.1e1;
    real _t09E5 = -0.1e1;
    real _t09E6 = 0.e0;
    real _t09E7 = -0.5e0;
    vec4 _t09E8 = [_t09E4, _t09E5, _t09E6, _t09E7];
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    real _t09EB = 0.e0;
    real _t09EC = 0.1e1;
    vec4 _t09ED = [_t09E9, _t09EA, _t09EB, _t09EC];
    tensor[4,4] _t09EE = [_t09DE, _t09E3, _t09E8, _t09ED];
    tensor[4,4][6] _t09EF = {_t0985, _t099A, _t09AF, _t09C4, _t09D9, _t09EE};
    real _t09F0 = 0.1e1;
    real _t09F1 = 0.e0;
    real _t09F2 = 0.1e1;
    real _t09F3 = 0.5e0;
    vec4 _t09F4 = [_t09F0, _t09F1, _t09F2, _t09F3];
    real _t09F5 = 0.1e1;
    real _t09F6 = 0.e0;
    real _t09F7 = 0.e0;
    real _t09F8 = 0.e0;
    vec4 _t09F9 = [_t09F5, _t09F6, _t09F7, _t09F8];
    real _t09FA = 0.e0;
    real _t09FB = 0.1e1;
    real _t09FC = 0.e0;
    real _t09FD = 0.e0;
    vec4 _t09FE = [_t09FA, _t09FB, _t09FC, _t09FD];
    real _t09FF = 0.e0;
    real _t0A00 = 0.e0;
    real _t0A01 = 0.e0;
    real _t0A02 = 0.1e1;
    vec4 _t0A03 = [_t09FF, _t0A00, _t0A01, _t0A02];
    tensor[4,4] _t0A04 = [_t09F4, _t09F9, _t09FE, _t0A03];
    real _t0A05 = 0.1e1;
    real _t0A06 = 0.e0;
    real _t0A07 = 0.1e1;
    real _t0A08 = 0.5e0;
    vec4 _t0A09 = [_t0A05, _t0A06, _t0A07, _t0A08];
    real _t0A0A = 0.1e1;
    real _t0A0B = 0.e0;
    real _t0A0C = 0.e0;
    real _t0A0D = 0.e0;
    vec4 _t0A0E = [_t0A0A, _t0A0B, _t0A0C, _t0A0D];
    real _t0A0F = 0.e0;
    real _t0A10 = 0.1e1;
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    vec4 _t0A13 = [_t0A0F, _t0A10, _t0A11, _t0A12];
    real _t0A14 = 0.e0;
    real _t0A15 = 0.e0;
    real _t0A16 = 0.e0;
    real _t0A17 = 0.1e1;
    vec4 _t0A18 = [_t0A14, _t0A15, _t0A16, _t0A17];
    tensor[4,4] _t0A19 = [_t0A09, _t0A0E, _t0A13, _t0A18];
    real _t0A1A = 0.1e1;
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    vec4 _t0A1E = [_t0A1A, _t0A1B, _t0A1C, _t0A1D];
    real _t0A1F = 0.e0;
    real _t0A20 = 0.1e1;
    real _t0A21 = 0.e0;
    real _t0A22 = 0.e0;
    vec4 _t0A23 = [_t0A1F, _t0A20, _t0A21, _t0A22];
    real _t0A24 = 0.e0;
    real _t0A25 = 0.e0;
    real _t0A26 = 0.1e1;
    real _t0A27 = 0.e0;
    vec4 _t0A28 = [_t0A24, _t0A25, _t0A26, _t0A27];
    real _t0A29 = 0.e0;
    real _t0A2A = 0.e0;
    real _t0A2B = 0.e0;
    real _t0A2C = 0.1e1;
    vec4 _t0A2D = [_t0A29, _t0A2A, _t0A2B, _t0A2C];
    tensor[4,4] _t0A2E = [_t0A1E, _t0A23, _t0A28, _t0A2D];
    real _t0A2F = 0.e0;
    real _t0A30 = -0.1e1;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    vec4 _t0A33 = [_t0A2F, _t0A30, _t0A31, _t0A32];
    real _t0A34 = 0.1e1;
    real _t0A35 = 0.e0;
    real _t0A36 = 0.e0;
    real _t0A37 = 0.e0;
    vec4 _t0A38 = [_t0A34, _t0A35, _t0A36, _t0A37];
    real _t0A39 = 0.e0;
    real _t0A3A = 0.e0;
    real _t0A3B = 0.1e1;
    real _t0A3C = 0.e0;
    vec4 _t0A3D = [_t0A39, _t0A3A, _t0A3B, _t0A3C];
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    real _t0A40 = 0.e0;
    real _t0A41 = 0.1e1;
    vec4 _t0A42 = [_t0A3E, _t0A3F, _t0A40, _t0A41];
    tensor[4,4] _t0A43 = [_t0A33, _t0A38, _t0A3D, _t0A42];
    real _t0A44 = -0.1e1;
    real _t0A45 = 0.e0;
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    vec4 _t0A48 = [_t0A44, _t0A45, _t0A46, _t0A47];
    real _t0A49 = 0.e0;
    real _t0A4A = -0.1e1;
    real _t0A4B = 0.e0;
    real _t0A4C = 0.e0;
    vec4 _t0A4D = [_t0A49, _t0A4A, _t0A4B, _t0A4C];
    real _t0A4E = 0.e0;
    real _t0A4F = 0.e0;
    real _t0A50 = 0.1e1;
    real _t0A51 = 0.e0;
    vec4 _t0A52 = [_t0A4E, _t0A4F, _t0A50, _t0A51];
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    real _t0A55 = 0.e0;
    real _t0A56 = 0.1e1;
    vec4 _t0A57 = [_t0A53, _t0A54, _t0A55, _t0A56];
    tensor[4,4] _t0A58 = [_t0A48, _t0A4D, _t0A52, _t0A57];
    real _t0A59 = 0.e0;
    real _t0A5A = 0.1e1;
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    vec4 _t0A5D = [_t0A59, _t0A5A, _t0A5B, _t0A5C];
    real _t0A5E = -0.1e1;
    real _t0A5F = 0.e0;
    real _t0A60 = 0.e0;
    real _t0A61 = 0.e0;
    vec4 _t0A62 = [_t0A5E, _t0A5F, _t0A60, _t0A61];
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    real _t0A65 = 0.1e1;
    real _t0A66 = 0.e0;
    vec4 _t0A67 = [_t0A63, _t0A64, _t0A65, _t0A66];
    real _t0A68 = 0.e0;
    real _t0A69 = 0.e0;
    real _t0A6A = 0.e0;
    real _t0A6B = 0.1e1;
    vec4 _t0A6C = [_t0A68, _t0A69, _t0A6A, _t0A6B];
    tensor[4,4] _t0A6D = [_t0A5D, _t0A62, _t0A67, _t0A6C];
    tensor[4,4][6] _t0A6E = {_t0A04, _t0A19, _t0A2E, _t0A43, _t0A58, _t0A6D};
    real _t0A6F = 0.e0;
    real _t0A70 = 0.1e1;
    real _t0A71 = 0.1e1;
    real _t0A72 = 0.5e0;
    vec4 _t0A73 = [_t0A6F, _t0A70, _t0A71, _t0A72];
    real _t0A74 = 0.e0;
    real _t0A75 = 0.1e1;
    real _t0A76 = 0.e0;
    real _t0A77 = 0.e0;
    vec4 _t0A78 = [_t0A74, _t0A75, _t0A76, _t0A77];
    real _t0A79 = -0.1e1;
    real _t0A7A = 0.e0;
    real _t0A7B = 0.e0;
    real _t0A7C = 0.e0;
    vec4 _t0A7D = [_t0A79, _t0A7A, _t0A7B, _t0A7C];
    real _t0A7E = 0.e0;
    real _t0A7F = 0.e0;
    real _t0A80 = 0.e0;
    real _t0A81 = 0.1e1;
    vec4 _t0A82 = [_t0A7E, _t0A7F, _t0A80, _t0A81];
    tensor[4,4] _t0A83 = [_t0A73, _t0A78, _t0A7D, _t0A82];
    real _t0A84 = 0.e0;
    real _t0A85 = 0.1e1;
    real _t0A86 = 0.1e1;
    real _t0A87 = 0.5e0;
    vec4 _t0A88 = [_t0A84, _t0A85, _t0A86, _t0A87];
    real _t0A89 = 0.e0;
    real _t0A8A = 0.1e1;
    real _t0A8B = 0.e0;
    real _t0A8C = 0.e0;
    vec4 _t0A8D = [_t0A89, _t0A8A, _t0A8B, _t0A8C];
    real _t0A8E = -0.1e1;
    real _t0A8F = 0.e0;
    real _t0A90 = 0.e0;
    real _t0A91 = 0.1e1;
    vec4 _t0A92 = [_t0A8E, _t0A8F, _t0A90, _t0A91];
    real _t0A93 = 0.e0;
    real _t0A94 = 0.e0;
    real _t0A95 = 0.e0;
    real _t0A96 = 0.1e1;
    vec4 _t0A97 = [_t0A93, _t0A94, _t0A95, _t0A96];
    tensor[4,4] _t0A98 = [_t0A88, _t0A8D, _t0A92, _t0A97];
    real _t0A99 = 0.e0;
    real _t0A9A = 0.1e1;
    real _t0A9B = 0.e0;
    real _t0A9C = 0.e0;
    vec4 _t0A9D = [_t0A99, _t0A9A, _t0A9B, _t0A9C];
    real _t0A9E = -0.1e1;
    real _t0A9F = 0.e0;
    real _t0AA0 = 0.e0;
    real _t0AA1 = 0.e0;
    vec4 _t0AA2 = [_t0A9E, _t0A9F, _t0AA0, _t0AA1];
    real _t0AA3 = 0.e0;
    real _t0AA4 = 0.e0;
    real _t0AA5 = 0.1e1;
    real _t0AA6 = 0.e0;
    vec4 _t0AA7 = [_t0AA3, _t0AA4, _t0AA5, _t0AA6];
    real _t0AA8 = 0.e0;
    real _t0AA9 = 0.e0;
    real _t0AAA = 0.e0;
    real _t0AAB = 0.1e1;
    vec4 _t0AAC = [_t0AA8, _t0AA9, _t0AAA, _t0AAB];
    tensor[4,4] _t0AAD = [_t0A9D, _t0AA2, _t0AA7, _t0AAC];
    real _t0AAE = 0.1e1;
    real _t0AAF = 0.e0;
    real _t0AB0 = 0.e0;
    real _t0AB1 = 0.e0;
    vec4 _t0AB2 = [_t0AAE, _t0AAF, _t0AB0, _t0AB1];
    real _t0AB3 = 0.e0;
    real _t0AB4 = 0.1e1;
    real _t0AB5 = 0.e0;
    real _t0AB6 = 0.e0;
    vec4 _t0AB7 = [_t0AB3, _t0AB4, _t0AB5, _t0AB6];
    real _t0AB8 = 0.e0;
    real _t0AB9 = 0.e0;
    real _t0ABA = 0.1e1;
    real _t0ABB = 0.e0;
    vec4 _t0ABC = [_t0AB8, _t0AB9, _t0ABA, _t0ABB];
    real _t0ABD = 0.e0;
    real _t0ABE = 0.e0;
    real _t0ABF = 0.e0;
    real _t0AC0 = 0.1e1;
    vec4 _t0AC1 = [_t0ABD, _t0ABE, _t0ABF, _t0AC0];
    tensor[4,4] _t0AC2 = [_t0AB2, _t0AB7, _t0ABC, _t0AC1];
    real _t0AC3 = 0.e0;
    real _t0AC4 = -0.1e1;
    real _t0AC5 = 0.e0;
    real _t0AC6 = 0.e0;
    vec4 _t0AC7 = [_t0AC3, _t0AC4, _t0AC5, _t0AC6];
    real _t0AC8 = 0.1e1;
    real _t0AC9 = 0.e0;
    real _t0ACA = 0.e0;
    real _t0ACB = 0.e0;
    vec4 _t0ACC = [_t0AC8, _t0AC9, _t0ACA, _t0ACB];
    real _t0ACD = 0.e0;
    real _t0ACE = 0.e0;
    real _t0ACF = 0.1e1;
    real _t0AD0 = 0.e0;
    vec4 _t0AD1 = [_t0ACD, _t0ACE, _t0ACF, _t0AD0];
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.e0;
    real _t0AD4 = 0.e0;
    real _t0AD5 = 0.1e1;
    vec4 _t0AD6 = [_t0AD2, _t0AD3, _t0AD4, _t0AD5];
    tensor[4,4] _t0AD7 = [_t0AC7, _t0ACC, _t0AD1, _t0AD6];
    real _t0AD8 = -0.1e1;
    real _t0AD9 = 0.e0;
    real _t0ADA = 0.e0;
    real _t0ADB = 0.e0;
    vec4 _t0ADC = [_t0AD8, _t0AD9, _t0ADA, _t0ADB];
    real _t0ADD = 0.e0;
    real _t0ADE = -0.1e1;
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.e0;
    vec4 _t0AE1 = [_t0ADD, _t0ADE, _t0ADF, _t0AE0];
    real _t0AE2 = 0.e0;
    real _t0AE3 = 0.e0;
    real _t0AE4 = 0.1e1;
    real _t0AE5 = 0.e0;
    vec4 _t0AE6 = [_t0AE2, _t0AE3, _t0AE4, _t0AE5];
    real _t0AE7 = 0.e0;
    real _t0AE8 = 0.e0;
    real _t0AE9 = 0.e0;
    real _t0AEA = 0.1e1;
    vec4 _t0AEB = [_t0AE7, _t0AE8, _t0AE9, _t0AEA];
    tensor[4,4] _t0AEC = [_t0ADC, _t0AE1, _t0AE6, _t0AEB];
    tensor[4,4][6] _t0AED = {_t0A83, _t0A98, _t0AAD, _t0AC2, _t0AD7, _t0AEC};
    real _t0AEE = -0.1e1;
    real _t0AEF = 0.e0;
    real _t0AF0 = 0.1e1;
    real _t0AF1 = 0.5e0;
    vec4 _t0AF2 = [_t0AEE, _t0AEF, _t0AF0, _t0AF1];
    real _t0AF3 = -0.1e1;
    real _t0AF4 = 0.e0;
    real _t0AF5 = 0.e0;
    real _t0AF6 = 0.e0;
    vec4 _t0AF7 = [_t0AF3, _t0AF4, _t0AF5, _t0AF6];
    real _t0AF8 = 0.e0;
    real _t0AF9 = -0.1e1;
    real _t0AFA = 0.e0;
    real _t0AFB = 0.e0;
    vec4 _t0AFC = [_t0AF8, _t0AF9, _t0AFA, _t0AFB];
    real _t0AFD = 0.e0;
    real _t0AFE = 0.e0;
    real _t0AFF = 0.e0;
    real _t0B00 = 0.1e1;
    vec4 _t0B01 = [_t0AFD, _t0AFE, _t0AFF, _t0B00];
    tensor[4,4] _t0B02 = [_t0AF2, _t0AF7, _t0AFC, _t0B01];
    real _t0B03 = -0.1e1;
    real _t0B04 = 0.e0;
    real _t0B05 = 0.1e1;
    real _t0B06 = 0.5e0;
    vec4 _t0B07 = [_t0B03, _t0B04, _t0B05, _t0B06];
    real _t0B08 = -0.1e1;
    real _t0B09 = 0.e0;
    real _t0B0A = 0.e0;
    real _t0B0B = 0.e0;
    vec4 _t0B0C = [_t0B08, _t0B09, _t0B0A, _t0B0B];
    real _t0B0D = 0.e0;
    real _t0B0E = -0.1e1;
    real _t0B0F = 0.e0;
    real _t0B10 = 0.1e1;
    vec4 _t0B11 = [_t0B0D, _t0B0E, _t0B0F, _t0B10];
    real _t0B12 = 0.e0;
    real _t0B13 = 0.e0;
    real _t0B14 = 0.e0;
    real _t0B15 = 0.1e1;
    vec4 _t0B16 = [_t0B12, _t0B13, _t0B14, _t0B15];
    tensor[4,4] _t0B17 = [_t0B07, _t0B0C, _t0B11, _t0B16];
    real _t0B18 = -0.1e1;
    real _t0B19 = 0.e0;
    real _t0B1A = 0.e0;
    real _t0B1B = 0.e0;
    vec4 _t0B1C = [_t0B18, _t0B19, _t0B1A, _t0B1B];
    real _t0B1D = 0.e0;
    real _t0B1E = -0.1e1;
    real _t0B1F = 0.e0;
    real _t0B20 = 0.e0;
    vec4 _t0B21 = [_t0B1D, _t0B1E, _t0B1F, _t0B20];
    real _t0B22 = 0.e0;
    real _t0B23 = 0.e0;
    real _t0B24 = 0.1e1;
    real _t0B25 = 0.e0;
    vec4 _t0B26 = [_t0B22, _t0B23, _t0B24, _t0B25];
    real _t0B27 = 0.e0;
    real _t0B28 = 0.e0;
    real _t0B29 = 0.e0;
    real _t0B2A = 0.1e1;
    vec4 _t0B2B = [_t0B27, _t0B28, _t0B29, _t0B2A];
    tensor[4,4] _t0B2C = [_t0B1C, _t0B21, _t0B26, _t0B2B];
    real _t0B2D = 0.e0;
    real _t0B2E = 0.1e1;
    real _t0B2F = 0.e0;
    real _t0B30 = 0.e0;
    vec4 _t0B31 = [_t0B2D, _t0B2E, _t0B2F, _t0B30];
    real _t0B32 = -0.1e1;
    real _t0B33 = 0.e0;
    real _t0B34 = 0.e0;
    real _t0B35 = 0.e0;
    vec4 _t0B36 = [_t0B32, _t0B33, _t0B34, _t0B35];
    real _t0B37 = 0.e0;
    real _t0B38 = 0.e0;
    real _t0B39 = 0.1e1;
    real _t0B3A = 0.e0;
    vec4 _t0B3B = [_t0B37, _t0B38, _t0B39, _t0B3A];
    real _t0B3C = 0.e0;
    real _t0B3D = 0.e0;
    real _t0B3E = 0.e0;
    real _t0B3F = 0.1e1;
    vec4 _t0B40 = [_t0B3C, _t0B3D, _t0B3E, _t0B3F];
    tensor[4,4] _t0B41 = [_t0B31, _t0B36, _t0B3B, _t0B40];
    real _t0B42 = 0.1e1;
    real _t0B43 = 0.e0;
    real _t0B44 = 0.e0;
    real _t0B45 = 0.e0;
    vec4 _t0B46 = [_t0B42, _t0B43, _t0B44, _t0B45];
    real _t0B47 = 0.e0;
    real _t0B48 = 0.1e1;
    real _t0B49 = 0.e0;
    real _t0B4A = 0.e0;
    vec4 _t0B4B = [_t0B47, _t0B48, _t0B49, _t0B4A];
    real _t0B4C = 0.e0;
    real _t0B4D = 0.e0;
    real _t0B4E = 0.1e1;
    real _t0B4F = 0.e0;
    vec4 _t0B50 = [_t0B4C, _t0B4D, _t0B4E, _t0B4F];
    real _t0B51 = 0.e0;
    real _t0B52 = 0.e0;
    real _t0B53 = 0.e0;
    real _t0B54 = 0.1e1;
    vec4 _t0B55 = [_t0B51, _t0B52, _t0B53, _t0B54];
    tensor[4,4] _t0B56 = [_t0B46, _t0B4B, _t0B50, _t0B55];
    real _t0B57 = 0.e0;
    real _t0B58 = -0.1e1;
    real _t0B59 = 0.e0;
    real _t0B5A = 0.e0;
    vec4 _t0B5B = [_t0B57, _t0B58, _t0B59, _t0B5A];
    real _t0B5C = 0.1e1;
    real _t0B5D = 0.e0;
    real _t0B5E = 0.e0;
    real _t0B5F = 0.e0;
    vec4 _t0B60 = [_t0B5C, _t0B5D, _t0B5E, _t0B5F];
    real _t0B61 = 0.e0;
    real _t0B62 = 0.e0;
    real _t0B63 = 0.1e1;
    real _t0B64 = 0.e0;
    vec4 _t0B65 = [_t0B61, _t0B62, _t0B63, _t0B64];
    real _t0B66 = 0.e0;
    real _t0B67 = 0.e0;
    real _t0B68 = 0.e0;
    real _t0B69 = 0.1e1;
    vec4 _t0B6A = [_t0B66, _t0B67, _t0B68, _t0B69];
    tensor[4,4] _t0B6B = [_t0B5B, _t0B60, _t0B65, _t0B6A];
    tensor[4,4][6] _t0B6C = {_t0B02, _t0B17, _t0B2C, _t0B41, _t0B56, _t0B6B};
    real _t0B6D = 0.e0;
    real _t0B6E = -0.1e1;
    real _t0B6F = 0.1e1;
    real _t0B70 = 0.5e0;
    vec4 _t0B71 = [_t0B6D, _t0B6E, _t0B6F, _t0B70];
    real _t0B72 = 0.e0;
    real _t0B73 = -0.1e1;
    real _t0B74 = 0.e0;
    real _t0B75 = 0.e0;
    vec4 _t0B76 = [_t0B72, _t0B73, _t0B74, _t0B75];
    real _t0B77 = 0.1e1;
    real _t0B78 = 0.e0;
    real _t0B79 = 0.e0;
    real _t0B7A = 0.e0;
    vec4 _t0B7B = [_t0B77, _t0B78, _t0B79, _t0B7A];
    real _t0B7C = 0.e0;
    real _t0B7D = 0.e0;
    real _t0B7E = 0.e0;
    real _t0B7F = 0.1e1;
    vec4 _t0B80 = [_t0B7C, _t0B7D, _t0B7E, _t0B7F];
    tensor[4,4] _t0B81 = [_t0B71, _t0B76, _t0B7B, _t0B80];
    real _t0B82 = 0.e0;
    real _t0B83 = -0.1e1;
    real _t0B84 = 0.1e1;
    real _t0B85 = 0.5e0;
    vec4 _t0B86 = [_t0B82, _t0B83, _t0B84, _t0B85];
    real _t0B87 = 0.e0;
    real _t0B88 = -0.1e1;
    real _t0B89 = 0.e0;
    real _t0B8A = 0.e0;
    vec4 _t0B8B = [_t0B87, _t0B88, _t0B89, _t0B8A];
    real _t0B8C = 0.1e1;
    real _t0B8D = 0.e0;
    real _t0B8E = 0.e0;
    real _t0B8F = 0.1e1;
    vec4 _t0B90 = [_t0B8C, _t0B8D, _t0B8E, _t0B8F];
    real _t0B91 = 0.e0;
    real _t0B92 = 0.e0;
    real _t0B93 = 0.e0;
    real _t0B94 = 0.1e1;
    vec4 _t0B95 = [_t0B91, _t0B92, _t0B93, _t0B94];
    tensor[4,4] _t0B96 = [_t0B86, _t0B8B, _t0B90, _t0B95];
    real _t0B97 = 0.e0;
    real _t0B98 = -0.1e1;
    real _t0B99 = 0.e0;
    real _t0B9A = 0.e0;
    vec4 _t0B9B = [_t0B97, _t0B98, _t0B99, _t0B9A];
    real _t0B9C = 0.1e1;
    real _t0B9D = 0.e0;
    real _t0B9E = 0.e0;
    real _t0B9F = 0.e0;
    vec4 _t0BA0 = [_t0B9C, _t0B9D, _t0B9E, _t0B9F];
    real _t0BA1 = 0.e0;
    real _t0BA2 = 0.e0;
    real _t0BA3 = 0.1e1;
    real _t0BA4 = 0.e0;
    vec4 _t0BA5 = [_t0BA1, _t0BA2, _t0BA3, _t0BA4];
    real _t0BA6 = 0.e0;
    real _t0BA7 = 0.e0;
    real _t0BA8 = 0.e0;
    real _t0BA9 = 0.1e1;
    vec4 _t0BAA = [_t0BA6, _t0BA7, _t0BA8, _t0BA9];
    tensor[4,4] _t0BAB = [_t0B9B, _t0BA0, _t0BA5, _t0BAA];
    real _t0BAC = -0.1e1;
    real _t0BAD = 0.e0;
    real _t0BAE = 0.e0;
    real _t0BAF = 0.e0;
    vec4 _t0BB0 = [_t0BAC, _t0BAD, _t0BAE, _t0BAF];
    real _t0BB1 = 0.e0;
    real _t0BB2 = -0.1e1;
    real _t0BB3 = 0.e0;
    real _t0BB4 = 0.e0;
    vec4 _t0BB5 = [_t0BB1, _t0BB2, _t0BB3, _t0BB4];
    real _t0BB6 = 0.e0;
    real _t0BB7 = 0.e0;
    real _t0BB8 = 0.1e1;
    real _t0BB9 = 0.e0;
    vec4 _t0BBA = [_t0BB6, _t0BB7, _t0BB8, _t0BB9];
    real _t0BBB = 0.e0;
    real _t0BBC = 0.e0;
    real _t0BBD = 0.e0;
    real _t0BBE = 0.1e1;
    vec4 _t0BBF = [_t0BBB, _t0BBC, _t0BBD, _t0BBE];
    tensor[4,4] _t0BC0 = [_t0BB0, _t0BB5, _t0BBA, _t0BBF];
    real _t0BC1 = 0.e0;
    real _t0BC2 = 0.1e1;
    real _t0BC3 = 0.e0;
    real _t0BC4 = 0.e0;
    vec4 _t0BC5 = [_t0BC1, _t0BC2, _t0BC3, _t0BC4];
    real _t0BC6 = -0.1e1;
    real _t0BC7 = 0.e0;
    real _t0BC8 = 0.e0;
    real _t0BC9 = 0.e0;
    vec4 _t0BCA = [_t0BC6, _t0BC7, _t0BC8, _t0BC9];
    real _t0BCB = 0.e0;
    real _t0BCC = 0.e0;
    real _t0BCD = 0.1e1;
    real _t0BCE = 0.e0;
    vec4 _t0BCF = [_t0BCB, _t0BCC, _t0BCD, _t0BCE];
    real _t0BD0 = 0.e0;
    real _t0BD1 = 0.e0;
    real _t0BD2 = 0.e0;
    real _t0BD3 = 0.1e1;
    vec4 _t0BD4 = [_t0BD0, _t0BD1, _t0BD2, _t0BD3];
    tensor[4,4] _t0BD5 = [_t0BC5, _t0BCA, _t0BCF, _t0BD4];
    real _t0BD6 = 0.1e1;
    real _t0BD7 = 0.e0;
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    vec4 _t0BDA = [_t0BD6, _t0BD7, _t0BD8, _t0BD9];
    real _t0BDB = 0.e0;
    real _t0BDC = 0.1e1;
    real _t0BDD = 0.e0;
    real _t0BDE = 0.e0;
    vec4 _t0BDF = [_t0BDB, _t0BDC, _t0BDD, _t0BDE];
    real _t0BE0 = 0.e0;
    real _t0BE1 = 0.e0;
    real _t0BE2 = 0.1e1;
    real _t0BE3 = 0.e0;
    vec4 _t0BE4 = [_t0BE0, _t0BE1, _t0BE2, _t0BE3];
    real _t0BE5 = 0.e0;
    real _t0BE6 = 0.e0;
    real _t0BE7 = 0.e0;
    real _t0BE8 = 0.1e1;
    vec4 _t0BE9 = [_t0BE5, _t0BE6, _t0BE7, _t0BE8];
    tensor[4,4] _t0BEA = [_t0BDA, _t0BDF, _t0BE4, _t0BE9];
    tensor[4,4][6] _t0BEB = {_t0B81, _t0B96, _t0BAB, _t0BC0, _t0BD5, _t0BEA};
    tensor[4,4][6][6] _t0BEC = {_t0970, _t09EF, _t0A6E, _t0AED, _t0B6C, _t0BEB};
    real _t0BED = time05D4[1];
    int _t0BEE = prim $r2i01B7 (_t0BED);
    tensor[4,4][6] _t0BEF = prim $sub01C0<tensor[4,4][6]; %6> (_t0BEC, _t0BEE);
    real _t0BF0 = time05D4[1];
    int _t0BF1 = prim $r2i01B7 (_t0BF0);
    int[2] _t0BF2 = func nextCell405D8 (_t0BF1, cellId05D1, mesh05D0);
    int _t0BF3 = 1;
    int _t0BF4 = prim $sub01C0<int; %2> (_t0BF2, _t0BF3);
    tensor[4,4] _t0BF5 = prim $sub01C0<tensor[4,4]; %6> (_t0BEF, _t0BF4);
    real _t0BF6 = time05D4[0];
    vec3 _t0BF7 = prim *0036<$[3]> (_t0BF6, dPos05D3);
    vec3 _t0BF8 = prim +0017<$[3]> (_t0BF7, refPos05D2);
    real _t0BF9 = _t0BF8[0];
    real _t0BFA = time05D4[0];
    vec3 _t0BFB = prim *0036<$[3]> (_t0BFA, dPos05D3);
    vec3 _t0BFC = prim +0017<$[3]> (_t0BFB, refPos05D2);
    real _t0BFD = _t0BFC[1];
    real _t0BFE = time05D4[0];
    vec3 _t0BFF = prim *0036<$[3]> (_t0BFE, dPos05D3);
    vec3 _t0C00 = prim +0017<$[3]> (_t0BFF, refPos05D2);
    real _t0C01 = _t0C00[2];
    real _t0C02 = 0.1e1;
    vec4 _t0C03 = [_t0BF9, _t0BFD, _t0C01, _t0C02];
    vec4 _t0C04 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0BF5, _t0C03);
    real _t0C05 = _t0C04[0];
    real _t0C06 = 0.1e1;
    real _t0C07 = 0.e0;
    real _t0C08 = 0.e0;
    real _t0C09 = 0.e0;
    vec4 _t0C0A = [_t0C06, _t0C07, _t0C08, _t0C09];
    real _t0C0B = 0.e0;
    real _t0C0C = 0.1e1;
    real _t0C0D = 0.e0;
    real _t0C0E = 0.e0;
    vec4 _t0C0F = [_t0C0B, _t0C0C, _t0C0D, _t0C0E];
    real _t0C10 = 0.e0;
    real _t0C11 = 0.e0;
    real _t0C12 = 0.1e1;
    real _t0C13 = 0.e0;
    vec4 _t0C14 = [_t0C10, _t0C11, _t0C12, _t0C13];
    real _t0C15 = 0.e0;
    real _t0C16 = 0.e0;
    real _t0C17 = 0.e0;
    real _t0C18 = 0.1e1;
    vec4 _t0C19 = [_t0C15, _t0C16, _t0C17, _t0C18];
    tensor[4,4] _t0C1A = [_t0C0A, _t0C0F, _t0C14, _t0C19];
    real _t0C1B = 0.1e1;
    real _t0C1C = 0.e0;
    real _t0C1D = 0.e0;
    real _t0C1E = 0.e0;
    vec4 _t0C1F = [_t0C1B, _t0C1C, _t0C1D, _t0C1E];
    real _t0C20 = 0.e0;
    real _t0C21 = 0.1e1;
    real _t0C22 = 0.e0;
    real _t0C23 = 0.e0;
    vec4 _t0C24 = [_t0C20, _t0C21, _t0C22, _t0C23];
    real _t0C25 = 0.e0;
    real _t0C26 = 0.e0;
    real _t0C27 = 0.1e1;
    real _t0C28 = 0.1e1;
    vec4 _t0C29 = [_t0C25, _t0C26, _t0C27, _t0C28];
    real _t0C2A = 0.e0;
    real _t0C2B = 0.e0;
    real _t0C2C = 0.e0;
    real _t0C2D = 0.1e1;
    vec4 _t0C2E = [_t0C2A, _t0C2B, _t0C2C, _t0C2D];
    tensor[4,4] _t0C2F = [_t0C1F, _t0C24, _t0C29, _t0C2E];
    real _t0C30 = 0.e0;
    real _t0C31 = 0.1e1;
    real _t0C32 = 0.e0;
    real _t0C33 = 0.e0;
    vec4 _t0C34 = [_t0C30, _t0C31, _t0C32, _t0C33];
    real _t0C35 = 0.e0;
    real _t0C36 = 0.e0;
    real _t0C37 = 0.1e1;
    real _t0C38 = 0.e0;
    vec4 _t0C39 = [_t0C35, _t0C36, _t0C37, _t0C38];
    real _t0C3A = 0.1e1;
    real _t0C3B = -0.1e1;
    real _t0C3C = 0.e0;
    real _t0C3D = -0.5e0;
    vec4 _t0C3E = [_t0C3A, _t0C3B, _t0C3C, _t0C3D];
    real _t0C3F = 0.e0;
    real _t0C40 = 0.e0;
    real _t0C41 = 0.e0;
    real _t0C42 = 0.1e1;
    vec4 _t0C43 = [_t0C3F, _t0C40, _t0C41, _t0C42];
    tensor[4,4] _t0C44 = [_t0C34, _t0C39, _t0C3E, _t0C43];
    real _t0C45 = 0.e0;
    real _t0C46 = 0.e0;
    real _t0C47 = -0.1e1;
    real _t0C48 = 0.e0;
    vec4 _t0C49 = [_t0C45, _t0C46, _t0C47, _t0C48];
    real _t0C4A = 0.e0;
    real _t0C4B = 0.1e1;
    real _t0C4C = 0.e0;
    real _t0C4D = 0.e0;
    vec4 _t0C4E = [_t0C4A, _t0C4B, _t0C4C, _t0C4D];
    real _t0C4F = 0.1e1;
    real _t0C50 = -0.1e1;
    real _t0C51 = 0.e0;
    real _t0C52 = -0.5e0;
    vec4 _t0C53 = [_t0C4F, _t0C50, _t0C51, _t0C52];
    real _t0C54 = 0.e0;
    real _t0C55 = 0.e0;
    real _t0C56 = 0.e0;
    real _t0C57 = 0.1e1;
    vec4 _t0C58 = [_t0C54, _t0C55, _t0C56, _t0C57];
    tensor[4,4] _t0C59 = [_t0C49, _t0C4E, _t0C53, _t0C58];
    real _t0C5A = 0.e0;
    real _t0C5B = -0.1e1;
    real _t0C5C = 0.e0;
    real _t0C5D = 0.e0;
    vec4 _t0C5E = [_t0C5A, _t0C5B, _t0C5C, _t0C5D];
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    real _t0C61 = -0.1e1;
    real _t0C62 = 0.e0;
    vec4 _t0C63 = [_t0C5F, _t0C60, _t0C61, _t0C62];
    real _t0C64 = 0.1e1;
    real _t0C65 = -0.1e1;
    real _t0C66 = 0.e0;
    real _t0C67 = -0.5e0;
    vec4 _t0C68 = [_t0C64, _t0C65, _t0C66, _t0C67];
    real _t0C69 = 0.e0;
    real _t0C6A = 0.e0;
    real _t0C6B = 0.e0;
    real _t0C6C = 0.1e1;
    vec4 _t0C6D = [_t0C69, _t0C6A, _t0C6B, _t0C6C];
    tensor[4,4] _t0C6E = [_t0C5E, _t0C63, _t0C68, _t0C6D];
    real _t0C6F = 0.e0;
    real _t0C70 = 0.e0;
    real _t0C71 = 0.1e1;
    real _t0C72 = 0.e0;
    vec4 _t0C73 = [_t0C6F, _t0C70, _t0C71, _t0C72];
    real _t0C74 = 0.e0;
    real _t0C75 = -0.1e1;
    real _t0C76 = 0.e0;
    real _t0C77 = 0.e0;
    vec4 _t0C78 = [_t0C74, _t0C75, _t0C76, _t0C77];
    real _t0C79 = 0.1e1;
    real _t0C7A = -0.1e1;
    real _t0C7B = 0.e0;
    real _t0C7C = -0.5e0;
    vec4 _t0C7D = [_t0C79, _t0C7A, _t0C7B, _t0C7C];
    real _t0C7E = 0.e0;
    real _t0C7F = 0.e0;
    real _t0C80 = 0.e0;
    real _t0C81 = 0.1e1;
    vec4 _t0C82 = [_t0C7E, _t0C7F, _t0C80, _t0C81];
    tensor[4,4] _t0C83 = [_t0C73, _t0C78, _t0C7D, _t0C82];
    tensor[4,4][6] _t0C84 = {_t0C1A, _t0C2F, _t0C44, _t0C59, _t0C6E, _t0C83};
    real _t0C85 = 0.1e1;
    real _t0C86 = 0.e0;
    real _t0C87 = 0.e0;
    real _t0C88 = 0.e0;
    vec4 _t0C89 = [_t0C85, _t0C86, _t0C87, _t0C88];
    real _t0C8A = 0.e0;
    real _t0C8B = 0.1e1;
    real _t0C8C = 0.e0;
    real _t0C8D = 0.e0;
    vec4 _t0C8E = [_t0C8A, _t0C8B, _t0C8C, _t0C8D];
    real _t0C8F = 0.e0;
    real _t0C90 = 0.e0;
    real _t0C91 = 0.1e1;
    real _t0C92 = -0.1e1;
    vec4 _t0C93 = [_t0C8F, _t0C90, _t0C91, _t0C92];
    real _t0C94 = 0.e0;
    real _t0C95 = 0.e0;
    real _t0C96 = 0.e0;
    real _t0C97 = 0.1e1;
    vec4 _t0C98 = [_t0C94, _t0C95, _t0C96, _t0C97];
    tensor[4,4] _t0C99 = [_t0C89, _t0C8E, _t0C93, _t0C98];
    real _t0C9A = 0.1e1;
    real _t0C9B = 0.e0;
    real _t0C9C = 0.e0;
    real _t0C9D = 0.e0;
    vec4 _t0C9E = [_t0C9A, _t0C9B, _t0C9C, _t0C9D];
    real _t0C9F = 0.e0;
    real _t0CA0 = 0.1e1;
    real _t0CA1 = 0.e0;
    real _t0CA2 = 0.e0;
    vec4 _t0CA3 = [_t0C9F, _t0CA0, _t0CA1, _t0CA2];
    real _t0CA4 = 0.e0;
    real _t0CA5 = 0.e0;
    real _t0CA6 = 0.1e1;
    real _t0CA7 = 0.e0;
    vec4 _t0CA8 = [_t0CA4, _t0CA5, _t0CA6, _t0CA7];
    real _t0CA9 = 0.e0;
    real _t0CAA = 0.e0;
    real _t0CAB = 0.e0;
    real _t0CAC = 0.1e1;
    vec4 _t0CAD = [_t0CA9, _t0CAA, _t0CAB, _t0CAC];
    tensor[4,4] _t0CAE = [_t0C9E, _t0CA3, _t0CA8, _t0CAD];
    real _t0CAF = 0.e0;
    real _t0CB0 = 0.1e1;
    real _t0CB1 = 0.e0;
    real _t0CB2 = 0.e0;
    vec4 _t0CB3 = [_t0CAF, _t0CB0, _t0CB1, _t0CB2];
    real _t0CB4 = 0.e0;
    real _t0CB5 = 0.e0;
    real _t0CB6 = 0.1e1;
    real _t0CB7 = -0.1e1;
    vec4 _t0CB8 = [_t0CB4, _t0CB5, _t0CB6, _t0CB7];
    real _t0CB9 = 0.1e1;
    real _t0CBA = -0.1e1;
    real _t0CBB = 0.e0;
    real _t0CBC = -0.5e0;
    vec4 _t0CBD = [_t0CB9, _t0CBA, _t0CBB, _t0CBC];
    real _t0CBE = 0.e0;
    real _t0CBF = 0.e0;
    real _t0CC0 = 0.e0;
    real _t0CC1 = 0.1e1;
    vec4 _t0CC2 = [_t0CBE, _t0CBF, _t0CC0, _t0CC1];
    tensor[4,4] _t0CC3 = [_t0CB3, _t0CB8, _t0CBD, _t0CC2];
    real _t0CC4 = 0.e0;
    real _t0CC5 = 0.e0;
    real _t0CC6 = -0.1e1;
    real _t0CC7 = 0.1e1;
    vec4 _t0CC8 = [_t0CC4, _t0CC5, _t0CC6, _t0CC7];
    real _t0CC9 = 0.e0;
    real _t0CCA = 0.1e1;
    real _t0CCB = 0.e0;
    real _t0CCC = 0.e0;
    vec4 _t0CCD = [_t0CC9, _t0CCA, _t0CCB, _t0CCC];
    real _t0CCE = 0.1e1;
    real _t0CCF = -0.1e1;
    real _t0CD0 = 0.e0;
    real _t0CD1 = -0.5e0;
    vec4 _t0CD2 = [_t0CCE, _t0CCF, _t0CD0, _t0CD1];
    real _t0CD3 = 0.e0;
    real _t0CD4 = 0.e0;
    real _t0CD5 = 0.e0;
    real _t0CD6 = 0.1e1;
    vec4 _t0CD7 = [_t0CD3, _t0CD4, _t0CD5, _t0CD6];
    tensor[4,4] _t0CD8 = [_t0CC8, _t0CCD, _t0CD2, _t0CD7];
    real _t0CD9 = 0.e0;
    real _t0CDA = -0.1e1;
    real _t0CDB = 0.e0;
    real _t0CDC = 0.e0;
    vec4 _t0CDD = [_t0CD9, _t0CDA, _t0CDB, _t0CDC];
    real _t0CDE = 0.e0;
    real _t0CDF = 0.e0;
    real _t0CE0 = -0.1e1;
    real _t0CE1 = 0.1e1;
    vec4 _t0CE2 = [_t0CDE, _t0CDF, _t0CE0, _t0CE1];
    real _t0CE3 = 0.1e1;
    real _t0CE4 = -0.1e1;
    real _t0CE5 = 0.e0;
    real _t0CE6 = -0.5e0;
    vec4 _t0CE7 = [_t0CE3, _t0CE4, _t0CE5, _t0CE6];
    real _t0CE8 = 0.e0;
    real _t0CE9 = 0.e0;
    real _t0CEA = 0.e0;
    real _t0CEB = 0.1e1;
    vec4 _t0CEC = [_t0CE8, _t0CE9, _t0CEA, _t0CEB];
    tensor[4,4] _t0CED = [_t0CDD, _t0CE2, _t0CE7, _t0CEC];
    real _t0CEE = 0.e0;
    real _t0CEF = 0.e0;
    real _t0CF0 = 0.1e1;
    real _t0CF1 = -0.1e1;
    vec4 _t0CF2 = [_t0CEE, _t0CEF, _t0CF0, _t0CF1];
    real _t0CF3 = 0.e0;
    real _t0CF4 = -0.1e1;
    real _t0CF5 = 0.e0;
    real _t0CF6 = 0.e0;
    vec4 _t0CF7 = [_t0CF3, _t0CF4, _t0CF5, _t0CF6];
    real _t0CF8 = 0.1e1;
    real _t0CF9 = -0.1e1;
    real _t0CFA = 0.e0;
    real _t0CFB = -0.5e0;
    vec4 _t0CFC = [_t0CF8, _t0CF9, _t0CFA, _t0CFB];
    real _t0CFD = 0.e0;
    real _t0CFE = 0.e0;
    real _t0CFF = 0.e0;
    real _t0D00 = 0.1e1;
    vec4 _t0D01 = [_t0CFD, _t0CFE, _t0CFF, _t0D00];
    tensor[4,4] _t0D02 = [_t0CF2, _t0CF7, _t0CFC, _t0D01];
    tensor[4,4][6] _t0D03 = {_t0C99, _t0CAE, _t0CC3, _t0CD8, _t0CED, _t0D02};
    real _t0D04 = 0.1e1;
    real _t0D05 = 0.e0;
    real _t0D06 = 0.1e1;
    real _t0D07 = 0.5e0;
    vec4 _t0D08 = [_t0D04, _t0D05, _t0D06, _t0D07];
    real _t0D09 = 0.1e1;
    real _t0D0A = 0.e0;
    real _t0D0B = 0.e0;
    real _t0D0C = 0.e0;
    vec4 _t0D0D = [_t0D09, _t0D0A, _t0D0B, _t0D0C];
    real _t0D0E = 0.e0;
    real _t0D0F = 0.1e1;
    real _t0D10 = 0.e0;
    real _t0D11 = 0.e0;
    vec4 _t0D12 = [_t0D0E, _t0D0F, _t0D10, _t0D11];
    real _t0D13 = 0.e0;
    real _t0D14 = 0.e0;
    real _t0D15 = 0.e0;
    real _t0D16 = 0.1e1;
    vec4 _t0D17 = [_t0D13, _t0D14, _t0D15, _t0D16];
    tensor[4,4] _t0D18 = [_t0D08, _t0D0D, _t0D12, _t0D17];
    real _t0D19 = 0.1e1;
    real _t0D1A = 0.e0;
    real _t0D1B = 0.1e1;
    real _t0D1C = 0.5e0;
    vec4 _t0D1D = [_t0D19, _t0D1A, _t0D1B, _t0D1C];
    real _t0D1E = 0.1e1;
    real _t0D1F = 0.e0;
    real _t0D20 = 0.e0;
    real _t0D21 = 0.e0;
    vec4 _t0D22 = [_t0D1E, _t0D1F, _t0D20, _t0D21];
    real _t0D23 = 0.e0;
    real _t0D24 = 0.1e1;
    real _t0D25 = 0.e0;
    real _t0D26 = 0.1e1;
    vec4 _t0D27 = [_t0D23, _t0D24, _t0D25, _t0D26];
    real _t0D28 = 0.e0;
    real _t0D29 = 0.e0;
    real _t0D2A = 0.e0;
    real _t0D2B = 0.1e1;
    vec4 _t0D2C = [_t0D28, _t0D29, _t0D2A, _t0D2B];
    tensor[4,4] _t0D2D = [_t0D1D, _t0D22, _t0D27, _t0D2C];
    real _t0D2E = 0.1e1;
    real _t0D2F = 0.e0;
    real _t0D30 = 0.e0;
    real _t0D31 = 0.e0;
    vec4 _t0D32 = [_t0D2E, _t0D2F, _t0D30, _t0D31];
    real _t0D33 = 0.e0;
    real _t0D34 = 0.1e1;
    real _t0D35 = 0.e0;
    real _t0D36 = 0.e0;
    vec4 _t0D37 = [_t0D33, _t0D34, _t0D35, _t0D36];
    real _t0D38 = 0.e0;
    real _t0D39 = 0.e0;
    real _t0D3A = 0.1e1;
    real _t0D3B = 0.e0;
    vec4 _t0D3C = [_t0D38, _t0D39, _t0D3A, _t0D3B];
    real _t0D3D = 0.e0;
    real _t0D3E = 0.e0;
    real _t0D3F = 0.e0;
    real _t0D40 = 0.1e1;
    vec4 _t0D41 = [_t0D3D, _t0D3E, _t0D3F, _t0D40];
    tensor[4,4] _t0D42 = [_t0D32, _t0D37, _t0D3C, _t0D41];
    real _t0D43 = 0.e0;
    real _t0D44 = -0.1e1;
    real _t0D45 = 0.e0;
    real _t0D46 = 0.e0;
    vec4 _t0D47 = [_t0D43, _t0D44, _t0D45, _t0D46];
    real _t0D48 = 0.1e1;
    real _t0D49 = 0.e0;
    real _t0D4A = 0.e0;
    real _t0D4B = 0.e0;
    vec4 _t0D4C = [_t0D48, _t0D49, _t0D4A, _t0D4B];
    real _t0D4D = 0.e0;
    real _t0D4E = 0.e0;
    real _t0D4F = 0.1e1;
    real _t0D50 = 0.e0;
    vec4 _t0D51 = [_t0D4D, _t0D4E, _t0D4F, _t0D50];
    real _t0D52 = 0.e0;
    real _t0D53 = 0.e0;
    real _t0D54 = 0.e0;
    real _t0D55 = 0.1e1;
    vec4 _t0D56 = [_t0D52, _t0D53, _t0D54, _t0D55];
    tensor[4,4] _t0D57 = [_t0D47, _t0D4C, _t0D51, _t0D56];
    real _t0D58 = -0.1e1;
    real _t0D59 = 0.e0;
    real _t0D5A = 0.e0;
    real _t0D5B = 0.e0;
    vec4 _t0D5C = [_t0D58, _t0D59, _t0D5A, _t0D5B];
    real _t0D5D = 0.e0;
    real _t0D5E = -0.1e1;
    real _t0D5F = 0.e0;
    real _t0D60 = 0.e0;
    vec4 _t0D61 = [_t0D5D, _t0D5E, _t0D5F, _t0D60];
    real _t0D62 = 0.e0;
    real _t0D63 = 0.e0;
    real _t0D64 = 0.1e1;
    real _t0D65 = 0.e0;
    vec4 _t0D66 = [_t0D62, _t0D63, _t0D64, _t0D65];
    real _t0D67 = 0.e0;
    real _t0D68 = 0.e0;
    real _t0D69 = 0.e0;
    real _t0D6A = 0.1e1;
    vec4 _t0D6B = [_t0D67, _t0D68, _t0D69, _t0D6A];
    tensor[4,4] _t0D6C = [_t0D5C, _t0D61, _t0D66, _t0D6B];
    real _t0D6D = 0.e0;
    real _t0D6E = 0.1e1;
    real _t0D6F = 0.e0;
    real _t0D70 = 0.e0;
    vec4 _t0D71 = [_t0D6D, _t0D6E, _t0D6F, _t0D70];
    real _t0D72 = -0.1e1;
    real _t0D73 = 0.e0;
    real _t0D74 = 0.e0;
    real _t0D75 = 0.e0;
    vec4 _t0D76 = [_t0D72, _t0D73, _t0D74, _t0D75];
    real _t0D77 = 0.e0;
    real _t0D78 = 0.e0;
    real _t0D79 = 0.1e1;
    real _t0D7A = 0.e0;
    vec4 _t0D7B = [_t0D77, _t0D78, _t0D79, _t0D7A];
    real _t0D7C = 0.e0;
    real _t0D7D = 0.e0;
    real _t0D7E = 0.e0;
    real _t0D7F = 0.1e1;
    vec4 _t0D80 = [_t0D7C, _t0D7D, _t0D7E, _t0D7F];
    tensor[4,4] _t0D81 = [_t0D71, _t0D76, _t0D7B, _t0D80];
    tensor[4,4][6] _t0D82 = {_t0D18, _t0D2D, _t0D42, _t0D57, _t0D6C, _t0D81};
    real _t0D83 = 0.e0;
    real _t0D84 = 0.1e1;
    real _t0D85 = 0.1e1;
    real _t0D86 = 0.5e0;
    vec4 _t0D87 = [_t0D83, _t0D84, _t0D85, _t0D86];
    real _t0D88 = 0.e0;
    real _t0D89 = 0.1e1;
    real _t0D8A = 0.e0;
    real _t0D8B = 0.e0;
    vec4 _t0D8C = [_t0D88, _t0D89, _t0D8A, _t0D8B];
    real _t0D8D = -0.1e1;
    real _t0D8E = 0.e0;
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    vec4 _t0D91 = [_t0D8D, _t0D8E, _t0D8F, _t0D90];
    real _t0D92 = 0.e0;
    real _t0D93 = 0.e0;
    real _t0D94 = 0.e0;
    real _t0D95 = 0.1e1;
    vec4 _t0D96 = [_t0D92, _t0D93, _t0D94, _t0D95];
    tensor[4,4] _t0D97 = [_t0D87, _t0D8C, _t0D91, _t0D96];
    real _t0D98 = 0.e0;
    real _t0D99 = 0.1e1;
    real _t0D9A = 0.1e1;
    real _t0D9B = 0.5e0;
    vec4 _t0D9C = [_t0D98, _t0D99, _t0D9A, _t0D9B];
    real _t0D9D = 0.e0;
    real _t0D9E = 0.1e1;
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.e0;
    vec4 _t0DA1 = [_t0D9D, _t0D9E, _t0D9F, _t0DA0];
    real _t0DA2 = -0.1e1;
    real _t0DA3 = 0.e0;
    real _t0DA4 = 0.e0;
    real _t0DA5 = 0.1e1;
    vec4 _t0DA6 = [_t0DA2, _t0DA3, _t0DA4, _t0DA5];
    real _t0DA7 = 0.e0;
    real _t0DA8 = 0.e0;
    real _t0DA9 = 0.e0;
    real _t0DAA = 0.1e1;
    vec4 _t0DAB = [_t0DA7, _t0DA8, _t0DA9, _t0DAA];
    tensor[4,4] _t0DAC = [_t0D9C, _t0DA1, _t0DA6, _t0DAB];
    real _t0DAD = 0.e0;
    real _t0DAE = 0.1e1;
    real _t0DAF = 0.e0;
    real _t0DB0 = 0.e0;
    vec4 _t0DB1 = [_t0DAD, _t0DAE, _t0DAF, _t0DB0];
    real _t0DB2 = -0.1e1;
    real _t0DB3 = 0.e0;
    real _t0DB4 = 0.e0;
    real _t0DB5 = 0.e0;
    vec4 _t0DB6 = [_t0DB2, _t0DB3, _t0DB4, _t0DB5];
    real _t0DB7 = 0.e0;
    real _t0DB8 = 0.e0;
    real _t0DB9 = 0.1e1;
    real _t0DBA = 0.e0;
    vec4 _t0DBB = [_t0DB7, _t0DB8, _t0DB9, _t0DBA];
    real _t0DBC = 0.e0;
    real _t0DBD = 0.e0;
    real _t0DBE = 0.e0;
    real _t0DBF = 0.1e1;
    vec4 _t0DC0 = [_t0DBC, _t0DBD, _t0DBE, _t0DBF];
    tensor[4,4] _t0DC1 = [_t0DB1, _t0DB6, _t0DBB, _t0DC0];
    real _t0DC2 = 0.1e1;
    real _t0DC3 = 0.e0;
    real _t0DC4 = 0.e0;
    real _t0DC5 = 0.e0;
    vec4 _t0DC6 = [_t0DC2, _t0DC3, _t0DC4, _t0DC5];
    real _t0DC7 = 0.e0;
    real _t0DC8 = 0.1e1;
    real _t0DC9 = 0.e0;
    real _t0DCA = 0.e0;
    vec4 _t0DCB = [_t0DC7, _t0DC8, _t0DC9, _t0DCA];
    real _t0DCC = 0.e0;
    real _t0DCD = 0.e0;
    real _t0DCE = 0.1e1;
    real _t0DCF = 0.e0;
    vec4 _t0DD0 = [_t0DCC, _t0DCD, _t0DCE, _t0DCF];
    real _t0DD1 = 0.e0;
    real _t0DD2 = 0.e0;
    real _t0DD3 = 0.e0;
    real _t0DD4 = 0.1e1;
    vec4 _t0DD5 = [_t0DD1, _t0DD2, _t0DD3, _t0DD4];
    tensor[4,4] _t0DD6 = [_t0DC6, _t0DCB, _t0DD0, _t0DD5];
    real _t0DD7 = 0.e0;
    real _t0DD8 = -0.1e1;
    real _t0DD9 = 0.e0;
    real _t0DDA = 0.e0;
    vec4 _t0DDB = [_t0DD7, _t0DD8, _t0DD9, _t0DDA];
    real _t0DDC = 0.1e1;
    real _t0DDD = 0.e0;
    real _t0DDE = 0.e0;
    real _t0DDF = 0.e0;
    vec4 _t0DE0 = [_t0DDC, _t0DDD, _t0DDE, _t0DDF];
    real _t0DE1 = 0.e0;
    real _t0DE2 = 0.e0;
    real _t0DE3 = 0.1e1;
    real _t0DE4 = 0.e0;
    vec4 _t0DE5 = [_t0DE1, _t0DE2, _t0DE3, _t0DE4];
    real _t0DE6 = 0.e0;
    real _t0DE7 = 0.e0;
    real _t0DE8 = 0.e0;
    real _t0DE9 = 0.1e1;
    vec4 _t0DEA = [_t0DE6, _t0DE7, _t0DE8, _t0DE9];
    tensor[4,4] _t0DEB = [_t0DDB, _t0DE0, _t0DE5, _t0DEA];
    real _t0DEC = -0.1e1;
    real _t0DED = 0.e0;
    real _t0DEE = 0.e0;
    real _t0DEF = 0.e0;
    vec4 _t0DF0 = [_t0DEC, _t0DED, _t0DEE, _t0DEF];
    real _t0DF1 = 0.e0;
    real _t0DF2 = -0.1e1;
    real _t0DF3 = 0.e0;
    real _t0DF4 = 0.e0;
    vec4 _t0DF5 = [_t0DF1, _t0DF2, _t0DF3, _t0DF4];
    real _t0DF6 = 0.e0;
    real _t0DF7 = 0.e0;
    real _t0DF8 = 0.1e1;
    real _t0DF9 = 0.e0;
    vec4 _t0DFA = [_t0DF6, _t0DF7, _t0DF8, _t0DF9];
    real _t0DFB = 0.e0;
    real _t0DFC = 0.e0;
    real _t0DFD = 0.e0;
    real _t0DFE = 0.1e1;
    vec4 _t0DFF = [_t0DFB, _t0DFC, _t0DFD, _t0DFE];
    tensor[4,4] _t0E00 = [_t0DF0, _t0DF5, _t0DFA, _t0DFF];
    tensor[4,4][6] _t0E01 = {_t0D97, _t0DAC, _t0DC1, _t0DD6, _t0DEB, _t0E00};
    real _t0E02 = -0.1e1;
    real _t0E03 = 0.e0;
    real _t0E04 = 0.1e1;
    real _t0E05 = 0.5e0;
    vec4 _t0E06 = [_t0E02, _t0E03, _t0E04, _t0E05];
    real _t0E07 = -0.1e1;
    real _t0E08 = 0.e0;
    real _t0E09 = 0.e0;
    real _t0E0A = 0.e0;
    vec4 _t0E0B = [_t0E07, _t0E08, _t0E09, _t0E0A];
    real _t0E0C = 0.e0;
    real _t0E0D = -0.1e1;
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    vec4 _t0E10 = [_t0E0C, _t0E0D, _t0E0E, _t0E0F];
    real _t0E11 = 0.e0;
    real _t0E12 = 0.e0;
    real _t0E13 = 0.e0;
    real _t0E14 = 0.1e1;
    vec4 _t0E15 = [_t0E11, _t0E12, _t0E13, _t0E14];
    tensor[4,4] _t0E16 = [_t0E06, _t0E0B, _t0E10, _t0E15];
    real _t0E17 = -0.1e1;
    real _t0E18 = 0.e0;
    real _t0E19 = 0.1e1;
    real _t0E1A = 0.5e0;
    vec4 _t0E1B = [_t0E17, _t0E18, _t0E19, _t0E1A];
    real _t0E1C = -0.1e1;
    real _t0E1D = 0.e0;
    real _t0E1E = 0.e0;
    real _t0E1F = 0.e0;
    vec4 _t0E20 = [_t0E1C, _t0E1D, _t0E1E, _t0E1F];
    real _t0E21 = 0.e0;
    real _t0E22 = -0.1e1;
    real _t0E23 = 0.e0;
    real _t0E24 = 0.1e1;
    vec4 _t0E25 = [_t0E21, _t0E22, _t0E23, _t0E24];
    real _t0E26 = 0.e0;
    real _t0E27 = 0.e0;
    real _t0E28 = 0.e0;
    real _t0E29 = 0.1e1;
    vec4 _t0E2A = [_t0E26, _t0E27, _t0E28, _t0E29];
    tensor[4,4] _t0E2B = [_t0E1B, _t0E20, _t0E25, _t0E2A];
    real _t0E2C = -0.1e1;
    real _t0E2D = 0.e0;
    real _t0E2E = 0.e0;
    real _t0E2F = 0.e0;
    vec4 _t0E30 = [_t0E2C, _t0E2D, _t0E2E, _t0E2F];
    real _t0E31 = 0.e0;
    real _t0E32 = -0.1e1;
    real _t0E33 = 0.e0;
    real _t0E34 = 0.e0;
    vec4 _t0E35 = [_t0E31, _t0E32, _t0E33, _t0E34];
    real _t0E36 = 0.e0;
    real _t0E37 = 0.e0;
    real _t0E38 = 0.1e1;
    real _t0E39 = 0.e0;
    vec4 _t0E3A = [_t0E36, _t0E37, _t0E38, _t0E39];
    real _t0E3B = 0.e0;
    real _t0E3C = 0.e0;
    real _t0E3D = 0.e0;
    real _t0E3E = 0.1e1;
    vec4 _t0E3F = [_t0E3B, _t0E3C, _t0E3D, _t0E3E];
    tensor[4,4] _t0E40 = [_t0E30, _t0E35, _t0E3A, _t0E3F];
    real _t0E41 = 0.e0;
    real _t0E42 = 0.1e1;
    real _t0E43 = 0.e0;
    real _t0E44 = 0.e0;
    vec4 _t0E45 = [_t0E41, _t0E42, _t0E43, _t0E44];
    real _t0E46 = -0.1e1;
    real _t0E47 = 0.e0;
    real _t0E48 = 0.e0;
    real _t0E49 = 0.e0;
    vec4 _t0E4A = [_t0E46, _t0E47, _t0E48, _t0E49];
    real _t0E4B = 0.e0;
    real _t0E4C = 0.e0;
    real _t0E4D = 0.1e1;
    real _t0E4E = 0.e0;
    vec4 _t0E4F = [_t0E4B, _t0E4C, _t0E4D, _t0E4E];
    real _t0E50 = 0.e0;
    real _t0E51 = 0.e0;
    real _t0E52 = 0.e0;
    real _t0E53 = 0.1e1;
    vec4 _t0E54 = [_t0E50, _t0E51, _t0E52, _t0E53];
    tensor[4,4] _t0E55 = [_t0E45, _t0E4A, _t0E4F, _t0E54];
    real _t0E56 = 0.1e1;
    real _t0E57 = 0.e0;
    real _t0E58 = 0.e0;
    real _t0E59 = 0.e0;
    vec4 _t0E5A = [_t0E56, _t0E57, _t0E58, _t0E59];
    real _t0E5B = 0.e0;
    real _t0E5C = 0.1e1;
    real _t0E5D = 0.e0;
    real _t0E5E = 0.e0;
    vec4 _t0E5F = [_t0E5B, _t0E5C, _t0E5D, _t0E5E];
    real _t0E60 = 0.e0;
    real _t0E61 = 0.e0;
    real _t0E62 = 0.1e1;
    real _t0E63 = 0.e0;
    vec4 _t0E64 = [_t0E60, _t0E61, _t0E62, _t0E63];
    real _t0E65 = 0.e0;
    real _t0E66 = 0.e0;
    real _t0E67 = 0.e0;
    real _t0E68 = 0.1e1;
    vec4 _t0E69 = [_t0E65, _t0E66, _t0E67, _t0E68];
    tensor[4,4] _t0E6A = [_t0E5A, _t0E5F, _t0E64, _t0E69];
    real _t0E6B = 0.e0;
    real _t0E6C = -0.1e1;
    real _t0E6D = 0.e0;
    real _t0E6E = 0.e0;
    vec4 _t0E6F = [_t0E6B, _t0E6C, _t0E6D, _t0E6E];
    real _t0E70 = 0.1e1;
    real _t0E71 = 0.e0;
    real _t0E72 = 0.e0;
    real _t0E73 = 0.e0;
    vec4 _t0E74 = [_t0E70, _t0E71, _t0E72, _t0E73];
    real _t0E75 = 0.e0;
    real _t0E76 = 0.e0;
    real _t0E77 = 0.1e1;
    real _t0E78 = 0.e0;
    vec4 _t0E79 = [_t0E75, _t0E76, _t0E77, _t0E78];
    real _t0E7A = 0.e0;
    real _t0E7B = 0.e0;
    real _t0E7C = 0.e0;
    real _t0E7D = 0.1e1;
    vec4 _t0E7E = [_t0E7A, _t0E7B, _t0E7C, _t0E7D];
    tensor[4,4] _t0E7F = [_t0E6F, _t0E74, _t0E79, _t0E7E];
    tensor[4,4][6] _t0E80 = {_t0E16, _t0E2B, _t0E40, _t0E55, _t0E6A, _t0E7F};
    real _t0E81 = 0.e0;
    real _t0E82 = -0.1e1;
    real _t0E83 = 0.1e1;
    real _t0E84 = 0.5e0;
    vec4 _t0E85 = [_t0E81, _t0E82, _t0E83, _t0E84];
    real _t0E86 = 0.e0;
    real _t0E87 = -0.1e1;
    real _t0E88 = 0.e0;
    real _t0E89 = 0.e0;
    vec4 _t0E8A = [_t0E86, _t0E87, _t0E88, _t0E89];
    real _t0E8B = 0.1e1;
    real _t0E8C = 0.e0;
    real _t0E8D = 0.e0;
    real _t0E8E = 0.e0;
    vec4 _t0E8F = [_t0E8B, _t0E8C, _t0E8D, _t0E8E];
    real _t0E90 = 0.e0;
    real _t0E91 = 0.e0;
    real _t0E92 = 0.e0;
    real _t0E93 = 0.1e1;
    vec4 _t0E94 = [_t0E90, _t0E91, _t0E92, _t0E93];
    tensor[4,4] _t0E95 = [_t0E85, _t0E8A, _t0E8F, _t0E94];
    real _t0E96 = 0.e0;
    real _t0E97 = -0.1e1;
    real _t0E98 = 0.1e1;
    real _t0E99 = 0.5e0;
    vec4 _t0E9A = [_t0E96, _t0E97, _t0E98, _t0E99];
    real _t0E9B = 0.e0;
    real _t0E9C = -0.1e1;
    real _t0E9D = 0.e0;
    real _t0E9E = 0.e0;
    vec4 _t0E9F = [_t0E9B, _t0E9C, _t0E9D, _t0E9E];
    real _t0EA0 = 0.1e1;
    real _t0EA1 = 0.e0;
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.1e1;
    vec4 _t0EA4 = [_t0EA0, _t0EA1, _t0EA2, _t0EA3];
    real _t0EA5 = 0.e0;
    real _t0EA6 = 0.e0;
    real _t0EA7 = 0.e0;
    real _t0EA8 = 0.1e1;
    vec4 _t0EA9 = [_t0EA5, _t0EA6, _t0EA7, _t0EA8];
    tensor[4,4] _t0EAA = [_t0E9A, _t0E9F, _t0EA4, _t0EA9];
    real _t0EAB = 0.e0;
    real _t0EAC = -0.1e1;
    real _t0EAD = 0.e0;
    real _t0EAE = 0.e0;
    vec4 _t0EAF = [_t0EAB, _t0EAC, _t0EAD, _t0EAE];
    real _t0EB0 = 0.1e1;
    real _t0EB1 = 0.e0;
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.e0;
    vec4 _t0EB4 = [_t0EB0, _t0EB1, _t0EB2, _t0EB3];
    real _t0EB5 = 0.e0;
    real _t0EB6 = 0.e0;
    real _t0EB7 = 0.1e1;
    real _t0EB8 = 0.e0;
    vec4 _t0EB9 = [_t0EB5, _t0EB6, _t0EB7, _t0EB8];
    real _t0EBA = 0.e0;
    real _t0EBB = 0.e0;
    real _t0EBC = 0.e0;
    real _t0EBD = 0.1e1;
    vec4 _t0EBE = [_t0EBA, _t0EBB, _t0EBC, _t0EBD];
    tensor[4,4] _t0EBF = [_t0EAF, _t0EB4, _t0EB9, _t0EBE];
    real _t0EC0 = -0.1e1;
    real _t0EC1 = 0.e0;
    real _t0EC2 = 0.e0;
    real _t0EC3 = 0.e0;
    vec4 _t0EC4 = [_t0EC0, _t0EC1, _t0EC2, _t0EC3];
    real _t0EC5 = 0.e0;
    real _t0EC6 = -0.1e1;
    real _t0EC7 = 0.e0;
    real _t0EC8 = 0.e0;
    vec4 _t0EC9 = [_t0EC5, _t0EC6, _t0EC7, _t0EC8];
    real _t0ECA = 0.e0;
    real _t0ECB = 0.e0;
    real _t0ECC = 0.1e1;
    real _t0ECD = 0.e0;
    vec4 _t0ECE = [_t0ECA, _t0ECB, _t0ECC, _t0ECD];
    real _t0ECF = 0.e0;
    real _t0ED0 = 0.e0;
    real _t0ED1 = 0.e0;
    real _t0ED2 = 0.1e1;
    vec4 _t0ED3 = [_t0ECF, _t0ED0, _t0ED1, _t0ED2];
    tensor[4,4] _t0ED4 = [_t0EC4, _t0EC9, _t0ECE, _t0ED3];
    real _t0ED5 = 0.e0;
    real _t0ED6 = 0.1e1;
    real _t0ED7 = 0.e0;
    real _t0ED8 = 0.e0;
    vec4 _t0ED9 = [_t0ED5, _t0ED6, _t0ED7, _t0ED8];
    real _t0EDA = -0.1e1;
    real _t0EDB = 0.e0;
    real _t0EDC = 0.e0;
    real _t0EDD = 0.e0;
    vec4 _t0EDE = [_t0EDA, _t0EDB, _t0EDC, _t0EDD];
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.e0;
    real _t0EE1 = 0.1e1;
    real _t0EE2 = 0.e0;
    vec4 _t0EE3 = [_t0EDF, _t0EE0, _t0EE1, _t0EE2];
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    real _t0EE6 = 0.e0;
    real _t0EE7 = 0.1e1;
    vec4 _t0EE8 = [_t0EE4, _t0EE5, _t0EE6, _t0EE7];
    tensor[4,4] _t0EE9 = [_t0ED9, _t0EDE, _t0EE3, _t0EE8];
    real _t0EEA = 0.1e1;
    real _t0EEB = 0.e0;
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    vec4 _t0EEE = [_t0EEA, _t0EEB, _t0EEC, _t0EED];
    real _t0EEF = 0.e0;
    real _t0EF0 = 0.1e1;
    real _t0EF1 = 0.e0;
    real _t0EF2 = 0.e0;
    vec4 _t0EF3 = [_t0EEF, _t0EF0, _t0EF1, _t0EF2];
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    real _t0EF6 = 0.1e1;
    real _t0EF7 = 0.e0;
    vec4 _t0EF8 = [_t0EF4, _t0EF5, _t0EF6, _t0EF7];
    real _t0EF9 = 0.e0;
    real _t0EFA = 0.e0;
    real _t0EFB = 0.e0;
    real _t0EFC = 0.1e1;
    vec4 _t0EFD = [_t0EF9, _t0EFA, _t0EFB, _t0EFC];
    tensor[4,4] _t0EFE = [_t0EEE, _t0EF3, _t0EF8, _t0EFD];
    tensor[4,4][6] _t0EFF = {_t0E95, _t0EAA, _t0EBF, _t0ED4, _t0EE9, _t0EFE};
    tensor[4,4][6][6] _t0F00 = {_t0C84, _t0D03, _t0D82, _t0E01, _t0E80, _t0EFF};
    real _t0F01 = time05D4[1];
    int _t0F02 = prim $r2i01B7 (_t0F01);
    tensor[4,4][6] _t0F03 = prim $sub01C0<tensor[4,4][6]; %6> (_t0F00, _t0F02);
    real _t0F04 = time05D4[1];
    int _t0F05 = prim $r2i01B7 (_t0F04);
    int[2] _t0F06 = func nextCell405D8 (_t0F05, cellId05D1, mesh05D0);
    int _t0F07 = 1;
    int _t0F08 = prim $sub01C0<int; %2> (_t0F06, _t0F07);
    tensor[4,4] _t0F09 = prim $sub01C0<tensor[4,4]; %6> (_t0F03, _t0F08);
    real _t0F0A = time05D4[0];
    vec3 _t0F0B = prim *0036<$[3]> (_t0F0A, dPos05D3);
    vec3 _t0F0C = prim +0017<$[3]> (_t0F0B, refPos05D2);
    real _t0F0D = _t0F0C[0];
    real _t0F0E = time05D4[0];
    vec3 _t0F0F = prim *0036<$[3]> (_t0F0E, dPos05D3);
    vec3 _t0F10 = prim +0017<$[3]> (_t0F0F, refPos05D2);
    real _t0F11 = _t0F10[1];
    real _t0F12 = time05D4[0];
    vec3 _t0F13 = prim *0036<$[3]> (_t0F12, dPos05D3);
    vec3 _t0F14 = prim +0017<$[3]> (_t0F13, refPos05D2);
    real _t0F15 = _t0F14[2];
    real _t0F16 = 0.1e1;
    vec4 _t0F17 = [_t0F0D, _t0F11, _t0F15, _t0F16];
    vec4 _t0F18 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0F09, _t0F17);
    real _t0F19 = _t0F18[1];
    real _t0F1A = 0.1e1;
    real _t0F1B = 0.e0;
    real _t0F1C = 0.e0;
    real _t0F1D = 0.e0;
    vec4 _t0F1E = [_t0F1A, _t0F1B, _t0F1C, _t0F1D];
    real _t0F1F = 0.e0;
    real _t0F20 = 0.1e1;
    real _t0F21 = 0.e0;
    real _t0F22 = 0.e0;
    vec4 _t0F23 = [_t0F1F, _t0F20, _t0F21, _t0F22];
    real _t0F24 = 0.e0;
    real _t0F25 = 0.e0;
    real _t0F26 = 0.1e1;
    real _t0F27 = 0.e0;
    vec4 _t0F28 = [_t0F24, _t0F25, _t0F26, _t0F27];
    real _t0F29 = 0.e0;
    real _t0F2A = 0.e0;
    real _t0F2B = 0.e0;
    real _t0F2C = 0.1e1;
    vec4 _t0F2D = [_t0F29, _t0F2A, _t0F2B, _t0F2C];
    tensor[4,4] _t0F2E = [_t0F1E, _t0F23, _t0F28, _t0F2D];
    real _t0F2F = 0.1e1;
    real _t0F30 = 0.e0;
    real _t0F31 = 0.e0;
    real _t0F32 = 0.e0;
    vec4 _t0F33 = [_t0F2F, _t0F30, _t0F31, _t0F32];
    real _t0F34 = 0.e0;
    real _t0F35 = 0.1e1;
    real _t0F36 = 0.e0;
    real _t0F37 = 0.e0;
    vec4 _t0F38 = [_t0F34, _t0F35, _t0F36, _t0F37];
    real _t0F39 = 0.e0;
    real _t0F3A = 0.e0;
    real _t0F3B = 0.1e1;
    real _t0F3C = 0.1e1;
    vec4 _t0F3D = [_t0F39, _t0F3A, _t0F3B, _t0F3C];
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    real _t0F40 = 0.e0;
    real _t0F41 = 0.1e1;
    vec4 _t0F42 = [_t0F3E, _t0F3F, _t0F40, _t0F41];
    tensor[4,4] _t0F43 = [_t0F33, _t0F38, _t0F3D, _t0F42];
    real _t0F44 = 0.e0;
    real _t0F45 = 0.1e1;
    real _t0F46 = 0.e0;
    real _t0F47 = 0.e0;
    vec4 _t0F48 = [_t0F44, _t0F45, _t0F46, _t0F47];
    real _t0F49 = 0.e0;
    real _t0F4A = 0.e0;
    real _t0F4B = 0.1e1;
    real _t0F4C = 0.e0;
    vec4 _t0F4D = [_t0F49, _t0F4A, _t0F4B, _t0F4C];
    real _t0F4E = 0.1e1;
    real _t0F4F = -0.1e1;
    real _t0F50 = 0.e0;
    real _t0F51 = -0.5e0;
    vec4 _t0F52 = [_t0F4E, _t0F4F, _t0F50, _t0F51];
    real _t0F53 = 0.e0;
    real _t0F54 = 0.e0;
    real _t0F55 = 0.e0;
    real _t0F56 = 0.1e1;
    vec4 _t0F57 = [_t0F53, _t0F54, _t0F55, _t0F56];
    tensor[4,4] _t0F58 = [_t0F48, _t0F4D, _t0F52, _t0F57];
    real _t0F59 = 0.e0;
    real _t0F5A = 0.e0;
    real _t0F5B = -0.1e1;
    real _t0F5C = 0.e0;
    vec4 _t0F5D = [_t0F59, _t0F5A, _t0F5B, _t0F5C];
    real _t0F5E = 0.e0;
    real _t0F5F = 0.1e1;
    real _t0F60 = 0.e0;
    real _t0F61 = 0.e0;
    vec4 _t0F62 = [_t0F5E, _t0F5F, _t0F60, _t0F61];
    real _t0F63 = 0.1e1;
    real _t0F64 = -0.1e1;
    real _t0F65 = 0.e0;
    real _t0F66 = -0.5e0;
    vec4 _t0F67 = [_t0F63, _t0F64, _t0F65, _t0F66];
    real _t0F68 = 0.e0;
    real _t0F69 = 0.e0;
    real _t0F6A = 0.e0;
    real _t0F6B = 0.1e1;
    vec4 _t0F6C = [_t0F68, _t0F69, _t0F6A, _t0F6B];
    tensor[4,4] _t0F6D = [_t0F5D, _t0F62, _t0F67, _t0F6C];
    real _t0F6E = 0.e0;
    real _t0F6F = -0.1e1;
    real _t0F70 = 0.e0;
    real _t0F71 = 0.e0;
    vec4 _t0F72 = [_t0F6E, _t0F6F, _t0F70, _t0F71];
    real _t0F73 = 0.e0;
    real _t0F74 = 0.e0;
    real _t0F75 = -0.1e1;
    real _t0F76 = 0.e0;
    vec4 _t0F77 = [_t0F73, _t0F74, _t0F75, _t0F76];
    real _t0F78 = 0.1e1;
    real _t0F79 = -0.1e1;
    real _t0F7A = 0.e0;
    real _t0F7B = -0.5e0;
    vec4 _t0F7C = [_t0F78, _t0F79, _t0F7A, _t0F7B];
    real _t0F7D = 0.e0;
    real _t0F7E = 0.e0;
    real _t0F7F = 0.e0;
    real _t0F80 = 0.1e1;
    vec4 _t0F81 = [_t0F7D, _t0F7E, _t0F7F, _t0F80];
    tensor[4,4] _t0F82 = [_t0F72, _t0F77, _t0F7C, _t0F81];
    real _t0F83 = 0.e0;
    real _t0F84 = 0.e0;
    real _t0F85 = 0.1e1;
    real _t0F86 = 0.e0;
    vec4 _t0F87 = [_t0F83, _t0F84, _t0F85, _t0F86];
    real _t0F88 = 0.e0;
    real _t0F89 = -0.1e1;
    real _t0F8A = 0.e0;
    real _t0F8B = 0.e0;
    vec4 _t0F8C = [_t0F88, _t0F89, _t0F8A, _t0F8B];
    real _t0F8D = 0.1e1;
    real _t0F8E = -0.1e1;
    real _t0F8F = 0.e0;
    real _t0F90 = -0.5e0;
    vec4 _t0F91 = [_t0F8D, _t0F8E, _t0F8F, _t0F90];
    real _t0F92 = 0.e0;
    real _t0F93 = 0.e0;
    real _t0F94 = 0.e0;
    real _t0F95 = 0.1e1;
    vec4 _t0F96 = [_t0F92, _t0F93, _t0F94, _t0F95];
    tensor[4,4] _t0F97 = [_t0F87, _t0F8C, _t0F91, _t0F96];
    tensor[4,4][6] _t0F98 = {_t0F2E, _t0F43, _t0F58, _t0F6D, _t0F82, _t0F97};
    real _t0F99 = 0.1e1;
    real _t0F9A = 0.e0;
    real _t0F9B = 0.e0;
    real _t0F9C = 0.e0;
    vec4 _t0F9D = [_t0F99, _t0F9A, _t0F9B, _t0F9C];
    real _t0F9E = 0.e0;
    real _t0F9F = 0.1e1;
    real _t0FA0 = 0.e0;
    real _t0FA1 = 0.e0;
    vec4 _t0FA2 = [_t0F9E, _t0F9F, _t0FA0, _t0FA1];
    real _t0FA3 = 0.e0;
    real _t0FA4 = 0.e0;
    real _t0FA5 = 0.1e1;
    real _t0FA6 = -0.1e1;
    vec4 _t0FA7 = [_t0FA3, _t0FA4, _t0FA5, _t0FA6];
    real _t0FA8 = 0.e0;
    real _t0FA9 = 0.e0;
    real _t0FAA = 0.e0;
    real _t0FAB = 0.1e1;
    vec4 _t0FAC = [_t0FA8, _t0FA9, _t0FAA, _t0FAB];
    tensor[4,4] _t0FAD = [_t0F9D, _t0FA2, _t0FA7, _t0FAC];
    real _t0FAE = 0.1e1;
    real _t0FAF = 0.e0;
    real _t0FB0 = 0.e0;
    real _t0FB1 = 0.e0;
    vec4 _t0FB2 = [_t0FAE, _t0FAF, _t0FB0, _t0FB1];
    real _t0FB3 = 0.e0;
    real _t0FB4 = 0.1e1;
    real _t0FB5 = 0.e0;
    real _t0FB6 = 0.e0;
    vec4 _t0FB7 = [_t0FB3, _t0FB4, _t0FB5, _t0FB6];
    real _t0FB8 = 0.e0;
    real _t0FB9 = 0.e0;
    real _t0FBA = 0.1e1;
    real _t0FBB = 0.e0;
    vec4 _t0FBC = [_t0FB8, _t0FB9, _t0FBA, _t0FBB];
    real _t0FBD = 0.e0;
    real _t0FBE = 0.e0;
    real _t0FBF = 0.e0;
    real _t0FC0 = 0.1e1;
    vec4 _t0FC1 = [_t0FBD, _t0FBE, _t0FBF, _t0FC0];
    tensor[4,4] _t0FC2 = [_t0FB2, _t0FB7, _t0FBC, _t0FC1];
    real _t0FC3 = 0.e0;
    real _t0FC4 = 0.1e1;
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    vec4 _t0FC7 = [_t0FC3, _t0FC4, _t0FC5, _t0FC6];
    real _t0FC8 = 0.e0;
    real _t0FC9 = 0.e0;
    real _t0FCA = 0.1e1;
    real _t0FCB = -0.1e1;
    vec4 _t0FCC = [_t0FC8, _t0FC9, _t0FCA, _t0FCB];
    real _t0FCD = 0.1e1;
    real _t0FCE = -0.1e1;
    real _t0FCF = 0.e0;
    real _t0FD0 = -0.5e0;
    vec4 _t0FD1 = [_t0FCD, _t0FCE, _t0FCF, _t0FD0];
    real _t0FD2 = 0.e0;
    real _t0FD3 = 0.e0;
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.1e1;
    vec4 _t0FD6 = [_t0FD2, _t0FD3, _t0FD4, _t0FD5];
    tensor[4,4] _t0FD7 = [_t0FC7, _t0FCC, _t0FD1, _t0FD6];
    real _t0FD8 = 0.e0;
    real _t0FD9 = 0.e0;
    real _t0FDA = -0.1e1;
    real _t0FDB = 0.1e1;
    vec4 _t0FDC = [_t0FD8, _t0FD9, _t0FDA, _t0FDB];
    real _t0FDD = 0.e0;
    real _t0FDE = 0.1e1;
    real _t0FDF = 0.e0;
    real _t0FE0 = 0.e0;
    vec4 _t0FE1 = [_t0FDD, _t0FDE, _t0FDF, _t0FE0];
    real _t0FE2 = 0.1e1;
    real _t0FE3 = -0.1e1;
    real _t0FE4 = 0.e0;
    real _t0FE5 = -0.5e0;
    vec4 _t0FE6 = [_t0FE2, _t0FE3, _t0FE4, _t0FE5];
    real _t0FE7 = 0.e0;
    real _t0FE8 = 0.e0;
    real _t0FE9 = 0.e0;
    real _t0FEA = 0.1e1;
    vec4 _t0FEB = [_t0FE7, _t0FE8, _t0FE9, _t0FEA];
    tensor[4,4] _t0FEC = [_t0FDC, _t0FE1, _t0FE6, _t0FEB];
    real _t0FED = 0.e0;
    real _t0FEE = -0.1e1;
    real _t0FEF = 0.e0;
    real _t0FF0 = 0.e0;
    vec4 _t0FF1 = [_t0FED, _t0FEE, _t0FEF, _t0FF0];
    real _t0FF2 = 0.e0;
    real _t0FF3 = 0.e0;
    real _t0FF4 = -0.1e1;
    real _t0FF5 = 0.1e1;
    vec4 _t0FF6 = [_t0FF2, _t0FF3, _t0FF4, _t0FF5];
    real _t0FF7 = 0.1e1;
    real _t0FF8 = -0.1e1;
    real _t0FF9 = 0.e0;
    real _t0FFA = -0.5e0;
    vec4 _t0FFB = [_t0FF7, _t0FF8, _t0FF9, _t0FFA];
    real _t0FFC = 0.e0;
    real _t0FFD = 0.e0;
    real _t0FFE = 0.e0;
    real _t0FFF = 0.1e1;
    vec4 _t1000 = [_t0FFC, _t0FFD, _t0FFE, _t0FFF];
    tensor[4,4] _t1001 = [_t0FF1, _t0FF6, _t0FFB, _t1000];
    real _t1002 = 0.e0;
    real _t1003 = 0.e0;
    real _t1004 = 0.1e1;
    real _t1005 = -0.1e1;
    vec4 _t1006 = [_t1002, _t1003, _t1004, _t1005];
    real _t1007 = 0.e0;
    real _t1008 = -0.1e1;
    real _t1009 = 0.e0;
    real _t100A = 0.e0;
    vec4 _t100B = [_t1007, _t1008, _t1009, _t100A];
    real _t100C = 0.1e1;
    real _t100D = -0.1e1;
    real _t100E = 0.e0;
    real _t100F = -0.5e0;
    vec4 _t1010 = [_t100C, _t100D, _t100E, _t100F];
    real _t1011 = 0.e0;
    real _t1012 = 0.e0;
    real _t1013 = 0.e0;
    real _t1014 = 0.1e1;
    vec4 _t1015 = [_t1011, _t1012, _t1013, _t1014];
    tensor[4,4] _t1016 = [_t1006, _t100B, _t1010, _t1015];
    tensor[4,4][6] _t1017 = {_t0FAD, _t0FC2, _t0FD7, _t0FEC, _t1001, _t1016};
    real _t1018 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.1e1;
    real _t101B = 0.5e0;
    vec4 _t101C = [_t1018, _t1019, _t101A, _t101B];
    real _t101D = 0.1e1;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    vec4 _t1021 = [_t101D, _t101E, _t101F, _t1020];
    real _t1022 = 0.e0;
    real _t1023 = 0.1e1;
    real _t1024 = 0.e0;
    real _t1025 = 0.e0;
    vec4 _t1026 = [_t1022, _t1023, _t1024, _t1025];
    real _t1027 = 0.e0;
    real _t1028 = 0.e0;
    real _t1029 = 0.e0;
    real _t102A = 0.1e1;
    vec4 _t102B = [_t1027, _t1028, _t1029, _t102A];
    tensor[4,4] _t102C = [_t101C, _t1021, _t1026, _t102B];
    real _t102D = 0.1e1;
    real _t102E = 0.e0;
    real _t102F = 0.1e1;
    real _t1030 = 0.5e0;
    vec4 _t1031 = [_t102D, _t102E, _t102F, _t1030];
    real _t1032 = 0.1e1;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    real _t1035 = 0.e0;
    vec4 _t1036 = [_t1032, _t1033, _t1034, _t1035];
    real _t1037 = 0.e0;
    real _t1038 = 0.1e1;
    real _t1039 = 0.e0;
    real _t103A = 0.1e1;
    vec4 _t103B = [_t1037, _t1038, _t1039, _t103A];
    real _t103C = 0.e0;
    real _t103D = 0.e0;
    real _t103E = 0.e0;
    real _t103F = 0.1e1;
    vec4 _t1040 = [_t103C, _t103D, _t103E, _t103F];
    tensor[4,4] _t1041 = [_t1031, _t1036, _t103B, _t1040];
    real _t1042 = 0.1e1;
    real _t1043 = 0.e0;
    real _t1044 = 0.e0;
    real _t1045 = 0.e0;
    vec4 _t1046 = [_t1042, _t1043, _t1044, _t1045];
    real _t1047 = 0.e0;
    real _t1048 = 0.1e1;
    real _t1049 = 0.e0;
    real _t104A = 0.e0;
    vec4 _t104B = [_t1047, _t1048, _t1049, _t104A];
    real _t104C = 0.e0;
    real _t104D = 0.e0;
    real _t104E = 0.1e1;
    real _t104F = 0.e0;
    vec4 _t1050 = [_t104C, _t104D, _t104E, _t104F];
    real _t1051 = 0.e0;
    real _t1052 = 0.e0;
    real _t1053 = 0.e0;
    real _t1054 = 0.1e1;
    vec4 _t1055 = [_t1051, _t1052, _t1053, _t1054];
    tensor[4,4] _t1056 = [_t1046, _t104B, _t1050, _t1055];
    real _t1057 = 0.e0;
    real _t1058 = -0.1e1;
    real _t1059 = 0.e0;
    real _t105A = 0.e0;
    vec4 _t105B = [_t1057, _t1058, _t1059, _t105A];
    real _t105C = 0.1e1;
    real _t105D = 0.e0;
    real _t105E = 0.e0;
    real _t105F = 0.e0;
    vec4 _t1060 = [_t105C, _t105D, _t105E, _t105F];
    real _t1061 = 0.e0;
    real _t1062 = 0.e0;
    real _t1063 = 0.1e1;
    real _t1064 = 0.e0;
    vec4 _t1065 = [_t1061, _t1062, _t1063, _t1064];
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    real _t1068 = 0.e0;
    real _t1069 = 0.1e1;
    vec4 _t106A = [_t1066, _t1067, _t1068, _t1069];
    tensor[4,4] _t106B = [_t105B, _t1060, _t1065, _t106A];
    real _t106C = -0.1e1;
    real _t106D = 0.e0;
    real _t106E = 0.e0;
    real _t106F = 0.e0;
    vec4 _t1070 = [_t106C, _t106D, _t106E, _t106F];
    real _t1071 = 0.e0;
    real _t1072 = -0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
    real _t1076 = 0.e0;
    real _t1077 = 0.e0;
    real _t1078 = 0.1e1;
    real _t1079 = 0.e0;
    vec4 _t107A = [_t1076, _t1077, _t1078, _t1079];
    real _t107B = 0.e0;
    real _t107C = 0.e0;
    real _t107D = 0.e0;
    real _t107E = 0.1e1;
    vec4 _t107F = [_t107B, _t107C, _t107D, _t107E];
    tensor[4,4] _t1080 = [_t1070, _t1075, _t107A, _t107F];
    real _t1081 = 0.e0;
    real _t1082 = 0.1e1;
    real _t1083 = 0.e0;
    real _t1084 = 0.e0;
    vec4 _t1085 = [_t1081, _t1082, _t1083, _t1084];
    real _t1086 = -0.1e1;
    real _t1087 = 0.e0;
    real _t1088 = 0.e0;
    real _t1089 = 0.e0;
    vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
    real _t108B = 0.e0;
    real _t108C = 0.e0;
    real _t108D = 0.1e1;
    real _t108E = 0.e0;
    vec4 _t108F = [_t108B, _t108C, _t108D, _t108E];
    real _t1090 = 0.e0;
    real _t1091 = 0.e0;
    real _t1092 = 0.e0;
    real _t1093 = 0.1e1;
    vec4 _t1094 = [_t1090, _t1091, _t1092, _t1093];
    tensor[4,4] _t1095 = [_t1085, _t108A, _t108F, _t1094];
    tensor[4,4][6] _t1096 = {_t102C, _t1041, _t1056, _t106B, _t1080, _t1095};
    real _t1097 = 0.e0;
    real _t1098 = 0.1e1;
    real _t1099 = 0.1e1;
    real _t109A = 0.5e0;
    vec4 _t109B = [_t1097, _t1098, _t1099, _t109A];
    real _t109C = 0.e0;
    real _t109D = 0.1e1;
    real _t109E = 0.e0;
    real _t109F = 0.e0;
    vec4 _t10A0 = [_t109C, _t109D, _t109E, _t109F];
    real _t10A1 = -0.1e1;
    real _t10A2 = 0.e0;
    real _t10A3 = 0.e0;
    real _t10A4 = 0.e0;
    vec4 _t10A5 = [_t10A1, _t10A2, _t10A3, _t10A4];
    real _t10A6 = 0.e0;
    real _t10A7 = 0.e0;
    real _t10A8 = 0.e0;
    real _t10A9 = 0.1e1;
    vec4 _t10AA = [_t10A6, _t10A7, _t10A8, _t10A9];
    tensor[4,4] _t10AB = [_t109B, _t10A0, _t10A5, _t10AA];
    real _t10AC = 0.e0;
    real _t10AD = 0.1e1;
    real _t10AE = 0.1e1;
    real _t10AF = 0.5e0;
    vec4 _t10B0 = [_t10AC, _t10AD, _t10AE, _t10AF];
    real _t10B1 = 0.e0;
    real _t10B2 = 0.1e1;
    real _t10B3 = 0.e0;
    real _t10B4 = 0.e0;
    vec4 _t10B5 = [_t10B1, _t10B2, _t10B3, _t10B4];
    real _t10B6 = -0.1e1;
    real _t10B7 = 0.e0;
    real _t10B8 = 0.e0;
    real _t10B9 = 0.1e1;
    vec4 _t10BA = [_t10B6, _t10B7, _t10B8, _t10B9];
    real _t10BB = 0.e0;
    real _t10BC = 0.e0;
    real _t10BD = 0.e0;
    real _t10BE = 0.1e1;
    vec4 _t10BF = [_t10BB, _t10BC, _t10BD, _t10BE];
    tensor[4,4] _t10C0 = [_t10B0, _t10B5, _t10BA, _t10BF];
    real _t10C1 = 0.e0;
    real _t10C2 = 0.1e1;
    real _t10C3 = 0.e0;
    real _t10C4 = 0.e0;
    vec4 _t10C5 = [_t10C1, _t10C2, _t10C3, _t10C4];
    real _t10C6 = -0.1e1;
    real _t10C7 = 0.e0;
    real _t10C8 = 0.e0;
    real _t10C9 = 0.e0;
    vec4 _t10CA = [_t10C6, _t10C7, _t10C8, _t10C9];
    real _t10CB = 0.e0;
    real _t10CC = 0.e0;
    real _t10CD = 0.1e1;
    real _t10CE = 0.e0;
    vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
    real _t10D0 = 0.e0;
    real _t10D1 = 0.e0;
    real _t10D2 = 0.e0;
    real _t10D3 = 0.1e1;
    vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
    tensor[4,4] _t10D5 = [_t10C5, _t10CA, _t10CF, _t10D4];
    real _t10D6 = 0.1e1;
    real _t10D7 = 0.e0;
    real _t10D8 = 0.e0;
    real _t10D9 = 0.e0;
    vec4 _t10DA = [_t10D6, _t10D7, _t10D8, _t10D9];
    real _t10DB = 0.e0;
    real _t10DC = 0.1e1;
    real _t10DD = 0.e0;
    real _t10DE = 0.e0;
    vec4 _t10DF = [_t10DB, _t10DC, _t10DD, _t10DE];
    real _t10E0 = 0.e0;
    real _t10E1 = 0.e0;
    real _t10E2 = 0.1e1;
    real _t10E3 = 0.e0;
    vec4 _t10E4 = [_t10E0, _t10E1, _t10E2, _t10E3];
    real _t10E5 = 0.e0;
    real _t10E6 = 0.e0;
    real _t10E7 = 0.e0;
    real _t10E8 = 0.1e1;
    vec4 _t10E9 = [_t10E5, _t10E6, _t10E7, _t10E8];
    tensor[4,4] _t10EA = [_t10DA, _t10DF, _t10E4, _t10E9];
    real _t10EB = 0.e0;
    real _t10EC = -0.1e1;
    real _t10ED = 0.e0;
    real _t10EE = 0.e0;
    vec4 _t10EF = [_t10EB, _t10EC, _t10ED, _t10EE];
    real _t10F0 = 0.1e1;
    real _t10F1 = 0.e0;
    real _t10F2 = 0.e0;
    real _t10F3 = 0.e0;
    vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
    real _t10F5 = 0.e0;
    real _t10F6 = 0.e0;
    real _t10F7 = 0.1e1;
    real _t10F8 = 0.e0;
    vec4 _t10F9 = [_t10F5, _t10F6, _t10F7, _t10F8];
    real _t10FA = 0.e0;
    real _t10FB = 0.e0;
    real _t10FC = 0.e0;
    real _t10FD = 0.1e1;
    vec4 _t10FE = [_t10FA, _t10FB, _t10FC, _t10FD];
    tensor[4,4] _t10FF = [_t10EF, _t10F4, _t10F9, _t10FE];
    real _t1100 = -0.1e1;
    real _t1101 = 0.e0;
    real _t1102 = 0.e0;
    real _t1103 = 0.e0;
    vec4 _t1104 = [_t1100, _t1101, _t1102, _t1103];
    real _t1105 = 0.e0;
    real _t1106 = -0.1e1;
    real _t1107 = 0.e0;
    real _t1108 = 0.e0;
    vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
    real _t110A = 0.e0;
    real _t110B = 0.e0;
    real _t110C = 0.1e1;
    real _t110D = 0.e0;
    vec4 _t110E = [_t110A, _t110B, _t110C, _t110D];
    real _t110F = 0.e0;
    real _t1110 = 0.e0;
    real _t1111 = 0.e0;
    real _t1112 = 0.1e1;
    vec4 _t1113 = [_t110F, _t1110, _t1111, _t1112];
    tensor[4,4] _t1114 = [_t1104, _t1109, _t110E, _t1113];
    tensor[4,4][6] _t1115 = {_t10AB, _t10C0, _t10D5, _t10EA, _t10FF, _t1114};
    real _t1116 = -0.1e1;
    real _t1117 = 0.e0;
    real _t1118 = 0.1e1;
    real _t1119 = 0.5e0;
    vec4 _t111A = [_t1116, _t1117, _t1118, _t1119];
    real _t111B = -0.1e1;
    real _t111C = 0.e0;
    real _t111D = 0.e0;
    real _t111E = 0.e0;
    vec4 _t111F = [_t111B, _t111C, _t111D, _t111E];
    real _t1120 = 0.e0;
    real _t1121 = -0.1e1;
    real _t1122 = 0.e0;
    real _t1123 = 0.e0;
    vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
    real _t1125 = 0.e0;
    real _t1126 = 0.e0;
    real _t1127 = 0.e0;
    real _t1128 = 0.1e1;
    vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
    tensor[4,4] _t112A = [_t111A, _t111F, _t1124, _t1129];
    real _t112B = -0.1e1;
    real _t112C = 0.e0;
    real _t112D = 0.1e1;
    real _t112E = 0.5e0;
    vec4 _t112F = [_t112B, _t112C, _t112D, _t112E];
    real _t1130 = -0.1e1;
    real _t1131 = 0.e0;
    real _t1132 = 0.e0;
    real _t1133 = 0.e0;
    vec4 _t1134 = [_t1130, _t1131, _t1132, _t1133];
    real _t1135 = 0.e0;
    real _t1136 = -0.1e1;
    real _t1137 = 0.e0;
    real _t1138 = 0.1e1;
    vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
    real _t113A = 0.e0;
    real _t113B = 0.e0;
    real _t113C = 0.e0;
    real _t113D = 0.1e1;
    vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
    tensor[4,4] _t113F = [_t112F, _t1134, _t1139, _t113E];
    real _t1140 = -0.1e1;
    real _t1141 = 0.e0;
    real _t1142 = 0.e0;
    real _t1143 = 0.e0;
    vec4 _t1144 = [_t1140, _t1141, _t1142, _t1143];
    real _t1145 = 0.e0;
    real _t1146 = -0.1e1;
    real _t1147 = 0.e0;
    real _t1148 = 0.e0;
    vec4 _t1149 = [_t1145, _t1146, _t1147, _t1148];
    real _t114A = 0.e0;
    real _t114B = 0.e0;
    real _t114C = 0.1e1;
    real _t114D = 0.e0;
    vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
    real _t114F = 0.e0;
    real _t1150 = 0.e0;
    real _t1151 = 0.e0;
    real _t1152 = 0.1e1;
    vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
    tensor[4,4] _t1154 = [_t1144, _t1149, _t114E, _t1153];
    real _t1155 = 0.e0;
    real _t1156 = 0.1e1;
    real _t1157 = 0.e0;
    real _t1158 = 0.e0;
    vec4 _t1159 = [_t1155, _t1156, _t1157, _t1158];
    real _t115A = -0.1e1;
    real _t115B = 0.e0;
    real _t115C = 0.e0;
    real _t115D = 0.e0;
    vec4 _t115E = [_t115A, _t115B, _t115C, _t115D];
    real _t115F = 0.e0;
    real _t1160 = 0.e0;
    real _t1161 = 0.1e1;
    real _t1162 = 0.e0;
    vec4 _t1163 = [_t115F, _t1160, _t1161, _t1162];
    real _t1164 = 0.e0;
    real _t1165 = 0.e0;
    real _t1166 = 0.e0;
    real _t1167 = 0.1e1;
    vec4 _t1168 = [_t1164, _t1165, _t1166, _t1167];
    tensor[4,4] _t1169 = [_t1159, _t115E, _t1163, _t1168];
    real _t116A = 0.1e1;
    real _t116B = 0.e0;
    real _t116C = 0.e0;
    real _t116D = 0.e0;
    vec4 _t116E = [_t116A, _t116B, _t116C, _t116D];
    real _t116F = 0.e0;
    real _t1170 = 0.1e1;
    real _t1171 = 0.e0;
    real _t1172 = 0.e0;
    vec4 _t1173 = [_t116F, _t1170, _t1171, _t1172];
    real _t1174 = 0.e0;
    real _t1175 = 0.e0;
    real _t1176 = 0.1e1;
    real _t1177 = 0.e0;
    vec4 _t1178 = [_t1174, _t1175, _t1176, _t1177];
    real _t1179 = 0.e0;
    real _t117A = 0.e0;
    real _t117B = 0.e0;
    real _t117C = 0.1e1;
    vec4 _t117D = [_t1179, _t117A, _t117B, _t117C];
    tensor[4,4] _t117E = [_t116E, _t1173, _t1178, _t117D];
    real _t117F = 0.e0;
    real _t1180 = -0.1e1;
    real _t1181 = 0.e0;
    real _t1182 = 0.e0;
    vec4 _t1183 = [_t117F, _t1180, _t1181, _t1182];
    real _t1184 = 0.1e1;
    real _t1185 = 0.e0;
    real _t1186 = 0.e0;
    real _t1187 = 0.e0;
    vec4 _t1188 = [_t1184, _t1185, _t1186, _t1187];
    real _t1189 = 0.e0;
    real _t118A = 0.e0;
    real _t118B = 0.1e1;
    real _t118C = 0.e0;
    vec4 _t118D = [_t1189, _t118A, _t118B, _t118C];
    real _t118E = 0.e0;
    real _t118F = 0.e0;
    real _t1190 = 0.e0;
    real _t1191 = 0.1e1;
    vec4 _t1192 = [_t118E, _t118F, _t1190, _t1191];
    tensor[4,4] _t1193 = [_t1183, _t1188, _t118D, _t1192];
    tensor[4,4][6] _t1194 = {_t112A, _t113F, _t1154, _t1169, _t117E, _t1193};
    real _t1195 = 0.e0;
    real _t1196 = -0.1e1;
    real _t1197 = 0.1e1;
    real _t1198 = 0.5e0;
    vec4 _t1199 = [_t1195, _t1196, _t1197, _t1198];
    real _t119A = 0.e0;
    real _t119B = -0.1e1;
    real _t119C = 0.e0;
    real _t119D = 0.e0;
    vec4 _t119E = [_t119A, _t119B, _t119C, _t119D];
    real _t119F = 0.1e1;
    real _t11A0 = 0.e0;
    real _t11A1 = 0.e0;
    real _t11A2 = 0.e0;
    vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
    real _t11A4 = 0.e0;
    real _t11A5 = 0.e0;
    real _t11A6 = 0.e0;
    real _t11A7 = 0.1e1;
    vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
    tensor[4,4] _t11A9 = [_t1199, _t119E, _t11A3, _t11A8];
    real _t11AA = 0.e0;
    real _t11AB = -0.1e1;
    real _t11AC = 0.1e1;
    real _t11AD = 0.5e0;
    vec4 _t11AE = [_t11AA, _t11AB, _t11AC, _t11AD];
    real _t11AF = 0.e0;
    real _t11B0 = -0.1e1;
    real _t11B1 = 0.e0;
    real _t11B2 = 0.e0;
    vec4 _t11B3 = [_t11AF, _t11B0, _t11B1, _t11B2];
    real _t11B4 = 0.1e1;
    real _t11B5 = 0.e0;
    real _t11B6 = 0.e0;
    real _t11B7 = 0.1e1;
    vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
    real _t11B9 = 0.e0;
    real _t11BA = 0.e0;
    real _t11BB = 0.e0;
    real _t11BC = 0.1e1;
    vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
    tensor[4,4] _t11BE = [_t11AE, _t11B3, _t11B8, _t11BD];
    real _t11BF = 0.e0;
    real _t11C0 = -0.1e1;
    real _t11C1 = 0.e0;
    real _t11C2 = 0.e0;
    vec4 _t11C3 = [_t11BF, _t11C0, _t11C1, _t11C2];
    real _t11C4 = 0.1e1;
    real _t11C5 = 0.e0;
    real _t11C6 = 0.e0;
    real _t11C7 = 0.e0;
    vec4 _t11C8 = [_t11C4, _t11C5, _t11C6, _t11C7];
    real _t11C9 = 0.e0;
    real _t11CA = 0.e0;
    real _t11CB = 0.1e1;
    real _t11CC = 0.e0;
    vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
    real _t11CE = 0.e0;
    real _t11CF = 0.e0;
    real _t11D0 = 0.e0;
    real _t11D1 = 0.1e1;
    vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
    tensor[4,4] _t11D3 = [_t11C3, _t11C8, _t11CD, _t11D2];
    real _t11D4 = -0.1e1;
    real _t11D5 = 0.e0;
    real _t11D6 = 0.e0;
    real _t11D7 = 0.e0;
    vec4 _t11D8 = [_t11D4, _t11D5, _t11D6, _t11D7];
    real _t11D9 = 0.e0;
    real _t11DA = -0.1e1;
    real _t11DB = 0.e0;
    real _t11DC = 0.e0;
    vec4 _t11DD = [_t11D9, _t11DA, _t11DB, _t11DC];
    real _t11DE = 0.e0;
    real _t11DF = 0.e0;
    real _t11E0 = 0.1e1;
    real _t11E1 = 0.e0;
    vec4 _t11E2 = [_t11DE, _t11DF, _t11E0, _t11E1];
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    real _t11E5 = 0.e0;
    real _t11E6 = 0.1e1;
    vec4 _t11E7 = [_t11E3, _t11E4, _t11E5, _t11E6];
    tensor[4,4] _t11E8 = [_t11D8, _t11DD, _t11E2, _t11E7];
    real _t11E9 = 0.e0;
    real _t11EA = 0.1e1;
    real _t11EB = 0.e0;
    real _t11EC = 0.e0;
    vec4 _t11ED = [_t11E9, _t11EA, _t11EB, _t11EC];
    real _t11EE = -0.1e1;
    real _t11EF = 0.e0;
    real _t11F0 = 0.e0;
    real _t11F1 = 0.e0;
    vec4 _t11F2 = [_t11EE, _t11EF, _t11F0, _t11F1];
    real _t11F3 = 0.e0;
    real _t11F4 = 0.e0;
    real _t11F5 = 0.1e1;
    real _t11F6 = 0.e0;
    vec4 _t11F7 = [_t11F3, _t11F4, _t11F5, _t11F6];
    real _t11F8 = 0.e0;
    real _t11F9 = 0.e0;
    real _t11FA = 0.e0;
    real _t11FB = 0.1e1;
    vec4 _t11FC = [_t11F8, _t11F9, _t11FA, _t11FB];
    tensor[4,4] _t11FD = [_t11ED, _t11F2, _t11F7, _t11FC];
    real _t11FE = 0.1e1;
    real _t11FF = 0.e0;
    real _t1200 = 0.e0;
    real _t1201 = 0.e0;
    vec4 _t1202 = [_t11FE, _t11FF, _t1200, _t1201];
    real _t1203 = 0.e0;
    real _t1204 = 0.1e1;
    real _t1205 = 0.e0;
    real _t1206 = 0.e0;
    vec4 _t1207 = [_t1203, _t1204, _t1205, _t1206];
    real _t1208 = 0.e0;
    real _t1209 = 0.e0;
    real _t120A = 0.1e1;
    real _t120B = 0.e0;
    vec4 _t120C = [_t1208, _t1209, _t120A, _t120B];
    real _t120D = 0.e0;
    real _t120E = 0.e0;
    real _t120F = 0.e0;
    real _t1210 = 0.1e1;
    vec4 _t1211 = [_t120D, _t120E, _t120F, _t1210];
    tensor[4,4] _t1212 = [_t1202, _t1207, _t120C, _t1211];
    tensor[4,4][6] _t1213 = {_t11A9, _t11BE, _t11D3, _t11E8, _t11FD, _t1212};
    tensor[4,4][6][6] _t1214 = {_t0F98, _t1017, _t1096, _t1115, _t1194, _t1213};
    real _t1215 = time05D4[1];
    int _t1216 = prim $r2i01B7 (_t1215);
    tensor[4,4][6] _t1217 = prim $sub01C0<tensor[4,4][6]; %6> (_t1214, _t1216);
    real _t1218 = time05D4[1];
    int _t1219 = prim $r2i01B7 (_t1218);
    int[2] _t121A = func nextCell405D8 (_t1219, cellId05D1, mesh05D0);
    int _t121B = 1;
    int _t121C = prim $sub01C0<int; %2> (_t121A, _t121B);
    tensor[4,4] _t121D = prim $sub01C0<tensor[4,4]; %6> (_t1217, _t121C);
    real _t121E = time05D4[0];
    vec3 _t121F = prim *0036<$[3]> (_t121E, dPos05D3);
    vec3 _t1220 = prim +0017<$[3]> (_t121F, refPos05D2);
    real _t1221 = _t1220[0];
    real _t1222 = time05D4[0];
    vec3 _t1223 = prim *0036<$[3]> (_t1222, dPos05D3);
    vec3 _t1224 = prim +0017<$[3]> (_t1223, refPos05D2);
    real _t1225 = _t1224[1];
    real _t1226 = time05D4[0];
    vec3 _t1227 = prim *0036<$[3]> (_t1226, dPos05D3);
    vec3 _t1228 = prim +0017<$[3]> (_t1227, refPos05D2);
    real _t1229 = _t1228[2];
    real _t122A = 0.1e1;
    vec4 _t122B = [_t1221, _t1225, _t1229, _t122A];
    vec4 _t122C = prim •00CE<$[4,4]; $[4]; $[4]> (_t121D, _t122B);
    real _t122D = _t122C[2];
    vec3 _t122E = [_t0C05, _t0F19, _t122D];
    real _t122F = time05D4[1];
    int _t1230 = prim $r2i01B7 (_t122F);
    int[2] _t1231 = func nextCell405D8 (_t1230, cellId05D1, mesh05D0);
    int _t1232 = 1;
    int _t1233 = prim $sub01C0<int; %2> (_t1231, _t1232);
    Femdata: MeshPos _t1234 = extractFemItemN((mesh05D0, _t08F1, _t122E, _t1233),RefBuild(Mesh),);
    return _t1234;
  } else {
    real _t1235 = time05D4[0];
    vec3 _t1236 = prim *0036<$[3]> (_t1235, dPos05D3);
    vec3 _t1237 = prim +0017<$[3]> (_t1236, refPos05D2);
    Femdata: MeshPos _t1238 = extractFemItemN((mesh05D0, _t1237),InvalidBuildBoundary(MeshPos),);
    return _t1238;
  }
}
function int[2]#8 nextCell405D8 (int faceIdx1239, int cell123A, Femdata: Mesh mesh123B)
{
  int _t123C = 12;
  int _t123D = prim *0033 (cell123A, _t123C);
  int _t123E = 2;
  int _t123F = prim *0033 (faceIdx1239, _t123E);
  int _t1240 = prim +0015 (_t123D, _t123F);
  int[2] _t1241 = extractFemItemN((mesh123B, _t1240),CellFaceCell(Mesh),);
  return _t1241;
}
function vec2#0 _enter1242 (vec3 refPos1243, vec3 dPos1244)
{
  real time1245 = +inf;
  int face1246 = -1;
  real faceTime1247 = -inf;
  real _t1248 = -0.5e0;
  real _t1249 = 0.e0;
  real _t124A = 0.e0;
  real _t124B = 0.1e1;
  vec3 _t124C = [_t1249, _t124A, _t124B];
  real _t124D = prim •00CE<$[3]; $[3]; $[]> (_t124C, refPos1243);
  real _t124E = prim -0026<$[]> (_t1248, _t124D);
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  real _t1251 = 0.1e1;
  vec3 _t1252 = [_t124F, _t1250, _t1251];
  real _t1253 = prim •00CE<$[3]; $[3]; $[]> (_t1252, dPos1244);
  real _t1254 = prim /0055 (_t124E, _t1253);
  real _t1255 = -0.1e-15;
  bool _t1256 = prim >=007E (_t1254, _t1255);
  real _t1257 = -0.5e0;
  real _t1258 = 0.e0;
  real _t1259 = 0.e0;
  real _t125A = 0.1e1;
  vec3 _t125B = [_t1258, _t1259, _t125A];
  real _t125C = prim •00CE<$[3]; $[3]; $[]> (_t125B, refPos1243);
  real _t125D = prim -0026<$[]> (_t1257, _t125C);
  real _t125E = 0.e0;
  real _t125F = 0.e0;
  real _t1260 = 0.1e1;
  vec3 _t1261 = [_t125E, _t125F, _t1260];
  real _t1262 = prim •00CE<$[3]; $[3]; $[]> (_t1261, dPos1244);
  real _t1263 = prim /0055 (_t125D, _t1262);
  bool _t1264 = prim >0080 (time1245, _t1263);
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  real _t1267 = 0.1e1;
  vec3 _t1268 = [_t1265, _t1266, _t1267];
  real _t1269 = prim •00CE<$[3]; $[3]; $[]> (_t1268, dPos1244);
  real _t126A = prim |()|00B5<$[]> (_t1269);
  real _t126B = 0.1e-20;
  bool _t126C = prim >=007E (_t126A, _t126B);
  bool _t126D = prim $and01C4 (_t1264, _t126C);
  bool _t126E = prim $and01C4 (_t1256, _t126D);
  if _t126E {
    real _t126F = -0.5e0;
    real _t1270 = 0.e0;
    real _t1271 = 0.e0;
    real _t1272 = 0.1e1;
    vec3 _t1273 = [_t1270, _t1271, _t1272];
    real _t1274 = prim •00CE<$[3]; $[3]; $[]> (_t1273, refPos1243);
    real _t1275 = prim -0026<$[]> (_t126F, _t1274);
    real _t1276 = 0.e0;
    real _t1277 = 0.e0;
    real _t1278 = 0.1e1;
    vec3 _t1279 = [_t1276, _t1277, _t1278];
    real _t127A = prim •00CE<$[3]; $[3]; $[]> (_t1279, dPos1244);
    real _t127B = prim /0055 (_t1275, _t127A);
    vec3 _t127C = prim *0038<$[3]> (dPos1244, _t127B);
    vec3 _t127D = prim +0017<$[3]> (refPos1243, _t127C);
    real _t127E = -0.5e0;
    real _t127F = 0.e0;
    real _t1280 = 0.e0;
    real _t1281 = 0.1e1;
    vec3 _t1282 = [_t127F, _t1280, _t1281];
    real _t1283 = prim •00CE<$[3]; $[3]; $[]> (_t1282, refPos1243);
    real _t1284 = prim -0026<$[]> (_t127E, _t1283);
    real _t1285 = 0.e0;
    real _t1286 = 0.e0;
    real _t1287 = 0.1e1;
    vec3 _t1288 = [_t1285, _t1286, _t1287];
    real _t1289 = prim •00CE<$[3]; $[3]; $[]> (_t1288, dPos1244);
    real _t128A = prim /0055 (_t1284, _t1289);
    vec3 _t128B = prim *0038<$[3]> (dPos1244, _t128A);
    vec3 _t128C = prim +0017<$[3]> (refPos1243, _t128B);
    real _t128D = 0.1e-8;
    bool _t128E = extractFemItemN((_t127D, _t128C, _t128D),InsideInsert(File=checkInside.in)(Mesh),);
    if _t128E {
      real _t128F = -0.5e0;
      real _t1290 = 0.e0;
      real _t1291 = 0.e0;
      real _t1292 = 0.1e1;
      vec3 _t1293 = [_t1290, _t1291, _t1292];
      real _t1294 = prim •00CE<$[3]; $[3]; $[]> (_t1293, refPos1243);
      real _t1295 = prim -0026<$[]> (_t128F, _t1294);
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      real _t1298 = 0.1e1;
      vec3 _t1299 = [_t1296, _t1297, _t1298];
      real _t129A = prim •00CE<$[3]; $[3]; $[]> (_t1299, dPos1244);
      time1245 = prim /0055 (_t1295, _t129A);
      face1246 = 0;
    }
  }
  real _t129B = 0.5e0;
  real _t129C = 0.e0;
  real _t129D = 0.e0;
  real _t129E = 0.1e1;
  vec3 _t129F = [_t129C, _t129D, _t129E];
  real _t12A0 = prim •00CE<$[3]; $[3]; $[]> (_t129F, refPos1243);
  real _t12A1 = prim -0026<$[]> (_t129B, _t12A0);
  real _t12A2 = 0.e0;
  real _t12A3 = 0.e0;
  real _t12A4 = 0.1e1;
  vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
  real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, dPos1244);
  real _t12A7 = prim /0055 (_t12A1, _t12A6);
  real _t12A8 = -0.1e-15;
  bool _t12A9 = prim >=007E (_t12A7, _t12A8);
  real _t12AA = 0.5e0;
  real _t12AB = 0.e0;
  real _t12AC = 0.e0;
  real _t12AD = 0.1e1;
  vec3 _t12AE = [_t12AB, _t12AC, _t12AD];
  real _t12AF = prim •00CE<$[3]; $[3]; $[]> (_t12AE, refPos1243);
  real _t12B0 = prim -0026<$[]> (_t12AA, _t12AF);
  real _t12B1 = 0.e0;
  real _t12B2 = 0.e0;
  real _t12B3 = 0.1e1;
  vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
  real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, dPos1244);
  real _t12B6 = prim /0055 (_t12B0, _t12B5);
  bool _t12B7 = prim >0080 (time1245, _t12B6);
  real _t12B8 = 0.e0;
  real _t12B9 = 0.e0;
  real _t12BA = 0.1e1;
  vec3 _t12BB = [_t12B8, _t12B9, _t12BA];
  real _t12BC = prim •00CE<$[3]; $[3]; $[]> (_t12BB, dPos1244);
  real _t12BD = prim |()|00B5<$[]> (_t12BC);
  real _t12BE = 0.1e-20;
  bool _t12BF = prim >=007E (_t12BD, _t12BE);
  bool _t12C0 = prim $and01C4 (_t12B7, _t12BF);
  bool _t12C1 = prim $and01C4 (_t12A9, _t12C0);
  if _t12C1 {
    real _t12C2 = 0.5e0;
    real _t12C3 = 0.e0;
    real _t12C4 = 0.e0;
    real _t12C5 = 0.1e1;
    vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
    real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, refPos1243);
    real _t12C8 = prim -0026<$[]> (_t12C2, _t12C7);
    real _t12C9 = 0.e0;
    real _t12CA = 0.e0;
    real _t12CB = 0.1e1;
    vec3 _t12CC = [_t12C9, _t12CA, _t12CB];
    real _t12CD = prim •00CE<$[3]; $[3]; $[]> (_t12CC, dPos1244);
    real _t12CE = prim /0055 (_t12C8, _t12CD);
    vec3 _t12CF = prim *0038<$[3]> (dPos1244, _t12CE);
    vec3 _t12D0 = prim +0017<$[3]> (refPos1243, _t12CF);
    real _t12D1 = 0.5e0;
    real _t12D2 = 0.e0;
    real _t12D3 = 0.e0;
    real _t12D4 = 0.1e1;
    vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
    real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, refPos1243);
    real _t12D7 = prim -0026<$[]> (_t12D1, _t12D6);
    real _t12D8 = 0.e0;
    real _t12D9 = 0.e0;
    real _t12DA = 0.1e1;
    vec3 _t12DB = [_t12D8, _t12D9, _t12DA];
    real _t12DC = prim •00CE<$[3]; $[3]; $[]> (_t12DB, dPos1244);
    real _t12DD = prim /0055 (_t12D7, _t12DC);
    vec3 _t12DE = prim *0038<$[3]> (dPos1244, _t12DD);
    vec3 _t12DF = prim +0017<$[3]> (refPos1243, _t12DE);
    real _t12E0 = 0.1e-8;
    bool _t12E1 = extractFemItemN((_t12D0, _t12DF, _t12E0),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12E1 {
      real _t12E2 = 0.5e0;
      real _t12E3 = 0.e0;
      real _t12E4 = 0.e0;
      real _t12E5 = 0.1e1;
      vec3 _t12E6 = [_t12E3, _t12E4, _t12E5];
      real _t12E7 = prim •00CE<$[3]; $[3]; $[]> (_t12E6, refPos1243);
      real _t12E8 = prim -0026<$[]> (_t12E2, _t12E7);
      real _t12E9 = 0.e0;
      real _t12EA = 0.e0;
      real _t12EB = 0.1e1;
      vec3 _t12EC = [_t12E9, _t12EA, _t12EB];
      real _t12ED = prim •00CE<$[3]; $[3]; $[]> (_t12EC, dPos1244);
      time1245 = prim /0055 (_t12E8, _t12ED);
      face1246 = 1;
    }
  }
  real _t12EE = -0.5e0;
  real _t12EF = 0.e0;
  real _t12F0 = 0.1e1;
  real _t12F1 = 0.e0;
  vec3 _t12F2 = [_t12EF, _t12F0, _t12F1];
  real _t12F3 = prim •00CE<$[3]; $[3]; $[]> (_t12F2, refPos1243);
  real _t12F4 = prim -0026<$[]> (_t12EE, _t12F3);
  real _t12F5 = 0.e0;
  real _t12F6 = 0.1e1;
  real _t12F7 = 0.e0;
  vec3 _t12F8 = [_t12F5, _t12F6, _t12F7];
  real _t12F9 = prim •00CE<$[3]; $[3]; $[]> (_t12F8, dPos1244);
  real _t12FA = prim /0055 (_t12F4, _t12F9);
  real _t12FB = -0.1e-15;
  bool _t12FC = prim >=007E (_t12FA, _t12FB);
  real _t12FD = -0.5e0;
  real _t12FE = 0.e0;
  real _t12FF = 0.1e1;
  real _t1300 = 0.e0;
  vec3 _t1301 = [_t12FE, _t12FF, _t1300];
  real _t1302 = prim •00CE<$[3]; $[3]; $[]> (_t1301, refPos1243);
  real _t1303 = prim -0026<$[]> (_t12FD, _t1302);
  real _t1304 = 0.e0;
  real _t1305 = 0.1e1;
  real _t1306 = 0.e0;
  vec3 _t1307 = [_t1304, _t1305, _t1306];
  real _t1308 = prim •00CE<$[3]; $[3]; $[]> (_t1307, dPos1244);
  real _t1309 = prim /0055 (_t1303, _t1308);
  bool _t130A = prim >0080 (time1245, _t1309);
  real _t130B = 0.e0;
  real _t130C = 0.1e1;
  real _t130D = 0.e0;
  vec3 _t130E = [_t130B, _t130C, _t130D];
  real _t130F = prim •00CE<$[3]; $[3]; $[]> (_t130E, dPos1244);
  real _t1310 = prim |()|00B5<$[]> (_t130F);
  real _t1311 = 0.1e-20;
  bool _t1312 = prim >=007E (_t1310, _t1311);
  bool _t1313 = prim $and01C4 (_t130A, _t1312);
  bool _t1314 = prim $and01C4 (_t12FC, _t1313);
  if _t1314 {
    real _t1315 = -0.5e0;
    real _t1316 = 0.e0;
    real _t1317 = 0.1e1;
    real _t1318 = 0.e0;
    vec3 _t1319 = [_t1316, _t1317, _t1318];
    real _t131A = prim •00CE<$[3]; $[3]; $[]> (_t1319, refPos1243);
    real _t131B = prim -0026<$[]> (_t1315, _t131A);
    real _t131C = 0.e0;
    real _t131D = 0.1e1;
    real _t131E = 0.e0;
    vec3 _t131F = [_t131C, _t131D, _t131E];
    real _t1320 = prim •00CE<$[3]; $[3]; $[]> (_t131F, dPos1244);
    real _t1321 = prim /0055 (_t131B, _t1320);
    vec3 _t1322 = prim *0038<$[3]> (dPos1244, _t1321);
    vec3 _t1323 = prim +0017<$[3]> (refPos1243, _t1322);
    real _t1324 = -0.5e0;
    real _t1325 = 0.e0;
    real _t1326 = 0.1e1;
    real _t1327 = 0.e0;
    vec3 _t1328 = [_t1325, _t1326, _t1327];
    real _t1329 = prim •00CE<$[3]; $[3]; $[]> (_t1328, refPos1243);
    real _t132A = prim -0026<$[]> (_t1324, _t1329);
    real _t132B = 0.e0;
    real _t132C = 0.1e1;
    real _t132D = 0.e0;
    vec3 _t132E = [_t132B, _t132C, _t132D];
    real _t132F = prim •00CE<$[3]; $[3]; $[]> (_t132E, dPos1244);
    real _t1330 = prim /0055 (_t132A, _t132F);
    vec3 _t1331 = prim *0038<$[3]> (dPos1244, _t1330);
    vec3 _t1332 = prim +0017<$[3]> (refPos1243, _t1331);
    real _t1333 = 0.1e-8;
    bool _t1334 = extractFemItemN((_t1323, _t1332, _t1333),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1334 {
      real _t1335 = -0.5e0;
      real _t1336 = 0.e0;
      real _t1337 = 0.1e1;
      real _t1338 = 0.e0;
      vec3 _t1339 = [_t1336, _t1337, _t1338];
      real _t133A = prim •00CE<$[3]; $[3]; $[]> (_t1339, refPos1243);
      real _t133B = prim -0026<$[]> (_t1335, _t133A);
      real _t133C = 0.e0;
      real _t133D = 0.1e1;
      real _t133E = 0.e0;
      vec3 _t133F = [_t133C, _t133D, _t133E];
      real _t1340 = prim •00CE<$[3]; $[3]; $[]> (_t133F, dPos1244);
      time1245 = prim /0055 (_t133B, _t1340);
      face1246 = 2;
    }
  }
  real _t1341 = -0.5e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  real _t1344 = 0.e0;
  vec3 _t1345 = [_t1342, _t1343, _t1344];
  real _t1346 = prim •00CE<$[3]; $[3]; $[]> (_t1345, refPos1243);
  real _t1347 = prim -0026<$[]> (_t1341, _t1346);
  real _t1348 = -0.1e1;
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  vec3 _t134B = [_t1348, _t1349, _t134A];
  real _t134C = prim •00CE<$[3]; $[3]; $[]> (_t134B, dPos1244);
  real _t134D = prim /0055 (_t1347, _t134C);
  real _t134E = -0.1e-15;
  bool _t134F = prim >=007E (_t134D, _t134E);
  real _t1350 = -0.5e0;
  real _t1351 = -0.1e1;
  real _t1352 = 0.e0;
  real _t1353 = 0.e0;
  vec3 _t1354 = [_t1351, _t1352, _t1353];
  real _t1355 = prim •00CE<$[3]; $[3]; $[]> (_t1354, refPos1243);
  real _t1356 = prim -0026<$[]> (_t1350, _t1355);
  real _t1357 = -0.1e1;
  real _t1358 = 0.e0;
  real _t1359 = 0.e0;
  vec3 _t135A = [_t1357, _t1358, _t1359];
  real _t135B = prim •00CE<$[3]; $[3]; $[]> (_t135A, dPos1244);
  real _t135C = prim /0055 (_t1356, _t135B);
  bool _t135D = prim >0080 (time1245, _t135C);
  real _t135E = -0.1e1;
  real _t135F = 0.e0;
  real _t1360 = 0.e0;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = prim •00CE<$[3]; $[3]; $[]> (_t1361, dPos1244);
  real _t1363 = prim |()|00B5<$[]> (_t1362);
  real _t1364 = 0.1e-20;
  bool _t1365 = prim >=007E (_t1363, _t1364);
  bool _t1366 = prim $and01C4 (_t135D, _t1365);
  bool _t1367 = prim $and01C4 (_t134F, _t1366);
  if _t1367 {
    real _t1368 = -0.5e0;
    real _t1369 = -0.1e1;
    real _t136A = 0.e0;
    real _t136B = 0.e0;
    vec3 _t136C = [_t1369, _t136A, _t136B];
    real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos1243);
    real _t136E = prim -0026<$[]> (_t1368, _t136D);
    real _t136F = -0.1e1;
    real _t1370 = 0.e0;
    real _t1371 = 0.e0;
    vec3 _t1372 = [_t136F, _t1370, _t1371];
    real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos1244);
    real _t1374 = prim /0055 (_t136E, _t1373);
    vec3 _t1375 = prim *0038<$[3]> (dPos1244, _t1374);
    vec3 _t1376 = prim +0017<$[3]> (refPos1243, _t1375);
    real _t1377 = -0.5e0;
    real _t1378 = -0.1e1;
    real _t1379 = 0.e0;
    real _t137A = 0.e0;
    vec3 _t137B = [_t1378, _t1379, _t137A];
    real _t137C = prim •00CE<$[3]; $[3]; $[]> (_t137B, refPos1243);
    real _t137D = prim -0026<$[]> (_t1377, _t137C);
    real _t137E = -0.1e1;
    real _t137F = 0.e0;
    real _t1380 = 0.e0;
    vec3 _t1381 = [_t137E, _t137F, _t1380];
    real _t1382 = prim •00CE<$[3]; $[3]; $[]> (_t1381, dPos1244);
    real _t1383 = prim /0055 (_t137D, _t1382);
    vec3 _t1384 = prim *0038<$[3]> (dPos1244, _t1383);
    vec3 _t1385 = prim +0017<$[3]> (refPos1243, _t1384);
    real _t1386 = 0.1e-8;
    bool _t1387 = extractFemItemN((_t1376, _t1385, _t1386),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1387 {
      real _t1388 = -0.5e0;
      real _t1389 = -0.1e1;
      real _t138A = 0.e0;
      real _t138B = 0.e0;
      vec3 _t138C = [_t1389, _t138A, _t138B];
      real _t138D = prim •00CE<$[3]; $[3]; $[]> (_t138C, refPos1243);
      real _t138E = prim -0026<$[]> (_t1388, _t138D);
      real _t138F = -0.1e1;
      real _t1390 = 0.e0;
      real _t1391 = 0.e0;
      vec3 _t1392 = [_t138F, _t1390, _t1391];
      real _t1393 = prim •00CE<$[3]; $[3]; $[]> (_t1392, dPos1244);
      time1245 = prim /0055 (_t138E, _t1393);
      face1246 = 3;
    }
  }
  real _t1394 = -0.5e0;
  real _t1395 = 0.e0;
  real _t1396 = -0.1e1;
  real _t1397 = 0.e0;
  vec3 _t1398 = [_t1395, _t1396, _t1397];
  real _t1399 = prim •00CE<$[3]; $[3]; $[]> (_t1398, refPos1243);
  real _t139A = prim -0026<$[]> (_t1394, _t1399);
  real _t139B = 0.e0;
  real _t139C = -0.1e1;
  real _t139D = 0.e0;
  vec3 _t139E = [_t139B, _t139C, _t139D];
  real _t139F = prim •00CE<$[3]; $[3]; $[]> (_t139E, dPos1244);
  real _t13A0 = prim /0055 (_t139A, _t139F);
  real _t13A1 = -0.1e-15;
  bool _t13A2 = prim >=007E (_t13A0, _t13A1);
  real _t13A3 = -0.5e0;
  real _t13A4 = 0.e0;
  real _t13A5 = -0.1e1;
  real _t13A6 = 0.e0;
  vec3 _t13A7 = [_t13A4, _t13A5, _t13A6];
  real _t13A8 = prim •00CE<$[3]; $[3]; $[]> (_t13A7, refPos1243);
  real _t13A9 = prim -0026<$[]> (_t13A3, _t13A8);
  real _t13AA = 0.e0;
  real _t13AB = -0.1e1;
  real _t13AC = 0.e0;
  vec3 _t13AD = [_t13AA, _t13AB, _t13AC];
  real _t13AE = prim •00CE<$[3]; $[3]; $[]> (_t13AD, dPos1244);
  real _t13AF = prim /0055 (_t13A9, _t13AE);
  bool _t13B0 = prim >0080 (time1245, _t13AF);
  real _t13B1 = 0.e0;
  real _t13B2 = -0.1e1;
  real _t13B3 = 0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos1244);
  real _t13B6 = prim |()|00B5<$[]> (_t13B5);
  real _t13B7 = 0.1e-20;
  bool _t13B8 = prim >=007E (_t13B6, _t13B7);
  bool _t13B9 = prim $and01C4 (_t13B0, _t13B8);
  bool _t13BA = prim $and01C4 (_t13A2, _t13B9);
  if _t13BA {
    real _t13BB = -0.5e0;
    real _t13BC = 0.e0;
    real _t13BD = -0.1e1;
    real _t13BE = 0.e0;
    vec3 _t13BF = [_t13BC, _t13BD, _t13BE];
    real _t13C0 = prim •00CE<$[3]; $[3]; $[]> (_t13BF, refPos1243);
    real _t13C1 = prim -0026<$[]> (_t13BB, _t13C0);
    real _t13C2 = 0.e0;
    real _t13C3 = -0.1e1;
    real _t13C4 = 0.e0;
    vec3 _t13C5 = [_t13C2, _t13C3, _t13C4];
    real _t13C6 = prim •00CE<$[3]; $[3]; $[]> (_t13C5, dPos1244);
    real _t13C7 = prim /0055 (_t13C1, _t13C6);
    vec3 _t13C8 = prim *0038<$[3]> (dPos1244, _t13C7);
    vec3 _t13C9 = prim +0017<$[3]> (refPos1243, _t13C8);
    real _t13CA = -0.5e0;
    real _t13CB = 0.e0;
    real _t13CC = -0.1e1;
    real _t13CD = 0.e0;
    vec3 _t13CE = [_t13CB, _t13CC, _t13CD];
    real _t13CF = prim •00CE<$[3]; $[3]; $[]> (_t13CE, refPos1243);
    real _t13D0 = prim -0026<$[]> (_t13CA, _t13CF);
    real _t13D1 = 0.e0;
    real _t13D2 = -0.1e1;
    real _t13D3 = 0.e0;
    vec3 _t13D4 = [_t13D1, _t13D2, _t13D3];
    real _t13D5 = prim •00CE<$[3]; $[3]; $[]> (_t13D4, dPos1244);
    real _t13D6 = prim /0055 (_t13D0, _t13D5);
    vec3 _t13D7 = prim *0038<$[3]> (dPos1244, _t13D6);
    vec3 _t13D8 = prim +0017<$[3]> (refPos1243, _t13D7);
    real _t13D9 = 0.1e-8;
    bool _t13DA = extractFemItemN((_t13C9, _t13D8, _t13D9),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13DA {
      real _t13DB = -0.5e0;
      real _t13DC = 0.e0;
      real _t13DD = -0.1e1;
      real _t13DE = 0.e0;
      vec3 _t13DF = [_t13DC, _t13DD, _t13DE];
      real _t13E0 = prim •00CE<$[3]; $[3]; $[]> (_t13DF, refPos1243);
      real _t13E1 = prim -0026<$[]> (_t13DB, _t13E0);
      real _t13E2 = 0.e0;
      real _t13E3 = -0.1e1;
      real _t13E4 = 0.e0;
      vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
      real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, dPos1244);
      time1245 = prim /0055 (_t13E1, _t13E6);
      face1246 = 4;
    }
  }
  real _t13E7 = -0.5e0;
  real _t13E8 = 0.1e1;
  real _t13E9 = 0.e0;
  real _t13EA = -0.e0;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, refPos1243);
  real _t13ED = prim -0026<$[]> (_t13E7, _t13EC);
  real _t13EE = 0.1e1;
  real _t13EF = 0.e0;
  real _t13F0 = -0.e0;
  vec3 _t13F1 = [_t13EE, _t13EF, _t13F0];
  real _t13F2 = prim •00CE<$[3]; $[3]; $[]> (_t13F1, dPos1244);
  real _t13F3 = prim /0055 (_t13ED, _t13F2);
  real _t13F4 = -0.1e-15;
  bool _t13F5 = prim >=007E (_t13F3, _t13F4);
  real _t13F6 = -0.5e0;
  real _t13F7 = 0.1e1;
  real _t13F8 = 0.e0;
  real _t13F9 = -0.e0;
  vec3 _t13FA = [_t13F7, _t13F8, _t13F9];
  real _t13FB = prim •00CE<$[3]; $[3]; $[]> (_t13FA, refPos1243);
  real _t13FC = prim -0026<$[]> (_t13F6, _t13FB);
  real _t13FD = 0.1e1;
  real _t13FE = 0.e0;
  real _t13FF = -0.e0;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, dPos1244);
  real _t1402 = prim /0055 (_t13FC, _t1401);
  bool _t1403 = prim >0080 (time1245, _t1402);
  real _t1404 = 0.1e1;
  real _t1405 = 0.e0;
  real _t1406 = -0.e0;
  vec3 _t1407 = [_t1404, _t1405, _t1406];
  real _t1408 = prim •00CE<$[3]; $[3]; $[]> (_t1407, dPos1244);
  real _t1409 = prim |()|00B5<$[]> (_t1408);
  real _t140A = 0.1e-20;
  bool _t140B = prim >=007E (_t1409, _t140A);
  bool _t140C = prim $and01C4 (_t1403, _t140B);
  bool _t140D = prim $and01C4 (_t13F5, _t140C);
  if _t140D {
    real _t140E = -0.5e0;
    real _t140F = 0.1e1;
    real _t1410 = 0.e0;
    real _t1411 = -0.e0;
    vec3 _t1412 = [_t140F, _t1410, _t1411];
    real _t1413 = prim •00CE<$[3]; $[3]; $[]> (_t1412, refPos1243);
    real _t1414 = prim -0026<$[]> (_t140E, _t1413);
    real _t1415 = 0.1e1;
    real _t1416 = 0.e0;
    real _t1417 = -0.e0;
    vec3 _t1418 = [_t1415, _t1416, _t1417];
    real _t1419 = prim •00CE<$[3]; $[3]; $[]> (_t1418, dPos1244);
    real _t141A = prim /0055 (_t1414, _t1419);
    vec3 _t141B = prim *0038<$[3]> (dPos1244, _t141A);
    vec3 _t141C = prim +0017<$[3]> (refPos1243, _t141B);
    real _t141D = -0.5e0;
    real _t141E = 0.1e1;
    real _t141F = 0.e0;
    real _t1420 = -0.e0;
    vec3 _t1421 = [_t141E, _t141F, _t1420];
    real _t1422 = prim •00CE<$[3]; $[3]; $[]> (_t1421, refPos1243);
    real _t1423 = prim -0026<$[]> (_t141D, _t1422);
    real _t1424 = 0.1e1;
    real _t1425 = 0.e0;
    real _t1426 = -0.e0;
    vec3 _t1427 = [_t1424, _t1425, _t1426];
    real _t1428 = prim •00CE<$[3]; $[3]; $[]> (_t1427, dPos1244);
    real _t1429 = prim /0055 (_t1423, _t1428);
    vec3 _t142A = prim *0038<$[3]> (dPos1244, _t1429);
    vec3 _t142B = prim +0017<$[3]> (refPos1243, _t142A);
    real _t142C = 0.1e-8;
    bool _t142D = extractFemItemN((_t141C, _t142B, _t142C),InsideInsert(File=checkInside.in)(Mesh),);
    if _t142D {
      real _t142E = -0.5e0;
      real _t142F = 0.1e1;
      real _t1430 = 0.e0;
      real _t1431 = -0.e0;
      vec3 _t1432 = [_t142F, _t1430, _t1431];
      real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, refPos1243);
      real _t1434 = prim -0026<$[]> (_t142E, _t1433);
      real _t1435 = 0.1e1;
      real _t1436 = 0.e0;
      real _t1437 = -0.e0;
      vec3 _t1438 = [_t1435, _t1436, _t1437];
      real _t1439 = prim •00CE<$[3]; $[3]; $[]> (_t1438, dPos1244);
      time1245 = prim /0055 (_t1434, _t1439);
      face1246 = 5;
    }
  }
  int _t143A = -1;
  bool _t143B = prim !=0086 (face1246, _t143A);
  if _t143B {
    real _t143C = 0.e0;
    real _t143D = prim max0125 (time1245, _t143C);
    real _t143E = (real)face1246;
    vec2 _t143F = [_t143D, _t143E];
    return _t143F;
  } else {
    real _t1440 = -0.1e1;
    real _t1441 = -0.1e1;
    vec2 _t1442 = [_t1440, _t1441];
    return _t1442;
  }
}
function vec2#0 _exit1443 (vec3 refPos1243, vec3 dPos1244, int i1444)
{
  real time1445 = +inf;
  int face1446 = -1;
  real faceTime1447 = -inf;
  real _t1448 = -0.5e0;
  real _t1449 = 0.e0;
  real _t144A = 0.e0;
  real _t144B = 0.1e1;
  vec3 _t144C = [_t1449, _t144A, _t144B];
  real _t144D = prim •00CE<$[3]; $[3]; $[]> (_t144C, refPos1243);
  real _t144E = prim -0026<$[]> (_t1448, _t144D);
  real _t144F = 0.e0;
  real _t1450 = 0.e0;
  real _t1451 = 0.1e1;
  vec3 _t1452 = [_t144F, _t1450, _t1451];
  real _t1453 = prim •00CE<$[3]; $[3]; $[]> (_t1452, dPos1244);
  real _t1454 = prim /0055 (_t144E, _t1453);
  real _t1455 = -0.1e-15;
  bool _t1456 = prim >=007E (_t1454, _t1455);
  real _t1457 = -0.5e0;
  real _t1458 = 0.e0;
  real _t1459 = 0.e0;
  real _t145A = 0.1e1;
  vec3 _t145B = [_t1458, _t1459, _t145A];
  real _t145C = prim •00CE<$[3]; $[3]; $[]> (_t145B, refPos1243);
  real _t145D = prim -0026<$[]> (_t1457, _t145C);
  real _t145E = 0.e0;
  real _t145F = 0.e0;
  real _t1460 = 0.1e1;
  vec3 _t1461 = [_t145E, _t145F, _t1460];
  real _t1462 = prim •00CE<$[3]; $[3]; $[]> (_t1461, dPos1244);
  real _t1463 = prim /0055 (_t145D, _t1462);
  bool _t1464 = prim >0080 (time1445, _t1463);
  real _t1465 = 0.e0;
  real _t1466 = 0.e0;
  real _t1467 = 0.1e1;
  vec3 _t1468 = [_t1465, _t1466, _t1467];
  real _t1469 = prim •00CE<$[3]; $[3]; $[]> (_t1468, dPos1244);
  real _t146A = prim |()|00B5<$[]> (_t1469);
  real _t146B = 0.1e-20;
  bool _t146C = prim >=007E (_t146A, _t146B);
  bool _t146D = prim $and01C4 (_t1464, _t146C);
  bool _t146E = prim $and01C4 (_t1456, _t146D);
  if _t146E {
    int _t146F = 0;
    bool _t1470 = prim !=0086 (i1444, _t146F);
    if _t1470 {
      real _t1471 = -0.5e0;
      real _t1472 = 0.e0;
      real _t1473 = 0.e0;
      real _t1474 = 0.1e1;
      vec3 _t1475 = [_t1472, _t1473, _t1474];
      real _t1476 = prim •00CE<$[3]; $[3]; $[]> (_t1475, refPos1243);
      real _t1477 = prim -0026<$[]> (_t1471, _t1476);
      real _t1478 = 0.e0;
      real _t1479 = 0.e0;
      real _t147A = 0.1e1;
      vec3 _t147B = [_t1478, _t1479, _t147A];
      real _t147C = prim •00CE<$[3]; $[3]; $[]> (_t147B, dPos1244);
      time1445 = prim /0055 (_t1477, _t147C);
      face1446 = 0;
    } else {
      real _t147D = -0.5e0;
      real _t147E = 0.e0;
      real _t147F = 0.e0;
      real _t1480 = 0.1e1;
      vec3 _t1481 = [_t147E, _t147F, _t1480];
      real _t1482 = prim •00CE<$[3]; $[3]; $[]> (_t1481, refPos1243);
      real _t1483 = prim -0026<$[]> (_t147D, _t1482);
      real _t1484 = 0.e0;
      real _t1485 = 0.e0;
      real _t1486 = 0.1e1;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, dPos1244);
      faceTime1447 = prim /0055 (_t1483, _t1488);
    }
  }
  real _t1489 = 0.5e0;
  real _t148A = 0.e0;
  real _t148B = 0.e0;
  real _t148C = 0.1e1;
  vec3 _t148D = [_t148A, _t148B, _t148C];
  real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, refPos1243);
  real _t148F = prim -0026<$[]> (_t1489, _t148E);
  real _t1490 = 0.e0;
  real _t1491 = 0.e0;
  real _t1492 = 0.1e1;
  vec3 _t1493 = [_t1490, _t1491, _t1492];
  real _t1494 = prim •00CE<$[3]; $[3]; $[]> (_t1493, dPos1244);
  real _t1495 = prim /0055 (_t148F, _t1494);
  real _t1496 = -0.1e-15;
  bool _t1497 = prim >=007E (_t1495, _t1496);
  real _t1498 = 0.5e0;
  real _t1499 = 0.e0;
  real _t149A = 0.e0;
  real _t149B = 0.1e1;
  vec3 _t149C = [_t1499, _t149A, _t149B];
  real _t149D = prim •00CE<$[3]; $[3]; $[]> (_t149C, refPos1243);
  real _t149E = prim -0026<$[]> (_t1498, _t149D);
  real _t149F = 0.e0;
  real _t14A0 = 0.e0;
  real _t14A1 = 0.1e1;
  vec3 _t14A2 = [_t149F, _t14A0, _t14A1];
  real _t14A3 = prim •00CE<$[3]; $[3]; $[]> (_t14A2, dPos1244);
  real _t14A4 = prim /0055 (_t149E, _t14A3);
  bool _t14A5 = prim >0080 (time1445, _t14A4);
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = 0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, dPos1244);
  real _t14AB = prim |()|00B5<$[]> (_t14AA);
  real _t14AC = 0.1e-20;
  bool _t14AD = prim >=007E (_t14AB, _t14AC);
  bool _t14AE = prim $and01C4 (_t14A5, _t14AD);
  bool _t14AF = prim $and01C4 (_t1497, _t14AE);
  if _t14AF {
    int _t14B0 = 1;
    bool _t14B1 = prim !=0086 (i1444, _t14B0);
    if _t14B1 {
      real _t14B2 = 0.5e0;
      real _t14B3 = 0.e0;
      real _t14B4 = 0.e0;
      real _t14B5 = 0.1e1;
      vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
      real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, refPos1243);
      real _t14B8 = prim -0026<$[]> (_t14B2, _t14B7);
      real _t14B9 = 0.e0;
      real _t14BA = 0.e0;
      real _t14BB = 0.1e1;
      vec3 _t14BC = [_t14B9, _t14BA, _t14BB];
      real _t14BD = prim •00CE<$[3]; $[3]; $[]> (_t14BC, dPos1244);
      time1445 = prim /0055 (_t14B8, _t14BD);
      face1446 = 1;
    } else {
      real _t14BE = 0.5e0;
      real _t14BF = 0.e0;
      real _t14C0 = 0.e0;
      real _t14C1 = 0.1e1;
      vec3 _t14C2 = [_t14BF, _t14C0, _t14C1];
      real _t14C3 = prim •00CE<$[3]; $[3]; $[]> (_t14C2, refPos1243);
      real _t14C4 = prim -0026<$[]> (_t14BE, _t14C3);
      real _t14C5 = 0.e0;
      real _t14C6 = 0.e0;
      real _t14C7 = 0.1e1;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, dPos1244);
      faceTime1447 = prim /0055 (_t14C4, _t14C9);
    }
  }
  real _t14CA = -0.5e0;
  real _t14CB = 0.e0;
  real _t14CC = 0.1e1;
  real _t14CD = 0.e0;
  vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
  real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, refPos1243);
  real _t14D0 = prim -0026<$[]> (_t14CA, _t14CF);
  real _t14D1 = 0.e0;
  real _t14D2 = 0.1e1;
  real _t14D3 = 0.e0;
  vec3 _t14D4 = [_t14D1, _t14D2, _t14D3];
  real _t14D5 = prim •00CE<$[3]; $[3]; $[]> (_t14D4, dPos1244);
  real _t14D6 = prim /0055 (_t14D0, _t14D5);
  real _t14D7 = -0.1e-15;
  bool _t14D8 = prim >=007E (_t14D6, _t14D7);
  real _t14D9 = -0.5e0;
  real _t14DA = 0.e0;
  real _t14DB = 0.1e1;
  real _t14DC = 0.e0;
  vec3 _t14DD = [_t14DA, _t14DB, _t14DC];
  real _t14DE = prim •00CE<$[3]; $[3]; $[]> (_t14DD, refPos1243);
  real _t14DF = prim -0026<$[]> (_t14D9, _t14DE);
  real _t14E0 = 0.e0;
  real _t14E1 = 0.1e1;
  real _t14E2 = 0.e0;
  vec3 _t14E3 = [_t14E0, _t14E1, _t14E2];
  real _t14E4 = prim •00CE<$[3]; $[3]; $[]> (_t14E3, dPos1244);
  real _t14E5 = prim /0055 (_t14DF, _t14E4);
  bool _t14E6 = prim >0080 (time1445, _t14E5);
  real _t14E7 = 0.e0;
  real _t14E8 = 0.1e1;
  real _t14E9 = 0.e0;
  vec3 _t14EA = [_t14E7, _t14E8, _t14E9];
  real _t14EB = prim •00CE<$[3]; $[3]; $[]> (_t14EA, dPos1244);
  real _t14EC = prim |()|00B5<$[]> (_t14EB);
  real _t14ED = 0.1e-20;
  bool _t14EE = prim >=007E (_t14EC, _t14ED);
  bool _t14EF = prim $and01C4 (_t14E6, _t14EE);
  bool _t14F0 = prim $and01C4 (_t14D8, _t14EF);
  if _t14F0 {
    int _t14F1 = 2;
    bool _t14F2 = prim !=0086 (i1444, _t14F1);
    if _t14F2 {
      real _t14F3 = -0.5e0;
      real _t14F4 = 0.e0;
      real _t14F5 = 0.1e1;
      real _t14F6 = 0.e0;
      vec3 _t14F7 = [_t14F4, _t14F5, _t14F6];
      real _t14F8 = prim •00CE<$[3]; $[3]; $[]> (_t14F7, refPos1243);
      real _t14F9 = prim -0026<$[]> (_t14F3, _t14F8);
      real _t14FA = 0.e0;
      real _t14FB = 0.1e1;
      real _t14FC = 0.e0;
      vec3 _t14FD = [_t14FA, _t14FB, _t14FC];
      real _t14FE = prim •00CE<$[3]; $[3]; $[]> (_t14FD, dPos1244);
      time1445 = prim /0055 (_t14F9, _t14FE);
      face1446 = 2;
    } else {
      real _t14FF = -0.5e0;
      real _t1500 = 0.e0;
      real _t1501 = 0.1e1;
      real _t1502 = 0.e0;
      vec3 _t1503 = [_t1500, _t1501, _t1502];
      real _t1504 = prim •00CE<$[3]; $[3]; $[]> (_t1503, refPos1243);
      real _t1505 = prim -0026<$[]> (_t14FF, _t1504);
      real _t1506 = 0.e0;
      real _t1507 = 0.1e1;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, dPos1244);
      faceTime1447 = prim /0055 (_t1505, _t150A);
    }
  }
  real _t150B = -0.5e0;
  real _t150C = -0.1e1;
  real _t150D = 0.e0;
  real _t150E = 0.e0;
  vec3 _t150F = [_t150C, _t150D, _t150E];
  real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, refPos1243);
  real _t1511 = prim -0026<$[]> (_t150B, _t1510);
  real _t1512 = -0.1e1;
  real _t1513 = 0.e0;
  real _t1514 = 0.e0;
  vec3 _t1515 = [_t1512, _t1513, _t1514];
  real _t1516 = prim •00CE<$[3]; $[3]; $[]> (_t1515, dPos1244);
  real _t1517 = prim /0055 (_t1511, _t1516);
  real _t1518 = -0.1e-15;
  bool _t1519 = prim >=007E (_t1517, _t1518);
  real _t151A = -0.5e0;
  real _t151B = -0.1e1;
  real _t151C = 0.e0;
  real _t151D = 0.e0;
  vec3 _t151E = [_t151B, _t151C, _t151D];
  real _t151F = prim •00CE<$[3]; $[3]; $[]> (_t151E, refPos1243);
  real _t1520 = prim -0026<$[]> (_t151A, _t151F);
  real _t1521 = -0.1e1;
  real _t1522 = 0.e0;
  real _t1523 = 0.e0;
  vec3 _t1524 = [_t1521, _t1522, _t1523];
  real _t1525 = prim •00CE<$[3]; $[3]; $[]> (_t1524, dPos1244);
  real _t1526 = prim /0055 (_t1520, _t1525);
  bool _t1527 = prim >0080 (time1445, _t1526);
  real _t1528 = -0.1e1;
  real _t1529 = 0.e0;
  real _t152A = 0.e0;
  vec3 _t152B = [_t1528, _t1529, _t152A];
  real _t152C = prim •00CE<$[3]; $[3]; $[]> (_t152B, dPos1244);
  real _t152D = prim |()|00B5<$[]> (_t152C);
  real _t152E = 0.1e-20;
  bool _t152F = prim >=007E (_t152D, _t152E);
  bool _t1530 = prim $and01C4 (_t1527, _t152F);
  bool _t1531 = prim $and01C4 (_t1519, _t1530);
  if _t1531 {
    int _t1532 = 3;
    bool _t1533 = prim !=0086 (i1444, _t1532);
    if _t1533 {
      real _t1534 = -0.5e0;
      real _t1535 = -0.1e1;
      real _t1536 = 0.e0;
      real _t1537 = 0.e0;
      vec3 _t1538 = [_t1535, _t1536, _t1537];
      real _t1539 = prim •00CE<$[3]; $[3]; $[]> (_t1538, refPos1243);
      real _t153A = prim -0026<$[]> (_t1534, _t1539);
      real _t153B = -0.1e1;
      real _t153C = 0.e0;
      real _t153D = 0.e0;
      vec3 _t153E = [_t153B, _t153C, _t153D];
      real _t153F = prim •00CE<$[3]; $[3]; $[]> (_t153E, dPos1244);
      time1445 = prim /0055 (_t153A, _t153F);
      face1446 = 3;
    } else {
      real _t1540 = -0.5e0;
      real _t1541 = -0.1e1;
      real _t1542 = 0.e0;
      real _t1543 = 0.e0;
      vec3 _t1544 = [_t1541, _t1542, _t1543];
      real _t1545 = prim •00CE<$[3]; $[3]; $[]> (_t1544, refPos1243);
      real _t1546 = prim -0026<$[]> (_t1540, _t1545);
      real _t1547 = -0.1e1;
      real _t1548 = 0.e0;
      real _t1549 = 0.e0;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, dPos1244);
      faceTime1447 = prim /0055 (_t1546, _t154B);
    }
  }
  real _t154C = -0.5e0;
  real _t154D = 0.e0;
  real _t154E = -0.1e1;
  real _t154F = 0.e0;
  vec3 _t1550 = [_t154D, _t154E, _t154F];
  real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, refPos1243);
  real _t1552 = prim -0026<$[]> (_t154C, _t1551);
  real _t1553 = 0.e0;
  real _t1554 = -0.1e1;
  real _t1555 = 0.e0;
  vec3 _t1556 = [_t1553, _t1554, _t1555];
  real _t1557 = prim •00CE<$[3]; $[3]; $[]> (_t1556, dPos1244);
  real _t1558 = prim /0055 (_t1552, _t1557);
  real _t1559 = -0.1e-15;
  bool _t155A = prim >=007E (_t1558, _t1559);
  real _t155B = -0.5e0;
  real _t155C = 0.e0;
  real _t155D = -0.1e1;
  real _t155E = 0.e0;
  vec3 _t155F = [_t155C, _t155D, _t155E];
  real _t1560 = prim •00CE<$[3]; $[3]; $[]> (_t155F, refPos1243);
  real _t1561 = prim -0026<$[]> (_t155B, _t1560);
  real _t1562 = 0.e0;
  real _t1563 = -0.1e1;
  real _t1564 = 0.e0;
  vec3 _t1565 = [_t1562, _t1563, _t1564];
  real _t1566 = prim •00CE<$[3]; $[3]; $[]> (_t1565, dPos1244);
  real _t1567 = prim /0055 (_t1561, _t1566);
  bool _t1568 = prim >0080 (time1445, _t1567);
  real _t1569 = 0.e0;
  real _t156A = -0.1e1;
  real _t156B = 0.e0;
  vec3 _t156C = [_t1569, _t156A, _t156B];
  real _t156D = prim •00CE<$[3]; $[3]; $[]> (_t156C, dPos1244);
  real _t156E = prim |()|00B5<$[]> (_t156D);
  real _t156F = 0.1e-20;
  bool _t1570 = prim >=007E (_t156E, _t156F);
  bool _t1571 = prim $and01C4 (_t1568, _t1570);
  bool _t1572 = prim $and01C4 (_t155A, _t1571);
  if _t1572 {
    int _t1573 = 4;
    bool _t1574 = prim !=0086 (i1444, _t1573);
    if _t1574 {
      real _t1575 = -0.5e0;
      real _t1576 = 0.e0;
      real _t1577 = -0.1e1;
      real _t1578 = 0.e0;
      vec3 _t1579 = [_t1576, _t1577, _t1578];
      real _t157A = prim •00CE<$[3]; $[3]; $[]> (_t1579, refPos1243);
      real _t157B = prim -0026<$[]> (_t1575, _t157A);
      real _t157C = 0.e0;
      real _t157D = -0.1e1;
      real _t157E = 0.e0;
      vec3 _t157F = [_t157C, _t157D, _t157E];
      real _t1580 = prim •00CE<$[3]; $[3]; $[]> (_t157F, dPos1244);
      time1445 = prim /0055 (_t157B, _t1580);
      face1446 = 4;
    } else {
      real _t1581 = -0.5e0;
      real _t1582 = 0.e0;
      real _t1583 = -0.1e1;
      real _t1584 = 0.e0;
      vec3 _t1585 = [_t1582, _t1583, _t1584];
      real _t1586 = prim •00CE<$[3]; $[3]; $[]> (_t1585, refPos1243);
      real _t1587 = prim -0026<$[]> (_t1581, _t1586);
      real _t1588 = 0.e0;
      real _t1589 = -0.1e1;
      real _t158A = 0.e0;
      vec3 _t158B = [_t1588, _t1589, _t158A];
      real _t158C = prim •00CE<$[3]; $[3]; $[]> (_t158B, dPos1244);
      faceTime1447 = prim /0055 (_t1587, _t158C);
    }
  }
  real _t158D = -0.5e0;
  real _t158E = 0.1e1;
  real _t158F = 0.e0;
  real _t1590 = -0.e0;
  vec3 _t1591 = [_t158E, _t158F, _t1590];
  real _t1592 = prim •00CE<$[3]; $[3]; $[]> (_t1591, refPos1243);
  real _t1593 = prim -0026<$[]> (_t158D, _t1592);
  real _t1594 = 0.1e1;
  real _t1595 = 0.e0;
  real _t1596 = -0.e0;
  vec3 _t1597 = [_t1594, _t1595, _t1596];
  real _t1598 = prim •00CE<$[3]; $[3]; $[]> (_t1597, dPos1244);
  real _t1599 = prim /0055 (_t1593, _t1598);
  real _t159A = -0.1e-15;
  bool _t159B = prim >=007E (_t1599, _t159A);
  real _t159C = -0.5e0;
  real _t159D = 0.1e1;
  real _t159E = 0.e0;
  real _t159F = -0.e0;
  vec3 _t15A0 = [_t159D, _t159E, _t159F];
  real _t15A1 = prim •00CE<$[3]; $[3]; $[]> (_t15A0, refPos1243);
  real _t15A2 = prim -0026<$[]> (_t159C, _t15A1);
  real _t15A3 = 0.1e1;
  real _t15A4 = 0.e0;
  real _t15A5 = -0.e0;
  vec3 _t15A6 = [_t15A3, _t15A4, _t15A5];
  real _t15A7 = prim •00CE<$[3]; $[3]; $[]> (_t15A6, dPos1244);
  real _t15A8 = prim /0055 (_t15A2, _t15A7);
  bool _t15A9 = prim >0080 (time1445, _t15A8);
  real _t15AA = 0.1e1;
  real _t15AB = 0.e0;
  real _t15AC = -0.e0;
  vec3 _t15AD = [_t15AA, _t15AB, _t15AC];
  real _t15AE = prim •00CE<$[3]; $[3]; $[]> (_t15AD, dPos1244);
  real _t15AF = prim |()|00B5<$[]> (_t15AE);
  real _t15B0 = 0.1e-20;
  bool _t15B1 = prim >=007E (_t15AF, _t15B0);
  bool _t15B2 = prim $and01C4 (_t15A9, _t15B1);
  bool _t15B3 = prim $and01C4 (_t159B, _t15B2);
  if _t15B3 {
    int _t15B4 = 5;
    bool _t15B5 = prim !=0086 (i1444, _t15B4);
    if _t15B5 {
      real _t15B6 = -0.5e0;
      real _t15B7 = 0.1e1;
      real _t15B8 = 0.e0;
      real _t15B9 = -0.e0;
      vec3 _t15BA = [_t15B7, _t15B8, _t15B9];
      real _t15BB = prim •00CE<$[3]; $[3]; $[]> (_t15BA, refPos1243);
      real _t15BC = prim -0026<$[]> (_t15B6, _t15BB);
      real _t15BD = 0.1e1;
      real _t15BE = 0.e0;
      real _t15BF = -0.e0;
      vec3 _t15C0 = [_t15BD, _t15BE, _t15BF];
      real _t15C1 = prim •00CE<$[3]; $[3]; $[]> (_t15C0, dPos1244);
      time1445 = prim /0055 (_t15BC, _t15C1);
      face1446 = 5;
    } else {
      real _t15C2 = -0.5e0;
      real _t15C3 = 0.1e1;
      real _t15C4 = 0.e0;
      real _t15C5 = -0.e0;
      vec3 _t15C6 = [_t15C3, _t15C4, _t15C5];
      real _t15C7 = prim •00CE<$[3]; $[3]; $[]> (_t15C6, refPos1243);
      real _t15C8 = prim -0026<$[]> (_t15C2, _t15C7);
      real _t15C9 = 0.1e1;
      real _t15CA = 0.e0;
      real _t15CB = -0.e0;
      vec3 _t15CC = [_t15C9, _t15CA, _t15CB];
      real _t15CD = prim •00CE<$[3]; $[3]; $[]> (_t15CC, dPos1244);
      faceTime1447 = prim /0055 (_t15C8, _t15CD);
    }
  }
  int _t15CE = -1;
  bool _t15CF = prim !=0086 (face1446, _t15CE);
  if _t15CF {
    real _t15D0 = 0.e0;
    real _t15D1 = prim max0125 (time1445, _t15D0);
    real _t15D2 = (real)face1446;
    vec2 _t15D3 = [_t15D1, _t15D2];
    return _t15D3;
  } else {
    real _t15D4 = -inf;
    bool _t15D5 = prim ==0084 (_t15D4, faceTime1447);
    if _t15D5 {
      real _t15D6 = -0.1e1;
      real _t15D7 = -0.1e1;
      vec2 _t15D8 = [_t15D6, _t15D7];
      return _t15D8;
    } else {
      real _t15D9 = (real)i1444;
      vec2 _t15DA = [faceTime1447, _t15D9];
      return _t15DA;
    }
  }
}
function Femdata: Mesh#0 domain15DB (Femdata: Space arg015DC)
{
  Femdata: Mesh _t15DD = extractFem(arg015DC, Mesh);
  return _t15DD;
}
function Femdata: Space#0 space15DE (Femdata: FemFunc arg015DF)
{
  Femdata: Space _t15E0 = extractFem(arg015DF, Space);
  return _t15E0;
}
function Femdata: FuncCell#3 funcCell15E1 (Femdata: FemFunc arg015E2, Femdata: MeshCell arg115E3)
{
  int _t15E4 = extractFemItem(CellIndex(MeshCell), int, arg115E3);
  Femdata: FuncCell _t15E5 = loadFem(FuncCell, arg015E2, _t15E4);
  return _t15E5;
}
function real#1 atent160C (real a0160D, real d160E)
{
  real _t160F = 0.e0;
  real _t1610 = 0.1e1;
  real _t1611 = 0.15e1;
  real _t1612 = 0.1e1;
  real _t1613 = prim |()|00B5<$[]> (d160E);
  real _t1614 = prim /0055 (_t1613, thick0525);
  real _t1615 = prim -0026<$[]> (_t1612, _t1614);
  real _t1616 = prim *0034 (_t1611, _t1615);
  real _t1617 = prim clamp0094<$[]> (_t160F, _t1610, _t1616);
  real _t1618 = prim *0034 (a0160D, _t1617);
  return _t1618;
}
function vec3#1 fStep1619 (vec3 x161A)
{
  bool _t161B = prim !00BC (analytical053F);
  if _t161B {
    field(3)[3] _t161C = prim ∇00A8<#∞; %3> (F15EE);
    field(3)[3,3] _t161D = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t161C);
    tensor[3,3] _t161E = prim @00A5<#∞; %3; $[3,3]> (_t161D, x161A);
    vec3[3] E161F = prim evecs00A0 (_t161E);
    field(3)[3] _t1620 = prim ∇00A8<#∞; %3> (F15EE);
    field(3)[3,3] _t1621 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1620);
    tensor[3,3] _t1622 = prim @00A5<#∞; %3; $[3,3]> (_t1621, x161A);
    real[3] L1623 = prim evals009F (_t1622);
    int _t1624 = 2;
    vec3 _t1625 = prim $sub01C0<vec3; %3> (E161F, _t1624);
    int _t1626 = 2;
    vec3 _t1627 = prim $sub01C0<vec3; %3> (E161F, _t1626);
    tensor[3,3] _t1628 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1625, _t1627);
    int _t1629 = 2;
    real _t162A = prim $sub01C0<real; %3> (L1623, _t1629);
    tensor[3,3] _t162B = prim /0057<$[3,3]> (_t1628, _t162A);
    int _t162C = 1;
    vec3 _t162D = prim $sub01C0<vec3; %3> (E161F, _t162C);
    int _t162E = 1;
    vec3 _t162F = prim $sub01C0<vec3; %3> (E161F, _t162E);
    tensor[3,3] _t1630 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t162D, _t162F);
    int _t1631 = 1;
    real _t1632 = prim $sub01C0<real; %3> (L1623, _t1631);
    tensor[3,3] _t1633 = prim /0057<$[3,3]> (_t1630, _t1632);
    tensor[3,3] _t1634 = prim +0017<$[3,3]> (_t162B, _t1633);
    tensor[3,3] _t1635 = prim unary -008B<$[3,3]> (_t1634);
    field(3)[3] _t1636 = prim ∇00A8<#∞; %3> (F15EE);
    vec3 _t1637 = prim @00A5<#∞; %3; $[3]> (_t1636, x161A);
    vec3 _t1638 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1635, _t1637);
    return _t1638;
  } else {
    field#1(3)[3] _t1639 = prim ∇00A8<#2; %3> (G160B);
    field#0(3)[3,3] _t163A = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1639);
    tensor[3,3] _t163B = prim @00A5<#0; %3; $[3,3]> (_t163A, x161A);
    vec3[3] E163C = prim evecs00A0 (_t163B);
    field#1(3)[3] _t163D = prim ∇00A8<#2; %3> (G160B);
    field#0(3)[3,3] _t163E = prim ∇⊗00AD<#1; %3; $[]; %3> (_t163D);
    tensor[3,3] _t163F = prim @00A5<#0; %3; $[3,3]> (_t163E, x161A);
    real[3] L1640 = prim evals009F (_t163F);
    int _t1641 = 2;
    vec3 _t1642 = prim $sub01C0<vec3; %3> (E163C, _t1641);
    int _t1643 = 2;
    vec3 _t1644 = prim $sub01C0<vec3; %3> (E163C, _t1643);
    tensor[3,3] _t1645 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1642, _t1644);
    int _t1646 = 2;
    real _t1647 = prim $sub01C0<real; %3> (L1640, _t1646);
    tensor[3,3] _t1648 = prim /0057<$[3,3]> (_t1645, _t1647);
    int _t1649 = 1;
    vec3 _t164A = prim $sub01C0<vec3; %3> (E163C, _t1649);
    int _t164B = 1;
    vec3 _t164C = prim $sub01C0<vec3; %3> (E163C, _t164B);
    tensor[3,3] _t164D = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t164A, _t164C);
    int _t164E = 1;
    real _t164F = prim $sub01C0<real; %3> (L1640, _t164E);
    tensor[3,3] _t1650 = prim /0057<$[3,3]> (_t164D, _t164F);
    tensor[3,3] _t1651 = prim +0017<$[3,3]> (_t1648, _t1650);
    tensor[3,3] _t1652 = prim unary -008B<$[3,3]> (_t1651);
    field#1(3)[3] _t1653 = prim ∇00A8<#2; %3> (G160B);
    vec3 _t1654 = prim @00A5<#1; %3; $[3]> (_t1653, x161A);
    vec3 _t1655 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1652, _t1654);
    return _t1655;
  }
}
function real#1 fStrength1656 (vec3 x1657)
{
  field(3)[3] _t1658 = prim ∇00A8<#∞; %3> (F15EE);
  field(3)[3,3] _t1659 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1658);
  tensor[3,3] _t165A = prim @00A5<#∞; %3; $[3,3]> (_t1659, x1657);
  real[3] _t165B = prim evals009F (_t165A);
  int _t165C = 1;
  real _t165D = prim $sub01C0<real; %3> (_t165B, _t165C);
  real _t165E = prim unary -008B<$[]> (_t165D);
  field(3)[3] _t165F = prim ∇00A8<#∞; %3> (F15EE);
  vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (_t165F, x1657);
  real _t1661 = prim |()|00B5<$[3]> (_t1660);
  real _t1662 = prim +0017<$[]> (fBias0528, _t1661);
  real _t1663 = prim /0055 (_t165E, _t1662);
  return _t1663;
}
function bool#1 fTest1664 (vec3 x1665)
{
  bool _t1666 = true;
  return _t1666;
}
function real#1 fMask1667 (vec3 x1668)
{
  real _t1669 = 0.1e1;
  return _t1669;
}
function bool#1 posTest166A (vec3 x166B)
{
  bool _t166C;
  Femdata: RefCell _t166D = func refcell057C (block04FD);
  real _t166E = 0.1e-8;
  bool _t166F = extractFemItemN((_t166D, x166B, _t166E),InsideInsert(File=checkInside.in)(Mesh),);
  if _t166F {
    bool _t1670;
    real _t1671 = func fStrength1656 (x166B);
    bool _t1672 = prim >0080 (_t1671, fStrTh0526);
    if _t1672 {
      bool _t1673;
      real _t1674 = func fMask1667 (x166B);
      bool _t1675 = prim >=007E (_t1674, fMaskTh0527);
      if _t1675 {
        _t1673 = func fTest1664 (x166B);
      } else {
        _t1673 = false;
      }
      _t1670 = _t1673;
    } else {
      _t1670 = false;
    }
    _t166C = _t1670;
  } else {
    _t166C = false;
  }
  return _t166C;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115E6 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15E7 = func funcCell15E1 (U050B, c115E6);
  Femdata: FemFunc _t15E8 = extractFem(_t15E7, FemFunc);
  Femdata: FuncCell _t15E9 = func funcCell15E1 (U050B, c115E6);
  Femdata: FemFunc _t15EA = extractFem(_t15E9, FemFunc);
  Femdata: Space _t15EB = extractFem(_t15EA, Space);
  Femdata: FuncCell _t15EC = func funcCell15E1 (U050B, c115E6);
  int _t15ED = extractFemItem(CellIndex(FuncCell), int, _t15EC);
  F15EE = femField(_t15E8,_t15ED,field(3)[],refField,);
  kernel _t15EF = tent;
  IMAGE1D<double[3]> img15F0 = clamp(cmap050F);
  CM15F1 = prim ⊛0074<#0; %1; $[3]> (_t15EF, img15F0);
  C15F2 = F15EE;
  vec3 _t15F3 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN15F4 = prim normalize0137<$[3]> (_t15F3);
  vec3 _t15F5 = prim ×00BE (camN15F4, camUp0518);
  camU15F6 = prim normalize0137<$[3]> (_t15F5);
  camV15F7 = prim ×00BE (camN15F4, camU15F6);
  vec3 _t15F8 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist15F9 = prim |()|00B5<$[3]> (_t15F8);
  real _t15FA = 0.314159265358979323846264338327950288e1;
  real _t15FB = prim *0034 (camFOV051E, _t15FA);
  real _t15FC = 0.36e3;
  real _t15FD = prim /0055 (_t15FB, _t15FC);
  real _t15FE = prim tan0179 (_t15FD);
  camVmax15FF = prim *0034 (_t15FE, camDist15F9);
  real _t1600 = (real)iresU0520;
  real _t1601 = prim *0034 (camVmax15FF, _t1600);
  real _t1602 = (real)iresV0521;
  camUmax1603 = prim /0055 (_t1601, _t1602);
  camNearVsp1604 = prim +0017<$[]> (camNear051C, camDist15F9);
  camFarVsp1605 = prim +0017<$[]> (camFar051D, camDist15F9);
  tensor[3,3] _t1606 = [camU15F6, camV15F7, camN15F4];
  tensor[3,3] _t1607 = prim transpose0145<%3; %3> (_t1606);
  vec3 _t1608 = prim normalize0137<$[3]> (litdir0538);
  litwsp1609 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1607, _t1608);
  kernel _t160A = bspln3;
  G160B = prim ⊛0070<#2; %3; $[]> (umm0541, _t160A);
}
strand ray (int ui1676, int vi1677) {
  real rayU1678;
  real rayV167F;
  real rayN1686;
  vec3 UV1687;
  vec3 rayOrig168A;
  vec3 rayVec168F;
  real alphaFix1694;
  vec3 eyeDir1697;
  real phKa1699;
  real phKd169A;
  real phKs169B;
  real phSp169C;
  output vec4 rgba169D;
  output real raw16A2;
  vec3 rgb16A3;
  real transp16A7;
  {
    real _t1679 = prim unary -008B<$[]> (camUmax1603);
    real _t167A = -0.5e0;
    real _t167B = (real)ui1676;
    real _t167C = (real)iresU0520;
    real _t167D = 0.5e0;
    real _t167E = prim -0026<$[]> (_t167C, _t167D);
    rayU1678 = prim lerp0098<$[]> (_t1679, camUmax1603, _t167A, _t167B, _t167E);
    real _t1680 = prim unary -008B<$[]> (camVmax15FF);
    real _t1681 = -0.5e0;
    real _t1682 = (real)vi1677;
    real _t1683 = (real)iresV0521;
    real _t1684 = 0.5e0;
    real _t1685 = prim -0026<$[]> (_t1683, _t1684);
    rayV167F = prim lerp0098<$[]> (_t1680, camVmax15FF, _t1681, _t1682, _t1685);
    rayN1686 = camNearVsp1604;
    vec3 _t1688 = prim *0036<$[3]> (rayU1678, camU15F6);
    vec3 _t1689 = prim *0036<$[3]> (rayV167F, camV15F7);
    UV1687 = prim +0017<$[3]> (_t1688, _t1689);
    vec3 _t168B;
    if camOrtho051F {
      _t168B = UV1687;
    } else {
      real _t168C = 0.e0;
      real _t168D = 0.e0;
      real _t168E = 0.e0;
      _t168B = [_t168C, _t168D, _t168E];
    }
    rayOrig168A = prim +0017<$[3]> (camEye0510, _t168B);
    vec3 _t1690;
    if camOrtho051F {
      real _t1691 = 0.e0;
      real _t1692 = 0.e0;
      real _t1693 = 0.e0;
      _t1690 = [_t1691, _t1692, _t1693];
    } else {
      _t1690 = prim /0057<$[3]> (UV1687, camDist15F9);
    }
    rayVec168F = prim +0017<$[3]> (camN15F4, _t1690);
    real _t1695 = prim |()|00B5<$[3]> (rayVec168F);
    real _t1696 = prim *0034 (_t1695, rayStep0522);
    alphaFix1694 = prim /0055 (_t1696, refStep0523);
    vec3 _t1698 = prim normalize0137<$[3]> (rayVec168F);
    eyeDir1697 = prim unary -008B<$[3]> (_t1698);
    phKa1699 = phong052B[0];
    phKd169A = phong052B[1];
    phKs169B = phong052B[2];
    phSp169C = phong052B[3];
    real _t169E = 0.e0;
    real _t169F = 0.e0;
    real _t16A0 = 0.e0;
    real _t16A1 = 0.e0;
    rgba169D = [_t169E, _t169F, _t16A0, _t16A1];
    raw16A2 = 0.e0;
    real _t16A4 = 0.e0;
    real _t16A5 = 0.e0;
    real _t16A6 = 0.e0;
    rgb16A3 = [_t16A4, _t16A5, _t16A6];
    transp16A7 = 0.1e1;
  }
  update
  {
    rayN1686 = prim +0017<$[]> (rayN1686, rayStep0522);
    bool _t16A8 = prim >0080 (rayN1686, camFarVsp1605);
    if _t16A8 {
      stabilize;
    }
    vec3 _t16A9 = prim *0036<$[3]> (rayN1686, rayVec168F);
    vec3 pos16AA = prim +0017<$[3]> (rayOrig168A, _t16A9);
    bool _t16AB = func posTest166A (pos16AA);
    bool _t16AC = prim !00BC (_t16AB);
    if _t16AC {
      continue;
    }
    vec3 step16AD = func fStep1619 (pos16AA);
    real _t16AE = prim |()|00B5<$[3]> (step16AD);
    real aa16AF = func atent160C (maxAlpha0529, _t16AE);
    real _t16B0 = 0.e0;
    bool _t16B1 = prim ==0084 (aa16AF, _t16B0);
    if _t16B1 {
      continue;
    }
    real _t16B2 = 0.1e1;
    real _t16B3 = 0.1e1;
    real _t16B4 = prim -0026<$[]> (_t16B3, aa16AF);
    real _t16B5 = prim ^0069 (_t16B4, alphaFix1694);
    aa16AF = prim -0026<$[]> (_t16B2, _t16B5);
    vec3 _t16B6 = prim normalize0137<$[3]> (step16AD);
    vec3 snorm16B7 = prim unary -008B<$[3]> (_t16B6);
    real _t16B8 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, litwsp1609);
    int _t16B9 = 2;
    real dcomp16BA = prim ^0068 (_t16B8, _t16B9);
    real scomp16BB = 0.e0;
    real _t16BC = 0.e0;
    bool _t16BD = prim !=0088 (phKs169B, _t16BC);
    if _t16BD {
      vec3 _t16BE = prim +0017<$[3]> (eyeDir1697, litwsp1609);
      vec3 _t16BF = prim normalize0137<$[3]> (_t16BE);
      real _t16C0 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, _t16BF);
      real _t16C1 = prim |()|00B5<$[]> (_t16C0);
      scomp16BB = prim ^0069 (_t16C1, phSp169C);
    }
    vec3 dcol16C2 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1604, rayN1686, camFarVsp1605);
    real cmin16C3 = cminmax053C[0];
    real cmax16C4 = cminmax053C[1];
    real _t16C5 = 0.1e1;
    real _t16C6 = 0.1e1;
    real _t16C7 = 0.1e1;
    vec3 mcol16C8 = [_t16C5, _t16C6, _t16C7];
    bool _t16C9 = prim !=0088 (cmin16C3, cmax16C4);
    if _t16C9 {
      real _t16CA = 0.e0;
      real _t16CB = 0.1e1;
      vec3 _t16CC = prim +0017<$[3]> (pos16AA, step16AD);
      real _t16CD = prim @00A5<#∞; %3; $[]> (C15F2, _t16CC);
      real _t16CE = prim lerp0098<$[]> (_t16CA, _t16CB, cmin16C3, _t16CD, cmax16C4);
      mcol16C8 = prim @00A5<#0; %1; $[3]> (CM15F1, _t16CE);
    }
    real _t16CF = prim *0034 (transp16A7, aa16AF);
    real _t16D0 = prim *0034 (phKd169A, dcomp16BA);
    real _t16D1 = prim +0017<$[]> (phKa1699, _t16D0);
    vec3 _t16D2 = prim modulate0129<%3> (dcol16C2, mcol16C8);
    vec3 _t16D3 = prim *0036<$[3]> (_t16D1, _t16D2);
    real _t16D4 = prim *0034 (phKs169B, scomp16BB);
    real _t16D5 = 0.1e1;
    real _t16D6 = 0.1e1;
    real _t16D7 = 0.1e1;
    vec3 _t16D8 = [_t16D5, _t16D6, _t16D7];
    vec3 _t16D9 = prim *0036<$[3]> (_t16D4, _t16D8);
    vec3 _t16DA = prim +0017<$[3]> (_t16D3, _t16D9);
    vec3 _t16DB = prim *0036<$[3]> (_t16CF, _t16DA);
    rgb16A3 = prim +0017<$[3]> (rgb16A3, _t16DB);
    real _t16DC = 0.1e1;
    real _t16DD = prim -0026<$[]> (_t16DC, aa16AF);
    transp16A7 = prim *0034 (transp16A7, _t16DD);
    bool _t16DE = prim <007A (transp16A7, transp00524);
    if _t16DE {
      transp16A7 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t16DF = 0.1e1;
    bool _t16E0 = prim <007A (transp16A7, _t16DF);
    if _t16E0 {
      real _t16E1 = 0.1e1;
      real aa16E2 = prim -0026<$[]> (_t16E1, transp16A7);
      real _t16E3 = rgb16A3[0];
      real _t16E4 = prim /0055 (_t16E3, aa16E2);
      real _t16E5 = rgb16A3[1];
      real _t16E6 = prim /0055 (_t16E5, aa16E2);
      real _t16E7 = rgb16A3[2];
      real _t16E8 = prim /0055 (_t16E7, aa16E2);
      rgba169D = [_t16E4, _t16E6, _t16E8, aa16E2];
    }
  }
}
grid(2) {
  int _t16E9 = 0;
  int _t16EA = 1;
  int _t16EB = prim -0024 (iresV0521, _t16EA);
  int[] _t16EC = prim $range01C3 (_t16E9, _t16EB);
  foreach vi16F2 in _t16EC {
    int _t16ED = 0;
    int _t16EE = 1;
    int _t16EF = prim -0024 (iresU0520, _t16EE);
    int[] _t16F0 = prim $range01C3 (_t16ED, _t16EF);
    foreach ui16F1 in _t16F0 {
      new ray (ui16F1, vi16F2);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115E6;
global field(3)[] F15EE;
global field#0(1)[3] CM15F1;
global field(3)[] C15F2;
global vec3 camN15F4;
global vec3 camU15F6;
global vec3 camV15F7;
global real camDist15F9;
global real camVmax15FF;
global real camUmax1603;
global real camNearVsp1604;
global real camFarVsp1605;
global vec3 litwsp1609;
global field#2(3)[] G160B;
function bool#0 !=0542 (Femdata: MeshCell cell10543, Femdata: MeshCell cell10544)
{
  int _t0545 = extractFemItem(CellIndex(Mesh), int, cell10543);
  int _t0546 = extractFemItem(CellIndex(Mesh), int, cell10544);
  bool _t0547 = prim !=0086 (_t0545, _t0546);
  return _t0547;
}
function bool#0 ==0548 (Femdata: MeshCell cell10543, Femdata: MeshCell cell10544)
{
  int _t0549 = extractFemItem(CellIndex(Mesh), int, cell10543);
  int _t054A = extractFemItem(CellIndex(Mesh), int, cell10544);
  bool _t054B = prim ==0082 (_t0549, _t054A);
  return _t054B;
}
function Femdata: MeshPos#0 findPos054C (Femdata: Mesh mesh054D, vec3 pos054E)
{
  real _t054F = 0.e0;
  real _t0550 = 0.e0;
  real _t0551 = 0.e0;
  xn0552 = [_t054F, _t0550, _t0551];
  newtonInt0553 = 0;
  cellInt0554 = extractFemItem(StartCell(Mesh), int, mesh054D);
  int _t0555 = extractFemItem(NumCell(Mesh), int, mesh054D);
  int _t0556 = 1;
  numCell0557 = prim -0024 (_t0555, _t0556);
  int _t0558 = 0;
  int _t0559 = 2;
  int _t055A = 1;
  int _t055B = prim +0015 (_t0559, _t055A);
  int _t055C = prim *0033 (_t055B, numCell0557);
  int[] _t055D = prim $range01C3 (_t0558, _t055C);
  foreach itter0578 in _t055D {
    field(3)[3] _t055E = femField(mesh054D,cellInt0554,field(3)[3],Transform,);
    field(3)[3,3] _t055F = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t055E);
    field(3)[3,3] _t0560 = prim inv015E<#∞; %3> (_t055F);
    real _t0561 = 0.e0;
    real _t0562 = 0.e0;
    real _t0563 = 0.e0;
    vec3 _t0564 = [_t0561, _t0562, _t0563];
    A0565 = prim @00A5<#∞; %3; $[3,3]> (_t0560, _t0564);
    field(3)[3] _t0566 = femField(mesh054D,cellInt0554,field(3)[3],Transform,);
    field(3)[3] _t0567 = prim -002E<#∞; %3; $[3]> (_t0566, pos054E);
    field(3)[3] _t0568 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0565, _t0567);
    delta0569 = prim @00A5<#∞; %3; $[3]> (_t0568, xn0552);
    xn0552 = prim -0026<$[3]> (xn0552, delta0569);
    real _t056A = 0.1e-7;
    real _t056B = 0.1e-7;
    real _t056C = prim *0034 (_t056A, _t056B);
    real _t056D = prim •00CE<$[3]; $[3]; $[]> (delta0569, delta0569);
    bool _t056E = prim >=007E (_t056C, _t056D);
    if _t056E {
      real _t056F = 0.1e-8;
      bool _t0570 = extractFemItemN((mesh054D, xn0552, _t056F),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0570 {
        Femdata: MeshPos _t0571 = extractFemItemN((mesh054D, cellInt0554, xn0552, pos054E),AllBuild(MeshPos),);
        return _t0571;
      }
    }
    int _t0572 = 1;
    newtonInt0553 = prim +0015 (newtonInt0553, _t0572);
    int _t0573 = 2;
    bool _t0574 = prim >=007D (newtonInt0553, _t0573);
    if _t0574 {
      newtonInt0553 = 0;
      bool _t0575 = prim >=007D (cellInt0554, numCell0557);
      if _t0575 {
        Femdata: MeshPos _t0576 = extractFemItemN((mesh054D),InvalidBuild(MeshPos),);
        return _t0576;
      } else {
        int _t0577 = 1;
        cellInt0554 = prim +0015 (cellInt0554, _t0577);
      }
    }
  }
  string _t0579 = "Bad end 2";
  string _t057A = "\n";
  print (_t0579, _t057A);
  Femdata: MeshPos _t057B = extractFemItemN((mesh054D),InvalidBuild(MeshPos),);
  return _t057B;
}
function Femdata: RefCell#1 refcell057C (Femdata: Mesh arg0057D)
{
  Femdata: RefCell _t057E = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0057D);
  return _t057E;
}
function Femdata: MeshCell[]#0 cells057F (Femdata: Mesh arg00580)
{
  Femdata: MeshCell[] _t0581 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00580);
  return _t0581;
}
function Femdata: MeshCell[]#0 cells0582 (Femdata: Mesh arg00580)
{
  int _t0583 = 0;
  int _t0584 = extractFemItem(NumCell(Mesh), int, arg00580);
  int[] _t0585 = prim $range01C3 (_t0583, _t0584);
  Femdata: MeshCell[] accum0588 = {};
  foreach i0586 in _t0585 {
    Femdata: MeshCell _t0587 = loadFem(MeshCell, arg00580, i0586);
    accum0588 = prim @0010<Femdata: MeshCell> (accum0588, _t0587);
  }
  return accum0588;
}
function int#0 numCell0589 (Femdata: Mesh arg0057D)
{
  int _t058A = extractFemItem(NumCell(Mesh), int, arg0057D);
  return _t058A;
}
function tensor[3,3,3,3]#0 mesh_t_transform_3058B (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t058F = femField(mesh058E,cell058D,field(3)[3],Transform,);
  field(3)[3,3] _t0590 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t058F);
  field(3)[3,3,3] _t0591 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0590);
  field(3)[3,3,3,3] _t0592 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0591);
  tensor[3,3,3,3] _t0593 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0592, pos058C);
  return _t0593;
}
function tensor[3,3,3]#0 mesh_t_transform_20594 (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t0595 = femField(mesh058E,cell058D,field(3)[3],Transform,);
  field(3)[3,3] _t0596 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0595);
  field(3)[3,3,3] _t0597 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0596);
  tensor[3,3,3] _t0598 = prim @00A5<#∞; %3; $[3,3,3]> (_t0597, pos058C);
  return _t0598;
}
function tensor[3,3]#0 mesh_t_transform_10599 (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t059A = femField(mesh058E,cell058D,field(3)[3],Transform,);
  field(3)[3,3] _t059B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t059A);
  tensor[3,3] _t059C = prim @00A5<#∞; %3; $[3,3]> (_t059B, pos058C);
  return _t059C;
}
function vec3#2 mesh_t_transform_0059D (vec3 pos058C, int cell058D, Femdata: Mesh mesh058E)
{
  field(3)[3] _t059E = femField(mesh058E,cell058D,field(3)[3],Transform,);
  vec3 _t059F = prim @00A5<#∞; %3; $[3]> (_t059E, pos058C);
  return _t059F;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse05A0 (vec3 pos05A1, int cellInt05A2, Femdata: Mesh mesh05A3)
{
  real _t05A4 = 0.e0;
  real _t05A5 = 0.e0;
  real _t05A6 = 0.e0;
  xn05A7 = [_t05A4, _t05A5, _t05A6];
  field(3)[3] _t05A8 = femField(mesh05A3,cellInt05A2,field(3)[3],Transform,);
  field(3)[3,3] _t05A9 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t05A8);
  field(3)[3,3] _t05AA = prim inv015E<#∞; %3> (_t05A9);
  real _t05AB = 0.e0;
  real _t05AC = 0.e0;
  real _t05AD = 0.e0;
  vec3 _t05AE = [_t05AB, _t05AC, _t05AD];
  A05AF = prim @00A5<#∞; %3; $[3,3]> (_t05AA, _t05AE);
  int _t05B0 = 0;
  int _t05B1 = 2;
  int[] _t05B2 = prim $range01C3 (_t05B0, _t05B1);
  foreach itter05C0 in _t05B2 {
    field(3)[3] _t05B3 = femField(mesh05A3,cellInt05A2,field(3)[3],Transform,);
    field(3)[3] _t05B4 = prim -002E<#∞; %3; $[3]> (_t05B3, pos05A1);
    field(3)[3] _t05B5 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A05AF, _t05B4);
    delta05B6 = prim @00A5<#∞; %3; $[3]> (_t05B5, xn05A7);
    xn05A7 = prim -0026<$[3]> (xn05A7, delta05B6);
    real _t05B7 = 0.1e-7;
    real _t05B8 = 0.1e-7;
    real _t05B9 = prim *0034 (_t05B7, _t05B8);
    real _t05BA = prim •00CE<$[3]; $[3]; $[]> (delta05B6, delta05B6);
    bool _t05BB = prim >=007E (_t05B9, _t05BA);
    if _t05BB {
      real _t05BC = 0.1e-8;
      bool _t05BD = extractFemItemN((mesh05A3, xn05A7, _t05BC),InsideInsert(File=checkInside.in)(Mesh),);
      if _t05BD {
        Femdata: MeshPos _t05BE = extractFemItemN((mesh05A3, cellInt05A2, xn05A7, pos05A1),AllBuild(MeshPos),);
        return _t05BE;
      } else {
        Femdata: MeshPos _t05BF = extractFemItemN((mesh05A3),InvalidBuild(MeshPos),);
        return _t05BF;
      }
    }
  }
  Femdata: MeshPos _t05C1 = extractFemItemN((mesh05A3),InvalidBuild(MeshPos),);
  return _t05C1;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos05C2 (Femdata: MeshPos pos05C3)
{
  bool _t05C4 = extractFemItem(WorldTest(MeshPos), bool, pos05C3);
  if _t05C4 {
    vec3 _t05C5 = extractFemItem(RefPos(MeshPos), vec3, pos05C3);
    int _t05C6 = extractFemItem(CellIndex(MeshPos), int, pos05C3);
    Femdata: Mesh _t05C7 = extractFem(pos05C3, Mesh);
    vec3 _t05C8 = func mesh_t_transform_0059D (_t05C5, _t05C6, _t05C7);
    Femdata: MeshPos _t05C9 = extractFemItemN((pos05C3, _t05C8),NewWorld(MeshPos),);
    return _t05C9;
  } else {
    return pos05C3;
  }
}
function vec3#0 worldPos05CA (Femdata: MeshPos pos05C3)
{
  vec3 _t05CB = extractFemItem(RefPos(MeshPos), vec3, pos05C3);
  int _t05CC = extractFemItem(CellIndex(MeshPos), int, pos05C3);
  Femdata: Mesh _t05CD = extractFem(pos05C3, Mesh);
  vec3 _t05CE = func mesh_t_transform_0059D (_t05CB, _t05CC, _t05CD);
  return _t05CE;
}
function Femdata: MeshPos#0 $exitPos05CF (Femdata: Mesh mesh05D0, int cellId05D1, vec3 refPos05D2, vec3 dPos05D3, real[2] time05D4)
{
  int _t05D5 = -1;
  real _t05D6 = time05D4[1];
  int _t05D7 = prim $r2i01B7 (_t05D6);
  int[2] _t05D9 = func nextCell405D8 (_t05D7, cellId05D1, mesh05D0);
  int _t05DA = 0;
  int _t05DB = prim $sub01C0<int; %2> (_t05D9, _t05DA);
  bool _t05DC = prim !=0086 (_t05D5, _t05DB);
  if _t05DC {
    string _t05DD = "face ";
    real _t05DE = time05D4[1];
    int _t05DF = prim $r2i01B7 (_t05DE);
    string _t05E0 = " to ";
    real _t05E1 = time05D4[1];
    int _t05E2 = prim $r2i01B7 (_t05E1);
    int[2] _t05E3 = func nextCell405D8 (_t05E2, cellId05D1, mesh05D0);
    int _t05E4 = 1;
    int _t05E5 = prim $sub01C0<int; %2> (_t05E3, _t05E4);
    string _t05E6 = "\n";
    string _t05E7 = "got: ";
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    real _t05EA = 0.e0;
    real _t05EB = 0.e0;
    vec4 _t05EC = [_t05E8, _t05E9, _t05EA, _t05EB];
    real _t05ED = 0.e0;
    real _t05EE = 0.1e1;
    real _t05EF = 0.e0;
    real _t05F0 = 0.e0;
    vec4 _t05F1 = [_t05ED, _t05EE, _t05EF, _t05F0];
    real _t05F2 = 0.e0;
    real _t05F3 = 0.e0;
    real _t05F4 = 0.1e1;
    real _t05F5 = 0.e0;
    vec4 _t05F6 = [_t05F2, _t05F3, _t05F4, _t05F5];
    real _t05F7 = 0.e0;
    real _t05F8 = 0.e0;
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    tensor[4,4] _t05FC = [_t05EC, _t05F1, _t05F6, _t05FB];
    real _t05FD = 0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    vec4 _t0601 = [_t05FD, _t05FE, _t05FF, _t0600];
    real _t0602 = 0.e0;
    real _t0603 = 0.1e1;
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    vec4 _t0606 = [_t0602, _t0603, _t0604, _t0605];
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    real _t060A = 0.1e1;
    vec4 _t060B = [_t0607, _t0608, _t0609, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.e0;
    real _t060F = 0.1e1;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    tensor[4,4] _t0611 = [_t0601, _t0606, _t060B, _t0610];
    real _t0612 = 0.e0;
    real _t0613 = 0.1e1;
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    vec4 _t0616 = [_t0612, _t0613, _t0614, _t0615];
    real _t0617 = 0.e0;
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    real _t061A = 0.e0;
    vec4 _t061B = [_t0617, _t0618, _t0619, _t061A];
    real _t061C = 0.1e1;
    real _t061D = -0.1e1;
    real _t061E = 0.e0;
    real _t061F = -0.5e0;
    vec4 _t0620 = [_t061C, _t061D, _t061E, _t061F];
    real _t0621 = 0.e0;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.1e1;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    tensor[4,4] _t0626 = [_t0616, _t061B, _t0620, _t0625];
    real _t0627 = 0.e0;
    real _t0628 = 0.e0;
    real _t0629 = -0.1e1;
    real _t062A = 0.e0;
    vec4 _t062B = [_t0627, _t0628, _t0629, _t062A];
    real _t062C = 0.e0;
    real _t062D = 0.1e1;
    real _t062E = 0.e0;
    real _t062F = 0.e0;
    vec4 _t0630 = [_t062C, _t062D, _t062E, _t062F];
    real _t0631 = 0.1e1;
    real _t0632 = -0.1e1;
    real _t0633 = 0.e0;
    real _t0634 = -0.5e0;
    vec4 _t0635 = [_t0631, _t0632, _t0633, _t0634];
    real _t0636 = 0.e0;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.1e1;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    tensor[4,4] _t063B = [_t062B, _t0630, _t0635, _t063A];
    real _t063C = 0.e0;
    real _t063D = -0.1e1;
    real _t063E = 0.e0;
    real _t063F = 0.e0;
    vec4 _t0640 = [_t063C, _t063D, _t063E, _t063F];
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    real _t0643 = -0.1e1;
    real _t0644 = 0.e0;
    vec4 _t0645 = [_t0641, _t0642, _t0643, _t0644];
    real _t0646 = 0.1e1;
    real _t0647 = -0.1e1;
    real _t0648 = 0.e0;
    real _t0649 = -0.5e0;
    vec4 _t064A = [_t0646, _t0647, _t0648, _t0649];
    real _t064B = 0.e0;
    real _t064C = 0.e0;
    real _t064D = 0.e0;
    real _t064E = 0.1e1;
    vec4 _t064F = [_t064B, _t064C, _t064D, _t064E];
    tensor[4,4] _t0650 = [_t0640, _t0645, _t064A, _t064F];
    real _t0651 = 0.e0;
    real _t0652 = 0.e0;
    real _t0653 = 0.1e1;
    real _t0654 = 0.e0;
    vec4 _t0655 = [_t0651, _t0652, _t0653, _t0654];
    real _t0656 = 0.e0;
    real _t0657 = -0.1e1;
    real _t0658 = 0.e0;
    real _t0659 = 0.e0;
    vec4 _t065A = [_t0656, _t0657, _t0658, _t0659];
    real _t065B = 0.1e1;
    real _t065C = -0.1e1;
    real _t065D = 0.e0;
    real _t065E = -0.5e0;
    vec4 _t065F = [_t065B, _t065C, _t065D, _t065E];
    real _t0660 = 0.e0;
    real _t0661 = 0.e0;
    real _t0662 = 0.e0;
    real _t0663 = 0.1e1;
    vec4 _t0664 = [_t0660, _t0661, _t0662, _t0663];
    tensor[4,4] _t0665 = [_t0655, _t065A, _t065F, _t0664];
    tensor[4,4][6] _t0666 = {_t05FC, _t0611, _t0626, _t063B, _t0650, _t0665};
    real _t0667 = 0.1e1;
    real _t0668 = 0.e0;
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    vec4 _t066B = [_t0667, _t0668, _t0669, _t066A];
    real _t066C = 0.e0;
    real _t066D = 0.1e1;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    vec4 _t0670 = [_t066C, _t066D, _t066E, _t066F];
    real _t0671 = 0.e0;
    real _t0672 = 0.e0;
    real _t0673 = 0.1e1;
    real _t0674 = -0.1e1;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.e0;
    real _t0678 = 0.e0;
    real _t0679 = 0.1e1;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    tensor[4,4] _t067B = [_t066B, _t0670, _t0675, _t067A];
    real _t067C = 0.1e1;
    real _t067D = 0.e0;
    real _t067E = 0.e0;
    real _t067F = 0.e0;
    vec4 _t0680 = [_t067C, _t067D, _t067E, _t067F];
    real _t0681 = 0.e0;
    real _t0682 = 0.1e1;
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    vec4 _t0685 = [_t0681, _t0682, _t0683, _t0684];
    real _t0686 = 0.e0;
    real _t0687 = 0.e0;
    real _t0688 = 0.1e1;
    real _t0689 = 0.e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    real _t068D = 0.e0;
    real _t068E = 0.1e1;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    tensor[4,4] _t0690 = [_t0680, _t0685, _t068A, _t068F];
    real _t0691 = 0.e0;
    real _t0692 = 0.1e1;
    real _t0693 = 0.e0;
    real _t0694 = 0.e0;
    vec4 _t0695 = [_t0691, _t0692, _t0693, _t0694];
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    real _t0699 = -0.1e1;
    vec4 _t069A = [_t0696, _t0697, _t0698, _t0699];
    real _t069B = 0.1e1;
    real _t069C = -0.1e1;
    real _t069D = 0.e0;
    real _t069E = -0.5e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = 0.e0;
    real _t06A1 = 0.e0;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.1e1;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    tensor[4,4] _t06A5 = [_t0695, _t069A, _t069F, _t06A4];
    real _t06A6 = 0.e0;
    real _t06A7 = 0.e0;
    real _t06A8 = -0.1e1;
    real _t06A9 = 0.1e1;
    vec4 _t06AA = [_t06A6, _t06A7, _t06A8, _t06A9];
    real _t06AB = 0.e0;
    real _t06AC = 0.1e1;
    real _t06AD = 0.e0;
    real _t06AE = 0.e0;
    vec4 _t06AF = [_t06AB, _t06AC, _t06AD, _t06AE];
    real _t06B0 = 0.1e1;
    real _t06B1 = -0.1e1;
    real _t06B2 = 0.e0;
    real _t06B3 = -0.5e0;
    vec4 _t06B4 = [_t06B0, _t06B1, _t06B2, _t06B3];
    real _t06B5 = 0.e0;
    real _t06B6 = 0.e0;
    real _t06B7 = 0.e0;
    real _t06B8 = 0.1e1;
    vec4 _t06B9 = [_t06B5, _t06B6, _t06B7, _t06B8];
    tensor[4,4] _t06BA = [_t06AA, _t06AF, _t06B4, _t06B9];
    real _t06BB = 0.e0;
    real _t06BC = -0.1e1;
    real _t06BD = 0.e0;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = -0.1e1;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    real _t06C5 = 0.1e1;
    real _t06C6 = -0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = -0.5e0;
    vec4 _t06C9 = [_t06C5, _t06C6, _t06C7, _t06C8];
    real _t06CA = 0.e0;
    real _t06CB = 0.e0;
    real _t06CC = 0.e0;
    real _t06CD = 0.1e1;
    vec4 _t06CE = [_t06CA, _t06CB, _t06CC, _t06CD];
    tensor[4,4] _t06CF = [_t06BF, _t06C4, _t06C9, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = -0.1e1;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = -0.1e1;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.e0;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    real _t06DA = 0.1e1;
    real _t06DB = -0.1e1;
    real _t06DC = 0.e0;
    real _t06DD = -0.5e0;
    vec4 _t06DE = [_t06DA, _t06DB, _t06DC, _t06DD];
    real _t06DF = 0.e0;
    real _t06E0 = 0.e0;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.1e1;
    vec4 _t06E3 = [_t06DF, _t06E0, _t06E1, _t06E2];
    tensor[4,4] _t06E4 = [_t06D4, _t06D9, _t06DE, _t06E3];
    tensor[4,4][6] _t06E5 = {_t067B, _t0690, _t06A5, _t06BA, _t06CF, _t06E4};
    real _t06E6 = 0.1e1;
    real _t06E7 = 0.e0;
    real _t06E8 = 0.1e1;
    real _t06E9 = 0.5e0;
    vec4 _t06EA = [_t06E6, _t06E7, _t06E8, _t06E9];
    real _t06EB = 0.1e1;
    real _t06EC = 0.e0;
    real _t06ED = 0.e0;
    real _t06EE = 0.e0;
    vec4 _t06EF = [_t06EB, _t06EC, _t06ED, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.1e1;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    tensor[4,4] _t06FA = [_t06EA, _t06EF, _t06F4, _t06F9];
    real _t06FB = 0.1e1;
    real _t06FC = 0.e0;
    real _t06FD = 0.1e1;
    real _t06FE = 0.5e0;
    vec4 _t06FF = [_t06FB, _t06FC, _t06FD, _t06FE];
    real _t0700 = 0.1e1;
    real _t0701 = 0.e0;
    real _t0702 = 0.e0;
    real _t0703 = 0.e0;
    vec4 _t0704 = [_t0700, _t0701, _t0702, _t0703];
    real _t0705 = 0.e0;
    real _t0706 = 0.1e1;
    real _t0707 = 0.e0;
    real _t0708 = 0.1e1;
    vec4 _t0709 = [_t0705, _t0706, _t0707, _t0708];
    real _t070A = 0.e0;
    real _t070B = 0.e0;
    real _t070C = 0.e0;
    real _t070D = 0.1e1;
    vec4 _t070E = [_t070A, _t070B, _t070C, _t070D];
    tensor[4,4] _t070F = [_t06FF, _t0704, _t0709, _t070E];
    real _t0710 = 0.1e1;
    real _t0711 = 0.e0;
    real _t0712 = 0.e0;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.1e1;
    real _t0717 = 0.e0;
    real _t0718 = 0.e0;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    real _t071A = 0.e0;
    real _t071B = 0.e0;
    real _t071C = 0.1e1;
    real _t071D = 0.e0;
    vec4 _t071E = [_t071A, _t071B, _t071C, _t071D];
    real _t071F = 0.e0;
    real _t0720 = 0.e0;
    real _t0721 = 0.e0;
    real _t0722 = 0.1e1;
    vec4 _t0723 = [_t071F, _t0720, _t0721, _t0722];
    tensor[4,4] _t0724 = [_t0714, _t0719, _t071E, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = -0.1e1;
    real _t0727 = 0.e0;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.1e1;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.e0;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    real _t072F = 0.e0;
    real _t0730 = 0.e0;
    real _t0731 = 0.1e1;
    real _t0732 = 0.e0;
    vec4 _t0733 = [_t072F, _t0730, _t0731, _t0732];
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    real _t0736 = 0.e0;
    real _t0737 = 0.1e1;
    vec4 _t0738 = [_t0734, _t0735, _t0736, _t0737];
    tensor[4,4] _t0739 = [_t0729, _t072E, _t0733, _t0738];
    real _t073A = -0.1e1;
    real _t073B = 0.e0;
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = -0.1e1;
    real _t0741 = 0.e0;
    real _t0742 = 0.e0;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    real _t0744 = 0.e0;
    real _t0745 = 0.e0;
    real _t0746 = 0.1e1;
    real _t0747 = 0.e0;
    vec4 _t0748 = [_t0744, _t0745, _t0746, _t0747];
    real _t0749 = 0.e0;
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    vec4 _t074D = [_t0749, _t074A, _t074B, _t074C];
    tensor[4,4] _t074E = [_t073E, _t0743, _t0748, _t074D];
    real _t074F = 0.e0;
    real _t0750 = 0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = -0.1e1;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.e0;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    real _t075B = 0.1e1;
    real _t075C = 0.e0;
    vec4 _t075D = [_t0759, _t075A, _t075B, _t075C];
    real _t075E = 0.e0;
    real _t075F = 0.e0;
    real _t0760 = 0.e0;
    real _t0761 = 0.1e1;
    vec4 _t0762 = [_t075E, _t075F, _t0760, _t0761];
    tensor[4,4] _t0763 = [_t0753, _t0758, _t075D, _t0762];
    tensor[4,4][6] _t0764 = {_t06FA, _t070F, _t0724, _t0739, _t074E, _t0763};
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.1e1;
    real _t0768 = 0.5e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.1e1;
    real _t076C = 0.e0;
    real _t076D = 0.e0;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    real _t076F = -0.1e1;
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    vec4 _t0773 = [_t076F, _t0770, _t0771, _t0772];
    real _t0774 = 0.e0;
    real _t0775 = 0.e0;
    real _t0776 = 0.e0;
    real _t0777 = 0.1e1;
    vec4 _t0778 = [_t0774, _t0775, _t0776, _t0777];
    tensor[4,4] _t0779 = [_t0769, _t076E, _t0773, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.1e1;
    real _t077D = 0.5e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.1e1;
    real _t0781 = 0.e0;
    real _t0782 = 0.e0;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    real _t0784 = -0.1e1;
    real _t0785 = 0.e0;
    real _t0786 = 0.e0;
    real _t0787 = 0.1e1;
    vec4 _t0788 = [_t0784, _t0785, _t0786, _t0787];
    real _t0789 = 0.e0;
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = 0.1e1;
    vec4 _t078D = [_t0789, _t078A, _t078B, _t078C];
    tensor[4,4] _t078E = [_t077E, _t0783, _t0788, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = -0.1e1;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.e0;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    real _t0799 = 0.e0;
    real _t079A = 0.e0;
    real _t079B = 0.1e1;
    real _t079C = 0.e0;
    vec4 _t079D = [_t0799, _t079A, _t079B, _t079C];
    real _t079E = 0.e0;
    real _t079F = 0.e0;
    real _t07A0 = 0.e0;
    real _t07A1 = 0.1e1;
    vec4 _t07A2 = [_t079E, _t079F, _t07A0, _t07A1];
    tensor[4,4] _t07A3 = [_t0793, _t0798, _t079D, _t07A2];
    real _t07A4 = 0.1e1;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.1e1;
    real _t07AB = 0.e0;
    real _t07AC = 0.e0;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    real _t07B0 = 0.1e1;
    real _t07B1 = 0.e0;
    vec4 _t07B2 = [_t07AE, _t07AF, _t07B0, _t07B1];
    real _t07B3 = 0.e0;
    real _t07B4 = 0.e0;
    real _t07B5 = 0.e0;
    real _t07B6 = 0.1e1;
    vec4 _t07B7 = [_t07B3, _t07B4, _t07B5, _t07B6];
    tensor[4,4] _t07B8 = [_t07A8, _t07AD, _t07B2, _t07B7];
    real _t07B9 = 0.e0;
    real _t07BA = -0.1e1;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    vec4 _t07BD = [_t07B9, _t07BA, _t07BB, _t07BC];
    real _t07BE = 0.1e1;
    real _t07BF = 0.e0;
    real _t07C0 = 0.e0;
    real _t07C1 = 0.e0;
    vec4 _t07C2 = [_t07BE, _t07BF, _t07C0, _t07C1];
    real _t07C3 = 0.e0;
    real _t07C4 = 0.e0;
    real _t07C5 = 0.1e1;
    real _t07C6 = 0.e0;
    vec4 _t07C7 = [_t07C3, _t07C4, _t07C5, _t07C6];
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    real _t07CA = 0.e0;
    real _t07CB = 0.1e1;
    vec4 _t07CC = [_t07C8, _t07C9, _t07CA, _t07CB];
    tensor[4,4] _t07CD = [_t07BD, _t07C2, _t07C7, _t07CC];
    real _t07CE = -0.1e1;
    real _t07CF = 0.e0;
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    vec4 _t07D2 = [_t07CE, _t07CF, _t07D0, _t07D1];
    real _t07D3 = 0.e0;
    real _t07D4 = -0.1e1;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.e0;
    vec4 _t07D7 = [_t07D3, _t07D4, _t07D5, _t07D6];
    real _t07D8 = 0.e0;
    real _t07D9 = 0.e0;
    real _t07DA = 0.1e1;
    real _t07DB = 0.e0;
    vec4 _t07DC = [_t07D8, _t07D9, _t07DA, _t07DB];
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    real _t07DF = 0.e0;
    real _t07E0 = 0.1e1;
    vec4 _t07E1 = [_t07DD, _t07DE, _t07DF, _t07E0];
    tensor[4,4] _t07E2 = [_t07D2, _t07D7, _t07DC, _t07E1];
    tensor[4,4][6] _t07E3 = {_t0779, _t078E, _t07A3, _t07B8, _t07CD, _t07E2};
    real _t07E4 = -0.1e1;
    real _t07E5 = 0.e0;
    real _t07E6 = 0.1e1;
    real _t07E7 = 0.5e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.1e1;
    real _t07EA = 0.e0;
    real _t07EB = 0.e0;
    real _t07EC = 0.e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.e0;
    real _t07EF = -0.1e1;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    real _t07F3 = 0.e0;
    real _t07F4 = 0.e0;
    real _t07F5 = 0.e0;
    real _t07F6 = 0.1e1;
    vec4 _t07F7 = [_t07F3, _t07F4, _t07F5, _t07F6];
    tensor[4,4] _t07F8 = [_t07E8, _t07ED, _t07F2, _t07F7];
    real _t07F9 = -0.1e1;
    real _t07FA = 0.e0;
    real _t07FB = 0.1e1;
    real _t07FC = 0.5e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.1e1;
    real _t07FF = 0.e0;
    real _t0800 = 0.e0;
    real _t0801 = 0.e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.e0;
    real _t0804 = -0.1e1;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    real _t0808 = 0.e0;
    real _t0809 = 0.e0;
    real _t080A = 0.e0;
    real _t080B = 0.1e1;
    vec4 _t080C = [_t0808, _t0809, _t080A, _t080B];
    tensor[4,4] _t080D = [_t07FD, _t0802, _t0807, _t080C];
    real _t080E = -0.1e1;
    real _t080F = 0.e0;
    real _t0810 = 0.e0;
    real _t0811 = 0.e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.e0;
    real _t0814 = -0.1e1;
    real _t0815 = 0.e0;
    real _t0816 = 0.e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.e0;
    real _t0819 = 0.e0;
    real _t081A = 0.1e1;
    real _t081B = 0.e0;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    real _t081F = 0.e0;
    real _t0820 = 0.1e1;
    vec4 _t0821 = [_t081D, _t081E, _t081F, _t0820];
    tensor[4,4] _t0822 = [_t0812, _t0817, _t081C, _t0821];
    real _t0823 = 0.e0;
    real _t0824 = 0.1e1;
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    vec4 _t0827 = [_t0823, _t0824, _t0825, _t0826];
    real _t0828 = -0.1e1;
    real _t0829 = 0.e0;
    real _t082A = 0.e0;
    real _t082B = 0.e0;
    vec4 _t082C = [_t0828, _t0829, _t082A, _t082B];
    real _t082D = 0.e0;
    real _t082E = 0.e0;
    real _t082F = 0.1e1;
    real _t0830 = 0.e0;
    vec4 _t0831 = [_t082D, _t082E, _t082F, _t0830];
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    real _t0834 = 0.e0;
    real _t0835 = 0.1e1;
    vec4 _t0836 = [_t0832, _t0833, _t0834, _t0835];
    tensor[4,4] _t0837 = [_t0827, _t082C, _t0831, _t0836];
    real _t0838 = 0.1e1;
    real _t0839 = 0.e0;
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    vec4 _t083C = [_t0838, _t0839, _t083A, _t083B];
    real _t083D = 0.e0;
    real _t083E = 0.1e1;
    real _t083F = 0.e0;
    real _t0840 = 0.e0;
    vec4 _t0841 = [_t083D, _t083E, _t083F, _t0840];
    real _t0842 = 0.e0;
    real _t0843 = 0.e0;
    real _t0844 = 0.1e1;
    real _t0845 = 0.e0;
    vec4 _t0846 = [_t0842, _t0843, _t0844, _t0845];
    real _t0847 = 0.e0;
    real _t0848 = 0.e0;
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    vec4 _t084B = [_t0847, _t0848, _t0849, _t084A];
    tensor[4,4] _t084C = [_t083C, _t0841, _t0846, _t084B];
    real _t084D = 0.e0;
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    vec4 _t0851 = [_t084D, _t084E, _t084F, _t0850];
    real _t0852 = 0.1e1;
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.e0;
    vec4 _t0856 = [_t0852, _t0853, _t0854, _t0855];
    real _t0857 = 0.e0;
    real _t0858 = 0.e0;
    real _t0859 = 0.1e1;
    real _t085A = 0.e0;
    vec4 _t085B = [_t0857, _t0858, _t0859, _t085A];
    real _t085C = 0.e0;
    real _t085D = 0.e0;
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    vec4 _t0860 = [_t085C, _t085D, _t085E, _t085F];
    tensor[4,4] _t0861 = [_t0851, _t0856, _t085B, _t0860];
    tensor[4,4][6] _t0862 = {_t07F8, _t080D, _t0822, _t0837, _t084C, _t0861};
    real _t0863 = 0.e0;
    real _t0864 = -0.1e1;
    real _t0865 = 0.1e1;
    real _t0866 = 0.5e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.e0;
    real _t0869 = -0.1e1;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.1e1;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.e0;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    real _t0872 = 0.e0;
    real _t0873 = 0.e0;
    real _t0874 = 0.e0;
    real _t0875 = 0.1e1;
    vec4 _t0876 = [_t0872, _t0873, _t0874, _t0875];
    tensor[4,4] _t0877 = [_t0867, _t086C, _t0871, _t0876];
    real _t0878 = 0.e0;
    real _t0879 = -0.1e1;
    real _t087A = 0.1e1;
    real _t087B = 0.5e0;
    vec4 _t087C = [_t0878, _t0879, _t087A, _t087B];
    real _t087D = 0.e0;
    real _t087E = -0.1e1;
    real _t087F = 0.e0;
    real _t0880 = 0.e0;
    vec4 _t0881 = [_t087D, _t087E, _t087F, _t0880];
    real _t0882 = 0.1e1;
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.1e1;
    vec4 _t0886 = [_t0882, _t0883, _t0884, _t0885];
    real _t0887 = 0.e0;
    real _t0888 = 0.e0;
    real _t0889 = 0.e0;
    real _t088A = 0.1e1;
    vec4 _t088B = [_t0887, _t0888, _t0889, _t088A];
    tensor[4,4] _t088C = [_t087C, _t0881, _t0886, _t088B];
    real _t088D = 0.e0;
    real _t088E = -0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    vec4 _t0891 = [_t088D, _t088E, _t088F, _t0890];
    real _t0892 = 0.1e1;
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.e0;
    vec4 _t0896 = [_t0892, _t0893, _t0894, _t0895];
    real _t0897 = 0.e0;
    real _t0898 = 0.e0;
    real _t0899 = 0.1e1;
    real _t089A = 0.e0;
    vec4 _t089B = [_t0897, _t0898, _t0899, _t089A];
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    real _t089E = 0.e0;
    real _t089F = 0.1e1;
    vec4 _t08A0 = [_t089C, _t089D, _t089E, _t089F];
    tensor[4,4] _t08A1 = [_t0891, _t0896, _t089B, _t08A0];
    real _t08A2 = -0.1e1;
    real _t08A3 = 0.e0;
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    vec4 _t08A6 = [_t08A2, _t08A3, _t08A4, _t08A5];
    real _t08A7 = 0.e0;
    real _t08A8 = -0.1e1;
    real _t08A9 = 0.e0;
    real _t08AA = 0.e0;
    vec4 _t08AB = [_t08A7, _t08A8, _t08A9, _t08AA];
    real _t08AC = 0.e0;
    real _t08AD = 0.e0;
    real _t08AE = 0.1e1;
    real _t08AF = 0.e0;
    vec4 _t08B0 = [_t08AC, _t08AD, _t08AE, _t08AF];
    real _t08B1 = 0.e0;
    real _t08B2 = 0.e0;
    real _t08B3 = 0.e0;
    real _t08B4 = 0.1e1;
    vec4 _t08B5 = [_t08B1, _t08B2, _t08B3, _t08B4];
    tensor[4,4] _t08B6 = [_t08A6, _t08AB, _t08B0, _t08B5];
    real _t08B7 = 0.e0;
    real _t08B8 = 0.1e1;
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    vec4 _t08BB = [_t08B7, _t08B8, _t08B9, _t08BA];
    real _t08BC = -0.1e1;
    real _t08BD = 0.e0;
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    vec4 _t08C0 = [_t08BC, _t08BD, _t08BE, _t08BF];
    real _t08C1 = 0.e0;
    real _t08C2 = 0.e0;
    real _t08C3 = 0.1e1;
    real _t08C4 = 0.e0;
    vec4 _t08C5 = [_t08C1, _t08C2, _t08C3, _t08C4];
    real _t08C6 = 0.e0;
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    real _t08C9 = 0.1e1;
    vec4 _t08CA = [_t08C6, _t08C7, _t08C8, _t08C9];
    tensor[4,4] _t08CB = [_t08BB, _t08C0, _t08C5, _t08CA];
    real _t08CC = 0.1e1;
    real _t08CD = 0.e0;
    real _t08CE = 0.e0;
    real _t08CF = 0.e0;
    vec4 _t08D0 = [_t08CC, _t08CD, _t08CE, _t08CF];
    real _t08D1 = 0.e0;
    real _t08D2 = 0.1e1;
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    vec4 _t08D5 = [_t08D1, _t08D2, _t08D3, _t08D4];
    real _t08D6 = 0.e0;
    real _t08D7 = 0.e0;
    real _t08D8 = 0.1e1;
    real _t08D9 = 0.e0;
    vec4 _t08DA = [_t08D6, _t08D7, _t08D8, _t08D9];
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    real _t08DE = 0.1e1;
    vec4 _t08DF = [_t08DB, _t08DC, _t08DD, _t08DE];
    tensor[4,4] _t08E0 = [_t08D0, _t08D5, _t08DA, _t08DF];
    tensor[4,4][6] _t08E1 = {_t0877, _t088C, _t08A1, _t08B6, _t08CB, _t08E0};
    tensor[4,4][6][6] _t08E2 = {_t0666, _t06E5, _t0764, _t07E3, _t0862, _t08E1};
    real _t08E3 = time05D4[1];
    int _t08E4 = prim $r2i01B7 (_t08E3);
    tensor[4,4][6] _t08E5 = prim $sub01C0<tensor[4,4][6]; %6> (_t08E2, _t08E4);
    real _t08E6 = time05D4[1];
    int _t08E7 = prim $r2i01B7 (_t08E6);
    int[2] _t08E8 = func nextCell405D8 (_t08E7, cellId05D1, mesh05D0);
    int _t08E9 = 1;
    int _t08EA = prim $sub01C0<int; %2> (_t08E8, _t08E9);
    tensor[4,4] _t08EB = prim $sub01C0<tensor[4,4]; %6> (_t08E5, _t08EA);
    string _t08EC = "\n";
    print (_t05DD, _t05DF, _t05E0, _t05E5, _t05E6, _t05E7, _t08EB, _t08EC);
    real _t08ED = time05D4[1];
    int _t08EE = prim $r2i01B7 (_t08ED);
    int[2] _t08EF = func nextCell405D8 (_t08EE, cellId05D1, mesh05D0);
    int _t08F0 = 0;
    int _t08F1 = prim $sub01C0<int; %2> (_t08EF, _t08F0);
    real _t08F2 = 0.1e1;
    real _t08F3 = 0.e0;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    vec4 _t08F6 = [_t08F2, _t08F3, _t08F4, _t08F5];
    real _t08F7 = 0.e0;
    real _t08F8 = 0.1e1;
    real _t08F9 = 0.e0;
    real _t08FA = 0.e0;
    vec4 _t08FB = [_t08F7, _t08F8, _t08F9, _t08FA];
    real _t08FC = 0.e0;
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    vec4 _t0900 = [_t08FC, _t08FD, _t08FE, _t08FF];
    real _t0901 = 0.e0;
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.1e1;
    vec4 _t0905 = [_t0901, _t0902, _t0903, _t0904];
    tensor[4,4] _t0906 = [_t08F6, _t08FB, _t0900, _t0905];
    real _t0907 = 0.1e1;
    real _t0908 = 0.e0;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    vec4 _t090B = [_t0907, _t0908, _t0909, _t090A];
    real _t090C = 0.e0;
    real _t090D = 0.1e1;
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    vec4 _t0910 = [_t090C, _t090D, _t090E, _t090F];
    real _t0911 = 0.e0;
    real _t0912 = 0.e0;
    real _t0913 = 0.1e1;
    real _t0914 = 0.1e1;
    vec4 _t0915 = [_t0911, _t0912, _t0913, _t0914];
    real _t0916 = 0.e0;
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.1e1;
    vec4 _t091A = [_t0916, _t0917, _t0918, _t0919];
    tensor[4,4] _t091B = [_t090B, _t0910, _t0915, _t091A];
    real _t091C = 0.e0;
    real _t091D = 0.1e1;
    real _t091E = 0.e0;
    real _t091F = 0.e0;
    vec4 _t0920 = [_t091C, _t091D, _t091E, _t091F];
    real _t0921 = 0.e0;
    real _t0922 = 0.e0;
    real _t0923 = 0.1e1;
    real _t0924 = 0.e0;
    vec4 _t0925 = [_t0921, _t0922, _t0923, _t0924];
    real _t0926 = 0.1e1;
    real _t0927 = -0.1e1;
    real _t0928 = 0.e0;
    real _t0929 = -0.5e0;
    vec4 _t092A = [_t0926, _t0927, _t0928, _t0929];
    real _t092B = 0.e0;
    real _t092C = 0.e0;
    real _t092D = 0.e0;
    real _t092E = 0.1e1;
    vec4 _t092F = [_t092B, _t092C, _t092D, _t092E];
    tensor[4,4] _t0930 = [_t0920, _t0925, _t092A, _t092F];
    real _t0931 = 0.e0;
    real _t0932 = 0.e0;
    real _t0933 = -0.1e1;
    real _t0934 = 0.e0;
    vec4 _t0935 = [_t0931, _t0932, _t0933, _t0934];
    real _t0936 = 0.e0;
    real _t0937 = 0.1e1;
    real _t0938 = 0.e0;
    real _t0939 = 0.e0;
    vec4 _t093A = [_t0936, _t0937, _t0938, _t0939];
    real _t093B = 0.1e1;
    real _t093C = -0.1e1;
    real _t093D = 0.e0;
    real _t093E = -0.5e0;
    vec4 _t093F = [_t093B, _t093C, _t093D, _t093E];
    real _t0940 = 0.e0;
    real _t0941 = 0.e0;
    real _t0942 = 0.e0;
    real _t0943 = 0.1e1;
    vec4 _t0944 = [_t0940, _t0941, _t0942, _t0943];
    tensor[4,4] _t0945 = [_t0935, _t093A, _t093F, _t0944];
    real _t0946 = 0.e0;
    real _t0947 = -0.1e1;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    vec4 _t094A = [_t0946, _t0947, _t0948, _t0949];
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    real _t094D = -0.1e1;
    real _t094E = 0.e0;
    vec4 _t094F = [_t094B, _t094C, _t094D, _t094E];
    real _t0950 = 0.1e1;
    real _t0951 = -0.1e1;
    real _t0952 = 0.e0;
    real _t0953 = -0.5e0;
    vec4 _t0954 = [_t0950, _t0951, _t0952, _t0953];
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    real _t0957 = 0.e0;
    real _t0958 = 0.1e1;
    vec4 _t0959 = [_t0955, _t0956, _t0957, _t0958];
    tensor[4,4] _t095A = [_t094A, _t094F, _t0954, _t0959];
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    real _t095D = 0.1e1;
    real _t095E = 0.e0;
    vec4 _t095F = [_t095B, _t095C, _t095D, _t095E];
    real _t0960 = 0.e0;
    real _t0961 = -0.1e1;
    real _t0962 = 0.e0;
    real _t0963 = 0.e0;
    vec4 _t0964 = [_t0960, _t0961, _t0962, _t0963];
    real _t0965 = 0.1e1;
    real _t0966 = -0.1e1;
    real _t0967 = 0.e0;
    real _t0968 = -0.5e0;
    vec4 _t0969 = [_t0965, _t0966, _t0967, _t0968];
    real _t096A = 0.e0;
    real _t096B = 0.e0;
    real _t096C = 0.e0;
    real _t096D = 0.1e1;
    vec4 _t096E = [_t096A, _t096B, _t096C, _t096D];
    tensor[4,4] _t096F = [_t095F, _t0964, _t0969, _t096E];
    tensor[4,4][6] _t0970 = {_t0906, _t091B, _t0930, _t0945, _t095A, _t096F};
    real _t0971 = 0.1e1;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.e0;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    real _t0976 = 0.e0;
    real _t0977 = 0.1e1;
    real _t0978 = 0.e0;
    real _t0979 = 0.e0;
    vec4 _t097A = [_t0976, _t0977, _t0978, _t0979];
    real _t097B = 0.e0;
    real _t097C = 0.e0;
    real _t097D = 0.1e1;
    real _t097E = -0.1e1;
    vec4 _t097F = [_t097B, _t097C, _t097D, _t097E];
    real _t0980 = 0.e0;
    real _t0981 = 0.e0;
    real _t0982 = 0.e0;
    real _t0983 = 0.1e1;
    vec4 _t0984 = [_t0980, _t0981, _t0982, _t0983];
    tensor[4,4] _t0985 = [_t0975, _t097A, _t097F, _t0984];
    real _t0986 = 0.1e1;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.e0;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    real _t098B = 0.e0;
    real _t098C = 0.1e1;
    real _t098D = 0.e0;
    real _t098E = 0.e0;
    vec4 _t098F = [_t098B, _t098C, _t098D, _t098E];
    real _t0990 = 0.e0;
    real _t0991 = 0.e0;
    real _t0992 = 0.1e1;
    real _t0993 = 0.e0;
    vec4 _t0994 = [_t0990, _t0991, _t0992, _t0993];
    real _t0995 = 0.e0;
    real _t0996 = 0.e0;
    real _t0997 = 0.e0;
    real _t0998 = 0.1e1;
    vec4 _t0999 = [_t0995, _t0996, _t0997, _t0998];
    tensor[4,4] _t099A = [_t098A, _t098F, _t0994, _t0999];
    real _t099B = 0.e0;
    real _t099C = 0.1e1;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    vec4 _t099F = [_t099B, _t099C, _t099D, _t099E];
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    real _t09A2 = 0.1e1;
    real _t09A3 = -0.1e1;
    vec4 _t09A4 = [_t09A0, _t09A1, _t09A2, _t09A3];
    real _t09A5 = 0.1e1;
    real _t09A6 = -0.1e1;
    real _t09A7 = 0.e0;
    real _t09A8 = -0.5e0;
    vec4 _t09A9 = [_t09A5, _t09A6, _t09A7, _t09A8];
    real _t09AA = 0.e0;
    real _t09AB = 0.e0;
    real _t09AC = 0.e0;
    real _t09AD = 0.1e1;
    vec4 _t09AE = [_t09AA, _t09AB, _t09AC, _t09AD];
    tensor[4,4] _t09AF = [_t099F, _t09A4, _t09A9, _t09AE];
    real _t09B0 = 0.e0;
    real _t09B1 = 0.e0;
    real _t09B2 = -0.1e1;
    real _t09B3 = 0.1e1;
    vec4 _t09B4 = [_t09B0, _t09B1, _t09B2, _t09B3];
    real _t09B5 = 0.e0;
    real _t09B6 = 0.1e1;
    real _t09B7 = 0.e0;
    real _t09B8 = 0.e0;
    vec4 _t09B9 = [_t09B5, _t09B6, _t09B7, _t09B8];
    real _t09BA = 0.1e1;
    real _t09BB = -0.1e1;
    real _t09BC = 0.e0;
    real _t09BD = -0.5e0;
    vec4 _t09BE = [_t09BA, _t09BB, _t09BC, _t09BD];
    real _t09BF = 0.e0;
    real _t09C0 = 0.e0;
    real _t09C1 = 0.e0;
    real _t09C2 = 0.1e1;
    vec4 _t09C3 = [_t09BF, _t09C0, _t09C1, _t09C2];
    tensor[4,4] _t09C4 = [_t09B4, _t09B9, _t09BE, _t09C3];
    real _t09C5 = 0.e0;
    real _t09C6 = -0.1e1;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    vec4 _t09C9 = [_t09C5, _t09C6, _t09C7, _t09C8];
    real _t09CA = 0.e0;
    real _t09CB = 0.e0;
    real _t09CC = -0.1e1;
    real _t09CD = 0.1e1;
    vec4 _t09CE = [_t09CA, _t09CB, _t09CC, _t09CD];
    real _t09CF = 0.1e1;
    real _t09D0 = -0.1e1;
    real _t09D1 = 0.e0;
    real _t09D2 = -0.5e0;
    vec4 _t09D3 = [_t09CF, _t09D0, _t09D1, _t09D2];
    real _t09D4 = 0.e0;
    real _t09D5 = 0.e0;
    real _t09D6 = 0.e0;
    real _t09D7 = 0.1e1;
    vec4 _t09D8 = [_t09D4, _t09D5, _t09D6, _t09D7];
    tensor[4,4] _t09D9 = [_t09C9, _t09CE, _t09D3, _t09D8];
    real _t09DA = 0.e0;
    real _t09DB = 0.e0;
    real _t09DC = 0.1e1;
    real _t09DD = -0.1e1;
    vec4 _t09DE = [_t09DA, _t09DB, _t09DC, _t09DD];
    real _t09DF = 0.e0;
    real _t09E0 = -0.1e1;
    real _t09E1 = 0.e0;
    real _t09E2 = 0.e0;
    vec4 _t09E3 = [_t09DF, _t09E0, _t09E1, _t09E2];
    real _t09E4 = 0.1e1;
    real _t09E5 = -0.1e1;
    real _t09E6 = 0.e0;
    real _t09E7 = -0.5e0;
    vec4 _t09E8 = [_t09E4, _t09E5, _t09E6, _t09E7];
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    real _t09EB = 0.e0;
    real _t09EC = 0.1e1;
    vec4 _t09ED = [_t09E9, _t09EA, _t09EB, _t09EC];
    tensor[4,4] _t09EE = [_t09DE, _t09E3, _t09E8, _t09ED];
    tensor[4,4][6] _t09EF = {_t0985, _t099A, _t09AF, _t09C4, _t09D9, _t09EE};
    real _t09F0 = 0.1e1;
    real _t09F1 = 0.e0;
    real _t09F2 = 0.1e1;
    real _t09F3 = 0.5e0;
    vec4 _t09F4 = [_t09F0, _t09F1, _t09F2, _t09F3];
    real _t09F5 = 0.1e1;
    real _t09F6 = 0.e0;
    real _t09F7 = 0.e0;
    real _t09F8 = 0.e0;
    vec4 _t09F9 = [_t09F5, _t09F6, _t09F7, _t09F8];
    real _t09FA = 0.e0;
    real _t09FB = 0.1e1;
    real _t09FC = 0.e0;
    real _t09FD = 0.e0;
    vec4 _t09FE = [_t09FA, _t09FB, _t09FC, _t09FD];
    real _t09FF = 0.e0;
    real _t0A00 = 0.e0;
    real _t0A01 = 0.e0;
    real _t0A02 = 0.1e1;
    vec4 _t0A03 = [_t09FF, _t0A00, _t0A01, _t0A02];
    tensor[4,4] _t0A04 = [_t09F4, _t09F9, _t09FE, _t0A03];
    real _t0A05 = 0.1e1;
    real _t0A06 = 0.e0;
    real _t0A07 = 0.1e1;
    real _t0A08 = 0.5e0;
    vec4 _t0A09 = [_t0A05, _t0A06, _t0A07, _t0A08];
    real _t0A0A = 0.1e1;
    real _t0A0B = 0.e0;
    real _t0A0C = 0.e0;
    real _t0A0D = 0.e0;
    vec4 _t0A0E = [_t0A0A, _t0A0B, _t0A0C, _t0A0D];
    real _t0A0F = 0.e0;
    real _t0A10 = 0.1e1;
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    vec4 _t0A13 = [_t0A0F, _t0A10, _t0A11, _t0A12];
    real _t0A14 = 0.e0;
    real _t0A15 = 0.e0;
    real _t0A16 = 0.e0;
    real _t0A17 = 0.1e1;
    vec4 _t0A18 = [_t0A14, _t0A15, _t0A16, _t0A17];
    tensor[4,4] _t0A19 = [_t0A09, _t0A0E, _t0A13, _t0A18];
    real _t0A1A = 0.1e1;
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    vec4 _t0A1E = [_t0A1A, _t0A1B, _t0A1C, _t0A1D];
    real _t0A1F = 0.e0;
    real _t0A20 = 0.1e1;
    real _t0A21 = 0.e0;
    real _t0A22 = 0.e0;
    vec4 _t0A23 = [_t0A1F, _t0A20, _t0A21, _t0A22];
    real _t0A24 = 0.e0;
    real _t0A25 = 0.e0;
    real _t0A26 = 0.1e1;
    real _t0A27 = 0.e0;
    vec4 _t0A28 = [_t0A24, _t0A25, _t0A26, _t0A27];
    real _t0A29 = 0.e0;
    real _t0A2A = 0.e0;
    real _t0A2B = 0.e0;
    real _t0A2C = 0.1e1;
    vec4 _t0A2D = [_t0A29, _t0A2A, _t0A2B, _t0A2C];
    tensor[4,4] _t0A2E = [_t0A1E, _t0A23, _t0A28, _t0A2D];
    real _t0A2F = 0.e0;
    real _t0A30 = -0.1e1;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    vec4 _t0A33 = [_t0A2F, _t0A30, _t0A31, _t0A32];
    real _t0A34 = 0.1e1;
    real _t0A35 = 0.e0;
    real _t0A36 = 0.e0;
    real _t0A37 = 0.e0;
    vec4 _t0A38 = [_t0A34, _t0A35, _t0A36, _t0A37];
    real _t0A39 = 0.e0;
    real _t0A3A = 0.e0;
    real _t0A3B = 0.1e1;
    real _t0A3C = 0.e0;
    vec4 _t0A3D = [_t0A39, _t0A3A, _t0A3B, _t0A3C];
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    real _t0A40 = 0.e0;
    real _t0A41 = 0.1e1;
    vec4 _t0A42 = [_t0A3E, _t0A3F, _t0A40, _t0A41];
    tensor[4,4] _t0A43 = [_t0A33, _t0A38, _t0A3D, _t0A42];
    real _t0A44 = -0.1e1;
    real _t0A45 = 0.e0;
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    vec4 _t0A48 = [_t0A44, _t0A45, _t0A46, _t0A47];
    real _t0A49 = 0.e0;
    real _t0A4A = -0.1e1;
    real _t0A4B = 0.e0;
    real _t0A4C = 0.e0;
    vec4 _t0A4D = [_t0A49, _t0A4A, _t0A4B, _t0A4C];
    real _t0A4E = 0.e0;
    real _t0A4F = 0.e0;
    real _t0A50 = 0.1e1;
    real _t0A51 = 0.e0;
    vec4 _t0A52 = [_t0A4E, _t0A4F, _t0A50, _t0A51];
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    real _t0A55 = 0.e0;
    real _t0A56 = 0.1e1;
    vec4 _t0A57 = [_t0A53, _t0A54, _t0A55, _t0A56];
    tensor[4,4] _t0A58 = [_t0A48, _t0A4D, _t0A52, _t0A57];
    real _t0A59 = 0.e0;
    real _t0A5A = 0.1e1;
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    vec4 _t0A5D = [_t0A59, _t0A5A, _t0A5B, _t0A5C];
    real _t0A5E = -0.1e1;
    real _t0A5F = 0.e0;
    real _t0A60 = 0.e0;
    real _t0A61 = 0.e0;
    vec4 _t0A62 = [_t0A5E, _t0A5F, _t0A60, _t0A61];
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    real _t0A65 = 0.1e1;
    real _t0A66 = 0.e0;
    vec4 _t0A67 = [_t0A63, _t0A64, _t0A65, _t0A66];
    real _t0A68 = 0.e0;
    real _t0A69 = 0.e0;
    real _t0A6A = 0.e0;
    real _t0A6B = 0.1e1;
    vec4 _t0A6C = [_t0A68, _t0A69, _t0A6A, _t0A6B];
    tensor[4,4] _t0A6D = [_t0A5D, _t0A62, _t0A67, _t0A6C];
    tensor[4,4][6] _t0A6E = {_t0A04, _t0A19, _t0A2E, _t0A43, _t0A58, _t0A6D};
    real _t0A6F = 0.e0;
    real _t0A70 = 0.1e1;
    real _t0A71 = 0.1e1;
    real _t0A72 = 0.5e0;
    vec4 _t0A73 = [_t0A6F, _t0A70, _t0A71, _t0A72];
    real _t0A74 = 0.e0;
    real _t0A75 = 0.1e1;
    real _t0A76 = 0.e0;
    real _t0A77 = 0.e0;
    vec4 _t0A78 = [_t0A74, _t0A75, _t0A76, _t0A77];
    real _t0A79 = -0.1e1;
    real _t0A7A = 0.e0;
    real _t0A7B = 0.e0;
    real _t0A7C = 0.e0;
    vec4 _t0A7D = [_t0A79, _t0A7A, _t0A7B, _t0A7C];
    real _t0A7E = 0.e0;
    real _t0A7F = 0.e0;
    real _t0A80 = 0.e0;
    real _t0A81 = 0.1e1;
    vec4 _t0A82 = [_t0A7E, _t0A7F, _t0A80, _t0A81];
    tensor[4,4] _t0A83 = [_t0A73, _t0A78, _t0A7D, _t0A82];
    real _t0A84 = 0.e0;
    real _t0A85 = 0.1e1;
    real _t0A86 = 0.1e1;
    real _t0A87 = 0.5e0;
    vec4 _t0A88 = [_t0A84, _t0A85, _t0A86, _t0A87];
    real _t0A89 = 0.e0;
    real _t0A8A = 0.1e1;
    real _t0A8B = 0.e0;
    real _t0A8C = 0.e0;
    vec4 _t0A8D = [_t0A89, _t0A8A, _t0A8B, _t0A8C];
    real _t0A8E = -0.1e1;
    real _t0A8F = 0.e0;
    real _t0A90 = 0.e0;
    real _t0A91 = 0.1e1;
    vec4 _t0A92 = [_t0A8E, _t0A8F, _t0A90, _t0A91];
    real _t0A93 = 0.e0;
    real _t0A94 = 0.e0;
    real _t0A95 = 0.e0;
    real _t0A96 = 0.1e1;
    vec4 _t0A97 = [_t0A93, _t0A94, _t0A95, _t0A96];
    tensor[4,4] _t0A98 = [_t0A88, _t0A8D, _t0A92, _t0A97];
    real _t0A99 = 0.e0;
    real _t0A9A = 0.1e1;
    real _t0A9B = 0.e0;
    real _t0A9C = 0.e0;
    vec4 _t0A9D = [_t0A99, _t0A9A, _t0A9B, _t0A9C];
    real _t0A9E = -0.1e1;
    real _t0A9F = 0.e0;
    real _t0AA0 = 0.e0;
    real _t0AA1 = 0.e0;
    vec4 _t0AA2 = [_t0A9E, _t0A9F, _t0AA0, _t0AA1];
    real _t0AA3 = 0.e0;
    real _t0AA4 = 0.e0;
    real _t0AA5 = 0.1e1;
    real _t0AA6 = 0.e0;
    vec4 _t0AA7 = [_t0AA3, _t0AA4, _t0AA5, _t0AA6];
    real _t0AA8 = 0.e0;
    real _t0AA9 = 0.e0;
    real _t0AAA = 0.e0;
    real _t0AAB = 0.1e1;
    vec4 _t0AAC = [_t0AA8, _t0AA9, _t0AAA, _t0AAB];
    tensor[4,4] _t0AAD = [_t0A9D, _t0AA2, _t0AA7, _t0AAC];
    real _t0AAE = 0.1e1;
    real _t0AAF = 0.e0;
    real _t0AB0 = 0.e0;
    real _t0AB1 = 0.e0;
    vec4 _t0AB2 = [_t0AAE, _t0AAF, _t0AB0, _t0AB1];
    real _t0AB3 = 0.e0;
    real _t0AB4 = 0.1e1;
    real _t0AB5 = 0.e0;
    real _t0AB6 = 0.e0;
    vec4 _t0AB7 = [_t0AB3, _t0AB4, _t0AB5, _t0AB6];
    real _t0AB8 = 0.e0;
    real _t0AB9 = 0.e0;
    real _t0ABA = 0.1e1;
    real _t0ABB = 0.e0;
    vec4 _t0ABC = [_t0AB8, _t0AB9, _t0ABA, _t0ABB];
    real _t0ABD = 0.e0;
    real _t0ABE = 0.e0;
    real _t0ABF = 0.e0;
    real _t0AC0 = 0.1e1;
    vec4 _t0AC1 = [_t0ABD, _t0ABE, _t0ABF, _t0AC0];
    tensor[4,4] _t0AC2 = [_t0AB2, _t0AB7, _t0ABC, _t0AC1];
    real _t0AC3 = 0.e0;
    real _t0AC4 = -0.1e1;
    real _t0AC5 = 0.e0;
    real _t0AC6 = 0.e0;
    vec4 _t0AC7 = [_t0AC3, _t0AC4, _t0AC5, _t0AC6];
    real _t0AC8 = 0.1e1;
    real _t0AC9 = 0.e0;
    real _t0ACA = 0.e0;
    real _t0ACB = 0.e0;
    vec4 _t0ACC = [_t0AC8, _t0AC9, _t0ACA, _t0ACB];
    real _t0ACD = 0.e0;
    real _t0ACE = 0.e0;
    real _t0ACF = 0.1e1;
    real _t0AD0 = 0.e0;
    vec4 _t0AD1 = [_t0ACD, _t0ACE, _t0ACF, _t0AD0];
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.e0;
    real _t0AD4 = 0.e0;
    real _t0AD5 = 0.1e1;
    vec4 _t0AD6 = [_t0AD2, _t0AD3, _t0AD4, _t0AD5];
    tensor[4,4] _t0AD7 = [_t0AC7, _t0ACC, _t0AD1, _t0AD6];
    real _t0AD8 = -0.1e1;
    real _t0AD9 = 0.e0;
    real _t0ADA = 0.e0;
    real _t0ADB = 0.e0;
    vec4 _t0ADC = [_t0AD8, _t0AD9, _t0ADA, _t0ADB];
    real _t0ADD = 0.e0;
    real _t0ADE = -0.1e1;
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.e0;
    vec4 _t0AE1 = [_t0ADD, _t0ADE, _t0ADF, _t0AE0];
    real _t0AE2 = 0.e0;
    real _t0AE3 = 0.e0;
    real _t0AE4 = 0.1e1;
    real _t0AE5 = 0.e0;
    vec4 _t0AE6 = [_t0AE2, _t0AE3, _t0AE4, _t0AE5];
    real _t0AE7 = 0.e0;
    real _t0AE8 = 0.e0;
    real _t0AE9 = 0.e0;
    real _t0AEA = 0.1e1;
    vec4 _t0AEB = [_t0AE7, _t0AE8, _t0AE9, _t0AEA];
    tensor[4,4] _t0AEC = [_t0ADC, _t0AE1, _t0AE6, _t0AEB];
    tensor[4,4][6] _t0AED = {_t0A83, _t0A98, _t0AAD, _t0AC2, _t0AD7, _t0AEC};
    real _t0AEE = -0.1e1;
    real _t0AEF = 0.e0;
    real _t0AF0 = 0.1e1;
    real _t0AF1 = 0.5e0;
    vec4 _t0AF2 = [_t0AEE, _t0AEF, _t0AF0, _t0AF1];
    real _t0AF3 = -0.1e1;
    real _t0AF4 = 0.e0;
    real _t0AF5 = 0.e0;
    real _t0AF6 = 0.e0;
    vec4 _t0AF7 = [_t0AF3, _t0AF4, _t0AF5, _t0AF6];
    real _t0AF8 = 0.e0;
    real _t0AF9 = -0.1e1;
    real _t0AFA = 0.e0;
    real _t0AFB = 0.e0;
    vec4 _t0AFC = [_t0AF8, _t0AF9, _t0AFA, _t0AFB];
    real _t0AFD = 0.e0;
    real _t0AFE = 0.e0;
    real _t0AFF = 0.e0;
    real _t0B00 = 0.1e1;
    vec4 _t0B01 = [_t0AFD, _t0AFE, _t0AFF, _t0B00];
    tensor[4,4] _t0B02 = [_t0AF2, _t0AF7, _t0AFC, _t0B01];
    real _t0B03 = -0.1e1;
    real _t0B04 = 0.e0;
    real _t0B05 = 0.1e1;
    real _t0B06 = 0.5e0;
    vec4 _t0B07 = [_t0B03, _t0B04, _t0B05, _t0B06];
    real _t0B08 = -0.1e1;
    real _t0B09 = 0.e0;
    real _t0B0A = 0.e0;
    real _t0B0B = 0.e0;
    vec4 _t0B0C = [_t0B08, _t0B09, _t0B0A, _t0B0B];
    real _t0B0D = 0.e0;
    real _t0B0E = -0.1e1;
    real _t0B0F = 0.e0;
    real _t0B10 = 0.1e1;
    vec4 _t0B11 = [_t0B0D, _t0B0E, _t0B0F, _t0B10];
    real _t0B12 = 0.e0;
    real _t0B13 = 0.e0;
    real _t0B14 = 0.e0;
    real _t0B15 = 0.1e1;
    vec4 _t0B16 = [_t0B12, _t0B13, _t0B14, _t0B15];
    tensor[4,4] _t0B17 = [_t0B07, _t0B0C, _t0B11, _t0B16];
    real _t0B18 = -0.1e1;
    real _t0B19 = 0.e0;
    real _t0B1A = 0.e0;
    real _t0B1B = 0.e0;
    vec4 _t0B1C = [_t0B18, _t0B19, _t0B1A, _t0B1B];
    real _t0B1D = 0.e0;
    real _t0B1E = -0.1e1;
    real _t0B1F = 0.e0;
    real _t0B20 = 0.e0;
    vec4 _t0B21 = [_t0B1D, _t0B1E, _t0B1F, _t0B20];
    real _t0B22 = 0.e0;
    real _t0B23 = 0.e0;
    real _t0B24 = 0.1e1;
    real _t0B25 = 0.e0;
    vec4 _t0B26 = [_t0B22, _t0B23, _t0B24, _t0B25];
    real _t0B27 = 0.e0;
    real _t0B28 = 0.e0;
    real _t0B29 = 0.e0;
    real _t0B2A = 0.1e1;
    vec4 _t0B2B = [_t0B27, _t0B28, _t0B29, _t0B2A];
    tensor[4,4] _t0B2C = [_t0B1C, _t0B21, _t0B26, _t0B2B];
    real _t0B2D = 0.e0;
    real _t0B2E = 0.1e1;
    real _t0B2F = 0.e0;
    real _t0B30 = 0.e0;
    vec4 _t0B31 = [_t0B2D, _t0B2E, _t0B2F, _t0B30];
    real _t0B32 = -0.1e1;
    real _t0B33 = 0.e0;
    real _t0B34 = 0.e0;
    real _t0B35 = 0.e0;
    vec4 _t0B36 = [_t0B32, _t0B33, _t0B34, _t0B35];
    real _t0B37 = 0.e0;
    real _t0B38 = 0.e0;
    real _t0B39 = 0.1e1;
    real _t0B3A = 0.e0;
    vec4 _t0B3B = [_t0B37, _t0B38, _t0B39, _t0B3A];
    real _t0B3C = 0.e0;
    real _t0B3D = 0.e0;
    real _t0B3E = 0.e0;
    real _t0B3F = 0.1e1;
    vec4 _t0B40 = [_t0B3C, _t0B3D, _t0B3E, _t0B3F];
    tensor[4,4] _t0B41 = [_t0B31, _t0B36, _t0B3B, _t0B40];
    real _t0B42 = 0.1e1;
    real _t0B43 = 0.e0;
    real _t0B44 = 0.e0;
    real _t0B45 = 0.e0;
    vec4 _t0B46 = [_t0B42, _t0B43, _t0B44, _t0B45];
    real _t0B47 = 0.e0;
    real _t0B48 = 0.1e1;
    real _t0B49 = 0.e0;
    real _t0B4A = 0.e0;
    vec4 _t0B4B = [_t0B47, _t0B48, _t0B49, _t0B4A];
    real _t0B4C = 0.e0;
    real _t0B4D = 0.e0;
    real _t0B4E = 0.1e1;
    real _t0B4F = 0.e0;
    vec4 _t0B50 = [_t0B4C, _t0B4D, _t0B4E, _t0B4F];
    real _t0B51 = 0.e0;
    real _t0B52 = 0.e0;
    real _t0B53 = 0.e0;
    real _t0B54 = 0.1e1;
    vec4 _t0B55 = [_t0B51, _t0B52, _t0B53, _t0B54];
    tensor[4,4] _t0B56 = [_t0B46, _t0B4B, _t0B50, _t0B55];
    real _t0B57 = 0.e0;
    real _t0B58 = -0.1e1;
    real _t0B59 = 0.e0;
    real _t0B5A = 0.e0;
    vec4 _t0B5B = [_t0B57, _t0B58, _t0B59, _t0B5A];
    real _t0B5C = 0.1e1;
    real _t0B5D = 0.e0;
    real _t0B5E = 0.e0;
    real _t0B5F = 0.e0;
    vec4 _t0B60 = [_t0B5C, _t0B5D, _t0B5E, _t0B5F];
    real _t0B61 = 0.e0;
    real _t0B62 = 0.e0;
    real _t0B63 = 0.1e1;
    real _t0B64 = 0.e0;
    vec4 _t0B65 = [_t0B61, _t0B62, _t0B63, _t0B64];
    real _t0B66 = 0.e0;
    real _t0B67 = 0.e0;
    real _t0B68 = 0.e0;
    real _t0B69 = 0.1e1;
    vec4 _t0B6A = [_t0B66, _t0B67, _t0B68, _t0B69];
    tensor[4,4] _t0B6B = [_t0B5B, _t0B60, _t0B65, _t0B6A];
    tensor[4,4][6] _t0B6C = {_t0B02, _t0B17, _t0B2C, _t0B41, _t0B56, _t0B6B};
    real _t0B6D = 0.e0;
    real _t0B6E = -0.1e1;
    real _t0B6F = 0.1e1;
    real _t0B70 = 0.5e0;
    vec4 _t0B71 = [_t0B6D, _t0B6E, _t0B6F, _t0B70];
    real _t0B72 = 0.e0;
    real _t0B73 = -0.1e1;
    real _t0B74 = 0.e0;
    real _t0B75 = 0.e0;
    vec4 _t0B76 = [_t0B72, _t0B73, _t0B74, _t0B75];
    real _t0B77 = 0.1e1;
    real _t0B78 = 0.e0;
    real _t0B79 = 0.e0;
    real _t0B7A = 0.e0;
    vec4 _t0B7B = [_t0B77, _t0B78, _t0B79, _t0B7A];
    real _t0B7C = 0.e0;
    real _t0B7D = 0.e0;
    real _t0B7E = 0.e0;
    real _t0B7F = 0.1e1;
    vec4 _t0B80 = [_t0B7C, _t0B7D, _t0B7E, _t0B7F];
    tensor[4,4] _t0B81 = [_t0B71, _t0B76, _t0B7B, _t0B80];
    real _t0B82 = 0.e0;
    real _t0B83 = -0.1e1;
    real _t0B84 = 0.1e1;
    real _t0B85 = 0.5e0;
    vec4 _t0B86 = [_t0B82, _t0B83, _t0B84, _t0B85];
    real _t0B87 = 0.e0;
    real _t0B88 = -0.1e1;
    real _t0B89 = 0.e0;
    real _t0B8A = 0.e0;
    vec4 _t0B8B = [_t0B87, _t0B88, _t0B89, _t0B8A];
    real _t0B8C = 0.1e1;
    real _t0B8D = 0.e0;
    real _t0B8E = 0.e0;
    real _t0B8F = 0.1e1;
    vec4 _t0B90 = [_t0B8C, _t0B8D, _t0B8E, _t0B8F];
    real _t0B91 = 0.e0;
    real _t0B92 = 0.e0;
    real _t0B93 = 0.e0;
    real _t0B94 = 0.1e1;
    vec4 _t0B95 = [_t0B91, _t0B92, _t0B93, _t0B94];
    tensor[4,4] _t0B96 = [_t0B86, _t0B8B, _t0B90, _t0B95];
    real _t0B97 = 0.e0;
    real _t0B98 = -0.1e1;
    real _t0B99 = 0.e0;
    real _t0B9A = 0.e0;
    vec4 _t0B9B = [_t0B97, _t0B98, _t0B99, _t0B9A];
    real _t0B9C = 0.1e1;
    real _t0B9D = 0.e0;
    real _t0B9E = 0.e0;
    real _t0B9F = 0.e0;
    vec4 _t0BA0 = [_t0B9C, _t0B9D, _t0B9E, _t0B9F];
    real _t0BA1 = 0.e0;
    real _t0BA2 = 0.e0;
    real _t0BA3 = 0.1e1;
    real _t0BA4 = 0.e0;
    vec4 _t0BA5 = [_t0BA1, _t0BA2, _t0BA3, _t0BA4];
    real _t0BA6 = 0.e0;
    real _t0BA7 = 0.e0;
    real _t0BA8 = 0.e0;
    real _t0BA9 = 0.1e1;
    vec4 _t0BAA = [_t0BA6, _t0BA7, _t0BA8, _t0BA9];
    tensor[4,4] _t0BAB = [_t0B9B, _t0BA0, _t0BA5, _t0BAA];
    real _t0BAC = -0.1e1;
    real _t0BAD = 0.e0;
    real _t0BAE = 0.e0;
    real _t0BAF = 0.e0;
    vec4 _t0BB0 = [_t0BAC, _t0BAD, _t0BAE, _t0BAF];
    real _t0BB1 = 0.e0;
    real _t0BB2 = -0.1e1;
    real _t0BB3 = 0.e0;
    real _t0BB4 = 0.e0;
    vec4 _t0BB5 = [_t0BB1, _t0BB2, _t0BB3, _t0BB4];
    real _t0BB6 = 0.e0;
    real _t0BB7 = 0.e0;
    real _t0BB8 = 0.1e1;
    real _t0BB9 = 0.e0;
    vec4 _t0BBA = [_t0BB6, _t0BB7, _t0BB8, _t0BB9];
    real _t0BBB = 0.e0;
    real _t0BBC = 0.e0;
    real _t0BBD = 0.e0;
    real _t0BBE = 0.1e1;
    vec4 _t0BBF = [_t0BBB, _t0BBC, _t0BBD, _t0BBE];
    tensor[4,4] _t0BC0 = [_t0BB0, _t0BB5, _t0BBA, _t0BBF];
    real _t0BC1 = 0.e0;
    real _t0BC2 = 0.1e1;
    real _t0BC3 = 0.e0;
    real _t0BC4 = 0.e0;
    vec4 _t0BC5 = [_t0BC1, _t0BC2, _t0BC3, _t0BC4];
    real _t0BC6 = -0.1e1;
    real _t0BC7 = 0.e0;
    real _t0BC8 = 0.e0;
    real _t0BC9 = 0.e0;
    vec4 _t0BCA = [_t0BC6, _t0BC7, _t0BC8, _t0BC9];
    real _t0BCB = 0.e0;
    real _t0BCC = 0.e0;
    real _t0BCD = 0.1e1;
    real _t0BCE = 0.e0;
    vec4 _t0BCF = [_t0BCB, _t0BCC, _t0BCD, _t0BCE];
    real _t0BD0 = 0.e0;
    real _t0BD1 = 0.e0;
    real _t0BD2 = 0.e0;
    real _t0BD3 = 0.1e1;
    vec4 _t0BD4 = [_t0BD0, _t0BD1, _t0BD2, _t0BD3];
    tensor[4,4] _t0BD5 = [_t0BC5, _t0BCA, _t0BCF, _t0BD4];
    real _t0BD6 = 0.1e1;
    real _t0BD7 = 0.e0;
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    vec4 _t0BDA = [_t0BD6, _t0BD7, _t0BD8, _t0BD9];
    real _t0BDB = 0.e0;
    real _t0BDC = 0.1e1;
    real _t0BDD = 0.e0;
    real _t0BDE = 0.e0;
    vec4 _t0BDF = [_t0BDB, _t0BDC, _t0BDD, _t0BDE];
    real _t0BE0 = 0.e0;
    real _t0BE1 = 0.e0;
    real _t0BE2 = 0.1e1;
    real _t0BE3 = 0.e0;
    vec4 _t0BE4 = [_t0BE0, _t0BE1, _t0BE2, _t0BE3];
    real _t0BE5 = 0.e0;
    real _t0BE6 = 0.e0;
    real _t0BE7 = 0.e0;
    real _t0BE8 = 0.1e1;
    vec4 _t0BE9 = [_t0BE5, _t0BE6, _t0BE7, _t0BE8];
    tensor[4,4] _t0BEA = [_t0BDA, _t0BDF, _t0BE4, _t0BE9];
    tensor[4,4][6] _t0BEB = {_t0B81, _t0B96, _t0BAB, _t0BC0, _t0BD5, _t0BEA};
    tensor[4,4][6][6] _t0BEC = {_t0970, _t09EF, _t0A6E, _t0AED, _t0B6C, _t0BEB};
    real _t0BED = time05D4[1];
    int _t0BEE = prim $r2i01B7 (_t0BED);
    tensor[4,4][6] _t0BEF = prim $sub01C0<tensor[4,4][6]; %6> (_t0BEC, _t0BEE);
    real _t0BF0 = time05D4[1];
    int _t0BF1 = prim $r2i01B7 (_t0BF0);
    int[2] _t0BF2 = func nextCell405D8 (_t0BF1, cellId05D1, mesh05D0);
    int _t0BF3 = 1;
    int _t0BF4 = prim $sub01C0<int; %2> (_t0BF2, _t0BF3);
    tensor[4,4] _t0BF5 = prim $sub01C0<tensor[4,4]; %6> (_t0BEF, _t0BF4);
    real _t0BF6 = time05D4[0];
    vec3 _t0BF7 = prim *0036<$[3]> (_t0BF6, dPos05D3);
    vec3 _t0BF8 = prim +0017<$[3]> (_t0BF7, refPos05D2);
    real _t0BF9 = _t0BF8[0];
    real _t0BFA = time05D4[0];
    vec3 _t0BFB = prim *0036<$[3]> (_t0BFA, dPos05D3);
    vec3 _t0BFC = prim +0017<$[3]> (_t0BFB, refPos05D2);
    real _t0BFD = _t0BFC[1];
    real _t0BFE = time05D4[0];
    vec3 _t0BFF = prim *0036<$[3]> (_t0BFE, dPos05D3);
    vec3 _t0C00 = prim +0017<$[3]> (_t0BFF, refPos05D2);
    real _t0C01 = _t0C00[2];
    real _t0C02 = 0.1e1;
    vec4 _t0C03 = [_t0BF9, _t0BFD, _t0C01, _t0C02];
    vec4 _t0C04 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0BF5, _t0C03);
    real _t0C05 = _t0C04[0];
    real _t0C06 = 0.1e1;
    real _t0C07 = 0.e0;
    real _t0C08 = 0.e0;
    real _t0C09 = 0.e0;
    vec4 _t0C0A = [_t0C06, _t0C07, _t0C08, _t0C09];
    real _t0C0B = 0.e0;
    real _t0C0C = 0.1e1;
    real _t0C0D = 0.e0;
    real _t0C0E = 0.e0;
    vec4 _t0C0F = [_t0C0B, _t0C0C, _t0C0D, _t0C0E];
    real _t0C10 = 0.e0;
    real _t0C11 = 0.e0;
    real _t0C12 = 0.1e1;
    real _t0C13 = 0.e0;
    vec4 _t0C14 = [_t0C10, _t0C11, _t0C12, _t0C13];
    real _t0C15 = 0.e0;
    real _t0C16 = 0.e0;
    real _t0C17 = 0.e0;
    real _t0C18 = 0.1e1;
    vec4 _t0C19 = [_t0C15, _t0C16, _t0C17, _t0C18];
    tensor[4,4] _t0C1A = [_t0C0A, _t0C0F, _t0C14, _t0C19];
    real _t0C1B = 0.1e1;
    real _t0C1C = 0.e0;
    real _t0C1D = 0.e0;
    real _t0C1E = 0.e0;
    vec4 _t0C1F = [_t0C1B, _t0C1C, _t0C1D, _t0C1E];
    real _t0C20 = 0.e0;
    real _t0C21 = 0.1e1;
    real _t0C22 = 0.e0;
    real _t0C23 = 0.e0;
    vec4 _t0C24 = [_t0C20, _t0C21, _t0C22, _t0C23];
    real _t0C25 = 0.e0;
    real _t0C26 = 0.e0;
    real _t0C27 = 0.1e1;
    real _t0C28 = 0.1e1;
    vec4 _t0C29 = [_t0C25, _t0C26, _t0C27, _t0C28];
    real _t0C2A = 0.e0;
    real _t0C2B = 0.e0;
    real _t0C2C = 0.e0;
    real _t0C2D = 0.1e1;
    vec4 _t0C2E = [_t0C2A, _t0C2B, _t0C2C, _t0C2D];
    tensor[4,4] _t0C2F = [_t0C1F, _t0C24, _t0C29, _t0C2E];
    real _t0C30 = 0.e0;
    real _t0C31 = 0.1e1;
    real _t0C32 = 0.e0;
    real _t0C33 = 0.e0;
    vec4 _t0C34 = [_t0C30, _t0C31, _t0C32, _t0C33];
    real _t0C35 = 0.e0;
    real _t0C36 = 0.e0;
    real _t0C37 = 0.1e1;
    real _t0C38 = 0.e0;
    vec4 _t0C39 = [_t0C35, _t0C36, _t0C37, _t0C38];
    real _t0C3A = 0.1e1;
    real _t0C3B = -0.1e1;
    real _t0C3C = 0.e0;
    real _t0C3D = -0.5e0;
    vec4 _t0C3E = [_t0C3A, _t0C3B, _t0C3C, _t0C3D];
    real _t0C3F = 0.e0;
    real _t0C40 = 0.e0;
    real _t0C41 = 0.e0;
    real _t0C42 = 0.1e1;
    vec4 _t0C43 = [_t0C3F, _t0C40, _t0C41, _t0C42];
    tensor[4,4] _t0C44 = [_t0C34, _t0C39, _t0C3E, _t0C43];
    real _t0C45 = 0.e0;
    real _t0C46 = 0.e0;
    real _t0C47 = -0.1e1;
    real _t0C48 = 0.e0;
    vec4 _t0C49 = [_t0C45, _t0C46, _t0C47, _t0C48];
    real _t0C4A = 0.e0;
    real _t0C4B = 0.1e1;
    real _t0C4C = 0.e0;
    real _t0C4D = 0.e0;
    vec4 _t0C4E = [_t0C4A, _t0C4B, _t0C4C, _t0C4D];
    real _t0C4F = 0.1e1;
    real _t0C50 = -0.1e1;
    real _t0C51 = 0.e0;
    real _t0C52 = -0.5e0;
    vec4 _t0C53 = [_t0C4F, _t0C50, _t0C51, _t0C52];
    real _t0C54 = 0.e0;
    real _t0C55 = 0.e0;
    real _t0C56 = 0.e0;
    real _t0C57 = 0.1e1;
    vec4 _t0C58 = [_t0C54, _t0C55, _t0C56, _t0C57];
    tensor[4,4] _t0C59 = [_t0C49, _t0C4E, _t0C53, _t0C58];
    real _t0C5A = 0.e0;
    real _t0C5B = -0.1e1;
    real _t0C5C = 0.e0;
    real _t0C5D = 0.e0;
    vec4 _t0C5E = [_t0C5A, _t0C5B, _t0C5C, _t0C5D];
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    real _t0C61 = -0.1e1;
    real _t0C62 = 0.e0;
    vec4 _t0C63 = [_t0C5F, _t0C60, _t0C61, _t0C62];
    real _t0C64 = 0.1e1;
    real _t0C65 = -0.1e1;
    real _t0C66 = 0.e0;
    real _t0C67 = -0.5e0;
    vec4 _t0C68 = [_t0C64, _t0C65, _t0C66, _t0C67];
    real _t0C69 = 0.e0;
    real _t0C6A = 0.e0;
    real _t0C6B = 0.e0;
    real _t0C6C = 0.1e1;
    vec4 _t0C6D = [_t0C69, _t0C6A, _t0C6B, _t0C6C];
    tensor[4,4] _t0C6E = [_t0C5E, _t0C63, _t0C68, _t0C6D];
    real _t0C6F = 0.e0;
    real _t0C70 = 0.e0;
    real _t0C71 = 0.1e1;
    real _t0C72 = 0.e0;
    vec4 _t0C73 = [_t0C6F, _t0C70, _t0C71, _t0C72];
    real _t0C74 = 0.e0;
    real _t0C75 = -0.1e1;
    real _t0C76 = 0.e0;
    real _t0C77 = 0.e0;
    vec4 _t0C78 = [_t0C74, _t0C75, _t0C76, _t0C77];
    real _t0C79 = 0.1e1;
    real _t0C7A = -0.1e1;
    real _t0C7B = 0.e0;
    real _t0C7C = -0.5e0;
    vec4 _t0C7D = [_t0C79, _t0C7A, _t0C7B, _t0C7C];
    real _t0C7E = 0.e0;
    real _t0C7F = 0.e0;
    real _t0C80 = 0.e0;
    real _t0C81 = 0.1e1;
    vec4 _t0C82 = [_t0C7E, _t0C7F, _t0C80, _t0C81];
    tensor[4,4] _t0C83 = [_t0C73, _t0C78, _t0C7D, _t0C82];
    tensor[4,4][6] _t0C84 = {_t0C1A, _t0C2F, _t0C44, _t0C59, _t0C6E, _t0C83};
    real _t0C85 = 0.1e1;
    real _t0C86 = 0.e0;
    real _t0C87 = 0.e0;
    real _t0C88 = 0.e0;
    vec4 _t0C89 = [_t0C85, _t0C86, _t0C87, _t0C88];
    real _t0C8A = 0.e0;
    real _t0C8B = 0.1e1;
    real _t0C8C = 0.e0;
    real _t0C8D = 0.e0;
    vec4 _t0C8E = [_t0C8A, _t0C8B, _t0C8C, _t0C8D];
    real _t0C8F = 0.e0;
    real _t0C90 = 0.e0;
    real _t0C91 = 0.1e1;
    real _t0C92 = -0.1e1;
    vec4 _t0C93 = [_t0C8F, _t0C90, _t0C91, _t0C92];
    real _t0C94 = 0.e0;
    real _t0C95 = 0.e0;
    real _t0C96 = 0.e0;
    real _t0C97 = 0.1e1;
    vec4 _t0C98 = [_t0C94, _t0C95, _t0C96, _t0C97];
    tensor[4,4] _t0C99 = [_t0C89, _t0C8E, _t0C93, _t0C98];
    real _t0C9A = 0.1e1;
    real _t0C9B = 0.e0;
    real _t0C9C = 0.e0;
    real _t0C9D = 0.e0;
    vec4 _t0C9E = [_t0C9A, _t0C9B, _t0C9C, _t0C9D];
    real _t0C9F = 0.e0;
    real _t0CA0 = 0.1e1;
    real _t0CA1 = 0.e0;
    real _t0CA2 = 0.e0;
    vec4 _t0CA3 = [_t0C9F, _t0CA0, _t0CA1, _t0CA2];
    real _t0CA4 = 0.e0;
    real _t0CA5 = 0.e0;
    real _t0CA6 = 0.1e1;
    real _t0CA7 = 0.e0;
    vec4 _t0CA8 = [_t0CA4, _t0CA5, _t0CA6, _t0CA7];
    real _t0CA9 = 0.e0;
    real _t0CAA = 0.e0;
    real _t0CAB = 0.e0;
    real _t0CAC = 0.1e1;
    vec4 _t0CAD = [_t0CA9, _t0CAA, _t0CAB, _t0CAC];
    tensor[4,4] _t0CAE = [_t0C9E, _t0CA3, _t0CA8, _t0CAD];
    real _t0CAF = 0.e0;
    real _t0CB0 = 0.1e1;
    real _t0CB1 = 0.e0;
    real _t0CB2 = 0.e0;
    vec4 _t0CB3 = [_t0CAF, _t0CB0, _t0CB1, _t0CB2];
    real _t0CB4 = 0.e0;
    real _t0CB5 = 0.e0;
    real _t0CB6 = 0.1e1;
    real _t0CB7 = -0.1e1;
    vec4 _t0CB8 = [_t0CB4, _t0CB5, _t0CB6, _t0CB7];
    real _t0CB9 = 0.1e1;
    real _t0CBA = -0.1e1;
    real _t0CBB = 0.e0;
    real _t0CBC = -0.5e0;
    vec4 _t0CBD = [_t0CB9, _t0CBA, _t0CBB, _t0CBC];
    real _t0CBE = 0.e0;
    real _t0CBF = 0.e0;
    real _t0CC0 = 0.e0;
    real _t0CC1 = 0.1e1;
    vec4 _t0CC2 = [_t0CBE, _t0CBF, _t0CC0, _t0CC1];
    tensor[4,4] _t0CC3 = [_t0CB3, _t0CB8, _t0CBD, _t0CC2];
    real _t0CC4 = 0.e0;
    real _t0CC5 = 0.e0;
    real _t0CC6 = -0.1e1;
    real _t0CC7 = 0.1e1;
    vec4 _t0CC8 = [_t0CC4, _t0CC5, _t0CC6, _t0CC7];
    real _t0CC9 = 0.e0;
    real _t0CCA = 0.1e1;
    real _t0CCB = 0.e0;
    real _t0CCC = 0.e0;
    vec4 _t0CCD = [_t0CC9, _t0CCA, _t0CCB, _t0CCC];
    real _t0CCE = 0.1e1;
    real _t0CCF = -0.1e1;
    real _t0CD0 = 0.e0;
    real _t0CD1 = -0.5e0;
    vec4 _t0CD2 = [_t0CCE, _t0CCF, _t0CD0, _t0CD1];
    real _t0CD3 = 0.e0;
    real _t0CD4 = 0.e0;
    real _t0CD5 = 0.e0;
    real _t0CD6 = 0.1e1;
    vec4 _t0CD7 = [_t0CD3, _t0CD4, _t0CD5, _t0CD6];
    tensor[4,4] _t0CD8 = [_t0CC8, _t0CCD, _t0CD2, _t0CD7];
    real _t0CD9 = 0.e0;
    real _t0CDA = -0.1e1;
    real _t0CDB = 0.e0;
    real _t0CDC = 0.e0;
    vec4 _t0CDD = [_t0CD9, _t0CDA, _t0CDB, _t0CDC];
    real _t0CDE = 0.e0;
    real _t0CDF = 0.e0;
    real _t0CE0 = -0.1e1;
    real _t0CE1 = 0.1e1;
    vec4 _t0CE2 = [_t0CDE, _t0CDF, _t0CE0, _t0CE1];
    real _t0CE3 = 0.1e1;
    real _t0CE4 = -0.1e1;
    real _t0CE5 = 0.e0;
    real _t0CE6 = -0.5e0;
    vec4 _t0CE7 = [_t0CE3, _t0CE4, _t0CE5, _t0CE6];
    real _t0CE8 = 0.e0;
    real _t0CE9 = 0.e0;
    real _t0CEA = 0.e0;
    real _t0CEB = 0.1e1;
    vec4 _t0CEC = [_t0CE8, _t0CE9, _t0CEA, _t0CEB];
    tensor[4,4] _t0CED = [_t0CDD, _t0CE2, _t0CE7, _t0CEC];
    real _t0CEE = 0.e0;
    real _t0CEF = 0.e0;
    real _t0CF0 = 0.1e1;
    real _t0CF1 = -0.1e1;
    vec4 _t0CF2 = [_t0CEE, _t0CEF, _t0CF0, _t0CF1];
    real _t0CF3 = 0.e0;
    real _t0CF4 = -0.1e1;
    real _t0CF5 = 0.e0;
    real _t0CF6 = 0.e0;
    vec4 _t0CF7 = [_t0CF3, _t0CF4, _t0CF5, _t0CF6];
    real _t0CF8 = 0.1e1;
    real _t0CF9 = -0.1e1;
    real _t0CFA = 0.e0;
    real _t0CFB = -0.5e0;
    vec4 _t0CFC = [_t0CF8, _t0CF9, _t0CFA, _t0CFB];
    real _t0CFD = 0.e0;
    real _t0CFE = 0.e0;
    real _t0CFF = 0.e0;
    real _t0D00 = 0.1e1;
    vec4 _t0D01 = [_t0CFD, _t0CFE, _t0CFF, _t0D00];
    tensor[4,4] _t0D02 = [_t0CF2, _t0CF7, _t0CFC, _t0D01];
    tensor[4,4][6] _t0D03 = {_t0C99, _t0CAE, _t0CC3, _t0CD8, _t0CED, _t0D02};
    real _t0D04 = 0.1e1;
    real _t0D05 = 0.e0;
    real _t0D06 = 0.1e1;
    real _t0D07 = 0.5e0;
    vec4 _t0D08 = [_t0D04, _t0D05, _t0D06, _t0D07];
    real _t0D09 = 0.1e1;
    real _t0D0A = 0.e0;
    real _t0D0B = 0.e0;
    real _t0D0C = 0.e0;
    vec4 _t0D0D = [_t0D09, _t0D0A, _t0D0B, _t0D0C];
    real _t0D0E = 0.e0;
    real _t0D0F = 0.1e1;
    real _t0D10 = 0.e0;
    real _t0D11 = 0.e0;
    vec4 _t0D12 = [_t0D0E, _t0D0F, _t0D10, _t0D11];
    real _t0D13 = 0.e0;
    real _t0D14 = 0.e0;
    real _t0D15 = 0.e0;
    real _t0D16 = 0.1e1;
    vec4 _t0D17 = [_t0D13, _t0D14, _t0D15, _t0D16];
    tensor[4,4] _t0D18 = [_t0D08, _t0D0D, _t0D12, _t0D17];
    real _t0D19 = 0.1e1;
    real _t0D1A = 0.e0;
    real _t0D1B = 0.1e1;
    real _t0D1C = 0.5e0;
    vec4 _t0D1D = [_t0D19, _t0D1A, _t0D1B, _t0D1C];
    real _t0D1E = 0.1e1;
    real _t0D1F = 0.e0;
    real _t0D20 = 0.e0;
    real _t0D21 = 0.e0;
    vec4 _t0D22 = [_t0D1E, _t0D1F, _t0D20, _t0D21];
    real _t0D23 = 0.e0;
    real _t0D24 = 0.1e1;
    real _t0D25 = 0.e0;
    real _t0D26 = 0.1e1;
    vec4 _t0D27 = [_t0D23, _t0D24, _t0D25, _t0D26];
    real _t0D28 = 0.e0;
    real _t0D29 = 0.e0;
    real _t0D2A = 0.e0;
    real _t0D2B = 0.1e1;
    vec4 _t0D2C = [_t0D28, _t0D29, _t0D2A, _t0D2B];
    tensor[4,4] _t0D2D = [_t0D1D, _t0D22, _t0D27, _t0D2C];
    real _t0D2E = 0.1e1;
    real _t0D2F = 0.e0;
    real _t0D30 = 0.e0;
    real _t0D31 = 0.e0;
    vec4 _t0D32 = [_t0D2E, _t0D2F, _t0D30, _t0D31];
    real _t0D33 = 0.e0;
    real _t0D34 = 0.1e1;
    real _t0D35 = 0.e0;
    real _t0D36 = 0.e0;
    vec4 _t0D37 = [_t0D33, _t0D34, _t0D35, _t0D36];
    real _t0D38 = 0.e0;
    real _t0D39 = 0.e0;
    real _t0D3A = 0.1e1;
    real _t0D3B = 0.e0;
    vec4 _t0D3C = [_t0D38, _t0D39, _t0D3A, _t0D3B];
    real _t0D3D = 0.e0;
    real _t0D3E = 0.e0;
    real _t0D3F = 0.e0;
    real _t0D40 = 0.1e1;
    vec4 _t0D41 = [_t0D3D, _t0D3E, _t0D3F, _t0D40];
    tensor[4,4] _t0D42 = [_t0D32, _t0D37, _t0D3C, _t0D41];
    real _t0D43 = 0.e0;
    real _t0D44 = -0.1e1;
    real _t0D45 = 0.e0;
    real _t0D46 = 0.e0;
    vec4 _t0D47 = [_t0D43, _t0D44, _t0D45, _t0D46];
    real _t0D48 = 0.1e1;
    real _t0D49 = 0.e0;
    real _t0D4A = 0.e0;
    real _t0D4B = 0.e0;
    vec4 _t0D4C = [_t0D48, _t0D49, _t0D4A, _t0D4B];
    real _t0D4D = 0.e0;
    real _t0D4E = 0.e0;
    real _t0D4F = 0.1e1;
    real _t0D50 = 0.e0;
    vec4 _t0D51 = [_t0D4D, _t0D4E, _t0D4F, _t0D50];
    real _t0D52 = 0.e0;
    real _t0D53 = 0.e0;
    real _t0D54 = 0.e0;
    real _t0D55 = 0.1e1;
    vec4 _t0D56 = [_t0D52, _t0D53, _t0D54, _t0D55];
    tensor[4,4] _t0D57 = [_t0D47, _t0D4C, _t0D51, _t0D56];
    real _t0D58 = -0.1e1;
    real _t0D59 = 0.e0;
    real _t0D5A = 0.e0;
    real _t0D5B = 0.e0;
    vec4 _t0D5C = [_t0D58, _t0D59, _t0D5A, _t0D5B];
    real _t0D5D = 0.e0;
    real _t0D5E = -0.1e1;
    real _t0D5F = 0.e0;
    real _t0D60 = 0.e0;
    vec4 _t0D61 = [_t0D5D, _t0D5E, _t0D5F, _t0D60];
    real _t0D62 = 0.e0;
    real _t0D63 = 0.e0;
    real _t0D64 = 0.1e1;
    real _t0D65 = 0.e0;
    vec4 _t0D66 = [_t0D62, _t0D63, _t0D64, _t0D65];
    real _t0D67 = 0.e0;
    real _t0D68 = 0.e0;
    real _t0D69 = 0.e0;
    real _t0D6A = 0.1e1;
    vec4 _t0D6B = [_t0D67, _t0D68, _t0D69, _t0D6A];
    tensor[4,4] _t0D6C = [_t0D5C, _t0D61, _t0D66, _t0D6B];
    real _t0D6D = 0.e0;
    real _t0D6E = 0.1e1;
    real _t0D6F = 0.e0;
    real _t0D70 = 0.e0;
    vec4 _t0D71 = [_t0D6D, _t0D6E, _t0D6F, _t0D70];
    real _t0D72 = -0.1e1;
    real _t0D73 = 0.e0;
    real _t0D74 = 0.e0;
    real _t0D75 = 0.e0;
    vec4 _t0D76 = [_t0D72, _t0D73, _t0D74, _t0D75];
    real _t0D77 = 0.e0;
    real _t0D78 = 0.e0;
    real _t0D79 = 0.1e1;
    real _t0D7A = 0.e0;
    vec4 _t0D7B = [_t0D77, _t0D78, _t0D79, _t0D7A];
    real _t0D7C = 0.e0;
    real _t0D7D = 0.e0;
    real _t0D7E = 0.e0;
    real _t0D7F = 0.1e1;
    vec4 _t0D80 = [_t0D7C, _t0D7D, _t0D7E, _t0D7F];
    tensor[4,4] _t0D81 = [_t0D71, _t0D76, _t0D7B, _t0D80];
    tensor[4,4][6] _t0D82 = {_t0D18, _t0D2D, _t0D42, _t0D57, _t0D6C, _t0D81};
    real _t0D83 = 0.e0;
    real _t0D84 = 0.1e1;
    real _t0D85 = 0.1e1;
    real _t0D86 = 0.5e0;
    vec4 _t0D87 = [_t0D83, _t0D84, _t0D85, _t0D86];
    real _t0D88 = 0.e0;
    real _t0D89 = 0.1e1;
    real _t0D8A = 0.e0;
    real _t0D8B = 0.e0;
    vec4 _t0D8C = [_t0D88, _t0D89, _t0D8A, _t0D8B];
    real _t0D8D = -0.1e1;
    real _t0D8E = 0.e0;
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    vec4 _t0D91 = [_t0D8D, _t0D8E, _t0D8F, _t0D90];
    real _t0D92 = 0.e0;
    real _t0D93 = 0.e0;
    real _t0D94 = 0.e0;
    real _t0D95 = 0.1e1;
    vec4 _t0D96 = [_t0D92, _t0D93, _t0D94, _t0D95];
    tensor[4,4] _t0D97 = [_t0D87, _t0D8C, _t0D91, _t0D96];
    real _t0D98 = 0.e0;
    real _t0D99 = 0.1e1;
    real _t0D9A = 0.1e1;
    real _t0D9B = 0.5e0;
    vec4 _t0D9C = [_t0D98, _t0D99, _t0D9A, _t0D9B];
    real _t0D9D = 0.e0;
    real _t0D9E = 0.1e1;
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.e0;
    vec4 _t0DA1 = [_t0D9D, _t0D9E, _t0D9F, _t0DA0];
    real _t0DA2 = -0.1e1;
    real _t0DA3 = 0.e0;
    real _t0DA4 = 0.e0;
    real _t0DA5 = 0.1e1;
    vec4 _t0DA6 = [_t0DA2, _t0DA3, _t0DA4, _t0DA5];
    real _t0DA7 = 0.e0;
    real _t0DA8 = 0.e0;
    real _t0DA9 = 0.e0;
    real _t0DAA = 0.1e1;
    vec4 _t0DAB = [_t0DA7, _t0DA8, _t0DA9, _t0DAA];
    tensor[4,4] _t0DAC = [_t0D9C, _t0DA1, _t0DA6, _t0DAB];
    real _t0DAD = 0.e0;
    real _t0DAE = 0.1e1;
    real _t0DAF = 0.e0;
    real _t0DB0 = 0.e0;
    vec4 _t0DB1 = [_t0DAD, _t0DAE, _t0DAF, _t0DB0];
    real _t0DB2 = -0.1e1;
    real _t0DB3 = 0.e0;
    real _t0DB4 = 0.e0;
    real _t0DB5 = 0.e0;
    vec4 _t0DB6 = [_t0DB2, _t0DB3, _t0DB4, _t0DB5];
    real _t0DB7 = 0.e0;
    real _t0DB8 = 0.e0;
    real _t0DB9 = 0.1e1;
    real _t0DBA = 0.e0;
    vec4 _t0DBB = [_t0DB7, _t0DB8, _t0DB9, _t0DBA];
    real _t0DBC = 0.e0;
    real _t0DBD = 0.e0;
    real _t0DBE = 0.e0;
    real _t0DBF = 0.1e1;
    vec4 _t0DC0 = [_t0DBC, _t0DBD, _t0DBE, _t0DBF];
    tensor[4,4] _t0DC1 = [_t0DB1, _t0DB6, _t0DBB, _t0DC0];
    real _t0DC2 = 0.1e1;
    real _t0DC3 = 0.e0;
    real _t0DC4 = 0.e0;
    real _t0DC5 = 0.e0;
    vec4 _t0DC6 = [_t0DC2, _t0DC3, _t0DC4, _t0DC5];
    real _t0DC7 = 0.e0;
    real _t0DC8 = 0.1e1;
    real _t0DC9 = 0.e0;
    real _t0DCA = 0.e0;
    vec4 _t0DCB = [_t0DC7, _t0DC8, _t0DC9, _t0DCA];
    real _t0DCC = 0.e0;
    real _t0DCD = 0.e0;
    real _t0DCE = 0.1e1;
    real _t0DCF = 0.e0;
    vec4 _t0DD0 = [_t0DCC, _t0DCD, _t0DCE, _t0DCF];
    real _t0DD1 = 0.e0;
    real _t0DD2 = 0.e0;
    real _t0DD3 = 0.e0;
    real _t0DD4 = 0.1e1;
    vec4 _t0DD5 = [_t0DD1, _t0DD2, _t0DD3, _t0DD4];
    tensor[4,4] _t0DD6 = [_t0DC6, _t0DCB, _t0DD0, _t0DD5];
    real _t0DD7 = 0.e0;
    real _t0DD8 = -0.1e1;
    real _t0DD9 = 0.e0;
    real _t0DDA = 0.e0;
    vec4 _t0DDB = [_t0DD7, _t0DD8, _t0DD9, _t0DDA];
    real _t0DDC = 0.1e1;
    real _t0DDD = 0.e0;
    real _t0DDE = 0.e0;
    real _t0DDF = 0.e0;
    vec4 _t0DE0 = [_t0DDC, _t0DDD, _t0DDE, _t0DDF];
    real _t0DE1 = 0.e0;
    real _t0DE2 = 0.e0;
    real _t0DE3 = 0.1e1;
    real _t0DE4 = 0.e0;
    vec4 _t0DE5 = [_t0DE1, _t0DE2, _t0DE3, _t0DE4];
    real _t0DE6 = 0.e0;
    real _t0DE7 = 0.e0;
    real _t0DE8 = 0.e0;
    real _t0DE9 = 0.1e1;
    vec4 _t0DEA = [_t0DE6, _t0DE7, _t0DE8, _t0DE9];
    tensor[4,4] _t0DEB = [_t0DDB, _t0DE0, _t0DE5, _t0DEA];
    real _t0DEC = -0.1e1;
    real _t0DED = 0.e0;
    real _t0DEE = 0.e0;
    real _t0DEF = 0.e0;
    vec4 _t0DF0 = [_t0DEC, _t0DED, _t0DEE, _t0DEF];
    real _t0DF1 = 0.e0;
    real _t0DF2 = -0.1e1;
    real _t0DF3 = 0.e0;
    real _t0DF4 = 0.e0;
    vec4 _t0DF5 = [_t0DF1, _t0DF2, _t0DF3, _t0DF4];
    real _t0DF6 = 0.e0;
    real _t0DF7 = 0.e0;
    real _t0DF8 = 0.1e1;
    real _t0DF9 = 0.e0;
    vec4 _t0DFA = [_t0DF6, _t0DF7, _t0DF8, _t0DF9];
    real _t0DFB = 0.e0;
    real _t0DFC = 0.e0;
    real _t0DFD = 0.e0;
    real _t0DFE = 0.1e1;
    vec4 _t0DFF = [_t0DFB, _t0DFC, _t0DFD, _t0DFE];
    tensor[4,4] _t0E00 = [_t0DF0, _t0DF5, _t0DFA, _t0DFF];
    tensor[4,4][6] _t0E01 = {_t0D97, _t0DAC, _t0DC1, _t0DD6, _t0DEB, _t0E00};
    real _t0E02 = -0.1e1;
    real _t0E03 = 0.e0;
    real _t0E04 = 0.1e1;
    real _t0E05 = 0.5e0;
    vec4 _t0E06 = [_t0E02, _t0E03, _t0E04, _t0E05];
    real _t0E07 = -0.1e1;
    real _t0E08 = 0.e0;
    real _t0E09 = 0.e0;
    real _t0E0A = 0.e0;
    vec4 _t0E0B = [_t0E07, _t0E08, _t0E09, _t0E0A];
    real _t0E0C = 0.e0;
    real _t0E0D = -0.1e1;
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    vec4 _t0E10 = [_t0E0C, _t0E0D, _t0E0E, _t0E0F];
    real _t0E11 = 0.e0;
    real _t0E12 = 0.e0;
    real _t0E13 = 0.e0;
    real _t0E14 = 0.1e1;
    vec4 _t0E15 = [_t0E11, _t0E12, _t0E13, _t0E14];
    tensor[4,4] _t0E16 = [_t0E06, _t0E0B, _t0E10, _t0E15];
    real _t0E17 = -0.1e1;
    real _t0E18 = 0.e0;
    real _t0E19 = 0.1e1;
    real _t0E1A = 0.5e0;
    vec4 _t0E1B = [_t0E17, _t0E18, _t0E19, _t0E1A];
    real _t0E1C = -0.1e1;
    real _t0E1D = 0.e0;
    real _t0E1E = 0.e0;
    real _t0E1F = 0.e0;
    vec4 _t0E20 = [_t0E1C, _t0E1D, _t0E1E, _t0E1F];
    real _t0E21 = 0.e0;
    real _t0E22 = -0.1e1;
    real _t0E23 = 0.e0;
    real _t0E24 = 0.1e1;
    vec4 _t0E25 = [_t0E21, _t0E22, _t0E23, _t0E24];
    real _t0E26 = 0.e0;
    real _t0E27 = 0.e0;
    real _t0E28 = 0.e0;
    real _t0E29 = 0.1e1;
    vec4 _t0E2A = [_t0E26, _t0E27, _t0E28, _t0E29];
    tensor[4,4] _t0E2B = [_t0E1B, _t0E20, _t0E25, _t0E2A];
    real _t0E2C = -0.1e1;
    real _t0E2D = 0.e0;
    real _t0E2E = 0.e0;
    real _t0E2F = 0.e0;
    vec4 _t0E30 = [_t0E2C, _t0E2D, _t0E2E, _t0E2F];
    real _t0E31 = 0.e0;
    real _t0E32 = -0.1e1;
    real _t0E33 = 0.e0;
    real _t0E34 = 0.e0;
    vec4 _t0E35 = [_t0E31, _t0E32, _t0E33, _t0E34];
    real _t0E36 = 0.e0;
    real _t0E37 = 0.e0;
    real _t0E38 = 0.1e1;
    real _t0E39 = 0.e0;
    vec4 _t0E3A = [_t0E36, _t0E37, _t0E38, _t0E39];
    real _t0E3B = 0.e0;
    real _t0E3C = 0.e0;
    real _t0E3D = 0.e0;
    real _t0E3E = 0.1e1;
    vec4 _t0E3F = [_t0E3B, _t0E3C, _t0E3D, _t0E3E];
    tensor[4,4] _t0E40 = [_t0E30, _t0E35, _t0E3A, _t0E3F];
    real _t0E41 = 0.e0;
    real _t0E42 = 0.1e1;
    real _t0E43 = 0.e0;
    real _t0E44 = 0.e0;
    vec4 _t0E45 = [_t0E41, _t0E42, _t0E43, _t0E44];
    real _t0E46 = -0.1e1;
    real _t0E47 = 0.e0;
    real _t0E48 = 0.e0;
    real _t0E49 = 0.e0;
    vec4 _t0E4A = [_t0E46, _t0E47, _t0E48, _t0E49];
    real _t0E4B = 0.e0;
    real _t0E4C = 0.e0;
    real _t0E4D = 0.1e1;
    real _t0E4E = 0.e0;
    vec4 _t0E4F = [_t0E4B, _t0E4C, _t0E4D, _t0E4E];
    real _t0E50 = 0.e0;
    real _t0E51 = 0.e0;
    real _t0E52 = 0.e0;
    real _t0E53 = 0.1e1;
    vec4 _t0E54 = [_t0E50, _t0E51, _t0E52, _t0E53];
    tensor[4,4] _t0E55 = [_t0E45, _t0E4A, _t0E4F, _t0E54];
    real _t0E56 = 0.1e1;
    real _t0E57 = 0.e0;
    real _t0E58 = 0.e0;
    real _t0E59 = 0.e0;
    vec4 _t0E5A = [_t0E56, _t0E57, _t0E58, _t0E59];
    real _t0E5B = 0.e0;
    real _t0E5C = 0.1e1;
    real _t0E5D = 0.e0;
    real _t0E5E = 0.e0;
    vec4 _t0E5F = [_t0E5B, _t0E5C, _t0E5D, _t0E5E];
    real _t0E60 = 0.e0;
    real _t0E61 = 0.e0;
    real _t0E62 = 0.1e1;
    real _t0E63 = 0.e0;
    vec4 _t0E64 = [_t0E60, _t0E61, _t0E62, _t0E63];
    real _t0E65 = 0.e0;
    real _t0E66 = 0.e0;
    real _t0E67 = 0.e0;
    real _t0E68 = 0.1e1;
    vec4 _t0E69 = [_t0E65, _t0E66, _t0E67, _t0E68];
    tensor[4,4] _t0E6A = [_t0E5A, _t0E5F, _t0E64, _t0E69];
    real _t0E6B = 0.e0;
    real _t0E6C = -0.1e1;
    real _t0E6D = 0.e0;
    real _t0E6E = 0.e0;
    vec4 _t0E6F = [_t0E6B, _t0E6C, _t0E6D, _t0E6E];
    real _t0E70 = 0.1e1;
    real _t0E71 = 0.e0;
    real _t0E72 = 0.e0;
    real _t0E73 = 0.e0;
    vec4 _t0E74 = [_t0E70, _t0E71, _t0E72, _t0E73];
    real _t0E75 = 0.e0;
    real _t0E76 = 0.e0;
    real _t0E77 = 0.1e1;
    real _t0E78 = 0.e0;
    vec4 _t0E79 = [_t0E75, _t0E76, _t0E77, _t0E78];
    real _t0E7A = 0.e0;
    real _t0E7B = 0.e0;
    real _t0E7C = 0.e0;
    real _t0E7D = 0.1e1;
    vec4 _t0E7E = [_t0E7A, _t0E7B, _t0E7C, _t0E7D];
    tensor[4,4] _t0E7F = [_t0E6F, _t0E74, _t0E79, _t0E7E];
    tensor[4,4][6] _t0E80 = {_t0E16, _t0E2B, _t0E40, _t0E55, _t0E6A, _t0E7F};
    real _t0E81 = 0.e0;
    real _t0E82 = -0.1e1;
    real _t0E83 = 0.1e1;
    real _t0E84 = 0.5e0;
    vec4 _t0E85 = [_t0E81, _t0E82, _t0E83, _t0E84];
    real _t0E86 = 0.e0;
    real _t0E87 = -0.1e1;
    real _t0E88 = 0.e0;
    real _t0E89 = 0.e0;
    vec4 _t0E8A = [_t0E86, _t0E87, _t0E88, _t0E89];
    real _t0E8B = 0.1e1;
    real _t0E8C = 0.e0;
    real _t0E8D = 0.e0;
    real _t0E8E = 0.e0;
    vec4 _t0E8F = [_t0E8B, _t0E8C, _t0E8D, _t0E8E];
    real _t0E90 = 0.e0;
    real _t0E91 = 0.e0;
    real _t0E92 = 0.e0;
    real _t0E93 = 0.1e1;
    vec4 _t0E94 = [_t0E90, _t0E91, _t0E92, _t0E93];
    tensor[4,4] _t0E95 = [_t0E85, _t0E8A, _t0E8F, _t0E94];
    real _t0E96 = 0.e0;
    real _t0E97 = -0.1e1;
    real _t0E98 = 0.1e1;
    real _t0E99 = 0.5e0;
    vec4 _t0E9A = [_t0E96, _t0E97, _t0E98, _t0E99];
    real _t0E9B = 0.e0;
    real _t0E9C = -0.1e1;
    real _t0E9D = 0.e0;
    real _t0E9E = 0.e0;
    vec4 _t0E9F = [_t0E9B, _t0E9C, _t0E9D, _t0E9E];
    real _t0EA0 = 0.1e1;
    real _t0EA1 = 0.e0;
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.1e1;
    vec4 _t0EA4 = [_t0EA0, _t0EA1, _t0EA2, _t0EA3];
    real _t0EA5 = 0.e0;
    real _t0EA6 = 0.e0;
    real _t0EA7 = 0.e0;
    real _t0EA8 = 0.1e1;
    vec4 _t0EA9 = [_t0EA5, _t0EA6, _t0EA7, _t0EA8];
    tensor[4,4] _t0EAA = [_t0E9A, _t0E9F, _t0EA4, _t0EA9];
    real _t0EAB = 0.e0;
    real _t0EAC = -0.1e1;
    real _t0EAD = 0.e0;
    real _t0EAE = 0.e0;
    vec4 _t0EAF = [_t0EAB, _t0EAC, _t0EAD, _t0EAE];
    real _t0EB0 = 0.1e1;
    real _t0EB1 = 0.e0;
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.e0;
    vec4 _t0EB4 = [_t0EB0, _t0EB1, _t0EB2, _t0EB3];
    real _t0EB5 = 0.e0;
    real _t0EB6 = 0.e0;
    real _t0EB7 = 0.1e1;
    real _t0EB8 = 0.e0;
    vec4 _t0EB9 = [_t0EB5, _t0EB6, _t0EB7, _t0EB8];
    real _t0EBA = 0.e0;
    real _t0EBB = 0.e0;
    real _t0EBC = 0.e0;
    real _t0EBD = 0.1e1;
    vec4 _t0EBE = [_t0EBA, _t0EBB, _t0EBC, _t0EBD];
    tensor[4,4] _t0EBF = [_t0EAF, _t0EB4, _t0EB9, _t0EBE];
    real _t0EC0 = -0.1e1;
    real _t0EC1 = 0.e0;
    real _t0EC2 = 0.e0;
    real _t0EC3 = 0.e0;
    vec4 _t0EC4 = [_t0EC0, _t0EC1, _t0EC2, _t0EC3];
    real _t0EC5 = 0.e0;
    real _t0EC6 = -0.1e1;
    real _t0EC7 = 0.e0;
    real _t0EC8 = 0.e0;
    vec4 _t0EC9 = [_t0EC5, _t0EC6, _t0EC7, _t0EC8];
    real _t0ECA = 0.e0;
    real _t0ECB = 0.e0;
    real _t0ECC = 0.1e1;
    real _t0ECD = 0.e0;
    vec4 _t0ECE = [_t0ECA, _t0ECB, _t0ECC, _t0ECD];
    real _t0ECF = 0.e0;
    real _t0ED0 = 0.e0;
    real _t0ED1 = 0.e0;
    real _t0ED2 = 0.1e1;
    vec4 _t0ED3 = [_t0ECF, _t0ED0, _t0ED1, _t0ED2];
    tensor[4,4] _t0ED4 = [_t0EC4, _t0EC9, _t0ECE, _t0ED3];
    real _t0ED5 = 0.e0;
    real _t0ED6 = 0.1e1;
    real _t0ED7 = 0.e0;
    real _t0ED8 = 0.e0;
    vec4 _t0ED9 = [_t0ED5, _t0ED6, _t0ED7, _t0ED8];
    real _t0EDA = -0.1e1;
    real _t0EDB = 0.e0;
    real _t0EDC = 0.e0;
    real _t0EDD = 0.e0;
    vec4 _t0EDE = [_t0EDA, _t0EDB, _t0EDC, _t0EDD];
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.e0;
    real _t0EE1 = 0.1e1;
    real _t0EE2 = 0.e0;
    vec4 _t0EE3 = [_t0EDF, _t0EE0, _t0EE1, _t0EE2];
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    real _t0EE6 = 0.e0;
    real _t0EE7 = 0.1e1;
    vec4 _t0EE8 = [_t0EE4, _t0EE5, _t0EE6, _t0EE7];
    tensor[4,4] _t0EE9 = [_t0ED9, _t0EDE, _t0EE3, _t0EE8];
    real _t0EEA = 0.1e1;
    real _t0EEB = 0.e0;
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    vec4 _t0EEE = [_t0EEA, _t0EEB, _t0EEC, _t0EED];
    real _t0EEF = 0.e0;
    real _t0EF0 = 0.1e1;
    real _t0EF1 = 0.e0;
    real _t0EF2 = 0.e0;
    vec4 _t0EF3 = [_t0EEF, _t0EF0, _t0EF1, _t0EF2];
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    real _t0EF6 = 0.1e1;
    real _t0EF7 = 0.e0;
    vec4 _t0EF8 = [_t0EF4, _t0EF5, _t0EF6, _t0EF7];
    real _t0EF9 = 0.e0;
    real _t0EFA = 0.e0;
    real _t0EFB = 0.e0;
    real _t0EFC = 0.1e1;
    vec4 _t0EFD = [_t0EF9, _t0EFA, _t0EFB, _t0EFC];
    tensor[4,4] _t0EFE = [_t0EEE, _t0EF3, _t0EF8, _t0EFD];
    tensor[4,4][6] _t0EFF = {_t0E95, _t0EAA, _t0EBF, _t0ED4, _t0EE9, _t0EFE};
    tensor[4,4][6][6] _t0F00 = {_t0C84, _t0D03, _t0D82, _t0E01, _t0E80, _t0EFF};
    real _t0F01 = time05D4[1];
    int _t0F02 = prim $r2i01B7 (_t0F01);
    tensor[4,4][6] _t0F03 = prim $sub01C0<tensor[4,4][6]; %6> (_t0F00, _t0F02);
    real _t0F04 = time05D4[1];
    int _t0F05 = prim $r2i01B7 (_t0F04);
    int[2] _t0F06 = func nextCell405D8 (_t0F05, cellId05D1, mesh05D0);
    int _t0F07 = 1;
    int _t0F08 = prim $sub01C0<int; %2> (_t0F06, _t0F07);
    tensor[4,4] _t0F09 = prim $sub01C0<tensor[4,4]; %6> (_t0F03, _t0F08);
    real _t0F0A = time05D4[0];
    vec3 _t0F0B = prim *0036<$[3]> (_t0F0A, dPos05D3);
    vec3 _t0F0C = prim +0017<$[3]> (_t0F0B, refPos05D2);
    real _t0F0D = _t0F0C[0];
    real _t0F0E = time05D4[0];
    vec3 _t0F0F = prim *0036<$[3]> (_t0F0E, dPos05D3);
    vec3 _t0F10 = prim +0017<$[3]> (_t0F0F, refPos05D2);
    real _t0F11 = _t0F10[1];
    real _t0F12 = time05D4[0];
    vec3 _t0F13 = prim *0036<$[3]> (_t0F12, dPos05D3);
    vec3 _t0F14 = prim +0017<$[3]> (_t0F13, refPos05D2);
    real _t0F15 = _t0F14[2];
    real _t0F16 = 0.1e1;
    vec4 _t0F17 = [_t0F0D, _t0F11, _t0F15, _t0F16];
    vec4 _t0F18 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0F09, _t0F17);
    real _t0F19 = _t0F18[1];
    real _t0F1A = 0.1e1;
    real _t0F1B = 0.e0;
    real _t0F1C = 0.e0;
    real _t0F1D = 0.e0;
    vec4 _t0F1E = [_t0F1A, _t0F1B, _t0F1C, _t0F1D];
    real _t0F1F = 0.e0;
    real _t0F20 = 0.1e1;
    real _t0F21 = 0.e0;
    real _t0F22 = 0.e0;
    vec4 _t0F23 = [_t0F1F, _t0F20, _t0F21, _t0F22];
    real _t0F24 = 0.e0;
    real _t0F25 = 0.e0;
    real _t0F26 = 0.1e1;
    real _t0F27 = 0.e0;
    vec4 _t0F28 = [_t0F24, _t0F25, _t0F26, _t0F27];
    real _t0F29 = 0.e0;
    real _t0F2A = 0.e0;
    real _t0F2B = 0.e0;
    real _t0F2C = 0.1e1;
    vec4 _t0F2D = [_t0F29, _t0F2A, _t0F2B, _t0F2C];
    tensor[4,4] _t0F2E = [_t0F1E, _t0F23, _t0F28, _t0F2D];
    real _t0F2F = 0.1e1;
    real _t0F30 = 0.e0;
    real _t0F31 = 0.e0;
    real _t0F32 = 0.e0;
    vec4 _t0F33 = [_t0F2F, _t0F30, _t0F31, _t0F32];
    real _t0F34 = 0.e0;
    real _t0F35 = 0.1e1;
    real _t0F36 = 0.e0;
    real _t0F37 = 0.e0;
    vec4 _t0F38 = [_t0F34, _t0F35, _t0F36, _t0F37];
    real _t0F39 = 0.e0;
    real _t0F3A = 0.e0;
    real _t0F3B = 0.1e1;
    real _t0F3C = 0.1e1;
    vec4 _t0F3D = [_t0F39, _t0F3A, _t0F3B, _t0F3C];
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    real _t0F40 = 0.e0;
    real _t0F41 = 0.1e1;
    vec4 _t0F42 = [_t0F3E, _t0F3F, _t0F40, _t0F41];
    tensor[4,4] _t0F43 = [_t0F33, _t0F38, _t0F3D, _t0F42];
    real _t0F44 = 0.e0;
    real _t0F45 = 0.1e1;
    real _t0F46 = 0.e0;
    real _t0F47 = 0.e0;
    vec4 _t0F48 = [_t0F44, _t0F45, _t0F46, _t0F47];
    real _t0F49 = 0.e0;
    real _t0F4A = 0.e0;
    real _t0F4B = 0.1e1;
    real _t0F4C = 0.e0;
    vec4 _t0F4D = [_t0F49, _t0F4A, _t0F4B, _t0F4C];
    real _t0F4E = 0.1e1;
    real _t0F4F = -0.1e1;
    real _t0F50 = 0.e0;
    real _t0F51 = -0.5e0;
    vec4 _t0F52 = [_t0F4E, _t0F4F, _t0F50, _t0F51];
    real _t0F53 = 0.e0;
    real _t0F54 = 0.e0;
    real _t0F55 = 0.e0;
    real _t0F56 = 0.1e1;
    vec4 _t0F57 = [_t0F53, _t0F54, _t0F55, _t0F56];
    tensor[4,4] _t0F58 = [_t0F48, _t0F4D, _t0F52, _t0F57];
    real _t0F59 = 0.e0;
    real _t0F5A = 0.e0;
    real _t0F5B = -0.1e1;
    real _t0F5C = 0.e0;
    vec4 _t0F5D = [_t0F59, _t0F5A, _t0F5B, _t0F5C];
    real _t0F5E = 0.e0;
    real _t0F5F = 0.1e1;
    real _t0F60 = 0.e0;
    real _t0F61 = 0.e0;
    vec4 _t0F62 = [_t0F5E, _t0F5F, _t0F60, _t0F61];
    real _t0F63 = 0.1e1;
    real _t0F64 = -0.1e1;
    real _t0F65 = 0.e0;
    real _t0F66 = -0.5e0;
    vec4 _t0F67 = [_t0F63, _t0F64, _t0F65, _t0F66];
    real _t0F68 = 0.e0;
    real _t0F69 = 0.e0;
    real _t0F6A = 0.e0;
    real _t0F6B = 0.1e1;
    vec4 _t0F6C = [_t0F68, _t0F69, _t0F6A, _t0F6B];
    tensor[4,4] _t0F6D = [_t0F5D, _t0F62, _t0F67, _t0F6C];
    real _t0F6E = 0.e0;
    real _t0F6F = -0.1e1;
    real _t0F70 = 0.e0;
    real _t0F71 = 0.e0;
    vec4 _t0F72 = [_t0F6E, _t0F6F, _t0F70, _t0F71];
    real _t0F73 = 0.e0;
    real _t0F74 = 0.e0;
    real _t0F75 = -0.1e1;
    real _t0F76 = 0.e0;
    vec4 _t0F77 = [_t0F73, _t0F74, _t0F75, _t0F76];
    real _t0F78 = 0.1e1;
    real _t0F79 = -0.1e1;
    real _t0F7A = 0.e0;
    real _t0F7B = -0.5e0;
    vec4 _t0F7C = [_t0F78, _t0F79, _t0F7A, _t0F7B];
    real _t0F7D = 0.e0;
    real _t0F7E = 0.e0;
    real _t0F7F = 0.e0;
    real _t0F80 = 0.1e1;
    vec4 _t0F81 = [_t0F7D, _t0F7E, _t0F7F, _t0F80];
    tensor[4,4] _t0F82 = [_t0F72, _t0F77, _t0F7C, _t0F81];
    real _t0F83 = 0.e0;
    real _t0F84 = 0.e0;
    real _t0F85 = 0.1e1;
    real _t0F86 = 0.e0;
    vec4 _t0F87 = [_t0F83, _t0F84, _t0F85, _t0F86];
    real _t0F88 = 0.e0;
    real _t0F89 = -0.1e1;
    real _t0F8A = 0.e0;
    real _t0F8B = 0.e0;
    vec4 _t0F8C = [_t0F88, _t0F89, _t0F8A, _t0F8B];
    real _t0F8D = 0.1e1;
    real _t0F8E = -0.1e1;
    real _t0F8F = 0.e0;
    real _t0F90 = -0.5e0;
    vec4 _t0F91 = [_t0F8D, _t0F8E, _t0F8F, _t0F90];
    real _t0F92 = 0.e0;
    real _t0F93 = 0.e0;
    real _t0F94 = 0.e0;
    real _t0F95 = 0.1e1;
    vec4 _t0F96 = [_t0F92, _t0F93, _t0F94, _t0F95];
    tensor[4,4] _t0F97 = [_t0F87, _t0F8C, _t0F91, _t0F96];
    tensor[4,4][6] _t0F98 = {_t0F2E, _t0F43, _t0F58, _t0F6D, _t0F82, _t0F97};
    real _t0F99 = 0.1e1;
    real _t0F9A = 0.e0;
    real _t0F9B = 0.e0;
    real _t0F9C = 0.e0;
    vec4 _t0F9D = [_t0F99, _t0F9A, _t0F9B, _t0F9C];
    real _t0F9E = 0.e0;
    real _t0F9F = 0.1e1;
    real _t0FA0 = 0.e0;
    real _t0FA1 = 0.e0;
    vec4 _t0FA2 = [_t0F9E, _t0F9F, _t0FA0, _t0FA1];
    real _t0FA3 = 0.e0;
    real _t0FA4 = 0.e0;
    real _t0FA5 = 0.1e1;
    real _t0FA6 = -0.1e1;
    vec4 _t0FA7 = [_t0FA3, _t0FA4, _t0FA5, _t0FA6];
    real _t0FA8 = 0.e0;
    real _t0FA9 = 0.e0;
    real _t0FAA = 0.e0;
    real _t0FAB = 0.1e1;
    vec4 _t0FAC = [_t0FA8, _t0FA9, _t0FAA, _t0FAB];
    tensor[4,4] _t0FAD = [_t0F9D, _t0FA2, _t0FA7, _t0FAC];
    real _t0FAE = 0.1e1;
    real _t0FAF = 0.e0;
    real _t0FB0 = 0.e0;
    real _t0FB1 = 0.e0;
    vec4 _t0FB2 = [_t0FAE, _t0FAF, _t0FB0, _t0FB1];
    real _t0FB3 = 0.e0;
    real _t0FB4 = 0.1e1;
    real _t0FB5 = 0.e0;
    real _t0FB6 = 0.e0;
    vec4 _t0FB7 = [_t0FB3, _t0FB4, _t0FB5, _t0FB6];
    real _t0FB8 = 0.e0;
    real _t0FB9 = 0.e0;
    real _t0FBA = 0.1e1;
    real _t0FBB = 0.e0;
    vec4 _t0FBC = [_t0FB8, _t0FB9, _t0FBA, _t0FBB];
    real _t0FBD = 0.e0;
    real _t0FBE = 0.e0;
    real _t0FBF = 0.e0;
    real _t0FC0 = 0.1e1;
    vec4 _t0FC1 = [_t0FBD, _t0FBE, _t0FBF, _t0FC0];
    tensor[4,4] _t0FC2 = [_t0FB2, _t0FB7, _t0FBC, _t0FC1];
    real _t0FC3 = 0.e0;
    real _t0FC4 = 0.1e1;
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    vec4 _t0FC7 = [_t0FC3, _t0FC4, _t0FC5, _t0FC6];
    real _t0FC8 = 0.e0;
    real _t0FC9 = 0.e0;
    real _t0FCA = 0.1e1;
    real _t0FCB = -0.1e1;
    vec4 _t0FCC = [_t0FC8, _t0FC9, _t0FCA, _t0FCB];
    real _t0FCD = 0.1e1;
    real _t0FCE = -0.1e1;
    real _t0FCF = 0.e0;
    real _t0FD0 = -0.5e0;
    vec4 _t0FD1 = [_t0FCD, _t0FCE, _t0FCF, _t0FD0];
    real _t0FD2 = 0.e0;
    real _t0FD3 = 0.e0;
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.1e1;
    vec4 _t0FD6 = [_t0FD2, _t0FD3, _t0FD4, _t0FD5];
    tensor[4,4] _t0FD7 = [_t0FC7, _t0FCC, _t0FD1, _t0FD6];
    real _t0FD8 = 0.e0;
    real _t0FD9 = 0.e0;
    real _t0FDA = -0.1e1;
    real _t0FDB = 0.1e1;
    vec4 _t0FDC = [_t0FD8, _t0FD9, _t0FDA, _t0FDB];
    real _t0FDD = 0.e0;
    real _t0FDE = 0.1e1;
    real _t0FDF = 0.e0;
    real _t0FE0 = 0.e0;
    vec4 _t0FE1 = [_t0FDD, _t0FDE, _t0FDF, _t0FE0];
    real _t0FE2 = 0.1e1;
    real _t0FE3 = -0.1e1;
    real _t0FE4 = 0.e0;
    real _t0FE5 = -0.5e0;
    vec4 _t0FE6 = [_t0FE2, _t0FE3, _t0FE4, _t0FE5];
    real _t0FE7 = 0.e0;
    real _t0FE8 = 0.e0;
    real _t0FE9 = 0.e0;
    real _t0FEA = 0.1e1;
    vec4 _t0FEB = [_t0FE7, _t0FE8, _t0FE9, _t0FEA];
    tensor[4,4] _t0FEC = [_t0FDC, _t0FE1, _t0FE6, _t0FEB];
    real _t0FED = 0.e0;
    real _t0FEE = -0.1e1;
    real _t0FEF = 0.e0;
    real _t0FF0 = 0.e0;
    vec4 _t0FF1 = [_t0FED, _t0FEE, _t0FEF, _t0FF0];
    real _t0FF2 = 0.e0;
    real _t0FF3 = 0.e0;
    real _t0FF4 = -0.1e1;
    real _t0FF5 = 0.1e1;
    vec4 _t0FF6 = [_t0FF2, _t0FF3, _t0FF4, _t0FF5];
    real _t0FF7 = 0.1e1;
    real _t0FF8 = -0.1e1;
    real _t0FF9 = 0.e0;
    real _t0FFA = -0.5e0;
    vec4 _t0FFB = [_t0FF7, _t0FF8, _t0FF9, _t0FFA];
    real _t0FFC = 0.e0;
    real _t0FFD = 0.e0;
    real _t0FFE = 0.e0;
    real _t0FFF = 0.1e1;
    vec4 _t1000 = [_t0FFC, _t0FFD, _t0FFE, _t0FFF];
    tensor[4,4] _t1001 = [_t0FF1, _t0FF6, _t0FFB, _t1000];
    real _t1002 = 0.e0;
    real _t1003 = 0.e0;
    real _t1004 = 0.1e1;
    real _t1005 = -0.1e1;
    vec4 _t1006 = [_t1002, _t1003, _t1004, _t1005];
    real _t1007 = 0.e0;
    real _t1008 = -0.1e1;
    real _t1009 = 0.e0;
    real _t100A = 0.e0;
    vec4 _t100B = [_t1007, _t1008, _t1009, _t100A];
    real _t100C = 0.1e1;
    real _t100D = -0.1e1;
    real _t100E = 0.e0;
    real _t100F = -0.5e0;
    vec4 _t1010 = [_t100C, _t100D, _t100E, _t100F];
    real _t1011 = 0.e0;
    real _t1012 = 0.e0;
    real _t1013 = 0.e0;
    real _t1014 = 0.1e1;
    vec4 _t1015 = [_t1011, _t1012, _t1013, _t1014];
    tensor[4,4] _t1016 = [_t1006, _t100B, _t1010, _t1015];
    tensor[4,4][6] _t1017 = {_t0FAD, _t0FC2, _t0FD7, _t0FEC, _t1001, _t1016};
    real _t1018 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.1e1;
    real _t101B = 0.5e0;
    vec4 _t101C = [_t1018, _t1019, _t101A, _t101B];
    real _t101D = 0.1e1;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    vec4 _t1021 = [_t101D, _t101E, _t101F, _t1020];
    real _t1022 = 0.e0;
    real _t1023 = 0.1e1;
    real _t1024 = 0.e0;
    real _t1025 = 0.e0;
    vec4 _t1026 = [_t1022, _t1023, _t1024, _t1025];
    real _t1027 = 0.e0;
    real _t1028 = 0.e0;
    real _t1029 = 0.e0;
    real _t102A = 0.1e1;
    vec4 _t102B = [_t1027, _t1028, _t1029, _t102A];
    tensor[4,4] _t102C = [_t101C, _t1021, _t1026, _t102B];
    real _t102D = 0.1e1;
    real _t102E = 0.e0;
    real _t102F = 0.1e1;
    real _t1030 = 0.5e0;
    vec4 _t1031 = [_t102D, _t102E, _t102F, _t1030];
    real _t1032 = 0.1e1;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    real _t1035 = 0.e0;
    vec4 _t1036 = [_t1032, _t1033, _t1034, _t1035];
    real _t1037 = 0.e0;
    real _t1038 = 0.1e1;
    real _t1039 = 0.e0;
    real _t103A = 0.1e1;
    vec4 _t103B = [_t1037, _t1038, _t1039, _t103A];
    real _t103C = 0.e0;
    real _t103D = 0.e0;
    real _t103E = 0.e0;
    real _t103F = 0.1e1;
    vec4 _t1040 = [_t103C, _t103D, _t103E, _t103F];
    tensor[4,4] _t1041 = [_t1031, _t1036, _t103B, _t1040];
    real _t1042 = 0.1e1;
    real _t1043 = 0.e0;
    real _t1044 = 0.e0;
    real _t1045 = 0.e0;
    vec4 _t1046 = [_t1042, _t1043, _t1044, _t1045];
    real _t1047 = 0.e0;
    real _t1048 = 0.1e1;
    real _t1049 = 0.e0;
    real _t104A = 0.e0;
    vec4 _t104B = [_t1047, _t1048, _t1049, _t104A];
    real _t104C = 0.e0;
    real _t104D = 0.e0;
    real _t104E = 0.1e1;
    real _t104F = 0.e0;
    vec4 _t1050 = [_t104C, _t104D, _t104E, _t104F];
    real _t1051 = 0.e0;
    real _t1052 = 0.e0;
    real _t1053 = 0.e0;
    real _t1054 = 0.1e1;
    vec4 _t1055 = [_t1051, _t1052, _t1053, _t1054];
    tensor[4,4] _t1056 = [_t1046, _t104B, _t1050, _t1055];
    real _t1057 = 0.e0;
    real _t1058 = -0.1e1;
    real _t1059 = 0.e0;
    real _t105A = 0.e0;
    vec4 _t105B = [_t1057, _t1058, _t1059, _t105A];
    real _t105C = 0.1e1;
    real _t105D = 0.e0;
    real _t105E = 0.e0;
    real _t105F = 0.e0;
    vec4 _t1060 = [_t105C, _t105D, _t105E, _t105F];
    real _t1061 = 0.e0;
    real _t1062 = 0.e0;
    real _t1063 = 0.1e1;
    real _t1064 = 0.e0;
    vec4 _t1065 = [_t1061, _t1062, _t1063, _t1064];
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    real _t1068 = 0.e0;
    real _t1069 = 0.1e1;
    vec4 _t106A = [_t1066, _t1067, _t1068, _t1069];
    tensor[4,4] _t106B = [_t105B, _t1060, _t1065, _t106A];
    real _t106C = -0.1e1;
    real _t106D = 0.e0;
    real _t106E = 0.e0;
    real _t106F = 0.e0;
    vec4 _t1070 = [_t106C, _t106D, _t106E, _t106F];
    real _t1071 = 0.e0;
    real _t1072 = -0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
    real _t1076 = 0.e0;
    real _t1077 = 0.e0;
    real _t1078 = 0.1e1;
    real _t1079 = 0.e0;
    vec4 _t107A = [_t1076, _t1077, _t1078, _t1079];
    real _t107B = 0.e0;
    real _t107C = 0.e0;
    real _t107D = 0.e0;
    real _t107E = 0.1e1;
    vec4 _t107F = [_t107B, _t107C, _t107D, _t107E];
    tensor[4,4] _t1080 = [_t1070, _t1075, _t107A, _t107F];
    real _t1081 = 0.e0;
    real _t1082 = 0.1e1;
    real _t1083 = 0.e0;
    real _t1084 = 0.e0;
    vec4 _t1085 = [_t1081, _t1082, _t1083, _t1084];
    real _t1086 = -0.1e1;
    real _t1087 = 0.e0;
    real _t1088 = 0.e0;
    real _t1089 = 0.e0;
    vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
    real _t108B = 0.e0;
    real _t108C = 0.e0;
    real _t108D = 0.1e1;
    real _t108E = 0.e0;
    vec4 _t108F = [_t108B, _t108C, _t108D, _t108E];
    real _t1090 = 0.e0;
    real _t1091 = 0.e0;
    real _t1092 = 0.e0;
    real _t1093 = 0.1e1;
    vec4 _t1094 = [_t1090, _t1091, _t1092, _t1093];
    tensor[4,4] _t1095 = [_t1085, _t108A, _t108F, _t1094];
    tensor[4,4][6] _t1096 = {_t102C, _t1041, _t1056, _t106B, _t1080, _t1095};
    real _t1097 = 0.e0;
    real _t1098 = 0.1e1;
    real _t1099 = 0.1e1;
    real _t109A = 0.5e0;
    vec4 _t109B = [_t1097, _t1098, _t1099, _t109A];
    real _t109C = 0.e0;
    real _t109D = 0.1e1;
    real _t109E = 0.e0;
    real _t109F = 0.e0;
    vec4 _t10A0 = [_t109C, _t109D, _t109E, _t109F];
    real _t10A1 = -0.1e1;
    real _t10A2 = 0.e0;
    real _t10A3 = 0.e0;
    real _t10A4 = 0.e0;
    vec4 _t10A5 = [_t10A1, _t10A2, _t10A3, _t10A4];
    real _t10A6 = 0.e0;
    real _t10A7 = 0.e0;
    real _t10A8 = 0.e0;
    real _t10A9 = 0.1e1;
    vec4 _t10AA = [_t10A6, _t10A7, _t10A8, _t10A9];
    tensor[4,4] _t10AB = [_t109B, _t10A0, _t10A5, _t10AA];
    real _t10AC = 0.e0;
    real _t10AD = 0.1e1;
    real _t10AE = 0.1e1;
    real _t10AF = 0.5e0;
    vec4 _t10B0 = [_t10AC, _t10AD, _t10AE, _t10AF];
    real _t10B1 = 0.e0;
    real _t10B2 = 0.1e1;
    real _t10B3 = 0.e0;
    real _t10B4 = 0.e0;
    vec4 _t10B5 = [_t10B1, _t10B2, _t10B3, _t10B4];
    real _t10B6 = -0.1e1;
    real _t10B7 = 0.e0;
    real _t10B8 = 0.e0;
    real _t10B9 = 0.1e1;
    vec4 _t10BA = [_t10B6, _t10B7, _t10B8, _t10B9];
    real _t10BB = 0.e0;
    real _t10BC = 0.e0;
    real _t10BD = 0.e0;
    real _t10BE = 0.1e1;
    vec4 _t10BF = [_t10BB, _t10BC, _t10BD, _t10BE];
    tensor[4,4] _t10C0 = [_t10B0, _t10B5, _t10BA, _t10BF];
    real _t10C1 = 0.e0;
    real _t10C2 = 0.1e1;
    real _t10C3 = 0.e0;
    real _t10C4 = 0.e0;
    vec4 _t10C5 = [_t10C1, _t10C2, _t10C3, _t10C4];
    real _t10C6 = -0.1e1;
    real _t10C7 = 0.e0;
    real _t10C8 = 0.e0;
    real _t10C9 = 0.e0;
    vec4 _t10CA = [_t10C6, _t10C7, _t10C8, _t10C9];
    real _t10CB = 0.e0;
    real _t10CC = 0.e0;
    real _t10CD = 0.1e1;
    real _t10CE = 0.e0;
    vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
    real _t10D0 = 0.e0;
    real _t10D1 = 0.e0;
    real _t10D2 = 0.e0;
    real _t10D3 = 0.1e1;
    vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
    tensor[4,4] _t10D5 = [_t10C5, _t10CA, _t10CF, _t10D4];
    real _t10D6 = 0.1e1;
    real _t10D7 = 0.e0;
    real _t10D8 = 0.e0;
    real _t10D9 = 0.e0;
    vec4 _t10DA = [_t10D6, _t10D7, _t10D8, _t10D9];
    real _t10DB = 0.e0;
    real _t10DC = 0.1e1;
    real _t10DD = 0.e0;
    real _t10DE = 0.e0;
    vec4 _t10DF = [_t10DB, _t10DC, _t10DD, _t10DE];
    real _t10E0 = 0.e0;
    real _t10E1 = 0.e0;
    real _t10E2 = 0.1e1;
    real _t10E3 = 0.e0;
    vec4 _t10E4 = [_t10E0, _t10E1, _t10E2, _t10E3];
    real _t10E5 = 0.e0;
    real _t10E6 = 0.e0;
    real _t10E7 = 0.e0;
    real _t10E8 = 0.1e1;
    vec4 _t10E9 = [_t10E5, _t10E6, _t10E7, _t10E8];
    tensor[4,4] _t10EA = [_t10DA, _t10DF, _t10E4, _t10E9];
    real _t10EB = 0.e0;
    real _t10EC = -0.1e1;
    real _t10ED = 0.e0;
    real _t10EE = 0.e0;
    vec4 _t10EF = [_t10EB, _t10EC, _t10ED, _t10EE];
    real _t10F0 = 0.1e1;
    real _t10F1 = 0.e0;
    real _t10F2 = 0.e0;
    real _t10F3 = 0.e0;
    vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
    real _t10F5 = 0.e0;
    real _t10F6 = 0.e0;
    real _t10F7 = 0.1e1;
    real _t10F8 = 0.e0;
    vec4 _t10F9 = [_t10F5, _t10F6, _t10F7, _t10F8];
    real _t10FA = 0.e0;
    real _t10FB = 0.e0;
    real _t10FC = 0.e0;
    real _t10FD = 0.1e1;
    vec4 _t10FE = [_t10FA, _t10FB, _t10FC, _t10FD];
    tensor[4,4] _t10FF = [_t10EF, _t10F4, _t10F9, _t10FE];
    real _t1100 = -0.1e1;
    real _t1101 = 0.e0;
    real _t1102 = 0.e0;
    real _t1103 = 0.e0;
    vec4 _t1104 = [_t1100, _t1101, _t1102, _t1103];
    real _t1105 = 0.e0;
    real _t1106 = -0.1e1;
    real _t1107 = 0.e0;
    real _t1108 = 0.e0;
    vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
    real _t110A = 0.e0;
    real _t110B = 0.e0;
    real _t110C = 0.1e1;
    real _t110D = 0.e0;
    vec4 _t110E = [_t110A, _t110B, _t110C, _t110D];
    real _t110F = 0.e0;
    real _t1110 = 0.e0;
    real _t1111 = 0.e0;
    real _t1112 = 0.1e1;
    vec4 _t1113 = [_t110F, _t1110, _t1111, _t1112];
    tensor[4,4] _t1114 = [_t1104, _t1109, _t110E, _t1113];
    tensor[4,4][6] _t1115 = {_t10AB, _t10C0, _t10D5, _t10EA, _t10FF, _t1114};
    real _t1116 = -0.1e1;
    real _t1117 = 0.e0;
    real _t1118 = 0.1e1;
    real _t1119 = 0.5e0;
    vec4 _t111A = [_t1116, _t1117, _t1118, _t1119];
    real _t111B = -0.1e1;
    real _t111C = 0.e0;
    real _t111D = 0.e0;
    real _t111E = 0.e0;
    vec4 _t111F = [_t111B, _t111C, _t111D, _t111E];
    real _t1120 = 0.e0;
    real _t1121 = -0.1e1;
    real _t1122 = 0.e0;
    real _t1123 = 0.e0;
    vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
    real _t1125 = 0.e0;
    real _t1126 = 0.e0;
    real _t1127 = 0.e0;
    real _t1128 = 0.1e1;
    vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
    tensor[4,4] _t112A = [_t111A, _t111F, _t1124, _t1129];
    real _t112B = -0.1e1;
    real _t112C = 0.e0;
    real _t112D = 0.1e1;
    real _t112E = 0.5e0;
    vec4 _t112F = [_t112B, _t112C, _t112D, _t112E];
    real _t1130 = -0.1e1;
    real _t1131 = 0.e0;
    real _t1132 = 0.e0;
    real _t1133 = 0.e0;
    vec4 _t1134 = [_t1130, _t1131, _t1132, _t1133];
    real _t1135 = 0.e0;
    real _t1136 = -0.1e1;
    real _t1137 = 0.e0;
    real _t1138 = 0.1e1;
    vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
    real _t113A = 0.e0;
    real _t113B = 0.e0;
    real _t113C = 0.e0;
    real _t113D = 0.1e1;
    vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
    tensor[4,4] _t113F = [_t112F, _t1134, _t1139, _t113E];
    real _t1140 = -0.1e1;
    real _t1141 = 0.e0;
    real _t1142 = 0.e0;
    real _t1143 = 0.e0;
    vec4 _t1144 = [_t1140, _t1141, _t1142, _t1143];
    real _t1145 = 0.e0;
    real _t1146 = -0.1e1;
    real _t1147 = 0.e0;
    real _t1148 = 0.e0;
    vec4 _t1149 = [_t1145, _t1146, _t1147, _t1148];
    real _t114A = 0.e0;
    real _t114B = 0.e0;
    real _t114C = 0.1e1;
    real _t114D = 0.e0;
    vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
    real _t114F = 0.e0;
    real _t1150 = 0.e0;
    real _t1151 = 0.e0;
    real _t1152 = 0.1e1;
    vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
    tensor[4,4] _t1154 = [_t1144, _t1149, _t114E, _t1153];
    real _t1155 = 0.e0;
    real _t1156 = 0.1e1;
    real _t1157 = 0.e0;
    real _t1158 = 0.e0;
    vec4 _t1159 = [_t1155, _t1156, _t1157, _t1158];
    real _t115A = -0.1e1;
    real _t115B = 0.e0;
    real _t115C = 0.e0;
    real _t115D = 0.e0;
    vec4 _t115E = [_t115A, _t115B, _t115C, _t115D];
    real _t115F = 0.e0;
    real _t1160 = 0.e0;
    real _t1161 = 0.1e1;
    real _t1162 = 0.e0;
    vec4 _t1163 = [_t115F, _t1160, _t1161, _t1162];
    real _t1164 = 0.e0;
    real _t1165 = 0.e0;
    real _t1166 = 0.e0;
    real _t1167 = 0.1e1;
    vec4 _t1168 = [_t1164, _t1165, _t1166, _t1167];
    tensor[4,4] _t1169 = [_t1159, _t115E, _t1163, _t1168];
    real _t116A = 0.1e1;
    real _t116B = 0.e0;
    real _t116C = 0.e0;
    real _t116D = 0.e0;
    vec4 _t116E = [_t116A, _t116B, _t116C, _t116D];
    real _t116F = 0.e0;
    real _t1170 = 0.1e1;
    real _t1171 = 0.e0;
    real _t1172 = 0.e0;
    vec4 _t1173 = [_t116F, _t1170, _t1171, _t1172];
    real _t1174 = 0.e0;
    real _t1175 = 0.e0;
    real _t1176 = 0.1e1;
    real _t1177 = 0.e0;
    vec4 _t1178 = [_t1174, _t1175, _t1176, _t1177];
    real _t1179 = 0.e0;
    real _t117A = 0.e0;
    real _t117B = 0.e0;
    real _t117C = 0.1e1;
    vec4 _t117D = [_t1179, _t117A, _t117B, _t117C];
    tensor[4,4] _t117E = [_t116E, _t1173, _t1178, _t117D];
    real _t117F = 0.e0;
    real _t1180 = -0.1e1;
    real _t1181 = 0.e0;
    real _t1182 = 0.e0;
    vec4 _t1183 = [_t117F, _t1180, _t1181, _t1182];
    real _t1184 = 0.1e1;
    real _t1185 = 0.e0;
    real _t1186 = 0.e0;
    real _t1187 = 0.e0;
    vec4 _t1188 = [_t1184, _t1185, _t1186, _t1187];
    real _t1189 = 0.e0;
    real _t118A = 0.e0;
    real _t118B = 0.1e1;
    real _t118C = 0.e0;
    vec4 _t118D = [_t1189, _t118A, _t118B, _t118C];
    real _t118E = 0.e0;
    real _t118F = 0.e0;
    real _t1190 = 0.e0;
    real _t1191 = 0.1e1;
    vec4 _t1192 = [_t118E, _t118F, _t1190, _t1191];
    tensor[4,4] _t1193 = [_t1183, _t1188, _t118D, _t1192];
    tensor[4,4][6] _t1194 = {_t112A, _t113F, _t1154, _t1169, _t117E, _t1193};
    real _t1195 = 0.e0;
    real _t1196 = -0.1e1;
    real _t1197 = 0.1e1;
    real _t1198 = 0.5e0;
    vec4 _t1199 = [_t1195, _t1196, _t1197, _t1198];
    real _t119A = 0.e0;
    real _t119B = -0.1e1;
    real _t119C = 0.e0;
    real _t119D = 0.e0;
    vec4 _t119E = [_t119A, _t119B, _t119C, _t119D];
    real _t119F = 0.1e1;
    real _t11A0 = 0.e0;
    real _t11A1 = 0.e0;
    real _t11A2 = 0.e0;
    vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
    real _t11A4 = 0.e0;
    real _t11A5 = 0.e0;
    real _t11A6 = 0.e0;
    real _t11A7 = 0.1e1;
    vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
    tensor[4,4] _t11A9 = [_t1199, _t119E, _t11A3, _t11A8];
    real _t11AA = 0.e0;
    real _t11AB = -0.1e1;
    real _t11AC = 0.1e1;
    real _t11AD = 0.5e0;
    vec4 _t11AE = [_t11AA, _t11AB, _t11AC, _t11AD];
    real _t11AF = 0.e0;
    real _t11B0 = -0.1e1;
    real _t11B1 = 0.e0;
    real _t11B2 = 0.e0;
    vec4 _t11B3 = [_t11AF, _t11B0, _t11B1, _t11B2];
    real _t11B4 = 0.1e1;
    real _t11B5 = 0.e0;
    real _t11B6 = 0.e0;
    real _t11B7 = 0.1e1;
    vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
    real _t11B9 = 0.e0;
    real _t11BA = 0.e0;
    real _t11BB = 0.e0;
    real _t11BC = 0.1e1;
    vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
    tensor[4,4] _t11BE = [_t11AE, _t11B3, _t11B8, _t11BD];
    real _t11BF = 0.e0;
    real _t11C0 = -0.1e1;
    real _t11C1 = 0.e0;
    real _t11C2 = 0.e0;
    vec4 _t11C3 = [_t11BF, _t11C0, _t11C1, _t11C2];
    real _t11C4 = 0.1e1;
    real _t11C5 = 0.e0;
    real _t11C6 = 0.e0;
    real _t11C7 = 0.e0;
    vec4 _t11C8 = [_t11C4, _t11C5, _t11C6, _t11C7];
    real _t11C9 = 0.e0;
    real _t11CA = 0.e0;
    real _t11CB = 0.1e1;
    real _t11CC = 0.e0;
    vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
    real _t11CE = 0.e0;
    real _t11CF = 0.e0;
    real _t11D0 = 0.e0;
    real _t11D1 = 0.1e1;
    vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
    tensor[4,4] _t11D3 = [_t11C3, _t11C8, _t11CD, _t11D2];
    real _t11D4 = -0.1e1;
    real _t11D5 = 0.e0;
    real _t11D6 = 0.e0;
    real _t11D7 = 0.e0;
    vec4 _t11D8 = [_t11D4, _t11D5, _t11D6, _t11D7];
    real _t11D9 = 0.e0;
    real _t11DA = -0.1e1;
    real _t11DB = 0.e0;
    real _t11DC = 0.e0;
    vec4 _t11DD = [_t11D9, _t11DA, _t11DB, _t11DC];
    real _t11DE = 0.e0;
    real _t11DF = 0.e0;
    real _t11E0 = 0.1e1;
    real _t11E1 = 0.e0;
    vec4 _t11E2 = [_t11DE, _t11DF, _t11E0, _t11E1];
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    real _t11E5 = 0.e0;
    real _t11E6 = 0.1e1;
    vec4 _t11E7 = [_t11E3, _t11E4, _t11E5, _t11E6];
    tensor[4,4] _t11E8 = [_t11D8, _t11DD, _t11E2, _t11E7];
    real _t11E9 = 0.e0;
    real _t11EA = 0.1e1;
    real _t11EB = 0.e0;
    real _t11EC = 0.e0;
    vec4 _t11ED = [_t11E9, _t11EA, _t11EB, _t11EC];
    real _t11EE = -0.1e1;
    real _t11EF = 0.e0;
    real _t11F0 = 0.e0;
    real _t11F1 = 0.e0;
    vec4 _t11F2 = [_t11EE, _t11EF, _t11F0, _t11F1];
    real _t11F3 = 0.e0;
    real _t11F4 = 0.e0;
    real _t11F5 = 0.1e1;
    real _t11F6 = 0.e0;
    vec4 _t11F7 = [_t11F3, _t11F4, _t11F5, _t11F6];
    real _t11F8 = 0.e0;
    real _t11F9 = 0.e0;
    real _t11FA = 0.e0;
    real _t11FB = 0.1e1;
    vec4 _t11FC = [_t11F8, _t11F9, _t11FA, _t11FB];
    tensor[4,4] _t11FD = [_t11ED, _t11F2, _t11F7, _t11FC];
    real _t11FE = 0.1e1;
    real _t11FF = 0.e0;
    real _t1200 = 0.e0;
    real _t1201 = 0.e0;
    vec4 _t1202 = [_t11FE, _t11FF, _t1200, _t1201];
    real _t1203 = 0.e0;
    real _t1204 = 0.1e1;
    real _t1205 = 0.e0;
    real _t1206 = 0.e0;
    vec4 _t1207 = [_t1203, _t1204, _t1205, _t1206];
    real _t1208 = 0.e0;
    real _t1209 = 0.e0;
    real _t120A = 0.1e1;
    real _t120B = 0.e0;
    vec4 _t120C = [_t1208, _t1209, _t120A, _t120B];
    real _t120D = 0.e0;
    real _t120E = 0.e0;
    real _t120F = 0.e0;
    real _t1210 = 0.1e1;
    vec4 _t1211 = [_t120D, _t120E, _t120F, _t1210];
    tensor[4,4] _t1212 = [_t1202, _t1207, _t120C, _t1211];
    tensor[4,4][6] _t1213 = {_t11A9, _t11BE, _t11D3, _t11E8, _t11FD, _t1212};
    tensor[4,4][6][6] _t1214 = {_t0F98, _t1017, _t1096, _t1115, _t1194, _t1213};
    real _t1215 = time05D4[1];
    int _t1216 = prim $r2i01B7 (_t1215);
    tensor[4,4][6] _t1217 = prim $sub01C0<tensor[4,4][6]; %6> (_t1214, _t1216);
    real _t1218 = time05D4[1];
    int _t1219 = prim $r2i01B7 (_t1218);
    int[2] _t121A = func nextCell405D8 (_t1219, cellId05D1, mesh05D0);
    int _t121B = 1;
    int _t121C = prim $sub01C0<int; %2> (_t121A, _t121B);
    tensor[4,4] _t121D = prim $sub01C0<tensor[4,4]; %6> (_t1217, _t121C);
    real _t121E = time05D4[0];
    vec3 _t121F = prim *0036<$[3]> (_t121E, dPos05D3);
    vec3 _t1220 = prim +0017<$[3]> (_t121F, refPos05D2);
    real _t1221 = _t1220[0];
    real _t1222 = time05D4[0];
    vec3 _t1223 = prim *0036<$[3]> (_t1222, dPos05D3);
    vec3 _t1224 = prim +0017<$[3]> (_t1223, refPos05D2);
    real _t1225 = _t1224[1];
    real _t1226 = time05D4[0];
    vec3 _t1227 = prim *0036<$[3]> (_t1226, dPos05D3);
    vec3 _t1228 = prim +0017<$[3]> (_t1227, refPos05D2);
    real _t1229 = _t1228[2];
    real _t122A = 0.1e1;
    vec4 _t122B = [_t1221, _t1225, _t1229, _t122A];
    vec4 _t122C = prim •00CE<$[4,4]; $[4]; $[4]> (_t121D, _t122B);
    real _t122D = _t122C[2];
    vec3 _t122E = [_t0C05, _t0F19, _t122D];
    real _t122F = time05D4[1];
    int _t1230 = prim $r2i01B7 (_t122F);
    int[2] _t1231 = func nextCell405D8 (_t1230, cellId05D1, mesh05D0);
    int _t1232 = 1;
    int _t1233 = prim $sub01C0<int; %2> (_t1231, _t1232);
    Femdata: MeshPos _t1234 = extractFemItemN((mesh05D0, _t08F1, _t122E, _t1233),RefBuild(Mesh),);
    return _t1234;
  } else {
    real _t1235 = time05D4[0];
    vec3 _t1236 = prim *0036<$[3]> (_t1235, dPos05D3);
    vec3 _t1237 = prim +0017<$[3]> (_t1236, refPos05D2);
    Femdata: MeshPos _t1238 = extractFemItemN((mesh05D0, _t1237),InvalidBuildBoundary(MeshPos),);
    return _t1238;
  }
}
function int[2]#8 nextCell405D8 (int faceIdx1239, int cell123A, Femdata: Mesh mesh123B)
{
  int _t123C = 12;
  int _t123D = prim *0033 (cell123A, _t123C);
  int _t123E = 2;
  int _t123F = prim *0033 (faceIdx1239, _t123E);
  int _t1240 = prim +0015 (_t123D, _t123F);
  int[2] _t1241 = extractFemItemN((mesh123B, _t1240),CellFaceCell(Mesh),);
  return _t1241;
}
function vec2#0 _enter1242 (vec3 refPos1243, vec3 dPos1244)
{
  real time1245 = +inf;
  int face1246 = -1;
  real faceTime1247 = -inf;
  real _t1248 = -0.5e0;
  real _t1249 = 0.e0;
  real _t124A = 0.e0;
  real _t124B = 0.1e1;
  vec3 _t124C = [_t1249, _t124A, _t124B];
  real _t124D = prim •00CE<$[3]; $[3]; $[]> (_t124C, refPos1243);
  real _t124E = prim -0026<$[]> (_t1248, _t124D);
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  real _t1251 = 0.1e1;
  vec3 _t1252 = [_t124F, _t1250, _t1251];
  real _t1253 = prim •00CE<$[3]; $[3]; $[]> (_t1252, dPos1244);
  real _t1254 = prim /0055 (_t124E, _t1253);
  real _t1255 = -0.1e-15;
  bool _t1256 = prim >=007E (_t1254, _t1255);
  real _t1257 = -0.5e0;
  real _t1258 = 0.e0;
  real _t1259 = 0.e0;
  real _t125A = 0.1e1;
  vec3 _t125B = [_t1258, _t1259, _t125A];
  real _t125C = prim •00CE<$[3]; $[3]; $[]> (_t125B, refPos1243);
  real _t125D = prim -0026<$[]> (_t1257, _t125C);
  real _t125E = 0.e0;
  real _t125F = 0.e0;
  real _t1260 = 0.1e1;
  vec3 _t1261 = [_t125E, _t125F, _t1260];
  real _t1262 = prim •00CE<$[3]; $[3]; $[]> (_t1261, dPos1244);
  real _t1263 = prim /0055 (_t125D, _t1262);
  bool _t1264 = prim >0080 (time1245, _t1263);
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  real _t1267 = 0.1e1;
  vec3 _t1268 = [_t1265, _t1266, _t1267];
  real _t1269 = prim •00CE<$[3]; $[3]; $[]> (_t1268, dPos1244);
  real _t126A = prim |()|00B5<$[]> (_t1269);
  real _t126B = 0.1e-20;
  bool _t126C = prim >=007E (_t126A, _t126B);
  bool _t126D = prim $and01C4 (_t1264, _t126C);
  bool _t126E = prim $and01C4 (_t1256, _t126D);
  if _t126E {
    real _t126F = -0.5e0;
    real _t1270 = 0.e0;
    real _t1271 = 0.e0;
    real _t1272 = 0.1e1;
    vec3 _t1273 = [_t1270, _t1271, _t1272];
    real _t1274 = prim •00CE<$[3]; $[3]; $[]> (_t1273, refPos1243);
    real _t1275 = prim -0026<$[]> (_t126F, _t1274);
    real _t1276 = 0.e0;
    real _t1277 = 0.e0;
    real _t1278 = 0.1e1;
    vec3 _t1279 = [_t1276, _t1277, _t1278];
    real _t127A = prim •00CE<$[3]; $[3]; $[]> (_t1279, dPos1244);
    real _t127B = prim /0055 (_t1275, _t127A);
    vec3 _t127C = prim *0038<$[3]> (dPos1244, _t127B);
    vec3 _t127D = prim +0017<$[3]> (refPos1243, _t127C);
    real _t127E = -0.5e0;
    real _t127F = 0.e0;
    real _t1280 = 0.e0;
    real _t1281 = 0.1e1;
    vec3 _t1282 = [_t127F, _t1280, _t1281];
    real _t1283 = prim •00CE<$[3]; $[3]; $[]> (_t1282, refPos1243);
    real _t1284 = prim -0026<$[]> (_t127E, _t1283);
    real _t1285 = 0.e0;
    real _t1286 = 0.e0;
    real _t1287 = 0.1e1;
    vec3 _t1288 = [_t1285, _t1286, _t1287];
    real _t1289 = prim •00CE<$[3]; $[3]; $[]> (_t1288, dPos1244);
    real _t128A = prim /0055 (_t1284, _t1289);
    vec3 _t128B = prim *0038<$[3]> (dPos1244, _t128A);
    vec3 _t128C = prim +0017<$[3]> (refPos1243, _t128B);
    real _t128D = 0.1e-8;
    bool _t128E = extractFemItemN((_t127D, _t128C, _t128D),InsideInsert(File=checkInside.in)(Mesh),);
    if _t128E {
      real _t128F = -0.5e0;
      real _t1290 = 0.e0;
      real _t1291 = 0.e0;
      real _t1292 = 0.1e1;
      vec3 _t1293 = [_t1290, _t1291, _t1292];
      real _t1294 = prim •00CE<$[3]; $[3]; $[]> (_t1293, refPos1243);
      real _t1295 = prim -0026<$[]> (_t128F, _t1294);
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      real _t1298 = 0.1e1;
      vec3 _t1299 = [_t1296, _t1297, _t1298];
      real _t129A = prim •00CE<$[3]; $[3]; $[]> (_t1299, dPos1244);
      time1245 = prim /0055 (_t1295, _t129A);
      face1246 = 0;
    }
  }
  real _t129B = 0.5e0;
  real _t129C = 0.e0;
  real _t129D = 0.e0;
  real _t129E = 0.1e1;
  vec3 _t129F = [_t129C, _t129D, _t129E];
  real _t12A0 = prim •00CE<$[3]; $[3]; $[]> (_t129F, refPos1243);
  real _t12A1 = prim -0026<$[]> (_t129B, _t12A0);
  real _t12A2 = 0.e0;
  real _t12A3 = 0.e0;
  real _t12A4 = 0.1e1;
  vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
  real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, dPos1244);
  real _t12A7 = prim /0055 (_t12A1, _t12A6);
  real _t12A8 = -0.1e-15;
  bool _t12A9 = prim >=007E (_t12A7, _t12A8);
  real _t12AA = 0.5e0;
  real _t12AB = 0.e0;
  real _t12AC = 0.e0;
  real _t12AD = 0.1e1;
  vec3 _t12AE = [_t12AB, _t12AC, _t12AD];
  real _t12AF = prim •00CE<$[3]; $[3]; $[]> (_t12AE, refPos1243);
  real _t12B0 = prim -0026<$[]> (_t12AA, _t12AF);
  real _t12B1 = 0.e0;
  real _t12B2 = 0.e0;
  real _t12B3 = 0.1e1;
  vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
  real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, dPos1244);
  real _t12B6 = prim /0055 (_t12B0, _t12B5);
  bool _t12B7 = prim >0080 (time1245, _t12B6);
  real _t12B8 = 0.e0;
  real _t12B9 = 0.e0;
  real _t12BA = 0.1e1;
  vec3 _t12BB = [_t12B8, _t12B9, _t12BA];
  real _t12BC = prim •00CE<$[3]; $[3]; $[]> (_t12BB, dPos1244);
  real _t12BD = prim |()|00B5<$[]> (_t12BC);
  real _t12BE = 0.1e-20;
  bool _t12BF = prim >=007E (_t12BD, _t12BE);
  bool _t12C0 = prim $and01C4 (_t12B7, _t12BF);
  bool _t12C1 = prim $and01C4 (_t12A9, _t12C0);
  if _t12C1 {
    real _t12C2 = 0.5e0;
    real _t12C3 = 0.e0;
    real _t12C4 = 0.e0;
    real _t12C5 = 0.1e1;
    vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
    real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, refPos1243);
    real _t12C8 = prim -0026<$[]> (_t12C2, _t12C7);
    real _t12C9 = 0.e0;
    real _t12CA = 0.e0;
    real _t12CB = 0.1e1;
    vec3 _t12CC = [_t12C9, _t12CA, _t12CB];
    real _t12CD = prim •00CE<$[3]; $[3]; $[]> (_t12CC, dPos1244);
    real _t12CE = prim /0055 (_t12C8, _t12CD);
    vec3 _t12CF = prim *0038<$[3]> (dPos1244, _t12CE);
    vec3 _t12D0 = prim +0017<$[3]> (refPos1243, _t12CF);
    real _t12D1 = 0.5e0;
    real _t12D2 = 0.e0;
    real _t12D3 = 0.e0;
    real _t12D4 = 0.1e1;
    vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
    real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, refPos1243);
    real _t12D7 = prim -0026<$[]> (_t12D1, _t12D6);
    real _t12D8 = 0.e0;
    real _t12D9 = 0.e0;
    real _t12DA = 0.1e1;
    vec3 _t12DB = [_t12D8, _t12D9, _t12DA];
    real _t12DC = prim •00CE<$[3]; $[3]; $[]> (_t12DB, dPos1244);
    real _t12DD = prim /0055 (_t12D7, _t12DC);
    vec3 _t12DE = prim *0038<$[3]> (dPos1244, _t12DD);
    vec3 _t12DF = prim +0017<$[3]> (refPos1243, _t12DE);
    real _t12E0 = 0.1e-8;
    bool _t12E1 = extractFemItemN((_t12D0, _t12DF, _t12E0),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12E1 {
      real _t12E2 = 0.5e0;
      real _t12E3 = 0.e0;
      real _t12E4 = 0.e0;
      real _t12E5 = 0.1e1;
      vec3 _t12E6 = [_t12E3, _t12E4, _t12E5];
      real _t12E7 = prim •00CE<$[3]; $[3]; $[]> (_t12E6, refPos1243);
      real _t12E8 = prim -0026<$[]> (_t12E2, _t12E7);
      real _t12E9 = 0.e0;
      real _t12EA = 0.e0;
      real _t12EB = 0.1e1;
      vec3 _t12EC = [_t12E9, _t12EA, _t12EB];
      real _t12ED = prim •00CE<$[3]; $[3]; $[]> (_t12EC, dPos1244);
      time1245 = prim /0055 (_t12E8, _t12ED);
      face1246 = 1;
    }
  }
  real _t12EE = -0.5e0;
  real _t12EF = 0.e0;
  real _t12F0 = 0.1e1;
  real _t12F1 = 0.e0;
  vec3 _t12F2 = [_t12EF, _t12F0, _t12F1];
  real _t12F3 = prim •00CE<$[3]; $[3]; $[]> (_t12F2, refPos1243);
  real _t12F4 = prim -0026<$[]> (_t12EE, _t12F3);
  real _t12F5 = 0.e0;
  real _t12F6 = 0.1e1;
  real _t12F7 = 0.e0;
  vec3 _t12F8 = [_t12F5, _t12F6, _t12F7];
  real _t12F9 = prim •00CE<$[3]; $[3]; $[]> (_t12F8, dPos1244);
  real _t12FA = prim /0055 (_t12F4, _t12F9);
  real _t12FB = -0.1e-15;
  bool _t12FC = prim >=007E (_t12FA, _t12FB);
  real _t12FD = -0.5e0;
  real _t12FE = 0.e0;
  real _t12FF = 0.1e1;
  real _t1300 = 0.e0;
  vec3 _t1301 = [_t12FE, _t12FF, _t1300];
  real _t1302 = prim •00CE<$[3]; $[3]; $[]> (_t1301, refPos1243);
  real _t1303 = prim -0026<$[]> (_t12FD, _t1302);
  real _t1304 = 0.e0;
  real _t1305 = 0.1e1;
  real _t1306 = 0.e0;
  vec3 _t1307 = [_t1304, _t1305, _t1306];
  real _t1308 = prim •00CE<$[3]; $[3]; $[]> (_t1307, dPos1244);
  real _t1309 = prim /0055 (_t1303, _t1308);
  bool _t130A = prim >0080 (time1245, _t1309);
  real _t130B = 0.e0;
  real _t130C = 0.1e1;
  real _t130D = 0.e0;
  vec3 _t130E = [_t130B, _t130C, _t130D];
  real _t130F = prim •00CE<$[3]; $[3]; $[]> (_t130E, dPos1244);
  real _t1310 = prim |()|00B5<$[]> (_t130F);
  real _t1311 = 0.1e-20;
  bool _t1312 = prim >=007E (_t1310, _t1311);
  bool _t1313 = prim $and01C4 (_t130A, _t1312);
  bool _t1314 = prim $and01C4 (_t12FC, _t1313);
  if _t1314 {
    real _t1315 = -0.5e0;
    real _t1316 = 0.e0;
    real _t1317 = 0.1e1;
    real _t1318 = 0.e0;
    vec3 _t1319 = [_t1316, _t1317, _t1318];
    real _t131A = prim •00CE<$[3]; $[3]; $[]> (_t1319, refPos1243);
    real _t131B = prim -0026<$[]> (_t1315, _t131A);
    real _t131C = 0.e0;
    real _t131D = 0.1e1;
    real _t131E = 0.e0;
    vec3 _t131F = [_t131C, _t131D, _t131E];
    real _t1320 = prim •00CE<$[3]; $[3]; $[]> (_t131F, dPos1244);
    real _t1321 = prim /0055 (_t131B, _t1320);
    vec3 _t1322 = prim *0038<$[3]> (dPos1244, _t1321);
    vec3 _t1323 = prim +0017<$[3]> (refPos1243, _t1322);
    real _t1324 = -0.5e0;
    real _t1325 = 0.e0;
    real _t1326 = 0.1e1;
    real _t1327 = 0.e0;
    vec3 _t1328 = [_t1325, _t1326, _t1327];
    real _t1329 = prim •00CE<$[3]; $[3]; $[]> (_t1328, refPos1243);
    real _t132A = prim -0026<$[]> (_t1324, _t1329);
    real _t132B = 0.e0;
    real _t132C = 0.1e1;
    real _t132D = 0.e0;
    vec3 _t132E = [_t132B, _t132C, _t132D];
    real _t132F = prim •00CE<$[3]; $[3]; $[]> (_t132E, dPos1244);
    real _t1330 = prim /0055 (_t132A, _t132F);
    vec3 _t1331 = prim *0038<$[3]> (dPos1244, _t1330);
    vec3 _t1332 = prim +0017<$[3]> (refPos1243, _t1331);
    real _t1333 = 0.1e-8;
    bool _t1334 = extractFemItemN((_t1323, _t1332, _t1333),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1334 {
      real _t1335 = -0.5e0;
      real _t1336 = 0.e0;
      real _t1337 = 0.1e1;
      real _t1338 = 0.e0;
      vec3 _t1339 = [_t1336, _t1337, _t1338];
      real _t133A = prim •00CE<$[3]; $[3]; $[]> (_t1339, refPos1243);
      real _t133B = prim -0026<$[]> (_t1335, _t133A);
      real _t133C = 0.e0;
      real _t133D = 0.1e1;
      real _t133E = 0.e0;
      vec3 _t133F = [_t133C, _t133D, _t133E];
      real _t1340 = prim •00CE<$[3]; $[3]; $[]> (_t133F, dPos1244);
      time1245 = prim /0055 (_t133B, _t1340);
      face1246 = 2;
    }
  }
  real _t1341 = -0.5e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  real _t1344 = 0.e0;
  vec3 _t1345 = [_t1342, _t1343, _t1344];
  real _t1346 = prim •00CE<$[3]; $[3]; $[]> (_t1345, refPos1243);
  real _t1347 = prim -0026<$[]> (_t1341, _t1346);
  real _t1348 = -0.1e1;
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  vec3 _t134B = [_t1348, _t1349, _t134A];
  real _t134C = prim •00CE<$[3]; $[3]; $[]> (_t134B, dPos1244);
  real _t134D = prim /0055 (_t1347, _t134C);
  real _t134E = -0.1e-15;
  bool _t134F = prim >=007E (_t134D, _t134E);
  real _t1350 = -0.5e0;
  real _t1351 = -0.1e1;
  real _t1352 = 0.e0;
  real _t1353 = 0.e0;
  vec3 _t1354 = [_t1351, _t1352, _t1353];
  real _t1355 = prim •00CE<$[3]; $[3]; $[]> (_t1354, refPos1243);
  real _t1356 = prim -0026<$[]> (_t1350, _t1355);
  real _t1357 = -0.1e1;
  real _t1358 = 0.e0;
  real _t1359 = 0.e0;
  vec3 _t135A = [_t1357, _t1358, _t1359];
  real _t135B = prim •00CE<$[3]; $[3]; $[]> (_t135A, dPos1244);
  real _t135C = prim /0055 (_t1356, _t135B);
  bool _t135D = prim >0080 (time1245, _t135C);
  real _t135E = -0.1e1;
  real _t135F = 0.e0;
  real _t1360 = 0.e0;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = prim •00CE<$[3]; $[3]; $[]> (_t1361, dPos1244);
  real _t1363 = prim |()|00B5<$[]> (_t1362);
  real _t1364 = 0.1e-20;
  bool _t1365 = prim >=007E (_t1363, _t1364);
  bool _t1366 = prim $and01C4 (_t135D, _t1365);
  bool _t1367 = prim $and01C4 (_t134F, _t1366);
  if _t1367 {
    real _t1368 = -0.5e0;
    real _t1369 = -0.1e1;
    real _t136A = 0.e0;
    real _t136B = 0.e0;
    vec3 _t136C = [_t1369, _t136A, _t136B];
    real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos1243);
    real _t136E = prim -0026<$[]> (_t1368, _t136D);
    real _t136F = -0.1e1;
    real _t1370 = 0.e0;
    real _t1371 = 0.e0;
    vec3 _t1372 = [_t136F, _t1370, _t1371];
    real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos1244);
    real _t1374 = prim /0055 (_t136E, _t1373);
    vec3 _t1375 = prim *0038<$[3]> (dPos1244, _t1374);
    vec3 _t1376 = prim +0017<$[3]> (refPos1243, _t1375);
    real _t1377 = -0.5e0;
    real _t1378 = -0.1e1;
    real _t1379 = 0.e0;
    real _t137A = 0.e0;
    vec3 _t137B = [_t1378, _t1379, _t137A];
    real _t137C = prim •00CE<$[3]; $[3]; $[]> (_t137B, refPos1243);
    real _t137D = prim -0026<$[]> (_t1377, _t137C);
    real _t137E = -0.1e1;
    real _t137F = 0.e0;
    real _t1380 = 0.e0;
    vec3 _t1381 = [_t137E, _t137F, _t1380];
    real _t1382 = prim •00CE<$[3]; $[3]; $[]> (_t1381, dPos1244);
    real _t1383 = prim /0055 (_t137D, _t1382);
    vec3 _t1384 = prim *0038<$[3]> (dPos1244, _t1383);
    vec3 _t1385 = prim +0017<$[3]> (refPos1243, _t1384);
    real _t1386 = 0.1e-8;
    bool _t1387 = extractFemItemN((_t1376, _t1385, _t1386),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1387 {
      real _t1388 = -0.5e0;
      real _t1389 = -0.1e1;
      real _t138A = 0.e0;
      real _t138B = 0.e0;
      vec3 _t138C = [_t1389, _t138A, _t138B];
      real _t138D = prim •00CE<$[3]; $[3]; $[]> (_t138C, refPos1243);
      real _t138E = prim -0026<$[]> (_t1388, _t138D);
      real _t138F = -0.1e1;
      real _t1390 = 0.e0;
      real _t1391 = 0.e0;
      vec3 _t1392 = [_t138F, _t1390, _t1391];
      real _t1393 = prim •00CE<$[3]; $[3]; $[]> (_t1392, dPos1244);
      time1245 = prim /0055 (_t138E, _t1393);
      face1246 = 3;
    }
  }
  real _t1394 = -0.5e0;
  real _t1395 = 0.e0;
  real _t1396 = -0.1e1;
  real _t1397 = 0.e0;
  vec3 _t1398 = [_t1395, _t1396, _t1397];
  real _t1399 = prim •00CE<$[3]; $[3]; $[]> (_t1398, refPos1243);
  real _t139A = prim -0026<$[]> (_t1394, _t1399);
  real _t139B = 0.e0;
  real _t139C = -0.1e1;
  real _t139D = 0.e0;
  vec3 _t139E = [_t139B, _t139C, _t139D];
  real _t139F = prim •00CE<$[3]; $[3]; $[]> (_t139E, dPos1244);
  real _t13A0 = prim /0055 (_t139A, _t139F);
  real _t13A1 = -0.1e-15;
  bool _t13A2 = prim >=007E (_t13A0, _t13A1);
  real _t13A3 = -0.5e0;
  real _t13A4 = 0.e0;
  real _t13A5 = -0.1e1;
  real _t13A6 = 0.e0;
  vec3 _t13A7 = [_t13A4, _t13A5, _t13A6];
  real _t13A8 = prim •00CE<$[3]; $[3]; $[]> (_t13A7, refPos1243);
  real _t13A9 = prim -0026<$[]> (_t13A3, _t13A8);
  real _t13AA = 0.e0;
  real _t13AB = -0.1e1;
  real _t13AC = 0.e0;
  vec3 _t13AD = [_t13AA, _t13AB, _t13AC];
  real _t13AE = prim •00CE<$[3]; $[3]; $[]> (_t13AD, dPos1244);
  real _t13AF = prim /0055 (_t13A9, _t13AE);
  bool _t13B0 = prim >0080 (time1245, _t13AF);
  real _t13B1 = 0.e0;
  real _t13B2 = -0.1e1;
  real _t13B3 = 0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos1244);
  real _t13B6 = prim |()|00B5<$[]> (_t13B5);
  real _t13B7 = 0.1e-20;
  bool _t13B8 = prim >=007E (_t13B6, _t13B7);
  bool _t13B9 = prim $and01C4 (_t13B0, _t13B8);
  bool _t13BA = prim $and01C4 (_t13A2, _t13B9);
  if _t13BA {
    real _t13BB = -0.5e0;
    real _t13BC = 0.e0;
    real _t13BD = -0.1e1;
    real _t13BE = 0.e0;
    vec3 _t13BF = [_t13BC, _t13BD, _t13BE];
    real _t13C0 = prim •00CE<$[3]; $[3]; $[]> (_t13BF, refPos1243);
    real _t13C1 = prim -0026<$[]> (_t13BB, _t13C0);
    real _t13C2 = 0.e0;
    real _t13C3 = -0.1e1;
    real _t13C4 = 0.e0;
    vec3 _t13C5 = [_t13C2, _t13C3, _t13C4];
    real _t13C6 = prim •00CE<$[3]; $[3]; $[]> (_t13C5, dPos1244);
    real _t13C7 = prim /0055 (_t13C1, _t13C6);
    vec3 _t13C8 = prim *0038<$[3]> (dPos1244, _t13C7);
    vec3 _t13C9 = prim +0017<$[3]> (refPos1243, _t13C8);
    real _t13CA = -0.5e0;
    real _t13CB = 0.e0;
    real _t13CC = -0.1e1;
    real _t13CD = 0.e0;
    vec3 _t13CE = [_t13CB, _t13CC, _t13CD];
    real _t13CF = prim •00CE<$[3]; $[3]; $[]> (_t13CE, refPos1243);
    real _t13D0 = prim -0026<$[]> (_t13CA, _t13CF);
    real _t13D1 = 0.e0;
    real _t13D2 = -0.1e1;
    real _t13D3 = 0.e0;
    vec3 _t13D4 = [_t13D1, _t13D2, _t13D3];
    real _t13D5 = prim •00CE<$[3]; $[3]; $[]> (_t13D4, dPos1244);
    real _t13D6 = prim /0055 (_t13D0, _t13D5);
    vec3 _t13D7 = prim *0038<$[3]> (dPos1244, _t13D6);
    vec3 _t13D8 = prim +0017<$[3]> (refPos1243, _t13D7);
    real _t13D9 = 0.1e-8;
    bool _t13DA = extractFemItemN((_t13C9, _t13D8, _t13D9),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13DA {
      real _t13DB = -0.5e0;
      real _t13DC = 0.e0;
      real _t13DD = -0.1e1;
      real _t13DE = 0.e0;
      vec3 _t13DF = [_t13DC, _t13DD, _t13DE];
      real _t13E0 = prim •00CE<$[3]; $[3]; $[]> (_t13DF, refPos1243);
      real _t13E1 = prim -0026<$[]> (_t13DB, _t13E0);
      real _t13E2 = 0.e0;
      real _t13E3 = -0.1e1;
      real _t13E4 = 0.e0;
      vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
      real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, dPos1244);
      time1245 = prim /0055 (_t13E1, _t13E6);
      face1246 = 4;
    }
  }
  real _t13E7 = -0.5e0;
  real _t13E8 = 0.1e1;
  real _t13E9 = 0.e0;
  real _t13EA = -0.e0;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, refPos1243);
  real _t13ED = prim -0026<$[]> (_t13E7, _t13EC);
  real _t13EE = 0.1e1;
  real _t13EF = 0.e0;
  real _t13F0 = -0.e0;
  vec3 _t13F1 = [_t13EE, _t13EF, _t13F0];
  real _t13F2 = prim •00CE<$[3]; $[3]; $[]> (_t13F1, dPos1244);
  real _t13F3 = prim /0055 (_t13ED, _t13F2);
  real _t13F4 = -0.1e-15;
  bool _t13F5 = prim >=007E (_t13F3, _t13F4);
  real _t13F6 = -0.5e0;
  real _t13F7 = 0.1e1;
  real _t13F8 = 0.e0;
  real _t13F9 = -0.e0;
  vec3 _t13FA = [_t13F7, _t13F8, _t13F9];
  real _t13FB = prim •00CE<$[3]; $[3]; $[]> (_t13FA, refPos1243);
  real _t13FC = prim -0026<$[]> (_t13F6, _t13FB);
  real _t13FD = 0.1e1;
  real _t13FE = 0.e0;
  real _t13FF = -0.e0;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, dPos1244);
  real _t1402 = prim /0055 (_t13FC, _t1401);
  bool _t1403 = prim >0080 (time1245, _t1402);
  real _t1404 = 0.1e1;
  real _t1405 = 0.e0;
  real _t1406 = -0.e0;
  vec3 _t1407 = [_t1404, _t1405, _t1406];
  real _t1408 = prim •00CE<$[3]; $[3]; $[]> (_t1407, dPos1244);
  real _t1409 = prim |()|00B5<$[]> (_t1408);
  real _t140A = 0.1e-20;
  bool _t140B = prim >=007E (_t1409, _t140A);
  bool _t140C = prim $and01C4 (_t1403, _t140B);
  bool _t140D = prim $and01C4 (_t13F5, _t140C);
  if _t140D {
    real _t140E = -0.5e0;
    real _t140F = 0.1e1;
    real _t1410 = 0.e0;
    real _t1411 = -0.e0;
    vec3 _t1412 = [_t140F, _t1410, _t1411];
    real _t1413 = prim •00CE<$[3]; $[3]; $[]> (_t1412, refPos1243);
    real _t1414 = prim -0026<$[]> (_t140E, _t1413);
    real _t1415 = 0.1e1;
    real _t1416 = 0.e0;
    real _t1417 = -0.e0;
    vec3 _t1418 = [_t1415, _t1416, _t1417];
    real _t1419 = prim •00CE<$[3]; $[3]; $[]> (_t1418, dPos1244);
    real _t141A = prim /0055 (_t1414, _t1419);
    vec3 _t141B = prim *0038<$[3]> (dPos1244, _t141A);
    vec3 _t141C = prim +0017<$[3]> (refPos1243, _t141B);
    real _t141D = -0.5e0;
    real _t141E = 0.1e1;
    real _t141F = 0.e0;
    real _t1420 = -0.e0;
    vec3 _t1421 = [_t141E, _t141F, _t1420];
    real _t1422 = prim •00CE<$[3]; $[3]; $[]> (_t1421, refPos1243);
    real _t1423 = prim -0026<$[]> (_t141D, _t1422);
    real _t1424 = 0.1e1;
    real _t1425 = 0.e0;
    real _t1426 = -0.e0;
    vec3 _t1427 = [_t1424, _t1425, _t1426];
    real _t1428 = prim •00CE<$[3]; $[3]; $[]> (_t1427, dPos1244);
    real _t1429 = prim /0055 (_t1423, _t1428);
    vec3 _t142A = prim *0038<$[3]> (dPos1244, _t1429);
    vec3 _t142B = prim +0017<$[3]> (refPos1243, _t142A);
    real _t142C = 0.1e-8;
    bool _t142D = extractFemItemN((_t141C, _t142B, _t142C),InsideInsert(File=checkInside.in)(Mesh),);
    if _t142D {
      real _t142E = -0.5e0;
      real _t142F = 0.1e1;
      real _t1430 = 0.e0;
      real _t1431 = -0.e0;
      vec3 _t1432 = [_t142F, _t1430, _t1431];
      real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, refPos1243);
      real _t1434 = prim -0026<$[]> (_t142E, _t1433);
      real _t1435 = 0.1e1;
      real _t1436 = 0.e0;
      real _t1437 = -0.e0;
      vec3 _t1438 = [_t1435, _t1436, _t1437];
      real _t1439 = prim •00CE<$[3]; $[3]; $[]> (_t1438, dPos1244);
      time1245 = prim /0055 (_t1434, _t1439);
      face1246 = 5;
    }
  }
  int _t143A = -1;
  bool _t143B = prim !=0086 (face1246, _t143A);
  if _t143B {
    real _t143C = 0.e0;
    real _t143D = prim max0125 (time1245, _t143C);
    real _t143E = (real)face1246;
    vec2 _t143F = [_t143D, _t143E];
    return _t143F;
  } else {
    real _t1440 = -0.1e1;
    real _t1441 = -0.1e1;
    vec2 _t1442 = [_t1440, _t1441];
    return _t1442;
  }
}
function vec2#0 _exit1443 (vec3 refPos1243, vec3 dPos1244, int i1444)
{
  real time1445 = +inf;
  int face1446 = -1;
  real faceTime1447 = -inf;
  real _t1448 = -0.5e0;
  real _t1449 = 0.e0;
  real _t144A = 0.e0;
  real _t144B = 0.1e1;
  vec3 _t144C = [_t1449, _t144A, _t144B];
  real _t144D = prim •00CE<$[3]; $[3]; $[]> (_t144C, refPos1243);
  real _t144E = prim -0026<$[]> (_t1448, _t144D);
  real _t144F = 0.e0;
  real _t1450 = 0.e0;
  real _t1451 = 0.1e1;
  vec3 _t1452 = [_t144F, _t1450, _t1451];
  real _t1453 = prim •00CE<$[3]; $[3]; $[]> (_t1452, dPos1244);
  real _t1454 = prim /0055 (_t144E, _t1453);
  real _t1455 = -0.1e-15;
  bool _t1456 = prim >=007E (_t1454, _t1455);
  real _t1457 = -0.5e0;
  real _t1458 = 0.e0;
  real _t1459 = 0.e0;
  real _t145A = 0.1e1;
  vec3 _t145B = [_t1458, _t1459, _t145A];
  real _t145C = prim •00CE<$[3]; $[3]; $[]> (_t145B, refPos1243);
  real _t145D = prim -0026<$[]> (_t1457, _t145C);
  real _t145E = 0.e0;
  real _t145F = 0.e0;
  real _t1460 = 0.1e1;
  vec3 _t1461 = [_t145E, _t145F, _t1460];
  real _t1462 = prim •00CE<$[3]; $[3]; $[]> (_t1461, dPos1244);
  real _t1463 = prim /0055 (_t145D, _t1462);
  bool _t1464 = prim >0080 (time1445, _t1463);
  real _t1465 = 0.e0;
  real _t1466 = 0.e0;
  real _t1467 = 0.1e1;
  vec3 _t1468 = [_t1465, _t1466, _t1467];
  real _t1469 = prim •00CE<$[3]; $[3]; $[]> (_t1468, dPos1244);
  real _t146A = prim |()|00B5<$[]> (_t1469);
  real _t146B = 0.1e-20;
  bool _t146C = prim >=007E (_t146A, _t146B);
  bool _t146D = prim $and01C4 (_t1464, _t146C);
  bool _t146E = prim $and01C4 (_t1456, _t146D);
  if _t146E {
    int _t146F = 0;
    bool _t1470 = prim !=0086 (i1444, _t146F);
    if _t1470 {
      real _t1471 = -0.5e0;
      real _t1472 = 0.e0;
      real _t1473 = 0.e0;
      real _t1474 = 0.1e1;
      vec3 _t1475 = [_t1472, _t1473, _t1474];
      real _t1476 = prim •00CE<$[3]; $[3]; $[]> (_t1475, refPos1243);
      real _t1477 = prim -0026<$[]> (_t1471, _t1476);
      real _t1478 = 0.e0;
      real _t1479 = 0.e0;
      real _t147A = 0.1e1;
      vec3 _t147B = [_t1478, _t1479, _t147A];
      real _t147C = prim •00CE<$[3]; $[3]; $[]> (_t147B, dPos1244);
      time1445 = prim /0055 (_t1477, _t147C);
      face1446 = 0;
    } else {
      real _t147D = -0.5e0;
      real _t147E = 0.e0;
      real _t147F = 0.e0;
      real _t1480 = 0.1e1;
      vec3 _t1481 = [_t147E, _t147F, _t1480];
      real _t1482 = prim •00CE<$[3]; $[3]; $[]> (_t1481, refPos1243);
      real _t1483 = prim -0026<$[]> (_t147D, _t1482);
      real _t1484 = 0.e0;
      real _t1485 = 0.e0;
      real _t1486 = 0.1e1;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, dPos1244);
      faceTime1447 = prim /0055 (_t1483, _t1488);
    }
  }
  real _t1489 = 0.5e0;
  real _t148A = 0.e0;
  real _t148B = 0.e0;
  real _t148C = 0.1e1;
  vec3 _t148D = [_t148A, _t148B, _t148C];
  real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, refPos1243);
  real _t148F = prim -0026<$[]> (_t1489, _t148E);
  real _t1490 = 0.e0;
  real _t1491 = 0.e0;
  real _t1492 = 0.1e1;
  vec3 _t1493 = [_t1490, _t1491, _t1492];
  real _t1494 = prim •00CE<$[3]; $[3]; $[]> (_t1493, dPos1244);
  real _t1495 = prim /0055 (_t148F, _t1494);
  real _t1496 = -0.1e-15;
  bool _t1497 = prim >=007E (_t1495, _t1496);
  real _t1498 = 0.5e0;
  real _t1499 = 0.e0;
  real _t149A = 0.e0;
  real _t149B = 0.1e1;
  vec3 _t149C = [_t1499, _t149A, _t149B];
  real _t149D = prim •00CE<$[3]; $[3]; $[]> (_t149C, refPos1243);
  real _t149E = prim -0026<$[]> (_t1498, _t149D);
  real _t149F = 0.e0;
  real _t14A0 = 0.e0;
  real _t14A1 = 0.1e1;
  vec3 _t14A2 = [_t149F, _t14A0, _t14A1];
  real _t14A3 = prim •00CE<$[3]; $[3]; $[]> (_t14A2, dPos1244);
  real _t14A4 = prim /0055 (_t149E, _t14A3);
  bool _t14A5 = prim >0080 (time1445, _t14A4);
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = 0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, dPos1244);
  real _t14AB = prim |()|00B5<$[]> (_t14AA);
  real _t14AC = 0.1e-20;
  bool _t14AD = prim >=007E (_t14AB, _t14AC);
  bool _t14AE = prim $and01C4 (_t14A5, _t14AD);
  bool _t14AF = prim $and01C4 (_t1497, _t14AE);
  if _t14AF {
    int _t14B0 = 1;
    bool _t14B1 = prim !=0086 (i1444, _t14B0);
    if _t14B1 {
      real _t14B2 = 0.5e0;
      real _t14B3 = 0.e0;
      real _t14B4 = 0.e0;
      real _t14B5 = 0.1e1;
      vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
      real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, refPos1243);
      real _t14B8 = prim -0026<$[]> (_t14B2, _t14B7);
      real _t14B9 = 0.e0;
      real _t14BA = 0.e0;
      real _t14BB = 0.1e1;
      vec3 _t14BC = [_t14B9, _t14BA, _t14BB];
      real _t14BD = prim •00CE<$[3]; $[3]; $[]> (_t14BC, dPos1244);
      time1445 = prim /0055 (_t14B8, _t14BD);
      face1446 = 1;
    } else {
      real _t14BE = 0.5e0;
      real _t14BF = 0.e0;
      real _t14C0 = 0.e0;
      real _t14C1 = 0.1e1;
      vec3 _t14C2 = [_t14BF, _t14C0, _t14C1];
      real _t14C3 = prim •00CE<$[3]; $[3]; $[]> (_t14C2, refPos1243);
      real _t14C4 = prim -0026<$[]> (_t14BE, _t14C3);
      real _t14C5 = 0.e0;
      real _t14C6 = 0.e0;
      real _t14C7 = 0.1e1;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, dPos1244);
      faceTime1447 = prim /0055 (_t14C4, _t14C9);
    }
  }
  real _t14CA = -0.5e0;
  real _t14CB = 0.e0;
  real _t14CC = 0.1e1;
  real _t14CD = 0.e0;
  vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
  real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, refPos1243);
  real _t14D0 = prim -0026<$[]> (_t14CA, _t14CF);
  real _t14D1 = 0.e0;
  real _t14D2 = 0.1e1;
  real _t14D3 = 0.e0;
  vec3 _t14D4 = [_t14D1, _t14D2, _t14D3];
  real _t14D5 = prim •00CE<$[3]; $[3]; $[]> (_t14D4, dPos1244);
  real _t14D6 = prim /0055 (_t14D0, _t14D5);
  real _t14D7 = -0.1e-15;
  bool _t14D8 = prim >=007E (_t14D6, _t14D7);
  real _t14D9 = -0.5e0;
  real _t14DA = 0.e0;
  real _t14DB = 0.1e1;
  real _t14DC = 0.e0;
  vec3 _t14DD = [_t14DA, _t14DB, _t14DC];
  real _t14DE = prim •00CE<$[3]; $[3]; $[]> (_t14DD, refPos1243);
  real _t14DF = prim -0026<$[]> (_t14D9, _t14DE);
  real _t14E0 = 0.e0;
  real _t14E1 = 0.1e1;
  real _t14E2 = 0.e0;
  vec3 _t14E3 = [_t14E0, _t14E1, _t14E2];
  real _t14E4 = prim •00CE<$[3]; $[3]; $[]> (_t14E3, dPos1244);
  real _t14E5 = prim /0055 (_t14DF, _t14E4);
  bool _t14E6 = prim >0080 (time1445, _t14E5);
  real _t14E7 = 0.e0;
  real _t14E8 = 0.1e1;
  real _t14E9 = 0.e0;
  vec3 _t14EA = [_t14E7, _t14E8, _t14E9];
  real _t14EB = prim •00CE<$[3]; $[3]; $[]> (_t14EA, dPos1244);
  real _t14EC = prim |()|00B5<$[]> (_t14EB);
  real _t14ED = 0.1e-20;
  bool _t14EE = prim >=007E (_t14EC, _t14ED);
  bool _t14EF = prim $and01C4 (_t14E6, _t14EE);
  bool _t14F0 = prim $and01C4 (_t14D8, _t14EF);
  if _t14F0 {
    int _t14F1 = 2;
    bool _t14F2 = prim !=0086 (i1444, _t14F1);
    if _t14F2 {
      real _t14F3 = -0.5e0;
      real _t14F4 = 0.e0;
      real _t14F5 = 0.1e1;
      real _t14F6 = 0.e0;
      vec3 _t14F7 = [_t14F4, _t14F5, _t14F6];
      real _t14F8 = prim •00CE<$[3]; $[3]; $[]> (_t14F7, refPos1243);
      real _t14F9 = prim -0026<$[]> (_t14F3, _t14F8);
      real _t14FA = 0.e0;
      real _t14FB = 0.1e1;
      real _t14FC = 0.e0;
      vec3 _t14FD = [_t14FA, _t14FB, _t14FC];
      real _t14FE = prim •00CE<$[3]; $[3]; $[]> (_t14FD, dPos1244);
      time1445 = prim /0055 (_t14F9, _t14FE);
      face1446 = 2;
    } else {
      real _t14FF = -0.5e0;
      real _t1500 = 0.e0;
      real _t1501 = 0.1e1;
      real _t1502 = 0.e0;
      vec3 _t1503 = [_t1500, _t1501, _t1502];
      real _t1504 = prim •00CE<$[3]; $[3]; $[]> (_t1503, refPos1243);
      real _t1505 = prim -0026<$[]> (_t14FF, _t1504);
      real _t1506 = 0.e0;
      real _t1507 = 0.1e1;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, dPos1244);
      faceTime1447 = prim /0055 (_t1505, _t150A);
    }
  }
  real _t150B = -0.5e0;
  real _t150C = -0.1e1;
  real _t150D = 0.e0;
  real _t150E = 0.e0;
  vec3 _t150F = [_t150C, _t150D, _t150E];
  real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, refPos1243);
  real _t1511 = prim -0026<$[]> (_t150B, _t1510);
  real _t1512 = -0.1e1;
  real _t1513 = 0.e0;
  real _t1514 = 0.e0;
  vec3 _t1515 = [_t1512, _t1513, _t1514];
  real _t1516 = prim •00CE<$[3]; $[3]; $[]> (_t1515, dPos1244);
  real _t1517 = prim /0055 (_t1511, _t1516);
  real _t1518 = -0.1e-15;
  bool _t1519 = prim >=007E (_t1517, _t1518);
  real _t151A = -0.5e0;
  real _t151B = -0.1e1;
  real _t151C = 0.e0;
  real _t151D = 0.e0;
  vec3 _t151E = [_t151B, _t151C, _t151D];
  real _t151F = prim •00CE<$[3]; $[3]; $[]> (_t151E, refPos1243);
  real _t1520 = prim -0026<$[]> (_t151A, _t151F);
  real _t1521 = -0.1e1;
  real _t1522 = 0.e0;
  real _t1523 = 0.e0;
  vec3 _t1524 = [_t1521, _t1522, _t1523];
  real _t1525 = prim •00CE<$[3]; $[3]; $[]> (_t1524, dPos1244);
  real _t1526 = prim /0055 (_t1520, _t1525);
  bool _t1527 = prim >0080 (time1445, _t1526);
  real _t1528 = -0.1e1;
  real _t1529 = 0.e0;
  real _t152A = 0.e0;
  vec3 _t152B = [_t1528, _t1529, _t152A];
  real _t152C = prim •00CE<$[3]; $[3]; $[]> (_t152B, dPos1244);
  real _t152D = prim |()|00B5<$[]> (_t152C);
  real _t152E = 0.1e-20;
  bool _t152F = prim >=007E (_t152D, _t152E);
  bool _t1530 = prim $and01C4 (_t1527, _t152F);
  bool _t1531 = prim $and01C4 (_t1519, _t1530);
  if _t1531 {
    int _t1532 = 3;
    bool _t1533 = prim !=0086 (i1444, _t1532);
    if _t1533 {
      real _t1534 = -0.5e0;
      real _t1535 = -0.1e1;
      real _t1536 = 0.e0;
      real _t1537 = 0.e0;
      vec3 _t1538 = [_t1535, _t1536, _t1537];
      real _t1539 = prim •00CE<$[3]; $[3]; $[]> (_t1538, refPos1243);
      real _t153A = prim -0026<$[]> (_t1534, _t1539);
      real _t153B = -0.1e1;
      real _t153C = 0.e0;
      real _t153D = 0.e0;
      vec3 _t153E = [_t153B, _t153C, _t153D];
      real _t153F = prim •00CE<$[3]; $[3]; $[]> (_t153E, dPos1244);
      time1445 = prim /0055 (_t153A, _t153F);
      face1446 = 3;
    } else {
      real _t1540 = -0.5e0;
      real _t1541 = -0.1e1;
      real _t1542 = 0.e0;
      real _t1543 = 0.e0;
      vec3 _t1544 = [_t1541, _t1542, _t1543];
      real _t1545 = prim •00CE<$[3]; $[3]; $[]> (_t1544, refPos1243);
      real _t1546 = prim -0026<$[]> (_t1540, _t1545);
      real _t1547 = -0.1e1;
      real _t1548 = 0.e0;
      real _t1549 = 0.e0;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, dPos1244);
      faceTime1447 = prim /0055 (_t1546, _t154B);
    }
  }
  real _t154C = -0.5e0;
  real _t154D = 0.e0;
  real _t154E = -0.1e1;
  real _t154F = 0.e0;
  vec3 _t1550 = [_t154D, _t154E, _t154F];
  real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, refPos1243);
  real _t1552 = prim -0026<$[]> (_t154C, _t1551);
  real _t1553 = 0.e0;
  real _t1554 = -0.1e1;
  real _t1555 = 0.e0;
  vec3 _t1556 = [_t1553, _t1554, _t1555];
  real _t1557 = prim •00CE<$[3]; $[3]; $[]> (_t1556, dPos1244);
  real _t1558 = prim /0055 (_t1552, _t1557);
  real _t1559 = -0.1e-15;
  bool _t155A = prim >=007E (_t1558, _t1559);
  real _t155B = -0.5e0;
  real _t155C = 0.e0;
  real _t155D = -0.1e1;
  real _t155E = 0.e0;
  vec3 _t155F = [_t155C, _t155D, _t155E];
  real _t1560 = prim •00CE<$[3]; $[3]; $[]> (_t155F, refPos1243);
  real _t1561 = prim -0026<$[]> (_t155B, _t1560);
  real _t1562 = 0.e0;
  real _t1563 = -0.1e1;
  real _t1564 = 0.e0;
  vec3 _t1565 = [_t1562, _t1563, _t1564];
  real _t1566 = prim •00CE<$[3]; $[3]; $[]> (_t1565, dPos1244);
  real _t1567 = prim /0055 (_t1561, _t1566);
  bool _t1568 = prim >0080 (time1445, _t1567);
  real _t1569 = 0.e0;
  real _t156A = -0.1e1;
  real _t156B = 0.e0;
  vec3 _t156C = [_t1569, _t156A, _t156B];
  real _t156D = prim •00CE<$[3]; $[3]; $[]> (_t156C, dPos1244);
  real _t156E = prim |()|00B5<$[]> (_t156D);
  real _t156F = 0.1e-20;
  bool _t1570 = prim >=007E (_t156E, _t156F);
  bool _t1571 = prim $and01C4 (_t1568, _t1570);
  bool _t1572 = prim $and01C4 (_t155A, _t1571);
  if _t1572 {
    int _t1573 = 4;
    bool _t1574 = prim !=0086 (i1444, _t1573);
    if _t1574 {
      real _t1575 = -0.5e0;
      real _t1576 = 0.e0;
      real _t1577 = -0.1e1;
      real _t1578 = 0.e0;
      vec3 _t1579 = [_t1576, _t1577, _t1578];
      real _t157A = prim •00CE<$[3]; $[3]; $[]> (_t1579, refPos1243);
      real _t157B = prim -0026<$[]> (_t1575, _t157A);
      real _t157C = 0.e0;
      real _t157D = -0.1e1;
      real _t157E = 0.e0;
      vec3 _t157F = [_t157C, _t157D, _t157E];
      real _t1580 = prim •00CE<$[3]; $[3]; $[]> (_t157F, dPos1244);
      time1445 = prim /0055 (_t157B, _t1580);
      face1446 = 4;
    } else {
      real _t1581 = -0.5e0;
      real _t1582 = 0.e0;
      real _t1583 = -0.1e1;
      real _t1584 = 0.e0;
      vec3 _t1585 = [_t1582, _t1583, _t1584];
      real _t1586 = prim •00CE<$[3]; $[3]; $[]> (_t1585, refPos1243);
      real _t1587 = prim -0026<$[]> (_t1581, _t1586);
      real _t1588 = 0.e0;
      real _t1589 = -0.1e1;
      real _t158A = 0.e0;
      vec3 _t158B = [_t1588, _t1589, _t158A];
      real _t158C = prim •00CE<$[3]; $[3]; $[]> (_t158B, dPos1244);
      faceTime1447 = prim /0055 (_t1587, _t158C);
    }
  }
  real _t158D = -0.5e0;
  real _t158E = 0.1e1;
  real _t158F = 0.e0;
  real _t1590 = -0.e0;
  vec3 _t1591 = [_t158E, _t158F, _t1590];
  real _t1592 = prim •00CE<$[3]; $[3]; $[]> (_t1591, refPos1243);
  real _t1593 = prim -0026<$[]> (_t158D, _t1592);
  real _t1594 = 0.1e1;
  real _t1595 = 0.e0;
  real _t1596 = -0.e0;
  vec3 _t1597 = [_t1594, _t1595, _t1596];
  real _t1598 = prim •00CE<$[3]; $[3]; $[]> (_t1597, dPos1244);
  real _t1599 = prim /0055 (_t1593, _t1598);
  real _t159A = -0.1e-15;
  bool _t159B = prim >=007E (_t1599, _t159A);
  real _t159C = -0.5e0;
  real _t159D = 0.1e1;
  real _t159E = 0.e0;
  real _t159F = -0.e0;
  vec3 _t15A0 = [_t159D, _t159E, _t159F];
  real _t15A1 = prim •00CE<$[3]; $[3]; $[]> (_t15A0, refPos1243);
  real _t15A2 = prim -0026<$[]> (_t159C, _t15A1);
  real _t15A3 = 0.1e1;
  real _t15A4 = 0.e0;
  real _t15A5 = -0.e0;
  vec3 _t15A6 = [_t15A3, _t15A4, _t15A5];
  real _t15A7 = prim •00CE<$[3]; $[3]; $[]> (_t15A6, dPos1244);
  real _t15A8 = prim /0055 (_t15A2, _t15A7);
  bool _t15A9 = prim >0080 (time1445, _t15A8);
  real _t15AA = 0.1e1;
  real _t15AB = 0.e0;
  real _t15AC = -0.e0;
  vec3 _t15AD = [_t15AA, _t15AB, _t15AC];
  real _t15AE = prim •00CE<$[3]; $[3]; $[]> (_t15AD, dPos1244);
  real _t15AF = prim |()|00B5<$[]> (_t15AE);
  real _t15B0 = 0.1e-20;
  bool _t15B1 = prim >=007E (_t15AF, _t15B0);
  bool _t15B2 = prim $and01C4 (_t15A9, _t15B1);
  bool _t15B3 = prim $and01C4 (_t159B, _t15B2);
  if _t15B3 {
    int _t15B4 = 5;
    bool _t15B5 = prim !=0086 (i1444, _t15B4);
    if _t15B5 {
      real _t15B6 = -0.5e0;
      real _t15B7 = 0.1e1;
      real _t15B8 = 0.e0;
      real _t15B9 = -0.e0;
      vec3 _t15BA = [_t15B7, _t15B8, _t15B9];
      real _t15BB = prim •00CE<$[3]; $[3]; $[]> (_t15BA, refPos1243);
      real _t15BC = prim -0026<$[]> (_t15B6, _t15BB);
      real _t15BD = 0.1e1;
      real _t15BE = 0.e0;
      real _t15BF = -0.e0;
      vec3 _t15C0 = [_t15BD, _t15BE, _t15BF];
      real _t15C1 = prim •00CE<$[3]; $[3]; $[]> (_t15C0, dPos1244);
      time1445 = prim /0055 (_t15BC, _t15C1);
      face1446 = 5;
    } else {
      real _t15C2 = -0.5e0;
      real _t15C3 = 0.1e1;
      real _t15C4 = 0.e0;
      real _t15C5 = -0.e0;
      vec3 _t15C6 = [_t15C3, _t15C4, _t15C5];
      real _t15C7 = prim •00CE<$[3]; $[3]; $[]> (_t15C6, refPos1243);
      real _t15C8 = prim -0026<$[]> (_t15C2, _t15C7);
      real _t15C9 = 0.1e1;
      real _t15CA = 0.e0;
      real _t15CB = -0.e0;
      vec3 _t15CC = [_t15C9, _t15CA, _t15CB];
      real _t15CD = prim •00CE<$[3]; $[3]; $[]> (_t15CC, dPos1244);
      faceTime1447 = prim /0055 (_t15C8, _t15CD);
    }
  }
  int _t15CE = -1;
  bool _t15CF = prim !=0086 (face1446, _t15CE);
  if _t15CF {
    real _t15D0 = 0.e0;
    real _t15D1 = prim max0125 (time1445, _t15D0);
    real _t15D2 = (real)face1446;
    vec2 _t15D3 = [_t15D1, _t15D2];
    return _t15D3;
  } else {
    real _t15D4 = -inf;
    bool _t15D5 = prim ==0084 (_t15D4, faceTime1447);
    if _t15D5 {
      real _t15D6 = -0.1e1;
      real _t15D7 = -0.1e1;
      vec2 _t15D8 = [_t15D6, _t15D7];
      return _t15D8;
    } else {
      real _t15D9 = (real)i1444;
      vec2 _t15DA = [faceTime1447, _t15D9];
      return _t15DA;
    }
  }
}
function Femdata: Mesh#0 domain15DB (Femdata: Space arg015DC)
{
  Femdata: Mesh _t15DD = extractFem(arg015DC, Mesh);
  return _t15DD;
}
function Femdata: Space#0 space15DE (Femdata: FemFunc arg015DF)
{
  Femdata: Space _t15E0 = extractFem(arg015DF, Space);
  return _t15E0;
}
function Femdata: FuncCell#3 funcCell15E1 (Femdata: FemFunc arg015E2, Femdata: MeshCell arg115E3)
{
  int _t15E4 = extractFemItem(CellIndex(MeshCell), int, arg115E3);
  Femdata: FuncCell _t15E5 = loadFem(FuncCell, arg015E2, _t15E4);
  return _t15E5;
}
function real#1 atent160C (real a0160D, real d160E)
{
  real _t160F = 0.e0;
  real _t1610 = 0.1e1;
  real _t1611 = 0.15e1;
  real _t1612 = 0.1e1;
  real _t1613 = prim |()|00B5<$[]> (d160E);
  real _t1614 = prim /0055 (_t1613, thick0525);
  real _t1615 = prim -0026<$[]> (_t1612, _t1614);
  real _t1616 = prim *0034 (_t1611, _t1615);
  real _t1617 = prim clamp0094<$[]> (_t160F, _t1610, _t1616);
  real _t1618 = prim *0034 (a0160D, _t1617);
  return _t1618;
}
function vec3#1 fStep1619 (vec3 x161A)
{
  bool _t161B = prim !00BC (analytical053F);
  if _t161B {
    field(3)[3] _t161C = prim ∇00A8<#∞; %3> (F15EE);
    field(3)[3,3] _t161D = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t161C);
    tensor[3,3] _t161E = prim @00A5<#∞; %3; $[3,3]> (_t161D, x161A);
    vec3[3] E161F = prim evecs00A0 (_t161E);
    field(3)[3] _t1620 = prim ∇00A8<#∞; %3> (F15EE);
    field(3)[3,3] _t1621 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1620);
    tensor[3,3] _t1622 = prim @00A5<#∞; %3; $[3,3]> (_t1621, x161A);
    real[3] L1623 = prim evals009F (_t1622);
    int _t1624 = 2;
    vec3 _t1625 = prim $sub01C0<vec3; %3> (E161F, _t1624);
    int _t1626 = 2;
    vec3 _t1627 = prim $sub01C0<vec3; %3> (E161F, _t1626);
    tensor[3,3] _t1628 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1625, _t1627);
    int _t1629 = 2;
    real _t162A = prim $sub01C0<real; %3> (L1623, _t1629);
    tensor[3,3] _t162B = prim /0057<$[3,3]> (_t1628, _t162A);
    int _t162C = 1;
    vec3 _t162D = prim $sub01C0<vec3; %3> (E161F, _t162C);
    int _t162E = 1;
    vec3 _t162F = prim $sub01C0<vec3; %3> (E161F, _t162E);
    tensor[3,3] _t1630 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t162D, _t162F);
    int _t1631 = 1;
    real _t1632 = prim $sub01C0<real; %3> (L1623, _t1631);
    tensor[3,3] _t1633 = prim /0057<$[3,3]> (_t1630, _t1632);
    tensor[3,3] _t1634 = prim +0017<$[3,3]> (_t162B, _t1633);
    tensor[3,3] _t1635 = prim unary -008B<$[3,3]> (_t1634);
    field(3)[3] _t1636 = prim ∇00A8<#∞; %3> (F15EE);
    vec3 _t1637 = prim @00A5<#∞; %3; $[3]> (_t1636, x161A);
    vec3 _t1638 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1635, _t1637);
    return _t1638;
  } else {
    field#1(3)[3] _t1639 = prim ∇00A8<#2; %3> (G160B);
    field#0(3)[3,3] _t163A = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1639);
    tensor[3,3] _t163B = prim @00A5<#0; %3; $[3,3]> (_t163A, x161A);
    vec3[3] E163C = prim evecs00A0 (_t163B);
    field#1(3)[3] _t163D = prim ∇00A8<#2; %3> (G160B);
    field#0(3)[3,3] _t163E = prim ∇⊗00AD<#1; %3; $[]; %3> (_t163D);
    tensor[3,3] _t163F = prim @00A5<#0; %3; $[3,3]> (_t163E, x161A);
    real[3] L1640 = prim evals009F (_t163F);
    int _t1641 = 2;
    vec3 _t1642 = prim $sub01C0<vec3; %3> (E163C, _t1641);
    int _t1643 = 2;
    vec3 _t1644 = prim $sub01C0<vec3; %3> (E163C, _t1643);
    tensor[3,3] _t1645 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1642, _t1644);
    int _t1646 = 2;
    real _t1647 = prim $sub01C0<real; %3> (L1640, _t1646);
    tensor[3,3] _t1648 = prim /0057<$[3,3]> (_t1645, _t1647);
    int _t1649 = 1;
    vec3 _t164A = prim $sub01C0<vec3; %3> (E163C, _t1649);
    int _t164B = 1;
    vec3 _t164C = prim $sub01C0<vec3; %3> (E163C, _t164B);
    tensor[3,3] _t164D = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t164A, _t164C);
    int _t164E = 1;
    real _t164F = prim $sub01C0<real; %3> (L1640, _t164E);
    tensor[3,3] _t1650 = prim /0057<$[3,3]> (_t164D, _t164F);
    tensor[3,3] _t1651 = prim +0017<$[3,3]> (_t1648, _t1650);
    tensor[3,3] _t1652 = prim unary -008B<$[3,3]> (_t1651);
    field#1(3)[3] _t1653 = prim ∇00A8<#2; %3> (G160B);
    vec3 _t1654 = prim @00A5<#1; %3; $[3]> (_t1653, x161A);
    vec3 _t1655 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1652, _t1654);
    return _t1655;
  }
}
function real#1 fStrength1656 (vec3 x1657)
{
  field(3)[3] _t1658 = prim ∇00A8<#∞; %3> (F15EE);
  field(3)[3,3] _t1659 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1658);
  tensor[3,3] _t165A = prim @00A5<#∞; %3; $[3,3]> (_t1659, x1657);
  real[3] _t165B = prim evals009F (_t165A);
  int _t165C = 1;
  real _t165D = prim $sub01C0<real; %3> (_t165B, _t165C);
  real _t165E = prim unary -008B<$[]> (_t165D);
  field(3)[3] _t165F = prim ∇00A8<#∞; %3> (F15EE);
  vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (_t165F, x1657);
  real _t1661 = prim |()|00B5<$[3]> (_t1660);
  real _t1662 = prim +0017<$[]> (fBias0528, _t1661);
  real _t1663 = prim /0055 (_t165E, _t1662);
  return _t1663;
}
function bool#1 fTest1664 (vec3 x1665)
{
  bool _t1666 = true;
  return _t1666;
}
function real#1 fMask1667 (vec3 x1668)
{
  real _t1669 = 0.1e1;
  return _t1669;
}
function bool#1 posTest166A (vec3 x166B)
{
  bool _t166C;
  Femdata: RefCell _t166D = func refcell057C (block04FD);
  real _t166E = 0.1e-8;
  bool _t166F = extractFemItemN((_t166D, x166B, _t166E),InsideInsert(File=checkInside.in)(Mesh),);
  if _t166F {
    bool _t1670;
    real _t1671 = func fStrength1656 (x166B);
    bool _t1672 = prim >0080 (_t1671, fStrTh0526);
    if _t1672 {
      bool _t1673;
      real _t1674 = func fMask1667 (x166B);
      bool _t1675 = prim >=007E (_t1674, fMaskTh0527);
      if _t1675 {
        _t1673 = func fTest1664 (x166B);
      } else {
        _t1673 = false;
      }
      _t1670 = _t1673;
    } else {
      _t1670 = false;
    }
    _t166C = _t1670;
  } else {
    _t166C = false;
  }
  return _t166C;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115E6 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15E7 = func funcCell15E1 (U050B, c115E6);
  Femdata: FemFunc _t15E8 = extractFem(_t15E7, FemFunc);
  Femdata: FuncCell _t15E9 = func funcCell15E1 (U050B, c115E6);
  Femdata: FemFunc _t15EA = extractFem(_t15E9, FemFunc);
  Femdata: Space _t15EB = extractFem(_t15EA, Space);
  Femdata: FuncCell _t15EC = func funcCell15E1 (U050B, c115E6);
  int _t15ED = extractFemItem(CellIndex(FuncCell), int, _t15EC);
  F15EE = femField(_t15E8,_t15ED,field(3)[],refField,);
  kernel _t15EF = tent;
  IMAGE1D<double[3]> img15F0 = clamp(cmap050F);
  CM15F1 = prim ⊛0074<#0; %1; $[3]> (_t15EF, img15F0);
  C15F2 = F15EE;
  vec3 _t15F3 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN15F4 = prim normalize0137<$[3]> (_t15F3);
  vec3 _t15F5 = prim ×00BE (camN15F4, camUp0518);
  camU15F6 = prim normalize0137<$[3]> (_t15F5);
  camV15F7 = prim ×00BE (camN15F4, camU15F6);
  vec3 _t15F8 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist15F9 = prim |()|00B5<$[3]> (_t15F8);
  real _t15FA = 0.314159265358979323846264338327950288e1;
  real _t15FB = prim *0034 (camFOV051E, _t15FA);
  real _t15FC = 0.36e3;
  real _t15FD = prim /0055 (_t15FB, _t15FC);
  real _t15FE = prim tan0179 (_t15FD);
  camVmax15FF = prim *0034 (_t15FE, camDist15F9);
  real _t1600 = (real)iresU0520;
  real _t1601 = prim *0034 (camVmax15FF, _t1600);
  real _t1602 = (real)iresV0521;
  camUmax1603 = prim /0055 (_t1601, _t1602);
  camNearVsp1604 = prim +0017<$[]> (camNear051C, camDist15F9);
  camFarVsp1605 = prim +0017<$[]> (camFar051D, camDist15F9);
  tensor[3,3] _t1606 = [camU15F6, camV15F7, camN15F4];
  tensor[3,3] _t1607 = prim transpose0145<%3; %3> (_t1606);
  vec3 _t1608 = prim normalize0137<$[3]> (litdir0538);
  litwsp1609 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1607, _t1608);
  kernel _t160A = bspln3;
  G160B = prim ⊛0070<#2; %3; $[]> (umm0541, _t160A);
}
strand ray (int ui1676, int vi1677) {
  real rayU1678;
  real rayV167F;
  real rayN1686;
  vec3 UV1687;
  vec3 rayOrig168A;
  vec3 rayVec168F;
  real alphaFix1694;
  vec3 eyeDir1697;
  real phKa1699;
  real phKd169A;
  real phKs169B;
  real phSp169C;
  output vec4 rgba169D;
  output real raw16A2;
  vec3 rgb16A3;
  real transp16A7;
  {
    real _t1679 = prim unary -008B<$[]> (camUmax1603);
    real _t167A = -0.5e0;
    real _t167B = (real)ui1676;
    real _t167C = (real)iresU0520;
    real _t167D = 0.5e0;
    real _t167E = prim -0026<$[]> (_t167C, _t167D);
    rayU1678 = prim lerp0098<$[]> (_t1679, camUmax1603, _t167A, _t167B, _t167E);
    real _t1680 = prim unary -008B<$[]> (camVmax15FF);
    real _t1681 = -0.5e0;
    real _t1682 = (real)vi1677;
    real _t1683 = (real)iresV0521;
    real _t1684 = 0.5e0;
    real _t1685 = prim -0026<$[]> (_t1683, _t1684);
    rayV167F = prim lerp0098<$[]> (_t1680, camVmax15FF, _t1681, _t1682, _t1685);
    rayN1686 = camNearVsp1604;
    vec3 _t1688 = prim *0036<$[3]> (rayU1678, camU15F6);
    vec3 _t1689 = prim *0036<$[3]> (rayV167F, camV15F7);
    UV1687 = prim +0017<$[3]> (_t1688, _t1689);
    vec3 _t168B;
    if camOrtho051F {
      _t168B = UV1687;
    } else {
      real _t168C = 0.e0;
      real _t168D = 0.e0;
      real _t168E = 0.e0;
      _t168B = [_t168C, _t168D, _t168E];
    }
    rayOrig168A = prim +0017<$[3]> (camEye0510, _t168B);
    vec3 _t1690;
    if camOrtho051F {
      real _t1691 = 0.e0;
      real _t1692 = 0.e0;
      real _t1693 = 0.e0;
      _t1690 = [_t1691, _t1692, _t1693];
    } else {
      _t1690 = prim /0057<$[3]> (UV1687, camDist15F9);
    }
    rayVec168F = prim +0017<$[3]> (camN15F4, _t1690);
    real _t1695 = prim |()|00B5<$[3]> (rayVec168F);
    real _t1696 = prim *0034 (_t1695, rayStep0522);
    alphaFix1694 = prim /0055 (_t1696, refStep0523);
    vec3 _t1698 = prim normalize0137<$[3]> (rayVec168F);
    eyeDir1697 = prim unary -008B<$[3]> (_t1698);
    phKa1699 = phong052B[0];
    phKd169A = phong052B[1];
    phKs169B = phong052B[2];
    phSp169C = phong052B[3];
    real _t169E = 0.e0;
    real _t169F = 0.e0;
    real _t16A0 = 0.e0;
    real _t16A1 = 0.e0;
    rgba169D = [_t169E, _t169F, _t16A0, _t16A1];
    raw16A2 = 0.e0;
    real _t16A4 = 0.e0;
    real _t16A5 = 0.e0;
    real _t16A6 = 0.e0;
    rgb16A3 = [_t16A4, _t16A5, _t16A6];
    transp16A7 = 0.1e1;
  }
  update
  {
    rayN1686 = prim +0017<$[]> (rayN1686, rayStep0522);
    bool _t16A8 = prim >0080 (rayN1686, camFarVsp1605);
    if _t16A8 {
      stabilize;
    }
    vec3 _t16A9 = prim *0036<$[3]> (rayN1686, rayVec168F);
    vec3 pos16AA = prim +0017<$[3]> (rayOrig168A, _t16A9);
    bool _t16AB = func posTest166A (pos16AA);
    bool _t16AC = prim !00BC (_t16AB);
    if _t16AC {
      continue;
    }
    vec3 step16AD = func fStep1619 (pos16AA);
    real _t16AE = prim |()|00B5<$[3]> (step16AD);
    real aa16AF = func atent160C (maxAlpha0529, _t16AE);
    real _t16B0 = 0.e0;
    bool _t16B1 = prim ==0084 (aa16AF, _t16B0);
    if _t16B1 {
      continue;
    }
    real _t16B2 = 0.1e1;
    real _t16B3 = 0.1e1;
    real _t16B4 = prim -0026<$[]> (_t16B3, aa16AF);
    real _t16B5 = prim ^0069 (_t16B4, alphaFix1694);
    aa16AF = prim -0026<$[]> (_t16B2, _t16B5);
    vec3 _t16B6 = prim normalize0137<$[3]> (step16AD);
    vec3 snorm16B7 = prim unary -008B<$[3]> (_t16B6);
    real _t16B8 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, litwsp1609);
    int _t16B9 = 2;
    real dcomp16BA = prim ^0068 (_t16B8, _t16B9);
    real scomp16BB = 0.e0;
    real _t16BC = 0.e0;
    bool _t16BD = prim !=0088 (phKs169B, _t16BC);
    if _t16BD {
      vec3 _t16BE = prim +0017<$[3]> (eyeDir1697, litwsp1609);
      vec3 _t16BF = prim normalize0137<$[3]> (_t16BE);
      real _t16C0 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, _t16BF);
      real _t16C1 = prim |()|00B5<$[]> (_t16C0);
      scomp16BB = prim ^0069 (_t16C1, phSp169C);
    }
    vec3 dcol16C2 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1604, rayN1686, camFarVsp1605);
    real cmin16C3 = cminmax053C[0];
    real cmax16C4 = cminmax053C[1];
    real _t16C5 = 0.1e1;
    real _t16C6 = 0.1e1;
    real _t16C7 = 0.1e1;
    vec3 mcol16C8 = [_t16C5, _t16C6, _t16C7];
    bool _t16C9 = prim !=0088 (cmin16C3, cmax16C4);
    if _t16C9 {
      real _t16CA = 0.e0;
      real _t16CB = 0.1e1;
      vec3 _t16CC = prim +0017<$[3]> (pos16AA, step16AD);
      real _t16CD = prim @00A5<#∞; %3; $[]> (C15F2, _t16CC);
      real _t16CE = prim lerp0098<$[]> (_t16CA, _t16CB, cmin16C3, _t16CD, cmax16C4);
      mcol16C8 = prim @00A5<#0; %1; $[3]> (CM15F1, _t16CE);
    }
    real _t16CF = prim *0034 (transp16A7, aa16AF);
    real _t16D0 = prim *0034 (phKd169A, dcomp16BA);
    real _t16D1 = prim +0017<$[]> (phKa1699, _t16D0);
    vec3 _t16D2 = prim modulate0129<%3> (dcol16C2, mcol16C8);
    vec3 _t16D3 = prim *0036<$[3]> (_t16D1, _t16D2);
    real _t16D4 = prim *0034 (phKs169B, scomp16BB);
    real _t16D5 = 0.1e1;
    real _t16D6 = 0.1e1;
    real _t16D7 = 0.1e1;
    vec3 _t16D8 = [_t16D5, _t16D6, _t16D7];
    vec3 _t16D9 = prim *0036<$[3]> (_t16D4, _t16D8);
    vec3 _t16DA = prim +0017<$[3]> (_t16D3, _t16D9);
    vec3 _t16DB = prim *0036<$[3]> (_t16CF, _t16DA);
    rgb16A3 = prim +0017<$[3]> (rgb16A3, _t16DB);
    real _t16DC = 0.1e1;
    real _t16DD = prim -0026<$[]> (_t16DC, aa16AF);
    transp16A7 = prim *0034 (transp16A7, _t16DD);
    bool _t16DE = prim <007A (transp16A7, transp00524);
    if _t16DE {
      transp16A7 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t16DF = 0.1e1;
    bool _t16E0 = prim <007A (transp16A7, _t16DF);
    if _t16E0 {
      real _t16E1 = 0.1e1;
      real aa16E2 = prim -0026<$[]> (_t16E1, transp16A7);
      real _t16E3 = rgb16A3[0];
      real _t16E4 = prim /0055 (_t16E3, aa16E2);
      real _t16E5 = rgb16A3[1];
      real _t16E6 = prim /0055 (_t16E5, aa16E2);
      real _t16E7 = rgb16A3[2];
      real _t16E8 = prim /0055 (_t16E7, aa16E2);
      rgba169D = [_t16E4, _t16E6, _t16E8, aa16E2];
    }
  }
}
grid(2) {
  int _t16E9 = 0;
  int _t16EA = 1;
  int _t16EB = prim -0024 (iresV0521, _t16EA);
  int[] _t16EC = prim $range01C3 (_t16E9, _t16EB);
  foreach vi16F2 in _t16EC {
    int _t16ED = 0;
    int _t16EE = 1;
    int _t16EF = prim -0024 (iresU0520, _t16EE);
    int[] _t16F0 = prim $range01C3 (_t16ED, _t16EF);
    foreach ui16F1 in _t16F0 {
      new ray (ui16F1, vi16F2);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115E6;
global field(3)[] F15EE;
global field#0(1)[3] CM15F1;
global field(3)[] C15F2;
global vec3 camN15F4;
global vec3 camU15F6;
global vec3 camV15F7;
global real camDist15F9;
global real camVmax15FF;
global real camUmax1603;
global real camNearVsp1604;
global real camFarVsp1605;
global vec3 litwsp1609;
global field#2(3)[] G160B;
function int[2]#8 nextCell405D8 (int faceIdx1239, int cell123A, Femdata: Mesh mesh123B)
{
  int _t123C = 12;
  int _t123D = prim *0033 (cell123A, _t123C);
  int _t123E = 2;
  int _t123F = prim *0033 (faceIdx1239, _t123E);
  int _t1240 = prim +0015 (_t123D, _t123F);
  int[2] _t1241 = extractFemItemN((mesh123B, _t1240),CellFaceCell(Mesh),);
  return _t1241;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115E6 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15E7;
  int _t170A = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t170B = loadFem(FuncCell, U050B, _t170A);
  _t15E7 = _t170B;
  Femdata: FemFunc _t15E8 = extractFem(_t15E7, FemFunc);
  Femdata: FuncCell _t15E9;
  int _t1708 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1709 = loadFem(FuncCell, U050B, _t1708);
  _t15E9 = _t1709;
  Femdata: FemFunc _t15EA = extractFem(_t15E9, FemFunc);
  Femdata: Space _t15EB = extractFem(_t15EA, Space);
  Femdata: FuncCell _t15EC;
  int _t1706 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1707 = loadFem(FuncCell, U050B, _t1706);
  _t15EC = _t1707;
  int _t15ED = extractFemItem(CellIndex(FuncCell), int, _t15EC);
  F15EE = femField(_t15E8,_t15ED,field(3)[],refField,);
  kernel _t15EF = tent;
  IMAGE1D<double[3]> img15F0 = clamp(cmap050F);
  CM15F1 = prim ⊛0074<#0; %1; $[3]> (_t15EF, img15F0);
  C15F2 = F15EE;
  vec3 _t15F3 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN15F4 = prim normalize0137<$[3]> (_t15F3);
  vec3 _t15F5 = prim ×00BE (camN15F4, camUp0518);
  camU15F6 = prim normalize0137<$[3]> (_t15F5);
  camV15F7 = prim ×00BE (camN15F4, camU15F6);
  vec3 _t15F8 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist15F9 = prim |()|00B5<$[3]> (_t15F8);
  real _t15FA = 0.314159265358979323846264338327950288e1;
  real _t15FB = prim *0034 (camFOV051E, _t15FA);
  real _t15FC = 0.36e3;
  real _t15FD = prim /0055 (_t15FB, _t15FC);
  real _t15FE = prim tan0179 (_t15FD);
  camVmax15FF = prim *0034 (_t15FE, camDist15F9);
  real _t1600 = (real)iresU0520;
  real _t1601 = prim *0034 (camVmax15FF, _t1600);
  real _t1602 = (real)iresV0521;
  camUmax1603 = prim /0055 (_t1601, _t1602);
  camNearVsp1604 = prim +0017<$[]> (camNear051C, camDist15F9);
  camFarVsp1605 = prim +0017<$[]> (camFar051D, camDist15F9);
  tensor[3,3] _t1606 = [camU15F6, camV15F7, camN15F4];
  tensor[3,3] _t1607 = prim transpose0145<%3; %3> (_t1606);
  vec3 _t1608 = prim normalize0137<$[3]> (litdir0538);
  litwsp1609 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1607, _t1608);
  kernel _t160A = bspln3;
  G160B = prim ⊛0070<#2; %3; $[]> (umm0541, _t160A);
}
strand ray (int ui1676, int vi1677) {
  real rayU1678;
  real rayV167F;
  real rayN1686;
  vec3 UV1687;
  vec3 rayOrig168A;
  vec3 rayVec168F;
  real alphaFix1694;
  vec3 eyeDir1697;
  real phKa1699;
  real phKd169A;
  real phKs169B;
  real phSp169C;
  output vec4 rgba169D;
  output real raw16A2;
  vec3 rgb16A3;
  real transp16A7;
  {
    real _t1679 = prim unary -008B<$[]> (camUmax1603);
    real _t167A = -0.5e0;
    real _t167B = (real)ui1676;
    real _t167C = (real)iresU0520;
    real _t167D = 0.5e0;
    real _t167E = prim -0026<$[]> (_t167C, _t167D);
    rayU1678 = prim lerp0098<$[]> (_t1679, camUmax1603, _t167A, _t167B, _t167E);
    real _t1680 = prim unary -008B<$[]> (camVmax15FF);
    real _t1681 = -0.5e0;
    real _t1682 = (real)vi1677;
    real _t1683 = (real)iresV0521;
    real _t1684 = 0.5e0;
    real _t1685 = prim -0026<$[]> (_t1683, _t1684);
    rayV167F = prim lerp0098<$[]> (_t1680, camVmax15FF, _t1681, _t1682, _t1685);
    rayN1686 = camNearVsp1604;
    vec3 _t1688 = prim *0036<$[3]> (rayU1678, camU15F6);
    vec3 _t1689 = prim *0036<$[3]> (rayV167F, camV15F7);
    UV1687 = prim +0017<$[3]> (_t1688, _t1689);
    vec3 _t168B;
    if camOrtho051F {
      _t168B = UV1687;
    } else {
      real _t168C = 0.e0;
      real _t168D = 0.e0;
      real _t168E = 0.e0;
      _t168B = [_t168C, _t168D, _t168E];
    }
    rayOrig168A = prim +0017<$[3]> (camEye0510, _t168B);
    vec3 _t1690;
    if camOrtho051F {
      real _t1691 = 0.e0;
      real _t1692 = 0.e0;
      real _t1693 = 0.e0;
      _t1690 = [_t1691, _t1692, _t1693];
    } else {
      _t1690 = prim /0057<$[3]> (UV1687, camDist15F9);
    }
    rayVec168F = prim +0017<$[3]> (camN15F4, _t1690);
    real _t1695 = prim |()|00B5<$[3]> (rayVec168F);
    real _t1696 = prim *0034 (_t1695, rayStep0522);
    alphaFix1694 = prim /0055 (_t1696, refStep0523);
    vec3 _t1698 = prim normalize0137<$[3]> (rayVec168F);
    eyeDir1697 = prim unary -008B<$[3]> (_t1698);
    phKa1699 = phong052B[0];
    phKd169A = phong052B[1];
    phKs169B = phong052B[2];
    phSp169C = phong052B[3];
    real _t169E = 0.e0;
    real _t169F = 0.e0;
    real _t16A0 = 0.e0;
    real _t16A1 = 0.e0;
    rgba169D = [_t169E, _t169F, _t16A0, _t16A1];
    raw16A2 = 0.e0;
    real _t16A4 = 0.e0;
    real _t16A5 = 0.e0;
    real _t16A6 = 0.e0;
    rgb16A3 = [_t16A4, _t16A5, _t16A6];
    transp16A7 = 0.1e1;
  }
  update
  {
    rayN1686 = prim +0017<$[]> (rayN1686, rayStep0522);
    bool _t16A8 = prim >0080 (rayN1686, camFarVsp1605);
    if _t16A8 {
      stabilize;
    }
    vec3 _t16A9 = prim *0036<$[3]> (rayN1686, rayVec168F);
    vec3 pos16AA = prim +0017<$[3]> (rayOrig168A, _t16A9);
    bool _t16AB;
    bool _t1751;
    Femdata: RefCell _t1752;
    Femdata: RefCell _t1753 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1752 = _t1753;
    real _t1754 = 0.1e-8;
    bool _t1755 = extractFemItemN((_t1752, pos16AA, _t1754),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1755 {
      bool _t1756;
      real _t1757;
      field(3)[3] _t1758 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1759 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1758);
      tensor[3,3] _t175A = prim @00A5<#∞; %3; $[3,3]> (_t1759, pos16AA);
      real[3] _t175B = prim evals009F (_t175A);
      int _t175C = 1;
      real _t175D = prim $sub01C0<real; %3> (_t175B, _t175C);
      real _t175E = prim unary -008B<$[]> (_t175D);
      field(3)[3] _t175F = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1760 = prim @00A5<#∞; %3; $[3]> (_t175F, pos16AA);
      real _t1761 = prim |()|00B5<$[3]> (_t1760);
      real _t1762 = prim +0017<$[]> (fBias0528, _t1761);
      real _t1763 = prim /0055 (_t175E, _t1762);
      _t1757 = _t1763;
      bool _t1764 = prim >0080 (_t1757, fStrTh0526);
      if _t1764 {
        bool _t1765;
        real _t1766;
        real _t1767 = 0.1e1;
        _t1766 = _t1767;
        bool _t1768 = prim >=007E (_t1766, fMaskTh0527);
        if _t1768 {
          bool _t1769 = true;
          _t1765 = _t1769;
        } else {
          _t1765 = false;
        }
        _t1756 = _t1765;
      } else {
        _t1756 = false;
      }
      _t1751 = _t1756;
    } else {
      _t1751 = false;
    }
    _t16AB = _t1751;
    bool _t16AC = prim !00BC (_t16AB);
    if _t16AC {
      continue;
    }
    vec3 step16AD;
    bool _t1716 = prim !00BC (analytical053F);
    if _t1716 {
      field(3)[3] _t1717 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1718 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1717);
      tensor[3,3] _t1719 = prim @00A5<#∞; %3; $[3,3]> (_t1718, pos16AA);
      vec3[3] E171A = prim evecs00A0 (_t1719);
      field(3)[3] _t171B = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t171C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t171B);
      tensor[3,3] _t171D = prim @00A5<#∞; %3; $[3,3]> (_t171C, pos16AA);
      real[3] L171E = prim evals009F (_t171D);
      int _t171F = 2;
      vec3 _t1720 = prim $sub01C0<vec3; %3> (E171A, _t171F);
      int _t1721 = 2;
      vec3 _t1722 = prim $sub01C0<vec3; %3> (E171A, _t1721);
      tensor[3,3] _t1723 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1720, _t1722);
      int _t1724 = 2;
      real _t1725 = prim $sub01C0<real; %3> (L171E, _t1724);
      tensor[3,3] _t1726 = prim /0057<$[3,3]> (_t1723, _t1725);
      int _t1727 = 1;
      vec3 _t1728 = prim $sub01C0<vec3; %3> (E171A, _t1727);
      int _t1729 = 1;
      vec3 _t172A = prim $sub01C0<vec3; %3> (E171A, _t1729);
      tensor[3,3] _t172B = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1728, _t172A);
      int _t172C = 1;
      real _t172D = prim $sub01C0<real; %3> (L171E, _t172C);
      tensor[3,3] _t172E = prim /0057<$[3,3]> (_t172B, _t172D);
      tensor[3,3] _t172F = prim +0017<$[3,3]> (_t1726, _t172E);
      tensor[3,3] _t1730 = prim unary -008B<$[3,3]> (_t172F);
      field(3)[3] _t1731 = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1732 = prim @00A5<#∞; %3; $[3]> (_t1731, pos16AA);
      vec3 _t1733 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1730, _t1732);
      step16AD = _t1733;
    } else {
      field#1(3)[3] _t1734 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1735 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1734);
      tensor[3,3] _t1736 = prim @00A5<#0; %3; $[3,3]> (_t1735, pos16AA);
      vec3[3] E1737 = prim evecs00A0 (_t1736);
      field#1(3)[3] _t1738 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1739 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1738);
      tensor[3,3] _t173A = prim @00A5<#0; %3; $[3,3]> (_t1739, pos16AA);
      real[3] L173B = prim evals009F (_t173A);
      int _t173C = 2;
      vec3 _t173D = prim $sub01C0<vec3; %3> (E1737, _t173C);
      int _t173E = 2;
      vec3 _t173F = prim $sub01C0<vec3; %3> (E1737, _t173E);
      tensor[3,3] _t1740 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t173D, _t173F);
      int _t1741 = 2;
      real _t1742 = prim $sub01C0<real; %3> (L173B, _t1741);
      tensor[3,3] _t1743 = prim /0057<$[3,3]> (_t1740, _t1742);
      int _t1744 = 1;
      vec3 _t1745 = prim $sub01C0<vec3; %3> (E1737, _t1744);
      int _t1746 = 1;
      vec3 _t1747 = prim $sub01C0<vec3; %3> (E1737, _t1746);
      tensor[3,3] _t1748 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      real _t174A = prim $sub01C0<real; %3> (L173B, _t1749);
      tensor[3,3] _t174B = prim /0057<$[3,3]> (_t1748, _t174A);
      tensor[3,3] _t174C = prim +0017<$[3,3]> (_t1743, _t174B);
      tensor[3,3] _t174D = prim unary -008B<$[3,3]> (_t174C);
      field#1(3)[3] _t174E = prim ∇00A8<#2; %3> (G160B);
      vec3 _t174F = prim @00A5<#1; %3; $[3]> (_t174E, pos16AA);
      vec3 _t1750 = prim •00CE<$[3,3]; $[3]; $[3]> (_t174D, _t174F);
      step16AD = _t1750;
    }
    real _t16AE = prim |()|00B5<$[3]> (step16AD);
    real aa16AF;
    real _t170C = 0.e0;
    real _t170D = 0.1e1;
    real _t170E = 0.15e1;
    real _t170F = 0.1e1;
    real _t1710 = prim |()|00B5<$[]> (_t16AE);
    real _t1711 = prim /0055 (_t1710, thick0525);
    real _t1712 = prim -0026<$[]> (_t170F, _t1711);
    real _t1713 = prim *0034 (_t170E, _t1712);
    real _t1714 = prim clamp0094<$[]> (_t170C, _t170D, _t1713);
    real _t1715 = prim *0034 (maxAlpha0529, _t1714);
    aa16AF = _t1715;
    real _t16B0 = 0.e0;
    bool _t16B1 = prim ==0084 (aa16AF, _t16B0);
    if _t16B1 {
      continue;
    }
    real _t16B2 = 0.1e1;
    real _t16B3 = 0.1e1;
    real _t16B4 = prim -0026<$[]> (_t16B3, aa16AF);
    real _t16B5 = prim ^0069 (_t16B4, alphaFix1694);
    aa16AF = prim -0026<$[]> (_t16B2, _t16B5);
    vec3 _t16B6 = prim normalize0137<$[3]> (step16AD);
    vec3 snorm16B7 = prim unary -008B<$[3]> (_t16B6);
    real _t16B8 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, litwsp1609);
    int _t16B9 = 2;
    real dcomp16BA = prim ^0068 (_t16B8, _t16B9);
    real scomp16BB = 0.e0;
    real _t16BC = 0.e0;
    bool _t16BD = prim !=0088 (phKs169B, _t16BC);
    if _t16BD {
      vec3 _t16BE = prim +0017<$[3]> (eyeDir1697, litwsp1609);
      vec3 _t16BF = prim normalize0137<$[3]> (_t16BE);
      real _t16C0 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, _t16BF);
      real _t16C1 = prim |()|00B5<$[]> (_t16C0);
      scomp16BB = prim ^0069 (_t16C1, phSp169C);
    }
    vec3 dcol16C2 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1604, rayN1686, camFarVsp1605);
    real cmin16C3 = cminmax053C[0];
    real cmax16C4 = cminmax053C[1];
    real _t16C5 = 0.1e1;
    real _t16C6 = 0.1e1;
    real _t16C7 = 0.1e1;
    vec3 mcol16C8 = [_t16C5, _t16C6, _t16C7];
    bool _t16C9 = prim !=0088 (cmin16C3, cmax16C4);
    if _t16C9 {
      real _t16CA = 0.e0;
      real _t16CB = 0.1e1;
      vec3 _t16CC = prim +0017<$[3]> (pos16AA, step16AD);
      real _t16CD = prim @00A5<#∞; %3; $[]> (C15F2, _t16CC);
      real _t16CE = prim lerp0098<$[]> (_t16CA, _t16CB, cmin16C3, _t16CD, cmax16C4);
      mcol16C8 = prim @00A5<#0; %1; $[3]> (CM15F1, _t16CE);
    }
    real _t16CF = prim *0034 (transp16A7, aa16AF);
    real _t16D0 = prim *0034 (phKd169A, dcomp16BA);
    real _t16D1 = prim +0017<$[]> (phKa1699, _t16D0);
    vec3 _t16D2 = prim modulate0129<%3> (dcol16C2, mcol16C8);
    vec3 _t16D3 = prim *0036<$[3]> (_t16D1, _t16D2);
    real _t16D4 = prim *0034 (phKs169B, scomp16BB);
    real _t16D5 = 0.1e1;
    real _t16D6 = 0.1e1;
    real _t16D7 = 0.1e1;
    vec3 _t16D8 = [_t16D5, _t16D6, _t16D7];
    vec3 _t16D9 = prim *0036<$[3]> (_t16D4, _t16D8);
    vec3 _t16DA = prim +0017<$[3]> (_t16D3, _t16D9);
    vec3 _t16DB = prim *0036<$[3]> (_t16CF, _t16DA);
    rgb16A3 = prim +0017<$[3]> (rgb16A3, _t16DB);
    real _t16DC = 0.1e1;
    real _t16DD = prim -0026<$[]> (_t16DC, aa16AF);
    transp16A7 = prim *0034 (transp16A7, _t16DD);
    bool _t16DE = prim <007A (transp16A7, transp00524);
    if _t16DE {
      transp16A7 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t16DF = 0.1e1;
    bool _t16E0 = prim <007A (transp16A7, _t16DF);
    if _t16E0 {
      real _t16E1 = 0.1e1;
      real aa16E2 = prim -0026<$[]> (_t16E1, transp16A7);
      real _t16E3 = rgb16A3[0];
      real _t16E4 = prim /0055 (_t16E3, aa16E2);
      real _t16E5 = rgb16A3[1];
      real _t16E6 = prim /0055 (_t16E5, aa16E2);
      real _t16E7 = rgb16A3[2];
      real _t16E8 = prim /0055 (_t16E7, aa16E2);
      rgba169D = [_t16E4, _t16E6, _t16E8, aa16E2];
    }
  }
}
grid(2) {
  int _t16E9 = 0;
  int _t16EA = 1;
  int _t16EB = prim -0024 (iresV0521, _t16EA);
  int[] _t16EC = prim $range01C3 (_t16E9, _t16EB);
  foreach vi16F2 in _t16EC {
    int _t16ED = 0;
    int _t16EE = 1;
    int _t16EF = prim -0024 (iresU0520, _t16EE);
    int[] _t16F0 = prim $range01C3 (_t16ED, _t16EF);
    foreach ui16F1 in _t16F0 {
      new ray (ui16F1, vi16F2);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115E6;
global field(3)[] F15EE;
global field#0(1)[3] CM15F1;
global field(3)[] C15F2;
global vec3 camN15F4;
global vec3 camU15F6;
global vec3 camV15F7;
global real camDist15F9;
global real camVmax15FF;
global real camUmax1603;
global real camNearVsp1604;
global real camFarVsp1605;
global vec3 litwsp1609;
global field#2(3)[] G160B;
function int[2]#8 nextCell405D8 (int faceIdx1239, int cell123A, Femdata: Mesh mesh123B)
{
  int _t123C = 12;
  int _t123D = prim *0033 (cell123A, _t123C);
  int _t123E = 2;
  int _t123F = prim *0033 (faceIdx1239, _t123E);
  int _t1240 = prim +0015 (_t123D, _t123F);
  int[2] _t1241 = extractFemItemN((mesh123B, _t1240),CellFaceCell(Mesh),);
  return _t1241;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115E6 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15E7;
  int _t170A = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t170B = loadFem(FuncCell, U050B, _t170A);
  _t15E7 = _t170B;
  Femdata: FemFunc _t15E8 = extractFem(_t15E7, FemFunc);
  Femdata: FuncCell _t15E9;
  int _t1708 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1709 = loadFem(FuncCell, U050B, _t1708);
  _t15E9 = _t1709;
  Femdata: FemFunc _t15EA = extractFem(_t15E9, FemFunc);
  Femdata: Space _t15EB = extractFem(_t15EA, Space);
  Femdata: FuncCell _t15EC;
  int _t1706 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1707 = loadFem(FuncCell, U050B, _t1706);
  _t15EC = _t1707;
  int _t15ED = extractFemItem(CellIndex(FuncCell), int, _t15EC);
  F15EE = femField(_t15E8,_t15ED,field(3)[],refField,);
  kernel _t15EF = tent;
  IMAGE1D<double[3]> img15F0 = clamp(cmap050F);
  CM15F1 = prim ⊛0074<#0; %1; $[3]> (_t15EF, img15F0);
  C15F2 = F15EE;
  vec3 _t15F3 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN15F4 = prim normalize0137<$[3]> (_t15F3);
  vec3 _t15F5 = prim ×00BE (camN15F4, camUp0518);
  camU15F6 = prim normalize0137<$[3]> (_t15F5);
  camV15F7 = prim ×00BE (camN15F4, camU15F6);
  vec3 _t15F8 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist15F9 = prim |()|00B5<$[3]> (_t15F8);
  real _t15FA = 0.314159265358979323846264338327950288e1;
  real _t15FB = prim *0034 (camFOV051E, _t15FA);
  real _t15FC = 0.36e3;
  real _t15FD = prim /0055 (_t15FB, _t15FC);
  real _t15FE = prim tan0179 (_t15FD);
  camVmax15FF = prim *0034 (_t15FE, camDist15F9);
  real _t1600 = (real)iresU0520;
  real _t1601 = prim *0034 (camVmax15FF, _t1600);
  real _t1602 = (real)iresV0521;
  camUmax1603 = prim /0055 (_t1601, _t1602);
  camNearVsp1604 = prim +0017<$[]> (camNear051C, camDist15F9);
  camFarVsp1605 = prim +0017<$[]> (camFar051D, camDist15F9);
  tensor[3,3] _t1606 = [camU15F6, camV15F7, camN15F4];
  tensor[3,3] _t1607 = prim transpose0145<%3; %3> (_t1606);
  vec3 _t1608 = prim normalize0137<$[3]> (litdir0538);
  litwsp1609 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1607, _t1608);
  kernel _t160A = bspln3;
  G160B = prim ⊛0070<#2; %3; $[]> (umm0541, _t160A);
}
strand ray (int ui1676, int vi1677) {
  real rayU1678;
  real rayV167F;
  real rayN1686;
  vec3 UV1687;
  vec3 rayOrig168A;
  vec3 rayVec168F;
  real alphaFix1694;
  vec3 eyeDir1697;
  real phKa1699;
  real phKd169A;
  real phKs169B;
  real phSp169C;
  output vec4 rgba169D;
  output real raw16A2;
  vec3 rgb16A3;
  real transp16A7;
  {
    real _t1679 = prim unary -008B<$[]> (camUmax1603);
    real _t167A = -0.5e0;
    real _t167B = (real)ui1676;
    real _t167C = (real)iresU0520;
    real _t167D = 0.5e0;
    real _t167E = prim -0026<$[]> (_t167C, _t167D);
    rayU1678 = prim lerp0098<$[]> (_t1679, camUmax1603, _t167A, _t167B, _t167E);
    real _t1680 = prim unary -008B<$[]> (camVmax15FF);
    real _t1681 = -0.5e0;
    real _t1682 = (real)vi1677;
    real _t1683 = (real)iresV0521;
    real _t1684 = 0.5e0;
    real _t1685 = prim -0026<$[]> (_t1683, _t1684);
    rayV167F = prim lerp0098<$[]> (_t1680, camVmax15FF, _t1681, _t1682, _t1685);
    rayN1686 = camNearVsp1604;
    vec3 _t1688 = prim *0036<$[3]> (rayU1678, camU15F6);
    vec3 _t1689 = prim *0036<$[3]> (rayV167F, camV15F7);
    UV1687 = prim +0017<$[3]> (_t1688, _t1689);
    vec3 _t168B;
    if camOrtho051F {
      _t168B = UV1687;
    } else {
      real _t168C = 0.e0;
      real _t168D = 0.e0;
      real _t168E = 0.e0;
      _t168B = [_t168C, _t168D, _t168E];
    }
    rayOrig168A = prim +0017<$[3]> (camEye0510, _t168B);
    vec3 _t1690;
    if camOrtho051F {
      real _t1691 = 0.e0;
      real _t1692 = 0.e0;
      real _t1693 = 0.e0;
      _t1690 = [_t1691, _t1692, _t1693];
    } else {
      _t1690 = prim /0057<$[3]> (UV1687, camDist15F9);
    }
    rayVec168F = prim +0017<$[3]> (camN15F4, _t1690);
    real _t1695 = prim |()|00B5<$[3]> (rayVec168F);
    real _t1696 = prim *0034 (_t1695, rayStep0522);
    alphaFix1694 = prim /0055 (_t1696, refStep0523);
    vec3 _t1698 = prim normalize0137<$[3]> (rayVec168F);
    eyeDir1697 = prim unary -008B<$[3]> (_t1698);
    phKa1699 = phong052B[0];
    phKd169A = phong052B[1];
    phKs169B = phong052B[2];
    phSp169C = phong052B[3];
    real _t169E = 0.e0;
    real _t169F = 0.e0;
    real _t16A0 = 0.e0;
    real _t16A1 = 0.e0;
    rgba169D = [_t169E, _t169F, _t16A0, _t16A1];
    raw16A2 = 0.e0;
    real _t16A4 = 0.e0;
    real _t16A5 = 0.e0;
    real _t16A6 = 0.e0;
    rgb16A3 = [_t16A4, _t16A5, _t16A6];
    transp16A7 = 0.1e1;
  }
  update
  {
    rayN1686 = prim +0017<$[]> (rayN1686, rayStep0522);
    bool _t16A8 = prim >0080 (rayN1686, camFarVsp1605);
    if _t16A8 {
      stabilize;
    }
    vec3 _t16A9 = prim *0036<$[3]> (rayN1686, rayVec168F);
    vec3 pos16AA = prim +0017<$[3]> (rayOrig168A, _t16A9);
    bool _t16AB;
    bool _t1751;
    Femdata: RefCell _t1752;
    Femdata: RefCell _t1753 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1752 = _t1753;
    real _t1754 = 0.1e-8;
    bool _t1755 = extractFemItemN((_t1752, pos16AA, _t1754),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1755 {
      bool _t1756;
      real _t1757;
      field(3)[3] _t1758 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1759 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1758);
      tensor[3,3] _t175A = prim @00A5<#∞; %3; $[3,3]> (_t1759, pos16AA);
      real[3] _t175B = prim evals009F (_t175A);
      int _t175C = 1;
      real _t175D = prim $sub01C0<real; %3> (_t175B, _t175C);
      real _t175E = prim unary -008B<$[]> (_t175D);
      field(3)[3] _t175F = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1760 = prim @00A5<#∞; %3; $[3]> (_t175F, pos16AA);
      real _t1761 = prim |()|00B5<$[3]> (_t1760);
      real _t1762 = prim +0017<$[]> (fBias0528, _t1761);
      real _t1763 = prim /0055 (_t175E, _t1762);
      _t1757 = _t1763;
      bool _t1764 = prim >0080 (_t1757, fStrTh0526);
      if _t1764 {
        bool _t1765;
        real _t1766;
        real _t1767 = 0.1e1;
        _t1766 = _t1767;
        bool _t1768 = prim >=007E (_t1766, fMaskTh0527);
        if _t1768 {
          bool _t1769 = true;
          _t1765 = _t1769;
        } else {
          _t1765 = false;
        }
        _t1756 = _t1765;
      } else {
        _t1756 = false;
      }
      _t1751 = _t1756;
    } else {
      _t1751 = false;
    }
    _t16AB = _t1751;
    bool _t16AC = prim !00BC (_t16AB);
    if _t16AC {
      continue;
    }
    vec3 step16AD;
    bool _t1716 = prim !00BC (analytical053F);
    if _t1716 {
      field(3)[3] _t1717 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1718 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1717);
      tensor[3,3] _t1719 = prim @00A5<#∞; %3; $[3,3]> (_t1718, pos16AA);
      vec3[3] E171A = prim evecs00A0 (_t1719);
      field(3)[3] _t171B = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t171C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t171B);
      tensor[3,3] _t171D = prim @00A5<#∞; %3; $[3,3]> (_t171C, pos16AA);
      real[3] L171E = prim evals009F (_t171D);
      int _t171F = 2;
      vec3 _t1720 = prim $sub01C0<vec3; %3> (E171A, _t171F);
      int _t1721 = 2;
      vec3 _t1722 = prim $sub01C0<vec3; %3> (E171A, _t1721);
      tensor[3,3] _t1723 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1720, _t1722);
      int _t1724 = 2;
      real _t1725 = prim $sub01C0<real; %3> (L171E, _t1724);
      tensor[3,3] _t1726 = prim /0057<$[3,3]> (_t1723, _t1725);
      int _t1727 = 1;
      vec3 _t1728 = prim $sub01C0<vec3; %3> (E171A, _t1727);
      int _t1729 = 1;
      vec3 _t172A = prim $sub01C0<vec3; %3> (E171A, _t1729);
      tensor[3,3] _t172B = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1728, _t172A);
      int _t172C = 1;
      real _t172D = prim $sub01C0<real; %3> (L171E, _t172C);
      tensor[3,3] _t172E = prim /0057<$[3,3]> (_t172B, _t172D);
      tensor[3,3] _t172F = prim +0017<$[3,3]> (_t1726, _t172E);
      tensor[3,3] _t1730 = prim unary -008B<$[3,3]> (_t172F);
      field(3)[3] _t1731 = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1732 = prim @00A5<#∞; %3; $[3]> (_t1731, pos16AA);
      vec3 _t1733 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1730, _t1732);
      step16AD = _t1733;
    } else {
      field#1(3)[3] _t1734 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1735 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1734);
      tensor[3,3] _t1736 = prim @00A5<#0; %3; $[3,3]> (_t1735, pos16AA);
      vec3[3] E1737 = prim evecs00A0 (_t1736);
      field#1(3)[3] _t1738 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1739 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1738);
      tensor[3,3] _t173A = prim @00A5<#0; %3; $[3,3]> (_t1739, pos16AA);
      real[3] L173B = prim evals009F (_t173A);
      int _t173C = 2;
      vec3 _t173D = prim $sub01C0<vec3; %3> (E1737, _t173C);
      int _t173E = 2;
      vec3 _t173F = prim $sub01C0<vec3; %3> (E1737, _t173E);
      tensor[3,3] _t1740 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t173D, _t173F);
      int _t1741 = 2;
      real _t1742 = prim $sub01C0<real; %3> (L173B, _t1741);
      tensor[3,3] _t1743 = prim /0057<$[3,3]> (_t1740, _t1742);
      int _t1744 = 1;
      vec3 _t1745 = prim $sub01C0<vec3; %3> (E1737, _t1744);
      int _t1746 = 1;
      vec3 _t1747 = prim $sub01C0<vec3; %3> (E1737, _t1746);
      tensor[3,3] _t1748 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      real _t174A = prim $sub01C0<real; %3> (L173B, _t1749);
      tensor[3,3] _t174B = prim /0057<$[3,3]> (_t1748, _t174A);
      tensor[3,3] _t174C = prim +0017<$[3,3]> (_t1743, _t174B);
      tensor[3,3] _t174D = prim unary -008B<$[3,3]> (_t174C);
      field#1(3)[3] _t174E = prim ∇00A8<#2; %3> (G160B);
      vec3 _t174F = prim @00A5<#1; %3; $[3]> (_t174E, pos16AA);
      vec3 _t1750 = prim •00CE<$[3,3]; $[3]; $[3]> (_t174D, _t174F);
      step16AD = _t1750;
    }
    real _t16AE = prim |()|00B5<$[3]> (step16AD);
    real aa16AF;
    real _t170C = 0.e0;
    real _t170D = 0.1e1;
    real _t170E = 0.15e1;
    real _t170F = 0.1e1;
    real _t1710 = prim |()|00B5<$[]> (_t16AE);
    real _t1711 = prim /0055 (_t1710, thick0525);
    real _t1712 = prim -0026<$[]> (_t170F, _t1711);
    real _t1713 = prim *0034 (_t170E, _t1712);
    real _t1714 = prim clamp0094<$[]> (_t170C, _t170D, _t1713);
    real _t1715 = prim *0034 (maxAlpha0529, _t1714);
    aa16AF = _t1715;
    real _t16B0 = 0.e0;
    bool _t16B1 = prim ==0084 (aa16AF, _t16B0);
    if _t16B1 {
      continue;
    }
    real _t16B2 = 0.1e1;
    real _t16B3 = 0.1e1;
    real _t16B4 = prim -0026<$[]> (_t16B3, aa16AF);
    real _t16B5 = prim ^0069 (_t16B4, alphaFix1694);
    aa16AF = prim -0026<$[]> (_t16B2, _t16B5);
    vec3 _t16B6 = prim normalize0137<$[3]> (step16AD);
    vec3 snorm16B7 = prim unary -008B<$[3]> (_t16B6);
    real _t16B8 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, litwsp1609);
    int _t16B9 = 2;
    real dcomp16BA = prim ^0068 (_t16B8, _t16B9);
    real scomp16BB = 0.e0;
    real _t16BC = 0.e0;
    bool _t16BD = prim !=0088 (phKs169B, _t16BC);
    if _t16BD {
      vec3 _t16BE = prim +0017<$[3]> (eyeDir1697, litwsp1609);
      vec3 _t16BF = prim normalize0137<$[3]> (_t16BE);
      real _t16C0 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, _t16BF);
      real _t16C1 = prim |()|00B5<$[]> (_t16C0);
      scomp16BB = prim ^0069 (_t16C1, phSp169C);
    }
    vec3 dcol16C2 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1604, rayN1686, camFarVsp1605);
    real cmin16C3 = cminmax053C[0];
    real cmax16C4 = cminmax053C[1];
    real _t16C5 = 0.1e1;
    real _t16C6 = 0.1e1;
    real _t16C7 = 0.1e1;
    vec3 mcol16C8 = [_t16C5, _t16C6, _t16C7];
    bool _t16C9 = prim !=0088 (cmin16C3, cmax16C4);
    if _t16C9 {
      real _t16CA = 0.e0;
      real _t16CB = 0.1e1;
      vec3 _t16CC = prim +0017<$[3]> (pos16AA, step16AD);
      real _t16CD = prim @00A5<#∞; %3; $[]> (C15F2, _t16CC);
      real _t16CE = prim lerp0098<$[]> (_t16CA, _t16CB, cmin16C3, _t16CD, cmax16C4);
      mcol16C8 = prim @00A5<#0; %1; $[3]> (CM15F1, _t16CE);
    }
    real _t16CF = prim *0034 (transp16A7, aa16AF);
    real _t16D0 = prim *0034 (phKd169A, dcomp16BA);
    real _t16D1 = prim +0017<$[]> (phKa1699, _t16D0);
    vec3 _t16D2 = prim modulate0129<%3> (dcol16C2, mcol16C8);
    vec3 _t16D3 = prim *0036<$[3]> (_t16D1, _t16D2);
    real _t16D4 = prim *0034 (phKs169B, scomp16BB);
    real _t16D5 = 0.1e1;
    real _t16D6 = 0.1e1;
    real _t16D7 = 0.1e1;
    vec3 _t16D8 = [_t16D5, _t16D6, _t16D7];
    vec3 _t16D9 = prim *0036<$[3]> (_t16D4, _t16D8);
    vec3 _t16DA = prim +0017<$[3]> (_t16D3, _t16D9);
    vec3 _t16DB = prim *0036<$[3]> (_t16CF, _t16DA);
    rgb16A3 = prim +0017<$[3]> (rgb16A3, _t16DB);
    real _t16DC = 0.1e1;
    real _t16DD = prim -0026<$[]> (_t16DC, aa16AF);
    transp16A7 = prim *0034 (transp16A7, _t16DD);
    bool _t16DE = prim <007A (transp16A7, transp00524);
    if _t16DE {
      transp16A7 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t16DF = 0.1e1;
    bool _t16E0 = prim <007A (transp16A7, _t16DF);
    if _t16E0 {
      real _t16E1 = 0.1e1;
      real aa16E2 = prim -0026<$[]> (_t16E1, transp16A7);
      real _t16E3 = rgb16A3[0];
      real _t16E4 = prim /0055 (_t16E3, aa16E2);
      real _t16E5 = rgb16A3[1];
      real _t16E6 = prim /0055 (_t16E5, aa16E2);
      real _t16E7 = rgb16A3[2];
      real _t16E8 = prim /0055 (_t16E7, aa16E2);
      rgba169D = [_t16E4, _t16E6, _t16E8, aa16E2];
    }
  }
}
grid(2) {
  int _t16E9 = 0;
  int _t16EA = 1;
  int _t16EB = prim -0024 (iresV0521, _t16EA);
  int[] _t16EC = prim $range01C3 (_t16E9, _t16EB);
  foreach vi16F2 in _t16EC {
    int _t16ED = 0;
    int _t16EE = 1;
    int _t16EF = prim -0024 (iresU0520, _t16EE);
    int[] _t16F0 = prim $range01C3 (_t16ED, _t16EF);
    foreach ui16F1 in _t16F0 {
      new ray (ui16F1, vi16F2);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115E6;
global field(3)[] F15EE;
global field#0(1)[3] CM15F1;
global field(3)[] C15F2;
global vec3 camN15F4;
global vec3 camU15F6;
global vec3 camV15F7;
global real camDist15F9;
global real camVmax15FF;
global real camUmax1603;
global real camNearVsp1604;
global real camFarVsp1605;
global vec3 litwsp1609;
global field#2(3)[] G160B;
function int[2]#8 nextCell405D8 (int faceIdx1239, int cell123A, Femdata: Mesh mesh123B)
{
  int _t123C = 12;
  int _t123D = prim *0033 (cell123A, _t123C);
  int _t123E = 2;
  int _t123F = prim *0033 (faceIdx1239, _t123E);
  int _t1240 = prim +0015 (_t123D, _t123F);
  int[2] _t1241 = extractFemItemN((mesh123B, _t1240),CellFaceCell(Mesh),);
  return _t1241;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115E6 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15E7;
  int _t170A = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t170B = loadFem(FuncCell, U050B, _t170A);
  _t15E7 = _t170B;
  Femdata: FemFunc _t15E8 = extractFem(_t15E7, FemFunc);
  Femdata: FuncCell _t15E9;
  int _t1708 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1709 = loadFem(FuncCell, U050B, _t1708);
  _t15E9 = _t1709;
  Femdata: FemFunc _t15EA = extractFem(_t15E9, FemFunc);
  Femdata: Space _t15EB = extractFem(_t15EA, Space);
  Femdata: FuncCell _t15EC;
  int _t1706 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1707 = loadFem(FuncCell, U050B, _t1706);
  _t15EC = _t1707;
  int _t15ED = extractFemItem(CellIndex(FuncCell), int, _t15EC);
  F15EE = femField(_t15E8,_t15ED,field(3)[],refField,);
  kernel _t15EF = tent;
  IMAGE1D<double[3]> img15F0 = clamp(cmap050F);
  CM15F1 = prim ⊛0074<#0; %1; $[3]> (_t15EF, img15F0);
  C15F2 = F15EE;
  vec3 _t15F3 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN15F4 = prim normalize0137<$[3]> (_t15F3);
  vec3 _t15F5 = prim ×00BE (camN15F4, camUp0518);
  camU15F6 = prim normalize0137<$[3]> (_t15F5);
  camV15F7 = prim ×00BE (camN15F4, camU15F6);
  vec3 _t15F8 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist15F9 = prim |()|00B5<$[3]> (_t15F8);
  real _t15FA = 0.314159265358979323846264338327950288e1;
  real _t15FB = prim *0034 (camFOV051E, _t15FA);
  real _t15FC = 0.36e3;
  real _t15FD = prim /0055 (_t15FB, _t15FC);
  real _t15FE = prim tan0179 (_t15FD);
  camVmax15FF = prim *0034 (_t15FE, camDist15F9);
  real _t1600 = (real)iresU0520;
  real _t1601 = prim *0034 (camVmax15FF, _t1600);
  real _t1602 = (real)iresV0521;
  camUmax1603 = prim /0055 (_t1601, _t1602);
  camNearVsp1604 = prim +0017<$[]> (camNear051C, camDist15F9);
  camFarVsp1605 = prim +0017<$[]> (camFar051D, camDist15F9);
  tensor[3,3] _t1606 = [camU15F6, camV15F7, camN15F4];
  tensor[3,3] _t1607 = prim transpose0145<%3; %3> (_t1606);
  vec3 _t1608 = prim normalize0137<$[3]> (litdir0538);
  litwsp1609 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1607, _t1608);
  kernel _t160A = bspln3;
  G160B = prim ⊛0070<#2; %3; $[]> (umm0541, _t160A);
}
strand ray (int ui1676, int vi1677) {
  real rayU1678;
  real rayV167F;
  real rayN1686;
  vec3 UV1687;
  vec3 rayOrig168A;
  vec3 rayVec168F;
  real alphaFix1694;
  vec3 eyeDir1697;
  real phKa1699;
  real phKd169A;
  real phKs169B;
  real phSp169C;
  output vec4 rgba169D;
  output real raw16A2;
  vec3 rgb16A3;
  real transp16A7;
  {
    real _t1679 = prim unary -008B<$[]> (camUmax1603);
    real _t167A = -0.5e0;
    real _t167B = (real)ui1676;
    real _t167C = (real)iresU0520;
    real _t167D = 0.5e0;
    real _t167E = prim -0026<$[]> (_t167C, _t167D);
    rayU1678 = prim lerp0098<$[]> (_t1679, camUmax1603, _t167A, _t167B, _t167E);
    real _t1680 = prim unary -008B<$[]> (camVmax15FF);
    real _t1681 = -0.5e0;
    real _t1682 = (real)vi1677;
    real _t1683 = (real)iresV0521;
    real _t1684 = 0.5e0;
    real _t1685 = prim -0026<$[]> (_t1683, _t1684);
    rayV167F = prim lerp0098<$[]> (_t1680, camVmax15FF, _t1681, _t1682, _t1685);
    rayN1686 = camNearVsp1604;
    vec3 _t1688 = prim *0036<$[3]> (rayU1678, camU15F6);
    vec3 _t1689 = prim *0036<$[3]> (rayV167F, camV15F7);
    UV1687 = prim +0017<$[3]> (_t1688, _t1689);
    vec3 _t168B;
    if camOrtho051F {
      _t168B = UV1687;
    } else {
      real _t168C = 0.e0;
      real _t168D = 0.e0;
      real _t168E = 0.e0;
      _t168B = [_t168C, _t168D, _t168E];
    }
    rayOrig168A = prim +0017<$[3]> (camEye0510, _t168B);
    vec3 _t1690;
    if camOrtho051F {
      real _t1691 = 0.e0;
      real _t1692 = 0.e0;
      real _t1693 = 0.e0;
      _t1690 = [_t1691, _t1692, _t1693];
    } else {
      _t1690 = prim /0057<$[3]> (UV1687, camDist15F9);
    }
    rayVec168F = prim +0017<$[3]> (camN15F4, _t1690);
    real _t1695 = prim |()|00B5<$[3]> (rayVec168F);
    real _t1696 = prim *0034 (_t1695, rayStep0522);
    alphaFix1694 = prim /0055 (_t1696, refStep0523);
    vec3 _t1698 = prim normalize0137<$[3]> (rayVec168F);
    eyeDir1697 = prim unary -008B<$[3]> (_t1698);
    phKa1699 = phong052B[0];
    phKd169A = phong052B[1];
    phKs169B = phong052B[2];
    phSp169C = phong052B[3];
    real _t169E = 0.e0;
    real _t169F = 0.e0;
    real _t16A0 = 0.e0;
    real _t16A1 = 0.e0;
    rgba169D = [_t169E, _t169F, _t16A0, _t16A1];
    raw16A2 = 0.e0;
    real _t16A4 = 0.e0;
    real _t16A5 = 0.e0;
    real _t16A6 = 0.e0;
    rgb16A3 = [_t16A4, _t16A5, _t16A6];
    transp16A7 = 0.1e1;
  }
  update
  {
    rayN1686 = prim +0017<$[]> (rayN1686, rayStep0522);
    bool _t16A8 = prim >0080 (rayN1686, camFarVsp1605);
    if _t16A8 {
      stabilize;
    }
    vec3 _t16A9 = prim *0036<$[3]> (rayN1686, rayVec168F);
    vec3 pos16AA = prim +0017<$[3]> (rayOrig168A, _t16A9);
    bool _t16AB;
    bool _t1751;
    Femdata: RefCell _t1752;
    Femdata: RefCell _t1753 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1752 = _t1753;
    real _t1754 = 0.1e-8;
    bool _t1755 = extractFemItemN((_t1752, pos16AA, _t1754),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1755 {
      bool _t1756;
      real _t1757;
      field(3)[3] _t1758 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1759 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1758);
      tensor[3,3] _t175A = prim @00A5<#∞; %3; $[3,3]> (_t1759, pos16AA);
      real[3] _t175B = prim evals009F (_t175A);
      int _t175C = 1;
      real _t175D = prim $sub01C0<real; %3> (_t175B, _t175C);
      real _t175E = prim unary -008B<$[]> (_t175D);
      field(3)[3] _t175F = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1760 = prim @00A5<#∞; %3; $[3]> (_t175F, pos16AA);
      real _t1761 = prim |()|00B5<$[3]> (_t1760);
      real _t1762 = prim +0017<$[]> (fBias0528, _t1761);
      real _t1763 = prim /0055 (_t175E, _t1762);
      _t1757 = _t1763;
      bool _t1764 = prim >0080 (_t1757, fStrTh0526);
      if _t1764 {
        bool _t1765;
        real _t1766;
        real _t1767 = 0.1e1;
        _t1766 = _t1767;
        bool _t1768 = prim >=007E (_t1766, fMaskTh0527);
        if _t1768 {
          bool _t1769 = true;
          _t1765 = _t1769;
        } else {
          _t1765 = false;
        }
        _t1756 = _t1765;
      } else {
        _t1756 = false;
      }
      _t1751 = _t1756;
    } else {
      _t1751 = false;
    }
    _t16AB = _t1751;
    bool _t16AC = prim !00BC (_t16AB);
    if _t16AC {
      continue;
    }
    vec3 step16AD;
    bool _t1716 = prim !00BC (analytical053F);
    if _t1716 {
      field(3)[3] _t1717 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1718 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1717);
      tensor[3,3] _t1719 = prim @00A5<#∞; %3; $[3,3]> (_t1718, pos16AA);
      vec3[3] E171A = prim evecs00A0 (_t1719);
      field(3)[3] _t171B = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t171C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t171B);
      tensor[3,3] _t171D = prim @00A5<#∞; %3; $[3,3]> (_t171C, pos16AA);
      real[3] L171E = prim evals009F (_t171D);
      int _t171F = 2;
      vec3 _t1720 = prim $sub01C0<vec3; %3> (E171A, _t171F);
      int _t1721 = 2;
      vec3 _t1722 = prim $sub01C0<vec3; %3> (E171A, _t1721);
      tensor[3,3] _t1723 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1720, _t1722);
      int _t1724 = 2;
      real _t1725 = prim $sub01C0<real; %3> (L171E, _t1724);
      tensor[3,3] _t1726 = prim /0057<$[3,3]> (_t1723, _t1725);
      int _t1727 = 1;
      vec3 _t1728 = prim $sub01C0<vec3; %3> (E171A, _t1727);
      int _t1729 = 1;
      vec3 _t172A = prim $sub01C0<vec3; %3> (E171A, _t1729);
      tensor[3,3] _t172B = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1728, _t172A);
      int _t172C = 1;
      real _t172D = prim $sub01C0<real; %3> (L171E, _t172C);
      tensor[3,3] _t172E = prim /0057<$[3,3]> (_t172B, _t172D);
      tensor[3,3] _t172F = prim +0017<$[3,3]> (_t1726, _t172E);
      tensor[3,3] _t1730 = prim unary -008B<$[3,3]> (_t172F);
      field(3)[3] _t1731 = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1732 = prim @00A5<#∞; %3; $[3]> (_t1731, pos16AA);
      vec3 _t1733 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1730, _t1732);
      step16AD = _t1733;
    } else {
      field#1(3)[3] _t1734 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1735 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1734);
      tensor[3,3] _t1736 = prim @00A5<#0; %3; $[3,3]> (_t1735, pos16AA);
      vec3[3] E1737 = prim evecs00A0 (_t1736);
      field#1(3)[3] _t1738 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1739 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1738);
      tensor[3,3] _t173A = prim @00A5<#0; %3; $[3,3]> (_t1739, pos16AA);
      real[3] L173B = prim evals009F (_t173A);
      int _t173C = 2;
      vec3 _t173D = prim $sub01C0<vec3; %3> (E1737, _t173C);
      int _t173E = 2;
      vec3 _t173F = prim $sub01C0<vec3; %3> (E1737, _t173E);
      tensor[3,3] _t1740 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t173D, _t173F);
      int _t1741 = 2;
      real _t1742 = prim $sub01C0<real; %3> (L173B, _t1741);
      tensor[3,3] _t1743 = prim /0057<$[3,3]> (_t1740, _t1742);
      int _t1744 = 1;
      vec3 _t1745 = prim $sub01C0<vec3; %3> (E1737, _t1744);
      int _t1746 = 1;
      vec3 _t1747 = prim $sub01C0<vec3; %3> (E1737, _t1746);
      tensor[3,3] _t1748 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      real _t174A = prim $sub01C0<real; %3> (L173B, _t1749);
      tensor[3,3] _t174B = prim /0057<$[3,3]> (_t1748, _t174A);
      tensor[3,3] _t174C = prim +0017<$[3,3]> (_t1743, _t174B);
      tensor[3,3] _t174D = prim unary -008B<$[3,3]> (_t174C);
      field#1(3)[3] _t174E = prim ∇00A8<#2; %3> (G160B);
      vec3 _t174F = prim @00A5<#1; %3; $[3]> (_t174E, pos16AA);
      vec3 _t1750 = prim •00CE<$[3,3]; $[3]; $[3]> (_t174D, _t174F);
      step16AD = _t1750;
    }
    real _t16AE = prim |()|00B5<$[3]> (step16AD);
    real aa16AF;
    real _t170C = 0.e0;
    real _t170D = 0.1e1;
    real _t170E = 0.15e1;
    real _t170F = 0.1e1;
    real _t1710 = prim |()|00B5<$[]> (_t16AE);
    real _t1711 = prim /0055 (_t1710, thick0525);
    real _t1712 = prim -0026<$[]> (_t170F, _t1711);
    real _t1713 = prim *0034 (_t170E, _t1712);
    real _t1714 = prim clamp0094<$[]> (_t170C, _t170D, _t1713);
    real _t1715 = prim *0034 (maxAlpha0529, _t1714);
    aa16AF = _t1715;
    real _t16B0 = 0.e0;
    bool _t16B1 = prim ==0084 (aa16AF, _t16B0);
    if _t16B1 {
      continue;
    }
    real _t16B2 = 0.1e1;
    real _t16B3 = 0.1e1;
    real _t16B4 = prim -0026<$[]> (_t16B3, aa16AF);
    real _t16B5 = prim ^0069 (_t16B4, alphaFix1694);
    aa16AF = prim -0026<$[]> (_t16B2, _t16B5);
    vec3 _t16B6 = prim normalize0137<$[3]> (step16AD);
    vec3 snorm16B7 = prim unary -008B<$[3]> (_t16B6);
    real _t16B8 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, litwsp1609);
    int _t16B9 = 2;
    real dcomp16BA = prim ^0068 (_t16B8, _t16B9);
    real scomp16BB = 0.e0;
    real _t16BC = 0.e0;
    bool _t16BD = prim !=0088 (phKs169B, _t16BC);
    if _t16BD {
      vec3 _t16BE = prim +0017<$[3]> (eyeDir1697, litwsp1609);
      vec3 _t16BF = prim normalize0137<$[3]> (_t16BE);
      real _t16C0 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, _t16BF);
      real _t16C1 = prim |()|00B5<$[]> (_t16C0);
      scomp16BB = prim ^0069 (_t16C1, phSp169C);
    }
    vec3 dcol16C2 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1604, rayN1686, camFarVsp1605);
    real cmin16C3 = cminmax053C[0];
    real cmax16C4 = cminmax053C[1];
    real _t16C5 = 0.1e1;
    real _t16C6 = 0.1e1;
    real _t16C7 = 0.1e1;
    vec3 mcol16C8 = [_t16C5, _t16C6, _t16C7];
    bool _t16C9 = prim !=0088 (cmin16C3, cmax16C4);
    if _t16C9 {
      real _t16CA = 0.e0;
      real _t16CB = 0.1e1;
      vec3 _t16CC = prim +0017<$[3]> (pos16AA, step16AD);
      real _t16CD = prim @00A5<#∞; %3; $[]> (C15F2, _t16CC);
      real _t16CE = prim lerp0098<$[]> (_t16CA, _t16CB, cmin16C3, _t16CD, cmax16C4);
      mcol16C8 = prim @00A5<#0; %1; $[3]> (CM15F1, _t16CE);
    }
    real _t16CF = prim *0034 (transp16A7, aa16AF);
    real _t16D0 = prim *0034 (phKd169A, dcomp16BA);
    real _t16D1 = prim +0017<$[]> (phKa1699, _t16D0);
    vec3 _t16D2 = prim modulate0129<%3> (dcol16C2, mcol16C8);
    vec3 _t16D3 = prim *0036<$[3]> (_t16D1, _t16D2);
    real _t16D4 = prim *0034 (phKs169B, scomp16BB);
    real _t16D5 = 0.1e1;
    real _t16D6 = 0.1e1;
    real _t16D7 = 0.1e1;
    vec3 _t16D8 = [_t16D5, _t16D6, _t16D7];
    vec3 _t16D9 = prim *0036<$[3]> (_t16D4, _t16D8);
    vec3 _t16DA = prim +0017<$[3]> (_t16D3, _t16D9);
    vec3 _t16DB = prim *0036<$[3]> (_t16CF, _t16DA);
    rgb16A3 = prim +0017<$[3]> (rgb16A3, _t16DB);
    real _t16DC = 0.1e1;
    real _t16DD = prim -0026<$[]> (_t16DC, aa16AF);
    transp16A7 = prim *0034 (transp16A7, _t16DD);
    bool _t16DE = prim <007A (transp16A7, transp00524);
    if _t16DE {
      transp16A7 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t16DF = 0.1e1;
    bool _t16E0 = prim <007A (transp16A7, _t16DF);
    if _t16E0 {
      real _t16E1 = 0.1e1;
      real aa16E2 = prim -0026<$[]> (_t16E1, transp16A7);
      real _t16E3 = rgb16A3[0];
      real _t16E4 = prim /0055 (_t16E3, aa16E2);
      real _t16E5 = rgb16A3[1];
      real _t16E6 = prim /0055 (_t16E5, aa16E2);
      real _t16E7 = rgb16A3[2];
      real _t16E8 = prim /0055 (_t16E7, aa16E2);
      rgba169D = [_t16E4, _t16E6, _t16E8, aa16E2];
    }
  }
}
grid(2) {
  int _t16E9 = 0;
  int _t16EA = 1;
  int _t16EB = prim -0024 (iresV0521, _t16EA);
  int[] _t16EC = prim $range01C3 (_t16E9, _t16EB);
  foreach vi16F2 in _t16EC {
    int _t16ED = 0;
    int _t16EE = 1;
    int _t16EF = prim -0024 (iresU0520, _t16EE);
    int[] _t16F0 = prim $range01C3 (_t16ED, _t16EF);
    foreach ui16F1 in _t16F0 {
      new ray (ui16F1, vi16F2);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115E6;
global field(3)[] F15EE;
global field#0(1)[3] CM15F1;
global field(3)[] C15F2;
global vec3 camN15F4;
global vec3 camU15F6;
global vec3 camV15F7;
global real camDist15F9;
global real camVmax15FF;
global real camUmax1603;
global real camNearVsp1604;
global real camFarVsp1605;
global vec3 litwsp1609;
global field#2(3)[] G160B;
function int[2]#8 nextCell405D8 (int faceIdx1239, int cell123A, Femdata: Mesh mesh123B)
{
  int _t123C = 12;
  int _t123D = prim *0033 (cell123A, _t123C);
  int _t123E = 2;
  int _t123F = prim *0033 (faceIdx1239, _t123E);
  int _t1240 = prim +0015 (_t123D, _t123F);
  int[2] _t1241 = extractFemItemN((mesh123B, _t1240),CellFaceCell(Mesh),);
  return _t1241;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115E6 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15E7;
  int _t170A = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t170B = loadFem(FuncCell, U050B, _t170A);
  _t15E7 = _t170B;
  Femdata: FemFunc _t15E8 = extractFem(_t15E7, FemFunc);
  Femdata: FuncCell _t15E9;
  int _t1708 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1709 = loadFem(FuncCell, U050B, _t1708);
  _t15E9 = _t1709;
  Femdata: FemFunc _t15EA = extractFem(_t15E9, FemFunc);
  Femdata: Space _t15EB = extractFem(_t15EA, Space);
  Femdata: FuncCell _t15EC;
  int _t1706 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1707 = loadFem(FuncCell, U050B, _t1706);
  _t15EC = _t1707;
  int _t15ED = extractFemItem(CellIndex(FuncCell), int, _t15EC);
  F15EE = femField(_t15E8,_t15ED,field(3)[],refField,);
  kernel _t15EF = tent;
  IMAGE1D<double[3]> img15F0 = clamp(cmap050F);
  CM15F1 = prim ⊛0074<#0; %1; $[3]> (_t15EF, img15F0);
  C15F2 = F15EE;
  vec3 _t15F3 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN15F4 = prim normalize0137<$[3]> (_t15F3);
  vec3 _t15F5 = prim ×00BE (camN15F4, camUp0518);
  camU15F6 = prim normalize0137<$[3]> (_t15F5);
  camV15F7 = prim ×00BE (camN15F4, camU15F6);
  vec3 _t15F8 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist15F9 = prim |()|00B5<$[3]> (_t15F8);
  real _t15FA = 0.314159265358979323846264338327950288e1;
  real _t15FB = prim *0034 (camFOV051E, _t15FA);
  real _t15FC = 0.36e3;
  real _t15FD = prim /0055 (_t15FB, _t15FC);
  real _t15FE = prim tan0179 (_t15FD);
  camVmax15FF = prim *0034 (_t15FE, camDist15F9);
  real _t1600 = (real)iresU0520;
  real _t1601 = prim *0034 (camVmax15FF, _t1600);
  real _t1602 = (real)iresV0521;
  camUmax1603 = prim /0055 (_t1601, _t1602);
  camNearVsp1604 = prim +0017<$[]> (camNear051C, camDist15F9);
  camFarVsp1605 = prim +0017<$[]> (camFar051D, camDist15F9);
  tensor[3,3] _t1606 = [camU15F6, camV15F7, camN15F4];
  tensor[3,3] _t1607 = prim transpose0145<%3; %3> (_t1606);
  vec3 _t1608 = prim normalize0137<$[3]> (litdir0538);
  litwsp1609 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1607, _t1608);
  kernel _t160A = bspln3;
  G160B = prim ⊛0070<#2; %3; $[]> (umm0541, _t160A);
}
strand ray (int ui1676, int vi1677) {
  real rayU1678;
  real rayV167F;
  real rayN1686;
  vec3 UV1687;
  vec3 rayOrig168A;
  vec3 rayVec168F;
  real alphaFix1694;
  vec3 eyeDir1697;
  real phKa1699;
  real phKd169A;
  real phKs169B;
  real phSp169C;
  output vec4 rgba169D;
  output real raw16A2;
  vec3 rgb16A3;
  real transp16A7;
  {
    real _t1679 = prim unary -008B<$[]> (camUmax1603);
    real _t167A = -0.5e0;
    real _t167B = (real)ui1676;
    real _t167C = (real)iresU0520;
    real _t167D = 0.5e0;
    real _t167E = prim -0026<$[]> (_t167C, _t167D);
    rayU1678 = prim lerp0098<$[]> (_t1679, camUmax1603, _t167A, _t167B, _t167E);
    real _t1680 = prim unary -008B<$[]> (camVmax15FF);
    real _t1681 = -0.5e0;
    real _t1682 = (real)vi1677;
    real _t1683 = (real)iresV0521;
    real _t1684 = 0.5e0;
    real _t1685 = prim -0026<$[]> (_t1683, _t1684);
    rayV167F = prim lerp0098<$[]> (_t1680, camVmax15FF, _t1681, _t1682, _t1685);
    rayN1686 = camNearVsp1604;
    vec3 _t1688 = prim *0036<$[3]> (rayU1678, camU15F6);
    vec3 _t1689 = prim *0036<$[3]> (rayV167F, camV15F7);
    UV1687 = prim +0017<$[3]> (_t1688, _t1689);
    vec3 _t168B;
    if camOrtho051F {
      _t168B = UV1687;
    } else {
      real _t168C = 0.e0;
      real _t168D = 0.e0;
      real _t168E = 0.e0;
      _t168B = [_t168C, _t168D, _t168E];
    }
    rayOrig168A = prim +0017<$[3]> (camEye0510, _t168B);
    vec3 _t1690;
    if camOrtho051F {
      real _t1691 = 0.e0;
      real _t1692 = 0.e0;
      real _t1693 = 0.e0;
      _t1690 = [_t1691, _t1692, _t1693];
    } else {
      _t1690 = prim /0057<$[3]> (UV1687, camDist15F9);
    }
    rayVec168F = prim +0017<$[3]> (camN15F4, _t1690);
    real _t1695 = prim |()|00B5<$[3]> (rayVec168F);
    real _t1696 = prim *0034 (_t1695, rayStep0522);
    alphaFix1694 = prim /0055 (_t1696, refStep0523);
    vec3 _t1698 = prim normalize0137<$[3]> (rayVec168F);
    eyeDir1697 = prim unary -008B<$[3]> (_t1698);
    phKa1699 = phong052B[0];
    phKd169A = phong052B[1];
    phKs169B = phong052B[2];
    phSp169C = phong052B[3];
    real _t169E = 0.e0;
    real _t169F = 0.e0;
    real _t16A0 = 0.e0;
    real _t16A1 = 0.e0;
    rgba169D = [_t169E, _t169F, _t16A0, _t16A1];
    raw16A2 = 0.e0;
    real _t16A4 = 0.e0;
    real _t16A5 = 0.e0;
    real _t16A6 = 0.e0;
    rgb16A3 = [_t16A4, _t16A5, _t16A6];
    transp16A7 = 0.1e1;
  }
  update
  {
    rayN1686 = prim +0017<$[]> (rayN1686, rayStep0522);
    bool _t16A8 = prim >0080 (rayN1686, camFarVsp1605);
    if _t16A8 {
      stabilize;
    }
    vec3 _t16A9 = prim *0036<$[3]> (rayN1686, rayVec168F);
    vec3 pos16AA = prim +0017<$[3]> (rayOrig168A, _t16A9);
    bool _t16AB;
    bool _t1751;
    Femdata: RefCell _t1752;
    Femdata: RefCell _t1753 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1752 = _t1753;
    real _t1754 = 0.1e-8;
    bool _t1755 = extractFemItemN((_t1752, pos16AA, _t1754),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1755 {
      bool _t1756;
      real _t1757;
      field(3)[3] _t1758 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1759 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1758);
      tensor[3,3] _t175A = prim @00A5<#∞; %3; $[3,3]> (_t1759, pos16AA);
      real[3] _t175B = prim evals009F (_t175A);
      int _t175C = 1;
      real _t175D = prim $sub01C0<real; %3> (_t175B, _t175C);
      real _t175E = prim unary -008B<$[]> (_t175D);
      field(3)[3] _t175F = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1760 = prim @00A5<#∞; %3; $[3]> (_t175F, pos16AA);
      real _t1761 = prim |()|00B5<$[3]> (_t1760);
      real _t1762 = prim +0017<$[]> (fBias0528, _t1761);
      real _t1763 = prim /0055 (_t175E, _t1762);
      _t1757 = _t1763;
      bool _t1764 = prim >0080 (_t1757, fStrTh0526);
      if _t1764 {
        bool _t1765;
        real _t1766;
        real _t1767 = 0.1e1;
        _t1766 = _t1767;
        bool _t1768 = prim >=007E (_t1766, fMaskTh0527);
        if _t1768 {
          bool _t1769 = true;
          _t1765 = _t1769;
        } else {
          _t1765 = false;
        }
        _t1756 = _t1765;
      } else {
        _t1756 = false;
      }
      _t1751 = _t1756;
    } else {
      _t1751 = false;
    }
    _t16AB = _t1751;
    bool _t16AC = prim !00BC (_t16AB);
    if _t16AC {
      continue;
    }
    vec3 step16AD;
    bool _t1716 = prim !00BC (analytical053F);
    if _t1716 {
      field(3)[3] _t1717 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1718 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1717);
      tensor[3,3] _t1719 = prim @00A5<#∞; %3; $[3,3]> (_t1718, pos16AA);
      vec3[3] E171A = prim evecs00A0 (_t1719);
      field(3)[3] _t171B = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t171C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t171B);
      tensor[3,3] _t171D = prim @00A5<#∞; %3; $[3,3]> (_t171C, pos16AA);
      real[3] L171E = prim evals009F (_t171D);
      int _t171F = 2;
      vec3 _t1720 = prim $sub01C0<vec3; %3> (E171A, _t171F);
      int _t1721 = 2;
      vec3 _t1722 = prim $sub01C0<vec3; %3> (E171A, _t1721);
      tensor[3,3] _t1723 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1720, _t1722);
      int _t1724 = 2;
      real _t1725 = prim $sub01C0<real; %3> (L171E, _t1724);
      tensor[3,3] _t1726 = prim /0057<$[3,3]> (_t1723, _t1725);
      int _t1727 = 1;
      vec3 _t1728 = prim $sub01C0<vec3; %3> (E171A, _t1727);
      int _t1729 = 1;
      vec3 _t172A = prim $sub01C0<vec3; %3> (E171A, _t1729);
      tensor[3,3] _t172B = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1728, _t172A);
      int _t172C = 1;
      real _t172D = prim $sub01C0<real; %3> (L171E, _t172C);
      tensor[3,3] _t172E = prim /0057<$[3,3]> (_t172B, _t172D);
      tensor[3,3] _t172F = prim +0017<$[3,3]> (_t1726, _t172E);
      tensor[3,3] _t1730 = prim unary -008B<$[3,3]> (_t172F);
      field(3)[3] _t1731 = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1732 = prim @00A5<#∞; %3; $[3]> (_t1731, pos16AA);
      vec3 _t1733 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1730, _t1732);
      step16AD = _t1733;
    } else {
      field#1(3)[3] _t1734 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1735 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1734);
      tensor[3,3] _t1736 = prim @00A5<#0; %3; $[3,3]> (_t1735, pos16AA);
      vec3[3] E1737 = prim evecs00A0 (_t1736);
      field#1(3)[3] _t1738 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1739 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1738);
      tensor[3,3] _t173A = prim @00A5<#0; %3; $[3,3]> (_t1739, pos16AA);
      real[3] L173B = prim evals009F (_t173A);
      int _t173C = 2;
      vec3 _t173D = prim $sub01C0<vec3; %3> (E1737, _t173C);
      int _t173E = 2;
      vec3 _t173F = prim $sub01C0<vec3; %3> (E1737, _t173E);
      tensor[3,3] _t1740 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t173D, _t173F);
      int _t1741 = 2;
      real _t1742 = prim $sub01C0<real; %3> (L173B, _t1741);
      tensor[3,3] _t1743 = prim /0057<$[3,3]> (_t1740, _t1742);
      int _t1744 = 1;
      vec3 _t1745 = prim $sub01C0<vec3; %3> (E1737, _t1744);
      int _t1746 = 1;
      vec3 _t1747 = prim $sub01C0<vec3; %3> (E1737, _t1746);
      tensor[3,3] _t1748 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      real _t174A = prim $sub01C0<real; %3> (L173B, _t1749);
      tensor[3,3] _t174B = prim /0057<$[3,3]> (_t1748, _t174A);
      tensor[3,3] _t174C = prim +0017<$[3,3]> (_t1743, _t174B);
      tensor[3,3] _t174D = prim unary -008B<$[3,3]> (_t174C);
      field#1(3)[3] _t174E = prim ∇00A8<#2; %3> (G160B);
      vec3 _t174F = prim @00A5<#1; %3; $[3]> (_t174E, pos16AA);
      vec3 _t1750 = prim •00CE<$[3,3]; $[3]; $[3]> (_t174D, _t174F);
      step16AD = _t1750;
    }
    real _t16AE = prim |()|00B5<$[3]> (step16AD);
    real aa16AF;
    real _t170C = 0.e0;
    real _t170D = 0.1e1;
    real _t170E = 0.15e1;
    real _t170F = 0.1e1;
    real _t1710 = prim |()|00B5<$[]> (_t16AE);
    real _t1711 = prim /0055 (_t1710, thick0525);
    real _t1712 = prim -0026<$[]> (_t170F, _t1711);
    real _t1713 = prim *0034 (_t170E, _t1712);
    real _t1714 = prim clamp0094<$[]> (_t170C, _t170D, _t1713);
    real _t1715 = prim *0034 (maxAlpha0529, _t1714);
    aa16AF = _t1715;
    real _t16B0 = 0.e0;
    bool _t16B1 = prim ==0084 (aa16AF, _t16B0);
    if _t16B1 {
      continue;
    }
    real _t16B2 = 0.1e1;
    real _t16B3 = 0.1e1;
    real _t16B4 = prim -0026<$[]> (_t16B3, aa16AF);
    real _t16B5 = prim ^0069 (_t16B4, alphaFix1694);
    aa16AF = prim -0026<$[]> (_t16B2, _t16B5);
    vec3 _t16B6 = prim normalize0137<$[3]> (step16AD);
    vec3 snorm16B7 = prim unary -008B<$[3]> (_t16B6);
    real _t16B8 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, litwsp1609);
    int _t16B9 = 2;
    real dcomp16BA = prim ^0068 (_t16B8, _t16B9);
    real scomp16BB = 0.e0;
    real _t16BC = 0.e0;
    bool _t16BD = prim !=0088 (phKs169B, _t16BC);
    if _t16BD {
      vec3 _t16BE = prim +0017<$[3]> (eyeDir1697, litwsp1609);
      vec3 _t16BF = prim normalize0137<$[3]> (_t16BE);
      real _t16C0 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, _t16BF);
      real _t16C1 = prim |()|00B5<$[]> (_t16C0);
      scomp16BB = prim ^0069 (_t16C1, phSp169C);
    }
    vec3 dcol16C2 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1604, rayN1686, camFarVsp1605);
    real cmin16C3 = cminmax053C[0];
    real cmax16C4 = cminmax053C[1];
    real _t16C5 = 0.1e1;
    real _t16C6 = 0.1e1;
    real _t16C7 = 0.1e1;
    vec3 mcol16C8 = [_t16C5, _t16C6, _t16C7];
    bool _t16C9 = prim !=0088 (cmin16C3, cmax16C4);
    if _t16C9 {
      real _t16CA = 0.e0;
      real _t16CB = 0.1e1;
      vec3 _t16CC = prim +0017<$[3]> (pos16AA, step16AD);
      real _t16CD = prim @00A5<#∞; %3; $[]> (C15F2, _t16CC);
      real _t16CE = prim lerp0098<$[]> (_t16CA, _t16CB, cmin16C3, _t16CD, cmax16C4);
      mcol16C8 = prim @00A5<#0; %1; $[3]> (CM15F1, _t16CE);
    }
    real _t16CF = prim *0034 (transp16A7, aa16AF);
    real _t16D0 = prim *0034 (phKd169A, dcomp16BA);
    real _t16D1 = prim +0017<$[]> (phKa1699, _t16D0);
    vec3 _t16D2 = prim modulate0129<%3> (dcol16C2, mcol16C8);
    vec3 _t16D3 = prim *0036<$[3]> (_t16D1, _t16D2);
    real _t16D4 = prim *0034 (phKs169B, scomp16BB);
    real _t16D5 = 0.1e1;
    real _t16D6 = 0.1e1;
    real _t16D7 = 0.1e1;
    vec3 _t16D8 = [_t16D5, _t16D6, _t16D7];
    vec3 _t16D9 = prim *0036<$[3]> (_t16D4, _t16D8);
    vec3 _t16DA = prim +0017<$[3]> (_t16D3, _t16D9);
    vec3 _t16DB = prim *0036<$[3]> (_t16CF, _t16DA);
    rgb16A3 = prim +0017<$[3]> (rgb16A3, _t16DB);
    real _t16DC = 0.1e1;
    real _t16DD = prim -0026<$[]> (_t16DC, aa16AF);
    transp16A7 = prim *0034 (transp16A7, _t16DD);
    bool _t16DE = prim <007A (transp16A7, transp00524);
    if _t16DE {
      transp16A7 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t16DF = 0.1e1;
    bool _t16E0 = prim <007A (transp16A7, _t16DF);
    if _t16E0 {
      real _t16E1 = 0.1e1;
      real aa16E2 = prim -0026<$[]> (_t16E1, transp16A7);
      real _t16E3 = rgb16A3[0];
      real _t16E4 = prim /0055 (_t16E3, aa16E2);
      real _t16E5 = rgb16A3[1];
      real _t16E6 = prim /0055 (_t16E5, aa16E2);
      real _t16E7 = rgb16A3[2];
      real _t16E8 = prim /0055 (_t16E7, aa16E2);
      rgba169D = [_t16E4, _t16E6, _t16E8, aa16E2];
    }
  }
}
grid(2) {
  int _t16E9 = 0;
  int _t16EA = 1;
  int _t16EB = prim -0024 (iresV0521, _t16EA);
  int[] _t16EC = prim $range01C3 (_t16E9, _t16EB);
  foreach vi16F2 in _t16EC {
    int _t16ED = 0;
    int _t16EE = 1;
    int _t16EF = prim -0024 (iresU0520, _t16EE);
    int[] _t16F0 = prim $range01C3 (_t16ED, _t16EF);
    foreach ui16F1 in _t16F0 {
      new ray (ui16F1, vi16F2);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04FD;
input FemData:Space 0space0509_intermedateGlobal050A;
input FemData:FemFunc 0U050B_intermedateGlobal050C;
input int cellChoice050D;
input image(1)[3] cmap050F = image("cmap.nrrd");
input vec3 camEye0510 = <default>;
input vec3 camAt0514 = <default>;
input vec3 camUp0518 = <default>;
input real camNear051C = <default>;
input real camFar051D = <default>;
input real camFOV051E = <default>;
input bool camOrtho051F = <default>;
input int iresU0520 = <default>;
input int iresV0521 = <default>;
input real rayStep0522 = <default>;
input real refStep0523 = <default>;
input real transp00524 = <default>;
input real thick0525 = <default>;
input real fStrTh0526 = <default>;
input real fMaskTh0527 = <default>;
input real fBias0528 = <default>;
input real maxAlpha0529 = <default>;
input bool light052A = <default>;
input vec4 phong052B = <default>;
input vec3 mcNear0530 = <default>;
input vec3 mcFar0534 = <default>;
input vec3 litdir0538 = <default>;
input vec2 cminmax053C = <default>;
input bool analytical053F = <default>;
input image(3)[] umm0541 = image("data.nrrd");
constants {
  real _t0511 = 0.e0;
  real _t0512 = -0.2e1;
  real _t0513 = 0.e0;
  camEye0510 = [_t0511, _t0512, _t0513];
  real _t0515 = 0.e0;
  real _t0516 = 0.e0;
  real _t0517 = 0.e0;
  camAt0514 = [_t0515, _t0516, _t0517];
  real _t0519 = 0.e0;
  real _t051A = 0.e0;
  real _t051B = 0.1e1;
  camUp0518 = [_t0519, _t051A, _t051B];
  camNear051C = -0.4e1;
  camFar051D = 0.4e1;
  camFOV051E = 0.1e2;
  camOrtho051F = false;
  iresU0520 = 100;
  iresV0521 = 100;
  rayStep0522 = 0.1e-3;
  refStep0523 = 0.1e-3;
  transp00524 = 0.5e-2;
  thick0525 = 0.1e-1;
  fStrTh0526 = 0.e0;
  fMaskTh0527 = 0.e0;
  fBias0528 = 0.1e0;
  maxAlpha0529 = 0.1e1;
  light052A = false;
  real _t052C = 0.1e0;
  real _t052D = 0.7e0;
  real _t052E = 0.2e0;
  real _t052F = 0.1e3;
  phong052B = [_t052C, _t052D, _t052E, _t052F];
  real _t0531 = 0.1e1;
  real _t0532 = 0.1e1;
  real _t0533 = 0.1e1;
  mcNear0530 = [_t0531, _t0532, _t0533];
  real _t0535 = 0.1e1;
  real _t0536 = 0.1e1;
  real _t0537 = 0.1e1;
  mcFar0534 = [_t0535, _t0536, _t0537];
  real _t0539 = 0.e0;
  real _t053A = -0.1e1;
  real _t053B = 0.e0;
  litdir0538 = [_t0539, _t053A, _t053B];
  real _t053D = 0.e0;
  real _t053E = 0.e0;
  cminmax053C = [_t053D, _t053E];
  analytical053F = true;
}
global Femdata: MeshCell[] 0cell_block04FE;
global Femdata: Space space0509;
global Femdata: FemFunc U050B;
global Femdata: MeshCell c115E6;
global field(3)[] F15EE;
global field#0(1)[3] CM15F1;
global field(3)[] C15F2;
global vec3 camN15F4;
global vec3 camU15F6;
global vec3 camV15F7;
global real camDist15F9;
global real camVmax15FF;
global real camUmax1603;
global real camNearVsp1604;
global real camFarVsp1605;
global vec3 litwsp1609;
global field#2(3)[] G160B;
function int[2]#8 nextCell405D8 (int faceIdx1239, int cell123A, Femdata: Mesh mesh123B)
{
  int _t123C = 12;
  int _t123D = prim *0033 (cell123A, _t123C);
  int _t123E = 2;
  int _t123F = prim *0033 (faceIdx1239, _t123E);
  int _t1240 = prim +0015 (_t123D, _t123F);
  int[2] _t1241 = extractFemItemN((mesh123B, _t1240),CellFaceCell(Mesh),);
  return _t1241;
}
globalInit {
  int _t0501 = 0;
  int _t04FF = 1;
  int _t0503 = extractFemItem(NumCell(Mesh), int, block04FD);
  int _t0502 = prim -0024 (_t0503, _t04FF);
  int[] _t0506 = prim $range01C3 (_t0501, _t0502);
  Femdata: MeshCell[] _t0507 = {};
  foreach _t0505 in _t0506 {
    Femdata: MeshCell _t0508 = loadFem(MeshCell, block04FD, _t0505);
    _t0507 = prim @0010<Femdata: MeshCell> (_t0507, _t0508);
  }
  0cell_block04FE = _t0507;
  space0509 = loadFem(Space, 0space0509_intermedateGlobal050A, block04FD);
  U050B = loadFem(FemFunc, 0U050B_intermedateGlobal050C, space0509);
  c115E6 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04FE, cellChoice050D);
  Femdata: FuncCell _t15E7;
  int _t170A = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t170B = loadFem(FuncCell, U050B, _t170A);
  _t15E7 = _t170B;
  Femdata: FemFunc _t15E8 = extractFem(_t15E7, FemFunc);
  Femdata: FuncCell _t15E9;
  int _t1708 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1709 = loadFem(FuncCell, U050B, _t1708);
  _t15E9 = _t1709;
  Femdata: FemFunc _t15EA = extractFem(_t15E9, FemFunc);
  Femdata: Space _t15EB = extractFem(_t15EA, Space);
  Femdata: FuncCell _t15EC;
  int _t1706 = extractFemItem(CellIndex(MeshCell), int, c115E6);
  Femdata: FuncCell _t1707 = loadFem(FuncCell, U050B, _t1706);
  _t15EC = _t1707;
  int _t15ED = extractFemItem(CellIndex(FuncCell), int, _t15EC);
  F15EE = femField(_t15E8,_t15ED,field(3)[],refField,);
  kernel _t15EF = tent;
  IMAGE1D<double[3]> img15F0 = clamp(cmap050F);
  CM15F1 = prim ⊛0074<#0; %1; $[3]> (_t15EF, img15F0);
  C15F2 = F15EE;
  vec3 _t15F3 = prim -0026<$[3]> (camAt0514, camEye0510);
  camN15F4 = prim normalize0137<$[3]> (_t15F3);
  vec3 _t15F5 = prim ×00BE (camN15F4, camUp0518);
  camU15F6 = prim normalize0137<$[3]> (_t15F5);
  camV15F7 = prim ×00BE (camN15F4, camU15F6);
  vec3 _t15F8 = prim -0026<$[3]> (camAt0514, camEye0510);
  camDist15F9 = prim |()|00B5<$[3]> (_t15F8);
  real _t15FA = 0.314159265358979323846264338327950288e1;
  real _t15FB = prim *0034 (camFOV051E, _t15FA);
  real _t15FC = 0.36e3;
  real _t15FD = prim /0055 (_t15FB, _t15FC);
  real _t15FE = prim tan0179 (_t15FD);
  camVmax15FF = prim *0034 (_t15FE, camDist15F9);
  real _t1600 = (real)iresU0520;
  real _t1601 = prim *0034 (camVmax15FF, _t1600);
  real _t1602 = (real)iresV0521;
  camUmax1603 = prim /0055 (_t1601, _t1602);
  camNearVsp1604 = prim +0017<$[]> (camNear051C, camDist15F9);
  camFarVsp1605 = prim +0017<$[]> (camFar051D, camDist15F9);
  tensor[3,3] _t1606 = [camU15F6, camV15F7, camN15F4];
  tensor[3,3] _t1607 = prim transpose0145<%3; %3> (_t1606);
  vec3 _t1608 = prim normalize0137<$[3]> (litdir0538);
  litwsp1609 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1607, _t1608);
  kernel _t160A = bspln3;
  G160B = prim ⊛0070<#2; %3; $[]> (umm0541, _t160A);
}
strand ray (int ui1676, int vi1677) {
  real rayU1678;
  real rayV167F;
  real rayN1686;
  vec3 UV1687;
  vec3 rayOrig168A;
  vec3 rayVec168F;
  real alphaFix1694;
  vec3 eyeDir1697;
  real phKa1699;
  real phKd169A;
  real phKs169B;
  real phSp169C;
  output vec4 rgba169D;
  output real raw16A2;
  vec3 rgb16A3;
  real transp16A7;
  {
    real _t1679 = prim unary -008B<$[]> (camUmax1603);
    real _t167A = -0.5e0;
    real _t167B = (real)ui1676;
    real _t167C = (real)iresU0520;
    real _t167D = 0.5e0;
    real _t167E = prim -0026<$[]> (_t167C, _t167D);
    rayU1678 = prim lerp0098<$[]> (_t1679, camUmax1603, _t167A, _t167B, _t167E);
    real _t1680 = prim unary -008B<$[]> (camVmax15FF);
    real _t1681 = -0.5e0;
    real _t1682 = (real)vi1677;
    real _t1683 = (real)iresV0521;
    real _t1684 = 0.5e0;
    real _t1685 = prim -0026<$[]> (_t1683, _t1684);
    rayV167F = prim lerp0098<$[]> (_t1680, camVmax15FF, _t1681, _t1682, _t1685);
    rayN1686 = camNearVsp1604;
    vec3 _t1688 = prim *0036<$[3]> (rayU1678, camU15F6);
    vec3 _t1689 = prim *0036<$[3]> (rayV167F, camV15F7);
    UV1687 = prim +0017<$[3]> (_t1688, _t1689);
    vec3 _t168B;
    if camOrtho051F {
      _t168B = UV1687;
    } else {
      real _t168C = 0.e0;
      real _t168D = 0.e0;
      real _t168E = 0.e0;
      _t168B = [_t168C, _t168D, _t168E];
    }
    rayOrig168A = prim +0017<$[3]> (camEye0510, _t168B);
    vec3 _t1690;
    if camOrtho051F {
      real _t1691 = 0.e0;
      real _t1692 = 0.e0;
      real _t1693 = 0.e0;
      _t1690 = [_t1691, _t1692, _t1693];
    } else {
      _t1690 = prim /0057<$[3]> (UV1687, camDist15F9);
    }
    rayVec168F = prim +0017<$[3]> (camN15F4, _t1690);
    real _t1695 = prim |()|00B5<$[3]> (rayVec168F);
    real _t1696 = prim *0034 (_t1695, rayStep0522);
    alphaFix1694 = prim /0055 (_t1696, refStep0523);
    vec3 _t1698 = prim normalize0137<$[3]> (rayVec168F);
    eyeDir1697 = prim unary -008B<$[3]> (_t1698);
    phKa1699 = phong052B[0];
    phKd169A = phong052B[1];
    phKs169B = phong052B[2];
    phSp169C = phong052B[3];
    real _t169E = 0.e0;
    real _t169F = 0.e0;
    real _t16A0 = 0.e0;
    real _t16A1 = 0.e0;
    rgba169D = [_t169E, _t169F, _t16A0, _t16A1];
    raw16A2 = 0.e0;
    real _t16A4 = 0.e0;
    real _t16A5 = 0.e0;
    real _t16A6 = 0.e0;
    rgb16A3 = [_t16A4, _t16A5, _t16A6];
    transp16A7 = 0.1e1;
  }
  update
  {
    rayN1686 = prim +0017<$[]> (rayN1686, rayStep0522);
    bool _t16A8 = prim >0080 (rayN1686, camFarVsp1605);
    if _t16A8 {
      stabilize;
    }
    vec3 _t16A9 = prim *0036<$[3]> (rayN1686, rayVec168F);
    vec3 pos16AA = prim +0017<$[3]> (rayOrig168A, _t16A9);
    bool _t16AB;
    bool _t1751;
    Femdata: RefCell _t1752;
    Femdata: RefCell _t1753 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04FD);
    _t1752 = _t1753;
    real _t1754 = 0.1e-8;
    bool _t1755 = extractFemItemN((_t1752, pos16AA, _t1754),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1755 {
      bool _t1756;
      real _t1757;
      field(3)[3] _t1758 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1759 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1758);
      tensor[3,3] _t175A = prim @00A5<#∞; %3; $[3,3]> (_t1759, pos16AA);
      real[3] _t175B = prim evals009F (_t175A);
      int _t175C = 1;
      real _t175D = prim $sub01C0<real; %3> (_t175B, _t175C);
      real _t175E = prim unary -008B<$[]> (_t175D);
      field(3)[3] _t175F = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1760 = prim @00A5<#∞; %3; $[3]> (_t175F, pos16AA);
      real _t1761 = prim |()|00B5<$[3]> (_t1760);
      real _t1762 = prim +0017<$[]> (fBias0528, _t1761);
      real _t1763 = prim /0055 (_t175E, _t1762);
      _t1757 = _t1763;
      bool _t1764 = prim >0080 (_t1757, fStrTh0526);
      if _t1764 {
        bool _t1765;
        real _t1766;
        real _t1767 = 0.1e1;
        _t1766 = _t1767;
        bool _t1768 = prim >=007E (_t1766, fMaskTh0527);
        if _t1768 {
          bool _t1769 = true;
          _t1765 = _t1769;
        } else {
          _t1765 = false;
        }
        _t1756 = _t1765;
      } else {
        _t1756 = false;
      }
      _t1751 = _t1756;
    } else {
      _t1751 = false;
    }
    _t16AB = _t1751;
    bool _t16AC = prim !00BC (_t16AB);
    if _t16AC {
      continue;
    }
    vec3 step16AD;
    bool _t1716 = prim !00BC (analytical053F);
    if _t1716 {
      field(3)[3] _t1717 = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t1718 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1717);
      tensor[3,3] _t1719 = prim @00A5<#∞; %3; $[3,3]> (_t1718, pos16AA);
      vec3[3] E171A = prim evecs00A0 (_t1719);
      field(3)[3] _t171B = prim ∇00A8<#∞; %3> (F15EE);
      field(3)[3,3] _t171C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t171B);
      tensor[3,3] _t171D = prim @00A5<#∞; %3; $[3,3]> (_t171C, pos16AA);
      real[3] L171E = prim evals009F (_t171D);
      int _t171F = 2;
      vec3 _t1720 = prim $sub01C0<vec3; %3> (E171A, _t171F);
      int _t1721 = 2;
      vec3 _t1722 = prim $sub01C0<vec3; %3> (E171A, _t1721);
      tensor[3,3] _t1723 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1720, _t1722);
      int _t1724 = 2;
      real _t1725 = prim $sub01C0<real; %3> (L171E, _t1724);
      tensor[3,3] _t1726 = prim /0057<$[3,3]> (_t1723, _t1725);
      int _t1727 = 1;
      vec3 _t1728 = prim $sub01C0<vec3; %3> (E171A, _t1727);
      int _t1729 = 1;
      vec3 _t172A = prim $sub01C0<vec3; %3> (E171A, _t1729);
      tensor[3,3] _t172B = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1728, _t172A);
      int _t172C = 1;
      real _t172D = prim $sub01C0<real; %3> (L171E, _t172C);
      tensor[3,3] _t172E = prim /0057<$[3,3]> (_t172B, _t172D);
      tensor[3,3] _t172F = prim +0017<$[3,3]> (_t1726, _t172E);
      tensor[3,3] _t1730 = prim unary -008B<$[3,3]> (_t172F);
      field(3)[3] _t1731 = prim ∇00A8<#∞; %3> (F15EE);
      vec3 _t1732 = prim @00A5<#∞; %3; $[3]> (_t1731, pos16AA);
      vec3 _t1733 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1730, _t1732);
      step16AD = _t1733;
    } else {
      field#1(3)[3] _t1734 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1735 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1734);
      tensor[3,3] _t1736 = prim @00A5<#0; %3; $[3,3]> (_t1735, pos16AA);
      vec3[3] E1737 = prim evecs00A0 (_t1736);
      field#1(3)[3] _t1738 = prim ∇00A8<#2; %3> (G160B);
      field#0(3)[3,3] _t1739 = prim ∇⊗00AD<#1; %3; $[]; %3> (_t1738);
      tensor[3,3] _t173A = prim @00A5<#0; %3; $[3,3]> (_t1739, pos16AA);
      real[3] L173B = prim evals009F (_t173A);
      int _t173C = 2;
      vec3 _t173D = prim $sub01C0<vec3; %3> (E1737, _t173C);
      int _t173E = 2;
      vec3 _t173F = prim $sub01C0<vec3; %3> (E1737, _t173E);
      tensor[3,3] _t1740 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t173D, _t173F);
      int _t1741 = 2;
      real _t1742 = prim $sub01C0<real; %3> (L173B, _t1741);
      tensor[3,3] _t1743 = prim /0057<$[3,3]> (_t1740, _t1742);
      int _t1744 = 1;
      vec3 _t1745 = prim $sub01C0<vec3; %3> (E1737, _t1744);
      int _t1746 = 1;
      vec3 _t1747 = prim $sub01C0<vec3; %3> (E1737, _t1746);
      tensor[3,3] _t1748 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (_t1745, _t1747);
      int _t1749 = 1;
      real _t174A = prim $sub01C0<real; %3> (L173B, _t1749);
      tensor[3,3] _t174B = prim /0057<$[3,3]> (_t1748, _t174A);
      tensor[3,3] _t174C = prim +0017<$[3,3]> (_t1743, _t174B);
      tensor[3,3] _t174D = prim unary -008B<$[3,3]> (_t174C);
      field#1(3)[3] _t174E = prim ∇00A8<#2; %3> (G160B);
      vec3 _t174F = prim @00A5<#1; %3; $[3]> (_t174E, pos16AA);
      vec3 _t1750 = prim •00CE<$[3,3]; $[3]; $[3]> (_t174D, _t174F);
      step16AD = _t1750;
    }
    real _t16AE = prim |()|00B5<$[3]> (step16AD);
    real aa16AF;
    real _t170C = 0.e0;
    real _t170D = 0.1e1;
    real _t170E = 0.15e1;
    real _t170F = 0.1e1;
    real _t1710 = prim |()|00B5<$[]> (_t16AE);
    real _t1711 = prim /0055 (_t1710, thick0525);
    real _t1712 = prim -0026<$[]> (_t170F, _t1711);
    real _t1713 = prim *0034 (_t170E, _t1712);
    real _t1714 = prim clamp0094<$[]> (_t170C, _t170D, _t1713);
    real _t1715 = prim *0034 (maxAlpha0529, _t1714);
    aa16AF = _t1715;
    real _t16B0 = 0.e0;
    bool _t16B1 = prim ==0084 (aa16AF, _t16B0);
    if _t16B1 {
      continue;
    }
    real _t16B2 = 0.1e1;
    real _t16B3 = 0.1e1;
    real _t16B4 = prim -0026<$[]> (_t16B3, aa16AF);
    real _t16B5 = prim ^0069 (_t16B4, alphaFix1694);
    aa16AF = prim -0026<$[]> (_t16B2, _t16B5);
    vec3 _t16B6 = prim normalize0137<$[3]> (step16AD);
    vec3 snorm16B7 = prim unary -008B<$[3]> (_t16B6);
    real _t16B8 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, litwsp1609);
    int _t16B9 = 2;
    real dcomp16BA = prim ^0068 (_t16B8, _t16B9);
    real scomp16BB = 0.e0;
    real _t16BC = 0.e0;
    bool _t16BD = prim !=0088 (phKs169B, _t16BC);
    if _t16BD {
      vec3 _t16BE = prim +0017<$[3]> (eyeDir1697, litwsp1609);
      vec3 _t16BF = prim normalize0137<$[3]> (_t16BE);
      real _t16C0 = prim •00CE<$[3]; $[3]; $[]> (snorm16B7, _t16BF);
      real _t16C1 = prim |()|00B5<$[]> (_t16C0);
      scomp16BB = prim ^0069 (_t16C1, phSp169C);
    }
    vec3 dcol16C2 = prim lerp0098<$[3]> (mcNear0530, mcFar0534, camNearVsp1604, rayN1686, camFarVsp1605);
    real cmin16C3 = cminmax053C[0];
    real cmax16C4 = cminmax053C[1];
    real _t16C5 = 0.1e1;
    real _t16C6 = 0.1e1;
    real _t16C7 = 0.1e1;
    vec3 mcol16C8 = [_t16C5, _t16C6, _t16C7];
    bool _t16C9 = prim !=0088 (cmin16C3, cmax16C4);
    if _t16C9 {
      real _t16CA = 0.e0;
      real _t16CB = 0.1e1;
      vec3 _t16CC = prim +0017<$[3]> (pos16AA, step16AD);
      real _t16CD = prim @00A5<#∞; %3; $[]> (C15F2, _t16CC);
      real _t16CE = prim lerp0098<$[]> (_t16CA, _t16CB, cmin16C3, _t16CD, cmax16C4);
      mcol16C8 = prim @00A5<#0; %1; $[3]> (CM15F1, _t16CE);
    }
    real _t16CF = prim *0034 (transp16A7, aa16AF);
    real _t16D0 = prim *0034 (phKd169A, dcomp16BA);
    real _t16D1 = prim +0017<$[]> (phKa1699, _t16D0);
    vec3 _t16D2 = prim modulate0129<%3> (dcol16C2, mcol16C8);
    vec3 _t16D3 = prim *0036<$[3]> (_t16D1, _t16D2);
    real _t16D4 = prim *0034 (phKs169B, scomp16BB);
    real _t16D5 = 0.1e1;
    real _t16D6 = 0.1e1;
    real _t16D7 = 0.1e1;
    vec3 _t16D8 = [_t16D5, _t16D6, _t16D7];
    vec3 _t16D9 = prim *0036<$[3]> (_t16D4, _t16D8);
    vec3 _t16DA = prim +0017<$[3]> (_t16D3, _t16D9);
    vec3 _t16DB = prim *0036<$[3]> (_t16CF, _t16DA);
    rgb16A3 = prim +0017<$[3]> (rgb16A3, _t16DB);
    real _t16DC = 0.1e1;
    real _t16DD = prim -0026<$[]> (_t16DC, aa16AF);
    transp16A7 = prim *0034 (transp16A7, _t16DD);
    bool _t16DE = prim <007A (transp16A7, transp00524);
    if _t16DE {
      transp16A7 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t16DF = 0.1e1;
    bool _t16E0 = prim <007A (transp16A7, _t16DF);
    if _t16E0 {
      real _t16E1 = 0.1e1;
      real aa16E2 = prim -0026<$[]> (_t16E1, transp16A7);
      real _t16E3 = rgb16A3[0];
      real _t16E4 = prim /0055 (_t16E3, aa16E2);
      real _t16E5 = rgb16A3[1];
      real _t16E6 = prim /0055 (_t16E5, aa16E2);
      real _t16E7 = rgb16A3[2];
      real _t16E8 = prim /0055 (_t16E7, aa16E2);
      rgba169D = [_t16E4, _t16E6, _t16E8, aa16E2];
    }
  }
}
grid(2) {
  int _t16E9 = 0;
  int _t16EA = 1;
  int _t16EB = prim -0024 (iresV0521, _t16EA);
  int[] _t16EC = prim $range01C3 (_t16E9, _t16EB);
  foreach vi16F2 in _t16EC {
    int _t16ED = 0;
    int _t16EE = 1;
    int _t16EF = prim -0024 (iresU0520, _t16EE);
    int[] _t16F0 = prim $range01C3 (_t16ED, _t16EF);
    foreach ui16F1 in _t16F0 {
      new ray (ui16F1, vi16F2);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block176A (block) = <no-default>
  input 0space0509_intermedateGlobal176B (space) = <no-default>
  input 0U050B_intermedateGlobal176C (U) = <no-default>
  input cellChoice176D (cellChoice) = <no-default>
  input cmap176E (cmap) = image("cmap.nrrd")
  input camEye176F (camEye) = <default>
  input camAt1770 (camAt) = <default>
  input camUp1771 (camUp) = <default>
  input camNear1772 (camNear) = <default>
  input camFar1773 (camFar) = <default>
  input camFOV1774 (camFOV) = <default>
  input camOrtho1775 (camOrtho) = <default>
  input iresU1776 (iresU) = <default>
  input iresV1777 (iresV) = <default>
  input rayStep1778 (rayStep) = <default>
  input refStep1779 (refStep) = <default>
  input transp0177A (transp0) = <default>
  input thick177B (thick) = <default>
  input fStrTh177C (fStrTh) = <default>
  input fMaskTh177D (fMaskTh) = <default>
  input fBias177E (fBias) = <default>
  input maxAlpha177F (maxAlpha) = <default>
  input light1780 (light) = <default>
  input phong1781 (phong) = <default>
  input mcNear1782 (mcNear) = <default>
  input mcFar1783 (mcFar) = <default>
  input litdir1784 (litdir) = <default>
  input cminmax1785 (cminmax) = <default>
  input analytical1786 (analytical) = <default>
  input umm1787 (umm) = image("data.nrrd")
  global femData:MeshCell[] 0cell_block1802
  global femData:Space space1803
  global femData:FemFunc U1804
  global femData:MeshCell c11805
  global field F1806
  global field CM1807
  global field C1808
  global tensor[3] camN1809
  global tensor[3] camU180A
  global tensor[3] camV180B
  global real camDist180C
  global real camVmax180D
  global real camUmax180E
  global real camNearVsp180F
  global real camFarVsp1810
  global tensor[3] litwsp1811
  global field G1812
## functions
  function int[2] nextCell41824 (int faceIdx1813#1, int cell1814#1, femData:Mesh mesh1815#1) {
    ENTRY1823:  preds = []
      int _t1816#1 = 12;
      int _t1818#1 = IMul(cell1814,_t1816);
      int _t181A#1 = 2;
      int _t181C#1 = IMul(faceIdx1813,_t181A);
      int _t181E#1 = IAdd(_t1818,_t181C);
      int[2] _t1820#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1815,_t181E);
      return _t1820
}
## input initialization
  ENTRY1800:  preds = []
    real _t1788#1 = 0.e0;
    real _t178A#1 = -0.2e1;
    real _t178C#1 = 0.e0;
    tensor[3] camEye178E#1 = <tensor[3]>[_t1788,_t178A,_t178C];
    globals.camEye176F = camEye178E;
    real _t1791#1 = 0.e0;
    real _t1793#1 = 0.e0;
    real _t1795#1 = 0.e0;
    tensor[3] camAt1797#1 = <tensor[3]>[_t1791,_t1793,_t1795];
    globals.camAt1770 = camAt1797;
    real _t179A#1 = 0.e0;
    real _t179C#1 = 0.e0;
    real _t179E#1 = 0.1e1;
    tensor[3] camUp17A0#1 = <tensor[3]>[_t179A,_t179C,_t179E];
    globals.camUp1771 = camUp17A0;
    real camNear17A3#1 = -0.4e1;
    globals.camNear1772 = camNear17A3;
    real camFar17A6#1 = 0.4e1;
    globals.camFar1773 = camFar17A6;
    real camFOV17A9#1 = 0.1e2;
    globals.camFOV1774 = camFOV17A9;
    bool camOrtho17AC#1 = false;
    globals.camOrtho1775 = camOrtho17AC;
    int iresU17AF#1 = 100;
    globals.iresU1776 = iresU17AF;
    int iresV17B2#1 = 100;
    globals.iresV1777 = iresV17B2;
    real rayStep17B5#1 = 0.1e-3;
    globals.rayStep1778 = rayStep17B5;
    real refStep17B8#1 = 0.1e-3;
    globals.refStep1779 = refStep17B8;
    real transp017BB#1 = 0.5e-2;
    globals.transp0177A = transp017BB;
    real thick17BE#1 = 0.1e-1;
    globals.thick177B = thick17BE;
    real fStrTh17C1#1 = 0.e0;
    globals.fStrTh177C = fStrTh17C1;
    real fMaskTh17C4#1 = 0.e0;
    globals.fMaskTh177D = fMaskTh17C4;
    real fBias17C7#1 = 0.1e0;
    globals.fBias177E = fBias17C7;
    real maxAlpha17CA#1 = 0.1e1;
    globals.maxAlpha177F = maxAlpha17CA;
    bool light17CD#1 = false;
    globals.light1780 = light17CD;
    real _t17D0#1 = 0.1e0;
    real _t17D2#1 = 0.7e0;
    real _t17D4#1 = 0.2e0;
    real _t17D6#1 = 0.1e3;
    tensor[4] phong17D8#1 = <tensor[4]>[_t17D0,_t17D2,_t17D4,_t17D6];
    globals.phong1781 = phong17D8;
    real _t17DB#1 = 0.1e1;
    real _t17DD#1 = 0.1e1;
    real _t17DF#1 = 0.1e1;
    tensor[3] mcNear17E1#1 = <tensor[3]>[_t17DB,_t17DD,_t17DF];
    globals.mcNear1782 = mcNear17E1;
    real _t17E4#1 = 0.1e1;
    real _t17E6#1 = 0.1e1;
    real _t17E8#1 = 0.1e1;
    tensor[3] mcFar17EA#1 = <tensor[3]>[_t17E4,_t17E6,_t17E8];
    globals.mcFar1783 = mcFar17EA;
    real _t17ED#1 = 0.e0;
    real _t17EF#1 = -0.1e1;
    real _t17F1#1 = 0.e0;
    tensor[3] litdir17F3#1 = <tensor[3]>[_t17ED,_t17EF,_t17F1];
    globals.litdir1784 = litdir17F3;
    real _t17F6#1 = 0.e0;
    real _t17F8#1 = 0.e0;
    tensor[2] cminmax17FA#1 = <tensor[2]>[_t17F6,_t17F8];
    globals.cminmax1785 = cminmax17FA;
    bool analytical17FD#1 = true;
    globals.analytical1786 = analytical17FD;
    return
## global-variable initialization
  ENTRY18C9:  preds = []
    femData:Mesh block1833#3 = globals.block176A;
    femData:Space 0space0509_intermedateGlobal1832#1 = globals.0space0509_intermedateGlobal176B;
    femData:FemFunc 0U050B_intermedateGlobal1831#1 = globals.0U050B_intermedateGlobal176C;
    int cellChoice1830#1 = globals.cellChoice176D;
    image(IMAGE1D<double[3]>) cmap182F#1 = globals.cmap176E;
    tensor[3] camEye182E#2 = globals.camEye176F;
    tensor[3] camAt182D#2 = globals.camAt1770;
    tensor[3] camUp182C#1 = globals.camUp1771;
    real camNear182B#1 = globals.camNear1772;
    real camFar182A#1 = globals.camFar1773;
    real camFOV1829#1 = globals.camFOV1774;
    int iresU1828#1 = globals.iresU1776;
    int iresV1827#1 = globals.iresV1777;
    tensor[3] litdir1826#2 = globals.litdir1784;
    image(IMAGE3D<float[]>) umm1825#1 = globals.umm1787;
    int _t1843#1 = 0;
    int _t1845#1 = 1;
    int _t1847#1 = ExtractFemItem<int,NumCell(Mesh)>(block1833);
    int _t1849#1 = ISub(_t1847,_t1845);
    int[] _t184B#1 = Range(_t1843,_t1849);
    femData:MeshCell[] _t184D#1 = <femData:MeshCell[]>{};
  FOREACH1851:  preds = [ASSIGN184E,NEXT1856]
    foreach (_t184F in _t184B) on exit goto ASSIGN1858
      femData:MeshCell[] _t1850#2 = phi(_t184D,_t1854)
    femData:MeshCell _t1852#1 = LoadFem<femData:MeshCell>(block1833,_t184F);
    femData:MeshCell[] _t1854#1 = Append<femData:MeshCell>(_t1850,_t1852);
    goto FOREACH1851
  ASSIGN1858:  preds = [FOREACH1851]
    femData:MeshCell[] 0cell_block1857#2 = _t1850;
    globals.0cell_block1802 = 0cell_block1857;
    femData:Space space185A#2 = LoadFem<femData:Space>(0space0509_intermedateGlobal1832,block1833);
    globals.space1803 = space185A;
    femData:FemFunc U185D#4 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1831,space185A);
    globals.U1804 = U185D;
    femData:MeshCell c11860#4 = Subscript<femData:MeshCell[]>(0cell_block1857,cellChoice1830);
    globals.c11805 = c11860;
    int _t1864#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11860);
    femData:FuncCell _t1866#1 = LoadFem<femData:FuncCell>(U185D,_t1864);
    femData:FuncCell _t1868#1 = _t1866;
    femData:FemFunc _t186A#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1868);
    int _t186D#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11860);
    femData:FuncCell _t186F#1 = LoadFem<femData:FuncCell>(U185D,_t186D);
    femData:FuncCell _t1871#1 = _t186F;
    femData:FemFunc _t1873#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1871);
    femData:Space _t1875#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1873);
    int _t1878#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11860);
    femData:FuncCell _t187A#1 = LoadFem<femData:FuncCell>(U185D,_t1878);
    femData:FuncCell _t187C#1 = _t187A;
    int _t187E#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t187C);
    field F1880#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t187E,_t1875,_t186A);
    globals.F1806 = F1880;
    kernel _t1883#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1885#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap182F);
    field CM1887#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img1885,_t1883);
    globals.CM1807 = CM1887;
    field C188A#1 = F1880;
    globals.C1808 = C188A;
    tensor[3] _t188D#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt182D,camEye182E);
    tensor[3] camN188F#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t188D,_t188D);
    globals.camN1809 = camN188F;
    tensor[3] _t1892#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN188F,camUp182C);
    tensor[3] camU1894#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1892,_t1892);
    globals.camU180A = camU1894;
    tensor[3] camV1897#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN188F,camU1894);
    globals.camV180B = camV1897;
    tensor[3] _t189A#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt182D,camEye182E);
    real camDist189C#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t189A);
    globals.camDist180C = camDist189C;
    real _t189F#1 = 0.314159265358979323846264338327950288e1;
    real _t18A1#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1829,_t189F);
    real _t18A3#1 = 0.36e3;
    real _t18A5#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18A1,_t18A3);
    real _t18A7#1 = λ(T0[])<Tangent(T0)> (_t18A5);
    real camVmax18A9#2 = λ(T0[],T1[])<(T0 * T1)> (_t18A7,camDist189C);
    globals.camVmax180D = camVmax18A9;
    real _t18AC#1 = IntToReal(iresU1828);
    real _t18AE#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax18A9,_t18AC);
    real _t18B0#1 = IntToReal(iresV1827);
    real camUmax18B2#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18AE,_t18B0);
    globals.camUmax180E = camUmax18B2;
    real camNearVsp18B5#1 = λ(T0[],T1[])<(T0 + T1)> (camNear182B,camDist189C);
    globals.camNearVsp180F = camNearVsp18B5;
    real camFarVsp18B8#1 = λ(T0[],T1[])<(T0 + T1)> (camFar182A,camDist189C);
    globals.camFarVsp1810 = camFarVsp18B8;
    tensor[3,3] _t18BB#1 = <tensor[3,3]>[camU1894,camV1897,camN188F];
    tensor[3,3] _t18BD#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t18BB);
    tensor[3] _t18BF#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (litdir1826,litdir1826);
    tensor[3] litwsp18C1#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t18BD,_t18BF);
    globals.litwsp1811 = litwsp18C1;
    kernel _t18C4#1 = Kernel<bspln3,0>;
    field G18C6#1 = λ(V0(3)[],H1)<V0⊛H1> (umm1825,_t18C4);
    globals.G1812 = G18C6;
    return
## strand
  strand ray (int ui18E8#1, int vi18E9#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1992:  preds = []
        tensor[3] camEye1907#1 = globals.camEye176F;
        bool camOrtho1906#2 = globals.camOrtho1775;
        int iresU1905#1 = globals.iresU1776;
        int iresV1904#1 = globals.iresV1777;
        real rayStep1903#1 = globals.rayStep1778;
        real refStep1902#1 = globals.refStep1779;
        tensor[4] phong1901#4 = globals.phong1781;
        tensor[3] camN1900#1 = globals.camN1809;
        tensor[3] camU18FF#1 = globals.camU180A;
        tensor[3] camV18FE#1 = globals.camV180B;
        real camDist18FD#1 = globals.camDist180C;
        real camVmax18FC#2 = globals.camVmax180D;
        real camUmax18FB#2 = globals.camUmax180E;
        real camNearVsp18FA#1 = globals.camNearVsp180F;
        real _t1926#1 = λ(T0[])<Neg(T0)> (camUmax18FB);
        real _t1928#1 = -0.5e0;
        real _t192A#1 = IntToReal(ui18E8);
        real _t192C#1 = IntToReal(iresU1905);
        real _t192E#1 = 0.5e0;
        real _t1930#1 = λ(T0[],T1[])<(T0) - (T1)> (_t192C,_t192E);
        real rayU1932#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1926,camUmax18FB,_t1928,_t192A,_t1930);
        real _t1934#1 = λ(T0[])<Neg(T0)> (camVmax18FC);
        real _t1936#1 = -0.5e0;
        real _t1938#1 = IntToReal(vi18E9);
        real _t193A#1 = IntToReal(iresV1904);
        real _t193C#1 = 0.5e0;
        real _t193E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t193A,_t193C);
        real rayV1940#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1934,camVmax18FC,_t1936,_t1938,_t193E);
        real rayN1942#1 = camNearVsp18FA;
        tensor[3] _t1944#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU1932,camU18FF);
        tensor[3] _t1946#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV1940,camV18FE);
        tensor[3] UV1948#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1944,_t1946);
        if camOrtho1906 then goto ASSIGN194E else goto ASSIGN1950
      ASSIGN194E:  preds = [COND1957]
        tensor[3] _t194C#1 = UV1948;
        goto JOIN194B
      JOIN194B:  preds = [ASSIGN194E,ASSIGN1956]
        tensor[3] _t194D#1 = phi(_t194C,_t1955)
        tensor[3] rayOrig1958#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1907,_t194D);
        if camOrtho1906 then goto ASSIGN195D else goto ASSIGN1966
      ASSIGN195D:  preds = [COND1967]
        real _t195C#1 = 0.e0;
        real _t195E#1 = 0.e0;
        real _t1960#1 = 0.e0;
        tensor[3] _t1962#1 = <tensor[3]>[_t195C,_t195E,_t1960];
        goto JOIN195B
      JOIN195B:  preds = [ASSIGN1964,ASSIGN1966]
        tensor[3] _t1963#1 = phi(_t1962,_t1965)
        tensor[3] rayVec1968#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1900,_t1963);
        real _t196A#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec1968);
        real _t196C#1 = λ(T0[],T1[])<(T0 * T1)> (_t196A,rayStep1903);
        real alphaFix196E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t196C,refStep1902);
        tensor[3] _t1970#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (rayVec1968,rayVec1968);
        tensor[3] eyeDir1972#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1970);
        real phKa1974#1 = TensorIndex<tensor[4],[0]>(phong1901);
        real phKd1976#1 = TensorIndex<tensor[4],[1]>(phong1901);
        real phKs1978#1 = TensorIndex<tensor[4],[2]>(phong1901);
        real phSp197A#1 = TensorIndex<tensor[4],[3]>(phong1901);
        real _t197C#1 = 0.e0;
        real _t197E#1 = 0.e0;
        real _t1980#1 = 0.e0;
        real _t1982#1 = 0.e0;
        tensor[4] rgba1984#1 = <tensor[4]>[_t197C,_t197E,_t1980,_t1982];
        real raw1986#1 = 0.e0;
        real _t1988#1 = 0.e0;
        real _t198A#1 = 0.e0;
        real _t198C#1 = 0.e0;
        tensor[3] rgb198E#1 = <tensor[3]>[_t1988,_t198A,_t198C];
        real transp1990#1 = 0.1e1;
        self.rayU = rayU1932;
        self.rayV = rayV1940;
        self.rayN = rayN1942;
        self.UV = UV1948;
        self.rayOrig = rayOrig1958;
        self.rayVec = rayVec1968;
        self.alphaFix = alphaFix196E;
        self.eyeDir = eyeDir1972;
        self.phKa = phKa1974;
        self.phKd = phKd1976;
        self.phKs = phKs1978;
        self.phSp = phSp197A;
        self.rgba = rgba1984;
        self.raw = raw1986;
        self.rgb = rgb198E;
        self.transp = transp1990;
        return
      ASSIGN1966:  preds = [COND1967]
        tensor[3] _t1965#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (UV1948,camDist18FD);
        goto JOIN195B
      ASSIGN1950:  preds = [COND1957]
        real _t194F#1 = 0.e0;
        real _t1951#1 = 0.e0;
        real _t1953#1 = 0.e0;
        tensor[3] _t1955#1 = <tensor[3]>[_t194F,_t1951,_t1953];
        goto JOIN194B
    end state init
    method update
        ENTRY1B67:  preds = []
          femData:Mesh block19B6#1 = globals.block176A;
          real rayStep19B5#1 = globals.rayStep1778;
          real transp019B4#1 = globals.transp0177A;
          real thick19B3#1 = globals.thick177B;
          real fStrTh19B2#1 = globals.fStrTh177C;
          real fMaskTh19B1#1 = globals.fMaskTh177D;
          real fBias19B0#1 = globals.fBias177E;
          real maxAlpha19AF#1 = globals.maxAlpha177F;
          tensor[3] mcNear19AE#1 = globals.mcNear1782;
          tensor[3] mcFar19AD#1 = globals.mcFar1783;
          tensor[2] cminmax19AC#2 = globals.cminmax1785;
          bool analytical19AB#1 = globals.analytical1786;
          field F19AA#5 = globals.F1806;
          field CM19A9#1 = globals.CM1807;
          field C19A8#1 = globals.C1808;
          real camNearVsp19A7#1 = globals.camNearVsp180F;
          real camFarVsp19A6#2 = globals.camFarVsp1810;
          tensor[3] litwsp19A5#2 = globals.litwsp1811;
          field G19A4#3 = globals.G1812;
          real rayU19CA#0 = self.rayU;
          real rayV19CB#0 = self.rayV;
          real rayN19CC#1 = self.rayN;
          tensor[3] UV19CD#0 = self.UV;
          tensor[3] rayOrig19CE#1 = self.rayOrig;
          tensor[3] rayVec19CF#1 = self.rayVec;
          real alphaFix19D0#1 = self.alphaFix;
          tensor[3] eyeDir19D1#1 = self.eyeDir;
          real phKa19D2#1 = self.phKa;
          real phKd19D3#1 = self.phKd;
          real phKs19D4#2 = self.phKs;
          real phSp19D5#1 = self.phSp;
          tensor[4] rgba19D6#5 = self.rgba;
          real raw19D7#0 = self.raw;
          tensor[3] rgb19D8#4 = self.rgb;
          real transp19D9#5 = self.transp;
          real rayN19EA#8 = λ(T0[],T1[])<(T0 + T1)> (rayN19CC,rayStep19B5);
          bool _t19EC#1 = GT<real>(rayN19EA,camFarVsp19A6);
          if _t19EC then goto SAVE19F0 else goto JOIN19EE
        SAVE19F0:  preds = [COND19F4]
          self.rayN = rayN19EA;
          self.rgba = rgba19D6;
          self.rgb = rgb19D8;
          self.transp = transp19D9;
          stabilize
          goto JOIN19EE
        JOIN19EE:  preds = [*STABILIZE19EF,COND19F4]
          tensor[3] _t19F5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN19EA,rayVec19CF);
          tensor[3] pos19F7#10 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig19CE,_t19F5);
          femData:RefCell _t19FC#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block19B6);
          femData:RefCell _t19FE#1 = _t19FC;
          real _t1A00#1 = 0.1e-8;
          bool _t1A02#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t19FE,pos19F7,_t1A00);
          if _t1A02 then goto ASSIGN1A08 else goto ASSIGN1A40
        ASSIGN1A08:  preds = [COND1A41]
          field _t1A07#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19AA);
          field _t1A09#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A07);
          tensor[3,3] _t1A0B#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A09,pos19F7);
          (real[3] _t1A0D#1,tensor[3][3] evecs1A0E#0) = Eigen3x3(_t1A0B);
          int _t1A10#1 = 1;
          real _t1A12#1 = Subscript<real[3]>(_t1A0D,_t1A10);
          real _t1A14#1 = λ(T0[])<Neg(T0)> (_t1A12);
          field _t1A16#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19AA);
          tensor[3] _t1A18#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1A16,pos19F7);
          real _t1A1A#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1A18);
          real _t1A1C#1 = λ(T0[],T1[])<(T0 + T1)> (fBias19B0,_t1A1A);
          real _t1A1E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A14,_t1A1C);
          real _t1A20#1 = _t1A1E;
          bool _t1A22#1 = GT<real>(_t1A20,fStrTh19B2);
          if _t1A22 then goto ASSIGN1A28 else goto ASSIGN1A3A
        ASSIGN1A28:  preds = [COND1A3B]
          real _t1A27#1 = 0.1e1;
          real _t1A29#1 = _t1A27;
          bool _t1A2B#1 = GTE<real>(_t1A29,fMaskTh19B1);
          if _t1A2B then goto ASSIGN1A2F else goto ASSIGN1A34
        ASSIGN1A2F:  preds = [COND1A35]
          bool _t1A2E#1 = true;
          bool _t1A30#1 = _t1A2E;
          goto JOIN1A2D
        JOIN1A2D:  preds = [ASSIGN1A32,ASSIGN1A34]
          bool _t1A31#1 = phi(_t1A30,_t1A33)
          bool _t1A36#1 = _t1A31;
          goto JOIN1A24
        JOIN1A24:  preds = [ASSIGN1A38,ASSIGN1A3A]
          bool _t1A37#1 = phi(_t1A36,_t1A39)
          bool _t1A3C#1 = _t1A37;
          goto JOIN1A04
        JOIN1A04:  preds = [ASSIGN1A3E,ASSIGN1A40]
          bool _t1A3D#1 = phi(_t1A3C,_t1A3F)
          bool _t1A42#1 = _t1A3D;
          bool _t1A44#1 = BNot(_t1A42);
          if _t1A44 then goto SAVE1A48 else goto JOIN1A46
        SAVE1A48:  preds = [COND1A4C]
          self.rayN = rayN19EA;
          self.rgba = rgba19D6;
          self.rgb = rgb19D8;
          self.transp = transp19D9;
          active
          goto JOIN1A46
        JOIN1A46:  preds = [*ACTIVE1A47,COND1A4C]
          bool _t1A4E#1 = BNot(analytical19AB);
          if _t1A4E then goto ASSIGN1A52 else goto ASSIGN1A91
        ASSIGN1A52:  preds = [COND1ACE]
          field _t1A51#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19AA);
          field _t1A53#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A51);
          tensor[3,3] _t1A55#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A53,pos19F7);
          (real[3] evals1A58#0,tensor[3][3] E1A57#4) = Eigen3x3(_t1A55);
          field _t1A5A#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19AA);
          field _t1A5C#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A5A);
          tensor[3,3] _t1A5E#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A5C,pos19F7);
          (real[3] L1A60#2,tensor[3][3] evecs1A61#0) = Eigen3x3(_t1A5E);
          int _t1A63#1 = 2;
          tensor[3] _t1A65#1 = Subscript<tensor[3][3]>(E1A57,_t1A63);
          int _t1A67#1 = 2;
          tensor[3] _t1A69#1 = Subscript<tensor[3][3]>(E1A57,_t1A67);
          tensor[3,3] _t1A6B#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1A65,_t1A69);
          int _t1A6D#1 = 2;
          real _t1A6F#1 = Subscript<real[3]>(L1A60,_t1A6D);
          tensor[3,3] _t1A71#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1A6B,_t1A6F);
          int _t1A73#1 = 1;
          tensor[3] _t1A75#1 = Subscript<tensor[3][3]>(E1A57,_t1A73);
          int _t1A77#1 = 1;
          tensor[3] _t1A79#1 = Subscript<tensor[3][3]>(E1A57,_t1A77);
          tensor[3,3] _t1A7B#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1A75,_t1A79);
          int _t1A7D#1 = 1;
          real _t1A7F#1 = Subscript<real[3]>(L1A60,_t1A7D);
          tensor[3,3] _t1A81#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1A7B,_t1A7F);
          tensor[3,3] _t1A83#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t1A71,_t1A81);
          tensor[3,3] _t1A85#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t1A83);
          field _t1A87#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19AA);
          tensor[3] _t1A89#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1A87,pos19F7);
          tensor[3] _t1A8B#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1A85,_t1A89);
          tensor[3] step1A8D#1 = _t1A8B;
          goto JOIN1A50
        JOIN1A50:  preds = [ASSIGN1A8F,ASSIGN1ACD]
          tensor[3] step1A8E#4 = phi(step1A8D,step1ACC)
          real _t1ACF#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (step1A8E);
          real _t1AD2#1 = 0.e0;
          real _t1AD4#1 = 0.1e1;
          real _t1AD6#1 = 0.15e1;
          real _t1AD8#1 = 0.1e1;
          real _t1ADA#1 = λ(T0[])<Abs(T0)> (_t1ACF);
          real _t1ADC#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ADA,thick19B3);
          real _t1ADE#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1AD8,_t1ADC);
          real _t1AE0#1 = λ(T0[],T1[])<(T0 * T1)> (_t1AD6,_t1ADE);
          real _t1AE2#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1AD2,_t1AD4,_t1AE0);
          real _t1AE4#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha19AF,_t1AE2);
          real aa1AE6#2 = _t1AE4;
          real _t1AE8#1 = 0.e0;
          bool _t1AEA#1 = EQ<real>(aa1AE6,_t1AE8);
          if _t1AEA then goto SAVE1AEE else goto JOIN1AEC
        SAVE1AEE:  preds = [COND1AF2]
          self.rayN = rayN19EA;
          self.rgba = rgba19D6;
          self.rgb = rgb19D8;
          self.transp = transp19D9;
          active
          goto JOIN1AEC
        JOIN1AEC:  preds = [*ACTIVE1AED,COND1AF2]
          real _t1AF3#1 = 0.1e1;
          real _t1AF5#1 = 0.1e1;
          real _t1AF7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1AF5,aa1AE6);
          real _t1AF9#1 = MathFn<pow>(_t1AF7,alphaFix19D0);
          real aa1AFB#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1AF3,_t1AF9);
          tensor[3] _t1AFD#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (step1A8E,step1A8E);
          tensor[3] snorm1AFF#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1AFD);
          real _t1B01#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1AFF,litwsp19A5);
          int _t1B03#0 = 2;
          real dcomp1B05#1 = λ(T0[])<(T0)^2> (_t1B01);
          real scomp1B07#1 = 0.e0;
          real _t1B09#1 = 0.e0;
          bool _t1B0B#1 = NEQ<real>(phKs19D4,_t1B09);
          if _t1B0B then goto ASSIGN1B0F else goto JOIN1B0D
        ASSIGN1B0F:  preds = [COND1B19]
          tensor[3] _t1B0E#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir19D1,litwsp19A5);
          tensor[3] _t1B10#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1B0E,_t1B0E);
          real _t1B12#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1AFF,_t1B10);
          real _t1B14#1 = λ(T0[])<Abs(T0)> (_t1B12);
          real scomp1B16#1 = MathFn<pow>(_t1B14,phSp19D5);
          goto JOIN1B0D
        JOIN1B0D:  preds = [ASSIGN1B18,COND1B19]
          real scomp1B17#1 = phi(scomp1B16,scomp1B07)
          tensor[3] dcol1B1A#1 = λ(T0[3],T1[3],T2[],T3[],T4[])<(T0_{i0} + (((T3) - (T2)) / ( (T4) - (T2)) * (T1_{i0}) - (T0_{i0})))>_{3} (mcNear19AE,mcFar19AD,camNearVsp19A7,rayN19EA,camFarVsp19A6);
          real cmin1B1C#2 = TensorIndex<tensor[2],[0]>(cminmax19AC);
          real cmax1B1E#2 = TensorIndex<tensor[2],[1]>(cminmax19AC);
          real _t1B20#1 = 0.1e1;
          real _t1B22#1 = 0.1e1;
          real _t1B24#1 = 0.1e1;
          tensor[3] mcol1B26#1 = <tensor[3]>[_t1B20,_t1B22,_t1B24];
          bool _t1B28#1 = NEQ<real>(cmin1B1C,cmax1B1E);
          if _t1B28 then goto ASSIGN1B2C else goto JOIN1B2A
        ASSIGN1B2C:  preds = [COND1B38]
          real _t1B2B#1 = 0.e0;
          real _t1B2D#1 = 0.1e1;
          tensor[3] _t1B2F#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos19F7,step1A8E);
          real _t1B31#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (C19A8,_t1B2F);
          real _t1B33#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1B2B,_t1B2D,cmin1B1C,_t1B31,cmax1B1E);
          tensor[3] mcol1B35#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (CM19A9,_t1B33);
          goto JOIN1B2A
        JOIN1B2A:  preds = [ASSIGN1B37,COND1B38]
          tensor[3] mcol1B36#1 = phi(mcol1B35,mcol1B26)
          real _t1B39#1 = λ(T0[],T1[])<(T0 * T1)> (transp19D9,aa1AFB);
          real _t1B3B#1 = λ(T0[],T1[])<(T0 * T1)> (phKd19D3,dcomp1B05);
          real _t1B3D#1 = λ(T0[],T1[])<(T0 + T1)> (phKa19D2,_t1B3B);
          tensor[3] _t1B3F#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (dcol1B1A,mcol1B36);
          tensor[3] _t1B41#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B3D,_t1B3F);
          real _t1B43#1 = λ(T0[],T1[])<(T0 * T1)> (phKs19D4,scomp1B17);
          real _t1B45#1 = 0.1e1;
          real _t1B47#1 = 0.1e1;
          real _t1B49#1 = 0.1e1;
          tensor[3] _t1B4B#1 = <tensor[3]>[_t1B45,_t1B47,_t1B49];
          tensor[3] _t1B4D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B43,_t1B4B);
          tensor[3] _t1B4F#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1B41,_t1B4D);
          tensor[3] _t1B51#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B39,_t1B4F);
          tensor[3] rgb1B53#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb19D8,_t1B51);
          real _t1B55#1 = 0.1e1;
          real _t1B57#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B55,aa1AFB);
          real transp1B59#2 = λ(T0[],T1[])<(T0 * T1)> (transp19D9,_t1B57);
          bool _t1B5B#1 = LT<real>(transp1B59,transp019B4);
          if _t1B5B then goto ASSIGN1B60 else goto JOIN1B5D
        ASSIGN1B60:  preds = [COND1B66]
          real transp1B5E#1 = 0.e0;
          self.rayN = rayN19EA;
          self.rgba = rgba19D6;
          self.rgb = rgb1B53;
          self.transp = transp1B5E;
          stabilize
          goto JOIN1B5D
        JOIN1B5D:  preds = [*STABILIZE1B61,COND1B66]
          real transp1B5F#1 = phi(transp1B59)
          self.rayN = rayN19EA;
          self.rgba = rgba19D6;
          self.rgb = rgb1B53;
          self.transp = transp1B5F;
          active
        ASSIGN1A91:  preds = [COND1ACE]
          field _t1A90#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (G19A4);
          field _t1A92#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A90);
          tensor[3,3] _t1A94#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A92,pos19F7);
          (real[3] evals1A97#0,tensor[3][3] E1A96#4) = Eigen3x3(_t1A94);
          field _t1A99#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (G19A4);
          field _t1A9B#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A99);
          tensor[3,3] _t1A9D#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A9B,pos19F7);
          (real[3] L1A9F#2,tensor[3][3] evecs1AA0#0) = Eigen3x3(_t1A9D);
          int _t1AA2#1 = 2;
          tensor[3] _t1AA4#1 = Subscript<tensor[3][3]>(E1A96,_t1AA2);
          int _t1AA6#1 = 2;
          tensor[3] _t1AA8#1 = Subscript<tensor[3][3]>(E1A96,_t1AA6);
          tensor[3,3] _t1AAA#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1AA4,_t1AA8);
          int _t1AAC#1 = 2;
          real _t1AAE#1 = Subscript<real[3]>(L1A9F,_t1AAC);
          tensor[3,3] _t1AB0#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1AAA,_t1AAE);
          int _t1AB2#1 = 1;
          tensor[3] _t1AB4#1 = Subscript<tensor[3][3]>(E1A96,_t1AB2);
          int _t1AB6#1 = 1;
          tensor[3] _t1AB8#1 = Subscript<tensor[3][3]>(E1A96,_t1AB6);
          tensor[3,3] _t1ABA#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1AB4,_t1AB8);
          int _t1ABC#1 = 1;
          real _t1ABE#1 = Subscript<real[3]>(L1A9F,_t1ABC);
          tensor[3,3] _t1AC0#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1ABA,_t1ABE);
          tensor[3,3] _t1AC2#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t1AB0,_t1AC0);
          tensor[3,3] _t1AC4#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t1AC2);
          field _t1AC6#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (G19A4);
          tensor[3] _t1AC8#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1AC6,pos19F7);
          tensor[3] _t1ACA#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1AC4,_t1AC8);
          tensor[3] step1ACC#1 = _t1ACA;
          goto JOIN1A50
        ASSIGN1A34:  preds = [COND1A35]
          bool _t1A33#1 = false;
          goto JOIN1A2D
        ASSIGN1A3A:  preds = [COND1A3B]
          bool _t1A39#1 = false;
          goto JOIN1A24
        ASSIGN1A40:  preds = [COND1A41]
          bool _t1A3F#1 = false;
          goto JOIN1A04
    end update
    method stabilize
        ENTRY1BA6:  preds = []
          real rayU1B6D#0 = self.rayU;
          real rayV1B6E#0 = self.rayV;
          real rayN1B6F#1 = self.rayN;
          tensor[3] UV1B70#0 = self.UV;
          tensor[3] rayOrig1B71#0 = self.rayOrig;
          tensor[3] rayVec1B72#0 = self.rayVec;
          real alphaFix1B73#0 = self.alphaFix;
          tensor[3] eyeDir1B74#0 = self.eyeDir;
          real phKa1B75#0 = self.phKa;
          real phKd1B76#0 = self.phKd;
          real phKs1B77#0 = self.phKs;
          real phSp1B78#0 = self.phSp;
          tensor[4] rgba1B79#1 = self.rgba;
          real raw1B7A#0 = self.raw;
          tensor[3] rgb1B7B#4 = self.rgb;
          real transp1B7C#3 = self.transp;
          real _t1B8D#1 = 0.1e1;
          bool _t1B8F#1 = LT<real>(transp1B7C,_t1B8D);
          if _t1B8F then goto ASSIGN1B93 else goto JOIN1B91
        ASSIGN1B93:  preds = [COND1BA5]
          real _t1B92#1 = 0.1e1;
          real aa1B94#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1B92,transp1B7C);
          real _t1B96#1 = TensorIndex<tensor[3],[0]>(rgb1B7B);
          real _t1B98#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B96,aa1B94);
          real _t1B9A#1 = TensorIndex<tensor[3],[1]>(rgb1B7B);
          real _t1B9C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B9A,aa1B94);
          real _t1B9E#1 = TensorIndex<tensor[3],[2]>(rgb1B7B);
          real _t1BA0#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B9E,aa1B94);
          tensor[4] rgba1BA2#1 = <tensor[4]>[_t1B98,_t1B9C,_t1BA0,aa1B94];
          goto JOIN1B91
        JOIN1B91:  preds = [ASSIGN1BA4,COND1BA5]
          tensor[4] rgba1BA3#1 = phi(rgba1BA2,rgba1B79)
          self.rayN = rayN1B6F;
          self.rgba = rgba1BA3;
          self.rgb = rgb1B7B;
          self.transp = transp1B7C;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY18E6:  preds = []
      int iresU18CC#1 = globals.iresU1776;
      int iresV18CB#1 = globals.iresV1777;
      int _t18CF#1 = 0;
      int _t18D1#1 = 1;
      int _t18D3#1 = ISub(iresV18CB,_t18D1);
      int[] _t18D5#1 = Range(_t18CF,_t18D3);
    FOREACH18D8:  preds = [ASSIGN18D6,NEXT18E5]
      foreach (vi18D7 in _t18D5) on exit goto RETURN18E7
      int _t18D9#1 = 0;
      int _t18DB#1 = 1;
      int _t18DD#1 = ISub(iresU18CC,_t18DB);
      int[] _t18DF#1 = Range(_t18D9,_t18DD);
    FOREACH18E2:  preds = [ASSIGN18E0,NEXT18E4]
      foreach (ui18E1 in _t18DF) on exit goto NEXT18E5
      new ray(ui18E1,vi18D7);
      goto FOREACH18E2
    NEXT18E5:  preds = [FOREACH18E2]
      goto FOREACH18D8
    RETURN18E7:  preds = [FOREACH18D8]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block176A (block) = <no-default>
  input 0space0509_intermedateGlobal176B (space) = <no-default>
  input 0U050B_intermedateGlobal176C (U) = <no-default>
  input cellChoice176D (cellChoice) = <no-default>
  input cmap176E (cmap) = image("cmap.nrrd")
  input camEye176F (camEye) = <default>
  input camAt1770 (camAt) = <default>
  input camUp1771 (camUp) = <default>
  input camNear1772 (camNear) = <default>
  input camFar1773 (camFar) = <default>
  input camFOV1774 (camFOV) = <default>
  input camOrtho1775 (camOrtho) = <default>
  input iresU1776 (iresU) = <default>
  input iresV1777 (iresV) = <default>
  input rayStep1778 (rayStep) = <default>
  input refStep1779 (refStep) = <default>
  input transp0177A (transp0) = <default>
  input thick177B (thick) = <default>
  input fStrTh177C (fStrTh) = <default>
  input fMaskTh177D (fMaskTh) = <default>
  input fBias177E (fBias) = <default>
  input maxAlpha177F (maxAlpha) = <default>
  input light1780 (light) = <default>
  input phong1781 (phong) = <default>
  input mcNear1782 (mcNear) = <default>
  input mcFar1783 (mcFar) = <default>
  input litdir1784 (litdir) = <default>
  input cminmax1785 (cminmax) = <default>
  input analytical1786 (analytical) = <default>
  input umm1787 (umm) = image("data.nrrd")
  global femData:MeshCell[] 0cell_block1802
  global femData:Space space1803
  global femData:FemFunc U1804
  global femData:MeshCell c11805
  global field F1806
  global field CM1807
  global field C1808
  global tensor[3] camN1809
  global tensor[3] camU180A
  global tensor[3] camV180B
  global real camDist180C
  global real camVmax180D
  global real camUmax180E
  global real camNearVsp180F
  global real camFarVsp1810
  global tensor[3] litwsp1811
  global field G1812
## functions
  function int[2] nextCell41824 (int faceIdx1813#1, int cell1814#1, femData:Mesh mesh1815#1) {
    ENTRY1823:  preds = []
      int _t1816#1 = 12;
      int _t1818#1 = IMul(cell1814,_t1816);
      int _t181A#1 = 2;
      int _t181C#1 = IMul(faceIdx1813,_t181A);
      int _t181E#1 = IAdd(_t1818,_t181C);
      int[2] _t1820#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1815,_t181E);
      return _t1820
}
## input initialization
  ENTRY1800:  preds = []
    real _t1788#13 = 0.e0;
    real _t178A#1 = -0.2e1;
    tensor[3] camEye178E#1 = <tensor[3]>[_t1788,_t178A,_t1788];
    globals.camEye176F = camEye178E;
    tensor[3] camAt1797#1 = <tensor[3]>[_t1788,_t1788,_t1788];
    globals.camAt1770 = camAt1797;
    real _t179E#5 = 0.1e1;
    tensor[3] camUp17A0#1 = <tensor[3]>[_t1788,_t1788,_t179E];
    globals.camUp1771 = camUp17A0;
    real camNear17A3#1 = -0.4e1;
    globals.camNear1772 = camNear17A3;
    real camFar17A6#1 = 0.4e1;
    globals.camFar1773 = camFar17A6;
    real camFOV17A9#1 = 0.1e2;
    globals.camFOV1774 = camFOV17A9;
    bool camOrtho17AC#2 = false;
    globals.camOrtho1775 = camOrtho17AC;
    int iresU17AF#2 = 100;
    globals.iresU1776 = iresU17AF;
    globals.iresV1777 = iresU17AF;
    real rayStep17B5#2 = 0.1e-3;
    globals.rayStep1778 = rayStep17B5;
    globals.refStep1779 = rayStep17B5;
    real transp017BB#1 = 0.5e-2;
    globals.transp0177A = transp017BB;
    real thick17BE#1 = 0.1e-1;
    globals.thick177B = thick17BE;
    globals.fStrTh177C = _t1788;
    globals.fMaskTh177D = _t1788;
    real fBias17C7#2 = 0.1e0;
    globals.fBias177E = fBias17C7;
    globals.maxAlpha177F = _t179E;
    globals.light1780 = camOrtho17AC;
    real _t17D2#1 = 0.7e0;
    real _t17D4#1 = 0.2e0;
    real _t17D6#1 = 0.1e3;
    tensor[4] phong17D8#1 = <tensor[4]>[fBias17C7,_t17D2,_t17D4,_t17D6];
    globals.phong1781 = phong17D8;
    tensor[3] mcNear17E1#2 = <tensor[3]>[_t179E,_t179E,_t179E];
    globals.mcNear1782 = mcNear17E1;
    globals.mcFar1783 = mcNear17E1;
    real _t17EF#1 = -0.1e1;
    tensor[3] litdir17F3#1 = <tensor[3]>[_t1788,_t17EF,_t1788];
    globals.litdir1784 = litdir17F3;
    tensor[2] cminmax17FA#1 = <tensor[2]>[_t1788,_t1788];
    globals.cminmax1785 = cminmax17FA;
    bool analytical17FD#1 = true;
    globals.analytical1786 = analytical17FD;
    return
## global-variable initialization
  ENTRY18C9:  preds = []
    femData:Mesh block1833#3 = globals.block176A;
    femData:Space 0space0509_intermedateGlobal1832#1 = globals.0space0509_intermedateGlobal176B;
    femData:FemFunc 0U050B_intermedateGlobal1831#1 = globals.0U050B_intermedateGlobal176C;
    int cellChoice1830#1 = globals.cellChoice176D;
    image(IMAGE1D<double[3]>) cmap182F#1 = globals.cmap176E;
    tensor[3] camEye182E#1 = globals.camEye176F;
    tensor[3] camAt182D#1 = globals.camAt1770;
    tensor[3] camUp182C#1 = globals.camUp1771;
    real camNear182B#1 = globals.camNear1772;
    real camFar182A#1 = globals.camFar1773;
    real camFOV1829#1 = globals.camFOV1774;
    int iresU1828#1 = globals.iresU1776;
    int iresV1827#1 = globals.iresV1777;
    tensor[3] litdir1826#2 = globals.litdir1784;
    image(IMAGE3D<float[]>) umm1825#1 = globals.umm1787;
    int _t1843#1 = 0;
    int _t1845#1 = 1;
    int _t1847#1 = ExtractFemItem<int,NumCell(Mesh)>(block1833);
    int _t1849#1 = ISub(_t1847,_t1845);
    int[] _t184B#1 = Range(_t1843,_t1849);
    femData:MeshCell[] _t184D#1 = <femData:MeshCell[]>{};
  FOREACH1851:  preds = [ASSIGN184E,NEXT1856]
    foreach (_t184F in _t184B) on exit goto GASSIGN1BBC
      femData:MeshCell[] _t1850#3 = phi(_t184D,_t1854)
    femData:MeshCell _t1852#1 = LoadFem<femData:MeshCell>(block1833,_t184F);
    femData:MeshCell[] _t1854#1 = Append<femData:MeshCell>(_t1850,_t1852);
    goto FOREACH1851
  GASSIGN1BBC:  preds = [FOREACH1851]
    globals.0cell_block1802 = _t1850;
    femData:Space space185A#2 = LoadFem<femData:Space>(0space0509_intermedateGlobal1832,block1833);
    globals.space1803 = space185A;
    femData:FemFunc U185D#2 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1831,space185A);
    globals.U1804 = U185D;
    femData:MeshCell c11860#2 = Subscript<femData:MeshCell[]>(_t1850,cellChoice1830);
    globals.c11805 = c11860;
    int _t1864#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11860);
    femData:FuncCell _t1866#2 = LoadFem<femData:FuncCell>(U185D,_t1864);
    femData:FemFunc _t186A#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1866);
    femData:Space _t1875#1 = ExtractFem<femData:Space,femData:FemFunc>(_t186A);
    int _t187E#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1866);
    field F1880#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t187E,_t1875,_t186A);
    globals.F1806 = F1880;
    kernel _t1883#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1885#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap182F);
    field CM1887#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img1885,_t1883);
    globals.CM1807 = CM1887;
    globals.C1808 = F1880;
    tensor[3] _t188D#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt182D,camEye182E);
    tensor[3] camN188F#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t188D,_t188D);
    globals.camN1809 = camN188F;
    tensor[3] _t1892#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN188F,camUp182C);
    tensor[3] camU1894#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1892,_t1892);
    globals.camU180A = camU1894;
    tensor[3] camV1897#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN188F,camU1894);
    globals.camV180B = camV1897;
    real camDist189C#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t188D);
    globals.camDist180C = camDist189C;
    real _t189F#1 = 0.314159265358979323846264338327950288e1;
    real _t18A1#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1829,_t189F);
    real _t18A3#1 = 0.36e3;
    real _t18A5#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18A1,_t18A3);
    real _t18A7#1 = λ(T0[])<Tangent(T0)> (_t18A5);
    real camVmax18A9#2 = λ(T0[],T1[])<(T0 * T1)> (_t18A7,camDist189C);
    globals.camVmax180D = camVmax18A9;
    real _t18AC#1 = IntToReal(iresU1828);
    real _t18AE#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax18A9,_t18AC);
    real _t18B0#1 = IntToReal(iresV1827);
    real camUmax18B2#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18AE,_t18B0);
    globals.camUmax180E = camUmax18B2;
    real camNearVsp18B5#1 = λ(T0[],T1[])<(T0 + T1)> (camNear182B,camDist189C);
    globals.camNearVsp180F = camNearVsp18B5;
    real camFarVsp18B8#1 = λ(T0[],T1[])<(T0 + T1)> (camFar182A,camDist189C);
    globals.camFarVsp1810 = camFarVsp18B8;
    tensor[3,3] _t18BB#1 = <tensor[3,3]>[camU1894,camV1897,camN188F];
    tensor[3,3] _t18BD#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t18BB);
    tensor[3] _t18BF#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (litdir1826,litdir1826);
    tensor[3] litwsp18C1#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t18BD,_t18BF);
    globals.litwsp1811 = litwsp18C1;
    kernel _t18C4#1 = Kernel<bspln3,0>;
    field G18C6#1 = λ(V0(3)[],H1)<V0⊛H1> (umm1825,_t18C4);
    globals.G1812 = G18C6;
    return
## strand
  strand ray (int ui18E8#1, int vi18E9#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1992:  preds = []
        tensor[3] camEye1907#1 = globals.camEye176F;
        bool camOrtho1906#2 = globals.camOrtho1775;
        int iresU1905#1 = globals.iresU1776;
        int iresV1904#1 = globals.iresV1777;
        real rayStep1903#1 = globals.rayStep1778;
        real refStep1902#1 = globals.refStep1779;
        tensor[4] phong1901#4 = globals.phong1781;
        tensor[3] camN1900#1 = globals.camN1809;
        tensor[3] camU18FF#1 = globals.camU180A;
        tensor[3] camV18FE#1 = globals.camV180B;
        real camDist18FD#1 = globals.camDist180C;
        real camVmax18FC#2 = globals.camVmax180D;
        real camUmax18FB#2 = globals.camUmax180E;
        real camNearVsp18FA#1 = globals.camNearVsp180F;
        real _t1926#1 = λ(T0[])<Neg(T0)> (camUmax18FB);
        real _t1928#2 = -0.5e0;
        real _t192A#1 = IntToReal(ui18E8);
        real _t192C#1 = IntToReal(iresU1905);
        real _t192E#2 = 0.5e0;
        real _t1930#1 = λ(T0[],T1[])<(T0) - (T1)> (_t192C,_t192E);
        real rayU1932#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1926,camUmax18FB,_t1928,_t192A,_t1930);
        real _t1934#1 = λ(T0[])<Neg(T0)> (camVmax18FC);
        real _t1938#1 = IntToReal(vi18E9);
        real _t193A#1 = IntToReal(iresV1904);
        real _t193E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t193A,_t192E);
        real rayV1940#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1934,camVmax18FC,_t1928,_t1938,_t193E);
        tensor[3] _t1944#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU1932,camU18FF);
        tensor[3] _t1946#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV1940,camV18FE);
        tensor[3] UV1948#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1944,_t1946);
        if camOrtho1906 then goto JOIN194B else goto ASSIGN1950
      JOIN194B:  preds = [COND1957,ASSIGN1BC5]
        tensor[3] _t194D#1 = phi(UV1948,_t1955)
        tensor[3] rayOrig1958#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1907,_t194D);
        if camOrtho1906 then goto ASSIGN195D else goto ASSIGN1966
      ASSIGN195D:  preds = [COND1967]
        real _t195C#3 = 0.e0;
        tensor[3] _t1962#1 = <tensor[3]>[_t195C,_t195C,_t195C];
        goto JOIN195B
      JOIN195B:  preds = [ASSIGN1BC6,ASSIGN1966]
        tensor[3] _t1963#1 = phi(_t1962,_t1965)
        tensor[3] rayVec1968#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1900,_t1963);
        real _t196A#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec1968);
        real _t196C#1 = λ(T0[],T1[])<(T0 * T1)> (_t196A,rayStep1903);
        real alphaFix196E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t196C,refStep1902);
        tensor[3] _t1970#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (rayVec1968,rayVec1968);
        tensor[3] eyeDir1972#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1970);
        real phKa1974#1 = TensorIndex<tensor[4],[0]>(phong1901);
        real phKd1976#1 = TensorIndex<tensor[4],[1]>(phong1901);
        real phKs1978#1 = TensorIndex<tensor[4],[2]>(phong1901);
        real phSp197A#1 = TensorIndex<tensor[4],[3]>(phong1901);
        real _t197C#8 = 0.e0;
        tensor[4] rgba1984#1 = <tensor[4]>[_t197C,_t197C,_t197C,_t197C];
        tensor[3] rgb198E#1 = <tensor[3]>[_t197C,_t197C,_t197C];
        real transp1990#1 = 0.1e1;
        self.rayU = rayU1932;
        self.rayV = rayV1940;
        self.rayN = camNearVsp18FA;
        self.UV = UV1948;
        self.rayOrig = rayOrig1958;
        self.rayVec = rayVec1968;
        self.alphaFix = alphaFix196E;
        self.eyeDir = eyeDir1972;
        self.phKa = phKa1974;
        self.phKd = phKd1976;
        self.phKs = phKs1978;
        self.phSp = phSp197A;
        self.rgba = rgba1984;
        self.raw = _t197C;
        self.rgb = rgb198E;
        self.transp = transp1990;
        return
      ASSIGN1966:  preds = [COND1967]
        tensor[3] _t1965#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (UV1948,camDist18FD);
        goto JOIN195B
      ASSIGN1950:  preds = [COND1957]
        real _t194F#3 = 0.e0;
        tensor[3] _t1955#1 = <tensor[3]>[_t194F,_t194F,_t194F];
        goto JOIN194B
    end state init
    method update
        ENTRY1B67:  preds = []
          femData:Mesh block19B6#1 = globals.block176A;
          real rayStep19B5#1 = globals.rayStep1778;
          real transp019B4#1 = globals.transp0177A;
          real thick19B3#1 = globals.thick177B;
          real fStrTh19B2#1 = globals.fStrTh177C;
          real fMaskTh19B1#1 = globals.fMaskTh177D;
          real fBias19B0#1 = globals.fBias177E;
          real maxAlpha19AF#1 = globals.maxAlpha177F;
          tensor[3] mcNear19AE#1 = globals.mcNear1782;
          tensor[3] mcFar19AD#1 = globals.mcFar1783;
          tensor[2] cminmax19AC#2 = globals.cminmax1785;
          bool analytical19AB#1 = globals.analytical1786;
          field F19AA#2 = globals.F1806;
          field CM19A9#1 = globals.CM1807;
          field C19A8#1 = globals.C1808;
          real camNearVsp19A7#1 = globals.camNearVsp180F;
          real camFarVsp19A6#2 = globals.camFarVsp1810;
          tensor[3] litwsp19A5#2 = globals.litwsp1811;
          field G19A4#1 = globals.G1812;
          real rayU19CA#0 = self.rayU;
          real rayV19CB#0 = self.rayV;
          real rayN19CC#1 = self.rayN;
          tensor[3] UV19CD#0 = self.UV;
          tensor[3] rayOrig19CE#1 = self.rayOrig;
          tensor[3] rayVec19CF#1 = self.rayVec;
          real alphaFix19D0#1 = self.alphaFix;
          tensor[3] eyeDir19D1#1 = self.eyeDir;
          real phKa19D2#1 = self.phKa;
          real phKd19D3#1 = self.phKd;
          real phKs19D4#2 = self.phKs;
          real phSp19D5#1 = self.phSp;
          tensor[4] rgba19D6#0 = self.rgba;
          real raw19D7#0 = self.raw;
          tensor[3] rgb19D8#1 = self.rgb;
          real transp19D9#2 = self.transp;
          real rayN19EA#8 = λ(T0[],T1[])<(T0 + T1)> (rayN19CC,rayStep19B5);
          bool _t19EC#1 = GT<real>(rayN19EA,camFarVsp19A6);
          if _t19EC then goto SAVE19F0 else goto JOIN19EE
        SAVE19F0:  preds = [COND19F4]
          self.rayN = rayN19EA;
          stabilize
          goto JOIN19EE
        JOIN19EE:  preds = [*STABILIZE19EF,COND19F4]
          tensor[3] _t19F5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN19EA,rayVec19CF);
          tensor[3] pos19F7#8 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig19CE,_t19F5);
          femData:RefCell _t19FC#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block19B6);
          real _t1A00#1 = 0.1e-8;
          bool _t1A02#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t19FC,pos19F7,_t1A00);
          if _t1A02 then goto ASSIGN1A08 else goto ASSIGN1A40
        ASSIGN1A08:  preds = [COND1A41]
          field _t1A07#2 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19AA);
          field _t1A09#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A07);
          tensor[3,3] _t1A0B#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A09,pos19F7);
          (real[3] _t1A0D#1,tensor[3][3] evecs1A0E#0) = Eigen3x3(_t1A0B);
          int _t1A10#1 = 1;
          real _t1A12#1 = Subscript<real[3]>(_t1A0D,_t1A10);
          real _t1A14#1 = λ(T0[])<Neg(T0)> (_t1A12);
          tensor[3] _t1A18#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1A07,pos19F7);
          real _t1A1A#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1A18);
          real _t1A1C#1 = λ(T0[],T1[])<(T0 + T1)> (fBias19B0,_t1A1A);
          real _t1A1E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A14,_t1A1C);
          bool _t1A22#1 = GT<real>(_t1A1E,fStrTh19B2);
          if _t1A22 then goto ASSIGN1A28 else goto ASSIGN1A3A
        ASSIGN1A28:  preds = [COND1A3B]
          real _t1A27#1 = 0.1e1;
          bool _t1A2B#1 = GTE<real>(_t1A27,fMaskTh19B1);
          if _t1A2B then goto ASSIGN1A2F else goto ASSIGN1A34
        ASSIGN1A2F:  preds = [COND1A35]
          bool _t1A2E#1 = true;
          goto JOIN1A2D
        JOIN1A2D:  preds = [ASSIGN1A2F,ASSIGN1A34]
          bool _t1A31#1 = phi(_t1A2E,_t1A33)
          goto JOIN1A24
        JOIN1A24:  preds = [JOIN1A2D,ASSIGN1A3A]
          bool _t1A37#1 = phi(_t1A31,_t1A39)
          goto JOIN1A04
        JOIN1A04:  preds = [JOIN1A24,ASSIGN1A40]
          bool _t1A3D#1 = phi(_t1A37,_t1A3F)
          bool _t1A44#1 = BNot(_t1A3D);
          if _t1A44 then goto SAVE1A48 else goto JOIN1A46
        SAVE1A48:  preds = [COND1A4C]
          self.rayN = rayN19EA;
          active
          goto JOIN1A46
        JOIN1A46:  preds = [*ACTIVE1A47,COND1A4C]
          bool _t1A4E#1 = BNot(analytical19AB);
          if _t1A4E then goto ASSIGN1A52 else goto ASSIGN1A91
        ASSIGN1A52:  preds = [COND1ACE]
          field _t1A51#2 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F19AA);
          field _t1A53#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A51);
          tensor[3,3] _t1A55#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A53,pos19F7);
          (real[3] evals1A58#2,tensor[3][3] E1A57#2) = Eigen3x3(_t1A55);
          int _t1A63#2 = 2;
          tensor[3] _t1A65#2 = Subscript<tensor[3][3]>(E1A57,_t1A63);
          tensor[3,3] _t1A6B#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1A65,_t1A65);
          real _t1A6F#1 = Subscript<real[3]>(evals1A58,_t1A63);
          tensor[3,3] _t1A71#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1A6B,_t1A6F);
          int _t1A73#2 = 1;
          tensor[3] _t1A75#2 = Subscript<tensor[3][3]>(E1A57,_t1A73);
          tensor[3,3] _t1A7B#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1A75,_t1A75);
          real _t1A7F#1 = Subscript<real[3]>(evals1A58,_t1A73);
          tensor[3,3] _t1A81#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1A7B,_t1A7F);
          tensor[3,3] _t1A83#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t1A71,_t1A81);
          tensor[3,3] _t1A85#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t1A83);
          tensor[3] _t1A89#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1A51,pos19F7);
          tensor[3] _t1A8B#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1A85,_t1A89);
          goto JOIN1A50
        JOIN1A50:  preds = [ASSIGN1A8C,ASSIGN1ACB]
          tensor[3] step1A8E#4 = phi(_t1A8B,_t1ACA)
          real _t1ACF#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (step1A8E);
          real _t1AD2#6 = 0.e0;
          real _t1AD4#9 = 0.1e1;
          real _t1AD6#1 = 0.15e1;
          real _t1ADA#1 = λ(T0[])<Abs(T0)> (_t1ACF);
          real _t1ADC#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ADA,thick19B3);
          real _t1ADE#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1AD4,_t1ADC);
          real _t1AE0#1 = λ(T0[],T1[])<(T0 * T1)> (_t1AD6,_t1ADE);
          real _t1AE2#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1AD2,_t1AD4,_t1AE0);
          real _t1AE4#2 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha19AF,_t1AE2);
          bool _t1AEA#1 = EQ<real>(_t1AE4,_t1AD2);
          if _t1AEA then goto SAVE1AEE else goto JOIN1AEC
        SAVE1AEE:  preds = [COND1AF2]
          self.rayN = rayN19EA;
          active
          goto JOIN1AEC
        JOIN1AEC:  preds = [*ACTIVE1AED,COND1AF2]
          real _t1AF7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1AD4,_t1AE4);
          real _t1AF9#1 = MathFn<pow>(_t1AF7,alphaFix19D0);
          real aa1AFB#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1AD4,_t1AF9);
          tensor[3] _t1AFD#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (step1A8E,step1A8E);
          tensor[3] snorm1AFF#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1AFD);
          real _t1B01#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1AFF,litwsp19A5);
          int _t1B03#0 = 2;
          real dcomp1B05#1 = λ(T0[])<(T0)^2> (_t1B01);
          bool _t1B0B#1 = NEQ<real>(phKs19D4,_t1AD2);
          if _t1B0B then goto ASSIGN1B0F else goto JOIN1B0D
        ASSIGN1B0F:  preds = [COND1B19]
          tensor[3] _t1B0E#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir19D1,litwsp19A5);
          tensor[3] _t1B10#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1B0E,_t1B0E);
          real _t1B12#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1AFF,_t1B10);
          real _t1B14#1 = λ(T0[])<Abs(T0)> (_t1B12);
          real scomp1B16#1 = MathFn<pow>(_t1B14,phSp19D5);
          goto JOIN1B0D
        JOIN1B0D:  preds = [ASSIGN1B18,COND1B19]
          real scomp1B17#1 = phi(scomp1B16,_t1AD2)
          tensor[3] dcol1B1A#1 = λ(T0[3],T1[3],T2[],T3[],T4[])<(T0_{i0} + (((T3) - (T2)) / ( (T4) - (T2)) * (T1_{i0}) - (T0_{i0})))>_{3} (mcNear19AE,mcFar19AD,camNearVsp19A7,rayN19EA,camFarVsp19A6);
          real cmin1B1C#2 = TensorIndex<tensor[2],[0]>(cminmax19AC);
          real cmax1B1E#2 = TensorIndex<tensor[2],[1]>(cminmax19AC);
          tensor[3] mcol1B26#2 = <tensor[3]>[_t1AD4,_t1AD4,_t1AD4];
          bool _t1B28#1 = NEQ<real>(cmin1B1C,cmax1B1E);
          if _t1B28 then goto ASSIGN1B30 else goto JOIN1B2A
        ASSIGN1B30:  preds = [COND1B38]
          tensor[3] _t1B2F#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos19F7,step1A8E);
          real _t1B31#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (C19A8,_t1B2F);
          real _t1B33#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1AD2,_t1AD4,cmin1B1C,_t1B31,cmax1B1E);
          tensor[3] mcol1B35#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (CM19A9,_t1B33);
          goto JOIN1B2A
        JOIN1B2A:  preds = [ASSIGN1B37,COND1B38]
          tensor[3] mcol1B36#1 = phi(mcol1B35,mcol1B26)
          real _t1B39#1 = λ(T0[],T1[])<(T0 * T1)> (transp19D9,aa1AFB);
          real _t1B3B#1 = λ(T0[],T1[])<(T0 * T1)> (phKd19D3,dcomp1B05);
          real _t1B3D#1 = λ(T0[],T1[])<(T0 + T1)> (phKa19D2,_t1B3B);
          tensor[3] _t1B3F#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (dcol1B1A,mcol1B36);
          tensor[3] _t1B41#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B3D,_t1B3F);
          real _t1B43#1 = λ(T0[],T1[])<(T0 * T1)> (phKs19D4,scomp1B17);
          tensor[3] _t1B4D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B43,mcol1B26);
          tensor[3] _t1B4F#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1B41,_t1B4D);
          tensor[3] _t1B51#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B39,_t1B4F);
          tensor[3] rgb1B53#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb19D8,_t1B51);
          real _t1B57#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1AD4,aa1AFB);
          real transp1B59#2 = λ(T0[],T1[])<(T0 * T1)> (transp19D9,_t1B57);
          bool _t1B5B#1 = LT<real>(transp1B59,transp019B4);
          if _t1B5B then goto SAVE1B62 else goto JOIN1B5D
        SAVE1B62:  preds = [COND1B66]
          self.rayN = rayN19EA;
          self.rgb = rgb1B53;
          self.transp = _t1AD2;
          stabilize
          goto JOIN1B5D
        JOIN1B5D:  preds = [*STABILIZE1B61,COND1B66]
          real transp1B5F#1 = phi(transp1B59)
          self.rayN = rayN19EA;
          self.rgb = rgb1B53;
          self.transp = transp1B5F;
          active
        ASSIGN1A91:  preds = [COND1ACE]
          field _t1A90#2 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (G19A4);
          field _t1A92#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1A90);
          tensor[3,3] _t1A94#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1A92,pos19F7);
          (real[3] evals1A97#2,tensor[3][3] E1A96#2) = Eigen3x3(_t1A94);
          int _t1AA2#2 = 2;
          tensor[3] _t1AA4#2 = Subscript<tensor[3][3]>(E1A96,_t1AA2);
          tensor[3,3] _t1AAA#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1AA4,_t1AA4);
          real _t1AAE#1 = Subscript<real[3]>(evals1A97,_t1AA2);
          tensor[3,3] _t1AB0#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1AAA,_t1AAE);
          int _t1AB2#2 = 1;
          tensor[3] _t1AB4#2 = Subscript<tensor[3][3]>(E1A96,_t1AB2);
          tensor[3,3] _t1ABA#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (_t1AB4,_t1AB4);
          real _t1ABE#1 = Subscript<real[3]>(evals1A97,_t1AB2);
          tensor[3,3] _t1AC0#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (_t1ABA,_t1ABE);
          tensor[3,3] _t1AC2#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (_t1AB0,_t1AC0);
          tensor[3,3] _t1AC4#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (_t1AC2);
          tensor[3] _t1AC8#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1A90,pos19F7);
          tensor[3] _t1ACA#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1AC4,_t1AC8);
          goto JOIN1A50
        ASSIGN1A34:  preds = [COND1A35]
          bool _t1A33#1 = false;
          goto JOIN1A2D
        ASSIGN1A3A:  preds = [COND1A3B]
          bool _t1A39#1 = false;
          goto JOIN1A24
        ASSIGN1A40:  preds = [COND1A41]
          bool _t1A3F#1 = false;
          goto JOIN1A04
    end update
    method stabilize
        ENTRY1BA6:  preds = []
          real rayU1B6D#0 = self.rayU;
          real rayV1B6E#0 = self.rayV;
          real rayN1B6F#0 = self.rayN;
          tensor[3] UV1B70#0 = self.UV;
          tensor[3] rayOrig1B71#0 = self.rayOrig;
          tensor[3] rayVec1B72#0 = self.rayVec;
          real alphaFix1B73#0 = self.alphaFix;
          tensor[3] eyeDir1B74#0 = self.eyeDir;
          real phKa1B75#0 = self.phKa;
          real phKd1B76#0 = self.phKd;
          real phKs1B77#0 = self.phKs;
          real phSp1B78#0 = self.phSp;
          tensor[4] rgba1B79#1 = self.rgba;
          real raw1B7A#0 = self.raw;
          tensor[3] rgb1B7B#3 = self.rgb;
          real transp1B7C#2 = self.transp;
          real _t1B8D#2 = 0.1e1;
          bool _t1B8F#1 = LT<real>(transp1B7C,_t1B8D);
          if _t1B8F then goto ASSIGN1BE4 else goto JOIN1B91
        ASSIGN1BE4:  preds = [COND1BA5]
          real aa1B94#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1B8D,transp1B7C);
          real _t1B96#1 = TensorIndex<tensor[3],[0]>(rgb1B7B);
          real _t1B98#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B96,aa1B94);
          real _t1B9A#1 = TensorIndex<tensor[3],[1]>(rgb1B7B);
          real _t1B9C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B9A,aa1B94);
          real _t1B9E#1 = TensorIndex<tensor[3],[2]>(rgb1B7B);
          real _t1BA0#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B9E,aa1B94);
          tensor[4] rgba1BA2#1 = <tensor[4]>[_t1B98,_t1B9C,_t1BA0,aa1B94];
          goto JOIN1B91
        JOIN1B91:  preds = [ASSIGN1BA4,COND1BA5]
          tensor[4] rgba1BA3#1 = phi(rgba1BA2,rgba1B79)
          self.rgba = rgba1BA3;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY18E6:  preds = []
      int iresU18CC#1 = globals.iresU1776;
      int iresV18CB#1 = globals.iresV1777;
      int _t18CF#2 = 0;
      int _t18D1#2 = 1;
      int _t18D3#1 = ISub(iresV18CB,_t18D1);
      int[] _t18D5#1 = Range(_t18CF,_t18D3);
    FOREACH18D8:  preds = [ASSIGN18D6,NEXT18E5]
      foreach (vi18D7 in _t18D5) on exit goto RETURN18E7
      int _t18DD#1 = ISub(iresU18CC,_t18D1);
      int[] _t18DF#1 = Range(_t18CF,_t18DD);
    FOREACH18E2:  preds = [ASSIGN1BAD,NEXT18E4]
      foreach (ui18E1 in _t18DF) on exit goto NEXT18E5
      new ray(ui18E1,vi18D7);
      goto FOREACH18E2
    NEXT18E5:  preds = [FOREACH18E2]
      goto FOREACH18D8
    RETURN18E7:  preds = [FOREACH18D8]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block176A (block) = <no-default>
  input 0space0509_intermedateGlobal176B (space) = <no-default>
  input 0U050B_intermedateGlobal176C (U) = <no-default>
  input cellChoice176D (cellChoice) = <no-default>
  input cmap176E (cmap) = image("cmap.nrrd")
  input camEye176F (camEye) = <default>
  input camAt1770 (camAt) = <default>
  input camUp1771 (camUp) = <default>
  input camNear1772 (camNear) = <default>
  input camFar1773 (camFar) = <default>
  input camFOV1774 (camFOV) = <default>
  input camOrtho1775 (camOrtho) = <default>
  input iresU1776 (iresU) = <default>
  input iresV1777 (iresV) = <default>
  input rayStep1778 (rayStep) = <default>
  input refStep1779 (refStep) = <default>
  input transp0177A (transp0) = <default>
  input thick177B (thick) = <default>
  input fStrTh177C (fStrTh) = <default>
  input fMaskTh177D (fMaskTh) = <default>
  input fBias177E (fBias) = <default>
  input maxAlpha177F (maxAlpha) = <default>
  input light1780 (light) = <default>
  input phong1781 (phong) = <default>
  input mcNear1782 (mcNear) = <default>
  input mcFar1783 (mcFar) = <default>
  input litdir1784 (litdir) = <default>
  input cminmax1785 (cminmax) = <default>
  input analytical1786 (analytical) = <default>
  input umm1787 (umm) = image("data.nrrd")
  global tensor[3] camN1809
  global tensor[3] camU180A
  global tensor[3] camV180B
  global real camDist180C
  global real camVmax180D
  global real camUmax180E
  global real camNearVsp180F
  global real camFarVsp1810
  global tensor[3] litwsp1811
## functions
  function int[2] nextCell41824 (int faceIdx1813#1, int cell1814#1, femData:Mesh mesh1815#1) {
    ENTRY1823:  preds = []
      int _t1816#1 = 12;
      int _t1818#1 = IMul(cell1814,_t1816);
      int _t181A#1 = 2;
      int _t181C#1 = IMul(faceIdx1813,_t181A);
      int _t181E#1 = IAdd(_t1818,_t181C);
      int[2] _t1820#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1815,_t181E);
      return _t1820
}
## input initialization
  ENTRY1800:  preds = []
    real _t1788#13 = 0.e0;
    real _t178A#1 = -0.2e1;
    tensor[3] camEye178E#1 = <tensor[3]>[_t1788,_t178A,_t1788];
    globals.camEye176F = camEye178E;
    tensor[3] camAt1797#1 = <tensor[3]>[_t1788,_t1788,_t1788];
    globals.camAt1770 = camAt1797;
    real _t179E#5 = 0.1e1;
    tensor[3] camUp17A0#1 = <tensor[3]>[_t1788,_t1788,_t179E];
    globals.camUp1771 = camUp17A0;
    real camNear17A3#1 = -0.4e1;
    globals.camNear1772 = camNear17A3;
    real camFar17A6#1 = 0.4e1;
    globals.camFar1773 = camFar17A6;
    real camFOV17A9#1 = 0.1e2;
    globals.camFOV1774 = camFOV17A9;
    bool camOrtho17AC#2 = false;
    globals.camOrtho1775 = camOrtho17AC;
    int iresU17AF#2 = 100;
    globals.iresU1776 = iresU17AF;
    globals.iresV1777 = iresU17AF;
    real rayStep17B5#2 = 0.1e-3;
    globals.rayStep1778 = rayStep17B5;
    globals.refStep1779 = rayStep17B5;
    real transp017BB#1 = 0.5e-2;
    globals.transp0177A = transp017BB;
    real thick17BE#1 = 0.1e-1;
    globals.thick177B = thick17BE;
    globals.fStrTh177C = _t1788;
    globals.fMaskTh177D = _t1788;
    real fBias17C7#2 = 0.1e0;
    globals.fBias177E = fBias17C7;
    globals.maxAlpha177F = _t179E;
    globals.light1780 = camOrtho17AC;
    real _t17D2#1 = 0.7e0;
    real _t17D4#1 = 0.2e0;
    real _t17D6#1 = 0.1e3;
    tensor[4] phong17D8#1 = <tensor[4]>[fBias17C7,_t17D2,_t17D4,_t17D6];
    globals.phong1781 = phong17D8;
    tensor[3] mcNear17E1#2 = <tensor[3]>[_t179E,_t179E,_t179E];
    globals.mcNear1782 = mcNear17E1;
    globals.mcFar1783 = mcNear17E1;
    real _t17EF#1 = -0.1e1;
    tensor[3] litdir17F3#1 = <tensor[3]>[_t1788,_t17EF,_t1788];
    globals.litdir1784 = litdir17F3;
    tensor[2] cminmax17FA#1 = <tensor[2]>[_t1788,_t1788];
    globals.cminmax1785 = cminmax17FA;
    bool analytical17FD#1 = true;
    globals.analytical1786 = analytical17FD;
    return
## global-variable initialization
  ENTRY18C9:  preds = []
    femData:Mesh block1833#3 = globals.block176A;
    femData:Space 0space0509_intermedateGlobal1832#1 = globals.0space0509_intermedateGlobal176B;
    femData:FemFunc 0U050B_intermedateGlobal1831#1 = globals.0U050B_intermedateGlobal176C;
    int cellChoice1830#1 = globals.cellChoice176D;
    image(IMAGE1D<double[3]>) cmap182F#1 = globals.cmap176E;
    tensor[3] camEye182E#17 = globals.camEye176F;
    tensor[3] camAt182D#17 = globals.camAt1770;
    tensor[3] camUp182C#4 = globals.camUp1771;
    real camNear182B#1 = globals.camNear1772;
    real camFar182A#1 = globals.camFar1773;
    real camFOV1829#2 = globals.camFOV1774;
    int iresU1828#1 = globals.iresU1776;
    int iresV1827#1 = globals.iresV1777;
    tensor[3] litdir1826#2 = globals.litdir1784;
    image(IMAGE3D<float[]>) umm1825#2 = globals.umm1787;
    int _t1843#1 = 0;
    int _t1845#1 = 1;
    int _t1847#1 = ExtractFemItem<int,NumCell(Mesh)>(block1833);
    int _t1849#1 = ISub(_t1847,_t1845);
    int[] _t184B#1 = Range(_t1843,_t1849);
    femData:MeshCell[] _t184D#1 = <femData:MeshCell[]>{};
  FOREACH1851:  preds = [ASSIGN184E,NEXT1856]
    foreach (_t184F in _t184B) on exit goto ASSIGN185B
      femData:MeshCell[] _t1850#2 = phi(_t184D,_t1854)
    femData:MeshCell _t1852#1 = LoadFem<femData:MeshCell>(block1833,_t184F);
    femData:MeshCell[] _t1854#1 = Append<femData:MeshCell>(_t1850,_t1852);
    goto FOREACH1851
  ASSIGN185B:  preds = [FOREACH1851]
    femData:Space space185A#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1832,block1833);
    femData:FemFunc U185D#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1831,space185A);
    femData:MeshCell c11860#1 = Subscript<femData:MeshCell[]>(_t1850,cellChoice1830);
    int _t1864#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11860);
    femData:FuncCell _t1866#2 = LoadFem<femData:FuncCell>(U185D,_t1864);
    femData:FemFunc _t186A#6 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1866);
    femData:Space _t1875#5 = ExtractFem<femData:Space,femData:FemFunc>(_t186A);
    int _t187E#5 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1866);
    kernel _t1883#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1885#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap182F);
    tensor[3] camN188F#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt182D,camEye182E,camAt182D,camEye182E);
    globals.camN1809 = camN188F;
    tensor[3] camU1894#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt182D,camEye182E,camAt182D,camEye182E,camUp182C,camAt182D,camEye182E,camAt182D,camEye182E,camUp182C);
    globals.camU180A = camU1894;
    tensor[3] camV1897#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * (T0_{i1}) - (T1_{i1}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T0_{i3}) - (T1_{i3}) * (T0_{i3}) - (T1_{i3})))>(i3=0..2))) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii2,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * (1) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2)))>(i4=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt182D,camEye182E,camAt182D,camEye182E,camAt182D,camEye182E,camAt182D,camEye182E,camUp182C,camAt182D,camEye182E,camAt182D,camEye182E,camUp182C);
    globals.camV180B = camV1897;
    real camDist189C#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt182D,camEye182E);
    globals.camDist180C = camDist189C;
    real _t189F#2 = 0.314159265358979323846264338327950288e1;
    real _t18A3#2 = 0.36e3;
    real camVmax18A9#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV1829,_t189F,_t18A3,camAt182D,camEye182E);
    globals.camVmax180D = camVmax18A9;
    real _t18AC#1 = IntToReal(iresU1828);
    real _t18B0#1 = IntToReal(iresV1827);
    real camUmax18B2#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV1829,_t189F,_t18A3,camAt182D,camEye182E,_t18AC,_t18B0);
    globals.camUmax180E = camUmax18B2;
    real camNearVsp18B5#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear182B,camAt182D,camEye182E);
    globals.camNearVsp180F = camNearVsp18B5;
    real camFarVsp18B8#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar182A,camAt182D,camEye182E);
    globals.camFarVsp1810 = camFarVsp18B8;
    tensor[3,3] _t18BB#1 = <tensor[3,3]>[camU1894,camV1897,camN188F];
    tensor[3] litwsp18C1#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t18BB,litdir1826,litdir1826);
    globals.litwsp1811 = litwsp18C1;
    kernel _t18C4#2 = Kernel<bspln3,0>;
    return
## strand
  strand ray (int ui18E8#1, int vi18E9#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1992:  preds = []
        tensor[3] camEye1907#1 = globals.camEye176F;
        bool camOrtho1906#2 = globals.camOrtho1775;
        int iresU1905#1 = globals.iresU1776;
        int iresV1904#1 = globals.iresV1777;
        real rayStep1903#1 = globals.rayStep1778;
        real refStep1902#1 = globals.refStep1779;
        tensor[4] phong1901#4 = globals.phong1781;
        tensor[3] camN1900#4 = globals.camN1809;
        tensor[3] camU18FF#2 = globals.camU180A;
        tensor[3] camV18FE#2 = globals.camV180B;
        real camDist18FD#1 = globals.camDist180C;
        real camVmax18FC#6 = globals.camVmax180D;
        real camUmax18FB#6 = globals.camUmax180E;
        real camNearVsp18FA#1 = globals.camNearVsp180F;
        real _t1928#6 = -0.5e0;
        real _t192A#3 = IntToReal(ui18E8);
        real _t192C#3 = IntToReal(iresU1905);
        real _t192E#6 = 0.5e0;
        real rayU1932#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax18FB,camUmax18FB,_t1928,_t192A,_t192C,_t192E);
        real _t1938#3 = IntToReal(vi18E9);
        real _t193A#3 = IntToReal(iresV1904);
        real rayV1940#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax18FC,camVmax18FC,_t1928,_t1938,_t193A,_t192E);
        tensor[3] UV1948#2 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax18FB,camUmax18FB,_t1928,_t192A,_t192C,_t192E,camU18FF,camVmax18FC,camVmax18FC,_t1928,_t1938,_t193A,_t192E,camV18FE);
        if camOrtho1906 then goto JOIN194B else goto ASSIGN1950
      JOIN194B:  preds = [COND1957,ASSIGN1BC5]
        tensor[3] _t194D#1 = phi(UV1948,_t1955)
        tensor[3] rayOrig1958#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1907,_t194D);
        if camOrtho1906 then goto ASSIGN195D else goto ASSIGN1BFC
      ASSIGN195D:  preds = [COND1967]
        real _t195C#3 = 0.e0;
        tensor[3] _t1962#1 = <tensor[3]>[_t195C,_t195C,_t195C];
        goto JOIN195B
      JOIN195B:  preds = [ASSIGN1BC6,ASSIGN1BFC]
        tensor[3] _t1963#4 = phi(_t1962,_t1965)
        tensor[3] rayVec1968#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1900,_t1963);
        real alphaFix196E#1 = λ(T0[3],T1[3],T2[],T3[])<((T2 * Sqrt(Σ(i0=0..2)<(((T0_{i0} + T1_{i0}) * (T0_{i0} + T1_{i0})))>(i0=0..2)))) / ( T3)> (camN1900,_t1963,rayStep1903,refStep1902);
        tensor[3] eyeDir1972#1 = λ(T0[3],T1[3],T2[3],T3[3])<Neg(((T0_{i0} + T1_{i0}) * (1) / ( Sqrt(Σ(i2=0..2)<(((T0_{i2} + T1_{i2}) * (T0_{i2} + T1_{i2})))>(i2=0..2)))))>_{3} (camN1900,_t1963,camN1900,_t1963);
        real phKa1974#1 = TensorIndex<tensor[4],[0]>(phong1901);
        real phKd1976#1 = TensorIndex<tensor[4],[1]>(phong1901);
        real phKs1978#1 = TensorIndex<tensor[4],[2]>(phong1901);
        real phSp197A#1 = TensorIndex<tensor[4],[3]>(phong1901);
        real _t197C#8 = 0.e0;
        tensor[4] rgba1984#1 = <tensor[4]>[_t197C,_t197C,_t197C,_t197C];
        tensor[3] rgb198E#1 = <tensor[3]>[_t197C,_t197C,_t197C];
        real transp1990#1 = 0.1e1;
        self.rayU = rayU1932;
        self.rayV = rayV1940;
        self.rayN = camNearVsp18FA;
        self.UV = UV1948;
        self.rayOrig = rayOrig1958;
        self.rayVec = rayVec1968;
        self.alphaFix = alphaFix196E;
        self.eyeDir = eyeDir1972;
        self.phKa = phKa1974;
        self.phKd = phKd1976;
        self.phKs = phKs1978;
        self.phSp = phSp197A;
        self.rgba = rgba1984;
        self.raw = _t197C;
        self.rgb = rgb198E;
        self.transp = transp1990;
        return
      ASSIGN1BFC:  preds = [COND1967]
        tensor[3] _t1965#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3],T14[])<((((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))) / ( T14)>_{3} (camUmax18FB,camUmax18FB,_t1928,_t192A,_t192C,_t192E,camU18FF,camVmax18FC,camVmax18FC,_t1928,_t1938,_t193A,_t192E,camV18FE,camDist18FD);
        goto JOIN195B
      ASSIGN1950:  preds = [COND1957]
        real _t194F#3 = 0.e0;
        tensor[3] _t1955#1 = <tensor[3]>[_t194F,_t194F,_t194F];
        goto JOIN194B
    end state init
    method update
        ENTRY1B67:  preds = []
          femData:Mesh block19B6#1 = globals.block176A;
          real rayStep19B5#4 = globals.rayStep1778;
          real transp019B4#1 = globals.transp0177A;
          real thick19B3#2 = globals.thick177B;
          real fStrTh19B2#1 = globals.fStrTh177C;
          real fMaskTh19B1#1 = globals.fMaskTh177D;
          real fBias19B0#1 = globals.fBias177E;
          real maxAlpha19AF#2 = globals.maxAlpha177F;
          tensor[3] mcNear19AE#1 = globals.mcNear1782;
          tensor[3] mcFar19AD#1 = globals.mcFar1783;
          tensor[2] cminmax19AC#2 = globals.cminmax1785;
          bool analytical19AB#1 = globals.analytical1786;
          real camNearVsp19A7#1 = globals.camNearVsp180F;
          real camFarVsp19A6#2 = globals.camFarVsp1810;
          tensor[3] litwsp19A5#3 = globals.litwsp1811;
          real rayN19CC#4 = self.rayN;
          tensor[3] rayOrig19CE#2 = self.rayOrig;
          tensor[3] rayVec19CF#2 = self.rayVec;
          real alphaFix19D0#1 = self.alphaFix;
          tensor[3] eyeDir19D1#2 = self.eyeDir;
          real phKa19D2#1 = self.phKa;
          real phKd19D3#1 = self.phKd;
          real phKs19D4#2 = self.phKs;
          real phSp19D5#1 = self.phSp;
          tensor[3] rgb19D8#1 = self.rgb;
          real transp19D9#2 = self.transp;
          real rayN19EA#6 = λ(T0[],T1[])<(T0 + T1)> (rayN19CC,rayStep19B5);
          bool _t19EC#1 = GT<real>(rayN19EA,camFarVsp19A6);
          if _t19EC then goto SAVE19F0 else goto JOIN19EE
        SAVE19F0:  preds = [COND19F4]
          self.rayN = rayN19EA;
          stabilize
          goto JOIN19EE
        JOIN19EE:  preds = [*STABILIZE19EF,COND19F4]
          tensor[3] pos19F7#7 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig19CE,rayN19CC,rayStep19B5,rayVec19CF);
          femData:RefCell _t19FC#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block19B6);
          real _t1A00#1 = 0.1e-8;
          bool _t1A02#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t19FC,pos19F7,_t1A00);
          if _t1A02 then goto ASSIGN1C01 else goto ASSIGN1A40
        ASSIGN1C01:  preds = [COND1A41]
          tensor[3,3] _t1A0B#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t187E,_t1875,_t186A,pos19F7);
          (real[3] _t1A0D#1,tensor[3][3] evecs1A0E#0) = Eigen3x3(_t1A0B);
          int _t1A10#1 = 1;
          real _t1A12#1 = Subscript<real[3]>(_t1A0D,_t1A10);
          real _t1A1E#1 = λ(T0[],T1[],INT2,FEM(fns_t)3,FEM(func_t)4,T5[3])<(Neg(T0)) / ( (T1 + Sqrt(Σ(i0=0..2)<((Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5) * Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5)))>(i0=0..2))))> (_t1A12,fBias19B0,_t187E,_t1875,_t186A,pos19F7);
          bool _t1A22#1 = GT<real>(_t1A1E,fStrTh19B2);
          if _t1A22 then goto ASSIGN1A28 else goto ASSIGN1A3A
        ASSIGN1A28:  preds = [COND1A3B]
          real _t1A27#1 = 0.1e1;
          bool _t1A2B#1 = GTE<real>(_t1A27,fMaskTh19B1);
          if _t1A2B then goto ASSIGN1A2F else goto ASSIGN1A34
        ASSIGN1A2F:  preds = [COND1A35]
          bool _t1A2E#1 = true;
          goto JOIN1A2D
        JOIN1A2D:  preds = [ASSIGN1A2F,ASSIGN1A34]
          bool _t1A31#1 = phi(_t1A2E,_t1A33)
          goto JOIN1A24
        JOIN1A24:  preds = [JOIN1A2D,ASSIGN1A3A]
          bool _t1A37#1 = phi(_t1A31,_t1A39)
          goto JOIN1A04
        JOIN1A04:  preds = [JOIN1A24,ASSIGN1A40]
          bool _t1A3D#1 = phi(_t1A37,_t1A3F)
          bool _t1A44#1 = BNot(_t1A3D);
          if _t1A44 then goto SAVE1A48 else goto JOIN1A46
        SAVE1A48:  preds = [COND1A4C]
          self.rayN = rayN19EA;
          active
          goto JOIN1A46
        JOIN1A46:  preds = [*ACTIVE1A47,COND1A4C]
          bool _t1A4E#1 = BNot(analytical19AB);
          if _t1A4E then goto ASSIGN1C08 else goto ASSIGN1C2E
        ASSIGN1C08:  preds = [COND1ACE]
          tensor[3,3] _t1A55#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t187E,_t1875,_t186A,pos19F7);
          (real[3] evals1A58#2,tensor[3][3] E1A57#2) = Eigen3x3(_t1A55);
          int _t1A63#2 = 2;
          tensor[3] _t1A65#2 = Subscript<tensor[3][3]>(E1A57,_t1A63);
          real _t1A6F#1 = Subscript<real[3]>(evals1A58,_t1A63);
          int _t1A73#2 = 1;
          tensor[3] _t1A75#2 = Subscript<tensor[3][3]>(E1A57,_t1A73);
          real _t1A7F#1 = Subscript<real[3]>(evals1A58,_t1A73);
          tensor[3] _t1A8B#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,T9[3])<Σ(i1=0..2)<((Neg((((T0_{i0} * T0_{i1})) / ( T2) + ((T3_{i0} * T3_{i1})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i1},T9)))>(i1=0..2)>_{3} (_t1A65,_t1A65,_t1A6F,_t1A75,_t1A75,_t1A7F,_t187E,_t1875,_t186A,pos19F7);
          goto JOIN1A50
        JOIN1A50:  preds = [ASSIGN1C0E,ASSIGN1C34]
          tensor[3] step1A8E#7 = phi(_t1A8B,_t1ACA)
          real _t1AD2#7 = 0.e0;
          real _t1AD4#12 = 0.1e1;
          real _t1AD6#2 = 0.15e1;
          real _t1AE4#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[3],T6[])<(T0 * Clamp <T1,T2,(T3 * (T2) - ((Abs(Sqrt(Σ(i0=0..2)<((T5_{i0} * T5_{i0}))>(i0=0..2)))) / ( T6)))>)> (maxAlpha19AF,_t1AD2,_t1AD4,_t1AD6,_t1AD4,step1A8E,thick19B3);
          bool _t1AEA#1 = EQ<real>(_t1AE4,_t1AD2);
          if _t1AEA then goto SAVE1AEE else goto JOIN1AEC
        SAVE1AEE:  preds = [COND1AF2]
          self.rayN = rayN19EA;
          active
          goto JOIN1AEC
        JOIN1AEC:  preds = [*ACTIVE1AED,COND1AF2]
          real _t1AF7#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[])<(T0) - ((T1 * Clamp <T2,T0,(T4 * (T0) - ((Abs(Sqrt(Σ(i0=0..2)<((T6_{i0} * T6_{i0}))>(i0=0..2)))) / ( T7)))>))> (_t1AD4,maxAlpha19AF,_t1AD2,_t1AD4,_t1AD6,_t1AD4,step1A8E,thick19B3);
          real _t1AF9#2 = MathFn<pow>(_t1AF7,alphaFix19D0);
          bool _t1B0B#1 = NEQ<real>(phKs19D4,_t1AD2);
          if _t1B0B then goto ASSIGN1C1B else goto JOIN1B0D
        ASSIGN1C1B:  preds = [COND1B19]
          real _t1B14#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3])<Abs(Σ(i0=0..2)<((Neg((T0_{i0} * (1) / ( Sqrt(Σ(i2=0..2)<((T0_{i2} * T0_{i2}))>(i2=0..2))))) * (T2_{i0} + T3_{i0}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T2_{i3} + T3_{i3}) * (T2_{i3} + T3_{i3})))>(i3=0..2)))))>(i0=0..2))> (step1A8E,step1A8E,eyeDir19D1,litwsp19A5,eyeDir19D1,litwsp19A5);
          real scomp1B16#1 = MathFn<pow>(_t1B14,phSp19D5);
          goto JOIN1B0D
        JOIN1B0D:  preds = [ASSIGN1B18,COND1B19]
          real scomp1B17#1 = phi(scomp1B16,_t1AD2)
          real cmin1B1C#2 = TensorIndex<tensor[2],[0]>(cminmax19AC);
          real cmax1B1E#2 = TensorIndex<tensor[2],[1]>(cminmax19AC);
          tensor[3] mcol1B26#2 = <tensor[3]>[_t1AD4,_t1AD4,_t1AD4];
          bool _t1B28#1 = NEQ<real>(cmin1B1C,cmax1B1E);
          if _t1B28 then goto ASSIGN1C1D else goto JOIN1B2A
        ASSIGN1C1D:  preds = [COND1B38]
          tensor[3] _t1B2F#1 = λ(T0[3],T1[],T2[],T3[3],T4[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}) + T4_{i0})>_{3} (rayOrig19CE,rayN19CC,rayStep19B5,rayVec19CF,step1A8E);
          real _t1B33#1 = λ(T0[],T1[],T2[],INT3,FEM(fns_t)4,FEM(func_t)5,T6[3],T7[])<(T0 + (((Probe(femV(noFunc, 3, 4, 5)⊛Basis(),T6)) - (T2)) / ( (T7) - (T2)) * (T1) - (T0)))> (_t1AD2,_t1AD4,cmin1B1C,_t187E,_t1875,_t186A,_t1B2F,cmax1B1E);
          tensor[3] mcol1B35#1 = λ(V0(1)[3],H1,T2[1])<Probe(V0_{i0}⊛H1,T2)>_{3} (img1885,_t1883,_t1B33);
          goto JOIN1B2A
        JOIN1B2A:  preds = [ASSIGN1C20,COND1B38]
          tensor[3] mcol1B36#1 = phi(mcol1B35,mcol1B26)
          tensor[3] rgb1B53#2 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[3],T7[3],T8[3],T9[3],T10[3],T11[],T12[],T13[],T14[],T15[3],T16[],T17[],T18[3])<(T0_{i0} + (T1 * (T2) - (T3) * (((T4 + (T5 * (Σ(i4=0..2)<((Neg((T6_{i4} * (1) / ( Sqrt(Σ(i6=0..2)<((T6_{i6} * T6_{i6}))>(i6=0..2))))) * T8_{i4}))>(i4=0..2))^2)) * (T9_{i0} + ((((T12 + T13)) - (T11)) / ( (T14) - (T11)) * (T10_{i0}) - (T9_{i0}))) * T15_{i0}) + (T16 * T17 * T18_{i0}))))>_{3} (rgb19D8,transp19D9,_t1AD4,_t1AF9,phKa19D2,phKd19D3,step1A8E,step1A8E,litwsp19A5,mcNear19AE,mcFar19AD,camNearVsp19A7,rayN19CC,rayStep19B5,camFarVsp19A6,mcol1B36,phKs19D4,scomp1B17,mcol1B26);
          real transp1B59#2 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp19D9,_t1AD4,_t1AD4,_t1AF9);
          bool _t1B5B#1 = LT<real>(transp1B59,transp019B4);
          if _t1B5B then goto SAVE1B62 else goto JOIN1B5D
        SAVE1B62:  preds = [COND1B66]
          self.rayN = rayN19EA;
          self.rgb = rgb1B53;
          self.transp = _t1AD2;
          stabilize
          goto JOIN1B5D
        JOIN1B5D:  preds = [*STABILIZE1B61,COND1B66]
          real transp1B5F#1 = phi(transp1B59)
          self.rayN = rayN19EA;
          self.rgb = rgb1B53;
          self.transp = transp1B5F;
          active
        ASSIGN1C2E:  preds = [COND1ACE]
          tensor[3,3] _t1A94#1 = λ(V0(3)[],H1,T2[3])<Probe(V0⊛dx_{i0,i1}H1,T2)>_{3 3} (umm1825,_t18C4,pos19F7);
          (real[3] evals1A97#2,tensor[3][3] E1A96#2) = Eigen3x3(_t1A94);
          int _t1AA2#2 = 2;
          tensor[3] _t1AA4#2 = Subscript<tensor[3][3]>(E1A96,_t1AA2);
          real _t1AAE#1 = Subscript<real[3]>(evals1A97,_t1AA2);
          int _t1AB2#2 = 1;
          tensor[3] _t1AB4#2 = Subscript<tensor[3][3]>(E1A96,_t1AB2);
          real _t1ABE#1 = Subscript<real[3]>(evals1A97,_t1AB2);
          tensor[3] _t1ACA#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],V6(3)[],H7,T8[3])<Σ(i1=0..2)<((Neg((((T0_{i0} * T0_{i1})) / ( T2) + ((T3_{i0} * T3_{i1})) / ( T5))) * Probe(V6⊛dx_{i1}H7,T8)))>(i1=0..2)>_{3} (_t1AA4,_t1AA4,_t1AAE,_t1AB4,_t1AB4,_t1ABE,umm1825,_t18C4,pos19F7);
          goto JOIN1A50
        ASSIGN1A34:  preds = [COND1A35]
          bool _t1A33#1 = false;
          goto JOIN1A2D
        ASSIGN1A3A:  preds = [COND1A3B]
          bool _t1A39#1 = false;
          goto JOIN1A24
        ASSIGN1A40:  preds = [COND1A41]
          bool _t1A3F#1 = false;
          goto JOIN1A04
    end update
    method stabilize
        ENTRY1BA6:  preds = []
          tensor[4] rgba1B79#1 = self.rgba;
          tensor[3] rgb1B7B#3 = self.rgb;
          real transp1B7C#5 = self.transp;
          real _t1B8D#5 = 0.1e1;
          bool _t1B8F#1 = LT<real>(transp1B7C,_t1B8D);
          if _t1B8F then goto ASSIGN1BE4 else goto JOIN1B91
        ASSIGN1BE4:  preds = [COND1BA5]
          real aa1B94#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B8D,transp1B7C);
          real _t1B96#1 = TensorIndex<tensor[3],[0]>(rgb1B7B);
          real _t1B98#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1B96,_t1B8D,transp1B7C);
          real _t1B9A#1 = TensorIndex<tensor[3],[1]>(rgb1B7B);
          real _t1B9C#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1B9A,_t1B8D,transp1B7C);
          real _t1B9E#1 = TensorIndex<tensor[3],[2]>(rgb1B7B);
          real _t1BA0#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1B9E,_t1B8D,transp1B7C);
          tensor[4] rgba1BA2#1 = <tensor[4]>[_t1B98,_t1B9C,_t1BA0,aa1B94];
          goto JOIN1B91
        JOIN1B91:  preds = [ASSIGN1BA4,COND1BA5]
          tensor[4] rgba1BA3#1 = phi(rgba1BA2,rgba1B79)
          self.rgba = rgba1BA3;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY18E6:  preds = []
      int iresU18CC#1 = globals.iresU1776;
      int iresV18CB#1 = globals.iresV1777;
      int _t18CF#2 = 0;
      int _t18D1#2 = 1;
      int _t18D3#1 = ISub(iresV18CB,_t18D1);
      int[] _t18D5#1 = Range(_t18CF,_t18D3);
    FOREACH18D8:  preds = [ASSIGN18D6,NEXT18E5]
      foreach (vi18D7 in _t18D5) on exit goto RETURN18E7
      int _t18DD#1 = ISub(iresU18CC,_t18D1);
      int[] _t18DF#1 = Range(_t18CF,_t18DD);
    FOREACH18E2:  preds = [ASSIGN1BAD,NEXT18E4]
      foreach (ui18E1 in _t18DF) on exit goto NEXT18E5
      new ray(ui18E1,vi18D7);
      goto FOREACH18E2
    NEXT18E5:  preds = [FOREACH18E2]
      goto FOREACH18D8
    RETURN18E7:  preds = [FOREACH18D8]
      return
#### end program ####
promote _t187E --> globals._t1C39
promote _t1875 --> globals._tX1C3C
promote _t186A --> globals._tXX1C3F
promote _t18C4 --> globals._tXXX1C46
promote img1885 --> globals.img1C4E
promote _t1883 --> globals._tXXXX1C51
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block176A (block) = <no-default>
  input 0space0509_intermedateGlobal176B (space) = <no-default>
  input 0U050B_intermedateGlobal176C (U) = <no-default>
  input cellChoice176D (cellChoice) = <no-default>
  input cmap176E (cmap) = image("cmap.nrrd")
  input camEye176F (camEye) = <default>
  input camAt1770 (camAt) = <default>
  input camUp1771 (camUp) = <default>
  input camNear1772 (camNear) = <default>
  input camFar1773 (camFar) = <default>
  input camFOV1774 (camFOV) = <default>
  input camOrtho1775 (camOrtho) = <default>
  input iresU1776 (iresU) = <default>
  input iresV1777 (iresV) = <default>
  input rayStep1778 (rayStep) = <default>
  input refStep1779 (refStep) = <default>
  input transp0177A (transp0) = <default>
  input thick177B (thick) = <default>
  input fStrTh177C (fStrTh) = <default>
  input fMaskTh177D (fMaskTh) = <default>
  input fBias177E (fBias) = <default>
  input maxAlpha177F (maxAlpha) = <default>
  input light1780 (light) = <default>
  input phong1781 (phong) = <default>
  input mcNear1782 (mcNear) = <default>
  input mcFar1783 (mcFar) = <default>
  input litdir1784 (litdir) = <default>
  input cminmax1785 (cminmax) = <default>
  input analytical1786 (analytical) = <default>
  input umm1787 (umm) = image("data.nrrd")
  global tensor[3] camN1809
  global tensor[3] camU180A
  global tensor[3] camV180B
  global real camDist180C
  global real camVmax180D
  global real camUmax180E
  global real camNearVsp180F
  global real camFarVsp1810
  global tensor[3] litwsp1811
  global int _t1C39
  global femData:Space _tX1C3C
  global femData:FemFunc _tXX1C3F
  global kernel _tXXX1C46
  global image(IMAGE1D<double[3]>) img1C4E
  global kernel _tXXXX1C51
## functions
  function int[2] nextCell41824 (int faceIdx1813#1, int cell1814#1, femData:Mesh mesh1815#1) {
    ENTRY1823:  preds = []
      int _t1816#1 = 12;
      int _t1818#1 = IMul(cell1814,_t1816);
      int _t181A#1 = 2;
      int _t181C#1 = IMul(faceIdx1813,_t181A);
      int _t181E#1 = IAdd(_t1818,_t181C);
      int[2] _t1820#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1815,_t181E);
      return _t1820
}
## input initialization
  ENTRY1800:  preds = []
    real _t1788#13 = 0.e0;
    real _t178A#1 = -0.2e1;
    tensor[3] camEye178E#1 = <tensor[3]>[_t1788,_t178A,_t1788];
    globals.camEye176F = camEye178E;
    tensor[3] camAt1797#1 = <tensor[3]>[_t1788,_t1788,_t1788];
    globals.camAt1770 = camAt1797;
    real _t179E#5 = 0.1e1;
    tensor[3] camUp17A0#1 = <tensor[3]>[_t1788,_t1788,_t179E];
    globals.camUp1771 = camUp17A0;
    real camNear17A3#1 = -0.4e1;
    globals.camNear1772 = camNear17A3;
    real camFar17A6#1 = 0.4e1;
    globals.camFar1773 = camFar17A6;
    real camFOV17A9#1 = 0.1e2;
    globals.camFOV1774 = camFOV17A9;
    bool camOrtho17AC#2 = false;
    globals.camOrtho1775 = camOrtho17AC;
    int iresU17AF#2 = 100;
    globals.iresU1776 = iresU17AF;
    globals.iresV1777 = iresU17AF;
    real rayStep17B5#2 = 0.1e-3;
    globals.rayStep1778 = rayStep17B5;
    globals.refStep1779 = rayStep17B5;
    real transp017BB#1 = 0.5e-2;
    globals.transp0177A = transp017BB;
    real thick17BE#1 = 0.1e-1;
    globals.thick177B = thick17BE;
    globals.fStrTh177C = _t1788;
    globals.fMaskTh177D = _t1788;
    real fBias17C7#2 = 0.1e0;
    globals.fBias177E = fBias17C7;
    globals.maxAlpha177F = _t179E;
    globals.light1780 = camOrtho17AC;
    real _t17D2#1 = 0.7e0;
    real _t17D4#1 = 0.2e0;
    real _t17D6#1 = 0.1e3;
    tensor[4] phong17D8#1 = <tensor[4]>[fBias17C7,_t17D2,_t17D4,_t17D6];
    globals.phong1781 = phong17D8;
    tensor[3] mcNear17E1#2 = <tensor[3]>[_t179E,_t179E,_t179E];
    globals.mcNear1782 = mcNear17E1;
    globals.mcFar1783 = mcNear17E1;
    real _t17EF#1 = -0.1e1;
    tensor[3] litdir17F3#1 = <tensor[3]>[_t1788,_t17EF,_t1788];
    globals.litdir1784 = litdir17F3;
    tensor[2] cminmax17FA#1 = <tensor[2]>[_t1788,_t1788];
    globals.cminmax1785 = cminmax17FA;
    bool analytical17FD#1 = true;
    globals.analytical1786 = analytical17FD;
    return
## global-variable initialization
  ENTRY18C9:  preds = []
    femData:Mesh block1833#3 = globals.block176A;
    femData:Space 0space0509_intermedateGlobal1832#1 = globals.0space0509_intermedateGlobal176B;
    femData:FemFunc 0U050B_intermedateGlobal1831#1 = globals.0U050B_intermedateGlobal176C;
    int cellChoice1830#1 = globals.cellChoice176D;
    image(IMAGE1D<double[3]>) cmap182F#1 = globals.cmap176E;
    tensor[3] camEye182E#17 = globals.camEye176F;
    tensor[3] camAt182D#17 = globals.camAt1770;
    tensor[3] camUp182C#4 = globals.camUp1771;
    real camNear182B#1 = globals.camNear1772;
    real camFar182A#1 = globals.camFar1773;
    real camFOV1829#2 = globals.camFOV1774;
    int iresU1828#1 = globals.iresU1776;
    int iresV1827#1 = globals.iresV1777;
    tensor[3] litdir1826#2 = globals.litdir1784;
    image(IMAGE3D<float[]>) umm1825#0 = globals.umm1787;
    int _t1843#1 = 0;
    int _t1845#1 = 1;
    int _t1847#1 = ExtractFemItem<int,NumCell(Mesh)>(block1833);
    int _t1849#1 = ISub(_t1847,_t1845);
    int[] _t184B#1 = Range(_t1843,_t1849);
    femData:MeshCell[] _t184D#1 = <femData:MeshCell[]>{};
  FOREACH1851:  preds = [ASSIGN184E,NEXT1856]
    foreach (_t184F in _t184B) on exit goto ASSIGN185B
      femData:MeshCell[] _t1850#2 = phi(_t184D,_t1854)
    femData:MeshCell _t1852#1 = LoadFem<femData:MeshCell>(block1833,_t184F);
    femData:MeshCell[] _t1854#1 = Append<femData:MeshCell>(_t1850,_t1852);
    goto FOREACH1851
  ASSIGN185B:  preds = [FOREACH1851]
    femData:Space space185A#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1832,block1833);
    femData:FemFunc U185D#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1831,space185A);
    femData:MeshCell c11860#1 = Subscript<femData:MeshCell[]>(_t1850,cellChoice1830);
    int _t1864#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11860);
    femData:FuncCell _t1866#2 = LoadFem<femData:FuncCell>(U185D,_t1864);
    femData:FemFunc _t186A#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1866);
    femData:Space _t1875#1 = ExtractFem<femData:Space,femData:FemFunc>(_t186A);
    int _t187E#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1866);
    kernel _t1883#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1885#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap182F);
    tensor[3] camN188F#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt182D,camEye182E,camAt182D,camEye182E);
    globals.camN1809 = camN188F;
    tensor[3] camU1894#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt182D,camEye182E,camAt182D,camEye182E,camUp182C,camAt182D,camEye182E,camAt182D,camEye182E,camUp182C);
    globals.camU180A = camU1894;
    tensor[3] camV1897#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * (T0_{i1}) - (T1_{i1}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T0_{i3}) - (T1_{i3}) * (T0_{i3}) - (T1_{i3})))>(i3=0..2))) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii2,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * (1) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2)))>(i4=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt182D,camEye182E,camAt182D,camEye182E,camAt182D,camEye182E,camAt182D,camEye182E,camUp182C,camAt182D,camEye182E,camAt182D,camEye182E,camUp182C);
    globals.camV180B = camV1897;
    real camDist189C#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt182D,camEye182E);
    globals.camDist180C = camDist189C;
    real _t189F#2 = 0.314159265358979323846264338327950288e1;
    real _t18A3#2 = 0.36e3;
    real camVmax18A9#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV1829,_t189F,_t18A3,camAt182D,camEye182E);
    globals.camVmax180D = camVmax18A9;
    real _t18AC#1 = IntToReal(iresU1828);
    real _t18B0#1 = IntToReal(iresV1827);
    real camUmax18B2#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV1829,_t189F,_t18A3,camAt182D,camEye182E,_t18AC,_t18B0);
    globals.camUmax180E = camUmax18B2;
    real camNearVsp18B5#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear182B,camAt182D,camEye182E);
    globals.camNearVsp180F = camNearVsp18B5;
    real camFarVsp18B8#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar182A,camAt182D,camEye182E);
    globals.camFarVsp1810 = camFarVsp18B8;
    tensor[3,3] _t18BB#1 = <tensor[3,3]>[camU1894,camV1897,camN188F];
    tensor[3] litwsp18C1#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t18BB,litdir1826,litdir1826);
    globals.litwsp1811 = litwsp18C1;
    kernel _t18C4#1 = Kernel<bspln3,0>;
    globals._t1C39 = _t187E;
    globals._tX1C3C = _t1875;
    globals._tXX1C3F = _t186A;
    globals._tXXX1C46 = _t18C4;
    globals.img1C4E = img1885;
    globals._tXXXX1C51 = _t1883;
    return
## strand
  strand ray (int ui18E8#1, int vi18E9#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1992:  preds = []
        tensor[3] camEye1907#1 = globals.camEye176F;
        bool camOrtho1906#2 = globals.camOrtho1775;
        int iresU1905#1 = globals.iresU1776;
        int iresV1904#1 = globals.iresV1777;
        real rayStep1903#1 = globals.rayStep1778;
        real refStep1902#1 = globals.refStep1779;
        tensor[4] phong1901#4 = globals.phong1781;
        tensor[3] camN1900#4 = globals.camN1809;
        tensor[3] camU18FF#2 = globals.camU180A;
        tensor[3] camV18FE#2 = globals.camV180B;
        real camDist18FD#1 = globals.camDist180C;
        real camVmax18FC#6 = globals.camVmax180D;
        real camUmax18FB#6 = globals.camUmax180E;
        real camNearVsp18FA#1 = globals.camNearVsp180F;
        real _t1928#6 = -0.5e0;
        real _t192A#3 = IntToReal(ui18E8);
        real _t192C#3 = IntToReal(iresU1905);
        real _t192E#6 = 0.5e0;
        real rayU1932#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax18FB,camUmax18FB,_t1928,_t192A,_t192C,_t192E);
        real _t1938#3 = IntToReal(vi18E9);
        real _t193A#3 = IntToReal(iresV1904);
        real rayV1940#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax18FC,camVmax18FC,_t1928,_t1938,_t193A,_t192E);
        tensor[3] UV1948#2 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax18FB,camUmax18FB,_t1928,_t192A,_t192C,_t192E,camU18FF,camVmax18FC,camVmax18FC,_t1928,_t1938,_t193A,_t192E,camV18FE);
        if camOrtho1906 then goto JOIN194B else goto ASSIGN1950
      JOIN194B:  preds = [COND1957,ASSIGN1BC5]
        tensor[3] _t194D#1 = phi(UV1948,_t1955)
        tensor[3] rayOrig1958#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1907,_t194D);
        if camOrtho1906 then goto ASSIGN195D else goto ASSIGN1BFC
      ASSIGN195D:  preds = [COND1967]
        real _t195C#3 = 0.e0;
        tensor[3] _t1962#1 = <tensor[3]>[_t195C,_t195C,_t195C];
        goto JOIN195B
      JOIN195B:  preds = [ASSIGN1BC6,ASSIGN1BFC]
        tensor[3] _t1963#4 = phi(_t1962,_t1965)
        tensor[3] rayVec1968#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1900,_t1963);
        real alphaFix196E#1 = λ(T0[3],T1[3],T2[],T3[])<((T2 * Sqrt(Σ(i0=0..2)<(((T0_{i0} + T1_{i0}) * (T0_{i0} + T1_{i0})))>(i0=0..2)))) / ( T3)> (camN1900,_t1963,rayStep1903,refStep1902);
        tensor[3] eyeDir1972#1 = λ(T0[3],T1[3],T2[3],T3[3])<Neg(((T0_{i0} + T1_{i0}) * (1) / ( Sqrt(Σ(i2=0..2)<(((T0_{i2} + T1_{i2}) * (T0_{i2} + T1_{i2})))>(i2=0..2)))))>_{3} (camN1900,_t1963,camN1900,_t1963);
        real phKa1974#1 = TensorIndex<tensor[4],[0]>(phong1901);
        real phKd1976#1 = TensorIndex<tensor[4],[1]>(phong1901);
        real phKs1978#1 = TensorIndex<tensor[4],[2]>(phong1901);
        real phSp197A#1 = TensorIndex<tensor[4],[3]>(phong1901);
        real _t197C#8 = 0.e0;
        tensor[4] rgba1984#1 = <tensor[4]>[_t197C,_t197C,_t197C,_t197C];
        tensor[3] rgb198E#1 = <tensor[3]>[_t197C,_t197C,_t197C];
        real transp1990#1 = 0.1e1;
        self.rayU = rayU1932;
        self.rayV = rayV1940;
        self.rayN = camNearVsp18FA;
        self.UV = UV1948;
        self.rayOrig = rayOrig1958;
        self.rayVec = rayVec1968;
        self.alphaFix = alphaFix196E;
        self.eyeDir = eyeDir1972;
        self.phKa = phKa1974;
        self.phKd = phKd1976;
        self.phKs = phKs1978;
        self.phSp = phSp197A;
        self.rgba = rgba1984;
        self.raw = _t197C;
        self.rgb = rgb198E;
        self.transp = transp1990;
        return
      ASSIGN1BFC:  preds = [COND1967]
        tensor[3] _t1965#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3],T14[])<((((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))) / ( T14)>_{3} (camUmax18FB,camUmax18FB,_t1928,_t192A,_t192C,_t192E,camU18FF,camVmax18FC,camVmax18FC,_t1928,_t1938,_t193A,_t192E,camV18FE,camDist18FD);
        goto JOIN195B
      ASSIGN1950:  preds = [COND1957]
        real _t194F#3 = 0.e0;
        tensor[3] _t1955#1 = <tensor[3]>[_t194F,_t194F,_t194F];
        goto JOIN194B
    end state init
    method update
        ENTRY1B67:  preds = []
          int _t1C3A#5 = globals._t1C39;
          femData:Space _t1C3D#5 = globals._tX1C3C;
          femData:FemFunc _t1C40#5 = globals._tXX1C3F;
          image(IMAGE3D<float[]>) umm1C44#2 = globals.umm1787;
          kernel _t1C47#2 = globals._tXXX1C46;
          image(IMAGE1D<double[3]>) img1C4F#1 = globals.img1C4E;
          kernel _t1C52#1 = globals._tXXXX1C51;
          femData:Mesh block19B6#1 = globals.block176A;
          real rayStep19B5#4 = globals.rayStep1778;
          real transp019B4#1 = globals.transp0177A;
          real thick19B3#2 = globals.thick177B;
          real fStrTh19B2#1 = globals.fStrTh177C;
          real fMaskTh19B1#1 = globals.fMaskTh177D;
          real fBias19B0#1 = globals.fBias177E;
          real maxAlpha19AF#2 = globals.maxAlpha177F;
          tensor[3] mcNear19AE#1 = globals.mcNear1782;
          tensor[3] mcFar19AD#1 = globals.mcFar1783;
          tensor[2] cminmax19AC#2 = globals.cminmax1785;
          bool analytical19AB#1 = globals.analytical1786;
          real camNearVsp19A7#1 = globals.camNearVsp180F;
          real camFarVsp19A6#2 = globals.camFarVsp1810;
          tensor[3] litwsp19A5#3 = globals.litwsp1811;
          real rayN19CC#4 = self.rayN;
          tensor[3] rayOrig19CE#2 = self.rayOrig;
          tensor[3] rayVec19CF#2 = self.rayVec;
          real alphaFix19D0#1 = self.alphaFix;
          tensor[3] eyeDir19D1#2 = self.eyeDir;
          real phKa19D2#1 = self.phKa;
          real phKd19D3#1 = self.phKd;
          real phKs19D4#2 = self.phKs;
          real phSp19D5#1 = self.phSp;
          tensor[3] rgb19D8#1 = self.rgb;
          real transp19D9#2 = self.transp;
          real rayN19EA#6 = λ(T0[],T1[])<(T0 + T1)> (rayN19CC,rayStep19B5);
          bool _t19EC#1 = GT<real>(rayN19EA,camFarVsp19A6);
          if _t19EC then goto SAVE19F0 else goto JOIN19EE
        SAVE19F0:  preds = [COND19F4]
          self.rayN = rayN19EA;
          stabilize
          goto JOIN19EE
        JOIN19EE:  preds = [*STABILIZE19EF,COND19F4]
          tensor[3] pos19F7#7 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig19CE,rayN19CC,rayStep19B5,rayVec19CF);
          femData:RefCell _t19FC#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block19B6);
          real _t1A00#1 = 0.1e-8;
          bool _t1A02#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t19FC,pos19F7,_t1A00);
          if _t1A02 then goto ASSIGN1C41 else goto ASSIGN1A40
        ASSIGN1C41:  preds = [COND1A41]
          tensor[3,3] _t1A0B#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t1C3A,_t1C3D,_t1C40,pos19F7);
          (real[3] _t1A0D#1,tensor[3][3] evecs1A0E#0) = Eigen3x3(_t1A0B);
          int _t1A10#1 = 1;
          real _t1A12#1 = Subscript<real[3]>(_t1A0D,_t1A10);
          real _t1A1E#1 = λ(T0[],T1[],INT2,FEM(fns_t)3,FEM(func_t)4,T5[3])<(Neg(T0)) / ( (T1 + Sqrt(Σ(i0=0..2)<((Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5) * Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5)))>(i0=0..2))))> (_t1A12,fBias19B0,_t1C3A,_t1C3D,_t1C40,pos19F7);
          bool _t1A22#1 = GT<real>(_t1A1E,fStrTh19B2);
          if _t1A22 then goto ASSIGN1A28 else goto ASSIGN1A3A
        ASSIGN1A28:  preds = [COND1A3B]
          real _t1A27#1 = 0.1e1;
          bool _t1A2B#1 = GTE<real>(_t1A27,fMaskTh19B1);
          if _t1A2B then goto ASSIGN1A2F else goto ASSIGN1A34
        ASSIGN1A2F:  preds = [COND1A35]
          bool _t1A2E#1 = true;
          goto JOIN1A2D
        JOIN1A2D:  preds = [ASSIGN1A2F,ASSIGN1A34]
          bool _t1A31#1 = phi(_t1A2E,_t1A33)
          goto JOIN1A24
        JOIN1A24:  preds = [JOIN1A2D,ASSIGN1A3A]
          bool _t1A37#1 = phi(_t1A31,_t1A39)
          goto JOIN1A04
        JOIN1A04:  preds = [JOIN1A24,ASSIGN1A40]
          bool _t1A3D#1 = phi(_t1A37,_t1A3F)
          bool _t1A44#1 = BNot(_t1A3D);
          if _t1A44 then goto SAVE1A48 else goto JOIN1A46
        SAVE1A48:  preds = [COND1A4C]
          self.rayN = rayN19EA;
          active
          goto JOIN1A46
        JOIN1A46:  preds = [*ACTIVE1A47,COND1A4C]
          bool _t1A4E#1 = BNot(analytical19AB);
          if _t1A4E then goto ASSIGN1C4A else goto ASSIGN1C48
        ASSIGN1C4A:  preds = [COND1ACE]
          tensor[3,3] _t1A55#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t1C3A,_t1C3D,_t1C40,pos19F7);
          (real[3] evals1A58#2,tensor[3][3] E1A57#2) = Eigen3x3(_t1A55);
          int _t1A63#2 = 2;
          tensor[3] _t1A65#2 = Subscript<tensor[3][3]>(E1A57,_t1A63);
          real _t1A6F#1 = Subscript<real[3]>(evals1A58,_t1A63);
          int _t1A73#2 = 1;
          tensor[3] _t1A75#2 = Subscript<tensor[3][3]>(E1A57,_t1A73);
          real _t1A7F#1 = Subscript<real[3]>(evals1A58,_t1A73);
          tensor[3] _t1A8B#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,T9[3])<Σ(i1=0..2)<((Neg((((T0_{i0} * T0_{i1})) / ( T2) + ((T3_{i0} * T3_{i1})) / ( T5))) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i1},T9)))>(i1=0..2)>_{3} (_t1A65,_t1A65,_t1A6F,_t1A75,_t1A75,_t1A7F,_t1C3A,_t1C3D,_t1C40,pos19F7);
          goto JOIN1A50
        JOIN1A50:  preds = [ASSIGN1C4B,ASSIGN1C49]
          tensor[3] step1A8E#7 = phi(_t1A8B,_t1ACA)
          real _t1AD2#7 = 0.e0;
          real _t1AD4#12 = 0.1e1;
          real _t1AD6#2 = 0.15e1;
          real _t1AE4#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[3],T6[])<(T0 * Clamp <T1,T2,(T3 * (T2) - ((Abs(Sqrt(Σ(i0=0..2)<((T5_{i0} * T5_{i0}))>(i0=0..2)))) / ( T6)))>)> (maxAlpha19AF,_t1AD2,_t1AD4,_t1AD6,_t1AD4,step1A8E,thick19B3);
          bool _t1AEA#1 = EQ<real>(_t1AE4,_t1AD2);
          if _t1AEA then goto SAVE1AEE else goto JOIN1AEC
        SAVE1AEE:  preds = [COND1AF2]
          self.rayN = rayN19EA;
          active
          goto JOIN1AEC
        JOIN1AEC:  preds = [*ACTIVE1AED,COND1AF2]
          real _t1AF7#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[])<(T0) - ((T1 * Clamp <T2,T0,(T4 * (T0) - ((Abs(Sqrt(Σ(i0=0..2)<((T6_{i0} * T6_{i0}))>(i0=0..2)))) / ( T7)))>))> (_t1AD4,maxAlpha19AF,_t1AD2,_t1AD4,_t1AD6,_t1AD4,step1A8E,thick19B3);
          real _t1AF9#2 = MathFn<pow>(_t1AF7,alphaFix19D0);
          bool _t1B0B#1 = NEQ<real>(phKs19D4,_t1AD2);
          if _t1B0B then goto ASSIGN1C1B else goto JOIN1B0D
        ASSIGN1C1B:  preds = [COND1B19]
          real _t1B14#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3])<Abs(Σ(i0=0..2)<((Neg((T0_{i0} * (1) / ( Sqrt(Σ(i2=0..2)<((T0_{i2} * T0_{i2}))>(i2=0..2))))) * (T2_{i0} + T3_{i0}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T2_{i3} + T3_{i3}) * (T2_{i3} + T3_{i3})))>(i3=0..2)))))>(i0=0..2))> (step1A8E,step1A8E,eyeDir19D1,litwsp19A5,eyeDir19D1,litwsp19A5);
          real scomp1B16#1 = MathFn<pow>(_t1B14,phSp19D5);
          goto JOIN1B0D
        JOIN1B0D:  preds = [ASSIGN1B18,COND1B19]
          real scomp1B17#1 = phi(scomp1B16,_t1AD2)
          real cmin1B1C#2 = TensorIndex<tensor[2],[0]>(cminmax19AC);
          real cmax1B1E#2 = TensorIndex<tensor[2],[1]>(cminmax19AC);
          tensor[3] mcol1B26#2 = <tensor[3]>[_t1AD4,_t1AD4,_t1AD4];
          bool _t1B28#1 = NEQ<real>(cmin1B1C,cmax1B1E);
          if _t1B28 then goto ASSIGN1C1D else goto JOIN1B2A
        ASSIGN1C1D:  preds = [COND1B38]
          tensor[3] _t1B2F#1 = λ(T0[3],T1[],T2[],T3[3],T4[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}) + T4_{i0})>_{3} (rayOrig19CE,rayN19CC,rayStep19B5,rayVec19CF,step1A8E);
          real _t1B33#1 = λ(T0[],T1[],T2[],INT3,FEM(fns_t)4,FEM(func_t)5,T6[3],T7[])<(T0 + (((Probe(femV(noFunc, 3, 4, 5)⊛Basis(),T6)) - (T2)) / ( (T7) - (T2)) * (T1) - (T0)))> (_t1AD2,_t1AD4,cmin1B1C,_t1C3A,_t1C3D,_t1C40,_t1B2F,cmax1B1E);
          tensor[3] mcol1B35#1 = λ(V0(1)[3],H1,T2[1])<Probe(V0_{i0}⊛H1,T2)>_{3} (img1C4F,_t1C52,_t1B33);
          goto JOIN1B2A
        JOIN1B2A:  preds = [ASSIGN1C53,COND1B38]
          tensor[3] mcol1B36#1 = phi(mcol1B35,mcol1B26)
          tensor[3] rgb1B53#2 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[3],T7[3],T8[3],T9[3],T10[3],T11[],T12[],T13[],T14[],T15[3],T16[],T17[],T18[3])<(T0_{i0} + (T1 * (T2) - (T3) * (((T4 + (T5 * (Σ(i4=0..2)<((Neg((T6_{i4} * (1) / ( Sqrt(Σ(i6=0..2)<((T6_{i6} * T6_{i6}))>(i6=0..2))))) * T8_{i4}))>(i4=0..2))^2)) * (T9_{i0} + ((((T12 + T13)) - (T11)) / ( (T14) - (T11)) * (T10_{i0}) - (T9_{i0}))) * T15_{i0}) + (T16 * T17 * T18_{i0}))))>_{3} (rgb19D8,transp19D9,_t1AD4,_t1AF9,phKa19D2,phKd19D3,step1A8E,step1A8E,litwsp19A5,mcNear19AE,mcFar19AD,camNearVsp19A7,rayN19CC,rayStep19B5,camFarVsp19A6,mcol1B36,phKs19D4,scomp1B17,mcol1B26);
          real transp1B59#2 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp19D9,_t1AD4,_t1AD4,_t1AF9);
          bool _t1B5B#1 = LT<real>(transp1B59,transp019B4);
          if _t1B5B then goto SAVE1B62 else goto JOIN1B5D
        SAVE1B62:  preds = [COND1B66]
          self.rayN = rayN19EA;
          self.rgb = rgb1B53;
          self.transp = _t1AD2;
          stabilize
          goto JOIN1B5D
        JOIN1B5D:  preds = [*STABILIZE1B61,COND1B66]
          real transp1B5F#1 = phi(transp1B59)
          self.rayN = rayN19EA;
          self.rgb = rgb1B53;
          self.transp = transp1B5F;
          active
        ASSIGN1C48:  preds = [COND1ACE]
          tensor[3,3] _t1A94#1 = λ(V0(3)[],H1,T2[3])<Probe(V0⊛dx_{i0,i1}H1,T2)>_{3 3} (umm1C44,_t1C47,pos19F7);
          (real[3] evals1A97#2,tensor[3][3] E1A96#2) = Eigen3x3(_t1A94);
          int _t1AA2#2 = 2;
          tensor[3] _t1AA4#2 = Subscript<tensor[3][3]>(E1A96,_t1AA2);
          real _t1AAE#1 = Subscript<real[3]>(evals1A97,_t1AA2);
          int _t1AB2#2 = 1;
          tensor[3] _t1AB4#2 = Subscript<tensor[3][3]>(E1A96,_t1AB2);
          real _t1ABE#1 = Subscript<real[3]>(evals1A97,_t1AB2);
          tensor[3] _t1ACA#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[],V6(3)[],H7,T8[3])<Σ(i1=0..2)<((Neg((((T0_{i0} * T0_{i1})) / ( T2) + ((T3_{i0} * T3_{i1})) / ( T5))) * Probe(V6⊛dx_{i1}H7,T8)))>(i1=0..2)>_{3} (_t1AA4,_t1AA4,_t1AAE,_t1AB4,_t1AB4,_t1ABE,umm1C44,_t1C47,pos19F7);
          goto JOIN1A50
        ASSIGN1A34:  preds = [COND1A35]
          bool _t1A33#1 = false;
          goto JOIN1A2D
        ASSIGN1A3A:  preds = [COND1A3B]
          bool _t1A39#1 = false;
          goto JOIN1A24
        ASSIGN1A40:  preds = [COND1A41]
          bool _t1A3F#1 = false;
          goto JOIN1A04
    end update
    method stabilize
        ENTRY1BA6:  preds = []
          tensor[4] rgba1B79#1 = self.rgba;
          tensor[3] rgb1B7B#3 = self.rgb;
          real transp1B7C#5 = self.transp;
          real _t1B8D#5 = 0.1e1;
          bool _t1B8F#1 = LT<real>(transp1B7C,_t1B8D);
          if _t1B8F then goto ASSIGN1BE4 else goto JOIN1B91
        ASSIGN1BE4:  preds = [COND1BA5]
          real aa1B94#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B8D,transp1B7C);
          real _t1B96#1 = TensorIndex<tensor[3],[0]>(rgb1B7B);
          real _t1B98#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1B96,_t1B8D,transp1B7C);
          real _t1B9A#1 = TensorIndex<tensor[3],[1]>(rgb1B7B);
          real _t1B9C#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1B9A,_t1B8D,transp1B7C);
          real _t1B9E#1 = TensorIndex<tensor[3],[2]>(rgb1B7B);
          real _t1BA0#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1B9E,_t1B8D,transp1B7C);
          tensor[4] rgba1BA2#1 = <tensor[4]>[_t1B98,_t1B9C,_t1BA0,aa1B94];
          goto JOIN1B91
        JOIN1B91:  preds = [ASSIGN1BA4,COND1BA5]
          tensor[4] rgba1BA3#1 = phi(rgba1BA2,rgba1B79)
          self.rgba = rgba1BA3;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY18E6:  preds = []
      int iresU18CC#1 = globals.iresU1776;
      int iresV18CB#1 = globals.iresV1777;
      int _t18CF#2 = 0;
      int _t18D1#2 = 1;
      int _t18D3#1 = ISub(iresV18CB,_t18D1);
      int[] _t18D5#1 = Range(_t18CF,_t18D3);
    FOREACH18D8:  preds = [ASSIGN18D6,NEXT18E5]
      foreach (vi18D7 in _t18D5) on exit goto RETURN18E7
      int _t18DD#1 = ISub(iresU18CC,_t18D1);
      int[] _t18DF#1 = Range(_t18CF,_t18DD);
    FOREACH18E2:  preds = [ASSIGN1BAD,NEXT18E4]
      foreach (ui18E1 in _t18DF) on exit goto NEXT18E5
      new ray(ui18E1,vi18D7);
      goto FOREACH18E2
    NEXT18E5:  preds = [FOREACH18E2]
      goto FOREACH18D8
    RETURN18E7:  preds = [FOREACH18D8]
      return
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1C61 (block) = <no-default>
  input 0space0509_intermedateGlobal1C62 (space) = <no-default>
  input 0U050B_intermedateGlobal1C63 (U) = <no-default>
  input cellChoice1C64 (cellChoice) = <no-default>
  input cmap1C65 (cmap) = image("cmap.nrrd")
  input camEye1C66 (camEye) = <default>
  input camAt1C67 (camAt) = <default>
  input camUp1C68 (camUp) = <default>
  input camNear1C69 (camNear) = <default>
  input camFar1C6A (camFar) = <default>
  input camFOV1C6B (camFOV) = <default>
  input camOrtho1C6C (camOrtho) = <default>
  input iresU1C6D (iresU) = <default>
  input iresV1C6E (iresV) = <default>
  input rayStep1C6F (rayStep) = <default>
  input refStep1C70 (refStep) = <default>
  input transp01C71 (transp0) = <default>
  input thick1C72 (thick) = <default>
  input fStrTh1C73 (fStrTh) = <default>
  input fMaskTh1C74 (fMaskTh) = <default>
  input fBias1C75 (fBias) = <default>
  input maxAlpha1C76 (maxAlpha) = <default>
  input light1C77 (light) = <default>
  input phong1C78 (phong) = <default>
  input mcNear1C79 (mcNear) = <default>
  input mcFar1C7A (mcFar) = <default>
  input litdir1C7B (litdir) = <default>
  input cminmax1C7C (cminmax) = <default>
  input analytical1C7D (analytical) = <default>
  input umm1C7E (umm) = image("data.nrrd")
  global tensor[3] camN1C7F
  global tensor[3] camU1C80
  global tensor[3] camV1C81
  global real camDist1C82
  global real camVmax1C83
  global real camUmax1C84
  global real camNearVsp1C85
  global real camFarVsp1C86
  global tensor[3] litwsp1C87
  global int _t1C88
  global femData:Space _tX1C89
  global femData:FemFunc _tXX1C8A
  global kernel _tXXX1C8B
  global image(IMAGE1D<double[3]>) img1C8C
  global kernel _tXXXX1C8D
## functions
## input initialization
  ENTRY1C8E:  preds = []
    real _t1C8F#13 = 0.e0;
    real _t1C91#1 = -0.2e1;
    tensor[3] camEye1C93#1 = <tensor[3]>[_t1C8F,_t1C91,_t1C8F];
    globals.camEye1C66 = camEye1C93;
    tensor[3] camAt1C96#1 = <tensor[3]>[_t1C8F,_t1C8F,_t1C8F];
    globals.camAt1C67 = camAt1C96;
    real _t1C99#5 = 0.1e1;
    tensor[3] camUp1C9B#1 = <tensor[3]>[_t1C8F,_t1C8F,_t1C99];
    globals.camUp1C68 = camUp1C9B;
    real camNear1C9E#1 = -0.4e1;
    globals.camNear1C69 = camNear1C9E;
    real camFar1CA1#1 = 0.4e1;
    globals.camFar1C6A = camFar1CA1;
    real camFOV1CA4#1 = 0.1e2;
    globals.camFOV1C6B = camFOV1CA4;
    bool camOrtho1CA7#2 = false;
    globals.camOrtho1C6C = camOrtho1CA7;
    int iresU1CAA#2 = 100;
    globals.iresU1C6D = iresU1CAA;
    globals.iresV1C6E = iresU1CAA;
    real rayStep1CAE#2 = 0.1e-3;
    globals.rayStep1C6F = rayStep1CAE;
    globals.refStep1C70 = rayStep1CAE;
    real transp01CB2#1 = 0.5e-2;
    globals.transp01C71 = transp01CB2;
    real thick1CB5#1 = 0.1e-1;
    globals.thick1C72 = thick1CB5;
    globals.fStrTh1C73 = _t1C8F;
    globals.fMaskTh1C74 = _t1C8F;
    real fBias1CBA#2 = 0.1e0;
    globals.fBias1C75 = fBias1CBA;
    globals.maxAlpha1C76 = _t1C99;
    globals.light1C77 = camOrtho1CA7;
    real _t1CBF#1 = 0.7e0;
    real _t1CC1#1 = 0.2e0;
    real _t1CC3#1 = 0.1e3;
    tensor[4] phong1CC5#1 = <tensor[4]>[fBias1CBA,_t1CBF,_t1CC1,_t1CC3];
    globals.phong1C78 = phong1CC5;
    tensor[3] mcNear1CC8#2 = <tensor[3]>[_t1C99,_t1C99,_t1C99];
    globals.mcNear1C79 = mcNear1CC8;
    globals.mcFar1C7A = mcNear1CC8;
    real _t1CCC#1 = -0.1e1;
    tensor[3] litdir1CCE#1 = <tensor[3]>[_t1C8F,_t1CCC,_t1C8F];
    globals.litdir1C7B = litdir1CCE;
    tensor[2] cminmax1CD1#1 = <tensor[2]>[_t1C8F,_t1C8F];
    globals.cminmax1C7C = cminmax1CD1;
    bool analytical1CD4#1 = true;
    globals.analytical1C7D = analytical1CD4;
    return
## global-variable initialization
  ENTRY1CD8:  preds = []
    femData:Mesh block1CD9#3 = globals.block1C61;
    femData:Space 0space0509_intermedateGlobal1CDB#1 = globals.0space0509_intermedateGlobal1C62;
    femData:FemFunc 0U050B_intermedateGlobal1CDD#1 = globals.0U050B_intermedateGlobal1C63;
    int cellChoice1CDF#1 = globals.cellChoice1C64;
    image(IMAGE1D<double[3]>) cmap1CE1#1 = globals.cmap1C65;
    tensor[3] camEye1CE3#8 = globals.camEye1C66;
    tensor[3] camAt1CE5#8 = globals.camAt1C67;
    tensor[3] camUp1CE7#2 = globals.camUp1C68;
    real camNear1CE9#1 = globals.camNear1C69;
    real camFar1CEB#1 = globals.camFar1C6A;
    real camFOV1CED#2 = globals.camFOV1C6B;
    int iresU1CEF#1 = globals.iresU1C6D;
    int iresV1CF1#1 = globals.iresV1C6E;
    tensor[3] litdir1CF3#2 = globals.litdir1C7B;
    image(IMAGE3D<float[]>) umm1CF5#0 = globals.umm1C7E;
    int _t1CF7#1 = 0;
    int _t1CF9#1 = 1;
    int _t1CFB#1 = ExtractFemItem<int,NumCell(Mesh)>(block1CD9);
    int _t1CFD#1 = ISub(_t1CFB,_t1CF9);
    int[] _t1CFF#1 = Range(_t1CF7,_t1CFD);
    femData:MeshCell[] _t1D01#1 = <femData:MeshCell[]>{};
  FOREACH1D04:  preds = [ASSIGN1D02,NEXT1D0A]
    foreach (_t1D03 in _t1CFF) on exit goto ASSIGN1D0C
      femData:MeshCell[] _t1D08#2 = phi(_t1D01,_t1D07)
    femData:MeshCell _t1D05#1 = LoadFem<femData:MeshCell>(block1CD9,_t1D03);
    femData:MeshCell[] _t1D07#1 = Append<femData:MeshCell>(_t1D08,_t1D05);
    goto FOREACH1D04
  ASSIGN1D0C:  preds = [FOREACH1D04]
    femData:Space space1D0B#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1CDB,block1CD9);
    femData:FemFunc U1D0D#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1CDD,space1D0B);
    femData:MeshCell c11D0F#1 = Subscript<femData:MeshCell[]>(_t1D08,cellChoice1CDF);
    int _t1D11#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11D0F);
    femData:FuncCell _t1D13#2 = LoadFem<femData:FuncCell>(U1D0D,_t1D11);
    femData:FemFunc _t1D15#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1D13);
    femData:Space _t1D17#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1D15);
    int _t1D19#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1D13);
    kernel _t1D1B#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1D1D#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1CE1);
    tensor[3] op1_e3_l_41D20#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_61D21#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D20,op1_e3_l_41D20);
    real op1_e3_l_71D22#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D21);
    real op1_e3_l_91D23#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D22);
    tensor[3] camN1D1F#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D20,op1_e3_l_91D23);
    globals.camN1C7F = camN1D1F;
    tensor[3] op1_e3_l_101D2B#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_121D2C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_101D2B,op1_e3_l_101D2B);
    real op1_e3_l_131D2D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_121D2C);
    tensor[3,3] op1_e3_l_151D2E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1CE7);
    real op1_e3_l_161D2F#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_131D2D);
    tensor[3] op1_e3_l_171D30#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_101D2B,op1_e3_l_151D2E);
    real op1_e3_l_341D31#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171D30,op1_e3_l_171D30);
    real op1_e3_l_351D32#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_161D2F,op1_e3_l_161D2F,op1_e3_l_341D31);
    real op1_e3_l_361D33#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351D32);
    tensor[3] op1_e3_l_371D34#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_161D2F,op1_e3_l_171D30);
    real op1_e3_l_381D35#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361D33);
    tensor[3] camU1D2A#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371D34,op1_e3_l_381D35);
    globals.camU1C80 = camU1D2A;
    tensor[3] op1_e3_l_141D44#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_161D45#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141D44,op1_e3_l_141D44);
    real op1_e3_l_171D46#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_161D45);
    tensor[3,3] op1_e3_l_271D47#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1CE7);
    tensor[3] op1_e3_l_301D48#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141D44,op1_e3_l_271D47);
    real op1_e3_l_321D49#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_171D46);
    real op1_e3_l_341D4A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_301D48,op1_e3_l_301D48);
    real op1_e3_l_351D4B#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_321D49,op1_e3_l_321D49,op1_e3_l_341D4A);
    real op1_e3_l_361D4C#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351D4B);
    tensor[3,3] op1_e3_l_451D4D#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_301D48);
    tensor[3] op1_e3_l_471D4E#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141D44,op1_e3_l_451D4D);
    real op1_e3_l_491D4F#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361D4C);
    tensor[3] op1_e3_l_501D50#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_321D49,op1_e3_l_471D4E);
    tensor[3] camV1D43#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_321D49,op1_e3_l_491D4F,op1_e3_l_501D50);
    globals.camV1C81 = camV1D43;
    tensor[3] op1_e3_l_21D61#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_41D62#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21D61,op1_e3_l_21D61);
    real camDist1D60#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41D62);
    globals.camDist1C82 = camDist1D60;
    real _t1D67#2 = 0.314159265358979323846264338327950288e1;
    real _t1D69#2 = 0.36e3;
    real op1_e3_l_51D6C#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1CED,_t1D67);
    real op1_e3_l_61D6D#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1D69,op1_e3_l_51D6C);
    tensor[3] op1_e3_l_71D6E#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_91D6F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_71D6E,op1_e3_l_71D6E);
    real op1_e3_l_101D70#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_61D6D);
    real op1_e3_l_111D71#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_91D6F);
    real camVmax1D6B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D70,op1_e3_l_111D71);
    globals.camVmax1C83 = camVmax1D6B;
    real _t1D7A#1 = IntToReal(iresU1CEF);
    real _t1D7C#1 = IntToReal(iresV1CF1);
    real op1_e3_l_71D7F#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1CED,_t1D67);
    real op1_e3_l_81D80#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1D69,op1_e3_l_71D7F);
    tensor[3] op1_e3_l_91D81#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_111D82#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_91D81,op1_e3_l_91D81);
    real op1_e3_l_121D83#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_81D80);
    real op1_e3_l_131D84#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_111D82);
    real op1_e3_l_141D85#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1D7A,op1_e3_l_121D83,op1_e3_l_131D84);
    real camUmax1D7E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1D7C,op1_e3_l_141D85);
    globals.camUmax1C84 = camUmax1D7E;
    tensor[3] op1_e3_l_31D90#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_51D91#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_31D90,op1_e3_l_31D90);
    real op1_e3_l_61D92#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_51D91);
    real camNearVsp1D8F#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1CE9,op1_e3_l_61D92);
    globals.camNearVsp1C85 = camNearVsp1D8F;
    tensor[3] op1_e3_l_31D99#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_51D9A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_31D99,op1_e3_l_31D99);
    real op1_e3_l_61D9B#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_51D9A);
    real camFarVsp1D98#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1CEB,op1_e3_l_61D9B);
    globals.camFarVsp1C86 = camFarVsp1D98;
    tensor[3,3] _t1DA1#1 = <tensor[3,3]>[camU1D2A,camV1D43,camN1D1F];
    real op1_e3_l_31DA4#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1CF3);
    real op1_e3_l_41DA5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31DA4);
    real op1_e3_l_51DA6#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41DA5);
    tensor[3] op1_e3_l_61DA7#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1DA1,litdir1CF3);
    tensor[3] litwsp1DA3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51DA6,op1_e3_l_61DA7);
    globals.litwsp1C87 = litwsp1DA3;
    kernel _t1DAE#1 = Kernel<bspln3,0>;
    globals._t1C88 = _t1D19;
    globals._tX1C89 = _t1D17;
    globals._tXX1C8A = _t1D15;
    globals._tXXX1C8B = _t1DAE;
    globals.img1C8C = img1D1D;
    globals._tXXXX1C8D = _t1D1B;
    return
## strand
  strand ray (int ui1DB7#1, int vi1DB8#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1DC9:  preds = []
        tensor[3] camEye1DCA#1 = globals.camEye1C66;
        bool camOrtho1DCC#2 = globals.camOrtho1C6C;
        int iresU1DCE#1 = globals.iresU1C6D;
        int iresV1DD0#1 = globals.iresV1C6E;
        real rayStep1DD2#1 = globals.rayStep1C6F;
        real refStep1DD4#1 = globals.refStep1C70;
        tensor[4] phong1DD6#4 = globals.phong1C78;
        tensor[3] camN1DD8#3 = globals.camN1C7F;
        tensor[3] camU1DDA#2 = globals.camU1C80;
        tensor[3] camV1DDC#2 = globals.camV1C81;
        real camDist1DDE#1 = globals.camDist1C82;
        real camVmax1DE0#6 = globals.camVmax1C83;
        real camUmax1DE2#6 = globals.camUmax1C84;
        real camNearVsp1DE4#1 = globals.camNearVsp1C85;
        real _t1DE6#12 = -0.5e0;
        real _t1DE8#3 = IntToReal(ui1DB7);
        real _t1DEA#3 = IntToReal(iresU1DCE);
        real _t1DEC#6 = 0.5e0;
        real op1_e3_l_61DEF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1DEA,_t1DEC);
        real op1_e3_l_71DF0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DE8);
        real op1_e3_l_81DF1#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_61DEF);
        real op1_e3_l_91DF2#2 = λ(T0[])<Neg(T0)> (camUmax1DE2);
        real op1_e3_l_101DF3#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71DF0,op1_e3_l_81DF1);
        real op1_e3_l_111DF4#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1DE2,op1_e3_l_91DF2);
        real op1_e3_l_131DF5#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101DF3,op1_e3_l_111DF4);
        real rayU1DEE#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91DF2,op1_e3_l_131DF5);
        real _t1DFE#3 = IntToReal(vi1DB8);
        real _t1E00#3 = IntToReal(iresV1DD0);
        real op1_e3_l_61E03#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E00,_t1DEC);
        real op1_e3_l_71E04#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DFE);
        real op1_e3_l_81E05#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_61E03);
        real op1_e3_l_91E06#2 = λ(T0[])<Neg(T0)> (camVmax1DE0);
        real op1_e3_l_101E07#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E04,op1_e3_l_81E05);
        real op1_e3_l_111E08#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1DE0,op1_e3_l_91E06);
        real op1_e3_l_131E09#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E07,op1_e3_l_111E08);
        real rayV1E02#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E06,op1_e3_l_131E09);
        real op1_e3_l_141E13#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1DEA,_t1DEC);
        real op1_e3_l_151E14#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DE8);
        real op1_e3_l_161E15#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_141E13);
        real op1_e3_l_171E16#2 = λ(T0[])<Neg(T0)> (camUmax1DE2);
        real op1_e3_l_181E17#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_151E14,op1_e3_l_161E15);
        real op1_e3_l_191E18#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1DE2,op1_e3_l_171E16);
        real op1_e3_l_211E19#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_181E17,op1_e3_l_191E18);
        real op1_e3_l_221E1A#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_171E16,op1_e3_l_211E19);
        real op1_e3_l_231E1B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DEC,_t1E00);
        real op1_e3_l_241E1C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DFE);
        real op1_e3_l_251E1D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_231E1B);
        real op1_e3_l_261E1E#2 = λ(T0[])<Neg(T0)> (camVmax1DE0);
        real op1_e3_l_271E1F#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_241E1C,op1_e3_l_251E1D);
        real op1_e3_l_281E20#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1DE0,op1_e3_l_261E1E);
        real op1_e3_l_301E21#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271E1F,op1_e3_l_281E20);
        real op1_e3_l_311E22#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_261E1E,op1_e3_l_301E21);
        tensor[3] op1_e3_l_321E23#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1DDA,op1_e3_l_221E1A);
        tensor[3] op1_e3_l_331E24#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1DDC,op1_e3_l_311E22);
        tensor[3] UV1E12#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321E23,op1_e3_l_331E24);
        if camOrtho1DCC then goto JOIN1E3B else goto ASSIGN1EA7
      JOIN1E3B:  preds = [COND1E38,ASSIGN1EA8]
        tensor[3] _t1E39#1 = phi(UV1E12,_t1E3A)
        tensor[3] rayOrig1E3C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1DCA,_t1E39);
        if camOrtho1DCC then goto ASSIGN1E40 else goto ASSIGN1E92
      ASSIGN1E40:  preds = [COND1E3E]
        real _t1E3F#3 = 0.e0;
        tensor[3] _t1E41#1 = <tensor[3]>[_t1E3F,_t1E3F,_t1E3F];
        goto JOIN1E45
      JOIN1E45:  preds = [ASSIGN1E42,ASSIGN1EA5]
        tensor[3] _t1E43#3 = phi(_t1E41,_t1E44)
        tensor[3] rayVec1E46#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1DD8,_t1E43);
        tensor[3] op1_e3_l_41E49#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1DD8,_t1E43);
        real op1_e3_l_61E4A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41E49,op1_e3_l_41E49);
        real op1_e3_l_71E4B#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61E4A);
        real op1_e3_l_81E4C#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1DD2,op1_e3_l_71E4B);
        real alphaFix1E48#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1DD4,op1_e3_l_81E4C);
        tensor[3] op1_e3_l_41E53#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1DD8,_t1E43);
        real op1_e3_l_61E54#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41E53,op1_e3_l_41E53);
        real op1_e3_l_71E55#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61E54);
        real op1_e3_l_91E56#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71E55);
        tensor[3] op1_e3_l_101E57#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41E53,op1_e3_l_91E56);
        tensor[3] eyeDir1E52#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101E57);
        real phKa1E5E#1 = TensorIndex<tensor[4],[0]>(phong1DD6);
        real phKd1E60#1 = TensorIndex<tensor[4],[1]>(phong1DD6);
        real phKs1E62#1 = TensorIndex<tensor[4],[2]>(phong1DD6);
        real phSp1E64#1 = TensorIndex<tensor[4],[3]>(phong1DD6);
        real _t1E66#8 = 0.e0;
        tensor[4] rgba1E68#1 = <tensor[4]>[_t1E66,_t1E66,_t1E66,_t1E66];
        tensor[3] rgb1E6A#1 = <tensor[3]>[_t1E66,_t1E66,_t1E66];
        real transp1E6C#1 = 0.1e1;
        self.rayU = rayU1DEE;
        self.rayV = rayV1E02;
        self.rayN = camNearVsp1DE4;
        self.UV = UV1E12;
        self.rayOrig = rayOrig1E3C;
        self.rayVec = rayVec1E46;
        self.alphaFix = alphaFix1E48;
        self.eyeDir = eyeDir1E52;
        self.phKa = phKa1E5E;
        self.phKd = phKd1E60;
        self.phKs = phKs1E62;
        self.phSp = phSp1E64;
        self.rgba = rgba1E68;
        self.raw = _t1E66;
        self.rgb = rgb1E6A;
        self.transp = transp1E6C;
        return
      ASSIGN1E92:  preds = [COND1E3E]
        real op1_e3_l_151E7F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1DEA,_t1DEC);
        real op1_e3_l_161E80#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DE8);
        real op1_e3_l_171E81#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_151E7F);
        real op1_e3_l_181E82#2 = λ(T0[])<Neg(T0)> (camUmax1DE2);
        real op1_e3_l_191E83#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_161E80,op1_e3_l_171E81);
        real op1_e3_l_201E84#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1DE2,op1_e3_l_181E82);
        real op1_e3_l_221E85#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_191E83,op1_e3_l_201E84);
        real op1_e3_l_231E86#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_181E82,op1_e3_l_221E85);
        real op1_e3_l_241E87#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DEC,_t1E00);
        real op1_e3_l_251E88#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DFE);
        real op1_e3_l_261E89#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_241E87);
        real op1_e3_l_271E8A#2 = λ(T0[])<Neg(T0)> (camVmax1DE0);
        real op1_e3_l_281E8B#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_251E88,op1_e3_l_261E89);
        real op1_e3_l_291E8C#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1DE0,op1_e3_l_271E8A);
        real op1_e3_l_311E8D#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_281E8B,op1_e3_l_291E8C);
        real op1_e3_l_321E8E#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_271E8A,op1_e3_l_311E8D);
        tensor[3] op1_e3_l_331E8F#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1DDA,op1_e3_l_231E86);
        tensor[3] op1_e3_l_341E90#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1DDC,op1_e3_l_321E8E);
        tensor[3] op1_e3_l_351E91#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_331E8F,op1_e3_l_341E90);
        tensor[3] _t1E44#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1DDE,op1_e3_l_351E91);
        goto JOIN1E45
      ASSIGN1EA7:  preds = [COND1E38]
        real _t1EA6#3 = 0.e0;
        tensor[3] _t1E3A#1 = <tensor[3]>[_t1EA6,_t1EA6,_t1EA6];
        goto JOIN1E3B
    end state init
    method update
        ENTRY1EA9:  preds = []
          image(IMAGE1D<double[3]>) cmap2140#3 = globals.cmap1C65;
          int _t1EAA#10 = globals._t1C88;
          femData:Space _t1EAC#10 = globals._tX1C89;
          femData:FemFunc _t1EAE#10 = globals._tXX1C8A;
          image(IMAGE3D<float[]>) umm1EB0#6 = globals.umm1C7E;
          kernel _t1EB2#0 = globals._tXXX1C8B;
          image(IMAGE1D<double[3]>) img1EB4#1 = globals.img1C8C;
          kernel _t1EB6#1 = globals._tXXXX1C8D;
          femData:Mesh block1EB8#1 = globals.block1C61;
          real rayStep1EBA#4 = globals.rayStep1C6F;
          real transp01EBC#1 = globals.transp01C71;
          real thick1EBE#2 = globals.thick1C72;
          real fStrTh1EC0#1 = globals.fStrTh1C73;
          real fMaskTh1EC2#1 = globals.fMaskTh1C74;
          real fBias1EC4#1 = globals.fBias1C75;
          real maxAlpha1EC6#2 = globals.maxAlpha1C76;
          tensor[3] mcNear1EC8#2 = globals.mcNear1C79;
          tensor[3] mcFar1ECA#1 = globals.mcFar1C7A;
          tensor[2] cminmax1ECC#2 = globals.cminmax1C7C;
          bool analytical1ECE#1 = globals.analytical1C7D;
          real camNearVsp1ED0#2 = globals.camNearVsp1C85;
          real camFarVsp1ED2#2 = globals.camFarVsp1C86;
          tensor[3] litwsp1ED4#2 = globals.litwsp1C87;
          real rayN1ED6#4 = self.rayN;
          tensor[3] rayOrig1ED8#2 = self.rayOrig;
          tensor[3] rayVec1EDA#2 = self.rayVec;
          real alphaFix1EDC#1 = self.alphaFix;
          tensor[3] eyeDir1EDE#1 = self.eyeDir;
          real phKa1EE0#1 = self.phKa;
          real phKd1EE2#1 = self.phKd;
          real phKs1EE4#2 = self.phKs;
          real phSp1EE6#1 = self.phSp;
          tensor[3] rgb1EE8#1 = self.rgb;
          real transp1EEA#2 = self.transp;
          real rayN1EEC#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1ED6,rayStep1EBA);
          bool _t1EEE#1 = GT<real>(rayN1EEC,camFarVsp1ED2);
          if _t1EEE then goto SAVE1EF1 else goto JOIN1EF3
        SAVE1EF1:  preds = [COND1EF0]
          self.rayN = rayN1EEC;
          stabilize
          goto JOIN1EF3
        JOIN1EF3:  preds = [*STABILIZE1EF2,COND1EF0]
          real op1_e3_l_41EF5#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1ED6,rayStep1EBA);
          tensor[3] op1_e3_l_51EF6#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1EDA,op1_e3_l_41EF5);
          tensor[3] pos1EF4#15 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1ED8,op1_e3_l_51EF6);
          femData:RefCell _t1EFA#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1EB8);
          real _t1EFC#1 = 0.1e-8;
          bool _t1EFE#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1EFA,pos1EF4,_t1EFC);
          if _t1EFE then goto ASSIGN1F06 else goto ASSIGN20FF
        ASSIGN1F06:  preds = [COND1F00]
          int[84] femIndicies1F03#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F04#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F03);
          tensor[84] dofs1F02#1 = femDofs1F04;
          tensor[3,3,84] basisResult1F05#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1EF4);
          tensor[3,3] _t1F01#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,dofs1F02,basisResult1F05,pos1EF4);
          (real[3] _t1F0B#1,tensor[3][3] evecs1F0C#0) = EigenVecs3x3(_t1F01);
          int _t1F0E#1 = 1;
          real _t1F10#1 = Subscript<real[3]>(_t1F0B,_t1F0E);
          int[84] femIndicies1F19#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F1A#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F19);
          tensor[84] dofs1F18#1 = femDofs1F1A;
          tensor[3,84] basisResult1F1B#1 = EvaluateBasis<BasisArray(3,84)>(pos1EF4);
          tensor[3] probe_l_61F13#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,dofs1F18,basisResult1F1B,pos1EF4);
          real op1_e3_l_81F14#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61F13,probe_l_61F13);
          real op1_e3_l_91F15#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81F14);
          real op1_e3_l_101F16#1 = λ(T0[])<Neg(T0)> (_t1F10);
          real op1_e3_l_111F17#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1EC4,op1_e3_l_91F15);
          real _t1F12#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101F16,op1_e3_l_111F17);
          bool _t1F26#1 = GT<real>(_t1F12,fStrTh1EC0);
          if _t1F26 then goto ASSIGN1F2A else goto ASSIGN20FE
        ASSIGN1F2A:  preds = [COND1F28]
          real _t1F29#1 = 0.1e1;
          bool _t1F2B#1 = GTE<real>(_t1F29,fMaskTh1EC2);
          if _t1F2B then goto ASSIGN1F2F else goto ASSIGN20FD
        ASSIGN1F2F:  preds = [COND1F2D]
          bool _t1F2E#1 = true;
          goto JOIN1F32
        JOIN1F32:  preds = [ASSIGN1F2F,ASSIGN20FD]
          bool _t1F30#1 = phi(_t1F2E,_t1F31)
          goto JOIN1F35
        JOIN1F35:  preds = [JOIN1F32,ASSIGN20FE]
          bool _t1F33#1 = phi(_t1F30,_t1F34)
          goto JOIN1F38
        JOIN1F38:  preds = [JOIN1F35,ASSIGN20FF]
          bool _t1F36#1 = phi(_t1F33,_t1F37)
          bool _t1F39#1 = BNot(_t1F36);
          if _t1F39 then goto SAVE1F3C else goto JOIN1F3E
        SAVE1F3C:  preds = [COND1F3B]
          self.rayN = rayN1EEC;
          active
          goto JOIN1F3E
        JOIN1F3E:  preds = [*ACTIVE1F3D,COND1F3B]
          bool _t1F3F#1 = BNot(analytical1ECE);
          if _t1F3F then goto ASSIGN1F47 else goto ASSIGN206E
        ASSIGN1F47:  preds = [COND1F41]
          int[84] femIndicies1F44#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F45#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F44);
          tensor[84] dofs1F43#1 = femDofs1F45;
          tensor[3,3,84] basisResult1F46#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1EF4);
          tensor[3,3] _t1F42#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,dofs1F43,basisResult1F46,pos1EF4);
          (real[3] evals1F4C#2,tensor[3][3] E1F4D#2) = EigenVecs3x3(_t1F42);
          int _t1F4F#2 = 2;
          tensor[3] _t1F51#1 = Subscript<tensor[3][3]>(E1F4D,_t1F4F);
          real _t1F53#1 = Subscript<real[3]>(evals1F4C,_t1F4F);
          int _t1F55#2 = 1;
          tensor[3] _t1F57#1 = Subscript<tensor[3][3]>(E1F4D,_t1F55);
          real _t1F59#1 = Subscript<real[3]>(evals1F4C,_t1F55);
          tensor[3,3] op1_e3_l_101F5C#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1F51);
          tensor[3,3] op1_e3_l_111F5D#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1F57);
          tensor[3,3] op1_e3_l_121F5E#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1F53,op1_e3_l_101F5C);
          tensor[3,3] op1_e3_l_131F5F#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1F59,op1_e3_l_111F5D);
          tensor[3,3] op1_e3_l_141F60#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_121F5E,op1_e3_l_131F5F);
          int[84] femIndicies1F64#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F65#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F64);
          tensor[84] dofs1F63#1 = femDofs1F65;
          tensor[3,84] basisResult1F66#1 = EvaluateBasis<BasisArray(3,84)>(pos1EF4);
          tensor[3] probe_l_151F61#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,dofs1F63,basisResult1F66,pos1EF4);
          tensor[3,3] op1_e3_l_161F62#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_141F60);
          tensor[3] _t1F5B#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_151F61,op1_e3_l_161F62);
          goto JOIN1F75
        JOIN1F75:  preds = [ASSIGN1F72,ASSIGN20FC]
          tensor[3] step1F73#7 = phi(_t1F5B,_t1F74)
          real _t1F76#8 = 0.e0;
          real _t1F78#12 = 0.1e1;
          real _t1F7A#2 = 0.15e1;
          real op1_e3_l_71F7D#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1F73);
          real op1_e3_l_81F7E#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_71F7D);
          real op1_e3_l_91F7F#1 = λ(T0[])<Abs(T0)> (op1_e3_l_81F7E);
          real op1_e3_l_101F80#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1EBE,op1_e3_l_91F7F);
          real op1_e3_l_111F81#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_101F80);
          real op1_e3_l_121F82#1 = λ(T0[],T1[])<(T0 * T1)> (_t1F7A,op1_e3_l_111F81);
          real op1_e3_l_131F83#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1F76,_t1F78,op1_e3_l_121F82);
          real _t1F7C#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1EC6,op1_e3_l_131F83);
          bool _t1F8C#1 = EQ<real>(_t1F7C,_t1F76);
          if _t1F8C then goto SAVE1F8F else goto JOIN1F91
        SAVE1F8F:  preds = [COND1F8E]
          self.rayN = rayN1EEC;
          active
          goto JOIN1F91
        JOIN1F91:  preds = [*ACTIVE1F90,COND1F8E]
          real op1_e3_l_81F93#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1F73);
          real op1_e3_l_91F94#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81F93);
          real op1_e3_l_101F95#1 = λ(T0[])<Abs(T0)> (op1_e3_l_91F94);
          real op1_e3_l_111F96#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1EBE,op1_e3_l_101F95);
          real op1_e3_l_121F97#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_111F96);
          real op1_e3_l_131F98#1 = λ(T0[],T1[])<(T0 * T1)> (_t1F7A,op1_e3_l_121F97);
          real op1_e3_l_141F99#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1F78,_t1F76,op1_e3_l_131F98);
          real op1_e3_l_151F9A#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1EC6,op1_e3_l_141F99);
          real _t1F92#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_151F9A);
          real _t1FA4#2 = MathFn<pow>(_t1F92,alphaFix1EDC);
          bool _t1FA6#1 = NEQ<real>(phKs1EE4,_t1F76);
          if _t1FA6 then goto ASSIGN1FB5 else goto JOIN1FC4
        ASSIGN1FB5:  preds = [COND1FA8]
          tensor[3] op1_e3_l_61FAA#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1EDE,litwsp1ED4);
          real op1_e3_l_81FAB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_61FAA,op1_e3_l_61FAA);
          real op1_e3_l_91FAC#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81FAB);
          real op1_e3_l_101FAD#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1F73);
          real op1_e3_l_111FAE#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_101FAD);
          real op1_e3_l_121FAF#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_111FAE);
          tensor[3] op1_e3_l_131FB0#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1F73,op1_e3_l_121FAF);
          tensor[3] op1_e3_l_141FB1#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_131FB0);
          real op1_e3_l_161FB2#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_91FAC);
          real op1_e3_l_171FB3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141FB1,op1_e3_l_61FAA);
          real op1_e3_l_181FB4#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_161FB2,op1_e3_l_171FB3);
          real _t1FA9#1 = λ(T0[])<Abs(T0)> (op1_e3_l_181FB4);
          real scomp1FC1#1 = MathFn<pow>(_t1FA9,phSp1EE6);
          goto JOIN1FC4
        JOIN1FC4:  preds = [ASSIGN1FC2,COND1FA8]
          real scomp1FC3#1 = phi(scomp1FC1,_t1F76)
          real cmin1FC5#3 = TensorIndex<tensor[2],[0]>(cminmax1ECC);
          real cmax1FC7#2 = TensorIndex<tensor[2],[1]>(cminmax1ECC);
          tensor[3] mcol1FC9#2 = <tensor[3]>[_t1F78,_t1F78,_t1F78];
          bool _t1FCB#1 = NEQ<real>(cmin1FC5,cmax1FC7);
          if _t1FCB then goto ASSIGN1FD1 else goto JOIN2005
        ASSIGN1FD1:  preds = [COND1FCD]
          real op1_e3_l_51FCF#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1ED6,rayStep1EBA);
          tensor[3] op1_e3_l_61FD0#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1EDA,op1_e3_l_51FCF);
          tensor[3] _t1FCE#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (rayOrig1ED8,step1F73,op1_e3_l_61FD0);
          int[84] femIndicies1FDC#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1FDD#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1FDC);
          tensor[84] dofs1FDB#1 = femDofs1FDD;
          tensor[84] basisResult1FDE#1 = EvaluateBasis<BasisArray(84)>(_t1FCE);
          real probe_l_81FD5#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1EAA,_t1EAC,_t1EAE,_t1FCE,dofs1FDB,basisResult1FDE,_t1FCE);
          real op1_e3_l_91FD6#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1FC5,probe_l_81FD5);
          real op1_e3_l_101FD7#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1FC5,cmax1FC7);
          real op1_e3_l_111FD8#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91FD6,op1_e3_l_101FD7);
          real op1_e3_l_121FD9#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1F76,_t1F78);
          real op1_e3_l_131FDA#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111FD8,op1_e3_l_121FD9);
          real _t1FD4#2 = λ(T0[],T1[])<(T0 + T1)> (_t1F76,op1_e3_l_131FDA);
          real Mtransform1FEB#2 = Transform<IMAGE1D<double[3]>>(cmap2140);
          real MxPos1FEC#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1FEB,_t1FD4);
          real Ttranslate1FED#1 = Translate<IMAGE1D<double[3]>>(cmap2140);
          real imgPos1FEE#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1FEC,Ttranslate1FED);
          real nd1FEF#2 = Floor<1>(imgPos1FEE);
          real f1FF0#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1FEE,nd1FEF);
          int n1FF1#1 = RealToInt<1>(nd1FEF);
          int lit1FF2#1 = 0;
          int idx1FF3#1 = IAdd(n1FF1,lit1FF2);
          tensor[3,2] ldvox1FF4#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap2140,idx1FF3);
          tensor[2] kernX_1FF5#1 = BuildPos<1>(f1FF0);
          tensor[2] kevalX_d0_1FF6#1 = EvalKernel<2,tent,0>(kernX_1FF5);
          tensor[3] mcol1FEA#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1EB4,_t1EB6,_t1FD4,Mtransform1FEB,ldvox1FF4,kevalX_d0_1FF6);
          goto JOIN2005
        JOIN2005:  preds = [ASSIGN2003,COND1FCD]
          tensor[3] mcol2004#1 = phi(mcol1FEA,mcol1FC9)
          real op1_e3_l_192007#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1F73);
          real op1_e3_l_202008#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_192007);
          real op1_e3_l_212009#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_202008);
          tensor[3] op1_e3_l_22200A#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1F73,op1_e3_l_212009);
          tensor[3] op1_e3_l_23200B#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_22200A);
          real op1_e3_l_24200C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1ED4,op1_e3_l_23200B);
          real op1_e3_l_25200D#1 = λ(T0[])<(T0)^2> (op1_e3_l_24200C);
          real op1_e3_l_26200E#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1EE2,op1_e3_l_25200D);
          real op1_e3_l_27200F#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1ED6,rayStep1EBA);
          real op1_e3_l_282010#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1ED0,op1_e3_l_27200F);
          real op1_e3_l_292011#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1ED0,camFarVsp1ED2);
          real op1_e3_l_302012#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_282010,op1_e3_l_292011);
          tensor[3] op1_e3_l_312013#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1EC8,mcFar1ECA);
          tensor[3] op1_e3_l_322014#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_302012,op1_e3_l_312013);
          real op1_e3_l_332015#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1EE0,op1_e3_l_26200E);
          tensor[3] op1_e3_l_342016#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1EC8,op1_e3_l_322014);
          tensor[3] op1_e3_l_352017#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2004,op1_e3_l_332015,op1_e3_l_342016);
          tensor[3] op1_e3_l_362018#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1EE4,scomp1FC3,mcol1FC9);
          real op1_e3_l_372019#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,_t1FA4);
          tensor[3] op1_e3_l_38201A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_352017,op1_e3_l_362018);
          tensor[3] op1_e3_l_39201B#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1EEA,op1_e3_l_372019,op1_e3_l_38201A);
          tensor[3] rgb2006#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1EE8,op1_e3_l_39201B);
          real op1_e3_l_42033#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,_t1FA4);
          real op1_e3_l_52034#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_42033);
          real transp2032#2 = λ(T0[],T1[])<(T0 * T1)> (transp1EEA,op1_e3_l_52034);
          bool _t2038#1 = LT<real>(transp2032,transp01EBC);
          if _t2038 then goto SAVE203B else goto JOIN2040
        SAVE203B:  preds = [COND203A]
          self.rayN = rayN1EEC;
          self.rgb = rgb2006;
          self.transp = _t1F76;
          stabilize
          goto JOIN2040
        JOIN2040:  preds = [*STABILIZE203E,COND203A]
          real transp203F#1 = phi(transp2032)
          self.rayN = rayN1EEC;
          self.rgb = rgb2006;
          self.transp = transp203F;
          active
        ASSIGN206E:  preds = [COND1F41]
          tensor[3,3] Mtransform2047#2 = Transform<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] MxPos2048#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (Mtransform2047,pos1EF4);
          tensor[3] Ttranslate2049#1 = Translate<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] imgPos204A#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (MxPos2048,Ttranslate2049);
          tensor[3] nd204B#2 = Floor<3>(imgPos204A);
          tensor[3] f204C#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (imgPos204A,nd204B);
          int[3] n204D#3 = RealToInt<3>(nd204B);
          tensor[3,3] P204E#2 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (Mtransform2047);
          int lit204F#3 = -1;
          int idx2050#1 = 0;
          int nX_2051#1 = Subscript<int[3]>(n204D,idx2050);
          int idx2052#1 = IAdd(nX_2051,lit204F);
          int idx2053#1 = 1;
          int nY_2054#1 = Subscript<int[3]>(n204D,idx2053);
          int idx2055#1 = IAdd(nY_2054,lit204F);
          int idx2056#1 = 2;
          int nZ_2057#1 = Subscript<int[3]>(n204D,idx2056);
          int idx2058#1 = IAdd(nZ_2057,lit204F);
          int[3] seq2059#1 = <int[3]>{idx2052,idx2055,idx2058};
          tensor[4,4,4] ldvox205A#1 = LoadVoxels<IMAGE3D<float[]>,4>(umm1EB0,seq2059);
          real vZ_205B#1 = TensorIndex<tensor[3],[2]>(f204C);
          tensor[4] kernZ_205C#3 = BuildPos<2>(vZ_205B);
          tensor[4] kevalZ_d0_205D#1 = EvalKernel<4,bspln3,0>(kernZ_205C);
          tensor[4] kevalZ_d1_205E#1 = EvalKernel<4,bspln3,1>(kernZ_205C);
          tensor[4] kevalZ_d2_205F#1 = EvalKernel<4,bspln3,2>(kernZ_205C);
          tensor[3,4] kconsZ_2060#1 = <tensor[3,4]>[kevalZ_d0_205D,kevalZ_d1_205E,kevalZ_d2_205F];
          real vY_2061#1 = TensorIndex<tensor[3],[1]>(f204C);
          tensor[4] kernY_2062#3 = BuildPos<2>(vY_2061);
          tensor[4] kevalY_d0_2063#1 = EvalKernel<4,bspln3,0>(kernY_2062);
          tensor[4] kevalY_d1_2064#1 = EvalKernel<4,bspln3,1>(kernY_2062);
          tensor[4] kevalY_d2_2065#1 = EvalKernel<4,bspln3,2>(kernY_2062);
          tensor[3,4] kconsY_2066#1 = <tensor[3,4]>[kevalY_d0_2063,kevalY_d1_2064,kevalY_d2_2065];
          real vX_2067#1 = TensorIndex<tensor[3],[0]>(f204C);
          tensor[4] kernX_2068#3 = BuildPos<2>(vX_2067);
          tensor[4] kevalX_d0_2069#1 = EvalKernel<4,bspln3,0>(kernX_2068);
          tensor[4] kevalX_d1_206A#1 = EvalKernel<4,bspln3,1>(kernX_2068);
          tensor[4] kevalX_d2_206B#1 = EvalKernel<4,bspln3,2>(kernX_2068);
          tensor[3,4] kconsX_206C#1 = <tensor[3,4]>[kevalX_d0_2069,kevalX_d1_206A,kevalX_d2_206B];
          tensor[3,3] TPP2046#1 = λ(V0(3)[],H1,H2,H3)<Σ(i2=~1..2)(i3=~1..2)(i4=~1..2)<((V0(2)[i2,i3,i4]# * H1^{δ_{'0',i0}δ_{'0',i1}}(1) * H2^{δ_{'1',i0}δ_{'1',i1}}(2) * H3^{δ_{'2',i0}δ_{'2',i1}}(3)))>(i2=~1..2)(i3=~1..2)(i4=~1..2)>_{3 3} (ldvox205A,kconsX_206C,kconsY_2066,kconsZ_2060);
          tensor[3,3] op1_e3_l_2206D#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T1_{i0,i2} * T0_{i1,i2}))>(i2=0..2)>_{3 3} (P204E,TPP2046);
          tensor[3,3] _t2045#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (P204E,op1_e3_l_2206D);
          (real[3] evals2097#2,tensor[3][3] E2098#2) = EigenVecs3x3(_t2045);
          int _t209A#2 = 2;
          tensor[3] _t209C#1 = Subscript<tensor[3][3]>(E2098,_t209A);
          real _t209E#1 = Subscript<real[3]>(evals2097,_t209A);
          int _t20A0#2 = 1;
          tensor[3] _t20A2#1 = Subscript<tensor[3][3]>(E2098,_t20A0);
          real _t20A4#1 = Subscript<real[3]>(evals2097,_t20A0);
          tensor[3,3] op1_e3_l_920A6#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t209C);
          tensor[3,3] op1_e3_l_1020A7#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20A2);
          tensor[3,3] op1_e3_l_1120A8#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t209E,op1_e3_l_920A6);
          tensor[3,3] op1_e3_l_1220A9#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20A4,op1_e3_l_1020A7);
          tensor[3,3] op1_e3_l_1320AA#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1120A8,op1_e3_l_1220A9);
          tensor[3,3] Mtransform20AE#2 = Transform<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] MxPos20AF#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (Mtransform20AE,pos1EF4);
          tensor[3] Ttranslate20B0#1 = Translate<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] imgPos20B1#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (MxPos20AF,Ttranslate20B0);
          tensor[3] nd20B2#2 = Floor<3>(imgPos20B1);
          tensor[3] f20B3#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (imgPos20B1,nd20B2);
          int[3] n20B4#3 = RealToInt<3>(nd20B2);
          tensor[3,3] P20B5#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (Mtransform20AE);
          int lit20B6#3 = -1;
          int idx20B7#1 = 0;
          int nX_20B8#1 = Subscript<int[3]>(n20B4,idx20B7);
          int idx20B9#1 = IAdd(nX_20B8,lit20B6);
          int idx20BA#1 = 1;
          int nY_20BB#1 = Subscript<int[3]>(n20B4,idx20BA);
          int idx20BC#1 = IAdd(nY_20BB,lit20B6);
          int idx20BD#1 = 2;
          int nZ_20BE#1 = Subscript<int[3]>(n20B4,idx20BD);
          int idx20BF#1 = IAdd(nZ_20BE,lit20B6);
          int[3] seq20C0#1 = <int[3]>{idx20B9,idx20BC,idx20BF};
          tensor[4,4,4] ldvox20C1#1 = LoadVoxels<IMAGE3D<float[]>,4>(umm1EB0,seq20C0);
          real vZ_20C2#1 = TensorIndex<tensor[3],[2]>(f20B3);
          tensor[4] kernZ_20C3#2 = BuildPos<2>(vZ_20C2);
          tensor[4] kevalZ_d0_20C4#1 = EvalKernel<4,bspln3,0>(kernZ_20C3);
          tensor[4] kevalZ_d1_20C5#1 = EvalKernel<4,bspln3,1>(kernZ_20C3);
          tensor[2,4] kconsZ_20C6#1 = <tensor[2,4]>[kevalZ_d0_20C4,kevalZ_d1_20C5];
          real vY_20C7#1 = TensorIndex<tensor[3],[1]>(f20B3);
          tensor[4] kernY_20C8#2 = BuildPos<2>(vY_20C7);
          tensor[4] kevalY_d0_20C9#1 = EvalKernel<4,bspln3,0>(kernY_20C8);
          tensor[4] kevalY_d1_20CA#1 = EvalKernel<4,bspln3,1>(kernY_20C8);
          tensor[2,4] kconsY_20CB#1 = <tensor[2,4]>[kevalY_d0_20C9,kevalY_d1_20CA];
          real vX_20CC#1 = TensorIndex<tensor[3],[0]>(f20B3);
          tensor[4] kernX_20CD#2 = BuildPos<2>(vX_20CC);
          tensor[4] kevalX_d0_20CE#1 = EvalKernel<4,bspln3,0>(kernX_20CD);
          tensor[4] kevalX_d1_20CF#1 = EvalKernel<4,bspln3,1>(kernX_20CD);
          tensor[2,4] kconsX_20D0#1 = <tensor[2,4]>[kevalX_d0_20CE,kevalX_d1_20CF];
          tensor[3] TPP20AD#1 = λ(V0(3)[],H1,H2,H3)<Σ(i1=~1..2)(i2=~1..2)(i3=~1..2)<((V0(2)[i1,i2,i3]# * H1^{δ_{'0',i0}}(1) * H2^{δ_{'1',i0}}(2) * H3^{δ_{'2',i0}}(3)))>(i1=~1..2)(i2=~1..2)(i3=~1..2)>_{3} (ldvox20C1,kconsX_20D0,kconsY_20CB,kconsZ_20C6);
          tensor[3] probe_l_1420AB#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T1_{i1} * T0_{i0,i1}))>(i1=0..2)>_{3} (P20B5,TPP20AD);
          tensor[3,3] op1_e3_l_1520AC#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_1320AA);
          tensor[3] _t1F74#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_1420AB,op1_e3_l_1520AC);
          goto JOIN1F75
        ASSIGN20FD:  preds = [COND1F2D]
          bool _t1F31#1 = false;
          goto JOIN1F32
        ASSIGN20FE:  preds = [COND1F28]
          bool _t1F34#1 = false;
          goto JOIN1F35
        ASSIGN20FF:  preds = [COND1F00]
          bool _t1F37#1 = false;
          goto JOIN1F38
    end update
    method stabilize
        ENTRY2100:  preds = []
          tensor[4] rgba2101#1 = self.rgba;
          tensor[3] rgb2103#3 = self.rgb;
          real transp2105#5 = self.transp;
          real _t2107#5 = 0.1e1;
          bool _t2109#1 = LT<real>(transp2105,_t2107);
          if _t2109 then goto ASSIGN210D else goto JOIN2123
        ASSIGN210D:  preds = [COND210B]
          real aa210C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2107,transp2105);
          real _t210E#1 = TensorIndex<tensor[3],[0]>(rgb2103);
          real op1_e3_l_32111#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2107,transp2105);
          real _t2110#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t210E,op1_e3_l_32111);
          real _t2114#1 = TensorIndex<tensor[3],[1]>(rgb2103);
          real op1_e3_l_32117#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2107,transp2105);
          real _t2116#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2114,op1_e3_l_32117);
          real _t211A#1 = TensorIndex<tensor[3],[2]>(rgb2103);
          real op1_e3_l_3211D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2107,transp2105);
          real _t211C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t211A,op1_e3_l_3211D);
          tensor[4] rgba2120#1 = <tensor[4]>[_t2110,_t2116,_t211C,aa210C];
          goto JOIN2123
        JOIN2123:  preds = [ASSIGN2121,COND210B]
          tensor[4] rgba2122#1 = phi(rgba2120,rgba2101)
          self.rgba = rgba2122;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY2126:  preds = []
      int iresU2127#1 = globals.iresU1C6D;
      int iresV2129#1 = globals.iresV1C6E;
      int _t212B#2 = 0;
      int _t212D#2 = 1;
      int _t212F#1 = ISub(iresV2129,_t212D);
      int[] _t2131#1 = Range(_t212B,_t212F);
    FOREACH2134:  preds = [ASSIGN2132,NEXT213D]
      foreach (vi2133 in _t2131) on exit goto RETURN213E
      int _t2135#1 = ISub(iresU2127,_t212D);
      int[] _t2137#1 = Range(_t212B,_t2135);
    FOREACH213A:  preds = [ASSIGN2138,NEXT213C]
      foreach (ui2139 in _t2137) on exit goto NEXT213D
      new ray(ui2139,vi2133);
      goto FOREACH213A
    NEXT213D:  preds = [FOREACH213A]
      goto FOREACH2134
    RETURN213E:  preds = [FOREACH2134]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1C61 (block) = <no-default>
  input 0space0509_intermedateGlobal1C62 (space) = <no-default>
  input 0U050B_intermedateGlobal1C63 (U) = <no-default>
  input cellChoice1C64 (cellChoice) = <no-default>
  input cmap1C65 (cmap) = image("cmap.nrrd")
  input camEye1C66 (camEye) = <default>
  input camAt1C67 (camAt) = <default>
  input camUp1C68 (camUp) = <default>
  input camNear1C69 (camNear) = <default>
  input camFar1C6A (camFar) = <default>
  input camFOV1C6B (camFOV) = <default>
  input camOrtho1C6C (camOrtho) = <default>
  input iresU1C6D (iresU) = <default>
  input iresV1C6E (iresV) = <default>
  input rayStep1C6F (rayStep) = <default>
  input refStep1C70 (refStep) = <default>
  input transp01C71 (transp0) = <default>
  input thick1C72 (thick) = <default>
  input fStrTh1C73 (fStrTh) = <default>
  input fMaskTh1C74 (fMaskTh) = <default>
  input fBias1C75 (fBias) = <default>
  input maxAlpha1C76 (maxAlpha) = <default>
  input light1C77 (light) = <default>
  input phong1C78 (phong) = <default>
  input mcNear1C79 (mcNear) = <default>
  input mcFar1C7A (mcFar) = <default>
  input litdir1C7B (litdir) = <default>
  input cminmax1C7C (cminmax) = <default>
  input analytical1C7D (analytical) = <default>
  input umm1C7E (umm) = image("data.nrrd")
  global tensor[3] camN1C7F
  global tensor[3] camU1C80
  global tensor[3] camV1C81
  global real camDist1C82
  global real camVmax1C83
  global real camUmax1C84
  global real camNearVsp1C85
  global real camFarVsp1C86
  global tensor[3] litwsp1C87
  global int _t1C88
  global femData:Space _tX1C89
  global femData:FemFunc _tXX1C8A
  global kernel _tXXX1C8B
  global image(IMAGE1D<double[3]>) img1C8C
  global kernel _tXXXX1C8D
## functions
## input initialization
  ENTRY1C8E:  preds = []
    real _t1C8F#13 = 0.e0;
    real _t1C91#1 = -0.2e1;
    tensor[3] camEye1C93#1 = <tensor[3]>[_t1C8F,_t1C91,_t1C8F];
    globals.camEye1C66 = camEye1C93;
    tensor[3] camAt1C96#1 = <tensor[3]>[_t1C8F,_t1C8F,_t1C8F];
    globals.camAt1C67 = camAt1C96;
    real _t1C99#5 = 0.1e1;
    tensor[3] camUp1C9B#1 = <tensor[3]>[_t1C8F,_t1C8F,_t1C99];
    globals.camUp1C68 = camUp1C9B;
    real camNear1C9E#1 = -0.4e1;
    globals.camNear1C69 = camNear1C9E;
    real camFar1CA1#1 = 0.4e1;
    globals.camFar1C6A = camFar1CA1;
    real camFOV1CA4#1 = 0.1e2;
    globals.camFOV1C6B = camFOV1CA4;
    bool camOrtho1CA7#2 = false;
    globals.camOrtho1C6C = camOrtho1CA7;
    int iresU1CAA#2 = 100;
    globals.iresU1C6D = iresU1CAA;
    globals.iresV1C6E = iresU1CAA;
    real rayStep1CAE#2 = 0.1e-3;
    globals.rayStep1C6F = rayStep1CAE;
    globals.refStep1C70 = rayStep1CAE;
    real transp01CB2#1 = 0.5e-2;
    globals.transp01C71 = transp01CB2;
    real thick1CB5#1 = 0.1e-1;
    globals.thick1C72 = thick1CB5;
    globals.fStrTh1C73 = _t1C8F;
    globals.fMaskTh1C74 = _t1C8F;
    real fBias1CBA#2 = 0.1e0;
    globals.fBias1C75 = fBias1CBA;
    globals.maxAlpha1C76 = _t1C99;
    globals.light1C77 = camOrtho1CA7;
    real _t1CBF#1 = 0.7e0;
    real _t1CC1#1 = 0.2e0;
    real _t1CC3#1 = 0.1e3;
    tensor[4] phong1CC5#1 = <tensor[4]>[fBias1CBA,_t1CBF,_t1CC1,_t1CC3];
    globals.phong1C78 = phong1CC5;
    tensor[3] mcNear1CC8#2 = <tensor[3]>[_t1C99,_t1C99,_t1C99];
    globals.mcNear1C79 = mcNear1CC8;
    globals.mcFar1C7A = mcNear1CC8;
    real _t1CCC#1 = -0.1e1;
    tensor[3] litdir1CCE#1 = <tensor[3]>[_t1C8F,_t1CCC,_t1C8F];
    globals.litdir1C7B = litdir1CCE;
    tensor[2] cminmax1CD1#1 = <tensor[2]>[_t1C8F,_t1C8F];
    globals.cminmax1C7C = cminmax1CD1;
    bool analytical1CD4#1 = true;
    globals.analytical1C7D = analytical1CD4;
    return
## global-variable initialization
  ENTRY1CD8:  preds = []
    femData:Mesh block1CD9#3 = globals.block1C61;
    femData:Space 0space0509_intermedateGlobal1CDB#1 = globals.0space0509_intermedateGlobal1C62;
    femData:FemFunc 0U050B_intermedateGlobal1CDD#1 = globals.0U050B_intermedateGlobal1C63;
    int cellChoice1CDF#1 = globals.cellChoice1C64;
    image(IMAGE1D<double[3]>) cmap1CE1#1 = globals.cmap1C65;
    tensor[3] camEye1CE3#1 = globals.camEye1C66;
    tensor[3] camAt1CE5#1 = globals.camAt1C67;
    tensor[3] camUp1CE7#1 = globals.camUp1C68;
    real camNear1CE9#1 = globals.camNear1C69;
    real camFar1CEB#1 = globals.camFar1C6A;
    real camFOV1CED#1 = globals.camFOV1C6B;
    int iresU1CEF#1 = globals.iresU1C6D;
    int iresV1CF1#1 = globals.iresV1C6E;
    tensor[3] litdir1CF3#2 = globals.litdir1C7B;
    image(IMAGE3D<float[]>) umm1CF5#0 = globals.umm1C7E;
    int _t1CF7#1 = 0;
    int _t1CF9#1 = 1;
    int _t1CFB#1 = ExtractFemItem<int,NumCell(Mesh)>(block1CD9);
    int _t1CFD#1 = ISub(_t1CFB,_t1CF9);
    int[] _t1CFF#1 = Range(_t1CF7,_t1CFD);
    femData:MeshCell[] _t1D01#1 = <femData:MeshCell[]>{};
  FOREACH1D04:  preds = [ASSIGN1D02,NEXT1D0A]
    foreach (_t1D03 in _t1CFF) on exit goto ASSIGN1D0C
      femData:MeshCell[] _t1D08#2 = phi(_t1D01,_t1D07)
    femData:MeshCell _t1D05#1 = LoadFem<femData:MeshCell>(block1CD9,_t1D03);
    femData:MeshCell[] _t1D07#1 = Append<femData:MeshCell>(_t1D08,_t1D05);
    goto FOREACH1D04
  ASSIGN1D0C:  preds = [FOREACH1D04]
    femData:Space space1D0B#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1CDB,block1CD9);
    femData:FemFunc U1D0D#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1CDD,space1D0B);
    femData:MeshCell c11D0F#1 = Subscript<femData:MeshCell[]>(_t1D08,cellChoice1CDF);
    int _t1D11#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11D0F);
    femData:FuncCell _t1D13#2 = LoadFem<femData:FuncCell>(U1D0D,_t1D11);
    femData:FemFunc _t1D15#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1D13);
    femData:Space _t1D17#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1D15);
    int _t1D19#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1D13);
    kernel _t1D1B#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1D1D#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1CE1);
    tensor[3] op1_e3_l_41D20#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_61D21#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D20,op1_e3_l_41D20);
    real op1_e3_l_71D22#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D21);
    real op1_e3_l_91D23#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D22);
    tensor[3] camN1D1F#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D20,op1_e3_l_91D23);
    globals.camN1C7F = camN1D1F;
    tensor[3,3] op1_e3_l_151D2E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1CE7);
    tensor[3] op1_e3_l_171D30#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D20,op1_e3_l_151D2E);
    real op1_e3_l_341D31#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171D30,op1_e3_l_171D30);
    real op1_e3_l_351D32#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91D23,op1_e3_l_91D23,op1_e3_l_341D31);
    real op1_e3_l_361D33#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351D32);
    tensor[3] op1_e3_l_371D34#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D23,op1_e3_l_171D30);
    real op1_e3_l_381D35#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361D33);
    tensor[3] camU1D2A#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371D34,op1_e3_l_381D35);
    globals.camU1C80 = camU1D2A;
    tensor[3,3] op1_e3_l_451D4D#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171D30);
    tensor[3] op1_e3_l_471D4E#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D20,op1_e3_l_451D4D);
    tensor[3] op1_e3_l_501D50#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D23,op1_e3_l_471D4E);
    tensor[3] camV1D43#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91D23,op1_e3_l_381D35,op1_e3_l_501D50);
    globals.camV1C81 = camV1D43;
    globals.camDist1C82 = op1_e3_l_71D22;
    real _t1D67#1 = 0.314159265358979323846264338327950288e1;
    real _t1D69#1 = 0.36e3;
    real op1_e3_l_51D6C#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1CED,_t1D67);
    real op1_e3_l_61D6D#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1D69,op1_e3_l_51D6C);
    real op1_e3_l_101D70#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61D6D);
    real camVmax1D6B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D70,op1_e3_l_71D22);
    globals.camVmax1C83 = camVmax1D6B;
    real _t1D7A#1 = IntToReal(iresU1CEF);
    real _t1D7C#1 = IntToReal(iresV1CF1);
    real op1_e3_l_141D85#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1D7A,op1_e3_l_101D70,op1_e3_l_71D22);
    real camUmax1D7E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1D7C,op1_e3_l_141D85);
    globals.camUmax1C84 = camUmax1D7E;
    real camNearVsp1D8F#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1CE9,op1_e3_l_71D22);
    globals.camNearVsp1C85 = camNearVsp1D8F;
    real camFarVsp1D98#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1CEB,op1_e3_l_71D22);
    globals.camFarVsp1C86 = camFarVsp1D98;
    tensor[3,3] _t1DA1#1 = <tensor[3,3]>[camU1D2A,camV1D43,camN1D1F];
    real op1_e3_l_31DA4#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1CF3);
    real op1_e3_l_41DA5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31DA4);
    real op1_e3_l_51DA6#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41DA5);
    tensor[3] op1_e3_l_61DA7#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1DA1,litdir1CF3);
    tensor[3] litwsp1DA3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51DA6,op1_e3_l_61DA7);
    globals.litwsp1C87 = litwsp1DA3;
    kernel _t1DAE#1 = Kernel<bspln3,0>;
    globals._t1C88 = _t1D19;
    globals._tX1C89 = _t1D17;
    globals._tXX1C8A = _t1D15;
    globals._tXXX1C8B = _t1DAE;
    globals.img1C8C = img1D1D;
    globals._tXXXX1C8D = _t1D1B;
    return
## strand
  strand ray (int ui1DB7#1, int vi1DB8#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1DC9:  preds = []
        tensor[3] camEye1DCA#1 = globals.camEye1C66;
        bool camOrtho1DCC#2 = globals.camOrtho1C6C;
        int iresU1DCE#1 = globals.iresU1C6D;
        int iresV1DD0#1 = globals.iresV1C6E;
        real rayStep1DD2#1 = globals.rayStep1C6F;
        real refStep1DD4#1 = globals.refStep1C70;
        tensor[4] phong1DD6#4 = globals.phong1C78;
        tensor[3] camN1DD8#1 = globals.camN1C7F;
        tensor[3] camU1DDA#1 = globals.camU1C80;
        tensor[3] camV1DDC#1 = globals.camV1C81;
        real camDist1DDE#1 = globals.camDist1C82;
        real camVmax1DE0#2 = globals.camVmax1C83;
        real camUmax1DE2#2 = globals.camUmax1C84;
        real camNearVsp1DE4#1 = globals.camNearVsp1C85;
        real _t1DE6#5 = -0.5e0;
        real _t1DE8#1 = IntToReal(ui1DB7);
        real _t1DEA#1 = IntToReal(iresU1DCE);
        real _t1DEC#3 = 0.5e0;
        real op1_e3_l_61DEF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1DEA,_t1DEC);
        real op1_e3_l_71DF0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DE8);
        real op1_e3_l_81DF1#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_61DEF);
        real op1_e3_l_91DF2#2 = λ(T0[])<Neg(T0)> (camUmax1DE2);
        real op1_e3_l_101DF3#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71DF0,op1_e3_l_81DF1);
        real op1_e3_l_111DF4#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1DE2,op1_e3_l_91DF2);
        real op1_e3_l_131DF5#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101DF3,op1_e3_l_111DF4);
        real rayU1DEE#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91DF2,op1_e3_l_131DF5);
        real _t1DFE#1 = IntToReal(vi1DB8);
        real _t1E00#2 = IntToReal(iresV1DD0);
        real op1_e3_l_61E03#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E00,_t1DEC);
        real op1_e3_l_71E04#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DFE);
        real op1_e3_l_81E05#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_61E03);
        real op1_e3_l_91E06#3 = λ(T0[])<Neg(T0)> (camVmax1DE0);
        real op1_e3_l_101E07#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E04,op1_e3_l_81E05);
        real op1_e3_l_111E08#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1DE0,op1_e3_l_91E06);
        real op1_e3_l_131E09#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E07,op1_e3_l_111E08);
        real rayV1E02#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E06,op1_e3_l_131E09);
        real op1_e3_l_231E1B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DEC,_t1E00);
        real op1_e3_l_251E1D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_231E1B);
        real op1_e3_l_271E1F#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E04,op1_e3_l_251E1D);
        real op1_e3_l_301E21#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271E1F,op1_e3_l_111E08);
        real op1_e3_l_311E22#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E06,op1_e3_l_301E21);
        tensor[3] op1_e3_l_321E23#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1DDA,rayU1DEE);
        tensor[3] op1_e3_l_331E24#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1DDC,op1_e3_l_311E22);
        tensor[3] UV1E12#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321E23,op1_e3_l_331E24);
        if camOrtho1DCC then goto JOIN1E3B else goto ASSIGN1EA7
      JOIN1E3B:  preds = [COND1E38,ASSIGN1EA8]
        tensor[3] _t1E39#1 = phi(UV1E12,_t1E3A)
        tensor[3] rayOrig1E3C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1DCA,_t1E39);
        if camOrtho1DCC then goto ASSIGN1E40 else goto ASSIGN2155
      ASSIGN1E40:  preds = [COND1E3E]
        real _t1E3F#3 = 0.e0;
        tensor[3] _t1E41#1 = <tensor[3]>[_t1E3F,_t1E3F,_t1E3F];
        goto JOIN1E45
      JOIN1E45:  preds = [ASSIGN1E42,ASSIGN2155]
        tensor[3] _t1E43#1 = phi(_t1E41,_t1E44)
        tensor[3] rayVec1E46#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1DD8,_t1E43);
        real op1_e3_l_61E4A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1E46,rayVec1E46);
        real op1_e3_l_71E4B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61E4A);
        real op1_e3_l_81E4C#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1DD2,op1_e3_l_71E4B);
        real alphaFix1E48#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1DD4,op1_e3_l_81E4C);
        real op1_e3_l_91E56#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71E4B);
        tensor[3] op1_e3_l_101E57#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1E46,op1_e3_l_91E56);
        tensor[3] eyeDir1E52#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101E57);
        real phKa1E5E#1 = TensorIndex<tensor[4],[0]>(phong1DD6);
        real phKd1E60#1 = TensorIndex<tensor[4],[1]>(phong1DD6);
        real phKs1E62#1 = TensorIndex<tensor[4],[2]>(phong1DD6);
        real phSp1E64#1 = TensorIndex<tensor[4],[3]>(phong1DD6);
        real _t1E66#8 = 0.e0;
        tensor[4] rgba1E68#1 = <tensor[4]>[_t1E66,_t1E66,_t1E66,_t1E66];
        tensor[3] rgb1E6A#1 = <tensor[3]>[_t1E66,_t1E66,_t1E66];
        real transp1E6C#1 = 0.1e1;
        self.rayU = rayU1DEE;
        self.rayV = rayV1E02;
        self.rayN = camNearVsp1DE4;
        self.UV = UV1E12;
        self.rayOrig = rayOrig1E3C;
        self.rayVec = rayVec1E46;
        self.alphaFix = alphaFix1E48;
        self.eyeDir = eyeDir1E52;
        self.phKa = phKa1E5E;
        self.phKd = phKd1E60;
        self.phKs = phKs1E62;
        self.phSp = phSp1E64;
        self.rgba = rgba1E68;
        self.raw = _t1E66;
        self.rgb = rgb1E6A;
        self.transp = transp1E6C;
        return
      ASSIGN2155:  preds = [COND1E3E]
        tensor[3] _t1E44#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1DDE,UV1E12);
        goto JOIN1E45
      ASSIGN1EA7:  preds = [COND1E38]
        real _t1EA6#3 = 0.e0;
        tensor[3] _t1E3A#1 = <tensor[3]>[_t1EA6,_t1EA6,_t1EA6];
        goto JOIN1E3B
    end state init
    method update
        ENTRY1EA9:  preds = []
          image(IMAGE1D<double[3]>) cmap2140#3 = globals.cmap1C65;
          int _t1EAA#8 = globals._t1C88;
          femData:Space _t1EAC#8 = globals._tX1C89;
          femData:FemFunc _t1EAE#8 = globals._tXX1C8A;
          image(IMAGE3D<float[]>) umm1EB0#4 = globals.umm1C7E;
          kernel _t1EB2#0 = globals._tXXX1C8B;
          image(IMAGE1D<double[3]>) img1EB4#1 = globals.img1C8C;
          kernel _t1EB6#1 = globals._tXXXX1C8D;
          femData:Mesh block1EB8#1 = globals.block1C61;
          real rayStep1EBA#1 = globals.rayStep1C6F;
          real transp01EBC#1 = globals.transp01C71;
          real thick1EBE#1 = globals.thick1C72;
          real fStrTh1EC0#1 = globals.fStrTh1C73;
          real fMaskTh1EC2#1 = globals.fMaskTh1C74;
          real fBias1EC4#1 = globals.fBias1C75;
          real maxAlpha1EC6#2 = globals.maxAlpha1C76;
          tensor[3] mcNear1EC8#2 = globals.mcNear1C79;
          tensor[3] mcFar1ECA#1 = globals.mcFar1C7A;
          tensor[2] cminmax1ECC#2 = globals.cminmax1C7C;
          bool analytical1ECE#1 = globals.analytical1C7D;
          real camNearVsp1ED0#2 = globals.camNearVsp1C85;
          real camFarVsp1ED2#2 = globals.camFarVsp1C86;
          tensor[3] litwsp1ED4#2 = globals.litwsp1C87;
          real rayN1ED6#1 = self.rayN;
          tensor[3] rayOrig1ED8#2 = self.rayOrig;
          tensor[3] rayVec1EDA#1 = self.rayVec;
          real alphaFix1EDC#1 = self.alphaFix;
          tensor[3] eyeDir1EDE#1 = self.eyeDir;
          real phKa1EE0#1 = self.phKa;
          real phKd1EE2#1 = self.phKd;
          real phKs1EE4#2 = self.phKs;
          real phSp1EE6#1 = self.phSp;
          tensor[3] rgb1EE8#1 = self.rgb;
          real transp1EEA#2 = self.transp;
          real rayN1EEC#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1ED6,rayStep1EBA);
          bool _t1EEE#1 = GT<real>(rayN1EEC,camFarVsp1ED2);
          if _t1EEE then goto SAVE1EF1 else goto JOIN1EF3
        SAVE1EF1:  preds = [COND1EF0]
          self.rayN = rayN1EEC;
          stabilize
          goto JOIN1EF3
        JOIN1EF3:  preds = [*STABILIZE1EF2,COND1EF0]
          tensor[3] op1_e3_l_51EF6#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1EDA,rayN1EEC);
          tensor[3] pos1EF4#14 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1ED8,op1_e3_l_51EF6);
          femData:RefCell _t1EFA#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1EB8);
          real _t1EFC#1 = 0.1e-8;
          bool _t1EFE#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1EFA,pos1EF4,_t1EFC);
          if _t1EFE then goto ASSIGN1F06 else goto ASSIGN20FF
        ASSIGN1F06:  preds = [COND1F00]
          int[84] femIndicies1F03#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F04#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F03);
          tensor[3,3,84] basisResult1F05#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1EF4);
          tensor[3,3] _t1F01#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F04,basisResult1F05,pos1EF4);
          (real[3] _t1F0B#1,tensor[3][3] evecs1F0C#0) = EigenVecs3x3(_t1F01);
          int _t1F0E#1 = 1;
          real _t1F10#1 = Subscript<real[3]>(_t1F0B,_t1F0E);
          tensor[3,84] basisResult1F1B#1 = EvaluateBasis<BasisArray(3,84)>(pos1EF4);
          tensor[3] probe_l_61F13#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F04,basisResult1F1B,pos1EF4);
          real op1_e3_l_81F14#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61F13,probe_l_61F13);
          real op1_e3_l_91F15#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81F14);
          real op1_e3_l_101F16#1 = λ(T0[])<Neg(T0)> (_t1F10);
          real op1_e3_l_111F17#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1EC4,op1_e3_l_91F15);
          real _t1F12#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101F16,op1_e3_l_111F17);
          bool _t1F26#1 = GT<real>(_t1F12,fStrTh1EC0);
          if _t1F26 then goto ASSIGN1F2A else goto ASSIGN20FE
        ASSIGN1F2A:  preds = [COND1F28]
          real _t1F29#1 = 0.1e1;
          bool _t1F2B#1 = GTE<real>(_t1F29,fMaskTh1EC2);
          if _t1F2B then goto ASSIGN1F2F else goto ASSIGN20FD
        ASSIGN1F2F:  preds = [COND1F2D]
          bool _t1F2E#1 = true;
          goto JOIN1F32
        JOIN1F32:  preds = [ASSIGN1F2F,ASSIGN20FD]
          bool _t1F30#1 = phi(_t1F2E,_t1F31)
          goto JOIN1F35
        JOIN1F35:  preds = [JOIN1F32,ASSIGN20FE]
          bool _t1F33#1 = phi(_t1F30,_t1F34)
          goto JOIN1F38
        JOIN1F38:  preds = [JOIN1F35,ASSIGN20FF]
          bool _t1F36#1 = phi(_t1F33,_t1F37)
          bool _t1F39#1 = BNot(_t1F36);
          if _t1F39 then goto SAVE1F3C else goto JOIN1F3E
        SAVE1F3C:  preds = [COND1F3B]
          self.rayN = rayN1EEC;
          active
          goto JOIN1F3E
        JOIN1F3E:  preds = [*ACTIVE1F3D,COND1F3B]
          bool _t1F3F#1 = BNot(analytical1ECE);
          if _t1F3F then goto ASSIGN1F47 else goto ASSIGN206E
        ASSIGN1F47:  preds = [COND1F41]
          int[84] femIndicies1F44#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F45#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F44);
          tensor[3,3,84] basisResult1F46#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1EF4);
          tensor[3,3] _t1F42#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F45,basisResult1F46,pos1EF4);
          (real[3] evals1F4C#2,tensor[3][3] E1F4D#2) = EigenVecs3x3(_t1F42);
          int _t1F4F#2 = 2;
          tensor[3] _t1F51#1 = Subscript<tensor[3][3]>(E1F4D,_t1F4F);
          real _t1F53#1 = Subscript<real[3]>(evals1F4C,_t1F4F);
          int _t1F55#2 = 1;
          tensor[3] _t1F57#1 = Subscript<tensor[3][3]>(E1F4D,_t1F55);
          real _t1F59#1 = Subscript<real[3]>(evals1F4C,_t1F55);
          tensor[3,3] op1_e3_l_101F5C#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1F51);
          tensor[3,3] op1_e3_l_111F5D#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1F57);
          tensor[3,3] op1_e3_l_121F5E#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1F53,op1_e3_l_101F5C);
          tensor[3,3] op1_e3_l_131F5F#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1F59,op1_e3_l_111F5D);
          tensor[3,3] op1_e3_l_141F60#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_121F5E,op1_e3_l_131F5F);
          tensor[3,84] basisResult1F66#1 = EvaluateBasis<BasisArray(3,84)>(pos1EF4);
          tensor[3] probe_l_151F61#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F45,basisResult1F66,pos1EF4);
          tensor[3,3] op1_e3_l_161F62#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_141F60);
          tensor[3] _t1F5B#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_151F61,op1_e3_l_161F62);
          goto JOIN1F75
        JOIN1F75:  preds = [ASSIGN1F72,ASSIGN20FC]
          tensor[3] step1F73#4 = phi(_t1F5B,_t1F74)
          real _t1F76#8 = 0.e0;
          real _t1F78#10 = 0.1e1;
          real _t1F7A#1 = 0.15e1;
          real op1_e3_l_71F7D#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1F73);
          real op1_e3_l_81F7E#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_71F7D);
          real op1_e3_l_91F7F#1 = λ(T0[])<Abs(T0)> (op1_e3_l_81F7E);
          real op1_e3_l_101F80#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1EBE,op1_e3_l_91F7F);
          real op1_e3_l_111F81#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_101F80);
          real op1_e3_l_121F82#2 = λ(T0[],T1[])<(T0 * T1)> (_t1F7A,op1_e3_l_111F81);
          real op1_e3_l_131F83#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1F76,_t1F78,op1_e3_l_121F82);
          real _t1F7C#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1EC6,op1_e3_l_131F83);
          bool _t1F8C#1 = EQ<real>(_t1F7C,_t1F76);
          if _t1F8C then goto SAVE1F8F else goto JOIN1F91
        SAVE1F8F:  preds = [COND1F8E]
          self.rayN = rayN1EEC;
          active
          goto JOIN1F91
        JOIN1F91:  preds = [*ACTIVE1F90,COND1F8E]
          real op1_e3_l_141F99#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1F78,_t1F76,op1_e3_l_121F82);
          real op1_e3_l_151F9A#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1EC6,op1_e3_l_141F99);
          real _t1F92#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_151F9A);
          real _t1FA4#1 = MathFn<pow>(_t1F92,alphaFix1EDC);
          bool _t1FA6#1 = NEQ<real>(phKs1EE4,_t1F76);
          if _t1FA6 then goto ASSIGN1FB5 else goto JOIN1FC4
        ASSIGN1FB5:  preds = [COND1FA8]
          tensor[3] op1_e3_l_61FAA#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1EDE,litwsp1ED4);
          real op1_e3_l_81FAB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_61FAA,op1_e3_l_61FAA);
          real op1_e3_l_91FAC#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81FAB);
          real op1_e3_l_121FAF#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81F7E);
          tensor[3] op1_e3_l_131FB0#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1F73,op1_e3_l_121FAF);
          tensor[3] op1_e3_l_141FB1#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_131FB0);
          real op1_e3_l_161FB2#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_91FAC);
          real op1_e3_l_171FB3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141FB1,op1_e3_l_61FAA);
          real op1_e3_l_181FB4#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_161FB2,op1_e3_l_171FB3);
          real _t1FA9#1 = λ(T0[])<Abs(T0)> (op1_e3_l_181FB4);
          real scomp1FC1#1 = MathFn<pow>(_t1FA9,phSp1EE6);
          goto JOIN1FC4
        JOIN1FC4:  preds = [ASSIGN1FC2,COND1FA8]
          real scomp1FC3#1 = phi(scomp1FC1,_t1F76)
          real cmin1FC5#3 = TensorIndex<tensor[2],[0]>(cminmax1ECC);
          real cmax1FC7#2 = TensorIndex<tensor[2],[1]>(cminmax1ECC);
          tensor[3] mcol1FC9#2 = <tensor[3]>[_t1F78,_t1F78,_t1F78];
          bool _t1FCB#1 = NEQ<real>(cmin1FC5,cmax1FC7);
          if _t1FCB then goto ASSIGN2169 else goto JOIN2005
        ASSIGN2169:  preds = [COND1FCD]
          tensor[3] _t1FCE#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (rayOrig1ED8,step1F73,op1_e3_l_51EF6);
          int[84] femIndicies1FDC#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1FDD#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1FDC);
          tensor[84] basisResult1FDE#1 = EvaluateBasis<BasisArray(84)>(_t1FCE);
          real probe_l_81FD5#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1EAA,_t1EAC,_t1EAE,_t1FCE,femDofs1FDD,basisResult1FDE,_t1FCE);
          real op1_e3_l_91FD6#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1FC5,probe_l_81FD5);
          real op1_e3_l_101FD7#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1FC5,cmax1FC7);
          real op1_e3_l_111FD8#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91FD6,op1_e3_l_101FD7);
          real op1_e3_l_121FD9#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1F76,_t1F78);
          real op1_e3_l_131FDA#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111FD8,op1_e3_l_121FD9);
          real _t1FD4#2 = λ(T0[],T1[])<(T0 + T1)> (_t1F76,op1_e3_l_131FDA);
          real Mtransform1FEB#2 = Transform<IMAGE1D<double[3]>>(cmap2140);
          real MxPos1FEC#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1FEB,_t1FD4);
          real Ttranslate1FED#1 = Translate<IMAGE1D<double[3]>>(cmap2140);
          real imgPos1FEE#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1FEC,Ttranslate1FED);
          real nd1FEF#2 = Floor<1>(imgPos1FEE);
          real f1FF0#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1FEE,nd1FEF);
          int n1FF1#1 = RealToInt<1>(nd1FEF);
          int lit1FF2#1 = 0;
          int idx1FF3#1 = IAdd(n1FF1,lit1FF2);
          tensor[3,2] ldvox1FF4#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap2140,idx1FF3);
          tensor[2] kernX_1FF5#1 = BuildPos<1>(f1FF0);
          tensor[2] kevalX_d0_1FF6#1 = EvalKernel<2,tent,0>(kernX_1FF5);
          tensor[3] mcol1FEA#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1EB4,_t1EB6,_t1FD4,Mtransform1FEB,ldvox1FF4,kevalX_d0_1FF6);
          goto JOIN2005
        JOIN2005:  preds = [ASSIGN2003,COND1FCD]
          tensor[3] mcol2004#1 = phi(mcol1FEA,mcol1FC9)
          real op1_e3_l_212009#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81F7E);
          tensor[3] op1_e3_l_22200A#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1F73,op1_e3_l_212009);
          tensor[3] op1_e3_l_23200B#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_22200A);
          real op1_e3_l_24200C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1ED4,op1_e3_l_23200B);
          real op1_e3_l_25200D#1 = λ(T0[])<(T0)^2> (op1_e3_l_24200C);
          real op1_e3_l_26200E#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1EE2,op1_e3_l_25200D);
          real op1_e3_l_282010#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1ED0,rayN1EEC);
          real op1_e3_l_292011#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1ED0,camFarVsp1ED2);
          real op1_e3_l_302012#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_282010,op1_e3_l_292011);
          tensor[3] op1_e3_l_312013#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1EC8,mcFar1ECA);
          tensor[3] op1_e3_l_322014#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_302012,op1_e3_l_312013);
          real op1_e3_l_332015#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1EE0,op1_e3_l_26200E);
          tensor[3] op1_e3_l_342016#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1EC8,op1_e3_l_322014);
          tensor[3] op1_e3_l_352017#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2004,op1_e3_l_332015,op1_e3_l_342016);
          tensor[3] op1_e3_l_362018#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1EE4,scomp1FC3,mcol1FC9);
          real op1_e3_l_372019#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,_t1FA4);
          tensor[3] op1_e3_l_38201A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_352017,op1_e3_l_362018);
          tensor[3] op1_e3_l_39201B#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1EEA,op1_e3_l_372019,op1_e3_l_38201A);
          tensor[3] rgb2006#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1EE8,op1_e3_l_39201B);
          real op1_e3_l_52034#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_372019);
          real transp2032#2 = λ(T0[],T1[])<(T0 * T1)> (transp1EEA,op1_e3_l_52034);
          bool _t2038#1 = LT<real>(transp2032,transp01EBC);
          if _t2038 then goto SAVE203B else goto JOIN2040
        SAVE203B:  preds = [COND203A]
          self.rayN = rayN1EEC;
          self.rgb = rgb2006;
          self.transp = _t1F76;
          stabilize
          goto JOIN2040
        JOIN2040:  preds = [*STABILIZE203E,COND203A]
          real transp203F#1 = phi(transp2032)
          self.rayN = rayN1EEC;
          self.rgb = rgb2006;
          self.transp = transp203F;
          active
        ASSIGN206E:  preds = [COND1F41]
          tensor[3,3] Mtransform2047#2 = Transform<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] MxPos2048#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (Mtransform2047,pos1EF4);
          tensor[3] Ttranslate2049#1 = Translate<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] imgPos204A#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (MxPos2048,Ttranslate2049);
          tensor[3] nd204B#2 = Floor<3>(imgPos204A);
          tensor[3] f204C#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (imgPos204A,nd204B);
          int[3] n204D#3 = RealToInt<3>(nd204B);
          tensor[3,3] P204E#3 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (Mtransform2047);
          int lit204F#3 = -1;
          int idx2050#1 = 0;
          int nX_2051#1 = Subscript<int[3]>(n204D,idx2050);
          int idx2052#2 = IAdd(nX_2051,lit204F);
          int idx2053#3 = 1;
          int nY_2054#1 = Subscript<int[3]>(n204D,idx2053);
          int idx2055#2 = IAdd(nY_2054,lit204F);
          int idx2056#3 = 2;
          int nZ_2057#1 = Subscript<int[3]>(n204D,idx2056);
          int idx2058#2 = IAdd(nZ_2057,lit204F);
          int[3] seq2059#1 = <int[3]>{idx2052,idx2055,idx2058};
          tensor[4,4,4] ldvox205A#1 = LoadVoxels<IMAGE3D<float[]>,4>(umm1EB0,seq2059);
          real vZ_205B#1 = TensorIndex<tensor[3],[2]>(f204C);
          tensor[4] kernZ_205C#3 = BuildPos<2>(vZ_205B);
          tensor[4] kevalZ_d0_205D#2 = EvalKernel<4,bspln3,0>(kernZ_205C);
          tensor[4] kevalZ_d1_205E#2 = EvalKernel<4,bspln3,1>(kernZ_205C);
          tensor[4] kevalZ_d2_205F#1 = EvalKernel<4,bspln3,2>(kernZ_205C);
          tensor[3,4] kconsZ_2060#1 = <tensor[3,4]>[kevalZ_d0_205D,kevalZ_d1_205E,kevalZ_d2_205F];
          real vY_2061#1 = TensorIndex<tensor[3],[1]>(f204C);
          tensor[4] kernY_2062#3 = BuildPos<2>(vY_2061);
          tensor[4] kevalY_d0_2063#2 = EvalKernel<4,bspln3,0>(kernY_2062);
          tensor[4] kevalY_d1_2064#2 = EvalKernel<4,bspln3,1>(kernY_2062);
          tensor[4] kevalY_d2_2065#1 = EvalKernel<4,bspln3,2>(kernY_2062);
          tensor[3,4] kconsY_2066#1 = <tensor[3,4]>[kevalY_d0_2063,kevalY_d1_2064,kevalY_d2_2065];
          real vX_2067#1 = TensorIndex<tensor[3],[0]>(f204C);
          tensor[4] kernX_2068#3 = BuildPos<2>(vX_2067);
          tensor[4] kevalX_d0_2069#2 = EvalKernel<4,bspln3,0>(kernX_2068);
          tensor[4] kevalX_d1_206A#2 = EvalKernel<4,bspln3,1>(kernX_2068);
          tensor[4] kevalX_d2_206B#1 = EvalKernel<4,bspln3,2>(kernX_2068);
          tensor[3,4] kconsX_206C#1 = <tensor[3,4]>[kevalX_d0_2069,kevalX_d1_206A,kevalX_d2_206B];
          tensor[3,3] TPP2046#1 = λ(V0(3)[],H1,H2,H3)<Σ(i2=~1..2)(i3=~1..2)(i4=~1..2)<((V0(2)[i2,i3,i4]# * H1^{δ_{'0',i0}δ_{'0',i1}}(1) * H2^{δ_{'1',i0}δ_{'1',i1}}(2) * H3^{δ_{'2',i0}δ_{'2',i1}}(3)))>(i2=~1..2)(i3=~1..2)(i4=~1..2)>_{3 3} (ldvox205A,kconsX_206C,kconsY_2066,kconsZ_2060);
          tensor[3,3] op1_e3_l_2206D#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T1_{i0,i2} * T0_{i1,i2}))>(i2=0..2)>_{3 3} (P204E,TPP2046);
          tensor[3,3] _t2045#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (P204E,op1_e3_l_2206D);
          (real[3] evals2097#2,tensor[3][3] E2098#2) = EigenVecs3x3(_t2045);
          tensor[3] _t209C#1 = Subscript<tensor[3][3]>(E2098,idx2056);
          real _t209E#1 = Subscript<real[3]>(evals2097,idx2056);
          tensor[3] _t20A2#1 = Subscript<tensor[3][3]>(E2098,idx2053);
          real _t20A4#1 = Subscript<real[3]>(evals2097,idx2053);
          tensor[3,3] op1_e3_l_920A6#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t209C);
          tensor[3,3] op1_e3_l_1020A7#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20A2);
          tensor[3,3] op1_e3_l_1120A8#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t209E,op1_e3_l_920A6);
          tensor[3,3] op1_e3_l_1220A9#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20A4,op1_e3_l_1020A7);
          tensor[3,3] op1_e3_l_1320AA#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1120A8,op1_e3_l_1220A9);
          int[3] seq20C0#1 = <int[3]>{idx2052,idx2055,idx2058};
          tensor[4,4,4] ldvox20C1#1 = LoadVoxels<IMAGE3D<float[]>,4>(umm1EB0,seq20C0);
          tensor[2,4] kconsZ_20C6#1 = <tensor[2,4]>[kevalZ_d0_205D,kevalZ_d1_205E];
          tensor[2,4] kconsY_20CB#1 = <tensor[2,4]>[kevalY_d0_2063,kevalY_d1_2064];
          tensor[2,4] kconsX_20D0#1 = <tensor[2,4]>[kevalX_d0_2069,kevalX_d1_206A];
          tensor[3] TPP20AD#1 = λ(V0(3)[],H1,H2,H3)<Σ(i1=~1..2)(i2=~1..2)(i3=~1..2)<((V0(2)[i1,i2,i3]# * H1^{δ_{'0',i0}}(1) * H2^{δ_{'1',i0}}(2) * H3^{δ_{'2',i0}}(3)))>(i1=~1..2)(i2=~1..2)(i3=~1..2)>_{3} (ldvox20C1,kconsX_20D0,kconsY_20CB,kconsZ_20C6);
          tensor[3] probe_l_1420AB#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T1_{i1} * T0_{i0,i1}))>(i1=0..2)>_{3} (P204E,TPP20AD);
          tensor[3,3] op1_e3_l_1520AC#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_1320AA);
          tensor[3] _t1F74#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_1420AB,op1_e3_l_1520AC);
          goto JOIN1F75
        ASSIGN20FD:  preds = [COND1F2D]
          bool _t1F31#1 = false;
          goto JOIN1F32
        ASSIGN20FE:  preds = [COND1F28]
          bool _t1F34#1 = false;
          goto JOIN1F35
        ASSIGN20FF:  preds = [COND1F00]
          bool _t1F37#1 = false;
          goto JOIN1F38
    end update
    method stabilize
        ENTRY2100:  preds = []
          tensor[4] rgba2101#1 = self.rgba;
          tensor[3] rgb2103#3 = self.rgb;
          real transp2105#2 = self.transp;
          real _t2107#2 = 0.1e1;
          bool _t2109#1 = LT<real>(transp2105,_t2107);
          if _t2109 then goto ASSIGN210D else goto JOIN2123
        ASSIGN210D:  preds = [COND210B]
          real aa210C#4 = λ(T0[],T1[])<(T0) - (T1)> (_t2107,transp2105);
          real _t210E#1 = TensorIndex<tensor[3],[0]>(rgb2103);
          real _t2110#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t210E,aa210C);
          real _t2114#1 = TensorIndex<tensor[3],[1]>(rgb2103);
          real _t2116#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2114,aa210C);
          real _t211A#1 = TensorIndex<tensor[3],[2]>(rgb2103);
          real _t211C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t211A,aa210C);
          tensor[4] rgba2120#1 = <tensor[4]>[_t2110,_t2116,_t211C,aa210C];
          goto JOIN2123
        JOIN2123:  preds = [ASSIGN2121,COND210B]
          tensor[4] rgba2122#1 = phi(rgba2120,rgba2101)
          self.rgba = rgba2122;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY2126:  preds = []
      int iresU2127#1 = globals.iresU1C6D;
      int iresV2129#1 = globals.iresV1C6E;
      int _t212B#2 = 0;
      int _t212D#2 = 1;
      int _t212F#1 = ISub(iresV2129,_t212D);
      int[] _t2131#1 = Range(_t212B,_t212F);
    FOREACH2134:  preds = [ASSIGN2132,NEXT213D]
      foreach (vi2133 in _t2131) on exit goto RETURN213E
      int _t2135#1 = ISub(iresU2127,_t212D);
      int[] _t2137#1 = Range(_t212B,_t2135);
    FOREACH213A:  preds = [ASSIGN2138,NEXT213C]
      foreach (ui2139 in _t2137) on exit goto NEXT213D
      new ray(ui2139,vi2133);
      goto FOREACH213A
    NEXT213D:  preds = [FOREACH213A]
      goto FOREACH2134
    RETURN213E:  preds = [FOREACH2134]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1C61 (block) = <no-default>
  input 0space0509_intermedateGlobal1C62 (space) = <no-default>
  input 0U050B_intermedateGlobal1C63 (U) = <no-default>
  input cellChoice1C64 (cellChoice) = <no-default>
  input cmap1C65 (cmap) = image("cmap.nrrd")
  input camEye1C66 (camEye) = <default>
  input camAt1C67 (camAt) = <default>
  input camUp1C68 (camUp) = <default>
  input camNear1C69 (camNear) = <default>
  input camFar1C6A (camFar) = <default>
  input camFOV1C6B (camFOV) = <default>
  input camOrtho1C6C (camOrtho) = <default>
  input iresU1C6D (iresU) = <default>
  input iresV1C6E (iresV) = <default>
  input rayStep1C6F (rayStep) = <default>
  input refStep1C70 (refStep) = <default>
  input transp01C71 (transp0) = <default>
  input thick1C72 (thick) = <default>
  input fStrTh1C73 (fStrTh) = <default>
  input fMaskTh1C74 (fMaskTh) = <default>
  input fBias1C75 (fBias) = <default>
  input maxAlpha1C76 (maxAlpha) = <default>
  input light1C77 (light) = <default>
  input phong1C78 (phong) = <default>
  input mcNear1C79 (mcNear) = <default>
  input mcFar1C7A (mcFar) = <default>
  input litdir1C7B (litdir) = <default>
  input cminmax1C7C (cminmax) = <default>
  input analytical1C7D (analytical) = <default>
  input umm1C7E (umm) = image("data.nrrd")
  global tensor[3] camN1C7F
  global tensor[3] camU1C80
  global tensor[3] camV1C81
  global real camDist1C82
  global real camVmax1C83
  global real camUmax1C84
  global real camNearVsp1C85
  global real camFarVsp1C86
  global tensor[3] litwsp1C87
  global int _t1C88
  global femData:Space _tX1C89
  global femData:FemFunc _tXX1C8A
  global image(IMAGE1D<double[3]>) img1C8C
  global kernel _tXXXX1C8D
## functions
## input initialization
  ENTRY1C8E:  preds = []
    real _t1C8F#13 = 0.e0;
    real _t1C91#1 = -0.2e1;
    tensor[3] camEye1C93#1 = <tensor[3]>[_t1C8F,_t1C91,_t1C8F];
    globals.camEye1C66 = camEye1C93;
    tensor[3] camAt1C96#1 = <tensor[3]>[_t1C8F,_t1C8F,_t1C8F];
    globals.camAt1C67 = camAt1C96;
    real _t1C99#5 = 0.1e1;
    tensor[3] camUp1C9B#1 = <tensor[3]>[_t1C8F,_t1C8F,_t1C99];
    globals.camUp1C68 = camUp1C9B;
    real camNear1C9E#1 = -0.4e1;
    globals.camNear1C69 = camNear1C9E;
    real camFar1CA1#1 = 0.4e1;
    globals.camFar1C6A = camFar1CA1;
    real camFOV1CA4#1 = 0.1e2;
    globals.camFOV1C6B = camFOV1CA4;
    bool camOrtho1CA7#2 = false;
    globals.camOrtho1C6C = camOrtho1CA7;
    int iresU1CAA#2 = 100;
    globals.iresU1C6D = iresU1CAA;
    globals.iresV1C6E = iresU1CAA;
    real rayStep1CAE#2 = 0.1e-3;
    globals.rayStep1C6F = rayStep1CAE;
    globals.refStep1C70 = rayStep1CAE;
    real transp01CB2#1 = 0.5e-2;
    globals.transp01C71 = transp01CB2;
    real thick1CB5#1 = 0.1e-1;
    globals.thick1C72 = thick1CB5;
    globals.fStrTh1C73 = _t1C8F;
    globals.fMaskTh1C74 = _t1C8F;
    real fBias1CBA#2 = 0.1e0;
    globals.fBias1C75 = fBias1CBA;
    globals.maxAlpha1C76 = _t1C99;
    globals.light1C77 = camOrtho1CA7;
    real _t1CBF#1 = 0.7e0;
    real _t1CC1#1 = 0.2e0;
    real _t1CC3#1 = 0.1e3;
    tensor[4] phong1CC5#1 = <tensor[4]>[fBias1CBA,_t1CBF,_t1CC1,_t1CC3];
    globals.phong1C78 = phong1CC5;
    tensor[3] mcNear1CC8#2 = <tensor[3]>[_t1C99,_t1C99,_t1C99];
    globals.mcNear1C79 = mcNear1CC8;
    globals.mcFar1C7A = mcNear1CC8;
    real _t1CCC#1 = -0.1e1;
    tensor[3] litdir1CCE#1 = <tensor[3]>[_t1C8F,_t1CCC,_t1C8F];
    globals.litdir1C7B = litdir1CCE;
    tensor[2] cminmax1CD1#1 = <tensor[2]>[_t1C8F,_t1C8F];
    globals.cminmax1C7C = cminmax1CD1;
    bool analytical1CD4#1 = true;
    globals.analytical1C7D = analytical1CD4;
    return
## global-variable initialization
  ENTRY1CD8:  preds = []
    femData:Mesh block1CD9#3 = globals.block1C61;
    femData:Space 0space0509_intermedateGlobal1CDB#1 = globals.0space0509_intermedateGlobal1C62;
    femData:FemFunc 0U050B_intermedateGlobal1CDD#1 = globals.0U050B_intermedateGlobal1C63;
    int cellChoice1CDF#1 = globals.cellChoice1C64;
    image(IMAGE1D<double[3]>) cmap1CE1#1 = globals.cmap1C65;
    tensor[3] camEye1CE3#1 = globals.camEye1C66;
    tensor[3] camAt1CE5#1 = globals.camAt1C67;
    tensor[3] camUp1CE7#1 = globals.camUp1C68;
    real camNear1CE9#1 = globals.camNear1C69;
    real camFar1CEB#1 = globals.camFar1C6A;
    real camFOV1CED#1 = globals.camFOV1C6B;
    int iresU1CEF#1 = globals.iresU1C6D;
    int iresV1CF1#1 = globals.iresV1C6E;
    tensor[3] litdir1CF3#2 = globals.litdir1C7B;
    int _t1CF7#1 = 0;
    int _t1CF9#1 = 1;
    int _t1CFB#1 = ExtractFemItem<int,NumCell(Mesh)>(block1CD9);
    int _t1CFD#1 = ISub(_t1CFB,_t1CF9);
    int[] _t1CFF#1 = Range(_t1CF7,_t1CFD);
    femData:MeshCell[] _t1D01#1 = <femData:MeshCell[]>{};
  FOREACH1D04:  preds = [ASSIGN1D02,NEXT1D0A]
    foreach (_t1D03 in _t1CFF) on exit goto ASSIGN1D0C
      femData:MeshCell[] _t1D08#2 = phi(_t1D01,_t1D07)
    femData:MeshCell _t1D05#1 = LoadFem<femData:MeshCell>(block1CD9,_t1D03);
    femData:MeshCell[] _t1D07#1 = Append<femData:MeshCell>(_t1D08,_t1D05);
    goto FOREACH1D04
  ASSIGN1D0C:  preds = [FOREACH1D04]
    femData:Space space1D0B#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1CDB,block1CD9);
    femData:FemFunc U1D0D#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1CDD,space1D0B);
    femData:MeshCell c11D0F#1 = Subscript<femData:MeshCell[]>(_t1D08,cellChoice1CDF);
    int _t1D11#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11D0F);
    femData:FuncCell _t1D13#2 = LoadFem<femData:FuncCell>(U1D0D,_t1D11);
    femData:FemFunc _t1D15#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1D13);
    femData:Space _t1D17#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1D15);
    int _t1D19#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1D13);
    kernel _t1D1B#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1D1D#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1CE1);
    tensor[3] op1_e3_l_41D20#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_61D21#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D20,op1_e3_l_41D20);
    real op1_e3_l_71D22#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D21);
    real op1_e3_l_91D23#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D22);
    tensor[3] camN1D1F#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D20,op1_e3_l_91D23);
    globals.camN1C7F = camN1D1F;
    tensor[3,3] op1_e3_l_151D2E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1CE7);
    tensor[3] op1_e3_l_171D30#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D20,op1_e3_l_151D2E);
    real op1_e3_l_341D31#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171D30,op1_e3_l_171D30);
    real op1_e3_l_351D32#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91D23,op1_e3_l_91D23,op1_e3_l_341D31);
    real op1_e3_l_361D33#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351D32);
    tensor[3] op1_e3_l_371D34#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D23,op1_e3_l_171D30);
    real op1_e3_l_381D35#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361D33);
    tensor[3] camU1D2A#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371D34,op1_e3_l_381D35);
    globals.camU1C80 = camU1D2A;
    tensor[3,3] op1_e3_l_451D4D#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171D30);
    tensor[3] op1_e3_l_471D4E#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D20,op1_e3_l_451D4D);
    tensor[3] op1_e3_l_501D50#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D23,op1_e3_l_471D4E);
    tensor[3] camV1D43#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91D23,op1_e3_l_381D35,op1_e3_l_501D50);
    globals.camV1C81 = camV1D43;
    globals.camDist1C82 = op1_e3_l_71D22;
    real _t1D67#1 = 0.314159265358979323846264338327950288e1;
    real _t1D69#1 = 0.36e3;
    real op1_e3_l_51D6C#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1CED,_t1D67);
    real op1_e3_l_61D6D#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1D69,op1_e3_l_51D6C);
    real op1_e3_l_101D70#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61D6D);
    real camVmax1D6B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D70,op1_e3_l_71D22);
    globals.camVmax1C83 = camVmax1D6B;
    real _t1D7A#1 = IntToReal(iresU1CEF);
    real _t1D7C#1 = IntToReal(iresV1CF1);
    real op1_e3_l_141D85#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1D7A,op1_e3_l_101D70,op1_e3_l_71D22);
    real camUmax1D7E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1D7C,op1_e3_l_141D85);
    globals.camUmax1C84 = camUmax1D7E;
    real camNearVsp1D8F#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1CE9,op1_e3_l_71D22);
    globals.camNearVsp1C85 = camNearVsp1D8F;
    real camFarVsp1D98#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1CEB,op1_e3_l_71D22);
    globals.camFarVsp1C86 = camFarVsp1D98;
    tensor[3,3] _t1DA1#1 = <tensor[3,3]>[camU1D2A,camV1D43,camN1D1F];
    real op1_e3_l_31DA4#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1CF3);
    real op1_e3_l_41DA5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31DA4);
    real op1_e3_l_51DA6#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41DA5);
    tensor[3] op1_e3_l_61DA7#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1DA1,litdir1CF3);
    tensor[3] litwsp1DA3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51DA6,op1_e3_l_61DA7);
    globals.litwsp1C87 = litwsp1DA3;
    globals._t1C88 = _t1D19;
    globals._tX1C89 = _t1D17;
    globals._tXX1C8A = _t1D15;
    globals.img1C8C = img1D1D;
    globals._tXXXX1C8D = _t1D1B;
    return
## strand
  strand ray (int ui1DB7#1, int vi1DB8#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1DC9:  preds = []
        tensor[3] camEye1DCA#1 = globals.camEye1C66;
        bool camOrtho1DCC#2 = globals.camOrtho1C6C;
        int iresU1DCE#1 = globals.iresU1C6D;
        int iresV1DD0#1 = globals.iresV1C6E;
        real rayStep1DD2#1 = globals.rayStep1C6F;
        real refStep1DD4#1 = globals.refStep1C70;
        tensor[4] phong1DD6#4 = globals.phong1C78;
        tensor[3] camN1DD8#1 = globals.camN1C7F;
        tensor[3] camU1DDA#1 = globals.camU1C80;
        tensor[3] camV1DDC#1 = globals.camV1C81;
        real camDist1DDE#1 = globals.camDist1C82;
        real camVmax1DE0#2 = globals.camVmax1C83;
        real camUmax1DE2#2 = globals.camUmax1C84;
        real camNearVsp1DE4#1 = globals.camNearVsp1C85;
        real _t1DE6#5 = -0.5e0;
        real _t1DE8#1 = IntToReal(ui1DB7);
        real _t1DEA#1 = IntToReal(iresU1DCE);
        real _t1DEC#3 = 0.5e0;
        real op1_e3_l_61DEF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1DEA,_t1DEC);
        real op1_e3_l_71DF0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DE8);
        real op1_e3_l_81DF1#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_61DEF);
        real op1_e3_l_91DF2#2 = λ(T0[])<Neg(T0)> (camUmax1DE2);
        real op1_e3_l_101DF3#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71DF0,op1_e3_l_81DF1);
        real op1_e3_l_111DF4#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1DE2,op1_e3_l_91DF2);
        real op1_e3_l_131DF5#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101DF3,op1_e3_l_111DF4);
        real rayU1DEE#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91DF2,op1_e3_l_131DF5);
        real _t1DFE#1 = IntToReal(vi1DB8);
        real _t1E00#2 = IntToReal(iresV1DD0);
        real op1_e3_l_61E03#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E00,_t1DEC);
        real op1_e3_l_71E04#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DFE);
        real op1_e3_l_81E05#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_61E03);
        real op1_e3_l_91E06#3 = λ(T0[])<Neg(T0)> (camVmax1DE0);
        real op1_e3_l_101E07#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E04,op1_e3_l_81E05);
        real op1_e3_l_111E08#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1DE0,op1_e3_l_91E06);
        real op1_e3_l_131E09#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E07,op1_e3_l_111E08);
        real rayV1E02#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E06,op1_e3_l_131E09);
        real op1_e3_l_231E1B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DEC,_t1E00);
        real op1_e3_l_251E1D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_231E1B);
        real op1_e3_l_271E1F#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E04,op1_e3_l_251E1D);
        real op1_e3_l_301E21#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271E1F,op1_e3_l_111E08);
        real op1_e3_l_311E22#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E06,op1_e3_l_301E21);
        tensor[3] op1_e3_l_321E23#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1DDA,rayU1DEE);
        tensor[3] op1_e3_l_331E24#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1DDC,op1_e3_l_311E22);
        tensor[3] UV1E12#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321E23,op1_e3_l_331E24);
        if camOrtho1DCC then goto JOIN1E3B else goto ASSIGN1EA7
      JOIN1E3B:  preds = [COND1E38,ASSIGN1EA8]
        tensor[3] _t1E39#1 = phi(UV1E12,_t1E3A)
        tensor[3] rayOrig1E3C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1DCA,_t1E39);
        if camOrtho1DCC then goto ASSIGN1E40 else goto ASSIGN2155
      ASSIGN1E40:  preds = [COND1E3E]
        real _t1E3F#3 = 0.e0;
        tensor[3] _t1E41#1 = <tensor[3]>[_t1E3F,_t1E3F,_t1E3F];
        goto JOIN1E45
      JOIN1E45:  preds = [ASSIGN1E42,ASSIGN2155]
        tensor[3] _t1E43#1 = phi(_t1E41,_t1E44)
        tensor[3] rayVec1E46#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1DD8,_t1E43);
        real op1_e3_l_61E4A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1E46,rayVec1E46);
        real op1_e3_l_71E4B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61E4A);
        real op1_e3_l_81E4C#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1DD2,op1_e3_l_71E4B);
        real alphaFix1E48#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1DD4,op1_e3_l_81E4C);
        real op1_e3_l_91E56#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71E4B);
        tensor[3] op1_e3_l_101E57#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1E46,op1_e3_l_91E56);
        tensor[3] eyeDir1E52#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101E57);
        real phKa1E5E#1 = TensorIndex<tensor[4],[0]>(phong1DD6);
        real phKd1E60#1 = TensorIndex<tensor[4],[1]>(phong1DD6);
        real phKs1E62#1 = TensorIndex<tensor[4],[2]>(phong1DD6);
        real phSp1E64#1 = TensorIndex<tensor[4],[3]>(phong1DD6);
        real _t1E66#8 = 0.e0;
        tensor[4] rgba1E68#1 = <tensor[4]>[_t1E66,_t1E66,_t1E66,_t1E66];
        tensor[3] rgb1E6A#1 = <tensor[3]>[_t1E66,_t1E66,_t1E66];
        real transp1E6C#1 = 0.1e1;
        self.rayU = rayU1DEE;
        self.rayV = rayV1E02;
        self.rayN = camNearVsp1DE4;
        self.UV = UV1E12;
        self.rayOrig = rayOrig1E3C;
        self.rayVec = rayVec1E46;
        self.alphaFix = alphaFix1E48;
        self.eyeDir = eyeDir1E52;
        self.phKa = phKa1E5E;
        self.phKd = phKd1E60;
        self.phKs = phKs1E62;
        self.phSp = phSp1E64;
        self.rgba = rgba1E68;
        self.raw = _t1E66;
        self.rgb = rgb1E6A;
        self.transp = transp1E6C;
        return
      ASSIGN2155:  preds = [COND1E3E]
        tensor[3] _t1E44#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1DDE,UV1E12);
        goto JOIN1E45
      ASSIGN1EA7:  preds = [COND1E38]
        real _t1EA6#3 = 0.e0;
        tensor[3] _t1E3A#1 = <tensor[3]>[_t1EA6,_t1EA6,_t1EA6];
        goto JOIN1E3B
    end state init
    method update
        ENTRY1EA9:  preds = []
          image(IMAGE1D<double[3]>) cmap2140#3 = globals.cmap1C65;
          int _t1EAA#8 = globals._t1C88;
          femData:Space _t1EAC#8 = globals._tX1C89;
          femData:FemFunc _t1EAE#8 = globals._tXX1C8A;
          image(IMAGE3D<float[]>) umm1EB0#4 = globals.umm1C7E;
          image(IMAGE1D<double[3]>) img1EB4#1 = globals.img1C8C;
          kernel _t1EB6#1 = globals._tXXXX1C8D;
          femData:Mesh block1EB8#1 = globals.block1C61;
          real rayStep1EBA#1 = globals.rayStep1C6F;
          real transp01EBC#1 = globals.transp01C71;
          real thick1EBE#1 = globals.thick1C72;
          real fStrTh1EC0#1 = globals.fStrTh1C73;
          real fMaskTh1EC2#1 = globals.fMaskTh1C74;
          real fBias1EC4#1 = globals.fBias1C75;
          real maxAlpha1EC6#2 = globals.maxAlpha1C76;
          tensor[3] mcNear1EC8#2 = globals.mcNear1C79;
          tensor[3] mcFar1ECA#1 = globals.mcFar1C7A;
          tensor[2] cminmax1ECC#2 = globals.cminmax1C7C;
          bool analytical1ECE#1 = globals.analytical1C7D;
          real camNearVsp1ED0#2 = globals.camNearVsp1C85;
          real camFarVsp1ED2#2 = globals.camFarVsp1C86;
          tensor[3] litwsp1ED4#2 = globals.litwsp1C87;
          real rayN1ED6#1 = self.rayN;
          tensor[3] rayOrig1ED8#2 = self.rayOrig;
          tensor[3] rayVec1EDA#1 = self.rayVec;
          real alphaFix1EDC#1 = self.alphaFix;
          tensor[3] eyeDir1EDE#1 = self.eyeDir;
          real phKa1EE0#1 = self.phKa;
          real phKd1EE2#1 = self.phKd;
          real phKs1EE4#2 = self.phKs;
          real phSp1EE6#1 = self.phSp;
          tensor[3] rgb1EE8#1 = self.rgb;
          real transp1EEA#2 = self.transp;
          real rayN1EEC#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1ED6,rayStep1EBA);
          bool _t1EEE#1 = GT<real>(rayN1EEC,camFarVsp1ED2);
          if _t1EEE then goto SAVE1EF1 else goto JOIN1EF3
        SAVE1EF1:  preds = [COND1EF0]
          self.rayN = rayN1EEC;
          stabilize
          goto JOIN1EF3
        JOIN1EF3:  preds = [*STABILIZE1EF2,COND1EF0]
          tensor[3] op1_e3_l_51EF6#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1EDA,rayN1EEC);
          tensor[3] pos1EF4#14 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1ED8,op1_e3_l_51EF6);
          femData:RefCell _t1EFA#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1EB8);
          real _t1EFC#1 = 0.1e-8;
          bool _t1EFE#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1EFA,pos1EF4,_t1EFC);
          if _t1EFE then goto ASSIGN1F06 else goto ASSIGN20FF
        ASSIGN1F06:  preds = [COND1F00]
          int[84] femIndicies1F03#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F04#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F03);
          tensor[3,3,84] basisResult1F05#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1EF4);
          tensor[3,3] _t1F01#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F04,basisResult1F05,pos1EF4);
          real[3] _t1F0B#1 = EigenVals3x3(_t1F01);
          int _t1F0E#1 = 1;
          real _t1F10#1 = Subscript<real[3]>(_t1F0B,_t1F0E);
          tensor[3,84] basisResult1F1B#1 = EvaluateBasis<BasisArray(3,84)>(pos1EF4);
          tensor[3] probe_l_61F13#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F04,basisResult1F1B,pos1EF4);
          real op1_e3_l_81F14#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61F13,probe_l_61F13);
          real op1_e3_l_91F15#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81F14);
          real op1_e3_l_101F16#1 = λ(T0[])<Neg(T0)> (_t1F10);
          real op1_e3_l_111F17#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1EC4,op1_e3_l_91F15);
          real _t1F12#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101F16,op1_e3_l_111F17);
          bool _t1F26#1 = GT<real>(_t1F12,fStrTh1EC0);
          if _t1F26 then goto ASSIGN1F2A else goto ASSIGN20FE
        ASSIGN1F2A:  preds = [COND1F28]
          real _t1F29#1 = 0.1e1;
          bool _t1F2B#1 = GTE<real>(_t1F29,fMaskTh1EC2);
          if _t1F2B then goto ASSIGN1F2F else goto ASSIGN20FD
        ASSIGN1F2F:  preds = [COND1F2D]
          bool _t1F2E#1 = true;
          goto JOIN1F32
        JOIN1F32:  preds = [ASSIGN1F2F,ASSIGN20FD]
          bool _t1F30#1 = phi(_t1F2E,_t1F31)
          goto JOIN1F35
        JOIN1F35:  preds = [JOIN1F32,ASSIGN20FE]
          bool _t1F33#1 = phi(_t1F30,_t1F34)
          goto JOIN1F38
        JOIN1F38:  preds = [JOIN1F35,ASSIGN20FF]
          bool _t1F36#1 = phi(_t1F33,_t1F37)
          bool _t1F39#1 = BNot(_t1F36);
          if _t1F39 then goto SAVE1F3C else goto JOIN1F3E
        SAVE1F3C:  preds = [COND1F3B]
          self.rayN = rayN1EEC;
          active
          goto JOIN1F3E
        JOIN1F3E:  preds = [*ACTIVE1F3D,COND1F3B]
          bool _t1F3F#1 = BNot(analytical1ECE);
          if _t1F3F then goto ASSIGN1F47 else goto ASSIGN206E
        ASSIGN1F47:  preds = [COND1F41]
          int[84] femIndicies1F44#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F45#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F44);
          tensor[3,3,84] basisResult1F46#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1EF4);
          tensor[3,3] _t1F42#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F45,basisResult1F46,pos1EF4);
          (real[3] evals1F4C#2,tensor[3][3] E1F4D#2) = EigenVecs3x3(_t1F42);
          int _t1F4F#2 = 2;
          tensor[3] _t1F51#1 = Subscript<tensor[3][3]>(E1F4D,_t1F4F);
          real _t1F53#1 = Subscript<real[3]>(evals1F4C,_t1F4F);
          int _t1F55#2 = 1;
          tensor[3] _t1F57#1 = Subscript<tensor[3][3]>(E1F4D,_t1F55);
          real _t1F59#1 = Subscript<real[3]>(evals1F4C,_t1F55);
          tensor[3,3] op1_e3_l_101F5C#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1F51);
          tensor[3,3] op1_e3_l_111F5D#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1F57);
          tensor[3,3] op1_e3_l_121F5E#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1F53,op1_e3_l_101F5C);
          tensor[3,3] op1_e3_l_131F5F#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1F59,op1_e3_l_111F5D);
          tensor[3,3] op1_e3_l_141F60#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_121F5E,op1_e3_l_131F5F);
          tensor[3,84] basisResult1F66#1 = EvaluateBasis<BasisArray(3,84)>(pos1EF4);
          tensor[3] probe_l_151F61#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F45,basisResult1F66,pos1EF4);
          tensor[3,3] op1_e3_l_161F62#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_141F60);
          tensor[3] _t1F5B#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_151F61,op1_e3_l_161F62);
          goto JOIN1F75
        JOIN1F75:  preds = [ASSIGN1F72,ASSIGN20FC]
          tensor[3] step1F73#4 = phi(_t1F5B,_t1F74)
          real _t1F76#8 = 0.e0;
          real _t1F78#10 = 0.1e1;
          real _t1F7A#1 = 0.15e1;
          real op1_e3_l_71F7D#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1F73);
          real op1_e3_l_81F7E#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_71F7D);
          real op1_e3_l_91F7F#1 = λ(T0[])<Abs(T0)> (op1_e3_l_81F7E);
          real op1_e3_l_101F80#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1EBE,op1_e3_l_91F7F);
          real op1_e3_l_111F81#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_101F80);
          real op1_e3_l_121F82#2 = λ(T0[],T1[])<(T0 * T1)> (_t1F7A,op1_e3_l_111F81);
          real op1_e3_l_131F83#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1F76,_t1F78,op1_e3_l_121F82);
          real _t1F7C#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1EC6,op1_e3_l_131F83);
          bool _t1F8C#1 = EQ<real>(_t1F7C,_t1F76);
          if _t1F8C then goto SAVE1F8F else goto JOIN1F91
        SAVE1F8F:  preds = [COND1F8E]
          self.rayN = rayN1EEC;
          active
          goto JOIN1F91
        JOIN1F91:  preds = [*ACTIVE1F90,COND1F8E]
          real op1_e3_l_141F99#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1F78,_t1F76,op1_e3_l_121F82);
          real op1_e3_l_151F9A#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1EC6,op1_e3_l_141F99);
          real _t1F92#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_151F9A);
          real _t1FA4#1 = MathFn<pow>(_t1F92,alphaFix1EDC);
          bool _t1FA6#1 = NEQ<real>(phKs1EE4,_t1F76);
          if _t1FA6 then goto ASSIGN1FB5 else goto JOIN1FC4
        ASSIGN1FB5:  preds = [COND1FA8]
          tensor[3] op1_e3_l_61FAA#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1EDE,litwsp1ED4);
          real op1_e3_l_81FAB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_61FAA,op1_e3_l_61FAA);
          real op1_e3_l_91FAC#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81FAB);
          real op1_e3_l_121FAF#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81F7E);
          tensor[3] op1_e3_l_131FB0#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1F73,op1_e3_l_121FAF);
          tensor[3] op1_e3_l_141FB1#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_131FB0);
          real op1_e3_l_161FB2#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_91FAC);
          real op1_e3_l_171FB3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141FB1,op1_e3_l_61FAA);
          real op1_e3_l_181FB4#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_161FB2,op1_e3_l_171FB3);
          real _t1FA9#1 = λ(T0[])<Abs(T0)> (op1_e3_l_181FB4);
          real scomp1FC1#1 = MathFn<pow>(_t1FA9,phSp1EE6);
          goto JOIN1FC4
        JOIN1FC4:  preds = [ASSIGN1FC2,COND1FA8]
          real scomp1FC3#1 = phi(scomp1FC1,_t1F76)
          real cmin1FC5#3 = TensorIndex<tensor[2],[0]>(cminmax1ECC);
          real cmax1FC7#2 = TensorIndex<tensor[2],[1]>(cminmax1ECC);
          tensor[3] mcol1FC9#2 = <tensor[3]>[_t1F78,_t1F78,_t1F78];
          bool _t1FCB#1 = NEQ<real>(cmin1FC5,cmax1FC7);
          if _t1FCB then goto ASSIGN2169 else goto JOIN2005
        ASSIGN2169:  preds = [COND1FCD]
          tensor[3] _t1FCE#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (rayOrig1ED8,step1F73,op1_e3_l_51EF6);
          int[84] femIndicies1FDC#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1FDD#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1FDC);
          tensor[84] basisResult1FDE#1 = EvaluateBasis<BasisArray(84)>(_t1FCE);
          real probe_l_81FD5#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1EAA,_t1EAC,_t1EAE,_t1FCE,femDofs1FDD,basisResult1FDE,_t1FCE);
          real op1_e3_l_91FD6#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1FC5,probe_l_81FD5);
          real op1_e3_l_101FD7#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1FC5,cmax1FC7);
          real op1_e3_l_111FD8#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91FD6,op1_e3_l_101FD7);
          real op1_e3_l_121FD9#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1F76,_t1F78);
          real op1_e3_l_131FDA#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111FD8,op1_e3_l_121FD9);
          real _t1FD4#2 = λ(T0[],T1[])<(T0 + T1)> (_t1F76,op1_e3_l_131FDA);
          real Mtransform1FEB#2 = Transform<IMAGE1D<double[3]>>(cmap2140);
          real MxPos1FEC#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1FEB,_t1FD4);
          real Ttranslate1FED#1 = Translate<IMAGE1D<double[3]>>(cmap2140);
          real imgPos1FEE#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1FEC,Ttranslate1FED);
          real nd1FEF#2 = Floor<1>(imgPos1FEE);
          real f1FF0#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1FEE,nd1FEF);
          int n1FF1#1 = RealToInt<1>(nd1FEF);
          int idx1FF3#1 = n1FF1;
          tensor[3,2] ldvox1FF4#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap2140,idx1FF3);
          tensor[2] kernX_1FF5#1 = BuildPos<1>(f1FF0);
          tensor[2] kevalX_d0_1FF6#1 = EvalKernel<2,tent,0>(kernX_1FF5);
          tensor[3] mcol1FEA#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1EB4,_t1EB6,_t1FD4,Mtransform1FEB,ldvox1FF4,kevalX_d0_1FF6);
          goto JOIN2005
        JOIN2005:  preds = [ASSIGN2003,COND1FCD]
          tensor[3] mcol2004#1 = phi(mcol1FEA,mcol1FC9)
          real op1_e3_l_212009#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81F7E);
          tensor[3] op1_e3_l_22200A#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1F73,op1_e3_l_212009);
          tensor[3] op1_e3_l_23200B#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_22200A);
          real op1_e3_l_24200C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1ED4,op1_e3_l_23200B);
          real op1_e3_l_25200D#1 = λ(T0[])<(T0)^2> (op1_e3_l_24200C);
          real op1_e3_l_26200E#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1EE2,op1_e3_l_25200D);
          real op1_e3_l_282010#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1ED0,rayN1EEC);
          real op1_e3_l_292011#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1ED0,camFarVsp1ED2);
          real op1_e3_l_302012#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_282010,op1_e3_l_292011);
          tensor[3] op1_e3_l_312013#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1EC8,mcFar1ECA);
          tensor[3] op1_e3_l_322014#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_302012,op1_e3_l_312013);
          real op1_e3_l_332015#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1EE0,op1_e3_l_26200E);
          tensor[3] op1_e3_l_342016#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1EC8,op1_e3_l_322014);
          tensor[3] op1_e3_l_352017#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2004,op1_e3_l_332015,op1_e3_l_342016);
          tensor[3] op1_e3_l_362018#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1EE4,scomp1FC3,mcol1FC9);
          real op1_e3_l_372019#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,_t1FA4);
          tensor[3] op1_e3_l_38201A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_352017,op1_e3_l_362018);
          tensor[3] op1_e3_l_39201B#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1EEA,op1_e3_l_372019,op1_e3_l_38201A);
          tensor[3] rgb2006#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1EE8,op1_e3_l_39201B);
          real op1_e3_l_52034#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_372019);
          real transp2032#2 = λ(T0[],T1[])<(T0 * T1)> (transp1EEA,op1_e3_l_52034);
          bool _t2038#1 = LT<real>(transp2032,transp01EBC);
          if _t2038 then goto SAVE203B else goto JOIN2040
        SAVE203B:  preds = [COND203A]
          self.rayN = rayN1EEC;
          self.rgb = rgb2006;
          self.transp = _t1F76;
          stabilize
          goto JOIN2040
        JOIN2040:  preds = [*STABILIZE203E,COND203A]
          real transp203F#1 = phi(transp2032)
          self.rayN = rayN1EEC;
          self.rgb = rgb2006;
          self.transp = transp203F;
          active
        ASSIGN206E:  preds = [COND1F41]
          tensor[3,3] Mtransform2047#2 = Transform<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] MxPos2048#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (Mtransform2047,pos1EF4);
          tensor[3] Ttranslate2049#1 = Translate<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] imgPos204A#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (MxPos2048,Ttranslate2049);
          tensor[3] nd204B#2 = Floor<3>(imgPos204A);
          tensor[3] f204C#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (imgPos204A,nd204B);
          int[3] n204D#3 = RealToInt<3>(nd204B);
          tensor[3,3] P204E#3 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (Mtransform2047);
          int lit204F#3 = -1;
          int idx2050#1 = 0;
          int nX_2051#1 = Subscript<int[3]>(n204D,idx2050);
          int idx2052#2 = IAdd(nX_2051,lit204F);
          int idx2053#3 = 1;
          int nY_2054#1 = Subscript<int[3]>(n204D,idx2053);
          int idx2055#2 = IAdd(nY_2054,lit204F);
          int idx2056#3 = 2;
          int nZ_2057#1 = Subscript<int[3]>(n204D,idx2056);
          int idx2058#2 = IAdd(nZ_2057,lit204F);
          int[3] seq2059#1 = <int[3]>{idx2052,idx2055,idx2058};
          tensor[4,4,4] ldvox205A#1 = LoadVoxels<IMAGE3D<float[]>,4>(umm1EB0,seq2059);
          real vZ_205B#1 = TensorIndex<tensor[3],[2]>(f204C);
          tensor[4] kernZ_205C#3 = BuildPos<2>(vZ_205B);
          tensor[4] kevalZ_d0_205D#2 = EvalKernel<4,bspln3,0>(kernZ_205C);
          tensor[4] kevalZ_d1_205E#2 = EvalKernel<4,bspln3,1>(kernZ_205C);
          tensor[4] kevalZ_d2_205F#1 = EvalKernel<4,bspln3,2>(kernZ_205C);
          tensor[3,4] kconsZ_2060#1 = <tensor[3,4]>[kevalZ_d0_205D,kevalZ_d1_205E,kevalZ_d2_205F];
          real vY_2061#1 = TensorIndex<tensor[3],[1]>(f204C);
          tensor[4] kernY_2062#3 = BuildPos<2>(vY_2061);
          tensor[4] kevalY_d0_2063#2 = EvalKernel<4,bspln3,0>(kernY_2062);
          tensor[4] kevalY_d1_2064#2 = EvalKernel<4,bspln3,1>(kernY_2062);
          tensor[4] kevalY_d2_2065#1 = EvalKernel<4,bspln3,2>(kernY_2062);
          tensor[3,4] kconsY_2066#1 = <tensor[3,4]>[kevalY_d0_2063,kevalY_d1_2064,kevalY_d2_2065];
          real vX_2067#1 = TensorIndex<tensor[3],[0]>(f204C);
          tensor[4] kernX_2068#3 = BuildPos<2>(vX_2067);
          tensor[4] kevalX_d0_2069#2 = EvalKernel<4,bspln3,0>(kernX_2068);
          tensor[4] kevalX_d1_206A#2 = EvalKernel<4,bspln3,1>(kernX_2068);
          tensor[4] kevalX_d2_206B#1 = EvalKernel<4,bspln3,2>(kernX_2068);
          tensor[3,4] kconsX_206C#1 = <tensor[3,4]>[kevalX_d0_2069,kevalX_d1_206A,kevalX_d2_206B];
          tensor[3,3] TPP2046#1 = λ(V0(3)[],H1,H2,H3)<Σ(i2=~1..2)(i3=~1..2)(i4=~1..2)<((V0(2)[i2,i3,i4]# * H1^{δ_{'0',i0}δ_{'0',i1}}(1) * H2^{δ_{'1',i0}δ_{'1',i1}}(2) * H3^{δ_{'2',i0}δ_{'2',i1}}(3)))>(i2=~1..2)(i3=~1..2)(i4=~1..2)>_{3 3} (ldvox205A,kconsX_206C,kconsY_2066,kconsZ_2060);
          tensor[3,3] op1_e3_l_2206D#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T1_{i0,i2} * T0_{i1,i2}))>(i2=0..2)>_{3 3} (P204E,TPP2046);
          tensor[3,3] _t2045#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (P204E,op1_e3_l_2206D);
          (real[3] evals2097#2,tensor[3][3] E2098#2) = EigenVecs3x3(_t2045);
          tensor[3] _t209C#1 = Subscript<tensor[3][3]>(E2098,idx2056);
          real _t209E#1 = Subscript<real[3]>(evals2097,idx2056);
          tensor[3] _t20A2#1 = Subscript<tensor[3][3]>(E2098,idx2053);
          real _t20A4#1 = Subscript<real[3]>(evals2097,idx2053);
          tensor[3,3] op1_e3_l_920A6#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t209C);
          tensor[3,3] op1_e3_l_1020A7#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20A2);
          tensor[3,3] op1_e3_l_1120A8#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t209E,op1_e3_l_920A6);
          tensor[3,3] op1_e3_l_1220A9#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20A4,op1_e3_l_1020A7);
          tensor[3,3] op1_e3_l_1320AA#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1120A8,op1_e3_l_1220A9);
          int[3] seq20C0#1 = <int[3]>{idx2052,idx2055,idx2058};
          tensor[4,4,4] ldvox20C1#1 = LoadVoxels<IMAGE3D<float[]>,4>(umm1EB0,seq20C0);
          tensor[2,4] kconsZ_20C6#1 = <tensor[2,4]>[kevalZ_d0_205D,kevalZ_d1_205E];
          tensor[2,4] kconsY_20CB#1 = <tensor[2,4]>[kevalY_d0_2063,kevalY_d1_2064];
          tensor[2,4] kconsX_20D0#1 = <tensor[2,4]>[kevalX_d0_2069,kevalX_d1_206A];
          tensor[3] TPP20AD#1 = λ(V0(3)[],H1,H2,H3)<Σ(i1=~1..2)(i2=~1..2)(i3=~1..2)<((V0(2)[i1,i2,i3]# * H1^{δ_{'0',i0}}(1) * H2^{δ_{'1',i0}}(2) * H3^{δ_{'2',i0}}(3)))>(i1=~1..2)(i2=~1..2)(i3=~1..2)>_{3} (ldvox20C1,kconsX_20D0,kconsY_20CB,kconsZ_20C6);
          tensor[3] probe_l_1420AB#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T1_{i1} * T0_{i0,i1}))>(i1=0..2)>_{3} (P204E,TPP20AD);
          tensor[3,3] op1_e3_l_1520AC#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_1320AA);
          tensor[3] _t1F74#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_1420AB,op1_e3_l_1520AC);
          goto JOIN1F75
        ASSIGN20FD:  preds = [COND1F2D]
          bool _t1F31#1 = false;
          goto JOIN1F32
        ASSIGN20FE:  preds = [COND1F28]
          bool _t1F34#1 = false;
          goto JOIN1F35
        ASSIGN20FF:  preds = [COND1F00]
          bool _t1F37#1 = false;
          goto JOIN1F38
    end update
    method stabilize
        ENTRY2100:  preds = []
          tensor[4] rgba2101#1 = self.rgba;
          tensor[3] rgb2103#3 = self.rgb;
          real transp2105#2 = self.transp;
          real _t2107#2 = 0.1e1;
          bool _t2109#1 = LT<real>(transp2105,_t2107);
          if _t2109 then goto ASSIGN210D else goto JOIN2123
        ASSIGN210D:  preds = [COND210B]
          real aa210C#4 = λ(T0[],T1[])<(T0) - (T1)> (_t2107,transp2105);
          real _t210E#1 = TensorIndex<tensor[3],[0]>(rgb2103);
          real _t2110#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t210E,aa210C);
          real _t2114#1 = TensorIndex<tensor[3],[1]>(rgb2103);
          real _t2116#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2114,aa210C);
          real _t211A#1 = TensorIndex<tensor[3],[2]>(rgb2103);
          real _t211C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t211A,aa210C);
          tensor[4] rgba2120#1 = <tensor[4]>[_t2110,_t2116,_t211C,aa210C];
          goto JOIN2123
        JOIN2123:  preds = [ASSIGN2121,COND210B]
          tensor[4] rgba2122#1 = phi(rgba2120,rgba2101)
          self.rgba = rgba2122;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY2126:  preds = []
      int iresU2127#1 = globals.iresU1C6D;
      int iresV2129#1 = globals.iresV1C6E;
      int _t212B#2 = 0;
      int _t212D#2 = 1;
      int _t212F#1 = ISub(iresV2129,_t212D);
      int[] _t2131#1 = Range(_t212B,_t212F);
    FOREACH2134:  preds = [ASSIGN2132,NEXT213D]
      foreach (vi2133 in _t2131) on exit goto RETURN213E
      int _t2135#1 = ISub(iresU2127,_t212D);
      int[] _t2137#1 = Range(_t212B,_t2135);
    FOREACH213A:  preds = [ASSIGN2138,NEXT213C]
      foreach (ui2139 in _t2137) on exit goto NEXT213D
      new ray(ui2139,vi2133);
      goto FOREACH213A
    NEXT213D:  preds = [FOREACH213A]
      goto FOREACH2134
    RETURN213E:  preds = [FOREACH2134]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1C61 (block) = <no-default>
  input 0space0509_intermedateGlobal1C62 (space) = <no-default>
  input 0U050B_intermedateGlobal1C63 (U) = <no-default>
  input cellChoice1C64 (cellChoice) = <no-default>
  input cmap1C65 (cmap) = image("cmap.nrrd")
  input camEye1C66 (camEye) = <default>
  input camAt1C67 (camAt) = <default>
  input camUp1C68 (camUp) = <default>
  input camNear1C69 (camNear) = <default>
  input camFar1C6A (camFar) = <default>
  input camFOV1C6B (camFOV) = <default>
  input camOrtho1C6C (camOrtho) = <default>
  input iresU1C6D (iresU) = <default>
  input iresV1C6E (iresV) = <default>
  input rayStep1C6F (rayStep) = <default>
  input refStep1C70 (refStep) = <default>
  input transp01C71 (transp0) = <default>
  input thick1C72 (thick) = <default>
  input fStrTh1C73 (fStrTh) = <default>
  input fMaskTh1C74 (fMaskTh) = <default>
  input fBias1C75 (fBias) = <default>
  input maxAlpha1C76 (maxAlpha) = <default>
  input light1C77 (light) = <default>
  input phong1C78 (phong) = <default>
  input mcNear1C79 (mcNear) = <default>
  input mcFar1C7A (mcFar) = <default>
  input litdir1C7B (litdir) = <default>
  input cminmax1C7C (cminmax) = <default>
  input analytical1C7D (analytical) = <default>
  input umm1C7E (umm) = image("data.nrrd")
  global tensor[3] camN1C7F
  global tensor[3] camU1C80
  global tensor[3] camV1C81
  global real camDist1C82
  global real camVmax1C83
  global real camUmax1C84
  global real camNearVsp1C85
  global real camFarVsp1C86
  global tensor[3] litwsp1C87
  global int _t1C88
  global femData:Space _tX1C89
  global femData:FemFunc _tXX1C8A
  global image(IMAGE1D<double[3]>) img1C8C
  global kernel _tXXXX1C8D
## functions
## input initialization
  ENTRY1C8E:  preds = []
    real _t1C8F#13 = 0.e0;
    real _t1C91#1 = -0.2e1;
    tensor[3] camEye1C93#1 = <tensor[3]>[_t1C8F,_t1C91,_t1C8F];
    globals.camEye1C66 = camEye1C93;
    tensor[3] camAt1C96#1 = <tensor[3]>[_t1C8F,_t1C8F,_t1C8F];
    globals.camAt1C67 = camAt1C96;
    real _t1C99#5 = 0.1e1;
    tensor[3] camUp1C9B#1 = <tensor[3]>[_t1C8F,_t1C8F,_t1C99];
    globals.camUp1C68 = camUp1C9B;
    real camNear1C9E#1 = -0.4e1;
    globals.camNear1C69 = camNear1C9E;
    real camFar1CA1#1 = 0.4e1;
    globals.camFar1C6A = camFar1CA1;
    real camFOV1CA4#1 = 0.1e2;
    globals.camFOV1C6B = camFOV1CA4;
    bool camOrtho1CA7#2 = false;
    globals.camOrtho1C6C = camOrtho1CA7;
    int iresU1CAA#2 = 100;
    globals.iresU1C6D = iresU1CAA;
    globals.iresV1C6E = iresU1CAA;
    real rayStep1CAE#2 = 0.1e-3;
    globals.rayStep1C6F = rayStep1CAE;
    globals.refStep1C70 = rayStep1CAE;
    real transp01CB2#1 = 0.5e-2;
    globals.transp01C71 = transp01CB2;
    real thick1CB5#1 = 0.1e-1;
    globals.thick1C72 = thick1CB5;
    globals.fStrTh1C73 = _t1C8F;
    globals.fMaskTh1C74 = _t1C8F;
    real fBias1CBA#2 = 0.1e0;
    globals.fBias1C75 = fBias1CBA;
    globals.maxAlpha1C76 = _t1C99;
    globals.light1C77 = camOrtho1CA7;
    real _t1CBF#1 = 0.7e0;
    real _t1CC1#1 = 0.2e0;
    real _t1CC3#1 = 0.1e3;
    tensor[4] phong1CC5#1 = <tensor[4]>[fBias1CBA,_t1CBF,_t1CC1,_t1CC3];
    globals.phong1C78 = phong1CC5;
    tensor[3] mcNear1CC8#2 = <tensor[3]>[_t1C99,_t1C99,_t1C99];
    globals.mcNear1C79 = mcNear1CC8;
    globals.mcFar1C7A = mcNear1CC8;
    real _t1CCC#1 = -0.1e1;
    tensor[3] litdir1CCE#1 = <tensor[3]>[_t1C8F,_t1CCC,_t1C8F];
    globals.litdir1C7B = litdir1CCE;
    tensor[2] cminmax1CD1#1 = <tensor[2]>[_t1C8F,_t1C8F];
    globals.cminmax1C7C = cminmax1CD1;
    bool analytical1CD4#1 = true;
    globals.analytical1C7D = analytical1CD4;
    return
## global-variable initialization
  ENTRY1CD8:  preds = []
    femData:Mesh block1CD9#3 = globals.block1C61;
    femData:Space 0space0509_intermedateGlobal1CDB#1 = globals.0space0509_intermedateGlobal1C62;
    femData:FemFunc 0U050B_intermedateGlobal1CDD#1 = globals.0U050B_intermedateGlobal1C63;
    int cellChoice1CDF#1 = globals.cellChoice1C64;
    image(IMAGE1D<double[3]>) cmap1CE1#1 = globals.cmap1C65;
    tensor[3] camEye1CE3#1 = globals.camEye1C66;
    tensor[3] camAt1CE5#1 = globals.camAt1C67;
    tensor[3] camUp1CE7#1 = globals.camUp1C68;
    real camNear1CE9#1 = globals.camNear1C69;
    real camFar1CEB#1 = globals.camFar1C6A;
    real camFOV1CED#1 = globals.camFOV1C6B;
    int iresU1CEF#1 = globals.iresU1C6D;
    int iresV1CF1#1 = globals.iresV1C6E;
    tensor[3] litdir1CF3#2 = globals.litdir1C7B;
    int _t1CF7#1 = 0;
    int _t1CF9#1 = 1;
    int _t1CFB#1 = ExtractFemItem<int,NumCell(Mesh)>(block1CD9);
    int _t1CFD#1 = ISub(_t1CFB,_t1CF9);
    int[] _t1CFF#1 = Range(_t1CF7,_t1CFD);
    femData:MeshCell[] _t1D01#1 = <femData:MeshCell[]>{};
  FOREACH1D04:  preds = [ASSIGN1D02,NEXT1D0A]
    foreach (_t1D03 in _t1CFF) on exit goto ASSIGN1D0C
      femData:MeshCell[] _t1D08#2 = phi(_t1D01,_t1D07)
    femData:MeshCell _t1D05#1 = LoadFem<femData:MeshCell>(block1CD9,_t1D03);
    femData:MeshCell[] _t1D07#1 = Append<femData:MeshCell>(_t1D08,_t1D05);
    goto FOREACH1D04
  ASSIGN1D0C:  preds = [FOREACH1D04]
    femData:Space space1D0B#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal1CDB,block1CD9);
    femData:FemFunc U1D0D#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal1CDD,space1D0B);
    femData:MeshCell c11D0F#1 = Subscript<femData:MeshCell[]>(_t1D08,cellChoice1CDF);
    int _t1D11#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11D0F);
    femData:FuncCell _t1D13#2 = LoadFem<femData:FuncCell>(U1D0D,_t1D11);
    femData:FemFunc _t1D15#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1D13);
    femData:Space _t1D17#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1D15);
    int _t1D19#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1D13);
    kernel _t1D1B#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1D1D#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1CE1);
    tensor[3] op1_e3_l_41D20#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1CE5,camEye1CE3);
    real op1_e3_l_61D21#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D20,op1_e3_l_41D20);
    real op1_e3_l_71D22#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D21);
    real op1_e3_l_91D23#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D22);
    tensor[3] camN1D1F#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D20,op1_e3_l_91D23);
    globals.camN1C7F = camN1D1F;
    tensor[3,3] op1_e3_l_151D2E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1CE7);
    tensor[3] op1_e3_l_171D30#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D20,op1_e3_l_151D2E);
    real op1_e3_l_341D31#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171D30,op1_e3_l_171D30);
    real op1_e3_l_351D32#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91D23,op1_e3_l_91D23,op1_e3_l_341D31);
    real op1_e3_l_361D33#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351D32);
    tensor[3] op1_e3_l_371D34#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D23,op1_e3_l_171D30);
    real op1_e3_l_381D35#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361D33);
    tensor[3] camU1D2A#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371D34,op1_e3_l_381D35);
    globals.camU1C80 = camU1D2A;
    tensor[3,3] op1_e3_l_451D4D#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171D30);
    tensor[3] op1_e3_l_471D4E#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41D20,op1_e3_l_451D4D);
    tensor[3] op1_e3_l_501D50#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91D23,op1_e3_l_471D4E);
    tensor[3] camV1D43#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91D23,op1_e3_l_381D35,op1_e3_l_501D50);
    globals.camV1C81 = camV1D43;
    globals.camDist1C82 = op1_e3_l_71D22;
    real _t1D67#1 = 0.314159265358979323846264338327950288e1;
    real _t1D69#1 = 0.36e3;
    real op1_e3_l_51D6C#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1CED,_t1D67);
    real op1_e3_l_61D6D#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1D69,op1_e3_l_51D6C);
    real op1_e3_l_101D70#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61D6D);
    real camVmax1D6B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D70,op1_e3_l_71D22);
    globals.camVmax1C83 = camVmax1D6B;
    real _t1D7A#1 = IntToReal(iresU1CEF);
    real _t1D7C#1 = IntToReal(iresV1CF1);
    real op1_e3_l_141D85#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1D7A,op1_e3_l_101D70,op1_e3_l_71D22);
    real camUmax1D7E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1D7C,op1_e3_l_141D85);
    globals.camUmax1C84 = camUmax1D7E;
    real camNearVsp1D8F#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1CE9,op1_e3_l_71D22);
    globals.camNearVsp1C85 = camNearVsp1D8F;
    real camFarVsp1D98#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1CEB,op1_e3_l_71D22);
    globals.camFarVsp1C86 = camFarVsp1D98;
    tensor[3,3] _t1DA1#1 = <tensor[3,3]>[camU1D2A,camV1D43,camN1D1F];
    real op1_e3_l_31DA4#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1CF3);
    real op1_e3_l_41DA5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31DA4);
    real op1_e3_l_51DA6#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41DA5);
    tensor[3] op1_e3_l_61DA7#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1DA1,litdir1CF3);
    tensor[3] litwsp1DA3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51DA6,op1_e3_l_61DA7);
    globals.litwsp1C87 = litwsp1DA3;
    globals._t1C88 = _t1D19;
    globals._tX1C89 = _t1D17;
    globals._tXX1C8A = _t1D15;
    globals.img1C8C = img1D1D;
    globals._tXXXX1C8D = _t1D1B;
    return
## strand
  strand ray (int ui1DB7#1, int vi1DB8#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1DC9:  preds = []
        tensor[3] camEye1DCA#1 = globals.camEye1C66;
        bool camOrtho1DCC#2 = globals.camOrtho1C6C;
        int iresU1DCE#1 = globals.iresU1C6D;
        int iresV1DD0#1 = globals.iresV1C6E;
        real rayStep1DD2#1 = globals.rayStep1C6F;
        real refStep1DD4#1 = globals.refStep1C70;
        tensor[4] phong1DD6#4 = globals.phong1C78;
        tensor[3] camN1DD8#1 = globals.camN1C7F;
        tensor[3] camU1DDA#1 = globals.camU1C80;
        tensor[3] camV1DDC#1 = globals.camV1C81;
        real camDist1DDE#1 = globals.camDist1C82;
        real camVmax1DE0#2 = globals.camVmax1C83;
        real camUmax1DE2#2 = globals.camUmax1C84;
        real camNearVsp1DE4#1 = globals.camNearVsp1C85;
        real _t1DE6#5 = -0.5e0;
        real _t1DE8#1 = IntToReal(ui1DB7);
        real _t1DEA#1 = IntToReal(iresU1DCE);
        real _t1DEC#3 = 0.5e0;
        real op1_e3_l_61DEF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1DEA,_t1DEC);
        real op1_e3_l_71DF0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DE8);
        real op1_e3_l_81DF1#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_61DEF);
        real op1_e3_l_91DF2#2 = λ(T0[])<Neg(T0)> (camUmax1DE2);
        real op1_e3_l_101DF3#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71DF0,op1_e3_l_81DF1);
        real op1_e3_l_111DF4#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1DE2,op1_e3_l_91DF2);
        real op1_e3_l_131DF5#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101DF3,op1_e3_l_111DF4);
        real rayU1DEE#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91DF2,op1_e3_l_131DF5);
        real _t1DFE#1 = IntToReal(vi1DB8);
        real _t1E00#2 = IntToReal(iresV1DD0);
        real op1_e3_l_61E03#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E00,_t1DEC);
        real op1_e3_l_71E04#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,_t1DFE);
        real op1_e3_l_81E05#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_61E03);
        real op1_e3_l_91E06#3 = λ(T0[])<Neg(T0)> (camVmax1DE0);
        real op1_e3_l_101E07#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E04,op1_e3_l_81E05);
        real op1_e3_l_111E08#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1DE0,op1_e3_l_91E06);
        real op1_e3_l_131E09#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101E07,op1_e3_l_111E08);
        real rayV1E02#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E06,op1_e3_l_131E09);
        real op1_e3_l_231E1B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DEC,_t1E00);
        real op1_e3_l_251E1D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1DE6,op1_e3_l_231E1B);
        real op1_e3_l_271E1F#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71E04,op1_e3_l_251E1D);
        real op1_e3_l_301E21#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271E1F,op1_e3_l_111E08);
        real op1_e3_l_311E22#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91E06,op1_e3_l_301E21);
        tensor[3] op1_e3_l_321E23#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1DDA,rayU1DEE);
        tensor[3] op1_e3_l_331E24#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1DDC,op1_e3_l_311E22);
        tensor[3] UV1E12#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321E23,op1_e3_l_331E24);
        if camOrtho1DCC then goto JOIN1E3B else goto ASSIGN1EA7
      JOIN1E3B:  preds = [COND1E38,ASSIGN1EA8]
        tensor[3] _t1E39#1 = phi(UV1E12,_t1E3A)
        tensor[3] rayOrig1E3C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1DCA,_t1E39);
        if camOrtho1DCC then goto ASSIGN1E40 else goto ASSIGN2155
      ASSIGN1E40:  preds = [COND1E3E]
        real _t1E3F#3 = 0.e0;
        tensor[3] _t1E41#1 = <tensor[3]>[_t1E3F,_t1E3F,_t1E3F];
        goto JOIN1E45
      JOIN1E45:  preds = [ASSIGN1E42,ASSIGN2155]
        tensor[3] _t1E43#1 = phi(_t1E41,_t1E44)
        tensor[3] rayVec1E46#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1DD8,_t1E43);
        real op1_e3_l_61E4A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1E46,rayVec1E46);
        real op1_e3_l_71E4B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61E4A);
        real op1_e3_l_81E4C#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1DD2,op1_e3_l_71E4B);
        real alphaFix1E48#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1DD4,op1_e3_l_81E4C);
        real op1_e3_l_91E56#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71E4B);
        tensor[3] op1_e3_l_101E57#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1E46,op1_e3_l_91E56);
        tensor[3] eyeDir1E52#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101E57);
        real phKa1E5E#1 = TensorIndex<tensor[4],[0]>(phong1DD6);
        real phKd1E60#1 = TensorIndex<tensor[4],[1]>(phong1DD6);
        real phKs1E62#1 = TensorIndex<tensor[4],[2]>(phong1DD6);
        real phSp1E64#1 = TensorIndex<tensor[4],[3]>(phong1DD6);
        real _t1E66#8 = 0.e0;
        tensor[4] rgba1E68#1 = <tensor[4]>[_t1E66,_t1E66,_t1E66,_t1E66];
        tensor[3] rgb1E6A#1 = <tensor[3]>[_t1E66,_t1E66,_t1E66];
        real transp1E6C#1 = 0.1e1;
        self.rayU = rayU1DEE;
        self.rayV = rayV1E02;
        self.rayN = camNearVsp1DE4;
        self.UV = UV1E12;
        self.rayOrig = rayOrig1E3C;
        self.rayVec = rayVec1E46;
        self.alphaFix = alphaFix1E48;
        self.eyeDir = eyeDir1E52;
        self.phKa = phKa1E5E;
        self.phKd = phKd1E60;
        self.phKs = phKs1E62;
        self.phSp = phSp1E64;
        self.rgba = rgba1E68;
        self.raw = _t1E66;
        self.rgb = rgb1E6A;
        self.transp = transp1E6C;
        return
      ASSIGN2155:  preds = [COND1E3E]
        tensor[3] _t1E44#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1DDE,UV1E12);
        goto JOIN1E45
      ASSIGN1EA7:  preds = [COND1E38]
        real _t1EA6#3 = 0.e0;
        tensor[3] _t1E3A#1 = <tensor[3]>[_t1EA6,_t1EA6,_t1EA6];
        goto JOIN1E3B
    end state init
    method update
        ENTRY1EA9:  preds = []
          image(IMAGE1D<double[3]>) cmap2140#5 = globals.cmap1C65;
          int _t1EAA#8 = globals._t1C88;
          femData:Space _t1EAC#8 = globals._tX1C89;
          femData:FemFunc _t1EAE#8 = globals._tXX1C8A;
          image(IMAGE3D<float[]>) umm1EB0#4 = globals.umm1C7E;
          image(IMAGE1D<double[3]>) img1EB4#1 = globals.img1C8C;
          kernel _t1EB6#1 = globals._tXXXX1C8D;
          femData:Mesh block1EB8#1 = globals.block1C61;
          real rayStep1EBA#1 = globals.rayStep1C6F;
          real transp01EBC#1 = globals.transp01C71;
          real thick1EBE#1 = globals.thick1C72;
          real fStrTh1EC0#1 = globals.fStrTh1C73;
          real fMaskTh1EC2#1 = globals.fMaskTh1C74;
          real fBias1EC4#1 = globals.fBias1C75;
          real maxAlpha1EC6#2 = globals.maxAlpha1C76;
          tensor[3] mcNear1EC8#2 = globals.mcNear1C79;
          tensor[3] mcFar1ECA#1 = globals.mcFar1C7A;
          tensor[2] cminmax1ECC#2 = globals.cminmax1C7C;
          bool analytical1ECE#1 = globals.analytical1C7D;
          real camNearVsp1ED0#2 = globals.camNearVsp1C85;
          real camFarVsp1ED2#2 = globals.camFarVsp1C86;
          tensor[3] litwsp1ED4#2 = globals.litwsp1C87;
          real rayN1ED6#1 = self.rayN;
          tensor[3] rayOrig1ED8#2 = self.rayOrig;
          tensor[3] rayVec1EDA#1 = self.rayVec;
          real alphaFix1EDC#1 = self.alphaFix;
          tensor[3] eyeDir1EDE#1 = self.eyeDir;
          real phKa1EE0#1 = self.phKa;
          real phKd1EE2#1 = self.phKd;
          real phKs1EE4#2 = self.phKs;
          real phSp1EE6#1 = self.phSp;
          tensor[3] rgb1EE8#1 = self.rgb;
          real transp1EEA#2 = self.transp;
          real rayN1EEC#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1ED6,rayStep1EBA);
          bool _t1EEE#1 = GT<real>(rayN1EEC,camFarVsp1ED2);
          if _t1EEE then goto SAVE1EF1 else goto JOIN1EF3
        SAVE1EF1:  preds = [COND1EF0]
          self.rayN = rayN1EEC;
          stabilize
          goto JOIN1EF3
        JOIN1EF3:  preds = [*STABILIZE1EF2,COND1EF0]
          tensor[3] op1_e3_l_51EF6#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1EDA,rayN1EEC);
          tensor[3] pos1EF4#14 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1ED8,op1_e3_l_51EF6);
          femData:RefCell _t1EFA#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1EB8);
          real _t1EFC#1 = 0.1e-8;
          bool _t1EFE#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1EFA,pos1EF4,_t1EFC);
          if _t1EFE then goto ASSIGN1F06 else goto ASSIGN20FF
        ASSIGN1F06:  preds = [COND1F00]
          int[84] femIndicies1F03#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F04#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F03);
          tensor[3,3,84] basisResult1F05#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1EF4);
          tensor[3,3] _t1F01#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F04,basisResult1F05,pos1EF4);
          real[3] _t1F0B#1 = EigenVals3x3(_t1F01);
          int _t1F0E#1 = 1;
          real _t1F10#1 = Subscript<real[3]>(_t1F0B,_t1F0E);
          tensor[3,84] basisResult1F1B#1 = EvaluateBasis<BasisArray(3,84)>(pos1EF4);
          tensor[3] probe_l_61F13#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F04,basisResult1F1B,pos1EF4);
          real op1_e3_l_81F14#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61F13,probe_l_61F13);
          real op1_e3_l_91F15#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81F14);
          real op1_e3_l_101F16#1 = λ(T0[])<Neg(T0)> (_t1F10);
          real op1_e3_l_111F17#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1EC4,op1_e3_l_91F15);
          real _t1F12#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101F16,op1_e3_l_111F17);
          bool _t1F26#1 = GT<real>(_t1F12,fStrTh1EC0);
          if _t1F26 then goto ASSIGN1F2A else goto ASSIGN20FE
        ASSIGN1F2A:  preds = [COND1F28]
          real _t1F29#1 = 0.1e1;
          bool _t1F2B#1 = GTE<real>(_t1F29,fMaskTh1EC2);
          if _t1F2B then goto ASSIGN1F2F else goto ASSIGN20FD
        ASSIGN1F2F:  preds = [COND1F2D]
          bool _t1F2E#1 = true;
          goto JOIN1F32
        JOIN1F32:  preds = [ASSIGN1F2F,ASSIGN20FD]
          bool _t1F30#1 = phi(_t1F2E,_t1F31)
          goto JOIN1F35
        JOIN1F35:  preds = [JOIN1F32,ASSIGN20FE]
          bool _t1F33#1 = phi(_t1F30,_t1F34)
          goto JOIN1F38
        JOIN1F38:  preds = [JOIN1F35,ASSIGN20FF]
          bool _t1F36#1 = phi(_t1F33,_t1F37)
          bool _t1F39#1 = BNot(_t1F36);
          if _t1F39 then goto SAVE1F3C else goto JOIN1F3E
        SAVE1F3C:  preds = [COND1F3B]
          self.rayN = rayN1EEC;
          active
          goto JOIN1F3E
        JOIN1F3E:  preds = [*ACTIVE1F3D,COND1F3B]
          bool _t1F3F#1 = BNot(analytical1ECE);
          if _t1F3F then goto ASSIGN1F47 else goto ASSIGN206E
        ASSIGN1F47:  preds = [COND1F41]
          int[84] femIndicies1F44#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1F45#2 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1F44);
          tensor[3,3,84] basisResult1F46#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1EF4);
          tensor[3,3] _t1F42#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F45,basisResult1F46,pos1EF4);
          (real[3] evals1F4C#2,tensor[3][3] E1F4D#2) = EigenVecs3x3(_t1F42);
          int _t1F4F#2 = 2;
          tensor[3] _t1F51#1 = Subscript<tensor[3][3]>(E1F4D,_t1F4F);
          real _t1F53#1 = Subscript<real[3]>(evals1F4C,_t1F4F);
          int _t1F55#2 = 1;
          tensor[3] _t1F57#1 = Subscript<tensor[3][3]>(E1F4D,_t1F55);
          real _t1F59#1 = Subscript<real[3]>(evals1F4C,_t1F55);
          tensor[3,3] op1_e3_l_101F5C#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1F51);
          tensor[3,3] op1_e3_l_111F5D#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t1F57);
          tensor[3,3] op1_e3_l_121F5E#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1F53,op1_e3_l_101F5C);
          tensor[3,3] op1_e3_l_131F5F#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t1F59,op1_e3_l_111F5D);
          tensor[3,3] op1_e3_l_141F60#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_121F5E,op1_e3_l_131F5F);
          tensor[3,84] basisResult1F66#1 = EvaluateBasis<BasisArray(3,84)>(pos1EF4);
          tensor[3] probe_l_151F61#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1EAA,_t1EAC,_t1EAE,pos1EF4,femDofs1F45,basisResult1F66,pos1EF4);
          tensor[3,3] op1_e3_l_161F62#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_141F60);
          tensor[3] _t1F5B#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_151F61,op1_e3_l_161F62);
          goto JOIN1F75
        JOIN1F75:  preds = [ASSIGN1F72,ASSIGN20FC]
          tensor[3] step1F73#4 = phi(_t1F5B,_t1F74)
          real _t1F76#8 = 0.e0;
          real _t1F78#10 = 0.1e1;
          real _t1F7A#1 = 0.15e1;
          real op1_e3_l_71F7D#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (step1F73);
          real op1_e3_l_81F7E#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_71F7D);
          real op1_e3_l_91F7F#1 = λ(T0[])<Abs(T0)> (op1_e3_l_81F7E);
          real op1_e3_l_101F80#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1EBE,op1_e3_l_91F7F);
          real op1_e3_l_111F81#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_101F80);
          real op1_e3_l_121F82#2 = λ(T0[],T1[])<(T0 * T1)> (_t1F7A,op1_e3_l_111F81);
          real op1_e3_l_131F83#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1F76,_t1F78,op1_e3_l_121F82);
          real _t1F7C#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1EC6,op1_e3_l_131F83);
          bool _t1F8C#1 = EQ<real>(_t1F7C,_t1F76);
          if _t1F8C then goto SAVE1F8F else goto JOIN1F91
        SAVE1F8F:  preds = [COND1F8E]
          self.rayN = rayN1EEC;
          active
          goto JOIN1F91
        JOIN1F91:  preds = [*ACTIVE1F90,COND1F8E]
          real op1_e3_l_141F99#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1F78,_t1F76,op1_e3_l_121F82);
          real op1_e3_l_151F9A#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1EC6,op1_e3_l_141F99);
          real _t1F92#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_151F9A);
          real _t1FA4#1 = MathFn<pow>(_t1F92,alphaFix1EDC);
          bool _t1FA6#1 = NEQ<real>(phKs1EE4,_t1F76);
          if _t1FA6 then goto ASSIGN1FB5 else goto JOIN1FC4
        ASSIGN1FB5:  preds = [COND1FA8]
          tensor[3] op1_e3_l_61FAA#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1EDE,litwsp1ED4);
          real op1_e3_l_81FAB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_61FAA,op1_e3_l_61FAA);
          real op1_e3_l_91FAC#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81FAB);
          real op1_e3_l_121FAF#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81F7E);
          tensor[3] op1_e3_l_131FB0#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1F73,op1_e3_l_121FAF);
          tensor[3] op1_e3_l_141FB1#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_131FB0);
          real op1_e3_l_161FB2#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_91FAC);
          real op1_e3_l_171FB3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141FB1,op1_e3_l_61FAA);
          real op1_e3_l_181FB4#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_161FB2,op1_e3_l_171FB3);
          real _t1FA9#1 = λ(T0[])<Abs(T0)> (op1_e3_l_181FB4);
          real scomp1FC1#1 = MathFn<pow>(_t1FA9,phSp1EE6);
          goto JOIN1FC4
        JOIN1FC4:  preds = [ASSIGN1FC2,COND1FA8]
          real scomp1FC3#1 = phi(scomp1FC1,_t1F76)
          real cmin1FC5#3 = TensorIndex<tensor[2],[0]>(cminmax1ECC);
          real cmax1FC7#2 = TensorIndex<tensor[2],[1]>(cminmax1ECC);
          tensor[3] mcol1FC9#2 = <tensor[3]>[_t1F78,_t1F78,_t1F78];
          bool _t1FCB#1 = NEQ<real>(cmin1FC5,cmax1FC7);
          if _t1FCB then goto ASSIGN2169 else goto JOIN2005
        ASSIGN2169:  preds = [COND1FCD]
          tensor[3] _t1FCE#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (rayOrig1ED8,step1F73,op1_e3_l_51EF6);
          int[84] femIndicies1FDC#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1EAC,_t1EAA);
          tensor[84] femDofs1FDD#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1EAE,femIndicies1FDC);
          tensor[84] basisResult1FDE#1 = EvaluateBasis<BasisArray(84)>(_t1FCE);
          real probe_l_81FD5#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1EAA,_t1EAC,_t1EAE,_t1FCE,femDofs1FDD,basisResult1FDE,_t1FCE);
          real op1_e3_l_91FD6#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1FC5,probe_l_81FD5);
          real op1_e3_l_101FD7#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1FC5,cmax1FC7);
          real op1_e3_l_111FD8#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91FD6,op1_e3_l_101FD7);
          real op1_e3_l_121FD9#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1F76,_t1F78);
          real op1_e3_l_131FDA#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111FD8,op1_e3_l_121FD9);
          real _t1FD4#2 = λ(T0[],T1[])<(T0 + T1)> (_t1F76,op1_e3_l_131FDA);
          real Mtransform1FEB#2 = Transform<IMAGE1D<double[3]>>(cmap2140);
          real MxPos1FEC#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1FEB,_t1FD4);
          real Ttranslate1FED#1 = Translate<IMAGE1D<double[3]>>(cmap2140);
          real imgPos1FEE#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1FEC,Ttranslate1FED);
          real nd1FEF#2 = Floor<1>(imgPos1FEE);
          real f1FF0#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1FEE,nd1FEF);
          int n1FF1#1 = RealToInt<1>(nd1FEF);
          int idx1FF3#3 = n1FF1;
          bool isInside2175#1 = IndexInside<IMAGE1D<double[3]>,2>(idx1FF3,cmap2140);
          if isInside2175 then goto ASSIGN2176 else goto ASSIGN2177
        ASSIGN2176:  preds = [COND2179]
          tensor[3,2] ldvox2173#1 = LoadVoxels<IMAGE1D<double[3]>,2>(cmap2140,idx1FF3);
          goto JOIN217A
        JOIN217A:  preds = [ASSIGN2176,ASSIGN2177]
          tensor[3,2] ldvox1FF4#1 = phi(ldvox2173,ldvox2174)
          tensor[2] kernX_1FF5#1 = BuildPos<1>(f1FF0);
          tensor[2] kevalX_d0_1FF6#1 = EvalKernel<2,tent,0>(kernX_1FF5);
          tensor[3] mcol1FEA#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1EB4,_t1EB6,_t1FD4,Mtransform1FEB,ldvox1FF4,kevalX_d0_1FF6);
          goto JOIN2005
        JOIN2005:  preds = [ASSIGN2003,COND1FCD]
          tensor[3] mcol2004#1 = phi(mcol1FEA,mcol1FC9)
          real op1_e3_l_212009#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_81F7E);
          tensor[3] op1_e3_l_22200A#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (step1F73,op1_e3_l_212009);
          tensor[3] op1_e3_l_23200B#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_22200A);
          real op1_e3_l_24200C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1ED4,op1_e3_l_23200B);
          real op1_e3_l_25200D#1 = λ(T0[])<(T0)^2> (op1_e3_l_24200C);
          real op1_e3_l_26200E#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1EE2,op1_e3_l_25200D);
          real op1_e3_l_282010#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1ED0,rayN1EEC);
          real op1_e3_l_292011#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1ED0,camFarVsp1ED2);
          real op1_e3_l_302012#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_282010,op1_e3_l_292011);
          tensor[3] op1_e3_l_312013#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1EC8,mcFar1ECA);
          tensor[3] op1_e3_l_322014#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_302012,op1_e3_l_312013);
          real op1_e3_l_332015#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1EE0,op1_e3_l_26200E);
          tensor[3] op1_e3_l_342016#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1EC8,op1_e3_l_322014);
          tensor[3] op1_e3_l_352017#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2004,op1_e3_l_332015,op1_e3_l_342016);
          tensor[3] op1_e3_l_362018#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1EE4,scomp1FC3,mcol1FC9);
          real op1_e3_l_372019#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,_t1FA4);
          tensor[3] op1_e3_l_38201A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_352017,op1_e3_l_362018);
          tensor[3] op1_e3_l_39201B#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1EEA,op1_e3_l_372019,op1_e3_l_38201A);
          tensor[3] rgb2006#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1EE8,op1_e3_l_39201B);
          real op1_e3_l_52034#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1F78,op1_e3_l_372019);
          real transp2032#2 = λ(T0[],T1[])<(T0 * T1)> (transp1EEA,op1_e3_l_52034);
          bool _t2038#1 = LT<real>(transp2032,transp01EBC);
          if _t2038 then goto SAVE203B else goto JOIN2040
        SAVE203B:  preds = [COND203A]
          self.rayN = rayN1EEC;
          self.rgb = rgb2006;
          self.transp = _t1F76;
          stabilize
          goto JOIN2040
        JOIN2040:  preds = [*STABILIZE203E,COND203A]
          real transp203F#1 = phi(transp2032)
          self.rayN = rayN1EEC;
          self.rgb = rgb2006;
          self.transp = transp203F;
          active
        ASSIGN2177:  preds = [COND2179]
          tensor[3,2] ldvox2174#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap2140,idx1FF3);
          goto JOIN217A
        ASSIGN206E:  preds = [COND1F41]
          tensor[3,3] Mtransform2047#2 = Transform<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] MxPos2048#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (Mtransform2047,pos1EF4);
          tensor[3] Ttranslate2049#1 = Translate<IMAGE3D<float[]>>(umm1EB0);
          tensor[3] imgPos204A#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (MxPos2048,Ttranslate2049);
          tensor[3] nd204B#2 = Floor<3>(imgPos204A);
          tensor[3] f204C#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (imgPos204A,nd204B);
          int[3] n204D#3 = RealToInt<3>(nd204B);
          tensor[3,3] P204E#3 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (Mtransform2047);
          int lit204F#3 = -1;
          int idx2050#1 = 0;
          int nX_2051#1 = Subscript<int[3]>(n204D,idx2050);
          int idx2052#2 = IAdd(nX_2051,lit204F);
          int idx2053#3 = 1;
          int nY_2054#1 = Subscript<int[3]>(n204D,idx2053);
          int idx2055#2 = IAdd(nY_2054,lit204F);
          int idx2056#3 = 2;
          int nZ_2057#1 = Subscript<int[3]>(n204D,idx2056);
          int idx2058#2 = IAdd(nZ_2057,lit204F);
          int[3] seq2059#1 = <int[3]>{idx2052,idx2055,idx2058};
          tensor[4,4,4] ldvox205A#1 = LoadVoxels<IMAGE3D<float[]>,4>(umm1EB0,seq2059);
          real vZ_205B#1 = TensorIndex<tensor[3],[2]>(f204C);
          tensor[4] kernZ_205C#3 = BuildPos<2>(vZ_205B);
          tensor[4] kevalZ_d0_205D#2 = EvalKernel<4,bspln3,0>(kernZ_205C);
          tensor[4] kevalZ_d1_205E#2 = EvalKernel<4,bspln3,1>(kernZ_205C);
          tensor[4] kevalZ_d2_205F#1 = EvalKernel<4,bspln3,2>(kernZ_205C);
          tensor[3,4] kconsZ_2060#1 = <tensor[3,4]>[kevalZ_d0_205D,kevalZ_d1_205E,kevalZ_d2_205F];
          real vY_2061#1 = TensorIndex<tensor[3],[1]>(f204C);
          tensor[4] kernY_2062#3 = BuildPos<2>(vY_2061);
          tensor[4] kevalY_d0_2063#2 = EvalKernel<4,bspln3,0>(kernY_2062);
          tensor[4] kevalY_d1_2064#2 = EvalKernel<4,bspln3,1>(kernY_2062);
          tensor[4] kevalY_d2_2065#1 = EvalKernel<4,bspln3,2>(kernY_2062);
          tensor[3,4] kconsY_2066#1 = <tensor[3,4]>[kevalY_d0_2063,kevalY_d1_2064,kevalY_d2_2065];
          real vX_2067#1 = TensorIndex<tensor[3],[0]>(f204C);
          tensor[4] kernX_2068#3 = BuildPos<2>(vX_2067);
          tensor[4] kevalX_d0_2069#2 = EvalKernel<4,bspln3,0>(kernX_2068);
          tensor[4] kevalX_d1_206A#2 = EvalKernel<4,bspln3,1>(kernX_2068);
          tensor[4] kevalX_d2_206B#1 = EvalKernel<4,bspln3,2>(kernX_2068);
          tensor[3,4] kconsX_206C#1 = <tensor[3,4]>[kevalX_d0_2069,kevalX_d1_206A,kevalX_d2_206B];
          tensor[3,3] TPP2046#1 = λ(V0(3)[],H1,H2,H3)<Σ(i2=~1..2)(i3=~1..2)(i4=~1..2)<((V0(2)[i2,i3,i4]# * H1^{δ_{'0',i0}δ_{'0',i1}}(1) * H2^{δ_{'1',i0}δ_{'1',i1}}(2) * H3^{δ_{'2',i0}δ_{'2',i1}}(3)))>(i2=~1..2)(i3=~1..2)(i4=~1..2)>_{3 3} (ldvox205A,kconsX_206C,kconsY_2066,kconsZ_2060);
          tensor[3,3] op1_e3_l_2206D#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T1_{i0,i2} * T0_{i1,i2}))>(i2=0..2)>_{3 3} (P204E,TPP2046);
          tensor[3,3] _t2045#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (P204E,op1_e3_l_2206D);
          (real[3] evals2097#2,tensor[3][3] E2098#2) = EigenVecs3x3(_t2045);
          tensor[3] _t209C#1 = Subscript<tensor[3][3]>(E2098,idx2056);
          real _t209E#1 = Subscript<real[3]>(evals2097,idx2056);
          tensor[3] _t20A2#1 = Subscript<tensor[3][3]>(E2098,idx2053);
          real _t20A4#1 = Subscript<real[3]>(evals2097,idx2053);
          tensor[3,3] op1_e3_l_920A6#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t209C);
          tensor[3,3] op1_e3_l_1020A7#1 = λ(T0[3])<(T0_{i0} * T0_{i1})>_{3 3} (_t20A2);
          tensor[3,3] op1_e3_l_1120A8#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t209E,op1_e3_l_920A6);
          tensor[3,3] op1_e3_l_1220A9#1 = λ(T0[],T1[3 3])<(T1_{i0,i1}) / ( T0)>_{3 3} (_t20A4,op1_e3_l_1020A7);
          tensor[3,3] op1_e3_l_1320AA#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1120A8,op1_e3_l_1220A9);
          int[3] seq20C0#1 = <int[3]>{idx2052,idx2055,idx2058};
          tensor[4,4,4] ldvox20C1#1 = LoadVoxels<IMAGE3D<float[]>,4>(umm1EB0,seq20C0);
          tensor[2,4] kconsZ_20C6#1 = <tensor[2,4]>[kevalZ_d0_205D,kevalZ_d1_205E];
          tensor[2,4] kconsY_20CB#1 = <tensor[2,4]>[kevalY_d0_2063,kevalY_d1_2064];
          tensor[2,4] kconsX_20D0#1 = <tensor[2,4]>[kevalX_d0_2069,kevalX_d1_206A];
          tensor[3] TPP20AD#1 = λ(V0(3)[],H1,H2,H3)<Σ(i1=~1..2)(i2=~1..2)(i3=~1..2)<((V0(2)[i1,i2,i3]# * H1^{δ_{'0',i0}}(1) * H2^{δ_{'1',i0}}(2) * H3^{δ_{'2',i0}}(3)))>(i1=~1..2)(i2=~1..2)(i3=~1..2)>_{3} (ldvox20C1,kconsX_20D0,kconsY_20CB,kconsZ_20C6);
          tensor[3] probe_l_1420AB#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T1_{i1} * T0_{i0,i1}))>(i1=0..2)>_{3} (P204E,TPP20AD);
          tensor[3,3] op1_e3_l_1520AC#1 = λ(T0[3 3])<Neg(T0_{i0,i1})>_{3 3} (op1_e3_l_1320AA);
          tensor[3] _t1F74#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (probe_l_1420AB,op1_e3_l_1520AC);
          goto JOIN1F75
        ASSIGN20FD:  preds = [COND1F2D]
          bool _t1F31#1 = false;
          goto JOIN1F32
        ASSIGN20FE:  preds = [COND1F28]
          bool _t1F34#1 = false;
          goto JOIN1F35
        ASSIGN20FF:  preds = [COND1F00]
          bool _t1F37#1 = false;
          goto JOIN1F38
    end update
    method stabilize
        ENTRY2100:  preds = []
          tensor[4] rgba2101#1 = self.rgba;
          tensor[3] rgb2103#3 = self.rgb;
          real transp2105#2 = self.transp;
          real _t2107#2 = 0.1e1;
          bool _t2109#1 = LT<real>(transp2105,_t2107);
          if _t2109 then goto ASSIGN210D else goto JOIN2123
        ASSIGN210D:  preds = [COND210B]
          real aa210C#4 = λ(T0[],T1[])<(T0) - (T1)> (_t2107,transp2105);
          real _t210E#1 = TensorIndex<tensor[3],[0]>(rgb2103);
          real _t2110#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t210E,aa210C);
          real _t2114#1 = TensorIndex<tensor[3],[1]>(rgb2103);
          real _t2116#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2114,aa210C);
          real _t211A#1 = TensorIndex<tensor[3],[2]>(rgb2103);
          real _t211C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t211A,aa210C);
          tensor[4] rgba2120#1 = <tensor[4]>[_t2110,_t2116,_t211C,aa210C];
          goto JOIN2123
        JOIN2123:  preds = [ASSIGN2121,COND210B]
          tensor[4] rgba2122#1 = phi(rgba2120,rgba2101)
          self.rgba = rgba2122;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY2126:  preds = []
      int iresU2127#1 = globals.iresU1C6D;
      int iresV2129#1 = globals.iresV1C6E;
      int _t212B#2 = 0;
      int _t212D#2 = 1;
      int _t212F#1 = ISub(iresV2129,_t212D);
      int[] _t2131#1 = Range(_t212B,_t212F);
    FOREACH2134:  preds = [ASSIGN2132,NEXT213D]
      foreach (vi2133 in _t2131) on exit goto RETURN213E
      int _t2135#1 = ISub(iresU2127,_t212D);
      int[] _t2137#1 = Range(_t212B,_t2135);
    FOREACH213A:  preds = [ASSIGN2138,NEXT213C]
      foreach (ui2139 in _t2137) on exit goto NEXT213D
      new ray(ui2139,vi2133);
      goto FOREACH213A
    NEXT213D:  preds = [FOREACH213A]
      goto FOREACH2134
    RETURN213E:  preds = [FOREACH2134]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block217B (block) = <no-default>
  input 0space0509_intermedateGlobal217C (space) = <no-default>
  input 0U050B_intermedateGlobal217D (U) = <no-default>
  input cellChoice217E (cellChoice) = <no-default>
  input cmap217F (cmap) = image("cmap.nrrd")
  input camEye2180 (camEye) = <default>
  input camAt2181 (camAt) = <default>
  input camUp2182 (camUp) = <default>
  input camNear2183 (camNear) = <default>
  input camFar2184 (camFar) = <default>
  input camFOV2185 (camFOV) = <default>
  input camOrtho2186 (camOrtho) = <default>
  input iresU2187 (iresU) = <default>
  input iresV2188 (iresV) = <default>
  input rayStep2189 (rayStep) = <default>
  input refStep218A (refStep) = <default>
  input transp0218B (transp0) = <default>
  input thick218C (thick) = <default>
  input fStrTh218D (fStrTh) = <default>
  input fMaskTh218E (fMaskTh) = <default>
  input fBias218F (fBias) = <default>
  input maxAlpha2190 (maxAlpha) = <default>
  input light2191 (light) = <default>
  input phong2192 (phong) = <default>
  input mcNear2193 (mcNear) = <default>
  input mcFar2194 (mcFar) = <default>
  input litdir2195 (litdir) = <default>
  input cminmax2196 (cminmax) = <default>
  input analytical2197 (analytical) = <default>
  input umm2198 (umm) = image("data.nrrd")
  global tensor[3] camN2199
  global tensor[3] camU219A
  global tensor[3] camV219B
  global real camDist219C
  global real camVmax219D
  global real camUmax219E
  global real camNearVsp219F
  global real camFarVsp21A0
  global tensor[3] litwsp21A1
  global int _t21A2
  global femData:Space _tX21A3
  global femData:FemFunc _tXX21A4
  global image(IMAGE1D<double[3]>) img21A5
  global int _tXXXX21A6
## functions
## input initialization
  ENTRY21A7:  preds = []
    real _t21A8#13 = 0.e0;
    real _t21AA#1 = -0.2e1;
    tensor[3] camEye21AC#1 = <tensor[3]>[_t21A8,_t21AA,_t21A8];
    globals.camEye2180 = camEye21AC;
    tensor[3] camAt21AF#1 = <tensor[3]>[_t21A8,_t21A8,_t21A8];
    globals.camAt2181 = camAt21AF;
    real _t21B2#5 = 0.1e1;
    tensor[3] camUp21B4#1 = <tensor[3]>[_t21A8,_t21A8,_t21B2];
    globals.camUp2182 = camUp21B4;
    real camNear21B7#1 = -0.4e1;
    globals.camNear2183 = camNear21B7;
    real camFar21BA#1 = 0.4e1;
    globals.camFar2184 = camFar21BA;
    real camFOV21BD#1 = 0.1e2;
    globals.camFOV2185 = camFOV21BD;
    bool camOrtho21C0#2 = false;
    globals.camOrtho2186 = camOrtho21C0;
    int iresU21C3#2 = 100;
    globals.iresU2187 = iresU21C3;
    globals.iresV2188 = iresU21C3;
    real rayStep21C7#2 = 0.1e-3;
    globals.rayStep2189 = rayStep21C7;
    globals.refStep218A = rayStep21C7;
    real transp021CB#1 = 0.5e-2;
    globals.transp0218B = transp021CB;
    real thick21CE#1 = 0.1e-1;
    globals.thick218C = thick21CE;
    globals.fStrTh218D = _t21A8;
    globals.fMaskTh218E = _t21A8;
    real fBias21D3#2 = 0.1e0;
    globals.fBias218F = fBias21D3;
    globals.maxAlpha2190 = _t21B2;
    globals.light2191 = camOrtho21C0;
    real _t21D8#1 = 0.7e0;
    real _t21DA#1 = 0.2e0;
    real _t21DC#1 = 0.1e3;
    tensor[4] phong21DE#1 = <tensor[4]>[fBias21D3,_t21D8,_t21DA,_t21DC];
    globals.phong2192 = phong21DE;
    tensor[3] mcNear21E1#2 = <tensor[3]>[_t21B2,_t21B2,_t21B2];
    globals.mcNear2193 = mcNear21E1;
    globals.mcFar2194 = mcNear21E1;
    real _t21E5#1 = -0.1e1;
    tensor[3] litdir21E7#1 = <tensor[3]>[_t21A8,_t21E5,_t21A8];
    globals.litdir2195 = litdir21E7;
    tensor[2] cminmax21EA#1 = <tensor[2]>[_t21A8,_t21A8];
    globals.cminmax2196 = cminmax21EA;
    bool analytical21ED#1 = true;
    globals.analytical2197 = analytical21ED;
    return
## global-variable initialization
  ENTRY21F1:  preds = []
    femData:Mesh block21F2#3 = globals.block217B;
    femData:Space 0space0509_intermedateGlobal21F4#1 = globals.0space0509_intermedateGlobal217C;
    femData:FemFunc 0U050B_intermedateGlobal21F6#1 = globals.0U050B_intermedateGlobal217D;
    int cellChoice21F8#1 = globals.cellChoice217E;
    image(IMAGE1D<double[3]>) cmap21FA#1 = globals.cmap217F;
    tensor[3] camEye21FC#1 = globals.camEye2180;
    tensor[3] camAt21FE#1 = globals.camAt2181;
    tensor[3] camUp2200#3 = globals.camUp2182;
    real camNear2202#1 = globals.camNear2183;
    real camFar2204#1 = globals.camFar2184;
    real camFOV2206#1 = globals.camFOV2185;
    int iresU2208#1 = globals.iresU2187;
    int iresV220A#1 = globals.iresV2188;
    tensor[3] litdir220C#5 = globals.litdir2195;
    int _t220E#1 = 0;
    int _t2210#1 = 1;
    int _t2212#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F2);
    int _t2214#1 = ISub(_t2212,_t2210);
    int[] _t2216#1 = Range(_t220E,_t2214);
    femData:MeshCell[] _t2218#1 = <femData:MeshCell[]>{};
  FOREACH221B:  preds = [ASSIGN2219,NEXT2221]
    foreach (_t221A in _t2216) on exit goto ASSIGN2223
      femData:MeshCell[] _t221F#2 = phi(_t2218,_t221E)
    femData:MeshCell _t221C#1 = LoadFem<femData:MeshCell>(block21F2,_t221A);
    femData:MeshCell[] _t221E#1 = Append<femData:MeshCell>(_t221F,_t221C);
    goto FOREACH221B
  ASSIGN2223:  preds = [FOREACH221B]
    femData:Space space2222#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F4,block21F2);
    femData:FemFunc U2224#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F6,space2222);
    femData:MeshCell c12226#1 = Subscript<femData:MeshCell[]>(_t221F,cellChoice21F8);
    int _t2228#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12226);
    femData:FuncCell _t222A#2 = LoadFem<femData:FuncCell>(U2224,_t2228);
    femData:FemFunc _t222C#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t222A);
    femData:Space _t222E#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222C);
    int _t2230#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t222A);
    int _t2232#1 = 0;
    image(IMAGE1D<double[3]>) img2234#1 = cmap21FA;
    tensor[3] op1_e3_l_42236#9 = VSub<3>(camAt21FE,camEye21FC);
    real op1_e3_l_62239#1 = VDot<3>(op1_e3_l_42236,op1_e3_l_42236);
    real op1_e3_l_7223C#6 = Sqrt(op1_e3_l_62239);
    real realLit2240#1 = 0.1e1;
    real op1_e3_l_9223F#6 = RDiv(realLit2240,op1_e3_l_7223C);
    tensor[3] camN2244#2 = VScale<3>(op1_e3_l_9223F,op1_e3_l_42236);
    globals.camN2199 = camN2244;
    real realLit2249#3 = 0.e0;
    real r224A#3 = TensorIndex<tensor[3],[0]>(camUp2200);
    real r224B#3 = RMul(realLit2249,r224A);
    real r224C#3 = TensorIndex<tensor[3],[1]>(camUp2200);
    real r224D#3 = RMul(realLit2249,r224C);
    real r224E#3 = TensorIndex<tensor[3],[2]>(camUp2200);
    real r224F#5 = RMul(realLit2249,r224E);
    real r2250#3 = RAdd(r224B,r224D);
    real r2251#3 = RAdd(r2250,r224F);
    real realLit2252#3 = 0.1e1;
    real r2253#1 = RMul(realLit2252,r224E);
    real r2254#1 = RAdd(r2250,r2253);
    real realLit2255#3 = -0.1e1;
    real r2256#1 = RMul(realLit2255,r224C);
    real r2257#1 = RAdd(r224B,r2256);
    real r2258#1 = RAdd(r2257,r224F);
    tensor[3] tensor2259#1 = <tensor[3]>[r2251,r2254,r2258];
    real r225A#1 = RMul(realLit2255,r224E);
    real r225B#1 = RAdd(r2250,r225A);
    real r225C#1 = RMul(realLit2252,r224A);
    real r225D#1 = RAdd(r225C,r224D);
    real r225E#1 = RAdd(r225D,r224F);
    tensor[3] tensor225F#1 = <tensor[3]>[r225B,r2251,r225E];
    real r2260#1 = RMul(realLit2252,r224C);
    real r2261#1 = RAdd(r224B,r2260);
    real r2262#1 = RAdd(r2261,r224F);
    real r2263#1 = RMul(realLit2255,r224A);
    real r2264#1 = RAdd(r2263,r224D);
    real r2265#1 = RAdd(r2264,r224F);
    tensor[3] tensor2266#1 = <tensor[3]>[r2262,r2265,r2251];
    tensor[3,3] op1_e3_l_152248#3 = <tensor[3,3]>[tensor2259,tensor225F,tensor2266];
    tensor[3] projParam2288#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_152248);
    real vdot2289#1 = VDot<3>(op1_e3_l_42236,projParam2288);
    tensor[3] projParam228A#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_152248);
    real vdot228B#1 = VDot<3>(op1_e3_l_42236,projParam228A);
    tensor[3] projParam228C#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_152248);
    real vdot228D#1 = VDot<3>(op1_e3_l_42236,projParam228C);
    tensor[3] op1_e3_l_172287#6 = <tensor[3]>[vdot2289,vdot228B,vdot228D];
    real op1_e3_l_342296#1 = VDot<3>(op1_e3_l_172287,op1_e3_l_172287);
    real r229A#1 = RMul(op1_e3_l_9223F,op1_e3_l_9223F);
    real op1_e3_l_352299#1 = RMul(r229A,op1_e3_l_342296);
    real op1_e3_l_36229E#1 = Sqrt(op1_e3_l_352299);
    tensor[3] op1_e3_l_3722A1#1 = VScale<3>(op1_e3_l_9223F,op1_e3_l_172287);
    real realLit22A5#1 = 0.1e1;
    real op1_e3_l_3822A4#2 = RDiv(realLit22A5,op1_e3_l_36229E);
    tensor[3] camU22A9#2 = VScale<3>(op1_e3_l_3822A4,op1_e3_l_3722A1);
    globals.camU219A = camU22A9;
    real realLit22AE#3 = 0.e0;
    real r22AF#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_172287);
    real r22B0#3 = RMul(realLit22AE,r22AF);
    real r22B1#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_172287);
    real r22B2#3 = RMul(realLit22AE,r22B1);
    real r22B3#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_172287);
    real r22B4#5 = RMul(realLit22AE,r22B3);
    real r22B5#3 = RAdd(r22B0,r22B2);
    real r22B6#3 = RAdd(r22B5,r22B4);
    real realLit22B7#3 = 0.1e1;
    real r22B8#1 = RMul(realLit22B7,r22B3);
    real r22B9#1 = RAdd(r22B5,r22B8);
    real realLit22BA#3 = -0.1e1;
    real r22BB#1 = RMul(realLit22BA,r22B1);
    real r22BC#1 = RAdd(r22B0,r22BB);
    real r22BD#1 = RAdd(r22BC,r22B4);
    tensor[3] tensor22BE#1 = <tensor[3]>[r22B6,r22B9,r22BD];
    real r22BF#1 = RMul(realLit22BA,r22B3);
    real r22C0#1 = RAdd(r22B5,r22BF);
    real r22C1#1 = RMul(realLit22B7,r22AF);
    real r22C2#1 = RAdd(r22C1,r22B2);
    real r22C3#1 = RAdd(r22C2,r22B4);
    tensor[3] tensor22C4#1 = <tensor[3]>[r22C0,r22B6,r22C3];
    real r22C5#1 = RMul(realLit22B7,r22B1);
    real r22C6#1 = RAdd(r22B0,r22C5);
    real r22C7#1 = RAdd(r22C6,r22B4);
    real r22C8#1 = RMul(realLit22BA,r22AF);
    real r22C9#1 = RAdd(r22C8,r22B2);
    real r22CA#1 = RAdd(r22C9,r22B4);
    tensor[3] tensor22CB#1 = <tensor[3]>[r22C7,r22CA,r22B6];
    tensor[3,3] op1_e3_l_4522AD#3 = <tensor[3,3]>[tensor22BE,tensor22C4,tensor22CB];
    tensor[3] projParam22ED#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_4522AD);
    real vdot22EE#1 = VDot<3>(op1_e3_l_42236,projParam22ED);
    tensor[3] projParam22EF#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_4522AD);
    real vdot22F0#1 = VDot<3>(op1_e3_l_42236,projParam22EF);
    tensor[3] projParam22F1#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_4522AD);
    real vdot22F2#1 = VDot<3>(op1_e3_l_42236,projParam22F1);
    tensor[3] op1_e3_l_4722EC#1 = <tensor[3]>[vdot22EE,vdot22F0,vdot22F2];
    tensor[3] op1_e3_l_5022FB#3 = VScale<3>(op1_e3_l_9223F,op1_e3_l_4722EC);
    real r22FF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FB);
    real r2300#3 = RMul(op1_e3_l_9223F,op1_e3_l_3822A4);
    real r2301#1 = RMul(r2300,r22FF);
    real r2302#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FB);
    real r2303#1 = RMul(r2300,r2302);
    real r2304#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FB);
    real r2305#1 = RMul(r2300,r2304);
    tensor[3] camV22FE#2 = <tensor[3]>[r2301,r2303,r2305];
    globals.camV219B = camV22FE;
    globals.camDist219C = op1_e3_l_7223C;
    real _t2311#1 = 0.314159265358979323846264338327950288e1;
    real _t2313#1 = 0.36e3;
    real op1_e3_l_52315#1 = RMul(camFOV2206,_t2311);
    real op1_e3_l_62318#1 = RDiv(op1_e3_l_52315,_t2313);
    real op1_e3_l_10231B#2 = Tan(op1_e3_l_62318);
    real camVmax231E#1 = RMul(op1_e3_l_10231B,op1_e3_l_7223C);
    globals.camVmax219D = camVmax231E;
    real _t2322#1 = IntToReal(iresU2208);
    real _t2324#1 = IntToReal(iresV220A);
    real r2327#1 = RMul(_t2322,op1_e3_l_10231B);
    real op1_e3_l_142326#1 = RMul(r2327,op1_e3_l_7223C);
    real camUmax232B#1 = RDiv(op1_e3_l_142326,_t2324);
    globals.camUmax219E = camUmax232B;
    real camNearVsp232F#1 = RAdd(camNear2202,op1_e3_l_7223C);
    globals.camNearVsp219F = camNearVsp232F;
    real camFarVsp2333#1 = RAdd(camFar2204,op1_e3_l_7223C);
    globals.camFarVsp21A0 = camFarVsp2333;
    tensor[3,3] _t2337#9 = <tensor[3,3]>[camU22A9,camV22FE,camN2244];
    real op1_e3_l_32339#1 = VDot<3>(litdir220C,litdir220C);
    real op1_e3_l_4233C#1 = Sqrt(op1_e3_l_32339);
    real realLit2340#1 = 0.1e1;
    real op1_e3_l_5233F#1 = RDiv(realLit2340,op1_e3_l_4233C);
    real r2345#1 = TensorIndex<tensor[3,3],[0,0]>(_t2337);
    real r2346#3 = TensorIndex<tensor[3],[0]>(litdir220C);
    real r2347#1 = RMul(r2345,r2346);
    real r2348#1 = TensorIndex<tensor[3,3],[1,0]>(_t2337);
    real r2349#3 = TensorIndex<tensor[3],[1]>(litdir220C);
    real r234A#1 = RMul(r2348,r2349);
    real r234B#1 = TensorIndex<tensor[3,3],[2,0]>(_t2337);
    real r234C#3 = TensorIndex<tensor[3],[2]>(litdir220C);
    real r234D#1 = RMul(r234B,r234C);
    real r234E#1 = RAdd(r2347,r234A);
    real r234F#1 = RAdd(r234E,r234D);
    real r2350#1 = TensorIndex<tensor[3,3],[0,1]>(_t2337);
    real r2351#1 = RMul(r2350,r2346);
    real r2352#1 = TensorIndex<tensor[3,3],[1,1]>(_t2337);
    real r2353#1 = RMul(r2352,r2349);
    real r2354#1 = TensorIndex<tensor[3,3],[2,1]>(_t2337);
    real r2355#1 = RMul(r2354,r234C);
    real r2356#1 = RAdd(r2351,r2353);
    real r2357#1 = RAdd(r2356,r2355);
    real r2358#1 = TensorIndex<tensor[3,3],[0,2]>(_t2337);
    real r2359#1 = RMul(r2358,r2346);
    real r235A#1 = TensorIndex<tensor[3,3],[1,2]>(_t2337);
    real r235B#1 = RMul(r235A,r2349);
    real r235C#1 = TensorIndex<tensor[3,3],[2,2]>(_t2337);
    real r235D#1 = RMul(r235C,r234C);
    real r235E#1 = RAdd(r2359,r235B);
    real r235F#1 = RAdd(r235E,r235D);
    tensor[3] op1_e3_l_62344#1 = <tensor[3]>[r234F,r2357,r235F];
    tensor[3] litwsp237D#1 = VScale<3>(op1_e3_l_5233F,op1_e3_l_62344);
    globals.litwsp21A1 = litwsp237D;
    globals._t21A2 = _t2230;
    globals._tX21A3 = _t222E;
    globals._tXX21A4 = _t222C;
    globals.img21A5 = img2234;
    globals._tXXXX21A6 = _t2232;
    return
## strand
  strand ray (int ui2387#1, int vi2388#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2399:  preds = []
        tensor[3] camEye239A#1 = globals.camEye2180;
        bool camOrtho239C#2 = globals.camOrtho2186;
        int iresU239E#1 = globals.iresU2187;
        int iresV23A0#1 = globals.iresV2188;
        real rayStep23A2#1 = globals.rayStep2189;
        real refStep23A4#1 = globals.refStep218A;
        tensor[4] phong23A6#4 = globals.phong2192;
        tensor[3] camN23A8#1 = globals.camN2199;
        tensor[3] camU23AA#1 = globals.camU219A;
        tensor[3] camV23AC#1 = globals.camV219B;
        real camDist23AE#1 = globals.camDist219C;
        real camVmax23B0#2 = globals.camVmax219D;
        real camUmax23B2#2 = globals.camUmax219E;
        real camNearVsp23B4#1 = globals.camNearVsp219F;
        real _t23B6#5 = -0.5e0;
        real _t23B8#1 = IntToReal(ui2387);
        real _t23BA#1 = IntToReal(iresU239E);
        real _t23BC#3 = 0.5e0;
        real op1_e3_l_623BE#1 = RSub(_t23BA,_t23BC);
        real op1_e3_l_723C1#1 = RSub(_t23B8,_t23B6);
        real op1_e3_l_823C4#1 = RSub(op1_e3_l_623BE,_t23B6);
        real op1_e3_l_923C7#2 = RNeg(camUmax23B2);
        real op1_e3_l_1023CA#1 = RDiv(op1_e3_l_723C1,op1_e3_l_823C4);
        real op1_e3_l_1123CD#1 = RSub(camUmax23B2,op1_e3_l_923C7);
        real op1_e3_l_1323D0#1 = RMul(op1_e3_l_1023CA,op1_e3_l_1123CD);
        real rayU23D3#2 = RAdd(op1_e3_l_923C7,op1_e3_l_1323D0);
        real _t23D6#1 = IntToReal(vi2388);
        real _t23D8#2 = IntToReal(iresV23A0);
        real op1_e3_l_623DA#1 = RSub(_t23D8,_t23BC);
        real op1_e3_l_723DD#2 = RSub(_t23D6,_t23B6);
        real op1_e3_l_823E0#1 = RSub(op1_e3_l_623DA,_t23B6);
        real op1_e3_l_923E3#3 = RNeg(camVmax23B0);
        real op1_e3_l_1023E6#1 = RDiv(op1_e3_l_723DD,op1_e3_l_823E0);
        real op1_e3_l_1123E9#2 = RSub(camVmax23B0,op1_e3_l_923E3);
        real op1_e3_l_1323EC#1 = RMul(op1_e3_l_1023E6,op1_e3_l_1123E9);
        real rayV23EF#1 = RAdd(op1_e3_l_923E3,op1_e3_l_1323EC);
        real op1_e3_l_2323F2#1 = RSub(_t23D8,_t23BC);
        real op1_e3_l_2523F5#1 = RSub(op1_e3_l_2323F2,_t23B6);
        real op1_e3_l_2723F8#1 = RDiv(op1_e3_l_723DD,op1_e3_l_2523F5);
        real op1_e3_l_3023FB#1 = RMul(op1_e3_l_2723F8,op1_e3_l_1123E9);
        real op1_e3_l_3123FE#1 = RAdd(op1_e3_l_923E3,op1_e3_l_3023FB);
        tensor[3] op1_e3_l_322401#1 = VScale<3>(rayU23D3,camU23AA);
        tensor[3] op1_e3_l_332404#1 = VScale<3>(op1_e3_l_3123FE,camV23AC);
        tensor[3] UV2407#5 = VAdd<3>(op1_e3_l_322401,op1_e3_l_332404);
        if camOrtho239C then goto JOIN240D else goto ASSIGN2467
      JOIN240D:  preds = [COND240A,ASSIGN2468]
        tensor[3] _t240B#1 = phi(UV2407,_t240C)
        tensor[3] rayOrig240E#1 = VAdd<3>(camEye239A,_t240B);
        if camOrtho239C then goto ASSIGN2413 else goto ASSIGN245D
      ASSIGN2413:  preds = [COND2411]
        real _t2412#3 = 0.e0;
        tensor[3] _t2414#1 = <tensor[3]>[_t2412,_t2412,_t2412];
        goto JOIN2418
      JOIN2418:  preds = [ASSIGN2415,ASSIGN2465]
        tensor[3] _t2416#1 = phi(_t2414,_t2417)
        tensor[3] rayVec2419#4 = VAdd<3>(camN23A8,_t2416);
        real op1_e3_l_6241C#1 = VDot<3>(rayVec2419,rayVec2419);
        real op1_e3_l_7241F#2 = Sqrt(op1_e3_l_6241C);
        real op1_e3_l_82422#1 = RMul(rayStep23A2,op1_e3_l_7241F);
        real alphaFix2425#1 = RDiv(op1_e3_l_82422,refStep23A4);
        real realLit2429#1 = 0.1e1;
        real op1_e3_l_92428#1 = RDiv(realLit2429,op1_e3_l_7241F);
        tensor[3] op1_e3_l_10242D#1 = VScale<3>(op1_e3_l_92428,rayVec2419);
        tensor[3] eyeDir2430#1 = VNeg<3>(op1_e3_l_10242D);
        real phKa2433#1 = VIndex<4,0>(phong23A6);
        real phKd2435#1 = VIndex<4,1>(phong23A6);
        real phKs2437#1 = VIndex<4,2>(phong23A6);
        real phSp2439#1 = VIndex<4,3>(phong23A6);
        real _t243B#8 = 0.e0;
        tensor[4] rgba243D#1 = <tensor[4]>[_t243B,_t243B,_t243B,_t243B];
        tensor[3] rgb243F#1 = <tensor[3]>[_t243B,_t243B,_t243B];
        real transp2441#1 = 0.1e1;
        self.rayU = rayU23D3;
        self.rayV = rayV23EF;
        self.rayN = camNearVsp23B4;
        self.UV = UV2407;
        self.rayOrig = rayOrig240E;
        self.rayVec = rayVec2419;
        self.alphaFix = alphaFix2425;
        self.eyeDir = eyeDir2430;
        self.phKa = phKa2433;
        self.phKd = phKd2435;
        self.phKs = phKs2437;
        self.phSp = phSp2439;
        self.rgba = rgba243D;
        self.raw = _t243B;
        self.rgb = rgb243F;
        self.transp = transp2441;
        return
      ASSIGN245D:  preds = [COND2411]
        real realLit2454#1 = 0.1e1;
        real r2455#3 = RDiv(realLit2454,camDist23AE);
        real r2456#1 = TensorIndex<tensor[3],[0]>(UV2407);
        real r2457#1 = RMul(r2455,r2456);
        real r2458#1 = TensorIndex<tensor[3],[1]>(UV2407);
        real r2459#1 = RMul(r2455,r2458);
        real r245A#1 = TensorIndex<tensor[3],[2]>(UV2407);
        real r245B#1 = RMul(r2455,r245A);
        tensor[3] _t2417#1 = <tensor[3]>[r2457,r2459,r245B];
        goto JOIN2418
      ASSIGN2467:  preds = [COND240A]
        real _t2466#3 = 0.e0;
        tensor[3] _t240C#1 = <tensor[3]>[_t2466,_t2466,_t2466];
        goto JOIN240D
    end state init
    method update
        ENTRY2469:  preds = []
          image(IMAGE1D<double[3]>) cmap246A#17 = globals.cmap217F;
          int _t246C#3 = globals._t21A2;
          femData:Space _t246E#252 = globals._tX21A3;
          femData:FemFunc _t2470#252 = globals._tXX21A4;
          image(IMAGE3D<float[]>) umm2472#130 = globals.umm2198;
          image(IMAGE1D<double[3]>) img2474#0 = globals.img21A5;
          int _t2476#0 = globals._tXXXX21A6;
          femData:Mesh block2478#1 = globals.block217B;
          real rayStep247A#1 = globals.rayStep2189;
          real transp0247C#1 = globals.transp0218B;
          real thick247E#1 = globals.thick218C;
          real fStrTh2480#1 = globals.fStrTh218D;
          real fMaskTh2482#1 = globals.fMaskTh218E;
          real fBias2484#1 = globals.fBias218F;
          real maxAlpha2486#2 = globals.maxAlpha2190;
          tensor[3] mcNear2488#2 = globals.mcNear2193;
          tensor[3] mcFar248A#1 = globals.mcFar2194;
          tensor[2] cminmax248C#2 = globals.cminmax2196;
          bool analytical248E#1 = globals.analytical2197;
          real camNearVsp2490#2 = globals.camNearVsp219F;
          real camFarVsp2492#2 = globals.camFarVsp21A0;
          tensor[3] litwsp2494#2 = globals.litwsp21A1;
          real rayN2496#1 = self.rayN;
          tensor[3] rayOrig2498#2 = self.rayOrig;
          tensor[3] rayVec249A#1 = self.rayVec;
          real alphaFix249C#1 = self.alphaFix;
          tensor[3] eyeDir249E#1 = self.eyeDir;
          real phKa24A0#1 = self.phKa;
          real phKd24A2#1 = self.phKd;
          real phKs24A4#2 = self.phKs;
          real phSp24A6#1 = self.phSp;
          tensor[3] rgb24A8#1 = self.rgb;
          real transp24AA#2 = self.transp;
          real rayN24AC#8 = RAdd(rayN2496,rayStep247A);
          bool _t24AF#1 = GT<real>(rayN24AC,camFarVsp2492);
          if _t24AF then goto SAVE24B2 else goto JOIN24B4
        SAVE24B2:  preds = [COND24B1]
          self.rayN = rayN24AC;
          stabilize
          goto JOIN24B4
        JOIN24B4:  preds = [*STABILIZE24B3,COND24B1]
          tensor[3] op1_e3_l_524B5#2 = VScale<3>(rayN24AC,rayVec249A);
          tensor[3] pos24B8#16 = VAdd<3>(rayOrig2498,op1_e3_l_524B5);
          femData:RefCell _t24BB#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2478);
          real _t24BD#1 = 0.1e-8;
          bool _t24BF#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BB,pos24B8,_t24BD);
          if _t24BF then goto ASSIGN25C2 else goto ASSIGN46AE
        ASSIGN25C2:  preds = [COND24C1]
          int ilit24C3#1 = 84;
          int mulRes24C4#84 = IMul(_t246C,ilit24C3);
          int ilit24C5#1 = 0;
          int addRes24C6#1 = IAdd(mulRes24C4,ilit24C5);
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24C6);
          int ilit24C8#1 = 1;
          int addRes24C9#1 = IAdd(mulRes24C4,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24C9);
          int ilit24CB#1 = 2;
          int addRes24CC#1 = IAdd(mulRes24C4,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CC);
          int ilit24CE#1 = 3;
          int addRes24CF#1 = IAdd(mulRes24C4,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CF);
          int ilit24D1#1 = 4;
          int addRes24D2#1 = IAdd(mulRes24C4,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D2);
          int ilit24D4#1 = 5;
          int addRes24D5#1 = IAdd(mulRes24C4,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D5);
          int ilit24D7#1 = 6;
          int addRes24D8#1 = IAdd(mulRes24C4,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D8);
          int ilit24DA#1 = 7;
          int addRes24DB#1 = IAdd(mulRes24C4,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DB);
          int ilit24DD#1 = 8;
          int addRes24DE#1 = IAdd(mulRes24C4,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DE);
          int ilit24E0#1 = 9;
          int addRes24E1#1 = IAdd(mulRes24C4,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E1);
          int ilit24E3#1 = 10;
          int addRes24E4#1 = IAdd(mulRes24C4,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E4);
          int ilit24E6#1 = 11;
          int addRes24E7#1 = IAdd(mulRes24C4,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E7);
          int ilit24E9#1 = 12;
          int addRes24EA#1 = IAdd(mulRes24C4,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24EA);
          int ilit24EC#1 = 13;
          int addRes24ED#1 = IAdd(mulRes24C4,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24ED);
          int ilit24EF#1 = 14;
          int addRes24F0#1 = IAdd(mulRes24C4,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F0);
          int ilit24F2#1 = 15;
          int addRes24F3#1 = IAdd(mulRes24C4,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F3);
          int ilit24F5#1 = 16;
          int addRes24F6#1 = IAdd(mulRes24C4,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F6);
          int ilit24F8#1 = 17;
          int addRes24F9#1 = IAdd(mulRes24C4,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F9);
          int ilit24FB#1 = 18;
          int addRes24FC#1 = IAdd(mulRes24C4,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FC);
          int ilit24FE#1 = 19;
          int addRes24FF#1 = IAdd(mulRes24C4,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FF);
          int ilit2501#1 = 20;
          int addRes2502#1 = IAdd(mulRes24C4,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2502);
          int ilit2504#1 = 21;
          int addRes2505#1 = IAdd(mulRes24C4,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2505);
          int ilit2507#1 = 22;
          int addRes2508#1 = IAdd(mulRes24C4,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2508);
          int ilit250A#1 = 23;
          int addRes250B#1 = IAdd(mulRes24C4,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250B);
          int ilit250D#1 = 24;
          int addRes250E#1 = IAdd(mulRes24C4,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250E);
          int ilit2510#1 = 25;
          int addRes2511#1 = IAdd(mulRes24C4,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2511);
          int ilit2513#1 = 26;
          int addRes2514#1 = IAdd(mulRes24C4,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2514);
          int ilit2516#1 = 27;
          int addRes2517#1 = IAdd(mulRes24C4,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2517);
          int ilit2519#1 = 28;
          int addRes251A#1 = IAdd(mulRes24C4,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251A);
          int ilit251C#1 = 29;
          int addRes251D#1 = IAdd(mulRes24C4,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251D);
          int ilit251F#1 = 30;
          int addRes2520#1 = IAdd(mulRes24C4,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2520);
          int ilit2522#1 = 31;
          int addRes2523#1 = IAdd(mulRes24C4,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2523);
          int ilit2525#1 = 32;
          int addRes2526#1 = IAdd(mulRes24C4,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2526);
          int ilit2528#1 = 33;
          int addRes2529#1 = IAdd(mulRes24C4,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2529);
          int ilit252B#1 = 34;
          int addRes252C#1 = IAdd(mulRes24C4,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252C);
          int ilit252E#1 = 35;
          int addRes252F#1 = IAdd(mulRes24C4,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252F);
          int ilit2531#1 = 36;
          int addRes2532#1 = IAdd(mulRes24C4,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2532);
          int ilit2534#1 = 37;
          int addRes2535#1 = IAdd(mulRes24C4,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2535);
          int ilit2537#1 = 38;
          int addRes2538#1 = IAdd(mulRes24C4,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2538);
          int ilit253A#1 = 39;
          int addRes253B#1 = IAdd(mulRes24C4,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253B);
          int ilit253D#1 = 40;
          int addRes253E#1 = IAdd(mulRes24C4,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253E);
          int ilit2540#1 = 41;
          int addRes2541#1 = IAdd(mulRes24C4,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2541);
          int ilit2543#1 = 42;
          int addRes2544#1 = IAdd(mulRes24C4,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2544);
          int ilit2546#1 = 43;
          int addRes2547#1 = IAdd(mulRes24C4,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2547);
          int ilit2549#1 = 44;
          int addRes254A#1 = IAdd(mulRes24C4,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254A);
          int ilit254C#1 = 45;
          int addRes254D#1 = IAdd(mulRes24C4,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254D);
          int ilit254F#1 = 46;
          int addRes2550#1 = IAdd(mulRes24C4,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2550);
          int ilit2552#1 = 47;
          int addRes2553#1 = IAdd(mulRes24C4,ilit2552);
          int idx2554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2553);
          int ilit2555#1 = 48;
          int addRes2556#1 = IAdd(mulRes24C4,ilit2555);
          int idx2557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2556);
          int ilit2558#1 = 49;
          int addRes2559#1 = IAdd(mulRes24C4,ilit2558);
          int idx255A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2559);
          int ilit255B#1 = 50;
          int addRes255C#1 = IAdd(mulRes24C4,ilit255B);
          int idx255D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255C);
          int ilit255E#1 = 51;
          int addRes255F#1 = IAdd(mulRes24C4,ilit255E);
          int idx2560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255F);
          int ilit2561#1 = 52;
          int addRes2562#1 = IAdd(mulRes24C4,ilit2561);
          int idx2563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2562);
          int ilit2564#1 = 53;
          int addRes2565#1 = IAdd(mulRes24C4,ilit2564);
          int idx2566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2565);
          int ilit2567#1 = 54;
          int addRes2568#1 = IAdd(mulRes24C4,ilit2567);
          int idx2569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2568);
          int ilit256A#1 = 55;
          int addRes256B#1 = IAdd(mulRes24C4,ilit256A);
          int idx256C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256B);
          int ilit256D#1 = 56;
          int addRes256E#1 = IAdd(mulRes24C4,ilit256D);
          int idx256F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256E);
          int ilit2570#1 = 57;
          int addRes2571#1 = IAdd(mulRes24C4,ilit2570);
          int idx2572#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2571);
          int ilit2573#1 = 58;
          int addRes2574#1 = IAdd(mulRes24C4,ilit2573);
          int idx2575#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2574);
          int ilit2576#1 = 59;
          int addRes2577#1 = IAdd(mulRes24C4,ilit2576);
          int idx2578#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2577);
          int ilit2579#1 = 60;
          int addRes257A#1 = IAdd(mulRes24C4,ilit2579);
          int idx257B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257A);
          int ilit257C#1 = 61;
          int addRes257D#1 = IAdd(mulRes24C4,ilit257C);
          int idx257E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257D);
          int ilit257F#1 = 62;
          int addRes2580#1 = IAdd(mulRes24C4,ilit257F);
          int idx2581#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2580);
          int ilit2582#1 = 63;
          int addRes2583#1 = IAdd(mulRes24C4,ilit2582);
          int idx2584#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2583);
          int ilit2585#1 = 64;
          int addRes2586#1 = IAdd(mulRes24C4,ilit2585);
          int idx2587#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2586);
          int ilit2588#1 = 65;
          int addRes2589#1 = IAdd(mulRes24C4,ilit2588);
          int idx258A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2589);
          int ilit258B#1 = 66;
          int addRes258C#1 = IAdd(mulRes24C4,ilit258B);
          int idx258D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258C);
          int ilit258E#1 = 67;
          int addRes258F#1 = IAdd(mulRes24C4,ilit258E);
          int idx2590#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258F);
          int ilit2591#1 = 68;
          int addRes2592#1 = IAdd(mulRes24C4,ilit2591);
          int idx2593#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2592);
          int ilit2594#1 = 69;
          int addRes2595#1 = IAdd(mulRes24C4,ilit2594);
          int idx2596#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2595);
          int ilit2597#1 = 70;
          int addRes2598#1 = IAdd(mulRes24C4,ilit2597);
          int idx2599#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2598);
          int ilit259A#1 = 71;
          int addRes259B#1 = IAdd(mulRes24C4,ilit259A);
          int idx259C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259B);
          int ilit259D#1 = 72;
          int addRes259E#1 = IAdd(mulRes24C4,ilit259D);
          int idx259F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259E);
          int ilit25A0#1 = 73;
          int addRes25A1#1 = IAdd(mulRes24C4,ilit25A0);
          int idx25A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A1);
          int ilit25A3#1 = 74;
          int addRes25A4#1 = IAdd(mulRes24C4,ilit25A3);
          int idx25A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A4);
          int ilit25A6#1 = 75;
          int addRes25A7#1 = IAdd(mulRes24C4,ilit25A6);
          int idx25A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A7);
          int ilit25A9#1 = 76;
          int addRes25AA#1 = IAdd(mulRes24C4,ilit25A9);
          int idx25AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AA);
          int ilit25AC#1 = 77;
          int addRes25AD#1 = IAdd(mulRes24C4,ilit25AC);
          int idx25AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AD);
          int ilit25AF#1 = 78;
          int addRes25B0#1 = IAdd(mulRes24C4,ilit25AF);
          int idx25B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B0);
          int ilit25B2#1 = 79;
          int addRes25B3#1 = IAdd(mulRes24C4,ilit25B2);
          int idx25B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B3);
          int ilit25B5#1 = 80;
          int addRes25B6#1 = IAdd(mulRes24C4,ilit25B5);
          int idx25B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B6);
          int ilit25B8#1 = 81;
          int addRes25B9#1 = IAdd(mulRes24C4,ilit25B8);
          int idx25BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B9);
          int ilit25BB#1 = 82;
          int addRes25BC#1 = IAdd(mulRes24C4,ilit25BB);
          int idx25BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BC);
          int ilit25BE#1 = 83;
          int addRes25BF#1 = IAdd(mulRes24C4,ilit25BE);
          int idx25C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BF);
          int[84] seq25C1#1 = <int[84]>{idx24C7,idx24CA,idx24CD,idx24D0,idx24D3,idx24D6,idx24D9,idx24DC,idx24DF,idx24E2,idx24E5,idx24E8,idx24EB,idx24EE,idx24F1,idx24F4,idx24F7,idx24FA,idx24FD,idx2500,idx2503,idx2506,idx2509,idx250C,idx250F,idx2512,idx2515,idx2518,idx251B,idx251E,idx2521,idx2524,idx2527,idx252A,idx252D,idx2530,idx2533,idx2536,idx2539,idx253C,idx253F,idx2542,idx2545,idx2548,idx254B,idx254E,idx2551,idx2554,idx2557,idx255A,idx255D,idx2560,idx2563,idx2566,idx2569,idx256C,idx256F,idx2572,idx2575,idx2578,idx257B,idx257E,idx2581,idx2584,idx2587,idx258A,idx258D,idx2590,idx2593,idx2596,idx2599,idx259C,idx259F,idx25A2,idx25A5,idx25A8,idx25AB,idx25AE,idx25B1,idx25B4,idx25B7,idx25BA,idx25BD,idx25C0};
          int[84] femIndicies24C2#84 = seq25C1;
          int ilit26C3#85 = 1;
          int ilit26C4#1 = 0;
          int idx26C5#1 = Subscript<int>(femIndicies24C2,ilit26C4);
          int mulRes26C6#1 = IMul(ilit26C3,idx26C5);
          int idx26C7#1 = Subscript<int>(femIndicies24C2,ilit26C3);
          int mulRes26C8#1 = IMul(ilit26C3,idx26C7);
          int ilit26C9#1 = 2;
          int idx26CA#1 = Subscript<int>(femIndicies24C2,ilit26C9);
          int mulRes26CB#1 = IMul(ilit26C3,idx26CA);
          int ilit26CC#1 = 3;
          int idx26CD#1 = Subscript<int>(femIndicies24C2,ilit26CC);
          int mulRes26CE#1 = IMul(ilit26C3,idx26CD);
          int ilit26CF#1 = 4;
          int idx26D0#1 = Subscript<int>(femIndicies24C2,ilit26CF);
          int mulRes26D1#1 = IMul(ilit26C3,idx26D0);
          int ilit26D2#1 = 5;
          int idx26D3#1 = Subscript<int>(femIndicies24C2,ilit26D2);
          int mulRes26D4#1 = IMul(ilit26C3,idx26D3);
          int ilit26D5#1 = 6;
          int idx26D6#1 = Subscript<int>(femIndicies24C2,ilit26D5);
          int mulRes26D7#1 = IMul(ilit26C3,idx26D6);
          int ilit26D8#1 = 7;
          int idx26D9#1 = Subscript<int>(femIndicies24C2,ilit26D8);
          int mulRes26DA#1 = IMul(ilit26C3,idx26D9);
          int ilit26DB#1 = 8;
          int idx26DC#1 = Subscript<int>(femIndicies24C2,ilit26DB);
          int mulRes26DD#1 = IMul(ilit26C3,idx26DC);
          int ilit26DE#1 = 9;
          int idx26DF#1 = Subscript<int>(femIndicies24C2,ilit26DE);
          int mulRes26E0#1 = IMul(ilit26C3,idx26DF);
          int ilit26E1#1 = 10;
          int idx26E2#1 = Subscript<int>(femIndicies24C2,ilit26E1);
          int mulRes26E3#1 = IMul(ilit26C3,idx26E2);
          int ilit26E4#1 = 11;
          int idx26E5#1 = Subscript<int>(femIndicies24C2,ilit26E4);
          int mulRes26E6#1 = IMul(ilit26C3,idx26E5);
          int ilit26E7#1 = 12;
          int idx26E8#1 = Subscript<int>(femIndicies24C2,ilit26E7);
          int mulRes26E9#1 = IMul(ilit26C3,idx26E8);
          int ilit26EA#1 = 13;
          int idx26EB#1 = Subscript<int>(femIndicies24C2,ilit26EA);
          int mulRes26EC#1 = IMul(ilit26C3,idx26EB);
          int ilit26ED#1 = 14;
          int idx26EE#1 = Subscript<int>(femIndicies24C2,ilit26ED);
          int mulRes26EF#1 = IMul(ilit26C3,idx26EE);
          int ilit26F0#1 = 15;
          int idx26F1#1 = Subscript<int>(femIndicies24C2,ilit26F0);
          int mulRes26F2#1 = IMul(ilit26C3,idx26F1);
          int ilit26F3#1 = 16;
          int idx26F4#1 = Subscript<int>(femIndicies24C2,ilit26F3);
          int mulRes26F5#1 = IMul(ilit26C3,idx26F4);
          int ilit26F6#1 = 17;
          int idx26F7#1 = Subscript<int>(femIndicies24C2,ilit26F6);
          int mulRes26F8#1 = IMul(ilit26C3,idx26F7);
          int ilit26F9#1 = 18;
          int idx26FA#1 = Subscript<int>(femIndicies24C2,ilit26F9);
          int mulRes26FB#1 = IMul(ilit26C3,idx26FA);
          int ilit26FC#1 = 19;
          int idx26FD#1 = Subscript<int>(femIndicies24C2,ilit26FC);
          int mulRes26FE#1 = IMul(ilit26C3,idx26FD);
          int ilit26FF#1 = 20;
          int idx2700#1 = Subscript<int>(femIndicies24C2,ilit26FF);
          int mulRes2701#1 = IMul(ilit26C3,idx2700);
          int ilit2702#1 = 21;
          int idx2703#1 = Subscript<int>(femIndicies24C2,ilit2702);
          int mulRes2704#1 = IMul(ilit26C3,idx2703);
          int ilit2705#1 = 22;
          int idx2706#1 = Subscript<int>(femIndicies24C2,ilit2705);
          int mulRes2707#1 = IMul(ilit26C3,idx2706);
          int ilit2708#1 = 23;
          int idx2709#1 = Subscript<int>(femIndicies24C2,ilit2708);
          int mulRes270A#1 = IMul(ilit26C3,idx2709);
          int ilit270B#1 = 24;
          int idx270C#1 = Subscript<int>(femIndicies24C2,ilit270B);
          int mulRes270D#1 = IMul(ilit26C3,idx270C);
          int ilit270E#1 = 25;
          int idx270F#1 = Subscript<int>(femIndicies24C2,ilit270E);
          int mulRes2710#1 = IMul(ilit26C3,idx270F);
          int ilit2711#1 = 26;
          int idx2712#1 = Subscript<int>(femIndicies24C2,ilit2711);
          int mulRes2713#1 = IMul(ilit26C3,idx2712);
          int ilit2714#1 = 27;
          int idx2715#1 = Subscript<int>(femIndicies24C2,ilit2714);
          int mulRes2716#1 = IMul(ilit26C3,idx2715);
          int ilit2717#1 = 28;
          int idx2718#1 = Subscript<int>(femIndicies24C2,ilit2717);
          int mulRes2719#1 = IMul(ilit26C3,idx2718);
          int ilit271A#1 = 29;
          int idx271B#1 = Subscript<int>(femIndicies24C2,ilit271A);
          int mulRes271C#1 = IMul(ilit26C3,idx271B);
          int ilit271D#1 = 30;
          int idx271E#1 = Subscript<int>(femIndicies24C2,ilit271D);
          int mulRes271F#1 = IMul(ilit26C3,idx271E);
          int ilit2720#1 = 31;
          int idx2721#1 = Subscript<int>(femIndicies24C2,ilit2720);
          int mulRes2722#1 = IMul(ilit26C3,idx2721);
          int ilit2723#1 = 32;
          int idx2724#1 = Subscript<int>(femIndicies24C2,ilit2723);
          int mulRes2725#1 = IMul(ilit26C3,idx2724);
          int ilit2726#1 = 33;
          int idx2727#1 = Subscript<int>(femIndicies24C2,ilit2726);
          int mulRes2728#1 = IMul(ilit26C3,idx2727);
          int ilit2729#1 = 34;
          int idx272A#1 = Subscript<int>(femIndicies24C2,ilit2729);
          int mulRes272B#1 = IMul(ilit26C3,idx272A);
          int ilit272C#1 = 35;
          int idx272D#1 = Subscript<int>(femIndicies24C2,ilit272C);
          int mulRes272E#1 = IMul(ilit26C3,idx272D);
          int ilit272F#1 = 36;
          int idx2730#1 = Subscript<int>(femIndicies24C2,ilit272F);
          int mulRes2731#1 = IMul(ilit26C3,idx2730);
          int ilit2732#1 = 37;
          int idx2733#1 = Subscript<int>(femIndicies24C2,ilit2732);
          int mulRes2734#1 = IMul(ilit26C3,idx2733);
          int ilit2735#1 = 38;
          int idx2736#1 = Subscript<int>(femIndicies24C2,ilit2735);
          int mulRes2737#1 = IMul(ilit26C3,idx2736);
          int ilit2738#1 = 39;
          int idx2739#1 = Subscript<int>(femIndicies24C2,ilit2738);
          int mulRes273A#1 = IMul(ilit26C3,idx2739);
          int ilit273B#1 = 40;
          int idx273C#1 = Subscript<int>(femIndicies24C2,ilit273B);
          int mulRes273D#1 = IMul(ilit26C3,idx273C);
          int ilit273E#1 = 41;
          int idx273F#1 = Subscript<int>(femIndicies24C2,ilit273E);
          int mulRes2740#1 = IMul(ilit26C3,idx273F);
          int ilit2741#1 = 42;
          int idx2742#1 = Subscript<int>(femIndicies24C2,ilit2741);
          int mulRes2743#1 = IMul(ilit26C3,idx2742);
          int ilit2744#1 = 43;
          int idx2745#1 = Subscript<int>(femIndicies24C2,ilit2744);
          int mulRes2746#1 = IMul(ilit26C3,idx2745);
          int ilit2747#1 = 44;
          int idx2748#1 = Subscript<int>(femIndicies24C2,ilit2747);
          int mulRes2749#1 = IMul(ilit26C3,idx2748);
          int ilit274A#1 = 45;
          int idx274B#1 = Subscript<int>(femIndicies24C2,ilit274A);
          int mulRes274C#1 = IMul(ilit26C3,idx274B);
          int ilit274D#1 = 46;
          int idx274E#1 = Subscript<int>(femIndicies24C2,ilit274D);
          int mulRes274F#1 = IMul(ilit26C3,idx274E);
          int ilit2750#1 = 47;
          int idx2751#1 = Subscript<int>(femIndicies24C2,ilit2750);
          int mulRes2752#1 = IMul(ilit26C3,idx2751);
          int ilit2753#1 = 48;
          int idx2754#1 = Subscript<int>(femIndicies24C2,ilit2753);
          int mulRes2755#1 = IMul(ilit26C3,idx2754);
          int ilit2756#1 = 49;
          int idx2757#1 = Subscript<int>(femIndicies24C2,ilit2756);
          int mulRes2758#1 = IMul(ilit26C3,idx2757);
          int ilit2759#1 = 50;
          int idx275A#1 = Subscript<int>(femIndicies24C2,ilit2759);
          int mulRes275B#1 = IMul(ilit26C3,idx275A);
          int ilit275C#1 = 51;
          int idx275D#1 = Subscript<int>(femIndicies24C2,ilit275C);
          int mulRes275E#1 = IMul(ilit26C3,idx275D);
          int ilit275F#1 = 52;
          int idx2760#1 = Subscript<int>(femIndicies24C2,ilit275F);
          int mulRes2761#1 = IMul(ilit26C3,idx2760);
          int ilit2762#1 = 53;
          int idx2763#1 = Subscript<int>(femIndicies24C2,ilit2762);
          int mulRes2764#1 = IMul(ilit26C3,idx2763);
          int ilit2765#1 = 54;
          int idx2766#1 = Subscript<int>(femIndicies24C2,ilit2765);
          int mulRes2767#1 = IMul(ilit26C3,idx2766);
          int ilit2768#1 = 55;
          int idx2769#1 = Subscript<int>(femIndicies24C2,ilit2768);
          int mulRes276A#1 = IMul(ilit26C3,idx2769);
          int ilit276B#1 = 56;
          int idx276C#1 = Subscript<int>(femIndicies24C2,ilit276B);
          int mulRes276D#1 = IMul(ilit26C3,idx276C);
          int ilit276E#1 = 57;
          int idx276F#1 = Subscript<int>(femIndicies24C2,ilit276E);
          int mulRes2770#1 = IMul(ilit26C3,idx276F);
          int ilit2771#1 = 58;
          int idx2772#1 = Subscript<int>(femIndicies24C2,ilit2771);
          int mulRes2773#1 = IMul(ilit26C3,idx2772);
          int ilit2774#1 = 59;
          int idx2775#1 = Subscript<int>(femIndicies24C2,ilit2774);
          int mulRes2776#1 = IMul(ilit26C3,idx2775);
          int ilit2777#1 = 60;
          int idx2778#1 = Subscript<int>(femIndicies24C2,ilit2777);
          int mulRes2779#1 = IMul(ilit26C3,idx2778);
          int ilit277A#1 = 61;
          int idx277B#1 = Subscript<int>(femIndicies24C2,ilit277A);
          int mulRes277C#1 = IMul(ilit26C3,idx277B);
          int ilit277D#1 = 62;
          int idx277E#1 = Subscript<int>(femIndicies24C2,ilit277D);
          int mulRes277F#1 = IMul(ilit26C3,idx277E);
          int ilit2780#1 = 63;
          int idx2781#1 = Subscript<int>(femIndicies24C2,ilit2780);
          int mulRes2782#1 = IMul(ilit26C3,idx2781);
          int ilit2783#1 = 64;
          int idx2784#1 = Subscript<int>(femIndicies24C2,ilit2783);
          int mulRes2785#1 = IMul(ilit26C3,idx2784);
          int ilit2786#1 = 65;
          int idx2787#1 = Subscript<int>(femIndicies24C2,ilit2786);
          int mulRes2788#1 = IMul(ilit26C3,idx2787);
          int ilit2789#1 = 66;
          int idx278A#1 = Subscript<int>(femIndicies24C2,ilit2789);
          int mulRes278B#1 = IMul(ilit26C3,idx278A);
          int ilit278C#1 = 67;
          int idx278D#1 = Subscript<int>(femIndicies24C2,ilit278C);
          int mulRes278E#1 = IMul(ilit26C3,idx278D);
          int ilit278F#1 = 68;
          int idx2790#1 = Subscript<int>(femIndicies24C2,ilit278F);
          int mulRes2791#1 = IMul(ilit26C3,idx2790);
          int ilit2792#1 = 69;
          int idx2793#1 = Subscript<int>(femIndicies24C2,ilit2792);
          int mulRes2794#1 = IMul(ilit26C3,idx2793);
          int ilit2795#1 = 70;
          int idx2796#1 = Subscript<int>(femIndicies24C2,ilit2795);
          int mulRes2797#1 = IMul(ilit26C3,idx2796);
          int ilit2798#1 = 71;
          int idx2799#1 = Subscript<int>(femIndicies24C2,ilit2798);
          int mulRes279A#1 = IMul(ilit26C3,idx2799);
          int ilit279B#1 = 72;
          int idx279C#1 = Subscript<int>(femIndicies24C2,ilit279B);
          int mulRes279D#1 = IMul(ilit26C3,idx279C);
          int ilit279E#1 = 73;
          int idx279F#1 = Subscript<int>(femIndicies24C2,ilit279E);
          int mulRes27A0#1 = IMul(ilit26C3,idx279F);
          int ilit27A1#1 = 74;
          int idx27A2#1 = Subscript<int>(femIndicies24C2,ilit27A1);
          int mulRes27A3#1 = IMul(ilit26C3,idx27A2);
          int ilit27A4#1 = 75;
          int idx27A5#1 = Subscript<int>(femIndicies24C2,ilit27A4);
          int mulRes27A6#1 = IMul(ilit26C3,idx27A5);
          int ilit27A7#1 = 76;
          int idx27A8#1 = Subscript<int>(femIndicies24C2,ilit27A7);
          int mulRes27A9#1 = IMul(ilit26C3,idx27A8);
          int ilit27AA#1 = 77;
          int idx27AB#1 = Subscript<int>(femIndicies24C2,ilit27AA);
          int mulRes27AC#1 = IMul(ilit26C3,idx27AB);
          int ilit27AD#1 = 78;
          int idx27AE#1 = Subscript<int>(femIndicies24C2,ilit27AD);
          int mulRes27AF#1 = IMul(ilit26C3,idx27AE);
          int ilit27B0#1 = 79;
          int idx27B1#1 = Subscript<int>(femIndicies24C2,ilit27B0);
          int mulRes27B2#1 = IMul(ilit26C3,idx27B1);
          int ilit27B3#1 = 80;
          int idx27B4#1 = Subscript<int>(femIndicies24C2,ilit27B3);
          int mulRes27B5#1 = IMul(ilit26C3,idx27B4);
          int ilit27B6#1 = 81;
          int idx27B7#1 = Subscript<int>(femIndicies24C2,ilit27B6);
          int mulRes27B8#1 = IMul(ilit26C3,idx27B7);
          int ilit27B9#1 = 82;
          int idx27BA#1 = Subscript<int>(femIndicies24C2,ilit27B9);
          int mulRes27BB#1 = IMul(ilit26C3,idx27BA);
          int ilit27BC#1 = 83;
          int idx27BD#1 = Subscript<int>(femIndicies24C2,ilit27BC);
          int mulRes27BE#1 = IMul(ilit26C3,idx27BD);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C6);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C8);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CB);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CE);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D1);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D4);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D7);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DA);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DD);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E0);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E3);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E6);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E9);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EC);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EF);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F2);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F5);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F8);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FB);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FE);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2701);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2704);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2707);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270A);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270D);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2710);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2713);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2716);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2719);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271C);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271F);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2722);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2725);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2728);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272B);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272E);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2731);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2734);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2737);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273A);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273D);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2740);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2743);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2746);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2749);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274C);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274F);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2752);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2755);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2758);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275B);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275E);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2761);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2764);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2767);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276A);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276D);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2770);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2773);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2776);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2779);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277C);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277F);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2782);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2785);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2788);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278B);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278E);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2791);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2794);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2797);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279A);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279D);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A0);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A3);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A6);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A9);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AC);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AF);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B2);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B5);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B8);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BB);
          real dof2812#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BE);
          tensor[84] dofs2813#1 = <tensor[84]>[dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811,dof2812];
          tensor[84] femDofs26C2#12 = dofs2813;
          real varAcc2967#4 = VIndex<3,0>(pos24B8);
          real varAcc2968#4 = VIndex<3,1>(pos24B8);
          real varAcc2969#4 = VIndex<3,2>(pos24B8);
          real basisEval296A#294 = 0.e0;
          real coeff296B#31 = 0.2e1;
          real one296C#38 = 0.1e1;
          real prod296D#5 = RMul(one296C,one296C);
          real prod296E#2 = RMul(one296C,prod296D);
          real basisEval296F#3 = RMul(coeff296B,prod296E);
          real iden2970#5 = varAcc2969;
          real prod2971#4 = RMul(one296C,iden2970);
          real prod2972#3 = RMul(one296C,prod2971);
          real basisEval2973#4 = RMul(coeff296B,prod2972);
          real iden2974#5 = varAcc2968;
          real prod2975#4 = RMul(iden2974,one296C);
          real prod2976#3 = RMul(one296C,prod2975);
          real basisEval2977#4 = RMul(coeff296B,prod2976);
          real coeff2978#22 = 0.6e1;
          real iden2979#11 = varAcc2967;
          real prod297A#3 = RMul(iden2979,prod296D);
          real basisEval297B#1 = RMul(coeff2978,prod297A);
          real prod2297C#4 = RMul(iden2970,varAcc2969);
          real prod297D#3 = RMul(one296C,prod2297C);
          real prod297E#4 = RMul(one296C,prod297D);
          real basisEval297F#2 = RMul(coeff296B,prod297E);
          real prod2980#3 = RMul(iden2974,iden2970);
          real prod2981#3 = RMul(one296C,prod2980);
          real basisEval2982#3 = RMul(coeff296B,prod2981);
          real prod22983#4 = RMul(iden2974,varAcc2968);
          real prod2984#3 = RMul(prod22983,one296C);
          real prod2985#4 = RMul(one296C,prod2984);
          real basisEval2986#2 = RMul(coeff296B,prod2985);
          real prod2987#3 = RMul(iden2979,prod2971);
          real basisEval2988#2 = RMul(coeff2978,prod2987);
          real prod2989#3 = RMul(iden2979,prod2975);
          real basisEval298A#2 = RMul(coeff2978,prod2989);
          real coeff298B#15 = 0.12e2;
          real prod2298C#7 = RMul(iden2979,varAcc2967);
          real prod298D#4 = RMul(prod2298C,prod296D);
          real basisEval298E#1 = RMul(coeff298B,prod298D);
          real prod3298F#3 = RMul(prod2297C,varAcc2969);
          real prod2990#2 = RMul(one296C,prod3298F);
          real prod2991#4 = RMul(one296C,prod2990);
          real basisEval2992#2 = RMul(coeff296B,prod2991);
          real prod2993#2 = RMul(iden2974,prod2297C);
          real prod2994#4 = RMul(one296C,prod2993);
          real basisEval2995#2 = RMul(coeff296B,prod2994);
          real prod2996#2 = RMul(prod22983,iden2970);
          real prod2997#4 = RMul(one296C,prod2996);
          real basisEval2998#2 = RMul(coeff296B,prod2997);
          real prod32999#3 = RMul(prod22983,varAcc2968);
          real prod299A#2 = RMul(prod32999,one296C);
          real prod299B#4 = RMul(one296C,prod299A);
          real basisEval299C#2 = RMul(coeff296B,prod299B);
          real prod299D#4 = RMul(iden2979,prod297D);
          real basisEval299E#2 = RMul(coeff2978,prod299D);
          real prod299F#2 = RMul(iden2979,prod2980);
          real basisEval29A0#3 = RMul(coeff2978,prod299F);
          real prod29A1#4 = RMul(iden2979,prod2984);
          real basisEval29A2#2 = RMul(coeff2978,prod29A1);
          real prod29A3#4 = RMul(prod2298C,prod2971);
          real basisEval29A4#1 = RMul(coeff298B,prod29A3);
          real prod29A5#4 = RMul(prod2298C,prod2975);
          real basisEval29A6#1 = RMul(coeff298B,prod29A5);
          real coeff29A7#9 = 0.20e2;
          real prod329A8#4 = RMul(prod2298C,varAcc2967);
          real prod29A9#4 = RMul(prod329A8,prod296D);
          real basisEval29AA#1 = RMul(coeff29A7,prod29A9);
          real prod429AB#1 = RMul(prod3298F,varAcc2969);
          real prod29AC#1 = RMul(one296C,prod429AB);
          real prod29AD#4 = RMul(one296C,prod29AC);
          real basisEval29AE#2 = RMul(coeff296B,prod29AD);
          real prod29AF#1 = RMul(iden2974,prod3298F);
          real prod29B0#5 = RMul(one296C,prod29AF);
          real basisEval29B1#2 = RMul(coeff296B,prod29B0);
          real prod29B2#1 = RMul(prod22983,prod2297C);
          real prod29B3#4 = RMul(one296C,prod29B2);
          real basisEval29B4#1 = RMul(coeff296B,prod29B3);
          real prod29B5#1 = RMul(prod32999,iden2970);
          real prod29B6#5 = RMul(one296C,prod29B5);
          real basisEval29B7#2 = RMul(coeff296B,prod29B6);
          real prod429B8#1 = RMul(prod32999,varAcc2968);
          real prod29B9#1 = RMul(prod429B8,one296C);
          real prod29BA#4 = RMul(one296C,prod29B9);
          real basisEval29BB#2 = RMul(coeff296B,prod29BA);
          real prod29BC#5 = RMul(iden2979,prod2990);
          real basisEval29BD#1 = RMul(coeff2978,prod29BC);
          real prod29BE#3 = RMul(iden2979,prod2993);
          real basisEval29BF#4 = RMul(coeff2978,prod29BE);
          real prod29C0#3 = RMul(iden2979,prod2996);
          real basisEval29C1#4 = RMul(coeff2978,prod29C0);
          real prod29C2#5 = RMul(iden2979,prod299A);
          real basisEval29C3#1 = RMul(coeff2978,prod29C2);
          real prod29C4#4 = RMul(prod2298C,prod297D);
          real basisEval29C5#2 = RMul(coeff298B,prod29C4);
          real prod29C6#3 = RMul(prod2298C,prod2980);
          real basisEval29C7#1 = RMul(coeff298B,prod29C6);
          real prod29C8#4 = RMul(prod2298C,prod2984);
          real basisEval29C9#2 = RMul(coeff298B,prod29C8);
          real prod29CA#5 = RMul(prod329A8,prod2971);
          real basisEval29CB#1 = RMul(coeff29A7,prod29CA);
          real prod29CC#5 = RMul(prod329A8,prod2975);
          real basisEval29CD#1 = RMul(coeff29A7,prod29CC);
          real coeff29CE#3 = 0.30e2;
          real prod429CF#1 = RMul(prod329A8,varAcc2967);
          real prod29D0#4 = RMul(prod429CF,prod296D);
          real basisEval29D1#1 = RMul(coeff29CE,prod29D0);
          real basisEval29D2#3 = RMul(one296C,prod296E);
          real basisEval29D3#1 = RMul(one296C,prod2972);
          real basisEval29D4#4 = RMul(coeff296B,prod297A);
          real basisEval29D5#1 = RMul(one296C,prod297E);
          real coeff29D6#12 = 0.3e1;
          real basisEval29D7#2 = RMul(coeff29D6,prod2985);
          real basisEval29D8#3 = RMul(coeff296B,prod2987);
          real coeff29D9#16 = 0.4e1;
          real basisEval29DA#1 = RMul(coeff29D9,prod2989);
          real basisEval29DB#2 = RMul(coeff29D6,prod298D);
          real basisEval29DC#1 = RMul(one296C,prod2991);
          real basisEval29DD#1 = RMul(coeff29D6,prod2997);
          real basisEval29DE#2 = RMul(coeff29D9,prod299B);
          real basisEval29DF#2 = RMul(coeff296B,prod299D);
          real basisEval29E0#3 = RMul(coeff29D9,prod299F);
          real basisEval29E1#1 = RMul(coeff29D6,prod29A3);
          real basisEval29E2#2 = RMul(coeff2978,prod29A5);
          real basisEval29E3#2 = RMul(coeff29D9,prod29A9);
          real basisEval29E4#1 = RMul(one296C,prod29AD);
          real basisEval29E5#2 = RMul(coeff29D6,prod29B3);
          real basisEval29E6#1 = RMul(coeff29D9,prod29B6);
          real coeff29E7#3 = 0.5e1;
          real basisEval29E8#2 = RMul(coeff29E7,prod29BA);
          real basisEval29E9#2 = RMul(coeff296B,prod29BC);
          real basisEval29EA#1 = RMul(coeff29D9,prod29BE);
          real coeff29EB#6 = 0.8e1;
          real basisEval29EC#1 = RMul(coeff29EB,prod29C2);
          real basisEval29ED#2 = RMul(coeff29D6,prod29C4);
          real basisEval29EE#4 = RMul(coeff2978,prod29C6);
          real coeff29EF#3 = 0.9e1;
          real basisEval29F0#1 = RMul(coeff29EF,prod29C8);
          real basisEval29F1#1 = RMul(coeff29D9,prod29CA);
          real basisEval29F2#1 = RMul(coeff29EB,prod29CC);
          real basisEval29F3#2 = RMul(coeff29E7,prod29D0);
          real basisEval29F4#1 = RMul(one296C,prod2976);
          real basisEval29F5#2 = RMul(coeff29D6,prod297E);
          real basisEval29F6#1 = RMul(one296C,prod2985);
          real basisEval29F7#1 = RMul(coeff29D9,prod2987);
          real basisEval29F8#3 = RMul(coeff296B,prod2989);
          real basisEval29F9#2 = RMul(coeff29D9,prod2991);
          real basisEval29FA#1 = RMul(coeff29D6,prod2994);
          real basisEval29FB#1 = RMul(one296C,prod299B);
          real basisEval29FC#2 = RMul(coeff296B,prod29A1);
          real basisEval29FD#2 = RMul(coeff2978,prod29A3);
          real basisEval29FE#1 = RMul(coeff29D6,prod29A5);
          real basisEval29FF#2 = RMul(coeff29E7,prod29AD);
          real basisEval2A00#1 = RMul(coeff29D9,prod29B0);
          real basisEval2A01#1 = RMul(one296C,prod29BA);
          real basisEval2A02#1 = RMul(coeff29EB,prod29BC);
          real basisEval2A03#1 = RMul(coeff29D9,prod29C0);
          real basisEval2A04#2 = RMul(coeff296B,prod29C2);
          real basisEval2A05#1 = RMul(coeff29EF,prod29C4);
          real basisEval2A06#2 = RMul(coeff29D6,prod29C8);
          real basisEval2A07#1 = RMul(coeff29EB,prod29CA);
          real basisEval2A08#1 = RMul(coeff29D9,prod29CC);
          real basisEval2A09#1 = RMul(coeff2978,prod2976);
          real basisEval2A0A#2 = RMul(coeff2978,prod2981);
          real basisEval2A0B#1 = RMul(coeff298B,prod2985);
          real basisEval2A0C#2 = RMul(coeff296B,prod298D);
          real basisEval2A0D#2 = RMul(coeff2978,prod2994);
          real basisEval2A0E#1 = RMul(coeff298B,prod2997);
          real basisEval2A0F#1 = RMul(coeff29A7,prod299B);
          real basisEval2A10#1 = RMul(coeff298B,prod29A1);
          real basisEval2A11#2 = RMul(coeff296B,prod29A3);
          real basisEval2A12#2 = RMul(coeff296B,prod29A9);
          real basisEval2A13#1 = RMul(coeff2978,prod29B0);
          real basisEval2A14#2 = RMul(coeff298B,prod29B3);
          real basisEval2A15#1 = RMul(coeff29A7,prod29B6);
          real basisEval2A16#1 = RMul(coeff29CE,prod29BA);
          real basisEval2A17#1 = RMul(coeff298B,prod29C0);
          real basisEval2A18#1 = RMul(coeff29A7,prod29C2);
          real basisEval2A19#1 = RMul(coeff296B,prod29C4);
          real basisEval2A1A#2 = RMul(coeff296B,prod29CA);
          real basisEval2A1B#1 = RMul(coeff2978,prod29CC);
          real basisEval2A1C#2 = RMul(coeff296B,prod29D0);
          real basisEval2A1D#1 = RMul(one296C,prod297A);
          real basisEval2A1E#1 = RMul(coeff29D9,prod2981);
          real basisEval2A1F#1 = RMul(one296C,prod298D);
          real basisEval2A20#2 = RMul(coeff2978,prod2997);
          real basisEval2A21#1 = RMul(coeff29D6,prod299D);
          real basisEval2A22#1 = RMul(coeff29D6,prod29A1);
          real basisEval2A23#2 = RMul(coeff296B,prod29A5);
          real basisEval2A24#1 = RMul(one296C,prod29A9);
          real basisEval2A25#1 = RMul(coeff29EB,prod29B0);
          real basisEval2A26#1 = RMul(coeff29EF,prod29B3);
          real basisEval2A27#1 = RMul(coeff29EB,prod29B6);
          real basisEval2A28#1 = RMul(coeff29D9,prod29BC);
          real basisEval2A29#1 = RMul(coeff29D9,prod29C2);
          real basisEval2A2A#1 = RMul(coeff29D9,prod29C6);
          real basisEval2A2B#2 = RMul(coeff296B,prod29CC);
          real basisEval2A2C#1 = RMul(one296C,prod29D0);
          real basisEval2A2D#1 = RMul(coeff2978,prod2972);
          real basisEval2A2E#1 = RMul(coeff298B,prod297E);
          real basisEval2A2F#1 = RMul(coeff29A7,prod2991);
          real basisEval2A30#1 = RMul(coeff298B,prod2994);
          real basisEval2A31#1 = RMul(coeff298B,prod299D);
          real basisEval2A32#1 = RMul(coeff29CE,prod29AD);
          real basisEval2A33#1 = RMul(coeff29A7,prod29B0);
          real basisEval2A34#1 = RMul(coeff2978,prod29B6);
          real basisEval2A35#1 = RMul(coeff29A7,prod29BC);
          real basisEval2A36#1 = RMul(coeff298B,prod29BE);
          real basisEval2A37#1 = RMul(coeff296B,prod29C8);
          real basisEval2A38#1 = RMul(coeff2978,prod29CA);
          tensor[84] intermediateCons2A39#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval297B,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2982,basisEval2986,basisEval2988,basisEval298A,basisEval298E,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2995,basisEval2998,basisEval299C,basisEval299E,basisEval29A0,basisEval29A2,basisEval29A4,basisEval29A6,basisEval29AA,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval29B1,basisEval29B4,basisEval29B7,basisEval29BB,basisEval29BD,basisEval29BF,basisEval29C1,basisEval29C3,basisEval29C5,basisEval29C7,basisEval29C9,basisEval29CB,basisEval29CD,basisEval29D1];
          tensor[84] intermediateCons2A3A#2 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D3,basisEval2977,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D5,basisEval2982,basisEval29D7,basisEval296A,basisEval29D8,basisEval29DA,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29DC,basisEval2995,basisEval29DD,basisEval29DE,basisEval296A,basisEval29DF,basisEval29E0,basisEval29A2,basisEval296A,basisEval29E1,basisEval29E2,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29E4,basisEval29B1,basisEval29E5,basisEval29E6,basisEval29E8,basisEval296A,basisEval29E9,basisEval29EA,basisEval29C1,basisEval29EC,basisEval296A,basisEval29ED,basisEval29EE,basisEval29F0,basisEval296A,basisEval29F1,basisEval29F2,basisEval296A,basisEval29F3,basisEval296A];
          tensor[84] intermediateCons2A3B#2 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval29F4,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2982,basisEval29F6,basisEval296A,basisEval29F7,basisEval29F8,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval29FA,basisEval2998,basisEval29FB,basisEval296A,basisEval299E,basisEval29E0,basisEval29FC,basisEval296A,basisEval29FD,basisEval29FE,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A00,basisEval29E5,basisEval29B7,basisEval2A01,basisEval296A,basisEval2A02,basisEval29BF,basisEval2A03,basisEval2A04,basisEval296A,basisEval2A05,basisEval29EE,basisEval2A06,basisEval296A,basisEval2A07,basisEval2A08,basisEval296A,basisEval29F3,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3C#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2A09,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2A0A,basisEval2A0B,basisEval296A,basisEval296A,basisEval29D8,basisEval298A,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2A0D,basisEval2A0E,basisEval2A0F,basisEval296A,basisEval296A,basisEval29DF,basisEval29A0,basisEval2A10,basisEval296A,basisEval296A,basisEval2A11,basisEval29E2,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2A16,basisEval296A,basisEval296A,basisEval29E9,basisEval29BF,basisEval2A17,basisEval2A18,basisEval296A,basisEval296A,basisEval2A19,basisEval29EE,basisEval29C9,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A1B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3D#2 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval296A,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2A1E,basisEval29D7,basisEval296A,basisEval296A,basisEval29D8,basisEval29F8,basisEval296A,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval2A0D,basisEval2A20,basisEval29DE,basisEval296A,basisEval296A,basisEval2A21,basisEval29E0,basisEval2A22,basisEval296A,basisEval296A,basisEval2A11,basisEval2A23,basisEval296A,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A25,basisEval2A26,basisEval2A27,basisEval29E8,basisEval296A,basisEval296A,basisEval2A28,basisEval29BF,basisEval29C1,basisEval2A29,basisEval296A,basisEval296A,basisEval29ED,basisEval2A2A,basisEval2A06,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3E#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2D,basisEval2977,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2E,basisEval2A0A,basisEval2986,basisEval296A,basisEval296A,basisEval2988,basisEval29F8,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2F,basisEval2A30,basisEval2A20,basisEval299C,basisEval296A,basisEval296A,basisEval2A31,basisEval29A0,basisEval29FC,basisEval296A,basisEval296A,basisEval29FD,basisEval2A23,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A32,basisEval2A33,basisEval2A14,basisEval2A34,basisEval29BB,basisEval296A,basisEval296A,basisEval2A35,basisEval2A36,basisEval29C1,basisEval2A04,basisEval296A,basisEval296A,basisEval29C5,basisEval29EE,basisEval2A37,basisEval296A,basisEval296A,basisEval2A38,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          tensor[3,84] intermediateCons2A3F#1 = <tensor[3,84]>[intermediateCons2A39,intermediateCons2A3A,intermediateCons2A3B];
          tensor[3,84] intermediateCons2A40#1 = <tensor[3,84]>[intermediateCons2A3A,intermediateCons2A3C,intermediateCons2A3D];
          tensor[3,84] intermediateCons2A41#1 = <tensor[3,84]>[intermediateCons2A3B,intermediateCons2A3D,intermediateCons2A3E];
          tensor[3,3,84] intermediateCons2A42#1 = <tensor[3,3,84]>[intermediateCons2A3F,intermediateCons2A40,intermediateCons2A41];
          tensor[3,3,84] basisResult2966#9 = intermediateCons2A42;
          tensor[84] projParam2B21#1 = ProjectLast<tensor[3,3,84],[0,0]>(basisResult2966);
          real vdot2B22#1 = VDot<84>(femDofs26C2,projParam2B21);
          tensor[84] projParam2B23#1 = ProjectLast<tensor[3,3,84],[0,1]>(basisResult2966);
          real vdot2B24#1 = VDot<84>(femDofs26C2,projParam2B23);
          tensor[84] projParam2B25#1 = ProjectLast<tensor[3,3,84],[0,2]>(basisResult2966);
          real vdot2B26#1 = VDot<84>(femDofs26C2,projParam2B25);
          tensor[3] tensor2B27#1 = <tensor[3]>[vdot2B22,vdot2B24,vdot2B26];
          tensor[84] projParam2B28#1 = ProjectLast<tensor[3,3,84],[1,0]>(basisResult2966);
          real vdot2B29#1 = VDot<84>(femDofs26C2,projParam2B28);
          tensor[84] projParam2B2A#1 = ProjectLast<tensor[3,3,84],[1,1]>(basisResult2966);
          real vdot2B2B#1 = VDot<84>(femDofs26C2,projParam2B2A);
          tensor[84] projParam2B2C#1 = ProjectLast<tensor[3,3,84],[1,2]>(basisResult2966);
          real vdot2B2D#1 = VDot<84>(femDofs26C2,projParam2B2C);
          tensor[3] tensor2B2E#1 = <tensor[3]>[vdot2B29,vdot2B2B,vdot2B2D];
          tensor[84] projParam2B2F#1 = ProjectLast<tensor[3,3,84],[2,0]>(basisResult2966);
          real vdot2B30#1 = VDot<84>(femDofs26C2,projParam2B2F);
          tensor[84] projParam2B31#1 = ProjectLast<tensor[3,3,84],[2,1]>(basisResult2966);
          real vdot2B32#1 = VDot<84>(femDofs26C2,projParam2B31);
          tensor[84] projParam2B33#1 = ProjectLast<tensor[3,3,84],[2,2]>(basisResult2966);
          real vdot2B34#1 = VDot<84>(femDofs26C2,projParam2B33);
          tensor[3] tensor2B35#1 = <tensor[3]>[vdot2B30,vdot2B32,vdot2B34];
          tensor[3,3] _t2B20#1 = <tensor[3,3]>[tensor2B27,tensor2B2E,tensor2B35];
          real[3] _t2B4D#1 = EigenVals3x3(_t2B20);
          int _t2B4F#1 = 1;
          real _t2B51#1 = Subscript<real[3]>(_t2B4D,_t2B4F);
          real varAcc2B54#5 = VIndex<3,0>(pos24B8);
          real varAcc2B55#5 = VIndex<3,1>(pos24B8);
          real varAcc2B56#5 = VIndex<3,2>(pos24B8);
          real basisEval2B57#84 = 0.e0;
          real coeff2B58#79 = 0.1e1;
          real prod2B59#6 = RMul(coeff2B58,coeff2B58);
          real prod2B5A#1 = RMul(coeff2B58,prod2B59);
          real basisEval2B5B#3 = RMul(coeff2B58,prod2B5A);
          real iden2B5C#6 = varAcc2B56;
          real prod2B5D#5 = RMul(coeff2B58,iden2B5C);
          real prod2B5E#2 = RMul(coeff2B58,prod2B5D);
          real basisEval2B5F#2 = RMul(coeff2B58,prod2B5E);
          real iden2B60#6 = varAcc2B55;
          real prod2B61#5 = RMul(iden2B60,coeff2B58);
          real prod2B62#2 = RMul(coeff2B58,prod2B61);
          real basisEval2B63#2 = RMul(coeff2B58,prod2B62);
          real coeff2B64#34 = 0.2e1;
          real iden2B65#16 = varAcc2B54;
          real prod2B66#2 = RMul(iden2B65,prod2B59);
          real basisEval2B67#1 = RMul(coeff2B64,prod2B66);
          real prod22B68#5 = RMul(iden2B5C,varAcc2B56);
          real prod2B69#4 = RMul(coeff2B58,prod22B68);
          real prod2B6A#2 = RMul(coeff2B58,prod2B69);
          real basisEval2B6B#2 = RMul(coeff2B58,prod2B6A);
          real prod2B6C#4 = RMul(iden2B60,iden2B5C);
          real prod2B6D#2 = RMul(coeff2B58,prod2B6C);
          real basisEval2B6E#1 = RMul(coeff2B58,prod2B6D);
          real prod22B6F#5 = RMul(iden2B60,varAcc2B55);
          real prod2B70#4 = RMul(prod22B6F,coeff2B58);
          real prod2B71#2 = RMul(coeff2B58,prod2B70);
          real basisEval2B72#2 = RMul(coeff2B58,prod2B71);
          real prod2B73#2 = RMul(iden2B65,prod2B5D);
          real basisEval2B74#2 = RMul(coeff2B64,prod2B73);
          real prod2B75#2 = RMul(iden2B65,prod2B61);
          real basisEval2B76#2 = RMul(coeff2B64,prod2B75);
          real coeff2B77#24 = 0.3e1;
          real prod22B78#11 = RMul(iden2B65,varAcc2B54);
          real prod2B79#2 = RMul(prod22B78,prod2B59);
          real basisEval2B7A#1 = RMul(coeff2B77,prod2B79);
          real prod32B7B#4 = RMul(prod22B68,varAcc2B56);
          real prod2B7C#3 = RMul(coeff2B58,prod32B7B);
          real prod2B7D#2 = RMul(coeff2B58,prod2B7C);
          real basisEval2B7E#2 = RMul(coeff2B58,prod2B7D);
          real prod2B7F#3 = RMul(iden2B60,prod22B68);
          real prod2B80#3 = RMul(coeff2B58,prod2B7F);
          real basisEval2B81#1 = RMul(coeff2B58,prod2B80);
          real prod2B82#3 = RMul(prod22B6F,iden2B5C);
          real prod2B83#3 = RMul(coeff2B58,prod2B82);
          real basisEval2B84#1 = RMul(coeff2B58,prod2B83);
          real prod32B85#4 = RMul(prod22B6F,varAcc2B55);
          real prod2B86#3 = RMul(prod32B85,coeff2B58);
          real prod2B87#2 = RMul(coeff2B58,prod2B86);
          real basisEval2B88#2 = RMul(coeff2B58,prod2B87);
          real prod2B89#3 = RMul(iden2B65,prod2B69);
          real basisEval2B8A#1 = RMul(coeff2B64,prod2B89);
          real prod2B8B#1 = RMul(iden2B65,prod2B6C);
          real basisEval2B8C#3 = RMul(coeff2B64,prod2B8B);
          real prod2B8D#3 = RMul(iden2B65,prod2B70);
          real basisEval2B8E#1 = RMul(coeff2B64,prod2B8D);
          real prod2B8F#3 = RMul(prod22B78,prod2B5D);
          real basisEval2B90#1 = RMul(coeff2B77,prod2B8F);
          real prod2B91#3 = RMul(prod22B78,prod2B61);
          real basisEval2B92#1 = RMul(coeff2B77,prod2B91);
          real coeff2B93#18 = 0.4e1;
          real prod32B94#7 = RMul(prod22B78,varAcc2B54);
          real prod2B95#2 = RMul(prod32B94,prod2B59);
          real basisEval2B96#1 = RMul(coeff2B93,prod2B95);
          real prod42B97#3 = RMul(prod32B7B,varAcc2B56);
          real prod2B98#2 = RMul(coeff2B58,prod42B97);
          real prod2B99#2 = RMul(coeff2B58,prod2B98);
          real basisEval2B9A#2 = RMul(coeff2B58,prod2B99);
          real prod2B9B#2 = RMul(iden2B60,prod32B7B);
          real prod2B9C#3 = RMul(coeff2B58,prod2B9B);
          real basisEval2B9D#1 = RMul(coeff2B58,prod2B9C);
          real prod2B9E#2 = RMul(prod22B6F,prod22B68);
          real prod2B9F#2 = RMul(coeff2B58,prod2B9E);
          real basisEval2BA0#1 = RMul(coeff2B58,prod2B9F);
          real prod2BA1#2 = RMul(prod32B85,iden2B5C);
          real prod2BA2#3 = RMul(coeff2B58,prod2BA1);
          real basisEval2BA3#1 = RMul(coeff2B58,prod2BA2);
          real prod42BA4#3 = RMul(prod32B85,varAcc2B55);
          real prod2BA5#2 = RMul(prod42BA4,coeff2B58);
          real prod2BA6#2 = RMul(coeff2B58,prod2BA5);
          real basisEval2BA7#2 = RMul(coeff2B58,prod2BA6);
          real prod2BA8#3 = RMul(iden2B65,prod2B7C);
          real basisEval2BA9#1 = RMul(coeff2B64,prod2BA8);
          real prod2BAA#2 = RMul(iden2B65,prod2B7F);
          real basisEval2BAB#2 = RMul(coeff2B64,prod2BAA);
          real prod2BAC#2 = RMul(iden2B65,prod2B82);
          real basisEval2BAD#2 = RMul(coeff2B64,prod2BAC);
          real prod2BAE#3 = RMul(iden2B65,prod2B86);
          real basisEval2BAF#1 = RMul(coeff2B64,prod2BAE);
          real prod2BB0#2 = RMul(prod22B78,prod2B69);
          real basisEval2BB1#2 = RMul(coeff2B77,prod2BB0);
          real prod2BB2#2 = RMul(prod22B78,prod2B6C);
          real basisEval2BB3#1 = RMul(coeff2B77,prod2BB2);
          real prod2BB4#2 = RMul(prod22B78,prod2B70);
          real basisEval2BB5#2 = RMul(coeff2B77,prod2BB4);
          real prod2BB6#3 = RMul(prod32B94,prod2B5D);
          real basisEval2BB7#1 = RMul(coeff2B93,prod2BB6);
          real prod2BB8#3 = RMul(prod32B94,prod2B61);
          real basisEval2BB9#1 = RMul(coeff2B93,prod2BB8);
          real coeff2BBA#9 = 0.5e1;
          real prod42BBB#4 = RMul(prod32B94,varAcc2B54);
          real prod2BBC#2 = RMul(prod42BBB,prod2B59);
          real basisEval2BBD#1 = RMul(coeff2BBA,prod2BBC);
          real prod52BBE#1 = RMul(prod42B97,varAcc2B56);
          real prod2BBF#1 = RMul(coeff2B58,prod52BBE);
          real prod2BC0#2 = RMul(coeff2B58,prod2BBF);
          real basisEval2BC1#2 = RMul(coeff2B58,prod2BC0);
          real prod2BC2#1 = RMul(iden2B60,prod42B97);
          real prod2BC3#3 = RMul(coeff2B58,prod2BC2);
          real basisEval2BC4#1 = RMul(coeff2B58,prod2BC3);
          real prod2BC5#1 = RMul(prod22B6F,prod32B7B);
          real prod2BC6#3 = RMul(coeff2B58,prod2BC5);
          real basisEval2BC7#1 = RMul(coeff2B58,prod2BC6);
          real prod2BC8#1 = RMul(prod32B85,prod22B68);
          real prod2BC9#3 = RMul(coeff2B58,prod2BC8);
          real basisEval2BCA#1 = RMul(coeff2B58,prod2BC9);
          real prod2BCB#1 = RMul(prod42BA4,iden2B5C);
          real prod2BCC#3 = RMul(coeff2B58,prod2BCB);
          real basisEval2BCD#1 = RMul(coeff2B58,prod2BCC);
          real prod52BCE#1 = RMul(prod42BA4,varAcc2B55);
          real prod2BCF#1 = RMul(prod52BCE,coeff2B58);
          real prod2BD0#2 = RMul(coeff2B58,prod2BCF);
          real basisEval2BD1#2 = RMul(coeff2B58,prod2BD0);
          real prod2BD2#3 = RMul(iden2B65,prod2B98);
          real basisEval2BD3#1 = RMul(coeff2B64,prod2BD2);
          real prod2BD4#2 = RMul(iden2B65,prod2B9B);
          real basisEval2BD5#2 = RMul(coeff2B64,prod2BD4);
          real prod2BD6#2 = RMul(iden2B65,prod2B9E);
          real basisEval2BD7#1 = RMul(coeff2B64,prod2BD6);
          real prod2BD8#2 = RMul(iden2B65,prod2BA1);
          real basisEval2BD9#2 = RMul(coeff2B64,prod2BD8);
          real prod2BDA#3 = RMul(iden2B65,prod2BA5);
          real basisEval2BDB#1 = RMul(coeff2B64,prod2BDA);
          real prod2BDC#3 = RMul(prod22B78,prod2B7C);
          real basisEval2BDD#1 = RMul(coeff2B77,prod2BDC);
          real prod2BDE#2 = RMul(prod22B78,prod2B7F);
          real basisEval2BDF#2 = RMul(coeff2B77,prod2BDE);
          real prod2BE0#2 = RMul(prod22B78,prod2B82);
          real basisEval2BE1#2 = RMul(coeff2B77,prod2BE0);
          real prod2BE2#3 = RMul(prod22B78,prod2B86);
          real basisEval2BE3#1 = RMul(coeff2B77,prod2BE2);
          real prod2BE4#3 = RMul(prod32B94,prod2B69);
          real basisEval2BE5#1 = RMul(coeff2B93,prod2BE4);
          real prod2BE6#2 = RMul(prod32B94,prod2B6C);
          real basisEval2BE7#1 = RMul(coeff2B93,prod2BE6);
          real prod2BE8#3 = RMul(prod32B94,prod2B70);
          real basisEval2BE9#1 = RMul(coeff2B93,prod2BE8);
          real prod2BEA#3 = RMul(prod42BBB,prod2B5D);
          real basisEval2BEB#1 = RMul(coeff2BBA,prod2BEA);
          real prod2BEC#3 = RMul(prod42BBB,prod2B61);
          real basisEval2BED#1 = RMul(coeff2BBA,prod2BEC);
          real coeff2BEE#3 = 0.6e1;
          real prod52BEF#1 = RMul(prod42BBB,varAcc2B54);
          real prod2BF0#2 = RMul(prod52BEF,prod2B59);
          real basisEval2BF1#1 = RMul(coeff2BEE,prod2BF0);
          real basisEval2BF2#1 = RMul(coeff2B64,prod2B62);
          real basisEval2BF3#2 = RMul(coeff2B58,prod2B66);
          real basisEval2BF4#2 = RMul(coeff2B64,prod2B6D);
          real basisEval2BF5#1 = RMul(coeff2B77,prod2B71);
          real basisEval2BF6#1 = RMul(coeff2B58,prod2B73);
          real basisEval2BF7#2 = RMul(coeff2B58,prod2B79);
          real basisEval2BF8#1 = RMul(coeff2B64,prod2B80);
          real basisEval2BF9#1 = RMul(coeff2B77,prod2B83);
          real basisEval2BFA#1 = RMul(coeff2B93,prod2B87);
          real basisEval2BFB#1 = RMul(coeff2B58,prod2B89);
          real basisEval2BFC#1 = RMul(coeff2B77,prod2B8D);
          real basisEval2BFD#1 = RMul(coeff2B58,prod2B8F);
          real basisEval2BFE#1 = RMul(coeff2B64,prod2B91);
          real basisEval2BFF#2 = RMul(coeff2B58,prod2B95);
          real basisEval2C00#1 = RMul(coeff2B64,prod2B9C);
          real basisEval2C01#2 = RMul(coeff2B77,prod2B9F);
          real basisEval2C02#1 = RMul(coeff2B93,prod2BA2);
          real basisEval2C03#1 = RMul(coeff2BBA,prod2BA6);
          real basisEval2C04#1 = RMul(coeff2B58,prod2BA8);
          real basisEval2C05#1 = RMul(coeff2B77,prod2BAC);
          real basisEval2C06#1 = RMul(coeff2B93,prod2BAE);
          real basisEval2C07#1 = RMul(coeff2B58,prod2BB0);
          real basisEval2C08#2 = RMul(coeff2B64,prod2BB2);
          real basisEval2C09#1 = RMul(coeff2B58,prod2BB6);
          real basisEval2C0A#1 = RMul(coeff2B64,prod2BB8);
          real basisEval2C0B#2 = RMul(coeff2B58,prod2BBC);
          real basisEval2C0C#1 = RMul(coeff2B64,prod2BC3);
          real basisEval2C0D#1 = RMul(coeff2B77,prod2BC6);
          real basisEval2C0E#1 = RMul(coeff2B93,prod2BC9);
          real basisEval2C0F#1 = RMul(coeff2BBA,prod2BCC);
          real basisEval2C10#1 = RMul(coeff2BEE,prod2BD0);
          real basisEval2C11#1 = RMul(coeff2B58,prod2BD2);
          real basisEval2C12#2 = RMul(coeff2B77,prod2BD6);
          real basisEval2C13#1 = RMul(coeff2B93,prod2BD8);
          real basisEval2C14#1 = RMul(coeff2BBA,prod2BDA);
          real basisEval2C15#1 = RMul(coeff2B58,prod2BDC);
          real basisEval2C16#1 = RMul(coeff2B64,prod2BDE);
          real basisEval2C17#1 = RMul(coeff2B93,prod2BE2);
          real basisEval2C18#1 = RMul(coeff2B58,prod2BE4);
          real basisEval2C19#2 = RMul(coeff2B64,prod2BE6);
          real basisEval2C1A#1 = RMul(coeff2B77,prod2BE8);
          real basisEval2C1B#1 = RMul(coeff2B58,prod2BEA);
          real basisEval2C1C#1 = RMul(coeff2B64,prod2BEC);
          real basisEval2C1D#2 = RMul(coeff2B58,prod2BF0);
          real basisEval2C1E#1 = RMul(coeff2B64,prod2B5E);
          real basisEval2C1F#1 = RMul(coeff2B77,prod2B6A);
          real basisEval2C20#1 = RMul(coeff2B58,prod2B75);
          real basisEval2C21#1 = RMul(coeff2B93,prod2B7D);
          real basisEval2C22#1 = RMul(coeff2B77,prod2B80);
          real basisEval2C23#1 = RMul(coeff2B64,prod2B83);
          real basisEval2C24#1 = RMul(coeff2B77,prod2B89);
          real basisEval2C25#1 = RMul(coeff2B58,prod2B8D);
          real basisEval2C26#1 = RMul(coeff2B64,prod2B8F);
          real basisEval2C27#1 = RMul(coeff2B58,prod2B91);
          real basisEval2C28#1 = RMul(coeff2BBA,prod2B99);
          real basisEval2C29#1 = RMul(coeff2B93,prod2B9C);
          real basisEval2C2A#1 = RMul(coeff2B64,prod2BA2);
          real basisEval2C2B#1 = RMul(coeff2B93,prod2BA8);
          real basisEval2C2C#1 = RMul(coeff2B77,prod2BAA);
          real basisEval2C2D#1 = RMul(coeff2B58,prod2BAE);
          real basisEval2C2E#1 = RMul(coeff2B58,prod2BB4);
          real basisEval2C2F#1 = RMul(coeff2B64,prod2BB6);
          real basisEval2C30#1 = RMul(coeff2B58,prod2BB8);
          real basisEval2C31#1 = RMul(coeff2BEE,prod2BC0);
          real basisEval2C32#1 = RMul(coeff2BBA,prod2BC3);
          real basisEval2C33#1 = RMul(coeff2B93,prod2BC6);
          real basisEval2C34#1 = RMul(coeff2B77,prod2BC9);
          real basisEval2C35#1 = RMul(coeff2B64,prod2BCC);
          real basisEval2C36#1 = RMul(coeff2BBA,prod2BD2);
          real basisEval2C37#1 = RMul(coeff2B93,prod2BD4);
          real basisEval2C38#1 = RMul(coeff2B58,prod2BDA);
          real basisEval2C39#1 = RMul(coeff2B93,prod2BDC);
          real basisEval2C3A#1 = RMul(coeff2B64,prod2BE0);
          real basisEval2C3B#1 = RMul(coeff2B58,prod2BE2);
          real basisEval2C3C#1 = RMul(coeff2B77,prod2BE4);
          real basisEval2C3D#1 = RMul(coeff2B58,prod2BE8);
          real basisEval2C3E#1 = RMul(coeff2B64,prod2BEA);
          real basisEval2C3F#1 = RMul(coeff2B58,prod2BEC);
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B5B,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B5F,basisEval2B63,basisEval2B67,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B6B,basisEval2B6E,basisEval2B72,basisEval2B74,basisEval2B76,basisEval2B7A,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B7E,basisEval2B81,basisEval2B84,basisEval2B88,basisEval2B8A,basisEval2B8C,basisEval2B8E,basisEval2B90,basisEval2B92,basisEval2B96,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B9A,basisEval2B9D,basisEval2BA0,basisEval2BA3,basisEval2BA7,basisEval2BA9,basisEval2BAB,basisEval2BAD,basisEval2BAF,basisEval2BB1,basisEval2BB3,basisEval2BB5,basisEval2BB7,basisEval2BB9,basisEval2BBD,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2BC1,basisEval2BC4,basisEval2BC7,basisEval2BCA,basisEval2BCD,basisEval2BD1,basisEval2BD3,basisEval2BD5,basisEval2BD7,basisEval2BD9,basisEval2BDB,basisEval2BDD,basisEval2BDF,basisEval2BE1,basisEval2BE3,basisEval2BE5,basisEval2BE7,basisEval2BE9,basisEval2BEB,basisEval2BED,basisEval2BF1];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval2B57,basisEval2B57,basisEval2B5B,basisEval2B57,basisEval2B57,basisEval2B5F,basisEval2BF2,basisEval2B57,basisEval2BF3,basisEval2B57,basisEval2B57,basisEval2B6B,basisEval2BF4,basisEval2BF5,basisEval2B57,basisEval2BF6,basisEval2B76,basisEval2B57,basisEval2BF7,basisEval2B57,basisEval2B57,basisEval2B7E,basisEval2BF8,basisEval2BF9,basisEval2BFA,basisEval2B57,basisEval2BFB,basisEval2B8C,basisEval2BFC,basisEval2B57,basisEval2BFD,basisEval2BFE,basisEval2B57,basisEval2BFF,basisEval2B57,basisEval2B57,basisEval2B9A,basisEval2C00,basisEval2C01,basisEval2C02,basisEval2C03,basisEval2B57,basisEval2C04,basisEval2BAB,basisEval2C05,basisEval2C06,basisEval2B57,basisEval2C07,basisEval2C08,basisEval2BB5,basisEval2B57,basisEval2C09,basisEval2C0A,basisEval2B57,basisEval2C0B,basisEval2B57,basisEval2B57,basisEval2BC1,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2C10,basisEval2B57,basisEval2C11,basisEval2BD5,basisEval2C12,basisEval2C13,basisEval2C14,basisEval2B57,basisEval2C15,basisEval2C16,basisEval2BE1,basisEval2C17,basisEval2B57,basisEval2C18,basisEval2C19,basisEval2C1A,basisEval2B57,basisEval2C1B,basisEval2C1C,basisEval2B57,basisEval2C1D,basisEval2B57];
          tensor[84] intermediateCons2C42#1 = <tensor[84]>[basisEval2B57,basisEval2B5B,basisEval2B57,basisEval2B57,basisEval2C1E,basisEval2B63,basisEval2B57,basisEval2BF3,basisEval2B57,basisEval2B57,basisEval2C1F,basisEval2BF4,basisEval2B72,basisEval2B57,basisEval2B74,basisEval2C20,basisEval2B57,basisEval2BF7,basisEval2B57,basisEval2B57,basisEval2C21,basisEval2C22,basisEval2C23,basisEval2B88,basisEval2B57,basisEval2C24,basisEval2B8C,basisEval2C25,basisEval2B57,basisEval2C26,basisEval2C27,basisEval2B57,basisEval2BFF,basisEval2B57,basisEval2B57,basisEval2C28,basisEval2C29,basisEval2C01,basisEval2C2A,basisEval2BA7,basisEval2B57,basisEval2C2B,basisEval2C2C,basisEval2BAD,basisEval2C2D,basisEval2B57,basisEval2BB1,basisEval2C08,basisEval2C2E,basisEval2B57,basisEval2C2F,basisEval2C30,basisEval2B57,basisEval2C0B,basisEval2B57,basisEval2B57,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2C35,basisEval2BD1,basisEval2B57,basisEval2C36,basisEval2C37,basisEval2C12,basisEval2BD9,basisEval2C38,basisEval2B57,basisEval2C39,basisEval2BDF,basisEval2C3A,basisEval2C3B,basisEval2B57,basisEval2C3C,basisEval2C19,basisEval2C3D,basisEval2B57,basisEval2C3E,basisEval2C3F,basisEval2B57,basisEval2C1D,basisEval2B57,basisEval2B57];
          tensor[3,84] intermediateCons2C43#1 = <tensor[3,84]>[intermediateCons2C40,intermediateCons2C41,intermediateCons2C42];
          tensor[3,84] basisResult2B53#3 = intermediateCons2C43;
          tensor[84] projParam2D36#1 = ProjectLast<tensor[3,84],[0]>(basisResult2B53);
          real vdot2D37#1 = VDot<84>(femDofs26C2,projParam2D36);
          tensor[84] projParam2D38#1 = ProjectLast<tensor[3,84],[1]>(basisResult2B53);
          real vdot2D39#1 = VDot<84>(femDofs26C2,projParam2D38);
          tensor[84] projParam2D3A#1 = ProjectLast<tensor[3,84],[2]>(basisResult2B53);
          real vdot2D3B#1 = VDot<84>(femDofs26C2,projParam2D3A);
          tensor[3] probe_l_62D35#2 = <tensor[3]>[vdot2D37,vdot2D39,vdot2D3B];
          real op1_e3_l_82D44#1 = VDot<3>(probe_l_62D35,probe_l_62D35);
          real op1_e3_l_92D47#1 = Sqrt(op1_e3_l_82D44);
          real op1_e3_l_102D4A#1 = RNeg(_t2B51);
          real op1_e3_l_112D4D#1 = RAdd(fBias2484,op1_e3_l_92D47);
          real _t2D50#1 = RDiv(op1_e3_l_102D4A,op1_e3_l_112D4D);
          bool _t2D53#1 = GT<real>(_t2D50,fStrTh2480);
          if _t2D53 then goto ASSIGN2D57 else goto ASSIGN46AD
        ASSIGN2D57:  preds = [COND2D55]
          real _t2D56#1 = 0.1e1;
          bool _t2D58#1 = GTE<real>(_t2D56,fMaskTh2482);
          if _t2D58 then goto ASSIGN2D5C else goto ASSIGN46AC
        ASSIGN2D5C:  preds = [COND2D5A]
          bool _t2D5B#1 = true;
          goto JOIN2D5F
        JOIN2D5F:  preds = [ASSIGN2D5C,ASSIGN46AC]
          bool _t2D5D#1 = phi(_t2D5B,_t2D5E)
          goto JOIN2D62
        JOIN2D62:  preds = [JOIN2D5F,ASSIGN46AD]
          bool _t2D60#1 = phi(_t2D5D,_t2D61)
          goto JOIN2D65
        JOIN2D65:  preds = [JOIN2D62,ASSIGN46AE]
          bool _t2D63#1 = phi(_t2D60,_t2D64)
          bool _t2D66#1 = BNot(_t2D63);
          if _t2D66 then goto SAVE2D69 else goto JOIN2D6B
        SAVE2D69:  preds = [COND2D68]
          self.rayN = rayN24AC;
          active
          goto JOIN2D6B
        JOIN2D6B:  preds = [*ACTIVE2D6A,COND2D68]
          bool _t2D6C#1 = BNot(analytical248E);
          if _t2D6C then goto ASSIGN2E6F else goto ASSIGN3EA1
        ASSIGN2E6F:  preds = [COND2D6E]
          int ilit2D70#1 = 84;
          int mulRes2D71#84 = IMul(_t246C,ilit2D70);
          int ilit2D72#1 = 0;
          int addRes2D73#1 = IAdd(mulRes2D71,ilit2D72);
          int idx2D74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D73);
          int ilit2D75#1 = 1;
          int addRes2D76#1 = IAdd(mulRes2D71,ilit2D75);
          int idx2D77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D76);
          int ilit2D78#1 = 2;
          int addRes2D79#1 = IAdd(mulRes2D71,ilit2D78);
          int idx2D7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D79);
          int ilit2D7B#1 = 3;
          int addRes2D7C#1 = IAdd(mulRes2D71,ilit2D7B);
          int idx2D7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7C);
          int ilit2D7E#1 = 4;
          int addRes2D7F#1 = IAdd(mulRes2D71,ilit2D7E);
          int idx2D80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7F);
          int ilit2D81#1 = 5;
          int addRes2D82#1 = IAdd(mulRes2D71,ilit2D81);
          int idx2D83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D82);
          int ilit2D84#1 = 6;
          int addRes2D85#1 = IAdd(mulRes2D71,ilit2D84);
          int idx2D86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D85);
          int ilit2D87#1 = 7;
          int addRes2D88#1 = IAdd(mulRes2D71,ilit2D87);
          int idx2D89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D88);
          int ilit2D8A#1 = 8;
          int addRes2D8B#1 = IAdd(mulRes2D71,ilit2D8A);
          int idx2D8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8B);
          int ilit2D8D#1 = 9;
          int addRes2D8E#1 = IAdd(mulRes2D71,ilit2D8D);
          int idx2D8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8E);
          int ilit2D90#1 = 10;
          int addRes2D91#1 = IAdd(mulRes2D71,ilit2D90);
          int idx2D92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D91);
          int ilit2D93#1 = 11;
          int addRes2D94#1 = IAdd(mulRes2D71,ilit2D93);
          int idx2D95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D94);
          int ilit2D96#1 = 12;
          int addRes2D97#1 = IAdd(mulRes2D71,ilit2D96);
          int idx2D98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D97);
          int ilit2D99#1 = 13;
          int addRes2D9A#1 = IAdd(mulRes2D71,ilit2D99);
          int idx2D9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9A);
          int ilit2D9C#1 = 14;
          int addRes2D9D#1 = IAdd(mulRes2D71,ilit2D9C);
          int idx2D9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9D);
          int ilit2D9F#1 = 15;
          int addRes2DA0#1 = IAdd(mulRes2D71,ilit2D9F);
          int idx2DA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA0);
          int ilit2DA2#1 = 16;
          int addRes2DA3#1 = IAdd(mulRes2D71,ilit2DA2);
          int idx2DA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA3);
          int ilit2DA5#1 = 17;
          int addRes2DA6#1 = IAdd(mulRes2D71,ilit2DA5);
          int idx2DA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA6);
          int ilit2DA8#1 = 18;
          int addRes2DA9#1 = IAdd(mulRes2D71,ilit2DA8);
          int idx2DAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA9);
          int ilit2DAB#1 = 19;
          int addRes2DAC#1 = IAdd(mulRes2D71,ilit2DAB);
          int idx2DAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAC);
          int ilit2DAE#1 = 20;
          int addRes2DAF#1 = IAdd(mulRes2D71,ilit2DAE);
          int idx2DB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAF);
          int ilit2DB1#1 = 21;
          int addRes2DB2#1 = IAdd(mulRes2D71,ilit2DB1);
          int idx2DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB2);
          int ilit2DB4#1 = 22;
          int addRes2DB5#1 = IAdd(mulRes2D71,ilit2DB4);
          int idx2DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB5);
          int ilit2DB7#1 = 23;
          int addRes2DB8#1 = IAdd(mulRes2D71,ilit2DB7);
          int idx2DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB8);
          int ilit2DBA#1 = 24;
          int addRes2DBB#1 = IAdd(mulRes2D71,ilit2DBA);
          int idx2DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBB);
          int ilit2DBD#1 = 25;
          int addRes2DBE#1 = IAdd(mulRes2D71,ilit2DBD);
          int idx2DBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBE);
          int ilit2DC0#1 = 26;
          int addRes2DC1#1 = IAdd(mulRes2D71,ilit2DC0);
          int idx2DC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC1);
          int ilit2DC3#1 = 27;
          int addRes2DC4#1 = IAdd(mulRes2D71,ilit2DC3);
          int idx2DC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC4);
          int ilit2DC6#1 = 28;
          int addRes2DC7#1 = IAdd(mulRes2D71,ilit2DC6);
          int idx2DC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC7);
          int ilit2DC9#1 = 29;
          int addRes2DCA#1 = IAdd(mulRes2D71,ilit2DC9);
          int idx2DCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCA);
          int ilit2DCC#1 = 30;
          int addRes2DCD#1 = IAdd(mulRes2D71,ilit2DCC);
          int idx2DCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCD);
          int ilit2DCF#1 = 31;
          int addRes2DD0#1 = IAdd(mulRes2D71,ilit2DCF);
          int idx2DD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD0);
          int ilit2DD2#1 = 32;
          int addRes2DD3#1 = IAdd(mulRes2D71,ilit2DD2);
          int idx2DD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD3);
          int ilit2DD5#1 = 33;
          int addRes2DD6#1 = IAdd(mulRes2D71,ilit2DD5);
          int idx2DD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD6);
          int ilit2DD8#1 = 34;
          int addRes2DD9#1 = IAdd(mulRes2D71,ilit2DD8);
          int idx2DDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD9);
          int ilit2DDB#1 = 35;
          int addRes2DDC#1 = IAdd(mulRes2D71,ilit2DDB);
          int idx2DDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDC);
          int ilit2DDE#1 = 36;
          int addRes2DDF#1 = IAdd(mulRes2D71,ilit2DDE);
          int idx2DE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDF);
          int ilit2DE1#1 = 37;
          int addRes2DE2#1 = IAdd(mulRes2D71,ilit2DE1);
          int idx2DE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE2);
          int ilit2DE4#1 = 38;
          int addRes2DE5#1 = IAdd(mulRes2D71,ilit2DE4);
          int idx2DE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE5);
          int ilit2DE7#1 = 39;
          int addRes2DE8#1 = IAdd(mulRes2D71,ilit2DE7);
          int idx2DE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE8);
          int ilit2DEA#1 = 40;
          int addRes2DEB#1 = IAdd(mulRes2D71,ilit2DEA);
          int idx2DEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEB);
          int ilit2DED#1 = 41;
          int addRes2DEE#1 = IAdd(mulRes2D71,ilit2DED);
          int idx2DEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEE);
          int ilit2DF0#1 = 42;
          int addRes2DF1#1 = IAdd(mulRes2D71,ilit2DF0);
          int idx2DF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF1);
          int ilit2DF3#1 = 43;
          int addRes2DF4#1 = IAdd(mulRes2D71,ilit2DF3);
          int idx2DF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF4);
          int ilit2DF6#1 = 44;
          int addRes2DF7#1 = IAdd(mulRes2D71,ilit2DF6);
          int idx2DF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF7);
          int ilit2DF9#1 = 45;
          int addRes2DFA#1 = IAdd(mulRes2D71,ilit2DF9);
          int idx2DFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFA);
          int ilit2DFC#1 = 46;
          int addRes2DFD#1 = IAdd(mulRes2D71,ilit2DFC);
          int idx2DFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFD);
          int ilit2DFF#1 = 47;
          int addRes2E00#1 = IAdd(mulRes2D71,ilit2DFF);
          int idx2E01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E00);
          int ilit2E02#1 = 48;
          int addRes2E03#1 = IAdd(mulRes2D71,ilit2E02);
          int idx2E04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E03);
          int ilit2E05#1 = 49;
          int addRes2E06#1 = IAdd(mulRes2D71,ilit2E05);
          int idx2E07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E06);
          int ilit2E08#1 = 50;
          int addRes2E09#1 = IAdd(mulRes2D71,ilit2E08);
          int idx2E0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E09);
          int ilit2E0B#1 = 51;
          int addRes2E0C#1 = IAdd(mulRes2D71,ilit2E0B);
          int idx2E0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0C);
          int ilit2E0E#1 = 52;
          int addRes2E0F#1 = IAdd(mulRes2D71,ilit2E0E);
          int idx2E10#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0F);
          int ilit2E11#1 = 53;
          int addRes2E12#1 = IAdd(mulRes2D71,ilit2E11);
          int idx2E13#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E12);
          int ilit2E14#1 = 54;
          int addRes2E15#1 = IAdd(mulRes2D71,ilit2E14);
          int idx2E16#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E15);
          int ilit2E17#1 = 55;
          int addRes2E18#1 = IAdd(mulRes2D71,ilit2E17);
          int idx2E19#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E18);
          int ilit2E1A#1 = 56;
          int addRes2E1B#1 = IAdd(mulRes2D71,ilit2E1A);
          int idx2E1C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1B);
          int ilit2E1D#1 = 57;
          int addRes2E1E#1 = IAdd(mulRes2D71,ilit2E1D);
          int idx2E1F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1E);
          int ilit2E20#1 = 58;
          int addRes2E21#1 = IAdd(mulRes2D71,ilit2E20);
          int idx2E22#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E21);
          int ilit2E23#1 = 59;
          int addRes2E24#1 = IAdd(mulRes2D71,ilit2E23);
          int idx2E25#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E24);
          int ilit2E26#1 = 60;
          int addRes2E27#1 = IAdd(mulRes2D71,ilit2E26);
          int idx2E28#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E27);
          int ilit2E29#1 = 61;
          int addRes2E2A#1 = IAdd(mulRes2D71,ilit2E29);
          int idx2E2B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2A);
          int ilit2E2C#1 = 62;
          int addRes2E2D#1 = IAdd(mulRes2D71,ilit2E2C);
          int idx2E2E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2D);
          int ilit2E2F#1 = 63;
          int addRes2E30#1 = IAdd(mulRes2D71,ilit2E2F);
          int idx2E31#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E30);
          int ilit2E32#1 = 64;
          int addRes2E33#1 = IAdd(mulRes2D71,ilit2E32);
          int idx2E34#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E33);
          int ilit2E35#1 = 65;
          int addRes2E36#1 = IAdd(mulRes2D71,ilit2E35);
          int idx2E37#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E36);
          int ilit2E38#1 = 66;
          int addRes2E39#1 = IAdd(mulRes2D71,ilit2E38);
          int idx2E3A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E39);
          int ilit2E3B#1 = 67;
          int addRes2E3C#1 = IAdd(mulRes2D71,ilit2E3B);
          int idx2E3D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3C);
          int ilit2E3E#1 = 68;
          int addRes2E3F#1 = IAdd(mulRes2D71,ilit2E3E);
          int idx2E40#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3F);
          int ilit2E41#1 = 69;
          int addRes2E42#1 = IAdd(mulRes2D71,ilit2E41);
          int idx2E43#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E42);
          int ilit2E44#1 = 70;
          int addRes2E45#1 = IAdd(mulRes2D71,ilit2E44);
          int idx2E46#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E45);
          int ilit2E47#1 = 71;
          int addRes2E48#1 = IAdd(mulRes2D71,ilit2E47);
          int idx2E49#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E48);
          int ilit2E4A#1 = 72;
          int addRes2E4B#1 = IAdd(mulRes2D71,ilit2E4A);
          int idx2E4C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4B);
          int ilit2E4D#1 = 73;
          int addRes2E4E#1 = IAdd(mulRes2D71,ilit2E4D);
          int idx2E4F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4E);
          int ilit2E50#1 = 74;
          int addRes2E51#1 = IAdd(mulRes2D71,ilit2E50);
          int idx2E52#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E51);
          int ilit2E53#1 = 75;
          int addRes2E54#1 = IAdd(mulRes2D71,ilit2E53);
          int idx2E55#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E54);
          int ilit2E56#1 = 76;
          int addRes2E57#1 = IAdd(mulRes2D71,ilit2E56);
          int idx2E58#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E57);
          int ilit2E59#1 = 77;
          int addRes2E5A#1 = IAdd(mulRes2D71,ilit2E59);
          int idx2E5B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5A);
          int ilit2E5C#1 = 78;
          int addRes2E5D#1 = IAdd(mulRes2D71,ilit2E5C);
          int idx2E5E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5D);
          int ilit2E5F#1 = 79;
          int addRes2E60#1 = IAdd(mulRes2D71,ilit2E5F);
          int idx2E61#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E60);
          int ilit2E62#1 = 80;
          int addRes2E63#1 = IAdd(mulRes2D71,ilit2E62);
          int idx2E64#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E63);
          int ilit2E65#1 = 81;
          int addRes2E66#1 = IAdd(mulRes2D71,ilit2E65);
          int idx2E67#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E66);
          int ilit2E68#1 = 82;
          int addRes2E69#1 = IAdd(mulRes2D71,ilit2E68);
          int idx2E6A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E69);
          int ilit2E6B#1 = 83;
          int addRes2E6C#1 = IAdd(mulRes2D71,ilit2E6B);
          int idx2E6D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E6C);
          int[84] seq2E6E#1 = <int[84]>{idx2D74,idx2D77,idx2D7A,idx2D7D,idx2D80,idx2D83,idx2D86,idx2D89,idx2D8C,idx2D8F,idx2D92,idx2D95,idx2D98,idx2D9B,idx2D9E,idx2DA1,idx2DA4,idx2DA7,idx2DAA,idx2DAD,idx2DB0,idx2DB3,idx2DB6,idx2DB9,idx2DBC,idx2DBF,idx2DC2,idx2DC5,idx2DC8,idx2DCB,idx2DCE,idx2DD1,idx2DD4,idx2DD7,idx2DDA,idx2DDD,idx2DE0,idx2DE3,idx2DE6,idx2DE9,idx2DEC,idx2DEF,idx2DF2,idx2DF5,idx2DF8,idx2DFB,idx2DFE,idx2E01,idx2E04,idx2E07,idx2E0A,idx2E0D,idx2E10,idx2E13,idx2E16,idx2E19,idx2E1C,idx2E1F,idx2E22,idx2E25,idx2E28,idx2E2B,idx2E2E,idx2E31,idx2E34,idx2E37,idx2E3A,idx2E3D,idx2E40,idx2E43,idx2E46,idx2E49,idx2E4C,idx2E4F,idx2E52,idx2E55,idx2E58,idx2E5B,idx2E5E,idx2E61,idx2E64,idx2E67,idx2E6A,idx2E6D};
          int[84] femIndicies2D6F#84 = seq2E6E;
          int ilit2F70#85 = 1;
          int ilit2F71#1 = 0;
          int idx2F72#1 = Subscript<int>(femIndicies2D6F,ilit2F71);
          int mulRes2F73#1 = IMul(ilit2F70,idx2F72);
          int idx2F74#1 = Subscript<int>(femIndicies2D6F,ilit2F70);
          int mulRes2F75#1 = IMul(ilit2F70,idx2F74);
          int ilit2F76#1 = 2;
          int idx2F77#1 = Subscript<int>(femIndicies2D6F,ilit2F76);
          int mulRes2F78#1 = IMul(ilit2F70,idx2F77);
          int ilit2F79#1 = 3;
          int idx2F7A#1 = Subscript<int>(femIndicies2D6F,ilit2F79);
          int mulRes2F7B#1 = IMul(ilit2F70,idx2F7A);
          int ilit2F7C#1 = 4;
          int idx2F7D#1 = Subscript<int>(femIndicies2D6F,ilit2F7C);
          int mulRes2F7E#1 = IMul(ilit2F70,idx2F7D);
          int ilit2F7F#1 = 5;
          int idx2F80#1 = Subscript<int>(femIndicies2D6F,ilit2F7F);
          int mulRes2F81#1 = IMul(ilit2F70,idx2F80);
          int ilit2F82#1 = 6;
          int idx2F83#1 = Subscript<int>(femIndicies2D6F,ilit2F82);
          int mulRes2F84#1 = IMul(ilit2F70,idx2F83);
          int ilit2F85#1 = 7;
          int idx2F86#1 = Subscript<int>(femIndicies2D6F,ilit2F85);
          int mulRes2F87#1 = IMul(ilit2F70,idx2F86);
          int ilit2F88#1 = 8;
          int idx2F89#1 = Subscript<int>(femIndicies2D6F,ilit2F88);
          int mulRes2F8A#1 = IMul(ilit2F70,idx2F89);
          int ilit2F8B#1 = 9;
          int idx2F8C#1 = Subscript<int>(femIndicies2D6F,ilit2F8B);
          int mulRes2F8D#1 = IMul(ilit2F70,idx2F8C);
          int ilit2F8E#1 = 10;
          int idx2F8F#1 = Subscript<int>(femIndicies2D6F,ilit2F8E);
          int mulRes2F90#1 = IMul(ilit2F70,idx2F8F);
          int ilit2F91#1 = 11;
          int idx2F92#1 = Subscript<int>(femIndicies2D6F,ilit2F91);
          int mulRes2F93#1 = IMul(ilit2F70,idx2F92);
          int ilit2F94#1 = 12;
          int idx2F95#1 = Subscript<int>(femIndicies2D6F,ilit2F94);
          int mulRes2F96#1 = IMul(ilit2F70,idx2F95);
          int ilit2F97#1 = 13;
          int idx2F98#1 = Subscript<int>(femIndicies2D6F,ilit2F97);
          int mulRes2F99#1 = IMul(ilit2F70,idx2F98);
          int ilit2F9A#1 = 14;
          int idx2F9B#1 = Subscript<int>(femIndicies2D6F,ilit2F9A);
          int mulRes2F9C#1 = IMul(ilit2F70,idx2F9B);
          int ilit2F9D#1 = 15;
          int idx2F9E#1 = Subscript<int>(femIndicies2D6F,ilit2F9D);
          int mulRes2F9F#1 = IMul(ilit2F70,idx2F9E);
          int ilit2FA0#1 = 16;
          int idx2FA1#1 = Subscript<int>(femIndicies2D6F,ilit2FA0);
          int mulRes2FA2#1 = IMul(ilit2F70,idx2FA1);
          int ilit2FA3#1 = 17;
          int idx2FA4#1 = Subscript<int>(femIndicies2D6F,ilit2FA3);
          int mulRes2FA5#1 = IMul(ilit2F70,idx2FA4);
          int ilit2FA6#1 = 18;
          int idx2FA7#1 = Subscript<int>(femIndicies2D6F,ilit2FA6);
          int mulRes2FA8#1 = IMul(ilit2F70,idx2FA7);
          int ilit2FA9#1 = 19;
          int idx2FAA#1 = Subscript<int>(femIndicies2D6F,ilit2FA9);
          int mulRes2FAB#1 = IMul(ilit2F70,idx2FAA);
          int ilit2FAC#1 = 20;
          int idx2FAD#1 = Subscript<int>(femIndicies2D6F,ilit2FAC);
          int mulRes2FAE#1 = IMul(ilit2F70,idx2FAD);
          int ilit2FAF#1 = 21;
          int idx2FB0#1 = Subscript<int>(femIndicies2D6F,ilit2FAF);
          int mulRes2FB1#1 = IMul(ilit2F70,idx2FB0);
          int ilit2FB2#1 = 22;
          int idx2FB3#1 = Subscript<int>(femIndicies2D6F,ilit2FB2);
          int mulRes2FB4#1 = IMul(ilit2F70,idx2FB3);
          int ilit2FB5#1 = 23;
          int idx2FB6#1 = Subscript<int>(femIndicies2D6F,ilit2FB5);
          int mulRes2FB7#1 = IMul(ilit2F70,idx2FB6);
          int ilit2FB8#1 = 24;
          int idx2FB9#1 = Subscript<int>(femIndicies2D6F,ilit2FB8);
          int mulRes2FBA#1 = IMul(ilit2F70,idx2FB9);
          int ilit2FBB#1 = 25;
          int idx2FBC#1 = Subscript<int>(femIndicies2D6F,ilit2FBB);
          int mulRes2FBD#1 = IMul(ilit2F70,idx2FBC);
          int ilit2FBE#1 = 26;
          int idx2FBF#1 = Subscript<int>(femIndicies2D6F,ilit2FBE);
          int mulRes2FC0#1 = IMul(ilit2F70,idx2FBF);
          int ilit2FC1#1 = 27;
          int idx2FC2#1 = Subscript<int>(femIndicies2D6F,ilit2FC1);
          int mulRes2FC3#1 = IMul(ilit2F70,idx2FC2);
          int ilit2FC4#1 = 28;
          int idx2FC5#1 = Subscript<int>(femIndicies2D6F,ilit2FC4);
          int mulRes2FC6#1 = IMul(ilit2F70,idx2FC5);
          int ilit2FC7#1 = 29;
          int idx2FC8#1 = Subscript<int>(femIndicies2D6F,ilit2FC7);
          int mulRes2FC9#1 = IMul(ilit2F70,idx2FC8);
          int ilit2FCA#1 = 30;
          int idx2FCB#1 = Subscript<int>(femIndicies2D6F,ilit2FCA);
          int mulRes2FCC#1 = IMul(ilit2F70,idx2FCB);
          int ilit2FCD#1 = 31;
          int idx2FCE#1 = Subscript<int>(femIndicies2D6F,ilit2FCD);
          int mulRes2FCF#1 = IMul(ilit2F70,idx2FCE);
          int ilit2FD0#1 = 32;
          int idx2FD1#1 = Subscript<int>(femIndicies2D6F,ilit2FD0);
          int mulRes2FD2#1 = IMul(ilit2F70,idx2FD1);
          int ilit2FD3#1 = 33;
          int idx2FD4#1 = Subscript<int>(femIndicies2D6F,ilit2FD3);
          int mulRes2FD5#1 = IMul(ilit2F70,idx2FD4);
          int ilit2FD6#1 = 34;
          int idx2FD7#1 = Subscript<int>(femIndicies2D6F,ilit2FD6);
          int mulRes2FD8#1 = IMul(ilit2F70,idx2FD7);
          int ilit2FD9#1 = 35;
          int idx2FDA#1 = Subscript<int>(femIndicies2D6F,ilit2FD9);
          int mulRes2FDB#1 = IMul(ilit2F70,idx2FDA);
          int ilit2FDC#1 = 36;
          int idx2FDD#1 = Subscript<int>(femIndicies2D6F,ilit2FDC);
          int mulRes2FDE#1 = IMul(ilit2F70,idx2FDD);
          int ilit2FDF#1 = 37;
          int idx2FE0#1 = Subscript<int>(femIndicies2D6F,ilit2FDF);
          int mulRes2FE1#1 = IMul(ilit2F70,idx2FE0);
          int ilit2FE2#1 = 38;
          int idx2FE3#1 = Subscript<int>(femIndicies2D6F,ilit2FE2);
          int mulRes2FE4#1 = IMul(ilit2F70,idx2FE3);
          int ilit2FE5#1 = 39;
          int idx2FE6#1 = Subscript<int>(femIndicies2D6F,ilit2FE5);
          int mulRes2FE7#1 = IMul(ilit2F70,idx2FE6);
          int ilit2FE8#1 = 40;
          int idx2FE9#1 = Subscript<int>(femIndicies2D6F,ilit2FE8);
          int mulRes2FEA#1 = IMul(ilit2F70,idx2FE9);
          int ilit2FEB#1 = 41;
          int idx2FEC#1 = Subscript<int>(femIndicies2D6F,ilit2FEB);
          int mulRes2FED#1 = IMul(ilit2F70,idx2FEC);
          int ilit2FEE#1 = 42;
          int idx2FEF#1 = Subscript<int>(femIndicies2D6F,ilit2FEE);
          int mulRes2FF0#1 = IMul(ilit2F70,idx2FEF);
          int ilit2FF1#1 = 43;
          int idx2FF2#1 = Subscript<int>(femIndicies2D6F,ilit2FF1);
          int mulRes2FF3#1 = IMul(ilit2F70,idx2FF2);
          int ilit2FF4#1 = 44;
          int idx2FF5#1 = Subscript<int>(femIndicies2D6F,ilit2FF4);
          int mulRes2FF6#1 = IMul(ilit2F70,idx2FF5);
          int ilit2FF7#1 = 45;
          int idx2FF8#1 = Subscript<int>(femIndicies2D6F,ilit2FF7);
          int mulRes2FF9#1 = IMul(ilit2F70,idx2FF8);
          int ilit2FFA#1 = 46;
          int idx2FFB#1 = Subscript<int>(femIndicies2D6F,ilit2FFA);
          int mulRes2FFC#1 = IMul(ilit2F70,idx2FFB);
          int ilit2FFD#1 = 47;
          int idx2FFE#1 = Subscript<int>(femIndicies2D6F,ilit2FFD);
          int mulRes2FFF#1 = IMul(ilit2F70,idx2FFE);
          int ilit3000#1 = 48;
          int idx3001#1 = Subscript<int>(femIndicies2D6F,ilit3000);
          int mulRes3002#1 = IMul(ilit2F70,idx3001);
          int ilit3003#1 = 49;
          int idx3004#1 = Subscript<int>(femIndicies2D6F,ilit3003);
          int mulRes3005#1 = IMul(ilit2F70,idx3004);
          int ilit3006#1 = 50;
          int idx3007#1 = Subscript<int>(femIndicies2D6F,ilit3006);
          int mulRes3008#1 = IMul(ilit2F70,idx3007);
          int ilit3009#1 = 51;
          int idx300A#1 = Subscript<int>(femIndicies2D6F,ilit3009);
          int mulRes300B#1 = IMul(ilit2F70,idx300A);
          int ilit300C#1 = 52;
          int idx300D#1 = Subscript<int>(femIndicies2D6F,ilit300C);
          int mulRes300E#1 = IMul(ilit2F70,idx300D);
          int ilit300F#1 = 53;
          int idx3010#1 = Subscript<int>(femIndicies2D6F,ilit300F);
          int mulRes3011#1 = IMul(ilit2F70,idx3010);
          int ilit3012#1 = 54;
          int idx3013#1 = Subscript<int>(femIndicies2D6F,ilit3012);
          int mulRes3014#1 = IMul(ilit2F70,idx3013);
          int ilit3015#1 = 55;
          int idx3016#1 = Subscript<int>(femIndicies2D6F,ilit3015);
          int mulRes3017#1 = IMul(ilit2F70,idx3016);
          int ilit3018#1 = 56;
          int idx3019#1 = Subscript<int>(femIndicies2D6F,ilit3018);
          int mulRes301A#1 = IMul(ilit2F70,idx3019);
          int ilit301B#1 = 57;
          int idx301C#1 = Subscript<int>(femIndicies2D6F,ilit301B);
          int mulRes301D#1 = IMul(ilit2F70,idx301C);
          int ilit301E#1 = 58;
          int idx301F#1 = Subscript<int>(femIndicies2D6F,ilit301E);
          int mulRes3020#1 = IMul(ilit2F70,idx301F);
          int ilit3021#1 = 59;
          int idx3022#1 = Subscript<int>(femIndicies2D6F,ilit3021);
          int mulRes3023#1 = IMul(ilit2F70,idx3022);
          int ilit3024#1 = 60;
          int idx3025#1 = Subscript<int>(femIndicies2D6F,ilit3024);
          int mulRes3026#1 = IMul(ilit2F70,idx3025);
          int ilit3027#1 = 61;
          int idx3028#1 = Subscript<int>(femIndicies2D6F,ilit3027);
          int mulRes3029#1 = IMul(ilit2F70,idx3028);
          int ilit302A#1 = 62;
          int idx302B#1 = Subscript<int>(femIndicies2D6F,ilit302A);
          int mulRes302C#1 = IMul(ilit2F70,idx302B);
          int ilit302D#1 = 63;
          int idx302E#1 = Subscript<int>(femIndicies2D6F,ilit302D);
          int mulRes302F#1 = IMul(ilit2F70,idx302E);
          int ilit3030#1 = 64;
          int idx3031#1 = Subscript<int>(femIndicies2D6F,ilit3030);
          int mulRes3032#1 = IMul(ilit2F70,idx3031);
          int ilit3033#1 = 65;
          int idx3034#1 = Subscript<int>(femIndicies2D6F,ilit3033);
          int mulRes3035#1 = IMul(ilit2F70,idx3034);
          int ilit3036#1 = 66;
          int idx3037#1 = Subscript<int>(femIndicies2D6F,ilit3036);
          int mulRes3038#1 = IMul(ilit2F70,idx3037);
          int ilit3039#1 = 67;
          int idx303A#1 = Subscript<int>(femIndicies2D6F,ilit3039);
          int mulRes303B#1 = IMul(ilit2F70,idx303A);
          int ilit303C#1 = 68;
          int idx303D#1 = Subscript<int>(femIndicies2D6F,ilit303C);
          int mulRes303E#1 = IMul(ilit2F70,idx303D);
          int ilit303F#1 = 69;
          int idx3040#1 = Subscript<int>(femIndicies2D6F,ilit303F);
          int mulRes3041#1 = IMul(ilit2F70,idx3040);
          int ilit3042#1 = 70;
          int idx3043#1 = Subscript<int>(femIndicies2D6F,ilit3042);
          int mulRes3044#1 = IMul(ilit2F70,idx3043);
          int ilit3045#1 = 71;
          int idx3046#1 = Subscript<int>(femIndicies2D6F,ilit3045);
          int mulRes3047#1 = IMul(ilit2F70,idx3046);
          int ilit3048#1 = 72;
          int idx3049#1 = Subscript<int>(femIndicies2D6F,ilit3048);
          int mulRes304A#1 = IMul(ilit2F70,idx3049);
          int ilit304B#1 = 73;
          int idx304C#1 = Subscript<int>(femIndicies2D6F,ilit304B);
          int mulRes304D#1 = IMul(ilit2F70,idx304C);
          int ilit304E#1 = 74;
          int idx304F#1 = Subscript<int>(femIndicies2D6F,ilit304E);
          int mulRes3050#1 = IMul(ilit2F70,idx304F);
          int ilit3051#1 = 75;
          int idx3052#1 = Subscript<int>(femIndicies2D6F,ilit3051);
          int mulRes3053#1 = IMul(ilit2F70,idx3052);
          int ilit3054#1 = 76;
          int idx3055#1 = Subscript<int>(femIndicies2D6F,ilit3054);
          int mulRes3056#1 = IMul(ilit2F70,idx3055);
          int ilit3057#1 = 77;
          int idx3058#1 = Subscript<int>(femIndicies2D6F,ilit3057);
          int mulRes3059#1 = IMul(ilit2F70,idx3058);
          int ilit305A#1 = 78;
          int idx305B#1 = Subscript<int>(femIndicies2D6F,ilit305A);
          int mulRes305C#1 = IMul(ilit2F70,idx305B);
          int ilit305D#1 = 79;
          int idx305E#1 = Subscript<int>(femIndicies2D6F,ilit305D);
          int mulRes305F#1 = IMul(ilit2F70,idx305E);
          int ilit3060#1 = 80;
          int idx3061#1 = Subscript<int>(femIndicies2D6F,ilit3060);
          int mulRes3062#1 = IMul(ilit2F70,idx3061);
          int ilit3063#1 = 81;
          int idx3064#1 = Subscript<int>(femIndicies2D6F,ilit3063);
          int mulRes3065#1 = IMul(ilit2F70,idx3064);
          int ilit3066#1 = 82;
          int idx3067#1 = Subscript<int>(femIndicies2D6F,ilit3066);
          int mulRes3068#1 = IMul(ilit2F70,idx3067);
          int ilit3069#1 = 83;
          int idx306A#1 = Subscript<int>(femIndicies2D6F,ilit3069);
          int mulRes306B#1 = IMul(ilit2F70,idx306A);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F73);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F75);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F78);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7B);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7E);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F81);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F84);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F87);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8A);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8D);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F90);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F93);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F96);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F99);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9C);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9F);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA2);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA5);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA8);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAB);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAE);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB1);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB4);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB7);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBA);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBD);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC0);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC3);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC6);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC9);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCC);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCF);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD2);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD5);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD8);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDB);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDE);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE1);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE4);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE7);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FEA);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FED);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF0);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF3);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF6);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF9);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFC);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFF);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3002);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3005);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3008);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300B);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300E);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3011);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3014);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3017);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301A);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301D);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3020);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3023);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3026);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3029);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302C);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302F);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3032);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3035);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3038);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303B);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303E);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3041);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3044);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3047);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304A);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304D);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3050);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3053);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3056);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3059);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305C);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305F);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3062);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3065);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3068);
          real dof30BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes306B);
          tensor[84] dofs30C0#1 = <tensor[84]>[dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE,dof30BF];
          tensor[84] femDofs2F6F#12 = dofs30C0;
          real varAcc3214#4 = VIndex<3,0>(pos24B8);
          real varAcc3215#4 = VIndex<3,1>(pos24B8);
          real varAcc3216#4 = VIndex<3,2>(pos24B8);
          real basisEval3217#294 = 0.e0;
          real coeff3218#31 = 0.2e1;
          real one3219#38 = 0.1e1;
          real prod321A#5 = RMul(one3219,one3219);
          real prod321B#2 = RMul(one3219,prod321A);
          real basisEval321C#3 = RMul(coeff3218,prod321B);
          real iden321D#5 = varAcc3216;
          real prod321E#4 = RMul(one3219,iden321D);
          real prod321F#3 = RMul(one3219,prod321E);
          real basisEval3220#4 = RMul(coeff3218,prod321F);
          real iden3221#5 = varAcc3215;
          real prod3222#4 = RMul(iden3221,one3219);
          real prod3223#3 = RMul(one3219,prod3222);
          real basisEval3224#4 = RMul(coeff3218,prod3223);
          real coeff3225#22 = 0.6e1;
          real iden3226#11 = varAcc3214;
          real prod3227#3 = RMul(iden3226,prod321A);
          real basisEval3228#1 = RMul(coeff3225,prod3227);
          real prod23229#4 = RMul(iden321D,varAcc3216);
          real prod322A#3 = RMul(one3219,prod23229);
          real prod322B#4 = RMul(one3219,prod322A);
          real basisEval322C#2 = RMul(coeff3218,prod322B);
          real prod322D#3 = RMul(iden3221,iden321D);
          real prod322E#3 = RMul(one3219,prod322D);
          real basisEval322F#3 = RMul(coeff3218,prod322E);
          real prod23230#4 = RMul(iden3221,varAcc3215);
          real prod3231#3 = RMul(prod23230,one3219);
          real prod3232#4 = RMul(one3219,prod3231);
          real basisEval3233#2 = RMul(coeff3218,prod3232);
          real prod3234#3 = RMul(iden3226,prod321E);
          real basisEval3235#2 = RMul(coeff3225,prod3234);
          real prod3236#3 = RMul(iden3226,prod3222);
          real basisEval3237#2 = RMul(coeff3225,prod3236);
          real coeff3238#15 = 0.12e2;
          real prod23239#7 = RMul(iden3226,varAcc3214);
          real prod323A#4 = RMul(prod23239,prod321A);
          real basisEval323B#1 = RMul(coeff3238,prod323A);
          real prod3323C#3 = RMul(prod23229,varAcc3216);
          real prod323D#2 = RMul(one3219,prod3323C);
          real prod323E#4 = RMul(one3219,prod323D);
          real basisEval323F#2 = RMul(coeff3218,prod323E);
          real prod3240#2 = RMul(iden3221,prod23229);
          real prod3241#4 = RMul(one3219,prod3240);
          real basisEval3242#2 = RMul(coeff3218,prod3241);
          real prod3243#2 = RMul(prod23230,iden321D);
          real prod3244#4 = RMul(one3219,prod3243);
          real basisEval3245#2 = RMul(coeff3218,prod3244);
          real prod33246#3 = RMul(prod23230,varAcc3215);
          real prod3247#2 = RMul(prod33246,one3219);
          real prod3248#4 = RMul(one3219,prod3247);
          real basisEval3249#2 = RMul(coeff3218,prod3248);
          real prod324A#4 = RMul(iden3226,prod322A);
          real basisEval324B#2 = RMul(coeff3225,prod324A);
          real prod324C#2 = RMul(iden3226,prod322D);
          real basisEval324D#3 = RMul(coeff3225,prod324C);
          real prod324E#4 = RMul(iden3226,prod3231);
          real basisEval324F#2 = RMul(coeff3225,prod324E);
          real prod3250#4 = RMul(prod23239,prod321E);
          real basisEval3251#1 = RMul(coeff3238,prod3250);
          real prod3252#4 = RMul(prod23239,prod3222);
          real basisEval3253#1 = RMul(coeff3238,prod3252);
          real coeff3254#9 = 0.20e2;
          real prod33255#4 = RMul(prod23239,varAcc3214);
          real prod3256#4 = RMul(prod33255,prod321A);
          real basisEval3257#1 = RMul(coeff3254,prod3256);
          real prod43258#1 = RMul(prod3323C,varAcc3216);
          real prod3259#1 = RMul(one3219,prod43258);
          real prod325A#4 = RMul(one3219,prod3259);
          real basisEval325B#2 = RMul(coeff3218,prod325A);
          real prod325C#1 = RMul(iden3221,prod3323C);
          real prod325D#5 = RMul(one3219,prod325C);
          real basisEval325E#2 = RMul(coeff3218,prod325D);
          real prod325F#1 = RMul(prod23230,prod23229);
          real prod3260#4 = RMul(one3219,prod325F);
          real basisEval3261#1 = RMul(coeff3218,prod3260);
          real prod3262#1 = RMul(prod33246,iden321D);
          real prod3263#5 = RMul(one3219,prod3262);
          real basisEval3264#2 = RMul(coeff3218,prod3263);
          real prod43265#1 = RMul(prod33246,varAcc3215);
          real prod3266#1 = RMul(prod43265,one3219);
          real prod3267#4 = RMul(one3219,prod3266);
          real basisEval3268#2 = RMul(coeff3218,prod3267);
          real prod3269#5 = RMul(iden3226,prod323D);
          real basisEval326A#1 = RMul(coeff3225,prod3269);
          real prod326B#3 = RMul(iden3226,prod3240);
          real basisEval326C#4 = RMul(coeff3225,prod326B);
          real prod326D#3 = RMul(iden3226,prod3243);
          real basisEval326E#4 = RMul(coeff3225,prod326D);
          real prod326F#5 = RMul(iden3226,prod3247);
          real basisEval3270#1 = RMul(coeff3225,prod326F);
          real prod3271#4 = RMul(prod23239,prod322A);
          real basisEval3272#2 = RMul(coeff3238,prod3271);
          real prod3273#3 = RMul(prod23239,prod322D);
          real basisEval3274#1 = RMul(coeff3238,prod3273);
          real prod3275#4 = RMul(prod23239,prod3231);
          real basisEval3276#2 = RMul(coeff3238,prod3275);
          real prod3277#5 = RMul(prod33255,prod321E);
          real basisEval3278#1 = RMul(coeff3254,prod3277);
          real prod3279#5 = RMul(prod33255,prod3222);
          real basisEval327A#1 = RMul(coeff3254,prod3279);
          real coeff327B#3 = 0.30e2;
          real prod4327C#1 = RMul(prod33255,varAcc3214);
          real prod327D#4 = RMul(prod4327C,prod321A);
          real basisEval327E#1 = RMul(coeff327B,prod327D);
          real basisEval327F#3 = RMul(one3219,prod321B);
          real basisEval3280#1 = RMul(one3219,prod321F);
          real basisEval3281#4 = RMul(coeff3218,prod3227);
          real basisEval3282#1 = RMul(one3219,prod322B);
          real coeff3283#12 = 0.3e1;
          real basisEval3284#2 = RMul(coeff3283,prod3232);
          real basisEval3285#3 = RMul(coeff3218,prod3234);
          real coeff3286#16 = 0.4e1;
          real basisEval3287#1 = RMul(coeff3286,prod3236);
          real basisEval3288#2 = RMul(coeff3283,prod323A);
          real basisEval3289#1 = RMul(one3219,prod323E);
          real basisEval328A#1 = RMul(coeff3283,prod3244);
          real basisEval328B#2 = RMul(coeff3286,prod3248);
          real basisEval328C#2 = RMul(coeff3218,prod324A);
          real basisEval328D#3 = RMul(coeff3286,prod324C);
          real basisEval328E#1 = RMul(coeff3283,prod3250);
          real basisEval328F#2 = RMul(coeff3225,prod3252);
          real basisEval3290#2 = RMul(coeff3286,prod3256);
          real basisEval3291#1 = RMul(one3219,prod325A);
          real basisEval3292#2 = RMul(coeff3283,prod3260);
          real basisEval3293#1 = RMul(coeff3286,prod3263);
          real coeff3294#3 = 0.5e1;
          real basisEval3295#2 = RMul(coeff3294,prod3267);
          real basisEval3296#2 = RMul(coeff3218,prod3269);
          real basisEval3297#1 = RMul(coeff3286,prod326B);
          real coeff3298#6 = 0.8e1;
          real basisEval3299#1 = RMul(coeff3298,prod326F);
          real basisEval329A#2 = RMul(coeff3283,prod3271);
          real basisEval329B#4 = RMul(coeff3225,prod3273);
          real coeff329C#3 = 0.9e1;
          real basisEval329D#1 = RMul(coeff329C,prod3275);
          real basisEval329E#1 = RMul(coeff3286,prod3277);
          real basisEval329F#1 = RMul(coeff3298,prod3279);
          real basisEval32A0#2 = RMul(coeff3294,prod327D);
          real basisEval32A1#1 = RMul(one3219,prod3223);
          real basisEval32A2#2 = RMul(coeff3283,prod322B);
          real basisEval32A3#1 = RMul(one3219,prod3232);
          real basisEval32A4#1 = RMul(coeff3286,prod3234);
          real basisEval32A5#3 = RMul(coeff3218,prod3236);
          real basisEval32A6#2 = RMul(coeff3286,prod323E);
          real basisEval32A7#1 = RMul(coeff3283,prod3241);
          real basisEval32A8#1 = RMul(one3219,prod3248);
          real basisEval32A9#2 = RMul(coeff3218,prod324E);
          real basisEval32AA#2 = RMul(coeff3225,prod3250);
          real basisEval32AB#1 = RMul(coeff3283,prod3252);
          real basisEval32AC#2 = RMul(coeff3294,prod325A);
          real basisEval32AD#1 = RMul(coeff3286,prod325D);
          real basisEval32AE#1 = RMul(one3219,prod3267);
          real basisEval32AF#1 = RMul(coeff3298,prod3269);
          real basisEval32B0#1 = RMul(coeff3286,prod326D);
          real basisEval32B1#2 = RMul(coeff3218,prod326F);
          real basisEval32B2#1 = RMul(coeff329C,prod3271);
          real basisEval32B3#2 = RMul(coeff3283,prod3275);
          real basisEval32B4#1 = RMul(coeff3298,prod3277);
          real basisEval32B5#1 = RMul(coeff3286,prod3279);
          real basisEval32B6#1 = RMul(coeff3225,prod3223);
          real basisEval32B7#2 = RMul(coeff3225,prod322E);
          real basisEval32B8#1 = RMul(coeff3238,prod3232);
          real basisEval32B9#2 = RMul(coeff3218,prod323A);
          real basisEval32BA#2 = RMul(coeff3225,prod3241);
          real basisEval32BB#1 = RMul(coeff3238,prod3244);
          real basisEval32BC#1 = RMul(coeff3254,prod3248);
          real basisEval32BD#1 = RMul(coeff3238,prod324E);
          real basisEval32BE#2 = RMul(coeff3218,prod3250);
          real basisEval32BF#2 = RMul(coeff3218,prod3256);
          real basisEval32C0#1 = RMul(coeff3225,prod325D);
          real basisEval32C1#2 = RMul(coeff3238,prod3260);
          real basisEval32C2#1 = RMul(coeff3254,prod3263);
          real basisEval32C3#1 = RMul(coeff327B,prod3267);
          real basisEval32C4#1 = RMul(coeff3238,prod326D);
          real basisEval32C5#1 = RMul(coeff3254,prod326F);
          real basisEval32C6#1 = RMul(coeff3218,prod3271);
          real basisEval32C7#2 = RMul(coeff3218,prod3277);
          real basisEval32C8#1 = RMul(coeff3225,prod3279);
          real basisEval32C9#2 = RMul(coeff3218,prod327D);
          real basisEval32CA#1 = RMul(one3219,prod3227);
          real basisEval32CB#1 = RMul(coeff3286,prod322E);
          real basisEval32CC#1 = RMul(one3219,prod323A);
          real basisEval32CD#2 = RMul(coeff3225,prod3244);
          real basisEval32CE#1 = RMul(coeff3283,prod324A);
          real basisEval32CF#1 = RMul(coeff3283,prod324E);
          real basisEval32D0#2 = RMul(coeff3218,prod3252);
          real basisEval32D1#1 = RMul(one3219,prod3256);
          real basisEval32D2#1 = RMul(coeff3298,prod325D);
          real basisEval32D3#1 = RMul(coeff329C,prod3260);
          real basisEval32D4#1 = RMul(coeff3298,prod3263);
          real basisEval32D5#1 = RMul(coeff3286,prod3269);
          real basisEval32D6#1 = RMul(coeff3286,prod326F);
          real basisEval32D7#1 = RMul(coeff3286,prod3273);
          real basisEval32D8#2 = RMul(coeff3218,prod3279);
          real basisEval32D9#1 = RMul(one3219,prod327D);
          real basisEval32DA#1 = RMul(coeff3225,prod321F);
          real basisEval32DB#1 = RMul(coeff3238,prod322B);
          real basisEval32DC#1 = RMul(coeff3254,prod323E);
          real basisEval32DD#1 = RMul(coeff3238,prod3241);
          real basisEval32DE#1 = RMul(coeff3238,prod324A);
          real basisEval32DF#1 = RMul(coeff327B,prod325A);
          real basisEval32E0#1 = RMul(coeff3254,prod325D);
          real basisEval32E1#1 = RMul(coeff3225,prod3263);
          real basisEval32E2#1 = RMul(coeff3254,prod3269);
          real basisEval32E3#1 = RMul(coeff3238,prod326B);
          real basisEval32E4#1 = RMul(coeff3218,prod3275);
          real basisEval32E5#1 = RMul(coeff3225,prod3277);
          tensor[84] intermediateCons32E6#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3228,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval322F,basisEval3233,basisEval3235,basisEval3237,basisEval323B,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval3242,basisEval3245,basisEval3249,basisEval324B,basisEval324D,basisEval324F,basisEval3251,basisEval3253,basisEval3257,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval325E,basisEval3261,basisEval3264,basisEval3268,basisEval326A,basisEval326C,basisEval326E,basisEval3270,basisEval3272,basisEval3274,basisEval3276,basisEval3278,basisEval327A,basisEval327E];
          tensor[84] intermediateCons32E7#2 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3280,basisEval3224,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3282,basisEval322F,basisEval3284,basisEval3217,basisEval3285,basisEval3287,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3289,basisEval3242,basisEval328A,basisEval328B,basisEval3217,basisEval328C,basisEval328D,basisEval324F,basisEval3217,basisEval328E,basisEval328F,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3291,basisEval325E,basisEval3292,basisEval3293,basisEval3295,basisEval3217,basisEval3296,basisEval3297,basisEval326E,basisEval3299,basisEval3217,basisEval329A,basisEval329B,basisEval329D,basisEval3217,basisEval329E,basisEval329F,basisEval3217,basisEval32A0,basisEval3217];
          tensor[84] intermediateCons32E8#2 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32A1,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval322F,basisEval32A3,basisEval3217,basisEval32A4,basisEval32A5,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32A7,basisEval3245,basisEval32A8,basisEval3217,basisEval324B,basisEval328D,basisEval32A9,basisEval3217,basisEval32AA,basisEval32AB,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32AD,basisEval3292,basisEval3264,basisEval32AE,basisEval3217,basisEval32AF,basisEval326C,basisEval32B0,basisEval32B1,basisEval3217,basisEval32B2,basisEval329B,basisEval32B3,basisEval3217,basisEval32B4,basisEval32B5,basisEval3217,basisEval32A0,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32E9#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32B6,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval32B7,basisEval32B8,basisEval3217,basisEval3217,basisEval3285,basisEval3237,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval32BA,basisEval32BB,basisEval32BC,basisEval3217,basisEval3217,basisEval328C,basisEval324D,basisEval32BD,basisEval3217,basisEval3217,basisEval32BE,basisEval328F,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval32C0,basisEval32C1,basisEval32C2,basisEval32C3,basisEval3217,basisEval3217,basisEval3296,basisEval326C,basisEval32C4,basisEval32C5,basisEval3217,basisEval3217,basisEval32C6,basisEval329B,basisEval3276,basisEval3217,basisEval3217,basisEval32C7,basisEval32C8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EA#2 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3217,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval32CB,basisEval3284,basisEval3217,basisEval3217,basisEval3285,basisEval32A5,basisEval3217,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32BA,basisEval32CD,basisEval328B,basisEval3217,basisEval3217,basisEval32CE,basisEval328D,basisEval32CF,basisEval3217,basisEval3217,basisEval32BE,basisEval32D0,basisEval3217,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32D2,basisEval32D3,basisEval32D4,basisEval3295,basisEval3217,basisEval3217,basisEval32D5,basisEval326C,basisEval326E,basisEval32D6,basisEval3217,basisEval3217,basisEval329A,basisEval32D7,basisEval32B3,basisEval3217,basisEval3217,basisEval32C7,basisEval32D8,basisEval3217,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EB#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DA,basisEval3224,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DB,basisEval32B7,basisEval3233,basisEval3217,basisEval3217,basisEval3235,basisEval32A5,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DC,basisEval32DD,basisEval32CD,basisEval3249,basisEval3217,basisEval3217,basisEval32DE,basisEval324D,basisEval32A9,basisEval3217,basisEval3217,basisEval32AA,basisEval32D0,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DF,basisEval32E0,basisEval32C1,basisEval32E1,basisEval3268,basisEval3217,basisEval3217,basisEval32E2,basisEval32E3,basisEval326E,basisEval32B1,basisEval3217,basisEval3217,basisEval3272,basisEval329B,basisEval32E4,basisEval3217,basisEval3217,basisEval32E5,basisEval32D8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          tensor[3,84] intermediateCons32EC#1 = <tensor[3,84]>[intermediateCons32E6,intermediateCons32E7,intermediateCons32E8];
          tensor[3,84] intermediateCons32ED#1 = <tensor[3,84]>[intermediateCons32E7,intermediateCons32E9,intermediateCons32EA];
          tensor[3,84] intermediateCons32EE#1 = <tensor[3,84]>[intermediateCons32E8,intermediateCons32EA,intermediateCons32EB];
          tensor[3,3,84] intermediateCons32EF#1 = <tensor[3,3,84]>[intermediateCons32EC,intermediateCons32ED,intermediateCons32EE];
          tensor[3,3,84] basisResult3213#9 = intermediateCons32EF;
          tensor[84] projParam33CE#1 = ProjectLast<tensor[3,3,84],[0,0]>(basisResult3213);
          real vdot33CF#1 = VDot<84>(femDofs2F6F,projParam33CE);
          tensor[84] projParam33D0#1 = ProjectLast<tensor[3,3,84],[0,1]>(basisResult3213);
          real vdot33D1#1 = VDot<84>(femDofs2F6F,projParam33D0);
          tensor[84] projParam33D2#1 = ProjectLast<tensor[3,3,84],[0,2]>(basisResult3213);
          real vdot33D3#1 = VDot<84>(femDofs2F6F,projParam33D2);
          tensor[3] tensor33D4#1 = <tensor[3]>[vdot33CF,vdot33D1,vdot33D3];
          tensor[84] projParam33D5#1 = ProjectLast<tensor[3,3,84],[1,0]>(basisResult3213);
          real vdot33D6#1 = VDot<84>(femDofs2F6F,projParam33D5);
          tensor[84] projParam33D7#1 = ProjectLast<tensor[3,3,84],[1,1]>(basisResult3213);
          real vdot33D8#1 = VDot<84>(femDofs2F6F,projParam33D7);
          tensor[84] projParam33D9#1 = ProjectLast<tensor[3,3,84],[1,2]>(basisResult3213);
          real vdot33DA#1 = VDot<84>(femDofs2F6F,projParam33D9);
          tensor[3] tensor33DB#1 = <tensor[3]>[vdot33D6,vdot33D8,vdot33DA];
          tensor[84] projParam33DC#1 = ProjectLast<tensor[3,3,84],[2,0]>(basisResult3213);
          real vdot33DD#1 = VDot<84>(femDofs2F6F,projParam33DC);
          tensor[84] projParam33DE#1 = ProjectLast<tensor[3,3,84],[2,1]>(basisResult3213);
          real vdot33DF#1 = VDot<84>(femDofs2F6F,projParam33DE);
          tensor[84] projParam33E0#1 = ProjectLast<tensor[3,3,84],[2,2]>(basisResult3213);
          real vdot33E1#1 = VDot<84>(femDofs2F6F,projParam33E0);
          tensor[3] tensor33E2#1 = <tensor[3]>[vdot33DD,vdot33DF,vdot33E1];
          tensor[3,3] _t33CD#1 = <tensor[3,3]>[tensor33D4,tensor33DB,tensor33E2];
          (real[3] evals33FA#2,tensor[3][3] E33FB#2) = EigenVecs3x3(_t33CD);
          int _t33FD#2 = 2;
          tensor[3] _t33FF#6 = Subscript<tensor[3][3]>(E33FB,_t33FD);
          real _t3401#9 = Subscript<real[3]>(evals33FA,_t33FD);
          int _t3403#2 = 1;
          tensor[3] _t3405#6 = Subscript<tensor[3][3]>(E33FB,_t3403);
          real _t3407#9 = Subscript<real[3]>(evals33FA,_t3403);
          real r340A#1 = TensorIndex<tensor[3],[0]>(_t33FF);
          tensor[3] binopV340B#1 = VScale<3>(r340A,_t33FF);
          real r340C#1 = TensorIndex<tensor[3],[1]>(_t33FF);
          tensor[3] binopV340D#1 = VScale<3>(r340C,_t33FF);
          real r340E#1 = TensorIndex<tensor[3],[2]>(_t33FF);
          tensor[3] binopV340F#1 = VScale<3>(r340E,_t33FF);
          tensor[3,3] op1_e3_l_103409#9 = <tensor[3,3]>[binopV340B,binopV340D,binopV340F];
          real r3419#1 = TensorIndex<tensor[3],[0]>(_t3405);
          tensor[3] binopV341A#1 = VScale<3>(r3419,_t3405);
          real r341B#1 = TensorIndex<tensor[3],[1]>(_t3405);
          tensor[3] binopV341C#1 = VScale<3>(r341B,_t3405);
          real r341D#1 = TensorIndex<tensor[3],[2]>(_t3405);
          tensor[3] binopV341E#1 = VScale<3>(r341D,_t3405);
          tensor[3,3] op1_e3_l_113418#9 = <tensor[3,3]>[binopV341A,binopV341C,binopV341E];
          real r3428#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_103409);
          real r3429#1 = RDiv(r3428,_t3401);
          real r342A#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_103409);
          real r342B#1 = RDiv(r342A,_t3401);
          real r342C#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_103409);
          real r342D#1 = RDiv(r342C,_t3401);
          tensor[3] tensor342E#1 = <tensor[3]>[r3429,r342B,r342D];
          real r342F#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_103409);
          real r3430#1 = RDiv(r342F,_t3401);
          real r3431#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_103409);
          real r3432#1 = RDiv(r3431,_t3401);
          real r3433#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_103409);
          real r3434#1 = RDiv(r3433,_t3401);
          tensor[3] tensor3435#1 = <tensor[3]>[r3430,r3432,r3434];
          real r3436#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_103409);
          real r3437#1 = RDiv(r3436,_t3401);
          real r3438#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_103409);
          real r3439#1 = RDiv(r3438,_t3401);
          real r343A#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_103409);
          real r343B#1 = RDiv(r343A,_t3401);
          tensor[3] tensor343C#1 = <tensor[3]>[r3437,r3439,r343B];
          tensor[3,3] op1_e3_l_123427#3 = <tensor[3,3]>[tensor342E,tensor3435,tensor343C];
          real r3455#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_113418);
          real r3456#1 = RDiv(r3455,_t3407);
          real r3457#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_113418);
          real r3458#1 = RDiv(r3457,_t3407);
          real r3459#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_113418);
          real r345A#1 = RDiv(r3459,_t3407);
          tensor[3] tensor345B#1 = <tensor[3]>[r3456,r3458,r345A];
          real r345C#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_113418);
          real r345D#1 = RDiv(r345C,_t3407);
          real r345E#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_113418);
          real r345F#1 = RDiv(r345E,_t3407);
          real r3460#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_113418);
          real r3461#1 = RDiv(r3460,_t3407);
          tensor[3] tensor3462#1 = <tensor[3]>[r345D,r345F,r3461];
          real r3463#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_113418);
          real r3464#1 = RDiv(r3463,_t3407);
          real r3465#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_113418);
          real r3466#1 = RDiv(r3465,_t3407);
          real r3467#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_113418);
          real r3468#1 = RDiv(r3467,_t3407);
          tensor[3] tensor3469#1 = <tensor[3]>[r3464,r3466,r3468];
          tensor[3,3] op1_e3_l_133454#3 = <tensor[3,3]>[tensor345B,tensor3462,tensor3469];
          tensor[3] projParam3482#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_123427);
          tensor[3] projParam3483#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_133454);
          tensor[3] v3484#1 = VAdd<3>(projParam3482,projParam3483);
          tensor[3] projParam3485#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_123427);
          tensor[3] projParam3486#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_133454);
          tensor[3] v3487#1 = VAdd<3>(projParam3485,projParam3486);
          tensor[3] projParam3488#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_123427);
          tensor[3] projParam3489#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_133454);
          tensor[3] v348A#1 = VAdd<3>(projParam3488,projParam3489);
          tensor[3,3] op1_e3_l_143481#3 = <tensor[3,3]>[v3484,v3487,v348A];
          real varAcc3497#5 = VIndex<3,0>(pos24B8);
          real varAcc3498#5 = VIndex<3,1>(pos24B8);
          real varAcc3499#5 = VIndex<3,2>(pos24B8);
          real basisEval349A#84 = 0.e0;
          real coeff349B#79 = 0.1e1;
          real prod349C#6 = RMul(coeff349B,coeff349B);
          real prod349D#1 = RMul(coeff349B,prod349C);
          real basisEval349E#3 = RMul(coeff349B,prod349D);
          real iden349F#6 = varAcc3499;
          real prod34A0#5 = RMul(coeff349B,iden349F);
          real prod34A1#2 = RMul(coeff349B,prod34A0);
          real basisEval34A2#2 = RMul(coeff349B,prod34A1);
          real iden34A3#6 = varAcc3498;
          real prod34A4#5 = RMul(iden34A3,coeff349B);
          real prod34A5#2 = RMul(coeff349B,prod34A4);
          real basisEval34A6#2 = RMul(coeff349B,prod34A5);
          real coeff34A7#34 = 0.2e1;
          real iden34A8#16 = varAcc3497;
          real prod34A9#2 = RMul(iden34A8,prod349C);
          real basisEval34AA#1 = RMul(coeff34A7,prod34A9);
          real prod234AB#5 = RMul(iden349F,varAcc3499);
          real prod34AC#4 = RMul(coeff349B,prod234AB);
          real prod34AD#2 = RMul(coeff349B,prod34AC);
          real basisEval34AE#2 = RMul(coeff349B,prod34AD);
          real prod34AF#4 = RMul(iden34A3,iden349F);
          real prod34B0#2 = RMul(coeff349B,prod34AF);
          real basisEval34B1#1 = RMul(coeff349B,prod34B0);
          real prod234B2#5 = RMul(iden34A3,varAcc3498);
          real prod34B3#4 = RMul(prod234B2,coeff349B);
          real prod34B4#2 = RMul(coeff349B,prod34B3);
          real basisEval34B5#2 = RMul(coeff349B,prod34B4);
          real prod34B6#2 = RMul(iden34A8,prod34A0);
          real basisEval34B7#2 = RMul(coeff34A7,prod34B6);
          real prod34B8#2 = RMul(iden34A8,prod34A4);
          real basisEval34B9#2 = RMul(coeff34A7,prod34B8);
          real coeff34BA#24 = 0.3e1;
          real prod234BB#11 = RMul(iden34A8,varAcc3497);
          real prod34BC#2 = RMul(prod234BB,prod349C);
          real basisEval34BD#1 = RMul(coeff34BA,prod34BC);
          real prod334BE#4 = RMul(prod234AB,varAcc3499);
          real prod34BF#3 = RMul(coeff349B,prod334BE);
          real prod34C0#2 = RMul(coeff349B,prod34BF);
          real basisEval34C1#2 = RMul(coeff349B,prod34C0);
          real prod34C2#3 = RMul(iden34A3,prod234AB);
          real prod34C3#3 = RMul(coeff349B,prod34C2);
          real basisEval34C4#1 = RMul(coeff349B,prod34C3);
          real prod34C5#3 = RMul(prod234B2,iden349F);
          real prod34C6#3 = RMul(coeff349B,prod34C5);
          real basisEval34C7#1 = RMul(coeff349B,prod34C6);
          real prod334C8#4 = RMul(prod234B2,varAcc3498);
          real prod34C9#3 = RMul(prod334C8,coeff349B);
          real prod34CA#2 = RMul(coeff349B,prod34C9);
          real basisEval34CB#2 = RMul(coeff349B,prod34CA);
          real prod34CC#3 = RMul(iden34A8,prod34AC);
          real basisEval34CD#1 = RMul(coeff34A7,prod34CC);
          real prod34CE#1 = RMul(iden34A8,prod34AF);
          real basisEval34CF#3 = RMul(coeff34A7,prod34CE);
          real prod34D0#3 = RMul(iden34A8,prod34B3);
          real basisEval34D1#1 = RMul(coeff34A7,prod34D0);
          real prod34D2#3 = RMul(prod234BB,prod34A0);
          real basisEval34D3#1 = RMul(coeff34BA,prod34D2);
          real prod34D4#3 = RMul(prod234BB,prod34A4);
          real basisEval34D5#1 = RMul(coeff34BA,prod34D4);
          real coeff34D6#18 = 0.4e1;
          real prod334D7#7 = RMul(prod234BB,varAcc3497);
          real prod34D8#2 = RMul(prod334D7,prod349C);
          real basisEval34D9#1 = RMul(coeff34D6,prod34D8);
          real prod434DA#3 = RMul(prod334BE,varAcc3499);
          real prod34DB#2 = RMul(coeff349B,prod434DA);
          real prod34DC#2 = RMul(coeff349B,prod34DB);
          real basisEval34DD#2 = RMul(coeff349B,prod34DC);
          real prod34DE#2 = RMul(iden34A3,prod334BE);
          real prod34DF#3 = RMul(coeff349B,prod34DE);
          real basisEval34E0#1 = RMul(coeff349B,prod34DF);
          real prod34E1#2 = RMul(prod234B2,prod234AB);
          real prod34E2#2 = RMul(coeff349B,prod34E1);
          real basisEval34E3#1 = RMul(coeff349B,prod34E2);
          real prod34E4#2 = RMul(prod334C8,iden349F);
          real prod34E5#3 = RMul(coeff349B,prod34E4);
          real basisEval34E6#1 = RMul(coeff349B,prod34E5);
          real prod434E7#3 = RMul(prod334C8,varAcc3498);
          real prod34E8#2 = RMul(prod434E7,coeff349B);
          real prod34E9#2 = RMul(coeff349B,prod34E8);
          real basisEval34EA#2 = RMul(coeff349B,prod34E9);
          real prod34EB#3 = RMul(iden34A8,prod34BF);
          real basisEval34EC#1 = RMul(coeff34A7,prod34EB);
          real prod34ED#2 = RMul(iden34A8,prod34C2);
          real basisEval34EE#2 = RMul(coeff34A7,prod34ED);
          real prod34EF#2 = RMul(iden34A8,prod34C5);
          real basisEval34F0#2 = RMul(coeff34A7,prod34EF);
          real prod34F1#3 = RMul(iden34A8,prod34C9);
          real basisEval34F2#1 = RMul(coeff34A7,prod34F1);
          real prod34F3#2 = RMul(prod234BB,prod34AC);
          real basisEval34F4#2 = RMul(coeff34BA,prod34F3);
          real prod34F5#2 = RMul(prod234BB,prod34AF);
          real basisEval34F6#1 = RMul(coeff34BA,prod34F5);
          real prod34F7#2 = RMul(prod234BB,prod34B3);
          real basisEval34F8#2 = RMul(coeff34BA,prod34F7);
          real prod34F9#3 = RMul(prod334D7,prod34A0);
          real basisEval34FA#1 = RMul(coeff34D6,prod34F9);
          real prod34FB#3 = RMul(prod334D7,prod34A4);
          real basisEval34FC#1 = RMul(coeff34D6,prod34FB);
          real coeff34FD#9 = 0.5e1;
          real prod434FE#4 = RMul(prod334D7,varAcc3497);
          real prod34FF#2 = RMul(prod434FE,prod349C);
          real basisEval3500#1 = RMul(coeff34FD,prod34FF);
          real prod53501#1 = RMul(prod434DA,varAcc3499);
          real prod3502#1 = RMul(coeff349B,prod53501);
          real prod3503#2 = RMul(coeff349B,prod3502);
          real basisEval3504#2 = RMul(coeff349B,prod3503);
          real prod3505#1 = RMul(iden34A3,prod434DA);
          real prod3506#3 = RMul(coeff349B,prod3505);
          real basisEval3507#1 = RMul(coeff349B,prod3506);
          real prod3508#1 = RMul(prod234B2,prod334BE);
          real prod3509#3 = RMul(coeff349B,prod3508);
          real basisEval350A#1 = RMul(coeff349B,prod3509);
          real prod350B#1 = RMul(prod334C8,prod234AB);
          real prod350C#3 = RMul(coeff349B,prod350B);
          real basisEval350D#1 = RMul(coeff349B,prod350C);
          real prod350E#1 = RMul(prod434E7,iden349F);
          real prod350F#3 = RMul(coeff349B,prod350E);
          real basisEval3510#1 = RMul(coeff349B,prod350F);
          real prod53511#1 = RMul(prod434E7,varAcc3498);
          real prod3512#1 = RMul(prod53511,coeff349B);
          real prod3513#2 = RMul(coeff349B,prod3512);
          real basisEval3514#2 = RMul(coeff349B,prod3513);
          real prod3515#3 = RMul(iden34A8,prod34DB);
          real basisEval3516#1 = RMul(coeff34A7,prod3515);
          real prod3517#2 = RMul(iden34A8,prod34DE);
          real basisEval3518#2 = RMul(coeff34A7,prod3517);
          real prod3519#2 = RMul(iden34A8,prod34E1);
          real basisEval351A#1 = RMul(coeff34A7,prod3519);
          real prod351B#2 = RMul(iden34A8,prod34E4);
          real basisEval351C#2 = RMul(coeff34A7,prod351B);
          real prod351D#3 = RMul(iden34A8,prod34E8);
          real basisEval351E#1 = RMul(coeff34A7,prod351D);
          real prod351F#3 = RMul(prod234BB,prod34BF);
          real basisEval3520#1 = RMul(coeff34BA,prod351F);
          real prod3521#2 = RMul(prod234BB,prod34C2);
          real basisEval3522#2 = RMul(coeff34BA,prod3521);
          real prod3523#2 = RMul(prod234BB,prod34C5);
          real basisEval3524#2 = RMul(coeff34BA,prod3523);
          real prod3525#3 = RMul(prod234BB,prod34C9);
          real basisEval3526#1 = RMul(coeff34BA,prod3525);
          real prod3527#3 = RMul(prod334D7,prod34AC);
          real basisEval3528#1 = RMul(coeff34D6,prod3527);
          real prod3529#2 = RMul(prod334D7,prod34AF);
          real basisEval352A#1 = RMul(coeff34D6,prod3529);
          real prod352B#3 = RMul(prod334D7,prod34B3);
          real basisEval352C#1 = RMul(coeff34D6,prod352B);
          real prod352D#3 = RMul(prod434FE,prod34A0);
          real basisEval352E#1 = RMul(coeff34FD,prod352D);
          real prod352F#3 = RMul(prod434FE,prod34A4);
          real basisEval3530#1 = RMul(coeff34FD,prod352F);
          real coeff3531#3 = 0.6e1;
          real prod53532#1 = RMul(prod434FE,varAcc3497);
          real prod3533#2 = RMul(prod53532,prod349C);
          real basisEval3534#1 = RMul(coeff3531,prod3533);
          real basisEval3535#1 = RMul(coeff34A7,prod34A5);
          real basisEval3536#2 = RMul(coeff349B,prod34A9);
          real basisEval3537#2 = RMul(coeff34A7,prod34B0);
          real basisEval3538#1 = RMul(coeff34BA,prod34B4);
          real basisEval3539#1 = RMul(coeff349B,prod34B6);
          real basisEval353A#2 = RMul(coeff349B,prod34BC);
          real basisEval353B#1 = RMul(coeff34A7,prod34C3);
          real basisEval353C#1 = RMul(coeff34BA,prod34C6);
          real basisEval353D#1 = RMul(coeff34D6,prod34CA);
          real basisEval353E#1 = RMul(coeff349B,prod34CC);
          real basisEval353F#1 = RMul(coeff34BA,prod34D0);
          real basisEval3540#1 = RMul(coeff349B,prod34D2);
          real basisEval3541#1 = RMul(coeff34A7,prod34D4);
          real basisEval3542#2 = RMul(coeff349B,prod34D8);
          real basisEval3543#1 = RMul(coeff34A7,prod34DF);
          real basisEval3544#2 = RMul(coeff34BA,prod34E2);
          real basisEval3545#1 = RMul(coeff34D6,prod34E5);
          real basisEval3546#1 = RMul(coeff34FD,prod34E9);
          real basisEval3547#1 = RMul(coeff349B,prod34EB);
          real basisEval3548#1 = RMul(coeff34BA,prod34EF);
          real basisEval3549#1 = RMul(coeff34D6,prod34F1);
          real basisEval354A#1 = RMul(coeff349B,prod34F3);
          real basisEval354B#2 = RMul(coeff34A7,prod34F5);
          real basisEval354C#1 = RMul(coeff349B,prod34F9);
          real basisEval354D#1 = RMul(coeff34A7,prod34FB);
          real basisEval354E#2 = RMul(coeff349B,prod34FF);
          real basisEval354F#1 = RMul(coeff34A7,prod3506);
          real basisEval3550#1 = RMul(coeff34BA,prod3509);
          real basisEval3551#1 = RMul(coeff34D6,prod350C);
          real basisEval3552#1 = RMul(coeff34FD,prod350F);
          real basisEval3553#1 = RMul(coeff3531,prod3513);
          real basisEval3554#1 = RMul(coeff349B,prod3515);
          real basisEval3555#2 = RMul(coeff34BA,prod3519);
          real basisEval3556#1 = RMul(coeff34D6,prod351B);
          real basisEval3557#1 = RMul(coeff34FD,prod351D);
          real basisEval3558#1 = RMul(coeff349B,prod351F);
          real basisEval3559#1 = RMul(coeff34A7,prod3521);
          real basisEval355A#1 = RMul(coeff34D6,prod3525);
          real basisEval355B#1 = RMul(coeff349B,prod3527);
          real basisEval355C#2 = RMul(coeff34A7,prod3529);
          real basisEval355D#1 = RMul(coeff34BA,prod352B);
          real basisEval355E#1 = RMul(coeff349B,prod352D);
          real basisEval355F#1 = RMul(coeff34A7,prod352F);
          real basisEval3560#2 = RMul(coeff349B,prod3533);
          real basisEval3561#1 = RMul(coeff34A7,prod34A1);
          real basisEval3562#1 = RMul(coeff34BA,prod34AD);
          real basisEval3563#1 = RMul(coeff349B,prod34B8);
          real basisEval3564#1 = RMul(coeff34D6,prod34C0);
          real basisEval3565#1 = RMul(coeff34BA,prod34C3);
          real basisEval3566#1 = RMul(coeff34A7,prod34C6);
          real basisEval3567#1 = RMul(coeff34BA,prod34CC);
          real basisEval3568#1 = RMul(coeff349B,prod34D0);
          real basisEval3569#1 = RMul(coeff34A7,prod34D2);
          real basisEval356A#1 = RMul(coeff349B,prod34D4);
          real basisEval356B#1 = RMul(coeff34FD,prod34DC);
          real basisEval356C#1 = RMul(coeff34D6,prod34DF);
          real basisEval356D#1 = RMul(coeff34A7,prod34E5);
          real basisEval356E#1 = RMul(coeff34D6,prod34EB);
          real basisEval356F#1 = RMul(coeff34BA,prod34ED);
          real basisEval3570#1 = RMul(coeff349B,prod34F1);
          real basisEval3571#1 = RMul(coeff349B,prod34F7);
          real basisEval3572#1 = RMul(coeff34A7,prod34F9);
          real basisEval3573#1 = RMul(coeff349B,prod34FB);
          real basisEval3574#1 = RMul(coeff3531,prod3503);
          real basisEval3575#1 = RMul(coeff34FD,prod3506);
          real basisEval3576#1 = RMul(coeff34D6,prod3509);
          real basisEval3577#1 = RMul(coeff34BA,prod350C);
          real basisEval3578#1 = RMul(coeff34A7,prod350F);
          real basisEval3579#1 = RMul(coeff34FD,prod3515);
          real basisEval357A#1 = RMul(coeff34D6,prod3517);
          real basisEval357B#1 = RMul(coeff349B,prod351D);
          real basisEval357C#1 = RMul(coeff34D6,prod351F);
          real basisEval357D#1 = RMul(coeff34A7,prod3523);
          real basisEval357E#1 = RMul(coeff349B,prod3525);
          real basisEval357F#1 = RMul(coeff34BA,prod3527);
          real basisEval3580#1 = RMul(coeff349B,prod352B);
          real basisEval3581#1 = RMul(coeff34A7,prod352D);
          real basisEval3582#1 = RMul(coeff349B,prod352F);
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval349A,basisEval349A,basisEval349A,basisEval349E,basisEval349A,basisEval349A,basisEval349A,basisEval34A2,basisEval34A6,basisEval34AA,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval34AE,basisEval34B1,basisEval34B5,basisEval34B7,basisEval34B9,basisEval34BD,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval34C1,basisEval34C4,basisEval34C7,basisEval34CB,basisEval34CD,basisEval34CF,basisEval34D1,basisEval34D3,basisEval34D5,basisEval34D9,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval34DD,basisEval34E0,basisEval34E3,basisEval34E6,basisEval34EA,basisEval34EC,basisEval34EE,basisEval34F0,basisEval34F2,basisEval34F4,basisEval34F6,basisEval34F8,basisEval34FA,basisEval34FC,basisEval3500,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval3504,basisEval3507,basisEval350A,basisEval350D,basisEval3510,basisEval3514,basisEval3516,basisEval3518,basisEval351A,basisEval351C,basisEval351E,basisEval3520,basisEval3522,basisEval3524,basisEval3526,basisEval3528,basisEval352A,basisEval352C,basisEval352E,basisEval3530,basisEval3534];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval349A,basisEval349A,basisEval349E,basisEval349A,basisEval349A,basisEval34A2,basisEval3535,basisEval349A,basisEval3536,basisEval349A,basisEval349A,basisEval34AE,basisEval3537,basisEval3538,basisEval349A,basisEval3539,basisEval34B9,basisEval349A,basisEval353A,basisEval349A,basisEval349A,basisEval34C1,basisEval353B,basisEval353C,basisEval353D,basisEval349A,basisEval353E,basisEval34CF,basisEval353F,basisEval349A,basisEval3540,basisEval3541,basisEval349A,basisEval3542,basisEval349A,basisEval349A,basisEval34DD,basisEval3543,basisEval3544,basisEval3545,basisEval3546,basisEval349A,basisEval3547,basisEval34EE,basisEval3548,basisEval3549,basisEval349A,basisEval354A,basisEval354B,basisEval34F8,basisEval349A,basisEval354C,basisEval354D,basisEval349A,basisEval354E,basisEval349A,basisEval349A,basisEval3504,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3553,basisEval349A,basisEval3554,basisEval3518,basisEval3555,basisEval3556,basisEval3557,basisEval349A,basisEval3558,basisEval3559,basisEval3524,basisEval355A,basisEval349A,basisEval355B,basisEval355C,basisEval355D,basisEval349A,basisEval355E,basisEval355F,basisEval349A,basisEval3560,basisEval349A];
          tensor[84] intermediateCons3585#1 = <tensor[84]>[basisEval349A,basisEval349E,basisEval349A,basisEval349A,basisEval3561,basisEval34A6,basisEval349A,basisEval3536,basisEval349A,basisEval349A,basisEval3562,basisEval3537,basisEval34B5,basisEval349A,basisEval34B7,basisEval3563,basisEval349A,basisEval353A,basisEval349A,basisEval349A,basisEval3564,basisEval3565,basisEval3566,basisEval34CB,basisEval349A,basisEval3567,basisEval34CF,basisEval3568,basisEval349A,basisEval3569,basisEval356A,basisEval349A,basisEval3542,basisEval349A,basisEval349A,basisEval356B,basisEval356C,basisEval3544,basisEval356D,basisEval34EA,basisEval349A,basisEval356E,basisEval356F,basisEval34F0,basisEval3570,basisEval349A,basisEval34F4,basisEval354B,basisEval3571,basisEval349A,basisEval3572,basisEval3573,basisEval349A,basisEval354E,basisEval349A,basisEval349A,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3578,basisEval3514,basisEval349A,basisEval3579,basisEval357A,basisEval3555,basisEval351C,basisEval357B,basisEval349A,basisEval357C,basisEval3522,basisEval357D,basisEval357E,basisEval349A,basisEval357F,basisEval355C,basisEval3580,basisEval349A,basisEval3581,basisEval3582,basisEval349A,basisEval3560,basisEval349A,basisEval349A];
          tensor[3,84] intermediateCons3586#1 = <tensor[3,84]>[intermediateCons3583,intermediateCons3584,intermediateCons3585];
          tensor[3,84] basisResult3496#3 = intermediateCons3586;
          tensor[84] projParam3679#1 = ProjectLast<tensor[3,84],[0]>(basisResult3496);
          real vdot367A#1 = VDot<84>(femDofs2F6F,projParam3679);
          tensor[84] projParam367B#1 = ProjectLast<tensor[3,84],[1]>(basisResult3496);
          real vdot367C#1 = VDot<84>(femDofs2F6F,projParam367B);
          tensor[84] projParam367D#1 = ProjectLast<tensor[3,84],[2]>(basisResult3496);
          real vdot367E#1 = VDot<84>(femDofs2F6F,projParam367D);
          tensor[3] probe_l_153678#3 = <tensor[3]>[vdot367A,vdot367C,vdot367E];
          tensor[3] projParam3688#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_143481);
          tensor[3] negV3689#1 = VNeg<3>(projParam3688);
          tensor[3] projParam368A#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_143481);
          tensor[3] negV368B#1 = VNeg<3>(projParam368A);
          tensor[3] projParam368C#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_143481);
          tensor[3] negV368D#1 = VNeg<3>(projParam368C);
          tensor[3,3] op1_e3_l_163687#3 = <tensor[3,3]>[negV3689,negV368B,negV368D];
          tensor[3] projParam3697#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_163687);
          real vdot3698#1 = VDot<3>(projParam3697,probe_l_153678);
          tensor[3] projParam3699#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_163687);
          real vdot369A#1 = VDot<3>(projParam3699,probe_l_153678);
          tensor[3] projParam369B#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_163687);
          real vdot369C#1 = VDot<3>(projParam369B,probe_l_153678);
          tensor[3] _t3696#1 = <tensor[3]>[vdot3698,vdot369A,vdot369C];
          goto JOIN36A7
        JOIN36A7:  preds = [ASSIGN36A4,ASSIGN46AB]
          tensor[3] step36A5#5 = phi(_t3696,_t36A6)
          real _t36A8#8 = 0.e0;
          real _t36AA#10 = 0.1e1;
          real _t36AC#1 = 0.15e1;
          real op1_e3_l_736AE#1 = VDot<3>(step36A5,step36A5);
          real op1_e3_l_836B1#3 = Sqrt(op1_e3_l_736AE);
          real op1_e3_l_936B4#1 = Abs<real>(op1_e3_l_836B1);
          real op1_e3_l_1036B7#1 = RDiv(op1_e3_l_936B4,thick247E);
          real op1_e3_l_1136BA#1 = RSub(_t36AA,op1_e3_l_1036B7);
          real op1_e3_l_1236BD#2 = RMul(_t36AC,op1_e3_l_1136BA);
          real op1_e3_l_1336C0#1 = RClamp(_t36A8,_t36AA,op1_e3_l_1236BD);
          real _t36C3#1 = RMul(maxAlpha2486,op1_e3_l_1336C0);
          bool _t36C6#1 = EQ<real>(_t36C3,_t36A8);
          if _t36C6 then goto SAVE36C9 else goto JOIN36CB
        SAVE36C9:  preds = [COND36C8]
          self.rayN = rayN24AC;
          active
          goto JOIN36CB
        JOIN36CB:  preds = [*ACTIVE36CA,COND36C8]
          real op1_e3_l_1436CC#1 = RClamp(_t36A8,_t36AA,op1_e3_l_1236BD);
          real op1_e3_l_1536CF#1 = RMul(maxAlpha2486,op1_e3_l_1436CC);
          real _t36D2#1 = RSub(_t36AA,op1_e3_l_1536CF);
          real _t36D5#1 = MathFn<pow>(_t36D2,alphaFix249C);
          bool _t36D7#1 = NEQ<real>(phKs24A4,_t36A8);
          if _t36D7 then goto ASSIGN36DC else goto JOIN36FF
        ASSIGN36DC:  preds = [COND36D9]
          tensor[3] op1_e3_l_636DA#3 = VAdd<3>(eyeDir249E,litwsp2494);
          real op1_e3_l_836DD#1 = VDot<3>(op1_e3_l_636DA,op1_e3_l_636DA);
          real op1_e3_l_936E0#1 = Sqrt(op1_e3_l_836DD);
          real realLit36E4#1 = 0.1e1;
          real op1_e3_l_1236E3#1 = RDiv(realLit36E4,op1_e3_l_836B1);
          tensor[3] op1_e3_l_1336E8#1 = VScale<3>(op1_e3_l_1236E3,step36A5);
          tensor[3] op1_e3_l_1436EB#1 = VNeg<3>(op1_e3_l_1336E8);
          real realLit36EF#1 = 0.1e1;
          real op1_e3_l_1636EE#1 = RDiv(realLit36EF,op1_e3_l_936E0);
          real op1_e3_l_1736F3#1 = VDot<3>(op1_e3_l_1436EB,op1_e3_l_636DA);
          real op1_e3_l_1836F6#1 = RMul(op1_e3_l_1636EE,op1_e3_l_1736F3);
          real _t36F9#1 = Abs<real>(op1_e3_l_1836F6);
          real scomp36FC#1 = MathFn<pow>(_t36F9,phSp24A6);
          goto JOIN36FF
        JOIN36FF:  preds = [ASSIGN36FD,COND36D9]
          real scomp36FE#1 = phi(scomp36FC,_t36A8)
          real cmin3700#3 = VIndex<2,0>(cminmax248C);
          real cmax3702#2 = VIndex<2,1>(cminmax248C);
          tensor[3] mcol3704#4 = <tensor[3]>[_t36AA,_t36AA,_t36AA];
          bool _t3706#1 = NEQ<real>(cmin3700,cmax3702);
          if _t3706 then goto ASSIGN370C else goto JOIN3DEC
        ASSIGN370C:  preds = [COND3708]
          tensor[3] v370A#1 = VAdd<3>(rayOrig2498,op1_e3_l_524B5);
          tensor[3] _t3709#3 = VAdd<3>(v370A,step36A5);
          int ilit370F#1 = 84;
          int mulRes3710#84 = IMul(_t246C,ilit370F);
          int ilit3711#1 = 0;
          int addRes3712#1 = IAdd(mulRes3710,ilit3711);
          int idx3713#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3712);
          int ilit3714#1 = 1;
          int addRes3715#1 = IAdd(mulRes3710,ilit3714);
          int idx3716#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3715);
          int ilit3717#1 = 2;
          int addRes3718#1 = IAdd(mulRes3710,ilit3717);
          int idx3719#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3718);
          int ilit371A#1 = 3;
          int addRes371B#1 = IAdd(mulRes3710,ilit371A);
          int idx371C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371B);
          int ilit371D#1 = 4;
          int addRes371E#1 = IAdd(mulRes3710,ilit371D);
          int idx371F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371E);
          int ilit3720#1 = 5;
          int addRes3721#1 = IAdd(mulRes3710,ilit3720);
          int idx3722#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3721);
          int ilit3723#1 = 6;
          int addRes3724#1 = IAdd(mulRes3710,ilit3723);
          int idx3725#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3724);
          int ilit3726#1 = 7;
          int addRes3727#1 = IAdd(mulRes3710,ilit3726);
          int idx3728#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3727);
          int ilit3729#1 = 8;
          int addRes372A#1 = IAdd(mulRes3710,ilit3729);
          int idx372B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372A);
          int ilit372C#1 = 9;
          int addRes372D#1 = IAdd(mulRes3710,ilit372C);
          int idx372E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372D);
          int ilit372F#1 = 10;
          int addRes3730#1 = IAdd(mulRes3710,ilit372F);
          int idx3731#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3730);
          int ilit3732#1 = 11;
          int addRes3733#1 = IAdd(mulRes3710,ilit3732);
          int idx3734#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3733);
          int ilit3735#1 = 12;
          int addRes3736#1 = IAdd(mulRes3710,ilit3735);
          int idx3737#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3736);
          int ilit3738#1 = 13;
          int addRes3739#1 = IAdd(mulRes3710,ilit3738);
          int idx373A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3739);
          int ilit373B#1 = 14;
          int addRes373C#1 = IAdd(mulRes3710,ilit373B);
          int idx373D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373C);
          int ilit373E#1 = 15;
          int addRes373F#1 = IAdd(mulRes3710,ilit373E);
          int idx3740#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373F);
          int ilit3741#1 = 16;
          int addRes3742#1 = IAdd(mulRes3710,ilit3741);
          int idx3743#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3742);
          int ilit3744#1 = 17;
          int addRes3745#1 = IAdd(mulRes3710,ilit3744);
          int idx3746#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3745);
          int ilit3747#1 = 18;
          int addRes3748#1 = IAdd(mulRes3710,ilit3747);
          int idx3749#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3748);
          int ilit374A#1 = 19;
          int addRes374B#1 = IAdd(mulRes3710,ilit374A);
          int idx374C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374B);
          int ilit374D#1 = 20;
          int addRes374E#1 = IAdd(mulRes3710,ilit374D);
          int idx374F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374E);
          int ilit3750#1 = 21;
          int addRes3751#1 = IAdd(mulRes3710,ilit3750);
          int idx3752#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3751);
          int ilit3753#1 = 22;
          int addRes3754#1 = IAdd(mulRes3710,ilit3753);
          int idx3755#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3754);
          int ilit3756#1 = 23;
          int addRes3757#1 = IAdd(mulRes3710,ilit3756);
          int idx3758#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3757);
          int ilit3759#1 = 24;
          int addRes375A#1 = IAdd(mulRes3710,ilit3759);
          int idx375B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375A);
          int ilit375C#1 = 25;
          int addRes375D#1 = IAdd(mulRes3710,ilit375C);
          int idx375E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375D);
          int ilit375F#1 = 26;
          int addRes3760#1 = IAdd(mulRes3710,ilit375F);
          int idx3761#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3760);
          int ilit3762#1 = 27;
          int addRes3763#1 = IAdd(mulRes3710,ilit3762);
          int idx3764#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3763);
          int ilit3765#1 = 28;
          int addRes3766#1 = IAdd(mulRes3710,ilit3765);
          int idx3767#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3766);
          int ilit3768#1 = 29;
          int addRes3769#1 = IAdd(mulRes3710,ilit3768);
          int idx376A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3769);
          int ilit376B#1 = 30;
          int addRes376C#1 = IAdd(mulRes3710,ilit376B);
          int idx376D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376C);
          int ilit376E#1 = 31;
          int addRes376F#1 = IAdd(mulRes3710,ilit376E);
          int idx3770#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376F);
          int ilit3771#1 = 32;
          int addRes3772#1 = IAdd(mulRes3710,ilit3771);
          int idx3773#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3772);
          int ilit3774#1 = 33;
          int addRes3775#1 = IAdd(mulRes3710,ilit3774);
          int idx3776#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3775);
          int ilit3777#1 = 34;
          int addRes3778#1 = IAdd(mulRes3710,ilit3777);
          int idx3779#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3778);
          int ilit377A#1 = 35;
          int addRes377B#1 = IAdd(mulRes3710,ilit377A);
          int idx377C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377B);
          int ilit377D#1 = 36;
          int addRes377E#1 = IAdd(mulRes3710,ilit377D);
          int idx377F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377E);
          int ilit3780#1 = 37;
          int addRes3781#1 = IAdd(mulRes3710,ilit3780);
          int idx3782#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3781);
          int ilit3783#1 = 38;
          int addRes3784#1 = IAdd(mulRes3710,ilit3783);
          int idx3785#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3784);
          int ilit3786#1 = 39;
          int addRes3787#1 = IAdd(mulRes3710,ilit3786);
          int idx3788#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3787);
          int ilit3789#1 = 40;
          int addRes378A#1 = IAdd(mulRes3710,ilit3789);
          int idx378B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378A);
          int ilit378C#1 = 41;
          int addRes378D#1 = IAdd(mulRes3710,ilit378C);
          int idx378E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378D);
          int ilit378F#1 = 42;
          int addRes3790#1 = IAdd(mulRes3710,ilit378F);
          int idx3791#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3790);
          int ilit3792#1 = 43;
          int addRes3793#1 = IAdd(mulRes3710,ilit3792);
          int idx3794#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3793);
          int ilit3795#1 = 44;
          int addRes3796#1 = IAdd(mulRes3710,ilit3795);
          int idx3797#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3796);
          int ilit3798#1 = 45;
          int addRes3799#1 = IAdd(mulRes3710,ilit3798);
          int idx379A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3799);
          int ilit379B#1 = 46;
          int addRes379C#1 = IAdd(mulRes3710,ilit379B);
          int idx379D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379C);
          int ilit379E#1 = 47;
          int addRes379F#1 = IAdd(mulRes3710,ilit379E);
          int idx37A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379F);
          int ilit37A1#1 = 48;
          int addRes37A2#1 = IAdd(mulRes3710,ilit37A1);
          int idx37A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A2);
          int ilit37A4#1 = 49;
          int addRes37A5#1 = IAdd(mulRes3710,ilit37A4);
          int idx37A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A5);
          int ilit37A7#1 = 50;
          int addRes37A8#1 = IAdd(mulRes3710,ilit37A7);
          int idx37A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A8);
          int ilit37AA#1 = 51;
          int addRes37AB#1 = IAdd(mulRes3710,ilit37AA);
          int idx37AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AB);
          int ilit37AD#1 = 52;
          int addRes37AE#1 = IAdd(mulRes3710,ilit37AD);
          int idx37AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AE);
          int ilit37B0#1 = 53;
          int addRes37B1#1 = IAdd(mulRes3710,ilit37B0);
          int idx37B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B1);
          int ilit37B3#1 = 54;
          int addRes37B4#1 = IAdd(mulRes3710,ilit37B3);
          int idx37B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B4);
          int ilit37B6#1 = 55;
          int addRes37B7#1 = IAdd(mulRes3710,ilit37B6);
          int idx37B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B7);
          int ilit37B9#1 = 56;
          int addRes37BA#1 = IAdd(mulRes3710,ilit37B9);
          int idx37BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BA);
          int ilit37BC#1 = 57;
          int addRes37BD#1 = IAdd(mulRes3710,ilit37BC);
          int idx37BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BD);
          int ilit37BF#1 = 58;
          int addRes37C0#1 = IAdd(mulRes3710,ilit37BF);
          int idx37C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C0);
          int ilit37C2#1 = 59;
          int addRes37C3#1 = IAdd(mulRes3710,ilit37C2);
          int idx37C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C3);
          int ilit37C5#1 = 60;
          int addRes37C6#1 = IAdd(mulRes3710,ilit37C5);
          int idx37C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C6);
          int ilit37C8#1 = 61;
          int addRes37C9#1 = IAdd(mulRes3710,ilit37C8);
          int idx37CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C9);
          int ilit37CB#1 = 62;
          int addRes37CC#1 = IAdd(mulRes3710,ilit37CB);
          int idx37CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CC);
          int ilit37CE#1 = 63;
          int addRes37CF#1 = IAdd(mulRes3710,ilit37CE);
          int idx37D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CF);
          int ilit37D1#1 = 64;
          int addRes37D2#1 = IAdd(mulRes3710,ilit37D1);
          int idx37D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D2);
          int ilit37D4#1 = 65;
          int addRes37D5#1 = IAdd(mulRes3710,ilit37D4);
          int idx37D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D5);
          int ilit37D7#1 = 66;
          int addRes37D8#1 = IAdd(mulRes3710,ilit37D7);
          int idx37D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D8);
          int ilit37DA#1 = 67;
          int addRes37DB#1 = IAdd(mulRes3710,ilit37DA);
          int idx37DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DB);
          int ilit37DD#1 = 68;
          int addRes37DE#1 = IAdd(mulRes3710,ilit37DD);
          int idx37DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DE);
          int ilit37E0#1 = 69;
          int addRes37E1#1 = IAdd(mulRes3710,ilit37E0);
          int idx37E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E1);
          int ilit37E3#1 = 70;
          int addRes37E4#1 = IAdd(mulRes3710,ilit37E3);
          int idx37E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E4);
          int ilit37E6#1 = 71;
          int addRes37E7#1 = IAdd(mulRes3710,ilit37E6);
          int idx37E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E7);
          int ilit37E9#1 = 72;
          int addRes37EA#1 = IAdd(mulRes3710,ilit37E9);
          int idx37EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37EA);
          int ilit37EC#1 = 73;
          int addRes37ED#1 = IAdd(mulRes3710,ilit37EC);
          int idx37EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37ED);
          int ilit37EF#1 = 74;
          int addRes37F0#1 = IAdd(mulRes3710,ilit37EF);
          int idx37F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F0);
          int ilit37F2#1 = 75;
          int addRes37F3#1 = IAdd(mulRes3710,ilit37F2);
          int idx37F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F3);
          int ilit37F5#1 = 76;
          int addRes37F6#1 = IAdd(mulRes3710,ilit37F5);
          int idx37F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F6);
          int ilit37F8#1 = 77;
          int addRes37F9#1 = IAdd(mulRes3710,ilit37F8);
          int idx37FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F9);
          int ilit37FB#1 = 78;
          int addRes37FC#1 = IAdd(mulRes3710,ilit37FB);
          int idx37FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FC);
          int ilit37FE#1 = 79;
          int addRes37FF#1 = IAdd(mulRes3710,ilit37FE);
          int idx3800#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FF);
          int ilit3801#1 = 80;
          int addRes3802#1 = IAdd(mulRes3710,ilit3801);
          int idx3803#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3802);
          int ilit3804#1 = 81;
          int addRes3805#1 = IAdd(mulRes3710,ilit3804);
          int idx3806#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3805);
          int ilit3807#1 = 82;
          int addRes3808#1 = IAdd(mulRes3710,ilit3807);
          int idx3809#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3808);
          int ilit380A#1 = 83;
          int addRes380B#1 = IAdd(mulRes3710,ilit380A);
          int idx380C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes380B);
          int[84] seq380D#1 = <int[84]>{idx3713,idx3716,idx3719,idx371C,idx371F,idx3722,idx3725,idx3728,idx372B,idx372E,idx3731,idx3734,idx3737,idx373A,idx373D,idx3740,idx3743,idx3746,idx3749,idx374C,idx374F,idx3752,idx3755,idx3758,idx375B,idx375E,idx3761,idx3764,idx3767,idx376A,idx376D,idx3770,idx3773,idx3776,idx3779,idx377C,idx377F,idx3782,idx3785,idx3788,idx378B,idx378E,idx3791,idx3794,idx3797,idx379A,idx379D,idx37A0,idx37A3,idx37A6,idx37A9,idx37AC,idx37AF,idx37B2,idx37B5,idx37B8,idx37BB,idx37BE,idx37C1,idx37C4,idx37C7,idx37CA,idx37CD,idx37D0,idx37D3,idx37D6,idx37D9,idx37DC,idx37DF,idx37E2,idx37E5,idx37E8,idx37EB,idx37EE,idx37F1,idx37F4,idx37F7,idx37FA,idx37FD,idx3800,idx3803,idx3806,idx3809,idx380C};
          int[84] femIndicies370E#84 = seq380D;
          int ilit390F#85 = 1;
          int ilit3910#1 = 0;
          int idx3911#1 = Subscript<int>(femIndicies370E,ilit3910);
          int mulRes3912#1 = IMul(ilit390F,idx3911);
          int idx3913#1 = Subscript<int>(femIndicies370E,ilit390F);
          int mulRes3914#1 = IMul(ilit390F,idx3913);
          int ilit3915#1 = 2;
          int idx3916#1 = Subscript<int>(femIndicies370E,ilit3915);
          int mulRes3917#1 = IMul(ilit390F,idx3916);
          int ilit3918#1 = 3;
          int idx3919#1 = Subscript<int>(femIndicies370E,ilit3918);
          int mulRes391A#1 = IMul(ilit390F,idx3919);
          int ilit391B#1 = 4;
          int idx391C#1 = Subscript<int>(femIndicies370E,ilit391B);
          int mulRes391D#1 = IMul(ilit390F,idx391C);
          int ilit391E#1 = 5;
          int idx391F#1 = Subscript<int>(femIndicies370E,ilit391E);
          int mulRes3920#1 = IMul(ilit390F,idx391F);
          int ilit3921#1 = 6;
          int idx3922#1 = Subscript<int>(femIndicies370E,ilit3921);
          int mulRes3923#1 = IMul(ilit390F,idx3922);
          int ilit3924#1 = 7;
          int idx3925#1 = Subscript<int>(femIndicies370E,ilit3924);
          int mulRes3926#1 = IMul(ilit390F,idx3925);
          int ilit3927#1 = 8;
          int idx3928#1 = Subscript<int>(femIndicies370E,ilit3927);
          int mulRes3929#1 = IMul(ilit390F,idx3928);
          int ilit392A#1 = 9;
          int idx392B#1 = Subscript<int>(femIndicies370E,ilit392A);
          int mulRes392C#1 = IMul(ilit390F,idx392B);
          int ilit392D#1 = 10;
          int idx392E#1 = Subscript<int>(femIndicies370E,ilit392D);
          int mulRes392F#1 = IMul(ilit390F,idx392E);
          int ilit3930#1 = 11;
          int idx3931#1 = Subscript<int>(femIndicies370E,ilit3930);
          int mulRes3932#1 = IMul(ilit390F,idx3931);
          int ilit3933#1 = 12;
          int idx3934#1 = Subscript<int>(femIndicies370E,ilit3933);
          int mulRes3935#1 = IMul(ilit390F,idx3934);
          int ilit3936#1 = 13;
          int idx3937#1 = Subscript<int>(femIndicies370E,ilit3936);
          int mulRes3938#1 = IMul(ilit390F,idx3937);
          int ilit3939#1 = 14;
          int idx393A#1 = Subscript<int>(femIndicies370E,ilit3939);
          int mulRes393B#1 = IMul(ilit390F,idx393A);
          int ilit393C#1 = 15;
          int idx393D#1 = Subscript<int>(femIndicies370E,ilit393C);
          int mulRes393E#1 = IMul(ilit390F,idx393D);
          int ilit393F#1 = 16;
          int idx3940#1 = Subscript<int>(femIndicies370E,ilit393F);
          int mulRes3941#1 = IMul(ilit390F,idx3940);
          int ilit3942#1 = 17;
          int idx3943#1 = Subscript<int>(femIndicies370E,ilit3942);
          int mulRes3944#1 = IMul(ilit390F,idx3943);
          int ilit3945#1 = 18;
          int idx3946#1 = Subscript<int>(femIndicies370E,ilit3945);
          int mulRes3947#1 = IMul(ilit390F,idx3946);
          int ilit3948#1 = 19;
          int idx3949#1 = Subscript<int>(femIndicies370E,ilit3948);
          int mulRes394A#1 = IMul(ilit390F,idx3949);
          int ilit394B#1 = 20;
          int idx394C#1 = Subscript<int>(femIndicies370E,ilit394B);
          int mulRes394D#1 = IMul(ilit390F,idx394C);
          int ilit394E#1 = 21;
          int idx394F#1 = Subscript<int>(femIndicies370E,ilit394E);
          int mulRes3950#1 = IMul(ilit390F,idx394F);
          int ilit3951#1 = 22;
          int idx3952#1 = Subscript<int>(femIndicies370E,ilit3951);
          int mulRes3953#1 = IMul(ilit390F,idx3952);
          int ilit3954#1 = 23;
          int idx3955#1 = Subscript<int>(femIndicies370E,ilit3954);
          int mulRes3956#1 = IMul(ilit390F,idx3955);
          int ilit3957#1 = 24;
          int idx3958#1 = Subscript<int>(femIndicies370E,ilit3957);
          int mulRes3959#1 = IMul(ilit390F,idx3958);
          int ilit395A#1 = 25;
          int idx395B#1 = Subscript<int>(femIndicies370E,ilit395A);
          int mulRes395C#1 = IMul(ilit390F,idx395B);
          int ilit395D#1 = 26;
          int idx395E#1 = Subscript<int>(femIndicies370E,ilit395D);
          int mulRes395F#1 = IMul(ilit390F,idx395E);
          int ilit3960#1 = 27;
          int idx3961#1 = Subscript<int>(femIndicies370E,ilit3960);
          int mulRes3962#1 = IMul(ilit390F,idx3961);
          int ilit3963#1 = 28;
          int idx3964#1 = Subscript<int>(femIndicies370E,ilit3963);
          int mulRes3965#1 = IMul(ilit390F,idx3964);
          int ilit3966#1 = 29;
          int idx3967#1 = Subscript<int>(femIndicies370E,ilit3966);
          int mulRes3968#1 = IMul(ilit390F,idx3967);
          int ilit3969#1 = 30;
          int idx396A#1 = Subscript<int>(femIndicies370E,ilit3969);
          int mulRes396B#1 = IMul(ilit390F,idx396A);
          int ilit396C#1 = 31;
          int idx396D#1 = Subscript<int>(femIndicies370E,ilit396C);
          int mulRes396E#1 = IMul(ilit390F,idx396D);
          int ilit396F#1 = 32;
          int idx3970#1 = Subscript<int>(femIndicies370E,ilit396F);
          int mulRes3971#1 = IMul(ilit390F,idx3970);
          int ilit3972#1 = 33;
          int idx3973#1 = Subscript<int>(femIndicies370E,ilit3972);
          int mulRes3974#1 = IMul(ilit390F,idx3973);
          int ilit3975#1 = 34;
          int idx3976#1 = Subscript<int>(femIndicies370E,ilit3975);
          int mulRes3977#1 = IMul(ilit390F,idx3976);
          int ilit3978#1 = 35;
          int idx3979#1 = Subscript<int>(femIndicies370E,ilit3978);
          int mulRes397A#1 = IMul(ilit390F,idx3979);
          int ilit397B#1 = 36;
          int idx397C#1 = Subscript<int>(femIndicies370E,ilit397B);
          int mulRes397D#1 = IMul(ilit390F,idx397C);
          int ilit397E#1 = 37;
          int idx397F#1 = Subscript<int>(femIndicies370E,ilit397E);
          int mulRes3980#1 = IMul(ilit390F,idx397F);
          int ilit3981#1 = 38;
          int idx3982#1 = Subscript<int>(femIndicies370E,ilit3981);
          int mulRes3983#1 = IMul(ilit390F,idx3982);
          int ilit3984#1 = 39;
          int idx3985#1 = Subscript<int>(femIndicies370E,ilit3984);
          int mulRes3986#1 = IMul(ilit390F,idx3985);
          int ilit3987#1 = 40;
          int idx3988#1 = Subscript<int>(femIndicies370E,ilit3987);
          int mulRes3989#1 = IMul(ilit390F,idx3988);
          int ilit398A#1 = 41;
          int idx398B#1 = Subscript<int>(femIndicies370E,ilit398A);
          int mulRes398C#1 = IMul(ilit390F,idx398B);
          int ilit398D#1 = 42;
          int idx398E#1 = Subscript<int>(femIndicies370E,ilit398D);
          int mulRes398F#1 = IMul(ilit390F,idx398E);
          int ilit3990#1 = 43;
          int idx3991#1 = Subscript<int>(femIndicies370E,ilit3990);
          int mulRes3992#1 = IMul(ilit390F,idx3991);
          int ilit3993#1 = 44;
          int idx3994#1 = Subscript<int>(femIndicies370E,ilit3993);
          int mulRes3995#1 = IMul(ilit390F,idx3994);
          int ilit3996#1 = 45;
          int idx3997#1 = Subscript<int>(femIndicies370E,ilit3996);
          int mulRes3998#1 = IMul(ilit390F,idx3997);
          int ilit3999#1 = 46;
          int idx399A#1 = Subscript<int>(femIndicies370E,ilit3999);
          int mulRes399B#1 = IMul(ilit390F,idx399A);
          int ilit399C#1 = 47;
          int idx399D#1 = Subscript<int>(femIndicies370E,ilit399C);
          int mulRes399E#1 = IMul(ilit390F,idx399D);
          int ilit399F#1 = 48;
          int idx39A0#1 = Subscript<int>(femIndicies370E,ilit399F);
          int mulRes39A1#1 = IMul(ilit390F,idx39A0);
          int ilit39A2#1 = 49;
          int idx39A3#1 = Subscript<int>(femIndicies370E,ilit39A2);
          int mulRes39A4#1 = IMul(ilit390F,idx39A3);
          int ilit39A5#1 = 50;
          int idx39A6#1 = Subscript<int>(femIndicies370E,ilit39A5);
          int mulRes39A7#1 = IMul(ilit390F,idx39A6);
          int ilit39A8#1 = 51;
          int idx39A9#1 = Subscript<int>(femIndicies370E,ilit39A8);
          int mulRes39AA#1 = IMul(ilit390F,idx39A9);
          int ilit39AB#1 = 52;
          int idx39AC#1 = Subscript<int>(femIndicies370E,ilit39AB);
          int mulRes39AD#1 = IMul(ilit390F,idx39AC);
          int ilit39AE#1 = 53;
          int idx39AF#1 = Subscript<int>(femIndicies370E,ilit39AE);
          int mulRes39B0#1 = IMul(ilit390F,idx39AF);
          int ilit39B1#1 = 54;
          int idx39B2#1 = Subscript<int>(femIndicies370E,ilit39B1);
          int mulRes39B3#1 = IMul(ilit390F,idx39B2);
          int ilit39B4#1 = 55;
          int idx39B5#1 = Subscript<int>(femIndicies370E,ilit39B4);
          int mulRes39B6#1 = IMul(ilit390F,idx39B5);
          int ilit39B7#1 = 56;
          int idx39B8#1 = Subscript<int>(femIndicies370E,ilit39B7);
          int mulRes39B9#1 = IMul(ilit390F,idx39B8);
          int ilit39BA#1 = 57;
          int idx39BB#1 = Subscript<int>(femIndicies370E,ilit39BA);
          int mulRes39BC#1 = IMul(ilit390F,idx39BB);
          int ilit39BD#1 = 58;
          int idx39BE#1 = Subscript<int>(femIndicies370E,ilit39BD);
          int mulRes39BF#1 = IMul(ilit390F,idx39BE);
          int ilit39C0#1 = 59;
          int idx39C1#1 = Subscript<int>(femIndicies370E,ilit39C0);
          int mulRes39C2#1 = IMul(ilit390F,idx39C1);
          int ilit39C3#1 = 60;
          int idx39C4#1 = Subscript<int>(femIndicies370E,ilit39C3);
          int mulRes39C5#1 = IMul(ilit390F,idx39C4);
          int ilit39C6#1 = 61;
          int idx39C7#1 = Subscript<int>(femIndicies370E,ilit39C6);
          int mulRes39C8#1 = IMul(ilit390F,idx39C7);
          int ilit39C9#1 = 62;
          int idx39CA#1 = Subscript<int>(femIndicies370E,ilit39C9);
          int mulRes39CB#1 = IMul(ilit390F,idx39CA);
          int ilit39CC#1 = 63;
          int idx39CD#1 = Subscript<int>(femIndicies370E,ilit39CC);
          int mulRes39CE#1 = IMul(ilit390F,idx39CD);
          int ilit39CF#1 = 64;
          int idx39D0#1 = Subscript<int>(femIndicies370E,ilit39CF);
          int mulRes39D1#1 = IMul(ilit390F,idx39D0);
          int ilit39D2#1 = 65;
          int idx39D3#1 = Subscript<int>(femIndicies370E,ilit39D2);
          int mulRes39D4#1 = IMul(ilit390F,idx39D3);
          int ilit39D5#1 = 66;
          int idx39D6#1 = Subscript<int>(femIndicies370E,ilit39D5);
          int mulRes39D7#1 = IMul(ilit390F,idx39D6);
          int ilit39D8#1 = 67;
          int idx39D9#1 = Subscript<int>(femIndicies370E,ilit39D8);
          int mulRes39DA#1 = IMul(ilit390F,idx39D9);
          int ilit39DB#1 = 68;
          int idx39DC#1 = Subscript<int>(femIndicies370E,ilit39DB);
          int mulRes39DD#1 = IMul(ilit390F,idx39DC);
          int ilit39DE#1 = 69;
          int idx39DF#1 = Subscript<int>(femIndicies370E,ilit39DE);
          int mulRes39E0#1 = IMul(ilit390F,idx39DF);
          int ilit39E1#1 = 70;
          int idx39E2#1 = Subscript<int>(femIndicies370E,ilit39E1);
          int mulRes39E3#1 = IMul(ilit390F,idx39E2);
          int ilit39E4#1 = 71;
          int idx39E5#1 = Subscript<int>(femIndicies370E,ilit39E4);
          int mulRes39E6#1 = IMul(ilit390F,idx39E5);
          int ilit39E7#1 = 72;
          int idx39E8#1 = Subscript<int>(femIndicies370E,ilit39E7);
          int mulRes39E9#1 = IMul(ilit390F,idx39E8);
          int ilit39EA#1 = 73;
          int idx39EB#1 = Subscript<int>(femIndicies370E,ilit39EA);
          int mulRes39EC#1 = IMul(ilit390F,idx39EB);
          int ilit39ED#1 = 74;
          int idx39EE#1 = Subscript<int>(femIndicies370E,ilit39ED);
          int mulRes39EF#1 = IMul(ilit390F,idx39EE);
          int ilit39F0#1 = 75;
          int idx39F1#1 = Subscript<int>(femIndicies370E,ilit39F0);
          int mulRes39F2#1 = IMul(ilit390F,idx39F1);
          int ilit39F3#1 = 76;
          int idx39F4#1 = Subscript<int>(femIndicies370E,ilit39F3);
          int mulRes39F5#1 = IMul(ilit390F,idx39F4);
          int ilit39F6#1 = 77;
          int idx39F7#1 = Subscript<int>(femIndicies370E,ilit39F6);
          int mulRes39F8#1 = IMul(ilit390F,idx39F7);
          int ilit39F9#1 = 78;
          int idx39FA#1 = Subscript<int>(femIndicies370E,ilit39F9);
          int mulRes39FB#1 = IMul(ilit390F,idx39FA);
          int ilit39FC#1 = 79;
          int idx39FD#1 = Subscript<int>(femIndicies370E,ilit39FC);
          int mulRes39FE#1 = IMul(ilit390F,idx39FD);
          int ilit39FF#1 = 80;
          int idx3A00#1 = Subscript<int>(femIndicies370E,ilit39FF);
          int mulRes3A01#1 = IMul(ilit390F,idx3A00);
          int ilit3A02#1 = 81;
          int idx3A03#1 = Subscript<int>(femIndicies370E,ilit3A02);
          int mulRes3A04#1 = IMul(ilit390F,idx3A03);
          int ilit3A05#1 = 82;
          int idx3A06#1 = Subscript<int>(femIndicies370E,ilit3A05);
          int mulRes3A07#1 = IMul(ilit390F,idx3A06);
          int ilit3A08#1 = 83;
          int idx3A09#1 = Subscript<int>(femIndicies370E,ilit3A08);
          int mulRes3A0A#1 = IMul(ilit390F,idx3A09);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3912);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3914);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3917);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391A);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391D);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3920);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3923);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3926);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3929);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392C);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392F);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3932);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3935);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3938);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393B);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393E);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3941);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3944);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3947);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394A);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394D);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3950);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3953);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3956);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3959);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395C);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395F);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3962);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3965);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3968);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396B);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396E);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3971);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3974);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3977);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397A);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397D);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3980);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3983);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3986);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3989);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398C);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398F);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3992);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3995);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3998);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399B);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399E);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A1);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A4);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A7);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AA);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AD);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B0);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B3);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B6);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B9);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BC);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BF);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C2);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C5);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C8);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CB);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CE);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D1);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D4);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D7);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DA);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DD);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E0);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E3);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E6);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E9);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EC);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EF);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F2);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F5);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F8);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FB);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FE);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A01);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A04);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A07);
          real dof3A5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A0A);
          tensor[84] dofs3A5F#1 = <tensor[84]>[dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D,dof3A5E];
          tensor[84] femDofs390E#1 = dofs3A5F;
          real varAcc3BB3#6 = VIndex<3,0>(_t3709);
          real varAcc3BB4#6 = VIndex<3,1>(_t3709);
          real varAcc3BB5#6 = VIndex<3,2>(_t3709);
          real coeff3BB6#126 = 0.1e1;
          real prod3BB7#7 = RMul(coeff3BB6,coeff3BB6);
          real prod3BB8#1 = RMul(coeff3BB6,prod3BB7);
          real basisEval3BB9#1 = RMul(coeff3BB6,prod3BB8);
          real iden3BBA#7 = varAcc3BB5;
          real prod3BBB#6 = RMul(coeff3BB6,iden3BBA);
          real prod3BBC#1 = RMul(coeff3BB6,prod3BBB);
          real basisEval3BBD#1 = RMul(coeff3BB6,prod3BBC);
          real iden3BBE#7 = varAcc3BB4;
          real prod3BBF#6 = RMul(iden3BBE,coeff3BB6);
          real prod3BC0#1 = RMul(coeff3BB6,prod3BBF);
          real basisEval3BC1#1 = RMul(coeff3BB6,prod3BC0);
          real iden3BC2#22 = varAcc3BB3;
          real prod3BC3#1 = RMul(iden3BC2,prod3BB7);
          real basisEval3BC4#1 = RMul(coeff3BB6,prod3BC3);
          real prod23BC5#6 = RMul(iden3BBA,varAcc3BB5);
          real prod3BC6#5 = RMul(coeff3BB6,prod23BC5);
          real prod3BC7#1 = RMul(coeff3BB6,prod3BC6);
          real basisEval3BC8#1 = RMul(coeff3BB6,prod3BC7);
          real prod3BC9#5 = RMul(iden3BBE,iden3BBA);
          real prod3BCA#1 = RMul(coeff3BB6,prod3BC9);
          real basisEval3BCB#1 = RMul(coeff3BB6,prod3BCA);
          real prod23BCC#6 = RMul(iden3BBE,varAcc3BB4);
          real prod3BCD#5 = RMul(prod23BCC,coeff3BB6);
          real prod3BCE#1 = RMul(coeff3BB6,prod3BCD);
          real basisEval3BCF#1 = RMul(coeff3BB6,prod3BCE);
          real prod3BD0#1 = RMul(iden3BC2,prod3BBB);
          real basisEval3BD1#1 = RMul(coeff3BB6,prod3BD0);
          real prod3BD2#1 = RMul(iden3BC2,prod3BBF);
          real basisEval3BD3#1 = RMul(coeff3BB6,prod3BD2);
          real prod23BD4#16 = RMul(iden3BC2,varAcc3BB3);
          real prod3BD5#1 = RMul(prod23BD4,prod3BB7);
          real basisEval3BD6#1 = RMul(coeff3BB6,prod3BD5);
          real prod33BD7#5 = RMul(prod23BC5,varAcc3BB5);
          real prod3BD8#4 = RMul(coeff3BB6,prod33BD7);
          real prod3BD9#1 = RMul(coeff3BB6,prod3BD8);
          real basisEval3BDA#1 = RMul(coeff3BB6,prod3BD9);
          real prod3BDB#4 = RMul(iden3BBE,prod23BC5);
          real prod3BDC#1 = RMul(coeff3BB6,prod3BDB);
          real basisEval3BDD#1 = RMul(coeff3BB6,prod3BDC);
          real prod3BDE#4 = RMul(prod23BCC,iden3BBA);
          real prod3BDF#1 = RMul(coeff3BB6,prod3BDE);
          real basisEval3BE0#1 = RMul(coeff3BB6,prod3BDF);
          real prod33BE1#5 = RMul(prod23BCC,varAcc3BB4);
          real prod3BE2#4 = RMul(prod33BE1,coeff3BB6);
          real prod3BE3#1 = RMul(coeff3BB6,prod3BE2);
          real basisEval3BE4#1 = RMul(coeff3BB6,prod3BE3);
          real prod3BE5#1 = RMul(iden3BC2,prod3BC6);
          real basisEval3BE6#1 = RMul(coeff3BB6,prod3BE5);
          real prod3BE7#1 = RMul(iden3BC2,prod3BC9);
          real basisEval3BE8#1 = RMul(coeff3BB6,prod3BE7);
          real prod3BE9#1 = RMul(iden3BC2,prod3BCD);
          real basisEval3BEA#1 = RMul(coeff3BB6,prod3BE9);
          real prod3BEB#1 = RMul(prod23BD4,prod3BBB);
          real basisEval3BEC#1 = RMul(coeff3BB6,prod3BEB);
          real prod3BED#1 = RMul(prod23BD4,prod3BBF);
          real basisEval3BEE#1 = RMul(coeff3BB6,prod3BED);
          real prod33BEF#11 = RMul(prod23BD4,varAcc3BB3);
          real prod3BF0#1 = RMul(prod33BEF,prod3BB7);
          real basisEval3BF1#1 = RMul(coeff3BB6,prod3BF0);
          real prod43BF2#4 = RMul(prod33BD7,varAcc3BB5);
          real prod3BF3#3 = RMul(coeff3BB6,prod43BF2);
          real prod3BF4#1 = RMul(coeff3BB6,prod3BF3);
          real basisEval3BF5#1 = RMul(coeff3BB6,prod3BF4);
          real prod3BF6#3 = RMul(iden3BBE,prod33BD7);
          real prod3BF7#1 = RMul(coeff3BB6,prod3BF6);
          real basisEval3BF8#1 = RMul(coeff3BB6,prod3BF7);
          real prod3BF9#3 = RMul(prod23BCC,prod23BC5);
          real prod3BFA#1 = RMul(coeff3BB6,prod3BF9);
          real basisEval3BFB#1 = RMul(coeff3BB6,prod3BFA);
          real prod3BFC#3 = RMul(prod33BE1,iden3BBA);
          real prod3BFD#1 = RMul(coeff3BB6,prod3BFC);
          real basisEval3BFE#1 = RMul(coeff3BB6,prod3BFD);
          real prod43BFF#4 = RMul(prod33BE1,varAcc3BB4);
          real prod3C00#3 = RMul(prod43BFF,coeff3BB6);
          real prod3C01#1 = RMul(coeff3BB6,prod3C00);
          real basisEval3C02#1 = RMul(coeff3BB6,prod3C01);
          real prod3C03#1 = RMul(iden3BC2,prod3BD8);
          real basisEval3C04#1 = RMul(coeff3BB6,prod3C03);
          real prod3C05#1 = RMul(iden3BC2,prod3BDB);
          real basisEval3C06#1 = RMul(coeff3BB6,prod3C05);
          real prod3C07#1 = RMul(iden3BC2,prod3BDE);
          real basisEval3C08#1 = RMul(coeff3BB6,prod3C07);
          real prod3C09#1 = RMul(iden3BC2,prod3BE2);
          real basisEval3C0A#1 = RMul(coeff3BB6,prod3C09);
          real prod3C0B#1 = RMul(prod23BD4,prod3BC6);
          real basisEval3C0C#1 = RMul(coeff3BB6,prod3C0B);
          real prod3C0D#1 = RMul(prod23BD4,prod3BC9);
          real basisEval3C0E#1 = RMul(coeff3BB6,prod3C0D);
          real prod3C0F#1 = RMul(prod23BD4,prod3BCD);
          real basisEval3C10#1 = RMul(coeff3BB6,prod3C0F);
          real prod3C11#1 = RMul(prod33BEF,prod3BBB);
          real basisEval3C12#1 = RMul(coeff3BB6,prod3C11);
          real prod3C13#1 = RMul(prod33BEF,prod3BBF);
          real basisEval3C14#1 = RMul(coeff3BB6,prod3C13);
          real prod43C15#7 = RMul(prod33BEF,varAcc3BB3);
          real prod3C16#1 = RMul(prod43C15,prod3BB7);
          real basisEval3C17#1 = RMul(coeff3BB6,prod3C16);
          real prod53C18#3 = RMul(prod43BF2,varAcc3BB5);
          real prod3C19#2 = RMul(coeff3BB6,prod53C18);
          real prod3C1A#1 = RMul(coeff3BB6,prod3C19);
          real basisEval3C1B#1 = RMul(coeff3BB6,prod3C1A);
          real prod3C1C#2 = RMul(iden3BBE,prod43BF2);
          real prod3C1D#1 = RMul(coeff3BB6,prod3C1C);
          real basisEval3C1E#1 = RMul(coeff3BB6,prod3C1D);
          real prod3C1F#2 = RMul(prod23BCC,prod33BD7);
          real prod3C20#1 = RMul(coeff3BB6,prod3C1F);
          real basisEval3C21#1 = RMul(coeff3BB6,prod3C20);
          real prod3C22#2 = RMul(prod33BE1,prod23BC5);
          real prod3C23#1 = RMul(coeff3BB6,prod3C22);
          real basisEval3C24#1 = RMul(coeff3BB6,prod3C23);
          real prod3C25#2 = RMul(prod43BFF,iden3BBA);
          real prod3C26#1 = RMul(coeff3BB6,prod3C25);
          real basisEval3C27#1 = RMul(coeff3BB6,prod3C26);
          real prod53C28#3 = RMul(prod43BFF,varAcc3BB4);
          real prod3C29#2 = RMul(prod53C28,coeff3BB6);
          real prod3C2A#1 = RMul(coeff3BB6,prod3C29);
          real basisEval3C2B#1 = RMul(coeff3BB6,prod3C2A);
          real prod3C2C#1 = RMul(iden3BC2,prod3BF3);
          real basisEval3C2D#1 = RMul(coeff3BB6,prod3C2C);
          real prod3C2E#1 = RMul(iden3BC2,prod3BF6);
          real basisEval3C2F#1 = RMul(coeff3BB6,prod3C2E);
          real prod3C30#1 = RMul(iden3BC2,prod3BF9);
          real basisEval3C31#1 = RMul(coeff3BB6,prod3C30);
          real prod3C32#1 = RMul(iden3BC2,prod3BFC);
          real basisEval3C33#1 = RMul(coeff3BB6,prod3C32);
          real prod3C34#1 = RMul(iden3BC2,prod3C00);
          real basisEval3C35#1 = RMul(coeff3BB6,prod3C34);
          real prod3C36#1 = RMul(prod23BD4,prod3BD8);
          real basisEval3C37#1 = RMul(coeff3BB6,prod3C36);
          real prod3C38#1 = RMul(prod23BD4,prod3BDB);
          real basisEval3C39#1 = RMul(coeff3BB6,prod3C38);
          real prod3C3A#1 = RMul(prod23BD4,prod3BDE);
          real basisEval3C3B#1 = RMul(coeff3BB6,prod3C3A);
          real prod3C3C#1 = RMul(prod23BD4,prod3BE2);
          real basisEval3C3D#1 = RMul(coeff3BB6,prod3C3C);
          real prod3C3E#1 = RMul(prod33BEF,prod3BC6);
          real basisEval3C3F#1 = RMul(coeff3BB6,prod3C3E);
          real prod3C40#1 = RMul(prod33BEF,prod3BC9);
          real basisEval3C41#1 = RMul(coeff3BB6,prod3C40);
          real prod3C42#1 = RMul(prod33BEF,prod3BCD);
          real basisEval3C43#1 = RMul(coeff3BB6,prod3C42);
          real prod3C44#1 = RMul(prod43C15,prod3BBB);
          real basisEval3C45#1 = RMul(coeff3BB6,prod3C44);
          real prod3C46#1 = RMul(prod43C15,prod3BBF);
          real basisEval3C47#1 = RMul(coeff3BB6,prod3C46);
          real prod53C48#4 = RMul(prod43C15,varAcc3BB3);
          real prod3C49#1 = RMul(prod53C48,prod3BB7);
          real basisEval3C4A#1 = RMul(coeff3BB6,prod3C49);
          real prod63C4B#1 = RMul(prod53C18,varAcc3BB5);
          real prod3C4C#1 = RMul(coeff3BB6,prod63C4B);
          real prod3C4D#1 = RMul(coeff3BB6,prod3C4C);
          real basisEval3C4E#1 = RMul(coeff3BB6,prod3C4D);
          real prod3C4F#1 = RMul(iden3BBE,prod53C18);
          real prod3C50#1 = RMul(coeff3BB6,prod3C4F);
          real basisEval3C51#1 = RMul(coeff3BB6,prod3C50);
          real prod3C52#1 = RMul(prod23BCC,prod43BF2);
          real prod3C53#1 = RMul(coeff3BB6,prod3C52);
          real basisEval3C54#1 = RMul(coeff3BB6,prod3C53);
          real prod3C55#1 = RMul(prod33BE1,prod33BD7);
          real prod3C56#1 = RMul(coeff3BB6,prod3C55);
          real basisEval3C57#1 = RMul(coeff3BB6,prod3C56);
          real prod3C58#1 = RMul(prod43BFF,prod23BC5);
          real prod3C59#1 = RMul(coeff3BB6,prod3C58);
          real basisEval3C5A#1 = RMul(coeff3BB6,prod3C59);
          real prod3C5B#1 = RMul(prod53C28,iden3BBA);
          real prod3C5C#1 = RMul(coeff3BB6,prod3C5B);
          real basisEval3C5D#1 = RMul(coeff3BB6,prod3C5C);
          real prod63C5E#1 = RMul(prod53C28,varAcc3BB4);
          real prod3C5F#1 = RMul(prod63C5E,coeff3BB6);
          real prod3C60#1 = RMul(coeff3BB6,prod3C5F);
          real basisEval3C61#1 = RMul(coeff3BB6,prod3C60);
          real prod3C62#1 = RMul(iden3BC2,prod3C19);
          real basisEval3C63#1 = RMul(coeff3BB6,prod3C62);
          real prod3C64#1 = RMul(iden3BC2,prod3C1C);
          real basisEval3C65#1 = RMul(coeff3BB6,prod3C64);
          real prod3C66#1 = RMul(iden3BC2,prod3C1F);
          real basisEval3C67#1 = RMul(coeff3BB6,prod3C66);
          real prod3C68#1 = RMul(iden3BC2,prod3C22);
          real basisEval3C69#1 = RMul(coeff3BB6,prod3C68);
          real prod3C6A#1 = RMul(iden3BC2,prod3C25);
          real basisEval3C6B#1 = RMul(coeff3BB6,prod3C6A);
          real prod3C6C#1 = RMul(iden3BC2,prod3C29);
          real basisEval3C6D#1 = RMul(coeff3BB6,prod3C6C);
          real prod3C6E#1 = RMul(prod23BD4,prod3BF3);
          real basisEval3C6F#1 = RMul(coeff3BB6,prod3C6E);
          real prod3C70#1 = RMul(prod23BD4,prod3BF6);
          real basisEval3C71#1 = RMul(coeff3BB6,prod3C70);
          real prod3C72#1 = RMul(prod23BD4,prod3BF9);
          real basisEval3C73#1 = RMul(coeff3BB6,prod3C72);
          real prod3C74#1 = RMul(prod23BD4,prod3BFC);
          real basisEval3C75#1 = RMul(coeff3BB6,prod3C74);
          real prod3C76#1 = RMul(prod23BD4,prod3C00);
          real basisEval3C77#1 = RMul(coeff3BB6,prod3C76);
          real prod3C78#1 = RMul(prod33BEF,prod3BD8);
          real basisEval3C79#1 = RMul(coeff3BB6,prod3C78);
          real prod3C7A#1 = RMul(prod33BEF,prod3BDB);
          real basisEval3C7B#1 = RMul(coeff3BB6,prod3C7A);
          real prod3C7C#1 = RMul(prod33BEF,prod3BDE);
          real basisEval3C7D#1 = RMul(coeff3BB6,prod3C7C);
          real prod3C7E#1 = RMul(prod33BEF,prod3BE2);
          real basisEval3C7F#1 = RMul(coeff3BB6,prod3C7E);
          real prod3C80#1 = RMul(prod43C15,prod3BC6);
          real basisEval3C81#1 = RMul(coeff3BB6,prod3C80);
          real prod3C82#1 = RMul(prod43C15,prod3BC9);
          real basisEval3C83#1 = RMul(coeff3BB6,prod3C82);
          real prod3C84#1 = RMul(prod43C15,prod3BCD);
          real basisEval3C85#1 = RMul(coeff3BB6,prod3C84);
          real prod3C86#1 = RMul(prod53C48,prod3BBB);
          real basisEval3C87#1 = RMul(coeff3BB6,prod3C86);
          real prod3C88#1 = RMul(prod53C48,prod3BBF);
          real basisEval3C89#1 = RMul(coeff3BB6,prod3C88);
          real prod63C8A#1 = RMul(prod53C48,varAcc3BB3);
          real prod3C8B#1 = RMul(prod63C8A,prod3BB7);
          real basisEval3C8C#1 = RMul(coeff3BB6,prod3C8B);
          tensor[84] intermediateCons3C8D#1 = <tensor[84]>[basisEval3BB9,basisEval3BBD,basisEval3BC1,basisEval3BC4,basisEval3BC8,basisEval3BCB,basisEval3BCF,basisEval3BD1,basisEval3BD3,basisEval3BD6,basisEval3BDA,basisEval3BDD,basisEval3BE0,basisEval3BE4,basisEval3BE6,basisEval3BE8,basisEval3BEA,basisEval3BEC,basisEval3BEE,basisEval3BF1,basisEval3BF5,basisEval3BF8,basisEval3BFB,basisEval3BFE,basisEval3C02,basisEval3C04,basisEval3C06,basisEval3C08,basisEval3C0A,basisEval3C0C,basisEval3C0E,basisEval3C10,basisEval3C12,basisEval3C14,basisEval3C17,basisEval3C1B,basisEval3C1E,basisEval3C21,basisEval3C24,basisEval3C27,basisEval3C2B,basisEval3C2D,basisEval3C2F,basisEval3C31,basisEval3C33,basisEval3C35,basisEval3C37,basisEval3C39,basisEval3C3B,basisEval3C3D,basisEval3C3F,basisEval3C41,basisEval3C43,basisEval3C45,basisEval3C47,basisEval3C4A,basisEval3C4E,basisEval3C51,basisEval3C54,basisEval3C57,basisEval3C5A,basisEval3C5D,basisEval3C61,basisEval3C63,basisEval3C65,basisEval3C67,basisEval3C69,basisEval3C6B,basisEval3C6D,basisEval3C6F,basisEval3C71,basisEval3C73,basisEval3C75,basisEval3C77,basisEval3C79,basisEval3C7B,basisEval3C7D,basisEval3C7F,basisEval3C81,basisEval3C83,basisEval3C85,basisEval3C87,basisEval3C89,basisEval3C8C];
          tensor[84] basisResult3BB2#1 = intermediateCons3C8D;
          real probe_l_83D6A#1 = VDot<84>(femDofs390E,basisResult3BB2);
          real op1_e3_l_93D6D#1 = RSub(probe_l_83D6A,cmin3700);
          real op1_e3_l_103D70#1 = RSub(cmax3702,cmin3700);
          real op1_e3_l_113D73#1 = RDiv(op1_e3_l_93D6D,op1_e3_l_103D70);
          real op1_e3_l_123D76#1 = RSub(_t36AA,_t36A8);
          real op1_e3_l_133D79#1 = RMul(op1_e3_l_113D73,op1_e3_l_123D76);
          real _t3D7C#1 = RAdd(_t36A8,op1_e3_l_133D79);
          real Mtransform3D7F#1 = Transform<IMAGE1D<double[3]>>(cmap246A);
          real MxPos3D81#1 = RMul(Mtransform3D7F,_t3D7C);
          real Ttranslate3D84#1 = Translate<IMAGE1D<double[3]>>(cmap246A);
          real imgPos3D86#2 = RAdd(MxPos3D81,Ttranslate3D84);
          real nd3D89#2 = Floor<1>(imgPos3D86);
          real f3D8B#2 = RSub(imgPos3D86,nd3D89);
          int n3D8E#1 = RealToInt<1>(nd3D89);
          int idx3D90#5 = n3D8E;
          bool isInside3D92#1 = IndexInside<IMAGE1D<double[3]>,2>(idx3D90,cmap246A);
          if isInside3D92 then goto ASSIGN3DAC else goto ASSIGN3E87
        ASSIGN3DAC:  preds = [COND3D94]
          int ilit3D96#1 = 0;
          int addRes3D97#1 = IAdd(idx3D90,ilit3D96);
          int stride3D98#2 = 3;
          int offp3D99#3 = IMul(stride3D98,addRes3D97);
          real v0_3D9A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D99);
          int ilit3D9B#3 = 1;
          int addRes3D9C#1 = IAdd(idx3D90,ilit3D9B);
          int offp3D9D#3 = IMul(stride3D98,addRes3D9C);
          real v1_3D9E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D9D);
          tensor[2] v_3D9F#1 = <tensor[2]>[v0_3D9A,v1_3D9E];
          int offp3DA0#1 = IAdd(offp3D99,ilit3D9B);
          real v0_3DA1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA0);
          int offp3DA2#1 = IAdd(offp3D9D,ilit3D9B);
          real v1_3DA3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA2);
          tensor[2] v_3DA4#1 = <tensor[2]>[v0_3DA1,v1_3DA3];
          int offset3DA5#2 = 2;
          int offp3DA6#1 = IAdd(offp3D99,offset3DA5);
          real v0_3DA7#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA6);
          int offp3DA8#1 = IAdd(offp3D9D,offset3DA5);
          real v1_3DA9#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA8);
          tensor[2] v_3DAA#1 = <tensor[2]>[v0_3DA7,v1_3DA9];
          tensor[3,2] voxels3DAB#1 = <tensor[3,2]>[v_3D9F,v_3DA4,v_3DAA];
          tensor[3,2] ldvox3D95#1 = voxels3DAB;
          goto JOIN3DC5
        JOIN3DC5:  preds = [ASSIGN3DC2,ASSIGN3E9F]
          tensor[3,2] ldvox3DC3#3 = phi(ldvox3D95,ldvox3DC4)
          real rlit3DC7#1 = 0.1e1;
          real idx3DC8#1 = RSub(f3D8B,rlit3DC7);
          tensor[2] kernX_3DC6#1 = <tensor[2]>[f3D8B,idx3DC8];
          real _f3DD1#1 = 0.1e1;
          real _f3DD2#1 = 0.1e1;
          tensor[2] a03DCD#1 = <tensor[2]>[_f3DD1,_f3DD2];
          real _f3DCF#1 = -0.1e1;
          real _f3DD0#1 = 0.1e1;
          tensor[2] a13DCE#1 = <tensor[2]>[_f3DCF,_f3DD0];
          tensor[2] prod13DD3#1 = VMul<2>(kernX_3DC6,a13DCE);
          tensor[2] kevalX_d0_3DCC#3 = VAdd<2>(a03DCD,prod13DD3);
          tensor[2] projIx3DDD#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC3);
          real vdot3DDE#1 = VDot<2>(projIx3DDD,kevalX_d0_3DCC);
          tensor[2] projIx3DDF#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC3);
          real vdot3DE0#1 = VDot<2>(projIx3DDF,kevalX_d0_3DCC);
          tensor[2] projIx3DE1#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC3);
          real vdot3DE2#1 = VDot<2>(projIx3DE1,kevalX_d0_3DCC);
          tensor[3] mcol3DDC#1 = <tensor[3]>[vdot3DDE,vdot3DE0,vdot3DE2];
          goto JOIN3DEC
        JOIN3DEC:  preds = [ASSIGN3DEA,COND3708]
          tensor[3] mcol3DEB#3 = phi(mcol3DDC,mcol3704)
          real realLit3DEE#1 = 0.1e1;
          real op1_e3_l_213DED#1 = RDiv(realLit3DEE,op1_e3_l_836B1);
          tensor[3] op1_e3_l_223DF2#1 = VScale<3>(op1_e3_l_213DED,step36A5);
          tensor[3] op1_e3_l_233DF5#1 = VNeg<3>(op1_e3_l_223DF2);
          real op1_e3_l_243DF8#2 = VDot<3>(op1_e3_l_233DF5,litwsp2494);
          real op1_e3_l_253DFB#1 = RMul(op1_e3_l_243DF8,op1_e3_l_243DF8);
          real op1_e3_l_263DFE#1 = RMul(phKd24A2,op1_e3_l_253DFB);
          real op1_e3_l_283E01#1 = RSub(rayN24AC,camNearVsp2490);
          real op1_e3_l_293E04#1 = RSub(camFarVsp2492,camNearVsp2490);
          real op1_e3_l_303E07#1 = RDiv(op1_e3_l_283E01,op1_e3_l_293E04);
          tensor[3] op1_e3_l_313E0A#1 = VSub<3>(mcFar248A,mcNear2488);
          tensor[3] op1_e3_l_323E0D#1 = VScale<3>(op1_e3_l_303E07,op1_e3_l_313E0A);
          real op1_e3_l_333E10#3 = RAdd(phKa24A0,op1_e3_l_263DFE);
          tensor[3] op1_e3_l_343E13#3 = VAdd<3>(mcNear2488,op1_e3_l_323E0D);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E13);
          real r3E18#1 = TensorIndex<tensor[3],[0]>(mcol3DEB);
          real r3E19#1 = RMul(op1_e3_l_333E10,r3E17);
          real r3E1A#1 = RMul(r3E19,r3E18);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E13);
          real r3E1C#1 = TensorIndex<tensor[3],[1]>(mcol3DEB);
          real r3E1D#1 = RMul(op1_e3_l_333E10,r3E1B);
          real r3E1E#1 = RMul(r3E1D,r3E1C);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E13);
          real r3E20#1 = TensorIndex<tensor[3],[2]>(mcol3DEB);
          real r3E21#1 = RMul(op1_e3_l_333E10,r3E1F);
          real r3E22#1 = RMul(r3E21,r3E20);
          tensor[3] op1_e3_l_353E16#1 = <tensor[3]>[r3E1A,r3E1E,r3E22];
          real r3E32#1 = TensorIndex<tensor[3],[0]>(mcol3704);
          real r3E33#3 = RMul(phKs24A4,scomp36FE);
          real r3E34#1 = RMul(r3E33,r3E32);
          real r3E35#1 = TensorIndex<tensor[3],[1]>(mcol3704);
          real r3E36#1 = RMul(r3E33,r3E35);
          real r3E37#1 = TensorIndex<tensor[3],[2]>(mcol3704);
          real r3E38#1 = RMul(r3E33,r3E37);
          tensor[3] op1_e3_l_363E31#1 = <tensor[3]>[r3E34,r3E36,r3E38];
          real op1_e3_l_373E42#2 = RSub(_t36AA,_t36D5);
          tensor[3] op1_e3_l_383E45#3 = VAdd<3>(op1_e3_l_353E16,op1_e3_l_363E31);
          real r3E49#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E45);
          real r3E4A#3 = RMul(transp24AA,op1_e3_l_373E42);
          real r3E4B#1 = RMul(r3E4A,r3E49);
          real r3E4C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E45);
          real r3E4D#1 = RMul(r3E4A,r3E4C);
          real r3E4E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E45);
          real r3E4F#1 = RMul(r3E4A,r3E4E);
          tensor[3] op1_e3_l_393E48#1 = <tensor[3]>[r3E4B,r3E4D,r3E4F];
          tensor[3] rgb3E59#2 = VAdd<3>(rgb24A8,op1_e3_l_393E48);
          real op1_e3_l_53E5C#1 = RSub(_t36AA,op1_e3_l_373E42);
          real transp3E5F#2 = RMul(transp24AA,op1_e3_l_53E5C);
          bool _t3E62#1 = LT<real>(transp3E5F,transp0247C);
          if _t3E62 then goto SAVE3E65 else goto JOIN3E6A
        SAVE3E65:  preds = [COND3E64]
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = _t36A8;
          stabilize
          goto JOIN3E6A
        JOIN3E6A:  preds = [*STABILIZE3E68,COND3E64]
          real transp3E69#1 = phi(transp3E5F)
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = transp3E69;
          active
        ASSIGN3E87:  preds = [COND3D94]
          int ilit3E6F#1 = 0;
          int addRes3E70#1 = IAdd(idx3D90,ilit3E6F);
          int ix3E71#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,addRes3E70);
          int stride3E72#2 = 3;
          int offp3E73#3 = IMul(stride3E72,ix3E71);
          real v0_3E74#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E73);
          int ilit3E75#3 = 1;
          int addRes3E76#1 = IAdd(idx3D90,ilit3E75);
          int ix3E77#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,addRes3E76);
          int offp3E78#3 = IMul(stride3E72,ix3E77);
          real v1_3E79#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E78);
          tensor[2] v_3E7A#1 = <tensor[2]>[v0_3E74,v1_3E79];
          int offp3E7B#1 = IAdd(offp3E73,ilit3E75);
          real v0_3E7C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7B);
          int offp3E7D#1 = IAdd(offp3E78,ilit3E75);
          real v1_3E7E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7D);
          tensor[2] v_3E7F#1 = <tensor[2]>[v0_3E7C,v1_3E7E];
          int offset3E80#2 = 2;
          int offp3E81#1 = IAdd(offp3E73,offset3E80);
          real v0_3E82#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E81);
          int offp3E83#1 = IAdd(offp3E78,offset3E80);
          real v1_3E84#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E83);
          tensor[2] v_3E85#1 = <tensor[2]>[v0_3E82,v1_3E84];
          tensor[3,2] voxels3E86#1 = <tensor[3,2]>[v_3E7A,v_3E7F,v_3E85];
          tensor[3,2] ldvox3DC4#1 = voxels3E86;
          goto JOIN3DC5
        ASSIGN3EA1:  preds = [COND2D6E]
          tensor[3,3] Mtransform3EA0#12 = Transform<IMAGE3D<float[]>>(umm2472);
          tensor[3] projParam3EA3#1 = ProjectLast<tensor[3,3],[0]>(Mtransform3EA0);
          real vdot3EA4#1 = VDot<3>(projParam3EA3,pos24B8);
          tensor[3] projParam3EA5#1 = ProjectLast<tensor[3,3],[1]>(Mtransform3EA0);
          real vdot3EA6#1 = VDot<3>(projParam3EA5,pos24B8);
          tensor[3] projParam3EA7#1 = ProjectLast<tensor[3,3],[2]>(Mtransform3EA0);
          real vdot3EA8#1 = VDot<3>(projParam3EA7,pos24B8);
          tensor[3] MxPos3EA2#1 = <tensor[3]>[vdot3EA4,vdot3EA6,vdot3EA8];
          tensor[3] Ttranslate3EB1#1 = Translate<IMAGE3D<float[]>>(umm2472);
          tensor[3] imgPos3EB3#2 = VAdd<3>(MxPos3EA2,Ttranslate3EB1);
          tensor[3] nd3EB6#2 = Floor<3>(imgPos3EB3);
          tensor[3] f3EB8#3 = VSub<3>(imgPos3EB3,nd3EB6);
          int[3] n3EBB#3 = RealToInt<3>(nd3EB6);
          real r3EBE#1 = TensorIndex<tensor[3,3],[0,0]>(Mtransform3EA0);
          real r3EBF#1 = TensorIndex<tensor[3,3],[1,0]>(Mtransform3EA0);
          real r3EC0#1 = TensorIndex<tensor[3,3],[2,0]>(Mtransform3EA0);
          tensor[3] tensor3EC1#1 = <tensor[3]>[r3EBE,r3EBF,r3EC0];
          real r3EC2#1 = TensorIndex<tensor[3,3],[0,1]>(Mtransform3EA0);
          real r3EC3#1 = TensorIndex<tensor[3,3],[1,1]>(Mtransform3EA0);
          real r3EC4#1 = TensorIndex<tensor[3,3],[2,1]>(Mtransform3EA0);
          tensor[3] tensor3EC5#1 = <tensor[3]>[r3EC2,r3EC3,r3EC4];
          real r3EC6#1 = TensorIndex<tensor[3,3],[0,2]>(Mtransform3EA0);
          real r3EC7#1 = TensorIndex<tensor[3,3],[1,2]>(Mtransform3EA0);
          real r3EC8#1 = TensorIndex<tensor[3,3],[2,2]>(Mtransform3EA0);
          tensor[3] tensor3EC9#1 = <tensor[3]>[r3EC6,r3EC7,r3EC8];
          tensor[3,3] P3EBD#15 = <tensor[3,3]>[tensor3EC1,tensor3EC5,tensor3EC9];
          int lit3ED8#3 = -1;
          int idx3EDA#1 = 0;
          int nX_3EDC#1 = Subscript<int[3]>(n3EBB,idx3EDA);
          int idx3EDE#2 = IAdd(nX_3EDC,lit3ED8);
          int idx3EE0#3 = 1;
          int nY_3EE2#1 = Subscript<int[3]>(n3EBB,idx3EE0);
          int idx3EE4#2 = IAdd(nY_3EE2,lit3ED8);
          int idx3EE6#3 = 2;
          int nZ_3EE8#1 = Subscript<int[3]>(n3EBB,idx3EE6);
          int idx3EEA#2 = IAdd(nZ_3EE8,lit3ED8);
          int[3] seq3EEC#3 = <int[3]>{idx3EDE,idx3EE4,idx3EEA};
          int ilit3EEF#4 = 0;
          int idx3EF0#4 = Subscript<int[3]>(seq3EEC,ilit3EEF);
          int ilit3EF1#4 = 1;
          int idx3EF2#4 = Subscript<int[3]>(seq3EEC,ilit3EF1);
          int ilit3EF3#4 = 2;
          int idx3EF4#4 = Subscript<int[3]>(seq3EEC,ilit3EF3);
          int ilit3EF5#20 = 300;
          int addRes3EF6#16 = IAdd(idx3EF0,ilit3EEF);
          int addRes3EF7#4 = IAdd(idx3EF2,ilit3EEF);
          int addRes3EF8#1 = IAdd(idx3EF4,ilit3EEF);
          int mulRes3EF9#4 = IMul(ilit3EF5,addRes3EF8);
          int addRes3EFA#1 = IAdd(addRes3EF7,mulRes3EF9);
          int mulRes3EFB#4 = IMul(ilit3EF5,addRes3EFA);
          int addRes3EFC#1 = IAdd(addRes3EF6,mulRes3EFB);
          real v000_3EFD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFC);
          int addRes3EFE#16 = IAdd(idx3EF0,ilit3EF1);
          int addRes3EFF#1 = IAdd(addRes3EFE,mulRes3EFB);
          real v001_3F00#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFF);
          int addRes3F01#16 = IAdd(idx3EF0,ilit3EF3);
          int addRes3F02#1 = IAdd(addRes3F01,mulRes3EFB);
          real v002_3F03#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F02);
          int ilit3F04#3 = 3;
          int addRes3F05#16 = IAdd(idx3EF0,ilit3F04);
          int addRes3F06#1 = IAdd(addRes3F05,mulRes3EFB);
          real v003_3F07#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F06);
          tensor[4] v00_3F08#1 = <tensor[4]>[v000_3EFD,v001_3F00,v002_3F03,v003_3F07];
          int addRes3F09#4 = IAdd(idx3EF2,ilit3EF1);
          int addRes3F0A#1 = IAdd(addRes3F09,mulRes3EF9);
          int mulRes3F0B#4 = IMul(ilit3EF5,addRes3F0A);
          int addRes3F0C#1 = IAdd(addRes3EF6,mulRes3F0B);
          real v010_3F0D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0C);
          int addRes3F0E#1 = IAdd(addRes3EFE,mulRes3F0B);
          real v011_3F0F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0E);
          int addRes3F10#1 = IAdd(addRes3F01,mulRes3F0B);
          real v012_3F11#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F10);
          int addRes3F12#1 = IAdd(addRes3F05,mulRes3F0B);
          real v013_3F13#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F12);
          tensor[4] v01_3F14#1 = <tensor[4]>[v010_3F0D,v011_3F0F,v012_3F11,v013_3F13];
          int addRes3F15#4 = IAdd(idx3EF2,ilit3EF3);
          int addRes3F16#1 = IAdd(addRes3F15,mulRes3EF9);
          int mulRes3F17#4 = IMul(ilit3EF5,addRes3F16);
          int addRes3F18#1 = IAdd(addRes3EF6,mulRes3F17);
          real v020_3F19#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F18);
          int addRes3F1A#1 = IAdd(addRes3EFE,mulRes3F17);
          real v021_3F1B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1A);
          int addRes3F1C#1 = IAdd(addRes3F01,mulRes3F17);
          real v022_3F1D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1C);
          int addRes3F1E#1 = IAdd(addRes3F05,mulRes3F17);
          real v023_3F1F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1E);
          tensor[4] v02_3F20#1 = <tensor[4]>[v020_3F19,v021_3F1B,v022_3F1D,v023_3F1F];
          int addRes3F21#4 = IAdd(idx3EF2,ilit3F04);
          int addRes3F22#1 = IAdd(addRes3F21,mulRes3EF9);
          int mulRes3F23#4 = IMul(ilit3EF5,addRes3F22);
          int addRes3F24#1 = IAdd(addRes3EF6,mulRes3F23);
          real v030_3F25#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F24);
          int addRes3F26#1 = IAdd(addRes3EFE,mulRes3F23);
          real v031_3F27#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F26);
          int addRes3F28#1 = IAdd(addRes3F01,mulRes3F23);
          real v032_3F29#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F28);
          int addRes3F2A#1 = IAdd(addRes3F05,mulRes3F23);
          real v033_3F2B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F2A);
          tensor[4] v03_3F2C#1 = <tensor[4]>[v030_3F25,v031_3F27,v032_3F29,v033_3F2B];
          tensor[4,4] v0_3F2D#1 = <tensor[4,4]>[v00_3F08,v01_3F14,v02_3F20,v03_3F2C];
          int addRes3F2E#1 = IAdd(idx3EF4,ilit3EF1);
          int mulRes3F2F#4 = IMul(ilit3EF5,addRes3F2E);
          int addRes3F30#1 = IAdd(addRes3EF7,mulRes3F2F);
          int mulRes3F31#4 = IMul(ilit3EF5,addRes3F30);
          int addRes3F32#1 = IAdd(addRes3EF6,mulRes3F31);
          real v100_3F33#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F32);
          int addRes3F34#1 = IAdd(addRes3EFE,mulRes3F31);
          real v101_3F35#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F34);
          int addRes3F36#1 = IAdd(addRes3F01,mulRes3F31);
          real v102_3F37#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F36);
          int addRes3F38#1 = IAdd(addRes3F05,mulRes3F31);
          real v103_3F39#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F38);
          tensor[4] v10_3F3A#1 = <tensor[4]>[v100_3F33,v101_3F35,v102_3F37,v103_3F39];
          int addRes3F3B#1 = IAdd(addRes3F09,mulRes3F2F);
          int mulRes3F3C#4 = IMul(ilit3EF5,addRes3F3B);
          int addRes3F3D#1 = IAdd(addRes3EF6,mulRes3F3C);
          real v110_3F3E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3D);
          int addRes3F3F#1 = IAdd(addRes3EFE,mulRes3F3C);
          real v111_3F40#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3F);
          int addRes3F41#1 = IAdd(addRes3F01,mulRes3F3C);
          real v112_3F42#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F41);
          int addRes3F43#1 = IAdd(addRes3F05,mulRes3F3C);
          real v113_3F44#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F43);
          tensor[4] v11_3F45#1 = <tensor[4]>[v110_3F3E,v111_3F40,v112_3F42,v113_3F44];
          int addRes3F46#1 = IAdd(addRes3F15,mulRes3F2F);
          int mulRes3F47#4 = IMul(ilit3EF5,addRes3F46);
          int addRes3F48#1 = IAdd(addRes3EF6,mulRes3F47);
          real v120_3F49#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F48);
          int addRes3F4A#1 = IAdd(addRes3EFE,mulRes3F47);
          real v121_3F4B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4A);
          int addRes3F4C#1 = IAdd(addRes3F01,mulRes3F47);
          real v122_3F4D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4C);
          int addRes3F4E#1 = IAdd(addRes3F05,mulRes3F47);
          real v123_3F4F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4E);
          tensor[4] v12_3F50#1 = <tensor[4]>[v120_3F49,v121_3F4B,v122_3F4D,v123_3F4F];
          int addRes3F51#1 = IAdd(addRes3F21,mulRes3F2F);
          int mulRes3F52#4 = IMul(ilit3EF5,addRes3F51);
          int addRes3F53#1 = IAdd(addRes3EF6,mulRes3F52);
          real v130_3F54#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F53);
          int addRes3F55#1 = IAdd(addRes3EFE,mulRes3F52);
          real v131_3F56#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F55);
          int addRes3F57#1 = IAdd(addRes3F01,mulRes3F52);
          real v132_3F58#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F57);
          int addRes3F59#1 = IAdd(addRes3F05,mulRes3F52);
          real v133_3F5A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F59);
          tensor[4] v13_3F5B#1 = <tensor[4]>[v130_3F54,v131_3F56,v132_3F58,v133_3F5A];
          tensor[4,4] v1_3F5C#1 = <tensor[4,4]>[v10_3F3A,v11_3F45,v12_3F50,v13_3F5B];
          int addRes3F5D#1 = IAdd(idx3EF4,ilit3EF3);
          int mulRes3F5E#4 = IMul(ilit3EF5,addRes3F5D);
          int addRes3F5F#1 = IAdd(addRes3EF7,mulRes3F5E);
          int mulRes3F60#4 = IMul(ilit3EF5,addRes3F5F);
          int addRes3F61#1 = IAdd(addRes3EF6,mulRes3F60);
          real v200_3F62#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F61);
          int addRes3F63#1 = IAdd(addRes3EFE,mulRes3F60);
          real v201_3F64#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F63);
          int addRes3F65#1 = IAdd(addRes3F01,mulRes3F60);
          real v202_3F66#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F65);
          int addRes3F67#1 = IAdd(addRes3F05,mulRes3F60);
          real v203_3F68#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F67);
          tensor[4] v20_3F69#1 = <tensor[4]>[v200_3F62,v201_3F64,v202_3F66,v203_3F68];
          int addRes3F6A#1 = IAdd(addRes3F09,mulRes3F5E);
          int mulRes3F6B#4 = IMul(ilit3EF5,addRes3F6A);
          int addRes3F6C#1 = IAdd(addRes3EF6,mulRes3F6B);
          real v210_3F6D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6C);
          int addRes3F6E#1 = IAdd(addRes3EFE,mulRes3F6B);
          real v211_3F6F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6E);
          int addRes3F70#1 = IAdd(addRes3F01,mulRes3F6B);
          real v212_3F71#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F70);
          int addRes3F72#1 = IAdd(addRes3F05,mulRes3F6B);
          real v213_3F73#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F72);
          tensor[4] v21_3F74#1 = <tensor[4]>[v210_3F6D,v211_3F6F,v212_3F71,v213_3F73];
          int addRes3F75#1 = IAdd(addRes3F15,mulRes3F5E);
          int mulRes3F76#4 = IMul(ilit3EF5,addRes3F75);
          int addRes3F77#1 = IAdd(addRes3EF6,mulRes3F76);
          real v220_3F78#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F77);
          int addRes3F79#1 = IAdd(addRes3EFE,mulRes3F76);
          real v221_3F7A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F79);
          int addRes3F7B#1 = IAdd(addRes3F01,mulRes3F76);
          real v222_3F7C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7B);
          int addRes3F7D#1 = IAdd(addRes3F05,mulRes3F76);
          real v223_3F7E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7D);
          tensor[4] v22_3F7F#1 = <tensor[4]>[v220_3F78,v221_3F7A,v222_3F7C,v223_3F7E];
          int addRes3F80#1 = IAdd(addRes3F21,mulRes3F5E);
          int mulRes3F81#4 = IMul(ilit3EF5,addRes3F80);
          int addRes3F82#1 = IAdd(addRes3EF6,mulRes3F81);
          real v230_3F83#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F82);
          int addRes3F84#1 = IAdd(addRes3EFE,mulRes3F81);
          real v231_3F85#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F84);
          int addRes3F86#1 = IAdd(addRes3F01,mulRes3F81);
          real v232_3F87#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F86);
          int addRes3F88#1 = IAdd(addRes3F05,mulRes3F81);
          real v233_3F89#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F88);
          tensor[4] v23_3F8A#1 = <tensor[4]>[v230_3F83,v231_3F85,v232_3F87,v233_3F89];
          tensor[4,4] v2_3F8B#1 = <tensor[4,4]>[v20_3F69,v21_3F74,v22_3F7F,v23_3F8A];
          int addRes3F8C#1 = IAdd(idx3EF4,ilit3F04);
          int mulRes3F8D#4 = IMul(ilit3EF5,addRes3F8C);
          int addRes3F8E#1 = IAdd(addRes3EF7,mulRes3F8D);
          int mulRes3F8F#4 = IMul(ilit3EF5,addRes3F8E);
          int addRes3F90#1 = IAdd(addRes3EF6,mulRes3F8F);
          real v300_3F91#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F90);
          int addRes3F92#1 = IAdd(addRes3EFE,mulRes3F8F);
          real v301_3F93#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F92);
          int addRes3F94#1 = IAdd(addRes3F01,mulRes3F8F);
          real v302_3F95#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F94);
          int addRes3F96#1 = IAdd(addRes3F05,mulRes3F8F);
          real v303_3F97#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F96);
          tensor[4] v30_3F98#1 = <tensor[4]>[v300_3F91,v301_3F93,v302_3F95,v303_3F97];
          int addRes3F99#1 = IAdd(addRes3F09,mulRes3F8D);
          int mulRes3F9A#4 = IMul(ilit3EF5,addRes3F99);
          int addRes3F9B#1 = IAdd(addRes3EF6,mulRes3F9A);
          real v310_3F9C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9B);
          int addRes3F9D#1 = IAdd(addRes3EFE,mulRes3F9A);
          real v311_3F9E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9D);
          int addRes3F9F#1 = IAdd(addRes3F01,mulRes3F9A);
          real v312_3FA0#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9F);
          int addRes3FA1#1 = IAdd(addRes3F05,mulRes3F9A);
          real v313_3FA2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA1);
          tensor[4] v31_3FA3#1 = <tensor[4]>[v310_3F9C,v311_3F9E,v312_3FA0,v313_3FA2];
          int addRes3FA4#1 = IAdd(addRes3F15,mulRes3F8D);
          int mulRes3FA5#4 = IMul(ilit3EF5,addRes3FA4);
          int addRes3FA6#1 = IAdd(addRes3EF6,mulRes3FA5);
          real v320_3FA7#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA6);
          int addRes3FA8#1 = IAdd(addRes3EFE,mulRes3FA5);
          real v321_3FA9#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA8);
          int addRes3FAA#1 = IAdd(addRes3F01,mulRes3FA5);
          real v322_3FAB#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAA);
          int addRes3FAC#1 = IAdd(addRes3F05,mulRes3FA5);
          real v323_3FAD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAC);
          tensor[4] v32_3FAE#1 = <tensor[4]>[v320_3FA7,v321_3FA9,v322_3FAB,v323_3FAD];
          int addRes3FAF#1 = IAdd(addRes3F21,mulRes3F8D);
          int mulRes3FB0#4 = IMul(ilit3EF5,addRes3FAF);
          int addRes3FB1#1 = IAdd(addRes3EF6,mulRes3FB0);
          real v330_3FB2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB1);
          int addRes3FB3#1 = IAdd(addRes3EFE,mulRes3FB0);
          real v331_3FB4#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB3);
          int addRes3FB5#1 = IAdd(addRes3F01,mulRes3FB0);
          real v332_3FB6#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB5);
          int addRes3FB7#1 = IAdd(addRes3F05,mulRes3FB0);
          real v333_3FB8#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB7);
          tensor[4] v33_3FB9#1 = <tensor[4]>[v330_3FB2,v331_3FB4,v332_3FB6,v333_3FB8];
          tensor[4,4] v3_3FBA#1 = <tensor[4,4]>[v30_3F98,v31_3FA3,v32_3FAE,v33_3FB9];
          tensor[4,4,4] v_3FBB#1 = <tensor[4,4,4]>[v0_3F2D,v1_3F5C,v2_3F8B,v3_3FBA];
          tensor[4,4,4] ldvox3EEE#16 = v_3FBB;
          real vZ_408A#4 = VIndex<3,2>(f3EB8);
          real rlit4091#1 = 0.1e1;
          real idx4092#1 = RAdd(vZ_408A,rlit4091);
          real rlit408F#1 = 0.1e1;
          real idx4090#1 = RSub(vZ_408A,rlit408F);
          real rlit408D#1 = 0.2e1;
          real idx408E#1 = RSub(vZ_408A,rlit408D);
          tensor[4] kernZ_408C#6 = <tensor[4]>[idx4092,vZ_408A,idx4090,idx408E];
          real _f40AB#1 = 0.133333333333e1;
          real _f40AC#1 = 0.666666666667e0;
          real _f40AD#1 = 0.666666666667e0;
          real _f40AE#1 = 0.133333333333e1;
          tensor[4] a0409B#1 = <tensor[4]>[_f40AB,_f40AC,_f40AD,_f40AE];
          real _f40A7#1 = -0.2e1;
          real _f40A8#1 = 0.e0;
          real _f40A9#1 = 0.e0;
          real _f40AA#1 = 0.2e1;
          tensor[4] a1409C#1 = <tensor[4]>[_f40A7,_f40A8,_f40A9,_f40AA];
          real _f40A3#1 = 0.1e1;
          real _f40A4#1 = -0.1e1;
          real _f40A5#1 = -0.1e1;
          real _f40A6#1 = 0.1e1;
          tensor[4] a2409D#1 = <tensor[4]>[_f40A3,_f40A4,_f40A5,_f40A6];
          real _f409F#1 = -0.166666666667e0;
          real _f40A0#1 = 0.5e0;
          real _f40A1#1 = -0.5e0;
          real _f40A2#1 = 0.166666666667e0;
          tensor[4] a3409E#1 = <tensor[4]>[_f409F,_f40A0,_f40A1,_f40A2];
          tensor[4] prod340AF#1 = VMul<4>(kernZ_408C,a3409E);
          tensor[4] sum240B0#1 = VAdd<4>(a2409D,prod340AF);
          tensor[4] prod240B1#1 = VMul<4>(kernZ_408C,sum240B0);
          tensor[4] sum140B2#1 = VAdd<4>(a1409C,prod240B1);
          tensor[4] prod140B3#1 = VMul<4>(kernZ_408C,sum140B2);
          tensor[4] kevalZ_d0_409A#7 = VAdd<4>(a0409B,prod140B3);
          real _f40DA#1 = -0.2e1;
          real _f40DB#1 = 0.e0;
          real _f40DC#1 = 0.e0;
          real _f40DD#1 = 0.2e1;
          tensor[4] a040CF#1 = <tensor[4]>[_f40DA,_f40DB,_f40DC,_f40DD];
          real _f40D6#1 = 0.2e1;
          real _f40D7#1 = -0.2e1;
          real _f40D8#1 = -0.2e1;
          real _f40D9#1 = 0.2e1;
          tensor[4] a140D0#1 = <tensor[4]>[_f40D6,_f40D7,_f40D8,_f40D9];
          real _f40D2#1 = -0.5e0;
          real _f40D3#1 = 0.15e1;
          real _f40D4#1 = -0.15e1;
          real _f40D5#1 = 0.5e0;
          tensor[4] a240D1#1 = <tensor[4]>[_f40D2,_f40D3,_f40D4,_f40D5];
          tensor[4] prod240DE#1 = VMul<4>(kernZ_408C,a240D1);
          tensor[4] sum140DF#1 = VAdd<4>(a140D0,prod240DE);
          tensor[4] prod140E0#1 = VMul<4>(kernZ_408C,sum140DF);
          tensor[4] kevalZ_d1_40CE#5 = VAdd<4>(a040CF,prod140E0);
          real _f40FB#1 = 0.2e1;
          real _f40FC#1 = -0.2e1;
          real _f40FD#1 = -0.2e1;
          real _f40FE#1 = 0.2e1;
          tensor[4] a040F5#1 = <tensor[4]>[_f40FB,_f40FC,_f40FD,_f40FE];
          real _f40F7#1 = -0.1e1;
          real _f40F8#1 = 0.3e1;
          real _f40F9#1 = -0.3e1;
          real _f40FA#1 = 0.1e1;
          tensor[4] a140F6#1 = <tensor[4]>[_f40F7,_f40F8,_f40F9,_f40FA];
          tensor[4] prod140FF#1 = VMul<4>(kernZ_408C,a140F6);
          tensor[4] kevalZ_d2_40F4#2 = VAdd<4>(a040F5,prod140FF);
          tensor[3,4] kconsZ_410C#0 = <tensor[3,4]>[kevalZ_d0_409A,kevalZ_d1_40CE,kevalZ_d2_40F4];
          real vY_410E#4 = VIndex<3,1>(f3EB8);
          real rlit4115#1 = 0.1e1;
          real idx4116#1 = RAdd(vY_410E,rlit4115);
          real rlit4113#1 = 0.1e1;
          real idx4114#1 = RSub(vY_410E,rlit4113);
          real rlit4111#1 = 0.2e1;
          real idx4112#1 = RSub(vY_410E,rlit4111);
          tensor[4] kernY_4110#6 = <tensor[4]>[idx4116,vY_410E,idx4114,idx4112];
          real _f412F#1 = 0.133333333333e1;
          real _f4130#1 = 0.666666666667e0;
          real _f4131#1 = 0.666666666667e0;
          real _f4132#1 = 0.133333333333e1;
          tensor[4] a0411F#1 = <tensor[4]>[_f412F,_f4130,_f4131,_f4132];
          real _f412B#1 = -0.2e1;
          real _f412C#1 = 0.e0;
          real _f412D#1 = 0.e0;
          real _f412E#1 = 0.2e1;
          tensor[4] a14120#1 = <tensor[4]>[_f412B,_f412C,_f412D,_f412E];
          real _f4127#1 = 0.1e1;
          real _f4128#1 = -0.1e1;
          real _f4129#1 = -0.1e1;
          real _f412A#1 = 0.1e1;
          tensor[4] a24121#1 = <tensor[4]>[_f4127,_f4128,_f4129,_f412A];
          real _f4123#1 = -0.166666666667e0;
          real _f4124#1 = 0.5e0;
          real _f4125#1 = -0.5e0;
          real _f4126#1 = 0.166666666667e0;
          tensor[4] a34122#1 = <tensor[4]>[_f4123,_f4124,_f4125,_f4126];
          tensor[4] prod34133#1 = VMul<4>(kernY_4110,a34122);
          tensor[4] sum24134#1 = VAdd<4>(a24121,prod34133);
          tensor[4] prod24135#1 = VMul<4>(kernY_4110,sum24134);
          tensor[4] sum14136#1 = VAdd<4>(a14120,prod24135);
          tensor[4] prod14137#1 = VMul<4>(kernY_4110,sum14136);
          tensor[4] kevalY_d0_411E#22 = VAdd<4>(a0411F,prod14137);
          real _f415E#1 = -0.2e1;
          real _f415F#1 = 0.e0;
          real _f4160#1 = 0.e0;
          real _f4161#1 = 0.2e1;
          tensor[4] a04153#1 = <tensor[4]>[_f415E,_f415F,_f4160,_f4161];
          real _f415A#1 = 0.2e1;
          real _f415B#1 = -0.2e1;
          real _f415C#1 = -0.2e1;
          real _f415D#1 = 0.2e1;
          tensor[4] a14154#1 = <tensor[4]>[_f415A,_f415B,_f415C,_f415D];
          real _f4156#1 = -0.5e0;
          real _f4157#1 = 0.15e1;
          real _f4158#1 = -0.15e1;
          real _f4159#1 = 0.5e0;
          tensor[4] a24155#1 = <tensor[4]>[_f4156,_f4157,_f4158,_f4159];
          tensor[4] prod24162#1 = VMul<4>(kernY_4110,a24155);
          tensor[4] sum14163#1 = VAdd<4>(a14154,prod24162);
          tensor[4] prod14164#1 = VMul<4>(kernY_4110,sum14163);
          tensor[4] kevalY_d1_4152#14 = VAdd<4>(a04153,prod14164);
          real _f417F#1 = 0.2e1;
          real _f4180#1 = -0.2e1;
          real _f4181#1 = -0.2e1;
          real _f4182#1 = 0.2e1;
          tensor[4] a04179#1 = <tensor[4]>[_f417F,_f4180,_f4181,_f4182];
          real _f417B#1 = -0.1e1;
          real _f417C#1 = 0.3e1;
          real _f417D#1 = -0.3e1;
          real _f417E#1 = 0.1e1;
          tensor[4] a1417A#1 = <tensor[4]>[_f417B,_f417C,_f417D,_f417E];
          tensor[4] prod14183#1 = VMul<4>(kernY_4110,a1417A);
          tensor[4] kevalY_d2_4178#5 = VAdd<4>(a04179,prod14183);
          tensor[3,4] kconsY_4190#0 = <tensor[3,4]>[kevalY_d0_411E,kevalY_d1_4152,kevalY_d2_4178];
          real vX_4192#4 = VIndex<3,0>(f3EB8);
          real rlit4199#1 = 0.1e1;
          real idx419A#1 = RAdd(vX_4192,rlit4199);
          real rlit4197#1 = 0.1e1;
          real idx4198#1 = RSub(vX_4192,rlit4197);
          real rlit4195#1 = 0.2e1;
          real idx4196#1 = RSub(vX_4192,rlit4195);
          tensor[4] kernX_4194#6 = <tensor[4]>[idx419A,vX_4192,idx4198,idx4196];
          real _f41B3#1 = 0.133333333333e1;
          real _f41B4#1 = 0.666666666667e0;
          real _f41B5#1 = 0.666666666667e0;
          real _f41B6#1 = 0.133333333333e1;
          tensor[4] a041A3#1 = <tensor[4]>[_f41B3,_f41B4,_f41B5,_f41B6];
          real _f41AF#1 = -0.2e1;
          real _f41B0#1 = 0.e0;
          real _f41B1#1 = 0.e0;
          real _f41B2#1 = 0.2e1;
          tensor[4] a141A4#1 = <tensor[4]>[_f41AF,_f41B0,_f41B1,_f41B2];
          real _f41AB#1 = 0.1e1;
          real _f41AC#1 = -0.1e1;
          real _f41AD#1 = -0.1e1;
          real _f41AE#1 = 0.1e1;
          tensor[4] a241A5#1 = <tensor[4]>[_f41AB,_f41AC,_f41AD,_f41AE];
          real _f41A7#1 = -0.166666666667e0;
          real _f41A8#1 = 0.5e0;
          real _f41A9#1 = -0.5e0;
          real _f41AA#1 = 0.166666666667e0;
          tensor[4] a341A6#1 = <tensor[4]>[_f41A7,_f41A8,_f41A9,_f41AA];
          tensor[4] prod341B7#1 = VMul<4>(kernX_4194,a341A6);
          tensor[4] sum241B8#1 = VAdd<4>(a241A5,prod341B7);
          tensor[4] prod241B9#1 = VMul<4>(kernX_4194,sum241B8);
          tensor[4] sum141BA#1 = VAdd<4>(a141A4,prod241B9);
          tensor[4] prod141BB#1 = VMul<4>(kernX_4194,sum141BA);
          tensor[4] kevalX_d0_41A2#34 = VAdd<4>(a041A3,prod141BB);
          real _f41E2#1 = -0.2e1;
          real _f41E3#1 = 0.e0;
          real _f41E4#1 = 0.e0;
          real _f41E5#1 = 0.2e1;
          tensor[4] a041D7#1 = <tensor[4]>[_f41E2,_f41E3,_f41E4,_f41E5];
          real _f41DE#1 = 0.2e1;
          real _f41DF#1 = -0.2e1;
          real _f41E0#1 = -0.2e1;
          real _f41E1#1 = 0.2e1;
          tensor[4] a141D8#1 = <tensor[4]>[_f41DE,_f41DF,_f41E0,_f41E1];
          real _f41DA#1 = -0.5e0;
          real _f41DB#1 = 0.15e1;
          real _f41DC#1 = -0.15e1;
          real _f41DD#1 = 0.5e0;
          tensor[4] a241D9#1 = <tensor[4]>[_f41DA,_f41DB,_f41DC,_f41DD];
          tensor[4] prod241E6#1 = VMul<4>(kernX_4194,a241D9);
          tensor[4] sum141E7#1 = VAdd<4>(a141D8,prod241E6);
          tensor[4] prod141E8#1 = VMul<4>(kernX_4194,sum141E7);
          tensor[4] kevalX_d1_41D6#34 = VAdd<4>(a041D7,prod141E8);
          real _f4203#1 = 0.2e1;
          real _f4204#1 = -0.2e1;
          real _f4205#1 = -0.2e1;
          real _f4206#1 = 0.2e1;
          tensor[4] a041FD#1 = <tensor[4]>[_f4203,_f4204,_f4205,_f4206];
          real _f41FF#1 = -0.1e1;
          real _f4200#1 = 0.3e1;
          real _f4201#1 = -0.3e1;
          real _f4202#1 = 0.1e1;
          tensor[4] a141FE#1 = <tensor[4]>[_f41FF,_f4200,_f4201,_f4202];
          tensor[4] prod14207#1 = VMul<4>(kernX_4194,a141FE);
          tensor[4] kevalX_d2_41FC#17 = VAdd<4>(a041FD,prod14207);
          tensor[3,4] kconsX_4214#0 = <tensor[3,4]>[kevalX_d0_41A2,kevalX_d1_41D6,kevalX_d2_41FC];
          tensor[4] projIx4217#3 = ProjectLast<tensor[4,4,4],[0,0]>(ldvox3EEE);
          tensor[4] projIx4218#3 = ProjectLast<tensor[4,4,4],[0,1]>(ldvox3EEE);
          tensor[4] projIx4219#3 = ProjectLast<tensor[4,4,4],[0,2]>(ldvox3EEE);
          tensor[4] projIx421A#3 = ProjectLast<tensor[4,4,4],[0,3]>(ldvox3EEE);
          tensor[4] projIx421B#3 = ProjectLast<tensor[4,4,4],[1,0]>(ldvox3EEE);
          tensor[4] projIx421C#3 = ProjectLast<tensor[4,4,4],[1,1]>(ldvox3EEE);
          tensor[4] projIx421D#3 = ProjectLast<tensor[4,4,4],[1,2]>(ldvox3EEE);
          tensor[4] projIx421E#3 = ProjectLast<tensor[4,4,4],[1,3]>(ldvox3EEE);
          tensor[4] projIx421F#3 = ProjectLast<tensor[4,4,4],[2,0]>(ldvox3EEE);
          tensor[4] projIx4220#3 = ProjectLast<tensor[4,4,4],[2,1]>(ldvox3EEE);
          tensor[4] projIx4221#3 = ProjectLast<tensor[4,4,4],[2,2]>(ldvox3EEE);
          tensor[4] projIx4222#3 = ProjectLast<tensor[4,4,4],[2,3]>(ldvox3EEE);
          tensor[4] projIx4223#3 = ProjectLast<tensor[4,4,4],[3,0]>(ldvox3EEE);
          tensor[4] projIx4224#3 = ProjectLast<tensor[4,4,4],[3,1]>(ldvox3EEE);
          tensor[4] projIx4225#3 = ProjectLast<tensor[4,4,4],[3,2]>(ldvox3EEE);
          tensor[4] projIx4226#3 = ProjectLast<tensor[4,4,4],[3,3]>(ldvox3EEE);
          real vdot4227#1 = VDot<4>(kevalX_d2_41FC,projIx4217);
          real vdot4228#1 = VDot<4>(kevalX_d2_41FC,projIx4218);
          real vdot4229#1 = VDot<4>(kevalX_d2_41FC,projIx4219);
          real vdot422A#1 = VDot<4>(kevalX_d2_41FC,projIx421A);
          tensor[4] cons_422B#1 = <tensor[4]>[vdot4227,vdot4228,vdot4229,vdot422A];
          real vdot422C#1 = VDot<4>(kevalX_d2_41FC,projIx421B);
          real vdot422D#1 = VDot<4>(kevalX_d2_41FC,projIx421C);
          real vdot422E#1 = VDot<4>(kevalX_d2_41FC,projIx421D);
          real vdot422F#1 = VDot<4>(kevalX_d2_41FC,projIx421E);
          tensor[4] cons_4230#1 = <tensor[4]>[vdot422C,vdot422D,vdot422E,vdot422F];
          real vdot4231#1 = VDot<4>(kevalX_d2_41FC,projIx421F);
          real vdot4232#1 = VDot<4>(kevalX_d2_41FC,projIx4220);
          real vdot4233#1 = VDot<4>(kevalX_d2_41FC,projIx4221);
          real vdot4234#1 = VDot<4>(kevalX_d2_41FC,projIx4222);
          tensor[4] cons_4235#1 = <tensor[4]>[vdot4231,vdot4232,vdot4233,vdot4234];
          real vdot4236#1 = VDot<4>(kevalX_d2_41FC,projIx4223);
          real vdot4237#1 = VDot<4>(kevalX_d2_41FC,projIx4224);
          real vdot4238#1 = VDot<4>(kevalX_d2_41FC,projIx4225);
          real vdot4239#1 = VDot<4>(kevalX_d2_41FC,projIx4226);
          tensor[4] cons_423A#1 = <tensor[4]>[vdot4236,vdot4237,vdot4238,vdot4239];
          real vdot423B#1 = VDot<4>(kevalY_d0_411E,cons_422B);
          real vdot423C#1 = VDot<4>(kevalY_d0_411E,cons_4230);
          real vdot423D#1 = VDot<4>(kevalY_d0_411E,cons_4235);
          real vdot423E#1 = VDot<4>(kevalY_d0_411E,cons_423A);
          tensor[4] cons_423F#1 = <tensor[4]>[vdot423B,vdot423C,vdot423D,vdot423E];
          real vdot4240#1 = VDot<4>(kevalZ_d0_409A,cons_423F);
          real vdot4241#1 = VDot<4>(kevalX_d1_41D6,projIx4217);
          real vdot4242#1 = VDot<4>(kevalX_d1_41D6,projIx4218);
          real vdot4243#1 = VDot<4>(kevalX_d1_41D6,projIx4219);
          real vdot4244#1 = VDot<4>(kevalX_d1_41D6,projIx421A);
          tensor[4] cons_4245#2 = <tensor[4]>[vdot4241,vdot4242,vdot4243,vdot4244];
          real vdot4246#1 = VDot<4>(kevalX_d1_41D6,projIx421B);
          real vdot4247#1 = VDot<4>(kevalX_d1_41D6,projIx421C);
          real vdot4248#1 = VDot<4>(kevalX_d1_41D6,projIx421D);
          real vdot4249#1 = VDot<4>(kevalX_d1_41D6,projIx421E);
          tensor[4] cons_424A#2 = <tensor[4]>[vdot4246,vdot4247,vdot4248,vdot4249];
          real vdot424B#1 = VDot<4>(kevalX_d1_41D6,projIx421F);
          real vdot424C#1 = VDot<4>(kevalX_d1_41D6,projIx4220);
          real vdot424D#1 = VDot<4>(kevalX_d1_41D6,projIx4221);
          real vdot424E#1 = VDot<4>(kevalX_d1_41D6,projIx4222);
          tensor[4] cons_424F#2 = <tensor[4]>[vdot424B,vdot424C,vdot424D,vdot424E];
          real vdot4250#1 = VDot<4>(kevalX_d1_41D6,projIx4223);
          real vdot4251#1 = VDot<4>(kevalX_d1_41D6,projIx4224);
          real vdot4252#1 = VDot<4>(kevalX_d1_41D6,projIx4225);
          real vdot4253#1 = VDot<4>(kevalX_d1_41D6,projIx4226);
          tensor[4] cons_4254#2 = <tensor[4]>[vdot4250,vdot4251,vdot4252,vdot4253];
          real vdot4255#1 = VDot<4>(kevalY_d1_4152,cons_4245);
          real vdot4256#1 = VDot<4>(kevalY_d1_4152,cons_424A);
          real vdot4257#1 = VDot<4>(kevalY_d1_4152,cons_424F);
          real vdot4258#1 = VDot<4>(kevalY_d1_4152,cons_4254);
          tensor[4] cons_4259#1 = <tensor[4]>[vdot4255,vdot4256,vdot4257,vdot4258];
          real vdot425A#2 = VDot<4>(kevalZ_d0_409A,cons_4259);
          real vdot425B#1 = VDot<4>(kevalY_d0_411E,cons_4245);
          real vdot425C#1 = VDot<4>(kevalY_d0_411E,cons_424A);
          real vdot425D#1 = VDot<4>(kevalY_d0_411E,cons_424F);
          real vdot425E#1 = VDot<4>(kevalY_d0_411E,cons_4254);
          tensor[4] cons_425F#1 = <tensor[4]>[vdot425B,vdot425C,vdot425D,vdot425E];
          real vdot4260#2 = VDot<4>(kevalZ_d1_40CE,cons_425F);
          tensor[3] tensor4261#1 = <tensor[3]>[vdot4240,vdot425A,vdot4260];
          real vdot4262#1 = VDot<4>(kevalX_d0_41A2,projIx4217);
          real vdot4263#1 = VDot<4>(kevalX_d0_41A2,projIx4218);
          real vdot4264#1 = VDot<4>(kevalX_d0_41A2,projIx4219);
          real vdot4265#1 = VDot<4>(kevalX_d0_41A2,projIx421A);
          tensor[4] cons_4266#3 = <tensor[4]>[vdot4262,vdot4263,vdot4264,vdot4265];
          real vdot4267#1 = VDot<4>(kevalX_d0_41A2,projIx421B);
          real vdot4268#1 = VDot<4>(kevalX_d0_41A2,projIx421C);
          real vdot4269#1 = VDot<4>(kevalX_d0_41A2,projIx421D);
          real vdot426A#1 = VDot<4>(kevalX_d0_41A2,projIx421E);
          tensor[4] cons_426B#3 = <tensor[4]>[vdot4267,vdot4268,vdot4269,vdot426A];
          real vdot426C#1 = VDot<4>(kevalX_d0_41A2,projIx421F);
          real vdot426D#1 = VDot<4>(kevalX_d0_41A2,projIx4220);
          real vdot426E#1 = VDot<4>(kevalX_d0_41A2,projIx4221);
          real vdot426F#1 = VDot<4>(kevalX_d0_41A2,projIx4222);
          tensor[4] cons_4270#3 = <tensor[4]>[vdot426C,vdot426D,vdot426E,vdot426F];
          real vdot4271#1 = VDot<4>(kevalX_d0_41A2,projIx4223);
          real vdot4272#1 = VDot<4>(kevalX_d0_41A2,projIx4224);
          real vdot4273#1 = VDot<4>(kevalX_d0_41A2,projIx4225);
          real vdot4274#1 = VDot<4>(kevalX_d0_41A2,projIx4226);
          tensor[4] cons_4275#3 = <tensor[4]>[vdot4271,vdot4272,vdot4273,vdot4274];
          real vdot4276#1 = VDot<4>(kevalY_d2_4178,cons_4266);
          real vdot4277#1 = VDot<4>(kevalY_d2_4178,cons_426B);
          real vdot4278#1 = VDot<4>(kevalY_d2_4178,cons_4270);
          real vdot4279#1 = VDot<4>(kevalY_d2_4178,cons_4275);
          tensor[4] cons_427A#1 = <tensor[4]>[vdot4276,vdot4277,vdot4278,vdot4279];
          real vdot427B#1 = VDot<4>(kevalZ_d0_409A,cons_427A);
          real vdot427C#1 = VDot<4>(kevalY_d1_4152,cons_4266);
          real vdot427D#1 = VDot<4>(kevalY_d1_4152,cons_426B);
          real vdot427E#1 = VDot<4>(kevalY_d1_4152,cons_4270);
          real vdot427F#1 = VDot<4>(kevalY_d1_4152,cons_4275);
          tensor[4] cons_4280#1 = <tensor[4]>[vdot427C,vdot427D,vdot427E,vdot427F];
          real vdot4281#2 = VDot<4>(kevalZ_d1_40CE,cons_4280);
          tensor[3] tensor4282#1 = <tensor[3]>[vdot425A,vdot427B,vdot4281];
          real vdot4283#1 = VDot<4>(kevalY_d0_411E,cons_4266);
          real vdot4284#1 = VDot<4>(kevalY_d0_411E,cons_426B);
          real vdot4285#1 = VDot<4>(kevalY_d0_411E,cons_4270);
          real vdot4286#1 = VDot<4>(kevalY_d0_411E,cons_4275);
          tensor[4] cons_4287#1 = <tensor[4]>[vdot4283,vdot4284,vdot4285,vdot4286];
          real vdot4288#1 = VDot<4>(kevalZ_d2_40F4,cons_4287);
          tensor[3] tensor4289#1 = <tensor[3]>[vdot4260,vdot4281,vdot4288];
          tensor[3,3] TPP4216#3 = <tensor[3,3]>[tensor4261,tensor4282,tensor4289];
          tensor[3] projParam4300#3 = ProjectLast<tensor[3,3],[0]>(TPP4216);
          tensor[3] projParam4301#3 = ProjectLast<tensor[3,3],[0]>(P3EBD);
          real vdot4302#1 = VDot<3>(projParam4300,projParam4301);
          tensor[3] projParam4303#3 = ProjectLast<tensor[3,3],[1]>(P3EBD);
          real vdot4304#1 = VDot<3>(projParam4300,projParam4303);
          tensor[3] projParam4305#3 = ProjectLast<tensor[3,3],[2]>(P3EBD);
          real vdot4306#1 = VDot<3>(projParam4300,projParam4305);
          tensor[3] tensor4307#1 = <tensor[3]>[vdot4302,vdot4304,vdot4306];
          tensor[3] projParam4308#3 = ProjectLast<tensor[3,3],[1]>(TPP4216);
          real vdot4309#1 = VDot<3>(projParam4308,projParam4301);
          real vdot430A#1 = VDot<3>(projParam4308,projParam4303);
          real vdot430B#1 = VDot<3>(projParam4308,projParam4305);
          tensor[3] tensor430C#1 = <tensor[3]>[vdot4309,vdot430A,vdot430B];
          tensor[3] projParam430D#3 = ProjectLast<tensor[3,3],[2]>(TPP4216);
          real vdot430E#1 = VDot<3>(projParam430D,projParam4301);
          real vdot430F#1 = VDot<3>(projParam430D,projParam4303);
          real vdot4310#1 = VDot<3>(projParam430D,projParam4305);
          tensor[3] tensor4311#1 = <tensor[3]>[vdot430E,vdot430F,vdot4310];
          tensor[3,3] op1_e3_l_242FF#9 = <tensor[3,3]>[tensor4307,tensor430C,tensor4311];
          real r4327#3 = TensorIndex<tensor[3,3],[0,0]>(P3EBD);
          real r4328#3 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_242FF);
          real r4329#1 = RMul(r4327,r4328);
          real r432A#3 = TensorIndex<tensor[3,3],[0,1]>(P3EBD);
          real r432B#3 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_242FF);
          real r432C#1 = RMul(r432A,r432B);
          real r432D#3 = TensorIndex<tensor[3,3],[0,2]>(P3EBD);
          real r432E#3 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_242FF);
          real r432F#1 = RMul(r432D,r432E);
          real r4330#1 = RAdd(r4329,r432C);
          real r4331#1 = RAdd(r4330,r432F);
          real r4332#3 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_242FF);
          real r4333#1 = RMul(r4327,r4332);
          real r4334#3 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_242FF);
          real r4335#1 = RMul(r432A,r4334);
          real r4336#3 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_242FF);
          real r4337#1 = RMul(r432D,r4336);
          real r4338#1 = RAdd(r4333,r4335);
          real r4339#1 = RAdd(r4338,r4337);
          real r433A#3 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_242FF);
          real r433B#1 = RMul(r4327,r433A);
          real r433C#3 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_242FF);
          real r433D#1 = RMul(r432A,r433C);
          real r433E#3 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_242FF);
          real r433F#1 = RMul(r432D,r433E);
          real r4340#1 = RAdd(r433B,r433D);
          real r4341#1 = RAdd(r4340,r433F);
          tensor[3] tensor4342#1 = <tensor[3]>[r4331,r4339,r4341];
          real r4343#3 = TensorIndex<tensor[3,3],[1,0]>(P3EBD);
          real r4344#1 = RMul(r4343,r4328);
          real r4345#3 = TensorIndex<tensor[3,3],[1,1]>(P3EBD);
          real r4346#1 = RMul(r4345,r432B);
          real r4347#3 = TensorIndex<tensor[3,3],[1,2]>(P3EBD);
          real r4348#1 = RMul(r4347,r432E);
          real r4349#1 = RAdd(r4344,r4346);
          real r434A#1 = RAdd(r4349,r4348);
          real r434B#1 = RMul(r4343,r4332);
          real r434C#1 = RMul(r4345,r4334);
          real r434D#1 = RMul(r4347,r4336);
          real r434E#1 = RAdd(r434B,r434C);
          real r434F#1 = RAdd(r434E,r434D);
          real r4350#1 = RMul(r4343,r433A);
          real r4351#1 = RMul(r4345,r433C);
          real r4352#1 = RMul(r4347,r433E);
          real r4353#1 = RAdd(r4350,r4351);
          real r4354#1 = RAdd(r4353,r4352);
          tensor[3] tensor4355#1 = <tensor[3]>[r434A,r434F,r4354];
          real r4356#3 = TensorIndex<tensor[3,3],[2,0]>(P3EBD);
          real r4357#1 = RMul(r4356,r4328);
          real r4358#3 = TensorIndex<tensor[3,3],[2,1]>(P3EBD);
          real r4359#1 = RMul(r4358,r432B);
          real r435A#3 = TensorIndex<tensor[3,3],[2,2]>(P3EBD);
          real r435B#1 = RMul(r435A,r432E);
          real r435C#1 = RAdd(r4357,r4359);
          real r435D#1 = RAdd(r435C,r435B);
          real r435E#1 = RMul(r4356,r4332);
          real r435F#1 = RMul(r4358,r4334);
          real r4360#1 = RMul(r435A,r4336);
          real r4361#1 = RAdd(r435E,r435F);
          real r4362#1 = RAdd(r4361,r4360);
          real r4363#1 = RMul(r4356,r433A);
          real r4364#1 = RMul(r4358,r433C);
          real r4365#1 = RMul(r435A,r433E);
          real r4366#1 = RAdd(r4363,r4364);
          real r4367#1 = RAdd(r4366,r4365);
          tensor[3] tensor4368#1 = <tensor[3]>[r435D,r4362,r4367];
          tensor[3,3] _t4326#1 = <tensor[3,3]>[tensor4342,tensor4355,tensor4368];
          (real[3] evals43AD#2,tensor[3][3] E43AE#2) = EigenVecs3x3(_t4326);
          tensor[3] _t43B0#6 = Subscript<tensor[3][3]>(E43AE,idx3EE6);
          real _t43B2#9 = Subscript<real[3]>(evals43AD,idx3EE6);
          tensor[3] _t43B4#6 = Subscript<tensor[3][3]>(E43AE,idx3EE0);
          real _t43B6#9 = Subscript<real[3]>(evals43AD,idx3EE0);
          real r43B9#1 = TensorIndex<tensor[3],[0]>(_t43B0);
          tensor[3] binopV43BA#1 = VScale<3>(r43B9,_t43B0);
          real r43BB#1 = TensorIndex<tensor[3],[1]>(_t43B0);
          tensor[3] binopV43BC#1 = VScale<3>(r43BB,_t43B0);
          real r43BD#1 = TensorIndex<tensor[3],[2]>(_t43B0);
          tensor[3] binopV43BE#1 = VScale<3>(r43BD,_t43B0);
          tensor[3,3] op1_e3_l_943B8#9 = <tensor[3,3]>[binopV43BA,binopV43BC,binopV43BE];
          real r43C8#1 = TensorIndex<tensor[3],[0]>(_t43B4);
          tensor[3] binopV43C9#1 = VScale<3>(r43C8,_t43B4);
          real r43CA#1 = TensorIndex<tensor[3],[1]>(_t43B4);
          tensor[3] binopV43CB#1 = VScale<3>(r43CA,_t43B4);
          real r43CC#1 = TensorIndex<tensor[3],[2]>(_t43B4);
          tensor[3] binopV43CD#1 = VScale<3>(r43CC,_t43B4);
          tensor[3,3] op1_e3_l_1043C7#9 = <tensor[3,3]>[binopV43C9,binopV43CB,binopV43CD];
          real r43D7#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_943B8);
          real r43D8#1 = RDiv(r43D7,_t43B2);
          real r43D9#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_943B8);
          real r43DA#1 = RDiv(r43D9,_t43B2);
          real r43DB#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_943B8);
          real r43DC#1 = RDiv(r43DB,_t43B2);
          tensor[3] tensor43DD#1 = <tensor[3]>[r43D8,r43DA,r43DC];
          real r43DE#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_943B8);
          real r43DF#1 = RDiv(r43DE,_t43B2);
          real r43E0#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_943B8);
          real r43E1#1 = RDiv(r43E0,_t43B2);
          real r43E2#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_943B8);
          real r43E3#1 = RDiv(r43E2,_t43B2);
          tensor[3] tensor43E4#1 = <tensor[3]>[r43DF,r43E1,r43E3];
          real r43E5#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_943B8);
          real r43E6#1 = RDiv(r43E5,_t43B2);
          real r43E7#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_943B8);
          real r43E8#1 = RDiv(r43E7,_t43B2);
          real r43E9#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_943B8);
          real r43EA#1 = RDiv(r43E9,_t43B2);
          tensor[3] tensor43EB#1 = <tensor[3]>[r43E6,r43E8,r43EA];
          tensor[3,3] op1_e3_l_1143D6#3 = <tensor[3,3]>[tensor43DD,tensor43E4,tensor43EB];
          real r4404#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_1043C7);
          real r4405#1 = RDiv(r4404,_t43B6);
          real r4406#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_1043C7);
          real r4407#1 = RDiv(r4406,_t43B6);
          real r4408#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_1043C7);
          real r4409#1 = RDiv(r4408,_t43B6);
          tensor[3] tensor440A#1 = <tensor[3]>[r4405,r4407,r4409];
          real r440B#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_1043C7);
          real r440C#1 = RDiv(r440B,_t43B6);
          real r440D#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_1043C7);
          real r440E#1 = RDiv(r440D,_t43B6);
          real r440F#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_1043C7);
          real r4410#1 = RDiv(r440F,_t43B6);
          tensor[3] tensor4411#1 = <tensor[3]>[r440C,r440E,r4410];
          real r4412#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_1043C7);
          real r4413#1 = RDiv(r4412,_t43B6);
          real r4414#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_1043C7);
          real r4415#1 = RDiv(r4414,_t43B6);
          real r4416#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_1043C7);
          real r4417#1 = RDiv(r4416,_t43B6);
          tensor[3] tensor4418#1 = <tensor[3]>[r4413,r4415,r4417];
          tensor[3,3] op1_e3_l_124403#3 = <tensor[3,3]>[tensor440A,tensor4411,tensor4418];
          tensor[3] projParam4431#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1143D6);
          tensor[3] projParam4432#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_124403);
          tensor[3] v4433#1 = VAdd<3>(projParam4431,projParam4432);
          tensor[3] projParam4434#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1143D6);
          tensor[3] projParam4435#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_124403);
          tensor[3] v4436#1 = VAdd<3>(projParam4434,projParam4435);
          tensor[3] projParam4437#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1143D6);
          tensor[3] projParam4438#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_124403);
          tensor[3] v4439#1 = VAdd<3>(projParam4437,projParam4438);
          tensor[3,3] op1_e3_l_134430#3 = <tensor[3,3]>[v4433,v4436,v4439];
          int[3] seq4445#3 = <int[3]>{idx3EDE,idx3EE4,idx3EEA};
          int ilit4448#4 = 0;
          int idx4449#4 = Subscript<int[3]>(seq4445,ilit4448);
          int ilit444A#4 = 1;
          int idx444B#4 = Subscript<int[3]>(seq4445,ilit444A);
          int ilit444C#4 = 2;
          int idx444D#4 = Subscript<int[3]>(seq4445,ilit444C);
          int ilit444E#20 = 300;
          int addRes444F#16 = IAdd(idx4449,ilit4448);
          int addRes4450#4 = IAdd(idx444B,ilit4448);
          int addRes4451#1 = IAdd(idx444D,ilit4448);
          int mulRes4452#4 = IMul(ilit444E,addRes4451);
          int addRes4453#1 = IAdd(addRes4450,mulRes4452);
          int mulRes4454#4 = IMul(ilit444E,addRes4453);
          int addRes4455#1 = IAdd(addRes444F,mulRes4454);
          real v000_4456#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4455);
          int addRes4457#16 = IAdd(idx4449,ilit444A);
          int addRes4458#1 = IAdd(addRes4457,mulRes4454);
          real v001_4459#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4458);
          int addRes445A#16 = IAdd(idx4449,ilit444C);
          int addRes445B#1 = IAdd(addRes445A,mulRes4454);
          real v002_445C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes445B);
          int ilit445D#3 = 3;
          int addRes445E#16 = IAdd(idx4449,ilit445D);
          int addRes445F#1 = IAdd(addRes445E,mulRes4454);
          real v003_4460#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes445F);
          tensor[4] v00_4461#1 = <tensor[4]>[v000_4456,v001_4459,v002_445C,v003_4460];
          int addRes4462#4 = IAdd(idx444B,ilit444A);
          int addRes4463#1 = IAdd(addRes4462,mulRes4452);
          int mulRes4464#4 = IMul(ilit444E,addRes4463);
          int addRes4465#1 = IAdd(addRes444F,mulRes4464);
          real v010_4466#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4465);
          int addRes4467#1 = IAdd(addRes4457,mulRes4464);
          real v011_4468#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4467);
          int addRes4469#1 = IAdd(addRes445A,mulRes4464);
          real v012_446A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4469);
          int addRes446B#1 = IAdd(addRes445E,mulRes4464);
          real v013_446C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes446B);
          tensor[4] v01_446D#1 = <tensor[4]>[v010_4466,v011_4468,v012_446A,v013_446C];
          int addRes446E#4 = IAdd(idx444B,ilit444C);
          int addRes446F#1 = IAdd(addRes446E,mulRes4452);
          int mulRes4470#4 = IMul(ilit444E,addRes446F);
          int addRes4471#1 = IAdd(addRes444F,mulRes4470);
          real v020_4472#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4471);
          int addRes4473#1 = IAdd(addRes4457,mulRes4470);
          real v021_4474#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4473);
          int addRes4475#1 = IAdd(addRes445A,mulRes4470);
          real v022_4476#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4475);
          int addRes4477#1 = IAdd(addRes445E,mulRes4470);
          real v023_4478#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4477);
          tensor[4] v02_4479#1 = <tensor[4]>[v020_4472,v021_4474,v022_4476,v023_4478];
          int addRes447A#4 = IAdd(idx444B,ilit445D);
          int addRes447B#1 = IAdd(addRes447A,mulRes4452);
          int mulRes447C#4 = IMul(ilit444E,addRes447B);
          int addRes447D#1 = IAdd(addRes444F,mulRes447C);
          real v030_447E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes447D);
          int addRes447F#1 = IAdd(addRes4457,mulRes447C);
          real v031_4480#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes447F);
          int addRes4481#1 = IAdd(addRes445A,mulRes447C);
          real v032_4482#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4481);
          int addRes4483#1 = IAdd(addRes445E,mulRes447C);
          real v033_4484#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4483);
          tensor[4] v03_4485#1 = <tensor[4]>[v030_447E,v031_4480,v032_4482,v033_4484];
          tensor[4,4] v0_4486#1 = <tensor[4,4]>[v00_4461,v01_446D,v02_4479,v03_4485];
          int addRes4487#1 = IAdd(idx444D,ilit444A);
          int mulRes4488#4 = IMul(ilit444E,addRes4487);
          int addRes4489#1 = IAdd(addRes4450,mulRes4488);
          int mulRes448A#4 = IMul(ilit444E,addRes4489);
          int addRes448B#1 = IAdd(addRes444F,mulRes448A);
          real v100_448C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes448B);
          int addRes448D#1 = IAdd(addRes4457,mulRes448A);
          real v101_448E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes448D);
          int addRes448F#1 = IAdd(addRes445A,mulRes448A);
          real v102_4490#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes448F);
          int addRes4491#1 = IAdd(addRes445E,mulRes448A);
          real v103_4492#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4491);
          tensor[4] v10_4493#1 = <tensor[4]>[v100_448C,v101_448E,v102_4490,v103_4492];
          int addRes4494#1 = IAdd(addRes4462,mulRes4488);
          int mulRes4495#4 = IMul(ilit444E,addRes4494);
          int addRes4496#1 = IAdd(addRes444F,mulRes4495);
          real v110_4497#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4496);
          int addRes4498#1 = IAdd(addRes4457,mulRes4495);
          real v111_4499#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4498);
          int addRes449A#1 = IAdd(addRes445A,mulRes4495);
          real v112_449B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes449A);
          int addRes449C#1 = IAdd(addRes445E,mulRes4495);
          real v113_449D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes449C);
          tensor[4] v11_449E#1 = <tensor[4]>[v110_4497,v111_4499,v112_449B,v113_449D];
          int addRes449F#1 = IAdd(addRes446E,mulRes4488);
          int mulRes44A0#4 = IMul(ilit444E,addRes449F);
          int addRes44A1#1 = IAdd(addRes444F,mulRes44A0);
          real v120_44A2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44A1);
          int addRes44A3#1 = IAdd(addRes4457,mulRes44A0);
          real v121_44A4#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44A3);
          int addRes44A5#1 = IAdd(addRes445A,mulRes44A0);
          real v122_44A6#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44A5);
          int addRes44A7#1 = IAdd(addRes445E,mulRes44A0);
          real v123_44A8#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44A7);
          tensor[4] v12_44A9#1 = <tensor[4]>[v120_44A2,v121_44A4,v122_44A6,v123_44A8];
          int addRes44AA#1 = IAdd(addRes447A,mulRes4488);
          int mulRes44AB#4 = IMul(ilit444E,addRes44AA);
          int addRes44AC#1 = IAdd(addRes444F,mulRes44AB);
          real v130_44AD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44AC);
          int addRes44AE#1 = IAdd(addRes4457,mulRes44AB);
          real v131_44AF#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44AE);
          int addRes44B0#1 = IAdd(addRes445A,mulRes44AB);
          real v132_44B1#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44B0);
          int addRes44B2#1 = IAdd(addRes445E,mulRes44AB);
          real v133_44B3#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44B2);
          tensor[4] v13_44B4#1 = <tensor[4]>[v130_44AD,v131_44AF,v132_44B1,v133_44B3];
          tensor[4,4] v1_44B5#1 = <tensor[4,4]>[v10_4493,v11_449E,v12_44A9,v13_44B4];
          int addRes44B6#1 = IAdd(idx444D,ilit444C);
          int mulRes44B7#4 = IMul(ilit444E,addRes44B6);
          int addRes44B8#1 = IAdd(addRes4450,mulRes44B7);
          int mulRes44B9#4 = IMul(ilit444E,addRes44B8);
          int addRes44BA#1 = IAdd(addRes444F,mulRes44B9);
          real v200_44BB#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44BA);
          int addRes44BC#1 = IAdd(addRes4457,mulRes44B9);
          real v201_44BD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44BC);
          int addRes44BE#1 = IAdd(addRes445A,mulRes44B9);
          real v202_44BF#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44BE);
          int addRes44C0#1 = IAdd(addRes445E,mulRes44B9);
          real v203_44C1#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44C0);
          tensor[4] v20_44C2#1 = <tensor[4]>[v200_44BB,v201_44BD,v202_44BF,v203_44C1];
          int addRes44C3#1 = IAdd(addRes4462,mulRes44B7);
          int mulRes44C4#4 = IMul(ilit444E,addRes44C3);
          int addRes44C5#1 = IAdd(addRes444F,mulRes44C4);
          real v210_44C6#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44C5);
          int addRes44C7#1 = IAdd(addRes4457,mulRes44C4);
          real v211_44C8#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44C7);
          int addRes44C9#1 = IAdd(addRes445A,mulRes44C4);
          real v212_44CA#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44C9);
          int addRes44CB#1 = IAdd(addRes445E,mulRes44C4);
          real v213_44CC#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44CB);
          tensor[4] v21_44CD#1 = <tensor[4]>[v210_44C6,v211_44C8,v212_44CA,v213_44CC];
          int addRes44CE#1 = IAdd(addRes446E,mulRes44B7);
          int mulRes44CF#4 = IMul(ilit444E,addRes44CE);
          int addRes44D0#1 = IAdd(addRes444F,mulRes44CF);
          real v220_44D1#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44D0);
          int addRes44D2#1 = IAdd(addRes4457,mulRes44CF);
          real v221_44D3#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44D2);
          int addRes44D4#1 = IAdd(addRes445A,mulRes44CF);
          real v222_44D5#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44D4);
          int addRes44D6#1 = IAdd(addRes445E,mulRes44CF);
          real v223_44D7#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44D6);
          tensor[4] v22_44D8#1 = <tensor[4]>[v220_44D1,v221_44D3,v222_44D5,v223_44D7];
          int addRes44D9#1 = IAdd(addRes447A,mulRes44B7);
          int mulRes44DA#4 = IMul(ilit444E,addRes44D9);
          int addRes44DB#1 = IAdd(addRes444F,mulRes44DA);
          real v230_44DC#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44DB);
          int addRes44DD#1 = IAdd(addRes4457,mulRes44DA);
          real v231_44DE#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44DD);
          int addRes44DF#1 = IAdd(addRes445A,mulRes44DA);
          real v232_44E0#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44DF);
          int addRes44E1#1 = IAdd(addRes445E,mulRes44DA);
          real v233_44E2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44E1);
          tensor[4] v23_44E3#1 = <tensor[4]>[v230_44DC,v231_44DE,v232_44E0,v233_44E2];
          tensor[4,4] v2_44E4#1 = <tensor[4,4]>[v20_44C2,v21_44CD,v22_44D8,v23_44E3];
          int addRes44E5#1 = IAdd(idx444D,ilit445D);
          int mulRes44E6#4 = IMul(ilit444E,addRes44E5);
          int addRes44E7#1 = IAdd(addRes4450,mulRes44E6);
          int mulRes44E8#4 = IMul(ilit444E,addRes44E7);
          int addRes44E9#1 = IAdd(addRes444F,mulRes44E8);
          real v300_44EA#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44E9);
          int addRes44EB#1 = IAdd(addRes4457,mulRes44E8);
          real v301_44EC#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44EB);
          int addRes44ED#1 = IAdd(addRes445A,mulRes44E8);
          real v302_44EE#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44ED);
          int addRes44EF#1 = IAdd(addRes445E,mulRes44E8);
          real v303_44F0#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44EF);
          tensor[4] v30_44F1#1 = <tensor[4]>[v300_44EA,v301_44EC,v302_44EE,v303_44F0];
          int addRes44F2#1 = IAdd(addRes4462,mulRes44E6);
          int mulRes44F3#4 = IMul(ilit444E,addRes44F2);
          int addRes44F4#1 = IAdd(addRes444F,mulRes44F3);
          real v310_44F5#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44F4);
          int addRes44F6#1 = IAdd(addRes4457,mulRes44F3);
          real v311_44F7#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44F6);
          int addRes44F8#1 = IAdd(addRes445A,mulRes44F3);
          real v312_44F9#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44F8);
          int addRes44FA#1 = IAdd(addRes445E,mulRes44F3);
          real v313_44FB#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44FA);
          tensor[4] v31_44FC#1 = <tensor[4]>[v310_44F5,v311_44F7,v312_44F9,v313_44FB];
          int addRes44FD#1 = IAdd(addRes446E,mulRes44E6);
          int mulRes44FE#4 = IMul(ilit444E,addRes44FD);
          int addRes44FF#1 = IAdd(addRes444F,mulRes44FE);
          real v320_4500#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44FF);
          int addRes4501#1 = IAdd(addRes4457,mulRes44FE);
          real v321_4502#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4501);
          int addRes4503#1 = IAdd(addRes445A,mulRes44FE);
          real v322_4504#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4503);
          int addRes4505#1 = IAdd(addRes445E,mulRes44FE);
          real v323_4506#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4505);
          tensor[4] v32_4507#1 = <tensor[4]>[v320_4500,v321_4502,v322_4504,v323_4506];
          int addRes4508#1 = IAdd(addRes447A,mulRes44E6);
          int mulRes4509#4 = IMul(ilit444E,addRes4508);
          int addRes450A#1 = IAdd(addRes444F,mulRes4509);
          real v330_450B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes450A);
          int addRes450C#1 = IAdd(addRes4457,mulRes4509);
          real v331_450D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes450C);
          int addRes450E#1 = IAdd(addRes445A,mulRes4509);
          real v332_450F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes450E);
          int addRes4510#1 = IAdd(addRes445E,mulRes4509);
          real v333_4511#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4510);
          tensor[4] v33_4512#1 = <tensor[4]>[v330_450B,v331_450D,v332_450F,v333_4511];
          tensor[4,4] v3_4513#1 = <tensor[4,4]>[v30_44F1,v31_44FC,v32_4507,v33_4512];
          tensor[4,4,4] v_4514#1 = <tensor[4,4,4]>[v0_4486,v1_44B5,v2_44E4,v3_4513];
          tensor[4,4,4] ldvox4447#16 = v_4514;
          tensor[2,4] kconsZ_45E3#0 = <tensor[2,4]>[kevalZ_d0_409A,kevalZ_d1_40CE];
          tensor[2,4] kconsY_45E5#0 = <tensor[2,4]>[kevalY_d0_411E,kevalY_d1_4152];
          tensor[2,4] kconsX_45E7#0 = <tensor[2,4]>[kevalX_d0_41A2,kevalX_d1_41D6];
          tensor[4] projIx45EA#2 = ProjectLast<tensor[4,4,4],[0,0]>(ldvox4447);
          tensor[4] projIx45EB#2 = ProjectLast<tensor[4,4,4],[0,1]>(ldvox4447);
          tensor[4] projIx45EC#2 = ProjectLast<tensor[4,4,4],[0,2]>(ldvox4447);
          tensor[4] projIx45ED#2 = ProjectLast<tensor[4,4,4],[0,3]>(ldvox4447);
          tensor[4] projIx45EE#2 = ProjectLast<tensor[4,4,4],[1,0]>(ldvox4447);
          tensor[4] projIx45EF#2 = ProjectLast<tensor[4,4,4],[1,1]>(ldvox4447);
          tensor[4] projIx45F0#2 = ProjectLast<tensor[4,4,4],[1,2]>(ldvox4447);
          tensor[4] projIx45F1#2 = ProjectLast<tensor[4,4,4],[1,3]>(ldvox4447);
          tensor[4] projIx45F2#2 = ProjectLast<tensor[4,4,4],[2,0]>(ldvox4447);
          tensor[4] projIx45F3#2 = ProjectLast<tensor[4,4,4],[2,1]>(ldvox4447);
          tensor[4] projIx45F4#2 = ProjectLast<tensor[4,4,4],[2,2]>(ldvox4447);
          tensor[4] projIx45F5#2 = ProjectLast<tensor[4,4,4],[2,3]>(ldvox4447);
          tensor[4] projIx45F6#2 = ProjectLast<tensor[4,4,4],[3,0]>(ldvox4447);
          tensor[4] projIx45F7#2 = ProjectLast<tensor[4,4,4],[3,1]>(ldvox4447);
          tensor[4] projIx45F8#2 = ProjectLast<tensor[4,4,4],[3,2]>(ldvox4447);
          tensor[4] projIx45F9#2 = ProjectLast<tensor[4,4,4],[3,3]>(ldvox4447);
          real vdot45FA#1 = VDot<4>(kevalX_d1_41D6,projIx45EA);
          real vdot45FB#1 = VDot<4>(kevalX_d1_41D6,projIx45EB);
          real vdot45FC#1 = VDot<4>(kevalX_d1_41D6,projIx45EC);
          real vdot45FD#1 = VDot<4>(kevalX_d1_41D6,projIx45ED);
          tensor[4] cons_45FE#1 = <tensor[4]>[vdot45FA,vdot45FB,vdot45FC,vdot45FD];
          real vdot45FF#1 = VDot<4>(kevalX_d1_41D6,projIx45EE);
          real vdot4600#1 = VDot<4>(kevalX_d1_41D6,projIx45EF);
          real vdot4601#1 = VDot<4>(kevalX_d1_41D6,projIx45F0);
          real vdot4602#1 = VDot<4>(kevalX_d1_41D6,projIx45F1);
          tensor[4] cons_4603#1 = <tensor[4]>[vdot45FF,vdot4600,vdot4601,vdot4602];
          real vdot4604#1 = VDot<4>(kevalX_d1_41D6,projIx45F2);
          real vdot4605#1 = VDot<4>(kevalX_d1_41D6,projIx45F3);
          real vdot4606#1 = VDot<4>(kevalX_d1_41D6,projIx45F4);
          real vdot4607#1 = VDot<4>(kevalX_d1_41D6,projIx45F5);
          tensor[4] cons_4608#1 = <tensor[4]>[vdot4604,vdot4605,vdot4606,vdot4607];
          real vdot4609#1 = VDot<4>(kevalX_d1_41D6,projIx45F6);
          real vdot460A#1 = VDot<4>(kevalX_d1_41D6,projIx45F7);
          real vdot460B#1 = VDot<4>(kevalX_d1_41D6,projIx45F8);
          real vdot460C#1 = VDot<4>(kevalX_d1_41D6,projIx45F9);
          tensor[4] cons_460D#1 = <tensor[4]>[vdot4609,vdot460A,vdot460B,vdot460C];
          real vdot460E#1 = VDot<4>(kevalY_d0_411E,cons_45FE);
          real vdot460F#1 = VDot<4>(kevalY_d0_411E,cons_4603);
          real vdot4610#1 = VDot<4>(kevalY_d0_411E,cons_4608);
          real vdot4611#1 = VDot<4>(kevalY_d0_411E,cons_460D);
          tensor[4] cons_4612#1 = <tensor[4]>[vdot460E,vdot460F,vdot4610,vdot4611];
          real vdot4613#1 = VDot<4>(kevalZ_d0_409A,cons_4612);
          real vdot4614#1 = VDot<4>(kevalX_d0_41A2,projIx45EA);
          real vdot4615#1 = VDot<4>(kevalX_d0_41A2,projIx45EB);
          real vdot4616#1 = VDot<4>(kevalX_d0_41A2,projIx45EC);
          real vdot4617#1 = VDot<4>(kevalX_d0_41A2,projIx45ED);
          tensor[4] cons_4618#2 = <tensor[4]>[vdot4614,vdot4615,vdot4616,vdot4617];
          real vdot4619#1 = VDot<4>(kevalX_d0_41A2,projIx45EE);
          real vdot461A#1 = VDot<4>(kevalX_d0_41A2,projIx45EF);
          real vdot461B#1 = VDot<4>(kevalX_d0_41A2,projIx45F0);
          real vdot461C#1 = VDot<4>(kevalX_d0_41A2,projIx45F1);
          tensor[4] cons_461D#2 = <tensor[4]>[vdot4619,vdot461A,vdot461B,vdot461C];
          real vdot461E#1 = VDot<4>(kevalX_d0_41A2,projIx45F2);
          real vdot461F#1 = VDot<4>(kevalX_d0_41A2,projIx45F3);
          real vdot4620#1 = VDot<4>(kevalX_d0_41A2,projIx45F4);
          real vdot4621#1 = VDot<4>(kevalX_d0_41A2,projIx45F5);
          tensor[4] cons_4622#2 = <tensor[4]>[vdot461E,vdot461F,vdot4620,vdot4621];
          real vdot4623#1 = VDot<4>(kevalX_d0_41A2,projIx45F6);
          real vdot4624#1 = VDot<4>(kevalX_d0_41A2,projIx45F7);
          real vdot4625#1 = VDot<4>(kevalX_d0_41A2,projIx45F8);
          real vdot4626#1 = VDot<4>(kevalX_d0_41A2,projIx45F9);
          tensor[4] cons_4627#2 = <tensor[4]>[vdot4623,vdot4624,vdot4625,vdot4626];
          real vdot4628#1 = VDot<4>(kevalY_d1_4152,cons_4618);
          real vdot4629#1 = VDot<4>(kevalY_d1_4152,cons_461D);
          real vdot462A#1 = VDot<4>(kevalY_d1_4152,cons_4622);
          real vdot462B#1 = VDot<4>(kevalY_d1_4152,cons_4627);
          tensor[4] cons_462C#1 = <tensor[4]>[vdot4628,vdot4629,vdot462A,vdot462B];
          real vdot462D#1 = VDot<4>(kevalZ_d0_409A,cons_462C);
          real vdot462E#1 = VDot<4>(kevalY_d0_411E,cons_4618);
          real vdot462F#1 = VDot<4>(kevalY_d0_411E,cons_461D);
          real vdot4630#1 = VDot<4>(kevalY_d0_411E,cons_4622);
          real vdot4631#1 = VDot<4>(kevalY_d0_411E,cons_4627);
          tensor[4] cons_4632#1 = <tensor[4]>[vdot462E,vdot462F,vdot4630,vdot4631];
          real vdot4633#1 = VDot<4>(kevalZ_d1_40CE,cons_4632);
          tensor[3] TPP45E9#3 = <tensor[3]>[vdot4613,vdot462D,vdot4633];
          tensor[3] projParam4681#1 = ProjectLast<tensor[3,3],[0]>(P3EBD);
          real vdot4682#1 = VDot<3>(TPP45E9,projParam4681);
          tensor[3] projParam4683#1 = ProjectLast<tensor[3,3],[1]>(P3EBD);
          real vdot4684#1 = VDot<3>(TPP45E9,projParam4683);
          tensor[3] projParam4685#1 = ProjectLast<tensor[3,3],[2]>(P3EBD);
          real vdot4686#1 = VDot<3>(TPP45E9,projParam4685);
          tensor[3] probe_l_144680#3 = <tensor[3]>[vdot4682,vdot4684,vdot4686];
          tensor[3] projParam4690#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_134430);
          tensor[3] negV4691#1 = VNeg<3>(projParam4690);
          tensor[3] projParam4692#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_134430);
          tensor[3] negV4693#1 = VNeg<3>(projParam4692);
          tensor[3] projParam4694#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_134430);
          tensor[3] negV4695#1 = VNeg<3>(projParam4694);
          tensor[3,3] op1_e3_l_15468F#3 = <tensor[3,3]>[negV4691,negV4693,negV4695];
          tensor[3] projParam469E#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_15468F);
          real vdot469F#1 = VDot<3>(projParam469E,probe_l_144680);
          tensor[3] projParam46A0#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_15468F);
          real vdot46A1#1 = VDot<3>(projParam46A0,probe_l_144680);
          tensor[3] projParam46A2#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_15468F);
          real vdot46A3#1 = VDot<3>(projParam46A2,probe_l_144680);
          tensor[3] _t36A6#1 = <tensor[3]>[vdot469F,vdot46A1,vdot46A3];
          goto JOIN36A7
        ASSIGN46AC:  preds = [COND2D5A]
          bool _t2D5E#1 = false;
          goto JOIN2D5F
        ASSIGN46AD:  preds = [COND2D55]
          bool _t2D61#1 = false;
          goto JOIN2D62
        ASSIGN46AE:  preds = [COND24C1]
          bool _t2D64#1 = false;
          goto JOIN2D65
    end update
    method stabilize
        ENTRY46AF:  preds = []
          tensor[4] rgba46B0#1 = self.rgba;
          tensor[3] rgb46B2#3 = self.rgb;
          real transp46B4#2 = self.transp;
          real _t46B6#2 = 0.1e1;
          bool _t46B8#1 = LT<real>(transp46B4,_t46B6);
          if _t46B8 then goto ASSIGN46BD else goto JOIN46D0
        ASSIGN46BD:  preds = [COND46BA]
          real aa46BB#4 = RSub(_t46B6,transp46B4);
          real _t46BE#1 = VIndex<3,0>(rgb46B2);
          real _t46C0#1 = RDiv(_t46BE,aa46BB);
          real _t46C3#1 = VIndex<3,1>(rgb46B2);
          real _t46C5#1 = RDiv(_t46C3,aa46BB);
          real _t46C8#1 = VIndex<3,2>(rgb46B2);
          real _t46CA#1 = RDiv(_t46C8,aa46BB);
          tensor[4] rgba46CD#1 = <tensor[4]>[_t46C0,_t46C5,_t46CA,aa46BB];
          goto JOIN46D0
        JOIN46D0:  preds = [ASSIGN46CE,COND46BA]
          tensor[4] rgba46CF#1 = phi(rgba46CD,rgba46B0)
          self.rgba = rgba46CF;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY46D3:  preds = []
      int iresU46D4#1 = globals.iresU2187;
      int iresV46D6#1 = globals.iresV2188;
      int _t46D8#2 = 0;
      int _t46DA#2 = 1;
      int _t46DC#1 = ISub(iresV46D6,_t46DA);
      int[] _t46DE#1 = Range(_t46D8,_t46DC);
    FOREACH46E1:  preds = [ASSIGN46DF,NEXT46EA]
      foreach (vi46E0 in _t46DE) on exit goto RETURN46EB
      int _t46E2#1 = ISub(iresU46D4,_t46DA);
      int[] _t46E4#1 = Range(_t46D8,_t46E2);
    FOREACH46E7:  preds = [ASSIGN46E5,NEXT46E9]
      foreach (ui46E6 in _t46E4) on exit goto NEXT46EA
      new ray(ui46E6,vi46E0);
      goto FOREACH46E7
    NEXT46EA:  preds = [FOREACH46E7]
      goto FOREACH46E1
    RETURN46EB:  preds = [FOREACH46E1]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block217B (block) = <no-default>
  input 0space0509_intermedateGlobal217C (space) = <no-default>
  input 0U050B_intermedateGlobal217D (U) = <no-default>
  input cellChoice217E (cellChoice) = <no-default>
  input cmap217F (cmap) = image("cmap.nrrd")
  input camEye2180 (camEye) = <default>
  input camAt2181 (camAt) = <default>
  input camUp2182 (camUp) = <default>
  input camNear2183 (camNear) = <default>
  input camFar2184 (camFar) = <default>
  input camFOV2185 (camFOV) = <default>
  input camOrtho2186 (camOrtho) = <default>
  input iresU2187 (iresU) = <default>
  input iresV2188 (iresV) = <default>
  input rayStep2189 (rayStep) = <default>
  input refStep218A (refStep) = <default>
  input transp0218B (transp0) = <default>
  input thick218C (thick) = <default>
  input fStrTh218D (fStrTh) = <default>
  input fMaskTh218E (fMaskTh) = <default>
  input fBias218F (fBias) = <default>
  input maxAlpha2190 (maxAlpha) = <default>
  input light2191 (light) = <default>
  input phong2192 (phong) = <default>
  input mcNear2193 (mcNear) = <default>
  input mcFar2194 (mcFar) = <default>
  input litdir2195 (litdir) = <default>
  input cminmax2196 (cminmax) = <default>
  input analytical2197 (analytical) = <default>
  input umm2198 (umm) = image("data.nrrd")
  global tensor[3] camN2199
  global tensor[3] camU219A
  global tensor[3] camV219B
  global real camDist219C
  global real camVmax219D
  global real camUmax219E
  global real camNearVsp219F
  global real camFarVsp21A0
  global tensor[3] litwsp21A1
  global int _t21A2
  global femData:Space _tX21A3
  global femData:FemFunc _tXX21A4
## functions
## input initialization
  ENTRY21A7:  preds = []
    real _t21A8#13 = 0.e0;
    real _t21AA#1 = -0.2e1;
    tensor[3] camEye21AC#1 = <tensor[3]>[_t21A8,_t21AA,_t21A8];
    globals.camEye2180 = camEye21AC;
    tensor[3] camAt21AF#1 = <tensor[3]>[_t21A8,_t21A8,_t21A8];
    globals.camAt2181 = camAt21AF;
    real _t21B2#5 = 0.1e1;
    tensor[3] camUp21B4#1 = <tensor[3]>[_t21A8,_t21A8,_t21B2];
    globals.camUp2182 = camUp21B4;
    real camNear21B7#1 = -0.4e1;
    globals.camNear2183 = camNear21B7;
    real camFar21BA#1 = 0.4e1;
    globals.camFar2184 = camFar21BA;
    real camFOV21BD#1 = 0.1e2;
    globals.camFOV2185 = camFOV21BD;
    bool camOrtho21C0#2 = false;
    globals.camOrtho2186 = camOrtho21C0;
    int iresU21C3#2 = 100;
    globals.iresU2187 = iresU21C3;
    globals.iresV2188 = iresU21C3;
    real rayStep21C7#2 = 0.1e-3;
    globals.rayStep2189 = rayStep21C7;
    globals.refStep218A = rayStep21C7;
    real transp021CB#1 = 0.5e-2;
    globals.transp0218B = transp021CB;
    real thick21CE#1 = 0.1e-1;
    globals.thick218C = thick21CE;
    globals.fStrTh218D = _t21A8;
    globals.fMaskTh218E = _t21A8;
    real fBias21D3#2 = 0.1e0;
    globals.fBias218F = fBias21D3;
    globals.maxAlpha2190 = _t21B2;
    globals.light2191 = camOrtho21C0;
    real _t21D8#1 = 0.7e0;
    real _t21DA#1 = 0.2e0;
    real _t21DC#1 = 0.1e3;
    tensor[4] phong21DE#1 = <tensor[4]>[fBias21D3,_t21D8,_t21DA,_t21DC];
    globals.phong2192 = phong21DE;
    tensor[3] mcNear21E1#2 = <tensor[3]>[_t21B2,_t21B2,_t21B2];
    globals.mcNear2193 = mcNear21E1;
    globals.mcFar2194 = mcNear21E1;
    real _t21E5#1 = -0.1e1;
    tensor[3] litdir21E7#1 = <tensor[3]>[_t21A8,_t21E5,_t21A8];
    globals.litdir2195 = litdir21E7;
    tensor[2] cminmax21EA#1 = <tensor[2]>[_t21A8,_t21A8];
    globals.cminmax2196 = cminmax21EA;
    bool analytical21ED#1 = true;
    globals.analytical2197 = analytical21ED;
    return
## global-variable initialization
  ENTRY21F1:  preds = []
    femData:Mesh block21F2#3 = globals.block217B;
    femData:Space 0space0509_intermedateGlobal21F4#1 = globals.0space0509_intermedateGlobal217C;
    femData:FemFunc 0U050B_intermedateGlobal21F6#1 = globals.0U050B_intermedateGlobal217D;
    int cellChoice21F8#1 = globals.cellChoice217E;
    tensor[3] camEye21FC#1 = globals.camEye2180;
    tensor[3] camAt21FE#1 = globals.camAt2181;
    tensor[3] camUp2200#3 = globals.camUp2182;
    real camNear2202#1 = globals.camNear2183;
    real camFar2204#1 = globals.camFar2184;
    real camFOV2206#1 = globals.camFOV2185;
    int iresU2208#1 = globals.iresU2187;
    int iresV220A#1 = globals.iresV2188;
    tensor[3] litdir220C#5 = globals.litdir2195;
    int _t220E#1 = 0;
    int _t2210#1 = 1;
    int _t2212#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F2);
    int _t2214#1 = ISub(_t2212,_t2210);
    int[] _t2216#1 = Range(_t220E,_t2214);
    femData:MeshCell[] _t2218#1 = <femData:MeshCell[]>{};
  FOREACH221B:  preds = [ASSIGN2219,NEXT2221]
    foreach (_t221A in _t2216) on exit goto ASSIGN2223
      femData:MeshCell[] _t221F#2 = phi(_t2218,_t221E)
    femData:MeshCell _t221C#1 = LoadFem<femData:MeshCell>(block21F2,_t221A);
    femData:MeshCell[] _t221E#1 = Append<femData:MeshCell>(_t221F,_t221C);
    goto FOREACH221B
  ASSIGN2223:  preds = [FOREACH221B]
    femData:Space space2222#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F4,block21F2);
    femData:FemFunc U2224#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F6,space2222);
    femData:MeshCell c12226#1 = Subscript<femData:MeshCell[]>(_t221F,cellChoice21F8);
    int _t2228#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12226);
    femData:FuncCell _t222A#2 = LoadFem<femData:FuncCell>(U2224,_t2228);
    femData:FemFunc _t222C#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t222A);
    femData:Space _t222E#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222C);
    int _t2230#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t222A);
    tensor[3] op1_e3_l_42236#9 = VSub<3>(camAt21FE,camEye21FC);
    real op1_e3_l_62239#1 = VDot<3>(op1_e3_l_42236,op1_e3_l_42236);
    real op1_e3_l_7223C#6 = Sqrt(op1_e3_l_62239);
    real realLit2240#1 = 0.1e1;
    real op1_e3_l_9223F#6 = RDiv(realLit2240,op1_e3_l_7223C);
    tensor[3] camN2244#4 = VScale<3>(op1_e3_l_9223F,op1_e3_l_42236);
    globals.camN2199 = camN2244;
    real realLit2249#3 = 0.e0;
    real r224A#3 = TensorIndex<tensor[3],[0]>(camUp2200);
    real r224B#3 = RMul(realLit2249,r224A);
    real r224C#3 = TensorIndex<tensor[3],[1]>(camUp2200);
    real r224D#3 = RMul(realLit2249,r224C);
    real r224E#3 = TensorIndex<tensor[3],[2]>(camUp2200);
    real r224F#5 = RMul(realLit2249,r224E);
    real r2250#3 = RAdd(r224B,r224D);
    real r2251#3 = RAdd(r2250,r224F);
    real realLit2252#3 = 0.1e1;
    real r2253#1 = RMul(realLit2252,r224E);
    real r2254#1 = RAdd(r2250,r2253);
    real realLit2255#3 = -0.1e1;
    real r2256#1 = RMul(realLit2255,r224C);
    real r2257#1 = RAdd(r224B,r2256);
    real r2258#1 = RAdd(r2257,r224F);
    tensor[3] tensor2259#1 = <tensor[3]>[r2251,r2254,r2258];
    real r225A#1 = RMul(realLit2255,r224E);
    real r225B#1 = RAdd(r2250,r225A);
    real r225C#1 = RMul(realLit2252,r224A);
    real r225D#1 = RAdd(r225C,r224D);
    real r225E#1 = RAdd(r225D,r224F);
    tensor[3] tensor225F#1 = <tensor[3]>[r225B,r2251,r225E];
    real r2260#1 = RMul(realLit2252,r224C);
    real r2261#1 = RAdd(r224B,r2260);
    real r2262#1 = RAdd(r2261,r224F);
    real r2263#1 = RMul(realLit2255,r224A);
    real r2264#1 = RAdd(r2263,r224D);
    real r2265#1 = RAdd(r2264,r224F);
    tensor[3] tensor2266#1 = <tensor[3]>[r2262,r2265,r2251];
    tensor[3] projParam2288#1 = tensor2259;
    real vdot2289#2 = VDot<3>(op1_e3_l_42236,projParam2288);
    tensor[3] projParam228A#1 = tensor225F;
    real vdot228B#2 = VDot<3>(op1_e3_l_42236,projParam228A);
    tensor[3] projParam228C#1 = tensor2266;
    real vdot228D#2 = VDot<3>(op1_e3_l_42236,projParam228C);
    tensor[3] op1_e3_l_172287#3 = <tensor[3]>[vdot2289,vdot228B,vdot228D];
    real op1_e3_l_342296#1 = VDot<3>(op1_e3_l_172287,op1_e3_l_172287);
    real r229A#1 = RMul(op1_e3_l_9223F,op1_e3_l_9223F);
    real op1_e3_l_352299#1 = RMul(r229A,op1_e3_l_342296);
    real op1_e3_l_36229E#1 = Sqrt(op1_e3_l_352299);
    tensor[3] op1_e3_l_3722A1#1 = VScale<3>(op1_e3_l_9223F,op1_e3_l_172287);
    real realLit22A5#1 = 0.1e1;
    real op1_e3_l_3822A4#2 = RDiv(realLit22A5,op1_e3_l_36229E);
    tensor[3] camU22A9#4 = VScale<3>(op1_e3_l_3822A4,op1_e3_l_3722A1);
    globals.camU219A = camU22A9;
    real realLit22AE#3 = 0.e0;
    real r22AF#3 = vdot2289;
    real r22B0#3 = RMul(realLit22AE,r22AF);
    real r22B1#3 = vdot228B;
    real r22B2#3 = RMul(realLit22AE,r22B1);
    real r22B3#3 = vdot228D;
    real r22B4#5 = RMul(realLit22AE,r22B3);
    real r22B5#3 = RAdd(r22B0,r22B2);
    real r22B6#3 = RAdd(r22B5,r22B4);
    real realLit22B7#3 = 0.1e1;
    real r22B8#1 = RMul(realLit22B7,r22B3);
    real r22B9#1 = RAdd(r22B5,r22B8);
    real realLit22BA#3 = -0.1e1;
    real r22BB#1 = RMul(realLit22BA,r22B1);
    real r22BC#1 = RAdd(r22B0,r22BB);
    real r22BD#1 = RAdd(r22BC,r22B4);
    tensor[3] tensor22BE#1 = <tensor[3]>[r22B6,r22B9,r22BD];
    real r22BF#1 = RMul(realLit22BA,r22B3);
    real r22C0#1 = RAdd(r22B5,r22BF);
    real r22C1#1 = RMul(realLit22B7,r22AF);
    real r22C2#1 = RAdd(r22C1,r22B2);
    real r22C3#1 = RAdd(r22C2,r22B4);
    tensor[3] tensor22C4#1 = <tensor[3]>[r22C0,r22B6,r22C3];
    real r22C5#1 = RMul(realLit22B7,r22B1);
    real r22C6#1 = RAdd(r22B0,r22C5);
    real r22C7#1 = RAdd(r22C6,r22B4);
    real r22C8#1 = RMul(realLit22BA,r22AF);
    real r22C9#1 = RAdd(r22C8,r22B2);
    real r22CA#1 = RAdd(r22C9,r22B4);
    tensor[3] tensor22CB#1 = <tensor[3]>[r22C7,r22CA,r22B6];
    tensor[3] projParam22ED#1 = tensor22BE;
    real vdot22EE#1 = VDot<3>(op1_e3_l_42236,projParam22ED);
    tensor[3] projParam22EF#1 = tensor22C4;
    real vdot22F0#1 = VDot<3>(op1_e3_l_42236,projParam22EF);
    tensor[3] projParam22F1#1 = tensor22CB;
    real vdot22F2#1 = VDot<3>(op1_e3_l_42236,projParam22F1);
    tensor[3] op1_e3_l_4722EC#1 = <tensor[3]>[vdot22EE,vdot22F0,vdot22F2];
    tensor[3] op1_e3_l_5022FB#3 = VScale<3>(op1_e3_l_9223F,op1_e3_l_4722EC);
    real r22FF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FB);
    real r2300#3 = RMul(op1_e3_l_9223F,op1_e3_l_3822A4);
    real r2301#2 = RMul(r2300,r22FF);
    real r2302#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FB);
    real r2303#2 = RMul(r2300,r2302);
    real r2304#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FB);
    real r2305#2 = RMul(r2300,r2304);
    tensor[3] camV22FE#1 = <tensor[3]>[r2301,r2303,r2305];
    globals.camV219B = camV22FE;
    globals.camDist219C = op1_e3_l_7223C;
    real _t2311#1 = 0.314159265358979323846264338327950288e1;
    real _t2313#1 = 0.36e3;
    real op1_e3_l_52315#1 = RMul(camFOV2206,_t2311);
    real op1_e3_l_62318#1 = RDiv(op1_e3_l_52315,_t2313);
    real op1_e3_l_10231B#2 = Tan(op1_e3_l_62318);
    real camVmax231E#1 = RMul(op1_e3_l_10231B,op1_e3_l_7223C);
    globals.camVmax219D = camVmax231E;
    real _t2322#1 = IntToReal(iresU2208);
    real _t2324#1 = IntToReal(iresV220A);
    real r2327#1 = RMul(_t2322,op1_e3_l_10231B);
    real op1_e3_l_142326#1 = RMul(r2327,op1_e3_l_7223C);
    real camUmax232B#1 = RDiv(op1_e3_l_142326,_t2324);
    globals.camUmax219E = camUmax232B;
    real camNearVsp232F#1 = RAdd(camNear2202,op1_e3_l_7223C);
    globals.camNearVsp219F = camNearVsp232F;
    real camFarVsp2333#1 = RAdd(camFar2204,op1_e3_l_7223C);
    globals.camFarVsp21A0 = camFarVsp2333;
    real op1_e3_l_32339#1 = VDot<3>(litdir220C,litdir220C);
    real op1_e3_l_4233C#1 = Sqrt(op1_e3_l_32339);
    real realLit2340#1 = 0.1e1;
    real op1_e3_l_5233F#1 = RDiv(realLit2340,op1_e3_l_4233C);
    real r2345#1 = VIndex<3,0>(camU22A9);
    real r2346#3 = TensorIndex<tensor[3],[0]>(litdir220C);
    real r2347#1 = RMul(r2345,r2346);
    real r2348#1 = r2301;
    real r2349#3 = TensorIndex<tensor[3],[1]>(litdir220C);
    real r234A#1 = RMul(r2348,r2349);
    real r234B#1 = VIndex<3,0>(camN2244);
    real r234C#3 = TensorIndex<tensor[3],[2]>(litdir220C);
    real r234D#1 = RMul(r234B,r234C);
    real r234E#1 = RAdd(r2347,r234A);
    real r234F#1 = RAdd(r234E,r234D);
    real r2350#1 = VIndex<3,1>(camU22A9);
    real r2351#1 = RMul(r2350,r2346);
    real r2352#1 = r2303;
    real r2353#1 = RMul(r2352,r2349);
    real r2354#1 = VIndex<3,1>(camN2244);
    real r2355#1 = RMul(r2354,r234C);
    real r2356#1 = RAdd(r2351,r2353);
    real r2357#1 = RAdd(r2356,r2355);
    real r2358#1 = VIndex<3,2>(camU22A9);
    real r2359#1 = RMul(r2358,r2346);
    real r235A#1 = r2305;
    real r235B#1 = RMul(r235A,r2349);
    real r235C#1 = VIndex<3,2>(camN2244);
    real r235D#1 = RMul(r235C,r234C);
    real r235E#1 = RAdd(r2359,r235B);
    real r235F#1 = RAdd(r235E,r235D);
    tensor[3] op1_e3_l_62344#1 = <tensor[3]>[r234F,r2357,r235F];
    tensor[3] litwsp237D#1 = VScale<3>(op1_e3_l_5233F,op1_e3_l_62344);
    globals.litwsp21A1 = litwsp237D;
    globals._t21A2 = _t2230;
    globals._tX21A3 = _t222E;
    globals._tXX21A4 = _t222C;
    return
## strand
  strand ray (int ui2387#1, int vi2388#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2399:  preds = []
        tensor[3] camEye239A#1 = globals.camEye2180;
        bool camOrtho239C#2 = globals.camOrtho2186;
        int iresU239E#1 = globals.iresU2187;
        int iresV23A0#1 = globals.iresV2188;
        real rayStep23A2#1 = globals.rayStep2189;
        real refStep23A4#1 = globals.refStep218A;
        tensor[4] phong23A6#4 = globals.phong2192;
        tensor[3] camN23A8#1 = globals.camN2199;
        tensor[3] camU23AA#1 = globals.camU219A;
        tensor[3] camV23AC#1 = globals.camV219B;
        real camDist23AE#1 = globals.camDist219C;
        real camVmax23B0#2 = globals.camVmax219D;
        real camUmax23B2#2 = globals.camUmax219E;
        real camNearVsp23B4#1 = globals.camNearVsp219F;
        real _t23B6#5 = -0.5e0;
        real _t23B8#1 = IntToReal(ui2387);
        real _t23BA#1 = IntToReal(iresU239E);
        real _t23BC#3 = 0.5e0;
        real op1_e3_l_623BE#1 = RSub(_t23BA,_t23BC);
        real op1_e3_l_723C1#1 = RSub(_t23B8,_t23B6);
        real op1_e3_l_823C4#1 = RSub(op1_e3_l_623BE,_t23B6);
        real op1_e3_l_923C7#2 = RNeg(camUmax23B2);
        real op1_e3_l_1023CA#1 = RDiv(op1_e3_l_723C1,op1_e3_l_823C4);
        real op1_e3_l_1123CD#1 = RSub(camUmax23B2,op1_e3_l_923C7);
        real op1_e3_l_1323D0#1 = RMul(op1_e3_l_1023CA,op1_e3_l_1123CD);
        real rayU23D3#2 = RAdd(op1_e3_l_923C7,op1_e3_l_1323D0);
        real _t23D6#1 = IntToReal(vi2388);
        real _t23D8#2 = IntToReal(iresV23A0);
        real op1_e3_l_623DA#1 = RSub(_t23D8,_t23BC);
        real op1_e3_l_723DD#2 = RSub(_t23D6,_t23B6);
        real op1_e3_l_823E0#1 = RSub(op1_e3_l_623DA,_t23B6);
        real op1_e3_l_923E3#3 = RNeg(camVmax23B0);
        real op1_e3_l_1023E6#1 = RDiv(op1_e3_l_723DD,op1_e3_l_823E0);
        real op1_e3_l_1123E9#2 = RSub(camVmax23B0,op1_e3_l_923E3);
        real op1_e3_l_1323EC#1 = RMul(op1_e3_l_1023E6,op1_e3_l_1123E9);
        real rayV23EF#1 = RAdd(op1_e3_l_923E3,op1_e3_l_1323EC);
        real op1_e3_l_2323F2#1 = RSub(_t23D8,_t23BC);
        real op1_e3_l_2523F5#1 = RSub(op1_e3_l_2323F2,_t23B6);
        real op1_e3_l_2723F8#1 = RDiv(op1_e3_l_723DD,op1_e3_l_2523F5);
        real op1_e3_l_3023FB#1 = RMul(op1_e3_l_2723F8,op1_e3_l_1123E9);
        real op1_e3_l_3123FE#1 = RAdd(op1_e3_l_923E3,op1_e3_l_3023FB);
        tensor[3] op1_e3_l_322401#1 = VScale<3>(rayU23D3,camU23AA);
        tensor[3] op1_e3_l_332404#1 = VScale<3>(op1_e3_l_3123FE,camV23AC);
        tensor[3] UV2407#5 = VAdd<3>(op1_e3_l_322401,op1_e3_l_332404);
        if camOrtho239C then goto JOIN240D else goto ASSIGN2467
      JOIN240D:  preds = [COND240A,ASSIGN2468]
        tensor[3] _t240B#1 = phi(UV2407,_t240C)
        tensor[3] rayOrig240E#1 = VAdd<3>(camEye239A,_t240B);
        if camOrtho239C then goto ASSIGN2413 else goto ASSIGN245D
      ASSIGN2413:  preds = [COND2411]
        real _t2412#3 = 0.e0;
        tensor[3] _t2414#1 = <tensor[3]>[_t2412,_t2412,_t2412];
        goto JOIN2418
      JOIN2418:  preds = [ASSIGN2415,ASSIGN2465]
        tensor[3] _t2416#1 = phi(_t2414,_t2417)
        tensor[3] rayVec2419#4 = VAdd<3>(camN23A8,_t2416);
        real op1_e3_l_6241C#1 = VDot<3>(rayVec2419,rayVec2419);
        real op1_e3_l_7241F#2 = Sqrt(op1_e3_l_6241C);
        real op1_e3_l_82422#1 = RMul(rayStep23A2,op1_e3_l_7241F);
        real alphaFix2425#1 = RDiv(op1_e3_l_82422,refStep23A4);
        real realLit2429#1 = 0.1e1;
        real op1_e3_l_92428#1 = RDiv(realLit2429,op1_e3_l_7241F);
        tensor[3] op1_e3_l_10242D#1 = VScale<3>(op1_e3_l_92428,rayVec2419);
        tensor[3] eyeDir2430#1 = VNeg<3>(op1_e3_l_10242D);
        real phKa2433#1 = VIndex<4,0>(phong23A6);
        real phKd2435#1 = VIndex<4,1>(phong23A6);
        real phKs2437#1 = VIndex<4,2>(phong23A6);
        real phSp2439#1 = VIndex<4,3>(phong23A6);
        real _t243B#8 = 0.e0;
        tensor[4] rgba243D#1 = <tensor[4]>[_t243B,_t243B,_t243B,_t243B];
        tensor[3] rgb243F#1 = <tensor[3]>[_t243B,_t243B,_t243B];
        real transp2441#1 = 0.1e1;
        self.rayU = rayU23D3;
        self.rayV = rayV23EF;
        self.rayN = camNearVsp23B4;
        self.UV = UV2407;
        self.rayOrig = rayOrig240E;
        self.rayVec = rayVec2419;
        self.alphaFix = alphaFix2425;
        self.eyeDir = eyeDir2430;
        self.phKa = phKa2433;
        self.phKd = phKd2435;
        self.phKs = phKs2437;
        self.phSp = phSp2439;
        self.rgba = rgba243D;
        self.raw = _t243B;
        self.rgb = rgb243F;
        self.transp = transp2441;
        return
      ASSIGN245D:  preds = [COND2411]
        real realLit2454#1 = 0.1e1;
        real r2455#3 = RDiv(realLit2454,camDist23AE);
        real r2456#1 = TensorIndex<tensor[3],[0]>(UV2407);
        real r2457#1 = RMul(r2455,r2456);
        real r2458#1 = TensorIndex<tensor[3],[1]>(UV2407);
        real r2459#1 = RMul(r2455,r2458);
        real r245A#1 = TensorIndex<tensor[3],[2]>(UV2407);
        real r245B#1 = RMul(r2455,r245A);
        tensor[3] _t2417#1 = <tensor[3]>[r2457,r2459,r245B];
        goto JOIN2418
      ASSIGN2467:  preds = [COND240A]
        real _t2466#3 = 0.e0;
        tensor[3] _t240C#1 = <tensor[3]>[_t2466,_t2466,_t2466];
        goto JOIN240D
    end state init
    method update
        ENTRY2469:  preds = []
          image(IMAGE1D<double[3]>) cmap246A#17 = globals.cmap217F;
          int _t246C#3 = globals._t21A2;
          femData:Space _t246E#252 = globals._tX21A3;
          femData:FemFunc _t2470#252 = globals._tXX21A4;
          image(IMAGE3D<float[]>) umm2472#130 = globals.umm2198;
          femData:Mesh block2478#1 = globals.block217B;
          real rayStep247A#1 = globals.rayStep2189;
          real transp0247C#1 = globals.transp0218B;
          real thick247E#1 = globals.thick218C;
          real fStrTh2480#1 = globals.fStrTh218D;
          real fMaskTh2482#1 = globals.fMaskTh218E;
          real fBias2484#1 = globals.fBias218F;
          real maxAlpha2486#2 = globals.maxAlpha2190;
          tensor[3] mcNear2488#2 = globals.mcNear2193;
          tensor[3] mcFar248A#1 = globals.mcFar2194;
          tensor[2] cminmax248C#2 = globals.cminmax2196;
          bool analytical248E#1 = globals.analytical2197;
          real camNearVsp2490#2 = globals.camNearVsp219F;
          real camFarVsp2492#2 = globals.camFarVsp21A0;
          tensor[3] litwsp2494#2 = globals.litwsp21A1;
          real rayN2496#1 = self.rayN;
          tensor[3] rayOrig2498#2 = self.rayOrig;
          tensor[3] rayVec249A#1 = self.rayVec;
          real alphaFix249C#1 = self.alphaFix;
          tensor[3] eyeDir249E#1 = self.eyeDir;
          real phKa24A0#1 = self.phKa;
          real phKd24A2#1 = self.phKd;
          real phKs24A4#2 = self.phKs;
          real phSp24A6#1 = self.phSp;
          tensor[3] rgb24A8#1 = self.rgb;
          real transp24AA#2 = self.transp;
          real rayN24AC#8 = RAdd(rayN2496,rayStep247A);
          bool _t24AF#1 = GT<real>(rayN24AC,camFarVsp2492);
          if _t24AF then goto SAVE24B2 else goto JOIN24B4
        SAVE24B2:  preds = [COND24B1]
          self.rayN = rayN24AC;
          stabilize
          goto JOIN24B4
        JOIN24B4:  preds = [*STABILIZE24B3,COND24B1]
          tensor[3] op1_e3_l_524B5#2 = VScale<3>(rayN24AC,rayVec249A);
          tensor[3] pos24B8#16 = VAdd<3>(rayOrig2498,op1_e3_l_524B5);
          femData:RefCell _t24BB#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2478);
          real _t24BD#1 = 0.1e-8;
          bool _t24BF#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BB,pos24B8,_t24BD);
          if _t24BF then goto ASSIGN25C2 else goto ASSIGN46AE
        ASSIGN25C2:  preds = [COND24C1]
          int ilit24C3#1 = 84;
          int mulRes24C4#84 = IMul(_t246C,ilit24C3);
          int addRes24C6#1 = mulRes24C4;
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24C6);
          int ilit24C8#1 = 1;
          int addRes24C9#1 = IAdd(mulRes24C4,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24C9);
          int ilit24CB#1 = 2;
          int addRes24CC#1 = IAdd(mulRes24C4,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CC);
          int ilit24CE#1 = 3;
          int addRes24CF#1 = IAdd(mulRes24C4,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CF);
          int ilit24D1#1 = 4;
          int addRes24D2#1 = IAdd(mulRes24C4,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D2);
          int ilit24D4#1 = 5;
          int addRes24D5#1 = IAdd(mulRes24C4,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D5);
          int ilit24D7#1 = 6;
          int addRes24D8#1 = IAdd(mulRes24C4,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D8);
          int ilit24DA#1 = 7;
          int addRes24DB#1 = IAdd(mulRes24C4,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DB);
          int ilit24DD#1 = 8;
          int addRes24DE#1 = IAdd(mulRes24C4,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DE);
          int ilit24E0#1 = 9;
          int addRes24E1#1 = IAdd(mulRes24C4,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E1);
          int ilit24E3#1 = 10;
          int addRes24E4#1 = IAdd(mulRes24C4,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E4);
          int ilit24E6#1 = 11;
          int addRes24E7#1 = IAdd(mulRes24C4,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E7);
          int ilit24E9#1 = 12;
          int addRes24EA#1 = IAdd(mulRes24C4,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24EA);
          int ilit24EC#1 = 13;
          int addRes24ED#1 = IAdd(mulRes24C4,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24ED);
          int ilit24EF#1 = 14;
          int addRes24F0#1 = IAdd(mulRes24C4,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F0);
          int ilit24F2#1 = 15;
          int addRes24F3#1 = IAdd(mulRes24C4,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F3);
          int ilit24F5#1 = 16;
          int addRes24F6#1 = IAdd(mulRes24C4,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F6);
          int ilit24F8#1 = 17;
          int addRes24F9#1 = IAdd(mulRes24C4,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F9);
          int ilit24FB#1 = 18;
          int addRes24FC#1 = IAdd(mulRes24C4,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FC);
          int ilit24FE#1 = 19;
          int addRes24FF#1 = IAdd(mulRes24C4,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FF);
          int ilit2501#1 = 20;
          int addRes2502#1 = IAdd(mulRes24C4,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2502);
          int ilit2504#1 = 21;
          int addRes2505#1 = IAdd(mulRes24C4,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2505);
          int ilit2507#1 = 22;
          int addRes2508#1 = IAdd(mulRes24C4,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2508);
          int ilit250A#1 = 23;
          int addRes250B#1 = IAdd(mulRes24C4,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250B);
          int ilit250D#1 = 24;
          int addRes250E#1 = IAdd(mulRes24C4,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250E);
          int ilit2510#1 = 25;
          int addRes2511#1 = IAdd(mulRes24C4,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2511);
          int ilit2513#1 = 26;
          int addRes2514#1 = IAdd(mulRes24C4,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2514);
          int ilit2516#1 = 27;
          int addRes2517#1 = IAdd(mulRes24C4,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2517);
          int ilit2519#1 = 28;
          int addRes251A#1 = IAdd(mulRes24C4,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251A);
          int ilit251C#1 = 29;
          int addRes251D#1 = IAdd(mulRes24C4,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251D);
          int ilit251F#1 = 30;
          int addRes2520#1 = IAdd(mulRes24C4,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2520);
          int ilit2522#1 = 31;
          int addRes2523#1 = IAdd(mulRes24C4,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2523);
          int ilit2525#1 = 32;
          int addRes2526#1 = IAdd(mulRes24C4,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2526);
          int ilit2528#1 = 33;
          int addRes2529#1 = IAdd(mulRes24C4,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2529);
          int ilit252B#1 = 34;
          int addRes252C#1 = IAdd(mulRes24C4,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252C);
          int ilit252E#1 = 35;
          int addRes252F#1 = IAdd(mulRes24C4,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252F);
          int ilit2531#1 = 36;
          int addRes2532#1 = IAdd(mulRes24C4,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2532);
          int ilit2534#1 = 37;
          int addRes2535#1 = IAdd(mulRes24C4,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2535);
          int ilit2537#1 = 38;
          int addRes2538#1 = IAdd(mulRes24C4,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2538);
          int ilit253A#1 = 39;
          int addRes253B#1 = IAdd(mulRes24C4,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253B);
          int ilit253D#1 = 40;
          int addRes253E#1 = IAdd(mulRes24C4,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253E);
          int ilit2540#1 = 41;
          int addRes2541#1 = IAdd(mulRes24C4,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2541);
          int ilit2543#1 = 42;
          int addRes2544#1 = IAdd(mulRes24C4,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2544);
          int ilit2546#1 = 43;
          int addRes2547#1 = IAdd(mulRes24C4,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2547);
          int ilit2549#1 = 44;
          int addRes254A#1 = IAdd(mulRes24C4,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254A);
          int ilit254C#1 = 45;
          int addRes254D#1 = IAdd(mulRes24C4,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254D);
          int ilit254F#1 = 46;
          int addRes2550#1 = IAdd(mulRes24C4,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2550);
          int ilit2552#1 = 47;
          int addRes2553#1 = IAdd(mulRes24C4,ilit2552);
          int idx2554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2553);
          int ilit2555#1 = 48;
          int addRes2556#1 = IAdd(mulRes24C4,ilit2555);
          int idx2557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2556);
          int ilit2558#1 = 49;
          int addRes2559#1 = IAdd(mulRes24C4,ilit2558);
          int idx255A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2559);
          int ilit255B#1 = 50;
          int addRes255C#1 = IAdd(mulRes24C4,ilit255B);
          int idx255D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255C);
          int ilit255E#1 = 51;
          int addRes255F#1 = IAdd(mulRes24C4,ilit255E);
          int idx2560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255F);
          int ilit2561#1 = 52;
          int addRes2562#1 = IAdd(mulRes24C4,ilit2561);
          int idx2563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2562);
          int ilit2564#1 = 53;
          int addRes2565#1 = IAdd(mulRes24C4,ilit2564);
          int idx2566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2565);
          int ilit2567#1 = 54;
          int addRes2568#1 = IAdd(mulRes24C4,ilit2567);
          int idx2569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2568);
          int ilit256A#1 = 55;
          int addRes256B#1 = IAdd(mulRes24C4,ilit256A);
          int idx256C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256B);
          int ilit256D#1 = 56;
          int addRes256E#1 = IAdd(mulRes24C4,ilit256D);
          int idx256F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256E);
          int ilit2570#1 = 57;
          int addRes2571#1 = IAdd(mulRes24C4,ilit2570);
          int idx2572#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2571);
          int ilit2573#1 = 58;
          int addRes2574#1 = IAdd(mulRes24C4,ilit2573);
          int idx2575#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2574);
          int ilit2576#1 = 59;
          int addRes2577#1 = IAdd(mulRes24C4,ilit2576);
          int idx2578#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2577);
          int ilit2579#1 = 60;
          int addRes257A#1 = IAdd(mulRes24C4,ilit2579);
          int idx257B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257A);
          int ilit257C#1 = 61;
          int addRes257D#1 = IAdd(mulRes24C4,ilit257C);
          int idx257E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257D);
          int ilit257F#1 = 62;
          int addRes2580#1 = IAdd(mulRes24C4,ilit257F);
          int idx2581#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2580);
          int ilit2582#1 = 63;
          int addRes2583#1 = IAdd(mulRes24C4,ilit2582);
          int idx2584#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2583);
          int ilit2585#1 = 64;
          int addRes2586#1 = IAdd(mulRes24C4,ilit2585);
          int idx2587#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2586);
          int ilit2588#1 = 65;
          int addRes2589#1 = IAdd(mulRes24C4,ilit2588);
          int idx258A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2589);
          int ilit258B#1 = 66;
          int addRes258C#1 = IAdd(mulRes24C4,ilit258B);
          int idx258D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258C);
          int ilit258E#1 = 67;
          int addRes258F#1 = IAdd(mulRes24C4,ilit258E);
          int idx2590#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258F);
          int ilit2591#1 = 68;
          int addRes2592#1 = IAdd(mulRes24C4,ilit2591);
          int idx2593#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2592);
          int ilit2594#1 = 69;
          int addRes2595#1 = IAdd(mulRes24C4,ilit2594);
          int idx2596#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2595);
          int ilit2597#1 = 70;
          int addRes2598#1 = IAdd(mulRes24C4,ilit2597);
          int idx2599#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2598);
          int ilit259A#1 = 71;
          int addRes259B#1 = IAdd(mulRes24C4,ilit259A);
          int idx259C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259B);
          int ilit259D#1 = 72;
          int addRes259E#1 = IAdd(mulRes24C4,ilit259D);
          int idx259F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259E);
          int ilit25A0#1 = 73;
          int addRes25A1#1 = IAdd(mulRes24C4,ilit25A0);
          int idx25A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A1);
          int ilit25A3#1 = 74;
          int addRes25A4#1 = IAdd(mulRes24C4,ilit25A3);
          int idx25A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A4);
          int ilit25A6#1 = 75;
          int addRes25A7#1 = IAdd(mulRes24C4,ilit25A6);
          int idx25A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A7);
          int ilit25A9#1 = 76;
          int addRes25AA#1 = IAdd(mulRes24C4,ilit25A9);
          int idx25AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AA);
          int ilit25AC#1 = 77;
          int addRes25AD#1 = IAdd(mulRes24C4,ilit25AC);
          int idx25AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AD);
          int ilit25AF#1 = 78;
          int addRes25B0#1 = IAdd(mulRes24C4,ilit25AF);
          int idx25B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B0);
          int ilit25B2#1 = 79;
          int addRes25B3#1 = IAdd(mulRes24C4,ilit25B2);
          int idx25B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B3);
          int ilit25B5#1 = 80;
          int addRes25B6#1 = IAdd(mulRes24C4,ilit25B5);
          int idx25B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B6);
          int ilit25B8#1 = 81;
          int addRes25B9#1 = IAdd(mulRes24C4,ilit25B8);
          int idx25BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B9);
          int ilit25BB#1 = 82;
          int addRes25BC#1 = IAdd(mulRes24C4,ilit25BB);
          int idx25BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BC);
          int ilit25BE#1 = 83;
          int addRes25BF#1 = IAdd(mulRes24C4,ilit25BE);
          int idx25C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BF);
          int ilit26C3#84 = 1;
          int idx26C5#1 = idx24C7;
          int mulRes26C6#1 = IMul(ilit26C3,idx26C5);
          int idx26C7#1 = idx24CA;
          int mulRes26C8#1 = IMul(ilit26C3,idx26C7);
          int idx26CA#1 = idx24CD;
          int mulRes26CB#1 = IMul(ilit26C3,idx26CA);
          int idx26CD#1 = idx24D0;
          int mulRes26CE#1 = IMul(ilit26C3,idx26CD);
          int idx26D0#1 = idx24D3;
          int mulRes26D1#1 = IMul(ilit26C3,idx26D0);
          int idx26D3#1 = idx24D6;
          int mulRes26D4#1 = IMul(ilit26C3,idx26D3);
          int idx26D6#1 = idx24D9;
          int mulRes26D7#1 = IMul(ilit26C3,idx26D6);
          int idx26D9#1 = idx24DC;
          int mulRes26DA#1 = IMul(ilit26C3,idx26D9);
          int idx26DC#1 = idx24DF;
          int mulRes26DD#1 = IMul(ilit26C3,idx26DC);
          int idx26DF#1 = idx24E2;
          int mulRes26E0#1 = IMul(ilit26C3,idx26DF);
          int idx26E2#1 = idx24E5;
          int mulRes26E3#1 = IMul(ilit26C3,idx26E2);
          int idx26E5#1 = idx24E8;
          int mulRes26E6#1 = IMul(ilit26C3,idx26E5);
          int idx26E8#1 = idx24EB;
          int mulRes26E9#1 = IMul(ilit26C3,idx26E8);
          int idx26EB#1 = idx24EE;
          int mulRes26EC#1 = IMul(ilit26C3,idx26EB);
          int idx26EE#1 = idx24F1;
          int mulRes26EF#1 = IMul(ilit26C3,idx26EE);
          int idx26F1#1 = idx24F4;
          int mulRes26F2#1 = IMul(ilit26C3,idx26F1);
          int idx26F4#1 = idx24F7;
          int mulRes26F5#1 = IMul(ilit26C3,idx26F4);
          int idx26F7#1 = idx24FA;
          int mulRes26F8#1 = IMul(ilit26C3,idx26F7);
          int idx26FA#1 = idx24FD;
          int mulRes26FB#1 = IMul(ilit26C3,idx26FA);
          int idx26FD#1 = idx2500;
          int mulRes26FE#1 = IMul(ilit26C3,idx26FD);
          int idx2700#1 = idx2503;
          int mulRes2701#1 = IMul(ilit26C3,idx2700);
          int idx2703#1 = idx2506;
          int mulRes2704#1 = IMul(ilit26C3,idx2703);
          int idx2706#1 = idx2509;
          int mulRes2707#1 = IMul(ilit26C3,idx2706);
          int idx2709#1 = idx250C;
          int mulRes270A#1 = IMul(ilit26C3,idx2709);
          int idx270C#1 = idx250F;
          int mulRes270D#1 = IMul(ilit26C3,idx270C);
          int idx270F#1 = idx2512;
          int mulRes2710#1 = IMul(ilit26C3,idx270F);
          int idx2712#1 = idx2515;
          int mulRes2713#1 = IMul(ilit26C3,idx2712);
          int idx2715#1 = idx2518;
          int mulRes2716#1 = IMul(ilit26C3,idx2715);
          int idx2718#1 = idx251B;
          int mulRes2719#1 = IMul(ilit26C3,idx2718);
          int idx271B#1 = idx251E;
          int mulRes271C#1 = IMul(ilit26C3,idx271B);
          int idx271E#1 = idx2521;
          int mulRes271F#1 = IMul(ilit26C3,idx271E);
          int idx2721#1 = idx2524;
          int mulRes2722#1 = IMul(ilit26C3,idx2721);
          int idx2724#1 = idx2527;
          int mulRes2725#1 = IMul(ilit26C3,idx2724);
          int idx2727#1 = idx252A;
          int mulRes2728#1 = IMul(ilit26C3,idx2727);
          int idx272A#1 = idx252D;
          int mulRes272B#1 = IMul(ilit26C3,idx272A);
          int idx272D#1 = idx2530;
          int mulRes272E#1 = IMul(ilit26C3,idx272D);
          int idx2730#1 = idx2533;
          int mulRes2731#1 = IMul(ilit26C3,idx2730);
          int idx2733#1 = idx2536;
          int mulRes2734#1 = IMul(ilit26C3,idx2733);
          int idx2736#1 = idx2539;
          int mulRes2737#1 = IMul(ilit26C3,idx2736);
          int idx2739#1 = idx253C;
          int mulRes273A#1 = IMul(ilit26C3,idx2739);
          int idx273C#1 = idx253F;
          int mulRes273D#1 = IMul(ilit26C3,idx273C);
          int idx273F#1 = idx2542;
          int mulRes2740#1 = IMul(ilit26C3,idx273F);
          int idx2742#1 = idx2545;
          int mulRes2743#1 = IMul(ilit26C3,idx2742);
          int idx2745#1 = idx2548;
          int mulRes2746#1 = IMul(ilit26C3,idx2745);
          int idx2748#1 = idx254B;
          int mulRes2749#1 = IMul(ilit26C3,idx2748);
          int idx274B#1 = idx254E;
          int mulRes274C#1 = IMul(ilit26C3,idx274B);
          int idx274E#1 = idx2551;
          int mulRes274F#1 = IMul(ilit26C3,idx274E);
          int idx2751#1 = idx2554;
          int mulRes2752#1 = IMul(ilit26C3,idx2751);
          int idx2754#1 = idx2557;
          int mulRes2755#1 = IMul(ilit26C3,idx2754);
          int idx2757#1 = idx255A;
          int mulRes2758#1 = IMul(ilit26C3,idx2757);
          int idx275A#1 = idx255D;
          int mulRes275B#1 = IMul(ilit26C3,idx275A);
          int idx275D#1 = idx2560;
          int mulRes275E#1 = IMul(ilit26C3,idx275D);
          int idx2760#1 = idx2563;
          int mulRes2761#1 = IMul(ilit26C3,idx2760);
          int idx2763#1 = idx2566;
          int mulRes2764#1 = IMul(ilit26C3,idx2763);
          int idx2766#1 = idx2569;
          int mulRes2767#1 = IMul(ilit26C3,idx2766);
          int idx2769#1 = idx256C;
          int mulRes276A#1 = IMul(ilit26C3,idx2769);
          int idx276C#1 = idx256F;
          int mulRes276D#1 = IMul(ilit26C3,idx276C);
          int idx276F#1 = idx2572;
          int mulRes2770#1 = IMul(ilit26C3,idx276F);
          int idx2772#1 = idx2575;
          int mulRes2773#1 = IMul(ilit26C3,idx2772);
          int idx2775#1 = idx2578;
          int mulRes2776#1 = IMul(ilit26C3,idx2775);
          int idx2778#1 = idx257B;
          int mulRes2779#1 = IMul(ilit26C3,idx2778);
          int idx277B#1 = idx257E;
          int mulRes277C#1 = IMul(ilit26C3,idx277B);
          int idx277E#1 = idx2581;
          int mulRes277F#1 = IMul(ilit26C3,idx277E);
          int idx2781#1 = idx2584;
          int mulRes2782#1 = IMul(ilit26C3,idx2781);
          int idx2784#1 = idx2587;
          int mulRes2785#1 = IMul(ilit26C3,idx2784);
          int idx2787#1 = idx258A;
          int mulRes2788#1 = IMul(ilit26C3,idx2787);
          int idx278A#1 = idx258D;
          int mulRes278B#1 = IMul(ilit26C3,idx278A);
          int idx278D#1 = idx2590;
          int mulRes278E#1 = IMul(ilit26C3,idx278D);
          int idx2790#1 = idx2593;
          int mulRes2791#1 = IMul(ilit26C3,idx2790);
          int idx2793#1 = idx2596;
          int mulRes2794#1 = IMul(ilit26C3,idx2793);
          int idx2796#1 = idx2599;
          int mulRes2797#1 = IMul(ilit26C3,idx2796);
          int idx2799#1 = idx259C;
          int mulRes279A#1 = IMul(ilit26C3,idx2799);
          int idx279C#1 = idx259F;
          int mulRes279D#1 = IMul(ilit26C3,idx279C);
          int idx279F#1 = idx25A2;
          int mulRes27A0#1 = IMul(ilit26C3,idx279F);
          int idx27A2#1 = idx25A5;
          int mulRes27A3#1 = IMul(ilit26C3,idx27A2);
          int idx27A5#1 = idx25A8;
          int mulRes27A6#1 = IMul(ilit26C3,idx27A5);
          int idx27A8#1 = idx25AB;
          int mulRes27A9#1 = IMul(ilit26C3,idx27A8);
          int idx27AB#1 = idx25AE;
          int mulRes27AC#1 = IMul(ilit26C3,idx27AB);
          int idx27AE#1 = idx25B1;
          int mulRes27AF#1 = IMul(ilit26C3,idx27AE);
          int idx27B1#1 = idx25B4;
          int mulRes27B2#1 = IMul(ilit26C3,idx27B1);
          int idx27B4#1 = idx25B7;
          int mulRes27B5#1 = IMul(ilit26C3,idx27B4);
          int idx27B7#1 = idx25BA;
          int mulRes27B8#1 = IMul(ilit26C3,idx27B7);
          int idx27BA#1 = idx25BD;
          int mulRes27BB#1 = IMul(ilit26C3,idx27BA);
          int idx27BD#1 = idx25C0;
          int mulRes27BE#1 = IMul(ilit26C3,idx27BD);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C6);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C8);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CB);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CE);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D1);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D4);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D7);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DA);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DD);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E0);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E3);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E6);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E9);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EC);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EF);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F2);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F5);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F8);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FB);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FE);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2701);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2704);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2707);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270A);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270D);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2710);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2713);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2716);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2719);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271C);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271F);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2722);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2725);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2728);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272B);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272E);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2731);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2734);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2737);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273A);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273D);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2740);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2743);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2746);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2749);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274C);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274F);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2752);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2755);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2758);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275B);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275E);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2761);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2764);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2767);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276A);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276D);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2770);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2773);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2776);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2779);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277C);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277F);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2782);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2785);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2788);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278B);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278E);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2791);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2794);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2797);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279A);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279D);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A0);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A3);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A6);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A9);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AC);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AF);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B2);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B5);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B8);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BB);
          real dof2812#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BE);
          tensor[84] dofs2813#1 = <tensor[84]>[dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811,dof2812];
          tensor[84] femDofs26C2#12 = dofs2813;
          real varAcc2967#4 = VIndex<3,0>(pos24B8);
          real varAcc2968#4 = VIndex<3,1>(pos24B8);
          real varAcc2969#4 = VIndex<3,2>(pos24B8);
          real basisEval296A#294 = 0.e0;
          real coeff296B#31 = 0.2e1;
          real one296C#38 = 0.1e1;
          real prod296D#5 = RMul(one296C,one296C);
          real prod296E#2 = RMul(one296C,prod296D);
          real basisEval296F#3 = RMul(coeff296B,prod296E);
          real iden2970#5 = varAcc2969;
          real prod2971#4 = RMul(one296C,iden2970);
          real prod2972#3 = RMul(one296C,prod2971);
          real basisEval2973#4 = RMul(coeff296B,prod2972);
          real iden2974#5 = varAcc2968;
          real prod2975#4 = RMul(iden2974,one296C);
          real prod2976#3 = RMul(one296C,prod2975);
          real basisEval2977#4 = RMul(coeff296B,prod2976);
          real coeff2978#22 = 0.6e1;
          real iden2979#11 = varAcc2967;
          real prod297A#3 = RMul(iden2979,prod296D);
          real basisEval297B#1 = RMul(coeff2978,prod297A);
          real prod2297C#4 = RMul(iden2970,varAcc2969);
          real prod297D#3 = RMul(one296C,prod2297C);
          real prod297E#4 = RMul(one296C,prod297D);
          real basisEval297F#2 = RMul(coeff296B,prod297E);
          real prod2980#3 = RMul(iden2974,iden2970);
          real prod2981#3 = RMul(one296C,prod2980);
          real basisEval2982#3 = RMul(coeff296B,prod2981);
          real prod22983#4 = RMul(iden2974,varAcc2968);
          real prod2984#3 = RMul(prod22983,one296C);
          real prod2985#4 = RMul(one296C,prod2984);
          real basisEval2986#2 = RMul(coeff296B,prod2985);
          real prod2987#3 = RMul(iden2979,prod2971);
          real basisEval2988#2 = RMul(coeff2978,prod2987);
          real prod2989#3 = RMul(iden2979,prod2975);
          real basisEval298A#2 = RMul(coeff2978,prod2989);
          real coeff298B#15 = 0.12e2;
          real prod2298C#7 = RMul(iden2979,varAcc2967);
          real prod298D#4 = RMul(prod2298C,prod296D);
          real basisEval298E#1 = RMul(coeff298B,prod298D);
          real prod3298F#3 = RMul(prod2297C,varAcc2969);
          real prod2990#2 = RMul(one296C,prod3298F);
          real prod2991#4 = RMul(one296C,prod2990);
          real basisEval2992#2 = RMul(coeff296B,prod2991);
          real prod2993#2 = RMul(iden2974,prod2297C);
          real prod2994#4 = RMul(one296C,prod2993);
          real basisEval2995#2 = RMul(coeff296B,prod2994);
          real prod2996#2 = RMul(prod22983,iden2970);
          real prod2997#4 = RMul(one296C,prod2996);
          real basisEval2998#2 = RMul(coeff296B,prod2997);
          real prod32999#3 = RMul(prod22983,varAcc2968);
          real prod299A#2 = RMul(prod32999,one296C);
          real prod299B#4 = RMul(one296C,prod299A);
          real basisEval299C#2 = RMul(coeff296B,prod299B);
          real prod299D#4 = RMul(iden2979,prod297D);
          real basisEval299E#2 = RMul(coeff2978,prod299D);
          real prod299F#2 = RMul(iden2979,prod2980);
          real basisEval29A0#3 = RMul(coeff2978,prod299F);
          real prod29A1#4 = RMul(iden2979,prod2984);
          real basisEval29A2#2 = RMul(coeff2978,prod29A1);
          real prod29A3#4 = RMul(prod2298C,prod2971);
          real basisEval29A4#1 = RMul(coeff298B,prod29A3);
          real prod29A5#4 = RMul(prod2298C,prod2975);
          real basisEval29A6#1 = RMul(coeff298B,prod29A5);
          real coeff29A7#9 = 0.20e2;
          real prod329A8#4 = RMul(prod2298C,varAcc2967);
          real prod29A9#4 = RMul(prod329A8,prod296D);
          real basisEval29AA#1 = RMul(coeff29A7,prod29A9);
          real prod429AB#1 = RMul(prod3298F,varAcc2969);
          real prod29AC#1 = RMul(one296C,prod429AB);
          real prod29AD#4 = RMul(one296C,prod29AC);
          real basisEval29AE#2 = RMul(coeff296B,prod29AD);
          real prod29AF#1 = RMul(iden2974,prod3298F);
          real prod29B0#5 = RMul(one296C,prod29AF);
          real basisEval29B1#2 = RMul(coeff296B,prod29B0);
          real prod29B2#1 = RMul(prod22983,prod2297C);
          real prod29B3#4 = RMul(one296C,prod29B2);
          real basisEval29B4#1 = RMul(coeff296B,prod29B3);
          real prod29B5#1 = RMul(prod32999,iden2970);
          real prod29B6#5 = RMul(one296C,prod29B5);
          real basisEval29B7#2 = RMul(coeff296B,prod29B6);
          real prod429B8#1 = RMul(prod32999,varAcc2968);
          real prod29B9#1 = RMul(prod429B8,one296C);
          real prod29BA#4 = RMul(one296C,prod29B9);
          real basisEval29BB#2 = RMul(coeff296B,prod29BA);
          real prod29BC#5 = RMul(iden2979,prod2990);
          real basisEval29BD#1 = RMul(coeff2978,prod29BC);
          real prod29BE#3 = RMul(iden2979,prod2993);
          real basisEval29BF#4 = RMul(coeff2978,prod29BE);
          real prod29C0#3 = RMul(iden2979,prod2996);
          real basisEval29C1#4 = RMul(coeff2978,prod29C0);
          real prod29C2#5 = RMul(iden2979,prod299A);
          real basisEval29C3#1 = RMul(coeff2978,prod29C2);
          real prod29C4#4 = RMul(prod2298C,prod297D);
          real basisEval29C5#2 = RMul(coeff298B,prod29C4);
          real prod29C6#3 = RMul(prod2298C,prod2980);
          real basisEval29C7#1 = RMul(coeff298B,prod29C6);
          real prod29C8#4 = RMul(prod2298C,prod2984);
          real basisEval29C9#2 = RMul(coeff298B,prod29C8);
          real prod29CA#5 = RMul(prod329A8,prod2971);
          real basisEval29CB#1 = RMul(coeff29A7,prod29CA);
          real prod29CC#5 = RMul(prod329A8,prod2975);
          real basisEval29CD#1 = RMul(coeff29A7,prod29CC);
          real coeff29CE#3 = 0.30e2;
          real prod429CF#1 = RMul(prod329A8,varAcc2967);
          real prod29D0#4 = RMul(prod429CF,prod296D);
          real basisEval29D1#1 = RMul(coeff29CE,prod29D0);
          real basisEval29D2#3 = RMul(one296C,prod296E);
          real basisEval29D3#1 = RMul(one296C,prod2972);
          real basisEval29D4#4 = RMul(coeff296B,prod297A);
          real basisEval29D5#1 = RMul(one296C,prod297E);
          real coeff29D6#12 = 0.3e1;
          real basisEval29D7#2 = RMul(coeff29D6,prod2985);
          real basisEval29D8#3 = RMul(coeff296B,prod2987);
          real coeff29D9#16 = 0.4e1;
          real basisEval29DA#1 = RMul(coeff29D9,prod2989);
          real basisEval29DB#2 = RMul(coeff29D6,prod298D);
          real basisEval29DC#1 = RMul(one296C,prod2991);
          real basisEval29DD#1 = RMul(coeff29D6,prod2997);
          real basisEval29DE#2 = RMul(coeff29D9,prod299B);
          real basisEval29DF#2 = RMul(coeff296B,prod299D);
          real basisEval29E0#3 = RMul(coeff29D9,prod299F);
          real basisEval29E1#1 = RMul(coeff29D6,prod29A3);
          real basisEval29E2#2 = RMul(coeff2978,prod29A5);
          real basisEval29E3#2 = RMul(coeff29D9,prod29A9);
          real basisEval29E4#1 = RMul(one296C,prod29AD);
          real basisEval29E5#2 = RMul(coeff29D6,prod29B3);
          real basisEval29E6#1 = RMul(coeff29D9,prod29B6);
          real coeff29E7#3 = 0.5e1;
          real basisEval29E8#2 = RMul(coeff29E7,prod29BA);
          real basisEval29E9#2 = RMul(coeff296B,prod29BC);
          real basisEval29EA#1 = RMul(coeff29D9,prod29BE);
          real coeff29EB#6 = 0.8e1;
          real basisEval29EC#1 = RMul(coeff29EB,prod29C2);
          real basisEval29ED#2 = RMul(coeff29D6,prod29C4);
          real basisEval29EE#4 = RMul(coeff2978,prod29C6);
          real coeff29EF#3 = 0.9e1;
          real basisEval29F0#1 = RMul(coeff29EF,prod29C8);
          real basisEval29F1#1 = RMul(coeff29D9,prod29CA);
          real basisEval29F2#1 = RMul(coeff29EB,prod29CC);
          real basisEval29F3#2 = RMul(coeff29E7,prod29D0);
          real basisEval29F4#1 = RMul(one296C,prod2976);
          real basisEval29F5#2 = RMul(coeff29D6,prod297E);
          real basisEval29F6#1 = RMul(one296C,prod2985);
          real basisEval29F7#1 = RMul(coeff29D9,prod2987);
          real basisEval29F8#3 = RMul(coeff296B,prod2989);
          real basisEval29F9#2 = RMul(coeff29D9,prod2991);
          real basisEval29FA#1 = RMul(coeff29D6,prod2994);
          real basisEval29FB#1 = RMul(one296C,prod299B);
          real basisEval29FC#2 = RMul(coeff296B,prod29A1);
          real basisEval29FD#2 = RMul(coeff2978,prod29A3);
          real basisEval29FE#1 = RMul(coeff29D6,prod29A5);
          real basisEval29FF#2 = RMul(coeff29E7,prod29AD);
          real basisEval2A00#1 = RMul(coeff29D9,prod29B0);
          real basisEval2A01#1 = RMul(one296C,prod29BA);
          real basisEval2A02#1 = RMul(coeff29EB,prod29BC);
          real basisEval2A03#1 = RMul(coeff29D9,prod29C0);
          real basisEval2A04#2 = RMul(coeff296B,prod29C2);
          real basisEval2A05#1 = RMul(coeff29EF,prod29C4);
          real basisEval2A06#2 = RMul(coeff29D6,prod29C8);
          real basisEval2A07#1 = RMul(coeff29EB,prod29CA);
          real basisEval2A08#1 = RMul(coeff29D9,prod29CC);
          real basisEval2A09#1 = RMul(coeff2978,prod2976);
          real basisEval2A0A#2 = RMul(coeff2978,prod2981);
          real basisEval2A0B#1 = RMul(coeff298B,prod2985);
          real basisEval2A0C#2 = RMul(coeff296B,prod298D);
          real basisEval2A0D#2 = RMul(coeff2978,prod2994);
          real basisEval2A0E#1 = RMul(coeff298B,prod2997);
          real basisEval2A0F#1 = RMul(coeff29A7,prod299B);
          real basisEval2A10#1 = RMul(coeff298B,prod29A1);
          real basisEval2A11#2 = RMul(coeff296B,prod29A3);
          real basisEval2A12#2 = RMul(coeff296B,prod29A9);
          real basisEval2A13#1 = RMul(coeff2978,prod29B0);
          real basisEval2A14#2 = RMul(coeff298B,prod29B3);
          real basisEval2A15#1 = RMul(coeff29A7,prod29B6);
          real basisEval2A16#1 = RMul(coeff29CE,prod29BA);
          real basisEval2A17#1 = RMul(coeff298B,prod29C0);
          real basisEval2A18#1 = RMul(coeff29A7,prod29C2);
          real basisEval2A19#1 = RMul(coeff296B,prod29C4);
          real basisEval2A1A#2 = RMul(coeff296B,prod29CA);
          real basisEval2A1B#1 = RMul(coeff2978,prod29CC);
          real basisEval2A1C#2 = RMul(coeff296B,prod29D0);
          real basisEval2A1D#1 = RMul(one296C,prod297A);
          real basisEval2A1E#1 = RMul(coeff29D9,prod2981);
          real basisEval2A1F#1 = RMul(one296C,prod298D);
          real basisEval2A20#2 = RMul(coeff2978,prod2997);
          real basisEval2A21#1 = RMul(coeff29D6,prod299D);
          real basisEval2A22#1 = RMul(coeff29D6,prod29A1);
          real basisEval2A23#2 = RMul(coeff296B,prod29A5);
          real basisEval2A24#1 = RMul(one296C,prod29A9);
          real basisEval2A25#1 = RMul(coeff29EB,prod29B0);
          real basisEval2A26#1 = RMul(coeff29EF,prod29B3);
          real basisEval2A27#1 = RMul(coeff29EB,prod29B6);
          real basisEval2A28#1 = RMul(coeff29D9,prod29BC);
          real basisEval2A29#1 = RMul(coeff29D9,prod29C2);
          real basisEval2A2A#1 = RMul(coeff29D9,prod29C6);
          real basisEval2A2B#2 = RMul(coeff296B,prod29CC);
          real basisEval2A2C#1 = RMul(one296C,prod29D0);
          real basisEval2A2D#1 = RMul(coeff2978,prod2972);
          real basisEval2A2E#1 = RMul(coeff298B,prod297E);
          real basisEval2A2F#1 = RMul(coeff29A7,prod2991);
          real basisEval2A30#1 = RMul(coeff298B,prod2994);
          real basisEval2A31#1 = RMul(coeff298B,prod299D);
          real basisEval2A32#1 = RMul(coeff29CE,prod29AD);
          real basisEval2A33#1 = RMul(coeff29A7,prod29B0);
          real basisEval2A34#1 = RMul(coeff2978,prod29B6);
          real basisEval2A35#1 = RMul(coeff29A7,prod29BC);
          real basisEval2A36#1 = RMul(coeff298B,prod29BE);
          real basisEval2A37#1 = RMul(coeff296B,prod29C8);
          real basisEval2A38#1 = RMul(coeff2978,prod29CA);
          tensor[84] intermediateCons2A39#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval297B,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2982,basisEval2986,basisEval2988,basisEval298A,basisEval298E,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2995,basisEval2998,basisEval299C,basisEval299E,basisEval29A0,basisEval29A2,basisEval29A4,basisEval29A6,basisEval29AA,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval29B1,basisEval29B4,basisEval29B7,basisEval29BB,basisEval29BD,basisEval29BF,basisEval29C1,basisEval29C3,basisEval29C5,basisEval29C7,basisEval29C9,basisEval29CB,basisEval29CD,basisEval29D1];
          tensor[84] intermediateCons2A3A#2 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D3,basisEval2977,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D5,basisEval2982,basisEval29D7,basisEval296A,basisEval29D8,basisEval29DA,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29DC,basisEval2995,basisEval29DD,basisEval29DE,basisEval296A,basisEval29DF,basisEval29E0,basisEval29A2,basisEval296A,basisEval29E1,basisEval29E2,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29E4,basisEval29B1,basisEval29E5,basisEval29E6,basisEval29E8,basisEval296A,basisEval29E9,basisEval29EA,basisEval29C1,basisEval29EC,basisEval296A,basisEval29ED,basisEval29EE,basisEval29F0,basisEval296A,basisEval29F1,basisEval29F2,basisEval296A,basisEval29F3,basisEval296A];
          tensor[84] intermediateCons2A3B#2 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval29F4,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2982,basisEval29F6,basisEval296A,basisEval29F7,basisEval29F8,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval29FA,basisEval2998,basisEval29FB,basisEval296A,basisEval299E,basisEval29E0,basisEval29FC,basisEval296A,basisEval29FD,basisEval29FE,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A00,basisEval29E5,basisEval29B7,basisEval2A01,basisEval296A,basisEval2A02,basisEval29BF,basisEval2A03,basisEval2A04,basisEval296A,basisEval2A05,basisEval29EE,basisEval2A06,basisEval296A,basisEval2A07,basisEval2A08,basisEval296A,basisEval29F3,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3C#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2A09,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2A0A,basisEval2A0B,basisEval296A,basisEval296A,basisEval29D8,basisEval298A,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2A0D,basisEval2A0E,basisEval2A0F,basisEval296A,basisEval296A,basisEval29DF,basisEval29A0,basisEval2A10,basisEval296A,basisEval296A,basisEval2A11,basisEval29E2,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2A16,basisEval296A,basisEval296A,basisEval29E9,basisEval29BF,basisEval2A17,basisEval2A18,basisEval296A,basisEval296A,basisEval2A19,basisEval29EE,basisEval29C9,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A1B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3D#2 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval296A,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2A1E,basisEval29D7,basisEval296A,basisEval296A,basisEval29D8,basisEval29F8,basisEval296A,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval2A0D,basisEval2A20,basisEval29DE,basisEval296A,basisEval296A,basisEval2A21,basisEval29E0,basisEval2A22,basisEval296A,basisEval296A,basisEval2A11,basisEval2A23,basisEval296A,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A25,basisEval2A26,basisEval2A27,basisEval29E8,basisEval296A,basisEval296A,basisEval2A28,basisEval29BF,basisEval29C1,basisEval2A29,basisEval296A,basisEval296A,basisEval29ED,basisEval2A2A,basisEval2A06,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3E#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2D,basisEval2977,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2E,basisEval2A0A,basisEval2986,basisEval296A,basisEval296A,basisEval2988,basisEval29F8,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2F,basisEval2A30,basisEval2A20,basisEval299C,basisEval296A,basisEval296A,basisEval2A31,basisEval29A0,basisEval29FC,basisEval296A,basisEval296A,basisEval29FD,basisEval2A23,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A32,basisEval2A33,basisEval2A14,basisEval2A34,basisEval29BB,basisEval296A,basisEval296A,basisEval2A35,basisEval2A36,basisEval29C1,basisEval2A04,basisEval296A,basisEval296A,basisEval29C5,basisEval29EE,basisEval2A37,basisEval296A,basisEval296A,basisEval2A38,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] projParam2B21#1 = intermediateCons2A39;
          real vdot2B22#1 = VDot<84>(femDofs26C2,projParam2B21);
          tensor[84] projParam2B23#1 = intermediateCons2A3A;
          real vdot2B24#1 = VDot<84>(femDofs26C2,projParam2B23);
          tensor[84] projParam2B25#1 = intermediateCons2A3B;
          real vdot2B26#1 = VDot<84>(femDofs26C2,projParam2B25);
          tensor[3] tensor2B27#1 = <tensor[3]>[vdot2B22,vdot2B24,vdot2B26];
          tensor[84] projParam2B28#1 = intermediateCons2A3A;
          real vdot2B29#1 = VDot<84>(femDofs26C2,projParam2B28);
          tensor[84] projParam2B2A#1 = intermediateCons2A3C;
          real vdot2B2B#1 = VDot<84>(femDofs26C2,projParam2B2A);
          tensor[84] projParam2B2C#1 = intermediateCons2A3D;
          real vdot2B2D#1 = VDot<84>(femDofs26C2,projParam2B2C);
          tensor[3] tensor2B2E#1 = <tensor[3]>[vdot2B29,vdot2B2B,vdot2B2D];
          tensor[84] projParam2B2F#1 = intermediateCons2A3B;
          real vdot2B30#1 = VDot<84>(femDofs26C2,projParam2B2F);
          tensor[84] projParam2B31#1 = intermediateCons2A3D;
          real vdot2B32#1 = VDot<84>(femDofs26C2,projParam2B31);
          tensor[84] projParam2B33#1 = intermediateCons2A3E;
          real vdot2B34#1 = VDot<84>(femDofs26C2,projParam2B33);
          tensor[3] tensor2B35#1 = <tensor[3]>[vdot2B30,vdot2B32,vdot2B34];
          tensor[3,3] _t2B20#1 = <tensor[3,3]>[tensor2B27,tensor2B2E,tensor2B35];
          real[3] _t2B4D#1 = EigenVals3x3(_t2B20);
          int _t2B4F#1 = 1;
          real _t2B51#1 = Subscript<real[3]>(_t2B4D,_t2B4F);
          real varAcc2B54#5 = VIndex<3,0>(pos24B8);
          real varAcc2B55#5 = VIndex<3,1>(pos24B8);
          real varAcc2B56#5 = VIndex<3,2>(pos24B8);
          real basisEval2B57#84 = 0.e0;
          real coeff2B58#79 = 0.1e1;
          real prod2B59#6 = RMul(coeff2B58,coeff2B58);
          real prod2B5A#1 = RMul(coeff2B58,prod2B59);
          real basisEval2B5B#3 = RMul(coeff2B58,prod2B5A);
          real iden2B5C#6 = varAcc2B56;
          real prod2B5D#5 = RMul(coeff2B58,iden2B5C);
          real prod2B5E#2 = RMul(coeff2B58,prod2B5D);
          real basisEval2B5F#2 = RMul(coeff2B58,prod2B5E);
          real iden2B60#6 = varAcc2B55;
          real prod2B61#5 = RMul(iden2B60,coeff2B58);
          real prod2B62#2 = RMul(coeff2B58,prod2B61);
          real basisEval2B63#2 = RMul(coeff2B58,prod2B62);
          real coeff2B64#34 = 0.2e1;
          real iden2B65#16 = varAcc2B54;
          real prod2B66#2 = RMul(iden2B65,prod2B59);
          real basisEval2B67#1 = RMul(coeff2B64,prod2B66);
          real prod22B68#5 = RMul(iden2B5C,varAcc2B56);
          real prod2B69#4 = RMul(coeff2B58,prod22B68);
          real prod2B6A#2 = RMul(coeff2B58,prod2B69);
          real basisEval2B6B#2 = RMul(coeff2B58,prod2B6A);
          real prod2B6C#4 = RMul(iden2B60,iden2B5C);
          real prod2B6D#2 = RMul(coeff2B58,prod2B6C);
          real basisEval2B6E#1 = RMul(coeff2B58,prod2B6D);
          real prod22B6F#5 = RMul(iden2B60,varAcc2B55);
          real prod2B70#4 = RMul(prod22B6F,coeff2B58);
          real prod2B71#2 = RMul(coeff2B58,prod2B70);
          real basisEval2B72#2 = RMul(coeff2B58,prod2B71);
          real prod2B73#2 = RMul(iden2B65,prod2B5D);
          real basisEval2B74#2 = RMul(coeff2B64,prod2B73);
          real prod2B75#2 = RMul(iden2B65,prod2B61);
          real basisEval2B76#2 = RMul(coeff2B64,prod2B75);
          real coeff2B77#24 = 0.3e1;
          real prod22B78#11 = RMul(iden2B65,varAcc2B54);
          real prod2B79#2 = RMul(prod22B78,prod2B59);
          real basisEval2B7A#1 = RMul(coeff2B77,prod2B79);
          real prod32B7B#4 = RMul(prod22B68,varAcc2B56);
          real prod2B7C#3 = RMul(coeff2B58,prod32B7B);
          real prod2B7D#2 = RMul(coeff2B58,prod2B7C);
          real basisEval2B7E#2 = RMul(coeff2B58,prod2B7D);
          real prod2B7F#3 = RMul(iden2B60,prod22B68);
          real prod2B80#3 = RMul(coeff2B58,prod2B7F);
          real basisEval2B81#1 = RMul(coeff2B58,prod2B80);
          real prod2B82#3 = RMul(prod22B6F,iden2B5C);
          real prod2B83#3 = RMul(coeff2B58,prod2B82);
          real basisEval2B84#1 = RMul(coeff2B58,prod2B83);
          real prod32B85#4 = RMul(prod22B6F,varAcc2B55);
          real prod2B86#3 = RMul(prod32B85,coeff2B58);
          real prod2B87#2 = RMul(coeff2B58,prod2B86);
          real basisEval2B88#2 = RMul(coeff2B58,prod2B87);
          real prod2B89#3 = RMul(iden2B65,prod2B69);
          real basisEval2B8A#1 = RMul(coeff2B64,prod2B89);
          real prod2B8B#1 = RMul(iden2B65,prod2B6C);
          real basisEval2B8C#3 = RMul(coeff2B64,prod2B8B);
          real prod2B8D#3 = RMul(iden2B65,prod2B70);
          real basisEval2B8E#1 = RMul(coeff2B64,prod2B8D);
          real prod2B8F#3 = RMul(prod22B78,prod2B5D);
          real basisEval2B90#1 = RMul(coeff2B77,prod2B8F);
          real prod2B91#3 = RMul(prod22B78,prod2B61);
          real basisEval2B92#1 = RMul(coeff2B77,prod2B91);
          real coeff2B93#18 = 0.4e1;
          real prod32B94#7 = RMul(prod22B78,varAcc2B54);
          real prod2B95#2 = RMul(prod32B94,prod2B59);
          real basisEval2B96#1 = RMul(coeff2B93,prod2B95);
          real prod42B97#3 = RMul(prod32B7B,varAcc2B56);
          real prod2B98#2 = RMul(coeff2B58,prod42B97);
          real prod2B99#2 = RMul(coeff2B58,prod2B98);
          real basisEval2B9A#2 = RMul(coeff2B58,prod2B99);
          real prod2B9B#2 = RMul(iden2B60,prod32B7B);
          real prod2B9C#3 = RMul(coeff2B58,prod2B9B);
          real basisEval2B9D#1 = RMul(coeff2B58,prod2B9C);
          real prod2B9E#2 = RMul(prod22B6F,prod22B68);
          real prod2B9F#2 = RMul(coeff2B58,prod2B9E);
          real basisEval2BA0#1 = RMul(coeff2B58,prod2B9F);
          real prod2BA1#2 = RMul(prod32B85,iden2B5C);
          real prod2BA2#3 = RMul(coeff2B58,prod2BA1);
          real basisEval2BA3#1 = RMul(coeff2B58,prod2BA2);
          real prod42BA4#3 = RMul(prod32B85,varAcc2B55);
          real prod2BA5#2 = RMul(prod42BA4,coeff2B58);
          real prod2BA6#2 = RMul(coeff2B58,prod2BA5);
          real basisEval2BA7#2 = RMul(coeff2B58,prod2BA6);
          real prod2BA8#3 = RMul(iden2B65,prod2B7C);
          real basisEval2BA9#1 = RMul(coeff2B64,prod2BA8);
          real prod2BAA#2 = RMul(iden2B65,prod2B7F);
          real basisEval2BAB#2 = RMul(coeff2B64,prod2BAA);
          real prod2BAC#2 = RMul(iden2B65,prod2B82);
          real basisEval2BAD#2 = RMul(coeff2B64,prod2BAC);
          real prod2BAE#3 = RMul(iden2B65,prod2B86);
          real basisEval2BAF#1 = RMul(coeff2B64,prod2BAE);
          real prod2BB0#2 = RMul(prod22B78,prod2B69);
          real basisEval2BB1#2 = RMul(coeff2B77,prod2BB0);
          real prod2BB2#2 = RMul(prod22B78,prod2B6C);
          real basisEval2BB3#1 = RMul(coeff2B77,prod2BB2);
          real prod2BB4#2 = RMul(prod22B78,prod2B70);
          real basisEval2BB5#2 = RMul(coeff2B77,prod2BB4);
          real prod2BB6#3 = RMul(prod32B94,prod2B5D);
          real basisEval2BB7#1 = RMul(coeff2B93,prod2BB6);
          real prod2BB8#3 = RMul(prod32B94,prod2B61);
          real basisEval2BB9#1 = RMul(coeff2B93,prod2BB8);
          real coeff2BBA#9 = 0.5e1;
          real prod42BBB#4 = RMul(prod32B94,varAcc2B54);
          real prod2BBC#2 = RMul(prod42BBB,prod2B59);
          real basisEval2BBD#1 = RMul(coeff2BBA,prod2BBC);
          real prod52BBE#1 = RMul(prod42B97,varAcc2B56);
          real prod2BBF#1 = RMul(coeff2B58,prod52BBE);
          real prod2BC0#2 = RMul(coeff2B58,prod2BBF);
          real basisEval2BC1#2 = RMul(coeff2B58,prod2BC0);
          real prod2BC2#1 = RMul(iden2B60,prod42B97);
          real prod2BC3#3 = RMul(coeff2B58,prod2BC2);
          real basisEval2BC4#1 = RMul(coeff2B58,prod2BC3);
          real prod2BC5#1 = RMul(prod22B6F,prod32B7B);
          real prod2BC6#3 = RMul(coeff2B58,prod2BC5);
          real basisEval2BC7#1 = RMul(coeff2B58,prod2BC6);
          real prod2BC8#1 = RMul(prod32B85,prod22B68);
          real prod2BC9#3 = RMul(coeff2B58,prod2BC8);
          real basisEval2BCA#1 = RMul(coeff2B58,prod2BC9);
          real prod2BCB#1 = RMul(prod42BA4,iden2B5C);
          real prod2BCC#3 = RMul(coeff2B58,prod2BCB);
          real basisEval2BCD#1 = RMul(coeff2B58,prod2BCC);
          real prod52BCE#1 = RMul(prod42BA4,varAcc2B55);
          real prod2BCF#1 = RMul(prod52BCE,coeff2B58);
          real prod2BD0#2 = RMul(coeff2B58,prod2BCF);
          real basisEval2BD1#2 = RMul(coeff2B58,prod2BD0);
          real prod2BD2#3 = RMul(iden2B65,prod2B98);
          real basisEval2BD3#1 = RMul(coeff2B64,prod2BD2);
          real prod2BD4#2 = RMul(iden2B65,prod2B9B);
          real basisEval2BD5#2 = RMul(coeff2B64,prod2BD4);
          real prod2BD6#2 = RMul(iden2B65,prod2B9E);
          real basisEval2BD7#1 = RMul(coeff2B64,prod2BD6);
          real prod2BD8#2 = RMul(iden2B65,prod2BA1);
          real basisEval2BD9#2 = RMul(coeff2B64,prod2BD8);
          real prod2BDA#3 = RMul(iden2B65,prod2BA5);
          real basisEval2BDB#1 = RMul(coeff2B64,prod2BDA);
          real prod2BDC#3 = RMul(prod22B78,prod2B7C);
          real basisEval2BDD#1 = RMul(coeff2B77,prod2BDC);
          real prod2BDE#2 = RMul(prod22B78,prod2B7F);
          real basisEval2BDF#2 = RMul(coeff2B77,prod2BDE);
          real prod2BE0#2 = RMul(prod22B78,prod2B82);
          real basisEval2BE1#2 = RMul(coeff2B77,prod2BE0);
          real prod2BE2#3 = RMul(prod22B78,prod2B86);
          real basisEval2BE3#1 = RMul(coeff2B77,prod2BE2);
          real prod2BE4#3 = RMul(prod32B94,prod2B69);
          real basisEval2BE5#1 = RMul(coeff2B93,prod2BE4);
          real prod2BE6#2 = RMul(prod32B94,prod2B6C);
          real basisEval2BE7#1 = RMul(coeff2B93,prod2BE6);
          real prod2BE8#3 = RMul(prod32B94,prod2B70);
          real basisEval2BE9#1 = RMul(coeff2B93,prod2BE8);
          real prod2BEA#3 = RMul(prod42BBB,prod2B5D);
          real basisEval2BEB#1 = RMul(coeff2BBA,prod2BEA);
          real prod2BEC#3 = RMul(prod42BBB,prod2B61);
          real basisEval2BED#1 = RMul(coeff2BBA,prod2BEC);
          real coeff2BEE#3 = 0.6e1;
          real prod52BEF#1 = RMul(prod42BBB,varAcc2B54);
          real prod2BF0#2 = RMul(prod52BEF,prod2B59);
          real basisEval2BF1#1 = RMul(coeff2BEE,prod2BF0);
          real basisEval2BF2#1 = RMul(coeff2B64,prod2B62);
          real basisEval2BF3#2 = RMul(coeff2B58,prod2B66);
          real basisEval2BF4#2 = RMul(coeff2B64,prod2B6D);
          real basisEval2BF5#1 = RMul(coeff2B77,prod2B71);
          real basisEval2BF6#1 = RMul(coeff2B58,prod2B73);
          real basisEval2BF7#2 = RMul(coeff2B58,prod2B79);
          real basisEval2BF8#1 = RMul(coeff2B64,prod2B80);
          real basisEval2BF9#1 = RMul(coeff2B77,prod2B83);
          real basisEval2BFA#1 = RMul(coeff2B93,prod2B87);
          real basisEval2BFB#1 = RMul(coeff2B58,prod2B89);
          real basisEval2BFC#1 = RMul(coeff2B77,prod2B8D);
          real basisEval2BFD#1 = RMul(coeff2B58,prod2B8F);
          real basisEval2BFE#1 = RMul(coeff2B64,prod2B91);
          real basisEval2BFF#2 = RMul(coeff2B58,prod2B95);
          real basisEval2C00#1 = RMul(coeff2B64,prod2B9C);
          real basisEval2C01#2 = RMul(coeff2B77,prod2B9F);
          real basisEval2C02#1 = RMul(coeff2B93,prod2BA2);
          real basisEval2C03#1 = RMul(coeff2BBA,prod2BA6);
          real basisEval2C04#1 = RMul(coeff2B58,prod2BA8);
          real basisEval2C05#1 = RMul(coeff2B77,prod2BAC);
          real basisEval2C06#1 = RMul(coeff2B93,prod2BAE);
          real basisEval2C07#1 = RMul(coeff2B58,prod2BB0);
          real basisEval2C08#2 = RMul(coeff2B64,prod2BB2);
          real basisEval2C09#1 = RMul(coeff2B58,prod2BB6);
          real basisEval2C0A#1 = RMul(coeff2B64,prod2BB8);
          real basisEval2C0B#2 = RMul(coeff2B58,prod2BBC);
          real basisEval2C0C#1 = RMul(coeff2B64,prod2BC3);
          real basisEval2C0D#1 = RMul(coeff2B77,prod2BC6);
          real basisEval2C0E#1 = RMul(coeff2B93,prod2BC9);
          real basisEval2C0F#1 = RMul(coeff2BBA,prod2BCC);
          real basisEval2C10#1 = RMul(coeff2BEE,prod2BD0);
          real basisEval2C11#1 = RMul(coeff2B58,prod2BD2);
          real basisEval2C12#2 = RMul(coeff2B77,prod2BD6);
          real basisEval2C13#1 = RMul(coeff2B93,prod2BD8);
          real basisEval2C14#1 = RMul(coeff2BBA,prod2BDA);
          real basisEval2C15#1 = RMul(coeff2B58,prod2BDC);
          real basisEval2C16#1 = RMul(coeff2B64,prod2BDE);
          real basisEval2C17#1 = RMul(coeff2B93,prod2BE2);
          real basisEval2C18#1 = RMul(coeff2B58,prod2BE4);
          real basisEval2C19#2 = RMul(coeff2B64,prod2BE6);
          real basisEval2C1A#1 = RMul(coeff2B77,prod2BE8);
          real basisEval2C1B#1 = RMul(coeff2B58,prod2BEA);
          real basisEval2C1C#1 = RMul(coeff2B64,prod2BEC);
          real basisEval2C1D#2 = RMul(coeff2B58,prod2BF0);
          real basisEval2C1E#1 = RMul(coeff2B64,prod2B5E);
          real basisEval2C1F#1 = RMul(coeff2B77,prod2B6A);
          real basisEval2C20#1 = RMul(coeff2B58,prod2B75);
          real basisEval2C21#1 = RMul(coeff2B93,prod2B7D);
          real basisEval2C22#1 = RMul(coeff2B77,prod2B80);
          real basisEval2C23#1 = RMul(coeff2B64,prod2B83);
          real basisEval2C24#1 = RMul(coeff2B77,prod2B89);
          real basisEval2C25#1 = RMul(coeff2B58,prod2B8D);
          real basisEval2C26#1 = RMul(coeff2B64,prod2B8F);
          real basisEval2C27#1 = RMul(coeff2B58,prod2B91);
          real basisEval2C28#1 = RMul(coeff2BBA,prod2B99);
          real basisEval2C29#1 = RMul(coeff2B93,prod2B9C);
          real basisEval2C2A#1 = RMul(coeff2B64,prod2BA2);
          real basisEval2C2B#1 = RMul(coeff2B93,prod2BA8);
          real basisEval2C2C#1 = RMul(coeff2B77,prod2BAA);
          real basisEval2C2D#1 = RMul(coeff2B58,prod2BAE);
          real basisEval2C2E#1 = RMul(coeff2B58,prod2BB4);
          real basisEval2C2F#1 = RMul(coeff2B64,prod2BB6);
          real basisEval2C30#1 = RMul(coeff2B58,prod2BB8);
          real basisEval2C31#1 = RMul(coeff2BEE,prod2BC0);
          real basisEval2C32#1 = RMul(coeff2BBA,prod2BC3);
          real basisEval2C33#1 = RMul(coeff2B93,prod2BC6);
          real basisEval2C34#1 = RMul(coeff2B77,prod2BC9);
          real basisEval2C35#1 = RMul(coeff2B64,prod2BCC);
          real basisEval2C36#1 = RMul(coeff2BBA,prod2BD2);
          real basisEval2C37#1 = RMul(coeff2B93,prod2BD4);
          real basisEval2C38#1 = RMul(coeff2B58,prod2BDA);
          real basisEval2C39#1 = RMul(coeff2B93,prod2BDC);
          real basisEval2C3A#1 = RMul(coeff2B64,prod2BE0);
          real basisEval2C3B#1 = RMul(coeff2B58,prod2BE2);
          real basisEval2C3C#1 = RMul(coeff2B77,prod2BE4);
          real basisEval2C3D#1 = RMul(coeff2B58,prod2BE8);
          real basisEval2C3E#1 = RMul(coeff2B64,prod2BEA);
          real basisEval2C3F#1 = RMul(coeff2B58,prod2BEC);
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B5B,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B5F,basisEval2B63,basisEval2B67,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B6B,basisEval2B6E,basisEval2B72,basisEval2B74,basisEval2B76,basisEval2B7A,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B7E,basisEval2B81,basisEval2B84,basisEval2B88,basisEval2B8A,basisEval2B8C,basisEval2B8E,basisEval2B90,basisEval2B92,basisEval2B96,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B9A,basisEval2B9D,basisEval2BA0,basisEval2BA3,basisEval2BA7,basisEval2BA9,basisEval2BAB,basisEval2BAD,basisEval2BAF,basisEval2BB1,basisEval2BB3,basisEval2BB5,basisEval2BB7,basisEval2BB9,basisEval2BBD,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2B57,basisEval2BC1,basisEval2BC4,basisEval2BC7,basisEval2BCA,basisEval2BCD,basisEval2BD1,basisEval2BD3,basisEval2BD5,basisEval2BD7,basisEval2BD9,basisEval2BDB,basisEval2BDD,basisEval2BDF,basisEval2BE1,basisEval2BE3,basisEval2BE5,basisEval2BE7,basisEval2BE9,basisEval2BEB,basisEval2BED,basisEval2BF1];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval2B57,basisEval2B57,basisEval2B5B,basisEval2B57,basisEval2B57,basisEval2B5F,basisEval2BF2,basisEval2B57,basisEval2BF3,basisEval2B57,basisEval2B57,basisEval2B6B,basisEval2BF4,basisEval2BF5,basisEval2B57,basisEval2BF6,basisEval2B76,basisEval2B57,basisEval2BF7,basisEval2B57,basisEval2B57,basisEval2B7E,basisEval2BF8,basisEval2BF9,basisEval2BFA,basisEval2B57,basisEval2BFB,basisEval2B8C,basisEval2BFC,basisEval2B57,basisEval2BFD,basisEval2BFE,basisEval2B57,basisEval2BFF,basisEval2B57,basisEval2B57,basisEval2B9A,basisEval2C00,basisEval2C01,basisEval2C02,basisEval2C03,basisEval2B57,basisEval2C04,basisEval2BAB,basisEval2C05,basisEval2C06,basisEval2B57,basisEval2C07,basisEval2C08,basisEval2BB5,basisEval2B57,basisEval2C09,basisEval2C0A,basisEval2B57,basisEval2C0B,basisEval2B57,basisEval2B57,basisEval2BC1,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2C10,basisEval2B57,basisEval2C11,basisEval2BD5,basisEval2C12,basisEval2C13,basisEval2C14,basisEval2B57,basisEval2C15,basisEval2C16,basisEval2BE1,basisEval2C17,basisEval2B57,basisEval2C18,basisEval2C19,basisEval2C1A,basisEval2B57,basisEval2C1B,basisEval2C1C,basisEval2B57,basisEval2C1D,basisEval2B57];
          tensor[84] intermediateCons2C42#1 = <tensor[84]>[basisEval2B57,basisEval2B5B,basisEval2B57,basisEval2B57,basisEval2C1E,basisEval2B63,basisEval2B57,basisEval2BF3,basisEval2B57,basisEval2B57,basisEval2C1F,basisEval2BF4,basisEval2B72,basisEval2B57,basisEval2B74,basisEval2C20,basisEval2B57,basisEval2BF7,basisEval2B57,basisEval2B57,basisEval2C21,basisEval2C22,basisEval2C23,basisEval2B88,basisEval2B57,basisEval2C24,basisEval2B8C,basisEval2C25,basisEval2B57,basisEval2C26,basisEval2C27,basisEval2B57,basisEval2BFF,basisEval2B57,basisEval2B57,basisEval2C28,basisEval2C29,basisEval2C01,basisEval2C2A,basisEval2BA7,basisEval2B57,basisEval2C2B,basisEval2C2C,basisEval2BAD,basisEval2C2D,basisEval2B57,basisEval2BB1,basisEval2C08,basisEval2C2E,basisEval2B57,basisEval2C2F,basisEval2C30,basisEval2B57,basisEval2C0B,basisEval2B57,basisEval2B57,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2C35,basisEval2BD1,basisEval2B57,basisEval2C36,basisEval2C37,basisEval2C12,basisEval2BD9,basisEval2C38,basisEval2B57,basisEval2C39,basisEval2BDF,basisEval2C3A,basisEval2C3B,basisEval2B57,basisEval2C3C,basisEval2C19,basisEval2C3D,basisEval2B57,basisEval2C3E,basisEval2C3F,basisEval2B57,basisEval2C1D,basisEval2B57,basisEval2B57];
          tensor[84] projParam2D36#1 = intermediateCons2C40;
          real vdot2D37#1 = VDot<84>(femDofs26C2,projParam2D36);
          tensor[84] projParam2D38#1 = intermediateCons2C41;
          real vdot2D39#1 = VDot<84>(femDofs26C2,projParam2D38);
          tensor[84] projParam2D3A#1 = intermediateCons2C42;
          real vdot2D3B#1 = VDot<84>(femDofs26C2,projParam2D3A);
          tensor[3] probe_l_62D35#2 = <tensor[3]>[vdot2D37,vdot2D39,vdot2D3B];
          real op1_e3_l_82D44#1 = VDot<3>(probe_l_62D35,probe_l_62D35);
          real op1_e3_l_92D47#1 = Sqrt(op1_e3_l_82D44);
          real op1_e3_l_102D4A#1 = RNeg(_t2B51);
          real op1_e3_l_112D4D#1 = RAdd(fBias2484,op1_e3_l_92D47);
          real _t2D50#1 = RDiv(op1_e3_l_102D4A,op1_e3_l_112D4D);
          bool _t2D53#1 = GT<real>(_t2D50,fStrTh2480);
          if _t2D53 then goto ASSIGN2D57 else goto ASSIGN46AD
        ASSIGN2D57:  preds = [COND2D55]
          real _t2D56#1 = 0.1e1;
          bool _t2D58#1 = GTE<real>(_t2D56,fMaskTh2482);
          if _t2D58 then goto ASSIGN2D5C else goto ASSIGN46AC
        ASSIGN2D5C:  preds = [COND2D5A]
          bool _t2D5B#1 = true;
          goto JOIN2D5F
        JOIN2D5F:  preds = [ASSIGN2D5C,ASSIGN46AC]
          bool _t2D5D#1 = phi(_t2D5B,_t2D5E)
          goto JOIN2D62
        JOIN2D62:  preds = [JOIN2D5F,ASSIGN46AD]
          bool _t2D60#1 = phi(_t2D5D,_t2D61)
          goto JOIN2D65
        JOIN2D65:  preds = [JOIN2D62,ASSIGN46AE]
          bool _t2D63#1 = phi(_t2D60,_t2D64)
          bool _t2D66#1 = BNot(_t2D63);
          if _t2D66 then goto SAVE2D69 else goto JOIN2D6B
        SAVE2D69:  preds = [COND2D68]
          self.rayN = rayN24AC;
          active
          goto JOIN2D6B
        JOIN2D6B:  preds = [*ACTIVE2D6A,COND2D68]
          bool _t2D6C#1 = BNot(analytical248E);
          if _t2D6C then goto ASSIGN2E6F else goto ASSIGN3EA1
        ASSIGN2E6F:  preds = [COND2D6E]
          int ilit2D70#1 = 84;
          int mulRes2D71#84 = IMul(_t246C,ilit2D70);
          int addRes2D73#1 = mulRes2D71;
          int idx2D74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D73);
          int ilit2D75#1 = 1;
          int addRes2D76#1 = IAdd(mulRes2D71,ilit2D75);
          int idx2D77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D76);
          int ilit2D78#1 = 2;
          int addRes2D79#1 = IAdd(mulRes2D71,ilit2D78);
          int idx2D7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D79);
          int ilit2D7B#1 = 3;
          int addRes2D7C#1 = IAdd(mulRes2D71,ilit2D7B);
          int idx2D7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7C);
          int ilit2D7E#1 = 4;
          int addRes2D7F#1 = IAdd(mulRes2D71,ilit2D7E);
          int idx2D80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7F);
          int ilit2D81#1 = 5;
          int addRes2D82#1 = IAdd(mulRes2D71,ilit2D81);
          int idx2D83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D82);
          int ilit2D84#1 = 6;
          int addRes2D85#1 = IAdd(mulRes2D71,ilit2D84);
          int idx2D86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D85);
          int ilit2D87#1 = 7;
          int addRes2D88#1 = IAdd(mulRes2D71,ilit2D87);
          int idx2D89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D88);
          int ilit2D8A#1 = 8;
          int addRes2D8B#1 = IAdd(mulRes2D71,ilit2D8A);
          int idx2D8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8B);
          int ilit2D8D#1 = 9;
          int addRes2D8E#1 = IAdd(mulRes2D71,ilit2D8D);
          int idx2D8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8E);
          int ilit2D90#1 = 10;
          int addRes2D91#1 = IAdd(mulRes2D71,ilit2D90);
          int idx2D92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D91);
          int ilit2D93#1 = 11;
          int addRes2D94#1 = IAdd(mulRes2D71,ilit2D93);
          int idx2D95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D94);
          int ilit2D96#1 = 12;
          int addRes2D97#1 = IAdd(mulRes2D71,ilit2D96);
          int idx2D98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D97);
          int ilit2D99#1 = 13;
          int addRes2D9A#1 = IAdd(mulRes2D71,ilit2D99);
          int idx2D9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9A);
          int ilit2D9C#1 = 14;
          int addRes2D9D#1 = IAdd(mulRes2D71,ilit2D9C);
          int idx2D9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9D);
          int ilit2D9F#1 = 15;
          int addRes2DA0#1 = IAdd(mulRes2D71,ilit2D9F);
          int idx2DA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA0);
          int ilit2DA2#1 = 16;
          int addRes2DA3#1 = IAdd(mulRes2D71,ilit2DA2);
          int idx2DA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA3);
          int ilit2DA5#1 = 17;
          int addRes2DA6#1 = IAdd(mulRes2D71,ilit2DA5);
          int idx2DA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA6);
          int ilit2DA8#1 = 18;
          int addRes2DA9#1 = IAdd(mulRes2D71,ilit2DA8);
          int idx2DAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA9);
          int ilit2DAB#1 = 19;
          int addRes2DAC#1 = IAdd(mulRes2D71,ilit2DAB);
          int idx2DAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAC);
          int ilit2DAE#1 = 20;
          int addRes2DAF#1 = IAdd(mulRes2D71,ilit2DAE);
          int idx2DB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAF);
          int ilit2DB1#1 = 21;
          int addRes2DB2#1 = IAdd(mulRes2D71,ilit2DB1);
          int idx2DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB2);
          int ilit2DB4#1 = 22;
          int addRes2DB5#1 = IAdd(mulRes2D71,ilit2DB4);
          int idx2DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB5);
          int ilit2DB7#1 = 23;
          int addRes2DB8#1 = IAdd(mulRes2D71,ilit2DB7);
          int idx2DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB8);
          int ilit2DBA#1 = 24;
          int addRes2DBB#1 = IAdd(mulRes2D71,ilit2DBA);
          int idx2DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBB);
          int ilit2DBD#1 = 25;
          int addRes2DBE#1 = IAdd(mulRes2D71,ilit2DBD);
          int idx2DBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBE);
          int ilit2DC0#1 = 26;
          int addRes2DC1#1 = IAdd(mulRes2D71,ilit2DC0);
          int idx2DC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC1);
          int ilit2DC3#1 = 27;
          int addRes2DC4#1 = IAdd(mulRes2D71,ilit2DC3);
          int idx2DC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC4);
          int ilit2DC6#1 = 28;
          int addRes2DC7#1 = IAdd(mulRes2D71,ilit2DC6);
          int idx2DC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC7);
          int ilit2DC9#1 = 29;
          int addRes2DCA#1 = IAdd(mulRes2D71,ilit2DC9);
          int idx2DCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCA);
          int ilit2DCC#1 = 30;
          int addRes2DCD#1 = IAdd(mulRes2D71,ilit2DCC);
          int idx2DCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCD);
          int ilit2DCF#1 = 31;
          int addRes2DD0#1 = IAdd(mulRes2D71,ilit2DCF);
          int idx2DD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD0);
          int ilit2DD2#1 = 32;
          int addRes2DD3#1 = IAdd(mulRes2D71,ilit2DD2);
          int idx2DD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD3);
          int ilit2DD5#1 = 33;
          int addRes2DD6#1 = IAdd(mulRes2D71,ilit2DD5);
          int idx2DD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD6);
          int ilit2DD8#1 = 34;
          int addRes2DD9#1 = IAdd(mulRes2D71,ilit2DD8);
          int idx2DDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD9);
          int ilit2DDB#1 = 35;
          int addRes2DDC#1 = IAdd(mulRes2D71,ilit2DDB);
          int idx2DDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDC);
          int ilit2DDE#1 = 36;
          int addRes2DDF#1 = IAdd(mulRes2D71,ilit2DDE);
          int idx2DE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDF);
          int ilit2DE1#1 = 37;
          int addRes2DE2#1 = IAdd(mulRes2D71,ilit2DE1);
          int idx2DE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE2);
          int ilit2DE4#1 = 38;
          int addRes2DE5#1 = IAdd(mulRes2D71,ilit2DE4);
          int idx2DE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE5);
          int ilit2DE7#1 = 39;
          int addRes2DE8#1 = IAdd(mulRes2D71,ilit2DE7);
          int idx2DE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE8);
          int ilit2DEA#1 = 40;
          int addRes2DEB#1 = IAdd(mulRes2D71,ilit2DEA);
          int idx2DEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEB);
          int ilit2DED#1 = 41;
          int addRes2DEE#1 = IAdd(mulRes2D71,ilit2DED);
          int idx2DEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEE);
          int ilit2DF0#1 = 42;
          int addRes2DF1#1 = IAdd(mulRes2D71,ilit2DF0);
          int idx2DF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF1);
          int ilit2DF3#1 = 43;
          int addRes2DF4#1 = IAdd(mulRes2D71,ilit2DF3);
          int idx2DF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF4);
          int ilit2DF6#1 = 44;
          int addRes2DF7#1 = IAdd(mulRes2D71,ilit2DF6);
          int idx2DF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF7);
          int ilit2DF9#1 = 45;
          int addRes2DFA#1 = IAdd(mulRes2D71,ilit2DF9);
          int idx2DFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFA);
          int ilit2DFC#1 = 46;
          int addRes2DFD#1 = IAdd(mulRes2D71,ilit2DFC);
          int idx2DFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFD);
          int ilit2DFF#1 = 47;
          int addRes2E00#1 = IAdd(mulRes2D71,ilit2DFF);
          int idx2E01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E00);
          int ilit2E02#1 = 48;
          int addRes2E03#1 = IAdd(mulRes2D71,ilit2E02);
          int idx2E04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E03);
          int ilit2E05#1 = 49;
          int addRes2E06#1 = IAdd(mulRes2D71,ilit2E05);
          int idx2E07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E06);
          int ilit2E08#1 = 50;
          int addRes2E09#1 = IAdd(mulRes2D71,ilit2E08);
          int idx2E0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E09);
          int ilit2E0B#1 = 51;
          int addRes2E0C#1 = IAdd(mulRes2D71,ilit2E0B);
          int idx2E0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0C);
          int ilit2E0E#1 = 52;
          int addRes2E0F#1 = IAdd(mulRes2D71,ilit2E0E);
          int idx2E10#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0F);
          int ilit2E11#1 = 53;
          int addRes2E12#1 = IAdd(mulRes2D71,ilit2E11);
          int idx2E13#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E12);
          int ilit2E14#1 = 54;
          int addRes2E15#1 = IAdd(mulRes2D71,ilit2E14);
          int idx2E16#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E15);
          int ilit2E17#1 = 55;
          int addRes2E18#1 = IAdd(mulRes2D71,ilit2E17);
          int idx2E19#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E18);
          int ilit2E1A#1 = 56;
          int addRes2E1B#1 = IAdd(mulRes2D71,ilit2E1A);
          int idx2E1C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1B);
          int ilit2E1D#1 = 57;
          int addRes2E1E#1 = IAdd(mulRes2D71,ilit2E1D);
          int idx2E1F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1E);
          int ilit2E20#1 = 58;
          int addRes2E21#1 = IAdd(mulRes2D71,ilit2E20);
          int idx2E22#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E21);
          int ilit2E23#1 = 59;
          int addRes2E24#1 = IAdd(mulRes2D71,ilit2E23);
          int idx2E25#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E24);
          int ilit2E26#1 = 60;
          int addRes2E27#1 = IAdd(mulRes2D71,ilit2E26);
          int idx2E28#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E27);
          int ilit2E29#1 = 61;
          int addRes2E2A#1 = IAdd(mulRes2D71,ilit2E29);
          int idx2E2B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2A);
          int ilit2E2C#1 = 62;
          int addRes2E2D#1 = IAdd(mulRes2D71,ilit2E2C);
          int idx2E2E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2D);
          int ilit2E2F#1 = 63;
          int addRes2E30#1 = IAdd(mulRes2D71,ilit2E2F);
          int idx2E31#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E30);
          int ilit2E32#1 = 64;
          int addRes2E33#1 = IAdd(mulRes2D71,ilit2E32);
          int idx2E34#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E33);
          int ilit2E35#1 = 65;
          int addRes2E36#1 = IAdd(mulRes2D71,ilit2E35);
          int idx2E37#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E36);
          int ilit2E38#1 = 66;
          int addRes2E39#1 = IAdd(mulRes2D71,ilit2E38);
          int idx2E3A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E39);
          int ilit2E3B#1 = 67;
          int addRes2E3C#1 = IAdd(mulRes2D71,ilit2E3B);
          int idx2E3D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3C);
          int ilit2E3E#1 = 68;
          int addRes2E3F#1 = IAdd(mulRes2D71,ilit2E3E);
          int idx2E40#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3F);
          int ilit2E41#1 = 69;
          int addRes2E42#1 = IAdd(mulRes2D71,ilit2E41);
          int idx2E43#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E42);
          int ilit2E44#1 = 70;
          int addRes2E45#1 = IAdd(mulRes2D71,ilit2E44);
          int idx2E46#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E45);
          int ilit2E47#1 = 71;
          int addRes2E48#1 = IAdd(mulRes2D71,ilit2E47);
          int idx2E49#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E48);
          int ilit2E4A#1 = 72;
          int addRes2E4B#1 = IAdd(mulRes2D71,ilit2E4A);
          int idx2E4C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4B);
          int ilit2E4D#1 = 73;
          int addRes2E4E#1 = IAdd(mulRes2D71,ilit2E4D);
          int idx2E4F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4E);
          int ilit2E50#1 = 74;
          int addRes2E51#1 = IAdd(mulRes2D71,ilit2E50);
          int idx2E52#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E51);
          int ilit2E53#1 = 75;
          int addRes2E54#1 = IAdd(mulRes2D71,ilit2E53);
          int idx2E55#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E54);
          int ilit2E56#1 = 76;
          int addRes2E57#1 = IAdd(mulRes2D71,ilit2E56);
          int idx2E58#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E57);
          int ilit2E59#1 = 77;
          int addRes2E5A#1 = IAdd(mulRes2D71,ilit2E59);
          int idx2E5B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5A);
          int ilit2E5C#1 = 78;
          int addRes2E5D#1 = IAdd(mulRes2D71,ilit2E5C);
          int idx2E5E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5D);
          int ilit2E5F#1 = 79;
          int addRes2E60#1 = IAdd(mulRes2D71,ilit2E5F);
          int idx2E61#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E60);
          int ilit2E62#1 = 80;
          int addRes2E63#1 = IAdd(mulRes2D71,ilit2E62);
          int idx2E64#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E63);
          int ilit2E65#1 = 81;
          int addRes2E66#1 = IAdd(mulRes2D71,ilit2E65);
          int idx2E67#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E66);
          int ilit2E68#1 = 82;
          int addRes2E69#1 = IAdd(mulRes2D71,ilit2E68);
          int idx2E6A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E69);
          int ilit2E6B#1 = 83;
          int addRes2E6C#1 = IAdd(mulRes2D71,ilit2E6B);
          int idx2E6D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E6C);
          int ilit2F70#84 = 1;
          int idx2F72#1 = idx2D74;
          int mulRes2F73#1 = IMul(ilit2F70,idx2F72);
          int idx2F74#1 = idx2D77;
          int mulRes2F75#1 = IMul(ilit2F70,idx2F74);
          int idx2F77#1 = idx2D7A;
          int mulRes2F78#1 = IMul(ilit2F70,idx2F77);
          int idx2F7A#1 = idx2D7D;
          int mulRes2F7B#1 = IMul(ilit2F70,idx2F7A);
          int idx2F7D#1 = idx2D80;
          int mulRes2F7E#1 = IMul(ilit2F70,idx2F7D);
          int idx2F80#1 = idx2D83;
          int mulRes2F81#1 = IMul(ilit2F70,idx2F80);
          int idx2F83#1 = idx2D86;
          int mulRes2F84#1 = IMul(ilit2F70,idx2F83);
          int idx2F86#1 = idx2D89;
          int mulRes2F87#1 = IMul(ilit2F70,idx2F86);
          int idx2F89#1 = idx2D8C;
          int mulRes2F8A#1 = IMul(ilit2F70,idx2F89);
          int idx2F8C#1 = idx2D8F;
          int mulRes2F8D#1 = IMul(ilit2F70,idx2F8C);
          int idx2F8F#1 = idx2D92;
          int mulRes2F90#1 = IMul(ilit2F70,idx2F8F);
          int idx2F92#1 = idx2D95;
          int mulRes2F93#1 = IMul(ilit2F70,idx2F92);
          int idx2F95#1 = idx2D98;
          int mulRes2F96#1 = IMul(ilit2F70,idx2F95);
          int idx2F98#1 = idx2D9B;
          int mulRes2F99#1 = IMul(ilit2F70,idx2F98);
          int idx2F9B#1 = idx2D9E;
          int mulRes2F9C#1 = IMul(ilit2F70,idx2F9B);
          int idx2F9E#1 = idx2DA1;
          int mulRes2F9F#1 = IMul(ilit2F70,idx2F9E);
          int idx2FA1#1 = idx2DA4;
          int mulRes2FA2#1 = IMul(ilit2F70,idx2FA1);
          int idx2FA4#1 = idx2DA7;
          int mulRes2FA5#1 = IMul(ilit2F70,idx2FA4);
          int idx2FA7#1 = idx2DAA;
          int mulRes2FA8#1 = IMul(ilit2F70,idx2FA7);
          int idx2FAA#1 = idx2DAD;
          int mulRes2FAB#1 = IMul(ilit2F70,idx2FAA);
          int idx2FAD#1 = idx2DB0;
          int mulRes2FAE#1 = IMul(ilit2F70,idx2FAD);
          int idx2FB0#1 = idx2DB3;
          int mulRes2FB1#1 = IMul(ilit2F70,idx2FB0);
          int idx2FB3#1 = idx2DB6;
          int mulRes2FB4#1 = IMul(ilit2F70,idx2FB3);
          int idx2FB6#1 = idx2DB9;
          int mulRes2FB7#1 = IMul(ilit2F70,idx2FB6);
          int idx2FB9#1 = idx2DBC;
          int mulRes2FBA#1 = IMul(ilit2F70,idx2FB9);
          int idx2FBC#1 = idx2DBF;
          int mulRes2FBD#1 = IMul(ilit2F70,idx2FBC);
          int idx2FBF#1 = idx2DC2;
          int mulRes2FC0#1 = IMul(ilit2F70,idx2FBF);
          int idx2FC2#1 = idx2DC5;
          int mulRes2FC3#1 = IMul(ilit2F70,idx2FC2);
          int idx2FC5#1 = idx2DC8;
          int mulRes2FC6#1 = IMul(ilit2F70,idx2FC5);
          int idx2FC8#1 = idx2DCB;
          int mulRes2FC9#1 = IMul(ilit2F70,idx2FC8);
          int idx2FCB#1 = idx2DCE;
          int mulRes2FCC#1 = IMul(ilit2F70,idx2FCB);
          int idx2FCE#1 = idx2DD1;
          int mulRes2FCF#1 = IMul(ilit2F70,idx2FCE);
          int idx2FD1#1 = idx2DD4;
          int mulRes2FD2#1 = IMul(ilit2F70,idx2FD1);
          int idx2FD4#1 = idx2DD7;
          int mulRes2FD5#1 = IMul(ilit2F70,idx2FD4);
          int idx2FD7#1 = idx2DDA;
          int mulRes2FD8#1 = IMul(ilit2F70,idx2FD7);
          int idx2FDA#1 = idx2DDD;
          int mulRes2FDB#1 = IMul(ilit2F70,idx2FDA);
          int idx2FDD#1 = idx2DE0;
          int mulRes2FDE#1 = IMul(ilit2F70,idx2FDD);
          int idx2FE0#1 = idx2DE3;
          int mulRes2FE1#1 = IMul(ilit2F70,idx2FE0);
          int idx2FE3#1 = idx2DE6;
          int mulRes2FE4#1 = IMul(ilit2F70,idx2FE3);
          int idx2FE6#1 = idx2DE9;
          int mulRes2FE7#1 = IMul(ilit2F70,idx2FE6);
          int idx2FE9#1 = idx2DEC;
          int mulRes2FEA#1 = IMul(ilit2F70,idx2FE9);
          int idx2FEC#1 = idx2DEF;
          int mulRes2FED#1 = IMul(ilit2F70,idx2FEC);
          int idx2FEF#1 = idx2DF2;
          int mulRes2FF0#1 = IMul(ilit2F70,idx2FEF);
          int idx2FF2#1 = idx2DF5;
          int mulRes2FF3#1 = IMul(ilit2F70,idx2FF2);
          int idx2FF5#1 = idx2DF8;
          int mulRes2FF6#1 = IMul(ilit2F70,idx2FF5);
          int idx2FF8#1 = idx2DFB;
          int mulRes2FF9#1 = IMul(ilit2F70,idx2FF8);
          int idx2FFB#1 = idx2DFE;
          int mulRes2FFC#1 = IMul(ilit2F70,idx2FFB);
          int idx2FFE#1 = idx2E01;
          int mulRes2FFF#1 = IMul(ilit2F70,idx2FFE);
          int idx3001#1 = idx2E04;
          int mulRes3002#1 = IMul(ilit2F70,idx3001);
          int idx3004#1 = idx2E07;
          int mulRes3005#1 = IMul(ilit2F70,idx3004);
          int idx3007#1 = idx2E0A;
          int mulRes3008#1 = IMul(ilit2F70,idx3007);
          int idx300A#1 = idx2E0D;
          int mulRes300B#1 = IMul(ilit2F70,idx300A);
          int idx300D#1 = idx2E10;
          int mulRes300E#1 = IMul(ilit2F70,idx300D);
          int idx3010#1 = idx2E13;
          int mulRes3011#1 = IMul(ilit2F70,idx3010);
          int idx3013#1 = idx2E16;
          int mulRes3014#1 = IMul(ilit2F70,idx3013);
          int idx3016#1 = idx2E19;
          int mulRes3017#1 = IMul(ilit2F70,idx3016);
          int idx3019#1 = idx2E1C;
          int mulRes301A#1 = IMul(ilit2F70,idx3019);
          int idx301C#1 = idx2E1F;
          int mulRes301D#1 = IMul(ilit2F70,idx301C);
          int idx301F#1 = idx2E22;
          int mulRes3020#1 = IMul(ilit2F70,idx301F);
          int idx3022#1 = idx2E25;
          int mulRes3023#1 = IMul(ilit2F70,idx3022);
          int idx3025#1 = idx2E28;
          int mulRes3026#1 = IMul(ilit2F70,idx3025);
          int idx3028#1 = idx2E2B;
          int mulRes3029#1 = IMul(ilit2F70,idx3028);
          int idx302B#1 = idx2E2E;
          int mulRes302C#1 = IMul(ilit2F70,idx302B);
          int idx302E#1 = idx2E31;
          int mulRes302F#1 = IMul(ilit2F70,idx302E);
          int idx3031#1 = idx2E34;
          int mulRes3032#1 = IMul(ilit2F70,idx3031);
          int idx3034#1 = idx2E37;
          int mulRes3035#1 = IMul(ilit2F70,idx3034);
          int idx3037#1 = idx2E3A;
          int mulRes3038#1 = IMul(ilit2F70,idx3037);
          int idx303A#1 = idx2E3D;
          int mulRes303B#1 = IMul(ilit2F70,idx303A);
          int idx303D#1 = idx2E40;
          int mulRes303E#1 = IMul(ilit2F70,idx303D);
          int idx3040#1 = idx2E43;
          int mulRes3041#1 = IMul(ilit2F70,idx3040);
          int idx3043#1 = idx2E46;
          int mulRes3044#1 = IMul(ilit2F70,idx3043);
          int idx3046#1 = idx2E49;
          int mulRes3047#1 = IMul(ilit2F70,idx3046);
          int idx3049#1 = idx2E4C;
          int mulRes304A#1 = IMul(ilit2F70,idx3049);
          int idx304C#1 = idx2E4F;
          int mulRes304D#1 = IMul(ilit2F70,idx304C);
          int idx304F#1 = idx2E52;
          int mulRes3050#1 = IMul(ilit2F70,idx304F);
          int idx3052#1 = idx2E55;
          int mulRes3053#1 = IMul(ilit2F70,idx3052);
          int idx3055#1 = idx2E58;
          int mulRes3056#1 = IMul(ilit2F70,idx3055);
          int idx3058#1 = idx2E5B;
          int mulRes3059#1 = IMul(ilit2F70,idx3058);
          int idx305B#1 = idx2E5E;
          int mulRes305C#1 = IMul(ilit2F70,idx305B);
          int idx305E#1 = idx2E61;
          int mulRes305F#1 = IMul(ilit2F70,idx305E);
          int idx3061#1 = idx2E64;
          int mulRes3062#1 = IMul(ilit2F70,idx3061);
          int idx3064#1 = idx2E67;
          int mulRes3065#1 = IMul(ilit2F70,idx3064);
          int idx3067#1 = idx2E6A;
          int mulRes3068#1 = IMul(ilit2F70,idx3067);
          int idx306A#1 = idx2E6D;
          int mulRes306B#1 = IMul(ilit2F70,idx306A);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F73);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F75);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F78);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7B);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7E);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F81);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F84);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F87);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8A);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8D);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F90);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F93);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F96);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F99);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9C);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9F);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA2);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA5);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA8);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAB);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAE);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB1);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB4);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB7);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBA);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBD);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC0);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC3);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC6);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC9);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCC);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCF);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD2);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD5);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD8);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDB);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDE);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE1);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE4);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE7);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FEA);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FED);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF0);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF3);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF6);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF9);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFC);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFF);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3002);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3005);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3008);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300B);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300E);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3011);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3014);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3017);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301A);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301D);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3020);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3023);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3026);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3029);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302C);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302F);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3032);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3035);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3038);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303B);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303E);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3041);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3044);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3047);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304A);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304D);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3050);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3053);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3056);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3059);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305C);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305F);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3062);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3065);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3068);
          real dof30BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes306B);
          tensor[84] dofs30C0#1 = <tensor[84]>[dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE,dof30BF];
          tensor[84] femDofs2F6F#12 = dofs30C0;
          real varAcc3214#4 = VIndex<3,0>(pos24B8);
          real varAcc3215#4 = VIndex<3,1>(pos24B8);
          real varAcc3216#4 = VIndex<3,2>(pos24B8);
          real basisEval3217#294 = 0.e0;
          real coeff3218#31 = 0.2e1;
          real one3219#38 = 0.1e1;
          real prod321A#5 = RMul(one3219,one3219);
          real prod321B#2 = RMul(one3219,prod321A);
          real basisEval321C#3 = RMul(coeff3218,prod321B);
          real iden321D#5 = varAcc3216;
          real prod321E#4 = RMul(one3219,iden321D);
          real prod321F#3 = RMul(one3219,prod321E);
          real basisEval3220#4 = RMul(coeff3218,prod321F);
          real iden3221#5 = varAcc3215;
          real prod3222#4 = RMul(iden3221,one3219);
          real prod3223#3 = RMul(one3219,prod3222);
          real basisEval3224#4 = RMul(coeff3218,prod3223);
          real coeff3225#22 = 0.6e1;
          real iden3226#11 = varAcc3214;
          real prod3227#3 = RMul(iden3226,prod321A);
          real basisEval3228#1 = RMul(coeff3225,prod3227);
          real prod23229#4 = RMul(iden321D,varAcc3216);
          real prod322A#3 = RMul(one3219,prod23229);
          real prod322B#4 = RMul(one3219,prod322A);
          real basisEval322C#2 = RMul(coeff3218,prod322B);
          real prod322D#3 = RMul(iden3221,iden321D);
          real prod322E#3 = RMul(one3219,prod322D);
          real basisEval322F#3 = RMul(coeff3218,prod322E);
          real prod23230#4 = RMul(iden3221,varAcc3215);
          real prod3231#3 = RMul(prod23230,one3219);
          real prod3232#4 = RMul(one3219,prod3231);
          real basisEval3233#2 = RMul(coeff3218,prod3232);
          real prod3234#3 = RMul(iden3226,prod321E);
          real basisEval3235#2 = RMul(coeff3225,prod3234);
          real prod3236#3 = RMul(iden3226,prod3222);
          real basisEval3237#2 = RMul(coeff3225,prod3236);
          real coeff3238#15 = 0.12e2;
          real prod23239#7 = RMul(iden3226,varAcc3214);
          real prod323A#4 = RMul(prod23239,prod321A);
          real basisEval323B#1 = RMul(coeff3238,prod323A);
          real prod3323C#3 = RMul(prod23229,varAcc3216);
          real prod323D#2 = RMul(one3219,prod3323C);
          real prod323E#4 = RMul(one3219,prod323D);
          real basisEval323F#2 = RMul(coeff3218,prod323E);
          real prod3240#2 = RMul(iden3221,prod23229);
          real prod3241#4 = RMul(one3219,prod3240);
          real basisEval3242#2 = RMul(coeff3218,prod3241);
          real prod3243#2 = RMul(prod23230,iden321D);
          real prod3244#4 = RMul(one3219,prod3243);
          real basisEval3245#2 = RMul(coeff3218,prod3244);
          real prod33246#3 = RMul(prod23230,varAcc3215);
          real prod3247#2 = RMul(prod33246,one3219);
          real prod3248#4 = RMul(one3219,prod3247);
          real basisEval3249#2 = RMul(coeff3218,prod3248);
          real prod324A#4 = RMul(iden3226,prod322A);
          real basisEval324B#2 = RMul(coeff3225,prod324A);
          real prod324C#2 = RMul(iden3226,prod322D);
          real basisEval324D#3 = RMul(coeff3225,prod324C);
          real prod324E#4 = RMul(iden3226,prod3231);
          real basisEval324F#2 = RMul(coeff3225,prod324E);
          real prod3250#4 = RMul(prod23239,prod321E);
          real basisEval3251#1 = RMul(coeff3238,prod3250);
          real prod3252#4 = RMul(prod23239,prod3222);
          real basisEval3253#1 = RMul(coeff3238,prod3252);
          real coeff3254#9 = 0.20e2;
          real prod33255#4 = RMul(prod23239,varAcc3214);
          real prod3256#4 = RMul(prod33255,prod321A);
          real basisEval3257#1 = RMul(coeff3254,prod3256);
          real prod43258#1 = RMul(prod3323C,varAcc3216);
          real prod3259#1 = RMul(one3219,prod43258);
          real prod325A#4 = RMul(one3219,prod3259);
          real basisEval325B#2 = RMul(coeff3218,prod325A);
          real prod325C#1 = RMul(iden3221,prod3323C);
          real prod325D#5 = RMul(one3219,prod325C);
          real basisEval325E#2 = RMul(coeff3218,prod325D);
          real prod325F#1 = RMul(prod23230,prod23229);
          real prod3260#4 = RMul(one3219,prod325F);
          real basisEval3261#1 = RMul(coeff3218,prod3260);
          real prod3262#1 = RMul(prod33246,iden321D);
          real prod3263#5 = RMul(one3219,prod3262);
          real basisEval3264#2 = RMul(coeff3218,prod3263);
          real prod43265#1 = RMul(prod33246,varAcc3215);
          real prod3266#1 = RMul(prod43265,one3219);
          real prod3267#4 = RMul(one3219,prod3266);
          real basisEval3268#2 = RMul(coeff3218,prod3267);
          real prod3269#5 = RMul(iden3226,prod323D);
          real basisEval326A#1 = RMul(coeff3225,prod3269);
          real prod326B#3 = RMul(iden3226,prod3240);
          real basisEval326C#4 = RMul(coeff3225,prod326B);
          real prod326D#3 = RMul(iden3226,prod3243);
          real basisEval326E#4 = RMul(coeff3225,prod326D);
          real prod326F#5 = RMul(iden3226,prod3247);
          real basisEval3270#1 = RMul(coeff3225,prod326F);
          real prod3271#4 = RMul(prod23239,prod322A);
          real basisEval3272#2 = RMul(coeff3238,prod3271);
          real prod3273#3 = RMul(prod23239,prod322D);
          real basisEval3274#1 = RMul(coeff3238,prod3273);
          real prod3275#4 = RMul(prod23239,prod3231);
          real basisEval3276#2 = RMul(coeff3238,prod3275);
          real prod3277#5 = RMul(prod33255,prod321E);
          real basisEval3278#1 = RMul(coeff3254,prod3277);
          real prod3279#5 = RMul(prod33255,prod3222);
          real basisEval327A#1 = RMul(coeff3254,prod3279);
          real coeff327B#3 = 0.30e2;
          real prod4327C#1 = RMul(prod33255,varAcc3214);
          real prod327D#4 = RMul(prod4327C,prod321A);
          real basisEval327E#1 = RMul(coeff327B,prod327D);
          real basisEval327F#3 = RMul(one3219,prod321B);
          real basisEval3280#1 = RMul(one3219,prod321F);
          real basisEval3281#4 = RMul(coeff3218,prod3227);
          real basisEval3282#1 = RMul(one3219,prod322B);
          real coeff3283#12 = 0.3e1;
          real basisEval3284#2 = RMul(coeff3283,prod3232);
          real basisEval3285#3 = RMul(coeff3218,prod3234);
          real coeff3286#16 = 0.4e1;
          real basisEval3287#1 = RMul(coeff3286,prod3236);
          real basisEval3288#2 = RMul(coeff3283,prod323A);
          real basisEval3289#1 = RMul(one3219,prod323E);
          real basisEval328A#1 = RMul(coeff3283,prod3244);
          real basisEval328B#2 = RMul(coeff3286,prod3248);
          real basisEval328C#2 = RMul(coeff3218,prod324A);
          real basisEval328D#3 = RMul(coeff3286,prod324C);
          real basisEval328E#1 = RMul(coeff3283,prod3250);
          real basisEval328F#2 = RMul(coeff3225,prod3252);
          real basisEval3290#2 = RMul(coeff3286,prod3256);
          real basisEval3291#1 = RMul(one3219,prod325A);
          real basisEval3292#2 = RMul(coeff3283,prod3260);
          real basisEval3293#1 = RMul(coeff3286,prod3263);
          real coeff3294#3 = 0.5e1;
          real basisEval3295#2 = RMul(coeff3294,prod3267);
          real basisEval3296#2 = RMul(coeff3218,prod3269);
          real basisEval3297#1 = RMul(coeff3286,prod326B);
          real coeff3298#6 = 0.8e1;
          real basisEval3299#1 = RMul(coeff3298,prod326F);
          real basisEval329A#2 = RMul(coeff3283,prod3271);
          real basisEval329B#4 = RMul(coeff3225,prod3273);
          real coeff329C#3 = 0.9e1;
          real basisEval329D#1 = RMul(coeff329C,prod3275);
          real basisEval329E#1 = RMul(coeff3286,prod3277);
          real basisEval329F#1 = RMul(coeff3298,prod3279);
          real basisEval32A0#2 = RMul(coeff3294,prod327D);
          real basisEval32A1#1 = RMul(one3219,prod3223);
          real basisEval32A2#2 = RMul(coeff3283,prod322B);
          real basisEval32A3#1 = RMul(one3219,prod3232);
          real basisEval32A4#1 = RMul(coeff3286,prod3234);
          real basisEval32A5#3 = RMul(coeff3218,prod3236);
          real basisEval32A6#2 = RMul(coeff3286,prod323E);
          real basisEval32A7#1 = RMul(coeff3283,prod3241);
          real basisEval32A8#1 = RMul(one3219,prod3248);
          real basisEval32A9#2 = RMul(coeff3218,prod324E);
          real basisEval32AA#2 = RMul(coeff3225,prod3250);
          real basisEval32AB#1 = RMul(coeff3283,prod3252);
          real basisEval32AC#2 = RMul(coeff3294,prod325A);
          real basisEval32AD#1 = RMul(coeff3286,prod325D);
          real basisEval32AE#1 = RMul(one3219,prod3267);
          real basisEval32AF#1 = RMul(coeff3298,prod3269);
          real basisEval32B0#1 = RMul(coeff3286,prod326D);
          real basisEval32B1#2 = RMul(coeff3218,prod326F);
          real basisEval32B2#1 = RMul(coeff329C,prod3271);
          real basisEval32B3#2 = RMul(coeff3283,prod3275);
          real basisEval32B4#1 = RMul(coeff3298,prod3277);
          real basisEval32B5#1 = RMul(coeff3286,prod3279);
          real basisEval32B6#1 = RMul(coeff3225,prod3223);
          real basisEval32B7#2 = RMul(coeff3225,prod322E);
          real basisEval32B8#1 = RMul(coeff3238,prod3232);
          real basisEval32B9#2 = RMul(coeff3218,prod323A);
          real basisEval32BA#2 = RMul(coeff3225,prod3241);
          real basisEval32BB#1 = RMul(coeff3238,prod3244);
          real basisEval32BC#1 = RMul(coeff3254,prod3248);
          real basisEval32BD#1 = RMul(coeff3238,prod324E);
          real basisEval32BE#2 = RMul(coeff3218,prod3250);
          real basisEval32BF#2 = RMul(coeff3218,prod3256);
          real basisEval32C0#1 = RMul(coeff3225,prod325D);
          real basisEval32C1#2 = RMul(coeff3238,prod3260);
          real basisEval32C2#1 = RMul(coeff3254,prod3263);
          real basisEval32C3#1 = RMul(coeff327B,prod3267);
          real basisEval32C4#1 = RMul(coeff3238,prod326D);
          real basisEval32C5#1 = RMul(coeff3254,prod326F);
          real basisEval32C6#1 = RMul(coeff3218,prod3271);
          real basisEval32C7#2 = RMul(coeff3218,prod3277);
          real basisEval32C8#1 = RMul(coeff3225,prod3279);
          real basisEval32C9#2 = RMul(coeff3218,prod327D);
          real basisEval32CA#1 = RMul(one3219,prod3227);
          real basisEval32CB#1 = RMul(coeff3286,prod322E);
          real basisEval32CC#1 = RMul(one3219,prod323A);
          real basisEval32CD#2 = RMul(coeff3225,prod3244);
          real basisEval32CE#1 = RMul(coeff3283,prod324A);
          real basisEval32CF#1 = RMul(coeff3283,prod324E);
          real basisEval32D0#2 = RMul(coeff3218,prod3252);
          real basisEval32D1#1 = RMul(one3219,prod3256);
          real basisEval32D2#1 = RMul(coeff3298,prod325D);
          real basisEval32D3#1 = RMul(coeff329C,prod3260);
          real basisEval32D4#1 = RMul(coeff3298,prod3263);
          real basisEval32D5#1 = RMul(coeff3286,prod3269);
          real basisEval32D6#1 = RMul(coeff3286,prod326F);
          real basisEval32D7#1 = RMul(coeff3286,prod3273);
          real basisEval32D8#2 = RMul(coeff3218,prod3279);
          real basisEval32D9#1 = RMul(one3219,prod327D);
          real basisEval32DA#1 = RMul(coeff3225,prod321F);
          real basisEval32DB#1 = RMul(coeff3238,prod322B);
          real basisEval32DC#1 = RMul(coeff3254,prod323E);
          real basisEval32DD#1 = RMul(coeff3238,prod3241);
          real basisEval32DE#1 = RMul(coeff3238,prod324A);
          real basisEval32DF#1 = RMul(coeff327B,prod325A);
          real basisEval32E0#1 = RMul(coeff3254,prod325D);
          real basisEval32E1#1 = RMul(coeff3225,prod3263);
          real basisEval32E2#1 = RMul(coeff3254,prod3269);
          real basisEval32E3#1 = RMul(coeff3238,prod326B);
          real basisEval32E4#1 = RMul(coeff3218,prod3275);
          real basisEval32E5#1 = RMul(coeff3225,prod3277);
          tensor[84] intermediateCons32E6#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3228,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval322F,basisEval3233,basisEval3235,basisEval3237,basisEval323B,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval3242,basisEval3245,basisEval3249,basisEval324B,basisEval324D,basisEval324F,basisEval3251,basisEval3253,basisEval3257,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval325E,basisEval3261,basisEval3264,basisEval3268,basisEval326A,basisEval326C,basisEval326E,basisEval3270,basisEval3272,basisEval3274,basisEval3276,basisEval3278,basisEval327A,basisEval327E];
          tensor[84] intermediateCons32E7#2 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3280,basisEval3224,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3282,basisEval322F,basisEval3284,basisEval3217,basisEval3285,basisEval3287,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3289,basisEval3242,basisEval328A,basisEval328B,basisEval3217,basisEval328C,basisEval328D,basisEval324F,basisEval3217,basisEval328E,basisEval328F,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3291,basisEval325E,basisEval3292,basisEval3293,basisEval3295,basisEval3217,basisEval3296,basisEval3297,basisEval326E,basisEval3299,basisEval3217,basisEval329A,basisEval329B,basisEval329D,basisEval3217,basisEval329E,basisEval329F,basisEval3217,basisEval32A0,basisEval3217];
          tensor[84] intermediateCons32E8#2 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32A1,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval322F,basisEval32A3,basisEval3217,basisEval32A4,basisEval32A5,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32A7,basisEval3245,basisEval32A8,basisEval3217,basisEval324B,basisEval328D,basisEval32A9,basisEval3217,basisEval32AA,basisEval32AB,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32AD,basisEval3292,basisEval3264,basisEval32AE,basisEval3217,basisEval32AF,basisEval326C,basisEval32B0,basisEval32B1,basisEval3217,basisEval32B2,basisEval329B,basisEval32B3,basisEval3217,basisEval32B4,basisEval32B5,basisEval3217,basisEval32A0,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32E9#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32B6,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval32B7,basisEval32B8,basisEval3217,basisEval3217,basisEval3285,basisEval3237,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval32BA,basisEval32BB,basisEval32BC,basisEval3217,basisEval3217,basisEval328C,basisEval324D,basisEval32BD,basisEval3217,basisEval3217,basisEval32BE,basisEval328F,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval32C0,basisEval32C1,basisEval32C2,basisEval32C3,basisEval3217,basisEval3217,basisEval3296,basisEval326C,basisEval32C4,basisEval32C5,basisEval3217,basisEval3217,basisEval32C6,basisEval329B,basisEval3276,basisEval3217,basisEval3217,basisEval32C7,basisEval32C8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EA#2 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3217,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval32CB,basisEval3284,basisEval3217,basisEval3217,basisEval3285,basisEval32A5,basisEval3217,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32BA,basisEval32CD,basisEval328B,basisEval3217,basisEval3217,basisEval32CE,basisEval328D,basisEval32CF,basisEval3217,basisEval3217,basisEval32BE,basisEval32D0,basisEval3217,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32D2,basisEval32D3,basisEval32D4,basisEval3295,basisEval3217,basisEval3217,basisEval32D5,basisEval326C,basisEval326E,basisEval32D6,basisEval3217,basisEval3217,basisEval329A,basisEval32D7,basisEval32B3,basisEval3217,basisEval3217,basisEval32C7,basisEval32D8,basisEval3217,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EB#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DA,basisEval3224,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DB,basisEval32B7,basisEval3233,basisEval3217,basisEval3217,basisEval3235,basisEval32A5,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DC,basisEval32DD,basisEval32CD,basisEval3249,basisEval3217,basisEval3217,basisEval32DE,basisEval324D,basisEval32A9,basisEval3217,basisEval3217,basisEval32AA,basisEval32D0,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DF,basisEval32E0,basisEval32C1,basisEval32E1,basisEval3268,basisEval3217,basisEval3217,basisEval32E2,basisEval32E3,basisEval326E,basisEval32B1,basisEval3217,basisEval3217,basisEval3272,basisEval329B,basisEval32E4,basisEval3217,basisEval3217,basisEval32E5,basisEval32D8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] projParam33CE#1 = intermediateCons32E6;
          real vdot33CF#1 = VDot<84>(femDofs2F6F,projParam33CE);
          tensor[84] projParam33D0#1 = intermediateCons32E7;
          real vdot33D1#1 = VDot<84>(femDofs2F6F,projParam33D0);
          tensor[84] projParam33D2#1 = intermediateCons32E8;
          real vdot33D3#1 = VDot<84>(femDofs2F6F,projParam33D2);
          tensor[3] tensor33D4#1 = <tensor[3]>[vdot33CF,vdot33D1,vdot33D3];
          tensor[84] projParam33D5#1 = intermediateCons32E7;
          real vdot33D6#1 = VDot<84>(femDofs2F6F,projParam33D5);
          tensor[84] projParam33D7#1 = intermediateCons32E9;
          real vdot33D8#1 = VDot<84>(femDofs2F6F,projParam33D7);
          tensor[84] projParam33D9#1 = intermediateCons32EA;
          real vdot33DA#1 = VDot<84>(femDofs2F6F,projParam33D9);
          tensor[3] tensor33DB#1 = <tensor[3]>[vdot33D6,vdot33D8,vdot33DA];
          tensor[84] projParam33DC#1 = intermediateCons32E8;
          real vdot33DD#1 = VDot<84>(femDofs2F6F,projParam33DC);
          tensor[84] projParam33DE#1 = intermediateCons32EA;
          real vdot33DF#1 = VDot<84>(femDofs2F6F,projParam33DE);
          tensor[84] projParam33E0#1 = intermediateCons32EB;
          real vdot33E1#1 = VDot<84>(femDofs2F6F,projParam33E0);
          tensor[3] tensor33E2#1 = <tensor[3]>[vdot33DD,vdot33DF,vdot33E1];
          tensor[3,3] _t33CD#1 = <tensor[3,3]>[tensor33D4,tensor33DB,tensor33E2];
          (real[3] evals33FA#2,tensor[3][3] E33FB#2) = EigenVecs3x3(_t33CD);
          int _t33FD#2 = 2;
          tensor[3] _t33FF#6 = Subscript<tensor[3][3]>(E33FB,_t33FD);
          real _t3401#9 = Subscript<real[3]>(evals33FA,_t33FD);
          int _t3403#2 = 1;
          tensor[3] _t3405#6 = Subscript<tensor[3][3]>(E33FB,_t3403);
          real _t3407#9 = Subscript<real[3]>(evals33FA,_t3403);
          real r340A#1 = TensorIndex<tensor[3],[0]>(_t33FF);
          tensor[3] binopV340B#3 = VScale<3>(r340A,_t33FF);
          real r340C#1 = TensorIndex<tensor[3],[1]>(_t33FF);
          tensor[3] binopV340D#3 = VScale<3>(r340C,_t33FF);
          real r340E#1 = TensorIndex<tensor[3],[2]>(_t33FF);
          tensor[3] binopV340F#3 = VScale<3>(r340E,_t33FF);
          real r3419#1 = TensorIndex<tensor[3],[0]>(_t3405);
          tensor[3] binopV341A#3 = VScale<3>(r3419,_t3405);
          real r341B#1 = TensorIndex<tensor[3],[1]>(_t3405);
          tensor[3] binopV341C#3 = VScale<3>(r341B,_t3405);
          real r341D#1 = TensorIndex<tensor[3],[2]>(_t3405);
          tensor[3] binopV341E#3 = VScale<3>(r341D,_t3405);
          real r3428#1 = VIndex<3,0>(binopV340B);
          real r3429#1 = RDiv(r3428,_t3401);
          real r342A#1 = VIndex<3,1>(binopV340B);
          real r342B#1 = RDiv(r342A,_t3401);
          real r342C#1 = VIndex<3,2>(binopV340B);
          real r342D#1 = RDiv(r342C,_t3401);
          tensor[3] tensor342E#1 = <tensor[3]>[r3429,r342B,r342D];
          real r342F#1 = VIndex<3,0>(binopV340D);
          real r3430#1 = RDiv(r342F,_t3401);
          real r3431#1 = VIndex<3,1>(binopV340D);
          real r3432#1 = RDiv(r3431,_t3401);
          real r3433#1 = VIndex<3,2>(binopV340D);
          real r3434#1 = RDiv(r3433,_t3401);
          tensor[3] tensor3435#1 = <tensor[3]>[r3430,r3432,r3434];
          real r3436#1 = VIndex<3,0>(binopV340F);
          real r3437#1 = RDiv(r3436,_t3401);
          real r3438#1 = VIndex<3,1>(binopV340F);
          real r3439#1 = RDiv(r3438,_t3401);
          real r343A#1 = VIndex<3,2>(binopV340F);
          real r343B#1 = RDiv(r343A,_t3401);
          tensor[3] tensor343C#1 = <tensor[3]>[r3437,r3439,r343B];
          real r3455#1 = VIndex<3,0>(binopV341A);
          real r3456#1 = RDiv(r3455,_t3407);
          real r3457#1 = VIndex<3,1>(binopV341A);
          real r3458#1 = RDiv(r3457,_t3407);
          real r3459#1 = VIndex<3,2>(binopV341A);
          real r345A#1 = RDiv(r3459,_t3407);
          tensor[3] tensor345B#1 = <tensor[3]>[r3456,r3458,r345A];
          real r345C#1 = VIndex<3,0>(binopV341C);
          real r345D#1 = RDiv(r345C,_t3407);
          real r345E#1 = VIndex<3,1>(binopV341C);
          real r345F#1 = RDiv(r345E,_t3407);
          real r3460#1 = VIndex<3,2>(binopV341C);
          real r3461#1 = RDiv(r3460,_t3407);
          tensor[3] tensor3462#1 = <tensor[3]>[r345D,r345F,r3461];
          real r3463#1 = VIndex<3,0>(binopV341E);
          real r3464#1 = RDiv(r3463,_t3407);
          real r3465#1 = VIndex<3,1>(binopV341E);
          real r3466#1 = RDiv(r3465,_t3407);
          real r3467#1 = VIndex<3,2>(binopV341E);
          real r3468#1 = RDiv(r3467,_t3407);
          tensor[3] tensor3469#1 = <tensor[3]>[r3464,r3466,r3468];
          tensor[3] projParam3482#1 = tensor342E;
          tensor[3] projParam3483#1 = tensor345B;
          tensor[3] v3484#1 = VAdd<3>(projParam3482,projParam3483);
          tensor[3] projParam3485#1 = tensor3435;
          tensor[3] projParam3486#1 = tensor3462;
          tensor[3] v3487#1 = VAdd<3>(projParam3485,projParam3486);
          tensor[3] projParam3488#1 = tensor343C;
          tensor[3] projParam3489#1 = tensor3469;
          tensor[3] v348A#1 = VAdd<3>(projParam3488,projParam3489);
          real varAcc3497#5 = VIndex<3,0>(pos24B8);
          real varAcc3498#5 = VIndex<3,1>(pos24B8);
          real varAcc3499#5 = VIndex<3,2>(pos24B8);
          real basisEval349A#84 = 0.e0;
          real coeff349B#79 = 0.1e1;
          real prod349C#6 = RMul(coeff349B,coeff349B);
          real prod349D#1 = RMul(coeff349B,prod349C);
          real basisEval349E#3 = RMul(coeff349B,prod349D);
          real iden349F#6 = varAcc3499;
          real prod34A0#5 = RMul(coeff349B,iden349F);
          real prod34A1#2 = RMul(coeff349B,prod34A0);
          real basisEval34A2#2 = RMul(coeff349B,prod34A1);
          real iden34A3#6 = varAcc3498;
          real prod34A4#5 = RMul(iden34A3,coeff349B);
          real prod34A5#2 = RMul(coeff349B,prod34A4);
          real basisEval34A6#2 = RMul(coeff349B,prod34A5);
          real coeff34A7#34 = 0.2e1;
          real iden34A8#16 = varAcc3497;
          real prod34A9#2 = RMul(iden34A8,prod349C);
          real basisEval34AA#1 = RMul(coeff34A7,prod34A9);
          real prod234AB#5 = RMul(iden349F,varAcc3499);
          real prod34AC#4 = RMul(coeff349B,prod234AB);
          real prod34AD#2 = RMul(coeff349B,prod34AC);
          real basisEval34AE#2 = RMul(coeff349B,prod34AD);
          real prod34AF#4 = RMul(iden34A3,iden349F);
          real prod34B0#2 = RMul(coeff349B,prod34AF);
          real basisEval34B1#1 = RMul(coeff349B,prod34B0);
          real prod234B2#5 = RMul(iden34A3,varAcc3498);
          real prod34B3#4 = RMul(prod234B2,coeff349B);
          real prod34B4#2 = RMul(coeff349B,prod34B3);
          real basisEval34B5#2 = RMul(coeff349B,prod34B4);
          real prod34B6#2 = RMul(iden34A8,prod34A0);
          real basisEval34B7#2 = RMul(coeff34A7,prod34B6);
          real prod34B8#2 = RMul(iden34A8,prod34A4);
          real basisEval34B9#2 = RMul(coeff34A7,prod34B8);
          real coeff34BA#24 = 0.3e1;
          real prod234BB#11 = RMul(iden34A8,varAcc3497);
          real prod34BC#2 = RMul(prod234BB,prod349C);
          real basisEval34BD#1 = RMul(coeff34BA,prod34BC);
          real prod334BE#4 = RMul(prod234AB,varAcc3499);
          real prod34BF#3 = RMul(coeff349B,prod334BE);
          real prod34C0#2 = RMul(coeff349B,prod34BF);
          real basisEval34C1#2 = RMul(coeff349B,prod34C0);
          real prod34C2#3 = RMul(iden34A3,prod234AB);
          real prod34C3#3 = RMul(coeff349B,prod34C2);
          real basisEval34C4#1 = RMul(coeff349B,prod34C3);
          real prod34C5#3 = RMul(prod234B2,iden349F);
          real prod34C6#3 = RMul(coeff349B,prod34C5);
          real basisEval34C7#1 = RMul(coeff349B,prod34C6);
          real prod334C8#4 = RMul(prod234B2,varAcc3498);
          real prod34C9#3 = RMul(prod334C8,coeff349B);
          real prod34CA#2 = RMul(coeff349B,prod34C9);
          real basisEval34CB#2 = RMul(coeff349B,prod34CA);
          real prod34CC#3 = RMul(iden34A8,prod34AC);
          real basisEval34CD#1 = RMul(coeff34A7,prod34CC);
          real prod34CE#1 = RMul(iden34A8,prod34AF);
          real basisEval34CF#3 = RMul(coeff34A7,prod34CE);
          real prod34D0#3 = RMul(iden34A8,prod34B3);
          real basisEval34D1#1 = RMul(coeff34A7,prod34D0);
          real prod34D2#3 = RMul(prod234BB,prod34A0);
          real basisEval34D3#1 = RMul(coeff34BA,prod34D2);
          real prod34D4#3 = RMul(prod234BB,prod34A4);
          real basisEval34D5#1 = RMul(coeff34BA,prod34D4);
          real coeff34D6#18 = 0.4e1;
          real prod334D7#7 = RMul(prod234BB,varAcc3497);
          real prod34D8#2 = RMul(prod334D7,prod349C);
          real basisEval34D9#1 = RMul(coeff34D6,prod34D8);
          real prod434DA#3 = RMul(prod334BE,varAcc3499);
          real prod34DB#2 = RMul(coeff349B,prod434DA);
          real prod34DC#2 = RMul(coeff349B,prod34DB);
          real basisEval34DD#2 = RMul(coeff349B,prod34DC);
          real prod34DE#2 = RMul(iden34A3,prod334BE);
          real prod34DF#3 = RMul(coeff349B,prod34DE);
          real basisEval34E0#1 = RMul(coeff349B,prod34DF);
          real prod34E1#2 = RMul(prod234B2,prod234AB);
          real prod34E2#2 = RMul(coeff349B,prod34E1);
          real basisEval34E3#1 = RMul(coeff349B,prod34E2);
          real prod34E4#2 = RMul(prod334C8,iden349F);
          real prod34E5#3 = RMul(coeff349B,prod34E4);
          real basisEval34E6#1 = RMul(coeff349B,prod34E5);
          real prod434E7#3 = RMul(prod334C8,varAcc3498);
          real prod34E8#2 = RMul(prod434E7,coeff349B);
          real prod34E9#2 = RMul(coeff349B,prod34E8);
          real basisEval34EA#2 = RMul(coeff349B,prod34E9);
          real prod34EB#3 = RMul(iden34A8,prod34BF);
          real basisEval34EC#1 = RMul(coeff34A7,prod34EB);
          real prod34ED#2 = RMul(iden34A8,prod34C2);
          real basisEval34EE#2 = RMul(coeff34A7,prod34ED);
          real prod34EF#2 = RMul(iden34A8,prod34C5);
          real basisEval34F0#2 = RMul(coeff34A7,prod34EF);
          real prod34F1#3 = RMul(iden34A8,prod34C9);
          real basisEval34F2#1 = RMul(coeff34A7,prod34F1);
          real prod34F3#2 = RMul(prod234BB,prod34AC);
          real basisEval34F4#2 = RMul(coeff34BA,prod34F3);
          real prod34F5#2 = RMul(prod234BB,prod34AF);
          real basisEval34F6#1 = RMul(coeff34BA,prod34F5);
          real prod34F7#2 = RMul(prod234BB,prod34B3);
          real basisEval34F8#2 = RMul(coeff34BA,prod34F7);
          real prod34F9#3 = RMul(prod334D7,prod34A0);
          real basisEval34FA#1 = RMul(coeff34D6,prod34F9);
          real prod34FB#3 = RMul(prod334D7,prod34A4);
          real basisEval34FC#1 = RMul(coeff34D6,prod34FB);
          real coeff34FD#9 = 0.5e1;
          real prod434FE#4 = RMul(prod334D7,varAcc3497);
          real prod34FF#2 = RMul(prod434FE,prod349C);
          real basisEval3500#1 = RMul(coeff34FD,prod34FF);
          real prod53501#1 = RMul(prod434DA,varAcc3499);
          real prod3502#1 = RMul(coeff349B,prod53501);
          real prod3503#2 = RMul(coeff349B,prod3502);
          real basisEval3504#2 = RMul(coeff349B,prod3503);
          real prod3505#1 = RMul(iden34A3,prod434DA);
          real prod3506#3 = RMul(coeff349B,prod3505);
          real basisEval3507#1 = RMul(coeff349B,prod3506);
          real prod3508#1 = RMul(prod234B2,prod334BE);
          real prod3509#3 = RMul(coeff349B,prod3508);
          real basisEval350A#1 = RMul(coeff349B,prod3509);
          real prod350B#1 = RMul(prod334C8,prod234AB);
          real prod350C#3 = RMul(coeff349B,prod350B);
          real basisEval350D#1 = RMul(coeff349B,prod350C);
          real prod350E#1 = RMul(prod434E7,iden349F);
          real prod350F#3 = RMul(coeff349B,prod350E);
          real basisEval3510#1 = RMul(coeff349B,prod350F);
          real prod53511#1 = RMul(prod434E7,varAcc3498);
          real prod3512#1 = RMul(prod53511,coeff349B);
          real prod3513#2 = RMul(coeff349B,prod3512);
          real basisEval3514#2 = RMul(coeff349B,prod3513);
          real prod3515#3 = RMul(iden34A8,prod34DB);
          real basisEval3516#1 = RMul(coeff34A7,prod3515);
          real prod3517#2 = RMul(iden34A8,prod34DE);
          real basisEval3518#2 = RMul(coeff34A7,prod3517);
          real prod3519#2 = RMul(iden34A8,prod34E1);
          real basisEval351A#1 = RMul(coeff34A7,prod3519);
          real prod351B#2 = RMul(iden34A8,prod34E4);
          real basisEval351C#2 = RMul(coeff34A7,prod351B);
          real prod351D#3 = RMul(iden34A8,prod34E8);
          real basisEval351E#1 = RMul(coeff34A7,prod351D);
          real prod351F#3 = RMul(prod234BB,prod34BF);
          real basisEval3520#1 = RMul(coeff34BA,prod351F);
          real prod3521#2 = RMul(prod234BB,prod34C2);
          real basisEval3522#2 = RMul(coeff34BA,prod3521);
          real prod3523#2 = RMul(prod234BB,prod34C5);
          real basisEval3524#2 = RMul(coeff34BA,prod3523);
          real prod3525#3 = RMul(prod234BB,prod34C9);
          real basisEval3526#1 = RMul(coeff34BA,prod3525);
          real prod3527#3 = RMul(prod334D7,prod34AC);
          real basisEval3528#1 = RMul(coeff34D6,prod3527);
          real prod3529#2 = RMul(prod334D7,prod34AF);
          real basisEval352A#1 = RMul(coeff34D6,prod3529);
          real prod352B#3 = RMul(prod334D7,prod34B3);
          real basisEval352C#1 = RMul(coeff34D6,prod352B);
          real prod352D#3 = RMul(prod434FE,prod34A0);
          real basisEval352E#1 = RMul(coeff34FD,prod352D);
          real prod352F#3 = RMul(prod434FE,prod34A4);
          real basisEval3530#1 = RMul(coeff34FD,prod352F);
          real coeff3531#3 = 0.6e1;
          real prod53532#1 = RMul(prod434FE,varAcc3497);
          real prod3533#2 = RMul(prod53532,prod349C);
          real basisEval3534#1 = RMul(coeff3531,prod3533);
          real basisEval3535#1 = RMul(coeff34A7,prod34A5);
          real basisEval3536#2 = RMul(coeff349B,prod34A9);
          real basisEval3537#2 = RMul(coeff34A7,prod34B0);
          real basisEval3538#1 = RMul(coeff34BA,prod34B4);
          real basisEval3539#1 = RMul(coeff349B,prod34B6);
          real basisEval353A#2 = RMul(coeff349B,prod34BC);
          real basisEval353B#1 = RMul(coeff34A7,prod34C3);
          real basisEval353C#1 = RMul(coeff34BA,prod34C6);
          real basisEval353D#1 = RMul(coeff34D6,prod34CA);
          real basisEval353E#1 = RMul(coeff349B,prod34CC);
          real basisEval353F#1 = RMul(coeff34BA,prod34D0);
          real basisEval3540#1 = RMul(coeff349B,prod34D2);
          real basisEval3541#1 = RMul(coeff34A7,prod34D4);
          real basisEval3542#2 = RMul(coeff349B,prod34D8);
          real basisEval3543#1 = RMul(coeff34A7,prod34DF);
          real basisEval3544#2 = RMul(coeff34BA,prod34E2);
          real basisEval3545#1 = RMul(coeff34D6,prod34E5);
          real basisEval3546#1 = RMul(coeff34FD,prod34E9);
          real basisEval3547#1 = RMul(coeff349B,prod34EB);
          real basisEval3548#1 = RMul(coeff34BA,prod34EF);
          real basisEval3549#1 = RMul(coeff34D6,prod34F1);
          real basisEval354A#1 = RMul(coeff349B,prod34F3);
          real basisEval354B#2 = RMul(coeff34A7,prod34F5);
          real basisEval354C#1 = RMul(coeff349B,prod34F9);
          real basisEval354D#1 = RMul(coeff34A7,prod34FB);
          real basisEval354E#2 = RMul(coeff349B,prod34FF);
          real basisEval354F#1 = RMul(coeff34A7,prod3506);
          real basisEval3550#1 = RMul(coeff34BA,prod3509);
          real basisEval3551#1 = RMul(coeff34D6,prod350C);
          real basisEval3552#1 = RMul(coeff34FD,prod350F);
          real basisEval3553#1 = RMul(coeff3531,prod3513);
          real basisEval3554#1 = RMul(coeff349B,prod3515);
          real basisEval3555#2 = RMul(coeff34BA,prod3519);
          real basisEval3556#1 = RMul(coeff34D6,prod351B);
          real basisEval3557#1 = RMul(coeff34FD,prod351D);
          real basisEval3558#1 = RMul(coeff349B,prod351F);
          real basisEval3559#1 = RMul(coeff34A7,prod3521);
          real basisEval355A#1 = RMul(coeff34D6,prod3525);
          real basisEval355B#1 = RMul(coeff349B,prod3527);
          real basisEval355C#2 = RMul(coeff34A7,prod3529);
          real basisEval355D#1 = RMul(coeff34BA,prod352B);
          real basisEval355E#1 = RMul(coeff349B,prod352D);
          real basisEval355F#1 = RMul(coeff34A7,prod352F);
          real basisEval3560#2 = RMul(coeff349B,prod3533);
          real basisEval3561#1 = RMul(coeff34A7,prod34A1);
          real basisEval3562#1 = RMul(coeff34BA,prod34AD);
          real basisEval3563#1 = RMul(coeff349B,prod34B8);
          real basisEval3564#1 = RMul(coeff34D6,prod34C0);
          real basisEval3565#1 = RMul(coeff34BA,prod34C3);
          real basisEval3566#1 = RMul(coeff34A7,prod34C6);
          real basisEval3567#1 = RMul(coeff34BA,prod34CC);
          real basisEval3568#1 = RMul(coeff349B,prod34D0);
          real basisEval3569#1 = RMul(coeff34A7,prod34D2);
          real basisEval356A#1 = RMul(coeff349B,prod34D4);
          real basisEval356B#1 = RMul(coeff34FD,prod34DC);
          real basisEval356C#1 = RMul(coeff34D6,prod34DF);
          real basisEval356D#1 = RMul(coeff34A7,prod34E5);
          real basisEval356E#1 = RMul(coeff34D6,prod34EB);
          real basisEval356F#1 = RMul(coeff34BA,prod34ED);
          real basisEval3570#1 = RMul(coeff349B,prod34F1);
          real basisEval3571#1 = RMul(coeff349B,prod34F7);
          real basisEval3572#1 = RMul(coeff34A7,prod34F9);
          real basisEval3573#1 = RMul(coeff349B,prod34FB);
          real basisEval3574#1 = RMul(coeff3531,prod3503);
          real basisEval3575#1 = RMul(coeff34FD,prod3506);
          real basisEval3576#1 = RMul(coeff34D6,prod3509);
          real basisEval3577#1 = RMul(coeff34BA,prod350C);
          real basisEval3578#1 = RMul(coeff34A7,prod350F);
          real basisEval3579#1 = RMul(coeff34FD,prod3515);
          real basisEval357A#1 = RMul(coeff34D6,prod3517);
          real basisEval357B#1 = RMul(coeff349B,prod351D);
          real basisEval357C#1 = RMul(coeff34D6,prod351F);
          real basisEval357D#1 = RMul(coeff34A7,prod3523);
          real basisEval357E#1 = RMul(coeff349B,prod3525);
          real basisEval357F#1 = RMul(coeff34BA,prod3527);
          real basisEval3580#1 = RMul(coeff349B,prod352B);
          real basisEval3581#1 = RMul(coeff34A7,prod352D);
          real basisEval3582#1 = RMul(coeff349B,prod352F);
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval349A,basisEval349A,basisEval349A,basisEval349E,basisEval349A,basisEval349A,basisEval349A,basisEval34A2,basisEval34A6,basisEval34AA,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval34AE,basisEval34B1,basisEval34B5,basisEval34B7,basisEval34B9,basisEval34BD,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval34C1,basisEval34C4,basisEval34C7,basisEval34CB,basisEval34CD,basisEval34CF,basisEval34D1,basisEval34D3,basisEval34D5,basisEval34D9,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval34DD,basisEval34E0,basisEval34E3,basisEval34E6,basisEval34EA,basisEval34EC,basisEval34EE,basisEval34F0,basisEval34F2,basisEval34F4,basisEval34F6,basisEval34F8,basisEval34FA,basisEval34FC,basisEval3500,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval349A,basisEval3504,basisEval3507,basisEval350A,basisEval350D,basisEval3510,basisEval3514,basisEval3516,basisEval3518,basisEval351A,basisEval351C,basisEval351E,basisEval3520,basisEval3522,basisEval3524,basisEval3526,basisEval3528,basisEval352A,basisEval352C,basisEval352E,basisEval3530,basisEval3534];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval349A,basisEval349A,basisEval349E,basisEval349A,basisEval349A,basisEval34A2,basisEval3535,basisEval349A,basisEval3536,basisEval349A,basisEval349A,basisEval34AE,basisEval3537,basisEval3538,basisEval349A,basisEval3539,basisEval34B9,basisEval349A,basisEval353A,basisEval349A,basisEval349A,basisEval34C1,basisEval353B,basisEval353C,basisEval353D,basisEval349A,basisEval353E,basisEval34CF,basisEval353F,basisEval349A,basisEval3540,basisEval3541,basisEval349A,basisEval3542,basisEval349A,basisEval349A,basisEval34DD,basisEval3543,basisEval3544,basisEval3545,basisEval3546,basisEval349A,basisEval3547,basisEval34EE,basisEval3548,basisEval3549,basisEval349A,basisEval354A,basisEval354B,basisEval34F8,basisEval349A,basisEval354C,basisEval354D,basisEval349A,basisEval354E,basisEval349A,basisEval349A,basisEval3504,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3553,basisEval349A,basisEval3554,basisEval3518,basisEval3555,basisEval3556,basisEval3557,basisEval349A,basisEval3558,basisEval3559,basisEval3524,basisEval355A,basisEval349A,basisEval355B,basisEval355C,basisEval355D,basisEval349A,basisEval355E,basisEval355F,basisEval349A,basisEval3560,basisEval349A];
          tensor[84] intermediateCons3585#1 = <tensor[84]>[basisEval349A,basisEval349E,basisEval349A,basisEval349A,basisEval3561,basisEval34A6,basisEval349A,basisEval3536,basisEval349A,basisEval349A,basisEval3562,basisEval3537,basisEval34B5,basisEval349A,basisEval34B7,basisEval3563,basisEval349A,basisEval353A,basisEval349A,basisEval349A,basisEval3564,basisEval3565,basisEval3566,basisEval34CB,basisEval349A,basisEval3567,basisEval34CF,basisEval3568,basisEval349A,basisEval3569,basisEval356A,basisEval349A,basisEval3542,basisEval349A,basisEval349A,basisEval356B,basisEval356C,basisEval3544,basisEval356D,basisEval34EA,basisEval349A,basisEval356E,basisEval356F,basisEval34F0,basisEval3570,basisEval349A,basisEval34F4,basisEval354B,basisEval3571,basisEval349A,basisEval3572,basisEval3573,basisEval349A,basisEval354E,basisEval349A,basisEval349A,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3578,basisEval3514,basisEval349A,basisEval3579,basisEval357A,basisEval3555,basisEval351C,basisEval357B,basisEval349A,basisEval357C,basisEval3522,basisEval357D,basisEval357E,basisEval349A,basisEval357F,basisEval355C,basisEval3580,basisEval349A,basisEval3581,basisEval3582,basisEval349A,basisEval3560,basisEval349A,basisEval349A];
          tensor[84] projParam3679#1 = intermediateCons3583;
          real vdot367A#1 = VDot<84>(femDofs2F6F,projParam3679);
          tensor[84] projParam367B#1 = intermediateCons3584;
          real vdot367C#1 = VDot<84>(femDofs2F6F,projParam367B);
          tensor[84] projParam367D#1 = intermediateCons3585;
          real vdot367E#1 = VDot<84>(femDofs2F6F,projParam367D);
          tensor[3] probe_l_153678#3 = <tensor[3]>[vdot367A,vdot367C,vdot367E];
          tensor[3] projParam3688#1 = v3484;
          tensor[3] negV3689#1 = VNeg<3>(projParam3688);
          tensor[3] projParam368A#1 = v3487;
          tensor[3] negV368B#1 = VNeg<3>(projParam368A);
          tensor[3] projParam368C#1 = v348A;
          tensor[3] negV368D#1 = VNeg<3>(projParam368C);
          tensor[3] projParam3697#1 = negV3689;
          real vdot3698#1 = VDot<3>(projParam3697,probe_l_153678);
          tensor[3] projParam3699#1 = negV368B;
          real vdot369A#1 = VDot<3>(projParam3699,probe_l_153678);
          tensor[3] projParam369B#1 = negV368D;
          real vdot369C#1 = VDot<3>(projParam369B,probe_l_153678);
          tensor[3] _t3696#1 = <tensor[3]>[vdot3698,vdot369A,vdot369C];
          goto JOIN36A7
        JOIN36A7:  preds = [ASSIGN36A4,ASSIGN46AB]
          tensor[3] step36A5#5 = phi(_t3696,_t36A6)
          real _t36A8#8 = 0.e0;
          real _t36AA#13 = 0.1e1;
          real _t36AC#1 = 0.15e1;
          real op1_e3_l_736AE#1 = VDot<3>(step36A5,step36A5);
          real op1_e3_l_836B1#3 = Sqrt(op1_e3_l_736AE);
          real op1_e3_l_936B4#1 = Abs<real>(op1_e3_l_836B1);
          real op1_e3_l_1036B7#1 = RDiv(op1_e3_l_936B4,thick247E);
          real op1_e3_l_1136BA#1 = RSub(_t36AA,op1_e3_l_1036B7);
          real op1_e3_l_1236BD#2 = RMul(_t36AC,op1_e3_l_1136BA);
          real op1_e3_l_1336C0#1 = RClamp(_t36A8,_t36AA,op1_e3_l_1236BD);
          real _t36C3#1 = RMul(maxAlpha2486,op1_e3_l_1336C0);
          bool _t36C6#1 = EQ<real>(_t36C3,_t36A8);
          if _t36C6 then goto SAVE36C9 else goto JOIN36CB
        SAVE36C9:  preds = [COND36C8]
          self.rayN = rayN24AC;
          active
          goto JOIN36CB
        JOIN36CB:  preds = [*ACTIVE36CA,COND36C8]
          real op1_e3_l_1436CC#1 = RClamp(_t36A8,_t36AA,op1_e3_l_1236BD);
          real op1_e3_l_1536CF#1 = RMul(maxAlpha2486,op1_e3_l_1436CC);
          real _t36D2#1 = RSub(_t36AA,op1_e3_l_1536CF);
          real _t36D5#1 = MathFn<pow>(_t36D2,alphaFix249C);
          bool _t36D7#1 = NEQ<real>(phKs24A4,_t36A8);
          if _t36D7 then goto ASSIGN36DC else goto JOIN36FF
        ASSIGN36DC:  preds = [COND36D9]
          tensor[3] op1_e3_l_636DA#3 = VAdd<3>(eyeDir249E,litwsp2494);
          real op1_e3_l_836DD#1 = VDot<3>(op1_e3_l_636DA,op1_e3_l_636DA);
          real op1_e3_l_936E0#1 = Sqrt(op1_e3_l_836DD);
          real realLit36E4#1 = 0.1e1;
          real op1_e3_l_1236E3#1 = RDiv(realLit36E4,op1_e3_l_836B1);
          tensor[3] op1_e3_l_1336E8#1 = VScale<3>(op1_e3_l_1236E3,step36A5);
          tensor[3] op1_e3_l_1436EB#1 = VNeg<3>(op1_e3_l_1336E8);
          real realLit36EF#1 = 0.1e1;
          real op1_e3_l_1636EE#1 = RDiv(realLit36EF,op1_e3_l_936E0);
          real op1_e3_l_1736F3#1 = VDot<3>(op1_e3_l_1436EB,op1_e3_l_636DA);
          real op1_e3_l_1836F6#1 = RMul(op1_e3_l_1636EE,op1_e3_l_1736F3);
          real _t36F9#1 = Abs<real>(op1_e3_l_1836F6);
          real scomp36FC#1 = MathFn<pow>(_t36F9,phSp24A6);
          goto JOIN36FF
        JOIN36FF:  preds = [ASSIGN36FD,COND36D9]
          real scomp36FE#1 = phi(scomp36FC,_t36A8)
          real cmin3700#3 = VIndex<2,0>(cminmax248C);
          real cmax3702#2 = VIndex<2,1>(cminmax248C);
          tensor[3] mcol3704#1 = <tensor[3]>[_t36AA,_t36AA,_t36AA];
          bool _t3706#1 = NEQ<real>(cmin3700,cmax3702);
          if _t3706 then goto ASSIGN370C else goto JOIN3DEC
        ASSIGN370C:  preds = [COND3708]
          tensor[3] v370A#1 = VAdd<3>(rayOrig2498,op1_e3_l_524B5);
          tensor[3] _t3709#3 = VAdd<3>(v370A,step36A5);
          int ilit370F#1 = 84;
          int mulRes3710#84 = IMul(_t246C,ilit370F);
          int addRes3712#1 = mulRes3710;
          int idx3713#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3712);
          int ilit3714#1 = 1;
          int addRes3715#1 = IAdd(mulRes3710,ilit3714);
          int idx3716#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3715);
          int ilit3717#1 = 2;
          int addRes3718#1 = IAdd(mulRes3710,ilit3717);
          int idx3719#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3718);
          int ilit371A#1 = 3;
          int addRes371B#1 = IAdd(mulRes3710,ilit371A);
          int idx371C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371B);
          int ilit371D#1 = 4;
          int addRes371E#1 = IAdd(mulRes3710,ilit371D);
          int idx371F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371E);
          int ilit3720#1 = 5;
          int addRes3721#1 = IAdd(mulRes3710,ilit3720);
          int idx3722#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3721);
          int ilit3723#1 = 6;
          int addRes3724#1 = IAdd(mulRes3710,ilit3723);
          int idx3725#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3724);
          int ilit3726#1 = 7;
          int addRes3727#1 = IAdd(mulRes3710,ilit3726);
          int idx3728#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3727);
          int ilit3729#1 = 8;
          int addRes372A#1 = IAdd(mulRes3710,ilit3729);
          int idx372B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372A);
          int ilit372C#1 = 9;
          int addRes372D#1 = IAdd(mulRes3710,ilit372C);
          int idx372E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372D);
          int ilit372F#1 = 10;
          int addRes3730#1 = IAdd(mulRes3710,ilit372F);
          int idx3731#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3730);
          int ilit3732#1 = 11;
          int addRes3733#1 = IAdd(mulRes3710,ilit3732);
          int idx3734#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3733);
          int ilit3735#1 = 12;
          int addRes3736#1 = IAdd(mulRes3710,ilit3735);
          int idx3737#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3736);
          int ilit3738#1 = 13;
          int addRes3739#1 = IAdd(mulRes3710,ilit3738);
          int idx373A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3739);
          int ilit373B#1 = 14;
          int addRes373C#1 = IAdd(mulRes3710,ilit373B);
          int idx373D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373C);
          int ilit373E#1 = 15;
          int addRes373F#1 = IAdd(mulRes3710,ilit373E);
          int idx3740#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373F);
          int ilit3741#1 = 16;
          int addRes3742#1 = IAdd(mulRes3710,ilit3741);
          int idx3743#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3742);
          int ilit3744#1 = 17;
          int addRes3745#1 = IAdd(mulRes3710,ilit3744);
          int idx3746#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3745);
          int ilit3747#1 = 18;
          int addRes3748#1 = IAdd(mulRes3710,ilit3747);
          int idx3749#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3748);
          int ilit374A#1 = 19;
          int addRes374B#1 = IAdd(mulRes3710,ilit374A);
          int idx374C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374B);
          int ilit374D#1 = 20;
          int addRes374E#1 = IAdd(mulRes3710,ilit374D);
          int idx374F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374E);
          int ilit3750#1 = 21;
          int addRes3751#1 = IAdd(mulRes3710,ilit3750);
          int idx3752#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3751);
          int ilit3753#1 = 22;
          int addRes3754#1 = IAdd(mulRes3710,ilit3753);
          int idx3755#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3754);
          int ilit3756#1 = 23;
          int addRes3757#1 = IAdd(mulRes3710,ilit3756);
          int idx3758#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3757);
          int ilit3759#1 = 24;
          int addRes375A#1 = IAdd(mulRes3710,ilit3759);
          int idx375B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375A);
          int ilit375C#1 = 25;
          int addRes375D#1 = IAdd(mulRes3710,ilit375C);
          int idx375E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375D);
          int ilit375F#1 = 26;
          int addRes3760#1 = IAdd(mulRes3710,ilit375F);
          int idx3761#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3760);
          int ilit3762#1 = 27;
          int addRes3763#1 = IAdd(mulRes3710,ilit3762);
          int idx3764#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3763);
          int ilit3765#1 = 28;
          int addRes3766#1 = IAdd(mulRes3710,ilit3765);
          int idx3767#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3766);
          int ilit3768#1 = 29;
          int addRes3769#1 = IAdd(mulRes3710,ilit3768);
          int idx376A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3769);
          int ilit376B#1 = 30;
          int addRes376C#1 = IAdd(mulRes3710,ilit376B);
          int idx376D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376C);
          int ilit376E#1 = 31;
          int addRes376F#1 = IAdd(mulRes3710,ilit376E);
          int idx3770#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376F);
          int ilit3771#1 = 32;
          int addRes3772#1 = IAdd(mulRes3710,ilit3771);
          int idx3773#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3772);
          int ilit3774#1 = 33;
          int addRes3775#1 = IAdd(mulRes3710,ilit3774);
          int idx3776#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3775);
          int ilit3777#1 = 34;
          int addRes3778#1 = IAdd(mulRes3710,ilit3777);
          int idx3779#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3778);
          int ilit377A#1 = 35;
          int addRes377B#1 = IAdd(mulRes3710,ilit377A);
          int idx377C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377B);
          int ilit377D#1 = 36;
          int addRes377E#1 = IAdd(mulRes3710,ilit377D);
          int idx377F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377E);
          int ilit3780#1 = 37;
          int addRes3781#1 = IAdd(mulRes3710,ilit3780);
          int idx3782#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3781);
          int ilit3783#1 = 38;
          int addRes3784#1 = IAdd(mulRes3710,ilit3783);
          int idx3785#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3784);
          int ilit3786#1 = 39;
          int addRes3787#1 = IAdd(mulRes3710,ilit3786);
          int idx3788#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3787);
          int ilit3789#1 = 40;
          int addRes378A#1 = IAdd(mulRes3710,ilit3789);
          int idx378B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378A);
          int ilit378C#1 = 41;
          int addRes378D#1 = IAdd(mulRes3710,ilit378C);
          int idx378E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378D);
          int ilit378F#1 = 42;
          int addRes3790#1 = IAdd(mulRes3710,ilit378F);
          int idx3791#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3790);
          int ilit3792#1 = 43;
          int addRes3793#1 = IAdd(mulRes3710,ilit3792);
          int idx3794#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3793);
          int ilit3795#1 = 44;
          int addRes3796#1 = IAdd(mulRes3710,ilit3795);
          int idx3797#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3796);
          int ilit3798#1 = 45;
          int addRes3799#1 = IAdd(mulRes3710,ilit3798);
          int idx379A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3799);
          int ilit379B#1 = 46;
          int addRes379C#1 = IAdd(mulRes3710,ilit379B);
          int idx379D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379C);
          int ilit379E#1 = 47;
          int addRes379F#1 = IAdd(mulRes3710,ilit379E);
          int idx37A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379F);
          int ilit37A1#1 = 48;
          int addRes37A2#1 = IAdd(mulRes3710,ilit37A1);
          int idx37A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A2);
          int ilit37A4#1 = 49;
          int addRes37A5#1 = IAdd(mulRes3710,ilit37A4);
          int idx37A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A5);
          int ilit37A7#1 = 50;
          int addRes37A8#1 = IAdd(mulRes3710,ilit37A7);
          int idx37A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A8);
          int ilit37AA#1 = 51;
          int addRes37AB#1 = IAdd(mulRes3710,ilit37AA);
          int idx37AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AB);
          int ilit37AD#1 = 52;
          int addRes37AE#1 = IAdd(mulRes3710,ilit37AD);
          int idx37AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AE);
          int ilit37B0#1 = 53;
          int addRes37B1#1 = IAdd(mulRes3710,ilit37B0);
          int idx37B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B1);
          int ilit37B3#1 = 54;
          int addRes37B4#1 = IAdd(mulRes3710,ilit37B3);
          int idx37B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B4);
          int ilit37B6#1 = 55;
          int addRes37B7#1 = IAdd(mulRes3710,ilit37B6);
          int idx37B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B7);
          int ilit37B9#1 = 56;
          int addRes37BA#1 = IAdd(mulRes3710,ilit37B9);
          int idx37BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BA);
          int ilit37BC#1 = 57;
          int addRes37BD#1 = IAdd(mulRes3710,ilit37BC);
          int idx37BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BD);
          int ilit37BF#1 = 58;
          int addRes37C0#1 = IAdd(mulRes3710,ilit37BF);
          int idx37C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C0);
          int ilit37C2#1 = 59;
          int addRes37C3#1 = IAdd(mulRes3710,ilit37C2);
          int idx37C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C3);
          int ilit37C5#1 = 60;
          int addRes37C6#1 = IAdd(mulRes3710,ilit37C5);
          int idx37C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C6);
          int ilit37C8#1 = 61;
          int addRes37C9#1 = IAdd(mulRes3710,ilit37C8);
          int idx37CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C9);
          int ilit37CB#1 = 62;
          int addRes37CC#1 = IAdd(mulRes3710,ilit37CB);
          int idx37CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CC);
          int ilit37CE#1 = 63;
          int addRes37CF#1 = IAdd(mulRes3710,ilit37CE);
          int idx37D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CF);
          int ilit37D1#1 = 64;
          int addRes37D2#1 = IAdd(mulRes3710,ilit37D1);
          int idx37D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D2);
          int ilit37D4#1 = 65;
          int addRes37D5#1 = IAdd(mulRes3710,ilit37D4);
          int idx37D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D5);
          int ilit37D7#1 = 66;
          int addRes37D8#1 = IAdd(mulRes3710,ilit37D7);
          int idx37D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D8);
          int ilit37DA#1 = 67;
          int addRes37DB#1 = IAdd(mulRes3710,ilit37DA);
          int idx37DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DB);
          int ilit37DD#1 = 68;
          int addRes37DE#1 = IAdd(mulRes3710,ilit37DD);
          int idx37DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DE);
          int ilit37E0#1 = 69;
          int addRes37E1#1 = IAdd(mulRes3710,ilit37E0);
          int idx37E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E1);
          int ilit37E3#1 = 70;
          int addRes37E4#1 = IAdd(mulRes3710,ilit37E3);
          int idx37E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E4);
          int ilit37E6#1 = 71;
          int addRes37E7#1 = IAdd(mulRes3710,ilit37E6);
          int idx37E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E7);
          int ilit37E9#1 = 72;
          int addRes37EA#1 = IAdd(mulRes3710,ilit37E9);
          int idx37EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37EA);
          int ilit37EC#1 = 73;
          int addRes37ED#1 = IAdd(mulRes3710,ilit37EC);
          int idx37EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37ED);
          int ilit37EF#1 = 74;
          int addRes37F0#1 = IAdd(mulRes3710,ilit37EF);
          int idx37F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F0);
          int ilit37F2#1 = 75;
          int addRes37F3#1 = IAdd(mulRes3710,ilit37F2);
          int idx37F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F3);
          int ilit37F5#1 = 76;
          int addRes37F6#1 = IAdd(mulRes3710,ilit37F5);
          int idx37F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F6);
          int ilit37F8#1 = 77;
          int addRes37F9#1 = IAdd(mulRes3710,ilit37F8);
          int idx37FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F9);
          int ilit37FB#1 = 78;
          int addRes37FC#1 = IAdd(mulRes3710,ilit37FB);
          int idx37FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FC);
          int ilit37FE#1 = 79;
          int addRes37FF#1 = IAdd(mulRes3710,ilit37FE);
          int idx3800#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FF);
          int ilit3801#1 = 80;
          int addRes3802#1 = IAdd(mulRes3710,ilit3801);
          int idx3803#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3802);
          int ilit3804#1 = 81;
          int addRes3805#1 = IAdd(mulRes3710,ilit3804);
          int idx3806#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3805);
          int ilit3807#1 = 82;
          int addRes3808#1 = IAdd(mulRes3710,ilit3807);
          int idx3809#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3808);
          int ilit380A#1 = 83;
          int addRes380B#1 = IAdd(mulRes3710,ilit380A);
          int idx380C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes380B);
          int ilit390F#84 = 1;
          int idx3911#1 = idx3713;
          int mulRes3912#1 = IMul(ilit390F,idx3911);
          int idx3913#1 = idx3716;
          int mulRes3914#1 = IMul(ilit390F,idx3913);
          int idx3916#1 = idx3719;
          int mulRes3917#1 = IMul(ilit390F,idx3916);
          int idx3919#1 = idx371C;
          int mulRes391A#1 = IMul(ilit390F,idx3919);
          int idx391C#1 = idx371F;
          int mulRes391D#1 = IMul(ilit390F,idx391C);
          int idx391F#1 = idx3722;
          int mulRes3920#1 = IMul(ilit390F,idx391F);
          int idx3922#1 = idx3725;
          int mulRes3923#1 = IMul(ilit390F,idx3922);
          int idx3925#1 = idx3728;
          int mulRes3926#1 = IMul(ilit390F,idx3925);
          int idx3928#1 = idx372B;
          int mulRes3929#1 = IMul(ilit390F,idx3928);
          int idx392B#1 = idx372E;
          int mulRes392C#1 = IMul(ilit390F,idx392B);
          int idx392E#1 = idx3731;
          int mulRes392F#1 = IMul(ilit390F,idx392E);
          int idx3931#1 = idx3734;
          int mulRes3932#1 = IMul(ilit390F,idx3931);
          int idx3934#1 = idx3737;
          int mulRes3935#1 = IMul(ilit390F,idx3934);
          int idx3937#1 = idx373A;
          int mulRes3938#1 = IMul(ilit390F,idx3937);
          int idx393A#1 = idx373D;
          int mulRes393B#1 = IMul(ilit390F,idx393A);
          int idx393D#1 = idx3740;
          int mulRes393E#1 = IMul(ilit390F,idx393D);
          int idx3940#1 = idx3743;
          int mulRes3941#1 = IMul(ilit390F,idx3940);
          int idx3943#1 = idx3746;
          int mulRes3944#1 = IMul(ilit390F,idx3943);
          int idx3946#1 = idx3749;
          int mulRes3947#1 = IMul(ilit390F,idx3946);
          int idx3949#1 = idx374C;
          int mulRes394A#1 = IMul(ilit390F,idx3949);
          int idx394C#1 = idx374F;
          int mulRes394D#1 = IMul(ilit390F,idx394C);
          int idx394F#1 = idx3752;
          int mulRes3950#1 = IMul(ilit390F,idx394F);
          int idx3952#1 = idx3755;
          int mulRes3953#1 = IMul(ilit390F,idx3952);
          int idx3955#1 = idx3758;
          int mulRes3956#1 = IMul(ilit390F,idx3955);
          int idx3958#1 = idx375B;
          int mulRes3959#1 = IMul(ilit390F,idx3958);
          int idx395B#1 = idx375E;
          int mulRes395C#1 = IMul(ilit390F,idx395B);
          int idx395E#1 = idx3761;
          int mulRes395F#1 = IMul(ilit390F,idx395E);
          int idx3961#1 = idx3764;
          int mulRes3962#1 = IMul(ilit390F,idx3961);
          int idx3964#1 = idx3767;
          int mulRes3965#1 = IMul(ilit390F,idx3964);
          int idx3967#1 = idx376A;
          int mulRes3968#1 = IMul(ilit390F,idx3967);
          int idx396A#1 = idx376D;
          int mulRes396B#1 = IMul(ilit390F,idx396A);
          int idx396D#1 = idx3770;
          int mulRes396E#1 = IMul(ilit390F,idx396D);
          int idx3970#1 = idx3773;
          int mulRes3971#1 = IMul(ilit390F,idx3970);
          int idx3973#1 = idx3776;
          int mulRes3974#1 = IMul(ilit390F,idx3973);
          int idx3976#1 = idx3779;
          int mulRes3977#1 = IMul(ilit390F,idx3976);
          int idx3979#1 = idx377C;
          int mulRes397A#1 = IMul(ilit390F,idx3979);
          int idx397C#1 = idx377F;
          int mulRes397D#1 = IMul(ilit390F,idx397C);
          int idx397F#1 = idx3782;
          int mulRes3980#1 = IMul(ilit390F,idx397F);
          int idx3982#1 = idx3785;
          int mulRes3983#1 = IMul(ilit390F,idx3982);
          int idx3985#1 = idx3788;
          int mulRes3986#1 = IMul(ilit390F,idx3985);
          int idx3988#1 = idx378B;
          int mulRes3989#1 = IMul(ilit390F,idx3988);
          int idx398B#1 = idx378E;
          int mulRes398C#1 = IMul(ilit390F,idx398B);
          int idx398E#1 = idx3791;
          int mulRes398F#1 = IMul(ilit390F,idx398E);
          int idx3991#1 = idx3794;
          int mulRes3992#1 = IMul(ilit390F,idx3991);
          int idx3994#1 = idx3797;
          int mulRes3995#1 = IMul(ilit390F,idx3994);
          int idx3997#1 = idx379A;
          int mulRes3998#1 = IMul(ilit390F,idx3997);
          int idx399A#1 = idx379D;
          int mulRes399B#1 = IMul(ilit390F,idx399A);
          int idx399D#1 = idx37A0;
          int mulRes399E#1 = IMul(ilit390F,idx399D);
          int idx39A0#1 = idx37A3;
          int mulRes39A1#1 = IMul(ilit390F,idx39A0);
          int idx39A3#1 = idx37A6;
          int mulRes39A4#1 = IMul(ilit390F,idx39A3);
          int idx39A6#1 = idx37A9;
          int mulRes39A7#1 = IMul(ilit390F,idx39A6);
          int idx39A9#1 = idx37AC;
          int mulRes39AA#1 = IMul(ilit390F,idx39A9);
          int idx39AC#1 = idx37AF;
          int mulRes39AD#1 = IMul(ilit390F,idx39AC);
          int idx39AF#1 = idx37B2;
          int mulRes39B0#1 = IMul(ilit390F,idx39AF);
          int idx39B2#1 = idx37B5;
          int mulRes39B3#1 = IMul(ilit390F,idx39B2);
          int idx39B5#1 = idx37B8;
          int mulRes39B6#1 = IMul(ilit390F,idx39B5);
          int idx39B8#1 = idx37BB;
          int mulRes39B9#1 = IMul(ilit390F,idx39B8);
          int idx39BB#1 = idx37BE;
          int mulRes39BC#1 = IMul(ilit390F,idx39BB);
          int idx39BE#1 = idx37C1;
          int mulRes39BF#1 = IMul(ilit390F,idx39BE);
          int idx39C1#1 = idx37C4;
          int mulRes39C2#1 = IMul(ilit390F,idx39C1);
          int idx39C4#1 = idx37C7;
          int mulRes39C5#1 = IMul(ilit390F,idx39C4);
          int idx39C7#1 = idx37CA;
          int mulRes39C8#1 = IMul(ilit390F,idx39C7);
          int idx39CA#1 = idx37CD;
          int mulRes39CB#1 = IMul(ilit390F,idx39CA);
          int idx39CD#1 = idx37D0;
          int mulRes39CE#1 = IMul(ilit390F,idx39CD);
          int idx39D0#1 = idx37D3;
          int mulRes39D1#1 = IMul(ilit390F,idx39D0);
          int idx39D3#1 = idx37D6;
          int mulRes39D4#1 = IMul(ilit390F,idx39D3);
          int idx39D6#1 = idx37D9;
          int mulRes39D7#1 = IMul(ilit390F,idx39D6);
          int idx39D9#1 = idx37DC;
          int mulRes39DA#1 = IMul(ilit390F,idx39D9);
          int idx39DC#1 = idx37DF;
          int mulRes39DD#1 = IMul(ilit390F,idx39DC);
          int idx39DF#1 = idx37E2;
          int mulRes39E0#1 = IMul(ilit390F,idx39DF);
          int idx39E2#1 = idx37E5;
          int mulRes39E3#1 = IMul(ilit390F,idx39E2);
          int idx39E5#1 = idx37E8;
          int mulRes39E6#1 = IMul(ilit390F,idx39E5);
          int idx39E8#1 = idx37EB;
          int mulRes39E9#1 = IMul(ilit390F,idx39E8);
          int idx39EB#1 = idx37EE;
          int mulRes39EC#1 = IMul(ilit390F,idx39EB);
          int idx39EE#1 = idx37F1;
          int mulRes39EF#1 = IMul(ilit390F,idx39EE);
          int idx39F1#1 = idx37F4;
          int mulRes39F2#1 = IMul(ilit390F,idx39F1);
          int idx39F4#1 = idx37F7;
          int mulRes39F5#1 = IMul(ilit390F,idx39F4);
          int idx39F7#1 = idx37FA;
          int mulRes39F8#1 = IMul(ilit390F,idx39F7);
          int idx39FA#1 = idx37FD;
          int mulRes39FB#1 = IMul(ilit390F,idx39FA);
          int idx39FD#1 = idx3800;
          int mulRes39FE#1 = IMul(ilit390F,idx39FD);
          int idx3A00#1 = idx3803;
          int mulRes3A01#1 = IMul(ilit390F,idx3A00);
          int idx3A03#1 = idx3806;
          int mulRes3A04#1 = IMul(ilit390F,idx3A03);
          int idx3A06#1 = idx3809;
          int mulRes3A07#1 = IMul(ilit390F,idx3A06);
          int idx3A09#1 = idx380C;
          int mulRes3A0A#1 = IMul(ilit390F,idx3A09);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3912);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3914);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3917);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391A);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391D);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3920);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3923);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3926);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3929);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392C);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392F);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3932);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3935);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3938);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393B);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393E);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3941);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3944);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3947);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394A);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394D);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3950);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3953);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3956);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3959);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395C);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395F);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3962);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3965);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3968);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396B);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396E);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3971);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3974);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3977);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397A);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397D);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3980);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3983);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3986);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3989);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398C);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398F);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3992);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3995);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3998);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399B);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399E);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A1);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A4);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A7);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AA);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AD);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B0);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B3);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B6);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B9);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BC);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BF);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C2);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C5);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C8);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CB);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CE);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D1);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D4);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D7);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DA);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DD);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E0);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E3);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E6);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E9);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EC);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EF);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F2);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F5);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F8);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FB);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FE);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A01);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A04);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A07);
          real dof3A5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A0A);
          tensor[84] dofs3A5F#1 = <tensor[84]>[dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D,dof3A5E];
          tensor[84] femDofs390E#1 = dofs3A5F;
          real varAcc3BB3#6 = VIndex<3,0>(_t3709);
          real varAcc3BB4#6 = VIndex<3,1>(_t3709);
          real varAcc3BB5#6 = VIndex<3,2>(_t3709);
          real coeff3BB6#126 = 0.1e1;
          real prod3BB7#7 = RMul(coeff3BB6,coeff3BB6);
          real prod3BB8#1 = RMul(coeff3BB6,prod3BB7);
          real basisEval3BB9#1 = RMul(coeff3BB6,prod3BB8);
          real iden3BBA#7 = varAcc3BB5;
          real prod3BBB#6 = RMul(coeff3BB6,iden3BBA);
          real prod3BBC#1 = RMul(coeff3BB6,prod3BBB);
          real basisEval3BBD#1 = RMul(coeff3BB6,prod3BBC);
          real iden3BBE#7 = varAcc3BB4;
          real prod3BBF#6 = RMul(iden3BBE,coeff3BB6);
          real prod3BC0#1 = RMul(coeff3BB6,prod3BBF);
          real basisEval3BC1#1 = RMul(coeff3BB6,prod3BC0);
          real iden3BC2#22 = varAcc3BB3;
          real prod3BC3#1 = RMul(iden3BC2,prod3BB7);
          real basisEval3BC4#1 = RMul(coeff3BB6,prod3BC3);
          real prod23BC5#6 = RMul(iden3BBA,varAcc3BB5);
          real prod3BC6#5 = RMul(coeff3BB6,prod23BC5);
          real prod3BC7#1 = RMul(coeff3BB6,prod3BC6);
          real basisEval3BC8#1 = RMul(coeff3BB6,prod3BC7);
          real prod3BC9#5 = RMul(iden3BBE,iden3BBA);
          real prod3BCA#1 = RMul(coeff3BB6,prod3BC9);
          real basisEval3BCB#1 = RMul(coeff3BB6,prod3BCA);
          real prod23BCC#6 = RMul(iden3BBE,varAcc3BB4);
          real prod3BCD#5 = RMul(prod23BCC,coeff3BB6);
          real prod3BCE#1 = RMul(coeff3BB6,prod3BCD);
          real basisEval3BCF#1 = RMul(coeff3BB6,prod3BCE);
          real prod3BD0#1 = RMul(iden3BC2,prod3BBB);
          real basisEval3BD1#1 = RMul(coeff3BB6,prod3BD0);
          real prod3BD2#1 = RMul(iden3BC2,prod3BBF);
          real basisEval3BD3#1 = RMul(coeff3BB6,prod3BD2);
          real prod23BD4#16 = RMul(iden3BC2,varAcc3BB3);
          real prod3BD5#1 = RMul(prod23BD4,prod3BB7);
          real basisEval3BD6#1 = RMul(coeff3BB6,prod3BD5);
          real prod33BD7#5 = RMul(prod23BC5,varAcc3BB5);
          real prod3BD8#4 = RMul(coeff3BB6,prod33BD7);
          real prod3BD9#1 = RMul(coeff3BB6,prod3BD8);
          real basisEval3BDA#1 = RMul(coeff3BB6,prod3BD9);
          real prod3BDB#4 = RMul(iden3BBE,prod23BC5);
          real prod3BDC#1 = RMul(coeff3BB6,prod3BDB);
          real basisEval3BDD#1 = RMul(coeff3BB6,prod3BDC);
          real prod3BDE#4 = RMul(prod23BCC,iden3BBA);
          real prod3BDF#1 = RMul(coeff3BB6,prod3BDE);
          real basisEval3BE0#1 = RMul(coeff3BB6,prod3BDF);
          real prod33BE1#5 = RMul(prod23BCC,varAcc3BB4);
          real prod3BE2#4 = RMul(prod33BE1,coeff3BB6);
          real prod3BE3#1 = RMul(coeff3BB6,prod3BE2);
          real basisEval3BE4#1 = RMul(coeff3BB6,prod3BE3);
          real prod3BE5#1 = RMul(iden3BC2,prod3BC6);
          real basisEval3BE6#1 = RMul(coeff3BB6,prod3BE5);
          real prod3BE7#1 = RMul(iden3BC2,prod3BC9);
          real basisEval3BE8#1 = RMul(coeff3BB6,prod3BE7);
          real prod3BE9#1 = RMul(iden3BC2,prod3BCD);
          real basisEval3BEA#1 = RMul(coeff3BB6,prod3BE9);
          real prod3BEB#1 = RMul(prod23BD4,prod3BBB);
          real basisEval3BEC#1 = RMul(coeff3BB6,prod3BEB);
          real prod3BED#1 = RMul(prod23BD4,prod3BBF);
          real basisEval3BEE#1 = RMul(coeff3BB6,prod3BED);
          real prod33BEF#11 = RMul(prod23BD4,varAcc3BB3);
          real prod3BF0#1 = RMul(prod33BEF,prod3BB7);
          real basisEval3BF1#1 = RMul(coeff3BB6,prod3BF0);
          real prod43BF2#4 = RMul(prod33BD7,varAcc3BB5);
          real prod3BF3#3 = RMul(coeff3BB6,prod43BF2);
          real prod3BF4#1 = RMul(coeff3BB6,prod3BF3);
          real basisEval3BF5#1 = RMul(coeff3BB6,prod3BF4);
          real prod3BF6#3 = RMul(iden3BBE,prod33BD7);
          real prod3BF7#1 = RMul(coeff3BB6,prod3BF6);
          real basisEval3BF8#1 = RMul(coeff3BB6,prod3BF7);
          real prod3BF9#3 = RMul(prod23BCC,prod23BC5);
          real prod3BFA#1 = RMul(coeff3BB6,prod3BF9);
          real basisEval3BFB#1 = RMul(coeff3BB6,prod3BFA);
          real prod3BFC#3 = RMul(prod33BE1,iden3BBA);
          real prod3BFD#1 = RMul(coeff3BB6,prod3BFC);
          real basisEval3BFE#1 = RMul(coeff3BB6,prod3BFD);
          real prod43BFF#4 = RMul(prod33BE1,varAcc3BB4);
          real prod3C00#3 = RMul(prod43BFF,coeff3BB6);
          real prod3C01#1 = RMul(coeff3BB6,prod3C00);
          real basisEval3C02#1 = RMul(coeff3BB6,prod3C01);
          real prod3C03#1 = RMul(iden3BC2,prod3BD8);
          real basisEval3C04#1 = RMul(coeff3BB6,prod3C03);
          real prod3C05#1 = RMul(iden3BC2,prod3BDB);
          real basisEval3C06#1 = RMul(coeff3BB6,prod3C05);
          real prod3C07#1 = RMul(iden3BC2,prod3BDE);
          real basisEval3C08#1 = RMul(coeff3BB6,prod3C07);
          real prod3C09#1 = RMul(iden3BC2,prod3BE2);
          real basisEval3C0A#1 = RMul(coeff3BB6,prod3C09);
          real prod3C0B#1 = RMul(prod23BD4,prod3BC6);
          real basisEval3C0C#1 = RMul(coeff3BB6,prod3C0B);
          real prod3C0D#1 = RMul(prod23BD4,prod3BC9);
          real basisEval3C0E#1 = RMul(coeff3BB6,prod3C0D);
          real prod3C0F#1 = RMul(prod23BD4,prod3BCD);
          real basisEval3C10#1 = RMul(coeff3BB6,prod3C0F);
          real prod3C11#1 = RMul(prod33BEF,prod3BBB);
          real basisEval3C12#1 = RMul(coeff3BB6,prod3C11);
          real prod3C13#1 = RMul(prod33BEF,prod3BBF);
          real basisEval3C14#1 = RMul(coeff3BB6,prod3C13);
          real prod43C15#7 = RMul(prod33BEF,varAcc3BB3);
          real prod3C16#1 = RMul(prod43C15,prod3BB7);
          real basisEval3C17#1 = RMul(coeff3BB6,prod3C16);
          real prod53C18#3 = RMul(prod43BF2,varAcc3BB5);
          real prod3C19#2 = RMul(coeff3BB6,prod53C18);
          real prod3C1A#1 = RMul(coeff3BB6,prod3C19);
          real basisEval3C1B#1 = RMul(coeff3BB6,prod3C1A);
          real prod3C1C#2 = RMul(iden3BBE,prod43BF2);
          real prod3C1D#1 = RMul(coeff3BB6,prod3C1C);
          real basisEval3C1E#1 = RMul(coeff3BB6,prod3C1D);
          real prod3C1F#2 = RMul(prod23BCC,prod33BD7);
          real prod3C20#1 = RMul(coeff3BB6,prod3C1F);
          real basisEval3C21#1 = RMul(coeff3BB6,prod3C20);
          real prod3C22#2 = RMul(prod33BE1,prod23BC5);
          real prod3C23#1 = RMul(coeff3BB6,prod3C22);
          real basisEval3C24#1 = RMul(coeff3BB6,prod3C23);
          real prod3C25#2 = RMul(prod43BFF,iden3BBA);
          real prod3C26#1 = RMul(coeff3BB6,prod3C25);
          real basisEval3C27#1 = RMul(coeff3BB6,prod3C26);
          real prod53C28#3 = RMul(prod43BFF,varAcc3BB4);
          real prod3C29#2 = RMul(prod53C28,coeff3BB6);
          real prod3C2A#1 = RMul(coeff3BB6,prod3C29);
          real basisEval3C2B#1 = RMul(coeff3BB6,prod3C2A);
          real prod3C2C#1 = RMul(iden3BC2,prod3BF3);
          real basisEval3C2D#1 = RMul(coeff3BB6,prod3C2C);
          real prod3C2E#1 = RMul(iden3BC2,prod3BF6);
          real basisEval3C2F#1 = RMul(coeff3BB6,prod3C2E);
          real prod3C30#1 = RMul(iden3BC2,prod3BF9);
          real basisEval3C31#1 = RMul(coeff3BB6,prod3C30);
          real prod3C32#1 = RMul(iden3BC2,prod3BFC);
          real basisEval3C33#1 = RMul(coeff3BB6,prod3C32);
          real prod3C34#1 = RMul(iden3BC2,prod3C00);
          real basisEval3C35#1 = RMul(coeff3BB6,prod3C34);
          real prod3C36#1 = RMul(prod23BD4,prod3BD8);
          real basisEval3C37#1 = RMul(coeff3BB6,prod3C36);
          real prod3C38#1 = RMul(prod23BD4,prod3BDB);
          real basisEval3C39#1 = RMul(coeff3BB6,prod3C38);
          real prod3C3A#1 = RMul(prod23BD4,prod3BDE);
          real basisEval3C3B#1 = RMul(coeff3BB6,prod3C3A);
          real prod3C3C#1 = RMul(prod23BD4,prod3BE2);
          real basisEval3C3D#1 = RMul(coeff3BB6,prod3C3C);
          real prod3C3E#1 = RMul(prod33BEF,prod3BC6);
          real basisEval3C3F#1 = RMul(coeff3BB6,prod3C3E);
          real prod3C40#1 = RMul(prod33BEF,prod3BC9);
          real basisEval3C41#1 = RMul(coeff3BB6,prod3C40);
          real prod3C42#1 = RMul(prod33BEF,prod3BCD);
          real basisEval3C43#1 = RMul(coeff3BB6,prod3C42);
          real prod3C44#1 = RMul(prod43C15,prod3BBB);
          real basisEval3C45#1 = RMul(coeff3BB6,prod3C44);
          real prod3C46#1 = RMul(prod43C15,prod3BBF);
          real basisEval3C47#1 = RMul(coeff3BB6,prod3C46);
          real prod53C48#4 = RMul(prod43C15,varAcc3BB3);
          real prod3C49#1 = RMul(prod53C48,prod3BB7);
          real basisEval3C4A#1 = RMul(coeff3BB6,prod3C49);
          real prod63C4B#1 = RMul(prod53C18,varAcc3BB5);
          real prod3C4C#1 = RMul(coeff3BB6,prod63C4B);
          real prod3C4D#1 = RMul(coeff3BB6,prod3C4C);
          real basisEval3C4E#1 = RMul(coeff3BB6,prod3C4D);
          real prod3C4F#1 = RMul(iden3BBE,prod53C18);
          real prod3C50#1 = RMul(coeff3BB6,prod3C4F);
          real basisEval3C51#1 = RMul(coeff3BB6,prod3C50);
          real prod3C52#1 = RMul(prod23BCC,prod43BF2);
          real prod3C53#1 = RMul(coeff3BB6,prod3C52);
          real basisEval3C54#1 = RMul(coeff3BB6,prod3C53);
          real prod3C55#1 = RMul(prod33BE1,prod33BD7);
          real prod3C56#1 = RMul(coeff3BB6,prod3C55);
          real basisEval3C57#1 = RMul(coeff3BB6,prod3C56);
          real prod3C58#1 = RMul(prod43BFF,prod23BC5);
          real prod3C59#1 = RMul(coeff3BB6,prod3C58);
          real basisEval3C5A#1 = RMul(coeff3BB6,prod3C59);
          real prod3C5B#1 = RMul(prod53C28,iden3BBA);
          real prod3C5C#1 = RMul(coeff3BB6,prod3C5B);
          real basisEval3C5D#1 = RMul(coeff3BB6,prod3C5C);
          real prod63C5E#1 = RMul(prod53C28,varAcc3BB4);
          real prod3C5F#1 = RMul(prod63C5E,coeff3BB6);
          real prod3C60#1 = RMul(coeff3BB6,prod3C5F);
          real basisEval3C61#1 = RMul(coeff3BB6,prod3C60);
          real prod3C62#1 = RMul(iden3BC2,prod3C19);
          real basisEval3C63#1 = RMul(coeff3BB6,prod3C62);
          real prod3C64#1 = RMul(iden3BC2,prod3C1C);
          real basisEval3C65#1 = RMul(coeff3BB6,prod3C64);
          real prod3C66#1 = RMul(iden3BC2,prod3C1F);
          real basisEval3C67#1 = RMul(coeff3BB6,prod3C66);
          real prod3C68#1 = RMul(iden3BC2,prod3C22);
          real basisEval3C69#1 = RMul(coeff3BB6,prod3C68);
          real prod3C6A#1 = RMul(iden3BC2,prod3C25);
          real basisEval3C6B#1 = RMul(coeff3BB6,prod3C6A);
          real prod3C6C#1 = RMul(iden3BC2,prod3C29);
          real basisEval3C6D#1 = RMul(coeff3BB6,prod3C6C);
          real prod3C6E#1 = RMul(prod23BD4,prod3BF3);
          real basisEval3C6F#1 = RMul(coeff3BB6,prod3C6E);
          real prod3C70#1 = RMul(prod23BD4,prod3BF6);
          real basisEval3C71#1 = RMul(coeff3BB6,prod3C70);
          real prod3C72#1 = RMul(prod23BD4,prod3BF9);
          real basisEval3C73#1 = RMul(coeff3BB6,prod3C72);
          real prod3C74#1 = RMul(prod23BD4,prod3BFC);
          real basisEval3C75#1 = RMul(coeff3BB6,prod3C74);
          real prod3C76#1 = RMul(prod23BD4,prod3C00);
          real basisEval3C77#1 = RMul(coeff3BB6,prod3C76);
          real prod3C78#1 = RMul(prod33BEF,prod3BD8);
          real basisEval3C79#1 = RMul(coeff3BB6,prod3C78);
          real prod3C7A#1 = RMul(prod33BEF,prod3BDB);
          real basisEval3C7B#1 = RMul(coeff3BB6,prod3C7A);
          real prod3C7C#1 = RMul(prod33BEF,prod3BDE);
          real basisEval3C7D#1 = RMul(coeff3BB6,prod3C7C);
          real prod3C7E#1 = RMul(prod33BEF,prod3BE2);
          real basisEval3C7F#1 = RMul(coeff3BB6,prod3C7E);
          real prod3C80#1 = RMul(prod43C15,prod3BC6);
          real basisEval3C81#1 = RMul(coeff3BB6,prod3C80);
          real prod3C82#1 = RMul(prod43C15,prod3BC9);
          real basisEval3C83#1 = RMul(coeff3BB6,prod3C82);
          real prod3C84#1 = RMul(prod43C15,prod3BCD);
          real basisEval3C85#1 = RMul(coeff3BB6,prod3C84);
          real prod3C86#1 = RMul(prod53C48,prod3BBB);
          real basisEval3C87#1 = RMul(coeff3BB6,prod3C86);
          real prod3C88#1 = RMul(prod53C48,prod3BBF);
          real basisEval3C89#1 = RMul(coeff3BB6,prod3C88);
          real prod63C8A#1 = RMul(prod53C48,varAcc3BB3);
          real prod3C8B#1 = RMul(prod63C8A,prod3BB7);
          real basisEval3C8C#1 = RMul(coeff3BB6,prod3C8B);
          tensor[84] intermediateCons3C8D#1 = <tensor[84]>[basisEval3BB9,basisEval3BBD,basisEval3BC1,basisEval3BC4,basisEval3BC8,basisEval3BCB,basisEval3BCF,basisEval3BD1,basisEval3BD3,basisEval3BD6,basisEval3BDA,basisEval3BDD,basisEval3BE0,basisEval3BE4,basisEval3BE6,basisEval3BE8,basisEval3BEA,basisEval3BEC,basisEval3BEE,basisEval3BF1,basisEval3BF5,basisEval3BF8,basisEval3BFB,basisEval3BFE,basisEval3C02,basisEval3C04,basisEval3C06,basisEval3C08,basisEval3C0A,basisEval3C0C,basisEval3C0E,basisEval3C10,basisEval3C12,basisEval3C14,basisEval3C17,basisEval3C1B,basisEval3C1E,basisEval3C21,basisEval3C24,basisEval3C27,basisEval3C2B,basisEval3C2D,basisEval3C2F,basisEval3C31,basisEval3C33,basisEval3C35,basisEval3C37,basisEval3C39,basisEval3C3B,basisEval3C3D,basisEval3C3F,basisEval3C41,basisEval3C43,basisEval3C45,basisEval3C47,basisEval3C4A,basisEval3C4E,basisEval3C51,basisEval3C54,basisEval3C57,basisEval3C5A,basisEval3C5D,basisEval3C61,basisEval3C63,basisEval3C65,basisEval3C67,basisEval3C69,basisEval3C6B,basisEval3C6D,basisEval3C6F,basisEval3C71,basisEval3C73,basisEval3C75,basisEval3C77,basisEval3C79,basisEval3C7B,basisEval3C7D,basisEval3C7F,basisEval3C81,basisEval3C83,basisEval3C85,basisEval3C87,basisEval3C89,basisEval3C8C];
          tensor[84] basisResult3BB2#1 = intermediateCons3C8D;
          real probe_l_83D6A#1 = VDot<84>(femDofs390E,basisResult3BB2);
          real op1_e3_l_93D6D#1 = RSub(probe_l_83D6A,cmin3700);
          real op1_e3_l_103D70#1 = RSub(cmax3702,cmin3700);
          real op1_e3_l_113D73#1 = RDiv(op1_e3_l_93D6D,op1_e3_l_103D70);
          real op1_e3_l_123D76#1 = RSub(_t36AA,_t36A8);
          real op1_e3_l_133D79#1 = RMul(op1_e3_l_113D73,op1_e3_l_123D76);
          real _t3D7C#1 = RAdd(_t36A8,op1_e3_l_133D79);
          real Mtransform3D7F#1 = Transform<IMAGE1D<double[3]>>(cmap246A);
          real MxPos3D81#1 = RMul(Mtransform3D7F,_t3D7C);
          real Ttranslate3D84#1 = Translate<IMAGE1D<double[3]>>(cmap246A);
          real imgPos3D86#2 = RAdd(MxPos3D81,Ttranslate3D84);
          real nd3D89#2 = Floor<1>(imgPos3D86);
          real f3D8B#2 = RSub(imgPos3D86,nd3D89);
          int n3D8E#1 = RealToInt<1>(nd3D89);
          int idx3D90#5 = n3D8E;
          bool isInside3D92#1 = IndexInside<IMAGE1D<double[3]>,2>(idx3D90,cmap246A);
          if isInside3D92 then goto ASSIGN4833 else goto ASSIGN4837
        ASSIGN4833:  preds = [COND3D94]
          int addRes3D97#1 = idx3D90;
          int stride3D98#2 = 3;
          int offp3D99#3 = IMul(stride3D98,addRes3D97);
          real v0_3D9A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D99);
          int ilit3D9B#3 = 1;
          int addRes3D9C#1 = IAdd(idx3D90,ilit3D9B);
          int offp3D9D#3 = IMul(stride3D98,addRes3D9C);
          real v1_3D9E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D9D);
          tensor[2] v_3D9F#1 = <tensor[2]>[v0_3D9A,v1_3D9E];
          int offp3DA0#1 = IAdd(offp3D99,ilit3D9B);
          real v0_3DA1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA0);
          int offp3DA2#1 = IAdd(offp3D9D,ilit3D9B);
          real v1_3DA3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA2);
          tensor[2] v_3DA4#1 = <tensor[2]>[v0_3DA1,v1_3DA3];
          int offset3DA5#2 = 2;
          int offp3DA6#1 = IAdd(offp3D99,offset3DA5);
          real v0_3DA7#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA6);
          int offp3DA8#1 = IAdd(offp3D9D,offset3DA5);
          real v1_3DA9#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA8);
          tensor[2] v_3DAA#1 = <tensor[2]>[v0_3DA7,v1_3DA9];
          tensor[3,2] voxels3DAB#1 = <tensor[3,2]>[v_3D9F,v_3DA4,v_3DAA];
          tensor[3,2] ldvox3D95#1 = voxels3DAB;
          goto JOIN3DC5
        JOIN3DC5:  preds = [ASSIGN3DC2,ASSIGN3E9F]
          tensor[3,2] ldvox3DC3#3 = phi(ldvox3D95,ldvox3DC4)
          real rlit3DC7#1 = 0.1e1;
          real idx3DC8#1 = RSub(f3D8B,rlit3DC7);
          tensor[2] kernX_3DC6#1 = <tensor[2]>[f3D8B,idx3DC8];
          real _f3DD1#1 = 0.1e1;
          real _f3DD2#1 = 0.1e1;
          tensor[2] a03DCD#1 = <tensor[2]>[_f3DD1,_f3DD2];
          real _f3DCF#1 = -0.1e1;
          real _f3DD0#1 = 0.1e1;
          tensor[2] a13DCE#1 = <tensor[2]>[_f3DCF,_f3DD0];
          tensor[2] prod13DD3#1 = VMul<2>(kernX_3DC6,a13DCE);
          tensor[2] kevalX_d0_3DCC#3 = VAdd<2>(a03DCD,prod13DD3);
          tensor[2] projIx3DDD#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC3);
          real vdot3DDE#1 = VDot<2>(projIx3DDD,kevalX_d0_3DCC);
          tensor[2] projIx3DDF#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC3);
          real vdot3DE0#1 = VDot<2>(projIx3DDF,kevalX_d0_3DCC);
          tensor[2] projIx3DE1#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC3);
          real vdot3DE2#1 = VDot<2>(projIx3DE1,kevalX_d0_3DCC);
          tensor[3] mcol3DDC#1 = <tensor[3]>[vdot3DDE,vdot3DE0,vdot3DE2];
          goto JOIN3DEC
        JOIN3DEC:  preds = [ASSIGN3DEA,COND3708]
          tensor[3] mcol3DEB#3 = phi(mcol3DDC,mcol3704)
          real realLit3DEE#1 = 0.1e1;
          real op1_e3_l_213DED#1 = RDiv(realLit3DEE,op1_e3_l_836B1);
          tensor[3] op1_e3_l_223DF2#1 = VScale<3>(op1_e3_l_213DED,step36A5);
          tensor[3] op1_e3_l_233DF5#1 = VNeg<3>(op1_e3_l_223DF2);
          real op1_e3_l_243DF8#2 = VDot<3>(op1_e3_l_233DF5,litwsp2494);
          real op1_e3_l_253DFB#1 = RMul(op1_e3_l_243DF8,op1_e3_l_243DF8);
          real op1_e3_l_263DFE#1 = RMul(phKd24A2,op1_e3_l_253DFB);
          real op1_e3_l_283E01#1 = RSub(rayN24AC,camNearVsp2490);
          real op1_e3_l_293E04#1 = RSub(camFarVsp2492,camNearVsp2490);
          real op1_e3_l_303E07#1 = RDiv(op1_e3_l_283E01,op1_e3_l_293E04);
          tensor[3] op1_e3_l_313E0A#1 = VSub<3>(mcFar248A,mcNear2488);
          tensor[3] op1_e3_l_323E0D#1 = VScale<3>(op1_e3_l_303E07,op1_e3_l_313E0A);
          real op1_e3_l_333E10#3 = RAdd(phKa24A0,op1_e3_l_263DFE);
          tensor[3] op1_e3_l_343E13#3 = VAdd<3>(mcNear2488,op1_e3_l_323E0D);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E13);
          real r3E18#1 = TensorIndex<tensor[3],[0]>(mcol3DEB);
          real r3E19#1 = RMul(op1_e3_l_333E10,r3E17);
          real r3E1A#1 = RMul(r3E19,r3E18);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E13);
          real r3E1C#1 = TensorIndex<tensor[3],[1]>(mcol3DEB);
          real r3E1D#1 = RMul(op1_e3_l_333E10,r3E1B);
          real r3E1E#1 = RMul(r3E1D,r3E1C);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E13);
          real r3E20#1 = TensorIndex<tensor[3],[2]>(mcol3DEB);
          real r3E21#1 = RMul(op1_e3_l_333E10,r3E1F);
          real r3E22#1 = RMul(r3E21,r3E20);
          tensor[3] op1_e3_l_353E16#1 = <tensor[3]>[r3E1A,r3E1E,r3E22];
          real r3E32#1 = _t36AA;
          real r3E33#3 = RMul(phKs24A4,scomp36FE);
          real r3E34#1 = RMul(r3E33,r3E32);
          real r3E35#1 = _t36AA;
          real r3E36#1 = RMul(r3E33,r3E35);
          real r3E37#1 = _t36AA;
          real r3E38#1 = RMul(r3E33,r3E37);
          tensor[3] op1_e3_l_363E31#1 = <tensor[3]>[r3E34,r3E36,r3E38];
          real op1_e3_l_373E42#2 = RSub(_t36AA,_t36D5);
          tensor[3] op1_e3_l_383E45#3 = VAdd<3>(op1_e3_l_353E16,op1_e3_l_363E31);
          real r3E49#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E45);
          real r3E4A#3 = RMul(transp24AA,op1_e3_l_373E42);
          real r3E4B#1 = RMul(r3E4A,r3E49);
          real r3E4C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E45);
          real r3E4D#1 = RMul(r3E4A,r3E4C);
          real r3E4E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E45);
          real r3E4F#1 = RMul(r3E4A,r3E4E);
          tensor[3] op1_e3_l_393E48#1 = <tensor[3]>[r3E4B,r3E4D,r3E4F];
          tensor[3] rgb3E59#2 = VAdd<3>(rgb24A8,op1_e3_l_393E48);
          real op1_e3_l_53E5C#1 = RSub(_t36AA,op1_e3_l_373E42);
          real transp3E5F#2 = RMul(transp24AA,op1_e3_l_53E5C);
          bool _t3E62#1 = LT<real>(transp3E5F,transp0247C);
          if _t3E62 then goto SAVE3E65 else goto JOIN3E6A
        SAVE3E65:  preds = [COND3E64]
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = _t36A8;
          stabilize
          goto JOIN3E6A
        JOIN3E6A:  preds = [*STABILIZE3E68,COND3E64]
          real transp3E69#1 = phi(transp3E5F)
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = transp3E69;
          active
        ASSIGN4837:  preds = [COND3D94]
          int addRes3E70#1 = idx3D90;
          int ix3E71#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,addRes3E70);
          int stride3E72#2 = 3;
          int offp3E73#3 = IMul(stride3E72,ix3E71);
          real v0_3E74#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E73);
          int ilit3E75#3 = 1;
          int addRes3E76#1 = IAdd(idx3D90,ilit3E75);
          int ix3E77#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,addRes3E76);
          int offp3E78#3 = IMul(stride3E72,ix3E77);
          real v1_3E79#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E78);
          tensor[2] v_3E7A#1 = <tensor[2]>[v0_3E74,v1_3E79];
          int offp3E7B#1 = IAdd(offp3E73,ilit3E75);
          real v0_3E7C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7B);
          int offp3E7D#1 = IAdd(offp3E78,ilit3E75);
          real v1_3E7E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7D);
          tensor[2] v_3E7F#1 = <tensor[2]>[v0_3E7C,v1_3E7E];
          int offset3E80#2 = 2;
          int offp3E81#1 = IAdd(offp3E73,offset3E80);
          real v0_3E82#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E81);
          int offp3E83#1 = IAdd(offp3E78,offset3E80);
          real v1_3E84#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E83);
          tensor[2] v_3E85#1 = <tensor[2]>[v0_3E82,v1_3E84];
          tensor[3,2] voxels3E86#1 = <tensor[3,2]>[v_3E7A,v_3E7F,v_3E85];
          tensor[3,2] ldvox3DC4#1 = voxels3E86;
          goto JOIN3DC5
        ASSIGN3EA1:  preds = [COND2D6E]
          tensor[3,3] Mtransform3EA0#12 = Transform<IMAGE3D<float[]>>(umm2472);
          tensor[3] projParam3EA3#1 = ProjectLast<tensor[3,3],[0]>(Mtransform3EA0);
          real vdot3EA4#1 = VDot<3>(projParam3EA3,pos24B8);
          tensor[3] projParam3EA5#1 = ProjectLast<tensor[3,3],[1]>(Mtransform3EA0);
          real vdot3EA6#1 = VDot<3>(projParam3EA5,pos24B8);
          tensor[3] projParam3EA7#1 = ProjectLast<tensor[3,3],[2]>(Mtransform3EA0);
          real vdot3EA8#1 = VDot<3>(projParam3EA7,pos24B8);
          tensor[3] MxPos3EA2#1 = <tensor[3]>[vdot3EA4,vdot3EA6,vdot3EA8];
          tensor[3] Ttranslate3EB1#1 = Translate<IMAGE3D<float[]>>(umm2472);
          tensor[3] imgPos3EB3#2 = VAdd<3>(MxPos3EA2,Ttranslate3EB1);
          tensor[3] nd3EB6#2 = Floor<3>(imgPos3EB3);
          tensor[3] f3EB8#3 = VSub<3>(imgPos3EB3,nd3EB6);
          int[3] n3EBB#3 = RealToInt<3>(nd3EB6);
          real r3EBE#2 = TensorIndex<tensor[3,3],[0,0]>(Mtransform3EA0);
          real r3EBF#2 = TensorIndex<tensor[3,3],[1,0]>(Mtransform3EA0);
          real r3EC0#2 = TensorIndex<tensor[3,3],[2,0]>(Mtransform3EA0);
          tensor[3] tensor3EC1#2 = <tensor[3]>[r3EBE,r3EBF,r3EC0];
          real r3EC2#2 = TensorIndex<tensor[3,3],[0,1]>(Mtransform3EA0);
          real r3EC3#2 = TensorIndex<tensor[3,3],[1,1]>(Mtransform3EA0);
          real r3EC4#2 = TensorIndex<tensor[3,3],[2,1]>(Mtransform3EA0);
          tensor[3] tensor3EC5#2 = <tensor[3]>[r3EC2,r3EC3,r3EC4];
          real r3EC6#2 = TensorIndex<tensor[3,3],[0,2]>(Mtransform3EA0);
          real r3EC7#2 = TensorIndex<tensor[3,3],[1,2]>(Mtransform3EA0);
          real r3EC8#2 = TensorIndex<tensor[3,3],[2,2]>(Mtransform3EA0);
          tensor[3] tensor3EC9#2 = <tensor[3]>[r3EC6,r3EC7,r3EC8];
          int lit3ED8#3 = -1;
          int idx3EDA#1 = 0;
          int nX_3EDC#1 = Subscript<int[3]>(n3EBB,idx3EDA);
          int idx3EDE#2 = IAdd(nX_3EDC,lit3ED8);
          int idx3EE0#3 = 1;
          int nY_3EE2#1 = Subscript<int[3]>(n3EBB,idx3EE0);
          int idx3EE4#2 = IAdd(nY_3EE2,lit3ED8);
          int idx3EE6#3 = 2;
          int nZ_3EE8#1 = Subscript<int[3]>(n3EBB,idx3EE6);
          int idx3EEA#2 = IAdd(nZ_3EE8,lit3ED8);
          int idx3EF0#4 = idx3EDE;
          int ilit3EF1#3 = 1;
          int idx3EF2#4 = idx3EE4;
          int ilit3EF3#3 = 2;
          int idx3EF4#4 = idx3EEA;
          int ilit3EF5#20 = 300;
          int addRes3EF6#16 = idx3EF0;
          int addRes3EF7#4 = idx3EF2;
          int addRes3EF8#1 = idx3EF4;
          int mulRes3EF9#4 = IMul(ilit3EF5,addRes3EF8);
          int addRes3EFA#1 = IAdd(addRes3EF7,mulRes3EF9);
          int mulRes3EFB#4 = IMul(ilit3EF5,addRes3EFA);
          int addRes3EFC#1 = IAdd(addRes3EF6,mulRes3EFB);
          real v000_3EFD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFC);
          int addRes3EFE#16 = IAdd(idx3EF0,ilit3EF1);
          int addRes3EFF#1 = IAdd(addRes3EFE,mulRes3EFB);
          real v001_3F00#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFF);
          int addRes3F01#16 = IAdd(idx3EF0,ilit3EF3);
          int addRes3F02#1 = IAdd(addRes3F01,mulRes3EFB);
          real v002_3F03#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F02);
          int ilit3F04#3 = 3;
          int addRes3F05#16 = IAdd(idx3EF0,ilit3F04);
          int addRes3F06#1 = IAdd(addRes3F05,mulRes3EFB);
          real v003_3F07#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F06);
          tensor[4] v00_3F08#1 = <tensor[4]>[v000_3EFD,v001_3F00,v002_3F03,v003_3F07];
          int addRes3F09#4 = IAdd(idx3EF2,ilit3EF1);
          int addRes3F0A#1 = IAdd(addRes3F09,mulRes3EF9);
          int mulRes3F0B#4 = IMul(ilit3EF5,addRes3F0A);
          int addRes3F0C#1 = IAdd(addRes3EF6,mulRes3F0B);
          real v010_3F0D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0C);
          int addRes3F0E#1 = IAdd(addRes3EFE,mulRes3F0B);
          real v011_3F0F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0E);
          int addRes3F10#1 = IAdd(addRes3F01,mulRes3F0B);
          real v012_3F11#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F10);
          int addRes3F12#1 = IAdd(addRes3F05,mulRes3F0B);
          real v013_3F13#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F12);
          tensor[4] v01_3F14#1 = <tensor[4]>[v010_3F0D,v011_3F0F,v012_3F11,v013_3F13];
          int addRes3F15#4 = IAdd(idx3EF2,ilit3EF3);
          int addRes3F16#1 = IAdd(addRes3F15,mulRes3EF9);
          int mulRes3F17#4 = IMul(ilit3EF5,addRes3F16);
          int addRes3F18#1 = IAdd(addRes3EF6,mulRes3F17);
          real v020_3F19#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F18);
          int addRes3F1A#1 = IAdd(addRes3EFE,mulRes3F17);
          real v021_3F1B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1A);
          int addRes3F1C#1 = IAdd(addRes3F01,mulRes3F17);
          real v022_3F1D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1C);
          int addRes3F1E#1 = IAdd(addRes3F05,mulRes3F17);
          real v023_3F1F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1E);
          tensor[4] v02_3F20#1 = <tensor[4]>[v020_3F19,v021_3F1B,v022_3F1D,v023_3F1F];
          int addRes3F21#4 = IAdd(idx3EF2,ilit3F04);
          int addRes3F22#1 = IAdd(addRes3F21,mulRes3EF9);
          int mulRes3F23#4 = IMul(ilit3EF5,addRes3F22);
          int addRes3F24#1 = IAdd(addRes3EF6,mulRes3F23);
          real v030_3F25#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F24);
          int addRes3F26#1 = IAdd(addRes3EFE,mulRes3F23);
          real v031_3F27#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F26);
          int addRes3F28#1 = IAdd(addRes3F01,mulRes3F23);
          real v032_3F29#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F28);
          int addRes3F2A#1 = IAdd(addRes3F05,mulRes3F23);
          real v033_3F2B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F2A);
          tensor[4] v03_3F2C#1 = <tensor[4]>[v030_3F25,v031_3F27,v032_3F29,v033_3F2B];
          int addRes3F2E#1 = IAdd(idx3EF4,ilit3EF1);
          int mulRes3F2F#4 = IMul(ilit3EF5,addRes3F2E);
          int addRes3F30#1 = IAdd(addRes3EF7,mulRes3F2F);
          int mulRes3F31#4 = IMul(ilit3EF5,addRes3F30);
          int addRes3F32#1 = IAdd(addRes3EF6,mulRes3F31);
          real v100_3F33#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F32);
          int addRes3F34#1 = IAdd(addRes3EFE,mulRes3F31);
          real v101_3F35#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F34);
          int addRes3F36#1 = IAdd(addRes3F01,mulRes3F31);
          real v102_3F37#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F36);
          int addRes3F38#1 = IAdd(addRes3F05,mulRes3F31);
          real v103_3F39#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F38);
          tensor[4] v10_3F3A#1 = <tensor[4]>[v100_3F33,v101_3F35,v102_3F37,v103_3F39];
          int addRes3F3B#1 = IAdd(addRes3F09,mulRes3F2F);
          int mulRes3F3C#4 = IMul(ilit3EF5,addRes3F3B);
          int addRes3F3D#1 = IAdd(addRes3EF6,mulRes3F3C);
          real v110_3F3E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3D);
          int addRes3F3F#1 = IAdd(addRes3EFE,mulRes3F3C);
          real v111_3F40#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3F);
          int addRes3F41#1 = IAdd(addRes3F01,mulRes3F3C);
          real v112_3F42#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F41);
          int addRes3F43#1 = IAdd(addRes3F05,mulRes3F3C);
          real v113_3F44#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F43);
          tensor[4] v11_3F45#1 = <tensor[4]>[v110_3F3E,v111_3F40,v112_3F42,v113_3F44];
          int addRes3F46#1 = IAdd(addRes3F15,mulRes3F2F);
          int mulRes3F47#4 = IMul(ilit3EF5,addRes3F46);
          int addRes3F48#1 = IAdd(addRes3EF6,mulRes3F47);
          real v120_3F49#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F48);
          int addRes3F4A#1 = IAdd(addRes3EFE,mulRes3F47);
          real v121_3F4B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4A);
          int addRes3F4C#1 = IAdd(addRes3F01,mulRes3F47);
          real v122_3F4D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4C);
          int addRes3F4E#1 = IAdd(addRes3F05,mulRes3F47);
          real v123_3F4F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4E);
          tensor[4] v12_3F50#1 = <tensor[4]>[v120_3F49,v121_3F4B,v122_3F4D,v123_3F4F];
          int addRes3F51#1 = IAdd(addRes3F21,mulRes3F2F);
          int mulRes3F52#4 = IMul(ilit3EF5,addRes3F51);
          int addRes3F53#1 = IAdd(addRes3EF6,mulRes3F52);
          real v130_3F54#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F53);
          int addRes3F55#1 = IAdd(addRes3EFE,mulRes3F52);
          real v131_3F56#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F55);
          int addRes3F57#1 = IAdd(addRes3F01,mulRes3F52);
          real v132_3F58#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F57);
          int addRes3F59#1 = IAdd(addRes3F05,mulRes3F52);
          real v133_3F5A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F59);
          tensor[4] v13_3F5B#1 = <tensor[4]>[v130_3F54,v131_3F56,v132_3F58,v133_3F5A];
          int addRes3F5D#1 = IAdd(idx3EF4,ilit3EF3);
          int mulRes3F5E#4 = IMul(ilit3EF5,addRes3F5D);
          int addRes3F5F#1 = IAdd(addRes3EF7,mulRes3F5E);
          int mulRes3F60#4 = IMul(ilit3EF5,addRes3F5F);
          int addRes3F61#1 = IAdd(addRes3EF6,mulRes3F60);
          real v200_3F62#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F61);
          int addRes3F63#1 = IAdd(addRes3EFE,mulRes3F60);
          real v201_3F64#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F63);
          int addRes3F65#1 = IAdd(addRes3F01,mulRes3F60);
          real v202_3F66#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F65);
          int addRes3F67#1 = IAdd(addRes3F05,mulRes3F60);
          real v203_3F68#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F67);
          tensor[4] v20_3F69#1 = <tensor[4]>[v200_3F62,v201_3F64,v202_3F66,v203_3F68];
          int addRes3F6A#1 = IAdd(addRes3F09,mulRes3F5E);
          int mulRes3F6B#4 = IMul(ilit3EF5,addRes3F6A);
          int addRes3F6C#1 = IAdd(addRes3EF6,mulRes3F6B);
          real v210_3F6D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6C);
          int addRes3F6E#1 = IAdd(addRes3EFE,mulRes3F6B);
          real v211_3F6F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6E);
          int addRes3F70#1 = IAdd(addRes3F01,mulRes3F6B);
          real v212_3F71#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F70);
          int addRes3F72#1 = IAdd(addRes3F05,mulRes3F6B);
          real v213_3F73#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F72);
          tensor[4] v21_3F74#1 = <tensor[4]>[v210_3F6D,v211_3F6F,v212_3F71,v213_3F73];
          int addRes3F75#1 = IAdd(addRes3F15,mulRes3F5E);
          int mulRes3F76#4 = IMul(ilit3EF5,addRes3F75);
          int addRes3F77#1 = IAdd(addRes3EF6,mulRes3F76);
          real v220_3F78#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F77);
          int addRes3F79#1 = IAdd(addRes3EFE,mulRes3F76);
          real v221_3F7A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F79);
          int addRes3F7B#1 = IAdd(addRes3F01,mulRes3F76);
          real v222_3F7C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7B);
          int addRes3F7D#1 = IAdd(addRes3F05,mulRes3F76);
          real v223_3F7E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7D);
          tensor[4] v22_3F7F#1 = <tensor[4]>[v220_3F78,v221_3F7A,v222_3F7C,v223_3F7E];
          int addRes3F80#1 = IAdd(addRes3F21,mulRes3F5E);
          int mulRes3F81#4 = IMul(ilit3EF5,addRes3F80);
          int addRes3F82#1 = IAdd(addRes3EF6,mulRes3F81);
          real v230_3F83#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F82);
          int addRes3F84#1 = IAdd(addRes3EFE,mulRes3F81);
          real v231_3F85#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F84);
          int addRes3F86#1 = IAdd(addRes3F01,mulRes3F81);
          real v232_3F87#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F86);
          int addRes3F88#1 = IAdd(addRes3F05,mulRes3F81);
          real v233_3F89#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F88);
          tensor[4] v23_3F8A#1 = <tensor[4]>[v230_3F83,v231_3F85,v232_3F87,v233_3F89];
          int addRes3F8C#1 = IAdd(idx3EF4,ilit3F04);
          int mulRes3F8D#4 = IMul(ilit3EF5,addRes3F8C);
          int addRes3F8E#1 = IAdd(addRes3EF7,mulRes3F8D);
          int mulRes3F8F#4 = IMul(ilit3EF5,addRes3F8E);
          int addRes3F90#1 = IAdd(addRes3EF6,mulRes3F8F);
          real v300_3F91#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F90);
          int addRes3F92#1 = IAdd(addRes3EFE,mulRes3F8F);
          real v301_3F93#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F92);
          int addRes3F94#1 = IAdd(addRes3F01,mulRes3F8F);
          real v302_3F95#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F94);
          int addRes3F96#1 = IAdd(addRes3F05,mulRes3F8F);
          real v303_3F97#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F96);
          tensor[4] v30_3F98#1 = <tensor[4]>[v300_3F91,v301_3F93,v302_3F95,v303_3F97];
          int addRes3F99#1 = IAdd(addRes3F09,mulRes3F8D);
          int mulRes3F9A#4 = IMul(ilit3EF5,addRes3F99);
          int addRes3F9B#1 = IAdd(addRes3EF6,mulRes3F9A);
          real v310_3F9C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9B);
          int addRes3F9D#1 = IAdd(addRes3EFE,mulRes3F9A);
          real v311_3F9E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9D);
          int addRes3F9F#1 = IAdd(addRes3F01,mulRes3F9A);
          real v312_3FA0#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9F);
          int addRes3FA1#1 = IAdd(addRes3F05,mulRes3F9A);
          real v313_3FA2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA1);
          tensor[4] v31_3FA3#1 = <tensor[4]>[v310_3F9C,v311_3F9E,v312_3FA0,v313_3FA2];
          int addRes3FA4#1 = IAdd(addRes3F15,mulRes3F8D);
          int mulRes3FA5#4 = IMul(ilit3EF5,addRes3FA4);
          int addRes3FA6#1 = IAdd(addRes3EF6,mulRes3FA5);
          real v320_3FA7#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA6);
          int addRes3FA8#1 = IAdd(addRes3EFE,mulRes3FA5);
          real v321_3FA9#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA8);
          int addRes3FAA#1 = IAdd(addRes3F01,mulRes3FA5);
          real v322_3FAB#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAA);
          int addRes3FAC#1 = IAdd(addRes3F05,mulRes3FA5);
          real v323_3FAD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAC);
          tensor[4] v32_3FAE#1 = <tensor[4]>[v320_3FA7,v321_3FA9,v322_3FAB,v323_3FAD];
          int addRes3FAF#1 = IAdd(addRes3F21,mulRes3F8D);
          int mulRes3FB0#4 = IMul(ilit3EF5,addRes3FAF);
          int addRes3FB1#1 = IAdd(addRes3EF6,mulRes3FB0);
          real v330_3FB2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB1);
          int addRes3FB3#1 = IAdd(addRes3EFE,mulRes3FB0);
          real v331_3FB4#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB3);
          int addRes3FB5#1 = IAdd(addRes3F01,mulRes3FB0);
          real v332_3FB6#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB5);
          int addRes3FB7#1 = IAdd(addRes3F05,mulRes3FB0);
          real v333_3FB8#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB7);
          tensor[4] v33_3FB9#1 = <tensor[4]>[v330_3FB2,v331_3FB4,v332_3FB6,v333_3FB8];
          real vZ_408A#4 = VIndex<3,2>(f3EB8);
          real rlit4091#1 = 0.1e1;
          real idx4092#1 = RAdd(vZ_408A,rlit4091);
          real rlit408F#1 = 0.1e1;
          real idx4090#1 = RSub(vZ_408A,rlit408F);
          real rlit408D#1 = 0.2e1;
          real idx408E#1 = RSub(vZ_408A,rlit408D);
          tensor[4] kernZ_408C#6 = <tensor[4]>[idx4092,vZ_408A,idx4090,idx408E];
          real _f40AB#1 = 0.133333333333e1;
          real _f40AC#1 = 0.666666666667e0;
          real _f40AD#1 = 0.666666666667e0;
          real _f40AE#1 = 0.133333333333e1;
          tensor[4] a0409B#1 = <tensor[4]>[_f40AB,_f40AC,_f40AD,_f40AE];
          real _f40A7#1 = -0.2e1;
          real _f40A8#1 = 0.e0;
          real _f40A9#1 = 0.e0;
          real _f40AA#1 = 0.2e1;
          tensor[4] a1409C#1 = <tensor[4]>[_f40A7,_f40A8,_f40A9,_f40AA];
          real _f40A3#1 = 0.1e1;
          real _f40A4#1 = -0.1e1;
          real _f40A5#1 = -0.1e1;
          real _f40A6#1 = 0.1e1;
          tensor[4] a2409D#1 = <tensor[4]>[_f40A3,_f40A4,_f40A5,_f40A6];
          real _f409F#1 = -0.166666666667e0;
          real _f40A0#1 = 0.5e0;
          real _f40A1#1 = -0.5e0;
          real _f40A2#1 = 0.166666666667e0;
          tensor[4] a3409E#1 = <tensor[4]>[_f409F,_f40A0,_f40A1,_f40A2];
          tensor[4] prod340AF#1 = VMul<4>(kernZ_408C,a3409E);
          tensor[4] sum240B0#1 = VAdd<4>(a2409D,prod340AF);
          tensor[4] prod240B1#1 = VMul<4>(kernZ_408C,sum240B0);
          tensor[4] sum140B2#1 = VAdd<4>(a1409C,prod240B1);
          tensor[4] prod140B3#1 = VMul<4>(kernZ_408C,sum140B2);
          tensor[4] kevalZ_d0_409A#5 = VAdd<4>(a0409B,prod140B3);
          real _f40DA#1 = -0.2e1;
          real _f40DB#1 = 0.e0;
          real _f40DC#1 = 0.e0;
          real _f40DD#1 = 0.2e1;
          tensor[4] a040CF#1 = <tensor[4]>[_f40DA,_f40DB,_f40DC,_f40DD];
          real _f40D6#1 = 0.2e1;
          real _f40D7#1 = -0.2e1;
          real _f40D8#1 = -0.2e1;
          real _f40D9#1 = 0.2e1;
          tensor[4] a140D0#1 = <tensor[4]>[_f40D6,_f40D7,_f40D8,_f40D9];
          real _f40D2#1 = -0.5e0;
          real _f40D3#1 = 0.15e1;
          real _f40D4#1 = -0.15e1;
          real _f40D5#1 = 0.5e0;
          tensor[4] a240D1#1 = <tensor[4]>[_f40D2,_f40D3,_f40D4,_f40D5];
          tensor[4] prod240DE#1 = VMul<4>(kernZ_408C,a240D1);
          tensor[4] sum140DF#1 = VAdd<4>(a140D0,prod240DE);
          tensor[4] prod140E0#1 = VMul<4>(kernZ_408C,sum140DF);
          tensor[4] kevalZ_d1_40CE#3 = VAdd<4>(a040CF,prod140E0);
          real _f40FB#1 = 0.2e1;
          real _f40FC#1 = -0.2e1;
          real _f40FD#1 = -0.2e1;
          real _f40FE#1 = 0.2e1;
          tensor[4] a040F5#1 = <tensor[4]>[_f40FB,_f40FC,_f40FD,_f40FE];
          real _f40F7#1 = -0.1e1;
          real _f40F8#1 = 0.3e1;
          real _f40F9#1 = -0.3e1;
          real _f40FA#1 = 0.1e1;
          tensor[4] a140F6#1 = <tensor[4]>[_f40F7,_f40F8,_f40F9,_f40FA];
          tensor[4] prod140FF#1 = VMul<4>(kernZ_408C,a140F6);
          tensor[4] kevalZ_d2_40F4#1 = VAdd<4>(a040F5,prod140FF);
          real vY_410E#4 = VIndex<3,1>(f3EB8);
          real rlit4115#1 = 0.1e1;
          real idx4116#1 = RAdd(vY_410E,rlit4115);
          real rlit4113#1 = 0.1e1;
          real idx4114#1 = RSub(vY_410E,rlit4113);
          real rlit4111#1 = 0.2e1;
          real idx4112#1 = RSub(vY_410E,rlit4111);
          tensor[4] kernY_4110#6 = <tensor[4]>[idx4116,vY_410E,idx4114,idx4112];
          real _f412F#1 = 0.133333333333e1;
          real _f4130#1 = 0.666666666667e0;
          real _f4131#1 = 0.666666666667e0;
          real _f4132#1 = 0.133333333333e1;
          tensor[4] a0411F#1 = <tensor[4]>[_f412F,_f4130,_f4131,_f4132];
          real _f412B#1 = -0.2e1;
          real _f412C#1 = 0.e0;
          real _f412D#1 = 0.e0;
          real _f412E#1 = 0.2e1;
          tensor[4] a14120#1 = <tensor[4]>[_f412B,_f412C,_f412D,_f412E];
          real _f4127#1 = 0.1e1;
          real _f4128#1 = -0.1e1;
          real _f4129#1 = -0.1e1;
          real _f412A#1 = 0.1e1;
          tensor[4] a24121#1 = <tensor[4]>[_f4127,_f4128,_f4129,_f412A];
          real _f4123#1 = -0.166666666667e0;
          real _f4124#1 = 0.5e0;
          real _f4125#1 = -0.5e0;
          real _f4126#1 = 0.166666666667e0;
          tensor[4] a34122#1 = <tensor[4]>[_f4123,_f4124,_f4125,_f4126];
          tensor[4] prod34133#1 = VMul<4>(kernY_4110,a34122);
          tensor[4] sum24134#1 = VAdd<4>(a24121,prod34133);
          tensor[4] prod24135#1 = VMul<4>(kernY_4110,sum24134);
          tensor[4] sum14136#1 = VAdd<4>(a14120,prod24135);
          tensor[4] prod14137#1 = VMul<4>(kernY_4110,sum14136);
          tensor[4] kevalY_d0_411E#20 = VAdd<4>(a0411F,prod14137);
          real _f415E#1 = -0.2e1;
          real _f415F#1 = 0.e0;
          real _f4160#1 = 0.e0;
          real _f4161#1 = 0.2e1;
          tensor[4] a04153#1 = <tensor[4]>[_f415E,_f415F,_f4160,_f4161];
          real _f415A#1 = 0.2e1;
          real _f415B#1 = -0.2e1;
          real _f415C#1 = -0.2e1;
          real _f415D#1 = 0.2e1;
          tensor[4] a14154#1 = <tensor[4]>[_f415A,_f415B,_f415C,_f415D];
          real _f4156#1 = -0.5e0;
          real _f4157#1 = 0.15e1;
          real _f4158#1 = -0.15e1;
          real _f4159#1 = 0.5e0;
          tensor[4] a24155#1 = <tensor[4]>[_f4156,_f4157,_f4158,_f4159];
          tensor[4] prod24162#1 = VMul<4>(kernY_4110,a24155);
          tensor[4] sum14163#1 = VAdd<4>(a14154,prod24162);
          tensor[4] prod14164#1 = VMul<4>(kernY_4110,sum14163);
          tensor[4] kevalY_d1_4152#12 = VAdd<4>(a04153,prod14164);
          real _f417F#1 = 0.2e1;
          real _f4180#1 = -0.2e1;
          real _f4181#1 = -0.2e1;
          real _f4182#1 = 0.2e1;
          tensor[4] a04179#1 = <tensor[4]>[_f417F,_f4180,_f4181,_f4182];
          real _f417B#1 = -0.1e1;
          real _f417C#1 = 0.3e1;
          real _f417D#1 = -0.3e1;
          real _f417E#1 = 0.1e1;
          tensor[4] a1417A#1 = <tensor[4]>[_f417B,_f417C,_f417D,_f417E];
          tensor[4] prod14183#1 = VMul<4>(kernY_4110,a1417A);
          tensor[4] kevalY_d2_4178#4 = VAdd<4>(a04179,prod14183);
          real vX_4192#4 = VIndex<3,0>(f3EB8);
          real rlit4199#1 = 0.1e1;
          real idx419A#1 = RAdd(vX_4192,rlit4199);
          real rlit4197#1 = 0.1e1;
          real idx4198#1 = RSub(vX_4192,rlit4197);
          real rlit4195#1 = 0.2e1;
          real idx4196#1 = RSub(vX_4192,rlit4195);
          tensor[4] kernX_4194#6 = <tensor[4]>[idx419A,vX_4192,idx4198,idx4196];
          real _f41B3#1 = 0.133333333333e1;
          real _f41B4#1 = 0.666666666667e0;
          real _f41B5#1 = 0.666666666667e0;
          real _f41B6#1 = 0.133333333333e1;
          tensor[4] a041A3#1 = <tensor[4]>[_f41B3,_f41B4,_f41B5,_f41B6];
          real _f41AF#1 = -0.2e1;
          real _f41B0#1 = 0.e0;
          real _f41B1#1 = 0.e0;
          real _f41B2#1 = 0.2e1;
          tensor[4] a141A4#1 = <tensor[4]>[_f41AF,_f41B0,_f41B1,_f41B2];
          real _f41AB#1 = 0.1e1;
          real _f41AC#1 = -0.1e1;
          real _f41AD#1 = -0.1e1;
          real _f41AE#1 = 0.1e1;
          tensor[4] a241A5#1 = <tensor[4]>[_f41AB,_f41AC,_f41AD,_f41AE];
          real _f41A7#1 = -0.166666666667e0;
          real _f41A8#1 = 0.5e0;
          real _f41A9#1 = -0.5e0;
          real _f41AA#1 = 0.166666666667e0;
          tensor[4] a341A6#1 = <tensor[4]>[_f41A7,_f41A8,_f41A9,_f41AA];
          tensor[4] prod341B7#1 = VMul<4>(kernX_4194,a341A6);
          tensor[4] sum241B8#1 = VAdd<4>(a241A5,prod341B7);
          tensor[4] prod241B9#1 = VMul<4>(kernX_4194,sum241B8);
          tensor[4] sum141BA#1 = VAdd<4>(a141A4,prod241B9);
          tensor[4] prod141BB#1 = VMul<4>(kernX_4194,sum141BA);
          tensor[4] kevalX_d0_41A2#32 = VAdd<4>(a041A3,prod141BB);
          real _f41E2#1 = -0.2e1;
          real _f41E3#1 = 0.e0;
          real _f41E4#1 = 0.e0;
          real _f41E5#1 = 0.2e1;
          tensor[4] a041D7#1 = <tensor[4]>[_f41E2,_f41E3,_f41E4,_f41E5];
          real _f41DE#1 = 0.2e1;
          real _f41DF#1 = -0.2e1;
          real _f41E0#1 = -0.2e1;
          real _f41E1#1 = 0.2e1;
          tensor[4] a141D8#1 = <tensor[4]>[_f41DE,_f41DF,_f41E0,_f41E1];
          real _f41DA#1 = -0.5e0;
          real _f41DB#1 = 0.15e1;
          real _f41DC#1 = -0.15e1;
          real _f41DD#1 = 0.5e0;
          tensor[4] a241D9#1 = <tensor[4]>[_f41DA,_f41DB,_f41DC,_f41DD];
          tensor[4] prod241E6#1 = VMul<4>(kernX_4194,a241D9);
          tensor[4] sum141E7#1 = VAdd<4>(a141D8,prod241E6);
          tensor[4] prod141E8#1 = VMul<4>(kernX_4194,sum141E7);
          tensor[4] kevalX_d1_41D6#32 = VAdd<4>(a041D7,prod141E8);
          real _f4203#1 = 0.2e1;
          real _f4204#1 = -0.2e1;
          real _f4205#1 = -0.2e1;
          real _f4206#1 = 0.2e1;
          tensor[4] a041FD#1 = <tensor[4]>[_f4203,_f4204,_f4205,_f4206];
          real _f41FF#1 = -0.1e1;
          real _f4200#1 = 0.3e1;
          real _f4201#1 = -0.3e1;
          real _f4202#1 = 0.1e1;
          tensor[4] a141FE#1 = <tensor[4]>[_f41FF,_f4200,_f4201,_f4202];
          tensor[4] prod14207#1 = VMul<4>(kernX_4194,a141FE);
          tensor[4] kevalX_d2_41FC#16 = VAdd<4>(a041FD,prod14207);
          tensor[4] projIx4217#3 = v00_3F08;
          tensor[4] projIx4218#3 = v01_3F14;
          tensor[4] projIx4219#3 = v02_3F20;
          tensor[4] projIx421A#3 = v03_3F2C;
          tensor[4] projIx421B#3 = v10_3F3A;
          tensor[4] projIx421C#3 = v11_3F45;
          tensor[4] projIx421D#3 = v12_3F50;
          tensor[4] projIx421E#3 = v13_3F5B;
          tensor[4] projIx421F#3 = v20_3F69;
          tensor[4] projIx4220#3 = v21_3F74;
          tensor[4] projIx4221#3 = v22_3F7F;
          tensor[4] projIx4222#3 = v23_3F8A;
          tensor[4] projIx4223#3 = v30_3F98;
          tensor[4] projIx4224#3 = v31_3FA3;
          tensor[4] projIx4225#3 = v32_3FAE;
          tensor[4] projIx4226#3 = v33_3FB9;
          real vdot4227#1 = VDot<4>(kevalX_d2_41FC,projIx4217);
          real vdot4228#1 = VDot<4>(kevalX_d2_41FC,projIx4218);
          real vdot4229#1 = VDot<4>(kevalX_d2_41FC,projIx4219);
          real vdot422A#1 = VDot<4>(kevalX_d2_41FC,projIx421A);
          tensor[4] cons_422B#1 = <tensor[4]>[vdot4227,vdot4228,vdot4229,vdot422A];
          real vdot422C#1 = VDot<4>(kevalX_d2_41FC,projIx421B);
          real vdot422D#1 = VDot<4>(kevalX_d2_41FC,projIx421C);
          real vdot422E#1 = VDot<4>(kevalX_d2_41FC,projIx421D);
          real vdot422F#1 = VDot<4>(kevalX_d2_41FC,projIx421E);
          tensor[4] cons_4230#1 = <tensor[4]>[vdot422C,vdot422D,vdot422E,vdot422F];
          real vdot4231#1 = VDot<4>(kevalX_d2_41FC,projIx421F);
          real vdot4232#1 = VDot<4>(kevalX_d2_41FC,projIx4220);
          real vdot4233#1 = VDot<4>(kevalX_d2_41FC,projIx4221);
          real vdot4234#1 = VDot<4>(kevalX_d2_41FC,projIx4222);
          tensor[4] cons_4235#1 = <tensor[4]>[vdot4231,vdot4232,vdot4233,vdot4234];
          real vdot4236#1 = VDot<4>(kevalX_d2_41FC,projIx4223);
          real vdot4237#1 = VDot<4>(kevalX_d2_41FC,projIx4224);
          real vdot4238#1 = VDot<4>(kevalX_d2_41FC,projIx4225);
          real vdot4239#1 = VDot<4>(kevalX_d2_41FC,projIx4226);
          tensor[4] cons_423A#1 = <tensor[4]>[vdot4236,vdot4237,vdot4238,vdot4239];
          real vdot423B#1 = VDot<4>(kevalY_d0_411E,cons_422B);
          real vdot423C#1 = VDot<4>(kevalY_d0_411E,cons_4230);
          real vdot423D#1 = VDot<4>(kevalY_d0_411E,cons_4235);
          real vdot423E#1 = VDot<4>(kevalY_d0_411E,cons_423A);
          tensor[4] cons_423F#1 = <tensor[4]>[vdot423B,vdot423C,vdot423D,vdot423E];
          real vdot4240#1 = VDot<4>(kevalZ_d0_409A,cons_423F);
          real vdot4241#1 = VDot<4>(kevalX_d1_41D6,projIx4217);
          real vdot4242#1 = VDot<4>(kevalX_d1_41D6,projIx4218);
          real vdot4243#1 = VDot<4>(kevalX_d1_41D6,projIx4219);
          real vdot4244#1 = VDot<4>(kevalX_d1_41D6,projIx421A);
          tensor[4] cons_4245#2 = <tensor[4]>[vdot4241,vdot4242,vdot4243,vdot4244];
          real vdot4246#1 = VDot<4>(kevalX_d1_41D6,projIx421B);
          real vdot4247#1 = VDot<4>(kevalX_d1_41D6,projIx421C);
          real vdot4248#1 = VDot<4>(kevalX_d1_41D6,projIx421D);
          real vdot4249#1 = VDot<4>(kevalX_d1_41D6,projIx421E);
          tensor[4] cons_424A#2 = <tensor[4]>[vdot4246,vdot4247,vdot4248,vdot4249];
          real vdot424B#1 = VDot<4>(kevalX_d1_41D6,projIx421F);
          real vdot424C#1 = VDot<4>(kevalX_d1_41D6,projIx4220);
          real vdot424D#1 = VDot<4>(kevalX_d1_41D6,projIx4221);
          real vdot424E#1 = VDot<4>(kevalX_d1_41D6,projIx4222);
          tensor[4] cons_424F#2 = <tensor[4]>[vdot424B,vdot424C,vdot424D,vdot424E];
          real vdot4250#1 = VDot<4>(kevalX_d1_41D6,projIx4223);
          real vdot4251#1 = VDot<4>(kevalX_d1_41D6,projIx4224);
          real vdot4252#1 = VDot<4>(kevalX_d1_41D6,projIx4225);
          real vdot4253#1 = VDot<4>(kevalX_d1_41D6,projIx4226);
          tensor[4] cons_4254#2 = <tensor[4]>[vdot4250,vdot4251,vdot4252,vdot4253];
          real vdot4255#1 = VDot<4>(kevalY_d1_4152,cons_4245);
          real vdot4256#1 = VDot<4>(kevalY_d1_4152,cons_424A);
          real vdot4257#1 = VDot<4>(kevalY_d1_4152,cons_424F);
          real vdot4258#1 = VDot<4>(kevalY_d1_4152,cons_4254);
          tensor[4] cons_4259#1 = <tensor[4]>[vdot4255,vdot4256,vdot4257,vdot4258];
          real vdot425A#2 = VDot<4>(kevalZ_d0_409A,cons_4259);
          real vdot425B#1 = VDot<4>(kevalY_d0_411E,cons_4245);
          real vdot425C#1 = VDot<4>(kevalY_d0_411E,cons_424A);
          real vdot425D#1 = VDot<4>(kevalY_d0_411E,cons_424F);
          real vdot425E#1 = VDot<4>(kevalY_d0_411E,cons_4254);
          tensor[4] cons_425F#1 = <tensor[4]>[vdot425B,vdot425C,vdot425D,vdot425E];
          real vdot4260#2 = VDot<4>(kevalZ_d1_40CE,cons_425F);
          tensor[3] tensor4261#1 = <tensor[3]>[vdot4240,vdot425A,vdot4260];
          real vdot4262#1 = VDot<4>(kevalX_d0_41A2,projIx4217);
          real vdot4263#1 = VDot<4>(kevalX_d0_41A2,projIx4218);
          real vdot4264#1 = VDot<4>(kevalX_d0_41A2,projIx4219);
          real vdot4265#1 = VDot<4>(kevalX_d0_41A2,projIx421A);
          tensor[4] cons_4266#3 = <tensor[4]>[vdot4262,vdot4263,vdot4264,vdot4265];
          real vdot4267#1 = VDot<4>(kevalX_d0_41A2,projIx421B);
          real vdot4268#1 = VDot<4>(kevalX_d0_41A2,projIx421C);
          real vdot4269#1 = VDot<4>(kevalX_d0_41A2,projIx421D);
          real vdot426A#1 = VDot<4>(kevalX_d0_41A2,projIx421E);
          tensor[4] cons_426B#3 = <tensor[4]>[vdot4267,vdot4268,vdot4269,vdot426A];
          real vdot426C#1 = VDot<4>(kevalX_d0_41A2,projIx421F);
          real vdot426D#1 = VDot<4>(kevalX_d0_41A2,projIx4220);
          real vdot426E#1 = VDot<4>(kevalX_d0_41A2,projIx4221);
          real vdot426F#1 = VDot<4>(kevalX_d0_41A2,projIx4222);
          tensor[4] cons_4270#3 = <tensor[4]>[vdot426C,vdot426D,vdot426E,vdot426F];
          real vdot4271#1 = VDot<4>(kevalX_d0_41A2,projIx4223);
          real vdot4272#1 = VDot<4>(kevalX_d0_41A2,projIx4224);
          real vdot4273#1 = VDot<4>(kevalX_d0_41A2,projIx4225);
          real vdot4274#1 = VDot<4>(kevalX_d0_41A2,projIx4226);
          tensor[4] cons_4275#3 = <tensor[4]>[vdot4271,vdot4272,vdot4273,vdot4274];
          real vdot4276#1 = VDot<4>(kevalY_d2_4178,cons_4266);
          real vdot4277#1 = VDot<4>(kevalY_d2_4178,cons_426B);
          real vdot4278#1 = VDot<4>(kevalY_d2_4178,cons_4270);
          real vdot4279#1 = VDot<4>(kevalY_d2_4178,cons_4275);
          tensor[4] cons_427A#1 = <tensor[4]>[vdot4276,vdot4277,vdot4278,vdot4279];
          real vdot427B#1 = VDot<4>(kevalZ_d0_409A,cons_427A);
          real vdot427C#1 = VDot<4>(kevalY_d1_4152,cons_4266);
          real vdot427D#1 = VDot<4>(kevalY_d1_4152,cons_426B);
          real vdot427E#1 = VDot<4>(kevalY_d1_4152,cons_4270);
          real vdot427F#1 = VDot<4>(kevalY_d1_4152,cons_4275);
          tensor[4] cons_4280#1 = <tensor[4]>[vdot427C,vdot427D,vdot427E,vdot427F];
          real vdot4281#2 = VDot<4>(kevalZ_d1_40CE,cons_4280);
          tensor[3] tensor4282#1 = <tensor[3]>[vdot425A,vdot427B,vdot4281];
          real vdot4283#1 = VDot<4>(kevalY_d0_411E,cons_4266);
          real vdot4284#1 = VDot<4>(kevalY_d0_411E,cons_426B);
          real vdot4285#1 = VDot<4>(kevalY_d0_411E,cons_4270);
          real vdot4286#1 = VDot<4>(kevalY_d0_411E,cons_4275);
          tensor[4] cons_4287#1 = <tensor[4]>[vdot4283,vdot4284,vdot4285,vdot4286];
          real vdot4288#1 = VDot<4>(kevalZ_d2_40F4,cons_4287);
          tensor[3] tensor4289#1 = <tensor[3]>[vdot4260,vdot4281,vdot4288];
          tensor[3] projParam4300#3 = tensor4261;
          tensor[3] projParam4301#3 = tensor3EC1;
          real vdot4302#1 = VDot<3>(projParam4300,projParam4301);
          tensor[3] projParam4303#3 = tensor3EC5;
          real vdot4304#1 = VDot<3>(projParam4300,projParam4303);
          tensor[3] projParam4305#3 = tensor3EC9;
          real vdot4306#1 = VDot<3>(projParam4300,projParam4305);
          tensor[3] projParam4308#3 = tensor4282;
          real vdot4309#1 = VDot<3>(projParam4308,projParam4301);
          real vdot430A#1 = VDot<3>(projParam4308,projParam4303);
          real vdot430B#1 = VDot<3>(projParam4308,projParam4305);
          tensor[3] projParam430D#3 = tensor4289;
          real vdot430E#1 = VDot<3>(projParam430D,projParam4301);
          real vdot430F#1 = VDot<3>(projParam430D,projParam4303);
          real vdot4310#1 = VDot<3>(projParam430D,projParam4305);
          real r4327#3 = r3EBE;
          real r4328#3 = vdot4302;
          real r4329#1 = RMul(r4327,r4328);
          real r432A#3 = r3EBF;
          real r432B#3 = vdot4309;
          real r432C#1 = RMul(r432A,r432B);
          real r432D#3 = r3EC0;
          real r432E#3 = vdot430E;
          real r432F#1 = RMul(r432D,r432E);
          real r4330#1 = RAdd(r4329,r432C);
          real r4331#1 = RAdd(r4330,r432F);
          real r4332#3 = vdot4304;
          real r4333#1 = RMul(r4327,r4332);
          real r4334#3 = vdot430A;
          real r4335#1 = RMul(r432A,r4334);
          real r4336#3 = vdot430F;
          real r4337#1 = RMul(r432D,r4336);
          real r4338#1 = RAdd(r4333,r4335);
          real r4339#1 = RAdd(r4338,r4337);
          real r433A#3 = vdot4306;
          real r433B#1 = RMul(r4327,r433A);
          real r433C#3 = vdot430B;
          real r433D#1 = RMul(r432A,r433C);
          real r433E#3 = vdot4310;
          real r433F#1 = RMul(r432D,r433E);
          real r4340#1 = RAdd(r433B,r433D);
          real r4341#1 = RAdd(r4340,r433F);
          tensor[3] tensor4342#1 = <tensor[3]>[r4331,r4339,r4341];
          real r4343#3 = r3EC2;
          real r4344#1 = RMul(r4343,r4328);
          real r4345#3 = r3EC3;
          real r4346#1 = RMul(r4345,r432B);
          real r4347#3 = r3EC4;
          real r4348#1 = RMul(r4347,r432E);
          real r4349#1 = RAdd(r4344,r4346);
          real r434A#1 = RAdd(r4349,r4348);
          real r434B#1 = RMul(r4343,r4332);
          real r434C#1 = RMul(r4345,r4334);
          real r434D#1 = RMul(r4347,r4336);
          real r434E#1 = RAdd(r434B,r434C);
          real r434F#1 = RAdd(r434E,r434D);
          real r4350#1 = RMul(r4343,r433A);
          real r4351#1 = RMul(r4345,r433C);
          real r4352#1 = RMul(r4347,r433E);
          real r4353#1 = RAdd(r4350,r4351);
          real r4354#1 = RAdd(r4353,r4352);
          tensor[3] tensor4355#1 = <tensor[3]>[r434A,r434F,r4354];
          real r4356#3 = r3EC6;
          real r4357#1 = RMul(r4356,r4328);
          real r4358#3 = r3EC7;
          real r4359#1 = RMul(r4358,r432B);
          real r435A#3 = r3EC8;
          real r435B#1 = RMul(r435A,r432E);
          real r435C#1 = RAdd(r4357,r4359);
          real r435D#1 = RAdd(r435C,r435B);
          real r435E#1 = RMul(r4356,r4332);
          real r435F#1 = RMul(r4358,r4334);
          real r4360#1 = RMul(r435A,r4336);
          real r4361#1 = RAdd(r435E,r435F);
          real r4362#1 = RAdd(r4361,r4360);
          real r4363#1 = RMul(r4356,r433A);
          real r4364#1 = RMul(r4358,r433C);
          real r4365#1 = RMul(r435A,r433E);
          real r4366#1 = RAdd(r4363,r4364);
          real r4367#1 = RAdd(r4366,r4365);
          tensor[3] tensor4368#1 = <tensor[3]>[r435D,r4362,r4367];
          tensor[3,3] _t4326#1 = <tensor[3,3]>[tensor4342,tensor4355,tensor4368];
          (real[3] evals43AD#2,tensor[3][3] E43AE#2) = EigenVecs3x3(_t4326);
          tensor[3] _t43B0#6 = Subscript<tensor[3][3]>(E43AE,idx3EE6);
          real _t43B2#9 = Subscript<real[3]>(evals43AD,idx3EE6);
          tensor[3] _t43B4#6 = Subscript<tensor[3][3]>(E43AE,idx3EE0);
          real _t43B6#9 = Subscript<real[3]>(evals43AD,idx3EE0);
          real r43B9#1 = TensorIndex<tensor[3],[0]>(_t43B0);
          tensor[3] binopV43BA#3 = VScale<3>(r43B9,_t43B0);
          real r43BB#1 = TensorIndex<tensor[3],[1]>(_t43B0);
          tensor[3] binopV43BC#3 = VScale<3>(r43BB,_t43B0);
          real r43BD#1 = TensorIndex<tensor[3],[2]>(_t43B0);
          tensor[3] binopV43BE#3 = VScale<3>(r43BD,_t43B0);
          real r43C8#1 = TensorIndex<tensor[3],[0]>(_t43B4);
          tensor[3] binopV43C9#3 = VScale<3>(r43C8,_t43B4);
          real r43CA#1 = TensorIndex<tensor[3],[1]>(_t43B4);
          tensor[3] binopV43CB#3 = VScale<3>(r43CA,_t43B4);
          real r43CC#1 = TensorIndex<tensor[3],[2]>(_t43B4);
          tensor[3] binopV43CD#3 = VScale<3>(r43CC,_t43B4);
          real r43D7#1 = VIndex<3,0>(binopV43BA);
          real r43D8#1 = RDiv(r43D7,_t43B2);
          real r43D9#1 = VIndex<3,1>(binopV43BA);
          real r43DA#1 = RDiv(r43D9,_t43B2);
          real r43DB#1 = VIndex<3,2>(binopV43BA);
          real r43DC#1 = RDiv(r43DB,_t43B2);
          tensor[3] tensor43DD#1 = <tensor[3]>[r43D8,r43DA,r43DC];
          real r43DE#1 = VIndex<3,0>(binopV43BC);
          real r43DF#1 = RDiv(r43DE,_t43B2);
          real r43E0#1 = VIndex<3,1>(binopV43BC);
          real r43E1#1 = RDiv(r43E0,_t43B2);
          real r43E2#1 = VIndex<3,2>(binopV43BC);
          real r43E3#1 = RDiv(r43E2,_t43B2);
          tensor[3] tensor43E4#1 = <tensor[3]>[r43DF,r43E1,r43E3];
          real r43E5#1 = VIndex<3,0>(binopV43BE);
          real r43E6#1 = RDiv(r43E5,_t43B2);
          real r43E7#1 = VIndex<3,1>(binopV43BE);
          real r43E8#1 = RDiv(r43E7,_t43B2);
          real r43E9#1 = VIndex<3,2>(binopV43BE);
          real r43EA#1 = RDiv(r43E9,_t43B2);
          tensor[3] tensor43EB#1 = <tensor[3]>[r43E6,r43E8,r43EA];
          real r4404#1 = VIndex<3,0>(binopV43C9);
          real r4405#1 = RDiv(r4404,_t43B6);
          real r4406#1 = VIndex<3,1>(binopV43C9);
          real r4407#1 = RDiv(r4406,_t43B6);
          real r4408#1 = VIndex<3,2>(binopV43C9);
          real r4409#1 = RDiv(r4408,_t43B6);
          tensor[3] tensor440A#1 = <tensor[3]>[r4405,r4407,r4409];
          real r440B#1 = VIndex<3,0>(binopV43CB);
          real r440C#1 = RDiv(r440B,_t43B6);
          real r440D#1 = VIndex<3,1>(binopV43CB);
          real r440E#1 = RDiv(r440D,_t43B6);
          real r440F#1 = VIndex<3,2>(binopV43CB);
          real r4410#1 = RDiv(r440F,_t43B6);
          tensor[3] tensor4411#1 = <tensor[3]>[r440C,r440E,r4410];
          real r4412#1 = VIndex<3,0>(binopV43CD);
          real r4413#1 = RDiv(r4412,_t43B6);
          real r4414#1 = VIndex<3,1>(binopV43CD);
          real r4415#1 = RDiv(r4414,_t43B6);
          real r4416#1 = VIndex<3,2>(binopV43CD);
          real r4417#1 = RDiv(r4416,_t43B6);
          tensor[3] tensor4418#1 = <tensor[3]>[r4413,r4415,r4417];
          tensor[3] projParam4431#1 = tensor43DD;
          tensor[3] projParam4432#1 = tensor440A;
          tensor[3] v4433#1 = VAdd<3>(projParam4431,projParam4432);
          tensor[3] projParam4434#1 = tensor43E4;
          tensor[3] projParam4435#1 = tensor4411;
          tensor[3] v4436#1 = VAdd<3>(projParam4434,projParam4435);
          tensor[3] projParam4437#1 = tensor43EB;
          tensor[3] projParam4438#1 = tensor4418;
          tensor[3] v4439#1 = VAdd<3>(projParam4437,projParam4438);
          int idx4449#4 = idx3EDE;
          int ilit444A#3 = 1;
          int idx444B#4 = idx3EE4;
          int ilit444C#3 = 2;
          int idx444D#4 = idx3EEA;
          int ilit444E#20 = 300;
          int addRes444F#16 = idx4449;
          int addRes4450#4 = idx444B;
          int addRes4451#1 = idx444D;
          int mulRes4452#4 = IMul(ilit444E,addRes4451);
          int addRes4453#1 = IAdd(addRes4450,mulRes4452);
          int mulRes4454#4 = IMul(ilit444E,addRes4453);
          int addRes4455#1 = IAdd(addRes444F,mulRes4454);
          real v000_4456#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4455);
          int addRes4457#16 = IAdd(idx4449,ilit444A);
          int addRes4458#1 = IAdd(addRes4457,mulRes4454);
          real v001_4459#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4458);
          int addRes445A#16 = IAdd(idx4449,ilit444C);
          int addRes445B#1 = IAdd(addRes445A,mulRes4454);
          real v002_445C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes445B);
          int ilit445D#3 = 3;
          int addRes445E#16 = IAdd(idx4449,ilit445D);
          int addRes445F#1 = IAdd(addRes445E,mulRes4454);
          real v003_4460#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes445F);
          tensor[4] v00_4461#1 = <tensor[4]>[v000_4456,v001_4459,v002_445C,v003_4460];
          int addRes4462#4 = IAdd(idx444B,ilit444A);
          int addRes4463#1 = IAdd(addRes4462,mulRes4452);
          int mulRes4464#4 = IMul(ilit444E,addRes4463);
          int addRes4465#1 = IAdd(addRes444F,mulRes4464);
          real v010_4466#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4465);
          int addRes4467#1 = IAdd(addRes4457,mulRes4464);
          real v011_4468#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4467);
          int addRes4469#1 = IAdd(addRes445A,mulRes4464);
          real v012_446A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4469);
          int addRes446B#1 = IAdd(addRes445E,mulRes4464);
          real v013_446C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes446B);
          tensor[4] v01_446D#1 = <tensor[4]>[v010_4466,v011_4468,v012_446A,v013_446C];
          int addRes446E#4 = IAdd(idx444B,ilit444C);
          int addRes446F#1 = IAdd(addRes446E,mulRes4452);
          int mulRes4470#4 = IMul(ilit444E,addRes446F);
          int addRes4471#1 = IAdd(addRes444F,mulRes4470);
          real v020_4472#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4471);
          int addRes4473#1 = IAdd(addRes4457,mulRes4470);
          real v021_4474#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4473);
          int addRes4475#1 = IAdd(addRes445A,mulRes4470);
          real v022_4476#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4475);
          int addRes4477#1 = IAdd(addRes445E,mulRes4470);
          real v023_4478#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4477);
          tensor[4] v02_4479#1 = <tensor[4]>[v020_4472,v021_4474,v022_4476,v023_4478];
          int addRes447A#4 = IAdd(idx444B,ilit445D);
          int addRes447B#1 = IAdd(addRes447A,mulRes4452);
          int mulRes447C#4 = IMul(ilit444E,addRes447B);
          int addRes447D#1 = IAdd(addRes444F,mulRes447C);
          real v030_447E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes447D);
          int addRes447F#1 = IAdd(addRes4457,mulRes447C);
          real v031_4480#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes447F);
          int addRes4481#1 = IAdd(addRes445A,mulRes447C);
          real v032_4482#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4481);
          int addRes4483#1 = IAdd(addRes445E,mulRes447C);
          real v033_4484#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4483);
          tensor[4] v03_4485#1 = <tensor[4]>[v030_447E,v031_4480,v032_4482,v033_4484];
          int addRes4487#1 = IAdd(idx444D,ilit444A);
          int mulRes4488#4 = IMul(ilit444E,addRes4487);
          int addRes4489#1 = IAdd(addRes4450,mulRes4488);
          int mulRes448A#4 = IMul(ilit444E,addRes4489);
          int addRes448B#1 = IAdd(addRes444F,mulRes448A);
          real v100_448C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes448B);
          int addRes448D#1 = IAdd(addRes4457,mulRes448A);
          real v101_448E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes448D);
          int addRes448F#1 = IAdd(addRes445A,mulRes448A);
          real v102_4490#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes448F);
          int addRes4491#1 = IAdd(addRes445E,mulRes448A);
          real v103_4492#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4491);
          tensor[4] v10_4493#1 = <tensor[4]>[v100_448C,v101_448E,v102_4490,v103_4492];
          int addRes4494#1 = IAdd(addRes4462,mulRes4488);
          int mulRes4495#4 = IMul(ilit444E,addRes4494);
          int addRes4496#1 = IAdd(addRes444F,mulRes4495);
          real v110_4497#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4496);
          int addRes4498#1 = IAdd(addRes4457,mulRes4495);
          real v111_4499#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4498);
          int addRes449A#1 = IAdd(addRes445A,mulRes4495);
          real v112_449B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes449A);
          int addRes449C#1 = IAdd(addRes445E,mulRes4495);
          real v113_449D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes449C);
          tensor[4] v11_449E#1 = <tensor[4]>[v110_4497,v111_4499,v112_449B,v113_449D];
          int addRes449F#1 = IAdd(addRes446E,mulRes4488);
          int mulRes44A0#4 = IMul(ilit444E,addRes449F);
          int addRes44A1#1 = IAdd(addRes444F,mulRes44A0);
          real v120_44A2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44A1);
          int addRes44A3#1 = IAdd(addRes4457,mulRes44A0);
          real v121_44A4#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44A3);
          int addRes44A5#1 = IAdd(addRes445A,mulRes44A0);
          real v122_44A6#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44A5);
          int addRes44A7#1 = IAdd(addRes445E,mulRes44A0);
          real v123_44A8#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44A7);
          tensor[4] v12_44A9#1 = <tensor[4]>[v120_44A2,v121_44A4,v122_44A6,v123_44A8];
          int addRes44AA#1 = IAdd(addRes447A,mulRes4488);
          int mulRes44AB#4 = IMul(ilit444E,addRes44AA);
          int addRes44AC#1 = IAdd(addRes444F,mulRes44AB);
          real v130_44AD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44AC);
          int addRes44AE#1 = IAdd(addRes4457,mulRes44AB);
          real v131_44AF#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44AE);
          int addRes44B0#1 = IAdd(addRes445A,mulRes44AB);
          real v132_44B1#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44B0);
          int addRes44B2#1 = IAdd(addRes445E,mulRes44AB);
          real v133_44B3#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44B2);
          tensor[4] v13_44B4#1 = <tensor[4]>[v130_44AD,v131_44AF,v132_44B1,v133_44B3];
          int addRes44B6#1 = IAdd(idx444D,ilit444C);
          int mulRes44B7#4 = IMul(ilit444E,addRes44B6);
          int addRes44B8#1 = IAdd(addRes4450,mulRes44B7);
          int mulRes44B9#4 = IMul(ilit444E,addRes44B8);
          int addRes44BA#1 = IAdd(addRes444F,mulRes44B9);
          real v200_44BB#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44BA);
          int addRes44BC#1 = IAdd(addRes4457,mulRes44B9);
          real v201_44BD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44BC);
          int addRes44BE#1 = IAdd(addRes445A,mulRes44B9);
          real v202_44BF#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44BE);
          int addRes44C0#1 = IAdd(addRes445E,mulRes44B9);
          real v203_44C1#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44C0);
          tensor[4] v20_44C2#1 = <tensor[4]>[v200_44BB,v201_44BD,v202_44BF,v203_44C1];
          int addRes44C3#1 = IAdd(addRes4462,mulRes44B7);
          int mulRes44C4#4 = IMul(ilit444E,addRes44C3);
          int addRes44C5#1 = IAdd(addRes444F,mulRes44C4);
          real v210_44C6#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44C5);
          int addRes44C7#1 = IAdd(addRes4457,mulRes44C4);
          real v211_44C8#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44C7);
          int addRes44C9#1 = IAdd(addRes445A,mulRes44C4);
          real v212_44CA#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44C9);
          int addRes44CB#1 = IAdd(addRes445E,mulRes44C4);
          real v213_44CC#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44CB);
          tensor[4] v21_44CD#1 = <tensor[4]>[v210_44C6,v211_44C8,v212_44CA,v213_44CC];
          int addRes44CE#1 = IAdd(addRes446E,mulRes44B7);
          int mulRes44CF#4 = IMul(ilit444E,addRes44CE);
          int addRes44D0#1 = IAdd(addRes444F,mulRes44CF);
          real v220_44D1#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44D0);
          int addRes44D2#1 = IAdd(addRes4457,mulRes44CF);
          real v221_44D3#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44D2);
          int addRes44D4#1 = IAdd(addRes445A,mulRes44CF);
          real v222_44D5#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44D4);
          int addRes44D6#1 = IAdd(addRes445E,mulRes44CF);
          real v223_44D7#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44D6);
          tensor[4] v22_44D8#1 = <tensor[4]>[v220_44D1,v221_44D3,v222_44D5,v223_44D7];
          int addRes44D9#1 = IAdd(addRes447A,mulRes44B7);
          int mulRes44DA#4 = IMul(ilit444E,addRes44D9);
          int addRes44DB#1 = IAdd(addRes444F,mulRes44DA);
          real v230_44DC#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44DB);
          int addRes44DD#1 = IAdd(addRes4457,mulRes44DA);
          real v231_44DE#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44DD);
          int addRes44DF#1 = IAdd(addRes445A,mulRes44DA);
          real v232_44E0#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44DF);
          int addRes44E1#1 = IAdd(addRes445E,mulRes44DA);
          real v233_44E2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44E1);
          tensor[4] v23_44E3#1 = <tensor[4]>[v230_44DC,v231_44DE,v232_44E0,v233_44E2];
          int addRes44E5#1 = IAdd(idx444D,ilit445D);
          int mulRes44E6#4 = IMul(ilit444E,addRes44E5);
          int addRes44E7#1 = IAdd(addRes4450,mulRes44E6);
          int mulRes44E8#4 = IMul(ilit444E,addRes44E7);
          int addRes44E9#1 = IAdd(addRes444F,mulRes44E8);
          real v300_44EA#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44E9);
          int addRes44EB#1 = IAdd(addRes4457,mulRes44E8);
          real v301_44EC#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44EB);
          int addRes44ED#1 = IAdd(addRes445A,mulRes44E8);
          real v302_44EE#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44ED);
          int addRes44EF#1 = IAdd(addRes445E,mulRes44E8);
          real v303_44F0#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44EF);
          tensor[4] v30_44F1#1 = <tensor[4]>[v300_44EA,v301_44EC,v302_44EE,v303_44F0];
          int addRes44F2#1 = IAdd(addRes4462,mulRes44E6);
          int mulRes44F3#4 = IMul(ilit444E,addRes44F2);
          int addRes44F4#1 = IAdd(addRes444F,mulRes44F3);
          real v310_44F5#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44F4);
          int addRes44F6#1 = IAdd(addRes4457,mulRes44F3);
          real v311_44F7#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44F6);
          int addRes44F8#1 = IAdd(addRes445A,mulRes44F3);
          real v312_44F9#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44F8);
          int addRes44FA#1 = IAdd(addRes445E,mulRes44F3);
          real v313_44FB#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44FA);
          tensor[4] v31_44FC#1 = <tensor[4]>[v310_44F5,v311_44F7,v312_44F9,v313_44FB];
          int addRes44FD#1 = IAdd(addRes446E,mulRes44E6);
          int mulRes44FE#4 = IMul(ilit444E,addRes44FD);
          int addRes44FF#1 = IAdd(addRes444F,mulRes44FE);
          real v320_4500#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes44FF);
          int addRes4501#1 = IAdd(addRes4457,mulRes44FE);
          real v321_4502#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4501);
          int addRes4503#1 = IAdd(addRes445A,mulRes44FE);
          real v322_4504#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4503);
          int addRes4505#1 = IAdd(addRes445E,mulRes44FE);
          real v323_4506#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4505);
          tensor[4] v32_4507#1 = <tensor[4]>[v320_4500,v321_4502,v322_4504,v323_4506];
          int addRes4508#1 = IAdd(addRes447A,mulRes44E6);
          int mulRes4509#4 = IMul(ilit444E,addRes4508);
          int addRes450A#1 = IAdd(addRes444F,mulRes4509);
          real v330_450B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes450A);
          int addRes450C#1 = IAdd(addRes4457,mulRes4509);
          real v331_450D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes450C);
          int addRes450E#1 = IAdd(addRes445A,mulRes4509);
          real v332_450F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes450E);
          int addRes4510#1 = IAdd(addRes445E,mulRes4509);
          real v333_4511#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes4510);
          tensor[4] v33_4512#1 = <tensor[4]>[v330_450B,v331_450D,v332_450F,v333_4511];
          tensor[4] projIx45EA#2 = v00_4461;
          tensor[4] projIx45EB#2 = v01_446D;
          tensor[4] projIx45EC#2 = v02_4479;
          tensor[4] projIx45ED#2 = v03_4485;
          tensor[4] projIx45EE#2 = v10_4493;
          tensor[4] projIx45EF#2 = v11_449E;
          tensor[4] projIx45F0#2 = v12_44A9;
          tensor[4] projIx45F1#2 = v13_44B4;
          tensor[4] projIx45F2#2 = v20_44C2;
          tensor[4] projIx45F3#2 = v21_44CD;
          tensor[4] projIx45F4#2 = v22_44D8;
          tensor[4] projIx45F5#2 = v23_44E3;
          tensor[4] projIx45F6#2 = v30_44F1;
          tensor[4] projIx45F7#2 = v31_44FC;
          tensor[4] projIx45F8#2 = v32_4507;
          tensor[4] projIx45F9#2 = v33_4512;
          real vdot45FA#1 = VDot<4>(kevalX_d1_41D6,projIx45EA);
          real vdot45FB#1 = VDot<4>(kevalX_d1_41D6,projIx45EB);
          real vdot45FC#1 = VDot<4>(kevalX_d1_41D6,projIx45EC);
          real vdot45FD#1 = VDot<4>(kevalX_d1_41D6,projIx45ED);
          tensor[4] cons_45FE#1 = <tensor[4]>[vdot45FA,vdot45FB,vdot45FC,vdot45FD];
          real vdot45FF#1 = VDot<4>(kevalX_d1_41D6,projIx45EE);
          real vdot4600#1 = VDot<4>(kevalX_d1_41D6,projIx45EF);
          real vdot4601#1 = VDot<4>(kevalX_d1_41D6,projIx45F0);
          real vdot4602#1 = VDot<4>(kevalX_d1_41D6,projIx45F1);
          tensor[4] cons_4603#1 = <tensor[4]>[vdot45FF,vdot4600,vdot4601,vdot4602];
          real vdot4604#1 = VDot<4>(kevalX_d1_41D6,projIx45F2);
          real vdot4605#1 = VDot<4>(kevalX_d1_41D6,projIx45F3);
          real vdot4606#1 = VDot<4>(kevalX_d1_41D6,projIx45F4);
          real vdot4607#1 = VDot<4>(kevalX_d1_41D6,projIx45F5);
          tensor[4] cons_4608#1 = <tensor[4]>[vdot4604,vdot4605,vdot4606,vdot4607];
          real vdot4609#1 = VDot<4>(kevalX_d1_41D6,projIx45F6);
          real vdot460A#1 = VDot<4>(kevalX_d1_41D6,projIx45F7);
          real vdot460B#1 = VDot<4>(kevalX_d1_41D6,projIx45F8);
          real vdot460C#1 = VDot<4>(kevalX_d1_41D6,projIx45F9);
          tensor[4] cons_460D#1 = <tensor[4]>[vdot4609,vdot460A,vdot460B,vdot460C];
          real vdot460E#1 = VDot<4>(kevalY_d0_411E,cons_45FE);
          real vdot460F#1 = VDot<4>(kevalY_d0_411E,cons_4603);
          real vdot4610#1 = VDot<4>(kevalY_d0_411E,cons_4608);
          real vdot4611#1 = VDot<4>(kevalY_d0_411E,cons_460D);
          tensor[4] cons_4612#1 = <tensor[4]>[vdot460E,vdot460F,vdot4610,vdot4611];
          real vdot4613#1 = VDot<4>(kevalZ_d0_409A,cons_4612);
          real vdot4614#1 = VDot<4>(kevalX_d0_41A2,projIx45EA);
          real vdot4615#1 = VDot<4>(kevalX_d0_41A2,projIx45EB);
          real vdot4616#1 = VDot<4>(kevalX_d0_41A2,projIx45EC);
          real vdot4617#1 = VDot<4>(kevalX_d0_41A2,projIx45ED);
          tensor[4] cons_4618#2 = <tensor[4]>[vdot4614,vdot4615,vdot4616,vdot4617];
          real vdot4619#1 = VDot<4>(kevalX_d0_41A2,projIx45EE);
          real vdot461A#1 = VDot<4>(kevalX_d0_41A2,projIx45EF);
          real vdot461B#1 = VDot<4>(kevalX_d0_41A2,projIx45F0);
          real vdot461C#1 = VDot<4>(kevalX_d0_41A2,projIx45F1);
          tensor[4] cons_461D#2 = <tensor[4]>[vdot4619,vdot461A,vdot461B,vdot461C];
          real vdot461E#1 = VDot<4>(kevalX_d0_41A2,projIx45F2);
          real vdot461F#1 = VDot<4>(kevalX_d0_41A2,projIx45F3);
          real vdot4620#1 = VDot<4>(kevalX_d0_41A2,projIx45F4);
          real vdot4621#1 = VDot<4>(kevalX_d0_41A2,projIx45F5);
          tensor[4] cons_4622#2 = <tensor[4]>[vdot461E,vdot461F,vdot4620,vdot4621];
          real vdot4623#1 = VDot<4>(kevalX_d0_41A2,projIx45F6);
          real vdot4624#1 = VDot<4>(kevalX_d0_41A2,projIx45F7);
          real vdot4625#1 = VDot<4>(kevalX_d0_41A2,projIx45F8);
          real vdot4626#1 = VDot<4>(kevalX_d0_41A2,projIx45F9);
          tensor[4] cons_4627#2 = <tensor[4]>[vdot4623,vdot4624,vdot4625,vdot4626];
          real vdot4628#1 = VDot<4>(kevalY_d1_4152,cons_4618);
          real vdot4629#1 = VDot<4>(kevalY_d1_4152,cons_461D);
          real vdot462A#1 = VDot<4>(kevalY_d1_4152,cons_4622);
          real vdot462B#1 = VDot<4>(kevalY_d1_4152,cons_4627);
          tensor[4] cons_462C#1 = <tensor[4]>[vdot4628,vdot4629,vdot462A,vdot462B];
          real vdot462D#1 = VDot<4>(kevalZ_d0_409A,cons_462C);
          real vdot462E#1 = VDot<4>(kevalY_d0_411E,cons_4618);
          real vdot462F#1 = VDot<4>(kevalY_d0_411E,cons_461D);
          real vdot4630#1 = VDot<4>(kevalY_d0_411E,cons_4622);
          real vdot4631#1 = VDot<4>(kevalY_d0_411E,cons_4627);
          tensor[4] cons_4632#1 = <tensor[4]>[vdot462E,vdot462F,vdot4630,vdot4631];
          real vdot4633#1 = VDot<4>(kevalZ_d1_40CE,cons_4632);
          tensor[3] TPP45E9#3 = <tensor[3]>[vdot4613,vdot462D,vdot4633];
          tensor[3] projParam4681#1 = tensor3EC1;
          real vdot4682#1 = VDot<3>(TPP45E9,projParam4681);
          tensor[3] projParam4683#1 = tensor3EC5;
          real vdot4684#1 = VDot<3>(TPP45E9,projParam4683);
          tensor[3] projParam4685#1 = tensor3EC9;
          real vdot4686#1 = VDot<3>(TPP45E9,projParam4685);
          tensor[3] probe_l_144680#3 = <tensor[3]>[vdot4682,vdot4684,vdot4686];
          tensor[3] projParam4690#1 = v4433;
          tensor[3] negV4691#1 = VNeg<3>(projParam4690);
          tensor[3] projParam4692#1 = v4436;
          tensor[3] negV4693#1 = VNeg<3>(projParam4692);
          tensor[3] projParam4694#1 = v4439;
          tensor[3] negV4695#1 = VNeg<3>(projParam4694);
          tensor[3] projParam469E#1 = negV4691;
          real vdot469F#1 = VDot<3>(projParam469E,probe_l_144680);
          tensor[3] projParam46A0#1 = negV4693;
          real vdot46A1#1 = VDot<3>(projParam46A0,probe_l_144680);
          tensor[3] projParam46A2#1 = negV4695;
          real vdot46A3#1 = VDot<3>(projParam46A2,probe_l_144680);
          tensor[3] _t36A6#1 = <tensor[3]>[vdot469F,vdot46A1,vdot46A3];
          goto JOIN36A7
        ASSIGN46AC:  preds = [COND2D5A]
          bool _t2D5E#1 = false;
          goto JOIN2D5F
        ASSIGN46AD:  preds = [COND2D55]
          bool _t2D61#1 = false;
          goto JOIN2D62
        ASSIGN46AE:  preds = [COND24C1]
          bool _t2D64#1 = false;
          goto JOIN2D65
    end update
    method stabilize
        ENTRY46AF:  preds = []
          tensor[4] rgba46B0#1 = self.rgba;
          tensor[3] rgb46B2#3 = self.rgb;
          real transp46B4#2 = self.transp;
          real _t46B6#2 = 0.1e1;
          bool _t46B8#1 = LT<real>(transp46B4,_t46B6);
          if _t46B8 then goto ASSIGN46BD else goto JOIN46D0
        ASSIGN46BD:  preds = [COND46BA]
          real aa46BB#4 = RSub(_t46B6,transp46B4);
          real _t46BE#1 = VIndex<3,0>(rgb46B2);
          real _t46C0#1 = RDiv(_t46BE,aa46BB);
          real _t46C3#1 = VIndex<3,1>(rgb46B2);
          real _t46C5#1 = RDiv(_t46C3,aa46BB);
          real _t46C8#1 = VIndex<3,2>(rgb46B2);
          real _t46CA#1 = RDiv(_t46C8,aa46BB);
          tensor[4] rgba46CD#1 = <tensor[4]>[_t46C0,_t46C5,_t46CA,aa46BB];
          goto JOIN46D0
        JOIN46D0:  preds = [ASSIGN46CE,COND46BA]
          tensor[4] rgba46CF#1 = phi(rgba46CD,rgba46B0)
          self.rgba = rgba46CF;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY46D3:  preds = []
      int iresU46D4#1 = globals.iresU2187;
      int iresV46D6#1 = globals.iresV2188;
      int _t46D8#2 = 0;
      int _t46DA#2 = 1;
      int _t46DC#1 = ISub(iresV46D6,_t46DA);
      int[] _t46DE#1 = Range(_t46D8,_t46DC);
    FOREACH46E1:  preds = [ASSIGN46DF,NEXT46EA]
      foreach (vi46E0 in _t46DE) on exit goto RETURN46EB
      int _t46E2#1 = ISub(iresU46D4,_t46DA);
      int[] _t46E4#1 = Range(_t46D8,_t46E2);
    FOREACH46E7:  preds = [ASSIGN46E5,NEXT46E9]
      foreach (ui46E6 in _t46E4) on exit goto NEXT46EA
      new ray(ui46E6,vi46E0);
      goto FOREACH46E7
    NEXT46EA:  preds = [FOREACH46E7]
      goto FOREACH46E1
    RETURN46EB:  preds = [FOREACH46E1]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block217B (block) = <no-default>
  input 0space0509_intermedateGlobal217C (space) = <no-default>
  input 0U050B_intermedateGlobal217D (U) = <no-default>
  input cellChoice217E (cellChoice) = <no-default>
  input cmap217F (cmap) = image("cmap.nrrd")
  input camEye2180 (camEye) = <default>
  input camAt2181 (camAt) = <default>
  input camUp2182 (camUp) = <default>
  input camNear2183 (camNear) = <default>
  input camFar2184 (camFar) = <default>
  input camFOV2185 (camFOV) = <default>
  input camOrtho2186 (camOrtho) = <default>
  input iresU2187 (iresU) = <default>
  input iresV2188 (iresV) = <default>
  input rayStep2189 (rayStep) = <default>
  input refStep218A (refStep) = <default>
  input transp0218B (transp0) = <default>
  input thick218C (thick) = <default>
  input fStrTh218D (fStrTh) = <default>
  input fMaskTh218E (fMaskTh) = <default>
  input fBias218F (fBias) = <default>
  input maxAlpha2190 (maxAlpha) = <default>
  input light2191 (light) = <default>
  input phong2192 (phong) = <default>
  input mcNear2193 (mcNear) = <default>
  input mcFar2194 (mcFar) = <default>
  input litdir2195 (litdir) = <default>
  input cminmax2196 (cminmax) = <default>
  input analytical2197 (analytical) = <default>
  input umm2198 (umm) = image("data.nrrd")
  global tensor[3] camN2199
  global tensor[3] camU219A
  global tensor[3] camV219B
  global real camDist219C
  global real camVmax219D
  global real camUmax219E
  global real camNearVsp219F
  global real camFarVsp21A0
  global tensor[3] litwsp21A1
  global int _t21A2
  global femData:Space _tX21A3
  global femData:FemFunc _tXX21A4
## functions
## input initialization
  ENTRY21A7:  preds = []
    real _t21A8#13 = 0.e0;
    real _t21AA#1 = -0.2e1;
    tensor[3] camEye21AC#1 = <tensor[3]>[_t21A8,_t21AA,_t21A8];
    globals.camEye2180 = camEye21AC;
    tensor[3] camAt21AF#1 = <tensor[3]>[_t21A8,_t21A8,_t21A8];
    globals.camAt2181 = camAt21AF;
    real _t21B2#5 = 0.1e1;
    tensor[3] camUp21B4#1 = <tensor[3]>[_t21A8,_t21A8,_t21B2];
    globals.camUp2182 = camUp21B4;
    real camNear21B7#1 = -0.4e1;
    globals.camNear2183 = camNear21B7;
    real camFar21BA#1 = 0.4e1;
    globals.camFar2184 = camFar21BA;
    real camFOV21BD#1 = 0.1e2;
    globals.camFOV2185 = camFOV21BD;
    bool camOrtho21C0#2 = false;
    globals.camOrtho2186 = camOrtho21C0;
    int iresU21C3#2 = 100;
    globals.iresU2187 = iresU21C3;
    globals.iresV2188 = iresU21C3;
    real rayStep21C7#2 = 0.1e-3;
    globals.rayStep2189 = rayStep21C7;
    globals.refStep218A = rayStep21C7;
    real transp021CB#1 = 0.5e-2;
    globals.transp0218B = transp021CB;
    real thick21CE#1 = 0.1e-1;
    globals.thick218C = thick21CE;
    globals.fStrTh218D = _t21A8;
    globals.fMaskTh218E = _t21A8;
    real fBias21D3#2 = 0.1e0;
    globals.fBias218F = fBias21D3;
    globals.maxAlpha2190 = _t21B2;
    globals.light2191 = camOrtho21C0;
    real _t21D8#1 = 0.7e0;
    real _t21DA#1 = 0.2e0;
    real _t21DC#1 = 0.1e3;
    tensor[4] phong21DE#1 = <tensor[4]>[fBias21D3,_t21D8,_t21DA,_t21DC];
    globals.phong2192 = phong21DE;
    tensor[3] mcNear21E1#2 = <tensor[3]>[_t21B2,_t21B2,_t21B2];
    globals.mcNear2193 = mcNear21E1;
    globals.mcFar2194 = mcNear21E1;
    real _t21E5#1 = -0.1e1;
    tensor[3] litdir21E7#1 = <tensor[3]>[_t21A8,_t21E5,_t21A8];
    globals.litdir2195 = litdir21E7;
    tensor[2] cminmax21EA#1 = <tensor[2]>[_t21A8,_t21A8];
    globals.cminmax2196 = cminmax21EA;
    bool analytical21ED#1 = true;
    globals.analytical2197 = analytical21ED;
    return
## global-variable initialization
  ENTRY21F1:  preds = []
    femData:Mesh block21F2#3 = globals.block217B;
    femData:Space 0space0509_intermedateGlobal21F4#1 = globals.0space0509_intermedateGlobal217C;
    femData:FemFunc 0U050B_intermedateGlobal21F6#1 = globals.0U050B_intermedateGlobal217D;
    int cellChoice21F8#1 = globals.cellChoice217E;
    tensor[3] camEye21FC#1 = globals.camEye2180;
    tensor[3] camAt21FE#1 = globals.camAt2181;
    tensor[3] camUp2200#3 = globals.camUp2182;
    real camNear2202#1 = globals.camNear2183;
    real camFar2204#1 = globals.camFar2184;
    real camFOV2206#1 = globals.camFOV2185;
    int iresU2208#1 = globals.iresU2187;
    int iresV220A#1 = globals.iresV2188;
    tensor[3] litdir220C#5 = globals.litdir2195;
    int _t220E#1 = 0;
    int _t2210#1 = 1;
    int _t2212#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F2);
    int _t2214#1 = ISub(_t2212,_t2210);
    int[] _t2216#1 = Range(_t220E,_t2214);
    femData:MeshCell[] _t2218#1 = <femData:MeshCell[]>{};
  FOREACH221B:  preds = [ASSIGN2219,NEXT2221]
    foreach (_t221A in _t2216) on exit goto ASSIGN2223
      femData:MeshCell[] _t221F#2 = phi(_t2218,_t221E)
    femData:MeshCell _t221C#1 = LoadFem<femData:MeshCell>(block21F2,_t221A);
    femData:MeshCell[] _t221E#1 = Append<femData:MeshCell>(_t221F,_t221C);
    goto FOREACH221B
  ASSIGN2223:  preds = [FOREACH221B]
    femData:Space space2222#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F4,block21F2);
    femData:FemFunc U2224#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F6,space2222);
    femData:MeshCell c12226#1 = Subscript<femData:MeshCell[]>(_t221F,cellChoice21F8);
    int _t2228#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12226);
    femData:FuncCell _t222A#2 = LoadFem<femData:FuncCell>(U2224,_t2228);
    femData:FemFunc _t222C#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t222A);
    femData:Space _t222E#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222C);
    int _t2230#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t222A);
    tensor[3] op1_e3_l_42236#9 = VSub<3>(camAt21FE,camEye21FC);
    real op1_e3_l_62239#1 = VDot<3>(op1_e3_l_42236,op1_e3_l_42236);
    real op1_e3_l_7223C#6 = Sqrt(op1_e3_l_62239);
    real realLit2240#9 = 0.1e1;
    real op1_e3_l_9223F#6 = RDiv(realLit2240,op1_e3_l_7223C);
    tensor[3] camN2244#4 = VScale<3>(op1_e3_l_9223F,op1_e3_l_42236);
    globals.camN2199 = camN2244;
    real realLit2249#6 = 0.e0;
    real r224A#3 = TensorIndex<tensor[3],[0]>(camUp2200);
    real r224B#3 = RMul(realLit2249,r224A);
    real r224C#3 = TensorIndex<tensor[3],[1]>(camUp2200);
    real r224D#3 = RMul(realLit2249,r224C);
    real r224E#3 = TensorIndex<tensor[3],[2]>(camUp2200);
    real r224F#5 = RMul(realLit2249,r224E);
    real r2250#3 = RAdd(r224B,r224D);
    real r2251#3 = RAdd(r2250,r224F);
    real r2253#1 = RMul(realLit2240,r224E);
    real r2254#1 = RAdd(r2250,r2253);
    real realLit2255#6 = -0.1e1;
    real r2256#1 = RMul(realLit2255,r224C);
    real r2257#1 = RAdd(r224B,r2256);
    real r2258#1 = RAdd(r2257,r224F);
    tensor[3] tensor2259#1 = <tensor[3]>[r2251,r2254,r2258];
    real r225A#1 = RMul(realLit2255,r224E);
    real r225B#1 = RAdd(r2250,r225A);
    real r225C#1 = RMul(realLit2240,r224A);
    real r225D#1 = RAdd(r225C,r224D);
    real r225E#1 = RAdd(r225D,r224F);
    tensor[3] tensor225F#1 = <tensor[3]>[r225B,r2251,r225E];
    real r2260#1 = RMul(realLit2240,r224C);
    real r2261#1 = RAdd(r224B,r2260);
    real r2262#1 = RAdd(r2261,r224F);
    real r2263#1 = RMul(realLit2255,r224A);
    real r2264#1 = RAdd(r2263,r224D);
    real r2265#1 = RAdd(r2264,r224F);
    tensor[3] tensor2266#1 = <tensor[3]>[r2262,r2265,r2251];
    real vdot2289#4 = VDot<3>(op1_e3_l_42236,tensor2259);
    real vdot228B#4 = VDot<3>(op1_e3_l_42236,tensor225F);
    real vdot228D#4 = VDot<3>(op1_e3_l_42236,tensor2266);
    tensor[3] op1_e3_l_172287#3 = <tensor[3]>[vdot2289,vdot228B,vdot228D];
    real op1_e3_l_342296#1 = VDot<3>(op1_e3_l_172287,op1_e3_l_172287);
    real r229A#1 = RMul(op1_e3_l_9223F,op1_e3_l_9223F);
    real op1_e3_l_352299#1 = RMul(r229A,op1_e3_l_342296);
    real op1_e3_l_36229E#1 = Sqrt(op1_e3_l_352299);
    tensor[3] op1_e3_l_3722A1#1 = VScale<3>(op1_e3_l_9223F,op1_e3_l_172287);
    real op1_e3_l_3822A4#2 = RDiv(realLit2240,op1_e3_l_36229E);
    tensor[3] camU22A9#4 = VScale<3>(op1_e3_l_3822A4,op1_e3_l_3722A1);
    globals.camU219A = camU22A9;
    real r22B0#3 = RMul(realLit2249,vdot2289);
    real r22B2#3 = RMul(realLit2249,vdot228B);
    real r22B4#5 = RMul(realLit2249,vdot228D);
    real r22B5#3 = RAdd(r22B0,r22B2);
    real r22B6#3 = RAdd(r22B5,r22B4);
    real r22B8#1 = RMul(realLit2240,vdot228D);
    real r22B9#1 = RAdd(r22B5,r22B8);
    real r22BB#1 = RMul(realLit2255,vdot228B);
    real r22BC#1 = RAdd(r22B0,r22BB);
    real r22BD#1 = RAdd(r22BC,r22B4);
    tensor[3] tensor22BE#1 = <tensor[3]>[r22B6,r22B9,r22BD];
    real r22BF#1 = RMul(realLit2255,vdot228D);
    real r22C0#1 = RAdd(r22B5,r22BF);
    real r22C1#1 = RMul(realLit2240,vdot2289);
    real r22C2#1 = RAdd(r22C1,r22B2);
    real r22C3#1 = RAdd(r22C2,r22B4);
    tensor[3] tensor22C4#1 = <tensor[3]>[r22C0,r22B6,r22C3];
    real r22C5#1 = RMul(realLit2240,vdot228B);
    real r22C6#1 = RAdd(r22B0,r22C5);
    real r22C7#1 = RAdd(r22C6,r22B4);
    real r22C8#1 = RMul(realLit2255,vdot2289);
    real r22C9#1 = RAdd(r22C8,r22B2);
    real r22CA#1 = RAdd(r22C9,r22B4);
    tensor[3] tensor22CB#1 = <tensor[3]>[r22C7,r22CA,r22B6];
    real vdot22EE#1 = VDot<3>(op1_e3_l_42236,tensor22BE);
    real vdot22F0#1 = VDot<3>(op1_e3_l_42236,tensor22C4);
    real vdot22F2#1 = VDot<3>(op1_e3_l_42236,tensor22CB);
    tensor[3] op1_e3_l_4722EC#1 = <tensor[3]>[vdot22EE,vdot22F0,vdot22F2];
    tensor[3] op1_e3_l_5022FB#3 = VScale<3>(op1_e3_l_9223F,op1_e3_l_4722EC);
    real r22FF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FB);
    real r2300#3 = RMul(op1_e3_l_9223F,op1_e3_l_3822A4);
    real r2301#2 = RMul(r2300,r22FF);
    real r2302#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FB);
    real r2303#2 = RMul(r2300,r2302);
    real r2304#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FB);
    real r2305#2 = RMul(r2300,r2304);
    tensor[3] camV22FE#1 = <tensor[3]>[r2301,r2303,r2305];
    globals.camV219B = camV22FE;
    globals.camDist219C = op1_e3_l_7223C;
    real _t2311#1 = 0.314159265358979323846264338327950288e1;
    real _t2313#1 = 0.36e3;
    real op1_e3_l_52315#1 = RMul(camFOV2206,_t2311);
    real op1_e3_l_62318#1 = RDiv(op1_e3_l_52315,_t2313);
    real op1_e3_l_10231B#2 = Tan(op1_e3_l_62318);
    real camVmax231E#1 = RMul(op1_e3_l_10231B,op1_e3_l_7223C);
    globals.camVmax219D = camVmax231E;
    real _t2322#1 = IntToReal(iresU2208);
    real _t2324#1 = IntToReal(iresV220A);
    real r2327#1 = RMul(_t2322,op1_e3_l_10231B);
    real op1_e3_l_142326#1 = RMul(r2327,op1_e3_l_7223C);
    real camUmax232B#1 = RDiv(op1_e3_l_142326,_t2324);
    globals.camUmax219E = camUmax232B;
    real camNearVsp232F#1 = RAdd(camNear2202,op1_e3_l_7223C);
    globals.camNearVsp219F = camNearVsp232F;
    real camFarVsp2333#1 = RAdd(camFar2204,op1_e3_l_7223C);
    globals.camFarVsp21A0 = camFarVsp2333;
    real op1_e3_l_32339#1 = VDot<3>(litdir220C,litdir220C);
    real op1_e3_l_4233C#1 = Sqrt(op1_e3_l_32339);
    real op1_e3_l_5233F#1 = RDiv(realLit2240,op1_e3_l_4233C);
    real r2345#1 = VIndex<3,0>(camU22A9);
    real r2346#3 = TensorIndex<tensor[3],[0]>(litdir220C);
    real r2347#1 = RMul(r2345,r2346);
    real r2349#3 = TensorIndex<tensor[3],[1]>(litdir220C);
    real r234A#1 = RMul(r2301,r2349);
    real r234B#1 = VIndex<3,0>(camN2244);
    real r234C#3 = TensorIndex<tensor[3],[2]>(litdir220C);
    real r234D#1 = RMul(r234B,r234C);
    real r234E#1 = RAdd(r2347,r234A);
    real r234F#1 = RAdd(r234E,r234D);
    real r2350#1 = VIndex<3,1>(camU22A9);
    real r2351#1 = RMul(r2350,r2346);
    real r2353#1 = RMul(r2303,r2349);
    real r2354#1 = VIndex<3,1>(camN2244);
    real r2355#1 = RMul(r2354,r234C);
    real r2356#1 = RAdd(r2351,r2353);
    real r2357#1 = RAdd(r2356,r2355);
    real r2358#1 = VIndex<3,2>(camU22A9);
    real r2359#1 = RMul(r2358,r2346);
    real r235B#1 = RMul(r2305,r2349);
    real r235C#1 = VIndex<3,2>(camN2244);
    real r235D#1 = RMul(r235C,r234C);
    real r235E#1 = RAdd(r2359,r235B);
    real r235F#1 = RAdd(r235E,r235D);
    tensor[3] op1_e3_l_62344#1 = <tensor[3]>[r234F,r2357,r235F];
    tensor[3] litwsp237D#1 = VScale<3>(op1_e3_l_5233F,op1_e3_l_62344);
    globals.litwsp21A1 = litwsp237D;
    globals._t21A2 = _t2230;
    globals._tX21A3 = _t222E;
    globals._tXX21A4 = _t222C;
    return
## strand
  strand ray (int ui2387#1, int vi2388#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2399:  preds = []
        tensor[3] camEye239A#1 = globals.camEye2180;
        bool camOrtho239C#2 = globals.camOrtho2186;
        int iresU239E#1 = globals.iresU2187;
        int iresV23A0#1 = globals.iresV2188;
        real rayStep23A2#1 = globals.rayStep2189;
        real refStep23A4#1 = globals.refStep218A;
        tensor[4] phong23A6#4 = globals.phong2192;
        tensor[3] camN23A8#1 = globals.camN2199;
        tensor[3] camU23AA#1 = globals.camU219A;
        tensor[3] camV23AC#1 = globals.camV219B;
        real camDist23AE#1 = globals.camDist219C;
        real camVmax23B0#2 = globals.camVmax219D;
        real camUmax23B2#2 = globals.camUmax219E;
        real camNearVsp23B4#1 = globals.camNearVsp219F;
        real _t23B6#4 = -0.5e0;
        real _t23B8#1 = IntToReal(ui2387);
        real _t23BA#1 = IntToReal(iresU239E);
        real _t23BC#2 = 0.5e0;
        real op1_e3_l_623BE#1 = RSub(_t23BA,_t23BC);
        real op1_e3_l_723C1#1 = RSub(_t23B8,_t23B6);
        real op1_e3_l_823C4#1 = RSub(op1_e3_l_623BE,_t23B6);
        real op1_e3_l_923C7#2 = RNeg(camUmax23B2);
        real op1_e3_l_1023CA#1 = RDiv(op1_e3_l_723C1,op1_e3_l_823C4);
        real op1_e3_l_1123CD#1 = RSub(camUmax23B2,op1_e3_l_923C7);
        real op1_e3_l_1323D0#1 = RMul(op1_e3_l_1023CA,op1_e3_l_1123CD);
        real rayU23D3#2 = RAdd(op1_e3_l_923C7,op1_e3_l_1323D0);
        real _t23D6#1 = IntToReal(vi2388);
        real _t23D8#1 = IntToReal(iresV23A0);
        real op1_e3_l_623DA#1 = RSub(_t23D8,_t23BC);
        real op1_e3_l_723DD#1 = RSub(_t23D6,_t23B6);
        real op1_e3_l_823E0#1 = RSub(op1_e3_l_623DA,_t23B6);
        real op1_e3_l_923E3#2 = RNeg(camVmax23B0);
        real op1_e3_l_1023E6#1 = RDiv(op1_e3_l_723DD,op1_e3_l_823E0);
        real op1_e3_l_1123E9#1 = RSub(camVmax23B0,op1_e3_l_923E3);
        real op1_e3_l_1323EC#1 = RMul(op1_e3_l_1023E6,op1_e3_l_1123E9);
        real rayV23EF#2 = RAdd(op1_e3_l_923E3,op1_e3_l_1323EC);
        tensor[3] op1_e3_l_322401#1 = VScale<3>(rayU23D3,camU23AA);
        tensor[3] op1_e3_l_332404#1 = VScale<3>(rayV23EF,camV23AC);
        tensor[3] UV2407#5 = VAdd<3>(op1_e3_l_322401,op1_e3_l_332404);
        if camOrtho239C then goto JOIN240D else goto ASSIGN2467
      JOIN240D:  preds = [COND240A,ASSIGN2468]
        tensor[3] _t240B#1 = phi(UV2407,_t240C)
        tensor[3] rayOrig240E#1 = VAdd<3>(camEye239A,_t240B);
        if camOrtho239C then goto ASSIGN2413 else goto ASSIGN245D
      ASSIGN2413:  preds = [COND2411]
        real _t2412#3 = 0.e0;
        tensor[3] _t2414#1 = <tensor[3]>[_t2412,_t2412,_t2412];
        goto JOIN2418
      JOIN2418:  preds = [ASSIGN2415,ASSIGN2465]
        tensor[3] _t2416#1 = phi(_t2414,_t2417)
        tensor[3] rayVec2419#4 = VAdd<3>(camN23A8,_t2416);
        real op1_e3_l_6241C#1 = VDot<3>(rayVec2419,rayVec2419);
        real op1_e3_l_7241F#2 = Sqrt(op1_e3_l_6241C);
        real op1_e3_l_82422#1 = RMul(rayStep23A2,op1_e3_l_7241F);
        real alphaFix2425#1 = RDiv(op1_e3_l_82422,refStep23A4);
        real realLit2429#2 = 0.1e1;
        real op1_e3_l_92428#1 = RDiv(realLit2429,op1_e3_l_7241F);
        tensor[3] op1_e3_l_10242D#1 = VScale<3>(op1_e3_l_92428,rayVec2419);
        tensor[3] eyeDir2430#1 = VNeg<3>(op1_e3_l_10242D);
        real phKa2433#1 = VIndex<4,0>(phong23A6);
        real phKd2435#1 = VIndex<4,1>(phong23A6);
        real phKs2437#1 = VIndex<4,2>(phong23A6);
        real phSp2439#1 = VIndex<4,3>(phong23A6);
        real _t243B#8 = 0.e0;
        tensor[4] rgba243D#1 = <tensor[4]>[_t243B,_t243B,_t243B,_t243B];
        tensor[3] rgb243F#1 = <tensor[3]>[_t243B,_t243B,_t243B];
        self.rayU = rayU23D3;
        self.rayV = rayV23EF;
        self.rayN = camNearVsp23B4;
        self.UV = UV2407;
        self.rayOrig = rayOrig240E;
        self.rayVec = rayVec2419;
        self.alphaFix = alphaFix2425;
        self.eyeDir = eyeDir2430;
        self.phKa = phKa2433;
        self.phKd = phKd2435;
        self.phKs = phKs2437;
        self.phSp = phSp2439;
        self.rgba = rgba243D;
        self.raw = _t243B;
        self.rgb = rgb243F;
        self.transp = realLit2429;
        return
      ASSIGN245D:  preds = [COND2411]
        real realLit2454#1 = 0.1e1;
        real r2455#3 = RDiv(realLit2454,camDist23AE);
        real r2456#1 = TensorIndex<tensor[3],[0]>(UV2407);
        real r2457#1 = RMul(r2455,r2456);
        real r2458#1 = TensorIndex<tensor[3],[1]>(UV2407);
        real r2459#1 = RMul(r2455,r2458);
        real r245A#1 = TensorIndex<tensor[3],[2]>(UV2407);
        real r245B#1 = RMul(r2455,r245A);
        tensor[3] _t2417#1 = <tensor[3]>[r2457,r2459,r245B];
        goto JOIN2418
      ASSIGN2467:  preds = [COND240A]
        real _t2466#3 = 0.e0;
        tensor[3] _t240C#1 = <tensor[3]>[_t2466,_t2466,_t2466];
        goto JOIN240D
    end state init
    method update
        ENTRY2469:  preds = []
          image(IMAGE1D<double[3]>) cmap246A#17 = globals.cmap217F;
          int _t246C#3 = globals._t21A2;
          femData:Space _t246E#252 = globals._tX21A3;
          femData:FemFunc _t2470#252 = globals._tXX21A4;
          image(IMAGE3D<float[]>) umm2472#66 = globals.umm2198;
          femData:Mesh block2478#1 = globals.block217B;
          real rayStep247A#1 = globals.rayStep2189;
          real transp0247C#1 = globals.transp0218B;
          real thick247E#1 = globals.thick218C;
          real fStrTh2480#1 = globals.fStrTh218D;
          real fMaskTh2482#1 = globals.fMaskTh218E;
          real fBias2484#1 = globals.fBias218F;
          real maxAlpha2486#1 = globals.maxAlpha2190;
          tensor[3] mcNear2488#2 = globals.mcNear2193;
          tensor[3] mcFar248A#1 = globals.mcFar2194;
          tensor[2] cminmax248C#2 = globals.cminmax2196;
          bool analytical248E#1 = globals.analytical2197;
          real camNearVsp2490#2 = globals.camNearVsp219F;
          real camFarVsp2492#2 = globals.camFarVsp21A0;
          tensor[3] litwsp2494#2 = globals.litwsp21A1;
          real rayN2496#1 = self.rayN;
          tensor[3] rayOrig2498#1 = self.rayOrig;
          tensor[3] rayVec249A#1 = self.rayVec;
          real alphaFix249C#1 = self.alphaFix;
          tensor[3] eyeDir249E#1 = self.eyeDir;
          real phKa24A0#1 = self.phKa;
          real phKd24A2#1 = self.phKd;
          real phKs24A4#2 = self.phKs;
          real phSp24A6#1 = self.phSp;
          tensor[3] rgb24A8#1 = self.rgb;
          real transp24AA#2 = self.transp;
          real rayN24AC#8 = RAdd(rayN2496,rayStep247A);
          bool _t24AF#1 = GT<real>(rayN24AC,camFarVsp2492);
          if _t24AF then goto SAVE24B2 else goto JOIN24B4
        SAVE24B2:  preds = [COND24B1]
          self.rayN = rayN24AC;
          stabilize
          goto JOIN24B4
        JOIN24B4:  preds = [*STABILIZE24B3,COND24B1]
          tensor[3] op1_e3_l_524B5#1 = VScale<3>(rayN24AC,rayVec249A);
          tensor[3] pos24B8#11 = VAdd<3>(rayOrig2498,op1_e3_l_524B5);
          femData:RefCell _t24BB#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2478);
          real _t24BD#1 = 0.1e-8;
          bool _t24BF#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BB,pos24B8,_t24BD);
          if _t24BF then goto ASSIGN25C2 else goto ASSIGN46AE
        ASSIGN25C2:  preds = [COND24C1]
          int ilit24C3#1 = 84;
          int mulRes24C4#84 = IMul(_t246C,ilit24C3);
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,mulRes24C4);
          int ilit24C8#86 = 1;
          int addRes24C9#1 = IAdd(mulRes24C4,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24C9);
          int ilit24CB#1 = 2;
          int addRes24CC#1 = IAdd(mulRes24C4,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CC);
          int ilit24CE#1 = 3;
          int addRes24CF#1 = IAdd(mulRes24C4,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CF);
          int ilit24D1#1 = 4;
          int addRes24D2#1 = IAdd(mulRes24C4,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D2);
          int ilit24D4#1 = 5;
          int addRes24D5#1 = IAdd(mulRes24C4,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D5);
          int ilit24D7#1 = 6;
          int addRes24D8#1 = IAdd(mulRes24C4,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D8);
          int ilit24DA#1 = 7;
          int addRes24DB#1 = IAdd(mulRes24C4,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DB);
          int ilit24DD#1 = 8;
          int addRes24DE#1 = IAdd(mulRes24C4,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DE);
          int ilit24E0#1 = 9;
          int addRes24E1#1 = IAdd(mulRes24C4,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E1);
          int ilit24E3#1 = 10;
          int addRes24E4#1 = IAdd(mulRes24C4,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E4);
          int ilit24E6#1 = 11;
          int addRes24E7#1 = IAdd(mulRes24C4,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E7);
          int ilit24E9#1 = 12;
          int addRes24EA#1 = IAdd(mulRes24C4,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24EA);
          int ilit24EC#1 = 13;
          int addRes24ED#1 = IAdd(mulRes24C4,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24ED);
          int ilit24EF#1 = 14;
          int addRes24F0#1 = IAdd(mulRes24C4,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F0);
          int ilit24F2#1 = 15;
          int addRes24F3#1 = IAdd(mulRes24C4,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F3);
          int ilit24F5#1 = 16;
          int addRes24F6#1 = IAdd(mulRes24C4,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F6);
          int ilit24F8#1 = 17;
          int addRes24F9#1 = IAdd(mulRes24C4,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F9);
          int ilit24FB#1 = 18;
          int addRes24FC#1 = IAdd(mulRes24C4,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FC);
          int ilit24FE#1 = 19;
          int addRes24FF#1 = IAdd(mulRes24C4,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FF);
          int ilit2501#1 = 20;
          int addRes2502#1 = IAdd(mulRes24C4,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2502);
          int ilit2504#1 = 21;
          int addRes2505#1 = IAdd(mulRes24C4,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2505);
          int ilit2507#1 = 22;
          int addRes2508#1 = IAdd(mulRes24C4,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2508);
          int ilit250A#1 = 23;
          int addRes250B#1 = IAdd(mulRes24C4,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250B);
          int ilit250D#1 = 24;
          int addRes250E#1 = IAdd(mulRes24C4,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250E);
          int ilit2510#1 = 25;
          int addRes2511#1 = IAdd(mulRes24C4,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2511);
          int ilit2513#1 = 26;
          int addRes2514#1 = IAdd(mulRes24C4,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2514);
          int ilit2516#1 = 27;
          int addRes2517#1 = IAdd(mulRes24C4,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2517);
          int ilit2519#1 = 28;
          int addRes251A#1 = IAdd(mulRes24C4,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251A);
          int ilit251C#1 = 29;
          int addRes251D#1 = IAdd(mulRes24C4,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251D);
          int ilit251F#1 = 30;
          int addRes2520#1 = IAdd(mulRes24C4,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2520);
          int ilit2522#1 = 31;
          int addRes2523#1 = IAdd(mulRes24C4,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2523);
          int ilit2525#1 = 32;
          int addRes2526#1 = IAdd(mulRes24C4,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2526);
          int ilit2528#1 = 33;
          int addRes2529#1 = IAdd(mulRes24C4,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2529);
          int ilit252B#1 = 34;
          int addRes252C#1 = IAdd(mulRes24C4,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252C);
          int ilit252E#1 = 35;
          int addRes252F#1 = IAdd(mulRes24C4,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252F);
          int ilit2531#1 = 36;
          int addRes2532#1 = IAdd(mulRes24C4,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2532);
          int ilit2534#1 = 37;
          int addRes2535#1 = IAdd(mulRes24C4,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2535);
          int ilit2537#1 = 38;
          int addRes2538#1 = IAdd(mulRes24C4,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2538);
          int ilit253A#1 = 39;
          int addRes253B#1 = IAdd(mulRes24C4,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253B);
          int ilit253D#1 = 40;
          int addRes253E#1 = IAdd(mulRes24C4,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253E);
          int ilit2540#1 = 41;
          int addRes2541#1 = IAdd(mulRes24C4,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2541);
          int ilit2543#1 = 42;
          int addRes2544#1 = IAdd(mulRes24C4,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2544);
          int ilit2546#1 = 43;
          int addRes2547#1 = IAdd(mulRes24C4,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2547);
          int ilit2549#1 = 44;
          int addRes254A#1 = IAdd(mulRes24C4,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254A);
          int ilit254C#1 = 45;
          int addRes254D#1 = IAdd(mulRes24C4,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254D);
          int ilit254F#1 = 46;
          int addRes2550#1 = IAdd(mulRes24C4,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2550);
          int ilit2552#1 = 47;
          int addRes2553#1 = IAdd(mulRes24C4,ilit2552);
          int idx2554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2553);
          int ilit2555#1 = 48;
          int addRes2556#1 = IAdd(mulRes24C4,ilit2555);
          int idx2557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2556);
          int ilit2558#1 = 49;
          int addRes2559#1 = IAdd(mulRes24C4,ilit2558);
          int idx255A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2559);
          int ilit255B#1 = 50;
          int addRes255C#1 = IAdd(mulRes24C4,ilit255B);
          int idx255D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255C);
          int ilit255E#1 = 51;
          int addRes255F#1 = IAdd(mulRes24C4,ilit255E);
          int idx2560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255F);
          int ilit2561#1 = 52;
          int addRes2562#1 = IAdd(mulRes24C4,ilit2561);
          int idx2563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2562);
          int ilit2564#1 = 53;
          int addRes2565#1 = IAdd(mulRes24C4,ilit2564);
          int idx2566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2565);
          int ilit2567#1 = 54;
          int addRes2568#1 = IAdd(mulRes24C4,ilit2567);
          int idx2569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2568);
          int ilit256A#1 = 55;
          int addRes256B#1 = IAdd(mulRes24C4,ilit256A);
          int idx256C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256B);
          int ilit256D#1 = 56;
          int addRes256E#1 = IAdd(mulRes24C4,ilit256D);
          int idx256F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256E);
          int ilit2570#1 = 57;
          int addRes2571#1 = IAdd(mulRes24C4,ilit2570);
          int idx2572#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2571);
          int ilit2573#1 = 58;
          int addRes2574#1 = IAdd(mulRes24C4,ilit2573);
          int idx2575#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2574);
          int ilit2576#1 = 59;
          int addRes2577#1 = IAdd(mulRes24C4,ilit2576);
          int idx2578#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2577);
          int ilit2579#1 = 60;
          int addRes257A#1 = IAdd(mulRes24C4,ilit2579);
          int idx257B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257A);
          int ilit257C#1 = 61;
          int addRes257D#1 = IAdd(mulRes24C4,ilit257C);
          int idx257E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257D);
          int ilit257F#1 = 62;
          int addRes2580#1 = IAdd(mulRes24C4,ilit257F);
          int idx2581#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2580);
          int ilit2582#1 = 63;
          int addRes2583#1 = IAdd(mulRes24C4,ilit2582);
          int idx2584#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2583);
          int ilit2585#1 = 64;
          int addRes2586#1 = IAdd(mulRes24C4,ilit2585);
          int idx2587#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2586);
          int ilit2588#1 = 65;
          int addRes2589#1 = IAdd(mulRes24C4,ilit2588);
          int idx258A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2589);
          int ilit258B#1 = 66;
          int addRes258C#1 = IAdd(mulRes24C4,ilit258B);
          int idx258D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258C);
          int ilit258E#1 = 67;
          int addRes258F#1 = IAdd(mulRes24C4,ilit258E);
          int idx2590#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258F);
          int ilit2591#1 = 68;
          int addRes2592#1 = IAdd(mulRes24C4,ilit2591);
          int idx2593#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2592);
          int ilit2594#1 = 69;
          int addRes2595#1 = IAdd(mulRes24C4,ilit2594);
          int idx2596#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2595);
          int ilit2597#1 = 70;
          int addRes2598#1 = IAdd(mulRes24C4,ilit2597);
          int idx2599#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2598);
          int ilit259A#1 = 71;
          int addRes259B#1 = IAdd(mulRes24C4,ilit259A);
          int idx259C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259B);
          int ilit259D#1 = 72;
          int addRes259E#1 = IAdd(mulRes24C4,ilit259D);
          int idx259F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259E);
          int ilit25A0#1 = 73;
          int addRes25A1#1 = IAdd(mulRes24C4,ilit25A0);
          int idx25A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A1);
          int ilit25A3#1 = 74;
          int addRes25A4#1 = IAdd(mulRes24C4,ilit25A3);
          int idx25A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A4);
          int ilit25A6#1 = 75;
          int addRes25A7#1 = IAdd(mulRes24C4,ilit25A6);
          int idx25A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A7);
          int ilit25A9#1 = 76;
          int addRes25AA#1 = IAdd(mulRes24C4,ilit25A9);
          int idx25AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AA);
          int ilit25AC#1 = 77;
          int addRes25AD#1 = IAdd(mulRes24C4,ilit25AC);
          int idx25AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AD);
          int ilit25AF#1 = 78;
          int addRes25B0#1 = IAdd(mulRes24C4,ilit25AF);
          int idx25B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B0);
          int ilit25B2#1 = 79;
          int addRes25B3#1 = IAdd(mulRes24C4,ilit25B2);
          int idx25B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B3);
          int ilit25B5#1 = 80;
          int addRes25B6#1 = IAdd(mulRes24C4,ilit25B5);
          int idx25B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B6);
          int ilit25B8#1 = 81;
          int addRes25B9#1 = IAdd(mulRes24C4,ilit25B8);
          int idx25BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B9);
          int ilit25BB#1 = 82;
          int addRes25BC#1 = IAdd(mulRes24C4,ilit25BB);
          int idx25BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BC);
          int ilit25BE#1 = 83;
          int addRes25BF#1 = IAdd(mulRes24C4,ilit25BE);
          int idx25C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BF);
          int mulRes26C6#1 = IMul(ilit24C8,idx24C7);
          int mulRes26C8#1 = IMul(ilit24C8,idx24CA);
          int mulRes26CB#1 = IMul(ilit24C8,idx24CD);
          int mulRes26CE#1 = IMul(ilit24C8,idx24D0);
          int mulRes26D1#1 = IMul(ilit24C8,idx24D3);
          int mulRes26D4#1 = IMul(ilit24C8,idx24D6);
          int mulRes26D7#1 = IMul(ilit24C8,idx24D9);
          int mulRes26DA#1 = IMul(ilit24C8,idx24DC);
          int mulRes26DD#1 = IMul(ilit24C8,idx24DF);
          int mulRes26E0#1 = IMul(ilit24C8,idx24E2);
          int mulRes26E3#1 = IMul(ilit24C8,idx24E5);
          int mulRes26E6#1 = IMul(ilit24C8,idx24E8);
          int mulRes26E9#1 = IMul(ilit24C8,idx24EB);
          int mulRes26EC#1 = IMul(ilit24C8,idx24EE);
          int mulRes26EF#1 = IMul(ilit24C8,idx24F1);
          int mulRes26F2#1 = IMul(ilit24C8,idx24F4);
          int mulRes26F5#1 = IMul(ilit24C8,idx24F7);
          int mulRes26F8#1 = IMul(ilit24C8,idx24FA);
          int mulRes26FB#1 = IMul(ilit24C8,idx24FD);
          int mulRes26FE#1 = IMul(ilit24C8,idx2500);
          int mulRes2701#1 = IMul(ilit24C8,idx2503);
          int mulRes2704#1 = IMul(ilit24C8,idx2506);
          int mulRes2707#1 = IMul(ilit24C8,idx2509);
          int mulRes270A#1 = IMul(ilit24C8,idx250C);
          int mulRes270D#1 = IMul(ilit24C8,idx250F);
          int mulRes2710#1 = IMul(ilit24C8,idx2512);
          int mulRes2713#1 = IMul(ilit24C8,idx2515);
          int mulRes2716#1 = IMul(ilit24C8,idx2518);
          int mulRes2719#1 = IMul(ilit24C8,idx251B);
          int mulRes271C#1 = IMul(ilit24C8,idx251E);
          int mulRes271F#1 = IMul(ilit24C8,idx2521);
          int mulRes2722#1 = IMul(ilit24C8,idx2524);
          int mulRes2725#1 = IMul(ilit24C8,idx2527);
          int mulRes2728#1 = IMul(ilit24C8,idx252A);
          int mulRes272B#1 = IMul(ilit24C8,idx252D);
          int mulRes272E#1 = IMul(ilit24C8,idx2530);
          int mulRes2731#1 = IMul(ilit24C8,idx2533);
          int mulRes2734#1 = IMul(ilit24C8,idx2536);
          int mulRes2737#1 = IMul(ilit24C8,idx2539);
          int mulRes273A#1 = IMul(ilit24C8,idx253C);
          int mulRes273D#1 = IMul(ilit24C8,idx253F);
          int mulRes2740#1 = IMul(ilit24C8,idx2542);
          int mulRes2743#1 = IMul(ilit24C8,idx2545);
          int mulRes2746#1 = IMul(ilit24C8,idx2548);
          int mulRes2749#1 = IMul(ilit24C8,idx254B);
          int mulRes274C#1 = IMul(ilit24C8,idx254E);
          int mulRes274F#1 = IMul(ilit24C8,idx2551);
          int mulRes2752#1 = IMul(ilit24C8,idx2554);
          int mulRes2755#1 = IMul(ilit24C8,idx2557);
          int mulRes2758#1 = IMul(ilit24C8,idx255A);
          int mulRes275B#1 = IMul(ilit24C8,idx255D);
          int mulRes275E#1 = IMul(ilit24C8,idx2560);
          int mulRes2761#1 = IMul(ilit24C8,idx2563);
          int mulRes2764#1 = IMul(ilit24C8,idx2566);
          int mulRes2767#1 = IMul(ilit24C8,idx2569);
          int mulRes276A#1 = IMul(ilit24C8,idx256C);
          int mulRes276D#1 = IMul(ilit24C8,idx256F);
          int mulRes2770#1 = IMul(ilit24C8,idx2572);
          int mulRes2773#1 = IMul(ilit24C8,idx2575);
          int mulRes2776#1 = IMul(ilit24C8,idx2578);
          int mulRes2779#1 = IMul(ilit24C8,idx257B);
          int mulRes277C#1 = IMul(ilit24C8,idx257E);
          int mulRes277F#1 = IMul(ilit24C8,idx2581);
          int mulRes2782#1 = IMul(ilit24C8,idx2584);
          int mulRes2785#1 = IMul(ilit24C8,idx2587);
          int mulRes2788#1 = IMul(ilit24C8,idx258A);
          int mulRes278B#1 = IMul(ilit24C8,idx258D);
          int mulRes278E#1 = IMul(ilit24C8,idx2590);
          int mulRes2791#1 = IMul(ilit24C8,idx2593);
          int mulRes2794#1 = IMul(ilit24C8,idx2596);
          int mulRes2797#1 = IMul(ilit24C8,idx2599);
          int mulRes279A#1 = IMul(ilit24C8,idx259C);
          int mulRes279D#1 = IMul(ilit24C8,idx259F);
          int mulRes27A0#1 = IMul(ilit24C8,idx25A2);
          int mulRes27A3#1 = IMul(ilit24C8,idx25A5);
          int mulRes27A6#1 = IMul(ilit24C8,idx25A8);
          int mulRes27A9#1 = IMul(ilit24C8,idx25AB);
          int mulRes27AC#1 = IMul(ilit24C8,idx25AE);
          int mulRes27AF#1 = IMul(ilit24C8,idx25B1);
          int mulRes27B2#1 = IMul(ilit24C8,idx25B4);
          int mulRes27B5#1 = IMul(ilit24C8,idx25B7);
          int mulRes27B8#1 = IMul(ilit24C8,idx25BA);
          int mulRes27BB#1 = IMul(ilit24C8,idx25BD);
          int mulRes27BE#1 = IMul(ilit24C8,idx25C0);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C6);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C8);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CB);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CE);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D1);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D4);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D7);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DA);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DD);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E0);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E3);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E6);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E9);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EC);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EF);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F2);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F5);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F8);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FB);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FE);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2701);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2704);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2707);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270A);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270D);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2710);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2713);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2716);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2719);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271C);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271F);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2722);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2725);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2728);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272B);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272E);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2731);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2734);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2737);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273A);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273D);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2740);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2743);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2746);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2749);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274C);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274F);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2752);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2755);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2758);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275B);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275E);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2761);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2764);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2767);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276A);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276D);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2770);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2773);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2776);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2779);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277C);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277F);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2782);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2785);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2788);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278B);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278E);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2791);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2794);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2797);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279A);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279D);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A0);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A3);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A6);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A9);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AC);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AF);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B2);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B5);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B8);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BB);
          real dof2812#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BE);
          tensor[84] dofs2813#9 = <tensor[84]>[dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811,dof2812];
          real varAcc2967#20 = VIndex<3,0>(pos24B8);
          real varAcc2968#10 = VIndex<3,1>(pos24B8);
          real varAcc2969#10 = VIndex<3,2>(pos24B8);
          real basisEval296A#378 = 0.e0;
          real coeff296B#47 = 0.2e1;
          real one296C#80 = 0.1e1;
          real prod296D#6 = RMul(one296C,one296C);
          real prod296E#2 = RMul(one296C,prod296D);
          real basisEval296F#3 = RMul(coeff296B,prod296E);
          real prod2971#5 = RMul(one296C,varAcc2969);
          real prod2972#3 = RMul(one296C,prod2971);
          real basisEval2973#5 = RMul(coeff296B,prod2972);
          real prod2975#5 = RMul(varAcc2968,one296C);
          real prod2976#3 = RMul(one296C,prod2975);
          real basisEval2977#5 = RMul(coeff296B,prod2976);
          real coeff2978#25 = 0.6e1;
          real prod297A#3 = RMul(varAcc2967,prod296D);
          real basisEval297B#1 = RMul(coeff2978,prod297A);
          real prod2297C#5 = RMul(varAcc2969,varAcc2969);
          real prod297D#4 = RMul(one296C,prod2297C);
          real prod297E#4 = RMul(one296C,prod297D);
          real basisEval297F#2 = RMul(coeff296B,prod297E);
          real prod2980#4 = RMul(varAcc2968,varAcc2969);
          real prod2981#4 = RMul(one296C,prod2980);
          real basisEval2982#5 = RMul(coeff296B,prod2981);
          real prod22983#5 = RMul(varAcc2968,varAcc2968);
          real prod2984#4 = RMul(prod22983,one296C);
          real prod2985#4 = RMul(one296C,prod2984);
          real basisEval2986#2 = RMul(coeff296B,prod2985);
          real prod2987#4 = RMul(varAcc2967,prod2971);
          real basisEval2988#2 = RMul(coeff2978,prod2987);
          real prod2989#4 = RMul(varAcc2967,prod2975);
          real basisEval298A#2 = RMul(coeff2978,prod2989);
          real coeff298B#15 = 0.12e2;
          real prod2298C#11 = RMul(varAcc2967,varAcc2967);
          real prod298D#4 = RMul(prod2298C,prod296D);
          real basisEval298E#1 = RMul(coeff298B,prod298D);
          real prod3298F#4 = RMul(prod2297C,varAcc2969);
          real prod2990#3 = RMul(one296C,prod3298F);
          real prod2991#4 = RMul(one296C,prod2990);
          real basisEval2992#2 = RMul(coeff296B,prod2991);
          real prod2993#3 = RMul(varAcc2968,prod2297C);
          real prod2994#5 = RMul(one296C,prod2993);
          real basisEval2995#3 = RMul(coeff296B,prod2994);
          real prod2996#3 = RMul(prod22983,varAcc2969);
          real prod2997#5 = RMul(one296C,prod2996);
          real basisEval2998#3 = RMul(coeff296B,prod2997);
          real prod32999#4 = RMul(prod22983,varAcc2968);
          real prod299A#3 = RMul(prod32999,one296C);
          real prod299B#4 = RMul(one296C,prod299A);
          real basisEval299C#2 = RMul(coeff296B,prod299B);
          real prod299D#5 = RMul(varAcc2967,prod297D);
          real basisEval299E#2 = RMul(coeff2978,prod299D);
          real prod299F#3 = RMul(varAcc2967,prod2980);
          real basisEval29A0#3 = RMul(coeff2978,prod299F);
          real prod29A1#5 = RMul(varAcc2967,prod2984);
          real basisEval29A2#2 = RMul(coeff2978,prod29A1);
          real prod29A3#5 = RMul(prod2298C,prod2971);
          real basisEval29A4#1 = RMul(coeff298B,prod29A3);
          real prod29A5#5 = RMul(prod2298C,prod2975);
          real basisEval29A6#1 = RMul(coeff298B,prod29A5);
          real coeff29A7#9 = 0.20e2;
          real prod329A8#7 = RMul(prod2298C,varAcc2967);
          real prod29A9#4 = RMul(prod329A8,prod296D);
          real basisEval29AA#1 = RMul(coeff29A7,prod29A9);
          real prod429AB#3 = RMul(prod3298F,varAcc2969);
          real prod29AC#2 = RMul(one296C,prod429AB);
          real prod29AD#4 = RMul(one296C,prod29AC);
          real basisEval29AE#2 = RMul(coeff296B,prod29AD);
          real prod29AF#2 = RMul(varAcc2968,prod3298F);
          real prod29B0#6 = RMul(one296C,prod29AF);
          real basisEval29B1#3 = RMul(coeff296B,prod29B0);
          real prod29B2#2 = RMul(prod22983,prod2297C);
          real prod29B3#5 = RMul(one296C,prod29B2);
          real basisEval29B4#1 = RMul(coeff296B,prod29B3);
          real prod29B5#2 = RMul(prod32999,varAcc2969);
          real prod29B6#6 = RMul(one296C,prod29B5);
          real basisEval29B7#3 = RMul(coeff296B,prod29B6);
          real prod429B8#3 = RMul(prod32999,varAcc2968);
          real prod29B9#2 = RMul(prod429B8,one296C);
          real prod29BA#4 = RMul(one296C,prod29B9);
          real basisEval29BB#2 = RMul(coeff296B,prod29BA);
          real prod29BC#6 = RMul(varAcc2967,prod2990);
          real basisEval29BD#1 = RMul(coeff2978,prod29BC);
          real prod29BE#5 = RMul(varAcc2967,prod2993);
          real basisEval29BF#4 = RMul(coeff2978,prod29BE);
          real prod29C0#5 = RMul(varAcc2967,prod2996);
          real basisEval29C1#4 = RMul(coeff2978,prod29C0);
          real prod29C2#6 = RMul(varAcc2967,prod299A);
          real basisEval29C3#1 = RMul(coeff2978,prod29C2);
          real prod29C4#5 = RMul(prod2298C,prod297D);
          real basisEval29C5#2 = RMul(coeff298B,prod29C4);
          real prod29C6#5 = RMul(prod2298C,prod2980);
          real basisEval29C7#1 = RMul(coeff298B,prod29C6);
          real prod29C8#5 = RMul(prod2298C,prod2984);
          real basisEval29C9#2 = RMul(coeff298B,prod29C8);
          real prod29CA#6 = RMul(prod329A8,prod2971);
          real basisEval29CB#1 = RMul(coeff29A7,prod29CA);
          real prod29CC#6 = RMul(prod329A8,prod2975);
          real basisEval29CD#1 = RMul(coeff29A7,prod29CC);
          real coeff29CE#3 = 0.30e2;
          real prod429CF#4 = RMul(prod329A8,varAcc2967);
          real prod29D0#4 = RMul(prod429CF,prod296D);
          real basisEval29D1#1 = RMul(coeff29CE,prod29D0);
          real basisEval29D2#6 = RMul(one296C,prod296E);
          real basisEval29D3#3 = RMul(one296C,prod2972);
          real basisEval29D4#5 = RMul(coeff296B,prod297A);
          real basisEval29D5#3 = RMul(one296C,prod297E);
          real coeff29D6#24 = 0.3e1;
          real basisEval29D7#3 = RMul(coeff29D6,prod2985);
          real basisEval29D8#5 = RMul(coeff296B,prod2987);
          real coeff29D9#25 = 0.4e1;
          real basisEval29DA#1 = RMul(coeff29D9,prod2989);
          real basisEval29DB#3 = RMul(coeff29D6,prod298D);
          real basisEval29DC#3 = RMul(one296C,prod2991);
          real basisEval29DD#2 = RMul(coeff29D6,prod2997);
          real basisEval29DE#3 = RMul(coeff29D9,prod299B);
          real basisEval29DF#3 = RMul(coeff296B,prod299D);
          real basisEval29E0#3 = RMul(coeff29D9,prod299F);
          real basisEval29E1#2 = RMul(coeff29D6,prod29A3);
          real basisEval29E2#2 = RMul(coeff2978,prod29A5);
          real basisEval29E3#3 = RMul(coeff29D9,prod29A9);
          real basisEval29E4#3 = RMul(one296C,prod29AD);
          real basisEval29E5#4 = RMul(coeff29D6,prod29B3);
          real basisEval29E6#2 = RMul(coeff29D9,prod29B6);
          real coeff29E7#9 = 0.5e1;
          real basisEval29E8#3 = RMul(coeff29E7,prod29BA);
          real basisEval29E9#3 = RMul(coeff296B,prod29BC);
          real basisEval29EA#1 = RMul(coeff29D9,prod29BE);
          real coeff29EB#6 = 0.8e1;
          real basisEval29EC#1 = RMul(coeff29EB,prod29C2);
          real basisEval29ED#4 = RMul(coeff29D6,prod29C4);
          real basisEval29EE#4 = RMul(coeff2978,prod29C6);
          real coeff29EF#3 = 0.9e1;
          real basisEval29F0#1 = RMul(coeff29EF,prod29C8);
          real basisEval29F1#2 = RMul(coeff29D9,prod29CA);
          real basisEval29F2#1 = RMul(coeff29EB,prod29CC);
          real basisEval29F3#3 = RMul(coeff29E7,prod29D0);
          real basisEval29F4#3 = RMul(one296C,prod2976);
          real basisEval29F5#3 = RMul(coeff29D6,prod297E);
          real basisEval29F6#3 = RMul(one296C,prod2985);
          real basisEval29F7#1 = RMul(coeff29D9,prod2987);
          real basisEval29F8#5 = RMul(coeff296B,prod2989);
          real basisEval29F9#3 = RMul(coeff29D9,prod2991);
          real basisEval29FA#2 = RMul(coeff29D6,prod2994);
          real basisEval29FB#3 = RMul(one296C,prod299B);
          real basisEval29FC#3 = RMul(coeff296B,prod29A1);
          real basisEval29FD#2 = RMul(coeff2978,prod29A3);
          real basisEval29FE#2 = RMul(coeff29D6,prod29A5);
          real basisEval29FF#3 = RMul(coeff29E7,prod29AD);
          real basisEval2A00#2 = RMul(coeff29D9,prod29B0);
          real basisEval2A01#3 = RMul(one296C,prod29BA);
          real basisEval2A02#1 = RMul(coeff29EB,prod29BC);
          real basisEval2A03#1 = RMul(coeff29D9,prod29C0);
          real basisEval2A04#3 = RMul(coeff296B,prod29C2);
          real basisEval2A05#1 = RMul(coeff29EF,prod29C4);
          real basisEval2A06#4 = RMul(coeff29D6,prod29C8);
          real basisEval2A07#1 = RMul(coeff29EB,prod29CA);
          real basisEval2A08#2 = RMul(coeff29D9,prod29CC);
          real basisEval2A09#1 = RMul(coeff2978,prod2976);
          real basisEval2A0A#2 = RMul(coeff2978,prod2981);
          real basisEval2A0B#1 = RMul(coeff298B,prod2985);
          real basisEval2A0C#2 = RMul(coeff296B,prod298D);
          real basisEval2A0D#2 = RMul(coeff2978,prod2994);
          real basisEval2A0E#1 = RMul(coeff298B,prod2997);
          real basisEval2A0F#1 = RMul(coeff29A7,prod299B);
          real basisEval2A10#1 = RMul(coeff298B,prod29A1);
          real basisEval2A11#3 = RMul(coeff296B,prod29A3);
          real basisEval2A12#2 = RMul(coeff296B,prod29A9);
          real basisEval2A13#1 = RMul(coeff2978,prod29B0);
          real basisEval2A14#2 = RMul(coeff298B,prod29B3);
          real basisEval2A15#1 = RMul(coeff29A7,prod29B6);
          real basisEval2A16#1 = RMul(coeff29CE,prod29BA);
          real basisEval2A17#1 = RMul(coeff298B,prod29C0);
          real basisEval2A18#1 = RMul(coeff29A7,prod29C2);
          real basisEval2A19#1 = RMul(coeff296B,prod29C4);
          real basisEval2A1A#3 = RMul(coeff296B,prod29CA);
          real basisEval2A1B#1 = RMul(coeff2978,prod29CC);
          real basisEval2A1C#2 = RMul(coeff296B,prod29D0);
          real basisEval2A1D#3 = RMul(one296C,prod297A);
          real basisEval2A1E#1 = RMul(coeff29D9,prod2981);
          real basisEval2A1F#3 = RMul(one296C,prod298D);
          real basisEval2A20#2 = RMul(coeff2978,prod2997);
          real basisEval2A21#2 = RMul(coeff29D6,prod299D);
          real basisEval2A22#2 = RMul(coeff29D6,prod29A1);
          real basisEval2A23#3 = RMul(coeff296B,prod29A5);
          real basisEval2A24#3 = RMul(one296C,prod29A9);
          real basisEval2A25#1 = RMul(coeff29EB,prod29B0);
          real basisEval2A26#1 = RMul(coeff29EF,prod29B3);
          real basisEval2A27#1 = RMul(coeff29EB,prod29B6);
          real basisEval2A28#2 = RMul(coeff29D9,prod29BC);
          real basisEval2A29#2 = RMul(coeff29D9,prod29C2);
          real basisEval2A2A#1 = RMul(coeff29D9,prod29C6);
          real basisEval2A2B#3 = RMul(coeff296B,prod29CC);
          real basisEval2A2C#3 = RMul(one296C,prod29D0);
          real basisEval2A2D#1 = RMul(coeff2978,prod2972);
          real basisEval2A2E#1 = RMul(coeff298B,prod297E);
          real basisEval2A2F#1 = RMul(coeff29A7,prod2991);
          real basisEval2A30#1 = RMul(coeff298B,prod2994);
          real basisEval2A31#1 = RMul(coeff298B,prod299D);
          real basisEval2A32#1 = RMul(coeff29CE,prod29AD);
          real basisEval2A33#1 = RMul(coeff29A7,prod29B0);
          real basisEval2A34#1 = RMul(coeff2978,prod29B6);
          real basisEval2A35#1 = RMul(coeff29A7,prod29BC);
          real basisEval2A36#1 = RMul(coeff298B,prod29BE);
          real basisEval2A37#1 = RMul(coeff296B,prod29C8);
          real basisEval2A38#1 = RMul(coeff2978,prod29CA);
          tensor[84] intermediateCons2A39#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval297B,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2982,basisEval2986,basisEval2988,basisEval298A,basisEval298E,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2995,basisEval2998,basisEval299C,basisEval299E,basisEval29A0,basisEval29A2,basisEval29A4,basisEval29A6,basisEval29AA,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval29B1,basisEval29B4,basisEval29B7,basisEval29BB,basisEval29BD,basisEval29BF,basisEval29C1,basisEval29C3,basisEval29C5,basisEval29C7,basisEval29C9,basisEval29CB,basisEval29CD,basisEval29D1];
          tensor[84] intermediateCons2A3A#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D3,basisEval2977,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D5,basisEval2982,basisEval29D7,basisEval296A,basisEval29D8,basisEval29DA,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29DC,basisEval2995,basisEval29DD,basisEval29DE,basisEval296A,basisEval29DF,basisEval29E0,basisEval29A2,basisEval296A,basisEval29E1,basisEval29E2,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29E4,basisEval29B1,basisEval29E5,basisEval29E6,basisEval29E8,basisEval296A,basisEval29E9,basisEval29EA,basisEval29C1,basisEval29EC,basisEval296A,basisEval29ED,basisEval29EE,basisEval29F0,basisEval296A,basisEval29F1,basisEval29F2,basisEval296A,basisEval29F3,basisEval296A];
          tensor[84] intermediateCons2A3B#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval29F4,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2982,basisEval29F6,basisEval296A,basisEval29F7,basisEval29F8,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval29FA,basisEval2998,basisEval29FB,basisEval296A,basisEval299E,basisEval29E0,basisEval29FC,basisEval296A,basisEval29FD,basisEval29FE,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A00,basisEval29E5,basisEval29B7,basisEval2A01,basisEval296A,basisEval2A02,basisEval29BF,basisEval2A03,basisEval2A04,basisEval296A,basisEval2A05,basisEval29EE,basisEval2A06,basisEval296A,basisEval2A07,basisEval2A08,basisEval296A,basisEval29F3,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3C#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2A09,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2A0A,basisEval2A0B,basisEval296A,basisEval296A,basisEval29D8,basisEval298A,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2A0D,basisEval2A0E,basisEval2A0F,basisEval296A,basisEval296A,basisEval29DF,basisEval29A0,basisEval2A10,basisEval296A,basisEval296A,basisEval2A11,basisEval29E2,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2A16,basisEval296A,basisEval296A,basisEval29E9,basisEval29BF,basisEval2A17,basisEval2A18,basisEval296A,basisEval296A,basisEval2A19,basisEval29EE,basisEval29C9,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A1B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3D#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval296A,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2A1E,basisEval29D7,basisEval296A,basisEval296A,basisEval29D8,basisEval29F8,basisEval296A,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval2A0D,basisEval2A20,basisEval29DE,basisEval296A,basisEval296A,basisEval2A21,basisEval29E0,basisEval2A22,basisEval296A,basisEval296A,basisEval2A11,basisEval2A23,basisEval296A,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A25,basisEval2A26,basisEval2A27,basisEval29E8,basisEval296A,basisEval296A,basisEval2A28,basisEval29BF,basisEval29C1,basisEval2A29,basisEval296A,basisEval296A,basisEval29ED,basisEval2A2A,basisEval2A06,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3E#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2D,basisEval2977,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2E,basisEval2A0A,basisEval2986,basisEval296A,basisEval296A,basisEval2988,basisEval29F8,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2F,basisEval2A30,basisEval2A20,basisEval299C,basisEval296A,basisEval296A,basisEval2A31,basisEval29A0,basisEval29FC,basisEval296A,basisEval296A,basisEval29FD,basisEval2A23,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A32,basisEval2A33,basisEval2A14,basisEval2A34,basisEval29BB,basisEval296A,basisEval296A,basisEval2A35,basisEval2A36,basisEval29C1,basisEval2A04,basisEval296A,basisEval296A,basisEval29C5,basisEval29EE,basisEval2A37,basisEval296A,basisEval296A,basisEval2A38,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          real vdot2B22#1 = VDot<84>(dofs2813,intermediateCons2A39);
          real vdot2B24#2 = VDot<84>(dofs2813,intermediateCons2A3A);
          real vdot2B26#2 = VDot<84>(dofs2813,intermediateCons2A3B);
          tensor[3] tensor2B27#1 = <tensor[3]>[vdot2B22,vdot2B24,vdot2B26];
          real vdot2B2B#1 = VDot<84>(dofs2813,intermediateCons2A3C);
          real vdot2B2D#2 = VDot<84>(dofs2813,intermediateCons2A3D);
          tensor[3] tensor2B2E#1 = <tensor[3]>[vdot2B24,vdot2B2B,vdot2B2D];
          real vdot2B34#1 = VDot<84>(dofs2813,intermediateCons2A3E);
          tensor[3] tensor2B35#1 = <tensor[3]>[vdot2B26,vdot2B2D,vdot2B34];
          tensor[3,3] _t2B20#1 = <tensor[3,3]>[tensor2B27,tensor2B2E,tensor2B35];
          real[3] _t2B4D#1 = EigenVals3x3(_t2B20);
          real _t2B51#1 = Subscript<real[3]>(_t2B4D,ilit24C8);
          real basisEval2B6E#1 = RMul(one296C,prod2981);
          real basisEval2B81#1 = RMul(one296C,prod2994);
          real basisEval2B84#1 = RMul(one296C,prod2997);
          real basisEval2B8C#3 = RMul(coeff296B,prod299F);
          real basisEval2B9D#1 = RMul(one296C,prod29B0);
          real basisEval2BA0#1 = RMul(one296C,prod29B3);
          real basisEval2BA3#1 = RMul(one296C,prod29B6);
          real basisEval2BAB#2 = RMul(coeff296B,prod29BE);
          real basisEval2BAD#2 = RMul(coeff296B,prod29C0);
          real basisEval2BB3#1 = RMul(coeff29D6,prod29C6);
          real prod52BBE#1 = RMul(prod429AB,varAcc2969);
          real prod2BBF#1 = RMul(one296C,prod52BBE);
          real prod2BC0#2 = RMul(one296C,prod2BBF);
          real basisEval2BC1#2 = RMul(one296C,prod2BC0);
          real prod2BC2#1 = RMul(varAcc2968,prod429AB);
          real prod2BC3#3 = RMul(one296C,prod2BC2);
          real basisEval2BC4#1 = RMul(one296C,prod2BC3);
          real prod2BC5#1 = RMul(prod22983,prod3298F);
          real prod2BC6#3 = RMul(one296C,prod2BC5);
          real basisEval2BC7#1 = RMul(one296C,prod2BC6);
          real prod2BC8#1 = RMul(prod32999,prod2297C);
          real prod2BC9#3 = RMul(one296C,prod2BC8);
          real basisEval2BCA#1 = RMul(one296C,prod2BC9);
          real prod2BCB#1 = RMul(prod429B8,varAcc2969);
          real prod2BCC#3 = RMul(one296C,prod2BCB);
          real basisEval2BCD#1 = RMul(one296C,prod2BCC);
          real prod52BCE#1 = RMul(prod429B8,varAcc2968);
          real prod2BCF#1 = RMul(prod52BCE,one296C);
          real prod2BD0#2 = RMul(one296C,prod2BCF);
          real basisEval2BD1#2 = RMul(one296C,prod2BD0);
          real prod2BD2#3 = RMul(varAcc2967,prod29AC);
          real basisEval2BD3#1 = RMul(coeff296B,prod2BD2);
          real prod2BD4#2 = RMul(varAcc2967,prod29AF);
          real basisEval2BD5#2 = RMul(coeff296B,prod2BD4);
          real prod2BD6#2 = RMul(varAcc2967,prod29B2);
          real basisEval2BD7#1 = RMul(coeff296B,prod2BD6);
          real prod2BD8#2 = RMul(varAcc2967,prod29B5);
          real basisEval2BD9#2 = RMul(coeff296B,prod2BD8);
          real prod2BDA#3 = RMul(varAcc2967,prod29B9);
          real basisEval2BDB#1 = RMul(coeff296B,prod2BDA);
          real prod2BDC#3 = RMul(prod2298C,prod2990);
          real basisEval2BDD#1 = RMul(coeff29D6,prod2BDC);
          real prod2BDE#2 = RMul(prod2298C,prod2993);
          real basisEval2BDF#2 = RMul(coeff29D6,prod2BDE);
          real prod2BE0#2 = RMul(prod2298C,prod2996);
          real basisEval2BE1#2 = RMul(coeff29D6,prod2BE0);
          real prod2BE2#3 = RMul(prod2298C,prod299A);
          real basisEval2BE3#1 = RMul(coeff29D6,prod2BE2);
          real prod2BE4#3 = RMul(prod329A8,prod297D);
          real basisEval2BE5#1 = RMul(coeff29D9,prod2BE4);
          real prod2BE6#2 = RMul(prod329A8,prod2980);
          real basisEval2BE7#1 = RMul(coeff29D9,prod2BE6);
          real prod2BE8#3 = RMul(prod329A8,prod2984);
          real basisEval2BE9#1 = RMul(coeff29D9,prod2BE8);
          real prod2BEA#3 = RMul(prod429CF,prod2971);
          real basisEval2BEB#1 = RMul(coeff29E7,prod2BEA);
          real prod2BEC#3 = RMul(prod429CF,prod2975);
          real basisEval2BED#1 = RMul(coeff29E7,prod2BEC);
          real prod52BEF#1 = RMul(prod429CF,varAcc2967);
          real prod2BF0#2 = RMul(prod52BEF,prod296D);
          real basisEval2BF1#1 = RMul(coeff2978,prod2BF0);
          real basisEval2BF6#1 = RMul(one296C,prod2987);
          real basisEval2BFB#1 = RMul(one296C,prod299D);
          real basisEval2BFD#1 = RMul(one296C,prod29A3);
          real basisEval2C04#1 = RMul(one296C,prod29BC);
          real basisEval2C05#1 = RMul(coeff29D6,prod29C0);
          real basisEval2C07#1 = RMul(one296C,prod29C4);
          real basisEval2C08#2 = RMul(coeff296B,prod29C6);
          real basisEval2C09#1 = RMul(one296C,prod29CA);
          real basisEval2C0C#1 = RMul(coeff296B,prod2BC3);
          real basisEval2C0D#1 = RMul(coeff29D6,prod2BC6);
          real basisEval2C0E#1 = RMul(coeff29D9,prod2BC9);
          real basisEval2C0F#1 = RMul(coeff29E7,prod2BCC);
          real basisEval2C10#1 = RMul(coeff2978,prod2BD0);
          real basisEval2C11#1 = RMul(one296C,prod2BD2);
          real basisEval2C12#2 = RMul(coeff29D6,prod2BD6);
          real basisEval2C13#1 = RMul(coeff29D9,prod2BD8);
          real basisEval2C14#1 = RMul(coeff29E7,prod2BDA);
          real basisEval2C15#1 = RMul(one296C,prod2BDC);
          real basisEval2C16#1 = RMul(coeff296B,prod2BDE);
          real basisEval2C17#1 = RMul(coeff29D9,prod2BE2);
          real basisEval2C18#1 = RMul(one296C,prod2BE4);
          real basisEval2C19#2 = RMul(coeff296B,prod2BE6);
          real basisEval2C1A#1 = RMul(coeff29D6,prod2BE8);
          real basisEval2C1B#1 = RMul(one296C,prod2BEA);
          real basisEval2C1C#1 = RMul(coeff296B,prod2BEC);
          real basisEval2C1D#2 = RMul(one296C,prod2BF0);
          real basisEval2C20#1 = RMul(one296C,prod2989);
          real basisEval2C25#1 = RMul(one296C,prod29A1);
          real basisEval2C27#1 = RMul(one296C,prod29A5);
          real basisEval2C2C#1 = RMul(coeff29D6,prod29BE);
          real basisEval2C2D#1 = RMul(one296C,prod29C2);
          real basisEval2C2E#1 = RMul(one296C,prod29C8);
          real basisEval2C30#1 = RMul(one296C,prod29CC);
          real basisEval2C31#1 = RMul(coeff2978,prod2BC0);
          real basisEval2C32#1 = RMul(coeff29E7,prod2BC3);
          real basisEval2C33#1 = RMul(coeff29D9,prod2BC6);
          real basisEval2C34#1 = RMul(coeff29D6,prod2BC9);
          real basisEval2C35#1 = RMul(coeff296B,prod2BCC);
          real basisEval2C36#1 = RMul(coeff29E7,prod2BD2);
          real basisEval2C37#1 = RMul(coeff29D9,prod2BD4);
          real basisEval2C38#1 = RMul(one296C,prod2BDA);
          real basisEval2C39#1 = RMul(coeff29D9,prod2BDC);
          real basisEval2C3A#1 = RMul(coeff296B,prod2BE0);
          real basisEval2C3B#1 = RMul(one296C,prod2BE2);
          real basisEval2C3C#1 = RMul(coeff29D6,prod2BE4);
          real basisEval2C3D#1 = RMul(one296C,prod2BE8);
          real basisEval2C3E#1 = RMul(coeff296B,prod2BEA);
          real basisEval2C3F#1 = RMul(one296C,prod2BEC);
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval29D3,basisEval29F4,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D5,basisEval2B6E,basisEval29F6,basisEval29D8,basisEval29F8,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29DC,basisEval2B81,basisEval2B84,basisEval29FB,basisEval29DF,basisEval2B8C,basisEval29FC,basisEval29E1,basisEval29FE,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29E4,basisEval2B9D,basisEval2BA0,basisEval2BA3,basisEval2A01,basisEval29E9,basisEval2BAB,basisEval2BAD,basisEval2A04,basisEval29ED,basisEval2BB3,basisEval2A06,basisEval29F1,basisEval2A08,basisEval29F3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2BC1,basisEval2BC4,basisEval2BC7,basisEval2BCA,basisEval2BCD,basisEval2BD1,basisEval2BD3,basisEval2BD5,basisEval2BD7,basisEval2BD9,basisEval2BDB,basisEval2BDD,basisEval2BDF,basisEval2BE1,basisEval2BE3,basisEval2BE5,basisEval2BE7,basisEval2BE9,basisEval2BEB,basisEval2BED,basisEval2BF1];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval29D3,basisEval2977,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval29D5,basisEval2982,basisEval29D7,basisEval296A,basisEval2BF6,basisEval29F8,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval29DC,basisEval2995,basisEval29DD,basisEval29DE,basisEval296A,basisEval2BFB,basisEval2B8C,basisEval2A22,basisEval296A,basisEval2BFD,basisEval2A23,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval29E4,basisEval29B1,basisEval29E5,basisEval29E6,basisEval29E8,basisEval296A,basisEval2C04,basisEval2BAB,basisEval2C05,basisEval2A29,basisEval296A,basisEval2C07,basisEval2C08,basisEval2A06,basisEval296A,basisEval2C09,basisEval2A2B,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval2BC1,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2C10,basisEval296A,basisEval2C11,basisEval2BD5,basisEval2C12,basisEval2C13,basisEval2C14,basisEval296A,basisEval2C15,basisEval2C16,basisEval2BE1,basisEval2C17,basisEval296A,basisEval2C18,basisEval2C19,basisEval2C1A,basisEval296A,basisEval2C1B,basisEval2C1C,basisEval296A,basisEval2C1D,basisEval296A];
          tensor[84] intermediateCons2C42#1 = <tensor[84]>[basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval2973,basisEval29F4,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval29F5,basisEval2982,basisEval29F6,basisEval296A,basisEval29D8,basisEval2C20,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval29F9,basisEval29FA,basisEval2998,basisEval29FB,basisEval296A,basisEval2A21,basisEval2B8C,basisEval2C25,basisEval296A,basisEval2A11,basisEval2C27,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval29FF,basisEval2A00,basisEval29E5,basisEval29B7,basisEval2A01,basisEval296A,basisEval2A28,basisEval2C2C,basisEval2BAD,basisEval2C2D,basisEval296A,basisEval29ED,basisEval2C08,basisEval2C2E,basisEval296A,basisEval2A1A,basisEval2C30,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2C35,basisEval2BD1,basisEval296A,basisEval2C36,basisEval2C37,basisEval2C12,basisEval2BD9,basisEval2C38,basisEval296A,basisEval2C39,basisEval2BDF,basisEval2C3A,basisEval2C3B,basisEval296A,basisEval2C3C,basisEval2C19,basisEval2C3D,basisEval296A,basisEval2C3E,basisEval2C3F,basisEval296A,basisEval2C1D,basisEval296A,basisEval296A];
          real vdot2D37#1 = VDot<84>(dofs2813,intermediateCons2C40);
          real vdot2D39#1 = VDot<84>(dofs2813,intermediateCons2C41);
          real vdot2D3B#1 = VDot<84>(dofs2813,intermediateCons2C42);
          tensor[3] probe_l_62D35#2 = <tensor[3]>[vdot2D37,vdot2D39,vdot2D3B];
          real op1_e3_l_82D44#1 = VDot<3>(probe_l_62D35,probe_l_62D35);
          real op1_e3_l_92D47#1 = Sqrt(op1_e3_l_82D44);
          real op1_e3_l_102D4A#1 = RNeg(_t2B51);
          real op1_e3_l_112D4D#1 = RAdd(fBias2484,op1_e3_l_92D47);
          real _t2D50#1 = RDiv(op1_e3_l_102D4A,op1_e3_l_112D4D);
          bool _t2D53#1 = GT<real>(_t2D50,fStrTh2480);
          if _t2D53 then goto ASSIGN499B else goto ASSIGN46AD
        ASSIGN499B:  preds = [COND2D55]
          bool _t2D58#1 = GTE<real>(one296C,fMaskTh2482);
          if _t2D58 then goto ASSIGN2D5C else goto ASSIGN46AC
        ASSIGN2D5C:  preds = [COND2D5A]
          bool _t2D5B#1 = true;
          goto JOIN2D5F
        JOIN2D5F:  preds = [ASSIGN2D5C,ASSIGN46AC]
          bool _t2D5D#1 = phi(_t2D5B,_t2D5E)
          goto JOIN2D62
        JOIN2D62:  preds = [JOIN2D5F,ASSIGN46AD]
          bool _t2D60#1 = phi(_t2D5D,_t2D61)
          goto JOIN2D65
        JOIN2D65:  preds = [JOIN2D62,ASSIGN46AE]
          bool _t2D63#1 = phi(_t2D60,_t2D64)
          bool _t2D66#1 = BNot(_t2D63);
          if _t2D66 then goto SAVE2D69 else goto JOIN2D6B
        SAVE2D69:  preds = [COND2D68]
          self.rayN = rayN24AC;
          active
          goto JOIN2D6B
        JOIN2D6B:  preds = [*ACTIVE2D6A,COND2D68]
          bool _t2D6C#1 = BNot(analytical248E);
          if _t2D6C then goto ASSIGN2E6F else goto ASSIGN3EA1
        ASSIGN2E6F:  preds = [COND2D6E]
          int ilit2D70#1 = 84;
          int mulRes2D71#84 = IMul(_t246C,ilit2D70);
          int idx2D74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,mulRes2D71);
          int ilit2D75#87 = 1;
          int addRes2D76#1 = IAdd(mulRes2D71,ilit2D75);
          int idx2D77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D76);
          int ilit2D78#3 = 2;
          int addRes2D79#1 = IAdd(mulRes2D71,ilit2D78);
          int idx2D7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D79);
          int ilit2D7B#1 = 3;
          int addRes2D7C#1 = IAdd(mulRes2D71,ilit2D7B);
          int idx2D7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7C);
          int ilit2D7E#1 = 4;
          int addRes2D7F#1 = IAdd(mulRes2D71,ilit2D7E);
          int idx2D80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7F);
          int ilit2D81#1 = 5;
          int addRes2D82#1 = IAdd(mulRes2D71,ilit2D81);
          int idx2D83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D82);
          int ilit2D84#1 = 6;
          int addRes2D85#1 = IAdd(mulRes2D71,ilit2D84);
          int idx2D86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D85);
          int ilit2D87#1 = 7;
          int addRes2D88#1 = IAdd(mulRes2D71,ilit2D87);
          int idx2D89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D88);
          int ilit2D8A#1 = 8;
          int addRes2D8B#1 = IAdd(mulRes2D71,ilit2D8A);
          int idx2D8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8B);
          int ilit2D8D#1 = 9;
          int addRes2D8E#1 = IAdd(mulRes2D71,ilit2D8D);
          int idx2D8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8E);
          int ilit2D90#1 = 10;
          int addRes2D91#1 = IAdd(mulRes2D71,ilit2D90);
          int idx2D92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D91);
          int ilit2D93#1 = 11;
          int addRes2D94#1 = IAdd(mulRes2D71,ilit2D93);
          int idx2D95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D94);
          int ilit2D96#1 = 12;
          int addRes2D97#1 = IAdd(mulRes2D71,ilit2D96);
          int idx2D98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D97);
          int ilit2D99#1 = 13;
          int addRes2D9A#1 = IAdd(mulRes2D71,ilit2D99);
          int idx2D9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9A);
          int ilit2D9C#1 = 14;
          int addRes2D9D#1 = IAdd(mulRes2D71,ilit2D9C);
          int idx2D9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9D);
          int ilit2D9F#1 = 15;
          int addRes2DA0#1 = IAdd(mulRes2D71,ilit2D9F);
          int idx2DA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA0);
          int ilit2DA2#1 = 16;
          int addRes2DA3#1 = IAdd(mulRes2D71,ilit2DA2);
          int idx2DA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA3);
          int ilit2DA5#1 = 17;
          int addRes2DA6#1 = IAdd(mulRes2D71,ilit2DA5);
          int idx2DA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA6);
          int ilit2DA8#1 = 18;
          int addRes2DA9#1 = IAdd(mulRes2D71,ilit2DA8);
          int idx2DAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA9);
          int ilit2DAB#1 = 19;
          int addRes2DAC#1 = IAdd(mulRes2D71,ilit2DAB);
          int idx2DAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAC);
          int ilit2DAE#1 = 20;
          int addRes2DAF#1 = IAdd(mulRes2D71,ilit2DAE);
          int idx2DB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAF);
          int ilit2DB1#1 = 21;
          int addRes2DB2#1 = IAdd(mulRes2D71,ilit2DB1);
          int idx2DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB2);
          int ilit2DB4#1 = 22;
          int addRes2DB5#1 = IAdd(mulRes2D71,ilit2DB4);
          int idx2DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB5);
          int ilit2DB7#1 = 23;
          int addRes2DB8#1 = IAdd(mulRes2D71,ilit2DB7);
          int idx2DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB8);
          int ilit2DBA#1 = 24;
          int addRes2DBB#1 = IAdd(mulRes2D71,ilit2DBA);
          int idx2DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBB);
          int ilit2DBD#1 = 25;
          int addRes2DBE#1 = IAdd(mulRes2D71,ilit2DBD);
          int idx2DBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBE);
          int ilit2DC0#1 = 26;
          int addRes2DC1#1 = IAdd(mulRes2D71,ilit2DC0);
          int idx2DC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC1);
          int ilit2DC3#1 = 27;
          int addRes2DC4#1 = IAdd(mulRes2D71,ilit2DC3);
          int idx2DC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC4);
          int ilit2DC6#1 = 28;
          int addRes2DC7#1 = IAdd(mulRes2D71,ilit2DC6);
          int idx2DC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC7);
          int ilit2DC9#1 = 29;
          int addRes2DCA#1 = IAdd(mulRes2D71,ilit2DC9);
          int idx2DCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCA);
          int ilit2DCC#1 = 30;
          int addRes2DCD#1 = IAdd(mulRes2D71,ilit2DCC);
          int idx2DCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCD);
          int ilit2DCF#1 = 31;
          int addRes2DD0#1 = IAdd(mulRes2D71,ilit2DCF);
          int idx2DD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD0);
          int ilit2DD2#1 = 32;
          int addRes2DD3#1 = IAdd(mulRes2D71,ilit2DD2);
          int idx2DD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD3);
          int ilit2DD5#1 = 33;
          int addRes2DD6#1 = IAdd(mulRes2D71,ilit2DD5);
          int idx2DD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD6);
          int ilit2DD8#1 = 34;
          int addRes2DD9#1 = IAdd(mulRes2D71,ilit2DD8);
          int idx2DDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD9);
          int ilit2DDB#1 = 35;
          int addRes2DDC#1 = IAdd(mulRes2D71,ilit2DDB);
          int idx2DDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDC);
          int ilit2DDE#1 = 36;
          int addRes2DDF#1 = IAdd(mulRes2D71,ilit2DDE);
          int idx2DE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDF);
          int ilit2DE1#1 = 37;
          int addRes2DE2#1 = IAdd(mulRes2D71,ilit2DE1);
          int idx2DE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE2);
          int ilit2DE4#1 = 38;
          int addRes2DE5#1 = IAdd(mulRes2D71,ilit2DE4);
          int idx2DE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE5);
          int ilit2DE7#1 = 39;
          int addRes2DE8#1 = IAdd(mulRes2D71,ilit2DE7);
          int idx2DE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE8);
          int ilit2DEA#1 = 40;
          int addRes2DEB#1 = IAdd(mulRes2D71,ilit2DEA);
          int idx2DEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEB);
          int ilit2DED#1 = 41;
          int addRes2DEE#1 = IAdd(mulRes2D71,ilit2DED);
          int idx2DEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEE);
          int ilit2DF0#1 = 42;
          int addRes2DF1#1 = IAdd(mulRes2D71,ilit2DF0);
          int idx2DF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF1);
          int ilit2DF3#1 = 43;
          int addRes2DF4#1 = IAdd(mulRes2D71,ilit2DF3);
          int idx2DF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF4);
          int ilit2DF6#1 = 44;
          int addRes2DF7#1 = IAdd(mulRes2D71,ilit2DF6);
          int idx2DF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF7);
          int ilit2DF9#1 = 45;
          int addRes2DFA#1 = IAdd(mulRes2D71,ilit2DF9);
          int idx2DFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFA);
          int ilit2DFC#1 = 46;
          int addRes2DFD#1 = IAdd(mulRes2D71,ilit2DFC);
          int idx2DFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFD);
          int ilit2DFF#1 = 47;
          int addRes2E00#1 = IAdd(mulRes2D71,ilit2DFF);
          int idx2E01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E00);
          int ilit2E02#1 = 48;
          int addRes2E03#1 = IAdd(mulRes2D71,ilit2E02);
          int idx2E04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E03);
          int ilit2E05#1 = 49;
          int addRes2E06#1 = IAdd(mulRes2D71,ilit2E05);
          int idx2E07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E06);
          int ilit2E08#1 = 50;
          int addRes2E09#1 = IAdd(mulRes2D71,ilit2E08);
          int idx2E0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E09);
          int ilit2E0B#1 = 51;
          int addRes2E0C#1 = IAdd(mulRes2D71,ilit2E0B);
          int idx2E0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0C);
          int ilit2E0E#1 = 52;
          int addRes2E0F#1 = IAdd(mulRes2D71,ilit2E0E);
          int idx2E10#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0F);
          int ilit2E11#1 = 53;
          int addRes2E12#1 = IAdd(mulRes2D71,ilit2E11);
          int idx2E13#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E12);
          int ilit2E14#1 = 54;
          int addRes2E15#1 = IAdd(mulRes2D71,ilit2E14);
          int idx2E16#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E15);
          int ilit2E17#1 = 55;
          int addRes2E18#1 = IAdd(mulRes2D71,ilit2E17);
          int idx2E19#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E18);
          int ilit2E1A#1 = 56;
          int addRes2E1B#1 = IAdd(mulRes2D71,ilit2E1A);
          int idx2E1C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1B);
          int ilit2E1D#1 = 57;
          int addRes2E1E#1 = IAdd(mulRes2D71,ilit2E1D);
          int idx2E1F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1E);
          int ilit2E20#1 = 58;
          int addRes2E21#1 = IAdd(mulRes2D71,ilit2E20);
          int idx2E22#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E21);
          int ilit2E23#1 = 59;
          int addRes2E24#1 = IAdd(mulRes2D71,ilit2E23);
          int idx2E25#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E24);
          int ilit2E26#1 = 60;
          int addRes2E27#1 = IAdd(mulRes2D71,ilit2E26);
          int idx2E28#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E27);
          int ilit2E29#1 = 61;
          int addRes2E2A#1 = IAdd(mulRes2D71,ilit2E29);
          int idx2E2B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2A);
          int ilit2E2C#1 = 62;
          int addRes2E2D#1 = IAdd(mulRes2D71,ilit2E2C);
          int idx2E2E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2D);
          int ilit2E2F#1 = 63;
          int addRes2E30#1 = IAdd(mulRes2D71,ilit2E2F);
          int idx2E31#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E30);
          int ilit2E32#1 = 64;
          int addRes2E33#1 = IAdd(mulRes2D71,ilit2E32);
          int idx2E34#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E33);
          int ilit2E35#1 = 65;
          int addRes2E36#1 = IAdd(mulRes2D71,ilit2E35);
          int idx2E37#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E36);
          int ilit2E38#1 = 66;
          int addRes2E39#1 = IAdd(mulRes2D71,ilit2E38);
          int idx2E3A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E39);
          int ilit2E3B#1 = 67;
          int addRes2E3C#1 = IAdd(mulRes2D71,ilit2E3B);
          int idx2E3D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3C);
          int ilit2E3E#1 = 68;
          int addRes2E3F#1 = IAdd(mulRes2D71,ilit2E3E);
          int idx2E40#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3F);
          int ilit2E41#1 = 69;
          int addRes2E42#1 = IAdd(mulRes2D71,ilit2E41);
          int idx2E43#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E42);
          int ilit2E44#1 = 70;
          int addRes2E45#1 = IAdd(mulRes2D71,ilit2E44);
          int idx2E46#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E45);
          int ilit2E47#1 = 71;
          int addRes2E48#1 = IAdd(mulRes2D71,ilit2E47);
          int idx2E49#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E48);
          int ilit2E4A#1 = 72;
          int addRes2E4B#1 = IAdd(mulRes2D71,ilit2E4A);
          int idx2E4C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4B);
          int ilit2E4D#1 = 73;
          int addRes2E4E#1 = IAdd(mulRes2D71,ilit2E4D);
          int idx2E4F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4E);
          int ilit2E50#1 = 74;
          int addRes2E51#1 = IAdd(mulRes2D71,ilit2E50);
          int idx2E52#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E51);
          int ilit2E53#1 = 75;
          int addRes2E54#1 = IAdd(mulRes2D71,ilit2E53);
          int idx2E55#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E54);
          int ilit2E56#1 = 76;
          int addRes2E57#1 = IAdd(mulRes2D71,ilit2E56);
          int idx2E58#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E57);
          int ilit2E59#1 = 77;
          int addRes2E5A#1 = IAdd(mulRes2D71,ilit2E59);
          int idx2E5B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5A);
          int ilit2E5C#1 = 78;
          int addRes2E5D#1 = IAdd(mulRes2D71,ilit2E5C);
          int idx2E5E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5D);
          int ilit2E5F#1 = 79;
          int addRes2E60#1 = IAdd(mulRes2D71,ilit2E5F);
          int idx2E61#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E60);
          int ilit2E62#1 = 80;
          int addRes2E63#1 = IAdd(mulRes2D71,ilit2E62);
          int idx2E64#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E63);
          int ilit2E65#1 = 81;
          int addRes2E66#1 = IAdd(mulRes2D71,ilit2E65);
          int idx2E67#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E66);
          int ilit2E68#1 = 82;
          int addRes2E69#1 = IAdd(mulRes2D71,ilit2E68);
          int idx2E6A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E69);
          int ilit2E6B#1 = 83;
          int addRes2E6C#1 = IAdd(mulRes2D71,ilit2E6B);
          int idx2E6D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E6C);
          int mulRes2F73#1 = IMul(ilit2D75,idx2D74);
          int mulRes2F75#1 = IMul(ilit2D75,idx2D77);
          int mulRes2F78#1 = IMul(ilit2D75,idx2D7A);
          int mulRes2F7B#1 = IMul(ilit2D75,idx2D7D);
          int mulRes2F7E#1 = IMul(ilit2D75,idx2D80);
          int mulRes2F81#1 = IMul(ilit2D75,idx2D83);
          int mulRes2F84#1 = IMul(ilit2D75,idx2D86);
          int mulRes2F87#1 = IMul(ilit2D75,idx2D89);
          int mulRes2F8A#1 = IMul(ilit2D75,idx2D8C);
          int mulRes2F8D#1 = IMul(ilit2D75,idx2D8F);
          int mulRes2F90#1 = IMul(ilit2D75,idx2D92);
          int mulRes2F93#1 = IMul(ilit2D75,idx2D95);
          int mulRes2F96#1 = IMul(ilit2D75,idx2D98);
          int mulRes2F99#1 = IMul(ilit2D75,idx2D9B);
          int mulRes2F9C#1 = IMul(ilit2D75,idx2D9E);
          int mulRes2F9F#1 = IMul(ilit2D75,idx2DA1);
          int mulRes2FA2#1 = IMul(ilit2D75,idx2DA4);
          int mulRes2FA5#1 = IMul(ilit2D75,idx2DA7);
          int mulRes2FA8#1 = IMul(ilit2D75,idx2DAA);
          int mulRes2FAB#1 = IMul(ilit2D75,idx2DAD);
          int mulRes2FAE#1 = IMul(ilit2D75,idx2DB0);
          int mulRes2FB1#1 = IMul(ilit2D75,idx2DB3);
          int mulRes2FB4#1 = IMul(ilit2D75,idx2DB6);
          int mulRes2FB7#1 = IMul(ilit2D75,idx2DB9);
          int mulRes2FBA#1 = IMul(ilit2D75,idx2DBC);
          int mulRes2FBD#1 = IMul(ilit2D75,idx2DBF);
          int mulRes2FC0#1 = IMul(ilit2D75,idx2DC2);
          int mulRes2FC3#1 = IMul(ilit2D75,idx2DC5);
          int mulRes2FC6#1 = IMul(ilit2D75,idx2DC8);
          int mulRes2FC9#1 = IMul(ilit2D75,idx2DCB);
          int mulRes2FCC#1 = IMul(ilit2D75,idx2DCE);
          int mulRes2FCF#1 = IMul(ilit2D75,idx2DD1);
          int mulRes2FD2#1 = IMul(ilit2D75,idx2DD4);
          int mulRes2FD5#1 = IMul(ilit2D75,idx2DD7);
          int mulRes2FD8#1 = IMul(ilit2D75,idx2DDA);
          int mulRes2FDB#1 = IMul(ilit2D75,idx2DDD);
          int mulRes2FDE#1 = IMul(ilit2D75,idx2DE0);
          int mulRes2FE1#1 = IMul(ilit2D75,idx2DE3);
          int mulRes2FE4#1 = IMul(ilit2D75,idx2DE6);
          int mulRes2FE7#1 = IMul(ilit2D75,idx2DE9);
          int mulRes2FEA#1 = IMul(ilit2D75,idx2DEC);
          int mulRes2FED#1 = IMul(ilit2D75,idx2DEF);
          int mulRes2FF0#1 = IMul(ilit2D75,idx2DF2);
          int mulRes2FF3#1 = IMul(ilit2D75,idx2DF5);
          int mulRes2FF6#1 = IMul(ilit2D75,idx2DF8);
          int mulRes2FF9#1 = IMul(ilit2D75,idx2DFB);
          int mulRes2FFC#1 = IMul(ilit2D75,idx2DFE);
          int mulRes2FFF#1 = IMul(ilit2D75,idx2E01);
          int mulRes3002#1 = IMul(ilit2D75,idx2E04);
          int mulRes3005#1 = IMul(ilit2D75,idx2E07);
          int mulRes3008#1 = IMul(ilit2D75,idx2E0A);
          int mulRes300B#1 = IMul(ilit2D75,idx2E0D);
          int mulRes300E#1 = IMul(ilit2D75,idx2E10);
          int mulRes3011#1 = IMul(ilit2D75,idx2E13);
          int mulRes3014#1 = IMul(ilit2D75,idx2E16);
          int mulRes3017#1 = IMul(ilit2D75,idx2E19);
          int mulRes301A#1 = IMul(ilit2D75,idx2E1C);
          int mulRes301D#1 = IMul(ilit2D75,idx2E1F);
          int mulRes3020#1 = IMul(ilit2D75,idx2E22);
          int mulRes3023#1 = IMul(ilit2D75,idx2E25);
          int mulRes3026#1 = IMul(ilit2D75,idx2E28);
          int mulRes3029#1 = IMul(ilit2D75,idx2E2B);
          int mulRes302C#1 = IMul(ilit2D75,idx2E2E);
          int mulRes302F#1 = IMul(ilit2D75,idx2E31);
          int mulRes3032#1 = IMul(ilit2D75,idx2E34);
          int mulRes3035#1 = IMul(ilit2D75,idx2E37);
          int mulRes3038#1 = IMul(ilit2D75,idx2E3A);
          int mulRes303B#1 = IMul(ilit2D75,idx2E3D);
          int mulRes303E#1 = IMul(ilit2D75,idx2E40);
          int mulRes3041#1 = IMul(ilit2D75,idx2E43);
          int mulRes3044#1 = IMul(ilit2D75,idx2E46);
          int mulRes3047#1 = IMul(ilit2D75,idx2E49);
          int mulRes304A#1 = IMul(ilit2D75,idx2E4C);
          int mulRes304D#1 = IMul(ilit2D75,idx2E4F);
          int mulRes3050#1 = IMul(ilit2D75,idx2E52);
          int mulRes3053#1 = IMul(ilit2D75,idx2E55);
          int mulRes3056#1 = IMul(ilit2D75,idx2E58);
          int mulRes3059#1 = IMul(ilit2D75,idx2E5B);
          int mulRes305C#1 = IMul(ilit2D75,idx2E5E);
          int mulRes305F#1 = IMul(ilit2D75,idx2E61);
          int mulRes3062#1 = IMul(ilit2D75,idx2E64);
          int mulRes3065#1 = IMul(ilit2D75,idx2E67);
          int mulRes3068#1 = IMul(ilit2D75,idx2E6A);
          int mulRes306B#1 = IMul(ilit2D75,idx2E6D);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F73);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F75);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F78);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7B);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7E);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F81);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F84);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F87);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8A);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8D);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F90);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F93);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F96);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F99);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9C);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9F);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA2);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA5);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA8);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAB);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAE);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB1);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB4);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB7);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBA);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBD);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC0);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC3);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC6);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC9);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCC);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCF);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD2);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD5);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD8);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDB);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDE);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE1);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE4);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE7);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FEA);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FED);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF0);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF3);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF6);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF9);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFC);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFF);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3002);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3005);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3008);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300B);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300E);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3011);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3014);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3017);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301A);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301D);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3020);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3023);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3026);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3029);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302C);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302F);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3032);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3035);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3038);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303B);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303E);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3041);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3044);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3047);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304A);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304D);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3050);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3053);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3056);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3059);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305C);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305F);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3062);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3065);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3068);
          real dof30BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes306B);
          tensor[84] dofs30C0#9 = <tensor[84]>[dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE,dof30BF];
          real varAcc3214#20 = VIndex<3,0>(pos24B8);
          real varAcc3215#10 = VIndex<3,1>(pos24B8);
          real varAcc3216#10 = VIndex<3,2>(pos24B8);
          real basisEval3217#378 = 0.e0;
          real coeff3218#47 = 0.2e1;
          real one3219#79 = 0.1e1;
          real prod321A#6 = RMul(one3219,one3219);
          real prod321B#2 = RMul(one3219,prod321A);
          real basisEval321C#3 = RMul(coeff3218,prod321B);
          real prod321E#5 = RMul(one3219,varAcc3216);
          real prod321F#3 = RMul(one3219,prod321E);
          real basisEval3220#5 = RMul(coeff3218,prod321F);
          real prod3222#5 = RMul(varAcc3215,one3219);
          real prod3223#3 = RMul(one3219,prod3222);
          real basisEval3224#5 = RMul(coeff3218,prod3223);
          real coeff3225#25 = 0.6e1;
          real prod3227#3 = RMul(varAcc3214,prod321A);
          real basisEval3228#1 = RMul(coeff3225,prod3227);
          real prod23229#5 = RMul(varAcc3216,varAcc3216);
          real prod322A#4 = RMul(one3219,prod23229);
          real prod322B#4 = RMul(one3219,prod322A);
          real basisEval322C#2 = RMul(coeff3218,prod322B);
          real prod322D#4 = RMul(varAcc3215,varAcc3216);
          real prod322E#4 = RMul(one3219,prod322D);
          real basisEval322F#5 = RMul(coeff3218,prod322E);
          real prod23230#5 = RMul(varAcc3215,varAcc3215);
          real prod3231#4 = RMul(prod23230,one3219);
          real prod3232#4 = RMul(one3219,prod3231);
          real basisEval3233#2 = RMul(coeff3218,prod3232);
          real prod3234#4 = RMul(varAcc3214,prod321E);
          real basisEval3235#2 = RMul(coeff3225,prod3234);
          real prod3236#4 = RMul(varAcc3214,prod3222);
          real basisEval3237#2 = RMul(coeff3225,prod3236);
          real coeff3238#15 = 0.12e2;
          real prod23239#11 = RMul(varAcc3214,varAcc3214);
          real prod323A#4 = RMul(prod23239,prod321A);
          real basisEval323B#1 = RMul(coeff3238,prod323A);
          real prod3323C#4 = RMul(prod23229,varAcc3216);
          real prod323D#3 = RMul(one3219,prod3323C);
          real prod323E#4 = RMul(one3219,prod323D);
          real basisEval323F#2 = RMul(coeff3218,prod323E);
          real prod3240#3 = RMul(varAcc3215,prod23229);
          real prod3241#5 = RMul(one3219,prod3240);
          real basisEval3242#3 = RMul(coeff3218,prod3241);
          real prod3243#3 = RMul(prod23230,varAcc3216);
          real prod3244#5 = RMul(one3219,prod3243);
          real basisEval3245#3 = RMul(coeff3218,prod3244);
          real prod33246#4 = RMul(prod23230,varAcc3215);
          real prod3247#3 = RMul(prod33246,one3219);
          real prod3248#4 = RMul(one3219,prod3247);
          real basisEval3249#2 = RMul(coeff3218,prod3248);
          real prod324A#5 = RMul(varAcc3214,prod322A);
          real basisEval324B#2 = RMul(coeff3225,prod324A);
          real prod324C#3 = RMul(varAcc3214,prod322D);
          real basisEval324D#3 = RMul(coeff3225,prod324C);
          real prod324E#5 = RMul(varAcc3214,prod3231);
          real basisEval324F#2 = RMul(coeff3225,prod324E);
          real prod3250#5 = RMul(prod23239,prod321E);
          real basisEval3251#1 = RMul(coeff3238,prod3250);
          real prod3252#5 = RMul(prod23239,prod3222);
          real basisEval3253#1 = RMul(coeff3238,prod3252);
          real coeff3254#9 = 0.20e2;
          real prod33255#7 = RMul(prod23239,varAcc3214);
          real prod3256#4 = RMul(prod33255,prod321A);
          real basisEval3257#1 = RMul(coeff3254,prod3256);
          real prod43258#3 = RMul(prod3323C,varAcc3216);
          real prod3259#2 = RMul(one3219,prod43258);
          real prod325A#4 = RMul(one3219,prod3259);
          real basisEval325B#2 = RMul(coeff3218,prod325A);
          real prod325C#2 = RMul(varAcc3215,prod3323C);
          real prod325D#6 = RMul(one3219,prod325C);
          real basisEval325E#3 = RMul(coeff3218,prod325D);
          real prod325F#2 = RMul(prod23230,prod23229);
          real prod3260#5 = RMul(one3219,prod325F);
          real basisEval3261#1 = RMul(coeff3218,prod3260);
          real prod3262#2 = RMul(prod33246,varAcc3216);
          real prod3263#6 = RMul(one3219,prod3262);
          real basisEval3264#3 = RMul(coeff3218,prod3263);
          real prod43265#3 = RMul(prod33246,varAcc3215);
          real prod3266#2 = RMul(prod43265,one3219);
          real prod3267#4 = RMul(one3219,prod3266);
          real basisEval3268#2 = RMul(coeff3218,prod3267);
          real prod3269#6 = RMul(varAcc3214,prod323D);
          real basisEval326A#1 = RMul(coeff3225,prod3269);
          real prod326B#5 = RMul(varAcc3214,prod3240);
          real basisEval326C#4 = RMul(coeff3225,prod326B);
          real prod326D#5 = RMul(varAcc3214,prod3243);
          real basisEval326E#4 = RMul(coeff3225,prod326D);
          real prod326F#6 = RMul(varAcc3214,prod3247);
          real basisEval3270#1 = RMul(coeff3225,prod326F);
          real prod3271#5 = RMul(prod23239,prod322A);
          real basisEval3272#2 = RMul(coeff3238,prod3271);
          real prod3273#5 = RMul(prod23239,prod322D);
          real basisEval3274#1 = RMul(coeff3238,prod3273);
          real prod3275#5 = RMul(prod23239,prod3231);
          real basisEval3276#2 = RMul(coeff3238,prod3275);
          real prod3277#6 = RMul(prod33255,prod321E);
          real basisEval3278#1 = RMul(coeff3254,prod3277);
          real prod3279#6 = RMul(prod33255,prod3222);
          real basisEval327A#1 = RMul(coeff3254,prod3279);
          real coeff327B#3 = 0.30e2;
          real prod4327C#4 = RMul(prod33255,varAcc3214);
          real prod327D#4 = RMul(prod4327C,prod321A);
          real basisEval327E#1 = RMul(coeff327B,prod327D);
          real basisEval327F#6 = RMul(one3219,prod321B);
          real basisEval3280#3 = RMul(one3219,prod321F);
          real basisEval3281#5 = RMul(coeff3218,prod3227);
          real basisEval3282#3 = RMul(one3219,prod322B);
          real coeff3283#24 = 0.3e1;
          real basisEval3284#3 = RMul(coeff3283,prod3232);
          real basisEval3285#5 = RMul(coeff3218,prod3234);
          real coeff3286#25 = 0.4e1;
          real basisEval3287#1 = RMul(coeff3286,prod3236);
          real basisEval3288#3 = RMul(coeff3283,prod323A);
          real basisEval3289#3 = RMul(one3219,prod323E);
          real basisEval328A#2 = RMul(coeff3283,prod3244);
          real basisEval328B#3 = RMul(coeff3286,prod3248);
          real basisEval328C#3 = RMul(coeff3218,prod324A);
          real basisEval328D#3 = RMul(coeff3286,prod324C);
          real basisEval328E#2 = RMul(coeff3283,prod3250);
          real basisEval328F#2 = RMul(coeff3225,prod3252);
          real basisEval3290#3 = RMul(coeff3286,prod3256);
          real basisEval3291#3 = RMul(one3219,prod325A);
          real basisEval3292#4 = RMul(coeff3283,prod3260);
          real basisEval3293#2 = RMul(coeff3286,prod3263);
          real coeff3294#9 = 0.5e1;
          real basisEval3295#3 = RMul(coeff3294,prod3267);
          real basisEval3296#3 = RMul(coeff3218,prod3269);
          real basisEval3297#1 = RMul(coeff3286,prod326B);
          real coeff3298#6 = 0.8e1;
          real basisEval3299#1 = RMul(coeff3298,prod326F);
          real basisEval329A#4 = RMul(coeff3283,prod3271);
          real basisEval329B#4 = RMul(coeff3225,prod3273);
          real coeff329C#3 = 0.9e1;
          real basisEval329D#1 = RMul(coeff329C,prod3275);
          real basisEval329E#2 = RMul(coeff3286,prod3277);
          real basisEval329F#1 = RMul(coeff3298,prod3279);
          real basisEval32A0#3 = RMul(coeff3294,prod327D);
          real basisEval32A1#3 = RMul(one3219,prod3223);
          real basisEval32A2#3 = RMul(coeff3283,prod322B);
          real basisEval32A3#3 = RMul(one3219,prod3232);
          real basisEval32A4#1 = RMul(coeff3286,prod3234);
          real basisEval32A5#5 = RMul(coeff3218,prod3236);
          real basisEval32A6#3 = RMul(coeff3286,prod323E);
          real basisEval32A7#2 = RMul(coeff3283,prod3241);
          real basisEval32A8#3 = RMul(one3219,prod3248);
          real basisEval32A9#3 = RMul(coeff3218,prod324E);
          real basisEval32AA#2 = RMul(coeff3225,prod3250);
          real basisEval32AB#2 = RMul(coeff3283,prod3252);
          real basisEval32AC#3 = RMul(coeff3294,prod325A);
          real basisEval32AD#2 = RMul(coeff3286,prod325D);
          real basisEval32AE#3 = RMul(one3219,prod3267);
          real basisEval32AF#1 = RMul(coeff3298,prod3269);
          real basisEval32B0#1 = RMul(coeff3286,prod326D);
          real basisEval32B1#3 = RMul(coeff3218,prod326F);
          real basisEval32B2#1 = RMul(coeff329C,prod3271);
          real basisEval32B3#4 = RMul(coeff3283,prod3275);
          real basisEval32B4#1 = RMul(coeff3298,prod3277);
          real basisEval32B5#2 = RMul(coeff3286,prod3279);
          real basisEval32B6#1 = RMul(coeff3225,prod3223);
          real basisEval32B7#2 = RMul(coeff3225,prod322E);
          real basisEval32B8#1 = RMul(coeff3238,prod3232);
          real basisEval32B9#2 = RMul(coeff3218,prod323A);
          real basisEval32BA#2 = RMul(coeff3225,prod3241);
          real basisEval32BB#1 = RMul(coeff3238,prod3244);
          real basisEval32BC#1 = RMul(coeff3254,prod3248);
          real basisEval32BD#1 = RMul(coeff3238,prod324E);
          real basisEval32BE#3 = RMul(coeff3218,prod3250);
          real basisEval32BF#2 = RMul(coeff3218,prod3256);
          real basisEval32C0#1 = RMul(coeff3225,prod325D);
          real basisEval32C1#2 = RMul(coeff3238,prod3260);
          real basisEval32C2#1 = RMul(coeff3254,prod3263);
          real basisEval32C3#1 = RMul(coeff327B,prod3267);
          real basisEval32C4#1 = RMul(coeff3238,prod326D);
          real basisEval32C5#1 = RMul(coeff3254,prod326F);
          real basisEval32C6#1 = RMul(coeff3218,prod3271);
          real basisEval32C7#3 = RMul(coeff3218,prod3277);
          real basisEval32C8#1 = RMul(coeff3225,prod3279);
          real basisEval32C9#2 = RMul(coeff3218,prod327D);
          real basisEval32CA#3 = RMul(one3219,prod3227);
          real basisEval32CB#1 = RMul(coeff3286,prod322E);
          real basisEval32CC#3 = RMul(one3219,prod323A);
          real basisEval32CD#2 = RMul(coeff3225,prod3244);
          real basisEval32CE#2 = RMul(coeff3283,prod324A);
          real basisEval32CF#2 = RMul(coeff3283,prod324E);
          real basisEval32D0#3 = RMul(coeff3218,prod3252);
          real basisEval32D1#3 = RMul(one3219,prod3256);
          real basisEval32D2#1 = RMul(coeff3298,prod325D);
          real basisEval32D3#1 = RMul(coeff329C,prod3260);
          real basisEval32D4#1 = RMul(coeff3298,prod3263);
          real basisEval32D5#2 = RMul(coeff3286,prod3269);
          real basisEval32D6#2 = RMul(coeff3286,prod326F);
          real basisEval32D7#1 = RMul(coeff3286,prod3273);
          real basisEval32D8#3 = RMul(coeff3218,prod3279);
          real basisEval32D9#3 = RMul(one3219,prod327D);
          real basisEval32DA#1 = RMul(coeff3225,prod321F);
          real basisEval32DB#1 = RMul(coeff3238,prod322B);
          real basisEval32DC#1 = RMul(coeff3254,prod323E);
          real basisEval32DD#1 = RMul(coeff3238,prod3241);
          real basisEval32DE#1 = RMul(coeff3238,prod324A);
          real basisEval32DF#1 = RMul(coeff327B,prod325A);
          real basisEval32E0#1 = RMul(coeff3254,prod325D);
          real basisEval32E1#1 = RMul(coeff3225,prod3263);
          real basisEval32E2#1 = RMul(coeff3254,prod3269);
          real basisEval32E3#1 = RMul(coeff3238,prod326B);
          real basisEval32E4#1 = RMul(coeff3218,prod3275);
          real basisEval32E5#1 = RMul(coeff3225,prod3277);
          tensor[84] intermediateCons32E6#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3228,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval322F,basisEval3233,basisEval3235,basisEval3237,basisEval323B,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval3242,basisEval3245,basisEval3249,basisEval324B,basisEval324D,basisEval324F,basisEval3251,basisEval3253,basisEval3257,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval325E,basisEval3261,basisEval3264,basisEval3268,basisEval326A,basisEval326C,basisEval326E,basisEval3270,basisEval3272,basisEval3274,basisEval3276,basisEval3278,basisEval327A,basisEval327E];
          tensor[84] intermediateCons32E7#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3280,basisEval3224,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3282,basisEval322F,basisEval3284,basisEval3217,basisEval3285,basisEval3287,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3289,basisEval3242,basisEval328A,basisEval328B,basisEval3217,basisEval328C,basisEval328D,basisEval324F,basisEval3217,basisEval328E,basisEval328F,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3291,basisEval325E,basisEval3292,basisEval3293,basisEval3295,basisEval3217,basisEval3296,basisEval3297,basisEval326E,basisEval3299,basisEval3217,basisEval329A,basisEval329B,basisEval329D,basisEval3217,basisEval329E,basisEval329F,basisEval3217,basisEval32A0,basisEval3217];
          tensor[84] intermediateCons32E8#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32A1,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval322F,basisEval32A3,basisEval3217,basisEval32A4,basisEval32A5,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32A7,basisEval3245,basisEval32A8,basisEval3217,basisEval324B,basisEval328D,basisEval32A9,basisEval3217,basisEval32AA,basisEval32AB,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32AD,basisEval3292,basisEval3264,basisEval32AE,basisEval3217,basisEval32AF,basisEval326C,basisEval32B0,basisEval32B1,basisEval3217,basisEval32B2,basisEval329B,basisEval32B3,basisEval3217,basisEval32B4,basisEval32B5,basisEval3217,basisEval32A0,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32E9#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32B6,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval32B7,basisEval32B8,basisEval3217,basisEval3217,basisEval3285,basisEval3237,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval32BA,basisEval32BB,basisEval32BC,basisEval3217,basisEval3217,basisEval328C,basisEval324D,basisEval32BD,basisEval3217,basisEval3217,basisEval32BE,basisEval328F,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval32C0,basisEval32C1,basisEval32C2,basisEval32C3,basisEval3217,basisEval3217,basisEval3296,basisEval326C,basisEval32C4,basisEval32C5,basisEval3217,basisEval3217,basisEval32C6,basisEval329B,basisEval3276,basisEval3217,basisEval3217,basisEval32C7,basisEval32C8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EA#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3217,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval32CB,basisEval3284,basisEval3217,basisEval3217,basisEval3285,basisEval32A5,basisEval3217,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32BA,basisEval32CD,basisEval328B,basisEval3217,basisEval3217,basisEval32CE,basisEval328D,basisEval32CF,basisEval3217,basisEval3217,basisEval32BE,basisEval32D0,basisEval3217,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32D2,basisEval32D3,basisEval32D4,basisEval3295,basisEval3217,basisEval3217,basisEval32D5,basisEval326C,basisEval326E,basisEval32D6,basisEval3217,basisEval3217,basisEval329A,basisEval32D7,basisEval32B3,basisEval3217,basisEval3217,basisEval32C7,basisEval32D8,basisEval3217,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EB#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DA,basisEval3224,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DB,basisEval32B7,basisEval3233,basisEval3217,basisEval3217,basisEval3235,basisEval32A5,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DC,basisEval32DD,basisEval32CD,basisEval3249,basisEval3217,basisEval3217,basisEval32DE,basisEval324D,basisEval32A9,basisEval3217,basisEval3217,basisEval32AA,basisEval32D0,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DF,basisEval32E0,basisEval32C1,basisEval32E1,basisEval3268,basisEval3217,basisEval3217,basisEval32E2,basisEval32E3,basisEval326E,basisEval32B1,basisEval3217,basisEval3217,basisEval3272,basisEval329B,basisEval32E4,basisEval3217,basisEval3217,basisEval32E5,basisEval32D8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          real vdot33CF#1 = VDot<84>(dofs30C0,intermediateCons32E6);
          real vdot33D1#2 = VDot<84>(dofs30C0,intermediateCons32E7);
          real vdot33D3#2 = VDot<84>(dofs30C0,intermediateCons32E8);
          tensor[3] tensor33D4#1 = <tensor[3]>[vdot33CF,vdot33D1,vdot33D3];
          real vdot33D8#1 = VDot<84>(dofs30C0,intermediateCons32E9);
          real vdot33DA#2 = VDot<84>(dofs30C0,intermediateCons32EA);
          tensor[3] tensor33DB#1 = <tensor[3]>[vdot33D1,vdot33D8,vdot33DA];
          real vdot33E1#1 = VDot<84>(dofs30C0,intermediateCons32EB);
          tensor[3] tensor33E2#1 = <tensor[3]>[vdot33D3,vdot33DA,vdot33E1];
          tensor[3,3] _t33CD#1 = <tensor[3,3]>[tensor33D4,tensor33DB,tensor33E2];
          (real[3] evals33FA#2,tensor[3][3] E33FB#2) = EigenVecs3x3(_t33CD);
          tensor[3] _t33FF#6 = Subscript<tensor[3][3]>(E33FB,ilit2D78);
          real _t3401#9 = Subscript<real[3]>(evals33FA,ilit2D78);
          tensor[3] _t3405#6 = Subscript<tensor[3][3]>(E33FB,ilit2D75);
          real _t3407#9 = Subscript<real[3]>(evals33FA,ilit2D75);
          real r340A#1 = TensorIndex<tensor[3],[0]>(_t33FF);
          tensor[3] binopV340B#3 = VScale<3>(r340A,_t33FF);
          real r340C#1 = TensorIndex<tensor[3],[1]>(_t33FF);
          tensor[3] binopV340D#3 = VScale<3>(r340C,_t33FF);
          real r340E#1 = TensorIndex<tensor[3],[2]>(_t33FF);
          tensor[3] binopV340F#3 = VScale<3>(r340E,_t33FF);
          real r3419#1 = TensorIndex<tensor[3],[0]>(_t3405);
          tensor[3] binopV341A#3 = VScale<3>(r3419,_t3405);
          real r341B#1 = TensorIndex<tensor[3],[1]>(_t3405);
          tensor[3] binopV341C#3 = VScale<3>(r341B,_t3405);
          real r341D#1 = TensorIndex<tensor[3],[2]>(_t3405);
          tensor[3] binopV341E#3 = VScale<3>(r341D,_t3405);
          real r3428#1 = VIndex<3,0>(binopV340B);
          real r3429#1 = RDiv(r3428,_t3401);
          real r342A#1 = VIndex<3,1>(binopV340B);
          real r342B#1 = RDiv(r342A,_t3401);
          real r342C#1 = VIndex<3,2>(binopV340B);
          real r342D#1 = RDiv(r342C,_t3401);
          tensor[3] tensor342E#1 = <tensor[3]>[r3429,r342B,r342D];
          real r342F#1 = VIndex<3,0>(binopV340D);
          real r3430#1 = RDiv(r342F,_t3401);
          real r3431#1 = VIndex<3,1>(binopV340D);
          real r3432#1 = RDiv(r3431,_t3401);
          real r3433#1 = VIndex<3,2>(binopV340D);
          real r3434#1 = RDiv(r3433,_t3401);
          tensor[3] tensor3435#1 = <tensor[3]>[r3430,r3432,r3434];
          real r3436#1 = VIndex<3,0>(binopV340F);
          real r3437#1 = RDiv(r3436,_t3401);
          real r3438#1 = VIndex<3,1>(binopV340F);
          real r3439#1 = RDiv(r3438,_t3401);
          real r343A#1 = VIndex<3,2>(binopV340F);
          real r343B#1 = RDiv(r343A,_t3401);
          tensor[3] tensor343C#1 = <tensor[3]>[r3437,r3439,r343B];
          real r3455#1 = VIndex<3,0>(binopV341A);
          real r3456#1 = RDiv(r3455,_t3407);
          real r3457#1 = VIndex<3,1>(binopV341A);
          real r3458#1 = RDiv(r3457,_t3407);
          real r3459#1 = VIndex<3,2>(binopV341A);
          real r345A#1 = RDiv(r3459,_t3407);
          tensor[3] tensor345B#1 = <tensor[3]>[r3456,r3458,r345A];
          real r345C#1 = VIndex<3,0>(binopV341C);
          real r345D#1 = RDiv(r345C,_t3407);
          real r345E#1 = VIndex<3,1>(binopV341C);
          real r345F#1 = RDiv(r345E,_t3407);
          real r3460#1 = VIndex<3,2>(binopV341C);
          real r3461#1 = RDiv(r3460,_t3407);
          tensor[3] tensor3462#1 = <tensor[3]>[r345D,r345F,r3461];
          real r3463#1 = VIndex<3,0>(binopV341E);
          real r3464#1 = RDiv(r3463,_t3407);
          real r3465#1 = VIndex<3,1>(binopV341E);
          real r3466#1 = RDiv(r3465,_t3407);
          real r3467#1 = VIndex<3,2>(binopV341E);
          real r3468#1 = RDiv(r3467,_t3407);
          tensor[3] tensor3469#1 = <tensor[3]>[r3464,r3466,r3468];
          tensor[3] v3484#1 = VAdd<3>(tensor342E,tensor345B);
          tensor[3] v3487#1 = VAdd<3>(tensor3435,tensor3462);
          tensor[3] v348A#1 = VAdd<3>(tensor343C,tensor3469);
          real basisEval34B1#1 = RMul(one3219,prod322E);
          real basisEval34C4#1 = RMul(one3219,prod3241);
          real basisEval34C7#1 = RMul(one3219,prod3244);
          real basisEval34CF#3 = RMul(coeff3218,prod324C);
          real basisEval34E0#1 = RMul(one3219,prod325D);
          real basisEval34E3#1 = RMul(one3219,prod3260);
          real basisEval34E6#1 = RMul(one3219,prod3263);
          real basisEval34EE#2 = RMul(coeff3218,prod326B);
          real basisEval34F0#2 = RMul(coeff3218,prod326D);
          real basisEval34F6#1 = RMul(coeff3283,prod3273);
          real prod53501#1 = RMul(prod43258,varAcc3216);
          real prod3502#1 = RMul(one3219,prod53501);
          real prod3503#2 = RMul(one3219,prod3502);
          real basisEval3504#2 = RMul(one3219,prod3503);
          real prod3505#1 = RMul(varAcc3215,prod43258);
          real prod3506#3 = RMul(one3219,prod3505);
          real basisEval3507#1 = RMul(one3219,prod3506);
          real prod3508#1 = RMul(prod23230,prod3323C);
          real prod3509#3 = RMul(one3219,prod3508);
          real basisEval350A#1 = RMul(one3219,prod3509);
          real prod350B#1 = RMul(prod33246,prod23229);
          real prod350C#3 = RMul(one3219,prod350B);
          real basisEval350D#1 = RMul(one3219,prod350C);
          real prod350E#1 = RMul(prod43265,varAcc3216);
          real prod350F#3 = RMul(one3219,prod350E);
          real basisEval3510#1 = RMul(one3219,prod350F);
          real prod53511#1 = RMul(prod43265,varAcc3215);
          real prod3512#1 = RMul(prod53511,one3219);
          real prod3513#2 = RMul(one3219,prod3512);
          real basisEval3514#2 = RMul(one3219,prod3513);
          real prod3515#3 = RMul(varAcc3214,prod3259);
          real basisEval3516#1 = RMul(coeff3218,prod3515);
          real prod3517#2 = RMul(varAcc3214,prod325C);
          real basisEval3518#2 = RMul(coeff3218,prod3517);
          real prod3519#2 = RMul(varAcc3214,prod325F);
          real basisEval351A#1 = RMul(coeff3218,prod3519);
          real prod351B#2 = RMul(varAcc3214,prod3262);
          real basisEval351C#2 = RMul(coeff3218,prod351B);
          real prod351D#3 = RMul(varAcc3214,prod3266);
          real basisEval351E#1 = RMul(coeff3218,prod351D);
          real prod351F#3 = RMul(prod23239,prod323D);
          real basisEval3520#1 = RMul(coeff3283,prod351F);
          real prod3521#2 = RMul(prod23239,prod3240);
          real basisEval3522#2 = RMul(coeff3283,prod3521);
          real prod3523#2 = RMul(prod23239,prod3243);
          real basisEval3524#2 = RMul(coeff3283,prod3523);
          real prod3525#3 = RMul(prod23239,prod3247);
          real basisEval3526#1 = RMul(coeff3283,prod3525);
          real prod3527#3 = RMul(prod33255,prod322A);
          real basisEval3528#1 = RMul(coeff3286,prod3527);
          real prod3529#2 = RMul(prod33255,prod322D);
          real basisEval352A#1 = RMul(coeff3286,prod3529);
          real prod352B#3 = RMul(prod33255,prod3231);
          real basisEval352C#1 = RMul(coeff3286,prod352B);
          real prod352D#3 = RMul(prod4327C,prod321E);
          real basisEval352E#1 = RMul(coeff3294,prod352D);
          real prod352F#3 = RMul(prod4327C,prod3222);
          real basisEval3530#1 = RMul(coeff3294,prod352F);
          real prod53532#1 = RMul(prod4327C,varAcc3214);
          real prod3533#2 = RMul(prod53532,prod321A);
          real basisEval3534#1 = RMul(coeff3225,prod3533);
          real basisEval3539#1 = RMul(one3219,prod3234);
          real basisEval353E#1 = RMul(one3219,prod324A);
          real basisEval3540#1 = RMul(one3219,prod3250);
          real basisEval3547#1 = RMul(one3219,prod3269);
          real basisEval3548#1 = RMul(coeff3283,prod326D);
          real basisEval354A#1 = RMul(one3219,prod3271);
          real basisEval354B#2 = RMul(coeff3218,prod3273);
          real basisEval354C#1 = RMul(one3219,prod3277);
          real basisEval354F#1 = RMul(coeff3218,prod3506);
          real basisEval3550#1 = RMul(coeff3283,prod3509);
          real basisEval3551#1 = RMul(coeff3286,prod350C);
          real basisEval3552#1 = RMul(coeff3294,prod350F);
          real basisEval3553#1 = RMul(coeff3225,prod3513);
          real basisEval3554#1 = RMul(one3219,prod3515);
          real basisEval3555#2 = RMul(coeff3283,prod3519);
          real basisEval3556#1 = RMul(coeff3286,prod351B);
          real basisEval3557#1 = RMul(coeff3294,prod351D);
          real basisEval3558#1 = RMul(one3219,prod351F);
          real basisEval3559#1 = RMul(coeff3218,prod3521);
          real basisEval355A#1 = RMul(coeff3286,prod3525);
          real basisEval355B#1 = RMul(one3219,prod3527);
          real basisEval355C#2 = RMul(coeff3218,prod3529);
          real basisEval355D#1 = RMul(coeff3283,prod352B);
          real basisEval355E#1 = RMul(one3219,prod352D);
          real basisEval355F#1 = RMul(coeff3218,prod352F);
          real basisEval3560#2 = RMul(one3219,prod3533);
          real basisEval3563#1 = RMul(one3219,prod3236);
          real basisEval3568#1 = RMul(one3219,prod324E);
          real basisEval356A#1 = RMul(one3219,prod3252);
          real basisEval356F#1 = RMul(coeff3283,prod326B);
          real basisEval3570#1 = RMul(one3219,prod326F);
          real basisEval3571#1 = RMul(one3219,prod3275);
          real basisEval3573#1 = RMul(one3219,prod3279);
          real basisEval3574#1 = RMul(coeff3225,prod3503);
          real basisEval3575#1 = RMul(coeff3294,prod3506);
          real basisEval3576#1 = RMul(coeff3286,prod3509);
          real basisEval3577#1 = RMul(coeff3283,prod350C);
          real basisEval3578#1 = RMul(coeff3218,prod350F);
          real basisEval3579#1 = RMul(coeff3294,prod3515);
          real basisEval357A#1 = RMul(coeff3286,prod3517);
          real basisEval357B#1 = RMul(one3219,prod351D);
          real basisEval357C#1 = RMul(coeff3286,prod351F);
          real basisEval357D#1 = RMul(coeff3218,prod3523);
          real basisEval357E#1 = RMul(one3219,prod3525);
          real basisEval357F#1 = RMul(coeff3283,prod3527);
          real basisEval3580#1 = RMul(one3219,prod352B);
          real basisEval3581#1 = RMul(coeff3218,prod352D);
          real basisEval3582#1 = RMul(one3219,prod352F);
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3280,basisEval32A1,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3282,basisEval34B1,basisEval32A3,basisEval3285,basisEval32A5,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3289,basisEval34C4,basisEval34C7,basisEval32A8,basisEval328C,basisEval34CF,basisEval32A9,basisEval328E,basisEval32AB,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3291,basisEval34E0,basisEval34E3,basisEval34E6,basisEval32AE,basisEval3296,basisEval34EE,basisEval34F0,basisEval32B1,basisEval329A,basisEval34F6,basisEval32B3,basisEval329E,basisEval32B5,basisEval32A0,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3504,basisEval3507,basisEval350A,basisEval350D,basisEval3510,basisEval3514,basisEval3516,basisEval3518,basisEval351A,basisEval351C,basisEval351E,basisEval3520,basisEval3522,basisEval3524,basisEval3526,basisEval3528,basisEval352A,basisEval352C,basisEval352E,basisEval3530,basisEval3534];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3280,basisEval3224,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval3282,basisEval322F,basisEval3284,basisEval3217,basisEval3539,basisEval32A5,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval3289,basisEval3242,basisEval328A,basisEval328B,basisEval3217,basisEval353E,basisEval34CF,basisEval32CF,basisEval3217,basisEval3540,basisEval32D0,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval3291,basisEval325E,basisEval3292,basisEval3293,basisEval3295,basisEval3217,basisEval3547,basisEval34EE,basisEval3548,basisEval32D6,basisEval3217,basisEval354A,basisEval354B,basisEval32B3,basisEval3217,basisEval354C,basisEval32D8,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3504,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3553,basisEval3217,basisEval3554,basisEval3518,basisEval3555,basisEval3556,basisEval3557,basisEval3217,basisEval3558,basisEval3559,basisEval3524,basisEval355A,basisEval3217,basisEval355B,basisEval355C,basisEval355D,basisEval3217,basisEval355E,basisEval355F,basisEval3217,basisEval3560,basisEval3217];
          tensor[84] intermediateCons3585#1 = <tensor[84]>[basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3220,basisEval32A1,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval32A2,basisEval322F,basisEval32A3,basisEval3217,basisEval3285,basisEval3563,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval32A6,basisEval32A7,basisEval3245,basisEval32A8,basisEval3217,basisEval32CE,basisEval34CF,basisEval3568,basisEval3217,basisEval32BE,basisEval356A,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval32AC,basisEval32AD,basisEval3292,basisEval3264,basisEval32AE,basisEval3217,basisEval32D5,basisEval356F,basisEval34F0,basisEval3570,basisEval3217,basisEval329A,basisEval354B,basisEval3571,basisEval3217,basisEval32C7,basisEval3573,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3578,basisEval3514,basisEval3217,basisEval3579,basisEval357A,basisEval3555,basisEval351C,basisEval357B,basisEval3217,basisEval357C,basisEval3522,basisEval357D,basisEval357E,basisEval3217,basisEval357F,basisEval355C,basisEval3580,basisEval3217,basisEval3581,basisEval3582,basisEval3217,basisEval3560,basisEval3217,basisEval3217];
          real vdot367A#1 = VDot<84>(dofs30C0,intermediateCons3583);
          real vdot367C#1 = VDot<84>(dofs30C0,intermediateCons3584);
          real vdot367E#1 = VDot<84>(dofs30C0,intermediateCons3585);
          tensor[3] probe_l_153678#3 = <tensor[3]>[vdot367A,vdot367C,vdot367E];
          tensor[3] negV3689#1 = VNeg<3>(v3484);
          tensor[3] negV368B#1 = VNeg<3>(v3487);
          tensor[3] negV368D#1 = VNeg<3>(v348A);
          real vdot3698#1 = VDot<3>(negV3689,probe_l_153678);
          real vdot369A#1 = VDot<3>(negV368B,probe_l_153678);
          real vdot369C#1 = VDot<3>(negV368D,probe_l_153678);
          tensor[3] _t3696#1 = <tensor[3]>[vdot3698,vdot369A,vdot369C];
          goto JOIN36A7
        JOIN36A7:  preds = [ASSIGN36A4,ASSIGN46AB]
          tensor[3] step36A5#5 = phi(_t3696,_t36A6)
          real _t36A8#7 = 0.e0;
          real _t36AA#143 = 0.1e1;
          real _t36AC#1 = 0.15e1;
          real op1_e3_l_736AE#1 = VDot<3>(step36A5,step36A5);
          real op1_e3_l_836B1#3 = Sqrt(op1_e3_l_736AE);
          real op1_e3_l_936B4#1 = Abs<real>(op1_e3_l_836B1);
          real op1_e3_l_1036B7#1 = RDiv(op1_e3_l_936B4,thick247E);
          real op1_e3_l_1136BA#1 = RSub(_t36AA,op1_e3_l_1036B7);
          real op1_e3_l_1236BD#1 = RMul(_t36AC,op1_e3_l_1136BA);
          real op1_e3_l_1336C0#1 = RClamp(_t36A8,_t36AA,op1_e3_l_1236BD);
          real _t36C3#2 = RMul(maxAlpha2486,op1_e3_l_1336C0);
          bool _t36C6#1 = EQ<real>(_t36C3,_t36A8);
          if _t36C6 then goto SAVE36C9 else goto JOIN36CB
        SAVE36C9:  preds = [COND36C8]
          self.rayN = rayN24AC;
          active
          goto JOIN36CB
        JOIN36CB:  preds = [*ACTIVE36CA,COND36C8]
          real _t36D2#1 = RSub(_t36AA,_t36C3);
          real _t36D5#1 = MathFn<pow>(_t36D2,alphaFix249C);
          bool _t36D7#1 = NEQ<real>(phKs24A4,_t36A8);
          if _t36D7 then goto ASSIGN36DC else goto JOIN36FF
        ASSIGN36DC:  preds = [COND36D9]
          tensor[3] op1_e3_l_636DA#3 = VAdd<3>(eyeDir249E,litwsp2494);
          real op1_e3_l_836DD#1 = VDot<3>(op1_e3_l_636DA,op1_e3_l_636DA);
          real op1_e3_l_936E0#1 = Sqrt(op1_e3_l_836DD);
          real op1_e3_l_1236E3#1 = RDiv(_t36AA,op1_e3_l_836B1);
          tensor[3] op1_e3_l_1336E8#1 = VScale<3>(op1_e3_l_1236E3,step36A5);
          tensor[3] op1_e3_l_1436EB#1 = VNeg<3>(op1_e3_l_1336E8);
          real op1_e3_l_1636EE#1 = RDiv(_t36AA,op1_e3_l_936E0);
          real op1_e3_l_1736F3#1 = VDot<3>(op1_e3_l_1436EB,op1_e3_l_636DA);
          real op1_e3_l_1836F6#1 = RMul(op1_e3_l_1636EE,op1_e3_l_1736F3);
          real _t36F9#1 = Abs<real>(op1_e3_l_1836F6);
          real scomp36FC#1 = MathFn<pow>(_t36F9,phSp24A6);
          goto JOIN36FF
        JOIN36FF:  preds = [ASSIGN36FD,COND36D9]
          real scomp36FE#1 = phi(scomp36FC,_t36A8)
          real cmin3700#3 = VIndex<2,0>(cminmax248C);
          real cmax3702#2 = VIndex<2,1>(cminmax248C);
          tensor[3] mcol3704#1 = <tensor[3]>[_t36AA,_t36AA,_t36AA];
          bool _t3706#1 = NEQ<real>(cmin3700,cmax3702);
          if _t3706 then goto ASSIGN4B32 else goto JOIN3DEC
        ASSIGN4B32:  preds = [COND3708]
          tensor[3] _t3709#3 = VAdd<3>(pos24B8,step36A5);
          int ilit370F#1 = 84;
          int mulRes3710#84 = IMul(_t246C,ilit370F);
          int idx3713#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,mulRes3710);
          int ilit3714#91 = 1;
          int addRes3715#1 = IAdd(mulRes3710,ilit3714);
          int idx3716#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3715);
          int ilit3717#5 = 2;
          int addRes3718#1 = IAdd(mulRes3710,ilit3717);
          int idx3719#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3718);
          int ilit371A#5 = 3;
          int addRes371B#1 = IAdd(mulRes3710,ilit371A);
          int idx371C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371B);
          int ilit371D#1 = 4;
          int addRes371E#1 = IAdd(mulRes3710,ilit371D);
          int idx371F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371E);
          int ilit3720#1 = 5;
          int addRes3721#1 = IAdd(mulRes3710,ilit3720);
          int idx3722#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3721);
          int ilit3723#1 = 6;
          int addRes3724#1 = IAdd(mulRes3710,ilit3723);
          int idx3725#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3724);
          int ilit3726#1 = 7;
          int addRes3727#1 = IAdd(mulRes3710,ilit3726);
          int idx3728#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3727);
          int ilit3729#1 = 8;
          int addRes372A#1 = IAdd(mulRes3710,ilit3729);
          int idx372B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372A);
          int ilit372C#1 = 9;
          int addRes372D#1 = IAdd(mulRes3710,ilit372C);
          int idx372E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372D);
          int ilit372F#1 = 10;
          int addRes3730#1 = IAdd(mulRes3710,ilit372F);
          int idx3731#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3730);
          int ilit3732#1 = 11;
          int addRes3733#1 = IAdd(mulRes3710,ilit3732);
          int idx3734#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3733);
          int ilit3735#1 = 12;
          int addRes3736#1 = IAdd(mulRes3710,ilit3735);
          int idx3737#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3736);
          int ilit3738#1 = 13;
          int addRes3739#1 = IAdd(mulRes3710,ilit3738);
          int idx373A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3739);
          int ilit373B#1 = 14;
          int addRes373C#1 = IAdd(mulRes3710,ilit373B);
          int idx373D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373C);
          int ilit373E#1 = 15;
          int addRes373F#1 = IAdd(mulRes3710,ilit373E);
          int idx3740#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373F);
          int ilit3741#1 = 16;
          int addRes3742#1 = IAdd(mulRes3710,ilit3741);
          int idx3743#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3742);
          int ilit3744#1 = 17;
          int addRes3745#1 = IAdd(mulRes3710,ilit3744);
          int idx3746#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3745);
          int ilit3747#1 = 18;
          int addRes3748#1 = IAdd(mulRes3710,ilit3747);
          int idx3749#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3748);
          int ilit374A#1 = 19;
          int addRes374B#1 = IAdd(mulRes3710,ilit374A);
          int idx374C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374B);
          int ilit374D#1 = 20;
          int addRes374E#1 = IAdd(mulRes3710,ilit374D);
          int idx374F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374E);
          int ilit3750#1 = 21;
          int addRes3751#1 = IAdd(mulRes3710,ilit3750);
          int idx3752#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3751);
          int ilit3753#1 = 22;
          int addRes3754#1 = IAdd(mulRes3710,ilit3753);
          int idx3755#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3754);
          int ilit3756#1 = 23;
          int addRes3757#1 = IAdd(mulRes3710,ilit3756);
          int idx3758#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3757);
          int ilit3759#1 = 24;
          int addRes375A#1 = IAdd(mulRes3710,ilit3759);
          int idx375B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375A);
          int ilit375C#1 = 25;
          int addRes375D#1 = IAdd(mulRes3710,ilit375C);
          int idx375E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375D);
          int ilit375F#1 = 26;
          int addRes3760#1 = IAdd(mulRes3710,ilit375F);
          int idx3761#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3760);
          int ilit3762#1 = 27;
          int addRes3763#1 = IAdd(mulRes3710,ilit3762);
          int idx3764#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3763);
          int ilit3765#1 = 28;
          int addRes3766#1 = IAdd(mulRes3710,ilit3765);
          int idx3767#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3766);
          int ilit3768#1 = 29;
          int addRes3769#1 = IAdd(mulRes3710,ilit3768);
          int idx376A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3769);
          int ilit376B#1 = 30;
          int addRes376C#1 = IAdd(mulRes3710,ilit376B);
          int idx376D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376C);
          int ilit376E#1 = 31;
          int addRes376F#1 = IAdd(mulRes3710,ilit376E);
          int idx3770#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376F);
          int ilit3771#1 = 32;
          int addRes3772#1 = IAdd(mulRes3710,ilit3771);
          int idx3773#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3772);
          int ilit3774#1 = 33;
          int addRes3775#1 = IAdd(mulRes3710,ilit3774);
          int idx3776#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3775);
          int ilit3777#1 = 34;
          int addRes3778#1 = IAdd(mulRes3710,ilit3777);
          int idx3779#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3778);
          int ilit377A#1 = 35;
          int addRes377B#1 = IAdd(mulRes3710,ilit377A);
          int idx377C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377B);
          int ilit377D#1 = 36;
          int addRes377E#1 = IAdd(mulRes3710,ilit377D);
          int idx377F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377E);
          int ilit3780#1 = 37;
          int addRes3781#1 = IAdd(mulRes3710,ilit3780);
          int idx3782#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3781);
          int ilit3783#1 = 38;
          int addRes3784#1 = IAdd(mulRes3710,ilit3783);
          int idx3785#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3784);
          int ilit3786#1 = 39;
          int addRes3787#1 = IAdd(mulRes3710,ilit3786);
          int idx3788#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3787);
          int ilit3789#1 = 40;
          int addRes378A#1 = IAdd(mulRes3710,ilit3789);
          int idx378B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378A);
          int ilit378C#1 = 41;
          int addRes378D#1 = IAdd(mulRes3710,ilit378C);
          int idx378E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378D);
          int ilit378F#1 = 42;
          int addRes3790#1 = IAdd(mulRes3710,ilit378F);
          int idx3791#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3790);
          int ilit3792#1 = 43;
          int addRes3793#1 = IAdd(mulRes3710,ilit3792);
          int idx3794#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3793);
          int ilit3795#1 = 44;
          int addRes3796#1 = IAdd(mulRes3710,ilit3795);
          int idx3797#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3796);
          int ilit3798#1 = 45;
          int addRes3799#1 = IAdd(mulRes3710,ilit3798);
          int idx379A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3799);
          int ilit379B#1 = 46;
          int addRes379C#1 = IAdd(mulRes3710,ilit379B);
          int idx379D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379C);
          int ilit379E#1 = 47;
          int addRes379F#1 = IAdd(mulRes3710,ilit379E);
          int idx37A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379F);
          int ilit37A1#1 = 48;
          int addRes37A2#1 = IAdd(mulRes3710,ilit37A1);
          int idx37A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A2);
          int ilit37A4#1 = 49;
          int addRes37A5#1 = IAdd(mulRes3710,ilit37A4);
          int idx37A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A5);
          int ilit37A7#1 = 50;
          int addRes37A8#1 = IAdd(mulRes3710,ilit37A7);
          int idx37A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A8);
          int ilit37AA#1 = 51;
          int addRes37AB#1 = IAdd(mulRes3710,ilit37AA);
          int idx37AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AB);
          int ilit37AD#1 = 52;
          int addRes37AE#1 = IAdd(mulRes3710,ilit37AD);
          int idx37AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AE);
          int ilit37B0#1 = 53;
          int addRes37B1#1 = IAdd(mulRes3710,ilit37B0);
          int idx37B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B1);
          int ilit37B3#1 = 54;
          int addRes37B4#1 = IAdd(mulRes3710,ilit37B3);
          int idx37B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B4);
          int ilit37B6#1 = 55;
          int addRes37B7#1 = IAdd(mulRes3710,ilit37B6);
          int idx37B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B7);
          int ilit37B9#1 = 56;
          int addRes37BA#1 = IAdd(mulRes3710,ilit37B9);
          int idx37BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BA);
          int ilit37BC#1 = 57;
          int addRes37BD#1 = IAdd(mulRes3710,ilit37BC);
          int idx37BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BD);
          int ilit37BF#1 = 58;
          int addRes37C0#1 = IAdd(mulRes3710,ilit37BF);
          int idx37C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C0);
          int ilit37C2#1 = 59;
          int addRes37C3#1 = IAdd(mulRes3710,ilit37C2);
          int idx37C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C3);
          int ilit37C5#1 = 60;
          int addRes37C6#1 = IAdd(mulRes3710,ilit37C5);
          int idx37C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C6);
          int ilit37C8#1 = 61;
          int addRes37C9#1 = IAdd(mulRes3710,ilit37C8);
          int idx37CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C9);
          int ilit37CB#1 = 62;
          int addRes37CC#1 = IAdd(mulRes3710,ilit37CB);
          int idx37CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CC);
          int ilit37CE#1 = 63;
          int addRes37CF#1 = IAdd(mulRes3710,ilit37CE);
          int idx37D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CF);
          int ilit37D1#1 = 64;
          int addRes37D2#1 = IAdd(mulRes3710,ilit37D1);
          int idx37D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D2);
          int ilit37D4#1 = 65;
          int addRes37D5#1 = IAdd(mulRes3710,ilit37D4);
          int idx37D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D5);
          int ilit37D7#1 = 66;
          int addRes37D8#1 = IAdd(mulRes3710,ilit37D7);
          int idx37D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D8);
          int ilit37DA#1 = 67;
          int addRes37DB#1 = IAdd(mulRes3710,ilit37DA);
          int idx37DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DB);
          int ilit37DD#1 = 68;
          int addRes37DE#1 = IAdd(mulRes3710,ilit37DD);
          int idx37DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DE);
          int ilit37E0#1 = 69;
          int addRes37E1#1 = IAdd(mulRes3710,ilit37E0);
          int idx37E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E1);
          int ilit37E3#1 = 70;
          int addRes37E4#1 = IAdd(mulRes3710,ilit37E3);
          int idx37E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E4);
          int ilit37E6#1 = 71;
          int addRes37E7#1 = IAdd(mulRes3710,ilit37E6);
          int idx37E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E7);
          int ilit37E9#1 = 72;
          int addRes37EA#1 = IAdd(mulRes3710,ilit37E9);
          int idx37EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37EA);
          int ilit37EC#1 = 73;
          int addRes37ED#1 = IAdd(mulRes3710,ilit37EC);
          int idx37EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37ED);
          int ilit37EF#1 = 74;
          int addRes37F0#1 = IAdd(mulRes3710,ilit37EF);
          int idx37F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F0);
          int ilit37F2#1 = 75;
          int addRes37F3#1 = IAdd(mulRes3710,ilit37F2);
          int idx37F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F3);
          int ilit37F5#1 = 76;
          int addRes37F6#1 = IAdd(mulRes3710,ilit37F5);
          int idx37F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F6);
          int ilit37F8#1 = 77;
          int addRes37F9#1 = IAdd(mulRes3710,ilit37F8);
          int idx37FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F9);
          int ilit37FB#1 = 78;
          int addRes37FC#1 = IAdd(mulRes3710,ilit37FB);
          int idx37FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FC);
          int ilit37FE#1 = 79;
          int addRes37FF#1 = IAdd(mulRes3710,ilit37FE);
          int idx3800#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FF);
          int ilit3801#1 = 80;
          int addRes3802#1 = IAdd(mulRes3710,ilit3801);
          int idx3803#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3802);
          int ilit3804#1 = 81;
          int addRes3805#1 = IAdd(mulRes3710,ilit3804);
          int idx3806#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3805);
          int ilit3807#1 = 82;
          int addRes3808#1 = IAdd(mulRes3710,ilit3807);
          int idx3809#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3808);
          int ilit380A#1 = 83;
          int addRes380B#1 = IAdd(mulRes3710,ilit380A);
          int idx380C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes380B);
          int mulRes3912#1 = IMul(ilit3714,idx3713);
          int mulRes3914#1 = IMul(ilit3714,idx3716);
          int mulRes3917#1 = IMul(ilit3714,idx3719);
          int mulRes391A#1 = IMul(ilit3714,idx371C);
          int mulRes391D#1 = IMul(ilit3714,idx371F);
          int mulRes3920#1 = IMul(ilit3714,idx3722);
          int mulRes3923#1 = IMul(ilit3714,idx3725);
          int mulRes3926#1 = IMul(ilit3714,idx3728);
          int mulRes3929#1 = IMul(ilit3714,idx372B);
          int mulRes392C#1 = IMul(ilit3714,idx372E);
          int mulRes392F#1 = IMul(ilit3714,idx3731);
          int mulRes3932#1 = IMul(ilit3714,idx3734);
          int mulRes3935#1 = IMul(ilit3714,idx3737);
          int mulRes3938#1 = IMul(ilit3714,idx373A);
          int mulRes393B#1 = IMul(ilit3714,idx373D);
          int mulRes393E#1 = IMul(ilit3714,idx3740);
          int mulRes3941#1 = IMul(ilit3714,idx3743);
          int mulRes3944#1 = IMul(ilit3714,idx3746);
          int mulRes3947#1 = IMul(ilit3714,idx3749);
          int mulRes394A#1 = IMul(ilit3714,idx374C);
          int mulRes394D#1 = IMul(ilit3714,idx374F);
          int mulRes3950#1 = IMul(ilit3714,idx3752);
          int mulRes3953#1 = IMul(ilit3714,idx3755);
          int mulRes3956#1 = IMul(ilit3714,idx3758);
          int mulRes3959#1 = IMul(ilit3714,idx375B);
          int mulRes395C#1 = IMul(ilit3714,idx375E);
          int mulRes395F#1 = IMul(ilit3714,idx3761);
          int mulRes3962#1 = IMul(ilit3714,idx3764);
          int mulRes3965#1 = IMul(ilit3714,idx3767);
          int mulRes3968#1 = IMul(ilit3714,idx376A);
          int mulRes396B#1 = IMul(ilit3714,idx376D);
          int mulRes396E#1 = IMul(ilit3714,idx3770);
          int mulRes3971#1 = IMul(ilit3714,idx3773);
          int mulRes3974#1 = IMul(ilit3714,idx3776);
          int mulRes3977#1 = IMul(ilit3714,idx3779);
          int mulRes397A#1 = IMul(ilit3714,idx377C);
          int mulRes397D#1 = IMul(ilit3714,idx377F);
          int mulRes3980#1 = IMul(ilit3714,idx3782);
          int mulRes3983#1 = IMul(ilit3714,idx3785);
          int mulRes3986#1 = IMul(ilit3714,idx3788);
          int mulRes3989#1 = IMul(ilit3714,idx378B);
          int mulRes398C#1 = IMul(ilit3714,idx378E);
          int mulRes398F#1 = IMul(ilit3714,idx3791);
          int mulRes3992#1 = IMul(ilit3714,idx3794);
          int mulRes3995#1 = IMul(ilit3714,idx3797);
          int mulRes3998#1 = IMul(ilit3714,idx379A);
          int mulRes399B#1 = IMul(ilit3714,idx379D);
          int mulRes399E#1 = IMul(ilit3714,idx37A0);
          int mulRes39A1#1 = IMul(ilit3714,idx37A3);
          int mulRes39A4#1 = IMul(ilit3714,idx37A6);
          int mulRes39A7#1 = IMul(ilit3714,idx37A9);
          int mulRes39AA#1 = IMul(ilit3714,idx37AC);
          int mulRes39AD#1 = IMul(ilit3714,idx37AF);
          int mulRes39B0#1 = IMul(ilit3714,idx37B2);
          int mulRes39B3#1 = IMul(ilit3714,idx37B5);
          int mulRes39B6#1 = IMul(ilit3714,idx37B8);
          int mulRes39B9#1 = IMul(ilit3714,idx37BB);
          int mulRes39BC#1 = IMul(ilit3714,idx37BE);
          int mulRes39BF#1 = IMul(ilit3714,idx37C1);
          int mulRes39C2#1 = IMul(ilit3714,idx37C4);
          int mulRes39C5#1 = IMul(ilit3714,idx37C7);
          int mulRes39C8#1 = IMul(ilit3714,idx37CA);
          int mulRes39CB#1 = IMul(ilit3714,idx37CD);
          int mulRes39CE#1 = IMul(ilit3714,idx37D0);
          int mulRes39D1#1 = IMul(ilit3714,idx37D3);
          int mulRes39D4#1 = IMul(ilit3714,idx37D6);
          int mulRes39D7#1 = IMul(ilit3714,idx37D9);
          int mulRes39DA#1 = IMul(ilit3714,idx37DC);
          int mulRes39DD#1 = IMul(ilit3714,idx37DF);
          int mulRes39E0#1 = IMul(ilit3714,idx37E2);
          int mulRes39E3#1 = IMul(ilit3714,idx37E5);
          int mulRes39E6#1 = IMul(ilit3714,idx37E8);
          int mulRes39E9#1 = IMul(ilit3714,idx37EB);
          int mulRes39EC#1 = IMul(ilit3714,idx37EE);
          int mulRes39EF#1 = IMul(ilit3714,idx37F1);
          int mulRes39F2#1 = IMul(ilit3714,idx37F4);
          int mulRes39F5#1 = IMul(ilit3714,idx37F7);
          int mulRes39F8#1 = IMul(ilit3714,idx37FA);
          int mulRes39FB#1 = IMul(ilit3714,idx37FD);
          int mulRes39FE#1 = IMul(ilit3714,idx3800);
          int mulRes3A01#1 = IMul(ilit3714,idx3803);
          int mulRes3A04#1 = IMul(ilit3714,idx3806);
          int mulRes3A07#1 = IMul(ilit3714,idx3809);
          int mulRes3A0A#1 = IMul(ilit3714,idx380C);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3912);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3914);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3917);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391A);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391D);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3920);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3923);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3926);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3929);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392C);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392F);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3932);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3935);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3938);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393B);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393E);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3941);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3944);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3947);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394A);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394D);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3950);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3953);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3956);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3959);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395C);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395F);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3962);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3965);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3968);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396B);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396E);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3971);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3974);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3977);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397A);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397D);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3980);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3983);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3986);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3989);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398C);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398F);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3992);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3995);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3998);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399B);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399E);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A1);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A4);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A7);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AA);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AD);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B0);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B3);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B6);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B9);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BC);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BF);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C2);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C5);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C8);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CB);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CE);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D1);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D4);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D7);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DA);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DD);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E0);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E3);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E6);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E9);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EC);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EF);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F2);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F5);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F8);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FB);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FE);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A01);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A04);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A07);
          real dof3A5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A0A);
          tensor[84] dofs3A5F#1 = <tensor[84]>[dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D,dof3A5E];
          real varAcc3BB3#27 = VIndex<3,0>(_t3709);
          real varAcc3BB4#12 = VIndex<3,1>(_t3709);
          real varAcc3BB5#12 = VIndex<3,2>(_t3709);
          real prod3BB7#7 = RMul(_t36AA,_t36AA);
          real prod3BB8#1 = RMul(_t36AA,prod3BB7);
          real basisEval3BB9#1 = RMul(_t36AA,prod3BB8);
          real prod3BBB#6 = RMul(_t36AA,varAcc3BB5);
          real prod3BBC#1 = RMul(_t36AA,prod3BBB);
          real basisEval3BBD#1 = RMul(_t36AA,prod3BBC);
          real prod3BBF#6 = RMul(varAcc3BB4,_t36AA);
          real prod3BC0#1 = RMul(_t36AA,prod3BBF);
          real basisEval3BC1#1 = RMul(_t36AA,prod3BC0);
          real prod3BC3#1 = RMul(varAcc3BB3,prod3BB7);
          real basisEval3BC4#1 = RMul(_t36AA,prod3BC3);
          real prod23BC5#6 = RMul(varAcc3BB5,varAcc3BB5);
          real prod3BC6#5 = RMul(_t36AA,prod23BC5);
          real prod3BC7#1 = RMul(_t36AA,prod3BC6);
          real basisEval3BC8#1 = RMul(_t36AA,prod3BC7);
          real prod3BC9#5 = RMul(varAcc3BB4,varAcc3BB5);
          real prod3BCA#1 = RMul(_t36AA,prod3BC9);
          real basisEval3BCB#1 = RMul(_t36AA,prod3BCA);
          real prod23BCC#6 = RMul(varAcc3BB4,varAcc3BB4);
          real prod3BCD#5 = RMul(prod23BCC,_t36AA);
          real prod3BCE#1 = RMul(_t36AA,prod3BCD);
          real basisEval3BCF#1 = RMul(_t36AA,prod3BCE);
          real prod3BD0#1 = RMul(varAcc3BB3,prod3BBB);
          real basisEval3BD1#1 = RMul(_t36AA,prod3BD0);
          real prod3BD2#1 = RMul(varAcc3BB3,prod3BBF);
          real basisEval3BD3#1 = RMul(_t36AA,prod3BD2);
          real prod23BD4#16 = RMul(varAcc3BB3,varAcc3BB3);
          real prod3BD5#1 = RMul(prod23BD4,prod3BB7);
          real basisEval3BD6#1 = RMul(_t36AA,prod3BD5);
          real prod33BD7#5 = RMul(prod23BC5,varAcc3BB5);
          real prod3BD8#4 = RMul(_t36AA,prod33BD7);
          real prod3BD9#1 = RMul(_t36AA,prod3BD8);
          real basisEval3BDA#1 = RMul(_t36AA,prod3BD9);
          real prod3BDB#4 = RMul(varAcc3BB4,prod23BC5);
          real prod3BDC#1 = RMul(_t36AA,prod3BDB);
          real basisEval3BDD#1 = RMul(_t36AA,prod3BDC);
          real prod3BDE#4 = RMul(prod23BCC,varAcc3BB5);
          real prod3BDF#1 = RMul(_t36AA,prod3BDE);
          real basisEval3BE0#1 = RMul(_t36AA,prod3BDF);
          real prod33BE1#5 = RMul(prod23BCC,varAcc3BB4);
          real prod3BE2#4 = RMul(prod33BE1,_t36AA);
          real prod3BE3#1 = RMul(_t36AA,prod3BE2);
          real basisEval3BE4#1 = RMul(_t36AA,prod3BE3);
          real prod3BE5#1 = RMul(varAcc3BB3,prod3BC6);
          real basisEval3BE6#1 = RMul(_t36AA,prod3BE5);
          real prod3BE7#1 = RMul(varAcc3BB3,prod3BC9);
          real basisEval3BE8#1 = RMul(_t36AA,prod3BE7);
          real prod3BE9#1 = RMul(varAcc3BB3,prod3BCD);
          real basisEval3BEA#1 = RMul(_t36AA,prod3BE9);
          real prod3BEB#1 = RMul(prod23BD4,prod3BBB);
          real basisEval3BEC#1 = RMul(_t36AA,prod3BEB);
          real prod3BED#1 = RMul(prod23BD4,prod3BBF);
          real basisEval3BEE#1 = RMul(_t36AA,prod3BED);
          real prod33BEF#11 = RMul(prod23BD4,varAcc3BB3);
          real prod3BF0#1 = RMul(prod33BEF,prod3BB7);
          real basisEval3BF1#1 = RMul(_t36AA,prod3BF0);
          real prod43BF2#4 = RMul(prod33BD7,varAcc3BB5);
          real prod3BF3#3 = RMul(_t36AA,prod43BF2);
          real prod3BF4#1 = RMul(_t36AA,prod3BF3);
          real basisEval3BF5#1 = RMul(_t36AA,prod3BF4);
          real prod3BF6#3 = RMul(varAcc3BB4,prod33BD7);
          real prod3BF7#1 = RMul(_t36AA,prod3BF6);
          real basisEval3BF8#1 = RMul(_t36AA,prod3BF7);
          real prod3BF9#3 = RMul(prod23BCC,prod23BC5);
          real prod3BFA#1 = RMul(_t36AA,prod3BF9);
          real basisEval3BFB#1 = RMul(_t36AA,prod3BFA);
          real prod3BFC#3 = RMul(prod33BE1,varAcc3BB5);
          real prod3BFD#1 = RMul(_t36AA,prod3BFC);
          real basisEval3BFE#1 = RMul(_t36AA,prod3BFD);
          real prod43BFF#4 = RMul(prod33BE1,varAcc3BB4);
          real prod3C00#3 = RMul(prod43BFF,_t36AA);
          real prod3C01#1 = RMul(_t36AA,prod3C00);
          real basisEval3C02#1 = RMul(_t36AA,prod3C01);
          real prod3C03#1 = RMul(varAcc3BB3,prod3BD8);
          real basisEval3C04#1 = RMul(_t36AA,prod3C03);
          real prod3C05#1 = RMul(varAcc3BB3,prod3BDB);
          real basisEval3C06#1 = RMul(_t36AA,prod3C05);
          real prod3C07#1 = RMul(varAcc3BB3,prod3BDE);
          real basisEval3C08#1 = RMul(_t36AA,prod3C07);
          real prod3C09#1 = RMul(varAcc3BB3,prod3BE2);
          real basisEval3C0A#1 = RMul(_t36AA,prod3C09);
          real prod3C0B#1 = RMul(prod23BD4,prod3BC6);
          real basisEval3C0C#1 = RMul(_t36AA,prod3C0B);
          real prod3C0D#1 = RMul(prod23BD4,prod3BC9);
          real basisEval3C0E#1 = RMul(_t36AA,prod3C0D);
          real prod3C0F#1 = RMul(prod23BD4,prod3BCD);
          real basisEval3C10#1 = RMul(_t36AA,prod3C0F);
          real prod3C11#1 = RMul(prod33BEF,prod3BBB);
          real basisEval3C12#1 = RMul(_t36AA,prod3C11);
          real prod3C13#1 = RMul(prod33BEF,prod3BBF);
          real basisEval3C14#1 = RMul(_t36AA,prod3C13);
          real prod43C15#7 = RMul(prod33BEF,varAcc3BB3);
          real prod3C16#1 = RMul(prod43C15,prod3BB7);
          real basisEval3C17#1 = RMul(_t36AA,prod3C16);
          real prod53C18#3 = RMul(prod43BF2,varAcc3BB5);
          real prod3C19#2 = RMul(_t36AA,prod53C18);
          real prod3C1A#1 = RMul(_t36AA,prod3C19);
          real basisEval3C1B#1 = RMul(_t36AA,prod3C1A);
          real prod3C1C#2 = RMul(varAcc3BB4,prod43BF2);
          real prod3C1D#1 = RMul(_t36AA,prod3C1C);
          real basisEval3C1E#1 = RMul(_t36AA,prod3C1D);
          real prod3C1F#2 = RMul(prod23BCC,prod33BD7);
          real prod3C20#1 = RMul(_t36AA,prod3C1F);
          real basisEval3C21#1 = RMul(_t36AA,prod3C20);
          real prod3C22#2 = RMul(prod33BE1,prod23BC5);
          real prod3C23#1 = RMul(_t36AA,prod3C22);
          real basisEval3C24#1 = RMul(_t36AA,prod3C23);
          real prod3C25#2 = RMul(prod43BFF,varAcc3BB5);
          real prod3C26#1 = RMul(_t36AA,prod3C25);
          real basisEval3C27#1 = RMul(_t36AA,prod3C26);
          real prod53C28#3 = RMul(prod43BFF,varAcc3BB4);
          real prod3C29#2 = RMul(prod53C28,_t36AA);
          real prod3C2A#1 = RMul(_t36AA,prod3C29);
          real basisEval3C2B#1 = RMul(_t36AA,prod3C2A);
          real prod3C2C#1 = RMul(varAcc3BB3,prod3BF3);
          real basisEval3C2D#1 = RMul(_t36AA,prod3C2C);
          real prod3C2E#1 = RMul(varAcc3BB3,prod3BF6);
          real basisEval3C2F#1 = RMul(_t36AA,prod3C2E);
          real prod3C30#1 = RMul(varAcc3BB3,prod3BF9);
          real basisEval3C31#1 = RMul(_t36AA,prod3C30);
          real prod3C32#1 = RMul(varAcc3BB3,prod3BFC);
          real basisEval3C33#1 = RMul(_t36AA,prod3C32);
          real prod3C34#1 = RMul(varAcc3BB3,prod3C00);
          real basisEval3C35#1 = RMul(_t36AA,prod3C34);
          real prod3C36#1 = RMul(prod23BD4,prod3BD8);
          real basisEval3C37#1 = RMul(_t36AA,prod3C36);
          real prod3C38#1 = RMul(prod23BD4,prod3BDB);
          real basisEval3C39#1 = RMul(_t36AA,prod3C38);
          real prod3C3A#1 = RMul(prod23BD4,prod3BDE);
          real basisEval3C3B#1 = RMul(_t36AA,prod3C3A);
          real prod3C3C#1 = RMul(prod23BD4,prod3BE2);
          real basisEval3C3D#1 = RMul(_t36AA,prod3C3C);
          real prod3C3E#1 = RMul(prod33BEF,prod3BC6);
          real basisEval3C3F#1 = RMul(_t36AA,prod3C3E);
          real prod3C40#1 = RMul(prod33BEF,prod3BC9);
          real basisEval3C41#1 = RMul(_t36AA,prod3C40);
          real prod3C42#1 = RMul(prod33BEF,prod3BCD);
          real basisEval3C43#1 = RMul(_t36AA,prod3C42);
          real prod3C44#1 = RMul(prod43C15,prod3BBB);
          real basisEval3C45#1 = RMul(_t36AA,prod3C44);
          real prod3C46#1 = RMul(prod43C15,prod3BBF);
          real basisEval3C47#1 = RMul(_t36AA,prod3C46);
          real prod53C48#4 = RMul(prod43C15,varAcc3BB3);
          real prod3C49#1 = RMul(prod53C48,prod3BB7);
          real basisEval3C4A#1 = RMul(_t36AA,prod3C49);
          real prod63C4B#1 = RMul(prod53C18,varAcc3BB5);
          real prod3C4C#1 = RMul(_t36AA,prod63C4B);
          real prod3C4D#1 = RMul(_t36AA,prod3C4C);
          real basisEval3C4E#1 = RMul(_t36AA,prod3C4D);
          real prod3C4F#1 = RMul(varAcc3BB4,prod53C18);
          real prod3C50#1 = RMul(_t36AA,prod3C4F);
          real basisEval3C51#1 = RMul(_t36AA,prod3C50);
          real prod3C52#1 = RMul(prod23BCC,prod43BF2);
          real prod3C53#1 = RMul(_t36AA,prod3C52);
          real basisEval3C54#1 = RMul(_t36AA,prod3C53);
          real prod3C55#1 = RMul(prod33BE1,prod33BD7);
          real prod3C56#1 = RMul(_t36AA,prod3C55);
          real basisEval3C57#1 = RMul(_t36AA,prod3C56);
          real prod3C58#1 = RMul(prod43BFF,prod23BC5);
          real prod3C59#1 = RMul(_t36AA,prod3C58);
          real basisEval3C5A#1 = RMul(_t36AA,prod3C59);
          real prod3C5B#1 = RMul(prod53C28,varAcc3BB5);
          real prod3C5C#1 = RMul(_t36AA,prod3C5B);
          real basisEval3C5D#1 = RMul(_t36AA,prod3C5C);
          real prod63C5E#1 = RMul(prod53C28,varAcc3BB4);
          real prod3C5F#1 = RMul(prod63C5E,_t36AA);
          real prod3C60#1 = RMul(_t36AA,prod3C5F);
          real basisEval3C61#1 = RMul(_t36AA,prod3C60);
          real prod3C62#1 = RMul(varAcc3BB3,prod3C19);
          real basisEval3C63#1 = RMul(_t36AA,prod3C62);
          real prod3C64#1 = RMul(varAcc3BB3,prod3C1C);
          real basisEval3C65#1 = RMul(_t36AA,prod3C64);
          real prod3C66#1 = RMul(varAcc3BB3,prod3C1F);
          real basisEval3C67#1 = RMul(_t36AA,prod3C66);
          real prod3C68#1 = RMul(varAcc3BB3,prod3C22);
          real basisEval3C69#1 = RMul(_t36AA,prod3C68);
          real prod3C6A#1 = RMul(varAcc3BB3,prod3C25);
          real basisEval3C6B#1 = RMul(_t36AA,prod3C6A);
          real prod3C6C#1 = RMul(varAcc3BB3,prod3C29);
          real basisEval3C6D#1 = RMul(_t36AA,prod3C6C);
          real prod3C6E#1 = RMul(prod23BD4,prod3BF3);
          real basisEval3C6F#1 = RMul(_t36AA,prod3C6E);
          real prod3C70#1 = RMul(prod23BD4,prod3BF6);
          real basisEval3C71#1 = RMul(_t36AA,prod3C70);
          real prod3C72#1 = RMul(prod23BD4,prod3BF9);
          real basisEval3C73#1 = RMul(_t36AA,prod3C72);
          real prod3C74#1 = RMul(prod23BD4,prod3BFC);
          real basisEval3C75#1 = RMul(_t36AA,prod3C74);
          real prod3C76#1 = RMul(prod23BD4,prod3C00);
          real basisEval3C77#1 = RMul(_t36AA,prod3C76);
          real prod3C78#1 = RMul(prod33BEF,prod3BD8);
          real basisEval3C79#1 = RMul(_t36AA,prod3C78);
          real prod3C7A#1 = RMul(prod33BEF,prod3BDB);
          real basisEval3C7B#1 = RMul(_t36AA,prod3C7A);
          real prod3C7C#1 = RMul(prod33BEF,prod3BDE);
          real basisEval3C7D#1 = RMul(_t36AA,prod3C7C);
          real prod3C7E#1 = RMul(prod33BEF,prod3BE2);
          real basisEval3C7F#1 = RMul(_t36AA,prod3C7E);
          real prod3C80#1 = RMul(prod43C15,prod3BC6);
          real basisEval3C81#1 = RMul(_t36AA,prod3C80);
          real prod3C82#1 = RMul(prod43C15,prod3BC9);
          real basisEval3C83#1 = RMul(_t36AA,prod3C82);
          real prod3C84#1 = RMul(prod43C15,prod3BCD);
          real basisEval3C85#1 = RMul(_t36AA,prod3C84);
          real prod3C86#1 = RMul(prod53C48,prod3BBB);
          real basisEval3C87#1 = RMul(_t36AA,prod3C86);
          real prod3C88#1 = RMul(prod53C48,prod3BBF);
          real basisEval3C89#1 = RMul(_t36AA,prod3C88);
          real prod63C8A#1 = RMul(prod53C48,varAcc3BB3);
          real prod3C8B#1 = RMul(prod63C8A,prod3BB7);
          real basisEval3C8C#1 = RMul(_t36AA,prod3C8B);
          tensor[84] intermediateCons3C8D#1 = <tensor[84]>[basisEval3BB9,basisEval3BBD,basisEval3BC1,basisEval3BC4,basisEval3BC8,basisEval3BCB,basisEval3BCF,basisEval3BD1,basisEval3BD3,basisEval3BD6,basisEval3BDA,basisEval3BDD,basisEval3BE0,basisEval3BE4,basisEval3BE6,basisEval3BE8,basisEval3BEA,basisEval3BEC,basisEval3BEE,basisEval3BF1,basisEval3BF5,basisEval3BF8,basisEval3BFB,basisEval3BFE,basisEval3C02,basisEval3C04,basisEval3C06,basisEval3C08,basisEval3C0A,basisEval3C0C,basisEval3C0E,basisEval3C10,basisEval3C12,basisEval3C14,basisEval3C17,basisEval3C1B,basisEval3C1E,basisEval3C21,basisEval3C24,basisEval3C27,basisEval3C2B,basisEval3C2D,basisEval3C2F,basisEval3C31,basisEval3C33,basisEval3C35,basisEval3C37,basisEval3C39,basisEval3C3B,basisEval3C3D,basisEval3C3F,basisEval3C41,basisEval3C43,basisEval3C45,basisEval3C47,basisEval3C4A,basisEval3C4E,basisEval3C51,basisEval3C54,basisEval3C57,basisEval3C5A,basisEval3C5D,basisEval3C61,basisEval3C63,basisEval3C65,basisEval3C67,basisEval3C69,basisEval3C6B,basisEval3C6D,basisEval3C6F,basisEval3C71,basisEval3C73,basisEval3C75,basisEval3C77,basisEval3C79,basisEval3C7B,basisEval3C7D,basisEval3C7F,basisEval3C81,basisEval3C83,basisEval3C85,basisEval3C87,basisEval3C89,basisEval3C8C];
          real probe_l_83D6A#1 = VDot<84>(dofs3A5F,intermediateCons3C8D);
          real op1_e3_l_93D6D#1 = RSub(probe_l_83D6A,cmin3700);
          real op1_e3_l_103D70#1 = RSub(cmax3702,cmin3700);
          real op1_e3_l_113D73#1 = RDiv(op1_e3_l_93D6D,op1_e3_l_103D70);
          real op1_e3_l_123D76#1 = RSub(_t36AA,_t36A8);
          real op1_e3_l_133D79#1 = RMul(op1_e3_l_113D73,op1_e3_l_123D76);
          real _t3D7C#1 = RAdd(_t36A8,op1_e3_l_133D79);
          real Mtransform3D7F#1 = Transform<IMAGE1D<double[3]>>(cmap246A);
          real MxPos3D81#1 = RMul(Mtransform3D7F,_t3D7C);
          real Ttranslate3D84#1 = Translate<IMAGE1D<double[3]>>(cmap246A);
          real imgPos3D86#2 = RAdd(MxPos3D81,Ttranslate3D84);
          real nd3D89#2 = Floor<1>(imgPos3D86);
          real f3D8B#2 = RSub(imgPos3D86,nd3D89);
          int n3D8E#5 = RealToInt<1>(nd3D89);
          bool isInside3D92#1 = IndexInside<IMAGE1D<double[3]>,2>(n3D8E,cmap246A);
          if isInside3D92 then goto ASSIGN4C30 else goto ASSIGN4C28
        ASSIGN4C30:  preds = [COND3D94]
          int offp3D99#3 = IMul(ilit371A,n3D8E);
          real v0_3D9A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D99);
          int addRes3D9C#1 = IAdd(n3D8E,ilit3714);
          int offp3D9D#3 = IMul(ilit371A,addRes3D9C);
          real v1_3D9E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D9D);
          tensor[2] v_3D9F#1 = <tensor[2]>[v0_3D9A,v1_3D9E];
          int offp3DA0#1 = IAdd(offp3D99,ilit3714);
          real v0_3DA1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA0);
          int offp3DA2#1 = IAdd(offp3D9D,ilit3714);
          real v1_3DA3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA2);
          tensor[2] v_3DA4#1 = <tensor[2]>[v0_3DA1,v1_3DA3];
          int offp3DA6#1 = IAdd(offp3D99,ilit3717);
          real v0_3DA7#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA6);
          int offp3DA8#1 = IAdd(offp3D9D,ilit3717);
          real v1_3DA9#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA8);
          tensor[2] v_3DAA#1 = <tensor[2]>[v0_3DA7,v1_3DA9];
          tensor[3,2] voxels3DAB#1 = <tensor[3,2]>[v_3D9F,v_3DA4,v_3DAA];
          goto JOIN3DC5
        JOIN3DC5:  preds = [ASSIGN3DC1,ASSIGN3E9E]
          tensor[3,2] ldvox3DC3#3 = phi(voxels3DAB,voxels3E86)
          real idx3DC8#1 = RSub(f3D8B,_t36AA);
          tensor[2] kernX_3DC6#1 = <tensor[2]>[f3D8B,idx3DC8];
          tensor[2] a03DCD#1 = <tensor[2]>[_t36AA,_t36AA];
          real _f3DCF#1 = -0.1e1;
          tensor[2] a13DCE#1 = <tensor[2]>[_f3DCF,_t36AA];
          tensor[2] prod13DD3#1 = VMul<2>(kernX_3DC6,a13DCE);
          tensor[2] kevalX_d0_3DCC#3 = VAdd<2>(a03DCD,prod13DD3);
          tensor[2] projIx3DDD#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC3);
          real vdot3DDE#1 = VDot<2>(projIx3DDD,kevalX_d0_3DCC);
          tensor[2] projIx3DDF#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC3);
          real vdot3DE0#1 = VDot<2>(projIx3DDF,kevalX_d0_3DCC);
          tensor[2] projIx3DE1#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC3);
          real vdot3DE2#1 = VDot<2>(projIx3DE1,kevalX_d0_3DCC);
          tensor[3] mcol3DDC#1 = <tensor[3]>[vdot3DDE,vdot3DE0,vdot3DE2];
          goto JOIN3DEC
        JOIN3DEC:  preds = [ASSIGN3DEA,COND3708]
          tensor[3] mcol3DEB#3 = phi(mcol3DDC,mcol3704)
          real op1_e3_l_213DED#1 = RDiv(_t36AA,op1_e3_l_836B1);
          tensor[3] op1_e3_l_223DF2#1 = VScale<3>(op1_e3_l_213DED,step36A5);
          tensor[3] op1_e3_l_233DF5#1 = VNeg<3>(op1_e3_l_223DF2);
          real op1_e3_l_243DF8#2 = VDot<3>(op1_e3_l_233DF5,litwsp2494);
          real op1_e3_l_253DFB#1 = RMul(op1_e3_l_243DF8,op1_e3_l_243DF8);
          real op1_e3_l_263DFE#1 = RMul(phKd24A2,op1_e3_l_253DFB);
          real op1_e3_l_283E01#1 = RSub(rayN24AC,camNearVsp2490);
          real op1_e3_l_293E04#1 = RSub(camFarVsp2492,camNearVsp2490);
          real op1_e3_l_303E07#1 = RDiv(op1_e3_l_283E01,op1_e3_l_293E04);
          tensor[3] op1_e3_l_313E0A#1 = VSub<3>(mcFar248A,mcNear2488);
          tensor[3] op1_e3_l_323E0D#1 = VScale<3>(op1_e3_l_303E07,op1_e3_l_313E0A);
          real op1_e3_l_333E10#3 = RAdd(phKa24A0,op1_e3_l_263DFE);
          tensor[3] op1_e3_l_343E13#3 = VAdd<3>(mcNear2488,op1_e3_l_323E0D);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E13);
          real r3E18#1 = TensorIndex<tensor[3],[0]>(mcol3DEB);
          real r3E19#1 = RMul(op1_e3_l_333E10,r3E17);
          real r3E1A#1 = RMul(r3E19,r3E18);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E13);
          real r3E1C#1 = TensorIndex<tensor[3],[1]>(mcol3DEB);
          real r3E1D#1 = RMul(op1_e3_l_333E10,r3E1B);
          real r3E1E#1 = RMul(r3E1D,r3E1C);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E13);
          real r3E20#1 = TensorIndex<tensor[3],[2]>(mcol3DEB);
          real r3E21#1 = RMul(op1_e3_l_333E10,r3E1F);
          real r3E22#1 = RMul(r3E21,r3E20);
          tensor[3] op1_e3_l_353E16#1 = <tensor[3]>[r3E1A,r3E1E,r3E22];
          real r3E33#1 = RMul(phKs24A4,scomp36FE);
          real r3E34#3 = RMul(r3E33,_t36AA);
          tensor[3] op1_e3_l_363E31#1 = <tensor[3]>[r3E34,r3E34,r3E34];
          real op1_e3_l_373E42#2 = RSub(_t36AA,_t36D5);
          tensor[3] op1_e3_l_383E45#3 = VAdd<3>(op1_e3_l_353E16,op1_e3_l_363E31);
          real r3E49#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E45);
          real r3E4A#3 = RMul(transp24AA,op1_e3_l_373E42);
          real r3E4B#1 = RMul(r3E4A,r3E49);
          real r3E4C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E45);
          real r3E4D#1 = RMul(r3E4A,r3E4C);
          real r3E4E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E45);
          real r3E4F#1 = RMul(r3E4A,r3E4E);
          tensor[3] op1_e3_l_393E48#1 = <tensor[3]>[r3E4B,r3E4D,r3E4F];
          tensor[3] rgb3E59#2 = VAdd<3>(rgb24A8,op1_e3_l_393E48);
          real op1_e3_l_53E5C#1 = RSub(_t36AA,op1_e3_l_373E42);
          real transp3E5F#2 = RMul(transp24AA,op1_e3_l_53E5C);
          bool _t3E62#1 = LT<real>(transp3E5F,transp0247C);
          if _t3E62 then goto SAVE3E65 else goto JOIN3E6A
        SAVE3E65:  preds = [COND3E64]
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = _t36A8;
          stabilize
          goto JOIN3E6A
        JOIN3E6A:  preds = [*STABILIZE3E68,COND3E64]
          real transp3E69#1 = phi(transp3E5F)
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = transp3E69;
          active
        ASSIGN4C28:  preds = [COND3D94]
          int ix3E71#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,n3D8E);
          int offp3E73#3 = IMul(ilit371A,ix3E71);
          real v0_3E74#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E73);
          int addRes3E76#1 = IAdd(n3D8E,ilit3714);
          int ix3E77#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,addRes3E76);
          int offp3E78#3 = IMul(ilit371A,ix3E77);
          real v1_3E79#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E78);
          tensor[2] v_3E7A#1 = <tensor[2]>[v0_3E74,v1_3E79];
          int offp3E7B#1 = IAdd(offp3E73,ilit3714);
          real v0_3E7C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7B);
          int offp3E7D#1 = IAdd(offp3E78,ilit3714);
          real v1_3E7E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7D);
          tensor[2] v_3E7F#1 = <tensor[2]>[v0_3E7C,v1_3E7E];
          int offp3E81#1 = IAdd(offp3E73,ilit3717);
          real v0_3E82#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E81);
          int offp3E83#1 = IAdd(offp3E78,ilit3717);
          real v1_3E84#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E83);
          tensor[2] v_3E85#1 = <tensor[2]>[v0_3E82,v1_3E84];
          tensor[3,2] voxels3E86#1 = <tensor[3,2]>[v_3E7A,v_3E7F,v_3E85];
          goto JOIN3DC5
        ASSIGN3EA1:  preds = [COND2D6E]
          tensor[3,3] Mtransform3EA0#12 = Transform<IMAGE3D<float[]>>(umm2472);
          tensor[3] projParam3EA3#1 = ProjectLast<tensor[3,3],[0]>(Mtransform3EA0);
          real vdot3EA4#1 = VDot<3>(projParam3EA3,pos24B8);
          tensor[3] projParam3EA5#1 = ProjectLast<tensor[3,3],[1]>(Mtransform3EA0);
          real vdot3EA6#1 = VDot<3>(projParam3EA5,pos24B8);
          tensor[3] projParam3EA7#1 = ProjectLast<tensor[3,3],[2]>(Mtransform3EA0);
          real vdot3EA8#1 = VDot<3>(projParam3EA7,pos24B8);
          tensor[3] MxPos3EA2#1 = <tensor[3]>[vdot3EA4,vdot3EA6,vdot3EA8];
          tensor[3] Ttranslate3EB1#1 = Translate<IMAGE3D<float[]>>(umm2472);
          tensor[3] imgPos3EB3#2 = VAdd<3>(MxPos3EA2,Ttranslate3EB1);
          tensor[3] nd3EB6#2 = Floor<3>(imgPos3EB3);
          tensor[3] f3EB8#3 = VSub<3>(imgPos3EB3,nd3EB6);
          int[3] n3EBB#3 = RealToInt<3>(nd3EB6);
          real r3EBE#4 = TensorIndex<tensor[3,3],[0,0]>(Mtransform3EA0);
          real r3EBF#4 = TensorIndex<tensor[3,3],[1,0]>(Mtransform3EA0);
          real r3EC0#4 = TensorIndex<tensor[3,3],[2,0]>(Mtransform3EA0);
          tensor[3] tensor3EC1#4 = <tensor[3]>[r3EBE,r3EBF,r3EC0];
          real r3EC2#4 = TensorIndex<tensor[3,3],[0,1]>(Mtransform3EA0);
          real r3EC3#4 = TensorIndex<tensor[3,3],[1,1]>(Mtransform3EA0);
          real r3EC4#4 = TensorIndex<tensor[3,3],[2,1]>(Mtransform3EA0);
          tensor[3] tensor3EC5#4 = <tensor[3]>[r3EC2,r3EC3,r3EC4];
          real r3EC6#4 = TensorIndex<tensor[3,3],[0,2]>(Mtransform3EA0);
          real r3EC7#4 = TensorIndex<tensor[3,3],[1,2]>(Mtransform3EA0);
          real r3EC8#4 = TensorIndex<tensor[3,3],[2,2]>(Mtransform3EA0);
          tensor[3] tensor3EC9#4 = <tensor[3]>[r3EC6,r3EC7,r3EC8];
          int lit3ED8#3 = -1;
          int idx3EDA#1 = 0;
          int nX_3EDC#1 = Subscript<int[3]>(n3EBB,idx3EDA);
          int idx3EDE#19 = IAdd(nX_3EDC,lit3ED8);
          int idx3EE0#6 = 1;
          int nY_3EE2#1 = Subscript<int[3]>(n3EBB,idx3EE0);
          int idx3EE4#7 = IAdd(nY_3EE2,lit3ED8);
          int idx3EE6#6 = 2;
          int nZ_3EE8#1 = Subscript<int[3]>(n3EBB,idx3EE6);
          int idx3EEA#4 = IAdd(nZ_3EE8,lit3ED8);
          int ilit3EF5#20 = 300;
          int mulRes3EF9#4 = IMul(ilit3EF5,idx3EEA);
          int addRes3EFA#1 = IAdd(idx3EE4,mulRes3EF9);
          int mulRes3EFB#4 = IMul(ilit3EF5,addRes3EFA);
          int addRes3EFC#1 = IAdd(idx3EDE,mulRes3EFB);
          real v000_3EFD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFC);
          int addRes3EFE#16 = IAdd(idx3EDE,idx3EE0);
          int addRes3EFF#1 = IAdd(addRes3EFE,mulRes3EFB);
          real v001_3F00#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFF);
          int addRes3F01#16 = IAdd(idx3EDE,idx3EE6);
          int addRes3F02#1 = IAdd(addRes3F01,mulRes3EFB);
          real v002_3F03#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F02);
          int ilit3F04#3 = 3;
          int addRes3F05#16 = IAdd(idx3EDE,ilit3F04);
          int addRes3F06#1 = IAdd(addRes3F05,mulRes3EFB);
          real v003_3F07#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F06);
          tensor[4] v00_3F08#3 = <tensor[4]>[v000_3EFD,v001_3F00,v002_3F03,v003_3F07];
          int addRes3F09#4 = IAdd(idx3EE4,idx3EE0);
          int addRes3F0A#1 = IAdd(addRes3F09,mulRes3EF9);
          int mulRes3F0B#4 = IMul(ilit3EF5,addRes3F0A);
          int addRes3F0C#1 = IAdd(idx3EDE,mulRes3F0B);
          real v010_3F0D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0C);
          int addRes3F0E#1 = IAdd(addRes3EFE,mulRes3F0B);
          real v011_3F0F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0E);
          int addRes3F10#1 = IAdd(addRes3F01,mulRes3F0B);
          real v012_3F11#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F10);
          int addRes3F12#1 = IAdd(addRes3F05,mulRes3F0B);
          real v013_3F13#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F12);
          tensor[4] v01_3F14#3 = <tensor[4]>[v010_3F0D,v011_3F0F,v012_3F11,v013_3F13];
          int addRes3F15#4 = IAdd(idx3EE4,idx3EE6);
          int addRes3F16#1 = IAdd(addRes3F15,mulRes3EF9);
          int mulRes3F17#4 = IMul(ilit3EF5,addRes3F16);
          int addRes3F18#1 = IAdd(idx3EDE,mulRes3F17);
          real v020_3F19#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F18);
          int addRes3F1A#1 = IAdd(addRes3EFE,mulRes3F17);
          real v021_3F1B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1A);
          int addRes3F1C#1 = IAdd(addRes3F01,mulRes3F17);
          real v022_3F1D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1C);
          int addRes3F1E#1 = IAdd(addRes3F05,mulRes3F17);
          real v023_3F1F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1E);
          tensor[4] v02_3F20#3 = <tensor[4]>[v020_3F19,v021_3F1B,v022_3F1D,v023_3F1F];
          int addRes3F21#4 = IAdd(idx3EE4,ilit3F04);
          int addRes3F22#1 = IAdd(addRes3F21,mulRes3EF9);
          int mulRes3F23#4 = IMul(ilit3EF5,addRes3F22);
          int addRes3F24#1 = IAdd(idx3EDE,mulRes3F23);
          real v030_3F25#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F24);
          int addRes3F26#1 = IAdd(addRes3EFE,mulRes3F23);
          real v031_3F27#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F26);
          int addRes3F28#1 = IAdd(addRes3F01,mulRes3F23);
          real v032_3F29#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F28);
          int addRes3F2A#1 = IAdd(addRes3F05,mulRes3F23);
          real v033_3F2B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F2A);
          tensor[4] v03_3F2C#3 = <tensor[4]>[v030_3F25,v031_3F27,v032_3F29,v033_3F2B];
          int addRes3F2E#1 = IAdd(idx3EEA,idx3EE0);
          int mulRes3F2F#4 = IMul(ilit3EF5,addRes3F2E);
          int addRes3F30#1 = IAdd(idx3EE4,mulRes3F2F);
          int mulRes3F31#4 = IMul(ilit3EF5,addRes3F30);
          int addRes3F32#1 = IAdd(idx3EDE,mulRes3F31);
          real v100_3F33#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F32);
          int addRes3F34#1 = IAdd(addRes3EFE,mulRes3F31);
          real v101_3F35#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F34);
          int addRes3F36#1 = IAdd(addRes3F01,mulRes3F31);
          real v102_3F37#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F36);
          int addRes3F38#1 = IAdd(addRes3F05,mulRes3F31);
          real v103_3F39#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F38);
          tensor[4] v10_3F3A#3 = <tensor[4]>[v100_3F33,v101_3F35,v102_3F37,v103_3F39];
          int addRes3F3B#1 = IAdd(addRes3F09,mulRes3F2F);
          int mulRes3F3C#4 = IMul(ilit3EF5,addRes3F3B);
          int addRes3F3D#1 = IAdd(idx3EDE,mulRes3F3C);
          real v110_3F3E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3D);
          int addRes3F3F#1 = IAdd(addRes3EFE,mulRes3F3C);
          real v111_3F40#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3F);
          int addRes3F41#1 = IAdd(addRes3F01,mulRes3F3C);
          real v112_3F42#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F41);
          int addRes3F43#1 = IAdd(addRes3F05,mulRes3F3C);
          real v113_3F44#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F43);
          tensor[4] v11_3F45#3 = <tensor[4]>[v110_3F3E,v111_3F40,v112_3F42,v113_3F44];
          int addRes3F46#1 = IAdd(addRes3F15,mulRes3F2F);
          int mulRes3F47#4 = IMul(ilit3EF5,addRes3F46);
          int addRes3F48#1 = IAdd(idx3EDE,mulRes3F47);
          real v120_3F49#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F48);
          int addRes3F4A#1 = IAdd(addRes3EFE,mulRes3F47);
          real v121_3F4B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4A);
          int addRes3F4C#1 = IAdd(addRes3F01,mulRes3F47);
          real v122_3F4D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4C);
          int addRes3F4E#1 = IAdd(addRes3F05,mulRes3F47);
          real v123_3F4F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4E);
          tensor[4] v12_3F50#3 = <tensor[4]>[v120_3F49,v121_3F4B,v122_3F4D,v123_3F4F];
          int addRes3F51#1 = IAdd(addRes3F21,mulRes3F2F);
          int mulRes3F52#4 = IMul(ilit3EF5,addRes3F51);
          int addRes3F53#1 = IAdd(idx3EDE,mulRes3F52);
          real v130_3F54#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F53);
          int addRes3F55#1 = IAdd(addRes3EFE,mulRes3F52);
          real v131_3F56#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F55);
          int addRes3F57#1 = IAdd(addRes3F01,mulRes3F52);
          real v132_3F58#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F57);
          int addRes3F59#1 = IAdd(addRes3F05,mulRes3F52);
          real v133_3F5A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F59);
          tensor[4] v13_3F5B#3 = <tensor[4]>[v130_3F54,v131_3F56,v132_3F58,v133_3F5A];
          int addRes3F5D#1 = IAdd(idx3EEA,idx3EE6);
          int mulRes3F5E#4 = IMul(ilit3EF5,addRes3F5D);
          int addRes3F5F#1 = IAdd(idx3EE4,mulRes3F5E);
          int mulRes3F60#4 = IMul(ilit3EF5,addRes3F5F);
          int addRes3F61#1 = IAdd(idx3EDE,mulRes3F60);
          real v200_3F62#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F61);
          int addRes3F63#1 = IAdd(addRes3EFE,mulRes3F60);
          real v201_3F64#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F63);
          int addRes3F65#1 = IAdd(addRes3F01,mulRes3F60);
          real v202_3F66#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F65);
          int addRes3F67#1 = IAdd(addRes3F05,mulRes3F60);
          real v203_3F68#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F67);
          tensor[4] v20_3F69#3 = <tensor[4]>[v200_3F62,v201_3F64,v202_3F66,v203_3F68];
          int addRes3F6A#1 = IAdd(addRes3F09,mulRes3F5E);
          int mulRes3F6B#4 = IMul(ilit3EF5,addRes3F6A);
          int addRes3F6C#1 = IAdd(idx3EDE,mulRes3F6B);
          real v210_3F6D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6C);
          int addRes3F6E#1 = IAdd(addRes3EFE,mulRes3F6B);
          real v211_3F6F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6E);
          int addRes3F70#1 = IAdd(addRes3F01,mulRes3F6B);
          real v212_3F71#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F70);
          int addRes3F72#1 = IAdd(addRes3F05,mulRes3F6B);
          real v213_3F73#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F72);
          tensor[4] v21_3F74#3 = <tensor[4]>[v210_3F6D,v211_3F6F,v212_3F71,v213_3F73];
          int addRes3F75#1 = IAdd(addRes3F15,mulRes3F5E);
          int mulRes3F76#4 = IMul(ilit3EF5,addRes3F75);
          int addRes3F77#1 = IAdd(idx3EDE,mulRes3F76);
          real v220_3F78#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F77);
          int addRes3F79#1 = IAdd(addRes3EFE,mulRes3F76);
          real v221_3F7A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F79);
          int addRes3F7B#1 = IAdd(addRes3F01,mulRes3F76);
          real v222_3F7C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7B);
          int addRes3F7D#1 = IAdd(addRes3F05,mulRes3F76);
          real v223_3F7E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7D);
          tensor[4] v22_3F7F#3 = <tensor[4]>[v220_3F78,v221_3F7A,v222_3F7C,v223_3F7E];
          int addRes3F80#1 = IAdd(addRes3F21,mulRes3F5E);
          int mulRes3F81#4 = IMul(ilit3EF5,addRes3F80);
          int addRes3F82#1 = IAdd(idx3EDE,mulRes3F81);
          real v230_3F83#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F82);
          int addRes3F84#1 = IAdd(addRes3EFE,mulRes3F81);
          real v231_3F85#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F84);
          int addRes3F86#1 = IAdd(addRes3F01,mulRes3F81);
          real v232_3F87#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F86);
          int addRes3F88#1 = IAdd(addRes3F05,mulRes3F81);
          real v233_3F89#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F88);
          tensor[4] v23_3F8A#3 = <tensor[4]>[v230_3F83,v231_3F85,v232_3F87,v233_3F89];
          int addRes3F8C#1 = IAdd(idx3EEA,ilit3F04);
          int mulRes3F8D#4 = IMul(ilit3EF5,addRes3F8C);
          int addRes3F8E#1 = IAdd(idx3EE4,mulRes3F8D);
          int mulRes3F8F#4 = IMul(ilit3EF5,addRes3F8E);
          int addRes3F90#1 = IAdd(idx3EDE,mulRes3F8F);
          real v300_3F91#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F90);
          int addRes3F92#1 = IAdd(addRes3EFE,mulRes3F8F);
          real v301_3F93#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F92);
          int addRes3F94#1 = IAdd(addRes3F01,mulRes3F8F);
          real v302_3F95#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F94);
          int addRes3F96#1 = IAdd(addRes3F05,mulRes3F8F);
          real v303_3F97#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F96);
          tensor[4] v30_3F98#3 = <tensor[4]>[v300_3F91,v301_3F93,v302_3F95,v303_3F97];
          int addRes3F99#1 = IAdd(addRes3F09,mulRes3F8D);
          int mulRes3F9A#4 = IMul(ilit3EF5,addRes3F99);
          int addRes3F9B#1 = IAdd(idx3EDE,mulRes3F9A);
          real v310_3F9C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9B);
          int addRes3F9D#1 = IAdd(addRes3EFE,mulRes3F9A);
          real v311_3F9E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9D);
          int addRes3F9F#1 = IAdd(addRes3F01,mulRes3F9A);
          real v312_3FA0#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9F);
          int addRes3FA1#1 = IAdd(addRes3F05,mulRes3F9A);
          real v313_3FA2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA1);
          tensor[4] v31_3FA3#3 = <tensor[4]>[v310_3F9C,v311_3F9E,v312_3FA0,v313_3FA2];
          int addRes3FA4#1 = IAdd(addRes3F15,mulRes3F8D);
          int mulRes3FA5#4 = IMul(ilit3EF5,addRes3FA4);
          int addRes3FA6#1 = IAdd(idx3EDE,mulRes3FA5);
          real v320_3FA7#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA6);
          int addRes3FA8#1 = IAdd(addRes3EFE,mulRes3FA5);
          real v321_3FA9#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA8);
          int addRes3FAA#1 = IAdd(addRes3F01,mulRes3FA5);
          real v322_3FAB#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAA);
          int addRes3FAC#1 = IAdd(addRes3F05,mulRes3FA5);
          real v323_3FAD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAC);
          tensor[4] v32_3FAE#3 = <tensor[4]>[v320_3FA7,v321_3FA9,v322_3FAB,v323_3FAD];
          int addRes3FAF#1 = IAdd(addRes3F21,mulRes3F8D);
          int mulRes3FB0#4 = IMul(ilit3EF5,addRes3FAF);
          int addRes3FB1#1 = IAdd(idx3EDE,mulRes3FB0);
          real v330_3FB2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB1);
          int addRes3FB3#1 = IAdd(addRes3EFE,mulRes3FB0);
          real v331_3FB4#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB3);
          int addRes3FB5#1 = IAdd(addRes3F01,mulRes3FB0);
          real v332_3FB6#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB5);
          int addRes3FB7#1 = IAdd(addRes3F05,mulRes3FB0);
          real v333_3FB8#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB7);
          tensor[4] v33_3FB9#3 = <tensor[4]>[v330_3FB2,v331_3FB4,v332_3FB6,v333_3FB8];
          real vZ_408A#4 = VIndex<3,2>(f3EB8);
          real rlit4091#9 = 0.1e1;
          real idx4092#1 = RAdd(vZ_408A,rlit4091);
          real idx4090#1 = RSub(vZ_408A,rlit4091);
          real rlit408D#6 = 0.2e1;
          real idx408E#1 = RSub(vZ_408A,rlit408D);
          tensor[4] kernZ_408C#6 = <tensor[4]>[idx4092,vZ_408A,idx4090,idx408E];
          real _f40AB#2 = 0.133333333333e1;
          real _f40AC#2 = 0.666666666667e0;
          tensor[4] a0409B#3 = <tensor[4]>[_f40AB,_f40AC,_f40AC,_f40AB];
          real _f40A7#3 = -0.2e1;
          real _f40A8#2 = 0.e0;
          tensor[4] a1409C#6 = <tensor[4]>[_f40A7,_f40A8,_f40A8,rlit408D];
          real _f40A4#3 = -0.1e1;
          tensor[4] a2409D#3 = <tensor[4]>[rlit4091,_f40A4,_f40A4,rlit4091];
          real _f409F#1 = -0.166666666667e0;
          real _f40A0#2 = 0.5e0;
          real _f40A1#2 = -0.5e0;
          real _f40A2#1 = 0.166666666667e0;
          tensor[4] a3409E#3 = <tensor[4]>[_f409F,_f40A0,_f40A1,_f40A2];
          tensor[4] prod340AF#1 = VMul<4>(kernZ_408C,a3409E);
          tensor[4] sum240B0#1 = VAdd<4>(a2409D,prod340AF);
          tensor[4] prod240B1#1 = VMul<4>(kernZ_408C,sum240B0);
          tensor[4] sum140B2#1 = VAdd<4>(a1409C,prod240B1);
          tensor[4] prod140B3#1 = VMul<4>(kernZ_408C,sum140B2);
          tensor[4] kevalZ_d0_409A#5 = VAdd<4>(a0409B,prod140B3);
          tensor[4] a140D0#6 = <tensor[4]>[rlit408D,_f40A7,_f40A7,rlit408D];
          real _f40D3#1 = 0.15e1;
          real _f40D4#1 = -0.15e1;
          tensor[4] a240D1#3 = <tensor[4]>[_f40A1,_f40D3,_f40D4,_f40A0];
          tensor[4] prod240DE#1 = VMul<4>(kernZ_408C,a240D1);
          tensor[4] sum140DF#1 = VAdd<4>(a140D0,prod240DE);
          tensor[4] prod140E0#1 = VMul<4>(kernZ_408C,sum140DF);
          tensor[4] kevalZ_d1_40CE#3 = VAdd<4>(a1409C,prod140E0);
          real _f40F8#1 = 0.3e1;
          real _f40F9#1 = -0.3e1;
          tensor[4] a140F6#3 = <tensor[4]>[_f40A4,_f40F8,_f40F9,rlit4091];
          tensor[4] prod140FF#1 = VMul<4>(kernZ_408C,a140F6);
          tensor[4] kevalZ_d2_40F4#1 = VAdd<4>(a140D0,prod140FF);
          real vY_410E#4 = VIndex<3,1>(f3EB8);
          real idx4116#1 = RAdd(vY_410E,rlit4091);
          real idx4114#1 = RSub(vY_410E,rlit4091);
          real idx4112#1 = RSub(vY_410E,rlit408D);
          tensor[4] kernY_4110#6 = <tensor[4]>[idx4116,vY_410E,idx4114,idx4112];
          tensor[4] prod34133#1 = VMul<4>(kernY_4110,a3409E);
          tensor[4] sum24134#1 = VAdd<4>(a2409D,prod34133);
          tensor[4] prod24135#1 = VMul<4>(kernY_4110,sum24134);
          tensor[4] sum14136#1 = VAdd<4>(a1409C,prod24135);
          tensor[4] prod14137#1 = VMul<4>(kernY_4110,sum14136);
          tensor[4] kevalY_d0_411E#12 = VAdd<4>(a0409B,prod14137);
          tensor[4] prod24162#1 = VMul<4>(kernY_4110,a240D1);
          tensor[4] sum14163#1 = VAdd<4>(a140D0,prod24162);
          tensor[4] prod14164#1 = VMul<4>(kernY_4110,sum14163);
          tensor[4] kevalY_d1_4152#8 = VAdd<4>(a1409C,prod14164);
          tensor[4] prod14183#1 = VMul<4>(kernY_4110,a140F6);
          tensor[4] kevalY_d2_4178#4 = VAdd<4>(a140D0,prod14183);
          real vX_4192#4 = VIndex<3,0>(f3EB8);
          real idx419A#1 = RAdd(vX_4192,rlit4091);
          real idx4198#1 = RSub(vX_4192,rlit4091);
          real idx4196#1 = RSub(vX_4192,rlit408D);
          tensor[4] kernX_4194#6 = <tensor[4]>[idx419A,vX_4192,idx4198,idx4196];
          tensor[4] prod341B7#1 = VMul<4>(kernX_4194,a3409E);
          tensor[4] sum241B8#1 = VAdd<4>(a2409D,prod341B7);
          tensor[4] prod241B9#1 = VMul<4>(kernX_4194,sum241B8);
          tensor[4] sum141BA#1 = VAdd<4>(a1409C,prod241B9);
          tensor[4] prod141BB#1 = VMul<4>(kernX_4194,sum141BA);
          tensor[4] kevalX_d0_41A2#16 = VAdd<4>(a0409B,prod141BB);
          tensor[4] prod241E6#1 = VMul<4>(kernX_4194,a240D1);
          tensor[4] sum141E7#1 = VAdd<4>(a140D0,prod241E6);
          tensor[4] prod141E8#1 = VMul<4>(kernX_4194,sum141E7);
          tensor[4] kevalX_d1_41D6#16 = VAdd<4>(a1409C,prod141E8);
          tensor[4] prod14207#1 = VMul<4>(kernX_4194,a140F6);
          tensor[4] kevalX_d2_41FC#16 = VAdd<4>(a140D0,prod14207);
          real vdot4227#1 = VDot<4>(kevalX_d2_41FC,v00_3F08);
          real vdot4228#1 = VDot<4>(kevalX_d2_41FC,v01_3F14);
          real vdot4229#1 = VDot<4>(kevalX_d2_41FC,v02_3F20);
          real vdot422A#1 = VDot<4>(kevalX_d2_41FC,v03_3F2C);
          tensor[4] cons_422B#1 = <tensor[4]>[vdot4227,vdot4228,vdot4229,vdot422A];
          real vdot422C#1 = VDot<4>(kevalX_d2_41FC,v10_3F3A);
          real vdot422D#1 = VDot<4>(kevalX_d2_41FC,v11_3F45);
          real vdot422E#1 = VDot<4>(kevalX_d2_41FC,v12_3F50);
          real vdot422F#1 = VDot<4>(kevalX_d2_41FC,v13_3F5B);
          tensor[4] cons_4230#1 = <tensor[4]>[vdot422C,vdot422D,vdot422E,vdot422F];
          real vdot4231#1 = VDot<4>(kevalX_d2_41FC,v20_3F69);
          real vdot4232#1 = VDot<4>(kevalX_d2_41FC,v21_3F74);
          real vdot4233#1 = VDot<4>(kevalX_d2_41FC,v22_3F7F);
          real vdot4234#1 = VDot<4>(kevalX_d2_41FC,v23_3F8A);
          tensor[4] cons_4235#1 = <tensor[4]>[vdot4231,vdot4232,vdot4233,vdot4234];
          real vdot4236#1 = VDot<4>(kevalX_d2_41FC,v30_3F98);
          real vdot4237#1 = VDot<4>(kevalX_d2_41FC,v31_3FA3);
          real vdot4238#1 = VDot<4>(kevalX_d2_41FC,v32_3FAE);
          real vdot4239#1 = VDot<4>(kevalX_d2_41FC,v33_3FB9);
          tensor[4] cons_423A#1 = <tensor[4]>[vdot4236,vdot4237,vdot4238,vdot4239];
          real vdot423B#1 = VDot<4>(kevalY_d0_411E,cons_422B);
          real vdot423C#1 = VDot<4>(kevalY_d0_411E,cons_4230);
          real vdot423D#1 = VDot<4>(kevalY_d0_411E,cons_4235);
          real vdot423E#1 = VDot<4>(kevalY_d0_411E,cons_423A);
          tensor[4] cons_423F#1 = <tensor[4]>[vdot423B,vdot423C,vdot423D,vdot423E];
          real vdot4240#1 = VDot<4>(kevalZ_d0_409A,cons_423F);
          real vdot4241#1 = VDot<4>(kevalX_d1_41D6,v00_3F08);
          real vdot4242#1 = VDot<4>(kevalX_d1_41D6,v01_3F14);
          real vdot4243#1 = VDot<4>(kevalX_d1_41D6,v02_3F20);
          real vdot4244#1 = VDot<4>(kevalX_d1_41D6,v03_3F2C);
          tensor[4] cons_4245#2 = <tensor[4]>[vdot4241,vdot4242,vdot4243,vdot4244];
          real vdot4246#1 = VDot<4>(kevalX_d1_41D6,v10_3F3A);
          real vdot4247#1 = VDot<4>(kevalX_d1_41D6,v11_3F45);
          real vdot4248#1 = VDot<4>(kevalX_d1_41D6,v12_3F50);
          real vdot4249#1 = VDot<4>(kevalX_d1_41D6,v13_3F5B);
          tensor[4] cons_424A#2 = <tensor[4]>[vdot4246,vdot4247,vdot4248,vdot4249];
          real vdot424B#1 = VDot<4>(kevalX_d1_41D6,v20_3F69);
          real vdot424C#1 = VDot<4>(kevalX_d1_41D6,v21_3F74);
          real vdot424D#1 = VDot<4>(kevalX_d1_41D6,v22_3F7F);
          real vdot424E#1 = VDot<4>(kevalX_d1_41D6,v23_3F8A);
          tensor[4] cons_424F#2 = <tensor[4]>[vdot424B,vdot424C,vdot424D,vdot424E];
          real vdot4250#1 = VDot<4>(kevalX_d1_41D6,v30_3F98);
          real vdot4251#1 = VDot<4>(kevalX_d1_41D6,v31_3FA3);
          real vdot4252#1 = VDot<4>(kevalX_d1_41D6,v32_3FAE);
          real vdot4253#1 = VDot<4>(kevalX_d1_41D6,v33_3FB9);
          tensor[4] cons_4254#2 = <tensor[4]>[vdot4250,vdot4251,vdot4252,vdot4253];
          real vdot4255#1 = VDot<4>(kevalY_d1_4152,cons_4245);
          real vdot4256#1 = VDot<4>(kevalY_d1_4152,cons_424A);
          real vdot4257#1 = VDot<4>(kevalY_d1_4152,cons_424F);
          real vdot4258#1 = VDot<4>(kevalY_d1_4152,cons_4254);
          tensor[4] cons_4259#1 = <tensor[4]>[vdot4255,vdot4256,vdot4257,vdot4258];
          real vdot425A#2 = VDot<4>(kevalZ_d0_409A,cons_4259);
          real vdot425B#1 = VDot<4>(kevalY_d0_411E,cons_4245);
          real vdot425C#1 = VDot<4>(kevalY_d0_411E,cons_424A);
          real vdot425D#1 = VDot<4>(kevalY_d0_411E,cons_424F);
          real vdot425E#1 = VDot<4>(kevalY_d0_411E,cons_4254);
          tensor[4] cons_425F#2 = <tensor[4]>[vdot425B,vdot425C,vdot425D,vdot425E];
          real vdot4260#2 = VDot<4>(kevalZ_d1_40CE,cons_425F);
          tensor[3] tensor4261#3 = <tensor[3]>[vdot4240,vdot425A,vdot4260];
          real vdot4262#1 = VDot<4>(kevalX_d0_41A2,v00_3F08);
          real vdot4263#1 = VDot<4>(kevalX_d0_41A2,v01_3F14);
          real vdot4264#1 = VDot<4>(kevalX_d0_41A2,v02_3F20);
          real vdot4265#1 = VDot<4>(kevalX_d0_41A2,v03_3F2C);
          tensor[4] cons_4266#3 = <tensor[4]>[vdot4262,vdot4263,vdot4264,vdot4265];
          real vdot4267#1 = VDot<4>(kevalX_d0_41A2,v10_3F3A);
          real vdot4268#1 = VDot<4>(kevalX_d0_41A2,v11_3F45);
          real vdot4269#1 = VDot<4>(kevalX_d0_41A2,v12_3F50);
          real vdot426A#1 = VDot<4>(kevalX_d0_41A2,v13_3F5B);
          tensor[4] cons_426B#3 = <tensor[4]>[vdot4267,vdot4268,vdot4269,vdot426A];
          real vdot426C#1 = VDot<4>(kevalX_d0_41A2,v20_3F69);
          real vdot426D#1 = VDot<4>(kevalX_d0_41A2,v21_3F74);
          real vdot426E#1 = VDot<4>(kevalX_d0_41A2,v22_3F7F);
          real vdot426F#1 = VDot<4>(kevalX_d0_41A2,v23_3F8A);
          tensor[4] cons_4270#3 = <tensor[4]>[vdot426C,vdot426D,vdot426E,vdot426F];
          real vdot4271#1 = VDot<4>(kevalX_d0_41A2,v30_3F98);
          real vdot4272#1 = VDot<4>(kevalX_d0_41A2,v31_3FA3);
          real vdot4273#1 = VDot<4>(kevalX_d0_41A2,v32_3FAE);
          real vdot4274#1 = VDot<4>(kevalX_d0_41A2,v33_3FB9);
          tensor[4] cons_4275#3 = <tensor[4]>[vdot4271,vdot4272,vdot4273,vdot4274];
          real vdot4276#1 = VDot<4>(kevalY_d2_4178,cons_4266);
          real vdot4277#1 = VDot<4>(kevalY_d2_4178,cons_426B);
          real vdot4278#1 = VDot<4>(kevalY_d2_4178,cons_4270);
          real vdot4279#1 = VDot<4>(kevalY_d2_4178,cons_4275);
          tensor[4] cons_427A#1 = <tensor[4]>[vdot4276,vdot4277,vdot4278,vdot4279];
          real vdot427B#1 = VDot<4>(kevalZ_d0_409A,cons_427A);
          real vdot427C#1 = VDot<4>(kevalY_d1_4152,cons_4266);
          real vdot427D#1 = VDot<4>(kevalY_d1_4152,cons_426B);
          real vdot427E#1 = VDot<4>(kevalY_d1_4152,cons_4270);
          real vdot427F#1 = VDot<4>(kevalY_d1_4152,cons_4275);
          tensor[4] cons_4280#2 = <tensor[4]>[vdot427C,vdot427D,vdot427E,vdot427F];
          real vdot4281#2 = VDot<4>(kevalZ_d1_40CE,cons_4280);
          tensor[3] tensor4282#3 = <tensor[3]>[vdot425A,vdot427B,vdot4281];
          real vdot4283#1 = VDot<4>(kevalY_d0_411E,cons_4266);
          real vdot4284#1 = VDot<4>(kevalY_d0_411E,cons_426B);
          real vdot4285#1 = VDot<4>(kevalY_d0_411E,cons_4270);
          real vdot4286#1 = VDot<4>(kevalY_d0_411E,cons_4275);
          tensor[4] cons_4287#2 = <tensor[4]>[vdot4283,vdot4284,vdot4285,vdot4286];
          real vdot4288#1 = VDot<4>(kevalZ_d2_40F4,cons_4287);
          tensor[3] tensor4289#3 = <tensor[3]>[vdot4260,vdot4281,vdot4288];
          real vdot4302#3 = VDot<3>(tensor4261,tensor3EC1);
          real vdot4304#3 = VDot<3>(tensor4261,tensor3EC5);
          real vdot4306#3 = VDot<3>(tensor4261,tensor3EC9);
          real vdot4309#3 = VDot<3>(tensor4282,tensor3EC1);
          real vdot430A#3 = VDot<3>(tensor4282,tensor3EC5);
          real vdot430B#3 = VDot<3>(tensor4282,tensor3EC9);
          real vdot430E#3 = VDot<3>(tensor4289,tensor3EC1);
          real vdot430F#3 = VDot<3>(tensor4289,tensor3EC5);
          real vdot4310#3 = VDot<3>(tensor4289,tensor3EC9);
          real r4329#1 = RMul(r3EBE,vdot4302);
          real r432C#1 = RMul(r3EBF,vdot4309);
          real r432F#1 = RMul(r3EC0,vdot430E);
          real r4330#1 = RAdd(r4329,r432C);
          real r4331#1 = RAdd(r4330,r432F);
          real r4333#1 = RMul(r3EBE,vdot4304);
          real r4335#1 = RMul(r3EBF,vdot430A);
          real r4337#1 = RMul(r3EC0,vdot430F);
          real r4338#1 = RAdd(r4333,r4335);
          real r4339#1 = RAdd(r4338,r4337);
          real r433B#1 = RMul(r3EBE,vdot4306);
          real r433D#1 = RMul(r3EBF,vdot430B);
          real r433F#1 = RMul(r3EC0,vdot4310);
          real r4340#1 = RAdd(r433B,r433D);
          real r4341#1 = RAdd(r4340,r433F);
          tensor[3] tensor4342#1 = <tensor[3]>[r4331,r4339,r4341];
          real r4344#1 = RMul(r3EC2,vdot4302);
          real r4346#1 = RMul(r3EC3,vdot4309);
          real r4348#1 = RMul(r3EC4,vdot430E);
          real r4349#1 = RAdd(r4344,r4346);
          real r434A#1 = RAdd(r4349,r4348);
          real r434B#1 = RMul(r3EC2,vdot4304);
          real r434C#1 = RMul(r3EC3,vdot430A);
          real r434D#1 = RMul(r3EC4,vdot430F);
          real r434E#1 = RAdd(r434B,r434C);
          real r434F#1 = RAdd(r434E,r434D);
          real r4350#1 = RMul(r3EC2,vdot4306);
          real r4351#1 = RMul(r3EC3,vdot430B);
          real r4352#1 = RMul(r3EC4,vdot4310);
          real r4353#1 = RAdd(r4350,r4351);
          real r4354#1 = RAdd(r4353,r4352);
          tensor[3] tensor4355#1 = <tensor[3]>[r434A,r434F,r4354];
          real r4357#1 = RMul(r3EC6,vdot4302);
          real r4359#1 = RMul(r3EC7,vdot4309);
          real r435B#1 = RMul(r3EC8,vdot430E);
          real r435C#1 = RAdd(r4357,r4359);
          real r435D#1 = RAdd(r435C,r435B);
          real r435E#1 = RMul(r3EC6,vdot4304);
          real r435F#1 = RMul(r3EC7,vdot430A);
          real r4360#1 = RMul(r3EC8,vdot430F);
          real r4361#1 = RAdd(r435E,r435F);
          real r4362#1 = RAdd(r4361,r4360);
          real r4363#1 = RMul(r3EC6,vdot4306);
          real r4364#1 = RMul(r3EC7,vdot430B);
          real r4365#1 = RMul(r3EC8,vdot4310);
          real r4366#1 = RAdd(r4363,r4364);
          real r4367#1 = RAdd(r4366,r4365);
          tensor[3] tensor4368#1 = <tensor[3]>[r435D,r4362,r4367];
          tensor[3,3] _t4326#1 = <tensor[3,3]>[tensor4342,tensor4355,tensor4368];
          (real[3] evals43AD#2,tensor[3][3] E43AE#2) = EigenVecs3x3(_t4326);
          tensor[3] _t43B0#6 = Subscript<tensor[3][3]>(E43AE,idx3EE6);
          real _t43B2#9 = Subscript<real[3]>(evals43AD,idx3EE6);
          tensor[3] _t43B4#6 = Subscript<tensor[3][3]>(E43AE,idx3EE0);
          real _t43B6#9 = Subscript<real[3]>(evals43AD,idx3EE0);
          real r43B9#1 = TensorIndex<tensor[3],[0]>(_t43B0);
          tensor[3] binopV43BA#3 = VScale<3>(r43B9,_t43B0);
          real r43BB#1 = TensorIndex<tensor[3],[1]>(_t43B0);
          tensor[3] binopV43BC#3 = VScale<3>(r43BB,_t43B0);
          real r43BD#1 = TensorIndex<tensor[3],[2]>(_t43B0);
          tensor[3] binopV43BE#3 = VScale<3>(r43BD,_t43B0);
          real r43C8#1 = TensorIndex<tensor[3],[0]>(_t43B4);
          tensor[3] binopV43C9#3 = VScale<3>(r43C8,_t43B4);
          real r43CA#1 = TensorIndex<tensor[3],[1]>(_t43B4);
          tensor[3] binopV43CB#3 = VScale<3>(r43CA,_t43B4);
          real r43CC#1 = TensorIndex<tensor[3],[2]>(_t43B4);
          tensor[3] binopV43CD#3 = VScale<3>(r43CC,_t43B4);
          real r43D7#1 = VIndex<3,0>(binopV43BA);
          real r43D8#1 = RDiv(r43D7,_t43B2);
          real r43D9#1 = VIndex<3,1>(binopV43BA);
          real r43DA#1 = RDiv(r43D9,_t43B2);
          real r43DB#1 = VIndex<3,2>(binopV43BA);
          real r43DC#1 = RDiv(r43DB,_t43B2);
          tensor[3] tensor43DD#1 = <tensor[3]>[r43D8,r43DA,r43DC];
          real r43DE#1 = VIndex<3,0>(binopV43BC);
          real r43DF#1 = RDiv(r43DE,_t43B2);
          real r43E0#1 = VIndex<3,1>(binopV43BC);
          real r43E1#1 = RDiv(r43E0,_t43B2);
          real r43E2#1 = VIndex<3,2>(binopV43BC);
          real r43E3#1 = RDiv(r43E2,_t43B2);
          tensor[3] tensor43E4#1 = <tensor[3]>[r43DF,r43E1,r43E3];
          real r43E5#1 = VIndex<3,0>(binopV43BE);
          real r43E6#1 = RDiv(r43E5,_t43B2);
          real r43E7#1 = VIndex<3,1>(binopV43BE);
          real r43E8#1 = RDiv(r43E7,_t43B2);
          real r43E9#1 = VIndex<3,2>(binopV43BE);
          real r43EA#1 = RDiv(r43E9,_t43B2);
          tensor[3] tensor43EB#1 = <tensor[3]>[r43E6,r43E8,r43EA];
          real r4404#1 = VIndex<3,0>(binopV43C9);
          real r4405#1 = RDiv(r4404,_t43B6);
          real r4406#1 = VIndex<3,1>(binopV43C9);
          real r4407#1 = RDiv(r4406,_t43B6);
          real r4408#1 = VIndex<3,2>(binopV43C9);
          real r4409#1 = RDiv(r4408,_t43B6);
          tensor[3] tensor440A#1 = <tensor[3]>[r4405,r4407,r4409];
          real r440B#1 = VIndex<3,0>(binopV43CB);
          real r440C#1 = RDiv(r440B,_t43B6);
          real r440D#1 = VIndex<3,1>(binopV43CB);
          real r440E#1 = RDiv(r440D,_t43B6);
          real r440F#1 = VIndex<3,2>(binopV43CB);
          real r4410#1 = RDiv(r440F,_t43B6);
          tensor[3] tensor4411#1 = <tensor[3]>[r440C,r440E,r4410];
          real r4412#1 = VIndex<3,0>(binopV43CD);
          real r4413#1 = RDiv(r4412,_t43B6);
          real r4414#1 = VIndex<3,1>(binopV43CD);
          real r4415#1 = RDiv(r4414,_t43B6);
          real r4416#1 = VIndex<3,2>(binopV43CD);
          real r4417#1 = RDiv(r4416,_t43B6);
          tensor[3] tensor4418#1 = <tensor[3]>[r4413,r4415,r4417];
          tensor[3] v4433#1 = VAdd<3>(tensor43DD,tensor440A);
          tensor[3] v4436#1 = VAdd<3>(tensor43E4,tensor4411);
          tensor[3] v4439#1 = VAdd<3>(tensor43EB,tensor4418);
          real vdot4613#1 = VDot<4>(kevalZ_d0_409A,cons_425F);
          real vdot462D#1 = VDot<4>(kevalZ_d0_409A,cons_4280);
          real vdot4633#1 = VDot<4>(kevalZ_d1_40CE,cons_4287);
          tensor[3] TPP45E9#3 = <tensor[3]>[vdot4613,vdot462D,vdot4633];
          real vdot4682#1 = VDot<3>(TPP45E9,tensor3EC1);
          real vdot4684#1 = VDot<3>(TPP45E9,tensor3EC5);
          real vdot4686#1 = VDot<3>(TPP45E9,tensor3EC9);
          tensor[3] probe_l_144680#3 = <tensor[3]>[vdot4682,vdot4684,vdot4686];
          tensor[3] negV4691#1 = VNeg<3>(v4433);
          tensor[3] negV4693#1 = VNeg<3>(v4436);
          tensor[3] negV4695#1 = VNeg<3>(v4439);
          real vdot469F#1 = VDot<3>(negV4691,probe_l_144680);
          real vdot46A1#1 = VDot<3>(negV4693,probe_l_144680);
          real vdot46A3#1 = VDot<3>(negV4695,probe_l_144680);
          tensor[3] _t36A6#1 = <tensor[3]>[vdot469F,vdot46A1,vdot46A3];
          goto JOIN36A7
        ASSIGN46AC:  preds = [COND2D5A]
          bool _t2D5E#1 = false;
          goto JOIN2D5F
        ASSIGN46AD:  preds = [COND2D55]
          bool _t2D61#1 = false;
          goto JOIN2D62
        ASSIGN46AE:  preds = [COND24C1]
          bool _t2D64#1 = false;
          goto JOIN2D65
    end update
    method stabilize
        ENTRY46AF:  preds = []
          tensor[4] rgba46B0#1 = self.rgba;
          tensor[3] rgb46B2#3 = self.rgb;
          real transp46B4#2 = self.transp;
          real _t46B6#2 = 0.1e1;
          bool _t46B8#1 = LT<real>(transp46B4,_t46B6);
          if _t46B8 then goto ASSIGN46BD else goto JOIN46D0
        ASSIGN46BD:  preds = [COND46BA]
          real aa46BB#4 = RSub(_t46B6,transp46B4);
          real _t46BE#1 = VIndex<3,0>(rgb46B2);
          real _t46C0#1 = RDiv(_t46BE,aa46BB);
          real _t46C3#1 = VIndex<3,1>(rgb46B2);
          real _t46C5#1 = RDiv(_t46C3,aa46BB);
          real _t46C8#1 = VIndex<3,2>(rgb46B2);
          real _t46CA#1 = RDiv(_t46C8,aa46BB);
          tensor[4] rgba46CD#1 = <tensor[4]>[_t46C0,_t46C5,_t46CA,aa46BB];
          goto JOIN46D0
        JOIN46D0:  preds = [ASSIGN46CE,COND46BA]
          tensor[4] rgba46CF#1 = phi(rgba46CD,rgba46B0)
          self.rgba = rgba46CF;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY46D3:  preds = []
      int iresU46D4#1 = globals.iresU2187;
      int iresV46D6#1 = globals.iresV2188;
      int _t46D8#2 = 0;
      int _t46DA#2 = 1;
      int _t46DC#1 = ISub(iresV46D6,_t46DA);
      int[] _t46DE#1 = Range(_t46D8,_t46DC);
    FOREACH46E1:  preds = [ASSIGN46DF,NEXT46EA]
      foreach (vi46E0 in _t46DE) on exit goto RETURN46EB
      int _t46E2#1 = ISub(iresU46D4,_t46DA);
      int[] _t46E4#1 = Range(_t46D8,_t46E2);
    FOREACH46E7:  preds = [ASSIGN46E5,NEXT46E9]
      foreach (ui46E6 in _t46E4) on exit goto NEXT46EA
      new ray(ui46E6,vi46E0);
      goto FOREACH46E7
    NEXT46EA:  preds = [FOREACH46E7]
      goto FOREACH46E1
    RETURN46EB:  preds = [FOREACH46E1]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block217B (block) = <no-default>
  input 0space0509_intermedateGlobal217C (space) = <no-default>
  input 0U050B_intermedateGlobal217D (U) = <no-default>
  input cellChoice217E (cellChoice) = <no-default>
  input cmap217F (cmap) = image("cmap.nrrd")
  input camEye2180 (camEye) = <default>
  input camAt2181 (camAt) = <default>
  input camUp2182 (camUp) = <default>
  input camNear2183 (camNear) = <default>
  input camFar2184 (camFar) = <default>
  input camFOV2185 (camFOV) = <default>
  input camOrtho2186 (camOrtho) = <default>
  input iresU2187 (iresU) = <default>
  input iresV2188 (iresV) = <default>
  input rayStep2189 (rayStep) = <default>
  input refStep218A (refStep) = <default>
  input transp0218B (transp0) = <default>
  input thick218C (thick) = <default>
  input fStrTh218D (fStrTh) = <default>
  input fMaskTh218E (fMaskTh) = <default>
  input fBias218F (fBias) = <default>
  input maxAlpha2190 (maxAlpha) = <default>
  input light2191 (light) = <default>
  input phong2192 (phong) = <default>
  input mcNear2193 (mcNear) = <default>
  input mcFar2194 (mcFar) = <default>
  input litdir2195 (litdir) = <default>
  input cminmax2196 (cminmax) = <default>
  input analytical2197 (analytical) = <default>
  input umm2198 (umm) = image("data.nrrd")
  global tensor[3] camN2199
  global tensor[3] camU219A
  global tensor[3] camV219B
  global real camDist219C
  global real camVmax219D
  global real camUmax219E
  global real camNearVsp219F
  global real camFarVsp21A0
  global tensor[3] litwsp21A1
  global int _t21A2
  global femData:Space _tX21A3
  global femData:FemFunc _tXX21A4
## functions
## input initialization
  ENTRY21A7:  preds = []
    real _t21A8#13 = 0.e0;
    real _t21AA#1 = -0.2e1;
    tensor[3] camEye21AC#1 = <tensor[3]>[_t21A8,_t21AA,_t21A8];
    globals.camEye2180 = camEye21AC;
    tensor[3] camAt21AF#1 = <tensor[3]>[_t21A8,_t21A8,_t21A8];
    globals.camAt2181 = camAt21AF;
    real _t21B2#5 = 0.1e1;
    tensor[3] camUp21B4#1 = <tensor[3]>[_t21A8,_t21A8,_t21B2];
    globals.camUp2182 = camUp21B4;
    real camNear21B7#1 = -0.4e1;
    globals.camNear2183 = camNear21B7;
    real camFar21BA#1 = 0.4e1;
    globals.camFar2184 = camFar21BA;
    real camFOV21BD#1 = 0.1e2;
    globals.camFOV2185 = camFOV21BD;
    bool camOrtho21C0#2 = false;
    globals.camOrtho2186 = camOrtho21C0;
    int iresU21C3#2 = 100;
    globals.iresU2187 = iresU21C3;
    globals.iresV2188 = iresU21C3;
    real rayStep21C7#2 = 0.1e-3;
    globals.rayStep2189 = rayStep21C7;
    globals.refStep218A = rayStep21C7;
    real transp021CB#1 = 0.5e-2;
    globals.transp0218B = transp021CB;
    real thick21CE#1 = 0.1e-1;
    globals.thick218C = thick21CE;
    globals.fStrTh218D = _t21A8;
    globals.fMaskTh218E = _t21A8;
    real fBias21D3#2 = 0.1e0;
    globals.fBias218F = fBias21D3;
    globals.maxAlpha2190 = _t21B2;
    globals.light2191 = camOrtho21C0;
    real _t21D8#1 = 0.7e0;
    real _t21DA#1 = 0.2e0;
    real _t21DC#1 = 0.1e3;
    tensor[4] phong21DE#1 = <tensor[4]>[fBias21D3,_t21D8,_t21DA,_t21DC];
    globals.phong2192 = phong21DE;
    tensor[3] mcNear21E1#2 = <tensor[3]>[_t21B2,_t21B2,_t21B2];
    globals.mcNear2193 = mcNear21E1;
    globals.mcFar2194 = mcNear21E1;
    real _t21E5#1 = -0.1e1;
    tensor[3] litdir21E7#1 = <tensor[3]>[_t21A8,_t21E5,_t21A8];
    globals.litdir2195 = litdir21E7;
    tensor[2] cminmax21EA#1 = <tensor[2]>[_t21A8,_t21A8];
    globals.cminmax2196 = cminmax21EA;
    bool analytical21ED#1 = true;
    globals.analytical2197 = analytical21ED;
    return
## global-variable initialization
  ENTRY21F1:  preds = []
    femData:Mesh block21F2#3 = globals.block217B;
    femData:Space 0space0509_intermedateGlobal21F4#1 = globals.0space0509_intermedateGlobal217C;
    femData:FemFunc 0U050B_intermedateGlobal21F6#1 = globals.0U050B_intermedateGlobal217D;
    int cellChoice21F8#1 = globals.cellChoice217E;
    tensor[3] camEye21FC#1 = globals.camEye2180;
    tensor[3] camAt21FE#1 = globals.camAt2181;
    tensor[3] camUp2200#3 = globals.camUp2182;
    real camNear2202#1 = globals.camNear2183;
    real camFar2204#1 = globals.camFar2184;
    real camFOV2206#1 = globals.camFOV2185;
    int iresU2208#1 = globals.iresU2187;
    int iresV220A#1 = globals.iresV2188;
    tensor[3] litdir220C#5 = globals.litdir2195;
    int _t220E#1 = 0;
    int _t2210#1 = 1;
    int _t2212#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F2);
    int _t2214#1 = ISub(_t2212,_t2210);
    int[] _t2216#1 = Range(_t220E,_t2214);
    femData:MeshCell[] _t2218#1 = <femData:MeshCell[]>{};
  FOREACH221B:  preds = [ASSIGN2219,NEXT2221]
    foreach (_t221A in _t2216) on exit goto ASSIGN2223
      femData:MeshCell[] _t221F#2 = phi(_t2218,_t221E)
    femData:MeshCell _t221C#1 = LoadFem<femData:MeshCell>(block21F2,_t221A);
    femData:MeshCell[] _t221E#1 = Append<femData:MeshCell>(_t221F,_t221C);
    goto FOREACH221B
  ASSIGN2223:  preds = [FOREACH221B]
    femData:Space space2222#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F4,block21F2);
    femData:FemFunc U2224#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F6,space2222);
    femData:MeshCell c12226#1 = Subscript<femData:MeshCell[]>(_t221F,cellChoice21F8);
    int _t2228#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12226);
    femData:FuncCell _t222A#2 = LoadFem<femData:FuncCell>(U2224,_t2228);
    femData:FemFunc _t222C#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t222A);
    femData:Space _t222E#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222C);
    int _t2230#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t222A);
    tensor[3] op1_e3_l_42236#9 = VSub<3>(camAt21FE,camEye21FC);
    real op1_e3_l_62239#1 = VDot<3>(op1_e3_l_42236,op1_e3_l_42236);
    real op1_e3_l_7223C#6 = Sqrt(op1_e3_l_62239);
    real realLit2240#9 = 0.1e1;
    real op1_e3_l_9223F#6 = RDiv(realLit2240,op1_e3_l_7223C);
    tensor[3] camN2244#4 = VScale<3>(op1_e3_l_9223F,op1_e3_l_42236);
    globals.camN2199 = camN2244;
    real realLit2249#6 = 0.e0;
    real r224A#3 = TensorIndex<tensor[3],[0]>(camUp2200);
    real r224B#3 = RMul(realLit2249,r224A);
    real r224C#3 = TensorIndex<tensor[3],[1]>(camUp2200);
    real r224D#3 = RMul(realLit2249,r224C);
    real r224E#3 = TensorIndex<tensor[3],[2]>(camUp2200);
    real r224F#5 = RMul(realLit2249,r224E);
    real r2250#3 = RAdd(r224B,r224D);
    real r2251#3 = RAdd(r2250,r224F);
    real r2253#1 = RMul(realLit2240,r224E);
    real r2254#1 = RAdd(r2250,r2253);
    real realLit2255#6 = -0.1e1;
    real r2256#1 = RMul(realLit2255,r224C);
    real r2257#1 = RAdd(r224B,r2256);
    real r2258#1 = RAdd(r2257,r224F);
    tensor[3] tensor2259#1 = <tensor[3]>[r2251,r2254,r2258];
    real r225A#1 = RMul(realLit2255,r224E);
    real r225B#1 = RAdd(r2250,r225A);
    real r225C#1 = RMul(realLit2240,r224A);
    real r225D#1 = RAdd(r225C,r224D);
    real r225E#1 = RAdd(r225D,r224F);
    tensor[3] tensor225F#1 = <tensor[3]>[r225B,r2251,r225E];
    real r2260#1 = RMul(realLit2240,r224C);
    real r2261#1 = RAdd(r224B,r2260);
    real r2262#1 = RAdd(r2261,r224F);
    real r2263#1 = RMul(realLit2255,r224A);
    real r2264#1 = RAdd(r2263,r224D);
    real r2265#1 = RAdd(r2264,r224F);
    tensor[3] tensor2266#1 = <tensor[3]>[r2262,r2265,r2251];
    real vdot2289#4 = VDot<3>(op1_e3_l_42236,tensor2259);
    real vdot228B#4 = VDot<3>(op1_e3_l_42236,tensor225F);
    real vdot228D#4 = VDot<3>(op1_e3_l_42236,tensor2266);
    tensor[3] op1_e3_l_172287#3 = <tensor[3]>[vdot2289,vdot228B,vdot228D];
    real op1_e3_l_342296#1 = VDot<3>(op1_e3_l_172287,op1_e3_l_172287);
    real r229A#1 = RMul(op1_e3_l_9223F,op1_e3_l_9223F);
    real op1_e3_l_352299#1 = RMul(r229A,op1_e3_l_342296);
    real op1_e3_l_36229E#1 = Sqrt(op1_e3_l_352299);
    tensor[3] op1_e3_l_3722A1#1 = VScale<3>(op1_e3_l_9223F,op1_e3_l_172287);
    real op1_e3_l_3822A4#2 = RDiv(realLit2240,op1_e3_l_36229E);
    tensor[3] camU22A9#4 = VScale<3>(op1_e3_l_3822A4,op1_e3_l_3722A1);
    globals.camU219A = camU22A9;
    real r22B0#3 = RMul(realLit2249,vdot2289);
    real r22B2#3 = RMul(realLit2249,vdot228B);
    real r22B4#5 = RMul(realLit2249,vdot228D);
    real r22B5#3 = RAdd(r22B0,r22B2);
    real r22B6#3 = RAdd(r22B5,r22B4);
    real r22B8#1 = RMul(realLit2240,vdot228D);
    real r22B9#1 = RAdd(r22B5,r22B8);
    real r22BB#1 = RMul(realLit2255,vdot228B);
    real r22BC#1 = RAdd(r22B0,r22BB);
    real r22BD#1 = RAdd(r22BC,r22B4);
    tensor[3] tensor22BE#1 = <tensor[3]>[r22B6,r22B9,r22BD];
    real r22BF#1 = RMul(realLit2255,vdot228D);
    real r22C0#1 = RAdd(r22B5,r22BF);
    real r22C1#1 = RMul(realLit2240,vdot2289);
    real r22C2#1 = RAdd(r22C1,r22B2);
    real r22C3#1 = RAdd(r22C2,r22B4);
    tensor[3] tensor22C4#1 = <tensor[3]>[r22C0,r22B6,r22C3];
    real r22C5#1 = RMul(realLit2240,vdot228B);
    real r22C6#1 = RAdd(r22B0,r22C5);
    real r22C7#1 = RAdd(r22C6,r22B4);
    real r22C8#1 = RMul(realLit2255,vdot2289);
    real r22C9#1 = RAdd(r22C8,r22B2);
    real r22CA#1 = RAdd(r22C9,r22B4);
    tensor[3] tensor22CB#1 = <tensor[3]>[r22C7,r22CA,r22B6];
    real vdot22EE#1 = VDot<3>(op1_e3_l_42236,tensor22BE);
    real vdot22F0#1 = VDot<3>(op1_e3_l_42236,tensor22C4);
    real vdot22F2#1 = VDot<3>(op1_e3_l_42236,tensor22CB);
    tensor[3] op1_e3_l_4722EC#1 = <tensor[3]>[vdot22EE,vdot22F0,vdot22F2];
    tensor[3] op1_e3_l_5022FB#3 = VScale<3>(op1_e3_l_9223F,op1_e3_l_4722EC);
    real r22FF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FB);
    real r2300#3 = RMul(op1_e3_l_9223F,op1_e3_l_3822A4);
    real r2301#2 = RMul(r2300,r22FF);
    real r2302#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FB);
    real r2303#2 = RMul(r2300,r2302);
    real r2304#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FB);
    real r2305#2 = RMul(r2300,r2304);
    tensor[3] camV22FE#1 = <tensor[3]>[r2301,r2303,r2305];
    globals.camV219B = camV22FE;
    globals.camDist219C = op1_e3_l_7223C;
    real _t2311#1 = 0.314159265358979323846264338327950288e1;
    real _t2313#1 = 0.36e3;
    real op1_e3_l_52315#1 = RMul(camFOV2206,_t2311);
    real op1_e3_l_62318#1 = RDiv(op1_e3_l_52315,_t2313);
    real op1_e3_l_10231B#2 = Tan(op1_e3_l_62318);
    real camVmax231E#1 = RMul(op1_e3_l_10231B,op1_e3_l_7223C);
    globals.camVmax219D = camVmax231E;
    real _t2322#1 = IntToReal(iresU2208);
    real _t2324#1 = IntToReal(iresV220A);
    real r2327#1 = RMul(_t2322,op1_e3_l_10231B);
    real op1_e3_l_142326#1 = RMul(r2327,op1_e3_l_7223C);
    real camUmax232B#1 = RDiv(op1_e3_l_142326,_t2324);
    globals.camUmax219E = camUmax232B;
    real camNearVsp232F#1 = RAdd(camNear2202,op1_e3_l_7223C);
    globals.camNearVsp219F = camNearVsp232F;
    real camFarVsp2333#1 = RAdd(camFar2204,op1_e3_l_7223C);
    globals.camFarVsp21A0 = camFarVsp2333;
    real op1_e3_l_32339#1 = VDot<3>(litdir220C,litdir220C);
    real op1_e3_l_4233C#1 = Sqrt(op1_e3_l_32339);
    real op1_e3_l_5233F#1 = RDiv(realLit2240,op1_e3_l_4233C);
    real r2345#1 = VIndex<3,0>(camU22A9);
    real r2346#3 = TensorIndex<tensor[3],[0]>(litdir220C);
    real r2347#1 = RMul(r2345,r2346);
    real r2349#3 = TensorIndex<tensor[3],[1]>(litdir220C);
    real r234A#1 = RMul(r2301,r2349);
    real r234B#1 = VIndex<3,0>(camN2244);
    real r234C#3 = TensorIndex<tensor[3],[2]>(litdir220C);
    real r234D#1 = RMul(r234B,r234C);
    real r234E#1 = RAdd(r2347,r234A);
    real r234F#1 = RAdd(r234E,r234D);
    real r2350#1 = VIndex<3,1>(camU22A9);
    real r2351#1 = RMul(r2350,r2346);
    real r2353#1 = RMul(r2303,r2349);
    real r2354#1 = VIndex<3,1>(camN2244);
    real r2355#1 = RMul(r2354,r234C);
    real r2356#1 = RAdd(r2351,r2353);
    real r2357#1 = RAdd(r2356,r2355);
    real r2358#1 = VIndex<3,2>(camU22A9);
    real r2359#1 = RMul(r2358,r2346);
    real r235B#1 = RMul(r2305,r2349);
    real r235C#1 = VIndex<3,2>(camN2244);
    real r235D#1 = RMul(r235C,r234C);
    real r235E#1 = RAdd(r2359,r235B);
    real r235F#1 = RAdd(r235E,r235D);
    tensor[3] op1_e3_l_62344#1 = <tensor[3]>[r234F,r2357,r235F];
    tensor[3] litwsp237D#1 = VScale<3>(op1_e3_l_5233F,op1_e3_l_62344);
    globals.litwsp21A1 = litwsp237D;
    globals._t21A2 = _t2230;
    globals._tX21A3 = _t222E;
    globals._tXX21A4 = _t222C;
    return
## strand
  strand ray (int ui2387#1, int vi2388#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2399:  preds = []
        tensor[3] camEye239A#1 = globals.camEye2180;
        bool camOrtho239C#2 = globals.camOrtho2186;
        int iresU239E#1 = globals.iresU2187;
        int iresV23A0#1 = globals.iresV2188;
        real rayStep23A2#1 = globals.rayStep2189;
        real refStep23A4#1 = globals.refStep218A;
        tensor[4] phong23A6#4 = globals.phong2192;
        tensor[3] camN23A8#1 = globals.camN2199;
        tensor[3] camU23AA#1 = globals.camU219A;
        tensor[3] camV23AC#1 = globals.camV219B;
        real camDist23AE#1 = globals.camDist219C;
        real camVmax23B0#2 = globals.camVmax219D;
        real camUmax23B2#2 = globals.camUmax219E;
        real camNearVsp23B4#1 = globals.camNearVsp219F;
        real _t23B6#4 = -0.5e0;
        real _t23B8#1 = IntToReal(ui2387);
        real _t23BA#1 = IntToReal(iresU239E);
        real _t23BC#2 = 0.5e0;
        real op1_e3_l_623BE#1 = RSub(_t23BA,_t23BC);
        real op1_e3_l_723C1#1 = RSub(_t23B8,_t23B6);
        real op1_e3_l_823C4#1 = RSub(op1_e3_l_623BE,_t23B6);
        real op1_e3_l_923C7#2 = RNeg(camUmax23B2);
        real op1_e3_l_1023CA#1 = RDiv(op1_e3_l_723C1,op1_e3_l_823C4);
        real op1_e3_l_1123CD#1 = RSub(camUmax23B2,op1_e3_l_923C7);
        real op1_e3_l_1323D0#1 = RMul(op1_e3_l_1023CA,op1_e3_l_1123CD);
        real rayU23D3#2 = RAdd(op1_e3_l_923C7,op1_e3_l_1323D0);
        real _t23D6#1 = IntToReal(vi2388);
        real _t23D8#1 = IntToReal(iresV23A0);
        real op1_e3_l_623DA#1 = RSub(_t23D8,_t23BC);
        real op1_e3_l_723DD#1 = RSub(_t23D6,_t23B6);
        real op1_e3_l_823E0#1 = RSub(op1_e3_l_623DA,_t23B6);
        real op1_e3_l_923E3#2 = RNeg(camVmax23B0);
        real op1_e3_l_1023E6#1 = RDiv(op1_e3_l_723DD,op1_e3_l_823E0);
        real op1_e3_l_1123E9#1 = RSub(camVmax23B0,op1_e3_l_923E3);
        real op1_e3_l_1323EC#1 = RMul(op1_e3_l_1023E6,op1_e3_l_1123E9);
        real rayV23EF#2 = RAdd(op1_e3_l_923E3,op1_e3_l_1323EC);
        tensor[3] op1_e3_l_322401#1 = VScale<3>(rayU23D3,camU23AA);
        tensor[3] op1_e3_l_332404#1 = VScale<3>(rayV23EF,camV23AC);
        tensor[3] UV2407#5 = VAdd<3>(op1_e3_l_322401,op1_e3_l_332404);
        if camOrtho239C then goto JOIN240D else goto ASSIGN2467
      JOIN240D:  preds = [COND240A,ASSIGN2468]
        tensor[3] _t240B#1 = phi(UV2407,_t240C)
        tensor[3] rayOrig240E#1 = VAdd<3>(camEye239A,_t240B);
        if camOrtho239C then goto ASSIGN2413 else goto ASSIGN245D
      ASSIGN2413:  preds = [COND2411]
        real _t2412#3 = 0.e0;
        tensor[3] _t2414#1 = <tensor[3]>[_t2412,_t2412,_t2412];
        goto JOIN2418
      JOIN2418:  preds = [ASSIGN2415,ASSIGN2465]
        tensor[3] _t2416#1 = phi(_t2414,_t2417)
        tensor[3] rayVec2419#4 = VAdd<3>(camN23A8,_t2416);
        real op1_e3_l_6241C#1 = VDot<3>(rayVec2419,rayVec2419);
        real op1_e3_l_7241F#2 = Sqrt(op1_e3_l_6241C);
        real op1_e3_l_82422#1 = RMul(rayStep23A2,op1_e3_l_7241F);
        real alphaFix2425#1 = RDiv(op1_e3_l_82422,refStep23A4);
        real realLit2429#2 = 0.1e1;
        real op1_e3_l_92428#1 = RDiv(realLit2429,op1_e3_l_7241F);
        tensor[3] op1_e3_l_10242D#1 = VScale<3>(op1_e3_l_92428,rayVec2419);
        tensor[3] eyeDir2430#1 = VNeg<3>(op1_e3_l_10242D);
        real phKa2433#1 = VIndex<4,0>(phong23A6);
        real phKd2435#1 = VIndex<4,1>(phong23A6);
        real phKs2437#1 = VIndex<4,2>(phong23A6);
        real phSp2439#1 = VIndex<4,3>(phong23A6);
        real _t243B#8 = 0.e0;
        tensor[4] rgba243D#1 = <tensor[4]>[_t243B,_t243B,_t243B,_t243B];
        tensor[3] rgb243F#1 = <tensor[3]>[_t243B,_t243B,_t243B];
        self.rayU = rayU23D3;
        self.rayV = rayV23EF;
        self.rayN = camNearVsp23B4;
        self.UV = UV2407;
        self.rayOrig = rayOrig240E;
        self.rayVec = rayVec2419;
        self.alphaFix = alphaFix2425;
        self.eyeDir = eyeDir2430;
        self.phKa = phKa2433;
        self.phKd = phKd2435;
        self.phKs = phKs2437;
        self.phSp = phSp2439;
        self.rgba = rgba243D;
        self.raw = _t243B;
        self.rgb = rgb243F;
        self.transp = realLit2429;
        return
      ASSIGN245D:  preds = [COND2411]
        real realLit2454#1 = 0.1e1;
        real r2455#3 = RDiv(realLit2454,camDist23AE);
        real r2456#1 = TensorIndex<tensor[3],[0]>(UV2407);
        real r2457#1 = RMul(r2455,r2456);
        real r2458#1 = TensorIndex<tensor[3],[1]>(UV2407);
        real r2459#1 = RMul(r2455,r2458);
        real r245A#1 = TensorIndex<tensor[3],[2]>(UV2407);
        real r245B#1 = RMul(r2455,r245A);
        tensor[3] _t2417#1 = <tensor[3]>[r2457,r2459,r245B];
        goto JOIN2418
      ASSIGN2467:  preds = [COND240A]
        real _t2466#3 = 0.e0;
        tensor[3] _t240C#1 = <tensor[3]>[_t2466,_t2466,_t2466];
        goto JOIN240D
    end state init
    method update
        ENTRY2469:  preds = []
          image(IMAGE1D<double[3]>) cmap246A#17 = globals.cmap217F;
          int _t246C#3 = globals._t21A2;
          femData:Space _t246E#252 = globals._tX21A3;
          femData:FemFunc _t2470#252 = globals._tXX21A4;
          image(IMAGE3D<float[]>) umm2472#66 = globals.umm2198;
          femData:Mesh block2478#1 = globals.block217B;
          real rayStep247A#1 = globals.rayStep2189;
          real transp0247C#1 = globals.transp0218B;
          real thick247E#1 = globals.thick218C;
          real fStrTh2480#1 = globals.fStrTh218D;
          real fMaskTh2482#1 = globals.fMaskTh218E;
          real fBias2484#1 = globals.fBias218F;
          real maxAlpha2486#1 = globals.maxAlpha2190;
          tensor[3] mcNear2488#2 = globals.mcNear2193;
          tensor[3] mcFar248A#1 = globals.mcFar2194;
          tensor[2] cminmax248C#2 = globals.cminmax2196;
          bool analytical248E#1 = globals.analytical2197;
          real camNearVsp2490#2 = globals.camNearVsp219F;
          real camFarVsp2492#2 = globals.camFarVsp21A0;
          tensor[3] litwsp2494#2 = globals.litwsp21A1;
          real rayN2496#1 = self.rayN;
          tensor[3] rayOrig2498#1 = self.rayOrig;
          tensor[3] rayVec249A#1 = self.rayVec;
          real alphaFix249C#1 = self.alphaFix;
          tensor[3] eyeDir249E#1 = self.eyeDir;
          real phKa24A0#1 = self.phKa;
          real phKd24A2#1 = self.phKd;
          real phKs24A4#2 = self.phKs;
          real phSp24A6#1 = self.phSp;
          tensor[3] rgb24A8#1 = self.rgb;
          real transp24AA#2 = self.transp;
          real rayN24AC#8 = RAdd(rayN2496,rayStep247A);
          bool _t24AF#1 = GT<real>(rayN24AC,camFarVsp2492);
          if _t24AF then goto SAVE24B2 else goto JOIN24B4
        SAVE24B2:  preds = [COND24B1]
          self.rayN = rayN24AC;
          stabilize
          goto JOIN24B4
        JOIN24B4:  preds = [*STABILIZE24B3,COND24B1]
          tensor[3] op1_e3_l_524B5#1 = VScale<3>(rayN24AC,rayVec249A);
          tensor[3] pos24B8#11 = VAdd<3>(rayOrig2498,op1_e3_l_524B5);
          femData:RefCell _t24BB#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2478);
          real _t24BD#1 = 0.1e-8;
          bool _t24BF#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BB,pos24B8,_t24BD);
          if _t24BF then goto ASSIGN25C2 else goto ASSIGN46AE
        ASSIGN25C2:  preds = [COND24C1]
          int ilit24C3#1 = 84;
          int mulRes24C4#84 = IMul(_t246C,ilit24C3);
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,mulRes24C4);
          int ilit24C8#86 = 1;
          int addRes24C9#1 = IAdd(mulRes24C4,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24C9);
          int ilit24CB#1 = 2;
          int addRes24CC#1 = IAdd(mulRes24C4,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CC);
          int ilit24CE#1 = 3;
          int addRes24CF#1 = IAdd(mulRes24C4,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CF);
          int ilit24D1#1 = 4;
          int addRes24D2#1 = IAdd(mulRes24C4,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D2);
          int ilit24D4#1 = 5;
          int addRes24D5#1 = IAdd(mulRes24C4,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D5);
          int ilit24D7#1 = 6;
          int addRes24D8#1 = IAdd(mulRes24C4,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D8);
          int ilit24DA#1 = 7;
          int addRes24DB#1 = IAdd(mulRes24C4,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DB);
          int ilit24DD#1 = 8;
          int addRes24DE#1 = IAdd(mulRes24C4,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DE);
          int ilit24E0#1 = 9;
          int addRes24E1#1 = IAdd(mulRes24C4,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E1);
          int ilit24E3#1 = 10;
          int addRes24E4#1 = IAdd(mulRes24C4,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E4);
          int ilit24E6#1 = 11;
          int addRes24E7#1 = IAdd(mulRes24C4,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E7);
          int ilit24E9#1 = 12;
          int addRes24EA#1 = IAdd(mulRes24C4,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24EA);
          int ilit24EC#1 = 13;
          int addRes24ED#1 = IAdd(mulRes24C4,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24ED);
          int ilit24EF#1 = 14;
          int addRes24F0#1 = IAdd(mulRes24C4,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F0);
          int ilit24F2#1 = 15;
          int addRes24F3#1 = IAdd(mulRes24C4,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F3);
          int ilit24F5#1 = 16;
          int addRes24F6#1 = IAdd(mulRes24C4,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F6);
          int ilit24F8#1 = 17;
          int addRes24F9#1 = IAdd(mulRes24C4,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F9);
          int ilit24FB#1 = 18;
          int addRes24FC#1 = IAdd(mulRes24C4,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FC);
          int ilit24FE#1 = 19;
          int addRes24FF#1 = IAdd(mulRes24C4,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FF);
          int ilit2501#1 = 20;
          int addRes2502#1 = IAdd(mulRes24C4,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2502);
          int ilit2504#1 = 21;
          int addRes2505#1 = IAdd(mulRes24C4,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2505);
          int ilit2507#1 = 22;
          int addRes2508#1 = IAdd(mulRes24C4,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2508);
          int ilit250A#1 = 23;
          int addRes250B#1 = IAdd(mulRes24C4,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250B);
          int ilit250D#1 = 24;
          int addRes250E#1 = IAdd(mulRes24C4,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250E);
          int ilit2510#1 = 25;
          int addRes2511#1 = IAdd(mulRes24C4,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2511);
          int ilit2513#1 = 26;
          int addRes2514#1 = IAdd(mulRes24C4,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2514);
          int ilit2516#1 = 27;
          int addRes2517#1 = IAdd(mulRes24C4,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2517);
          int ilit2519#1 = 28;
          int addRes251A#1 = IAdd(mulRes24C4,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251A);
          int ilit251C#1 = 29;
          int addRes251D#1 = IAdd(mulRes24C4,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251D);
          int ilit251F#1 = 30;
          int addRes2520#1 = IAdd(mulRes24C4,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2520);
          int ilit2522#1 = 31;
          int addRes2523#1 = IAdd(mulRes24C4,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2523);
          int ilit2525#1 = 32;
          int addRes2526#1 = IAdd(mulRes24C4,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2526);
          int ilit2528#1 = 33;
          int addRes2529#1 = IAdd(mulRes24C4,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2529);
          int ilit252B#1 = 34;
          int addRes252C#1 = IAdd(mulRes24C4,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252C);
          int ilit252E#1 = 35;
          int addRes252F#1 = IAdd(mulRes24C4,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252F);
          int ilit2531#1 = 36;
          int addRes2532#1 = IAdd(mulRes24C4,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2532);
          int ilit2534#1 = 37;
          int addRes2535#1 = IAdd(mulRes24C4,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2535);
          int ilit2537#1 = 38;
          int addRes2538#1 = IAdd(mulRes24C4,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2538);
          int ilit253A#1 = 39;
          int addRes253B#1 = IAdd(mulRes24C4,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253B);
          int ilit253D#1 = 40;
          int addRes253E#1 = IAdd(mulRes24C4,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253E);
          int ilit2540#1 = 41;
          int addRes2541#1 = IAdd(mulRes24C4,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2541);
          int ilit2543#1 = 42;
          int addRes2544#1 = IAdd(mulRes24C4,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2544);
          int ilit2546#1 = 43;
          int addRes2547#1 = IAdd(mulRes24C4,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2547);
          int ilit2549#1 = 44;
          int addRes254A#1 = IAdd(mulRes24C4,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254A);
          int ilit254C#1 = 45;
          int addRes254D#1 = IAdd(mulRes24C4,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254D);
          int ilit254F#1 = 46;
          int addRes2550#1 = IAdd(mulRes24C4,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2550);
          int ilit2552#1 = 47;
          int addRes2553#1 = IAdd(mulRes24C4,ilit2552);
          int idx2554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2553);
          int ilit2555#1 = 48;
          int addRes2556#1 = IAdd(mulRes24C4,ilit2555);
          int idx2557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2556);
          int ilit2558#1 = 49;
          int addRes2559#1 = IAdd(mulRes24C4,ilit2558);
          int idx255A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2559);
          int ilit255B#1 = 50;
          int addRes255C#1 = IAdd(mulRes24C4,ilit255B);
          int idx255D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255C);
          int ilit255E#1 = 51;
          int addRes255F#1 = IAdd(mulRes24C4,ilit255E);
          int idx2560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255F);
          int ilit2561#1 = 52;
          int addRes2562#1 = IAdd(mulRes24C4,ilit2561);
          int idx2563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2562);
          int ilit2564#1 = 53;
          int addRes2565#1 = IAdd(mulRes24C4,ilit2564);
          int idx2566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2565);
          int ilit2567#1 = 54;
          int addRes2568#1 = IAdd(mulRes24C4,ilit2567);
          int idx2569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2568);
          int ilit256A#1 = 55;
          int addRes256B#1 = IAdd(mulRes24C4,ilit256A);
          int idx256C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256B);
          int ilit256D#1 = 56;
          int addRes256E#1 = IAdd(mulRes24C4,ilit256D);
          int idx256F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256E);
          int ilit2570#1 = 57;
          int addRes2571#1 = IAdd(mulRes24C4,ilit2570);
          int idx2572#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2571);
          int ilit2573#1 = 58;
          int addRes2574#1 = IAdd(mulRes24C4,ilit2573);
          int idx2575#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2574);
          int ilit2576#1 = 59;
          int addRes2577#1 = IAdd(mulRes24C4,ilit2576);
          int idx2578#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2577);
          int ilit2579#1 = 60;
          int addRes257A#1 = IAdd(mulRes24C4,ilit2579);
          int idx257B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257A);
          int ilit257C#1 = 61;
          int addRes257D#1 = IAdd(mulRes24C4,ilit257C);
          int idx257E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257D);
          int ilit257F#1 = 62;
          int addRes2580#1 = IAdd(mulRes24C4,ilit257F);
          int idx2581#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2580);
          int ilit2582#1 = 63;
          int addRes2583#1 = IAdd(mulRes24C4,ilit2582);
          int idx2584#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2583);
          int ilit2585#1 = 64;
          int addRes2586#1 = IAdd(mulRes24C4,ilit2585);
          int idx2587#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2586);
          int ilit2588#1 = 65;
          int addRes2589#1 = IAdd(mulRes24C4,ilit2588);
          int idx258A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2589);
          int ilit258B#1 = 66;
          int addRes258C#1 = IAdd(mulRes24C4,ilit258B);
          int idx258D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258C);
          int ilit258E#1 = 67;
          int addRes258F#1 = IAdd(mulRes24C4,ilit258E);
          int idx2590#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258F);
          int ilit2591#1 = 68;
          int addRes2592#1 = IAdd(mulRes24C4,ilit2591);
          int idx2593#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2592);
          int ilit2594#1 = 69;
          int addRes2595#1 = IAdd(mulRes24C4,ilit2594);
          int idx2596#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2595);
          int ilit2597#1 = 70;
          int addRes2598#1 = IAdd(mulRes24C4,ilit2597);
          int idx2599#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2598);
          int ilit259A#1 = 71;
          int addRes259B#1 = IAdd(mulRes24C4,ilit259A);
          int idx259C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259B);
          int ilit259D#1 = 72;
          int addRes259E#1 = IAdd(mulRes24C4,ilit259D);
          int idx259F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259E);
          int ilit25A0#1 = 73;
          int addRes25A1#1 = IAdd(mulRes24C4,ilit25A0);
          int idx25A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A1);
          int ilit25A3#1 = 74;
          int addRes25A4#1 = IAdd(mulRes24C4,ilit25A3);
          int idx25A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A4);
          int ilit25A6#1 = 75;
          int addRes25A7#1 = IAdd(mulRes24C4,ilit25A6);
          int idx25A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A7);
          int ilit25A9#1 = 76;
          int addRes25AA#1 = IAdd(mulRes24C4,ilit25A9);
          int idx25AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AA);
          int ilit25AC#1 = 77;
          int addRes25AD#1 = IAdd(mulRes24C4,ilit25AC);
          int idx25AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AD);
          int ilit25AF#1 = 78;
          int addRes25B0#1 = IAdd(mulRes24C4,ilit25AF);
          int idx25B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B0);
          int ilit25B2#1 = 79;
          int addRes25B3#1 = IAdd(mulRes24C4,ilit25B2);
          int idx25B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B3);
          int ilit25B5#1 = 80;
          int addRes25B6#1 = IAdd(mulRes24C4,ilit25B5);
          int idx25B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B6);
          int ilit25B8#1 = 81;
          int addRes25B9#1 = IAdd(mulRes24C4,ilit25B8);
          int idx25BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B9);
          int ilit25BB#1 = 82;
          int addRes25BC#1 = IAdd(mulRes24C4,ilit25BB);
          int idx25BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BC);
          int ilit25BE#1 = 83;
          int addRes25BF#1 = IAdd(mulRes24C4,ilit25BE);
          int idx25C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BF);
          int mulRes26C6#1 = IMul(ilit24C8,idx24C7);
          int mulRes26C8#1 = IMul(ilit24C8,idx24CA);
          int mulRes26CB#1 = IMul(ilit24C8,idx24CD);
          int mulRes26CE#1 = IMul(ilit24C8,idx24D0);
          int mulRes26D1#1 = IMul(ilit24C8,idx24D3);
          int mulRes26D4#1 = IMul(ilit24C8,idx24D6);
          int mulRes26D7#1 = IMul(ilit24C8,idx24D9);
          int mulRes26DA#1 = IMul(ilit24C8,idx24DC);
          int mulRes26DD#1 = IMul(ilit24C8,idx24DF);
          int mulRes26E0#1 = IMul(ilit24C8,idx24E2);
          int mulRes26E3#1 = IMul(ilit24C8,idx24E5);
          int mulRes26E6#1 = IMul(ilit24C8,idx24E8);
          int mulRes26E9#1 = IMul(ilit24C8,idx24EB);
          int mulRes26EC#1 = IMul(ilit24C8,idx24EE);
          int mulRes26EF#1 = IMul(ilit24C8,idx24F1);
          int mulRes26F2#1 = IMul(ilit24C8,idx24F4);
          int mulRes26F5#1 = IMul(ilit24C8,idx24F7);
          int mulRes26F8#1 = IMul(ilit24C8,idx24FA);
          int mulRes26FB#1 = IMul(ilit24C8,idx24FD);
          int mulRes26FE#1 = IMul(ilit24C8,idx2500);
          int mulRes2701#1 = IMul(ilit24C8,idx2503);
          int mulRes2704#1 = IMul(ilit24C8,idx2506);
          int mulRes2707#1 = IMul(ilit24C8,idx2509);
          int mulRes270A#1 = IMul(ilit24C8,idx250C);
          int mulRes270D#1 = IMul(ilit24C8,idx250F);
          int mulRes2710#1 = IMul(ilit24C8,idx2512);
          int mulRes2713#1 = IMul(ilit24C8,idx2515);
          int mulRes2716#1 = IMul(ilit24C8,idx2518);
          int mulRes2719#1 = IMul(ilit24C8,idx251B);
          int mulRes271C#1 = IMul(ilit24C8,idx251E);
          int mulRes271F#1 = IMul(ilit24C8,idx2521);
          int mulRes2722#1 = IMul(ilit24C8,idx2524);
          int mulRes2725#1 = IMul(ilit24C8,idx2527);
          int mulRes2728#1 = IMul(ilit24C8,idx252A);
          int mulRes272B#1 = IMul(ilit24C8,idx252D);
          int mulRes272E#1 = IMul(ilit24C8,idx2530);
          int mulRes2731#1 = IMul(ilit24C8,idx2533);
          int mulRes2734#1 = IMul(ilit24C8,idx2536);
          int mulRes2737#1 = IMul(ilit24C8,idx2539);
          int mulRes273A#1 = IMul(ilit24C8,idx253C);
          int mulRes273D#1 = IMul(ilit24C8,idx253F);
          int mulRes2740#1 = IMul(ilit24C8,idx2542);
          int mulRes2743#1 = IMul(ilit24C8,idx2545);
          int mulRes2746#1 = IMul(ilit24C8,idx2548);
          int mulRes2749#1 = IMul(ilit24C8,idx254B);
          int mulRes274C#1 = IMul(ilit24C8,idx254E);
          int mulRes274F#1 = IMul(ilit24C8,idx2551);
          int mulRes2752#1 = IMul(ilit24C8,idx2554);
          int mulRes2755#1 = IMul(ilit24C8,idx2557);
          int mulRes2758#1 = IMul(ilit24C8,idx255A);
          int mulRes275B#1 = IMul(ilit24C8,idx255D);
          int mulRes275E#1 = IMul(ilit24C8,idx2560);
          int mulRes2761#1 = IMul(ilit24C8,idx2563);
          int mulRes2764#1 = IMul(ilit24C8,idx2566);
          int mulRes2767#1 = IMul(ilit24C8,idx2569);
          int mulRes276A#1 = IMul(ilit24C8,idx256C);
          int mulRes276D#1 = IMul(ilit24C8,idx256F);
          int mulRes2770#1 = IMul(ilit24C8,idx2572);
          int mulRes2773#1 = IMul(ilit24C8,idx2575);
          int mulRes2776#1 = IMul(ilit24C8,idx2578);
          int mulRes2779#1 = IMul(ilit24C8,idx257B);
          int mulRes277C#1 = IMul(ilit24C8,idx257E);
          int mulRes277F#1 = IMul(ilit24C8,idx2581);
          int mulRes2782#1 = IMul(ilit24C8,idx2584);
          int mulRes2785#1 = IMul(ilit24C8,idx2587);
          int mulRes2788#1 = IMul(ilit24C8,idx258A);
          int mulRes278B#1 = IMul(ilit24C8,idx258D);
          int mulRes278E#1 = IMul(ilit24C8,idx2590);
          int mulRes2791#1 = IMul(ilit24C8,idx2593);
          int mulRes2794#1 = IMul(ilit24C8,idx2596);
          int mulRes2797#1 = IMul(ilit24C8,idx2599);
          int mulRes279A#1 = IMul(ilit24C8,idx259C);
          int mulRes279D#1 = IMul(ilit24C8,idx259F);
          int mulRes27A0#1 = IMul(ilit24C8,idx25A2);
          int mulRes27A3#1 = IMul(ilit24C8,idx25A5);
          int mulRes27A6#1 = IMul(ilit24C8,idx25A8);
          int mulRes27A9#1 = IMul(ilit24C8,idx25AB);
          int mulRes27AC#1 = IMul(ilit24C8,idx25AE);
          int mulRes27AF#1 = IMul(ilit24C8,idx25B1);
          int mulRes27B2#1 = IMul(ilit24C8,idx25B4);
          int mulRes27B5#1 = IMul(ilit24C8,idx25B7);
          int mulRes27B8#1 = IMul(ilit24C8,idx25BA);
          int mulRes27BB#1 = IMul(ilit24C8,idx25BD);
          int mulRes27BE#1 = IMul(ilit24C8,idx25C0);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C6);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C8);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CB);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CE);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D1);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D4);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D7);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DA);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DD);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E0);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E3);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E6);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E9);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EC);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EF);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F2);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F5);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F8);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FB);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FE);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2701);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2704);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2707);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270A);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270D);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2710);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2713);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2716);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2719);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271C);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271F);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2722);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2725);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2728);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272B);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272E);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2731);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2734);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2737);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273A);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273D);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2740);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2743);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2746);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2749);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274C);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274F);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2752);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2755);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2758);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275B);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275E);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2761);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2764);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2767);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276A);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276D);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2770);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2773);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2776);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2779);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277C);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277F);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2782);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2785);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2788);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278B);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278E);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2791);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2794);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2797);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279A);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279D);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A0);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A3);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A6);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A9);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AC);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AF);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B2);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B5);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B8);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BB);
          real dof2812#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BE);
          tensor[84] dofs2813#9 = <tensor[84]>[dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811,dof2812];
          real varAcc2967#20 = VIndex<3,0>(pos24B8);
          real varAcc2968#10 = VIndex<3,1>(pos24B8);
          real varAcc2969#10 = VIndex<3,2>(pos24B8);
          real basisEval296A#378 = 0.e0;
          real coeff296B#47 = 0.2e1;
          real one296C#80 = 0.1e1;
          real prod296D#6 = RMul(one296C,one296C);
          real prod296E#2 = RMul(one296C,prod296D);
          real basisEval296F#3 = RMul(coeff296B,prod296E);
          real prod2971#5 = RMul(one296C,varAcc2969);
          real prod2972#3 = RMul(one296C,prod2971);
          real basisEval2973#5 = RMul(coeff296B,prod2972);
          real prod2975#5 = RMul(varAcc2968,one296C);
          real prod2976#3 = RMul(one296C,prod2975);
          real basisEval2977#5 = RMul(coeff296B,prod2976);
          real coeff2978#25 = 0.6e1;
          real prod297A#3 = RMul(varAcc2967,prod296D);
          real basisEval297B#1 = RMul(coeff2978,prod297A);
          real prod2297C#5 = RMul(varAcc2969,varAcc2969);
          real prod297D#4 = RMul(one296C,prod2297C);
          real prod297E#4 = RMul(one296C,prod297D);
          real basisEval297F#2 = RMul(coeff296B,prod297E);
          real prod2980#4 = RMul(varAcc2968,varAcc2969);
          real prod2981#4 = RMul(one296C,prod2980);
          real basisEval2982#5 = RMul(coeff296B,prod2981);
          real prod22983#5 = RMul(varAcc2968,varAcc2968);
          real prod2984#4 = RMul(prod22983,one296C);
          real prod2985#4 = RMul(one296C,prod2984);
          real basisEval2986#2 = RMul(coeff296B,prod2985);
          real prod2987#4 = RMul(varAcc2967,prod2971);
          real basisEval2988#2 = RMul(coeff2978,prod2987);
          real prod2989#4 = RMul(varAcc2967,prod2975);
          real basisEval298A#2 = RMul(coeff2978,prod2989);
          real coeff298B#15 = 0.12e2;
          real prod2298C#11 = RMul(varAcc2967,varAcc2967);
          real prod298D#4 = RMul(prod2298C,prod296D);
          real basisEval298E#1 = RMul(coeff298B,prod298D);
          real prod3298F#4 = RMul(prod2297C,varAcc2969);
          real prod2990#3 = RMul(one296C,prod3298F);
          real prod2991#4 = RMul(one296C,prod2990);
          real basisEval2992#2 = RMul(coeff296B,prod2991);
          real prod2993#3 = RMul(varAcc2968,prod2297C);
          real prod2994#5 = RMul(one296C,prod2993);
          real basisEval2995#3 = RMul(coeff296B,prod2994);
          real prod2996#3 = RMul(prod22983,varAcc2969);
          real prod2997#5 = RMul(one296C,prod2996);
          real basisEval2998#3 = RMul(coeff296B,prod2997);
          real prod32999#4 = RMul(prod22983,varAcc2968);
          real prod299A#3 = RMul(prod32999,one296C);
          real prod299B#4 = RMul(one296C,prod299A);
          real basisEval299C#2 = RMul(coeff296B,prod299B);
          real prod299D#5 = RMul(varAcc2967,prod297D);
          real basisEval299E#2 = RMul(coeff2978,prod299D);
          real prod299F#3 = RMul(varAcc2967,prod2980);
          real basisEval29A0#3 = RMul(coeff2978,prod299F);
          real prod29A1#5 = RMul(varAcc2967,prod2984);
          real basisEval29A2#2 = RMul(coeff2978,prod29A1);
          real prod29A3#5 = RMul(prod2298C,prod2971);
          real basisEval29A4#1 = RMul(coeff298B,prod29A3);
          real prod29A5#5 = RMul(prod2298C,prod2975);
          real basisEval29A6#1 = RMul(coeff298B,prod29A5);
          real coeff29A7#9 = 0.20e2;
          real prod329A8#7 = RMul(prod2298C,varAcc2967);
          real prod29A9#4 = RMul(prod329A8,prod296D);
          real basisEval29AA#1 = RMul(coeff29A7,prod29A9);
          real prod429AB#3 = RMul(prod3298F,varAcc2969);
          real prod29AC#2 = RMul(one296C,prod429AB);
          real prod29AD#4 = RMul(one296C,prod29AC);
          real basisEval29AE#2 = RMul(coeff296B,prod29AD);
          real prod29AF#2 = RMul(varAcc2968,prod3298F);
          real prod29B0#6 = RMul(one296C,prod29AF);
          real basisEval29B1#3 = RMul(coeff296B,prod29B0);
          real prod29B2#2 = RMul(prod22983,prod2297C);
          real prod29B3#5 = RMul(one296C,prod29B2);
          real basisEval29B4#1 = RMul(coeff296B,prod29B3);
          real prod29B5#2 = RMul(prod32999,varAcc2969);
          real prod29B6#6 = RMul(one296C,prod29B5);
          real basisEval29B7#3 = RMul(coeff296B,prod29B6);
          real prod429B8#3 = RMul(prod32999,varAcc2968);
          real prod29B9#2 = RMul(prod429B8,one296C);
          real prod29BA#4 = RMul(one296C,prod29B9);
          real basisEval29BB#2 = RMul(coeff296B,prod29BA);
          real prod29BC#6 = RMul(varAcc2967,prod2990);
          real basisEval29BD#1 = RMul(coeff2978,prod29BC);
          real prod29BE#5 = RMul(varAcc2967,prod2993);
          real basisEval29BF#4 = RMul(coeff2978,prod29BE);
          real prod29C0#5 = RMul(varAcc2967,prod2996);
          real basisEval29C1#4 = RMul(coeff2978,prod29C0);
          real prod29C2#6 = RMul(varAcc2967,prod299A);
          real basisEval29C3#1 = RMul(coeff2978,prod29C2);
          real prod29C4#5 = RMul(prod2298C,prod297D);
          real basisEval29C5#2 = RMul(coeff298B,prod29C4);
          real prod29C6#5 = RMul(prod2298C,prod2980);
          real basisEval29C7#1 = RMul(coeff298B,prod29C6);
          real prod29C8#5 = RMul(prod2298C,prod2984);
          real basisEval29C9#2 = RMul(coeff298B,prod29C8);
          real prod29CA#6 = RMul(prod329A8,prod2971);
          real basisEval29CB#1 = RMul(coeff29A7,prod29CA);
          real prod29CC#6 = RMul(prod329A8,prod2975);
          real basisEval29CD#1 = RMul(coeff29A7,prod29CC);
          real coeff29CE#3 = 0.30e2;
          real prod429CF#4 = RMul(prod329A8,varAcc2967);
          real prod29D0#4 = RMul(prod429CF,prod296D);
          real basisEval29D1#1 = RMul(coeff29CE,prod29D0);
          real basisEval29D2#6 = RMul(one296C,prod296E);
          real basisEval29D3#3 = RMul(one296C,prod2972);
          real basisEval29D4#5 = RMul(coeff296B,prod297A);
          real basisEval29D5#3 = RMul(one296C,prod297E);
          real coeff29D6#24 = 0.3e1;
          real basisEval29D7#3 = RMul(coeff29D6,prod2985);
          real basisEval29D8#5 = RMul(coeff296B,prod2987);
          real coeff29D9#25 = 0.4e1;
          real basisEval29DA#1 = RMul(coeff29D9,prod2989);
          real basisEval29DB#3 = RMul(coeff29D6,prod298D);
          real basisEval29DC#3 = RMul(one296C,prod2991);
          real basisEval29DD#2 = RMul(coeff29D6,prod2997);
          real basisEval29DE#3 = RMul(coeff29D9,prod299B);
          real basisEval29DF#3 = RMul(coeff296B,prod299D);
          real basisEval29E0#3 = RMul(coeff29D9,prod299F);
          real basisEval29E1#2 = RMul(coeff29D6,prod29A3);
          real basisEval29E2#2 = RMul(coeff2978,prod29A5);
          real basisEval29E3#3 = RMul(coeff29D9,prod29A9);
          real basisEval29E4#3 = RMul(one296C,prod29AD);
          real basisEval29E5#4 = RMul(coeff29D6,prod29B3);
          real basisEval29E6#2 = RMul(coeff29D9,prod29B6);
          real coeff29E7#9 = 0.5e1;
          real basisEval29E8#3 = RMul(coeff29E7,prod29BA);
          real basisEval29E9#3 = RMul(coeff296B,prod29BC);
          real basisEval29EA#1 = RMul(coeff29D9,prod29BE);
          real coeff29EB#6 = 0.8e1;
          real basisEval29EC#1 = RMul(coeff29EB,prod29C2);
          real basisEval29ED#4 = RMul(coeff29D6,prod29C4);
          real basisEval29EE#4 = RMul(coeff2978,prod29C6);
          real coeff29EF#3 = 0.9e1;
          real basisEval29F0#1 = RMul(coeff29EF,prod29C8);
          real basisEval29F1#2 = RMul(coeff29D9,prod29CA);
          real basisEval29F2#1 = RMul(coeff29EB,prod29CC);
          real basisEval29F3#3 = RMul(coeff29E7,prod29D0);
          real basisEval29F4#3 = RMul(one296C,prod2976);
          real basisEval29F5#3 = RMul(coeff29D6,prod297E);
          real basisEval29F6#3 = RMul(one296C,prod2985);
          real basisEval29F7#1 = RMul(coeff29D9,prod2987);
          real basisEval29F8#5 = RMul(coeff296B,prod2989);
          real basisEval29F9#3 = RMul(coeff29D9,prod2991);
          real basisEval29FA#2 = RMul(coeff29D6,prod2994);
          real basisEval29FB#3 = RMul(one296C,prod299B);
          real basisEval29FC#3 = RMul(coeff296B,prod29A1);
          real basisEval29FD#2 = RMul(coeff2978,prod29A3);
          real basisEval29FE#2 = RMul(coeff29D6,prod29A5);
          real basisEval29FF#3 = RMul(coeff29E7,prod29AD);
          real basisEval2A00#2 = RMul(coeff29D9,prod29B0);
          real basisEval2A01#3 = RMul(one296C,prod29BA);
          real basisEval2A02#1 = RMul(coeff29EB,prod29BC);
          real basisEval2A03#1 = RMul(coeff29D9,prod29C0);
          real basisEval2A04#3 = RMul(coeff296B,prod29C2);
          real basisEval2A05#1 = RMul(coeff29EF,prod29C4);
          real basisEval2A06#4 = RMul(coeff29D6,prod29C8);
          real basisEval2A07#1 = RMul(coeff29EB,prod29CA);
          real basisEval2A08#2 = RMul(coeff29D9,prod29CC);
          real basisEval2A09#1 = RMul(coeff2978,prod2976);
          real basisEval2A0A#2 = RMul(coeff2978,prod2981);
          real basisEval2A0B#1 = RMul(coeff298B,prod2985);
          real basisEval2A0C#2 = RMul(coeff296B,prod298D);
          real basisEval2A0D#2 = RMul(coeff2978,prod2994);
          real basisEval2A0E#1 = RMul(coeff298B,prod2997);
          real basisEval2A0F#1 = RMul(coeff29A7,prod299B);
          real basisEval2A10#1 = RMul(coeff298B,prod29A1);
          real basisEval2A11#3 = RMul(coeff296B,prod29A3);
          real basisEval2A12#2 = RMul(coeff296B,prod29A9);
          real basisEval2A13#1 = RMul(coeff2978,prod29B0);
          real basisEval2A14#2 = RMul(coeff298B,prod29B3);
          real basisEval2A15#1 = RMul(coeff29A7,prod29B6);
          real basisEval2A16#1 = RMul(coeff29CE,prod29BA);
          real basisEval2A17#1 = RMul(coeff298B,prod29C0);
          real basisEval2A18#1 = RMul(coeff29A7,prod29C2);
          real basisEval2A19#1 = RMul(coeff296B,prod29C4);
          real basisEval2A1A#3 = RMul(coeff296B,prod29CA);
          real basisEval2A1B#1 = RMul(coeff2978,prod29CC);
          real basisEval2A1C#2 = RMul(coeff296B,prod29D0);
          real basisEval2A1D#3 = RMul(one296C,prod297A);
          real basisEval2A1E#1 = RMul(coeff29D9,prod2981);
          real basisEval2A1F#3 = RMul(one296C,prod298D);
          real basisEval2A20#2 = RMul(coeff2978,prod2997);
          real basisEval2A21#2 = RMul(coeff29D6,prod299D);
          real basisEval2A22#2 = RMul(coeff29D6,prod29A1);
          real basisEval2A23#3 = RMul(coeff296B,prod29A5);
          real basisEval2A24#3 = RMul(one296C,prod29A9);
          real basisEval2A25#1 = RMul(coeff29EB,prod29B0);
          real basisEval2A26#1 = RMul(coeff29EF,prod29B3);
          real basisEval2A27#1 = RMul(coeff29EB,prod29B6);
          real basisEval2A28#2 = RMul(coeff29D9,prod29BC);
          real basisEval2A29#2 = RMul(coeff29D9,prod29C2);
          real basisEval2A2A#1 = RMul(coeff29D9,prod29C6);
          real basisEval2A2B#3 = RMul(coeff296B,prod29CC);
          real basisEval2A2C#3 = RMul(one296C,prod29D0);
          real basisEval2A2D#1 = RMul(coeff2978,prod2972);
          real basisEval2A2E#1 = RMul(coeff298B,prod297E);
          real basisEval2A2F#1 = RMul(coeff29A7,prod2991);
          real basisEval2A30#1 = RMul(coeff298B,prod2994);
          real basisEval2A31#1 = RMul(coeff298B,prod299D);
          real basisEval2A32#1 = RMul(coeff29CE,prod29AD);
          real basisEval2A33#1 = RMul(coeff29A7,prod29B0);
          real basisEval2A34#1 = RMul(coeff2978,prod29B6);
          real basisEval2A35#1 = RMul(coeff29A7,prod29BC);
          real basisEval2A36#1 = RMul(coeff298B,prod29BE);
          real basisEval2A37#1 = RMul(coeff296B,prod29C8);
          real basisEval2A38#1 = RMul(coeff2978,prod29CA);
          tensor[84] intermediateCons2A39#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval297B,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2982,basisEval2986,basisEval2988,basisEval298A,basisEval298E,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2995,basisEval2998,basisEval299C,basisEval299E,basisEval29A0,basisEval29A2,basisEval29A4,basisEval29A6,basisEval29AA,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval29B1,basisEval29B4,basisEval29B7,basisEval29BB,basisEval29BD,basisEval29BF,basisEval29C1,basisEval29C3,basisEval29C5,basisEval29C7,basisEval29C9,basisEval29CB,basisEval29CD,basisEval29D1];
          tensor[84] intermediateCons2A3A#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D3,basisEval2977,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D5,basisEval2982,basisEval29D7,basisEval296A,basisEval29D8,basisEval29DA,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29DC,basisEval2995,basisEval29DD,basisEval29DE,basisEval296A,basisEval29DF,basisEval29E0,basisEval29A2,basisEval296A,basisEval29E1,basisEval29E2,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29E4,basisEval29B1,basisEval29E5,basisEval29E6,basisEval29E8,basisEval296A,basisEval29E9,basisEval29EA,basisEval29C1,basisEval29EC,basisEval296A,basisEval29ED,basisEval29EE,basisEval29F0,basisEval296A,basisEval29F1,basisEval29F2,basisEval296A,basisEval29F3,basisEval296A];
          tensor[84] intermediateCons2A3B#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval29F4,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2982,basisEval29F6,basisEval296A,basisEval29F7,basisEval29F8,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval29FA,basisEval2998,basisEval29FB,basisEval296A,basisEval299E,basisEval29E0,basisEval29FC,basisEval296A,basisEval29FD,basisEval29FE,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A00,basisEval29E5,basisEval29B7,basisEval2A01,basisEval296A,basisEval2A02,basisEval29BF,basisEval2A03,basisEval2A04,basisEval296A,basisEval2A05,basisEval29EE,basisEval2A06,basisEval296A,basisEval2A07,basisEval2A08,basisEval296A,basisEval29F3,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3C#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2A09,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2A0A,basisEval2A0B,basisEval296A,basisEval296A,basisEval29D8,basisEval298A,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2A0D,basisEval2A0E,basisEval2A0F,basisEval296A,basisEval296A,basisEval29DF,basisEval29A0,basisEval2A10,basisEval296A,basisEval296A,basisEval2A11,basisEval29E2,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2A16,basisEval296A,basisEval296A,basisEval29E9,basisEval29BF,basisEval2A17,basisEval2A18,basisEval296A,basisEval296A,basisEval2A19,basisEval29EE,basisEval29C9,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A1B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3D#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval296A,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2A1E,basisEval29D7,basisEval296A,basisEval296A,basisEval29D8,basisEval29F8,basisEval296A,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval2A0D,basisEval2A20,basisEval29DE,basisEval296A,basisEval296A,basisEval2A21,basisEval29E0,basisEval2A22,basisEval296A,basisEval296A,basisEval2A11,basisEval2A23,basisEval296A,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A25,basisEval2A26,basisEval2A27,basisEval29E8,basisEval296A,basisEval296A,basisEval2A28,basisEval29BF,basisEval29C1,basisEval2A29,basisEval296A,basisEval296A,basisEval29ED,basisEval2A2A,basisEval2A06,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3E#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2D,basisEval2977,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2E,basisEval2A0A,basisEval2986,basisEval296A,basisEval296A,basisEval2988,basisEval29F8,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2F,basisEval2A30,basisEval2A20,basisEval299C,basisEval296A,basisEval296A,basisEval2A31,basisEval29A0,basisEval29FC,basisEval296A,basisEval296A,basisEval29FD,basisEval2A23,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A32,basisEval2A33,basisEval2A14,basisEval2A34,basisEval29BB,basisEval296A,basisEval296A,basisEval2A35,basisEval2A36,basisEval29C1,basisEval2A04,basisEval296A,basisEval296A,basisEval29C5,basisEval29EE,basisEval2A37,basisEval296A,basisEval296A,basisEval2A38,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          real vdot2B22#1 = VDot<84>(dofs2813,intermediateCons2A39);
          real vdot2B24#2 = VDot<84>(dofs2813,intermediateCons2A3A);
          real vdot2B26#2 = VDot<84>(dofs2813,intermediateCons2A3B);
          tensor[3] tensor2B27#1 = <tensor[3]>[vdot2B22,vdot2B24,vdot2B26];
          real vdot2B2B#1 = VDot<84>(dofs2813,intermediateCons2A3C);
          real vdot2B2D#2 = VDot<84>(dofs2813,intermediateCons2A3D);
          tensor[3] tensor2B2E#1 = <tensor[3]>[vdot2B24,vdot2B2B,vdot2B2D];
          real vdot2B34#1 = VDot<84>(dofs2813,intermediateCons2A3E);
          tensor[3] tensor2B35#1 = <tensor[3]>[vdot2B26,vdot2B2D,vdot2B34];
          tensor[3,3] _t2B20#1 = <tensor[3,3]>[tensor2B27,tensor2B2E,tensor2B35];
          real[3] _t2B4D#1 = EigenVals3x3(_t2B20);
          real _t2B51#1 = Subscript<real[3]>(_t2B4D,ilit24C8);
          real basisEval2B6E#1 = RMul(one296C,prod2981);
          real basisEval2B81#1 = RMul(one296C,prod2994);
          real basisEval2B84#1 = RMul(one296C,prod2997);
          real basisEval2B8C#3 = RMul(coeff296B,prod299F);
          real basisEval2B9D#1 = RMul(one296C,prod29B0);
          real basisEval2BA0#1 = RMul(one296C,prod29B3);
          real basisEval2BA3#1 = RMul(one296C,prod29B6);
          real basisEval2BAB#2 = RMul(coeff296B,prod29BE);
          real basisEval2BAD#2 = RMul(coeff296B,prod29C0);
          real basisEval2BB3#1 = RMul(coeff29D6,prod29C6);
          real prod52BBE#1 = RMul(prod429AB,varAcc2969);
          real prod2BBF#1 = RMul(one296C,prod52BBE);
          real prod2BC0#2 = RMul(one296C,prod2BBF);
          real basisEval2BC1#2 = RMul(one296C,prod2BC0);
          real prod2BC2#1 = RMul(varAcc2968,prod429AB);
          real prod2BC3#3 = RMul(one296C,prod2BC2);
          real basisEval2BC4#1 = RMul(one296C,prod2BC3);
          real prod2BC5#1 = RMul(prod22983,prod3298F);
          real prod2BC6#3 = RMul(one296C,prod2BC5);
          real basisEval2BC7#1 = RMul(one296C,prod2BC6);
          real prod2BC8#1 = RMul(prod32999,prod2297C);
          real prod2BC9#3 = RMul(one296C,prod2BC8);
          real basisEval2BCA#1 = RMul(one296C,prod2BC9);
          real prod2BCB#1 = RMul(prod429B8,varAcc2969);
          real prod2BCC#3 = RMul(one296C,prod2BCB);
          real basisEval2BCD#1 = RMul(one296C,prod2BCC);
          real prod52BCE#1 = RMul(prod429B8,varAcc2968);
          real prod2BCF#1 = RMul(prod52BCE,one296C);
          real prod2BD0#2 = RMul(one296C,prod2BCF);
          real basisEval2BD1#2 = RMul(one296C,prod2BD0);
          real prod2BD2#3 = RMul(varAcc2967,prod29AC);
          real basisEval2BD3#1 = RMul(coeff296B,prod2BD2);
          real prod2BD4#2 = RMul(varAcc2967,prod29AF);
          real basisEval2BD5#2 = RMul(coeff296B,prod2BD4);
          real prod2BD6#2 = RMul(varAcc2967,prod29B2);
          real basisEval2BD7#1 = RMul(coeff296B,prod2BD6);
          real prod2BD8#2 = RMul(varAcc2967,prod29B5);
          real basisEval2BD9#2 = RMul(coeff296B,prod2BD8);
          real prod2BDA#3 = RMul(varAcc2967,prod29B9);
          real basisEval2BDB#1 = RMul(coeff296B,prod2BDA);
          real prod2BDC#3 = RMul(prod2298C,prod2990);
          real basisEval2BDD#1 = RMul(coeff29D6,prod2BDC);
          real prod2BDE#2 = RMul(prod2298C,prod2993);
          real basisEval2BDF#2 = RMul(coeff29D6,prod2BDE);
          real prod2BE0#2 = RMul(prod2298C,prod2996);
          real basisEval2BE1#2 = RMul(coeff29D6,prod2BE0);
          real prod2BE2#3 = RMul(prod2298C,prod299A);
          real basisEval2BE3#1 = RMul(coeff29D6,prod2BE2);
          real prod2BE4#3 = RMul(prod329A8,prod297D);
          real basisEval2BE5#1 = RMul(coeff29D9,prod2BE4);
          real prod2BE6#2 = RMul(prod329A8,prod2980);
          real basisEval2BE7#1 = RMul(coeff29D9,prod2BE6);
          real prod2BE8#3 = RMul(prod329A8,prod2984);
          real basisEval2BE9#1 = RMul(coeff29D9,prod2BE8);
          real prod2BEA#3 = RMul(prod429CF,prod2971);
          real basisEval2BEB#1 = RMul(coeff29E7,prod2BEA);
          real prod2BEC#3 = RMul(prod429CF,prod2975);
          real basisEval2BED#1 = RMul(coeff29E7,prod2BEC);
          real prod52BEF#1 = RMul(prod429CF,varAcc2967);
          real prod2BF0#2 = RMul(prod52BEF,prod296D);
          real basisEval2BF1#1 = RMul(coeff2978,prod2BF0);
          real basisEval2BF6#1 = RMul(one296C,prod2987);
          real basisEval2BFB#1 = RMul(one296C,prod299D);
          real basisEval2BFD#1 = RMul(one296C,prod29A3);
          real basisEval2C04#1 = RMul(one296C,prod29BC);
          real basisEval2C05#1 = RMul(coeff29D6,prod29C0);
          real basisEval2C07#1 = RMul(one296C,prod29C4);
          real basisEval2C08#2 = RMul(coeff296B,prod29C6);
          real basisEval2C09#1 = RMul(one296C,prod29CA);
          real basisEval2C0C#1 = RMul(coeff296B,prod2BC3);
          real basisEval2C0D#1 = RMul(coeff29D6,prod2BC6);
          real basisEval2C0E#1 = RMul(coeff29D9,prod2BC9);
          real basisEval2C0F#1 = RMul(coeff29E7,prod2BCC);
          real basisEval2C10#1 = RMul(coeff2978,prod2BD0);
          real basisEval2C11#1 = RMul(one296C,prod2BD2);
          real basisEval2C12#2 = RMul(coeff29D6,prod2BD6);
          real basisEval2C13#1 = RMul(coeff29D9,prod2BD8);
          real basisEval2C14#1 = RMul(coeff29E7,prod2BDA);
          real basisEval2C15#1 = RMul(one296C,prod2BDC);
          real basisEval2C16#1 = RMul(coeff296B,prod2BDE);
          real basisEval2C17#1 = RMul(coeff29D9,prod2BE2);
          real basisEval2C18#1 = RMul(one296C,prod2BE4);
          real basisEval2C19#2 = RMul(coeff296B,prod2BE6);
          real basisEval2C1A#1 = RMul(coeff29D6,prod2BE8);
          real basisEval2C1B#1 = RMul(one296C,prod2BEA);
          real basisEval2C1C#1 = RMul(coeff296B,prod2BEC);
          real basisEval2C1D#2 = RMul(one296C,prod2BF0);
          real basisEval2C20#1 = RMul(one296C,prod2989);
          real basisEval2C25#1 = RMul(one296C,prod29A1);
          real basisEval2C27#1 = RMul(one296C,prod29A5);
          real basisEval2C2C#1 = RMul(coeff29D6,prod29BE);
          real basisEval2C2D#1 = RMul(one296C,prod29C2);
          real basisEval2C2E#1 = RMul(one296C,prod29C8);
          real basisEval2C30#1 = RMul(one296C,prod29CC);
          real basisEval2C31#1 = RMul(coeff2978,prod2BC0);
          real basisEval2C32#1 = RMul(coeff29E7,prod2BC3);
          real basisEval2C33#1 = RMul(coeff29D9,prod2BC6);
          real basisEval2C34#1 = RMul(coeff29D6,prod2BC9);
          real basisEval2C35#1 = RMul(coeff296B,prod2BCC);
          real basisEval2C36#1 = RMul(coeff29E7,prod2BD2);
          real basisEval2C37#1 = RMul(coeff29D9,prod2BD4);
          real basisEval2C38#1 = RMul(one296C,prod2BDA);
          real basisEval2C39#1 = RMul(coeff29D9,prod2BDC);
          real basisEval2C3A#1 = RMul(coeff296B,prod2BE0);
          real basisEval2C3B#1 = RMul(one296C,prod2BE2);
          real basisEval2C3C#1 = RMul(coeff29D6,prod2BE4);
          real basisEval2C3D#1 = RMul(one296C,prod2BE8);
          real basisEval2C3E#1 = RMul(coeff296B,prod2BEA);
          real basisEval2C3F#1 = RMul(one296C,prod2BEC);
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval29D3,basisEval29F4,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D5,basisEval2B6E,basisEval29F6,basisEval29D8,basisEval29F8,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29DC,basisEval2B81,basisEval2B84,basisEval29FB,basisEval29DF,basisEval2B8C,basisEval29FC,basisEval29E1,basisEval29FE,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29E4,basisEval2B9D,basisEval2BA0,basisEval2BA3,basisEval2A01,basisEval29E9,basisEval2BAB,basisEval2BAD,basisEval2A04,basisEval29ED,basisEval2BB3,basisEval2A06,basisEval29F1,basisEval2A08,basisEval29F3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2BC1,basisEval2BC4,basisEval2BC7,basisEval2BCA,basisEval2BCD,basisEval2BD1,basisEval2BD3,basisEval2BD5,basisEval2BD7,basisEval2BD9,basisEval2BDB,basisEval2BDD,basisEval2BDF,basisEval2BE1,basisEval2BE3,basisEval2BE5,basisEval2BE7,basisEval2BE9,basisEval2BEB,basisEval2BED,basisEval2BF1];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval29D3,basisEval2977,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval29D5,basisEval2982,basisEval29D7,basisEval296A,basisEval2BF6,basisEval29F8,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval29DC,basisEval2995,basisEval29DD,basisEval29DE,basisEval296A,basisEval2BFB,basisEval2B8C,basisEval2A22,basisEval296A,basisEval2BFD,basisEval2A23,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval29E4,basisEval29B1,basisEval29E5,basisEval29E6,basisEval29E8,basisEval296A,basisEval2C04,basisEval2BAB,basisEval2C05,basisEval2A29,basisEval296A,basisEval2C07,basisEval2C08,basisEval2A06,basisEval296A,basisEval2C09,basisEval2A2B,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval2BC1,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2C10,basisEval296A,basisEval2C11,basisEval2BD5,basisEval2C12,basisEval2C13,basisEval2C14,basisEval296A,basisEval2C15,basisEval2C16,basisEval2BE1,basisEval2C17,basisEval296A,basisEval2C18,basisEval2C19,basisEval2C1A,basisEval296A,basisEval2C1B,basisEval2C1C,basisEval296A,basisEval2C1D,basisEval296A];
          tensor[84] intermediateCons2C42#1 = <tensor[84]>[basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval2973,basisEval29F4,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval29F5,basisEval2982,basisEval29F6,basisEval296A,basisEval29D8,basisEval2C20,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval29F9,basisEval29FA,basisEval2998,basisEval29FB,basisEval296A,basisEval2A21,basisEval2B8C,basisEval2C25,basisEval296A,basisEval2A11,basisEval2C27,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval29FF,basisEval2A00,basisEval29E5,basisEval29B7,basisEval2A01,basisEval296A,basisEval2A28,basisEval2C2C,basisEval2BAD,basisEval2C2D,basisEval296A,basisEval29ED,basisEval2C08,basisEval2C2E,basisEval296A,basisEval2A1A,basisEval2C30,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2C35,basisEval2BD1,basisEval296A,basisEval2C36,basisEval2C37,basisEval2C12,basisEval2BD9,basisEval2C38,basisEval296A,basisEval2C39,basisEval2BDF,basisEval2C3A,basisEval2C3B,basisEval296A,basisEval2C3C,basisEval2C19,basisEval2C3D,basisEval296A,basisEval2C3E,basisEval2C3F,basisEval296A,basisEval2C1D,basisEval296A,basisEval296A];
          real vdot2D37#1 = VDot<84>(dofs2813,intermediateCons2C40);
          real vdot2D39#1 = VDot<84>(dofs2813,intermediateCons2C41);
          real vdot2D3B#1 = VDot<84>(dofs2813,intermediateCons2C42);
          tensor[3] probe_l_62D35#2 = <tensor[3]>[vdot2D37,vdot2D39,vdot2D3B];
          real op1_e3_l_82D44#1 = VDot<3>(probe_l_62D35,probe_l_62D35);
          real op1_e3_l_92D47#1 = Sqrt(op1_e3_l_82D44);
          real op1_e3_l_102D4A#1 = RNeg(_t2B51);
          real op1_e3_l_112D4D#1 = RAdd(fBias2484,op1_e3_l_92D47);
          real _t2D50#1 = RDiv(op1_e3_l_102D4A,op1_e3_l_112D4D);
          bool _t2D53#1 = GT<real>(_t2D50,fStrTh2480);
          if _t2D53 then goto ASSIGN499B else goto ASSIGN46AD
        ASSIGN499B:  preds = [COND2D55]
          bool _t2D58#1 = GTE<real>(one296C,fMaskTh2482);
          if _t2D58 then goto ASSIGN2D5C else goto ASSIGN46AC
        ASSIGN2D5C:  preds = [COND2D5A]
          bool _t2D5B#1 = true;
          goto JOIN2D5F
        JOIN2D5F:  preds = [ASSIGN2D5C,ASSIGN46AC]
          bool _t2D5D#1 = phi(_t2D5B,_t2D5E)
          goto JOIN2D62
        JOIN2D62:  preds = [JOIN2D5F,ASSIGN46AD]
          bool _t2D60#1 = phi(_t2D5D,_t2D61)
          goto JOIN2D65
        JOIN2D65:  preds = [JOIN2D62,ASSIGN46AE]
          bool _t2D63#1 = phi(_t2D60,_t2D64)
          bool _t2D66#1 = BNot(_t2D63);
          if _t2D66 then goto SAVE2D69 else goto JOIN2D6B
        SAVE2D69:  preds = [COND2D68]
          self.rayN = rayN24AC;
          active
          goto JOIN2D6B
        JOIN2D6B:  preds = [*ACTIVE2D6A,COND2D68]
          bool _t2D6C#1 = BNot(analytical248E);
          if _t2D6C then goto ASSIGN2E6F else goto ASSIGN3EA1
        ASSIGN2E6F:  preds = [COND2D6E]
          int ilit2D70#1 = 84;
          int mulRes2D71#84 = IMul(_t246C,ilit2D70);
          int idx2D74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,mulRes2D71);
          int ilit2D75#87 = 1;
          int addRes2D76#1 = IAdd(mulRes2D71,ilit2D75);
          int idx2D77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D76);
          int ilit2D78#3 = 2;
          int addRes2D79#1 = IAdd(mulRes2D71,ilit2D78);
          int idx2D7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D79);
          int ilit2D7B#1 = 3;
          int addRes2D7C#1 = IAdd(mulRes2D71,ilit2D7B);
          int idx2D7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7C);
          int ilit2D7E#1 = 4;
          int addRes2D7F#1 = IAdd(mulRes2D71,ilit2D7E);
          int idx2D80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7F);
          int ilit2D81#1 = 5;
          int addRes2D82#1 = IAdd(mulRes2D71,ilit2D81);
          int idx2D83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D82);
          int ilit2D84#1 = 6;
          int addRes2D85#1 = IAdd(mulRes2D71,ilit2D84);
          int idx2D86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D85);
          int ilit2D87#1 = 7;
          int addRes2D88#1 = IAdd(mulRes2D71,ilit2D87);
          int idx2D89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D88);
          int ilit2D8A#1 = 8;
          int addRes2D8B#1 = IAdd(mulRes2D71,ilit2D8A);
          int idx2D8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8B);
          int ilit2D8D#1 = 9;
          int addRes2D8E#1 = IAdd(mulRes2D71,ilit2D8D);
          int idx2D8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8E);
          int ilit2D90#1 = 10;
          int addRes2D91#1 = IAdd(mulRes2D71,ilit2D90);
          int idx2D92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D91);
          int ilit2D93#1 = 11;
          int addRes2D94#1 = IAdd(mulRes2D71,ilit2D93);
          int idx2D95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D94);
          int ilit2D96#1 = 12;
          int addRes2D97#1 = IAdd(mulRes2D71,ilit2D96);
          int idx2D98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D97);
          int ilit2D99#1 = 13;
          int addRes2D9A#1 = IAdd(mulRes2D71,ilit2D99);
          int idx2D9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9A);
          int ilit2D9C#1 = 14;
          int addRes2D9D#1 = IAdd(mulRes2D71,ilit2D9C);
          int idx2D9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9D);
          int ilit2D9F#1 = 15;
          int addRes2DA0#1 = IAdd(mulRes2D71,ilit2D9F);
          int idx2DA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA0);
          int ilit2DA2#1 = 16;
          int addRes2DA3#1 = IAdd(mulRes2D71,ilit2DA2);
          int idx2DA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA3);
          int ilit2DA5#1 = 17;
          int addRes2DA6#1 = IAdd(mulRes2D71,ilit2DA5);
          int idx2DA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA6);
          int ilit2DA8#1 = 18;
          int addRes2DA9#1 = IAdd(mulRes2D71,ilit2DA8);
          int idx2DAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA9);
          int ilit2DAB#1 = 19;
          int addRes2DAC#1 = IAdd(mulRes2D71,ilit2DAB);
          int idx2DAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAC);
          int ilit2DAE#1 = 20;
          int addRes2DAF#1 = IAdd(mulRes2D71,ilit2DAE);
          int idx2DB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAF);
          int ilit2DB1#1 = 21;
          int addRes2DB2#1 = IAdd(mulRes2D71,ilit2DB1);
          int idx2DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB2);
          int ilit2DB4#1 = 22;
          int addRes2DB5#1 = IAdd(mulRes2D71,ilit2DB4);
          int idx2DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB5);
          int ilit2DB7#1 = 23;
          int addRes2DB8#1 = IAdd(mulRes2D71,ilit2DB7);
          int idx2DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB8);
          int ilit2DBA#1 = 24;
          int addRes2DBB#1 = IAdd(mulRes2D71,ilit2DBA);
          int idx2DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBB);
          int ilit2DBD#1 = 25;
          int addRes2DBE#1 = IAdd(mulRes2D71,ilit2DBD);
          int idx2DBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBE);
          int ilit2DC0#1 = 26;
          int addRes2DC1#1 = IAdd(mulRes2D71,ilit2DC0);
          int idx2DC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC1);
          int ilit2DC3#1 = 27;
          int addRes2DC4#1 = IAdd(mulRes2D71,ilit2DC3);
          int idx2DC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC4);
          int ilit2DC6#1 = 28;
          int addRes2DC7#1 = IAdd(mulRes2D71,ilit2DC6);
          int idx2DC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC7);
          int ilit2DC9#1 = 29;
          int addRes2DCA#1 = IAdd(mulRes2D71,ilit2DC9);
          int idx2DCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCA);
          int ilit2DCC#1 = 30;
          int addRes2DCD#1 = IAdd(mulRes2D71,ilit2DCC);
          int idx2DCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCD);
          int ilit2DCF#1 = 31;
          int addRes2DD0#1 = IAdd(mulRes2D71,ilit2DCF);
          int idx2DD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD0);
          int ilit2DD2#1 = 32;
          int addRes2DD3#1 = IAdd(mulRes2D71,ilit2DD2);
          int idx2DD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD3);
          int ilit2DD5#1 = 33;
          int addRes2DD6#1 = IAdd(mulRes2D71,ilit2DD5);
          int idx2DD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD6);
          int ilit2DD8#1 = 34;
          int addRes2DD9#1 = IAdd(mulRes2D71,ilit2DD8);
          int idx2DDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD9);
          int ilit2DDB#1 = 35;
          int addRes2DDC#1 = IAdd(mulRes2D71,ilit2DDB);
          int idx2DDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDC);
          int ilit2DDE#1 = 36;
          int addRes2DDF#1 = IAdd(mulRes2D71,ilit2DDE);
          int idx2DE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDF);
          int ilit2DE1#1 = 37;
          int addRes2DE2#1 = IAdd(mulRes2D71,ilit2DE1);
          int idx2DE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE2);
          int ilit2DE4#1 = 38;
          int addRes2DE5#1 = IAdd(mulRes2D71,ilit2DE4);
          int idx2DE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE5);
          int ilit2DE7#1 = 39;
          int addRes2DE8#1 = IAdd(mulRes2D71,ilit2DE7);
          int idx2DE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE8);
          int ilit2DEA#1 = 40;
          int addRes2DEB#1 = IAdd(mulRes2D71,ilit2DEA);
          int idx2DEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEB);
          int ilit2DED#1 = 41;
          int addRes2DEE#1 = IAdd(mulRes2D71,ilit2DED);
          int idx2DEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEE);
          int ilit2DF0#1 = 42;
          int addRes2DF1#1 = IAdd(mulRes2D71,ilit2DF0);
          int idx2DF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF1);
          int ilit2DF3#1 = 43;
          int addRes2DF4#1 = IAdd(mulRes2D71,ilit2DF3);
          int idx2DF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF4);
          int ilit2DF6#1 = 44;
          int addRes2DF7#1 = IAdd(mulRes2D71,ilit2DF6);
          int idx2DF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF7);
          int ilit2DF9#1 = 45;
          int addRes2DFA#1 = IAdd(mulRes2D71,ilit2DF9);
          int idx2DFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFA);
          int ilit2DFC#1 = 46;
          int addRes2DFD#1 = IAdd(mulRes2D71,ilit2DFC);
          int idx2DFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFD);
          int ilit2DFF#1 = 47;
          int addRes2E00#1 = IAdd(mulRes2D71,ilit2DFF);
          int idx2E01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E00);
          int ilit2E02#1 = 48;
          int addRes2E03#1 = IAdd(mulRes2D71,ilit2E02);
          int idx2E04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E03);
          int ilit2E05#1 = 49;
          int addRes2E06#1 = IAdd(mulRes2D71,ilit2E05);
          int idx2E07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E06);
          int ilit2E08#1 = 50;
          int addRes2E09#1 = IAdd(mulRes2D71,ilit2E08);
          int idx2E0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E09);
          int ilit2E0B#1 = 51;
          int addRes2E0C#1 = IAdd(mulRes2D71,ilit2E0B);
          int idx2E0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0C);
          int ilit2E0E#1 = 52;
          int addRes2E0F#1 = IAdd(mulRes2D71,ilit2E0E);
          int idx2E10#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0F);
          int ilit2E11#1 = 53;
          int addRes2E12#1 = IAdd(mulRes2D71,ilit2E11);
          int idx2E13#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E12);
          int ilit2E14#1 = 54;
          int addRes2E15#1 = IAdd(mulRes2D71,ilit2E14);
          int idx2E16#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E15);
          int ilit2E17#1 = 55;
          int addRes2E18#1 = IAdd(mulRes2D71,ilit2E17);
          int idx2E19#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E18);
          int ilit2E1A#1 = 56;
          int addRes2E1B#1 = IAdd(mulRes2D71,ilit2E1A);
          int idx2E1C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1B);
          int ilit2E1D#1 = 57;
          int addRes2E1E#1 = IAdd(mulRes2D71,ilit2E1D);
          int idx2E1F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1E);
          int ilit2E20#1 = 58;
          int addRes2E21#1 = IAdd(mulRes2D71,ilit2E20);
          int idx2E22#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E21);
          int ilit2E23#1 = 59;
          int addRes2E24#1 = IAdd(mulRes2D71,ilit2E23);
          int idx2E25#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E24);
          int ilit2E26#1 = 60;
          int addRes2E27#1 = IAdd(mulRes2D71,ilit2E26);
          int idx2E28#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E27);
          int ilit2E29#1 = 61;
          int addRes2E2A#1 = IAdd(mulRes2D71,ilit2E29);
          int idx2E2B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2A);
          int ilit2E2C#1 = 62;
          int addRes2E2D#1 = IAdd(mulRes2D71,ilit2E2C);
          int idx2E2E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2D);
          int ilit2E2F#1 = 63;
          int addRes2E30#1 = IAdd(mulRes2D71,ilit2E2F);
          int idx2E31#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E30);
          int ilit2E32#1 = 64;
          int addRes2E33#1 = IAdd(mulRes2D71,ilit2E32);
          int idx2E34#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E33);
          int ilit2E35#1 = 65;
          int addRes2E36#1 = IAdd(mulRes2D71,ilit2E35);
          int idx2E37#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E36);
          int ilit2E38#1 = 66;
          int addRes2E39#1 = IAdd(mulRes2D71,ilit2E38);
          int idx2E3A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E39);
          int ilit2E3B#1 = 67;
          int addRes2E3C#1 = IAdd(mulRes2D71,ilit2E3B);
          int idx2E3D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3C);
          int ilit2E3E#1 = 68;
          int addRes2E3F#1 = IAdd(mulRes2D71,ilit2E3E);
          int idx2E40#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3F);
          int ilit2E41#1 = 69;
          int addRes2E42#1 = IAdd(mulRes2D71,ilit2E41);
          int idx2E43#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E42);
          int ilit2E44#1 = 70;
          int addRes2E45#1 = IAdd(mulRes2D71,ilit2E44);
          int idx2E46#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E45);
          int ilit2E47#1 = 71;
          int addRes2E48#1 = IAdd(mulRes2D71,ilit2E47);
          int idx2E49#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E48);
          int ilit2E4A#1 = 72;
          int addRes2E4B#1 = IAdd(mulRes2D71,ilit2E4A);
          int idx2E4C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4B);
          int ilit2E4D#1 = 73;
          int addRes2E4E#1 = IAdd(mulRes2D71,ilit2E4D);
          int idx2E4F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4E);
          int ilit2E50#1 = 74;
          int addRes2E51#1 = IAdd(mulRes2D71,ilit2E50);
          int idx2E52#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E51);
          int ilit2E53#1 = 75;
          int addRes2E54#1 = IAdd(mulRes2D71,ilit2E53);
          int idx2E55#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E54);
          int ilit2E56#1 = 76;
          int addRes2E57#1 = IAdd(mulRes2D71,ilit2E56);
          int idx2E58#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E57);
          int ilit2E59#1 = 77;
          int addRes2E5A#1 = IAdd(mulRes2D71,ilit2E59);
          int idx2E5B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5A);
          int ilit2E5C#1 = 78;
          int addRes2E5D#1 = IAdd(mulRes2D71,ilit2E5C);
          int idx2E5E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5D);
          int ilit2E5F#1 = 79;
          int addRes2E60#1 = IAdd(mulRes2D71,ilit2E5F);
          int idx2E61#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E60);
          int ilit2E62#1 = 80;
          int addRes2E63#1 = IAdd(mulRes2D71,ilit2E62);
          int idx2E64#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E63);
          int ilit2E65#1 = 81;
          int addRes2E66#1 = IAdd(mulRes2D71,ilit2E65);
          int idx2E67#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E66);
          int ilit2E68#1 = 82;
          int addRes2E69#1 = IAdd(mulRes2D71,ilit2E68);
          int idx2E6A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E69);
          int ilit2E6B#1 = 83;
          int addRes2E6C#1 = IAdd(mulRes2D71,ilit2E6B);
          int idx2E6D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E6C);
          int mulRes2F73#1 = IMul(ilit2D75,idx2D74);
          int mulRes2F75#1 = IMul(ilit2D75,idx2D77);
          int mulRes2F78#1 = IMul(ilit2D75,idx2D7A);
          int mulRes2F7B#1 = IMul(ilit2D75,idx2D7D);
          int mulRes2F7E#1 = IMul(ilit2D75,idx2D80);
          int mulRes2F81#1 = IMul(ilit2D75,idx2D83);
          int mulRes2F84#1 = IMul(ilit2D75,idx2D86);
          int mulRes2F87#1 = IMul(ilit2D75,idx2D89);
          int mulRes2F8A#1 = IMul(ilit2D75,idx2D8C);
          int mulRes2F8D#1 = IMul(ilit2D75,idx2D8F);
          int mulRes2F90#1 = IMul(ilit2D75,idx2D92);
          int mulRes2F93#1 = IMul(ilit2D75,idx2D95);
          int mulRes2F96#1 = IMul(ilit2D75,idx2D98);
          int mulRes2F99#1 = IMul(ilit2D75,idx2D9B);
          int mulRes2F9C#1 = IMul(ilit2D75,idx2D9E);
          int mulRes2F9F#1 = IMul(ilit2D75,idx2DA1);
          int mulRes2FA2#1 = IMul(ilit2D75,idx2DA4);
          int mulRes2FA5#1 = IMul(ilit2D75,idx2DA7);
          int mulRes2FA8#1 = IMul(ilit2D75,idx2DAA);
          int mulRes2FAB#1 = IMul(ilit2D75,idx2DAD);
          int mulRes2FAE#1 = IMul(ilit2D75,idx2DB0);
          int mulRes2FB1#1 = IMul(ilit2D75,idx2DB3);
          int mulRes2FB4#1 = IMul(ilit2D75,idx2DB6);
          int mulRes2FB7#1 = IMul(ilit2D75,idx2DB9);
          int mulRes2FBA#1 = IMul(ilit2D75,idx2DBC);
          int mulRes2FBD#1 = IMul(ilit2D75,idx2DBF);
          int mulRes2FC0#1 = IMul(ilit2D75,idx2DC2);
          int mulRes2FC3#1 = IMul(ilit2D75,idx2DC5);
          int mulRes2FC6#1 = IMul(ilit2D75,idx2DC8);
          int mulRes2FC9#1 = IMul(ilit2D75,idx2DCB);
          int mulRes2FCC#1 = IMul(ilit2D75,idx2DCE);
          int mulRes2FCF#1 = IMul(ilit2D75,idx2DD1);
          int mulRes2FD2#1 = IMul(ilit2D75,idx2DD4);
          int mulRes2FD5#1 = IMul(ilit2D75,idx2DD7);
          int mulRes2FD8#1 = IMul(ilit2D75,idx2DDA);
          int mulRes2FDB#1 = IMul(ilit2D75,idx2DDD);
          int mulRes2FDE#1 = IMul(ilit2D75,idx2DE0);
          int mulRes2FE1#1 = IMul(ilit2D75,idx2DE3);
          int mulRes2FE4#1 = IMul(ilit2D75,idx2DE6);
          int mulRes2FE7#1 = IMul(ilit2D75,idx2DE9);
          int mulRes2FEA#1 = IMul(ilit2D75,idx2DEC);
          int mulRes2FED#1 = IMul(ilit2D75,idx2DEF);
          int mulRes2FF0#1 = IMul(ilit2D75,idx2DF2);
          int mulRes2FF3#1 = IMul(ilit2D75,idx2DF5);
          int mulRes2FF6#1 = IMul(ilit2D75,idx2DF8);
          int mulRes2FF9#1 = IMul(ilit2D75,idx2DFB);
          int mulRes2FFC#1 = IMul(ilit2D75,idx2DFE);
          int mulRes2FFF#1 = IMul(ilit2D75,idx2E01);
          int mulRes3002#1 = IMul(ilit2D75,idx2E04);
          int mulRes3005#1 = IMul(ilit2D75,idx2E07);
          int mulRes3008#1 = IMul(ilit2D75,idx2E0A);
          int mulRes300B#1 = IMul(ilit2D75,idx2E0D);
          int mulRes300E#1 = IMul(ilit2D75,idx2E10);
          int mulRes3011#1 = IMul(ilit2D75,idx2E13);
          int mulRes3014#1 = IMul(ilit2D75,idx2E16);
          int mulRes3017#1 = IMul(ilit2D75,idx2E19);
          int mulRes301A#1 = IMul(ilit2D75,idx2E1C);
          int mulRes301D#1 = IMul(ilit2D75,idx2E1F);
          int mulRes3020#1 = IMul(ilit2D75,idx2E22);
          int mulRes3023#1 = IMul(ilit2D75,idx2E25);
          int mulRes3026#1 = IMul(ilit2D75,idx2E28);
          int mulRes3029#1 = IMul(ilit2D75,idx2E2B);
          int mulRes302C#1 = IMul(ilit2D75,idx2E2E);
          int mulRes302F#1 = IMul(ilit2D75,idx2E31);
          int mulRes3032#1 = IMul(ilit2D75,idx2E34);
          int mulRes3035#1 = IMul(ilit2D75,idx2E37);
          int mulRes3038#1 = IMul(ilit2D75,idx2E3A);
          int mulRes303B#1 = IMul(ilit2D75,idx2E3D);
          int mulRes303E#1 = IMul(ilit2D75,idx2E40);
          int mulRes3041#1 = IMul(ilit2D75,idx2E43);
          int mulRes3044#1 = IMul(ilit2D75,idx2E46);
          int mulRes3047#1 = IMul(ilit2D75,idx2E49);
          int mulRes304A#1 = IMul(ilit2D75,idx2E4C);
          int mulRes304D#1 = IMul(ilit2D75,idx2E4F);
          int mulRes3050#1 = IMul(ilit2D75,idx2E52);
          int mulRes3053#1 = IMul(ilit2D75,idx2E55);
          int mulRes3056#1 = IMul(ilit2D75,idx2E58);
          int mulRes3059#1 = IMul(ilit2D75,idx2E5B);
          int mulRes305C#1 = IMul(ilit2D75,idx2E5E);
          int mulRes305F#1 = IMul(ilit2D75,idx2E61);
          int mulRes3062#1 = IMul(ilit2D75,idx2E64);
          int mulRes3065#1 = IMul(ilit2D75,idx2E67);
          int mulRes3068#1 = IMul(ilit2D75,idx2E6A);
          int mulRes306B#1 = IMul(ilit2D75,idx2E6D);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F73);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F75);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F78);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7B);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7E);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F81);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F84);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F87);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8A);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8D);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F90);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F93);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F96);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F99);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9C);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9F);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA2);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA5);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA8);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAB);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAE);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB1);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB4);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB7);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBA);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBD);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC0);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC3);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC6);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC9);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCC);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCF);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD2);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD5);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD8);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDB);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDE);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE1);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE4);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE7);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FEA);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FED);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF0);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF3);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF6);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF9);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFC);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFF);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3002);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3005);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3008);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300B);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300E);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3011);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3014);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3017);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301A);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301D);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3020);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3023);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3026);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3029);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302C);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302F);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3032);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3035);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3038);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303B);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303E);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3041);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3044);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3047);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304A);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304D);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3050);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3053);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3056);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3059);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305C);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305F);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3062);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3065);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3068);
          real dof30BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes306B);
          tensor[84] dofs30C0#9 = <tensor[84]>[dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE,dof30BF];
          real varAcc3214#20 = VIndex<3,0>(pos24B8);
          real varAcc3215#10 = VIndex<3,1>(pos24B8);
          real varAcc3216#10 = VIndex<3,2>(pos24B8);
          real basisEval3217#378 = 0.e0;
          real coeff3218#47 = 0.2e1;
          real one3219#79 = 0.1e1;
          real prod321A#6 = RMul(one3219,one3219);
          real prod321B#2 = RMul(one3219,prod321A);
          real basisEval321C#3 = RMul(coeff3218,prod321B);
          real prod321E#5 = RMul(one3219,varAcc3216);
          real prod321F#3 = RMul(one3219,prod321E);
          real basisEval3220#5 = RMul(coeff3218,prod321F);
          real prod3222#5 = RMul(varAcc3215,one3219);
          real prod3223#3 = RMul(one3219,prod3222);
          real basisEval3224#5 = RMul(coeff3218,prod3223);
          real coeff3225#25 = 0.6e1;
          real prod3227#3 = RMul(varAcc3214,prod321A);
          real basisEval3228#1 = RMul(coeff3225,prod3227);
          real prod23229#5 = RMul(varAcc3216,varAcc3216);
          real prod322A#4 = RMul(one3219,prod23229);
          real prod322B#4 = RMul(one3219,prod322A);
          real basisEval322C#2 = RMul(coeff3218,prod322B);
          real prod322D#4 = RMul(varAcc3215,varAcc3216);
          real prod322E#4 = RMul(one3219,prod322D);
          real basisEval322F#5 = RMul(coeff3218,prod322E);
          real prod23230#5 = RMul(varAcc3215,varAcc3215);
          real prod3231#4 = RMul(prod23230,one3219);
          real prod3232#4 = RMul(one3219,prod3231);
          real basisEval3233#2 = RMul(coeff3218,prod3232);
          real prod3234#4 = RMul(varAcc3214,prod321E);
          real basisEval3235#2 = RMul(coeff3225,prod3234);
          real prod3236#4 = RMul(varAcc3214,prod3222);
          real basisEval3237#2 = RMul(coeff3225,prod3236);
          real coeff3238#15 = 0.12e2;
          real prod23239#11 = RMul(varAcc3214,varAcc3214);
          real prod323A#4 = RMul(prod23239,prod321A);
          real basisEval323B#1 = RMul(coeff3238,prod323A);
          real prod3323C#4 = RMul(prod23229,varAcc3216);
          real prod323D#3 = RMul(one3219,prod3323C);
          real prod323E#4 = RMul(one3219,prod323D);
          real basisEval323F#2 = RMul(coeff3218,prod323E);
          real prod3240#3 = RMul(varAcc3215,prod23229);
          real prod3241#5 = RMul(one3219,prod3240);
          real basisEval3242#3 = RMul(coeff3218,prod3241);
          real prod3243#3 = RMul(prod23230,varAcc3216);
          real prod3244#5 = RMul(one3219,prod3243);
          real basisEval3245#3 = RMul(coeff3218,prod3244);
          real prod33246#4 = RMul(prod23230,varAcc3215);
          real prod3247#3 = RMul(prod33246,one3219);
          real prod3248#4 = RMul(one3219,prod3247);
          real basisEval3249#2 = RMul(coeff3218,prod3248);
          real prod324A#5 = RMul(varAcc3214,prod322A);
          real basisEval324B#2 = RMul(coeff3225,prod324A);
          real prod324C#3 = RMul(varAcc3214,prod322D);
          real basisEval324D#3 = RMul(coeff3225,prod324C);
          real prod324E#5 = RMul(varAcc3214,prod3231);
          real basisEval324F#2 = RMul(coeff3225,prod324E);
          real prod3250#5 = RMul(prod23239,prod321E);
          real basisEval3251#1 = RMul(coeff3238,prod3250);
          real prod3252#5 = RMul(prod23239,prod3222);
          real basisEval3253#1 = RMul(coeff3238,prod3252);
          real coeff3254#9 = 0.20e2;
          real prod33255#7 = RMul(prod23239,varAcc3214);
          real prod3256#4 = RMul(prod33255,prod321A);
          real basisEval3257#1 = RMul(coeff3254,prod3256);
          real prod43258#3 = RMul(prod3323C,varAcc3216);
          real prod3259#2 = RMul(one3219,prod43258);
          real prod325A#4 = RMul(one3219,prod3259);
          real basisEval325B#2 = RMul(coeff3218,prod325A);
          real prod325C#2 = RMul(varAcc3215,prod3323C);
          real prod325D#6 = RMul(one3219,prod325C);
          real basisEval325E#3 = RMul(coeff3218,prod325D);
          real prod325F#2 = RMul(prod23230,prod23229);
          real prod3260#5 = RMul(one3219,prod325F);
          real basisEval3261#1 = RMul(coeff3218,prod3260);
          real prod3262#2 = RMul(prod33246,varAcc3216);
          real prod3263#6 = RMul(one3219,prod3262);
          real basisEval3264#3 = RMul(coeff3218,prod3263);
          real prod43265#3 = RMul(prod33246,varAcc3215);
          real prod3266#2 = RMul(prod43265,one3219);
          real prod3267#4 = RMul(one3219,prod3266);
          real basisEval3268#2 = RMul(coeff3218,prod3267);
          real prod3269#6 = RMul(varAcc3214,prod323D);
          real basisEval326A#1 = RMul(coeff3225,prod3269);
          real prod326B#5 = RMul(varAcc3214,prod3240);
          real basisEval326C#4 = RMul(coeff3225,prod326B);
          real prod326D#5 = RMul(varAcc3214,prod3243);
          real basisEval326E#4 = RMul(coeff3225,prod326D);
          real prod326F#6 = RMul(varAcc3214,prod3247);
          real basisEval3270#1 = RMul(coeff3225,prod326F);
          real prod3271#5 = RMul(prod23239,prod322A);
          real basisEval3272#2 = RMul(coeff3238,prod3271);
          real prod3273#5 = RMul(prod23239,prod322D);
          real basisEval3274#1 = RMul(coeff3238,prod3273);
          real prod3275#5 = RMul(prod23239,prod3231);
          real basisEval3276#2 = RMul(coeff3238,prod3275);
          real prod3277#6 = RMul(prod33255,prod321E);
          real basisEval3278#1 = RMul(coeff3254,prod3277);
          real prod3279#6 = RMul(prod33255,prod3222);
          real basisEval327A#1 = RMul(coeff3254,prod3279);
          real coeff327B#3 = 0.30e2;
          real prod4327C#4 = RMul(prod33255,varAcc3214);
          real prod327D#4 = RMul(prod4327C,prod321A);
          real basisEval327E#1 = RMul(coeff327B,prod327D);
          real basisEval327F#6 = RMul(one3219,prod321B);
          real basisEval3280#3 = RMul(one3219,prod321F);
          real basisEval3281#5 = RMul(coeff3218,prod3227);
          real basisEval3282#3 = RMul(one3219,prod322B);
          real coeff3283#24 = 0.3e1;
          real basisEval3284#3 = RMul(coeff3283,prod3232);
          real basisEval3285#5 = RMul(coeff3218,prod3234);
          real coeff3286#25 = 0.4e1;
          real basisEval3287#1 = RMul(coeff3286,prod3236);
          real basisEval3288#3 = RMul(coeff3283,prod323A);
          real basisEval3289#3 = RMul(one3219,prod323E);
          real basisEval328A#2 = RMul(coeff3283,prod3244);
          real basisEval328B#3 = RMul(coeff3286,prod3248);
          real basisEval328C#3 = RMul(coeff3218,prod324A);
          real basisEval328D#3 = RMul(coeff3286,prod324C);
          real basisEval328E#2 = RMul(coeff3283,prod3250);
          real basisEval328F#2 = RMul(coeff3225,prod3252);
          real basisEval3290#3 = RMul(coeff3286,prod3256);
          real basisEval3291#3 = RMul(one3219,prod325A);
          real basisEval3292#4 = RMul(coeff3283,prod3260);
          real basisEval3293#2 = RMul(coeff3286,prod3263);
          real coeff3294#9 = 0.5e1;
          real basisEval3295#3 = RMul(coeff3294,prod3267);
          real basisEval3296#3 = RMul(coeff3218,prod3269);
          real basisEval3297#1 = RMul(coeff3286,prod326B);
          real coeff3298#6 = 0.8e1;
          real basisEval3299#1 = RMul(coeff3298,prod326F);
          real basisEval329A#4 = RMul(coeff3283,prod3271);
          real basisEval329B#4 = RMul(coeff3225,prod3273);
          real coeff329C#3 = 0.9e1;
          real basisEval329D#1 = RMul(coeff329C,prod3275);
          real basisEval329E#2 = RMul(coeff3286,prod3277);
          real basisEval329F#1 = RMul(coeff3298,prod3279);
          real basisEval32A0#3 = RMul(coeff3294,prod327D);
          real basisEval32A1#3 = RMul(one3219,prod3223);
          real basisEval32A2#3 = RMul(coeff3283,prod322B);
          real basisEval32A3#3 = RMul(one3219,prod3232);
          real basisEval32A4#1 = RMul(coeff3286,prod3234);
          real basisEval32A5#5 = RMul(coeff3218,prod3236);
          real basisEval32A6#3 = RMul(coeff3286,prod323E);
          real basisEval32A7#2 = RMul(coeff3283,prod3241);
          real basisEval32A8#3 = RMul(one3219,prod3248);
          real basisEval32A9#3 = RMul(coeff3218,prod324E);
          real basisEval32AA#2 = RMul(coeff3225,prod3250);
          real basisEval32AB#2 = RMul(coeff3283,prod3252);
          real basisEval32AC#3 = RMul(coeff3294,prod325A);
          real basisEval32AD#2 = RMul(coeff3286,prod325D);
          real basisEval32AE#3 = RMul(one3219,prod3267);
          real basisEval32AF#1 = RMul(coeff3298,prod3269);
          real basisEval32B0#1 = RMul(coeff3286,prod326D);
          real basisEval32B1#3 = RMul(coeff3218,prod326F);
          real basisEval32B2#1 = RMul(coeff329C,prod3271);
          real basisEval32B3#4 = RMul(coeff3283,prod3275);
          real basisEval32B4#1 = RMul(coeff3298,prod3277);
          real basisEval32B5#2 = RMul(coeff3286,prod3279);
          real basisEval32B6#1 = RMul(coeff3225,prod3223);
          real basisEval32B7#2 = RMul(coeff3225,prod322E);
          real basisEval32B8#1 = RMul(coeff3238,prod3232);
          real basisEval32B9#2 = RMul(coeff3218,prod323A);
          real basisEval32BA#2 = RMul(coeff3225,prod3241);
          real basisEval32BB#1 = RMul(coeff3238,prod3244);
          real basisEval32BC#1 = RMul(coeff3254,prod3248);
          real basisEval32BD#1 = RMul(coeff3238,prod324E);
          real basisEval32BE#3 = RMul(coeff3218,prod3250);
          real basisEval32BF#2 = RMul(coeff3218,prod3256);
          real basisEval32C0#1 = RMul(coeff3225,prod325D);
          real basisEval32C1#2 = RMul(coeff3238,prod3260);
          real basisEval32C2#1 = RMul(coeff3254,prod3263);
          real basisEval32C3#1 = RMul(coeff327B,prod3267);
          real basisEval32C4#1 = RMul(coeff3238,prod326D);
          real basisEval32C5#1 = RMul(coeff3254,prod326F);
          real basisEval32C6#1 = RMul(coeff3218,prod3271);
          real basisEval32C7#3 = RMul(coeff3218,prod3277);
          real basisEval32C8#1 = RMul(coeff3225,prod3279);
          real basisEval32C9#2 = RMul(coeff3218,prod327D);
          real basisEval32CA#3 = RMul(one3219,prod3227);
          real basisEval32CB#1 = RMul(coeff3286,prod322E);
          real basisEval32CC#3 = RMul(one3219,prod323A);
          real basisEval32CD#2 = RMul(coeff3225,prod3244);
          real basisEval32CE#2 = RMul(coeff3283,prod324A);
          real basisEval32CF#2 = RMul(coeff3283,prod324E);
          real basisEval32D0#3 = RMul(coeff3218,prod3252);
          real basisEval32D1#3 = RMul(one3219,prod3256);
          real basisEval32D2#1 = RMul(coeff3298,prod325D);
          real basisEval32D3#1 = RMul(coeff329C,prod3260);
          real basisEval32D4#1 = RMul(coeff3298,prod3263);
          real basisEval32D5#2 = RMul(coeff3286,prod3269);
          real basisEval32D6#2 = RMul(coeff3286,prod326F);
          real basisEval32D7#1 = RMul(coeff3286,prod3273);
          real basisEval32D8#3 = RMul(coeff3218,prod3279);
          real basisEval32D9#3 = RMul(one3219,prod327D);
          real basisEval32DA#1 = RMul(coeff3225,prod321F);
          real basisEval32DB#1 = RMul(coeff3238,prod322B);
          real basisEval32DC#1 = RMul(coeff3254,prod323E);
          real basisEval32DD#1 = RMul(coeff3238,prod3241);
          real basisEval32DE#1 = RMul(coeff3238,prod324A);
          real basisEval32DF#1 = RMul(coeff327B,prod325A);
          real basisEval32E0#1 = RMul(coeff3254,prod325D);
          real basisEval32E1#1 = RMul(coeff3225,prod3263);
          real basisEval32E2#1 = RMul(coeff3254,prod3269);
          real basisEval32E3#1 = RMul(coeff3238,prod326B);
          real basisEval32E4#1 = RMul(coeff3218,prod3275);
          real basisEval32E5#1 = RMul(coeff3225,prod3277);
          tensor[84] intermediateCons32E6#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3228,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval322F,basisEval3233,basisEval3235,basisEval3237,basisEval323B,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval3242,basisEval3245,basisEval3249,basisEval324B,basisEval324D,basisEval324F,basisEval3251,basisEval3253,basisEval3257,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval325E,basisEval3261,basisEval3264,basisEval3268,basisEval326A,basisEval326C,basisEval326E,basisEval3270,basisEval3272,basisEval3274,basisEval3276,basisEval3278,basisEval327A,basisEval327E];
          tensor[84] intermediateCons32E7#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3280,basisEval3224,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3282,basisEval322F,basisEval3284,basisEval3217,basisEval3285,basisEval3287,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3289,basisEval3242,basisEval328A,basisEval328B,basisEval3217,basisEval328C,basisEval328D,basisEval324F,basisEval3217,basisEval328E,basisEval328F,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3291,basisEval325E,basisEval3292,basisEval3293,basisEval3295,basisEval3217,basisEval3296,basisEval3297,basisEval326E,basisEval3299,basisEval3217,basisEval329A,basisEval329B,basisEval329D,basisEval3217,basisEval329E,basisEval329F,basisEval3217,basisEval32A0,basisEval3217];
          tensor[84] intermediateCons32E8#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32A1,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval322F,basisEval32A3,basisEval3217,basisEval32A4,basisEval32A5,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32A7,basisEval3245,basisEval32A8,basisEval3217,basisEval324B,basisEval328D,basisEval32A9,basisEval3217,basisEval32AA,basisEval32AB,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32AD,basisEval3292,basisEval3264,basisEval32AE,basisEval3217,basisEval32AF,basisEval326C,basisEval32B0,basisEval32B1,basisEval3217,basisEval32B2,basisEval329B,basisEval32B3,basisEval3217,basisEval32B4,basisEval32B5,basisEval3217,basisEval32A0,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32E9#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32B6,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval32B7,basisEval32B8,basisEval3217,basisEval3217,basisEval3285,basisEval3237,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval32BA,basisEval32BB,basisEval32BC,basisEval3217,basisEval3217,basisEval328C,basisEval324D,basisEval32BD,basisEval3217,basisEval3217,basisEval32BE,basisEval328F,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval32C0,basisEval32C1,basisEval32C2,basisEval32C3,basisEval3217,basisEval3217,basisEval3296,basisEval326C,basisEval32C4,basisEval32C5,basisEval3217,basisEval3217,basisEval32C6,basisEval329B,basisEval3276,basisEval3217,basisEval3217,basisEval32C7,basisEval32C8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EA#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3217,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval32CB,basisEval3284,basisEval3217,basisEval3217,basisEval3285,basisEval32A5,basisEval3217,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32BA,basisEval32CD,basisEval328B,basisEval3217,basisEval3217,basisEval32CE,basisEval328D,basisEval32CF,basisEval3217,basisEval3217,basisEval32BE,basisEval32D0,basisEval3217,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32D2,basisEval32D3,basisEval32D4,basisEval3295,basisEval3217,basisEval3217,basisEval32D5,basisEval326C,basisEval326E,basisEval32D6,basisEval3217,basisEval3217,basisEval329A,basisEval32D7,basisEval32B3,basisEval3217,basisEval3217,basisEval32C7,basisEval32D8,basisEval3217,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EB#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DA,basisEval3224,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DB,basisEval32B7,basisEval3233,basisEval3217,basisEval3217,basisEval3235,basisEval32A5,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DC,basisEval32DD,basisEval32CD,basisEval3249,basisEval3217,basisEval3217,basisEval32DE,basisEval324D,basisEval32A9,basisEval3217,basisEval3217,basisEval32AA,basisEval32D0,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DF,basisEval32E0,basisEval32C1,basisEval32E1,basisEval3268,basisEval3217,basisEval3217,basisEval32E2,basisEval32E3,basisEval326E,basisEval32B1,basisEval3217,basisEval3217,basisEval3272,basisEval329B,basisEval32E4,basisEval3217,basisEval3217,basisEval32E5,basisEval32D8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          real vdot33CF#1 = VDot<84>(dofs30C0,intermediateCons32E6);
          real vdot33D1#2 = VDot<84>(dofs30C0,intermediateCons32E7);
          real vdot33D3#2 = VDot<84>(dofs30C0,intermediateCons32E8);
          tensor[3] tensor33D4#1 = <tensor[3]>[vdot33CF,vdot33D1,vdot33D3];
          real vdot33D8#1 = VDot<84>(dofs30C0,intermediateCons32E9);
          real vdot33DA#2 = VDot<84>(dofs30C0,intermediateCons32EA);
          tensor[3] tensor33DB#1 = <tensor[3]>[vdot33D1,vdot33D8,vdot33DA];
          real vdot33E1#1 = VDot<84>(dofs30C0,intermediateCons32EB);
          tensor[3] tensor33E2#1 = <tensor[3]>[vdot33D3,vdot33DA,vdot33E1];
          tensor[3,3] _t33CD#1 = <tensor[3,3]>[tensor33D4,tensor33DB,tensor33E2];
          (real[3] evals33FA#2,tensor[3][3] E33FB#2) = EigenVecs3x3(_t33CD);
          tensor[3] _t33FF#6 = Subscript<tensor[3][3]>(E33FB,ilit2D78);
          real _t3401#9 = Subscript<real[3]>(evals33FA,ilit2D78);
          tensor[3] _t3405#6 = Subscript<tensor[3][3]>(E33FB,ilit2D75);
          real _t3407#9 = Subscript<real[3]>(evals33FA,ilit2D75);
          real r340A#1 = TensorIndex<tensor[3],[0]>(_t33FF);
          tensor[3] binopV340B#3 = VScale<3>(r340A,_t33FF);
          real r340C#1 = TensorIndex<tensor[3],[1]>(_t33FF);
          tensor[3] binopV340D#3 = VScale<3>(r340C,_t33FF);
          real r340E#1 = TensorIndex<tensor[3],[2]>(_t33FF);
          tensor[3] binopV340F#3 = VScale<3>(r340E,_t33FF);
          real r3419#1 = TensorIndex<tensor[3],[0]>(_t3405);
          tensor[3] binopV341A#3 = VScale<3>(r3419,_t3405);
          real r341B#1 = TensorIndex<tensor[3],[1]>(_t3405);
          tensor[3] binopV341C#3 = VScale<3>(r341B,_t3405);
          real r341D#1 = TensorIndex<tensor[3],[2]>(_t3405);
          tensor[3] binopV341E#3 = VScale<3>(r341D,_t3405);
          real r3428#1 = VIndex<3,0>(binopV340B);
          real r3429#1 = RDiv(r3428,_t3401);
          real r342A#1 = VIndex<3,1>(binopV340B);
          real r342B#1 = RDiv(r342A,_t3401);
          real r342C#1 = VIndex<3,2>(binopV340B);
          real r342D#1 = RDiv(r342C,_t3401);
          tensor[3] tensor342E#1 = <tensor[3]>[r3429,r342B,r342D];
          real r342F#1 = VIndex<3,0>(binopV340D);
          real r3430#1 = RDiv(r342F,_t3401);
          real r3431#1 = VIndex<3,1>(binopV340D);
          real r3432#1 = RDiv(r3431,_t3401);
          real r3433#1 = VIndex<3,2>(binopV340D);
          real r3434#1 = RDiv(r3433,_t3401);
          tensor[3] tensor3435#1 = <tensor[3]>[r3430,r3432,r3434];
          real r3436#1 = VIndex<3,0>(binopV340F);
          real r3437#1 = RDiv(r3436,_t3401);
          real r3438#1 = VIndex<3,1>(binopV340F);
          real r3439#1 = RDiv(r3438,_t3401);
          real r343A#1 = VIndex<3,2>(binopV340F);
          real r343B#1 = RDiv(r343A,_t3401);
          tensor[3] tensor343C#1 = <tensor[3]>[r3437,r3439,r343B];
          real r3455#1 = VIndex<3,0>(binopV341A);
          real r3456#1 = RDiv(r3455,_t3407);
          real r3457#1 = VIndex<3,1>(binopV341A);
          real r3458#1 = RDiv(r3457,_t3407);
          real r3459#1 = VIndex<3,2>(binopV341A);
          real r345A#1 = RDiv(r3459,_t3407);
          tensor[3] tensor345B#1 = <tensor[3]>[r3456,r3458,r345A];
          real r345C#1 = VIndex<3,0>(binopV341C);
          real r345D#1 = RDiv(r345C,_t3407);
          real r345E#1 = VIndex<3,1>(binopV341C);
          real r345F#1 = RDiv(r345E,_t3407);
          real r3460#1 = VIndex<3,2>(binopV341C);
          real r3461#1 = RDiv(r3460,_t3407);
          tensor[3] tensor3462#1 = <tensor[3]>[r345D,r345F,r3461];
          real r3463#1 = VIndex<3,0>(binopV341E);
          real r3464#1 = RDiv(r3463,_t3407);
          real r3465#1 = VIndex<3,1>(binopV341E);
          real r3466#1 = RDiv(r3465,_t3407);
          real r3467#1 = VIndex<3,2>(binopV341E);
          real r3468#1 = RDiv(r3467,_t3407);
          tensor[3] tensor3469#1 = <tensor[3]>[r3464,r3466,r3468];
          tensor[3] v3484#1 = VAdd<3>(tensor342E,tensor345B);
          tensor[3] v3487#1 = VAdd<3>(tensor3435,tensor3462);
          tensor[3] v348A#1 = VAdd<3>(tensor343C,tensor3469);
          real basisEval34B1#1 = RMul(one3219,prod322E);
          real basisEval34C4#1 = RMul(one3219,prod3241);
          real basisEval34C7#1 = RMul(one3219,prod3244);
          real basisEval34CF#3 = RMul(coeff3218,prod324C);
          real basisEval34E0#1 = RMul(one3219,prod325D);
          real basisEval34E3#1 = RMul(one3219,prod3260);
          real basisEval34E6#1 = RMul(one3219,prod3263);
          real basisEval34EE#2 = RMul(coeff3218,prod326B);
          real basisEval34F0#2 = RMul(coeff3218,prod326D);
          real basisEval34F6#1 = RMul(coeff3283,prod3273);
          real prod53501#1 = RMul(prod43258,varAcc3216);
          real prod3502#1 = RMul(one3219,prod53501);
          real prod3503#2 = RMul(one3219,prod3502);
          real basisEval3504#2 = RMul(one3219,prod3503);
          real prod3505#1 = RMul(varAcc3215,prod43258);
          real prod3506#3 = RMul(one3219,prod3505);
          real basisEval3507#1 = RMul(one3219,prod3506);
          real prod3508#1 = RMul(prod23230,prod3323C);
          real prod3509#3 = RMul(one3219,prod3508);
          real basisEval350A#1 = RMul(one3219,prod3509);
          real prod350B#1 = RMul(prod33246,prod23229);
          real prod350C#3 = RMul(one3219,prod350B);
          real basisEval350D#1 = RMul(one3219,prod350C);
          real prod350E#1 = RMul(prod43265,varAcc3216);
          real prod350F#3 = RMul(one3219,prod350E);
          real basisEval3510#1 = RMul(one3219,prod350F);
          real prod53511#1 = RMul(prod43265,varAcc3215);
          real prod3512#1 = RMul(prod53511,one3219);
          real prod3513#2 = RMul(one3219,prod3512);
          real basisEval3514#2 = RMul(one3219,prod3513);
          real prod3515#3 = RMul(varAcc3214,prod3259);
          real basisEval3516#1 = RMul(coeff3218,prod3515);
          real prod3517#2 = RMul(varAcc3214,prod325C);
          real basisEval3518#2 = RMul(coeff3218,prod3517);
          real prod3519#2 = RMul(varAcc3214,prod325F);
          real basisEval351A#1 = RMul(coeff3218,prod3519);
          real prod351B#2 = RMul(varAcc3214,prod3262);
          real basisEval351C#2 = RMul(coeff3218,prod351B);
          real prod351D#3 = RMul(varAcc3214,prod3266);
          real basisEval351E#1 = RMul(coeff3218,prod351D);
          real prod351F#3 = RMul(prod23239,prod323D);
          real basisEval3520#1 = RMul(coeff3283,prod351F);
          real prod3521#2 = RMul(prod23239,prod3240);
          real basisEval3522#2 = RMul(coeff3283,prod3521);
          real prod3523#2 = RMul(prod23239,prod3243);
          real basisEval3524#2 = RMul(coeff3283,prod3523);
          real prod3525#3 = RMul(prod23239,prod3247);
          real basisEval3526#1 = RMul(coeff3283,prod3525);
          real prod3527#3 = RMul(prod33255,prod322A);
          real basisEval3528#1 = RMul(coeff3286,prod3527);
          real prod3529#2 = RMul(prod33255,prod322D);
          real basisEval352A#1 = RMul(coeff3286,prod3529);
          real prod352B#3 = RMul(prod33255,prod3231);
          real basisEval352C#1 = RMul(coeff3286,prod352B);
          real prod352D#3 = RMul(prod4327C,prod321E);
          real basisEval352E#1 = RMul(coeff3294,prod352D);
          real prod352F#3 = RMul(prod4327C,prod3222);
          real basisEval3530#1 = RMul(coeff3294,prod352F);
          real prod53532#1 = RMul(prod4327C,varAcc3214);
          real prod3533#2 = RMul(prod53532,prod321A);
          real basisEval3534#1 = RMul(coeff3225,prod3533);
          real basisEval3539#1 = RMul(one3219,prod3234);
          real basisEval353E#1 = RMul(one3219,prod324A);
          real basisEval3540#1 = RMul(one3219,prod3250);
          real basisEval3547#1 = RMul(one3219,prod3269);
          real basisEval3548#1 = RMul(coeff3283,prod326D);
          real basisEval354A#1 = RMul(one3219,prod3271);
          real basisEval354B#2 = RMul(coeff3218,prod3273);
          real basisEval354C#1 = RMul(one3219,prod3277);
          real basisEval354F#1 = RMul(coeff3218,prod3506);
          real basisEval3550#1 = RMul(coeff3283,prod3509);
          real basisEval3551#1 = RMul(coeff3286,prod350C);
          real basisEval3552#1 = RMul(coeff3294,prod350F);
          real basisEval3553#1 = RMul(coeff3225,prod3513);
          real basisEval3554#1 = RMul(one3219,prod3515);
          real basisEval3555#2 = RMul(coeff3283,prod3519);
          real basisEval3556#1 = RMul(coeff3286,prod351B);
          real basisEval3557#1 = RMul(coeff3294,prod351D);
          real basisEval3558#1 = RMul(one3219,prod351F);
          real basisEval3559#1 = RMul(coeff3218,prod3521);
          real basisEval355A#1 = RMul(coeff3286,prod3525);
          real basisEval355B#1 = RMul(one3219,prod3527);
          real basisEval355C#2 = RMul(coeff3218,prod3529);
          real basisEval355D#1 = RMul(coeff3283,prod352B);
          real basisEval355E#1 = RMul(one3219,prod352D);
          real basisEval355F#1 = RMul(coeff3218,prod352F);
          real basisEval3560#2 = RMul(one3219,prod3533);
          real basisEval3563#1 = RMul(one3219,prod3236);
          real basisEval3568#1 = RMul(one3219,prod324E);
          real basisEval356A#1 = RMul(one3219,prod3252);
          real basisEval356F#1 = RMul(coeff3283,prod326B);
          real basisEval3570#1 = RMul(one3219,prod326F);
          real basisEval3571#1 = RMul(one3219,prod3275);
          real basisEval3573#1 = RMul(one3219,prod3279);
          real basisEval3574#1 = RMul(coeff3225,prod3503);
          real basisEval3575#1 = RMul(coeff3294,prod3506);
          real basisEval3576#1 = RMul(coeff3286,prod3509);
          real basisEval3577#1 = RMul(coeff3283,prod350C);
          real basisEval3578#1 = RMul(coeff3218,prod350F);
          real basisEval3579#1 = RMul(coeff3294,prod3515);
          real basisEval357A#1 = RMul(coeff3286,prod3517);
          real basisEval357B#1 = RMul(one3219,prod351D);
          real basisEval357C#1 = RMul(coeff3286,prod351F);
          real basisEval357D#1 = RMul(coeff3218,prod3523);
          real basisEval357E#1 = RMul(one3219,prod3525);
          real basisEval357F#1 = RMul(coeff3283,prod3527);
          real basisEval3580#1 = RMul(one3219,prod352B);
          real basisEval3581#1 = RMul(coeff3218,prod352D);
          real basisEval3582#1 = RMul(one3219,prod352F);
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3280,basisEval32A1,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3282,basisEval34B1,basisEval32A3,basisEval3285,basisEval32A5,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3289,basisEval34C4,basisEval34C7,basisEval32A8,basisEval328C,basisEval34CF,basisEval32A9,basisEval328E,basisEval32AB,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3291,basisEval34E0,basisEval34E3,basisEval34E6,basisEval32AE,basisEval3296,basisEval34EE,basisEval34F0,basisEval32B1,basisEval329A,basisEval34F6,basisEval32B3,basisEval329E,basisEval32B5,basisEval32A0,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3504,basisEval3507,basisEval350A,basisEval350D,basisEval3510,basisEval3514,basisEval3516,basisEval3518,basisEval351A,basisEval351C,basisEval351E,basisEval3520,basisEval3522,basisEval3524,basisEval3526,basisEval3528,basisEval352A,basisEval352C,basisEval352E,basisEval3530,basisEval3534];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3280,basisEval3224,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval3282,basisEval322F,basisEval3284,basisEval3217,basisEval3539,basisEval32A5,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval3289,basisEval3242,basisEval328A,basisEval328B,basisEval3217,basisEval353E,basisEval34CF,basisEval32CF,basisEval3217,basisEval3540,basisEval32D0,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval3291,basisEval325E,basisEval3292,basisEval3293,basisEval3295,basisEval3217,basisEval3547,basisEval34EE,basisEval3548,basisEval32D6,basisEval3217,basisEval354A,basisEval354B,basisEval32B3,basisEval3217,basisEval354C,basisEval32D8,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3504,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3553,basisEval3217,basisEval3554,basisEval3518,basisEval3555,basisEval3556,basisEval3557,basisEval3217,basisEval3558,basisEval3559,basisEval3524,basisEval355A,basisEval3217,basisEval355B,basisEval355C,basisEval355D,basisEval3217,basisEval355E,basisEval355F,basisEval3217,basisEval3560,basisEval3217];
          tensor[84] intermediateCons3585#1 = <tensor[84]>[basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3220,basisEval32A1,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval32A2,basisEval322F,basisEval32A3,basisEval3217,basisEval3285,basisEval3563,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval32A6,basisEval32A7,basisEval3245,basisEval32A8,basisEval3217,basisEval32CE,basisEval34CF,basisEval3568,basisEval3217,basisEval32BE,basisEval356A,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval32AC,basisEval32AD,basisEval3292,basisEval3264,basisEval32AE,basisEval3217,basisEval32D5,basisEval356F,basisEval34F0,basisEval3570,basisEval3217,basisEval329A,basisEval354B,basisEval3571,basisEval3217,basisEval32C7,basisEval3573,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3578,basisEval3514,basisEval3217,basisEval3579,basisEval357A,basisEval3555,basisEval351C,basisEval357B,basisEval3217,basisEval357C,basisEval3522,basisEval357D,basisEval357E,basisEval3217,basisEval357F,basisEval355C,basisEval3580,basisEval3217,basisEval3581,basisEval3582,basisEval3217,basisEval3560,basisEval3217,basisEval3217];
          real vdot367A#1 = VDot<84>(dofs30C0,intermediateCons3583);
          real vdot367C#1 = VDot<84>(dofs30C0,intermediateCons3584);
          real vdot367E#1 = VDot<84>(dofs30C0,intermediateCons3585);
          tensor[3] probe_l_153678#3 = <tensor[3]>[vdot367A,vdot367C,vdot367E];
          tensor[3] negV3689#1 = VNeg<3>(v3484);
          tensor[3] negV368B#1 = VNeg<3>(v3487);
          tensor[3] negV368D#1 = VNeg<3>(v348A);
          real vdot3698#1 = VDot<3>(negV3689,probe_l_153678);
          real vdot369A#1 = VDot<3>(negV368B,probe_l_153678);
          real vdot369C#1 = VDot<3>(negV368D,probe_l_153678);
          tensor[3] _t3696#1 = <tensor[3]>[vdot3698,vdot369A,vdot369C];
          goto JOIN36A7
        JOIN36A7:  preds = [ASSIGN36A4,ASSIGN46AB]
          tensor[3] step36A5#5 = phi(_t3696,_t36A6)
          real _t36A8#7 = 0.e0;
          real _t36AA#143 = 0.1e1;
          real _t36AC#1 = 0.15e1;
          real op1_e3_l_736AE#1 = VDot<3>(step36A5,step36A5);
          real op1_e3_l_836B1#3 = Sqrt(op1_e3_l_736AE);
          real op1_e3_l_936B4#1 = Abs<real>(op1_e3_l_836B1);
          real op1_e3_l_1036B7#1 = RDiv(op1_e3_l_936B4,thick247E);
          real op1_e3_l_1136BA#1 = RSub(_t36AA,op1_e3_l_1036B7);
          real op1_e3_l_1236BD#1 = RMul(_t36AC,op1_e3_l_1136BA);
          real op1_e3_l_1336C0#1 = RClamp(_t36A8,_t36AA,op1_e3_l_1236BD);
          real _t36C3#2 = RMul(maxAlpha2486,op1_e3_l_1336C0);
          bool _t36C6#1 = EQ<real>(_t36C3,_t36A8);
          if _t36C6 then goto SAVE36C9 else goto JOIN36CB
        SAVE36C9:  preds = [COND36C8]
          self.rayN = rayN24AC;
          active
          goto JOIN36CB
        JOIN36CB:  preds = [*ACTIVE36CA,COND36C8]
          real _t36D2#1 = RSub(_t36AA,_t36C3);
          real _t36D5#1 = MathFn<pow>(_t36D2,alphaFix249C);
          bool _t36D7#1 = NEQ<real>(phKs24A4,_t36A8);
          if _t36D7 then goto ASSIGN36DC else goto JOIN36FF
        ASSIGN36DC:  preds = [COND36D9]
          tensor[3] op1_e3_l_636DA#3 = VAdd<3>(eyeDir249E,litwsp2494);
          real op1_e3_l_836DD#1 = VDot<3>(op1_e3_l_636DA,op1_e3_l_636DA);
          real op1_e3_l_936E0#1 = Sqrt(op1_e3_l_836DD);
          real op1_e3_l_1236E3#1 = RDiv(_t36AA,op1_e3_l_836B1);
          tensor[3] op1_e3_l_1336E8#1 = VScale<3>(op1_e3_l_1236E3,step36A5);
          tensor[3] op1_e3_l_1436EB#1 = VNeg<3>(op1_e3_l_1336E8);
          real op1_e3_l_1636EE#1 = RDiv(_t36AA,op1_e3_l_936E0);
          real op1_e3_l_1736F3#1 = VDot<3>(op1_e3_l_1436EB,op1_e3_l_636DA);
          real op1_e3_l_1836F6#1 = RMul(op1_e3_l_1636EE,op1_e3_l_1736F3);
          real _t36F9#1 = Abs<real>(op1_e3_l_1836F6);
          real scomp36FC#1 = MathFn<pow>(_t36F9,phSp24A6);
          goto JOIN36FF
        JOIN36FF:  preds = [ASSIGN36FD,COND36D9]
          real scomp36FE#1 = phi(scomp36FC,_t36A8)
          real cmin3700#3 = VIndex<2,0>(cminmax248C);
          real cmax3702#2 = VIndex<2,1>(cminmax248C);
          tensor[3] mcol3704#1 = <tensor[3]>[_t36AA,_t36AA,_t36AA];
          bool _t3706#1 = NEQ<real>(cmin3700,cmax3702);
          if _t3706 then goto ASSIGN4B32 else goto JOIN3DEC
        ASSIGN4B32:  preds = [COND3708]
          tensor[3] _t3709#3 = VAdd<3>(pos24B8,step36A5);
          int ilit370F#1 = 84;
          int mulRes3710#84 = IMul(_t246C,ilit370F);
          int idx3713#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,mulRes3710);
          int ilit3714#91 = 1;
          int addRes3715#1 = IAdd(mulRes3710,ilit3714);
          int idx3716#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3715);
          int ilit3717#5 = 2;
          int addRes3718#1 = IAdd(mulRes3710,ilit3717);
          int idx3719#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3718);
          int ilit371A#5 = 3;
          int addRes371B#1 = IAdd(mulRes3710,ilit371A);
          int idx371C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371B);
          int ilit371D#1 = 4;
          int addRes371E#1 = IAdd(mulRes3710,ilit371D);
          int idx371F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371E);
          int ilit3720#1 = 5;
          int addRes3721#1 = IAdd(mulRes3710,ilit3720);
          int idx3722#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3721);
          int ilit3723#1 = 6;
          int addRes3724#1 = IAdd(mulRes3710,ilit3723);
          int idx3725#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3724);
          int ilit3726#1 = 7;
          int addRes3727#1 = IAdd(mulRes3710,ilit3726);
          int idx3728#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3727);
          int ilit3729#1 = 8;
          int addRes372A#1 = IAdd(mulRes3710,ilit3729);
          int idx372B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372A);
          int ilit372C#1 = 9;
          int addRes372D#1 = IAdd(mulRes3710,ilit372C);
          int idx372E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372D);
          int ilit372F#1 = 10;
          int addRes3730#1 = IAdd(mulRes3710,ilit372F);
          int idx3731#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3730);
          int ilit3732#1 = 11;
          int addRes3733#1 = IAdd(mulRes3710,ilit3732);
          int idx3734#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3733);
          int ilit3735#1 = 12;
          int addRes3736#1 = IAdd(mulRes3710,ilit3735);
          int idx3737#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3736);
          int ilit3738#1 = 13;
          int addRes3739#1 = IAdd(mulRes3710,ilit3738);
          int idx373A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3739);
          int ilit373B#1 = 14;
          int addRes373C#1 = IAdd(mulRes3710,ilit373B);
          int idx373D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373C);
          int ilit373E#1 = 15;
          int addRes373F#1 = IAdd(mulRes3710,ilit373E);
          int idx3740#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373F);
          int ilit3741#1 = 16;
          int addRes3742#1 = IAdd(mulRes3710,ilit3741);
          int idx3743#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3742);
          int ilit3744#1 = 17;
          int addRes3745#1 = IAdd(mulRes3710,ilit3744);
          int idx3746#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3745);
          int ilit3747#1 = 18;
          int addRes3748#1 = IAdd(mulRes3710,ilit3747);
          int idx3749#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3748);
          int ilit374A#1 = 19;
          int addRes374B#1 = IAdd(mulRes3710,ilit374A);
          int idx374C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374B);
          int ilit374D#1 = 20;
          int addRes374E#1 = IAdd(mulRes3710,ilit374D);
          int idx374F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374E);
          int ilit3750#1 = 21;
          int addRes3751#1 = IAdd(mulRes3710,ilit3750);
          int idx3752#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3751);
          int ilit3753#1 = 22;
          int addRes3754#1 = IAdd(mulRes3710,ilit3753);
          int idx3755#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3754);
          int ilit3756#1 = 23;
          int addRes3757#1 = IAdd(mulRes3710,ilit3756);
          int idx3758#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3757);
          int ilit3759#1 = 24;
          int addRes375A#1 = IAdd(mulRes3710,ilit3759);
          int idx375B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375A);
          int ilit375C#1 = 25;
          int addRes375D#1 = IAdd(mulRes3710,ilit375C);
          int idx375E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375D);
          int ilit375F#1 = 26;
          int addRes3760#1 = IAdd(mulRes3710,ilit375F);
          int idx3761#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3760);
          int ilit3762#1 = 27;
          int addRes3763#1 = IAdd(mulRes3710,ilit3762);
          int idx3764#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3763);
          int ilit3765#1 = 28;
          int addRes3766#1 = IAdd(mulRes3710,ilit3765);
          int idx3767#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3766);
          int ilit3768#1 = 29;
          int addRes3769#1 = IAdd(mulRes3710,ilit3768);
          int idx376A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3769);
          int ilit376B#1 = 30;
          int addRes376C#1 = IAdd(mulRes3710,ilit376B);
          int idx376D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376C);
          int ilit376E#1 = 31;
          int addRes376F#1 = IAdd(mulRes3710,ilit376E);
          int idx3770#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376F);
          int ilit3771#1 = 32;
          int addRes3772#1 = IAdd(mulRes3710,ilit3771);
          int idx3773#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3772);
          int ilit3774#1 = 33;
          int addRes3775#1 = IAdd(mulRes3710,ilit3774);
          int idx3776#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3775);
          int ilit3777#1 = 34;
          int addRes3778#1 = IAdd(mulRes3710,ilit3777);
          int idx3779#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3778);
          int ilit377A#1 = 35;
          int addRes377B#1 = IAdd(mulRes3710,ilit377A);
          int idx377C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377B);
          int ilit377D#1 = 36;
          int addRes377E#1 = IAdd(mulRes3710,ilit377D);
          int idx377F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377E);
          int ilit3780#1 = 37;
          int addRes3781#1 = IAdd(mulRes3710,ilit3780);
          int idx3782#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3781);
          int ilit3783#1 = 38;
          int addRes3784#1 = IAdd(mulRes3710,ilit3783);
          int idx3785#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3784);
          int ilit3786#1 = 39;
          int addRes3787#1 = IAdd(mulRes3710,ilit3786);
          int idx3788#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3787);
          int ilit3789#1 = 40;
          int addRes378A#1 = IAdd(mulRes3710,ilit3789);
          int idx378B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378A);
          int ilit378C#1 = 41;
          int addRes378D#1 = IAdd(mulRes3710,ilit378C);
          int idx378E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378D);
          int ilit378F#1 = 42;
          int addRes3790#1 = IAdd(mulRes3710,ilit378F);
          int idx3791#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3790);
          int ilit3792#1 = 43;
          int addRes3793#1 = IAdd(mulRes3710,ilit3792);
          int idx3794#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3793);
          int ilit3795#1 = 44;
          int addRes3796#1 = IAdd(mulRes3710,ilit3795);
          int idx3797#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3796);
          int ilit3798#1 = 45;
          int addRes3799#1 = IAdd(mulRes3710,ilit3798);
          int idx379A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3799);
          int ilit379B#1 = 46;
          int addRes379C#1 = IAdd(mulRes3710,ilit379B);
          int idx379D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379C);
          int ilit379E#1 = 47;
          int addRes379F#1 = IAdd(mulRes3710,ilit379E);
          int idx37A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379F);
          int ilit37A1#1 = 48;
          int addRes37A2#1 = IAdd(mulRes3710,ilit37A1);
          int idx37A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A2);
          int ilit37A4#1 = 49;
          int addRes37A5#1 = IAdd(mulRes3710,ilit37A4);
          int idx37A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A5);
          int ilit37A7#1 = 50;
          int addRes37A8#1 = IAdd(mulRes3710,ilit37A7);
          int idx37A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A8);
          int ilit37AA#1 = 51;
          int addRes37AB#1 = IAdd(mulRes3710,ilit37AA);
          int idx37AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AB);
          int ilit37AD#1 = 52;
          int addRes37AE#1 = IAdd(mulRes3710,ilit37AD);
          int idx37AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AE);
          int ilit37B0#1 = 53;
          int addRes37B1#1 = IAdd(mulRes3710,ilit37B0);
          int idx37B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B1);
          int ilit37B3#1 = 54;
          int addRes37B4#1 = IAdd(mulRes3710,ilit37B3);
          int idx37B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B4);
          int ilit37B6#1 = 55;
          int addRes37B7#1 = IAdd(mulRes3710,ilit37B6);
          int idx37B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B7);
          int ilit37B9#1 = 56;
          int addRes37BA#1 = IAdd(mulRes3710,ilit37B9);
          int idx37BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BA);
          int ilit37BC#1 = 57;
          int addRes37BD#1 = IAdd(mulRes3710,ilit37BC);
          int idx37BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BD);
          int ilit37BF#1 = 58;
          int addRes37C0#1 = IAdd(mulRes3710,ilit37BF);
          int idx37C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C0);
          int ilit37C2#1 = 59;
          int addRes37C3#1 = IAdd(mulRes3710,ilit37C2);
          int idx37C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C3);
          int ilit37C5#1 = 60;
          int addRes37C6#1 = IAdd(mulRes3710,ilit37C5);
          int idx37C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C6);
          int ilit37C8#1 = 61;
          int addRes37C9#1 = IAdd(mulRes3710,ilit37C8);
          int idx37CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C9);
          int ilit37CB#1 = 62;
          int addRes37CC#1 = IAdd(mulRes3710,ilit37CB);
          int idx37CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CC);
          int ilit37CE#1 = 63;
          int addRes37CF#1 = IAdd(mulRes3710,ilit37CE);
          int idx37D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CF);
          int ilit37D1#1 = 64;
          int addRes37D2#1 = IAdd(mulRes3710,ilit37D1);
          int idx37D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D2);
          int ilit37D4#1 = 65;
          int addRes37D5#1 = IAdd(mulRes3710,ilit37D4);
          int idx37D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D5);
          int ilit37D7#1 = 66;
          int addRes37D8#1 = IAdd(mulRes3710,ilit37D7);
          int idx37D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D8);
          int ilit37DA#1 = 67;
          int addRes37DB#1 = IAdd(mulRes3710,ilit37DA);
          int idx37DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DB);
          int ilit37DD#1 = 68;
          int addRes37DE#1 = IAdd(mulRes3710,ilit37DD);
          int idx37DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DE);
          int ilit37E0#1 = 69;
          int addRes37E1#1 = IAdd(mulRes3710,ilit37E0);
          int idx37E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E1);
          int ilit37E3#1 = 70;
          int addRes37E4#1 = IAdd(mulRes3710,ilit37E3);
          int idx37E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E4);
          int ilit37E6#1 = 71;
          int addRes37E7#1 = IAdd(mulRes3710,ilit37E6);
          int idx37E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E7);
          int ilit37E9#1 = 72;
          int addRes37EA#1 = IAdd(mulRes3710,ilit37E9);
          int idx37EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37EA);
          int ilit37EC#1 = 73;
          int addRes37ED#1 = IAdd(mulRes3710,ilit37EC);
          int idx37EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37ED);
          int ilit37EF#1 = 74;
          int addRes37F0#1 = IAdd(mulRes3710,ilit37EF);
          int idx37F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F0);
          int ilit37F2#1 = 75;
          int addRes37F3#1 = IAdd(mulRes3710,ilit37F2);
          int idx37F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F3);
          int ilit37F5#1 = 76;
          int addRes37F6#1 = IAdd(mulRes3710,ilit37F5);
          int idx37F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F6);
          int ilit37F8#1 = 77;
          int addRes37F9#1 = IAdd(mulRes3710,ilit37F8);
          int idx37FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F9);
          int ilit37FB#1 = 78;
          int addRes37FC#1 = IAdd(mulRes3710,ilit37FB);
          int idx37FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FC);
          int ilit37FE#1 = 79;
          int addRes37FF#1 = IAdd(mulRes3710,ilit37FE);
          int idx3800#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FF);
          int ilit3801#1 = 80;
          int addRes3802#1 = IAdd(mulRes3710,ilit3801);
          int idx3803#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3802);
          int ilit3804#1 = 81;
          int addRes3805#1 = IAdd(mulRes3710,ilit3804);
          int idx3806#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3805);
          int ilit3807#1 = 82;
          int addRes3808#1 = IAdd(mulRes3710,ilit3807);
          int idx3809#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3808);
          int ilit380A#1 = 83;
          int addRes380B#1 = IAdd(mulRes3710,ilit380A);
          int idx380C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes380B);
          int mulRes3912#1 = IMul(ilit3714,idx3713);
          int mulRes3914#1 = IMul(ilit3714,idx3716);
          int mulRes3917#1 = IMul(ilit3714,idx3719);
          int mulRes391A#1 = IMul(ilit3714,idx371C);
          int mulRes391D#1 = IMul(ilit3714,idx371F);
          int mulRes3920#1 = IMul(ilit3714,idx3722);
          int mulRes3923#1 = IMul(ilit3714,idx3725);
          int mulRes3926#1 = IMul(ilit3714,idx3728);
          int mulRes3929#1 = IMul(ilit3714,idx372B);
          int mulRes392C#1 = IMul(ilit3714,idx372E);
          int mulRes392F#1 = IMul(ilit3714,idx3731);
          int mulRes3932#1 = IMul(ilit3714,idx3734);
          int mulRes3935#1 = IMul(ilit3714,idx3737);
          int mulRes3938#1 = IMul(ilit3714,idx373A);
          int mulRes393B#1 = IMul(ilit3714,idx373D);
          int mulRes393E#1 = IMul(ilit3714,idx3740);
          int mulRes3941#1 = IMul(ilit3714,idx3743);
          int mulRes3944#1 = IMul(ilit3714,idx3746);
          int mulRes3947#1 = IMul(ilit3714,idx3749);
          int mulRes394A#1 = IMul(ilit3714,idx374C);
          int mulRes394D#1 = IMul(ilit3714,idx374F);
          int mulRes3950#1 = IMul(ilit3714,idx3752);
          int mulRes3953#1 = IMul(ilit3714,idx3755);
          int mulRes3956#1 = IMul(ilit3714,idx3758);
          int mulRes3959#1 = IMul(ilit3714,idx375B);
          int mulRes395C#1 = IMul(ilit3714,idx375E);
          int mulRes395F#1 = IMul(ilit3714,idx3761);
          int mulRes3962#1 = IMul(ilit3714,idx3764);
          int mulRes3965#1 = IMul(ilit3714,idx3767);
          int mulRes3968#1 = IMul(ilit3714,idx376A);
          int mulRes396B#1 = IMul(ilit3714,idx376D);
          int mulRes396E#1 = IMul(ilit3714,idx3770);
          int mulRes3971#1 = IMul(ilit3714,idx3773);
          int mulRes3974#1 = IMul(ilit3714,idx3776);
          int mulRes3977#1 = IMul(ilit3714,idx3779);
          int mulRes397A#1 = IMul(ilit3714,idx377C);
          int mulRes397D#1 = IMul(ilit3714,idx377F);
          int mulRes3980#1 = IMul(ilit3714,idx3782);
          int mulRes3983#1 = IMul(ilit3714,idx3785);
          int mulRes3986#1 = IMul(ilit3714,idx3788);
          int mulRes3989#1 = IMul(ilit3714,idx378B);
          int mulRes398C#1 = IMul(ilit3714,idx378E);
          int mulRes398F#1 = IMul(ilit3714,idx3791);
          int mulRes3992#1 = IMul(ilit3714,idx3794);
          int mulRes3995#1 = IMul(ilit3714,idx3797);
          int mulRes3998#1 = IMul(ilit3714,idx379A);
          int mulRes399B#1 = IMul(ilit3714,idx379D);
          int mulRes399E#1 = IMul(ilit3714,idx37A0);
          int mulRes39A1#1 = IMul(ilit3714,idx37A3);
          int mulRes39A4#1 = IMul(ilit3714,idx37A6);
          int mulRes39A7#1 = IMul(ilit3714,idx37A9);
          int mulRes39AA#1 = IMul(ilit3714,idx37AC);
          int mulRes39AD#1 = IMul(ilit3714,idx37AF);
          int mulRes39B0#1 = IMul(ilit3714,idx37B2);
          int mulRes39B3#1 = IMul(ilit3714,idx37B5);
          int mulRes39B6#1 = IMul(ilit3714,idx37B8);
          int mulRes39B9#1 = IMul(ilit3714,idx37BB);
          int mulRes39BC#1 = IMul(ilit3714,idx37BE);
          int mulRes39BF#1 = IMul(ilit3714,idx37C1);
          int mulRes39C2#1 = IMul(ilit3714,idx37C4);
          int mulRes39C5#1 = IMul(ilit3714,idx37C7);
          int mulRes39C8#1 = IMul(ilit3714,idx37CA);
          int mulRes39CB#1 = IMul(ilit3714,idx37CD);
          int mulRes39CE#1 = IMul(ilit3714,idx37D0);
          int mulRes39D1#1 = IMul(ilit3714,idx37D3);
          int mulRes39D4#1 = IMul(ilit3714,idx37D6);
          int mulRes39D7#1 = IMul(ilit3714,idx37D9);
          int mulRes39DA#1 = IMul(ilit3714,idx37DC);
          int mulRes39DD#1 = IMul(ilit3714,idx37DF);
          int mulRes39E0#1 = IMul(ilit3714,idx37E2);
          int mulRes39E3#1 = IMul(ilit3714,idx37E5);
          int mulRes39E6#1 = IMul(ilit3714,idx37E8);
          int mulRes39E9#1 = IMul(ilit3714,idx37EB);
          int mulRes39EC#1 = IMul(ilit3714,idx37EE);
          int mulRes39EF#1 = IMul(ilit3714,idx37F1);
          int mulRes39F2#1 = IMul(ilit3714,idx37F4);
          int mulRes39F5#1 = IMul(ilit3714,idx37F7);
          int mulRes39F8#1 = IMul(ilit3714,idx37FA);
          int mulRes39FB#1 = IMul(ilit3714,idx37FD);
          int mulRes39FE#1 = IMul(ilit3714,idx3800);
          int mulRes3A01#1 = IMul(ilit3714,idx3803);
          int mulRes3A04#1 = IMul(ilit3714,idx3806);
          int mulRes3A07#1 = IMul(ilit3714,idx3809);
          int mulRes3A0A#1 = IMul(ilit3714,idx380C);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3912);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3914);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3917);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391A);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391D);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3920);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3923);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3926);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3929);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392C);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392F);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3932);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3935);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3938);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393B);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393E);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3941);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3944);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3947);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394A);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394D);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3950);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3953);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3956);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3959);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395C);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395F);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3962);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3965);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3968);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396B);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396E);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3971);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3974);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3977);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397A);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397D);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3980);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3983);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3986);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3989);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398C);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398F);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3992);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3995);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3998);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399B);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399E);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A1);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A4);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A7);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AA);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AD);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B0);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B3);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B6);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B9);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BC);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BF);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C2);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C5);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C8);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CB);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CE);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D1);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D4);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D7);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DA);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DD);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E0);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E3);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E6);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E9);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EC);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EF);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F2);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F5);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F8);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FB);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FE);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A01);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A04);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A07);
          real dof3A5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A0A);
          tensor[84] dofs3A5F#1 = <tensor[84]>[dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D,dof3A5E];
          real varAcc3BB3#27 = VIndex<3,0>(_t3709);
          real varAcc3BB4#12 = VIndex<3,1>(_t3709);
          real varAcc3BB5#12 = VIndex<3,2>(_t3709);
          real prod3BB7#7 = RMul(_t36AA,_t36AA);
          real prod3BB8#1 = RMul(_t36AA,prod3BB7);
          real basisEval3BB9#1 = RMul(_t36AA,prod3BB8);
          real prod3BBB#6 = RMul(_t36AA,varAcc3BB5);
          real prod3BBC#1 = RMul(_t36AA,prod3BBB);
          real basisEval3BBD#1 = RMul(_t36AA,prod3BBC);
          real prod3BBF#6 = RMul(varAcc3BB4,_t36AA);
          real prod3BC0#1 = RMul(_t36AA,prod3BBF);
          real basisEval3BC1#1 = RMul(_t36AA,prod3BC0);
          real prod3BC3#1 = RMul(varAcc3BB3,prod3BB7);
          real basisEval3BC4#1 = RMul(_t36AA,prod3BC3);
          real prod23BC5#6 = RMul(varAcc3BB5,varAcc3BB5);
          real prod3BC6#5 = RMul(_t36AA,prod23BC5);
          real prod3BC7#1 = RMul(_t36AA,prod3BC6);
          real basisEval3BC8#1 = RMul(_t36AA,prod3BC7);
          real prod3BC9#5 = RMul(varAcc3BB4,varAcc3BB5);
          real prod3BCA#1 = RMul(_t36AA,prod3BC9);
          real basisEval3BCB#1 = RMul(_t36AA,prod3BCA);
          real prod23BCC#6 = RMul(varAcc3BB4,varAcc3BB4);
          real prod3BCD#5 = RMul(prod23BCC,_t36AA);
          real prod3BCE#1 = RMul(_t36AA,prod3BCD);
          real basisEval3BCF#1 = RMul(_t36AA,prod3BCE);
          real prod3BD0#1 = RMul(varAcc3BB3,prod3BBB);
          real basisEval3BD1#1 = RMul(_t36AA,prod3BD0);
          real prod3BD2#1 = RMul(varAcc3BB3,prod3BBF);
          real basisEval3BD3#1 = RMul(_t36AA,prod3BD2);
          real prod23BD4#16 = RMul(varAcc3BB3,varAcc3BB3);
          real prod3BD5#1 = RMul(prod23BD4,prod3BB7);
          real basisEval3BD6#1 = RMul(_t36AA,prod3BD5);
          real prod33BD7#5 = RMul(prod23BC5,varAcc3BB5);
          real prod3BD8#4 = RMul(_t36AA,prod33BD7);
          real prod3BD9#1 = RMul(_t36AA,prod3BD8);
          real basisEval3BDA#1 = RMul(_t36AA,prod3BD9);
          real prod3BDB#4 = RMul(varAcc3BB4,prod23BC5);
          real prod3BDC#1 = RMul(_t36AA,prod3BDB);
          real basisEval3BDD#1 = RMul(_t36AA,prod3BDC);
          real prod3BDE#4 = RMul(prod23BCC,varAcc3BB5);
          real prod3BDF#1 = RMul(_t36AA,prod3BDE);
          real basisEval3BE0#1 = RMul(_t36AA,prod3BDF);
          real prod33BE1#5 = RMul(prod23BCC,varAcc3BB4);
          real prod3BE2#4 = RMul(prod33BE1,_t36AA);
          real prod3BE3#1 = RMul(_t36AA,prod3BE2);
          real basisEval3BE4#1 = RMul(_t36AA,prod3BE3);
          real prod3BE5#1 = RMul(varAcc3BB3,prod3BC6);
          real basisEval3BE6#1 = RMul(_t36AA,prod3BE5);
          real prod3BE7#1 = RMul(varAcc3BB3,prod3BC9);
          real basisEval3BE8#1 = RMul(_t36AA,prod3BE7);
          real prod3BE9#1 = RMul(varAcc3BB3,prod3BCD);
          real basisEval3BEA#1 = RMul(_t36AA,prod3BE9);
          real prod3BEB#1 = RMul(prod23BD4,prod3BBB);
          real basisEval3BEC#1 = RMul(_t36AA,prod3BEB);
          real prod3BED#1 = RMul(prod23BD4,prod3BBF);
          real basisEval3BEE#1 = RMul(_t36AA,prod3BED);
          real prod33BEF#11 = RMul(prod23BD4,varAcc3BB3);
          real prod3BF0#1 = RMul(prod33BEF,prod3BB7);
          real basisEval3BF1#1 = RMul(_t36AA,prod3BF0);
          real prod43BF2#4 = RMul(prod33BD7,varAcc3BB5);
          real prod3BF3#3 = RMul(_t36AA,prod43BF2);
          real prod3BF4#1 = RMul(_t36AA,prod3BF3);
          real basisEval3BF5#1 = RMul(_t36AA,prod3BF4);
          real prod3BF6#3 = RMul(varAcc3BB4,prod33BD7);
          real prod3BF7#1 = RMul(_t36AA,prod3BF6);
          real basisEval3BF8#1 = RMul(_t36AA,prod3BF7);
          real prod3BF9#3 = RMul(prod23BCC,prod23BC5);
          real prod3BFA#1 = RMul(_t36AA,prod3BF9);
          real basisEval3BFB#1 = RMul(_t36AA,prod3BFA);
          real prod3BFC#3 = RMul(prod33BE1,varAcc3BB5);
          real prod3BFD#1 = RMul(_t36AA,prod3BFC);
          real basisEval3BFE#1 = RMul(_t36AA,prod3BFD);
          real prod43BFF#4 = RMul(prod33BE1,varAcc3BB4);
          real prod3C00#3 = RMul(prod43BFF,_t36AA);
          real prod3C01#1 = RMul(_t36AA,prod3C00);
          real basisEval3C02#1 = RMul(_t36AA,prod3C01);
          real prod3C03#1 = RMul(varAcc3BB3,prod3BD8);
          real basisEval3C04#1 = RMul(_t36AA,prod3C03);
          real prod3C05#1 = RMul(varAcc3BB3,prod3BDB);
          real basisEval3C06#1 = RMul(_t36AA,prod3C05);
          real prod3C07#1 = RMul(varAcc3BB3,prod3BDE);
          real basisEval3C08#1 = RMul(_t36AA,prod3C07);
          real prod3C09#1 = RMul(varAcc3BB3,prod3BE2);
          real basisEval3C0A#1 = RMul(_t36AA,prod3C09);
          real prod3C0B#1 = RMul(prod23BD4,prod3BC6);
          real basisEval3C0C#1 = RMul(_t36AA,prod3C0B);
          real prod3C0D#1 = RMul(prod23BD4,prod3BC9);
          real basisEval3C0E#1 = RMul(_t36AA,prod3C0D);
          real prod3C0F#1 = RMul(prod23BD4,prod3BCD);
          real basisEval3C10#1 = RMul(_t36AA,prod3C0F);
          real prod3C11#1 = RMul(prod33BEF,prod3BBB);
          real basisEval3C12#1 = RMul(_t36AA,prod3C11);
          real prod3C13#1 = RMul(prod33BEF,prod3BBF);
          real basisEval3C14#1 = RMul(_t36AA,prod3C13);
          real prod43C15#7 = RMul(prod33BEF,varAcc3BB3);
          real prod3C16#1 = RMul(prod43C15,prod3BB7);
          real basisEval3C17#1 = RMul(_t36AA,prod3C16);
          real prod53C18#3 = RMul(prod43BF2,varAcc3BB5);
          real prod3C19#2 = RMul(_t36AA,prod53C18);
          real prod3C1A#1 = RMul(_t36AA,prod3C19);
          real basisEval3C1B#1 = RMul(_t36AA,prod3C1A);
          real prod3C1C#2 = RMul(varAcc3BB4,prod43BF2);
          real prod3C1D#1 = RMul(_t36AA,prod3C1C);
          real basisEval3C1E#1 = RMul(_t36AA,prod3C1D);
          real prod3C1F#2 = RMul(prod23BCC,prod33BD7);
          real prod3C20#1 = RMul(_t36AA,prod3C1F);
          real basisEval3C21#1 = RMul(_t36AA,prod3C20);
          real prod3C22#2 = RMul(prod33BE1,prod23BC5);
          real prod3C23#1 = RMul(_t36AA,prod3C22);
          real basisEval3C24#1 = RMul(_t36AA,prod3C23);
          real prod3C25#2 = RMul(prod43BFF,varAcc3BB5);
          real prod3C26#1 = RMul(_t36AA,prod3C25);
          real basisEval3C27#1 = RMul(_t36AA,prod3C26);
          real prod53C28#3 = RMul(prod43BFF,varAcc3BB4);
          real prod3C29#2 = RMul(prod53C28,_t36AA);
          real prod3C2A#1 = RMul(_t36AA,prod3C29);
          real basisEval3C2B#1 = RMul(_t36AA,prod3C2A);
          real prod3C2C#1 = RMul(varAcc3BB3,prod3BF3);
          real basisEval3C2D#1 = RMul(_t36AA,prod3C2C);
          real prod3C2E#1 = RMul(varAcc3BB3,prod3BF6);
          real basisEval3C2F#1 = RMul(_t36AA,prod3C2E);
          real prod3C30#1 = RMul(varAcc3BB3,prod3BF9);
          real basisEval3C31#1 = RMul(_t36AA,prod3C30);
          real prod3C32#1 = RMul(varAcc3BB3,prod3BFC);
          real basisEval3C33#1 = RMul(_t36AA,prod3C32);
          real prod3C34#1 = RMul(varAcc3BB3,prod3C00);
          real basisEval3C35#1 = RMul(_t36AA,prod3C34);
          real prod3C36#1 = RMul(prod23BD4,prod3BD8);
          real basisEval3C37#1 = RMul(_t36AA,prod3C36);
          real prod3C38#1 = RMul(prod23BD4,prod3BDB);
          real basisEval3C39#1 = RMul(_t36AA,prod3C38);
          real prod3C3A#1 = RMul(prod23BD4,prod3BDE);
          real basisEval3C3B#1 = RMul(_t36AA,prod3C3A);
          real prod3C3C#1 = RMul(prod23BD4,prod3BE2);
          real basisEval3C3D#1 = RMul(_t36AA,prod3C3C);
          real prod3C3E#1 = RMul(prod33BEF,prod3BC6);
          real basisEval3C3F#1 = RMul(_t36AA,prod3C3E);
          real prod3C40#1 = RMul(prod33BEF,prod3BC9);
          real basisEval3C41#1 = RMul(_t36AA,prod3C40);
          real prod3C42#1 = RMul(prod33BEF,prod3BCD);
          real basisEval3C43#1 = RMul(_t36AA,prod3C42);
          real prod3C44#1 = RMul(prod43C15,prod3BBB);
          real basisEval3C45#1 = RMul(_t36AA,prod3C44);
          real prod3C46#1 = RMul(prod43C15,prod3BBF);
          real basisEval3C47#1 = RMul(_t36AA,prod3C46);
          real prod53C48#4 = RMul(prod43C15,varAcc3BB3);
          real prod3C49#1 = RMul(prod53C48,prod3BB7);
          real basisEval3C4A#1 = RMul(_t36AA,prod3C49);
          real prod63C4B#1 = RMul(prod53C18,varAcc3BB5);
          real prod3C4C#1 = RMul(_t36AA,prod63C4B);
          real prod3C4D#1 = RMul(_t36AA,prod3C4C);
          real basisEval3C4E#1 = RMul(_t36AA,prod3C4D);
          real prod3C4F#1 = RMul(varAcc3BB4,prod53C18);
          real prod3C50#1 = RMul(_t36AA,prod3C4F);
          real basisEval3C51#1 = RMul(_t36AA,prod3C50);
          real prod3C52#1 = RMul(prod23BCC,prod43BF2);
          real prod3C53#1 = RMul(_t36AA,prod3C52);
          real basisEval3C54#1 = RMul(_t36AA,prod3C53);
          real prod3C55#1 = RMul(prod33BE1,prod33BD7);
          real prod3C56#1 = RMul(_t36AA,prod3C55);
          real basisEval3C57#1 = RMul(_t36AA,prod3C56);
          real prod3C58#1 = RMul(prod43BFF,prod23BC5);
          real prod3C59#1 = RMul(_t36AA,prod3C58);
          real basisEval3C5A#1 = RMul(_t36AA,prod3C59);
          real prod3C5B#1 = RMul(prod53C28,varAcc3BB5);
          real prod3C5C#1 = RMul(_t36AA,prod3C5B);
          real basisEval3C5D#1 = RMul(_t36AA,prod3C5C);
          real prod63C5E#1 = RMul(prod53C28,varAcc3BB4);
          real prod3C5F#1 = RMul(prod63C5E,_t36AA);
          real prod3C60#1 = RMul(_t36AA,prod3C5F);
          real basisEval3C61#1 = RMul(_t36AA,prod3C60);
          real prod3C62#1 = RMul(varAcc3BB3,prod3C19);
          real basisEval3C63#1 = RMul(_t36AA,prod3C62);
          real prod3C64#1 = RMul(varAcc3BB3,prod3C1C);
          real basisEval3C65#1 = RMul(_t36AA,prod3C64);
          real prod3C66#1 = RMul(varAcc3BB3,prod3C1F);
          real basisEval3C67#1 = RMul(_t36AA,prod3C66);
          real prod3C68#1 = RMul(varAcc3BB3,prod3C22);
          real basisEval3C69#1 = RMul(_t36AA,prod3C68);
          real prod3C6A#1 = RMul(varAcc3BB3,prod3C25);
          real basisEval3C6B#1 = RMul(_t36AA,prod3C6A);
          real prod3C6C#1 = RMul(varAcc3BB3,prod3C29);
          real basisEval3C6D#1 = RMul(_t36AA,prod3C6C);
          real prod3C6E#1 = RMul(prod23BD4,prod3BF3);
          real basisEval3C6F#1 = RMul(_t36AA,prod3C6E);
          real prod3C70#1 = RMul(prod23BD4,prod3BF6);
          real basisEval3C71#1 = RMul(_t36AA,prod3C70);
          real prod3C72#1 = RMul(prod23BD4,prod3BF9);
          real basisEval3C73#1 = RMul(_t36AA,prod3C72);
          real prod3C74#1 = RMul(prod23BD4,prod3BFC);
          real basisEval3C75#1 = RMul(_t36AA,prod3C74);
          real prod3C76#1 = RMul(prod23BD4,prod3C00);
          real basisEval3C77#1 = RMul(_t36AA,prod3C76);
          real prod3C78#1 = RMul(prod33BEF,prod3BD8);
          real basisEval3C79#1 = RMul(_t36AA,prod3C78);
          real prod3C7A#1 = RMul(prod33BEF,prod3BDB);
          real basisEval3C7B#1 = RMul(_t36AA,prod3C7A);
          real prod3C7C#1 = RMul(prod33BEF,prod3BDE);
          real basisEval3C7D#1 = RMul(_t36AA,prod3C7C);
          real prod3C7E#1 = RMul(prod33BEF,prod3BE2);
          real basisEval3C7F#1 = RMul(_t36AA,prod3C7E);
          real prod3C80#1 = RMul(prod43C15,prod3BC6);
          real basisEval3C81#1 = RMul(_t36AA,prod3C80);
          real prod3C82#1 = RMul(prod43C15,prod3BC9);
          real basisEval3C83#1 = RMul(_t36AA,prod3C82);
          real prod3C84#1 = RMul(prod43C15,prod3BCD);
          real basisEval3C85#1 = RMul(_t36AA,prod3C84);
          real prod3C86#1 = RMul(prod53C48,prod3BBB);
          real basisEval3C87#1 = RMul(_t36AA,prod3C86);
          real prod3C88#1 = RMul(prod53C48,prod3BBF);
          real basisEval3C89#1 = RMul(_t36AA,prod3C88);
          real prod63C8A#1 = RMul(prod53C48,varAcc3BB3);
          real prod3C8B#1 = RMul(prod63C8A,prod3BB7);
          real basisEval3C8C#1 = RMul(_t36AA,prod3C8B);
          tensor[84] intermediateCons3C8D#1 = <tensor[84]>[basisEval3BB9,basisEval3BBD,basisEval3BC1,basisEval3BC4,basisEval3BC8,basisEval3BCB,basisEval3BCF,basisEval3BD1,basisEval3BD3,basisEval3BD6,basisEval3BDA,basisEval3BDD,basisEval3BE0,basisEval3BE4,basisEval3BE6,basisEval3BE8,basisEval3BEA,basisEval3BEC,basisEval3BEE,basisEval3BF1,basisEval3BF5,basisEval3BF8,basisEval3BFB,basisEval3BFE,basisEval3C02,basisEval3C04,basisEval3C06,basisEval3C08,basisEval3C0A,basisEval3C0C,basisEval3C0E,basisEval3C10,basisEval3C12,basisEval3C14,basisEval3C17,basisEval3C1B,basisEval3C1E,basisEval3C21,basisEval3C24,basisEval3C27,basisEval3C2B,basisEval3C2D,basisEval3C2F,basisEval3C31,basisEval3C33,basisEval3C35,basisEval3C37,basisEval3C39,basisEval3C3B,basisEval3C3D,basisEval3C3F,basisEval3C41,basisEval3C43,basisEval3C45,basisEval3C47,basisEval3C4A,basisEval3C4E,basisEval3C51,basisEval3C54,basisEval3C57,basisEval3C5A,basisEval3C5D,basisEval3C61,basisEval3C63,basisEval3C65,basisEval3C67,basisEval3C69,basisEval3C6B,basisEval3C6D,basisEval3C6F,basisEval3C71,basisEval3C73,basisEval3C75,basisEval3C77,basisEval3C79,basisEval3C7B,basisEval3C7D,basisEval3C7F,basisEval3C81,basisEval3C83,basisEval3C85,basisEval3C87,basisEval3C89,basisEval3C8C];
          real probe_l_83D6A#1 = VDot<84>(dofs3A5F,intermediateCons3C8D);
          real op1_e3_l_93D6D#1 = RSub(probe_l_83D6A,cmin3700);
          real op1_e3_l_103D70#1 = RSub(cmax3702,cmin3700);
          real op1_e3_l_113D73#1 = RDiv(op1_e3_l_93D6D,op1_e3_l_103D70);
          real op1_e3_l_123D76#1 = RSub(_t36AA,_t36A8);
          real op1_e3_l_133D79#1 = RMul(op1_e3_l_113D73,op1_e3_l_123D76);
          real _t3D7C#1 = RAdd(_t36A8,op1_e3_l_133D79);
          real Mtransform3D7F#1 = Transform<IMAGE1D<double[3]>>(cmap246A);
          real MxPos3D81#1 = RMul(Mtransform3D7F,_t3D7C);
          real Ttranslate3D84#1 = Translate<IMAGE1D<double[3]>>(cmap246A);
          real imgPos3D86#2 = RAdd(MxPos3D81,Ttranslate3D84);
          real nd3D89#2 = Floor<1>(imgPos3D86);
          real f3D8B#2 = RSub(imgPos3D86,nd3D89);
          int n3D8E#5 = RealToInt<1>(nd3D89);
          bool isInside3D92#1 = IndexInside<IMAGE1D<double[3]>,2>(n3D8E,cmap246A);
          if isInside3D92 then goto ASSIGN4C30 else goto ASSIGN4C28
        ASSIGN4C30:  preds = [COND3D94]
          int offp3D99#3 = IMul(ilit371A,n3D8E);
          real v0_3D9A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D99);
          int addRes3D9C#1 = IAdd(n3D8E,ilit3714);
          int offp3D9D#3 = IMul(ilit371A,addRes3D9C);
          real v1_3D9E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D9D);
          tensor[2] v_3D9F#1 = <tensor[2]>[v0_3D9A,v1_3D9E];
          int offp3DA0#1 = IAdd(offp3D99,ilit3714);
          real v0_3DA1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA0);
          int offp3DA2#1 = IAdd(offp3D9D,ilit3714);
          real v1_3DA3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA2);
          tensor[2] v_3DA4#1 = <tensor[2]>[v0_3DA1,v1_3DA3];
          int offp3DA6#1 = IAdd(offp3D99,ilit3717);
          real v0_3DA7#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA6);
          int offp3DA8#1 = IAdd(offp3D9D,ilit3717);
          real v1_3DA9#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA8);
          tensor[2] v_3DAA#1 = <tensor[2]>[v0_3DA7,v1_3DA9];
          tensor[3,2] voxels3DAB#1 = <tensor[3,2]>[v_3D9F,v_3DA4,v_3DAA];
          goto JOIN3DC5
        JOIN3DC5:  preds = [ASSIGN3DC1,ASSIGN3E9E]
          tensor[3,2] ldvox3DC3#3 = phi(voxels3DAB,voxels3E86)
          real idx3DC8#1 = RSub(f3D8B,_t36AA);
          tensor[2] kernX_3DC6#1 = <tensor[2]>[f3D8B,idx3DC8];
          tensor[2] a03DCD#1 = <tensor[2]>[_t36AA,_t36AA];
          real _f3DCF#1 = -0.1e1;
          tensor[2] a13DCE#1 = <tensor[2]>[_f3DCF,_t36AA];
          tensor[2] prod13DD3#1 = VMul<2>(kernX_3DC6,a13DCE);
          tensor[2] kevalX_d0_3DCC#3 = VAdd<2>(a03DCD,prod13DD3);
          tensor[2] projIx3DDD#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC3);
          real vdot3DDE#1 = VDot<2>(projIx3DDD,kevalX_d0_3DCC);
          tensor[2] projIx3DDF#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC3);
          real vdot3DE0#1 = VDot<2>(projIx3DDF,kevalX_d0_3DCC);
          tensor[2] projIx3DE1#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC3);
          real vdot3DE2#1 = VDot<2>(projIx3DE1,kevalX_d0_3DCC);
          tensor[3] mcol3DDC#1 = <tensor[3]>[vdot3DDE,vdot3DE0,vdot3DE2];
          goto JOIN3DEC
        JOIN3DEC:  preds = [ASSIGN3DEA,COND3708]
          tensor[3] mcol3DEB#3 = phi(mcol3DDC,mcol3704)
          real op1_e3_l_213DED#1 = RDiv(_t36AA,op1_e3_l_836B1);
          tensor[3] op1_e3_l_223DF2#1 = VScale<3>(op1_e3_l_213DED,step36A5);
          tensor[3] op1_e3_l_233DF5#1 = VNeg<3>(op1_e3_l_223DF2);
          real op1_e3_l_243DF8#2 = VDot<3>(op1_e3_l_233DF5,litwsp2494);
          real op1_e3_l_253DFB#1 = RMul(op1_e3_l_243DF8,op1_e3_l_243DF8);
          real op1_e3_l_263DFE#1 = RMul(phKd24A2,op1_e3_l_253DFB);
          real op1_e3_l_283E01#1 = RSub(rayN24AC,camNearVsp2490);
          real op1_e3_l_293E04#1 = RSub(camFarVsp2492,camNearVsp2490);
          real op1_e3_l_303E07#1 = RDiv(op1_e3_l_283E01,op1_e3_l_293E04);
          tensor[3] op1_e3_l_313E0A#1 = VSub<3>(mcFar248A,mcNear2488);
          tensor[3] op1_e3_l_323E0D#1 = VScale<3>(op1_e3_l_303E07,op1_e3_l_313E0A);
          real op1_e3_l_333E10#3 = RAdd(phKa24A0,op1_e3_l_263DFE);
          tensor[3] op1_e3_l_343E13#3 = VAdd<3>(mcNear2488,op1_e3_l_323E0D);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E13);
          real r3E18#1 = TensorIndex<tensor[3],[0]>(mcol3DEB);
          real r3E19#1 = RMul(op1_e3_l_333E10,r3E17);
          real r3E1A#1 = RMul(r3E19,r3E18);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E13);
          real r3E1C#1 = TensorIndex<tensor[3],[1]>(mcol3DEB);
          real r3E1D#1 = RMul(op1_e3_l_333E10,r3E1B);
          real r3E1E#1 = RMul(r3E1D,r3E1C);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E13);
          real r3E20#1 = TensorIndex<tensor[3],[2]>(mcol3DEB);
          real r3E21#1 = RMul(op1_e3_l_333E10,r3E1F);
          real r3E22#1 = RMul(r3E21,r3E20);
          tensor[3] op1_e3_l_353E16#1 = <tensor[3]>[r3E1A,r3E1E,r3E22];
          real r3E33#1 = RMul(phKs24A4,scomp36FE);
          real r3E34#3 = RMul(r3E33,_t36AA);
          tensor[3] op1_e3_l_363E31#1 = <tensor[3]>[r3E34,r3E34,r3E34];
          real op1_e3_l_373E42#2 = RSub(_t36AA,_t36D5);
          tensor[3] op1_e3_l_383E45#3 = VAdd<3>(op1_e3_l_353E16,op1_e3_l_363E31);
          real r3E49#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E45);
          real r3E4A#3 = RMul(transp24AA,op1_e3_l_373E42);
          real r3E4B#1 = RMul(r3E4A,r3E49);
          real r3E4C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E45);
          real r3E4D#1 = RMul(r3E4A,r3E4C);
          real r3E4E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E45);
          real r3E4F#1 = RMul(r3E4A,r3E4E);
          tensor[3] op1_e3_l_393E48#1 = <tensor[3]>[r3E4B,r3E4D,r3E4F];
          tensor[3] rgb3E59#2 = VAdd<3>(rgb24A8,op1_e3_l_393E48);
          real op1_e3_l_53E5C#1 = RSub(_t36AA,op1_e3_l_373E42);
          real transp3E5F#2 = RMul(transp24AA,op1_e3_l_53E5C);
          bool _t3E62#1 = LT<real>(transp3E5F,transp0247C);
          if _t3E62 then goto SAVE3E65 else goto JOIN3E6A
        SAVE3E65:  preds = [COND3E64]
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = _t36A8;
          stabilize
          goto JOIN3E6A
        JOIN3E6A:  preds = [*STABILIZE3E68,COND3E64]
          real transp3E69#1 = phi(transp3E5F)
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = transp3E69;
          active
        ASSIGN4C28:  preds = [COND3D94]
          int ix3E71#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,n3D8E);
          int offp3E73#3 = IMul(ilit371A,ix3E71);
          real v0_3E74#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E73);
          int addRes3E76#1 = IAdd(n3D8E,ilit3714);
          int ix3E77#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,addRes3E76);
          int offp3E78#3 = IMul(ilit371A,ix3E77);
          real v1_3E79#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E78);
          tensor[2] v_3E7A#1 = <tensor[2]>[v0_3E74,v1_3E79];
          int offp3E7B#1 = IAdd(offp3E73,ilit3714);
          real v0_3E7C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7B);
          int offp3E7D#1 = IAdd(offp3E78,ilit3714);
          real v1_3E7E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7D);
          tensor[2] v_3E7F#1 = <tensor[2]>[v0_3E7C,v1_3E7E];
          int offp3E81#1 = IAdd(offp3E73,ilit3717);
          real v0_3E82#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E81);
          int offp3E83#1 = IAdd(offp3E78,ilit3717);
          real v1_3E84#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E83);
          tensor[2] v_3E85#1 = <tensor[2]>[v0_3E82,v1_3E84];
          tensor[3,2] voxels3E86#1 = <tensor[3,2]>[v_3E7A,v_3E7F,v_3E85];
          goto JOIN3DC5
        ASSIGN3EA1:  preds = [COND2D6E]
          tensor[3,3] Mtransform3EA0#12 = Transform<IMAGE3D<float[]>>(umm2472);
          tensor[3] projParam3EA3#1 = ProjectLast<tensor[3,3],[0]>(Mtransform3EA0);
          real vdot3EA4#1 = VDot<3>(projParam3EA3,pos24B8);
          tensor[3] projParam3EA5#1 = ProjectLast<tensor[3,3],[1]>(Mtransform3EA0);
          real vdot3EA6#1 = VDot<3>(projParam3EA5,pos24B8);
          tensor[3] projParam3EA7#1 = ProjectLast<tensor[3,3],[2]>(Mtransform3EA0);
          real vdot3EA8#1 = VDot<3>(projParam3EA7,pos24B8);
          tensor[3] MxPos3EA2#1 = <tensor[3]>[vdot3EA4,vdot3EA6,vdot3EA8];
          tensor[3] Ttranslate3EB1#1 = Translate<IMAGE3D<float[]>>(umm2472);
          tensor[3] imgPos3EB3#2 = VAdd<3>(MxPos3EA2,Ttranslate3EB1);
          tensor[3] nd3EB6#2 = Floor<3>(imgPos3EB3);
          tensor[3] f3EB8#3 = VSub<3>(imgPos3EB3,nd3EB6);
          int[3] n3EBB#3 = RealToInt<3>(nd3EB6);
          real r3EBE#4 = TensorIndex<tensor[3,3],[0,0]>(Mtransform3EA0);
          real r3EBF#4 = TensorIndex<tensor[3,3],[1,0]>(Mtransform3EA0);
          real r3EC0#4 = TensorIndex<tensor[3,3],[2,0]>(Mtransform3EA0);
          tensor[3] tensor3EC1#4 = <tensor[3]>[r3EBE,r3EBF,r3EC0];
          real r3EC2#4 = TensorIndex<tensor[3,3],[0,1]>(Mtransform3EA0);
          real r3EC3#4 = TensorIndex<tensor[3,3],[1,1]>(Mtransform3EA0);
          real r3EC4#4 = TensorIndex<tensor[3,3],[2,1]>(Mtransform3EA0);
          tensor[3] tensor3EC5#4 = <tensor[3]>[r3EC2,r3EC3,r3EC4];
          real r3EC6#4 = TensorIndex<tensor[3,3],[0,2]>(Mtransform3EA0);
          real r3EC7#4 = TensorIndex<tensor[3,3],[1,2]>(Mtransform3EA0);
          real r3EC8#4 = TensorIndex<tensor[3,3],[2,2]>(Mtransform3EA0);
          tensor[3] tensor3EC9#4 = <tensor[3]>[r3EC6,r3EC7,r3EC8];
          int lit3ED8#3 = -1;
          int idx3EDA#1 = 0;
          int nX_3EDC#1 = Subscript<int[3]>(n3EBB,idx3EDA);
          int idx3EDE#19 = IAdd(nX_3EDC,lit3ED8);
          int idx3EE0#6 = 1;
          int nY_3EE2#1 = Subscript<int[3]>(n3EBB,idx3EE0);
          int idx3EE4#7 = IAdd(nY_3EE2,lit3ED8);
          int idx3EE6#6 = 2;
          int nZ_3EE8#1 = Subscript<int[3]>(n3EBB,idx3EE6);
          int idx3EEA#4 = IAdd(nZ_3EE8,lit3ED8);
          int ilit3EF5#20 = 300;
          int mulRes3EF9#4 = IMul(ilit3EF5,idx3EEA);
          int addRes3EFA#1 = IAdd(idx3EE4,mulRes3EF9);
          int mulRes3EFB#4 = IMul(ilit3EF5,addRes3EFA);
          int addRes3EFC#1 = IAdd(idx3EDE,mulRes3EFB);
          real v000_3EFD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFC);
          int addRes3EFE#16 = IAdd(idx3EDE,idx3EE0);
          int addRes3EFF#1 = IAdd(addRes3EFE,mulRes3EFB);
          real v001_3F00#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFF);
          int addRes3F01#16 = IAdd(idx3EDE,idx3EE6);
          int addRes3F02#1 = IAdd(addRes3F01,mulRes3EFB);
          real v002_3F03#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F02);
          int ilit3F04#3 = 3;
          int addRes3F05#16 = IAdd(idx3EDE,ilit3F04);
          int addRes3F06#1 = IAdd(addRes3F05,mulRes3EFB);
          real v003_3F07#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F06);
          tensor[4] v00_3F08#3 = <tensor[4]>[v000_3EFD,v001_3F00,v002_3F03,v003_3F07];
          int addRes3F09#4 = IAdd(idx3EE4,idx3EE0);
          int addRes3F0A#1 = IAdd(addRes3F09,mulRes3EF9);
          int mulRes3F0B#4 = IMul(ilit3EF5,addRes3F0A);
          int addRes3F0C#1 = IAdd(idx3EDE,mulRes3F0B);
          real v010_3F0D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0C);
          int addRes3F0E#1 = IAdd(addRes3EFE,mulRes3F0B);
          real v011_3F0F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0E);
          int addRes3F10#1 = IAdd(addRes3F01,mulRes3F0B);
          real v012_3F11#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F10);
          int addRes3F12#1 = IAdd(addRes3F05,mulRes3F0B);
          real v013_3F13#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F12);
          tensor[4] v01_3F14#3 = <tensor[4]>[v010_3F0D,v011_3F0F,v012_3F11,v013_3F13];
          int addRes3F15#4 = IAdd(idx3EE4,idx3EE6);
          int addRes3F16#1 = IAdd(addRes3F15,mulRes3EF9);
          int mulRes3F17#4 = IMul(ilit3EF5,addRes3F16);
          int addRes3F18#1 = IAdd(idx3EDE,mulRes3F17);
          real v020_3F19#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F18);
          int addRes3F1A#1 = IAdd(addRes3EFE,mulRes3F17);
          real v021_3F1B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1A);
          int addRes3F1C#1 = IAdd(addRes3F01,mulRes3F17);
          real v022_3F1D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1C);
          int addRes3F1E#1 = IAdd(addRes3F05,mulRes3F17);
          real v023_3F1F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1E);
          tensor[4] v02_3F20#3 = <tensor[4]>[v020_3F19,v021_3F1B,v022_3F1D,v023_3F1F];
          int addRes3F21#4 = IAdd(idx3EE4,ilit3F04);
          int addRes3F22#1 = IAdd(addRes3F21,mulRes3EF9);
          int mulRes3F23#4 = IMul(ilit3EF5,addRes3F22);
          int addRes3F24#1 = IAdd(idx3EDE,mulRes3F23);
          real v030_3F25#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F24);
          int addRes3F26#1 = IAdd(addRes3EFE,mulRes3F23);
          real v031_3F27#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F26);
          int addRes3F28#1 = IAdd(addRes3F01,mulRes3F23);
          real v032_3F29#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F28);
          int addRes3F2A#1 = IAdd(addRes3F05,mulRes3F23);
          real v033_3F2B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F2A);
          tensor[4] v03_3F2C#3 = <tensor[4]>[v030_3F25,v031_3F27,v032_3F29,v033_3F2B];
          int addRes3F2E#1 = IAdd(idx3EEA,idx3EE0);
          int mulRes3F2F#4 = IMul(ilit3EF5,addRes3F2E);
          int addRes3F30#1 = IAdd(idx3EE4,mulRes3F2F);
          int mulRes3F31#4 = IMul(ilit3EF5,addRes3F30);
          int addRes3F32#1 = IAdd(idx3EDE,mulRes3F31);
          real v100_3F33#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F32);
          int addRes3F34#1 = IAdd(addRes3EFE,mulRes3F31);
          real v101_3F35#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F34);
          int addRes3F36#1 = IAdd(addRes3F01,mulRes3F31);
          real v102_3F37#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F36);
          int addRes3F38#1 = IAdd(addRes3F05,mulRes3F31);
          real v103_3F39#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F38);
          tensor[4] v10_3F3A#3 = <tensor[4]>[v100_3F33,v101_3F35,v102_3F37,v103_3F39];
          int addRes3F3B#1 = IAdd(addRes3F09,mulRes3F2F);
          int mulRes3F3C#4 = IMul(ilit3EF5,addRes3F3B);
          int addRes3F3D#1 = IAdd(idx3EDE,mulRes3F3C);
          real v110_3F3E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3D);
          int addRes3F3F#1 = IAdd(addRes3EFE,mulRes3F3C);
          real v111_3F40#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3F);
          int addRes3F41#1 = IAdd(addRes3F01,mulRes3F3C);
          real v112_3F42#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F41);
          int addRes3F43#1 = IAdd(addRes3F05,mulRes3F3C);
          real v113_3F44#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F43);
          tensor[4] v11_3F45#3 = <tensor[4]>[v110_3F3E,v111_3F40,v112_3F42,v113_3F44];
          int addRes3F46#1 = IAdd(addRes3F15,mulRes3F2F);
          int mulRes3F47#4 = IMul(ilit3EF5,addRes3F46);
          int addRes3F48#1 = IAdd(idx3EDE,mulRes3F47);
          real v120_3F49#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F48);
          int addRes3F4A#1 = IAdd(addRes3EFE,mulRes3F47);
          real v121_3F4B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4A);
          int addRes3F4C#1 = IAdd(addRes3F01,mulRes3F47);
          real v122_3F4D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4C);
          int addRes3F4E#1 = IAdd(addRes3F05,mulRes3F47);
          real v123_3F4F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4E);
          tensor[4] v12_3F50#3 = <tensor[4]>[v120_3F49,v121_3F4B,v122_3F4D,v123_3F4F];
          int addRes3F51#1 = IAdd(addRes3F21,mulRes3F2F);
          int mulRes3F52#4 = IMul(ilit3EF5,addRes3F51);
          int addRes3F53#1 = IAdd(idx3EDE,mulRes3F52);
          real v130_3F54#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F53);
          int addRes3F55#1 = IAdd(addRes3EFE,mulRes3F52);
          real v131_3F56#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F55);
          int addRes3F57#1 = IAdd(addRes3F01,mulRes3F52);
          real v132_3F58#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F57);
          int addRes3F59#1 = IAdd(addRes3F05,mulRes3F52);
          real v133_3F5A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F59);
          tensor[4] v13_3F5B#3 = <tensor[4]>[v130_3F54,v131_3F56,v132_3F58,v133_3F5A];
          int addRes3F5D#1 = IAdd(idx3EEA,idx3EE6);
          int mulRes3F5E#4 = IMul(ilit3EF5,addRes3F5D);
          int addRes3F5F#1 = IAdd(idx3EE4,mulRes3F5E);
          int mulRes3F60#4 = IMul(ilit3EF5,addRes3F5F);
          int addRes3F61#1 = IAdd(idx3EDE,mulRes3F60);
          real v200_3F62#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F61);
          int addRes3F63#1 = IAdd(addRes3EFE,mulRes3F60);
          real v201_3F64#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F63);
          int addRes3F65#1 = IAdd(addRes3F01,mulRes3F60);
          real v202_3F66#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F65);
          int addRes3F67#1 = IAdd(addRes3F05,mulRes3F60);
          real v203_3F68#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F67);
          tensor[4] v20_3F69#3 = <tensor[4]>[v200_3F62,v201_3F64,v202_3F66,v203_3F68];
          int addRes3F6A#1 = IAdd(addRes3F09,mulRes3F5E);
          int mulRes3F6B#4 = IMul(ilit3EF5,addRes3F6A);
          int addRes3F6C#1 = IAdd(idx3EDE,mulRes3F6B);
          real v210_3F6D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6C);
          int addRes3F6E#1 = IAdd(addRes3EFE,mulRes3F6B);
          real v211_3F6F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6E);
          int addRes3F70#1 = IAdd(addRes3F01,mulRes3F6B);
          real v212_3F71#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F70);
          int addRes3F72#1 = IAdd(addRes3F05,mulRes3F6B);
          real v213_3F73#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F72);
          tensor[4] v21_3F74#3 = <tensor[4]>[v210_3F6D,v211_3F6F,v212_3F71,v213_3F73];
          int addRes3F75#1 = IAdd(addRes3F15,mulRes3F5E);
          int mulRes3F76#4 = IMul(ilit3EF5,addRes3F75);
          int addRes3F77#1 = IAdd(idx3EDE,mulRes3F76);
          real v220_3F78#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F77);
          int addRes3F79#1 = IAdd(addRes3EFE,mulRes3F76);
          real v221_3F7A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F79);
          int addRes3F7B#1 = IAdd(addRes3F01,mulRes3F76);
          real v222_3F7C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7B);
          int addRes3F7D#1 = IAdd(addRes3F05,mulRes3F76);
          real v223_3F7E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7D);
          tensor[4] v22_3F7F#3 = <tensor[4]>[v220_3F78,v221_3F7A,v222_3F7C,v223_3F7E];
          int addRes3F80#1 = IAdd(addRes3F21,mulRes3F5E);
          int mulRes3F81#4 = IMul(ilit3EF5,addRes3F80);
          int addRes3F82#1 = IAdd(idx3EDE,mulRes3F81);
          real v230_3F83#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F82);
          int addRes3F84#1 = IAdd(addRes3EFE,mulRes3F81);
          real v231_3F85#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F84);
          int addRes3F86#1 = IAdd(addRes3F01,mulRes3F81);
          real v232_3F87#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F86);
          int addRes3F88#1 = IAdd(addRes3F05,mulRes3F81);
          real v233_3F89#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F88);
          tensor[4] v23_3F8A#3 = <tensor[4]>[v230_3F83,v231_3F85,v232_3F87,v233_3F89];
          int addRes3F8C#1 = IAdd(idx3EEA,ilit3F04);
          int mulRes3F8D#4 = IMul(ilit3EF5,addRes3F8C);
          int addRes3F8E#1 = IAdd(idx3EE4,mulRes3F8D);
          int mulRes3F8F#4 = IMul(ilit3EF5,addRes3F8E);
          int addRes3F90#1 = IAdd(idx3EDE,mulRes3F8F);
          real v300_3F91#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F90);
          int addRes3F92#1 = IAdd(addRes3EFE,mulRes3F8F);
          real v301_3F93#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F92);
          int addRes3F94#1 = IAdd(addRes3F01,mulRes3F8F);
          real v302_3F95#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F94);
          int addRes3F96#1 = IAdd(addRes3F05,mulRes3F8F);
          real v303_3F97#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F96);
          tensor[4] v30_3F98#3 = <tensor[4]>[v300_3F91,v301_3F93,v302_3F95,v303_3F97];
          int addRes3F99#1 = IAdd(addRes3F09,mulRes3F8D);
          int mulRes3F9A#4 = IMul(ilit3EF5,addRes3F99);
          int addRes3F9B#1 = IAdd(idx3EDE,mulRes3F9A);
          real v310_3F9C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9B);
          int addRes3F9D#1 = IAdd(addRes3EFE,mulRes3F9A);
          real v311_3F9E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9D);
          int addRes3F9F#1 = IAdd(addRes3F01,mulRes3F9A);
          real v312_3FA0#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9F);
          int addRes3FA1#1 = IAdd(addRes3F05,mulRes3F9A);
          real v313_3FA2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA1);
          tensor[4] v31_3FA3#3 = <tensor[4]>[v310_3F9C,v311_3F9E,v312_3FA0,v313_3FA2];
          int addRes3FA4#1 = IAdd(addRes3F15,mulRes3F8D);
          int mulRes3FA5#4 = IMul(ilit3EF5,addRes3FA4);
          int addRes3FA6#1 = IAdd(idx3EDE,mulRes3FA5);
          real v320_3FA7#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA6);
          int addRes3FA8#1 = IAdd(addRes3EFE,mulRes3FA5);
          real v321_3FA9#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA8);
          int addRes3FAA#1 = IAdd(addRes3F01,mulRes3FA5);
          real v322_3FAB#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAA);
          int addRes3FAC#1 = IAdd(addRes3F05,mulRes3FA5);
          real v323_3FAD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAC);
          tensor[4] v32_3FAE#3 = <tensor[4]>[v320_3FA7,v321_3FA9,v322_3FAB,v323_3FAD];
          int addRes3FAF#1 = IAdd(addRes3F21,mulRes3F8D);
          int mulRes3FB0#4 = IMul(ilit3EF5,addRes3FAF);
          int addRes3FB1#1 = IAdd(idx3EDE,mulRes3FB0);
          real v330_3FB2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB1);
          int addRes3FB3#1 = IAdd(addRes3EFE,mulRes3FB0);
          real v331_3FB4#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB3);
          int addRes3FB5#1 = IAdd(addRes3F01,mulRes3FB0);
          real v332_3FB6#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB5);
          int addRes3FB7#1 = IAdd(addRes3F05,mulRes3FB0);
          real v333_3FB8#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB7);
          tensor[4] v33_3FB9#3 = <tensor[4]>[v330_3FB2,v331_3FB4,v332_3FB6,v333_3FB8];
          real vZ_408A#4 = VIndex<3,2>(f3EB8);
          real rlit4091#9 = 0.1e1;
          real idx4092#1 = RAdd(vZ_408A,rlit4091);
          real idx4090#1 = RSub(vZ_408A,rlit4091);
          real rlit408D#6 = 0.2e1;
          real idx408E#1 = RSub(vZ_408A,rlit408D);
          tensor[4] kernZ_408C#6 = <tensor[4]>[idx4092,vZ_408A,idx4090,idx408E];
          real _f40AB#2 = 0.133333333333e1;
          real _f40AC#2 = 0.666666666667e0;
          tensor[4] a0409B#3 = <tensor[4]>[_f40AB,_f40AC,_f40AC,_f40AB];
          real _f40A7#3 = -0.2e1;
          real _f40A8#2 = 0.e0;
          tensor[4] a1409C#6 = <tensor[4]>[_f40A7,_f40A8,_f40A8,rlit408D];
          real _f40A4#3 = -0.1e1;
          tensor[4] a2409D#3 = <tensor[4]>[rlit4091,_f40A4,_f40A4,rlit4091];
          real _f409F#1 = -0.166666666667e0;
          real _f40A0#2 = 0.5e0;
          real _f40A1#2 = -0.5e0;
          real _f40A2#1 = 0.166666666667e0;
          tensor[4] a3409E#3 = <tensor[4]>[_f409F,_f40A0,_f40A1,_f40A2];
          tensor[4] prod340AF#1 = VMul<4>(kernZ_408C,a3409E);
          tensor[4] sum240B0#1 = VAdd<4>(a2409D,prod340AF);
          tensor[4] prod240B1#1 = VMul<4>(kernZ_408C,sum240B0);
          tensor[4] sum140B2#1 = VAdd<4>(a1409C,prod240B1);
          tensor[4] prod140B3#1 = VMul<4>(kernZ_408C,sum140B2);
          tensor[4] kevalZ_d0_409A#5 = VAdd<4>(a0409B,prod140B3);
          tensor[4] a140D0#6 = <tensor[4]>[rlit408D,_f40A7,_f40A7,rlit408D];
          real _f40D3#1 = 0.15e1;
          real _f40D4#1 = -0.15e1;
          tensor[4] a240D1#3 = <tensor[4]>[_f40A1,_f40D3,_f40D4,_f40A0];
          tensor[4] prod240DE#1 = VMul<4>(kernZ_408C,a240D1);
          tensor[4] sum140DF#1 = VAdd<4>(a140D0,prod240DE);
          tensor[4] prod140E0#1 = VMul<4>(kernZ_408C,sum140DF);
          tensor[4] kevalZ_d1_40CE#3 = VAdd<4>(a1409C,prod140E0);
          real _f40F8#1 = 0.3e1;
          real _f40F9#1 = -0.3e1;
          tensor[4] a140F6#3 = <tensor[4]>[_f40A4,_f40F8,_f40F9,rlit4091];
          tensor[4] prod140FF#1 = VMul<4>(kernZ_408C,a140F6);
          tensor[4] kevalZ_d2_40F4#1 = VAdd<4>(a140D0,prod140FF);
          real vY_410E#4 = VIndex<3,1>(f3EB8);
          real idx4116#1 = RAdd(vY_410E,rlit4091);
          real idx4114#1 = RSub(vY_410E,rlit4091);
          real idx4112#1 = RSub(vY_410E,rlit408D);
          tensor[4] kernY_4110#6 = <tensor[4]>[idx4116,vY_410E,idx4114,idx4112];
          tensor[4] prod34133#1 = VMul<4>(kernY_4110,a3409E);
          tensor[4] sum24134#1 = VAdd<4>(a2409D,prod34133);
          tensor[4] prod24135#1 = VMul<4>(kernY_4110,sum24134);
          tensor[4] sum14136#1 = VAdd<4>(a1409C,prod24135);
          tensor[4] prod14137#1 = VMul<4>(kernY_4110,sum14136);
          tensor[4] kevalY_d0_411E#12 = VAdd<4>(a0409B,prod14137);
          tensor[4] prod24162#1 = VMul<4>(kernY_4110,a240D1);
          tensor[4] sum14163#1 = VAdd<4>(a140D0,prod24162);
          tensor[4] prod14164#1 = VMul<4>(kernY_4110,sum14163);
          tensor[4] kevalY_d1_4152#8 = VAdd<4>(a1409C,prod14164);
          tensor[4] prod14183#1 = VMul<4>(kernY_4110,a140F6);
          tensor[4] kevalY_d2_4178#4 = VAdd<4>(a140D0,prod14183);
          real vX_4192#4 = VIndex<3,0>(f3EB8);
          real idx419A#1 = RAdd(vX_4192,rlit4091);
          real idx4198#1 = RSub(vX_4192,rlit4091);
          real idx4196#1 = RSub(vX_4192,rlit408D);
          tensor[4] kernX_4194#6 = <tensor[4]>[idx419A,vX_4192,idx4198,idx4196];
          tensor[4] prod341B7#1 = VMul<4>(kernX_4194,a3409E);
          tensor[4] sum241B8#1 = VAdd<4>(a2409D,prod341B7);
          tensor[4] prod241B9#1 = VMul<4>(kernX_4194,sum241B8);
          tensor[4] sum141BA#1 = VAdd<4>(a1409C,prod241B9);
          tensor[4] prod141BB#1 = VMul<4>(kernX_4194,sum141BA);
          tensor[4] kevalX_d0_41A2#16 = VAdd<4>(a0409B,prod141BB);
          tensor[4] prod241E6#1 = VMul<4>(kernX_4194,a240D1);
          tensor[4] sum141E7#1 = VAdd<4>(a140D0,prod241E6);
          tensor[4] prod141E8#1 = VMul<4>(kernX_4194,sum141E7);
          tensor[4] kevalX_d1_41D6#16 = VAdd<4>(a1409C,prod141E8);
          tensor[4] prod14207#1 = VMul<4>(kernX_4194,a140F6);
          tensor[4] kevalX_d2_41FC#16 = VAdd<4>(a140D0,prod14207);
          real vdot4227#1 = VDot<4>(kevalX_d2_41FC,v00_3F08);
          real vdot4228#1 = VDot<4>(kevalX_d2_41FC,v01_3F14);
          real vdot4229#1 = VDot<4>(kevalX_d2_41FC,v02_3F20);
          real vdot422A#1 = VDot<4>(kevalX_d2_41FC,v03_3F2C);
          tensor[4] cons_422B#1 = <tensor[4]>[vdot4227,vdot4228,vdot4229,vdot422A];
          real vdot422C#1 = VDot<4>(kevalX_d2_41FC,v10_3F3A);
          real vdot422D#1 = VDot<4>(kevalX_d2_41FC,v11_3F45);
          real vdot422E#1 = VDot<4>(kevalX_d2_41FC,v12_3F50);
          real vdot422F#1 = VDot<4>(kevalX_d2_41FC,v13_3F5B);
          tensor[4] cons_4230#1 = <tensor[4]>[vdot422C,vdot422D,vdot422E,vdot422F];
          real vdot4231#1 = VDot<4>(kevalX_d2_41FC,v20_3F69);
          real vdot4232#1 = VDot<4>(kevalX_d2_41FC,v21_3F74);
          real vdot4233#1 = VDot<4>(kevalX_d2_41FC,v22_3F7F);
          real vdot4234#1 = VDot<4>(kevalX_d2_41FC,v23_3F8A);
          tensor[4] cons_4235#1 = <tensor[4]>[vdot4231,vdot4232,vdot4233,vdot4234];
          real vdot4236#1 = VDot<4>(kevalX_d2_41FC,v30_3F98);
          real vdot4237#1 = VDot<4>(kevalX_d2_41FC,v31_3FA3);
          real vdot4238#1 = VDot<4>(kevalX_d2_41FC,v32_3FAE);
          real vdot4239#1 = VDot<4>(kevalX_d2_41FC,v33_3FB9);
          tensor[4] cons_423A#1 = <tensor[4]>[vdot4236,vdot4237,vdot4238,vdot4239];
          real vdot423B#1 = VDot<4>(kevalY_d0_411E,cons_422B);
          real vdot423C#1 = VDot<4>(kevalY_d0_411E,cons_4230);
          real vdot423D#1 = VDot<4>(kevalY_d0_411E,cons_4235);
          real vdot423E#1 = VDot<4>(kevalY_d0_411E,cons_423A);
          tensor[4] cons_423F#1 = <tensor[4]>[vdot423B,vdot423C,vdot423D,vdot423E];
          real vdot4240#1 = VDot<4>(kevalZ_d0_409A,cons_423F);
          real vdot4241#1 = VDot<4>(kevalX_d1_41D6,v00_3F08);
          real vdot4242#1 = VDot<4>(kevalX_d1_41D6,v01_3F14);
          real vdot4243#1 = VDot<4>(kevalX_d1_41D6,v02_3F20);
          real vdot4244#1 = VDot<4>(kevalX_d1_41D6,v03_3F2C);
          tensor[4] cons_4245#2 = <tensor[4]>[vdot4241,vdot4242,vdot4243,vdot4244];
          real vdot4246#1 = VDot<4>(kevalX_d1_41D6,v10_3F3A);
          real vdot4247#1 = VDot<4>(kevalX_d1_41D6,v11_3F45);
          real vdot4248#1 = VDot<4>(kevalX_d1_41D6,v12_3F50);
          real vdot4249#1 = VDot<4>(kevalX_d1_41D6,v13_3F5B);
          tensor[4] cons_424A#2 = <tensor[4]>[vdot4246,vdot4247,vdot4248,vdot4249];
          real vdot424B#1 = VDot<4>(kevalX_d1_41D6,v20_3F69);
          real vdot424C#1 = VDot<4>(kevalX_d1_41D6,v21_3F74);
          real vdot424D#1 = VDot<4>(kevalX_d1_41D6,v22_3F7F);
          real vdot424E#1 = VDot<4>(kevalX_d1_41D6,v23_3F8A);
          tensor[4] cons_424F#2 = <tensor[4]>[vdot424B,vdot424C,vdot424D,vdot424E];
          real vdot4250#1 = VDot<4>(kevalX_d1_41D6,v30_3F98);
          real vdot4251#1 = VDot<4>(kevalX_d1_41D6,v31_3FA3);
          real vdot4252#1 = VDot<4>(kevalX_d1_41D6,v32_3FAE);
          real vdot4253#1 = VDot<4>(kevalX_d1_41D6,v33_3FB9);
          tensor[4] cons_4254#2 = <tensor[4]>[vdot4250,vdot4251,vdot4252,vdot4253];
          real vdot4255#1 = VDot<4>(kevalY_d1_4152,cons_4245);
          real vdot4256#1 = VDot<4>(kevalY_d1_4152,cons_424A);
          real vdot4257#1 = VDot<4>(kevalY_d1_4152,cons_424F);
          real vdot4258#1 = VDot<4>(kevalY_d1_4152,cons_4254);
          tensor[4] cons_4259#1 = <tensor[4]>[vdot4255,vdot4256,vdot4257,vdot4258];
          real vdot425A#2 = VDot<4>(kevalZ_d0_409A,cons_4259);
          real vdot425B#1 = VDot<4>(kevalY_d0_411E,cons_4245);
          real vdot425C#1 = VDot<4>(kevalY_d0_411E,cons_424A);
          real vdot425D#1 = VDot<4>(kevalY_d0_411E,cons_424F);
          real vdot425E#1 = VDot<4>(kevalY_d0_411E,cons_4254);
          tensor[4] cons_425F#2 = <tensor[4]>[vdot425B,vdot425C,vdot425D,vdot425E];
          real vdot4260#2 = VDot<4>(kevalZ_d1_40CE,cons_425F);
          tensor[3] tensor4261#3 = <tensor[3]>[vdot4240,vdot425A,vdot4260];
          real vdot4262#1 = VDot<4>(kevalX_d0_41A2,v00_3F08);
          real vdot4263#1 = VDot<4>(kevalX_d0_41A2,v01_3F14);
          real vdot4264#1 = VDot<4>(kevalX_d0_41A2,v02_3F20);
          real vdot4265#1 = VDot<4>(kevalX_d0_41A2,v03_3F2C);
          tensor[4] cons_4266#3 = <tensor[4]>[vdot4262,vdot4263,vdot4264,vdot4265];
          real vdot4267#1 = VDot<4>(kevalX_d0_41A2,v10_3F3A);
          real vdot4268#1 = VDot<4>(kevalX_d0_41A2,v11_3F45);
          real vdot4269#1 = VDot<4>(kevalX_d0_41A2,v12_3F50);
          real vdot426A#1 = VDot<4>(kevalX_d0_41A2,v13_3F5B);
          tensor[4] cons_426B#3 = <tensor[4]>[vdot4267,vdot4268,vdot4269,vdot426A];
          real vdot426C#1 = VDot<4>(kevalX_d0_41A2,v20_3F69);
          real vdot426D#1 = VDot<4>(kevalX_d0_41A2,v21_3F74);
          real vdot426E#1 = VDot<4>(kevalX_d0_41A2,v22_3F7F);
          real vdot426F#1 = VDot<4>(kevalX_d0_41A2,v23_3F8A);
          tensor[4] cons_4270#3 = <tensor[4]>[vdot426C,vdot426D,vdot426E,vdot426F];
          real vdot4271#1 = VDot<4>(kevalX_d0_41A2,v30_3F98);
          real vdot4272#1 = VDot<4>(kevalX_d0_41A2,v31_3FA3);
          real vdot4273#1 = VDot<4>(kevalX_d0_41A2,v32_3FAE);
          real vdot4274#1 = VDot<4>(kevalX_d0_41A2,v33_3FB9);
          tensor[4] cons_4275#3 = <tensor[4]>[vdot4271,vdot4272,vdot4273,vdot4274];
          real vdot4276#1 = VDot<4>(kevalY_d2_4178,cons_4266);
          real vdot4277#1 = VDot<4>(kevalY_d2_4178,cons_426B);
          real vdot4278#1 = VDot<4>(kevalY_d2_4178,cons_4270);
          real vdot4279#1 = VDot<4>(kevalY_d2_4178,cons_4275);
          tensor[4] cons_427A#1 = <tensor[4]>[vdot4276,vdot4277,vdot4278,vdot4279];
          real vdot427B#1 = VDot<4>(kevalZ_d0_409A,cons_427A);
          real vdot427C#1 = VDot<4>(kevalY_d1_4152,cons_4266);
          real vdot427D#1 = VDot<4>(kevalY_d1_4152,cons_426B);
          real vdot427E#1 = VDot<4>(kevalY_d1_4152,cons_4270);
          real vdot427F#1 = VDot<4>(kevalY_d1_4152,cons_4275);
          tensor[4] cons_4280#2 = <tensor[4]>[vdot427C,vdot427D,vdot427E,vdot427F];
          real vdot4281#2 = VDot<4>(kevalZ_d1_40CE,cons_4280);
          tensor[3] tensor4282#3 = <tensor[3]>[vdot425A,vdot427B,vdot4281];
          real vdot4283#1 = VDot<4>(kevalY_d0_411E,cons_4266);
          real vdot4284#1 = VDot<4>(kevalY_d0_411E,cons_426B);
          real vdot4285#1 = VDot<4>(kevalY_d0_411E,cons_4270);
          real vdot4286#1 = VDot<4>(kevalY_d0_411E,cons_4275);
          tensor[4] cons_4287#2 = <tensor[4]>[vdot4283,vdot4284,vdot4285,vdot4286];
          real vdot4288#1 = VDot<4>(kevalZ_d2_40F4,cons_4287);
          tensor[3] tensor4289#3 = <tensor[3]>[vdot4260,vdot4281,vdot4288];
          real vdot4302#3 = VDot<3>(tensor4261,tensor3EC1);
          real vdot4304#3 = VDot<3>(tensor4261,tensor3EC5);
          real vdot4306#3 = VDot<3>(tensor4261,tensor3EC9);
          real vdot4309#3 = VDot<3>(tensor4282,tensor3EC1);
          real vdot430A#3 = VDot<3>(tensor4282,tensor3EC5);
          real vdot430B#3 = VDot<3>(tensor4282,tensor3EC9);
          real vdot430E#3 = VDot<3>(tensor4289,tensor3EC1);
          real vdot430F#3 = VDot<3>(tensor4289,tensor3EC5);
          real vdot4310#3 = VDot<3>(tensor4289,tensor3EC9);
          real r4329#1 = RMul(r3EBE,vdot4302);
          real r432C#1 = RMul(r3EBF,vdot4309);
          real r432F#1 = RMul(r3EC0,vdot430E);
          real r4330#1 = RAdd(r4329,r432C);
          real r4331#1 = RAdd(r4330,r432F);
          real r4333#1 = RMul(r3EBE,vdot4304);
          real r4335#1 = RMul(r3EBF,vdot430A);
          real r4337#1 = RMul(r3EC0,vdot430F);
          real r4338#1 = RAdd(r4333,r4335);
          real r4339#1 = RAdd(r4338,r4337);
          real r433B#1 = RMul(r3EBE,vdot4306);
          real r433D#1 = RMul(r3EBF,vdot430B);
          real r433F#1 = RMul(r3EC0,vdot4310);
          real r4340#1 = RAdd(r433B,r433D);
          real r4341#1 = RAdd(r4340,r433F);
          tensor[3] tensor4342#1 = <tensor[3]>[r4331,r4339,r4341];
          real r4344#1 = RMul(r3EC2,vdot4302);
          real r4346#1 = RMul(r3EC3,vdot4309);
          real r4348#1 = RMul(r3EC4,vdot430E);
          real r4349#1 = RAdd(r4344,r4346);
          real r434A#1 = RAdd(r4349,r4348);
          real r434B#1 = RMul(r3EC2,vdot4304);
          real r434C#1 = RMul(r3EC3,vdot430A);
          real r434D#1 = RMul(r3EC4,vdot430F);
          real r434E#1 = RAdd(r434B,r434C);
          real r434F#1 = RAdd(r434E,r434D);
          real r4350#1 = RMul(r3EC2,vdot4306);
          real r4351#1 = RMul(r3EC3,vdot430B);
          real r4352#1 = RMul(r3EC4,vdot4310);
          real r4353#1 = RAdd(r4350,r4351);
          real r4354#1 = RAdd(r4353,r4352);
          tensor[3] tensor4355#1 = <tensor[3]>[r434A,r434F,r4354];
          real r4357#1 = RMul(r3EC6,vdot4302);
          real r4359#1 = RMul(r3EC7,vdot4309);
          real r435B#1 = RMul(r3EC8,vdot430E);
          real r435C#1 = RAdd(r4357,r4359);
          real r435D#1 = RAdd(r435C,r435B);
          real r435E#1 = RMul(r3EC6,vdot4304);
          real r435F#1 = RMul(r3EC7,vdot430A);
          real r4360#1 = RMul(r3EC8,vdot430F);
          real r4361#1 = RAdd(r435E,r435F);
          real r4362#1 = RAdd(r4361,r4360);
          real r4363#1 = RMul(r3EC6,vdot4306);
          real r4364#1 = RMul(r3EC7,vdot430B);
          real r4365#1 = RMul(r3EC8,vdot4310);
          real r4366#1 = RAdd(r4363,r4364);
          real r4367#1 = RAdd(r4366,r4365);
          tensor[3] tensor4368#1 = <tensor[3]>[r435D,r4362,r4367];
          tensor[3,3] _t4326#1 = <tensor[3,3]>[tensor4342,tensor4355,tensor4368];
          (real[3] evals43AD#2,tensor[3][3] E43AE#2) = EigenVecs3x3(_t4326);
          tensor[3] _t43B0#6 = Subscript<tensor[3][3]>(E43AE,idx3EE6);
          real _t43B2#9 = Subscript<real[3]>(evals43AD,idx3EE6);
          tensor[3] _t43B4#6 = Subscript<tensor[3][3]>(E43AE,idx3EE0);
          real _t43B6#9 = Subscript<real[3]>(evals43AD,idx3EE0);
          real r43B9#1 = TensorIndex<tensor[3],[0]>(_t43B0);
          tensor[3] binopV43BA#3 = VScale<3>(r43B9,_t43B0);
          real r43BB#1 = TensorIndex<tensor[3],[1]>(_t43B0);
          tensor[3] binopV43BC#3 = VScale<3>(r43BB,_t43B0);
          real r43BD#1 = TensorIndex<tensor[3],[2]>(_t43B0);
          tensor[3] binopV43BE#3 = VScale<3>(r43BD,_t43B0);
          real r43C8#1 = TensorIndex<tensor[3],[0]>(_t43B4);
          tensor[3] binopV43C9#3 = VScale<3>(r43C8,_t43B4);
          real r43CA#1 = TensorIndex<tensor[3],[1]>(_t43B4);
          tensor[3] binopV43CB#3 = VScale<3>(r43CA,_t43B4);
          real r43CC#1 = TensorIndex<tensor[3],[2]>(_t43B4);
          tensor[3] binopV43CD#3 = VScale<3>(r43CC,_t43B4);
          real r43D7#1 = VIndex<3,0>(binopV43BA);
          real r43D8#1 = RDiv(r43D7,_t43B2);
          real r43D9#1 = VIndex<3,1>(binopV43BA);
          real r43DA#1 = RDiv(r43D9,_t43B2);
          real r43DB#1 = VIndex<3,2>(binopV43BA);
          real r43DC#1 = RDiv(r43DB,_t43B2);
          tensor[3] tensor43DD#1 = <tensor[3]>[r43D8,r43DA,r43DC];
          real r43DE#1 = VIndex<3,0>(binopV43BC);
          real r43DF#1 = RDiv(r43DE,_t43B2);
          real r43E0#1 = VIndex<3,1>(binopV43BC);
          real r43E1#1 = RDiv(r43E0,_t43B2);
          real r43E2#1 = VIndex<3,2>(binopV43BC);
          real r43E3#1 = RDiv(r43E2,_t43B2);
          tensor[3] tensor43E4#1 = <tensor[3]>[r43DF,r43E1,r43E3];
          real r43E5#1 = VIndex<3,0>(binopV43BE);
          real r43E6#1 = RDiv(r43E5,_t43B2);
          real r43E7#1 = VIndex<3,1>(binopV43BE);
          real r43E8#1 = RDiv(r43E7,_t43B2);
          real r43E9#1 = VIndex<3,2>(binopV43BE);
          real r43EA#1 = RDiv(r43E9,_t43B2);
          tensor[3] tensor43EB#1 = <tensor[3]>[r43E6,r43E8,r43EA];
          real r4404#1 = VIndex<3,0>(binopV43C9);
          real r4405#1 = RDiv(r4404,_t43B6);
          real r4406#1 = VIndex<3,1>(binopV43C9);
          real r4407#1 = RDiv(r4406,_t43B6);
          real r4408#1 = VIndex<3,2>(binopV43C9);
          real r4409#1 = RDiv(r4408,_t43B6);
          tensor[3] tensor440A#1 = <tensor[3]>[r4405,r4407,r4409];
          real r440B#1 = VIndex<3,0>(binopV43CB);
          real r440C#1 = RDiv(r440B,_t43B6);
          real r440D#1 = VIndex<3,1>(binopV43CB);
          real r440E#1 = RDiv(r440D,_t43B6);
          real r440F#1 = VIndex<3,2>(binopV43CB);
          real r4410#1 = RDiv(r440F,_t43B6);
          tensor[3] tensor4411#1 = <tensor[3]>[r440C,r440E,r4410];
          real r4412#1 = VIndex<3,0>(binopV43CD);
          real r4413#1 = RDiv(r4412,_t43B6);
          real r4414#1 = VIndex<3,1>(binopV43CD);
          real r4415#1 = RDiv(r4414,_t43B6);
          real r4416#1 = VIndex<3,2>(binopV43CD);
          real r4417#1 = RDiv(r4416,_t43B6);
          tensor[3] tensor4418#1 = <tensor[3]>[r4413,r4415,r4417];
          tensor[3] v4433#1 = VAdd<3>(tensor43DD,tensor440A);
          tensor[3] v4436#1 = VAdd<3>(tensor43E4,tensor4411);
          tensor[3] v4439#1 = VAdd<3>(tensor43EB,tensor4418);
          real vdot4613#1 = VDot<4>(kevalZ_d0_409A,cons_425F);
          real vdot462D#1 = VDot<4>(kevalZ_d0_409A,cons_4280);
          real vdot4633#1 = VDot<4>(kevalZ_d1_40CE,cons_4287);
          tensor[3] TPP45E9#3 = <tensor[3]>[vdot4613,vdot462D,vdot4633];
          real vdot4682#1 = VDot<3>(TPP45E9,tensor3EC1);
          real vdot4684#1 = VDot<3>(TPP45E9,tensor3EC5);
          real vdot4686#1 = VDot<3>(TPP45E9,tensor3EC9);
          tensor[3] probe_l_144680#3 = <tensor[3]>[vdot4682,vdot4684,vdot4686];
          tensor[3] negV4691#1 = VNeg<3>(v4433);
          tensor[3] negV4693#1 = VNeg<3>(v4436);
          tensor[3] negV4695#1 = VNeg<3>(v4439);
          real vdot469F#1 = VDot<3>(negV4691,probe_l_144680);
          real vdot46A1#1 = VDot<3>(negV4693,probe_l_144680);
          real vdot46A3#1 = VDot<3>(negV4695,probe_l_144680);
          tensor[3] _t36A6#1 = <tensor[3]>[vdot469F,vdot46A1,vdot46A3];
          goto JOIN36A7
        ASSIGN46AC:  preds = [COND2D5A]
          bool _t2D5E#1 = false;
          goto JOIN2D5F
        ASSIGN46AD:  preds = [COND2D55]
          bool _t2D61#1 = false;
          goto JOIN2D62
        ASSIGN46AE:  preds = [COND24C1]
          bool _t2D64#1 = false;
          goto JOIN2D65
    end update
    method stabilize
        ENTRY46AF:  preds = []
          tensor[4] rgba46B0#1 = self.rgba;
          tensor[3] rgb46B2#3 = self.rgb;
          real transp46B4#2 = self.transp;
          real _t46B6#2 = 0.1e1;
          bool _t46B8#1 = LT<real>(transp46B4,_t46B6);
          if _t46B8 then goto ASSIGN46BD else goto JOIN46D0
        ASSIGN46BD:  preds = [COND46BA]
          real aa46BB#4 = RSub(_t46B6,transp46B4);
          real _t46BE#1 = VIndex<3,0>(rgb46B2);
          real _t46C0#1 = RDiv(_t46BE,aa46BB);
          real _t46C3#1 = VIndex<3,1>(rgb46B2);
          real _t46C5#1 = RDiv(_t46C3,aa46BB);
          real _t46C8#1 = VIndex<3,2>(rgb46B2);
          real _t46CA#1 = RDiv(_t46C8,aa46BB);
          tensor[4] rgba46CD#1 = <tensor[4]>[_t46C0,_t46C5,_t46CA,aa46BB];
          goto JOIN46D0
        JOIN46D0:  preds = [ASSIGN46CE,COND46BA]
          tensor[4] rgba46CF#1 = phi(rgba46CD,rgba46B0)
          self.rgba = rgba46CF;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY46D3:  preds = []
      int iresU46D4#1 = globals.iresU2187;
      int iresV46D6#1 = globals.iresV2188;
      int _t46D8#2 = 0;
      int _t46DA#2 = 1;
      int _t46DC#1 = ISub(iresV46D6,_t46DA);
      int[] _t46DE#1 = Range(_t46D8,_t46DC);
    FOREACH46E1:  preds = [ASSIGN46DF,NEXT46EA]
      foreach (vi46E0 in _t46DE) on exit goto RETURN46EB
      int _t46E2#1 = ISub(iresU46D4,_t46DA);
      int[] _t46E4#1 = Range(_t46D8,_t46E2);
    FOREACH46E7:  preds = [ASSIGN46E5,NEXT46E9]
      foreach (ui46E6 in _t46E4) on exit goto NEXT46EA
      new ray(ui46E6,vi46E0);
      goto FOREACH46E7
    NEXT46EA:  preds = [FOREACH46E7]
      goto FOREACH46E1
    RETURN46EB:  preds = [FOREACH46E1]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block217B (block) = <no-default>
  input 0space0509_intermedateGlobal217C (space) = <no-default>
  input 0U050B_intermedateGlobal217D (U) = <no-default>
  input cellChoice217E (cellChoice) = <no-default>
  input cmap217F (cmap) = image("cmap.nrrd")
  input camEye2180 (camEye) = <default>
  input camAt2181 (camAt) = <default>
  input camUp2182 (camUp) = <default>
  input camNear2183 (camNear) = <default>
  input camFar2184 (camFar) = <default>
  input camFOV2185 (camFOV) = <default>
  input camOrtho2186 (camOrtho) = <default>
  input iresU2187 (iresU) = <default>
  input iresV2188 (iresV) = <default>
  input rayStep2189 (rayStep) = <default>
  input refStep218A (refStep) = <default>
  input transp0218B (transp0) = <default>
  input thick218C (thick) = <default>
  input fStrTh218D (fStrTh) = <default>
  input fMaskTh218E (fMaskTh) = <default>
  input fBias218F (fBias) = <default>
  input maxAlpha2190 (maxAlpha) = <default>
  input light2191 (light) = <default>
  input phong2192 (phong) = <default>
  input mcNear2193 (mcNear) = <default>
  input mcFar2194 (mcFar) = <default>
  input litdir2195 (litdir) = <default>
  input cminmax2196 (cminmax) = <default>
  input analytical2197 (analytical) = <default>
  input umm2198 (umm) = image("data.nrrd")
  global tensor[3] camN2199
  global tensor[3] camU219A
  global tensor[3] camV219B
  global real camDist219C
  global real camVmax219D
  global real camUmax219E
  global real camNearVsp219F
  global real camFarVsp21A0
  global tensor[3] litwsp21A1
  global int _t21A2
  global femData:Space _tX21A3
  global femData:FemFunc _tXX21A4
## functions
## input initialization
  ENTRY21A7:  preds = []
    real _t21A8#13 = 0.e0;
    real _t21AA#1 = -0.2e1;
    tensor[3] camEye21AC#1 = <tensor[3]>[_t21A8,_t21AA,_t21A8];
    globals.camEye2180 = camEye21AC;
    tensor[3] camAt21AF#1 = <tensor[3]>[_t21A8,_t21A8,_t21A8];
    globals.camAt2181 = camAt21AF;
    real _t21B2#5 = 0.1e1;
    tensor[3] camUp21B4#1 = <tensor[3]>[_t21A8,_t21A8,_t21B2];
    globals.camUp2182 = camUp21B4;
    real camNear21B7#1 = -0.4e1;
    globals.camNear2183 = camNear21B7;
    real camFar21BA#1 = 0.4e1;
    globals.camFar2184 = camFar21BA;
    real camFOV21BD#1 = 0.1e2;
    globals.camFOV2185 = camFOV21BD;
    bool camOrtho21C0#2 = false;
    globals.camOrtho2186 = camOrtho21C0;
    int iresU21C3#2 = 100;
    globals.iresU2187 = iresU21C3;
    globals.iresV2188 = iresU21C3;
    real rayStep21C7#2 = 0.1e-3;
    globals.rayStep2189 = rayStep21C7;
    globals.refStep218A = rayStep21C7;
    real transp021CB#1 = 0.5e-2;
    globals.transp0218B = transp021CB;
    real thick21CE#1 = 0.1e-1;
    globals.thick218C = thick21CE;
    globals.fStrTh218D = _t21A8;
    globals.fMaskTh218E = _t21A8;
    real fBias21D3#2 = 0.1e0;
    globals.fBias218F = fBias21D3;
    globals.maxAlpha2190 = _t21B2;
    globals.light2191 = camOrtho21C0;
    real _t21D8#1 = 0.7e0;
    real _t21DA#1 = 0.2e0;
    real _t21DC#1 = 0.1e3;
    tensor[4] phong21DE#1 = <tensor[4]>[fBias21D3,_t21D8,_t21DA,_t21DC];
    globals.phong2192 = phong21DE;
    tensor[3] mcNear21E1#2 = <tensor[3]>[_t21B2,_t21B2,_t21B2];
    globals.mcNear2193 = mcNear21E1;
    globals.mcFar2194 = mcNear21E1;
    real _t21E5#1 = -0.1e1;
    tensor[3] litdir21E7#1 = <tensor[3]>[_t21A8,_t21E5,_t21A8];
    globals.litdir2195 = litdir21E7;
    tensor[2] cminmax21EA#1 = <tensor[2]>[_t21A8,_t21A8];
    globals.cminmax2196 = cminmax21EA;
    bool analytical21ED#1 = true;
    globals.analytical2197 = analytical21ED;
    return
## global-variable initialization
  ENTRY21F1:  preds = []
    femData:Mesh block21F2#3 = globals.block217B;
    femData:Space 0space0509_intermedateGlobal21F4#1 = globals.0space0509_intermedateGlobal217C;
    femData:FemFunc 0U050B_intermedateGlobal21F6#1 = globals.0U050B_intermedateGlobal217D;
    int cellChoice21F8#1 = globals.cellChoice217E;
    tensor[3] camEye21FC#1 = globals.camEye2180;
    tensor[3] camAt21FE#1 = globals.camAt2181;
    tensor[3] camUp2200#3 = globals.camUp2182;
    real camNear2202#1 = globals.camNear2183;
    real camFar2204#1 = globals.camFar2184;
    real camFOV2206#1 = globals.camFOV2185;
    int iresU2208#1 = globals.iresU2187;
    int iresV220A#1 = globals.iresV2188;
    tensor[3] litdir220C#5 = globals.litdir2195;
    int _t220E#1 = 0;
    int _t2210#1 = 1;
    int _t2212#1 = ExtractFemItem<int,NumCell(Mesh)>(block21F2);
    int _t2214#1 = ISub(_t2212,_t2210);
    int[] _t2216#1 = Range(_t220E,_t2214);
    femData:MeshCell[] _t2218#1 = <femData:MeshCell[]>{};
  FOREACH221B:  preds = [ASSIGN2219,NEXT2221]
    foreach (_t221A in _t2216) on exit goto ASSIGN2223
      femData:MeshCell[] _t221F#2 = phi(_t2218,_t221E)
    femData:MeshCell _t221C#1 = LoadFem<femData:MeshCell>(block21F2,_t221A);
    femData:MeshCell[] _t221E#1 = Append<femData:MeshCell>(_t221F,_t221C);
    goto FOREACH221B
  ASSIGN2223:  preds = [FOREACH221B]
    femData:Space space2222#1 = LoadFem<femData:Space>(0space0509_intermedateGlobal21F4,block21F2);
    femData:FemFunc U2224#1 = LoadFem<femData:FemFunc>(0U050B_intermedateGlobal21F6,space2222);
    femData:MeshCell c12226#1 = Subscript<femData:MeshCell[]>(_t221F,cellChoice21F8);
    int _t2228#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c12226);
    femData:FuncCell _t222A#2 = LoadFem<femData:FuncCell>(U2224,_t2228);
    femData:FemFunc _t222C#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t222A);
    femData:Space _t222E#1 = ExtractFem<femData:Space,femData:FemFunc>(_t222C);
    int _t2230#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t222A);
    tensor[3] op1_e3_l_42236#9 = VSub<3>(camAt21FE,camEye21FC);
    real op1_e3_l_62239#1 = VDot<3>(op1_e3_l_42236,op1_e3_l_42236);
    real op1_e3_l_7223C#6 = Sqrt(op1_e3_l_62239);
    real realLit2240#9 = 0.1e1;
    real op1_e3_l_9223F#6 = RDiv(realLit2240,op1_e3_l_7223C);
    tensor[3] camN2244#4 = VScale<3>(op1_e3_l_9223F,op1_e3_l_42236);
    globals.camN2199 = camN2244;
    real realLit2249#6 = 0.e0;
    real r224A#3 = TensorIndex<tensor[3],[0]>(camUp2200);
    real r224B#3 = RMul(realLit2249,r224A);
    real r224C#3 = TensorIndex<tensor[3],[1]>(camUp2200);
    real r224D#3 = RMul(realLit2249,r224C);
    real r224E#3 = TensorIndex<tensor[3],[2]>(camUp2200);
    real r224F#5 = RMul(realLit2249,r224E);
    real r2250#3 = RAdd(r224B,r224D);
    real r2251#3 = RAdd(r2250,r224F);
    real r2253#1 = RMul(realLit2240,r224E);
    real r2254#1 = RAdd(r2250,r2253);
    real realLit2255#6 = -0.1e1;
    real r2256#1 = RMul(realLit2255,r224C);
    real r2257#1 = RAdd(r224B,r2256);
    real r2258#1 = RAdd(r2257,r224F);
    tensor[3] tensor2259#1 = <tensor[3]>[r2251,r2254,r2258];
    real r225A#1 = RMul(realLit2255,r224E);
    real r225B#1 = RAdd(r2250,r225A);
    real r225C#1 = RMul(realLit2240,r224A);
    real r225D#1 = RAdd(r225C,r224D);
    real r225E#1 = RAdd(r225D,r224F);
    tensor[3] tensor225F#1 = <tensor[3]>[r225B,r2251,r225E];
    real r2260#1 = RMul(realLit2240,r224C);
    real r2261#1 = RAdd(r224B,r2260);
    real r2262#1 = RAdd(r2261,r224F);
    real r2263#1 = RMul(realLit2255,r224A);
    real r2264#1 = RAdd(r2263,r224D);
    real r2265#1 = RAdd(r2264,r224F);
    tensor[3] tensor2266#1 = <tensor[3]>[r2262,r2265,r2251];
    real vdot2289#4 = VDot<3>(op1_e3_l_42236,tensor2259);
    real vdot228B#4 = VDot<3>(op1_e3_l_42236,tensor225F);
    real vdot228D#4 = VDot<3>(op1_e3_l_42236,tensor2266);
    tensor[3] op1_e3_l_172287#3 = <tensor[3]>[vdot2289,vdot228B,vdot228D];
    real op1_e3_l_342296#1 = VDot<3>(op1_e3_l_172287,op1_e3_l_172287);
    real r229A#1 = RMul(op1_e3_l_9223F,op1_e3_l_9223F);
    real op1_e3_l_352299#1 = RMul(r229A,op1_e3_l_342296);
    real op1_e3_l_36229E#1 = Sqrt(op1_e3_l_352299);
    tensor[3] op1_e3_l_3722A1#1 = VScale<3>(op1_e3_l_9223F,op1_e3_l_172287);
    real op1_e3_l_3822A4#2 = RDiv(realLit2240,op1_e3_l_36229E);
    tensor[3] camU22A9#4 = VScale<3>(op1_e3_l_3822A4,op1_e3_l_3722A1);
    globals.camU219A = camU22A9;
    real r22B0#3 = RMul(realLit2249,vdot2289);
    real r22B2#3 = RMul(realLit2249,vdot228B);
    real r22B4#5 = RMul(realLit2249,vdot228D);
    real r22B5#3 = RAdd(r22B0,r22B2);
    real r22B6#3 = RAdd(r22B5,r22B4);
    real r22B8#1 = RMul(realLit2240,vdot228D);
    real r22B9#1 = RAdd(r22B5,r22B8);
    real r22BB#1 = RMul(realLit2255,vdot228B);
    real r22BC#1 = RAdd(r22B0,r22BB);
    real r22BD#1 = RAdd(r22BC,r22B4);
    tensor[3] tensor22BE#1 = <tensor[3]>[r22B6,r22B9,r22BD];
    real r22BF#1 = RMul(realLit2255,vdot228D);
    real r22C0#1 = RAdd(r22B5,r22BF);
    real r22C1#1 = RMul(realLit2240,vdot2289);
    real r22C2#1 = RAdd(r22C1,r22B2);
    real r22C3#1 = RAdd(r22C2,r22B4);
    tensor[3] tensor22C4#1 = <tensor[3]>[r22C0,r22B6,r22C3];
    real r22C5#1 = RMul(realLit2240,vdot228B);
    real r22C6#1 = RAdd(r22B0,r22C5);
    real r22C7#1 = RAdd(r22C6,r22B4);
    real r22C8#1 = RMul(realLit2255,vdot2289);
    real r22C9#1 = RAdd(r22C8,r22B2);
    real r22CA#1 = RAdd(r22C9,r22B4);
    tensor[3] tensor22CB#1 = <tensor[3]>[r22C7,r22CA,r22B6];
    real vdot22EE#1 = VDot<3>(op1_e3_l_42236,tensor22BE);
    real vdot22F0#1 = VDot<3>(op1_e3_l_42236,tensor22C4);
    real vdot22F2#1 = VDot<3>(op1_e3_l_42236,tensor22CB);
    tensor[3] op1_e3_l_4722EC#1 = <tensor[3]>[vdot22EE,vdot22F0,vdot22F2];
    tensor[3] op1_e3_l_5022FB#3 = VScale<3>(op1_e3_l_9223F,op1_e3_l_4722EC);
    real r22FF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5022FB);
    real r2300#3 = RMul(op1_e3_l_9223F,op1_e3_l_3822A4);
    real r2301#2 = RMul(r2300,r22FF);
    real r2302#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5022FB);
    real r2303#2 = RMul(r2300,r2302);
    real r2304#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5022FB);
    real r2305#2 = RMul(r2300,r2304);
    tensor[3] camV22FE#1 = <tensor[3]>[r2301,r2303,r2305];
    globals.camV219B = camV22FE;
    globals.camDist219C = op1_e3_l_7223C;
    real _t2311#1 = 0.314159265358979323846264338327950288e1;
    real _t2313#1 = 0.36e3;
    real op1_e3_l_52315#1 = RMul(camFOV2206,_t2311);
    real op1_e3_l_62318#1 = RDiv(op1_e3_l_52315,_t2313);
    real op1_e3_l_10231B#2 = Tan(op1_e3_l_62318);
    real camVmax231E#1 = RMul(op1_e3_l_10231B,op1_e3_l_7223C);
    globals.camVmax219D = camVmax231E;
    real _t2322#1 = IntToReal(iresU2208);
    real _t2324#1 = IntToReal(iresV220A);
    real r2327#1 = RMul(_t2322,op1_e3_l_10231B);
    real op1_e3_l_142326#1 = RMul(r2327,op1_e3_l_7223C);
    real camUmax232B#1 = RDiv(op1_e3_l_142326,_t2324);
    globals.camUmax219E = camUmax232B;
    real camNearVsp232F#1 = RAdd(camNear2202,op1_e3_l_7223C);
    globals.camNearVsp219F = camNearVsp232F;
    real camFarVsp2333#1 = RAdd(camFar2204,op1_e3_l_7223C);
    globals.camFarVsp21A0 = camFarVsp2333;
    real op1_e3_l_32339#1 = VDot<3>(litdir220C,litdir220C);
    real op1_e3_l_4233C#1 = Sqrt(op1_e3_l_32339);
    real op1_e3_l_5233F#1 = RDiv(realLit2240,op1_e3_l_4233C);
    real r2345#1 = VIndex<3,0>(camU22A9);
    real r2346#3 = TensorIndex<tensor[3],[0]>(litdir220C);
    real r2347#1 = RMul(r2345,r2346);
    real r2349#3 = TensorIndex<tensor[3],[1]>(litdir220C);
    real r234A#1 = RMul(r2301,r2349);
    real r234B#1 = VIndex<3,0>(camN2244);
    real r234C#3 = TensorIndex<tensor[3],[2]>(litdir220C);
    real r234D#1 = RMul(r234B,r234C);
    real r234E#1 = RAdd(r2347,r234A);
    real r234F#1 = RAdd(r234E,r234D);
    real r2350#1 = VIndex<3,1>(camU22A9);
    real r2351#1 = RMul(r2350,r2346);
    real r2353#1 = RMul(r2303,r2349);
    real r2354#1 = VIndex<3,1>(camN2244);
    real r2355#1 = RMul(r2354,r234C);
    real r2356#1 = RAdd(r2351,r2353);
    real r2357#1 = RAdd(r2356,r2355);
    real r2358#1 = VIndex<3,2>(camU22A9);
    real r2359#1 = RMul(r2358,r2346);
    real r235B#1 = RMul(r2305,r2349);
    real r235C#1 = VIndex<3,2>(camN2244);
    real r235D#1 = RMul(r235C,r234C);
    real r235E#1 = RAdd(r2359,r235B);
    real r235F#1 = RAdd(r235E,r235D);
    tensor[3] op1_e3_l_62344#1 = <tensor[3]>[r234F,r2357,r235F];
    tensor[3] litwsp237D#1 = VScale<3>(op1_e3_l_5233F,op1_e3_l_62344);
    globals.litwsp21A1 = litwsp237D;
    globals._t21A2 = _t2230;
    globals._tX21A3 = _t222E;
    globals._tXX21A4 = _t222C;
    return
## strand
  strand ray (int ui2387#1, int vi2388#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY2399:  preds = []
        tensor[3] camEye239A#1 = globals.camEye2180;
        bool camOrtho239C#2 = globals.camOrtho2186;
        int iresU239E#1 = globals.iresU2187;
        int iresV23A0#1 = globals.iresV2188;
        real rayStep23A2#1 = globals.rayStep2189;
        real refStep23A4#1 = globals.refStep218A;
        tensor[4] phong23A6#4 = globals.phong2192;
        tensor[3] camN23A8#1 = globals.camN2199;
        tensor[3] camU23AA#1 = globals.camU219A;
        tensor[3] camV23AC#1 = globals.camV219B;
        real camDist23AE#1 = globals.camDist219C;
        real camVmax23B0#2 = globals.camVmax219D;
        real camUmax23B2#2 = globals.camUmax219E;
        real camNearVsp23B4#1 = globals.camNearVsp219F;
        real _t23B6#4 = -0.5e0;
        real _t23B8#1 = IntToReal(ui2387);
        real _t23BA#1 = IntToReal(iresU239E);
        real _t23BC#2 = 0.5e0;
        real op1_e3_l_623BE#1 = RSub(_t23BA,_t23BC);
        real op1_e3_l_723C1#1 = RSub(_t23B8,_t23B6);
        real op1_e3_l_823C4#1 = RSub(op1_e3_l_623BE,_t23B6);
        real op1_e3_l_923C7#2 = RNeg(camUmax23B2);
        real op1_e3_l_1023CA#1 = RDiv(op1_e3_l_723C1,op1_e3_l_823C4);
        real op1_e3_l_1123CD#1 = RSub(camUmax23B2,op1_e3_l_923C7);
        real op1_e3_l_1323D0#1 = RMul(op1_e3_l_1023CA,op1_e3_l_1123CD);
        real rayU23D3#2 = RAdd(op1_e3_l_923C7,op1_e3_l_1323D0);
        real _t23D6#1 = IntToReal(vi2388);
        real _t23D8#1 = IntToReal(iresV23A0);
        real op1_e3_l_623DA#1 = RSub(_t23D8,_t23BC);
        real op1_e3_l_723DD#1 = RSub(_t23D6,_t23B6);
        real op1_e3_l_823E0#1 = RSub(op1_e3_l_623DA,_t23B6);
        real op1_e3_l_923E3#2 = RNeg(camVmax23B0);
        real op1_e3_l_1023E6#1 = RDiv(op1_e3_l_723DD,op1_e3_l_823E0);
        real op1_e3_l_1123E9#1 = RSub(camVmax23B0,op1_e3_l_923E3);
        real op1_e3_l_1323EC#1 = RMul(op1_e3_l_1023E6,op1_e3_l_1123E9);
        real rayV23EF#2 = RAdd(op1_e3_l_923E3,op1_e3_l_1323EC);
        tensor[3] op1_e3_l_322401#1 = VScale<3>(rayU23D3,camU23AA);
        tensor[3] op1_e3_l_332404#1 = VScale<3>(rayV23EF,camV23AC);
        tensor[3] UV2407#5 = VAdd<3>(op1_e3_l_322401,op1_e3_l_332404);
        if camOrtho239C then goto JOIN240D else goto ASSIGN2467
      JOIN240D:  preds = [COND240A,ASSIGN2468]
        tensor[3] _t240B#1 = phi(UV2407,_t240C)
        tensor[3] rayOrig240E#1 = VAdd<3>(camEye239A,_t240B);
        if camOrtho239C then goto ASSIGN2413 else goto ASSIGN245D
      ASSIGN2413:  preds = [COND2411]
        real _t2412#3 = 0.e0;
        tensor[3] _t2414#1 = <tensor[3]>[_t2412,_t2412,_t2412];
        goto JOIN2418
      JOIN2418:  preds = [ASSIGN2415,ASSIGN2465]
        tensor[3] _t2416#1 = phi(_t2414,_t2417)
        tensor[3] rayVec2419#4 = VAdd<3>(camN23A8,_t2416);
        real op1_e3_l_6241C#1 = VDot<3>(rayVec2419,rayVec2419);
        real op1_e3_l_7241F#2 = Sqrt(op1_e3_l_6241C);
        real op1_e3_l_82422#1 = RMul(rayStep23A2,op1_e3_l_7241F);
        real alphaFix2425#1 = RDiv(op1_e3_l_82422,refStep23A4);
        real realLit2429#2 = 0.1e1;
        real op1_e3_l_92428#1 = RDiv(realLit2429,op1_e3_l_7241F);
        tensor[3] op1_e3_l_10242D#1 = VScale<3>(op1_e3_l_92428,rayVec2419);
        tensor[3] eyeDir2430#1 = VNeg<3>(op1_e3_l_10242D);
        real phKa2433#1 = VIndex<4,0>(phong23A6);
        real phKd2435#1 = VIndex<4,1>(phong23A6);
        real phKs2437#1 = VIndex<4,2>(phong23A6);
        real phSp2439#1 = VIndex<4,3>(phong23A6);
        real _t243B#8 = 0.e0;
        tensor[4] rgba243D#1 = <tensor[4]>[_t243B,_t243B,_t243B,_t243B];
        tensor[3] rgb243F#1 = <tensor[3]>[_t243B,_t243B,_t243B];
        self.rayU = rayU23D3;
        self.rayV = rayV23EF;
        self.rayN = camNearVsp23B4;
        self.UV = UV2407;
        self.rayOrig = rayOrig240E;
        self.rayVec = rayVec2419;
        self.alphaFix = alphaFix2425;
        self.eyeDir = eyeDir2430;
        self.phKa = phKa2433;
        self.phKd = phKd2435;
        self.phKs = phKs2437;
        self.phSp = phSp2439;
        self.rgba = rgba243D;
        self.raw = _t243B;
        self.rgb = rgb243F;
        self.transp = realLit2429;
        return
      ASSIGN245D:  preds = [COND2411]
        real realLit2454#1 = 0.1e1;
        real r2455#3 = RDiv(realLit2454,camDist23AE);
        real r2456#1 = TensorIndex<tensor[3],[0]>(UV2407);
        real r2457#1 = RMul(r2455,r2456);
        real r2458#1 = TensorIndex<tensor[3],[1]>(UV2407);
        real r2459#1 = RMul(r2455,r2458);
        real r245A#1 = TensorIndex<tensor[3],[2]>(UV2407);
        real r245B#1 = RMul(r2455,r245A);
        tensor[3] _t2417#1 = <tensor[3]>[r2457,r2459,r245B];
        goto JOIN2418
      ASSIGN2467:  preds = [COND240A]
        real _t2466#3 = 0.e0;
        tensor[3] _t240C#1 = <tensor[3]>[_t2466,_t2466,_t2466];
        goto JOIN240D
    end state init
    method update
        ENTRY2469:  preds = []
          image(IMAGE1D<double[3]>) cmap246A#17 = globals.cmap217F;
          int _t246C#3 = globals._t21A2;
          femData:Space _t246E#252 = globals._tX21A3;
          femData:FemFunc _t2470#252 = globals._tXX21A4;
          image(IMAGE3D<float[]>) umm2472#66 = globals.umm2198;
          femData:Mesh block2478#1 = globals.block217B;
          real rayStep247A#1 = globals.rayStep2189;
          real transp0247C#1 = globals.transp0218B;
          real thick247E#1 = globals.thick218C;
          real fStrTh2480#1 = globals.fStrTh218D;
          real fMaskTh2482#1 = globals.fMaskTh218E;
          real fBias2484#1 = globals.fBias218F;
          real maxAlpha2486#1 = globals.maxAlpha2190;
          tensor[3] mcNear2488#2 = globals.mcNear2193;
          tensor[3] mcFar248A#1 = globals.mcFar2194;
          tensor[2] cminmax248C#2 = globals.cminmax2196;
          bool analytical248E#1 = globals.analytical2197;
          real camNearVsp2490#2 = globals.camNearVsp219F;
          real camFarVsp2492#2 = globals.camFarVsp21A0;
          tensor[3] litwsp2494#2 = globals.litwsp21A1;
          real rayN2496#1 = self.rayN;
          tensor[3] rayOrig2498#1 = self.rayOrig;
          tensor[3] rayVec249A#1 = self.rayVec;
          real alphaFix249C#1 = self.alphaFix;
          tensor[3] eyeDir249E#1 = self.eyeDir;
          real phKa24A0#1 = self.phKa;
          real phKd24A2#1 = self.phKd;
          real phKs24A4#2 = self.phKs;
          real phSp24A6#1 = self.phSp;
          tensor[3] rgb24A8#1 = self.rgb;
          real transp24AA#2 = self.transp;
          real rayN24AC#8 = RAdd(rayN2496,rayStep247A);
          bool _t24AF#1 = GT<real>(rayN24AC,camFarVsp2492);
          if _t24AF then goto SAVE24B2 else goto JOIN24B4
        SAVE24B2:  preds = [COND24B1]
          self.rayN = rayN24AC;
          stabilize
          goto JOIN24B4
        JOIN24B4:  preds = [*STABILIZE24B3,COND24B1]
          tensor[3] op1_e3_l_524B5#1 = VScale<3>(rayN24AC,rayVec249A);
          tensor[3] pos24B8#11 = VAdd<3>(rayOrig2498,op1_e3_l_524B5);
          femData:RefCell _t24BB#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block2478);
          real _t24BD#1 = 0.1e-8;
          bool _t24BF#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t24BB,pos24B8,_t24BD);
          if _t24BF then goto ASSIGN25C2 else goto ASSIGN46AE
        ASSIGN25C2:  preds = [COND24C1]
          int ilit24C3#1 = 84;
          int mulRes24C4#84 = IMul(_t246C,ilit24C3);
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,mulRes24C4);
          int ilit24C8#86 = 1;
          int addRes24C9#1 = IAdd(mulRes24C4,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24C9);
          int ilit24CB#1 = 2;
          int addRes24CC#1 = IAdd(mulRes24C4,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CC);
          int ilit24CE#1 = 3;
          int addRes24CF#1 = IAdd(mulRes24C4,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24CF);
          int ilit24D1#1 = 4;
          int addRes24D2#1 = IAdd(mulRes24C4,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D2);
          int ilit24D4#1 = 5;
          int addRes24D5#1 = IAdd(mulRes24C4,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D5);
          int ilit24D7#1 = 6;
          int addRes24D8#1 = IAdd(mulRes24C4,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24D8);
          int ilit24DA#1 = 7;
          int addRes24DB#1 = IAdd(mulRes24C4,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DB);
          int ilit24DD#1 = 8;
          int addRes24DE#1 = IAdd(mulRes24C4,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24DE);
          int ilit24E0#1 = 9;
          int addRes24E1#1 = IAdd(mulRes24C4,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E1);
          int ilit24E3#1 = 10;
          int addRes24E4#1 = IAdd(mulRes24C4,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E4);
          int ilit24E6#1 = 11;
          int addRes24E7#1 = IAdd(mulRes24C4,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24E7);
          int ilit24E9#1 = 12;
          int addRes24EA#1 = IAdd(mulRes24C4,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24EA);
          int ilit24EC#1 = 13;
          int addRes24ED#1 = IAdd(mulRes24C4,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24ED);
          int ilit24EF#1 = 14;
          int addRes24F0#1 = IAdd(mulRes24C4,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F0);
          int ilit24F2#1 = 15;
          int addRes24F3#1 = IAdd(mulRes24C4,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F3);
          int ilit24F5#1 = 16;
          int addRes24F6#1 = IAdd(mulRes24C4,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F6);
          int ilit24F8#1 = 17;
          int addRes24F9#1 = IAdd(mulRes24C4,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24F9);
          int ilit24FB#1 = 18;
          int addRes24FC#1 = IAdd(mulRes24C4,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FC);
          int ilit24FE#1 = 19;
          int addRes24FF#1 = IAdd(mulRes24C4,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes24FF);
          int ilit2501#1 = 20;
          int addRes2502#1 = IAdd(mulRes24C4,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2502);
          int ilit2504#1 = 21;
          int addRes2505#1 = IAdd(mulRes24C4,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2505);
          int ilit2507#1 = 22;
          int addRes2508#1 = IAdd(mulRes24C4,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2508);
          int ilit250A#1 = 23;
          int addRes250B#1 = IAdd(mulRes24C4,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250B);
          int ilit250D#1 = 24;
          int addRes250E#1 = IAdd(mulRes24C4,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes250E);
          int ilit2510#1 = 25;
          int addRes2511#1 = IAdd(mulRes24C4,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2511);
          int ilit2513#1 = 26;
          int addRes2514#1 = IAdd(mulRes24C4,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2514);
          int ilit2516#1 = 27;
          int addRes2517#1 = IAdd(mulRes24C4,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2517);
          int ilit2519#1 = 28;
          int addRes251A#1 = IAdd(mulRes24C4,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251A);
          int ilit251C#1 = 29;
          int addRes251D#1 = IAdd(mulRes24C4,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes251D);
          int ilit251F#1 = 30;
          int addRes2520#1 = IAdd(mulRes24C4,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2520);
          int ilit2522#1 = 31;
          int addRes2523#1 = IAdd(mulRes24C4,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2523);
          int ilit2525#1 = 32;
          int addRes2526#1 = IAdd(mulRes24C4,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2526);
          int ilit2528#1 = 33;
          int addRes2529#1 = IAdd(mulRes24C4,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2529);
          int ilit252B#1 = 34;
          int addRes252C#1 = IAdd(mulRes24C4,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252C);
          int ilit252E#1 = 35;
          int addRes252F#1 = IAdd(mulRes24C4,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes252F);
          int ilit2531#1 = 36;
          int addRes2532#1 = IAdd(mulRes24C4,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2532);
          int ilit2534#1 = 37;
          int addRes2535#1 = IAdd(mulRes24C4,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2535);
          int ilit2537#1 = 38;
          int addRes2538#1 = IAdd(mulRes24C4,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2538);
          int ilit253A#1 = 39;
          int addRes253B#1 = IAdd(mulRes24C4,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253B);
          int ilit253D#1 = 40;
          int addRes253E#1 = IAdd(mulRes24C4,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes253E);
          int ilit2540#1 = 41;
          int addRes2541#1 = IAdd(mulRes24C4,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2541);
          int ilit2543#1 = 42;
          int addRes2544#1 = IAdd(mulRes24C4,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2544);
          int ilit2546#1 = 43;
          int addRes2547#1 = IAdd(mulRes24C4,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2547);
          int ilit2549#1 = 44;
          int addRes254A#1 = IAdd(mulRes24C4,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254A);
          int ilit254C#1 = 45;
          int addRes254D#1 = IAdd(mulRes24C4,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes254D);
          int ilit254F#1 = 46;
          int addRes2550#1 = IAdd(mulRes24C4,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2550);
          int ilit2552#1 = 47;
          int addRes2553#1 = IAdd(mulRes24C4,ilit2552);
          int idx2554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2553);
          int ilit2555#1 = 48;
          int addRes2556#1 = IAdd(mulRes24C4,ilit2555);
          int idx2557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2556);
          int ilit2558#1 = 49;
          int addRes2559#1 = IAdd(mulRes24C4,ilit2558);
          int idx255A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2559);
          int ilit255B#1 = 50;
          int addRes255C#1 = IAdd(mulRes24C4,ilit255B);
          int idx255D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255C);
          int ilit255E#1 = 51;
          int addRes255F#1 = IAdd(mulRes24C4,ilit255E);
          int idx2560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes255F);
          int ilit2561#1 = 52;
          int addRes2562#1 = IAdd(mulRes24C4,ilit2561);
          int idx2563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2562);
          int ilit2564#1 = 53;
          int addRes2565#1 = IAdd(mulRes24C4,ilit2564);
          int idx2566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2565);
          int ilit2567#1 = 54;
          int addRes2568#1 = IAdd(mulRes24C4,ilit2567);
          int idx2569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2568);
          int ilit256A#1 = 55;
          int addRes256B#1 = IAdd(mulRes24C4,ilit256A);
          int idx256C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256B);
          int ilit256D#1 = 56;
          int addRes256E#1 = IAdd(mulRes24C4,ilit256D);
          int idx256F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes256E);
          int ilit2570#1 = 57;
          int addRes2571#1 = IAdd(mulRes24C4,ilit2570);
          int idx2572#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2571);
          int ilit2573#1 = 58;
          int addRes2574#1 = IAdd(mulRes24C4,ilit2573);
          int idx2575#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2574);
          int ilit2576#1 = 59;
          int addRes2577#1 = IAdd(mulRes24C4,ilit2576);
          int idx2578#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2577);
          int ilit2579#1 = 60;
          int addRes257A#1 = IAdd(mulRes24C4,ilit2579);
          int idx257B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257A);
          int ilit257C#1 = 61;
          int addRes257D#1 = IAdd(mulRes24C4,ilit257C);
          int idx257E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes257D);
          int ilit257F#1 = 62;
          int addRes2580#1 = IAdd(mulRes24C4,ilit257F);
          int idx2581#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2580);
          int ilit2582#1 = 63;
          int addRes2583#1 = IAdd(mulRes24C4,ilit2582);
          int idx2584#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2583);
          int ilit2585#1 = 64;
          int addRes2586#1 = IAdd(mulRes24C4,ilit2585);
          int idx2587#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2586);
          int ilit2588#1 = 65;
          int addRes2589#1 = IAdd(mulRes24C4,ilit2588);
          int idx258A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2589);
          int ilit258B#1 = 66;
          int addRes258C#1 = IAdd(mulRes24C4,ilit258B);
          int idx258D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258C);
          int ilit258E#1 = 67;
          int addRes258F#1 = IAdd(mulRes24C4,ilit258E);
          int idx2590#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes258F);
          int ilit2591#1 = 68;
          int addRes2592#1 = IAdd(mulRes24C4,ilit2591);
          int idx2593#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2592);
          int ilit2594#1 = 69;
          int addRes2595#1 = IAdd(mulRes24C4,ilit2594);
          int idx2596#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2595);
          int ilit2597#1 = 70;
          int addRes2598#1 = IAdd(mulRes24C4,ilit2597);
          int idx2599#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2598);
          int ilit259A#1 = 71;
          int addRes259B#1 = IAdd(mulRes24C4,ilit259A);
          int idx259C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259B);
          int ilit259D#1 = 72;
          int addRes259E#1 = IAdd(mulRes24C4,ilit259D);
          int idx259F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes259E);
          int ilit25A0#1 = 73;
          int addRes25A1#1 = IAdd(mulRes24C4,ilit25A0);
          int idx25A2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A1);
          int ilit25A3#1 = 74;
          int addRes25A4#1 = IAdd(mulRes24C4,ilit25A3);
          int idx25A5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A4);
          int ilit25A6#1 = 75;
          int addRes25A7#1 = IAdd(mulRes24C4,ilit25A6);
          int idx25A8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25A7);
          int ilit25A9#1 = 76;
          int addRes25AA#1 = IAdd(mulRes24C4,ilit25A9);
          int idx25AB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AA);
          int ilit25AC#1 = 77;
          int addRes25AD#1 = IAdd(mulRes24C4,ilit25AC);
          int idx25AE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25AD);
          int ilit25AF#1 = 78;
          int addRes25B0#1 = IAdd(mulRes24C4,ilit25AF);
          int idx25B1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B0);
          int ilit25B2#1 = 79;
          int addRes25B3#1 = IAdd(mulRes24C4,ilit25B2);
          int idx25B4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B3);
          int ilit25B5#1 = 80;
          int addRes25B6#1 = IAdd(mulRes24C4,ilit25B5);
          int idx25B7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B6);
          int ilit25B8#1 = 81;
          int addRes25B9#1 = IAdd(mulRes24C4,ilit25B8);
          int idx25BA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25B9);
          int ilit25BB#1 = 82;
          int addRes25BC#1 = IAdd(mulRes24C4,ilit25BB);
          int idx25BD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BC);
          int ilit25BE#1 = 83;
          int addRes25BF#1 = IAdd(mulRes24C4,ilit25BE);
          int idx25C0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes25BF);
          int mulRes26C6#1 = IMul(ilit24C8,idx24C7);
          int mulRes26C8#1 = IMul(ilit24C8,idx24CA);
          int mulRes26CB#1 = IMul(ilit24C8,idx24CD);
          int mulRes26CE#1 = IMul(ilit24C8,idx24D0);
          int mulRes26D1#1 = IMul(ilit24C8,idx24D3);
          int mulRes26D4#1 = IMul(ilit24C8,idx24D6);
          int mulRes26D7#1 = IMul(ilit24C8,idx24D9);
          int mulRes26DA#1 = IMul(ilit24C8,idx24DC);
          int mulRes26DD#1 = IMul(ilit24C8,idx24DF);
          int mulRes26E0#1 = IMul(ilit24C8,idx24E2);
          int mulRes26E3#1 = IMul(ilit24C8,idx24E5);
          int mulRes26E6#1 = IMul(ilit24C8,idx24E8);
          int mulRes26E9#1 = IMul(ilit24C8,idx24EB);
          int mulRes26EC#1 = IMul(ilit24C8,idx24EE);
          int mulRes26EF#1 = IMul(ilit24C8,idx24F1);
          int mulRes26F2#1 = IMul(ilit24C8,idx24F4);
          int mulRes26F5#1 = IMul(ilit24C8,idx24F7);
          int mulRes26F8#1 = IMul(ilit24C8,idx24FA);
          int mulRes26FB#1 = IMul(ilit24C8,idx24FD);
          int mulRes26FE#1 = IMul(ilit24C8,idx2500);
          int mulRes2701#1 = IMul(ilit24C8,idx2503);
          int mulRes2704#1 = IMul(ilit24C8,idx2506);
          int mulRes2707#1 = IMul(ilit24C8,idx2509);
          int mulRes270A#1 = IMul(ilit24C8,idx250C);
          int mulRes270D#1 = IMul(ilit24C8,idx250F);
          int mulRes2710#1 = IMul(ilit24C8,idx2512);
          int mulRes2713#1 = IMul(ilit24C8,idx2515);
          int mulRes2716#1 = IMul(ilit24C8,idx2518);
          int mulRes2719#1 = IMul(ilit24C8,idx251B);
          int mulRes271C#1 = IMul(ilit24C8,idx251E);
          int mulRes271F#1 = IMul(ilit24C8,idx2521);
          int mulRes2722#1 = IMul(ilit24C8,idx2524);
          int mulRes2725#1 = IMul(ilit24C8,idx2527);
          int mulRes2728#1 = IMul(ilit24C8,idx252A);
          int mulRes272B#1 = IMul(ilit24C8,idx252D);
          int mulRes272E#1 = IMul(ilit24C8,idx2530);
          int mulRes2731#1 = IMul(ilit24C8,idx2533);
          int mulRes2734#1 = IMul(ilit24C8,idx2536);
          int mulRes2737#1 = IMul(ilit24C8,idx2539);
          int mulRes273A#1 = IMul(ilit24C8,idx253C);
          int mulRes273D#1 = IMul(ilit24C8,idx253F);
          int mulRes2740#1 = IMul(ilit24C8,idx2542);
          int mulRes2743#1 = IMul(ilit24C8,idx2545);
          int mulRes2746#1 = IMul(ilit24C8,idx2548);
          int mulRes2749#1 = IMul(ilit24C8,idx254B);
          int mulRes274C#1 = IMul(ilit24C8,idx254E);
          int mulRes274F#1 = IMul(ilit24C8,idx2551);
          int mulRes2752#1 = IMul(ilit24C8,idx2554);
          int mulRes2755#1 = IMul(ilit24C8,idx2557);
          int mulRes2758#1 = IMul(ilit24C8,idx255A);
          int mulRes275B#1 = IMul(ilit24C8,idx255D);
          int mulRes275E#1 = IMul(ilit24C8,idx2560);
          int mulRes2761#1 = IMul(ilit24C8,idx2563);
          int mulRes2764#1 = IMul(ilit24C8,idx2566);
          int mulRes2767#1 = IMul(ilit24C8,idx2569);
          int mulRes276A#1 = IMul(ilit24C8,idx256C);
          int mulRes276D#1 = IMul(ilit24C8,idx256F);
          int mulRes2770#1 = IMul(ilit24C8,idx2572);
          int mulRes2773#1 = IMul(ilit24C8,idx2575);
          int mulRes2776#1 = IMul(ilit24C8,idx2578);
          int mulRes2779#1 = IMul(ilit24C8,idx257B);
          int mulRes277C#1 = IMul(ilit24C8,idx257E);
          int mulRes277F#1 = IMul(ilit24C8,idx2581);
          int mulRes2782#1 = IMul(ilit24C8,idx2584);
          int mulRes2785#1 = IMul(ilit24C8,idx2587);
          int mulRes2788#1 = IMul(ilit24C8,idx258A);
          int mulRes278B#1 = IMul(ilit24C8,idx258D);
          int mulRes278E#1 = IMul(ilit24C8,idx2590);
          int mulRes2791#1 = IMul(ilit24C8,idx2593);
          int mulRes2794#1 = IMul(ilit24C8,idx2596);
          int mulRes2797#1 = IMul(ilit24C8,idx2599);
          int mulRes279A#1 = IMul(ilit24C8,idx259C);
          int mulRes279D#1 = IMul(ilit24C8,idx259F);
          int mulRes27A0#1 = IMul(ilit24C8,idx25A2);
          int mulRes27A3#1 = IMul(ilit24C8,idx25A5);
          int mulRes27A6#1 = IMul(ilit24C8,idx25A8);
          int mulRes27A9#1 = IMul(ilit24C8,idx25AB);
          int mulRes27AC#1 = IMul(ilit24C8,idx25AE);
          int mulRes27AF#1 = IMul(ilit24C8,idx25B1);
          int mulRes27B2#1 = IMul(ilit24C8,idx25B4);
          int mulRes27B5#1 = IMul(ilit24C8,idx25B7);
          int mulRes27B8#1 = IMul(ilit24C8,idx25BA);
          int mulRes27BB#1 = IMul(ilit24C8,idx25BD);
          int mulRes27BE#1 = IMul(ilit24C8,idx25C0);
          real dof27BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C6);
          real dof27C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26C8);
          real dof27C1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CB);
          real dof27C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26CE);
          real dof27C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D1);
          real dof27C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D4);
          real dof27C5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26D7);
          real dof27C6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DA);
          real dof27C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26DD);
          real dof27C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E0);
          real dof27C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E3);
          real dof27CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E6);
          real dof27CB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26E9);
          real dof27CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EC);
          real dof27CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26EF);
          real dof27CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F2);
          real dof27CF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F5);
          real dof27D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26F8);
          real dof27D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FB);
          real dof27D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes26FE);
          real dof27D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2701);
          real dof27D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2704);
          real dof27D5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2707);
          real dof27D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270A);
          real dof27D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes270D);
          real dof27D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2710);
          real dof27D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2713);
          real dof27DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2716);
          real dof27DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2719);
          real dof27DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271C);
          real dof27DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes271F);
          real dof27DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2722);
          real dof27DF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2725);
          real dof27E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2728);
          real dof27E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272B);
          real dof27E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes272E);
          real dof27E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2731);
          real dof27E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2734);
          real dof27E5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2737);
          real dof27E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273A);
          real dof27E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes273D);
          real dof27E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2740);
          real dof27E9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2743);
          real dof27EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2746);
          real dof27EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2749);
          real dof27EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274C);
          real dof27ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes274F);
          real dof27EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2752);
          real dof27EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2755);
          real dof27F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2758);
          real dof27F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275B);
          real dof27F2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes275E);
          real dof27F3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2761);
          real dof27F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2764);
          real dof27F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2767);
          real dof27F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276A);
          real dof27F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes276D);
          real dof27F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2770);
          real dof27F9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2773);
          real dof27FA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2776);
          real dof27FB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2779);
          real dof27FC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277C);
          real dof27FD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes277F);
          real dof27FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2782);
          real dof27FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2785);
          real dof2800#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2788);
          real dof2801#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278B);
          real dof2802#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes278E);
          real dof2803#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2791);
          real dof2804#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2794);
          real dof2805#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2797);
          real dof2806#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279A);
          real dof2807#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes279D);
          real dof2808#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A0);
          real dof2809#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A3);
          real dof280A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A6);
          real dof280B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27A9);
          real dof280C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AC);
          real dof280D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27AF);
          real dof280E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B2);
          real dof280F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B5);
          real dof2810#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27B8);
          real dof2811#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BB);
          real dof2812#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes27BE);
          tensor[84] dofs2813#9 = <tensor[84]>[dof27BF,dof27C0,dof27C1,dof27C2,dof27C3,dof27C4,dof27C5,dof27C6,dof27C7,dof27C8,dof27C9,dof27CA,dof27CB,dof27CC,dof27CD,dof27CE,dof27CF,dof27D0,dof27D1,dof27D2,dof27D3,dof27D4,dof27D5,dof27D6,dof27D7,dof27D8,dof27D9,dof27DA,dof27DB,dof27DC,dof27DD,dof27DE,dof27DF,dof27E0,dof27E1,dof27E2,dof27E3,dof27E4,dof27E5,dof27E6,dof27E7,dof27E8,dof27E9,dof27EA,dof27EB,dof27EC,dof27ED,dof27EE,dof27EF,dof27F0,dof27F1,dof27F2,dof27F3,dof27F4,dof27F5,dof27F6,dof27F7,dof27F8,dof27F9,dof27FA,dof27FB,dof27FC,dof27FD,dof27FE,dof27FF,dof2800,dof2801,dof2802,dof2803,dof2804,dof2805,dof2806,dof2807,dof2808,dof2809,dof280A,dof280B,dof280C,dof280D,dof280E,dof280F,dof2810,dof2811,dof2812];
          real varAcc2967#20 = VIndex<3,0>(pos24B8);
          real varAcc2968#10 = VIndex<3,1>(pos24B8);
          real varAcc2969#10 = VIndex<3,2>(pos24B8);
          real basisEval296A#378 = 0.e0;
          real coeff296B#47 = 0.2e1;
          real one296C#80 = 0.1e1;
          real prod296D#6 = RMul(one296C,one296C);
          real prod296E#2 = RMul(one296C,prod296D);
          real basisEval296F#3 = RMul(coeff296B,prod296E);
          real prod2971#5 = RMul(one296C,varAcc2969);
          real prod2972#3 = RMul(one296C,prod2971);
          real basisEval2973#5 = RMul(coeff296B,prod2972);
          real prod2975#5 = RMul(varAcc2968,one296C);
          real prod2976#3 = RMul(one296C,prod2975);
          real basisEval2977#5 = RMul(coeff296B,prod2976);
          real coeff2978#25 = 0.6e1;
          real prod297A#3 = RMul(varAcc2967,prod296D);
          real basisEval297B#1 = RMul(coeff2978,prod297A);
          real prod2297C#5 = RMul(varAcc2969,varAcc2969);
          real prod297D#4 = RMul(one296C,prod2297C);
          real prod297E#4 = RMul(one296C,prod297D);
          real basisEval297F#2 = RMul(coeff296B,prod297E);
          real prod2980#4 = RMul(varAcc2968,varAcc2969);
          real prod2981#4 = RMul(one296C,prod2980);
          real basisEval2982#5 = RMul(coeff296B,prod2981);
          real prod22983#5 = RMul(varAcc2968,varAcc2968);
          real prod2984#4 = RMul(prod22983,one296C);
          real prod2985#4 = RMul(one296C,prod2984);
          real basisEval2986#2 = RMul(coeff296B,prod2985);
          real prod2987#4 = RMul(varAcc2967,prod2971);
          real basisEval2988#2 = RMul(coeff2978,prod2987);
          real prod2989#4 = RMul(varAcc2967,prod2975);
          real basisEval298A#2 = RMul(coeff2978,prod2989);
          real coeff298B#15 = 0.12e2;
          real prod2298C#11 = RMul(varAcc2967,varAcc2967);
          real prod298D#4 = RMul(prod2298C,prod296D);
          real basisEval298E#1 = RMul(coeff298B,prod298D);
          real prod3298F#4 = RMul(prod2297C,varAcc2969);
          real prod2990#3 = RMul(one296C,prod3298F);
          real prod2991#4 = RMul(one296C,prod2990);
          real basisEval2992#2 = RMul(coeff296B,prod2991);
          real prod2993#3 = RMul(varAcc2968,prod2297C);
          real prod2994#5 = RMul(one296C,prod2993);
          real basisEval2995#3 = RMul(coeff296B,prod2994);
          real prod2996#3 = RMul(prod22983,varAcc2969);
          real prod2997#5 = RMul(one296C,prod2996);
          real basisEval2998#3 = RMul(coeff296B,prod2997);
          real prod32999#4 = RMul(prod22983,varAcc2968);
          real prod299A#3 = RMul(prod32999,one296C);
          real prod299B#4 = RMul(one296C,prod299A);
          real basisEval299C#2 = RMul(coeff296B,prod299B);
          real prod299D#5 = RMul(varAcc2967,prod297D);
          real basisEval299E#2 = RMul(coeff2978,prod299D);
          real prod299F#3 = RMul(varAcc2967,prod2980);
          real basisEval29A0#3 = RMul(coeff2978,prod299F);
          real prod29A1#5 = RMul(varAcc2967,prod2984);
          real basisEval29A2#2 = RMul(coeff2978,prod29A1);
          real prod29A3#5 = RMul(prod2298C,prod2971);
          real basisEval29A4#1 = RMul(coeff298B,prod29A3);
          real prod29A5#5 = RMul(prod2298C,prod2975);
          real basisEval29A6#1 = RMul(coeff298B,prod29A5);
          real coeff29A7#9 = 0.20e2;
          real prod329A8#7 = RMul(prod2298C,varAcc2967);
          real prod29A9#4 = RMul(prod329A8,prod296D);
          real basisEval29AA#1 = RMul(coeff29A7,prod29A9);
          real prod429AB#3 = RMul(prod3298F,varAcc2969);
          real prod29AC#2 = RMul(one296C,prod429AB);
          real prod29AD#4 = RMul(one296C,prod29AC);
          real basisEval29AE#2 = RMul(coeff296B,prod29AD);
          real prod29AF#2 = RMul(varAcc2968,prod3298F);
          real prod29B0#6 = RMul(one296C,prod29AF);
          real basisEval29B1#3 = RMul(coeff296B,prod29B0);
          real prod29B2#2 = RMul(prod22983,prod2297C);
          real prod29B3#5 = RMul(one296C,prod29B2);
          real basisEval29B4#1 = RMul(coeff296B,prod29B3);
          real prod29B5#2 = RMul(prod32999,varAcc2969);
          real prod29B6#6 = RMul(one296C,prod29B5);
          real basisEval29B7#3 = RMul(coeff296B,prod29B6);
          real prod429B8#3 = RMul(prod32999,varAcc2968);
          real prod29B9#2 = RMul(prod429B8,one296C);
          real prod29BA#4 = RMul(one296C,prod29B9);
          real basisEval29BB#2 = RMul(coeff296B,prod29BA);
          real prod29BC#6 = RMul(varAcc2967,prod2990);
          real basisEval29BD#1 = RMul(coeff2978,prod29BC);
          real prod29BE#5 = RMul(varAcc2967,prod2993);
          real basisEval29BF#4 = RMul(coeff2978,prod29BE);
          real prod29C0#5 = RMul(varAcc2967,prod2996);
          real basisEval29C1#4 = RMul(coeff2978,prod29C0);
          real prod29C2#6 = RMul(varAcc2967,prod299A);
          real basisEval29C3#1 = RMul(coeff2978,prod29C2);
          real prod29C4#5 = RMul(prod2298C,prod297D);
          real basisEval29C5#2 = RMul(coeff298B,prod29C4);
          real prod29C6#5 = RMul(prod2298C,prod2980);
          real basisEval29C7#1 = RMul(coeff298B,prod29C6);
          real prod29C8#5 = RMul(prod2298C,prod2984);
          real basisEval29C9#2 = RMul(coeff298B,prod29C8);
          real prod29CA#6 = RMul(prod329A8,prod2971);
          real basisEval29CB#1 = RMul(coeff29A7,prod29CA);
          real prod29CC#6 = RMul(prod329A8,prod2975);
          real basisEval29CD#1 = RMul(coeff29A7,prod29CC);
          real coeff29CE#3 = 0.30e2;
          real prod429CF#4 = RMul(prod329A8,varAcc2967);
          real prod29D0#4 = RMul(prod429CF,prod296D);
          real basisEval29D1#1 = RMul(coeff29CE,prod29D0);
          real basisEval29D2#6 = RMul(one296C,prod296E);
          real basisEval29D3#3 = RMul(one296C,prod2972);
          real basisEval29D4#5 = RMul(coeff296B,prod297A);
          real basisEval29D5#3 = RMul(one296C,prod297E);
          real coeff29D6#24 = 0.3e1;
          real basisEval29D7#3 = RMul(coeff29D6,prod2985);
          real basisEval29D8#5 = RMul(coeff296B,prod2987);
          real coeff29D9#25 = 0.4e1;
          real basisEval29DA#1 = RMul(coeff29D9,prod2989);
          real basisEval29DB#3 = RMul(coeff29D6,prod298D);
          real basisEval29DC#3 = RMul(one296C,prod2991);
          real basisEval29DD#2 = RMul(coeff29D6,prod2997);
          real basisEval29DE#3 = RMul(coeff29D9,prod299B);
          real basisEval29DF#3 = RMul(coeff296B,prod299D);
          real basisEval29E0#3 = RMul(coeff29D9,prod299F);
          real basisEval29E1#2 = RMul(coeff29D6,prod29A3);
          real basisEval29E2#2 = RMul(coeff2978,prod29A5);
          real basisEval29E3#3 = RMul(coeff29D9,prod29A9);
          real basisEval29E4#3 = RMul(one296C,prod29AD);
          real basisEval29E5#4 = RMul(coeff29D6,prod29B3);
          real basisEval29E6#2 = RMul(coeff29D9,prod29B6);
          real coeff29E7#9 = 0.5e1;
          real basisEval29E8#3 = RMul(coeff29E7,prod29BA);
          real basisEval29E9#3 = RMul(coeff296B,prod29BC);
          real basisEval29EA#1 = RMul(coeff29D9,prod29BE);
          real coeff29EB#6 = 0.8e1;
          real basisEval29EC#1 = RMul(coeff29EB,prod29C2);
          real basisEval29ED#4 = RMul(coeff29D6,prod29C4);
          real basisEval29EE#4 = RMul(coeff2978,prod29C6);
          real coeff29EF#3 = 0.9e1;
          real basisEval29F0#1 = RMul(coeff29EF,prod29C8);
          real basisEval29F1#2 = RMul(coeff29D9,prod29CA);
          real basisEval29F2#1 = RMul(coeff29EB,prod29CC);
          real basisEval29F3#3 = RMul(coeff29E7,prod29D0);
          real basisEval29F4#3 = RMul(one296C,prod2976);
          real basisEval29F5#3 = RMul(coeff29D6,prod297E);
          real basisEval29F6#3 = RMul(one296C,prod2985);
          real basisEval29F7#1 = RMul(coeff29D9,prod2987);
          real basisEval29F8#5 = RMul(coeff296B,prod2989);
          real basisEval29F9#3 = RMul(coeff29D9,prod2991);
          real basisEval29FA#2 = RMul(coeff29D6,prod2994);
          real basisEval29FB#3 = RMul(one296C,prod299B);
          real basisEval29FC#3 = RMul(coeff296B,prod29A1);
          real basisEval29FD#2 = RMul(coeff2978,prod29A3);
          real basisEval29FE#2 = RMul(coeff29D6,prod29A5);
          real basisEval29FF#3 = RMul(coeff29E7,prod29AD);
          real basisEval2A00#2 = RMul(coeff29D9,prod29B0);
          real basisEval2A01#3 = RMul(one296C,prod29BA);
          real basisEval2A02#1 = RMul(coeff29EB,prod29BC);
          real basisEval2A03#1 = RMul(coeff29D9,prod29C0);
          real basisEval2A04#3 = RMul(coeff296B,prod29C2);
          real basisEval2A05#1 = RMul(coeff29EF,prod29C4);
          real basisEval2A06#4 = RMul(coeff29D6,prod29C8);
          real basisEval2A07#1 = RMul(coeff29EB,prod29CA);
          real basisEval2A08#2 = RMul(coeff29D9,prod29CC);
          real basisEval2A09#1 = RMul(coeff2978,prod2976);
          real basisEval2A0A#2 = RMul(coeff2978,prod2981);
          real basisEval2A0B#1 = RMul(coeff298B,prod2985);
          real basisEval2A0C#2 = RMul(coeff296B,prod298D);
          real basisEval2A0D#2 = RMul(coeff2978,prod2994);
          real basisEval2A0E#1 = RMul(coeff298B,prod2997);
          real basisEval2A0F#1 = RMul(coeff29A7,prod299B);
          real basisEval2A10#1 = RMul(coeff298B,prod29A1);
          real basisEval2A11#3 = RMul(coeff296B,prod29A3);
          real basisEval2A12#2 = RMul(coeff296B,prod29A9);
          real basisEval2A13#1 = RMul(coeff2978,prod29B0);
          real basisEval2A14#2 = RMul(coeff298B,prod29B3);
          real basisEval2A15#1 = RMul(coeff29A7,prod29B6);
          real basisEval2A16#1 = RMul(coeff29CE,prod29BA);
          real basisEval2A17#1 = RMul(coeff298B,prod29C0);
          real basisEval2A18#1 = RMul(coeff29A7,prod29C2);
          real basisEval2A19#1 = RMul(coeff296B,prod29C4);
          real basisEval2A1A#3 = RMul(coeff296B,prod29CA);
          real basisEval2A1B#1 = RMul(coeff2978,prod29CC);
          real basisEval2A1C#2 = RMul(coeff296B,prod29D0);
          real basisEval2A1D#3 = RMul(one296C,prod297A);
          real basisEval2A1E#1 = RMul(coeff29D9,prod2981);
          real basisEval2A1F#3 = RMul(one296C,prod298D);
          real basisEval2A20#2 = RMul(coeff2978,prod2997);
          real basisEval2A21#2 = RMul(coeff29D6,prod299D);
          real basisEval2A22#2 = RMul(coeff29D6,prod29A1);
          real basisEval2A23#3 = RMul(coeff296B,prod29A5);
          real basisEval2A24#3 = RMul(one296C,prod29A9);
          real basisEval2A25#1 = RMul(coeff29EB,prod29B0);
          real basisEval2A26#1 = RMul(coeff29EF,prod29B3);
          real basisEval2A27#1 = RMul(coeff29EB,prod29B6);
          real basisEval2A28#2 = RMul(coeff29D9,prod29BC);
          real basisEval2A29#2 = RMul(coeff29D9,prod29C2);
          real basisEval2A2A#1 = RMul(coeff29D9,prod29C6);
          real basisEval2A2B#3 = RMul(coeff296B,prod29CC);
          real basisEval2A2C#3 = RMul(one296C,prod29D0);
          real basisEval2A2D#1 = RMul(coeff2978,prod2972);
          real basisEval2A2E#1 = RMul(coeff298B,prod297E);
          real basisEval2A2F#1 = RMul(coeff29A7,prod2991);
          real basisEval2A30#1 = RMul(coeff298B,prod2994);
          real basisEval2A31#1 = RMul(coeff298B,prod299D);
          real basisEval2A32#1 = RMul(coeff29CE,prod29AD);
          real basisEval2A33#1 = RMul(coeff29A7,prod29B0);
          real basisEval2A34#1 = RMul(coeff2978,prod29B6);
          real basisEval2A35#1 = RMul(coeff29A7,prod29BC);
          real basisEval2A36#1 = RMul(coeff298B,prod29BE);
          real basisEval2A37#1 = RMul(coeff296B,prod29C8);
          real basisEval2A38#1 = RMul(coeff2978,prod29CA);
          tensor[84] intermediateCons2A39#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval297B,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2982,basisEval2986,basisEval2988,basisEval298A,basisEval298E,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2995,basisEval2998,basisEval299C,basisEval299E,basisEval29A0,basisEval29A2,basisEval29A4,basisEval29A6,basisEval29AA,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval29B1,basisEval29B4,basisEval29B7,basisEval29BB,basisEval29BD,basisEval29BF,basisEval29C1,basisEval29C3,basisEval29C5,basisEval29C7,basisEval29C9,basisEval29CB,basisEval29CD,basisEval29D1];
          tensor[84] intermediateCons2A3A#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D3,basisEval2977,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D5,basisEval2982,basisEval29D7,basisEval296A,basisEval29D8,basisEval29DA,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29DC,basisEval2995,basisEval29DD,basisEval29DE,basisEval296A,basisEval29DF,basisEval29E0,basisEval29A2,basisEval296A,basisEval29E1,basisEval29E2,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29E4,basisEval29B1,basisEval29E5,basisEval29E6,basisEval29E8,basisEval296A,basisEval29E9,basisEval29EA,basisEval29C1,basisEval29EC,basisEval296A,basisEval29ED,basisEval29EE,basisEval29F0,basisEval296A,basisEval29F1,basisEval29F2,basisEval296A,basisEval29F3,basisEval296A];
          tensor[84] intermediateCons2A3B#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval29F4,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2982,basisEval29F6,basisEval296A,basisEval29F7,basisEval29F8,basisEval296A,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval29FA,basisEval2998,basisEval29FB,basisEval296A,basisEval299E,basisEval29E0,basisEval29FC,basisEval296A,basisEval29FD,basisEval29FE,basisEval296A,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A00,basisEval29E5,basisEval29B7,basisEval2A01,basisEval296A,basisEval2A02,basisEval29BF,basisEval2A03,basisEval2A04,basisEval296A,basisEval2A05,basisEval29EE,basisEval2A06,basisEval296A,basisEval2A07,basisEval2A08,basisEval296A,basisEval29F3,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3C#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2A09,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval297F,basisEval2A0A,basisEval2A0B,basisEval296A,basisEval296A,basisEval29D8,basisEval298A,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2992,basisEval2A0D,basisEval2A0E,basisEval2A0F,basisEval296A,basisEval296A,basisEval29DF,basisEval29A0,basisEval2A10,basisEval296A,basisEval296A,basisEval2A11,basisEval29E2,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29AE,basisEval2A13,basisEval2A14,basisEval2A15,basisEval2A16,basisEval296A,basisEval296A,basisEval29E9,basisEval29BF,basisEval2A17,basisEval2A18,basisEval296A,basisEval296A,basisEval2A19,basisEval29EE,basisEval29C9,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A1B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3D#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2973,basisEval2977,basisEval296A,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F5,basisEval2A1E,basisEval29D7,basisEval296A,basisEval296A,basisEval29D8,basisEval29F8,basisEval296A,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29F9,basisEval2A0D,basisEval2A20,basisEval29DE,basisEval296A,basisEval296A,basisEval2A21,basisEval29E0,basisEval2A22,basisEval296A,basisEval296A,basisEval2A11,basisEval2A23,basisEval296A,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29FF,basisEval2A25,basisEval2A26,basisEval2A27,basisEval29E8,basisEval296A,basisEval296A,basisEval2A28,basisEval29BF,basisEval29C1,basisEval2A29,basisEval296A,basisEval296A,basisEval29ED,basisEval2A2A,basisEval2A06,basisEval296A,basisEval296A,basisEval2A1A,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          tensor[84] intermediateCons2A3E#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296F,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2D,basisEval2977,basisEval296A,basisEval296A,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2E,basisEval2A0A,basisEval2986,basisEval296A,basisEval296A,basisEval2988,basisEval29F8,basisEval296A,basisEval296A,basisEval2A0C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A2F,basisEval2A30,basisEval2A20,basisEval299C,basisEval296A,basisEval296A,basisEval2A31,basisEval29A0,basisEval29FC,basisEval296A,basisEval296A,basisEval29FD,basisEval2A23,basisEval296A,basisEval296A,basisEval2A12,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2A32,basisEval2A33,basisEval2A14,basisEval2A34,basisEval29BB,basisEval296A,basisEval296A,basisEval2A35,basisEval2A36,basisEval29C1,basisEval2A04,basisEval296A,basisEval296A,basisEval29C5,basisEval29EE,basisEval2A37,basisEval296A,basisEval296A,basisEval2A38,basisEval2A2B,basisEval296A,basisEval296A,basisEval2A1C,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A];
          real vdot2B22#1 = VDot<84>(dofs2813,intermediateCons2A39);
          real vdot2B24#2 = VDot<84>(dofs2813,intermediateCons2A3A);
          real vdot2B26#2 = VDot<84>(dofs2813,intermediateCons2A3B);
          real vdot2B2B#1 = VDot<84>(dofs2813,intermediateCons2A3C);
          real vdot2B2D#2 = VDot<84>(dofs2813,intermediateCons2A3D);
          real vdot2B34#1 = VDot<84>(dofs2813,intermediateCons2A3E);
          tensor[3,3] _t2B20#1 = <tensor[3,3]>[vdot2B22,vdot2B24,vdot2B26,vdot2B24,vdot2B2B,vdot2B2D,vdot2B26,vdot2B2D,vdot2B34];
          real[3] _t2B4D#1 = EigenVals3x3(_t2B20);
          real _t2B51#1 = Subscript<real[3]>(_t2B4D,ilit24C8);
          real basisEval2B6E#1 = RMul(one296C,prod2981);
          real basisEval2B81#1 = RMul(one296C,prod2994);
          real basisEval2B84#1 = RMul(one296C,prod2997);
          real basisEval2B8C#3 = RMul(coeff296B,prod299F);
          real basisEval2B9D#1 = RMul(one296C,prod29B0);
          real basisEval2BA0#1 = RMul(one296C,prod29B3);
          real basisEval2BA3#1 = RMul(one296C,prod29B6);
          real basisEval2BAB#2 = RMul(coeff296B,prod29BE);
          real basisEval2BAD#2 = RMul(coeff296B,prod29C0);
          real basisEval2BB3#1 = RMul(coeff29D6,prod29C6);
          real prod52BBE#1 = RMul(prod429AB,varAcc2969);
          real prod2BBF#1 = RMul(one296C,prod52BBE);
          real prod2BC0#2 = RMul(one296C,prod2BBF);
          real basisEval2BC1#2 = RMul(one296C,prod2BC0);
          real prod2BC2#1 = RMul(varAcc2968,prod429AB);
          real prod2BC3#3 = RMul(one296C,prod2BC2);
          real basisEval2BC4#1 = RMul(one296C,prod2BC3);
          real prod2BC5#1 = RMul(prod22983,prod3298F);
          real prod2BC6#3 = RMul(one296C,prod2BC5);
          real basisEval2BC7#1 = RMul(one296C,prod2BC6);
          real prod2BC8#1 = RMul(prod32999,prod2297C);
          real prod2BC9#3 = RMul(one296C,prod2BC8);
          real basisEval2BCA#1 = RMul(one296C,prod2BC9);
          real prod2BCB#1 = RMul(prod429B8,varAcc2969);
          real prod2BCC#3 = RMul(one296C,prod2BCB);
          real basisEval2BCD#1 = RMul(one296C,prod2BCC);
          real prod52BCE#1 = RMul(prod429B8,varAcc2968);
          real prod2BCF#1 = RMul(prod52BCE,one296C);
          real prod2BD0#2 = RMul(one296C,prod2BCF);
          real basisEval2BD1#2 = RMul(one296C,prod2BD0);
          real prod2BD2#3 = RMul(varAcc2967,prod29AC);
          real basisEval2BD3#1 = RMul(coeff296B,prod2BD2);
          real prod2BD4#2 = RMul(varAcc2967,prod29AF);
          real basisEval2BD5#2 = RMul(coeff296B,prod2BD4);
          real prod2BD6#2 = RMul(varAcc2967,prod29B2);
          real basisEval2BD7#1 = RMul(coeff296B,prod2BD6);
          real prod2BD8#2 = RMul(varAcc2967,prod29B5);
          real basisEval2BD9#2 = RMul(coeff296B,prod2BD8);
          real prod2BDA#3 = RMul(varAcc2967,prod29B9);
          real basisEval2BDB#1 = RMul(coeff296B,prod2BDA);
          real prod2BDC#3 = RMul(prod2298C,prod2990);
          real basisEval2BDD#1 = RMul(coeff29D6,prod2BDC);
          real prod2BDE#2 = RMul(prod2298C,prod2993);
          real basisEval2BDF#2 = RMul(coeff29D6,prod2BDE);
          real prod2BE0#2 = RMul(prod2298C,prod2996);
          real basisEval2BE1#2 = RMul(coeff29D6,prod2BE0);
          real prod2BE2#3 = RMul(prod2298C,prod299A);
          real basisEval2BE3#1 = RMul(coeff29D6,prod2BE2);
          real prod2BE4#3 = RMul(prod329A8,prod297D);
          real basisEval2BE5#1 = RMul(coeff29D9,prod2BE4);
          real prod2BE6#2 = RMul(prod329A8,prod2980);
          real basisEval2BE7#1 = RMul(coeff29D9,prod2BE6);
          real prod2BE8#3 = RMul(prod329A8,prod2984);
          real basisEval2BE9#1 = RMul(coeff29D9,prod2BE8);
          real prod2BEA#3 = RMul(prod429CF,prod2971);
          real basisEval2BEB#1 = RMul(coeff29E7,prod2BEA);
          real prod2BEC#3 = RMul(prod429CF,prod2975);
          real basisEval2BED#1 = RMul(coeff29E7,prod2BEC);
          real prod52BEF#1 = RMul(prod429CF,varAcc2967);
          real prod2BF0#2 = RMul(prod52BEF,prod296D);
          real basisEval2BF1#1 = RMul(coeff2978,prod2BF0);
          real basisEval2BF6#1 = RMul(one296C,prod2987);
          real basisEval2BFB#1 = RMul(one296C,prod299D);
          real basisEval2BFD#1 = RMul(one296C,prod29A3);
          real basisEval2C04#1 = RMul(one296C,prod29BC);
          real basisEval2C05#1 = RMul(coeff29D6,prod29C0);
          real basisEval2C07#1 = RMul(one296C,prod29C4);
          real basisEval2C08#2 = RMul(coeff296B,prod29C6);
          real basisEval2C09#1 = RMul(one296C,prod29CA);
          real basisEval2C0C#1 = RMul(coeff296B,prod2BC3);
          real basisEval2C0D#1 = RMul(coeff29D6,prod2BC6);
          real basisEval2C0E#1 = RMul(coeff29D9,prod2BC9);
          real basisEval2C0F#1 = RMul(coeff29E7,prod2BCC);
          real basisEval2C10#1 = RMul(coeff2978,prod2BD0);
          real basisEval2C11#1 = RMul(one296C,prod2BD2);
          real basisEval2C12#2 = RMul(coeff29D6,prod2BD6);
          real basisEval2C13#1 = RMul(coeff29D9,prod2BD8);
          real basisEval2C14#1 = RMul(coeff29E7,prod2BDA);
          real basisEval2C15#1 = RMul(one296C,prod2BDC);
          real basisEval2C16#1 = RMul(coeff296B,prod2BDE);
          real basisEval2C17#1 = RMul(coeff29D9,prod2BE2);
          real basisEval2C18#1 = RMul(one296C,prod2BE4);
          real basisEval2C19#2 = RMul(coeff296B,prod2BE6);
          real basisEval2C1A#1 = RMul(coeff29D6,prod2BE8);
          real basisEval2C1B#1 = RMul(one296C,prod2BEA);
          real basisEval2C1C#1 = RMul(coeff296B,prod2BEC);
          real basisEval2C1D#2 = RMul(one296C,prod2BF0);
          real basisEval2C20#1 = RMul(one296C,prod2989);
          real basisEval2C25#1 = RMul(one296C,prod29A1);
          real basisEval2C27#1 = RMul(one296C,prod29A5);
          real basisEval2C2C#1 = RMul(coeff29D6,prod29BE);
          real basisEval2C2D#1 = RMul(one296C,prod29C2);
          real basisEval2C2E#1 = RMul(one296C,prod29C8);
          real basisEval2C30#1 = RMul(one296C,prod29CC);
          real basisEval2C31#1 = RMul(coeff2978,prod2BC0);
          real basisEval2C32#1 = RMul(coeff29E7,prod2BC3);
          real basisEval2C33#1 = RMul(coeff29D9,prod2BC6);
          real basisEval2C34#1 = RMul(coeff29D6,prod2BC9);
          real basisEval2C35#1 = RMul(coeff296B,prod2BCC);
          real basisEval2C36#1 = RMul(coeff29E7,prod2BD2);
          real basisEval2C37#1 = RMul(coeff29D9,prod2BD4);
          real basisEval2C38#1 = RMul(one296C,prod2BDA);
          real basisEval2C39#1 = RMul(coeff29D9,prod2BDC);
          real basisEval2C3A#1 = RMul(coeff296B,prod2BE0);
          real basisEval2C3B#1 = RMul(one296C,prod2BE2);
          real basisEval2C3C#1 = RMul(coeff29D6,prod2BE4);
          real basisEval2C3D#1 = RMul(one296C,prod2BE8);
          real basisEval2C3E#1 = RMul(coeff296B,prod2BEA);
          real basisEval2C3F#1 = RMul(one296C,prod2BEC);
          tensor[84] intermediateCons2C40#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval296A,basisEval29D3,basisEval29F4,basisEval29D4,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29D5,basisEval2B6E,basisEval29F6,basisEval29D8,basisEval29F8,basisEval29DB,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29DC,basisEval2B81,basisEval2B84,basisEval29FB,basisEval29DF,basisEval2B8C,basisEval29FC,basisEval29E1,basisEval29FE,basisEval29E3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval29E4,basisEval2B9D,basisEval2BA0,basisEval2BA3,basisEval2A01,basisEval29E9,basisEval2BAB,basisEval2BAD,basisEval2A04,basisEval29ED,basisEval2BB3,basisEval2A06,basisEval29F1,basisEval2A08,basisEval29F3,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval296A,basisEval2BC1,basisEval2BC4,basisEval2BC7,basisEval2BCA,basisEval2BCD,basisEval2BD1,basisEval2BD3,basisEval2BD5,basisEval2BD7,basisEval2BD9,basisEval2BDB,basisEval2BDD,basisEval2BDF,basisEval2BE1,basisEval2BE3,basisEval2BE5,basisEval2BE7,basisEval2BE9,basisEval2BEB,basisEval2BED,basisEval2BF1];
          tensor[84] intermediateCons2C41#1 = <tensor[84]>[basisEval296A,basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval29D3,basisEval2977,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval29D5,basisEval2982,basisEval29D7,basisEval296A,basisEval2BF6,basisEval29F8,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval29DC,basisEval2995,basisEval29DD,basisEval29DE,basisEval296A,basisEval2BFB,basisEval2B8C,basisEval2A22,basisEval296A,basisEval2BFD,basisEval2A23,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval29E4,basisEval29B1,basisEval29E5,basisEval29E6,basisEval29E8,basisEval296A,basisEval2C04,basisEval2BAB,basisEval2C05,basisEval2A29,basisEval296A,basisEval2C07,basisEval2C08,basisEval2A06,basisEval296A,basisEval2C09,basisEval2A2B,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval2BC1,basisEval2C0C,basisEval2C0D,basisEval2C0E,basisEval2C0F,basisEval2C10,basisEval296A,basisEval2C11,basisEval2BD5,basisEval2C12,basisEval2C13,basisEval2C14,basisEval296A,basisEval2C15,basisEval2C16,basisEval2BE1,basisEval2C17,basisEval296A,basisEval2C18,basisEval2C19,basisEval2C1A,basisEval296A,basisEval2C1B,basisEval2C1C,basisEval296A,basisEval2C1D,basisEval296A];
          tensor[84] intermediateCons2C42#1 = <tensor[84]>[basisEval296A,basisEval29D2,basisEval296A,basisEval296A,basisEval2973,basisEval29F4,basisEval296A,basisEval2A1D,basisEval296A,basisEval296A,basisEval29F5,basisEval2982,basisEval29F6,basisEval296A,basisEval29D8,basisEval2C20,basisEval296A,basisEval2A1F,basisEval296A,basisEval296A,basisEval29F9,basisEval29FA,basisEval2998,basisEval29FB,basisEval296A,basisEval2A21,basisEval2B8C,basisEval2C25,basisEval296A,basisEval2A11,basisEval2C27,basisEval296A,basisEval2A24,basisEval296A,basisEval296A,basisEval29FF,basisEval2A00,basisEval29E5,basisEval29B7,basisEval2A01,basisEval296A,basisEval2A28,basisEval2C2C,basisEval2BAD,basisEval2C2D,basisEval296A,basisEval29ED,basisEval2C08,basisEval2C2E,basisEval296A,basisEval2A1A,basisEval2C30,basisEval296A,basisEval2A2C,basisEval296A,basisEval296A,basisEval2C31,basisEval2C32,basisEval2C33,basisEval2C34,basisEval2C35,basisEval2BD1,basisEval296A,basisEval2C36,basisEval2C37,basisEval2C12,basisEval2BD9,basisEval2C38,basisEval296A,basisEval2C39,basisEval2BDF,basisEval2C3A,basisEval2C3B,basisEval296A,basisEval2C3C,basisEval2C19,basisEval2C3D,basisEval296A,basisEval2C3E,basisEval2C3F,basisEval296A,basisEval2C1D,basisEval296A,basisEval296A];
          real vdot2D37#1 = VDot<84>(dofs2813,intermediateCons2C40);
          real vdot2D39#1 = VDot<84>(dofs2813,intermediateCons2C41);
          real vdot2D3B#1 = VDot<84>(dofs2813,intermediateCons2C42);
          tensor[3] probe_l_62D35#2 = <tensor[3]>[vdot2D37,vdot2D39,vdot2D3B];
          real op1_e3_l_82D44#1 = VDot<3>(probe_l_62D35,probe_l_62D35);
          real op1_e3_l_92D47#1 = Sqrt(op1_e3_l_82D44);
          real op1_e3_l_102D4A#1 = RNeg(_t2B51);
          real op1_e3_l_112D4D#1 = RAdd(fBias2484,op1_e3_l_92D47);
          real _t2D50#1 = RDiv(op1_e3_l_102D4A,op1_e3_l_112D4D);
          bool _t2D53#1 = GT<real>(_t2D50,fStrTh2480);
          if _t2D53 then goto ASSIGN499B else goto ASSIGN46AD
        ASSIGN499B:  preds = [COND2D55]
          bool _t2D58#1 = GTE<real>(one296C,fMaskTh2482);
          if _t2D58 then goto ASSIGN2D5C else goto ASSIGN46AC
        ASSIGN2D5C:  preds = [COND2D5A]
          bool _t2D5B#1 = true;
          goto JOIN2D5F
        JOIN2D5F:  preds = [ASSIGN2D5C,ASSIGN46AC]
          bool _t2D5D#1 = phi(_t2D5B,_t2D5E)
          goto JOIN2D62
        JOIN2D62:  preds = [JOIN2D5F,ASSIGN46AD]
          bool _t2D60#1 = phi(_t2D5D,_t2D61)
          goto JOIN2D65
        JOIN2D65:  preds = [JOIN2D62,ASSIGN46AE]
          bool _t2D63#1 = phi(_t2D60,_t2D64)
          bool _t2D66#1 = BNot(_t2D63);
          if _t2D66 then goto SAVE2D69 else goto JOIN2D6B
        SAVE2D69:  preds = [COND2D68]
          self.rayN = rayN24AC;
          active
          goto JOIN2D6B
        JOIN2D6B:  preds = [*ACTIVE2D6A,COND2D68]
          bool _t2D6C#1 = BNot(analytical248E);
          if _t2D6C then goto ASSIGN2E6F else goto ASSIGN3EA1
        ASSIGN2E6F:  preds = [COND2D6E]
          int ilit2D70#1 = 84;
          int mulRes2D71#84 = IMul(_t246C,ilit2D70);
          int idx2D74#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,mulRes2D71);
          int ilit2D75#87 = 1;
          int addRes2D76#1 = IAdd(mulRes2D71,ilit2D75);
          int idx2D77#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D76);
          int ilit2D78#3 = 2;
          int addRes2D79#1 = IAdd(mulRes2D71,ilit2D78);
          int idx2D7A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D79);
          int ilit2D7B#1 = 3;
          int addRes2D7C#1 = IAdd(mulRes2D71,ilit2D7B);
          int idx2D7D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7C);
          int ilit2D7E#1 = 4;
          int addRes2D7F#1 = IAdd(mulRes2D71,ilit2D7E);
          int idx2D80#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D7F);
          int ilit2D81#1 = 5;
          int addRes2D82#1 = IAdd(mulRes2D71,ilit2D81);
          int idx2D83#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D82);
          int ilit2D84#1 = 6;
          int addRes2D85#1 = IAdd(mulRes2D71,ilit2D84);
          int idx2D86#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D85);
          int ilit2D87#1 = 7;
          int addRes2D88#1 = IAdd(mulRes2D71,ilit2D87);
          int idx2D89#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D88);
          int ilit2D8A#1 = 8;
          int addRes2D8B#1 = IAdd(mulRes2D71,ilit2D8A);
          int idx2D8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8B);
          int ilit2D8D#1 = 9;
          int addRes2D8E#1 = IAdd(mulRes2D71,ilit2D8D);
          int idx2D8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D8E);
          int ilit2D90#1 = 10;
          int addRes2D91#1 = IAdd(mulRes2D71,ilit2D90);
          int idx2D92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D91);
          int ilit2D93#1 = 11;
          int addRes2D94#1 = IAdd(mulRes2D71,ilit2D93);
          int idx2D95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D94);
          int ilit2D96#1 = 12;
          int addRes2D97#1 = IAdd(mulRes2D71,ilit2D96);
          int idx2D98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D97);
          int ilit2D99#1 = 13;
          int addRes2D9A#1 = IAdd(mulRes2D71,ilit2D99);
          int idx2D9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9A);
          int ilit2D9C#1 = 14;
          int addRes2D9D#1 = IAdd(mulRes2D71,ilit2D9C);
          int idx2D9E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2D9D);
          int ilit2D9F#1 = 15;
          int addRes2DA0#1 = IAdd(mulRes2D71,ilit2D9F);
          int idx2DA1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA0);
          int ilit2DA2#1 = 16;
          int addRes2DA3#1 = IAdd(mulRes2D71,ilit2DA2);
          int idx2DA4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA3);
          int ilit2DA5#1 = 17;
          int addRes2DA6#1 = IAdd(mulRes2D71,ilit2DA5);
          int idx2DA7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA6);
          int ilit2DA8#1 = 18;
          int addRes2DA9#1 = IAdd(mulRes2D71,ilit2DA8);
          int idx2DAA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DA9);
          int ilit2DAB#1 = 19;
          int addRes2DAC#1 = IAdd(mulRes2D71,ilit2DAB);
          int idx2DAD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAC);
          int ilit2DAE#1 = 20;
          int addRes2DAF#1 = IAdd(mulRes2D71,ilit2DAE);
          int idx2DB0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DAF);
          int ilit2DB1#1 = 21;
          int addRes2DB2#1 = IAdd(mulRes2D71,ilit2DB1);
          int idx2DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB2);
          int ilit2DB4#1 = 22;
          int addRes2DB5#1 = IAdd(mulRes2D71,ilit2DB4);
          int idx2DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB5);
          int ilit2DB7#1 = 23;
          int addRes2DB8#1 = IAdd(mulRes2D71,ilit2DB7);
          int idx2DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DB8);
          int ilit2DBA#1 = 24;
          int addRes2DBB#1 = IAdd(mulRes2D71,ilit2DBA);
          int idx2DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBB);
          int ilit2DBD#1 = 25;
          int addRes2DBE#1 = IAdd(mulRes2D71,ilit2DBD);
          int idx2DBF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DBE);
          int ilit2DC0#1 = 26;
          int addRes2DC1#1 = IAdd(mulRes2D71,ilit2DC0);
          int idx2DC2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC1);
          int ilit2DC3#1 = 27;
          int addRes2DC4#1 = IAdd(mulRes2D71,ilit2DC3);
          int idx2DC5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC4);
          int ilit2DC6#1 = 28;
          int addRes2DC7#1 = IAdd(mulRes2D71,ilit2DC6);
          int idx2DC8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DC7);
          int ilit2DC9#1 = 29;
          int addRes2DCA#1 = IAdd(mulRes2D71,ilit2DC9);
          int idx2DCB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCA);
          int ilit2DCC#1 = 30;
          int addRes2DCD#1 = IAdd(mulRes2D71,ilit2DCC);
          int idx2DCE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DCD);
          int ilit2DCF#1 = 31;
          int addRes2DD0#1 = IAdd(mulRes2D71,ilit2DCF);
          int idx2DD1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD0);
          int ilit2DD2#1 = 32;
          int addRes2DD3#1 = IAdd(mulRes2D71,ilit2DD2);
          int idx2DD4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD3);
          int ilit2DD5#1 = 33;
          int addRes2DD6#1 = IAdd(mulRes2D71,ilit2DD5);
          int idx2DD7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD6);
          int ilit2DD8#1 = 34;
          int addRes2DD9#1 = IAdd(mulRes2D71,ilit2DD8);
          int idx2DDA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DD9);
          int ilit2DDB#1 = 35;
          int addRes2DDC#1 = IAdd(mulRes2D71,ilit2DDB);
          int idx2DDD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDC);
          int ilit2DDE#1 = 36;
          int addRes2DDF#1 = IAdd(mulRes2D71,ilit2DDE);
          int idx2DE0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DDF);
          int ilit2DE1#1 = 37;
          int addRes2DE2#1 = IAdd(mulRes2D71,ilit2DE1);
          int idx2DE3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE2);
          int ilit2DE4#1 = 38;
          int addRes2DE5#1 = IAdd(mulRes2D71,ilit2DE4);
          int idx2DE6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE5);
          int ilit2DE7#1 = 39;
          int addRes2DE8#1 = IAdd(mulRes2D71,ilit2DE7);
          int idx2DE9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DE8);
          int ilit2DEA#1 = 40;
          int addRes2DEB#1 = IAdd(mulRes2D71,ilit2DEA);
          int idx2DEC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEB);
          int ilit2DED#1 = 41;
          int addRes2DEE#1 = IAdd(mulRes2D71,ilit2DED);
          int idx2DEF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DEE);
          int ilit2DF0#1 = 42;
          int addRes2DF1#1 = IAdd(mulRes2D71,ilit2DF0);
          int idx2DF2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF1);
          int ilit2DF3#1 = 43;
          int addRes2DF4#1 = IAdd(mulRes2D71,ilit2DF3);
          int idx2DF5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF4);
          int ilit2DF6#1 = 44;
          int addRes2DF7#1 = IAdd(mulRes2D71,ilit2DF6);
          int idx2DF8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DF7);
          int ilit2DF9#1 = 45;
          int addRes2DFA#1 = IAdd(mulRes2D71,ilit2DF9);
          int idx2DFB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFA);
          int ilit2DFC#1 = 46;
          int addRes2DFD#1 = IAdd(mulRes2D71,ilit2DFC);
          int idx2DFE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2DFD);
          int ilit2DFF#1 = 47;
          int addRes2E00#1 = IAdd(mulRes2D71,ilit2DFF);
          int idx2E01#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E00);
          int ilit2E02#1 = 48;
          int addRes2E03#1 = IAdd(mulRes2D71,ilit2E02);
          int idx2E04#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E03);
          int ilit2E05#1 = 49;
          int addRes2E06#1 = IAdd(mulRes2D71,ilit2E05);
          int idx2E07#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E06);
          int ilit2E08#1 = 50;
          int addRes2E09#1 = IAdd(mulRes2D71,ilit2E08);
          int idx2E0A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E09);
          int ilit2E0B#1 = 51;
          int addRes2E0C#1 = IAdd(mulRes2D71,ilit2E0B);
          int idx2E0D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0C);
          int ilit2E0E#1 = 52;
          int addRes2E0F#1 = IAdd(mulRes2D71,ilit2E0E);
          int idx2E10#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E0F);
          int ilit2E11#1 = 53;
          int addRes2E12#1 = IAdd(mulRes2D71,ilit2E11);
          int idx2E13#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E12);
          int ilit2E14#1 = 54;
          int addRes2E15#1 = IAdd(mulRes2D71,ilit2E14);
          int idx2E16#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E15);
          int ilit2E17#1 = 55;
          int addRes2E18#1 = IAdd(mulRes2D71,ilit2E17);
          int idx2E19#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E18);
          int ilit2E1A#1 = 56;
          int addRes2E1B#1 = IAdd(mulRes2D71,ilit2E1A);
          int idx2E1C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1B);
          int ilit2E1D#1 = 57;
          int addRes2E1E#1 = IAdd(mulRes2D71,ilit2E1D);
          int idx2E1F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E1E);
          int ilit2E20#1 = 58;
          int addRes2E21#1 = IAdd(mulRes2D71,ilit2E20);
          int idx2E22#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E21);
          int ilit2E23#1 = 59;
          int addRes2E24#1 = IAdd(mulRes2D71,ilit2E23);
          int idx2E25#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E24);
          int ilit2E26#1 = 60;
          int addRes2E27#1 = IAdd(mulRes2D71,ilit2E26);
          int idx2E28#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E27);
          int ilit2E29#1 = 61;
          int addRes2E2A#1 = IAdd(mulRes2D71,ilit2E29);
          int idx2E2B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2A);
          int ilit2E2C#1 = 62;
          int addRes2E2D#1 = IAdd(mulRes2D71,ilit2E2C);
          int idx2E2E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E2D);
          int ilit2E2F#1 = 63;
          int addRes2E30#1 = IAdd(mulRes2D71,ilit2E2F);
          int idx2E31#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E30);
          int ilit2E32#1 = 64;
          int addRes2E33#1 = IAdd(mulRes2D71,ilit2E32);
          int idx2E34#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E33);
          int ilit2E35#1 = 65;
          int addRes2E36#1 = IAdd(mulRes2D71,ilit2E35);
          int idx2E37#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E36);
          int ilit2E38#1 = 66;
          int addRes2E39#1 = IAdd(mulRes2D71,ilit2E38);
          int idx2E3A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E39);
          int ilit2E3B#1 = 67;
          int addRes2E3C#1 = IAdd(mulRes2D71,ilit2E3B);
          int idx2E3D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3C);
          int ilit2E3E#1 = 68;
          int addRes2E3F#1 = IAdd(mulRes2D71,ilit2E3E);
          int idx2E40#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E3F);
          int ilit2E41#1 = 69;
          int addRes2E42#1 = IAdd(mulRes2D71,ilit2E41);
          int idx2E43#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E42);
          int ilit2E44#1 = 70;
          int addRes2E45#1 = IAdd(mulRes2D71,ilit2E44);
          int idx2E46#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E45);
          int ilit2E47#1 = 71;
          int addRes2E48#1 = IAdd(mulRes2D71,ilit2E47);
          int idx2E49#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E48);
          int ilit2E4A#1 = 72;
          int addRes2E4B#1 = IAdd(mulRes2D71,ilit2E4A);
          int idx2E4C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4B);
          int ilit2E4D#1 = 73;
          int addRes2E4E#1 = IAdd(mulRes2D71,ilit2E4D);
          int idx2E4F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E4E);
          int ilit2E50#1 = 74;
          int addRes2E51#1 = IAdd(mulRes2D71,ilit2E50);
          int idx2E52#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E51);
          int ilit2E53#1 = 75;
          int addRes2E54#1 = IAdd(mulRes2D71,ilit2E53);
          int idx2E55#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E54);
          int ilit2E56#1 = 76;
          int addRes2E57#1 = IAdd(mulRes2D71,ilit2E56);
          int idx2E58#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E57);
          int ilit2E59#1 = 77;
          int addRes2E5A#1 = IAdd(mulRes2D71,ilit2E59);
          int idx2E5B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5A);
          int ilit2E5C#1 = 78;
          int addRes2E5D#1 = IAdd(mulRes2D71,ilit2E5C);
          int idx2E5E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E5D);
          int ilit2E5F#1 = 79;
          int addRes2E60#1 = IAdd(mulRes2D71,ilit2E5F);
          int idx2E61#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E60);
          int ilit2E62#1 = 80;
          int addRes2E63#1 = IAdd(mulRes2D71,ilit2E62);
          int idx2E64#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E63);
          int ilit2E65#1 = 81;
          int addRes2E66#1 = IAdd(mulRes2D71,ilit2E65);
          int idx2E67#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E66);
          int ilit2E68#1 = 82;
          int addRes2E69#1 = IAdd(mulRes2D71,ilit2E68);
          int idx2E6A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E69);
          int ilit2E6B#1 = 83;
          int addRes2E6C#1 = IAdd(mulRes2D71,ilit2E6B);
          int idx2E6D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes2E6C);
          int mulRes2F73#1 = IMul(ilit2D75,idx2D74);
          int mulRes2F75#1 = IMul(ilit2D75,idx2D77);
          int mulRes2F78#1 = IMul(ilit2D75,idx2D7A);
          int mulRes2F7B#1 = IMul(ilit2D75,idx2D7D);
          int mulRes2F7E#1 = IMul(ilit2D75,idx2D80);
          int mulRes2F81#1 = IMul(ilit2D75,idx2D83);
          int mulRes2F84#1 = IMul(ilit2D75,idx2D86);
          int mulRes2F87#1 = IMul(ilit2D75,idx2D89);
          int mulRes2F8A#1 = IMul(ilit2D75,idx2D8C);
          int mulRes2F8D#1 = IMul(ilit2D75,idx2D8F);
          int mulRes2F90#1 = IMul(ilit2D75,idx2D92);
          int mulRes2F93#1 = IMul(ilit2D75,idx2D95);
          int mulRes2F96#1 = IMul(ilit2D75,idx2D98);
          int mulRes2F99#1 = IMul(ilit2D75,idx2D9B);
          int mulRes2F9C#1 = IMul(ilit2D75,idx2D9E);
          int mulRes2F9F#1 = IMul(ilit2D75,idx2DA1);
          int mulRes2FA2#1 = IMul(ilit2D75,idx2DA4);
          int mulRes2FA5#1 = IMul(ilit2D75,idx2DA7);
          int mulRes2FA8#1 = IMul(ilit2D75,idx2DAA);
          int mulRes2FAB#1 = IMul(ilit2D75,idx2DAD);
          int mulRes2FAE#1 = IMul(ilit2D75,idx2DB0);
          int mulRes2FB1#1 = IMul(ilit2D75,idx2DB3);
          int mulRes2FB4#1 = IMul(ilit2D75,idx2DB6);
          int mulRes2FB7#1 = IMul(ilit2D75,idx2DB9);
          int mulRes2FBA#1 = IMul(ilit2D75,idx2DBC);
          int mulRes2FBD#1 = IMul(ilit2D75,idx2DBF);
          int mulRes2FC0#1 = IMul(ilit2D75,idx2DC2);
          int mulRes2FC3#1 = IMul(ilit2D75,idx2DC5);
          int mulRes2FC6#1 = IMul(ilit2D75,idx2DC8);
          int mulRes2FC9#1 = IMul(ilit2D75,idx2DCB);
          int mulRes2FCC#1 = IMul(ilit2D75,idx2DCE);
          int mulRes2FCF#1 = IMul(ilit2D75,idx2DD1);
          int mulRes2FD2#1 = IMul(ilit2D75,idx2DD4);
          int mulRes2FD5#1 = IMul(ilit2D75,idx2DD7);
          int mulRes2FD8#1 = IMul(ilit2D75,idx2DDA);
          int mulRes2FDB#1 = IMul(ilit2D75,idx2DDD);
          int mulRes2FDE#1 = IMul(ilit2D75,idx2DE0);
          int mulRes2FE1#1 = IMul(ilit2D75,idx2DE3);
          int mulRes2FE4#1 = IMul(ilit2D75,idx2DE6);
          int mulRes2FE7#1 = IMul(ilit2D75,idx2DE9);
          int mulRes2FEA#1 = IMul(ilit2D75,idx2DEC);
          int mulRes2FED#1 = IMul(ilit2D75,idx2DEF);
          int mulRes2FF0#1 = IMul(ilit2D75,idx2DF2);
          int mulRes2FF3#1 = IMul(ilit2D75,idx2DF5);
          int mulRes2FF6#1 = IMul(ilit2D75,idx2DF8);
          int mulRes2FF9#1 = IMul(ilit2D75,idx2DFB);
          int mulRes2FFC#1 = IMul(ilit2D75,idx2DFE);
          int mulRes2FFF#1 = IMul(ilit2D75,idx2E01);
          int mulRes3002#1 = IMul(ilit2D75,idx2E04);
          int mulRes3005#1 = IMul(ilit2D75,idx2E07);
          int mulRes3008#1 = IMul(ilit2D75,idx2E0A);
          int mulRes300B#1 = IMul(ilit2D75,idx2E0D);
          int mulRes300E#1 = IMul(ilit2D75,idx2E10);
          int mulRes3011#1 = IMul(ilit2D75,idx2E13);
          int mulRes3014#1 = IMul(ilit2D75,idx2E16);
          int mulRes3017#1 = IMul(ilit2D75,idx2E19);
          int mulRes301A#1 = IMul(ilit2D75,idx2E1C);
          int mulRes301D#1 = IMul(ilit2D75,idx2E1F);
          int mulRes3020#1 = IMul(ilit2D75,idx2E22);
          int mulRes3023#1 = IMul(ilit2D75,idx2E25);
          int mulRes3026#1 = IMul(ilit2D75,idx2E28);
          int mulRes3029#1 = IMul(ilit2D75,idx2E2B);
          int mulRes302C#1 = IMul(ilit2D75,idx2E2E);
          int mulRes302F#1 = IMul(ilit2D75,idx2E31);
          int mulRes3032#1 = IMul(ilit2D75,idx2E34);
          int mulRes3035#1 = IMul(ilit2D75,idx2E37);
          int mulRes3038#1 = IMul(ilit2D75,idx2E3A);
          int mulRes303B#1 = IMul(ilit2D75,idx2E3D);
          int mulRes303E#1 = IMul(ilit2D75,idx2E40);
          int mulRes3041#1 = IMul(ilit2D75,idx2E43);
          int mulRes3044#1 = IMul(ilit2D75,idx2E46);
          int mulRes3047#1 = IMul(ilit2D75,idx2E49);
          int mulRes304A#1 = IMul(ilit2D75,idx2E4C);
          int mulRes304D#1 = IMul(ilit2D75,idx2E4F);
          int mulRes3050#1 = IMul(ilit2D75,idx2E52);
          int mulRes3053#1 = IMul(ilit2D75,idx2E55);
          int mulRes3056#1 = IMul(ilit2D75,idx2E58);
          int mulRes3059#1 = IMul(ilit2D75,idx2E5B);
          int mulRes305C#1 = IMul(ilit2D75,idx2E5E);
          int mulRes305F#1 = IMul(ilit2D75,idx2E61);
          int mulRes3062#1 = IMul(ilit2D75,idx2E64);
          int mulRes3065#1 = IMul(ilit2D75,idx2E67);
          int mulRes3068#1 = IMul(ilit2D75,idx2E6A);
          int mulRes306B#1 = IMul(ilit2D75,idx2E6D);
          real dof306C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F73);
          real dof306D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F75);
          real dof306E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F78);
          real dof306F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7B);
          real dof3070#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F7E);
          real dof3071#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F81);
          real dof3072#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F84);
          real dof3073#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F87);
          real dof3074#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8A);
          real dof3075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F8D);
          real dof3076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F90);
          real dof3077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F93);
          real dof3078#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F96);
          real dof3079#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F99);
          real dof307A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9C);
          real dof307B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2F9F);
          real dof307C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA2);
          real dof307D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA5);
          real dof307E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FA8);
          real dof307F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAB);
          real dof3080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FAE);
          real dof3081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB1);
          real dof3082#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB4);
          real dof3083#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FB7);
          real dof3084#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBA);
          real dof3085#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FBD);
          real dof3086#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC0);
          real dof3087#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC3);
          real dof3088#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC6);
          real dof3089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FC9);
          real dof308A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCC);
          real dof308B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FCF);
          real dof308C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD2);
          real dof308D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD5);
          real dof308E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FD8);
          real dof308F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDB);
          real dof3090#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FDE);
          real dof3091#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE1);
          real dof3092#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE4);
          real dof3093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FE7);
          real dof3094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FEA);
          real dof3095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FED);
          real dof3096#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF0);
          real dof3097#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF3);
          real dof3098#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF6);
          real dof3099#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FF9);
          real dof309A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFC);
          real dof309B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes2FFF);
          real dof309C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3002);
          real dof309D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3005);
          real dof309E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3008);
          real dof309F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300B);
          real dof30A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes300E);
          real dof30A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3011);
          real dof30A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3014);
          real dof30A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3017);
          real dof30A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301A);
          real dof30A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes301D);
          real dof30A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3020);
          real dof30A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3023);
          real dof30A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3026);
          real dof30A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3029);
          real dof30AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302C);
          real dof30AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes302F);
          real dof30AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3032);
          real dof30AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3035);
          real dof30AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3038);
          real dof30AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303B);
          real dof30B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes303E);
          real dof30B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3041);
          real dof30B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3044);
          real dof30B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3047);
          real dof30B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304A);
          real dof30B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes304D);
          real dof30B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3050);
          real dof30B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3053);
          real dof30B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3056);
          real dof30B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3059);
          real dof30BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305C);
          real dof30BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes305F);
          real dof30BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3062);
          real dof30BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3065);
          real dof30BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3068);
          real dof30BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes306B);
          tensor[84] dofs30C0#9 = <tensor[84]>[dof306C,dof306D,dof306E,dof306F,dof3070,dof3071,dof3072,dof3073,dof3074,dof3075,dof3076,dof3077,dof3078,dof3079,dof307A,dof307B,dof307C,dof307D,dof307E,dof307F,dof3080,dof3081,dof3082,dof3083,dof3084,dof3085,dof3086,dof3087,dof3088,dof3089,dof308A,dof308B,dof308C,dof308D,dof308E,dof308F,dof3090,dof3091,dof3092,dof3093,dof3094,dof3095,dof3096,dof3097,dof3098,dof3099,dof309A,dof309B,dof309C,dof309D,dof309E,dof309F,dof30A0,dof30A1,dof30A2,dof30A3,dof30A4,dof30A5,dof30A6,dof30A7,dof30A8,dof30A9,dof30AA,dof30AB,dof30AC,dof30AD,dof30AE,dof30AF,dof30B0,dof30B1,dof30B2,dof30B3,dof30B4,dof30B5,dof30B6,dof30B7,dof30B8,dof30B9,dof30BA,dof30BB,dof30BC,dof30BD,dof30BE,dof30BF];
          real varAcc3214#20 = VIndex<3,0>(pos24B8);
          real varAcc3215#10 = VIndex<3,1>(pos24B8);
          real varAcc3216#10 = VIndex<3,2>(pos24B8);
          real basisEval3217#378 = 0.e0;
          real coeff3218#47 = 0.2e1;
          real one3219#79 = 0.1e1;
          real prod321A#6 = RMul(one3219,one3219);
          real prod321B#2 = RMul(one3219,prod321A);
          real basisEval321C#3 = RMul(coeff3218,prod321B);
          real prod321E#5 = RMul(one3219,varAcc3216);
          real prod321F#3 = RMul(one3219,prod321E);
          real basisEval3220#5 = RMul(coeff3218,prod321F);
          real prod3222#5 = RMul(varAcc3215,one3219);
          real prod3223#3 = RMul(one3219,prod3222);
          real basisEval3224#5 = RMul(coeff3218,prod3223);
          real coeff3225#25 = 0.6e1;
          real prod3227#3 = RMul(varAcc3214,prod321A);
          real basisEval3228#1 = RMul(coeff3225,prod3227);
          real prod23229#5 = RMul(varAcc3216,varAcc3216);
          real prod322A#4 = RMul(one3219,prod23229);
          real prod322B#4 = RMul(one3219,prod322A);
          real basisEval322C#2 = RMul(coeff3218,prod322B);
          real prod322D#4 = RMul(varAcc3215,varAcc3216);
          real prod322E#4 = RMul(one3219,prod322D);
          real basisEval322F#5 = RMul(coeff3218,prod322E);
          real prod23230#5 = RMul(varAcc3215,varAcc3215);
          real prod3231#4 = RMul(prod23230,one3219);
          real prod3232#4 = RMul(one3219,prod3231);
          real basisEval3233#2 = RMul(coeff3218,prod3232);
          real prod3234#4 = RMul(varAcc3214,prod321E);
          real basisEval3235#2 = RMul(coeff3225,prod3234);
          real prod3236#4 = RMul(varAcc3214,prod3222);
          real basisEval3237#2 = RMul(coeff3225,prod3236);
          real coeff3238#15 = 0.12e2;
          real prod23239#11 = RMul(varAcc3214,varAcc3214);
          real prod323A#4 = RMul(prod23239,prod321A);
          real basisEval323B#1 = RMul(coeff3238,prod323A);
          real prod3323C#4 = RMul(prod23229,varAcc3216);
          real prod323D#3 = RMul(one3219,prod3323C);
          real prod323E#4 = RMul(one3219,prod323D);
          real basisEval323F#2 = RMul(coeff3218,prod323E);
          real prod3240#3 = RMul(varAcc3215,prod23229);
          real prod3241#5 = RMul(one3219,prod3240);
          real basisEval3242#3 = RMul(coeff3218,prod3241);
          real prod3243#3 = RMul(prod23230,varAcc3216);
          real prod3244#5 = RMul(one3219,prod3243);
          real basisEval3245#3 = RMul(coeff3218,prod3244);
          real prod33246#4 = RMul(prod23230,varAcc3215);
          real prod3247#3 = RMul(prod33246,one3219);
          real prod3248#4 = RMul(one3219,prod3247);
          real basisEval3249#2 = RMul(coeff3218,prod3248);
          real prod324A#5 = RMul(varAcc3214,prod322A);
          real basisEval324B#2 = RMul(coeff3225,prod324A);
          real prod324C#3 = RMul(varAcc3214,prod322D);
          real basisEval324D#3 = RMul(coeff3225,prod324C);
          real prod324E#5 = RMul(varAcc3214,prod3231);
          real basisEval324F#2 = RMul(coeff3225,prod324E);
          real prod3250#5 = RMul(prod23239,prod321E);
          real basisEval3251#1 = RMul(coeff3238,prod3250);
          real prod3252#5 = RMul(prod23239,prod3222);
          real basisEval3253#1 = RMul(coeff3238,prod3252);
          real coeff3254#9 = 0.20e2;
          real prod33255#7 = RMul(prod23239,varAcc3214);
          real prod3256#4 = RMul(prod33255,prod321A);
          real basisEval3257#1 = RMul(coeff3254,prod3256);
          real prod43258#3 = RMul(prod3323C,varAcc3216);
          real prod3259#2 = RMul(one3219,prod43258);
          real prod325A#4 = RMul(one3219,prod3259);
          real basisEval325B#2 = RMul(coeff3218,prod325A);
          real prod325C#2 = RMul(varAcc3215,prod3323C);
          real prod325D#6 = RMul(one3219,prod325C);
          real basisEval325E#3 = RMul(coeff3218,prod325D);
          real prod325F#2 = RMul(prod23230,prod23229);
          real prod3260#5 = RMul(one3219,prod325F);
          real basisEval3261#1 = RMul(coeff3218,prod3260);
          real prod3262#2 = RMul(prod33246,varAcc3216);
          real prod3263#6 = RMul(one3219,prod3262);
          real basisEval3264#3 = RMul(coeff3218,prod3263);
          real prod43265#3 = RMul(prod33246,varAcc3215);
          real prod3266#2 = RMul(prod43265,one3219);
          real prod3267#4 = RMul(one3219,prod3266);
          real basisEval3268#2 = RMul(coeff3218,prod3267);
          real prod3269#6 = RMul(varAcc3214,prod323D);
          real basisEval326A#1 = RMul(coeff3225,prod3269);
          real prod326B#5 = RMul(varAcc3214,prod3240);
          real basisEval326C#4 = RMul(coeff3225,prod326B);
          real prod326D#5 = RMul(varAcc3214,prod3243);
          real basisEval326E#4 = RMul(coeff3225,prod326D);
          real prod326F#6 = RMul(varAcc3214,prod3247);
          real basisEval3270#1 = RMul(coeff3225,prod326F);
          real prod3271#5 = RMul(prod23239,prod322A);
          real basisEval3272#2 = RMul(coeff3238,prod3271);
          real prod3273#5 = RMul(prod23239,prod322D);
          real basisEval3274#1 = RMul(coeff3238,prod3273);
          real prod3275#5 = RMul(prod23239,prod3231);
          real basisEval3276#2 = RMul(coeff3238,prod3275);
          real prod3277#6 = RMul(prod33255,prod321E);
          real basisEval3278#1 = RMul(coeff3254,prod3277);
          real prod3279#6 = RMul(prod33255,prod3222);
          real basisEval327A#1 = RMul(coeff3254,prod3279);
          real coeff327B#3 = 0.30e2;
          real prod4327C#4 = RMul(prod33255,varAcc3214);
          real prod327D#4 = RMul(prod4327C,prod321A);
          real basisEval327E#1 = RMul(coeff327B,prod327D);
          real basisEval327F#6 = RMul(one3219,prod321B);
          real basisEval3280#3 = RMul(one3219,prod321F);
          real basisEval3281#5 = RMul(coeff3218,prod3227);
          real basisEval3282#3 = RMul(one3219,prod322B);
          real coeff3283#24 = 0.3e1;
          real basisEval3284#3 = RMul(coeff3283,prod3232);
          real basisEval3285#5 = RMul(coeff3218,prod3234);
          real coeff3286#25 = 0.4e1;
          real basisEval3287#1 = RMul(coeff3286,prod3236);
          real basisEval3288#3 = RMul(coeff3283,prod323A);
          real basisEval3289#3 = RMul(one3219,prod323E);
          real basisEval328A#2 = RMul(coeff3283,prod3244);
          real basisEval328B#3 = RMul(coeff3286,prod3248);
          real basisEval328C#3 = RMul(coeff3218,prod324A);
          real basisEval328D#3 = RMul(coeff3286,prod324C);
          real basisEval328E#2 = RMul(coeff3283,prod3250);
          real basisEval328F#2 = RMul(coeff3225,prod3252);
          real basisEval3290#3 = RMul(coeff3286,prod3256);
          real basisEval3291#3 = RMul(one3219,prod325A);
          real basisEval3292#4 = RMul(coeff3283,prod3260);
          real basisEval3293#2 = RMul(coeff3286,prod3263);
          real coeff3294#9 = 0.5e1;
          real basisEval3295#3 = RMul(coeff3294,prod3267);
          real basisEval3296#3 = RMul(coeff3218,prod3269);
          real basisEval3297#1 = RMul(coeff3286,prod326B);
          real coeff3298#6 = 0.8e1;
          real basisEval3299#1 = RMul(coeff3298,prod326F);
          real basisEval329A#4 = RMul(coeff3283,prod3271);
          real basisEval329B#4 = RMul(coeff3225,prod3273);
          real coeff329C#3 = 0.9e1;
          real basisEval329D#1 = RMul(coeff329C,prod3275);
          real basisEval329E#2 = RMul(coeff3286,prod3277);
          real basisEval329F#1 = RMul(coeff3298,prod3279);
          real basisEval32A0#3 = RMul(coeff3294,prod327D);
          real basisEval32A1#3 = RMul(one3219,prod3223);
          real basisEval32A2#3 = RMul(coeff3283,prod322B);
          real basisEval32A3#3 = RMul(one3219,prod3232);
          real basisEval32A4#1 = RMul(coeff3286,prod3234);
          real basisEval32A5#5 = RMul(coeff3218,prod3236);
          real basisEval32A6#3 = RMul(coeff3286,prod323E);
          real basisEval32A7#2 = RMul(coeff3283,prod3241);
          real basisEval32A8#3 = RMul(one3219,prod3248);
          real basisEval32A9#3 = RMul(coeff3218,prod324E);
          real basisEval32AA#2 = RMul(coeff3225,prod3250);
          real basisEval32AB#2 = RMul(coeff3283,prod3252);
          real basisEval32AC#3 = RMul(coeff3294,prod325A);
          real basisEval32AD#2 = RMul(coeff3286,prod325D);
          real basisEval32AE#3 = RMul(one3219,prod3267);
          real basisEval32AF#1 = RMul(coeff3298,prod3269);
          real basisEval32B0#1 = RMul(coeff3286,prod326D);
          real basisEval32B1#3 = RMul(coeff3218,prod326F);
          real basisEval32B2#1 = RMul(coeff329C,prod3271);
          real basisEval32B3#4 = RMul(coeff3283,prod3275);
          real basisEval32B4#1 = RMul(coeff3298,prod3277);
          real basisEval32B5#2 = RMul(coeff3286,prod3279);
          real basisEval32B6#1 = RMul(coeff3225,prod3223);
          real basisEval32B7#2 = RMul(coeff3225,prod322E);
          real basisEval32B8#1 = RMul(coeff3238,prod3232);
          real basisEval32B9#2 = RMul(coeff3218,prod323A);
          real basisEval32BA#2 = RMul(coeff3225,prod3241);
          real basisEval32BB#1 = RMul(coeff3238,prod3244);
          real basisEval32BC#1 = RMul(coeff3254,prod3248);
          real basisEval32BD#1 = RMul(coeff3238,prod324E);
          real basisEval32BE#3 = RMul(coeff3218,prod3250);
          real basisEval32BF#2 = RMul(coeff3218,prod3256);
          real basisEval32C0#1 = RMul(coeff3225,prod325D);
          real basisEval32C1#2 = RMul(coeff3238,prod3260);
          real basisEval32C2#1 = RMul(coeff3254,prod3263);
          real basisEval32C3#1 = RMul(coeff327B,prod3267);
          real basisEval32C4#1 = RMul(coeff3238,prod326D);
          real basisEval32C5#1 = RMul(coeff3254,prod326F);
          real basisEval32C6#1 = RMul(coeff3218,prod3271);
          real basisEval32C7#3 = RMul(coeff3218,prod3277);
          real basisEval32C8#1 = RMul(coeff3225,prod3279);
          real basisEval32C9#2 = RMul(coeff3218,prod327D);
          real basisEval32CA#3 = RMul(one3219,prod3227);
          real basisEval32CB#1 = RMul(coeff3286,prod322E);
          real basisEval32CC#3 = RMul(one3219,prod323A);
          real basisEval32CD#2 = RMul(coeff3225,prod3244);
          real basisEval32CE#2 = RMul(coeff3283,prod324A);
          real basisEval32CF#2 = RMul(coeff3283,prod324E);
          real basisEval32D0#3 = RMul(coeff3218,prod3252);
          real basisEval32D1#3 = RMul(one3219,prod3256);
          real basisEval32D2#1 = RMul(coeff3298,prod325D);
          real basisEval32D3#1 = RMul(coeff329C,prod3260);
          real basisEval32D4#1 = RMul(coeff3298,prod3263);
          real basisEval32D5#2 = RMul(coeff3286,prod3269);
          real basisEval32D6#2 = RMul(coeff3286,prod326F);
          real basisEval32D7#1 = RMul(coeff3286,prod3273);
          real basisEval32D8#3 = RMul(coeff3218,prod3279);
          real basisEval32D9#3 = RMul(one3219,prod327D);
          real basisEval32DA#1 = RMul(coeff3225,prod321F);
          real basisEval32DB#1 = RMul(coeff3238,prod322B);
          real basisEval32DC#1 = RMul(coeff3254,prod323E);
          real basisEval32DD#1 = RMul(coeff3238,prod3241);
          real basisEval32DE#1 = RMul(coeff3238,prod324A);
          real basisEval32DF#1 = RMul(coeff327B,prod325A);
          real basisEval32E0#1 = RMul(coeff3254,prod325D);
          real basisEval32E1#1 = RMul(coeff3225,prod3263);
          real basisEval32E2#1 = RMul(coeff3254,prod3269);
          real basisEval32E3#1 = RMul(coeff3238,prod326B);
          real basisEval32E4#1 = RMul(coeff3218,prod3275);
          real basisEval32E5#1 = RMul(coeff3225,prod3277);
          tensor[84] intermediateCons32E6#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3228,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval322F,basisEval3233,basisEval3235,basisEval3237,basisEval323B,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval3242,basisEval3245,basisEval3249,basisEval324B,basisEval324D,basisEval324F,basisEval3251,basisEval3253,basisEval3257,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval325E,basisEval3261,basisEval3264,basisEval3268,basisEval326A,basisEval326C,basisEval326E,basisEval3270,basisEval3272,basisEval3274,basisEval3276,basisEval3278,basisEval327A,basisEval327E];
          tensor[84] intermediateCons32E7#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3280,basisEval3224,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3282,basisEval322F,basisEval3284,basisEval3217,basisEval3285,basisEval3287,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3289,basisEval3242,basisEval328A,basisEval328B,basisEval3217,basisEval328C,basisEval328D,basisEval324F,basisEval3217,basisEval328E,basisEval328F,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3291,basisEval325E,basisEval3292,basisEval3293,basisEval3295,basisEval3217,basisEval3296,basisEval3297,basisEval326E,basisEval3299,basisEval3217,basisEval329A,basisEval329B,basisEval329D,basisEval3217,basisEval329E,basisEval329F,basisEval3217,basisEval32A0,basisEval3217];
          tensor[84] intermediateCons32E8#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32A1,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval322F,basisEval32A3,basisEval3217,basisEval32A4,basisEval32A5,basisEval3217,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32A7,basisEval3245,basisEval32A8,basisEval3217,basisEval324B,basisEval328D,basisEval32A9,basisEval3217,basisEval32AA,basisEval32AB,basisEval3217,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32AD,basisEval3292,basisEval3264,basisEval32AE,basisEval3217,basisEval32AF,basisEval326C,basisEval32B0,basisEval32B1,basisEval3217,basisEval32B2,basisEval329B,basisEval32B3,basisEval3217,basisEval32B4,basisEval32B5,basisEval3217,basisEval32A0,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32E9#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval32B6,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval322C,basisEval32B7,basisEval32B8,basisEval3217,basisEval3217,basisEval3285,basisEval3237,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval323F,basisEval32BA,basisEval32BB,basisEval32BC,basisEval3217,basisEval3217,basisEval328C,basisEval324D,basisEval32BD,basisEval3217,basisEval3217,basisEval32BE,basisEval328F,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval325B,basisEval32C0,basisEval32C1,basisEval32C2,basisEval32C3,basisEval3217,basisEval3217,basisEval3296,basisEval326C,basisEval32C4,basisEval32C5,basisEval3217,basisEval3217,basisEval32C6,basisEval329B,basisEval3276,basisEval3217,basisEval3217,basisEval32C7,basisEval32C8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EA#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3220,basisEval3224,basisEval3217,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A2,basisEval32CB,basisEval3284,basisEval3217,basisEval3217,basisEval3285,basisEval32A5,basisEval3217,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32A6,basisEval32BA,basisEval32CD,basisEval328B,basisEval3217,basisEval3217,basisEval32CE,basisEval328D,basisEval32CF,basisEval3217,basisEval3217,basisEval32BE,basisEval32D0,basisEval3217,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32AC,basisEval32D2,basisEval32D3,basisEval32D4,basisEval3295,basisEval3217,basisEval3217,basisEval32D5,basisEval326C,basisEval326E,basisEval32D6,basisEval3217,basisEval3217,basisEval329A,basisEval32D7,basisEval32B3,basisEval3217,basisEval3217,basisEval32C7,basisEval32D8,basisEval3217,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          tensor[84] intermediateCons32EB#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval321C,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DA,basisEval3224,basisEval3217,basisEval3217,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DB,basisEval32B7,basisEval3233,basisEval3217,basisEval3217,basisEval3235,basisEval32A5,basisEval3217,basisEval3217,basisEval32B9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DC,basisEval32DD,basisEval32CD,basisEval3249,basisEval3217,basisEval3217,basisEval32DE,basisEval324D,basisEval32A9,basisEval3217,basisEval3217,basisEval32AA,basisEval32D0,basisEval3217,basisEval3217,basisEval32BF,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval32DF,basisEval32E0,basisEval32C1,basisEval32E1,basisEval3268,basisEval3217,basisEval3217,basisEval32E2,basisEval32E3,basisEval326E,basisEval32B1,basisEval3217,basisEval3217,basisEval3272,basisEval329B,basisEval32E4,basisEval3217,basisEval3217,basisEval32E5,basisEval32D8,basisEval3217,basisEval3217,basisEval32C9,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217];
          real vdot33CF#1 = VDot<84>(dofs30C0,intermediateCons32E6);
          real vdot33D1#2 = VDot<84>(dofs30C0,intermediateCons32E7);
          real vdot33D3#2 = VDot<84>(dofs30C0,intermediateCons32E8);
          real vdot33D8#1 = VDot<84>(dofs30C0,intermediateCons32E9);
          real vdot33DA#2 = VDot<84>(dofs30C0,intermediateCons32EA);
          real vdot33E1#1 = VDot<84>(dofs30C0,intermediateCons32EB);
          tensor[3,3] _t33CD#1 = <tensor[3,3]>[vdot33CF,vdot33D1,vdot33D3,vdot33D1,vdot33D8,vdot33DA,vdot33D3,vdot33DA,vdot33E1];
          (real[3] evals33FA#2,tensor[3][3] E33FB#2) = EigenVecs3x3(_t33CD);
          tensor[3] _t33FF#6 = Subscript<tensor[3][3]>(E33FB,ilit2D78);
          real _t3401#9 = Subscript<real[3]>(evals33FA,ilit2D78);
          tensor[3] _t3405#6 = Subscript<tensor[3][3]>(E33FB,ilit2D75);
          real _t3407#9 = Subscript<real[3]>(evals33FA,ilit2D75);
          real r340A#1 = TensorIndex<tensor[3],[0]>(_t33FF);
          tensor[3] binopV340B#3 = VScale<3>(r340A,_t33FF);
          real r340C#1 = TensorIndex<tensor[3],[1]>(_t33FF);
          tensor[3] binopV340D#3 = VScale<3>(r340C,_t33FF);
          real r340E#1 = TensorIndex<tensor[3],[2]>(_t33FF);
          tensor[3] binopV340F#3 = VScale<3>(r340E,_t33FF);
          real r3419#1 = TensorIndex<tensor[3],[0]>(_t3405);
          tensor[3] binopV341A#3 = VScale<3>(r3419,_t3405);
          real r341B#1 = TensorIndex<tensor[3],[1]>(_t3405);
          tensor[3] binopV341C#3 = VScale<3>(r341B,_t3405);
          real r341D#1 = TensorIndex<tensor[3],[2]>(_t3405);
          tensor[3] binopV341E#3 = VScale<3>(r341D,_t3405);
          real r3428#1 = VIndex<3,0>(binopV340B);
          real r3429#1 = RDiv(r3428,_t3401);
          real r342A#1 = VIndex<3,1>(binopV340B);
          real r342B#1 = RDiv(r342A,_t3401);
          real r342C#1 = VIndex<3,2>(binopV340B);
          real r342D#1 = RDiv(r342C,_t3401);
          tensor[3] tensor342E#1 = <tensor[3]>[r3429,r342B,r342D];
          real r342F#1 = VIndex<3,0>(binopV340D);
          real r3430#1 = RDiv(r342F,_t3401);
          real r3431#1 = VIndex<3,1>(binopV340D);
          real r3432#1 = RDiv(r3431,_t3401);
          real r3433#1 = VIndex<3,2>(binopV340D);
          real r3434#1 = RDiv(r3433,_t3401);
          tensor[3] tensor3435#1 = <tensor[3]>[r3430,r3432,r3434];
          real r3436#1 = VIndex<3,0>(binopV340F);
          real r3437#1 = RDiv(r3436,_t3401);
          real r3438#1 = VIndex<3,1>(binopV340F);
          real r3439#1 = RDiv(r3438,_t3401);
          real r343A#1 = VIndex<3,2>(binopV340F);
          real r343B#1 = RDiv(r343A,_t3401);
          tensor[3] tensor343C#1 = <tensor[3]>[r3437,r3439,r343B];
          real r3455#1 = VIndex<3,0>(binopV341A);
          real r3456#1 = RDiv(r3455,_t3407);
          real r3457#1 = VIndex<3,1>(binopV341A);
          real r3458#1 = RDiv(r3457,_t3407);
          real r3459#1 = VIndex<3,2>(binopV341A);
          real r345A#1 = RDiv(r3459,_t3407);
          tensor[3] tensor345B#1 = <tensor[3]>[r3456,r3458,r345A];
          real r345C#1 = VIndex<3,0>(binopV341C);
          real r345D#1 = RDiv(r345C,_t3407);
          real r345E#1 = VIndex<3,1>(binopV341C);
          real r345F#1 = RDiv(r345E,_t3407);
          real r3460#1 = VIndex<3,2>(binopV341C);
          real r3461#1 = RDiv(r3460,_t3407);
          tensor[3] tensor3462#1 = <tensor[3]>[r345D,r345F,r3461];
          real r3463#1 = VIndex<3,0>(binopV341E);
          real r3464#1 = RDiv(r3463,_t3407);
          real r3465#1 = VIndex<3,1>(binopV341E);
          real r3466#1 = RDiv(r3465,_t3407);
          real r3467#1 = VIndex<3,2>(binopV341E);
          real r3468#1 = RDiv(r3467,_t3407);
          tensor[3] tensor3469#1 = <tensor[3]>[r3464,r3466,r3468];
          tensor[3] v3484#1 = VAdd<3>(tensor342E,tensor345B);
          tensor[3] v3487#1 = VAdd<3>(tensor3435,tensor3462);
          tensor[3] v348A#1 = VAdd<3>(tensor343C,tensor3469);
          real basisEval34B1#1 = RMul(one3219,prod322E);
          real basisEval34C4#1 = RMul(one3219,prod3241);
          real basisEval34C7#1 = RMul(one3219,prod3244);
          real basisEval34CF#3 = RMul(coeff3218,prod324C);
          real basisEval34E0#1 = RMul(one3219,prod325D);
          real basisEval34E3#1 = RMul(one3219,prod3260);
          real basisEval34E6#1 = RMul(one3219,prod3263);
          real basisEval34EE#2 = RMul(coeff3218,prod326B);
          real basisEval34F0#2 = RMul(coeff3218,prod326D);
          real basisEval34F6#1 = RMul(coeff3283,prod3273);
          real prod53501#1 = RMul(prod43258,varAcc3216);
          real prod3502#1 = RMul(one3219,prod53501);
          real prod3503#2 = RMul(one3219,prod3502);
          real basisEval3504#2 = RMul(one3219,prod3503);
          real prod3505#1 = RMul(varAcc3215,prod43258);
          real prod3506#3 = RMul(one3219,prod3505);
          real basisEval3507#1 = RMul(one3219,prod3506);
          real prod3508#1 = RMul(prod23230,prod3323C);
          real prod3509#3 = RMul(one3219,prod3508);
          real basisEval350A#1 = RMul(one3219,prod3509);
          real prod350B#1 = RMul(prod33246,prod23229);
          real prod350C#3 = RMul(one3219,prod350B);
          real basisEval350D#1 = RMul(one3219,prod350C);
          real prod350E#1 = RMul(prod43265,varAcc3216);
          real prod350F#3 = RMul(one3219,prod350E);
          real basisEval3510#1 = RMul(one3219,prod350F);
          real prod53511#1 = RMul(prod43265,varAcc3215);
          real prod3512#1 = RMul(prod53511,one3219);
          real prod3513#2 = RMul(one3219,prod3512);
          real basisEval3514#2 = RMul(one3219,prod3513);
          real prod3515#3 = RMul(varAcc3214,prod3259);
          real basisEval3516#1 = RMul(coeff3218,prod3515);
          real prod3517#2 = RMul(varAcc3214,prod325C);
          real basisEval3518#2 = RMul(coeff3218,prod3517);
          real prod3519#2 = RMul(varAcc3214,prod325F);
          real basisEval351A#1 = RMul(coeff3218,prod3519);
          real prod351B#2 = RMul(varAcc3214,prod3262);
          real basisEval351C#2 = RMul(coeff3218,prod351B);
          real prod351D#3 = RMul(varAcc3214,prod3266);
          real basisEval351E#1 = RMul(coeff3218,prod351D);
          real prod351F#3 = RMul(prod23239,prod323D);
          real basisEval3520#1 = RMul(coeff3283,prod351F);
          real prod3521#2 = RMul(prod23239,prod3240);
          real basisEval3522#2 = RMul(coeff3283,prod3521);
          real prod3523#2 = RMul(prod23239,prod3243);
          real basisEval3524#2 = RMul(coeff3283,prod3523);
          real prod3525#3 = RMul(prod23239,prod3247);
          real basisEval3526#1 = RMul(coeff3283,prod3525);
          real prod3527#3 = RMul(prod33255,prod322A);
          real basisEval3528#1 = RMul(coeff3286,prod3527);
          real prod3529#2 = RMul(prod33255,prod322D);
          real basisEval352A#1 = RMul(coeff3286,prod3529);
          real prod352B#3 = RMul(prod33255,prod3231);
          real basisEval352C#1 = RMul(coeff3286,prod352B);
          real prod352D#3 = RMul(prod4327C,prod321E);
          real basisEval352E#1 = RMul(coeff3294,prod352D);
          real prod352F#3 = RMul(prod4327C,prod3222);
          real basisEval3530#1 = RMul(coeff3294,prod352F);
          real prod53532#1 = RMul(prod4327C,varAcc3214);
          real prod3533#2 = RMul(prod53532,prod321A);
          real basisEval3534#1 = RMul(coeff3225,prod3533);
          real basisEval3539#1 = RMul(one3219,prod3234);
          real basisEval353E#1 = RMul(one3219,prod324A);
          real basisEval3540#1 = RMul(one3219,prod3250);
          real basisEval3547#1 = RMul(one3219,prod3269);
          real basisEval3548#1 = RMul(coeff3283,prod326D);
          real basisEval354A#1 = RMul(one3219,prod3271);
          real basisEval354B#2 = RMul(coeff3218,prod3273);
          real basisEval354C#1 = RMul(one3219,prod3277);
          real basisEval354F#1 = RMul(coeff3218,prod3506);
          real basisEval3550#1 = RMul(coeff3283,prod3509);
          real basisEval3551#1 = RMul(coeff3286,prod350C);
          real basisEval3552#1 = RMul(coeff3294,prod350F);
          real basisEval3553#1 = RMul(coeff3225,prod3513);
          real basisEval3554#1 = RMul(one3219,prod3515);
          real basisEval3555#2 = RMul(coeff3283,prod3519);
          real basisEval3556#1 = RMul(coeff3286,prod351B);
          real basisEval3557#1 = RMul(coeff3294,prod351D);
          real basisEval3558#1 = RMul(one3219,prod351F);
          real basisEval3559#1 = RMul(coeff3218,prod3521);
          real basisEval355A#1 = RMul(coeff3286,prod3525);
          real basisEval355B#1 = RMul(one3219,prod3527);
          real basisEval355C#2 = RMul(coeff3218,prod3529);
          real basisEval355D#1 = RMul(coeff3283,prod352B);
          real basisEval355E#1 = RMul(one3219,prod352D);
          real basisEval355F#1 = RMul(coeff3218,prod352F);
          real basisEval3560#2 = RMul(one3219,prod3533);
          real basisEval3563#1 = RMul(one3219,prod3236);
          real basisEval3568#1 = RMul(one3219,prod324E);
          real basisEval356A#1 = RMul(one3219,prod3252);
          real basisEval356F#1 = RMul(coeff3283,prod326B);
          real basisEval3570#1 = RMul(one3219,prod326F);
          real basisEval3571#1 = RMul(one3219,prod3275);
          real basisEval3573#1 = RMul(one3219,prod3279);
          real basisEval3574#1 = RMul(coeff3225,prod3503);
          real basisEval3575#1 = RMul(coeff3294,prod3506);
          real basisEval3576#1 = RMul(coeff3286,prod3509);
          real basisEval3577#1 = RMul(coeff3283,prod350C);
          real basisEval3578#1 = RMul(coeff3218,prod350F);
          real basisEval3579#1 = RMul(coeff3294,prod3515);
          real basisEval357A#1 = RMul(coeff3286,prod3517);
          real basisEval357B#1 = RMul(one3219,prod351D);
          real basisEval357C#1 = RMul(coeff3286,prod351F);
          real basisEval357D#1 = RMul(coeff3218,prod3523);
          real basisEval357E#1 = RMul(one3219,prod3525);
          real basisEval357F#1 = RMul(coeff3283,prod3527);
          real basisEval3580#1 = RMul(one3219,prod352B);
          real basisEval3581#1 = RMul(coeff3218,prod352D);
          real basisEval3582#1 = RMul(one3219,prod352F);
          tensor[84] intermediateCons3583#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3217,basisEval3280,basisEval32A1,basisEval3281,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3282,basisEval34B1,basisEval32A3,basisEval3285,basisEval32A5,basisEval3288,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3289,basisEval34C4,basisEval34C7,basisEval32A8,basisEval328C,basisEval34CF,basisEval32A9,basisEval328E,basisEval32AB,basisEval3290,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3291,basisEval34E0,basisEval34E3,basisEval34E6,basisEval32AE,basisEval3296,basisEval34EE,basisEval34F0,basisEval32B1,basisEval329A,basisEval34F6,basisEval32B3,basisEval329E,basisEval32B5,basisEval32A0,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3217,basisEval3504,basisEval3507,basisEval350A,basisEval350D,basisEval3510,basisEval3514,basisEval3516,basisEval3518,basisEval351A,basisEval351C,basisEval351E,basisEval3520,basisEval3522,basisEval3524,basisEval3526,basisEval3528,basisEval352A,basisEval352C,basisEval352E,basisEval3530,basisEval3534];
          tensor[84] intermediateCons3584#1 = <tensor[84]>[basisEval3217,basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3280,basisEval3224,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval3282,basisEval322F,basisEval3284,basisEval3217,basisEval3539,basisEval32A5,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval3289,basisEval3242,basisEval328A,basisEval328B,basisEval3217,basisEval353E,basisEval34CF,basisEval32CF,basisEval3217,basisEval3540,basisEval32D0,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval3291,basisEval325E,basisEval3292,basisEval3293,basisEval3295,basisEval3217,basisEval3547,basisEval34EE,basisEval3548,basisEval32D6,basisEval3217,basisEval354A,basisEval354B,basisEval32B3,basisEval3217,basisEval354C,basisEval32D8,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3504,basisEval354F,basisEval3550,basisEval3551,basisEval3552,basisEval3553,basisEval3217,basisEval3554,basisEval3518,basisEval3555,basisEval3556,basisEval3557,basisEval3217,basisEval3558,basisEval3559,basisEval3524,basisEval355A,basisEval3217,basisEval355B,basisEval355C,basisEval355D,basisEval3217,basisEval355E,basisEval355F,basisEval3217,basisEval3560,basisEval3217];
          tensor[84] intermediateCons3585#1 = <tensor[84]>[basisEval3217,basisEval327F,basisEval3217,basisEval3217,basisEval3220,basisEval32A1,basisEval3217,basisEval32CA,basisEval3217,basisEval3217,basisEval32A2,basisEval322F,basisEval32A3,basisEval3217,basisEval3285,basisEval3563,basisEval3217,basisEval32CC,basisEval3217,basisEval3217,basisEval32A6,basisEval32A7,basisEval3245,basisEval32A8,basisEval3217,basisEval32CE,basisEval34CF,basisEval3568,basisEval3217,basisEval32BE,basisEval356A,basisEval3217,basisEval32D1,basisEval3217,basisEval3217,basisEval32AC,basisEval32AD,basisEval3292,basisEval3264,basisEval32AE,basisEval3217,basisEval32D5,basisEval356F,basisEval34F0,basisEval3570,basisEval3217,basisEval329A,basisEval354B,basisEval3571,basisEval3217,basisEval32C7,basisEval3573,basisEval3217,basisEval32D9,basisEval3217,basisEval3217,basisEval3574,basisEval3575,basisEval3576,basisEval3577,basisEval3578,basisEval3514,basisEval3217,basisEval3579,basisEval357A,basisEval3555,basisEval351C,basisEval357B,basisEval3217,basisEval357C,basisEval3522,basisEval357D,basisEval357E,basisEval3217,basisEval357F,basisEval355C,basisEval3580,basisEval3217,basisEval3581,basisEval3582,basisEval3217,basisEval3560,basisEval3217,basisEval3217];
          real vdot367A#1 = VDot<84>(dofs30C0,intermediateCons3583);
          real vdot367C#1 = VDot<84>(dofs30C0,intermediateCons3584);
          real vdot367E#1 = VDot<84>(dofs30C0,intermediateCons3585);
          tensor[3] probe_l_153678#3 = <tensor[3]>[vdot367A,vdot367C,vdot367E];
          tensor[3] negV3689#1 = VNeg<3>(v3484);
          tensor[3] negV368B#1 = VNeg<3>(v3487);
          tensor[3] negV368D#1 = VNeg<3>(v348A);
          real vdot3698#1 = VDot<3>(negV3689,probe_l_153678);
          real vdot369A#1 = VDot<3>(negV368B,probe_l_153678);
          real vdot369C#1 = VDot<3>(negV368D,probe_l_153678);
          tensor[3] _t3696#1 = <tensor[3]>[vdot3698,vdot369A,vdot369C];
          goto JOIN36A7
        JOIN36A7:  preds = [ASSIGN36A4,ASSIGN46AB]
          tensor[3] step36A5#5 = phi(_t3696,_t36A6)
          real _t36A8#7 = 0.e0;
          real _t36AA#143 = 0.1e1;
          real _t36AC#1 = 0.15e1;
          real op1_e3_l_736AE#1 = VDot<3>(step36A5,step36A5);
          real op1_e3_l_836B1#3 = Sqrt(op1_e3_l_736AE);
          real op1_e3_l_936B4#1 = Abs<real>(op1_e3_l_836B1);
          real op1_e3_l_1036B7#1 = RDiv(op1_e3_l_936B4,thick247E);
          real op1_e3_l_1136BA#1 = RSub(_t36AA,op1_e3_l_1036B7);
          real op1_e3_l_1236BD#1 = RMul(_t36AC,op1_e3_l_1136BA);
          real op1_e3_l_1336C0#1 = RClamp(_t36A8,_t36AA,op1_e3_l_1236BD);
          real _t36C3#2 = RMul(maxAlpha2486,op1_e3_l_1336C0);
          bool _t36C6#1 = EQ<real>(_t36C3,_t36A8);
          if _t36C6 then goto SAVE36C9 else goto JOIN36CB
        SAVE36C9:  preds = [COND36C8]
          self.rayN = rayN24AC;
          active
          goto JOIN36CB
        JOIN36CB:  preds = [*ACTIVE36CA,COND36C8]
          real _t36D2#1 = RSub(_t36AA,_t36C3);
          real _t36D5#1 = MathFn<pow>(_t36D2,alphaFix249C);
          bool _t36D7#1 = NEQ<real>(phKs24A4,_t36A8);
          if _t36D7 then goto ASSIGN36DC else goto JOIN36FF
        ASSIGN36DC:  preds = [COND36D9]
          tensor[3] op1_e3_l_636DA#3 = VAdd<3>(eyeDir249E,litwsp2494);
          real op1_e3_l_836DD#1 = VDot<3>(op1_e3_l_636DA,op1_e3_l_636DA);
          real op1_e3_l_936E0#1 = Sqrt(op1_e3_l_836DD);
          real op1_e3_l_1236E3#1 = RDiv(_t36AA,op1_e3_l_836B1);
          tensor[3] op1_e3_l_1336E8#1 = VScale<3>(op1_e3_l_1236E3,step36A5);
          tensor[3] op1_e3_l_1436EB#1 = VNeg<3>(op1_e3_l_1336E8);
          real op1_e3_l_1636EE#1 = RDiv(_t36AA,op1_e3_l_936E0);
          real op1_e3_l_1736F3#1 = VDot<3>(op1_e3_l_1436EB,op1_e3_l_636DA);
          real op1_e3_l_1836F6#1 = RMul(op1_e3_l_1636EE,op1_e3_l_1736F3);
          real _t36F9#1 = Abs<real>(op1_e3_l_1836F6);
          real scomp36FC#1 = MathFn<pow>(_t36F9,phSp24A6);
          goto JOIN36FF
        JOIN36FF:  preds = [ASSIGN36FD,COND36D9]
          real scomp36FE#1 = phi(scomp36FC,_t36A8)
          real cmin3700#3 = VIndex<2,0>(cminmax248C);
          real cmax3702#2 = VIndex<2,1>(cminmax248C);
          tensor[3] mcol3704#1 = <tensor[3]>[_t36AA,_t36AA,_t36AA];
          bool _t3706#1 = NEQ<real>(cmin3700,cmax3702);
          if _t3706 then goto ASSIGN4B32 else goto JOIN3DEC
        ASSIGN4B32:  preds = [COND3708]
          tensor[3] _t3709#3 = VAdd<3>(pos24B8,step36A5);
          int ilit370F#1 = 84;
          int mulRes3710#84 = IMul(_t246C,ilit370F);
          int idx3713#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,mulRes3710);
          int ilit3714#91 = 1;
          int addRes3715#1 = IAdd(mulRes3710,ilit3714);
          int idx3716#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3715);
          int ilit3717#5 = 2;
          int addRes3718#1 = IAdd(mulRes3710,ilit3717);
          int idx3719#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3718);
          int ilit371A#5 = 3;
          int addRes371B#1 = IAdd(mulRes3710,ilit371A);
          int idx371C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371B);
          int ilit371D#1 = 4;
          int addRes371E#1 = IAdd(mulRes3710,ilit371D);
          int idx371F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes371E);
          int ilit3720#1 = 5;
          int addRes3721#1 = IAdd(mulRes3710,ilit3720);
          int idx3722#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3721);
          int ilit3723#1 = 6;
          int addRes3724#1 = IAdd(mulRes3710,ilit3723);
          int idx3725#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3724);
          int ilit3726#1 = 7;
          int addRes3727#1 = IAdd(mulRes3710,ilit3726);
          int idx3728#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3727);
          int ilit3729#1 = 8;
          int addRes372A#1 = IAdd(mulRes3710,ilit3729);
          int idx372B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372A);
          int ilit372C#1 = 9;
          int addRes372D#1 = IAdd(mulRes3710,ilit372C);
          int idx372E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes372D);
          int ilit372F#1 = 10;
          int addRes3730#1 = IAdd(mulRes3710,ilit372F);
          int idx3731#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3730);
          int ilit3732#1 = 11;
          int addRes3733#1 = IAdd(mulRes3710,ilit3732);
          int idx3734#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3733);
          int ilit3735#1 = 12;
          int addRes3736#1 = IAdd(mulRes3710,ilit3735);
          int idx3737#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3736);
          int ilit3738#1 = 13;
          int addRes3739#1 = IAdd(mulRes3710,ilit3738);
          int idx373A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3739);
          int ilit373B#1 = 14;
          int addRes373C#1 = IAdd(mulRes3710,ilit373B);
          int idx373D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373C);
          int ilit373E#1 = 15;
          int addRes373F#1 = IAdd(mulRes3710,ilit373E);
          int idx3740#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes373F);
          int ilit3741#1 = 16;
          int addRes3742#1 = IAdd(mulRes3710,ilit3741);
          int idx3743#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3742);
          int ilit3744#1 = 17;
          int addRes3745#1 = IAdd(mulRes3710,ilit3744);
          int idx3746#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3745);
          int ilit3747#1 = 18;
          int addRes3748#1 = IAdd(mulRes3710,ilit3747);
          int idx3749#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3748);
          int ilit374A#1 = 19;
          int addRes374B#1 = IAdd(mulRes3710,ilit374A);
          int idx374C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374B);
          int ilit374D#1 = 20;
          int addRes374E#1 = IAdd(mulRes3710,ilit374D);
          int idx374F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes374E);
          int ilit3750#1 = 21;
          int addRes3751#1 = IAdd(mulRes3710,ilit3750);
          int idx3752#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3751);
          int ilit3753#1 = 22;
          int addRes3754#1 = IAdd(mulRes3710,ilit3753);
          int idx3755#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3754);
          int ilit3756#1 = 23;
          int addRes3757#1 = IAdd(mulRes3710,ilit3756);
          int idx3758#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3757);
          int ilit3759#1 = 24;
          int addRes375A#1 = IAdd(mulRes3710,ilit3759);
          int idx375B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375A);
          int ilit375C#1 = 25;
          int addRes375D#1 = IAdd(mulRes3710,ilit375C);
          int idx375E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes375D);
          int ilit375F#1 = 26;
          int addRes3760#1 = IAdd(mulRes3710,ilit375F);
          int idx3761#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3760);
          int ilit3762#1 = 27;
          int addRes3763#1 = IAdd(mulRes3710,ilit3762);
          int idx3764#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3763);
          int ilit3765#1 = 28;
          int addRes3766#1 = IAdd(mulRes3710,ilit3765);
          int idx3767#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3766);
          int ilit3768#1 = 29;
          int addRes3769#1 = IAdd(mulRes3710,ilit3768);
          int idx376A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3769);
          int ilit376B#1 = 30;
          int addRes376C#1 = IAdd(mulRes3710,ilit376B);
          int idx376D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376C);
          int ilit376E#1 = 31;
          int addRes376F#1 = IAdd(mulRes3710,ilit376E);
          int idx3770#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes376F);
          int ilit3771#1 = 32;
          int addRes3772#1 = IAdd(mulRes3710,ilit3771);
          int idx3773#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3772);
          int ilit3774#1 = 33;
          int addRes3775#1 = IAdd(mulRes3710,ilit3774);
          int idx3776#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3775);
          int ilit3777#1 = 34;
          int addRes3778#1 = IAdd(mulRes3710,ilit3777);
          int idx3779#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3778);
          int ilit377A#1 = 35;
          int addRes377B#1 = IAdd(mulRes3710,ilit377A);
          int idx377C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377B);
          int ilit377D#1 = 36;
          int addRes377E#1 = IAdd(mulRes3710,ilit377D);
          int idx377F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes377E);
          int ilit3780#1 = 37;
          int addRes3781#1 = IAdd(mulRes3710,ilit3780);
          int idx3782#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3781);
          int ilit3783#1 = 38;
          int addRes3784#1 = IAdd(mulRes3710,ilit3783);
          int idx3785#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3784);
          int ilit3786#1 = 39;
          int addRes3787#1 = IAdd(mulRes3710,ilit3786);
          int idx3788#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3787);
          int ilit3789#1 = 40;
          int addRes378A#1 = IAdd(mulRes3710,ilit3789);
          int idx378B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378A);
          int ilit378C#1 = 41;
          int addRes378D#1 = IAdd(mulRes3710,ilit378C);
          int idx378E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes378D);
          int ilit378F#1 = 42;
          int addRes3790#1 = IAdd(mulRes3710,ilit378F);
          int idx3791#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3790);
          int ilit3792#1 = 43;
          int addRes3793#1 = IAdd(mulRes3710,ilit3792);
          int idx3794#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3793);
          int ilit3795#1 = 44;
          int addRes3796#1 = IAdd(mulRes3710,ilit3795);
          int idx3797#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3796);
          int ilit3798#1 = 45;
          int addRes3799#1 = IAdd(mulRes3710,ilit3798);
          int idx379A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3799);
          int ilit379B#1 = 46;
          int addRes379C#1 = IAdd(mulRes3710,ilit379B);
          int idx379D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379C);
          int ilit379E#1 = 47;
          int addRes379F#1 = IAdd(mulRes3710,ilit379E);
          int idx37A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes379F);
          int ilit37A1#1 = 48;
          int addRes37A2#1 = IAdd(mulRes3710,ilit37A1);
          int idx37A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A2);
          int ilit37A4#1 = 49;
          int addRes37A5#1 = IAdd(mulRes3710,ilit37A4);
          int idx37A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A5);
          int ilit37A7#1 = 50;
          int addRes37A8#1 = IAdd(mulRes3710,ilit37A7);
          int idx37A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37A8);
          int ilit37AA#1 = 51;
          int addRes37AB#1 = IAdd(mulRes3710,ilit37AA);
          int idx37AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AB);
          int ilit37AD#1 = 52;
          int addRes37AE#1 = IAdd(mulRes3710,ilit37AD);
          int idx37AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37AE);
          int ilit37B0#1 = 53;
          int addRes37B1#1 = IAdd(mulRes3710,ilit37B0);
          int idx37B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B1);
          int ilit37B3#1 = 54;
          int addRes37B4#1 = IAdd(mulRes3710,ilit37B3);
          int idx37B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B4);
          int ilit37B6#1 = 55;
          int addRes37B7#1 = IAdd(mulRes3710,ilit37B6);
          int idx37B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37B7);
          int ilit37B9#1 = 56;
          int addRes37BA#1 = IAdd(mulRes3710,ilit37B9);
          int idx37BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BA);
          int ilit37BC#1 = 57;
          int addRes37BD#1 = IAdd(mulRes3710,ilit37BC);
          int idx37BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37BD);
          int ilit37BF#1 = 58;
          int addRes37C0#1 = IAdd(mulRes3710,ilit37BF);
          int idx37C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C0);
          int ilit37C2#1 = 59;
          int addRes37C3#1 = IAdd(mulRes3710,ilit37C2);
          int idx37C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C3);
          int ilit37C5#1 = 60;
          int addRes37C6#1 = IAdd(mulRes3710,ilit37C5);
          int idx37C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C6);
          int ilit37C8#1 = 61;
          int addRes37C9#1 = IAdd(mulRes3710,ilit37C8);
          int idx37CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37C9);
          int ilit37CB#1 = 62;
          int addRes37CC#1 = IAdd(mulRes3710,ilit37CB);
          int idx37CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CC);
          int ilit37CE#1 = 63;
          int addRes37CF#1 = IAdd(mulRes3710,ilit37CE);
          int idx37D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37CF);
          int ilit37D1#1 = 64;
          int addRes37D2#1 = IAdd(mulRes3710,ilit37D1);
          int idx37D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D2);
          int ilit37D4#1 = 65;
          int addRes37D5#1 = IAdd(mulRes3710,ilit37D4);
          int idx37D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D5);
          int ilit37D7#1 = 66;
          int addRes37D8#1 = IAdd(mulRes3710,ilit37D7);
          int idx37D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37D8);
          int ilit37DA#1 = 67;
          int addRes37DB#1 = IAdd(mulRes3710,ilit37DA);
          int idx37DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DB);
          int ilit37DD#1 = 68;
          int addRes37DE#1 = IAdd(mulRes3710,ilit37DD);
          int idx37DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37DE);
          int ilit37E0#1 = 69;
          int addRes37E1#1 = IAdd(mulRes3710,ilit37E0);
          int idx37E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E1);
          int ilit37E3#1 = 70;
          int addRes37E4#1 = IAdd(mulRes3710,ilit37E3);
          int idx37E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E4);
          int ilit37E6#1 = 71;
          int addRes37E7#1 = IAdd(mulRes3710,ilit37E6);
          int idx37E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37E7);
          int ilit37E9#1 = 72;
          int addRes37EA#1 = IAdd(mulRes3710,ilit37E9);
          int idx37EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37EA);
          int ilit37EC#1 = 73;
          int addRes37ED#1 = IAdd(mulRes3710,ilit37EC);
          int idx37EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37ED);
          int ilit37EF#1 = 74;
          int addRes37F0#1 = IAdd(mulRes3710,ilit37EF);
          int idx37F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F0);
          int ilit37F2#1 = 75;
          int addRes37F3#1 = IAdd(mulRes3710,ilit37F2);
          int idx37F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F3);
          int ilit37F5#1 = 76;
          int addRes37F6#1 = IAdd(mulRes3710,ilit37F5);
          int idx37F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F6);
          int ilit37F8#1 = 77;
          int addRes37F9#1 = IAdd(mulRes3710,ilit37F8);
          int idx37FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37F9);
          int ilit37FB#1 = 78;
          int addRes37FC#1 = IAdd(mulRes3710,ilit37FB);
          int idx37FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FC);
          int ilit37FE#1 = 79;
          int addRes37FF#1 = IAdd(mulRes3710,ilit37FE);
          int idx3800#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes37FF);
          int ilit3801#1 = 80;
          int addRes3802#1 = IAdd(mulRes3710,ilit3801);
          int idx3803#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3802);
          int ilit3804#1 = 81;
          int addRes3805#1 = IAdd(mulRes3710,ilit3804);
          int idx3806#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3805);
          int ilit3807#1 = 82;
          int addRes3808#1 = IAdd(mulRes3710,ilit3807);
          int idx3809#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes3808);
          int ilit380A#1 = 83;
          int addRes380B#1 = IAdd(mulRes3710,ilit380A);
          int idx380C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t246E,addRes380B);
          int mulRes3912#1 = IMul(ilit3714,idx3713);
          int mulRes3914#1 = IMul(ilit3714,idx3716);
          int mulRes3917#1 = IMul(ilit3714,idx3719);
          int mulRes391A#1 = IMul(ilit3714,idx371C);
          int mulRes391D#1 = IMul(ilit3714,idx371F);
          int mulRes3920#1 = IMul(ilit3714,idx3722);
          int mulRes3923#1 = IMul(ilit3714,idx3725);
          int mulRes3926#1 = IMul(ilit3714,idx3728);
          int mulRes3929#1 = IMul(ilit3714,idx372B);
          int mulRes392C#1 = IMul(ilit3714,idx372E);
          int mulRes392F#1 = IMul(ilit3714,idx3731);
          int mulRes3932#1 = IMul(ilit3714,idx3734);
          int mulRes3935#1 = IMul(ilit3714,idx3737);
          int mulRes3938#1 = IMul(ilit3714,idx373A);
          int mulRes393B#1 = IMul(ilit3714,idx373D);
          int mulRes393E#1 = IMul(ilit3714,idx3740);
          int mulRes3941#1 = IMul(ilit3714,idx3743);
          int mulRes3944#1 = IMul(ilit3714,idx3746);
          int mulRes3947#1 = IMul(ilit3714,idx3749);
          int mulRes394A#1 = IMul(ilit3714,idx374C);
          int mulRes394D#1 = IMul(ilit3714,idx374F);
          int mulRes3950#1 = IMul(ilit3714,idx3752);
          int mulRes3953#1 = IMul(ilit3714,idx3755);
          int mulRes3956#1 = IMul(ilit3714,idx3758);
          int mulRes3959#1 = IMul(ilit3714,idx375B);
          int mulRes395C#1 = IMul(ilit3714,idx375E);
          int mulRes395F#1 = IMul(ilit3714,idx3761);
          int mulRes3962#1 = IMul(ilit3714,idx3764);
          int mulRes3965#1 = IMul(ilit3714,idx3767);
          int mulRes3968#1 = IMul(ilit3714,idx376A);
          int mulRes396B#1 = IMul(ilit3714,idx376D);
          int mulRes396E#1 = IMul(ilit3714,idx3770);
          int mulRes3971#1 = IMul(ilit3714,idx3773);
          int mulRes3974#1 = IMul(ilit3714,idx3776);
          int mulRes3977#1 = IMul(ilit3714,idx3779);
          int mulRes397A#1 = IMul(ilit3714,idx377C);
          int mulRes397D#1 = IMul(ilit3714,idx377F);
          int mulRes3980#1 = IMul(ilit3714,idx3782);
          int mulRes3983#1 = IMul(ilit3714,idx3785);
          int mulRes3986#1 = IMul(ilit3714,idx3788);
          int mulRes3989#1 = IMul(ilit3714,idx378B);
          int mulRes398C#1 = IMul(ilit3714,idx378E);
          int mulRes398F#1 = IMul(ilit3714,idx3791);
          int mulRes3992#1 = IMul(ilit3714,idx3794);
          int mulRes3995#1 = IMul(ilit3714,idx3797);
          int mulRes3998#1 = IMul(ilit3714,idx379A);
          int mulRes399B#1 = IMul(ilit3714,idx379D);
          int mulRes399E#1 = IMul(ilit3714,idx37A0);
          int mulRes39A1#1 = IMul(ilit3714,idx37A3);
          int mulRes39A4#1 = IMul(ilit3714,idx37A6);
          int mulRes39A7#1 = IMul(ilit3714,idx37A9);
          int mulRes39AA#1 = IMul(ilit3714,idx37AC);
          int mulRes39AD#1 = IMul(ilit3714,idx37AF);
          int mulRes39B0#1 = IMul(ilit3714,idx37B2);
          int mulRes39B3#1 = IMul(ilit3714,idx37B5);
          int mulRes39B6#1 = IMul(ilit3714,idx37B8);
          int mulRes39B9#1 = IMul(ilit3714,idx37BB);
          int mulRes39BC#1 = IMul(ilit3714,idx37BE);
          int mulRes39BF#1 = IMul(ilit3714,idx37C1);
          int mulRes39C2#1 = IMul(ilit3714,idx37C4);
          int mulRes39C5#1 = IMul(ilit3714,idx37C7);
          int mulRes39C8#1 = IMul(ilit3714,idx37CA);
          int mulRes39CB#1 = IMul(ilit3714,idx37CD);
          int mulRes39CE#1 = IMul(ilit3714,idx37D0);
          int mulRes39D1#1 = IMul(ilit3714,idx37D3);
          int mulRes39D4#1 = IMul(ilit3714,idx37D6);
          int mulRes39D7#1 = IMul(ilit3714,idx37D9);
          int mulRes39DA#1 = IMul(ilit3714,idx37DC);
          int mulRes39DD#1 = IMul(ilit3714,idx37DF);
          int mulRes39E0#1 = IMul(ilit3714,idx37E2);
          int mulRes39E3#1 = IMul(ilit3714,idx37E5);
          int mulRes39E6#1 = IMul(ilit3714,idx37E8);
          int mulRes39E9#1 = IMul(ilit3714,idx37EB);
          int mulRes39EC#1 = IMul(ilit3714,idx37EE);
          int mulRes39EF#1 = IMul(ilit3714,idx37F1);
          int mulRes39F2#1 = IMul(ilit3714,idx37F4);
          int mulRes39F5#1 = IMul(ilit3714,idx37F7);
          int mulRes39F8#1 = IMul(ilit3714,idx37FA);
          int mulRes39FB#1 = IMul(ilit3714,idx37FD);
          int mulRes39FE#1 = IMul(ilit3714,idx3800);
          int mulRes3A01#1 = IMul(ilit3714,idx3803);
          int mulRes3A04#1 = IMul(ilit3714,idx3806);
          int mulRes3A07#1 = IMul(ilit3714,idx3809);
          int mulRes3A0A#1 = IMul(ilit3714,idx380C);
          real dof3A0B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3912);
          real dof3A0C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3914);
          real dof3A0D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3917);
          real dof3A0E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391A);
          real dof3A0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes391D);
          real dof3A10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3920);
          real dof3A11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3923);
          real dof3A12#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3926);
          real dof3A13#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3929);
          real dof3A14#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392C);
          real dof3A15#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes392F);
          real dof3A16#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3932);
          real dof3A17#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3935);
          real dof3A18#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3938);
          real dof3A19#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393B);
          real dof3A1A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes393E);
          real dof3A1B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3941);
          real dof3A1C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3944);
          real dof3A1D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3947);
          real dof3A1E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394A);
          real dof3A1F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes394D);
          real dof3A20#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3950);
          real dof3A21#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3953);
          real dof3A22#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3956);
          real dof3A23#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3959);
          real dof3A24#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395C);
          real dof3A25#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes395F);
          real dof3A26#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3962);
          real dof3A27#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3965);
          real dof3A28#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3968);
          real dof3A29#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396B);
          real dof3A2A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes396E);
          real dof3A2B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3971);
          real dof3A2C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3974);
          real dof3A2D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3977);
          real dof3A2E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397A);
          real dof3A2F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes397D);
          real dof3A30#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3980);
          real dof3A31#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3983);
          real dof3A32#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3986);
          real dof3A33#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3989);
          real dof3A34#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398C);
          real dof3A35#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes398F);
          real dof3A36#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3992);
          real dof3A37#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3995);
          real dof3A38#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3998);
          real dof3A39#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399B);
          real dof3A3A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes399E);
          real dof3A3B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A1);
          real dof3A3C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A4);
          real dof3A3D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39A7);
          real dof3A3E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AA);
          real dof3A3F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39AD);
          real dof3A40#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B0);
          real dof3A41#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B3);
          real dof3A42#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B6);
          real dof3A43#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39B9);
          real dof3A44#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BC);
          real dof3A45#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39BF);
          real dof3A46#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C2);
          real dof3A47#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C5);
          real dof3A48#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39C8);
          real dof3A49#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CB);
          real dof3A4A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39CE);
          real dof3A4B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D1);
          real dof3A4C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D4);
          real dof3A4D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39D7);
          real dof3A4E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DA);
          real dof3A4F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39DD);
          real dof3A50#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E0);
          real dof3A51#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E3);
          real dof3A52#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E6);
          real dof3A53#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39E9);
          real dof3A54#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EC);
          real dof3A55#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39EF);
          real dof3A56#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F2);
          real dof3A57#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F5);
          real dof3A58#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39F8);
          real dof3A59#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FB);
          real dof3A5A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes39FE);
          real dof3A5B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A01);
          real dof3A5C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A04);
          real dof3A5D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A07);
          real dof3A5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2470,mulRes3A0A);
          tensor[84] dofs3A5F#1 = <tensor[84]>[dof3A0B,dof3A0C,dof3A0D,dof3A0E,dof3A0F,dof3A10,dof3A11,dof3A12,dof3A13,dof3A14,dof3A15,dof3A16,dof3A17,dof3A18,dof3A19,dof3A1A,dof3A1B,dof3A1C,dof3A1D,dof3A1E,dof3A1F,dof3A20,dof3A21,dof3A22,dof3A23,dof3A24,dof3A25,dof3A26,dof3A27,dof3A28,dof3A29,dof3A2A,dof3A2B,dof3A2C,dof3A2D,dof3A2E,dof3A2F,dof3A30,dof3A31,dof3A32,dof3A33,dof3A34,dof3A35,dof3A36,dof3A37,dof3A38,dof3A39,dof3A3A,dof3A3B,dof3A3C,dof3A3D,dof3A3E,dof3A3F,dof3A40,dof3A41,dof3A42,dof3A43,dof3A44,dof3A45,dof3A46,dof3A47,dof3A48,dof3A49,dof3A4A,dof3A4B,dof3A4C,dof3A4D,dof3A4E,dof3A4F,dof3A50,dof3A51,dof3A52,dof3A53,dof3A54,dof3A55,dof3A56,dof3A57,dof3A58,dof3A59,dof3A5A,dof3A5B,dof3A5C,dof3A5D,dof3A5E];
          real varAcc3BB3#27 = VIndex<3,0>(_t3709);
          real varAcc3BB4#12 = VIndex<3,1>(_t3709);
          real varAcc3BB5#12 = VIndex<3,2>(_t3709);
          real prod3BB7#7 = RMul(_t36AA,_t36AA);
          real prod3BB8#1 = RMul(_t36AA,prod3BB7);
          real basisEval3BB9#1 = RMul(_t36AA,prod3BB8);
          real prod3BBB#6 = RMul(_t36AA,varAcc3BB5);
          real prod3BBC#1 = RMul(_t36AA,prod3BBB);
          real basisEval3BBD#1 = RMul(_t36AA,prod3BBC);
          real prod3BBF#6 = RMul(varAcc3BB4,_t36AA);
          real prod3BC0#1 = RMul(_t36AA,prod3BBF);
          real basisEval3BC1#1 = RMul(_t36AA,prod3BC0);
          real prod3BC3#1 = RMul(varAcc3BB3,prod3BB7);
          real basisEval3BC4#1 = RMul(_t36AA,prod3BC3);
          real prod23BC5#6 = RMul(varAcc3BB5,varAcc3BB5);
          real prod3BC6#5 = RMul(_t36AA,prod23BC5);
          real prod3BC7#1 = RMul(_t36AA,prod3BC6);
          real basisEval3BC8#1 = RMul(_t36AA,prod3BC7);
          real prod3BC9#5 = RMul(varAcc3BB4,varAcc3BB5);
          real prod3BCA#1 = RMul(_t36AA,prod3BC9);
          real basisEval3BCB#1 = RMul(_t36AA,prod3BCA);
          real prod23BCC#6 = RMul(varAcc3BB4,varAcc3BB4);
          real prod3BCD#5 = RMul(prod23BCC,_t36AA);
          real prod3BCE#1 = RMul(_t36AA,prod3BCD);
          real basisEval3BCF#1 = RMul(_t36AA,prod3BCE);
          real prod3BD0#1 = RMul(varAcc3BB3,prod3BBB);
          real basisEval3BD1#1 = RMul(_t36AA,prod3BD0);
          real prod3BD2#1 = RMul(varAcc3BB3,prod3BBF);
          real basisEval3BD3#1 = RMul(_t36AA,prod3BD2);
          real prod23BD4#16 = RMul(varAcc3BB3,varAcc3BB3);
          real prod3BD5#1 = RMul(prod23BD4,prod3BB7);
          real basisEval3BD6#1 = RMul(_t36AA,prod3BD5);
          real prod33BD7#5 = RMul(prod23BC5,varAcc3BB5);
          real prod3BD8#4 = RMul(_t36AA,prod33BD7);
          real prod3BD9#1 = RMul(_t36AA,prod3BD8);
          real basisEval3BDA#1 = RMul(_t36AA,prod3BD9);
          real prod3BDB#4 = RMul(varAcc3BB4,prod23BC5);
          real prod3BDC#1 = RMul(_t36AA,prod3BDB);
          real basisEval3BDD#1 = RMul(_t36AA,prod3BDC);
          real prod3BDE#4 = RMul(prod23BCC,varAcc3BB5);
          real prod3BDF#1 = RMul(_t36AA,prod3BDE);
          real basisEval3BE0#1 = RMul(_t36AA,prod3BDF);
          real prod33BE1#5 = RMul(prod23BCC,varAcc3BB4);
          real prod3BE2#4 = RMul(prod33BE1,_t36AA);
          real prod3BE3#1 = RMul(_t36AA,prod3BE2);
          real basisEval3BE4#1 = RMul(_t36AA,prod3BE3);
          real prod3BE5#1 = RMul(varAcc3BB3,prod3BC6);
          real basisEval3BE6#1 = RMul(_t36AA,prod3BE5);
          real prod3BE7#1 = RMul(varAcc3BB3,prod3BC9);
          real basisEval3BE8#1 = RMul(_t36AA,prod3BE7);
          real prod3BE9#1 = RMul(varAcc3BB3,prod3BCD);
          real basisEval3BEA#1 = RMul(_t36AA,prod3BE9);
          real prod3BEB#1 = RMul(prod23BD4,prod3BBB);
          real basisEval3BEC#1 = RMul(_t36AA,prod3BEB);
          real prod3BED#1 = RMul(prod23BD4,prod3BBF);
          real basisEval3BEE#1 = RMul(_t36AA,prod3BED);
          real prod33BEF#11 = RMul(prod23BD4,varAcc3BB3);
          real prod3BF0#1 = RMul(prod33BEF,prod3BB7);
          real basisEval3BF1#1 = RMul(_t36AA,prod3BF0);
          real prod43BF2#4 = RMul(prod33BD7,varAcc3BB5);
          real prod3BF3#3 = RMul(_t36AA,prod43BF2);
          real prod3BF4#1 = RMul(_t36AA,prod3BF3);
          real basisEval3BF5#1 = RMul(_t36AA,prod3BF4);
          real prod3BF6#3 = RMul(varAcc3BB4,prod33BD7);
          real prod3BF7#1 = RMul(_t36AA,prod3BF6);
          real basisEval3BF8#1 = RMul(_t36AA,prod3BF7);
          real prod3BF9#3 = RMul(prod23BCC,prod23BC5);
          real prod3BFA#1 = RMul(_t36AA,prod3BF9);
          real basisEval3BFB#1 = RMul(_t36AA,prod3BFA);
          real prod3BFC#3 = RMul(prod33BE1,varAcc3BB5);
          real prod3BFD#1 = RMul(_t36AA,prod3BFC);
          real basisEval3BFE#1 = RMul(_t36AA,prod3BFD);
          real prod43BFF#4 = RMul(prod33BE1,varAcc3BB4);
          real prod3C00#3 = RMul(prod43BFF,_t36AA);
          real prod3C01#1 = RMul(_t36AA,prod3C00);
          real basisEval3C02#1 = RMul(_t36AA,prod3C01);
          real prod3C03#1 = RMul(varAcc3BB3,prod3BD8);
          real basisEval3C04#1 = RMul(_t36AA,prod3C03);
          real prod3C05#1 = RMul(varAcc3BB3,prod3BDB);
          real basisEval3C06#1 = RMul(_t36AA,prod3C05);
          real prod3C07#1 = RMul(varAcc3BB3,prod3BDE);
          real basisEval3C08#1 = RMul(_t36AA,prod3C07);
          real prod3C09#1 = RMul(varAcc3BB3,prod3BE2);
          real basisEval3C0A#1 = RMul(_t36AA,prod3C09);
          real prod3C0B#1 = RMul(prod23BD4,prod3BC6);
          real basisEval3C0C#1 = RMul(_t36AA,prod3C0B);
          real prod3C0D#1 = RMul(prod23BD4,prod3BC9);
          real basisEval3C0E#1 = RMul(_t36AA,prod3C0D);
          real prod3C0F#1 = RMul(prod23BD4,prod3BCD);
          real basisEval3C10#1 = RMul(_t36AA,prod3C0F);
          real prod3C11#1 = RMul(prod33BEF,prod3BBB);
          real basisEval3C12#1 = RMul(_t36AA,prod3C11);
          real prod3C13#1 = RMul(prod33BEF,prod3BBF);
          real basisEval3C14#1 = RMul(_t36AA,prod3C13);
          real prod43C15#7 = RMul(prod33BEF,varAcc3BB3);
          real prod3C16#1 = RMul(prod43C15,prod3BB7);
          real basisEval3C17#1 = RMul(_t36AA,prod3C16);
          real prod53C18#3 = RMul(prod43BF2,varAcc3BB5);
          real prod3C19#2 = RMul(_t36AA,prod53C18);
          real prod3C1A#1 = RMul(_t36AA,prod3C19);
          real basisEval3C1B#1 = RMul(_t36AA,prod3C1A);
          real prod3C1C#2 = RMul(varAcc3BB4,prod43BF2);
          real prod3C1D#1 = RMul(_t36AA,prod3C1C);
          real basisEval3C1E#1 = RMul(_t36AA,prod3C1D);
          real prod3C1F#2 = RMul(prod23BCC,prod33BD7);
          real prod3C20#1 = RMul(_t36AA,prod3C1F);
          real basisEval3C21#1 = RMul(_t36AA,prod3C20);
          real prod3C22#2 = RMul(prod33BE1,prod23BC5);
          real prod3C23#1 = RMul(_t36AA,prod3C22);
          real basisEval3C24#1 = RMul(_t36AA,prod3C23);
          real prod3C25#2 = RMul(prod43BFF,varAcc3BB5);
          real prod3C26#1 = RMul(_t36AA,prod3C25);
          real basisEval3C27#1 = RMul(_t36AA,prod3C26);
          real prod53C28#3 = RMul(prod43BFF,varAcc3BB4);
          real prod3C29#2 = RMul(prod53C28,_t36AA);
          real prod3C2A#1 = RMul(_t36AA,prod3C29);
          real basisEval3C2B#1 = RMul(_t36AA,prod3C2A);
          real prod3C2C#1 = RMul(varAcc3BB3,prod3BF3);
          real basisEval3C2D#1 = RMul(_t36AA,prod3C2C);
          real prod3C2E#1 = RMul(varAcc3BB3,prod3BF6);
          real basisEval3C2F#1 = RMul(_t36AA,prod3C2E);
          real prod3C30#1 = RMul(varAcc3BB3,prod3BF9);
          real basisEval3C31#1 = RMul(_t36AA,prod3C30);
          real prod3C32#1 = RMul(varAcc3BB3,prod3BFC);
          real basisEval3C33#1 = RMul(_t36AA,prod3C32);
          real prod3C34#1 = RMul(varAcc3BB3,prod3C00);
          real basisEval3C35#1 = RMul(_t36AA,prod3C34);
          real prod3C36#1 = RMul(prod23BD4,prod3BD8);
          real basisEval3C37#1 = RMul(_t36AA,prod3C36);
          real prod3C38#1 = RMul(prod23BD4,prod3BDB);
          real basisEval3C39#1 = RMul(_t36AA,prod3C38);
          real prod3C3A#1 = RMul(prod23BD4,prod3BDE);
          real basisEval3C3B#1 = RMul(_t36AA,prod3C3A);
          real prod3C3C#1 = RMul(prod23BD4,prod3BE2);
          real basisEval3C3D#1 = RMul(_t36AA,prod3C3C);
          real prod3C3E#1 = RMul(prod33BEF,prod3BC6);
          real basisEval3C3F#1 = RMul(_t36AA,prod3C3E);
          real prod3C40#1 = RMul(prod33BEF,prod3BC9);
          real basisEval3C41#1 = RMul(_t36AA,prod3C40);
          real prod3C42#1 = RMul(prod33BEF,prod3BCD);
          real basisEval3C43#1 = RMul(_t36AA,prod3C42);
          real prod3C44#1 = RMul(prod43C15,prod3BBB);
          real basisEval3C45#1 = RMul(_t36AA,prod3C44);
          real prod3C46#1 = RMul(prod43C15,prod3BBF);
          real basisEval3C47#1 = RMul(_t36AA,prod3C46);
          real prod53C48#4 = RMul(prod43C15,varAcc3BB3);
          real prod3C49#1 = RMul(prod53C48,prod3BB7);
          real basisEval3C4A#1 = RMul(_t36AA,prod3C49);
          real prod63C4B#1 = RMul(prod53C18,varAcc3BB5);
          real prod3C4C#1 = RMul(_t36AA,prod63C4B);
          real prod3C4D#1 = RMul(_t36AA,prod3C4C);
          real basisEval3C4E#1 = RMul(_t36AA,prod3C4D);
          real prod3C4F#1 = RMul(varAcc3BB4,prod53C18);
          real prod3C50#1 = RMul(_t36AA,prod3C4F);
          real basisEval3C51#1 = RMul(_t36AA,prod3C50);
          real prod3C52#1 = RMul(prod23BCC,prod43BF2);
          real prod3C53#1 = RMul(_t36AA,prod3C52);
          real basisEval3C54#1 = RMul(_t36AA,prod3C53);
          real prod3C55#1 = RMul(prod33BE1,prod33BD7);
          real prod3C56#1 = RMul(_t36AA,prod3C55);
          real basisEval3C57#1 = RMul(_t36AA,prod3C56);
          real prod3C58#1 = RMul(prod43BFF,prod23BC5);
          real prod3C59#1 = RMul(_t36AA,prod3C58);
          real basisEval3C5A#1 = RMul(_t36AA,prod3C59);
          real prod3C5B#1 = RMul(prod53C28,varAcc3BB5);
          real prod3C5C#1 = RMul(_t36AA,prod3C5B);
          real basisEval3C5D#1 = RMul(_t36AA,prod3C5C);
          real prod63C5E#1 = RMul(prod53C28,varAcc3BB4);
          real prod3C5F#1 = RMul(prod63C5E,_t36AA);
          real prod3C60#1 = RMul(_t36AA,prod3C5F);
          real basisEval3C61#1 = RMul(_t36AA,prod3C60);
          real prod3C62#1 = RMul(varAcc3BB3,prod3C19);
          real basisEval3C63#1 = RMul(_t36AA,prod3C62);
          real prod3C64#1 = RMul(varAcc3BB3,prod3C1C);
          real basisEval3C65#1 = RMul(_t36AA,prod3C64);
          real prod3C66#1 = RMul(varAcc3BB3,prod3C1F);
          real basisEval3C67#1 = RMul(_t36AA,prod3C66);
          real prod3C68#1 = RMul(varAcc3BB3,prod3C22);
          real basisEval3C69#1 = RMul(_t36AA,prod3C68);
          real prod3C6A#1 = RMul(varAcc3BB3,prod3C25);
          real basisEval3C6B#1 = RMul(_t36AA,prod3C6A);
          real prod3C6C#1 = RMul(varAcc3BB3,prod3C29);
          real basisEval3C6D#1 = RMul(_t36AA,prod3C6C);
          real prod3C6E#1 = RMul(prod23BD4,prod3BF3);
          real basisEval3C6F#1 = RMul(_t36AA,prod3C6E);
          real prod3C70#1 = RMul(prod23BD4,prod3BF6);
          real basisEval3C71#1 = RMul(_t36AA,prod3C70);
          real prod3C72#1 = RMul(prod23BD4,prod3BF9);
          real basisEval3C73#1 = RMul(_t36AA,prod3C72);
          real prod3C74#1 = RMul(prod23BD4,prod3BFC);
          real basisEval3C75#1 = RMul(_t36AA,prod3C74);
          real prod3C76#1 = RMul(prod23BD4,prod3C00);
          real basisEval3C77#1 = RMul(_t36AA,prod3C76);
          real prod3C78#1 = RMul(prod33BEF,prod3BD8);
          real basisEval3C79#1 = RMul(_t36AA,prod3C78);
          real prod3C7A#1 = RMul(prod33BEF,prod3BDB);
          real basisEval3C7B#1 = RMul(_t36AA,prod3C7A);
          real prod3C7C#1 = RMul(prod33BEF,prod3BDE);
          real basisEval3C7D#1 = RMul(_t36AA,prod3C7C);
          real prod3C7E#1 = RMul(prod33BEF,prod3BE2);
          real basisEval3C7F#1 = RMul(_t36AA,prod3C7E);
          real prod3C80#1 = RMul(prod43C15,prod3BC6);
          real basisEval3C81#1 = RMul(_t36AA,prod3C80);
          real prod3C82#1 = RMul(prod43C15,prod3BC9);
          real basisEval3C83#1 = RMul(_t36AA,prod3C82);
          real prod3C84#1 = RMul(prod43C15,prod3BCD);
          real basisEval3C85#1 = RMul(_t36AA,prod3C84);
          real prod3C86#1 = RMul(prod53C48,prod3BBB);
          real basisEval3C87#1 = RMul(_t36AA,prod3C86);
          real prod3C88#1 = RMul(prod53C48,prod3BBF);
          real basisEval3C89#1 = RMul(_t36AA,prod3C88);
          real prod63C8A#1 = RMul(prod53C48,varAcc3BB3);
          real prod3C8B#1 = RMul(prod63C8A,prod3BB7);
          real basisEval3C8C#1 = RMul(_t36AA,prod3C8B);
          tensor[84] intermediateCons3C8D#1 = <tensor[84]>[basisEval3BB9,basisEval3BBD,basisEval3BC1,basisEval3BC4,basisEval3BC8,basisEval3BCB,basisEval3BCF,basisEval3BD1,basisEval3BD3,basisEval3BD6,basisEval3BDA,basisEval3BDD,basisEval3BE0,basisEval3BE4,basisEval3BE6,basisEval3BE8,basisEval3BEA,basisEval3BEC,basisEval3BEE,basisEval3BF1,basisEval3BF5,basisEval3BF8,basisEval3BFB,basisEval3BFE,basisEval3C02,basisEval3C04,basisEval3C06,basisEval3C08,basisEval3C0A,basisEval3C0C,basisEval3C0E,basisEval3C10,basisEval3C12,basisEval3C14,basisEval3C17,basisEval3C1B,basisEval3C1E,basisEval3C21,basisEval3C24,basisEval3C27,basisEval3C2B,basisEval3C2D,basisEval3C2F,basisEval3C31,basisEval3C33,basisEval3C35,basisEval3C37,basisEval3C39,basisEval3C3B,basisEval3C3D,basisEval3C3F,basisEval3C41,basisEval3C43,basisEval3C45,basisEval3C47,basisEval3C4A,basisEval3C4E,basisEval3C51,basisEval3C54,basisEval3C57,basisEval3C5A,basisEval3C5D,basisEval3C61,basisEval3C63,basisEval3C65,basisEval3C67,basisEval3C69,basisEval3C6B,basisEval3C6D,basisEval3C6F,basisEval3C71,basisEval3C73,basisEval3C75,basisEval3C77,basisEval3C79,basisEval3C7B,basisEval3C7D,basisEval3C7F,basisEval3C81,basisEval3C83,basisEval3C85,basisEval3C87,basisEval3C89,basisEval3C8C];
          real probe_l_83D6A#1 = VDot<84>(dofs3A5F,intermediateCons3C8D);
          real op1_e3_l_93D6D#1 = RSub(probe_l_83D6A,cmin3700);
          real op1_e3_l_103D70#1 = RSub(cmax3702,cmin3700);
          real op1_e3_l_113D73#1 = RDiv(op1_e3_l_93D6D,op1_e3_l_103D70);
          real op1_e3_l_123D76#1 = RSub(_t36AA,_t36A8);
          real op1_e3_l_133D79#1 = RMul(op1_e3_l_113D73,op1_e3_l_123D76);
          real _t3D7C#1 = RAdd(_t36A8,op1_e3_l_133D79);
          real Mtransform3D7F#1 = Transform<IMAGE1D<double[3]>>(cmap246A);
          real MxPos3D81#1 = RMul(Mtransform3D7F,_t3D7C);
          real Ttranslate3D84#1 = Translate<IMAGE1D<double[3]>>(cmap246A);
          real imgPos3D86#2 = RAdd(MxPos3D81,Ttranslate3D84);
          real nd3D89#2 = Floor<1>(imgPos3D86);
          real f3D8B#2 = RSub(imgPos3D86,nd3D89);
          int n3D8E#5 = RealToInt<1>(nd3D89);
          bool isInside3D92#1 = IndexInside<IMAGE1D<double[3]>,2>(n3D8E,cmap246A);
          if isInside3D92 then goto ASSIGN4C30 else goto ASSIGN4C28
        ASSIGN4C30:  preds = [COND3D94]
          int offp3D99#3 = IMul(ilit371A,n3D8E);
          real v0_3D9A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D99);
          int addRes3D9C#1 = IAdd(n3D8E,ilit3714);
          int offp3D9D#3 = IMul(ilit371A,addRes3D9C);
          real v1_3D9E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3D9D);
          int offp3DA0#1 = IAdd(offp3D99,ilit3714);
          real v0_3DA1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA0);
          int offp3DA2#1 = IAdd(offp3D9D,ilit3714);
          real v1_3DA3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA2);
          int offp3DA6#1 = IAdd(offp3D99,ilit3717);
          real v0_3DA7#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA6);
          int offp3DA8#1 = IAdd(offp3D9D,ilit3717);
          real v1_3DA9#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3DA8);
          tensor[3,2] voxels3DAB#1 = <tensor[3,2]>[v0_3D9A,v1_3D9E,v0_3DA1,v1_3DA3,v0_3DA7,v1_3DA9];
          goto JOIN3DC5
        JOIN3DC5:  preds = [ASSIGN4C3D,ASSIGN4C3E]
          tensor[3,2] ldvox3DC3#3 = phi(voxels3DAB,voxels3E86)
          real idx3DC8#1 = RSub(f3D8B,_t36AA);
          tensor[2] kernX_3DC6#1 = <tensor[2]>[f3D8B,idx3DC8];
          tensor[2] a03DCD#1 = <tensor[2]>[_t36AA,_t36AA];
          real _f3DCF#1 = -0.1e1;
          tensor[2] a13DCE#1 = <tensor[2]>[_f3DCF,_t36AA];
          tensor[2] prod13DD3#1 = VMul<2>(kernX_3DC6,a13DCE);
          tensor[2] kevalX_d0_3DCC#3 = VAdd<2>(a03DCD,prod13DD3);
          tensor[2] projIx3DDD#1 = ProjectLast<tensor[3,2],[0]>(ldvox3DC3);
          real vdot3DDE#1 = VDot<2>(projIx3DDD,kevalX_d0_3DCC);
          tensor[2] projIx3DDF#1 = ProjectLast<tensor[3,2],[1]>(ldvox3DC3);
          real vdot3DE0#1 = VDot<2>(projIx3DDF,kevalX_d0_3DCC);
          tensor[2] projIx3DE1#1 = ProjectLast<tensor[3,2],[2]>(ldvox3DC3);
          real vdot3DE2#1 = VDot<2>(projIx3DE1,kevalX_d0_3DCC);
          tensor[3] mcol3DDC#1 = <tensor[3]>[vdot3DDE,vdot3DE0,vdot3DE2];
          goto JOIN3DEC
        JOIN3DEC:  preds = [ASSIGN3DEA,COND3708]
          tensor[3] mcol3DEB#3 = phi(mcol3DDC,mcol3704)
          real op1_e3_l_213DED#1 = RDiv(_t36AA,op1_e3_l_836B1);
          tensor[3] op1_e3_l_223DF2#1 = VScale<3>(op1_e3_l_213DED,step36A5);
          tensor[3] op1_e3_l_233DF5#1 = VNeg<3>(op1_e3_l_223DF2);
          real op1_e3_l_243DF8#2 = VDot<3>(op1_e3_l_233DF5,litwsp2494);
          real op1_e3_l_253DFB#1 = RMul(op1_e3_l_243DF8,op1_e3_l_243DF8);
          real op1_e3_l_263DFE#1 = RMul(phKd24A2,op1_e3_l_253DFB);
          real op1_e3_l_283E01#1 = RSub(rayN24AC,camNearVsp2490);
          real op1_e3_l_293E04#1 = RSub(camFarVsp2492,camNearVsp2490);
          real op1_e3_l_303E07#1 = RDiv(op1_e3_l_283E01,op1_e3_l_293E04);
          tensor[3] op1_e3_l_313E0A#1 = VSub<3>(mcFar248A,mcNear2488);
          tensor[3] op1_e3_l_323E0D#1 = VScale<3>(op1_e3_l_303E07,op1_e3_l_313E0A);
          real op1_e3_l_333E10#3 = RAdd(phKa24A0,op1_e3_l_263DFE);
          tensor[3] op1_e3_l_343E13#3 = VAdd<3>(mcNear2488,op1_e3_l_323E0D);
          real r3E17#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_343E13);
          real r3E18#1 = TensorIndex<tensor[3],[0]>(mcol3DEB);
          real r3E19#1 = RMul(op1_e3_l_333E10,r3E17);
          real r3E1A#1 = RMul(r3E19,r3E18);
          real r3E1B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_343E13);
          real r3E1C#1 = TensorIndex<tensor[3],[1]>(mcol3DEB);
          real r3E1D#1 = RMul(op1_e3_l_333E10,r3E1B);
          real r3E1E#1 = RMul(r3E1D,r3E1C);
          real r3E1F#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_343E13);
          real r3E20#1 = TensorIndex<tensor[3],[2]>(mcol3DEB);
          real r3E21#1 = RMul(op1_e3_l_333E10,r3E1F);
          real r3E22#1 = RMul(r3E21,r3E20);
          tensor[3] op1_e3_l_353E16#1 = <tensor[3]>[r3E1A,r3E1E,r3E22];
          real r3E33#1 = RMul(phKs24A4,scomp36FE);
          real r3E34#3 = RMul(r3E33,_t36AA);
          tensor[3] op1_e3_l_363E31#1 = <tensor[3]>[r3E34,r3E34,r3E34];
          real op1_e3_l_373E42#2 = RSub(_t36AA,_t36D5);
          tensor[3] op1_e3_l_383E45#3 = VAdd<3>(op1_e3_l_353E16,op1_e3_l_363E31);
          real r3E49#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_383E45);
          real r3E4A#3 = RMul(transp24AA,op1_e3_l_373E42);
          real r3E4B#1 = RMul(r3E4A,r3E49);
          real r3E4C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_383E45);
          real r3E4D#1 = RMul(r3E4A,r3E4C);
          real r3E4E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_383E45);
          real r3E4F#1 = RMul(r3E4A,r3E4E);
          tensor[3] op1_e3_l_393E48#1 = <tensor[3]>[r3E4B,r3E4D,r3E4F];
          tensor[3] rgb3E59#2 = VAdd<3>(rgb24A8,op1_e3_l_393E48);
          real op1_e3_l_53E5C#1 = RSub(_t36AA,op1_e3_l_373E42);
          real transp3E5F#2 = RMul(transp24AA,op1_e3_l_53E5C);
          bool _t3E62#1 = LT<real>(transp3E5F,transp0247C);
          if _t3E62 then goto SAVE3E65 else goto JOIN3E6A
        SAVE3E65:  preds = [COND3E64]
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = _t36A8;
          stabilize
          goto JOIN3E6A
        JOIN3E6A:  preds = [*STABILIZE3E68,COND3E64]
          real transp3E69#1 = phi(transp3E5F)
          self.rayN = rayN24AC;
          self.rgb = rgb3E59;
          self.transp = transp3E69;
          active
        ASSIGN4C28:  preds = [COND3D94]
          int ix3E71#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,n3D8E);
          int offp3E73#3 = IMul(ilit371A,ix3E71);
          real v0_3E74#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E73);
          int addRes3E76#1 = IAdd(n3D8E,ilit3714);
          int ix3E77#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap246A,addRes3E76);
          int offp3E78#3 = IMul(ilit371A,ix3E77);
          real v1_3E79#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E78);
          int offp3E7B#1 = IAdd(offp3E73,ilit3714);
          real v0_3E7C#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7B);
          int offp3E7D#1 = IAdd(offp3E78,ilit3714);
          real v1_3E7E#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E7D);
          int offp3E81#1 = IAdd(offp3E73,ilit3717);
          real v0_3E82#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E81);
          int offp3E83#1 = IAdd(offp3E78,ilit3717);
          real v1_3E84#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap246A,offp3E83);
          tensor[3,2] voxels3E86#1 = <tensor[3,2]>[v0_3E74,v1_3E79,v0_3E7C,v1_3E7E,v0_3E82,v1_3E84];
          goto JOIN3DC5
        ASSIGN3EA1:  preds = [COND2D6E]
          tensor[3,3] Mtransform3EA0#12 = Transform<IMAGE3D<float[]>>(umm2472);
          tensor[3] projParam3EA3#1 = ProjectLast<tensor[3,3],[0]>(Mtransform3EA0);
          real vdot3EA4#1 = VDot<3>(projParam3EA3,pos24B8);
          tensor[3] projParam3EA5#1 = ProjectLast<tensor[3,3],[1]>(Mtransform3EA0);
          real vdot3EA6#1 = VDot<3>(projParam3EA5,pos24B8);
          tensor[3] projParam3EA7#1 = ProjectLast<tensor[3,3],[2]>(Mtransform3EA0);
          real vdot3EA8#1 = VDot<3>(projParam3EA7,pos24B8);
          tensor[3] MxPos3EA2#1 = <tensor[3]>[vdot3EA4,vdot3EA6,vdot3EA8];
          tensor[3] Ttranslate3EB1#1 = Translate<IMAGE3D<float[]>>(umm2472);
          tensor[3] imgPos3EB3#2 = VAdd<3>(MxPos3EA2,Ttranslate3EB1);
          tensor[3] nd3EB6#2 = Floor<3>(imgPos3EB3);
          tensor[3] f3EB8#3 = VSub<3>(imgPos3EB3,nd3EB6);
          int[3] n3EBB#3 = RealToInt<3>(nd3EB6);
          real r3EBE#4 = TensorIndex<tensor[3,3],[0,0]>(Mtransform3EA0);
          real r3EBF#4 = TensorIndex<tensor[3,3],[1,0]>(Mtransform3EA0);
          real r3EC0#4 = TensorIndex<tensor[3,3],[2,0]>(Mtransform3EA0);
          tensor[3] tensor3EC1#4 = <tensor[3]>[r3EBE,r3EBF,r3EC0];
          real r3EC2#4 = TensorIndex<tensor[3,3],[0,1]>(Mtransform3EA0);
          real r3EC3#4 = TensorIndex<tensor[3,3],[1,1]>(Mtransform3EA0);
          real r3EC4#4 = TensorIndex<tensor[3,3],[2,1]>(Mtransform3EA0);
          tensor[3] tensor3EC5#4 = <tensor[3]>[r3EC2,r3EC3,r3EC4];
          real r3EC6#4 = TensorIndex<tensor[3,3],[0,2]>(Mtransform3EA0);
          real r3EC7#4 = TensorIndex<tensor[3,3],[1,2]>(Mtransform3EA0);
          real r3EC8#4 = TensorIndex<tensor[3,3],[2,2]>(Mtransform3EA0);
          tensor[3] tensor3EC9#4 = <tensor[3]>[r3EC6,r3EC7,r3EC8];
          int lit3ED8#3 = -1;
          int idx3EDA#1 = 0;
          int nX_3EDC#1 = Subscript<int[3]>(n3EBB,idx3EDA);
          int idx3EDE#19 = IAdd(nX_3EDC,lit3ED8);
          int idx3EE0#6 = 1;
          int nY_3EE2#1 = Subscript<int[3]>(n3EBB,idx3EE0);
          int idx3EE4#7 = IAdd(nY_3EE2,lit3ED8);
          int idx3EE6#6 = 2;
          int nZ_3EE8#1 = Subscript<int[3]>(n3EBB,idx3EE6);
          int idx3EEA#4 = IAdd(nZ_3EE8,lit3ED8);
          int ilit3EF5#20 = 300;
          int mulRes3EF9#4 = IMul(ilit3EF5,idx3EEA);
          int addRes3EFA#1 = IAdd(idx3EE4,mulRes3EF9);
          int mulRes3EFB#4 = IMul(ilit3EF5,addRes3EFA);
          int addRes3EFC#1 = IAdd(idx3EDE,mulRes3EFB);
          real v000_3EFD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFC);
          int addRes3EFE#16 = IAdd(idx3EDE,idx3EE0);
          int addRes3EFF#1 = IAdd(addRes3EFE,mulRes3EFB);
          real v001_3F00#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3EFF);
          int addRes3F01#16 = IAdd(idx3EDE,idx3EE6);
          int addRes3F02#1 = IAdd(addRes3F01,mulRes3EFB);
          real v002_3F03#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F02);
          int ilit3F04#3 = 3;
          int addRes3F05#16 = IAdd(idx3EDE,ilit3F04);
          int addRes3F06#1 = IAdd(addRes3F05,mulRes3EFB);
          real v003_3F07#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F06);
          tensor[4] v00_3F08#3 = <tensor[4]>[v000_3EFD,v001_3F00,v002_3F03,v003_3F07];
          int addRes3F09#4 = IAdd(idx3EE4,idx3EE0);
          int addRes3F0A#1 = IAdd(addRes3F09,mulRes3EF9);
          int mulRes3F0B#4 = IMul(ilit3EF5,addRes3F0A);
          int addRes3F0C#1 = IAdd(idx3EDE,mulRes3F0B);
          real v010_3F0D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0C);
          int addRes3F0E#1 = IAdd(addRes3EFE,mulRes3F0B);
          real v011_3F0F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F0E);
          int addRes3F10#1 = IAdd(addRes3F01,mulRes3F0B);
          real v012_3F11#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F10);
          int addRes3F12#1 = IAdd(addRes3F05,mulRes3F0B);
          real v013_3F13#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F12);
          tensor[4] v01_3F14#3 = <tensor[4]>[v010_3F0D,v011_3F0F,v012_3F11,v013_3F13];
          int addRes3F15#4 = IAdd(idx3EE4,idx3EE6);
          int addRes3F16#1 = IAdd(addRes3F15,mulRes3EF9);
          int mulRes3F17#4 = IMul(ilit3EF5,addRes3F16);
          int addRes3F18#1 = IAdd(idx3EDE,mulRes3F17);
          real v020_3F19#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F18);
          int addRes3F1A#1 = IAdd(addRes3EFE,mulRes3F17);
          real v021_3F1B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1A);
          int addRes3F1C#1 = IAdd(addRes3F01,mulRes3F17);
          real v022_3F1D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1C);
          int addRes3F1E#1 = IAdd(addRes3F05,mulRes3F17);
          real v023_3F1F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F1E);
          tensor[4] v02_3F20#3 = <tensor[4]>[v020_3F19,v021_3F1B,v022_3F1D,v023_3F1F];
          int addRes3F21#4 = IAdd(idx3EE4,ilit3F04);
          int addRes3F22#1 = IAdd(addRes3F21,mulRes3EF9);
          int mulRes3F23#4 = IMul(ilit3EF5,addRes3F22);
          int addRes3F24#1 = IAdd(idx3EDE,mulRes3F23);
          real v030_3F25#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F24);
          int addRes3F26#1 = IAdd(addRes3EFE,mulRes3F23);
          real v031_3F27#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F26);
          int addRes3F28#1 = IAdd(addRes3F01,mulRes3F23);
          real v032_3F29#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F28);
          int addRes3F2A#1 = IAdd(addRes3F05,mulRes3F23);
          real v033_3F2B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F2A);
          tensor[4] v03_3F2C#3 = <tensor[4]>[v030_3F25,v031_3F27,v032_3F29,v033_3F2B];
          int addRes3F2E#1 = IAdd(idx3EEA,idx3EE0);
          int mulRes3F2F#4 = IMul(ilit3EF5,addRes3F2E);
          int addRes3F30#1 = IAdd(idx3EE4,mulRes3F2F);
          int mulRes3F31#4 = IMul(ilit3EF5,addRes3F30);
          int addRes3F32#1 = IAdd(idx3EDE,mulRes3F31);
          real v100_3F33#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F32);
          int addRes3F34#1 = IAdd(addRes3EFE,mulRes3F31);
          real v101_3F35#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F34);
          int addRes3F36#1 = IAdd(addRes3F01,mulRes3F31);
          real v102_3F37#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F36);
          int addRes3F38#1 = IAdd(addRes3F05,mulRes3F31);
          real v103_3F39#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F38);
          tensor[4] v10_3F3A#3 = <tensor[4]>[v100_3F33,v101_3F35,v102_3F37,v103_3F39];
          int addRes3F3B#1 = IAdd(addRes3F09,mulRes3F2F);
          int mulRes3F3C#4 = IMul(ilit3EF5,addRes3F3B);
          int addRes3F3D#1 = IAdd(idx3EDE,mulRes3F3C);
          real v110_3F3E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3D);
          int addRes3F3F#1 = IAdd(addRes3EFE,mulRes3F3C);
          real v111_3F40#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F3F);
          int addRes3F41#1 = IAdd(addRes3F01,mulRes3F3C);
          real v112_3F42#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F41);
          int addRes3F43#1 = IAdd(addRes3F05,mulRes3F3C);
          real v113_3F44#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F43);
          tensor[4] v11_3F45#3 = <tensor[4]>[v110_3F3E,v111_3F40,v112_3F42,v113_3F44];
          int addRes3F46#1 = IAdd(addRes3F15,mulRes3F2F);
          int mulRes3F47#4 = IMul(ilit3EF5,addRes3F46);
          int addRes3F48#1 = IAdd(idx3EDE,mulRes3F47);
          real v120_3F49#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F48);
          int addRes3F4A#1 = IAdd(addRes3EFE,mulRes3F47);
          real v121_3F4B#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4A);
          int addRes3F4C#1 = IAdd(addRes3F01,mulRes3F47);
          real v122_3F4D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4C);
          int addRes3F4E#1 = IAdd(addRes3F05,mulRes3F47);
          real v123_3F4F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F4E);
          tensor[4] v12_3F50#3 = <tensor[4]>[v120_3F49,v121_3F4B,v122_3F4D,v123_3F4F];
          int addRes3F51#1 = IAdd(addRes3F21,mulRes3F2F);
          int mulRes3F52#4 = IMul(ilit3EF5,addRes3F51);
          int addRes3F53#1 = IAdd(idx3EDE,mulRes3F52);
          real v130_3F54#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F53);
          int addRes3F55#1 = IAdd(addRes3EFE,mulRes3F52);
          real v131_3F56#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F55);
          int addRes3F57#1 = IAdd(addRes3F01,mulRes3F52);
          real v132_3F58#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F57);
          int addRes3F59#1 = IAdd(addRes3F05,mulRes3F52);
          real v133_3F5A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F59);
          tensor[4] v13_3F5B#3 = <tensor[4]>[v130_3F54,v131_3F56,v132_3F58,v133_3F5A];
          int addRes3F5D#1 = IAdd(idx3EEA,idx3EE6);
          int mulRes3F5E#4 = IMul(ilit3EF5,addRes3F5D);
          int addRes3F5F#1 = IAdd(idx3EE4,mulRes3F5E);
          int mulRes3F60#4 = IMul(ilit3EF5,addRes3F5F);
          int addRes3F61#1 = IAdd(idx3EDE,mulRes3F60);
          real v200_3F62#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F61);
          int addRes3F63#1 = IAdd(addRes3EFE,mulRes3F60);
          real v201_3F64#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F63);
          int addRes3F65#1 = IAdd(addRes3F01,mulRes3F60);
          real v202_3F66#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F65);
          int addRes3F67#1 = IAdd(addRes3F05,mulRes3F60);
          real v203_3F68#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F67);
          tensor[4] v20_3F69#3 = <tensor[4]>[v200_3F62,v201_3F64,v202_3F66,v203_3F68];
          int addRes3F6A#1 = IAdd(addRes3F09,mulRes3F5E);
          int mulRes3F6B#4 = IMul(ilit3EF5,addRes3F6A);
          int addRes3F6C#1 = IAdd(idx3EDE,mulRes3F6B);
          real v210_3F6D#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6C);
          int addRes3F6E#1 = IAdd(addRes3EFE,mulRes3F6B);
          real v211_3F6F#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F6E);
          int addRes3F70#1 = IAdd(addRes3F01,mulRes3F6B);
          real v212_3F71#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F70);
          int addRes3F72#1 = IAdd(addRes3F05,mulRes3F6B);
          real v213_3F73#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F72);
          tensor[4] v21_3F74#3 = <tensor[4]>[v210_3F6D,v211_3F6F,v212_3F71,v213_3F73];
          int addRes3F75#1 = IAdd(addRes3F15,mulRes3F5E);
          int mulRes3F76#4 = IMul(ilit3EF5,addRes3F75);
          int addRes3F77#1 = IAdd(idx3EDE,mulRes3F76);
          real v220_3F78#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F77);
          int addRes3F79#1 = IAdd(addRes3EFE,mulRes3F76);
          real v221_3F7A#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F79);
          int addRes3F7B#1 = IAdd(addRes3F01,mulRes3F76);
          real v222_3F7C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7B);
          int addRes3F7D#1 = IAdd(addRes3F05,mulRes3F76);
          real v223_3F7E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F7D);
          tensor[4] v22_3F7F#3 = <tensor[4]>[v220_3F78,v221_3F7A,v222_3F7C,v223_3F7E];
          int addRes3F80#1 = IAdd(addRes3F21,mulRes3F5E);
          int mulRes3F81#4 = IMul(ilit3EF5,addRes3F80);
          int addRes3F82#1 = IAdd(idx3EDE,mulRes3F81);
          real v230_3F83#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F82);
          int addRes3F84#1 = IAdd(addRes3EFE,mulRes3F81);
          real v231_3F85#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F84);
          int addRes3F86#1 = IAdd(addRes3F01,mulRes3F81);
          real v232_3F87#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F86);
          int addRes3F88#1 = IAdd(addRes3F05,mulRes3F81);
          real v233_3F89#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F88);
          tensor[4] v23_3F8A#3 = <tensor[4]>[v230_3F83,v231_3F85,v232_3F87,v233_3F89];
          int addRes3F8C#1 = IAdd(idx3EEA,ilit3F04);
          int mulRes3F8D#4 = IMul(ilit3EF5,addRes3F8C);
          int addRes3F8E#1 = IAdd(idx3EE4,mulRes3F8D);
          int mulRes3F8F#4 = IMul(ilit3EF5,addRes3F8E);
          int addRes3F90#1 = IAdd(idx3EDE,mulRes3F8F);
          real v300_3F91#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F90);
          int addRes3F92#1 = IAdd(addRes3EFE,mulRes3F8F);
          real v301_3F93#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F92);
          int addRes3F94#1 = IAdd(addRes3F01,mulRes3F8F);
          real v302_3F95#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F94);
          int addRes3F96#1 = IAdd(addRes3F05,mulRes3F8F);
          real v303_3F97#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F96);
          tensor[4] v30_3F98#3 = <tensor[4]>[v300_3F91,v301_3F93,v302_3F95,v303_3F97];
          int addRes3F99#1 = IAdd(addRes3F09,mulRes3F8D);
          int mulRes3F9A#4 = IMul(ilit3EF5,addRes3F99);
          int addRes3F9B#1 = IAdd(idx3EDE,mulRes3F9A);
          real v310_3F9C#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9B);
          int addRes3F9D#1 = IAdd(addRes3EFE,mulRes3F9A);
          real v311_3F9E#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9D);
          int addRes3F9F#1 = IAdd(addRes3F01,mulRes3F9A);
          real v312_3FA0#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3F9F);
          int addRes3FA1#1 = IAdd(addRes3F05,mulRes3F9A);
          real v313_3FA2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA1);
          tensor[4] v31_3FA3#3 = <tensor[4]>[v310_3F9C,v311_3F9E,v312_3FA0,v313_3FA2];
          int addRes3FA4#1 = IAdd(addRes3F15,mulRes3F8D);
          int mulRes3FA5#4 = IMul(ilit3EF5,addRes3FA4);
          int addRes3FA6#1 = IAdd(idx3EDE,mulRes3FA5);
          real v320_3FA7#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA6);
          int addRes3FA8#1 = IAdd(addRes3EFE,mulRes3FA5);
          real v321_3FA9#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FA8);
          int addRes3FAA#1 = IAdd(addRes3F01,mulRes3FA5);
          real v322_3FAB#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAA);
          int addRes3FAC#1 = IAdd(addRes3F05,mulRes3FA5);
          real v323_3FAD#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FAC);
          tensor[4] v32_3FAE#3 = <tensor[4]>[v320_3FA7,v321_3FA9,v322_3FAB,v323_3FAD];
          int addRes3FAF#1 = IAdd(addRes3F21,mulRes3F8D);
          int mulRes3FB0#4 = IMul(ilit3EF5,addRes3FAF);
          int addRes3FB1#1 = IAdd(idx3EDE,mulRes3FB0);
          real v330_3FB2#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB1);
          int addRes3FB3#1 = IAdd(addRes3EFE,mulRes3FB0);
          real v331_3FB4#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB3);
          int addRes3FB5#1 = IAdd(addRes3F01,mulRes3FB0);
          real v332_3FB6#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB5);
          int addRes3FB7#1 = IAdd(addRes3F05,mulRes3FB0);
          real v333_3FB8#1 = LoadVoxel<IMAGE3D<float[]>>(umm2472,addRes3FB7);
          tensor[4] v33_3FB9#3 = <tensor[4]>[v330_3FB2,v331_3FB4,v332_3FB6,v333_3FB8];
          real vZ_408A#4 = VIndex<3,2>(f3EB8);
          real rlit4091#9 = 0.1e1;
          real idx4092#1 = RAdd(vZ_408A,rlit4091);
          real idx4090#1 = RSub(vZ_408A,rlit4091);
          real rlit408D#6 = 0.2e1;
          real idx408E#1 = RSub(vZ_408A,rlit408D);
          tensor[4] kernZ_408C#6 = <tensor[4]>[idx4092,vZ_408A,idx4090,idx408E];
          real _f40AB#2 = 0.133333333333e1;
          real _f40AC#2 = 0.666666666667e0;
          tensor[4] a0409B#3 = <tensor[4]>[_f40AB,_f40AC,_f40AC,_f40AB];
          real _f40A7#3 = -0.2e1;
          real _f40A8#2 = 0.e0;
          tensor[4] a1409C#6 = <tensor[4]>[_f40A7,_f40A8,_f40A8,rlit408D];
          real _f40A4#3 = -0.1e1;
          tensor[4] a2409D#3 = <tensor[4]>[rlit4091,_f40A4,_f40A4,rlit4091];
          real _f409F#1 = -0.166666666667e0;
          real _f40A0#2 = 0.5e0;
          real _f40A1#2 = -0.5e0;
          real _f40A2#1 = 0.166666666667e0;
          tensor[4] a3409E#3 = <tensor[4]>[_f409F,_f40A0,_f40A1,_f40A2];
          tensor[4] prod340AF#1 = VMul<4>(kernZ_408C,a3409E);
          tensor[4] sum240B0#1 = VAdd<4>(a2409D,prod340AF);
          tensor[4] prod240B1#1 = VMul<4>(kernZ_408C,sum240B0);
          tensor[4] sum140B2#1 = VAdd<4>(a1409C,prod240B1);
          tensor[4] prod140B3#1 = VMul<4>(kernZ_408C,sum140B2);
          tensor[4] kevalZ_d0_409A#5 = VAdd<4>(a0409B,prod140B3);
          tensor[4] a140D0#6 = <tensor[4]>[rlit408D,_f40A7,_f40A7,rlit408D];
          real _f40D3#1 = 0.15e1;
          real _f40D4#1 = -0.15e1;
          tensor[4] a240D1#3 = <tensor[4]>[_f40A1,_f40D3,_f40D4,_f40A0];
          tensor[4] prod240DE#1 = VMul<4>(kernZ_408C,a240D1);
          tensor[4] sum140DF#1 = VAdd<4>(a140D0,prod240DE);
          tensor[4] prod140E0#1 = VMul<4>(kernZ_408C,sum140DF);
          tensor[4] kevalZ_d1_40CE#3 = VAdd<4>(a1409C,prod140E0);
          real _f40F8#1 = 0.3e1;
          real _f40F9#1 = -0.3e1;
          tensor[4] a140F6#3 = <tensor[4]>[_f40A4,_f40F8,_f40F9,rlit4091];
          tensor[4] prod140FF#1 = VMul<4>(kernZ_408C,a140F6);
          tensor[4] kevalZ_d2_40F4#1 = VAdd<4>(a140D0,prod140FF);
          real vY_410E#4 = VIndex<3,1>(f3EB8);
          real idx4116#1 = RAdd(vY_410E,rlit4091);
          real idx4114#1 = RSub(vY_410E,rlit4091);
          real idx4112#1 = RSub(vY_410E,rlit408D);
          tensor[4] kernY_4110#6 = <tensor[4]>[idx4116,vY_410E,idx4114,idx4112];
          tensor[4] prod34133#1 = VMul<4>(kernY_4110,a3409E);
          tensor[4] sum24134#1 = VAdd<4>(a2409D,prod34133);
          tensor[4] prod24135#1 = VMul<4>(kernY_4110,sum24134);
          tensor[4] sum14136#1 = VAdd<4>(a1409C,prod24135);
          tensor[4] prod14137#1 = VMul<4>(kernY_4110,sum14136);
          tensor[4] kevalY_d0_411E#12 = VAdd<4>(a0409B,prod14137);
          tensor[4] prod24162#1 = VMul<4>(kernY_4110,a240D1);
          tensor[4] sum14163#1 = VAdd<4>(a140D0,prod24162);
          tensor[4] prod14164#1 = VMul<4>(kernY_4110,sum14163);
          tensor[4] kevalY_d1_4152#8 = VAdd<4>(a1409C,prod14164);
          tensor[4] prod14183#1 = VMul<4>(kernY_4110,a140F6);
          tensor[4] kevalY_d2_4178#4 = VAdd<4>(a140D0,prod14183);
          real vX_4192#4 = VIndex<3,0>(f3EB8);
          real idx419A#1 = RAdd(vX_4192,rlit4091);
          real idx4198#1 = RSub(vX_4192,rlit4091);
          real idx4196#1 = RSub(vX_4192,rlit408D);
          tensor[4] kernX_4194#6 = <tensor[4]>[idx419A,vX_4192,idx4198,idx4196];
          tensor[4] prod341B7#1 = VMul<4>(kernX_4194,a3409E);
          tensor[4] sum241B8#1 = VAdd<4>(a2409D,prod341B7);
          tensor[4] prod241B9#1 = VMul<4>(kernX_4194,sum241B8);
          tensor[4] sum141BA#1 = VAdd<4>(a1409C,prod241B9);
          tensor[4] prod141BB#1 = VMul<4>(kernX_4194,sum141BA);
          tensor[4] kevalX_d0_41A2#16 = VAdd<4>(a0409B,prod141BB);
          tensor[4] prod241E6#1 = VMul<4>(kernX_4194,a240D1);
          tensor[4] sum141E7#1 = VAdd<4>(a140D0,prod241E6);
          tensor[4] prod141E8#1 = VMul<4>(kernX_4194,sum141E7);
          tensor[4] kevalX_d1_41D6#16 = VAdd<4>(a1409C,prod141E8);
          tensor[4] prod14207#1 = VMul<4>(kernX_4194,a140F6);
          tensor[4] kevalX_d2_41FC#16 = VAdd<4>(a140D0,prod14207);
          real vdot4227#1 = VDot<4>(kevalX_d2_41FC,v00_3F08);
          real vdot4228#1 = VDot<4>(kevalX_d2_41FC,v01_3F14);
          real vdot4229#1 = VDot<4>(kevalX_d2_41FC,v02_3F20);
          real vdot422A#1 = VDot<4>(kevalX_d2_41FC,v03_3F2C);
          tensor[4] cons_422B#1 = <tensor[4]>[vdot4227,vdot4228,vdot4229,vdot422A];
          real vdot422C#1 = VDot<4>(kevalX_d2_41FC,v10_3F3A);
          real vdot422D#1 = VDot<4>(kevalX_d2_41FC,v11_3F45);
          real vdot422E#1 = VDot<4>(kevalX_d2_41FC,v12_3F50);
          real vdot422F#1 = VDot<4>(kevalX_d2_41FC,v13_3F5B);
          tensor[4] cons_4230#1 = <tensor[4]>[vdot422C,vdot422D,vdot422E,vdot422F];
          real vdot4231#1 = VDot<4>(kevalX_d2_41FC,v20_3F69);
          real vdot4232#1 = VDot<4>(kevalX_d2_41FC,v21_3F74);
          real vdot4233#1 = VDot<4>(kevalX_d2_41FC,v22_3F7F);
          real vdot4234#1 = VDot<4>(kevalX_d2_41FC,v23_3F8A);
          tensor[4] cons_4235#1 = <tensor[4]>[vdot4231,vdot4232,vdot4233,vdot4234];
          real vdot4236#1 = VDot<4>(kevalX_d2_41FC,v30_3F98);
          real vdot4237#1 = VDot<4>(kevalX_d2_41FC,v31_3FA3);
          real vdot4238#1 = VDot<4>(kevalX_d2_41FC,v32_3FAE);
          real vdot4239#1 = VDot<4>(kevalX_d2_41FC,v33_3FB9);
          tensor[4] cons_423A#1 = <tensor[4]>[vdot4236,vdot4237,vdot4238,vdot4239];
          real vdot423B#1 = VDot<4>(kevalY_d0_411E,cons_422B);
          real vdot423C#1 = VDot<4>(kevalY_d0_411E,cons_4230);
          real vdot423D#1 = VDot<4>(kevalY_d0_411E,cons_4235);
          real vdot423E#1 = VDot<4>(kevalY_d0_411E,cons_423A);
          tensor[4] cons_423F#1 = <tensor[4]>[vdot423B,vdot423C,vdot423D,vdot423E];
          real vdot4240#1 = VDot<4>(kevalZ_d0_409A,cons_423F);
          real vdot4241#1 = VDot<4>(kevalX_d1_41D6,v00_3F08);
          real vdot4242#1 = VDot<4>(kevalX_d1_41D6,v01_3F14);
          real vdot4243#1 = VDot<4>(kevalX_d1_41D6,v02_3F20);
          real vdot4244#1 = VDot<4>(kevalX_d1_41D6,v03_3F2C);
          tensor[4] cons_4245#2 = <tensor[4]>[vdot4241,vdot4242,vdot4243,vdot4244];
          real vdot4246#1 = VDot<4>(kevalX_d1_41D6,v10_3F3A);
          real vdot4247#1 = VDot<4>(kevalX_d1_41D6,v11_3F45);
          real vdot4248#1 = VDot<4>(kevalX_d1_41D6,v12_3F50);
          real vdot4249#1 = VDot<4>(kevalX_d1_41D6,v13_3F5B);
          tensor[4] cons_424A#2 = <tensor[4]>[vdot4246,vdot4247,vdot4248,vdot4249];
          real vdot424B#1 = VDot<4>(kevalX_d1_41D6,v20_3F69);
          real vdot424C#1 = VDot<4>(kevalX_d1_41D6,v21_3F74);
          real vdot424D#1 = VDot<4>(kevalX_d1_41D6,v22_3F7F);
          real vdot424E#1 = VDot<4>(kevalX_d1_41D6,v23_3F8A);
          tensor[4] cons_424F#2 = <tensor[4]>[vdot424B,vdot424C,vdot424D,vdot424E];
          real vdot4250#1 = VDot<4>(kevalX_d1_41D6,v30_3F98);
          real vdot4251#1 = VDot<4>(kevalX_d1_41D6,v31_3FA3);
          real vdot4252#1 = VDot<4>(kevalX_d1_41D6,v32_3FAE);
          real vdot4253#1 = VDot<4>(kevalX_d1_41D6,v33_3FB9);
          tensor[4] cons_4254#2 = <tensor[4]>[vdot4250,vdot4251,vdot4252,vdot4253];
          real vdot4255#1 = VDot<4>(kevalY_d1_4152,cons_4245);
          real vdot4256#1 = VDot<4>(kevalY_d1_4152,cons_424A);
          real vdot4257#1 = VDot<4>(kevalY_d1_4152,cons_424F);
          real vdot4258#1 = VDot<4>(kevalY_d1_4152,cons_4254);
          tensor[4] cons_4259#1 = <tensor[4]>[vdot4255,vdot4256,vdot4257,vdot4258];
          real vdot425A#2 = VDot<4>(kevalZ_d0_409A,cons_4259);
          real vdot425B#1 = VDot<4>(kevalY_d0_411E,cons_4245);
          real vdot425C#1 = VDot<4>(kevalY_d0_411E,cons_424A);
          real vdot425D#1 = VDot<4>(kevalY_d0_411E,cons_424F);
          real vdot425E#1 = VDot<4>(kevalY_d0_411E,cons_4254);
          tensor[4] cons_425F#2 = <tensor[4]>[vdot425B,vdot425C,vdot425D,vdot425E];
          real vdot4260#2 = VDot<4>(kevalZ_d1_40CE,cons_425F);
          tensor[3] tensor4261#3 = <tensor[3]>[vdot4240,vdot425A,vdot4260];
          real vdot4262#1 = VDot<4>(kevalX_d0_41A2,v00_3F08);
          real vdot4263#1 = VDot<4>(kevalX_d0_41A2,v01_3F14);
          real vdot4264#1 = VDot<4>(kevalX_d0_41A2,v02_3F20);
          real vdot4265#1 = VDot<4>(kevalX_d0_41A2,v03_3F2C);
          tensor[4] cons_4266#3 = <tensor[4]>[vdot4262,vdot4263,vdot4264,vdot4265];
          real vdot4267#1 = VDot<4>(kevalX_d0_41A2,v10_3F3A);
          real vdot4268#1 = VDot<4>(kevalX_d0_41A2,v11_3F45);
          real vdot4269#1 = VDot<4>(kevalX_d0_41A2,v12_3F50);
          real vdot426A#1 = VDot<4>(kevalX_d0_41A2,v13_3F5B);
          tensor[4] cons_426B#3 = <tensor[4]>[vdot4267,vdot4268,vdot4269,vdot426A];
          real vdot426C#1 = VDot<4>(kevalX_d0_41A2,v20_3F69);
          real vdot426D#1 = VDot<4>(kevalX_d0_41A2,v21_3F74);
          real vdot426E#1 = VDot<4>(kevalX_d0_41A2,v22_3F7F);
          real vdot426F#1 = VDot<4>(kevalX_d0_41A2,v23_3F8A);
          tensor[4] cons_4270#3 = <tensor[4]>[vdot426C,vdot426D,vdot426E,vdot426F];
          real vdot4271#1 = VDot<4>(kevalX_d0_41A2,v30_3F98);
          real vdot4272#1 = VDot<4>(kevalX_d0_41A2,v31_3FA3);
          real vdot4273#1 = VDot<4>(kevalX_d0_41A2,v32_3FAE);
          real vdot4274#1 = VDot<4>(kevalX_d0_41A2,v33_3FB9);
          tensor[4] cons_4275#3 = <tensor[4]>[vdot4271,vdot4272,vdot4273,vdot4274];
          real vdot4276#1 = VDot<4>(kevalY_d2_4178,cons_4266);
          real vdot4277#1 = VDot<4>(kevalY_d2_4178,cons_426B);
          real vdot4278#1 = VDot<4>(kevalY_d2_4178,cons_4270);
          real vdot4279#1 = VDot<4>(kevalY_d2_4178,cons_4275);
          tensor[4] cons_427A#1 = <tensor[4]>[vdot4276,vdot4277,vdot4278,vdot4279];
          real vdot427B#1 = VDot<4>(kevalZ_d0_409A,cons_427A);
          real vdot427C#1 = VDot<4>(kevalY_d1_4152,cons_4266);
          real vdot427D#1 = VDot<4>(kevalY_d1_4152,cons_426B);
          real vdot427E#1 = VDot<4>(kevalY_d1_4152,cons_4270);
          real vdot427F#1 = VDot<4>(kevalY_d1_4152,cons_4275);
          tensor[4] cons_4280#2 = <tensor[4]>[vdot427C,vdot427D,vdot427E,vdot427F];
          real vdot4281#2 = VDot<4>(kevalZ_d1_40CE,cons_4280);
          tensor[3] tensor4282#3 = <tensor[3]>[vdot425A,vdot427B,vdot4281];
          real vdot4283#1 = VDot<4>(kevalY_d0_411E,cons_4266);
          real vdot4284#1 = VDot<4>(kevalY_d0_411E,cons_426B);
          real vdot4285#1 = VDot<4>(kevalY_d0_411E,cons_4270);
          real vdot4286#1 = VDot<4>(kevalY_d0_411E,cons_4275);
          tensor[4] cons_4287#2 = <tensor[4]>[vdot4283,vdot4284,vdot4285,vdot4286];
          real vdot4288#1 = VDot<4>(kevalZ_d2_40F4,cons_4287);
          tensor[3] tensor4289#3 = <tensor[3]>[vdot4260,vdot4281,vdot4288];
          real vdot4302#3 = VDot<3>(tensor4261,tensor3EC1);
          real vdot4304#3 = VDot<3>(tensor4261,tensor3EC5);
          real vdot4306#3 = VDot<3>(tensor4261,tensor3EC9);
          real vdot4309#3 = VDot<3>(tensor4282,tensor3EC1);
          real vdot430A#3 = VDot<3>(tensor4282,tensor3EC5);
          real vdot430B#3 = VDot<3>(tensor4282,tensor3EC9);
          real vdot430E#3 = VDot<3>(tensor4289,tensor3EC1);
          real vdot430F#3 = VDot<3>(tensor4289,tensor3EC5);
          real vdot4310#3 = VDot<3>(tensor4289,tensor3EC9);
          real r4329#1 = RMul(r3EBE,vdot4302);
          real r432C#1 = RMul(r3EBF,vdot4309);
          real r432F#1 = RMul(r3EC0,vdot430E);
          real r4330#1 = RAdd(r4329,r432C);
          real r4331#1 = RAdd(r4330,r432F);
          real r4333#1 = RMul(r3EBE,vdot4304);
          real r4335#1 = RMul(r3EBF,vdot430A);
          real r4337#1 = RMul(r3EC0,vdot430F);
          real r4338#1 = RAdd(r4333,r4335);
          real r4339#1 = RAdd(r4338,r4337);
          real r433B#1 = RMul(r3EBE,vdot4306);
          real r433D#1 = RMul(r3EBF,vdot430B);
          real r433F#1 = RMul(r3EC0,vdot4310);
          real r4340#1 = RAdd(r433B,r433D);
          real r4341#1 = RAdd(r4340,r433F);
          real r4344#1 = RMul(r3EC2,vdot4302);
          real r4346#1 = RMul(r3EC3,vdot4309);
          real r4348#1 = RMul(r3EC4,vdot430E);
          real r4349#1 = RAdd(r4344,r4346);
          real r434A#1 = RAdd(r4349,r4348);
          real r434B#1 = RMul(r3EC2,vdot4304);
          real r434C#1 = RMul(r3EC3,vdot430A);
          real r434D#1 = RMul(r3EC4,vdot430F);
          real r434E#1 = RAdd(r434B,r434C);
          real r434F#1 = RAdd(r434E,r434D);
          real r4350#1 = RMul(r3EC2,vdot4306);
          real r4351#1 = RMul(r3EC3,vdot430B);
          real r4352#1 = RMul(r3EC4,vdot4310);
          real r4353#1 = RAdd(r4350,r4351);
          real r4354#1 = RAdd(r4353,r4352);
          real r4357#1 = RMul(r3EC6,vdot4302);
          real r4359#1 = RMul(r3EC7,vdot4309);
          real r435B#1 = RMul(r3EC8,vdot430E);
          real r435C#1 = RAdd(r4357,r4359);
          real r435D#1 = RAdd(r435C,r435B);
          real r435E#1 = RMul(r3EC6,vdot4304);
          real r435F#1 = RMul(r3EC7,vdot430A);
          real r4360#1 = RMul(r3EC8,vdot430F);
          real r4361#1 = RAdd(r435E,r435F);
          real r4362#1 = RAdd(r4361,r4360);
          real r4363#1 = RMul(r3EC6,vdot4306);
          real r4364#1 = RMul(r3EC7,vdot430B);
          real r4365#1 = RMul(r3EC8,vdot4310);
          real r4366#1 = RAdd(r4363,r4364);
          real r4367#1 = RAdd(r4366,r4365);
          tensor[3,3] _t4326#1 = <tensor[3,3]>[r4331,r4339,r4341,r434A,r434F,r4354,r435D,r4362,r4367];
          (real[3] evals43AD#2,tensor[3][3] E43AE#2) = EigenVecs3x3(_t4326);
          tensor[3] _t43B0#6 = Subscript<tensor[3][3]>(E43AE,idx3EE6);
          real _t43B2#9 = Subscript<real[3]>(evals43AD,idx3EE6);
          tensor[3] _t43B4#6 = Subscript<tensor[3][3]>(E43AE,idx3EE0);
          real _t43B6#9 = Subscript<real[3]>(evals43AD,idx3EE0);
          real r43B9#1 = TensorIndex<tensor[3],[0]>(_t43B0);
          tensor[3] binopV43BA#3 = VScale<3>(r43B9,_t43B0);
          real r43BB#1 = TensorIndex<tensor[3],[1]>(_t43B0);
          tensor[3] binopV43BC#3 = VScale<3>(r43BB,_t43B0);
          real r43BD#1 = TensorIndex<tensor[3],[2]>(_t43B0);
          tensor[3] binopV43BE#3 = VScale<3>(r43BD,_t43B0);
          real r43C8#1 = TensorIndex<tensor[3],[0]>(_t43B4);
          tensor[3] binopV43C9#3 = VScale<3>(r43C8,_t43B4);
          real r43CA#1 = TensorIndex<tensor[3],[1]>(_t43B4);
          tensor[3] binopV43CB#3 = VScale<3>(r43CA,_t43B4);
          real r43CC#1 = TensorIndex<tensor[3],[2]>(_t43B4);
          tensor[3] binopV43CD#3 = VScale<3>(r43CC,_t43B4);
          real r43D7#1 = VIndex<3,0>(binopV43BA);
          real r43D8#1 = RDiv(r43D7,_t43B2);
          real r43D9#1 = VIndex<3,1>(binopV43BA);
          real r43DA#1 = RDiv(r43D9,_t43B2);
          real r43DB#1 = VIndex<3,2>(binopV43BA);
          real r43DC#1 = RDiv(r43DB,_t43B2);
          tensor[3] tensor43DD#1 = <tensor[3]>[r43D8,r43DA,r43DC];
          real r43DE#1 = VIndex<3,0>(binopV43BC);
          real r43DF#1 = RDiv(r43DE,_t43B2);
          real r43E0#1 = VIndex<3,1>(binopV43BC);
          real r43E1#1 = RDiv(r43E0,_t43B2);
          real r43E2#1 = VIndex<3,2>(binopV43BC);
          real r43E3#1 = RDiv(r43E2,_t43B2);
          tensor[3] tensor43E4#1 = <tensor[3]>[r43DF,r43E1,r43E3];
          real r43E5#1 = VIndex<3,0>(binopV43BE);
          real r43E6#1 = RDiv(r43E5,_t43B2);
          real r43E7#1 = VIndex<3,1>(binopV43BE);
          real r43E8#1 = RDiv(r43E7,_t43B2);
          real r43E9#1 = VIndex<3,2>(binopV43BE);
          real r43EA#1 = RDiv(r43E9,_t43B2);
          tensor[3] tensor43EB#1 = <tensor[3]>[r43E6,r43E8,r43EA];
          real r4404#1 = VIndex<3,0>(binopV43C9);
          real r4405#1 = RDiv(r4404,_t43B6);
          real r4406#1 = VIndex<3,1>(binopV43C9);
          real r4407#1 = RDiv(r4406,_t43B6);
          real r4408#1 = VIndex<3,2>(binopV43C9);
          real r4409#1 = RDiv(r4408,_t43B6);
          tensor[3] tensor440A#1 = <tensor[3]>[r4405,r4407,r4409];
          real r440B#1 = VIndex<3,0>(binopV43CB);
          real r440C#1 = RDiv(r440B,_t43B6);
          real r440D#1 = VIndex<3,1>(binopV43CB);
          real r440E#1 = RDiv(r440D,_t43B6);
          real r440F#1 = VIndex<3,2>(binopV43CB);
          real r4410#1 = RDiv(r440F,_t43B6);
          tensor[3] tensor4411#1 = <tensor[3]>[r440C,r440E,r4410];
          real r4412#1 = VIndex<3,0>(binopV43CD);
          real r4413#1 = RDiv(r4412,_t43B6);
          real r4414#1 = VIndex<3,1>(binopV43CD);
          real r4415#1 = RDiv(r4414,_t43B6);
          real r4416#1 = VIndex<3,2>(binopV43CD);
          real r4417#1 = RDiv(r4416,_t43B6);
          tensor[3] tensor4418#1 = <tensor[3]>[r4413,r4415,r4417];
          tensor[3] v4433#1 = VAdd<3>(tensor43DD,tensor440A);
          tensor[3] v4436#1 = VAdd<3>(tensor43E4,tensor4411);
          tensor[3] v4439#1 = VAdd<3>(tensor43EB,tensor4418);
          real vdot4613#1 = VDot<4>(kevalZ_d0_409A,cons_425F);
          real vdot462D#1 = VDot<4>(kevalZ_d0_409A,cons_4280);
          real vdot4633#1 = VDot<4>(kevalZ_d1_40CE,cons_4287);
          tensor[3] TPP45E9#3 = <tensor[3]>[vdot4613,vdot462D,vdot4633];
          real vdot4682#1 = VDot<3>(TPP45E9,tensor3EC1);
          real vdot4684#1 = VDot<3>(TPP45E9,tensor3EC5);
          real vdot4686#1 = VDot<3>(TPP45E9,tensor3EC9);
          tensor[3] probe_l_144680#3 = <tensor[3]>[vdot4682,vdot4684,vdot4686];
          tensor[3] negV4691#1 = VNeg<3>(v4433);
          tensor[3] negV4693#1 = VNeg<3>(v4436);
          tensor[3] negV4695#1 = VNeg<3>(v4439);
          real vdot469F#1 = VDot<3>(negV4691,probe_l_144680);
          real vdot46A1#1 = VDot<3>(negV4693,probe_l_144680);
          real vdot46A3#1 = VDot<3>(negV4695,probe_l_144680);
          tensor[3] _t36A6#1 = <tensor[3]>[vdot469F,vdot46A1,vdot46A3];
          goto JOIN36A7
        ASSIGN46AC:  preds = [COND2D5A]
          bool _t2D5E#1 = false;
          goto JOIN2D5F
        ASSIGN46AD:  preds = [COND2D55]
          bool _t2D61#1 = false;
          goto JOIN2D62
        ASSIGN46AE:  preds = [COND24C1]
          bool _t2D64#1 = false;
          goto JOIN2D65
    end update
    method stabilize
        ENTRY46AF:  preds = []
          tensor[4] rgba46B0#1 = self.rgba;
          tensor[3] rgb46B2#3 = self.rgb;
          real transp46B4#2 = self.transp;
          real _t46B6#2 = 0.1e1;
          bool _t46B8#1 = LT<real>(transp46B4,_t46B6);
          if _t46B8 then goto ASSIGN46BD else goto JOIN46D0
        ASSIGN46BD:  preds = [COND46BA]
          real aa46BB#4 = RSub(_t46B6,transp46B4);
          real _t46BE#1 = VIndex<3,0>(rgb46B2);
          real _t46C0#1 = RDiv(_t46BE,aa46BB);
          real _t46C3#1 = VIndex<3,1>(rgb46B2);
          real _t46C5#1 = RDiv(_t46C3,aa46BB);
          real _t46C8#1 = VIndex<3,2>(rgb46B2);
          real _t46CA#1 = RDiv(_t46C8,aa46BB);
          tensor[4] rgba46CD#1 = <tensor[4]>[_t46C0,_t46C5,_t46CA,aa46BB];
          goto JOIN46D0
        JOIN46D0:  preds = [ASSIGN46CE,COND46BA]
          tensor[4] rgba46CF#1 = phi(rgba46CD,rgba46B0)
          self.rgba = rgba46CF;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY46D3:  preds = []
      int iresU46D4#1 = globals.iresU2187;
      int iresV46D6#1 = globals.iresV2188;
      int _t46D8#2 = 0;
      int _t46DA#2 = 1;
      int _t46DC#1 = ISub(iresV46D6,_t46DA);
      int[] _t46DE#1 = Range(_t46D8,_t46DC);
    FOREACH46E1:  preds = [ASSIGN46DF,NEXT46EA]
      foreach (vi46E0 in _t46DE) on exit goto RETURN46EB
      int _t46E2#1 = ISub(iresU46D4,_t46DA);
      int[] _t46E4#1 = Range(_t46D8,_t46E2);
    FOREACH46E7:  preds = [ASSIGN46E5,NEXT46E9]
      foreach (ui46E6 in _t46E4) on exit goto NEXT46EA
      new ray(ui46E6,vi46E0);
      goto FOREACH46E7
    NEXT46EA:  preds = [FOREACH46E7]
      goto FOREACH46E1
    RETURN46EB:  preds = [FOREACH46E1]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) block;
input femData(Space) 0space0509_intermedateGlobal;
input femData(FemFunc) 0U050B_intermedateGlobal;
input int cellChoice;
input image(IMAGE1D<double[3]>) cmap;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camNear;
input real camFar;
input real camFOV;
input bool camOrtho;
input int iresU;
input int iresV;
input real rayStep;
input real refStep;
input real transp0;
input real thick;
input real fStrTh;
input real fMaskTh;
input real fBias;
input real maxAlpha;
input bool light;
input tensor[4] phong;
input tensor[3] mcNear;
input tensor[3] mcFar;
input tensor[3] litdir;
input tensor[2] cminmax;
input bool analytical;
input image(IMAGE3D<float[]>) umm;
//***** CONST INIT *****
  {
    globals.camEye = PACK(VEC3{4}(0.e0,-0.2e1,0.e0));
    globals.camAt = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    globals.camUp = PACK(VEC3{4}(0.e0,0.e0,0.1e1));
    globals.camNear = -0.4e1;
    globals.camFar = 0.4e1;
    globals.camFOV = 0.1e2;
    globals.camOrtho = false;
    globals.iresU = 100;
    globals.iresV = 100;
    globals.rayStep = 0.1e-3;
    globals.refStep = 0.1e-3;
    globals.transp0 = 0.5e-2;
    globals.thick = 0.1e-1;
    globals.fStrTh = 0.e0;
    globals.fMaskTh = 0.e0;
    globals.fBias = 0.1e0;
    globals.maxAlpha = 0.1e1;
    globals.light = false;
    globals.phong = PACK(VEC4(0.1e0,0.7e0,0.2e0,0.1e3));
    vec3{4} v_4 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    globals.mcNear = PACK(v_4);
    globals.mcFar = PACK(v_4);
    globals.litdir = PACK(VEC3{4}(0.e0,-0.1e1,0.e0));
    globals.cminmax = PACK(VEC2(0.e0,0.e0));
    globals.analytical = true;
  }
//***** GLOBALS *****
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camDist;
global real camVmax;
global real camUmax;
global real camNearVsp;
global real camFarVsp;
global tensor[3] litwsp;
global int _t;
global femData(Space) _tX;
global femData(FemFunc) _tXX;
//***** FUNCTIONS *****
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_9;
    l__t_9 = <femData(MeshCell)[]>{};
    for i__t_10 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.block),1) {
      l__t_9 = Append<femData(MeshCell),femData(MeshCell)>(l__t_9,LoadFem<femData(MeshCell)>(globals.block,i__t_10));
    }
    femData(FuncCell) l__t_11 = LoadFem<femData(FuncCell)>(LoadFem<femData(FemFunc)>(globals.0U050B_intermedateGlobal,LoadFem<femData(Space)>(globals.0space0509_intermedateGlobal,globals.block)),ExtractFemItem<int,CellIndex(MeshCell)>(Subscript<femData(MeshCell)[]>(l__t_9,globals.cellChoice)));
    femData(FemFunc) l__t_12 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_11);
    vec3{4} v_13 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_14 = Sqrt(VDot<3,4>(v_13,v_13));
    real l_op1_e3_l_9_15 = RDiv(0.1e1,l_op1_e3_l_7_14);
    vec3{4} v_16 = VScale<3,4>(l_op1_e3_l_9_15,v_13);
    globals.camN = PACK(v_16);
    real l_r_18 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_19 = RMul(0.e0,l_r_18);
    real l_r_20 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_21 = RMul(0.e0,l_r_20);
    real l_r_22 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_23 = RMul(0.e0,l_r_22);
    real l_r_24 = RAdd(l_r_19,l_r_21);
    real l_r_25 = RAdd(l_r_24,l_r_23);
    real l_vdot_26 = VDot<3,4>(v_13,VEC3{4}(l_r_25,RAdd(l_r_24,RMul(0.1e1,l_r_22)),RAdd(RAdd(l_r_19,RMul(-0.1e1,l_r_20)),l_r_23)));
    real l_vdot_27 = VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_24,RMul(-0.1e1,l_r_22)),l_r_25,RAdd(RAdd(RMul(0.1e1,l_r_18),l_r_21),l_r_23)));
    real l_vdot_28 = VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_19,RMul(0.1e1,l_r_20)),l_r_23),RAdd(RAdd(RMul(-0.1e1,l_r_18),l_r_21),l_r_23),l_r_25));
    vec3{4} v_29 = VEC3{4}(l_vdot_26,l_vdot_27,l_vdot_28);
    real l_op1_e3_l_38_30 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_15,l_op1_e3_l_9_15),VDot<3,4>(v_29,v_29))));
    vec3{4} v_31 = VScale<3,4>(l_op1_e3_l_38_30,VScale<3,4>(l_op1_e3_l_9_15,v_29));
    globals.camU = PACK(v_31);
    real l_r_33 = RMul(0.e0,l_vdot_26);
    real l_r_34 = RMul(0.e0,l_vdot_27);
    real l_r_35 = RMul(0.e0,l_vdot_28);
    real l_r_36 = RAdd(l_r_33,l_r_34);
    real l_r_37 = RAdd(l_r_36,l_r_35);
    vec3{4} v_38 = VScale<3,4>(l_op1_e3_l_9_15,VEC3{4}(VDot<3,4>(v_13,VEC3{4}(l_r_37,RAdd(l_r_36,RMul(0.1e1,l_vdot_28)),RAdd(RAdd(l_r_33,RMul(-0.1e1,l_vdot_27)),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_36,RMul(-0.1e1,l_vdot_28)),l_r_37,RAdd(RAdd(RMul(0.1e1,l_vdot_26),l_r_34),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_33,RMul(0.1e1,l_vdot_27)),l_r_35),RAdd(RAdd(RMul(-0.1e1,l_vdot_26),l_r_34),l_r_35),l_r_37))));
    real l_r_39 = RMul(l_op1_e3_l_9_15,l_op1_e3_l_38_30);
    real l_r_40 = RMul(l_r_39,VIndex<3,4,0>(v_38));
    real l_r_41 = RMul(l_r_39,VIndex<3,4,1>(v_38));
    real l_r_42 = RMul(l_r_39,VIndex<3,4,2>(v_38));
    globals.camV = PACK(VEC3{4}(l_r_40,l_r_41,l_r_42));
    globals.camDist = l_op1_e3_l_7_14;
    real l_op1_e3_l_10_44 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_44,l_op1_e3_l_7_14);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_44),l_op1_e3_l_7_14),IntToReal(globals.iresV));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_7_14);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_7_14);
    real l_r_45 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.litdir));
    real l_r_46 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.litdir));
    real l_r_47 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.litdir));
    globals.litwsp = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.litdir)),LOAD_0(TensorRef<[3]>(globals.litdir))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_31),l_r_45),RMul(l_r_40,l_r_46)),RMul(VIndex<3,4,0>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_31),l_r_45),RMul(l_r_41,l_r_46)),RMul(VIndex<3,4,1>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_31),l_r_45),RMul(l_r_42,l_r_46)),RMul(VIndex<3,4,2>(v_16),l_r_47)))));
    globals._t = ExtractFemItem<int,CellIndex(FuncCell)>(l__t_11);
    globals._tX = ExtractFem<femData(Space),femData(FemFunc)>(l__t_12);
    globals._tXX = l__t_12;
  }
//***** STRAND *****
strand ray (int p_ui_49,int p_vi_50) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] UV;
  tensor[3] rayOrig;
  tensor[3] rayVec;
  real alphaFix;
  tensor[3] eyeDir;
  real phKa;
  real phKd;
  real phKs;
  real phSp;
  varying output tensor[4] rgba;
  output real raw;
  varying tensor[3] rgb;
  varying real transp;
  initialize (globals) {
    vec3{4} v_59;
    vec3{4} v_57;
    real l_op1_e3_l_9_51 = RNeg(globals.camUmax);
    real l_rayU_52 = RAdd(l_op1_e3_l_9_51,RMul(RDiv(RSub(IntToReal(p_ui_49),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_51)));
    real l_op1_e3_l_9_53 = RNeg(globals.camVmax);
    real l_rayV_54 = RAdd(l_op1_e3_l_9_53,RMul(RDiv(RSub(IntToReal(p_vi_50),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_53)));
    vec3{4} v_55 = VAdd<3,4>(VScale<3,4>(l_rayU_52,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_54,LOAD_0(TensorRef<[3]>(globals.camV))));
    vec3{4} v_56 = v_55;
    if (globals.camOrtho) {
      v_57 = v_56;
    } else {
      v_57 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_58 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_57);
    if (globals.camOrtho) {
      v_59 = VEC3{4}(0.e0,0.e0,0.e0);
    } else {
      real l_r_60 = RDiv(0.1e1,globals.camDist);
      v_59 = VEC3{4}(RMul(l_r_60,VIndex<3,4,0>(v_56)),RMul(l_r_60,VIndex<3,4,1>(v_56)),RMul(l_r_60,VIndex<3,4,2>(v_56)));
    }
    vec3{4} v_61 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),v_59);
    real l_op1_e3_l_7_62 = Sqrt(VDot<3,4>(v_61,v_61));
    self.rayU = l_rayU_52;
    self.rayV = l_rayV_54;
    self.rayN = globals.camNearVsp;
    self.UV = PACK(v_56);
    self.rayOrig = PACK(v_58);
    self.rayVec = PACK(v_61);
    self.alphaFix = RDiv(RMul(globals.rayStep,l_op1_e3_l_7_62),globals.refStep);
    self.eyeDir = PACK(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_7_62),v_61)));
    self.phKa = VIndex<4,4,0>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phKd = VIndex<4,4,1>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phKs = VIndex<4,4,2>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phSp = VIndex<4,4,3>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.rgba = PACK(VEC4(0.e0,0.e0,0.e0,0.e0));
    self.raw = 0.e0;
    self.rgb = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    self.transp = 0.1e1;
  }
  update (globals) {
    real l_transp_1196;
    vec3{4} v_1184;
    real l_scomp_964;
    vec3{4} v_835;
    bool l__t_449;
    real l_rayN_69 = RAdd(self.rayN,globals.rayStep);
    if (GT<real>(l_rayN_69,globals.camFarVsp)) {
      self.rayN = l_rayN_69;
      stabilize;
    }
    vec3{4} v_70 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_69,LOAD_0(TensorRef<[3]>(self.rayVec))));
    tensor[3] _arg_71 = PACK(v_70);
    vec3{4} v_72 = v_70;
    if (ExtractFemItemN<[femData(Mesh),tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),"","",[],int>(ExtractFemItem<femData(RefCell),RefCell(Mesh)>(globals.block),_arg_71,0.1e-8)) {
      bool l__t_448;
      int l_mulRes_73 = IMul(globals._t,84);
      int t_74 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_73);
      int t_75 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,1));
      int t_76 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,2));
      int t_77 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,3));
      int t_78 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,4));
      int t_79 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,5));
      int t_80 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,6));
      int t_81 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,7));
      int t_82 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,8));
      int t_83 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,9));
      int t_84 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,10));
      int t_85 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,11));
      int t_86 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,12));
      int t_87 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,13));
      int t_88 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,14));
      int t_89 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,15));
      int t_90 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,16));
      int t_91 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,17));
      int t_92 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,18));
      int t_93 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,19));
      int t_94 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,20));
      int t_95 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,21));
      int t_96 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,22));
      int t_97 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,23));
      int t_98 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,24));
      int t_99 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,25));
      int t_100 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,26));
      int t_101 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,27));
      int t_102 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,28));
      int t_103 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,29));
      int t_104 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,30));
      int t_105 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,31));
      int t_106 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,32));
      int t_107 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,33));
      int t_108 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,34));
      int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,35));
      int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,36));
      int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,37));
      int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,38));
      int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,39));
      int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,40));
      int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,41));
      int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,42));
      int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,43));
      int t_118 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,44));
      int t_119 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,45));
      int t_120 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,46));
      int t_121 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,47));
      int t_122 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,48));
      int t_123 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,49));
      int t_124 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,50));
      int t_125 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,51));
      int t_126 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,52));
      int t_127 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,53));
      int t_128 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,54));
      int t_129 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,55));
      int t_130 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,56));
      int t_131 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,57));
      int t_132 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,58));
      int t_133 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,59));
      int t_134 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,60));
      int t_135 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,61));
      int t_136 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,62));
      int t_137 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,63));
      int t_138 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,64));
      int t_139 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,65));
      int t_140 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,66));
      int t_141 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,67));
      int t_142 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,68));
      int t_143 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,69));
      int t_144 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,70));
      int t_145 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,71));
      int t_146 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,72));
      int t_147 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,73));
      int t_148 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,74));
      int t_149 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,75));
      int t_150 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,76));
      int t_151 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,77));
      int t_152 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,78));
      int t_153 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,79));
      int t_154 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,80));
      int t_155 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,81));
      int t_156 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,82));
      int t_157 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,83));
      real t_158 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_157));
      real t_159 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_156));
      real t_160 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_155));
      real t_161 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_154));
      real t_162 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_153));
      real t_163 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_152));
      real t_164 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_151));
      real t_165 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_150));
      real t_166 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_149));
      real t_167 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_148));
      real t_168 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_147));
      real t_169 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_146));
      real t_170 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_145));
      real t_171 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_144));
      real t_172 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_143));
      real t_173 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_142));
      real t_174 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_141));
      real t_175 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_140));
      real t_176 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_139));
      real t_177 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_138));
      real t_178 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_137));
      real t_179 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_136));
      real t_180 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_135));
      real t_181 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_134));
      real t_182 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_133));
      real t_183 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_132));
      real t_184 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_131));
      real t_185 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_130));
      real t_186 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_129));
      real t_187 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_128));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_127));
      real t_189 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_126));
      real t_190 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_125));
      real t_191 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_124));
      real t_192 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_123));
      real t_193 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_122));
      real t_194 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_121));
      real t_195 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_120));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_119));
      real t_197 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_118));
      real t_198 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_117));
      real t_199 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_116));
      real t_200 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_115));
      real t_201 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_114));
      real t_202 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_113));
      real t_203 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_112));
      real t_204 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_111));
      real t_205 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_110));
      real t_206 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_109));
      real t_207 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_108));
      real t_208 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_107));
      real t_209 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_106));
      real t_210 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_105));
      real t_211 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_104));
      real t_212 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_103));
      real t_213 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_102));
      real t_214 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_101));
      real t_215 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_100));
      real t_216 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_99));
      real t_217 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_98));
      real t_218 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_97));
      real t_219 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_96));
      real t_220 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_95));
      real t_221 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_94));
      real t_222 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_93));
      real t_223 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_92));
      real t_224 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_91));
      real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_90));
      real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_89));
      real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_88));
      real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_87));
      real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_86));
      real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_85));
      real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_84));
      real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_83));
      real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_82));
      real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_81));
      real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_80));
      real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_79));
      real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_78));
      real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_77));
      real t_239 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_76));
      real t_240 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_75));
      real t_241 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_74));
      vec4 v_242 = VEC4(t_241,t_240,t_239,t_238);
      vec4 v_243 = VEC4(t_237,t_236,t_235,t_234);
      vec4 v_244 = VEC4(t_233,t_232,t_231,t_230);
      vec4 v_245 = VEC4(t_229,t_228,t_227,t_226);
      vec4 v_246 = VEC4(t_225,t_224,t_223,t_222);
      vec4 v_247 = VEC4(t_221,t_220,t_219,t_218);
      vec4 v_248 = VEC4(t_217,t_216,t_215,t_214);
      vec4 v_249 = VEC4(t_213,t_212,t_211,t_210);
      vec4 v_250 = VEC4(t_209,t_208,t_207,t_206);
      vec4 v_251 = VEC4(t_205,t_204,t_203,t_202);
      vec4 v_252 = VEC4(t_201,t_200,t_199,t_198);
      vec4 v_253 = VEC4(t_197,t_196,t_195,t_194);
      vec4 v_254 = VEC4(t_193,t_192,t_191,t_190);
      vec4 v_255 = VEC4(t_189,t_188,t_187,t_186);
      vec4 v_256 = VEC4(t_185,t_184,t_183,t_182);
      vec4 v_257 = VEC4(t_181,t_180,t_179,t_178);
      vec4 v_258 = VEC4(t_177,t_176,t_175,t_174);
      vec4 v_259 = VEC4(t_173,t_172,t_171,t_170);
      vec4 v_260 = VEC4(t_169,t_168,t_167,t_166);
      vec4 v_261 = VEC4(t_165,t_164,t_163,t_162);
      vec4 v_262 = VEC4(t_161,t_160,t_159,t_158);
      real l_varAcc_263 = VIndex<3,4,0>(v_72);
      real l_varAcc_264 = VIndex<3,4,1>(v_72);
      real l_varAcc_265 = VIndex<3,4,2>(v_72);
      real l_prod_266 = RMul(0.1e1,0.1e1);
      real l_prod_267 = RMul(0.1e1,l_prod_266);
      real l_basisEval_268 = RMul(0.2e1,l_prod_267);
      real l_prod_269 = RMul(0.1e1,l_varAcc_265);
      real l_prod_270 = RMul(0.1e1,l_prod_269);
      real l_basisEval_271 = RMul(0.2e1,l_prod_270);
      real l_prod_272 = RMul(l_varAcc_264,0.1e1);
      real l_prod_273 = RMul(0.1e1,l_prod_272);
      real l_basisEval_274 = RMul(0.2e1,l_prod_273);
      real l_prod_275 = RMul(l_varAcc_263,l_prod_266);
      real l_prod2_276 = RMul(l_varAcc_265,l_varAcc_265);
      real l_prod_277 = RMul(0.1e1,l_prod2_276);
      real l_prod_278 = RMul(0.1e1,l_prod_277);
      real l_basisEval_279 = RMul(0.2e1,l_prod_278);
      real l_prod_280 = RMul(l_varAcc_264,l_varAcc_265);
      real l_prod_281 = RMul(0.1e1,l_prod_280);
      real l_basisEval_282 = RMul(0.2e1,l_prod_281);
      real l_prod2_283 = RMul(l_varAcc_264,l_varAcc_264);
      real l_prod_284 = RMul(l_prod2_283,0.1e1);
      real l_prod_285 = RMul(0.1e1,l_prod_284);
      real l_basisEval_286 = RMul(0.2e1,l_prod_285);
      real l_prod_287 = RMul(l_varAcc_263,l_prod_269);
      real l_basisEval_288 = RMul(0.6e1,l_prod_287);
      real l_prod_289 = RMul(l_varAcc_263,l_prod_272);
      real l_basisEval_290 = RMul(0.6e1,l_prod_289);
      real l_prod2_291 = RMul(l_varAcc_263,l_varAcc_263);
      real l_prod_292 = RMul(l_prod2_291,l_prod_266);
      real l_prod3_293 = RMul(l_prod2_276,l_varAcc_265);
      real l_prod_294 = RMul(0.1e1,l_prod3_293);
      real l_prod_295 = RMul(0.1e1,l_prod_294);
      real l_basisEval_296 = RMul(0.2e1,l_prod_295);
      real l_prod_297 = RMul(l_varAcc_264,l_prod2_276);
      real l_prod_298 = RMul(0.1e1,l_prod_297);
      real l_basisEval_299 = RMul(0.2e1,l_prod_298);
      real l_prod_300 = RMul(l_prod2_283,l_varAcc_265);
      real l_prod_301 = RMul(0.1e1,l_prod_300);
      real l_basisEval_302 = RMul(0.2e1,l_prod_301);
      real l_prod3_303 = RMul(l_prod2_283,l_varAcc_264);
      real l_prod_304 = RMul(l_prod3_303,0.1e1);
      real l_prod_305 = RMul(0.1e1,l_prod_304);
      real l_basisEval_306 = RMul(0.2e1,l_prod_305);
      real l_prod_307 = RMul(l_varAcc_263,l_prod_277);
      real l_basisEval_308 = RMul(0.6e1,l_prod_307);
      real l_prod_309 = RMul(l_varAcc_263,l_prod_280);
      real l_basisEval_310 = RMul(0.6e1,l_prod_309);
      real l_prod_311 = RMul(l_varAcc_263,l_prod_284);
      real l_basisEval_312 = RMul(0.6e1,l_prod_311);
      real l_prod_313 = RMul(l_prod2_291,l_prod_269);
      real l_prod_314 = RMul(l_prod2_291,l_prod_272);
      real l_prod3_315 = RMul(l_prod2_291,l_varAcc_263);
      real l_prod_316 = RMul(l_prod3_315,l_prod_266);
      real l_prod4_317 = RMul(l_prod3_293,l_varAcc_265);
      real l_prod_318 = RMul(0.1e1,l_prod4_317);
      real l_prod_319 = RMul(0.1e1,l_prod_318);
      real l_basisEval_320 = RMul(0.2e1,l_prod_319);
      real l_prod_321 = RMul(l_varAcc_264,l_prod3_293);
      real l_prod_322 = RMul(0.1e1,l_prod_321);
      real l_basisEval_323 = RMul(0.2e1,l_prod_322);
      real l_prod_324 = RMul(l_prod2_283,l_prod2_276);
      real l_prod_325 = RMul(0.1e1,l_prod_324);
      real l_prod_326 = RMul(l_prod3_303,l_varAcc_265);
      real l_prod_327 = RMul(0.1e1,l_prod_326);
      real l_basisEval_328 = RMul(0.2e1,l_prod_327);
      real l_prod4_329 = RMul(l_prod3_303,l_varAcc_264);
      real l_prod_330 = RMul(l_prod4_329,0.1e1);
      real l_prod_331 = RMul(0.1e1,l_prod_330);
      real l_basisEval_332 = RMul(0.2e1,l_prod_331);
      real l_prod_333 = RMul(l_varAcc_263,l_prod_294);
      real l_prod_334 = RMul(l_varAcc_263,l_prod_297);
      real l_basisEval_335 = RMul(0.6e1,l_prod_334);
      real l_prod_336 = RMul(l_varAcc_263,l_prod_300);
      real l_basisEval_337 = RMul(0.6e1,l_prod_336);
      real l_prod_338 = RMul(l_varAcc_263,l_prod_304);
      real l_prod_339 = RMul(l_prod2_291,l_prod_277);
      real l_basisEval_340 = RMul(0.12e2,l_prod_339);
      real l_prod_341 = RMul(l_prod2_291,l_prod_280);
      real l_prod_342 = RMul(l_prod2_291,l_prod_284);
      real l_basisEval_343 = RMul(0.12e2,l_prod_342);
      real l_prod_344 = RMul(l_prod3_315,l_prod_269);
      real l_prod_345 = RMul(l_prod3_315,l_prod_272);
      real l_prod4_346 = RMul(l_prod3_315,l_varAcc_263);
      real l_prod_347 = RMul(l_prod4_346,l_prod_266);
      real l_basisEval_348 = RMul(0.1e1,l_prod_267);
      real l_basisEval_349 = RMul(0.1e1,l_prod_270);
      real l_basisEval_350 = RMul(0.2e1,l_prod_275);
      real l_basisEval_351 = RMul(0.1e1,l_prod_278);
      real l_basisEval_352 = RMul(0.3e1,l_prod_285);
      real l_basisEval_353 = RMul(0.2e1,l_prod_287);
      real l_basisEval_354 = RMul(0.3e1,l_prod_292);
      real l_basisEval_355 = RMul(0.1e1,l_prod_295);
      real l_basisEval_356 = RMul(0.3e1,l_prod_301);
      real l_basisEval_357 = RMul(0.4e1,l_prod_305);
      real l_basisEval_358 = RMul(0.2e1,l_prod_307);
      real l_basisEval_359 = RMul(0.4e1,l_prod_309);
      real l_basisEval_360 = RMul(0.3e1,l_prod_313);
      real l_basisEval_361 = RMul(0.6e1,l_prod_314);
      real l_basisEval_362 = RMul(0.4e1,l_prod_316);
      real l_basisEval_363 = RMul(0.1e1,l_prod_319);
      real l_basisEval_364 = RMul(0.3e1,l_prod_325);
      real l_basisEval_365 = RMul(0.4e1,l_prod_327);
      real l_basisEval_366 = RMul(0.5e1,l_prod_331);
      real l_basisEval_367 = RMul(0.2e1,l_prod_333);
      real l_basisEval_368 = RMul(0.3e1,l_prod_339);
      real l_basisEval_369 = RMul(0.6e1,l_prod_341);
      real l_basisEval_370 = RMul(0.4e1,l_prod_344);
      real l_basisEval_371 = RMul(0.5e1,l_prod_347);
      real l_basisEval_372 = RMul(0.1e1,l_prod_273);
      real l_basisEval_373 = RMul(0.3e1,l_prod_278);
      real l_basisEval_374 = RMul(0.1e1,l_prod_285);
      real l_basisEval_375 = RMul(0.2e1,l_prod_289);
      real l_basisEval_376 = RMul(0.4e1,l_prod_295);
      real l_basisEval_377 = RMul(0.3e1,l_prod_298);
      real l_basisEval_378 = RMul(0.1e1,l_prod_305);
      real l_basisEval_379 = RMul(0.2e1,l_prod_311);
      real l_basisEval_380 = RMul(0.6e1,l_prod_313);
      real l_basisEval_381 = RMul(0.3e1,l_prod_314);
      real l_basisEval_382 = RMul(0.5e1,l_prod_319);
      real l_basisEval_383 = RMul(0.4e1,l_prod_322);
      real l_basisEval_384 = RMul(0.1e1,l_prod_331);
      real l_basisEval_385 = RMul(0.2e1,l_prod_338);
      real l_basisEval_386 = RMul(0.3e1,l_prod_342);
      real l_basisEval_387 = RMul(0.4e1,l_prod_345);
      real l_basisEval_388 = RMul(0.6e1,l_prod_281);
      real l_basisEval_389 = RMul(0.2e1,l_prod_292);
      real l_basisEval_390 = RMul(0.6e1,l_prod_298);
      real l_basisEval_391 = RMul(0.2e1,l_prod_313);
      real l_basisEval_392 = RMul(0.2e1,l_prod_316);
      real l_basisEval_393 = RMul(0.12e2,l_prod_325);
      real l_basisEval_394 = RMul(0.2e1,l_prod_344);
      real l_basisEval_395 = RMul(0.2e1,l_prod_347);
      real l_basisEval_396 = RMul(0.1e1,l_prod_275);
      real l_basisEval_397 = RMul(0.1e1,l_prod_292);
      real l_basisEval_398 = RMul(0.6e1,l_prod_301);
      real l_basisEval_399 = RMul(0.3e1,l_prod_307);
      real l_basisEval_400 = RMul(0.3e1,l_prod_311);
      real l_basisEval_401 = RMul(0.2e1,l_prod_314);
      real l_basisEval_402 = RMul(0.1e1,l_prod_316);
      real l_basisEval_403 = RMul(0.4e1,l_prod_333);
      real l_basisEval_404 = RMul(0.4e1,l_prod_338);
      real l_basisEval_405 = RMul(0.2e1,l_prod_345);
      real l_basisEval_406 = RMul(0.1e1,l_prod_347);
      real l_vdot_407 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_348,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_274,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_351,l_basisEval_282)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_352,0.e0,l_basisEval_353,RMul(0.4e1,l_prod_289))),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_354,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_355,l_basisEval_299)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_356,l_basisEval_357,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_359,l_basisEval_312,0.e0,l_basisEval_360)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_361,0.e0,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_366,0.e0,l_basisEval_367,RMul(0.4e1,l_prod_334))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_337,RMul(0.8e1,l_prod_338),0.e0,l_basisEval_368)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_369,RMul(0.9e1,l_prod_342),0.e0,l_basisEval_370)),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.8e1,l_prod_345),0.e0,l_basisEval_371,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_408 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_372)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_373,l_basisEval_282,l_basisEval_374)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,RMul(0.4e1,l_prod_287),l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_354,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_376,l_basisEval_377,l_basisEval_302)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_378,0.e0,l_basisEval_308,l_basisEval_359)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_379,0.e0,l_basisEval_380,l_basisEval_381)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_362,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.8e1,l_prod_333),l_basisEval_335,RMul(0.4e1,l_prod_336))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_385,0.e0,RMul(0.9e1,l_prod_339),l_basisEval_369)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_386,0.e0,RMul(0.8e1,l_prod_344),l_basisEval_387)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_371,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_409 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_274,0.e0,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_373,RMul(0.4e1,l_prod_281),l_basisEval_352)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_353,l_basisEval_375)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_376,l_basisEval_390,l_basisEval_398,l_basisEval_357)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_399,l_basisEval_359)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_400,0.e0,0.e0,l_basisEval_391)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_401,0.e0,0.e0,l_basisEval_402)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_382,RMul(0.8e1,l_prod_322),RMul(0.9e1,l_prod_325))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.8e1,l_prod_327),l_basisEval_366,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_403,l_basisEval_335,l_basisEval_337,l_basisEval_404)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,0.e0,l_basisEval_368,RMul(0.4e1,l_prod_341))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_386,0.e0,0.e0,l_basisEval_394)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_405,0.e0,0.e0,l_basisEval_406)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_410 = <tensor[3,3]>[RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_271,l_basisEval_274,RMul(0.6e1,l_prod_275))),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_279,l_basisEval_282,l_basisEval_286)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_288,l_basisEval_290,RMul(0.12e2,l_prod_292),0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_296,l_basisEval_299)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_302,l_basisEval_306,l_basisEval_308,l_basisEval_310)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_312,RMul(0.12e2,l_prod_313),RMul(0.12e2,l_prod_314),RMul(0.20e2,l_prod_316))),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_320,l_basisEval_323,RMul(0.2e1,l_prod_325))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_328,l_basisEval_332,RMul(0.6e1,l_prod_333),l_basisEval_335)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_337,RMul(0.6e1,l_prod_338),l_basisEval_340,RMul(0.12e2,l_prod_341))),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_343,RMul(0.20e2,l_prod_344),RMul(0.20e2,l_prod_345),RMul(0.30e2,l_prod_347))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_407,l_vdot_408,l_vdot_407,RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_271,RMul(0.6e1,l_prod_273),0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_350,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,l_basisEval_279,l_basisEval_388)),RAdd(VDot<4,4>(v_248,VEC4(RMul(0.12e2,l_prod_285),0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_290,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,l_basisEval_296,l_basisEval_390,RMul(0.12e2,l_prod_301))),RAdd(VDot<4,4>(v_252,VEC4(RMul(0.20e2,l_prod_305),0.e0,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_310,RMul(0.12e2,l_prod_311),0.e0,0.e0)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_391,l_basisEval_361,0.e0,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_392,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,l_basisEval_320,RMul(0.6e1,l_prod_322))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_393,RMul(0.20e2,l_prod_327),RMul(0.30e2,l_prod_331),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,l_basisEval_367,l_basisEval_335,RMul(0.12e2,l_prod_336))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.20e2,l_prod_338),0.e0,0.e0,RMul(0.2e1,l_prod_339))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_369,l_basisEval_343,0.e0,0.e0)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_394,RMul(0.6e1,l_prod_345),0.e0,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_395,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_409,l_vdot_408,l_vdot_409,RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_270),l_basisEval_274)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(RMul(0.12e2,l_prod_278),l_basisEval_388,l_basisEval_286,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_288,l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_389,0.e0,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_295))),RAdd(VDot<4,4>(v_251,VEC4(RMul(0.12e2,l_prod_298),l_basisEval_398,l_basisEval_306,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,RMul(0.12e2,l_prod_307),l_basisEval_310,l_basisEval_379)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_380,l_basisEval_401)),RAdd(VDot<4,4>(v_254,VEC4(0.e0,0.e0,l_basisEval_392,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.30e2,l_prod_319),RMul(0.20e2,l_prod_322),l_basisEval_393,RMul(0.6e1,l_prod_327))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_332,0.e0,0.e0,RMul(0.20e2,l_prod_333))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.12e2,l_prod_334),l_basisEval_337,l_basisEval_385,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_340,l_basisEval_369,RMul(0.2e1,l_prod_342))),RAdd(VDot<4,4>(v_260,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_344),l_basisEval_405)),RAdd(VDot<4,4>(v_261,VEC4(0.e0,0.e0,l_basisEval_395,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      real[3] l__t_411 = EigenVals3x3(TensorRef<[3,3]>(t_410));
      real l_basisEval_412 = RMul(0.2e1,l_prod_309);
      real l_basisEval_413 = RMul(0.2e1,l_prod_334);
      real l_basisEval_414 = RMul(0.2e1,l_prod_336);
      real l_prod_415 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_317,l_varAcc_265)));
      real l_basisEval_416 = RMul(0.1e1,l_prod_415);
      real l_prod_417 = RMul(0.1e1,RMul(l_varAcc_264,l_prod4_317));
      real l_prod_418 = RMul(0.1e1,RMul(l_prod2_283,l_prod3_293));
      real l_prod_419 = RMul(0.1e1,RMul(l_prod3_303,l_prod2_276));
      real l_prod_420 = RMul(0.1e1,RMul(l_prod4_329,l_varAcc_265));
      real l_prod_421 = RMul(0.1e1,RMul(RMul(l_prod4_329,l_varAcc_264),0.1e1));
      real l_basisEval_422 = RMul(0.1e1,l_prod_421);
      real l_prod_423 = RMul(l_varAcc_263,l_prod_318);
      real l_prod_424 = RMul(l_varAcc_263,l_prod_321);
      real l_basisEval_425 = RMul(0.2e1,l_prod_424);
      real l_prod_426 = RMul(l_varAcc_263,l_prod_324);
      real l_prod_427 = RMul(l_varAcc_263,l_prod_326);
      real l_basisEval_428 = RMul(0.2e1,l_prod_427);
      real l_prod_429 = RMul(l_varAcc_263,l_prod_330);
      real l_prod_430 = RMul(l_prod2_291,l_prod_294);
      real l_prod_431 = RMul(l_prod2_291,l_prod_297);
      real l_basisEval_432 = RMul(0.3e1,l_prod_431);
      real l_prod_433 = RMul(l_prod2_291,l_prod_300);
      real l_basisEval_434 = RMul(0.3e1,l_prod_433);
      real l_prod_435 = RMul(l_prod2_291,l_prod_304);
      real l_prod_436 = RMul(l_prod3_315,l_prod_277);
      real l_prod_437 = RMul(l_prod3_315,l_prod_280);
      real l_prod_438 = RMul(l_prod3_315,l_prod_284);
      real l_prod_439 = RMul(l_prod4_346,l_prod_269);
      real l_prod_440 = RMul(l_prod4_346,l_prod_272);
      real l_prod_441 = RMul(RMul(l_prod4_346,l_varAcc_263),l_prod_266);
      real l_basisEval_442 = RMul(0.2e1,l_prod_341);
      real l_basisEval_443 = RMul(0.3e1,l_prod_426);
      real l_basisEval_444 = RMul(0.2e1,l_prod_437);
      real l_basisEval_445 = RMul(0.1e1,l_prod_441);
      vec3{4} v_446 = VEC3{4}(RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_372,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_351,RMul(0.1e1,l_prod_281))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_374,l_basisEval_353,l_basisEval_375,l_basisEval_354)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_355,RMul(0.1e1,l_prod_298),RMul(0.1e1,l_prod_301))),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_378,l_basisEval_358,l_basisEval_412,l_basisEval_379)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_360,l_basisEval_381,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_363,RMul(0.1e1,l_prod_322),RMul(0.1e1,l_prod_325))),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_327),l_basisEval_384,l_basisEval_367,l_basisEval_413)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_414,l_basisEval_385,l_basisEval_368,RMul(0.3e1,l_prod_341))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_386,l_basisEval_370,l_basisEval_387,l_basisEval_371)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_416)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_417),RMul(0.1e1,l_prod_418),RMul(0.1e1,l_prod_419),RMul(0.1e1,l_prod_420))),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_422,RMul(0.2e1,l_prod_423),l_basisEval_425,RMul(0.2e1,l_prod_426))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_428,RMul(0.2e1,l_prod_429),RMul(0.3e1,l_prod_430),l_basisEval_432)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_434,RMul(0.3e1,l_prod_435),RMul(0.4e1,l_prod_436),RMul(0.4e1,l_prod_437))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.4e1,l_prod_438),RMul(0.5e1,l_prod_439),RMul(0.5e1,l_prod_440),RMul(0.6e1,l_prod_441))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_349,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_396,0.e0,0.e0,l_basisEval_351)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_282,l_basisEval_352,0.e0,RMul(0.1e1,l_prod_287))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_375,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_355,l_basisEval_299,l_basisEval_356)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_357,0.e0,RMul(0.1e1,l_prod_307),l_basisEval_412)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_400,0.e0,RMul(0.1e1,l_prod_313),l_basisEval_401)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_402,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_366,0.e0,RMul(0.1e1,l_prod_333),l_basisEval_413)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.3e1,l_prod_336),l_basisEval_404,0.e0,RMul(0.1e1,l_prod_339))),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_442,l_basisEval_386,0.e0,RMul(0.1e1,l_prod_344))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_405,0.e0,l_basisEval_406,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_416,RMul(0.2e1,l_prod_417),RMul(0.3e1,l_prod_418))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.4e1,l_prod_419),RMul(0.5e1,l_prod_420),RMul(0.6e1,l_prod_421),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_423),l_basisEval_425,l_basisEval_443,RMul(0.4e1,l_prod_427))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.5e1,l_prod_429),0.e0,RMul(0.1e1,l_prod_430),RMul(0.2e1,l_prod_431))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_434,RMul(0.4e1,l_prod_435),0.e0,RMul(0.1e1,l_prod_436))),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_444,RMul(0.3e1,l_prod_438),0.e0,RMul(0.1e1,l_prod_439))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.2e1,l_prod_440),0.e0,l_basisEval_445,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,l_basisEval_348,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_271,l_basisEval_372,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_373,l_basisEval_282)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_374,0.e0,l_basisEval_353,RMul(0.1e1,l_prod_289))),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_397,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_376,l_basisEval_377,l_basisEval_302,l_basisEval_378)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_399,l_basisEval_412,RMul(0.1e1,l_prod_311))),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_391,RMul(0.1e1,l_prod_314),0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_402,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_403,RMul(0.3e1,l_prod_334),l_basisEval_414)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_338),0.e0,l_basisEval_368,l_basisEval_442)),RAdd(VDot<4,4>(v_254,VEC4(RMul(0.1e1,l_prod_342),0.e0,l_basisEval_394,RMul(0.1e1,l_prod_345))),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_406,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.6e1,l_prod_415),RMul(0.5e1,l_prod_417),RMul(0.4e1,l_prod_418),RMul(0.3e1,l_prod_419))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.2e1,l_prod_420),l_basisEval_422,0.e0,RMul(0.5e1,l_prod_423))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.4e1,l_prod_424),l_basisEval_443,l_basisEval_428,RMul(0.1e1,l_prod_429))),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.4e1,l_prod_430),l_basisEval_432,RMul(0.2e1,l_prod_433))),RAdd(VDot<4,4>(v_260,VEC4(RMul(0.1e1,l_prod_435),0.e0,RMul(0.3e1,l_prod_436),l_basisEval_444)),RAdd(VDot<4,4>(v_261,VEC4(RMul(0.1e1,l_prod_438),0.e0,RMul(0.2e1,l_prod_439),RMul(0.1e1,l_prod_440))),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_445,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)))))))))))))))))))))));
      if (GT<real>(RDiv(RNeg(Subscript<real[3]>(l__t_411,1)),RAdd(globals.fBias,Sqrt(VDot<3,4>(v_446,v_446)))),globals.fStrTh)) {
        bool l__t_447;
        if (GTE<real>(0.1e1,globals.fMaskTh)) {
          l__t_447 = true;
        } else {
          l__t_447 = false;
        }
        l__t_448 = l__t_447;
      } else {
        l__t_448 = false;
      }
      l__t_449 = l__t_448;
    } else {
      l__t_449 = false;
    }
    if (BNot(l__t_449)) {
      self.rayN = l_rayN_69;
      active;
    }
    if (BNot(globals.analytical)) {
      tensor[3][3] l_E_789;
      real[3] l_evals_788;
      int l_mulRes_450 = IMul(globals._t,84);
      int t_451 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_450);
      int t_452 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,1));
      int t_453 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,2));
      int t_454 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,3));
      int t_455 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,4));
      int t_456 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,5));
      int t_457 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,6));
      int t_458 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,7));
      int t_459 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,8));
      int t_460 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,9));
      int t_461 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,10));
      int t_462 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,11));
      int t_463 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,12));
      int t_464 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,13));
      int t_465 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,14));
      int t_466 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,15));
      int t_467 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,16));
      int t_468 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,17));
      int t_469 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,18));
      int t_470 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,19));
      int t_471 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,20));
      int t_472 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,21));
      int t_473 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,22));
      int t_474 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,23));
      int t_475 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,24));
      int t_476 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,25));
      int t_477 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,26));
      int t_478 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,27));
      int t_479 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,28));
      int t_480 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,29));
      int t_481 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,30));
      int t_482 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,31));
      int t_483 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,32));
      int t_484 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,33));
      int t_485 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,34));
      int t_486 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,35));
      int t_487 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,36));
      int t_488 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,37));
      int t_489 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,38));
      int t_490 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,39));
      int t_491 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,40));
      int t_492 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,41));
      int t_493 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,42));
      int t_494 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,43));
      int t_495 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,44));
      int t_496 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,45));
      int t_497 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,46));
      int t_498 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,47));
      int t_499 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,48));
      int t_500 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,49));
      int t_501 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,50));
      int t_502 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,51));
      int t_503 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,52));
      int t_504 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,53));
      int t_505 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,54));
      int t_506 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,55));
      int t_507 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,56));
      int t_508 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,57));
      int t_509 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,58));
      int t_510 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,59));
      int t_511 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,60));
      int t_512 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,61));
      int t_513 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,62));
      int t_514 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,63));
      int t_515 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,64));
      int t_516 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,65));
      int t_517 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,66));
      int t_518 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,67));
      int t_519 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,68));
      int t_520 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,69));
      int t_521 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,70));
      int t_522 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,71));
      int t_523 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,72));
      int t_524 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,73));
      int t_525 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,74));
      int t_526 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,75));
      int t_527 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,76));
      int t_528 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,77));
      int t_529 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,78));
      int t_530 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,79));
      int t_531 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,80));
      int t_532 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,81));
      int t_533 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,82));
      int t_534 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,83));
      real t_535 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_534));
      real t_536 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_533));
      real t_537 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_532));
      real t_538 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_531));
      real t_539 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_530));
      real t_540 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_529));
      real t_541 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_528));
      real t_542 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_527));
      real t_543 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_526));
      real t_544 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_525));
      real t_545 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_524));
      real t_546 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_523));
      real t_547 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_522));
      real t_548 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_521));
      real t_549 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_520));
      real t_550 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_519));
      real t_551 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_518));
      real t_552 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_517));
      real t_553 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_516));
      real t_554 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_515));
      real t_555 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_514));
      real t_556 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_513));
      real t_557 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_512));
      real t_558 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_511));
      real t_559 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_510));
      real t_560 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_509));
      real t_561 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_508));
      real t_562 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_507));
      real t_563 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_506));
      real t_564 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_505));
      real t_565 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_504));
      real t_566 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_503));
      real t_567 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_502));
      real t_568 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_501));
      real t_569 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_500));
      real t_570 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_499));
      real t_571 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_498));
      real t_572 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_497));
      real t_573 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_496));
      real t_574 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_495));
      real t_575 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_494));
      real t_576 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_493));
      real t_577 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_492));
      real t_578 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_491));
      real t_579 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_490));
      real t_580 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_489));
      real t_581 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_488));
      real t_582 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_487));
      real t_583 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_486));
      real t_584 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_485));
      real t_585 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_484));
      real t_586 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_483));
      real t_587 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_482));
      real t_588 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_481));
      real t_589 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_480));
      real t_590 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_479));
      real t_591 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_478));
      real t_592 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_477));
      real t_593 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_476));
      real t_594 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_475));
      real t_595 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_474));
      real t_596 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_473));
      real t_597 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_472));
      real t_598 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_471));
      real t_599 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_470));
      real t_600 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_469));
      real t_601 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_468));
      real t_602 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_467));
      real t_603 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_466));
      real t_604 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_465));
      real t_605 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_464));
      real t_606 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_463));
      real t_607 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_462));
      real t_608 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_461));
      real t_609 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_460));
      real t_610 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_459));
      real t_611 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_458));
      real t_612 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_457));
      real t_613 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_456));
      real t_614 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_455));
      real t_615 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_454));
      real t_616 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_453));
      real t_617 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_452));
      real t_618 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_451));
      vec4 v_619 = VEC4(t_618,t_617,t_616,t_615);
      vec4 v_620 = VEC4(t_614,t_613,t_612,t_611);
      vec4 v_621 = VEC4(t_610,t_609,t_608,t_607);
      vec4 v_622 = VEC4(t_606,t_605,t_604,t_603);
      vec4 v_623 = VEC4(t_602,t_601,t_600,t_599);
      vec4 v_624 = VEC4(t_598,t_597,t_596,t_595);
      vec4 v_625 = VEC4(t_594,t_593,t_592,t_591);
      vec4 v_626 = VEC4(t_590,t_589,t_588,t_587);
      vec4 v_627 = VEC4(t_586,t_585,t_584,t_583);
      vec4 v_628 = VEC4(t_582,t_581,t_580,t_579);
      vec4 v_629 = VEC4(t_578,t_577,t_576,t_575);
      vec4 v_630 = VEC4(t_574,t_573,t_572,t_571);
      vec4 v_631 = VEC4(t_570,t_569,t_568,t_567);
      vec4 v_632 = VEC4(t_566,t_565,t_564,t_563);
      vec4 v_633 = VEC4(t_562,t_561,t_560,t_559);
      vec4 v_634 = VEC4(t_558,t_557,t_556,t_555);
      vec4 v_635 = VEC4(t_554,t_553,t_552,t_551);
      vec4 v_636 = VEC4(t_550,t_549,t_548,t_547);
      vec4 v_637 = VEC4(t_546,t_545,t_544,t_543);
      vec4 v_638 = VEC4(t_542,t_541,t_540,t_539);
      vec4 v_639 = VEC4(t_538,t_537,t_536,t_535);
      real l_varAcc_640 = VIndex<3,4,0>(v_72);
      real l_varAcc_641 = VIndex<3,4,1>(v_72);
      real l_varAcc_642 = VIndex<3,4,2>(v_72);
      real l_prod_643 = RMul(0.1e1,0.1e1);
      real l_prod_644 = RMul(0.1e1,l_prod_643);
      real l_basisEval_645 = RMul(0.2e1,l_prod_644);
      real l_prod_646 = RMul(0.1e1,l_varAcc_642);
      real l_prod_647 = RMul(0.1e1,l_prod_646);
      real l_basisEval_648 = RMul(0.2e1,l_prod_647);
      real l_prod_649 = RMul(l_varAcc_641,0.1e1);
      real l_prod_650 = RMul(0.1e1,l_prod_649);
      real l_basisEval_651 = RMul(0.2e1,l_prod_650);
      real l_prod_652 = RMul(l_varAcc_640,l_prod_643);
      real l_prod2_653 = RMul(l_varAcc_642,l_varAcc_642);
      real l_prod_654 = RMul(0.1e1,l_prod2_653);
      real l_prod_655 = RMul(0.1e1,l_prod_654);
      real l_basisEval_656 = RMul(0.2e1,l_prod_655);
      real l_prod_657 = RMul(l_varAcc_641,l_varAcc_642);
      real l_prod_658 = RMul(0.1e1,l_prod_657);
      real l_basisEval_659 = RMul(0.2e1,l_prod_658);
      real l_prod2_660 = RMul(l_varAcc_641,l_varAcc_641);
      real l_prod_661 = RMul(l_prod2_660,0.1e1);
      real l_prod_662 = RMul(0.1e1,l_prod_661);
      real l_basisEval_663 = RMul(0.2e1,l_prod_662);
      real l_prod_664 = RMul(l_varAcc_640,l_prod_646);
      real l_basisEval_665 = RMul(0.6e1,l_prod_664);
      real l_prod_666 = RMul(l_varAcc_640,l_prod_649);
      real l_basisEval_667 = RMul(0.6e1,l_prod_666);
      real l_prod2_668 = RMul(l_varAcc_640,l_varAcc_640);
      real l_prod_669 = RMul(l_prod2_668,l_prod_643);
      real l_prod3_670 = RMul(l_prod2_653,l_varAcc_642);
      real l_prod_671 = RMul(0.1e1,l_prod3_670);
      real l_prod_672 = RMul(0.1e1,l_prod_671);
      real l_basisEval_673 = RMul(0.2e1,l_prod_672);
      real l_prod_674 = RMul(l_varAcc_641,l_prod2_653);
      real l_prod_675 = RMul(0.1e1,l_prod_674);
      real l_basisEval_676 = RMul(0.2e1,l_prod_675);
      real l_prod_677 = RMul(l_prod2_660,l_varAcc_642);
      real l_prod_678 = RMul(0.1e1,l_prod_677);
      real l_basisEval_679 = RMul(0.2e1,l_prod_678);
      real l_prod3_680 = RMul(l_prod2_660,l_varAcc_641);
      real l_prod_681 = RMul(l_prod3_680,0.1e1);
      real l_prod_682 = RMul(0.1e1,l_prod_681);
      real l_basisEval_683 = RMul(0.2e1,l_prod_682);
      real l_prod_684 = RMul(l_varAcc_640,l_prod_654);
      real l_basisEval_685 = RMul(0.6e1,l_prod_684);
      real l_prod_686 = RMul(l_varAcc_640,l_prod_657);
      real l_basisEval_687 = RMul(0.6e1,l_prod_686);
      real l_prod_688 = RMul(l_varAcc_640,l_prod_661);
      real l_basisEval_689 = RMul(0.6e1,l_prod_688);
      real l_prod_690 = RMul(l_prod2_668,l_prod_646);
      real l_prod_691 = RMul(l_prod2_668,l_prod_649);
      real l_prod3_692 = RMul(l_prod2_668,l_varAcc_640);
      real l_prod_693 = RMul(l_prod3_692,l_prod_643);
      real l_prod4_694 = RMul(l_prod3_670,l_varAcc_642);
      real l_prod_695 = RMul(0.1e1,l_prod4_694);
      real l_prod_696 = RMul(0.1e1,l_prod_695);
      real l_basisEval_697 = RMul(0.2e1,l_prod_696);
      real l_prod_698 = RMul(l_varAcc_641,l_prod3_670);
      real l_prod_699 = RMul(0.1e1,l_prod_698);
      real l_basisEval_700 = RMul(0.2e1,l_prod_699);
      real l_prod_701 = RMul(l_prod2_660,l_prod2_653);
      real l_prod_702 = RMul(0.1e1,l_prod_701);
      real l_prod_703 = RMul(l_prod3_680,l_varAcc_642);
      real l_prod_704 = RMul(0.1e1,l_prod_703);
      real l_basisEval_705 = RMul(0.2e1,l_prod_704);
      real l_prod4_706 = RMul(l_prod3_680,l_varAcc_641);
      real l_prod_707 = RMul(l_prod4_706,0.1e1);
      real l_prod_708 = RMul(0.1e1,l_prod_707);
      real l_basisEval_709 = RMul(0.2e1,l_prod_708);
      real l_prod_710 = RMul(l_varAcc_640,l_prod_671);
      real l_prod_711 = RMul(l_varAcc_640,l_prod_674);
      real l_basisEval_712 = RMul(0.6e1,l_prod_711);
      real l_prod_713 = RMul(l_varAcc_640,l_prod_677);
      real l_basisEval_714 = RMul(0.6e1,l_prod_713);
      real l_prod_715 = RMul(l_varAcc_640,l_prod_681);
      real l_prod_716 = RMul(l_prod2_668,l_prod_654);
      real l_basisEval_717 = RMul(0.12e2,l_prod_716);
      real l_prod_718 = RMul(l_prod2_668,l_prod_657);
      real l_prod_719 = RMul(l_prod2_668,l_prod_661);
      real l_basisEval_720 = RMul(0.12e2,l_prod_719);
      real l_prod_721 = RMul(l_prod3_692,l_prod_646);
      real l_prod_722 = RMul(l_prod3_692,l_prod_649);
      real l_prod4_723 = RMul(l_prod3_692,l_varAcc_640);
      real l_prod_724 = RMul(l_prod4_723,l_prod_643);
      real l_basisEval_725 = RMul(0.1e1,l_prod_644);
      real l_basisEval_726 = RMul(0.1e1,l_prod_647);
      real l_basisEval_727 = RMul(0.2e1,l_prod_652);
      real l_basisEval_728 = RMul(0.1e1,l_prod_655);
      real l_basisEval_729 = RMul(0.3e1,l_prod_662);
      real l_basisEval_730 = RMul(0.2e1,l_prod_664);
      real l_basisEval_731 = RMul(0.3e1,l_prod_669);
      real l_basisEval_732 = RMul(0.1e1,l_prod_672);
      real l_basisEval_733 = RMul(0.3e1,l_prod_678);
      real l_basisEval_734 = RMul(0.4e1,l_prod_682);
      real l_basisEval_735 = RMul(0.2e1,l_prod_684);
      real l_basisEval_736 = RMul(0.4e1,l_prod_686);
      real l_basisEval_737 = RMul(0.3e1,l_prod_690);
      real l_basisEval_738 = RMul(0.6e1,l_prod_691);
      real l_basisEval_739 = RMul(0.4e1,l_prod_693);
      real l_basisEval_740 = RMul(0.1e1,l_prod_696);
      real l_basisEval_741 = RMul(0.3e1,l_prod_702);
      real l_basisEval_742 = RMul(0.4e1,l_prod_704);
      real l_basisEval_743 = RMul(0.5e1,l_prod_708);
      real l_basisEval_744 = RMul(0.2e1,l_prod_710);
      real l_basisEval_745 = RMul(0.3e1,l_prod_716);
      real l_basisEval_746 = RMul(0.6e1,l_prod_718);
      real l_basisEval_747 = RMul(0.4e1,l_prod_721);
      real l_basisEval_748 = RMul(0.5e1,l_prod_724);
      real l_basisEval_749 = RMul(0.1e1,l_prod_650);
      real l_basisEval_750 = RMul(0.3e1,l_prod_655);
      real l_basisEval_751 = RMul(0.1e1,l_prod_662);
      real l_basisEval_752 = RMul(0.2e1,l_prod_666);
      real l_basisEval_753 = RMul(0.4e1,l_prod_672);
      real l_basisEval_754 = RMul(0.3e1,l_prod_675);
      real l_basisEval_755 = RMul(0.1e1,l_prod_682);
      real l_basisEval_756 = RMul(0.2e1,l_prod_688);
      real l_basisEval_757 = RMul(0.6e1,l_prod_690);
      real l_basisEval_758 = RMul(0.3e1,l_prod_691);
      real l_basisEval_759 = RMul(0.5e1,l_prod_696);
      real l_basisEval_760 = RMul(0.4e1,l_prod_699);
      real l_basisEval_761 = RMul(0.1e1,l_prod_708);
      real l_basisEval_762 = RMul(0.2e1,l_prod_715);
      real l_basisEval_763 = RMul(0.3e1,l_prod_719);
      real l_basisEval_764 = RMul(0.4e1,l_prod_722);
      real l_basisEval_765 = RMul(0.6e1,l_prod_658);
      real l_basisEval_766 = RMul(0.2e1,l_prod_669);
      real l_basisEval_767 = RMul(0.6e1,l_prod_675);
      real l_basisEval_768 = RMul(0.2e1,l_prod_690);
      real l_basisEval_769 = RMul(0.2e1,l_prod_693);
      real l_basisEval_770 = RMul(0.12e2,l_prod_702);
      real l_basisEval_771 = RMul(0.2e1,l_prod_721);
      real l_basisEval_772 = RMul(0.2e1,l_prod_724);
      real l_basisEval_773 = RMul(0.1e1,l_prod_652);
      real l_basisEval_774 = RMul(0.1e1,l_prod_669);
      real l_basisEval_775 = RMul(0.6e1,l_prod_678);
      real l_basisEval_776 = RMul(0.3e1,l_prod_684);
      real l_basisEval_777 = RMul(0.3e1,l_prod_688);
      real l_basisEval_778 = RMul(0.2e1,l_prod_691);
      real l_basisEval_779 = RMul(0.1e1,l_prod_693);
      real l_basisEval_780 = RMul(0.4e1,l_prod_710);
      real l_basisEval_781 = RMul(0.4e1,l_prod_715);
      real l_basisEval_782 = RMul(0.2e1,l_prod_722);
      real l_basisEval_783 = RMul(0.1e1,l_prod_724);
      real l_vdot_784 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_725,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_651,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_728,l_basisEval_659)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_729,0.e0,l_basisEval_730,RMul(0.4e1,l_prod_666))),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_731,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_732,l_basisEval_676)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_733,l_basisEval_734,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_736,l_basisEval_689,0.e0,l_basisEval_737)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_738,0.e0,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_743,0.e0,l_basisEval_744,RMul(0.4e1,l_prod_711))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_714,RMul(0.8e1,l_prod_715),0.e0,l_basisEval_745)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_746,RMul(0.9e1,l_prod_719),0.e0,l_basisEval_747)),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.8e1,l_prod_722),0.e0,l_basisEval_748,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_785 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_648,l_basisEval_749)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_750,l_basisEval_659,l_basisEval_751)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,RMul(0.4e1,l_prod_664),l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_731,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_753,l_basisEval_754,l_basisEval_679)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_755,0.e0,l_basisEval_685,l_basisEval_736)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_756,0.e0,l_basisEval_757,l_basisEval_758)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_739,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.8e1,l_prod_710),l_basisEval_712,RMul(0.4e1,l_prod_713))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_762,0.e0,RMul(0.9e1,l_prod_716),l_basisEval_746)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_763,0.e0,RMul(0.8e1,l_prod_721),l_basisEval_764)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_748,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_786 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,l_basisEval_648)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_651,0.e0,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_750,RMul(0.4e1,l_prod_658),l_basisEval_729)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_730,l_basisEval_752)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_753,l_basisEval_767,l_basisEval_775,l_basisEval_734)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_776,l_basisEval_736)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_777,0.e0,0.e0,l_basisEval_768)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_778,0.e0,0.e0,l_basisEval_779)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_759,RMul(0.8e1,l_prod_699),RMul(0.9e1,l_prod_702))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.8e1,l_prod_704),l_basisEval_743,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_780,l_basisEval_712,l_basisEval_714,l_basisEval_781)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,0.e0,l_basisEval_745,RMul(0.4e1,l_prod_718))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_763,0.e0,0.e0,l_basisEval_771)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_782,0.e0,0.e0,l_basisEval_783)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_787 = <tensor[3,3]>[RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,l_basisEval_645,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_648,l_basisEval_651,RMul(0.6e1,l_prod_652))),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_656,l_basisEval_659,l_basisEval_663)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_665,l_basisEval_667,RMul(0.12e2,l_prod_669),0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_673,l_basisEval_676)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_679,l_basisEval_683,l_basisEval_685,l_basisEval_687)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_689,RMul(0.12e2,l_prod_690),RMul(0.12e2,l_prod_691),RMul(0.20e2,l_prod_693))),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_697,l_basisEval_700,RMul(0.2e1,l_prod_702))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_705,l_basisEval_709,RMul(0.6e1,l_prod_710),l_basisEval_712)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_714,RMul(0.6e1,l_prod_715),l_basisEval_717,RMul(0.12e2,l_prod_718))),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_720,RMul(0.20e2,l_prod_721),RMul(0.20e2,l_prod_722),RMul(0.30e2,l_prod_724))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_784,l_vdot_785,l_vdot_784,RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,l_basisEval_645,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_648,RMul(0.6e1,l_prod_650),0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_727,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,l_basisEval_656,l_basisEval_765)),RAdd(VDot<4,4>(v_625,VEC4(RMul(0.12e2,l_prod_662),0.e0,0.e0,l_basisEval_730)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_667,0.e0,0.e0,l_basisEval_766)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,l_basisEval_673,l_basisEval_767,RMul(0.12e2,l_prod_678))),RAdd(VDot<4,4>(v_629,VEC4(RMul(0.20e2,l_prod_682),0.e0,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_687,RMul(0.12e2,l_prod_688),0.e0,0.e0)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_768,l_basisEval_738,0.e0,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_769,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,l_basisEval_697,RMul(0.6e1,l_prod_699))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_770,RMul(0.20e2,l_prod_704),RMul(0.30e2,l_prod_708),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,l_basisEval_744,l_basisEval_712,RMul(0.12e2,l_prod_713))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.20e2,l_prod_715),0.e0,0.e0,RMul(0.2e1,l_prod_716))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_746,l_basisEval_720,0.e0,0.e0)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_771,RMul(0.6e1,l_prod_722),0.e0,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_772,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_786,l_vdot_785,l_vdot_786,RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_645,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_647),l_basisEval_651)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(RMul(0.12e2,l_prod_655),l_basisEval_765,l_basisEval_663,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_665,l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_766,0.e0,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_672))),RAdd(VDot<4,4>(v_628,VEC4(RMul(0.12e2,l_prod_675),l_basisEval_775,l_basisEval_683,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,RMul(0.12e2,l_prod_684),l_basisEval_687,l_basisEval_756)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_757,l_basisEval_778)),RAdd(VDot<4,4>(v_631,VEC4(0.e0,0.e0,l_basisEval_769,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.30e2,l_prod_696),RMul(0.20e2,l_prod_699),l_basisEval_770,RMul(0.6e1,l_prod_704))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_709,0.e0,0.e0,RMul(0.20e2,l_prod_710))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.12e2,l_prod_711),l_basisEval_714,l_basisEval_762,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_717,l_basisEval_746,RMul(0.2e1,l_prod_719))),RAdd(VDot<4,4>(v_637,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_721),l_basisEval_782)),RAdd(VDot<4,4>(v_638,VEC4(0.e0,0.e0,l_basisEval_772,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      (l_evals_788,l_E_789) = EigenVecs3x3(TensorRef<[3,3]>(t_787));
      &tensor[3] l__t_790 = Subscript<tensor[3][3]>(l_E_789,2);
      real l__t_791 = Subscript<real[3]>(l_evals_788,2);
      &tensor[3] l__t_792 = Subscript<tensor[3][3]>(l_E_789,1);
      real l__t_793 = Subscript<real[3]>(l_evals_788,1);
      vec3{4} v_794 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_795 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_796 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_797 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_792),LOAD_0(l__t_792));
      vec3{4} v_798 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_792),LOAD_0(l__t_792));
      vec3{4} v_799 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_792),LOAD_0(l__t_792));
      real l_basisEval_800 = RMul(0.2e1,l_prod_686);
      real l_basisEval_801 = RMul(0.2e1,l_prod_711);
      real l_basisEval_802 = RMul(0.2e1,l_prod_713);
      real l_prod_803 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_694,l_varAcc_642)));
      real l_basisEval_804 = RMul(0.1e1,l_prod_803);
      real l_prod_805 = RMul(0.1e1,RMul(l_varAcc_641,l_prod4_694));
      real l_prod_806 = RMul(0.1e1,RMul(l_prod2_660,l_prod3_670));
      real l_prod_807 = RMul(0.1e1,RMul(l_prod3_680,l_prod2_653));
      real l_prod_808 = RMul(0.1e1,RMul(l_prod4_706,l_varAcc_642));
      real l_prod_809 = RMul(0.1e1,RMul(RMul(l_prod4_706,l_varAcc_641),0.1e1));
      real l_basisEval_810 = RMul(0.1e1,l_prod_809);
      real l_prod_811 = RMul(l_varAcc_640,l_prod_695);
      real l_prod_812 = RMul(l_varAcc_640,l_prod_698);
      real l_basisEval_813 = RMul(0.2e1,l_prod_812);
      real l_prod_814 = RMul(l_varAcc_640,l_prod_701);
      real l_prod_815 = RMul(l_varAcc_640,l_prod_703);
      real l_basisEval_816 = RMul(0.2e1,l_prod_815);
      real l_prod_817 = RMul(l_varAcc_640,l_prod_707);
      real l_prod_818 = RMul(l_prod2_668,l_prod_671);
      real l_prod_819 = RMul(l_prod2_668,l_prod_674);
      real l_basisEval_820 = RMul(0.3e1,l_prod_819);
      real l_prod_821 = RMul(l_prod2_668,l_prod_677);
      real l_basisEval_822 = RMul(0.3e1,l_prod_821);
      real l_prod_823 = RMul(l_prod2_668,l_prod_681);
      real l_prod_824 = RMul(l_prod3_692,l_prod_654);
      real l_prod_825 = RMul(l_prod3_692,l_prod_657);
      real l_prod_826 = RMul(l_prod3_692,l_prod_661);
      real l_prod_827 = RMul(l_prod4_723,l_prod_646);
      real l_prod_828 = RMul(l_prod4_723,l_prod_649);
      real l_prod_829 = RMul(RMul(l_prod4_723,l_varAcc_640),l_prod_643);
      real l_basisEval_830 = RMul(0.2e1,l_prod_718);
      real l_basisEval_831 = RMul(0.3e1,l_prod_814);
      real l_basisEval_832 = RMul(0.2e1,l_prod_825);
      real l_basisEval_833 = RMul(0.1e1,l_prod_829);
      vec3{4} v_834 = VEC3{4}(RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_749,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_728,RMul(0.1e1,l_prod_658))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_751,l_basisEval_730,l_basisEval_752,l_basisEval_731)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_732,RMul(0.1e1,l_prod_675),RMul(0.1e1,l_prod_678))),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_755,l_basisEval_735,l_basisEval_800,l_basisEval_756)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_737,l_basisEval_758,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_740,RMul(0.1e1,l_prod_699),RMul(0.1e1,l_prod_702))),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_704),l_basisEval_761,l_basisEval_744,l_basisEval_801)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_802,l_basisEval_762,l_basisEval_745,RMul(0.3e1,l_prod_718))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_763,l_basisEval_747,l_basisEval_764,l_basisEval_748)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_804)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_805),RMul(0.1e1,l_prod_806),RMul(0.1e1,l_prod_807),RMul(0.1e1,l_prod_808))),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_810,RMul(0.2e1,l_prod_811),l_basisEval_813,RMul(0.2e1,l_prod_814))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_816,RMul(0.2e1,l_prod_817),RMul(0.3e1,l_prod_818),l_basisEval_820)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_822,RMul(0.3e1,l_prod_823),RMul(0.4e1,l_prod_824),RMul(0.4e1,l_prod_825))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.4e1,l_prod_826),RMul(0.5e1,l_prod_827),RMul(0.5e1,l_prod_828),RMul(0.6e1,l_prod_829))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_726,l_basisEval_651,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_773,0.e0,0.e0,l_basisEval_728)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_659,l_basisEval_729,0.e0,RMul(0.1e1,l_prod_664))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_752,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_732,l_basisEval_676,l_basisEval_733)),RAdd(VDot<4,4>(v_625,VEC4(l_basisEval_734,0.e0,RMul(0.1e1,l_prod_684),l_basisEval_800)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_777,0.e0,RMul(0.1e1,l_prod_690),l_basisEval_778)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_779,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_629,VEC4(l_basisEval_743,0.e0,RMul(0.1e1,l_prod_710),l_basisEval_801)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.3e1,l_prod_713),l_basisEval_781,0.e0,RMul(0.1e1,l_prod_716))),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_830,l_basisEval_763,0.e0,RMul(0.1e1,l_prod_721))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_782,0.e0,l_basisEval_783,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_804,RMul(0.2e1,l_prod_805),RMul(0.3e1,l_prod_806))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.4e1,l_prod_807),RMul(0.5e1,l_prod_808),RMul(0.6e1,l_prod_809),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_811),l_basisEval_813,l_basisEval_831,RMul(0.4e1,l_prod_815))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.5e1,l_prod_817),0.e0,RMul(0.1e1,l_prod_818),RMul(0.2e1,l_prod_819))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_822,RMul(0.4e1,l_prod_823),0.e0,RMul(0.1e1,l_prod_824))),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_832,RMul(0.3e1,l_prod_826),0.e0,RMul(0.1e1,l_prod_827))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.2e1,l_prod_828),0.e0,l_basisEval_833,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,l_basisEval_725,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_648,l_basisEval_749,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,l_basisEval_750,l_basisEval_659)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_751,0.e0,l_basisEval_730,RMul(0.1e1,l_prod_666))),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_774,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(l_basisEval_753,l_basisEval_754,l_basisEval_679,l_basisEval_755)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_776,l_basisEval_800,RMul(0.1e1,l_prod_688))),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_768,RMul(0.1e1,l_prod_691),0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_779,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_780,RMul(0.3e1,l_prod_711),l_basisEval_802)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_715),0.e0,l_basisEval_745,l_basisEval_830)),RAdd(VDot<4,4>(v_631,VEC4(RMul(0.1e1,l_prod_719),0.e0,l_basisEval_771,RMul(0.1e1,l_prod_722))),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_783,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.6e1,l_prod_803),RMul(0.5e1,l_prod_805),RMul(0.4e1,l_prod_806),RMul(0.3e1,l_prod_807))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.2e1,l_prod_808),l_basisEval_810,0.e0,RMul(0.5e1,l_prod_811))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.4e1,l_prod_812),l_basisEval_831,l_basisEval_816,RMul(0.1e1,l_prod_817))),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.4e1,l_prod_818),l_basisEval_820,RMul(0.2e1,l_prod_821))),RAdd(VDot<4,4>(v_637,VEC4(RMul(0.1e1,l_prod_823),0.e0,RMul(0.3e1,l_prod_824),l_basisEval_832)),RAdd(VDot<4,4>(v_638,VEC4(RMul(0.1e1,l_prod_826),0.e0,RMul(0.2e1,l_prod_827),RMul(0.1e1,l_prod_828))),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_833,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)))))))))))))))))))))));
      v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_794),l__t_791),RDiv(VIndex<3,4,1>(v_794),l__t_791),RDiv(VIndex<3,4,2>(v_794),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_797),l__t_793),RDiv(VIndex<3,4,1>(v_797),l__t_793),RDiv(VIndex<3,4,2>(v_797),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_795),l__t_791),RDiv(VIndex<3,4,1>(v_795),l__t_791),RDiv(VIndex<3,4,2>(v_795),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_798),l__t_793),RDiv(VIndex<3,4,1>(v_798),l__t_793),RDiv(VIndex<3,4,2>(v_798),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_796),l__t_791),RDiv(VIndex<3,4,1>(v_796),l__t_791),RDiv(VIndex<3,4,2>(v_796),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_799),l__t_793),RDiv(VIndex<3,4,1>(v_799),l__t_793),RDiv(VIndex<3,4,2>(v_799),l__t_793)))),v_834));
    } else {
      tensor[3][3] l_E_947;
      real[3] l_evals_946;
      &tensor[3,3] l_Mtransform_836 = Transform<IMAGE3D<float[]>>(globals.umm);
      vec3{4} v_837 = VAdd<3,4>(VEC3{4}(VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[0]>(l_Mtransform_836)),v_72),VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[1]>(l_Mtransform_836)),v_72),VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[2]>(l_Mtransform_836)),v_72)),LOAD_0(Translate<IMAGE3D<float[]>>(globals.umm)));
      vec3{4} v_838 = VFloor<3,4>(v_837);
      vec3{4} v_839 = VSub<3,4>(v_837,v_838);
      int[3] l_n_840 = VToInt<3{4}>(v_838);
      real l_r_841 = TensorIndex<&tensor[3,3],[0,0]>(l_Mtransform_836);
      real l_r_842 = TensorIndex<&tensor[3,3],[1,0]>(l_Mtransform_836);
      real l_r_843 = TensorIndex<&tensor[3,3],[2,0]>(l_Mtransform_836);
      vec3{4} v_844 = VEC3{4}(l_r_841,l_r_842,l_r_843);
      real l_r_845 = TensorIndex<&tensor[3,3],[0,1]>(l_Mtransform_836);
      real l_r_846 = TensorIndex<&tensor[3,3],[1,1]>(l_Mtransform_836);
      real l_r_847 = TensorIndex<&tensor[3,3],[2,1]>(l_Mtransform_836);
      vec3{4} v_848 = VEC3{4}(l_r_845,l_r_846,l_r_847);
      real l_r_849 = TensorIndex<&tensor[3,3],[0,2]>(l_Mtransform_836);
      real l_r_850 = TensorIndex<&tensor[3,3],[1,2]>(l_Mtransform_836);
      real l_r_851 = TensorIndex<&tensor[3,3],[2,2]>(l_Mtransform_836);
      vec3{4} v_852 = VEC3{4}(l_r_849,l_r_850,l_r_851);
      int l_idx_853 = IAdd(Subscript<int[3]>(l_n_840,0),-1);
      int l_idx_854 = IAdd(Subscript<int[3]>(l_n_840,1),-1);
      int l_idx_855 = IAdd(Subscript<int[3]>(l_n_840,2),-1);
      int l_mulRes_856 = IMul(300,l_idx_855);
      int l_mulRes_857 = IMul(300,IAdd(l_idx_854,l_mulRes_856));
      int l_addRes_858 = IAdd(l_idx_853,1);
      int l_addRes_859 = IAdd(l_idx_853,2);
      int l_addRes_860 = IAdd(l_idx_853,3);
      vec4 v_861 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_857)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_857)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_857)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_857)));
      int l_addRes_862 = IAdd(l_idx_854,1);
      int l_mulRes_863 = IMul(300,IAdd(l_addRes_862,l_mulRes_856));
      vec4 v_864 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_863)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_863)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_863)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_863)));
      int l_addRes_865 = IAdd(l_idx_854,2);
      int l_mulRes_866 = IMul(300,IAdd(l_addRes_865,l_mulRes_856));
      vec4 v_867 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_866)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_866)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_866)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_866)));
      int l_addRes_868 = IAdd(l_idx_854,3);
      int l_mulRes_869 = IMul(300,IAdd(l_addRes_868,l_mulRes_856));
      vec4 v_870 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_869)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_869)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_869)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_869)));
      int l_mulRes_871 = IMul(300,IAdd(l_idx_855,1));
      int l_mulRes_872 = IMul(300,IAdd(l_idx_854,l_mulRes_871));
      vec4 v_873 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_872)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_872)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_872)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_872)));
      int l_mulRes_874 = IMul(300,IAdd(l_addRes_862,l_mulRes_871));
      vec4 v_875 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_874)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_874)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_874)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_874)));
      int l_mulRes_876 = IMul(300,IAdd(l_addRes_865,l_mulRes_871));
      vec4 v_877 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_876)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_876)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_876)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_876)));
      int l_mulRes_878 = IMul(300,IAdd(l_addRes_868,l_mulRes_871));
      vec4 v_879 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_878)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_878)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_878)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_878)));
      int l_mulRes_880 = IMul(300,IAdd(l_idx_855,2));
      int l_mulRes_881 = IMul(300,IAdd(l_idx_854,l_mulRes_880));
      vec4 v_882 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_881)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_881)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_881)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_881)));
      int l_mulRes_883 = IMul(300,IAdd(l_addRes_862,l_mulRes_880));
      vec4 v_884 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_883)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_883)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_883)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_883)));
      int l_mulRes_885 = IMul(300,IAdd(l_addRes_865,l_mulRes_880));
      vec4 v_886 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_885)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_885)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_885)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_885)));
      int l_mulRes_887 = IMul(300,IAdd(l_addRes_868,l_mulRes_880));
      vec4 v_888 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_887)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_887)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_887)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_887)));
      int l_mulRes_889 = IMul(300,IAdd(l_idx_855,3));
      int l_mulRes_890 = IMul(300,IAdd(l_idx_854,l_mulRes_889));
      vec4 v_891 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_890)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_890)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_890)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_890)));
      int l_mulRes_892 = IMul(300,IAdd(l_addRes_862,l_mulRes_889));
      vec4 v_893 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_892)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_892)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_892)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_892)));
      int l_mulRes_894 = IMul(300,IAdd(l_addRes_865,l_mulRes_889));
      vec4 v_895 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_894)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_894)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_894)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_894)));
      int l_mulRes_896 = IMul(300,IAdd(l_addRes_868,l_mulRes_889));
      vec4 v_897 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_896)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_896)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_896)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_896)));
      real l_vZ__898 = VIndex<3,4,2>(v_839);
      vec4 v_899 = VEC4(RAdd(l_vZ__898,0.1e1),l_vZ__898,RSub(l_vZ__898,0.1e1),RSub(l_vZ__898,0.2e1));
      vec4 v_900 = VEC4(0.133333333333e1,0.666666666667e0,0.666666666667e0,0.133333333333e1);
      vec4 v_901 = VEC4(-0.2e1,0.e0,0.e0,0.2e1);
      vec4 v_902 = VEC4(0.1e1,-0.1e1,-0.1e1,0.1e1);
      vec4 v_903 = VEC4(-0.166666666667e0,0.5e0,-0.5e0,0.166666666667e0);
      vec4 v_904 = VAdd<4,4>(v_900,VMul<4,4>(v_899,VAdd<4,4>(v_901,VMul<4,4>(v_899,VAdd<4,4>(v_902,VMul<4,4>(v_899,v_903))))));
      vec4 v_905 = VEC4(0.2e1,-0.2e1,-0.2e1,0.2e1);
      vec4 v_906 = VEC4(-0.5e0,0.15e1,-0.15e1,0.5e0);
      vec4 v_907 = VAdd<4,4>(v_901,VMul<4,4>(v_899,VAdd<4,4>(v_905,VMul<4,4>(v_899,v_906))));
      vec4 v_908 = VEC4(-0.1e1,0.3e1,-0.3e1,0.1e1);
      real l_vY__909 = VIndex<3,4,1>(v_839);
      vec4 v_910 = VEC4(RAdd(l_vY__909,0.1e1),l_vY__909,RSub(l_vY__909,0.1e1),RSub(l_vY__909,0.2e1));
      vec4 v_911 = VAdd<4,4>(v_900,VMul<4,4>(v_910,VAdd<4,4>(v_901,VMul<4,4>(v_910,VAdd<4,4>(v_902,VMul<4,4>(v_910,v_903))))));
      vec4 v_912 = VAdd<4,4>(v_901,VMul<4,4>(v_910,VAdd<4,4>(v_905,VMul<4,4>(v_910,v_906))));
      vec4 v_913 = VAdd<4,4>(v_905,VMul<4,4>(v_910,v_908));
      real l_vX__914 = VIndex<3,4,0>(v_839);
      vec4 v_915 = VEC4(RAdd(l_vX__914,0.1e1),l_vX__914,RSub(l_vX__914,0.1e1),RSub(l_vX__914,0.2e1));
      vec4 v_916 = VAdd<4,4>(v_900,VMul<4,4>(v_915,VAdd<4,4>(v_901,VMul<4,4>(v_915,VAdd<4,4>(v_902,VMul<4,4>(v_915,v_903))))));
      vec4 v_917 = VAdd<4,4>(v_901,VMul<4,4>(v_915,VAdd<4,4>(v_905,VMul<4,4>(v_915,v_906))));
      vec4 v_918 = VAdd<4,4>(v_905,VMul<4,4>(v_915,v_908));
      vec4 v_919 = VEC4(VDot<4,4>(v_917,v_861),VDot<4,4>(v_917,v_864),VDot<4,4>(v_917,v_867),VDot<4,4>(v_917,v_870));
      vec4 v_920 = VEC4(VDot<4,4>(v_917,v_873),VDot<4,4>(v_917,v_875),VDot<4,4>(v_917,v_877),VDot<4,4>(v_917,v_879));
      vec4 v_921 = VEC4(VDot<4,4>(v_917,v_882),VDot<4,4>(v_917,v_884),VDot<4,4>(v_917,v_886),VDot<4,4>(v_917,v_888));
      vec4 v_922 = VEC4(VDot<4,4>(v_917,v_891),VDot<4,4>(v_917,v_893),VDot<4,4>(v_917,v_895),VDot<4,4>(v_917,v_897));
      real l_vdot_923 = VDot<4,4>(v_904,VEC4(VDot<4,4>(v_912,v_919),VDot<4,4>(v_912,v_920),VDot<4,4>(v_912,v_921),VDot<4,4>(v_912,v_922)));
      vec4 v_924 = VEC4(VDot<4,4>(v_911,v_919),VDot<4,4>(v_911,v_920),VDot<4,4>(v_911,v_921),VDot<4,4>(v_911,v_922));
      real l_vdot_925 = VDot<4,4>(v_907,v_924);
      vec3{4} v_926 = VEC3{4}(VDot<4,4>(v_904,VEC4(VDot<4,4>(v_911,VEC4(VDot<4,4>(v_918,v_861),VDot<4,4>(v_918,v_864),VDot<4,4>(v_918,v_867),VDot<4,4>(v_918,v_870))),VDot<4,4>(v_911,VEC4(VDot<4,4>(v_918,v_873),VDot<4,4>(v_918,v_875),VDot<4,4>(v_918,v_877),VDot<4,4>(v_918,v_879))),VDot<4,4>(v_911,VEC4(VDot<4,4>(v_918,v_882),VDot<4,4>(v_918,v_884),VDot<4,4>(v_918,v_886),VDot<4,4>(v_918,v_888))),VDot<4,4>(v_911,VEC4(VDot<4,4>(v_918,v_891),VDot<4,4>(v_918,v_893),VDot<4,4>(v_918,v_895),VDot<4,4>(v_918,v_897))))),l_vdot_923,l_vdot_925);
      vec4 v_927 = VEC4(VDot<4,4>(v_916,v_861),VDot<4,4>(v_916,v_864),VDot<4,4>(v_916,v_867),VDot<4,4>(v_916,v_870));
      vec4 v_928 = VEC4(VDot<4,4>(v_916,v_873),VDot<4,4>(v_916,v_875),VDot<4,4>(v_916,v_877),VDot<4,4>(v_916,v_879));
      vec4 v_929 = VEC4(VDot<4,4>(v_916,v_882),VDot<4,4>(v_916,v_884),VDot<4,4>(v_916,v_886),VDot<4,4>(v_916,v_888));
      vec4 v_930 = VEC4(VDot<4,4>(v_916,v_891),VDot<4,4>(v_916,v_893),VDot<4,4>(v_916,v_895),VDot<4,4>(v_916,v_897));
      vec4 v_931 = VEC4(VDot<4,4>(v_912,v_927),VDot<4,4>(v_912,v_928),VDot<4,4>(v_912,v_929),VDot<4,4>(v_912,v_930));
      real l_vdot_932 = VDot<4,4>(v_907,v_931);
      vec3{4} v_933 = VEC3{4}(l_vdot_923,VDot<4,4>(v_904,VEC4(VDot<4,4>(v_913,v_927),VDot<4,4>(v_913,v_928),VDot<4,4>(v_913,v_929),VDot<4,4>(v_913,v_930))),l_vdot_932);
      vec4 v_934 = VEC4(VDot<4,4>(v_911,v_927),VDot<4,4>(v_911,v_928),VDot<4,4>(v_911,v_929),VDot<4,4>(v_911,v_930));
      vec3{4} v_935 = VEC3{4}(l_vdot_925,l_vdot_932,VDot<4,4>(VAdd<4,4>(v_905,VMul<4,4>(v_899,v_908)),v_934));
      real l_vdot_936 = VDot<3,4>(v_926,v_844);
      real l_vdot_937 = VDot<3,4>(v_926,v_848);
      real l_vdot_938 = VDot<3,4>(v_926,v_852);
      real l_vdot_939 = VDot<3,4>(v_933,v_844);
      real l_vdot_940 = VDot<3,4>(v_933,v_848);
      real l_vdot_941 = VDot<3,4>(v_933,v_852);
      real l_vdot_942 = VDot<3,4>(v_935,v_844);
      real l_vdot_943 = VDot<3,4>(v_935,v_848);
      real l_vdot_944 = VDot<3,4>(v_935,v_852);
      tensor[3,3] t_945 = <tensor[3,3]>[RAdd(RAdd(RMul(l_r_841,l_vdot_936),RMul(l_r_842,l_vdot_939)),RMul(l_r_843,l_vdot_942)),RAdd(RAdd(RMul(l_r_841,l_vdot_937),RMul(l_r_842,l_vdot_940)),RMul(l_r_843,l_vdot_943)),RAdd(RAdd(RMul(l_r_841,l_vdot_938),RMul(l_r_842,l_vdot_941)),RMul(l_r_843,l_vdot_944)),RAdd(RAdd(RMul(l_r_845,l_vdot_936),RMul(l_r_846,l_vdot_939)),RMul(l_r_847,l_vdot_942)),RAdd(RAdd(RMul(l_r_845,l_vdot_937),RMul(l_r_846,l_vdot_940)),RMul(l_r_847,l_vdot_943)),RAdd(RAdd(RMul(l_r_845,l_vdot_938),RMul(l_r_846,l_vdot_941)),RMul(l_r_847,l_vdot_944)),RAdd(RAdd(RMul(l_r_849,l_vdot_936),RMul(l_r_850,l_vdot_939)),RMul(l_r_851,l_vdot_942)),RAdd(RAdd(RMul(l_r_849,l_vdot_937),RMul(l_r_850,l_vdot_940)),RMul(l_r_851,l_vdot_943)),RAdd(RAdd(RMul(l_r_849,l_vdot_938),RMul(l_r_850,l_vdot_941)),RMul(l_r_851,l_vdot_944))];
      (l_evals_946,l_E_947) = EigenVecs3x3(TensorRef<[3,3]>(t_945));
      &tensor[3] l__t_948 = Subscript<tensor[3][3]>(l_E_947,2);
      real l__t_949 = Subscript<real[3]>(l_evals_946,2);
      &tensor[3] l__t_950 = Subscript<tensor[3][3]>(l_E_947,1);
      real l__t_951 = Subscript<real[3]>(l_evals_946,1);
      vec3{4} v_952 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_948),LOAD_0(l__t_948));
      vec3{4} v_953 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_948),LOAD_0(l__t_948));
      vec3{4} v_954 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_948),LOAD_0(l__t_948));
      vec3{4} v_955 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_950),LOAD_0(l__t_950));
      vec3{4} v_956 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_950),LOAD_0(l__t_950));
      vec3{4} v_957 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_950),LOAD_0(l__t_950));
      vec3{4} v_958 = VEC3{4}(VDot<4,4>(v_904,v_924),VDot<4,4>(v_904,v_931),VDot<4,4>(v_907,v_934));
      vec3{4} v_959 = VEC3{4}(VDot<3,4>(v_958,v_844),VDot<3,4>(v_958,v_848),VDot<3,4>(v_958,v_852));
      v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_952),l__t_949),RDiv(VIndex<3,4,1>(v_952),l__t_949),RDiv(VIndex<3,4,2>(v_952),l__t_949)),VEC3{4}(RDiv(VIndex<3,4,0>(v_955),l__t_951),RDiv(VIndex<3,4,1>(v_955),l__t_951),RDiv(VIndex<3,4,2>(v_955),l__t_951)))),v_959),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_953),l__t_949),RDiv(VIndex<3,4,1>(v_953),l__t_949),RDiv(VIndex<3,4,2>(v_953),l__t_949)),VEC3{4}(RDiv(VIndex<3,4,0>(v_956),l__t_951),RDiv(VIndex<3,4,1>(v_956),l__t_951),RDiv(VIndex<3,4,2>(v_956),l__t_951)))),v_959),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_954),l__t_949),RDiv(VIndex<3,4,1>(v_954),l__t_949),RDiv(VIndex<3,4,2>(v_954),l__t_949)),VEC3{4}(RDiv(VIndex<3,4,0>(v_957),l__t_951),RDiv(VIndex<3,4,1>(v_957),l__t_951),RDiv(VIndex<3,4,2>(v_957),l__t_951)))),v_959));
    }
    real l_op1_e3_l_8_960 = Sqrt(VDot<3,4>(v_835,v_835));
    real l__t_961 = RMul(globals.maxAlpha,RClamp(0.e0,0.1e1,RMul(0.15e1,RSub(0.1e1,RDiv(Abs<real>(l_op1_e3_l_8_960),globals.thick)))));
    if (EQ<real>(l__t_961,0.e0)) {
      self.rayN = l_rayN_69;
      active;
    }
    real l__t_962 = MathFn<pow>(RSub(0.1e1,l__t_961),self.alphaFix);
    if (NEQ<real>(self.phKs,0.e0)) {
      vec3{4} v_963 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.eyeDir)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
      l_scomp_964 = MathFn<pow>(Abs<real>(RMul(RDiv(0.1e1,Sqrt(VDot<3,4>(v_963,v_963))),VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_8_960),v_835)),v_963))),self.phSp);
    } else {
      l_scomp_964 = 0.e0;
    }
    real l_cmin_965 = VIndex<2,2,0>(LOAD_0(TensorRef<[2]>(globals.cminmax)));
    real l_cmax_966 = VIndex<2,2,1>(LOAD_0(TensorRef<[2]>(globals.cminmax)));
    vec3{4} v_967 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    if (NEQ<real>(l_cmin_965,l_cmax_966)) {
      tensor[3,2] l_voxels_1180;
      vec3{4} v_968 = VAdd<3,4>(v_72,v_835);
      int l_mulRes_969 = IMul(globals._t,84);
      int t_970 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_969);
      int t_971 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,1));
      int t_972 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,2));
      int t_973 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,3));
      int t_974 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,4));
      int t_975 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,5));
      int t_976 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,6));
      int t_977 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,7));
      int t_978 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,8));
      int t_979 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,9));
      int t_980 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,10));
      int t_981 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,11));
      int t_982 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,12));
      int t_983 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,13));
      int t_984 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,14));
      int t_985 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,15));
      int t_986 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,16));
      int t_987 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,17));
      int t_988 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,18));
      int t_989 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,19));
      int t_990 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,20));
      int t_991 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,21));
      int t_992 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,22));
      int t_993 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,23));
      int t_994 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,24));
      int t_995 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,25));
      int t_996 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,26));
      int t_997 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,27));
      int t_998 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,28));
      int t_999 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,29));
      int t_1000 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,30));
      int t_1001 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,31));
      int t_1002 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,32));
      int t_1003 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,33));
      int t_1004 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,34));
      int t_1005 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,35));
      int t_1006 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,36));
      int t_1007 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,37));
      int t_1008 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,38));
      int t_1009 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,39));
      int t_1010 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,40));
      int t_1011 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,41));
      int t_1012 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,42));
      int t_1013 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,43));
      int t_1014 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,44));
      int t_1015 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,45));
      int t_1016 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,46));
      int t_1017 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,47));
      int t_1018 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,48));
      int t_1019 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,49));
      int t_1020 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,50));
      int t_1021 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,51));
      int t_1022 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,52));
      int t_1023 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,53));
      int t_1024 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,54));
      int t_1025 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,55));
      int t_1026 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,56));
      int t_1027 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,57));
      int t_1028 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,58));
      int t_1029 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,59));
      int t_1030 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,60));
      int t_1031 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,61));
      int t_1032 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,62));
      int t_1033 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,63));
      int t_1034 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,64));
      int t_1035 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,65));
      int t_1036 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,66));
      int t_1037 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,67));
      int t_1038 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,68));
      int t_1039 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,69));
      int t_1040 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,70));
      int t_1041 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,71));
      int t_1042 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,72));
      int t_1043 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,73));
      int t_1044 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,74));
      int t_1045 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,75));
      int t_1046 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,76));
      int t_1047 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,77));
      int t_1048 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,78));
      int t_1049 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,79));
      int t_1050 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,80));
      int t_1051 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,81));
      int t_1052 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,82));
      int t_1053 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,83));
      real t_1054 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1053));
      real t_1055 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1052));
      real t_1056 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1051));
      real t_1057 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1050));
      real t_1058 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1049));
      real t_1059 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1048));
      real t_1060 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1047));
      real t_1061 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1046));
      real t_1062 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1045));
      real t_1063 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1044));
      real t_1064 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1043));
      real t_1065 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1042));
      real t_1066 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1041));
      real t_1067 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1040));
      real t_1068 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1039));
      real t_1069 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1038));
      real t_1070 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1037));
      real t_1071 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1036));
      real t_1072 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1035));
      real t_1073 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1034));
      real t_1074 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1033));
      real t_1075 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1032));
      real t_1076 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1031));
      real t_1077 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1030));
      real t_1078 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1029));
      real t_1079 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1028));
      real t_1080 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1027));
      real t_1081 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1026));
      real t_1082 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1025));
      real t_1083 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1024));
      real t_1084 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1023));
      real t_1085 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1022));
      real t_1086 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1021));
      real t_1087 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1020));
      real t_1088 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1019));
      real t_1089 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1018));
      real t_1090 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1017));
      real t_1091 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1016));
      real t_1092 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1015));
      real t_1093 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1014));
      real t_1094 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1013));
      real t_1095 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1012));
      real t_1096 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1011));
      real t_1097 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1010));
      real t_1098 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1009));
      real t_1099 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1008));
      real t_1100 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1007));
      real t_1101 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1006));
      real t_1102 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1005));
      real t_1103 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1004));
      real t_1104 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1003));
      real t_1105 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1002));
      real t_1106 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1001));
      real t_1107 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1000));
      real t_1108 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_999));
      real t_1109 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_998));
      real t_1110 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_997));
      real t_1111 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_996));
      real t_1112 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_995));
      real t_1113 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_994));
      real t_1114 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_993));
      real t_1115 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_992));
      real t_1116 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_991));
      real t_1117 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_990));
      real t_1118 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_989));
      real t_1119 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_988));
      real t_1120 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_987));
      real t_1121 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_986));
      real t_1122 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_985));
      real t_1123 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_984));
      real t_1124 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_983));
      real t_1125 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_982));
      real t_1126 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_981));
      real t_1127 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_980));
      real t_1128 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_979));
      real t_1129 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_978));
      real t_1130 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_977));
      real t_1131 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_976));
      real t_1132 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_975));
      real t_1133 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_974));
      real t_1134 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_973));
      real t_1135 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_972));
      real t_1136 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_971));
      real t_1137 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_970));
      real l_varAcc_1138 = VIndex<3,4,0>(v_968);
      real l_varAcc_1139 = VIndex<3,4,1>(v_968);
      real l_varAcc_1140 = VIndex<3,4,2>(v_968);
      real l_prod_1141 = RMul(0.1e1,0.1e1);
      real l_prod_1142 = RMul(0.1e1,l_varAcc_1140);
      real l_prod_1143 = RMul(l_varAcc_1139,0.1e1);
      real l_prod2_1144 = RMul(l_varAcc_1140,l_varAcc_1140);
      real l_prod_1145 = RMul(0.1e1,l_prod2_1144);
      real l_prod_1146 = RMul(l_varAcc_1139,l_varAcc_1140);
      real l_prod2_1147 = RMul(l_varAcc_1139,l_varAcc_1139);
      real l_prod_1148 = RMul(l_prod2_1147,0.1e1);
      real l_prod2_1149 = RMul(l_varAcc_1138,l_varAcc_1138);
      real l_prod3_1150 = RMul(l_prod2_1144,l_varAcc_1140);
      real l_prod_1151 = RMul(0.1e1,l_prod3_1150);
      real l_prod_1152 = RMul(l_varAcc_1139,l_prod2_1144);
      real l_prod_1153 = RMul(l_prod2_1147,l_varAcc_1140);
      real l_prod3_1154 = RMul(l_prod2_1147,l_varAcc_1139);
      real l_prod_1155 = RMul(l_prod3_1154,0.1e1);
      real l_prod3_1156 = RMul(l_prod2_1149,l_varAcc_1138);
      real l_prod4_1157 = RMul(l_prod3_1150,l_varAcc_1140);
      real l_prod_1158 = RMul(0.1e1,l_prod4_1157);
      real l_prod_1159 = RMul(l_varAcc_1139,l_prod3_1150);
      real l_prod_1160 = RMul(l_prod2_1147,l_prod2_1144);
      real l_prod_1161 = RMul(l_prod3_1154,l_varAcc_1140);
      real l_prod4_1162 = RMul(l_prod3_1154,l_varAcc_1139);
      real l_prod_1163 = RMul(l_prod4_1162,0.1e1);
      real l_prod4_1164 = RMul(l_prod3_1156,l_varAcc_1138);
      real l_prod5_1165 = RMul(l_prod4_1157,l_varAcc_1140);
      real l_prod_1166 = RMul(0.1e1,l_prod5_1165);
      real l_prod_1167 = RMul(l_varAcc_1139,l_prod4_1157);
      real l_prod_1168 = RMul(l_prod2_1147,l_prod3_1150);
      real l_prod_1169 = RMul(l_prod3_1154,l_prod2_1144);
      real l_prod_1170 = RMul(l_prod4_1162,l_varAcc_1140);
      real l_prod5_1171 = RMul(l_prod4_1162,l_varAcc_1139);
      real l_prod_1172 = RMul(l_prod5_1171,0.1e1);
      real l_prod5_1173 = RMul(l_prod4_1164,l_varAcc_1138);
      real l_imgPos_1174 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.cmap),RAdd(0.e0,RMul(RDiv(RSub(RAdd(VDot<4,4>(VEC4(t_1133,t_1132,t_1131,t_1130),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1145)),RMul(0.1e1,RMul(0.1e1,l_prod_1146)),RMul(0.1e1,RMul(0.1e1,l_prod_1148)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1142)))),RAdd(VDot<4,4>(VEC4(t_1129,t_1128,t_1127,t_1126),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1143)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1141)),RMul(0.1e1,RMul(0.1e1,l_prod_1151)),RMul(0.1e1,RMul(0.1e1,l_prod_1152)))),RAdd(VDot<4,4>(VEC4(t_1125,t_1124,t_1123,t_1122),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1153)),RMul(0.1e1,RMul(0.1e1,l_prod_1155)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1145)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1146)))),RAdd(VDot<4,4>(VEC4(t_1121,t_1120,t_1119,t_1118),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1148)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1142)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1143)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1141)))),RAdd(VDot<4,4>(VEC4(t_1117,t_1116,t_1115,t_1114),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1158)),RMul(0.1e1,RMul(0.1e1,l_prod_1159)),RMul(0.1e1,RMul(0.1e1,l_prod_1160)),RMul(0.1e1,RMul(0.1e1,l_prod_1161)))),RAdd(VDot<4,4>(VEC4(t_1113,t_1112,t_1111,t_1110),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1163)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1151)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1152)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1153)))),RAdd(VDot<4,4>(VEC4(t_1109,t_1108,t_1107,t_1106),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1155)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1145)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1146)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1148)))),RAdd(VDot<4,4>(VEC4(t_1105,t_1104,t_1103,t_1102),VEC4(RMul(0.1e1,RMul(l_prod3_1156,l_prod_1142)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1143)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1141)),RMul(0.1e1,RMul(0.1e1,l_prod_1166)))),RAdd(VDot<4,4>(VEC4(t_1101,t_1100,t_1099,t_1098),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1167)),RMul(0.1e1,RMul(0.1e1,l_prod_1168)),RMul(0.1e1,RMul(0.1e1,l_prod_1169)),RMul(0.1e1,RMul(0.1e1,l_prod_1170)))),RAdd(VDot<4,4>(VEC4(t_1097,t_1096,t_1095,t_1094),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1172)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1158)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1159)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1160)))),RAdd(VDot<4,4>(VEC4(t_1093,t_1092,t_1091,t_1090),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1161)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1163)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1151)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1152)))),RAdd(VDot<4,4>(VEC4(t_1089,t_1088,t_1087,t_1086),VEC4(RMul(0.1e1,RMul(l_prod2_1149,l_prod_1153)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1155)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1145)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1146)))),RAdd(VDot<4,4>(VEC4(t_1085,t_1084,t_1083,t_1082),VEC4(RMul(0.1e1,RMul(l_prod3_1156,l_prod_1148)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1142)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1143)),RMul(0.1e1,RMul(l_prod5_1173,l_prod_1141)))),RAdd(VDot<4,4>(VEC4(t_1081,t_1080,t_1079,t_1078),VEC4(RMul(0.1e1,RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1165,l_varAcc_1140)))),RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_1139,l_prod5_1165))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod2_1147,l_prod4_1157))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod3_1154,l_prod3_1150))))),RAdd(VDot<4,4>(VEC4(t_1077,t_1076,t_1075,t_1074),VEC4(RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_1162,l_prod2_1144))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1171,l_varAcc_1140))),RMul(0.1e1,RMul(0.1e1,RMul(RMul(l_prod5_1171,l_varAcc_1139),0.1e1))),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1166)))),RAdd(VDot<4,4>(VEC4(t_1073,t_1072,t_1071,t_1070),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1167)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1168)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1169)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1170)))),RAdd(VDot<4,4>(VEC4(t_1069,t_1068,t_1067,t_1066),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1172)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1158)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1159)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1160)))),RAdd(VDot<4,4>(VEC4(t_1065,t_1064,t_1063,t_1062),VEC4(RMul(0.1e1,RMul(l_prod2_1149,l_prod_1161)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1163)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1151)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1152)))),RAdd(VDot<4,4>(VEC4(t_1061,t_1060,t_1059,t_1058),VEC4(RMul(0.1e1,RMul(l_prod3_1156,l_prod_1153)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1155)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1145)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1146)))),RAdd(VDot<4,4>(VEC4(t_1057,t_1056,t_1055,t_1054),VEC4(RMul(0.1e1,RMul(l_prod4_1164,l_prod_1148)),RMul(0.1e1,RMul(l_prod5_1173,l_prod_1142)),RMul(0.1e1,RMul(l_prod5_1173,l_prod_1143)),RMul(0.1e1,RMul(RMul(l_prod5_1173,l_varAcc_1138),l_prod_1141)))),VDot<4,4>(VEC4(t_1137,t_1136,t_1135,t_1134),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1141)),RMul(0.1e1,RMul(0.1e1,l_prod_1142)),RMul(0.1e1,RMul(0.1e1,l_prod_1143)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1141)))))))))))))))))))))))),l_cmin_965),RSub(l_cmax_966,l_cmin_965)),RSub(0.1e1,0.e0)))),Translate<IMAGE1D<double[3]>>(globals.cmap));
      real l_nd_1175 = RFloor(l_imgPos_1174);
      real l_f_1176 = RSub(l_imgPos_1174,l_nd_1175);
      int l_n_1177 = RealToInt(l_nd_1175);
      if (IndexInside<IMAGE1D<double[3]>,2>(l_n_1177,globals.cmap)) {
        int l_offp_1178 = IMul(3,l_n_1177);
        int l_offp_1179 = IMul(3,IAdd(l_n_1177,1));
        l_voxels_1180 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1178),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1179),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1178,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1179,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1178,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1179,2))];
      } else {
        int l_offp_1181 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,l_n_1177));
        int l_offp_1182 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,IAdd(l_n_1177,1)));
        l_voxels_1180 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1181),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1182),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1181,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1182,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1181,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1182,2))];
      }
      vec2 v_1183 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_1176,RSub(l_f_1176,0.1e1)),VEC2(-0.1e1,0.1e1)));
      v_1184 = VEC3{4}(VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_1180)),v_1183),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_1180)),v_1183),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_1180)),v_1183));
    } else {
      v_1184 = v_967;
    }
    real l_op1_e3_l_24_1185 = VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_8_960),v_835)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
    real l_op1_e3_l_33_1186 = RAdd(self.phKa,RMul(self.phKd,RMul(l_op1_e3_l_24_1185,l_op1_e3_l_24_1185)));
    vec3{4} v_1187 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.mcNear)),VScale<3,4>(RDiv(RSub(l_rayN_69,globals.camNearVsp),RSub(globals.camFarVsp,globals.camNearVsp)),VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.mcFar)),LOAD_0(TensorRef<[3]>(globals.mcNear)))));
    real l_r_1188 = RMul(RMul(self.phKs,l_scomp_964),0.1e1);
    real l_op1_e3_l_37_1189 = RSub(0.1e1,l__t_962);
    vec3{4} v_1190 = VAdd<3,4>(VEC3{4}(RMul(RMul(l_op1_e3_l_33_1186,VIndex<3,4,0>(v_1187)),VIndex<3,4,0>(v_1184)),RMul(RMul(l_op1_e3_l_33_1186,VIndex<3,4,1>(v_1187)),VIndex<3,4,1>(v_1184)),RMul(RMul(l_op1_e3_l_33_1186,VIndex<3,4,2>(v_1187)),VIndex<3,4,2>(v_1184))),VEC3{4}(l_r_1188,l_r_1188,l_r_1188));
    real l_r_1191 = RMul(self.transp,l_op1_e3_l_37_1189);
    vec3{4} v_1192 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_1191,VIndex<3,4,0>(v_1190)),RMul(l_r_1191,VIndex<3,4,1>(v_1190)),RMul(l_r_1191,VIndex<3,4,2>(v_1190))));
    real l_transp_1193 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_37_1189));
    vec3{4} v_1194 = v_1192;
    if (LT<real>(l_transp_1193,globals.transp0)) {
      self.rayN = l_rayN_69;
      self.rgb = PACK(v_1194);
      self.transp = 0.e0;
      stabilize;
    } else {
      l_transp_1196 = l_transp_1193;
    }
    self.rayN = l_rayN_69;
    self.rgb = PACK(v_1194);
    self.transp = l_transp_1196;
    active;
  }
  stabilize () {
    vec4 v_1199;
    if (LT<real>(self.transp,0.1e1)) {
      real l_aa_1198 = RSub(0.1e1,self.transp);
      v_1199 = VEC4(RDiv(VIndex<3,4,0>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_1198),RDiv(VIndex<3,4,1>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_1198),RDiv(VIndex<3,4,2>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_1198),l_aa_1198);
    } else {
      v_1199 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    self.rgba = PACK(v_1199);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_1201 = 0 to ISub(globals.iresV,1) {
      for i_ui_1202 = 0 to ISub(globals.iresU,1) {
        new ray(i_ui_1202,i_vi_1201);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) block;
input femData(Space) 0space0509_intermedateGlobal;
input femData(FemFunc) 0U050B_intermedateGlobal;
input int cellChoice;
input image(IMAGE1D<double[3]>) cmap;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camNear;
input real camFar;
input real camFOV;
input bool camOrtho;
input int iresU;
input int iresV;
input real rayStep;
input real refStep;
input real transp0;
input real thick;
input real fStrTh;
input real fMaskTh;
input real fBias;
input real maxAlpha;
input bool light;
input tensor[4] phong;
input tensor[3] mcNear;
input tensor[3] mcFar;
input tensor[3] litdir;
input tensor[2] cminmax;
input bool analytical;
input image(IMAGE3D<float[]>) umm;
//***** CONST INIT *****
  {
    globals.camEye = <tensor[3]>[0.e0,-0.2e1,0.e0];
    globals.camAt = <tensor[3]>[0.e0,0.e0,0.e0];
    globals.camUp = <tensor[3]>[0.e0,0.e0,0.1e1];
    globals.camNear = -0.4e1;
    globals.camFar = 0.4e1;
    globals.camFOV = 0.1e2;
    globals.camOrtho = false;
    globals.iresU = 100;
    globals.iresV = 100;
    globals.rayStep = 0.1e-3;
    globals.refStep = 0.1e-3;
    globals.transp0 = 0.5e-2;
    globals.thick = 0.1e-1;
    globals.fStrTh = 0.e0;
    globals.fMaskTh = 0.e0;
    globals.fBias = 0.1e0;
    globals.maxAlpha = 0.1e1;
    globals.light = false;
    globals.phong = <tensor[4]>[0.1e0,0.7e0,0.2e0,0.1e3];
    vec3{4} v_4 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    globals.mcNear = PACK(v_4);
    globals.mcFar = PACK(v_4);
    globals.litdir = <tensor[3]>[0.e0,-0.1e1,0.e0];
    globals.cminmax = <tensor[2]>[0.e0,0.e0];
    globals.analytical = true;
  }
//***** GLOBALS *****
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camDist;
global real camVmax;
global real camUmax;
global real camNearVsp;
global real camFarVsp;
global tensor[3] litwsp;
global int _t;
global femData(Space) _tX;
global femData(FemFunc) _tXX;
//***** FUNCTIONS *****
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_9;
    l__t_9 = <femData(MeshCell)[]>{};
    for i__t_10 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.block),1) {
      l__t_9 = Append<femData(MeshCell),femData(MeshCell)>(l__t_9,LoadFem<femData(MeshCell)>(globals.block,i__t_10));
    }
    femData(FuncCell) l__t_11 = LoadFem<femData(FuncCell)>(LoadFem<femData(FemFunc)>(globals.0U050B_intermedateGlobal,LoadFem<femData(Space)>(globals.0space0509_intermedateGlobal,globals.block)),ExtractFemItem<int,CellIndex(MeshCell)>(Subscript<femData(MeshCell)[]>(l__t_9,globals.cellChoice)));
    femData(FemFunc) l__t_12 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_11);
    vec3{4} v_13 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_14 = Sqrt(VDot<3,4>(v_13,v_13));
    real l_op1_e3_l_9_15 = RDiv(0.1e1,l_op1_e3_l_7_14);
    vec3{4} v_16 = VScale<3,4>(l_op1_e3_l_9_15,v_13);
    globals.camN = PACK(v_16);
    real l_r_18 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_19 = RMul(0.e0,l_r_18);
    real l_r_20 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_21 = RMul(0.e0,l_r_20);
    real l_r_22 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_23 = RMul(0.e0,l_r_22);
    real l_r_24 = RAdd(l_r_19,l_r_21);
    real l_r_25 = RAdd(l_r_24,l_r_23);
    real l_vdot_26 = VDot<3,4>(v_13,VEC3{4}(l_r_25,RAdd(l_r_24,RMul(0.1e1,l_r_22)),RAdd(RAdd(l_r_19,RMul(-0.1e1,l_r_20)),l_r_23)));
    real l_vdot_27 = VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_24,RMul(-0.1e1,l_r_22)),l_r_25,RAdd(RAdd(RMul(0.1e1,l_r_18),l_r_21),l_r_23)));
    real l_vdot_28 = VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_19,RMul(0.1e1,l_r_20)),l_r_23),RAdd(RAdd(RMul(-0.1e1,l_r_18),l_r_21),l_r_23),l_r_25));
    vec3{4} v_29 = VEC3{4}(l_vdot_26,l_vdot_27,l_vdot_28);
    real l_op1_e3_l_38_30 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_15,l_op1_e3_l_9_15),VDot<3,4>(v_29,v_29))));
    vec3{4} v_31 = VScale<3,4>(l_op1_e3_l_38_30,VScale<3,4>(l_op1_e3_l_9_15,v_29));
    globals.camU = PACK(v_31);
    real l_r_33 = RMul(0.e0,l_vdot_26);
    real l_r_34 = RMul(0.e0,l_vdot_27);
    real l_r_35 = RMul(0.e0,l_vdot_28);
    real l_r_36 = RAdd(l_r_33,l_r_34);
    real l_r_37 = RAdd(l_r_36,l_r_35);
    vec3{4} v_38 = VScale<3,4>(l_op1_e3_l_9_15,VEC3{4}(VDot<3,4>(v_13,VEC3{4}(l_r_37,RAdd(l_r_36,RMul(0.1e1,l_vdot_28)),RAdd(RAdd(l_r_33,RMul(-0.1e1,l_vdot_27)),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_36,RMul(-0.1e1,l_vdot_28)),l_r_37,RAdd(RAdd(RMul(0.1e1,l_vdot_26),l_r_34),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_33,RMul(0.1e1,l_vdot_27)),l_r_35),RAdd(RAdd(RMul(-0.1e1,l_vdot_26),l_r_34),l_r_35),l_r_37))));
    real l_r_39 = RMul(l_op1_e3_l_9_15,l_op1_e3_l_38_30);
    real l_r_40 = RMul(l_r_39,VIndex<3,4,0>(v_38));
    real l_r_41 = RMul(l_r_39,VIndex<3,4,1>(v_38));
    real l_r_42 = RMul(l_r_39,VIndex<3,4,2>(v_38));
    globals.camV = <tensor[3]>[l_r_40,l_r_41,l_r_42];
    globals.camDist = l_op1_e3_l_7_14;
    real l_op1_e3_l_10_44 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_44,l_op1_e3_l_7_14);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_44),l_op1_e3_l_7_14),IntToReal(globals.iresV));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_7_14);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_7_14);
    real l_r_45 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.litdir));
    real l_r_46 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.litdir));
    real l_r_47 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.litdir));
    globals.litwsp = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.litdir)),LOAD_0(TensorRef<[3]>(globals.litdir))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_31),l_r_45),RMul(l_r_40,l_r_46)),RMul(VIndex<3,4,0>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_31),l_r_45),RMul(l_r_41,l_r_46)),RMul(VIndex<3,4,1>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_31),l_r_45),RMul(l_r_42,l_r_46)),RMul(VIndex<3,4,2>(v_16),l_r_47)))));
    globals._t = ExtractFemItem<int,CellIndex(FuncCell)>(l__t_11);
    globals._tX = ExtractFem<femData(Space),femData(FemFunc)>(l__t_12);
    globals._tXX = l__t_12;
  }
//***** STRAND *****
strand ray (int p_ui_49,int p_vi_50) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] UV;
  tensor[3] rayOrig;
  tensor[3] rayVec;
  real alphaFix;
  tensor[3] eyeDir;
  real phKa;
  real phKd;
  real phKs;
  real phSp;
  varying output tensor[4] rgba;
  output real raw;
  varying tensor[3] rgb;
  varying real transp;
  initialize (globals) {
    vec3{4} v_59;
    vec3{4} v_57;
    real l_op1_e3_l_9_51 = RNeg(globals.camUmax);
    real l_rayU_52 = RAdd(l_op1_e3_l_9_51,RMul(RDiv(RSub(IntToReal(p_ui_49),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_51)));
    real l_op1_e3_l_9_53 = RNeg(globals.camVmax);
    real l_rayV_54 = RAdd(l_op1_e3_l_9_53,RMul(RDiv(RSub(IntToReal(p_vi_50),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_53)));
    vec3{4} v_55 = VAdd<3,4>(VScale<3,4>(l_rayU_52,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_54,LOAD_0(TensorRef<[3]>(globals.camV))));
    vec3{4} v_56 = v_55;
    if (globals.camOrtho) {
      v_57 = v_56;
    } else {
      v_57 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_58 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_57);
    if (globals.camOrtho) {
      v_59 = VEC3{4}(0.e0,0.e0,0.e0);
    } else {
      real l_r_60 = RDiv(0.1e1,globals.camDist);
      v_59 = VEC3{4}(RMul(l_r_60,VIndex<3,4,0>(v_56)),RMul(l_r_60,VIndex<3,4,1>(v_56)),RMul(l_r_60,VIndex<3,4,2>(v_56)));
    }
    vec3{4} v_61 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),v_59);
    real l_op1_e3_l_7_62 = Sqrt(VDot<3,4>(v_61,v_61));
    self.rayU = l_rayU_52;
    self.rayV = l_rayV_54;
    self.rayN = globals.camNearVsp;
    self.UV = PACK(v_56);
    self.rayOrig = PACK(v_58);
    self.rayVec = PACK(v_61);
    self.alphaFix = RDiv(RMul(globals.rayStep,l_op1_e3_l_7_62),globals.refStep);
    self.eyeDir = PACK(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_7_62),v_61)));
    self.phKa = TensorIndex<&tensor[4],[0]>(TensorRef<[4]>(globals.phong));
    self.phKd = TensorIndex<&tensor[4],[1]>(TensorRef<[4]>(globals.phong));
    self.phKs = TensorIndex<&tensor[4],[2]>(TensorRef<[4]>(globals.phong));
    self.phSp = TensorIndex<&tensor[4],[3]>(TensorRef<[4]>(globals.phong));
    self.rgba = <tensor[4]>[0.e0,0.e0,0.e0,0.e0];
    self.raw = 0.e0;
    self.rgb = <tensor[3]>[0.e0,0.e0,0.e0];
    self.transp = 0.1e1;
  }
  update (globals) {
    real l_transp_1196;
    vec3{4} v_1184;
    real l_scomp_964;
    vec3{4} v_835;
    bool l__t_449;
    real l_rayN_69 = RAdd(self.rayN,globals.rayStep);
    if (GT<real>(l_rayN_69,globals.camFarVsp)) {
      self.rayN = l_rayN_69;
      stabilize;
    }
    vec3{4} v_70 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_69,LOAD_0(TensorRef<[3]>(self.rayVec))));
    tensor[3] _arg_71 = PACK(v_70);
    vec3{4} v_72 = v_70;
    if (ExtractFemItemN<[femData(Mesh),tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),"","",[],int>(ExtractFemItem<femData(RefCell),RefCell(Mesh)>(globals.block),_arg_71,0.1e-8)) {
      bool l__t_448;
      int l_mulRes_73 = IMul(globals._t,84);
      int t_74 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_73);
      int t_75 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,1));
      int t_76 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,2));
      int t_77 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,3));
      int t_78 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,4));
      int t_79 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,5));
      int t_80 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,6));
      int t_81 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,7));
      int t_82 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,8));
      int t_83 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,9));
      int t_84 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,10));
      int t_85 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,11));
      int t_86 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,12));
      int t_87 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,13));
      int t_88 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,14));
      int t_89 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,15));
      int t_90 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,16));
      int t_91 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,17));
      int t_92 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,18));
      int t_93 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,19));
      int t_94 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,20));
      int t_95 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,21));
      int t_96 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,22));
      int t_97 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,23));
      int t_98 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,24));
      int t_99 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,25));
      int t_100 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,26));
      int t_101 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,27));
      int t_102 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,28));
      int t_103 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,29));
      int t_104 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,30));
      int t_105 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,31));
      int t_106 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,32));
      int t_107 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,33));
      int t_108 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,34));
      int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,35));
      int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,36));
      int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,37));
      int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,38));
      int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,39));
      int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,40));
      int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,41));
      int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,42));
      int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,43));
      int t_118 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,44));
      int t_119 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,45));
      int t_120 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,46));
      int t_121 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,47));
      int t_122 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,48));
      int t_123 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,49));
      int t_124 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,50));
      int t_125 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,51));
      int t_126 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,52));
      int t_127 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,53));
      int t_128 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,54));
      int t_129 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,55));
      int t_130 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,56));
      int t_131 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,57));
      int t_132 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,58));
      int t_133 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,59));
      int t_134 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,60));
      int t_135 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,61));
      int t_136 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,62));
      int t_137 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,63));
      int t_138 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,64));
      int t_139 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,65));
      int t_140 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,66));
      int t_141 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,67));
      int t_142 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,68));
      int t_143 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,69));
      int t_144 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,70));
      int t_145 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,71));
      int t_146 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,72));
      int t_147 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,73));
      int t_148 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,74));
      int t_149 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,75));
      int t_150 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,76));
      int t_151 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,77));
      int t_152 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,78));
      int t_153 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,79));
      int t_154 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,80));
      int t_155 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,81));
      int t_156 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,82));
      int t_157 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,83));
      real t_158 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_157));
      real t_159 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_156));
      real t_160 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_155));
      real t_161 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_154));
      real t_162 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_153));
      real t_163 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_152));
      real t_164 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_151));
      real t_165 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_150));
      real t_166 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_149));
      real t_167 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_148));
      real t_168 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_147));
      real t_169 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_146));
      real t_170 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_145));
      real t_171 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_144));
      real t_172 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_143));
      real t_173 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_142));
      real t_174 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_141));
      real t_175 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_140));
      real t_176 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_139));
      real t_177 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_138));
      real t_178 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_137));
      real t_179 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_136));
      real t_180 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_135));
      real t_181 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_134));
      real t_182 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_133));
      real t_183 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_132));
      real t_184 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_131));
      real t_185 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_130));
      real t_186 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_129));
      real t_187 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_128));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_127));
      real t_189 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_126));
      real t_190 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_125));
      real t_191 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_124));
      real t_192 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_123));
      real t_193 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_122));
      real t_194 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_121));
      real t_195 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_120));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_119));
      real t_197 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_118));
      real t_198 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_117));
      real t_199 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_116));
      real t_200 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_115));
      real t_201 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_114));
      real t_202 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_113));
      real t_203 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_112));
      real t_204 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_111));
      real t_205 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_110));
      real t_206 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_109));
      real t_207 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_108));
      real t_208 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_107));
      real t_209 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_106));
      real t_210 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_105));
      real t_211 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_104));
      real t_212 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_103));
      real t_213 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_102));
      real t_214 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_101));
      real t_215 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_100));
      real t_216 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_99));
      real t_217 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_98));
      real t_218 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_97));
      real t_219 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_96));
      real t_220 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_95));
      real t_221 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_94));
      real t_222 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_93));
      real t_223 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_92));
      real t_224 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_91));
      real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_90));
      real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_89));
      real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_88));
      real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_87));
      real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_86));
      real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_85));
      real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_84));
      real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_83));
      real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_82));
      real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_81));
      real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_80));
      real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_79));
      real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_78));
      real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_77));
      real t_239 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_76));
      real t_240 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_75));
      real t_241 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_74));
      vec4 v_242 = VEC4(t_241,t_240,t_239,t_238);
      vec4 v_243 = VEC4(t_237,t_236,t_235,t_234);
      vec4 v_244 = VEC4(t_233,t_232,t_231,t_230);
      vec4 v_245 = VEC4(t_229,t_228,t_227,t_226);
      vec4 v_246 = VEC4(t_225,t_224,t_223,t_222);
      vec4 v_247 = VEC4(t_221,t_220,t_219,t_218);
      vec4 v_248 = VEC4(t_217,t_216,t_215,t_214);
      vec4 v_249 = VEC4(t_213,t_212,t_211,t_210);
      vec4 v_250 = VEC4(t_209,t_208,t_207,t_206);
      vec4 v_251 = VEC4(t_205,t_204,t_203,t_202);
      vec4 v_252 = VEC4(t_201,t_200,t_199,t_198);
      vec4 v_253 = VEC4(t_197,t_196,t_195,t_194);
      vec4 v_254 = VEC4(t_193,t_192,t_191,t_190);
      vec4 v_255 = VEC4(t_189,t_188,t_187,t_186);
      vec4 v_256 = VEC4(t_185,t_184,t_183,t_182);
      vec4 v_257 = VEC4(t_181,t_180,t_179,t_178);
      vec4 v_258 = VEC4(t_177,t_176,t_175,t_174);
      vec4 v_259 = VEC4(t_173,t_172,t_171,t_170);
      vec4 v_260 = VEC4(t_169,t_168,t_167,t_166);
      vec4 v_261 = VEC4(t_165,t_164,t_163,t_162);
      vec4 v_262 = VEC4(t_161,t_160,t_159,t_158);
      real l_varAcc_263 = VIndex<3,4,0>(v_72);
      real l_varAcc_264 = VIndex<3,4,1>(v_72);
      real l_varAcc_265 = VIndex<3,4,2>(v_72);
      real l_prod_266 = RMul(0.1e1,0.1e1);
      real l_prod_267 = RMul(0.1e1,l_prod_266);
      real l_basisEval_268 = RMul(0.2e1,l_prod_267);
      real l_prod_269 = RMul(0.1e1,l_varAcc_265);
      real l_prod_270 = RMul(0.1e1,l_prod_269);
      real l_basisEval_271 = RMul(0.2e1,l_prod_270);
      real l_prod_272 = RMul(l_varAcc_264,0.1e1);
      real l_prod_273 = RMul(0.1e1,l_prod_272);
      real l_basisEval_274 = RMul(0.2e1,l_prod_273);
      real l_prod_275 = RMul(l_varAcc_263,l_prod_266);
      real l_prod2_276 = RMul(l_varAcc_265,l_varAcc_265);
      real l_prod_277 = RMul(0.1e1,l_prod2_276);
      real l_prod_278 = RMul(0.1e1,l_prod_277);
      real l_basisEval_279 = RMul(0.2e1,l_prod_278);
      real l_prod_280 = RMul(l_varAcc_264,l_varAcc_265);
      real l_prod_281 = RMul(0.1e1,l_prod_280);
      real l_basisEval_282 = RMul(0.2e1,l_prod_281);
      real l_prod2_283 = RMul(l_varAcc_264,l_varAcc_264);
      real l_prod_284 = RMul(l_prod2_283,0.1e1);
      real l_prod_285 = RMul(0.1e1,l_prod_284);
      real l_basisEval_286 = RMul(0.2e1,l_prod_285);
      real l_prod_287 = RMul(l_varAcc_263,l_prod_269);
      real l_basisEval_288 = RMul(0.6e1,l_prod_287);
      real l_prod_289 = RMul(l_varAcc_263,l_prod_272);
      real l_basisEval_290 = RMul(0.6e1,l_prod_289);
      real l_prod2_291 = RMul(l_varAcc_263,l_varAcc_263);
      real l_prod_292 = RMul(l_prod2_291,l_prod_266);
      real l_prod3_293 = RMul(l_prod2_276,l_varAcc_265);
      real l_prod_294 = RMul(0.1e1,l_prod3_293);
      real l_prod_295 = RMul(0.1e1,l_prod_294);
      real l_basisEval_296 = RMul(0.2e1,l_prod_295);
      real l_prod_297 = RMul(l_varAcc_264,l_prod2_276);
      real l_prod_298 = RMul(0.1e1,l_prod_297);
      real l_basisEval_299 = RMul(0.2e1,l_prod_298);
      real l_prod_300 = RMul(l_prod2_283,l_varAcc_265);
      real l_prod_301 = RMul(0.1e1,l_prod_300);
      real l_basisEval_302 = RMul(0.2e1,l_prod_301);
      real l_prod3_303 = RMul(l_prod2_283,l_varAcc_264);
      real l_prod_304 = RMul(l_prod3_303,0.1e1);
      real l_prod_305 = RMul(0.1e1,l_prod_304);
      real l_basisEval_306 = RMul(0.2e1,l_prod_305);
      real l_prod_307 = RMul(l_varAcc_263,l_prod_277);
      real l_basisEval_308 = RMul(0.6e1,l_prod_307);
      real l_prod_309 = RMul(l_varAcc_263,l_prod_280);
      real l_basisEval_310 = RMul(0.6e1,l_prod_309);
      real l_prod_311 = RMul(l_varAcc_263,l_prod_284);
      real l_basisEval_312 = RMul(0.6e1,l_prod_311);
      real l_prod_313 = RMul(l_prod2_291,l_prod_269);
      real l_prod_314 = RMul(l_prod2_291,l_prod_272);
      real l_prod3_315 = RMul(l_prod2_291,l_varAcc_263);
      real l_prod_316 = RMul(l_prod3_315,l_prod_266);
      real l_prod4_317 = RMul(l_prod3_293,l_varAcc_265);
      real l_prod_318 = RMul(0.1e1,l_prod4_317);
      real l_prod_319 = RMul(0.1e1,l_prod_318);
      real l_basisEval_320 = RMul(0.2e1,l_prod_319);
      real l_prod_321 = RMul(l_varAcc_264,l_prod3_293);
      real l_prod_322 = RMul(0.1e1,l_prod_321);
      real l_basisEval_323 = RMul(0.2e1,l_prod_322);
      real l_prod_324 = RMul(l_prod2_283,l_prod2_276);
      real l_prod_325 = RMul(0.1e1,l_prod_324);
      real l_prod_326 = RMul(l_prod3_303,l_varAcc_265);
      real l_prod_327 = RMul(0.1e1,l_prod_326);
      real l_basisEval_328 = RMul(0.2e1,l_prod_327);
      real l_prod4_329 = RMul(l_prod3_303,l_varAcc_264);
      real l_prod_330 = RMul(l_prod4_329,0.1e1);
      real l_prod_331 = RMul(0.1e1,l_prod_330);
      real l_basisEval_332 = RMul(0.2e1,l_prod_331);
      real l_prod_333 = RMul(l_varAcc_263,l_prod_294);
      real l_prod_334 = RMul(l_varAcc_263,l_prod_297);
      real l_basisEval_335 = RMul(0.6e1,l_prod_334);
      real l_prod_336 = RMul(l_varAcc_263,l_prod_300);
      real l_basisEval_337 = RMul(0.6e1,l_prod_336);
      real l_prod_338 = RMul(l_varAcc_263,l_prod_304);
      real l_prod_339 = RMul(l_prod2_291,l_prod_277);
      real l_basisEval_340 = RMul(0.12e2,l_prod_339);
      real l_prod_341 = RMul(l_prod2_291,l_prod_280);
      real l_prod_342 = RMul(l_prod2_291,l_prod_284);
      real l_basisEval_343 = RMul(0.12e2,l_prod_342);
      real l_prod_344 = RMul(l_prod3_315,l_prod_269);
      real l_prod_345 = RMul(l_prod3_315,l_prod_272);
      real l_prod4_346 = RMul(l_prod3_315,l_varAcc_263);
      real l_prod_347 = RMul(l_prod4_346,l_prod_266);
      real l_basisEval_348 = RMul(0.1e1,l_prod_267);
      real l_basisEval_349 = RMul(0.1e1,l_prod_270);
      real l_basisEval_350 = RMul(0.2e1,l_prod_275);
      real l_basisEval_351 = RMul(0.1e1,l_prod_278);
      real l_basisEval_352 = RMul(0.3e1,l_prod_285);
      real l_basisEval_353 = RMul(0.2e1,l_prod_287);
      real l_basisEval_354 = RMul(0.3e1,l_prod_292);
      real l_basisEval_355 = RMul(0.1e1,l_prod_295);
      real l_basisEval_356 = RMul(0.3e1,l_prod_301);
      real l_basisEval_357 = RMul(0.4e1,l_prod_305);
      real l_basisEval_358 = RMul(0.2e1,l_prod_307);
      real l_basisEval_359 = RMul(0.4e1,l_prod_309);
      real l_basisEval_360 = RMul(0.3e1,l_prod_313);
      real l_basisEval_361 = RMul(0.6e1,l_prod_314);
      real l_basisEval_362 = RMul(0.4e1,l_prod_316);
      real l_basisEval_363 = RMul(0.1e1,l_prod_319);
      real l_basisEval_364 = RMul(0.3e1,l_prod_325);
      real l_basisEval_365 = RMul(0.4e1,l_prod_327);
      real l_basisEval_366 = RMul(0.5e1,l_prod_331);
      real l_basisEval_367 = RMul(0.2e1,l_prod_333);
      real l_basisEval_368 = RMul(0.3e1,l_prod_339);
      real l_basisEval_369 = RMul(0.6e1,l_prod_341);
      real l_basisEval_370 = RMul(0.4e1,l_prod_344);
      real l_basisEval_371 = RMul(0.5e1,l_prod_347);
      real l_basisEval_372 = RMul(0.1e1,l_prod_273);
      real l_basisEval_373 = RMul(0.3e1,l_prod_278);
      real l_basisEval_374 = RMul(0.1e1,l_prod_285);
      real l_basisEval_375 = RMul(0.2e1,l_prod_289);
      real l_basisEval_376 = RMul(0.4e1,l_prod_295);
      real l_basisEval_377 = RMul(0.3e1,l_prod_298);
      real l_basisEval_378 = RMul(0.1e1,l_prod_305);
      real l_basisEval_379 = RMul(0.2e1,l_prod_311);
      real l_basisEval_380 = RMul(0.6e1,l_prod_313);
      real l_basisEval_381 = RMul(0.3e1,l_prod_314);
      real l_basisEval_382 = RMul(0.5e1,l_prod_319);
      real l_basisEval_383 = RMul(0.4e1,l_prod_322);
      real l_basisEval_384 = RMul(0.1e1,l_prod_331);
      real l_basisEval_385 = RMul(0.2e1,l_prod_338);
      real l_basisEval_386 = RMul(0.3e1,l_prod_342);
      real l_basisEval_387 = RMul(0.4e1,l_prod_345);
      real l_basisEval_388 = RMul(0.6e1,l_prod_281);
      real l_basisEval_389 = RMul(0.2e1,l_prod_292);
      real l_basisEval_390 = RMul(0.6e1,l_prod_298);
      real l_basisEval_391 = RMul(0.2e1,l_prod_313);
      real l_basisEval_392 = RMul(0.2e1,l_prod_316);
      real l_basisEval_393 = RMul(0.12e2,l_prod_325);
      real l_basisEval_394 = RMul(0.2e1,l_prod_344);
      real l_basisEval_395 = RMul(0.2e1,l_prod_347);
      real l_basisEval_396 = RMul(0.1e1,l_prod_275);
      real l_basisEval_397 = RMul(0.1e1,l_prod_292);
      real l_basisEval_398 = RMul(0.6e1,l_prod_301);
      real l_basisEval_399 = RMul(0.3e1,l_prod_307);
      real l_basisEval_400 = RMul(0.3e1,l_prod_311);
      real l_basisEval_401 = RMul(0.2e1,l_prod_314);
      real l_basisEval_402 = RMul(0.1e1,l_prod_316);
      real l_basisEval_403 = RMul(0.4e1,l_prod_333);
      real l_basisEval_404 = RMul(0.4e1,l_prod_338);
      real l_basisEval_405 = RMul(0.2e1,l_prod_345);
      real l_basisEval_406 = RMul(0.1e1,l_prod_347);
      real l_vdot_407 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_348,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_274,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_351,l_basisEval_282)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_352,0.e0,l_basisEval_353,RMul(0.4e1,l_prod_289))),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_354,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_355,l_basisEval_299)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_356,l_basisEval_357,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_359,l_basisEval_312,0.e0,l_basisEval_360)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_361,0.e0,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_366,0.e0,l_basisEval_367,RMul(0.4e1,l_prod_334))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_337,RMul(0.8e1,l_prod_338),0.e0,l_basisEval_368)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_369,RMul(0.9e1,l_prod_342),0.e0,l_basisEval_370)),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.8e1,l_prod_345),0.e0,l_basisEval_371,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_408 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_372)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_373,l_basisEval_282,l_basisEval_374)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,RMul(0.4e1,l_prod_287),l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_354,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_376,l_basisEval_377,l_basisEval_302)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_378,0.e0,l_basisEval_308,l_basisEval_359)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_379,0.e0,l_basisEval_380,l_basisEval_381)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_362,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.8e1,l_prod_333),l_basisEval_335,RMul(0.4e1,l_prod_336))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_385,0.e0,RMul(0.9e1,l_prod_339),l_basisEval_369)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_386,0.e0,RMul(0.8e1,l_prod_344),l_basisEval_387)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_371,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_409 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_274,0.e0,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_373,RMul(0.4e1,l_prod_281),l_basisEval_352)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_353,l_basisEval_375)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_376,l_basisEval_390,l_basisEval_398,l_basisEval_357)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_399,l_basisEval_359)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_400,0.e0,0.e0,l_basisEval_391)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_401,0.e0,0.e0,l_basisEval_402)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_382,RMul(0.8e1,l_prod_322),RMul(0.9e1,l_prod_325))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.8e1,l_prod_327),l_basisEval_366,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_403,l_basisEval_335,l_basisEval_337,l_basisEval_404)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,0.e0,l_basisEval_368,RMul(0.4e1,l_prod_341))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_386,0.e0,0.e0,l_basisEval_394)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_405,0.e0,0.e0,l_basisEval_406)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_410 = <tensor[3,3]>[RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_271,l_basisEval_274,RMul(0.6e1,l_prod_275))),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_279,l_basisEval_282,l_basisEval_286)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_288,l_basisEval_290,RMul(0.12e2,l_prod_292),0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_296,l_basisEval_299)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_302,l_basisEval_306,l_basisEval_308,l_basisEval_310)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_312,RMul(0.12e2,l_prod_313),RMul(0.12e2,l_prod_314),RMul(0.20e2,l_prod_316))),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_320,l_basisEval_323,RMul(0.2e1,l_prod_325))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_328,l_basisEval_332,RMul(0.6e1,l_prod_333),l_basisEval_335)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_337,RMul(0.6e1,l_prod_338),l_basisEval_340,RMul(0.12e2,l_prod_341))),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_343,RMul(0.20e2,l_prod_344),RMul(0.20e2,l_prod_345),RMul(0.30e2,l_prod_347))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_407,l_vdot_408,l_vdot_407,RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_271,RMul(0.6e1,l_prod_273),0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_350,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,l_basisEval_279,l_basisEval_388)),RAdd(VDot<4,4>(v_248,VEC4(RMul(0.12e2,l_prod_285),0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_290,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,l_basisEval_296,l_basisEval_390,RMul(0.12e2,l_prod_301))),RAdd(VDot<4,4>(v_252,VEC4(RMul(0.20e2,l_prod_305),0.e0,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_310,RMul(0.12e2,l_prod_311),0.e0,0.e0)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_391,l_basisEval_361,0.e0,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_392,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,l_basisEval_320,RMul(0.6e1,l_prod_322))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_393,RMul(0.20e2,l_prod_327),RMul(0.30e2,l_prod_331),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,l_basisEval_367,l_basisEval_335,RMul(0.12e2,l_prod_336))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.20e2,l_prod_338),0.e0,0.e0,RMul(0.2e1,l_prod_339))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_369,l_basisEval_343,0.e0,0.e0)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_394,RMul(0.6e1,l_prod_345),0.e0,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_395,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_409,l_vdot_408,l_vdot_409,RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_270),l_basisEval_274)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_350,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(RMul(0.12e2,l_prod_278),l_basisEval_388,l_basisEval_286,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_288,l_basisEval_375,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_389,0.e0,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_295))),RAdd(VDot<4,4>(v_251,VEC4(RMul(0.12e2,l_prod_298),l_basisEval_398,l_basisEval_306,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,RMul(0.12e2,l_prod_307),l_basisEval_310,l_basisEval_379)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_380,l_basisEval_401)),RAdd(VDot<4,4>(v_254,VEC4(0.e0,0.e0,l_basisEval_392,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.30e2,l_prod_319),RMul(0.20e2,l_prod_322),l_basisEval_393,RMul(0.6e1,l_prod_327))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_332,0.e0,0.e0,RMul(0.20e2,l_prod_333))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.12e2,l_prod_334),l_basisEval_337,l_basisEval_385,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_340,l_basisEval_369,RMul(0.2e1,l_prod_342))),RAdd(VDot<4,4>(v_260,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_344),l_basisEval_405)),RAdd(VDot<4,4>(v_261,VEC4(0.e0,0.e0,l_basisEval_395,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      real[3] l__t_411 = EigenVals3x3(TensorRef<[3,3]>(t_410));
      real l_basisEval_412 = RMul(0.2e1,l_prod_309);
      real l_basisEval_413 = RMul(0.2e1,l_prod_334);
      real l_basisEval_414 = RMul(0.2e1,l_prod_336);
      real l_prod_415 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_317,l_varAcc_265)));
      real l_basisEval_416 = RMul(0.1e1,l_prod_415);
      real l_prod_417 = RMul(0.1e1,RMul(l_varAcc_264,l_prod4_317));
      real l_prod_418 = RMul(0.1e1,RMul(l_prod2_283,l_prod3_293));
      real l_prod_419 = RMul(0.1e1,RMul(l_prod3_303,l_prod2_276));
      real l_prod_420 = RMul(0.1e1,RMul(l_prod4_329,l_varAcc_265));
      real l_prod_421 = RMul(0.1e1,RMul(RMul(l_prod4_329,l_varAcc_264),0.1e1));
      real l_basisEval_422 = RMul(0.1e1,l_prod_421);
      real l_prod_423 = RMul(l_varAcc_263,l_prod_318);
      real l_prod_424 = RMul(l_varAcc_263,l_prod_321);
      real l_basisEval_425 = RMul(0.2e1,l_prod_424);
      real l_prod_426 = RMul(l_varAcc_263,l_prod_324);
      real l_prod_427 = RMul(l_varAcc_263,l_prod_326);
      real l_basisEval_428 = RMul(0.2e1,l_prod_427);
      real l_prod_429 = RMul(l_varAcc_263,l_prod_330);
      real l_prod_430 = RMul(l_prod2_291,l_prod_294);
      real l_prod_431 = RMul(l_prod2_291,l_prod_297);
      real l_basisEval_432 = RMul(0.3e1,l_prod_431);
      real l_prod_433 = RMul(l_prod2_291,l_prod_300);
      real l_basisEval_434 = RMul(0.3e1,l_prod_433);
      real l_prod_435 = RMul(l_prod2_291,l_prod_304);
      real l_prod_436 = RMul(l_prod3_315,l_prod_277);
      real l_prod_437 = RMul(l_prod3_315,l_prod_280);
      real l_prod_438 = RMul(l_prod3_315,l_prod_284);
      real l_prod_439 = RMul(l_prod4_346,l_prod_269);
      real l_prod_440 = RMul(l_prod4_346,l_prod_272);
      real l_prod_441 = RMul(RMul(l_prod4_346,l_varAcc_263),l_prod_266);
      real l_basisEval_442 = RMul(0.2e1,l_prod_341);
      real l_basisEval_443 = RMul(0.3e1,l_prod_426);
      real l_basisEval_444 = RMul(0.2e1,l_prod_437);
      real l_basisEval_445 = RMul(0.1e1,l_prod_441);
      vec3{4} v_446 = VEC3{4}(RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_349)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_372,l_basisEval_350,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_351,RMul(0.1e1,l_prod_281))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_374,l_basisEval_353,l_basisEval_375,l_basisEval_354)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_355,RMul(0.1e1,l_prod_298),RMul(0.1e1,l_prod_301))),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_378,l_basisEval_358,l_basisEval_412,l_basisEval_379)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_360,l_basisEval_381,l_basisEval_362,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_363,RMul(0.1e1,l_prod_322),RMul(0.1e1,l_prod_325))),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_327),l_basisEval_384,l_basisEval_367,l_basisEval_413)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_414,l_basisEval_385,l_basisEval_368,RMul(0.3e1,l_prod_341))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_386,l_basisEval_370,l_basisEval_387,l_basisEval_371)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_416)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_417),RMul(0.1e1,l_prod_418),RMul(0.1e1,l_prod_419),RMul(0.1e1,l_prod_420))),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_422,RMul(0.2e1,l_prod_423),l_basisEval_425,RMul(0.2e1,l_prod_426))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_428,RMul(0.2e1,l_prod_429),RMul(0.3e1,l_prod_430),l_basisEval_432)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_434,RMul(0.3e1,l_prod_435),RMul(0.4e1,l_prod_436),RMul(0.4e1,l_prod_437))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.4e1,l_prod_438),RMul(0.5e1,l_prod_439),RMul(0.5e1,l_prod_440),RMul(0.6e1,l_prod_441))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,l_basisEval_348)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_349,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_396,0.e0,0.e0,l_basisEval_351)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_282,l_basisEval_352,0.e0,RMul(0.1e1,l_prod_287))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_375,0.e0,l_basisEval_397,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_355,l_basisEval_299,l_basisEval_356)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_357,0.e0,RMul(0.1e1,l_prod_307),l_basisEval_412)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_400,0.e0,RMul(0.1e1,l_prod_313),l_basisEval_401)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_402,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_363,l_basisEval_323,l_basisEval_364,l_basisEval_365)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_366,0.e0,RMul(0.1e1,l_prod_333),l_basisEval_413)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.3e1,l_prod_336),l_basisEval_404,0.e0,RMul(0.1e1,l_prod_339))),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_442,l_basisEval_386,0.e0,RMul(0.1e1,l_prod_344))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_405,0.e0,l_basisEval_406,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_416,RMul(0.2e1,l_prod_417),RMul(0.3e1,l_prod_418))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.4e1,l_prod_419),RMul(0.5e1,l_prod_420),RMul(0.6e1,l_prod_421),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_423),l_basisEval_425,l_basisEval_443,RMul(0.4e1,l_prod_427))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.5e1,l_prod_429),0.e0,RMul(0.1e1,l_prod_430),RMul(0.2e1,l_prod_431))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_434,RMul(0.4e1,l_prod_435),0.e0,RMul(0.1e1,l_prod_436))),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_444,RMul(0.3e1,l_prod_438),0.e0,RMul(0.1e1,l_prod_439))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.2e1,l_prod_440),0.e0,l_basisEval_445,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,l_basisEval_348,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_271,l_basisEval_372,0.e0,l_basisEval_396)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_373,l_basisEval_282)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_374,0.e0,l_basisEval_353,RMul(0.1e1,l_prod_289))),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_397,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_376,l_basisEval_377,l_basisEval_302,l_basisEval_378)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_399,l_basisEval_412,RMul(0.1e1,l_prod_311))),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_391,RMul(0.1e1,l_prod_314),0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_402,0.e0,0.e0,l_basisEval_382)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_383,l_basisEval_364,l_basisEval_328,l_basisEval_384)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_403,RMul(0.3e1,l_prod_334),l_basisEval_414)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_338),0.e0,l_basisEval_368,l_basisEval_442)),RAdd(VDot<4,4>(v_254,VEC4(RMul(0.1e1,l_prod_342),0.e0,l_basisEval_394,RMul(0.1e1,l_prod_345))),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_406,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.6e1,l_prod_415),RMul(0.5e1,l_prod_417),RMul(0.4e1,l_prod_418),RMul(0.3e1,l_prod_419))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.2e1,l_prod_420),l_basisEval_422,0.e0,RMul(0.5e1,l_prod_423))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.4e1,l_prod_424),l_basisEval_443,l_basisEval_428,RMul(0.1e1,l_prod_429))),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.4e1,l_prod_430),l_basisEval_432,RMul(0.2e1,l_prod_433))),RAdd(VDot<4,4>(v_260,VEC4(RMul(0.1e1,l_prod_435),0.e0,RMul(0.3e1,l_prod_436),l_basisEval_444)),RAdd(VDot<4,4>(v_261,VEC4(RMul(0.1e1,l_prod_438),0.e0,RMul(0.2e1,l_prod_439),RMul(0.1e1,l_prod_440))),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_445,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,l_basisEval_348,0.e0,0.e0)))))))))))))))))))))));
      if (GT<real>(RDiv(RNeg(Subscript<real[3]>(l__t_411,1)),RAdd(globals.fBias,Sqrt(VDot<3,4>(v_446,v_446)))),globals.fStrTh)) {
        bool l__t_447;
        if (GTE<real>(0.1e1,globals.fMaskTh)) {
          l__t_447 = true;
        } else {
          l__t_447 = false;
        }
        l__t_448 = l__t_447;
      } else {
        l__t_448 = false;
      }
      l__t_449 = l__t_448;
    } else {
      l__t_449 = false;
    }
    if (BNot(l__t_449)) {
      self.rayN = l_rayN_69;
      active;
    }
    if (BNot(globals.analytical)) {
      tensor[3][3] l_E_789;
      real[3] l_evals_788;
      int l_mulRes_450 = IMul(globals._t,84);
      int t_451 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_450);
      int t_452 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,1));
      int t_453 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,2));
      int t_454 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,3));
      int t_455 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,4));
      int t_456 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,5));
      int t_457 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,6));
      int t_458 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,7));
      int t_459 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,8));
      int t_460 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,9));
      int t_461 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,10));
      int t_462 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,11));
      int t_463 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,12));
      int t_464 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,13));
      int t_465 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,14));
      int t_466 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,15));
      int t_467 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,16));
      int t_468 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,17));
      int t_469 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,18));
      int t_470 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,19));
      int t_471 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,20));
      int t_472 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,21));
      int t_473 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,22));
      int t_474 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,23));
      int t_475 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,24));
      int t_476 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,25));
      int t_477 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,26));
      int t_478 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,27));
      int t_479 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,28));
      int t_480 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,29));
      int t_481 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,30));
      int t_482 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,31));
      int t_483 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,32));
      int t_484 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,33));
      int t_485 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,34));
      int t_486 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,35));
      int t_487 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,36));
      int t_488 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,37));
      int t_489 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,38));
      int t_490 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,39));
      int t_491 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,40));
      int t_492 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,41));
      int t_493 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,42));
      int t_494 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,43));
      int t_495 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,44));
      int t_496 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,45));
      int t_497 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,46));
      int t_498 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,47));
      int t_499 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,48));
      int t_500 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,49));
      int t_501 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,50));
      int t_502 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,51));
      int t_503 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,52));
      int t_504 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,53));
      int t_505 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,54));
      int t_506 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,55));
      int t_507 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,56));
      int t_508 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,57));
      int t_509 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,58));
      int t_510 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,59));
      int t_511 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,60));
      int t_512 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,61));
      int t_513 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,62));
      int t_514 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,63));
      int t_515 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,64));
      int t_516 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,65));
      int t_517 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,66));
      int t_518 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,67));
      int t_519 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,68));
      int t_520 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,69));
      int t_521 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,70));
      int t_522 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,71));
      int t_523 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,72));
      int t_524 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,73));
      int t_525 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,74));
      int t_526 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,75));
      int t_527 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,76));
      int t_528 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,77));
      int t_529 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,78));
      int t_530 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,79));
      int t_531 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,80));
      int t_532 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,81));
      int t_533 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,82));
      int t_534 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_450,83));
      real t_535 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_534));
      real t_536 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_533));
      real t_537 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_532));
      real t_538 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_531));
      real t_539 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_530));
      real t_540 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_529));
      real t_541 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_528));
      real t_542 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_527));
      real t_543 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_526));
      real t_544 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_525));
      real t_545 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_524));
      real t_546 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_523));
      real t_547 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_522));
      real t_548 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_521));
      real t_549 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_520));
      real t_550 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_519));
      real t_551 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_518));
      real t_552 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_517));
      real t_553 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_516));
      real t_554 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_515));
      real t_555 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_514));
      real t_556 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_513));
      real t_557 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_512));
      real t_558 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_511));
      real t_559 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_510));
      real t_560 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_509));
      real t_561 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_508));
      real t_562 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_507));
      real t_563 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_506));
      real t_564 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_505));
      real t_565 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_504));
      real t_566 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_503));
      real t_567 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_502));
      real t_568 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_501));
      real t_569 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_500));
      real t_570 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_499));
      real t_571 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_498));
      real t_572 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_497));
      real t_573 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_496));
      real t_574 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_495));
      real t_575 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_494));
      real t_576 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_493));
      real t_577 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_492));
      real t_578 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_491));
      real t_579 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_490));
      real t_580 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_489));
      real t_581 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_488));
      real t_582 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_487));
      real t_583 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_486));
      real t_584 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_485));
      real t_585 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_484));
      real t_586 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_483));
      real t_587 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_482));
      real t_588 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_481));
      real t_589 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_480));
      real t_590 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_479));
      real t_591 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_478));
      real t_592 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_477));
      real t_593 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_476));
      real t_594 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_475));
      real t_595 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_474));
      real t_596 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_473));
      real t_597 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_472));
      real t_598 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_471));
      real t_599 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_470));
      real t_600 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_469));
      real t_601 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_468));
      real t_602 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_467));
      real t_603 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_466));
      real t_604 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_465));
      real t_605 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_464));
      real t_606 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_463));
      real t_607 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_462));
      real t_608 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_461));
      real t_609 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_460));
      real t_610 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_459));
      real t_611 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_458));
      real t_612 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_457));
      real t_613 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_456));
      real t_614 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_455));
      real t_615 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_454));
      real t_616 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_453));
      real t_617 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_452));
      real t_618 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_451));
      vec4 v_619 = VEC4(t_618,t_617,t_616,t_615);
      vec4 v_620 = VEC4(t_614,t_613,t_612,t_611);
      vec4 v_621 = VEC4(t_610,t_609,t_608,t_607);
      vec4 v_622 = VEC4(t_606,t_605,t_604,t_603);
      vec4 v_623 = VEC4(t_602,t_601,t_600,t_599);
      vec4 v_624 = VEC4(t_598,t_597,t_596,t_595);
      vec4 v_625 = VEC4(t_594,t_593,t_592,t_591);
      vec4 v_626 = VEC4(t_590,t_589,t_588,t_587);
      vec4 v_627 = VEC4(t_586,t_585,t_584,t_583);
      vec4 v_628 = VEC4(t_582,t_581,t_580,t_579);
      vec4 v_629 = VEC4(t_578,t_577,t_576,t_575);
      vec4 v_630 = VEC4(t_574,t_573,t_572,t_571);
      vec4 v_631 = VEC4(t_570,t_569,t_568,t_567);
      vec4 v_632 = VEC4(t_566,t_565,t_564,t_563);
      vec4 v_633 = VEC4(t_562,t_561,t_560,t_559);
      vec4 v_634 = VEC4(t_558,t_557,t_556,t_555);
      vec4 v_635 = VEC4(t_554,t_553,t_552,t_551);
      vec4 v_636 = VEC4(t_550,t_549,t_548,t_547);
      vec4 v_637 = VEC4(t_546,t_545,t_544,t_543);
      vec4 v_638 = VEC4(t_542,t_541,t_540,t_539);
      vec4 v_639 = VEC4(t_538,t_537,t_536,t_535);
      real l_varAcc_640 = VIndex<3,4,0>(v_72);
      real l_varAcc_641 = VIndex<3,4,1>(v_72);
      real l_varAcc_642 = VIndex<3,4,2>(v_72);
      real l_prod_643 = RMul(0.1e1,0.1e1);
      real l_prod_644 = RMul(0.1e1,l_prod_643);
      real l_basisEval_645 = RMul(0.2e1,l_prod_644);
      real l_prod_646 = RMul(0.1e1,l_varAcc_642);
      real l_prod_647 = RMul(0.1e1,l_prod_646);
      real l_basisEval_648 = RMul(0.2e1,l_prod_647);
      real l_prod_649 = RMul(l_varAcc_641,0.1e1);
      real l_prod_650 = RMul(0.1e1,l_prod_649);
      real l_basisEval_651 = RMul(0.2e1,l_prod_650);
      real l_prod_652 = RMul(l_varAcc_640,l_prod_643);
      real l_prod2_653 = RMul(l_varAcc_642,l_varAcc_642);
      real l_prod_654 = RMul(0.1e1,l_prod2_653);
      real l_prod_655 = RMul(0.1e1,l_prod_654);
      real l_basisEval_656 = RMul(0.2e1,l_prod_655);
      real l_prod_657 = RMul(l_varAcc_641,l_varAcc_642);
      real l_prod_658 = RMul(0.1e1,l_prod_657);
      real l_basisEval_659 = RMul(0.2e1,l_prod_658);
      real l_prod2_660 = RMul(l_varAcc_641,l_varAcc_641);
      real l_prod_661 = RMul(l_prod2_660,0.1e1);
      real l_prod_662 = RMul(0.1e1,l_prod_661);
      real l_basisEval_663 = RMul(0.2e1,l_prod_662);
      real l_prod_664 = RMul(l_varAcc_640,l_prod_646);
      real l_basisEval_665 = RMul(0.6e1,l_prod_664);
      real l_prod_666 = RMul(l_varAcc_640,l_prod_649);
      real l_basisEval_667 = RMul(0.6e1,l_prod_666);
      real l_prod2_668 = RMul(l_varAcc_640,l_varAcc_640);
      real l_prod_669 = RMul(l_prod2_668,l_prod_643);
      real l_prod3_670 = RMul(l_prod2_653,l_varAcc_642);
      real l_prod_671 = RMul(0.1e1,l_prod3_670);
      real l_prod_672 = RMul(0.1e1,l_prod_671);
      real l_basisEval_673 = RMul(0.2e1,l_prod_672);
      real l_prod_674 = RMul(l_varAcc_641,l_prod2_653);
      real l_prod_675 = RMul(0.1e1,l_prod_674);
      real l_basisEval_676 = RMul(0.2e1,l_prod_675);
      real l_prod_677 = RMul(l_prod2_660,l_varAcc_642);
      real l_prod_678 = RMul(0.1e1,l_prod_677);
      real l_basisEval_679 = RMul(0.2e1,l_prod_678);
      real l_prod3_680 = RMul(l_prod2_660,l_varAcc_641);
      real l_prod_681 = RMul(l_prod3_680,0.1e1);
      real l_prod_682 = RMul(0.1e1,l_prod_681);
      real l_basisEval_683 = RMul(0.2e1,l_prod_682);
      real l_prod_684 = RMul(l_varAcc_640,l_prod_654);
      real l_basisEval_685 = RMul(0.6e1,l_prod_684);
      real l_prod_686 = RMul(l_varAcc_640,l_prod_657);
      real l_basisEval_687 = RMul(0.6e1,l_prod_686);
      real l_prod_688 = RMul(l_varAcc_640,l_prod_661);
      real l_basisEval_689 = RMul(0.6e1,l_prod_688);
      real l_prod_690 = RMul(l_prod2_668,l_prod_646);
      real l_prod_691 = RMul(l_prod2_668,l_prod_649);
      real l_prod3_692 = RMul(l_prod2_668,l_varAcc_640);
      real l_prod_693 = RMul(l_prod3_692,l_prod_643);
      real l_prod4_694 = RMul(l_prod3_670,l_varAcc_642);
      real l_prod_695 = RMul(0.1e1,l_prod4_694);
      real l_prod_696 = RMul(0.1e1,l_prod_695);
      real l_basisEval_697 = RMul(0.2e1,l_prod_696);
      real l_prod_698 = RMul(l_varAcc_641,l_prod3_670);
      real l_prod_699 = RMul(0.1e1,l_prod_698);
      real l_basisEval_700 = RMul(0.2e1,l_prod_699);
      real l_prod_701 = RMul(l_prod2_660,l_prod2_653);
      real l_prod_702 = RMul(0.1e1,l_prod_701);
      real l_prod_703 = RMul(l_prod3_680,l_varAcc_642);
      real l_prod_704 = RMul(0.1e1,l_prod_703);
      real l_basisEval_705 = RMul(0.2e1,l_prod_704);
      real l_prod4_706 = RMul(l_prod3_680,l_varAcc_641);
      real l_prod_707 = RMul(l_prod4_706,0.1e1);
      real l_prod_708 = RMul(0.1e1,l_prod_707);
      real l_basisEval_709 = RMul(0.2e1,l_prod_708);
      real l_prod_710 = RMul(l_varAcc_640,l_prod_671);
      real l_prod_711 = RMul(l_varAcc_640,l_prod_674);
      real l_basisEval_712 = RMul(0.6e1,l_prod_711);
      real l_prod_713 = RMul(l_varAcc_640,l_prod_677);
      real l_basisEval_714 = RMul(0.6e1,l_prod_713);
      real l_prod_715 = RMul(l_varAcc_640,l_prod_681);
      real l_prod_716 = RMul(l_prod2_668,l_prod_654);
      real l_basisEval_717 = RMul(0.12e2,l_prod_716);
      real l_prod_718 = RMul(l_prod2_668,l_prod_657);
      real l_prod_719 = RMul(l_prod2_668,l_prod_661);
      real l_basisEval_720 = RMul(0.12e2,l_prod_719);
      real l_prod_721 = RMul(l_prod3_692,l_prod_646);
      real l_prod_722 = RMul(l_prod3_692,l_prod_649);
      real l_prod4_723 = RMul(l_prod3_692,l_varAcc_640);
      real l_prod_724 = RMul(l_prod4_723,l_prod_643);
      real l_basisEval_725 = RMul(0.1e1,l_prod_644);
      real l_basisEval_726 = RMul(0.1e1,l_prod_647);
      real l_basisEval_727 = RMul(0.2e1,l_prod_652);
      real l_basisEval_728 = RMul(0.1e1,l_prod_655);
      real l_basisEval_729 = RMul(0.3e1,l_prod_662);
      real l_basisEval_730 = RMul(0.2e1,l_prod_664);
      real l_basisEval_731 = RMul(0.3e1,l_prod_669);
      real l_basisEval_732 = RMul(0.1e1,l_prod_672);
      real l_basisEval_733 = RMul(0.3e1,l_prod_678);
      real l_basisEval_734 = RMul(0.4e1,l_prod_682);
      real l_basisEval_735 = RMul(0.2e1,l_prod_684);
      real l_basisEval_736 = RMul(0.4e1,l_prod_686);
      real l_basisEval_737 = RMul(0.3e1,l_prod_690);
      real l_basisEval_738 = RMul(0.6e1,l_prod_691);
      real l_basisEval_739 = RMul(0.4e1,l_prod_693);
      real l_basisEval_740 = RMul(0.1e1,l_prod_696);
      real l_basisEval_741 = RMul(0.3e1,l_prod_702);
      real l_basisEval_742 = RMul(0.4e1,l_prod_704);
      real l_basisEval_743 = RMul(0.5e1,l_prod_708);
      real l_basisEval_744 = RMul(0.2e1,l_prod_710);
      real l_basisEval_745 = RMul(0.3e1,l_prod_716);
      real l_basisEval_746 = RMul(0.6e1,l_prod_718);
      real l_basisEval_747 = RMul(0.4e1,l_prod_721);
      real l_basisEval_748 = RMul(0.5e1,l_prod_724);
      real l_basisEval_749 = RMul(0.1e1,l_prod_650);
      real l_basisEval_750 = RMul(0.3e1,l_prod_655);
      real l_basisEval_751 = RMul(0.1e1,l_prod_662);
      real l_basisEval_752 = RMul(0.2e1,l_prod_666);
      real l_basisEval_753 = RMul(0.4e1,l_prod_672);
      real l_basisEval_754 = RMul(0.3e1,l_prod_675);
      real l_basisEval_755 = RMul(0.1e1,l_prod_682);
      real l_basisEval_756 = RMul(0.2e1,l_prod_688);
      real l_basisEval_757 = RMul(0.6e1,l_prod_690);
      real l_basisEval_758 = RMul(0.3e1,l_prod_691);
      real l_basisEval_759 = RMul(0.5e1,l_prod_696);
      real l_basisEval_760 = RMul(0.4e1,l_prod_699);
      real l_basisEval_761 = RMul(0.1e1,l_prod_708);
      real l_basisEval_762 = RMul(0.2e1,l_prod_715);
      real l_basisEval_763 = RMul(0.3e1,l_prod_719);
      real l_basisEval_764 = RMul(0.4e1,l_prod_722);
      real l_basisEval_765 = RMul(0.6e1,l_prod_658);
      real l_basisEval_766 = RMul(0.2e1,l_prod_669);
      real l_basisEval_767 = RMul(0.6e1,l_prod_675);
      real l_basisEval_768 = RMul(0.2e1,l_prod_690);
      real l_basisEval_769 = RMul(0.2e1,l_prod_693);
      real l_basisEval_770 = RMul(0.12e2,l_prod_702);
      real l_basisEval_771 = RMul(0.2e1,l_prod_721);
      real l_basisEval_772 = RMul(0.2e1,l_prod_724);
      real l_basisEval_773 = RMul(0.1e1,l_prod_652);
      real l_basisEval_774 = RMul(0.1e1,l_prod_669);
      real l_basisEval_775 = RMul(0.6e1,l_prod_678);
      real l_basisEval_776 = RMul(0.3e1,l_prod_684);
      real l_basisEval_777 = RMul(0.3e1,l_prod_688);
      real l_basisEval_778 = RMul(0.2e1,l_prod_691);
      real l_basisEval_779 = RMul(0.1e1,l_prod_693);
      real l_basisEval_780 = RMul(0.4e1,l_prod_710);
      real l_basisEval_781 = RMul(0.4e1,l_prod_715);
      real l_basisEval_782 = RMul(0.2e1,l_prod_722);
      real l_basisEval_783 = RMul(0.1e1,l_prod_724);
      real l_vdot_784 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_725,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_651,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_728,l_basisEval_659)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_729,0.e0,l_basisEval_730,RMul(0.4e1,l_prod_666))),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_731,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_732,l_basisEval_676)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_733,l_basisEval_734,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_736,l_basisEval_689,0.e0,l_basisEval_737)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_738,0.e0,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_743,0.e0,l_basisEval_744,RMul(0.4e1,l_prod_711))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_714,RMul(0.8e1,l_prod_715),0.e0,l_basisEval_745)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_746,RMul(0.9e1,l_prod_719),0.e0,l_basisEval_747)),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.8e1,l_prod_722),0.e0,l_basisEval_748,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_785 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_648,l_basisEval_749)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_750,l_basisEval_659,l_basisEval_751)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,RMul(0.4e1,l_prod_664),l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_731,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_753,l_basisEval_754,l_basisEval_679)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_755,0.e0,l_basisEval_685,l_basisEval_736)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_756,0.e0,l_basisEval_757,l_basisEval_758)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_739,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.8e1,l_prod_710),l_basisEval_712,RMul(0.4e1,l_prod_713))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_762,0.e0,RMul(0.9e1,l_prod_716),l_basisEval_746)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_763,0.e0,RMul(0.8e1,l_prod_721),l_basisEval_764)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_748,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_786 = RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,l_basisEval_648)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_651,0.e0,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_750,RMul(0.4e1,l_prod_658),l_basisEval_729)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,l_basisEval_730,l_basisEval_752)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_753,l_basisEval_767,l_basisEval_775,l_basisEval_734)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,l_basisEval_776,l_basisEval_736)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_777,0.e0,0.e0,l_basisEval_768)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_778,0.e0,0.e0,l_basisEval_779)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_759,RMul(0.8e1,l_prod_699),RMul(0.9e1,l_prod_702))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.8e1,l_prod_704),l_basisEval_743,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(l_basisEval_780,l_basisEval_712,l_basisEval_714,l_basisEval_781)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,0.e0,l_basisEval_745,RMul(0.4e1,l_prod_718))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_763,0.e0,0.e0,l_basisEval_771)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_782,0.e0,0.e0,l_basisEval_783)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_787 = <tensor[3,3]>[RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,l_basisEval_645,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_648,l_basisEval_651,RMul(0.6e1,l_prod_652))),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_656,l_basisEval_659,l_basisEval_663)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_665,l_basisEval_667,RMul(0.12e2,l_prod_669),0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_673,l_basisEval_676)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_679,l_basisEval_683,l_basisEval_685,l_basisEval_687)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_689,RMul(0.12e2,l_prod_690),RMul(0.12e2,l_prod_691),RMul(0.20e2,l_prod_693))),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_697,l_basisEval_700,RMul(0.2e1,l_prod_702))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_705,l_basisEval_709,RMul(0.6e1,l_prod_710),l_basisEval_712)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_714,RMul(0.6e1,l_prod_715),l_basisEval_717,RMul(0.12e2,l_prod_718))),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_720,RMul(0.20e2,l_prod_721),RMul(0.20e2,l_prod_722),RMul(0.30e2,l_prod_724))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_784,l_vdot_785,l_vdot_784,RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,l_basisEval_645,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_648,RMul(0.6e1,l_prod_650),0.e0,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_727,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,l_basisEval_656,l_basisEval_765)),RAdd(VDot<4,4>(v_625,VEC4(RMul(0.12e2,l_prod_662),0.e0,0.e0,l_basisEval_730)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_667,0.e0,0.e0,l_basisEval_766)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,l_basisEval_673,l_basisEval_767,RMul(0.12e2,l_prod_678))),RAdd(VDot<4,4>(v_629,VEC4(RMul(0.20e2,l_prod_682),0.e0,0.e0,l_basisEval_735)),RAdd(VDot<4,4>(v_630,VEC4(l_basisEval_687,RMul(0.12e2,l_prod_688),0.e0,0.e0)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_768,l_basisEval_738,0.e0,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_769,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,l_basisEval_697,RMul(0.6e1,l_prod_699))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_770,RMul(0.20e2,l_prod_704),RMul(0.30e2,l_prod_708),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(0.e0,l_basisEval_744,l_basisEval_712,RMul(0.12e2,l_prod_713))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.20e2,l_prod_715),0.e0,0.e0,RMul(0.2e1,l_prod_716))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_746,l_basisEval_720,0.e0,0.e0)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_771,RMul(0.6e1,l_prod_722),0.e0,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(l_basisEval_772,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))),l_vdot_786,l_vdot_785,l_vdot_786,RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_645,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_647),l_basisEval_651)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_727,0.e0)),RAdd(VDot<4,4>(v_623,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(RMul(0.12e2,l_prod_655),l_basisEval_765,l_basisEval_663,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_665,l_basisEval_752,0.e0)),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_766,0.e0,0.e0)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,0.e0,0.e0,RMul(0.20e2,l_prod_672))),RAdd(VDot<4,4>(v_628,VEC4(RMul(0.12e2,l_prod_675),l_basisEval_775,l_basisEval_683,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,RMul(0.12e2,l_prod_684),l_basisEval_687,l_basisEval_756)),RAdd(VDot<4,4>(v_630,VEC4(0.e0,0.e0,l_basisEval_757,l_basisEval_778)),RAdd(VDot<4,4>(v_631,VEC4(0.e0,0.e0,l_basisEval_769,0.e0)),RAdd(VDot<4,4>(v_632,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.30e2,l_prod_696),RMul(0.20e2,l_prod_699),l_basisEval_770,RMul(0.6e1,l_prod_704))),RAdd(VDot<4,4>(v_634,VEC4(l_basisEval_709,0.e0,0.e0,RMul(0.20e2,l_prod_710))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.12e2,l_prod_711),l_basisEval_714,l_basisEval_762,0.e0)),RAdd(VDot<4,4>(v_636,VEC4(0.e0,l_basisEval_717,l_basisEval_746,RMul(0.2e1,l_prod_719))),RAdd(VDot<4,4>(v_637,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_721),l_basisEval_782)),RAdd(VDot<4,4>(v_638,VEC4(0.e0,0.e0,l_basisEval_772,0.e0)),RAdd(VDot<4,4>(v_639,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))];
      (l_evals_788,l_E_789) = EigenVecs3x3(TensorRef<[3,3]>(t_787));
      &tensor[3] l__t_790 = Subscript<tensor[3][3]>(l_E_789,2);
      real l__t_791 = Subscript<real[3]>(l_evals_788,2);
      &tensor[3] l__t_792 = Subscript<tensor[3][3]>(l_E_789,1);
      real l__t_793 = Subscript<real[3]>(l_evals_788,1);
      vec3{4} v_794 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_795 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_796 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_790),LOAD_0(l__t_790));
      vec3{4} v_797 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_792),LOAD_0(l__t_792));
      vec3{4} v_798 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_792),LOAD_0(l__t_792));
      vec3{4} v_799 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_792),LOAD_0(l__t_792));
      real l_basisEval_800 = RMul(0.2e1,l_prod_686);
      real l_basisEval_801 = RMul(0.2e1,l_prod_711);
      real l_basisEval_802 = RMul(0.2e1,l_prod_713);
      real l_prod_803 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_694,l_varAcc_642)));
      real l_basisEval_804 = RMul(0.1e1,l_prod_803);
      real l_prod_805 = RMul(0.1e1,RMul(l_varAcc_641,l_prod4_694));
      real l_prod_806 = RMul(0.1e1,RMul(l_prod2_660,l_prod3_670));
      real l_prod_807 = RMul(0.1e1,RMul(l_prod3_680,l_prod2_653));
      real l_prod_808 = RMul(0.1e1,RMul(l_prod4_706,l_varAcc_642));
      real l_prod_809 = RMul(0.1e1,RMul(RMul(l_prod4_706,l_varAcc_641),0.1e1));
      real l_basisEval_810 = RMul(0.1e1,l_prod_809);
      real l_prod_811 = RMul(l_varAcc_640,l_prod_695);
      real l_prod_812 = RMul(l_varAcc_640,l_prod_698);
      real l_basisEval_813 = RMul(0.2e1,l_prod_812);
      real l_prod_814 = RMul(l_varAcc_640,l_prod_701);
      real l_prod_815 = RMul(l_varAcc_640,l_prod_703);
      real l_basisEval_816 = RMul(0.2e1,l_prod_815);
      real l_prod_817 = RMul(l_varAcc_640,l_prod_707);
      real l_prod_818 = RMul(l_prod2_668,l_prod_671);
      real l_prod_819 = RMul(l_prod2_668,l_prod_674);
      real l_basisEval_820 = RMul(0.3e1,l_prod_819);
      real l_prod_821 = RMul(l_prod2_668,l_prod_677);
      real l_basisEval_822 = RMul(0.3e1,l_prod_821);
      real l_prod_823 = RMul(l_prod2_668,l_prod_681);
      real l_prod_824 = RMul(l_prod3_692,l_prod_654);
      real l_prod_825 = RMul(l_prod3_692,l_prod_657);
      real l_prod_826 = RMul(l_prod3_692,l_prod_661);
      real l_prod_827 = RMul(l_prod4_723,l_prod_646);
      real l_prod_828 = RMul(l_prod4_723,l_prod_649);
      real l_prod_829 = RMul(RMul(l_prod4_723,l_varAcc_640),l_prod_643);
      real l_basisEval_830 = RMul(0.2e1,l_prod_718);
      real l_basisEval_831 = RMul(0.3e1,l_prod_814);
      real l_basisEval_832 = RMul(0.2e1,l_prod_825);
      real l_basisEval_833 = RMul(0.1e1,l_prod_829);
      vec3{4} v_834 = VEC3{4}(RAdd(VDot<4,4>(v_620,VEC4(0.e0,0.e0,0.e0,l_basisEval_726)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_749,l_basisEval_727,0.e0,0.e0)),RAdd(VDot<4,4>(v_622,VEC4(0.e0,0.e0,l_basisEval_728,RMul(0.1e1,l_prod_658))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_751,l_basisEval_730,l_basisEval_752,l_basisEval_731)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_732,RMul(0.1e1,l_prod_675),RMul(0.1e1,l_prod_678))),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_755,l_basisEval_735,l_basisEval_800,l_basisEval_756)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_737,l_basisEval_758,l_basisEval_739,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_740,RMul(0.1e1,l_prod_699),RMul(0.1e1,l_prod_702))),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_704),l_basisEval_761,l_basisEval_744,l_basisEval_801)),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_802,l_basisEval_762,l_basisEval_745,RMul(0.3e1,l_prod_718))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_763,l_basisEval_747,l_basisEval_764,l_basisEval_748)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_634,VEC4(0.e0,0.e0,0.e0,l_basisEval_804)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_805),RMul(0.1e1,l_prod_806),RMul(0.1e1,l_prod_807),RMul(0.1e1,l_prod_808))),RAdd(VDot<4,4>(v_636,VEC4(l_basisEval_810,RMul(0.2e1,l_prod_811),l_basisEval_813,RMul(0.2e1,l_prod_814))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_816,RMul(0.2e1,l_prod_817),RMul(0.3e1,l_prod_818),l_basisEval_820)),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_822,RMul(0.3e1,l_prod_823),RMul(0.4e1,l_prod_824),RMul(0.4e1,l_prod_825))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.4e1,l_prod_826),RMul(0.5e1,l_prod_827),RMul(0.5e1,l_prod_828),RMul(0.6e1,l_prod_829))),VDot<4,4>(v_619,VEC4(0.e0,0.e0,0.e0,l_basisEval_725)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(0.e0,l_basisEval_726,l_basisEval_651,0.e0)),RAdd(VDot<4,4>(v_621,VEC4(l_basisEval_773,0.e0,0.e0,l_basisEval_728)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_659,l_basisEval_729,0.e0,RMul(0.1e1,l_prod_664))),RAdd(VDot<4,4>(v_623,VEC4(l_basisEval_752,0.e0,l_basisEval_774,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(0.e0,l_basisEval_732,l_basisEval_676,l_basisEval_733)),RAdd(VDot<4,4>(v_625,VEC4(l_basisEval_734,0.e0,RMul(0.1e1,l_prod_684),l_basisEval_800)),RAdd(VDot<4,4>(v_626,VEC4(l_basisEval_777,0.e0,RMul(0.1e1,l_prod_690),l_basisEval_778)),RAdd(VDot<4,4>(v_627,VEC4(0.e0,l_basisEval_779,0.e0,0.e0)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_740,l_basisEval_700,l_basisEval_741,l_basisEval_742)),RAdd(VDot<4,4>(v_629,VEC4(l_basisEval_743,0.e0,RMul(0.1e1,l_prod_710),l_basisEval_801)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.3e1,l_prod_713),l_basisEval_781,0.e0,RMul(0.1e1,l_prod_716))),RAdd(VDot<4,4>(v_631,VEC4(l_basisEval_830,l_basisEval_763,0.e0,RMul(0.1e1,l_prod_721))),RAdd(VDot<4,4>(v_632,VEC4(l_basisEval_782,0.e0,l_basisEval_783,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(0.e0,l_basisEval_804,RMul(0.2e1,l_prod_805),RMul(0.3e1,l_prod_806))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.4e1,l_prod_807),RMul(0.5e1,l_prod_808),RMul(0.6e1,l_prod_809),0.e0)),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.1e1,l_prod_811),l_basisEval_813,l_basisEval_831,RMul(0.4e1,l_prod_815))),RAdd(VDot<4,4>(v_636,VEC4(RMul(0.5e1,l_prod_817),0.e0,RMul(0.1e1,l_prod_818),RMul(0.2e1,l_prod_819))),RAdd(VDot<4,4>(v_637,VEC4(l_basisEval_822,RMul(0.4e1,l_prod_823),0.e0,RMul(0.1e1,l_prod_824))),RAdd(VDot<4,4>(v_638,VEC4(l_basisEval_832,RMul(0.3e1,l_prod_826),0.e0,RMul(0.1e1,l_prod_827))),RAdd(VDot<4,4>(v_639,VEC4(RMul(0.2e1,l_prod_828),0.e0,l_basisEval_833,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,0.e0,l_basisEval_725,0.e0)))))))))))))))))))))),RAdd(VDot<4,4>(v_620,VEC4(l_basisEval_648,l_basisEval_749,0.e0,l_basisEval_773)),RAdd(VDot<4,4>(v_621,VEC4(0.e0,0.e0,l_basisEval_750,l_basisEval_659)),RAdd(VDot<4,4>(v_622,VEC4(l_basisEval_751,0.e0,l_basisEval_730,RMul(0.1e1,l_prod_666))),RAdd(VDot<4,4>(v_623,VEC4(0.e0,l_basisEval_774,0.e0,0.e0)),RAdd(VDot<4,4>(v_624,VEC4(l_basisEval_753,l_basisEval_754,l_basisEval_679,l_basisEval_755)),RAdd(VDot<4,4>(v_625,VEC4(0.e0,l_basisEval_776,l_basisEval_800,RMul(0.1e1,l_prod_688))),RAdd(VDot<4,4>(v_626,VEC4(0.e0,l_basisEval_768,RMul(0.1e1,l_prod_691),0.e0)),RAdd(VDot<4,4>(v_627,VEC4(l_basisEval_779,0.e0,0.e0,l_basisEval_759)),RAdd(VDot<4,4>(v_628,VEC4(l_basisEval_760,l_basisEval_741,l_basisEval_705,l_basisEval_761)),RAdd(VDot<4,4>(v_629,VEC4(0.e0,l_basisEval_780,RMul(0.3e1,l_prod_711),l_basisEval_802)),RAdd(VDot<4,4>(v_630,VEC4(RMul(0.1e1,l_prod_715),0.e0,l_basisEval_745,l_basisEval_830)),RAdd(VDot<4,4>(v_631,VEC4(RMul(0.1e1,l_prod_719),0.e0,l_basisEval_771,RMul(0.1e1,l_prod_722))),RAdd(VDot<4,4>(v_632,VEC4(0.e0,l_basisEval_783,0.e0,0.e0)),RAdd(VDot<4,4>(v_633,VEC4(RMul(0.6e1,l_prod_803),RMul(0.5e1,l_prod_805),RMul(0.4e1,l_prod_806),RMul(0.3e1,l_prod_807))),RAdd(VDot<4,4>(v_634,VEC4(RMul(0.2e1,l_prod_808),l_basisEval_810,0.e0,RMul(0.5e1,l_prod_811))),RAdd(VDot<4,4>(v_635,VEC4(RMul(0.4e1,l_prod_812),l_basisEval_831,l_basisEval_816,RMul(0.1e1,l_prod_817))),RAdd(VDot<4,4>(v_636,VEC4(0.e0,RMul(0.4e1,l_prod_818),l_basisEval_820,RMul(0.2e1,l_prod_821))),RAdd(VDot<4,4>(v_637,VEC4(RMul(0.1e1,l_prod_823),0.e0,RMul(0.3e1,l_prod_824),l_basisEval_832)),RAdd(VDot<4,4>(v_638,VEC4(RMul(0.1e1,l_prod_826),0.e0,RMul(0.2e1,l_prod_827),RMul(0.1e1,l_prod_828))),RAdd(VDot<4,4>(v_639,VEC4(0.e0,l_basisEval_833,0.e0,0.e0)),VDot<4,4>(v_619,VEC4(0.e0,l_basisEval_725,0.e0,0.e0)))))))))))))))))))))));
      v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_794),l__t_791),RDiv(VIndex<3,4,1>(v_794),l__t_791),RDiv(VIndex<3,4,2>(v_794),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_797),l__t_793),RDiv(VIndex<3,4,1>(v_797),l__t_793),RDiv(VIndex<3,4,2>(v_797),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_795),l__t_791),RDiv(VIndex<3,4,1>(v_795),l__t_791),RDiv(VIndex<3,4,2>(v_795),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_798),l__t_793),RDiv(VIndex<3,4,1>(v_798),l__t_793),RDiv(VIndex<3,4,2>(v_798),l__t_793)))),v_834),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_796),l__t_791),RDiv(VIndex<3,4,1>(v_796),l__t_791),RDiv(VIndex<3,4,2>(v_796),l__t_791)),VEC3{4}(RDiv(VIndex<3,4,0>(v_799),l__t_793),RDiv(VIndex<3,4,1>(v_799),l__t_793),RDiv(VIndex<3,4,2>(v_799),l__t_793)))),v_834));
    } else {
      tensor[3][3] l_E_947;
      real[3] l_evals_946;
      &tensor[3,3] l_Mtransform_836 = Transform<IMAGE3D<float[]>>(globals.umm);
      vec3{4} v_837 = VAdd<3,4>(VEC3{4}(VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[0]>(l_Mtransform_836)),v_72),VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[1]>(l_Mtransform_836)),v_72),VDot<3,4>(LOAD_0(ProjectLast<&tensor[3,3],[2]>(l_Mtransform_836)),v_72)),LOAD_0(Translate<IMAGE3D<float[]>>(globals.umm)));
      vec3{4} v_838 = VFloor<3,4>(v_837);
      vec3{4} v_839 = VSub<3,4>(v_837,v_838);
      int[3] l_n_840 = VToInt<3{4}>(v_838);
      real l_r_841 = TensorIndex<&tensor[3,3],[0,0]>(l_Mtransform_836);
      real l_r_842 = TensorIndex<&tensor[3,3],[1,0]>(l_Mtransform_836);
      real l_r_843 = TensorIndex<&tensor[3,3],[2,0]>(l_Mtransform_836);
      vec3{4} v_844 = VEC3{4}(l_r_841,l_r_842,l_r_843);
      real l_r_845 = TensorIndex<&tensor[3,3],[0,1]>(l_Mtransform_836);
      real l_r_846 = TensorIndex<&tensor[3,3],[1,1]>(l_Mtransform_836);
      real l_r_847 = TensorIndex<&tensor[3,3],[2,1]>(l_Mtransform_836);
      vec3{4} v_848 = VEC3{4}(l_r_845,l_r_846,l_r_847);
      real l_r_849 = TensorIndex<&tensor[3,3],[0,2]>(l_Mtransform_836);
      real l_r_850 = TensorIndex<&tensor[3,3],[1,2]>(l_Mtransform_836);
      real l_r_851 = TensorIndex<&tensor[3,3],[2,2]>(l_Mtransform_836);
      vec3{4} v_852 = VEC3{4}(l_r_849,l_r_850,l_r_851);
      int l_idx_853 = IAdd(Subscript<int[3]>(l_n_840,0),-1);
      int l_idx_854 = IAdd(Subscript<int[3]>(l_n_840,1),-1);
      int l_idx_855 = IAdd(Subscript<int[3]>(l_n_840,2),-1);
      int l_mulRes_856 = IMul(300,l_idx_855);
      int l_mulRes_857 = IMul(300,IAdd(l_idx_854,l_mulRes_856));
      int l_addRes_858 = IAdd(l_idx_853,1);
      int l_addRes_859 = IAdd(l_idx_853,2);
      int l_addRes_860 = IAdd(l_idx_853,3);
      vec4 v_861 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_857)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_857)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_857)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_857)));
      int l_addRes_862 = IAdd(l_idx_854,1);
      int l_mulRes_863 = IMul(300,IAdd(l_addRes_862,l_mulRes_856));
      vec4 v_864 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_863)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_863)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_863)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_863)));
      int l_addRes_865 = IAdd(l_idx_854,2);
      int l_mulRes_866 = IMul(300,IAdd(l_addRes_865,l_mulRes_856));
      vec4 v_867 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_866)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_866)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_866)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_866)));
      int l_addRes_868 = IAdd(l_idx_854,3);
      int l_mulRes_869 = IMul(300,IAdd(l_addRes_868,l_mulRes_856));
      vec4 v_870 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_869)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_869)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_869)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_869)));
      int l_mulRes_871 = IMul(300,IAdd(l_idx_855,1));
      int l_mulRes_872 = IMul(300,IAdd(l_idx_854,l_mulRes_871));
      vec4 v_873 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_872)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_872)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_872)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_872)));
      int l_mulRes_874 = IMul(300,IAdd(l_addRes_862,l_mulRes_871));
      vec4 v_875 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_874)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_874)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_874)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_874)));
      int l_mulRes_876 = IMul(300,IAdd(l_addRes_865,l_mulRes_871));
      vec4 v_877 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_876)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_876)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_876)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_876)));
      int l_mulRes_878 = IMul(300,IAdd(l_addRes_868,l_mulRes_871));
      vec4 v_879 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_878)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_878)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_878)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_878)));
      int l_mulRes_880 = IMul(300,IAdd(l_idx_855,2));
      int l_mulRes_881 = IMul(300,IAdd(l_idx_854,l_mulRes_880));
      vec4 v_882 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_881)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_881)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_881)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_881)));
      int l_mulRes_883 = IMul(300,IAdd(l_addRes_862,l_mulRes_880));
      vec4 v_884 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_883)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_883)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_883)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_883)));
      int l_mulRes_885 = IMul(300,IAdd(l_addRes_865,l_mulRes_880));
      vec4 v_886 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_885)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_885)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_885)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_885)));
      int l_mulRes_887 = IMul(300,IAdd(l_addRes_868,l_mulRes_880));
      vec4 v_888 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_887)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_887)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_887)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_887)));
      int l_mulRes_889 = IMul(300,IAdd(l_idx_855,3));
      int l_mulRes_890 = IMul(300,IAdd(l_idx_854,l_mulRes_889));
      vec4 v_891 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_890)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_890)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_890)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_890)));
      int l_mulRes_892 = IMul(300,IAdd(l_addRes_862,l_mulRes_889));
      vec4 v_893 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_892)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_892)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_892)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_892)));
      int l_mulRes_894 = IMul(300,IAdd(l_addRes_865,l_mulRes_889));
      vec4 v_895 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_894)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_894)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_894)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_894)));
      int l_mulRes_896 = IMul(300,IAdd(l_addRes_868,l_mulRes_889));
      vec4 v_897 = VEC4(LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_idx_853,l_mulRes_896)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_858,l_mulRes_896)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_859,l_mulRes_896)),LoadVoxel<IMAGE3D<float[]>>(globals.umm,IAdd(l_addRes_860,l_mulRes_896)));
      real l_vZ__898 = VIndex<3,4,2>(v_839);
      vec4 v_899 = VEC4(RAdd(l_vZ__898,0.1e1),l_vZ__898,RSub(l_vZ__898,0.1e1),RSub(l_vZ__898,0.2e1));
      vec4 v_900 = VEC4(0.133333333333e1,0.666666666667e0,0.666666666667e0,0.133333333333e1);
      vec4 v_901 = VEC4(-0.2e1,0.e0,0.e0,0.2e1);
      vec4 v_902 = VEC4(0.1e1,-0.1e1,-0.1e1,0.1e1);
      vec4 v_903 = VEC4(-0.166666666667e0,0.5e0,-0.5e0,0.166666666667e0);
      vec4 v_904 = VAdd<4,4>(v_900,VMul<4,4>(v_899,VAdd<4,4>(v_901,VMul<4,4>(v_899,VAdd<4,4>(v_902,VMul<4,4>(v_899,v_903))))));
      vec4 v_905 = VEC4(0.2e1,-0.2e1,-0.2e1,0.2e1);
      vec4 v_906 = VEC4(-0.5e0,0.15e1,-0.15e1,0.5e0);
      vec4 v_907 = VAdd<4,4>(v_901,VMul<4,4>(v_899,VAdd<4,4>(v_905,VMul<4,4>(v_899,v_906))));
      vec4 v_908 = VEC4(-0.1e1,0.3e1,-0.3e1,0.1e1);
      real l_vY__909 = VIndex<3,4,1>(v_839);
      vec4 v_910 = VEC4(RAdd(l_vY__909,0.1e1),l_vY__909,RSub(l_vY__909,0.1e1),RSub(l_vY__909,0.2e1));
      vec4 v_911 = VAdd<4,4>(v_900,VMul<4,4>(v_910,VAdd<4,4>(v_901,VMul<4,4>(v_910,VAdd<4,4>(v_902,VMul<4,4>(v_910,v_903))))));
      vec4 v_912 = VAdd<4,4>(v_901,VMul<4,4>(v_910,VAdd<4,4>(v_905,VMul<4,4>(v_910,v_906))));
      vec4 v_913 = VAdd<4,4>(v_905,VMul<4,4>(v_910,v_908));
      real l_vX__914 = VIndex<3,4,0>(v_839);
      vec4 v_915 = VEC4(RAdd(l_vX__914,0.1e1),l_vX__914,RSub(l_vX__914,0.1e1),RSub(l_vX__914,0.2e1));
      vec4 v_916 = VAdd<4,4>(v_900,VMul<4,4>(v_915,VAdd<4,4>(v_901,VMul<4,4>(v_915,VAdd<4,4>(v_902,VMul<4,4>(v_915,v_903))))));
      vec4 v_917 = VAdd<4,4>(v_901,VMul<4,4>(v_915,VAdd<4,4>(v_905,VMul<4,4>(v_915,v_906))));
      vec4 v_918 = VAdd<4,4>(v_905,VMul<4,4>(v_915,v_908));
      vec4 v_919 = VEC4(VDot<4,4>(v_917,v_861),VDot<4,4>(v_917,v_864),VDot<4,4>(v_917,v_867),VDot<4,4>(v_917,v_870));
      vec4 v_920 = VEC4(VDot<4,4>(v_917,v_873),VDot<4,4>(v_917,v_875),VDot<4,4>(v_917,v_877),VDot<4,4>(v_917,v_879));
      vec4 v_921 = VEC4(VDot<4,4>(v_917,v_882),VDot<4,4>(v_917,v_884),VDot<4,4>(v_917,v_886),VDot<4,4>(v_917,v_888));
      vec4 v_922 = VEC4(VDot<4,4>(v_917,v_891),VDot<4,4>(v_917,v_893),VDot<4,4>(v_917,v_895),VDot<4,4>(v_917,v_897));
      real l_vdot_923 = VDot<4,4>(v_904,VEC4(VDot<4,4>(v_912,v_919),VDot<4,4>(v_912,v_920),VDot<4,4>(v_912,v_921),VDot<4,4>(v_912,v_922)));
      vec4 v_924 = VEC4(VDot<4,4>(v_911,v_919),VDot<4,4>(v_911,v_920),VDot<4,4>(v_911,v_921),VDot<4,4>(v_911,v_922));
      real l_vdot_925 = VDot<4,4>(v_907,v_924);
      vec3{4} v_926 = VEC3{4}(VDot<4,4>(v_904,VEC4(VDot<4,4>(v_911,VEC4(VDot<4,4>(v_918,v_861),VDot<4,4>(v_918,v_864),VDot<4,4>(v_918,v_867),VDot<4,4>(v_918,v_870))),VDot<4,4>(v_911,VEC4(VDot<4,4>(v_918,v_873),VDot<4,4>(v_918,v_875),VDot<4,4>(v_918,v_877),VDot<4,4>(v_918,v_879))),VDot<4,4>(v_911,VEC4(VDot<4,4>(v_918,v_882),VDot<4,4>(v_918,v_884),VDot<4,4>(v_918,v_886),VDot<4,4>(v_918,v_888))),VDot<4,4>(v_911,VEC4(VDot<4,4>(v_918,v_891),VDot<4,4>(v_918,v_893),VDot<4,4>(v_918,v_895),VDot<4,4>(v_918,v_897))))),l_vdot_923,l_vdot_925);
      vec4 v_927 = VEC4(VDot<4,4>(v_916,v_861),VDot<4,4>(v_916,v_864),VDot<4,4>(v_916,v_867),VDot<4,4>(v_916,v_870));
      vec4 v_928 = VEC4(VDot<4,4>(v_916,v_873),VDot<4,4>(v_916,v_875),VDot<4,4>(v_916,v_877),VDot<4,4>(v_916,v_879));
      vec4 v_929 = VEC4(VDot<4,4>(v_916,v_882),VDot<4,4>(v_916,v_884),VDot<4,4>(v_916,v_886),VDot<4,4>(v_916,v_888));
      vec4 v_930 = VEC4(VDot<4,4>(v_916,v_891),VDot<4,4>(v_916,v_893),VDot<4,4>(v_916,v_895),VDot<4,4>(v_916,v_897));
      vec4 v_931 = VEC4(VDot<4,4>(v_912,v_927),VDot<4,4>(v_912,v_928),VDot<4,4>(v_912,v_929),VDot<4,4>(v_912,v_930));
      real l_vdot_932 = VDot<4,4>(v_907,v_931);
      vec3{4} v_933 = VEC3{4}(l_vdot_923,VDot<4,4>(v_904,VEC4(VDot<4,4>(v_913,v_927),VDot<4,4>(v_913,v_928),VDot<4,4>(v_913,v_929),VDot<4,4>(v_913,v_930))),l_vdot_932);
      vec4 v_934 = VEC4(VDot<4,4>(v_911,v_927),VDot<4,4>(v_911,v_928),VDot<4,4>(v_911,v_929),VDot<4,4>(v_911,v_930));
      vec3{4} v_935 = VEC3{4}(l_vdot_925,l_vdot_932,VDot<4,4>(VAdd<4,4>(v_905,VMul<4,4>(v_899,v_908)),v_934));
      real l_vdot_936 = VDot<3,4>(v_926,v_844);
      real l_vdot_937 = VDot<3,4>(v_926,v_848);
      real l_vdot_938 = VDot<3,4>(v_926,v_852);
      real l_vdot_939 = VDot<3,4>(v_933,v_844);
      real l_vdot_940 = VDot<3,4>(v_933,v_848);
      real l_vdot_941 = VDot<3,4>(v_933,v_852);
      real l_vdot_942 = VDot<3,4>(v_935,v_844);
      real l_vdot_943 = VDot<3,4>(v_935,v_848);
      real l_vdot_944 = VDot<3,4>(v_935,v_852);
      tensor[3,3] t_945 = <tensor[3,3]>[RAdd(RAdd(RMul(l_r_841,l_vdot_936),RMul(l_r_842,l_vdot_939)),RMul(l_r_843,l_vdot_942)),RAdd(RAdd(RMul(l_r_841,l_vdot_937),RMul(l_r_842,l_vdot_940)),RMul(l_r_843,l_vdot_943)),RAdd(RAdd(RMul(l_r_841,l_vdot_938),RMul(l_r_842,l_vdot_941)),RMul(l_r_843,l_vdot_944)),RAdd(RAdd(RMul(l_r_845,l_vdot_936),RMul(l_r_846,l_vdot_939)),RMul(l_r_847,l_vdot_942)),RAdd(RAdd(RMul(l_r_845,l_vdot_937),RMul(l_r_846,l_vdot_940)),RMul(l_r_847,l_vdot_943)),RAdd(RAdd(RMul(l_r_845,l_vdot_938),RMul(l_r_846,l_vdot_941)),RMul(l_r_847,l_vdot_944)),RAdd(RAdd(RMul(l_r_849,l_vdot_936),RMul(l_r_850,l_vdot_939)),RMul(l_r_851,l_vdot_942)),RAdd(RAdd(RMul(l_r_849,l_vdot_937),RMul(l_r_850,l_vdot_940)),RMul(l_r_851,l_vdot_943)),RAdd(RAdd(RMul(l_r_849,l_vdot_938),RMul(l_r_850,l_vdot_941)),RMul(l_r_851,l_vdot_944))];
      (l_evals_946,l_E_947) = EigenVecs3x3(TensorRef<[3,3]>(t_945));
      &tensor[3] l__t_948 = Subscript<tensor[3][3]>(l_E_947,2);
      real l__t_949 = Subscript<real[3]>(l_evals_946,2);
      &tensor[3] l__t_950 = Subscript<tensor[3][3]>(l_E_947,1);
      real l__t_951 = Subscript<real[3]>(l_evals_946,1);
      vec3{4} v_952 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_948),LOAD_0(l__t_948));
      vec3{4} v_953 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_948),LOAD_0(l__t_948));
      vec3{4} v_954 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_948),LOAD_0(l__t_948));
      vec3{4} v_955 = VScale<3,4>(TensorIndex<&tensor[3],[0]>(l__t_950),LOAD_0(l__t_950));
      vec3{4} v_956 = VScale<3,4>(TensorIndex<&tensor[3],[1]>(l__t_950),LOAD_0(l__t_950));
      vec3{4} v_957 = VScale<3,4>(TensorIndex<&tensor[3],[2]>(l__t_950),LOAD_0(l__t_950));
      vec3{4} v_958 = VEC3{4}(VDot<4,4>(v_904,v_924),VDot<4,4>(v_904,v_931),VDot<4,4>(v_907,v_934));
      vec3{4} v_959 = VEC3{4}(VDot<3,4>(v_958,v_844),VDot<3,4>(v_958,v_848),VDot<3,4>(v_958,v_852));
      v_835 = VEC3{4}(VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_952),l__t_949),RDiv(VIndex<3,4,1>(v_952),l__t_949),RDiv(VIndex<3,4,2>(v_952),l__t_949)),VEC3{4}(RDiv(VIndex<3,4,0>(v_955),l__t_951),RDiv(VIndex<3,4,1>(v_955),l__t_951),RDiv(VIndex<3,4,2>(v_955),l__t_951)))),v_959),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_953),l__t_949),RDiv(VIndex<3,4,1>(v_953),l__t_949),RDiv(VIndex<3,4,2>(v_953),l__t_949)),VEC3{4}(RDiv(VIndex<3,4,0>(v_956),l__t_951),RDiv(VIndex<3,4,1>(v_956),l__t_951),RDiv(VIndex<3,4,2>(v_956),l__t_951)))),v_959),VDot<3,4>(VNeg<3,4>(VAdd<3,4>(VEC3{4}(RDiv(VIndex<3,4,0>(v_954),l__t_949),RDiv(VIndex<3,4,1>(v_954),l__t_949),RDiv(VIndex<3,4,2>(v_954),l__t_949)),VEC3{4}(RDiv(VIndex<3,4,0>(v_957),l__t_951),RDiv(VIndex<3,4,1>(v_957),l__t_951),RDiv(VIndex<3,4,2>(v_957),l__t_951)))),v_959));
    }
    real l_op1_e3_l_8_960 = Sqrt(VDot<3,4>(v_835,v_835));
    real l__t_961 = RMul(globals.maxAlpha,RClamp(0.e0,0.1e1,RMul(0.15e1,RSub(0.1e1,RDiv(Abs<real>(l_op1_e3_l_8_960),globals.thick)))));
    if (EQ<real>(l__t_961,0.e0)) {
      self.rayN = l_rayN_69;
      active;
    }
    real l__t_962 = MathFn<pow>(RSub(0.1e1,l__t_961),self.alphaFix);
    if (NEQ<real>(self.phKs,0.e0)) {
      vec3{4} v_963 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.eyeDir)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
      l_scomp_964 = MathFn<pow>(Abs<real>(RMul(RDiv(0.1e1,Sqrt(VDot<3,4>(v_963,v_963))),VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_8_960),v_835)),v_963))),self.phSp);
    } else {
      l_scomp_964 = 0.e0;
    }
    real l_cmin_965 = TensorIndex<&tensor[2],[0]>(TensorRef<[2]>(globals.cminmax));
    real l_cmax_966 = TensorIndex<&tensor[2],[1]>(TensorRef<[2]>(globals.cminmax));
    vec3{4} v_967 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    if (NEQ<real>(l_cmin_965,l_cmax_966)) {
      tensor[3,2] l_voxels_1180;
      vec3{4} v_968 = VAdd<3,4>(v_72,v_835);
      int l_mulRes_969 = IMul(globals._t,84);
      int t_970 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_969);
      int t_971 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,1));
      int t_972 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,2));
      int t_973 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,3));
      int t_974 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,4));
      int t_975 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,5));
      int t_976 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,6));
      int t_977 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,7));
      int t_978 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,8));
      int t_979 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,9));
      int t_980 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,10));
      int t_981 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,11));
      int t_982 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,12));
      int t_983 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,13));
      int t_984 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,14));
      int t_985 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,15));
      int t_986 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,16));
      int t_987 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,17));
      int t_988 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,18));
      int t_989 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,19));
      int t_990 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,20));
      int t_991 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,21));
      int t_992 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,22));
      int t_993 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,23));
      int t_994 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,24));
      int t_995 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,25));
      int t_996 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,26));
      int t_997 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,27));
      int t_998 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,28));
      int t_999 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,29));
      int t_1000 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,30));
      int t_1001 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,31));
      int t_1002 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,32));
      int t_1003 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,33));
      int t_1004 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,34));
      int t_1005 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,35));
      int t_1006 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,36));
      int t_1007 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,37));
      int t_1008 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,38));
      int t_1009 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,39));
      int t_1010 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,40));
      int t_1011 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,41));
      int t_1012 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,42));
      int t_1013 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,43));
      int t_1014 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,44));
      int t_1015 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,45));
      int t_1016 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,46));
      int t_1017 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,47));
      int t_1018 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,48));
      int t_1019 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,49));
      int t_1020 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,50));
      int t_1021 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,51));
      int t_1022 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,52));
      int t_1023 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,53));
      int t_1024 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,54));
      int t_1025 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,55));
      int t_1026 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,56));
      int t_1027 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,57));
      int t_1028 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,58));
      int t_1029 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,59));
      int t_1030 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,60));
      int t_1031 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,61));
      int t_1032 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,62));
      int t_1033 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,63));
      int t_1034 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,64));
      int t_1035 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,65));
      int t_1036 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,66));
      int t_1037 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,67));
      int t_1038 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,68));
      int t_1039 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,69));
      int t_1040 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,70));
      int t_1041 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,71));
      int t_1042 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,72));
      int t_1043 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,73));
      int t_1044 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,74));
      int t_1045 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,75));
      int t_1046 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,76));
      int t_1047 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,77));
      int t_1048 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,78));
      int t_1049 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,79));
      int t_1050 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,80));
      int t_1051 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,81));
      int t_1052 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,82));
      int t_1053 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_969,83));
      real t_1054 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1053));
      real t_1055 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1052));
      real t_1056 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1051));
      real t_1057 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1050));
      real t_1058 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1049));
      real t_1059 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1048));
      real t_1060 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1047));
      real t_1061 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1046));
      real t_1062 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1045));
      real t_1063 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1044));
      real t_1064 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1043));
      real t_1065 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1042));
      real t_1066 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1041));
      real t_1067 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1040));
      real t_1068 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1039));
      real t_1069 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1038));
      real t_1070 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1037));
      real t_1071 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1036));
      real t_1072 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1035));
      real t_1073 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1034));
      real t_1074 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1033));
      real t_1075 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1032));
      real t_1076 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1031));
      real t_1077 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1030));
      real t_1078 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1029));
      real t_1079 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1028));
      real t_1080 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1027));
      real t_1081 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1026));
      real t_1082 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1025));
      real t_1083 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1024));
      real t_1084 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1023));
      real t_1085 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1022));
      real t_1086 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1021));
      real t_1087 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1020));
      real t_1088 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1019));
      real t_1089 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1018));
      real t_1090 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1017));
      real t_1091 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1016));
      real t_1092 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1015));
      real t_1093 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1014));
      real t_1094 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1013));
      real t_1095 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1012));
      real t_1096 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1011));
      real t_1097 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1010));
      real t_1098 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1009));
      real t_1099 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1008));
      real t_1100 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1007));
      real t_1101 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1006));
      real t_1102 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1005));
      real t_1103 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1004));
      real t_1104 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1003));
      real t_1105 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1002));
      real t_1106 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1001));
      real t_1107 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_1000));
      real t_1108 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_999));
      real t_1109 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_998));
      real t_1110 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_997));
      real t_1111 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_996));
      real t_1112 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_995));
      real t_1113 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_994));
      real t_1114 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_993));
      real t_1115 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_992));
      real t_1116 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_991));
      real t_1117 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_990));
      real t_1118 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_989));
      real t_1119 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_988));
      real t_1120 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_987));
      real t_1121 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_986));
      real t_1122 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_985));
      real t_1123 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_984));
      real t_1124 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_983));
      real t_1125 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_982));
      real t_1126 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_981));
      real t_1127 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_980));
      real t_1128 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_979));
      real t_1129 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_978));
      real t_1130 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_977));
      real t_1131 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_976));
      real t_1132 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_975));
      real t_1133 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_974));
      real t_1134 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_973));
      real t_1135 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_972));
      real t_1136 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_971));
      real t_1137 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_970));
      real l_varAcc_1138 = VIndex<3,4,0>(v_968);
      real l_varAcc_1139 = VIndex<3,4,1>(v_968);
      real l_varAcc_1140 = VIndex<3,4,2>(v_968);
      real l_prod_1141 = RMul(0.1e1,0.1e1);
      real l_prod_1142 = RMul(0.1e1,l_varAcc_1140);
      real l_prod_1143 = RMul(l_varAcc_1139,0.1e1);
      real l_prod2_1144 = RMul(l_varAcc_1140,l_varAcc_1140);
      real l_prod_1145 = RMul(0.1e1,l_prod2_1144);
      real l_prod_1146 = RMul(l_varAcc_1139,l_varAcc_1140);
      real l_prod2_1147 = RMul(l_varAcc_1139,l_varAcc_1139);
      real l_prod_1148 = RMul(l_prod2_1147,0.1e1);
      real l_prod2_1149 = RMul(l_varAcc_1138,l_varAcc_1138);
      real l_prod3_1150 = RMul(l_prod2_1144,l_varAcc_1140);
      real l_prod_1151 = RMul(0.1e1,l_prod3_1150);
      real l_prod_1152 = RMul(l_varAcc_1139,l_prod2_1144);
      real l_prod_1153 = RMul(l_prod2_1147,l_varAcc_1140);
      real l_prod3_1154 = RMul(l_prod2_1147,l_varAcc_1139);
      real l_prod_1155 = RMul(l_prod3_1154,0.1e1);
      real l_prod3_1156 = RMul(l_prod2_1149,l_varAcc_1138);
      real l_prod4_1157 = RMul(l_prod3_1150,l_varAcc_1140);
      real l_prod_1158 = RMul(0.1e1,l_prod4_1157);
      real l_prod_1159 = RMul(l_varAcc_1139,l_prod3_1150);
      real l_prod_1160 = RMul(l_prod2_1147,l_prod2_1144);
      real l_prod_1161 = RMul(l_prod3_1154,l_varAcc_1140);
      real l_prod4_1162 = RMul(l_prod3_1154,l_varAcc_1139);
      real l_prod_1163 = RMul(l_prod4_1162,0.1e1);
      real l_prod4_1164 = RMul(l_prod3_1156,l_varAcc_1138);
      real l_prod5_1165 = RMul(l_prod4_1157,l_varAcc_1140);
      real l_prod_1166 = RMul(0.1e1,l_prod5_1165);
      real l_prod_1167 = RMul(l_varAcc_1139,l_prod4_1157);
      real l_prod_1168 = RMul(l_prod2_1147,l_prod3_1150);
      real l_prod_1169 = RMul(l_prod3_1154,l_prod2_1144);
      real l_prod_1170 = RMul(l_prod4_1162,l_varAcc_1140);
      real l_prod5_1171 = RMul(l_prod4_1162,l_varAcc_1139);
      real l_prod_1172 = RMul(l_prod5_1171,0.1e1);
      real l_prod5_1173 = RMul(l_prod4_1164,l_varAcc_1138);
      real l_imgPos_1174 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.cmap),RAdd(0.e0,RMul(RDiv(RSub(RAdd(VDot<4,4>(VEC4(t_1133,t_1132,t_1131,t_1130),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1145)),RMul(0.1e1,RMul(0.1e1,l_prod_1146)),RMul(0.1e1,RMul(0.1e1,l_prod_1148)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1142)))),RAdd(VDot<4,4>(VEC4(t_1129,t_1128,t_1127,t_1126),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1143)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1141)),RMul(0.1e1,RMul(0.1e1,l_prod_1151)),RMul(0.1e1,RMul(0.1e1,l_prod_1152)))),RAdd(VDot<4,4>(VEC4(t_1125,t_1124,t_1123,t_1122),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1153)),RMul(0.1e1,RMul(0.1e1,l_prod_1155)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1145)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1146)))),RAdd(VDot<4,4>(VEC4(t_1121,t_1120,t_1119,t_1118),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1148)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1142)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1143)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1141)))),RAdd(VDot<4,4>(VEC4(t_1117,t_1116,t_1115,t_1114),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1158)),RMul(0.1e1,RMul(0.1e1,l_prod_1159)),RMul(0.1e1,RMul(0.1e1,l_prod_1160)),RMul(0.1e1,RMul(0.1e1,l_prod_1161)))),RAdd(VDot<4,4>(VEC4(t_1113,t_1112,t_1111,t_1110),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1163)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1151)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1152)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1153)))),RAdd(VDot<4,4>(VEC4(t_1109,t_1108,t_1107,t_1106),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1155)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1145)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1146)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1148)))),RAdd(VDot<4,4>(VEC4(t_1105,t_1104,t_1103,t_1102),VEC4(RMul(0.1e1,RMul(l_prod3_1156,l_prod_1142)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1143)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1141)),RMul(0.1e1,RMul(0.1e1,l_prod_1166)))),RAdd(VDot<4,4>(VEC4(t_1101,t_1100,t_1099,t_1098),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1167)),RMul(0.1e1,RMul(0.1e1,l_prod_1168)),RMul(0.1e1,RMul(0.1e1,l_prod_1169)),RMul(0.1e1,RMul(0.1e1,l_prod_1170)))),RAdd(VDot<4,4>(VEC4(t_1097,t_1096,t_1095,t_1094),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1172)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1158)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1159)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1160)))),RAdd(VDot<4,4>(VEC4(t_1093,t_1092,t_1091,t_1090),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1161)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1163)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1151)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1152)))),RAdd(VDot<4,4>(VEC4(t_1089,t_1088,t_1087,t_1086),VEC4(RMul(0.1e1,RMul(l_prod2_1149,l_prod_1153)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1155)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1145)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1146)))),RAdd(VDot<4,4>(VEC4(t_1085,t_1084,t_1083,t_1082),VEC4(RMul(0.1e1,RMul(l_prod3_1156,l_prod_1148)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1142)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1143)),RMul(0.1e1,RMul(l_prod5_1173,l_prod_1141)))),RAdd(VDot<4,4>(VEC4(t_1081,t_1080,t_1079,t_1078),VEC4(RMul(0.1e1,RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1165,l_varAcc_1140)))),RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_1139,l_prod5_1165))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod2_1147,l_prod4_1157))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod3_1154,l_prod3_1150))))),RAdd(VDot<4,4>(VEC4(t_1077,t_1076,t_1075,t_1074),VEC4(RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_1162,l_prod2_1144))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1171,l_varAcc_1140))),RMul(0.1e1,RMul(0.1e1,RMul(RMul(l_prod5_1171,l_varAcc_1139),0.1e1))),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1166)))),RAdd(VDot<4,4>(VEC4(t_1073,t_1072,t_1071,t_1070),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1167)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1168)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1169)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1170)))),RAdd(VDot<4,4>(VEC4(t_1069,t_1068,t_1067,t_1066),VEC4(RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1172)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1158)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1159)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1160)))),RAdd(VDot<4,4>(VEC4(t_1065,t_1064,t_1063,t_1062),VEC4(RMul(0.1e1,RMul(l_prod2_1149,l_prod_1161)),RMul(0.1e1,RMul(l_prod2_1149,l_prod_1163)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1151)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1152)))),RAdd(VDot<4,4>(VEC4(t_1061,t_1060,t_1059,t_1058),VEC4(RMul(0.1e1,RMul(l_prod3_1156,l_prod_1153)),RMul(0.1e1,RMul(l_prod3_1156,l_prod_1155)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1145)),RMul(0.1e1,RMul(l_prod4_1164,l_prod_1146)))),RAdd(VDot<4,4>(VEC4(t_1057,t_1056,t_1055,t_1054),VEC4(RMul(0.1e1,RMul(l_prod4_1164,l_prod_1148)),RMul(0.1e1,RMul(l_prod5_1173,l_prod_1142)),RMul(0.1e1,RMul(l_prod5_1173,l_prod_1143)),RMul(0.1e1,RMul(RMul(l_prod5_1173,l_varAcc_1138),l_prod_1141)))),VDot<4,4>(VEC4(t_1137,t_1136,t_1135,t_1134),VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1141)),RMul(0.1e1,RMul(0.1e1,l_prod_1142)),RMul(0.1e1,RMul(0.1e1,l_prod_1143)),RMul(0.1e1,RMul(l_varAcc_1138,l_prod_1141)))))))))))))))))))))))),l_cmin_965),RSub(l_cmax_966,l_cmin_965)),RSub(0.1e1,0.e0)))),Translate<IMAGE1D<double[3]>>(globals.cmap));
      real l_nd_1175 = RFloor(l_imgPos_1174);
      real l_f_1176 = RSub(l_imgPos_1174,l_nd_1175);
      int l_n_1177 = RealToInt(l_nd_1175);
      if (IndexInside<IMAGE1D<double[3]>,2>(l_n_1177,globals.cmap)) {
        int l_offp_1178 = IMul(3,l_n_1177);
        int l_offp_1179 = IMul(3,IAdd(l_n_1177,1));
        l_voxels_1180 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1178),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1179),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1178,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1179,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1178,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1179,2))];
      } else {
        int l_offp_1181 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,l_n_1177));
        int l_offp_1182 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,IAdd(l_n_1177,1)));
        l_voxels_1180 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1181),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1182),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1181,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1182,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1181,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1182,2))];
      }
      vec2 v_1183 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_1176,RSub(l_f_1176,0.1e1)),VEC2(-0.1e1,0.1e1)));
      v_1184 = VEC3{4}(VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_1180)),v_1183),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_1180)),v_1183),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_1180)),v_1183));
    } else {
      v_1184 = v_967;
    }
    real l_op1_e3_l_24_1185 = VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_8_960),v_835)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
    real l_op1_e3_l_33_1186 = RAdd(self.phKa,RMul(self.phKd,RMul(l_op1_e3_l_24_1185,l_op1_e3_l_24_1185)));
    vec3{4} v_1187 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.mcNear)),VScale<3,4>(RDiv(RSub(l_rayN_69,globals.camNearVsp),RSub(globals.camFarVsp,globals.camNearVsp)),VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.mcFar)),LOAD_0(TensorRef<[3]>(globals.mcNear)))));
    real l_r_1188 = RMul(RMul(self.phKs,l_scomp_964),0.1e1);
    real l_op1_e3_l_37_1189 = RSub(0.1e1,l__t_962);
    vec3{4} v_1190 = VAdd<3,4>(VEC3{4}(RMul(RMul(l_op1_e3_l_33_1186,VIndex<3,4,0>(v_1187)),VIndex<3,4,0>(v_1184)),RMul(RMul(l_op1_e3_l_33_1186,VIndex<3,4,1>(v_1187)),VIndex<3,4,1>(v_1184)),RMul(RMul(l_op1_e3_l_33_1186,VIndex<3,4,2>(v_1187)),VIndex<3,4,2>(v_1184))),VEC3{4}(l_r_1188,l_r_1188,l_r_1188));
    real l_r_1191 = RMul(self.transp,l_op1_e3_l_37_1189);
    vec3{4} v_1192 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_1191,VIndex<3,4,0>(v_1190)),RMul(l_r_1191,VIndex<3,4,1>(v_1190)),RMul(l_r_1191,VIndex<3,4,2>(v_1190))));
    real l_transp_1193 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_37_1189));
    vec3{4} v_1194 = v_1192;
    if (LT<real>(l_transp_1193,globals.transp0)) {
      self.rayN = l_rayN_69;
      self.rgb = PACK(v_1194);
      self.transp = 0.e0;
      stabilize;
    } else {
      l_transp_1196 = l_transp_1193;
    }
    self.rayN = l_rayN_69;
    self.rgb = PACK(v_1194);
    self.transp = l_transp_1196;
    active;
  }
  stabilize () {
    vec4 v_1199;
    if (LT<real>(self.transp,0.1e1)) {
      real l_aa_1198 = RSub(0.1e1,self.transp);
      v_1199 = VEC4(RDiv(TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(self.rgb)),l_aa_1198),RDiv(TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(self.rgb)),l_aa_1198),RDiv(TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(self.rgb)),l_aa_1198),l_aa_1198);
    } else {
      v_1199 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    self.rgba = PACK(v_1199);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_1201 = 0 to ISub(globals.iresV,1) {
      for i_ui_1202 = 0 to ISub(globals.iresU,1) {
        new ray(i_ui_1202,i_vi_1201);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -pthread -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-par-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.077    30.135
    front end .......................................................................   1.225     1.524
      parser ........................................................................   0.045     0.045
      typechecker ...................................................................   0.254     0.254
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.007     0.007
    High IR optimization ............................................................   0.016    25.988
      High IR value numbering .......................................................   0.008     0.008
      High IR normalization .........................................................  25.964    25.964
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.020     0.020
    Mid IR optimization .............................................................   0.019     0.036
      Mid IR contraction ............................................................   0.005     0.005
      Mid IR value numbering ........................................................   0.011     0.011
      Mid IR border control .........................................................   0.001     0.001
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.221     0.221
    Low IR optimization .............................................................   0.113     0.292
      Low IR contraction ............................................................   0.070     0.070
      Low IR value numbering ........................................................   0.108     0.108
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.095     0.095
    Tree IR optimization ............................................................   0.014     0.015
      Tree IR contraction ...........................................................   0.001     0.001
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.067     1.861
      C compiler ....................................................................   1.793     1.793
