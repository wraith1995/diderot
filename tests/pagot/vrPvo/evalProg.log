/* ParseTree: After parsing */
  Program @ [evalProg.diderot:4.1-173.0] 
    [
      Type: mesh_t= @ [evalProg.diderot:4.1-5.0] 
        Mesh @ [evalProg.diderot:4.6-10] 
        From File : pagotFile.json @ [evalProg.diderot:4.1-5.0] 
      Type: fns_t= @ [evalProg.diderot:5.1-6.0] 
        FunctionSpace(mesh_t) @ [evalProg.diderot:5.6-29] 
          [ ]
        From File : pagotFile.json @ [evalProg.diderot:5.1-6.0] 
      Type: func_t= @ [evalProg.diderot:6.1-7.0] 
        FemFunction(fns_t) @ [evalProg.diderot:6.6-24] 
        From File : pagotFile.json @ [evalProg.diderot:6.1-7.0] 
      Input: block @ [evalProg.diderot:7.1-8.0] 
      Input: space= @ [evalProg.diderot:8.1-9.0] 
        Apply @ [evalProg.diderot:8.21-33] 
          Var: fns_t @ [evalProg.diderot:8.21-26] 
          [
            Var: block @ [evalProg.diderot:8.27-32] 
          ]
      Input: U= @ [evalProg.diderot:9.1-10.0] 
        Apply @ [evalProg.diderot:9.18-31] 
          Var: func_t @ [evalProg.diderot:9.18-24] 
          [
            Var: space @ [evalProg.diderot:9.25-30] 
          ]
      Input: cellChoice @ [evalProg.diderot:10.1-11.0] 
      Var @ [evalProg.diderot:16.1-17.0] 
        Decl: c1= @ [evalProg.diderot:16.1-17.0] 
          Subscript @ [evalProg.diderot:16.19-42] 
            Select @ [evalProg.diderot:16.19-42] 
              Var: block @ [evalProg.diderot:16.19-24] 
              cells
            [
              Var: cellChoice @ [evalProg.diderot:16.31-41] 
            ]
      Var @ [evalProg.diderot:17.1-18.0] 
        Decl: F= @ [evalProg.diderot:17.1-18.0] 
          Select @ [evalProg.diderot:17.16-39] 
            Apply @ [evalProg.diderot:17.16-39] 
              Select @ [evalProg.diderot:17.16-39] 
                Var: U @ [evalProg.diderot:17.16-17] 
                funcCell
              [
                Var: c1 @ [evalProg.diderot:17.27-29] 
              ]
            refField
      Var @ [evalProg.diderot:18.1-19.0] 
        Decl: pvoW= @ [evalProg.diderot:18.1-19.0] 
          BinOp: × @ [evalProg.diderot:18.20-47] 
            UnaryOp: ∇ @ [evalProg.diderot:18.20-24] 
              Var: F @ [evalProg.diderot:18.23-24] 
            BinOp: • @ [evalProg.diderot:18.29-46] 
              UnaryOp: ∇⊗ @ [evalProg.diderot:18.29-39] 
                UnaryOp: ∇ @ [evalProg.diderot:18.35-39] 
                  Var: F @ [evalProg.diderot:18.38-39] 
              UnaryOp: ∇ @ [evalProg.diderot:18.42-46] 
                Var: F @ [evalProg.diderot:18.45-46] 
      Var @ [evalProg.diderot:19.1-20.0] 
        Decl: pvoF= @ [evalProg.diderot:19.1-20.0] 
          BinOp: • @ [evalProg.diderot:19.19-32] 
            Var: pvoW @ [evalProg.diderot:19.19-23] 
            Var: pvoW @ [evalProg.diderot:19.28-32] 
      Func: stupid @ [evalProg.diderot:21.1-32.1] 
        Bool @ [evalProg.diderot:21.10-15] 
        [
          Param: x @ [evalProg.diderot:21.22-28] 
            Tensor @ [evalProg.diderot:21.22-27] 
              [
                Lit: 3 @ [evalProg.diderot:21.22-27] 
              ]
        ]
        Stmt @ [evalProg.diderot:21.1-32.1] 
          Return @ [evalProg.diderot:28.3-29.0] 
            Lit: true @ [evalProg.diderot:28.10-14] 
      Input: cmap= @ [evalProg.diderot:32.1-33.0] 
        Image @ [evalProg.diderot:32.26-49] 
          Lit: "cmap.nrrd" @ [evalProg.diderot:32.37-48] 
      Var @ [evalProg.diderot:33.1-34.0] 
        Decl: CM= @ [evalProg.diderot:33.1-34.0] 
          BinOp: ⊛ @ [evalProg.diderot:33.20-40] 
            Var: tent @ [evalProg.diderot:33.20-24] 
            Apply @ [evalProg.diderot:33.29-40] 
              Var: clamp @ [evalProg.diderot:33.29-34] 
              [
                Var: cmap @ [evalProg.diderot:33.35-39] 
              ]
      Var @ [evalProg.diderot:34.1-35.0] 
        Decl: C= @ [evalProg.diderot:34.1-35.0] 
          Var: F @ [evalProg.diderot:34.16-17] 
      Input: camEye= @ [evalProg.diderot:38.1-39.0] 
        Cons @ [evalProg.diderot:38.21-29] 
          [
            Lit: 0 @ [evalProg.diderot:38.22-23] 
            UnaryOp: unary - @ [evalProg.diderot:38.24-26] 
              Lit: 2 @ [evalProg.diderot:38.25-26] 
            Lit: 0 @ [evalProg.diderot:38.27-28] 
          ]
      Input: camAt= @ [evalProg.diderot:39.1-40.0] 
        Cons @ [evalProg.diderot:39.21-28] 
          [
            Lit: 0 @ [evalProg.diderot:39.22-23] 
            Lit: 0 @ [evalProg.diderot:39.24-25] 
            Lit: 0 @ [evalProg.diderot:39.26-27] 
          ]
      Input: camUp= @ [evalProg.diderot:40.1-41.0] 
        Cons @ [evalProg.diderot:40.20-27] 
          [
            Lit: 0 @ [evalProg.diderot:40.21-22] 
            Lit: 0 @ [evalProg.diderot:40.23-24] 
            Lit: 1 @ [evalProg.diderot:40.25-26] 
          ]
      Input: camNear= @ [evalProg.diderot:41.1-42.0] 
        UnaryOp: unary - @ [evalProg.diderot:41.22-26] 
          Lit: 0.4e1 @ [evalProg.diderot:41.23-26] 
      Input: camFar= @ [evalProg.diderot:42.1-43.0] 
        Lit: 0.4e1 @ [evalProg.diderot:42.21-24] 
      Input: camFOV= @ [evalProg.diderot:43.1-44.0] 
        Lit: 10 @ [evalProg.diderot:43.21-23] 
      Input: camOrtho= @ [evalProg.diderot:44.1-45.0] 
        Lit: false @ [evalProg.diderot:44.23-28] 
      Input: iresU= @ [evalProg.diderot:45.1-46.0] 
        Lit: 100 @ [evalProg.diderot:45.19-22] 
      Input: iresV= @ [evalProg.diderot:46.1-47.0] 
        Lit: 100 @ [evalProg.diderot:46.19-22] 
      Var @ [evalProg.diderot:49.1-39] 
        Decl: camN= @ [evalProg.diderot:49.1-39] 
          Apply @ [evalProg.diderot:49.13-38] 
            Var: normalize @ [evalProg.diderot:49.13-22] 
            [
              BinOp: - @ [evalProg.diderot:49.23-37] 
                Var: camAt @ [evalProg.diderot:49.23-28] 
                Var: camEye @ [evalProg.diderot:49.31-37] 
            ]
      Var @ [evalProg.diderot:50.1-38] 
        Decl: camU= @ [evalProg.diderot:50.1-38] 
          Apply @ [evalProg.diderot:50.13-37] 
            Var: normalize @ [evalProg.diderot:50.13-22] 
            [
              BinOp: × @ [evalProg.diderot:50.23-36] 
                Var: camN @ [evalProg.diderot:50.23-27] 
                Var: camUp @ [evalProg.diderot:50.31-36] 
            ]
      Var @ [evalProg.diderot:51.1-52.0] 
        Decl: camV= @ [evalProg.diderot:51.1-52.0] 
          BinOp: × @ [evalProg.diderot:51.13-25] 
            Var: camN @ [evalProg.diderot:51.13-17] 
            Var: camU @ [evalProg.diderot:51.21-25] 
      Var @ [evalProg.diderot:52.1-53.0] 
        Decl: camDist= @ [evalProg.diderot:52.1-53.0] 
          UnaryOp: |()| @ [evalProg.diderot:52.16-32] 
            BinOp: - @ [evalProg.diderot:52.17-31] 
              Var: camAt @ [evalProg.diderot:52.17-22] 
              Var: camEye @ [evalProg.diderot:52.25-31] 
      Var @ [evalProg.diderot:53.1-54.0] 
        Decl: camVmax= @ [evalProg.diderot:53.1-54.0] 
          BinOp: * @ [evalProg.diderot:53.16-43] 
            Apply @ [evalProg.diderot:53.16-35] 
              Var: tan @ [evalProg.diderot:53.16-19] 
              [
                BinOp: / @ [evalProg.diderot:53.20-34] 
                  BinOp: * @ [evalProg.diderot:53.20-30] 
                    Var: camFOV @ [evalProg.diderot:53.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [evalProg.diderot:53.28-30] 
                  Lit: 360 @ [evalProg.diderot:53.31-34] 
              ]
            Var: camDist @ [evalProg.diderot:53.36-43] 
      Var @ [evalProg.diderot:54.1-55.0] 
        Decl: camUmax= @ [evalProg.diderot:54.1-55.0] 
          BinOp: / @ [evalProg.diderot:54.16-35] 
            BinOp: * @ [evalProg.diderot:54.16-29] 
              Var: camVmax @ [evalProg.diderot:54.16-23] 
              Var: iresU @ [evalProg.diderot:54.24-29] 
            Var: iresV @ [evalProg.diderot:54.30-35] 
      Var @ [evalProg.diderot:55.1-37] 
        Decl: camNearVsp= @ [evalProg.diderot:55.1-37] 
          BinOp: + @ [evalProg.diderot:55.19-36] 
            Var: camNear @ [evalProg.diderot:55.19-26] 
            Var: camDist @ [evalProg.diderot:55.29-36] 
      Var @ [evalProg.diderot:56.1-57.0] 
        Decl: camFarVsp= @ [evalProg.diderot:56.1-57.0] 
          BinOp: + @ [evalProg.diderot:56.18-34] 
            Var: camFar @ [evalProg.diderot:56.18-24] 
            Var: camDist @ [evalProg.diderot:56.27-34] 
      Input: rayStep= @ [evalProg.diderot:60.1-61.0] 
        Lit: 0.1e-3 @ [evalProg.diderot:60.22-28] 
      Input: refStep= @ [evalProg.diderot:61.1-62.0] 
        Lit: 0.1e-3 @ [evalProg.diderot:61.22-28] 
      Input: transp0= @ [evalProg.diderot:64.1-65.0] 
        Lit: 0.5e-2 @ [evalProg.diderot:64.22-27] 
      Input: thick= @ [evalProg.diderot:65.1-66.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:65.20-24] 
      Input: fStrTh= @ [evalProg.diderot:66.1-67.0] 
        Lit: 0.e0 @ [evalProg.diderot:66.21-24] 
      Input: fMaskTh= @ [evalProg.diderot:67.1-68.0] 
        Lit: 0.e0 @ [evalProg.diderot:67.22-25] 
      Input: fBias= @ [evalProg.diderot:68.1-69.0] 
        Lit: 0.1e0 @ [evalProg.diderot:68.20-23] 
      Input: maxAlpha= @ [evalProg.diderot:69.1-70.0] 
        Lit: 0.1e1 @ [evalProg.diderot:69.23-26] 
      Input: light= @ [evalProg.diderot:72.1-73.0] 
        Lit: false @ [evalProg.diderot:72.20-25] 
      Input: phong= @ [evalProg.diderot:73.1-74.0] 
        Cons @ [evalProg.diderot:73.20-40] 
          [
            Lit: 0.1e0 @ [evalProg.diderot:73.21-24] 
            Lit: 0.7e0 @ [evalProg.diderot:73.26-29] 
            Lit: 0.2e0 @ [evalProg.diderot:73.31-34] 
            Lit: 100 @ [evalProg.diderot:73.36-39] 
          ]
      Input: mcNear= @ [evalProg.diderot:74.1-75.0] 
        Cons @ [evalProg.diderot:74.21-28] 
          [
            Lit: 1 @ [evalProg.diderot:74.22-23] 
            Lit: 1 @ [evalProg.diderot:74.24-25] 
            Lit: 1 @ [evalProg.diderot:74.26-27] 
          ]
      Input: mcFar= @ [evalProg.diderot:75.1-76.0] 
        Cons @ [evalProg.diderot:75.20-27] 
          [
            Lit: 1 @ [evalProg.diderot:75.21-22] 
            Lit: 1 @ [evalProg.diderot:75.23-24] 
            Lit: 1 @ [evalProg.diderot:75.25-26] 
          ]
      Input: litdir= @ [evalProg.diderot:76.1-77.0] 
        Cons @ [evalProg.diderot:76.21-29] 
          [
            Lit: 0 @ [evalProg.diderot:76.22-23] 
            UnaryOp: unary - @ [evalProg.diderot:76.24-26] 
              Lit: 1 @ [evalProg.diderot:76.25-26] 
            Lit: 0 @ [evalProg.diderot:76.27-28] 
          ]
      Input: cminmax= @ [evalProg.diderot:77.1-78.0] 
        Cons @ [evalProg.diderot:77.22-27] 
          [
            Lit: 0 @ [evalProg.diderot:77.23-24] 
            Lit: 0 @ [evalProg.diderot:77.25-26] 
          ]
      Var @ [evalProg.diderot:79.1-80.0] 
        Decl: litwsp= @ [evalProg.diderot:79.1-80.0] 
          BinOp: • @ [evalProg.diderot:79.15-64] 
            Apply @ [evalProg.diderot:79.15-42] 
              Var: transpose @ [evalProg.diderot:79.15-24] 
              [
                Cons @ [evalProg.diderot:79.25-41] 
                  [
                    Var: camU @ [evalProg.diderot:79.26-30] 
                    Var: camV @ [evalProg.diderot:79.31-35] 
                    Var: camN @ [evalProg.diderot:79.36-40] 
                  ]
              ]
            Apply @ [evalProg.diderot:79.47-64] 
              Var: normalize @ [evalProg.diderot:79.47-56] 
              [
                Var: litdir @ [evalProg.diderot:79.57-63] 
              ]
      Func: atent @ [evalProg.diderot:82.1-83.0] 
        Tensor @ [evalProg.diderot:82.10-15] 
          [ ]
        [
          Param: a0 @ [evalProg.diderot:82.21-28] 
            Tensor @ [evalProg.diderot:82.21-26] 
              [ ]
          Param: d @ [evalProg.diderot:82.30-36] 
            Tensor @ [evalProg.diderot:82.30-35] 
              [ ]
        ]
        Expr @ [evalProg.diderot:82.1-83.0] 
          BinOp: * @ [evalProg.diderot:82.40-75] 
            Var: a0 @ [evalProg.diderot:82.40-42] 
            Apply @ [evalProg.diderot:82.43-75] 
              Var: clamp @ [evalProg.diderot:82.43-48] 
              [
                Lit: 0 @ [evalProg.diderot:82.49-50] 
                Lit: 1 @ [evalProg.diderot:82.52-53] 
                BinOp: * @ [evalProg.diderot:82.55-74] 
                  Lit: 0.15e1 @ [evalProg.diderot:82.55-58] 
                  BinOp: - @ [evalProg.diderot:82.60-73] 
                    Lit: 1 @ [evalProg.diderot:82.60-61] 
                    BinOp: / @ [evalProg.diderot:82.64-73] 
                      UnaryOp: |()| @ [evalProg.diderot:82.64-67] 
                        Var: d @ [evalProg.diderot:82.65-66] 
                      Var: thick @ [evalProg.diderot:82.68-73] 
              ]
      Func: fStep @ [evalProg.diderot:84.1-87.1] 
        Tensor @ [evalProg.diderot:84.10-15] 
          [
            Lit: 3 @ [evalProg.diderot:84.10-15] 
          ]
        [
          Param: x @ [evalProg.diderot:84.21-27] 
            Tensor @ [evalProg.diderot:84.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:84.21-26] 
              ]
        ]
        Stmt @ [evalProg.diderot:84.1-87.1] 
          Return @ [evalProg.diderot:85.3-86.0] 
            UnaryOp: unary - @ [evalProg.diderot:85.10-62] 
              BinOp: / @ [evalProg.diderot:85.12-61] 
                BinOp: * @ [evalProg.diderot:85.12-32] 
                  Apply @ [evalProg.diderot:85.12-19] 
                    Var: pvoF @ [evalProg.diderot:85.12-16] 
                    [
                      Var: x @ [evalProg.diderot:85.17-18] 
                    ]
                  Apply @ [evalProg.diderot:85.22-32] 
                    UnaryOp: ∇ @ [evalProg.diderot:85.22-29] 
                      Var: pvoF @ [evalProg.diderot:85.25-29] 
                    [
                      Var: x @ [evalProg.diderot:85.30-31] 
                    ]
                BinOp: • @ [evalProg.diderot:85.35-60] 
                  Apply @ [evalProg.diderot:85.35-45] 
                    UnaryOp: ∇ @ [evalProg.diderot:85.35-42] 
                      Var: pvoF @ [evalProg.diderot:85.38-42] 
                    [
                      Var: x @ [evalProg.diderot:85.43-44] 
                    ]
                  Apply @ [evalProg.diderot:85.50-60] 
                    UnaryOp: ∇ @ [evalProg.diderot:85.50-57] 
                      Var: pvoF @ [evalProg.diderot:85.53-57] 
                    [
                      Var: x @ [evalProg.diderot:85.58-59] 
                    ]
      Func: fStrength @ [evalProg.diderot:87.1-89.0] 
        Tensor @ [evalProg.diderot:87.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:87.25-31] 
            Tensor @ [evalProg.diderot:87.25-30] 
              [
                Lit: 3 @ [evalProg.diderot:87.25-30] 
              ]
        ]
        Expr @ [evalProg.diderot:87.1-89.0] 
          BinOp: / @ [evalProg.diderot:88.3-49] 
            UnaryOp: unary - @ [evalProg.diderot:88.3-28] 
              Subscript @ [evalProg.diderot:88.4-28] 
                Apply @ [evalProg.diderot:88.4-28] 
                  Var: evals @ [evalProg.diderot:88.4-9] 
                  [
                    Apply @ [evalProg.diderot:88.11-24] 
                      UnaryOp: ∇⊗ @ [evalProg.diderot:88.11-21] 
                        UnaryOp: ∇ @ [evalProg.diderot:88.17-21] 
                          Var: F @ [evalProg.diderot:88.20-21] 
                      [
                        Var: x @ [evalProg.diderot:88.22-23] 
                      ]
                  ]
                [
                  Lit: 1 @ [evalProg.diderot:88.26-27] 
                ]
            BinOp: + @ [evalProg.diderot:88.30-48] 
              Var: fBias @ [evalProg.diderot:88.30-35] 
              UnaryOp: |()| @ [evalProg.diderot:88.38-48] 
                Apply @ [evalProg.diderot:88.40-47] 
                  UnaryOp: ∇ @ [evalProg.diderot:88.40-44] 
                    Var: F @ [evalProg.diderot:88.43-44] 
                  [
                    Var: x @ [evalProg.diderot:88.45-46] 
                  ]
      Func: fTest @ [evalProg.diderot:90.1-98.3] 
        Bool @ [evalProg.diderot:90.10-15] 
        [
          Param: x @ [evalProg.diderot:90.21-27] 
            Tensor @ [evalProg.diderot:90.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:90.21-26] 
              ]
        ]
        Stmt @ [evalProg.diderot:90.1-98.3] 
          Return @ [evalProg.diderot:96.3-97.0] 
            BinOp: > @ [evalProg.diderot:96.10-35] 
              UnaryOp: |()| @ [evalProg.diderot:96.10-22] 
                Apply @ [evalProg.diderot:96.11-21] 
                  UnaryOp: ∇ @ [evalProg.diderot:96.11-18] 
                    Var: pvoF @ [evalProg.diderot:96.14-18] 
                  [
                    Var: x @ [evalProg.diderot:96.19-20] 
                  ]
              Lit: 0.1e-7 @ [evalProg.diderot:96.25-35] 
      Func: fMask @ [evalProg.diderot:100.1-35] 
        Tensor @ [evalProg.diderot:100.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:100.21-27] 
            Tensor @ [evalProg.diderot:100.21-26] 
              [
                Lit: 3 @ [evalProg.diderot:100.21-26] 
              ]
        ]
        Expr @ [evalProg.diderot:100.1-35] 
          Lit: 0.1e1 @ [evalProg.diderot:100.31-34] 
      Func: posTest @ [evalProg.diderot:102.1-103.0] 
        Bool @ [evalProg.diderot:102.10-15] 
        [
          Param: x @ [evalProg.diderot:102.23-29] 
            Tensor @ [evalProg.diderot:102.23-28] 
              [
                Lit: 3 @ [evalProg.diderot:102.23-28] 
              ]
        ]
        Expr @ [evalProg.diderot:102.1-103.0] 
          AndAlso @ [evalProg.diderot:102.33-131] 
            Apply @ [evalProg.diderot:102.33-58] 
              Select @ [evalProg.diderot:102.33-58] 
                Select @ [evalProg.diderot:102.33-58] 
                  Var: block @ [evalProg.diderot:102.33-38] 
                  refcell
                isInside
              [
                Var: x @ [evalProg.diderot:102.56-57] 
              ]
            AndAlso @ [evalProg.diderot:102.59-131] 
              BinOp: > @ [evalProg.diderot:102.62-84] 
                Apply @ [evalProg.diderot:102.62-74] 
                  Var: fStrength @ [evalProg.diderot:102.62-71] 
                  [
                    Var: x @ [evalProg.diderot:102.72-73] 
                  ]
                Var: fStrTh @ [evalProg.diderot:102.77-83] 
              AndAlso @ [evalProg.diderot:102.84-131] 
                BinOp: >= @ [evalProg.diderot:102.87-107] 
                  Apply @ [evalProg.diderot:102.87-95] 
                    Var: fMask @ [evalProg.diderot:102.87-92] 
                    [
                      Var: x @ [evalProg.diderot:102.93-94] 
                    ]
                  Var: fMaskTh @ [evalProg.diderot:102.99-106] 
                AndAlso @ [evalProg.diderot:102.107-131] 
                  Apply @ [evalProg.diderot:102.110-118] 
                    Var: fTest @ [evalProg.diderot:102.110-115] 
                    [
                      Var: x @ [evalProg.diderot:102.116-117] 
                    ]
                  Apply @ [evalProg.diderot:102.122-131] 
                    Var: stupid @ [evalProg.diderot:102.122-128] 
                    [
                      Var: x @ [evalProg.diderot:102.129-130] 
                    ]
    ]
    Strand: ray @ [evalProg.diderot:106.1-171.3] 
      [
        Param: ui @ [evalProg.diderot:106.12-18] 
          Int @ [evalProg.diderot:106.12-16] 
        Param: vi @ [evalProg.diderot:106.20-26] 
          Int @ [evalProg.diderot:106.20-24] 
      ]
      [
        VarDcl @ [evalProg.diderot:108.3-109.0] 
        VarDcl @ [evalProg.diderot:109.3-110.0] 
        VarDcl @ [evalProg.diderot:110.3-111.0] 
        VarDcl @ [evalProg.diderot:111.3-112.0] 
        VarDcl @ [evalProg.diderot:112.3-113.0] 
        VarDcl @ [evalProg.diderot:113.3-114.0] 
        VarDcl @ [evalProg.diderot:115.3-116.0] 
        VarDcl @ [evalProg.diderot:116.3-117.0] 
        VarDcl @ [evalProg.diderot:119.3-24] 
        VarDcl @ [evalProg.diderot:119.25-120.0] 
        VarDcl @ [evalProg.diderot:120.3-24] 
        VarDcl @ [evalProg.diderot:120.25-121.0] 
        VarDcl: output @ [evalProg.diderot:121.3-122.0] 
        VarDcl: output @ [evalProg.diderot:122.3-123.0] 
        VarDcl @ [evalProg.diderot:123.3-22] 
        VarDcl @ [evalProg.diderot:124.3-19] 
      ]
      [
        Method: Update @ [evalProg.diderot:126.3-163.3] 
          Block @ [evalProg.diderot:126.10-163.0] 
            [
              Assign: rayN+= @ [evalProg.diderot:127.5-128.0] 
                Var: rayStep @ [evalProg.diderot:127.13-20] 
              IfThen @ [evalProg.diderot:128.5-129.5] 
                BinOp: > @ [evalProg.diderot:128.8-24] 
                  Var: rayN @ [evalProg.diderot:128.8-12] 
                  Var: camFarVsp @ [evalProg.diderot:128.15-24] 
                Stabilize @ [evalProg.diderot:128.27-37] 
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: pos= @ [evalProg.diderot:129.5-130.0] 
                  BinOp: + @ [evalProg.diderot:129.16-39] 
                    Var: rayOrig @ [evalProg.diderot:129.16-23] 
                    BinOp: * @ [evalProg.diderot:129.26-39] 
                      Var: rayN @ [evalProg.diderot:129.26-30] 
                      Var: rayVec @ [evalProg.diderot:129.33-39] 
              IfThen @ [evalProg.diderot:130.5-131.5] 
                UnaryOp: ! @ [evalProg.diderot:130.9-22] 
                  Apply @ [evalProg.diderot:130.10-22] 
                    Var: posTest @ [evalProg.diderot:130.10-17] 
                    [
                      Var: pos @ [evalProg.diderot:130.18-21] 
                    ]
                Continue @ [evalProg.diderot:130.24-33] 
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: step= @ [evalProg.diderot:131.5-132.0] 
                  Apply @ [evalProg.diderot:131.17-27] 
                    Var: fStep @ [evalProg.diderot:131.17-22] 
                    [
                      Var: pos @ [evalProg.diderot:131.23-26] 
                    ]
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: aa= @ [evalProg.diderot:132.5-133.0] 
                  Apply @ [evalProg.diderot:132.15-38] 
                    Var: atent @ [evalProg.diderot:132.15-20] 
                    [
                      Var: maxAlpha @ [evalProg.diderot:132.21-29] 
                      UnaryOp: |()| @ [evalProg.diderot:132.31-37] 
                        Var: step @ [evalProg.diderot:132.32-36] 
                    ]
              IfThen @ [evalProg.diderot:134.5-135.5] 
                BinOp: == @ [evalProg.diderot:134.8-14] 
                  Var: aa @ [evalProg.diderot:134.8-10] 
                  Lit: 0 @ [evalProg.diderot:134.13-14] 
                Continue @ [evalProg.diderot:134.17-26] 
              Assign: aa= @ [evalProg.diderot:135.5-30] 
                BinOp: - @ [evalProg.diderot:135.10-29] 
                  Lit: 1 @ [evalProg.diderot:135.10-11] 
                  BinOp: ^ @ [evalProg.diderot:135.14-29] 
                    BinOp: - @ [evalProg.diderot:135.15-19] 
                      Lit: 1 @ [evalProg.diderot:135.15-16] 
                      Var: aa @ [evalProg.diderot:135.17-19] 
                    Var: alphaFix @ [evalProg.diderot:135.21-29] 
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: snorm= @ [evalProg.diderot:137.5-138.0] 
                  UnaryOp: unary - @ [evalProg.diderot:137.18-34] 
                    Apply @ [evalProg.diderot:137.19-34] 
                      Var: normalize @ [evalProg.diderot:137.19-28] 
                      [
                        Var: step @ [evalProg.diderot:137.29-33] 
                      ]
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: dcomp= @ [evalProg.diderot:138.5-139.0] 
                  BinOp: ^ @ [evalProg.diderot:138.18-38] 
                    BinOp: • @ [evalProg.diderot:138.19-35] 
                      Var: snorm @ [evalProg.diderot:138.19-24] 
                      Var: litwsp @ [evalProg.diderot:138.29-35] 
                    Lit: 2 @ [evalProg.diderot:138.37-38] 
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: scomp= @ [evalProg.diderot:139.5-140.0] 
                  Lit: 0.e0 @ [evalProg.diderot:139.18-21] 
              IfThen @ [evalProg.diderot:140.5-146.5] 
                BinOp: != @ [evalProg.diderot:140.9-18] 
                  Var: phKs @ [evalProg.diderot:140.9-13] 
                  Lit: 0 @ [evalProg.diderot:140.17-18] 
                Assign: scomp= @ [evalProg.diderot:141.7-142.0] 
                  BinOp: ^ @ [evalProg.diderot:141.15-59] 
                    UnaryOp: |()| @ [evalProg.diderot:141.15-54] 
                      BinOp: • @ [evalProg.diderot:141.16-53] 
                        Var: snorm @ [evalProg.diderot:141.16-21] 
                        Apply @ [evalProg.diderot:141.26-52] 
                          Var: normalize @ [evalProg.diderot:141.26-35] 
                          [
                            BinOp: + @ [evalProg.diderot:141.36-51] 
                              Var: eyeDir @ [evalProg.diderot:141.36-42] 
                              Var: litwsp @ [evalProg.diderot:141.45-51] 
                          ]
                    Var: phSp @ [evalProg.diderot:141.55-59] 
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: dcol= @ [evalProg.diderot:146.5-147.0] 
                  Apply @ [evalProg.diderot:146.17-65] 
                    Var: lerp @ [evalProg.diderot:146.17-21] 
                    [
                      Var: mcNear @ [evalProg.diderot:146.22-28] 
                      Var: mcFar @ [evalProg.diderot:146.30-35] 
                      Var: camNearVsp @ [evalProg.diderot:146.37-47] 
                      Var: rayN @ [evalProg.diderot:146.49-53] 
                      Var: camFarVsp @ [evalProg.diderot:146.55-64] 
                    ]
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: cmin= @ [evalProg.diderot:147.5-148.0] 
                  Subscript @ [evalProg.diderot:147.17-27] 
                    Var: cminmax @ [evalProg.diderot:147.17-24] 
                    [
                      Lit: 0 @ [evalProg.diderot:147.25-26] 
                    ]
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: cmax= @ [evalProg.diderot:148.5-149.0] 
                  Subscript @ [evalProg.diderot:148.17-27] 
                    Var: cminmax @ [evalProg.diderot:148.17-24] 
                    [
                      Lit: 1 @ [evalProg.diderot:148.25-26] 
                    ]
              Decl @ [evalProg.diderot:126.10-163.0] 
                Decl: mcol= @ [evalProg.diderot:149.5-150.0] 
                  Cons @ [evalProg.diderot:149.17-24] 
                    [
                      Lit: 1 @ [evalProg.diderot:149.18-19] 
                      Lit: 1 @ [evalProg.diderot:149.20-21] 
                      Lit: 1 @ [evalProg.diderot:149.22-23] 
                    ]
              IfThen @ [evalProg.diderot:150.5-153.5] 
                BinOp: != @ [evalProg.diderot:150.9-21] 
                  Var: cmin @ [evalProg.diderot:150.9-13] 
                  Var: cmax @ [evalProg.diderot:150.17-21] 
                Assign: mcol= @ [evalProg.diderot:151.7-54] 
                  Apply @ [evalProg.diderot:151.14-53] 
                    Var: CM @ [evalProg.diderot:151.14-16] 
                    [
                      Apply @ [evalProg.diderot:151.17-52] 
                        Var: lerp @ [evalProg.diderot:151.17-21] 
                        [
                          Lit: 0 @ [evalProg.diderot:151.22-23] 
                          Lit: 1 @ [evalProg.diderot:151.25-26] 
                          Var: cmin @ [evalProg.diderot:151.28-32] 
                          Apply @ [evalProg.diderot:151.34-45] 
                            Var: C @ [evalProg.diderot:151.34-35] 
                            [
                              BinOp: + @ [evalProg.diderot:151.36-44] 
                                Var: pos @ [evalProg.diderot:151.36-39] 
                                Var: step @ [evalProg.diderot:151.40-44] 
                            ]
                          Var: cmax @ [evalProg.diderot:151.47-51] 
                        ]
                    ]
              Assign: rgb+= @ [evalProg.diderot:153.5-155.0] 
                BinOp: * @ [evalProg.diderot:153.12-154.30] 
                  BinOp: * @ [evalProg.diderot:153.12-21] 
                    Var: transp @ [evalProg.diderot:153.12-18] 
                    Var: aa @ [evalProg.diderot:153.19-21] 
                  BinOp: + @ [evalProg.diderot:153.23-154.29] 
                    BinOp: * @ [evalProg.diderot:153.23-154.9] 
                      BinOp: + @ [evalProg.diderot:153.24-41] 
                        Var: phKa @ [evalProg.diderot:153.24-28] 
                        BinOp: * @ [evalProg.diderot:153.31-41] 
                          Var: phKd @ [evalProg.diderot:153.31-35] 
                          Var: dcomp @ [evalProg.diderot:153.36-41] 
                      Apply @ [evalProg.diderot:153.43-154.0] 
                        Var: modulate @ [evalProg.diderot:153.43-51] 
                        [
                          Var: dcol @ [evalProg.diderot:153.52-56] 
                          Var: mcol @ [evalProg.diderot:153.57-61] 
                        ]
                    BinOp: * @ [evalProg.diderot:154.11-29] 
                      BinOp: * @ [evalProg.diderot:154.11-21] 
                        Var: phKs @ [evalProg.diderot:154.11-15] 
                        Var: scomp @ [evalProg.diderot:154.16-21] 
                      Cons @ [evalProg.diderot:154.22-29] 
                        [
                          Lit: 1 @ [evalProg.diderot:154.23-24] 
                          Lit: 1 @ [evalProg.diderot:154.25-26] 
                          Lit: 1 @ [evalProg.diderot:154.27-28] 
                        ]
              Assign: transp*= @ [evalProg.diderot:156.5-157.0] 
                BinOp: - @ [evalProg.diderot:156.15-21] 
                  Lit: 1 @ [evalProg.diderot:156.15-16] 
                  Var: aa @ [evalProg.diderot:156.19-21] 
              IfThen @ [evalProg.diderot:157.5-162.3] 
                BinOp: < @ [evalProg.diderot:157.8-24] 
                  Var: transp @ [evalProg.diderot:157.8-14] 
                  Var: transp0 @ [evalProg.diderot:157.17-24] 
                Block @ [evalProg.diderot:157.25-161.0] 
                  [
                    Assign: transp= @ [evalProg.diderot:158.7-159.0] 
                      Lit: 0 @ [evalProg.diderot:158.16-17] 
                    Stabilize @ [evalProg.diderot:159.7-160.0] 
                  ]
            ]
        Method: Stabilize @ [evalProg.diderot:163.3-171.1] 
          IfThen @ [evalProg.diderot:164.5-169.3] 
            BinOp: < @ [evalProg.diderot:164.9-19] 
              Var: transp @ [evalProg.diderot:164.9-15] 
              Lit: 1 @ [evalProg.diderot:164.18-19] 
            Block @ [evalProg.diderot:164.21-169.0] 
              [
                Decl @ [evalProg.diderot:164.21-169.0] 
                  Decl: aa= @ [evalProg.diderot:165.7-166.0] 
                    BinOp: - @ [evalProg.diderot:165.17-27] 
                      Lit: 1 @ [evalProg.diderot:165.17-18] 
                      Var: transp @ [evalProg.diderot:165.21-27] 
                Assign: rgba= @ [evalProg.diderot:167.7-52] 
                  Cons @ [evalProg.diderot:167.14-51] 
                    [
                      BinOp: / @ [evalProg.diderot:167.15-24] 
                        Subscript @ [evalProg.diderot:167.15-21] 
                          Var: rgb @ [evalProg.diderot:167.15-18] 
                          [
                            Lit: 0 @ [evalProg.diderot:167.19-20] 
                          ]
                        Var: aa @ [evalProg.diderot:167.22-24] 
                      BinOp: / @ [evalProg.diderot:167.26-35] 
                        Subscript @ [evalProg.diderot:167.26-32] 
                          Var: rgb @ [evalProg.diderot:167.26-29] 
                          [
                            Lit: 1 @ [evalProg.diderot:167.30-31] 
                          ]
                        Var: aa @ [evalProg.diderot:167.33-35] 
                      BinOp: / @ [evalProg.diderot:167.37-46] 
                        Subscript @ [evalProg.diderot:167.37-43] 
                          Var: rgb @ [evalProg.diderot:167.37-40] 
                          [
                            Lit: 2 @ [evalProg.diderot:167.41-42] 
                          ]
                        Var: aa @ [evalProg.diderot:167.44-46] 
                      Var: aa @ [evalProg.diderot:167.48-50] 
                    ]
              ]
      ]
    Grid @ [evalProg.diderot:171.3-173.0] 
      Comprehension @ [evalProg.diderot:171.16-172.44] 
        Apply @ [evalProg.diderot:171.17-172.0] 
          Var: ray @ [evalProg.diderot:171.17-20] 
          [
            Var: ui @ [evalProg.diderot:171.21-23] 
            Var: vi @ [evalProg.diderot:171.25-27] 
          ]
        [
          Iterator: vi @ [evalProg.diderot:172.9-25] 
            Range @ [evalProg.diderot:172.15-25] 
              Lit: 0 @ [evalProg.diderot:172.15-16] 
              BinOp: - @ [evalProg.diderot:172.18-25] 
                Var: iresV @ [evalProg.diderot:172.18-23] 
                Lit: 1 @ [evalProg.diderot:172.24-25] 
          Iterator: ui @ [evalProg.diderot:172.27-43] 
            Range @ [evalProg.diderot:172.33-43] 
              Lit: 0 @ [evalProg.diderot:172.33-34] 
              BinOp: - @ [evalProg.diderot:172.36-43] 
                Var: iresU @ [evalProg.diderot:172.36-41] 
                Lit: 1 @ [evalProg.diderot:172.42-43] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemType: Mesh with type var:NONE block = loadFem(Mesh);
input FemType: Space with type var:mesh_t space = loadFem(Space);
input FemType: FemFunc with type var:fns_t U = loadFem(FemFunc);
input int cellChoice;
input image(1)[3] cmap = loadImage<%1; $[3]> ("cmap.nrrd");
input vec3 camEye = [0.e0, -0.2e1, 0.e0];
input vec3 camAt = [0.e0, 0.e0, 0.e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camNear = -0.4e1;
input real camFar = 0.4e1;
input real camFOV = 0.1e2;
input bool camOrtho = false;
input int iresU = 100;
input int iresV = 100;
input real rayStep = 0.1e-3;
input real refStep = 0.1e-3;
input real transp0 = 0.5e-2;
input real thick = 0.1e-1;
input real fStrTh = 0.e0;
input real fMaskTh = 0.e0;
input real fBias = 0.1e0;
input real maxAlpha = 0.1e1;
input bool light = false;
input vec4 phong = [0.1e0, 0.7e0, 0.2e0, 0.1e3];
input vec3 mcNear = [0.1e1, 0.1e1, 0.1e1];
input vec3 mcFar = [0.1e1, 0.1e1, 0.1e1];
input vec3 litdir = [0.e0, -0.1e1, 0.e0];
input vec2 cminmax = [0.e0, 0.e0];
function bool != (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:mesh_t findPos (FemType: Mesh with type var:mesh_t mesh, vec3 pos)
{
  xn = [0.e0, 0.e0, 0.e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  foreach (int itter in $range (0, * (+ (2, 1), numCell))) {
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.e0, 0.e0, 0.e0]);
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (mesh, xn, 0.1e-8)):bool {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      }
    newtonInt = + (newtonInt, 1);
    if >= (newtonInt, 2) {
      newtonInt = 0;
      if >= (cellInt, numCell) {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        cellInt = + (cellInt, 1);
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: RefCell with type var:mesh_t refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:mesh_t, RefCell(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:mesh_t[], Cells(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] mesh_t_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] mesh_t_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 mesh_t_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 mesh_t_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:mesh_t _mesh_t_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.e0, 0.e0, 0.e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.e0, 0.e0, 0.e0]);
  foreach (int itter in $range (0, 2)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (mesh, xn, 0.1e-8)):bool {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: MeshPos with type var:mesh_t _mesh_pos_mesh_t_build_world_pos (FemType: MeshPos with type var:mesh_t pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:mesh_t,vec3 (pos, mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:mesh_t pos)
{
  return mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:mesh_t $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    print ("face ", $r2i (time[1]), " to ", $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1), "\n", "got: ", $sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), "\n");
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %6> ($sub<mat4[6]; %6> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, -0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, -0.1e1, 0.1e1], [0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.1e1], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, -0.1e1], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, -0.1e1, 0.e0, -0.5e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.1e1, 0.5e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.1e1, 0.5e0], [0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.1e1, 0.5e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.1e1, 0.5e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.1e1], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]], $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:mesh_t;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 12), * (faceIdx, 2)))):int[2];
    }
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 0;
      }
    if $and (>= (/ (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 1;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      face = 3;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 4;
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), 0.1e-20)))
    if extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (+<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)))), +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)))), 0.1e-8)):bool {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      face = 5;
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if != (i, 0) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 0;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      }
    if $and (>= (/ (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if != (i, 1) {
      time = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 1;
      }
    else {
      faceTime = / (-<$[]> (0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), 0.1e-20)))
    if != (i, 2) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if != (i, 3) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      face = 3;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if != (i, 4) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 4;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos)), 0.1e-20)))
    if != (i, 5) {
      time = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      face = 5;
      }
    else {
      faceTime = / (-<$[]> (-0.5e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, -0.e0], dPos));
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    if == (-inf, faceTime) {
      return [(real)-1, (real)-1];
      }
    else {
      return [faceTime, (real)i];
      }
    }
  }
function FemType: Mesh with type var:mesh_t domain (FemType: Space with type var:mesh_t arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:mesh_t space (FemType: FemFunc with type var:fns_t arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:func_t funcCell (FemType: FemFunc with type var:fns_t arg0, FemType: MeshCell with type var:mesh_t arg1)
{
  return loadFem(FuncCell);
  }
FemType: MeshCell with type var:mesh_t c1 = $dynsub<FemType: MeshCell with type var:mesh_t> (extractFemItem(block, FemType: MeshCell with type var:mesh_t[], Cells(Mesh)), cellChoice);
field(3)[] F = femField(extractFem(FemFunc,funcCell (U, c1) ),extractFemItem(funcCell (U, c1), int, CellIndex(FuncCell)),field(3)[], refField, );
field(3)[3] pvoW = ×<#> (∇<#; %3> (F), •<#; #; %3; $[3,3]; $[3]; $[3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), ∇<#; %3> (F)));
field(3)[] pvoF = •<#; #; %3; $[3]; $[3]; $[]> (pvoW, pvoW);
function bool stupid (vec3 x)
{
  return true;
  }
field#0(1)[3] CM = ⊛<#0; %1; $[3]> (tent, clamp<%1; $[3]> (cmap));
field(3)[] C = F;
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camN, camU);
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
real camNearVsp = +<$[]> (camNear, camDist);
real camFarVsp = +<$[]> (camFar, camDist);
vec3 litwsp = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (litdir));
function real atent (real a0, real d)
{
  return * (a0, clamp<$[]> ((real)0, (real)1, * (0.15e1, -<$[]> ((real)1, / (|()|<$[]> (d), thick)))));
  }
function vec3 fStep (vec3 x)
{
  return unary -<$[3]> (/<$[3]> (*<$[3]> (@<#; %3; $[]> (pvoF, x), @<#; %3; $[3]> (∇<#; %3> (pvoF), x)), •<$[3]; $[3]; $[]> (@<#; %3; $[3]> (∇<#; %3> (pvoF), x), @<#; %3; $[3]> (∇<#; %3> (pvoF), x))));
  }
function real fStrength (vec3 x)
{
  return / (unary -<$[]> ($sub<real; %3> (evals (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (∇<#; %3> (F)), x)), 1)), +<$[]> (fBias, |()|<$[3]> (@<#; %3; $[3]> (∇<#; %3> (F), x))));
  }
function bool fTest (vec3 x)
{
  return > (|()|<$[3]> (@<#; %3; $[3]> (∇<#; %3> (pvoF), x)), 0.1e-7);
  }
function real fMask (vec3 x)
{
  return 0.1e1;
  }
function bool posTest (vec3 x)
{
  return (extractFemItemN(InsideInsert(File=checkInside.in)(Mesh),FemType: Mesh with type var:NONE,vec3,real (refcell (block), x, 0.1e-8)):bool && (> (fStrength (x), fStrTh) && (>= (fMask (x), fMaskTh) && (fTest (x) && stupid (x)))));
  }
strand ray (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (unary -<$[]> (camVmax), camVmax, unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  real rayN = camNearVsp;
  vec3 UV = +<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV));
  vec3 rayOrig = +<$[3]> (camEye, (UV if camOrtho else [0.e0, 0.e0, 0.e0]));
  vec3 rayVec = +<$[3]> (camN, ([0.e0, 0.e0, 0.e0] if camOrtho else /<$[3]> (UV, camDist)));
  real alphaFix = / (* (|()|<$[3]> (rayVec), rayStep), refStep);
  vec3 eyeDir = unary -<$[3]> (normalize<$[3]> (rayVec));
  real phKa = phong[0];
  real phKd = phong[1];
  real phKs = phong[2];
  real phSp = phong[3];
  output vec4 rgba = [0.e0, 0.e0, 0.e0, 0.e0];
  output real raw = 0.e0;
  vec3 rgb = [0.e0, 0.e0, 0.e0];
  real transp = 0.1e1;
  update {
    rayN = +<$[]> (rayN, rayStep);
    if > (rayN, camFarVsp)
      stabilize;
      vec3 pos = +<$[3]> (rayOrig, *<$[3]> (rayN, rayVec));
    if ! (posTest (pos))
      continue;
      vec3 step = fStep (pos);
    real aa = atent (maxAlpha, |()|<$[3]> (step));
    if == (aa, (real)0)
      continue;
      aa = -<$[]> ((real)1, ^ (-<$[]> ((real)1, aa), alphaFix));
    vec3 snorm = unary -<$[3]> (normalize<$[3]> (step));
    real dcomp = ^ (•<$[3]; $[3]; $[]> (snorm, litwsp), 2);
    real scomp = 0.e0;
    if != (phKs, (real)0)
      scomp = ^ (|()|<$[]> (•<$[3]; $[3]; $[]> (snorm, normalize<$[3]> (+<$[3]> (eyeDir, litwsp)))), phSp);
      vec3 dcol = lerp<$[3]> (mcNear, mcFar, camNearVsp, rayN, camFarVsp);
    real cmin = cminmax[0];
    real cmax = cminmax[1];
    vec3 mcol = [0.1e1, 0.1e1, 0.1e1];
    if != (cmin, cmax)
      mcol = @<#0; %1; $[3]> (CM, lerp<$[]> ((real)0, (real)1, cmin, @<#; %3; $[]> (C, +<$[3]> (pos, step)), cmax));
      rgb = +<$[3]> (rgb, *<$[3]> (* (transp, aa), +<$[3]> (*<$[3]> (+<$[]> (phKa, * (phKd, dcomp)), modulate<%3> (dcol, mcol)), *<$[3]> (* (phKs, scomp), [0.1e1, 0.1e1, 0.1e1]))));
    transp = * (transp, -<$[]> ((real)1, aa));
    if < (transp, transp0) {
      transp = 0.e0;
      stabilize;
      }
    }
  stabilize {
    if < (transp, (real)1) {
      real aa = -<$[]> ((real)1, transp);
      rgba = [/ (rgb[0], aa), / (rgb[1], aa), / (rgb[2], aa), aa];
      }
    }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresV, 1))) {
      foreach (int ui in $range (0, - (iresU, 1))) {
        new ray (ui, vi);
        }
      }
    }
  
/* Program end */
cmap.nrrd file header:
  type: double
  dimension: 2
  space dimension: 1
  sizes: 3 311
  space directions: none (0.0066445182724252493)
  kinds: 3-vector space
  endian: little
  encoding: raw
  space origin: (-1.0299003322259137)
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04CB;
input FemData:Space 0space04D7_intermedateGlobal04D8;
input FemData:FemFunc 0U04D9_intermedateGlobal04DA;
input int cellChoice04DB;
input image(1)[3] cmap04DD = image("cmap.nrrd");
input vec3 camEye04DE = <default>;
input vec3 camAt04E2 = <default>;
input vec3 camUp04E6 = <default>;
input real camNear04EA = <default>;
input real camFar04EB = <default>;
input real camFOV04EC = <default>;
input bool camOrtho04ED = <default>;
input int iresU04EE = <default>;
input int iresV04EF = <default>;
input real rayStep04F0 = <default>;
input real refStep04F1 = <default>;
input real transp004F2 = <default>;
input real thick04F3 = <default>;
input real fStrTh04F4 = <default>;
input real fMaskTh04F5 = <default>;
input real fBias04F6 = <default>;
input real maxAlpha04F7 = <default>;
input bool light04F8 = <default>;
input vec4 phong04F9 = <default>;
input vec3 mcNear04FE = <default>;
input vec3 mcFar0502 = <default>;
input vec3 litdir0506 = <default>;
input vec2 cminmax050A = <default>;
constants {
  real _t04DF = 0.e0;
  real _t04E0 = -0.2e1;
  real _t04E1 = 0.e0;
  camEye04DE = [_t04DF, _t04E0, _t04E1];
  real _t04E3 = 0.e0;
  real _t04E4 = 0.e0;
  real _t04E5 = 0.e0;
  camAt04E2 = [_t04E3, _t04E4, _t04E5];
  real _t04E7 = 0.e0;
  real _t04E8 = 0.e0;
  real _t04E9 = 0.1e1;
  camUp04E6 = [_t04E7, _t04E8, _t04E9];
  camNear04EA = -0.4e1;
  camFar04EB = 0.4e1;
  camFOV04EC = 0.1e2;
  camOrtho04ED = false;
  iresU04EE = 100;
  iresV04EF = 100;
  rayStep04F0 = 0.1e-3;
  refStep04F1 = 0.1e-3;
  transp004F2 = 0.5e-2;
  thick04F3 = 0.1e-1;
  fStrTh04F4 = 0.e0;
  fMaskTh04F5 = 0.e0;
  fBias04F6 = 0.1e0;
  maxAlpha04F7 = 0.1e1;
  light04F8 = false;
  real _t04FA = 0.1e0;
  real _t04FB = 0.7e0;
  real _t04FC = 0.2e0;
  real _t04FD = 0.1e3;
  phong04F9 = [_t04FA, _t04FB, _t04FC, _t04FD];
  real _t04FF = 0.1e1;
  real _t0500 = 0.1e1;
  real _t0501 = 0.1e1;
  mcNear04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.1e1;
  real _t0504 = 0.1e1;
  real _t0505 = 0.1e1;
  mcFar0502 = [_t0503, _t0504, _t0505];
  real _t0507 = 0.e0;
  real _t0508 = -0.1e1;
  real _t0509 = 0.e0;
  litdir0506 = [_t0507, _t0508, _t0509];
  real _t050B = 0.e0;
  real _t050C = 0.e0;
  cminmax050A = [_t050B, _t050C];
}
global Femdata: MeshCell[] 0cell_block04CC;
global Femdata: Space space04D7;
global Femdata: FemFunc U04D9;
global Femdata: MeshCell c115B1;
global field(3)[] F15B9;
global field(3)[3] pvoW15BF;
global field(3)[] pvoF15C0;
global field#0(1)[3] CM15C6;
global field(3)[] C15C7;
global vec3 camN15C9;
global vec3 camU15CB;
global vec3 camV15CC;
global real camDist15CE;
global real camVmax15D4;
global real camUmax15D8;
global real camNearVsp15D9;
global real camFarVsp15DA;
global vec3 litwsp15DE;
function bool#0 !=050D (Femdata: MeshCell cell1050E, Femdata: MeshCell cell1050F)
{
  int _t0510 = extractFemItem(CellIndex(Mesh), int, cell1050E);
  int _t0511 = extractFemItem(CellIndex(Mesh), int, cell1050F);
  bool _t0512 = prim !=0086 (_t0510, _t0511);
  return _t0512;
}
function bool#0 ==0513 (Femdata: MeshCell cell1050E, Femdata: MeshCell cell1050F)
{
  int _t0514 = extractFemItem(CellIndex(Mesh), int, cell1050E);
  int _t0515 = extractFemItem(CellIndex(Mesh), int, cell1050F);
  bool _t0516 = prim ==0082 (_t0514, _t0515);
  return _t0516;
}
function Femdata: MeshPos#0 findPos0517 (Femdata: Mesh mesh0518, vec3 pos0519)
{
  real _t051A = 0.e0;
  real _t051B = 0.e0;
  real _t051C = 0.e0;
  xn051D = [_t051A, _t051B, _t051C];
  newtonInt051E = 0;
  cellInt051F = extractFemItem(StartCell(Mesh), int, mesh0518);
  int _t0520 = extractFemItem(NumCell(Mesh), int, mesh0518);
  int _t0521 = 1;
  numCell0522 = prim -0024 (_t0520, _t0521);
  int _t0523 = 0;
  int _t0524 = 2;
  int _t0525 = 1;
  int _t0526 = prim +0015 (_t0524, _t0525);
  int _t0527 = prim *0033 (_t0526, numCell0522);
  int[] _t0528 = prim $range01C3 (_t0523, _t0527);
  foreach itter0543 in _t0528 {
    field(3)[3] _t0529 = femField(mesh0518,cellInt051F,field(3)[3],Transform,);
    field(3)[3,3] _t052A = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0529);
    field(3)[3,3] _t052B = prim inv015E<#∞; %3> (_t052A);
    real _t052C = 0.e0;
    real _t052D = 0.e0;
    real _t052E = 0.e0;
    vec3 _t052F = [_t052C, _t052D, _t052E];
    A0530 = prim @00A5<#∞; %3; $[3,3]> (_t052B, _t052F);
    field(3)[3] _t0531 = femField(mesh0518,cellInt051F,field(3)[3],Transform,);
    field(3)[3] _t0532 = prim -002E<#∞; %3; $[3]> (_t0531, pos0519);
    field(3)[3] _t0533 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0530, _t0532);
    delta0534 = prim @00A5<#∞; %3; $[3]> (_t0533, xn051D);
    xn051D = prim -0026<$[3]> (xn051D, delta0534);
    real _t0535 = 0.1e-7;
    real _t0536 = 0.1e-7;
    real _t0537 = prim *0034 (_t0535, _t0536);
    real _t0538 = prim •00CE<$[3]; $[3]; $[]> (delta0534, delta0534);
    bool _t0539 = prim >=007E (_t0537, _t0538);
    if _t0539 {
      real _t053A = 0.1e-8;
      bool _t053B = extractFemItemN((mesh0518, xn051D, _t053A),InsideInsert(File=checkInside.in)(Mesh),);
      if _t053B {
        Femdata: MeshPos _t053C = extractFemItemN((mesh0518, cellInt051F, xn051D, pos0519),AllBuild(MeshPos),);
        return _t053C;
      }
    }
    int _t053D = 1;
    newtonInt051E = prim +0015 (newtonInt051E, _t053D);
    int _t053E = 2;
    bool _t053F = prim >=007D (newtonInt051E, _t053E);
    if _t053F {
      newtonInt051E = 0;
      bool _t0540 = prim >=007D (cellInt051F, numCell0522);
      if _t0540 {
        Femdata: MeshPos _t0541 = extractFemItemN((mesh0518),InvalidBuild(MeshPos),);
        return _t0541;
      } else {
        int _t0542 = 1;
        cellInt051F = prim +0015 (cellInt051F, _t0542);
      }
    }
  }
  string _t0544 = "Bad end 2";
  string _t0545 = "\n";
  print (_t0544, _t0545);
  Femdata: MeshPos _t0546 = extractFemItemN((mesh0518),InvalidBuild(MeshPos),);
  return _t0546;
}
function Femdata: RefCell#1 refcell0547 (Femdata: Mesh arg00548)
{
  Femdata: RefCell _t0549 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg00548);
  return _t0549;
}
function Femdata: MeshCell[]#0 cells054A (Femdata: Mesh arg0054B)
{
  Femdata: MeshCell[] _t054C = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg0054B);
  return _t054C;
}
function Femdata: MeshCell[]#0 cells054D (Femdata: Mesh arg0054B)
{
  int _t054E = 0;
  int _t054F = extractFemItem(NumCell(Mesh), int, arg0054B);
  int[] _t0550 = prim $range01C3 (_t054E, _t054F);
  Femdata: MeshCell[] accum0553 = {};
  foreach i0551 in _t0550 {
    Femdata: MeshCell _t0552 = loadFem(MeshCell, arg0054B, i0551);
    accum0553 = prim @0010<Femdata: MeshCell> (accum0553, _t0552);
  }
  return accum0553;
}
function int#0 numCell0554 (Femdata: Mesh arg00548)
{
  int _t0555 = extractFemItem(NumCell(Mesh), int, arg00548);
  return _t0555;
}
function tensor[3,3,3,3]#0 mesh_t_transform_30556 (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t055A = femField(mesh0559,cell0558,field(3)[3],Transform,);
  field(3)[3,3] _t055B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t055A);
  field(3)[3,3,3] _t055C = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t055B);
  field(3)[3,3,3,3] _t055D = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t055C);
  tensor[3,3,3,3] _t055E = prim @00A5<#∞; %3; $[3,3,3,3]> (_t055D, pos0557);
  return _t055E;
}
function tensor[3,3,3]#0 mesh_t_transform_2055F (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t0560 = femField(mesh0559,cell0558,field(3)[3],Transform,);
  field(3)[3,3] _t0561 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0560);
  field(3)[3,3,3] _t0562 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0561);
  tensor[3,3,3] _t0563 = prim @00A5<#∞; %3; $[3,3,3]> (_t0562, pos0557);
  return _t0563;
}
function tensor[3,3]#0 mesh_t_transform_10564 (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t0565 = femField(mesh0559,cell0558,field(3)[3],Transform,);
  field(3)[3,3] _t0566 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0565);
  tensor[3,3] _t0567 = prim @00A5<#∞; %3; $[3,3]> (_t0566, pos0557);
  return _t0567;
}
function vec3#2 mesh_t_transform_00568 (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t0569 = femField(mesh0559,cell0558,field(3)[3],Transform,);
  vec3 _t056A = prim @00A5<#∞; %3; $[3]> (_t0569, pos0557);
  return _t056A;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse056B (vec3 pos056C, int cellInt056D, Femdata: Mesh mesh056E)
{
  real _t056F = 0.e0;
  real _t0570 = 0.e0;
  real _t0571 = 0.e0;
  xn0572 = [_t056F, _t0570, _t0571];
  field(3)[3] _t0573 = femField(mesh056E,cellInt056D,field(3)[3],Transform,);
  field(3)[3,3] _t0574 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0573);
  field(3)[3,3] _t0575 = prim inv015E<#∞; %3> (_t0574);
  real _t0576 = 0.e0;
  real _t0577 = 0.e0;
  real _t0578 = 0.e0;
  vec3 _t0579 = [_t0576, _t0577, _t0578];
  A057A = prim @00A5<#∞; %3; $[3,3]> (_t0575, _t0579);
  int _t057B = 0;
  int _t057C = 2;
  int[] _t057D = prim $range01C3 (_t057B, _t057C);
  foreach itter058B in _t057D {
    field(3)[3] _t057E = femField(mesh056E,cellInt056D,field(3)[3],Transform,);
    field(3)[3] _t057F = prim -002E<#∞; %3; $[3]> (_t057E, pos056C);
    field(3)[3] _t0580 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A057A, _t057F);
    delta0581 = prim @00A5<#∞; %3; $[3]> (_t0580, xn0572);
    xn0572 = prim -0026<$[3]> (xn0572, delta0581);
    real _t0582 = 0.1e-7;
    real _t0583 = 0.1e-7;
    real _t0584 = prim *0034 (_t0582, _t0583);
    real _t0585 = prim •00CE<$[3]; $[3]; $[]> (delta0581, delta0581);
    bool _t0586 = prim >=007E (_t0584, _t0585);
    if _t0586 {
      real _t0587 = 0.1e-8;
      bool _t0588 = extractFemItemN((mesh056E, xn0572, _t0587),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0588 {
        Femdata: MeshPos _t0589 = extractFemItemN((mesh056E, cellInt056D, xn0572, pos056C),AllBuild(MeshPos),);
        return _t0589;
      } else {
        Femdata: MeshPos _t058A = extractFemItemN((mesh056E),InvalidBuild(MeshPos),);
        return _t058A;
      }
    }
  }
  Femdata: MeshPos _t058C = extractFemItemN((mesh056E),InvalidBuild(MeshPos),);
  return _t058C;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos058D (Femdata: MeshPos pos058E)
{
  bool _t058F = extractFemItem(WorldTest(MeshPos), bool, pos058E);
  if _t058F {
    vec3 _t0590 = extractFemItem(RefPos(MeshPos), vec3, pos058E);
    int _t0591 = extractFemItem(CellIndex(MeshPos), int, pos058E);
    Femdata: Mesh _t0592 = extractFem(pos058E, Mesh);
    vec3 _t0593 = func mesh_t_transform_00568 (_t0590, _t0591, _t0592);
    Femdata: MeshPos _t0594 = extractFemItemN((pos058E, _t0593),NewWorld(MeshPos),);
    return _t0594;
  } else {
    return pos058E;
  }
}
function vec3#0 worldPos0595 (Femdata: MeshPos pos058E)
{
  vec3 _t0596 = extractFemItem(RefPos(MeshPos), vec3, pos058E);
  int _t0597 = extractFemItem(CellIndex(MeshPos), int, pos058E);
  Femdata: Mesh _t0598 = extractFem(pos058E, Mesh);
  vec3 _t0599 = func mesh_t_transform_00568 (_t0596, _t0597, _t0598);
  return _t0599;
}
function Femdata: MeshPos#0 $exitPos059A (Femdata: Mesh mesh059B, int cellId059C, vec3 refPos059D, vec3 dPos059E, real[2] time059F)
{
  int _t05A0 = -1;
  real _t05A1 = time059F[1];
  int _t05A2 = prim $r2i01B7 (_t05A1);
  int[2] _t05A4 = func nextCell405A3 (_t05A2, cellId059C, mesh059B);
  int _t05A5 = 0;
  int _t05A6 = prim $sub01C0<int; %2> (_t05A4, _t05A5);
  bool _t05A7 = prim !=0086 (_t05A0, _t05A6);
  if _t05A7 {
    string _t05A8 = "face ";
    real _t05A9 = time059F[1];
    int _t05AA = prim $r2i01B7 (_t05A9);
    string _t05AB = " to ";
    real _t05AC = time059F[1];
    int _t05AD = prim $r2i01B7 (_t05AC);
    int[2] _t05AE = func nextCell405A3 (_t05AD, cellId059C, mesh059B);
    int _t05AF = 1;
    int _t05B0 = prim $sub01C0<int; %2> (_t05AE, _t05AF);
    string _t05B1 = "\n";
    string _t05B2 = "got: ";
    real _t05B3 = 0.1e1;
    real _t05B4 = 0.e0;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.e0;
    vec4 _t05B7 = [_t05B3, _t05B4, _t05B5, _t05B6];
    real _t05B8 = 0.e0;
    real _t05B9 = 0.1e1;
    real _t05BA = 0.e0;
    real _t05BB = 0.e0;
    vec4 _t05BC = [_t05B8, _t05B9, _t05BA, _t05BB];
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.1e1;
    real _t05C0 = 0.e0;
    vec4 _t05C1 = [_t05BD, _t05BE, _t05BF, _t05C0];
    real _t05C2 = 0.e0;
    real _t05C3 = 0.e0;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.1e1;
    vec4 _t05C6 = [_t05C2, _t05C3, _t05C4, _t05C5];
    tensor[4,4] _t05C7 = [_t05B7, _t05BC, _t05C1, _t05C6];
    real _t05C8 = 0.1e1;
    real _t05C9 = 0.e0;
    real _t05CA = 0.e0;
    real _t05CB = 0.e0;
    vec4 _t05CC = [_t05C8, _t05C9, _t05CA, _t05CB];
    real _t05CD = 0.e0;
    real _t05CE = 0.1e1;
    real _t05CF = 0.e0;
    real _t05D0 = 0.e0;
    vec4 _t05D1 = [_t05CD, _t05CE, _t05CF, _t05D0];
    real _t05D2 = 0.e0;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.1e1;
    real _t05D5 = 0.1e1;
    vec4 _t05D6 = [_t05D2, _t05D3, _t05D4, _t05D5];
    real _t05D7 = 0.e0;
    real _t05D8 = 0.e0;
    real _t05D9 = 0.e0;
    real _t05DA = 0.1e1;
    vec4 _t05DB = [_t05D7, _t05D8, _t05D9, _t05DA];
    tensor[4,4] _t05DC = [_t05CC, _t05D1, _t05D6, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    real _t05DF = 0.e0;
    real _t05E0 = 0.e0;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.1e1;
    real _t05E5 = 0.e0;
    vec4 _t05E6 = [_t05E2, _t05E3, _t05E4, _t05E5];
    real _t05E7 = 0.1e1;
    real _t05E8 = -0.1e1;
    real _t05E9 = 0.e0;
    real _t05EA = -0.5e0;
    vec4 _t05EB = [_t05E7, _t05E8, _t05E9, _t05EA];
    real _t05EC = 0.e0;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    real _t05EF = 0.1e1;
    vec4 _t05F0 = [_t05EC, _t05ED, _t05EE, _t05EF];
    tensor[4,4] _t05F1 = [_t05E1, _t05E6, _t05EB, _t05F0];
    real _t05F2 = 0.e0;
    real _t05F3 = 0.e0;
    real _t05F4 = -0.1e1;
    real _t05F5 = 0.e0;
    vec4 _t05F6 = [_t05F2, _t05F3, _t05F4, _t05F5];
    real _t05F7 = 0.e0;
    real _t05F8 = 0.1e1;
    real _t05F9 = 0.e0;
    real _t05FA = 0.e0;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = -0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = -0.5e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.e0;
    real _t0603 = 0.e0;
    real _t0604 = 0.1e1;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    tensor[4,4] _t0606 = [_t05F6, _t05FB, _t0600, _t0605];
    real _t0607 = 0.e0;
    real _t0608 = -0.1e1;
    real _t0609 = 0.e0;
    real _t060A = 0.e0;
    vec4 _t060B = [_t0607, _t0608, _t0609, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = -0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = -0.1e1;
    real _t0613 = 0.e0;
    real _t0614 = -0.5e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.e0;
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    tensor[4,4] _t061B = [_t060B, _t0610, _t0615, _t061A];
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    real _t061F = 0.e0;
    vec4 _t0620 = [_t061C, _t061D, _t061E, _t061F];
    real _t0621 = 0.e0;
    real _t0622 = -0.1e1;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.1e1;
    real _t0627 = -0.1e1;
    real _t0628 = 0.e0;
    real _t0629 = -0.5e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.e0;
    real _t062D = 0.e0;
    real _t062E = 0.1e1;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    tensor[4,4] _t0630 = [_t0620, _t0625, _t062A, _t062F];
    tensor[4,4][6] _t0631 = {_t05C7, _t05DC, _t05F1, _t0606, _t061B, _t0630};
    real _t0632 = 0.1e1;
    real _t0633 = 0.e0;
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    real _t0637 = 0.e0;
    real _t0638 = 0.1e1;
    real _t0639 = 0.e0;
    real _t063A = 0.e0;
    vec4 _t063B = [_t0637, _t0638, _t0639, _t063A];
    real _t063C = 0.e0;
    real _t063D = 0.e0;
    real _t063E = 0.1e1;
    real _t063F = -0.1e1;
    vec4 _t0640 = [_t063C, _t063D, _t063E, _t063F];
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    real _t0643 = 0.e0;
    real _t0644 = 0.1e1;
    vec4 _t0645 = [_t0641, _t0642, _t0643, _t0644];
    tensor[4,4] _t0646 = [_t0636, _t063B, _t0640, _t0645];
    real _t0647 = 0.1e1;
    real _t0648 = 0.e0;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    vec4 _t064B = [_t0647, _t0648, _t0649, _t064A];
    real _t064C = 0.e0;
    real _t064D = 0.1e1;
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    vec4 _t0650 = [_t064C, _t064D, _t064E, _t064F];
    real _t0651 = 0.e0;
    real _t0652 = 0.e0;
    real _t0653 = 0.1e1;
    real _t0654 = 0.e0;
    vec4 _t0655 = [_t0651, _t0652, _t0653, _t0654];
    real _t0656 = 0.e0;
    real _t0657 = 0.e0;
    real _t0658 = 0.e0;
    real _t0659 = 0.1e1;
    vec4 _t065A = [_t0656, _t0657, _t0658, _t0659];
    tensor[4,4] _t065B = [_t064B, _t0650, _t0655, _t065A];
    real _t065C = 0.e0;
    real _t065D = 0.1e1;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.e0;
    real _t0663 = 0.1e1;
    real _t0664 = -0.1e1;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.1e1;
    real _t0667 = -0.1e1;
    real _t0668 = 0.e0;
    real _t0669 = -0.5e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.e0;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.e0;
    real _t0672 = 0.e0;
    real _t0673 = -0.1e1;
    real _t0674 = 0.1e1;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.1e1;
    real _t0678 = 0.e0;
    real _t0679 = 0.e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = 0.1e1;
    real _t067C = -0.1e1;
    real _t067D = 0.e0;
    real _t067E = -0.5e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.e0;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = 0.e0;
    real _t0687 = -0.1e1;
    real _t0688 = 0.e0;
    real _t0689 = 0.e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    real _t068D = -0.1e1;
    real _t068E = 0.1e1;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = 0.1e1;
    real _t0691 = -0.1e1;
    real _t0692 = 0.e0;
    real _t0693 = -0.5e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.e0;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = 0.e0;
    real _t069C = 0.e0;
    real _t069D = 0.1e1;
    real _t069E = -0.1e1;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = 0.e0;
    real _t06A1 = -0.1e1;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.1e1;
    real _t06A6 = -0.1e1;
    real _t06A7 = 0.e0;
    real _t06A8 = -0.5e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.e0;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][6] _t06B0 = {_t0646, _t065B, _t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.1e1;
    real _t06B2 = 0.e0;
    real _t06B3 = 0.1e1;
    real _t06B4 = 0.5e0;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.1e1;
    real _t06B7 = 0.e0;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.e0;
    real _t06BC = 0.1e1;
    real _t06BD = 0.e0;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.1e1;
    real _t06C9 = 0.5e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.1e1;
    real _t06CC = 0.e0;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.1e1;
    real _t06D2 = 0.e0;
    real _t06D3 = 0.1e1;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.1e1;
    real _t06DC = 0.e0;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = 0.e0;
    real _t06E1 = 0.1e1;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = -0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.1e1;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.e0;
    real _t06FB = 0.e0;
    real _t06FC = 0.1e1;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    real _t0705 = -0.1e1;
    real _t0706 = 0.e0;
    real _t0707 = 0.e0;
    real _t0708 = 0.e0;
    vec4 _t0709 = [_t0705, _t0706, _t0707, _t0708];
    real _t070A = 0.e0;
    real _t070B = -0.1e1;
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    vec4 _t070E = [_t070A, _t070B, _t070C, _t070D];
    real _t070F = 0.e0;
    real _t0710 = 0.e0;
    real _t0711 = 0.1e1;
    real _t0712 = 0.e0;
    vec4 _t0713 = [_t070F, _t0710, _t0711, _t0712];
    real _t0714 = 0.e0;
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.1e1;
    vec4 _t0718 = [_t0714, _t0715, _t0716, _t0717];
    tensor[4,4] _t0719 = [_t0709, _t070E, _t0713, _t0718];
    real _t071A = 0.e0;
    real _t071B = 0.1e1;
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    vec4 _t071E = [_t071A, _t071B, _t071C, _t071D];
    real _t071F = -0.1e1;
    real _t0720 = 0.e0;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    vec4 _t0723 = [_t071F, _t0720, _t0721, _t0722];
    real _t0724 = 0.e0;
    real _t0725 = 0.e0;
    real _t0726 = 0.1e1;
    real _t0727 = 0.e0;
    vec4 _t0728 = [_t0724, _t0725, _t0726, _t0727];
    real _t0729 = 0.e0;
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.1e1;
    vec4 _t072D = [_t0729, _t072A, _t072B, _t072C];
    tensor[4,4] _t072E = [_t071E, _t0723, _t0728, _t072D];
    tensor[4,4][6] _t072F = {_t06C5, _t06DA, _t06EF, _t0704, _t0719, _t072E};
    real _t0730 = 0.e0;
    real _t0731 = 0.1e1;
    real _t0732 = 0.1e1;
    real _t0733 = 0.5e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = -0.1e1;
    real _t073B = 0.e0;
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.e0;
    real _t0746 = 0.1e1;
    real _t0747 = 0.1e1;
    real _t0748 = 0.5e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.1e1;
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = -0.1e1;
    real _t0750 = 0.e0;
    real _t0751 = 0.e0;
    real _t0752 = 0.1e1;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    real _t075A = 0.e0;
    real _t075B = 0.1e1;
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    vec4 _t075E = [_t075A, _t075B, _t075C, _t075D];
    real _t075F = -0.1e1;
    real _t0760 = 0.e0;
    real _t0761 = 0.e0;
    real _t0762 = 0.e0;
    vec4 _t0763 = [_t075F, _t0760, _t0761, _t0762];
    real _t0764 = 0.e0;
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.e0;
    vec4 _t0768 = [_t0764, _t0765, _t0766, _t0767];
    real _t0769 = 0.e0;
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.1e1;
    vec4 _t076D = [_t0769, _t076A, _t076B, _t076C];
    tensor[4,4] _t076E = [_t075E, _t0763, _t0768, _t076D];
    real _t076F = 0.1e1;
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    vec4 _t0773 = [_t076F, _t0770, _t0771, _t0772];
    real _t0774 = 0.e0;
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    vec4 _t0778 = [_t0774, _t0775, _t0776, _t0777];
    real _t0779 = 0.e0;
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    vec4 _t077D = [_t0779, _t077A, _t077B, _t077C];
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.1e1;
    vec4 _t0782 = [_t077E, _t077F, _t0780, _t0781];
    tensor[4,4] _t0783 = [_t0773, _t0778, _t077D, _t0782];
    real _t0784 = 0.e0;
    real _t0785 = -0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    vec4 _t0788 = [_t0784, _t0785, _t0786, _t0787];
    real _t0789 = 0.1e1;
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = 0.e0;
    vec4 _t078D = [_t0789, _t078A, _t078B, _t078C];
    real _t078E = 0.e0;
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    vec4 _t0792 = [_t078E, _t078F, _t0790, _t0791];
    real _t0793 = 0.e0;
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.1e1;
    vec4 _t0797 = [_t0793, _t0794, _t0795, _t0796];
    tensor[4,4] _t0798 = [_t0788, _t078D, _t0792, _t0797];
    real _t0799 = -0.1e1;
    real _t079A = 0.e0;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    vec4 _t079D = [_t0799, _t079A, _t079B, _t079C];
    real _t079E = 0.e0;
    real _t079F = -0.1e1;
    real _t07A0 = 0.e0;
    real _t07A1 = 0.e0;
    vec4 _t07A2 = [_t079E, _t079F, _t07A0, _t07A1];
    real _t07A3 = 0.e0;
    real _t07A4 = 0.e0;
    real _t07A5 = 0.1e1;
    real _t07A6 = 0.e0;
    vec4 _t07A7 = [_t07A3, _t07A4, _t07A5, _t07A6];
    real _t07A8 = 0.e0;
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.1e1;
    vec4 _t07AC = [_t07A8, _t07A9, _t07AA, _t07AB];
    tensor[4,4] _t07AD = [_t079D, _t07A2, _t07A7, _t07AC];
    tensor[4,4][6] _t07AE = {_t0744, _t0759, _t076E, _t0783, _t0798, _t07AD};
    real _t07AF = -0.1e1;
    real _t07B0 = 0.e0;
    real _t07B1 = 0.1e1;
    real _t07B2 = 0.5e0;
    vec4 _t07B3 = [_t07AF, _t07B0, _t07B1, _t07B2];
    real _t07B4 = -0.1e1;
    real _t07B5 = 0.e0;
    real _t07B6 = 0.e0;
    real _t07B7 = 0.e0;
    vec4 _t07B8 = [_t07B4, _t07B5, _t07B6, _t07B7];
    real _t07B9 = 0.e0;
    real _t07BA = -0.1e1;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    vec4 _t07BD = [_t07B9, _t07BA, _t07BB, _t07BC];
    real _t07BE = 0.e0;
    real _t07BF = 0.e0;
    real _t07C0 = 0.e0;
    real _t07C1 = 0.1e1;
    vec4 _t07C2 = [_t07BE, _t07BF, _t07C0, _t07C1];
    tensor[4,4] _t07C3 = [_t07B3, _t07B8, _t07BD, _t07C2];
    real _t07C4 = -0.1e1;
    real _t07C5 = 0.e0;
    real _t07C6 = 0.1e1;
    real _t07C7 = 0.5e0;
    vec4 _t07C8 = [_t07C4, _t07C5, _t07C6, _t07C7];
    real _t07C9 = -0.1e1;
    real _t07CA = 0.e0;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    vec4 _t07CD = [_t07C9, _t07CA, _t07CB, _t07CC];
    real _t07CE = 0.e0;
    real _t07CF = -0.1e1;
    real _t07D0 = 0.e0;
    real _t07D1 = 0.1e1;
    vec4 _t07D2 = [_t07CE, _t07CF, _t07D0, _t07D1];
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    vec4 _t07D7 = [_t07D3, _t07D4, _t07D5, _t07D6];
    tensor[4,4] _t07D8 = [_t07C8, _t07CD, _t07D2, _t07D7];
    real _t07D9 = -0.1e1;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.e0;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    real _t07DE = 0.e0;
    real _t07DF = -0.1e1;
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    vec4 _t07E2 = [_t07DE, _t07DF, _t07E0, _t07E1];
    real _t07E3 = 0.e0;
    real _t07E4 = 0.e0;
    real _t07E5 = 0.1e1;
    real _t07E6 = 0.e0;
    vec4 _t07E7 = [_t07E3, _t07E4, _t07E5, _t07E6];
    real _t07E8 = 0.e0;
    real _t07E9 = 0.e0;
    real _t07EA = 0.e0;
    real _t07EB = 0.1e1;
    vec4 _t07EC = [_t07E8, _t07E9, _t07EA, _t07EB];
    tensor[4,4] _t07ED = [_t07DD, _t07E2, _t07E7, _t07EC];
    real _t07EE = 0.e0;
    real _t07EF = 0.1e1;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    real _t07F3 = -0.1e1;
    real _t07F4 = 0.e0;
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    vec4 _t07F7 = [_t07F3, _t07F4, _t07F5, _t07F6];
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    real _t07FA = 0.1e1;
    real _t07FB = 0.e0;
    vec4 _t07FC = [_t07F8, _t07F9, _t07FA, _t07FB];
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    real _t07FF = 0.e0;
    real _t0800 = 0.1e1;
    vec4 _t0801 = [_t07FD, _t07FE, _t07FF, _t0800];
    tensor[4,4] _t0802 = [_t07F2, _t07F7, _t07FC, _t0801];
    real _t0803 = 0.1e1;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.e0;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    real _t0808 = 0.e0;
    real _t0809 = 0.1e1;
    real _t080A = 0.e0;
    real _t080B = 0.e0;
    vec4 _t080C = [_t0808, _t0809, _t080A, _t080B];
    real _t080D = 0.e0;
    real _t080E = 0.e0;
    real _t080F = 0.1e1;
    real _t0810 = 0.e0;
    vec4 _t0811 = [_t080D, _t080E, _t080F, _t0810];
    real _t0812 = 0.e0;
    real _t0813 = 0.e0;
    real _t0814 = 0.e0;
    real _t0815 = 0.1e1;
    vec4 _t0816 = [_t0812, _t0813, _t0814, _t0815];
    tensor[4,4] _t0817 = [_t0807, _t080C, _t0811, _t0816];
    real _t0818 = 0.e0;
    real _t0819 = -0.1e1;
    real _t081A = 0.e0;
    real _t081B = 0.e0;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    real _t081D = 0.1e1;
    real _t081E = 0.e0;
    real _t081F = 0.e0;
    real _t0820 = 0.e0;
    vec4 _t0821 = [_t081D, _t081E, _t081F, _t0820];
    real _t0822 = 0.e0;
    real _t0823 = 0.e0;
    real _t0824 = 0.1e1;
    real _t0825 = 0.e0;
    vec4 _t0826 = [_t0822, _t0823, _t0824, _t0825];
    real _t0827 = 0.e0;
    real _t0828 = 0.e0;
    real _t0829 = 0.e0;
    real _t082A = 0.1e1;
    vec4 _t082B = [_t0827, _t0828, _t0829, _t082A];
    tensor[4,4] _t082C = [_t081C, _t0821, _t0826, _t082B];
    tensor[4,4][6] _t082D = {_t07C3, _t07D8, _t07ED, _t0802, _t0817, _t082C};
    real _t082E = 0.e0;
    real _t082F = -0.1e1;
    real _t0830 = 0.1e1;
    real _t0831 = 0.5e0;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    real _t0833 = 0.e0;
    real _t0834 = -0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    vec4 _t0837 = [_t0833, _t0834, _t0835, _t0836];
    real _t0838 = 0.1e1;
    real _t0839 = 0.e0;
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    vec4 _t083C = [_t0838, _t0839, _t083A, _t083B];
    real _t083D = 0.e0;
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    vec4 _t0841 = [_t083D, _t083E, _t083F, _t0840];
    tensor[4,4] _t0842 = [_t0832, _t0837, _t083C, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = -0.1e1;
    real _t0845 = 0.1e1;
    real _t0846 = 0.5e0;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    real _t0848 = 0.e0;
    real _t0849 = -0.1e1;
    real _t084A = 0.e0;
    real _t084B = 0.e0;
    vec4 _t084C = [_t0848, _t0849, _t084A, _t084B];
    real _t084D = 0.1e1;
    real _t084E = 0.e0;
    real _t084F = 0.e0;
    real _t0850 = 0.1e1;
    vec4 _t0851 = [_t084D, _t084E, _t084F, _t0850];
    real _t0852 = 0.e0;
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    vec4 _t0856 = [_t0852, _t0853, _t0854, _t0855];
    tensor[4,4] _t0857 = [_t0847, _t084C, _t0851, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = -0.1e1;
    real _t085A = 0.e0;
    real _t085B = 0.e0;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    real _t085D = 0.1e1;
    real _t085E = 0.e0;
    real _t085F = 0.e0;
    real _t0860 = 0.e0;
    vec4 _t0861 = [_t085D, _t085E, _t085F, _t0860];
    real _t0862 = 0.e0;
    real _t0863 = 0.e0;
    real _t0864 = 0.1e1;
    real _t0865 = 0.e0;
    vec4 _t0866 = [_t0862, _t0863, _t0864, _t0865];
    real _t0867 = 0.e0;
    real _t0868 = 0.e0;
    real _t0869 = 0.e0;
    real _t086A = 0.1e1;
    vec4 _t086B = [_t0867, _t0868, _t0869, _t086A];
    tensor[4,4] _t086C = [_t085C, _t0861, _t0866, _t086B];
    real _t086D = -0.1e1;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.e0;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    real _t0872 = 0.e0;
    real _t0873 = -0.1e1;
    real _t0874 = 0.e0;
    real _t0875 = 0.e0;
    vec4 _t0876 = [_t0872, _t0873, _t0874, _t0875];
    real _t0877 = 0.e0;
    real _t0878 = 0.e0;
    real _t0879 = 0.1e1;
    real _t087A = 0.e0;
    vec4 _t087B = [_t0877, _t0878, _t0879, _t087A];
    real _t087C = 0.e0;
    real _t087D = 0.e0;
    real _t087E = 0.e0;
    real _t087F = 0.1e1;
    vec4 _t0880 = [_t087C, _t087D, _t087E, _t087F];
    tensor[4,4] _t0881 = [_t0871, _t0876, _t087B, _t0880];
    real _t0882 = 0.e0;
    real _t0883 = 0.1e1;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    vec4 _t0886 = [_t0882, _t0883, _t0884, _t0885];
    real _t0887 = -0.1e1;
    real _t0888 = 0.e0;
    real _t0889 = 0.e0;
    real _t088A = 0.e0;
    vec4 _t088B = [_t0887, _t0888, _t0889, _t088A];
    real _t088C = 0.e0;
    real _t088D = 0.e0;
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    vec4 _t0890 = [_t088C, _t088D, _t088E, _t088F];
    real _t0891 = 0.e0;
    real _t0892 = 0.e0;
    real _t0893 = 0.e0;
    real _t0894 = 0.1e1;
    vec4 _t0895 = [_t0891, _t0892, _t0893, _t0894];
    tensor[4,4] _t0896 = [_t0886, _t088B, _t0890, _t0895];
    real _t0897 = 0.1e1;
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    vec4 _t089B = [_t0897, _t0898, _t0899, _t089A];
    real _t089C = 0.e0;
    real _t089D = 0.1e1;
    real _t089E = 0.e0;
    real _t089F = 0.e0;
    vec4 _t08A0 = [_t089C, _t089D, _t089E, _t089F];
    real _t08A1 = 0.e0;
    real _t08A2 = 0.e0;
    real _t08A3 = 0.1e1;
    real _t08A4 = 0.e0;
    vec4 _t08A5 = [_t08A1, _t08A2, _t08A3, _t08A4];
    real _t08A6 = 0.e0;
    real _t08A7 = 0.e0;
    real _t08A8 = 0.e0;
    real _t08A9 = 0.1e1;
    vec4 _t08AA = [_t08A6, _t08A7, _t08A8, _t08A9];
    tensor[4,4] _t08AB = [_t089B, _t08A0, _t08A5, _t08AA];
    tensor[4,4][6] _t08AC = {_t0842, _t0857, _t086C, _t0881, _t0896, _t08AB};
    tensor[4,4][6][6] _t08AD = {_t0631, _t06B0, _t072F, _t07AE, _t082D, _t08AC};
    real _t08AE = time059F[1];
    int _t08AF = prim $r2i01B7 (_t08AE);
    tensor[4,4][6] _t08B0 = prim $sub01C0<tensor[4,4][6]; %6> (_t08AD, _t08AF);
    real _t08B1 = time059F[1];
    int _t08B2 = prim $r2i01B7 (_t08B1);
    int[2] _t08B3 = func nextCell405A3 (_t08B2, cellId059C, mesh059B);
    int _t08B4 = 1;
    int _t08B5 = prim $sub01C0<int; %2> (_t08B3, _t08B4);
    tensor[4,4] _t08B6 = prim $sub01C0<tensor[4,4]; %6> (_t08B0, _t08B5);
    string _t08B7 = "\n";
    print (_t05A8, _t05AA, _t05AB, _t05B0, _t05B1, _t05B2, _t08B6, _t08B7);
    real _t08B8 = time059F[1];
    int _t08B9 = prim $r2i01B7 (_t08B8);
    int[2] _t08BA = func nextCell405A3 (_t08B9, cellId059C, mesh059B);
    int _t08BB = 0;
    int _t08BC = prim $sub01C0<int; %2> (_t08BA, _t08BB);
    real _t08BD = 0.1e1;
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.1e1;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.e0;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    real _t08C9 = 0.1e1;
    real _t08CA = 0.e0;
    vec4 _t08CB = [_t08C7, _t08C8, _t08C9, _t08CA];
    real _t08CC = 0.e0;
    real _t08CD = 0.e0;
    real _t08CE = 0.e0;
    real _t08CF = 0.1e1;
    vec4 _t08D0 = [_t08CC, _t08CD, _t08CE, _t08CF];
    tensor[4,4] _t08D1 = [_t08C1, _t08C6, _t08CB, _t08D0];
    real _t08D2 = 0.1e1;
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    vec4 _t08D6 = [_t08D2, _t08D3, _t08D4, _t08D5];
    real _t08D7 = 0.e0;
    real _t08D8 = 0.1e1;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    vec4 _t08DB = [_t08D7, _t08D8, _t08D9, _t08DA];
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    real _t08DE = 0.1e1;
    real _t08DF = 0.1e1;
    vec4 _t08E0 = [_t08DC, _t08DD, _t08DE, _t08DF];
    real _t08E1 = 0.e0;
    real _t08E2 = 0.e0;
    real _t08E3 = 0.e0;
    real _t08E4 = 0.1e1;
    vec4 _t08E5 = [_t08E1, _t08E2, _t08E3, _t08E4];
    tensor[4,4] _t08E6 = [_t08D6, _t08DB, _t08E0, _t08E5];
    real _t08E7 = 0.e0;
    real _t08E8 = 0.1e1;
    real _t08E9 = 0.e0;
    real _t08EA = 0.e0;
    vec4 _t08EB = [_t08E7, _t08E8, _t08E9, _t08EA];
    real _t08EC = 0.e0;
    real _t08ED = 0.e0;
    real _t08EE = 0.1e1;
    real _t08EF = 0.e0;
    vec4 _t08F0 = [_t08EC, _t08ED, _t08EE, _t08EF];
    real _t08F1 = 0.1e1;
    real _t08F2 = -0.1e1;
    real _t08F3 = 0.e0;
    real _t08F4 = -0.5e0;
    vec4 _t08F5 = [_t08F1, _t08F2, _t08F3, _t08F4];
    real _t08F6 = 0.e0;
    real _t08F7 = 0.e0;
    real _t08F8 = 0.e0;
    real _t08F9 = 0.1e1;
    vec4 _t08FA = [_t08F6, _t08F7, _t08F8, _t08F9];
    tensor[4,4] _t08FB = [_t08EB, _t08F0, _t08F5, _t08FA];
    real _t08FC = 0.e0;
    real _t08FD = 0.e0;
    real _t08FE = -0.1e1;
    real _t08FF = 0.e0;
    vec4 _t0900 = [_t08FC, _t08FD, _t08FE, _t08FF];
    real _t0901 = 0.e0;
    real _t0902 = 0.1e1;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    vec4 _t0905 = [_t0901, _t0902, _t0903, _t0904];
    real _t0906 = 0.1e1;
    real _t0907 = -0.1e1;
    real _t0908 = 0.e0;
    real _t0909 = -0.5e0;
    vec4 _t090A = [_t0906, _t0907, _t0908, _t0909];
    real _t090B = 0.e0;
    real _t090C = 0.e0;
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    vec4 _t090F = [_t090B, _t090C, _t090D, _t090E];
    tensor[4,4] _t0910 = [_t0900, _t0905, _t090A, _t090F];
    real _t0911 = 0.e0;
    real _t0912 = -0.1e1;
    real _t0913 = 0.e0;
    real _t0914 = 0.e0;
    vec4 _t0915 = [_t0911, _t0912, _t0913, _t0914];
    real _t0916 = 0.e0;
    real _t0917 = 0.e0;
    real _t0918 = -0.1e1;
    real _t0919 = 0.e0;
    vec4 _t091A = [_t0916, _t0917, _t0918, _t0919];
    real _t091B = 0.1e1;
    real _t091C = -0.1e1;
    real _t091D = 0.e0;
    real _t091E = -0.5e0;
    vec4 _t091F = [_t091B, _t091C, _t091D, _t091E];
    real _t0920 = 0.e0;
    real _t0921 = 0.e0;
    real _t0922 = 0.e0;
    real _t0923 = 0.1e1;
    vec4 _t0924 = [_t0920, _t0921, _t0922, _t0923];
    tensor[4,4] _t0925 = [_t0915, _t091A, _t091F, _t0924];
    real _t0926 = 0.e0;
    real _t0927 = 0.e0;
    real _t0928 = 0.1e1;
    real _t0929 = 0.e0;
    vec4 _t092A = [_t0926, _t0927, _t0928, _t0929];
    real _t092B = 0.e0;
    real _t092C = -0.1e1;
    real _t092D = 0.e0;
    real _t092E = 0.e0;
    vec4 _t092F = [_t092B, _t092C, _t092D, _t092E];
    real _t0930 = 0.1e1;
    real _t0931 = -0.1e1;
    real _t0932 = 0.e0;
    real _t0933 = -0.5e0;
    vec4 _t0934 = [_t0930, _t0931, _t0932, _t0933];
    real _t0935 = 0.e0;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    real _t0938 = 0.1e1;
    vec4 _t0939 = [_t0935, _t0936, _t0937, _t0938];
    tensor[4,4] _t093A = [_t092A, _t092F, _t0934, _t0939];
    tensor[4,4][6] _t093B = {_t08D1, _t08E6, _t08FB, _t0910, _t0925, _t093A};
    real _t093C = 0.1e1;
    real _t093D = 0.e0;
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    vec4 _t0940 = [_t093C, _t093D, _t093E, _t093F];
    real _t0941 = 0.e0;
    real _t0942 = 0.1e1;
    real _t0943 = 0.e0;
    real _t0944 = 0.e0;
    vec4 _t0945 = [_t0941, _t0942, _t0943, _t0944];
    real _t0946 = 0.e0;
    real _t0947 = 0.e0;
    real _t0948 = 0.1e1;
    real _t0949 = -0.1e1;
    vec4 _t094A = [_t0946, _t0947, _t0948, _t0949];
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    real _t094D = 0.e0;
    real _t094E = 0.1e1;
    vec4 _t094F = [_t094B, _t094C, _t094D, _t094E];
    tensor[4,4] _t0950 = [_t0940, _t0945, _t094A, _t094F];
    real _t0951 = 0.1e1;
    real _t0952 = 0.e0;
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    vec4 _t0955 = [_t0951, _t0952, _t0953, _t0954];
    real _t0956 = 0.e0;
    real _t0957 = 0.1e1;
    real _t0958 = 0.e0;
    real _t0959 = 0.e0;
    vec4 _t095A = [_t0956, _t0957, _t0958, _t0959];
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    real _t095D = 0.1e1;
    real _t095E = 0.e0;
    vec4 _t095F = [_t095B, _t095C, _t095D, _t095E];
    real _t0960 = 0.e0;
    real _t0961 = 0.e0;
    real _t0962 = 0.e0;
    real _t0963 = 0.1e1;
    vec4 _t0964 = [_t0960, _t0961, _t0962, _t0963];
    tensor[4,4] _t0965 = [_t0955, _t095A, _t095F, _t0964];
    real _t0966 = 0.e0;
    real _t0967 = 0.1e1;
    real _t0968 = 0.e0;
    real _t0969 = 0.e0;
    vec4 _t096A = [_t0966, _t0967, _t0968, _t0969];
    real _t096B = 0.e0;
    real _t096C = 0.e0;
    real _t096D = 0.1e1;
    real _t096E = -0.1e1;
    vec4 _t096F = [_t096B, _t096C, _t096D, _t096E];
    real _t0970 = 0.1e1;
    real _t0971 = -0.1e1;
    real _t0972 = 0.e0;
    real _t0973 = -0.5e0;
    vec4 _t0974 = [_t0970, _t0971, _t0972, _t0973];
    real _t0975 = 0.e0;
    real _t0976 = 0.e0;
    real _t0977 = 0.e0;
    real _t0978 = 0.1e1;
    vec4 _t0979 = [_t0975, _t0976, _t0977, _t0978];
    tensor[4,4] _t097A = [_t096A, _t096F, _t0974, _t0979];
    real _t097B = 0.e0;
    real _t097C = 0.e0;
    real _t097D = -0.1e1;
    real _t097E = 0.1e1;
    vec4 _t097F = [_t097B, _t097C, _t097D, _t097E];
    real _t0980 = 0.e0;
    real _t0981 = 0.1e1;
    real _t0982 = 0.e0;
    real _t0983 = 0.e0;
    vec4 _t0984 = [_t0980, _t0981, _t0982, _t0983];
    real _t0985 = 0.1e1;
    real _t0986 = -0.1e1;
    real _t0987 = 0.e0;
    real _t0988 = -0.5e0;
    vec4 _t0989 = [_t0985, _t0986, _t0987, _t0988];
    real _t098A = 0.e0;
    real _t098B = 0.e0;
    real _t098C = 0.e0;
    real _t098D = 0.1e1;
    vec4 _t098E = [_t098A, _t098B, _t098C, _t098D];
    tensor[4,4] _t098F = [_t097F, _t0984, _t0989, _t098E];
    real _t0990 = 0.e0;
    real _t0991 = -0.1e1;
    real _t0992 = 0.e0;
    real _t0993 = 0.e0;
    vec4 _t0994 = [_t0990, _t0991, _t0992, _t0993];
    real _t0995 = 0.e0;
    real _t0996 = 0.e0;
    real _t0997 = -0.1e1;
    real _t0998 = 0.1e1;
    vec4 _t0999 = [_t0995, _t0996, _t0997, _t0998];
    real _t099A = 0.1e1;
    real _t099B = -0.1e1;
    real _t099C = 0.e0;
    real _t099D = -0.5e0;
    vec4 _t099E = [_t099A, _t099B, _t099C, _t099D];
    real _t099F = 0.e0;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    real _t09A2 = 0.1e1;
    vec4 _t09A3 = [_t099F, _t09A0, _t09A1, _t09A2];
    tensor[4,4] _t09A4 = [_t0994, _t0999, _t099E, _t09A3];
    real _t09A5 = 0.e0;
    real _t09A6 = 0.e0;
    real _t09A7 = 0.1e1;
    real _t09A8 = -0.1e1;
    vec4 _t09A9 = [_t09A5, _t09A6, _t09A7, _t09A8];
    real _t09AA = 0.e0;
    real _t09AB = -0.1e1;
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    vec4 _t09AE = [_t09AA, _t09AB, _t09AC, _t09AD];
    real _t09AF = 0.1e1;
    real _t09B0 = -0.1e1;
    real _t09B1 = 0.e0;
    real _t09B2 = -0.5e0;
    vec4 _t09B3 = [_t09AF, _t09B0, _t09B1, _t09B2];
    real _t09B4 = 0.e0;
    real _t09B5 = 0.e0;
    real _t09B6 = 0.e0;
    real _t09B7 = 0.1e1;
    vec4 _t09B8 = [_t09B4, _t09B5, _t09B6, _t09B7];
    tensor[4,4] _t09B9 = [_t09A9, _t09AE, _t09B3, _t09B8];
    tensor[4,4][6] _t09BA = {_t0950, _t0965, _t097A, _t098F, _t09A4, _t09B9};
    real _t09BB = 0.1e1;
    real _t09BC = 0.e0;
    real _t09BD = 0.1e1;
    real _t09BE = 0.5e0;
    vec4 _t09BF = [_t09BB, _t09BC, _t09BD, _t09BE];
    real _t09C0 = 0.1e1;
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.e0;
    vec4 _t09C4 = [_t09C0, _t09C1, _t09C2, _t09C3];
    real _t09C5 = 0.e0;
    real _t09C6 = 0.1e1;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    vec4 _t09C9 = [_t09C5, _t09C6, _t09C7, _t09C8];
    real _t09CA = 0.e0;
    real _t09CB = 0.e0;
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    vec4 _t09CE = [_t09CA, _t09CB, _t09CC, _t09CD];
    tensor[4,4] _t09CF = [_t09BF, _t09C4, _t09C9, _t09CE];
    real _t09D0 = 0.1e1;
    real _t09D1 = 0.e0;
    real _t09D2 = 0.1e1;
    real _t09D3 = 0.5e0;
    vec4 _t09D4 = [_t09D0, _t09D1, _t09D2, _t09D3];
    real _t09D5 = 0.1e1;
    real _t09D6 = 0.e0;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    vec4 _t09D9 = [_t09D5, _t09D6, _t09D7, _t09D8];
    real _t09DA = 0.e0;
    real _t09DB = 0.1e1;
    real _t09DC = 0.e0;
    real _t09DD = 0.1e1;
    vec4 _t09DE = [_t09DA, _t09DB, _t09DC, _t09DD];
    real _t09DF = 0.e0;
    real _t09E0 = 0.e0;
    real _t09E1 = 0.e0;
    real _t09E2 = 0.1e1;
    vec4 _t09E3 = [_t09DF, _t09E0, _t09E1, _t09E2];
    tensor[4,4] _t09E4 = [_t09D4, _t09D9, _t09DE, _t09E3];
    real _t09E5 = 0.1e1;
    real _t09E6 = 0.e0;
    real _t09E7 = 0.e0;
    real _t09E8 = 0.e0;
    vec4 _t09E9 = [_t09E5, _t09E6, _t09E7, _t09E8];
    real _t09EA = 0.e0;
    real _t09EB = 0.1e1;
    real _t09EC = 0.e0;
    real _t09ED = 0.e0;
    vec4 _t09EE = [_t09EA, _t09EB, _t09EC, _t09ED];
    real _t09EF = 0.e0;
    real _t09F0 = 0.e0;
    real _t09F1 = 0.1e1;
    real _t09F2 = 0.e0;
    vec4 _t09F3 = [_t09EF, _t09F0, _t09F1, _t09F2];
    real _t09F4 = 0.e0;
    real _t09F5 = 0.e0;
    real _t09F6 = 0.e0;
    real _t09F7 = 0.1e1;
    vec4 _t09F8 = [_t09F4, _t09F5, _t09F6, _t09F7];
    tensor[4,4] _t09F9 = [_t09E9, _t09EE, _t09F3, _t09F8];
    real _t09FA = 0.e0;
    real _t09FB = -0.1e1;
    real _t09FC = 0.e0;
    real _t09FD = 0.e0;
    vec4 _t09FE = [_t09FA, _t09FB, _t09FC, _t09FD];
    real _t09FF = 0.1e1;
    real _t0A00 = 0.e0;
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    vec4 _t0A03 = [_t09FF, _t0A00, _t0A01, _t0A02];
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    real _t0A06 = 0.1e1;
    real _t0A07 = 0.e0;
    vec4 _t0A08 = [_t0A04, _t0A05, _t0A06, _t0A07];
    real _t0A09 = 0.e0;
    real _t0A0A = 0.e0;
    real _t0A0B = 0.e0;
    real _t0A0C = 0.1e1;
    vec4 _t0A0D = [_t0A09, _t0A0A, _t0A0B, _t0A0C];
    tensor[4,4] _t0A0E = [_t09FE, _t0A03, _t0A08, _t0A0D];
    real _t0A0F = -0.1e1;
    real _t0A10 = 0.e0;
    real _t0A11 = 0.e0;
    real _t0A12 = 0.e0;
    vec4 _t0A13 = [_t0A0F, _t0A10, _t0A11, _t0A12];
    real _t0A14 = 0.e0;
    real _t0A15 = -0.1e1;
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    vec4 _t0A18 = [_t0A14, _t0A15, _t0A16, _t0A17];
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    real _t0A1B = 0.1e1;
    real _t0A1C = 0.e0;
    vec4 _t0A1D = [_t0A19, _t0A1A, _t0A1B, _t0A1C];
    real _t0A1E = 0.e0;
    real _t0A1F = 0.e0;
    real _t0A20 = 0.e0;
    real _t0A21 = 0.1e1;
    vec4 _t0A22 = [_t0A1E, _t0A1F, _t0A20, _t0A21];
    tensor[4,4] _t0A23 = [_t0A13, _t0A18, _t0A1D, _t0A22];
    real _t0A24 = 0.e0;
    real _t0A25 = 0.1e1;
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    vec4 _t0A28 = [_t0A24, _t0A25, _t0A26, _t0A27];
    real _t0A29 = -0.1e1;
    real _t0A2A = 0.e0;
    real _t0A2B = 0.e0;
    real _t0A2C = 0.e0;
    vec4 _t0A2D = [_t0A29, _t0A2A, _t0A2B, _t0A2C];
    real _t0A2E = 0.e0;
    real _t0A2F = 0.e0;
    real _t0A30 = 0.1e1;
    real _t0A31 = 0.e0;
    vec4 _t0A32 = [_t0A2E, _t0A2F, _t0A30, _t0A31];
    real _t0A33 = 0.e0;
    real _t0A34 = 0.e0;
    real _t0A35 = 0.e0;
    real _t0A36 = 0.1e1;
    vec4 _t0A37 = [_t0A33, _t0A34, _t0A35, _t0A36];
    tensor[4,4] _t0A38 = [_t0A28, _t0A2D, _t0A32, _t0A37];
    tensor[4,4][6] _t0A39 = {_t09CF, _t09E4, _t09F9, _t0A0E, _t0A23, _t0A38};
    real _t0A3A = 0.e0;
    real _t0A3B = 0.1e1;
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.5e0;
    vec4 _t0A3E = [_t0A3A, _t0A3B, _t0A3C, _t0A3D];
    real _t0A3F = 0.e0;
    real _t0A40 = 0.1e1;
    real _t0A41 = 0.e0;
    real _t0A42 = 0.e0;
    vec4 _t0A43 = [_t0A3F, _t0A40, _t0A41, _t0A42];
    real _t0A44 = -0.1e1;
    real _t0A45 = 0.e0;
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    vec4 _t0A48 = [_t0A44, _t0A45, _t0A46, _t0A47];
    real _t0A49 = 0.e0;
    real _t0A4A = 0.e0;
    real _t0A4B = 0.e0;
    real _t0A4C = 0.1e1;
    vec4 _t0A4D = [_t0A49, _t0A4A, _t0A4B, _t0A4C];
    tensor[4,4] _t0A4E = [_t0A3E, _t0A43, _t0A48, _t0A4D];
    real _t0A4F = 0.e0;
    real _t0A50 = 0.1e1;
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.5e0;
    vec4 _t0A53 = [_t0A4F, _t0A50, _t0A51, _t0A52];
    real _t0A54 = 0.e0;
    real _t0A55 = 0.1e1;
    real _t0A56 = 0.e0;
    real _t0A57 = 0.e0;
    vec4 _t0A58 = [_t0A54, _t0A55, _t0A56, _t0A57];
    real _t0A59 = -0.1e1;
    real _t0A5A = 0.e0;
    real _t0A5B = 0.e0;
    real _t0A5C = 0.1e1;
    vec4 _t0A5D = [_t0A59, _t0A5A, _t0A5B, _t0A5C];
    real _t0A5E = 0.e0;
    real _t0A5F = 0.e0;
    real _t0A60 = 0.e0;
    real _t0A61 = 0.1e1;
    vec4 _t0A62 = [_t0A5E, _t0A5F, _t0A60, _t0A61];
    tensor[4,4] _t0A63 = [_t0A53, _t0A58, _t0A5D, _t0A62];
    real _t0A64 = 0.e0;
    real _t0A65 = 0.1e1;
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    vec4 _t0A68 = [_t0A64, _t0A65, _t0A66, _t0A67];
    real _t0A69 = -0.1e1;
    real _t0A6A = 0.e0;
    real _t0A6B = 0.e0;
    real _t0A6C = 0.e0;
    vec4 _t0A6D = [_t0A69, _t0A6A, _t0A6B, _t0A6C];
    real _t0A6E = 0.e0;
    real _t0A6F = 0.e0;
    real _t0A70 = 0.1e1;
    real _t0A71 = 0.e0;
    vec4 _t0A72 = [_t0A6E, _t0A6F, _t0A70, _t0A71];
    real _t0A73 = 0.e0;
    real _t0A74 = 0.e0;
    real _t0A75 = 0.e0;
    real _t0A76 = 0.1e1;
    vec4 _t0A77 = [_t0A73, _t0A74, _t0A75, _t0A76];
    tensor[4,4] _t0A78 = [_t0A68, _t0A6D, _t0A72, _t0A77];
    real _t0A79 = 0.1e1;
    real _t0A7A = 0.e0;
    real _t0A7B = 0.e0;
    real _t0A7C = 0.e0;
    vec4 _t0A7D = [_t0A79, _t0A7A, _t0A7B, _t0A7C];
    real _t0A7E = 0.e0;
    real _t0A7F = 0.1e1;
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    vec4 _t0A82 = [_t0A7E, _t0A7F, _t0A80, _t0A81];
    real _t0A83 = 0.e0;
    real _t0A84 = 0.e0;
    real _t0A85 = 0.1e1;
    real _t0A86 = 0.e0;
    vec4 _t0A87 = [_t0A83, _t0A84, _t0A85, _t0A86];
    real _t0A88 = 0.e0;
    real _t0A89 = 0.e0;
    real _t0A8A = 0.e0;
    real _t0A8B = 0.1e1;
    vec4 _t0A8C = [_t0A88, _t0A89, _t0A8A, _t0A8B];
    tensor[4,4] _t0A8D = [_t0A7D, _t0A82, _t0A87, _t0A8C];
    real _t0A8E = 0.e0;
    real _t0A8F = -0.1e1;
    real _t0A90 = 0.e0;
    real _t0A91 = 0.e0;
    vec4 _t0A92 = [_t0A8E, _t0A8F, _t0A90, _t0A91];
    real _t0A93 = 0.1e1;
    real _t0A94 = 0.e0;
    real _t0A95 = 0.e0;
    real _t0A96 = 0.e0;
    vec4 _t0A97 = [_t0A93, _t0A94, _t0A95, _t0A96];
    real _t0A98 = 0.e0;
    real _t0A99 = 0.e0;
    real _t0A9A = 0.1e1;
    real _t0A9B = 0.e0;
    vec4 _t0A9C = [_t0A98, _t0A99, _t0A9A, _t0A9B];
    real _t0A9D = 0.e0;
    real _t0A9E = 0.e0;
    real _t0A9F = 0.e0;
    real _t0AA0 = 0.1e1;
    vec4 _t0AA1 = [_t0A9D, _t0A9E, _t0A9F, _t0AA0];
    tensor[4,4] _t0AA2 = [_t0A92, _t0A97, _t0A9C, _t0AA1];
    real _t0AA3 = -0.1e1;
    real _t0AA4 = 0.e0;
    real _t0AA5 = 0.e0;
    real _t0AA6 = 0.e0;
    vec4 _t0AA7 = [_t0AA3, _t0AA4, _t0AA5, _t0AA6];
    real _t0AA8 = 0.e0;
    real _t0AA9 = -0.1e1;
    real _t0AAA = 0.e0;
    real _t0AAB = 0.e0;
    vec4 _t0AAC = [_t0AA8, _t0AA9, _t0AAA, _t0AAB];
    real _t0AAD = 0.e0;
    real _t0AAE = 0.e0;
    real _t0AAF = 0.1e1;
    real _t0AB0 = 0.e0;
    vec4 _t0AB1 = [_t0AAD, _t0AAE, _t0AAF, _t0AB0];
    real _t0AB2 = 0.e0;
    real _t0AB3 = 0.e0;
    real _t0AB4 = 0.e0;
    real _t0AB5 = 0.1e1;
    vec4 _t0AB6 = [_t0AB2, _t0AB3, _t0AB4, _t0AB5];
    tensor[4,4] _t0AB7 = [_t0AA7, _t0AAC, _t0AB1, _t0AB6];
    tensor[4,4][6] _t0AB8 = {_t0A4E, _t0A63, _t0A78, _t0A8D, _t0AA2, _t0AB7};
    real _t0AB9 = -0.1e1;
    real _t0ABA = 0.e0;
    real _t0ABB = 0.1e1;
    real _t0ABC = 0.5e0;
    vec4 _t0ABD = [_t0AB9, _t0ABA, _t0ABB, _t0ABC];
    real _t0ABE = -0.1e1;
    real _t0ABF = 0.e0;
    real _t0AC0 = 0.e0;
    real _t0AC1 = 0.e0;
    vec4 _t0AC2 = [_t0ABE, _t0ABF, _t0AC0, _t0AC1];
    real _t0AC3 = 0.e0;
    real _t0AC4 = -0.1e1;
    real _t0AC5 = 0.e0;
    real _t0AC6 = 0.e0;
    vec4 _t0AC7 = [_t0AC3, _t0AC4, _t0AC5, _t0AC6];
    real _t0AC8 = 0.e0;
    real _t0AC9 = 0.e0;
    real _t0ACA = 0.e0;
    real _t0ACB = 0.1e1;
    vec4 _t0ACC = [_t0AC8, _t0AC9, _t0ACA, _t0ACB];
    tensor[4,4] _t0ACD = [_t0ABD, _t0AC2, _t0AC7, _t0ACC];
    real _t0ACE = -0.1e1;
    real _t0ACF = 0.e0;
    real _t0AD0 = 0.1e1;
    real _t0AD1 = 0.5e0;
    vec4 _t0AD2 = [_t0ACE, _t0ACF, _t0AD0, _t0AD1];
    real _t0AD3 = -0.1e1;
    real _t0AD4 = 0.e0;
    real _t0AD5 = 0.e0;
    real _t0AD6 = 0.e0;
    vec4 _t0AD7 = [_t0AD3, _t0AD4, _t0AD5, _t0AD6];
    real _t0AD8 = 0.e0;
    real _t0AD9 = -0.1e1;
    real _t0ADA = 0.e0;
    real _t0ADB = 0.1e1;
    vec4 _t0ADC = [_t0AD8, _t0AD9, _t0ADA, _t0ADB];
    real _t0ADD = 0.e0;
    real _t0ADE = 0.e0;
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.1e1;
    vec4 _t0AE1 = [_t0ADD, _t0ADE, _t0ADF, _t0AE0];
    tensor[4,4] _t0AE2 = [_t0AD2, _t0AD7, _t0ADC, _t0AE1];
    real _t0AE3 = -0.1e1;
    real _t0AE4 = 0.e0;
    real _t0AE5 = 0.e0;
    real _t0AE6 = 0.e0;
    vec4 _t0AE7 = [_t0AE3, _t0AE4, _t0AE5, _t0AE6];
    real _t0AE8 = 0.e0;
    real _t0AE9 = -0.1e1;
    real _t0AEA = 0.e0;
    real _t0AEB = 0.e0;
    vec4 _t0AEC = [_t0AE8, _t0AE9, _t0AEA, _t0AEB];
    real _t0AED = 0.e0;
    real _t0AEE = 0.e0;
    real _t0AEF = 0.1e1;
    real _t0AF0 = 0.e0;
    vec4 _t0AF1 = [_t0AED, _t0AEE, _t0AEF, _t0AF0];
    real _t0AF2 = 0.e0;
    real _t0AF3 = 0.e0;
    real _t0AF4 = 0.e0;
    real _t0AF5 = 0.1e1;
    vec4 _t0AF6 = [_t0AF2, _t0AF3, _t0AF4, _t0AF5];
    tensor[4,4] _t0AF7 = [_t0AE7, _t0AEC, _t0AF1, _t0AF6];
    real _t0AF8 = 0.e0;
    real _t0AF9 = 0.1e1;
    real _t0AFA = 0.e0;
    real _t0AFB = 0.e0;
    vec4 _t0AFC = [_t0AF8, _t0AF9, _t0AFA, _t0AFB];
    real _t0AFD = -0.1e1;
    real _t0AFE = 0.e0;
    real _t0AFF = 0.e0;
    real _t0B00 = 0.e0;
    vec4 _t0B01 = [_t0AFD, _t0AFE, _t0AFF, _t0B00];
    real _t0B02 = 0.e0;
    real _t0B03 = 0.e0;
    real _t0B04 = 0.1e1;
    real _t0B05 = 0.e0;
    vec4 _t0B06 = [_t0B02, _t0B03, _t0B04, _t0B05];
    real _t0B07 = 0.e0;
    real _t0B08 = 0.e0;
    real _t0B09 = 0.e0;
    real _t0B0A = 0.1e1;
    vec4 _t0B0B = [_t0B07, _t0B08, _t0B09, _t0B0A];
    tensor[4,4] _t0B0C = [_t0AFC, _t0B01, _t0B06, _t0B0B];
    real _t0B0D = 0.1e1;
    real _t0B0E = 0.e0;
    real _t0B0F = 0.e0;
    real _t0B10 = 0.e0;
    vec4 _t0B11 = [_t0B0D, _t0B0E, _t0B0F, _t0B10];
    real _t0B12 = 0.e0;
    real _t0B13 = 0.1e1;
    real _t0B14 = 0.e0;
    real _t0B15 = 0.e0;
    vec4 _t0B16 = [_t0B12, _t0B13, _t0B14, _t0B15];
    real _t0B17 = 0.e0;
    real _t0B18 = 0.e0;
    real _t0B19 = 0.1e1;
    real _t0B1A = 0.e0;
    vec4 _t0B1B = [_t0B17, _t0B18, _t0B19, _t0B1A];
    real _t0B1C = 0.e0;
    real _t0B1D = 0.e0;
    real _t0B1E = 0.e0;
    real _t0B1F = 0.1e1;
    vec4 _t0B20 = [_t0B1C, _t0B1D, _t0B1E, _t0B1F];
    tensor[4,4] _t0B21 = [_t0B11, _t0B16, _t0B1B, _t0B20];
    real _t0B22 = 0.e0;
    real _t0B23 = -0.1e1;
    real _t0B24 = 0.e0;
    real _t0B25 = 0.e0;
    vec4 _t0B26 = [_t0B22, _t0B23, _t0B24, _t0B25];
    real _t0B27 = 0.1e1;
    real _t0B28 = 0.e0;
    real _t0B29 = 0.e0;
    real _t0B2A = 0.e0;
    vec4 _t0B2B = [_t0B27, _t0B28, _t0B29, _t0B2A];
    real _t0B2C = 0.e0;
    real _t0B2D = 0.e0;
    real _t0B2E = 0.1e1;
    real _t0B2F = 0.e0;
    vec4 _t0B30 = [_t0B2C, _t0B2D, _t0B2E, _t0B2F];
    real _t0B31 = 0.e0;
    real _t0B32 = 0.e0;
    real _t0B33 = 0.e0;
    real _t0B34 = 0.1e1;
    vec4 _t0B35 = [_t0B31, _t0B32, _t0B33, _t0B34];
    tensor[4,4] _t0B36 = [_t0B26, _t0B2B, _t0B30, _t0B35];
    tensor[4,4][6] _t0B37 = {_t0ACD, _t0AE2, _t0AF7, _t0B0C, _t0B21, _t0B36};
    real _t0B38 = 0.e0;
    real _t0B39 = -0.1e1;
    real _t0B3A = 0.1e1;
    real _t0B3B = 0.5e0;
    vec4 _t0B3C = [_t0B38, _t0B39, _t0B3A, _t0B3B];
    real _t0B3D = 0.e0;
    real _t0B3E = -0.1e1;
    real _t0B3F = 0.e0;
    real _t0B40 = 0.e0;
    vec4 _t0B41 = [_t0B3D, _t0B3E, _t0B3F, _t0B40];
    real _t0B42 = 0.1e1;
    real _t0B43 = 0.e0;
    real _t0B44 = 0.e0;
    real _t0B45 = 0.e0;
    vec4 _t0B46 = [_t0B42, _t0B43, _t0B44, _t0B45];
    real _t0B47 = 0.e0;
    real _t0B48 = 0.e0;
    real _t0B49 = 0.e0;
    real _t0B4A = 0.1e1;
    vec4 _t0B4B = [_t0B47, _t0B48, _t0B49, _t0B4A];
    tensor[4,4] _t0B4C = [_t0B3C, _t0B41, _t0B46, _t0B4B];
    real _t0B4D = 0.e0;
    real _t0B4E = -0.1e1;
    real _t0B4F = 0.1e1;
    real _t0B50 = 0.5e0;
    vec4 _t0B51 = [_t0B4D, _t0B4E, _t0B4F, _t0B50];
    real _t0B52 = 0.e0;
    real _t0B53 = -0.1e1;
    real _t0B54 = 0.e0;
    real _t0B55 = 0.e0;
    vec4 _t0B56 = [_t0B52, _t0B53, _t0B54, _t0B55];
    real _t0B57 = 0.1e1;
    real _t0B58 = 0.e0;
    real _t0B59 = 0.e0;
    real _t0B5A = 0.1e1;
    vec4 _t0B5B = [_t0B57, _t0B58, _t0B59, _t0B5A];
    real _t0B5C = 0.e0;
    real _t0B5D = 0.e0;
    real _t0B5E = 0.e0;
    real _t0B5F = 0.1e1;
    vec4 _t0B60 = [_t0B5C, _t0B5D, _t0B5E, _t0B5F];
    tensor[4,4] _t0B61 = [_t0B51, _t0B56, _t0B5B, _t0B60];
    real _t0B62 = 0.e0;
    real _t0B63 = -0.1e1;
    real _t0B64 = 0.e0;
    real _t0B65 = 0.e0;
    vec4 _t0B66 = [_t0B62, _t0B63, _t0B64, _t0B65];
    real _t0B67 = 0.1e1;
    real _t0B68 = 0.e0;
    real _t0B69 = 0.e0;
    real _t0B6A = 0.e0;
    vec4 _t0B6B = [_t0B67, _t0B68, _t0B69, _t0B6A];
    real _t0B6C = 0.e0;
    real _t0B6D = 0.e0;
    real _t0B6E = 0.1e1;
    real _t0B6F = 0.e0;
    vec4 _t0B70 = [_t0B6C, _t0B6D, _t0B6E, _t0B6F];
    real _t0B71 = 0.e0;
    real _t0B72 = 0.e0;
    real _t0B73 = 0.e0;
    real _t0B74 = 0.1e1;
    vec4 _t0B75 = [_t0B71, _t0B72, _t0B73, _t0B74];
    tensor[4,4] _t0B76 = [_t0B66, _t0B6B, _t0B70, _t0B75];
    real _t0B77 = -0.1e1;
    real _t0B78 = 0.e0;
    real _t0B79 = 0.e0;
    real _t0B7A = 0.e0;
    vec4 _t0B7B = [_t0B77, _t0B78, _t0B79, _t0B7A];
    real _t0B7C = 0.e0;
    real _t0B7D = -0.1e1;
    real _t0B7E = 0.e0;
    real _t0B7F = 0.e0;
    vec4 _t0B80 = [_t0B7C, _t0B7D, _t0B7E, _t0B7F];
    real _t0B81 = 0.e0;
    real _t0B82 = 0.e0;
    real _t0B83 = 0.1e1;
    real _t0B84 = 0.e0;
    vec4 _t0B85 = [_t0B81, _t0B82, _t0B83, _t0B84];
    real _t0B86 = 0.e0;
    real _t0B87 = 0.e0;
    real _t0B88 = 0.e0;
    real _t0B89 = 0.1e1;
    vec4 _t0B8A = [_t0B86, _t0B87, _t0B88, _t0B89];
    tensor[4,4] _t0B8B = [_t0B7B, _t0B80, _t0B85, _t0B8A];
    real _t0B8C = 0.e0;
    real _t0B8D = 0.1e1;
    real _t0B8E = 0.e0;
    real _t0B8F = 0.e0;
    vec4 _t0B90 = [_t0B8C, _t0B8D, _t0B8E, _t0B8F];
    real _t0B91 = -0.1e1;
    real _t0B92 = 0.e0;
    real _t0B93 = 0.e0;
    real _t0B94 = 0.e0;
    vec4 _t0B95 = [_t0B91, _t0B92, _t0B93, _t0B94];
    real _t0B96 = 0.e0;
    real _t0B97 = 0.e0;
    real _t0B98 = 0.1e1;
    real _t0B99 = 0.e0;
    vec4 _t0B9A = [_t0B96, _t0B97, _t0B98, _t0B99];
    real _t0B9B = 0.e0;
    real _t0B9C = 0.e0;
    real _t0B9D = 0.e0;
    real _t0B9E = 0.1e1;
    vec4 _t0B9F = [_t0B9B, _t0B9C, _t0B9D, _t0B9E];
    tensor[4,4] _t0BA0 = [_t0B90, _t0B95, _t0B9A, _t0B9F];
    real _t0BA1 = 0.1e1;
    real _t0BA2 = 0.e0;
    real _t0BA3 = 0.e0;
    real _t0BA4 = 0.e0;
    vec4 _t0BA5 = [_t0BA1, _t0BA2, _t0BA3, _t0BA4];
    real _t0BA6 = 0.e0;
    real _t0BA7 = 0.1e1;
    real _t0BA8 = 0.e0;
    real _t0BA9 = 0.e0;
    vec4 _t0BAA = [_t0BA6, _t0BA7, _t0BA8, _t0BA9];
    real _t0BAB = 0.e0;
    real _t0BAC = 0.e0;
    real _t0BAD = 0.1e1;
    real _t0BAE = 0.e0;
    vec4 _t0BAF = [_t0BAB, _t0BAC, _t0BAD, _t0BAE];
    real _t0BB0 = 0.e0;
    real _t0BB1 = 0.e0;
    real _t0BB2 = 0.e0;
    real _t0BB3 = 0.1e1;
    vec4 _t0BB4 = [_t0BB0, _t0BB1, _t0BB2, _t0BB3];
    tensor[4,4] _t0BB5 = [_t0BA5, _t0BAA, _t0BAF, _t0BB4];
    tensor[4,4][6] _t0BB6 = {_t0B4C, _t0B61, _t0B76, _t0B8B, _t0BA0, _t0BB5};
    tensor[4,4][6][6] _t0BB7 = {_t093B, _t09BA, _t0A39, _t0AB8, _t0B37, _t0BB6};
    real _t0BB8 = time059F[1];
    int _t0BB9 = prim $r2i01B7 (_t0BB8);
    tensor[4,4][6] _t0BBA = prim $sub01C0<tensor[4,4][6]; %6> (_t0BB7, _t0BB9);
    real _t0BBB = time059F[1];
    int _t0BBC = prim $r2i01B7 (_t0BBB);
    int[2] _t0BBD = func nextCell405A3 (_t0BBC, cellId059C, mesh059B);
    int _t0BBE = 1;
    int _t0BBF = prim $sub01C0<int; %2> (_t0BBD, _t0BBE);
    tensor[4,4] _t0BC0 = prim $sub01C0<tensor[4,4]; %6> (_t0BBA, _t0BBF);
    real _t0BC1 = time059F[0];
    vec3 _t0BC2 = prim *0036<$[3]> (_t0BC1, dPos059E);
    vec3 _t0BC3 = prim +0017<$[3]> (_t0BC2, refPos059D);
    real _t0BC4 = _t0BC3[0];
    real _t0BC5 = time059F[0];
    vec3 _t0BC6 = prim *0036<$[3]> (_t0BC5, dPos059E);
    vec3 _t0BC7 = prim +0017<$[3]> (_t0BC6, refPos059D);
    real _t0BC8 = _t0BC7[1];
    real _t0BC9 = time059F[0];
    vec3 _t0BCA = prim *0036<$[3]> (_t0BC9, dPos059E);
    vec3 _t0BCB = prim +0017<$[3]> (_t0BCA, refPos059D);
    real _t0BCC = _t0BCB[2];
    real _t0BCD = 0.1e1;
    vec4 _t0BCE = [_t0BC4, _t0BC8, _t0BCC, _t0BCD];
    vec4 _t0BCF = prim •00CE<$[4,4]; $[4]; $[4]> (_t0BC0, _t0BCE);
    real _t0BD0 = _t0BCF[0];
    real _t0BD1 = 0.1e1;
    real _t0BD2 = 0.e0;
    real _t0BD3 = 0.e0;
    real _t0BD4 = 0.e0;
    vec4 _t0BD5 = [_t0BD1, _t0BD2, _t0BD3, _t0BD4];
    real _t0BD6 = 0.e0;
    real _t0BD7 = 0.1e1;
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    vec4 _t0BDA = [_t0BD6, _t0BD7, _t0BD8, _t0BD9];
    real _t0BDB = 0.e0;
    real _t0BDC = 0.e0;
    real _t0BDD = 0.1e1;
    real _t0BDE = 0.e0;
    vec4 _t0BDF = [_t0BDB, _t0BDC, _t0BDD, _t0BDE];
    real _t0BE0 = 0.e0;
    real _t0BE1 = 0.e0;
    real _t0BE2 = 0.e0;
    real _t0BE3 = 0.1e1;
    vec4 _t0BE4 = [_t0BE0, _t0BE1, _t0BE2, _t0BE3];
    tensor[4,4] _t0BE5 = [_t0BD5, _t0BDA, _t0BDF, _t0BE4];
    real _t0BE6 = 0.1e1;
    real _t0BE7 = 0.e0;
    real _t0BE8 = 0.e0;
    real _t0BE9 = 0.e0;
    vec4 _t0BEA = [_t0BE6, _t0BE7, _t0BE8, _t0BE9];
    real _t0BEB = 0.e0;
    real _t0BEC = 0.1e1;
    real _t0BED = 0.e0;
    real _t0BEE = 0.e0;
    vec4 _t0BEF = [_t0BEB, _t0BEC, _t0BED, _t0BEE];
    real _t0BF0 = 0.e0;
    real _t0BF1 = 0.e0;
    real _t0BF2 = 0.1e1;
    real _t0BF3 = 0.1e1;
    vec4 _t0BF4 = [_t0BF0, _t0BF1, _t0BF2, _t0BF3];
    real _t0BF5 = 0.e0;
    real _t0BF6 = 0.e0;
    real _t0BF7 = 0.e0;
    real _t0BF8 = 0.1e1;
    vec4 _t0BF9 = [_t0BF5, _t0BF6, _t0BF7, _t0BF8];
    tensor[4,4] _t0BFA = [_t0BEA, _t0BEF, _t0BF4, _t0BF9];
    real _t0BFB = 0.e0;
    real _t0BFC = 0.1e1;
    real _t0BFD = 0.e0;
    real _t0BFE = 0.e0;
    vec4 _t0BFF = [_t0BFB, _t0BFC, _t0BFD, _t0BFE];
    real _t0C00 = 0.e0;
    real _t0C01 = 0.e0;
    real _t0C02 = 0.1e1;
    real _t0C03 = 0.e0;
    vec4 _t0C04 = [_t0C00, _t0C01, _t0C02, _t0C03];
    real _t0C05 = 0.1e1;
    real _t0C06 = -0.1e1;
    real _t0C07 = 0.e0;
    real _t0C08 = -0.5e0;
    vec4 _t0C09 = [_t0C05, _t0C06, _t0C07, _t0C08];
    real _t0C0A = 0.e0;
    real _t0C0B = 0.e0;
    real _t0C0C = 0.e0;
    real _t0C0D = 0.1e1;
    vec4 _t0C0E = [_t0C0A, _t0C0B, _t0C0C, _t0C0D];
    tensor[4,4] _t0C0F = [_t0BFF, _t0C04, _t0C09, _t0C0E];
    real _t0C10 = 0.e0;
    real _t0C11 = 0.e0;
    real _t0C12 = -0.1e1;
    real _t0C13 = 0.e0;
    vec4 _t0C14 = [_t0C10, _t0C11, _t0C12, _t0C13];
    real _t0C15 = 0.e0;
    real _t0C16 = 0.1e1;
    real _t0C17 = 0.e0;
    real _t0C18 = 0.e0;
    vec4 _t0C19 = [_t0C15, _t0C16, _t0C17, _t0C18];
    real _t0C1A = 0.1e1;
    real _t0C1B = -0.1e1;
    real _t0C1C = 0.e0;
    real _t0C1D = -0.5e0;
    vec4 _t0C1E = [_t0C1A, _t0C1B, _t0C1C, _t0C1D];
    real _t0C1F = 0.e0;
    real _t0C20 = 0.e0;
    real _t0C21 = 0.e0;
    real _t0C22 = 0.1e1;
    vec4 _t0C23 = [_t0C1F, _t0C20, _t0C21, _t0C22];
    tensor[4,4] _t0C24 = [_t0C14, _t0C19, _t0C1E, _t0C23];
    real _t0C25 = 0.e0;
    real _t0C26 = -0.1e1;
    real _t0C27 = 0.e0;
    real _t0C28 = 0.e0;
    vec4 _t0C29 = [_t0C25, _t0C26, _t0C27, _t0C28];
    real _t0C2A = 0.e0;
    real _t0C2B = 0.e0;
    real _t0C2C = -0.1e1;
    real _t0C2D = 0.e0;
    vec4 _t0C2E = [_t0C2A, _t0C2B, _t0C2C, _t0C2D];
    real _t0C2F = 0.1e1;
    real _t0C30 = -0.1e1;
    real _t0C31 = 0.e0;
    real _t0C32 = -0.5e0;
    vec4 _t0C33 = [_t0C2F, _t0C30, _t0C31, _t0C32];
    real _t0C34 = 0.e0;
    real _t0C35 = 0.e0;
    real _t0C36 = 0.e0;
    real _t0C37 = 0.1e1;
    vec4 _t0C38 = [_t0C34, _t0C35, _t0C36, _t0C37];
    tensor[4,4] _t0C39 = [_t0C29, _t0C2E, _t0C33, _t0C38];
    real _t0C3A = 0.e0;
    real _t0C3B = 0.e0;
    real _t0C3C = 0.1e1;
    real _t0C3D = 0.e0;
    vec4 _t0C3E = [_t0C3A, _t0C3B, _t0C3C, _t0C3D];
    real _t0C3F = 0.e0;
    real _t0C40 = -0.1e1;
    real _t0C41 = 0.e0;
    real _t0C42 = 0.e0;
    vec4 _t0C43 = [_t0C3F, _t0C40, _t0C41, _t0C42];
    real _t0C44 = 0.1e1;
    real _t0C45 = -0.1e1;
    real _t0C46 = 0.e0;
    real _t0C47 = -0.5e0;
    vec4 _t0C48 = [_t0C44, _t0C45, _t0C46, _t0C47];
    real _t0C49 = 0.e0;
    real _t0C4A = 0.e0;
    real _t0C4B = 0.e0;
    real _t0C4C = 0.1e1;
    vec4 _t0C4D = [_t0C49, _t0C4A, _t0C4B, _t0C4C];
    tensor[4,4] _t0C4E = [_t0C3E, _t0C43, _t0C48, _t0C4D];
    tensor[4,4][6] _t0C4F = {_t0BE5, _t0BFA, _t0C0F, _t0C24, _t0C39, _t0C4E};
    real _t0C50 = 0.1e1;
    real _t0C51 = 0.e0;
    real _t0C52 = 0.e0;
    real _t0C53 = 0.e0;
    vec4 _t0C54 = [_t0C50, _t0C51, _t0C52, _t0C53];
    real _t0C55 = 0.e0;
    real _t0C56 = 0.1e1;
    real _t0C57 = 0.e0;
    real _t0C58 = 0.e0;
    vec4 _t0C59 = [_t0C55, _t0C56, _t0C57, _t0C58];
    real _t0C5A = 0.e0;
    real _t0C5B = 0.e0;
    real _t0C5C = 0.1e1;
    real _t0C5D = -0.1e1;
    vec4 _t0C5E = [_t0C5A, _t0C5B, _t0C5C, _t0C5D];
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    real _t0C61 = 0.e0;
    real _t0C62 = 0.1e1;
    vec4 _t0C63 = [_t0C5F, _t0C60, _t0C61, _t0C62];
    tensor[4,4] _t0C64 = [_t0C54, _t0C59, _t0C5E, _t0C63];
    real _t0C65 = 0.1e1;
    real _t0C66 = 0.e0;
    real _t0C67 = 0.e0;
    real _t0C68 = 0.e0;
    vec4 _t0C69 = [_t0C65, _t0C66, _t0C67, _t0C68];
    real _t0C6A = 0.e0;
    real _t0C6B = 0.1e1;
    real _t0C6C = 0.e0;
    real _t0C6D = 0.e0;
    vec4 _t0C6E = [_t0C6A, _t0C6B, _t0C6C, _t0C6D];
    real _t0C6F = 0.e0;
    real _t0C70 = 0.e0;
    real _t0C71 = 0.1e1;
    real _t0C72 = 0.e0;
    vec4 _t0C73 = [_t0C6F, _t0C70, _t0C71, _t0C72];
    real _t0C74 = 0.e0;
    real _t0C75 = 0.e0;
    real _t0C76 = 0.e0;
    real _t0C77 = 0.1e1;
    vec4 _t0C78 = [_t0C74, _t0C75, _t0C76, _t0C77];
    tensor[4,4] _t0C79 = [_t0C69, _t0C6E, _t0C73, _t0C78];
    real _t0C7A = 0.e0;
    real _t0C7B = 0.1e1;
    real _t0C7C = 0.e0;
    real _t0C7D = 0.e0;
    vec4 _t0C7E = [_t0C7A, _t0C7B, _t0C7C, _t0C7D];
    real _t0C7F = 0.e0;
    real _t0C80 = 0.e0;
    real _t0C81 = 0.1e1;
    real _t0C82 = -0.1e1;
    vec4 _t0C83 = [_t0C7F, _t0C80, _t0C81, _t0C82];
    real _t0C84 = 0.1e1;
    real _t0C85 = -0.1e1;
    real _t0C86 = 0.e0;
    real _t0C87 = -0.5e0;
    vec4 _t0C88 = [_t0C84, _t0C85, _t0C86, _t0C87];
    real _t0C89 = 0.e0;
    real _t0C8A = 0.e0;
    real _t0C8B = 0.e0;
    real _t0C8C = 0.1e1;
    vec4 _t0C8D = [_t0C89, _t0C8A, _t0C8B, _t0C8C];
    tensor[4,4] _t0C8E = [_t0C7E, _t0C83, _t0C88, _t0C8D];
    real _t0C8F = 0.e0;
    real _t0C90 = 0.e0;
    real _t0C91 = -0.1e1;
    real _t0C92 = 0.1e1;
    vec4 _t0C93 = [_t0C8F, _t0C90, _t0C91, _t0C92];
    real _t0C94 = 0.e0;
    real _t0C95 = 0.1e1;
    real _t0C96 = 0.e0;
    real _t0C97 = 0.e0;
    vec4 _t0C98 = [_t0C94, _t0C95, _t0C96, _t0C97];
    real _t0C99 = 0.1e1;
    real _t0C9A = -0.1e1;
    real _t0C9B = 0.e0;
    real _t0C9C = -0.5e0;
    vec4 _t0C9D = [_t0C99, _t0C9A, _t0C9B, _t0C9C];
    real _t0C9E = 0.e0;
    real _t0C9F = 0.e0;
    real _t0CA0 = 0.e0;
    real _t0CA1 = 0.1e1;
    vec4 _t0CA2 = [_t0C9E, _t0C9F, _t0CA0, _t0CA1];
    tensor[4,4] _t0CA3 = [_t0C93, _t0C98, _t0C9D, _t0CA2];
    real _t0CA4 = 0.e0;
    real _t0CA5 = -0.1e1;
    real _t0CA6 = 0.e0;
    real _t0CA7 = 0.e0;
    vec4 _t0CA8 = [_t0CA4, _t0CA5, _t0CA6, _t0CA7];
    real _t0CA9 = 0.e0;
    real _t0CAA = 0.e0;
    real _t0CAB = -0.1e1;
    real _t0CAC = 0.1e1;
    vec4 _t0CAD = [_t0CA9, _t0CAA, _t0CAB, _t0CAC];
    real _t0CAE = 0.1e1;
    real _t0CAF = -0.1e1;
    real _t0CB0 = 0.e0;
    real _t0CB1 = -0.5e0;
    vec4 _t0CB2 = [_t0CAE, _t0CAF, _t0CB0, _t0CB1];
    real _t0CB3 = 0.e0;
    real _t0CB4 = 0.e0;
    real _t0CB5 = 0.e0;
    real _t0CB6 = 0.1e1;
    vec4 _t0CB7 = [_t0CB3, _t0CB4, _t0CB5, _t0CB6];
    tensor[4,4] _t0CB8 = [_t0CA8, _t0CAD, _t0CB2, _t0CB7];
    real _t0CB9 = 0.e0;
    real _t0CBA = 0.e0;
    real _t0CBB = 0.1e1;
    real _t0CBC = -0.1e1;
    vec4 _t0CBD = [_t0CB9, _t0CBA, _t0CBB, _t0CBC];
    real _t0CBE = 0.e0;
    real _t0CBF = -0.1e1;
    real _t0CC0 = 0.e0;
    real _t0CC1 = 0.e0;
    vec4 _t0CC2 = [_t0CBE, _t0CBF, _t0CC0, _t0CC1];
    real _t0CC3 = 0.1e1;
    real _t0CC4 = -0.1e1;
    real _t0CC5 = 0.e0;
    real _t0CC6 = -0.5e0;
    vec4 _t0CC7 = [_t0CC3, _t0CC4, _t0CC5, _t0CC6];
    real _t0CC8 = 0.e0;
    real _t0CC9 = 0.e0;
    real _t0CCA = 0.e0;
    real _t0CCB = 0.1e1;
    vec4 _t0CCC = [_t0CC8, _t0CC9, _t0CCA, _t0CCB];
    tensor[4,4] _t0CCD = [_t0CBD, _t0CC2, _t0CC7, _t0CCC];
    tensor[4,4][6] _t0CCE = {_t0C64, _t0C79, _t0C8E, _t0CA3, _t0CB8, _t0CCD};
    real _t0CCF = 0.1e1;
    real _t0CD0 = 0.e0;
    real _t0CD1 = 0.1e1;
    real _t0CD2 = 0.5e0;
    vec4 _t0CD3 = [_t0CCF, _t0CD0, _t0CD1, _t0CD2];
    real _t0CD4 = 0.1e1;
    real _t0CD5 = 0.e0;
    real _t0CD6 = 0.e0;
    real _t0CD7 = 0.e0;
    vec4 _t0CD8 = [_t0CD4, _t0CD5, _t0CD6, _t0CD7];
    real _t0CD9 = 0.e0;
    real _t0CDA = 0.1e1;
    real _t0CDB = 0.e0;
    real _t0CDC = 0.e0;
    vec4 _t0CDD = [_t0CD9, _t0CDA, _t0CDB, _t0CDC];
    real _t0CDE = 0.e0;
    real _t0CDF = 0.e0;
    real _t0CE0 = 0.e0;
    real _t0CE1 = 0.1e1;
    vec4 _t0CE2 = [_t0CDE, _t0CDF, _t0CE0, _t0CE1];
    tensor[4,4] _t0CE3 = [_t0CD3, _t0CD8, _t0CDD, _t0CE2];
    real _t0CE4 = 0.1e1;
    real _t0CE5 = 0.e0;
    real _t0CE6 = 0.1e1;
    real _t0CE7 = 0.5e0;
    vec4 _t0CE8 = [_t0CE4, _t0CE5, _t0CE6, _t0CE7];
    real _t0CE9 = 0.1e1;
    real _t0CEA = 0.e0;
    real _t0CEB = 0.e0;
    real _t0CEC = 0.e0;
    vec4 _t0CED = [_t0CE9, _t0CEA, _t0CEB, _t0CEC];
    real _t0CEE = 0.e0;
    real _t0CEF = 0.1e1;
    real _t0CF0 = 0.e0;
    real _t0CF1 = 0.1e1;
    vec4 _t0CF2 = [_t0CEE, _t0CEF, _t0CF0, _t0CF1];
    real _t0CF3 = 0.e0;
    real _t0CF4 = 0.e0;
    real _t0CF5 = 0.e0;
    real _t0CF6 = 0.1e1;
    vec4 _t0CF7 = [_t0CF3, _t0CF4, _t0CF5, _t0CF6];
    tensor[4,4] _t0CF8 = [_t0CE8, _t0CED, _t0CF2, _t0CF7];
    real _t0CF9 = 0.1e1;
    real _t0CFA = 0.e0;
    real _t0CFB = 0.e0;
    real _t0CFC = 0.e0;
    vec4 _t0CFD = [_t0CF9, _t0CFA, _t0CFB, _t0CFC];
    real _t0CFE = 0.e0;
    real _t0CFF = 0.1e1;
    real _t0D00 = 0.e0;
    real _t0D01 = 0.e0;
    vec4 _t0D02 = [_t0CFE, _t0CFF, _t0D00, _t0D01];
    real _t0D03 = 0.e0;
    real _t0D04 = 0.e0;
    real _t0D05 = 0.1e1;
    real _t0D06 = 0.e0;
    vec4 _t0D07 = [_t0D03, _t0D04, _t0D05, _t0D06];
    real _t0D08 = 0.e0;
    real _t0D09 = 0.e0;
    real _t0D0A = 0.e0;
    real _t0D0B = 0.1e1;
    vec4 _t0D0C = [_t0D08, _t0D09, _t0D0A, _t0D0B];
    tensor[4,4] _t0D0D = [_t0CFD, _t0D02, _t0D07, _t0D0C];
    real _t0D0E = 0.e0;
    real _t0D0F = -0.1e1;
    real _t0D10 = 0.e0;
    real _t0D11 = 0.e0;
    vec4 _t0D12 = [_t0D0E, _t0D0F, _t0D10, _t0D11];
    real _t0D13 = 0.1e1;
    real _t0D14 = 0.e0;
    real _t0D15 = 0.e0;
    real _t0D16 = 0.e0;
    vec4 _t0D17 = [_t0D13, _t0D14, _t0D15, _t0D16];
    real _t0D18 = 0.e0;
    real _t0D19 = 0.e0;
    real _t0D1A = 0.1e1;
    real _t0D1B = 0.e0;
    vec4 _t0D1C = [_t0D18, _t0D19, _t0D1A, _t0D1B];
    real _t0D1D = 0.e0;
    real _t0D1E = 0.e0;
    real _t0D1F = 0.e0;
    real _t0D20 = 0.1e1;
    vec4 _t0D21 = [_t0D1D, _t0D1E, _t0D1F, _t0D20];
    tensor[4,4] _t0D22 = [_t0D12, _t0D17, _t0D1C, _t0D21];
    real _t0D23 = -0.1e1;
    real _t0D24 = 0.e0;
    real _t0D25 = 0.e0;
    real _t0D26 = 0.e0;
    vec4 _t0D27 = [_t0D23, _t0D24, _t0D25, _t0D26];
    real _t0D28 = 0.e0;
    real _t0D29 = -0.1e1;
    real _t0D2A = 0.e0;
    real _t0D2B = 0.e0;
    vec4 _t0D2C = [_t0D28, _t0D29, _t0D2A, _t0D2B];
    real _t0D2D = 0.e0;
    real _t0D2E = 0.e0;
    real _t0D2F = 0.1e1;
    real _t0D30 = 0.e0;
    vec4 _t0D31 = [_t0D2D, _t0D2E, _t0D2F, _t0D30];
    real _t0D32 = 0.e0;
    real _t0D33 = 0.e0;
    real _t0D34 = 0.e0;
    real _t0D35 = 0.1e1;
    vec4 _t0D36 = [_t0D32, _t0D33, _t0D34, _t0D35];
    tensor[4,4] _t0D37 = [_t0D27, _t0D2C, _t0D31, _t0D36];
    real _t0D38 = 0.e0;
    real _t0D39 = 0.1e1;
    real _t0D3A = 0.e0;
    real _t0D3B = 0.e0;
    vec4 _t0D3C = [_t0D38, _t0D39, _t0D3A, _t0D3B];
    real _t0D3D = -0.1e1;
    real _t0D3E = 0.e0;
    real _t0D3F = 0.e0;
    real _t0D40 = 0.e0;
    vec4 _t0D41 = [_t0D3D, _t0D3E, _t0D3F, _t0D40];
    real _t0D42 = 0.e0;
    real _t0D43 = 0.e0;
    real _t0D44 = 0.1e1;
    real _t0D45 = 0.e0;
    vec4 _t0D46 = [_t0D42, _t0D43, _t0D44, _t0D45];
    real _t0D47 = 0.e0;
    real _t0D48 = 0.e0;
    real _t0D49 = 0.e0;
    real _t0D4A = 0.1e1;
    vec4 _t0D4B = [_t0D47, _t0D48, _t0D49, _t0D4A];
    tensor[4,4] _t0D4C = [_t0D3C, _t0D41, _t0D46, _t0D4B];
    tensor[4,4][6] _t0D4D = {_t0CE3, _t0CF8, _t0D0D, _t0D22, _t0D37, _t0D4C};
    real _t0D4E = 0.e0;
    real _t0D4F = 0.1e1;
    real _t0D50 = 0.1e1;
    real _t0D51 = 0.5e0;
    vec4 _t0D52 = [_t0D4E, _t0D4F, _t0D50, _t0D51];
    real _t0D53 = 0.e0;
    real _t0D54 = 0.1e1;
    real _t0D55 = 0.e0;
    real _t0D56 = 0.e0;
    vec4 _t0D57 = [_t0D53, _t0D54, _t0D55, _t0D56];
    real _t0D58 = -0.1e1;
    real _t0D59 = 0.e0;
    real _t0D5A = 0.e0;
    real _t0D5B = 0.e0;
    vec4 _t0D5C = [_t0D58, _t0D59, _t0D5A, _t0D5B];
    real _t0D5D = 0.e0;
    real _t0D5E = 0.e0;
    real _t0D5F = 0.e0;
    real _t0D60 = 0.1e1;
    vec4 _t0D61 = [_t0D5D, _t0D5E, _t0D5F, _t0D60];
    tensor[4,4] _t0D62 = [_t0D52, _t0D57, _t0D5C, _t0D61];
    real _t0D63 = 0.e0;
    real _t0D64 = 0.1e1;
    real _t0D65 = 0.1e1;
    real _t0D66 = 0.5e0;
    vec4 _t0D67 = [_t0D63, _t0D64, _t0D65, _t0D66];
    real _t0D68 = 0.e0;
    real _t0D69 = 0.1e1;
    real _t0D6A = 0.e0;
    real _t0D6B = 0.e0;
    vec4 _t0D6C = [_t0D68, _t0D69, _t0D6A, _t0D6B];
    real _t0D6D = -0.1e1;
    real _t0D6E = 0.e0;
    real _t0D6F = 0.e0;
    real _t0D70 = 0.1e1;
    vec4 _t0D71 = [_t0D6D, _t0D6E, _t0D6F, _t0D70];
    real _t0D72 = 0.e0;
    real _t0D73 = 0.e0;
    real _t0D74 = 0.e0;
    real _t0D75 = 0.1e1;
    vec4 _t0D76 = [_t0D72, _t0D73, _t0D74, _t0D75];
    tensor[4,4] _t0D77 = [_t0D67, _t0D6C, _t0D71, _t0D76];
    real _t0D78 = 0.e0;
    real _t0D79 = 0.1e1;
    real _t0D7A = 0.e0;
    real _t0D7B = 0.e0;
    vec4 _t0D7C = [_t0D78, _t0D79, _t0D7A, _t0D7B];
    real _t0D7D = -0.1e1;
    real _t0D7E = 0.e0;
    real _t0D7F = 0.e0;
    real _t0D80 = 0.e0;
    vec4 _t0D81 = [_t0D7D, _t0D7E, _t0D7F, _t0D80];
    real _t0D82 = 0.e0;
    real _t0D83 = 0.e0;
    real _t0D84 = 0.1e1;
    real _t0D85 = 0.e0;
    vec4 _t0D86 = [_t0D82, _t0D83, _t0D84, _t0D85];
    real _t0D87 = 0.e0;
    real _t0D88 = 0.e0;
    real _t0D89 = 0.e0;
    real _t0D8A = 0.1e1;
    vec4 _t0D8B = [_t0D87, _t0D88, _t0D89, _t0D8A];
    tensor[4,4] _t0D8C = [_t0D7C, _t0D81, _t0D86, _t0D8B];
    real _t0D8D = 0.1e1;
    real _t0D8E = 0.e0;
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    vec4 _t0D91 = [_t0D8D, _t0D8E, _t0D8F, _t0D90];
    real _t0D92 = 0.e0;
    real _t0D93 = 0.1e1;
    real _t0D94 = 0.e0;
    real _t0D95 = 0.e0;
    vec4 _t0D96 = [_t0D92, _t0D93, _t0D94, _t0D95];
    real _t0D97 = 0.e0;
    real _t0D98 = 0.e0;
    real _t0D99 = 0.1e1;
    real _t0D9A = 0.e0;
    vec4 _t0D9B = [_t0D97, _t0D98, _t0D99, _t0D9A];
    real _t0D9C = 0.e0;
    real _t0D9D = 0.e0;
    real _t0D9E = 0.e0;
    real _t0D9F = 0.1e1;
    vec4 _t0DA0 = [_t0D9C, _t0D9D, _t0D9E, _t0D9F];
    tensor[4,4] _t0DA1 = [_t0D91, _t0D96, _t0D9B, _t0DA0];
    real _t0DA2 = 0.e0;
    real _t0DA3 = -0.1e1;
    real _t0DA4 = 0.e0;
    real _t0DA5 = 0.e0;
    vec4 _t0DA6 = [_t0DA2, _t0DA3, _t0DA4, _t0DA5];
    real _t0DA7 = 0.1e1;
    real _t0DA8 = 0.e0;
    real _t0DA9 = 0.e0;
    real _t0DAA = 0.e0;
    vec4 _t0DAB = [_t0DA7, _t0DA8, _t0DA9, _t0DAA];
    real _t0DAC = 0.e0;
    real _t0DAD = 0.e0;
    real _t0DAE = 0.1e1;
    real _t0DAF = 0.e0;
    vec4 _t0DB0 = [_t0DAC, _t0DAD, _t0DAE, _t0DAF];
    real _t0DB1 = 0.e0;
    real _t0DB2 = 0.e0;
    real _t0DB3 = 0.e0;
    real _t0DB4 = 0.1e1;
    vec4 _t0DB5 = [_t0DB1, _t0DB2, _t0DB3, _t0DB4];
    tensor[4,4] _t0DB6 = [_t0DA6, _t0DAB, _t0DB0, _t0DB5];
    real _t0DB7 = -0.1e1;
    real _t0DB8 = 0.e0;
    real _t0DB9 = 0.e0;
    real _t0DBA = 0.e0;
    vec4 _t0DBB = [_t0DB7, _t0DB8, _t0DB9, _t0DBA];
    real _t0DBC = 0.e0;
    real _t0DBD = -0.1e1;
    real _t0DBE = 0.e0;
    real _t0DBF = 0.e0;
    vec4 _t0DC0 = [_t0DBC, _t0DBD, _t0DBE, _t0DBF];
    real _t0DC1 = 0.e0;
    real _t0DC2 = 0.e0;
    real _t0DC3 = 0.1e1;
    real _t0DC4 = 0.e0;
    vec4 _t0DC5 = [_t0DC1, _t0DC2, _t0DC3, _t0DC4];
    real _t0DC6 = 0.e0;
    real _t0DC7 = 0.e0;
    real _t0DC8 = 0.e0;
    real _t0DC9 = 0.1e1;
    vec4 _t0DCA = [_t0DC6, _t0DC7, _t0DC8, _t0DC9];
    tensor[4,4] _t0DCB = [_t0DBB, _t0DC0, _t0DC5, _t0DCA];
    tensor[4,4][6] _t0DCC = {_t0D62, _t0D77, _t0D8C, _t0DA1, _t0DB6, _t0DCB};
    real _t0DCD = -0.1e1;
    real _t0DCE = 0.e0;
    real _t0DCF = 0.1e1;
    real _t0DD0 = 0.5e0;
    vec4 _t0DD1 = [_t0DCD, _t0DCE, _t0DCF, _t0DD0];
    real _t0DD2 = -0.1e1;
    real _t0DD3 = 0.e0;
    real _t0DD4 = 0.e0;
    real _t0DD5 = 0.e0;
    vec4 _t0DD6 = [_t0DD2, _t0DD3, _t0DD4, _t0DD5];
    real _t0DD7 = 0.e0;
    real _t0DD8 = -0.1e1;
    real _t0DD9 = 0.e0;
    real _t0DDA = 0.e0;
    vec4 _t0DDB = [_t0DD7, _t0DD8, _t0DD9, _t0DDA];
    real _t0DDC = 0.e0;
    real _t0DDD = 0.e0;
    real _t0DDE = 0.e0;
    real _t0DDF = 0.1e1;
    vec4 _t0DE0 = [_t0DDC, _t0DDD, _t0DDE, _t0DDF];
    tensor[4,4] _t0DE1 = [_t0DD1, _t0DD6, _t0DDB, _t0DE0];
    real _t0DE2 = -0.1e1;
    real _t0DE3 = 0.e0;
    real _t0DE4 = 0.1e1;
    real _t0DE5 = 0.5e0;
    vec4 _t0DE6 = [_t0DE2, _t0DE3, _t0DE4, _t0DE5];
    real _t0DE7 = -0.1e1;
    real _t0DE8 = 0.e0;
    real _t0DE9 = 0.e0;
    real _t0DEA = 0.e0;
    vec4 _t0DEB = [_t0DE7, _t0DE8, _t0DE9, _t0DEA];
    real _t0DEC = 0.e0;
    real _t0DED = -0.1e1;
    real _t0DEE = 0.e0;
    real _t0DEF = 0.1e1;
    vec4 _t0DF0 = [_t0DEC, _t0DED, _t0DEE, _t0DEF];
    real _t0DF1 = 0.e0;
    real _t0DF2 = 0.e0;
    real _t0DF3 = 0.e0;
    real _t0DF4 = 0.1e1;
    vec4 _t0DF5 = [_t0DF1, _t0DF2, _t0DF3, _t0DF4];
    tensor[4,4] _t0DF6 = [_t0DE6, _t0DEB, _t0DF0, _t0DF5];
    real _t0DF7 = -0.1e1;
    real _t0DF8 = 0.e0;
    real _t0DF9 = 0.e0;
    real _t0DFA = 0.e0;
    vec4 _t0DFB = [_t0DF7, _t0DF8, _t0DF9, _t0DFA];
    real _t0DFC = 0.e0;
    real _t0DFD = -0.1e1;
    real _t0DFE = 0.e0;
    real _t0DFF = 0.e0;
    vec4 _t0E00 = [_t0DFC, _t0DFD, _t0DFE, _t0DFF];
    real _t0E01 = 0.e0;
    real _t0E02 = 0.e0;
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.e0;
    vec4 _t0E05 = [_t0E01, _t0E02, _t0E03, _t0E04];
    real _t0E06 = 0.e0;
    real _t0E07 = 0.e0;
    real _t0E08 = 0.e0;
    real _t0E09 = 0.1e1;
    vec4 _t0E0A = [_t0E06, _t0E07, _t0E08, _t0E09];
    tensor[4,4] _t0E0B = [_t0DFB, _t0E00, _t0E05, _t0E0A];
    real _t0E0C = 0.e0;
    real _t0E0D = 0.1e1;
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    vec4 _t0E10 = [_t0E0C, _t0E0D, _t0E0E, _t0E0F];
    real _t0E11 = -0.1e1;
    real _t0E12 = 0.e0;
    real _t0E13 = 0.e0;
    real _t0E14 = 0.e0;
    vec4 _t0E15 = [_t0E11, _t0E12, _t0E13, _t0E14];
    real _t0E16 = 0.e0;
    real _t0E17 = 0.e0;
    real _t0E18 = 0.1e1;
    real _t0E19 = 0.e0;
    vec4 _t0E1A = [_t0E16, _t0E17, _t0E18, _t0E19];
    real _t0E1B = 0.e0;
    real _t0E1C = 0.e0;
    real _t0E1D = 0.e0;
    real _t0E1E = 0.1e1;
    vec4 _t0E1F = [_t0E1B, _t0E1C, _t0E1D, _t0E1E];
    tensor[4,4] _t0E20 = [_t0E10, _t0E15, _t0E1A, _t0E1F];
    real _t0E21 = 0.1e1;
    real _t0E22 = 0.e0;
    real _t0E23 = 0.e0;
    real _t0E24 = 0.e0;
    vec4 _t0E25 = [_t0E21, _t0E22, _t0E23, _t0E24];
    real _t0E26 = 0.e0;
    real _t0E27 = 0.1e1;
    real _t0E28 = 0.e0;
    real _t0E29 = 0.e0;
    vec4 _t0E2A = [_t0E26, _t0E27, _t0E28, _t0E29];
    real _t0E2B = 0.e0;
    real _t0E2C = 0.e0;
    real _t0E2D = 0.1e1;
    real _t0E2E = 0.e0;
    vec4 _t0E2F = [_t0E2B, _t0E2C, _t0E2D, _t0E2E];
    real _t0E30 = 0.e0;
    real _t0E31 = 0.e0;
    real _t0E32 = 0.e0;
    real _t0E33 = 0.1e1;
    vec4 _t0E34 = [_t0E30, _t0E31, _t0E32, _t0E33];
    tensor[4,4] _t0E35 = [_t0E25, _t0E2A, _t0E2F, _t0E34];
    real _t0E36 = 0.e0;
    real _t0E37 = -0.1e1;
    real _t0E38 = 0.e0;
    real _t0E39 = 0.e0;
    vec4 _t0E3A = [_t0E36, _t0E37, _t0E38, _t0E39];
    real _t0E3B = 0.1e1;
    real _t0E3C = 0.e0;
    real _t0E3D = 0.e0;
    real _t0E3E = 0.e0;
    vec4 _t0E3F = [_t0E3B, _t0E3C, _t0E3D, _t0E3E];
    real _t0E40 = 0.e0;
    real _t0E41 = 0.e0;
    real _t0E42 = 0.1e1;
    real _t0E43 = 0.e0;
    vec4 _t0E44 = [_t0E40, _t0E41, _t0E42, _t0E43];
    real _t0E45 = 0.e0;
    real _t0E46 = 0.e0;
    real _t0E47 = 0.e0;
    real _t0E48 = 0.1e1;
    vec4 _t0E49 = [_t0E45, _t0E46, _t0E47, _t0E48];
    tensor[4,4] _t0E4A = [_t0E3A, _t0E3F, _t0E44, _t0E49];
    tensor[4,4][6] _t0E4B = {_t0DE1, _t0DF6, _t0E0B, _t0E20, _t0E35, _t0E4A};
    real _t0E4C = 0.e0;
    real _t0E4D = -0.1e1;
    real _t0E4E = 0.1e1;
    real _t0E4F = 0.5e0;
    vec4 _t0E50 = [_t0E4C, _t0E4D, _t0E4E, _t0E4F];
    real _t0E51 = 0.e0;
    real _t0E52 = -0.1e1;
    real _t0E53 = 0.e0;
    real _t0E54 = 0.e0;
    vec4 _t0E55 = [_t0E51, _t0E52, _t0E53, _t0E54];
    real _t0E56 = 0.1e1;
    real _t0E57 = 0.e0;
    real _t0E58 = 0.e0;
    real _t0E59 = 0.e0;
    vec4 _t0E5A = [_t0E56, _t0E57, _t0E58, _t0E59];
    real _t0E5B = 0.e0;
    real _t0E5C = 0.e0;
    real _t0E5D = 0.e0;
    real _t0E5E = 0.1e1;
    vec4 _t0E5F = [_t0E5B, _t0E5C, _t0E5D, _t0E5E];
    tensor[4,4] _t0E60 = [_t0E50, _t0E55, _t0E5A, _t0E5F];
    real _t0E61 = 0.e0;
    real _t0E62 = -0.1e1;
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.5e0;
    vec4 _t0E65 = [_t0E61, _t0E62, _t0E63, _t0E64];
    real _t0E66 = 0.e0;
    real _t0E67 = -0.1e1;
    real _t0E68 = 0.e0;
    real _t0E69 = 0.e0;
    vec4 _t0E6A = [_t0E66, _t0E67, _t0E68, _t0E69];
    real _t0E6B = 0.1e1;
    real _t0E6C = 0.e0;
    real _t0E6D = 0.e0;
    real _t0E6E = 0.1e1;
    vec4 _t0E6F = [_t0E6B, _t0E6C, _t0E6D, _t0E6E];
    real _t0E70 = 0.e0;
    real _t0E71 = 0.e0;
    real _t0E72 = 0.e0;
    real _t0E73 = 0.1e1;
    vec4 _t0E74 = [_t0E70, _t0E71, _t0E72, _t0E73];
    tensor[4,4] _t0E75 = [_t0E65, _t0E6A, _t0E6F, _t0E74];
    real _t0E76 = 0.e0;
    real _t0E77 = -0.1e1;
    real _t0E78 = 0.e0;
    real _t0E79 = 0.e0;
    vec4 _t0E7A = [_t0E76, _t0E77, _t0E78, _t0E79];
    real _t0E7B = 0.1e1;
    real _t0E7C = 0.e0;
    real _t0E7D = 0.e0;
    real _t0E7E = 0.e0;
    vec4 _t0E7F = [_t0E7B, _t0E7C, _t0E7D, _t0E7E];
    real _t0E80 = 0.e0;
    real _t0E81 = 0.e0;
    real _t0E82 = 0.1e1;
    real _t0E83 = 0.e0;
    vec4 _t0E84 = [_t0E80, _t0E81, _t0E82, _t0E83];
    real _t0E85 = 0.e0;
    real _t0E86 = 0.e0;
    real _t0E87 = 0.e0;
    real _t0E88 = 0.1e1;
    vec4 _t0E89 = [_t0E85, _t0E86, _t0E87, _t0E88];
    tensor[4,4] _t0E8A = [_t0E7A, _t0E7F, _t0E84, _t0E89];
    real _t0E8B = -0.1e1;
    real _t0E8C = 0.e0;
    real _t0E8D = 0.e0;
    real _t0E8E = 0.e0;
    vec4 _t0E8F = [_t0E8B, _t0E8C, _t0E8D, _t0E8E];
    real _t0E90 = 0.e0;
    real _t0E91 = -0.1e1;
    real _t0E92 = 0.e0;
    real _t0E93 = 0.e0;
    vec4 _t0E94 = [_t0E90, _t0E91, _t0E92, _t0E93];
    real _t0E95 = 0.e0;
    real _t0E96 = 0.e0;
    real _t0E97 = 0.1e1;
    real _t0E98 = 0.e0;
    vec4 _t0E99 = [_t0E95, _t0E96, _t0E97, _t0E98];
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    real _t0E9C = 0.e0;
    real _t0E9D = 0.1e1;
    vec4 _t0E9E = [_t0E9A, _t0E9B, _t0E9C, _t0E9D];
    tensor[4,4] _t0E9F = [_t0E8F, _t0E94, _t0E99, _t0E9E];
    real _t0EA0 = 0.e0;
    real _t0EA1 = 0.1e1;
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.e0;
    vec4 _t0EA4 = [_t0EA0, _t0EA1, _t0EA2, _t0EA3];
    real _t0EA5 = -0.1e1;
    real _t0EA6 = 0.e0;
    real _t0EA7 = 0.e0;
    real _t0EA8 = 0.e0;
    vec4 _t0EA9 = [_t0EA5, _t0EA6, _t0EA7, _t0EA8];
    real _t0EAA = 0.e0;
    real _t0EAB = 0.e0;
    real _t0EAC = 0.1e1;
    real _t0EAD = 0.e0;
    vec4 _t0EAE = [_t0EAA, _t0EAB, _t0EAC, _t0EAD];
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.e0;
    real _t0EB1 = 0.e0;
    real _t0EB2 = 0.1e1;
    vec4 _t0EB3 = [_t0EAF, _t0EB0, _t0EB1, _t0EB2];
    tensor[4,4] _t0EB4 = [_t0EA4, _t0EA9, _t0EAE, _t0EB3];
    real _t0EB5 = 0.1e1;
    real _t0EB6 = 0.e0;
    real _t0EB7 = 0.e0;
    real _t0EB8 = 0.e0;
    vec4 _t0EB9 = [_t0EB5, _t0EB6, _t0EB7, _t0EB8];
    real _t0EBA = 0.e0;
    real _t0EBB = 0.1e1;
    real _t0EBC = 0.e0;
    real _t0EBD = 0.e0;
    vec4 _t0EBE = [_t0EBA, _t0EBB, _t0EBC, _t0EBD];
    real _t0EBF = 0.e0;
    real _t0EC0 = 0.e0;
    real _t0EC1 = 0.1e1;
    real _t0EC2 = 0.e0;
    vec4 _t0EC3 = [_t0EBF, _t0EC0, _t0EC1, _t0EC2];
    real _t0EC4 = 0.e0;
    real _t0EC5 = 0.e0;
    real _t0EC6 = 0.e0;
    real _t0EC7 = 0.1e1;
    vec4 _t0EC8 = [_t0EC4, _t0EC5, _t0EC6, _t0EC7];
    tensor[4,4] _t0EC9 = [_t0EB9, _t0EBE, _t0EC3, _t0EC8];
    tensor[4,4][6] _t0ECA = {_t0E60, _t0E75, _t0E8A, _t0E9F, _t0EB4, _t0EC9};
    tensor[4,4][6][6] _t0ECB = {_t0C4F, _t0CCE, _t0D4D, _t0DCC, _t0E4B, _t0ECA};
    real _t0ECC = time059F[1];
    int _t0ECD = prim $r2i01B7 (_t0ECC);
    tensor[4,4][6] _t0ECE = prim $sub01C0<tensor[4,4][6]; %6> (_t0ECB, _t0ECD);
    real _t0ECF = time059F[1];
    int _t0ED0 = prim $r2i01B7 (_t0ECF);
    int[2] _t0ED1 = func nextCell405A3 (_t0ED0, cellId059C, mesh059B);
    int _t0ED2 = 1;
    int _t0ED3 = prim $sub01C0<int; %2> (_t0ED1, _t0ED2);
    tensor[4,4] _t0ED4 = prim $sub01C0<tensor[4,4]; %6> (_t0ECE, _t0ED3);
    real _t0ED5 = time059F[0];
    vec3 _t0ED6 = prim *0036<$[3]> (_t0ED5, dPos059E);
    vec3 _t0ED7 = prim +0017<$[3]> (_t0ED6, refPos059D);
    real _t0ED8 = _t0ED7[0];
    real _t0ED9 = time059F[0];
    vec3 _t0EDA = prim *0036<$[3]> (_t0ED9, dPos059E);
    vec3 _t0EDB = prim +0017<$[3]> (_t0EDA, refPos059D);
    real _t0EDC = _t0EDB[1];
    real _t0EDD = time059F[0];
    vec3 _t0EDE = prim *0036<$[3]> (_t0EDD, dPos059E);
    vec3 _t0EDF = prim +0017<$[3]> (_t0EDE, refPos059D);
    real _t0EE0 = _t0EDF[2];
    real _t0EE1 = 0.1e1;
    vec4 _t0EE2 = [_t0ED8, _t0EDC, _t0EE0, _t0EE1];
    vec4 _t0EE3 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0ED4, _t0EE2);
    real _t0EE4 = _t0EE3[1];
    real _t0EE5 = 0.1e1;
    real _t0EE6 = 0.e0;
    real _t0EE7 = 0.e0;
    real _t0EE8 = 0.e0;
    vec4 _t0EE9 = [_t0EE5, _t0EE6, _t0EE7, _t0EE8];
    real _t0EEA = 0.e0;
    real _t0EEB = 0.1e1;
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    vec4 _t0EEE = [_t0EEA, _t0EEB, _t0EEC, _t0EED];
    real _t0EEF = 0.e0;
    real _t0EF0 = 0.e0;
    real _t0EF1 = 0.1e1;
    real _t0EF2 = 0.e0;
    vec4 _t0EF3 = [_t0EEF, _t0EF0, _t0EF1, _t0EF2];
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    real _t0EF6 = 0.e0;
    real _t0EF7 = 0.1e1;
    vec4 _t0EF8 = [_t0EF4, _t0EF5, _t0EF6, _t0EF7];
    tensor[4,4] _t0EF9 = [_t0EE9, _t0EEE, _t0EF3, _t0EF8];
    real _t0EFA = 0.1e1;
    real _t0EFB = 0.e0;
    real _t0EFC = 0.e0;
    real _t0EFD = 0.e0;
    vec4 _t0EFE = [_t0EFA, _t0EFB, _t0EFC, _t0EFD];
    real _t0EFF = 0.e0;
    real _t0F00 = 0.1e1;
    real _t0F01 = 0.e0;
    real _t0F02 = 0.e0;
    vec4 _t0F03 = [_t0EFF, _t0F00, _t0F01, _t0F02];
    real _t0F04 = 0.e0;
    real _t0F05 = 0.e0;
    real _t0F06 = 0.1e1;
    real _t0F07 = 0.1e1;
    vec4 _t0F08 = [_t0F04, _t0F05, _t0F06, _t0F07];
    real _t0F09 = 0.e0;
    real _t0F0A = 0.e0;
    real _t0F0B = 0.e0;
    real _t0F0C = 0.1e1;
    vec4 _t0F0D = [_t0F09, _t0F0A, _t0F0B, _t0F0C];
    tensor[4,4] _t0F0E = [_t0EFE, _t0F03, _t0F08, _t0F0D];
    real _t0F0F = 0.e0;
    real _t0F10 = 0.1e1;
    real _t0F11 = 0.e0;
    real _t0F12 = 0.e0;
    vec4 _t0F13 = [_t0F0F, _t0F10, _t0F11, _t0F12];
    real _t0F14 = 0.e0;
    real _t0F15 = 0.e0;
    real _t0F16 = 0.1e1;
    real _t0F17 = 0.e0;
    vec4 _t0F18 = [_t0F14, _t0F15, _t0F16, _t0F17];
    real _t0F19 = 0.1e1;
    real _t0F1A = -0.1e1;
    real _t0F1B = 0.e0;
    real _t0F1C = -0.5e0;
    vec4 _t0F1D = [_t0F19, _t0F1A, _t0F1B, _t0F1C];
    real _t0F1E = 0.e0;
    real _t0F1F = 0.e0;
    real _t0F20 = 0.e0;
    real _t0F21 = 0.1e1;
    vec4 _t0F22 = [_t0F1E, _t0F1F, _t0F20, _t0F21];
    tensor[4,4] _t0F23 = [_t0F13, _t0F18, _t0F1D, _t0F22];
    real _t0F24 = 0.e0;
    real _t0F25 = 0.e0;
    real _t0F26 = -0.1e1;
    real _t0F27 = 0.e0;
    vec4 _t0F28 = [_t0F24, _t0F25, _t0F26, _t0F27];
    real _t0F29 = 0.e0;
    real _t0F2A = 0.1e1;
    real _t0F2B = 0.e0;
    real _t0F2C = 0.e0;
    vec4 _t0F2D = [_t0F29, _t0F2A, _t0F2B, _t0F2C];
    real _t0F2E = 0.1e1;
    real _t0F2F = -0.1e1;
    real _t0F30 = 0.e0;
    real _t0F31 = -0.5e0;
    vec4 _t0F32 = [_t0F2E, _t0F2F, _t0F30, _t0F31];
    real _t0F33 = 0.e0;
    real _t0F34 = 0.e0;
    real _t0F35 = 0.e0;
    real _t0F36 = 0.1e1;
    vec4 _t0F37 = [_t0F33, _t0F34, _t0F35, _t0F36];
    tensor[4,4] _t0F38 = [_t0F28, _t0F2D, _t0F32, _t0F37];
    real _t0F39 = 0.e0;
    real _t0F3A = -0.1e1;
    real _t0F3B = 0.e0;
    real _t0F3C = 0.e0;
    vec4 _t0F3D = [_t0F39, _t0F3A, _t0F3B, _t0F3C];
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    real _t0F40 = -0.1e1;
    real _t0F41 = 0.e0;
    vec4 _t0F42 = [_t0F3E, _t0F3F, _t0F40, _t0F41];
    real _t0F43 = 0.1e1;
    real _t0F44 = -0.1e1;
    real _t0F45 = 0.e0;
    real _t0F46 = -0.5e0;
    vec4 _t0F47 = [_t0F43, _t0F44, _t0F45, _t0F46];
    real _t0F48 = 0.e0;
    real _t0F49 = 0.e0;
    real _t0F4A = 0.e0;
    real _t0F4B = 0.1e1;
    vec4 _t0F4C = [_t0F48, _t0F49, _t0F4A, _t0F4B];
    tensor[4,4] _t0F4D = [_t0F3D, _t0F42, _t0F47, _t0F4C];
    real _t0F4E = 0.e0;
    real _t0F4F = 0.e0;
    real _t0F50 = 0.1e1;
    real _t0F51 = 0.e0;
    vec4 _t0F52 = [_t0F4E, _t0F4F, _t0F50, _t0F51];
    real _t0F53 = 0.e0;
    real _t0F54 = -0.1e1;
    real _t0F55 = 0.e0;
    real _t0F56 = 0.e0;
    vec4 _t0F57 = [_t0F53, _t0F54, _t0F55, _t0F56];
    real _t0F58 = 0.1e1;
    real _t0F59 = -0.1e1;
    real _t0F5A = 0.e0;
    real _t0F5B = -0.5e0;
    vec4 _t0F5C = [_t0F58, _t0F59, _t0F5A, _t0F5B];
    real _t0F5D = 0.e0;
    real _t0F5E = 0.e0;
    real _t0F5F = 0.e0;
    real _t0F60 = 0.1e1;
    vec4 _t0F61 = [_t0F5D, _t0F5E, _t0F5F, _t0F60];
    tensor[4,4] _t0F62 = [_t0F52, _t0F57, _t0F5C, _t0F61];
    tensor[4,4][6] _t0F63 = {_t0EF9, _t0F0E, _t0F23, _t0F38, _t0F4D, _t0F62};
    real _t0F64 = 0.1e1;
    real _t0F65 = 0.e0;
    real _t0F66 = 0.e0;
    real _t0F67 = 0.e0;
    vec4 _t0F68 = [_t0F64, _t0F65, _t0F66, _t0F67];
    real _t0F69 = 0.e0;
    real _t0F6A = 0.1e1;
    real _t0F6B = 0.e0;
    real _t0F6C = 0.e0;
    vec4 _t0F6D = [_t0F69, _t0F6A, _t0F6B, _t0F6C];
    real _t0F6E = 0.e0;
    real _t0F6F = 0.e0;
    real _t0F70 = 0.1e1;
    real _t0F71 = -0.1e1;
    vec4 _t0F72 = [_t0F6E, _t0F6F, _t0F70, _t0F71];
    real _t0F73 = 0.e0;
    real _t0F74 = 0.e0;
    real _t0F75 = 0.e0;
    real _t0F76 = 0.1e1;
    vec4 _t0F77 = [_t0F73, _t0F74, _t0F75, _t0F76];
    tensor[4,4] _t0F78 = [_t0F68, _t0F6D, _t0F72, _t0F77];
    real _t0F79 = 0.1e1;
    real _t0F7A = 0.e0;
    real _t0F7B = 0.e0;
    real _t0F7C = 0.e0;
    vec4 _t0F7D = [_t0F79, _t0F7A, _t0F7B, _t0F7C];
    real _t0F7E = 0.e0;
    real _t0F7F = 0.1e1;
    real _t0F80 = 0.e0;
    real _t0F81 = 0.e0;
    vec4 _t0F82 = [_t0F7E, _t0F7F, _t0F80, _t0F81];
    real _t0F83 = 0.e0;
    real _t0F84 = 0.e0;
    real _t0F85 = 0.1e1;
    real _t0F86 = 0.e0;
    vec4 _t0F87 = [_t0F83, _t0F84, _t0F85, _t0F86];
    real _t0F88 = 0.e0;
    real _t0F89 = 0.e0;
    real _t0F8A = 0.e0;
    real _t0F8B = 0.1e1;
    vec4 _t0F8C = [_t0F88, _t0F89, _t0F8A, _t0F8B];
    tensor[4,4] _t0F8D = [_t0F7D, _t0F82, _t0F87, _t0F8C];
    real _t0F8E = 0.e0;
    real _t0F8F = 0.1e1;
    real _t0F90 = 0.e0;
    real _t0F91 = 0.e0;
    vec4 _t0F92 = [_t0F8E, _t0F8F, _t0F90, _t0F91];
    real _t0F93 = 0.e0;
    real _t0F94 = 0.e0;
    real _t0F95 = 0.1e1;
    real _t0F96 = -0.1e1;
    vec4 _t0F97 = [_t0F93, _t0F94, _t0F95, _t0F96];
    real _t0F98 = 0.1e1;
    real _t0F99 = -0.1e1;
    real _t0F9A = 0.e0;
    real _t0F9B = -0.5e0;
    vec4 _t0F9C = [_t0F98, _t0F99, _t0F9A, _t0F9B];
    real _t0F9D = 0.e0;
    real _t0F9E = 0.e0;
    real _t0F9F = 0.e0;
    real _t0FA0 = 0.1e1;
    vec4 _t0FA1 = [_t0F9D, _t0F9E, _t0F9F, _t0FA0];
    tensor[4,4] _t0FA2 = [_t0F92, _t0F97, _t0F9C, _t0FA1];
    real _t0FA3 = 0.e0;
    real _t0FA4 = 0.e0;
    real _t0FA5 = -0.1e1;
    real _t0FA6 = 0.1e1;
    vec4 _t0FA7 = [_t0FA3, _t0FA4, _t0FA5, _t0FA6];
    real _t0FA8 = 0.e0;
    real _t0FA9 = 0.1e1;
    real _t0FAA = 0.e0;
    real _t0FAB = 0.e0;
    vec4 _t0FAC = [_t0FA8, _t0FA9, _t0FAA, _t0FAB];
    real _t0FAD = 0.1e1;
    real _t0FAE = -0.1e1;
    real _t0FAF = 0.e0;
    real _t0FB0 = -0.5e0;
    vec4 _t0FB1 = [_t0FAD, _t0FAE, _t0FAF, _t0FB0];
    real _t0FB2 = 0.e0;
    real _t0FB3 = 0.e0;
    real _t0FB4 = 0.e0;
    real _t0FB5 = 0.1e1;
    vec4 _t0FB6 = [_t0FB2, _t0FB3, _t0FB4, _t0FB5];
    tensor[4,4] _t0FB7 = [_t0FA7, _t0FAC, _t0FB1, _t0FB6];
    real _t0FB8 = 0.e0;
    real _t0FB9 = -0.1e1;
    real _t0FBA = 0.e0;
    real _t0FBB = 0.e0;
    vec4 _t0FBC = [_t0FB8, _t0FB9, _t0FBA, _t0FBB];
    real _t0FBD = 0.e0;
    real _t0FBE = 0.e0;
    real _t0FBF = -0.1e1;
    real _t0FC0 = 0.1e1;
    vec4 _t0FC1 = [_t0FBD, _t0FBE, _t0FBF, _t0FC0];
    real _t0FC2 = 0.1e1;
    real _t0FC3 = -0.1e1;
    real _t0FC4 = 0.e0;
    real _t0FC5 = -0.5e0;
    vec4 _t0FC6 = [_t0FC2, _t0FC3, _t0FC4, _t0FC5];
    real _t0FC7 = 0.e0;
    real _t0FC8 = 0.e0;
    real _t0FC9 = 0.e0;
    real _t0FCA = 0.1e1;
    vec4 _t0FCB = [_t0FC7, _t0FC8, _t0FC9, _t0FCA];
    tensor[4,4] _t0FCC = [_t0FBC, _t0FC1, _t0FC6, _t0FCB];
    real _t0FCD = 0.e0;
    real _t0FCE = 0.e0;
    real _t0FCF = 0.1e1;
    real _t0FD0 = -0.1e1;
    vec4 _t0FD1 = [_t0FCD, _t0FCE, _t0FCF, _t0FD0];
    real _t0FD2 = 0.e0;
    real _t0FD3 = -0.1e1;
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.e0;
    vec4 _t0FD6 = [_t0FD2, _t0FD3, _t0FD4, _t0FD5];
    real _t0FD7 = 0.1e1;
    real _t0FD8 = -0.1e1;
    real _t0FD9 = 0.e0;
    real _t0FDA = -0.5e0;
    vec4 _t0FDB = [_t0FD7, _t0FD8, _t0FD9, _t0FDA];
    real _t0FDC = 0.e0;
    real _t0FDD = 0.e0;
    real _t0FDE = 0.e0;
    real _t0FDF = 0.1e1;
    vec4 _t0FE0 = [_t0FDC, _t0FDD, _t0FDE, _t0FDF];
    tensor[4,4] _t0FE1 = [_t0FD1, _t0FD6, _t0FDB, _t0FE0];
    tensor[4,4][6] _t0FE2 = {_t0F78, _t0F8D, _t0FA2, _t0FB7, _t0FCC, _t0FE1};
    real _t0FE3 = 0.1e1;
    real _t0FE4 = 0.e0;
    real _t0FE5 = 0.1e1;
    real _t0FE6 = 0.5e0;
    vec4 _t0FE7 = [_t0FE3, _t0FE4, _t0FE5, _t0FE6];
    real _t0FE8 = 0.1e1;
    real _t0FE9 = 0.e0;
    real _t0FEA = 0.e0;
    real _t0FEB = 0.e0;
    vec4 _t0FEC = [_t0FE8, _t0FE9, _t0FEA, _t0FEB];
    real _t0FED = 0.e0;
    real _t0FEE = 0.1e1;
    real _t0FEF = 0.e0;
    real _t0FF0 = 0.e0;
    vec4 _t0FF1 = [_t0FED, _t0FEE, _t0FEF, _t0FF0];
    real _t0FF2 = 0.e0;
    real _t0FF3 = 0.e0;
    real _t0FF4 = 0.e0;
    real _t0FF5 = 0.1e1;
    vec4 _t0FF6 = [_t0FF2, _t0FF3, _t0FF4, _t0FF5];
    tensor[4,4] _t0FF7 = [_t0FE7, _t0FEC, _t0FF1, _t0FF6];
    real _t0FF8 = 0.1e1;
    real _t0FF9 = 0.e0;
    real _t0FFA = 0.1e1;
    real _t0FFB = 0.5e0;
    vec4 _t0FFC = [_t0FF8, _t0FF9, _t0FFA, _t0FFB];
    real _t0FFD = 0.1e1;
    real _t0FFE = 0.e0;
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    vec4 _t1001 = [_t0FFD, _t0FFE, _t0FFF, _t1000];
    real _t1002 = 0.e0;
    real _t1003 = 0.1e1;
    real _t1004 = 0.e0;
    real _t1005 = 0.1e1;
    vec4 _t1006 = [_t1002, _t1003, _t1004, _t1005];
    real _t1007 = 0.e0;
    real _t1008 = 0.e0;
    real _t1009 = 0.e0;
    real _t100A = 0.1e1;
    vec4 _t100B = [_t1007, _t1008, _t1009, _t100A];
    tensor[4,4] _t100C = [_t0FFC, _t1001, _t1006, _t100B];
    real _t100D = 0.1e1;
    real _t100E = 0.e0;
    real _t100F = 0.e0;
    real _t1010 = 0.e0;
    vec4 _t1011 = [_t100D, _t100E, _t100F, _t1010];
    real _t1012 = 0.e0;
    real _t1013 = 0.1e1;
    real _t1014 = 0.e0;
    real _t1015 = 0.e0;
    vec4 _t1016 = [_t1012, _t1013, _t1014, _t1015];
    real _t1017 = 0.e0;
    real _t1018 = 0.e0;
    real _t1019 = 0.1e1;
    real _t101A = 0.e0;
    vec4 _t101B = [_t1017, _t1018, _t1019, _t101A];
    real _t101C = 0.e0;
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.1e1;
    vec4 _t1020 = [_t101C, _t101D, _t101E, _t101F];
    tensor[4,4] _t1021 = [_t1011, _t1016, _t101B, _t1020];
    real _t1022 = 0.e0;
    real _t1023 = -0.1e1;
    real _t1024 = 0.e0;
    real _t1025 = 0.e0;
    vec4 _t1026 = [_t1022, _t1023, _t1024, _t1025];
    real _t1027 = 0.1e1;
    real _t1028 = 0.e0;
    real _t1029 = 0.e0;
    real _t102A = 0.e0;
    vec4 _t102B = [_t1027, _t1028, _t1029, _t102A];
    real _t102C = 0.e0;
    real _t102D = 0.e0;
    real _t102E = 0.1e1;
    real _t102F = 0.e0;
    vec4 _t1030 = [_t102C, _t102D, _t102E, _t102F];
    real _t1031 = 0.e0;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.1e1;
    vec4 _t1035 = [_t1031, _t1032, _t1033, _t1034];
    tensor[4,4] _t1036 = [_t1026, _t102B, _t1030, _t1035];
    real _t1037 = -0.1e1;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    real _t103A = 0.e0;
    vec4 _t103B = [_t1037, _t1038, _t1039, _t103A];
    real _t103C = 0.e0;
    real _t103D = -0.1e1;
    real _t103E = 0.e0;
    real _t103F = 0.e0;
    vec4 _t1040 = [_t103C, _t103D, _t103E, _t103F];
    real _t1041 = 0.e0;
    real _t1042 = 0.e0;
    real _t1043 = 0.1e1;
    real _t1044 = 0.e0;
    vec4 _t1045 = [_t1041, _t1042, _t1043, _t1044];
    real _t1046 = 0.e0;
    real _t1047 = 0.e0;
    real _t1048 = 0.e0;
    real _t1049 = 0.1e1;
    vec4 _t104A = [_t1046, _t1047, _t1048, _t1049];
    tensor[4,4] _t104B = [_t103B, _t1040, _t1045, _t104A];
    real _t104C = 0.e0;
    real _t104D = 0.1e1;
    real _t104E = 0.e0;
    real _t104F = 0.e0;
    vec4 _t1050 = [_t104C, _t104D, _t104E, _t104F];
    real _t1051 = -0.1e1;
    real _t1052 = 0.e0;
    real _t1053 = 0.e0;
    real _t1054 = 0.e0;
    vec4 _t1055 = [_t1051, _t1052, _t1053, _t1054];
    real _t1056 = 0.e0;
    real _t1057 = 0.e0;
    real _t1058 = 0.1e1;
    real _t1059 = 0.e0;
    vec4 _t105A = [_t1056, _t1057, _t1058, _t1059];
    real _t105B = 0.e0;
    real _t105C = 0.e0;
    real _t105D = 0.e0;
    real _t105E = 0.1e1;
    vec4 _t105F = [_t105B, _t105C, _t105D, _t105E];
    tensor[4,4] _t1060 = [_t1050, _t1055, _t105A, _t105F];
    tensor[4,4][6] _t1061 = {_t0FF7, _t100C, _t1021, _t1036, _t104B, _t1060};
    real _t1062 = 0.e0;
    real _t1063 = 0.1e1;
    real _t1064 = 0.1e1;
    real _t1065 = 0.5e0;
    vec4 _t1066 = [_t1062, _t1063, _t1064, _t1065];
    real _t1067 = 0.e0;
    real _t1068 = 0.1e1;
    real _t1069 = 0.e0;
    real _t106A = 0.e0;
    vec4 _t106B = [_t1067, _t1068, _t1069, _t106A];
    real _t106C = -0.1e1;
    real _t106D = 0.e0;
    real _t106E = 0.e0;
    real _t106F = 0.e0;
    vec4 _t1070 = [_t106C, _t106D, _t106E, _t106F];
    real _t1071 = 0.e0;
    real _t1072 = 0.e0;
    real _t1073 = 0.e0;
    real _t1074 = 0.1e1;
    vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
    tensor[4,4] _t1076 = [_t1066, _t106B, _t1070, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.1e1;
    real _t1079 = 0.1e1;
    real _t107A = 0.5e0;
    vec4 _t107B = [_t1077, _t1078, _t1079, _t107A];
    real _t107C = 0.e0;
    real _t107D = 0.1e1;
    real _t107E = 0.e0;
    real _t107F = 0.e0;
    vec4 _t1080 = [_t107C, _t107D, _t107E, _t107F];
    real _t1081 = -0.1e1;
    real _t1082 = 0.e0;
    real _t1083 = 0.e0;
    real _t1084 = 0.1e1;
    vec4 _t1085 = [_t1081, _t1082, _t1083, _t1084];
    real _t1086 = 0.e0;
    real _t1087 = 0.e0;
    real _t1088 = 0.e0;
    real _t1089 = 0.1e1;
    vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
    tensor[4,4] _t108B = [_t107B, _t1080, _t1085, _t108A];
    real _t108C = 0.e0;
    real _t108D = 0.1e1;
    real _t108E = 0.e0;
    real _t108F = 0.e0;
    vec4 _t1090 = [_t108C, _t108D, _t108E, _t108F];
    real _t1091 = -0.1e1;
    real _t1092 = 0.e0;
    real _t1093 = 0.e0;
    real _t1094 = 0.e0;
    vec4 _t1095 = [_t1091, _t1092, _t1093, _t1094];
    real _t1096 = 0.e0;
    real _t1097 = 0.e0;
    real _t1098 = 0.1e1;
    real _t1099 = 0.e0;
    vec4 _t109A = [_t1096, _t1097, _t1098, _t1099];
    real _t109B = 0.e0;
    real _t109C = 0.e0;
    real _t109D = 0.e0;
    real _t109E = 0.1e1;
    vec4 _t109F = [_t109B, _t109C, _t109D, _t109E];
    tensor[4,4] _t10A0 = [_t1090, _t1095, _t109A, _t109F];
    real _t10A1 = 0.1e1;
    real _t10A2 = 0.e0;
    real _t10A3 = 0.e0;
    real _t10A4 = 0.e0;
    vec4 _t10A5 = [_t10A1, _t10A2, _t10A3, _t10A4];
    real _t10A6 = 0.e0;
    real _t10A7 = 0.1e1;
    real _t10A8 = 0.e0;
    real _t10A9 = 0.e0;
    vec4 _t10AA = [_t10A6, _t10A7, _t10A8, _t10A9];
    real _t10AB = 0.e0;
    real _t10AC = 0.e0;
    real _t10AD = 0.1e1;
    real _t10AE = 0.e0;
    vec4 _t10AF = [_t10AB, _t10AC, _t10AD, _t10AE];
    real _t10B0 = 0.e0;
    real _t10B1 = 0.e0;
    real _t10B2 = 0.e0;
    real _t10B3 = 0.1e1;
    vec4 _t10B4 = [_t10B0, _t10B1, _t10B2, _t10B3];
    tensor[4,4] _t10B5 = [_t10A5, _t10AA, _t10AF, _t10B4];
    real _t10B6 = 0.e0;
    real _t10B7 = -0.1e1;
    real _t10B8 = 0.e0;
    real _t10B9 = 0.e0;
    vec4 _t10BA = [_t10B6, _t10B7, _t10B8, _t10B9];
    real _t10BB = 0.1e1;
    real _t10BC = 0.e0;
    real _t10BD = 0.e0;
    real _t10BE = 0.e0;
    vec4 _t10BF = [_t10BB, _t10BC, _t10BD, _t10BE];
    real _t10C0 = 0.e0;
    real _t10C1 = 0.e0;
    real _t10C2 = 0.1e1;
    real _t10C3 = 0.e0;
    vec4 _t10C4 = [_t10C0, _t10C1, _t10C2, _t10C3];
    real _t10C5 = 0.e0;
    real _t10C6 = 0.e0;
    real _t10C7 = 0.e0;
    real _t10C8 = 0.1e1;
    vec4 _t10C9 = [_t10C5, _t10C6, _t10C7, _t10C8];
    tensor[4,4] _t10CA = [_t10BA, _t10BF, _t10C4, _t10C9];
    real _t10CB = -0.1e1;
    real _t10CC = 0.e0;
    real _t10CD = 0.e0;
    real _t10CE = 0.e0;
    vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
    real _t10D0 = 0.e0;
    real _t10D1 = -0.1e1;
    real _t10D2 = 0.e0;
    real _t10D3 = 0.e0;
    vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
    real _t10D5 = 0.e0;
    real _t10D6 = 0.e0;
    real _t10D7 = 0.1e1;
    real _t10D8 = 0.e0;
    vec4 _t10D9 = [_t10D5, _t10D6, _t10D7, _t10D8];
    real _t10DA = 0.e0;
    real _t10DB = 0.e0;
    real _t10DC = 0.e0;
    real _t10DD = 0.1e1;
    vec4 _t10DE = [_t10DA, _t10DB, _t10DC, _t10DD];
    tensor[4,4] _t10DF = [_t10CF, _t10D4, _t10D9, _t10DE];
    tensor[4,4][6] _t10E0 = {_t1076, _t108B, _t10A0, _t10B5, _t10CA, _t10DF};
    real _t10E1 = -0.1e1;
    real _t10E2 = 0.e0;
    real _t10E3 = 0.1e1;
    real _t10E4 = 0.5e0;
    vec4 _t10E5 = [_t10E1, _t10E2, _t10E3, _t10E4];
    real _t10E6 = -0.1e1;
    real _t10E7 = 0.e0;
    real _t10E8 = 0.e0;
    real _t10E9 = 0.e0;
    vec4 _t10EA = [_t10E6, _t10E7, _t10E8, _t10E9];
    real _t10EB = 0.e0;
    real _t10EC = -0.1e1;
    real _t10ED = 0.e0;
    real _t10EE = 0.e0;
    vec4 _t10EF = [_t10EB, _t10EC, _t10ED, _t10EE];
    real _t10F0 = 0.e0;
    real _t10F1 = 0.e0;
    real _t10F2 = 0.e0;
    real _t10F3 = 0.1e1;
    vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
    tensor[4,4] _t10F5 = [_t10E5, _t10EA, _t10EF, _t10F4];
    real _t10F6 = -0.1e1;
    real _t10F7 = 0.e0;
    real _t10F8 = 0.1e1;
    real _t10F9 = 0.5e0;
    vec4 _t10FA = [_t10F6, _t10F7, _t10F8, _t10F9];
    real _t10FB = -0.1e1;
    real _t10FC = 0.e0;
    real _t10FD = 0.e0;
    real _t10FE = 0.e0;
    vec4 _t10FF = [_t10FB, _t10FC, _t10FD, _t10FE];
    real _t1100 = 0.e0;
    real _t1101 = -0.1e1;
    real _t1102 = 0.e0;
    real _t1103 = 0.1e1;
    vec4 _t1104 = [_t1100, _t1101, _t1102, _t1103];
    real _t1105 = 0.e0;
    real _t1106 = 0.e0;
    real _t1107 = 0.e0;
    real _t1108 = 0.1e1;
    vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
    tensor[4,4] _t110A = [_t10FA, _t10FF, _t1104, _t1109];
    real _t110B = -0.1e1;
    real _t110C = 0.e0;
    real _t110D = 0.e0;
    real _t110E = 0.e0;
    vec4 _t110F = [_t110B, _t110C, _t110D, _t110E];
    real _t1110 = 0.e0;
    real _t1111 = -0.1e1;
    real _t1112 = 0.e0;
    real _t1113 = 0.e0;
    vec4 _t1114 = [_t1110, _t1111, _t1112, _t1113];
    real _t1115 = 0.e0;
    real _t1116 = 0.e0;
    real _t1117 = 0.1e1;
    real _t1118 = 0.e0;
    vec4 _t1119 = [_t1115, _t1116, _t1117, _t1118];
    real _t111A = 0.e0;
    real _t111B = 0.e0;
    real _t111C = 0.e0;
    real _t111D = 0.1e1;
    vec4 _t111E = [_t111A, _t111B, _t111C, _t111D];
    tensor[4,4] _t111F = [_t110F, _t1114, _t1119, _t111E];
    real _t1120 = 0.e0;
    real _t1121 = 0.1e1;
    real _t1122 = 0.e0;
    real _t1123 = 0.e0;
    vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
    real _t1125 = -0.1e1;
    real _t1126 = 0.e0;
    real _t1127 = 0.e0;
    real _t1128 = 0.e0;
    vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
    real _t112A = 0.e0;
    real _t112B = 0.e0;
    real _t112C = 0.1e1;
    real _t112D = 0.e0;
    vec4 _t112E = [_t112A, _t112B, _t112C, _t112D];
    real _t112F = 0.e0;
    real _t1130 = 0.e0;
    real _t1131 = 0.e0;
    real _t1132 = 0.1e1;
    vec4 _t1133 = [_t112F, _t1130, _t1131, _t1132];
    tensor[4,4] _t1134 = [_t1124, _t1129, _t112E, _t1133];
    real _t1135 = 0.1e1;
    real _t1136 = 0.e0;
    real _t1137 = 0.e0;
    real _t1138 = 0.e0;
    vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
    real _t113A = 0.e0;
    real _t113B = 0.1e1;
    real _t113C = 0.e0;
    real _t113D = 0.e0;
    vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
    real _t113F = 0.e0;
    real _t1140 = 0.e0;
    real _t1141 = 0.1e1;
    real _t1142 = 0.e0;
    vec4 _t1143 = [_t113F, _t1140, _t1141, _t1142];
    real _t1144 = 0.e0;
    real _t1145 = 0.e0;
    real _t1146 = 0.e0;
    real _t1147 = 0.1e1;
    vec4 _t1148 = [_t1144, _t1145, _t1146, _t1147];
    tensor[4,4] _t1149 = [_t1139, _t113E, _t1143, _t1148];
    real _t114A = 0.e0;
    real _t114B = -0.1e1;
    real _t114C = 0.e0;
    real _t114D = 0.e0;
    vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
    real _t114F = 0.1e1;
    real _t1150 = 0.e0;
    real _t1151 = 0.e0;
    real _t1152 = 0.e0;
    vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
    real _t1154 = 0.e0;
    real _t1155 = 0.e0;
    real _t1156 = 0.1e1;
    real _t1157 = 0.e0;
    vec4 _t1158 = [_t1154, _t1155, _t1156, _t1157];
    real _t1159 = 0.e0;
    real _t115A = 0.e0;
    real _t115B = 0.e0;
    real _t115C = 0.1e1;
    vec4 _t115D = [_t1159, _t115A, _t115B, _t115C];
    tensor[4,4] _t115E = [_t114E, _t1153, _t1158, _t115D];
    tensor[4,4][6] _t115F = {_t10F5, _t110A, _t111F, _t1134, _t1149, _t115E};
    real _t1160 = 0.e0;
    real _t1161 = -0.1e1;
    real _t1162 = 0.1e1;
    real _t1163 = 0.5e0;
    vec4 _t1164 = [_t1160, _t1161, _t1162, _t1163];
    real _t1165 = 0.e0;
    real _t1166 = -0.1e1;
    real _t1167 = 0.e0;
    real _t1168 = 0.e0;
    vec4 _t1169 = [_t1165, _t1166, _t1167, _t1168];
    real _t116A = 0.1e1;
    real _t116B = 0.e0;
    real _t116C = 0.e0;
    real _t116D = 0.e0;
    vec4 _t116E = [_t116A, _t116B, _t116C, _t116D];
    real _t116F = 0.e0;
    real _t1170 = 0.e0;
    real _t1171 = 0.e0;
    real _t1172 = 0.1e1;
    vec4 _t1173 = [_t116F, _t1170, _t1171, _t1172];
    tensor[4,4] _t1174 = [_t1164, _t1169, _t116E, _t1173];
    real _t1175 = 0.e0;
    real _t1176 = -0.1e1;
    real _t1177 = 0.1e1;
    real _t1178 = 0.5e0;
    vec4 _t1179 = [_t1175, _t1176, _t1177, _t1178];
    real _t117A = 0.e0;
    real _t117B = -0.1e1;
    real _t117C = 0.e0;
    real _t117D = 0.e0;
    vec4 _t117E = [_t117A, _t117B, _t117C, _t117D];
    real _t117F = 0.1e1;
    real _t1180 = 0.e0;
    real _t1181 = 0.e0;
    real _t1182 = 0.1e1;
    vec4 _t1183 = [_t117F, _t1180, _t1181, _t1182];
    real _t1184 = 0.e0;
    real _t1185 = 0.e0;
    real _t1186 = 0.e0;
    real _t1187 = 0.1e1;
    vec4 _t1188 = [_t1184, _t1185, _t1186, _t1187];
    tensor[4,4] _t1189 = [_t1179, _t117E, _t1183, _t1188];
    real _t118A = 0.e0;
    real _t118B = -0.1e1;
    real _t118C = 0.e0;
    real _t118D = 0.e0;
    vec4 _t118E = [_t118A, _t118B, _t118C, _t118D];
    real _t118F = 0.1e1;
    real _t1190 = 0.e0;
    real _t1191 = 0.e0;
    real _t1192 = 0.e0;
    vec4 _t1193 = [_t118F, _t1190, _t1191, _t1192];
    real _t1194 = 0.e0;
    real _t1195 = 0.e0;
    real _t1196 = 0.1e1;
    real _t1197 = 0.e0;
    vec4 _t1198 = [_t1194, _t1195, _t1196, _t1197];
    real _t1199 = 0.e0;
    real _t119A = 0.e0;
    real _t119B = 0.e0;
    real _t119C = 0.1e1;
    vec4 _t119D = [_t1199, _t119A, _t119B, _t119C];
    tensor[4,4] _t119E = [_t118E, _t1193, _t1198, _t119D];
    real _t119F = -0.1e1;
    real _t11A0 = 0.e0;
    real _t11A1 = 0.e0;
    real _t11A2 = 0.e0;
    vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
    real _t11A4 = 0.e0;
    real _t11A5 = -0.1e1;
    real _t11A6 = 0.e0;
    real _t11A7 = 0.e0;
    vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
    real _t11A9 = 0.e0;
    real _t11AA = 0.e0;
    real _t11AB = 0.1e1;
    real _t11AC = 0.e0;
    vec4 _t11AD = [_t11A9, _t11AA, _t11AB, _t11AC];
    real _t11AE = 0.e0;
    real _t11AF = 0.e0;
    real _t11B0 = 0.e0;
    real _t11B1 = 0.1e1;
    vec4 _t11B2 = [_t11AE, _t11AF, _t11B0, _t11B1];
    tensor[4,4] _t11B3 = [_t11A3, _t11A8, _t11AD, _t11B2];
    real _t11B4 = 0.e0;
    real _t11B5 = 0.1e1;
    real _t11B6 = 0.e0;
    real _t11B7 = 0.e0;
    vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
    real _t11B9 = -0.1e1;
    real _t11BA = 0.e0;
    real _t11BB = 0.e0;
    real _t11BC = 0.e0;
    vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
    real _t11BE = 0.e0;
    real _t11BF = 0.e0;
    real _t11C0 = 0.1e1;
    real _t11C1 = 0.e0;
    vec4 _t11C2 = [_t11BE, _t11BF, _t11C0, _t11C1];
    real _t11C3 = 0.e0;
    real _t11C4 = 0.e0;
    real _t11C5 = 0.e0;
    real _t11C6 = 0.1e1;
    vec4 _t11C7 = [_t11C3, _t11C4, _t11C5, _t11C6];
    tensor[4,4] _t11C8 = [_t11B8, _t11BD, _t11C2, _t11C7];
    real _t11C9 = 0.1e1;
    real _t11CA = 0.e0;
    real _t11CB = 0.e0;
    real _t11CC = 0.e0;
    vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
    real _t11CE = 0.e0;
    real _t11CF = 0.1e1;
    real _t11D0 = 0.e0;
    real _t11D1 = 0.e0;
    vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
    real _t11D3 = 0.e0;
    real _t11D4 = 0.e0;
    real _t11D5 = 0.1e1;
    real _t11D6 = 0.e0;
    vec4 _t11D7 = [_t11D3, _t11D4, _t11D5, _t11D6];
    real _t11D8 = 0.e0;
    real _t11D9 = 0.e0;
    real _t11DA = 0.e0;
    real _t11DB = 0.1e1;
    vec4 _t11DC = [_t11D8, _t11D9, _t11DA, _t11DB];
    tensor[4,4] _t11DD = [_t11CD, _t11D2, _t11D7, _t11DC];
    tensor[4,4][6] _t11DE = {_t1174, _t1189, _t119E, _t11B3, _t11C8, _t11DD};
    tensor[4,4][6][6] _t11DF = {_t0F63, _t0FE2, _t1061, _t10E0, _t115F, _t11DE};
    real _t11E0 = time059F[1];
    int _t11E1 = prim $r2i01B7 (_t11E0);
    tensor[4,4][6] _t11E2 = prim $sub01C0<tensor[4,4][6]; %6> (_t11DF, _t11E1);
    real _t11E3 = time059F[1];
    int _t11E4 = prim $r2i01B7 (_t11E3);
    int[2] _t11E5 = func nextCell405A3 (_t11E4, cellId059C, mesh059B);
    int _t11E6 = 1;
    int _t11E7 = prim $sub01C0<int; %2> (_t11E5, _t11E6);
    tensor[4,4] _t11E8 = prim $sub01C0<tensor[4,4]; %6> (_t11E2, _t11E7);
    real _t11E9 = time059F[0];
    vec3 _t11EA = prim *0036<$[3]> (_t11E9, dPos059E);
    vec3 _t11EB = prim +0017<$[3]> (_t11EA, refPos059D);
    real _t11EC = _t11EB[0];
    real _t11ED = time059F[0];
    vec3 _t11EE = prim *0036<$[3]> (_t11ED, dPos059E);
    vec3 _t11EF = prim +0017<$[3]> (_t11EE, refPos059D);
    real _t11F0 = _t11EF[1];
    real _t11F1 = time059F[0];
    vec3 _t11F2 = prim *0036<$[3]> (_t11F1, dPos059E);
    vec3 _t11F3 = prim +0017<$[3]> (_t11F2, refPos059D);
    real _t11F4 = _t11F3[2];
    real _t11F5 = 0.1e1;
    vec4 _t11F6 = [_t11EC, _t11F0, _t11F4, _t11F5];
    vec4 _t11F7 = prim •00CE<$[4,4]; $[4]; $[4]> (_t11E8, _t11F6);
    real _t11F8 = _t11F7[2];
    vec3 _t11F9 = [_t0BD0, _t0EE4, _t11F8];
    real _t11FA = time059F[1];
    int _t11FB = prim $r2i01B7 (_t11FA);
    int[2] _t11FC = func nextCell405A3 (_t11FB, cellId059C, mesh059B);
    int _t11FD = 1;
    int _t11FE = prim $sub01C0<int; %2> (_t11FC, _t11FD);
    Femdata: MeshPos _t11FF = extractFemItemN((mesh059B, _t08BC, _t11F9, _t11FE),RefBuild(Mesh),);
    return _t11FF;
  } else {
    real _t1200 = time059F[0];
    vec3 _t1201 = prim *0036<$[3]> (_t1200, dPos059E);
    vec3 _t1202 = prim +0017<$[3]> (_t1201, refPos059D);
    Femdata: MeshPos _t1203 = extractFemItemN((mesh059B, _t1202),InvalidBuildBoundary(MeshPos),);
    return _t1203;
  }
}
function int[2]#8 nextCell405A3 (int faceIdx1204, int cell1205, Femdata: Mesh mesh1206)
{
  int _t1207 = 12;
  int _t1208 = prim *0033 (cell1205, _t1207);
  int _t1209 = 2;
  int _t120A = prim *0033 (faceIdx1204, _t1209);
  int _t120B = prim +0015 (_t1208, _t120A);
  int[2] _t120C = extractFemItemN((mesh1206, _t120B),CellFaceCell(Mesh),);
  return _t120C;
}
function vec2#0 _enter120D (vec3 refPos120E, vec3 dPos120F)
{
  real time1210 = +inf;
  int face1211 = -1;
  real faceTime1212 = -inf;
  real _t1213 = -0.5e0;
  real _t1214 = 0.e0;
  real _t1215 = 0.e0;
  real _t1216 = 0.1e1;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos120E);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = 0.e0;
  real _t121B = 0.e0;
  real _t121C = 0.1e1;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos120F);
  real _t121F = prim /0055 (_t1219, _t121E);
  real _t1220 = -0.1e-15;
  bool _t1221 = prim >=007E (_t121F, _t1220);
  real _t1222 = -0.5e0;
  real _t1223 = 0.e0;
  real _t1224 = 0.e0;
  real _t1225 = 0.1e1;
  vec3 _t1226 = [_t1223, _t1224, _t1225];
  real _t1227 = prim •00CE<$[3]; $[3]; $[]> (_t1226, refPos120E);
  real _t1228 = prim -0026<$[]> (_t1222, _t1227);
  real _t1229 = 0.e0;
  real _t122A = 0.e0;
  real _t122B = 0.1e1;
  vec3 _t122C = [_t1229, _t122A, _t122B];
  real _t122D = prim •00CE<$[3]; $[3]; $[]> (_t122C, dPos120F);
  real _t122E = prim /0055 (_t1228, _t122D);
  bool _t122F = prim >0080 (time1210, _t122E);
  real _t1230 = 0.e0;
  real _t1231 = 0.e0;
  real _t1232 = 0.1e1;
  vec3 _t1233 = [_t1230, _t1231, _t1232];
  real _t1234 = prim •00CE<$[3]; $[3]; $[]> (_t1233, dPos120F);
  real _t1235 = prim |()|00B5<$[]> (_t1234);
  real _t1236 = 0.1e-20;
  bool _t1237 = prim >=007E (_t1235, _t1236);
  bool _t1238 = prim $and01C4 (_t122F, _t1237);
  bool _t1239 = prim $and01C4 (_t1221, _t1238);
  if _t1239 {
    real _t123A = -0.5e0;
    real _t123B = 0.e0;
    real _t123C = 0.e0;
    real _t123D = 0.1e1;
    vec3 _t123E = [_t123B, _t123C, _t123D];
    real _t123F = prim •00CE<$[3]; $[3]; $[]> (_t123E, refPos120E);
    real _t1240 = prim -0026<$[]> (_t123A, _t123F);
    real _t1241 = 0.e0;
    real _t1242 = 0.e0;
    real _t1243 = 0.1e1;
    vec3 _t1244 = [_t1241, _t1242, _t1243];
    real _t1245 = prim •00CE<$[3]; $[3]; $[]> (_t1244, dPos120F);
    real _t1246 = prim /0055 (_t1240, _t1245);
    vec3 _t1247 = prim *0038<$[3]> (dPos120F, _t1246);
    vec3 _t1248 = prim +0017<$[3]> (refPos120E, _t1247);
    real _t1249 = -0.5e0;
    real _t124A = 0.e0;
    real _t124B = 0.e0;
    real _t124C = 0.1e1;
    vec3 _t124D = [_t124A, _t124B, _t124C];
    real _t124E = prim •00CE<$[3]; $[3]; $[]> (_t124D, refPos120E);
    real _t124F = prim -0026<$[]> (_t1249, _t124E);
    real _t1250 = 0.e0;
    real _t1251 = 0.e0;
    real _t1252 = 0.1e1;
    vec3 _t1253 = [_t1250, _t1251, _t1252];
    real _t1254 = prim •00CE<$[3]; $[3]; $[]> (_t1253, dPos120F);
    real _t1255 = prim /0055 (_t124F, _t1254);
    vec3 _t1256 = prim *0038<$[3]> (dPos120F, _t1255);
    vec3 _t1257 = prim +0017<$[3]> (refPos120E, _t1256);
    real _t1258 = 0.1e-8;
    bool _t1259 = extractFemItemN((_t1248, _t1257, _t1258),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1259 {
      real _t125A = -0.5e0;
      real _t125B = 0.e0;
      real _t125C = 0.e0;
      real _t125D = 0.1e1;
      vec3 _t125E = [_t125B, _t125C, _t125D];
      real _t125F = prim •00CE<$[3]; $[3]; $[]> (_t125E, refPos120E);
      real _t1260 = prim -0026<$[]> (_t125A, _t125F);
      real _t1261 = 0.e0;
      real _t1262 = 0.e0;
      real _t1263 = 0.1e1;
      vec3 _t1264 = [_t1261, _t1262, _t1263];
      real _t1265 = prim •00CE<$[3]; $[3]; $[]> (_t1264, dPos120F);
      time1210 = prim /0055 (_t1260, _t1265);
      face1211 = 0;
    }
  }
  real _t1266 = 0.5e0;
  real _t1267 = 0.e0;
  real _t1268 = 0.e0;
  real _t1269 = 0.1e1;
  vec3 _t126A = [_t1267, _t1268, _t1269];
  real _t126B = prim •00CE<$[3]; $[3]; $[]> (_t126A, refPos120E);
  real _t126C = prim -0026<$[]> (_t1266, _t126B);
  real _t126D = 0.e0;
  real _t126E = 0.e0;
  real _t126F = 0.1e1;
  vec3 _t1270 = [_t126D, _t126E, _t126F];
  real _t1271 = prim •00CE<$[3]; $[3]; $[]> (_t1270, dPos120F);
  real _t1272 = prim /0055 (_t126C, _t1271);
  real _t1273 = -0.1e-15;
  bool _t1274 = prim >=007E (_t1272, _t1273);
  real _t1275 = 0.5e0;
  real _t1276 = 0.e0;
  real _t1277 = 0.e0;
  real _t1278 = 0.1e1;
  vec3 _t1279 = [_t1276, _t1277, _t1278];
  real _t127A = prim •00CE<$[3]; $[3]; $[]> (_t1279, refPos120E);
  real _t127B = prim -0026<$[]> (_t1275, _t127A);
  real _t127C = 0.e0;
  real _t127D = 0.e0;
  real _t127E = 0.1e1;
  vec3 _t127F = [_t127C, _t127D, _t127E];
  real _t1280 = prim •00CE<$[3]; $[3]; $[]> (_t127F, dPos120F);
  real _t1281 = prim /0055 (_t127B, _t1280);
  bool _t1282 = prim >0080 (time1210, _t1281);
  real _t1283 = 0.e0;
  real _t1284 = 0.e0;
  real _t1285 = 0.1e1;
  vec3 _t1286 = [_t1283, _t1284, _t1285];
  real _t1287 = prim •00CE<$[3]; $[3]; $[]> (_t1286, dPos120F);
  real _t1288 = prim |()|00B5<$[]> (_t1287);
  real _t1289 = 0.1e-20;
  bool _t128A = prim >=007E (_t1288, _t1289);
  bool _t128B = prim $and01C4 (_t1282, _t128A);
  bool _t128C = prim $and01C4 (_t1274, _t128B);
  if _t128C {
    real _t128D = 0.5e0;
    real _t128E = 0.e0;
    real _t128F = 0.e0;
    real _t1290 = 0.1e1;
    vec3 _t1291 = [_t128E, _t128F, _t1290];
    real _t1292 = prim •00CE<$[3]; $[3]; $[]> (_t1291, refPos120E);
    real _t1293 = prim -0026<$[]> (_t128D, _t1292);
    real _t1294 = 0.e0;
    real _t1295 = 0.e0;
    real _t1296 = 0.1e1;
    vec3 _t1297 = [_t1294, _t1295, _t1296];
    real _t1298 = prim •00CE<$[3]; $[3]; $[]> (_t1297, dPos120F);
    real _t1299 = prim /0055 (_t1293, _t1298);
    vec3 _t129A = prim *0038<$[3]> (dPos120F, _t1299);
    vec3 _t129B = prim +0017<$[3]> (refPos120E, _t129A);
    real _t129C = 0.5e0;
    real _t129D = 0.e0;
    real _t129E = 0.e0;
    real _t129F = 0.1e1;
    vec3 _t12A0 = [_t129D, _t129E, _t129F];
    real _t12A1 = prim •00CE<$[3]; $[3]; $[]> (_t12A0, refPos120E);
    real _t12A2 = prim -0026<$[]> (_t129C, _t12A1);
    real _t12A3 = 0.e0;
    real _t12A4 = 0.e0;
    real _t12A5 = 0.1e1;
    vec3 _t12A6 = [_t12A3, _t12A4, _t12A5];
    real _t12A7 = prim •00CE<$[3]; $[3]; $[]> (_t12A6, dPos120F);
    real _t12A8 = prim /0055 (_t12A2, _t12A7);
    vec3 _t12A9 = prim *0038<$[3]> (dPos120F, _t12A8);
    vec3 _t12AA = prim +0017<$[3]> (refPos120E, _t12A9);
    real _t12AB = 0.1e-8;
    bool _t12AC = extractFemItemN((_t129B, _t12AA, _t12AB),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12AC {
      real _t12AD = 0.5e0;
      real _t12AE = 0.e0;
      real _t12AF = 0.e0;
      real _t12B0 = 0.1e1;
      vec3 _t12B1 = [_t12AE, _t12AF, _t12B0];
      real _t12B2 = prim •00CE<$[3]; $[3]; $[]> (_t12B1, refPos120E);
      real _t12B3 = prim -0026<$[]> (_t12AD, _t12B2);
      real _t12B4 = 0.e0;
      real _t12B5 = 0.e0;
      real _t12B6 = 0.1e1;
      vec3 _t12B7 = [_t12B4, _t12B5, _t12B6];
      real _t12B8 = prim •00CE<$[3]; $[3]; $[]> (_t12B7, dPos120F);
      time1210 = prim /0055 (_t12B3, _t12B8);
      face1211 = 1;
    }
  }
  real _t12B9 = -0.5e0;
  real _t12BA = 0.e0;
  real _t12BB = 0.1e1;
  real _t12BC = 0.e0;
  vec3 _t12BD = [_t12BA, _t12BB, _t12BC];
  real _t12BE = prim •00CE<$[3]; $[3]; $[]> (_t12BD, refPos120E);
  real _t12BF = prim -0026<$[]> (_t12B9, _t12BE);
  real _t12C0 = 0.e0;
  real _t12C1 = 0.1e1;
  real _t12C2 = 0.e0;
  vec3 _t12C3 = [_t12C0, _t12C1, _t12C2];
  real _t12C4 = prim •00CE<$[3]; $[3]; $[]> (_t12C3, dPos120F);
  real _t12C5 = prim /0055 (_t12BF, _t12C4);
  real _t12C6 = -0.1e-15;
  bool _t12C7 = prim >=007E (_t12C5, _t12C6);
  real _t12C8 = -0.5e0;
  real _t12C9 = 0.e0;
  real _t12CA = 0.1e1;
  real _t12CB = 0.e0;
  vec3 _t12CC = [_t12C9, _t12CA, _t12CB];
  real _t12CD = prim •00CE<$[3]; $[3]; $[]> (_t12CC, refPos120E);
  real _t12CE = prim -0026<$[]> (_t12C8, _t12CD);
  real _t12CF = 0.e0;
  real _t12D0 = 0.1e1;
  real _t12D1 = 0.e0;
  vec3 _t12D2 = [_t12CF, _t12D0, _t12D1];
  real _t12D3 = prim •00CE<$[3]; $[3]; $[]> (_t12D2, dPos120F);
  real _t12D4 = prim /0055 (_t12CE, _t12D3);
  bool _t12D5 = prim >0080 (time1210, _t12D4);
  real _t12D6 = 0.e0;
  real _t12D7 = 0.1e1;
  real _t12D8 = 0.e0;
  vec3 _t12D9 = [_t12D6, _t12D7, _t12D8];
  real _t12DA = prim •00CE<$[3]; $[3]; $[]> (_t12D9, dPos120F);
  real _t12DB = prim |()|00B5<$[]> (_t12DA);
  real _t12DC = 0.1e-20;
  bool _t12DD = prim >=007E (_t12DB, _t12DC);
  bool _t12DE = prim $and01C4 (_t12D5, _t12DD);
  bool _t12DF = prim $and01C4 (_t12C7, _t12DE);
  if _t12DF {
    real _t12E0 = -0.5e0;
    real _t12E1 = 0.e0;
    real _t12E2 = 0.1e1;
    real _t12E3 = 0.e0;
    vec3 _t12E4 = [_t12E1, _t12E2, _t12E3];
    real _t12E5 = prim •00CE<$[3]; $[3]; $[]> (_t12E4, refPos120E);
    real _t12E6 = prim -0026<$[]> (_t12E0, _t12E5);
    real _t12E7 = 0.e0;
    real _t12E8 = 0.1e1;
    real _t12E9 = 0.e0;
    vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
    real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, dPos120F);
    real _t12EC = prim /0055 (_t12E6, _t12EB);
    vec3 _t12ED = prim *0038<$[3]> (dPos120F, _t12EC);
    vec3 _t12EE = prim +0017<$[3]> (refPos120E, _t12ED);
    real _t12EF = -0.5e0;
    real _t12F0 = 0.e0;
    real _t12F1 = 0.1e1;
    real _t12F2 = 0.e0;
    vec3 _t12F3 = [_t12F0, _t12F1, _t12F2];
    real _t12F4 = prim •00CE<$[3]; $[3]; $[]> (_t12F3, refPos120E);
    real _t12F5 = prim -0026<$[]> (_t12EF, _t12F4);
    real _t12F6 = 0.e0;
    real _t12F7 = 0.1e1;
    real _t12F8 = 0.e0;
    vec3 _t12F9 = [_t12F6, _t12F7, _t12F8];
    real _t12FA = prim •00CE<$[3]; $[3]; $[]> (_t12F9, dPos120F);
    real _t12FB = prim /0055 (_t12F5, _t12FA);
    vec3 _t12FC = prim *0038<$[3]> (dPos120F, _t12FB);
    vec3 _t12FD = prim +0017<$[3]> (refPos120E, _t12FC);
    real _t12FE = 0.1e-8;
    bool _t12FF = extractFemItemN((_t12EE, _t12FD, _t12FE),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12FF {
      real _t1300 = -0.5e0;
      real _t1301 = 0.e0;
      real _t1302 = 0.1e1;
      real _t1303 = 0.e0;
      vec3 _t1304 = [_t1301, _t1302, _t1303];
      real _t1305 = prim •00CE<$[3]; $[3]; $[]> (_t1304, refPos120E);
      real _t1306 = prim -0026<$[]> (_t1300, _t1305);
      real _t1307 = 0.e0;
      real _t1308 = 0.1e1;
      real _t1309 = 0.e0;
      vec3 _t130A = [_t1307, _t1308, _t1309];
      real _t130B = prim •00CE<$[3]; $[3]; $[]> (_t130A, dPos120F);
      time1210 = prim /0055 (_t1306, _t130B);
      face1211 = 2;
    }
  }
  real _t130C = -0.5e0;
  real _t130D = -0.1e1;
  real _t130E = 0.e0;
  real _t130F = 0.e0;
  vec3 _t1310 = [_t130D, _t130E, _t130F];
  real _t1311 = prim •00CE<$[3]; $[3]; $[]> (_t1310, refPos120E);
  real _t1312 = prim -0026<$[]> (_t130C, _t1311);
  real _t1313 = -0.1e1;
  real _t1314 = 0.e0;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, dPos120F);
  real _t1318 = prim /0055 (_t1312, _t1317);
  real _t1319 = -0.1e-15;
  bool _t131A = prim >=007E (_t1318, _t1319);
  real _t131B = -0.5e0;
  real _t131C = -0.1e1;
  real _t131D = 0.e0;
  real _t131E = 0.e0;
  vec3 _t131F = [_t131C, _t131D, _t131E];
  real _t1320 = prim •00CE<$[3]; $[3]; $[]> (_t131F, refPos120E);
  real _t1321 = prim -0026<$[]> (_t131B, _t1320);
  real _t1322 = -0.1e1;
  real _t1323 = 0.e0;
  real _t1324 = 0.e0;
  vec3 _t1325 = [_t1322, _t1323, _t1324];
  real _t1326 = prim •00CE<$[3]; $[3]; $[]> (_t1325, dPos120F);
  real _t1327 = prim /0055 (_t1321, _t1326);
  bool _t1328 = prim >0080 (time1210, _t1327);
  real _t1329 = -0.1e1;
  real _t132A = 0.e0;
  real _t132B = 0.e0;
  vec3 _t132C = [_t1329, _t132A, _t132B];
  real _t132D = prim •00CE<$[3]; $[3]; $[]> (_t132C, dPos120F);
  real _t132E = prim |()|00B5<$[]> (_t132D);
  real _t132F = 0.1e-20;
  bool _t1330 = prim >=007E (_t132E, _t132F);
  bool _t1331 = prim $and01C4 (_t1328, _t1330);
  bool _t1332 = prim $and01C4 (_t131A, _t1331);
  if _t1332 {
    real _t1333 = -0.5e0;
    real _t1334 = -0.1e1;
    real _t1335 = 0.e0;
    real _t1336 = 0.e0;
    vec3 _t1337 = [_t1334, _t1335, _t1336];
    real _t1338 = prim •00CE<$[3]; $[3]; $[]> (_t1337, refPos120E);
    real _t1339 = prim -0026<$[]> (_t1333, _t1338);
    real _t133A = -0.1e1;
    real _t133B = 0.e0;
    real _t133C = 0.e0;
    vec3 _t133D = [_t133A, _t133B, _t133C];
    real _t133E = prim •00CE<$[3]; $[3]; $[]> (_t133D, dPos120F);
    real _t133F = prim /0055 (_t1339, _t133E);
    vec3 _t1340 = prim *0038<$[3]> (dPos120F, _t133F);
    vec3 _t1341 = prim +0017<$[3]> (refPos120E, _t1340);
    real _t1342 = -0.5e0;
    real _t1343 = -0.1e1;
    real _t1344 = 0.e0;
    real _t1345 = 0.e0;
    vec3 _t1346 = [_t1343, _t1344, _t1345];
    real _t1347 = prim •00CE<$[3]; $[3]; $[]> (_t1346, refPos120E);
    real _t1348 = prim -0026<$[]> (_t1342, _t1347);
    real _t1349 = -0.1e1;
    real _t134A = 0.e0;
    real _t134B = 0.e0;
    vec3 _t134C = [_t1349, _t134A, _t134B];
    real _t134D = prim •00CE<$[3]; $[3]; $[]> (_t134C, dPos120F);
    real _t134E = prim /0055 (_t1348, _t134D);
    vec3 _t134F = prim *0038<$[3]> (dPos120F, _t134E);
    vec3 _t1350 = prim +0017<$[3]> (refPos120E, _t134F);
    real _t1351 = 0.1e-8;
    bool _t1352 = extractFemItemN((_t1341, _t1350, _t1351),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1352 {
      real _t1353 = -0.5e0;
      real _t1354 = -0.1e1;
      real _t1355 = 0.e0;
      real _t1356 = 0.e0;
      vec3 _t1357 = [_t1354, _t1355, _t1356];
      real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos120E);
      real _t1359 = prim -0026<$[]> (_t1353, _t1358);
      real _t135A = -0.1e1;
      real _t135B = 0.e0;
      real _t135C = 0.e0;
      vec3 _t135D = [_t135A, _t135B, _t135C];
      real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos120F);
      time1210 = prim /0055 (_t1359, _t135E);
      face1211 = 3;
    }
  }
  real _t135F = -0.5e0;
  real _t1360 = 0.e0;
  real _t1361 = -0.1e1;
  real _t1362 = 0.e0;
  vec3 _t1363 = [_t1360, _t1361, _t1362];
  real _t1364 = prim •00CE<$[3]; $[3]; $[]> (_t1363, refPos120E);
  real _t1365 = prim -0026<$[]> (_t135F, _t1364);
  real _t1366 = 0.e0;
  real _t1367 = -0.1e1;
  real _t1368 = 0.e0;
  vec3 _t1369 = [_t1366, _t1367, _t1368];
  real _t136A = prim •00CE<$[3]; $[3]; $[]> (_t1369, dPos120F);
  real _t136B = prim /0055 (_t1365, _t136A);
  real _t136C = -0.1e-15;
  bool _t136D = prim >=007E (_t136B, _t136C);
  real _t136E = -0.5e0;
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, refPos120E);
  real _t1374 = prim -0026<$[]> (_t136E, _t1373);
  real _t1375 = 0.e0;
  real _t1376 = -0.1e1;
  real _t1377 = 0.e0;
  vec3 _t1378 = [_t1375, _t1376, _t1377];
  real _t1379 = prim •00CE<$[3]; $[3]; $[]> (_t1378, dPos120F);
  real _t137A = prim /0055 (_t1374, _t1379);
  bool _t137B = prim >0080 (time1210, _t137A);
  real _t137C = 0.e0;
  real _t137D = -0.1e1;
  real _t137E = 0.e0;
  vec3 _t137F = [_t137C, _t137D, _t137E];
  real _t1380 = prim •00CE<$[3]; $[3]; $[]> (_t137F, dPos120F);
  real _t1381 = prim |()|00B5<$[]> (_t1380);
  real _t1382 = 0.1e-20;
  bool _t1383 = prim >=007E (_t1381, _t1382);
  bool _t1384 = prim $and01C4 (_t137B, _t1383);
  bool _t1385 = prim $and01C4 (_t136D, _t1384);
  if _t1385 {
    real _t1386 = -0.5e0;
    real _t1387 = 0.e0;
    real _t1388 = -0.1e1;
    real _t1389 = 0.e0;
    vec3 _t138A = [_t1387, _t1388, _t1389];
    real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, refPos120E);
    real _t138C = prim -0026<$[]> (_t1386, _t138B);
    real _t138D = 0.e0;
    real _t138E = -0.1e1;
    real _t138F = 0.e0;
    vec3 _t1390 = [_t138D, _t138E, _t138F];
    real _t1391 = prim •00CE<$[3]; $[3]; $[]> (_t1390, dPos120F);
    real _t1392 = prim /0055 (_t138C, _t1391);
    vec3 _t1393 = prim *0038<$[3]> (dPos120F, _t1392);
    vec3 _t1394 = prim +0017<$[3]> (refPos120E, _t1393);
    real _t1395 = -0.5e0;
    real _t1396 = 0.e0;
    real _t1397 = -0.1e1;
    real _t1398 = 0.e0;
    vec3 _t1399 = [_t1396, _t1397, _t1398];
    real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, refPos120E);
    real _t139B = prim -0026<$[]> (_t1395, _t139A);
    real _t139C = 0.e0;
    real _t139D = -0.1e1;
    real _t139E = 0.e0;
    vec3 _t139F = [_t139C, _t139D, _t139E];
    real _t13A0 = prim •00CE<$[3]; $[3]; $[]> (_t139F, dPos120F);
    real _t13A1 = prim /0055 (_t139B, _t13A0);
    vec3 _t13A2 = prim *0038<$[3]> (dPos120F, _t13A1);
    vec3 _t13A3 = prim +0017<$[3]> (refPos120E, _t13A2);
    real _t13A4 = 0.1e-8;
    bool _t13A5 = extractFemItemN((_t1394, _t13A3, _t13A4),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13A5 {
      real _t13A6 = -0.5e0;
      real _t13A7 = 0.e0;
      real _t13A8 = -0.1e1;
      real _t13A9 = 0.e0;
      vec3 _t13AA = [_t13A7, _t13A8, _t13A9];
      real _t13AB = prim •00CE<$[3]; $[3]; $[]> (_t13AA, refPos120E);
      real _t13AC = prim -0026<$[]> (_t13A6, _t13AB);
      real _t13AD = 0.e0;
      real _t13AE = -0.1e1;
      real _t13AF = 0.e0;
      vec3 _t13B0 = [_t13AD, _t13AE, _t13AF];
      real _t13B1 = prim •00CE<$[3]; $[3]; $[]> (_t13B0, dPos120F);
      time1210 = prim /0055 (_t13AC, _t13B1);
      face1211 = 4;
    }
  }
  real _t13B2 = -0.5e0;
  real _t13B3 = 0.1e1;
  real _t13B4 = 0.e0;
  real _t13B5 = -0.e0;
  vec3 _t13B6 = [_t13B3, _t13B4, _t13B5];
  real _t13B7 = prim •00CE<$[3]; $[3]; $[]> (_t13B6, refPos120E);
  real _t13B8 = prim -0026<$[]> (_t13B2, _t13B7);
  real _t13B9 = 0.1e1;
  real _t13BA = 0.e0;
  real _t13BB = -0.e0;
  vec3 _t13BC = [_t13B9, _t13BA, _t13BB];
  real _t13BD = prim •00CE<$[3]; $[3]; $[]> (_t13BC, dPos120F);
  real _t13BE = prim /0055 (_t13B8, _t13BD);
  real _t13BF = -0.1e-15;
  bool _t13C0 = prim >=007E (_t13BE, _t13BF);
  real _t13C1 = -0.5e0;
  real _t13C2 = 0.1e1;
  real _t13C3 = 0.e0;
  real _t13C4 = -0.e0;
  vec3 _t13C5 = [_t13C2, _t13C3, _t13C4];
  real _t13C6 = prim •00CE<$[3]; $[3]; $[]> (_t13C5, refPos120E);
  real _t13C7 = prim -0026<$[]> (_t13C1, _t13C6);
  real _t13C8 = 0.1e1;
  real _t13C9 = 0.e0;
  real _t13CA = -0.e0;
  vec3 _t13CB = [_t13C8, _t13C9, _t13CA];
  real _t13CC = prim •00CE<$[3]; $[3]; $[]> (_t13CB, dPos120F);
  real _t13CD = prim /0055 (_t13C7, _t13CC);
  bool _t13CE = prim >0080 (time1210, _t13CD);
  real _t13CF = 0.1e1;
  real _t13D0 = 0.e0;
  real _t13D1 = -0.e0;
  vec3 _t13D2 = [_t13CF, _t13D0, _t13D1];
  real _t13D3 = prim •00CE<$[3]; $[3]; $[]> (_t13D2, dPos120F);
  real _t13D4 = prim |()|00B5<$[]> (_t13D3);
  real _t13D5 = 0.1e-20;
  bool _t13D6 = prim >=007E (_t13D4, _t13D5);
  bool _t13D7 = prim $and01C4 (_t13CE, _t13D6);
  bool _t13D8 = prim $and01C4 (_t13C0, _t13D7);
  if _t13D8 {
    real _t13D9 = -0.5e0;
    real _t13DA = 0.1e1;
    real _t13DB = 0.e0;
    real _t13DC = -0.e0;
    vec3 _t13DD = [_t13DA, _t13DB, _t13DC];
    real _t13DE = prim •00CE<$[3]; $[3]; $[]> (_t13DD, refPos120E);
    real _t13DF = prim -0026<$[]> (_t13D9, _t13DE);
    real _t13E0 = 0.1e1;
    real _t13E1 = 0.e0;
    real _t13E2 = -0.e0;
    vec3 _t13E3 = [_t13E0, _t13E1, _t13E2];
    real _t13E4 = prim •00CE<$[3]; $[3]; $[]> (_t13E3, dPos120F);
    real _t13E5 = prim /0055 (_t13DF, _t13E4);
    vec3 _t13E6 = prim *0038<$[3]> (dPos120F, _t13E5);
    vec3 _t13E7 = prim +0017<$[3]> (refPos120E, _t13E6);
    real _t13E8 = -0.5e0;
    real _t13E9 = 0.1e1;
    real _t13EA = 0.e0;
    real _t13EB = -0.e0;
    vec3 _t13EC = [_t13E9, _t13EA, _t13EB];
    real _t13ED = prim •00CE<$[3]; $[3]; $[]> (_t13EC, refPos120E);
    real _t13EE = prim -0026<$[]> (_t13E8, _t13ED);
    real _t13EF = 0.1e1;
    real _t13F0 = 0.e0;
    real _t13F1 = -0.e0;
    vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
    real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos120F);
    real _t13F4 = prim /0055 (_t13EE, _t13F3);
    vec3 _t13F5 = prim *0038<$[3]> (dPos120F, _t13F4);
    vec3 _t13F6 = prim +0017<$[3]> (refPos120E, _t13F5);
    real _t13F7 = 0.1e-8;
    bool _t13F8 = extractFemItemN((_t13E7, _t13F6, _t13F7),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13F8 {
      real _t13F9 = -0.5e0;
      real _t13FA = 0.1e1;
      real _t13FB = 0.e0;
      real _t13FC = -0.e0;
      vec3 _t13FD = [_t13FA, _t13FB, _t13FC];
      real _t13FE = prim •00CE<$[3]; $[3]; $[]> (_t13FD, refPos120E);
      real _t13FF = prim -0026<$[]> (_t13F9, _t13FE);
      real _t1400 = 0.1e1;
      real _t1401 = 0.e0;
      real _t1402 = -0.e0;
      vec3 _t1403 = [_t1400, _t1401, _t1402];
      real _t1404 = prim •00CE<$[3]; $[3]; $[]> (_t1403, dPos120F);
      time1210 = prim /0055 (_t13FF, _t1404);
      face1211 = 5;
    }
  }
  int _t1405 = -1;
  bool _t1406 = prim !=0086 (face1211, _t1405);
  if _t1406 {
    real _t1407 = 0.e0;
    real _t1408 = prim max0125 (time1210, _t1407);
    real _t1409 = (real)face1211;
    vec2 _t140A = [_t1408, _t1409];
    return _t140A;
  } else {
    real _t140B = -0.1e1;
    real _t140C = -0.1e1;
    vec2 _t140D = [_t140B, _t140C];
    return _t140D;
  }
}
function vec2#0 _exit140E (vec3 refPos120E, vec3 dPos120F, int i140F)
{
  real time1410 = +inf;
  int face1411 = -1;
  real faceTime1412 = -inf;
  real _t1413 = -0.5e0;
  real _t1414 = 0.e0;
  real _t1415 = 0.e0;
  real _t1416 = 0.1e1;
  vec3 _t1417 = [_t1414, _t1415, _t1416];
  real _t1418 = prim •00CE<$[3]; $[3]; $[]> (_t1417, refPos120E);
  real _t1419 = prim -0026<$[]> (_t1413, _t1418);
  real _t141A = 0.e0;
  real _t141B = 0.e0;
  real _t141C = 0.1e1;
  vec3 _t141D = [_t141A, _t141B, _t141C];
  real _t141E = prim •00CE<$[3]; $[3]; $[]> (_t141D, dPos120F);
  real _t141F = prim /0055 (_t1419, _t141E);
  real _t1420 = -0.1e-15;
  bool _t1421 = prim >=007E (_t141F, _t1420);
  real _t1422 = -0.5e0;
  real _t1423 = 0.e0;
  real _t1424 = 0.e0;
  real _t1425 = 0.1e1;
  vec3 _t1426 = [_t1423, _t1424, _t1425];
  real _t1427 = prim •00CE<$[3]; $[3]; $[]> (_t1426, refPos120E);
  real _t1428 = prim -0026<$[]> (_t1422, _t1427);
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = 0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, dPos120F);
  real _t142E = prim /0055 (_t1428, _t142D);
  bool _t142F = prim >0080 (time1410, _t142E);
  real _t1430 = 0.e0;
  real _t1431 = 0.e0;
  real _t1432 = 0.1e1;
  vec3 _t1433 = [_t1430, _t1431, _t1432];
  real _t1434 = prim •00CE<$[3]; $[3]; $[]> (_t1433, dPos120F);
  real _t1435 = prim |()|00B5<$[]> (_t1434);
  real _t1436 = 0.1e-20;
  bool _t1437 = prim >=007E (_t1435, _t1436);
  bool _t1438 = prim $and01C4 (_t142F, _t1437);
  bool _t1439 = prim $and01C4 (_t1421, _t1438);
  if _t1439 {
    int _t143A = 0;
    bool _t143B = prim !=0086 (i140F, _t143A);
    if _t143B {
      real _t143C = -0.5e0;
      real _t143D = 0.e0;
      real _t143E = 0.e0;
      real _t143F = 0.1e1;
      vec3 _t1440 = [_t143D, _t143E, _t143F];
      real _t1441 = prim •00CE<$[3]; $[3]; $[]> (_t1440, refPos120E);
      real _t1442 = prim -0026<$[]> (_t143C, _t1441);
      real _t1443 = 0.e0;
      real _t1444 = 0.e0;
      real _t1445 = 0.1e1;
      vec3 _t1446 = [_t1443, _t1444, _t1445];
      real _t1447 = prim •00CE<$[3]; $[3]; $[]> (_t1446, dPos120F);
      time1410 = prim /0055 (_t1442, _t1447);
      face1411 = 0;
    } else {
      real _t1448 = -0.5e0;
      real _t1449 = 0.e0;
      real _t144A = 0.e0;
      real _t144B = 0.1e1;
      vec3 _t144C = [_t1449, _t144A, _t144B];
      real _t144D = prim •00CE<$[3]; $[3]; $[]> (_t144C, refPos120E);
      real _t144E = prim -0026<$[]> (_t1448, _t144D);
      real _t144F = 0.e0;
      real _t1450 = 0.e0;
      real _t1451 = 0.1e1;
      vec3 _t1452 = [_t144F, _t1450, _t1451];
      real _t1453 = prim •00CE<$[3]; $[3]; $[]> (_t1452, dPos120F);
      faceTime1412 = prim /0055 (_t144E, _t1453);
    }
  }
  real _t1454 = 0.5e0;
  real _t1455 = 0.e0;
  real _t1456 = 0.e0;
  real _t1457 = 0.1e1;
  vec3 _t1458 = [_t1455, _t1456, _t1457];
  real _t1459 = prim •00CE<$[3]; $[3]; $[]> (_t1458, refPos120E);
  real _t145A = prim -0026<$[]> (_t1454, _t1459);
  real _t145B = 0.e0;
  real _t145C = 0.e0;
  real _t145D = 0.1e1;
  vec3 _t145E = [_t145B, _t145C, _t145D];
  real _t145F = prim •00CE<$[3]; $[3]; $[]> (_t145E, dPos120F);
  real _t1460 = prim /0055 (_t145A, _t145F);
  real _t1461 = -0.1e-15;
  bool _t1462 = prim >=007E (_t1460, _t1461);
  real _t1463 = 0.5e0;
  real _t1464 = 0.e0;
  real _t1465 = 0.e0;
  real _t1466 = 0.1e1;
  vec3 _t1467 = [_t1464, _t1465, _t1466];
  real _t1468 = prim •00CE<$[3]; $[3]; $[]> (_t1467, refPos120E);
  real _t1469 = prim -0026<$[]> (_t1463, _t1468);
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = 0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, dPos120F);
  real _t146F = prim /0055 (_t1469, _t146E);
  bool _t1470 = prim >0080 (time1410, _t146F);
  real _t1471 = 0.e0;
  real _t1472 = 0.e0;
  real _t1473 = 0.1e1;
  vec3 _t1474 = [_t1471, _t1472, _t1473];
  real _t1475 = prim •00CE<$[3]; $[3]; $[]> (_t1474, dPos120F);
  real _t1476 = prim |()|00B5<$[]> (_t1475);
  real _t1477 = 0.1e-20;
  bool _t1478 = prim >=007E (_t1476, _t1477);
  bool _t1479 = prim $and01C4 (_t1470, _t1478);
  bool _t147A = prim $and01C4 (_t1462, _t1479);
  if _t147A {
    int _t147B = 1;
    bool _t147C = prim !=0086 (i140F, _t147B);
    if _t147C {
      real _t147D = 0.5e0;
      real _t147E = 0.e0;
      real _t147F = 0.e0;
      real _t1480 = 0.1e1;
      vec3 _t1481 = [_t147E, _t147F, _t1480];
      real _t1482 = prim •00CE<$[3]; $[3]; $[]> (_t1481, refPos120E);
      real _t1483 = prim -0026<$[]> (_t147D, _t1482);
      real _t1484 = 0.e0;
      real _t1485 = 0.e0;
      real _t1486 = 0.1e1;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, dPos120F);
      time1410 = prim /0055 (_t1483, _t1488);
      face1411 = 1;
    } else {
      real _t1489 = 0.5e0;
      real _t148A = 0.e0;
      real _t148B = 0.e0;
      real _t148C = 0.1e1;
      vec3 _t148D = [_t148A, _t148B, _t148C];
      real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, refPos120E);
      real _t148F = prim -0026<$[]> (_t1489, _t148E);
      real _t1490 = 0.e0;
      real _t1491 = 0.e0;
      real _t1492 = 0.1e1;
      vec3 _t1493 = [_t1490, _t1491, _t1492];
      real _t1494 = prim •00CE<$[3]; $[3]; $[]> (_t1493, dPos120F);
      faceTime1412 = prim /0055 (_t148F, _t1494);
    }
  }
  real _t1495 = -0.5e0;
  real _t1496 = 0.e0;
  real _t1497 = 0.1e1;
  real _t1498 = 0.e0;
  vec3 _t1499 = [_t1496, _t1497, _t1498];
  real _t149A = prim •00CE<$[3]; $[3]; $[]> (_t1499, refPos120E);
  real _t149B = prim -0026<$[]> (_t1495, _t149A);
  real _t149C = 0.e0;
  real _t149D = 0.1e1;
  real _t149E = 0.e0;
  vec3 _t149F = [_t149C, _t149D, _t149E];
  real _t14A0 = prim •00CE<$[3]; $[3]; $[]> (_t149F, dPos120F);
  real _t14A1 = prim /0055 (_t149B, _t14A0);
  real _t14A2 = -0.1e-15;
  bool _t14A3 = prim >=007E (_t14A1, _t14A2);
  real _t14A4 = -0.5e0;
  real _t14A5 = 0.e0;
  real _t14A6 = 0.1e1;
  real _t14A7 = 0.e0;
  vec3 _t14A8 = [_t14A5, _t14A6, _t14A7];
  real _t14A9 = prim •00CE<$[3]; $[3]; $[]> (_t14A8, refPos120E);
  real _t14AA = prim -0026<$[]> (_t14A4, _t14A9);
  real _t14AB = 0.e0;
  real _t14AC = 0.1e1;
  real _t14AD = 0.e0;
  vec3 _t14AE = [_t14AB, _t14AC, _t14AD];
  real _t14AF = prim •00CE<$[3]; $[3]; $[]> (_t14AE, dPos120F);
  real _t14B0 = prim /0055 (_t14AA, _t14AF);
  bool _t14B1 = prim >0080 (time1410, _t14B0);
  real _t14B2 = 0.e0;
  real _t14B3 = 0.1e1;
  real _t14B4 = 0.e0;
  vec3 _t14B5 = [_t14B2, _t14B3, _t14B4];
  real _t14B6 = prim •00CE<$[3]; $[3]; $[]> (_t14B5, dPos120F);
  real _t14B7 = prim |()|00B5<$[]> (_t14B6);
  real _t14B8 = 0.1e-20;
  bool _t14B9 = prim >=007E (_t14B7, _t14B8);
  bool _t14BA = prim $and01C4 (_t14B1, _t14B9);
  bool _t14BB = prim $and01C4 (_t14A3, _t14BA);
  if _t14BB {
    int _t14BC = 2;
    bool _t14BD = prim !=0086 (i140F, _t14BC);
    if _t14BD {
      real _t14BE = -0.5e0;
      real _t14BF = 0.e0;
      real _t14C0 = 0.1e1;
      real _t14C1 = 0.e0;
      vec3 _t14C2 = [_t14BF, _t14C0, _t14C1];
      real _t14C3 = prim •00CE<$[3]; $[3]; $[]> (_t14C2, refPos120E);
      real _t14C4 = prim -0026<$[]> (_t14BE, _t14C3);
      real _t14C5 = 0.e0;
      real _t14C6 = 0.1e1;
      real _t14C7 = 0.e0;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, dPos120F);
      time1410 = prim /0055 (_t14C4, _t14C9);
      face1411 = 2;
    } else {
      real _t14CA = -0.5e0;
      real _t14CB = 0.e0;
      real _t14CC = 0.1e1;
      real _t14CD = 0.e0;
      vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
      real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, refPos120E);
      real _t14D0 = prim -0026<$[]> (_t14CA, _t14CF);
      real _t14D1 = 0.e0;
      real _t14D2 = 0.1e1;
      real _t14D3 = 0.e0;
      vec3 _t14D4 = [_t14D1, _t14D2, _t14D3];
      real _t14D5 = prim •00CE<$[3]; $[3]; $[]> (_t14D4, dPos120F);
      faceTime1412 = prim /0055 (_t14D0, _t14D5);
    }
  }
  real _t14D6 = -0.5e0;
  real _t14D7 = -0.1e1;
  real _t14D8 = 0.e0;
  real _t14D9 = 0.e0;
  vec3 _t14DA = [_t14D7, _t14D8, _t14D9];
  real _t14DB = prim •00CE<$[3]; $[3]; $[]> (_t14DA, refPos120E);
  real _t14DC = prim -0026<$[]> (_t14D6, _t14DB);
  real _t14DD = -0.1e1;
  real _t14DE = 0.e0;
  real _t14DF = 0.e0;
  vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
  real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, dPos120F);
  real _t14E2 = prim /0055 (_t14DC, _t14E1);
  real _t14E3 = -0.1e-15;
  bool _t14E4 = prim >=007E (_t14E2, _t14E3);
  real _t14E5 = -0.5e0;
  real _t14E6 = -0.1e1;
  real _t14E7 = 0.e0;
  real _t14E8 = 0.e0;
  vec3 _t14E9 = [_t14E6, _t14E7, _t14E8];
  real _t14EA = prim •00CE<$[3]; $[3]; $[]> (_t14E9, refPos120E);
  real _t14EB = prim -0026<$[]> (_t14E5, _t14EA);
  real _t14EC = -0.1e1;
  real _t14ED = 0.e0;
  real _t14EE = 0.e0;
  vec3 _t14EF = [_t14EC, _t14ED, _t14EE];
  real _t14F0 = prim •00CE<$[3]; $[3]; $[]> (_t14EF, dPos120F);
  real _t14F1 = prim /0055 (_t14EB, _t14F0);
  bool _t14F2 = prim >0080 (time1410, _t14F1);
  real _t14F3 = -0.1e1;
  real _t14F4 = 0.e0;
  real _t14F5 = 0.e0;
  vec3 _t14F6 = [_t14F3, _t14F4, _t14F5];
  real _t14F7 = prim •00CE<$[3]; $[3]; $[]> (_t14F6, dPos120F);
  real _t14F8 = prim |()|00B5<$[]> (_t14F7);
  real _t14F9 = 0.1e-20;
  bool _t14FA = prim >=007E (_t14F8, _t14F9);
  bool _t14FB = prim $and01C4 (_t14F2, _t14FA);
  bool _t14FC = prim $and01C4 (_t14E4, _t14FB);
  if _t14FC {
    int _t14FD = 3;
    bool _t14FE = prim !=0086 (i140F, _t14FD);
    if _t14FE {
      real _t14FF = -0.5e0;
      real _t1500 = -0.1e1;
      real _t1501 = 0.e0;
      real _t1502 = 0.e0;
      vec3 _t1503 = [_t1500, _t1501, _t1502];
      real _t1504 = prim •00CE<$[3]; $[3]; $[]> (_t1503, refPos120E);
      real _t1505 = prim -0026<$[]> (_t14FF, _t1504);
      real _t1506 = -0.1e1;
      real _t1507 = 0.e0;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, dPos120F);
      time1410 = prim /0055 (_t1505, _t150A);
      face1411 = 3;
    } else {
      real _t150B = -0.5e0;
      real _t150C = -0.1e1;
      real _t150D = 0.e0;
      real _t150E = 0.e0;
      vec3 _t150F = [_t150C, _t150D, _t150E];
      real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, refPos120E);
      real _t1511 = prim -0026<$[]> (_t150B, _t1510);
      real _t1512 = -0.1e1;
      real _t1513 = 0.e0;
      real _t1514 = 0.e0;
      vec3 _t1515 = [_t1512, _t1513, _t1514];
      real _t1516 = prim •00CE<$[3]; $[3]; $[]> (_t1515, dPos120F);
      faceTime1412 = prim /0055 (_t1511, _t1516);
    }
  }
  real _t1517 = -0.5e0;
  real _t1518 = 0.e0;
  real _t1519 = -0.1e1;
  real _t151A = 0.e0;
  vec3 _t151B = [_t1518, _t1519, _t151A];
  real _t151C = prim •00CE<$[3]; $[3]; $[]> (_t151B, refPos120E);
  real _t151D = prim -0026<$[]> (_t1517, _t151C);
  real _t151E = 0.e0;
  real _t151F = -0.1e1;
  real _t1520 = 0.e0;
  vec3 _t1521 = [_t151E, _t151F, _t1520];
  real _t1522 = prim •00CE<$[3]; $[3]; $[]> (_t1521, dPos120F);
  real _t1523 = prim /0055 (_t151D, _t1522);
  real _t1524 = -0.1e-15;
  bool _t1525 = prim >=007E (_t1523, _t1524);
  real _t1526 = -0.5e0;
  real _t1527 = 0.e0;
  real _t1528 = -0.1e1;
  real _t1529 = 0.e0;
  vec3 _t152A = [_t1527, _t1528, _t1529];
  real _t152B = prim •00CE<$[3]; $[3]; $[]> (_t152A, refPos120E);
  real _t152C = prim -0026<$[]> (_t1526, _t152B);
  real _t152D = 0.e0;
  real _t152E = -0.1e1;
  real _t152F = 0.e0;
  vec3 _t1530 = [_t152D, _t152E, _t152F];
  real _t1531 = prim •00CE<$[3]; $[3]; $[]> (_t1530, dPos120F);
  real _t1532 = prim /0055 (_t152C, _t1531);
  bool _t1533 = prim >0080 (time1410, _t1532);
  real _t1534 = 0.e0;
  real _t1535 = -0.1e1;
  real _t1536 = 0.e0;
  vec3 _t1537 = [_t1534, _t1535, _t1536];
  real _t1538 = prim •00CE<$[3]; $[3]; $[]> (_t1537, dPos120F);
  real _t1539 = prim |()|00B5<$[]> (_t1538);
  real _t153A = 0.1e-20;
  bool _t153B = prim >=007E (_t1539, _t153A);
  bool _t153C = prim $and01C4 (_t1533, _t153B);
  bool _t153D = prim $and01C4 (_t1525, _t153C);
  if _t153D {
    int _t153E = 4;
    bool _t153F = prim !=0086 (i140F, _t153E);
    if _t153F {
      real _t1540 = -0.5e0;
      real _t1541 = 0.e0;
      real _t1542 = -0.1e1;
      real _t1543 = 0.e0;
      vec3 _t1544 = [_t1541, _t1542, _t1543];
      real _t1545 = prim •00CE<$[3]; $[3]; $[]> (_t1544, refPos120E);
      real _t1546 = prim -0026<$[]> (_t1540, _t1545);
      real _t1547 = 0.e0;
      real _t1548 = -0.1e1;
      real _t1549 = 0.e0;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, dPos120F);
      time1410 = prim /0055 (_t1546, _t154B);
      face1411 = 4;
    } else {
      real _t154C = -0.5e0;
      real _t154D = 0.e0;
      real _t154E = -0.1e1;
      real _t154F = 0.e0;
      vec3 _t1550 = [_t154D, _t154E, _t154F];
      real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, refPos120E);
      real _t1552 = prim -0026<$[]> (_t154C, _t1551);
      real _t1553 = 0.e0;
      real _t1554 = -0.1e1;
      real _t1555 = 0.e0;
      vec3 _t1556 = [_t1553, _t1554, _t1555];
      real _t1557 = prim •00CE<$[3]; $[3]; $[]> (_t1556, dPos120F);
      faceTime1412 = prim /0055 (_t1552, _t1557);
    }
  }
  real _t1558 = -0.5e0;
  real _t1559 = 0.1e1;
  real _t155A = 0.e0;
  real _t155B = -0.e0;
  vec3 _t155C = [_t1559, _t155A, _t155B];
  real _t155D = prim •00CE<$[3]; $[3]; $[]> (_t155C, refPos120E);
  real _t155E = prim -0026<$[]> (_t1558, _t155D);
  real _t155F = 0.1e1;
  real _t1560 = 0.e0;
  real _t1561 = -0.e0;
  vec3 _t1562 = [_t155F, _t1560, _t1561];
  real _t1563 = prim •00CE<$[3]; $[3]; $[]> (_t1562, dPos120F);
  real _t1564 = prim /0055 (_t155E, _t1563);
  real _t1565 = -0.1e-15;
  bool _t1566 = prim >=007E (_t1564, _t1565);
  real _t1567 = -0.5e0;
  real _t1568 = 0.1e1;
  real _t1569 = 0.e0;
  real _t156A = -0.e0;
  vec3 _t156B = [_t1568, _t1569, _t156A];
  real _t156C = prim •00CE<$[3]; $[3]; $[]> (_t156B, refPos120E);
  real _t156D = prim -0026<$[]> (_t1567, _t156C);
  real _t156E = 0.1e1;
  real _t156F = 0.e0;
  real _t1570 = -0.e0;
  vec3 _t1571 = [_t156E, _t156F, _t1570];
  real _t1572 = prim •00CE<$[3]; $[3]; $[]> (_t1571, dPos120F);
  real _t1573 = prim /0055 (_t156D, _t1572);
  bool _t1574 = prim >0080 (time1410, _t1573);
  real _t1575 = 0.1e1;
  real _t1576 = 0.e0;
  real _t1577 = -0.e0;
  vec3 _t1578 = [_t1575, _t1576, _t1577];
  real _t1579 = prim •00CE<$[3]; $[3]; $[]> (_t1578, dPos120F);
  real _t157A = prim |()|00B5<$[]> (_t1579);
  real _t157B = 0.1e-20;
  bool _t157C = prim >=007E (_t157A, _t157B);
  bool _t157D = prim $and01C4 (_t1574, _t157C);
  bool _t157E = prim $and01C4 (_t1566, _t157D);
  if _t157E {
    int _t157F = 5;
    bool _t1580 = prim !=0086 (i140F, _t157F);
    if _t1580 {
      real _t1581 = -0.5e0;
      real _t1582 = 0.1e1;
      real _t1583 = 0.e0;
      real _t1584 = -0.e0;
      vec3 _t1585 = [_t1582, _t1583, _t1584];
      real _t1586 = prim •00CE<$[3]; $[3]; $[]> (_t1585, refPos120E);
      real _t1587 = prim -0026<$[]> (_t1581, _t1586);
      real _t1588 = 0.1e1;
      real _t1589 = 0.e0;
      real _t158A = -0.e0;
      vec3 _t158B = [_t1588, _t1589, _t158A];
      real _t158C = prim •00CE<$[3]; $[3]; $[]> (_t158B, dPos120F);
      time1410 = prim /0055 (_t1587, _t158C);
      face1411 = 5;
    } else {
      real _t158D = -0.5e0;
      real _t158E = 0.1e1;
      real _t158F = 0.e0;
      real _t1590 = -0.e0;
      vec3 _t1591 = [_t158E, _t158F, _t1590];
      real _t1592 = prim •00CE<$[3]; $[3]; $[]> (_t1591, refPos120E);
      real _t1593 = prim -0026<$[]> (_t158D, _t1592);
      real _t1594 = 0.1e1;
      real _t1595 = 0.e0;
      real _t1596 = -0.e0;
      vec3 _t1597 = [_t1594, _t1595, _t1596];
      real _t1598 = prim •00CE<$[3]; $[3]; $[]> (_t1597, dPos120F);
      faceTime1412 = prim /0055 (_t1593, _t1598);
    }
  }
  int _t1599 = -1;
  bool _t159A = prim !=0086 (face1411, _t1599);
  if _t159A {
    real _t159B = 0.e0;
    real _t159C = prim max0125 (time1410, _t159B);
    real _t159D = (real)face1411;
    vec2 _t159E = [_t159C, _t159D];
    return _t159E;
  } else {
    real _t159F = -inf;
    bool _t15A0 = prim ==0084 (_t159F, faceTime1412);
    if _t15A0 {
      real _t15A1 = -0.1e1;
      real _t15A2 = -0.1e1;
      vec2 _t15A3 = [_t15A1, _t15A2];
      return _t15A3;
    } else {
      real _t15A4 = (real)i140F;
      vec2 _t15A5 = [faceTime1412, _t15A4];
      return _t15A5;
    }
  }
}
function Femdata: Mesh#0 domain15A6 (Femdata: Space arg015A7)
{
  Femdata: Mesh _t15A8 = extractFem(arg015A7, Mesh);
  return _t15A8;
}
function Femdata: Space#0 space15A9 (Femdata: FemFunc arg015AA)
{
  Femdata: Space _t15AB = extractFem(arg015AA, Space);
  return _t15AB;
}
function Femdata: FuncCell#3 funcCell15AC (Femdata: FemFunc arg015AD, Femdata: MeshCell arg115AE)
{
  int _t15AF = extractFemItem(CellIndex(MeshCell), int, arg115AE);
  Femdata: FuncCell _t15B0 = loadFem(FuncCell, arg015AD, _t15AF);
  return _t15B0;
}
function bool#1 stupid15C1 (vec3 x15C2)
{
  bool _t15C3 = true;
  return _t15C3;
}
function real#1 atent15DF (real a015E0, real d15E1)
{
  real _t15E2 = 0.e0;
  real _t15E3 = 0.1e1;
  real _t15E4 = 0.15e1;
  real _t15E5 = 0.1e1;
  real _t15E6 = prim |()|00B5<$[]> (d15E1);
  real _t15E7 = prim /0055 (_t15E6, thick04F3);
  real _t15E8 = prim -0026<$[]> (_t15E5, _t15E7);
  real _t15E9 = prim *0034 (_t15E4, _t15E8);
  real _t15EA = prim clamp0094<$[]> (_t15E2, _t15E3, _t15E9);
  real _t15EB = prim *0034 (a015E0, _t15EA);
  return _t15EB;
}
function vec3#1 fStep15EC (vec3 x15ED)
{
  real _t15EE = prim @00A5<#∞; %3; $[]> (pvoF15C0, x15ED);
  field(3)[3] _t15EF = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t15F0 = prim @00A5<#∞; %3; $[3]> (_t15EF, x15ED);
  vec3 _t15F1 = prim *0036<$[3]> (_t15EE, _t15F0);
  field(3)[3] _t15F2 = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t15F3 = prim @00A5<#∞; %3; $[3]> (_t15F2, x15ED);
  field(3)[3] _t15F4 = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t15F5 = prim @00A5<#∞; %3; $[3]> (_t15F4, x15ED);
  real _t15F6 = prim •00CE<$[3]; $[3]; $[]> (_t15F3, _t15F5);
  vec3 _t15F7 = prim /0057<$[3]> (_t15F1, _t15F6);
  vec3 _t15F8 = prim unary -008B<$[3]> (_t15F7);
  return _t15F8;
}
function real#1 fStrength15F9 (vec3 x15FA)
{
  field(3)[3] _t15FB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15FC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15FB);
  tensor[3,3] _t15FD = prim @00A5<#∞; %3; $[3,3]> (_t15FC, x15FA);
  real[3] _t15FE = prim evals009F (_t15FD);
  int _t15FF = 1;
  real _t1600 = prim $sub01C0<real; %3> (_t15FE, _t15FF);
  real _t1601 = prim unary -008B<$[]> (_t1600);
  field(3)[3] _t1602 = prim ∇00A8<#∞; %3> (F15B9);
  vec3 _t1603 = prim @00A5<#∞; %3; $[3]> (_t1602, x15FA);
  real _t1604 = prim |()|00B5<$[3]> (_t1603);
  real _t1605 = prim +0017<$[]> (fBias04F6, _t1604);
  real _t1606 = prim /0055 (_t1601, _t1605);
  return _t1606;
}
function bool#1 fTest1607 (vec3 x1608)
{
  field(3)[3] _t1609 = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t160A = prim @00A5<#∞; %3; $[3]> (_t1609, x1608);
  real _t160B = prim |()|00B5<$[3]> (_t160A);
  real _t160C = 0.1e-7;
  bool _t160D = prim >0080 (_t160B, _t160C);
  return _t160D;
}
function real#1 fMask160E (vec3 x160F)
{
  real _t1610 = 0.1e1;
  return _t1610;
}
function bool#1 posTest1611 (vec3 x1612)
{
  bool _t1613;
  Femdata: RefCell _t1614 = func refcell0547 (block04CB);
  real _t1615 = 0.1e-8;
  bool _t1616 = extractFemItemN((_t1614, x1612, _t1615),InsideInsert(File=checkInside.in)(Mesh),);
  if _t1616 {
    bool _t1617;
    real _t1618 = func fStrength15F9 (x1612);
    bool _t1619 = prim >0080 (_t1618, fStrTh04F4);
    if _t1619 {
      bool _t161A;
      real _t161B = func fMask160E (x1612);
      bool _t161C = prim >=007E (_t161B, fMaskTh04F5);
      if _t161C {
        bool _t161D;
        bool _t161E = func fTest1607 (x1612);
        if _t161E {
          _t161D = func stupid15C1 (x1612);
        } else {
          _t161D = false;
        }
        _t161A = _t161D;
      } else {
        _t161A = false;
      }
      _t1617 = _t161A;
    } else {
      _t1617 = false;
    }
    _t1613 = _t1617;
  } else {
    _t1613 = false;
  }
  return _t1613;
}
globalInit {
  int _t04CF = 0;
  int _t04CD = 1;
  int _t04D1 = extractFemItem(NumCell(Mesh), int, block04CB);
  int _t04D0 = prim -0024 (_t04D1, _t04CD);
  int[] _t04D4 = prim $range01C3 (_t04CF, _t04D0);
  Femdata: MeshCell[] _t04D5 = {};
  foreach _t04D3 in _t04D4 {
    Femdata: MeshCell _t04D6 = loadFem(MeshCell, block04CB, _t04D3);
    _t04D5 = prim @0010<Femdata: MeshCell> (_t04D5, _t04D6);
  }
  0cell_block04CC = _t04D5;
  space04D7 = loadFem(Space, 0space04D7_intermedateGlobal04D8, block04CB);
  U04D9 = loadFem(FemFunc, 0U04D9_intermedateGlobal04DA, space04D7);
  c115B1 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04CC, cellChoice04DB);
  Femdata: FuncCell _t15B2 = func funcCell15AC (U04D9, c115B1);
  Femdata: FemFunc _t15B3 = extractFem(_t15B2, FemFunc);
  Femdata: FuncCell _t15B4 = func funcCell15AC (U04D9, c115B1);
  Femdata: FemFunc _t15B5 = extractFem(_t15B4, FemFunc);
  Femdata: Space _t15B6 = extractFem(_t15B5, Space);
  Femdata: FuncCell _t15B7 = func funcCell15AC (U04D9, c115B1);
  int _t15B8 = extractFemItem(CellIndex(FuncCell), int, _t15B7);
  F15B9 = femField(_t15B3,_t15B8,field(3)[],refField,);
  field(3)[3] _t15BA = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15BC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15BB);
  field(3)[3] _t15BD = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BE = prim •00E1<#∞; #∞; %3; $[3,3]; $[3]; $[3]> (_t15BC, _t15BD);
  pvoW15BF = prim ×00C2<#∞> (_t15BA, _t15BE);
  pvoF15C0 = prim •00E1<#∞; #∞; %3; $[3]; $[3]; $[]> (pvoW15BF, pvoW15BF);
  kernel _t15C4 = tent;
  IMAGE1D<double[3]> img15C5 = clamp(cmap04DD);
  CM15C6 = prim ⊛0074<#0; %1; $[3]> (_t15C4, img15C5);
  C15C7 = F15B9;
  vec3 _t15C8 = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camN15C9 = prim normalize0137<$[3]> (_t15C8);
  vec3 _t15CA = prim ×00BE (camN15C9, camUp04E6);
  camU15CB = prim normalize0137<$[3]> (_t15CA);
  camV15CC = prim ×00BE (camN15C9, camU15CB);
  vec3 _t15CD = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camDist15CE = prim |()|00B5<$[3]> (_t15CD);
  real _t15CF = 0.314159265358979323846264338327950288e1;
  real _t15D0 = prim *0034 (camFOV04EC, _t15CF);
  real _t15D1 = 0.36e3;
  real _t15D2 = prim /0055 (_t15D0, _t15D1);
  real _t15D3 = prim tan0179 (_t15D2);
  camVmax15D4 = prim *0034 (_t15D3, camDist15CE);
  real _t15D5 = (real)iresU04EE;
  real _t15D6 = prim *0034 (camVmax15D4, _t15D5);
  real _t15D7 = (real)iresV04EF;
  camUmax15D8 = prim /0055 (_t15D6, _t15D7);
  camNearVsp15D9 = prim +0017<$[]> (camNear04EA, camDist15CE);
  camFarVsp15DA = prim +0017<$[]> (camFar04EB, camDist15CE);
  tensor[3,3] _t15DB = [camU15CB, camV15CC, camN15C9];
  tensor[3,3] _t15DC = prim transpose0145<%3; %3> (_t15DB);
  vec3 _t15DD = prim normalize0137<$[3]> (litdir0506);
  litwsp15DE = prim •00CE<$[3,3]; $[3]; $[3]> (_t15DC, _t15DD);
}
strand ray (int ui161F, int vi1620) {
  real rayU1621;
  real rayV1628;
  real rayN162F;
  vec3 UV1630;
  vec3 rayOrig1633;
  vec3 rayVec1638;
  real alphaFix163D;
  vec3 eyeDir1640;
  real phKa1642;
  real phKd1643;
  real phKs1644;
  real phSp1645;
  output vec4 rgba1646;
  output real raw164B;
  vec3 rgb164C;
  real transp1650;
  {
    real _t1622 = prim unary -008B<$[]> (camUmax15D8);
    real _t1623 = -0.5e0;
    real _t1624 = (real)ui161F;
    real _t1625 = (real)iresU04EE;
    real _t1626 = 0.5e0;
    real _t1627 = prim -0026<$[]> (_t1625, _t1626);
    rayU1621 = prim lerp0098<$[]> (_t1622, camUmax15D8, _t1623, _t1624, _t1627);
    real _t1629 = prim unary -008B<$[]> (camVmax15D4);
    real _t162A = -0.5e0;
    real _t162B = (real)vi1620;
    real _t162C = (real)iresV04EF;
    real _t162D = 0.5e0;
    real _t162E = prim -0026<$[]> (_t162C, _t162D);
    rayV1628 = prim lerp0098<$[]> (_t1629, camVmax15D4, _t162A, _t162B, _t162E);
    rayN162F = camNearVsp15D9;
    vec3 _t1631 = prim *0036<$[3]> (rayU1621, camU15CB);
    vec3 _t1632 = prim *0036<$[3]> (rayV1628, camV15CC);
    UV1630 = prim +0017<$[3]> (_t1631, _t1632);
    vec3 _t1634;
    if camOrtho04ED {
      _t1634 = UV1630;
    } else {
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      real _t1637 = 0.e0;
      _t1634 = [_t1635, _t1636, _t1637];
    }
    rayOrig1633 = prim +0017<$[3]> (camEye04DE, _t1634);
    vec3 _t1639;
    if camOrtho04ED {
      real _t163A = 0.e0;
      real _t163B = 0.e0;
      real _t163C = 0.e0;
      _t1639 = [_t163A, _t163B, _t163C];
    } else {
      _t1639 = prim /0057<$[3]> (UV1630, camDist15CE);
    }
    rayVec1638 = prim +0017<$[3]> (camN15C9, _t1639);
    real _t163E = prim |()|00B5<$[3]> (rayVec1638);
    real _t163F = prim *0034 (_t163E, rayStep04F0);
    alphaFix163D = prim /0055 (_t163F, refStep04F1);
    vec3 _t1641 = prim normalize0137<$[3]> (rayVec1638);
    eyeDir1640 = prim unary -008B<$[3]> (_t1641);
    phKa1642 = phong04F9[0];
    phKd1643 = phong04F9[1];
    phKs1644 = phong04F9[2];
    phSp1645 = phong04F9[3];
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    real _t164A = 0.e0;
    rgba1646 = [_t1647, _t1648, _t1649, _t164A];
    raw164B = 0.e0;
    real _t164D = 0.e0;
    real _t164E = 0.e0;
    real _t164F = 0.e0;
    rgb164C = [_t164D, _t164E, _t164F];
    transp1650 = 0.1e1;
  }
  update
  {
    rayN162F = prim +0017<$[]> (rayN162F, rayStep04F0);
    bool _t1651 = prim >0080 (rayN162F, camFarVsp15DA);
    if _t1651 {
      stabilize;
    }
    vec3 _t1652 = prim *0036<$[3]> (rayN162F, rayVec1638);
    vec3 pos1653 = prim +0017<$[3]> (rayOrig1633, _t1652);
    bool _t1654 = func posTest1611 (pos1653);
    bool _t1655 = prim !00BC (_t1654);
    if _t1655 {
      continue;
    }
    vec3 step1656 = func fStep15EC (pos1653);
    real _t1657 = prim |()|00B5<$[3]> (step1656);
    real aa1658 = func atent15DF (maxAlpha04F7, _t1657);
    real _t1659 = 0.e0;
    bool _t165A = prim ==0084 (aa1658, _t1659);
    if _t165A {
      continue;
    }
    real _t165B = 0.1e1;
    real _t165C = 0.1e1;
    real _t165D = prim -0026<$[]> (_t165C, aa1658);
    real _t165E = prim ^0069 (_t165D, alphaFix163D);
    aa1658 = prim -0026<$[]> (_t165B, _t165E);
    vec3 _t165F = prim normalize0137<$[3]> (step1656);
    vec3 snorm1660 = prim unary -008B<$[3]> (_t165F);
    real _t1661 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, litwsp15DE);
    int _t1662 = 2;
    real dcomp1663 = prim ^0068 (_t1661, _t1662);
    real scomp1664 = 0.e0;
    real _t1665 = 0.e0;
    bool _t1666 = prim !=0088 (phKs1644, _t1665);
    if _t1666 {
      vec3 _t1667 = prim +0017<$[3]> (eyeDir1640, litwsp15DE);
      vec3 _t1668 = prim normalize0137<$[3]> (_t1667);
      real _t1669 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, _t1668);
      real _t166A = prim |()|00B5<$[]> (_t1669);
      scomp1664 = prim ^0069 (_t166A, phSp1645);
    }
    vec3 dcol166B = prim lerp0098<$[3]> (mcNear04FE, mcFar0502, camNearVsp15D9, rayN162F, camFarVsp15DA);
    real cmin166C = cminmax050A[0];
    real cmax166D = cminmax050A[1];
    real _t166E = 0.1e1;
    real _t166F = 0.1e1;
    real _t1670 = 0.1e1;
    vec3 mcol1671 = [_t166E, _t166F, _t1670];
    bool _t1672 = prim !=0088 (cmin166C, cmax166D);
    if _t1672 {
      real _t1673 = 0.e0;
      real _t1674 = 0.1e1;
      vec3 _t1675 = prim +0017<$[3]> (pos1653, step1656);
      real _t1676 = prim @00A5<#∞; %3; $[]> (C15C7, _t1675);
      real _t1677 = prim lerp0098<$[]> (_t1673, _t1674, cmin166C, _t1676, cmax166D);
      mcol1671 = prim @00A5<#0; %1; $[3]> (CM15C6, _t1677);
    }
    real _t1678 = prim *0034 (transp1650, aa1658);
    real _t1679 = prim *0034 (phKd1643, dcomp1663);
    real _t167A = prim +0017<$[]> (phKa1642, _t1679);
    vec3 _t167B = prim modulate0129<%3> (dcol166B, mcol1671);
    vec3 _t167C = prim *0036<$[3]> (_t167A, _t167B);
    real _t167D = prim *0034 (phKs1644, scomp1664);
    real _t167E = 0.1e1;
    real _t167F = 0.1e1;
    real _t1680 = 0.1e1;
    vec3 _t1681 = [_t167E, _t167F, _t1680];
    vec3 _t1682 = prim *0036<$[3]> (_t167D, _t1681);
    vec3 _t1683 = prim +0017<$[3]> (_t167C, _t1682);
    vec3 _t1684 = prim *0036<$[3]> (_t1678, _t1683);
    rgb164C = prim +0017<$[3]> (rgb164C, _t1684);
    real _t1685 = 0.1e1;
    real _t1686 = prim -0026<$[]> (_t1685, aa1658);
    transp1650 = prim *0034 (transp1650, _t1686);
    bool _t1687 = prim <007A (transp1650, transp004F2);
    if _t1687 {
      transp1650 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1688 = 0.1e1;
    bool _t1689 = prim <007A (transp1650, _t1688);
    if _t1689 {
      real _t168A = 0.1e1;
      real aa168B = prim -0026<$[]> (_t168A, transp1650);
      real _t168C = rgb164C[0];
      real _t168D = prim /0055 (_t168C, aa168B);
      real _t168E = rgb164C[1];
      real _t168F = prim /0055 (_t168E, aa168B);
      real _t1690 = rgb164C[2];
      real _t1691 = prim /0055 (_t1690, aa168B);
      rgba1646 = [_t168D, _t168F, _t1691, aa168B];
    }
  }
}
grid(2) {
  int _t1692 = 0;
  int _t1693 = 1;
  int _t1694 = prim -0024 (iresV04EF, _t1693);
  int[] _t1695 = prim $range01C3 (_t1692, _t1694);
  foreach vi169B in _t1695 {
    int _t1696 = 0;
    int _t1697 = 1;
    int _t1698 = prim -0024 (iresU04EE, _t1697);
    int[] _t1699 = prim $range01C3 (_t1696, _t1698);
    foreach ui169A in _t1699 {
      new ray (ui169A, vi169B);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04CB;
input FemData:Space 0space04D7_intermedateGlobal04D8;
input FemData:FemFunc 0U04D9_intermedateGlobal04DA;
input int cellChoice04DB;
input image(1)[3] cmap04DD = image("cmap.nrrd");
input vec3 camEye04DE = <default>;
input vec3 camAt04E2 = <default>;
input vec3 camUp04E6 = <default>;
input real camNear04EA = <default>;
input real camFar04EB = <default>;
input real camFOV04EC = <default>;
input bool camOrtho04ED = <default>;
input int iresU04EE = <default>;
input int iresV04EF = <default>;
input real rayStep04F0 = <default>;
input real refStep04F1 = <default>;
input real transp004F2 = <default>;
input real thick04F3 = <default>;
input real fStrTh04F4 = <default>;
input real fMaskTh04F5 = <default>;
input real fBias04F6 = <default>;
input real maxAlpha04F7 = <default>;
input bool light04F8 = <default>;
input vec4 phong04F9 = <default>;
input vec3 mcNear04FE = <default>;
input vec3 mcFar0502 = <default>;
input vec3 litdir0506 = <default>;
input vec2 cminmax050A = <default>;
constants {
  real _t04DF = 0.e0;
  real _t04E0 = -0.2e1;
  real _t04E1 = 0.e0;
  camEye04DE = [_t04DF, _t04E0, _t04E1];
  real _t04E3 = 0.e0;
  real _t04E4 = 0.e0;
  real _t04E5 = 0.e0;
  camAt04E2 = [_t04E3, _t04E4, _t04E5];
  real _t04E7 = 0.e0;
  real _t04E8 = 0.e0;
  real _t04E9 = 0.1e1;
  camUp04E6 = [_t04E7, _t04E8, _t04E9];
  camNear04EA = -0.4e1;
  camFar04EB = 0.4e1;
  camFOV04EC = 0.1e2;
  camOrtho04ED = false;
  iresU04EE = 100;
  iresV04EF = 100;
  rayStep04F0 = 0.1e-3;
  refStep04F1 = 0.1e-3;
  transp004F2 = 0.5e-2;
  thick04F3 = 0.1e-1;
  fStrTh04F4 = 0.e0;
  fMaskTh04F5 = 0.e0;
  fBias04F6 = 0.1e0;
  maxAlpha04F7 = 0.1e1;
  light04F8 = false;
  real _t04FA = 0.1e0;
  real _t04FB = 0.7e0;
  real _t04FC = 0.2e0;
  real _t04FD = 0.1e3;
  phong04F9 = [_t04FA, _t04FB, _t04FC, _t04FD];
  real _t04FF = 0.1e1;
  real _t0500 = 0.1e1;
  real _t0501 = 0.1e1;
  mcNear04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.1e1;
  real _t0504 = 0.1e1;
  real _t0505 = 0.1e1;
  mcFar0502 = [_t0503, _t0504, _t0505];
  real _t0507 = 0.e0;
  real _t0508 = -0.1e1;
  real _t0509 = 0.e0;
  litdir0506 = [_t0507, _t0508, _t0509];
  real _t050B = 0.e0;
  real _t050C = 0.e0;
  cminmax050A = [_t050B, _t050C];
}
global Femdata: MeshCell[] 0cell_block04CC;
global Femdata: Space space04D7;
global Femdata: FemFunc U04D9;
global Femdata: MeshCell c115B1;
global field(3)[] F15B9;
global field(3)[3] pvoW15BF;
global field(3)[] pvoF15C0;
global field#0(1)[3] CM15C6;
global field(3)[] C15C7;
global vec3 camN15C9;
global vec3 camU15CB;
global vec3 camV15CC;
global real camDist15CE;
global real camVmax15D4;
global real camUmax15D8;
global real camNearVsp15D9;
global real camFarVsp15DA;
global vec3 litwsp15DE;
function bool#0 !=050D (Femdata: MeshCell cell1050E, Femdata: MeshCell cell1050F)
{
  int _t0510 = extractFemItem(CellIndex(Mesh), int, cell1050E);
  int _t0511 = extractFemItem(CellIndex(Mesh), int, cell1050F);
  bool _t0512 = prim !=0086 (_t0510, _t0511);
  return _t0512;
}
function bool#0 ==0513 (Femdata: MeshCell cell1050E, Femdata: MeshCell cell1050F)
{
  int _t0514 = extractFemItem(CellIndex(Mesh), int, cell1050E);
  int _t0515 = extractFemItem(CellIndex(Mesh), int, cell1050F);
  bool _t0516 = prim ==0082 (_t0514, _t0515);
  return _t0516;
}
function Femdata: MeshPos#0 findPos0517 (Femdata: Mesh mesh0518, vec3 pos0519)
{
  real _t051A = 0.e0;
  real _t051B = 0.e0;
  real _t051C = 0.e0;
  xn051D = [_t051A, _t051B, _t051C];
  newtonInt051E = 0;
  cellInt051F = extractFemItem(StartCell(Mesh), int, mesh0518);
  int _t0520 = extractFemItem(NumCell(Mesh), int, mesh0518);
  int _t0521 = 1;
  numCell0522 = prim -0024 (_t0520, _t0521);
  int _t0523 = 0;
  int _t0524 = 2;
  int _t0525 = 1;
  int _t0526 = prim +0015 (_t0524, _t0525);
  int _t0527 = prim *0033 (_t0526, numCell0522);
  int[] _t0528 = prim $range01C3 (_t0523, _t0527);
  foreach itter0543 in _t0528 {
    field(3)[3] _t0529 = femField(mesh0518,cellInt051F,field(3)[3],Transform,);
    field(3)[3,3] _t052A = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0529);
    field(3)[3,3] _t052B = prim inv015E<#∞; %3> (_t052A);
    real _t052C = 0.e0;
    real _t052D = 0.e0;
    real _t052E = 0.e0;
    vec3 _t052F = [_t052C, _t052D, _t052E];
    A0530 = prim @00A5<#∞; %3; $[3,3]> (_t052B, _t052F);
    field(3)[3] _t0531 = femField(mesh0518,cellInt051F,field(3)[3],Transform,);
    field(3)[3] _t0532 = prim -002E<#∞; %3; $[3]> (_t0531, pos0519);
    field(3)[3] _t0533 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0530, _t0532);
    delta0534 = prim @00A5<#∞; %3; $[3]> (_t0533, xn051D);
    xn051D = prim -0026<$[3]> (xn051D, delta0534);
    real _t0535 = 0.1e-7;
    real _t0536 = 0.1e-7;
    real _t0537 = prim *0034 (_t0535, _t0536);
    real _t0538 = prim •00CE<$[3]; $[3]; $[]> (delta0534, delta0534);
    bool _t0539 = prim >=007E (_t0537, _t0538);
    if _t0539 {
      real _t053A = 0.1e-8;
      bool _t053B = extractFemItemN((mesh0518, xn051D, _t053A),InsideInsert(File=checkInside.in)(Mesh),);
      if _t053B {
        Femdata: MeshPos _t053C = extractFemItemN((mesh0518, cellInt051F, xn051D, pos0519),AllBuild(MeshPos),);
        return _t053C;
      }
    }
    int _t053D = 1;
    newtonInt051E = prim +0015 (newtonInt051E, _t053D);
    int _t053E = 2;
    bool _t053F = prim >=007D (newtonInt051E, _t053E);
    if _t053F {
      newtonInt051E = 0;
      bool _t0540 = prim >=007D (cellInt051F, numCell0522);
      if _t0540 {
        Femdata: MeshPos _t0541 = extractFemItemN((mesh0518),InvalidBuild(MeshPos),);
        return _t0541;
      } else {
        int _t0542 = 1;
        cellInt051F = prim +0015 (cellInt051F, _t0542);
      }
    }
  }
  string _t0544 = "Bad end 2";
  string _t0545 = "\n";
  print (_t0544, _t0545);
  Femdata: MeshPos _t0546 = extractFemItemN((mesh0518),InvalidBuild(MeshPos),);
  return _t0546;
}
function Femdata: RefCell#1 refcell0547 (Femdata: Mesh arg00548)
{
  Femdata: RefCell _t0549 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg00548);
  return _t0549;
}
function Femdata: MeshCell[]#0 cells054A (Femdata: Mesh arg0054B)
{
  Femdata: MeshCell[] _t054C = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg0054B);
  return _t054C;
}
function Femdata: MeshCell[]#0 cells054D (Femdata: Mesh arg0054B)
{
  int _t054E = 0;
  int _t054F = extractFemItem(NumCell(Mesh), int, arg0054B);
  int[] _t0550 = prim $range01C3 (_t054E, _t054F);
  Femdata: MeshCell[] accum0553 = {};
  foreach i0551 in _t0550 {
    Femdata: MeshCell _t0552 = loadFem(MeshCell, arg0054B, i0551);
    accum0553 = prim @0010<Femdata: MeshCell> (accum0553, _t0552);
  }
  return accum0553;
}
function int#0 numCell0554 (Femdata: Mesh arg00548)
{
  int _t0555 = extractFemItem(NumCell(Mesh), int, arg00548);
  return _t0555;
}
function tensor[3,3,3,3]#0 mesh_t_transform_30556 (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t055A = femField(mesh0559,cell0558,field(3)[3],Transform,);
  field(3)[3,3] _t055B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t055A);
  field(3)[3,3,3] _t055C = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t055B);
  field(3)[3,3,3,3] _t055D = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t055C);
  tensor[3,3,3,3] _t055E = prim @00A5<#∞; %3; $[3,3,3,3]> (_t055D, pos0557);
  return _t055E;
}
function tensor[3,3,3]#0 mesh_t_transform_2055F (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t0560 = femField(mesh0559,cell0558,field(3)[3],Transform,);
  field(3)[3,3] _t0561 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0560);
  field(3)[3,3,3] _t0562 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0561);
  tensor[3,3,3] _t0563 = prim @00A5<#∞; %3; $[3,3,3]> (_t0562, pos0557);
  return _t0563;
}
function tensor[3,3]#0 mesh_t_transform_10564 (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t0565 = femField(mesh0559,cell0558,field(3)[3],Transform,);
  field(3)[3,3] _t0566 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0565);
  tensor[3,3] _t0567 = prim @00A5<#∞; %3; $[3,3]> (_t0566, pos0557);
  return _t0567;
}
function vec3#2 mesh_t_transform_00568 (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t0569 = femField(mesh0559,cell0558,field(3)[3],Transform,);
  vec3 _t056A = prim @00A5<#∞; %3; $[3]> (_t0569, pos0557);
  return _t056A;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse056B (vec3 pos056C, int cellInt056D, Femdata: Mesh mesh056E)
{
  real _t056F = 0.e0;
  real _t0570 = 0.e0;
  real _t0571 = 0.e0;
  xn0572 = [_t056F, _t0570, _t0571];
  field(3)[3] _t0573 = femField(mesh056E,cellInt056D,field(3)[3],Transform,);
  field(3)[3,3] _t0574 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0573);
  field(3)[3,3] _t0575 = prim inv015E<#∞; %3> (_t0574);
  real _t0576 = 0.e0;
  real _t0577 = 0.e0;
  real _t0578 = 0.e0;
  vec3 _t0579 = [_t0576, _t0577, _t0578];
  A057A = prim @00A5<#∞; %3; $[3,3]> (_t0575, _t0579);
  int _t057B = 0;
  int _t057C = 2;
  int[] _t057D = prim $range01C3 (_t057B, _t057C);
  foreach itter058B in _t057D {
    field(3)[3] _t057E = femField(mesh056E,cellInt056D,field(3)[3],Transform,);
    field(3)[3] _t057F = prim -002E<#∞; %3; $[3]> (_t057E, pos056C);
    field(3)[3] _t0580 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A057A, _t057F);
    delta0581 = prim @00A5<#∞; %3; $[3]> (_t0580, xn0572);
    xn0572 = prim -0026<$[3]> (xn0572, delta0581);
    real _t0582 = 0.1e-7;
    real _t0583 = 0.1e-7;
    real _t0584 = prim *0034 (_t0582, _t0583);
    real _t0585 = prim •00CE<$[3]; $[3]; $[]> (delta0581, delta0581);
    bool _t0586 = prim >=007E (_t0584, _t0585);
    if _t0586 {
      real _t0587 = 0.1e-8;
      bool _t0588 = extractFemItemN((mesh056E, xn0572, _t0587),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0588 {
        Femdata: MeshPos _t0589 = extractFemItemN((mesh056E, cellInt056D, xn0572, pos056C),AllBuild(MeshPos),);
        return _t0589;
      } else {
        Femdata: MeshPos _t058A = extractFemItemN((mesh056E),InvalidBuild(MeshPos),);
        return _t058A;
      }
    }
  }
  Femdata: MeshPos _t058C = extractFemItemN((mesh056E),InvalidBuild(MeshPos),);
  return _t058C;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos058D (Femdata: MeshPos pos058E)
{
  bool _t058F = extractFemItem(WorldTest(MeshPos), bool, pos058E);
  if _t058F {
    vec3 _t0590 = extractFemItem(RefPos(MeshPos), vec3, pos058E);
    int _t0591 = extractFemItem(CellIndex(MeshPos), int, pos058E);
    Femdata: Mesh _t0592 = extractFem(pos058E, Mesh);
    vec3 _t0593 = func mesh_t_transform_00568 (_t0590, _t0591, _t0592);
    Femdata: MeshPos _t0594 = extractFemItemN((pos058E, _t0593),NewWorld(MeshPos),);
    return _t0594;
  } else {
    return pos058E;
  }
}
function vec3#0 worldPos0595 (Femdata: MeshPos pos058E)
{
  vec3 _t0596 = extractFemItem(RefPos(MeshPos), vec3, pos058E);
  int _t0597 = extractFemItem(CellIndex(MeshPos), int, pos058E);
  Femdata: Mesh _t0598 = extractFem(pos058E, Mesh);
  vec3 _t0599 = func mesh_t_transform_00568 (_t0596, _t0597, _t0598);
  return _t0599;
}
function Femdata: MeshPos#0 $exitPos059A (Femdata: Mesh mesh059B, int cellId059C, vec3 refPos059D, vec3 dPos059E, real[2] time059F)
{
  int _t05A0 = -1;
  real _t05A1 = time059F[1];
  int _t05A2 = prim $r2i01B7 (_t05A1);
  int[2] _t05A4 = func nextCell405A3 (_t05A2, cellId059C, mesh059B);
  int _t05A5 = 0;
  int _t05A6 = prim $sub01C0<int; %2> (_t05A4, _t05A5);
  bool _t05A7 = prim !=0086 (_t05A0, _t05A6);
  if _t05A7 {
    string _t05A8 = "face ";
    real _t05A9 = time059F[1];
    int _t05AA = prim $r2i01B7 (_t05A9);
    string _t05AB = " to ";
    real _t05AC = time059F[1];
    int _t05AD = prim $r2i01B7 (_t05AC);
    int[2] _t05AE = func nextCell405A3 (_t05AD, cellId059C, mesh059B);
    int _t05AF = 1;
    int _t05B0 = prim $sub01C0<int; %2> (_t05AE, _t05AF);
    string _t05B1 = "\n";
    string _t05B2 = "got: ";
    real _t05B3 = 0.1e1;
    real _t05B4 = 0.e0;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.e0;
    vec4 _t05B7 = [_t05B3, _t05B4, _t05B5, _t05B6];
    real _t05B8 = 0.e0;
    real _t05B9 = 0.1e1;
    real _t05BA = 0.e0;
    real _t05BB = 0.e0;
    vec4 _t05BC = [_t05B8, _t05B9, _t05BA, _t05BB];
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.1e1;
    real _t05C0 = 0.e0;
    vec4 _t05C1 = [_t05BD, _t05BE, _t05BF, _t05C0];
    real _t05C2 = 0.e0;
    real _t05C3 = 0.e0;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.1e1;
    vec4 _t05C6 = [_t05C2, _t05C3, _t05C4, _t05C5];
    tensor[4,4] _t05C7 = [_t05B7, _t05BC, _t05C1, _t05C6];
    real _t05C8 = 0.1e1;
    real _t05C9 = 0.e0;
    real _t05CA = 0.e0;
    real _t05CB = 0.e0;
    vec4 _t05CC = [_t05C8, _t05C9, _t05CA, _t05CB];
    real _t05CD = 0.e0;
    real _t05CE = 0.1e1;
    real _t05CF = 0.e0;
    real _t05D0 = 0.e0;
    vec4 _t05D1 = [_t05CD, _t05CE, _t05CF, _t05D0];
    real _t05D2 = 0.e0;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.1e1;
    real _t05D5 = 0.1e1;
    vec4 _t05D6 = [_t05D2, _t05D3, _t05D4, _t05D5];
    real _t05D7 = 0.e0;
    real _t05D8 = 0.e0;
    real _t05D9 = 0.e0;
    real _t05DA = 0.1e1;
    vec4 _t05DB = [_t05D7, _t05D8, _t05D9, _t05DA];
    tensor[4,4] _t05DC = [_t05CC, _t05D1, _t05D6, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    real _t05DF = 0.e0;
    real _t05E0 = 0.e0;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.1e1;
    real _t05E5 = 0.e0;
    vec4 _t05E6 = [_t05E2, _t05E3, _t05E4, _t05E5];
    real _t05E7 = 0.1e1;
    real _t05E8 = -0.1e1;
    real _t05E9 = 0.e0;
    real _t05EA = -0.5e0;
    vec4 _t05EB = [_t05E7, _t05E8, _t05E9, _t05EA];
    real _t05EC = 0.e0;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    real _t05EF = 0.1e1;
    vec4 _t05F0 = [_t05EC, _t05ED, _t05EE, _t05EF];
    tensor[4,4] _t05F1 = [_t05E1, _t05E6, _t05EB, _t05F0];
    real _t05F2 = 0.e0;
    real _t05F3 = 0.e0;
    real _t05F4 = -0.1e1;
    real _t05F5 = 0.e0;
    vec4 _t05F6 = [_t05F2, _t05F3, _t05F4, _t05F5];
    real _t05F7 = 0.e0;
    real _t05F8 = 0.1e1;
    real _t05F9 = 0.e0;
    real _t05FA = 0.e0;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = -0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = -0.5e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.e0;
    real _t0603 = 0.e0;
    real _t0604 = 0.1e1;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    tensor[4,4] _t0606 = [_t05F6, _t05FB, _t0600, _t0605];
    real _t0607 = 0.e0;
    real _t0608 = -0.1e1;
    real _t0609 = 0.e0;
    real _t060A = 0.e0;
    vec4 _t060B = [_t0607, _t0608, _t0609, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = -0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = -0.1e1;
    real _t0613 = 0.e0;
    real _t0614 = -0.5e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.e0;
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    tensor[4,4] _t061B = [_t060B, _t0610, _t0615, _t061A];
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    real _t061F = 0.e0;
    vec4 _t0620 = [_t061C, _t061D, _t061E, _t061F];
    real _t0621 = 0.e0;
    real _t0622 = -0.1e1;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.1e1;
    real _t0627 = -0.1e1;
    real _t0628 = 0.e0;
    real _t0629 = -0.5e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.e0;
    real _t062D = 0.e0;
    real _t062E = 0.1e1;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    tensor[4,4] _t0630 = [_t0620, _t0625, _t062A, _t062F];
    tensor[4,4][6] _t0631 = {_t05C7, _t05DC, _t05F1, _t0606, _t061B, _t0630};
    real _t0632 = 0.1e1;
    real _t0633 = 0.e0;
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    real _t0637 = 0.e0;
    real _t0638 = 0.1e1;
    real _t0639 = 0.e0;
    real _t063A = 0.e0;
    vec4 _t063B = [_t0637, _t0638, _t0639, _t063A];
    real _t063C = 0.e0;
    real _t063D = 0.e0;
    real _t063E = 0.1e1;
    real _t063F = -0.1e1;
    vec4 _t0640 = [_t063C, _t063D, _t063E, _t063F];
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    real _t0643 = 0.e0;
    real _t0644 = 0.1e1;
    vec4 _t0645 = [_t0641, _t0642, _t0643, _t0644];
    tensor[4,4] _t0646 = [_t0636, _t063B, _t0640, _t0645];
    real _t0647 = 0.1e1;
    real _t0648 = 0.e0;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    vec4 _t064B = [_t0647, _t0648, _t0649, _t064A];
    real _t064C = 0.e0;
    real _t064D = 0.1e1;
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    vec4 _t0650 = [_t064C, _t064D, _t064E, _t064F];
    real _t0651 = 0.e0;
    real _t0652 = 0.e0;
    real _t0653 = 0.1e1;
    real _t0654 = 0.e0;
    vec4 _t0655 = [_t0651, _t0652, _t0653, _t0654];
    real _t0656 = 0.e0;
    real _t0657 = 0.e0;
    real _t0658 = 0.e0;
    real _t0659 = 0.1e1;
    vec4 _t065A = [_t0656, _t0657, _t0658, _t0659];
    tensor[4,4] _t065B = [_t064B, _t0650, _t0655, _t065A];
    real _t065C = 0.e0;
    real _t065D = 0.1e1;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.e0;
    real _t0663 = 0.1e1;
    real _t0664 = -0.1e1;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.1e1;
    real _t0667 = -0.1e1;
    real _t0668 = 0.e0;
    real _t0669 = -0.5e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.e0;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.e0;
    real _t0672 = 0.e0;
    real _t0673 = -0.1e1;
    real _t0674 = 0.1e1;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.1e1;
    real _t0678 = 0.e0;
    real _t0679 = 0.e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = 0.1e1;
    real _t067C = -0.1e1;
    real _t067D = 0.e0;
    real _t067E = -0.5e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.e0;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = 0.e0;
    real _t0687 = -0.1e1;
    real _t0688 = 0.e0;
    real _t0689 = 0.e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    real _t068D = -0.1e1;
    real _t068E = 0.1e1;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = 0.1e1;
    real _t0691 = -0.1e1;
    real _t0692 = 0.e0;
    real _t0693 = -0.5e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.e0;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = 0.e0;
    real _t069C = 0.e0;
    real _t069D = 0.1e1;
    real _t069E = -0.1e1;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = 0.e0;
    real _t06A1 = -0.1e1;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.1e1;
    real _t06A6 = -0.1e1;
    real _t06A7 = 0.e0;
    real _t06A8 = -0.5e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.e0;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][6] _t06B0 = {_t0646, _t065B, _t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.1e1;
    real _t06B2 = 0.e0;
    real _t06B3 = 0.1e1;
    real _t06B4 = 0.5e0;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.1e1;
    real _t06B7 = 0.e0;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.e0;
    real _t06BC = 0.1e1;
    real _t06BD = 0.e0;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.1e1;
    real _t06C9 = 0.5e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.1e1;
    real _t06CC = 0.e0;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.1e1;
    real _t06D2 = 0.e0;
    real _t06D3 = 0.1e1;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.1e1;
    real _t06DC = 0.e0;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = 0.e0;
    real _t06E1 = 0.1e1;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = -0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.1e1;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.e0;
    real _t06FB = 0.e0;
    real _t06FC = 0.1e1;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    real _t0705 = -0.1e1;
    real _t0706 = 0.e0;
    real _t0707 = 0.e0;
    real _t0708 = 0.e0;
    vec4 _t0709 = [_t0705, _t0706, _t0707, _t0708];
    real _t070A = 0.e0;
    real _t070B = -0.1e1;
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    vec4 _t070E = [_t070A, _t070B, _t070C, _t070D];
    real _t070F = 0.e0;
    real _t0710 = 0.e0;
    real _t0711 = 0.1e1;
    real _t0712 = 0.e0;
    vec4 _t0713 = [_t070F, _t0710, _t0711, _t0712];
    real _t0714 = 0.e0;
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.1e1;
    vec4 _t0718 = [_t0714, _t0715, _t0716, _t0717];
    tensor[4,4] _t0719 = [_t0709, _t070E, _t0713, _t0718];
    real _t071A = 0.e0;
    real _t071B = 0.1e1;
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    vec4 _t071E = [_t071A, _t071B, _t071C, _t071D];
    real _t071F = -0.1e1;
    real _t0720 = 0.e0;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    vec4 _t0723 = [_t071F, _t0720, _t0721, _t0722];
    real _t0724 = 0.e0;
    real _t0725 = 0.e0;
    real _t0726 = 0.1e1;
    real _t0727 = 0.e0;
    vec4 _t0728 = [_t0724, _t0725, _t0726, _t0727];
    real _t0729 = 0.e0;
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.1e1;
    vec4 _t072D = [_t0729, _t072A, _t072B, _t072C];
    tensor[4,4] _t072E = [_t071E, _t0723, _t0728, _t072D];
    tensor[4,4][6] _t072F = {_t06C5, _t06DA, _t06EF, _t0704, _t0719, _t072E};
    real _t0730 = 0.e0;
    real _t0731 = 0.1e1;
    real _t0732 = 0.1e1;
    real _t0733 = 0.5e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = -0.1e1;
    real _t073B = 0.e0;
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.e0;
    real _t0746 = 0.1e1;
    real _t0747 = 0.1e1;
    real _t0748 = 0.5e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.1e1;
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = -0.1e1;
    real _t0750 = 0.e0;
    real _t0751 = 0.e0;
    real _t0752 = 0.1e1;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    real _t075A = 0.e0;
    real _t075B = 0.1e1;
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    vec4 _t075E = [_t075A, _t075B, _t075C, _t075D];
    real _t075F = -0.1e1;
    real _t0760 = 0.e0;
    real _t0761 = 0.e0;
    real _t0762 = 0.e0;
    vec4 _t0763 = [_t075F, _t0760, _t0761, _t0762];
    real _t0764 = 0.e0;
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.e0;
    vec4 _t0768 = [_t0764, _t0765, _t0766, _t0767];
    real _t0769 = 0.e0;
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.1e1;
    vec4 _t076D = [_t0769, _t076A, _t076B, _t076C];
    tensor[4,4] _t076E = [_t075E, _t0763, _t0768, _t076D];
    real _t076F = 0.1e1;
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    vec4 _t0773 = [_t076F, _t0770, _t0771, _t0772];
    real _t0774 = 0.e0;
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    vec4 _t0778 = [_t0774, _t0775, _t0776, _t0777];
    real _t0779 = 0.e0;
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    vec4 _t077D = [_t0779, _t077A, _t077B, _t077C];
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.1e1;
    vec4 _t0782 = [_t077E, _t077F, _t0780, _t0781];
    tensor[4,4] _t0783 = [_t0773, _t0778, _t077D, _t0782];
    real _t0784 = 0.e0;
    real _t0785 = -0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    vec4 _t0788 = [_t0784, _t0785, _t0786, _t0787];
    real _t0789 = 0.1e1;
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = 0.e0;
    vec4 _t078D = [_t0789, _t078A, _t078B, _t078C];
    real _t078E = 0.e0;
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    vec4 _t0792 = [_t078E, _t078F, _t0790, _t0791];
    real _t0793 = 0.e0;
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.1e1;
    vec4 _t0797 = [_t0793, _t0794, _t0795, _t0796];
    tensor[4,4] _t0798 = [_t0788, _t078D, _t0792, _t0797];
    real _t0799 = -0.1e1;
    real _t079A = 0.e0;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    vec4 _t079D = [_t0799, _t079A, _t079B, _t079C];
    real _t079E = 0.e0;
    real _t079F = -0.1e1;
    real _t07A0 = 0.e0;
    real _t07A1 = 0.e0;
    vec4 _t07A2 = [_t079E, _t079F, _t07A0, _t07A1];
    real _t07A3 = 0.e0;
    real _t07A4 = 0.e0;
    real _t07A5 = 0.1e1;
    real _t07A6 = 0.e0;
    vec4 _t07A7 = [_t07A3, _t07A4, _t07A5, _t07A6];
    real _t07A8 = 0.e0;
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.1e1;
    vec4 _t07AC = [_t07A8, _t07A9, _t07AA, _t07AB];
    tensor[4,4] _t07AD = [_t079D, _t07A2, _t07A7, _t07AC];
    tensor[4,4][6] _t07AE = {_t0744, _t0759, _t076E, _t0783, _t0798, _t07AD};
    real _t07AF = -0.1e1;
    real _t07B0 = 0.e0;
    real _t07B1 = 0.1e1;
    real _t07B2 = 0.5e0;
    vec4 _t07B3 = [_t07AF, _t07B0, _t07B1, _t07B2];
    real _t07B4 = -0.1e1;
    real _t07B5 = 0.e0;
    real _t07B6 = 0.e0;
    real _t07B7 = 0.e0;
    vec4 _t07B8 = [_t07B4, _t07B5, _t07B6, _t07B7];
    real _t07B9 = 0.e0;
    real _t07BA = -0.1e1;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    vec4 _t07BD = [_t07B9, _t07BA, _t07BB, _t07BC];
    real _t07BE = 0.e0;
    real _t07BF = 0.e0;
    real _t07C0 = 0.e0;
    real _t07C1 = 0.1e1;
    vec4 _t07C2 = [_t07BE, _t07BF, _t07C0, _t07C1];
    tensor[4,4] _t07C3 = [_t07B3, _t07B8, _t07BD, _t07C2];
    real _t07C4 = -0.1e1;
    real _t07C5 = 0.e0;
    real _t07C6 = 0.1e1;
    real _t07C7 = 0.5e0;
    vec4 _t07C8 = [_t07C4, _t07C5, _t07C6, _t07C7];
    real _t07C9 = -0.1e1;
    real _t07CA = 0.e0;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    vec4 _t07CD = [_t07C9, _t07CA, _t07CB, _t07CC];
    real _t07CE = 0.e0;
    real _t07CF = -0.1e1;
    real _t07D0 = 0.e0;
    real _t07D1 = 0.1e1;
    vec4 _t07D2 = [_t07CE, _t07CF, _t07D0, _t07D1];
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    vec4 _t07D7 = [_t07D3, _t07D4, _t07D5, _t07D6];
    tensor[4,4] _t07D8 = [_t07C8, _t07CD, _t07D2, _t07D7];
    real _t07D9 = -0.1e1;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.e0;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    real _t07DE = 0.e0;
    real _t07DF = -0.1e1;
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    vec4 _t07E2 = [_t07DE, _t07DF, _t07E0, _t07E1];
    real _t07E3 = 0.e0;
    real _t07E4 = 0.e0;
    real _t07E5 = 0.1e1;
    real _t07E6 = 0.e0;
    vec4 _t07E7 = [_t07E3, _t07E4, _t07E5, _t07E6];
    real _t07E8 = 0.e0;
    real _t07E9 = 0.e0;
    real _t07EA = 0.e0;
    real _t07EB = 0.1e1;
    vec4 _t07EC = [_t07E8, _t07E9, _t07EA, _t07EB];
    tensor[4,4] _t07ED = [_t07DD, _t07E2, _t07E7, _t07EC];
    real _t07EE = 0.e0;
    real _t07EF = 0.1e1;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    real _t07F3 = -0.1e1;
    real _t07F4 = 0.e0;
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    vec4 _t07F7 = [_t07F3, _t07F4, _t07F5, _t07F6];
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    real _t07FA = 0.1e1;
    real _t07FB = 0.e0;
    vec4 _t07FC = [_t07F8, _t07F9, _t07FA, _t07FB];
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    real _t07FF = 0.e0;
    real _t0800 = 0.1e1;
    vec4 _t0801 = [_t07FD, _t07FE, _t07FF, _t0800];
    tensor[4,4] _t0802 = [_t07F2, _t07F7, _t07FC, _t0801];
    real _t0803 = 0.1e1;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.e0;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    real _t0808 = 0.e0;
    real _t0809 = 0.1e1;
    real _t080A = 0.e0;
    real _t080B = 0.e0;
    vec4 _t080C = [_t0808, _t0809, _t080A, _t080B];
    real _t080D = 0.e0;
    real _t080E = 0.e0;
    real _t080F = 0.1e1;
    real _t0810 = 0.e0;
    vec4 _t0811 = [_t080D, _t080E, _t080F, _t0810];
    real _t0812 = 0.e0;
    real _t0813 = 0.e0;
    real _t0814 = 0.e0;
    real _t0815 = 0.1e1;
    vec4 _t0816 = [_t0812, _t0813, _t0814, _t0815];
    tensor[4,4] _t0817 = [_t0807, _t080C, _t0811, _t0816];
    real _t0818 = 0.e0;
    real _t0819 = -0.1e1;
    real _t081A = 0.e0;
    real _t081B = 0.e0;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    real _t081D = 0.1e1;
    real _t081E = 0.e0;
    real _t081F = 0.e0;
    real _t0820 = 0.e0;
    vec4 _t0821 = [_t081D, _t081E, _t081F, _t0820];
    real _t0822 = 0.e0;
    real _t0823 = 0.e0;
    real _t0824 = 0.1e1;
    real _t0825 = 0.e0;
    vec4 _t0826 = [_t0822, _t0823, _t0824, _t0825];
    real _t0827 = 0.e0;
    real _t0828 = 0.e0;
    real _t0829 = 0.e0;
    real _t082A = 0.1e1;
    vec4 _t082B = [_t0827, _t0828, _t0829, _t082A];
    tensor[4,4] _t082C = [_t081C, _t0821, _t0826, _t082B];
    tensor[4,4][6] _t082D = {_t07C3, _t07D8, _t07ED, _t0802, _t0817, _t082C};
    real _t082E = 0.e0;
    real _t082F = -0.1e1;
    real _t0830 = 0.1e1;
    real _t0831 = 0.5e0;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    real _t0833 = 0.e0;
    real _t0834 = -0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    vec4 _t0837 = [_t0833, _t0834, _t0835, _t0836];
    real _t0838 = 0.1e1;
    real _t0839 = 0.e0;
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    vec4 _t083C = [_t0838, _t0839, _t083A, _t083B];
    real _t083D = 0.e0;
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    vec4 _t0841 = [_t083D, _t083E, _t083F, _t0840];
    tensor[4,4] _t0842 = [_t0832, _t0837, _t083C, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = -0.1e1;
    real _t0845 = 0.1e1;
    real _t0846 = 0.5e0;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    real _t0848 = 0.e0;
    real _t0849 = -0.1e1;
    real _t084A = 0.e0;
    real _t084B = 0.e0;
    vec4 _t084C = [_t0848, _t0849, _t084A, _t084B];
    real _t084D = 0.1e1;
    real _t084E = 0.e0;
    real _t084F = 0.e0;
    real _t0850 = 0.1e1;
    vec4 _t0851 = [_t084D, _t084E, _t084F, _t0850];
    real _t0852 = 0.e0;
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    vec4 _t0856 = [_t0852, _t0853, _t0854, _t0855];
    tensor[4,4] _t0857 = [_t0847, _t084C, _t0851, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = -0.1e1;
    real _t085A = 0.e0;
    real _t085B = 0.e0;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    real _t085D = 0.1e1;
    real _t085E = 0.e0;
    real _t085F = 0.e0;
    real _t0860 = 0.e0;
    vec4 _t0861 = [_t085D, _t085E, _t085F, _t0860];
    real _t0862 = 0.e0;
    real _t0863 = 0.e0;
    real _t0864 = 0.1e1;
    real _t0865 = 0.e0;
    vec4 _t0866 = [_t0862, _t0863, _t0864, _t0865];
    real _t0867 = 0.e0;
    real _t0868 = 0.e0;
    real _t0869 = 0.e0;
    real _t086A = 0.1e1;
    vec4 _t086B = [_t0867, _t0868, _t0869, _t086A];
    tensor[4,4] _t086C = [_t085C, _t0861, _t0866, _t086B];
    real _t086D = -0.1e1;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.e0;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    real _t0872 = 0.e0;
    real _t0873 = -0.1e1;
    real _t0874 = 0.e0;
    real _t0875 = 0.e0;
    vec4 _t0876 = [_t0872, _t0873, _t0874, _t0875];
    real _t0877 = 0.e0;
    real _t0878 = 0.e0;
    real _t0879 = 0.1e1;
    real _t087A = 0.e0;
    vec4 _t087B = [_t0877, _t0878, _t0879, _t087A];
    real _t087C = 0.e0;
    real _t087D = 0.e0;
    real _t087E = 0.e0;
    real _t087F = 0.1e1;
    vec4 _t0880 = [_t087C, _t087D, _t087E, _t087F];
    tensor[4,4] _t0881 = [_t0871, _t0876, _t087B, _t0880];
    real _t0882 = 0.e0;
    real _t0883 = 0.1e1;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    vec4 _t0886 = [_t0882, _t0883, _t0884, _t0885];
    real _t0887 = -0.1e1;
    real _t0888 = 0.e0;
    real _t0889 = 0.e0;
    real _t088A = 0.e0;
    vec4 _t088B = [_t0887, _t0888, _t0889, _t088A];
    real _t088C = 0.e0;
    real _t088D = 0.e0;
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    vec4 _t0890 = [_t088C, _t088D, _t088E, _t088F];
    real _t0891 = 0.e0;
    real _t0892 = 0.e0;
    real _t0893 = 0.e0;
    real _t0894 = 0.1e1;
    vec4 _t0895 = [_t0891, _t0892, _t0893, _t0894];
    tensor[4,4] _t0896 = [_t0886, _t088B, _t0890, _t0895];
    real _t0897 = 0.1e1;
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    vec4 _t089B = [_t0897, _t0898, _t0899, _t089A];
    real _t089C = 0.e0;
    real _t089D = 0.1e1;
    real _t089E = 0.e0;
    real _t089F = 0.e0;
    vec4 _t08A0 = [_t089C, _t089D, _t089E, _t089F];
    real _t08A1 = 0.e0;
    real _t08A2 = 0.e0;
    real _t08A3 = 0.1e1;
    real _t08A4 = 0.e0;
    vec4 _t08A5 = [_t08A1, _t08A2, _t08A3, _t08A4];
    real _t08A6 = 0.e0;
    real _t08A7 = 0.e0;
    real _t08A8 = 0.e0;
    real _t08A9 = 0.1e1;
    vec4 _t08AA = [_t08A6, _t08A7, _t08A8, _t08A9];
    tensor[4,4] _t08AB = [_t089B, _t08A0, _t08A5, _t08AA];
    tensor[4,4][6] _t08AC = {_t0842, _t0857, _t086C, _t0881, _t0896, _t08AB};
    tensor[4,4][6][6] _t08AD = {_t0631, _t06B0, _t072F, _t07AE, _t082D, _t08AC};
    real _t08AE = time059F[1];
    int _t08AF = prim $r2i01B7 (_t08AE);
    tensor[4,4][6] _t08B0 = prim $sub01C0<tensor[4,4][6]; %6> (_t08AD, _t08AF);
    real _t08B1 = time059F[1];
    int _t08B2 = prim $r2i01B7 (_t08B1);
    int[2] _t08B3 = func nextCell405A3 (_t08B2, cellId059C, mesh059B);
    int _t08B4 = 1;
    int _t08B5 = prim $sub01C0<int; %2> (_t08B3, _t08B4);
    tensor[4,4] _t08B6 = prim $sub01C0<tensor[4,4]; %6> (_t08B0, _t08B5);
    string _t08B7 = "\n";
    print (_t05A8, _t05AA, _t05AB, _t05B0, _t05B1, _t05B2, _t08B6, _t08B7);
    real _t08B8 = time059F[1];
    int _t08B9 = prim $r2i01B7 (_t08B8);
    int[2] _t08BA = func nextCell405A3 (_t08B9, cellId059C, mesh059B);
    int _t08BB = 0;
    int _t08BC = prim $sub01C0<int; %2> (_t08BA, _t08BB);
    real _t08BD = 0.1e1;
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.1e1;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.e0;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    real _t08C9 = 0.1e1;
    real _t08CA = 0.e0;
    vec4 _t08CB = [_t08C7, _t08C8, _t08C9, _t08CA];
    real _t08CC = 0.e0;
    real _t08CD = 0.e0;
    real _t08CE = 0.e0;
    real _t08CF = 0.1e1;
    vec4 _t08D0 = [_t08CC, _t08CD, _t08CE, _t08CF];
    tensor[4,4] _t08D1 = [_t08C1, _t08C6, _t08CB, _t08D0];
    real _t08D2 = 0.1e1;
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    vec4 _t08D6 = [_t08D2, _t08D3, _t08D4, _t08D5];
    real _t08D7 = 0.e0;
    real _t08D8 = 0.1e1;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    vec4 _t08DB = [_t08D7, _t08D8, _t08D9, _t08DA];
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    real _t08DE = 0.1e1;
    real _t08DF = 0.1e1;
    vec4 _t08E0 = [_t08DC, _t08DD, _t08DE, _t08DF];
    real _t08E1 = 0.e0;
    real _t08E2 = 0.e0;
    real _t08E3 = 0.e0;
    real _t08E4 = 0.1e1;
    vec4 _t08E5 = [_t08E1, _t08E2, _t08E3, _t08E4];
    tensor[4,4] _t08E6 = [_t08D6, _t08DB, _t08E0, _t08E5];
    real _t08E7 = 0.e0;
    real _t08E8 = 0.1e1;
    real _t08E9 = 0.e0;
    real _t08EA = 0.e0;
    vec4 _t08EB = [_t08E7, _t08E8, _t08E9, _t08EA];
    real _t08EC = 0.e0;
    real _t08ED = 0.e0;
    real _t08EE = 0.1e1;
    real _t08EF = 0.e0;
    vec4 _t08F0 = [_t08EC, _t08ED, _t08EE, _t08EF];
    real _t08F1 = 0.1e1;
    real _t08F2 = -0.1e1;
    real _t08F3 = 0.e0;
    real _t08F4 = -0.5e0;
    vec4 _t08F5 = [_t08F1, _t08F2, _t08F3, _t08F4];
    real _t08F6 = 0.e0;
    real _t08F7 = 0.e0;
    real _t08F8 = 0.e0;
    real _t08F9 = 0.1e1;
    vec4 _t08FA = [_t08F6, _t08F7, _t08F8, _t08F9];
    tensor[4,4] _t08FB = [_t08EB, _t08F0, _t08F5, _t08FA];
    real _t08FC = 0.e0;
    real _t08FD = 0.e0;
    real _t08FE = -0.1e1;
    real _t08FF = 0.e0;
    vec4 _t0900 = [_t08FC, _t08FD, _t08FE, _t08FF];
    real _t0901 = 0.e0;
    real _t0902 = 0.1e1;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    vec4 _t0905 = [_t0901, _t0902, _t0903, _t0904];
    real _t0906 = 0.1e1;
    real _t0907 = -0.1e1;
    real _t0908 = 0.e0;
    real _t0909 = -0.5e0;
    vec4 _t090A = [_t0906, _t0907, _t0908, _t0909];
    real _t090B = 0.e0;
    real _t090C = 0.e0;
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    vec4 _t090F = [_t090B, _t090C, _t090D, _t090E];
    tensor[4,4] _t0910 = [_t0900, _t0905, _t090A, _t090F];
    real _t0911 = 0.e0;
    real _t0912 = -0.1e1;
    real _t0913 = 0.e0;
    real _t0914 = 0.e0;
    vec4 _t0915 = [_t0911, _t0912, _t0913, _t0914];
    real _t0916 = 0.e0;
    real _t0917 = 0.e0;
    real _t0918 = -0.1e1;
    real _t0919 = 0.e0;
    vec4 _t091A = [_t0916, _t0917, _t0918, _t0919];
    real _t091B = 0.1e1;
    real _t091C = -0.1e1;
    real _t091D = 0.e0;
    real _t091E = -0.5e0;
    vec4 _t091F = [_t091B, _t091C, _t091D, _t091E];
    real _t0920 = 0.e0;
    real _t0921 = 0.e0;
    real _t0922 = 0.e0;
    real _t0923 = 0.1e1;
    vec4 _t0924 = [_t0920, _t0921, _t0922, _t0923];
    tensor[4,4] _t0925 = [_t0915, _t091A, _t091F, _t0924];
    real _t0926 = 0.e0;
    real _t0927 = 0.e0;
    real _t0928 = 0.1e1;
    real _t0929 = 0.e0;
    vec4 _t092A = [_t0926, _t0927, _t0928, _t0929];
    real _t092B = 0.e0;
    real _t092C = -0.1e1;
    real _t092D = 0.e0;
    real _t092E = 0.e0;
    vec4 _t092F = [_t092B, _t092C, _t092D, _t092E];
    real _t0930 = 0.1e1;
    real _t0931 = -0.1e1;
    real _t0932 = 0.e0;
    real _t0933 = -0.5e0;
    vec4 _t0934 = [_t0930, _t0931, _t0932, _t0933];
    real _t0935 = 0.e0;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    real _t0938 = 0.1e1;
    vec4 _t0939 = [_t0935, _t0936, _t0937, _t0938];
    tensor[4,4] _t093A = [_t092A, _t092F, _t0934, _t0939];
    tensor[4,4][6] _t093B = {_t08D1, _t08E6, _t08FB, _t0910, _t0925, _t093A};
    real _t093C = 0.1e1;
    real _t093D = 0.e0;
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    vec4 _t0940 = [_t093C, _t093D, _t093E, _t093F];
    real _t0941 = 0.e0;
    real _t0942 = 0.1e1;
    real _t0943 = 0.e0;
    real _t0944 = 0.e0;
    vec4 _t0945 = [_t0941, _t0942, _t0943, _t0944];
    real _t0946 = 0.e0;
    real _t0947 = 0.e0;
    real _t0948 = 0.1e1;
    real _t0949 = -0.1e1;
    vec4 _t094A = [_t0946, _t0947, _t0948, _t0949];
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    real _t094D = 0.e0;
    real _t094E = 0.1e1;
    vec4 _t094F = [_t094B, _t094C, _t094D, _t094E];
    tensor[4,4] _t0950 = [_t0940, _t0945, _t094A, _t094F];
    real _t0951 = 0.1e1;
    real _t0952 = 0.e0;
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    vec4 _t0955 = [_t0951, _t0952, _t0953, _t0954];
    real _t0956 = 0.e0;
    real _t0957 = 0.1e1;
    real _t0958 = 0.e0;
    real _t0959 = 0.e0;
    vec4 _t095A = [_t0956, _t0957, _t0958, _t0959];
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    real _t095D = 0.1e1;
    real _t095E = 0.e0;
    vec4 _t095F = [_t095B, _t095C, _t095D, _t095E];
    real _t0960 = 0.e0;
    real _t0961 = 0.e0;
    real _t0962 = 0.e0;
    real _t0963 = 0.1e1;
    vec4 _t0964 = [_t0960, _t0961, _t0962, _t0963];
    tensor[4,4] _t0965 = [_t0955, _t095A, _t095F, _t0964];
    real _t0966 = 0.e0;
    real _t0967 = 0.1e1;
    real _t0968 = 0.e0;
    real _t0969 = 0.e0;
    vec4 _t096A = [_t0966, _t0967, _t0968, _t0969];
    real _t096B = 0.e0;
    real _t096C = 0.e0;
    real _t096D = 0.1e1;
    real _t096E = -0.1e1;
    vec4 _t096F = [_t096B, _t096C, _t096D, _t096E];
    real _t0970 = 0.1e1;
    real _t0971 = -0.1e1;
    real _t0972 = 0.e0;
    real _t0973 = -0.5e0;
    vec4 _t0974 = [_t0970, _t0971, _t0972, _t0973];
    real _t0975 = 0.e0;
    real _t0976 = 0.e0;
    real _t0977 = 0.e0;
    real _t0978 = 0.1e1;
    vec4 _t0979 = [_t0975, _t0976, _t0977, _t0978];
    tensor[4,4] _t097A = [_t096A, _t096F, _t0974, _t0979];
    real _t097B = 0.e0;
    real _t097C = 0.e0;
    real _t097D = -0.1e1;
    real _t097E = 0.1e1;
    vec4 _t097F = [_t097B, _t097C, _t097D, _t097E];
    real _t0980 = 0.e0;
    real _t0981 = 0.1e1;
    real _t0982 = 0.e0;
    real _t0983 = 0.e0;
    vec4 _t0984 = [_t0980, _t0981, _t0982, _t0983];
    real _t0985 = 0.1e1;
    real _t0986 = -0.1e1;
    real _t0987 = 0.e0;
    real _t0988 = -0.5e0;
    vec4 _t0989 = [_t0985, _t0986, _t0987, _t0988];
    real _t098A = 0.e0;
    real _t098B = 0.e0;
    real _t098C = 0.e0;
    real _t098D = 0.1e1;
    vec4 _t098E = [_t098A, _t098B, _t098C, _t098D];
    tensor[4,4] _t098F = [_t097F, _t0984, _t0989, _t098E];
    real _t0990 = 0.e0;
    real _t0991 = -0.1e1;
    real _t0992 = 0.e0;
    real _t0993 = 0.e0;
    vec4 _t0994 = [_t0990, _t0991, _t0992, _t0993];
    real _t0995 = 0.e0;
    real _t0996 = 0.e0;
    real _t0997 = -0.1e1;
    real _t0998 = 0.1e1;
    vec4 _t0999 = [_t0995, _t0996, _t0997, _t0998];
    real _t099A = 0.1e1;
    real _t099B = -0.1e1;
    real _t099C = 0.e0;
    real _t099D = -0.5e0;
    vec4 _t099E = [_t099A, _t099B, _t099C, _t099D];
    real _t099F = 0.e0;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    real _t09A2 = 0.1e1;
    vec4 _t09A3 = [_t099F, _t09A0, _t09A1, _t09A2];
    tensor[4,4] _t09A4 = [_t0994, _t0999, _t099E, _t09A3];
    real _t09A5 = 0.e0;
    real _t09A6 = 0.e0;
    real _t09A7 = 0.1e1;
    real _t09A8 = -0.1e1;
    vec4 _t09A9 = [_t09A5, _t09A6, _t09A7, _t09A8];
    real _t09AA = 0.e0;
    real _t09AB = -0.1e1;
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    vec4 _t09AE = [_t09AA, _t09AB, _t09AC, _t09AD];
    real _t09AF = 0.1e1;
    real _t09B0 = -0.1e1;
    real _t09B1 = 0.e0;
    real _t09B2 = -0.5e0;
    vec4 _t09B3 = [_t09AF, _t09B0, _t09B1, _t09B2];
    real _t09B4 = 0.e0;
    real _t09B5 = 0.e0;
    real _t09B6 = 0.e0;
    real _t09B7 = 0.1e1;
    vec4 _t09B8 = [_t09B4, _t09B5, _t09B6, _t09B7];
    tensor[4,4] _t09B9 = [_t09A9, _t09AE, _t09B3, _t09B8];
    tensor[4,4][6] _t09BA = {_t0950, _t0965, _t097A, _t098F, _t09A4, _t09B9};
    real _t09BB = 0.1e1;
    real _t09BC = 0.e0;
    real _t09BD = 0.1e1;
    real _t09BE = 0.5e0;
    vec4 _t09BF = [_t09BB, _t09BC, _t09BD, _t09BE];
    real _t09C0 = 0.1e1;
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.e0;
    vec4 _t09C4 = [_t09C0, _t09C1, _t09C2, _t09C3];
    real _t09C5 = 0.e0;
    real _t09C6 = 0.1e1;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    vec4 _t09C9 = [_t09C5, _t09C6, _t09C7, _t09C8];
    real _t09CA = 0.e0;
    real _t09CB = 0.e0;
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    vec4 _t09CE = [_t09CA, _t09CB, _t09CC, _t09CD];
    tensor[4,4] _t09CF = [_t09BF, _t09C4, _t09C9, _t09CE];
    real _t09D0 = 0.1e1;
    real _t09D1 = 0.e0;
    real _t09D2 = 0.1e1;
    real _t09D3 = 0.5e0;
    vec4 _t09D4 = [_t09D0, _t09D1, _t09D2, _t09D3];
    real _t09D5 = 0.1e1;
    real _t09D6 = 0.e0;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    vec4 _t09D9 = [_t09D5, _t09D6, _t09D7, _t09D8];
    real _t09DA = 0.e0;
    real _t09DB = 0.1e1;
    real _t09DC = 0.e0;
    real _t09DD = 0.1e1;
    vec4 _t09DE = [_t09DA, _t09DB, _t09DC, _t09DD];
    real _t09DF = 0.e0;
    real _t09E0 = 0.e0;
    real _t09E1 = 0.e0;
    real _t09E2 = 0.1e1;
    vec4 _t09E3 = [_t09DF, _t09E0, _t09E1, _t09E2];
    tensor[4,4] _t09E4 = [_t09D4, _t09D9, _t09DE, _t09E3];
    real _t09E5 = 0.1e1;
    real _t09E6 = 0.e0;
    real _t09E7 = 0.e0;
    real _t09E8 = 0.e0;
    vec4 _t09E9 = [_t09E5, _t09E6, _t09E7, _t09E8];
    real _t09EA = 0.e0;
    real _t09EB = 0.1e1;
    real _t09EC = 0.e0;
    real _t09ED = 0.e0;
    vec4 _t09EE = [_t09EA, _t09EB, _t09EC, _t09ED];
    real _t09EF = 0.e0;
    real _t09F0 = 0.e0;
    real _t09F1 = 0.1e1;
    real _t09F2 = 0.e0;
    vec4 _t09F3 = [_t09EF, _t09F0, _t09F1, _t09F2];
    real _t09F4 = 0.e0;
    real _t09F5 = 0.e0;
    real _t09F6 = 0.e0;
    real _t09F7 = 0.1e1;
    vec4 _t09F8 = [_t09F4, _t09F5, _t09F6, _t09F7];
    tensor[4,4] _t09F9 = [_t09E9, _t09EE, _t09F3, _t09F8];
    real _t09FA = 0.e0;
    real _t09FB = -0.1e1;
    real _t09FC = 0.e0;
    real _t09FD = 0.e0;
    vec4 _t09FE = [_t09FA, _t09FB, _t09FC, _t09FD];
    real _t09FF = 0.1e1;
    real _t0A00 = 0.e0;
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    vec4 _t0A03 = [_t09FF, _t0A00, _t0A01, _t0A02];
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    real _t0A06 = 0.1e1;
    real _t0A07 = 0.e0;
    vec4 _t0A08 = [_t0A04, _t0A05, _t0A06, _t0A07];
    real _t0A09 = 0.e0;
    real _t0A0A = 0.e0;
    real _t0A0B = 0.e0;
    real _t0A0C = 0.1e1;
    vec4 _t0A0D = [_t0A09, _t0A0A, _t0A0B, _t0A0C];
    tensor[4,4] _t0A0E = [_t09FE, _t0A03, _t0A08, _t0A0D];
    real _t0A0F = -0.1e1;
    real _t0A10 = 0.e0;
    real _t0A11 = 0.e0;
    real _t0A12 = 0.e0;
    vec4 _t0A13 = [_t0A0F, _t0A10, _t0A11, _t0A12];
    real _t0A14 = 0.e0;
    real _t0A15 = -0.1e1;
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    vec4 _t0A18 = [_t0A14, _t0A15, _t0A16, _t0A17];
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    real _t0A1B = 0.1e1;
    real _t0A1C = 0.e0;
    vec4 _t0A1D = [_t0A19, _t0A1A, _t0A1B, _t0A1C];
    real _t0A1E = 0.e0;
    real _t0A1F = 0.e0;
    real _t0A20 = 0.e0;
    real _t0A21 = 0.1e1;
    vec4 _t0A22 = [_t0A1E, _t0A1F, _t0A20, _t0A21];
    tensor[4,4] _t0A23 = [_t0A13, _t0A18, _t0A1D, _t0A22];
    real _t0A24 = 0.e0;
    real _t0A25 = 0.1e1;
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    vec4 _t0A28 = [_t0A24, _t0A25, _t0A26, _t0A27];
    real _t0A29 = -0.1e1;
    real _t0A2A = 0.e0;
    real _t0A2B = 0.e0;
    real _t0A2C = 0.e0;
    vec4 _t0A2D = [_t0A29, _t0A2A, _t0A2B, _t0A2C];
    real _t0A2E = 0.e0;
    real _t0A2F = 0.e0;
    real _t0A30 = 0.1e1;
    real _t0A31 = 0.e0;
    vec4 _t0A32 = [_t0A2E, _t0A2F, _t0A30, _t0A31];
    real _t0A33 = 0.e0;
    real _t0A34 = 0.e0;
    real _t0A35 = 0.e0;
    real _t0A36 = 0.1e1;
    vec4 _t0A37 = [_t0A33, _t0A34, _t0A35, _t0A36];
    tensor[4,4] _t0A38 = [_t0A28, _t0A2D, _t0A32, _t0A37];
    tensor[4,4][6] _t0A39 = {_t09CF, _t09E4, _t09F9, _t0A0E, _t0A23, _t0A38};
    real _t0A3A = 0.e0;
    real _t0A3B = 0.1e1;
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.5e0;
    vec4 _t0A3E = [_t0A3A, _t0A3B, _t0A3C, _t0A3D];
    real _t0A3F = 0.e0;
    real _t0A40 = 0.1e1;
    real _t0A41 = 0.e0;
    real _t0A42 = 0.e0;
    vec4 _t0A43 = [_t0A3F, _t0A40, _t0A41, _t0A42];
    real _t0A44 = -0.1e1;
    real _t0A45 = 0.e0;
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    vec4 _t0A48 = [_t0A44, _t0A45, _t0A46, _t0A47];
    real _t0A49 = 0.e0;
    real _t0A4A = 0.e0;
    real _t0A4B = 0.e0;
    real _t0A4C = 0.1e1;
    vec4 _t0A4D = [_t0A49, _t0A4A, _t0A4B, _t0A4C];
    tensor[4,4] _t0A4E = [_t0A3E, _t0A43, _t0A48, _t0A4D];
    real _t0A4F = 0.e0;
    real _t0A50 = 0.1e1;
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.5e0;
    vec4 _t0A53 = [_t0A4F, _t0A50, _t0A51, _t0A52];
    real _t0A54 = 0.e0;
    real _t0A55 = 0.1e1;
    real _t0A56 = 0.e0;
    real _t0A57 = 0.e0;
    vec4 _t0A58 = [_t0A54, _t0A55, _t0A56, _t0A57];
    real _t0A59 = -0.1e1;
    real _t0A5A = 0.e0;
    real _t0A5B = 0.e0;
    real _t0A5C = 0.1e1;
    vec4 _t0A5D = [_t0A59, _t0A5A, _t0A5B, _t0A5C];
    real _t0A5E = 0.e0;
    real _t0A5F = 0.e0;
    real _t0A60 = 0.e0;
    real _t0A61 = 0.1e1;
    vec4 _t0A62 = [_t0A5E, _t0A5F, _t0A60, _t0A61];
    tensor[4,4] _t0A63 = [_t0A53, _t0A58, _t0A5D, _t0A62];
    real _t0A64 = 0.e0;
    real _t0A65 = 0.1e1;
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    vec4 _t0A68 = [_t0A64, _t0A65, _t0A66, _t0A67];
    real _t0A69 = -0.1e1;
    real _t0A6A = 0.e0;
    real _t0A6B = 0.e0;
    real _t0A6C = 0.e0;
    vec4 _t0A6D = [_t0A69, _t0A6A, _t0A6B, _t0A6C];
    real _t0A6E = 0.e0;
    real _t0A6F = 0.e0;
    real _t0A70 = 0.1e1;
    real _t0A71 = 0.e0;
    vec4 _t0A72 = [_t0A6E, _t0A6F, _t0A70, _t0A71];
    real _t0A73 = 0.e0;
    real _t0A74 = 0.e0;
    real _t0A75 = 0.e0;
    real _t0A76 = 0.1e1;
    vec4 _t0A77 = [_t0A73, _t0A74, _t0A75, _t0A76];
    tensor[4,4] _t0A78 = [_t0A68, _t0A6D, _t0A72, _t0A77];
    real _t0A79 = 0.1e1;
    real _t0A7A = 0.e0;
    real _t0A7B = 0.e0;
    real _t0A7C = 0.e0;
    vec4 _t0A7D = [_t0A79, _t0A7A, _t0A7B, _t0A7C];
    real _t0A7E = 0.e0;
    real _t0A7F = 0.1e1;
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    vec4 _t0A82 = [_t0A7E, _t0A7F, _t0A80, _t0A81];
    real _t0A83 = 0.e0;
    real _t0A84 = 0.e0;
    real _t0A85 = 0.1e1;
    real _t0A86 = 0.e0;
    vec4 _t0A87 = [_t0A83, _t0A84, _t0A85, _t0A86];
    real _t0A88 = 0.e0;
    real _t0A89 = 0.e0;
    real _t0A8A = 0.e0;
    real _t0A8B = 0.1e1;
    vec4 _t0A8C = [_t0A88, _t0A89, _t0A8A, _t0A8B];
    tensor[4,4] _t0A8D = [_t0A7D, _t0A82, _t0A87, _t0A8C];
    real _t0A8E = 0.e0;
    real _t0A8F = -0.1e1;
    real _t0A90 = 0.e0;
    real _t0A91 = 0.e0;
    vec4 _t0A92 = [_t0A8E, _t0A8F, _t0A90, _t0A91];
    real _t0A93 = 0.1e1;
    real _t0A94 = 0.e0;
    real _t0A95 = 0.e0;
    real _t0A96 = 0.e0;
    vec4 _t0A97 = [_t0A93, _t0A94, _t0A95, _t0A96];
    real _t0A98 = 0.e0;
    real _t0A99 = 0.e0;
    real _t0A9A = 0.1e1;
    real _t0A9B = 0.e0;
    vec4 _t0A9C = [_t0A98, _t0A99, _t0A9A, _t0A9B];
    real _t0A9D = 0.e0;
    real _t0A9E = 0.e0;
    real _t0A9F = 0.e0;
    real _t0AA0 = 0.1e1;
    vec4 _t0AA1 = [_t0A9D, _t0A9E, _t0A9F, _t0AA0];
    tensor[4,4] _t0AA2 = [_t0A92, _t0A97, _t0A9C, _t0AA1];
    real _t0AA3 = -0.1e1;
    real _t0AA4 = 0.e0;
    real _t0AA5 = 0.e0;
    real _t0AA6 = 0.e0;
    vec4 _t0AA7 = [_t0AA3, _t0AA4, _t0AA5, _t0AA6];
    real _t0AA8 = 0.e0;
    real _t0AA9 = -0.1e1;
    real _t0AAA = 0.e0;
    real _t0AAB = 0.e0;
    vec4 _t0AAC = [_t0AA8, _t0AA9, _t0AAA, _t0AAB];
    real _t0AAD = 0.e0;
    real _t0AAE = 0.e0;
    real _t0AAF = 0.1e1;
    real _t0AB0 = 0.e0;
    vec4 _t0AB1 = [_t0AAD, _t0AAE, _t0AAF, _t0AB0];
    real _t0AB2 = 0.e0;
    real _t0AB3 = 0.e0;
    real _t0AB4 = 0.e0;
    real _t0AB5 = 0.1e1;
    vec4 _t0AB6 = [_t0AB2, _t0AB3, _t0AB4, _t0AB5];
    tensor[4,4] _t0AB7 = [_t0AA7, _t0AAC, _t0AB1, _t0AB6];
    tensor[4,4][6] _t0AB8 = {_t0A4E, _t0A63, _t0A78, _t0A8D, _t0AA2, _t0AB7};
    real _t0AB9 = -0.1e1;
    real _t0ABA = 0.e0;
    real _t0ABB = 0.1e1;
    real _t0ABC = 0.5e0;
    vec4 _t0ABD = [_t0AB9, _t0ABA, _t0ABB, _t0ABC];
    real _t0ABE = -0.1e1;
    real _t0ABF = 0.e0;
    real _t0AC0 = 0.e0;
    real _t0AC1 = 0.e0;
    vec4 _t0AC2 = [_t0ABE, _t0ABF, _t0AC0, _t0AC1];
    real _t0AC3 = 0.e0;
    real _t0AC4 = -0.1e1;
    real _t0AC5 = 0.e0;
    real _t0AC6 = 0.e0;
    vec4 _t0AC7 = [_t0AC3, _t0AC4, _t0AC5, _t0AC6];
    real _t0AC8 = 0.e0;
    real _t0AC9 = 0.e0;
    real _t0ACA = 0.e0;
    real _t0ACB = 0.1e1;
    vec4 _t0ACC = [_t0AC8, _t0AC9, _t0ACA, _t0ACB];
    tensor[4,4] _t0ACD = [_t0ABD, _t0AC2, _t0AC7, _t0ACC];
    real _t0ACE = -0.1e1;
    real _t0ACF = 0.e0;
    real _t0AD0 = 0.1e1;
    real _t0AD1 = 0.5e0;
    vec4 _t0AD2 = [_t0ACE, _t0ACF, _t0AD0, _t0AD1];
    real _t0AD3 = -0.1e1;
    real _t0AD4 = 0.e0;
    real _t0AD5 = 0.e0;
    real _t0AD6 = 0.e0;
    vec4 _t0AD7 = [_t0AD3, _t0AD4, _t0AD5, _t0AD6];
    real _t0AD8 = 0.e0;
    real _t0AD9 = -0.1e1;
    real _t0ADA = 0.e0;
    real _t0ADB = 0.1e1;
    vec4 _t0ADC = [_t0AD8, _t0AD9, _t0ADA, _t0ADB];
    real _t0ADD = 0.e0;
    real _t0ADE = 0.e0;
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.1e1;
    vec4 _t0AE1 = [_t0ADD, _t0ADE, _t0ADF, _t0AE0];
    tensor[4,4] _t0AE2 = [_t0AD2, _t0AD7, _t0ADC, _t0AE1];
    real _t0AE3 = -0.1e1;
    real _t0AE4 = 0.e0;
    real _t0AE5 = 0.e0;
    real _t0AE6 = 0.e0;
    vec4 _t0AE7 = [_t0AE3, _t0AE4, _t0AE5, _t0AE6];
    real _t0AE8 = 0.e0;
    real _t0AE9 = -0.1e1;
    real _t0AEA = 0.e0;
    real _t0AEB = 0.e0;
    vec4 _t0AEC = [_t0AE8, _t0AE9, _t0AEA, _t0AEB];
    real _t0AED = 0.e0;
    real _t0AEE = 0.e0;
    real _t0AEF = 0.1e1;
    real _t0AF0 = 0.e0;
    vec4 _t0AF1 = [_t0AED, _t0AEE, _t0AEF, _t0AF0];
    real _t0AF2 = 0.e0;
    real _t0AF3 = 0.e0;
    real _t0AF4 = 0.e0;
    real _t0AF5 = 0.1e1;
    vec4 _t0AF6 = [_t0AF2, _t0AF3, _t0AF4, _t0AF5];
    tensor[4,4] _t0AF7 = [_t0AE7, _t0AEC, _t0AF1, _t0AF6];
    real _t0AF8 = 0.e0;
    real _t0AF9 = 0.1e1;
    real _t0AFA = 0.e0;
    real _t0AFB = 0.e0;
    vec4 _t0AFC = [_t0AF8, _t0AF9, _t0AFA, _t0AFB];
    real _t0AFD = -0.1e1;
    real _t0AFE = 0.e0;
    real _t0AFF = 0.e0;
    real _t0B00 = 0.e0;
    vec4 _t0B01 = [_t0AFD, _t0AFE, _t0AFF, _t0B00];
    real _t0B02 = 0.e0;
    real _t0B03 = 0.e0;
    real _t0B04 = 0.1e1;
    real _t0B05 = 0.e0;
    vec4 _t0B06 = [_t0B02, _t0B03, _t0B04, _t0B05];
    real _t0B07 = 0.e0;
    real _t0B08 = 0.e0;
    real _t0B09 = 0.e0;
    real _t0B0A = 0.1e1;
    vec4 _t0B0B = [_t0B07, _t0B08, _t0B09, _t0B0A];
    tensor[4,4] _t0B0C = [_t0AFC, _t0B01, _t0B06, _t0B0B];
    real _t0B0D = 0.1e1;
    real _t0B0E = 0.e0;
    real _t0B0F = 0.e0;
    real _t0B10 = 0.e0;
    vec4 _t0B11 = [_t0B0D, _t0B0E, _t0B0F, _t0B10];
    real _t0B12 = 0.e0;
    real _t0B13 = 0.1e1;
    real _t0B14 = 0.e0;
    real _t0B15 = 0.e0;
    vec4 _t0B16 = [_t0B12, _t0B13, _t0B14, _t0B15];
    real _t0B17 = 0.e0;
    real _t0B18 = 0.e0;
    real _t0B19 = 0.1e1;
    real _t0B1A = 0.e0;
    vec4 _t0B1B = [_t0B17, _t0B18, _t0B19, _t0B1A];
    real _t0B1C = 0.e0;
    real _t0B1D = 0.e0;
    real _t0B1E = 0.e0;
    real _t0B1F = 0.1e1;
    vec4 _t0B20 = [_t0B1C, _t0B1D, _t0B1E, _t0B1F];
    tensor[4,4] _t0B21 = [_t0B11, _t0B16, _t0B1B, _t0B20];
    real _t0B22 = 0.e0;
    real _t0B23 = -0.1e1;
    real _t0B24 = 0.e0;
    real _t0B25 = 0.e0;
    vec4 _t0B26 = [_t0B22, _t0B23, _t0B24, _t0B25];
    real _t0B27 = 0.1e1;
    real _t0B28 = 0.e0;
    real _t0B29 = 0.e0;
    real _t0B2A = 0.e0;
    vec4 _t0B2B = [_t0B27, _t0B28, _t0B29, _t0B2A];
    real _t0B2C = 0.e0;
    real _t0B2D = 0.e0;
    real _t0B2E = 0.1e1;
    real _t0B2F = 0.e0;
    vec4 _t0B30 = [_t0B2C, _t0B2D, _t0B2E, _t0B2F];
    real _t0B31 = 0.e0;
    real _t0B32 = 0.e0;
    real _t0B33 = 0.e0;
    real _t0B34 = 0.1e1;
    vec4 _t0B35 = [_t0B31, _t0B32, _t0B33, _t0B34];
    tensor[4,4] _t0B36 = [_t0B26, _t0B2B, _t0B30, _t0B35];
    tensor[4,4][6] _t0B37 = {_t0ACD, _t0AE2, _t0AF7, _t0B0C, _t0B21, _t0B36};
    real _t0B38 = 0.e0;
    real _t0B39 = -0.1e1;
    real _t0B3A = 0.1e1;
    real _t0B3B = 0.5e0;
    vec4 _t0B3C = [_t0B38, _t0B39, _t0B3A, _t0B3B];
    real _t0B3D = 0.e0;
    real _t0B3E = -0.1e1;
    real _t0B3F = 0.e0;
    real _t0B40 = 0.e0;
    vec4 _t0B41 = [_t0B3D, _t0B3E, _t0B3F, _t0B40];
    real _t0B42 = 0.1e1;
    real _t0B43 = 0.e0;
    real _t0B44 = 0.e0;
    real _t0B45 = 0.e0;
    vec4 _t0B46 = [_t0B42, _t0B43, _t0B44, _t0B45];
    real _t0B47 = 0.e0;
    real _t0B48 = 0.e0;
    real _t0B49 = 0.e0;
    real _t0B4A = 0.1e1;
    vec4 _t0B4B = [_t0B47, _t0B48, _t0B49, _t0B4A];
    tensor[4,4] _t0B4C = [_t0B3C, _t0B41, _t0B46, _t0B4B];
    real _t0B4D = 0.e0;
    real _t0B4E = -0.1e1;
    real _t0B4F = 0.1e1;
    real _t0B50 = 0.5e0;
    vec4 _t0B51 = [_t0B4D, _t0B4E, _t0B4F, _t0B50];
    real _t0B52 = 0.e0;
    real _t0B53 = -0.1e1;
    real _t0B54 = 0.e0;
    real _t0B55 = 0.e0;
    vec4 _t0B56 = [_t0B52, _t0B53, _t0B54, _t0B55];
    real _t0B57 = 0.1e1;
    real _t0B58 = 0.e0;
    real _t0B59 = 0.e0;
    real _t0B5A = 0.1e1;
    vec4 _t0B5B = [_t0B57, _t0B58, _t0B59, _t0B5A];
    real _t0B5C = 0.e0;
    real _t0B5D = 0.e0;
    real _t0B5E = 0.e0;
    real _t0B5F = 0.1e1;
    vec4 _t0B60 = [_t0B5C, _t0B5D, _t0B5E, _t0B5F];
    tensor[4,4] _t0B61 = [_t0B51, _t0B56, _t0B5B, _t0B60];
    real _t0B62 = 0.e0;
    real _t0B63 = -0.1e1;
    real _t0B64 = 0.e0;
    real _t0B65 = 0.e0;
    vec4 _t0B66 = [_t0B62, _t0B63, _t0B64, _t0B65];
    real _t0B67 = 0.1e1;
    real _t0B68 = 0.e0;
    real _t0B69 = 0.e0;
    real _t0B6A = 0.e0;
    vec4 _t0B6B = [_t0B67, _t0B68, _t0B69, _t0B6A];
    real _t0B6C = 0.e0;
    real _t0B6D = 0.e0;
    real _t0B6E = 0.1e1;
    real _t0B6F = 0.e0;
    vec4 _t0B70 = [_t0B6C, _t0B6D, _t0B6E, _t0B6F];
    real _t0B71 = 0.e0;
    real _t0B72 = 0.e0;
    real _t0B73 = 0.e0;
    real _t0B74 = 0.1e1;
    vec4 _t0B75 = [_t0B71, _t0B72, _t0B73, _t0B74];
    tensor[4,4] _t0B76 = [_t0B66, _t0B6B, _t0B70, _t0B75];
    real _t0B77 = -0.1e1;
    real _t0B78 = 0.e0;
    real _t0B79 = 0.e0;
    real _t0B7A = 0.e0;
    vec4 _t0B7B = [_t0B77, _t0B78, _t0B79, _t0B7A];
    real _t0B7C = 0.e0;
    real _t0B7D = -0.1e1;
    real _t0B7E = 0.e0;
    real _t0B7F = 0.e0;
    vec4 _t0B80 = [_t0B7C, _t0B7D, _t0B7E, _t0B7F];
    real _t0B81 = 0.e0;
    real _t0B82 = 0.e0;
    real _t0B83 = 0.1e1;
    real _t0B84 = 0.e0;
    vec4 _t0B85 = [_t0B81, _t0B82, _t0B83, _t0B84];
    real _t0B86 = 0.e0;
    real _t0B87 = 0.e0;
    real _t0B88 = 0.e0;
    real _t0B89 = 0.1e1;
    vec4 _t0B8A = [_t0B86, _t0B87, _t0B88, _t0B89];
    tensor[4,4] _t0B8B = [_t0B7B, _t0B80, _t0B85, _t0B8A];
    real _t0B8C = 0.e0;
    real _t0B8D = 0.1e1;
    real _t0B8E = 0.e0;
    real _t0B8F = 0.e0;
    vec4 _t0B90 = [_t0B8C, _t0B8D, _t0B8E, _t0B8F];
    real _t0B91 = -0.1e1;
    real _t0B92 = 0.e0;
    real _t0B93 = 0.e0;
    real _t0B94 = 0.e0;
    vec4 _t0B95 = [_t0B91, _t0B92, _t0B93, _t0B94];
    real _t0B96 = 0.e0;
    real _t0B97 = 0.e0;
    real _t0B98 = 0.1e1;
    real _t0B99 = 0.e0;
    vec4 _t0B9A = [_t0B96, _t0B97, _t0B98, _t0B99];
    real _t0B9B = 0.e0;
    real _t0B9C = 0.e0;
    real _t0B9D = 0.e0;
    real _t0B9E = 0.1e1;
    vec4 _t0B9F = [_t0B9B, _t0B9C, _t0B9D, _t0B9E];
    tensor[4,4] _t0BA0 = [_t0B90, _t0B95, _t0B9A, _t0B9F];
    real _t0BA1 = 0.1e1;
    real _t0BA2 = 0.e0;
    real _t0BA3 = 0.e0;
    real _t0BA4 = 0.e0;
    vec4 _t0BA5 = [_t0BA1, _t0BA2, _t0BA3, _t0BA4];
    real _t0BA6 = 0.e0;
    real _t0BA7 = 0.1e1;
    real _t0BA8 = 0.e0;
    real _t0BA9 = 0.e0;
    vec4 _t0BAA = [_t0BA6, _t0BA7, _t0BA8, _t0BA9];
    real _t0BAB = 0.e0;
    real _t0BAC = 0.e0;
    real _t0BAD = 0.1e1;
    real _t0BAE = 0.e0;
    vec4 _t0BAF = [_t0BAB, _t0BAC, _t0BAD, _t0BAE];
    real _t0BB0 = 0.e0;
    real _t0BB1 = 0.e0;
    real _t0BB2 = 0.e0;
    real _t0BB3 = 0.1e1;
    vec4 _t0BB4 = [_t0BB0, _t0BB1, _t0BB2, _t0BB3];
    tensor[4,4] _t0BB5 = [_t0BA5, _t0BAA, _t0BAF, _t0BB4];
    tensor[4,4][6] _t0BB6 = {_t0B4C, _t0B61, _t0B76, _t0B8B, _t0BA0, _t0BB5};
    tensor[4,4][6][6] _t0BB7 = {_t093B, _t09BA, _t0A39, _t0AB8, _t0B37, _t0BB6};
    real _t0BB8 = time059F[1];
    int _t0BB9 = prim $r2i01B7 (_t0BB8);
    tensor[4,4][6] _t0BBA = prim $sub01C0<tensor[4,4][6]; %6> (_t0BB7, _t0BB9);
    real _t0BBB = time059F[1];
    int _t0BBC = prim $r2i01B7 (_t0BBB);
    int[2] _t0BBD = func nextCell405A3 (_t0BBC, cellId059C, mesh059B);
    int _t0BBE = 1;
    int _t0BBF = prim $sub01C0<int; %2> (_t0BBD, _t0BBE);
    tensor[4,4] _t0BC0 = prim $sub01C0<tensor[4,4]; %6> (_t0BBA, _t0BBF);
    real _t0BC1 = time059F[0];
    vec3 _t0BC2 = prim *0036<$[3]> (_t0BC1, dPos059E);
    vec3 _t0BC3 = prim +0017<$[3]> (_t0BC2, refPos059D);
    real _t0BC4 = _t0BC3[0];
    real _t0BC5 = time059F[0];
    vec3 _t0BC6 = prim *0036<$[3]> (_t0BC5, dPos059E);
    vec3 _t0BC7 = prim +0017<$[3]> (_t0BC6, refPos059D);
    real _t0BC8 = _t0BC7[1];
    real _t0BC9 = time059F[0];
    vec3 _t0BCA = prim *0036<$[3]> (_t0BC9, dPos059E);
    vec3 _t0BCB = prim +0017<$[3]> (_t0BCA, refPos059D);
    real _t0BCC = _t0BCB[2];
    real _t0BCD = 0.1e1;
    vec4 _t0BCE = [_t0BC4, _t0BC8, _t0BCC, _t0BCD];
    vec4 _t0BCF = prim •00CE<$[4,4]; $[4]; $[4]> (_t0BC0, _t0BCE);
    real _t0BD0 = _t0BCF[0];
    real _t0BD1 = 0.1e1;
    real _t0BD2 = 0.e0;
    real _t0BD3 = 0.e0;
    real _t0BD4 = 0.e0;
    vec4 _t0BD5 = [_t0BD1, _t0BD2, _t0BD3, _t0BD4];
    real _t0BD6 = 0.e0;
    real _t0BD7 = 0.1e1;
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    vec4 _t0BDA = [_t0BD6, _t0BD7, _t0BD8, _t0BD9];
    real _t0BDB = 0.e0;
    real _t0BDC = 0.e0;
    real _t0BDD = 0.1e1;
    real _t0BDE = 0.e0;
    vec4 _t0BDF = [_t0BDB, _t0BDC, _t0BDD, _t0BDE];
    real _t0BE0 = 0.e0;
    real _t0BE1 = 0.e0;
    real _t0BE2 = 0.e0;
    real _t0BE3 = 0.1e1;
    vec4 _t0BE4 = [_t0BE0, _t0BE1, _t0BE2, _t0BE3];
    tensor[4,4] _t0BE5 = [_t0BD5, _t0BDA, _t0BDF, _t0BE4];
    real _t0BE6 = 0.1e1;
    real _t0BE7 = 0.e0;
    real _t0BE8 = 0.e0;
    real _t0BE9 = 0.e0;
    vec4 _t0BEA = [_t0BE6, _t0BE7, _t0BE8, _t0BE9];
    real _t0BEB = 0.e0;
    real _t0BEC = 0.1e1;
    real _t0BED = 0.e0;
    real _t0BEE = 0.e0;
    vec4 _t0BEF = [_t0BEB, _t0BEC, _t0BED, _t0BEE];
    real _t0BF0 = 0.e0;
    real _t0BF1 = 0.e0;
    real _t0BF2 = 0.1e1;
    real _t0BF3 = 0.1e1;
    vec4 _t0BF4 = [_t0BF0, _t0BF1, _t0BF2, _t0BF3];
    real _t0BF5 = 0.e0;
    real _t0BF6 = 0.e0;
    real _t0BF7 = 0.e0;
    real _t0BF8 = 0.1e1;
    vec4 _t0BF9 = [_t0BF5, _t0BF6, _t0BF7, _t0BF8];
    tensor[4,4] _t0BFA = [_t0BEA, _t0BEF, _t0BF4, _t0BF9];
    real _t0BFB = 0.e0;
    real _t0BFC = 0.1e1;
    real _t0BFD = 0.e0;
    real _t0BFE = 0.e0;
    vec4 _t0BFF = [_t0BFB, _t0BFC, _t0BFD, _t0BFE];
    real _t0C00 = 0.e0;
    real _t0C01 = 0.e0;
    real _t0C02 = 0.1e1;
    real _t0C03 = 0.e0;
    vec4 _t0C04 = [_t0C00, _t0C01, _t0C02, _t0C03];
    real _t0C05 = 0.1e1;
    real _t0C06 = -0.1e1;
    real _t0C07 = 0.e0;
    real _t0C08 = -0.5e0;
    vec4 _t0C09 = [_t0C05, _t0C06, _t0C07, _t0C08];
    real _t0C0A = 0.e0;
    real _t0C0B = 0.e0;
    real _t0C0C = 0.e0;
    real _t0C0D = 0.1e1;
    vec4 _t0C0E = [_t0C0A, _t0C0B, _t0C0C, _t0C0D];
    tensor[4,4] _t0C0F = [_t0BFF, _t0C04, _t0C09, _t0C0E];
    real _t0C10 = 0.e0;
    real _t0C11 = 0.e0;
    real _t0C12 = -0.1e1;
    real _t0C13 = 0.e0;
    vec4 _t0C14 = [_t0C10, _t0C11, _t0C12, _t0C13];
    real _t0C15 = 0.e0;
    real _t0C16 = 0.1e1;
    real _t0C17 = 0.e0;
    real _t0C18 = 0.e0;
    vec4 _t0C19 = [_t0C15, _t0C16, _t0C17, _t0C18];
    real _t0C1A = 0.1e1;
    real _t0C1B = -0.1e1;
    real _t0C1C = 0.e0;
    real _t0C1D = -0.5e0;
    vec4 _t0C1E = [_t0C1A, _t0C1B, _t0C1C, _t0C1D];
    real _t0C1F = 0.e0;
    real _t0C20 = 0.e0;
    real _t0C21 = 0.e0;
    real _t0C22 = 0.1e1;
    vec4 _t0C23 = [_t0C1F, _t0C20, _t0C21, _t0C22];
    tensor[4,4] _t0C24 = [_t0C14, _t0C19, _t0C1E, _t0C23];
    real _t0C25 = 0.e0;
    real _t0C26 = -0.1e1;
    real _t0C27 = 0.e0;
    real _t0C28 = 0.e0;
    vec4 _t0C29 = [_t0C25, _t0C26, _t0C27, _t0C28];
    real _t0C2A = 0.e0;
    real _t0C2B = 0.e0;
    real _t0C2C = -0.1e1;
    real _t0C2D = 0.e0;
    vec4 _t0C2E = [_t0C2A, _t0C2B, _t0C2C, _t0C2D];
    real _t0C2F = 0.1e1;
    real _t0C30 = -0.1e1;
    real _t0C31 = 0.e0;
    real _t0C32 = -0.5e0;
    vec4 _t0C33 = [_t0C2F, _t0C30, _t0C31, _t0C32];
    real _t0C34 = 0.e0;
    real _t0C35 = 0.e0;
    real _t0C36 = 0.e0;
    real _t0C37 = 0.1e1;
    vec4 _t0C38 = [_t0C34, _t0C35, _t0C36, _t0C37];
    tensor[4,4] _t0C39 = [_t0C29, _t0C2E, _t0C33, _t0C38];
    real _t0C3A = 0.e0;
    real _t0C3B = 0.e0;
    real _t0C3C = 0.1e1;
    real _t0C3D = 0.e0;
    vec4 _t0C3E = [_t0C3A, _t0C3B, _t0C3C, _t0C3D];
    real _t0C3F = 0.e0;
    real _t0C40 = -0.1e1;
    real _t0C41 = 0.e0;
    real _t0C42 = 0.e0;
    vec4 _t0C43 = [_t0C3F, _t0C40, _t0C41, _t0C42];
    real _t0C44 = 0.1e1;
    real _t0C45 = -0.1e1;
    real _t0C46 = 0.e0;
    real _t0C47 = -0.5e0;
    vec4 _t0C48 = [_t0C44, _t0C45, _t0C46, _t0C47];
    real _t0C49 = 0.e0;
    real _t0C4A = 0.e0;
    real _t0C4B = 0.e0;
    real _t0C4C = 0.1e1;
    vec4 _t0C4D = [_t0C49, _t0C4A, _t0C4B, _t0C4C];
    tensor[4,4] _t0C4E = [_t0C3E, _t0C43, _t0C48, _t0C4D];
    tensor[4,4][6] _t0C4F = {_t0BE5, _t0BFA, _t0C0F, _t0C24, _t0C39, _t0C4E};
    real _t0C50 = 0.1e1;
    real _t0C51 = 0.e0;
    real _t0C52 = 0.e0;
    real _t0C53 = 0.e0;
    vec4 _t0C54 = [_t0C50, _t0C51, _t0C52, _t0C53];
    real _t0C55 = 0.e0;
    real _t0C56 = 0.1e1;
    real _t0C57 = 0.e0;
    real _t0C58 = 0.e0;
    vec4 _t0C59 = [_t0C55, _t0C56, _t0C57, _t0C58];
    real _t0C5A = 0.e0;
    real _t0C5B = 0.e0;
    real _t0C5C = 0.1e1;
    real _t0C5D = -0.1e1;
    vec4 _t0C5E = [_t0C5A, _t0C5B, _t0C5C, _t0C5D];
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    real _t0C61 = 0.e0;
    real _t0C62 = 0.1e1;
    vec4 _t0C63 = [_t0C5F, _t0C60, _t0C61, _t0C62];
    tensor[4,4] _t0C64 = [_t0C54, _t0C59, _t0C5E, _t0C63];
    real _t0C65 = 0.1e1;
    real _t0C66 = 0.e0;
    real _t0C67 = 0.e0;
    real _t0C68 = 0.e0;
    vec4 _t0C69 = [_t0C65, _t0C66, _t0C67, _t0C68];
    real _t0C6A = 0.e0;
    real _t0C6B = 0.1e1;
    real _t0C6C = 0.e0;
    real _t0C6D = 0.e0;
    vec4 _t0C6E = [_t0C6A, _t0C6B, _t0C6C, _t0C6D];
    real _t0C6F = 0.e0;
    real _t0C70 = 0.e0;
    real _t0C71 = 0.1e1;
    real _t0C72 = 0.e0;
    vec4 _t0C73 = [_t0C6F, _t0C70, _t0C71, _t0C72];
    real _t0C74 = 0.e0;
    real _t0C75 = 0.e0;
    real _t0C76 = 0.e0;
    real _t0C77 = 0.1e1;
    vec4 _t0C78 = [_t0C74, _t0C75, _t0C76, _t0C77];
    tensor[4,4] _t0C79 = [_t0C69, _t0C6E, _t0C73, _t0C78];
    real _t0C7A = 0.e0;
    real _t0C7B = 0.1e1;
    real _t0C7C = 0.e0;
    real _t0C7D = 0.e0;
    vec4 _t0C7E = [_t0C7A, _t0C7B, _t0C7C, _t0C7D];
    real _t0C7F = 0.e0;
    real _t0C80 = 0.e0;
    real _t0C81 = 0.1e1;
    real _t0C82 = -0.1e1;
    vec4 _t0C83 = [_t0C7F, _t0C80, _t0C81, _t0C82];
    real _t0C84 = 0.1e1;
    real _t0C85 = -0.1e1;
    real _t0C86 = 0.e0;
    real _t0C87 = -0.5e0;
    vec4 _t0C88 = [_t0C84, _t0C85, _t0C86, _t0C87];
    real _t0C89 = 0.e0;
    real _t0C8A = 0.e0;
    real _t0C8B = 0.e0;
    real _t0C8C = 0.1e1;
    vec4 _t0C8D = [_t0C89, _t0C8A, _t0C8B, _t0C8C];
    tensor[4,4] _t0C8E = [_t0C7E, _t0C83, _t0C88, _t0C8D];
    real _t0C8F = 0.e0;
    real _t0C90 = 0.e0;
    real _t0C91 = -0.1e1;
    real _t0C92 = 0.1e1;
    vec4 _t0C93 = [_t0C8F, _t0C90, _t0C91, _t0C92];
    real _t0C94 = 0.e0;
    real _t0C95 = 0.1e1;
    real _t0C96 = 0.e0;
    real _t0C97 = 0.e0;
    vec4 _t0C98 = [_t0C94, _t0C95, _t0C96, _t0C97];
    real _t0C99 = 0.1e1;
    real _t0C9A = -0.1e1;
    real _t0C9B = 0.e0;
    real _t0C9C = -0.5e0;
    vec4 _t0C9D = [_t0C99, _t0C9A, _t0C9B, _t0C9C];
    real _t0C9E = 0.e0;
    real _t0C9F = 0.e0;
    real _t0CA0 = 0.e0;
    real _t0CA1 = 0.1e1;
    vec4 _t0CA2 = [_t0C9E, _t0C9F, _t0CA0, _t0CA1];
    tensor[4,4] _t0CA3 = [_t0C93, _t0C98, _t0C9D, _t0CA2];
    real _t0CA4 = 0.e0;
    real _t0CA5 = -0.1e1;
    real _t0CA6 = 0.e0;
    real _t0CA7 = 0.e0;
    vec4 _t0CA8 = [_t0CA4, _t0CA5, _t0CA6, _t0CA7];
    real _t0CA9 = 0.e0;
    real _t0CAA = 0.e0;
    real _t0CAB = -0.1e1;
    real _t0CAC = 0.1e1;
    vec4 _t0CAD = [_t0CA9, _t0CAA, _t0CAB, _t0CAC];
    real _t0CAE = 0.1e1;
    real _t0CAF = -0.1e1;
    real _t0CB0 = 0.e0;
    real _t0CB1 = -0.5e0;
    vec4 _t0CB2 = [_t0CAE, _t0CAF, _t0CB0, _t0CB1];
    real _t0CB3 = 0.e0;
    real _t0CB4 = 0.e0;
    real _t0CB5 = 0.e0;
    real _t0CB6 = 0.1e1;
    vec4 _t0CB7 = [_t0CB3, _t0CB4, _t0CB5, _t0CB6];
    tensor[4,4] _t0CB8 = [_t0CA8, _t0CAD, _t0CB2, _t0CB7];
    real _t0CB9 = 0.e0;
    real _t0CBA = 0.e0;
    real _t0CBB = 0.1e1;
    real _t0CBC = -0.1e1;
    vec4 _t0CBD = [_t0CB9, _t0CBA, _t0CBB, _t0CBC];
    real _t0CBE = 0.e0;
    real _t0CBF = -0.1e1;
    real _t0CC0 = 0.e0;
    real _t0CC1 = 0.e0;
    vec4 _t0CC2 = [_t0CBE, _t0CBF, _t0CC0, _t0CC1];
    real _t0CC3 = 0.1e1;
    real _t0CC4 = -0.1e1;
    real _t0CC5 = 0.e0;
    real _t0CC6 = -0.5e0;
    vec4 _t0CC7 = [_t0CC3, _t0CC4, _t0CC5, _t0CC6];
    real _t0CC8 = 0.e0;
    real _t0CC9 = 0.e0;
    real _t0CCA = 0.e0;
    real _t0CCB = 0.1e1;
    vec4 _t0CCC = [_t0CC8, _t0CC9, _t0CCA, _t0CCB];
    tensor[4,4] _t0CCD = [_t0CBD, _t0CC2, _t0CC7, _t0CCC];
    tensor[4,4][6] _t0CCE = {_t0C64, _t0C79, _t0C8E, _t0CA3, _t0CB8, _t0CCD};
    real _t0CCF = 0.1e1;
    real _t0CD0 = 0.e0;
    real _t0CD1 = 0.1e1;
    real _t0CD2 = 0.5e0;
    vec4 _t0CD3 = [_t0CCF, _t0CD0, _t0CD1, _t0CD2];
    real _t0CD4 = 0.1e1;
    real _t0CD5 = 0.e0;
    real _t0CD6 = 0.e0;
    real _t0CD7 = 0.e0;
    vec4 _t0CD8 = [_t0CD4, _t0CD5, _t0CD6, _t0CD7];
    real _t0CD9 = 0.e0;
    real _t0CDA = 0.1e1;
    real _t0CDB = 0.e0;
    real _t0CDC = 0.e0;
    vec4 _t0CDD = [_t0CD9, _t0CDA, _t0CDB, _t0CDC];
    real _t0CDE = 0.e0;
    real _t0CDF = 0.e0;
    real _t0CE0 = 0.e0;
    real _t0CE1 = 0.1e1;
    vec4 _t0CE2 = [_t0CDE, _t0CDF, _t0CE0, _t0CE1];
    tensor[4,4] _t0CE3 = [_t0CD3, _t0CD8, _t0CDD, _t0CE2];
    real _t0CE4 = 0.1e1;
    real _t0CE5 = 0.e0;
    real _t0CE6 = 0.1e1;
    real _t0CE7 = 0.5e0;
    vec4 _t0CE8 = [_t0CE4, _t0CE5, _t0CE6, _t0CE7];
    real _t0CE9 = 0.1e1;
    real _t0CEA = 0.e0;
    real _t0CEB = 0.e0;
    real _t0CEC = 0.e0;
    vec4 _t0CED = [_t0CE9, _t0CEA, _t0CEB, _t0CEC];
    real _t0CEE = 0.e0;
    real _t0CEF = 0.1e1;
    real _t0CF0 = 0.e0;
    real _t0CF1 = 0.1e1;
    vec4 _t0CF2 = [_t0CEE, _t0CEF, _t0CF0, _t0CF1];
    real _t0CF3 = 0.e0;
    real _t0CF4 = 0.e0;
    real _t0CF5 = 0.e0;
    real _t0CF6 = 0.1e1;
    vec4 _t0CF7 = [_t0CF3, _t0CF4, _t0CF5, _t0CF6];
    tensor[4,4] _t0CF8 = [_t0CE8, _t0CED, _t0CF2, _t0CF7];
    real _t0CF9 = 0.1e1;
    real _t0CFA = 0.e0;
    real _t0CFB = 0.e0;
    real _t0CFC = 0.e0;
    vec4 _t0CFD = [_t0CF9, _t0CFA, _t0CFB, _t0CFC];
    real _t0CFE = 0.e0;
    real _t0CFF = 0.1e1;
    real _t0D00 = 0.e0;
    real _t0D01 = 0.e0;
    vec4 _t0D02 = [_t0CFE, _t0CFF, _t0D00, _t0D01];
    real _t0D03 = 0.e0;
    real _t0D04 = 0.e0;
    real _t0D05 = 0.1e1;
    real _t0D06 = 0.e0;
    vec4 _t0D07 = [_t0D03, _t0D04, _t0D05, _t0D06];
    real _t0D08 = 0.e0;
    real _t0D09 = 0.e0;
    real _t0D0A = 0.e0;
    real _t0D0B = 0.1e1;
    vec4 _t0D0C = [_t0D08, _t0D09, _t0D0A, _t0D0B];
    tensor[4,4] _t0D0D = [_t0CFD, _t0D02, _t0D07, _t0D0C];
    real _t0D0E = 0.e0;
    real _t0D0F = -0.1e1;
    real _t0D10 = 0.e0;
    real _t0D11 = 0.e0;
    vec4 _t0D12 = [_t0D0E, _t0D0F, _t0D10, _t0D11];
    real _t0D13 = 0.1e1;
    real _t0D14 = 0.e0;
    real _t0D15 = 0.e0;
    real _t0D16 = 0.e0;
    vec4 _t0D17 = [_t0D13, _t0D14, _t0D15, _t0D16];
    real _t0D18 = 0.e0;
    real _t0D19 = 0.e0;
    real _t0D1A = 0.1e1;
    real _t0D1B = 0.e0;
    vec4 _t0D1C = [_t0D18, _t0D19, _t0D1A, _t0D1B];
    real _t0D1D = 0.e0;
    real _t0D1E = 0.e0;
    real _t0D1F = 0.e0;
    real _t0D20 = 0.1e1;
    vec4 _t0D21 = [_t0D1D, _t0D1E, _t0D1F, _t0D20];
    tensor[4,4] _t0D22 = [_t0D12, _t0D17, _t0D1C, _t0D21];
    real _t0D23 = -0.1e1;
    real _t0D24 = 0.e0;
    real _t0D25 = 0.e0;
    real _t0D26 = 0.e0;
    vec4 _t0D27 = [_t0D23, _t0D24, _t0D25, _t0D26];
    real _t0D28 = 0.e0;
    real _t0D29 = -0.1e1;
    real _t0D2A = 0.e0;
    real _t0D2B = 0.e0;
    vec4 _t0D2C = [_t0D28, _t0D29, _t0D2A, _t0D2B];
    real _t0D2D = 0.e0;
    real _t0D2E = 0.e0;
    real _t0D2F = 0.1e1;
    real _t0D30 = 0.e0;
    vec4 _t0D31 = [_t0D2D, _t0D2E, _t0D2F, _t0D30];
    real _t0D32 = 0.e0;
    real _t0D33 = 0.e0;
    real _t0D34 = 0.e0;
    real _t0D35 = 0.1e1;
    vec4 _t0D36 = [_t0D32, _t0D33, _t0D34, _t0D35];
    tensor[4,4] _t0D37 = [_t0D27, _t0D2C, _t0D31, _t0D36];
    real _t0D38 = 0.e0;
    real _t0D39 = 0.1e1;
    real _t0D3A = 0.e0;
    real _t0D3B = 0.e0;
    vec4 _t0D3C = [_t0D38, _t0D39, _t0D3A, _t0D3B];
    real _t0D3D = -0.1e1;
    real _t0D3E = 0.e0;
    real _t0D3F = 0.e0;
    real _t0D40 = 0.e0;
    vec4 _t0D41 = [_t0D3D, _t0D3E, _t0D3F, _t0D40];
    real _t0D42 = 0.e0;
    real _t0D43 = 0.e0;
    real _t0D44 = 0.1e1;
    real _t0D45 = 0.e0;
    vec4 _t0D46 = [_t0D42, _t0D43, _t0D44, _t0D45];
    real _t0D47 = 0.e0;
    real _t0D48 = 0.e0;
    real _t0D49 = 0.e0;
    real _t0D4A = 0.1e1;
    vec4 _t0D4B = [_t0D47, _t0D48, _t0D49, _t0D4A];
    tensor[4,4] _t0D4C = [_t0D3C, _t0D41, _t0D46, _t0D4B];
    tensor[4,4][6] _t0D4D = {_t0CE3, _t0CF8, _t0D0D, _t0D22, _t0D37, _t0D4C};
    real _t0D4E = 0.e0;
    real _t0D4F = 0.1e1;
    real _t0D50 = 0.1e1;
    real _t0D51 = 0.5e0;
    vec4 _t0D52 = [_t0D4E, _t0D4F, _t0D50, _t0D51];
    real _t0D53 = 0.e0;
    real _t0D54 = 0.1e1;
    real _t0D55 = 0.e0;
    real _t0D56 = 0.e0;
    vec4 _t0D57 = [_t0D53, _t0D54, _t0D55, _t0D56];
    real _t0D58 = -0.1e1;
    real _t0D59 = 0.e0;
    real _t0D5A = 0.e0;
    real _t0D5B = 0.e0;
    vec4 _t0D5C = [_t0D58, _t0D59, _t0D5A, _t0D5B];
    real _t0D5D = 0.e0;
    real _t0D5E = 0.e0;
    real _t0D5F = 0.e0;
    real _t0D60 = 0.1e1;
    vec4 _t0D61 = [_t0D5D, _t0D5E, _t0D5F, _t0D60];
    tensor[4,4] _t0D62 = [_t0D52, _t0D57, _t0D5C, _t0D61];
    real _t0D63 = 0.e0;
    real _t0D64 = 0.1e1;
    real _t0D65 = 0.1e1;
    real _t0D66 = 0.5e0;
    vec4 _t0D67 = [_t0D63, _t0D64, _t0D65, _t0D66];
    real _t0D68 = 0.e0;
    real _t0D69 = 0.1e1;
    real _t0D6A = 0.e0;
    real _t0D6B = 0.e0;
    vec4 _t0D6C = [_t0D68, _t0D69, _t0D6A, _t0D6B];
    real _t0D6D = -0.1e1;
    real _t0D6E = 0.e0;
    real _t0D6F = 0.e0;
    real _t0D70 = 0.1e1;
    vec4 _t0D71 = [_t0D6D, _t0D6E, _t0D6F, _t0D70];
    real _t0D72 = 0.e0;
    real _t0D73 = 0.e0;
    real _t0D74 = 0.e0;
    real _t0D75 = 0.1e1;
    vec4 _t0D76 = [_t0D72, _t0D73, _t0D74, _t0D75];
    tensor[4,4] _t0D77 = [_t0D67, _t0D6C, _t0D71, _t0D76];
    real _t0D78 = 0.e0;
    real _t0D79 = 0.1e1;
    real _t0D7A = 0.e0;
    real _t0D7B = 0.e0;
    vec4 _t0D7C = [_t0D78, _t0D79, _t0D7A, _t0D7B];
    real _t0D7D = -0.1e1;
    real _t0D7E = 0.e0;
    real _t0D7F = 0.e0;
    real _t0D80 = 0.e0;
    vec4 _t0D81 = [_t0D7D, _t0D7E, _t0D7F, _t0D80];
    real _t0D82 = 0.e0;
    real _t0D83 = 0.e0;
    real _t0D84 = 0.1e1;
    real _t0D85 = 0.e0;
    vec4 _t0D86 = [_t0D82, _t0D83, _t0D84, _t0D85];
    real _t0D87 = 0.e0;
    real _t0D88 = 0.e0;
    real _t0D89 = 0.e0;
    real _t0D8A = 0.1e1;
    vec4 _t0D8B = [_t0D87, _t0D88, _t0D89, _t0D8A];
    tensor[4,4] _t0D8C = [_t0D7C, _t0D81, _t0D86, _t0D8B];
    real _t0D8D = 0.1e1;
    real _t0D8E = 0.e0;
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    vec4 _t0D91 = [_t0D8D, _t0D8E, _t0D8F, _t0D90];
    real _t0D92 = 0.e0;
    real _t0D93 = 0.1e1;
    real _t0D94 = 0.e0;
    real _t0D95 = 0.e0;
    vec4 _t0D96 = [_t0D92, _t0D93, _t0D94, _t0D95];
    real _t0D97 = 0.e0;
    real _t0D98 = 0.e0;
    real _t0D99 = 0.1e1;
    real _t0D9A = 0.e0;
    vec4 _t0D9B = [_t0D97, _t0D98, _t0D99, _t0D9A];
    real _t0D9C = 0.e0;
    real _t0D9D = 0.e0;
    real _t0D9E = 0.e0;
    real _t0D9F = 0.1e1;
    vec4 _t0DA0 = [_t0D9C, _t0D9D, _t0D9E, _t0D9F];
    tensor[4,4] _t0DA1 = [_t0D91, _t0D96, _t0D9B, _t0DA0];
    real _t0DA2 = 0.e0;
    real _t0DA3 = -0.1e1;
    real _t0DA4 = 0.e0;
    real _t0DA5 = 0.e0;
    vec4 _t0DA6 = [_t0DA2, _t0DA3, _t0DA4, _t0DA5];
    real _t0DA7 = 0.1e1;
    real _t0DA8 = 0.e0;
    real _t0DA9 = 0.e0;
    real _t0DAA = 0.e0;
    vec4 _t0DAB = [_t0DA7, _t0DA8, _t0DA9, _t0DAA];
    real _t0DAC = 0.e0;
    real _t0DAD = 0.e0;
    real _t0DAE = 0.1e1;
    real _t0DAF = 0.e0;
    vec4 _t0DB0 = [_t0DAC, _t0DAD, _t0DAE, _t0DAF];
    real _t0DB1 = 0.e0;
    real _t0DB2 = 0.e0;
    real _t0DB3 = 0.e0;
    real _t0DB4 = 0.1e1;
    vec4 _t0DB5 = [_t0DB1, _t0DB2, _t0DB3, _t0DB4];
    tensor[4,4] _t0DB6 = [_t0DA6, _t0DAB, _t0DB0, _t0DB5];
    real _t0DB7 = -0.1e1;
    real _t0DB8 = 0.e0;
    real _t0DB9 = 0.e0;
    real _t0DBA = 0.e0;
    vec4 _t0DBB = [_t0DB7, _t0DB8, _t0DB9, _t0DBA];
    real _t0DBC = 0.e0;
    real _t0DBD = -0.1e1;
    real _t0DBE = 0.e0;
    real _t0DBF = 0.e0;
    vec4 _t0DC0 = [_t0DBC, _t0DBD, _t0DBE, _t0DBF];
    real _t0DC1 = 0.e0;
    real _t0DC2 = 0.e0;
    real _t0DC3 = 0.1e1;
    real _t0DC4 = 0.e0;
    vec4 _t0DC5 = [_t0DC1, _t0DC2, _t0DC3, _t0DC4];
    real _t0DC6 = 0.e0;
    real _t0DC7 = 0.e0;
    real _t0DC8 = 0.e0;
    real _t0DC9 = 0.1e1;
    vec4 _t0DCA = [_t0DC6, _t0DC7, _t0DC8, _t0DC9];
    tensor[4,4] _t0DCB = [_t0DBB, _t0DC0, _t0DC5, _t0DCA];
    tensor[4,4][6] _t0DCC = {_t0D62, _t0D77, _t0D8C, _t0DA1, _t0DB6, _t0DCB};
    real _t0DCD = -0.1e1;
    real _t0DCE = 0.e0;
    real _t0DCF = 0.1e1;
    real _t0DD0 = 0.5e0;
    vec4 _t0DD1 = [_t0DCD, _t0DCE, _t0DCF, _t0DD0];
    real _t0DD2 = -0.1e1;
    real _t0DD3 = 0.e0;
    real _t0DD4 = 0.e0;
    real _t0DD5 = 0.e0;
    vec4 _t0DD6 = [_t0DD2, _t0DD3, _t0DD4, _t0DD5];
    real _t0DD7 = 0.e0;
    real _t0DD8 = -0.1e1;
    real _t0DD9 = 0.e0;
    real _t0DDA = 0.e0;
    vec4 _t0DDB = [_t0DD7, _t0DD8, _t0DD9, _t0DDA];
    real _t0DDC = 0.e0;
    real _t0DDD = 0.e0;
    real _t0DDE = 0.e0;
    real _t0DDF = 0.1e1;
    vec4 _t0DE0 = [_t0DDC, _t0DDD, _t0DDE, _t0DDF];
    tensor[4,4] _t0DE1 = [_t0DD1, _t0DD6, _t0DDB, _t0DE0];
    real _t0DE2 = -0.1e1;
    real _t0DE3 = 0.e0;
    real _t0DE4 = 0.1e1;
    real _t0DE5 = 0.5e0;
    vec4 _t0DE6 = [_t0DE2, _t0DE3, _t0DE4, _t0DE5];
    real _t0DE7 = -0.1e1;
    real _t0DE8 = 0.e0;
    real _t0DE9 = 0.e0;
    real _t0DEA = 0.e0;
    vec4 _t0DEB = [_t0DE7, _t0DE8, _t0DE9, _t0DEA];
    real _t0DEC = 0.e0;
    real _t0DED = -0.1e1;
    real _t0DEE = 0.e0;
    real _t0DEF = 0.1e1;
    vec4 _t0DF0 = [_t0DEC, _t0DED, _t0DEE, _t0DEF];
    real _t0DF1 = 0.e0;
    real _t0DF2 = 0.e0;
    real _t0DF3 = 0.e0;
    real _t0DF4 = 0.1e1;
    vec4 _t0DF5 = [_t0DF1, _t0DF2, _t0DF3, _t0DF4];
    tensor[4,4] _t0DF6 = [_t0DE6, _t0DEB, _t0DF0, _t0DF5];
    real _t0DF7 = -0.1e1;
    real _t0DF8 = 0.e0;
    real _t0DF9 = 0.e0;
    real _t0DFA = 0.e0;
    vec4 _t0DFB = [_t0DF7, _t0DF8, _t0DF9, _t0DFA];
    real _t0DFC = 0.e0;
    real _t0DFD = -0.1e1;
    real _t0DFE = 0.e0;
    real _t0DFF = 0.e0;
    vec4 _t0E00 = [_t0DFC, _t0DFD, _t0DFE, _t0DFF];
    real _t0E01 = 0.e0;
    real _t0E02 = 0.e0;
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.e0;
    vec4 _t0E05 = [_t0E01, _t0E02, _t0E03, _t0E04];
    real _t0E06 = 0.e0;
    real _t0E07 = 0.e0;
    real _t0E08 = 0.e0;
    real _t0E09 = 0.1e1;
    vec4 _t0E0A = [_t0E06, _t0E07, _t0E08, _t0E09];
    tensor[4,4] _t0E0B = [_t0DFB, _t0E00, _t0E05, _t0E0A];
    real _t0E0C = 0.e0;
    real _t0E0D = 0.1e1;
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    vec4 _t0E10 = [_t0E0C, _t0E0D, _t0E0E, _t0E0F];
    real _t0E11 = -0.1e1;
    real _t0E12 = 0.e0;
    real _t0E13 = 0.e0;
    real _t0E14 = 0.e0;
    vec4 _t0E15 = [_t0E11, _t0E12, _t0E13, _t0E14];
    real _t0E16 = 0.e0;
    real _t0E17 = 0.e0;
    real _t0E18 = 0.1e1;
    real _t0E19 = 0.e0;
    vec4 _t0E1A = [_t0E16, _t0E17, _t0E18, _t0E19];
    real _t0E1B = 0.e0;
    real _t0E1C = 0.e0;
    real _t0E1D = 0.e0;
    real _t0E1E = 0.1e1;
    vec4 _t0E1F = [_t0E1B, _t0E1C, _t0E1D, _t0E1E];
    tensor[4,4] _t0E20 = [_t0E10, _t0E15, _t0E1A, _t0E1F];
    real _t0E21 = 0.1e1;
    real _t0E22 = 0.e0;
    real _t0E23 = 0.e0;
    real _t0E24 = 0.e0;
    vec4 _t0E25 = [_t0E21, _t0E22, _t0E23, _t0E24];
    real _t0E26 = 0.e0;
    real _t0E27 = 0.1e1;
    real _t0E28 = 0.e0;
    real _t0E29 = 0.e0;
    vec4 _t0E2A = [_t0E26, _t0E27, _t0E28, _t0E29];
    real _t0E2B = 0.e0;
    real _t0E2C = 0.e0;
    real _t0E2D = 0.1e1;
    real _t0E2E = 0.e0;
    vec4 _t0E2F = [_t0E2B, _t0E2C, _t0E2D, _t0E2E];
    real _t0E30 = 0.e0;
    real _t0E31 = 0.e0;
    real _t0E32 = 0.e0;
    real _t0E33 = 0.1e1;
    vec4 _t0E34 = [_t0E30, _t0E31, _t0E32, _t0E33];
    tensor[4,4] _t0E35 = [_t0E25, _t0E2A, _t0E2F, _t0E34];
    real _t0E36 = 0.e0;
    real _t0E37 = -0.1e1;
    real _t0E38 = 0.e0;
    real _t0E39 = 0.e0;
    vec4 _t0E3A = [_t0E36, _t0E37, _t0E38, _t0E39];
    real _t0E3B = 0.1e1;
    real _t0E3C = 0.e0;
    real _t0E3D = 0.e0;
    real _t0E3E = 0.e0;
    vec4 _t0E3F = [_t0E3B, _t0E3C, _t0E3D, _t0E3E];
    real _t0E40 = 0.e0;
    real _t0E41 = 0.e0;
    real _t0E42 = 0.1e1;
    real _t0E43 = 0.e0;
    vec4 _t0E44 = [_t0E40, _t0E41, _t0E42, _t0E43];
    real _t0E45 = 0.e0;
    real _t0E46 = 0.e0;
    real _t0E47 = 0.e0;
    real _t0E48 = 0.1e1;
    vec4 _t0E49 = [_t0E45, _t0E46, _t0E47, _t0E48];
    tensor[4,4] _t0E4A = [_t0E3A, _t0E3F, _t0E44, _t0E49];
    tensor[4,4][6] _t0E4B = {_t0DE1, _t0DF6, _t0E0B, _t0E20, _t0E35, _t0E4A};
    real _t0E4C = 0.e0;
    real _t0E4D = -0.1e1;
    real _t0E4E = 0.1e1;
    real _t0E4F = 0.5e0;
    vec4 _t0E50 = [_t0E4C, _t0E4D, _t0E4E, _t0E4F];
    real _t0E51 = 0.e0;
    real _t0E52 = -0.1e1;
    real _t0E53 = 0.e0;
    real _t0E54 = 0.e0;
    vec4 _t0E55 = [_t0E51, _t0E52, _t0E53, _t0E54];
    real _t0E56 = 0.1e1;
    real _t0E57 = 0.e0;
    real _t0E58 = 0.e0;
    real _t0E59 = 0.e0;
    vec4 _t0E5A = [_t0E56, _t0E57, _t0E58, _t0E59];
    real _t0E5B = 0.e0;
    real _t0E5C = 0.e0;
    real _t0E5D = 0.e0;
    real _t0E5E = 0.1e1;
    vec4 _t0E5F = [_t0E5B, _t0E5C, _t0E5D, _t0E5E];
    tensor[4,4] _t0E60 = [_t0E50, _t0E55, _t0E5A, _t0E5F];
    real _t0E61 = 0.e0;
    real _t0E62 = -0.1e1;
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.5e0;
    vec4 _t0E65 = [_t0E61, _t0E62, _t0E63, _t0E64];
    real _t0E66 = 0.e0;
    real _t0E67 = -0.1e1;
    real _t0E68 = 0.e0;
    real _t0E69 = 0.e0;
    vec4 _t0E6A = [_t0E66, _t0E67, _t0E68, _t0E69];
    real _t0E6B = 0.1e1;
    real _t0E6C = 0.e0;
    real _t0E6D = 0.e0;
    real _t0E6E = 0.1e1;
    vec4 _t0E6F = [_t0E6B, _t0E6C, _t0E6D, _t0E6E];
    real _t0E70 = 0.e0;
    real _t0E71 = 0.e0;
    real _t0E72 = 0.e0;
    real _t0E73 = 0.1e1;
    vec4 _t0E74 = [_t0E70, _t0E71, _t0E72, _t0E73];
    tensor[4,4] _t0E75 = [_t0E65, _t0E6A, _t0E6F, _t0E74];
    real _t0E76 = 0.e0;
    real _t0E77 = -0.1e1;
    real _t0E78 = 0.e0;
    real _t0E79 = 0.e0;
    vec4 _t0E7A = [_t0E76, _t0E77, _t0E78, _t0E79];
    real _t0E7B = 0.1e1;
    real _t0E7C = 0.e0;
    real _t0E7D = 0.e0;
    real _t0E7E = 0.e0;
    vec4 _t0E7F = [_t0E7B, _t0E7C, _t0E7D, _t0E7E];
    real _t0E80 = 0.e0;
    real _t0E81 = 0.e0;
    real _t0E82 = 0.1e1;
    real _t0E83 = 0.e0;
    vec4 _t0E84 = [_t0E80, _t0E81, _t0E82, _t0E83];
    real _t0E85 = 0.e0;
    real _t0E86 = 0.e0;
    real _t0E87 = 0.e0;
    real _t0E88 = 0.1e1;
    vec4 _t0E89 = [_t0E85, _t0E86, _t0E87, _t0E88];
    tensor[4,4] _t0E8A = [_t0E7A, _t0E7F, _t0E84, _t0E89];
    real _t0E8B = -0.1e1;
    real _t0E8C = 0.e0;
    real _t0E8D = 0.e0;
    real _t0E8E = 0.e0;
    vec4 _t0E8F = [_t0E8B, _t0E8C, _t0E8D, _t0E8E];
    real _t0E90 = 0.e0;
    real _t0E91 = -0.1e1;
    real _t0E92 = 0.e0;
    real _t0E93 = 0.e0;
    vec4 _t0E94 = [_t0E90, _t0E91, _t0E92, _t0E93];
    real _t0E95 = 0.e0;
    real _t0E96 = 0.e0;
    real _t0E97 = 0.1e1;
    real _t0E98 = 0.e0;
    vec4 _t0E99 = [_t0E95, _t0E96, _t0E97, _t0E98];
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    real _t0E9C = 0.e0;
    real _t0E9D = 0.1e1;
    vec4 _t0E9E = [_t0E9A, _t0E9B, _t0E9C, _t0E9D];
    tensor[4,4] _t0E9F = [_t0E8F, _t0E94, _t0E99, _t0E9E];
    real _t0EA0 = 0.e0;
    real _t0EA1 = 0.1e1;
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.e0;
    vec4 _t0EA4 = [_t0EA0, _t0EA1, _t0EA2, _t0EA3];
    real _t0EA5 = -0.1e1;
    real _t0EA6 = 0.e0;
    real _t0EA7 = 0.e0;
    real _t0EA8 = 0.e0;
    vec4 _t0EA9 = [_t0EA5, _t0EA6, _t0EA7, _t0EA8];
    real _t0EAA = 0.e0;
    real _t0EAB = 0.e0;
    real _t0EAC = 0.1e1;
    real _t0EAD = 0.e0;
    vec4 _t0EAE = [_t0EAA, _t0EAB, _t0EAC, _t0EAD];
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.e0;
    real _t0EB1 = 0.e0;
    real _t0EB2 = 0.1e1;
    vec4 _t0EB3 = [_t0EAF, _t0EB0, _t0EB1, _t0EB2];
    tensor[4,4] _t0EB4 = [_t0EA4, _t0EA9, _t0EAE, _t0EB3];
    real _t0EB5 = 0.1e1;
    real _t0EB6 = 0.e0;
    real _t0EB7 = 0.e0;
    real _t0EB8 = 0.e0;
    vec4 _t0EB9 = [_t0EB5, _t0EB6, _t0EB7, _t0EB8];
    real _t0EBA = 0.e0;
    real _t0EBB = 0.1e1;
    real _t0EBC = 0.e0;
    real _t0EBD = 0.e0;
    vec4 _t0EBE = [_t0EBA, _t0EBB, _t0EBC, _t0EBD];
    real _t0EBF = 0.e0;
    real _t0EC0 = 0.e0;
    real _t0EC1 = 0.1e1;
    real _t0EC2 = 0.e0;
    vec4 _t0EC3 = [_t0EBF, _t0EC0, _t0EC1, _t0EC2];
    real _t0EC4 = 0.e0;
    real _t0EC5 = 0.e0;
    real _t0EC6 = 0.e0;
    real _t0EC7 = 0.1e1;
    vec4 _t0EC8 = [_t0EC4, _t0EC5, _t0EC6, _t0EC7];
    tensor[4,4] _t0EC9 = [_t0EB9, _t0EBE, _t0EC3, _t0EC8];
    tensor[4,4][6] _t0ECA = {_t0E60, _t0E75, _t0E8A, _t0E9F, _t0EB4, _t0EC9};
    tensor[4,4][6][6] _t0ECB = {_t0C4F, _t0CCE, _t0D4D, _t0DCC, _t0E4B, _t0ECA};
    real _t0ECC = time059F[1];
    int _t0ECD = prim $r2i01B7 (_t0ECC);
    tensor[4,4][6] _t0ECE = prim $sub01C0<tensor[4,4][6]; %6> (_t0ECB, _t0ECD);
    real _t0ECF = time059F[1];
    int _t0ED0 = prim $r2i01B7 (_t0ECF);
    int[2] _t0ED1 = func nextCell405A3 (_t0ED0, cellId059C, mesh059B);
    int _t0ED2 = 1;
    int _t0ED3 = prim $sub01C0<int; %2> (_t0ED1, _t0ED2);
    tensor[4,4] _t0ED4 = prim $sub01C0<tensor[4,4]; %6> (_t0ECE, _t0ED3);
    real _t0ED5 = time059F[0];
    vec3 _t0ED6 = prim *0036<$[3]> (_t0ED5, dPos059E);
    vec3 _t0ED7 = prim +0017<$[3]> (_t0ED6, refPos059D);
    real _t0ED8 = _t0ED7[0];
    real _t0ED9 = time059F[0];
    vec3 _t0EDA = prim *0036<$[3]> (_t0ED9, dPos059E);
    vec3 _t0EDB = prim +0017<$[3]> (_t0EDA, refPos059D);
    real _t0EDC = _t0EDB[1];
    real _t0EDD = time059F[0];
    vec3 _t0EDE = prim *0036<$[3]> (_t0EDD, dPos059E);
    vec3 _t0EDF = prim +0017<$[3]> (_t0EDE, refPos059D);
    real _t0EE0 = _t0EDF[2];
    real _t0EE1 = 0.1e1;
    vec4 _t0EE2 = [_t0ED8, _t0EDC, _t0EE0, _t0EE1];
    vec4 _t0EE3 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0ED4, _t0EE2);
    real _t0EE4 = _t0EE3[1];
    real _t0EE5 = 0.1e1;
    real _t0EE6 = 0.e0;
    real _t0EE7 = 0.e0;
    real _t0EE8 = 0.e0;
    vec4 _t0EE9 = [_t0EE5, _t0EE6, _t0EE7, _t0EE8];
    real _t0EEA = 0.e0;
    real _t0EEB = 0.1e1;
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    vec4 _t0EEE = [_t0EEA, _t0EEB, _t0EEC, _t0EED];
    real _t0EEF = 0.e0;
    real _t0EF0 = 0.e0;
    real _t0EF1 = 0.1e1;
    real _t0EF2 = 0.e0;
    vec4 _t0EF3 = [_t0EEF, _t0EF0, _t0EF1, _t0EF2];
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    real _t0EF6 = 0.e0;
    real _t0EF7 = 0.1e1;
    vec4 _t0EF8 = [_t0EF4, _t0EF5, _t0EF6, _t0EF7];
    tensor[4,4] _t0EF9 = [_t0EE9, _t0EEE, _t0EF3, _t0EF8];
    real _t0EFA = 0.1e1;
    real _t0EFB = 0.e0;
    real _t0EFC = 0.e0;
    real _t0EFD = 0.e0;
    vec4 _t0EFE = [_t0EFA, _t0EFB, _t0EFC, _t0EFD];
    real _t0EFF = 0.e0;
    real _t0F00 = 0.1e1;
    real _t0F01 = 0.e0;
    real _t0F02 = 0.e0;
    vec4 _t0F03 = [_t0EFF, _t0F00, _t0F01, _t0F02];
    real _t0F04 = 0.e0;
    real _t0F05 = 0.e0;
    real _t0F06 = 0.1e1;
    real _t0F07 = 0.1e1;
    vec4 _t0F08 = [_t0F04, _t0F05, _t0F06, _t0F07];
    real _t0F09 = 0.e0;
    real _t0F0A = 0.e0;
    real _t0F0B = 0.e0;
    real _t0F0C = 0.1e1;
    vec4 _t0F0D = [_t0F09, _t0F0A, _t0F0B, _t0F0C];
    tensor[4,4] _t0F0E = [_t0EFE, _t0F03, _t0F08, _t0F0D];
    real _t0F0F = 0.e0;
    real _t0F10 = 0.1e1;
    real _t0F11 = 0.e0;
    real _t0F12 = 0.e0;
    vec4 _t0F13 = [_t0F0F, _t0F10, _t0F11, _t0F12];
    real _t0F14 = 0.e0;
    real _t0F15 = 0.e0;
    real _t0F16 = 0.1e1;
    real _t0F17 = 0.e0;
    vec4 _t0F18 = [_t0F14, _t0F15, _t0F16, _t0F17];
    real _t0F19 = 0.1e1;
    real _t0F1A = -0.1e1;
    real _t0F1B = 0.e0;
    real _t0F1C = -0.5e0;
    vec4 _t0F1D = [_t0F19, _t0F1A, _t0F1B, _t0F1C];
    real _t0F1E = 0.e0;
    real _t0F1F = 0.e0;
    real _t0F20 = 0.e0;
    real _t0F21 = 0.1e1;
    vec4 _t0F22 = [_t0F1E, _t0F1F, _t0F20, _t0F21];
    tensor[4,4] _t0F23 = [_t0F13, _t0F18, _t0F1D, _t0F22];
    real _t0F24 = 0.e0;
    real _t0F25 = 0.e0;
    real _t0F26 = -0.1e1;
    real _t0F27 = 0.e0;
    vec4 _t0F28 = [_t0F24, _t0F25, _t0F26, _t0F27];
    real _t0F29 = 0.e0;
    real _t0F2A = 0.1e1;
    real _t0F2B = 0.e0;
    real _t0F2C = 0.e0;
    vec4 _t0F2D = [_t0F29, _t0F2A, _t0F2B, _t0F2C];
    real _t0F2E = 0.1e1;
    real _t0F2F = -0.1e1;
    real _t0F30 = 0.e0;
    real _t0F31 = -0.5e0;
    vec4 _t0F32 = [_t0F2E, _t0F2F, _t0F30, _t0F31];
    real _t0F33 = 0.e0;
    real _t0F34 = 0.e0;
    real _t0F35 = 0.e0;
    real _t0F36 = 0.1e1;
    vec4 _t0F37 = [_t0F33, _t0F34, _t0F35, _t0F36];
    tensor[4,4] _t0F38 = [_t0F28, _t0F2D, _t0F32, _t0F37];
    real _t0F39 = 0.e0;
    real _t0F3A = -0.1e1;
    real _t0F3B = 0.e0;
    real _t0F3C = 0.e0;
    vec4 _t0F3D = [_t0F39, _t0F3A, _t0F3B, _t0F3C];
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    real _t0F40 = -0.1e1;
    real _t0F41 = 0.e0;
    vec4 _t0F42 = [_t0F3E, _t0F3F, _t0F40, _t0F41];
    real _t0F43 = 0.1e1;
    real _t0F44 = -0.1e1;
    real _t0F45 = 0.e0;
    real _t0F46 = -0.5e0;
    vec4 _t0F47 = [_t0F43, _t0F44, _t0F45, _t0F46];
    real _t0F48 = 0.e0;
    real _t0F49 = 0.e0;
    real _t0F4A = 0.e0;
    real _t0F4B = 0.1e1;
    vec4 _t0F4C = [_t0F48, _t0F49, _t0F4A, _t0F4B];
    tensor[4,4] _t0F4D = [_t0F3D, _t0F42, _t0F47, _t0F4C];
    real _t0F4E = 0.e0;
    real _t0F4F = 0.e0;
    real _t0F50 = 0.1e1;
    real _t0F51 = 0.e0;
    vec4 _t0F52 = [_t0F4E, _t0F4F, _t0F50, _t0F51];
    real _t0F53 = 0.e0;
    real _t0F54 = -0.1e1;
    real _t0F55 = 0.e0;
    real _t0F56 = 0.e0;
    vec4 _t0F57 = [_t0F53, _t0F54, _t0F55, _t0F56];
    real _t0F58 = 0.1e1;
    real _t0F59 = -0.1e1;
    real _t0F5A = 0.e0;
    real _t0F5B = -0.5e0;
    vec4 _t0F5C = [_t0F58, _t0F59, _t0F5A, _t0F5B];
    real _t0F5D = 0.e0;
    real _t0F5E = 0.e0;
    real _t0F5F = 0.e0;
    real _t0F60 = 0.1e1;
    vec4 _t0F61 = [_t0F5D, _t0F5E, _t0F5F, _t0F60];
    tensor[4,4] _t0F62 = [_t0F52, _t0F57, _t0F5C, _t0F61];
    tensor[4,4][6] _t0F63 = {_t0EF9, _t0F0E, _t0F23, _t0F38, _t0F4D, _t0F62};
    real _t0F64 = 0.1e1;
    real _t0F65 = 0.e0;
    real _t0F66 = 0.e0;
    real _t0F67 = 0.e0;
    vec4 _t0F68 = [_t0F64, _t0F65, _t0F66, _t0F67];
    real _t0F69 = 0.e0;
    real _t0F6A = 0.1e1;
    real _t0F6B = 0.e0;
    real _t0F6C = 0.e0;
    vec4 _t0F6D = [_t0F69, _t0F6A, _t0F6B, _t0F6C];
    real _t0F6E = 0.e0;
    real _t0F6F = 0.e0;
    real _t0F70 = 0.1e1;
    real _t0F71 = -0.1e1;
    vec4 _t0F72 = [_t0F6E, _t0F6F, _t0F70, _t0F71];
    real _t0F73 = 0.e0;
    real _t0F74 = 0.e0;
    real _t0F75 = 0.e0;
    real _t0F76 = 0.1e1;
    vec4 _t0F77 = [_t0F73, _t0F74, _t0F75, _t0F76];
    tensor[4,4] _t0F78 = [_t0F68, _t0F6D, _t0F72, _t0F77];
    real _t0F79 = 0.1e1;
    real _t0F7A = 0.e0;
    real _t0F7B = 0.e0;
    real _t0F7C = 0.e0;
    vec4 _t0F7D = [_t0F79, _t0F7A, _t0F7B, _t0F7C];
    real _t0F7E = 0.e0;
    real _t0F7F = 0.1e1;
    real _t0F80 = 0.e0;
    real _t0F81 = 0.e0;
    vec4 _t0F82 = [_t0F7E, _t0F7F, _t0F80, _t0F81];
    real _t0F83 = 0.e0;
    real _t0F84 = 0.e0;
    real _t0F85 = 0.1e1;
    real _t0F86 = 0.e0;
    vec4 _t0F87 = [_t0F83, _t0F84, _t0F85, _t0F86];
    real _t0F88 = 0.e0;
    real _t0F89 = 0.e0;
    real _t0F8A = 0.e0;
    real _t0F8B = 0.1e1;
    vec4 _t0F8C = [_t0F88, _t0F89, _t0F8A, _t0F8B];
    tensor[4,4] _t0F8D = [_t0F7D, _t0F82, _t0F87, _t0F8C];
    real _t0F8E = 0.e0;
    real _t0F8F = 0.1e1;
    real _t0F90 = 0.e0;
    real _t0F91 = 0.e0;
    vec4 _t0F92 = [_t0F8E, _t0F8F, _t0F90, _t0F91];
    real _t0F93 = 0.e0;
    real _t0F94 = 0.e0;
    real _t0F95 = 0.1e1;
    real _t0F96 = -0.1e1;
    vec4 _t0F97 = [_t0F93, _t0F94, _t0F95, _t0F96];
    real _t0F98 = 0.1e1;
    real _t0F99 = -0.1e1;
    real _t0F9A = 0.e0;
    real _t0F9B = -0.5e0;
    vec4 _t0F9C = [_t0F98, _t0F99, _t0F9A, _t0F9B];
    real _t0F9D = 0.e0;
    real _t0F9E = 0.e0;
    real _t0F9F = 0.e0;
    real _t0FA0 = 0.1e1;
    vec4 _t0FA1 = [_t0F9D, _t0F9E, _t0F9F, _t0FA0];
    tensor[4,4] _t0FA2 = [_t0F92, _t0F97, _t0F9C, _t0FA1];
    real _t0FA3 = 0.e0;
    real _t0FA4 = 0.e0;
    real _t0FA5 = -0.1e1;
    real _t0FA6 = 0.1e1;
    vec4 _t0FA7 = [_t0FA3, _t0FA4, _t0FA5, _t0FA6];
    real _t0FA8 = 0.e0;
    real _t0FA9 = 0.1e1;
    real _t0FAA = 0.e0;
    real _t0FAB = 0.e0;
    vec4 _t0FAC = [_t0FA8, _t0FA9, _t0FAA, _t0FAB];
    real _t0FAD = 0.1e1;
    real _t0FAE = -0.1e1;
    real _t0FAF = 0.e0;
    real _t0FB0 = -0.5e0;
    vec4 _t0FB1 = [_t0FAD, _t0FAE, _t0FAF, _t0FB0];
    real _t0FB2 = 0.e0;
    real _t0FB3 = 0.e0;
    real _t0FB4 = 0.e0;
    real _t0FB5 = 0.1e1;
    vec4 _t0FB6 = [_t0FB2, _t0FB3, _t0FB4, _t0FB5];
    tensor[4,4] _t0FB7 = [_t0FA7, _t0FAC, _t0FB1, _t0FB6];
    real _t0FB8 = 0.e0;
    real _t0FB9 = -0.1e1;
    real _t0FBA = 0.e0;
    real _t0FBB = 0.e0;
    vec4 _t0FBC = [_t0FB8, _t0FB9, _t0FBA, _t0FBB];
    real _t0FBD = 0.e0;
    real _t0FBE = 0.e0;
    real _t0FBF = -0.1e1;
    real _t0FC0 = 0.1e1;
    vec4 _t0FC1 = [_t0FBD, _t0FBE, _t0FBF, _t0FC0];
    real _t0FC2 = 0.1e1;
    real _t0FC3 = -0.1e1;
    real _t0FC4 = 0.e0;
    real _t0FC5 = -0.5e0;
    vec4 _t0FC6 = [_t0FC2, _t0FC3, _t0FC4, _t0FC5];
    real _t0FC7 = 0.e0;
    real _t0FC8 = 0.e0;
    real _t0FC9 = 0.e0;
    real _t0FCA = 0.1e1;
    vec4 _t0FCB = [_t0FC7, _t0FC8, _t0FC9, _t0FCA];
    tensor[4,4] _t0FCC = [_t0FBC, _t0FC1, _t0FC6, _t0FCB];
    real _t0FCD = 0.e0;
    real _t0FCE = 0.e0;
    real _t0FCF = 0.1e1;
    real _t0FD0 = -0.1e1;
    vec4 _t0FD1 = [_t0FCD, _t0FCE, _t0FCF, _t0FD0];
    real _t0FD2 = 0.e0;
    real _t0FD3 = -0.1e1;
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.e0;
    vec4 _t0FD6 = [_t0FD2, _t0FD3, _t0FD4, _t0FD5];
    real _t0FD7 = 0.1e1;
    real _t0FD8 = -0.1e1;
    real _t0FD9 = 0.e0;
    real _t0FDA = -0.5e0;
    vec4 _t0FDB = [_t0FD7, _t0FD8, _t0FD9, _t0FDA];
    real _t0FDC = 0.e0;
    real _t0FDD = 0.e0;
    real _t0FDE = 0.e0;
    real _t0FDF = 0.1e1;
    vec4 _t0FE0 = [_t0FDC, _t0FDD, _t0FDE, _t0FDF];
    tensor[4,4] _t0FE1 = [_t0FD1, _t0FD6, _t0FDB, _t0FE0];
    tensor[4,4][6] _t0FE2 = {_t0F78, _t0F8D, _t0FA2, _t0FB7, _t0FCC, _t0FE1};
    real _t0FE3 = 0.1e1;
    real _t0FE4 = 0.e0;
    real _t0FE5 = 0.1e1;
    real _t0FE6 = 0.5e0;
    vec4 _t0FE7 = [_t0FE3, _t0FE4, _t0FE5, _t0FE6];
    real _t0FE8 = 0.1e1;
    real _t0FE9 = 0.e0;
    real _t0FEA = 0.e0;
    real _t0FEB = 0.e0;
    vec4 _t0FEC = [_t0FE8, _t0FE9, _t0FEA, _t0FEB];
    real _t0FED = 0.e0;
    real _t0FEE = 0.1e1;
    real _t0FEF = 0.e0;
    real _t0FF0 = 0.e0;
    vec4 _t0FF1 = [_t0FED, _t0FEE, _t0FEF, _t0FF0];
    real _t0FF2 = 0.e0;
    real _t0FF3 = 0.e0;
    real _t0FF4 = 0.e0;
    real _t0FF5 = 0.1e1;
    vec4 _t0FF6 = [_t0FF2, _t0FF3, _t0FF4, _t0FF5];
    tensor[4,4] _t0FF7 = [_t0FE7, _t0FEC, _t0FF1, _t0FF6];
    real _t0FF8 = 0.1e1;
    real _t0FF9 = 0.e0;
    real _t0FFA = 0.1e1;
    real _t0FFB = 0.5e0;
    vec4 _t0FFC = [_t0FF8, _t0FF9, _t0FFA, _t0FFB];
    real _t0FFD = 0.1e1;
    real _t0FFE = 0.e0;
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    vec4 _t1001 = [_t0FFD, _t0FFE, _t0FFF, _t1000];
    real _t1002 = 0.e0;
    real _t1003 = 0.1e1;
    real _t1004 = 0.e0;
    real _t1005 = 0.1e1;
    vec4 _t1006 = [_t1002, _t1003, _t1004, _t1005];
    real _t1007 = 0.e0;
    real _t1008 = 0.e0;
    real _t1009 = 0.e0;
    real _t100A = 0.1e1;
    vec4 _t100B = [_t1007, _t1008, _t1009, _t100A];
    tensor[4,4] _t100C = [_t0FFC, _t1001, _t1006, _t100B];
    real _t100D = 0.1e1;
    real _t100E = 0.e0;
    real _t100F = 0.e0;
    real _t1010 = 0.e0;
    vec4 _t1011 = [_t100D, _t100E, _t100F, _t1010];
    real _t1012 = 0.e0;
    real _t1013 = 0.1e1;
    real _t1014 = 0.e0;
    real _t1015 = 0.e0;
    vec4 _t1016 = [_t1012, _t1013, _t1014, _t1015];
    real _t1017 = 0.e0;
    real _t1018 = 0.e0;
    real _t1019 = 0.1e1;
    real _t101A = 0.e0;
    vec4 _t101B = [_t1017, _t1018, _t1019, _t101A];
    real _t101C = 0.e0;
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.1e1;
    vec4 _t1020 = [_t101C, _t101D, _t101E, _t101F];
    tensor[4,4] _t1021 = [_t1011, _t1016, _t101B, _t1020];
    real _t1022 = 0.e0;
    real _t1023 = -0.1e1;
    real _t1024 = 0.e0;
    real _t1025 = 0.e0;
    vec4 _t1026 = [_t1022, _t1023, _t1024, _t1025];
    real _t1027 = 0.1e1;
    real _t1028 = 0.e0;
    real _t1029 = 0.e0;
    real _t102A = 0.e0;
    vec4 _t102B = [_t1027, _t1028, _t1029, _t102A];
    real _t102C = 0.e0;
    real _t102D = 0.e0;
    real _t102E = 0.1e1;
    real _t102F = 0.e0;
    vec4 _t1030 = [_t102C, _t102D, _t102E, _t102F];
    real _t1031 = 0.e0;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.1e1;
    vec4 _t1035 = [_t1031, _t1032, _t1033, _t1034];
    tensor[4,4] _t1036 = [_t1026, _t102B, _t1030, _t1035];
    real _t1037 = -0.1e1;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    real _t103A = 0.e0;
    vec4 _t103B = [_t1037, _t1038, _t1039, _t103A];
    real _t103C = 0.e0;
    real _t103D = -0.1e1;
    real _t103E = 0.e0;
    real _t103F = 0.e0;
    vec4 _t1040 = [_t103C, _t103D, _t103E, _t103F];
    real _t1041 = 0.e0;
    real _t1042 = 0.e0;
    real _t1043 = 0.1e1;
    real _t1044 = 0.e0;
    vec4 _t1045 = [_t1041, _t1042, _t1043, _t1044];
    real _t1046 = 0.e0;
    real _t1047 = 0.e0;
    real _t1048 = 0.e0;
    real _t1049 = 0.1e1;
    vec4 _t104A = [_t1046, _t1047, _t1048, _t1049];
    tensor[4,4] _t104B = [_t103B, _t1040, _t1045, _t104A];
    real _t104C = 0.e0;
    real _t104D = 0.1e1;
    real _t104E = 0.e0;
    real _t104F = 0.e0;
    vec4 _t1050 = [_t104C, _t104D, _t104E, _t104F];
    real _t1051 = -0.1e1;
    real _t1052 = 0.e0;
    real _t1053 = 0.e0;
    real _t1054 = 0.e0;
    vec4 _t1055 = [_t1051, _t1052, _t1053, _t1054];
    real _t1056 = 0.e0;
    real _t1057 = 0.e0;
    real _t1058 = 0.1e1;
    real _t1059 = 0.e0;
    vec4 _t105A = [_t1056, _t1057, _t1058, _t1059];
    real _t105B = 0.e0;
    real _t105C = 0.e0;
    real _t105D = 0.e0;
    real _t105E = 0.1e1;
    vec4 _t105F = [_t105B, _t105C, _t105D, _t105E];
    tensor[4,4] _t1060 = [_t1050, _t1055, _t105A, _t105F];
    tensor[4,4][6] _t1061 = {_t0FF7, _t100C, _t1021, _t1036, _t104B, _t1060};
    real _t1062 = 0.e0;
    real _t1063 = 0.1e1;
    real _t1064 = 0.1e1;
    real _t1065 = 0.5e0;
    vec4 _t1066 = [_t1062, _t1063, _t1064, _t1065];
    real _t1067 = 0.e0;
    real _t1068 = 0.1e1;
    real _t1069 = 0.e0;
    real _t106A = 0.e0;
    vec4 _t106B = [_t1067, _t1068, _t1069, _t106A];
    real _t106C = -0.1e1;
    real _t106D = 0.e0;
    real _t106E = 0.e0;
    real _t106F = 0.e0;
    vec4 _t1070 = [_t106C, _t106D, _t106E, _t106F];
    real _t1071 = 0.e0;
    real _t1072 = 0.e0;
    real _t1073 = 0.e0;
    real _t1074 = 0.1e1;
    vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
    tensor[4,4] _t1076 = [_t1066, _t106B, _t1070, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.1e1;
    real _t1079 = 0.1e1;
    real _t107A = 0.5e0;
    vec4 _t107B = [_t1077, _t1078, _t1079, _t107A];
    real _t107C = 0.e0;
    real _t107D = 0.1e1;
    real _t107E = 0.e0;
    real _t107F = 0.e0;
    vec4 _t1080 = [_t107C, _t107D, _t107E, _t107F];
    real _t1081 = -0.1e1;
    real _t1082 = 0.e0;
    real _t1083 = 0.e0;
    real _t1084 = 0.1e1;
    vec4 _t1085 = [_t1081, _t1082, _t1083, _t1084];
    real _t1086 = 0.e0;
    real _t1087 = 0.e0;
    real _t1088 = 0.e0;
    real _t1089 = 0.1e1;
    vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
    tensor[4,4] _t108B = [_t107B, _t1080, _t1085, _t108A];
    real _t108C = 0.e0;
    real _t108D = 0.1e1;
    real _t108E = 0.e0;
    real _t108F = 0.e0;
    vec4 _t1090 = [_t108C, _t108D, _t108E, _t108F];
    real _t1091 = -0.1e1;
    real _t1092 = 0.e0;
    real _t1093 = 0.e0;
    real _t1094 = 0.e0;
    vec4 _t1095 = [_t1091, _t1092, _t1093, _t1094];
    real _t1096 = 0.e0;
    real _t1097 = 0.e0;
    real _t1098 = 0.1e1;
    real _t1099 = 0.e0;
    vec4 _t109A = [_t1096, _t1097, _t1098, _t1099];
    real _t109B = 0.e0;
    real _t109C = 0.e0;
    real _t109D = 0.e0;
    real _t109E = 0.1e1;
    vec4 _t109F = [_t109B, _t109C, _t109D, _t109E];
    tensor[4,4] _t10A0 = [_t1090, _t1095, _t109A, _t109F];
    real _t10A1 = 0.1e1;
    real _t10A2 = 0.e0;
    real _t10A3 = 0.e0;
    real _t10A4 = 0.e0;
    vec4 _t10A5 = [_t10A1, _t10A2, _t10A3, _t10A4];
    real _t10A6 = 0.e0;
    real _t10A7 = 0.1e1;
    real _t10A8 = 0.e0;
    real _t10A9 = 0.e0;
    vec4 _t10AA = [_t10A6, _t10A7, _t10A8, _t10A9];
    real _t10AB = 0.e0;
    real _t10AC = 0.e0;
    real _t10AD = 0.1e1;
    real _t10AE = 0.e0;
    vec4 _t10AF = [_t10AB, _t10AC, _t10AD, _t10AE];
    real _t10B0 = 0.e0;
    real _t10B1 = 0.e0;
    real _t10B2 = 0.e0;
    real _t10B3 = 0.1e1;
    vec4 _t10B4 = [_t10B0, _t10B1, _t10B2, _t10B3];
    tensor[4,4] _t10B5 = [_t10A5, _t10AA, _t10AF, _t10B4];
    real _t10B6 = 0.e0;
    real _t10B7 = -0.1e1;
    real _t10B8 = 0.e0;
    real _t10B9 = 0.e0;
    vec4 _t10BA = [_t10B6, _t10B7, _t10B8, _t10B9];
    real _t10BB = 0.1e1;
    real _t10BC = 0.e0;
    real _t10BD = 0.e0;
    real _t10BE = 0.e0;
    vec4 _t10BF = [_t10BB, _t10BC, _t10BD, _t10BE];
    real _t10C0 = 0.e0;
    real _t10C1 = 0.e0;
    real _t10C2 = 0.1e1;
    real _t10C3 = 0.e0;
    vec4 _t10C4 = [_t10C0, _t10C1, _t10C2, _t10C3];
    real _t10C5 = 0.e0;
    real _t10C6 = 0.e0;
    real _t10C7 = 0.e0;
    real _t10C8 = 0.1e1;
    vec4 _t10C9 = [_t10C5, _t10C6, _t10C7, _t10C8];
    tensor[4,4] _t10CA = [_t10BA, _t10BF, _t10C4, _t10C9];
    real _t10CB = -0.1e1;
    real _t10CC = 0.e0;
    real _t10CD = 0.e0;
    real _t10CE = 0.e0;
    vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
    real _t10D0 = 0.e0;
    real _t10D1 = -0.1e1;
    real _t10D2 = 0.e0;
    real _t10D3 = 0.e0;
    vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
    real _t10D5 = 0.e0;
    real _t10D6 = 0.e0;
    real _t10D7 = 0.1e1;
    real _t10D8 = 0.e0;
    vec4 _t10D9 = [_t10D5, _t10D6, _t10D7, _t10D8];
    real _t10DA = 0.e0;
    real _t10DB = 0.e0;
    real _t10DC = 0.e0;
    real _t10DD = 0.1e1;
    vec4 _t10DE = [_t10DA, _t10DB, _t10DC, _t10DD];
    tensor[4,4] _t10DF = [_t10CF, _t10D4, _t10D9, _t10DE];
    tensor[4,4][6] _t10E0 = {_t1076, _t108B, _t10A0, _t10B5, _t10CA, _t10DF};
    real _t10E1 = -0.1e1;
    real _t10E2 = 0.e0;
    real _t10E3 = 0.1e1;
    real _t10E4 = 0.5e0;
    vec4 _t10E5 = [_t10E1, _t10E2, _t10E3, _t10E4];
    real _t10E6 = -0.1e1;
    real _t10E7 = 0.e0;
    real _t10E8 = 0.e0;
    real _t10E9 = 0.e0;
    vec4 _t10EA = [_t10E6, _t10E7, _t10E8, _t10E9];
    real _t10EB = 0.e0;
    real _t10EC = -0.1e1;
    real _t10ED = 0.e0;
    real _t10EE = 0.e0;
    vec4 _t10EF = [_t10EB, _t10EC, _t10ED, _t10EE];
    real _t10F0 = 0.e0;
    real _t10F1 = 0.e0;
    real _t10F2 = 0.e0;
    real _t10F3 = 0.1e1;
    vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
    tensor[4,4] _t10F5 = [_t10E5, _t10EA, _t10EF, _t10F4];
    real _t10F6 = -0.1e1;
    real _t10F7 = 0.e0;
    real _t10F8 = 0.1e1;
    real _t10F9 = 0.5e0;
    vec4 _t10FA = [_t10F6, _t10F7, _t10F8, _t10F9];
    real _t10FB = -0.1e1;
    real _t10FC = 0.e0;
    real _t10FD = 0.e0;
    real _t10FE = 0.e0;
    vec4 _t10FF = [_t10FB, _t10FC, _t10FD, _t10FE];
    real _t1100 = 0.e0;
    real _t1101 = -0.1e1;
    real _t1102 = 0.e0;
    real _t1103 = 0.1e1;
    vec4 _t1104 = [_t1100, _t1101, _t1102, _t1103];
    real _t1105 = 0.e0;
    real _t1106 = 0.e0;
    real _t1107 = 0.e0;
    real _t1108 = 0.1e1;
    vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
    tensor[4,4] _t110A = [_t10FA, _t10FF, _t1104, _t1109];
    real _t110B = -0.1e1;
    real _t110C = 0.e0;
    real _t110D = 0.e0;
    real _t110E = 0.e0;
    vec4 _t110F = [_t110B, _t110C, _t110D, _t110E];
    real _t1110 = 0.e0;
    real _t1111 = -0.1e1;
    real _t1112 = 0.e0;
    real _t1113 = 0.e0;
    vec4 _t1114 = [_t1110, _t1111, _t1112, _t1113];
    real _t1115 = 0.e0;
    real _t1116 = 0.e0;
    real _t1117 = 0.1e1;
    real _t1118 = 0.e0;
    vec4 _t1119 = [_t1115, _t1116, _t1117, _t1118];
    real _t111A = 0.e0;
    real _t111B = 0.e0;
    real _t111C = 0.e0;
    real _t111D = 0.1e1;
    vec4 _t111E = [_t111A, _t111B, _t111C, _t111D];
    tensor[4,4] _t111F = [_t110F, _t1114, _t1119, _t111E];
    real _t1120 = 0.e0;
    real _t1121 = 0.1e1;
    real _t1122 = 0.e0;
    real _t1123 = 0.e0;
    vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
    real _t1125 = -0.1e1;
    real _t1126 = 0.e0;
    real _t1127 = 0.e0;
    real _t1128 = 0.e0;
    vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
    real _t112A = 0.e0;
    real _t112B = 0.e0;
    real _t112C = 0.1e1;
    real _t112D = 0.e0;
    vec4 _t112E = [_t112A, _t112B, _t112C, _t112D];
    real _t112F = 0.e0;
    real _t1130 = 0.e0;
    real _t1131 = 0.e0;
    real _t1132 = 0.1e1;
    vec4 _t1133 = [_t112F, _t1130, _t1131, _t1132];
    tensor[4,4] _t1134 = [_t1124, _t1129, _t112E, _t1133];
    real _t1135 = 0.1e1;
    real _t1136 = 0.e0;
    real _t1137 = 0.e0;
    real _t1138 = 0.e0;
    vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
    real _t113A = 0.e0;
    real _t113B = 0.1e1;
    real _t113C = 0.e0;
    real _t113D = 0.e0;
    vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
    real _t113F = 0.e0;
    real _t1140 = 0.e0;
    real _t1141 = 0.1e1;
    real _t1142 = 0.e0;
    vec4 _t1143 = [_t113F, _t1140, _t1141, _t1142];
    real _t1144 = 0.e0;
    real _t1145 = 0.e0;
    real _t1146 = 0.e0;
    real _t1147 = 0.1e1;
    vec4 _t1148 = [_t1144, _t1145, _t1146, _t1147];
    tensor[4,4] _t1149 = [_t1139, _t113E, _t1143, _t1148];
    real _t114A = 0.e0;
    real _t114B = -0.1e1;
    real _t114C = 0.e0;
    real _t114D = 0.e0;
    vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
    real _t114F = 0.1e1;
    real _t1150 = 0.e0;
    real _t1151 = 0.e0;
    real _t1152 = 0.e0;
    vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
    real _t1154 = 0.e0;
    real _t1155 = 0.e0;
    real _t1156 = 0.1e1;
    real _t1157 = 0.e0;
    vec4 _t1158 = [_t1154, _t1155, _t1156, _t1157];
    real _t1159 = 0.e0;
    real _t115A = 0.e0;
    real _t115B = 0.e0;
    real _t115C = 0.1e1;
    vec4 _t115D = [_t1159, _t115A, _t115B, _t115C];
    tensor[4,4] _t115E = [_t114E, _t1153, _t1158, _t115D];
    tensor[4,4][6] _t115F = {_t10F5, _t110A, _t111F, _t1134, _t1149, _t115E};
    real _t1160 = 0.e0;
    real _t1161 = -0.1e1;
    real _t1162 = 0.1e1;
    real _t1163 = 0.5e0;
    vec4 _t1164 = [_t1160, _t1161, _t1162, _t1163];
    real _t1165 = 0.e0;
    real _t1166 = -0.1e1;
    real _t1167 = 0.e0;
    real _t1168 = 0.e0;
    vec4 _t1169 = [_t1165, _t1166, _t1167, _t1168];
    real _t116A = 0.1e1;
    real _t116B = 0.e0;
    real _t116C = 0.e0;
    real _t116D = 0.e0;
    vec4 _t116E = [_t116A, _t116B, _t116C, _t116D];
    real _t116F = 0.e0;
    real _t1170 = 0.e0;
    real _t1171 = 0.e0;
    real _t1172 = 0.1e1;
    vec4 _t1173 = [_t116F, _t1170, _t1171, _t1172];
    tensor[4,4] _t1174 = [_t1164, _t1169, _t116E, _t1173];
    real _t1175 = 0.e0;
    real _t1176 = -0.1e1;
    real _t1177 = 0.1e1;
    real _t1178 = 0.5e0;
    vec4 _t1179 = [_t1175, _t1176, _t1177, _t1178];
    real _t117A = 0.e0;
    real _t117B = -0.1e1;
    real _t117C = 0.e0;
    real _t117D = 0.e0;
    vec4 _t117E = [_t117A, _t117B, _t117C, _t117D];
    real _t117F = 0.1e1;
    real _t1180 = 0.e0;
    real _t1181 = 0.e0;
    real _t1182 = 0.1e1;
    vec4 _t1183 = [_t117F, _t1180, _t1181, _t1182];
    real _t1184 = 0.e0;
    real _t1185 = 0.e0;
    real _t1186 = 0.e0;
    real _t1187 = 0.1e1;
    vec4 _t1188 = [_t1184, _t1185, _t1186, _t1187];
    tensor[4,4] _t1189 = [_t1179, _t117E, _t1183, _t1188];
    real _t118A = 0.e0;
    real _t118B = -0.1e1;
    real _t118C = 0.e0;
    real _t118D = 0.e0;
    vec4 _t118E = [_t118A, _t118B, _t118C, _t118D];
    real _t118F = 0.1e1;
    real _t1190 = 0.e0;
    real _t1191 = 0.e0;
    real _t1192 = 0.e0;
    vec4 _t1193 = [_t118F, _t1190, _t1191, _t1192];
    real _t1194 = 0.e0;
    real _t1195 = 0.e0;
    real _t1196 = 0.1e1;
    real _t1197 = 0.e0;
    vec4 _t1198 = [_t1194, _t1195, _t1196, _t1197];
    real _t1199 = 0.e0;
    real _t119A = 0.e0;
    real _t119B = 0.e0;
    real _t119C = 0.1e1;
    vec4 _t119D = [_t1199, _t119A, _t119B, _t119C];
    tensor[4,4] _t119E = [_t118E, _t1193, _t1198, _t119D];
    real _t119F = -0.1e1;
    real _t11A0 = 0.e0;
    real _t11A1 = 0.e0;
    real _t11A2 = 0.e0;
    vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
    real _t11A4 = 0.e0;
    real _t11A5 = -0.1e1;
    real _t11A6 = 0.e0;
    real _t11A7 = 0.e0;
    vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
    real _t11A9 = 0.e0;
    real _t11AA = 0.e0;
    real _t11AB = 0.1e1;
    real _t11AC = 0.e0;
    vec4 _t11AD = [_t11A9, _t11AA, _t11AB, _t11AC];
    real _t11AE = 0.e0;
    real _t11AF = 0.e0;
    real _t11B0 = 0.e0;
    real _t11B1 = 0.1e1;
    vec4 _t11B2 = [_t11AE, _t11AF, _t11B0, _t11B1];
    tensor[4,4] _t11B3 = [_t11A3, _t11A8, _t11AD, _t11B2];
    real _t11B4 = 0.e0;
    real _t11B5 = 0.1e1;
    real _t11B6 = 0.e0;
    real _t11B7 = 0.e0;
    vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
    real _t11B9 = -0.1e1;
    real _t11BA = 0.e0;
    real _t11BB = 0.e0;
    real _t11BC = 0.e0;
    vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
    real _t11BE = 0.e0;
    real _t11BF = 0.e0;
    real _t11C0 = 0.1e1;
    real _t11C1 = 0.e0;
    vec4 _t11C2 = [_t11BE, _t11BF, _t11C0, _t11C1];
    real _t11C3 = 0.e0;
    real _t11C4 = 0.e0;
    real _t11C5 = 0.e0;
    real _t11C6 = 0.1e1;
    vec4 _t11C7 = [_t11C3, _t11C4, _t11C5, _t11C6];
    tensor[4,4] _t11C8 = [_t11B8, _t11BD, _t11C2, _t11C7];
    real _t11C9 = 0.1e1;
    real _t11CA = 0.e0;
    real _t11CB = 0.e0;
    real _t11CC = 0.e0;
    vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
    real _t11CE = 0.e0;
    real _t11CF = 0.1e1;
    real _t11D0 = 0.e0;
    real _t11D1 = 0.e0;
    vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
    real _t11D3 = 0.e0;
    real _t11D4 = 0.e0;
    real _t11D5 = 0.1e1;
    real _t11D6 = 0.e0;
    vec4 _t11D7 = [_t11D3, _t11D4, _t11D5, _t11D6];
    real _t11D8 = 0.e0;
    real _t11D9 = 0.e0;
    real _t11DA = 0.e0;
    real _t11DB = 0.1e1;
    vec4 _t11DC = [_t11D8, _t11D9, _t11DA, _t11DB];
    tensor[4,4] _t11DD = [_t11CD, _t11D2, _t11D7, _t11DC];
    tensor[4,4][6] _t11DE = {_t1174, _t1189, _t119E, _t11B3, _t11C8, _t11DD};
    tensor[4,4][6][6] _t11DF = {_t0F63, _t0FE2, _t1061, _t10E0, _t115F, _t11DE};
    real _t11E0 = time059F[1];
    int _t11E1 = prim $r2i01B7 (_t11E0);
    tensor[4,4][6] _t11E2 = prim $sub01C0<tensor[4,4][6]; %6> (_t11DF, _t11E1);
    real _t11E3 = time059F[1];
    int _t11E4 = prim $r2i01B7 (_t11E3);
    int[2] _t11E5 = func nextCell405A3 (_t11E4, cellId059C, mesh059B);
    int _t11E6 = 1;
    int _t11E7 = prim $sub01C0<int; %2> (_t11E5, _t11E6);
    tensor[4,4] _t11E8 = prim $sub01C0<tensor[4,4]; %6> (_t11E2, _t11E7);
    real _t11E9 = time059F[0];
    vec3 _t11EA = prim *0036<$[3]> (_t11E9, dPos059E);
    vec3 _t11EB = prim +0017<$[3]> (_t11EA, refPos059D);
    real _t11EC = _t11EB[0];
    real _t11ED = time059F[0];
    vec3 _t11EE = prim *0036<$[3]> (_t11ED, dPos059E);
    vec3 _t11EF = prim +0017<$[3]> (_t11EE, refPos059D);
    real _t11F0 = _t11EF[1];
    real _t11F1 = time059F[0];
    vec3 _t11F2 = prim *0036<$[3]> (_t11F1, dPos059E);
    vec3 _t11F3 = prim +0017<$[3]> (_t11F2, refPos059D);
    real _t11F4 = _t11F3[2];
    real _t11F5 = 0.1e1;
    vec4 _t11F6 = [_t11EC, _t11F0, _t11F4, _t11F5];
    vec4 _t11F7 = prim •00CE<$[4,4]; $[4]; $[4]> (_t11E8, _t11F6);
    real _t11F8 = _t11F7[2];
    vec3 _t11F9 = [_t0BD0, _t0EE4, _t11F8];
    real _t11FA = time059F[1];
    int _t11FB = prim $r2i01B7 (_t11FA);
    int[2] _t11FC = func nextCell405A3 (_t11FB, cellId059C, mesh059B);
    int _t11FD = 1;
    int _t11FE = prim $sub01C0<int; %2> (_t11FC, _t11FD);
    Femdata: MeshPos _t11FF = extractFemItemN((mesh059B, _t08BC, _t11F9, _t11FE),RefBuild(Mesh),);
    return _t11FF;
  } else {
    real _t1200 = time059F[0];
    vec3 _t1201 = prim *0036<$[3]> (_t1200, dPos059E);
    vec3 _t1202 = prim +0017<$[3]> (_t1201, refPos059D);
    Femdata: MeshPos _t1203 = extractFemItemN((mesh059B, _t1202),InvalidBuildBoundary(MeshPos),);
    return _t1203;
  }
}
function int[2]#8 nextCell405A3 (int faceIdx1204, int cell1205, Femdata: Mesh mesh1206)
{
  int _t1207 = 12;
  int _t1208 = prim *0033 (cell1205, _t1207);
  int _t1209 = 2;
  int _t120A = prim *0033 (faceIdx1204, _t1209);
  int _t120B = prim +0015 (_t1208, _t120A);
  int[2] _t120C = extractFemItemN((mesh1206, _t120B),CellFaceCell(Mesh),);
  return _t120C;
}
function vec2#0 _enter120D (vec3 refPos120E, vec3 dPos120F)
{
  real time1210 = +inf;
  int face1211 = -1;
  real faceTime1212 = -inf;
  real _t1213 = -0.5e0;
  real _t1214 = 0.e0;
  real _t1215 = 0.e0;
  real _t1216 = 0.1e1;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos120E);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = 0.e0;
  real _t121B = 0.e0;
  real _t121C = 0.1e1;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos120F);
  real _t121F = prim /0055 (_t1219, _t121E);
  real _t1220 = -0.1e-15;
  bool _t1221 = prim >=007E (_t121F, _t1220);
  real _t1222 = -0.5e0;
  real _t1223 = 0.e0;
  real _t1224 = 0.e0;
  real _t1225 = 0.1e1;
  vec3 _t1226 = [_t1223, _t1224, _t1225];
  real _t1227 = prim •00CE<$[3]; $[3]; $[]> (_t1226, refPos120E);
  real _t1228 = prim -0026<$[]> (_t1222, _t1227);
  real _t1229 = 0.e0;
  real _t122A = 0.e0;
  real _t122B = 0.1e1;
  vec3 _t122C = [_t1229, _t122A, _t122B];
  real _t122D = prim •00CE<$[3]; $[3]; $[]> (_t122C, dPos120F);
  real _t122E = prim /0055 (_t1228, _t122D);
  bool _t122F = prim >0080 (time1210, _t122E);
  real _t1230 = 0.e0;
  real _t1231 = 0.e0;
  real _t1232 = 0.1e1;
  vec3 _t1233 = [_t1230, _t1231, _t1232];
  real _t1234 = prim •00CE<$[3]; $[3]; $[]> (_t1233, dPos120F);
  real _t1235 = prim |()|00B5<$[]> (_t1234);
  real _t1236 = 0.1e-20;
  bool _t1237 = prim >=007E (_t1235, _t1236);
  bool _t1238 = prim $and01C4 (_t122F, _t1237);
  bool _t1239 = prim $and01C4 (_t1221, _t1238);
  if _t1239 {
    real _t123A = -0.5e0;
    real _t123B = 0.e0;
    real _t123C = 0.e0;
    real _t123D = 0.1e1;
    vec3 _t123E = [_t123B, _t123C, _t123D];
    real _t123F = prim •00CE<$[3]; $[3]; $[]> (_t123E, refPos120E);
    real _t1240 = prim -0026<$[]> (_t123A, _t123F);
    real _t1241 = 0.e0;
    real _t1242 = 0.e0;
    real _t1243 = 0.1e1;
    vec3 _t1244 = [_t1241, _t1242, _t1243];
    real _t1245 = prim •00CE<$[3]; $[3]; $[]> (_t1244, dPos120F);
    real _t1246 = prim /0055 (_t1240, _t1245);
    vec3 _t1247 = prim *0038<$[3]> (dPos120F, _t1246);
    vec3 _t1248 = prim +0017<$[3]> (refPos120E, _t1247);
    real _t1249 = -0.5e0;
    real _t124A = 0.e0;
    real _t124B = 0.e0;
    real _t124C = 0.1e1;
    vec3 _t124D = [_t124A, _t124B, _t124C];
    real _t124E = prim •00CE<$[3]; $[3]; $[]> (_t124D, refPos120E);
    real _t124F = prim -0026<$[]> (_t1249, _t124E);
    real _t1250 = 0.e0;
    real _t1251 = 0.e0;
    real _t1252 = 0.1e1;
    vec3 _t1253 = [_t1250, _t1251, _t1252];
    real _t1254 = prim •00CE<$[3]; $[3]; $[]> (_t1253, dPos120F);
    real _t1255 = prim /0055 (_t124F, _t1254);
    vec3 _t1256 = prim *0038<$[3]> (dPos120F, _t1255);
    vec3 _t1257 = prim +0017<$[3]> (refPos120E, _t1256);
    real _t1258 = 0.1e-8;
    bool _t1259 = extractFemItemN((_t1248, _t1257, _t1258),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1259 {
      real _t125A = -0.5e0;
      real _t125B = 0.e0;
      real _t125C = 0.e0;
      real _t125D = 0.1e1;
      vec3 _t125E = [_t125B, _t125C, _t125D];
      real _t125F = prim •00CE<$[3]; $[3]; $[]> (_t125E, refPos120E);
      real _t1260 = prim -0026<$[]> (_t125A, _t125F);
      real _t1261 = 0.e0;
      real _t1262 = 0.e0;
      real _t1263 = 0.1e1;
      vec3 _t1264 = [_t1261, _t1262, _t1263];
      real _t1265 = prim •00CE<$[3]; $[3]; $[]> (_t1264, dPos120F);
      time1210 = prim /0055 (_t1260, _t1265);
      face1211 = 0;
    }
  }
  real _t1266 = 0.5e0;
  real _t1267 = 0.e0;
  real _t1268 = 0.e0;
  real _t1269 = 0.1e1;
  vec3 _t126A = [_t1267, _t1268, _t1269];
  real _t126B = prim •00CE<$[3]; $[3]; $[]> (_t126A, refPos120E);
  real _t126C = prim -0026<$[]> (_t1266, _t126B);
  real _t126D = 0.e0;
  real _t126E = 0.e0;
  real _t126F = 0.1e1;
  vec3 _t1270 = [_t126D, _t126E, _t126F];
  real _t1271 = prim •00CE<$[3]; $[3]; $[]> (_t1270, dPos120F);
  real _t1272 = prim /0055 (_t126C, _t1271);
  real _t1273 = -0.1e-15;
  bool _t1274 = prim >=007E (_t1272, _t1273);
  real _t1275 = 0.5e0;
  real _t1276 = 0.e0;
  real _t1277 = 0.e0;
  real _t1278 = 0.1e1;
  vec3 _t1279 = [_t1276, _t1277, _t1278];
  real _t127A = prim •00CE<$[3]; $[3]; $[]> (_t1279, refPos120E);
  real _t127B = prim -0026<$[]> (_t1275, _t127A);
  real _t127C = 0.e0;
  real _t127D = 0.e0;
  real _t127E = 0.1e1;
  vec3 _t127F = [_t127C, _t127D, _t127E];
  real _t1280 = prim •00CE<$[3]; $[3]; $[]> (_t127F, dPos120F);
  real _t1281 = prim /0055 (_t127B, _t1280);
  bool _t1282 = prim >0080 (time1210, _t1281);
  real _t1283 = 0.e0;
  real _t1284 = 0.e0;
  real _t1285 = 0.1e1;
  vec3 _t1286 = [_t1283, _t1284, _t1285];
  real _t1287 = prim •00CE<$[3]; $[3]; $[]> (_t1286, dPos120F);
  real _t1288 = prim |()|00B5<$[]> (_t1287);
  real _t1289 = 0.1e-20;
  bool _t128A = prim >=007E (_t1288, _t1289);
  bool _t128B = prim $and01C4 (_t1282, _t128A);
  bool _t128C = prim $and01C4 (_t1274, _t128B);
  if _t128C {
    real _t128D = 0.5e0;
    real _t128E = 0.e0;
    real _t128F = 0.e0;
    real _t1290 = 0.1e1;
    vec3 _t1291 = [_t128E, _t128F, _t1290];
    real _t1292 = prim •00CE<$[3]; $[3]; $[]> (_t1291, refPos120E);
    real _t1293 = prim -0026<$[]> (_t128D, _t1292);
    real _t1294 = 0.e0;
    real _t1295 = 0.e0;
    real _t1296 = 0.1e1;
    vec3 _t1297 = [_t1294, _t1295, _t1296];
    real _t1298 = prim •00CE<$[3]; $[3]; $[]> (_t1297, dPos120F);
    real _t1299 = prim /0055 (_t1293, _t1298);
    vec3 _t129A = prim *0038<$[3]> (dPos120F, _t1299);
    vec3 _t129B = prim +0017<$[3]> (refPos120E, _t129A);
    real _t129C = 0.5e0;
    real _t129D = 0.e0;
    real _t129E = 0.e0;
    real _t129F = 0.1e1;
    vec3 _t12A0 = [_t129D, _t129E, _t129F];
    real _t12A1 = prim •00CE<$[3]; $[3]; $[]> (_t12A0, refPos120E);
    real _t12A2 = prim -0026<$[]> (_t129C, _t12A1);
    real _t12A3 = 0.e0;
    real _t12A4 = 0.e0;
    real _t12A5 = 0.1e1;
    vec3 _t12A6 = [_t12A3, _t12A4, _t12A5];
    real _t12A7 = prim •00CE<$[3]; $[3]; $[]> (_t12A6, dPos120F);
    real _t12A8 = prim /0055 (_t12A2, _t12A7);
    vec3 _t12A9 = prim *0038<$[3]> (dPos120F, _t12A8);
    vec3 _t12AA = prim +0017<$[3]> (refPos120E, _t12A9);
    real _t12AB = 0.1e-8;
    bool _t12AC = extractFemItemN((_t129B, _t12AA, _t12AB),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12AC {
      real _t12AD = 0.5e0;
      real _t12AE = 0.e0;
      real _t12AF = 0.e0;
      real _t12B0 = 0.1e1;
      vec3 _t12B1 = [_t12AE, _t12AF, _t12B0];
      real _t12B2 = prim •00CE<$[3]; $[3]; $[]> (_t12B1, refPos120E);
      real _t12B3 = prim -0026<$[]> (_t12AD, _t12B2);
      real _t12B4 = 0.e0;
      real _t12B5 = 0.e0;
      real _t12B6 = 0.1e1;
      vec3 _t12B7 = [_t12B4, _t12B5, _t12B6];
      real _t12B8 = prim •00CE<$[3]; $[3]; $[]> (_t12B7, dPos120F);
      time1210 = prim /0055 (_t12B3, _t12B8);
      face1211 = 1;
    }
  }
  real _t12B9 = -0.5e0;
  real _t12BA = 0.e0;
  real _t12BB = 0.1e1;
  real _t12BC = 0.e0;
  vec3 _t12BD = [_t12BA, _t12BB, _t12BC];
  real _t12BE = prim •00CE<$[3]; $[3]; $[]> (_t12BD, refPos120E);
  real _t12BF = prim -0026<$[]> (_t12B9, _t12BE);
  real _t12C0 = 0.e0;
  real _t12C1 = 0.1e1;
  real _t12C2 = 0.e0;
  vec3 _t12C3 = [_t12C0, _t12C1, _t12C2];
  real _t12C4 = prim •00CE<$[3]; $[3]; $[]> (_t12C3, dPos120F);
  real _t12C5 = prim /0055 (_t12BF, _t12C4);
  real _t12C6 = -0.1e-15;
  bool _t12C7 = prim >=007E (_t12C5, _t12C6);
  real _t12C8 = -0.5e0;
  real _t12C9 = 0.e0;
  real _t12CA = 0.1e1;
  real _t12CB = 0.e0;
  vec3 _t12CC = [_t12C9, _t12CA, _t12CB];
  real _t12CD = prim •00CE<$[3]; $[3]; $[]> (_t12CC, refPos120E);
  real _t12CE = prim -0026<$[]> (_t12C8, _t12CD);
  real _t12CF = 0.e0;
  real _t12D0 = 0.1e1;
  real _t12D1 = 0.e0;
  vec3 _t12D2 = [_t12CF, _t12D0, _t12D1];
  real _t12D3 = prim •00CE<$[3]; $[3]; $[]> (_t12D2, dPos120F);
  real _t12D4 = prim /0055 (_t12CE, _t12D3);
  bool _t12D5 = prim >0080 (time1210, _t12D4);
  real _t12D6 = 0.e0;
  real _t12D7 = 0.1e1;
  real _t12D8 = 0.e0;
  vec3 _t12D9 = [_t12D6, _t12D7, _t12D8];
  real _t12DA = prim •00CE<$[3]; $[3]; $[]> (_t12D9, dPos120F);
  real _t12DB = prim |()|00B5<$[]> (_t12DA);
  real _t12DC = 0.1e-20;
  bool _t12DD = prim >=007E (_t12DB, _t12DC);
  bool _t12DE = prim $and01C4 (_t12D5, _t12DD);
  bool _t12DF = prim $and01C4 (_t12C7, _t12DE);
  if _t12DF {
    real _t12E0 = -0.5e0;
    real _t12E1 = 0.e0;
    real _t12E2 = 0.1e1;
    real _t12E3 = 0.e0;
    vec3 _t12E4 = [_t12E1, _t12E2, _t12E3];
    real _t12E5 = prim •00CE<$[3]; $[3]; $[]> (_t12E4, refPos120E);
    real _t12E6 = prim -0026<$[]> (_t12E0, _t12E5);
    real _t12E7 = 0.e0;
    real _t12E8 = 0.1e1;
    real _t12E9 = 0.e0;
    vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
    real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, dPos120F);
    real _t12EC = prim /0055 (_t12E6, _t12EB);
    vec3 _t12ED = prim *0038<$[3]> (dPos120F, _t12EC);
    vec3 _t12EE = prim +0017<$[3]> (refPos120E, _t12ED);
    real _t12EF = -0.5e0;
    real _t12F0 = 0.e0;
    real _t12F1 = 0.1e1;
    real _t12F2 = 0.e0;
    vec3 _t12F3 = [_t12F0, _t12F1, _t12F2];
    real _t12F4 = prim •00CE<$[3]; $[3]; $[]> (_t12F3, refPos120E);
    real _t12F5 = prim -0026<$[]> (_t12EF, _t12F4);
    real _t12F6 = 0.e0;
    real _t12F7 = 0.1e1;
    real _t12F8 = 0.e0;
    vec3 _t12F9 = [_t12F6, _t12F7, _t12F8];
    real _t12FA = prim •00CE<$[3]; $[3]; $[]> (_t12F9, dPos120F);
    real _t12FB = prim /0055 (_t12F5, _t12FA);
    vec3 _t12FC = prim *0038<$[3]> (dPos120F, _t12FB);
    vec3 _t12FD = prim +0017<$[3]> (refPos120E, _t12FC);
    real _t12FE = 0.1e-8;
    bool _t12FF = extractFemItemN((_t12EE, _t12FD, _t12FE),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12FF {
      real _t1300 = -0.5e0;
      real _t1301 = 0.e0;
      real _t1302 = 0.1e1;
      real _t1303 = 0.e0;
      vec3 _t1304 = [_t1301, _t1302, _t1303];
      real _t1305 = prim •00CE<$[3]; $[3]; $[]> (_t1304, refPos120E);
      real _t1306 = prim -0026<$[]> (_t1300, _t1305);
      real _t1307 = 0.e0;
      real _t1308 = 0.1e1;
      real _t1309 = 0.e0;
      vec3 _t130A = [_t1307, _t1308, _t1309];
      real _t130B = prim •00CE<$[3]; $[3]; $[]> (_t130A, dPos120F);
      time1210 = prim /0055 (_t1306, _t130B);
      face1211 = 2;
    }
  }
  real _t130C = -0.5e0;
  real _t130D = -0.1e1;
  real _t130E = 0.e0;
  real _t130F = 0.e0;
  vec3 _t1310 = [_t130D, _t130E, _t130F];
  real _t1311 = prim •00CE<$[3]; $[3]; $[]> (_t1310, refPos120E);
  real _t1312 = prim -0026<$[]> (_t130C, _t1311);
  real _t1313 = -0.1e1;
  real _t1314 = 0.e0;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, dPos120F);
  real _t1318 = prim /0055 (_t1312, _t1317);
  real _t1319 = -0.1e-15;
  bool _t131A = prim >=007E (_t1318, _t1319);
  real _t131B = -0.5e0;
  real _t131C = -0.1e1;
  real _t131D = 0.e0;
  real _t131E = 0.e0;
  vec3 _t131F = [_t131C, _t131D, _t131E];
  real _t1320 = prim •00CE<$[3]; $[3]; $[]> (_t131F, refPos120E);
  real _t1321 = prim -0026<$[]> (_t131B, _t1320);
  real _t1322 = -0.1e1;
  real _t1323 = 0.e0;
  real _t1324 = 0.e0;
  vec3 _t1325 = [_t1322, _t1323, _t1324];
  real _t1326 = prim •00CE<$[3]; $[3]; $[]> (_t1325, dPos120F);
  real _t1327 = prim /0055 (_t1321, _t1326);
  bool _t1328 = prim >0080 (time1210, _t1327);
  real _t1329 = -0.1e1;
  real _t132A = 0.e0;
  real _t132B = 0.e0;
  vec3 _t132C = [_t1329, _t132A, _t132B];
  real _t132D = prim •00CE<$[3]; $[3]; $[]> (_t132C, dPos120F);
  real _t132E = prim |()|00B5<$[]> (_t132D);
  real _t132F = 0.1e-20;
  bool _t1330 = prim >=007E (_t132E, _t132F);
  bool _t1331 = prim $and01C4 (_t1328, _t1330);
  bool _t1332 = prim $and01C4 (_t131A, _t1331);
  if _t1332 {
    real _t1333 = -0.5e0;
    real _t1334 = -0.1e1;
    real _t1335 = 0.e0;
    real _t1336 = 0.e0;
    vec3 _t1337 = [_t1334, _t1335, _t1336];
    real _t1338 = prim •00CE<$[3]; $[3]; $[]> (_t1337, refPos120E);
    real _t1339 = prim -0026<$[]> (_t1333, _t1338);
    real _t133A = -0.1e1;
    real _t133B = 0.e0;
    real _t133C = 0.e0;
    vec3 _t133D = [_t133A, _t133B, _t133C];
    real _t133E = prim •00CE<$[3]; $[3]; $[]> (_t133D, dPos120F);
    real _t133F = prim /0055 (_t1339, _t133E);
    vec3 _t1340 = prim *0038<$[3]> (dPos120F, _t133F);
    vec3 _t1341 = prim +0017<$[3]> (refPos120E, _t1340);
    real _t1342 = -0.5e0;
    real _t1343 = -0.1e1;
    real _t1344 = 0.e0;
    real _t1345 = 0.e0;
    vec3 _t1346 = [_t1343, _t1344, _t1345];
    real _t1347 = prim •00CE<$[3]; $[3]; $[]> (_t1346, refPos120E);
    real _t1348 = prim -0026<$[]> (_t1342, _t1347);
    real _t1349 = -0.1e1;
    real _t134A = 0.e0;
    real _t134B = 0.e0;
    vec3 _t134C = [_t1349, _t134A, _t134B];
    real _t134D = prim •00CE<$[3]; $[3]; $[]> (_t134C, dPos120F);
    real _t134E = prim /0055 (_t1348, _t134D);
    vec3 _t134F = prim *0038<$[3]> (dPos120F, _t134E);
    vec3 _t1350 = prim +0017<$[3]> (refPos120E, _t134F);
    real _t1351 = 0.1e-8;
    bool _t1352 = extractFemItemN((_t1341, _t1350, _t1351),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1352 {
      real _t1353 = -0.5e0;
      real _t1354 = -0.1e1;
      real _t1355 = 0.e0;
      real _t1356 = 0.e0;
      vec3 _t1357 = [_t1354, _t1355, _t1356];
      real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos120E);
      real _t1359 = prim -0026<$[]> (_t1353, _t1358);
      real _t135A = -0.1e1;
      real _t135B = 0.e0;
      real _t135C = 0.e0;
      vec3 _t135D = [_t135A, _t135B, _t135C];
      real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos120F);
      time1210 = prim /0055 (_t1359, _t135E);
      face1211 = 3;
    }
  }
  real _t135F = -0.5e0;
  real _t1360 = 0.e0;
  real _t1361 = -0.1e1;
  real _t1362 = 0.e0;
  vec3 _t1363 = [_t1360, _t1361, _t1362];
  real _t1364 = prim •00CE<$[3]; $[3]; $[]> (_t1363, refPos120E);
  real _t1365 = prim -0026<$[]> (_t135F, _t1364);
  real _t1366 = 0.e0;
  real _t1367 = -0.1e1;
  real _t1368 = 0.e0;
  vec3 _t1369 = [_t1366, _t1367, _t1368];
  real _t136A = prim •00CE<$[3]; $[3]; $[]> (_t1369, dPos120F);
  real _t136B = prim /0055 (_t1365, _t136A);
  real _t136C = -0.1e-15;
  bool _t136D = prim >=007E (_t136B, _t136C);
  real _t136E = -0.5e0;
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, refPos120E);
  real _t1374 = prim -0026<$[]> (_t136E, _t1373);
  real _t1375 = 0.e0;
  real _t1376 = -0.1e1;
  real _t1377 = 0.e0;
  vec3 _t1378 = [_t1375, _t1376, _t1377];
  real _t1379 = prim •00CE<$[3]; $[3]; $[]> (_t1378, dPos120F);
  real _t137A = prim /0055 (_t1374, _t1379);
  bool _t137B = prim >0080 (time1210, _t137A);
  real _t137C = 0.e0;
  real _t137D = -0.1e1;
  real _t137E = 0.e0;
  vec3 _t137F = [_t137C, _t137D, _t137E];
  real _t1380 = prim •00CE<$[3]; $[3]; $[]> (_t137F, dPos120F);
  real _t1381 = prim |()|00B5<$[]> (_t1380);
  real _t1382 = 0.1e-20;
  bool _t1383 = prim >=007E (_t1381, _t1382);
  bool _t1384 = prim $and01C4 (_t137B, _t1383);
  bool _t1385 = prim $and01C4 (_t136D, _t1384);
  if _t1385 {
    real _t1386 = -0.5e0;
    real _t1387 = 0.e0;
    real _t1388 = -0.1e1;
    real _t1389 = 0.e0;
    vec3 _t138A = [_t1387, _t1388, _t1389];
    real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, refPos120E);
    real _t138C = prim -0026<$[]> (_t1386, _t138B);
    real _t138D = 0.e0;
    real _t138E = -0.1e1;
    real _t138F = 0.e0;
    vec3 _t1390 = [_t138D, _t138E, _t138F];
    real _t1391 = prim •00CE<$[3]; $[3]; $[]> (_t1390, dPos120F);
    real _t1392 = prim /0055 (_t138C, _t1391);
    vec3 _t1393 = prim *0038<$[3]> (dPos120F, _t1392);
    vec3 _t1394 = prim +0017<$[3]> (refPos120E, _t1393);
    real _t1395 = -0.5e0;
    real _t1396 = 0.e0;
    real _t1397 = -0.1e1;
    real _t1398 = 0.e0;
    vec3 _t1399 = [_t1396, _t1397, _t1398];
    real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, refPos120E);
    real _t139B = prim -0026<$[]> (_t1395, _t139A);
    real _t139C = 0.e0;
    real _t139D = -0.1e1;
    real _t139E = 0.e0;
    vec3 _t139F = [_t139C, _t139D, _t139E];
    real _t13A0 = prim •00CE<$[3]; $[3]; $[]> (_t139F, dPos120F);
    real _t13A1 = prim /0055 (_t139B, _t13A0);
    vec3 _t13A2 = prim *0038<$[3]> (dPos120F, _t13A1);
    vec3 _t13A3 = prim +0017<$[3]> (refPos120E, _t13A2);
    real _t13A4 = 0.1e-8;
    bool _t13A5 = extractFemItemN((_t1394, _t13A3, _t13A4),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13A5 {
      real _t13A6 = -0.5e0;
      real _t13A7 = 0.e0;
      real _t13A8 = -0.1e1;
      real _t13A9 = 0.e0;
      vec3 _t13AA = [_t13A7, _t13A8, _t13A9];
      real _t13AB = prim •00CE<$[3]; $[3]; $[]> (_t13AA, refPos120E);
      real _t13AC = prim -0026<$[]> (_t13A6, _t13AB);
      real _t13AD = 0.e0;
      real _t13AE = -0.1e1;
      real _t13AF = 0.e0;
      vec3 _t13B0 = [_t13AD, _t13AE, _t13AF];
      real _t13B1 = prim •00CE<$[3]; $[3]; $[]> (_t13B0, dPos120F);
      time1210 = prim /0055 (_t13AC, _t13B1);
      face1211 = 4;
    }
  }
  real _t13B2 = -0.5e0;
  real _t13B3 = 0.1e1;
  real _t13B4 = 0.e0;
  real _t13B5 = -0.e0;
  vec3 _t13B6 = [_t13B3, _t13B4, _t13B5];
  real _t13B7 = prim •00CE<$[3]; $[3]; $[]> (_t13B6, refPos120E);
  real _t13B8 = prim -0026<$[]> (_t13B2, _t13B7);
  real _t13B9 = 0.1e1;
  real _t13BA = 0.e0;
  real _t13BB = -0.e0;
  vec3 _t13BC = [_t13B9, _t13BA, _t13BB];
  real _t13BD = prim •00CE<$[3]; $[3]; $[]> (_t13BC, dPos120F);
  real _t13BE = prim /0055 (_t13B8, _t13BD);
  real _t13BF = -0.1e-15;
  bool _t13C0 = prim >=007E (_t13BE, _t13BF);
  real _t13C1 = -0.5e0;
  real _t13C2 = 0.1e1;
  real _t13C3 = 0.e0;
  real _t13C4 = -0.e0;
  vec3 _t13C5 = [_t13C2, _t13C3, _t13C4];
  real _t13C6 = prim •00CE<$[3]; $[3]; $[]> (_t13C5, refPos120E);
  real _t13C7 = prim -0026<$[]> (_t13C1, _t13C6);
  real _t13C8 = 0.1e1;
  real _t13C9 = 0.e0;
  real _t13CA = -0.e0;
  vec3 _t13CB = [_t13C8, _t13C9, _t13CA];
  real _t13CC = prim •00CE<$[3]; $[3]; $[]> (_t13CB, dPos120F);
  real _t13CD = prim /0055 (_t13C7, _t13CC);
  bool _t13CE = prim >0080 (time1210, _t13CD);
  real _t13CF = 0.1e1;
  real _t13D0 = 0.e0;
  real _t13D1 = -0.e0;
  vec3 _t13D2 = [_t13CF, _t13D0, _t13D1];
  real _t13D3 = prim •00CE<$[3]; $[3]; $[]> (_t13D2, dPos120F);
  real _t13D4 = prim |()|00B5<$[]> (_t13D3);
  real _t13D5 = 0.1e-20;
  bool _t13D6 = prim >=007E (_t13D4, _t13D5);
  bool _t13D7 = prim $and01C4 (_t13CE, _t13D6);
  bool _t13D8 = prim $and01C4 (_t13C0, _t13D7);
  if _t13D8 {
    real _t13D9 = -0.5e0;
    real _t13DA = 0.1e1;
    real _t13DB = 0.e0;
    real _t13DC = -0.e0;
    vec3 _t13DD = [_t13DA, _t13DB, _t13DC];
    real _t13DE = prim •00CE<$[3]; $[3]; $[]> (_t13DD, refPos120E);
    real _t13DF = prim -0026<$[]> (_t13D9, _t13DE);
    real _t13E0 = 0.1e1;
    real _t13E1 = 0.e0;
    real _t13E2 = -0.e0;
    vec3 _t13E3 = [_t13E0, _t13E1, _t13E2];
    real _t13E4 = prim •00CE<$[3]; $[3]; $[]> (_t13E3, dPos120F);
    real _t13E5 = prim /0055 (_t13DF, _t13E4);
    vec3 _t13E6 = prim *0038<$[3]> (dPos120F, _t13E5);
    vec3 _t13E7 = prim +0017<$[3]> (refPos120E, _t13E6);
    real _t13E8 = -0.5e0;
    real _t13E9 = 0.1e1;
    real _t13EA = 0.e0;
    real _t13EB = -0.e0;
    vec3 _t13EC = [_t13E9, _t13EA, _t13EB];
    real _t13ED = prim •00CE<$[3]; $[3]; $[]> (_t13EC, refPos120E);
    real _t13EE = prim -0026<$[]> (_t13E8, _t13ED);
    real _t13EF = 0.1e1;
    real _t13F0 = 0.e0;
    real _t13F1 = -0.e0;
    vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
    real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos120F);
    real _t13F4 = prim /0055 (_t13EE, _t13F3);
    vec3 _t13F5 = prim *0038<$[3]> (dPos120F, _t13F4);
    vec3 _t13F6 = prim +0017<$[3]> (refPos120E, _t13F5);
    real _t13F7 = 0.1e-8;
    bool _t13F8 = extractFemItemN((_t13E7, _t13F6, _t13F7),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13F8 {
      real _t13F9 = -0.5e0;
      real _t13FA = 0.1e1;
      real _t13FB = 0.e0;
      real _t13FC = -0.e0;
      vec3 _t13FD = [_t13FA, _t13FB, _t13FC];
      real _t13FE = prim •00CE<$[3]; $[3]; $[]> (_t13FD, refPos120E);
      real _t13FF = prim -0026<$[]> (_t13F9, _t13FE);
      real _t1400 = 0.1e1;
      real _t1401 = 0.e0;
      real _t1402 = -0.e0;
      vec3 _t1403 = [_t1400, _t1401, _t1402];
      real _t1404 = prim •00CE<$[3]; $[3]; $[]> (_t1403, dPos120F);
      time1210 = prim /0055 (_t13FF, _t1404);
      face1211 = 5;
    }
  }
  int _t1405 = -1;
  bool _t1406 = prim !=0086 (face1211, _t1405);
  if _t1406 {
    real _t1407 = 0.e0;
    real _t1408 = prim max0125 (time1210, _t1407);
    real _t1409 = (real)face1211;
    vec2 _t140A = [_t1408, _t1409];
    return _t140A;
  } else {
    real _t140B = -0.1e1;
    real _t140C = -0.1e1;
    vec2 _t140D = [_t140B, _t140C];
    return _t140D;
  }
}
function vec2#0 _exit140E (vec3 refPos120E, vec3 dPos120F, int i140F)
{
  real time1410 = +inf;
  int face1411 = -1;
  real faceTime1412 = -inf;
  real _t1413 = -0.5e0;
  real _t1414 = 0.e0;
  real _t1415 = 0.e0;
  real _t1416 = 0.1e1;
  vec3 _t1417 = [_t1414, _t1415, _t1416];
  real _t1418 = prim •00CE<$[3]; $[3]; $[]> (_t1417, refPos120E);
  real _t1419 = prim -0026<$[]> (_t1413, _t1418);
  real _t141A = 0.e0;
  real _t141B = 0.e0;
  real _t141C = 0.1e1;
  vec3 _t141D = [_t141A, _t141B, _t141C];
  real _t141E = prim •00CE<$[3]; $[3]; $[]> (_t141D, dPos120F);
  real _t141F = prim /0055 (_t1419, _t141E);
  real _t1420 = -0.1e-15;
  bool _t1421 = prim >=007E (_t141F, _t1420);
  real _t1422 = -0.5e0;
  real _t1423 = 0.e0;
  real _t1424 = 0.e0;
  real _t1425 = 0.1e1;
  vec3 _t1426 = [_t1423, _t1424, _t1425];
  real _t1427 = prim •00CE<$[3]; $[3]; $[]> (_t1426, refPos120E);
  real _t1428 = prim -0026<$[]> (_t1422, _t1427);
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = 0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, dPos120F);
  real _t142E = prim /0055 (_t1428, _t142D);
  bool _t142F = prim >0080 (time1410, _t142E);
  real _t1430 = 0.e0;
  real _t1431 = 0.e0;
  real _t1432 = 0.1e1;
  vec3 _t1433 = [_t1430, _t1431, _t1432];
  real _t1434 = prim •00CE<$[3]; $[3]; $[]> (_t1433, dPos120F);
  real _t1435 = prim |()|00B5<$[]> (_t1434);
  real _t1436 = 0.1e-20;
  bool _t1437 = prim >=007E (_t1435, _t1436);
  bool _t1438 = prim $and01C4 (_t142F, _t1437);
  bool _t1439 = prim $and01C4 (_t1421, _t1438);
  if _t1439 {
    int _t143A = 0;
    bool _t143B = prim !=0086 (i140F, _t143A);
    if _t143B {
      real _t143C = -0.5e0;
      real _t143D = 0.e0;
      real _t143E = 0.e0;
      real _t143F = 0.1e1;
      vec3 _t1440 = [_t143D, _t143E, _t143F];
      real _t1441 = prim •00CE<$[3]; $[3]; $[]> (_t1440, refPos120E);
      real _t1442 = prim -0026<$[]> (_t143C, _t1441);
      real _t1443 = 0.e0;
      real _t1444 = 0.e0;
      real _t1445 = 0.1e1;
      vec3 _t1446 = [_t1443, _t1444, _t1445];
      real _t1447 = prim •00CE<$[3]; $[3]; $[]> (_t1446, dPos120F);
      time1410 = prim /0055 (_t1442, _t1447);
      face1411 = 0;
    } else {
      real _t1448 = -0.5e0;
      real _t1449 = 0.e0;
      real _t144A = 0.e0;
      real _t144B = 0.1e1;
      vec3 _t144C = [_t1449, _t144A, _t144B];
      real _t144D = prim •00CE<$[3]; $[3]; $[]> (_t144C, refPos120E);
      real _t144E = prim -0026<$[]> (_t1448, _t144D);
      real _t144F = 0.e0;
      real _t1450 = 0.e0;
      real _t1451 = 0.1e1;
      vec3 _t1452 = [_t144F, _t1450, _t1451];
      real _t1453 = prim •00CE<$[3]; $[3]; $[]> (_t1452, dPos120F);
      faceTime1412 = prim /0055 (_t144E, _t1453);
    }
  }
  real _t1454 = 0.5e0;
  real _t1455 = 0.e0;
  real _t1456 = 0.e0;
  real _t1457 = 0.1e1;
  vec3 _t1458 = [_t1455, _t1456, _t1457];
  real _t1459 = prim •00CE<$[3]; $[3]; $[]> (_t1458, refPos120E);
  real _t145A = prim -0026<$[]> (_t1454, _t1459);
  real _t145B = 0.e0;
  real _t145C = 0.e0;
  real _t145D = 0.1e1;
  vec3 _t145E = [_t145B, _t145C, _t145D];
  real _t145F = prim •00CE<$[3]; $[3]; $[]> (_t145E, dPos120F);
  real _t1460 = prim /0055 (_t145A, _t145F);
  real _t1461 = -0.1e-15;
  bool _t1462 = prim >=007E (_t1460, _t1461);
  real _t1463 = 0.5e0;
  real _t1464 = 0.e0;
  real _t1465 = 0.e0;
  real _t1466 = 0.1e1;
  vec3 _t1467 = [_t1464, _t1465, _t1466];
  real _t1468 = prim •00CE<$[3]; $[3]; $[]> (_t1467, refPos120E);
  real _t1469 = prim -0026<$[]> (_t1463, _t1468);
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = 0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, dPos120F);
  real _t146F = prim /0055 (_t1469, _t146E);
  bool _t1470 = prim >0080 (time1410, _t146F);
  real _t1471 = 0.e0;
  real _t1472 = 0.e0;
  real _t1473 = 0.1e1;
  vec3 _t1474 = [_t1471, _t1472, _t1473];
  real _t1475 = prim •00CE<$[3]; $[3]; $[]> (_t1474, dPos120F);
  real _t1476 = prim |()|00B5<$[]> (_t1475);
  real _t1477 = 0.1e-20;
  bool _t1478 = prim >=007E (_t1476, _t1477);
  bool _t1479 = prim $and01C4 (_t1470, _t1478);
  bool _t147A = prim $and01C4 (_t1462, _t1479);
  if _t147A {
    int _t147B = 1;
    bool _t147C = prim !=0086 (i140F, _t147B);
    if _t147C {
      real _t147D = 0.5e0;
      real _t147E = 0.e0;
      real _t147F = 0.e0;
      real _t1480 = 0.1e1;
      vec3 _t1481 = [_t147E, _t147F, _t1480];
      real _t1482 = prim •00CE<$[3]; $[3]; $[]> (_t1481, refPos120E);
      real _t1483 = prim -0026<$[]> (_t147D, _t1482);
      real _t1484 = 0.e0;
      real _t1485 = 0.e0;
      real _t1486 = 0.1e1;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, dPos120F);
      time1410 = prim /0055 (_t1483, _t1488);
      face1411 = 1;
    } else {
      real _t1489 = 0.5e0;
      real _t148A = 0.e0;
      real _t148B = 0.e0;
      real _t148C = 0.1e1;
      vec3 _t148D = [_t148A, _t148B, _t148C];
      real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, refPos120E);
      real _t148F = prim -0026<$[]> (_t1489, _t148E);
      real _t1490 = 0.e0;
      real _t1491 = 0.e0;
      real _t1492 = 0.1e1;
      vec3 _t1493 = [_t1490, _t1491, _t1492];
      real _t1494 = prim •00CE<$[3]; $[3]; $[]> (_t1493, dPos120F);
      faceTime1412 = prim /0055 (_t148F, _t1494);
    }
  }
  real _t1495 = -0.5e0;
  real _t1496 = 0.e0;
  real _t1497 = 0.1e1;
  real _t1498 = 0.e0;
  vec3 _t1499 = [_t1496, _t1497, _t1498];
  real _t149A = prim •00CE<$[3]; $[3]; $[]> (_t1499, refPos120E);
  real _t149B = prim -0026<$[]> (_t1495, _t149A);
  real _t149C = 0.e0;
  real _t149D = 0.1e1;
  real _t149E = 0.e0;
  vec3 _t149F = [_t149C, _t149D, _t149E];
  real _t14A0 = prim •00CE<$[3]; $[3]; $[]> (_t149F, dPos120F);
  real _t14A1 = prim /0055 (_t149B, _t14A0);
  real _t14A2 = -0.1e-15;
  bool _t14A3 = prim >=007E (_t14A1, _t14A2);
  real _t14A4 = -0.5e0;
  real _t14A5 = 0.e0;
  real _t14A6 = 0.1e1;
  real _t14A7 = 0.e0;
  vec3 _t14A8 = [_t14A5, _t14A6, _t14A7];
  real _t14A9 = prim •00CE<$[3]; $[3]; $[]> (_t14A8, refPos120E);
  real _t14AA = prim -0026<$[]> (_t14A4, _t14A9);
  real _t14AB = 0.e0;
  real _t14AC = 0.1e1;
  real _t14AD = 0.e0;
  vec3 _t14AE = [_t14AB, _t14AC, _t14AD];
  real _t14AF = prim •00CE<$[3]; $[3]; $[]> (_t14AE, dPos120F);
  real _t14B0 = prim /0055 (_t14AA, _t14AF);
  bool _t14B1 = prim >0080 (time1410, _t14B0);
  real _t14B2 = 0.e0;
  real _t14B3 = 0.1e1;
  real _t14B4 = 0.e0;
  vec3 _t14B5 = [_t14B2, _t14B3, _t14B4];
  real _t14B6 = prim •00CE<$[3]; $[3]; $[]> (_t14B5, dPos120F);
  real _t14B7 = prim |()|00B5<$[]> (_t14B6);
  real _t14B8 = 0.1e-20;
  bool _t14B9 = prim >=007E (_t14B7, _t14B8);
  bool _t14BA = prim $and01C4 (_t14B1, _t14B9);
  bool _t14BB = prim $and01C4 (_t14A3, _t14BA);
  if _t14BB {
    int _t14BC = 2;
    bool _t14BD = prim !=0086 (i140F, _t14BC);
    if _t14BD {
      real _t14BE = -0.5e0;
      real _t14BF = 0.e0;
      real _t14C0 = 0.1e1;
      real _t14C1 = 0.e0;
      vec3 _t14C2 = [_t14BF, _t14C0, _t14C1];
      real _t14C3 = prim •00CE<$[3]; $[3]; $[]> (_t14C2, refPos120E);
      real _t14C4 = prim -0026<$[]> (_t14BE, _t14C3);
      real _t14C5 = 0.e0;
      real _t14C6 = 0.1e1;
      real _t14C7 = 0.e0;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, dPos120F);
      time1410 = prim /0055 (_t14C4, _t14C9);
      face1411 = 2;
    } else {
      real _t14CA = -0.5e0;
      real _t14CB = 0.e0;
      real _t14CC = 0.1e1;
      real _t14CD = 0.e0;
      vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
      real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, refPos120E);
      real _t14D0 = prim -0026<$[]> (_t14CA, _t14CF);
      real _t14D1 = 0.e0;
      real _t14D2 = 0.1e1;
      real _t14D3 = 0.e0;
      vec3 _t14D4 = [_t14D1, _t14D2, _t14D3];
      real _t14D5 = prim •00CE<$[3]; $[3]; $[]> (_t14D4, dPos120F);
      faceTime1412 = prim /0055 (_t14D0, _t14D5);
    }
  }
  real _t14D6 = -0.5e0;
  real _t14D7 = -0.1e1;
  real _t14D8 = 0.e0;
  real _t14D9 = 0.e0;
  vec3 _t14DA = [_t14D7, _t14D8, _t14D9];
  real _t14DB = prim •00CE<$[3]; $[3]; $[]> (_t14DA, refPos120E);
  real _t14DC = prim -0026<$[]> (_t14D6, _t14DB);
  real _t14DD = -0.1e1;
  real _t14DE = 0.e0;
  real _t14DF = 0.e0;
  vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
  real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, dPos120F);
  real _t14E2 = prim /0055 (_t14DC, _t14E1);
  real _t14E3 = -0.1e-15;
  bool _t14E4 = prim >=007E (_t14E2, _t14E3);
  real _t14E5 = -0.5e0;
  real _t14E6 = -0.1e1;
  real _t14E7 = 0.e0;
  real _t14E8 = 0.e0;
  vec3 _t14E9 = [_t14E6, _t14E7, _t14E8];
  real _t14EA = prim •00CE<$[3]; $[3]; $[]> (_t14E9, refPos120E);
  real _t14EB = prim -0026<$[]> (_t14E5, _t14EA);
  real _t14EC = -0.1e1;
  real _t14ED = 0.e0;
  real _t14EE = 0.e0;
  vec3 _t14EF = [_t14EC, _t14ED, _t14EE];
  real _t14F0 = prim •00CE<$[3]; $[3]; $[]> (_t14EF, dPos120F);
  real _t14F1 = prim /0055 (_t14EB, _t14F0);
  bool _t14F2 = prim >0080 (time1410, _t14F1);
  real _t14F3 = -0.1e1;
  real _t14F4 = 0.e0;
  real _t14F5 = 0.e0;
  vec3 _t14F6 = [_t14F3, _t14F4, _t14F5];
  real _t14F7 = prim •00CE<$[3]; $[3]; $[]> (_t14F6, dPos120F);
  real _t14F8 = prim |()|00B5<$[]> (_t14F7);
  real _t14F9 = 0.1e-20;
  bool _t14FA = prim >=007E (_t14F8, _t14F9);
  bool _t14FB = prim $and01C4 (_t14F2, _t14FA);
  bool _t14FC = prim $and01C4 (_t14E4, _t14FB);
  if _t14FC {
    int _t14FD = 3;
    bool _t14FE = prim !=0086 (i140F, _t14FD);
    if _t14FE {
      real _t14FF = -0.5e0;
      real _t1500 = -0.1e1;
      real _t1501 = 0.e0;
      real _t1502 = 0.e0;
      vec3 _t1503 = [_t1500, _t1501, _t1502];
      real _t1504 = prim •00CE<$[3]; $[3]; $[]> (_t1503, refPos120E);
      real _t1505 = prim -0026<$[]> (_t14FF, _t1504);
      real _t1506 = -0.1e1;
      real _t1507 = 0.e0;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, dPos120F);
      time1410 = prim /0055 (_t1505, _t150A);
      face1411 = 3;
    } else {
      real _t150B = -0.5e0;
      real _t150C = -0.1e1;
      real _t150D = 0.e0;
      real _t150E = 0.e0;
      vec3 _t150F = [_t150C, _t150D, _t150E];
      real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, refPos120E);
      real _t1511 = prim -0026<$[]> (_t150B, _t1510);
      real _t1512 = -0.1e1;
      real _t1513 = 0.e0;
      real _t1514 = 0.e0;
      vec3 _t1515 = [_t1512, _t1513, _t1514];
      real _t1516 = prim •00CE<$[3]; $[3]; $[]> (_t1515, dPos120F);
      faceTime1412 = prim /0055 (_t1511, _t1516);
    }
  }
  real _t1517 = -0.5e0;
  real _t1518 = 0.e0;
  real _t1519 = -0.1e1;
  real _t151A = 0.e0;
  vec3 _t151B = [_t1518, _t1519, _t151A];
  real _t151C = prim •00CE<$[3]; $[3]; $[]> (_t151B, refPos120E);
  real _t151D = prim -0026<$[]> (_t1517, _t151C);
  real _t151E = 0.e0;
  real _t151F = -0.1e1;
  real _t1520 = 0.e0;
  vec3 _t1521 = [_t151E, _t151F, _t1520];
  real _t1522 = prim •00CE<$[3]; $[3]; $[]> (_t1521, dPos120F);
  real _t1523 = prim /0055 (_t151D, _t1522);
  real _t1524 = -0.1e-15;
  bool _t1525 = prim >=007E (_t1523, _t1524);
  real _t1526 = -0.5e0;
  real _t1527 = 0.e0;
  real _t1528 = -0.1e1;
  real _t1529 = 0.e0;
  vec3 _t152A = [_t1527, _t1528, _t1529];
  real _t152B = prim •00CE<$[3]; $[3]; $[]> (_t152A, refPos120E);
  real _t152C = prim -0026<$[]> (_t1526, _t152B);
  real _t152D = 0.e0;
  real _t152E = -0.1e1;
  real _t152F = 0.e0;
  vec3 _t1530 = [_t152D, _t152E, _t152F];
  real _t1531 = prim •00CE<$[3]; $[3]; $[]> (_t1530, dPos120F);
  real _t1532 = prim /0055 (_t152C, _t1531);
  bool _t1533 = prim >0080 (time1410, _t1532);
  real _t1534 = 0.e0;
  real _t1535 = -0.1e1;
  real _t1536 = 0.e0;
  vec3 _t1537 = [_t1534, _t1535, _t1536];
  real _t1538 = prim •00CE<$[3]; $[3]; $[]> (_t1537, dPos120F);
  real _t1539 = prim |()|00B5<$[]> (_t1538);
  real _t153A = 0.1e-20;
  bool _t153B = prim >=007E (_t1539, _t153A);
  bool _t153C = prim $and01C4 (_t1533, _t153B);
  bool _t153D = prim $and01C4 (_t1525, _t153C);
  if _t153D {
    int _t153E = 4;
    bool _t153F = prim !=0086 (i140F, _t153E);
    if _t153F {
      real _t1540 = -0.5e0;
      real _t1541 = 0.e0;
      real _t1542 = -0.1e1;
      real _t1543 = 0.e0;
      vec3 _t1544 = [_t1541, _t1542, _t1543];
      real _t1545 = prim •00CE<$[3]; $[3]; $[]> (_t1544, refPos120E);
      real _t1546 = prim -0026<$[]> (_t1540, _t1545);
      real _t1547 = 0.e0;
      real _t1548 = -0.1e1;
      real _t1549 = 0.e0;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, dPos120F);
      time1410 = prim /0055 (_t1546, _t154B);
      face1411 = 4;
    } else {
      real _t154C = -0.5e0;
      real _t154D = 0.e0;
      real _t154E = -0.1e1;
      real _t154F = 0.e0;
      vec3 _t1550 = [_t154D, _t154E, _t154F];
      real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, refPos120E);
      real _t1552 = prim -0026<$[]> (_t154C, _t1551);
      real _t1553 = 0.e0;
      real _t1554 = -0.1e1;
      real _t1555 = 0.e0;
      vec3 _t1556 = [_t1553, _t1554, _t1555];
      real _t1557 = prim •00CE<$[3]; $[3]; $[]> (_t1556, dPos120F);
      faceTime1412 = prim /0055 (_t1552, _t1557);
    }
  }
  real _t1558 = -0.5e0;
  real _t1559 = 0.1e1;
  real _t155A = 0.e0;
  real _t155B = -0.e0;
  vec3 _t155C = [_t1559, _t155A, _t155B];
  real _t155D = prim •00CE<$[3]; $[3]; $[]> (_t155C, refPos120E);
  real _t155E = prim -0026<$[]> (_t1558, _t155D);
  real _t155F = 0.1e1;
  real _t1560 = 0.e0;
  real _t1561 = -0.e0;
  vec3 _t1562 = [_t155F, _t1560, _t1561];
  real _t1563 = prim •00CE<$[3]; $[3]; $[]> (_t1562, dPos120F);
  real _t1564 = prim /0055 (_t155E, _t1563);
  real _t1565 = -0.1e-15;
  bool _t1566 = prim >=007E (_t1564, _t1565);
  real _t1567 = -0.5e0;
  real _t1568 = 0.1e1;
  real _t1569 = 0.e0;
  real _t156A = -0.e0;
  vec3 _t156B = [_t1568, _t1569, _t156A];
  real _t156C = prim •00CE<$[3]; $[3]; $[]> (_t156B, refPos120E);
  real _t156D = prim -0026<$[]> (_t1567, _t156C);
  real _t156E = 0.1e1;
  real _t156F = 0.e0;
  real _t1570 = -0.e0;
  vec3 _t1571 = [_t156E, _t156F, _t1570];
  real _t1572 = prim •00CE<$[3]; $[3]; $[]> (_t1571, dPos120F);
  real _t1573 = prim /0055 (_t156D, _t1572);
  bool _t1574 = prim >0080 (time1410, _t1573);
  real _t1575 = 0.1e1;
  real _t1576 = 0.e0;
  real _t1577 = -0.e0;
  vec3 _t1578 = [_t1575, _t1576, _t1577];
  real _t1579 = prim •00CE<$[3]; $[3]; $[]> (_t1578, dPos120F);
  real _t157A = prim |()|00B5<$[]> (_t1579);
  real _t157B = 0.1e-20;
  bool _t157C = prim >=007E (_t157A, _t157B);
  bool _t157D = prim $and01C4 (_t1574, _t157C);
  bool _t157E = prim $and01C4 (_t1566, _t157D);
  if _t157E {
    int _t157F = 5;
    bool _t1580 = prim !=0086 (i140F, _t157F);
    if _t1580 {
      real _t1581 = -0.5e0;
      real _t1582 = 0.1e1;
      real _t1583 = 0.e0;
      real _t1584 = -0.e0;
      vec3 _t1585 = [_t1582, _t1583, _t1584];
      real _t1586 = prim •00CE<$[3]; $[3]; $[]> (_t1585, refPos120E);
      real _t1587 = prim -0026<$[]> (_t1581, _t1586);
      real _t1588 = 0.1e1;
      real _t1589 = 0.e0;
      real _t158A = -0.e0;
      vec3 _t158B = [_t1588, _t1589, _t158A];
      real _t158C = prim •00CE<$[3]; $[3]; $[]> (_t158B, dPos120F);
      time1410 = prim /0055 (_t1587, _t158C);
      face1411 = 5;
    } else {
      real _t158D = -0.5e0;
      real _t158E = 0.1e1;
      real _t158F = 0.e0;
      real _t1590 = -0.e0;
      vec3 _t1591 = [_t158E, _t158F, _t1590];
      real _t1592 = prim •00CE<$[3]; $[3]; $[]> (_t1591, refPos120E);
      real _t1593 = prim -0026<$[]> (_t158D, _t1592);
      real _t1594 = 0.1e1;
      real _t1595 = 0.e0;
      real _t1596 = -0.e0;
      vec3 _t1597 = [_t1594, _t1595, _t1596];
      real _t1598 = prim •00CE<$[3]; $[3]; $[]> (_t1597, dPos120F);
      faceTime1412 = prim /0055 (_t1593, _t1598);
    }
  }
  int _t1599 = -1;
  bool _t159A = prim !=0086 (face1411, _t1599);
  if _t159A {
    real _t159B = 0.e0;
    real _t159C = prim max0125 (time1410, _t159B);
    real _t159D = (real)face1411;
    vec2 _t159E = [_t159C, _t159D];
    return _t159E;
  } else {
    real _t159F = -inf;
    bool _t15A0 = prim ==0084 (_t159F, faceTime1412);
    if _t15A0 {
      real _t15A1 = -0.1e1;
      real _t15A2 = -0.1e1;
      vec2 _t15A3 = [_t15A1, _t15A2];
      return _t15A3;
    } else {
      real _t15A4 = (real)i140F;
      vec2 _t15A5 = [faceTime1412, _t15A4];
      return _t15A5;
    }
  }
}
function Femdata: Mesh#0 domain15A6 (Femdata: Space arg015A7)
{
  Femdata: Mesh _t15A8 = extractFem(arg015A7, Mesh);
  return _t15A8;
}
function Femdata: Space#0 space15A9 (Femdata: FemFunc arg015AA)
{
  Femdata: Space _t15AB = extractFem(arg015AA, Space);
  return _t15AB;
}
function Femdata: FuncCell#3 funcCell15AC (Femdata: FemFunc arg015AD, Femdata: MeshCell arg115AE)
{
  int _t15AF = extractFemItem(CellIndex(MeshCell), int, arg115AE);
  Femdata: FuncCell _t15B0 = loadFem(FuncCell, arg015AD, _t15AF);
  return _t15B0;
}
function bool#1 stupid15C1 (vec3 x15C2)
{
  bool _t15C3 = true;
  return _t15C3;
}
function real#1 atent15DF (real a015E0, real d15E1)
{
  real _t15E2 = 0.e0;
  real _t15E3 = 0.1e1;
  real _t15E4 = 0.15e1;
  real _t15E5 = 0.1e1;
  real _t15E6 = prim |()|00B5<$[]> (d15E1);
  real _t15E7 = prim /0055 (_t15E6, thick04F3);
  real _t15E8 = prim -0026<$[]> (_t15E5, _t15E7);
  real _t15E9 = prim *0034 (_t15E4, _t15E8);
  real _t15EA = prim clamp0094<$[]> (_t15E2, _t15E3, _t15E9);
  real _t15EB = prim *0034 (a015E0, _t15EA);
  return _t15EB;
}
function vec3#1 fStep15EC (vec3 x15ED)
{
  real _t15EE = prim @00A5<#∞; %3; $[]> (pvoF15C0, x15ED);
  field(3)[3] _t15EF = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t15F0 = prim @00A5<#∞; %3; $[3]> (_t15EF, x15ED);
  vec3 _t15F1 = prim *0036<$[3]> (_t15EE, _t15F0);
  field(3)[3] _t15F2 = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t15F3 = prim @00A5<#∞; %3; $[3]> (_t15F2, x15ED);
  field(3)[3] _t15F4 = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t15F5 = prim @00A5<#∞; %3; $[3]> (_t15F4, x15ED);
  real _t15F6 = prim •00CE<$[3]; $[3]; $[]> (_t15F3, _t15F5);
  vec3 _t15F7 = prim /0057<$[3]> (_t15F1, _t15F6);
  vec3 _t15F8 = prim unary -008B<$[3]> (_t15F7);
  return _t15F8;
}
function real#1 fStrength15F9 (vec3 x15FA)
{
  field(3)[3] _t15FB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15FC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15FB);
  tensor[3,3] _t15FD = prim @00A5<#∞; %3; $[3,3]> (_t15FC, x15FA);
  real[3] _t15FE = prim evals009F (_t15FD);
  int _t15FF = 1;
  real _t1600 = prim $sub01C0<real; %3> (_t15FE, _t15FF);
  real _t1601 = prim unary -008B<$[]> (_t1600);
  field(3)[3] _t1602 = prim ∇00A8<#∞; %3> (F15B9);
  vec3 _t1603 = prim @00A5<#∞; %3; $[3]> (_t1602, x15FA);
  real _t1604 = prim |()|00B5<$[3]> (_t1603);
  real _t1605 = prim +0017<$[]> (fBias04F6, _t1604);
  real _t1606 = prim /0055 (_t1601, _t1605);
  return _t1606;
}
function bool#1 fTest1607 (vec3 x1608)
{
  field(3)[3] _t1609 = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t160A = prim @00A5<#∞; %3; $[3]> (_t1609, x1608);
  real _t160B = prim |()|00B5<$[3]> (_t160A);
  real _t160C = 0.1e-7;
  bool _t160D = prim >0080 (_t160B, _t160C);
  return _t160D;
}
function real#1 fMask160E (vec3 x160F)
{
  real _t1610 = 0.1e1;
  return _t1610;
}
function bool#1 posTest1611 (vec3 x1612)
{
  bool _t1613;
  Femdata: RefCell _t1614 = func refcell0547 (block04CB);
  real _t1615 = 0.1e-8;
  bool _t1616 = extractFemItemN((_t1614, x1612, _t1615),InsideInsert(File=checkInside.in)(Mesh),);
  if _t1616 {
    bool _t1617;
    real _t1618 = func fStrength15F9 (x1612);
    bool _t1619 = prim >0080 (_t1618, fStrTh04F4);
    if _t1619 {
      bool _t161A;
      real _t161B = func fMask160E (x1612);
      bool _t161C = prim >=007E (_t161B, fMaskTh04F5);
      if _t161C {
        bool _t161D;
        bool _t161E = func fTest1607 (x1612);
        if _t161E {
          _t161D = func stupid15C1 (x1612);
        } else {
          _t161D = false;
        }
        _t161A = _t161D;
      } else {
        _t161A = false;
      }
      _t1617 = _t161A;
    } else {
      _t1617 = false;
    }
    _t1613 = _t1617;
  } else {
    _t1613 = false;
  }
  return _t1613;
}
globalInit {
  int _t04CF = 0;
  int _t04CD = 1;
  int _t04D1 = extractFemItem(NumCell(Mesh), int, block04CB);
  int _t04D0 = prim -0024 (_t04D1, _t04CD);
  int[] _t04D4 = prim $range01C3 (_t04CF, _t04D0);
  Femdata: MeshCell[] _t04D5 = {};
  foreach _t04D3 in _t04D4 {
    Femdata: MeshCell _t04D6 = loadFem(MeshCell, block04CB, _t04D3);
    _t04D5 = prim @0010<Femdata: MeshCell> (_t04D5, _t04D6);
  }
  0cell_block04CC = _t04D5;
  space04D7 = loadFem(Space, 0space04D7_intermedateGlobal04D8, block04CB);
  U04D9 = loadFem(FemFunc, 0U04D9_intermedateGlobal04DA, space04D7);
  c115B1 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04CC, cellChoice04DB);
  Femdata: FuncCell _t15B2 = func funcCell15AC (U04D9, c115B1);
  Femdata: FemFunc _t15B3 = extractFem(_t15B2, FemFunc);
  Femdata: FuncCell _t15B4 = func funcCell15AC (U04D9, c115B1);
  Femdata: FemFunc _t15B5 = extractFem(_t15B4, FemFunc);
  Femdata: Space _t15B6 = extractFem(_t15B5, Space);
  Femdata: FuncCell _t15B7 = func funcCell15AC (U04D9, c115B1);
  int _t15B8 = extractFemItem(CellIndex(FuncCell), int, _t15B7);
  F15B9 = femField(_t15B3,_t15B8,field(3)[],refField,);
  field(3)[3] _t15BA = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15BC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15BB);
  field(3)[3] _t15BD = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BE = prim •00E1<#∞; #∞; %3; $[3,3]; $[3]; $[3]> (_t15BC, _t15BD);
  pvoW15BF = prim ×00C2<#∞> (_t15BA, _t15BE);
  pvoF15C0 = prim •00E1<#∞; #∞; %3; $[3]; $[3]; $[]> (pvoW15BF, pvoW15BF);
  kernel _t15C4 = tent;
  IMAGE1D<double[3]> img15C5 = clamp(cmap04DD);
  CM15C6 = prim ⊛0074<#0; %1; $[3]> (_t15C4, img15C5);
  C15C7 = F15B9;
  vec3 _t15C8 = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camN15C9 = prim normalize0137<$[3]> (_t15C8);
  vec3 _t15CA = prim ×00BE (camN15C9, camUp04E6);
  camU15CB = prim normalize0137<$[3]> (_t15CA);
  camV15CC = prim ×00BE (camN15C9, camU15CB);
  vec3 _t15CD = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camDist15CE = prim |()|00B5<$[3]> (_t15CD);
  real _t15CF = 0.314159265358979323846264338327950288e1;
  real _t15D0 = prim *0034 (camFOV04EC, _t15CF);
  real _t15D1 = 0.36e3;
  real _t15D2 = prim /0055 (_t15D0, _t15D1);
  real _t15D3 = prim tan0179 (_t15D2);
  camVmax15D4 = prim *0034 (_t15D3, camDist15CE);
  real _t15D5 = (real)iresU04EE;
  real _t15D6 = prim *0034 (camVmax15D4, _t15D5);
  real _t15D7 = (real)iresV04EF;
  camUmax15D8 = prim /0055 (_t15D6, _t15D7);
  camNearVsp15D9 = prim +0017<$[]> (camNear04EA, camDist15CE);
  camFarVsp15DA = prim +0017<$[]> (camFar04EB, camDist15CE);
  tensor[3,3] _t15DB = [camU15CB, camV15CC, camN15C9];
  tensor[3,3] _t15DC = prim transpose0145<%3; %3> (_t15DB);
  vec3 _t15DD = prim normalize0137<$[3]> (litdir0506);
  litwsp15DE = prim •00CE<$[3,3]; $[3]; $[3]> (_t15DC, _t15DD);
}
strand ray (int ui161F, int vi1620) {
  real rayU1621;
  real rayV1628;
  real rayN162F;
  vec3 UV1630;
  vec3 rayOrig1633;
  vec3 rayVec1638;
  real alphaFix163D;
  vec3 eyeDir1640;
  real phKa1642;
  real phKd1643;
  real phKs1644;
  real phSp1645;
  output vec4 rgba1646;
  output real raw164B;
  vec3 rgb164C;
  real transp1650;
  {
    real _t1622 = prim unary -008B<$[]> (camUmax15D8);
    real _t1623 = -0.5e0;
    real _t1624 = (real)ui161F;
    real _t1625 = (real)iresU04EE;
    real _t1626 = 0.5e0;
    real _t1627 = prim -0026<$[]> (_t1625, _t1626);
    rayU1621 = prim lerp0098<$[]> (_t1622, camUmax15D8, _t1623, _t1624, _t1627);
    real _t1629 = prim unary -008B<$[]> (camVmax15D4);
    real _t162A = -0.5e0;
    real _t162B = (real)vi1620;
    real _t162C = (real)iresV04EF;
    real _t162D = 0.5e0;
    real _t162E = prim -0026<$[]> (_t162C, _t162D);
    rayV1628 = prim lerp0098<$[]> (_t1629, camVmax15D4, _t162A, _t162B, _t162E);
    rayN162F = camNearVsp15D9;
    vec3 _t1631 = prim *0036<$[3]> (rayU1621, camU15CB);
    vec3 _t1632 = prim *0036<$[3]> (rayV1628, camV15CC);
    UV1630 = prim +0017<$[3]> (_t1631, _t1632);
    vec3 _t1634;
    if camOrtho04ED {
      _t1634 = UV1630;
    } else {
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      real _t1637 = 0.e0;
      _t1634 = [_t1635, _t1636, _t1637];
    }
    rayOrig1633 = prim +0017<$[3]> (camEye04DE, _t1634);
    vec3 _t1639;
    if camOrtho04ED {
      real _t163A = 0.e0;
      real _t163B = 0.e0;
      real _t163C = 0.e0;
      _t1639 = [_t163A, _t163B, _t163C];
    } else {
      _t1639 = prim /0057<$[3]> (UV1630, camDist15CE);
    }
    rayVec1638 = prim +0017<$[3]> (camN15C9, _t1639);
    real _t163E = prim |()|00B5<$[3]> (rayVec1638);
    real _t163F = prim *0034 (_t163E, rayStep04F0);
    alphaFix163D = prim /0055 (_t163F, refStep04F1);
    vec3 _t1641 = prim normalize0137<$[3]> (rayVec1638);
    eyeDir1640 = prim unary -008B<$[3]> (_t1641);
    phKa1642 = phong04F9[0];
    phKd1643 = phong04F9[1];
    phKs1644 = phong04F9[2];
    phSp1645 = phong04F9[3];
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    real _t164A = 0.e0;
    rgba1646 = [_t1647, _t1648, _t1649, _t164A];
    raw164B = 0.e0;
    real _t164D = 0.e0;
    real _t164E = 0.e0;
    real _t164F = 0.e0;
    rgb164C = [_t164D, _t164E, _t164F];
    transp1650 = 0.1e1;
  }
  update
  {
    rayN162F = prim +0017<$[]> (rayN162F, rayStep04F0);
    bool _t1651 = prim >0080 (rayN162F, camFarVsp15DA);
    if _t1651 {
      stabilize;
    }
    vec3 _t1652 = prim *0036<$[3]> (rayN162F, rayVec1638);
    vec3 pos1653 = prim +0017<$[3]> (rayOrig1633, _t1652);
    bool _t1654 = func posTest1611 (pos1653);
    bool _t1655 = prim !00BC (_t1654);
    if _t1655 {
      continue;
    }
    vec3 step1656 = func fStep15EC (pos1653);
    real _t1657 = prim |()|00B5<$[3]> (step1656);
    real aa1658 = func atent15DF (maxAlpha04F7, _t1657);
    real _t1659 = 0.e0;
    bool _t165A = prim ==0084 (aa1658, _t1659);
    if _t165A {
      continue;
    }
    real _t165B = 0.1e1;
    real _t165C = 0.1e1;
    real _t165D = prim -0026<$[]> (_t165C, aa1658);
    real _t165E = prim ^0069 (_t165D, alphaFix163D);
    aa1658 = prim -0026<$[]> (_t165B, _t165E);
    vec3 _t165F = prim normalize0137<$[3]> (step1656);
    vec3 snorm1660 = prim unary -008B<$[3]> (_t165F);
    real _t1661 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, litwsp15DE);
    int _t1662 = 2;
    real dcomp1663 = prim ^0068 (_t1661, _t1662);
    real scomp1664 = 0.e0;
    real _t1665 = 0.e0;
    bool _t1666 = prim !=0088 (phKs1644, _t1665);
    if _t1666 {
      vec3 _t1667 = prim +0017<$[3]> (eyeDir1640, litwsp15DE);
      vec3 _t1668 = prim normalize0137<$[3]> (_t1667);
      real _t1669 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, _t1668);
      real _t166A = prim |()|00B5<$[]> (_t1669);
      scomp1664 = prim ^0069 (_t166A, phSp1645);
    }
    vec3 dcol166B = prim lerp0098<$[3]> (mcNear04FE, mcFar0502, camNearVsp15D9, rayN162F, camFarVsp15DA);
    real cmin166C = cminmax050A[0];
    real cmax166D = cminmax050A[1];
    real _t166E = 0.1e1;
    real _t166F = 0.1e1;
    real _t1670 = 0.1e1;
    vec3 mcol1671 = [_t166E, _t166F, _t1670];
    bool _t1672 = prim !=0088 (cmin166C, cmax166D);
    if _t1672 {
      real _t1673 = 0.e0;
      real _t1674 = 0.1e1;
      vec3 _t1675 = prim +0017<$[3]> (pos1653, step1656);
      real _t1676 = prim @00A5<#∞; %3; $[]> (C15C7, _t1675);
      real _t1677 = prim lerp0098<$[]> (_t1673, _t1674, cmin166C, _t1676, cmax166D);
      mcol1671 = prim @00A5<#0; %1; $[3]> (CM15C6, _t1677);
    }
    real _t1678 = prim *0034 (transp1650, aa1658);
    real _t1679 = prim *0034 (phKd1643, dcomp1663);
    real _t167A = prim +0017<$[]> (phKa1642, _t1679);
    vec3 _t167B = prim modulate0129<%3> (dcol166B, mcol1671);
    vec3 _t167C = prim *0036<$[3]> (_t167A, _t167B);
    real _t167D = prim *0034 (phKs1644, scomp1664);
    real _t167E = 0.1e1;
    real _t167F = 0.1e1;
    real _t1680 = 0.1e1;
    vec3 _t1681 = [_t167E, _t167F, _t1680];
    vec3 _t1682 = prim *0036<$[3]> (_t167D, _t1681);
    vec3 _t1683 = prim +0017<$[3]> (_t167C, _t1682);
    vec3 _t1684 = prim *0036<$[3]> (_t1678, _t1683);
    rgb164C = prim +0017<$[3]> (rgb164C, _t1684);
    real _t1685 = 0.1e1;
    real _t1686 = prim -0026<$[]> (_t1685, aa1658);
    transp1650 = prim *0034 (transp1650, _t1686);
    bool _t1687 = prim <007A (transp1650, transp004F2);
    if _t1687 {
      transp1650 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1688 = 0.1e1;
    bool _t1689 = prim <007A (transp1650, _t1688);
    if _t1689 {
      real _t168A = 0.1e1;
      real aa168B = prim -0026<$[]> (_t168A, transp1650);
      real _t168C = rgb164C[0];
      real _t168D = prim /0055 (_t168C, aa168B);
      real _t168E = rgb164C[1];
      real _t168F = prim /0055 (_t168E, aa168B);
      real _t1690 = rgb164C[2];
      real _t1691 = prim /0055 (_t1690, aa168B);
      rgba1646 = [_t168D, _t168F, _t1691, aa168B];
    }
  }
}
grid(2) {
  int _t1692 = 0;
  int _t1693 = 1;
  int _t1694 = prim -0024 (iresV04EF, _t1693);
  int[] _t1695 = prim $range01C3 (_t1692, _t1694);
  foreach vi169B in _t1695 {
    int _t1696 = 0;
    int _t1697 = 1;
    int _t1698 = prim -0024 (iresU04EE, _t1697);
    int[] _t1699 = prim $range01C3 (_t1696, _t1698);
    foreach ui169A in _t1699 {
      new ray (ui169A, vi169B);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04CB;
input FemData:Space 0space04D7_intermedateGlobal04D8;
input FemData:FemFunc 0U04D9_intermedateGlobal04DA;
input int cellChoice04DB;
input image(1)[3] cmap04DD = image("cmap.nrrd");
input vec3 camEye04DE = <default>;
input vec3 camAt04E2 = <default>;
input vec3 camUp04E6 = <default>;
input real camNear04EA = <default>;
input real camFar04EB = <default>;
input real camFOV04EC = <default>;
input bool camOrtho04ED = <default>;
input int iresU04EE = <default>;
input int iresV04EF = <default>;
input real rayStep04F0 = <default>;
input real refStep04F1 = <default>;
input real transp004F2 = <default>;
input real thick04F3 = <default>;
input real fStrTh04F4 = <default>;
input real fMaskTh04F5 = <default>;
input real fBias04F6 = <default>;
input real maxAlpha04F7 = <default>;
input bool light04F8 = <default>;
input vec4 phong04F9 = <default>;
input vec3 mcNear04FE = <default>;
input vec3 mcFar0502 = <default>;
input vec3 litdir0506 = <default>;
input vec2 cminmax050A = <default>;
constants {
  real _t04DF = 0.e0;
  real _t04E0 = -0.2e1;
  real _t04E1 = 0.e0;
  camEye04DE = [_t04DF, _t04E0, _t04E1];
  real _t04E3 = 0.e0;
  real _t04E4 = 0.e0;
  real _t04E5 = 0.e0;
  camAt04E2 = [_t04E3, _t04E4, _t04E5];
  real _t04E7 = 0.e0;
  real _t04E8 = 0.e0;
  real _t04E9 = 0.1e1;
  camUp04E6 = [_t04E7, _t04E8, _t04E9];
  camNear04EA = -0.4e1;
  camFar04EB = 0.4e1;
  camFOV04EC = 0.1e2;
  camOrtho04ED = false;
  iresU04EE = 100;
  iresV04EF = 100;
  rayStep04F0 = 0.1e-3;
  refStep04F1 = 0.1e-3;
  transp004F2 = 0.5e-2;
  thick04F3 = 0.1e-1;
  fStrTh04F4 = 0.e0;
  fMaskTh04F5 = 0.e0;
  fBias04F6 = 0.1e0;
  maxAlpha04F7 = 0.1e1;
  light04F8 = false;
  real _t04FA = 0.1e0;
  real _t04FB = 0.7e0;
  real _t04FC = 0.2e0;
  real _t04FD = 0.1e3;
  phong04F9 = [_t04FA, _t04FB, _t04FC, _t04FD];
  real _t04FF = 0.1e1;
  real _t0500 = 0.1e1;
  real _t0501 = 0.1e1;
  mcNear04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.1e1;
  real _t0504 = 0.1e1;
  real _t0505 = 0.1e1;
  mcFar0502 = [_t0503, _t0504, _t0505];
  real _t0507 = 0.e0;
  real _t0508 = -0.1e1;
  real _t0509 = 0.e0;
  litdir0506 = [_t0507, _t0508, _t0509];
  real _t050B = 0.e0;
  real _t050C = 0.e0;
  cminmax050A = [_t050B, _t050C];
}
global Femdata: MeshCell[] 0cell_block04CC;
global Femdata: Space space04D7;
global Femdata: FemFunc U04D9;
global Femdata: MeshCell c115B1;
global field(3)[] F15B9;
global field(3)[3] pvoW15BF;
global field(3)[] pvoF15C0;
global field#0(1)[3] CM15C6;
global field(3)[] C15C7;
global vec3 camN15C9;
global vec3 camU15CB;
global vec3 camV15CC;
global real camDist15CE;
global real camVmax15D4;
global real camUmax15D8;
global real camNearVsp15D9;
global real camFarVsp15DA;
global vec3 litwsp15DE;
function bool#0 !=050D (Femdata: MeshCell cell1050E, Femdata: MeshCell cell1050F)
{
  int _t0510 = extractFemItem(CellIndex(Mesh), int, cell1050E);
  int _t0511 = extractFemItem(CellIndex(Mesh), int, cell1050F);
  bool _t0512 = prim !=0086 (_t0510, _t0511);
  return _t0512;
}
function bool#0 ==0513 (Femdata: MeshCell cell1050E, Femdata: MeshCell cell1050F)
{
  int _t0514 = extractFemItem(CellIndex(Mesh), int, cell1050E);
  int _t0515 = extractFemItem(CellIndex(Mesh), int, cell1050F);
  bool _t0516 = prim ==0082 (_t0514, _t0515);
  return _t0516;
}
function Femdata: MeshPos#0 findPos0517 (Femdata: Mesh mesh0518, vec3 pos0519)
{
  real _t051A = 0.e0;
  real _t051B = 0.e0;
  real _t051C = 0.e0;
  xn051D = [_t051A, _t051B, _t051C];
  newtonInt051E = 0;
  cellInt051F = extractFemItem(StartCell(Mesh), int, mesh0518);
  int _t0520 = extractFemItem(NumCell(Mesh), int, mesh0518);
  int _t0521 = 1;
  numCell0522 = prim -0024 (_t0520, _t0521);
  int _t0523 = 0;
  int _t0524 = 2;
  int _t0525 = 1;
  int _t0526 = prim +0015 (_t0524, _t0525);
  int _t0527 = prim *0033 (_t0526, numCell0522);
  int[] _t0528 = prim $range01C3 (_t0523, _t0527);
  foreach itter0543 in _t0528 {
    field(3)[3] _t0529 = femField(mesh0518,cellInt051F,field(3)[3],Transform,);
    field(3)[3,3] _t052A = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0529);
    field(3)[3,3] _t052B = prim inv015E<#∞; %3> (_t052A);
    real _t052C = 0.e0;
    real _t052D = 0.e0;
    real _t052E = 0.e0;
    vec3 _t052F = [_t052C, _t052D, _t052E];
    A0530 = prim @00A5<#∞; %3; $[3,3]> (_t052B, _t052F);
    field(3)[3] _t0531 = femField(mesh0518,cellInt051F,field(3)[3],Transform,);
    field(3)[3] _t0532 = prim -002E<#∞; %3; $[3]> (_t0531, pos0519);
    field(3)[3] _t0533 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0530, _t0532);
    delta0534 = prim @00A5<#∞; %3; $[3]> (_t0533, xn051D);
    xn051D = prim -0026<$[3]> (xn051D, delta0534);
    real _t0535 = 0.1e-7;
    real _t0536 = 0.1e-7;
    real _t0537 = prim *0034 (_t0535, _t0536);
    real _t0538 = prim •00CE<$[3]; $[3]; $[]> (delta0534, delta0534);
    bool _t0539 = prim >=007E (_t0537, _t0538);
    if _t0539 {
      real _t053A = 0.1e-8;
      bool _t053B = extractFemItemN((mesh0518, xn051D, _t053A),InsideInsert(File=checkInside.in)(Mesh),);
      if _t053B {
        Femdata: MeshPos _t053C = extractFemItemN((mesh0518, cellInt051F, xn051D, pos0519),AllBuild(MeshPos),);
        return _t053C;
      }
    }
    int _t053D = 1;
    newtonInt051E = prim +0015 (newtonInt051E, _t053D);
    int _t053E = 2;
    bool _t053F = prim >=007D (newtonInt051E, _t053E);
    if _t053F {
      newtonInt051E = 0;
      bool _t0540 = prim >=007D (cellInt051F, numCell0522);
      if _t0540 {
        Femdata: MeshPos _t0541 = extractFemItemN((mesh0518),InvalidBuild(MeshPos),);
        return _t0541;
      } else {
        int _t0542 = 1;
        cellInt051F = prim +0015 (cellInt051F, _t0542);
      }
    }
  }
  string _t0544 = "Bad end 2";
  string _t0545 = "\n";
  print (_t0544, _t0545);
  Femdata: MeshPos _t0546 = extractFemItemN((mesh0518),InvalidBuild(MeshPos),);
  return _t0546;
}
function Femdata: RefCell#1 refcell0547 (Femdata: Mesh arg00548)
{
  Femdata: RefCell _t0549 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg00548);
  return _t0549;
}
function Femdata: MeshCell[]#0 cells054A (Femdata: Mesh arg0054B)
{
  Femdata: MeshCell[] _t054C = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg0054B);
  return _t054C;
}
function Femdata: MeshCell[]#0 cells054D (Femdata: Mesh arg0054B)
{
  int _t054E = 0;
  int _t054F = extractFemItem(NumCell(Mesh), int, arg0054B);
  int[] _t0550 = prim $range01C3 (_t054E, _t054F);
  Femdata: MeshCell[] accum0553 = {};
  foreach i0551 in _t0550 {
    Femdata: MeshCell _t0552 = loadFem(MeshCell, arg0054B, i0551);
    accum0553 = prim @0010<Femdata: MeshCell> (accum0553, _t0552);
  }
  return accum0553;
}
function int#0 numCell0554 (Femdata: Mesh arg00548)
{
  int _t0555 = extractFemItem(NumCell(Mesh), int, arg00548);
  return _t0555;
}
function tensor[3,3,3,3]#0 mesh_t_transform_30556 (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t055A = femField(mesh0559,cell0558,field(3)[3],Transform,);
  field(3)[3,3] _t055B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t055A);
  field(3)[3,3,3] _t055C = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t055B);
  field(3)[3,3,3,3] _t055D = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t055C);
  tensor[3,3,3,3] _t055E = prim @00A5<#∞; %3; $[3,3,3,3]> (_t055D, pos0557);
  return _t055E;
}
function tensor[3,3,3]#0 mesh_t_transform_2055F (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t0560 = femField(mesh0559,cell0558,field(3)[3],Transform,);
  field(3)[3,3] _t0561 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0560);
  field(3)[3,3,3] _t0562 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0561);
  tensor[3,3,3] _t0563 = prim @00A5<#∞; %3; $[3,3,3]> (_t0562, pos0557);
  return _t0563;
}
function tensor[3,3]#0 mesh_t_transform_10564 (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t0565 = femField(mesh0559,cell0558,field(3)[3],Transform,);
  field(3)[3,3] _t0566 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0565);
  tensor[3,3] _t0567 = prim @00A5<#∞; %3; $[3,3]> (_t0566, pos0557);
  return _t0567;
}
function vec3#2 mesh_t_transform_00568 (vec3 pos0557, int cell0558, Femdata: Mesh mesh0559)
{
  field(3)[3] _t0569 = femField(mesh0559,cell0558,field(3)[3],Transform,);
  vec3 _t056A = prim @00A5<#∞; %3; $[3]> (_t0569, pos0557);
  return _t056A;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse056B (vec3 pos056C, int cellInt056D, Femdata: Mesh mesh056E)
{
  real _t056F = 0.e0;
  real _t0570 = 0.e0;
  real _t0571 = 0.e0;
  xn0572 = [_t056F, _t0570, _t0571];
  field(3)[3] _t0573 = femField(mesh056E,cellInt056D,field(3)[3],Transform,);
  field(3)[3,3] _t0574 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0573);
  field(3)[3,3] _t0575 = prim inv015E<#∞; %3> (_t0574);
  real _t0576 = 0.e0;
  real _t0577 = 0.e0;
  real _t0578 = 0.e0;
  vec3 _t0579 = [_t0576, _t0577, _t0578];
  A057A = prim @00A5<#∞; %3; $[3,3]> (_t0575, _t0579);
  int _t057B = 0;
  int _t057C = 2;
  int[] _t057D = prim $range01C3 (_t057B, _t057C);
  foreach itter058B in _t057D {
    field(3)[3] _t057E = femField(mesh056E,cellInt056D,field(3)[3],Transform,);
    field(3)[3] _t057F = prim -002E<#∞; %3; $[3]> (_t057E, pos056C);
    field(3)[3] _t0580 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A057A, _t057F);
    delta0581 = prim @00A5<#∞; %3; $[3]> (_t0580, xn0572);
    xn0572 = prim -0026<$[3]> (xn0572, delta0581);
    real _t0582 = 0.1e-7;
    real _t0583 = 0.1e-7;
    real _t0584 = prim *0034 (_t0582, _t0583);
    real _t0585 = prim •00CE<$[3]; $[3]; $[]> (delta0581, delta0581);
    bool _t0586 = prim >=007E (_t0584, _t0585);
    if _t0586 {
      real _t0587 = 0.1e-8;
      bool _t0588 = extractFemItemN((mesh056E, xn0572, _t0587),InsideInsert(File=checkInside.in)(Mesh),);
      if _t0588 {
        Femdata: MeshPos _t0589 = extractFemItemN((mesh056E, cellInt056D, xn0572, pos056C),AllBuild(MeshPos),);
        return _t0589;
      } else {
        Femdata: MeshPos _t058A = extractFemItemN((mesh056E),InvalidBuild(MeshPos),);
        return _t058A;
      }
    }
  }
  Femdata: MeshPos _t058C = extractFemItemN((mesh056E),InvalidBuild(MeshPos),);
  return _t058C;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos058D (Femdata: MeshPos pos058E)
{
  bool _t058F = extractFemItem(WorldTest(MeshPos), bool, pos058E);
  if _t058F {
    vec3 _t0590 = extractFemItem(RefPos(MeshPos), vec3, pos058E);
    int _t0591 = extractFemItem(CellIndex(MeshPos), int, pos058E);
    Femdata: Mesh _t0592 = extractFem(pos058E, Mesh);
    vec3 _t0593 = func mesh_t_transform_00568 (_t0590, _t0591, _t0592);
    Femdata: MeshPos _t0594 = extractFemItemN((pos058E, _t0593),NewWorld(MeshPos),);
    return _t0594;
  } else {
    return pos058E;
  }
}
function vec3#0 worldPos0595 (Femdata: MeshPos pos058E)
{
  vec3 _t0596 = extractFemItem(RefPos(MeshPos), vec3, pos058E);
  int _t0597 = extractFemItem(CellIndex(MeshPos), int, pos058E);
  Femdata: Mesh _t0598 = extractFem(pos058E, Mesh);
  vec3 _t0599 = func mesh_t_transform_00568 (_t0596, _t0597, _t0598);
  return _t0599;
}
function Femdata: MeshPos#0 $exitPos059A (Femdata: Mesh mesh059B, int cellId059C, vec3 refPos059D, vec3 dPos059E, real[2] time059F)
{
  int _t05A0 = -1;
  real _t05A1 = time059F[1];
  int _t05A2 = prim $r2i01B7 (_t05A1);
  int[2] _t05A4 = func nextCell405A3 (_t05A2, cellId059C, mesh059B);
  int _t05A5 = 0;
  int _t05A6 = prim $sub01C0<int; %2> (_t05A4, _t05A5);
  bool _t05A7 = prim !=0086 (_t05A0, _t05A6);
  if _t05A7 {
    string _t05A8 = "face ";
    real _t05A9 = time059F[1];
    int _t05AA = prim $r2i01B7 (_t05A9);
    string _t05AB = " to ";
    real _t05AC = time059F[1];
    int _t05AD = prim $r2i01B7 (_t05AC);
    int[2] _t05AE = func nextCell405A3 (_t05AD, cellId059C, mesh059B);
    int _t05AF = 1;
    int _t05B0 = prim $sub01C0<int; %2> (_t05AE, _t05AF);
    string _t05B1 = "\n";
    string _t05B2 = "got: ";
    real _t05B3 = 0.1e1;
    real _t05B4 = 0.e0;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.e0;
    vec4 _t05B7 = [_t05B3, _t05B4, _t05B5, _t05B6];
    real _t05B8 = 0.e0;
    real _t05B9 = 0.1e1;
    real _t05BA = 0.e0;
    real _t05BB = 0.e0;
    vec4 _t05BC = [_t05B8, _t05B9, _t05BA, _t05BB];
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.1e1;
    real _t05C0 = 0.e0;
    vec4 _t05C1 = [_t05BD, _t05BE, _t05BF, _t05C0];
    real _t05C2 = 0.e0;
    real _t05C3 = 0.e0;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.1e1;
    vec4 _t05C6 = [_t05C2, _t05C3, _t05C4, _t05C5];
    tensor[4,4] _t05C7 = [_t05B7, _t05BC, _t05C1, _t05C6];
    real _t05C8 = 0.1e1;
    real _t05C9 = 0.e0;
    real _t05CA = 0.e0;
    real _t05CB = 0.e0;
    vec4 _t05CC = [_t05C8, _t05C9, _t05CA, _t05CB];
    real _t05CD = 0.e0;
    real _t05CE = 0.1e1;
    real _t05CF = 0.e0;
    real _t05D0 = 0.e0;
    vec4 _t05D1 = [_t05CD, _t05CE, _t05CF, _t05D0];
    real _t05D2 = 0.e0;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.1e1;
    real _t05D5 = 0.1e1;
    vec4 _t05D6 = [_t05D2, _t05D3, _t05D4, _t05D5];
    real _t05D7 = 0.e0;
    real _t05D8 = 0.e0;
    real _t05D9 = 0.e0;
    real _t05DA = 0.1e1;
    vec4 _t05DB = [_t05D7, _t05D8, _t05D9, _t05DA];
    tensor[4,4] _t05DC = [_t05CC, _t05D1, _t05D6, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    real _t05DF = 0.e0;
    real _t05E0 = 0.e0;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.1e1;
    real _t05E5 = 0.e0;
    vec4 _t05E6 = [_t05E2, _t05E3, _t05E4, _t05E5];
    real _t05E7 = 0.1e1;
    real _t05E8 = -0.1e1;
    real _t05E9 = 0.e0;
    real _t05EA = -0.5e0;
    vec4 _t05EB = [_t05E7, _t05E8, _t05E9, _t05EA];
    real _t05EC = 0.e0;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    real _t05EF = 0.1e1;
    vec4 _t05F0 = [_t05EC, _t05ED, _t05EE, _t05EF];
    tensor[4,4] _t05F1 = [_t05E1, _t05E6, _t05EB, _t05F0];
    real _t05F2 = 0.e0;
    real _t05F3 = 0.e0;
    real _t05F4 = -0.1e1;
    real _t05F5 = 0.e0;
    vec4 _t05F6 = [_t05F2, _t05F3, _t05F4, _t05F5];
    real _t05F7 = 0.e0;
    real _t05F8 = 0.1e1;
    real _t05F9 = 0.e0;
    real _t05FA = 0.e0;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = -0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = -0.5e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.e0;
    real _t0603 = 0.e0;
    real _t0604 = 0.1e1;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    tensor[4,4] _t0606 = [_t05F6, _t05FB, _t0600, _t0605];
    real _t0607 = 0.e0;
    real _t0608 = -0.1e1;
    real _t0609 = 0.e0;
    real _t060A = 0.e0;
    vec4 _t060B = [_t0607, _t0608, _t0609, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = -0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = -0.1e1;
    real _t0613 = 0.e0;
    real _t0614 = -0.5e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.e0;
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    tensor[4,4] _t061B = [_t060B, _t0610, _t0615, _t061A];
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    real _t061F = 0.e0;
    vec4 _t0620 = [_t061C, _t061D, _t061E, _t061F];
    real _t0621 = 0.e0;
    real _t0622 = -0.1e1;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.1e1;
    real _t0627 = -0.1e1;
    real _t0628 = 0.e0;
    real _t0629 = -0.5e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.e0;
    real _t062D = 0.e0;
    real _t062E = 0.1e1;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    tensor[4,4] _t0630 = [_t0620, _t0625, _t062A, _t062F];
    tensor[4,4][6] _t0631 = {_t05C7, _t05DC, _t05F1, _t0606, _t061B, _t0630};
    real _t0632 = 0.1e1;
    real _t0633 = 0.e0;
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    real _t0637 = 0.e0;
    real _t0638 = 0.1e1;
    real _t0639 = 0.e0;
    real _t063A = 0.e0;
    vec4 _t063B = [_t0637, _t0638, _t0639, _t063A];
    real _t063C = 0.e0;
    real _t063D = 0.e0;
    real _t063E = 0.1e1;
    real _t063F = -0.1e1;
    vec4 _t0640 = [_t063C, _t063D, _t063E, _t063F];
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    real _t0643 = 0.e0;
    real _t0644 = 0.1e1;
    vec4 _t0645 = [_t0641, _t0642, _t0643, _t0644];
    tensor[4,4] _t0646 = [_t0636, _t063B, _t0640, _t0645];
    real _t0647 = 0.1e1;
    real _t0648 = 0.e0;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    vec4 _t064B = [_t0647, _t0648, _t0649, _t064A];
    real _t064C = 0.e0;
    real _t064D = 0.1e1;
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    vec4 _t0650 = [_t064C, _t064D, _t064E, _t064F];
    real _t0651 = 0.e0;
    real _t0652 = 0.e0;
    real _t0653 = 0.1e1;
    real _t0654 = 0.e0;
    vec4 _t0655 = [_t0651, _t0652, _t0653, _t0654];
    real _t0656 = 0.e0;
    real _t0657 = 0.e0;
    real _t0658 = 0.e0;
    real _t0659 = 0.1e1;
    vec4 _t065A = [_t0656, _t0657, _t0658, _t0659];
    tensor[4,4] _t065B = [_t064B, _t0650, _t0655, _t065A];
    real _t065C = 0.e0;
    real _t065D = 0.1e1;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.e0;
    real _t0663 = 0.1e1;
    real _t0664 = -0.1e1;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.1e1;
    real _t0667 = -0.1e1;
    real _t0668 = 0.e0;
    real _t0669 = -0.5e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.e0;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.e0;
    real _t0672 = 0.e0;
    real _t0673 = -0.1e1;
    real _t0674 = 0.1e1;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.1e1;
    real _t0678 = 0.e0;
    real _t0679 = 0.e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = 0.1e1;
    real _t067C = -0.1e1;
    real _t067D = 0.e0;
    real _t067E = -0.5e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.e0;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = 0.e0;
    real _t0687 = -0.1e1;
    real _t0688 = 0.e0;
    real _t0689 = 0.e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    real _t068D = -0.1e1;
    real _t068E = 0.1e1;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = 0.1e1;
    real _t0691 = -0.1e1;
    real _t0692 = 0.e0;
    real _t0693 = -0.5e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.e0;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = 0.e0;
    real _t069C = 0.e0;
    real _t069D = 0.1e1;
    real _t069E = -0.1e1;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = 0.e0;
    real _t06A1 = -0.1e1;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.1e1;
    real _t06A6 = -0.1e1;
    real _t06A7 = 0.e0;
    real _t06A8 = -0.5e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.e0;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][6] _t06B0 = {_t0646, _t065B, _t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.1e1;
    real _t06B2 = 0.e0;
    real _t06B3 = 0.1e1;
    real _t06B4 = 0.5e0;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.1e1;
    real _t06B7 = 0.e0;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.e0;
    real _t06BC = 0.1e1;
    real _t06BD = 0.e0;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.1e1;
    real _t06C9 = 0.5e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.1e1;
    real _t06CC = 0.e0;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.1e1;
    real _t06D2 = 0.e0;
    real _t06D3 = 0.1e1;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.1e1;
    real _t06DC = 0.e0;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = 0.e0;
    real _t06E1 = 0.1e1;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = -0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.1e1;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.e0;
    real _t06FB = 0.e0;
    real _t06FC = 0.1e1;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    real _t0705 = -0.1e1;
    real _t0706 = 0.e0;
    real _t0707 = 0.e0;
    real _t0708 = 0.e0;
    vec4 _t0709 = [_t0705, _t0706, _t0707, _t0708];
    real _t070A = 0.e0;
    real _t070B = -0.1e1;
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    vec4 _t070E = [_t070A, _t070B, _t070C, _t070D];
    real _t070F = 0.e0;
    real _t0710 = 0.e0;
    real _t0711 = 0.1e1;
    real _t0712 = 0.e0;
    vec4 _t0713 = [_t070F, _t0710, _t0711, _t0712];
    real _t0714 = 0.e0;
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.1e1;
    vec4 _t0718 = [_t0714, _t0715, _t0716, _t0717];
    tensor[4,4] _t0719 = [_t0709, _t070E, _t0713, _t0718];
    real _t071A = 0.e0;
    real _t071B = 0.1e1;
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    vec4 _t071E = [_t071A, _t071B, _t071C, _t071D];
    real _t071F = -0.1e1;
    real _t0720 = 0.e0;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    vec4 _t0723 = [_t071F, _t0720, _t0721, _t0722];
    real _t0724 = 0.e0;
    real _t0725 = 0.e0;
    real _t0726 = 0.1e1;
    real _t0727 = 0.e0;
    vec4 _t0728 = [_t0724, _t0725, _t0726, _t0727];
    real _t0729 = 0.e0;
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.1e1;
    vec4 _t072D = [_t0729, _t072A, _t072B, _t072C];
    tensor[4,4] _t072E = [_t071E, _t0723, _t0728, _t072D];
    tensor[4,4][6] _t072F = {_t06C5, _t06DA, _t06EF, _t0704, _t0719, _t072E};
    real _t0730 = 0.e0;
    real _t0731 = 0.1e1;
    real _t0732 = 0.1e1;
    real _t0733 = 0.5e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = -0.1e1;
    real _t073B = 0.e0;
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.e0;
    real _t0746 = 0.1e1;
    real _t0747 = 0.1e1;
    real _t0748 = 0.5e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.1e1;
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = -0.1e1;
    real _t0750 = 0.e0;
    real _t0751 = 0.e0;
    real _t0752 = 0.1e1;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    real _t075A = 0.e0;
    real _t075B = 0.1e1;
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    vec4 _t075E = [_t075A, _t075B, _t075C, _t075D];
    real _t075F = -0.1e1;
    real _t0760 = 0.e0;
    real _t0761 = 0.e0;
    real _t0762 = 0.e0;
    vec4 _t0763 = [_t075F, _t0760, _t0761, _t0762];
    real _t0764 = 0.e0;
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.e0;
    vec4 _t0768 = [_t0764, _t0765, _t0766, _t0767];
    real _t0769 = 0.e0;
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.1e1;
    vec4 _t076D = [_t0769, _t076A, _t076B, _t076C];
    tensor[4,4] _t076E = [_t075E, _t0763, _t0768, _t076D];
    real _t076F = 0.1e1;
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    vec4 _t0773 = [_t076F, _t0770, _t0771, _t0772];
    real _t0774 = 0.e0;
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    vec4 _t0778 = [_t0774, _t0775, _t0776, _t0777];
    real _t0779 = 0.e0;
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    vec4 _t077D = [_t0779, _t077A, _t077B, _t077C];
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.1e1;
    vec4 _t0782 = [_t077E, _t077F, _t0780, _t0781];
    tensor[4,4] _t0783 = [_t0773, _t0778, _t077D, _t0782];
    real _t0784 = 0.e0;
    real _t0785 = -0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    vec4 _t0788 = [_t0784, _t0785, _t0786, _t0787];
    real _t0789 = 0.1e1;
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = 0.e0;
    vec4 _t078D = [_t0789, _t078A, _t078B, _t078C];
    real _t078E = 0.e0;
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    vec4 _t0792 = [_t078E, _t078F, _t0790, _t0791];
    real _t0793 = 0.e0;
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.1e1;
    vec4 _t0797 = [_t0793, _t0794, _t0795, _t0796];
    tensor[4,4] _t0798 = [_t0788, _t078D, _t0792, _t0797];
    real _t0799 = -0.1e1;
    real _t079A = 0.e0;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    vec4 _t079D = [_t0799, _t079A, _t079B, _t079C];
    real _t079E = 0.e0;
    real _t079F = -0.1e1;
    real _t07A0 = 0.e0;
    real _t07A1 = 0.e0;
    vec4 _t07A2 = [_t079E, _t079F, _t07A0, _t07A1];
    real _t07A3 = 0.e0;
    real _t07A4 = 0.e0;
    real _t07A5 = 0.1e1;
    real _t07A6 = 0.e0;
    vec4 _t07A7 = [_t07A3, _t07A4, _t07A5, _t07A6];
    real _t07A8 = 0.e0;
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.1e1;
    vec4 _t07AC = [_t07A8, _t07A9, _t07AA, _t07AB];
    tensor[4,4] _t07AD = [_t079D, _t07A2, _t07A7, _t07AC];
    tensor[4,4][6] _t07AE = {_t0744, _t0759, _t076E, _t0783, _t0798, _t07AD};
    real _t07AF = -0.1e1;
    real _t07B0 = 0.e0;
    real _t07B1 = 0.1e1;
    real _t07B2 = 0.5e0;
    vec4 _t07B3 = [_t07AF, _t07B0, _t07B1, _t07B2];
    real _t07B4 = -0.1e1;
    real _t07B5 = 0.e0;
    real _t07B6 = 0.e0;
    real _t07B7 = 0.e0;
    vec4 _t07B8 = [_t07B4, _t07B5, _t07B6, _t07B7];
    real _t07B9 = 0.e0;
    real _t07BA = -0.1e1;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    vec4 _t07BD = [_t07B9, _t07BA, _t07BB, _t07BC];
    real _t07BE = 0.e0;
    real _t07BF = 0.e0;
    real _t07C0 = 0.e0;
    real _t07C1 = 0.1e1;
    vec4 _t07C2 = [_t07BE, _t07BF, _t07C0, _t07C1];
    tensor[4,4] _t07C3 = [_t07B3, _t07B8, _t07BD, _t07C2];
    real _t07C4 = -0.1e1;
    real _t07C5 = 0.e0;
    real _t07C6 = 0.1e1;
    real _t07C7 = 0.5e0;
    vec4 _t07C8 = [_t07C4, _t07C5, _t07C6, _t07C7];
    real _t07C9 = -0.1e1;
    real _t07CA = 0.e0;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    vec4 _t07CD = [_t07C9, _t07CA, _t07CB, _t07CC];
    real _t07CE = 0.e0;
    real _t07CF = -0.1e1;
    real _t07D0 = 0.e0;
    real _t07D1 = 0.1e1;
    vec4 _t07D2 = [_t07CE, _t07CF, _t07D0, _t07D1];
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    vec4 _t07D7 = [_t07D3, _t07D4, _t07D5, _t07D6];
    tensor[4,4] _t07D8 = [_t07C8, _t07CD, _t07D2, _t07D7];
    real _t07D9 = -0.1e1;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.e0;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    real _t07DE = 0.e0;
    real _t07DF = -0.1e1;
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    vec4 _t07E2 = [_t07DE, _t07DF, _t07E0, _t07E1];
    real _t07E3 = 0.e0;
    real _t07E4 = 0.e0;
    real _t07E5 = 0.1e1;
    real _t07E6 = 0.e0;
    vec4 _t07E7 = [_t07E3, _t07E4, _t07E5, _t07E6];
    real _t07E8 = 0.e0;
    real _t07E9 = 0.e0;
    real _t07EA = 0.e0;
    real _t07EB = 0.1e1;
    vec4 _t07EC = [_t07E8, _t07E9, _t07EA, _t07EB];
    tensor[4,4] _t07ED = [_t07DD, _t07E2, _t07E7, _t07EC];
    real _t07EE = 0.e0;
    real _t07EF = 0.1e1;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    real _t07F3 = -0.1e1;
    real _t07F4 = 0.e0;
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    vec4 _t07F7 = [_t07F3, _t07F4, _t07F5, _t07F6];
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    real _t07FA = 0.1e1;
    real _t07FB = 0.e0;
    vec4 _t07FC = [_t07F8, _t07F9, _t07FA, _t07FB];
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    real _t07FF = 0.e0;
    real _t0800 = 0.1e1;
    vec4 _t0801 = [_t07FD, _t07FE, _t07FF, _t0800];
    tensor[4,4] _t0802 = [_t07F2, _t07F7, _t07FC, _t0801];
    real _t0803 = 0.1e1;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.e0;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    real _t0808 = 0.e0;
    real _t0809 = 0.1e1;
    real _t080A = 0.e0;
    real _t080B = 0.e0;
    vec4 _t080C = [_t0808, _t0809, _t080A, _t080B];
    real _t080D = 0.e0;
    real _t080E = 0.e0;
    real _t080F = 0.1e1;
    real _t0810 = 0.e0;
    vec4 _t0811 = [_t080D, _t080E, _t080F, _t0810];
    real _t0812 = 0.e0;
    real _t0813 = 0.e0;
    real _t0814 = 0.e0;
    real _t0815 = 0.1e1;
    vec4 _t0816 = [_t0812, _t0813, _t0814, _t0815];
    tensor[4,4] _t0817 = [_t0807, _t080C, _t0811, _t0816];
    real _t0818 = 0.e0;
    real _t0819 = -0.1e1;
    real _t081A = 0.e0;
    real _t081B = 0.e0;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    real _t081D = 0.1e1;
    real _t081E = 0.e0;
    real _t081F = 0.e0;
    real _t0820 = 0.e0;
    vec4 _t0821 = [_t081D, _t081E, _t081F, _t0820];
    real _t0822 = 0.e0;
    real _t0823 = 0.e0;
    real _t0824 = 0.1e1;
    real _t0825 = 0.e0;
    vec4 _t0826 = [_t0822, _t0823, _t0824, _t0825];
    real _t0827 = 0.e0;
    real _t0828 = 0.e0;
    real _t0829 = 0.e0;
    real _t082A = 0.1e1;
    vec4 _t082B = [_t0827, _t0828, _t0829, _t082A];
    tensor[4,4] _t082C = [_t081C, _t0821, _t0826, _t082B];
    tensor[4,4][6] _t082D = {_t07C3, _t07D8, _t07ED, _t0802, _t0817, _t082C};
    real _t082E = 0.e0;
    real _t082F = -0.1e1;
    real _t0830 = 0.1e1;
    real _t0831 = 0.5e0;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    real _t0833 = 0.e0;
    real _t0834 = -0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    vec4 _t0837 = [_t0833, _t0834, _t0835, _t0836];
    real _t0838 = 0.1e1;
    real _t0839 = 0.e0;
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    vec4 _t083C = [_t0838, _t0839, _t083A, _t083B];
    real _t083D = 0.e0;
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    vec4 _t0841 = [_t083D, _t083E, _t083F, _t0840];
    tensor[4,4] _t0842 = [_t0832, _t0837, _t083C, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = -0.1e1;
    real _t0845 = 0.1e1;
    real _t0846 = 0.5e0;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    real _t0848 = 0.e0;
    real _t0849 = -0.1e1;
    real _t084A = 0.e0;
    real _t084B = 0.e0;
    vec4 _t084C = [_t0848, _t0849, _t084A, _t084B];
    real _t084D = 0.1e1;
    real _t084E = 0.e0;
    real _t084F = 0.e0;
    real _t0850 = 0.1e1;
    vec4 _t0851 = [_t084D, _t084E, _t084F, _t0850];
    real _t0852 = 0.e0;
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    vec4 _t0856 = [_t0852, _t0853, _t0854, _t0855];
    tensor[4,4] _t0857 = [_t0847, _t084C, _t0851, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = -0.1e1;
    real _t085A = 0.e0;
    real _t085B = 0.e0;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    real _t085D = 0.1e1;
    real _t085E = 0.e0;
    real _t085F = 0.e0;
    real _t0860 = 0.e0;
    vec4 _t0861 = [_t085D, _t085E, _t085F, _t0860];
    real _t0862 = 0.e0;
    real _t0863 = 0.e0;
    real _t0864 = 0.1e1;
    real _t0865 = 0.e0;
    vec4 _t0866 = [_t0862, _t0863, _t0864, _t0865];
    real _t0867 = 0.e0;
    real _t0868 = 0.e0;
    real _t0869 = 0.e0;
    real _t086A = 0.1e1;
    vec4 _t086B = [_t0867, _t0868, _t0869, _t086A];
    tensor[4,4] _t086C = [_t085C, _t0861, _t0866, _t086B];
    real _t086D = -0.1e1;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.e0;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    real _t0872 = 0.e0;
    real _t0873 = -0.1e1;
    real _t0874 = 0.e0;
    real _t0875 = 0.e0;
    vec4 _t0876 = [_t0872, _t0873, _t0874, _t0875];
    real _t0877 = 0.e0;
    real _t0878 = 0.e0;
    real _t0879 = 0.1e1;
    real _t087A = 0.e0;
    vec4 _t087B = [_t0877, _t0878, _t0879, _t087A];
    real _t087C = 0.e0;
    real _t087D = 0.e0;
    real _t087E = 0.e0;
    real _t087F = 0.1e1;
    vec4 _t0880 = [_t087C, _t087D, _t087E, _t087F];
    tensor[4,4] _t0881 = [_t0871, _t0876, _t087B, _t0880];
    real _t0882 = 0.e0;
    real _t0883 = 0.1e1;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    vec4 _t0886 = [_t0882, _t0883, _t0884, _t0885];
    real _t0887 = -0.1e1;
    real _t0888 = 0.e0;
    real _t0889 = 0.e0;
    real _t088A = 0.e0;
    vec4 _t088B = [_t0887, _t0888, _t0889, _t088A];
    real _t088C = 0.e0;
    real _t088D = 0.e0;
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    vec4 _t0890 = [_t088C, _t088D, _t088E, _t088F];
    real _t0891 = 0.e0;
    real _t0892 = 0.e0;
    real _t0893 = 0.e0;
    real _t0894 = 0.1e1;
    vec4 _t0895 = [_t0891, _t0892, _t0893, _t0894];
    tensor[4,4] _t0896 = [_t0886, _t088B, _t0890, _t0895];
    real _t0897 = 0.1e1;
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    vec4 _t089B = [_t0897, _t0898, _t0899, _t089A];
    real _t089C = 0.e0;
    real _t089D = 0.1e1;
    real _t089E = 0.e0;
    real _t089F = 0.e0;
    vec4 _t08A0 = [_t089C, _t089D, _t089E, _t089F];
    real _t08A1 = 0.e0;
    real _t08A2 = 0.e0;
    real _t08A3 = 0.1e1;
    real _t08A4 = 0.e0;
    vec4 _t08A5 = [_t08A1, _t08A2, _t08A3, _t08A4];
    real _t08A6 = 0.e0;
    real _t08A7 = 0.e0;
    real _t08A8 = 0.e0;
    real _t08A9 = 0.1e1;
    vec4 _t08AA = [_t08A6, _t08A7, _t08A8, _t08A9];
    tensor[4,4] _t08AB = [_t089B, _t08A0, _t08A5, _t08AA];
    tensor[4,4][6] _t08AC = {_t0842, _t0857, _t086C, _t0881, _t0896, _t08AB};
    tensor[4,4][6][6] _t08AD = {_t0631, _t06B0, _t072F, _t07AE, _t082D, _t08AC};
    real _t08AE = time059F[1];
    int _t08AF = prim $r2i01B7 (_t08AE);
    tensor[4,4][6] _t08B0 = prim $sub01C0<tensor[4,4][6]; %6> (_t08AD, _t08AF);
    real _t08B1 = time059F[1];
    int _t08B2 = prim $r2i01B7 (_t08B1);
    int[2] _t08B3 = func nextCell405A3 (_t08B2, cellId059C, mesh059B);
    int _t08B4 = 1;
    int _t08B5 = prim $sub01C0<int; %2> (_t08B3, _t08B4);
    tensor[4,4] _t08B6 = prim $sub01C0<tensor[4,4]; %6> (_t08B0, _t08B5);
    string _t08B7 = "\n";
    print (_t05A8, _t05AA, _t05AB, _t05B0, _t05B1, _t05B2, _t08B6, _t08B7);
    real _t08B8 = time059F[1];
    int _t08B9 = prim $r2i01B7 (_t08B8);
    int[2] _t08BA = func nextCell405A3 (_t08B9, cellId059C, mesh059B);
    int _t08BB = 0;
    int _t08BC = prim $sub01C0<int; %2> (_t08BA, _t08BB);
    real _t08BD = 0.1e1;
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.1e1;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.e0;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    real _t08C9 = 0.1e1;
    real _t08CA = 0.e0;
    vec4 _t08CB = [_t08C7, _t08C8, _t08C9, _t08CA];
    real _t08CC = 0.e0;
    real _t08CD = 0.e0;
    real _t08CE = 0.e0;
    real _t08CF = 0.1e1;
    vec4 _t08D0 = [_t08CC, _t08CD, _t08CE, _t08CF];
    tensor[4,4] _t08D1 = [_t08C1, _t08C6, _t08CB, _t08D0];
    real _t08D2 = 0.1e1;
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    vec4 _t08D6 = [_t08D2, _t08D3, _t08D4, _t08D5];
    real _t08D7 = 0.e0;
    real _t08D8 = 0.1e1;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    vec4 _t08DB = [_t08D7, _t08D8, _t08D9, _t08DA];
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    real _t08DE = 0.1e1;
    real _t08DF = 0.1e1;
    vec4 _t08E0 = [_t08DC, _t08DD, _t08DE, _t08DF];
    real _t08E1 = 0.e0;
    real _t08E2 = 0.e0;
    real _t08E3 = 0.e0;
    real _t08E4 = 0.1e1;
    vec4 _t08E5 = [_t08E1, _t08E2, _t08E3, _t08E4];
    tensor[4,4] _t08E6 = [_t08D6, _t08DB, _t08E0, _t08E5];
    real _t08E7 = 0.e0;
    real _t08E8 = 0.1e1;
    real _t08E9 = 0.e0;
    real _t08EA = 0.e0;
    vec4 _t08EB = [_t08E7, _t08E8, _t08E9, _t08EA];
    real _t08EC = 0.e0;
    real _t08ED = 0.e0;
    real _t08EE = 0.1e1;
    real _t08EF = 0.e0;
    vec4 _t08F0 = [_t08EC, _t08ED, _t08EE, _t08EF];
    real _t08F1 = 0.1e1;
    real _t08F2 = -0.1e1;
    real _t08F3 = 0.e0;
    real _t08F4 = -0.5e0;
    vec4 _t08F5 = [_t08F1, _t08F2, _t08F3, _t08F4];
    real _t08F6 = 0.e0;
    real _t08F7 = 0.e0;
    real _t08F8 = 0.e0;
    real _t08F9 = 0.1e1;
    vec4 _t08FA = [_t08F6, _t08F7, _t08F8, _t08F9];
    tensor[4,4] _t08FB = [_t08EB, _t08F0, _t08F5, _t08FA];
    real _t08FC = 0.e0;
    real _t08FD = 0.e0;
    real _t08FE = -0.1e1;
    real _t08FF = 0.e0;
    vec4 _t0900 = [_t08FC, _t08FD, _t08FE, _t08FF];
    real _t0901 = 0.e0;
    real _t0902 = 0.1e1;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    vec4 _t0905 = [_t0901, _t0902, _t0903, _t0904];
    real _t0906 = 0.1e1;
    real _t0907 = -0.1e1;
    real _t0908 = 0.e0;
    real _t0909 = -0.5e0;
    vec4 _t090A = [_t0906, _t0907, _t0908, _t0909];
    real _t090B = 0.e0;
    real _t090C = 0.e0;
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    vec4 _t090F = [_t090B, _t090C, _t090D, _t090E];
    tensor[4,4] _t0910 = [_t0900, _t0905, _t090A, _t090F];
    real _t0911 = 0.e0;
    real _t0912 = -0.1e1;
    real _t0913 = 0.e0;
    real _t0914 = 0.e0;
    vec4 _t0915 = [_t0911, _t0912, _t0913, _t0914];
    real _t0916 = 0.e0;
    real _t0917 = 0.e0;
    real _t0918 = -0.1e1;
    real _t0919 = 0.e0;
    vec4 _t091A = [_t0916, _t0917, _t0918, _t0919];
    real _t091B = 0.1e1;
    real _t091C = -0.1e1;
    real _t091D = 0.e0;
    real _t091E = -0.5e0;
    vec4 _t091F = [_t091B, _t091C, _t091D, _t091E];
    real _t0920 = 0.e0;
    real _t0921 = 0.e0;
    real _t0922 = 0.e0;
    real _t0923 = 0.1e1;
    vec4 _t0924 = [_t0920, _t0921, _t0922, _t0923];
    tensor[4,4] _t0925 = [_t0915, _t091A, _t091F, _t0924];
    real _t0926 = 0.e0;
    real _t0927 = 0.e0;
    real _t0928 = 0.1e1;
    real _t0929 = 0.e0;
    vec4 _t092A = [_t0926, _t0927, _t0928, _t0929];
    real _t092B = 0.e0;
    real _t092C = -0.1e1;
    real _t092D = 0.e0;
    real _t092E = 0.e0;
    vec4 _t092F = [_t092B, _t092C, _t092D, _t092E];
    real _t0930 = 0.1e1;
    real _t0931 = -0.1e1;
    real _t0932 = 0.e0;
    real _t0933 = -0.5e0;
    vec4 _t0934 = [_t0930, _t0931, _t0932, _t0933];
    real _t0935 = 0.e0;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    real _t0938 = 0.1e1;
    vec4 _t0939 = [_t0935, _t0936, _t0937, _t0938];
    tensor[4,4] _t093A = [_t092A, _t092F, _t0934, _t0939];
    tensor[4,4][6] _t093B = {_t08D1, _t08E6, _t08FB, _t0910, _t0925, _t093A};
    real _t093C = 0.1e1;
    real _t093D = 0.e0;
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    vec4 _t0940 = [_t093C, _t093D, _t093E, _t093F];
    real _t0941 = 0.e0;
    real _t0942 = 0.1e1;
    real _t0943 = 0.e0;
    real _t0944 = 0.e0;
    vec4 _t0945 = [_t0941, _t0942, _t0943, _t0944];
    real _t0946 = 0.e0;
    real _t0947 = 0.e0;
    real _t0948 = 0.1e1;
    real _t0949 = -0.1e1;
    vec4 _t094A = [_t0946, _t0947, _t0948, _t0949];
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    real _t094D = 0.e0;
    real _t094E = 0.1e1;
    vec4 _t094F = [_t094B, _t094C, _t094D, _t094E];
    tensor[4,4] _t0950 = [_t0940, _t0945, _t094A, _t094F];
    real _t0951 = 0.1e1;
    real _t0952 = 0.e0;
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    vec4 _t0955 = [_t0951, _t0952, _t0953, _t0954];
    real _t0956 = 0.e0;
    real _t0957 = 0.1e1;
    real _t0958 = 0.e0;
    real _t0959 = 0.e0;
    vec4 _t095A = [_t0956, _t0957, _t0958, _t0959];
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    real _t095D = 0.1e1;
    real _t095E = 0.e0;
    vec4 _t095F = [_t095B, _t095C, _t095D, _t095E];
    real _t0960 = 0.e0;
    real _t0961 = 0.e0;
    real _t0962 = 0.e0;
    real _t0963 = 0.1e1;
    vec4 _t0964 = [_t0960, _t0961, _t0962, _t0963];
    tensor[4,4] _t0965 = [_t0955, _t095A, _t095F, _t0964];
    real _t0966 = 0.e0;
    real _t0967 = 0.1e1;
    real _t0968 = 0.e0;
    real _t0969 = 0.e0;
    vec4 _t096A = [_t0966, _t0967, _t0968, _t0969];
    real _t096B = 0.e0;
    real _t096C = 0.e0;
    real _t096D = 0.1e1;
    real _t096E = -0.1e1;
    vec4 _t096F = [_t096B, _t096C, _t096D, _t096E];
    real _t0970 = 0.1e1;
    real _t0971 = -0.1e1;
    real _t0972 = 0.e0;
    real _t0973 = -0.5e0;
    vec4 _t0974 = [_t0970, _t0971, _t0972, _t0973];
    real _t0975 = 0.e0;
    real _t0976 = 0.e0;
    real _t0977 = 0.e0;
    real _t0978 = 0.1e1;
    vec4 _t0979 = [_t0975, _t0976, _t0977, _t0978];
    tensor[4,4] _t097A = [_t096A, _t096F, _t0974, _t0979];
    real _t097B = 0.e0;
    real _t097C = 0.e0;
    real _t097D = -0.1e1;
    real _t097E = 0.1e1;
    vec4 _t097F = [_t097B, _t097C, _t097D, _t097E];
    real _t0980 = 0.e0;
    real _t0981 = 0.1e1;
    real _t0982 = 0.e0;
    real _t0983 = 0.e0;
    vec4 _t0984 = [_t0980, _t0981, _t0982, _t0983];
    real _t0985 = 0.1e1;
    real _t0986 = -0.1e1;
    real _t0987 = 0.e0;
    real _t0988 = -0.5e0;
    vec4 _t0989 = [_t0985, _t0986, _t0987, _t0988];
    real _t098A = 0.e0;
    real _t098B = 0.e0;
    real _t098C = 0.e0;
    real _t098D = 0.1e1;
    vec4 _t098E = [_t098A, _t098B, _t098C, _t098D];
    tensor[4,4] _t098F = [_t097F, _t0984, _t0989, _t098E];
    real _t0990 = 0.e0;
    real _t0991 = -0.1e1;
    real _t0992 = 0.e0;
    real _t0993 = 0.e0;
    vec4 _t0994 = [_t0990, _t0991, _t0992, _t0993];
    real _t0995 = 0.e0;
    real _t0996 = 0.e0;
    real _t0997 = -0.1e1;
    real _t0998 = 0.1e1;
    vec4 _t0999 = [_t0995, _t0996, _t0997, _t0998];
    real _t099A = 0.1e1;
    real _t099B = -0.1e1;
    real _t099C = 0.e0;
    real _t099D = -0.5e0;
    vec4 _t099E = [_t099A, _t099B, _t099C, _t099D];
    real _t099F = 0.e0;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    real _t09A2 = 0.1e1;
    vec4 _t09A3 = [_t099F, _t09A0, _t09A1, _t09A2];
    tensor[4,4] _t09A4 = [_t0994, _t0999, _t099E, _t09A3];
    real _t09A5 = 0.e0;
    real _t09A6 = 0.e0;
    real _t09A7 = 0.1e1;
    real _t09A8 = -0.1e1;
    vec4 _t09A9 = [_t09A5, _t09A6, _t09A7, _t09A8];
    real _t09AA = 0.e0;
    real _t09AB = -0.1e1;
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    vec4 _t09AE = [_t09AA, _t09AB, _t09AC, _t09AD];
    real _t09AF = 0.1e1;
    real _t09B0 = -0.1e1;
    real _t09B1 = 0.e0;
    real _t09B2 = -0.5e0;
    vec4 _t09B3 = [_t09AF, _t09B0, _t09B1, _t09B2];
    real _t09B4 = 0.e0;
    real _t09B5 = 0.e0;
    real _t09B6 = 0.e0;
    real _t09B7 = 0.1e1;
    vec4 _t09B8 = [_t09B4, _t09B5, _t09B6, _t09B7];
    tensor[4,4] _t09B9 = [_t09A9, _t09AE, _t09B3, _t09B8];
    tensor[4,4][6] _t09BA = {_t0950, _t0965, _t097A, _t098F, _t09A4, _t09B9};
    real _t09BB = 0.1e1;
    real _t09BC = 0.e0;
    real _t09BD = 0.1e1;
    real _t09BE = 0.5e0;
    vec4 _t09BF = [_t09BB, _t09BC, _t09BD, _t09BE];
    real _t09C0 = 0.1e1;
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.e0;
    vec4 _t09C4 = [_t09C0, _t09C1, _t09C2, _t09C3];
    real _t09C5 = 0.e0;
    real _t09C6 = 0.1e1;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    vec4 _t09C9 = [_t09C5, _t09C6, _t09C7, _t09C8];
    real _t09CA = 0.e0;
    real _t09CB = 0.e0;
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    vec4 _t09CE = [_t09CA, _t09CB, _t09CC, _t09CD];
    tensor[4,4] _t09CF = [_t09BF, _t09C4, _t09C9, _t09CE];
    real _t09D0 = 0.1e1;
    real _t09D1 = 0.e0;
    real _t09D2 = 0.1e1;
    real _t09D3 = 0.5e0;
    vec4 _t09D4 = [_t09D0, _t09D1, _t09D2, _t09D3];
    real _t09D5 = 0.1e1;
    real _t09D6 = 0.e0;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    vec4 _t09D9 = [_t09D5, _t09D6, _t09D7, _t09D8];
    real _t09DA = 0.e0;
    real _t09DB = 0.1e1;
    real _t09DC = 0.e0;
    real _t09DD = 0.1e1;
    vec4 _t09DE = [_t09DA, _t09DB, _t09DC, _t09DD];
    real _t09DF = 0.e0;
    real _t09E0 = 0.e0;
    real _t09E1 = 0.e0;
    real _t09E2 = 0.1e1;
    vec4 _t09E3 = [_t09DF, _t09E0, _t09E1, _t09E2];
    tensor[4,4] _t09E4 = [_t09D4, _t09D9, _t09DE, _t09E3];
    real _t09E5 = 0.1e1;
    real _t09E6 = 0.e0;
    real _t09E7 = 0.e0;
    real _t09E8 = 0.e0;
    vec4 _t09E9 = [_t09E5, _t09E6, _t09E7, _t09E8];
    real _t09EA = 0.e0;
    real _t09EB = 0.1e1;
    real _t09EC = 0.e0;
    real _t09ED = 0.e0;
    vec4 _t09EE = [_t09EA, _t09EB, _t09EC, _t09ED];
    real _t09EF = 0.e0;
    real _t09F0 = 0.e0;
    real _t09F1 = 0.1e1;
    real _t09F2 = 0.e0;
    vec4 _t09F3 = [_t09EF, _t09F0, _t09F1, _t09F2];
    real _t09F4 = 0.e0;
    real _t09F5 = 0.e0;
    real _t09F6 = 0.e0;
    real _t09F7 = 0.1e1;
    vec4 _t09F8 = [_t09F4, _t09F5, _t09F6, _t09F7];
    tensor[4,4] _t09F9 = [_t09E9, _t09EE, _t09F3, _t09F8];
    real _t09FA = 0.e0;
    real _t09FB = -0.1e1;
    real _t09FC = 0.e0;
    real _t09FD = 0.e0;
    vec4 _t09FE = [_t09FA, _t09FB, _t09FC, _t09FD];
    real _t09FF = 0.1e1;
    real _t0A00 = 0.e0;
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    vec4 _t0A03 = [_t09FF, _t0A00, _t0A01, _t0A02];
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    real _t0A06 = 0.1e1;
    real _t0A07 = 0.e0;
    vec4 _t0A08 = [_t0A04, _t0A05, _t0A06, _t0A07];
    real _t0A09 = 0.e0;
    real _t0A0A = 0.e0;
    real _t0A0B = 0.e0;
    real _t0A0C = 0.1e1;
    vec4 _t0A0D = [_t0A09, _t0A0A, _t0A0B, _t0A0C];
    tensor[4,4] _t0A0E = [_t09FE, _t0A03, _t0A08, _t0A0D];
    real _t0A0F = -0.1e1;
    real _t0A10 = 0.e0;
    real _t0A11 = 0.e0;
    real _t0A12 = 0.e0;
    vec4 _t0A13 = [_t0A0F, _t0A10, _t0A11, _t0A12];
    real _t0A14 = 0.e0;
    real _t0A15 = -0.1e1;
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    vec4 _t0A18 = [_t0A14, _t0A15, _t0A16, _t0A17];
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    real _t0A1B = 0.1e1;
    real _t0A1C = 0.e0;
    vec4 _t0A1D = [_t0A19, _t0A1A, _t0A1B, _t0A1C];
    real _t0A1E = 0.e0;
    real _t0A1F = 0.e0;
    real _t0A20 = 0.e0;
    real _t0A21 = 0.1e1;
    vec4 _t0A22 = [_t0A1E, _t0A1F, _t0A20, _t0A21];
    tensor[4,4] _t0A23 = [_t0A13, _t0A18, _t0A1D, _t0A22];
    real _t0A24 = 0.e0;
    real _t0A25 = 0.1e1;
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    vec4 _t0A28 = [_t0A24, _t0A25, _t0A26, _t0A27];
    real _t0A29 = -0.1e1;
    real _t0A2A = 0.e0;
    real _t0A2B = 0.e0;
    real _t0A2C = 0.e0;
    vec4 _t0A2D = [_t0A29, _t0A2A, _t0A2B, _t0A2C];
    real _t0A2E = 0.e0;
    real _t0A2F = 0.e0;
    real _t0A30 = 0.1e1;
    real _t0A31 = 0.e0;
    vec4 _t0A32 = [_t0A2E, _t0A2F, _t0A30, _t0A31];
    real _t0A33 = 0.e0;
    real _t0A34 = 0.e0;
    real _t0A35 = 0.e0;
    real _t0A36 = 0.1e1;
    vec4 _t0A37 = [_t0A33, _t0A34, _t0A35, _t0A36];
    tensor[4,4] _t0A38 = [_t0A28, _t0A2D, _t0A32, _t0A37];
    tensor[4,4][6] _t0A39 = {_t09CF, _t09E4, _t09F9, _t0A0E, _t0A23, _t0A38};
    real _t0A3A = 0.e0;
    real _t0A3B = 0.1e1;
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.5e0;
    vec4 _t0A3E = [_t0A3A, _t0A3B, _t0A3C, _t0A3D];
    real _t0A3F = 0.e0;
    real _t0A40 = 0.1e1;
    real _t0A41 = 0.e0;
    real _t0A42 = 0.e0;
    vec4 _t0A43 = [_t0A3F, _t0A40, _t0A41, _t0A42];
    real _t0A44 = -0.1e1;
    real _t0A45 = 0.e0;
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    vec4 _t0A48 = [_t0A44, _t0A45, _t0A46, _t0A47];
    real _t0A49 = 0.e0;
    real _t0A4A = 0.e0;
    real _t0A4B = 0.e0;
    real _t0A4C = 0.1e1;
    vec4 _t0A4D = [_t0A49, _t0A4A, _t0A4B, _t0A4C];
    tensor[4,4] _t0A4E = [_t0A3E, _t0A43, _t0A48, _t0A4D];
    real _t0A4F = 0.e0;
    real _t0A50 = 0.1e1;
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.5e0;
    vec4 _t0A53 = [_t0A4F, _t0A50, _t0A51, _t0A52];
    real _t0A54 = 0.e0;
    real _t0A55 = 0.1e1;
    real _t0A56 = 0.e0;
    real _t0A57 = 0.e0;
    vec4 _t0A58 = [_t0A54, _t0A55, _t0A56, _t0A57];
    real _t0A59 = -0.1e1;
    real _t0A5A = 0.e0;
    real _t0A5B = 0.e0;
    real _t0A5C = 0.1e1;
    vec4 _t0A5D = [_t0A59, _t0A5A, _t0A5B, _t0A5C];
    real _t0A5E = 0.e0;
    real _t0A5F = 0.e0;
    real _t0A60 = 0.e0;
    real _t0A61 = 0.1e1;
    vec4 _t0A62 = [_t0A5E, _t0A5F, _t0A60, _t0A61];
    tensor[4,4] _t0A63 = [_t0A53, _t0A58, _t0A5D, _t0A62];
    real _t0A64 = 0.e0;
    real _t0A65 = 0.1e1;
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    vec4 _t0A68 = [_t0A64, _t0A65, _t0A66, _t0A67];
    real _t0A69 = -0.1e1;
    real _t0A6A = 0.e0;
    real _t0A6B = 0.e0;
    real _t0A6C = 0.e0;
    vec4 _t0A6D = [_t0A69, _t0A6A, _t0A6B, _t0A6C];
    real _t0A6E = 0.e0;
    real _t0A6F = 0.e0;
    real _t0A70 = 0.1e1;
    real _t0A71 = 0.e0;
    vec4 _t0A72 = [_t0A6E, _t0A6F, _t0A70, _t0A71];
    real _t0A73 = 0.e0;
    real _t0A74 = 0.e0;
    real _t0A75 = 0.e0;
    real _t0A76 = 0.1e1;
    vec4 _t0A77 = [_t0A73, _t0A74, _t0A75, _t0A76];
    tensor[4,4] _t0A78 = [_t0A68, _t0A6D, _t0A72, _t0A77];
    real _t0A79 = 0.1e1;
    real _t0A7A = 0.e0;
    real _t0A7B = 0.e0;
    real _t0A7C = 0.e0;
    vec4 _t0A7D = [_t0A79, _t0A7A, _t0A7B, _t0A7C];
    real _t0A7E = 0.e0;
    real _t0A7F = 0.1e1;
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    vec4 _t0A82 = [_t0A7E, _t0A7F, _t0A80, _t0A81];
    real _t0A83 = 0.e0;
    real _t0A84 = 0.e0;
    real _t0A85 = 0.1e1;
    real _t0A86 = 0.e0;
    vec4 _t0A87 = [_t0A83, _t0A84, _t0A85, _t0A86];
    real _t0A88 = 0.e0;
    real _t0A89 = 0.e0;
    real _t0A8A = 0.e0;
    real _t0A8B = 0.1e1;
    vec4 _t0A8C = [_t0A88, _t0A89, _t0A8A, _t0A8B];
    tensor[4,4] _t0A8D = [_t0A7D, _t0A82, _t0A87, _t0A8C];
    real _t0A8E = 0.e0;
    real _t0A8F = -0.1e1;
    real _t0A90 = 0.e0;
    real _t0A91 = 0.e0;
    vec4 _t0A92 = [_t0A8E, _t0A8F, _t0A90, _t0A91];
    real _t0A93 = 0.1e1;
    real _t0A94 = 0.e0;
    real _t0A95 = 0.e0;
    real _t0A96 = 0.e0;
    vec4 _t0A97 = [_t0A93, _t0A94, _t0A95, _t0A96];
    real _t0A98 = 0.e0;
    real _t0A99 = 0.e0;
    real _t0A9A = 0.1e1;
    real _t0A9B = 0.e0;
    vec4 _t0A9C = [_t0A98, _t0A99, _t0A9A, _t0A9B];
    real _t0A9D = 0.e0;
    real _t0A9E = 0.e0;
    real _t0A9F = 0.e0;
    real _t0AA0 = 0.1e1;
    vec4 _t0AA1 = [_t0A9D, _t0A9E, _t0A9F, _t0AA0];
    tensor[4,4] _t0AA2 = [_t0A92, _t0A97, _t0A9C, _t0AA1];
    real _t0AA3 = -0.1e1;
    real _t0AA4 = 0.e0;
    real _t0AA5 = 0.e0;
    real _t0AA6 = 0.e0;
    vec4 _t0AA7 = [_t0AA3, _t0AA4, _t0AA5, _t0AA6];
    real _t0AA8 = 0.e0;
    real _t0AA9 = -0.1e1;
    real _t0AAA = 0.e0;
    real _t0AAB = 0.e0;
    vec4 _t0AAC = [_t0AA8, _t0AA9, _t0AAA, _t0AAB];
    real _t0AAD = 0.e0;
    real _t0AAE = 0.e0;
    real _t0AAF = 0.1e1;
    real _t0AB0 = 0.e0;
    vec4 _t0AB1 = [_t0AAD, _t0AAE, _t0AAF, _t0AB0];
    real _t0AB2 = 0.e0;
    real _t0AB3 = 0.e0;
    real _t0AB4 = 0.e0;
    real _t0AB5 = 0.1e1;
    vec4 _t0AB6 = [_t0AB2, _t0AB3, _t0AB4, _t0AB5];
    tensor[4,4] _t0AB7 = [_t0AA7, _t0AAC, _t0AB1, _t0AB6];
    tensor[4,4][6] _t0AB8 = {_t0A4E, _t0A63, _t0A78, _t0A8D, _t0AA2, _t0AB7};
    real _t0AB9 = -0.1e1;
    real _t0ABA = 0.e0;
    real _t0ABB = 0.1e1;
    real _t0ABC = 0.5e0;
    vec4 _t0ABD = [_t0AB9, _t0ABA, _t0ABB, _t0ABC];
    real _t0ABE = -0.1e1;
    real _t0ABF = 0.e0;
    real _t0AC0 = 0.e0;
    real _t0AC1 = 0.e0;
    vec4 _t0AC2 = [_t0ABE, _t0ABF, _t0AC0, _t0AC1];
    real _t0AC3 = 0.e0;
    real _t0AC4 = -0.1e1;
    real _t0AC5 = 0.e0;
    real _t0AC6 = 0.e0;
    vec4 _t0AC7 = [_t0AC3, _t0AC4, _t0AC5, _t0AC6];
    real _t0AC8 = 0.e0;
    real _t0AC9 = 0.e0;
    real _t0ACA = 0.e0;
    real _t0ACB = 0.1e1;
    vec4 _t0ACC = [_t0AC8, _t0AC9, _t0ACA, _t0ACB];
    tensor[4,4] _t0ACD = [_t0ABD, _t0AC2, _t0AC7, _t0ACC];
    real _t0ACE = -0.1e1;
    real _t0ACF = 0.e0;
    real _t0AD0 = 0.1e1;
    real _t0AD1 = 0.5e0;
    vec4 _t0AD2 = [_t0ACE, _t0ACF, _t0AD0, _t0AD1];
    real _t0AD3 = -0.1e1;
    real _t0AD4 = 0.e0;
    real _t0AD5 = 0.e0;
    real _t0AD6 = 0.e0;
    vec4 _t0AD7 = [_t0AD3, _t0AD4, _t0AD5, _t0AD6];
    real _t0AD8 = 0.e0;
    real _t0AD9 = -0.1e1;
    real _t0ADA = 0.e0;
    real _t0ADB = 0.1e1;
    vec4 _t0ADC = [_t0AD8, _t0AD9, _t0ADA, _t0ADB];
    real _t0ADD = 0.e0;
    real _t0ADE = 0.e0;
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.1e1;
    vec4 _t0AE1 = [_t0ADD, _t0ADE, _t0ADF, _t0AE0];
    tensor[4,4] _t0AE2 = [_t0AD2, _t0AD7, _t0ADC, _t0AE1];
    real _t0AE3 = -0.1e1;
    real _t0AE4 = 0.e0;
    real _t0AE5 = 0.e0;
    real _t0AE6 = 0.e0;
    vec4 _t0AE7 = [_t0AE3, _t0AE4, _t0AE5, _t0AE6];
    real _t0AE8 = 0.e0;
    real _t0AE9 = -0.1e1;
    real _t0AEA = 0.e0;
    real _t0AEB = 0.e0;
    vec4 _t0AEC = [_t0AE8, _t0AE9, _t0AEA, _t0AEB];
    real _t0AED = 0.e0;
    real _t0AEE = 0.e0;
    real _t0AEF = 0.1e1;
    real _t0AF0 = 0.e0;
    vec4 _t0AF1 = [_t0AED, _t0AEE, _t0AEF, _t0AF0];
    real _t0AF2 = 0.e0;
    real _t0AF3 = 0.e0;
    real _t0AF4 = 0.e0;
    real _t0AF5 = 0.1e1;
    vec4 _t0AF6 = [_t0AF2, _t0AF3, _t0AF4, _t0AF5];
    tensor[4,4] _t0AF7 = [_t0AE7, _t0AEC, _t0AF1, _t0AF6];
    real _t0AF8 = 0.e0;
    real _t0AF9 = 0.1e1;
    real _t0AFA = 0.e0;
    real _t0AFB = 0.e0;
    vec4 _t0AFC = [_t0AF8, _t0AF9, _t0AFA, _t0AFB];
    real _t0AFD = -0.1e1;
    real _t0AFE = 0.e0;
    real _t0AFF = 0.e0;
    real _t0B00 = 0.e0;
    vec4 _t0B01 = [_t0AFD, _t0AFE, _t0AFF, _t0B00];
    real _t0B02 = 0.e0;
    real _t0B03 = 0.e0;
    real _t0B04 = 0.1e1;
    real _t0B05 = 0.e0;
    vec4 _t0B06 = [_t0B02, _t0B03, _t0B04, _t0B05];
    real _t0B07 = 0.e0;
    real _t0B08 = 0.e0;
    real _t0B09 = 0.e0;
    real _t0B0A = 0.1e1;
    vec4 _t0B0B = [_t0B07, _t0B08, _t0B09, _t0B0A];
    tensor[4,4] _t0B0C = [_t0AFC, _t0B01, _t0B06, _t0B0B];
    real _t0B0D = 0.1e1;
    real _t0B0E = 0.e0;
    real _t0B0F = 0.e0;
    real _t0B10 = 0.e0;
    vec4 _t0B11 = [_t0B0D, _t0B0E, _t0B0F, _t0B10];
    real _t0B12 = 0.e0;
    real _t0B13 = 0.1e1;
    real _t0B14 = 0.e0;
    real _t0B15 = 0.e0;
    vec4 _t0B16 = [_t0B12, _t0B13, _t0B14, _t0B15];
    real _t0B17 = 0.e0;
    real _t0B18 = 0.e0;
    real _t0B19 = 0.1e1;
    real _t0B1A = 0.e0;
    vec4 _t0B1B = [_t0B17, _t0B18, _t0B19, _t0B1A];
    real _t0B1C = 0.e0;
    real _t0B1D = 0.e0;
    real _t0B1E = 0.e0;
    real _t0B1F = 0.1e1;
    vec4 _t0B20 = [_t0B1C, _t0B1D, _t0B1E, _t0B1F];
    tensor[4,4] _t0B21 = [_t0B11, _t0B16, _t0B1B, _t0B20];
    real _t0B22 = 0.e0;
    real _t0B23 = -0.1e1;
    real _t0B24 = 0.e0;
    real _t0B25 = 0.e0;
    vec4 _t0B26 = [_t0B22, _t0B23, _t0B24, _t0B25];
    real _t0B27 = 0.1e1;
    real _t0B28 = 0.e0;
    real _t0B29 = 0.e0;
    real _t0B2A = 0.e0;
    vec4 _t0B2B = [_t0B27, _t0B28, _t0B29, _t0B2A];
    real _t0B2C = 0.e0;
    real _t0B2D = 0.e0;
    real _t0B2E = 0.1e1;
    real _t0B2F = 0.e0;
    vec4 _t0B30 = [_t0B2C, _t0B2D, _t0B2E, _t0B2F];
    real _t0B31 = 0.e0;
    real _t0B32 = 0.e0;
    real _t0B33 = 0.e0;
    real _t0B34 = 0.1e1;
    vec4 _t0B35 = [_t0B31, _t0B32, _t0B33, _t0B34];
    tensor[4,4] _t0B36 = [_t0B26, _t0B2B, _t0B30, _t0B35];
    tensor[4,4][6] _t0B37 = {_t0ACD, _t0AE2, _t0AF7, _t0B0C, _t0B21, _t0B36};
    real _t0B38 = 0.e0;
    real _t0B39 = -0.1e1;
    real _t0B3A = 0.1e1;
    real _t0B3B = 0.5e0;
    vec4 _t0B3C = [_t0B38, _t0B39, _t0B3A, _t0B3B];
    real _t0B3D = 0.e0;
    real _t0B3E = -0.1e1;
    real _t0B3F = 0.e0;
    real _t0B40 = 0.e0;
    vec4 _t0B41 = [_t0B3D, _t0B3E, _t0B3F, _t0B40];
    real _t0B42 = 0.1e1;
    real _t0B43 = 0.e0;
    real _t0B44 = 0.e0;
    real _t0B45 = 0.e0;
    vec4 _t0B46 = [_t0B42, _t0B43, _t0B44, _t0B45];
    real _t0B47 = 0.e0;
    real _t0B48 = 0.e0;
    real _t0B49 = 0.e0;
    real _t0B4A = 0.1e1;
    vec4 _t0B4B = [_t0B47, _t0B48, _t0B49, _t0B4A];
    tensor[4,4] _t0B4C = [_t0B3C, _t0B41, _t0B46, _t0B4B];
    real _t0B4D = 0.e0;
    real _t0B4E = -0.1e1;
    real _t0B4F = 0.1e1;
    real _t0B50 = 0.5e0;
    vec4 _t0B51 = [_t0B4D, _t0B4E, _t0B4F, _t0B50];
    real _t0B52 = 0.e0;
    real _t0B53 = -0.1e1;
    real _t0B54 = 0.e0;
    real _t0B55 = 0.e0;
    vec4 _t0B56 = [_t0B52, _t0B53, _t0B54, _t0B55];
    real _t0B57 = 0.1e1;
    real _t0B58 = 0.e0;
    real _t0B59 = 0.e0;
    real _t0B5A = 0.1e1;
    vec4 _t0B5B = [_t0B57, _t0B58, _t0B59, _t0B5A];
    real _t0B5C = 0.e0;
    real _t0B5D = 0.e0;
    real _t0B5E = 0.e0;
    real _t0B5F = 0.1e1;
    vec4 _t0B60 = [_t0B5C, _t0B5D, _t0B5E, _t0B5F];
    tensor[4,4] _t0B61 = [_t0B51, _t0B56, _t0B5B, _t0B60];
    real _t0B62 = 0.e0;
    real _t0B63 = -0.1e1;
    real _t0B64 = 0.e0;
    real _t0B65 = 0.e0;
    vec4 _t0B66 = [_t0B62, _t0B63, _t0B64, _t0B65];
    real _t0B67 = 0.1e1;
    real _t0B68 = 0.e0;
    real _t0B69 = 0.e0;
    real _t0B6A = 0.e0;
    vec4 _t0B6B = [_t0B67, _t0B68, _t0B69, _t0B6A];
    real _t0B6C = 0.e0;
    real _t0B6D = 0.e0;
    real _t0B6E = 0.1e1;
    real _t0B6F = 0.e0;
    vec4 _t0B70 = [_t0B6C, _t0B6D, _t0B6E, _t0B6F];
    real _t0B71 = 0.e0;
    real _t0B72 = 0.e0;
    real _t0B73 = 0.e0;
    real _t0B74 = 0.1e1;
    vec4 _t0B75 = [_t0B71, _t0B72, _t0B73, _t0B74];
    tensor[4,4] _t0B76 = [_t0B66, _t0B6B, _t0B70, _t0B75];
    real _t0B77 = -0.1e1;
    real _t0B78 = 0.e0;
    real _t0B79 = 0.e0;
    real _t0B7A = 0.e0;
    vec4 _t0B7B = [_t0B77, _t0B78, _t0B79, _t0B7A];
    real _t0B7C = 0.e0;
    real _t0B7D = -0.1e1;
    real _t0B7E = 0.e0;
    real _t0B7F = 0.e0;
    vec4 _t0B80 = [_t0B7C, _t0B7D, _t0B7E, _t0B7F];
    real _t0B81 = 0.e0;
    real _t0B82 = 0.e0;
    real _t0B83 = 0.1e1;
    real _t0B84 = 0.e0;
    vec4 _t0B85 = [_t0B81, _t0B82, _t0B83, _t0B84];
    real _t0B86 = 0.e0;
    real _t0B87 = 0.e0;
    real _t0B88 = 0.e0;
    real _t0B89 = 0.1e1;
    vec4 _t0B8A = [_t0B86, _t0B87, _t0B88, _t0B89];
    tensor[4,4] _t0B8B = [_t0B7B, _t0B80, _t0B85, _t0B8A];
    real _t0B8C = 0.e0;
    real _t0B8D = 0.1e1;
    real _t0B8E = 0.e0;
    real _t0B8F = 0.e0;
    vec4 _t0B90 = [_t0B8C, _t0B8D, _t0B8E, _t0B8F];
    real _t0B91 = -0.1e1;
    real _t0B92 = 0.e0;
    real _t0B93 = 0.e0;
    real _t0B94 = 0.e0;
    vec4 _t0B95 = [_t0B91, _t0B92, _t0B93, _t0B94];
    real _t0B96 = 0.e0;
    real _t0B97 = 0.e0;
    real _t0B98 = 0.1e1;
    real _t0B99 = 0.e0;
    vec4 _t0B9A = [_t0B96, _t0B97, _t0B98, _t0B99];
    real _t0B9B = 0.e0;
    real _t0B9C = 0.e0;
    real _t0B9D = 0.e0;
    real _t0B9E = 0.1e1;
    vec4 _t0B9F = [_t0B9B, _t0B9C, _t0B9D, _t0B9E];
    tensor[4,4] _t0BA0 = [_t0B90, _t0B95, _t0B9A, _t0B9F];
    real _t0BA1 = 0.1e1;
    real _t0BA2 = 0.e0;
    real _t0BA3 = 0.e0;
    real _t0BA4 = 0.e0;
    vec4 _t0BA5 = [_t0BA1, _t0BA2, _t0BA3, _t0BA4];
    real _t0BA6 = 0.e0;
    real _t0BA7 = 0.1e1;
    real _t0BA8 = 0.e0;
    real _t0BA9 = 0.e0;
    vec4 _t0BAA = [_t0BA6, _t0BA7, _t0BA8, _t0BA9];
    real _t0BAB = 0.e0;
    real _t0BAC = 0.e0;
    real _t0BAD = 0.1e1;
    real _t0BAE = 0.e0;
    vec4 _t0BAF = [_t0BAB, _t0BAC, _t0BAD, _t0BAE];
    real _t0BB0 = 0.e0;
    real _t0BB1 = 0.e0;
    real _t0BB2 = 0.e0;
    real _t0BB3 = 0.1e1;
    vec4 _t0BB4 = [_t0BB0, _t0BB1, _t0BB2, _t0BB3];
    tensor[4,4] _t0BB5 = [_t0BA5, _t0BAA, _t0BAF, _t0BB4];
    tensor[4,4][6] _t0BB6 = {_t0B4C, _t0B61, _t0B76, _t0B8B, _t0BA0, _t0BB5};
    tensor[4,4][6][6] _t0BB7 = {_t093B, _t09BA, _t0A39, _t0AB8, _t0B37, _t0BB6};
    real _t0BB8 = time059F[1];
    int _t0BB9 = prim $r2i01B7 (_t0BB8);
    tensor[4,4][6] _t0BBA = prim $sub01C0<tensor[4,4][6]; %6> (_t0BB7, _t0BB9);
    real _t0BBB = time059F[1];
    int _t0BBC = prim $r2i01B7 (_t0BBB);
    int[2] _t0BBD = func nextCell405A3 (_t0BBC, cellId059C, mesh059B);
    int _t0BBE = 1;
    int _t0BBF = prim $sub01C0<int; %2> (_t0BBD, _t0BBE);
    tensor[4,4] _t0BC0 = prim $sub01C0<tensor[4,4]; %6> (_t0BBA, _t0BBF);
    real _t0BC1 = time059F[0];
    vec3 _t0BC2 = prim *0036<$[3]> (_t0BC1, dPos059E);
    vec3 _t0BC3 = prim +0017<$[3]> (_t0BC2, refPos059D);
    real _t0BC4 = _t0BC3[0];
    real _t0BC5 = time059F[0];
    vec3 _t0BC6 = prim *0036<$[3]> (_t0BC5, dPos059E);
    vec3 _t0BC7 = prim +0017<$[3]> (_t0BC6, refPos059D);
    real _t0BC8 = _t0BC7[1];
    real _t0BC9 = time059F[0];
    vec3 _t0BCA = prim *0036<$[3]> (_t0BC9, dPos059E);
    vec3 _t0BCB = prim +0017<$[3]> (_t0BCA, refPos059D);
    real _t0BCC = _t0BCB[2];
    real _t0BCD = 0.1e1;
    vec4 _t0BCE = [_t0BC4, _t0BC8, _t0BCC, _t0BCD];
    vec4 _t0BCF = prim •00CE<$[4,4]; $[4]; $[4]> (_t0BC0, _t0BCE);
    real _t0BD0 = _t0BCF[0];
    real _t0BD1 = 0.1e1;
    real _t0BD2 = 0.e0;
    real _t0BD3 = 0.e0;
    real _t0BD4 = 0.e0;
    vec4 _t0BD5 = [_t0BD1, _t0BD2, _t0BD3, _t0BD4];
    real _t0BD6 = 0.e0;
    real _t0BD7 = 0.1e1;
    real _t0BD8 = 0.e0;
    real _t0BD9 = 0.e0;
    vec4 _t0BDA = [_t0BD6, _t0BD7, _t0BD8, _t0BD9];
    real _t0BDB = 0.e0;
    real _t0BDC = 0.e0;
    real _t0BDD = 0.1e1;
    real _t0BDE = 0.e0;
    vec4 _t0BDF = [_t0BDB, _t0BDC, _t0BDD, _t0BDE];
    real _t0BE0 = 0.e0;
    real _t0BE1 = 0.e0;
    real _t0BE2 = 0.e0;
    real _t0BE3 = 0.1e1;
    vec4 _t0BE4 = [_t0BE0, _t0BE1, _t0BE2, _t0BE3];
    tensor[4,4] _t0BE5 = [_t0BD5, _t0BDA, _t0BDF, _t0BE4];
    real _t0BE6 = 0.1e1;
    real _t0BE7 = 0.e0;
    real _t0BE8 = 0.e0;
    real _t0BE9 = 0.e0;
    vec4 _t0BEA = [_t0BE6, _t0BE7, _t0BE8, _t0BE9];
    real _t0BEB = 0.e0;
    real _t0BEC = 0.1e1;
    real _t0BED = 0.e0;
    real _t0BEE = 0.e0;
    vec4 _t0BEF = [_t0BEB, _t0BEC, _t0BED, _t0BEE];
    real _t0BF0 = 0.e0;
    real _t0BF1 = 0.e0;
    real _t0BF2 = 0.1e1;
    real _t0BF3 = 0.1e1;
    vec4 _t0BF4 = [_t0BF0, _t0BF1, _t0BF2, _t0BF3];
    real _t0BF5 = 0.e0;
    real _t0BF6 = 0.e0;
    real _t0BF7 = 0.e0;
    real _t0BF8 = 0.1e1;
    vec4 _t0BF9 = [_t0BF5, _t0BF6, _t0BF7, _t0BF8];
    tensor[4,4] _t0BFA = [_t0BEA, _t0BEF, _t0BF4, _t0BF9];
    real _t0BFB = 0.e0;
    real _t0BFC = 0.1e1;
    real _t0BFD = 0.e0;
    real _t0BFE = 0.e0;
    vec4 _t0BFF = [_t0BFB, _t0BFC, _t0BFD, _t0BFE];
    real _t0C00 = 0.e0;
    real _t0C01 = 0.e0;
    real _t0C02 = 0.1e1;
    real _t0C03 = 0.e0;
    vec4 _t0C04 = [_t0C00, _t0C01, _t0C02, _t0C03];
    real _t0C05 = 0.1e1;
    real _t0C06 = -0.1e1;
    real _t0C07 = 0.e0;
    real _t0C08 = -0.5e0;
    vec4 _t0C09 = [_t0C05, _t0C06, _t0C07, _t0C08];
    real _t0C0A = 0.e0;
    real _t0C0B = 0.e0;
    real _t0C0C = 0.e0;
    real _t0C0D = 0.1e1;
    vec4 _t0C0E = [_t0C0A, _t0C0B, _t0C0C, _t0C0D];
    tensor[4,4] _t0C0F = [_t0BFF, _t0C04, _t0C09, _t0C0E];
    real _t0C10 = 0.e0;
    real _t0C11 = 0.e0;
    real _t0C12 = -0.1e1;
    real _t0C13 = 0.e0;
    vec4 _t0C14 = [_t0C10, _t0C11, _t0C12, _t0C13];
    real _t0C15 = 0.e0;
    real _t0C16 = 0.1e1;
    real _t0C17 = 0.e0;
    real _t0C18 = 0.e0;
    vec4 _t0C19 = [_t0C15, _t0C16, _t0C17, _t0C18];
    real _t0C1A = 0.1e1;
    real _t0C1B = -0.1e1;
    real _t0C1C = 0.e0;
    real _t0C1D = -0.5e0;
    vec4 _t0C1E = [_t0C1A, _t0C1B, _t0C1C, _t0C1D];
    real _t0C1F = 0.e0;
    real _t0C20 = 0.e0;
    real _t0C21 = 0.e0;
    real _t0C22 = 0.1e1;
    vec4 _t0C23 = [_t0C1F, _t0C20, _t0C21, _t0C22];
    tensor[4,4] _t0C24 = [_t0C14, _t0C19, _t0C1E, _t0C23];
    real _t0C25 = 0.e0;
    real _t0C26 = -0.1e1;
    real _t0C27 = 0.e0;
    real _t0C28 = 0.e0;
    vec4 _t0C29 = [_t0C25, _t0C26, _t0C27, _t0C28];
    real _t0C2A = 0.e0;
    real _t0C2B = 0.e0;
    real _t0C2C = -0.1e1;
    real _t0C2D = 0.e0;
    vec4 _t0C2E = [_t0C2A, _t0C2B, _t0C2C, _t0C2D];
    real _t0C2F = 0.1e1;
    real _t0C30 = -0.1e1;
    real _t0C31 = 0.e0;
    real _t0C32 = -0.5e0;
    vec4 _t0C33 = [_t0C2F, _t0C30, _t0C31, _t0C32];
    real _t0C34 = 0.e0;
    real _t0C35 = 0.e0;
    real _t0C36 = 0.e0;
    real _t0C37 = 0.1e1;
    vec4 _t0C38 = [_t0C34, _t0C35, _t0C36, _t0C37];
    tensor[4,4] _t0C39 = [_t0C29, _t0C2E, _t0C33, _t0C38];
    real _t0C3A = 0.e0;
    real _t0C3B = 0.e0;
    real _t0C3C = 0.1e1;
    real _t0C3D = 0.e0;
    vec4 _t0C3E = [_t0C3A, _t0C3B, _t0C3C, _t0C3D];
    real _t0C3F = 0.e0;
    real _t0C40 = -0.1e1;
    real _t0C41 = 0.e0;
    real _t0C42 = 0.e0;
    vec4 _t0C43 = [_t0C3F, _t0C40, _t0C41, _t0C42];
    real _t0C44 = 0.1e1;
    real _t0C45 = -0.1e1;
    real _t0C46 = 0.e0;
    real _t0C47 = -0.5e0;
    vec4 _t0C48 = [_t0C44, _t0C45, _t0C46, _t0C47];
    real _t0C49 = 0.e0;
    real _t0C4A = 0.e0;
    real _t0C4B = 0.e0;
    real _t0C4C = 0.1e1;
    vec4 _t0C4D = [_t0C49, _t0C4A, _t0C4B, _t0C4C];
    tensor[4,4] _t0C4E = [_t0C3E, _t0C43, _t0C48, _t0C4D];
    tensor[4,4][6] _t0C4F = {_t0BE5, _t0BFA, _t0C0F, _t0C24, _t0C39, _t0C4E};
    real _t0C50 = 0.1e1;
    real _t0C51 = 0.e0;
    real _t0C52 = 0.e0;
    real _t0C53 = 0.e0;
    vec4 _t0C54 = [_t0C50, _t0C51, _t0C52, _t0C53];
    real _t0C55 = 0.e0;
    real _t0C56 = 0.1e1;
    real _t0C57 = 0.e0;
    real _t0C58 = 0.e0;
    vec4 _t0C59 = [_t0C55, _t0C56, _t0C57, _t0C58];
    real _t0C5A = 0.e0;
    real _t0C5B = 0.e0;
    real _t0C5C = 0.1e1;
    real _t0C5D = -0.1e1;
    vec4 _t0C5E = [_t0C5A, _t0C5B, _t0C5C, _t0C5D];
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    real _t0C61 = 0.e0;
    real _t0C62 = 0.1e1;
    vec4 _t0C63 = [_t0C5F, _t0C60, _t0C61, _t0C62];
    tensor[4,4] _t0C64 = [_t0C54, _t0C59, _t0C5E, _t0C63];
    real _t0C65 = 0.1e1;
    real _t0C66 = 0.e0;
    real _t0C67 = 0.e0;
    real _t0C68 = 0.e0;
    vec4 _t0C69 = [_t0C65, _t0C66, _t0C67, _t0C68];
    real _t0C6A = 0.e0;
    real _t0C6B = 0.1e1;
    real _t0C6C = 0.e0;
    real _t0C6D = 0.e0;
    vec4 _t0C6E = [_t0C6A, _t0C6B, _t0C6C, _t0C6D];
    real _t0C6F = 0.e0;
    real _t0C70 = 0.e0;
    real _t0C71 = 0.1e1;
    real _t0C72 = 0.e0;
    vec4 _t0C73 = [_t0C6F, _t0C70, _t0C71, _t0C72];
    real _t0C74 = 0.e0;
    real _t0C75 = 0.e0;
    real _t0C76 = 0.e0;
    real _t0C77 = 0.1e1;
    vec4 _t0C78 = [_t0C74, _t0C75, _t0C76, _t0C77];
    tensor[4,4] _t0C79 = [_t0C69, _t0C6E, _t0C73, _t0C78];
    real _t0C7A = 0.e0;
    real _t0C7B = 0.1e1;
    real _t0C7C = 0.e0;
    real _t0C7D = 0.e0;
    vec4 _t0C7E = [_t0C7A, _t0C7B, _t0C7C, _t0C7D];
    real _t0C7F = 0.e0;
    real _t0C80 = 0.e0;
    real _t0C81 = 0.1e1;
    real _t0C82 = -0.1e1;
    vec4 _t0C83 = [_t0C7F, _t0C80, _t0C81, _t0C82];
    real _t0C84 = 0.1e1;
    real _t0C85 = -0.1e1;
    real _t0C86 = 0.e0;
    real _t0C87 = -0.5e0;
    vec4 _t0C88 = [_t0C84, _t0C85, _t0C86, _t0C87];
    real _t0C89 = 0.e0;
    real _t0C8A = 0.e0;
    real _t0C8B = 0.e0;
    real _t0C8C = 0.1e1;
    vec4 _t0C8D = [_t0C89, _t0C8A, _t0C8B, _t0C8C];
    tensor[4,4] _t0C8E = [_t0C7E, _t0C83, _t0C88, _t0C8D];
    real _t0C8F = 0.e0;
    real _t0C90 = 0.e0;
    real _t0C91 = -0.1e1;
    real _t0C92 = 0.1e1;
    vec4 _t0C93 = [_t0C8F, _t0C90, _t0C91, _t0C92];
    real _t0C94 = 0.e0;
    real _t0C95 = 0.1e1;
    real _t0C96 = 0.e0;
    real _t0C97 = 0.e0;
    vec4 _t0C98 = [_t0C94, _t0C95, _t0C96, _t0C97];
    real _t0C99 = 0.1e1;
    real _t0C9A = -0.1e1;
    real _t0C9B = 0.e0;
    real _t0C9C = -0.5e0;
    vec4 _t0C9D = [_t0C99, _t0C9A, _t0C9B, _t0C9C];
    real _t0C9E = 0.e0;
    real _t0C9F = 0.e0;
    real _t0CA0 = 0.e0;
    real _t0CA1 = 0.1e1;
    vec4 _t0CA2 = [_t0C9E, _t0C9F, _t0CA0, _t0CA1];
    tensor[4,4] _t0CA3 = [_t0C93, _t0C98, _t0C9D, _t0CA2];
    real _t0CA4 = 0.e0;
    real _t0CA5 = -0.1e1;
    real _t0CA6 = 0.e0;
    real _t0CA7 = 0.e0;
    vec4 _t0CA8 = [_t0CA4, _t0CA5, _t0CA6, _t0CA7];
    real _t0CA9 = 0.e0;
    real _t0CAA = 0.e0;
    real _t0CAB = -0.1e1;
    real _t0CAC = 0.1e1;
    vec4 _t0CAD = [_t0CA9, _t0CAA, _t0CAB, _t0CAC];
    real _t0CAE = 0.1e1;
    real _t0CAF = -0.1e1;
    real _t0CB0 = 0.e0;
    real _t0CB1 = -0.5e0;
    vec4 _t0CB2 = [_t0CAE, _t0CAF, _t0CB0, _t0CB1];
    real _t0CB3 = 0.e0;
    real _t0CB4 = 0.e0;
    real _t0CB5 = 0.e0;
    real _t0CB6 = 0.1e1;
    vec4 _t0CB7 = [_t0CB3, _t0CB4, _t0CB5, _t0CB6];
    tensor[4,4] _t0CB8 = [_t0CA8, _t0CAD, _t0CB2, _t0CB7];
    real _t0CB9 = 0.e0;
    real _t0CBA = 0.e0;
    real _t0CBB = 0.1e1;
    real _t0CBC = -0.1e1;
    vec4 _t0CBD = [_t0CB9, _t0CBA, _t0CBB, _t0CBC];
    real _t0CBE = 0.e0;
    real _t0CBF = -0.1e1;
    real _t0CC0 = 0.e0;
    real _t0CC1 = 0.e0;
    vec4 _t0CC2 = [_t0CBE, _t0CBF, _t0CC0, _t0CC1];
    real _t0CC3 = 0.1e1;
    real _t0CC4 = -0.1e1;
    real _t0CC5 = 0.e0;
    real _t0CC6 = -0.5e0;
    vec4 _t0CC7 = [_t0CC3, _t0CC4, _t0CC5, _t0CC6];
    real _t0CC8 = 0.e0;
    real _t0CC9 = 0.e0;
    real _t0CCA = 0.e0;
    real _t0CCB = 0.1e1;
    vec4 _t0CCC = [_t0CC8, _t0CC9, _t0CCA, _t0CCB];
    tensor[4,4] _t0CCD = [_t0CBD, _t0CC2, _t0CC7, _t0CCC];
    tensor[4,4][6] _t0CCE = {_t0C64, _t0C79, _t0C8E, _t0CA3, _t0CB8, _t0CCD};
    real _t0CCF = 0.1e1;
    real _t0CD0 = 0.e0;
    real _t0CD1 = 0.1e1;
    real _t0CD2 = 0.5e0;
    vec4 _t0CD3 = [_t0CCF, _t0CD0, _t0CD1, _t0CD2];
    real _t0CD4 = 0.1e1;
    real _t0CD5 = 0.e0;
    real _t0CD6 = 0.e0;
    real _t0CD7 = 0.e0;
    vec4 _t0CD8 = [_t0CD4, _t0CD5, _t0CD6, _t0CD7];
    real _t0CD9 = 0.e0;
    real _t0CDA = 0.1e1;
    real _t0CDB = 0.e0;
    real _t0CDC = 0.e0;
    vec4 _t0CDD = [_t0CD9, _t0CDA, _t0CDB, _t0CDC];
    real _t0CDE = 0.e0;
    real _t0CDF = 0.e0;
    real _t0CE0 = 0.e0;
    real _t0CE1 = 0.1e1;
    vec4 _t0CE2 = [_t0CDE, _t0CDF, _t0CE0, _t0CE1];
    tensor[4,4] _t0CE3 = [_t0CD3, _t0CD8, _t0CDD, _t0CE2];
    real _t0CE4 = 0.1e1;
    real _t0CE5 = 0.e0;
    real _t0CE6 = 0.1e1;
    real _t0CE7 = 0.5e0;
    vec4 _t0CE8 = [_t0CE4, _t0CE5, _t0CE6, _t0CE7];
    real _t0CE9 = 0.1e1;
    real _t0CEA = 0.e0;
    real _t0CEB = 0.e0;
    real _t0CEC = 0.e0;
    vec4 _t0CED = [_t0CE9, _t0CEA, _t0CEB, _t0CEC];
    real _t0CEE = 0.e0;
    real _t0CEF = 0.1e1;
    real _t0CF0 = 0.e0;
    real _t0CF1 = 0.1e1;
    vec4 _t0CF2 = [_t0CEE, _t0CEF, _t0CF0, _t0CF1];
    real _t0CF3 = 0.e0;
    real _t0CF4 = 0.e0;
    real _t0CF5 = 0.e0;
    real _t0CF6 = 0.1e1;
    vec4 _t0CF7 = [_t0CF3, _t0CF4, _t0CF5, _t0CF6];
    tensor[4,4] _t0CF8 = [_t0CE8, _t0CED, _t0CF2, _t0CF7];
    real _t0CF9 = 0.1e1;
    real _t0CFA = 0.e0;
    real _t0CFB = 0.e0;
    real _t0CFC = 0.e0;
    vec4 _t0CFD = [_t0CF9, _t0CFA, _t0CFB, _t0CFC];
    real _t0CFE = 0.e0;
    real _t0CFF = 0.1e1;
    real _t0D00 = 0.e0;
    real _t0D01 = 0.e0;
    vec4 _t0D02 = [_t0CFE, _t0CFF, _t0D00, _t0D01];
    real _t0D03 = 0.e0;
    real _t0D04 = 0.e0;
    real _t0D05 = 0.1e1;
    real _t0D06 = 0.e0;
    vec4 _t0D07 = [_t0D03, _t0D04, _t0D05, _t0D06];
    real _t0D08 = 0.e0;
    real _t0D09 = 0.e0;
    real _t0D0A = 0.e0;
    real _t0D0B = 0.1e1;
    vec4 _t0D0C = [_t0D08, _t0D09, _t0D0A, _t0D0B];
    tensor[4,4] _t0D0D = [_t0CFD, _t0D02, _t0D07, _t0D0C];
    real _t0D0E = 0.e0;
    real _t0D0F = -0.1e1;
    real _t0D10 = 0.e0;
    real _t0D11 = 0.e0;
    vec4 _t0D12 = [_t0D0E, _t0D0F, _t0D10, _t0D11];
    real _t0D13 = 0.1e1;
    real _t0D14 = 0.e0;
    real _t0D15 = 0.e0;
    real _t0D16 = 0.e0;
    vec4 _t0D17 = [_t0D13, _t0D14, _t0D15, _t0D16];
    real _t0D18 = 0.e0;
    real _t0D19 = 0.e0;
    real _t0D1A = 0.1e1;
    real _t0D1B = 0.e0;
    vec4 _t0D1C = [_t0D18, _t0D19, _t0D1A, _t0D1B];
    real _t0D1D = 0.e0;
    real _t0D1E = 0.e0;
    real _t0D1F = 0.e0;
    real _t0D20 = 0.1e1;
    vec4 _t0D21 = [_t0D1D, _t0D1E, _t0D1F, _t0D20];
    tensor[4,4] _t0D22 = [_t0D12, _t0D17, _t0D1C, _t0D21];
    real _t0D23 = -0.1e1;
    real _t0D24 = 0.e0;
    real _t0D25 = 0.e0;
    real _t0D26 = 0.e0;
    vec4 _t0D27 = [_t0D23, _t0D24, _t0D25, _t0D26];
    real _t0D28 = 0.e0;
    real _t0D29 = -0.1e1;
    real _t0D2A = 0.e0;
    real _t0D2B = 0.e0;
    vec4 _t0D2C = [_t0D28, _t0D29, _t0D2A, _t0D2B];
    real _t0D2D = 0.e0;
    real _t0D2E = 0.e0;
    real _t0D2F = 0.1e1;
    real _t0D30 = 0.e0;
    vec4 _t0D31 = [_t0D2D, _t0D2E, _t0D2F, _t0D30];
    real _t0D32 = 0.e0;
    real _t0D33 = 0.e0;
    real _t0D34 = 0.e0;
    real _t0D35 = 0.1e1;
    vec4 _t0D36 = [_t0D32, _t0D33, _t0D34, _t0D35];
    tensor[4,4] _t0D37 = [_t0D27, _t0D2C, _t0D31, _t0D36];
    real _t0D38 = 0.e0;
    real _t0D39 = 0.1e1;
    real _t0D3A = 0.e0;
    real _t0D3B = 0.e0;
    vec4 _t0D3C = [_t0D38, _t0D39, _t0D3A, _t0D3B];
    real _t0D3D = -0.1e1;
    real _t0D3E = 0.e0;
    real _t0D3F = 0.e0;
    real _t0D40 = 0.e0;
    vec4 _t0D41 = [_t0D3D, _t0D3E, _t0D3F, _t0D40];
    real _t0D42 = 0.e0;
    real _t0D43 = 0.e0;
    real _t0D44 = 0.1e1;
    real _t0D45 = 0.e0;
    vec4 _t0D46 = [_t0D42, _t0D43, _t0D44, _t0D45];
    real _t0D47 = 0.e0;
    real _t0D48 = 0.e0;
    real _t0D49 = 0.e0;
    real _t0D4A = 0.1e1;
    vec4 _t0D4B = [_t0D47, _t0D48, _t0D49, _t0D4A];
    tensor[4,4] _t0D4C = [_t0D3C, _t0D41, _t0D46, _t0D4B];
    tensor[4,4][6] _t0D4D = {_t0CE3, _t0CF8, _t0D0D, _t0D22, _t0D37, _t0D4C};
    real _t0D4E = 0.e0;
    real _t0D4F = 0.1e1;
    real _t0D50 = 0.1e1;
    real _t0D51 = 0.5e0;
    vec4 _t0D52 = [_t0D4E, _t0D4F, _t0D50, _t0D51];
    real _t0D53 = 0.e0;
    real _t0D54 = 0.1e1;
    real _t0D55 = 0.e0;
    real _t0D56 = 0.e0;
    vec4 _t0D57 = [_t0D53, _t0D54, _t0D55, _t0D56];
    real _t0D58 = -0.1e1;
    real _t0D59 = 0.e0;
    real _t0D5A = 0.e0;
    real _t0D5B = 0.e0;
    vec4 _t0D5C = [_t0D58, _t0D59, _t0D5A, _t0D5B];
    real _t0D5D = 0.e0;
    real _t0D5E = 0.e0;
    real _t0D5F = 0.e0;
    real _t0D60 = 0.1e1;
    vec4 _t0D61 = [_t0D5D, _t0D5E, _t0D5F, _t0D60];
    tensor[4,4] _t0D62 = [_t0D52, _t0D57, _t0D5C, _t0D61];
    real _t0D63 = 0.e0;
    real _t0D64 = 0.1e1;
    real _t0D65 = 0.1e1;
    real _t0D66 = 0.5e0;
    vec4 _t0D67 = [_t0D63, _t0D64, _t0D65, _t0D66];
    real _t0D68 = 0.e0;
    real _t0D69 = 0.1e1;
    real _t0D6A = 0.e0;
    real _t0D6B = 0.e0;
    vec4 _t0D6C = [_t0D68, _t0D69, _t0D6A, _t0D6B];
    real _t0D6D = -0.1e1;
    real _t0D6E = 0.e0;
    real _t0D6F = 0.e0;
    real _t0D70 = 0.1e1;
    vec4 _t0D71 = [_t0D6D, _t0D6E, _t0D6F, _t0D70];
    real _t0D72 = 0.e0;
    real _t0D73 = 0.e0;
    real _t0D74 = 0.e0;
    real _t0D75 = 0.1e1;
    vec4 _t0D76 = [_t0D72, _t0D73, _t0D74, _t0D75];
    tensor[4,4] _t0D77 = [_t0D67, _t0D6C, _t0D71, _t0D76];
    real _t0D78 = 0.e0;
    real _t0D79 = 0.1e1;
    real _t0D7A = 0.e0;
    real _t0D7B = 0.e0;
    vec4 _t0D7C = [_t0D78, _t0D79, _t0D7A, _t0D7B];
    real _t0D7D = -0.1e1;
    real _t0D7E = 0.e0;
    real _t0D7F = 0.e0;
    real _t0D80 = 0.e0;
    vec4 _t0D81 = [_t0D7D, _t0D7E, _t0D7F, _t0D80];
    real _t0D82 = 0.e0;
    real _t0D83 = 0.e0;
    real _t0D84 = 0.1e1;
    real _t0D85 = 0.e0;
    vec4 _t0D86 = [_t0D82, _t0D83, _t0D84, _t0D85];
    real _t0D87 = 0.e0;
    real _t0D88 = 0.e0;
    real _t0D89 = 0.e0;
    real _t0D8A = 0.1e1;
    vec4 _t0D8B = [_t0D87, _t0D88, _t0D89, _t0D8A];
    tensor[4,4] _t0D8C = [_t0D7C, _t0D81, _t0D86, _t0D8B];
    real _t0D8D = 0.1e1;
    real _t0D8E = 0.e0;
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    vec4 _t0D91 = [_t0D8D, _t0D8E, _t0D8F, _t0D90];
    real _t0D92 = 0.e0;
    real _t0D93 = 0.1e1;
    real _t0D94 = 0.e0;
    real _t0D95 = 0.e0;
    vec4 _t0D96 = [_t0D92, _t0D93, _t0D94, _t0D95];
    real _t0D97 = 0.e0;
    real _t0D98 = 0.e0;
    real _t0D99 = 0.1e1;
    real _t0D9A = 0.e0;
    vec4 _t0D9B = [_t0D97, _t0D98, _t0D99, _t0D9A];
    real _t0D9C = 0.e0;
    real _t0D9D = 0.e0;
    real _t0D9E = 0.e0;
    real _t0D9F = 0.1e1;
    vec4 _t0DA0 = [_t0D9C, _t0D9D, _t0D9E, _t0D9F];
    tensor[4,4] _t0DA1 = [_t0D91, _t0D96, _t0D9B, _t0DA0];
    real _t0DA2 = 0.e0;
    real _t0DA3 = -0.1e1;
    real _t0DA4 = 0.e0;
    real _t0DA5 = 0.e0;
    vec4 _t0DA6 = [_t0DA2, _t0DA3, _t0DA4, _t0DA5];
    real _t0DA7 = 0.1e1;
    real _t0DA8 = 0.e0;
    real _t0DA9 = 0.e0;
    real _t0DAA = 0.e0;
    vec4 _t0DAB = [_t0DA7, _t0DA8, _t0DA9, _t0DAA];
    real _t0DAC = 0.e0;
    real _t0DAD = 0.e0;
    real _t0DAE = 0.1e1;
    real _t0DAF = 0.e0;
    vec4 _t0DB0 = [_t0DAC, _t0DAD, _t0DAE, _t0DAF];
    real _t0DB1 = 0.e0;
    real _t0DB2 = 0.e0;
    real _t0DB3 = 0.e0;
    real _t0DB4 = 0.1e1;
    vec4 _t0DB5 = [_t0DB1, _t0DB2, _t0DB3, _t0DB4];
    tensor[4,4] _t0DB6 = [_t0DA6, _t0DAB, _t0DB0, _t0DB5];
    real _t0DB7 = -0.1e1;
    real _t0DB8 = 0.e0;
    real _t0DB9 = 0.e0;
    real _t0DBA = 0.e0;
    vec4 _t0DBB = [_t0DB7, _t0DB8, _t0DB9, _t0DBA];
    real _t0DBC = 0.e0;
    real _t0DBD = -0.1e1;
    real _t0DBE = 0.e0;
    real _t0DBF = 0.e0;
    vec4 _t0DC0 = [_t0DBC, _t0DBD, _t0DBE, _t0DBF];
    real _t0DC1 = 0.e0;
    real _t0DC2 = 0.e0;
    real _t0DC3 = 0.1e1;
    real _t0DC4 = 0.e0;
    vec4 _t0DC5 = [_t0DC1, _t0DC2, _t0DC3, _t0DC4];
    real _t0DC6 = 0.e0;
    real _t0DC7 = 0.e0;
    real _t0DC8 = 0.e0;
    real _t0DC9 = 0.1e1;
    vec4 _t0DCA = [_t0DC6, _t0DC7, _t0DC8, _t0DC9];
    tensor[4,4] _t0DCB = [_t0DBB, _t0DC0, _t0DC5, _t0DCA];
    tensor[4,4][6] _t0DCC = {_t0D62, _t0D77, _t0D8C, _t0DA1, _t0DB6, _t0DCB};
    real _t0DCD = -0.1e1;
    real _t0DCE = 0.e0;
    real _t0DCF = 0.1e1;
    real _t0DD0 = 0.5e0;
    vec4 _t0DD1 = [_t0DCD, _t0DCE, _t0DCF, _t0DD0];
    real _t0DD2 = -0.1e1;
    real _t0DD3 = 0.e0;
    real _t0DD4 = 0.e0;
    real _t0DD5 = 0.e0;
    vec4 _t0DD6 = [_t0DD2, _t0DD3, _t0DD4, _t0DD5];
    real _t0DD7 = 0.e0;
    real _t0DD8 = -0.1e1;
    real _t0DD9 = 0.e0;
    real _t0DDA = 0.e0;
    vec4 _t0DDB = [_t0DD7, _t0DD8, _t0DD9, _t0DDA];
    real _t0DDC = 0.e0;
    real _t0DDD = 0.e0;
    real _t0DDE = 0.e0;
    real _t0DDF = 0.1e1;
    vec4 _t0DE0 = [_t0DDC, _t0DDD, _t0DDE, _t0DDF];
    tensor[4,4] _t0DE1 = [_t0DD1, _t0DD6, _t0DDB, _t0DE0];
    real _t0DE2 = -0.1e1;
    real _t0DE3 = 0.e0;
    real _t0DE4 = 0.1e1;
    real _t0DE5 = 0.5e0;
    vec4 _t0DE6 = [_t0DE2, _t0DE3, _t0DE4, _t0DE5];
    real _t0DE7 = -0.1e1;
    real _t0DE8 = 0.e0;
    real _t0DE9 = 0.e0;
    real _t0DEA = 0.e0;
    vec4 _t0DEB = [_t0DE7, _t0DE8, _t0DE9, _t0DEA];
    real _t0DEC = 0.e0;
    real _t0DED = -0.1e1;
    real _t0DEE = 0.e0;
    real _t0DEF = 0.1e1;
    vec4 _t0DF0 = [_t0DEC, _t0DED, _t0DEE, _t0DEF];
    real _t0DF1 = 0.e0;
    real _t0DF2 = 0.e0;
    real _t0DF3 = 0.e0;
    real _t0DF4 = 0.1e1;
    vec4 _t0DF5 = [_t0DF1, _t0DF2, _t0DF3, _t0DF4];
    tensor[4,4] _t0DF6 = [_t0DE6, _t0DEB, _t0DF0, _t0DF5];
    real _t0DF7 = -0.1e1;
    real _t0DF8 = 0.e0;
    real _t0DF9 = 0.e0;
    real _t0DFA = 0.e0;
    vec4 _t0DFB = [_t0DF7, _t0DF8, _t0DF9, _t0DFA];
    real _t0DFC = 0.e0;
    real _t0DFD = -0.1e1;
    real _t0DFE = 0.e0;
    real _t0DFF = 0.e0;
    vec4 _t0E00 = [_t0DFC, _t0DFD, _t0DFE, _t0DFF];
    real _t0E01 = 0.e0;
    real _t0E02 = 0.e0;
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.e0;
    vec4 _t0E05 = [_t0E01, _t0E02, _t0E03, _t0E04];
    real _t0E06 = 0.e0;
    real _t0E07 = 0.e0;
    real _t0E08 = 0.e0;
    real _t0E09 = 0.1e1;
    vec4 _t0E0A = [_t0E06, _t0E07, _t0E08, _t0E09];
    tensor[4,4] _t0E0B = [_t0DFB, _t0E00, _t0E05, _t0E0A];
    real _t0E0C = 0.e0;
    real _t0E0D = 0.1e1;
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    vec4 _t0E10 = [_t0E0C, _t0E0D, _t0E0E, _t0E0F];
    real _t0E11 = -0.1e1;
    real _t0E12 = 0.e0;
    real _t0E13 = 0.e0;
    real _t0E14 = 0.e0;
    vec4 _t0E15 = [_t0E11, _t0E12, _t0E13, _t0E14];
    real _t0E16 = 0.e0;
    real _t0E17 = 0.e0;
    real _t0E18 = 0.1e1;
    real _t0E19 = 0.e0;
    vec4 _t0E1A = [_t0E16, _t0E17, _t0E18, _t0E19];
    real _t0E1B = 0.e0;
    real _t0E1C = 0.e0;
    real _t0E1D = 0.e0;
    real _t0E1E = 0.1e1;
    vec4 _t0E1F = [_t0E1B, _t0E1C, _t0E1D, _t0E1E];
    tensor[4,4] _t0E20 = [_t0E10, _t0E15, _t0E1A, _t0E1F];
    real _t0E21 = 0.1e1;
    real _t0E22 = 0.e0;
    real _t0E23 = 0.e0;
    real _t0E24 = 0.e0;
    vec4 _t0E25 = [_t0E21, _t0E22, _t0E23, _t0E24];
    real _t0E26 = 0.e0;
    real _t0E27 = 0.1e1;
    real _t0E28 = 0.e0;
    real _t0E29 = 0.e0;
    vec4 _t0E2A = [_t0E26, _t0E27, _t0E28, _t0E29];
    real _t0E2B = 0.e0;
    real _t0E2C = 0.e0;
    real _t0E2D = 0.1e1;
    real _t0E2E = 0.e0;
    vec4 _t0E2F = [_t0E2B, _t0E2C, _t0E2D, _t0E2E];
    real _t0E30 = 0.e0;
    real _t0E31 = 0.e0;
    real _t0E32 = 0.e0;
    real _t0E33 = 0.1e1;
    vec4 _t0E34 = [_t0E30, _t0E31, _t0E32, _t0E33];
    tensor[4,4] _t0E35 = [_t0E25, _t0E2A, _t0E2F, _t0E34];
    real _t0E36 = 0.e0;
    real _t0E37 = -0.1e1;
    real _t0E38 = 0.e0;
    real _t0E39 = 0.e0;
    vec4 _t0E3A = [_t0E36, _t0E37, _t0E38, _t0E39];
    real _t0E3B = 0.1e1;
    real _t0E3C = 0.e0;
    real _t0E3D = 0.e0;
    real _t0E3E = 0.e0;
    vec4 _t0E3F = [_t0E3B, _t0E3C, _t0E3D, _t0E3E];
    real _t0E40 = 0.e0;
    real _t0E41 = 0.e0;
    real _t0E42 = 0.1e1;
    real _t0E43 = 0.e0;
    vec4 _t0E44 = [_t0E40, _t0E41, _t0E42, _t0E43];
    real _t0E45 = 0.e0;
    real _t0E46 = 0.e0;
    real _t0E47 = 0.e0;
    real _t0E48 = 0.1e1;
    vec4 _t0E49 = [_t0E45, _t0E46, _t0E47, _t0E48];
    tensor[4,4] _t0E4A = [_t0E3A, _t0E3F, _t0E44, _t0E49];
    tensor[4,4][6] _t0E4B = {_t0DE1, _t0DF6, _t0E0B, _t0E20, _t0E35, _t0E4A};
    real _t0E4C = 0.e0;
    real _t0E4D = -0.1e1;
    real _t0E4E = 0.1e1;
    real _t0E4F = 0.5e0;
    vec4 _t0E50 = [_t0E4C, _t0E4D, _t0E4E, _t0E4F];
    real _t0E51 = 0.e0;
    real _t0E52 = -0.1e1;
    real _t0E53 = 0.e0;
    real _t0E54 = 0.e0;
    vec4 _t0E55 = [_t0E51, _t0E52, _t0E53, _t0E54];
    real _t0E56 = 0.1e1;
    real _t0E57 = 0.e0;
    real _t0E58 = 0.e0;
    real _t0E59 = 0.e0;
    vec4 _t0E5A = [_t0E56, _t0E57, _t0E58, _t0E59];
    real _t0E5B = 0.e0;
    real _t0E5C = 0.e0;
    real _t0E5D = 0.e0;
    real _t0E5E = 0.1e1;
    vec4 _t0E5F = [_t0E5B, _t0E5C, _t0E5D, _t0E5E];
    tensor[4,4] _t0E60 = [_t0E50, _t0E55, _t0E5A, _t0E5F];
    real _t0E61 = 0.e0;
    real _t0E62 = -0.1e1;
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.5e0;
    vec4 _t0E65 = [_t0E61, _t0E62, _t0E63, _t0E64];
    real _t0E66 = 0.e0;
    real _t0E67 = -0.1e1;
    real _t0E68 = 0.e0;
    real _t0E69 = 0.e0;
    vec4 _t0E6A = [_t0E66, _t0E67, _t0E68, _t0E69];
    real _t0E6B = 0.1e1;
    real _t0E6C = 0.e0;
    real _t0E6D = 0.e0;
    real _t0E6E = 0.1e1;
    vec4 _t0E6F = [_t0E6B, _t0E6C, _t0E6D, _t0E6E];
    real _t0E70 = 0.e0;
    real _t0E71 = 0.e0;
    real _t0E72 = 0.e0;
    real _t0E73 = 0.1e1;
    vec4 _t0E74 = [_t0E70, _t0E71, _t0E72, _t0E73];
    tensor[4,4] _t0E75 = [_t0E65, _t0E6A, _t0E6F, _t0E74];
    real _t0E76 = 0.e0;
    real _t0E77 = -0.1e1;
    real _t0E78 = 0.e0;
    real _t0E79 = 0.e0;
    vec4 _t0E7A = [_t0E76, _t0E77, _t0E78, _t0E79];
    real _t0E7B = 0.1e1;
    real _t0E7C = 0.e0;
    real _t0E7D = 0.e0;
    real _t0E7E = 0.e0;
    vec4 _t0E7F = [_t0E7B, _t0E7C, _t0E7D, _t0E7E];
    real _t0E80 = 0.e0;
    real _t0E81 = 0.e0;
    real _t0E82 = 0.1e1;
    real _t0E83 = 0.e0;
    vec4 _t0E84 = [_t0E80, _t0E81, _t0E82, _t0E83];
    real _t0E85 = 0.e0;
    real _t0E86 = 0.e0;
    real _t0E87 = 0.e0;
    real _t0E88 = 0.1e1;
    vec4 _t0E89 = [_t0E85, _t0E86, _t0E87, _t0E88];
    tensor[4,4] _t0E8A = [_t0E7A, _t0E7F, _t0E84, _t0E89];
    real _t0E8B = -0.1e1;
    real _t0E8C = 0.e0;
    real _t0E8D = 0.e0;
    real _t0E8E = 0.e0;
    vec4 _t0E8F = [_t0E8B, _t0E8C, _t0E8D, _t0E8E];
    real _t0E90 = 0.e0;
    real _t0E91 = -0.1e1;
    real _t0E92 = 0.e0;
    real _t0E93 = 0.e0;
    vec4 _t0E94 = [_t0E90, _t0E91, _t0E92, _t0E93];
    real _t0E95 = 0.e0;
    real _t0E96 = 0.e0;
    real _t0E97 = 0.1e1;
    real _t0E98 = 0.e0;
    vec4 _t0E99 = [_t0E95, _t0E96, _t0E97, _t0E98];
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    real _t0E9C = 0.e0;
    real _t0E9D = 0.1e1;
    vec4 _t0E9E = [_t0E9A, _t0E9B, _t0E9C, _t0E9D];
    tensor[4,4] _t0E9F = [_t0E8F, _t0E94, _t0E99, _t0E9E];
    real _t0EA0 = 0.e0;
    real _t0EA1 = 0.1e1;
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.e0;
    vec4 _t0EA4 = [_t0EA0, _t0EA1, _t0EA2, _t0EA3];
    real _t0EA5 = -0.1e1;
    real _t0EA6 = 0.e0;
    real _t0EA7 = 0.e0;
    real _t0EA8 = 0.e0;
    vec4 _t0EA9 = [_t0EA5, _t0EA6, _t0EA7, _t0EA8];
    real _t0EAA = 0.e0;
    real _t0EAB = 0.e0;
    real _t0EAC = 0.1e1;
    real _t0EAD = 0.e0;
    vec4 _t0EAE = [_t0EAA, _t0EAB, _t0EAC, _t0EAD];
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.e0;
    real _t0EB1 = 0.e0;
    real _t0EB2 = 0.1e1;
    vec4 _t0EB3 = [_t0EAF, _t0EB0, _t0EB1, _t0EB2];
    tensor[4,4] _t0EB4 = [_t0EA4, _t0EA9, _t0EAE, _t0EB3];
    real _t0EB5 = 0.1e1;
    real _t0EB6 = 0.e0;
    real _t0EB7 = 0.e0;
    real _t0EB8 = 0.e0;
    vec4 _t0EB9 = [_t0EB5, _t0EB6, _t0EB7, _t0EB8];
    real _t0EBA = 0.e0;
    real _t0EBB = 0.1e1;
    real _t0EBC = 0.e0;
    real _t0EBD = 0.e0;
    vec4 _t0EBE = [_t0EBA, _t0EBB, _t0EBC, _t0EBD];
    real _t0EBF = 0.e0;
    real _t0EC0 = 0.e0;
    real _t0EC1 = 0.1e1;
    real _t0EC2 = 0.e0;
    vec4 _t0EC3 = [_t0EBF, _t0EC0, _t0EC1, _t0EC2];
    real _t0EC4 = 0.e0;
    real _t0EC5 = 0.e0;
    real _t0EC6 = 0.e0;
    real _t0EC7 = 0.1e1;
    vec4 _t0EC8 = [_t0EC4, _t0EC5, _t0EC6, _t0EC7];
    tensor[4,4] _t0EC9 = [_t0EB9, _t0EBE, _t0EC3, _t0EC8];
    tensor[4,4][6] _t0ECA = {_t0E60, _t0E75, _t0E8A, _t0E9F, _t0EB4, _t0EC9};
    tensor[4,4][6][6] _t0ECB = {_t0C4F, _t0CCE, _t0D4D, _t0DCC, _t0E4B, _t0ECA};
    real _t0ECC = time059F[1];
    int _t0ECD = prim $r2i01B7 (_t0ECC);
    tensor[4,4][6] _t0ECE = prim $sub01C0<tensor[4,4][6]; %6> (_t0ECB, _t0ECD);
    real _t0ECF = time059F[1];
    int _t0ED0 = prim $r2i01B7 (_t0ECF);
    int[2] _t0ED1 = func nextCell405A3 (_t0ED0, cellId059C, mesh059B);
    int _t0ED2 = 1;
    int _t0ED3 = prim $sub01C0<int; %2> (_t0ED1, _t0ED2);
    tensor[4,4] _t0ED4 = prim $sub01C0<tensor[4,4]; %6> (_t0ECE, _t0ED3);
    real _t0ED5 = time059F[0];
    vec3 _t0ED6 = prim *0036<$[3]> (_t0ED5, dPos059E);
    vec3 _t0ED7 = prim +0017<$[3]> (_t0ED6, refPos059D);
    real _t0ED8 = _t0ED7[0];
    real _t0ED9 = time059F[0];
    vec3 _t0EDA = prim *0036<$[3]> (_t0ED9, dPos059E);
    vec3 _t0EDB = prim +0017<$[3]> (_t0EDA, refPos059D);
    real _t0EDC = _t0EDB[1];
    real _t0EDD = time059F[0];
    vec3 _t0EDE = prim *0036<$[3]> (_t0EDD, dPos059E);
    vec3 _t0EDF = prim +0017<$[3]> (_t0EDE, refPos059D);
    real _t0EE0 = _t0EDF[2];
    real _t0EE1 = 0.1e1;
    vec4 _t0EE2 = [_t0ED8, _t0EDC, _t0EE0, _t0EE1];
    vec4 _t0EE3 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0ED4, _t0EE2);
    real _t0EE4 = _t0EE3[1];
    real _t0EE5 = 0.1e1;
    real _t0EE6 = 0.e0;
    real _t0EE7 = 0.e0;
    real _t0EE8 = 0.e0;
    vec4 _t0EE9 = [_t0EE5, _t0EE6, _t0EE7, _t0EE8];
    real _t0EEA = 0.e0;
    real _t0EEB = 0.1e1;
    real _t0EEC = 0.e0;
    real _t0EED = 0.e0;
    vec4 _t0EEE = [_t0EEA, _t0EEB, _t0EEC, _t0EED];
    real _t0EEF = 0.e0;
    real _t0EF0 = 0.e0;
    real _t0EF1 = 0.1e1;
    real _t0EF2 = 0.e0;
    vec4 _t0EF3 = [_t0EEF, _t0EF0, _t0EF1, _t0EF2];
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    real _t0EF6 = 0.e0;
    real _t0EF7 = 0.1e1;
    vec4 _t0EF8 = [_t0EF4, _t0EF5, _t0EF6, _t0EF7];
    tensor[4,4] _t0EF9 = [_t0EE9, _t0EEE, _t0EF3, _t0EF8];
    real _t0EFA = 0.1e1;
    real _t0EFB = 0.e0;
    real _t0EFC = 0.e0;
    real _t0EFD = 0.e0;
    vec4 _t0EFE = [_t0EFA, _t0EFB, _t0EFC, _t0EFD];
    real _t0EFF = 0.e0;
    real _t0F00 = 0.1e1;
    real _t0F01 = 0.e0;
    real _t0F02 = 0.e0;
    vec4 _t0F03 = [_t0EFF, _t0F00, _t0F01, _t0F02];
    real _t0F04 = 0.e0;
    real _t0F05 = 0.e0;
    real _t0F06 = 0.1e1;
    real _t0F07 = 0.1e1;
    vec4 _t0F08 = [_t0F04, _t0F05, _t0F06, _t0F07];
    real _t0F09 = 0.e0;
    real _t0F0A = 0.e0;
    real _t0F0B = 0.e0;
    real _t0F0C = 0.1e1;
    vec4 _t0F0D = [_t0F09, _t0F0A, _t0F0B, _t0F0C];
    tensor[4,4] _t0F0E = [_t0EFE, _t0F03, _t0F08, _t0F0D];
    real _t0F0F = 0.e0;
    real _t0F10 = 0.1e1;
    real _t0F11 = 0.e0;
    real _t0F12 = 0.e0;
    vec4 _t0F13 = [_t0F0F, _t0F10, _t0F11, _t0F12];
    real _t0F14 = 0.e0;
    real _t0F15 = 0.e0;
    real _t0F16 = 0.1e1;
    real _t0F17 = 0.e0;
    vec4 _t0F18 = [_t0F14, _t0F15, _t0F16, _t0F17];
    real _t0F19 = 0.1e1;
    real _t0F1A = -0.1e1;
    real _t0F1B = 0.e0;
    real _t0F1C = -0.5e0;
    vec4 _t0F1D = [_t0F19, _t0F1A, _t0F1B, _t0F1C];
    real _t0F1E = 0.e0;
    real _t0F1F = 0.e0;
    real _t0F20 = 0.e0;
    real _t0F21 = 0.1e1;
    vec4 _t0F22 = [_t0F1E, _t0F1F, _t0F20, _t0F21];
    tensor[4,4] _t0F23 = [_t0F13, _t0F18, _t0F1D, _t0F22];
    real _t0F24 = 0.e0;
    real _t0F25 = 0.e0;
    real _t0F26 = -0.1e1;
    real _t0F27 = 0.e0;
    vec4 _t0F28 = [_t0F24, _t0F25, _t0F26, _t0F27];
    real _t0F29 = 0.e0;
    real _t0F2A = 0.1e1;
    real _t0F2B = 0.e0;
    real _t0F2C = 0.e0;
    vec4 _t0F2D = [_t0F29, _t0F2A, _t0F2B, _t0F2C];
    real _t0F2E = 0.1e1;
    real _t0F2F = -0.1e1;
    real _t0F30 = 0.e0;
    real _t0F31 = -0.5e0;
    vec4 _t0F32 = [_t0F2E, _t0F2F, _t0F30, _t0F31];
    real _t0F33 = 0.e0;
    real _t0F34 = 0.e0;
    real _t0F35 = 0.e0;
    real _t0F36 = 0.1e1;
    vec4 _t0F37 = [_t0F33, _t0F34, _t0F35, _t0F36];
    tensor[4,4] _t0F38 = [_t0F28, _t0F2D, _t0F32, _t0F37];
    real _t0F39 = 0.e0;
    real _t0F3A = -0.1e1;
    real _t0F3B = 0.e0;
    real _t0F3C = 0.e0;
    vec4 _t0F3D = [_t0F39, _t0F3A, _t0F3B, _t0F3C];
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    real _t0F40 = -0.1e1;
    real _t0F41 = 0.e0;
    vec4 _t0F42 = [_t0F3E, _t0F3F, _t0F40, _t0F41];
    real _t0F43 = 0.1e1;
    real _t0F44 = -0.1e1;
    real _t0F45 = 0.e0;
    real _t0F46 = -0.5e0;
    vec4 _t0F47 = [_t0F43, _t0F44, _t0F45, _t0F46];
    real _t0F48 = 0.e0;
    real _t0F49 = 0.e0;
    real _t0F4A = 0.e0;
    real _t0F4B = 0.1e1;
    vec4 _t0F4C = [_t0F48, _t0F49, _t0F4A, _t0F4B];
    tensor[4,4] _t0F4D = [_t0F3D, _t0F42, _t0F47, _t0F4C];
    real _t0F4E = 0.e0;
    real _t0F4F = 0.e0;
    real _t0F50 = 0.1e1;
    real _t0F51 = 0.e0;
    vec4 _t0F52 = [_t0F4E, _t0F4F, _t0F50, _t0F51];
    real _t0F53 = 0.e0;
    real _t0F54 = -0.1e1;
    real _t0F55 = 0.e0;
    real _t0F56 = 0.e0;
    vec4 _t0F57 = [_t0F53, _t0F54, _t0F55, _t0F56];
    real _t0F58 = 0.1e1;
    real _t0F59 = -0.1e1;
    real _t0F5A = 0.e0;
    real _t0F5B = -0.5e0;
    vec4 _t0F5C = [_t0F58, _t0F59, _t0F5A, _t0F5B];
    real _t0F5D = 0.e0;
    real _t0F5E = 0.e0;
    real _t0F5F = 0.e0;
    real _t0F60 = 0.1e1;
    vec4 _t0F61 = [_t0F5D, _t0F5E, _t0F5F, _t0F60];
    tensor[4,4] _t0F62 = [_t0F52, _t0F57, _t0F5C, _t0F61];
    tensor[4,4][6] _t0F63 = {_t0EF9, _t0F0E, _t0F23, _t0F38, _t0F4D, _t0F62};
    real _t0F64 = 0.1e1;
    real _t0F65 = 0.e0;
    real _t0F66 = 0.e0;
    real _t0F67 = 0.e0;
    vec4 _t0F68 = [_t0F64, _t0F65, _t0F66, _t0F67];
    real _t0F69 = 0.e0;
    real _t0F6A = 0.1e1;
    real _t0F6B = 0.e0;
    real _t0F6C = 0.e0;
    vec4 _t0F6D = [_t0F69, _t0F6A, _t0F6B, _t0F6C];
    real _t0F6E = 0.e0;
    real _t0F6F = 0.e0;
    real _t0F70 = 0.1e1;
    real _t0F71 = -0.1e1;
    vec4 _t0F72 = [_t0F6E, _t0F6F, _t0F70, _t0F71];
    real _t0F73 = 0.e0;
    real _t0F74 = 0.e0;
    real _t0F75 = 0.e0;
    real _t0F76 = 0.1e1;
    vec4 _t0F77 = [_t0F73, _t0F74, _t0F75, _t0F76];
    tensor[4,4] _t0F78 = [_t0F68, _t0F6D, _t0F72, _t0F77];
    real _t0F79 = 0.1e1;
    real _t0F7A = 0.e0;
    real _t0F7B = 0.e0;
    real _t0F7C = 0.e0;
    vec4 _t0F7D = [_t0F79, _t0F7A, _t0F7B, _t0F7C];
    real _t0F7E = 0.e0;
    real _t0F7F = 0.1e1;
    real _t0F80 = 0.e0;
    real _t0F81 = 0.e0;
    vec4 _t0F82 = [_t0F7E, _t0F7F, _t0F80, _t0F81];
    real _t0F83 = 0.e0;
    real _t0F84 = 0.e0;
    real _t0F85 = 0.1e1;
    real _t0F86 = 0.e0;
    vec4 _t0F87 = [_t0F83, _t0F84, _t0F85, _t0F86];
    real _t0F88 = 0.e0;
    real _t0F89 = 0.e0;
    real _t0F8A = 0.e0;
    real _t0F8B = 0.1e1;
    vec4 _t0F8C = [_t0F88, _t0F89, _t0F8A, _t0F8B];
    tensor[4,4] _t0F8D = [_t0F7D, _t0F82, _t0F87, _t0F8C];
    real _t0F8E = 0.e0;
    real _t0F8F = 0.1e1;
    real _t0F90 = 0.e0;
    real _t0F91 = 0.e0;
    vec4 _t0F92 = [_t0F8E, _t0F8F, _t0F90, _t0F91];
    real _t0F93 = 0.e0;
    real _t0F94 = 0.e0;
    real _t0F95 = 0.1e1;
    real _t0F96 = -0.1e1;
    vec4 _t0F97 = [_t0F93, _t0F94, _t0F95, _t0F96];
    real _t0F98 = 0.1e1;
    real _t0F99 = -0.1e1;
    real _t0F9A = 0.e0;
    real _t0F9B = -0.5e0;
    vec4 _t0F9C = [_t0F98, _t0F99, _t0F9A, _t0F9B];
    real _t0F9D = 0.e0;
    real _t0F9E = 0.e0;
    real _t0F9F = 0.e0;
    real _t0FA0 = 0.1e1;
    vec4 _t0FA1 = [_t0F9D, _t0F9E, _t0F9F, _t0FA0];
    tensor[4,4] _t0FA2 = [_t0F92, _t0F97, _t0F9C, _t0FA1];
    real _t0FA3 = 0.e0;
    real _t0FA4 = 0.e0;
    real _t0FA5 = -0.1e1;
    real _t0FA6 = 0.1e1;
    vec4 _t0FA7 = [_t0FA3, _t0FA4, _t0FA5, _t0FA6];
    real _t0FA8 = 0.e0;
    real _t0FA9 = 0.1e1;
    real _t0FAA = 0.e0;
    real _t0FAB = 0.e0;
    vec4 _t0FAC = [_t0FA8, _t0FA9, _t0FAA, _t0FAB];
    real _t0FAD = 0.1e1;
    real _t0FAE = -0.1e1;
    real _t0FAF = 0.e0;
    real _t0FB0 = -0.5e0;
    vec4 _t0FB1 = [_t0FAD, _t0FAE, _t0FAF, _t0FB0];
    real _t0FB2 = 0.e0;
    real _t0FB3 = 0.e0;
    real _t0FB4 = 0.e0;
    real _t0FB5 = 0.1e1;
    vec4 _t0FB6 = [_t0FB2, _t0FB3, _t0FB4, _t0FB5];
    tensor[4,4] _t0FB7 = [_t0FA7, _t0FAC, _t0FB1, _t0FB6];
    real _t0FB8 = 0.e0;
    real _t0FB9 = -0.1e1;
    real _t0FBA = 0.e0;
    real _t0FBB = 0.e0;
    vec4 _t0FBC = [_t0FB8, _t0FB9, _t0FBA, _t0FBB];
    real _t0FBD = 0.e0;
    real _t0FBE = 0.e0;
    real _t0FBF = -0.1e1;
    real _t0FC0 = 0.1e1;
    vec4 _t0FC1 = [_t0FBD, _t0FBE, _t0FBF, _t0FC0];
    real _t0FC2 = 0.1e1;
    real _t0FC3 = -0.1e1;
    real _t0FC4 = 0.e0;
    real _t0FC5 = -0.5e0;
    vec4 _t0FC6 = [_t0FC2, _t0FC3, _t0FC4, _t0FC5];
    real _t0FC7 = 0.e0;
    real _t0FC8 = 0.e0;
    real _t0FC9 = 0.e0;
    real _t0FCA = 0.1e1;
    vec4 _t0FCB = [_t0FC7, _t0FC8, _t0FC9, _t0FCA];
    tensor[4,4] _t0FCC = [_t0FBC, _t0FC1, _t0FC6, _t0FCB];
    real _t0FCD = 0.e0;
    real _t0FCE = 0.e0;
    real _t0FCF = 0.1e1;
    real _t0FD0 = -0.1e1;
    vec4 _t0FD1 = [_t0FCD, _t0FCE, _t0FCF, _t0FD0];
    real _t0FD2 = 0.e0;
    real _t0FD3 = -0.1e1;
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.e0;
    vec4 _t0FD6 = [_t0FD2, _t0FD3, _t0FD4, _t0FD5];
    real _t0FD7 = 0.1e1;
    real _t0FD8 = -0.1e1;
    real _t0FD9 = 0.e0;
    real _t0FDA = -0.5e0;
    vec4 _t0FDB = [_t0FD7, _t0FD8, _t0FD9, _t0FDA];
    real _t0FDC = 0.e0;
    real _t0FDD = 0.e0;
    real _t0FDE = 0.e0;
    real _t0FDF = 0.1e1;
    vec4 _t0FE0 = [_t0FDC, _t0FDD, _t0FDE, _t0FDF];
    tensor[4,4] _t0FE1 = [_t0FD1, _t0FD6, _t0FDB, _t0FE0];
    tensor[4,4][6] _t0FE2 = {_t0F78, _t0F8D, _t0FA2, _t0FB7, _t0FCC, _t0FE1};
    real _t0FE3 = 0.1e1;
    real _t0FE4 = 0.e0;
    real _t0FE5 = 0.1e1;
    real _t0FE6 = 0.5e0;
    vec4 _t0FE7 = [_t0FE3, _t0FE4, _t0FE5, _t0FE6];
    real _t0FE8 = 0.1e1;
    real _t0FE9 = 0.e0;
    real _t0FEA = 0.e0;
    real _t0FEB = 0.e0;
    vec4 _t0FEC = [_t0FE8, _t0FE9, _t0FEA, _t0FEB];
    real _t0FED = 0.e0;
    real _t0FEE = 0.1e1;
    real _t0FEF = 0.e0;
    real _t0FF0 = 0.e0;
    vec4 _t0FF1 = [_t0FED, _t0FEE, _t0FEF, _t0FF0];
    real _t0FF2 = 0.e0;
    real _t0FF3 = 0.e0;
    real _t0FF4 = 0.e0;
    real _t0FF5 = 0.1e1;
    vec4 _t0FF6 = [_t0FF2, _t0FF3, _t0FF4, _t0FF5];
    tensor[4,4] _t0FF7 = [_t0FE7, _t0FEC, _t0FF1, _t0FF6];
    real _t0FF8 = 0.1e1;
    real _t0FF9 = 0.e0;
    real _t0FFA = 0.1e1;
    real _t0FFB = 0.5e0;
    vec4 _t0FFC = [_t0FF8, _t0FF9, _t0FFA, _t0FFB];
    real _t0FFD = 0.1e1;
    real _t0FFE = 0.e0;
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    vec4 _t1001 = [_t0FFD, _t0FFE, _t0FFF, _t1000];
    real _t1002 = 0.e0;
    real _t1003 = 0.1e1;
    real _t1004 = 0.e0;
    real _t1005 = 0.1e1;
    vec4 _t1006 = [_t1002, _t1003, _t1004, _t1005];
    real _t1007 = 0.e0;
    real _t1008 = 0.e0;
    real _t1009 = 0.e0;
    real _t100A = 0.1e1;
    vec4 _t100B = [_t1007, _t1008, _t1009, _t100A];
    tensor[4,4] _t100C = [_t0FFC, _t1001, _t1006, _t100B];
    real _t100D = 0.1e1;
    real _t100E = 0.e0;
    real _t100F = 0.e0;
    real _t1010 = 0.e0;
    vec4 _t1011 = [_t100D, _t100E, _t100F, _t1010];
    real _t1012 = 0.e0;
    real _t1013 = 0.1e1;
    real _t1014 = 0.e0;
    real _t1015 = 0.e0;
    vec4 _t1016 = [_t1012, _t1013, _t1014, _t1015];
    real _t1017 = 0.e0;
    real _t1018 = 0.e0;
    real _t1019 = 0.1e1;
    real _t101A = 0.e0;
    vec4 _t101B = [_t1017, _t1018, _t1019, _t101A];
    real _t101C = 0.e0;
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.1e1;
    vec4 _t1020 = [_t101C, _t101D, _t101E, _t101F];
    tensor[4,4] _t1021 = [_t1011, _t1016, _t101B, _t1020];
    real _t1022 = 0.e0;
    real _t1023 = -0.1e1;
    real _t1024 = 0.e0;
    real _t1025 = 0.e0;
    vec4 _t1026 = [_t1022, _t1023, _t1024, _t1025];
    real _t1027 = 0.1e1;
    real _t1028 = 0.e0;
    real _t1029 = 0.e0;
    real _t102A = 0.e0;
    vec4 _t102B = [_t1027, _t1028, _t1029, _t102A];
    real _t102C = 0.e0;
    real _t102D = 0.e0;
    real _t102E = 0.1e1;
    real _t102F = 0.e0;
    vec4 _t1030 = [_t102C, _t102D, _t102E, _t102F];
    real _t1031 = 0.e0;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.1e1;
    vec4 _t1035 = [_t1031, _t1032, _t1033, _t1034];
    tensor[4,4] _t1036 = [_t1026, _t102B, _t1030, _t1035];
    real _t1037 = -0.1e1;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    real _t103A = 0.e0;
    vec4 _t103B = [_t1037, _t1038, _t1039, _t103A];
    real _t103C = 0.e0;
    real _t103D = -0.1e1;
    real _t103E = 0.e0;
    real _t103F = 0.e0;
    vec4 _t1040 = [_t103C, _t103D, _t103E, _t103F];
    real _t1041 = 0.e0;
    real _t1042 = 0.e0;
    real _t1043 = 0.1e1;
    real _t1044 = 0.e0;
    vec4 _t1045 = [_t1041, _t1042, _t1043, _t1044];
    real _t1046 = 0.e0;
    real _t1047 = 0.e0;
    real _t1048 = 0.e0;
    real _t1049 = 0.1e1;
    vec4 _t104A = [_t1046, _t1047, _t1048, _t1049];
    tensor[4,4] _t104B = [_t103B, _t1040, _t1045, _t104A];
    real _t104C = 0.e0;
    real _t104D = 0.1e1;
    real _t104E = 0.e0;
    real _t104F = 0.e0;
    vec4 _t1050 = [_t104C, _t104D, _t104E, _t104F];
    real _t1051 = -0.1e1;
    real _t1052 = 0.e0;
    real _t1053 = 0.e0;
    real _t1054 = 0.e0;
    vec4 _t1055 = [_t1051, _t1052, _t1053, _t1054];
    real _t1056 = 0.e0;
    real _t1057 = 0.e0;
    real _t1058 = 0.1e1;
    real _t1059 = 0.e0;
    vec4 _t105A = [_t1056, _t1057, _t1058, _t1059];
    real _t105B = 0.e0;
    real _t105C = 0.e0;
    real _t105D = 0.e0;
    real _t105E = 0.1e1;
    vec4 _t105F = [_t105B, _t105C, _t105D, _t105E];
    tensor[4,4] _t1060 = [_t1050, _t1055, _t105A, _t105F];
    tensor[4,4][6] _t1061 = {_t0FF7, _t100C, _t1021, _t1036, _t104B, _t1060};
    real _t1062 = 0.e0;
    real _t1063 = 0.1e1;
    real _t1064 = 0.1e1;
    real _t1065 = 0.5e0;
    vec4 _t1066 = [_t1062, _t1063, _t1064, _t1065];
    real _t1067 = 0.e0;
    real _t1068 = 0.1e1;
    real _t1069 = 0.e0;
    real _t106A = 0.e0;
    vec4 _t106B = [_t1067, _t1068, _t1069, _t106A];
    real _t106C = -0.1e1;
    real _t106D = 0.e0;
    real _t106E = 0.e0;
    real _t106F = 0.e0;
    vec4 _t1070 = [_t106C, _t106D, _t106E, _t106F];
    real _t1071 = 0.e0;
    real _t1072 = 0.e0;
    real _t1073 = 0.e0;
    real _t1074 = 0.1e1;
    vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
    tensor[4,4] _t1076 = [_t1066, _t106B, _t1070, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.1e1;
    real _t1079 = 0.1e1;
    real _t107A = 0.5e0;
    vec4 _t107B = [_t1077, _t1078, _t1079, _t107A];
    real _t107C = 0.e0;
    real _t107D = 0.1e1;
    real _t107E = 0.e0;
    real _t107F = 0.e0;
    vec4 _t1080 = [_t107C, _t107D, _t107E, _t107F];
    real _t1081 = -0.1e1;
    real _t1082 = 0.e0;
    real _t1083 = 0.e0;
    real _t1084 = 0.1e1;
    vec4 _t1085 = [_t1081, _t1082, _t1083, _t1084];
    real _t1086 = 0.e0;
    real _t1087 = 0.e0;
    real _t1088 = 0.e0;
    real _t1089 = 0.1e1;
    vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
    tensor[4,4] _t108B = [_t107B, _t1080, _t1085, _t108A];
    real _t108C = 0.e0;
    real _t108D = 0.1e1;
    real _t108E = 0.e0;
    real _t108F = 0.e0;
    vec4 _t1090 = [_t108C, _t108D, _t108E, _t108F];
    real _t1091 = -0.1e1;
    real _t1092 = 0.e0;
    real _t1093 = 0.e0;
    real _t1094 = 0.e0;
    vec4 _t1095 = [_t1091, _t1092, _t1093, _t1094];
    real _t1096 = 0.e0;
    real _t1097 = 0.e0;
    real _t1098 = 0.1e1;
    real _t1099 = 0.e0;
    vec4 _t109A = [_t1096, _t1097, _t1098, _t1099];
    real _t109B = 0.e0;
    real _t109C = 0.e0;
    real _t109D = 0.e0;
    real _t109E = 0.1e1;
    vec4 _t109F = [_t109B, _t109C, _t109D, _t109E];
    tensor[4,4] _t10A0 = [_t1090, _t1095, _t109A, _t109F];
    real _t10A1 = 0.1e1;
    real _t10A2 = 0.e0;
    real _t10A3 = 0.e0;
    real _t10A4 = 0.e0;
    vec4 _t10A5 = [_t10A1, _t10A2, _t10A3, _t10A4];
    real _t10A6 = 0.e0;
    real _t10A7 = 0.1e1;
    real _t10A8 = 0.e0;
    real _t10A9 = 0.e0;
    vec4 _t10AA = [_t10A6, _t10A7, _t10A8, _t10A9];
    real _t10AB = 0.e0;
    real _t10AC = 0.e0;
    real _t10AD = 0.1e1;
    real _t10AE = 0.e0;
    vec4 _t10AF = [_t10AB, _t10AC, _t10AD, _t10AE];
    real _t10B0 = 0.e0;
    real _t10B1 = 0.e0;
    real _t10B2 = 0.e0;
    real _t10B3 = 0.1e1;
    vec4 _t10B4 = [_t10B0, _t10B1, _t10B2, _t10B3];
    tensor[4,4] _t10B5 = [_t10A5, _t10AA, _t10AF, _t10B4];
    real _t10B6 = 0.e0;
    real _t10B7 = -0.1e1;
    real _t10B8 = 0.e0;
    real _t10B9 = 0.e0;
    vec4 _t10BA = [_t10B6, _t10B7, _t10B8, _t10B9];
    real _t10BB = 0.1e1;
    real _t10BC = 0.e0;
    real _t10BD = 0.e0;
    real _t10BE = 0.e0;
    vec4 _t10BF = [_t10BB, _t10BC, _t10BD, _t10BE];
    real _t10C0 = 0.e0;
    real _t10C1 = 0.e0;
    real _t10C2 = 0.1e1;
    real _t10C3 = 0.e0;
    vec4 _t10C4 = [_t10C0, _t10C1, _t10C2, _t10C3];
    real _t10C5 = 0.e0;
    real _t10C6 = 0.e0;
    real _t10C7 = 0.e0;
    real _t10C8 = 0.1e1;
    vec4 _t10C9 = [_t10C5, _t10C6, _t10C7, _t10C8];
    tensor[4,4] _t10CA = [_t10BA, _t10BF, _t10C4, _t10C9];
    real _t10CB = -0.1e1;
    real _t10CC = 0.e0;
    real _t10CD = 0.e0;
    real _t10CE = 0.e0;
    vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
    real _t10D0 = 0.e0;
    real _t10D1 = -0.1e1;
    real _t10D2 = 0.e0;
    real _t10D3 = 0.e0;
    vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
    real _t10D5 = 0.e0;
    real _t10D6 = 0.e0;
    real _t10D7 = 0.1e1;
    real _t10D8 = 0.e0;
    vec4 _t10D9 = [_t10D5, _t10D6, _t10D7, _t10D8];
    real _t10DA = 0.e0;
    real _t10DB = 0.e0;
    real _t10DC = 0.e0;
    real _t10DD = 0.1e1;
    vec4 _t10DE = [_t10DA, _t10DB, _t10DC, _t10DD];
    tensor[4,4] _t10DF = [_t10CF, _t10D4, _t10D9, _t10DE];
    tensor[4,4][6] _t10E0 = {_t1076, _t108B, _t10A0, _t10B5, _t10CA, _t10DF};
    real _t10E1 = -0.1e1;
    real _t10E2 = 0.e0;
    real _t10E3 = 0.1e1;
    real _t10E4 = 0.5e0;
    vec4 _t10E5 = [_t10E1, _t10E2, _t10E3, _t10E4];
    real _t10E6 = -0.1e1;
    real _t10E7 = 0.e0;
    real _t10E8 = 0.e0;
    real _t10E9 = 0.e0;
    vec4 _t10EA = [_t10E6, _t10E7, _t10E8, _t10E9];
    real _t10EB = 0.e0;
    real _t10EC = -0.1e1;
    real _t10ED = 0.e0;
    real _t10EE = 0.e0;
    vec4 _t10EF = [_t10EB, _t10EC, _t10ED, _t10EE];
    real _t10F0 = 0.e0;
    real _t10F1 = 0.e0;
    real _t10F2 = 0.e0;
    real _t10F3 = 0.1e1;
    vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
    tensor[4,4] _t10F5 = [_t10E5, _t10EA, _t10EF, _t10F4];
    real _t10F6 = -0.1e1;
    real _t10F7 = 0.e0;
    real _t10F8 = 0.1e1;
    real _t10F9 = 0.5e0;
    vec4 _t10FA = [_t10F6, _t10F7, _t10F8, _t10F9];
    real _t10FB = -0.1e1;
    real _t10FC = 0.e0;
    real _t10FD = 0.e0;
    real _t10FE = 0.e0;
    vec4 _t10FF = [_t10FB, _t10FC, _t10FD, _t10FE];
    real _t1100 = 0.e0;
    real _t1101 = -0.1e1;
    real _t1102 = 0.e0;
    real _t1103 = 0.1e1;
    vec4 _t1104 = [_t1100, _t1101, _t1102, _t1103];
    real _t1105 = 0.e0;
    real _t1106 = 0.e0;
    real _t1107 = 0.e0;
    real _t1108 = 0.1e1;
    vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
    tensor[4,4] _t110A = [_t10FA, _t10FF, _t1104, _t1109];
    real _t110B = -0.1e1;
    real _t110C = 0.e0;
    real _t110D = 0.e0;
    real _t110E = 0.e0;
    vec4 _t110F = [_t110B, _t110C, _t110D, _t110E];
    real _t1110 = 0.e0;
    real _t1111 = -0.1e1;
    real _t1112 = 0.e0;
    real _t1113 = 0.e0;
    vec4 _t1114 = [_t1110, _t1111, _t1112, _t1113];
    real _t1115 = 0.e0;
    real _t1116 = 0.e0;
    real _t1117 = 0.1e1;
    real _t1118 = 0.e0;
    vec4 _t1119 = [_t1115, _t1116, _t1117, _t1118];
    real _t111A = 0.e0;
    real _t111B = 0.e0;
    real _t111C = 0.e0;
    real _t111D = 0.1e1;
    vec4 _t111E = [_t111A, _t111B, _t111C, _t111D];
    tensor[4,4] _t111F = [_t110F, _t1114, _t1119, _t111E];
    real _t1120 = 0.e0;
    real _t1121 = 0.1e1;
    real _t1122 = 0.e0;
    real _t1123 = 0.e0;
    vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
    real _t1125 = -0.1e1;
    real _t1126 = 0.e0;
    real _t1127 = 0.e0;
    real _t1128 = 0.e0;
    vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
    real _t112A = 0.e0;
    real _t112B = 0.e0;
    real _t112C = 0.1e1;
    real _t112D = 0.e0;
    vec4 _t112E = [_t112A, _t112B, _t112C, _t112D];
    real _t112F = 0.e0;
    real _t1130 = 0.e0;
    real _t1131 = 0.e0;
    real _t1132 = 0.1e1;
    vec4 _t1133 = [_t112F, _t1130, _t1131, _t1132];
    tensor[4,4] _t1134 = [_t1124, _t1129, _t112E, _t1133];
    real _t1135 = 0.1e1;
    real _t1136 = 0.e0;
    real _t1137 = 0.e0;
    real _t1138 = 0.e0;
    vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
    real _t113A = 0.e0;
    real _t113B = 0.1e1;
    real _t113C = 0.e0;
    real _t113D = 0.e0;
    vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
    real _t113F = 0.e0;
    real _t1140 = 0.e0;
    real _t1141 = 0.1e1;
    real _t1142 = 0.e0;
    vec4 _t1143 = [_t113F, _t1140, _t1141, _t1142];
    real _t1144 = 0.e0;
    real _t1145 = 0.e0;
    real _t1146 = 0.e0;
    real _t1147 = 0.1e1;
    vec4 _t1148 = [_t1144, _t1145, _t1146, _t1147];
    tensor[4,4] _t1149 = [_t1139, _t113E, _t1143, _t1148];
    real _t114A = 0.e0;
    real _t114B = -0.1e1;
    real _t114C = 0.e0;
    real _t114D = 0.e0;
    vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
    real _t114F = 0.1e1;
    real _t1150 = 0.e0;
    real _t1151 = 0.e0;
    real _t1152 = 0.e0;
    vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
    real _t1154 = 0.e0;
    real _t1155 = 0.e0;
    real _t1156 = 0.1e1;
    real _t1157 = 0.e0;
    vec4 _t1158 = [_t1154, _t1155, _t1156, _t1157];
    real _t1159 = 0.e0;
    real _t115A = 0.e0;
    real _t115B = 0.e0;
    real _t115C = 0.1e1;
    vec4 _t115D = [_t1159, _t115A, _t115B, _t115C];
    tensor[4,4] _t115E = [_t114E, _t1153, _t1158, _t115D];
    tensor[4,4][6] _t115F = {_t10F5, _t110A, _t111F, _t1134, _t1149, _t115E};
    real _t1160 = 0.e0;
    real _t1161 = -0.1e1;
    real _t1162 = 0.1e1;
    real _t1163 = 0.5e0;
    vec4 _t1164 = [_t1160, _t1161, _t1162, _t1163];
    real _t1165 = 0.e0;
    real _t1166 = -0.1e1;
    real _t1167 = 0.e0;
    real _t1168 = 0.e0;
    vec4 _t1169 = [_t1165, _t1166, _t1167, _t1168];
    real _t116A = 0.1e1;
    real _t116B = 0.e0;
    real _t116C = 0.e0;
    real _t116D = 0.e0;
    vec4 _t116E = [_t116A, _t116B, _t116C, _t116D];
    real _t116F = 0.e0;
    real _t1170 = 0.e0;
    real _t1171 = 0.e0;
    real _t1172 = 0.1e1;
    vec4 _t1173 = [_t116F, _t1170, _t1171, _t1172];
    tensor[4,4] _t1174 = [_t1164, _t1169, _t116E, _t1173];
    real _t1175 = 0.e0;
    real _t1176 = -0.1e1;
    real _t1177 = 0.1e1;
    real _t1178 = 0.5e0;
    vec4 _t1179 = [_t1175, _t1176, _t1177, _t1178];
    real _t117A = 0.e0;
    real _t117B = -0.1e1;
    real _t117C = 0.e0;
    real _t117D = 0.e0;
    vec4 _t117E = [_t117A, _t117B, _t117C, _t117D];
    real _t117F = 0.1e1;
    real _t1180 = 0.e0;
    real _t1181 = 0.e0;
    real _t1182 = 0.1e1;
    vec4 _t1183 = [_t117F, _t1180, _t1181, _t1182];
    real _t1184 = 0.e0;
    real _t1185 = 0.e0;
    real _t1186 = 0.e0;
    real _t1187 = 0.1e1;
    vec4 _t1188 = [_t1184, _t1185, _t1186, _t1187];
    tensor[4,4] _t1189 = [_t1179, _t117E, _t1183, _t1188];
    real _t118A = 0.e0;
    real _t118B = -0.1e1;
    real _t118C = 0.e0;
    real _t118D = 0.e0;
    vec4 _t118E = [_t118A, _t118B, _t118C, _t118D];
    real _t118F = 0.1e1;
    real _t1190 = 0.e0;
    real _t1191 = 0.e0;
    real _t1192 = 0.e0;
    vec4 _t1193 = [_t118F, _t1190, _t1191, _t1192];
    real _t1194 = 0.e0;
    real _t1195 = 0.e0;
    real _t1196 = 0.1e1;
    real _t1197 = 0.e0;
    vec4 _t1198 = [_t1194, _t1195, _t1196, _t1197];
    real _t1199 = 0.e0;
    real _t119A = 0.e0;
    real _t119B = 0.e0;
    real _t119C = 0.1e1;
    vec4 _t119D = [_t1199, _t119A, _t119B, _t119C];
    tensor[4,4] _t119E = [_t118E, _t1193, _t1198, _t119D];
    real _t119F = -0.1e1;
    real _t11A0 = 0.e0;
    real _t11A1 = 0.e0;
    real _t11A2 = 0.e0;
    vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
    real _t11A4 = 0.e0;
    real _t11A5 = -0.1e1;
    real _t11A6 = 0.e0;
    real _t11A7 = 0.e0;
    vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
    real _t11A9 = 0.e0;
    real _t11AA = 0.e0;
    real _t11AB = 0.1e1;
    real _t11AC = 0.e0;
    vec4 _t11AD = [_t11A9, _t11AA, _t11AB, _t11AC];
    real _t11AE = 0.e0;
    real _t11AF = 0.e0;
    real _t11B0 = 0.e0;
    real _t11B1 = 0.1e1;
    vec4 _t11B2 = [_t11AE, _t11AF, _t11B0, _t11B1];
    tensor[4,4] _t11B3 = [_t11A3, _t11A8, _t11AD, _t11B2];
    real _t11B4 = 0.e0;
    real _t11B5 = 0.1e1;
    real _t11B6 = 0.e0;
    real _t11B7 = 0.e0;
    vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
    real _t11B9 = -0.1e1;
    real _t11BA = 0.e0;
    real _t11BB = 0.e0;
    real _t11BC = 0.e0;
    vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
    real _t11BE = 0.e0;
    real _t11BF = 0.e0;
    real _t11C0 = 0.1e1;
    real _t11C1 = 0.e0;
    vec4 _t11C2 = [_t11BE, _t11BF, _t11C0, _t11C1];
    real _t11C3 = 0.e0;
    real _t11C4 = 0.e0;
    real _t11C5 = 0.e0;
    real _t11C6 = 0.1e1;
    vec4 _t11C7 = [_t11C3, _t11C4, _t11C5, _t11C6];
    tensor[4,4] _t11C8 = [_t11B8, _t11BD, _t11C2, _t11C7];
    real _t11C9 = 0.1e1;
    real _t11CA = 0.e0;
    real _t11CB = 0.e0;
    real _t11CC = 0.e0;
    vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
    real _t11CE = 0.e0;
    real _t11CF = 0.1e1;
    real _t11D0 = 0.e0;
    real _t11D1 = 0.e0;
    vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
    real _t11D3 = 0.e0;
    real _t11D4 = 0.e0;
    real _t11D5 = 0.1e1;
    real _t11D6 = 0.e0;
    vec4 _t11D7 = [_t11D3, _t11D4, _t11D5, _t11D6];
    real _t11D8 = 0.e0;
    real _t11D9 = 0.e0;
    real _t11DA = 0.e0;
    real _t11DB = 0.1e1;
    vec4 _t11DC = [_t11D8, _t11D9, _t11DA, _t11DB];
    tensor[4,4] _t11DD = [_t11CD, _t11D2, _t11D7, _t11DC];
    tensor[4,4][6] _t11DE = {_t1174, _t1189, _t119E, _t11B3, _t11C8, _t11DD};
    tensor[4,4][6][6] _t11DF = {_t0F63, _t0FE2, _t1061, _t10E0, _t115F, _t11DE};
    real _t11E0 = time059F[1];
    int _t11E1 = prim $r2i01B7 (_t11E0);
    tensor[4,4][6] _t11E2 = prim $sub01C0<tensor[4,4][6]; %6> (_t11DF, _t11E1);
    real _t11E3 = time059F[1];
    int _t11E4 = prim $r2i01B7 (_t11E3);
    int[2] _t11E5 = func nextCell405A3 (_t11E4, cellId059C, mesh059B);
    int _t11E6 = 1;
    int _t11E7 = prim $sub01C0<int; %2> (_t11E5, _t11E6);
    tensor[4,4] _t11E8 = prim $sub01C0<tensor[4,4]; %6> (_t11E2, _t11E7);
    real _t11E9 = time059F[0];
    vec3 _t11EA = prim *0036<$[3]> (_t11E9, dPos059E);
    vec3 _t11EB = prim +0017<$[3]> (_t11EA, refPos059D);
    real _t11EC = _t11EB[0];
    real _t11ED = time059F[0];
    vec3 _t11EE = prim *0036<$[3]> (_t11ED, dPos059E);
    vec3 _t11EF = prim +0017<$[3]> (_t11EE, refPos059D);
    real _t11F0 = _t11EF[1];
    real _t11F1 = time059F[0];
    vec3 _t11F2 = prim *0036<$[3]> (_t11F1, dPos059E);
    vec3 _t11F3 = prim +0017<$[3]> (_t11F2, refPos059D);
    real _t11F4 = _t11F3[2];
    real _t11F5 = 0.1e1;
    vec4 _t11F6 = [_t11EC, _t11F0, _t11F4, _t11F5];
    vec4 _t11F7 = prim •00CE<$[4,4]; $[4]; $[4]> (_t11E8, _t11F6);
    real _t11F8 = _t11F7[2];
    vec3 _t11F9 = [_t0BD0, _t0EE4, _t11F8];
    real _t11FA = time059F[1];
    int _t11FB = prim $r2i01B7 (_t11FA);
    int[2] _t11FC = func nextCell405A3 (_t11FB, cellId059C, mesh059B);
    int _t11FD = 1;
    int _t11FE = prim $sub01C0<int; %2> (_t11FC, _t11FD);
    Femdata: MeshPos _t11FF = extractFemItemN((mesh059B, _t08BC, _t11F9, _t11FE),RefBuild(Mesh),);
    return _t11FF;
  } else {
    real _t1200 = time059F[0];
    vec3 _t1201 = prim *0036<$[3]> (_t1200, dPos059E);
    vec3 _t1202 = prim +0017<$[3]> (_t1201, refPos059D);
    Femdata: MeshPos _t1203 = extractFemItemN((mesh059B, _t1202),InvalidBuildBoundary(MeshPos),);
    return _t1203;
  }
}
function int[2]#8 nextCell405A3 (int faceIdx1204, int cell1205, Femdata: Mesh mesh1206)
{
  int _t1207 = 12;
  int _t1208 = prim *0033 (cell1205, _t1207);
  int _t1209 = 2;
  int _t120A = prim *0033 (faceIdx1204, _t1209);
  int _t120B = prim +0015 (_t1208, _t120A);
  int[2] _t120C = extractFemItemN((mesh1206, _t120B),CellFaceCell(Mesh),);
  return _t120C;
}
function vec2#0 _enter120D (vec3 refPos120E, vec3 dPos120F)
{
  real time1210 = +inf;
  int face1211 = -1;
  real faceTime1212 = -inf;
  real _t1213 = -0.5e0;
  real _t1214 = 0.e0;
  real _t1215 = 0.e0;
  real _t1216 = 0.1e1;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos120E);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = 0.e0;
  real _t121B = 0.e0;
  real _t121C = 0.1e1;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos120F);
  real _t121F = prim /0055 (_t1219, _t121E);
  real _t1220 = -0.1e-15;
  bool _t1221 = prim >=007E (_t121F, _t1220);
  real _t1222 = -0.5e0;
  real _t1223 = 0.e0;
  real _t1224 = 0.e0;
  real _t1225 = 0.1e1;
  vec3 _t1226 = [_t1223, _t1224, _t1225];
  real _t1227 = prim •00CE<$[3]; $[3]; $[]> (_t1226, refPos120E);
  real _t1228 = prim -0026<$[]> (_t1222, _t1227);
  real _t1229 = 0.e0;
  real _t122A = 0.e0;
  real _t122B = 0.1e1;
  vec3 _t122C = [_t1229, _t122A, _t122B];
  real _t122D = prim •00CE<$[3]; $[3]; $[]> (_t122C, dPos120F);
  real _t122E = prim /0055 (_t1228, _t122D);
  bool _t122F = prim >0080 (time1210, _t122E);
  real _t1230 = 0.e0;
  real _t1231 = 0.e0;
  real _t1232 = 0.1e1;
  vec3 _t1233 = [_t1230, _t1231, _t1232];
  real _t1234 = prim •00CE<$[3]; $[3]; $[]> (_t1233, dPos120F);
  real _t1235 = prim |()|00B5<$[]> (_t1234);
  real _t1236 = 0.1e-20;
  bool _t1237 = prim >=007E (_t1235, _t1236);
  bool _t1238 = prim $and01C4 (_t122F, _t1237);
  bool _t1239 = prim $and01C4 (_t1221, _t1238);
  if _t1239 {
    real _t123A = -0.5e0;
    real _t123B = 0.e0;
    real _t123C = 0.e0;
    real _t123D = 0.1e1;
    vec3 _t123E = [_t123B, _t123C, _t123D];
    real _t123F = prim •00CE<$[3]; $[3]; $[]> (_t123E, refPos120E);
    real _t1240 = prim -0026<$[]> (_t123A, _t123F);
    real _t1241 = 0.e0;
    real _t1242 = 0.e0;
    real _t1243 = 0.1e1;
    vec3 _t1244 = [_t1241, _t1242, _t1243];
    real _t1245 = prim •00CE<$[3]; $[3]; $[]> (_t1244, dPos120F);
    real _t1246 = prim /0055 (_t1240, _t1245);
    vec3 _t1247 = prim *0038<$[3]> (dPos120F, _t1246);
    vec3 _t1248 = prim +0017<$[3]> (refPos120E, _t1247);
    real _t1249 = -0.5e0;
    real _t124A = 0.e0;
    real _t124B = 0.e0;
    real _t124C = 0.1e1;
    vec3 _t124D = [_t124A, _t124B, _t124C];
    real _t124E = prim •00CE<$[3]; $[3]; $[]> (_t124D, refPos120E);
    real _t124F = prim -0026<$[]> (_t1249, _t124E);
    real _t1250 = 0.e0;
    real _t1251 = 0.e0;
    real _t1252 = 0.1e1;
    vec3 _t1253 = [_t1250, _t1251, _t1252];
    real _t1254 = prim •00CE<$[3]; $[3]; $[]> (_t1253, dPos120F);
    real _t1255 = prim /0055 (_t124F, _t1254);
    vec3 _t1256 = prim *0038<$[3]> (dPos120F, _t1255);
    vec3 _t1257 = prim +0017<$[3]> (refPos120E, _t1256);
    real _t1258 = 0.1e-8;
    bool _t1259 = extractFemItemN((_t1248, _t1257, _t1258),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1259 {
      real _t125A = -0.5e0;
      real _t125B = 0.e0;
      real _t125C = 0.e0;
      real _t125D = 0.1e1;
      vec3 _t125E = [_t125B, _t125C, _t125D];
      real _t125F = prim •00CE<$[3]; $[3]; $[]> (_t125E, refPos120E);
      real _t1260 = prim -0026<$[]> (_t125A, _t125F);
      real _t1261 = 0.e0;
      real _t1262 = 0.e0;
      real _t1263 = 0.1e1;
      vec3 _t1264 = [_t1261, _t1262, _t1263];
      real _t1265 = prim •00CE<$[3]; $[3]; $[]> (_t1264, dPos120F);
      time1210 = prim /0055 (_t1260, _t1265);
      face1211 = 0;
    }
  }
  real _t1266 = 0.5e0;
  real _t1267 = 0.e0;
  real _t1268 = 0.e0;
  real _t1269 = 0.1e1;
  vec3 _t126A = [_t1267, _t1268, _t1269];
  real _t126B = prim •00CE<$[3]; $[3]; $[]> (_t126A, refPos120E);
  real _t126C = prim -0026<$[]> (_t1266, _t126B);
  real _t126D = 0.e0;
  real _t126E = 0.e0;
  real _t126F = 0.1e1;
  vec3 _t1270 = [_t126D, _t126E, _t126F];
  real _t1271 = prim •00CE<$[3]; $[3]; $[]> (_t1270, dPos120F);
  real _t1272 = prim /0055 (_t126C, _t1271);
  real _t1273 = -0.1e-15;
  bool _t1274 = prim >=007E (_t1272, _t1273);
  real _t1275 = 0.5e0;
  real _t1276 = 0.e0;
  real _t1277 = 0.e0;
  real _t1278 = 0.1e1;
  vec3 _t1279 = [_t1276, _t1277, _t1278];
  real _t127A = prim •00CE<$[3]; $[3]; $[]> (_t1279, refPos120E);
  real _t127B = prim -0026<$[]> (_t1275, _t127A);
  real _t127C = 0.e0;
  real _t127D = 0.e0;
  real _t127E = 0.1e1;
  vec3 _t127F = [_t127C, _t127D, _t127E];
  real _t1280 = prim •00CE<$[3]; $[3]; $[]> (_t127F, dPos120F);
  real _t1281 = prim /0055 (_t127B, _t1280);
  bool _t1282 = prim >0080 (time1210, _t1281);
  real _t1283 = 0.e0;
  real _t1284 = 0.e0;
  real _t1285 = 0.1e1;
  vec3 _t1286 = [_t1283, _t1284, _t1285];
  real _t1287 = prim •00CE<$[3]; $[3]; $[]> (_t1286, dPos120F);
  real _t1288 = prim |()|00B5<$[]> (_t1287);
  real _t1289 = 0.1e-20;
  bool _t128A = prim >=007E (_t1288, _t1289);
  bool _t128B = prim $and01C4 (_t1282, _t128A);
  bool _t128C = prim $and01C4 (_t1274, _t128B);
  if _t128C {
    real _t128D = 0.5e0;
    real _t128E = 0.e0;
    real _t128F = 0.e0;
    real _t1290 = 0.1e1;
    vec3 _t1291 = [_t128E, _t128F, _t1290];
    real _t1292 = prim •00CE<$[3]; $[3]; $[]> (_t1291, refPos120E);
    real _t1293 = prim -0026<$[]> (_t128D, _t1292);
    real _t1294 = 0.e0;
    real _t1295 = 0.e0;
    real _t1296 = 0.1e1;
    vec3 _t1297 = [_t1294, _t1295, _t1296];
    real _t1298 = prim •00CE<$[3]; $[3]; $[]> (_t1297, dPos120F);
    real _t1299 = prim /0055 (_t1293, _t1298);
    vec3 _t129A = prim *0038<$[3]> (dPos120F, _t1299);
    vec3 _t129B = prim +0017<$[3]> (refPos120E, _t129A);
    real _t129C = 0.5e0;
    real _t129D = 0.e0;
    real _t129E = 0.e0;
    real _t129F = 0.1e1;
    vec3 _t12A0 = [_t129D, _t129E, _t129F];
    real _t12A1 = prim •00CE<$[3]; $[3]; $[]> (_t12A0, refPos120E);
    real _t12A2 = prim -0026<$[]> (_t129C, _t12A1);
    real _t12A3 = 0.e0;
    real _t12A4 = 0.e0;
    real _t12A5 = 0.1e1;
    vec3 _t12A6 = [_t12A3, _t12A4, _t12A5];
    real _t12A7 = prim •00CE<$[3]; $[3]; $[]> (_t12A6, dPos120F);
    real _t12A8 = prim /0055 (_t12A2, _t12A7);
    vec3 _t12A9 = prim *0038<$[3]> (dPos120F, _t12A8);
    vec3 _t12AA = prim +0017<$[3]> (refPos120E, _t12A9);
    real _t12AB = 0.1e-8;
    bool _t12AC = extractFemItemN((_t129B, _t12AA, _t12AB),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12AC {
      real _t12AD = 0.5e0;
      real _t12AE = 0.e0;
      real _t12AF = 0.e0;
      real _t12B0 = 0.1e1;
      vec3 _t12B1 = [_t12AE, _t12AF, _t12B0];
      real _t12B2 = prim •00CE<$[3]; $[3]; $[]> (_t12B1, refPos120E);
      real _t12B3 = prim -0026<$[]> (_t12AD, _t12B2);
      real _t12B4 = 0.e0;
      real _t12B5 = 0.e0;
      real _t12B6 = 0.1e1;
      vec3 _t12B7 = [_t12B4, _t12B5, _t12B6];
      real _t12B8 = prim •00CE<$[3]; $[3]; $[]> (_t12B7, dPos120F);
      time1210 = prim /0055 (_t12B3, _t12B8);
      face1211 = 1;
    }
  }
  real _t12B9 = -0.5e0;
  real _t12BA = 0.e0;
  real _t12BB = 0.1e1;
  real _t12BC = 0.e0;
  vec3 _t12BD = [_t12BA, _t12BB, _t12BC];
  real _t12BE = prim •00CE<$[3]; $[3]; $[]> (_t12BD, refPos120E);
  real _t12BF = prim -0026<$[]> (_t12B9, _t12BE);
  real _t12C0 = 0.e0;
  real _t12C1 = 0.1e1;
  real _t12C2 = 0.e0;
  vec3 _t12C3 = [_t12C0, _t12C1, _t12C2];
  real _t12C4 = prim •00CE<$[3]; $[3]; $[]> (_t12C3, dPos120F);
  real _t12C5 = prim /0055 (_t12BF, _t12C4);
  real _t12C6 = -0.1e-15;
  bool _t12C7 = prim >=007E (_t12C5, _t12C6);
  real _t12C8 = -0.5e0;
  real _t12C9 = 0.e0;
  real _t12CA = 0.1e1;
  real _t12CB = 0.e0;
  vec3 _t12CC = [_t12C9, _t12CA, _t12CB];
  real _t12CD = prim •00CE<$[3]; $[3]; $[]> (_t12CC, refPos120E);
  real _t12CE = prim -0026<$[]> (_t12C8, _t12CD);
  real _t12CF = 0.e0;
  real _t12D0 = 0.1e1;
  real _t12D1 = 0.e0;
  vec3 _t12D2 = [_t12CF, _t12D0, _t12D1];
  real _t12D3 = prim •00CE<$[3]; $[3]; $[]> (_t12D2, dPos120F);
  real _t12D4 = prim /0055 (_t12CE, _t12D3);
  bool _t12D5 = prim >0080 (time1210, _t12D4);
  real _t12D6 = 0.e0;
  real _t12D7 = 0.1e1;
  real _t12D8 = 0.e0;
  vec3 _t12D9 = [_t12D6, _t12D7, _t12D8];
  real _t12DA = prim •00CE<$[3]; $[3]; $[]> (_t12D9, dPos120F);
  real _t12DB = prim |()|00B5<$[]> (_t12DA);
  real _t12DC = 0.1e-20;
  bool _t12DD = prim >=007E (_t12DB, _t12DC);
  bool _t12DE = prim $and01C4 (_t12D5, _t12DD);
  bool _t12DF = prim $and01C4 (_t12C7, _t12DE);
  if _t12DF {
    real _t12E0 = -0.5e0;
    real _t12E1 = 0.e0;
    real _t12E2 = 0.1e1;
    real _t12E3 = 0.e0;
    vec3 _t12E4 = [_t12E1, _t12E2, _t12E3];
    real _t12E5 = prim •00CE<$[3]; $[3]; $[]> (_t12E4, refPos120E);
    real _t12E6 = prim -0026<$[]> (_t12E0, _t12E5);
    real _t12E7 = 0.e0;
    real _t12E8 = 0.1e1;
    real _t12E9 = 0.e0;
    vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
    real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, dPos120F);
    real _t12EC = prim /0055 (_t12E6, _t12EB);
    vec3 _t12ED = prim *0038<$[3]> (dPos120F, _t12EC);
    vec3 _t12EE = prim +0017<$[3]> (refPos120E, _t12ED);
    real _t12EF = -0.5e0;
    real _t12F0 = 0.e0;
    real _t12F1 = 0.1e1;
    real _t12F2 = 0.e0;
    vec3 _t12F3 = [_t12F0, _t12F1, _t12F2];
    real _t12F4 = prim •00CE<$[3]; $[3]; $[]> (_t12F3, refPos120E);
    real _t12F5 = prim -0026<$[]> (_t12EF, _t12F4);
    real _t12F6 = 0.e0;
    real _t12F7 = 0.1e1;
    real _t12F8 = 0.e0;
    vec3 _t12F9 = [_t12F6, _t12F7, _t12F8];
    real _t12FA = prim •00CE<$[3]; $[3]; $[]> (_t12F9, dPos120F);
    real _t12FB = prim /0055 (_t12F5, _t12FA);
    vec3 _t12FC = prim *0038<$[3]> (dPos120F, _t12FB);
    vec3 _t12FD = prim +0017<$[3]> (refPos120E, _t12FC);
    real _t12FE = 0.1e-8;
    bool _t12FF = extractFemItemN((_t12EE, _t12FD, _t12FE),InsideInsert(File=checkInside.in)(Mesh),);
    if _t12FF {
      real _t1300 = -0.5e0;
      real _t1301 = 0.e0;
      real _t1302 = 0.1e1;
      real _t1303 = 0.e0;
      vec3 _t1304 = [_t1301, _t1302, _t1303];
      real _t1305 = prim •00CE<$[3]; $[3]; $[]> (_t1304, refPos120E);
      real _t1306 = prim -0026<$[]> (_t1300, _t1305);
      real _t1307 = 0.e0;
      real _t1308 = 0.1e1;
      real _t1309 = 0.e0;
      vec3 _t130A = [_t1307, _t1308, _t1309];
      real _t130B = prim •00CE<$[3]; $[3]; $[]> (_t130A, dPos120F);
      time1210 = prim /0055 (_t1306, _t130B);
      face1211 = 2;
    }
  }
  real _t130C = -0.5e0;
  real _t130D = -0.1e1;
  real _t130E = 0.e0;
  real _t130F = 0.e0;
  vec3 _t1310 = [_t130D, _t130E, _t130F];
  real _t1311 = prim •00CE<$[3]; $[3]; $[]> (_t1310, refPos120E);
  real _t1312 = prim -0026<$[]> (_t130C, _t1311);
  real _t1313 = -0.1e1;
  real _t1314 = 0.e0;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, dPos120F);
  real _t1318 = prim /0055 (_t1312, _t1317);
  real _t1319 = -0.1e-15;
  bool _t131A = prim >=007E (_t1318, _t1319);
  real _t131B = -0.5e0;
  real _t131C = -0.1e1;
  real _t131D = 0.e0;
  real _t131E = 0.e0;
  vec3 _t131F = [_t131C, _t131D, _t131E];
  real _t1320 = prim •00CE<$[3]; $[3]; $[]> (_t131F, refPos120E);
  real _t1321 = prim -0026<$[]> (_t131B, _t1320);
  real _t1322 = -0.1e1;
  real _t1323 = 0.e0;
  real _t1324 = 0.e0;
  vec3 _t1325 = [_t1322, _t1323, _t1324];
  real _t1326 = prim •00CE<$[3]; $[3]; $[]> (_t1325, dPos120F);
  real _t1327 = prim /0055 (_t1321, _t1326);
  bool _t1328 = prim >0080 (time1210, _t1327);
  real _t1329 = -0.1e1;
  real _t132A = 0.e0;
  real _t132B = 0.e0;
  vec3 _t132C = [_t1329, _t132A, _t132B];
  real _t132D = prim •00CE<$[3]; $[3]; $[]> (_t132C, dPos120F);
  real _t132E = prim |()|00B5<$[]> (_t132D);
  real _t132F = 0.1e-20;
  bool _t1330 = prim >=007E (_t132E, _t132F);
  bool _t1331 = prim $and01C4 (_t1328, _t1330);
  bool _t1332 = prim $and01C4 (_t131A, _t1331);
  if _t1332 {
    real _t1333 = -0.5e0;
    real _t1334 = -0.1e1;
    real _t1335 = 0.e0;
    real _t1336 = 0.e0;
    vec3 _t1337 = [_t1334, _t1335, _t1336];
    real _t1338 = prim •00CE<$[3]; $[3]; $[]> (_t1337, refPos120E);
    real _t1339 = prim -0026<$[]> (_t1333, _t1338);
    real _t133A = -0.1e1;
    real _t133B = 0.e0;
    real _t133C = 0.e0;
    vec3 _t133D = [_t133A, _t133B, _t133C];
    real _t133E = prim •00CE<$[3]; $[3]; $[]> (_t133D, dPos120F);
    real _t133F = prim /0055 (_t1339, _t133E);
    vec3 _t1340 = prim *0038<$[3]> (dPos120F, _t133F);
    vec3 _t1341 = prim +0017<$[3]> (refPos120E, _t1340);
    real _t1342 = -0.5e0;
    real _t1343 = -0.1e1;
    real _t1344 = 0.e0;
    real _t1345 = 0.e0;
    vec3 _t1346 = [_t1343, _t1344, _t1345];
    real _t1347 = prim •00CE<$[3]; $[3]; $[]> (_t1346, refPos120E);
    real _t1348 = prim -0026<$[]> (_t1342, _t1347);
    real _t1349 = -0.1e1;
    real _t134A = 0.e0;
    real _t134B = 0.e0;
    vec3 _t134C = [_t1349, _t134A, _t134B];
    real _t134D = prim •00CE<$[3]; $[3]; $[]> (_t134C, dPos120F);
    real _t134E = prim /0055 (_t1348, _t134D);
    vec3 _t134F = prim *0038<$[3]> (dPos120F, _t134E);
    vec3 _t1350 = prim +0017<$[3]> (refPos120E, _t134F);
    real _t1351 = 0.1e-8;
    bool _t1352 = extractFemItemN((_t1341, _t1350, _t1351),InsideInsert(File=checkInside.in)(Mesh),);
    if _t1352 {
      real _t1353 = -0.5e0;
      real _t1354 = -0.1e1;
      real _t1355 = 0.e0;
      real _t1356 = 0.e0;
      vec3 _t1357 = [_t1354, _t1355, _t1356];
      real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos120E);
      real _t1359 = prim -0026<$[]> (_t1353, _t1358);
      real _t135A = -0.1e1;
      real _t135B = 0.e0;
      real _t135C = 0.e0;
      vec3 _t135D = [_t135A, _t135B, _t135C];
      real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos120F);
      time1210 = prim /0055 (_t1359, _t135E);
      face1211 = 3;
    }
  }
  real _t135F = -0.5e0;
  real _t1360 = 0.e0;
  real _t1361 = -0.1e1;
  real _t1362 = 0.e0;
  vec3 _t1363 = [_t1360, _t1361, _t1362];
  real _t1364 = prim •00CE<$[3]; $[3]; $[]> (_t1363, refPos120E);
  real _t1365 = prim -0026<$[]> (_t135F, _t1364);
  real _t1366 = 0.e0;
  real _t1367 = -0.1e1;
  real _t1368 = 0.e0;
  vec3 _t1369 = [_t1366, _t1367, _t1368];
  real _t136A = prim •00CE<$[3]; $[3]; $[]> (_t1369, dPos120F);
  real _t136B = prim /0055 (_t1365, _t136A);
  real _t136C = -0.1e-15;
  bool _t136D = prim >=007E (_t136B, _t136C);
  real _t136E = -0.5e0;
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, refPos120E);
  real _t1374 = prim -0026<$[]> (_t136E, _t1373);
  real _t1375 = 0.e0;
  real _t1376 = -0.1e1;
  real _t1377 = 0.e0;
  vec3 _t1378 = [_t1375, _t1376, _t1377];
  real _t1379 = prim •00CE<$[3]; $[3]; $[]> (_t1378, dPos120F);
  real _t137A = prim /0055 (_t1374, _t1379);
  bool _t137B = prim >0080 (time1210, _t137A);
  real _t137C = 0.e0;
  real _t137D = -0.1e1;
  real _t137E = 0.e0;
  vec3 _t137F = [_t137C, _t137D, _t137E];
  real _t1380 = prim •00CE<$[3]; $[3]; $[]> (_t137F, dPos120F);
  real _t1381 = prim |()|00B5<$[]> (_t1380);
  real _t1382 = 0.1e-20;
  bool _t1383 = prim >=007E (_t1381, _t1382);
  bool _t1384 = prim $and01C4 (_t137B, _t1383);
  bool _t1385 = prim $and01C4 (_t136D, _t1384);
  if _t1385 {
    real _t1386 = -0.5e0;
    real _t1387 = 0.e0;
    real _t1388 = -0.1e1;
    real _t1389 = 0.e0;
    vec3 _t138A = [_t1387, _t1388, _t1389];
    real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, refPos120E);
    real _t138C = prim -0026<$[]> (_t1386, _t138B);
    real _t138D = 0.e0;
    real _t138E = -0.1e1;
    real _t138F = 0.e0;
    vec3 _t1390 = [_t138D, _t138E, _t138F];
    real _t1391 = prim •00CE<$[3]; $[3]; $[]> (_t1390, dPos120F);
    real _t1392 = prim /0055 (_t138C, _t1391);
    vec3 _t1393 = prim *0038<$[3]> (dPos120F, _t1392);
    vec3 _t1394 = prim +0017<$[3]> (refPos120E, _t1393);
    real _t1395 = -0.5e0;
    real _t1396 = 0.e0;
    real _t1397 = -0.1e1;
    real _t1398 = 0.e0;
    vec3 _t1399 = [_t1396, _t1397, _t1398];
    real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, refPos120E);
    real _t139B = prim -0026<$[]> (_t1395, _t139A);
    real _t139C = 0.e0;
    real _t139D = -0.1e1;
    real _t139E = 0.e0;
    vec3 _t139F = [_t139C, _t139D, _t139E];
    real _t13A0 = prim •00CE<$[3]; $[3]; $[]> (_t139F, dPos120F);
    real _t13A1 = prim /0055 (_t139B, _t13A0);
    vec3 _t13A2 = prim *0038<$[3]> (dPos120F, _t13A1);
    vec3 _t13A3 = prim +0017<$[3]> (refPos120E, _t13A2);
    real _t13A4 = 0.1e-8;
    bool _t13A5 = extractFemItemN((_t1394, _t13A3, _t13A4),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13A5 {
      real _t13A6 = -0.5e0;
      real _t13A7 = 0.e0;
      real _t13A8 = -0.1e1;
      real _t13A9 = 0.e0;
      vec3 _t13AA = [_t13A7, _t13A8, _t13A9];
      real _t13AB = prim •00CE<$[3]; $[3]; $[]> (_t13AA, refPos120E);
      real _t13AC = prim -0026<$[]> (_t13A6, _t13AB);
      real _t13AD = 0.e0;
      real _t13AE = -0.1e1;
      real _t13AF = 0.e0;
      vec3 _t13B0 = [_t13AD, _t13AE, _t13AF];
      real _t13B1 = prim •00CE<$[3]; $[3]; $[]> (_t13B0, dPos120F);
      time1210 = prim /0055 (_t13AC, _t13B1);
      face1211 = 4;
    }
  }
  real _t13B2 = -0.5e0;
  real _t13B3 = 0.1e1;
  real _t13B4 = 0.e0;
  real _t13B5 = -0.e0;
  vec3 _t13B6 = [_t13B3, _t13B4, _t13B5];
  real _t13B7 = prim •00CE<$[3]; $[3]; $[]> (_t13B6, refPos120E);
  real _t13B8 = prim -0026<$[]> (_t13B2, _t13B7);
  real _t13B9 = 0.1e1;
  real _t13BA = 0.e0;
  real _t13BB = -0.e0;
  vec3 _t13BC = [_t13B9, _t13BA, _t13BB];
  real _t13BD = prim •00CE<$[3]; $[3]; $[]> (_t13BC, dPos120F);
  real _t13BE = prim /0055 (_t13B8, _t13BD);
  real _t13BF = -0.1e-15;
  bool _t13C0 = prim >=007E (_t13BE, _t13BF);
  real _t13C1 = -0.5e0;
  real _t13C2 = 0.1e1;
  real _t13C3 = 0.e0;
  real _t13C4 = -0.e0;
  vec3 _t13C5 = [_t13C2, _t13C3, _t13C4];
  real _t13C6 = prim •00CE<$[3]; $[3]; $[]> (_t13C5, refPos120E);
  real _t13C7 = prim -0026<$[]> (_t13C1, _t13C6);
  real _t13C8 = 0.1e1;
  real _t13C9 = 0.e0;
  real _t13CA = -0.e0;
  vec3 _t13CB = [_t13C8, _t13C9, _t13CA];
  real _t13CC = prim •00CE<$[3]; $[3]; $[]> (_t13CB, dPos120F);
  real _t13CD = prim /0055 (_t13C7, _t13CC);
  bool _t13CE = prim >0080 (time1210, _t13CD);
  real _t13CF = 0.1e1;
  real _t13D0 = 0.e0;
  real _t13D1 = -0.e0;
  vec3 _t13D2 = [_t13CF, _t13D0, _t13D1];
  real _t13D3 = prim •00CE<$[3]; $[3]; $[]> (_t13D2, dPos120F);
  real _t13D4 = prim |()|00B5<$[]> (_t13D3);
  real _t13D5 = 0.1e-20;
  bool _t13D6 = prim >=007E (_t13D4, _t13D5);
  bool _t13D7 = prim $and01C4 (_t13CE, _t13D6);
  bool _t13D8 = prim $and01C4 (_t13C0, _t13D7);
  if _t13D8 {
    real _t13D9 = -0.5e0;
    real _t13DA = 0.1e1;
    real _t13DB = 0.e0;
    real _t13DC = -0.e0;
    vec3 _t13DD = [_t13DA, _t13DB, _t13DC];
    real _t13DE = prim •00CE<$[3]; $[3]; $[]> (_t13DD, refPos120E);
    real _t13DF = prim -0026<$[]> (_t13D9, _t13DE);
    real _t13E0 = 0.1e1;
    real _t13E1 = 0.e0;
    real _t13E2 = -0.e0;
    vec3 _t13E3 = [_t13E0, _t13E1, _t13E2];
    real _t13E4 = prim •00CE<$[3]; $[3]; $[]> (_t13E3, dPos120F);
    real _t13E5 = prim /0055 (_t13DF, _t13E4);
    vec3 _t13E6 = prim *0038<$[3]> (dPos120F, _t13E5);
    vec3 _t13E7 = prim +0017<$[3]> (refPos120E, _t13E6);
    real _t13E8 = -0.5e0;
    real _t13E9 = 0.1e1;
    real _t13EA = 0.e0;
    real _t13EB = -0.e0;
    vec3 _t13EC = [_t13E9, _t13EA, _t13EB];
    real _t13ED = prim •00CE<$[3]; $[3]; $[]> (_t13EC, refPos120E);
    real _t13EE = prim -0026<$[]> (_t13E8, _t13ED);
    real _t13EF = 0.1e1;
    real _t13F0 = 0.e0;
    real _t13F1 = -0.e0;
    vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
    real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos120F);
    real _t13F4 = prim /0055 (_t13EE, _t13F3);
    vec3 _t13F5 = prim *0038<$[3]> (dPos120F, _t13F4);
    vec3 _t13F6 = prim +0017<$[3]> (refPos120E, _t13F5);
    real _t13F7 = 0.1e-8;
    bool _t13F8 = extractFemItemN((_t13E7, _t13F6, _t13F7),InsideInsert(File=checkInside.in)(Mesh),);
    if _t13F8 {
      real _t13F9 = -0.5e0;
      real _t13FA = 0.1e1;
      real _t13FB = 0.e0;
      real _t13FC = -0.e0;
      vec3 _t13FD = [_t13FA, _t13FB, _t13FC];
      real _t13FE = prim •00CE<$[3]; $[3]; $[]> (_t13FD, refPos120E);
      real _t13FF = prim -0026<$[]> (_t13F9, _t13FE);
      real _t1400 = 0.1e1;
      real _t1401 = 0.e0;
      real _t1402 = -0.e0;
      vec3 _t1403 = [_t1400, _t1401, _t1402];
      real _t1404 = prim •00CE<$[3]; $[3]; $[]> (_t1403, dPos120F);
      time1210 = prim /0055 (_t13FF, _t1404);
      face1211 = 5;
    }
  }
  int _t1405 = -1;
  bool _t1406 = prim !=0086 (face1211, _t1405);
  if _t1406 {
    real _t1407 = 0.e0;
    real _t1408 = prim max0125 (time1210, _t1407);
    real _t1409 = (real)face1211;
    vec2 _t140A = [_t1408, _t1409];
    return _t140A;
  } else {
    real _t140B = -0.1e1;
    real _t140C = -0.1e1;
    vec2 _t140D = [_t140B, _t140C];
    return _t140D;
  }
}
function vec2#0 _exit140E (vec3 refPos120E, vec3 dPos120F, int i140F)
{
  real time1410 = +inf;
  int face1411 = -1;
  real faceTime1412 = -inf;
  real _t1413 = -0.5e0;
  real _t1414 = 0.e0;
  real _t1415 = 0.e0;
  real _t1416 = 0.1e1;
  vec3 _t1417 = [_t1414, _t1415, _t1416];
  real _t1418 = prim •00CE<$[3]; $[3]; $[]> (_t1417, refPos120E);
  real _t1419 = prim -0026<$[]> (_t1413, _t1418);
  real _t141A = 0.e0;
  real _t141B = 0.e0;
  real _t141C = 0.1e1;
  vec3 _t141D = [_t141A, _t141B, _t141C];
  real _t141E = prim •00CE<$[3]; $[3]; $[]> (_t141D, dPos120F);
  real _t141F = prim /0055 (_t1419, _t141E);
  real _t1420 = -0.1e-15;
  bool _t1421 = prim >=007E (_t141F, _t1420);
  real _t1422 = -0.5e0;
  real _t1423 = 0.e0;
  real _t1424 = 0.e0;
  real _t1425 = 0.1e1;
  vec3 _t1426 = [_t1423, _t1424, _t1425];
  real _t1427 = prim •00CE<$[3]; $[3]; $[]> (_t1426, refPos120E);
  real _t1428 = prim -0026<$[]> (_t1422, _t1427);
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = 0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, dPos120F);
  real _t142E = prim /0055 (_t1428, _t142D);
  bool _t142F = prim >0080 (time1410, _t142E);
  real _t1430 = 0.e0;
  real _t1431 = 0.e0;
  real _t1432 = 0.1e1;
  vec3 _t1433 = [_t1430, _t1431, _t1432];
  real _t1434 = prim •00CE<$[3]; $[3]; $[]> (_t1433, dPos120F);
  real _t1435 = prim |()|00B5<$[]> (_t1434);
  real _t1436 = 0.1e-20;
  bool _t1437 = prim >=007E (_t1435, _t1436);
  bool _t1438 = prim $and01C4 (_t142F, _t1437);
  bool _t1439 = prim $and01C4 (_t1421, _t1438);
  if _t1439 {
    int _t143A = 0;
    bool _t143B = prim !=0086 (i140F, _t143A);
    if _t143B {
      real _t143C = -0.5e0;
      real _t143D = 0.e0;
      real _t143E = 0.e0;
      real _t143F = 0.1e1;
      vec3 _t1440 = [_t143D, _t143E, _t143F];
      real _t1441 = prim •00CE<$[3]; $[3]; $[]> (_t1440, refPos120E);
      real _t1442 = prim -0026<$[]> (_t143C, _t1441);
      real _t1443 = 0.e0;
      real _t1444 = 0.e0;
      real _t1445 = 0.1e1;
      vec3 _t1446 = [_t1443, _t1444, _t1445];
      real _t1447 = prim •00CE<$[3]; $[3]; $[]> (_t1446, dPos120F);
      time1410 = prim /0055 (_t1442, _t1447);
      face1411 = 0;
    } else {
      real _t1448 = -0.5e0;
      real _t1449 = 0.e0;
      real _t144A = 0.e0;
      real _t144B = 0.1e1;
      vec3 _t144C = [_t1449, _t144A, _t144B];
      real _t144D = prim •00CE<$[3]; $[3]; $[]> (_t144C, refPos120E);
      real _t144E = prim -0026<$[]> (_t1448, _t144D);
      real _t144F = 0.e0;
      real _t1450 = 0.e0;
      real _t1451 = 0.1e1;
      vec3 _t1452 = [_t144F, _t1450, _t1451];
      real _t1453 = prim •00CE<$[3]; $[3]; $[]> (_t1452, dPos120F);
      faceTime1412 = prim /0055 (_t144E, _t1453);
    }
  }
  real _t1454 = 0.5e0;
  real _t1455 = 0.e0;
  real _t1456 = 0.e0;
  real _t1457 = 0.1e1;
  vec3 _t1458 = [_t1455, _t1456, _t1457];
  real _t1459 = prim •00CE<$[3]; $[3]; $[]> (_t1458, refPos120E);
  real _t145A = prim -0026<$[]> (_t1454, _t1459);
  real _t145B = 0.e0;
  real _t145C = 0.e0;
  real _t145D = 0.1e1;
  vec3 _t145E = [_t145B, _t145C, _t145D];
  real _t145F = prim •00CE<$[3]; $[3]; $[]> (_t145E, dPos120F);
  real _t1460 = prim /0055 (_t145A, _t145F);
  real _t1461 = -0.1e-15;
  bool _t1462 = prim >=007E (_t1460, _t1461);
  real _t1463 = 0.5e0;
  real _t1464 = 0.e0;
  real _t1465 = 0.e0;
  real _t1466 = 0.1e1;
  vec3 _t1467 = [_t1464, _t1465, _t1466];
  real _t1468 = prim •00CE<$[3]; $[3]; $[]> (_t1467, refPos120E);
  real _t1469 = prim -0026<$[]> (_t1463, _t1468);
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = 0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, dPos120F);
  real _t146F = prim /0055 (_t1469, _t146E);
  bool _t1470 = prim >0080 (time1410, _t146F);
  real _t1471 = 0.e0;
  real _t1472 = 0.e0;
  real _t1473 = 0.1e1;
  vec3 _t1474 = [_t1471, _t1472, _t1473];
  real _t1475 = prim •00CE<$[3]; $[3]; $[]> (_t1474, dPos120F);
  real _t1476 = prim |()|00B5<$[]> (_t1475);
  real _t1477 = 0.1e-20;
  bool _t1478 = prim >=007E (_t1476, _t1477);
  bool _t1479 = prim $and01C4 (_t1470, _t1478);
  bool _t147A = prim $and01C4 (_t1462, _t1479);
  if _t147A {
    int _t147B = 1;
    bool _t147C = prim !=0086 (i140F, _t147B);
    if _t147C {
      real _t147D = 0.5e0;
      real _t147E = 0.e0;
      real _t147F = 0.e0;
      real _t1480 = 0.1e1;
      vec3 _t1481 = [_t147E, _t147F, _t1480];
      real _t1482 = prim •00CE<$[3]; $[3]; $[]> (_t1481, refPos120E);
      real _t1483 = prim -0026<$[]> (_t147D, _t1482);
      real _t1484 = 0.e0;
      real _t1485 = 0.e0;
      real _t1486 = 0.1e1;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, dPos120F);
      time1410 = prim /0055 (_t1483, _t1488);
      face1411 = 1;
    } else {
      real _t1489 = 0.5e0;
      real _t148A = 0.e0;
      real _t148B = 0.e0;
      real _t148C = 0.1e1;
      vec3 _t148D = [_t148A, _t148B, _t148C];
      real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, refPos120E);
      real _t148F = prim -0026<$[]> (_t1489, _t148E);
      real _t1490 = 0.e0;
      real _t1491 = 0.e0;
      real _t1492 = 0.1e1;
      vec3 _t1493 = [_t1490, _t1491, _t1492];
      real _t1494 = prim •00CE<$[3]; $[3]; $[]> (_t1493, dPos120F);
      faceTime1412 = prim /0055 (_t148F, _t1494);
    }
  }
  real _t1495 = -0.5e0;
  real _t1496 = 0.e0;
  real _t1497 = 0.1e1;
  real _t1498 = 0.e0;
  vec3 _t1499 = [_t1496, _t1497, _t1498];
  real _t149A = prim •00CE<$[3]; $[3]; $[]> (_t1499, refPos120E);
  real _t149B = prim -0026<$[]> (_t1495, _t149A);
  real _t149C = 0.e0;
  real _t149D = 0.1e1;
  real _t149E = 0.e0;
  vec3 _t149F = [_t149C, _t149D, _t149E];
  real _t14A0 = prim •00CE<$[3]; $[3]; $[]> (_t149F, dPos120F);
  real _t14A1 = prim /0055 (_t149B, _t14A0);
  real _t14A2 = -0.1e-15;
  bool _t14A3 = prim >=007E (_t14A1, _t14A2);
  real _t14A4 = -0.5e0;
  real _t14A5 = 0.e0;
  real _t14A6 = 0.1e1;
  real _t14A7 = 0.e0;
  vec3 _t14A8 = [_t14A5, _t14A6, _t14A7];
  real _t14A9 = prim •00CE<$[3]; $[3]; $[]> (_t14A8, refPos120E);
  real _t14AA = prim -0026<$[]> (_t14A4, _t14A9);
  real _t14AB = 0.e0;
  real _t14AC = 0.1e1;
  real _t14AD = 0.e0;
  vec3 _t14AE = [_t14AB, _t14AC, _t14AD];
  real _t14AF = prim •00CE<$[3]; $[3]; $[]> (_t14AE, dPos120F);
  real _t14B0 = prim /0055 (_t14AA, _t14AF);
  bool _t14B1 = prim >0080 (time1410, _t14B0);
  real _t14B2 = 0.e0;
  real _t14B3 = 0.1e1;
  real _t14B4 = 0.e0;
  vec3 _t14B5 = [_t14B2, _t14B3, _t14B4];
  real _t14B6 = prim •00CE<$[3]; $[3]; $[]> (_t14B5, dPos120F);
  real _t14B7 = prim |()|00B5<$[]> (_t14B6);
  real _t14B8 = 0.1e-20;
  bool _t14B9 = prim >=007E (_t14B7, _t14B8);
  bool _t14BA = prim $and01C4 (_t14B1, _t14B9);
  bool _t14BB = prim $and01C4 (_t14A3, _t14BA);
  if _t14BB {
    int _t14BC = 2;
    bool _t14BD = prim !=0086 (i140F, _t14BC);
    if _t14BD {
      real _t14BE = -0.5e0;
      real _t14BF = 0.e0;
      real _t14C0 = 0.1e1;
      real _t14C1 = 0.e0;
      vec3 _t14C2 = [_t14BF, _t14C0, _t14C1];
      real _t14C3 = prim •00CE<$[3]; $[3]; $[]> (_t14C2, refPos120E);
      real _t14C4 = prim -0026<$[]> (_t14BE, _t14C3);
      real _t14C5 = 0.e0;
      real _t14C6 = 0.1e1;
      real _t14C7 = 0.e0;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, dPos120F);
      time1410 = prim /0055 (_t14C4, _t14C9);
      face1411 = 2;
    } else {
      real _t14CA = -0.5e0;
      real _t14CB = 0.e0;
      real _t14CC = 0.1e1;
      real _t14CD = 0.e0;
      vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
      real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, refPos120E);
      real _t14D0 = prim -0026<$[]> (_t14CA, _t14CF);
      real _t14D1 = 0.e0;
      real _t14D2 = 0.1e1;
      real _t14D3 = 0.e0;
      vec3 _t14D4 = [_t14D1, _t14D2, _t14D3];
      real _t14D5 = prim •00CE<$[3]; $[3]; $[]> (_t14D4, dPos120F);
      faceTime1412 = prim /0055 (_t14D0, _t14D5);
    }
  }
  real _t14D6 = -0.5e0;
  real _t14D7 = -0.1e1;
  real _t14D8 = 0.e0;
  real _t14D9 = 0.e0;
  vec3 _t14DA = [_t14D7, _t14D8, _t14D9];
  real _t14DB = prim •00CE<$[3]; $[3]; $[]> (_t14DA, refPos120E);
  real _t14DC = prim -0026<$[]> (_t14D6, _t14DB);
  real _t14DD = -0.1e1;
  real _t14DE = 0.e0;
  real _t14DF = 0.e0;
  vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
  real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, dPos120F);
  real _t14E2 = prim /0055 (_t14DC, _t14E1);
  real _t14E3 = -0.1e-15;
  bool _t14E4 = prim >=007E (_t14E2, _t14E3);
  real _t14E5 = -0.5e0;
  real _t14E6 = -0.1e1;
  real _t14E7 = 0.e0;
  real _t14E8 = 0.e0;
  vec3 _t14E9 = [_t14E6, _t14E7, _t14E8];
  real _t14EA = prim •00CE<$[3]; $[3]; $[]> (_t14E9, refPos120E);
  real _t14EB = prim -0026<$[]> (_t14E5, _t14EA);
  real _t14EC = -0.1e1;
  real _t14ED = 0.e0;
  real _t14EE = 0.e0;
  vec3 _t14EF = [_t14EC, _t14ED, _t14EE];
  real _t14F0 = prim •00CE<$[3]; $[3]; $[]> (_t14EF, dPos120F);
  real _t14F1 = prim /0055 (_t14EB, _t14F0);
  bool _t14F2 = prim >0080 (time1410, _t14F1);
  real _t14F3 = -0.1e1;
  real _t14F4 = 0.e0;
  real _t14F5 = 0.e0;
  vec3 _t14F6 = [_t14F3, _t14F4, _t14F5];
  real _t14F7 = prim •00CE<$[3]; $[3]; $[]> (_t14F6, dPos120F);
  real _t14F8 = prim |()|00B5<$[]> (_t14F7);
  real _t14F9 = 0.1e-20;
  bool _t14FA = prim >=007E (_t14F8, _t14F9);
  bool _t14FB = prim $and01C4 (_t14F2, _t14FA);
  bool _t14FC = prim $and01C4 (_t14E4, _t14FB);
  if _t14FC {
    int _t14FD = 3;
    bool _t14FE = prim !=0086 (i140F, _t14FD);
    if _t14FE {
      real _t14FF = -0.5e0;
      real _t1500 = -0.1e1;
      real _t1501 = 0.e0;
      real _t1502 = 0.e0;
      vec3 _t1503 = [_t1500, _t1501, _t1502];
      real _t1504 = prim •00CE<$[3]; $[3]; $[]> (_t1503, refPos120E);
      real _t1505 = prim -0026<$[]> (_t14FF, _t1504);
      real _t1506 = -0.1e1;
      real _t1507 = 0.e0;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, dPos120F);
      time1410 = prim /0055 (_t1505, _t150A);
      face1411 = 3;
    } else {
      real _t150B = -0.5e0;
      real _t150C = -0.1e1;
      real _t150D = 0.e0;
      real _t150E = 0.e0;
      vec3 _t150F = [_t150C, _t150D, _t150E];
      real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, refPos120E);
      real _t1511 = prim -0026<$[]> (_t150B, _t1510);
      real _t1512 = -0.1e1;
      real _t1513 = 0.e0;
      real _t1514 = 0.e0;
      vec3 _t1515 = [_t1512, _t1513, _t1514];
      real _t1516 = prim •00CE<$[3]; $[3]; $[]> (_t1515, dPos120F);
      faceTime1412 = prim /0055 (_t1511, _t1516);
    }
  }
  real _t1517 = -0.5e0;
  real _t1518 = 0.e0;
  real _t1519 = -0.1e1;
  real _t151A = 0.e0;
  vec3 _t151B = [_t1518, _t1519, _t151A];
  real _t151C = prim •00CE<$[3]; $[3]; $[]> (_t151B, refPos120E);
  real _t151D = prim -0026<$[]> (_t1517, _t151C);
  real _t151E = 0.e0;
  real _t151F = -0.1e1;
  real _t1520 = 0.e0;
  vec3 _t1521 = [_t151E, _t151F, _t1520];
  real _t1522 = prim •00CE<$[3]; $[3]; $[]> (_t1521, dPos120F);
  real _t1523 = prim /0055 (_t151D, _t1522);
  real _t1524 = -0.1e-15;
  bool _t1525 = prim >=007E (_t1523, _t1524);
  real _t1526 = -0.5e0;
  real _t1527 = 0.e0;
  real _t1528 = -0.1e1;
  real _t1529 = 0.e0;
  vec3 _t152A = [_t1527, _t1528, _t1529];
  real _t152B = prim •00CE<$[3]; $[3]; $[]> (_t152A, refPos120E);
  real _t152C = prim -0026<$[]> (_t1526, _t152B);
  real _t152D = 0.e0;
  real _t152E = -0.1e1;
  real _t152F = 0.e0;
  vec3 _t1530 = [_t152D, _t152E, _t152F];
  real _t1531 = prim •00CE<$[3]; $[3]; $[]> (_t1530, dPos120F);
  real _t1532 = prim /0055 (_t152C, _t1531);
  bool _t1533 = prim >0080 (time1410, _t1532);
  real _t1534 = 0.e0;
  real _t1535 = -0.1e1;
  real _t1536 = 0.e0;
  vec3 _t1537 = [_t1534, _t1535, _t1536];
  real _t1538 = prim •00CE<$[3]; $[3]; $[]> (_t1537, dPos120F);
  real _t1539 = prim |()|00B5<$[]> (_t1538);
  real _t153A = 0.1e-20;
  bool _t153B = prim >=007E (_t1539, _t153A);
  bool _t153C = prim $and01C4 (_t1533, _t153B);
  bool _t153D = prim $and01C4 (_t1525, _t153C);
  if _t153D {
    int _t153E = 4;
    bool _t153F = prim !=0086 (i140F, _t153E);
    if _t153F {
      real _t1540 = -0.5e0;
      real _t1541 = 0.e0;
      real _t1542 = -0.1e1;
      real _t1543 = 0.e0;
      vec3 _t1544 = [_t1541, _t1542, _t1543];
      real _t1545 = prim •00CE<$[3]; $[3]; $[]> (_t1544, refPos120E);
      real _t1546 = prim -0026<$[]> (_t1540, _t1545);
      real _t1547 = 0.e0;
      real _t1548 = -0.1e1;
      real _t1549 = 0.e0;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, dPos120F);
      time1410 = prim /0055 (_t1546, _t154B);
      face1411 = 4;
    } else {
      real _t154C = -0.5e0;
      real _t154D = 0.e0;
      real _t154E = -0.1e1;
      real _t154F = 0.e0;
      vec3 _t1550 = [_t154D, _t154E, _t154F];
      real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, refPos120E);
      real _t1552 = prim -0026<$[]> (_t154C, _t1551);
      real _t1553 = 0.e0;
      real _t1554 = -0.1e1;
      real _t1555 = 0.e0;
      vec3 _t1556 = [_t1553, _t1554, _t1555];
      real _t1557 = prim •00CE<$[3]; $[3]; $[]> (_t1556, dPos120F);
      faceTime1412 = prim /0055 (_t1552, _t1557);
    }
  }
  real _t1558 = -0.5e0;
  real _t1559 = 0.1e1;
  real _t155A = 0.e0;
  real _t155B = -0.e0;
  vec3 _t155C = [_t1559, _t155A, _t155B];
  real _t155D = prim •00CE<$[3]; $[3]; $[]> (_t155C, refPos120E);
  real _t155E = prim -0026<$[]> (_t1558, _t155D);
  real _t155F = 0.1e1;
  real _t1560 = 0.e0;
  real _t1561 = -0.e0;
  vec3 _t1562 = [_t155F, _t1560, _t1561];
  real _t1563 = prim •00CE<$[3]; $[3]; $[]> (_t1562, dPos120F);
  real _t1564 = prim /0055 (_t155E, _t1563);
  real _t1565 = -0.1e-15;
  bool _t1566 = prim >=007E (_t1564, _t1565);
  real _t1567 = -0.5e0;
  real _t1568 = 0.1e1;
  real _t1569 = 0.e0;
  real _t156A = -0.e0;
  vec3 _t156B = [_t1568, _t1569, _t156A];
  real _t156C = prim •00CE<$[3]; $[3]; $[]> (_t156B, refPos120E);
  real _t156D = prim -0026<$[]> (_t1567, _t156C);
  real _t156E = 0.1e1;
  real _t156F = 0.e0;
  real _t1570 = -0.e0;
  vec3 _t1571 = [_t156E, _t156F, _t1570];
  real _t1572 = prim •00CE<$[3]; $[3]; $[]> (_t1571, dPos120F);
  real _t1573 = prim /0055 (_t156D, _t1572);
  bool _t1574 = prim >0080 (time1410, _t1573);
  real _t1575 = 0.1e1;
  real _t1576 = 0.e0;
  real _t1577 = -0.e0;
  vec3 _t1578 = [_t1575, _t1576, _t1577];
  real _t1579 = prim •00CE<$[3]; $[3]; $[]> (_t1578, dPos120F);
  real _t157A = prim |()|00B5<$[]> (_t1579);
  real _t157B = 0.1e-20;
  bool _t157C = prim >=007E (_t157A, _t157B);
  bool _t157D = prim $and01C4 (_t1574, _t157C);
  bool _t157E = prim $and01C4 (_t1566, _t157D);
  if _t157E {
    int _t157F = 5;
    bool _t1580 = prim !=0086 (i140F, _t157F);
    if _t1580 {
      real _t1581 = -0.5e0;
      real _t1582 = 0.1e1;
      real _t1583 = 0.e0;
      real _t1584 = -0.e0;
      vec3 _t1585 = [_t1582, _t1583, _t1584];
      real _t1586 = prim •00CE<$[3]; $[3]; $[]> (_t1585, refPos120E);
      real _t1587 = prim -0026<$[]> (_t1581, _t1586);
      real _t1588 = 0.1e1;
      real _t1589 = 0.e0;
      real _t158A = -0.e0;
      vec3 _t158B = [_t1588, _t1589, _t158A];
      real _t158C = prim •00CE<$[3]; $[3]; $[]> (_t158B, dPos120F);
      time1410 = prim /0055 (_t1587, _t158C);
      face1411 = 5;
    } else {
      real _t158D = -0.5e0;
      real _t158E = 0.1e1;
      real _t158F = 0.e0;
      real _t1590 = -0.e0;
      vec3 _t1591 = [_t158E, _t158F, _t1590];
      real _t1592 = prim •00CE<$[3]; $[3]; $[]> (_t1591, refPos120E);
      real _t1593 = prim -0026<$[]> (_t158D, _t1592);
      real _t1594 = 0.1e1;
      real _t1595 = 0.e0;
      real _t1596 = -0.e0;
      vec3 _t1597 = [_t1594, _t1595, _t1596];
      real _t1598 = prim •00CE<$[3]; $[3]; $[]> (_t1597, dPos120F);
      faceTime1412 = prim /0055 (_t1593, _t1598);
    }
  }
  int _t1599 = -1;
  bool _t159A = prim !=0086 (face1411, _t1599);
  if _t159A {
    real _t159B = 0.e0;
    real _t159C = prim max0125 (time1410, _t159B);
    real _t159D = (real)face1411;
    vec2 _t159E = [_t159C, _t159D];
    return _t159E;
  } else {
    real _t159F = -inf;
    bool _t15A0 = prim ==0084 (_t159F, faceTime1412);
    if _t15A0 {
      real _t15A1 = -0.1e1;
      real _t15A2 = -0.1e1;
      vec2 _t15A3 = [_t15A1, _t15A2];
      return _t15A3;
    } else {
      real _t15A4 = (real)i140F;
      vec2 _t15A5 = [faceTime1412, _t15A4];
      return _t15A5;
    }
  }
}
function Femdata: Mesh#0 domain15A6 (Femdata: Space arg015A7)
{
  Femdata: Mesh _t15A8 = extractFem(arg015A7, Mesh);
  return _t15A8;
}
function Femdata: Space#0 space15A9 (Femdata: FemFunc arg015AA)
{
  Femdata: Space _t15AB = extractFem(arg015AA, Space);
  return _t15AB;
}
function Femdata: FuncCell#3 funcCell15AC (Femdata: FemFunc arg015AD, Femdata: MeshCell arg115AE)
{
  int _t15AF = extractFemItem(CellIndex(MeshCell), int, arg115AE);
  Femdata: FuncCell _t15B0 = loadFem(FuncCell, arg015AD, _t15AF);
  return _t15B0;
}
function bool#1 stupid15C1 (vec3 x15C2)
{
  bool _t15C3 = true;
  return _t15C3;
}
function real#1 atent15DF (real a015E0, real d15E1)
{
  real _t15E2 = 0.e0;
  real _t15E3 = 0.1e1;
  real _t15E4 = 0.15e1;
  real _t15E5 = 0.1e1;
  real _t15E6 = prim |()|00B5<$[]> (d15E1);
  real _t15E7 = prim /0055 (_t15E6, thick04F3);
  real _t15E8 = prim -0026<$[]> (_t15E5, _t15E7);
  real _t15E9 = prim *0034 (_t15E4, _t15E8);
  real _t15EA = prim clamp0094<$[]> (_t15E2, _t15E3, _t15E9);
  real _t15EB = prim *0034 (a015E0, _t15EA);
  return _t15EB;
}
function vec3#1 fStep15EC (vec3 x15ED)
{
  real _t15EE = prim @00A5<#∞; %3; $[]> (pvoF15C0, x15ED);
  field(3)[3] _t15EF = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t15F0 = prim @00A5<#∞; %3; $[3]> (_t15EF, x15ED);
  vec3 _t15F1 = prim *0036<$[3]> (_t15EE, _t15F0);
  field(3)[3] _t15F2 = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t15F3 = prim @00A5<#∞; %3; $[3]> (_t15F2, x15ED);
  field(3)[3] _t15F4 = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t15F5 = prim @00A5<#∞; %3; $[3]> (_t15F4, x15ED);
  real _t15F6 = prim •00CE<$[3]; $[3]; $[]> (_t15F3, _t15F5);
  vec3 _t15F7 = prim /0057<$[3]> (_t15F1, _t15F6);
  vec3 _t15F8 = prim unary -008B<$[3]> (_t15F7);
  return _t15F8;
}
function real#1 fStrength15F9 (vec3 x15FA)
{
  field(3)[3] _t15FB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15FC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15FB);
  tensor[3,3] _t15FD = prim @00A5<#∞; %3; $[3,3]> (_t15FC, x15FA);
  real[3] _t15FE = prim evals009F (_t15FD);
  int _t15FF = 1;
  real _t1600 = prim $sub01C0<real; %3> (_t15FE, _t15FF);
  real _t1601 = prim unary -008B<$[]> (_t1600);
  field(3)[3] _t1602 = prim ∇00A8<#∞; %3> (F15B9);
  vec3 _t1603 = prim @00A5<#∞; %3; $[3]> (_t1602, x15FA);
  real _t1604 = prim |()|00B5<$[3]> (_t1603);
  real _t1605 = prim +0017<$[]> (fBias04F6, _t1604);
  real _t1606 = prim /0055 (_t1601, _t1605);
  return _t1606;
}
function bool#1 fTest1607 (vec3 x1608)
{
  field(3)[3] _t1609 = prim ∇00A8<#∞; %3> (pvoF15C0);
  vec3 _t160A = prim @00A5<#∞; %3; $[3]> (_t1609, x1608);
  real _t160B = prim |()|00B5<$[3]> (_t160A);
  real _t160C = 0.1e-7;
  bool _t160D = prim >0080 (_t160B, _t160C);
  return _t160D;
}
function real#1 fMask160E (vec3 x160F)
{
  real _t1610 = 0.1e1;
  return _t1610;
}
function bool#1 posTest1611 (vec3 x1612)
{
  bool _t1613;
  Femdata: RefCell _t1614 = func refcell0547 (block04CB);
  real _t1615 = 0.1e-8;
  bool _t1616 = extractFemItemN((_t1614, x1612, _t1615),InsideInsert(File=checkInside.in)(Mesh),);
  if _t1616 {
    bool _t1617;
    real _t1618 = func fStrength15F9 (x1612);
    bool _t1619 = prim >0080 (_t1618, fStrTh04F4);
    if _t1619 {
      bool _t161A;
      real _t161B = func fMask160E (x1612);
      bool _t161C = prim >=007E (_t161B, fMaskTh04F5);
      if _t161C {
        bool _t161D;
        bool _t161E = func fTest1607 (x1612);
        if _t161E {
          _t161D = func stupid15C1 (x1612);
        } else {
          _t161D = false;
        }
        _t161A = _t161D;
      } else {
        _t161A = false;
      }
      _t1617 = _t161A;
    } else {
      _t1617 = false;
    }
    _t1613 = _t1617;
  } else {
    _t1613 = false;
  }
  return _t1613;
}
globalInit {
  int _t04CF = 0;
  int _t04CD = 1;
  int _t04D1 = extractFemItem(NumCell(Mesh), int, block04CB);
  int _t04D0 = prim -0024 (_t04D1, _t04CD);
  int[] _t04D4 = prim $range01C3 (_t04CF, _t04D0);
  Femdata: MeshCell[] _t04D5 = {};
  foreach _t04D3 in _t04D4 {
    Femdata: MeshCell _t04D6 = loadFem(MeshCell, block04CB, _t04D3);
    _t04D5 = prim @0010<Femdata: MeshCell> (_t04D5, _t04D6);
  }
  0cell_block04CC = _t04D5;
  space04D7 = loadFem(Space, 0space04D7_intermedateGlobal04D8, block04CB);
  U04D9 = loadFem(FemFunc, 0U04D9_intermedateGlobal04DA, space04D7);
  c115B1 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04CC, cellChoice04DB);
  Femdata: FuncCell _t15B2 = func funcCell15AC (U04D9, c115B1);
  Femdata: FemFunc _t15B3 = extractFem(_t15B2, FemFunc);
  Femdata: FuncCell _t15B4 = func funcCell15AC (U04D9, c115B1);
  Femdata: FemFunc _t15B5 = extractFem(_t15B4, FemFunc);
  Femdata: Space _t15B6 = extractFem(_t15B5, Space);
  Femdata: FuncCell _t15B7 = func funcCell15AC (U04D9, c115B1);
  int _t15B8 = extractFemItem(CellIndex(FuncCell), int, _t15B7);
  F15B9 = femField(_t15B3,_t15B8,field(3)[],refField,);
  field(3)[3] _t15BA = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15BC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15BB);
  field(3)[3] _t15BD = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BE = prim •00E1<#∞; #∞; %3; $[3,3]; $[3]; $[3]> (_t15BC, _t15BD);
  pvoW15BF = prim ×00C2<#∞> (_t15BA, _t15BE);
  pvoF15C0 = prim •00E1<#∞; #∞; %3; $[3]; $[3]; $[]> (pvoW15BF, pvoW15BF);
  kernel _t15C4 = tent;
  IMAGE1D<double[3]> img15C5 = clamp(cmap04DD);
  CM15C6 = prim ⊛0074<#0; %1; $[3]> (_t15C4, img15C5);
  C15C7 = F15B9;
  vec3 _t15C8 = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camN15C9 = prim normalize0137<$[3]> (_t15C8);
  vec3 _t15CA = prim ×00BE (camN15C9, camUp04E6);
  camU15CB = prim normalize0137<$[3]> (_t15CA);
  camV15CC = prim ×00BE (camN15C9, camU15CB);
  vec3 _t15CD = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camDist15CE = prim |()|00B5<$[3]> (_t15CD);
  real _t15CF = 0.314159265358979323846264338327950288e1;
  real _t15D0 = prim *0034 (camFOV04EC, _t15CF);
  real _t15D1 = 0.36e3;
  real _t15D2 = prim /0055 (_t15D0, _t15D1);
  real _t15D3 = prim tan0179 (_t15D2);
  camVmax15D4 = prim *0034 (_t15D3, camDist15CE);
  real _t15D5 = (real)iresU04EE;
  real _t15D6 = prim *0034 (camVmax15D4, _t15D5);
  real _t15D7 = (real)iresV04EF;
  camUmax15D8 = prim /0055 (_t15D6, _t15D7);
  camNearVsp15D9 = prim +0017<$[]> (camNear04EA, camDist15CE);
  camFarVsp15DA = prim +0017<$[]> (camFar04EB, camDist15CE);
  tensor[3,3] _t15DB = [camU15CB, camV15CC, camN15C9];
  tensor[3,3] _t15DC = prim transpose0145<%3; %3> (_t15DB);
  vec3 _t15DD = prim normalize0137<$[3]> (litdir0506);
  litwsp15DE = prim •00CE<$[3,3]; $[3]; $[3]> (_t15DC, _t15DD);
}
strand ray (int ui161F, int vi1620) {
  real rayU1621;
  real rayV1628;
  real rayN162F;
  vec3 UV1630;
  vec3 rayOrig1633;
  vec3 rayVec1638;
  real alphaFix163D;
  vec3 eyeDir1640;
  real phKa1642;
  real phKd1643;
  real phKs1644;
  real phSp1645;
  output vec4 rgba1646;
  output real raw164B;
  vec3 rgb164C;
  real transp1650;
  {
    real _t1622 = prim unary -008B<$[]> (camUmax15D8);
    real _t1623 = -0.5e0;
    real _t1624 = (real)ui161F;
    real _t1625 = (real)iresU04EE;
    real _t1626 = 0.5e0;
    real _t1627 = prim -0026<$[]> (_t1625, _t1626);
    rayU1621 = prim lerp0098<$[]> (_t1622, camUmax15D8, _t1623, _t1624, _t1627);
    real _t1629 = prim unary -008B<$[]> (camVmax15D4);
    real _t162A = -0.5e0;
    real _t162B = (real)vi1620;
    real _t162C = (real)iresV04EF;
    real _t162D = 0.5e0;
    real _t162E = prim -0026<$[]> (_t162C, _t162D);
    rayV1628 = prim lerp0098<$[]> (_t1629, camVmax15D4, _t162A, _t162B, _t162E);
    rayN162F = camNearVsp15D9;
    vec3 _t1631 = prim *0036<$[3]> (rayU1621, camU15CB);
    vec3 _t1632 = prim *0036<$[3]> (rayV1628, camV15CC);
    UV1630 = prim +0017<$[3]> (_t1631, _t1632);
    vec3 _t1634;
    if camOrtho04ED {
      _t1634 = UV1630;
    } else {
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      real _t1637 = 0.e0;
      _t1634 = [_t1635, _t1636, _t1637];
    }
    rayOrig1633 = prim +0017<$[3]> (camEye04DE, _t1634);
    vec3 _t1639;
    if camOrtho04ED {
      real _t163A = 0.e0;
      real _t163B = 0.e0;
      real _t163C = 0.e0;
      _t1639 = [_t163A, _t163B, _t163C];
    } else {
      _t1639 = prim /0057<$[3]> (UV1630, camDist15CE);
    }
    rayVec1638 = prim +0017<$[3]> (camN15C9, _t1639);
    real _t163E = prim |()|00B5<$[3]> (rayVec1638);
    real _t163F = prim *0034 (_t163E, rayStep04F0);
    alphaFix163D = prim /0055 (_t163F, refStep04F1);
    vec3 _t1641 = prim normalize0137<$[3]> (rayVec1638);
    eyeDir1640 = prim unary -008B<$[3]> (_t1641);
    phKa1642 = phong04F9[0];
    phKd1643 = phong04F9[1];
    phKs1644 = phong04F9[2];
    phSp1645 = phong04F9[3];
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    real _t164A = 0.e0;
    rgba1646 = [_t1647, _t1648, _t1649, _t164A];
    raw164B = 0.e0;
    real _t164D = 0.e0;
    real _t164E = 0.e0;
    real _t164F = 0.e0;
    rgb164C = [_t164D, _t164E, _t164F];
    transp1650 = 0.1e1;
  }
  update
  {
    rayN162F = prim +0017<$[]> (rayN162F, rayStep04F0);
    bool _t1651 = prim >0080 (rayN162F, camFarVsp15DA);
    if _t1651 {
      stabilize;
    }
    vec3 _t1652 = prim *0036<$[3]> (rayN162F, rayVec1638);
    vec3 pos1653 = prim +0017<$[3]> (rayOrig1633, _t1652);
    bool _t1654 = func posTest1611 (pos1653);
    bool _t1655 = prim !00BC (_t1654);
    if _t1655 {
      continue;
    }
    vec3 step1656 = func fStep15EC (pos1653);
    real _t1657 = prim |()|00B5<$[3]> (step1656);
    real aa1658 = func atent15DF (maxAlpha04F7, _t1657);
    real _t1659 = 0.e0;
    bool _t165A = prim ==0084 (aa1658, _t1659);
    if _t165A {
      continue;
    }
    real _t165B = 0.1e1;
    real _t165C = 0.1e1;
    real _t165D = prim -0026<$[]> (_t165C, aa1658);
    real _t165E = prim ^0069 (_t165D, alphaFix163D);
    aa1658 = prim -0026<$[]> (_t165B, _t165E);
    vec3 _t165F = prim normalize0137<$[3]> (step1656);
    vec3 snorm1660 = prim unary -008B<$[3]> (_t165F);
    real _t1661 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, litwsp15DE);
    int _t1662 = 2;
    real dcomp1663 = prim ^0068 (_t1661, _t1662);
    real scomp1664 = 0.e0;
    real _t1665 = 0.e0;
    bool _t1666 = prim !=0088 (phKs1644, _t1665);
    if _t1666 {
      vec3 _t1667 = prim +0017<$[3]> (eyeDir1640, litwsp15DE);
      vec3 _t1668 = prim normalize0137<$[3]> (_t1667);
      real _t1669 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, _t1668);
      real _t166A = prim |()|00B5<$[]> (_t1669);
      scomp1664 = prim ^0069 (_t166A, phSp1645);
    }
    vec3 dcol166B = prim lerp0098<$[3]> (mcNear04FE, mcFar0502, camNearVsp15D9, rayN162F, camFarVsp15DA);
    real cmin166C = cminmax050A[0];
    real cmax166D = cminmax050A[1];
    real _t166E = 0.1e1;
    real _t166F = 0.1e1;
    real _t1670 = 0.1e1;
    vec3 mcol1671 = [_t166E, _t166F, _t1670];
    bool _t1672 = prim !=0088 (cmin166C, cmax166D);
    if _t1672 {
      real _t1673 = 0.e0;
      real _t1674 = 0.1e1;
      vec3 _t1675 = prim +0017<$[3]> (pos1653, step1656);
      real _t1676 = prim @00A5<#∞; %3; $[]> (C15C7, _t1675);
      real _t1677 = prim lerp0098<$[]> (_t1673, _t1674, cmin166C, _t1676, cmax166D);
      mcol1671 = prim @00A5<#0; %1; $[3]> (CM15C6, _t1677);
    }
    real _t1678 = prim *0034 (transp1650, aa1658);
    real _t1679 = prim *0034 (phKd1643, dcomp1663);
    real _t167A = prim +0017<$[]> (phKa1642, _t1679);
    vec3 _t167B = prim modulate0129<%3> (dcol166B, mcol1671);
    vec3 _t167C = prim *0036<$[3]> (_t167A, _t167B);
    real _t167D = prim *0034 (phKs1644, scomp1664);
    real _t167E = 0.1e1;
    real _t167F = 0.1e1;
    real _t1680 = 0.1e1;
    vec3 _t1681 = [_t167E, _t167F, _t1680];
    vec3 _t1682 = prim *0036<$[3]> (_t167D, _t1681);
    vec3 _t1683 = prim +0017<$[3]> (_t167C, _t1682);
    vec3 _t1684 = prim *0036<$[3]> (_t1678, _t1683);
    rgb164C = prim +0017<$[3]> (rgb164C, _t1684);
    real _t1685 = 0.1e1;
    real _t1686 = prim -0026<$[]> (_t1685, aa1658);
    transp1650 = prim *0034 (transp1650, _t1686);
    bool _t1687 = prim <007A (transp1650, transp004F2);
    if _t1687 {
      transp1650 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1688 = 0.1e1;
    bool _t1689 = prim <007A (transp1650, _t1688);
    if _t1689 {
      real _t168A = 0.1e1;
      real aa168B = prim -0026<$[]> (_t168A, transp1650);
      real _t168C = rgb164C[0];
      real _t168D = prim /0055 (_t168C, aa168B);
      real _t168E = rgb164C[1];
      real _t168F = prim /0055 (_t168E, aa168B);
      real _t1690 = rgb164C[2];
      real _t1691 = prim /0055 (_t1690, aa168B);
      rgba1646 = [_t168D, _t168F, _t1691, aa168B];
    }
  }
}
grid(2) {
  int _t1692 = 0;
  int _t1693 = 1;
  int _t1694 = prim -0024 (iresV04EF, _t1693);
  int[] _t1695 = prim $range01C3 (_t1692, _t1694);
  foreach vi169B in _t1695 {
    int _t1696 = 0;
    int _t1697 = 1;
    int _t1698 = prim -0024 (iresU04EE, _t1697);
    int[] _t1699 = prim $range01C3 (_t1696, _t1698);
    foreach ui169A in _t1699 {
      new ray (ui169A, vi169B);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04CB;
input FemData:Space 0space04D7_intermedateGlobal04D8;
input FemData:FemFunc 0U04D9_intermedateGlobal04DA;
input int cellChoice04DB;
input image(1)[3] cmap04DD = image("cmap.nrrd");
input vec3 camEye04DE = <default>;
input vec3 camAt04E2 = <default>;
input vec3 camUp04E6 = <default>;
input real camNear04EA = <default>;
input real camFar04EB = <default>;
input real camFOV04EC = <default>;
input bool camOrtho04ED = <default>;
input int iresU04EE = <default>;
input int iresV04EF = <default>;
input real rayStep04F0 = <default>;
input real refStep04F1 = <default>;
input real transp004F2 = <default>;
input real thick04F3 = <default>;
input real fStrTh04F4 = <default>;
input real fMaskTh04F5 = <default>;
input real fBias04F6 = <default>;
input real maxAlpha04F7 = <default>;
input bool light04F8 = <default>;
input vec4 phong04F9 = <default>;
input vec3 mcNear04FE = <default>;
input vec3 mcFar0502 = <default>;
input vec3 litdir0506 = <default>;
input vec2 cminmax050A = <default>;
constants {
  real _t04DF = 0.e0;
  real _t04E0 = -0.2e1;
  real _t04E1 = 0.e0;
  camEye04DE = [_t04DF, _t04E0, _t04E1];
  real _t04E3 = 0.e0;
  real _t04E4 = 0.e0;
  real _t04E5 = 0.e0;
  camAt04E2 = [_t04E3, _t04E4, _t04E5];
  real _t04E7 = 0.e0;
  real _t04E8 = 0.e0;
  real _t04E9 = 0.1e1;
  camUp04E6 = [_t04E7, _t04E8, _t04E9];
  camNear04EA = -0.4e1;
  camFar04EB = 0.4e1;
  camFOV04EC = 0.1e2;
  camOrtho04ED = false;
  iresU04EE = 100;
  iresV04EF = 100;
  rayStep04F0 = 0.1e-3;
  refStep04F1 = 0.1e-3;
  transp004F2 = 0.5e-2;
  thick04F3 = 0.1e-1;
  fStrTh04F4 = 0.e0;
  fMaskTh04F5 = 0.e0;
  fBias04F6 = 0.1e0;
  maxAlpha04F7 = 0.1e1;
  light04F8 = false;
  real _t04FA = 0.1e0;
  real _t04FB = 0.7e0;
  real _t04FC = 0.2e0;
  real _t04FD = 0.1e3;
  phong04F9 = [_t04FA, _t04FB, _t04FC, _t04FD];
  real _t04FF = 0.1e1;
  real _t0500 = 0.1e1;
  real _t0501 = 0.1e1;
  mcNear04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.1e1;
  real _t0504 = 0.1e1;
  real _t0505 = 0.1e1;
  mcFar0502 = [_t0503, _t0504, _t0505];
  real _t0507 = 0.e0;
  real _t0508 = -0.1e1;
  real _t0509 = 0.e0;
  litdir0506 = [_t0507, _t0508, _t0509];
  real _t050B = 0.e0;
  real _t050C = 0.e0;
  cminmax050A = [_t050B, _t050C];
}
global Femdata: MeshCell[] 0cell_block04CC;
global Femdata: Space space04D7;
global Femdata: FemFunc U04D9;
global Femdata: MeshCell c115B1;
global field(3)[] F15B9;
global field(3)[3] pvoW15BF;
global field(3)[] pvoF15C0;
global field#0(1)[3] CM15C6;
global field(3)[] C15C7;
global vec3 camN15C9;
global vec3 camU15CB;
global vec3 camV15CC;
global real camDist15CE;
global real camVmax15D4;
global real camUmax15D8;
global real camNearVsp15D9;
global real camFarVsp15DA;
global vec3 litwsp15DE;
function int[2]#8 nextCell405A3 (int faceIdx1204, int cell1205, Femdata: Mesh mesh1206)
{
  int _t1207 = 12;
  int _t1208 = prim *0033 (cell1205, _t1207);
  int _t1209 = 2;
  int _t120A = prim *0033 (faceIdx1204, _t1209);
  int _t120B = prim +0015 (_t1208, _t120A);
  int[2] _t120C = extractFemItemN((mesh1206, _t120B),CellFaceCell(Mesh),);
  return _t120C;
}
globalInit {
  int _t04CF = 0;
  int _t04CD = 1;
  int _t04D1 = extractFemItem(NumCell(Mesh), int, block04CB);
  int _t04D0 = prim -0024 (_t04D1, _t04CD);
  int[] _t04D4 = prim $range01C3 (_t04CF, _t04D0);
  Femdata: MeshCell[] _t04D5 = {};
  foreach _t04D3 in _t04D4 {
    Femdata: MeshCell _t04D6 = loadFem(MeshCell, block04CB, _t04D3);
    _t04D5 = prim @0010<Femdata: MeshCell> (_t04D5, _t04D6);
  }
  0cell_block04CC = _t04D5;
  space04D7 = loadFem(Space, 0space04D7_intermedateGlobal04D8, block04CB);
  U04D9 = loadFem(FemFunc, 0U04D9_intermedateGlobal04DA, space04D7);
  c115B1 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04CC, cellChoice04DB);
  Femdata: FuncCell _t15B2;
  int _t16B8 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B9 = loadFem(FuncCell, U04D9, _t16B8);
  _t15B2 = _t16B9;
  Femdata: FemFunc _t15B3 = extractFem(_t15B2, FemFunc);
  Femdata: FuncCell _t15B4;
  int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B7 = loadFem(FuncCell, U04D9, _t16B6);
  _t15B4 = _t16B7;
  Femdata: FemFunc _t15B5 = extractFem(_t15B4, FemFunc);
  Femdata: Space _t15B6 = extractFem(_t15B5, Space);
  Femdata: FuncCell _t15B7;
  int _t16B4 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B5 = loadFem(FuncCell, U04D9, _t16B4);
  _t15B7 = _t16B5;
  int _t15B8 = extractFemItem(CellIndex(FuncCell), int, _t15B7);
  F15B9 = femField(_t15B3,_t15B8,field(3)[],refField,);
  field(3)[3] _t15BA = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15BC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15BB);
  field(3)[3] _t15BD = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BE = prim •00E1<#∞; #∞; %3; $[3,3]; $[3]; $[3]> (_t15BC, _t15BD);
  pvoW15BF = prim ×00C2<#∞> (_t15BA, _t15BE);
  pvoF15C0 = prim •00E1<#∞; #∞; %3; $[3]; $[3]; $[]> (pvoW15BF, pvoW15BF);
  kernel _t15C4 = tent;
  IMAGE1D<double[3]> img15C5 = clamp(cmap04DD);
  CM15C6 = prim ⊛0074<#0; %1; $[3]> (_t15C4, img15C5);
  C15C7 = F15B9;
  vec3 _t15C8 = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camN15C9 = prim normalize0137<$[3]> (_t15C8);
  vec3 _t15CA = prim ×00BE (camN15C9, camUp04E6);
  camU15CB = prim normalize0137<$[3]> (_t15CA);
  camV15CC = prim ×00BE (camN15C9, camU15CB);
  vec3 _t15CD = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camDist15CE = prim |()|00B5<$[3]> (_t15CD);
  real _t15CF = 0.314159265358979323846264338327950288e1;
  real _t15D0 = prim *0034 (camFOV04EC, _t15CF);
  real _t15D1 = 0.36e3;
  real _t15D2 = prim /0055 (_t15D0, _t15D1);
  real _t15D3 = prim tan0179 (_t15D2);
  camVmax15D4 = prim *0034 (_t15D3, camDist15CE);
  real _t15D5 = (real)iresU04EE;
  real _t15D6 = prim *0034 (camVmax15D4, _t15D5);
  real _t15D7 = (real)iresV04EF;
  camUmax15D8 = prim /0055 (_t15D6, _t15D7);
  camNearVsp15D9 = prim +0017<$[]> (camNear04EA, camDist15CE);
  camFarVsp15DA = prim +0017<$[]> (camFar04EB, camDist15CE);
  tensor[3,3] _t15DB = [camU15CB, camV15CC, camN15C9];
  tensor[3,3] _t15DC = prim transpose0145<%3; %3> (_t15DB);
  vec3 _t15DD = prim normalize0137<$[3]> (litdir0506);
  litwsp15DE = prim •00CE<$[3,3]; $[3]; $[3]> (_t15DC, _t15DD);
}
strand ray (int ui161F, int vi1620) {
  real rayU1621;
  real rayV1628;
  real rayN162F;
  vec3 UV1630;
  vec3 rayOrig1633;
  vec3 rayVec1638;
  real alphaFix163D;
  vec3 eyeDir1640;
  real phKa1642;
  real phKd1643;
  real phKs1644;
  real phSp1645;
  output vec4 rgba1646;
  output real raw164B;
  vec3 rgb164C;
  real transp1650;
  {
    real _t1622 = prim unary -008B<$[]> (camUmax15D8);
    real _t1623 = -0.5e0;
    real _t1624 = (real)ui161F;
    real _t1625 = (real)iresU04EE;
    real _t1626 = 0.5e0;
    real _t1627 = prim -0026<$[]> (_t1625, _t1626);
    rayU1621 = prim lerp0098<$[]> (_t1622, camUmax15D8, _t1623, _t1624, _t1627);
    real _t1629 = prim unary -008B<$[]> (camVmax15D4);
    real _t162A = -0.5e0;
    real _t162B = (real)vi1620;
    real _t162C = (real)iresV04EF;
    real _t162D = 0.5e0;
    real _t162E = prim -0026<$[]> (_t162C, _t162D);
    rayV1628 = prim lerp0098<$[]> (_t1629, camVmax15D4, _t162A, _t162B, _t162E);
    rayN162F = camNearVsp15D9;
    vec3 _t1631 = prim *0036<$[3]> (rayU1621, camU15CB);
    vec3 _t1632 = prim *0036<$[3]> (rayV1628, camV15CC);
    UV1630 = prim +0017<$[3]> (_t1631, _t1632);
    vec3 _t1634;
    if camOrtho04ED {
      _t1634 = UV1630;
    } else {
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      real _t1637 = 0.e0;
      _t1634 = [_t1635, _t1636, _t1637];
    }
    rayOrig1633 = prim +0017<$[3]> (camEye04DE, _t1634);
    vec3 _t1639;
    if camOrtho04ED {
      real _t163A = 0.e0;
      real _t163B = 0.e0;
      real _t163C = 0.e0;
      _t1639 = [_t163A, _t163B, _t163C];
    } else {
      _t1639 = prim /0057<$[3]> (UV1630, camDist15CE);
    }
    rayVec1638 = prim +0017<$[3]> (camN15C9, _t1639);
    real _t163E = prim |()|00B5<$[3]> (rayVec1638);
    real _t163F = prim *0034 (_t163E, rayStep04F0);
    alphaFix163D = prim /0055 (_t163F, refStep04F1);
    vec3 _t1641 = prim normalize0137<$[3]> (rayVec1638);
    eyeDir1640 = prim unary -008B<$[3]> (_t1641);
    phKa1642 = phong04F9[0];
    phKd1643 = phong04F9[1];
    phKs1644 = phong04F9[2];
    phSp1645 = phong04F9[3];
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    real _t164A = 0.e0;
    rgba1646 = [_t1647, _t1648, _t1649, _t164A];
    raw164B = 0.e0;
    real _t164D = 0.e0;
    real _t164E = 0.e0;
    real _t164F = 0.e0;
    rgb164C = [_t164D, _t164E, _t164F];
    transp1650 = 0.1e1;
  }
  update
  {
    rayN162F = prim +0017<$[]> (rayN162F, rayStep04F0);
    bool _t1651 = prim >0080 (rayN162F, camFarVsp15DA);
    if _t1651 {
      stabilize;
    }
    vec3 _t1652 = prim *0036<$[3]> (rayN162F, rayVec1638);
    vec3 pos1653 = prim +0017<$[3]> (rayOrig1633, _t1652);
    bool _t1654;
    bool _t16CF;
    Femdata: RefCell _t16D0;
    Femdata: RefCell _t16D1 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04CB);
    _t16D0 = _t16D1;
    real _t16D2 = 0.1e-8;
    bool _t16D3 = extractFemItemN((_t16D0, pos1653, _t16D2),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16D3 {
      bool _t16D4;
      real _t16D5;
      field(3)[3] _t16D6 = prim ∇00A8<#∞; %3> (F15B9);
      field(3)[3,3] _t16D7 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16D6);
      tensor[3,3] _t16D8 = prim @00A5<#∞; %3; $[3,3]> (_t16D7, pos1653);
      real[3] _t16D9 = prim evals009F (_t16D8);
      int _t16DA = 1;
      real _t16DB = prim $sub01C0<real; %3> (_t16D9, _t16DA);
      real _t16DC = prim unary -008B<$[]> (_t16DB);
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B9);
      vec3 _t16DE = prim @00A5<#∞; %3; $[3]> (_t16DD, pos1653);
      real _t16DF = prim |()|00B5<$[3]> (_t16DE);
      real _t16E0 = prim +0017<$[]> (fBias04F6, _t16DF);
      real _t16E1 = prim /0055 (_t16DC, _t16E0);
      _t16D5 = _t16E1;
      bool _t16E2 = prim >0080 (_t16D5, fStrTh04F4);
      if _t16E2 {
        bool _t16E3;
        real _t16E4;
        real _t16E5 = 0.1e1;
        _t16E4 = _t16E5;
        bool _t16E6 = prim >=007E (_t16E4, fMaskTh04F5);
        if _t16E6 {
          bool _t16E7;
          bool _t16E8;
          field(3)[3] _t16E9 = prim ∇00A8<#∞; %3> (pvoF15C0);
          vec3 _t16EA = prim @00A5<#∞; %3; $[3]> (_t16E9, pos1653);
          real _t16EB = prim |()|00B5<$[3]> (_t16EA);
          real _t16EC = 0.1e-7;
          bool _t16ED = prim >0080 (_t16EB, _t16EC);
          _t16E8 = _t16ED;
          if _t16E8 {
            bool _t16EE = true;
            _t16E7 = _t16EE;
          } else {
            _t16E7 = false;
          }
          _t16E3 = _t16E7;
        } else {
          _t16E3 = false;
        }
        _t16D4 = _t16E3;
      } else {
        _t16D4 = false;
      }
      _t16CF = _t16D4;
    } else {
      _t16CF = false;
    }
    _t1654 = _t16CF;
    bool _t1655 = prim !00BC (_t1654);
    if _t1655 {
      continue;
    }
    vec3 step1656;
    real _t16C4 = prim @00A5<#∞; %3; $[]> (pvoF15C0, pos1653);
    field(3)[3] _t16C5 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C6 = prim @00A5<#∞; %3; $[3]> (_t16C5, pos1653);
    vec3 _t16C7 = prim *0036<$[3]> (_t16C4, _t16C6);
    field(3)[3] _t16C8 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C9 = prim @00A5<#∞; %3; $[3]> (_t16C8, pos1653);
    field(3)[3] _t16CA = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16CB = prim @00A5<#∞; %3; $[3]> (_t16CA, pos1653);
    real _t16CC = prim •00CE<$[3]; $[3]; $[]> (_t16C9, _t16CB);
    vec3 _t16CD = prim /0057<$[3]> (_t16C7, _t16CC);
    vec3 _t16CE = prim unary -008B<$[3]> (_t16CD);
    step1656 = _t16CE;
    real _t1657 = prim |()|00B5<$[3]> (step1656);
    real aa1658;
    real _t16BA = 0.e0;
    real _t16BB = 0.1e1;
    real _t16BC = 0.15e1;
    real _t16BD = 0.1e1;
    real _t16BE = prim |()|00B5<$[]> (_t1657);
    real _t16BF = prim /0055 (_t16BE, thick04F3);
    real _t16C0 = prim -0026<$[]> (_t16BD, _t16BF);
    real _t16C1 = prim *0034 (_t16BC, _t16C0);
    real _t16C2 = prim clamp0094<$[]> (_t16BA, _t16BB, _t16C1);
    real _t16C3 = prim *0034 (maxAlpha04F7, _t16C2);
    aa1658 = _t16C3;
    real _t1659 = 0.e0;
    bool _t165A = prim ==0084 (aa1658, _t1659);
    if _t165A {
      continue;
    }
    real _t165B = 0.1e1;
    real _t165C = 0.1e1;
    real _t165D = prim -0026<$[]> (_t165C, aa1658);
    real _t165E = prim ^0069 (_t165D, alphaFix163D);
    aa1658 = prim -0026<$[]> (_t165B, _t165E);
    vec3 _t165F = prim normalize0137<$[3]> (step1656);
    vec3 snorm1660 = prim unary -008B<$[3]> (_t165F);
    real _t1661 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, litwsp15DE);
    int _t1662 = 2;
    real dcomp1663 = prim ^0068 (_t1661, _t1662);
    real scomp1664 = 0.e0;
    real _t1665 = 0.e0;
    bool _t1666 = prim !=0088 (phKs1644, _t1665);
    if _t1666 {
      vec3 _t1667 = prim +0017<$[3]> (eyeDir1640, litwsp15DE);
      vec3 _t1668 = prim normalize0137<$[3]> (_t1667);
      real _t1669 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, _t1668);
      real _t166A = prim |()|00B5<$[]> (_t1669);
      scomp1664 = prim ^0069 (_t166A, phSp1645);
    }
    vec3 dcol166B = prim lerp0098<$[3]> (mcNear04FE, mcFar0502, camNearVsp15D9, rayN162F, camFarVsp15DA);
    real cmin166C = cminmax050A[0];
    real cmax166D = cminmax050A[1];
    real _t166E = 0.1e1;
    real _t166F = 0.1e1;
    real _t1670 = 0.1e1;
    vec3 mcol1671 = [_t166E, _t166F, _t1670];
    bool _t1672 = prim !=0088 (cmin166C, cmax166D);
    if _t1672 {
      real _t1673 = 0.e0;
      real _t1674 = 0.1e1;
      vec3 _t1675 = prim +0017<$[3]> (pos1653, step1656);
      real _t1676 = prim @00A5<#∞; %3; $[]> (C15C7, _t1675);
      real _t1677 = prim lerp0098<$[]> (_t1673, _t1674, cmin166C, _t1676, cmax166D);
      mcol1671 = prim @00A5<#0; %1; $[3]> (CM15C6, _t1677);
    }
    real _t1678 = prim *0034 (transp1650, aa1658);
    real _t1679 = prim *0034 (phKd1643, dcomp1663);
    real _t167A = prim +0017<$[]> (phKa1642, _t1679);
    vec3 _t167B = prim modulate0129<%3> (dcol166B, mcol1671);
    vec3 _t167C = prim *0036<$[3]> (_t167A, _t167B);
    real _t167D = prim *0034 (phKs1644, scomp1664);
    real _t167E = 0.1e1;
    real _t167F = 0.1e1;
    real _t1680 = 0.1e1;
    vec3 _t1681 = [_t167E, _t167F, _t1680];
    vec3 _t1682 = prim *0036<$[3]> (_t167D, _t1681);
    vec3 _t1683 = prim +0017<$[3]> (_t167C, _t1682);
    vec3 _t1684 = prim *0036<$[3]> (_t1678, _t1683);
    rgb164C = prim +0017<$[3]> (rgb164C, _t1684);
    real _t1685 = 0.1e1;
    real _t1686 = prim -0026<$[]> (_t1685, aa1658);
    transp1650 = prim *0034 (transp1650, _t1686);
    bool _t1687 = prim <007A (transp1650, transp004F2);
    if _t1687 {
      transp1650 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1688 = 0.1e1;
    bool _t1689 = prim <007A (transp1650, _t1688);
    if _t1689 {
      real _t168A = 0.1e1;
      real aa168B = prim -0026<$[]> (_t168A, transp1650);
      real _t168C = rgb164C[0];
      real _t168D = prim /0055 (_t168C, aa168B);
      real _t168E = rgb164C[1];
      real _t168F = prim /0055 (_t168E, aa168B);
      real _t1690 = rgb164C[2];
      real _t1691 = prim /0055 (_t1690, aa168B);
      rgba1646 = [_t168D, _t168F, _t1691, aa168B];
    }
  }
}
grid(2) {
  int _t1692 = 0;
  int _t1693 = 1;
  int _t1694 = prim -0024 (iresV04EF, _t1693);
  int[] _t1695 = prim $range01C3 (_t1692, _t1694);
  foreach vi169B in _t1695 {
    int _t1696 = 0;
    int _t1697 = 1;
    int _t1698 = prim -0024 (iresU04EE, _t1697);
    int[] _t1699 = prim $range01C3 (_t1696, _t1698);
    foreach ui169A in _t1699 {
      new ray (ui169A, vi169B);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04CB;
input FemData:Space 0space04D7_intermedateGlobal04D8;
input FemData:FemFunc 0U04D9_intermedateGlobal04DA;
input int cellChoice04DB;
input image(1)[3] cmap04DD = image("cmap.nrrd");
input vec3 camEye04DE = <default>;
input vec3 camAt04E2 = <default>;
input vec3 camUp04E6 = <default>;
input real camNear04EA = <default>;
input real camFar04EB = <default>;
input real camFOV04EC = <default>;
input bool camOrtho04ED = <default>;
input int iresU04EE = <default>;
input int iresV04EF = <default>;
input real rayStep04F0 = <default>;
input real refStep04F1 = <default>;
input real transp004F2 = <default>;
input real thick04F3 = <default>;
input real fStrTh04F4 = <default>;
input real fMaskTh04F5 = <default>;
input real fBias04F6 = <default>;
input real maxAlpha04F7 = <default>;
input bool light04F8 = <default>;
input vec4 phong04F9 = <default>;
input vec3 mcNear04FE = <default>;
input vec3 mcFar0502 = <default>;
input vec3 litdir0506 = <default>;
input vec2 cminmax050A = <default>;
constants {
  real _t04DF = 0.e0;
  real _t04E0 = -0.2e1;
  real _t04E1 = 0.e0;
  camEye04DE = [_t04DF, _t04E0, _t04E1];
  real _t04E3 = 0.e0;
  real _t04E4 = 0.e0;
  real _t04E5 = 0.e0;
  camAt04E2 = [_t04E3, _t04E4, _t04E5];
  real _t04E7 = 0.e0;
  real _t04E8 = 0.e0;
  real _t04E9 = 0.1e1;
  camUp04E6 = [_t04E7, _t04E8, _t04E9];
  camNear04EA = -0.4e1;
  camFar04EB = 0.4e1;
  camFOV04EC = 0.1e2;
  camOrtho04ED = false;
  iresU04EE = 100;
  iresV04EF = 100;
  rayStep04F0 = 0.1e-3;
  refStep04F1 = 0.1e-3;
  transp004F2 = 0.5e-2;
  thick04F3 = 0.1e-1;
  fStrTh04F4 = 0.e0;
  fMaskTh04F5 = 0.e0;
  fBias04F6 = 0.1e0;
  maxAlpha04F7 = 0.1e1;
  light04F8 = false;
  real _t04FA = 0.1e0;
  real _t04FB = 0.7e0;
  real _t04FC = 0.2e0;
  real _t04FD = 0.1e3;
  phong04F9 = [_t04FA, _t04FB, _t04FC, _t04FD];
  real _t04FF = 0.1e1;
  real _t0500 = 0.1e1;
  real _t0501 = 0.1e1;
  mcNear04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.1e1;
  real _t0504 = 0.1e1;
  real _t0505 = 0.1e1;
  mcFar0502 = [_t0503, _t0504, _t0505];
  real _t0507 = 0.e0;
  real _t0508 = -0.1e1;
  real _t0509 = 0.e0;
  litdir0506 = [_t0507, _t0508, _t0509];
  real _t050B = 0.e0;
  real _t050C = 0.e0;
  cminmax050A = [_t050B, _t050C];
}
global Femdata: MeshCell[] 0cell_block04CC;
global Femdata: Space space04D7;
global Femdata: FemFunc U04D9;
global Femdata: MeshCell c115B1;
global field(3)[] F15B9;
global field(3)[3] pvoW15BF;
global field(3)[] pvoF15C0;
global field#0(1)[3] CM15C6;
global field(3)[] C15C7;
global vec3 camN15C9;
global vec3 camU15CB;
global vec3 camV15CC;
global real camDist15CE;
global real camVmax15D4;
global real camUmax15D8;
global real camNearVsp15D9;
global real camFarVsp15DA;
global vec3 litwsp15DE;
function int[2]#8 nextCell405A3 (int faceIdx1204, int cell1205, Femdata: Mesh mesh1206)
{
  int _t1207 = 12;
  int _t1208 = prim *0033 (cell1205, _t1207);
  int _t1209 = 2;
  int _t120A = prim *0033 (faceIdx1204, _t1209);
  int _t120B = prim +0015 (_t1208, _t120A);
  int[2] _t120C = extractFemItemN((mesh1206, _t120B),CellFaceCell(Mesh),);
  return _t120C;
}
globalInit {
  int _t04CF = 0;
  int _t04CD = 1;
  int _t04D1 = extractFemItem(NumCell(Mesh), int, block04CB);
  int _t04D0 = prim -0024 (_t04D1, _t04CD);
  int[] _t04D4 = prim $range01C3 (_t04CF, _t04D0);
  Femdata: MeshCell[] _t04D5 = {};
  foreach _t04D3 in _t04D4 {
    Femdata: MeshCell _t04D6 = loadFem(MeshCell, block04CB, _t04D3);
    _t04D5 = prim @0010<Femdata: MeshCell> (_t04D5, _t04D6);
  }
  0cell_block04CC = _t04D5;
  space04D7 = loadFem(Space, 0space04D7_intermedateGlobal04D8, block04CB);
  U04D9 = loadFem(FemFunc, 0U04D9_intermedateGlobal04DA, space04D7);
  c115B1 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04CC, cellChoice04DB);
  Femdata: FuncCell _t15B2;
  int _t16B8 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B9 = loadFem(FuncCell, U04D9, _t16B8);
  _t15B2 = _t16B9;
  Femdata: FemFunc _t15B3 = extractFem(_t15B2, FemFunc);
  Femdata: FuncCell _t15B4;
  int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B7 = loadFem(FuncCell, U04D9, _t16B6);
  _t15B4 = _t16B7;
  Femdata: FemFunc _t15B5 = extractFem(_t15B4, FemFunc);
  Femdata: Space _t15B6 = extractFem(_t15B5, Space);
  Femdata: FuncCell _t15B7;
  int _t16B4 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B5 = loadFem(FuncCell, U04D9, _t16B4);
  _t15B7 = _t16B5;
  int _t15B8 = extractFemItem(CellIndex(FuncCell), int, _t15B7);
  F15B9 = femField(_t15B3,_t15B8,field(3)[],refField,);
  field(3)[3] _t15BA = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15BC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15BB);
  field(3)[3] _t15BD = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BE = prim •00E1<#∞; #∞; %3; $[3,3]; $[3]; $[3]> (_t15BC, _t15BD);
  pvoW15BF = prim ×00C2<#∞> (_t15BA, _t15BE);
  pvoF15C0 = prim •00E1<#∞; #∞; %3; $[3]; $[3]; $[]> (pvoW15BF, pvoW15BF);
  kernel _t15C4 = tent;
  IMAGE1D<double[3]> img15C5 = clamp(cmap04DD);
  CM15C6 = prim ⊛0074<#0; %1; $[3]> (_t15C4, img15C5);
  C15C7 = F15B9;
  vec3 _t15C8 = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camN15C9 = prim normalize0137<$[3]> (_t15C8);
  vec3 _t15CA = prim ×00BE (camN15C9, camUp04E6);
  camU15CB = prim normalize0137<$[3]> (_t15CA);
  camV15CC = prim ×00BE (camN15C9, camU15CB);
  vec3 _t15CD = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camDist15CE = prim |()|00B5<$[3]> (_t15CD);
  real _t15CF = 0.314159265358979323846264338327950288e1;
  real _t15D0 = prim *0034 (camFOV04EC, _t15CF);
  real _t15D1 = 0.36e3;
  real _t15D2 = prim /0055 (_t15D0, _t15D1);
  real _t15D3 = prim tan0179 (_t15D2);
  camVmax15D4 = prim *0034 (_t15D3, camDist15CE);
  real _t15D5 = (real)iresU04EE;
  real _t15D6 = prim *0034 (camVmax15D4, _t15D5);
  real _t15D7 = (real)iresV04EF;
  camUmax15D8 = prim /0055 (_t15D6, _t15D7);
  camNearVsp15D9 = prim +0017<$[]> (camNear04EA, camDist15CE);
  camFarVsp15DA = prim +0017<$[]> (camFar04EB, camDist15CE);
  tensor[3,3] _t15DB = [camU15CB, camV15CC, camN15C9];
  tensor[3,3] _t15DC = prim transpose0145<%3; %3> (_t15DB);
  vec3 _t15DD = prim normalize0137<$[3]> (litdir0506);
  litwsp15DE = prim •00CE<$[3,3]; $[3]; $[3]> (_t15DC, _t15DD);
}
strand ray (int ui161F, int vi1620) {
  real rayU1621;
  real rayV1628;
  real rayN162F;
  vec3 UV1630;
  vec3 rayOrig1633;
  vec3 rayVec1638;
  real alphaFix163D;
  vec3 eyeDir1640;
  real phKa1642;
  real phKd1643;
  real phKs1644;
  real phSp1645;
  output vec4 rgba1646;
  output real raw164B;
  vec3 rgb164C;
  real transp1650;
  {
    real _t1622 = prim unary -008B<$[]> (camUmax15D8);
    real _t1623 = -0.5e0;
    real _t1624 = (real)ui161F;
    real _t1625 = (real)iresU04EE;
    real _t1626 = 0.5e0;
    real _t1627 = prim -0026<$[]> (_t1625, _t1626);
    rayU1621 = prim lerp0098<$[]> (_t1622, camUmax15D8, _t1623, _t1624, _t1627);
    real _t1629 = prim unary -008B<$[]> (camVmax15D4);
    real _t162A = -0.5e0;
    real _t162B = (real)vi1620;
    real _t162C = (real)iresV04EF;
    real _t162D = 0.5e0;
    real _t162E = prim -0026<$[]> (_t162C, _t162D);
    rayV1628 = prim lerp0098<$[]> (_t1629, camVmax15D4, _t162A, _t162B, _t162E);
    rayN162F = camNearVsp15D9;
    vec3 _t1631 = prim *0036<$[3]> (rayU1621, camU15CB);
    vec3 _t1632 = prim *0036<$[3]> (rayV1628, camV15CC);
    UV1630 = prim +0017<$[3]> (_t1631, _t1632);
    vec3 _t1634;
    if camOrtho04ED {
      _t1634 = UV1630;
    } else {
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      real _t1637 = 0.e0;
      _t1634 = [_t1635, _t1636, _t1637];
    }
    rayOrig1633 = prim +0017<$[3]> (camEye04DE, _t1634);
    vec3 _t1639;
    if camOrtho04ED {
      real _t163A = 0.e0;
      real _t163B = 0.e0;
      real _t163C = 0.e0;
      _t1639 = [_t163A, _t163B, _t163C];
    } else {
      _t1639 = prim /0057<$[3]> (UV1630, camDist15CE);
    }
    rayVec1638 = prim +0017<$[3]> (camN15C9, _t1639);
    real _t163E = prim |()|00B5<$[3]> (rayVec1638);
    real _t163F = prim *0034 (_t163E, rayStep04F0);
    alphaFix163D = prim /0055 (_t163F, refStep04F1);
    vec3 _t1641 = prim normalize0137<$[3]> (rayVec1638);
    eyeDir1640 = prim unary -008B<$[3]> (_t1641);
    phKa1642 = phong04F9[0];
    phKd1643 = phong04F9[1];
    phKs1644 = phong04F9[2];
    phSp1645 = phong04F9[3];
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    real _t164A = 0.e0;
    rgba1646 = [_t1647, _t1648, _t1649, _t164A];
    raw164B = 0.e0;
    real _t164D = 0.e0;
    real _t164E = 0.e0;
    real _t164F = 0.e0;
    rgb164C = [_t164D, _t164E, _t164F];
    transp1650 = 0.1e1;
  }
  update
  {
    rayN162F = prim +0017<$[]> (rayN162F, rayStep04F0);
    bool _t1651 = prim >0080 (rayN162F, camFarVsp15DA);
    if _t1651 {
      stabilize;
    }
    vec3 _t1652 = prim *0036<$[3]> (rayN162F, rayVec1638);
    vec3 pos1653 = prim +0017<$[3]> (rayOrig1633, _t1652);
    bool _t1654;
    bool _t16CF;
    Femdata: RefCell _t16D0;
    Femdata: RefCell _t16D1 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04CB);
    _t16D0 = _t16D1;
    real _t16D2 = 0.1e-8;
    bool _t16D3 = extractFemItemN((_t16D0, pos1653, _t16D2),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16D3 {
      bool _t16D4;
      real _t16D5;
      field(3)[3] _t16D6 = prim ∇00A8<#∞; %3> (F15B9);
      field(3)[3,3] _t16D7 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16D6);
      tensor[3,3] _t16D8 = prim @00A5<#∞; %3; $[3,3]> (_t16D7, pos1653);
      real[3] _t16D9 = prim evals009F (_t16D8);
      int _t16DA = 1;
      real _t16DB = prim $sub01C0<real; %3> (_t16D9, _t16DA);
      real _t16DC = prim unary -008B<$[]> (_t16DB);
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B9);
      vec3 _t16DE = prim @00A5<#∞; %3; $[3]> (_t16DD, pos1653);
      real _t16DF = prim |()|00B5<$[3]> (_t16DE);
      real _t16E0 = prim +0017<$[]> (fBias04F6, _t16DF);
      real _t16E1 = prim /0055 (_t16DC, _t16E0);
      _t16D5 = _t16E1;
      bool _t16E2 = prim >0080 (_t16D5, fStrTh04F4);
      if _t16E2 {
        bool _t16E3;
        real _t16E4;
        real _t16E5 = 0.1e1;
        _t16E4 = _t16E5;
        bool _t16E6 = prim >=007E (_t16E4, fMaskTh04F5);
        if _t16E6 {
          bool _t16E7;
          bool _t16E8;
          field(3)[3] _t16E9 = prim ∇00A8<#∞; %3> (pvoF15C0);
          vec3 _t16EA = prim @00A5<#∞; %3; $[3]> (_t16E9, pos1653);
          real _t16EB = prim |()|00B5<$[3]> (_t16EA);
          real _t16EC = 0.1e-7;
          bool _t16ED = prim >0080 (_t16EB, _t16EC);
          _t16E8 = _t16ED;
          if _t16E8 {
            bool _t16EE = true;
            _t16E7 = _t16EE;
          } else {
            _t16E7 = false;
          }
          _t16E3 = _t16E7;
        } else {
          _t16E3 = false;
        }
        _t16D4 = _t16E3;
      } else {
        _t16D4 = false;
      }
      _t16CF = _t16D4;
    } else {
      _t16CF = false;
    }
    _t1654 = _t16CF;
    bool _t1655 = prim !00BC (_t1654);
    if _t1655 {
      continue;
    }
    vec3 step1656;
    real _t16C4 = prim @00A5<#∞; %3; $[]> (pvoF15C0, pos1653);
    field(3)[3] _t16C5 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C6 = prim @00A5<#∞; %3; $[3]> (_t16C5, pos1653);
    vec3 _t16C7 = prim *0036<$[3]> (_t16C4, _t16C6);
    field(3)[3] _t16C8 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C9 = prim @00A5<#∞; %3; $[3]> (_t16C8, pos1653);
    field(3)[3] _t16CA = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16CB = prim @00A5<#∞; %3; $[3]> (_t16CA, pos1653);
    real _t16CC = prim •00CE<$[3]; $[3]; $[]> (_t16C9, _t16CB);
    vec3 _t16CD = prim /0057<$[3]> (_t16C7, _t16CC);
    vec3 _t16CE = prim unary -008B<$[3]> (_t16CD);
    step1656 = _t16CE;
    real _t1657 = prim |()|00B5<$[3]> (step1656);
    real aa1658;
    real _t16BA = 0.e0;
    real _t16BB = 0.1e1;
    real _t16BC = 0.15e1;
    real _t16BD = 0.1e1;
    real _t16BE = prim |()|00B5<$[]> (_t1657);
    real _t16BF = prim /0055 (_t16BE, thick04F3);
    real _t16C0 = prim -0026<$[]> (_t16BD, _t16BF);
    real _t16C1 = prim *0034 (_t16BC, _t16C0);
    real _t16C2 = prim clamp0094<$[]> (_t16BA, _t16BB, _t16C1);
    real _t16C3 = prim *0034 (maxAlpha04F7, _t16C2);
    aa1658 = _t16C3;
    real _t1659 = 0.e0;
    bool _t165A = prim ==0084 (aa1658, _t1659);
    if _t165A {
      continue;
    }
    real _t165B = 0.1e1;
    real _t165C = 0.1e1;
    real _t165D = prim -0026<$[]> (_t165C, aa1658);
    real _t165E = prim ^0069 (_t165D, alphaFix163D);
    aa1658 = prim -0026<$[]> (_t165B, _t165E);
    vec3 _t165F = prim normalize0137<$[3]> (step1656);
    vec3 snorm1660 = prim unary -008B<$[3]> (_t165F);
    real _t1661 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, litwsp15DE);
    int _t1662 = 2;
    real dcomp1663 = prim ^0068 (_t1661, _t1662);
    real scomp1664 = 0.e0;
    real _t1665 = 0.e0;
    bool _t1666 = prim !=0088 (phKs1644, _t1665);
    if _t1666 {
      vec3 _t1667 = prim +0017<$[3]> (eyeDir1640, litwsp15DE);
      vec3 _t1668 = prim normalize0137<$[3]> (_t1667);
      real _t1669 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, _t1668);
      real _t166A = prim |()|00B5<$[]> (_t1669);
      scomp1664 = prim ^0069 (_t166A, phSp1645);
    }
    vec3 dcol166B = prim lerp0098<$[3]> (mcNear04FE, mcFar0502, camNearVsp15D9, rayN162F, camFarVsp15DA);
    real cmin166C = cminmax050A[0];
    real cmax166D = cminmax050A[1];
    real _t166E = 0.1e1;
    real _t166F = 0.1e1;
    real _t1670 = 0.1e1;
    vec3 mcol1671 = [_t166E, _t166F, _t1670];
    bool _t1672 = prim !=0088 (cmin166C, cmax166D);
    if _t1672 {
      real _t1673 = 0.e0;
      real _t1674 = 0.1e1;
      vec3 _t1675 = prim +0017<$[3]> (pos1653, step1656);
      real _t1676 = prim @00A5<#∞; %3; $[]> (C15C7, _t1675);
      real _t1677 = prim lerp0098<$[]> (_t1673, _t1674, cmin166C, _t1676, cmax166D);
      mcol1671 = prim @00A5<#0; %1; $[3]> (CM15C6, _t1677);
    }
    real _t1678 = prim *0034 (transp1650, aa1658);
    real _t1679 = prim *0034 (phKd1643, dcomp1663);
    real _t167A = prim +0017<$[]> (phKa1642, _t1679);
    vec3 _t167B = prim modulate0129<%3> (dcol166B, mcol1671);
    vec3 _t167C = prim *0036<$[3]> (_t167A, _t167B);
    real _t167D = prim *0034 (phKs1644, scomp1664);
    real _t167E = 0.1e1;
    real _t167F = 0.1e1;
    real _t1680 = 0.1e1;
    vec3 _t1681 = [_t167E, _t167F, _t1680];
    vec3 _t1682 = prim *0036<$[3]> (_t167D, _t1681);
    vec3 _t1683 = prim +0017<$[3]> (_t167C, _t1682);
    vec3 _t1684 = prim *0036<$[3]> (_t1678, _t1683);
    rgb164C = prim +0017<$[3]> (rgb164C, _t1684);
    real _t1685 = 0.1e1;
    real _t1686 = prim -0026<$[]> (_t1685, aa1658);
    transp1650 = prim *0034 (transp1650, _t1686);
    bool _t1687 = prim <007A (transp1650, transp004F2);
    if _t1687 {
      transp1650 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1688 = 0.1e1;
    bool _t1689 = prim <007A (transp1650, _t1688);
    if _t1689 {
      real _t168A = 0.1e1;
      real aa168B = prim -0026<$[]> (_t168A, transp1650);
      real _t168C = rgb164C[0];
      real _t168D = prim /0055 (_t168C, aa168B);
      real _t168E = rgb164C[1];
      real _t168F = prim /0055 (_t168E, aa168B);
      real _t1690 = rgb164C[2];
      real _t1691 = prim /0055 (_t1690, aa168B);
      rgba1646 = [_t168D, _t168F, _t1691, aa168B];
    }
  }
}
grid(2) {
  int _t1692 = 0;
  int _t1693 = 1;
  int _t1694 = prim -0024 (iresV04EF, _t1693);
  int[] _t1695 = prim $range01C3 (_t1692, _t1694);
  foreach vi169B in _t1695 {
    int _t1696 = 0;
    int _t1697 = 1;
    int _t1698 = prim -0024 (iresU04EE, _t1697);
    int[] _t1699 = prim $range01C3 (_t1696, _t1698);
    foreach ui169A in _t1699 {
      new ray (ui169A, vi169B);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04CB;
input FemData:Space 0space04D7_intermedateGlobal04D8;
input FemData:FemFunc 0U04D9_intermedateGlobal04DA;
input int cellChoice04DB;
input image(1)[3] cmap04DD = image("cmap.nrrd");
input vec3 camEye04DE = <default>;
input vec3 camAt04E2 = <default>;
input vec3 camUp04E6 = <default>;
input real camNear04EA = <default>;
input real camFar04EB = <default>;
input real camFOV04EC = <default>;
input bool camOrtho04ED = <default>;
input int iresU04EE = <default>;
input int iresV04EF = <default>;
input real rayStep04F0 = <default>;
input real refStep04F1 = <default>;
input real transp004F2 = <default>;
input real thick04F3 = <default>;
input real fStrTh04F4 = <default>;
input real fMaskTh04F5 = <default>;
input real fBias04F6 = <default>;
input real maxAlpha04F7 = <default>;
input bool light04F8 = <default>;
input vec4 phong04F9 = <default>;
input vec3 mcNear04FE = <default>;
input vec3 mcFar0502 = <default>;
input vec3 litdir0506 = <default>;
input vec2 cminmax050A = <default>;
constants {
  real _t04DF = 0.e0;
  real _t04E0 = -0.2e1;
  real _t04E1 = 0.e0;
  camEye04DE = [_t04DF, _t04E0, _t04E1];
  real _t04E3 = 0.e0;
  real _t04E4 = 0.e0;
  real _t04E5 = 0.e0;
  camAt04E2 = [_t04E3, _t04E4, _t04E5];
  real _t04E7 = 0.e0;
  real _t04E8 = 0.e0;
  real _t04E9 = 0.1e1;
  camUp04E6 = [_t04E7, _t04E8, _t04E9];
  camNear04EA = -0.4e1;
  camFar04EB = 0.4e1;
  camFOV04EC = 0.1e2;
  camOrtho04ED = false;
  iresU04EE = 100;
  iresV04EF = 100;
  rayStep04F0 = 0.1e-3;
  refStep04F1 = 0.1e-3;
  transp004F2 = 0.5e-2;
  thick04F3 = 0.1e-1;
  fStrTh04F4 = 0.e0;
  fMaskTh04F5 = 0.e0;
  fBias04F6 = 0.1e0;
  maxAlpha04F7 = 0.1e1;
  light04F8 = false;
  real _t04FA = 0.1e0;
  real _t04FB = 0.7e0;
  real _t04FC = 0.2e0;
  real _t04FD = 0.1e3;
  phong04F9 = [_t04FA, _t04FB, _t04FC, _t04FD];
  real _t04FF = 0.1e1;
  real _t0500 = 0.1e1;
  real _t0501 = 0.1e1;
  mcNear04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.1e1;
  real _t0504 = 0.1e1;
  real _t0505 = 0.1e1;
  mcFar0502 = [_t0503, _t0504, _t0505];
  real _t0507 = 0.e0;
  real _t0508 = -0.1e1;
  real _t0509 = 0.e0;
  litdir0506 = [_t0507, _t0508, _t0509];
  real _t050B = 0.e0;
  real _t050C = 0.e0;
  cminmax050A = [_t050B, _t050C];
}
global Femdata: MeshCell[] 0cell_block04CC;
global Femdata: Space space04D7;
global Femdata: FemFunc U04D9;
global Femdata: MeshCell c115B1;
global field(3)[] F15B9;
global field(3)[3] pvoW15BF;
global field(3)[] pvoF15C0;
global field#0(1)[3] CM15C6;
global field(3)[] C15C7;
global vec3 camN15C9;
global vec3 camU15CB;
global vec3 camV15CC;
global real camDist15CE;
global real camVmax15D4;
global real camUmax15D8;
global real camNearVsp15D9;
global real camFarVsp15DA;
global vec3 litwsp15DE;
function int[2]#8 nextCell405A3 (int faceIdx1204, int cell1205, Femdata: Mesh mesh1206)
{
  int _t1207 = 12;
  int _t1208 = prim *0033 (cell1205, _t1207);
  int _t1209 = 2;
  int _t120A = prim *0033 (faceIdx1204, _t1209);
  int _t120B = prim +0015 (_t1208, _t120A);
  int[2] _t120C = extractFemItemN((mesh1206, _t120B),CellFaceCell(Mesh),);
  return _t120C;
}
globalInit {
  int _t04CF = 0;
  int _t04CD = 1;
  int _t04D1 = extractFemItem(NumCell(Mesh), int, block04CB);
  int _t04D0 = prim -0024 (_t04D1, _t04CD);
  int[] _t04D4 = prim $range01C3 (_t04CF, _t04D0);
  Femdata: MeshCell[] _t04D5 = {};
  foreach _t04D3 in _t04D4 {
    Femdata: MeshCell _t04D6 = loadFem(MeshCell, block04CB, _t04D3);
    _t04D5 = prim @0010<Femdata: MeshCell> (_t04D5, _t04D6);
  }
  0cell_block04CC = _t04D5;
  space04D7 = loadFem(Space, 0space04D7_intermedateGlobal04D8, block04CB);
  U04D9 = loadFem(FemFunc, 0U04D9_intermedateGlobal04DA, space04D7);
  c115B1 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04CC, cellChoice04DB);
  Femdata: FuncCell _t15B2;
  int _t16B8 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B9 = loadFem(FuncCell, U04D9, _t16B8);
  _t15B2 = _t16B9;
  Femdata: FemFunc _t15B3 = extractFem(_t15B2, FemFunc);
  Femdata: FuncCell _t15B4;
  int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B7 = loadFem(FuncCell, U04D9, _t16B6);
  _t15B4 = _t16B7;
  Femdata: FemFunc _t15B5 = extractFem(_t15B4, FemFunc);
  Femdata: Space _t15B6 = extractFem(_t15B5, Space);
  Femdata: FuncCell _t15B7;
  int _t16B4 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B5 = loadFem(FuncCell, U04D9, _t16B4);
  _t15B7 = _t16B5;
  int _t15B8 = extractFemItem(CellIndex(FuncCell), int, _t15B7);
  F15B9 = femField(_t15B3,_t15B8,field(3)[],refField,);
  field(3)[3] _t15BA = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15BC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15BB);
  field(3)[3] _t15BD = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BE = prim •00E1<#∞; #∞; %3; $[3,3]; $[3]; $[3]> (_t15BC, _t15BD);
  pvoW15BF = prim ×00C2<#∞> (_t15BA, _t15BE);
  pvoF15C0 = prim •00E1<#∞; #∞; %3; $[3]; $[3]; $[]> (pvoW15BF, pvoW15BF);
  kernel _t15C4 = tent;
  IMAGE1D<double[3]> img15C5 = clamp(cmap04DD);
  CM15C6 = prim ⊛0074<#0; %1; $[3]> (_t15C4, img15C5);
  C15C7 = F15B9;
  vec3 _t15C8 = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camN15C9 = prim normalize0137<$[3]> (_t15C8);
  vec3 _t15CA = prim ×00BE (camN15C9, camUp04E6);
  camU15CB = prim normalize0137<$[3]> (_t15CA);
  camV15CC = prim ×00BE (camN15C9, camU15CB);
  vec3 _t15CD = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camDist15CE = prim |()|00B5<$[3]> (_t15CD);
  real _t15CF = 0.314159265358979323846264338327950288e1;
  real _t15D0 = prim *0034 (camFOV04EC, _t15CF);
  real _t15D1 = 0.36e3;
  real _t15D2 = prim /0055 (_t15D0, _t15D1);
  real _t15D3 = prim tan0179 (_t15D2);
  camVmax15D4 = prim *0034 (_t15D3, camDist15CE);
  real _t15D5 = (real)iresU04EE;
  real _t15D6 = prim *0034 (camVmax15D4, _t15D5);
  real _t15D7 = (real)iresV04EF;
  camUmax15D8 = prim /0055 (_t15D6, _t15D7);
  camNearVsp15D9 = prim +0017<$[]> (camNear04EA, camDist15CE);
  camFarVsp15DA = prim +0017<$[]> (camFar04EB, camDist15CE);
  tensor[3,3] _t15DB = [camU15CB, camV15CC, camN15C9];
  tensor[3,3] _t15DC = prim transpose0145<%3; %3> (_t15DB);
  vec3 _t15DD = prim normalize0137<$[3]> (litdir0506);
  litwsp15DE = prim •00CE<$[3,3]; $[3]; $[3]> (_t15DC, _t15DD);
}
strand ray (int ui161F, int vi1620) {
  real rayU1621;
  real rayV1628;
  real rayN162F;
  vec3 UV1630;
  vec3 rayOrig1633;
  vec3 rayVec1638;
  real alphaFix163D;
  vec3 eyeDir1640;
  real phKa1642;
  real phKd1643;
  real phKs1644;
  real phSp1645;
  output vec4 rgba1646;
  output real raw164B;
  vec3 rgb164C;
  real transp1650;
  {
    real _t1622 = prim unary -008B<$[]> (camUmax15D8);
    real _t1623 = -0.5e0;
    real _t1624 = (real)ui161F;
    real _t1625 = (real)iresU04EE;
    real _t1626 = 0.5e0;
    real _t1627 = prim -0026<$[]> (_t1625, _t1626);
    rayU1621 = prim lerp0098<$[]> (_t1622, camUmax15D8, _t1623, _t1624, _t1627);
    real _t1629 = prim unary -008B<$[]> (camVmax15D4);
    real _t162A = -0.5e0;
    real _t162B = (real)vi1620;
    real _t162C = (real)iresV04EF;
    real _t162D = 0.5e0;
    real _t162E = prim -0026<$[]> (_t162C, _t162D);
    rayV1628 = prim lerp0098<$[]> (_t1629, camVmax15D4, _t162A, _t162B, _t162E);
    rayN162F = camNearVsp15D9;
    vec3 _t1631 = prim *0036<$[3]> (rayU1621, camU15CB);
    vec3 _t1632 = prim *0036<$[3]> (rayV1628, camV15CC);
    UV1630 = prim +0017<$[3]> (_t1631, _t1632);
    vec3 _t1634;
    if camOrtho04ED {
      _t1634 = UV1630;
    } else {
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      real _t1637 = 0.e0;
      _t1634 = [_t1635, _t1636, _t1637];
    }
    rayOrig1633 = prim +0017<$[3]> (camEye04DE, _t1634);
    vec3 _t1639;
    if camOrtho04ED {
      real _t163A = 0.e0;
      real _t163B = 0.e0;
      real _t163C = 0.e0;
      _t1639 = [_t163A, _t163B, _t163C];
    } else {
      _t1639 = prim /0057<$[3]> (UV1630, camDist15CE);
    }
    rayVec1638 = prim +0017<$[3]> (camN15C9, _t1639);
    real _t163E = prim |()|00B5<$[3]> (rayVec1638);
    real _t163F = prim *0034 (_t163E, rayStep04F0);
    alphaFix163D = prim /0055 (_t163F, refStep04F1);
    vec3 _t1641 = prim normalize0137<$[3]> (rayVec1638);
    eyeDir1640 = prim unary -008B<$[3]> (_t1641);
    phKa1642 = phong04F9[0];
    phKd1643 = phong04F9[1];
    phKs1644 = phong04F9[2];
    phSp1645 = phong04F9[3];
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    real _t164A = 0.e0;
    rgba1646 = [_t1647, _t1648, _t1649, _t164A];
    raw164B = 0.e0;
    real _t164D = 0.e0;
    real _t164E = 0.e0;
    real _t164F = 0.e0;
    rgb164C = [_t164D, _t164E, _t164F];
    transp1650 = 0.1e1;
  }
  update
  {
    rayN162F = prim +0017<$[]> (rayN162F, rayStep04F0);
    bool _t1651 = prim >0080 (rayN162F, camFarVsp15DA);
    if _t1651 {
      stabilize;
    }
    vec3 _t1652 = prim *0036<$[3]> (rayN162F, rayVec1638);
    vec3 pos1653 = prim +0017<$[3]> (rayOrig1633, _t1652);
    bool _t1654;
    bool _t16CF;
    Femdata: RefCell _t16D0;
    Femdata: RefCell _t16D1 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04CB);
    _t16D0 = _t16D1;
    real _t16D2 = 0.1e-8;
    bool _t16D3 = extractFemItemN((_t16D0, pos1653, _t16D2),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16D3 {
      bool _t16D4;
      real _t16D5;
      field(3)[3] _t16D6 = prim ∇00A8<#∞; %3> (F15B9);
      field(3)[3,3] _t16D7 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16D6);
      tensor[3,3] _t16D8 = prim @00A5<#∞; %3; $[3,3]> (_t16D7, pos1653);
      real[3] _t16D9 = prim evals009F (_t16D8);
      int _t16DA = 1;
      real _t16DB = prim $sub01C0<real; %3> (_t16D9, _t16DA);
      real _t16DC = prim unary -008B<$[]> (_t16DB);
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B9);
      vec3 _t16DE = prim @00A5<#∞; %3; $[3]> (_t16DD, pos1653);
      real _t16DF = prim |()|00B5<$[3]> (_t16DE);
      real _t16E0 = prim +0017<$[]> (fBias04F6, _t16DF);
      real _t16E1 = prim /0055 (_t16DC, _t16E0);
      _t16D5 = _t16E1;
      bool _t16E2 = prim >0080 (_t16D5, fStrTh04F4);
      if _t16E2 {
        bool _t16E3;
        real _t16E4;
        real _t16E5 = 0.1e1;
        _t16E4 = _t16E5;
        bool _t16E6 = prim >=007E (_t16E4, fMaskTh04F5);
        if _t16E6 {
          bool _t16E7;
          bool _t16E8;
          field(3)[3] _t16E9 = prim ∇00A8<#∞; %3> (pvoF15C0);
          vec3 _t16EA = prim @00A5<#∞; %3; $[3]> (_t16E9, pos1653);
          real _t16EB = prim |()|00B5<$[3]> (_t16EA);
          real _t16EC = 0.1e-7;
          bool _t16ED = prim >0080 (_t16EB, _t16EC);
          _t16E8 = _t16ED;
          if _t16E8 {
            bool _t16EE = true;
            _t16E7 = _t16EE;
          } else {
            _t16E7 = false;
          }
          _t16E3 = _t16E7;
        } else {
          _t16E3 = false;
        }
        _t16D4 = _t16E3;
      } else {
        _t16D4 = false;
      }
      _t16CF = _t16D4;
    } else {
      _t16CF = false;
    }
    _t1654 = _t16CF;
    bool _t1655 = prim !00BC (_t1654);
    if _t1655 {
      continue;
    }
    vec3 step1656;
    real _t16C4 = prim @00A5<#∞; %3; $[]> (pvoF15C0, pos1653);
    field(3)[3] _t16C5 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C6 = prim @00A5<#∞; %3; $[3]> (_t16C5, pos1653);
    vec3 _t16C7 = prim *0036<$[3]> (_t16C4, _t16C6);
    field(3)[3] _t16C8 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C9 = prim @00A5<#∞; %3; $[3]> (_t16C8, pos1653);
    field(3)[3] _t16CA = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16CB = prim @00A5<#∞; %3; $[3]> (_t16CA, pos1653);
    real _t16CC = prim •00CE<$[3]; $[3]; $[]> (_t16C9, _t16CB);
    vec3 _t16CD = prim /0057<$[3]> (_t16C7, _t16CC);
    vec3 _t16CE = prim unary -008B<$[3]> (_t16CD);
    step1656 = _t16CE;
    real _t1657 = prim |()|00B5<$[3]> (step1656);
    real aa1658;
    real _t16BA = 0.e0;
    real _t16BB = 0.1e1;
    real _t16BC = 0.15e1;
    real _t16BD = 0.1e1;
    real _t16BE = prim |()|00B5<$[]> (_t1657);
    real _t16BF = prim /0055 (_t16BE, thick04F3);
    real _t16C0 = prim -0026<$[]> (_t16BD, _t16BF);
    real _t16C1 = prim *0034 (_t16BC, _t16C0);
    real _t16C2 = prim clamp0094<$[]> (_t16BA, _t16BB, _t16C1);
    real _t16C3 = prim *0034 (maxAlpha04F7, _t16C2);
    aa1658 = _t16C3;
    real _t1659 = 0.e0;
    bool _t165A = prim ==0084 (aa1658, _t1659);
    if _t165A {
      continue;
    }
    real _t165B = 0.1e1;
    real _t165C = 0.1e1;
    real _t165D = prim -0026<$[]> (_t165C, aa1658);
    real _t165E = prim ^0069 (_t165D, alphaFix163D);
    aa1658 = prim -0026<$[]> (_t165B, _t165E);
    vec3 _t165F = prim normalize0137<$[3]> (step1656);
    vec3 snorm1660 = prim unary -008B<$[3]> (_t165F);
    real _t1661 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, litwsp15DE);
    int _t1662 = 2;
    real dcomp1663 = prim ^0068 (_t1661, _t1662);
    real scomp1664 = 0.e0;
    real _t1665 = 0.e0;
    bool _t1666 = prim !=0088 (phKs1644, _t1665);
    if _t1666 {
      vec3 _t1667 = prim +0017<$[3]> (eyeDir1640, litwsp15DE);
      vec3 _t1668 = prim normalize0137<$[3]> (_t1667);
      real _t1669 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, _t1668);
      real _t166A = prim |()|00B5<$[]> (_t1669);
      scomp1664 = prim ^0069 (_t166A, phSp1645);
    }
    vec3 dcol166B = prim lerp0098<$[3]> (mcNear04FE, mcFar0502, camNearVsp15D9, rayN162F, camFarVsp15DA);
    real cmin166C = cminmax050A[0];
    real cmax166D = cminmax050A[1];
    real _t166E = 0.1e1;
    real _t166F = 0.1e1;
    real _t1670 = 0.1e1;
    vec3 mcol1671 = [_t166E, _t166F, _t1670];
    bool _t1672 = prim !=0088 (cmin166C, cmax166D);
    if _t1672 {
      real _t1673 = 0.e0;
      real _t1674 = 0.1e1;
      vec3 _t1675 = prim +0017<$[3]> (pos1653, step1656);
      real _t1676 = prim @00A5<#∞; %3; $[]> (C15C7, _t1675);
      real _t1677 = prim lerp0098<$[]> (_t1673, _t1674, cmin166C, _t1676, cmax166D);
      mcol1671 = prim @00A5<#0; %1; $[3]> (CM15C6, _t1677);
    }
    real _t1678 = prim *0034 (transp1650, aa1658);
    real _t1679 = prim *0034 (phKd1643, dcomp1663);
    real _t167A = prim +0017<$[]> (phKa1642, _t1679);
    vec3 _t167B = prim modulate0129<%3> (dcol166B, mcol1671);
    vec3 _t167C = prim *0036<$[3]> (_t167A, _t167B);
    real _t167D = prim *0034 (phKs1644, scomp1664);
    real _t167E = 0.1e1;
    real _t167F = 0.1e1;
    real _t1680 = 0.1e1;
    vec3 _t1681 = [_t167E, _t167F, _t1680];
    vec3 _t1682 = prim *0036<$[3]> (_t167D, _t1681);
    vec3 _t1683 = prim +0017<$[3]> (_t167C, _t1682);
    vec3 _t1684 = prim *0036<$[3]> (_t1678, _t1683);
    rgb164C = prim +0017<$[3]> (rgb164C, _t1684);
    real _t1685 = 0.1e1;
    real _t1686 = prim -0026<$[]> (_t1685, aa1658);
    transp1650 = prim *0034 (transp1650, _t1686);
    bool _t1687 = prim <007A (transp1650, transp004F2);
    if _t1687 {
      transp1650 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1688 = 0.1e1;
    bool _t1689 = prim <007A (transp1650, _t1688);
    if _t1689 {
      real _t168A = 0.1e1;
      real aa168B = prim -0026<$[]> (_t168A, transp1650);
      real _t168C = rgb164C[0];
      real _t168D = prim /0055 (_t168C, aa168B);
      real _t168E = rgb164C[1];
      real _t168F = prim /0055 (_t168E, aa168B);
      real _t1690 = rgb164C[2];
      real _t1691 = prim /0055 (_t1690, aa168B);
      rgba1646 = [_t168D, _t168F, _t1691, aa168B];
    }
  }
}
grid(2) {
  int _t1692 = 0;
  int _t1693 = 1;
  int _t1694 = prim -0024 (iresV04EF, _t1693);
  int[] _t1695 = prim $range01C3 (_t1692, _t1694);
  foreach vi169B in _t1695 {
    int _t1696 = 0;
    int _t1697 = 1;
    int _t1698 = prim -0024 (iresU04EE, _t1697);
    int[] _t1699 = prim $range01C3 (_t1696, _t1698);
    foreach ui169A in _t1699 {
      new ray (ui169A, vi169B);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04CB;
input FemData:Space 0space04D7_intermedateGlobal04D8;
input FemData:FemFunc 0U04D9_intermedateGlobal04DA;
input int cellChoice04DB;
input image(1)[3] cmap04DD = image("cmap.nrrd");
input vec3 camEye04DE = <default>;
input vec3 camAt04E2 = <default>;
input vec3 camUp04E6 = <default>;
input real camNear04EA = <default>;
input real camFar04EB = <default>;
input real camFOV04EC = <default>;
input bool camOrtho04ED = <default>;
input int iresU04EE = <default>;
input int iresV04EF = <default>;
input real rayStep04F0 = <default>;
input real refStep04F1 = <default>;
input real transp004F2 = <default>;
input real thick04F3 = <default>;
input real fStrTh04F4 = <default>;
input real fMaskTh04F5 = <default>;
input real fBias04F6 = <default>;
input real maxAlpha04F7 = <default>;
input bool light04F8 = <default>;
input vec4 phong04F9 = <default>;
input vec3 mcNear04FE = <default>;
input vec3 mcFar0502 = <default>;
input vec3 litdir0506 = <default>;
input vec2 cminmax050A = <default>;
constants {
  real _t04DF = 0.e0;
  real _t04E0 = -0.2e1;
  real _t04E1 = 0.e0;
  camEye04DE = [_t04DF, _t04E0, _t04E1];
  real _t04E3 = 0.e0;
  real _t04E4 = 0.e0;
  real _t04E5 = 0.e0;
  camAt04E2 = [_t04E3, _t04E4, _t04E5];
  real _t04E7 = 0.e0;
  real _t04E8 = 0.e0;
  real _t04E9 = 0.1e1;
  camUp04E6 = [_t04E7, _t04E8, _t04E9];
  camNear04EA = -0.4e1;
  camFar04EB = 0.4e1;
  camFOV04EC = 0.1e2;
  camOrtho04ED = false;
  iresU04EE = 100;
  iresV04EF = 100;
  rayStep04F0 = 0.1e-3;
  refStep04F1 = 0.1e-3;
  transp004F2 = 0.5e-2;
  thick04F3 = 0.1e-1;
  fStrTh04F4 = 0.e0;
  fMaskTh04F5 = 0.e0;
  fBias04F6 = 0.1e0;
  maxAlpha04F7 = 0.1e1;
  light04F8 = false;
  real _t04FA = 0.1e0;
  real _t04FB = 0.7e0;
  real _t04FC = 0.2e0;
  real _t04FD = 0.1e3;
  phong04F9 = [_t04FA, _t04FB, _t04FC, _t04FD];
  real _t04FF = 0.1e1;
  real _t0500 = 0.1e1;
  real _t0501 = 0.1e1;
  mcNear04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.1e1;
  real _t0504 = 0.1e1;
  real _t0505 = 0.1e1;
  mcFar0502 = [_t0503, _t0504, _t0505];
  real _t0507 = 0.e0;
  real _t0508 = -0.1e1;
  real _t0509 = 0.e0;
  litdir0506 = [_t0507, _t0508, _t0509];
  real _t050B = 0.e0;
  real _t050C = 0.e0;
  cminmax050A = [_t050B, _t050C];
}
global Femdata: MeshCell[] 0cell_block04CC;
global Femdata: Space space04D7;
global Femdata: FemFunc U04D9;
global Femdata: MeshCell c115B1;
global field(3)[] F15B9;
global field(3)[3] pvoW15BF;
global field(3)[] pvoF15C0;
global field#0(1)[3] CM15C6;
global field(3)[] C15C7;
global vec3 camN15C9;
global vec3 camU15CB;
global vec3 camV15CC;
global real camDist15CE;
global real camVmax15D4;
global real camUmax15D8;
global real camNearVsp15D9;
global real camFarVsp15DA;
global vec3 litwsp15DE;
function int[2]#8 nextCell405A3 (int faceIdx1204, int cell1205, Femdata: Mesh mesh1206)
{
  int _t1207 = 12;
  int _t1208 = prim *0033 (cell1205, _t1207);
  int _t1209 = 2;
  int _t120A = prim *0033 (faceIdx1204, _t1209);
  int _t120B = prim +0015 (_t1208, _t120A);
  int[2] _t120C = extractFemItemN((mesh1206, _t120B),CellFaceCell(Mesh),);
  return _t120C;
}
globalInit {
  int _t04CF = 0;
  int _t04CD = 1;
  int _t04D1 = extractFemItem(NumCell(Mesh), int, block04CB);
  int _t04D0 = prim -0024 (_t04D1, _t04CD);
  int[] _t04D4 = prim $range01C3 (_t04CF, _t04D0);
  Femdata: MeshCell[] _t04D5 = {};
  foreach _t04D3 in _t04D4 {
    Femdata: MeshCell _t04D6 = loadFem(MeshCell, block04CB, _t04D3);
    _t04D5 = prim @0010<Femdata: MeshCell> (_t04D5, _t04D6);
  }
  0cell_block04CC = _t04D5;
  space04D7 = loadFem(Space, 0space04D7_intermedateGlobal04D8, block04CB);
  U04D9 = loadFem(FemFunc, 0U04D9_intermedateGlobal04DA, space04D7);
  c115B1 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04CC, cellChoice04DB);
  Femdata: FuncCell _t15B2;
  int _t16B8 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B9 = loadFem(FuncCell, U04D9, _t16B8);
  _t15B2 = _t16B9;
  Femdata: FemFunc _t15B3 = extractFem(_t15B2, FemFunc);
  Femdata: FuncCell _t15B4;
  int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B7 = loadFem(FuncCell, U04D9, _t16B6);
  _t15B4 = _t16B7;
  Femdata: FemFunc _t15B5 = extractFem(_t15B4, FemFunc);
  Femdata: Space _t15B6 = extractFem(_t15B5, Space);
  Femdata: FuncCell _t15B7;
  int _t16B4 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B5 = loadFem(FuncCell, U04D9, _t16B4);
  _t15B7 = _t16B5;
  int _t15B8 = extractFemItem(CellIndex(FuncCell), int, _t15B7);
  F15B9 = femField(_t15B3,_t15B8,field(3)[],refField,);
  field(3)[3] _t15BA = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15BC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15BB);
  field(3)[3] _t15BD = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BE = prim •00E1<#∞; #∞; %3; $[3,3]; $[3]; $[3]> (_t15BC, _t15BD);
  pvoW15BF = prim ×00C2<#∞> (_t15BA, _t15BE);
  pvoF15C0 = prim •00E1<#∞; #∞; %3; $[3]; $[3]; $[]> (pvoW15BF, pvoW15BF);
  kernel _t15C4 = tent;
  IMAGE1D<double[3]> img15C5 = clamp(cmap04DD);
  CM15C6 = prim ⊛0074<#0; %1; $[3]> (_t15C4, img15C5);
  C15C7 = F15B9;
  vec3 _t15C8 = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camN15C9 = prim normalize0137<$[3]> (_t15C8);
  vec3 _t15CA = prim ×00BE (camN15C9, camUp04E6);
  camU15CB = prim normalize0137<$[3]> (_t15CA);
  camV15CC = prim ×00BE (camN15C9, camU15CB);
  vec3 _t15CD = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camDist15CE = prim |()|00B5<$[3]> (_t15CD);
  real _t15CF = 0.314159265358979323846264338327950288e1;
  real _t15D0 = prim *0034 (camFOV04EC, _t15CF);
  real _t15D1 = 0.36e3;
  real _t15D2 = prim /0055 (_t15D0, _t15D1);
  real _t15D3 = prim tan0179 (_t15D2);
  camVmax15D4 = prim *0034 (_t15D3, camDist15CE);
  real _t15D5 = (real)iresU04EE;
  real _t15D6 = prim *0034 (camVmax15D4, _t15D5);
  real _t15D7 = (real)iresV04EF;
  camUmax15D8 = prim /0055 (_t15D6, _t15D7);
  camNearVsp15D9 = prim +0017<$[]> (camNear04EA, camDist15CE);
  camFarVsp15DA = prim +0017<$[]> (camFar04EB, camDist15CE);
  tensor[3,3] _t15DB = [camU15CB, camV15CC, camN15C9];
  tensor[3,3] _t15DC = prim transpose0145<%3; %3> (_t15DB);
  vec3 _t15DD = prim normalize0137<$[3]> (litdir0506);
  litwsp15DE = prim •00CE<$[3,3]; $[3]; $[3]> (_t15DC, _t15DD);
}
strand ray (int ui161F, int vi1620) {
  real rayU1621;
  real rayV1628;
  real rayN162F;
  vec3 UV1630;
  vec3 rayOrig1633;
  vec3 rayVec1638;
  real alphaFix163D;
  vec3 eyeDir1640;
  real phKa1642;
  real phKd1643;
  real phKs1644;
  real phSp1645;
  output vec4 rgba1646;
  output real raw164B;
  vec3 rgb164C;
  real transp1650;
  {
    real _t1622 = prim unary -008B<$[]> (camUmax15D8);
    real _t1623 = -0.5e0;
    real _t1624 = (real)ui161F;
    real _t1625 = (real)iresU04EE;
    real _t1626 = 0.5e0;
    real _t1627 = prim -0026<$[]> (_t1625, _t1626);
    rayU1621 = prim lerp0098<$[]> (_t1622, camUmax15D8, _t1623, _t1624, _t1627);
    real _t1629 = prim unary -008B<$[]> (camVmax15D4);
    real _t162A = -0.5e0;
    real _t162B = (real)vi1620;
    real _t162C = (real)iresV04EF;
    real _t162D = 0.5e0;
    real _t162E = prim -0026<$[]> (_t162C, _t162D);
    rayV1628 = prim lerp0098<$[]> (_t1629, camVmax15D4, _t162A, _t162B, _t162E);
    rayN162F = camNearVsp15D9;
    vec3 _t1631 = prim *0036<$[3]> (rayU1621, camU15CB);
    vec3 _t1632 = prim *0036<$[3]> (rayV1628, camV15CC);
    UV1630 = prim +0017<$[3]> (_t1631, _t1632);
    vec3 _t1634;
    if camOrtho04ED {
      _t1634 = UV1630;
    } else {
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      real _t1637 = 0.e0;
      _t1634 = [_t1635, _t1636, _t1637];
    }
    rayOrig1633 = prim +0017<$[3]> (camEye04DE, _t1634);
    vec3 _t1639;
    if camOrtho04ED {
      real _t163A = 0.e0;
      real _t163B = 0.e0;
      real _t163C = 0.e0;
      _t1639 = [_t163A, _t163B, _t163C];
    } else {
      _t1639 = prim /0057<$[3]> (UV1630, camDist15CE);
    }
    rayVec1638 = prim +0017<$[3]> (camN15C9, _t1639);
    real _t163E = prim |()|00B5<$[3]> (rayVec1638);
    real _t163F = prim *0034 (_t163E, rayStep04F0);
    alphaFix163D = prim /0055 (_t163F, refStep04F1);
    vec3 _t1641 = prim normalize0137<$[3]> (rayVec1638);
    eyeDir1640 = prim unary -008B<$[3]> (_t1641);
    phKa1642 = phong04F9[0];
    phKd1643 = phong04F9[1];
    phKs1644 = phong04F9[2];
    phSp1645 = phong04F9[3];
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    real _t164A = 0.e0;
    rgba1646 = [_t1647, _t1648, _t1649, _t164A];
    raw164B = 0.e0;
    real _t164D = 0.e0;
    real _t164E = 0.e0;
    real _t164F = 0.e0;
    rgb164C = [_t164D, _t164E, _t164F];
    transp1650 = 0.1e1;
  }
  update
  {
    rayN162F = prim +0017<$[]> (rayN162F, rayStep04F0);
    bool _t1651 = prim >0080 (rayN162F, camFarVsp15DA);
    if _t1651 {
      stabilize;
    }
    vec3 _t1652 = prim *0036<$[3]> (rayN162F, rayVec1638);
    vec3 pos1653 = prim +0017<$[3]> (rayOrig1633, _t1652);
    bool _t1654;
    bool _t16CF;
    Femdata: RefCell _t16D0;
    Femdata: RefCell _t16D1 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04CB);
    _t16D0 = _t16D1;
    real _t16D2 = 0.1e-8;
    bool _t16D3 = extractFemItemN((_t16D0, pos1653, _t16D2),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16D3 {
      bool _t16D4;
      real _t16D5;
      field(3)[3] _t16D6 = prim ∇00A8<#∞; %3> (F15B9);
      field(3)[3,3] _t16D7 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16D6);
      tensor[3,3] _t16D8 = prim @00A5<#∞; %3; $[3,3]> (_t16D7, pos1653);
      real[3] _t16D9 = prim evals009F (_t16D8);
      int _t16DA = 1;
      real _t16DB = prim $sub01C0<real; %3> (_t16D9, _t16DA);
      real _t16DC = prim unary -008B<$[]> (_t16DB);
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B9);
      vec3 _t16DE = prim @00A5<#∞; %3; $[3]> (_t16DD, pos1653);
      real _t16DF = prim |()|00B5<$[3]> (_t16DE);
      real _t16E0 = prim +0017<$[]> (fBias04F6, _t16DF);
      real _t16E1 = prim /0055 (_t16DC, _t16E0);
      _t16D5 = _t16E1;
      bool _t16E2 = prim >0080 (_t16D5, fStrTh04F4);
      if _t16E2 {
        bool _t16E3;
        real _t16E4;
        real _t16E5 = 0.1e1;
        _t16E4 = _t16E5;
        bool _t16E6 = prim >=007E (_t16E4, fMaskTh04F5);
        if _t16E6 {
          bool _t16E7;
          bool _t16E8;
          field(3)[3] _t16E9 = prim ∇00A8<#∞; %3> (pvoF15C0);
          vec3 _t16EA = prim @00A5<#∞; %3; $[3]> (_t16E9, pos1653);
          real _t16EB = prim |()|00B5<$[3]> (_t16EA);
          real _t16EC = 0.1e-7;
          bool _t16ED = prim >0080 (_t16EB, _t16EC);
          _t16E8 = _t16ED;
          if _t16E8 {
            bool _t16EE = true;
            _t16E7 = _t16EE;
          } else {
            _t16E7 = false;
          }
          _t16E3 = _t16E7;
        } else {
          _t16E3 = false;
        }
        _t16D4 = _t16E3;
      } else {
        _t16D4 = false;
      }
      _t16CF = _t16D4;
    } else {
      _t16CF = false;
    }
    _t1654 = _t16CF;
    bool _t1655 = prim !00BC (_t1654);
    if _t1655 {
      continue;
    }
    vec3 step1656;
    real _t16C4 = prim @00A5<#∞; %3; $[]> (pvoF15C0, pos1653);
    field(3)[3] _t16C5 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C6 = prim @00A5<#∞; %3; $[3]> (_t16C5, pos1653);
    vec3 _t16C7 = prim *0036<$[3]> (_t16C4, _t16C6);
    field(3)[3] _t16C8 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C9 = prim @00A5<#∞; %3; $[3]> (_t16C8, pos1653);
    field(3)[3] _t16CA = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16CB = prim @00A5<#∞; %3; $[3]> (_t16CA, pos1653);
    real _t16CC = prim •00CE<$[3]; $[3]; $[]> (_t16C9, _t16CB);
    vec3 _t16CD = prim /0057<$[3]> (_t16C7, _t16CC);
    vec3 _t16CE = prim unary -008B<$[3]> (_t16CD);
    step1656 = _t16CE;
    real _t1657 = prim |()|00B5<$[3]> (step1656);
    real aa1658;
    real _t16BA = 0.e0;
    real _t16BB = 0.1e1;
    real _t16BC = 0.15e1;
    real _t16BD = 0.1e1;
    real _t16BE = prim |()|00B5<$[]> (_t1657);
    real _t16BF = prim /0055 (_t16BE, thick04F3);
    real _t16C0 = prim -0026<$[]> (_t16BD, _t16BF);
    real _t16C1 = prim *0034 (_t16BC, _t16C0);
    real _t16C2 = prim clamp0094<$[]> (_t16BA, _t16BB, _t16C1);
    real _t16C3 = prim *0034 (maxAlpha04F7, _t16C2);
    aa1658 = _t16C3;
    real _t1659 = 0.e0;
    bool _t165A = prim ==0084 (aa1658, _t1659);
    if _t165A {
      continue;
    }
    real _t165B = 0.1e1;
    real _t165C = 0.1e1;
    real _t165D = prim -0026<$[]> (_t165C, aa1658);
    real _t165E = prim ^0069 (_t165D, alphaFix163D);
    aa1658 = prim -0026<$[]> (_t165B, _t165E);
    vec3 _t165F = prim normalize0137<$[3]> (step1656);
    vec3 snorm1660 = prim unary -008B<$[3]> (_t165F);
    real _t1661 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, litwsp15DE);
    int _t1662 = 2;
    real dcomp1663 = prim ^0068 (_t1661, _t1662);
    real scomp1664 = 0.e0;
    real _t1665 = 0.e0;
    bool _t1666 = prim !=0088 (phKs1644, _t1665);
    if _t1666 {
      vec3 _t1667 = prim +0017<$[3]> (eyeDir1640, litwsp15DE);
      vec3 _t1668 = prim normalize0137<$[3]> (_t1667);
      real _t1669 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, _t1668);
      real _t166A = prim |()|00B5<$[]> (_t1669);
      scomp1664 = prim ^0069 (_t166A, phSp1645);
    }
    vec3 dcol166B = prim lerp0098<$[3]> (mcNear04FE, mcFar0502, camNearVsp15D9, rayN162F, camFarVsp15DA);
    real cmin166C = cminmax050A[0];
    real cmax166D = cminmax050A[1];
    real _t166E = 0.1e1;
    real _t166F = 0.1e1;
    real _t1670 = 0.1e1;
    vec3 mcol1671 = [_t166E, _t166F, _t1670];
    bool _t1672 = prim !=0088 (cmin166C, cmax166D);
    if _t1672 {
      real _t1673 = 0.e0;
      real _t1674 = 0.1e1;
      vec3 _t1675 = prim +0017<$[3]> (pos1653, step1656);
      real _t1676 = prim @00A5<#∞; %3; $[]> (C15C7, _t1675);
      real _t1677 = prim lerp0098<$[]> (_t1673, _t1674, cmin166C, _t1676, cmax166D);
      mcol1671 = prim @00A5<#0; %1; $[3]> (CM15C6, _t1677);
    }
    real _t1678 = prim *0034 (transp1650, aa1658);
    real _t1679 = prim *0034 (phKd1643, dcomp1663);
    real _t167A = prim +0017<$[]> (phKa1642, _t1679);
    vec3 _t167B = prim modulate0129<%3> (dcol166B, mcol1671);
    vec3 _t167C = prim *0036<$[3]> (_t167A, _t167B);
    real _t167D = prim *0034 (phKs1644, scomp1664);
    real _t167E = 0.1e1;
    real _t167F = 0.1e1;
    real _t1680 = 0.1e1;
    vec3 _t1681 = [_t167E, _t167F, _t1680];
    vec3 _t1682 = prim *0036<$[3]> (_t167D, _t1681);
    vec3 _t1683 = prim +0017<$[3]> (_t167C, _t1682);
    vec3 _t1684 = prim *0036<$[3]> (_t1678, _t1683);
    rgb164C = prim +0017<$[3]> (rgb164C, _t1684);
    real _t1685 = 0.1e1;
    real _t1686 = prim -0026<$[]> (_t1685, aa1658);
    transp1650 = prim *0034 (transp1650, _t1686);
    bool _t1687 = prim <007A (transp1650, transp004F2);
    if _t1687 {
      transp1650 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1688 = 0.1e1;
    bool _t1689 = prim <007A (transp1650, _t1688);
    if _t1689 {
      real _t168A = 0.1e1;
      real aa168B = prim -0026<$[]> (_t168A, transp1650);
      real _t168C = rgb164C[0];
      real _t168D = prim /0055 (_t168C, aa168B);
      real _t168E = rgb164C[1];
      real _t168F = prim /0055 (_t168E, aa168B);
      real _t1690 = rgb164C[2];
      real _t1691 = prim /0055 (_t1690, aa168B);
      rgba1646 = [_t168D, _t168F, _t1691, aa168B];
    }
  }
}
grid(2) {
  int _t1692 = 0;
  int _t1693 = 1;
  int _t1694 = prim -0024 (iresV04EF, _t1693);
  int[] _t1695 = prim $range01C3 (_t1692, _t1694);
  foreach vi169B in _t1695 {
    int _t1696 = 0;
    int _t1697 = 1;
    int _t1698 = prim -0024 (iresU04EE, _t1697);
    int[] _t1699 = prim $range01C3 (_t1696, _t1698);
    foreach ui169A in _t1699 {
      new ray (ui169A, vi169B);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[],-I[],-l[],-L[])
input FemData:Mesh block04CB;
input FemData:Space 0space04D7_intermedateGlobal04D8;
input FemData:FemFunc 0U04D9_intermedateGlobal04DA;
input int cellChoice04DB;
input image(1)[3] cmap04DD = image("cmap.nrrd");
input vec3 camEye04DE = <default>;
input vec3 camAt04E2 = <default>;
input vec3 camUp04E6 = <default>;
input real camNear04EA = <default>;
input real camFar04EB = <default>;
input real camFOV04EC = <default>;
input bool camOrtho04ED = <default>;
input int iresU04EE = <default>;
input int iresV04EF = <default>;
input real rayStep04F0 = <default>;
input real refStep04F1 = <default>;
input real transp004F2 = <default>;
input real thick04F3 = <default>;
input real fStrTh04F4 = <default>;
input real fMaskTh04F5 = <default>;
input real fBias04F6 = <default>;
input real maxAlpha04F7 = <default>;
input bool light04F8 = <default>;
input vec4 phong04F9 = <default>;
input vec3 mcNear04FE = <default>;
input vec3 mcFar0502 = <default>;
input vec3 litdir0506 = <default>;
input vec2 cminmax050A = <default>;
constants {
  real _t04DF = 0.e0;
  real _t04E0 = -0.2e1;
  real _t04E1 = 0.e0;
  camEye04DE = [_t04DF, _t04E0, _t04E1];
  real _t04E3 = 0.e0;
  real _t04E4 = 0.e0;
  real _t04E5 = 0.e0;
  camAt04E2 = [_t04E3, _t04E4, _t04E5];
  real _t04E7 = 0.e0;
  real _t04E8 = 0.e0;
  real _t04E9 = 0.1e1;
  camUp04E6 = [_t04E7, _t04E8, _t04E9];
  camNear04EA = -0.4e1;
  camFar04EB = 0.4e1;
  camFOV04EC = 0.1e2;
  camOrtho04ED = false;
  iresU04EE = 100;
  iresV04EF = 100;
  rayStep04F0 = 0.1e-3;
  refStep04F1 = 0.1e-3;
  transp004F2 = 0.5e-2;
  thick04F3 = 0.1e-1;
  fStrTh04F4 = 0.e0;
  fMaskTh04F5 = 0.e0;
  fBias04F6 = 0.1e0;
  maxAlpha04F7 = 0.1e1;
  light04F8 = false;
  real _t04FA = 0.1e0;
  real _t04FB = 0.7e0;
  real _t04FC = 0.2e0;
  real _t04FD = 0.1e3;
  phong04F9 = [_t04FA, _t04FB, _t04FC, _t04FD];
  real _t04FF = 0.1e1;
  real _t0500 = 0.1e1;
  real _t0501 = 0.1e1;
  mcNear04FE = [_t04FF, _t0500, _t0501];
  real _t0503 = 0.1e1;
  real _t0504 = 0.1e1;
  real _t0505 = 0.1e1;
  mcFar0502 = [_t0503, _t0504, _t0505];
  real _t0507 = 0.e0;
  real _t0508 = -0.1e1;
  real _t0509 = 0.e0;
  litdir0506 = [_t0507, _t0508, _t0509];
  real _t050B = 0.e0;
  real _t050C = 0.e0;
  cminmax050A = [_t050B, _t050C];
}
global Femdata: MeshCell[] 0cell_block04CC;
global Femdata: Space space04D7;
global Femdata: FemFunc U04D9;
global Femdata: MeshCell c115B1;
global field(3)[] F15B9;
global field(3)[3] pvoW15BF;
global field(3)[] pvoF15C0;
global field#0(1)[3] CM15C6;
global field(3)[] C15C7;
global vec3 camN15C9;
global vec3 camU15CB;
global vec3 camV15CC;
global real camDist15CE;
global real camVmax15D4;
global real camUmax15D8;
global real camNearVsp15D9;
global real camFarVsp15DA;
global vec3 litwsp15DE;
function int[2]#8 nextCell405A3 (int faceIdx1204, int cell1205, Femdata: Mesh mesh1206)
{
  int _t1207 = 12;
  int _t1208 = prim *0033 (cell1205, _t1207);
  int _t1209 = 2;
  int _t120A = prim *0033 (faceIdx1204, _t1209);
  int _t120B = prim +0015 (_t1208, _t120A);
  int[2] _t120C = extractFemItemN((mesh1206, _t120B),CellFaceCell(Mesh),);
  return _t120C;
}
globalInit {
  int _t04CF = 0;
  int _t04CD = 1;
  int _t04D1 = extractFemItem(NumCell(Mesh), int, block04CB);
  int _t04D0 = prim -0024 (_t04D1, _t04CD);
  int[] _t04D4 = prim $range01C3 (_t04CF, _t04D0);
  Femdata: MeshCell[] _t04D5 = {};
  foreach _t04D3 in _t04D4 {
    Femdata: MeshCell _t04D6 = loadFem(MeshCell, block04CB, _t04D3);
    _t04D5 = prim @0010<Femdata: MeshCell> (_t04D5, _t04D6);
  }
  0cell_block04CC = _t04D5;
  space04D7 = loadFem(Space, 0space04D7_intermedateGlobal04D8, block04CB);
  U04D9 = loadFem(FemFunc, 0U04D9_intermedateGlobal04DA, space04D7);
  c115B1 = prim $dynsub01C2<Femdata: MeshCell> (0cell_block04CC, cellChoice04DB);
  Femdata: FuncCell _t15B2;
  int _t16B8 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B9 = loadFem(FuncCell, U04D9, _t16B8);
  _t15B2 = _t16B9;
  Femdata: FemFunc _t15B3 = extractFem(_t15B2, FemFunc);
  Femdata: FuncCell _t15B4;
  int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B7 = loadFem(FuncCell, U04D9, _t16B6);
  _t15B4 = _t16B7;
  Femdata: FemFunc _t15B5 = extractFem(_t15B4, FemFunc);
  Femdata: Space _t15B6 = extractFem(_t15B5, Space);
  Femdata: FuncCell _t15B7;
  int _t16B4 = extractFemItem(CellIndex(MeshCell), int, c115B1);
  Femdata: FuncCell _t16B5 = loadFem(FuncCell, U04D9, _t16B4);
  _t15B7 = _t16B5;
  int _t15B8 = extractFemItem(CellIndex(FuncCell), int, _t15B7);
  F15B9 = femField(_t15B3,_t15B8,field(3)[],refField,);
  field(3)[3] _t15BA = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BB = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3,3] _t15BC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t15BB);
  field(3)[3] _t15BD = prim ∇00A8<#∞; %3> (F15B9);
  field(3)[3] _t15BE = prim •00E1<#∞; #∞; %3; $[3,3]; $[3]; $[3]> (_t15BC, _t15BD);
  pvoW15BF = prim ×00C2<#∞> (_t15BA, _t15BE);
  pvoF15C0 = prim •00E1<#∞; #∞; %3; $[3]; $[3]; $[]> (pvoW15BF, pvoW15BF);
  kernel _t15C4 = tent;
  IMAGE1D<double[3]> img15C5 = clamp(cmap04DD);
  CM15C6 = prim ⊛0074<#0; %1; $[3]> (_t15C4, img15C5);
  C15C7 = F15B9;
  vec3 _t15C8 = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camN15C9 = prim normalize0137<$[3]> (_t15C8);
  vec3 _t15CA = prim ×00BE (camN15C9, camUp04E6);
  camU15CB = prim normalize0137<$[3]> (_t15CA);
  camV15CC = prim ×00BE (camN15C9, camU15CB);
  vec3 _t15CD = prim -0026<$[3]> (camAt04E2, camEye04DE);
  camDist15CE = prim |()|00B5<$[3]> (_t15CD);
  real _t15CF = 0.314159265358979323846264338327950288e1;
  real _t15D0 = prim *0034 (camFOV04EC, _t15CF);
  real _t15D1 = 0.36e3;
  real _t15D2 = prim /0055 (_t15D0, _t15D1);
  real _t15D3 = prim tan0179 (_t15D2);
  camVmax15D4 = prim *0034 (_t15D3, camDist15CE);
  real _t15D5 = (real)iresU04EE;
  real _t15D6 = prim *0034 (camVmax15D4, _t15D5);
  real _t15D7 = (real)iresV04EF;
  camUmax15D8 = prim /0055 (_t15D6, _t15D7);
  camNearVsp15D9 = prim +0017<$[]> (camNear04EA, camDist15CE);
  camFarVsp15DA = prim +0017<$[]> (camFar04EB, camDist15CE);
  tensor[3,3] _t15DB = [camU15CB, camV15CC, camN15C9];
  tensor[3,3] _t15DC = prim transpose0145<%3; %3> (_t15DB);
  vec3 _t15DD = prim normalize0137<$[3]> (litdir0506);
  litwsp15DE = prim •00CE<$[3,3]; $[3]; $[3]> (_t15DC, _t15DD);
}
strand ray (int ui161F, int vi1620) {
  real rayU1621;
  real rayV1628;
  real rayN162F;
  vec3 UV1630;
  vec3 rayOrig1633;
  vec3 rayVec1638;
  real alphaFix163D;
  vec3 eyeDir1640;
  real phKa1642;
  real phKd1643;
  real phKs1644;
  real phSp1645;
  output vec4 rgba1646;
  output real raw164B;
  vec3 rgb164C;
  real transp1650;
  {
    real _t1622 = prim unary -008B<$[]> (camUmax15D8);
    real _t1623 = -0.5e0;
    real _t1624 = (real)ui161F;
    real _t1625 = (real)iresU04EE;
    real _t1626 = 0.5e0;
    real _t1627 = prim -0026<$[]> (_t1625, _t1626);
    rayU1621 = prim lerp0098<$[]> (_t1622, camUmax15D8, _t1623, _t1624, _t1627);
    real _t1629 = prim unary -008B<$[]> (camVmax15D4);
    real _t162A = -0.5e0;
    real _t162B = (real)vi1620;
    real _t162C = (real)iresV04EF;
    real _t162D = 0.5e0;
    real _t162E = prim -0026<$[]> (_t162C, _t162D);
    rayV1628 = prim lerp0098<$[]> (_t1629, camVmax15D4, _t162A, _t162B, _t162E);
    rayN162F = camNearVsp15D9;
    vec3 _t1631 = prim *0036<$[3]> (rayU1621, camU15CB);
    vec3 _t1632 = prim *0036<$[3]> (rayV1628, camV15CC);
    UV1630 = prim +0017<$[3]> (_t1631, _t1632);
    vec3 _t1634;
    if camOrtho04ED {
      _t1634 = UV1630;
    } else {
      real _t1635 = 0.e0;
      real _t1636 = 0.e0;
      real _t1637 = 0.e0;
      _t1634 = [_t1635, _t1636, _t1637];
    }
    rayOrig1633 = prim +0017<$[3]> (camEye04DE, _t1634);
    vec3 _t1639;
    if camOrtho04ED {
      real _t163A = 0.e0;
      real _t163B = 0.e0;
      real _t163C = 0.e0;
      _t1639 = [_t163A, _t163B, _t163C];
    } else {
      _t1639 = prim /0057<$[3]> (UV1630, camDist15CE);
    }
    rayVec1638 = prim +0017<$[3]> (camN15C9, _t1639);
    real _t163E = prim |()|00B5<$[3]> (rayVec1638);
    real _t163F = prim *0034 (_t163E, rayStep04F0);
    alphaFix163D = prim /0055 (_t163F, refStep04F1);
    vec3 _t1641 = prim normalize0137<$[3]> (rayVec1638);
    eyeDir1640 = prim unary -008B<$[3]> (_t1641);
    phKa1642 = phong04F9[0];
    phKd1643 = phong04F9[1];
    phKs1644 = phong04F9[2];
    phSp1645 = phong04F9[3];
    real _t1647 = 0.e0;
    real _t1648 = 0.e0;
    real _t1649 = 0.e0;
    real _t164A = 0.e0;
    rgba1646 = [_t1647, _t1648, _t1649, _t164A];
    raw164B = 0.e0;
    real _t164D = 0.e0;
    real _t164E = 0.e0;
    real _t164F = 0.e0;
    rgb164C = [_t164D, _t164E, _t164F];
    transp1650 = 0.1e1;
  }
  update
  {
    rayN162F = prim +0017<$[]> (rayN162F, rayStep04F0);
    bool _t1651 = prim >0080 (rayN162F, camFarVsp15DA);
    if _t1651 {
      stabilize;
    }
    vec3 _t1652 = prim *0036<$[3]> (rayN162F, rayVec1638);
    vec3 pos1653 = prim +0017<$[3]> (rayOrig1633, _t1652);
    bool _t1654;
    bool _t16CF;
    Femdata: RefCell _t16D0;
    Femdata: RefCell _t16D1 = extractFemItem(RefCell(Mesh), Femdata: RefCell, block04CB);
    _t16D0 = _t16D1;
    real _t16D2 = 0.1e-8;
    bool _t16D3 = extractFemItemN((_t16D0, pos1653, _t16D2),InsideInsert(File=checkInside.in)(Mesh),);
    if _t16D3 {
      bool _t16D4;
      real _t16D5;
      field(3)[3] _t16D6 = prim ∇00A8<#∞; %3> (F15B9);
      field(3)[3,3] _t16D7 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t16D6);
      tensor[3,3] _t16D8 = prim @00A5<#∞; %3; $[3,3]> (_t16D7, pos1653);
      real[3] _t16D9 = prim evals009F (_t16D8);
      int _t16DA = 1;
      real _t16DB = prim $sub01C0<real; %3> (_t16D9, _t16DA);
      real _t16DC = prim unary -008B<$[]> (_t16DB);
      field(3)[3] _t16DD = prim ∇00A8<#∞; %3> (F15B9);
      vec3 _t16DE = prim @00A5<#∞; %3; $[3]> (_t16DD, pos1653);
      real _t16DF = prim |()|00B5<$[3]> (_t16DE);
      real _t16E0 = prim +0017<$[]> (fBias04F6, _t16DF);
      real _t16E1 = prim /0055 (_t16DC, _t16E0);
      _t16D5 = _t16E1;
      bool _t16E2 = prim >0080 (_t16D5, fStrTh04F4);
      if _t16E2 {
        bool _t16E3;
        real _t16E4;
        real _t16E5 = 0.1e1;
        _t16E4 = _t16E5;
        bool _t16E6 = prim >=007E (_t16E4, fMaskTh04F5);
        if _t16E6 {
          bool _t16E7;
          bool _t16E8;
          field(3)[3] _t16E9 = prim ∇00A8<#∞; %3> (pvoF15C0);
          vec3 _t16EA = prim @00A5<#∞; %3; $[3]> (_t16E9, pos1653);
          real _t16EB = prim |()|00B5<$[3]> (_t16EA);
          real _t16EC = 0.1e-7;
          bool _t16ED = prim >0080 (_t16EB, _t16EC);
          _t16E8 = _t16ED;
          if _t16E8 {
            bool _t16EE = true;
            _t16E7 = _t16EE;
          } else {
            _t16E7 = false;
          }
          _t16E3 = _t16E7;
        } else {
          _t16E3 = false;
        }
        _t16D4 = _t16E3;
      } else {
        _t16D4 = false;
      }
      _t16CF = _t16D4;
    } else {
      _t16CF = false;
    }
    _t1654 = _t16CF;
    bool _t1655 = prim !00BC (_t1654);
    if _t1655 {
      continue;
    }
    vec3 step1656;
    real _t16C4 = prim @00A5<#∞; %3; $[]> (pvoF15C0, pos1653);
    field(3)[3] _t16C5 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C6 = prim @00A5<#∞; %3; $[3]> (_t16C5, pos1653);
    vec3 _t16C7 = prim *0036<$[3]> (_t16C4, _t16C6);
    field(3)[3] _t16C8 = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16C9 = prim @00A5<#∞; %3; $[3]> (_t16C8, pos1653);
    field(3)[3] _t16CA = prim ∇00A8<#∞; %3> (pvoF15C0);
    vec3 _t16CB = prim @00A5<#∞; %3; $[3]> (_t16CA, pos1653);
    real _t16CC = prim •00CE<$[3]; $[3]; $[]> (_t16C9, _t16CB);
    vec3 _t16CD = prim /0057<$[3]> (_t16C7, _t16CC);
    vec3 _t16CE = prim unary -008B<$[3]> (_t16CD);
    step1656 = _t16CE;
    real _t1657 = prim |()|00B5<$[3]> (step1656);
    real aa1658;
    real _t16BA = 0.e0;
    real _t16BB = 0.1e1;
    real _t16BC = 0.15e1;
    real _t16BD = 0.1e1;
    real _t16BE = prim |()|00B5<$[]> (_t1657);
    real _t16BF = prim /0055 (_t16BE, thick04F3);
    real _t16C0 = prim -0026<$[]> (_t16BD, _t16BF);
    real _t16C1 = prim *0034 (_t16BC, _t16C0);
    real _t16C2 = prim clamp0094<$[]> (_t16BA, _t16BB, _t16C1);
    real _t16C3 = prim *0034 (maxAlpha04F7, _t16C2);
    aa1658 = _t16C3;
    real _t1659 = 0.e0;
    bool _t165A = prim ==0084 (aa1658, _t1659);
    if _t165A {
      continue;
    }
    real _t165B = 0.1e1;
    real _t165C = 0.1e1;
    real _t165D = prim -0026<$[]> (_t165C, aa1658);
    real _t165E = prim ^0069 (_t165D, alphaFix163D);
    aa1658 = prim -0026<$[]> (_t165B, _t165E);
    vec3 _t165F = prim normalize0137<$[3]> (step1656);
    vec3 snorm1660 = prim unary -008B<$[3]> (_t165F);
    real _t1661 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, litwsp15DE);
    int _t1662 = 2;
    real dcomp1663 = prim ^0068 (_t1661, _t1662);
    real scomp1664 = 0.e0;
    real _t1665 = 0.e0;
    bool _t1666 = prim !=0088 (phKs1644, _t1665);
    if _t1666 {
      vec3 _t1667 = prim +0017<$[3]> (eyeDir1640, litwsp15DE);
      vec3 _t1668 = prim normalize0137<$[3]> (_t1667);
      real _t1669 = prim •00CE<$[3]; $[3]; $[]> (snorm1660, _t1668);
      real _t166A = prim |()|00B5<$[]> (_t1669);
      scomp1664 = prim ^0069 (_t166A, phSp1645);
    }
    vec3 dcol166B = prim lerp0098<$[3]> (mcNear04FE, mcFar0502, camNearVsp15D9, rayN162F, camFarVsp15DA);
    real cmin166C = cminmax050A[0];
    real cmax166D = cminmax050A[1];
    real _t166E = 0.1e1;
    real _t166F = 0.1e1;
    real _t1670 = 0.1e1;
    vec3 mcol1671 = [_t166E, _t166F, _t1670];
    bool _t1672 = prim !=0088 (cmin166C, cmax166D);
    if _t1672 {
      real _t1673 = 0.e0;
      real _t1674 = 0.1e1;
      vec3 _t1675 = prim +0017<$[3]> (pos1653, step1656);
      real _t1676 = prim @00A5<#∞; %3; $[]> (C15C7, _t1675);
      real _t1677 = prim lerp0098<$[]> (_t1673, _t1674, cmin166C, _t1676, cmax166D);
      mcol1671 = prim @00A5<#0; %1; $[3]> (CM15C6, _t1677);
    }
    real _t1678 = prim *0034 (transp1650, aa1658);
    real _t1679 = prim *0034 (phKd1643, dcomp1663);
    real _t167A = prim +0017<$[]> (phKa1642, _t1679);
    vec3 _t167B = prim modulate0129<%3> (dcol166B, mcol1671);
    vec3 _t167C = prim *0036<$[3]> (_t167A, _t167B);
    real _t167D = prim *0034 (phKs1644, scomp1664);
    real _t167E = 0.1e1;
    real _t167F = 0.1e1;
    real _t1680 = 0.1e1;
    vec3 _t1681 = [_t167E, _t167F, _t1680];
    vec3 _t1682 = prim *0036<$[3]> (_t167D, _t1681);
    vec3 _t1683 = prim +0017<$[3]> (_t167C, _t1682);
    vec3 _t1684 = prim *0036<$[3]> (_t1678, _t1683);
    rgb164C = prim +0017<$[3]> (rgb164C, _t1684);
    real _t1685 = 0.1e1;
    real _t1686 = prim -0026<$[]> (_t1685, aa1658);
    transp1650 = prim *0034 (transp1650, _t1686);
    bool _t1687 = prim <007A (transp1650, transp004F2);
    if _t1687 {
      transp1650 = 0.e0;
      stabilize;
    }
  }
  stabilize
  {
    real _t1688 = 0.1e1;
    bool _t1689 = prim <007A (transp1650, _t1688);
    if _t1689 {
      real _t168A = 0.1e1;
      real aa168B = prim -0026<$[]> (_t168A, transp1650);
      real _t168C = rgb164C[0];
      real _t168D = prim /0055 (_t168C, aa168B);
      real _t168E = rgb164C[1];
      real _t168F = prim /0055 (_t168E, aa168B);
      real _t1690 = rgb164C[2];
      real _t1691 = prim /0055 (_t1690, aa168B);
      rgba1646 = [_t168D, _t168F, _t1691, aa168B];
    }
  }
}
grid(2) {
  int _t1692 = 0;
  int _t1693 = 1;
  int _t1694 = prim -0024 (iresV04EF, _t1693);
  int[] _t1695 = prim $range01C3 (_t1692, _t1694);
  foreach vi169B in _t1695 {
    int _t1696 = 0;
    int _t1697 = 1;
    int _t1698 = prim -0024 (iresU04EE, _t1697);
    int[] _t1699 = prim $range01C3 (_t1696, _t1698);
    foreach ui169A in _t1699 {
      new ray (ui169A, vi169B);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block16EF (block) = <no-default>
  input 0space04D7_intermedateGlobal16F0 (space) = <no-default>
  input 0U04D9_intermedateGlobal16F1 (U) = <no-default>
  input cellChoice16F2 (cellChoice) = <no-default>
  input cmap16F3 (cmap) = image("cmap.nrrd")
  input camEye16F4 (camEye) = <default>
  input camAt16F5 (camAt) = <default>
  input camUp16F6 (camUp) = <default>
  input camNear16F7 (camNear) = <default>
  input camFar16F8 (camFar) = <default>
  input camFOV16F9 (camFOV) = <default>
  input camOrtho16FA (camOrtho) = <default>
  input iresU16FB (iresU) = <default>
  input iresV16FC (iresV) = <default>
  input rayStep16FD (rayStep) = <default>
  input refStep16FE (refStep) = <default>
  input transp016FF (transp0) = <default>
  input thick1700 (thick) = <default>
  input fStrTh1701 (fStrTh) = <default>
  input fMaskTh1702 (fMaskTh) = <default>
  input fBias1703 (fBias) = <default>
  input maxAlpha1704 (maxAlpha) = <default>
  input light1705 (light) = <default>
  input phong1706 (phong) = <default>
  input mcNear1707 (mcNear) = <default>
  input mcFar1708 (mcFar) = <default>
  input litdir1709 (litdir) = <default>
  input cminmax170A (cminmax) = <default>
  global femData:MeshCell[] 0cell_block1782
  global femData:Space space1783
  global femData:FemFunc U1784
  global femData:MeshCell c11785
  global field F1786
  global field pvoW1787
  global field pvoF1788
  global field CM1789
  global field C178A
  global tensor[3] camN178B
  global tensor[3] camU178C
  global tensor[3] camV178D
  global real camDist178E
  global real camVmax178F
  global real camUmax1790
  global real camNearVsp1791
  global real camFarVsp1792
  global tensor[3] litwsp1793
## functions
  function int[2] nextCell417A5 (int faceIdx1794#1, int cell1795#1, femData:Mesh mesh1796#1) {
    ENTRY17A4:  preds = []
      int _t1797#1 = 12;
      int _t1799#1 = IMul(cell1795,_t1797);
      int _t179B#1 = 2;
      int _t179D#1 = IMul(faceIdx1794,_t179B);
      int _t179F#1 = IAdd(_t1799,_t179D);
      int[2] _t17A1#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1796,_t179F);
      return _t17A1
}
## input initialization
  ENTRY1780:  preds = []
    real _t170B#1 = 0.e0;
    real _t170D#1 = -0.2e1;
    real _t170F#1 = 0.e0;
    tensor[3] camEye1711#1 = <tensor[3]>[_t170B,_t170D,_t170F];
    globals.camEye16F4 = camEye1711;
    real _t1714#1 = 0.e0;
    real _t1716#1 = 0.e0;
    real _t1718#1 = 0.e0;
    tensor[3] camAt171A#1 = <tensor[3]>[_t1714,_t1716,_t1718];
    globals.camAt16F5 = camAt171A;
    real _t171D#1 = 0.e0;
    real _t171F#1 = 0.e0;
    real _t1721#1 = 0.1e1;
    tensor[3] camUp1723#1 = <tensor[3]>[_t171D,_t171F,_t1721];
    globals.camUp16F6 = camUp1723;
    real camNear1726#1 = -0.4e1;
    globals.camNear16F7 = camNear1726;
    real camFar1729#1 = 0.4e1;
    globals.camFar16F8 = camFar1729;
    real camFOV172C#1 = 0.1e2;
    globals.camFOV16F9 = camFOV172C;
    bool camOrtho172F#1 = false;
    globals.camOrtho16FA = camOrtho172F;
    int iresU1732#1 = 100;
    globals.iresU16FB = iresU1732;
    int iresV1735#1 = 100;
    globals.iresV16FC = iresV1735;
    real rayStep1738#1 = 0.1e-3;
    globals.rayStep16FD = rayStep1738;
    real refStep173B#1 = 0.1e-3;
    globals.refStep16FE = refStep173B;
    real transp0173E#1 = 0.5e-2;
    globals.transp016FF = transp0173E;
    real thick1741#1 = 0.1e-1;
    globals.thick1700 = thick1741;
    real fStrTh1744#1 = 0.e0;
    globals.fStrTh1701 = fStrTh1744;
    real fMaskTh1747#1 = 0.e0;
    globals.fMaskTh1702 = fMaskTh1747;
    real fBias174A#1 = 0.1e0;
    globals.fBias1703 = fBias174A;
    real maxAlpha174D#1 = 0.1e1;
    globals.maxAlpha1704 = maxAlpha174D;
    bool light1750#1 = false;
    globals.light1705 = light1750;
    real _t1753#1 = 0.1e0;
    real _t1755#1 = 0.7e0;
    real _t1757#1 = 0.2e0;
    real _t1759#1 = 0.1e3;
    tensor[4] phong175B#1 = <tensor[4]>[_t1753,_t1755,_t1757,_t1759];
    globals.phong1706 = phong175B;
    real _t175E#1 = 0.1e1;
    real _t1760#1 = 0.1e1;
    real _t1762#1 = 0.1e1;
    tensor[3] mcNear1764#1 = <tensor[3]>[_t175E,_t1760,_t1762];
    globals.mcNear1707 = mcNear1764;
    real _t1767#1 = 0.1e1;
    real _t1769#1 = 0.1e1;
    real _t176B#1 = 0.1e1;
    tensor[3] mcFar176D#1 = <tensor[3]>[_t1767,_t1769,_t176B];
    globals.mcFar1708 = mcFar176D;
    real _t1770#1 = 0.e0;
    real _t1772#1 = -0.1e1;
    real _t1774#1 = 0.e0;
    tensor[3] litdir1776#1 = <tensor[3]>[_t1770,_t1772,_t1774];
    globals.litdir1709 = litdir1776;
    real _t1779#1 = 0.e0;
    real _t177B#1 = 0.e0;
    tensor[2] cminmax177D#1 = <tensor[2]>[_t1779,_t177B];
    globals.cminmax170A = cminmax177D;
    return
## global-variable initialization
  ENTRY1853:  preds = []
    femData:Mesh block17B3#3 = globals.block16EF;
    femData:Space 0space04D7_intermedateGlobal17B2#1 = globals.0space04D7_intermedateGlobal16F0;
    femData:FemFunc 0U04D9_intermedateGlobal17B1#1 = globals.0U04D9_intermedateGlobal16F1;
    int cellChoice17B0#1 = globals.cellChoice16F2;
    image(IMAGE1D<double[3]>) cmap17AF#1 = globals.cmap16F3;
    tensor[3] camEye17AE#2 = globals.camEye16F4;
    tensor[3] camAt17AD#2 = globals.camAt16F5;
    tensor[3] camUp17AC#1 = globals.camUp16F6;
    real camNear17AB#1 = globals.camNear16F7;
    real camFar17AA#1 = globals.camFar16F8;
    real camFOV17A9#1 = globals.camFOV16F9;
    int iresU17A8#1 = globals.iresU16FB;
    int iresV17A7#1 = globals.iresV16FC;
    tensor[3] litdir17A6#2 = globals.litdir1709;
    int _t17C2#1 = 0;
    int _t17C4#1 = 1;
    int _t17C6#1 = ExtractFemItem<int,NumCell(Mesh)>(block17B3);
    int _t17C8#1 = ISub(_t17C6,_t17C4);
    int[] _t17CA#1 = Range(_t17C2,_t17C8);
    femData:MeshCell[] _t17CC#1 = <femData:MeshCell[]>{};
  FOREACH17D0:  preds = [ASSIGN17CD,NEXT17D5]
    foreach (_t17CE in _t17CA) on exit goto ASSIGN17D7
      femData:MeshCell[] _t17CF#2 = phi(_t17CC,_t17D3)
    femData:MeshCell _t17D1#1 = LoadFem<femData:MeshCell>(block17B3,_t17CE);
    femData:MeshCell[] _t17D3#1 = Append<femData:MeshCell>(_t17CF,_t17D1);
    goto FOREACH17D0
  ASSIGN17D7:  preds = [FOREACH17D0]
    femData:MeshCell[] 0cell_block17D6#2 = _t17CF;
    globals.0cell_block1782 = 0cell_block17D6;
    femData:Space space17D9#2 = LoadFem<femData:Space>(0space04D7_intermedateGlobal17B2,block17B3);
    globals.space1783 = space17D9;
    femData:FemFunc U17DC#4 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal17B1,space17D9);
    globals.U1784 = U17DC;
    femData:MeshCell c117DF#4 = Subscript<femData:MeshCell[]>(0cell_block17D6,cellChoice17B0);
    globals.c11785 = c117DF;
    int _t17E3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DF);
    femData:FuncCell _t17E5#1 = LoadFem<femData:FuncCell>(U17DC,_t17E3);
    femData:FuncCell _t17E7#1 = _t17E5;
    femData:FemFunc _t17E9#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17E7);
    int _t17EC#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DF);
    femData:FuncCell _t17EE#1 = LoadFem<femData:FuncCell>(U17DC,_t17EC);
    femData:FuncCell _t17F0#1 = _t17EE;
    femData:FemFunc _t17F2#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17F0);
    femData:Space _t17F4#1 = ExtractFem<femData:Space,femData:FemFunc>(_t17F2);
    int _t17F7#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DF);
    femData:FuncCell _t17F9#1 = LoadFem<femData:FuncCell>(U17DC,_t17F7);
    femData:FuncCell _t17FB#1 = _t17F9;
    int _t17FD#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t17FB);
    field F17FF#5 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t17FD,_t17F4,_t17E9);
    globals.F1786 = F17FF;
    field _t1802#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F17FF);
    field _t1804#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F17FF);
    field _t1806#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1804);
    field _t1808#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F17FF);
    field _t180A#1 = λ(F0[3],F1[3])<Σ(i1=0..2)<((F0_{i0,i1} * F1_{i1}))>(i1=0..2)>_{3} (_t1806,_t1808);
    field pvoW180C#3 = λ(F0[3],F1[3])<Σ(i1=0..2)(i2=0..2)(i3=0..3)<((δ_{i0,i3} * ϵ_{ii3,ii1,ii2} * F0_{i1} * F1_{i2}))>(i1=0..2)(i2=0..2)(i3=0..3)>_{3} (_t1802,_t180A);
    globals.pvoW1787 = pvoW180C;
    field pvoF180F#1 = λ(F0[3],F1[3])<Σ(i0=0..2)<((F0_{i0} * F1_{i0}))>(i0=0..2)> (pvoW180C,pvoW180C);
    globals.pvoF1788 = pvoF180F;
    kernel _t1812#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1814#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap17AF);
    field CM1816#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img1814,_t1812);
    globals.CM1789 = CM1816;
    field C1819#1 = F17FF;
    globals.C178A = C1819;
    tensor[3] _t181C#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt17AD,camEye17AE);
    tensor[3] camN181E#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t181C,_t181C);
    globals.camN178B = camN181E;
    tensor[3] _t1821#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN181E,camUp17AC);
    tensor[3] camU1823#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1821,_t1821);
    globals.camU178C = camU1823;
    tensor[3] camV1826#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN181E,camU1823);
    globals.camV178D = camV1826;
    tensor[3] _t1829#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt17AD,camEye17AE);
    real camDist182B#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1829);
    globals.camDist178E = camDist182B;
    real _t182E#1 = 0.314159265358979323846264338327950288e1;
    real _t1830#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV17A9,_t182E);
    real _t1832#1 = 0.36e3;
    real _t1834#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1830,_t1832);
    real _t1836#1 = λ(T0[])<Tangent(T0)> (_t1834);
    real camVmax1838#2 = λ(T0[],T1[])<(T0 * T1)> (_t1836,camDist182B);
    globals.camVmax178F = camVmax1838;
    real _t183B#1 = IntToReal(iresU17A8);
    real _t183D#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1838,_t183B);
    real _t183F#1 = IntToReal(iresV17A7);
    real camUmax1841#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t183D,_t183F);
    globals.camUmax1790 = camUmax1841;
    real camNearVsp1844#1 = λ(T0[],T1[])<(T0 + T1)> (camNear17AB,camDist182B);
    globals.camNearVsp1791 = camNearVsp1844;
    real camFarVsp1847#1 = λ(T0[],T1[])<(T0 + T1)> (camFar17AA,camDist182B);
    globals.camFarVsp1792 = camFarVsp1847;
    tensor[3,3] _t184A#1 = <tensor[3,3]>[camU1823,camV1826,camN181E];
    tensor[3,3] _t184C#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t184A);
    tensor[3] _t184E#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (litdir17A6,litdir17A6);
    tensor[3] litwsp1850#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t184C,_t184E);
    globals.litwsp1793 = litwsp1850;
    return
## strand
  strand ray (int ui1872#1, int vi1873#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY191C:  preds = []
        tensor[3] camEye1891#1 = globals.camEye16F4;
        bool camOrtho1890#2 = globals.camOrtho16FA;
        int iresU188F#1 = globals.iresU16FB;
        int iresV188E#1 = globals.iresV16FC;
        real rayStep188D#1 = globals.rayStep16FD;
        real refStep188C#1 = globals.refStep16FE;
        tensor[4] phong188B#4 = globals.phong1706;
        tensor[3] camN188A#1 = globals.camN178B;
        tensor[3] camU1889#1 = globals.camU178C;
        tensor[3] camV1888#1 = globals.camV178D;
        real camDist1887#1 = globals.camDist178E;
        real camVmax1886#2 = globals.camVmax178F;
        real camUmax1885#2 = globals.camUmax1790;
        real camNearVsp1884#1 = globals.camNearVsp1791;
        real _t18B0#1 = λ(T0[])<Neg(T0)> (camUmax1885);
        real _t18B2#1 = -0.5e0;
        real _t18B4#1 = IntToReal(ui1872);
        real _t18B6#1 = IntToReal(iresU188F);
        real _t18B8#1 = 0.5e0;
        real _t18BA#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18B6,_t18B8);
        real rayU18BC#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t18B0,camUmax1885,_t18B2,_t18B4,_t18BA);
        real _t18BE#1 = λ(T0[])<Neg(T0)> (camVmax1886);
        real _t18C0#1 = -0.5e0;
        real _t18C2#1 = IntToReal(vi1873);
        real _t18C4#1 = IntToReal(iresV188E);
        real _t18C6#1 = 0.5e0;
        real _t18C8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18C4,_t18C6);
        real rayV18CA#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t18BE,camVmax1886,_t18C0,_t18C2,_t18C8);
        real rayN18CC#1 = camNearVsp1884;
        tensor[3] _t18CE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU18BC,camU1889);
        tensor[3] _t18D0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV18CA,camV1888);
        tensor[3] UV18D2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t18CE,_t18D0);
        if camOrtho1890 then goto ASSIGN18D8 else goto ASSIGN18DA
      ASSIGN18D8:  preds = [COND18E1]
        tensor[3] _t18D6#1 = UV18D2;
        goto JOIN18D5
      JOIN18D5:  preds = [ASSIGN18D8,ASSIGN18E0]
        tensor[3] _t18D7#1 = phi(_t18D6,_t18DF)
        tensor[3] rayOrig18E2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1891,_t18D7);
        if camOrtho1890 then goto ASSIGN18E7 else goto ASSIGN18F0
      ASSIGN18E7:  preds = [COND18F1]
        real _t18E6#1 = 0.e0;
        real _t18E8#1 = 0.e0;
        real _t18EA#1 = 0.e0;
        tensor[3] _t18EC#1 = <tensor[3]>[_t18E6,_t18E8,_t18EA];
        goto JOIN18E5
      JOIN18E5:  preds = [ASSIGN18EE,ASSIGN18F0]
        tensor[3] _t18ED#1 = phi(_t18EC,_t18EF)
        tensor[3] rayVec18F2#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN188A,_t18ED);
        real _t18F4#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec18F2);
        real _t18F6#1 = λ(T0[],T1[])<(T0 * T1)> (_t18F4,rayStep188D);
        real alphaFix18F8#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18F6,refStep188C);
        tensor[3] _t18FA#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (rayVec18F2,rayVec18F2);
        tensor[3] eyeDir18FC#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t18FA);
        real phKa18FE#1 = TensorIndex<tensor[4],[0]>(phong188B);
        real phKd1900#1 = TensorIndex<tensor[4],[1]>(phong188B);
        real phKs1902#1 = TensorIndex<tensor[4],[2]>(phong188B);
        real phSp1904#1 = TensorIndex<tensor[4],[3]>(phong188B);
        real _t1906#1 = 0.e0;
        real _t1908#1 = 0.e0;
        real _t190A#1 = 0.e0;
        real _t190C#1 = 0.e0;
        tensor[4] rgba190E#1 = <tensor[4]>[_t1906,_t1908,_t190A,_t190C];
        real raw1910#1 = 0.e0;
        real _t1912#1 = 0.e0;
        real _t1914#1 = 0.e0;
        real _t1916#1 = 0.e0;
        tensor[3] rgb1918#1 = <tensor[3]>[_t1912,_t1914,_t1916];
        real transp191A#1 = 0.1e1;
        self.rayU = rayU18BC;
        self.rayV = rayV18CA;
        self.rayN = rayN18CC;
        self.UV = UV18D2;
        self.rayOrig = rayOrig18E2;
        self.rayVec = rayVec18F2;
        self.alphaFix = alphaFix18F8;
        self.eyeDir = eyeDir18FC;
        self.phKa = phKa18FE;
        self.phKd = phKd1900;
        self.phKs = phKs1902;
        self.phSp = phSp1904;
        self.rgba = rgba190E;
        self.raw = raw1910;
        self.rgb = rgb1918;
        self.transp = transp191A;
        return
      ASSIGN18F0:  preds = [COND18F1]
        tensor[3] _t18EF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (UV18D2,camDist1887);
        goto JOIN18E5
      ASSIGN18DA:  preds = [COND18E1]
        real _t18D9#1 = 0.e0;
        real _t18DB#1 = 0.e0;
        real _t18DD#1 = 0.e0;
        tensor[3] _t18DF#1 = <tensor[3]>[_t18D9,_t18DB,_t18DD];
        goto JOIN18D5
    end state init
    method update
        ENTRY1A9B:  preds = []
          femData:Mesh block193F#1 = globals.block16EF;
          real rayStep193E#1 = globals.rayStep16FD;
          real transp0193D#1 = globals.transp016FF;
          real thick193C#1 = globals.thick1700;
          real fStrTh193B#1 = globals.fStrTh1701;
          real fMaskTh193A#1 = globals.fMaskTh1702;
          real fBias1939#1 = globals.fBias1703;
          real maxAlpha1938#1 = globals.maxAlpha1704;
          tensor[3] mcNear1937#1 = globals.mcNear1707;
          tensor[3] mcFar1936#1 = globals.mcFar1708;
          tensor[2] cminmax1935#2 = globals.cminmax170A;
          field F1934#2 = globals.F1786;
          field pvoF1933#5 = globals.pvoF1788;
          field CM1932#1 = globals.CM1789;
          field C1931#1 = globals.C178A;
          real camNearVsp1930#1 = globals.camNearVsp1791;
          real camFarVsp192F#2 = globals.camFarVsp1792;
          tensor[3] litwsp192E#2 = globals.litwsp1793;
          real rayU1952#0 = self.rayU;
          real rayV1953#0 = self.rayV;
          real rayN1954#1 = self.rayN;
          tensor[3] UV1955#0 = self.UV;
          tensor[3] rayOrig1956#1 = self.rayOrig;
          tensor[3] rayVec1957#1 = self.rayVec;
          real alphaFix1958#1 = self.alphaFix;
          tensor[3] eyeDir1959#1 = self.eyeDir;
          real phKa195A#1 = self.phKa;
          real phKd195B#1 = self.phKd;
          real phKs195C#2 = self.phKs;
          real phSp195D#1 = self.phSp;
          tensor[4] rgba195E#5 = self.rgba;
          real raw195F#0 = self.raw;
          tensor[3] rgb1960#4 = self.rgb;
          real transp1961#5 = self.transp;
          real rayN1972#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1954,rayStep193E);
          bool _t1974#1 = GT<real>(rayN1972,camFarVsp192F);
          if _t1974 then goto SAVE1978 else goto JOIN1976
        SAVE1978:  preds = [COND197C]
          self.rayN = rayN1972;
          self.rgba = rgba195E;
          self.rgb = rgb1960;
          self.transp = transp1961;
          stabilize
          goto JOIN1976
        JOIN1976:  preds = [*STABILIZE1977,COND197C]
          tensor[3] _t197D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN1972,rayVec1957);
          tensor[3] pos197F#9 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1956,_t197D);
          femData:RefCell _t1984#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block193F);
          femData:RefCell _t1986#1 = _t1984;
          real _t1988#1 = 0.1e-8;
          bool _t198A#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1986,pos197F,_t1988);
          if _t198A then goto ASSIGN1990 else goto ASSIGN19DD
        ASSIGN1990:  preds = [COND19DE]
          field _t198F#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1934);
          field _t1991#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t198F);
          tensor[3,3] _t1993#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1991,pos197F);
          (real[3] _t1995#1,tensor[3][3] evecs1996#0) = Eigen3x3(_t1993);
          int _t1998#1 = 1;
          real _t199A#1 = Subscript<real[3]>(_t1995,_t1998);
          real _t199C#1 = λ(T0[])<Neg(T0)> (_t199A);
          field _t199E#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1934);
          tensor[3] _t19A0#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t199E,pos197F);
          real _t19A2#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t19A0);
          real _t19A4#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1939,_t19A2);
          real _t19A6#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t199C,_t19A4);
          real _t19A8#1 = _t19A6;
          bool _t19AA#1 = GT<real>(_t19A8,fStrTh193B);
          if _t19AA then goto ASSIGN19B0 else goto ASSIGN19D7
        ASSIGN19B0:  preds = [COND19D8]
          real _t19AF#1 = 0.1e1;
          real _t19B1#1 = _t19AF;
          bool _t19B3#1 = GTE<real>(_t19B1,fMaskTh193A);
          if _t19B3 then goto ASSIGN19B9 else goto ASSIGN19D1
        ASSIGN19B9:  preds = [COND19D2]
          field _t19B8#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (pvoF1933);
          tensor[3] _t19BA#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t19B8,pos197F);
          real _t19BC#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t19BA);
          real _t19BE#1 = 0.1e-7;
          bool _t19C0#1 = GT<real>(_t19BC,_t19BE);
          bool _t19C2#1 = _t19C0;
          if _t19C2 then goto ASSIGN19C6 else goto ASSIGN19CB
        ASSIGN19C6:  preds = [COND19CC]
          bool _t19C5#1 = true;
          bool _t19C7#1 = _t19C5;
          goto JOIN19C4
        JOIN19C4:  preds = [ASSIGN19C9,ASSIGN19CB]
          bool _t19C8#1 = phi(_t19C7,_t19CA)
          bool _t19CD#1 = _t19C8;
          goto JOIN19B5
        JOIN19B5:  preds = [ASSIGN19CF,ASSIGN19D1]
          bool _t19CE#1 = phi(_t19CD,_t19D0)
          bool _t19D3#1 = _t19CE;
          goto JOIN19AC
        JOIN19AC:  preds = [ASSIGN19D5,ASSIGN19D7]
          bool _t19D4#1 = phi(_t19D3,_t19D6)
          bool _t19D9#1 = _t19D4;
          goto JOIN198C
        JOIN198C:  preds = [ASSIGN19DB,ASSIGN19DD]
          bool _t19DA#1 = phi(_t19D9,_t19DC)
          bool _t19DF#1 = _t19DA;
          bool _t19E1#1 = BNot(_t19DF);
          if _t19E1 then goto SAVE19E5 else goto JOIN19E3
        SAVE19E5:  preds = [COND19E9]
          self.rayN = rayN1972;
          self.rgba = rgba195E;
          self.rgb = rgb1960;
          self.transp = transp1961;
          active
          goto JOIN19E3
        JOIN19E3:  preds = [*ACTIVE19E4,COND19E9]
          real _t19EB#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (pvoF1933,pos197F);
          field _t19ED#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (pvoF1933);
          tensor[3] _t19EF#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t19ED,pos197F);
          tensor[3] _t19F1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t19EB,_t19EF);
          field _t19F3#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (pvoF1933);
          tensor[3] _t19F5#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t19F3,pos197F);
          field _t19F7#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (pvoF1933);
          tensor[3] _t19F9#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t19F7,pos197F);
          real _t19FB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19F5,_t19F9);
          tensor[3] _t19FD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t19F1,_t19FB);
          tensor[3] _t19FF#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t19FD);
          tensor[3] step1A01#4 = _t19FF;
          real _t1A03#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (step1A01);
          real _t1A06#1 = 0.e0;
          real _t1A08#1 = 0.1e1;
          real _t1A0A#1 = 0.15e1;
          real _t1A0C#1 = 0.1e1;
          real _t1A0E#1 = λ(T0[])<Abs(T0)> (_t1A03);
          real _t1A10#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A0E,thick193C);
          real _t1A12#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A0C,_t1A10);
          real _t1A14#1 = λ(T0[],T1[])<(T0 * T1)> (_t1A0A,_t1A12);
          real _t1A16#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1A06,_t1A08,_t1A14);
          real _t1A18#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1938,_t1A16);
          real aa1A1A#2 = _t1A18;
          real _t1A1C#1 = 0.e0;
          bool _t1A1E#1 = EQ<real>(aa1A1A,_t1A1C);
          if _t1A1E then goto SAVE1A22 else goto JOIN1A20
        SAVE1A22:  preds = [COND1A26]
          self.rayN = rayN1972;
          self.rgba = rgba195E;
          self.rgb = rgb1960;
          self.transp = transp1961;
          active
          goto JOIN1A20
        JOIN1A20:  preds = [*ACTIVE1A21,COND1A26]
          real _t1A27#1 = 0.1e1;
          real _t1A29#1 = 0.1e1;
          real _t1A2B#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A29,aa1A1A);
          real _t1A2D#1 = MathFn<pow>(_t1A2B,alphaFix1958);
          real aa1A2F#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1A27,_t1A2D);
          tensor[3] _t1A31#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (step1A01,step1A01);
          tensor[3] snorm1A33#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1A31);
          real _t1A35#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1A33,litwsp192E);
          int _t1A37#0 = 2;
          real dcomp1A39#1 = λ(T0[])<(T0)^2> (_t1A35);
          real scomp1A3B#1 = 0.e0;
          real _t1A3D#1 = 0.e0;
          bool _t1A3F#1 = NEQ<real>(phKs195C,_t1A3D);
          if _t1A3F then goto ASSIGN1A43 else goto JOIN1A41
        ASSIGN1A43:  preds = [COND1A4D]
          tensor[3] _t1A42#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1959,litwsp192E);
          tensor[3] _t1A44#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1A42,_t1A42);
          real _t1A46#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1A33,_t1A44);
          real _t1A48#1 = λ(T0[])<Abs(T0)> (_t1A46);
          real scomp1A4A#1 = MathFn<pow>(_t1A48,phSp195D);
          goto JOIN1A41
        JOIN1A41:  preds = [ASSIGN1A4C,COND1A4D]
          real scomp1A4B#1 = phi(scomp1A4A,scomp1A3B)
          tensor[3] dcol1A4E#1 = λ(T0[3],T1[3],T2[],T3[],T4[])<(T0_{i0} + (((T3) - (T2)) / ( (T4) - (T2)) * (T1_{i0}) - (T0_{i0})))>_{3} (mcNear1937,mcFar1936,camNearVsp1930,rayN1972,camFarVsp192F);
          real cmin1A50#2 = TensorIndex<tensor[2],[0]>(cminmax1935);
          real cmax1A52#2 = TensorIndex<tensor[2],[1]>(cminmax1935);
          real _t1A54#1 = 0.1e1;
          real _t1A56#1 = 0.1e1;
          real _t1A58#1 = 0.1e1;
          tensor[3] mcol1A5A#1 = <tensor[3]>[_t1A54,_t1A56,_t1A58];
          bool _t1A5C#1 = NEQ<real>(cmin1A50,cmax1A52);
          if _t1A5C then goto ASSIGN1A60 else goto JOIN1A5E
        ASSIGN1A60:  preds = [COND1A6C]
          real _t1A5F#1 = 0.e0;
          real _t1A61#1 = 0.1e1;
          tensor[3] _t1A63#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos197F,step1A01);
          real _t1A65#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (C1931,_t1A63);
          real _t1A67#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1A5F,_t1A61,cmin1A50,_t1A65,cmax1A52);
          tensor[3] mcol1A69#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (CM1932,_t1A67);
          goto JOIN1A5E
        JOIN1A5E:  preds = [ASSIGN1A6B,COND1A6C]
          tensor[3] mcol1A6A#1 = phi(mcol1A69,mcol1A5A)
          real _t1A6D#1 = λ(T0[],T1[])<(T0 * T1)> (transp1961,aa1A2F);
          real _t1A6F#1 = λ(T0[],T1[])<(T0 * T1)> (phKd195B,dcomp1A39);
          real _t1A71#1 = λ(T0[],T1[])<(T0 + T1)> (phKa195A,_t1A6F);
          tensor[3] _t1A73#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (dcol1A4E,mcol1A6A);
          tensor[3] _t1A75#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A71,_t1A73);
          real _t1A77#1 = λ(T0[],T1[])<(T0 * T1)> (phKs195C,scomp1A4B);
          real _t1A79#1 = 0.1e1;
          real _t1A7B#1 = 0.1e1;
          real _t1A7D#1 = 0.1e1;
          tensor[3] _t1A7F#1 = <tensor[3]>[_t1A79,_t1A7B,_t1A7D];
          tensor[3] _t1A81#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A77,_t1A7F);
          tensor[3] _t1A83#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1A75,_t1A81);
          tensor[3] _t1A85#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A6D,_t1A83);
          tensor[3] rgb1A87#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1960,_t1A85);
          real _t1A89#1 = 0.1e1;
          real _t1A8B#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A89,aa1A2F);
          real transp1A8D#2 = λ(T0[],T1[])<(T0 * T1)> (transp1961,_t1A8B);
          bool _t1A8F#1 = LT<real>(transp1A8D,transp0193D);
          if _t1A8F then goto ASSIGN1A94 else goto JOIN1A91
        ASSIGN1A94:  preds = [COND1A9A]
          real transp1A92#1 = 0.e0;
          self.rayN = rayN1972;
          self.rgba = rgba195E;
          self.rgb = rgb1A87;
          self.transp = transp1A92;
          stabilize
          goto JOIN1A91
        JOIN1A91:  preds = [*STABILIZE1A95,COND1A9A]
          real transp1A93#1 = phi(transp1A8D)
          self.rayN = rayN1972;
          self.rgba = rgba195E;
          self.rgb = rgb1A87;
          self.transp = transp1A93;
          active
        ASSIGN19CB:  preds = [COND19CC]
          bool _t19CA#1 = false;
          goto JOIN19C4
        ASSIGN19D1:  preds = [COND19D2]
          bool _t19D0#1 = false;
          goto JOIN19B5
        ASSIGN19D7:  preds = [COND19D8]
          bool _t19D6#1 = false;
          goto JOIN19AC
        ASSIGN19DD:  preds = [COND19DE]
          bool _t19DC#1 = false;
          goto JOIN198C
    end update
    method stabilize
        ENTRY1ADA:  preds = []
          real rayU1AA1#0 = self.rayU;
          real rayV1AA2#0 = self.rayV;
          real rayN1AA3#1 = self.rayN;
          tensor[3] UV1AA4#0 = self.UV;
          tensor[3] rayOrig1AA5#0 = self.rayOrig;
          tensor[3] rayVec1AA6#0 = self.rayVec;
          real alphaFix1AA7#0 = self.alphaFix;
          tensor[3] eyeDir1AA8#0 = self.eyeDir;
          real phKa1AA9#0 = self.phKa;
          real phKd1AAA#0 = self.phKd;
          real phKs1AAB#0 = self.phKs;
          real phSp1AAC#0 = self.phSp;
          tensor[4] rgba1AAD#1 = self.rgba;
          real raw1AAE#0 = self.raw;
          tensor[3] rgb1AAF#4 = self.rgb;
          real transp1AB0#3 = self.transp;
          real _t1AC1#1 = 0.1e1;
          bool _t1AC3#1 = LT<real>(transp1AB0,_t1AC1);
          if _t1AC3 then goto ASSIGN1AC7 else goto JOIN1AC5
        ASSIGN1AC7:  preds = [COND1AD9]
          real _t1AC6#1 = 0.1e1;
          real aa1AC8#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1AC6,transp1AB0);
          real _t1ACA#1 = TensorIndex<tensor[3],[0]>(rgb1AAF);
          real _t1ACC#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ACA,aa1AC8);
          real _t1ACE#1 = TensorIndex<tensor[3],[1]>(rgb1AAF);
          real _t1AD0#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ACE,aa1AC8);
          real _t1AD2#1 = TensorIndex<tensor[3],[2]>(rgb1AAF);
          real _t1AD4#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1AD2,aa1AC8);
          tensor[4] rgba1AD6#1 = <tensor[4]>[_t1ACC,_t1AD0,_t1AD4,aa1AC8];
          goto JOIN1AC5
        JOIN1AC5:  preds = [ASSIGN1AD8,COND1AD9]
          tensor[4] rgba1AD7#1 = phi(rgba1AD6,rgba1AAD)
          self.rayN = rayN1AA3;
          self.rgba = rgba1AD7;
          self.rgb = rgb1AAF;
          self.transp = transp1AB0;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY1870:  preds = []
      int iresU1856#1 = globals.iresU16FB;
      int iresV1855#1 = globals.iresV16FC;
      int _t1859#1 = 0;
      int _t185B#1 = 1;
      int _t185D#1 = ISub(iresV1855,_t185B);
      int[] _t185F#1 = Range(_t1859,_t185D);
    FOREACH1862:  preds = [ASSIGN1860,NEXT186F]
      foreach (vi1861 in _t185F) on exit goto RETURN1871
      int _t1863#1 = 0;
      int _t1865#1 = 1;
      int _t1867#1 = ISub(iresU1856,_t1865);
      int[] _t1869#1 = Range(_t1863,_t1867);
    FOREACH186C:  preds = [ASSIGN186A,NEXT186E]
      foreach (ui186B in _t1869) on exit goto NEXT186F
      new ray(ui186B,vi1861);
      goto FOREACH186C
    NEXT186F:  preds = [FOREACH186C]
      goto FOREACH1862
    RETURN1871:  preds = [FOREACH1862]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block16EF (block) = <no-default>
  input 0space04D7_intermedateGlobal16F0 (space) = <no-default>
  input 0U04D9_intermedateGlobal16F1 (U) = <no-default>
  input cellChoice16F2 (cellChoice) = <no-default>
  input cmap16F3 (cmap) = image("cmap.nrrd")
  input camEye16F4 (camEye) = <default>
  input camAt16F5 (camAt) = <default>
  input camUp16F6 (camUp) = <default>
  input camNear16F7 (camNear) = <default>
  input camFar16F8 (camFar) = <default>
  input camFOV16F9 (camFOV) = <default>
  input camOrtho16FA (camOrtho) = <default>
  input iresU16FB (iresU) = <default>
  input iresV16FC (iresV) = <default>
  input rayStep16FD (rayStep) = <default>
  input refStep16FE (refStep) = <default>
  input transp016FF (transp0) = <default>
  input thick1700 (thick) = <default>
  input fStrTh1701 (fStrTh) = <default>
  input fMaskTh1702 (fMaskTh) = <default>
  input fBias1703 (fBias) = <default>
  input maxAlpha1704 (maxAlpha) = <default>
  input light1705 (light) = <default>
  input phong1706 (phong) = <default>
  input mcNear1707 (mcNear) = <default>
  input mcFar1708 (mcFar) = <default>
  input litdir1709 (litdir) = <default>
  input cminmax170A (cminmax) = <default>
  global femData:MeshCell[] 0cell_block1782
  global femData:Space space1783
  global femData:FemFunc U1784
  global femData:MeshCell c11785
  global field F1786
  global field pvoW1787
  global field pvoF1788
  global field CM1789
  global field C178A
  global tensor[3] camN178B
  global tensor[3] camU178C
  global tensor[3] camV178D
  global real camDist178E
  global real camVmax178F
  global real camUmax1790
  global real camNearVsp1791
  global real camFarVsp1792
  global tensor[3] litwsp1793
## functions
  function int[2] nextCell417A5 (int faceIdx1794#1, int cell1795#1, femData:Mesh mesh1796#1) {
    ENTRY17A4:  preds = []
      int _t1797#1 = 12;
      int _t1799#1 = IMul(cell1795,_t1797);
      int _t179B#1 = 2;
      int _t179D#1 = IMul(faceIdx1794,_t179B);
      int _t179F#1 = IAdd(_t1799,_t179D);
      int[2] _t17A1#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1796,_t179F);
      return _t17A1
}
## input initialization
  ENTRY1780:  preds = []
    real _t170B#13 = 0.e0;
    real _t170D#1 = -0.2e1;
    tensor[3] camEye1711#1 = <tensor[3]>[_t170B,_t170D,_t170B];
    globals.camEye16F4 = camEye1711;
    tensor[3] camAt171A#1 = <tensor[3]>[_t170B,_t170B,_t170B];
    globals.camAt16F5 = camAt171A;
    real _t1721#5 = 0.1e1;
    tensor[3] camUp1723#1 = <tensor[3]>[_t170B,_t170B,_t1721];
    globals.camUp16F6 = camUp1723;
    real camNear1726#1 = -0.4e1;
    globals.camNear16F7 = camNear1726;
    real camFar1729#1 = 0.4e1;
    globals.camFar16F8 = camFar1729;
    real camFOV172C#1 = 0.1e2;
    globals.camFOV16F9 = camFOV172C;
    bool camOrtho172F#2 = false;
    globals.camOrtho16FA = camOrtho172F;
    int iresU1732#2 = 100;
    globals.iresU16FB = iresU1732;
    globals.iresV16FC = iresU1732;
    real rayStep1738#2 = 0.1e-3;
    globals.rayStep16FD = rayStep1738;
    globals.refStep16FE = rayStep1738;
    real transp0173E#1 = 0.5e-2;
    globals.transp016FF = transp0173E;
    real thick1741#1 = 0.1e-1;
    globals.thick1700 = thick1741;
    globals.fStrTh1701 = _t170B;
    globals.fMaskTh1702 = _t170B;
    real fBias174A#2 = 0.1e0;
    globals.fBias1703 = fBias174A;
    globals.maxAlpha1704 = _t1721;
    globals.light1705 = camOrtho172F;
    real _t1755#1 = 0.7e0;
    real _t1757#1 = 0.2e0;
    real _t1759#1 = 0.1e3;
    tensor[4] phong175B#1 = <tensor[4]>[fBias174A,_t1755,_t1757,_t1759];
    globals.phong1706 = phong175B;
    tensor[3] mcNear1764#2 = <tensor[3]>[_t1721,_t1721,_t1721];
    globals.mcNear1707 = mcNear1764;
    globals.mcFar1708 = mcNear1764;
    real _t1772#1 = -0.1e1;
    tensor[3] litdir1776#1 = <tensor[3]>[_t170B,_t1772,_t170B];
    globals.litdir1709 = litdir1776;
    tensor[2] cminmax177D#1 = <tensor[2]>[_t170B,_t170B];
    globals.cminmax170A = cminmax177D;
    return
## global-variable initialization
  ENTRY1853:  preds = []
    femData:Mesh block17B3#3 = globals.block16EF;
    femData:Space 0space04D7_intermedateGlobal17B2#1 = globals.0space04D7_intermedateGlobal16F0;
    femData:FemFunc 0U04D9_intermedateGlobal17B1#1 = globals.0U04D9_intermedateGlobal16F1;
    int cellChoice17B0#1 = globals.cellChoice16F2;
    image(IMAGE1D<double[3]>) cmap17AF#1 = globals.cmap16F3;
    tensor[3] camEye17AE#1 = globals.camEye16F4;
    tensor[3] camAt17AD#1 = globals.camAt16F5;
    tensor[3] camUp17AC#1 = globals.camUp16F6;
    real camNear17AB#1 = globals.camNear16F7;
    real camFar17AA#1 = globals.camFar16F8;
    real camFOV17A9#1 = globals.camFOV16F9;
    int iresU17A8#1 = globals.iresU16FB;
    int iresV17A7#1 = globals.iresV16FC;
    tensor[3] litdir17A6#2 = globals.litdir1709;
    int _t17C2#1 = 0;
    int _t17C4#1 = 1;
    int _t17C6#1 = ExtractFemItem<int,NumCell(Mesh)>(block17B3);
    int _t17C8#1 = ISub(_t17C6,_t17C4);
    int[] _t17CA#1 = Range(_t17C2,_t17C8);
    femData:MeshCell[] _t17CC#1 = <femData:MeshCell[]>{};
  FOREACH17D0:  preds = [ASSIGN17CD,NEXT17D5]
    foreach (_t17CE in _t17CA) on exit goto GASSIGN1AF0
      femData:MeshCell[] _t17CF#3 = phi(_t17CC,_t17D3)
    femData:MeshCell _t17D1#1 = LoadFem<femData:MeshCell>(block17B3,_t17CE);
    femData:MeshCell[] _t17D3#1 = Append<femData:MeshCell>(_t17CF,_t17D1);
    goto FOREACH17D0
  GASSIGN1AF0:  preds = [FOREACH17D0]
    globals.0cell_block1782 = _t17CF;
    femData:Space space17D9#2 = LoadFem<femData:Space>(0space04D7_intermedateGlobal17B2,block17B3);
    globals.space1783 = space17D9;
    femData:FemFunc U17DC#2 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal17B1,space17D9);
    globals.U1784 = U17DC;
    femData:MeshCell c117DF#2 = Subscript<femData:MeshCell[]>(_t17CF,cellChoice17B0);
    globals.c11785 = c117DF;
    int _t17E3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DF);
    femData:FuncCell _t17E5#2 = LoadFem<femData:FuncCell>(U17DC,_t17E3);
    femData:FemFunc _t17E9#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17E5);
    femData:Space _t17F4#1 = ExtractFem<femData:Space,femData:FemFunc>(_t17E9);
    int _t17FD#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t17E5);
    field F17FF#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t17FD,_t17F4,_t17E9);
    globals.F1786 = F17FF;
    field _t1802#3 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F17FF);
    field _t1806#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1802);
    field _t180A#1 = λ(F0[3],F1[3])<Σ(i1=0..2)<((F0_{i0,i1} * F1_{i1}))>(i1=0..2)>_{3} (_t1806,_t1802);
    field pvoW180C#3 = λ(F0[3],F1[3])<Σ(i1=0..2)(i2=0..2)(i3=0..3)<((δ_{i0,i3} * ϵ_{ii3,ii1,ii2} * F0_{i1} * F1_{i2}))>(i1=0..2)(i2=0..2)(i3=0..3)>_{3} (_t1802,_t180A);
    globals.pvoW1787 = pvoW180C;
    field pvoF180F#1 = λ(F0[3],F1[3])<Σ(i0=0..2)<((F0_{i0} * F1_{i0}))>(i0=0..2)> (pvoW180C,pvoW180C);
    globals.pvoF1788 = pvoF180F;
    kernel _t1812#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1814#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap17AF);
    field CM1816#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img1814,_t1812);
    globals.CM1789 = CM1816;
    globals.C178A = F17FF;
    tensor[3] _t181C#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt17AD,camEye17AE);
    tensor[3] camN181E#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t181C,_t181C);
    globals.camN178B = camN181E;
    tensor[3] _t1821#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN181E,camUp17AC);
    tensor[3] camU1823#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1821,_t1821);
    globals.camU178C = camU1823;
    tensor[3] camV1826#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN181E,camU1823);
    globals.camV178D = camV1826;
    real camDist182B#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t181C);
    globals.camDist178E = camDist182B;
    real _t182E#1 = 0.314159265358979323846264338327950288e1;
    real _t1830#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV17A9,_t182E);
    real _t1832#1 = 0.36e3;
    real _t1834#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1830,_t1832);
    real _t1836#1 = λ(T0[])<Tangent(T0)> (_t1834);
    real camVmax1838#2 = λ(T0[],T1[])<(T0 * T1)> (_t1836,camDist182B);
    globals.camVmax178F = camVmax1838;
    real _t183B#1 = IntToReal(iresU17A8);
    real _t183D#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1838,_t183B);
    real _t183F#1 = IntToReal(iresV17A7);
    real camUmax1841#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t183D,_t183F);
    globals.camUmax1790 = camUmax1841;
    real camNearVsp1844#1 = λ(T0[],T1[])<(T0 + T1)> (camNear17AB,camDist182B);
    globals.camNearVsp1791 = camNearVsp1844;
    real camFarVsp1847#1 = λ(T0[],T1[])<(T0 + T1)> (camFar17AA,camDist182B);
    globals.camFarVsp1792 = camFarVsp1847;
    tensor[3,3] _t184A#1 = <tensor[3,3]>[camU1823,camV1826,camN181E];
    tensor[3,3] _t184C#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t184A);
    tensor[3] _t184E#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (litdir17A6,litdir17A6);
    tensor[3] litwsp1850#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t184C,_t184E);
    globals.litwsp1793 = litwsp1850;
    return
## strand
  strand ray (int ui1872#1, int vi1873#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY191C:  preds = []
        tensor[3] camEye1891#1 = globals.camEye16F4;
        bool camOrtho1890#2 = globals.camOrtho16FA;
        int iresU188F#1 = globals.iresU16FB;
        int iresV188E#1 = globals.iresV16FC;
        real rayStep188D#1 = globals.rayStep16FD;
        real refStep188C#1 = globals.refStep16FE;
        tensor[4] phong188B#4 = globals.phong1706;
        tensor[3] camN188A#1 = globals.camN178B;
        tensor[3] camU1889#1 = globals.camU178C;
        tensor[3] camV1888#1 = globals.camV178D;
        real camDist1887#1 = globals.camDist178E;
        real camVmax1886#2 = globals.camVmax178F;
        real camUmax1885#2 = globals.camUmax1790;
        real camNearVsp1884#1 = globals.camNearVsp1791;
        real _t18B0#1 = λ(T0[])<Neg(T0)> (camUmax1885);
        real _t18B2#2 = -0.5e0;
        real _t18B4#1 = IntToReal(ui1872);
        real _t18B6#1 = IntToReal(iresU188F);
        real _t18B8#2 = 0.5e0;
        real _t18BA#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18B6,_t18B8);
        real rayU18BC#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t18B0,camUmax1885,_t18B2,_t18B4,_t18BA);
        real _t18BE#1 = λ(T0[])<Neg(T0)> (camVmax1886);
        real _t18C2#1 = IntToReal(vi1873);
        real _t18C4#1 = IntToReal(iresV188E);
        real _t18C8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18C4,_t18B8);
        real rayV18CA#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t18BE,camVmax1886,_t18B2,_t18C2,_t18C8);
        tensor[3] _t18CE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU18BC,camU1889);
        tensor[3] _t18D0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV18CA,camV1888);
        tensor[3] UV18D2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t18CE,_t18D0);
        if camOrtho1890 then goto JOIN18D5 else goto ASSIGN18DA
      JOIN18D5:  preds = [COND18E1,ASSIGN1AFB]
        tensor[3] _t18D7#1 = phi(UV18D2,_t18DF)
        tensor[3] rayOrig18E2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1891,_t18D7);
        if camOrtho1890 then goto ASSIGN18E7 else goto ASSIGN18F0
      ASSIGN18E7:  preds = [COND18F1]
        real _t18E6#3 = 0.e0;
        tensor[3] _t18EC#1 = <tensor[3]>[_t18E6,_t18E6,_t18E6];
        goto JOIN18E5
      JOIN18E5:  preds = [ASSIGN1AFC,ASSIGN18F0]
        tensor[3] _t18ED#1 = phi(_t18EC,_t18EF)
        tensor[3] rayVec18F2#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN188A,_t18ED);
        real _t18F4#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec18F2);
        real _t18F6#1 = λ(T0[],T1[])<(T0 * T1)> (_t18F4,rayStep188D);
        real alphaFix18F8#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18F6,refStep188C);
        tensor[3] _t18FA#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (rayVec18F2,rayVec18F2);
        tensor[3] eyeDir18FC#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t18FA);
        real phKa18FE#1 = TensorIndex<tensor[4],[0]>(phong188B);
        real phKd1900#1 = TensorIndex<tensor[4],[1]>(phong188B);
        real phKs1902#1 = TensorIndex<tensor[4],[2]>(phong188B);
        real phSp1904#1 = TensorIndex<tensor[4],[3]>(phong188B);
        real _t1906#8 = 0.e0;
        tensor[4] rgba190E#1 = <tensor[4]>[_t1906,_t1906,_t1906,_t1906];
        tensor[3] rgb1918#1 = <tensor[3]>[_t1906,_t1906,_t1906];
        real transp191A#1 = 0.1e1;
        self.rayU = rayU18BC;
        self.rayV = rayV18CA;
        self.rayN = camNearVsp1884;
        self.UV = UV18D2;
        self.rayOrig = rayOrig18E2;
        self.rayVec = rayVec18F2;
        self.alphaFix = alphaFix18F8;
        self.eyeDir = eyeDir18FC;
        self.phKa = phKa18FE;
        self.phKd = phKd1900;
        self.phKs = phKs1902;
        self.phSp = phSp1904;
        self.rgba = rgba190E;
        self.raw = _t1906;
        self.rgb = rgb1918;
        self.transp = transp191A;
        return
      ASSIGN18F0:  preds = [COND18F1]
        tensor[3] _t18EF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (UV18D2,camDist1887);
        goto JOIN18E5
      ASSIGN18DA:  preds = [COND18E1]
        real _t18D9#3 = 0.e0;
        tensor[3] _t18DF#1 = <tensor[3]>[_t18D9,_t18D9,_t18D9];
        goto JOIN18D5
    end state init
    method update
        ENTRY1A9B:  preds = []
          femData:Mesh block193F#1 = globals.block16EF;
          real rayStep193E#1 = globals.rayStep16FD;
          real transp0193D#1 = globals.transp016FF;
          real thick193C#1 = globals.thick1700;
          real fStrTh193B#1 = globals.fStrTh1701;
          real fMaskTh193A#1 = globals.fMaskTh1702;
          real fBias1939#1 = globals.fBias1703;
          real maxAlpha1938#1 = globals.maxAlpha1704;
          tensor[3] mcNear1937#1 = globals.mcNear1707;
          tensor[3] mcFar1936#1 = globals.mcFar1708;
          tensor[2] cminmax1935#2 = globals.cminmax170A;
          field F1934#1 = globals.F1786;
          field pvoF1933#3 = globals.pvoF1788;
          field CM1932#1 = globals.CM1789;
          field C1931#1 = globals.C178A;
          real camNearVsp1930#1 = globals.camNearVsp1791;
          real camFarVsp192F#2 = globals.camFarVsp1792;
          tensor[3] litwsp192E#2 = globals.litwsp1793;
          real rayU1952#0 = self.rayU;
          real rayV1953#0 = self.rayV;
          real rayN1954#1 = self.rayN;
          tensor[3] UV1955#0 = self.UV;
          tensor[3] rayOrig1956#1 = self.rayOrig;
          tensor[3] rayVec1957#1 = self.rayVec;
          real alphaFix1958#1 = self.alphaFix;
          tensor[3] eyeDir1959#1 = self.eyeDir;
          real phKa195A#1 = self.phKa;
          real phKd195B#1 = self.phKd;
          real phKs195C#2 = self.phKs;
          real phSp195D#1 = self.phSp;
          tensor[4] rgba195E#0 = self.rgba;
          real raw195F#0 = self.raw;
          tensor[3] rgb1960#1 = self.rgb;
          real transp1961#2 = self.transp;
          real rayN1972#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1954,rayStep193E);
          bool _t1974#1 = GT<real>(rayN1972,camFarVsp192F);
          if _t1974 then goto SAVE1978 else goto JOIN1976
        SAVE1978:  preds = [COND197C]
          self.rayN = rayN1972;
          stabilize
          goto JOIN1976
        JOIN1976:  preds = [*STABILIZE1977,COND197C]
          tensor[3] _t197D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN1972,rayVec1957);
          tensor[3] pos197F#7 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1956,_t197D);
          femData:RefCell _t1984#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block193F);
          real _t1988#1 = 0.1e-8;
          bool _t198A#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1984,pos197F,_t1988);
          if _t198A then goto ASSIGN1990 else goto ASSIGN19DD
        ASSIGN1990:  preds = [COND19DE]
          field _t198F#2 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F1934);
          field _t1991#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t198F);
          tensor[3,3] _t1993#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1991,pos197F);
          (real[3] _t1995#1,tensor[3][3] evecs1996#0) = Eigen3x3(_t1993);
          int _t1998#1 = 1;
          real _t199A#1 = Subscript<real[3]>(_t1995,_t1998);
          real _t199C#1 = λ(T0[])<Neg(T0)> (_t199A);
          tensor[3] _t19A0#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t198F,pos197F);
          real _t19A2#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t19A0);
          real _t19A4#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1939,_t19A2);
          real _t19A6#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t199C,_t19A4);
          bool _t19AA#1 = GT<real>(_t19A6,fStrTh193B);
          if _t19AA then goto ASSIGN19B0 else goto ASSIGN19D7
        ASSIGN19B0:  preds = [COND19D8]
          real _t19AF#1 = 0.1e1;
          bool _t19B3#1 = GTE<real>(_t19AF,fMaskTh193A);
          if _t19B3 then goto ASSIGN19B9 else goto ASSIGN19D1
        ASSIGN19B9:  preds = [COND19D2]
          field _t19B8#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (pvoF1933);
          tensor[3] _t19BA#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t19B8,pos197F);
          real _t19BC#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t19BA);
          real _t19BE#1 = 0.1e-7;
          bool _t19C0#1 = GT<real>(_t19BC,_t19BE);
          if _t19C0 then goto ASSIGN19C6 else goto ASSIGN19CB
        ASSIGN19C6:  preds = [COND19CC]
          bool _t19C5#1 = true;
          goto JOIN19C4
        JOIN19C4:  preds = [ASSIGN19C6,ASSIGN19CB]
          bool _t19C8#1 = phi(_t19C5,_t19CA)
          goto JOIN19B5
        JOIN19B5:  preds = [JOIN19C4,ASSIGN19D1]
          bool _t19CE#1 = phi(_t19C8,_t19D0)
          goto JOIN19AC
        JOIN19AC:  preds = [JOIN19B5,ASSIGN19D7]
          bool _t19D4#1 = phi(_t19CE,_t19D6)
          goto JOIN198C
        JOIN198C:  preds = [JOIN19AC,ASSIGN19DD]
          bool _t19DA#1 = phi(_t19D4,_t19DC)
          bool _t19E1#1 = BNot(_t19DA);
          if _t19E1 then goto SAVE19E5 else goto JOIN19E3
        SAVE19E5:  preds = [COND19E9]
          self.rayN = rayN1972;
          active
          goto JOIN19E3
        JOIN19E3:  preds = [*ACTIVE19E4,COND19E9]
          real _t19EB#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (pvoF1933,pos197F);
          field _t19ED#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (pvoF1933);
          tensor[3] _t19EF#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t19ED,pos197F);
          tensor[3] _t19F1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t19EB,_t19EF);
          real _t19FB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19EF,_t19EF);
          tensor[3] _t19FD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t19F1,_t19FB);
          tensor[3] _t19FF#4 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t19FD);
          real _t1A03#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t19FF);
          real _t1A06#6 = 0.e0;
          real _t1A08#9 = 0.1e1;
          real _t1A0A#1 = 0.15e1;
          real _t1A0E#1 = λ(T0[])<Abs(T0)> (_t1A03);
          real _t1A10#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A0E,thick193C);
          real _t1A12#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A08,_t1A10);
          real _t1A14#1 = λ(T0[],T1[])<(T0 * T1)> (_t1A0A,_t1A12);
          real _t1A16#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1A06,_t1A08,_t1A14);
          real _t1A18#2 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1938,_t1A16);
          bool _t1A1E#1 = EQ<real>(_t1A18,_t1A06);
          if _t1A1E then goto SAVE1A22 else goto JOIN1A20
        SAVE1A22:  preds = [COND1A26]
          self.rayN = rayN1972;
          active
          goto JOIN1A20
        JOIN1A20:  preds = [*ACTIVE1A21,COND1A26]
          real _t1A2B#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A08,_t1A18);
          real _t1A2D#1 = MathFn<pow>(_t1A2B,alphaFix1958);
          real aa1A2F#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1A08,_t1A2D);
          tensor[3] _t1A31#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t19FF,_t19FF);
          tensor[3] snorm1A33#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1A31);
          real _t1A35#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1A33,litwsp192E);
          int _t1A37#0 = 2;
          real dcomp1A39#1 = λ(T0[])<(T0)^2> (_t1A35);
          bool _t1A3F#1 = NEQ<real>(phKs195C,_t1A06);
          if _t1A3F then goto ASSIGN1A43 else goto JOIN1A41
        ASSIGN1A43:  preds = [COND1A4D]
          tensor[3] _t1A42#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1959,litwsp192E);
          tensor[3] _t1A44#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1A42,_t1A42);
          real _t1A46#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (snorm1A33,_t1A44);
          real _t1A48#1 = λ(T0[])<Abs(T0)> (_t1A46);
          real scomp1A4A#1 = MathFn<pow>(_t1A48,phSp195D);
          goto JOIN1A41
        JOIN1A41:  preds = [ASSIGN1A4C,COND1A4D]
          real scomp1A4B#1 = phi(scomp1A4A,_t1A06)
          tensor[3] dcol1A4E#1 = λ(T0[3],T1[3],T2[],T3[],T4[])<(T0_{i0} + (((T3) - (T2)) / ( (T4) - (T2)) * (T1_{i0}) - (T0_{i0})))>_{3} (mcNear1937,mcFar1936,camNearVsp1930,rayN1972,camFarVsp192F);
          real cmin1A50#2 = TensorIndex<tensor[2],[0]>(cminmax1935);
          real cmax1A52#2 = TensorIndex<tensor[2],[1]>(cminmax1935);
          tensor[3] mcol1A5A#2 = <tensor[3]>[_t1A08,_t1A08,_t1A08];
          bool _t1A5C#1 = NEQ<real>(cmin1A50,cmax1A52);
          if _t1A5C then goto ASSIGN1B0F else goto JOIN1A5E
        ASSIGN1B0F:  preds = [COND1A6C]
          tensor[3] _t1A63#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos197F,_t19FF);
          real _t1A65#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (C1931,_t1A63);
          real _t1A67#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1A06,_t1A08,cmin1A50,_t1A65,cmax1A52);
          tensor[3] mcol1A69#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (CM1932,_t1A67);
          goto JOIN1A5E
        JOIN1A5E:  preds = [ASSIGN1A6B,COND1A6C]
          tensor[3] mcol1A6A#1 = phi(mcol1A69,mcol1A5A)
          real _t1A6D#1 = λ(T0[],T1[])<(T0 * T1)> (transp1961,aa1A2F);
          real _t1A6F#1 = λ(T0[],T1[])<(T0 * T1)> (phKd195B,dcomp1A39);
          real _t1A71#1 = λ(T0[],T1[])<(T0 + T1)> (phKa195A,_t1A6F);
          tensor[3] _t1A73#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i0})>_{3} (dcol1A4E,mcol1A6A);
          tensor[3] _t1A75#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A71,_t1A73);
          real _t1A77#1 = λ(T0[],T1[])<(T0 * T1)> (phKs195C,scomp1A4B);
          tensor[3] _t1A81#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A77,mcol1A5A);
          tensor[3] _t1A83#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1A75,_t1A81);
          tensor[3] _t1A85#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A6D,_t1A83);
          tensor[3] rgb1A87#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1960,_t1A85);
          real _t1A8B#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A08,aa1A2F);
          real transp1A8D#2 = λ(T0[],T1[])<(T0 * T1)> (transp1961,_t1A8B);
          bool _t1A8F#1 = LT<real>(transp1A8D,transp0193D);
          if _t1A8F then goto SAVE1A96 else goto JOIN1A91
        SAVE1A96:  preds = [COND1A9A]
          self.rayN = rayN1972;
          self.rgb = rgb1A87;
          self.transp = _t1A06;
          stabilize
          goto JOIN1A91
        JOIN1A91:  preds = [*STABILIZE1A95,COND1A9A]
          real transp1A93#1 = phi(transp1A8D)
          self.rayN = rayN1972;
          self.rgb = rgb1A87;
          self.transp = transp1A93;
          active
        ASSIGN19CB:  preds = [COND19CC]
          bool _t19CA#1 = false;
          goto JOIN19C4
        ASSIGN19D1:  preds = [COND19D2]
          bool _t19D0#1 = false;
          goto JOIN19B5
        ASSIGN19D7:  preds = [COND19D8]
          bool _t19D6#1 = false;
          goto JOIN19AC
        ASSIGN19DD:  preds = [COND19DE]
          bool _t19DC#1 = false;
          goto JOIN198C
    end update
    method stabilize
        ENTRY1ADA:  preds = []
          real rayU1AA1#0 = self.rayU;
          real rayV1AA2#0 = self.rayV;
          real rayN1AA3#0 = self.rayN;
          tensor[3] UV1AA4#0 = self.UV;
          tensor[3] rayOrig1AA5#0 = self.rayOrig;
          tensor[3] rayVec1AA6#0 = self.rayVec;
          real alphaFix1AA7#0 = self.alphaFix;
          tensor[3] eyeDir1AA8#0 = self.eyeDir;
          real phKa1AA9#0 = self.phKa;
          real phKd1AAA#0 = self.phKd;
          real phKs1AAB#0 = self.phKs;
          real phSp1AAC#0 = self.phSp;
          tensor[4] rgba1AAD#1 = self.rgba;
          real raw1AAE#0 = self.raw;
          tensor[3] rgb1AAF#3 = self.rgb;
          real transp1AB0#2 = self.transp;
          real _t1AC1#2 = 0.1e1;
          bool _t1AC3#1 = LT<real>(transp1AB0,_t1AC1);
          if _t1AC3 then goto ASSIGN1B14 else goto JOIN1AC5
        ASSIGN1B14:  preds = [COND1AD9]
          real aa1AC8#4 = λ(T0[],T1[])<(T0) - (T1)> (_t1AC1,transp1AB0);
          real _t1ACA#1 = TensorIndex<tensor[3],[0]>(rgb1AAF);
          real _t1ACC#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ACA,aa1AC8);
          real _t1ACE#1 = TensorIndex<tensor[3],[1]>(rgb1AAF);
          real _t1AD0#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1ACE,aa1AC8);
          real _t1AD2#1 = TensorIndex<tensor[3],[2]>(rgb1AAF);
          real _t1AD4#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1AD2,aa1AC8);
          tensor[4] rgba1AD6#1 = <tensor[4]>[_t1ACC,_t1AD0,_t1AD4,aa1AC8];
          goto JOIN1AC5
        JOIN1AC5:  preds = [ASSIGN1AD8,COND1AD9]
          tensor[4] rgba1AD7#1 = phi(rgba1AD6,rgba1AAD)
          self.rgba = rgba1AD7;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY1870:  preds = []
      int iresU1856#1 = globals.iresU16FB;
      int iresV1855#1 = globals.iresV16FC;
      int _t1859#2 = 0;
      int _t185B#2 = 1;
      int _t185D#1 = ISub(iresV1855,_t185B);
      int[] _t185F#1 = Range(_t1859,_t185D);
    FOREACH1862:  preds = [ASSIGN1860,NEXT186F]
      foreach (vi1861 in _t185F) on exit goto RETURN1871
      int _t1867#1 = ISub(iresU1856,_t185B);
      int[] _t1869#1 = Range(_t1859,_t1867);
    FOREACH186C:  preds = [ASSIGN1AE1,NEXT186E]
      foreach (ui186B in _t1869) on exit goto NEXT186F
      new ray(ui186B,vi1861);
      goto FOREACH186C
    NEXT186F:  preds = [FOREACH186C]
      goto FOREACH1862
    RETURN1871:  preds = [FOREACH1862]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block16EF (block) = <no-default>
  input 0space04D7_intermedateGlobal16F0 (space) = <no-default>
  input 0U04D9_intermedateGlobal16F1 (U) = <no-default>
  input cellChoice16F2 (cellChoice) = <no-default>
  input cmap16F3 (cmap) = image("cmap.nrrd")
  input camEye16F4 (camEye) = <default>
  input camAt16F5 (camAt) = <default>
  input camUp16F6 (camUp) = <default>
  input camNear16F7 (camNear) = <default>
  input camFar16F8 (camFar) = <default>
  input camFOV16F9 (camFOV) = <default>
  input camOrtho16FA (camOrtho) = <default>
  input iresU16FB (iresU) = <default>
  input iresV16FC (iresV) = <default>
  input rayStep16FD (rayStep) = <default>
  input refStep16FE (refStep) = <default>
  input transp016FF (transp0) = <default>
  input thick1700 (thick) = <default>
  input fStrTh1701 (fStrTh) = <default>
  input fMaskTh1702 (fMaskTh) = <default>
  input fBias1703 (fBias) = <default>
  input maxAlpha1704 (maxAlpha) = <default>
  input light1705 (light) = <default>
  input phong1706 (phong) = <default>
  input mcNear1707 (mcNear) = <default>
  input mcFar1708 (mcFar) = <default>
  input litdir1709 (litdir) = <default>
  input cminmax170A (cminmax) = <default>
  global tensor[3] camN178B
  global tensor[3] camU178C
  global tensor[3] camV178D
  global real camDist178E
  global real camVmax178F
  global real camUmax1790
  global real camNearVsp1791
  global real camFarVsp1792
  global tensor[3] litwsp1793
## functions
  function int[2] nextCell417A5 (int faceIdx1794#1, int cell1795#1, femData:Mesh mesh1796#1) {
    ENTRY17A4:  preds = []
      int _t1797#1 = 12;
      int _t1799#1 = IMul(cell1795,_t1797);
      int _t179B#1 = 2;
      int _t179D#1 = IMul(faceIdx1794,_t179B);
      int _t179F#1 = IAdd(_t1799,_t179D);
      int[2] _t17A1#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1796,_t179F);
      return _t17A1
}
## input initialization
  ENTRY1780:  preds = []
    real _t170B#13 = 0.e0;
    real _t170D#1 = -0.2e1;
    tensor[3] camEye1711#1 = <tensor[3]>[_t170B,_t170D,_t170B];
    globals.camEye16F4 = camEye1711;
    tensor[3] camAt171A#1 = <tensor[3]>[_t170B,_t170B,_t170B];
    globals.camAt16F5 = camAt171A;
    real _t1721#5 = 0.1e1;
    tensor[3] camUp1723#1 = <tensor[3]>[_t170B,_t170B,_t1721];
    globals.camUp16F6 = camUp1723;
    real camNear1726#1 = -0.4e1;
    globals.camNear16F7 = camNear1726;
    real camFar1729#1 = 0.4e1;
    globals.camFar16F8 = camFar1729;
    real camFOV172C#1 = 0.1e2;
    globals.camFOV16F9 = camFOV172C;
    bool camOrtho172F#2 = false;
    globals.camOrtho16FA = camOrtho172F;
    int iresU1732#2 = 100;
    globals.iresU16FB = iresU1732;
    globals.iresV16FC = iresU1732;
    real rayStep1738#2 = 0.1e-3;
    globals.rayStep16FD = rayStep1738;
    globals.refStep16FE = rayStep1738;
    real transp0173E#1 = 0.5e-2;
    globals.transp016FF = transp0173E;
    real thick1741#1 = 0.1e-1;
    globals.thick1700 = thick1741;
    globals.fStrTh1701 = _t170B;
    globals.fMaskTh1702 = _t170B;
    real fBias174A#2 = 0.1e0;
    globals.fBias1703 = fBias174A;
    globals.maxAlpha1704 = _t1721;
    globals.light1705 = camOrtho172F;
    real _t1755#1 = 0.7e0;
    real _t1757#1 = 0.2e0;
    real _t1759#1 = 0.1e3;
    tensor[4] phong175B#1 = <tensor[4]>[fBias174A,_t1755,_t1757,_t1759];
    globals.phong1706 = phong175B;
    tensor[3] mcNear1764#2 = <tensor[3]>[_t1721,_t1721,_t1721];
    globals.mcNear1707 = mcNear1764;
    globals.mcFar1708 = mcNear1764;
    real _t1772#1 = -0.1e1;
    tensor[3] litdir1776#1 = <tensor[3]>[_t170B,_t1772,_t170B];
    globals.litdir1709 = litdir1776;
    tensor[2] cminmax177D#1 = <tensor[2]>[_t170B,_t170B];
    globals.cminmax170A = cminmax177D;
    return
## global-variable initialization
  ENTRY1853:  preds = []
    femData:Mesh block17B3#3 = globals.block16EF;
    femData:Space 0space04D7_intermedateGlobal17B2#1 = globals.0space04D7_intermedateGlobal16F0;
    femData:FemFunc 0U04D9_intermedateGlobal17B1#1 = globals.0U04D9_intermedateGlobal16F1;
    int cellChoice17B0#1 = globals.cellChoice16F2;
    image(IMAGE1D<double[3]>) cmap17AF#1 = globals.cmap16F3;
    tensor[3] camEye17AE#17 = globals.camEye16F4;
    tensor[3] camAt17AD#17 = globals.camAt16F5;
    tensor[3] camUp17AC#4 = globals.camUp16F6;
    real camNear17AB#1 = globals.camNear16F7;
    real camFar17AA#1 = globals.camFar16F8;
    real camFOV17A9#2 = globals.camFOV16F9;
    int iresU17A8#1 = globals.iresU16FB;
    int iresV17A7#1 = globals.iresV16FC;
    tensor[3] litdir17A6#2 = globals.litdir1709;
    int _t17C2#1 = 0;
    int _t17C4#1 = 1;
    int _t17C6#1 = ExtractFemItem<int,NumCell(Mesh)>(block17B3);
    int _t17C8#1 = ISub(_t17C6,_t17C4);
    int[] _t17CA#1 = Range(_t17C2,_t17C8);
    femData:MeshCell[] _t17CC#1 = <femData:MeshCell[]>{};
  FOREACH17D0:  preds = [ASSIGN17CD,NEXT17D5]
    foreach (_t17CE in _t17CA) on exit goto ASSIGN17DA
      femData:MeshCell[] _t17CF#2 = phi(_t17CC,_t17D3)
    femData:MeshCell _t17D1#1 = LoadFem<femData:MeshCell>(block17B3,_t17CE);
    femData:MeshCell[] _t17D3#1 = Append<femData:MeshCell>(_t17CF,_t17D1);
    goto FOREACH17D0
  ASSIGN17DA:  preds = [FOREACH17D0]
    femData:Space space17D9#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal17B2,block17B3);
    femData:FemFunc U17DC#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal17B1,space17D9);
    femData:MeshCell c117DF#1 = Subscript<femData:MeshCell[]>(_t17CF,cellChoice17B0);
    int _t17E3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DF);
    femData:FuncCell _t17E5#2 = LoadFem<femData:FuncCell>(U17DC,_t17E3);
    femData:FemFunc _t17E9#178 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17E5);
    femData:Space _t17F4#177 = ExtractFem<femData:Space,femData:FemFunc>(_t17E9);
    int _t17FD#177 = ExtractFemItem<int,CellIndex(FuncCell)>(_t17E5);
    kernel _t1812#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1814#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap17AF);
    tensor[3] camN181E#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt17AD,camEye17AE,camAt17AD,camEye17AE);
    globals.camN178B = camN181E;
    tensor[3] camU1823#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt17AD,camEye17AE,camAt17AD,camEye17AE,camUp17AC,camAt17AD,camEye17AE,camAt17AD,camEye17AE,camUp17AC);
    globals.camU178C = camU1823;
    tensor[3] camV1826#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * (T0_{i1}) - (T1_{i1}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T0_{i3}) - (T1_{i3}) * (T0_{i3}) - (T1_{i3})))>(i3=0..2))) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii2,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * (1) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2)))>(i4=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt17AD,camEye17AE,camAt17AD,camEye17AE,camAt17AD,camEye17AE,camAt17AD,camEye17AE,camUp17AC,camAt17AD,camEye17AE,camAt17AD,camEye17AE,camUp17AC);
    globals.camV178D = camV1826;
    real camDist182B#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt17AD,camEye17AE);
    globals.camDist178E = camDist182B;
    real _t182E#2 = 0.314159265358979323846264338327950288e1;
    real _t1832#2 = 0.36e3;
    real camVmax1838#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV17A9,_t182E,_t1832,camAt17AD,camEye17AE);
    globals.camVmax178F = camVmax1838;
    real _t183B#1 = IntToReal(iresU17A8);
    real _t183F#1 = IntToReal(iresV17A7);
    real camUmax1841#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV17A9,_t182E,_t1832,camAt17AD,camEye17AE,_t183B,_t183F);
    globals.camUmax1790 = camUmax1841;
    real camNearVsp1844#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear17AB,camAt17AD,camEye17AE);
    globals.camNearVsp1791 = camNearVsp1844;
    real camFarVsp1847#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar17AA,camAt17AD,camEye17AE);
    globals.camFarVsp1792 = camFarVsp1847;
    tensor[3,3] _t184A#1 = <tensor[3,3]>[camU1823,camV1826,camN181E];
    tensor[3] litwsp1850#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t184A,litdir17A6,litdir17A6);
    globals.litwsp1793 = litwsp1850;
    return
## strand
  strand ray (int ui1872#1, int vi1873#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY191C:  preds = []
        tensor[3] camEye1891#1 = globals.camEye16F4;
        bool camOrtho1890#2 = globals.camOrtho16FA;
        int iresU188F#1 = globals.iresU16FB;
        int iresV188E#1 = globals.iresV16FC;
        real rayStep188D#1 = globals.rayStep16FD;
        real refStep188C#1 = globals.refStep16FE;
        tensor[4] phong188B#4 = globals.phong1706;
        tensor[3] camN188A#4 = globals.camN178B;
        tensor[3] camU1889#2 = globals.camU178C;
        tensor[3] camV1888#2 = globals.camV178D;
        real camDist1887#1 = globals.camDist178E;
        real camVmax1886#6 = globals.camVmax178F;
        real camUmax1885#6 = globals.camUmax1790;
        real camNearVsp1884#1 = globals.camNearVsp1791;
        real _t18B2#6 = -0.5e0;
        real _t18B4#3 = IntToReal(ui1872);
        real _t18B6#3 = IntToReal(iresU188F);
        real _t18B8#6 = 0.5e0;
        real rayU18BC#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1885,camUmax1885,_t18B2,_t18B4,_t18B6,_t18B8);
        real _t18C2#3 = IntToReal(vi1873);
        real _t18C4#3 = IntToReal(iresV188E);
        real rayV18CA#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax1886,camVmax1886,_t18B2,_t18C2,_t18C4,_t18B8);
        tensor[3] UV18D2#2 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax1885,camUmax1885,_t18B2,_t18B4,_t18B6,_t18B8,camU1889,camVmax1886,camVmax1886,_t18B2,_t18C2,_t18C4,_t18B8,camV1888);
        if camOrtho1890 then goto JOIN18D5 else goto ASSIGN18DA
      JOIN18D5:  preds = [COND18E1,ASSIGN1AFB]
        tensor[3] _t18D7#1 = phi(UV18D2,_t18DF)
        tensor[3] rayOrig18E2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1891,_t18D7);
        if camOrtho1890 then goto ASSIGN18E7 else goto ASSIGN1B31
      ASSIGN18E7:  preds = [COND18F1]
        real _t18E6#3 = 0.e0;
        tensor[3] _t18EC#1 = <tensor[3]>[_t18E6,_t18E6,_t18E6];
        goto JOIN18E5
      JOIN18E5:  preds = [ASSIGN1AFC,ASSIGN1B31]
        tensor[3] _t18ED#4 = phi(_t18EC,_t18EF)
        tensor[3] rayVec18F2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN188A,_t18ED);
        real alphaFix18F8#1 = λ(T0[3],T1[3],T2[],T3[])<((T2 * Sqrt(Σ(i0=0..2)<(((T0_{i0} + T1_{i0}) * (T0_{i0} + T1_{i0})))>(i0=0..2)))) / ( T3)> (camN188A,_t18ED,rayStep188D,refStep188C);
        tensor[3] eyeDir18FC#1 = λ(T0[3],T1[3],T2[3],T3[3])<Neg(((T0_{i0} + T1_{i0}) * (1) / ( Sqrt(Σ(i2=0..2)<(((T0_{i2} + T1_{i2}) * (T0_{i2} + T1_{i2})))>(i2=0..2)))))>_{3} (camN188A,_t18ED,camN188A,_t18ED);
        real phKa18FE#1 = TensorIndex<tensor[4],[0]>(phong188B);
        real phKd1900#1 = TensorIndex<tensor[4],[1]>(phong188B);
        real phKs1902#1 = TensorIndex<tensor[4],[2]>(phong188B);
        real phSp1904#1 = TensorIndex<tensor[4],[3]>(phong188B);
        real _t1906#8 = 0.e0;
        tensor[4] rgba190E#1 = <tensor[4]>[_t1906,_t1906,_t1906,_t1906];
        tensor[3] rgb1918#1 = <tensor[3]>[_t1906,_t1906,_t1906];
        real transp191A#1 = 0.1e1;
        self.rayU = rayU18BC;
        self.rayV = rayV18CA;
        self.rayN = camNearVsp1884;
        self.UV = UV18D2;
        self.rayOrig = rayOrig18E2;
        self.rayVec = rayVec18F2;
        self.alphaFix = alphaFix18F8;
        self.eyeDir = eyeDir18FC;
        self.phKa = phKa18FE;
        self.phKd = phKd1900;
        self.phKs = phKs1902;
        self.phSp = phSp1904;
        self.rgba = rgba190E;
        self.raw = _t1906;
        self.rgb = rgb1918;
        self.transp = transp191A;
        return
      ASSIGN1B31:  preds = [COND18F1]
        tensor[3] _t18EF#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3],T14[])<((((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))) / ( T14)>_{3} (camUmax1885,camUmax1885,_t18B2,_t18B4,_t18B6,_t18B8,camU1889,camVmax1886,camVmax1886,_t18B2,_t18C2,_t18C4,_t18B8,camV1888,camDist1887);
        goto JOIN18E5
      ASSIGN18DA:  preds = [COND18E1]
        real _t18D9#3 = 0.e0;
        tensor[3] _t18DF#1 = <tensor[3]>[_t18D9,_t18D9,_t18D9];
        goto JOIN18D5
    end state init
    method update
        ENTRY1A9B:  preds = []
          femData:Mesh block193F#1 = globals.block16EF;
          real rayStep193E#4 = globals.rayStep16FD;
          real transp0193D#1 = globals.transp016FF;
          real thick193C#2 = globals.thick1700;
          real fStrTh193B#1 = globals.fStrTh1701;
          real fMaskTh193A#1 = globals.fMaskTh1702;
          real fBias1939#1 = globals.fBias1703;
          real maxAlpha1938#2 = globals.maxAlpha1704;
          tensor[3] mcNear1937#1 = globals.mcNear1707;
          tensor[3] mcFar1936#1 = globals.mcFar1708;
          tensor[2] cminmax1935#2 = globals.cminmax170A;
          real camNearVsp1930#1 = globals.camNearVsp1791;
          real camFarVsp192F#2 = globals.camFarVsp1792;
          tensor[3] litwsp192E#3 = globals.litwsp1793;
          real rayN1954#4 = self.rayN;
          tensor[3] rayOrig1956#2 = self.rayOrig;
          tensor[3] rayVec1957#2 = self.rayVec;
          real alphaFix1958#1 = self.alphaFix;
          tensor[3] eyeDir1959#2 = self.eyeDir;
          real phKa195A#1 = self.phKa;
          real phKd195B#1 = self.phKd;
          real phKs195C#2 = self.phKs;
          real phSp195D#1 = self.phSp;
          tensor[3] rgb1960#1 = self.rgb;
          real transp1961#2 = self.transp;
          real rayN1972#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1954,rayStep193E);
          bool _t1974#1 = GT<real>(rayN1972,camFarVsp192F);
          if _t1974 then goto SAVE1978 else goto JOIN1976
        SAVE1978:  preds = [COND197C]
          self.rayN = rayN1972;
          stabilize
          goto JOIN1976
        JOIN1976:  preds = [*STABILIZE1977,COND197C]
          tensor[3] pos197F#32 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig1956,rayN1954,rayStep193E,rayVec1957);
          femData:RefCell _t1984#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block193F);
          real _t1988#1 = 0.1e-8;
          bool _t198A#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1984,pos197F,_t1988);
          if _t198A then goto ASSIGN1B36 else goto ASSIGN19DD
        ASSIGN1B36:  preds = [COND19DE]
          tensor[3,3] _t1993#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t17FD,_t17F4,_t17E9,pos197F);
          (real[3] _t1995#1,tensor[3][3] evecs1996#0) = Eigen3x3(_t1993);
          int _t1998#1 = 1;
          real _t199A#1 = Subscript<real[3]>(_t1995,_t1998);
          real _t19A6#1 = λ(T0[],T1[],INT2,FEM(fns_t)3,FEM(func_t)4,T5[3])<(Neg(T0)) / ( (T1 + Sqrt(Σ(i0=0..2)<((Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5) * Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5)))>(i0=0..2))))> (_t199A,fBias1939,_t17FD,_t17F4,_t17E9,pos197F);
          bool _t19AA#1 = GT<real>(_t19A6,fStrTh193B);
          if _t19AA then goto ASSIGN19B0 else goto ASSIGN19D7
        ASSIGN19B0:  preds = [COND19D8]
          real _t19AF#1 = 0.1e1;
          bool _t19B3#1 = GTE<real>(_t19AF,fMaskTh193A);
          if _t19B3 then goto ASSIGN1B3D else goto ASSIGN19D1
        ASSIGN1B3D:  preds = [COND19D2]
          real _t19BC#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,INT3,FEM(fns_t)4,FEM(func_t)5,INT6,FEM(fns_t)7,FEM(func_t)8,INT9,FEM(fns_t)10,FEM(func_t)11,INT12,FEM(fns_t)13,FEM(func_t)14,INT15,FEM(fns_t)16,FEM(func_t)17,T18[3])<Sqrt(Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7},T18) * Σ(i8=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18)))>(i10=0..2) * Σ(i9=0..3)<((ϵ_{ii9,ii7,ii8} * δ_{i2,i9}))>(i9=0..3)))>(i8=0..2)))>(i7=0..2) * Σ(i3=0..2)(i4=0..2)<((((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18)))>(i6=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3},T18) * Σ(i6=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6,i0},T18))))>(i6=0..2))) * Σ(i5=0..3)<((ϵ_{ii5,ii3,ii4} * δ_{i2,i5}))>(i5=0..3)))>(i3=0..2)(i4=0..2)) + (Σ(i3=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3},T18) * Σ(i4=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18)))>(i6=0..2) * Σ(i5=0..3)<((ϵ_{ii5,ii3,ii4} * δ_{i2,i5}))>(i5=0..3)))>(i4=0..2)))>(i3=0..2) * Σ(i7=0..2)(i8=0..2)<((((Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18)))>(i10=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7},T18) * Σ(i10=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10,i0},T18))))>(i10=0..2))) * Σ(i9=0..3)<((ϵ_{ii9,ii7,ii8} * δ_{i2,i9}))>(i9=0..3)))>(i7=0..2)(i8=0..2))))>(i2=0..2) * Σ(i2=0..2)<(((Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7},T18) * Σ(i8=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18)))>(i10=0..2) * Σ(i9=0..3)<((ϵ_{ii9,ii7,ii8} * δ_{i2,i9}))>(i9=0..3)))>(i8=0..2)))>(i7=0..2) * Σ(i3=0..2)(i4=0..2)<((((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18)))>(i6=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3},T18) * Σ(i6=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6,i0},T18))))>(i6=0..2))) * Σ(i5=0..3)<((ϵ_{ii5,ii3,ii4} * δ_{i2,i5}))>(i5=0..3)))>(i3=0..2)(i4=0..2)) + (Σ(i3=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3},T18) * Σ(i4=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18)))>(i6=0..2) * Σ(i5=0..3)<((ϵ_{ii5,ii3,ii4} * δ_{i2,i5}))>(i5=0..3)))>(i4=0..2)))>(i3=0..2) * Σ(i7=0..2)(i8=0..2)<((((Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18)))>(i10=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7},T18) * Σ(i10=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10,i0},T18))))>(i10=0..2))) * Σ(i9=0..3)<((ϵ_{ii9,ii7,ii8} * δ_{i2,i9}))>(i9=0..3)))>(i7=0..2)(i8=0..2))))>(i2=0..2)))>(i0=0..2))> (_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F);
          real _t19BE#1 = 0.1e-7;
          bool _t19C0#1 = GT<real>(_t19BC,_t19BE);
          if _t19C0 then goto ASSIGN19C6 else goto ASSIGN19CB
        ASSIGN19C6:  preds = [COND19CC]
          bool _t19C5#1 = true;
          goto JOIN19C4
        JOIN19C4:  preds = [ASSIGN19C6,ASSIGN19CB]
          bool _t19C8#1 = phi(_t19C5,_t19CA)
          goto JOIN19B5
        JOIN19B5:  preds = [JOIN19C4,ASSIGN19D1]
          bool _t19CE#1 = phi(_t19C8,_t19D0)
          goto JOIN19AC
        JOIN19AC:  preds = [JOIN19B5,ASSIGN19D7]
          bool _t19D4#1 = phi(_t19CE,_t19D6)
          goto JOIN198C
        JOIN198C:  preds = [JOIN19AC,ASSIGN19DD]
          bool _t19DA#1 = phi(_t19D4,_t19DC)
          bool _t19E1#1 = BNot(_t19DA);
          if _t19E1 then goto SAVE19E5 else goto JOIN19E3
        SAVE19E5:  preds = [COND19E9]
          self.rayN = rayN1972;
          active
          goto JOIN19E3
        JOIN19E3:  preds = [*ACTIVE19E4,COND19E9]
          real _t1A06#7 = 0.e0;
          real _t1A08#12 = 0.1e1;
          real _t1A0A#2 = 0.15e1;
          real _t1A18#1 = λ(T0[],T1[],T2[],T3[],T4[],INT5,FEM(fns_t)6,FEM(func_t)7,INT8,FEM(fns_t)9,FEM(func_t)10,INT11,FEM(fns_t)12,FEM(func_t)13,INT14,FEM(fns_t)15,FEM(func_t)16,INT17,FEM(fns_t)18,FEM(func_t)19,INT20,FEM(fns_t)21,FEM(func_t)22,T23[3],INT24,FEM(fns_t)25,FEM(func_t)26,INT27,FEM(fns_t)28,FEM(func_t)29,INT30,FEM(fns_t)31,FEM(func_t)32,INT33,FEM(fns_t)34,FEM(func_t)35,INT36,FEM(fns_t)37,FEM(func_t)38,INT39,FEM(fns_t)40,FEM(func_t)41,T42[3],INT43,FEM(fns_t)44,FEM(func_t)45,INT46,FEM(fns_t)47,FEM(func_t)48,INT49,FEM(fns_t)50,FEM(func_t)51,INT52,FEM(fns_t)53,FEM(func_t)54,INT55,FEM(fns_t)56,FEM(func_t)57,INT58,FEM(fns_t)59,FEM(func_t)60,T61[3],INT62,FEM(fns_t)63,FEM(func_t)64,INT65,FEM(fns_t)66,FEM(func_t)67,INT68,FEM(fns_t)69,FEM(func_t)70,INT71,FEM(fns_t)72,FEM(func_t)73,INT74,FEM(fns_t)75,FEM(func_t)76,INT77,FEM(fns_t)78,FEM(func_t)79,T80[3],T81[])<(T0 * Clamp <T1,T2,(T3 * (T2) - ((Abs(Sqrt(Σ(i0=0..2)<((Neg(((Σ(i3=0..2)<((Σ(i4=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i4},T23) * Σ(i5=0..2)<((Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i5,i7},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i7},T23)))>(i7=0..2) * Σ(i6=0..3)<((ϵ_{ii6,ii4,ii5} * δ_{i3,i6}))>(i6=0..3)))>(i5=0..2)))>(i4=0..2) * Σ(i8=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i8},T23) * Σ(i9=0..2)<((Σ(i11=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i9,i11},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i11},T23)))>(i11=0..2) * Σ(i10=0..3)<((ϵ_{ii10,ii8,ii9} * δ_{i3,i10}))>(i10=0..3)))>(i9=0..2)))>(i8=0..2)))>(i3=0..2) * Σ(i12=0..2)<(((Σ(i17=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17},T23) * Σ(i18=0..2)<((Σ(i20=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23)))>(i20=0..2) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i18=0..2)))>(i17=0..2) * Σ(i13=0..2)(i14=0..2)<((((Σ(i16=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23)))>(i16=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13},T23) * Σ(i16=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16,i0},T23))))>(i16=0..2))) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i13=0..2)(i14=0..2)) + (Σ(i13=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13},T23) * Σ(i14=0..2)<((Σ(i16=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23)))>(i16=0..2) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i14=0..2)))>(i13=0..2) * Σ(i17=0..2)(i18=0..2)<((((Σ(i20=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23)))>(i20=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17},T23) * Σ(i20=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20,i0},T23))))>(i20=0..2))) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i17=0..2)(i18=0..2))))>(i12=0..2))) / ( Σ(i19=0..2)<((Σ(i21=0..2)<(((Σ(i26=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26},T23) * Σ(i27=0..2)<((Σ(i29=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23)))>(i29=0..2) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i27=0..2)))>(i26=0..2) * Σ(i22=0..2)(i23=0..2)<((((Σ(i25=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23)))>(i25=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22},T23) * Σ(i25=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25,i19},T23))))>(i25=0..2))) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i22=0..2)(i23=0..2)) + (Σ(i22=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22},T23) * Σ(i23=0..2)<((Σ(i25=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23)))>(i25=0..2) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i23=0..2)))>(i22=0..2) * Σ(i26=0..2)(i27=0..2)<((((Σ(i29=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23)))>(i29=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26},T23) * Σ(i29=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29,i19},T23))))>(i29=0..2))) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i26=0..2)(i27=0..2))))>(i21=0..2) * Σ(i30=0..2)<(((Σ(i35=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35},T23) * Σ(i36=0..2)<((Σ(i38=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23)))>(i38=0..2) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i36=0..2)))>(i35=0..2) * Σ(i31=0..2)(i32=0..2)<((((Σ(i34=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23)))>(i34=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31},T23) * Σ(i34=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34,i19},T23))))>(i34=0..2))) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i31=0..2)(i32=0..2)) + (Σ(i31=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31},T23) * Σ(i32=0..2)<((Σ(i34=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23)))>(i34=0..2) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i32=0..2)))>(i31=0..2) * Σ(i35=0..2)(i36=0..2)<((((Σ(i38=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23)))>(i38=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35},T23) * Σ(i38=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38,i19},T23))))>(i38=0..2))) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i35=0..2)(i36=0..2))))>(i30=0..2)))>(i19=0..2))) * Neg(((Σ(i3=0..2)<((Σ(i4=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i4},T23) * Σ(i5=0..2)<((Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i5,i7},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i7},T23)))>(i7=0..2) * Σ(i6=0..3)<((ϵ_{ii6,ii4,ii5} * δ_{i3,i6}))>(i6=0..3)))>(i5=0..2)))>(i4=0..2) * Σ(i8=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i8},T23) * Σ(i9=0..2)<((Σ(i11=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i9,i11},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i11},T23)))>(i11=0..2) * Σ(i10=0..3)<((ϵ_{ii10,ii8,ii9} * δ_{i3,i10}))>(i10=0..3)))>(i9=0..2)))>(i8=0..2)))>(i3=0..2) * Σ(i12=0..2)<(((Σ(i17=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17},T23) * Σ(i18=0..2)<((Σ(i20=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23)))>(i20=0..2) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i18=0..2)))>(i17=0..2) * Σ(i13=0..2)(i14=0..2)<((((Σ(i16=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23)))>(i16=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13},T23) * Σ(i16=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16,i0},T23))))>(i16=0..2))) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i13=0..2)(i14=0..2)) + (Σ(i13=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13},T23) * Σ(i14=0..2)<((Σ(i16=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23)))>(i16=0..2) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i14=0..2)))>(i13=0..2) * Σ(i17=0..2)(i18=0..2)<((((Σ(i20=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23)))>(i20=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17},T23) * Σ(i20=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20,i0},T23))))>(i20=0..2))) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i17=0..2)(i18=0..2))))>(i12=0..2))) / ( Σ(i19=0..2)<((Σ(i21=0..2)<(((Σ(i26=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26},T23) * Σ(i27=0..2)<((Σ(i29=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23)))>(i29=0..2) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i27=0..2)))>(i26=0..2) * Σ(i22=0..2)(i23=0..2)<((((Σ(i25=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23)))>(i25=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22},T23) * Σ(i25=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25,i19},T23))))>(i25=0..2))) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i22=0..2)(i23=0..2)) + (Σ(i22=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22},T23) * Σ(i23=0..2)<((Σ(i25=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23)))>(i25=0..2) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i23=0..2)))>(i22=0..2) * Σ(i26=0..2)(i27=0..2)<((((Σ(i29=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23)))>(i29=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26},T23) * Σ(i29=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29,i19},T23))))>(i29=0..2))) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i26=0..2)(i27=0..2))))>(i21=0..2) * Σ(i30=0..2)<(((Σ(i35=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35},T23) * Σ(i36=0..2)<((Σ(i38=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23)))>(i38=0..2) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i36=0..2)))>(i35=0..2) * Σ(i31=0..2)(i32=0..2)<((((Σ(i34=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23)))>(i34=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31},T23) * Σ(i34=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34,i19},T23))))>(i34=0..2))) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i31=0..2)(i32=0..2)) + (Σ(i31=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31},T23) * Σ(i32=0..2)<((Σ(i34=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23)))>(i34=0..2) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i32=0..2)))>(i31=0..2) * Σ(i35=0..2)(i36=0..2)<((((Σ(i38=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23)))>(i38=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35},T23) * Σ(i38=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38,i19},T23))))>(i38=0..2))) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i35=0..2)(i36=0..2))))>(i30=0..2)))>(i19=0..2)))))>(i0=0..2)))) / ( T81)))>)> (maxAlpha1938,_t1A06,_t1A08,_t1A0A,_t1A08,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,thick193C);
          bool _t1A1E#1 = EQ<real>(_t1A18,_t1A06);
          if _t1A1E then goto SAVE1A22 else goto JOIN1A20
        SAVE1A22:  preds = [COND1A26]
          self.rayN = rayN1972;
          active
          goto JOIN1A20
        JOIN1A20:  preds = [*ACTIVE1A21,COND1A26]
          real _t1A2B#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,INT9,FEM(fns_t)10,FEM(func_t)11,INT12,FEM(fns_t)13,FEM(func_t)14,INT15,FEM(fns_t)16,FEM(func_t)17,INT18,FEM(fns_t)19,FEM(func_t)20,INT21,FEM(fns_t)22,FEM(func_t)23,T24[3],INT25,FEM(fns_t)26,FEM(func_t)27,INT28,FEM(fns_t)29,FEM(func_t)30,INT31,FEM(fns_t)32,FEM(func_t)33,INT34,FEM(fns_t)35,FEM(func_t)36,INT37,FEM(fns_t)38,FEM(func_t)39,INT40,FEM(fns_t)41,FEM(func_t)42,T43[3],INT44,FEM(fns_t)45,FEM(func_t)46,INT47,FEM(fns_t)48,FEM(func_t)49,INT50,FEM(fns_t)51,FEM(func_t)52,INT53,FEM(fns_t)54,FEM(func_t)55,INT56,FEM(fns_t)57,FEM(func_t)58,INT59,FEM(fns_t)60,FEM(func_t)61,T62[3],INT63,FEM(fns_t)64,FEM(func_t)65,INT66,FEM(fns_t)67,FEM(func_t)68,INT69,FEM(fns_t)70,FEM(func_t)71,INT72,FEM(fns_t)73,FEM(func_t)74,INT75,FEM(fns_t)76,FEM(func_t)77,INT78,FEM(fns_t)79,FEM(func_t)80,T81[3],T82[])<(T0) - ((T1 * Clamp <T2,T0,(T4 * (T0) - ((Abs(Sqrt(Σ(i0=0..2)<((Neg(((Σ(i3=0..2)<((Σ(i4=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i4},T24) * Σ(i5=0..2)<((Σ(i7=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i5,i7},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i7},T24)))>(i7=0..2) * Σ(i6=0..3)<((ϵ_{ii6,ii4,ii5} * δ_{i3,i6}))>(i6=0..3)))>(i5=0..2)))>(i4=0..2) * Σ(i8=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i8},T24) * Σ(i9=0..2)<((Σ(i11=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i9,i11},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11},T24)))>(i11=0..2) * Σ(i10=0..3)<((ϵ_{ii10,ii8,ii9} * δ_{i3,i10}))>(i10=0..3)))>(i9=0..2)))>(i8=0..2)))>(i3=0..2) * Σ(i12=0..2)<(((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24) * Σ(i18=0..2)<((Σ(i20=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24)))>(i20=0..2) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i18=0..2)))>(i17=0..2) * Σ(i13=0..2)(i14=0..2)<((((Σ(i16=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24)))>(i16=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24) * Σ(i16=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16,i0},T24))))>(i16=0..2))) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i13=0..2)(i14=0..2)) + (Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24) * Σ(i14=0..2)<((Σ(i16=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24)))>(i16=0..2) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i14=0..2)))>(i13=0..2) * Σ(i17=0..2)(i18=0..2)<((((Σ(i20=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24)))>(i20=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24) * Σ(i20=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i0},T24))))>(i20=0..2))) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i17=0..2)(i18=0..2))))>(i12=0..2))) / ( Σ(i19=0..2)<((Σ(i21=0..2)<(((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Σ(i27=0..2)<((Σ(i29=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24)))>(i29=0..2) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i27=0..2)))>(i26=0..2) * Σ(i22=0..2)(i23=0..2)<((((Σ(i25=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24)))>(i25=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Σ(i25=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25,i19},T24))))>(i25=0..2))) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i22=0..2)(i23=0..2)) + (Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Σ(i23=0..2)<((Σ(i25=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24)))>(i25=0..2) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i23=0..2)))>(i22=0..2) * Σ(i26=0..2)(i27=0..2)<((((Σ(i29=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24)))>(i29=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Σ(i29=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i19},T24))))>(i29=0..2))) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i26=0..2)(i27=0..2))))>(i21=0..2) * Σ(i30=0..2)<(((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Σ(i36=0..2)<((Σ(i38=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24)))>(i38=0..2) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i36=0..2)))>(i35=0..2) * Σ(i31=0..2)(i32=0..2)<((((Σ(i34=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24)))>(i34=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Σ(i34=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34,i19},T24))))>(i34=0..2))) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i31=0..2)(i32=0..2)) + (Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Σ(i32=0..2)<((Σ(i34=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24)))>(i34=0..2) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i32=0..2)))>(i31=0..2) * Σ(i35=0..2)(i36=0..2)<((((Σ(i38=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24)))>(i38=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Σ(i38=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i19},T24))))>(i38=0..2))) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i35=0..2)(i36=0..2))))>(i30=0..2)))>(i19=0..2))) * Neg(((Σ(i3=0..2)<((Σ(i4=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i4},T24) * Σ(i5=0..2)<((Σ(i7=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i5,i7},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i7},T24)))>(i7=0..2) * Σ(i6=0..3)<((ϵ_{ii6,ii4,ii5} * δ_{i3,i6}))>(i6=0..3)))>(i5=0..2)))>(i4=0..2) * Σ(i8=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i8},T24) * Σ(i9=0..2)<((Σ(i11=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i9,i11},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11},T24)))>(i11=0..2) * Σ(i10=0..3)<((ϵ_{ii10,ii8,ii9} * δ_{i3,i10}))>(i10=0..3)))>(i9=0..2)))>(i8=0..2)))>(i3=0..2) * Σ(i12=0..2)<(((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24) * Σ(i18=0..2)<((Σ(i20=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24)))>(i20=0..2) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i18=0..2)))>(i17=0..2) * Σ(i13=0..2)(i14=0..2)<((((Σ(i16=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24)))>(i16=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24) * Σ(i16=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16,i0},T24))))>(i16=0..2))) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i13=0..2)(i14=0..2)) + (Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24) * Σ(i14=0..2)<((Σ(i16=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24)))>(i16=0..2) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i14=0..2)))>(i13=0..2) * Σ(i17=0..2)(i18=0..2)<((((Σ(i20=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24)))>(i20=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24) * Σ(i20=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i0},T24))))>(i20=0..2))) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i17=0..2)(i18=0..2))))>(i12=0..2))) / ( Σ(i19=0..2)<((Σ(i21=0..2)<(((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Σ(i27=0..2)<((Σ(i29=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24)))>(i29=0..2) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i27=0..2)))>(i26=0..2) * Σ(i22=0..2)(i23=0..2)<((((Σ(i25=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24)))>(i25=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Σ(i25=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25,i19},T24))))>(i25=0..2))) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i22=0..2)(i23=0..2)) + (Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Σ(i23=0..2)<((Σ(i25=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24)))>(i25=0..2) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i23=0..2)))>(i22=0..2) * Σ(i26=0..2)(i27=0..2)<((((Σ(i29=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24)))>(i29=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Σ(i29=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i19},T24))))>(i29=0..2))) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i26=0..2)(i27=0..2))))>(i21=0..2) * Σ(i30=0..2)<(((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Σ(i36=0..2)<((Σ(i38=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24)))>(i38=0..2) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i36=0..2)))>(i35=0..2) * Σ(i31=0..2)(i32=0..2)<((((Σ(i34=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24)))>(i34=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Σ(i34=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34,i19},T24))))>(i34=0..2))) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i31=0..2)(i32=0..2)) + (Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Σ(i32=0..2)<((Σ(i34=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24)))>(i34=0..2) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i32=0..2)))>(i31=0..2) * Σ(i35=0..2)(i36=0..2)<((((Σ(i38=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24)))>(i38=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Σ(i38=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i19},T24))))>(i38=0..2))) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i35=0..2)(i36=0..2))))>(i30=0..2)))>(i19=0..2)))))>(i0=0..2)))) / ( T82)))>))> (_t1A08,maxAlpha1938,_t1A06,_t1A08,_t1A0A,_t1A08,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,thick193C);
          real _t1A2D#2 = MathFn<pow>(_t1A2B,alphaFix1958);
          bool _t1A3F#1 = NEQ<real>(phKs195C,_t1A06);
          if _t1A3F then goto ASSIGN1B53 else goto JOIN1A41
        ASSIGN1B53:  preds = [COND1A4D]
          real _t1A48#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,INT3,FEM(fns_t)4,FEM(func_t)5,INT6,FEM(fns_t)7,FEM(func_t)8,INT9,FEM(fns_t)10,FEM(func_t)11,INT12,FEM(fns_t)13,FEM(func_t)14,INT15,FEM(fns_t)16,FEM(func_t)17,T18[3],INT19,FEM(fns_t)20,FEM(func_t)21,INT22,FEM(fns_t)23,FEM(func_t)24,INT25,FEM(fns_t)26,FEM(func_t)27,INT28,FEM(fns_t)29,FEM(func_t)30,INT31,FEM(fns_t)32,FEM(func_t)33,INT34,FEM(fns_t)35,FEM(func_t)36,T37[3],INT38,FEM(fns_t)39,FEM(func_t)40,INT41,FEM(fns_t)42,FEM(func_t)43,INT44,FEM(fns_t)45,FEM(func_t)46,INT47,FEM(fns_t)48,FEM(func_t)49,INT50,FEM(fns_t)51,FEM(func_t)52,INT53,FEM(fns_t)54,FEM(func_t)55,T56[3],INT57,FEM(fns_t)58,FEM(func_t)59,INT60,FEM(fns_t)61,FEM(func_t)62,INT63,FEM(fns_t)64,FEM(func_t)65,INT66,FEM(fns_t)67,FEM(func_t)68,INT69,FEM(fns_t)70,FEM(func_t)71,INT72,FEM(fns_t)73,FEM(func_t)74,T75[3],INT76,FEM(fns_t)77,FEM(func_t)78,INT79,FEM(fns_t)80,FEM(func_t)81,INT82,FEM(fns_t)83,FEM(func_t)84,INT85,FEM(fns_t)86,FEM(func_t)87,INT88,FEM(fns_t)89,FEM(func_t)90,INT91,FEM(fns_t)92,FEM(func_t)93,T94[3],INT95,FEM(fns_t)96,FEM(func_t)97,INT98,FEM(fns_t)99,FEM(func_t)100,INT101,FEM(fns_t)102,FEM(func_t)103,INT104,FEM(fns_t)105,FEM(func_t)106,INT107,FEM(fns_t)108,FEM(func_t)109,INT110,FEM(fns_t)111,FEM(func_t)112,T113[3],INT114,FEM(fns_t)115,FEM(func_t)116,INT117,FEM(fns_t)118,FEM(func_t)119,INT120,FEM(fns_t)121,FEM(func_t)122,INT123,FEM(fns_t)124,FEM(func_t)125,INT126,FEM(fns_t)127,FEM(func_t)128,INT129,FEM(fns_t)130,FEM(func_t)131,T132[3],INT133,FEM(fns_t)134,FEM(func_t)135,INT136,FEM(fns_t)137,FEM(func_t)138,INT139,FEM(fns_t)140,FEM(func_t)141,INT142,FEM(fns_t)143,FEM(func_t)144,INT145,FEM(fns_t)146,FEM(func_t)147,INT148,FEM(fns_t)149,FEM(func_t)150,T151[3],T152[3],T153[3],T154[3],T155[3])<Abs(Σ(i0=0..2)<((Neg((Neg(((Σ(i5=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Σ(i7=0..2)<((Σ(i9=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i9},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i9},T18)))>(i9=0..2) * Σ(i8=0..3)<((ϵ_{ii8,ii6,ii7} * δ_{i5,i8}))>(i8=0..3)))>(i7=0..2)))>(i6=0..2) * Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i11,i13},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i13},T18)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i5,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2)))>(i5=0..2) * Σ(i14=0..2)<(((Σ(i19=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i15=0..2)(i16=0..2)<((((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i18=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18,i0},T18))))>(i18=0..2))) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i15=0..2)(i16=0..2)) + (Σ(i15=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i16=0..2)<((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i16=0..2)))>(i15=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i22=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22,i0},T18))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2))))>(i14=0..2))) / ( Σ(i21=0..2)<((Σ(i23=0..2)<(((Σ(i28=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i24=0..2)(i25=0..2)<((((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i27=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27,i21},T18))))>(i27=0..2))) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i24=0..2)(i25=0..2)) + (Σ(i24=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i25=0..2)<((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i25=0..2)))>(i24=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i31=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31,i21},T18))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2))))>(i23=0..2) * Σ(i32=0..2)<(((Σ(i37=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i33=0..2)(i34=0..2)<((((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i36=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36,i21},T18))))>(i36=0..2))) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i33=0..2)(i34=0..2)) + (Σ(i33=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i34=0..2)<((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i34=0..2)))>(i33=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i40=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40,i21},T18))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2))))>(i32=0..2)))>(i21=0..2))) * (1) / ( Sqrt(Σ(i2=0..2)<((Neg(((Σ(i5=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Σ(i7=0..2)<((Σ(i9=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i9},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i9},T18)))>(i9=0..2) * Σ(i8=0..3)<((ϵ_{ii8,ii6,ii7} * δ_{i5,i8}))>(i8=0..3)))>(i7=0..2)))>(i6=0..2) * Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i11,i13},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i13},T18)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i5,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2)))>(i5=0..2) * Σ(i14=0..2)<(((Σ(i19=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i15=0..2)(i16=0..2)<((((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i18=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18,i2},T18))))>(i18=0..2))) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i15=0..2)(i16=0..2)) + (Σ(i15=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i16=0..2)<((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i16=0..2)))>(i15=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i22=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22,i2},T18))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2))))>(i14=0..2))) / ( Σ(i21=0..2)<((Σ(i23=0..2)<(((Σ(i28=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i24=0..2)(i25=0..2)<((((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i27=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27,i21},T18))))>(i27=0..2))) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i24=0..2)(i25=0..2)) + (Σ(i24=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i25=0..2)<((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i25=0..2)))>(i24=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i31=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31,i21},T18))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2))))>(i23=0..2) * Σ(i32=0..2)<(((Σ(i37=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i33=0..2)(i34=0..2)<((((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i36=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36,i21},T18))))>(i36=0..2))) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i33=0..2)(i34=0..2)) + (Σ(i33=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i34=0..2)<((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i34=0..2)))>(i33=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i40=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40,i21},T18))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2))))>(i32=0..2)))>(i21=0..2))) * Neg(((Σ(i5=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Σ(i7=0..2)<((Σ(i9=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i9},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i9},T18)))>(i9=0..2) * Σ(i8=0..3)<((ϵ_{ii8,ii6,ii7} * δ_{i5,i8}))>(i8=0..3)))>(i7=0..2)))>(i6=0..2) * Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i11,i13},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i13},T18)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i5,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2)))>(i5=0..2) * Σ(i14=0..2)<(((Σ(i19=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i15=0..2)(i16=0..2)<((((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i18=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18,i2},T18))))>(i18=0..2))) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i15=0..2)(i16=0..2)) + (Σ(i15=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i16=0..2)<((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i16=0..2)))>(i15=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i22=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22,i2},T18))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2))))>(i14=0..2))) / ( Σ(i21=0..2)<((Σ(i23=0..2)<(((Σ(i28=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i24=0..2)(i25=0..2)<((((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i27=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27,i21},T18))))>(i27=0..2))) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i24=0..2)(i25=0..2)) + (Σ(i24=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i25=0..2)<((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i25=0..2)))>(i24=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i31=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31,i21},T18))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2))))>(i23=0..2) * Σ(i32=0..2)<(((Σ(i37=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i33=0..2)(i34=0..2)<((((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i36=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36,i21},T18))))>(i36=0..2))) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i33=0..2)(i34=0..2)) + (Σ(i33=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i34=0..2)<((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i34=0..2)))>(i33=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i40=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40,i21},T18))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2))))>(i32=0..2)))>(i21=0..2)))))>(i2=0..2))))) * (T152_{i0} + T153_{i0}) * (1) / ( Sqrt(Σ(i40=0..2)<(((T152_{i40} + T153_{i40}) * (T152_{i40} + T153_{i40})))>(i40=0..2)))))>(i0=0..2))> (_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,eyeDir1959,litwsp192E,eyeDir1959,litwsp192E);
          real scomp1A4A#1 = MathFn<pow>(_t1A48,phSp195D);
          goto JOIN1A41
        JOIN1A41:  preds = [ASSIGN1A4C,COND1A4D]
          real scomp1A4B#1 = phi(scomp1A4A,_t1A06)
          real cmin1A50#2 = TensorIndex<tensor[2],[0]>(cminmax1935);
          real cmax1A52#2 = TensorIndex<tensor[2],[1]>(cminmax1935);
          tensor[3] mcol1A5A#2 = <tensor[3]>[_t1A08,_t1A08,_t1A08];
          bool _t1A5C#1 = NEQ<real>(cmin1A50,cmax1A52);
          if _t1A5C then goto ASSIGN1B55 else goto JOIN1A5E
        ASSIGN1B55:  preds = [COND1A6C]
          tensor[3] _t1A63#1 = λ(T0[3],T1[],T2[],T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,INT7,FEM(fns_t)8,FEM(func_t)9,INT10,FEM(fns_t)11,FEM(func_t)12,INT13,FEM(fns_t)14,FEM(func_t)15,INT16,FEM(fns_t)17,FEM(func_t)18,INT19,FEM(fns_t)20,FEM(func_t)21,T22[3],INT23,FEM(fns_t)24,FEM(func_t)25,INT26,FEM(fns_t)27,FEM(func_t)28,INT29,FEM(fns_t)30,FEM(func_t)31,INT32,FEM(fns_t)33,FEM(func_t)34,INT35,FEM(fns_t)36,FEM(func_t)37,INT38,FEM(fns_t)39,FEM(func_t)40,T41[3],INT42,FEM(fns_t)43,FEM(func_t)44,INT45,FEM(fns_t)46,FEM(func_t)47,INT48,FEM(fns_t)49,FEM(func_t)50,INT51,FEM(fns_t)52,FEM(func_t)53,INT54,FEM(fns_t)55,FEM(func_t)56,INT57,FEM(fns_t)58,FEM(func_t)59,T60[3],INT61,FEM(fns_t)62,FEM(func_t)63,INT64,FEM(fns_t)65,FEM(func_t)66,INT67,FEM(fns_t)68,FEM(func_t)69,INT70,FEM(fns_t)71,FEM(func_t)72,INT73,FEM(fns_t)74,FEM(func_t)75,INT76,FEM(fns_t)77,FEM(func_t)78,T79[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}) + Neg(((Σ(i4=0..2)<((Σ(i5=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i5},T22) * Σ(i6=0..2)<((Σ(i8=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i6,i8},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i8},T22)))>(i8=0..2) * Σ(i7=0..3)<((ϵ_{ii7,ii5,ii6} * δ_{i4,i7}))>(i7=0..3)))>(i6=0..2)))>(i5=0..2) * Σ(i9=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i9},T22) * Σ(i10=0..2)<((Σ(i12=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i10,i12},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i12},T22)))>(i12=0..2) * Σ(i11=0..3)<((ϵ_{ii11,ii9,ii10} * δ_{i4,i11}))>(i11=0..3)))>(i10=0..2)))>(i9=0..2)))>(i4=0..2) * Σ(i13=0..2)<(((Σ(i18=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i18},T22) * Σ(i19=0..2)<((Σ(i21=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i19,i21},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i21},T22)))>(i21=0..2) * Σ(i20=0..3)<((ϵ_{ii20,ii18,ii19} * δ_{i13,i20}))>(i20=0..3)))>(i19=0..2)))>(i18=0..2) * Σ(i14=0..2)(i15=0..2)<((((Σ(i17=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i15,i17},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i17},T22)))>(i17=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i14,i0},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i14},T22) * Σ(i17=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i17},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i15,i17,i0},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i15,i17},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i17,i0},T22))))>(i17=0..2))) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i13,i16}))>(i16=0..3)))>(i14=0..2)(i15=0..2)) + (Σ(i14=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i14},T22) * Σ(i15=0..2)<((Σ(i17=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i15,i17},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i17},T22)))>(i17=0..2) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i13,i16}))>(i16=0..3)))>(i15=0..2)))>(i14=0..2) * Σ(i18=0..2)(i19=0..2)<((((Σ(i21=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i19,i21},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i21},T22)))>(i21=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i18,i0},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i18},T22) * Σ(i21=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i21},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i19,i21,i0},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i19,i21},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i21,i0},T22))))>(i21=0..2))) * Σ(i20=0..3)<((ϵ_{ii20,ii18,ii19} * δ_{i13,i20}))>(i20=0..3)))>(i18=0..2)(i19=0..2))))>(i13=0..2))) / ( Σ(i20=0..2)<((Σ(i22=0..2)<(((Σ(i27=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i27},T22) * Σ(i28=0..2)<((Σ(i30=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i28,i30},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i30},T22)))>(i30=0..2) * Σ(i29=0..3)<((ϵ_{ii29,ii27,ii28} * δ_{i22,i29}))>(i29=0..3)))>(i28=0..2)))>(i27=0..2) * Σ(i23=0..2)(i24=0..2)<((((Σ(i26=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i24,i26},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i26},T22)))>(i26=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i23,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i23},T22) * Σ(i26=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i26},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i24,i26,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i24,i26},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i26,i20},T22))))>(i26=0..2))) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i22,i25}))>(i25=0..3)))>(i23=0..2)(i24=0..2)) + (Σ(i23=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i23},T22) * Σ(i24=0..2)<((Σ(i26=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i24,i26},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i26},T22)))>(i26=0..2) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i22,i25}))>(i25=0..3)))>(i24=0..2)))>(i23=0..2) * Σ(i27=0..2)(i28=0..2)<((((Σ(i30=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i28,i30},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i30},T22)))>(i30=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i27,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i27},T22) * Σ(i30=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i30},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i28,i30,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i28,i30},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i30,i20},T22))))>(i30=0..2))) * Σ(i29=0..3)<((ϵ_{ii29,ii27,ii28} * δ_{i22,i29}))>(i29=0..3)))>(i27=0..2)(i28=0..2))))>(i22=0..2) * Σ(i31=0..2)<(((Σ(i36=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i36},T22) * Σ(i37=0..2)<((Σ(i39=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i37,i39},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i39},T22)))>(i39=0..2) * Σ(i38=0..3)<((ϵ_{ii38,ii36,ii37} * δ_{i31,i38}))>(i38=0..3)))>(i37=0..2)))>(i36=0..2) * Σ(i32=0..2)(i33=0..2)<((((Σ(i35=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i33,i35},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i35},T22)))>(i35=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i32,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i32},T22) * Σ(i35=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i35},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i33,i35,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i33,i35},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i35,i20},T22))))>(i35=0..2))) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i31,i34}))>(i34=0..3)))>(i32=0..2)(i33=0..2)) + (Σ(i32=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i32},T22) * Σ(i33=0..2)<((Σ(i35=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i33,i35},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i35},T22)))>(i35=0..2) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i31,i34}))>(i34=0..3)))>(i33=0..2)))>(i32=0..2) * Σ(i36=0..2)(i37=0..2)<((((Σ(i39=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i37,i39},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i39},T22)))>(i39=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i36,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i36},T22) * Σ(i39=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i39},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i37,i39,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i37,i39},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i39,i20},T22))))>(i39=0..2))) * Σ(i38=0..3)<((ϵ_{ii38,ii36,ii37} * δ_{i31,i38}))>(i38=0..3)))>(i36=0..2)(i37=0..2))))>(i31=0..2)))>(i20=0..2))))>_{3} (rayOrig1956,rayN1954,rayStep193E,rayVec1957,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F);
          real _t1A67#1 = λ(T0[],T1[],T2[],INT3,FEM(fns_t)4,FEM(func_t)5,T6[3],T7[])<(T0 + (((Probe(femV(noFunc, 3, 4, 5)⊛Basis(),T6)) - (T2)) / ( (T7) - (T2)) * (T1) - (T0)))> (_t1A06,_t1A08,cmin1A50,_t17FD,_t17F4,_t17E9,_t1A63,cmax1A52);
          tensor[3] mcol1A69#1 = λ(V0(1)[3],H1,T2[1])<Probe(V0_{i0}⊛H1,T2)>_{3} (img1814,_t1812,_t1A67);
          goto JOIN1A5E
        JOIN1A5E:  preds = [ASSIGN1B58,COND1A6C]
          tensor[3] mcol1A6A#1 = phi(mcol1A69,mcol1A5A)
          tensor[3] rgb1A87#2 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,INT9,FEM(fns_t)10,FEM(func_t)11,INT12,FEM(fns_t)13,FEM(func_t)14,INT15,FEM(fns_t)16,FEM(func_t)17,INT18,FEM(fns_t)19,FEM(func_t)20,INT21,FEM(fns_t)22,FEM(func_t)23,T24[3],INT25,FEM(fns_t)26,FEM(func_t)27,INT28,FEM(fns_t)29,FEM(func_t)30,INT31,FEM(fns_t)32,FEM(func_t)33,INT34,FEM(fns_t)35,FEM(func_t)36,INT37,FEM(fns_t)38,FEM(func_t)39,INT40,FEM(fns_t)41,FEM(func_t)42,T43[3],INT44,FEM(fns_t)45,FEM(func_t)46,INT47,FEM(fns_t)48,FEM(func_t)49,INT50,FEM(fns_t)51,FEM(func_t)52,INT53,FEM(fns_t)54,FEM(func_t)55,INT56,FEM(fns_t)57,FEM(func_t)58,INT59,FEM(fns_t)60,FEM(func_t)61,T62[3],INT63,FEM(fns_t)64,FEM(func_t)65,INT66,FEM(fns_t)67,FEM(func_t)68,INT69,FEM(fns_t)70,FEM(func_t)71,INT72,FEM(fns_t)73,FEM(func_t)74,INT75,FEM(fns_t)76,FEM(func_t)77,INT78,FEM(fns_t)79,FEM(func_t)80,T81[3],INT82,FEM(fns_t)83,FEM(func_t)84,INT85,FEM(fns_t)86,FEM(func_t)87,INT88,FEM(fns_t)89,FEM(func_t)90,INT91,FEM(fns_t)92,FEM(func_t)93,INT94,FEM(fns_t)95,FEM(func_t)96,INT97,FEM(fns_t)98,FEM(func_t)99,T100[3],INT101,FEM(fns_t)102,FEM(func_t)103,INT104,FEM(fns_t)105,FEM(func_t)106,INT107,FEM(fns_t)108,FEM(func_t)109,INT110,FEM(fns_t)111,FEM(func_t)112,INT113,FEM(fns_t)114,FEM(func_t)115,INT116,FEM(fns_t)117,FEM(func_t)118,T119[3],INT120,FEM(fns_t)121,FEM(func_t)122,INT123,FEM(fns_t)124,FEM(func_t)125,INT126,FEM(fns_t)127,FEM(func_t)128,INT129,FEM(fns_t)130,FEM(func_t)131,INT132,FEM(fns_t)133,FEM(func_t)134,INT135,FEM(fns_t)136,FEM(func_t)137,T138[3],INT139,FEM(fns_t)140,FEM(func_t)141,INT142,FEM(fns_t)143,FEM(func_t)144,INT145,FEM(fns_t)146,FEM(func_t)147,INT148,FEM(fns_t)149,FEM(func_t)150,INT151,FEM(fns_t)152,FEM(func_t)153,INT154,FEM(fns_t)155,FEM(func_t)156,T157[3],T158[3],T159[3],T160[3],T161[],T162[],T163[],T164[],T165[3],T166[],T167[],T168[3])<(T0_{i0} + (T1 * (T2) - (T3) * (((T4 + (T5 * (Σ(i4=0..2)<((Neg((Neg(((Σ(i9=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i10},T24) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11,i13},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i9,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2) * Σ(i14=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14},T24) * Σ(i15=0..2)<((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i15,i17},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24)))>(i17=0..2) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i9,i16}))>(i16=0..3)))>(i15=0..2)))>(i14=0..2)))>(i9=0..2) * Σ(i18=0..2)<(((Σ(i23=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i24=0..2)<((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i24=0..2)))>(i23=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19,i4},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i22=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22,i4},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i4},T24))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2)) + (Σ(i19=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i23=0..2)(i24=0..2)<((((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i4},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i26=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26,i4},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i4},T24))))>(i26=0..2))) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i23=0..2)(i24=0..2))))>(i18=0..2))) / ( Σ(i25=0..2)<((Σ(i27=0..2)<(((Σ(i32=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i33=0..2)<((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i33=0..2)))>(i32=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i31=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i25},T24))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2)) + (Σ(i28=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i32=0..2)(i33=0..2)<((((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i35=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i25},T24))))>(i35=0..2))) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i32=0..2)(i33=0..2))))>(i27=0..2) * Σ(i36=0..2)<(((Σ(i41=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i42=0..2)<((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i42=0..2)))>(i41=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i40=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40,i25},T24))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2)) + (Σ(i37=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i41=0..2)(i42=0..2)<((((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i44=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44,i25},T24))))>(i44=0..2))) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i41=0..2)(i42=0..2))))>(i36=0..2)))>(i25=0..2))) * (1) / ( Sqrt(Σ(i6=0..2)<((Neg(((Σ(i9=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i10},T24) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11,i13},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i9,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2) * Σ(i14=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14},T24) * Σ(i15=0..2)<((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i15,i17},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24)))>(i17=0..2) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i9,i16}))>(i16=0..3)))>(i15=0..2)))>(i14=0..2)))>(i9=0..2) * Σ(i18=0..2)<(((Σ(i23=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i24=0..2)<((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i24=0..2)))>(i23=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i22=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i6},T24))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2)) + (Σ(i19=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i23=0..2)(i24=0..2)<((((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i26=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i6},T24))))>(i26=0..2))) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i23=0..2)(i24=0..2))))>(i18=0..2))) / ( Σ(i25=0..2)<((Σ(i27=0..2)<(((Σ(i32=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i33=0..2)<((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i33=0..2)))>(i32=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i31=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i25},T24))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2)) + (Σ(i28=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i32=0..2)(i33=0..2)<((((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i35=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i25},T24))))>(i35=0..2))) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i32=0..2)(i33=0..2))))>(i27=0..2) * Σ(i36=0..2)<(((Σ(i41=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i42=0..2)<((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i42=0..2)))>(i41=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i40=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40,i25},T24))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2)) + (Σ(i37=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i41=0..2)(i42=0..2)<((((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i44=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44,i25},T24))))>(i44=0..2))) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i41=0..2)(i42=0..2))))>(i36=0..2)))>(i25=0..2))) * Neg(((Σ(i9=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i10},T24) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11,i13},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i9,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2) * Σ(i14=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14},T24) * Σ(i15=0..2)<((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i15,i17},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24)))>(i17=0..2) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i9,i16}))>(i16=0..3)))>(i15=0..2)))>(i14=0..2)))>(i9=0..2) * Σ(i18=0..2)<(((Σ(i23=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i24=0..2)<((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i24=0..2)))>(i23=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i22=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i6},T24))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2)) + (Σ(i19=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i23=0..2)(i24=0..2)<((((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i26=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i6},T24))))>(i26=0..2))) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i23=0..2)(i24=0..2))))>(i18=0..2))) / ( Σ(i25=0..2)<((Σ(i27=0..2)<(((Σ(i32=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i33=0..2)<((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i33=0..2)))>(i32=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i31=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i25},T24))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2)) + (Σ(i28=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i32=0..2)(i33=0..2)<((((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i35=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i25},T24))))>(i35=0..2))) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i32=0..2)(i33=0..2))))>(i27=0..2) * Σ(i36=0..2)<(((Σ(i41=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i42=0..2)<((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i42=0..2)))>(i41=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i40=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40,i25},T24))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2)) + (Σ(i37=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i41=0..2)(i42=0..2)<((((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i44=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44,i25},T24))))>(i44=0..2))) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i41=0..2)(i42=0..2))))>(i36=0..2)))>(i25=0..2)))))>(i6=0..2))))) * T158_{i4}))>(i4=0..2))^2)) * (T159_{i0} + ((((T162 + T163)) - (T161)) / ( (T164) - (T161)) * (T160_{i0}) - (T159_{i0}))) * T165_{i0}) + (T166 * T167 * T168_{i0}))))>_{3} (rgb1960,transp1961,_t1A08,_t1A2D,phKa195A,phKd195B,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,_t17FD,_t17F4,_t17E9,pos197F,litwsp192E,mcNear1937,mcFar1936,camNearVsp1930,rayN1954,rayStep193E,camFarVsp192F,mcol1A6A,phKs195C,scomp1A4B,mcol1A5A);
          real transp1A8D#2 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp1961,_t1A08,_t1A08,_t1A2D);
          bool _t1A8F#1 = LT<real>(transp1A8D,transp0193D);
          if _t1A8F then goto SAVE1A96 else goto JOIN1A91
        SAVE1A96:  preds = [COND1A9A]
          self.rayN = rayN1972;
          self.rgb = rgb1A87;
          self.transp = _t1A06;
          stabilize
          goto JOIN1A91
        JOIN1A91:  preds = [*STABILIZE1A95,COND1A9A]
          real transp1A93#1 = phi(transp1A8D)
          self.rayN = rayN1972;
          self.rgb = rgb1A87;
          self.transp = transp1A93;
          active
        ASSIGN19CB:  preds = [COND19CC]
          bool _t19CA#1 = false;
          goto JOIN19C4
        ASSIGN19D1:  preds = [COND19D2]
          bool _t19D0#1 = false;
          goto JOIN19B5
        ASSIGN19D7:  preds = [COND19D8]
          bool _t19D6#1 = false;
          goto JOIN19AC
        ASSIGN19DD:  preds = [COND19DE]
          bool _t19DC#1 = false;
          goto JOIN198C
    end update
    method stabilize
        ENTRY1ADA:  preds = []
          tensor[4] rgba1AAD#1 = self.rgba;
          tensor[3] rgb1AAF#3 = self.rgb;
          real transp1AB0#5 = self.transp;
          real _t1AC1#5 = 0.1e1;
          bool _t1AC3#1 = LT<real>(transp1AB0,_t1AC1);
          if _t1AC3 then goto ASSIGN1B14 else goto JOIN1AC5
        ASSIGN1B14:  preds = [COND1AD9]
          real aa1AC8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1AC1,transp1AB0);
          real _t1ACA#1 = TensorIndex<tensor[3],[0]>(rgb1AAF);
          real _t1ACC#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1ACA,_t1AC1,transp1AB0);
          real _t1ACE#1 = TensorIndex<tensor[3],[1]>(rgb1AAF);
          real _t1AD0#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1ACE,_t1AC1,transp1AB0);
          real _t1AD2#1 = TensorIndex<tensor[3],[2]>(rgb1AAF);
          real _t1AD4#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1AD2,_t1AC1,transp1AB0);
          tensor[4] rgba1AD6#1 = <tensor[4]>[_t1ACC,_t1AD0,_t1AD4,aa1AC8];
          goto JOIN1AC5
        JOIN1AC5:  preds = [ASSIGN1AD8,COND1AD9]
          tensor[4] rgba1AD7#1 = phi(rgba1AD6,rgba1AAD)
          self.rgba = rgba1AD7;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY1870:  preds = []
      int iresU1856#1 = globals.iresU16FB;
      int iresV1855#1 = globals.iresV16FC;
      int _t1859#2 = 0;
      int _t185B#2 = 1;
      int _t185D#1 = ISub(iresV1855,_t185B);
      int[] _t185F#1 = Range(_t1859,_t185D);
    FOREACH1862:  preds = [ASSIGN1860,NEXT186F]
      foreach (vi1861 in _t185F) on exit goto RETURN1871
      int _t1867#1 = ISub(iresU1856,_t185B);
      int[] _t1869#1 = Range(_t1859,_t1867);
    FOREACH186C:  preds = [ASSIGN1AE1,NEXT186E]
      foreach (ui186B in _t1869) on exit goto NEXT186F
      new ray(ui186B,vi1861);
      goto FOREACH186C
    NEXT186F:  preds = [FOREACH186C]
      goto FOREACH1862
    RETURN1871:  preds = [FOREACH1862]
      return
#### end program ####
promote _t17FD --> globals._t1B68
promote _t17F4 --> globals._tX1B6B
promote _t17E9 --> globals._tXX1B6E
promote img1814 --> globals.img1B79
promote _t1812 --> globals._tXXX1B7C
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block16EF (block) = <no-default>
  input 0space04D7_intermedateGlobal16F0 (space) = <no-default>
  input 0U04D9_intermedateGlobal16F1 (U) = <no-default>
  input cellChoice16F2 (cellChoice) = <no-default>
  input cmap16F3 (cmap) = image("cmap.nrrd")
  input camEye16F4 (camEye) = <default>
  input camAt16F5 (camAt) = <default>
  input camUp16F6 (camUp) = <default>
  input camNear16F7 (camNear) = <default>
  input camFar16F8 (camFar) = <default>
  input camFOV16F9 (camFOV) = <default>
  input camOrtho16FA (camOrtho) = <default>
  input iresU16FB (iresU) = <default>
  input iresV16FC (iresV) = <default>
  input rayStep16FD (rayStep) = <default>
  input refStep16FE (refStep) = <default>
  input transp016FF (transp0) = <default>
  input thick1700 (thick) = <default>
  input fStrTh1701 (fStrTh) = <default>
  input fMaskTh1702 (fMaskTh) = <default>
  input fBias1703 (fBias) = <default>
  input maxAlpha1704 (maxAlpha) = <default>
  input light1705 (light) = <default>
  input phong1706 (phong) = <default>
  input mcNear1707 (mcNear) = <default>
  input mcFar1708 (mcFar) = <default>
  input litdir1709 (litdir) = <default>
  input cminmax170A (cminmax) = <default>
  global tensor[3] camN178B
  global tensor[3] camU178C
  global tensor[3] camV178D
  global real camDist178E
  global real camVmax178F
  global real camUmax1790
  global real camNearVsp1791
  global real camFarVsp1792
  global tensor[3] litwsp1793
  global int _t1B68
  global femData:Space _tX1B6B
  global femData:FemFunc _tXX1B6E
  global image(IMAGE1D<double[3]>) img1B79
  global kernel _tXXX1B7C
## functions
  function int[2] nextCell417A5 (int faceIdx1794#1, int cell1795#1, femData:Mesh mesh1796#1) {
    ENTRY17A4:  preds = []
      int _t1797#1 = 12;
      int _t1799#1 = IMul(cell1795,_t1797);
      int _t179B#1 = 2;
      int _t179D#1 = IMul(faceIdx1794,_t179B);
      int _t179F#1 = IAdd(_t1799,_t179D);
      int[2] _t17A1#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1796,_t179F);
      return _t17A1
}
## input initialization
  ENTRY1780:  preds = []
    real _t170B#13 = 0.e0;
    real _t170D#1 = -0.2e1;
    tensor[3] camEye1711#1 = <tensor[3]>[_t170B,_t170D,_t170B];
    globals.camEye16F4 = camEye1711;
    tensor[3] camAt171A#1 = <tensor[3]>[_t170B,_t170B,_t170B];
    globals.camAt16F5 = camAt171A;
    real _t1721#5 = 0.1e1;
    tensor[3] camUp1723#1 = <tensor[3]>[_t170B,_t170B,_t1721];
    globals.camUp16F6 = camUp1723;
    real camNear1726#1 = -0.4e1;
    globals.camNear16F7 = camNear1726;
    real camFar1729#1 = 0.4e1;
    globals.camFar16F8 = camFar1729;
    real camFOV172C#1 = 0.1e2;
    globals.camFOV16F9 = camFOV172C;
    bool camOrtho172F#2 = false;
    globals.camOrtho16FA = camOrtho172F;
    int iresU1732#2 = 100;
    globals.iresU16FB = iresU1732;
    globals.iresV16FC = iresU1732;
    real rayStep1738#2 = 0.1e-3;
    globals.rayStep16FD = rayStep1738;
    globals.refStep16FE = rayStep1738;
    real transp0173E#1 = 0.5e-2;
    globals.transp016FF = transp0173E;
    real thick1741#1 = 0.1e-1;
    globals.thick1700 = thick1741;
    globals.fStrTh1701 = _t170B;
    globals.fMaskTh1702 = _t170B;
    real fBias174A#2 = 0.1e0;
    globals.fBias1703 = fBias174A;
    globals.maxAlpha1704 = _t1721;
    globals.light1705 = camOrtho172F;
    real _t1755#1 = 0.7e0;
    real _t1757#1 = 0.2e0;
    real _t1759#1 = 0.1e3;
    tensor[4] phong175B#1 = <tensor[4]>[fBias174A,_t1755,_t1757,_t1759];
    globals.phong1706 = phong175B;
    tensor[3] mcNear1764#2 = <tensor[3]>[_t1721,_t1721,_t1721];
    globals.mcNear1707 = mcNear1764;
    globals.mcFar1708 = mcNear1764;
    real _t1772#1 = -0.1e1;
    tensor[3] litdir1776#1 = <tensor[3]>[_t170B,_t1772,_t170B];
    globals.litdir1709 = litdir1776;
    tensor[2] cminmax177D#1 = <tensor[2]>[_t170B,_t170B];
    globals.cminmax170A = cminmax177D;
    return
## global-variable initialization
  ENTRY1853:  preds = []
    femData:Mesh block17B3#3 = globals.block16EF;
    femData:Space 0space04D7_intermedateGlobal17B2#1 = globals.0space04D7_intermedateGlobal16F0;
    femData:FemFunc 0U04D9_intermedateGlobal17B1#1 = globals.0U04D9_intermedateGlobal16F1;
    int cellChoice17B0#1 = globals.cellChoice16F2;
    image(IMAGE1D<double[3]>) cmap17AF#1 = globals.cmap16F3;
    tensor[3] camEye17AE#17 = globals.camEye16F4;
    tensor[3] camAt17AD#17 = globals.camAt16F5;
    tensor[3] camUp17AC#4 = globals.camUp16F6;
    real camNear17AB#1 = globals.camNear16F7;
    real camFar17AA#1 = globals.camFar16F8;
    real camFOV17A9#2 = globals.camFOV16F9;
    int iresU17A8#1 = globals.iresU16FB;
    int iresV17A7#1 = globals.iresV16FC;
    tensor[3] litdir17A6#2 = globals.litdir1709;
    int _t17C2#1 = 0;
    int _t17C4#1 = 1;
    int _t17C6#1 = ExtractFemItem<int,NumCell(Mesh)>(block17B3);
    int _t17C8#1 = ISub(_t17C6,_t17C4);
    int[] _t17CA#1 = Range(_t17C2,_t17C8);
    femData:MeshCell[] _t17CC#1 = <femData:MeshCell[]>{};
  FOREACH17D0:  preds = [ASSIGN17CD,NEXT17D5]
    foreach (_t17CE in _t17CA) on exit goto ASSIGN17DA
      femData:MeshCell[] _t17CF#2 = phi(_t17CC,_t17D3)
    femData:MeshCell _t17D1#1 = LoadFem<femData:MeshCell>(block17B3,_t17CE);
    femData:MeshCell[] _t17D3#1 = Append<femData:MeshCell>(_t17CF,_t17D1);
    goto FOREACH17D0
  ASSIGN17DA:  preds = [FOREACH17D0]
    femData:Space space17D9#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal17B2,block17B3);
    femData:FemFunc U17DC#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal17B1,space17D9);
    femData:MeshCell c117DF#1 = Subscript<femData:MeshCell[]>(_t17CF,cellChoice17B0);
    int _t17E3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c117DF);
    femData:FuncCell _t17E5#2 = LoadFem<femData:FuncCell>(U17DC,_t17E3);
    femData:FemFunc _t17E9#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t17E5);
    femData:Space _t17F4#1 = ExtractFem<femData:Space,femData:FemFunc>(_t17E9);
    int _t17FD#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t17E5);
    kernel _t1812#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1814#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap17AF);
    tensor[3] camN181E#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt17AD,camEye17AE,camAt17AD,camEye17AE);
    globals.camN178B = camN181E;
    tensor[3] camU1823#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt17AD,camEye17AE,camAt17AD,camEye17AE,camUp17AC,camAt17AD,camEye17AE,camAt17AD,camEye17AE,camUp17AC);
    globals.camU178C = camU1823;
    tensor[3] camV1826#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * (T0_{i1}) - (T1_{i1}) * (1) / ( Sqrt(Σ(i3=0..2)<(((T0_{i3}) - (T1_{i3}) * (T0_{i3}) - (T1_{i3})))>(i3=0..2))) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii2,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * (1) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2) * Σ(i5=0..2)(i6=0..2)<((ϵ_{ii4,ii5,ii6} * (T0_{i5}) - (T1_{i5}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2))) * T8_{i6}))>(i5=0..2)(i6=0..2)))>(i4=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt17AD,camEye17AE,camAt17AD,camEye17AE,camAt17AD,camEye17AE,camAt17AD,camEye17AE,camUp17AC,camAt17AD,camEye17AE,camAt17AD,camEye17AE,camUp17AC);
    globals.camV178D = camV1826;
    real camDist182B#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt17AD,camEye17AE);
    globals.camDist178E = camDist182B;
    real _t182E#2 = 0.314159265358979323846264338327950288e1;
    real _t1832#2 = 0.36e3;
    real camVmax1838#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV17A9,_t182E,_t1832,camAt17AD,camEye17AE);
    globals.camVmax178F = camVmax1838;
    real _t183B#1 = IntToReal(iresU17A8);
    real _t183F#1 = IntToReal(iresV17A7);
    real camUmax1841#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV17A9,_t182E,_t1832,camAt17AD,camEye17AE,_t183B,_t183F);
    globals.camUmax1790 = camUmax1841;
    real camNearVsp1844#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear17AB,camAt17AD,camEye17AE);
    globals.camNearVsp1791 = camNearVsp1844;
    real camFarVsp1847#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar17AA,camAt17AD,camEye17AE);
    globals.camFarVsp1792 = camFarVsp1847;
    tensor[3,3] _t184A#1 = <tensor[3,3]>[camU1823,camV1826,camN181E];
    tensor[3] litwsp1850#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t184A,litdir17A6,litdir17A6);
    globals.litwsp1793 = litwsp1850;
    globals._t1B68 = _t17FD;
    globals._tX1B6B = _t17F4;
    globals._tXX1B6E = _t17E9;
    globals.img1B79 = img1814;
    globals._tXXX1B7C = _t1812;
    return
## strand
  strand ray (int ui1872#1, int vi1873#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY191C:  preds = []
        tensor[3] camEye1891#1 = globals.camEye16F4;
        bool camOrtho1890#2 = globals.camOrtho16FA;
        int iresU188F#1 = globals.iresU16FB;
        int iresV188E#1 = globals.iresV16FC;
        real rayStep188D#1 = globals.rayStep16FD;
        real refStep188C#1 = globals.refStep16FE;
        tensor[4] phong188B#4 = globals.phong1706;
        tensor[3] camN188A#4 = globals.camN178B;
        tensor[3] camU1889#2 = globals.camU178C;
        tensor[3] camV1888#2 = globals.camV178D;
        real camDist1887#1 = globals.camDist178E;
        real camVmax1886#6 = globals.camVmax178F;
        real camUmax1885#6 = globals.camUmax1790;
        real camNearVsp1884#1 = globals.camNearVsp1791;
        real _t18B2#6 = -0.5e0;
        real _t18B4#3 = IntToReal(ui1872);
        real _t18B6#3 = IntToReal(iresU188F);
        real _t18B8#6 = 0.5e0;
        real rayU18BC#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1885,camUmax1885,_t18B2,_t18B4,_t18B6,_t18B8);
        real _t18C2#3 = IntToReal(vi1873);
        real _t18C4#3 = IntToReal(iresV188E);
        real rayV18CA#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax1886,camVmax1886,_t18B2,_t18C2,_t18C4,_t18B8);
        tensor[3] UV18D2#2 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax1885,camUmax1885,_t18B2,_t18B4,_t18B6,_t18B8,camU1889,camVmax1886,camVmax1886,_t18B2,_t18C2,_t18C4,_t18B8,camV1888);
        if camOrtho1890 then goto JOIN18D5 else goto ASSIGN18DA
      JOIN18D5:  preds = [COND18E1,ASSIGN1AFB]
        tensor[3] _t18D7#1 = phi(UV18D2,_t18DF)
        tensor[3] rayOrig18E2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1891,_t18D7);
        if camOrtho1890 then goto ASSIGN18E7 else goto ASSIGN1B31
      ASSIGN18E7:  preds = [COND18F1]
        real _t18E6#3 = 0.e0;
        tensor[3] _t18EC#1 = <tensor[3]>[_t18E6,_t18E6,_t18E6];
        goto JOIN18E5
      JOIN18E5:  preds = [ASSIGN1AFC,ASSIGN1B31]
        tensor[3] _t18ED#4 = phi(_t18EC,_t18EF)
        tensor[3] rayVec18F2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN188A,_t18ED);
        real alphaFix18F8#1 = λ(T0[3],T1[3],T2[],T3[])<((T2 * Sqrt(Σ(i0=0..2)<(((T0_{i0} + T1_{i0}) * (T0_{i0} + T1_{i0})))>(i0=0..2)))) / ( T3)> (camN188A,_t18ED,rayStep188D,refStep188C);
        tensor[3] eyeDir18FC#1 = λ(T0[3],T1[3],T2[3],T3[3])<Neg(((T0_{i0} + T1_{i0}) * (1) / ( Sqrt(Σ(i2=0..2)<(((T0_{i2} + T1_{i2}) * (T0_{i2} + T1_{i2})))>(i2=0..2)))))>_{3} (camN188A,_t18ED,camN188A,_t18ED);
        real phKa18FE#1 = TensorIndex<tensor[4],[0]>(phong188B);
        real phKd1900#1 = TensorIndex<tensor[4],[1]>(phong188B);
        real phKs1902#1 = TensorIndex<tensor[4],[2]>(phong188B);
        real phSp1904#1 = TensorIndex<tensor[4],[3]>(phong188B);
        real _t1906#8 = 0.e0;
        tensor[4] rgba190E#1 = <tensor[4]>[_t1906,_t1906,_t1906,_t1906];
        tensor[3] rgb1918#1 = <tensor[3]>[_t1906,_t1906,_t1906];
        real transp191A#1 = 0.1e1;
        self.rayU = rayU18BC;
        self.rayV = rayV18CA;
        self.rayN = camNearVsp1884;
        self.UV = UV18D2;
        self.rayOrig = rayOrig18E2;
        self.rayVec = rayVec18F2;
        self.alphaFix = alphaFix18F8;
        self.eyeDir = eyeDir18FC;
        self.phKa = phKa18FE;
        self.phKd = phKd1900;
        self.phKs = phKs1902;
        self.phSp = phSp1904;
        self.rgba = rgba190E;
        self.raw = _t1906;
        self.rgb = rgb1918;
        self.transp = transp191A;
        return
      ASSIGN1B31:  preds = [COND18F1]
        tensor[3] _t18EF#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3],T14[])<((((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))) / ( T14)>_{3} (camUmax1885,camUmax1885,_t18B2,_t18B4,_t18B6,_t18B8,camU1889,camVmax1886,camVmax1886,_t18B2,_t18C2,_t18C4,_t18B8,camV1888,camDist1887);
        goto JOIN18E5
      ASSIGN18DA:  preds = [COND18E1]
        real _t18D9#3 = 0.e0;
        tensor[3] _t18DF#1 = <tensor[3]>[_t18D9,_t18D9,_t18D9];
        goto JOIN18D5
    end state init
    method update
        ENTRY1A9B:  preds = []
          int _t1B69#177 = globals._t1B68;
          femData:Space _t1B6C#177 = globals._tX1B6B;
          femData:FemFunc _t1B6F#177 = globals._tXX1B6E;
          image(IMAGE1D<double[3]>) img1B7A#1 = globals.img1B79;
          kernel _t1B7D#1 = globals._tXXX1B7C;
          femData:Mesh block193F#1 = globals.block16EF;
          real rayStep193E#4 = globals.rayStep16FD;
          real transp0193D#1 = globals.transp016FF;
          real thick193C#2 = globals.thick1700;
          real fStrTh193B#1 = globals.fStrTh1701;
          real fMaskTh193A#1 = globals.fMaskTh1702;
          real fBias1939#1 = globals.fBias1703;
          real maxAlpha1938#2 = globals.maxAlpha1704;
          tensor[3] mcNear1937#1 = globals.mcNear1707;
          tensor[3] mcFar1936#1 = globals.mcFar1708;
          tensor[2] cminmax1935#2 = globals.cminmax170A;
          real camNearVsp1930#1 = globals.camNearVsp1791;
          real camFarVsp192F#2 = globals.camFarVsp1792;
          tensor[3] litwsp192E#3 = globals.litwsp1793;
          real rayN1954#4 = self.rayN;
          tensor[3] rayOrig1956#2 = self.rayOrig;
          tensor[3] rayVec1957#2 = self.rayVec;
          real alphaFix1958#1 = self.alphaFix;
          tensor[3] eyeDir1959#2 = self.eyeDir;
          real phKa195A#1 = self.phKa;
          real phKd195B#1 = self.phKd;
          real phKs195C#2 = self.phKs;
          real phSp195D#1 = self.phSp;
          tensor[3] rgb1960#1 = self.rgb;
          real transp1961#2 = self.transp;
          real rayN1972#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1954,rayStep193E);
          bool _t1974#1 = GT<real>(rayN1972,camFarVsp192F);
          if _t1974 then goto SAVE1978 else goto JOIN1976
        SAVE1978:  preds = [COND197C]
          self.rayN = rayN1972;
          stabilize
          goto JOIN1976
        JOIN1976:  preds = [*STABILIZE1977,COND197C]
          tensor[3] pos197F#32 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig1956,rayN1954,rayStep193E,rayVec1957);
          femData:RefCell _t1984#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block193F);
          real _t1988#1 = 0.1e-8;
          bool _t198A#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1984,pos197F,_t1988);
          if _t198A then goto ASSIGN1B70 else goto ASSIGN19DD
        ASSIGN1B70:  preds = [COND19DE]
          tensor[3,3] _t1993#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i0,i1},T3)>_{3 3} (_t1B69,_t1B6C,_t1B6F,pos197F);
          (real[3] _t1995#1,tensor[3][3] evecs1996#0) = Eigen3x3(_t1993);
          int _t1998#1 = 1;
          real _t199A#1 = Subscript<real[3]>(_t1995,_t1998);
          real _t19A6#1 = λ(T0[],T1[],INT2,FEM(fns_t)3,FEM(func_t)4,T5[3])<(Neg(T0)) / ( (T1 + Sqrt(Σ(i0=0..2)<((Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5) * Probe(femV(noFunc, 2, 3, 4)⊛Basis()dx_{i0},T5)))>(i0=0..2))))> (_t199A,fBias1939,_t1B69,_t1B6C,_t1B6F,pos197F);
          bool _t19AA#1 = GT<real>(_t19A6,fStrTh193B);
          if _t19AA then goto ASSIGN19B0 else goto ASSIGN19D7
        ASSIGN19B0:  preds = [COND19D8]
          real _t19AF#1 = 0.1e1;
          bool _t19B3#1 = GTE<real>(_t19AF,fMaskTh193A);
          if _t19B3 then goto ASSIGN1B72 else goto ASSIGN19D1
        ASSIGN1B72:  preds = [COND19D2]
          real _t19BC#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,INT3,FEM(fns_t)4,FEM(func_t)5,INT6,FEM(fns_t)7,FEM(func_t)8,INT9,FEM(fns_t)10,FEM(func_t)11,INT12,FEM(fns_t)13,FEM(func_t)14,INT15,FEM(fns_t)16,FEM(func_t)17,T18[3])<Sqrt(Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7},T18) * Σ(i8=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18)))>(i10=0..2) * Σ(i9=0..3)<((ϵ_{ii9,ii7,ii8} * δ_{i2,i9}))>(i9=0..3)))>(i8=0..2)))>(i7=0..2) * Σ(i3=0..2)(i4=0..2)<((((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18)))>(i6=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3},T18) * Σ(i6=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6,i0},T18))))>(i6=0..2))) * Σ(i5=0..3)<((ϵ_{ii5,ii3,ii4} * δ_{i2,i5}))>(i5=0..3)))>(i3=0..2)(i4=0..2)) + (Σ(i3=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3},T18) * Σ(i4=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18)))>(i6=0..2) * Σ(i5=0..3)<((ϵ_{ii5,ii3,ii4} * δ_{i2,i5}))>(i5=0..3)))>(i4=0..2)))>(i3=0..2) * Σ(i7=0..2)(i8=0..2)<((((Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18)))>(i10=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7},T18) * Σ(i10=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10,i0},T18))))>(i10=0..2))) * Σ(i9=0..3)<((ϵ_{ii9,ii7,ii8} * δ_{i2,i9}))>(i9=0..3)))>(i7=0..2)(i8=0..2))))>(i2=0..2) * Σ(i2=0..2)<(((Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7},T18) * Σ(i8=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18)))>(i10=0..2) * Σ(i9=0..3)<((ϵ_{ii9,ii7,ii8} * δ_{i2,i9}))>(i9=0..3)))>(i8=0..2)))>(i7=0..2) * Σ(i3=0..2)(i4=0..2)<((((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18)))>(i6=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3},T18) * Σ(i6=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6,i0},T18))))>(i6=0..2))) * Σ(i5=0..3)<((ϵ_{ii5,ii3,ii4} * δ_{i2,i5}))>(i5=0..3)))>(i3=0..2)(i4=0..2)) + (Σ(i3=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i3},T18) * Σ(i4=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i4,i6},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18)))>(i6=0..2) * Σ(i5=0..3)<((ϵ_{ii5,ii3,ii4} * δ_{i2,i5}))>(i5=0..3)))>(i4=0..2)))>(i3=0..2) * Σ(i7=0..2)(i8=0..2)<((((Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18)))>(i10=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7},T18) * Σ(i10=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i8,i10},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10,i0},T18))))>(i10=0..2))) * Σ(i9=0..3)<((ϵ_{ii9,ii7,ii8} * δ_{i2,i9}))>(i9=0..3)))>(i7=0..2)(i8=0..2))))>(i2=0..2)))>(i0=0..2))> (_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F);
          real _t19BE#1 = 0.1e-7;
          bool _t19C0#1 = GT<real>(_t19BC,_t19BE);
          if _t19C0 then goto ASSIGN19C6 else goto ASSIGN19CB
        ASSIGN19C6:  preds = [COND19CC]
          bool _t19C5#1 = true;
          goto JOIN19C4
        JOIN19C4:  preds = [ASSIGN19C6,ASSIGN19CB]
          bool _t19C8#1 = phi(_t19C5,_t19CA)
          goto JOIN19B5
        JOIN19B5:  preds = [JOIN19C4,ASSIGN19D1]
          bool _t19CE#1 = phi(_t19C8,_t19D0)
          goto JOIN19AC
        JOIN19AC:  preds = [JOIN19B5,ASSIGN19D7]
          bool _t19D4#1 = phi(_t19CE,_t19D6)
          goto JOIN198C
        JOIN198C:  preds = [JOIN19AC,ASSIGN19DD]
          bool _t19DA#1 = phi(_t19D4,_t19DC)
          bool _t19E1#1 = BNot(_t19DA);
          if _t19E1 then goto SAVE19E5 else goto JOIN19E3
        SAVE19E5:  preds = [COND19E9]
          self.rayN = rayN1972;
          active
          goto JOIN19E3
        JOIN19E3:  preds = [*ACTIVE19E4,COND19E9]
          real _t1A06#7 = 0.e0;
          real _t1A08#12 = 0.1e1;
          real _t1A0A#2 = 0.15e1;
          real _t1A18#1 = λ(T0[],T1[],T2[],T3[],T4[],INT5,FEM(fns_t)6,FEM(func_t)7,INT8,FEM(fns_t)9,FEM(func_t)10,INT11,FEM(fns_t)12,FEM(func_t)13,INT14,FEM(fns_t)15,FEM(func_t)16,INT17,FEM(fns_t)18,FEM(func_t)19,INT20,FEM(fns_t)21,FEM(func_t)22,T23[3],INT24,FEM(fns_t)25,FEM(func_t)26,INT27,FEM(fns_t)28,FEM(func_t)29,INT30,FEM(fns_t)31,FEM(func_t)32,INT33,FEM(fns_t)34,FEM(func_t)35,INT36,FEM(fns_t)37,FEM(func_t)38,INT39,FEM(fns_t)40,FEM(func_t)41,T42[3],INT43,FEM(fns_t)44,FEM(func_t)45,INT46,FEM(fns_t)47,FEM(func_t)48,INT49,FEM(fns_t)50,FEM(func_t)51,INT52,FEM(fns_t)53,FEM(func_t)54,INT55,FEM(fns_t)56,FEM(func_t)57,INT58,FEM(fns_t)59,FEM(func_t)60,T61[3],INT62,FEM(fns_t)63,FEM(func_t)64,INT65,FEM(fns_t)66,FEM(func_t)67,INT68,FEM(fns_t)69,FEM(func_t)70,INT71,FEM(fns_t)72,FEM(func_t)73,INT74,FEM(fns_t)75,FEM(func_t)76,INT77,FEM(fns_t)78,FEM(func_t)79,T80[3],T81[])<(T0 * Clamp <T1,T2,(T3 * (T2) - ((Abs(Sqrt(Σ(i0=0..2)<((Neg(((Σ(i3=0..2)<((Σ(i4=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i4},T23) * Σ(i5=0..2)<((Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i5,i7},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i7},T23)))>(i7=0..2) * Σ(i6=0..3)<((ϵ_{ii6,ii4,ii5} * δ_{i3,i6}))>(i6=0..3)))>(i5=0..2)))>(i4=0..2) * Σ(i8=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i8},T23) * Σ(i9=0..2)<((Σ(i11=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i9,i11},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i11},T23)))>(i11=0..2) * Σ(i10=0..3)<((ϵ_{ii10,ii8,ii9} * δ_{i3,i10}))>(i10=0..3)))>(i9=0..2)))>(i8=0..2)))>(i3=0..2) * Σ(i12=0..2)<(((Σ(i17=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17},T23) * Σ(i18=0..2)<((Σ(i20=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23)))>(i20=0..2) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i18=0..2)))>(i17=0..2) * Σ(i13=0..2)(i14=0..2)<((((Σ(i16=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23)))>(i16=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13},T23) * Σ(i16=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16,i0},T23))))>(i16=0..2))) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i13=0..2)(i14=0..2)) + (Σ(i13=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13},T23) * Σ(i14=0..2)<((Σ(i16=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23)))>(i16=0..2) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i14=0..2)))>(i13=0..2) * Σ(i17=0..2)(i18=0..2)<((((Σ(i20=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23)))>(i20=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17},T23) * Σ(i20=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20,i0},T23))))>(i20=0..2))) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i17=0..2)(i18=0..2))))>(i12=0..2))) / ( Σ(i19=0..2)<((Σ(i21=0..2)<(((Σ(i26=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26},T23) * Σ(i27=0..2)<((Σ(i29=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23)))>(i29=0..2) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i27=0..2)))>(i26=0..2) * Σ(i22=0..2)(i23=0..2)<((((Σ(i25=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23)))>(i25=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22},T23) * Σ(i25=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25,i19},T23))))>(i25=0..2))) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i22=0..2)(i23=0..2)) + (Σ(i22=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22},T23) * Σ(i23=0..2)<((Σ(i25=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23)))>(i25=0..2) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i23=0..2)))>(i22=0..2) * Σ(i26=0..2)(i27=0..2)<((((Σ(i29=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23)))>(i29=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26},T23) * Σ(i29=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29,i19},T23))))>(i29=0..2))) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i26=0..2)(i27=0..2))))>(i21=0..2) * Σ(i30=0..2)<(((Σ(i35=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35},T23) * Σ(i36=0..2)<((Σ(i38=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23)))>(i38=0..2) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i36=0..2)))>(i35=0..2) * Σ(i31=0..2)(i32=0..2)<((((Σ(i34=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23)))>(i34=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31},T23) * Σ(i34=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34,i19},T23))))>(i34=0..2))) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i31=0..2)(i32=0..2)) + (Σ(i31=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31},T23) * Σ(i32=0..2)<((Σ(i34=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23)))>(i34=0..2) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i32=0..2)))>(i31=0..2) * Σ(i35=0..2)(i36=0..2)<((((Σ(i38=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23)))>(i38=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35},T23) * Σ(i38=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38,i19},T23))))>(i38=0..2))) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i35=0..2)(i36=0..2))))>(i30=0..2)))>(i19=0..2))) * Neg(((Σ(i3=0..2)<((Σ(i4=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i4},T23) * Σ(i5=0..2)<((Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i5,i7},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i7},T23)))>(i7=0..2) * Σ(i6=0..3)<((ϵ_{ii6,ii4,ii5} * δ_{i3,i6}))>(i6=0..3)))>(i5=0..2)))>(i4=0..2) * Σ(i8=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i8},T23) * Σ(i9=0..2)<((Σ(i11=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i9,i11},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i11},T23)))>(i11=0..2) * Σ(i10=0..3)<((ϵ_{ii10,ii8,ii9} * δ_{i3,i10}))>(i10=0..3)))>(i9=0..2)))>(i8=0..2)))>(i3=0..2) * Σ(i12=0..2)<(((Σ(i17=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17},T23) * Σ(i18=0..2)<((Σ(i20=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23)))>(i20=0..2) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i18=0..2)))>(i17=0..2) * Σ(i13=0..2)(i14=0..2)<((((Σ(i16=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23)))>(i16=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13},T23) * Σ(i16=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16,i0},T23))))>(i16=0..2))) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i13=0..2)(i14=0..2)) + (Σ(i13=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i13},T23) * Σ(i14=0..2)<((Σ(i16=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i14,i16},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i16},T23)))>(i16=0..2) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i14=0..2)))>(i13=0..2) * Σ(i17=0..2)(i18=0..2)<((((Σ(i20=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23)))>(i20=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i17},T23) * Σ(i20=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20,i0},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i18,i20},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i20,i0},T23))))>(i20=0..2))) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i17=0..2)(i18=0..2))))>(i12=0..2))) / ( Σ(i19=0..2)<((Σ(i21=0..2)<(((Σ(i26=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26},T23) * Σ(i27=0..2)<((Σ(i29=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23)))>(i29=0..2) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i27=0..2)))>(i26=0..2) * Σ(i22=0..2)(i23=0..2)<((((Σ(i25=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23)))>(i25=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22},T23) * Σ(i25=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25,i19},T23))))>(i25=0..2))) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i22=0..2)(i23=0..2)) + (Σ(i22=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i22},T23) * Σ(i23=0..2)<((Σ(i25=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i23,i25},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i25},T23)))>(i25=0..2) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i23=0..2)))>(i22=0..2) * Σ(i26=0..2)(i27=0..2)<((((Σ(i29=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23)))>(i29=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i26},T23) * Σ(i29=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i27,i29},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i29,i19},T23))))>(i29=0..2))) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i26=0..2)(i27=0..2))))>(i21=0..2) * Σ(i30=0..2)<(((Σ(i35=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35},T23) * Σ(i36=0..2)<((Σ(i38=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23)))>(i38=0..2) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i36=0..2)))>(i35=0..2) * Σ(i31=0..2)(i32=0..2)<((((Σ(i34=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23)))>(i34=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31},T23) * Σ(i34=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34,i19},T23))))>(i34=0..2))) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i31=0..2)(i32=0..2)) + (Σ(i31=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i31},T23) * Σ(i32=0..2)<((Σ(i34=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i32,i34},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i34},T23)))>(i34=0..2) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i32=0..2)))>(i31=0..2) * Σ(i35=0..2)(i36=0..2)<((((Σ(i38=0..2)<((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23)))>(i38=0..2) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i35},T23) * Σ(i38=0..2)<(((Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38,i19},T23)) + (Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i36,i38},T23) * Probe(femV(noFunc, 5, 6, 7)⊛Basis()dx_{i38,i19},T23))))>(i38=0..2))) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i35=0..2)(i36=0..2))))>(i30=0..2)))>(i19=0..2)))))>(i0=0..2)))) / ( T81)))>)> (maxAlpha1938,_t1A06,_t1A08,_t1A0A,_t1A08,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,thick193C);
          bool _t1A1E#1 = EQ<real>(_t1A18,_t1A06);
          if _t1A1E then goto SAVE1A22 else goto JOIN1A20
        SAVE1A22:  preds = [COND1A26]
          self.rayN = rayN1972;
          active
          goto JOIN1A20
        JOIN1A20:  preds = [*ACTIVE1A21,COND1A26]
          real _t1A2B#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,INT9,FEM(fns_t)10,FEM(func_t)11,INT12,FEM(fns_t)13,FEM(func_t)14,INT15,FEM(fns_t)16,FEM(func_t)17,INT18,FEM(fns_t)19,FEM(func_t)20,INT21,FEM(fns_t)22,FEM(func_t)23,T24[3],INT25,FEM(fns_t)26,FEM(func_t)27,INT28,FEM(fns_t)29,FEM(func_t)30,INT31,FEM(fns_t)32,FEM(func_t)33,INT34,FEM(fns_t)35,FEM(func_t)36,INT37,FEM(fns_t)38,FEM(func_t)39,INT40,FEM(fns_t)41,FEM(func_t)42,T43[3],INT44,FEM(fns_t)45,FEM(func_t)46,INT47,FEM(fns_t)48,FEM(func_t)49,INT50,FEM(fns_t)51,FEM(func_t)52,INT53,FEM(fns_t)54,FEM(func_t)55,INT56,FEM(fns_t)57,FEM(func_t)58,INT59,FEM(fns_t)60,FEM(func_t)61,T62[3],INT63,FEM(fns_t)64,FEM(func_t)65,INT66,FEM(fns_t)67,FEM(func_t)68,INT69,FEM(fns_t)70,FEM(func_t)71,INT72,FEM(fns_t)73,FEM(func_t)74,INT75,FEM(fns_t)76,FEM(func_t)77,INT78,FEM(fns_t)79,FEM(func_t)80,T81[3],T82[])<(T0) - ((T1 * Clamp <T2,T0,(T4 * (T0) - ((Abs(Sqrt(Σ(i0=0..2)<((Neg(((Σ(i3=0..2)<((Σ(i4=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i4},T24) * Σ(i5=0..2)<((Σ(i7=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i5,i7},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i7},T24)))>(i7=0..2) * Σ(i6=0..3)<((ϵ_{ii6,ii4,ii5} * δ_{i3,i6}))>(i6=0..3)))>(i5=0..2)))>(i4=0..2) * Σ(i8=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i8},T24) * Σ(i9=0..2)<((Σ(i11=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i9,i11},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11},T24)))>(i11=0..2) * Σ(i10=0..3)<((ϵ_{ii10,ii8,ii9} * δ_{i3,i10}))>(i10=0..3)))>(i9=0..2)))>(i8=0..2)))>(i3=0..2) * Σ(i12=0..2)<(((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24) * Σ(i18=0..2)<((Σ(i20=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24)))>(i20=0..2) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i18=0..2)))>(i17=0..2) * Σ(i13=0..2)(i14=0..2)<((((Σ(i16=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24)))>(i16=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24) * Σ(i16=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16,i0},T24))))>(i16=0..2))) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i13=0..2)(i14=0..2)) + (Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24) * Σ(i14=0..2)<((Σ(i16=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24)))>(i16=0..2) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i14=0..2)))>(i13=0..2) * Σ(i17=0..2)(i18=0..2)<((((Σ(i20=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24)))>(i20=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24) * Σ(i20=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i0},T24))))>(i20=0..2))) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i17=0..2)(i18=0..2))))>(i12=0..2))) / ( Σ(i19=0..2)<((Σ(i21=0..2)<(((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Σ(i27=0..2)<((Σ(i29=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24)))>(i29=0..2) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i27=0..2)))>(i26=0..2) * Σ(i22=0..2)(i23=0..2)<((((Σ(i25=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24)))>(i25=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Σ(i25=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25,i19},T24))))>(i25=0..2))) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i22=0..2)(i23=0..2)) + (Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Σ(i23=0..2)<((Σ(i25=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24)))>(i25=0..2) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i23=0..2)))>(i22=0..2) * Σ(i26=0..2)(i27=0..2)<((((Σ(i29=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24)))>(i29=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Σ(i29=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i19},T24))))>(i29=0..2))) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i26=0..2)(i27=0..2))))>(i21=0..2) * Σ(i30=0..2)<(((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Σ(i36=0..2)<((Σ(i38=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24)))>(i38=0..2) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i36=0..2)))>(i35=0..2) * Σ(i31=0..2)(i32=0..2)<((((Σ(i34=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24)))>(i34=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Σ(i34=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34,i19},T24))))>(i34=0..2))) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i31=0..2)(i32=0..2)) + (Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Σ(i32=0..2)<((Σ(i34=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24)))>(i34=0..2) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i32=0..2)))>(i31=0..2) * Σ(i35=0..2)(i36=0..2)<((((Σ(i38=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24)))>(i38=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Σ(i38=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i19},T24))))>(i38=0..2))) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i35=0..2)(i36=0..2))))>(i30=0..2)))>(i19=0..2))) * Neg(((Σ(i3=0..2)<((Σ(i4=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i4},T24) * Σ(i5=0..2)<((Σ(i7=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i5,i7},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i7},T24)))>(i7=0..2) * Σ(i6=0..3)<((ϵ_{ii6,ii4,ii5} * δ_{i3,i6}))>(i6=0..3)))>(i5=0..2)))>(i4=0..2) * Σ(i8=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i8},T24) * Σ(i9=0..2)<((Σ(i11=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i9,i11},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11},T24)))>(i11=0..2) * Σ(i10=0..3)<((ϵ_{ii10,ii8,ii9} * δ_{i3,i10}))>(i10=0..3)))>(i9=0..2)))>(i8=0..2)))>(i3=0..2) * Σ(i12=0..2)<(((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24) * Σ(i18=0..2)<((Σ(i20=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24)))>(i20=0..2) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i18=0..2)))>(i17=0..2) * Σ(i13=0..2)(i14=0..2)<((((Σ(i16=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24)))>(i16=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24) * Σ(i16=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16,i0},T24))))>(i16=0..2))) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i13=0..2)(i14=0..2)) + (Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24) * Σ(i14=0..2)<((Σ(i16=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14,i16},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i16},T24)))>(i16=0..2) * Σ(i15=0..3)<((ϵ_{ii15,ii13,ii14} * δ_{i12,i15}))>(i15=0..3)))>(i14=0..2)))>(i13=0..2) * Σ(i17=0..2)(i18=0..2)<((((Σ(i20=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24)))>(i20=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24) * Σ(i20=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20,i0},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i18,i20},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i0},T24))))>(i20=0..2))) * Σ(i19=0..3)<((ϵ_{ii19,ii17,ii18} * δ_{i12,i19}))>(i19=0..3)))>(i17=0..2)(i18=0..2))))>(i12=0..2))) / ( Σ(i19=0..2)<((Σ(i21=0..2)<(((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Σ(i27=0..2)<((Σ(i29=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24)))>(i29=0..2) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i27=0..2)))>(i26=0..2) * Σ(i22=0..2)(i23=0..2)<((((Σ(i25=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24)))>(i25=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Σ(i25=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25,i19},T24))))>(i25=0..2))) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i22=0..2)(i23=0..2)) + (Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Σ(i23=0..2)<((Σ(i25=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i25},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i25},T24)))>(i25=0..2) * Σ(i24=0..3)<((ϵ_{ii24,ii22,ii23} * δ_{i21,i24}))>(i24=0..3)))>(i23=0..2)))>(i22=0..2) * Σ(i26=0..2)(i27=0..2)<((((Σ(i29=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24)))>(i29=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Σ(i29=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i27,i29},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i19},T24))))>(i29=0..2))) * Σ(i28=0..3)<((ϵ_{ii28,ii26,ii27} * δ_{i21,i28}))>(i28=0..3)))>(i26=0..2)(i27=0..2))))>(i21=0..2) * Σ(i30=0..2)<(((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Σ(i36=0..2)<((Σ(i38=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24)))>(i38=0..2) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i36=0..2)))>(i35=0..2) * Σ(i31=0..2)(i32=0..2)<((((Σ(i34=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24)))>(i34=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Σ(i34=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34,i19},T24))))>(i34=0..2))) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i31=0..2)(i32=0..2)) + (Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Σ(i32=0..2)<((Σ(i34=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i34},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i34},T24)))>(i34=0..2) * Σ(i33=0..3)<((ϵ_{ii33,ii31,ii32} * δ_{i30,i33}))>(i33=0..3)))>(i32=0..2)))>(i31=0..2) * Σ(i35=0..2)(i36=0..2)<((((Σ(i38=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24)))>(i38=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Σ(i38=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38,i19},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i36,i38},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i19},T24))))>(i38=0..2))) * Σ(i37=0..3)<((ϵ_{ii37,ii35,ii36} * δ_{i30,i37}))>(i37=0..3)))>(i35=0..2)(i36=0..2))))>(i30=0..2)))>(i19=0..2)))))>(i0=0..2)))) / ( T82)))>))> (_t1A08,maxAlpha1938,_t1A06,_t1A08,_t1A0A,_t1A08,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,thick193C);
          real _t1A2D#2 = MathFn<pow>(_t1A2B,alphaFix1958);
          bool _t1A3F#1 = NEQ<real>(phKs195C,_t1A06);
          if _t1A3F then goto ASSIGN1B75 else goto JOIN1A41
        ASSIGN1B75:  preds = [COND1A4D]
          real _t1A48#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,INT3,FEM(fns_t)4,FEM(func_t)5,INT6,FEM(fns_t)7,FEM(func_t)8,INT9,FEM(fns_t)10,FEM(func_t)11,INT12,FEM(fns_t)13,FEM(func_t)14,INT15,FEM(fns_t)16,FEM(func_t)17,T18[3],INT19,FEM(fns_t)20,FEM(func_t)21,INT22,FEM(fns_t)23,FEM(func_t)24,INT25,FEM(fns_t)26,FEM(func_t)27,INT28,FEM(fns_t)29,FEM(func_t)30,INT31,FEM(fns_t)32,FEM(func_t)33,INT34,FEM(fns_t)35,FEM(func_t)36,T37[3],INT38,FEM(fns_t)39,FEM(func_t)40,INT41,FEM(fns_t)42,FEM(func_t)43,INT44,FEM(fns_t)45,FEM(func_t)46,INT47,FEM(fns_t)48,FEM(func_t)49,INT50,FEM(fns_t)51,FEM(func_t)52,INT53,FEM(fns_t)54,FEM(func_t)55,T56[3],INT57,FEM(fns_t)58,FEM(func_t)59,INT60,FEM(fns_t)61,FEM(func_t)62,INT63,FEM(fns_t)64,FEM(func_t)65,INT66,FEM(fns_t)67,FEM(func_t)68,INT69,FEM(fns_t)70,FEM(func_t)71,INT72,FEM(fns_t)73,FEM(func_t)74,T75[3],INT76,FEM(fns_t)77,FEM(func_t)78,INT79,FEM(fns_t)80,FEM(func_t)81,INT82,FEM(fns_t)83,FEM(func_t)84,INT85,FEM(fns_t)86,FEM(func_t)87,INT88,FEM(fns_t)89,FEM(func_t)90,INT91,FEM(fns_t)92,FEM(func_t)93,T94[3],INT95,FEM(fns_t)96,FEM(func_t)97,INT98,FEM(fns_t)99,FEM(func_t)100,INT101,FEM(fns_t)102,FEM(func_t)103,INT104,FEM(fns_t)105,FEM(func_t)106,INT107,FEM(fns_t)108,FEM(func_t)109,INT110,FEM(fns_t)111,FEM(func_t)112,T113[3],INT114,FEM(fns_t)115,FEM(func_t)116,INT117,FEM(fns_t)118,FEM(func_t)119,INT120,FEM(fns_t)121,FEM(func_t)122,INT123,FEM(fns_t)124,FEM(func_t)125,INT126,FEM(fns_t)127,FEM(func_t)128,INT129,FEM(fns_t)130,FEM(func_t)131,T132[3],INT133,FEM(fns_t)134,FEM(func_t)135,INT136,FEM(fns_t)137,FEM(func_t)138,INT139,FEM(fns_t)140,FEM(func_t)141,INT142,FEM(fns_t)143,FEM(func_t)144,INT145,FEM(fns_t)146,FEM(func_t)147,INT148,FEM(fns_t)149,FEM(func_t)150,T151[3],T152[3],T153[3],T154[3],T155[3])<Abs(Σ(i0=0..2)<((Neg((Neg(((Σ(i5=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Σ(i7=0..2)<((Σ(i9=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i9},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i9},T18)))>(i9=0..2) * Σ(i8=0..3)<((ϵ_{ii8,ii6,ii7} * δ_{i5,i8}))>(i8=0..3)))>(i7=0..2)))>(i6=0..2) * Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i11,i13},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i13},T18)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i5,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2)))>(i5=0..2) * Σ(i14=0..2)<(((Σ(i19=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i15=0..2)(i16=0..2)<((((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i18=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18,i0},T18))))>(i18=0..2))) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i15=0..2)(i16=0..2)) + (Σ(i15=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i16=0..2)<((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i16=0..2)))>(i15=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i22=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22,i0},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22,i0},T18))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2))))>(i14=0..2))) / ( Σ(i21=0..2)<((Σ(i23=0..2)<(((Σ(i28=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i24=0..2)(i25=0..2)<((((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i27=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27,i21},T18))))>(i27=0..2))) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i24=0..2)(i25=0..2)) + (Σ(i24=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i25=0..2)<((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i25=0..2)))>(i24=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i31=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31,i21},T18))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2))))>(i23=0..2) * Σ(i32=0..2)<(((Σ(i37=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i33=0..2)(i34=0..2)<((((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i36=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36,i21},T18))))>(i36=0..2))) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i33=0..2)(i34=0..2)) + (Σ(i33=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i34=0..2)<((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i34=0..2)))>(i33=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i40=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40,i21},T18))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2))))>(i32=0..2)))>(i21=0..2))) * (1) / ( Sqrt(Σ(i2=0..2)<((Neg(((Σ(i5=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Σ(i7=0..2)<((Σ(i9=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i9},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i9},T18)))>(i9=0..2) * Σ(i8=0..3)<((ϵ_{ii8,ii6,ii7} * δ_{i5,i8}))>(i8=0..3)))>(i7=0..2)))>(i6=0..2) * Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i11,i13},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i13},T18)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i5,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2)))>(i5=0..2) * Σ(i14=0..2)<(((Σ(i19=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i15=0..2)(i16=0..2)<((((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i18=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18,i2},T18))))>(i18=0..2))) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i15=0..2)(i16=0..2)) + (Σ(i15=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i16=0..2)<((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i16=0..2)))>(i15=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i22=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22,i2},T18))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2))))>(i14=0..2))) / ( Σ(i21=0..2)<((Σ(i23=0..2)<(((Σ(i28=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i24=0..2)(i25=0..2)<((((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i27=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27,i21},T18))))>(i27=0..2))) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i24=0..2)(i25=0..2)) + (Σ(i24=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i25=0..2)<((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i25=0..2)))>(i24=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i31=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31,i21},T18))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2))))>(i23=0..2) * Σ(i32=0..2)<(((Σ(i37=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i33=0..2)(i34=0..2)<((((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i36=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36,i21},T18))))>(i36=0..2))) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i33=0..2)(i34=0..2)) + (Σ(i33=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i34=0..2)<((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i34=0..2)))>(i33=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i40=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40,i21},T18))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2))))>(i32=0..2)))>(i21=0..2))) * Neg(((Σ(i5=0..2)<((Σ(i6=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i6},T18) * Σ(i7=0..2)<((Σ(i9=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i7,i9},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i9},T18)))>(i9=0..2) * Σ(i8=0..3)<((ϵ_{ii8,ii6,ii7} * δ_{i5,i8}))>(i8=0..3)))>(i7=0..2)))>(i6=0..2) * Σ(i10=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i10},T18) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i11,i13},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i13},T18)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i5,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2)))>(i5=0..2) * Σ(i14=0..2)<(((Σ(i19=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i15=0..2)(i16=0..2)<((((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i18=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18,i2},T18))))>(i18=0..2))) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i15=0..2)(i16=0..2)) + (Σ(i15=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i15},T18) * Σ(i16=0..2)<((Σ(i18=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i16,i18},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i18},T18)))>(i18=0..2) * Σ(i17=0..3)<((ϵ_{ii17,ii15,ii16} * δ_{i14,i17}))>(i17=0..3)))>(i16=0..2)))>(i15=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18)))>(i22=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i19},T18) * Σ(i22=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22,i2},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i20,i22},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i22,i2},T18))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i14,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2))))>(i14=0..2))) / ( Σ(i21=0..2)<((Σ(i23=0..2)<(((Σ(i28=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i24=0..2)(i25=0..2)<((((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i27=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27,i21},T18))))>(i27=0..2))) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i24=0..2)(i25=0..2)) + (Σ(i24=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i24},T18) * Σ(i25=0..2)<((Σ(i27=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i25,i27},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i27},T18)))>(i27=0..2) * Σ(i26=0..3)<((ϵ_{ii26,ii24,ii25} * δ_{i23,i26}))>(i26=0..3)))>(i25=0..2)))>(i24=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18)))>(i31=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i28},T18) * Σ(i31=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i29,i31},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i31,i21},T18))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i23,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2))))>(i23=0..2) * Σ(i32=0..2)<(((Σ(i37=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i33=0..2)(i34=0..2)<((((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i36=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36,i21},T18))))>(i36=0..2))) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i33=0..2)(i34=0..2)) + (Σ(i33=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i33},T18) * Σ(i34=0..2)<((Σ(i36=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i34,i36},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i36},T18)))>(i36=0..2) * Σ(i35=0..3)<((ϵ_{ii35,ii33,ii34} * δ_{i32,i35}))>(i35=0..3)))>(i34=0..2)))>(i33=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18)))>(i40=0..2) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i37},T18) * Σ(i40=0..2)<(((Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40,i21},T18)) + (Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i38,i40},T18) * Probe(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i40,i21},T18))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i32,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2))))>(i32=0..2)))>(i21=0..2)))))>(i2=0..2))))) * (T152_{i0} + T153_{i0}) * (1) / ( Sqrt(Σ(i40=0..2)<(((T152_{i40} + T153_{i40}) * (T152_{i40} + T153_{i40})))>(i40=0..2)))))>(i0=0..2))> (_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,eyeDir1959,litwsp192E,eyeDir1959,litwsp192E);
          real scomp1A4A#1 = MathFn<pow>(_t1A48,phSp195D);
          goto JOIN1A41
        JOIN1A41:  preds = [ASSIGN1A4C,COND1A4D]
          real scomp1A4B#1 = phi(scomp1A4A,_t1A06)
          real cmin1A50#2 = TensorIndex<tensor[2],[0]>(cminmax1935);
          real cmax1A52#2 = TensorIndex<tensor[2],[1]>(cminmax1935);
          tensor[3] mcol1A5A#2 = <tensor[3]>[_t1A08,_t1A08,_t1A08];
          bool _t1A5C#1 = NEQ<real>(cmin1A50,cmax1A52);
          if _t1A5C then goto ASSIGN1B76 else goto JOIN1A5E
        ASSIGN1B76:  preds = [COND1A6C]
          tensor[3] _t1A63#1 = λ(T0[3],T1[],T2[],T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,INT7,FEM(fns_t)8,FEM(func_t)9,INT10,FEM(fns_t)11,FEM(func_t)12,INT13,FEM(fns_t)14,FEM(func_t)15,INT16,FEM(fns_t)17,FEM(func_t)18,INT19,FEM(fns_t)20,FEM(func_t)21,T22[3],INT23,FEM(fns_t)24,FEM(func_t)25,INT26,FEM(fns_t)27,FEM(func_t)28,INT29,FEM(fns_t)30,FEM(func_t)31,INT32,FEM(fns_t)33,FEM(func_t)34,INT35,FEM(fns_t)36,FEM(func_t)37,INT38,FEM(fns_t)39,FEM(func_t)40,T41[3],INT42,FEM(fns_t)43,FEM(func_t)44,INT45,FEM(fns_t)46,FEM(func_t)47,INT48,FEM(fns_t)49,FEM(func_t)50,INT51,FEM(fns_t)52,FEM(func_t)53,INT54,FEM(fns_t)55,FEM(func_t)56,INT57,FEM(fns_t)58,FEM(func_t)59,T60[3],INT61,FEM(fns_t)62,FEM(func_t)63,INT64,FEM(fns_t)65,FEM(func_t)66,INT67,FEM(fns_t)68,FEM(func_t)69,INT70,FEM(fns_t)71,FEM(func_t)72,INT73,FEM(fns_t)74,FEM(func_t)75,INT76,FEM(fns_t)77,FEM(func_t)78,T79[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}) + Neg(((Σ(i4=0..2)<((Σ(i5=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i5},T22) * Σ(i6=0..2)<((Σ(i8=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i6,i8},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i8},T22)))>(i8=0..2) * Σ(i7=0..3)<((ϵ_{ii7,ii5,ii6} * δ_{i4,i7}))>(i7=0..3)))>(i6=0..2)))>(i5=0..2) * Σ(i9=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i9},T22) * Σ(i10=0..2)<((Σ(i12=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i10,i12},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i12},T22)))>(i12=0..2) * Σ(i11=0..3)<((ϵ_{ii11,ii9,ii10} * δ_{i4,i11}))>(i11=0..3)))>(i10=0..2)))>(i9=0..2)))>(i4=0..2) * Σ(i13=0..2)<(((Σ(i18=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i18},T22) * Σ(i19=0..2)<((Σ(i21=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i19,i21},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i21},T22)))>(i21=0..2) * Σ(i20=0..3)<((ϵ_{ii20,ii18,ii19} * δ_{i13,i20}))>(i20=0..3)))>(i19=0..2)))>(i18=0..2) * Σ(i14=0..2)(i15=0..2)<((((Σ(i17=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i15,i17},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i17},T22)))>(i17=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i14,i0},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i14},T22) * Σ(i17=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i17},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i15,i17,i0},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i15,i17},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i17,i0},T22))))>(i17=0..2))) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i13,i16}))>(i16=0..3)))>(i14=0..2)(i15=0..2)) + (Σ(i14=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i14},T22) * Σ(i15=0..2)<((Σ(i17=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i15,i17},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i17},T22)))>(i17=0..2) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i13,i16}))>(i16=0..3)))>(i15=0..2)))>(i14=0..2) * Σ(i18=0..2)(i19=0..2)<((((Σ(i21=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i19,i21},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i21},T22)))>(i21=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i18,i0},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i18},T22) * Σ(i21=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i21},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i19,i21,i0},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i19,i21},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i21,i0},T22))))>(i21=0..2))) * Σ(i20=0..3)<((ϵ_{ii20,ii18,ii19} * δ_{i13,i20}))>(i20=0..3)))>(i18=0..2)(i19=0..2))))>(i13=0..2))) / ( Σ(i20=0..2)<((Σ(i22=0..2)<(((Σ(i27=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i27},T22) * Σ(i28=0..2)<((Σ(i30=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i28,i30},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i30},T22)))>(i30=0..2) * Σ(i29=0..3)<((ϵ_{ii29,ii27,ii28} * δ_{i22,i29}))>(i29=0..3)))>(i28=0..2)))>(i27=0..2) * Σ(i23=0..2)(i24=0..2)<((((Σ(i26=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i24,i26},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i26},T22)))>(i26=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i23,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i23},T22) * Σ(i26=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i26},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i24,i26,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i24,i26},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i26,i20},T22))))>(i26=0..2))) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i22,i25}))>(i25=0..3)))>(i23=0..2)(i24=0..2)) + (Σ(i23=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i23},T22) * Σ(i24=0..2)<((Σ(i26=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i24,i26},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i26},T22)))>(i26=0..2) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i22,i25}))>(i25=0..3)))>(i24=0..2)))>(i23=0..2) * Σ(i27=0..2)(i28=0..2)<((((Σ(i30=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i28,i30},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i30},T22)))>(i30=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i27,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i27},T22) * Σ(i30=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i30},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i28,i30,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i28,i30},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i30,i20},T22))))>(i30=0..2))) * Σ(i29=0..3)<((ϵ_{ii29,ii27,ii28} * δ_{i22,i29}))>(i29=0..3)))>(i27=0..2)(i28=0..2))))>(i22=0..2) * Σ(i31=0..2)<(((Σ(i36=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i36},T22) * Σ(i37=0..2)<((Σ(i39=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i37,i39},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i39},T22)))>(i39=0..2) * Σ(i38=0..3)<((ϵ_{ii38,ii36,ii37} * δ_{i31,i38}))>(i38=0..3)))>(i37=0..2)))>(i36=0..2) * Σ(i32=0..2)(i33=0..2)<((((Σ(i35=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i33,i35},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i35},T22)))>(i35=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i32,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i32},T22) * Σ(i35=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i35},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i33,i35,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i33,i35},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i35,i20},T22))))>(i35=0..2))) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i31,i34}))>(i34=0..3)))>(i32=0..2)(i33=0..2)) + (Σ(i32=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i32},T22) * Σ(i33=0..2)<((Σ(i35=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i33,i35},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i35},T22)))>(i35=0..2) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i31,i34}))>(i34=0..3)))>(i33=0..2)))>(i32=0..2) * Σ(i36=0..2)(i37=0..2)<((((Σ(i39=0..2)<((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i37,i39},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i39},T22)))>(i39=0..2) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i36,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i36},T22) * Σ(i39=0..2)<(((Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i39},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i37,i39,i20},T22)) + (Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i37,i39},T22) * Probe(femV(noFunc, 4, 5, 6)⊛Basis()dx_{i39,i20},T22))))>(i39=0..2))) * Σ(i38=0..3)<((ϵ_{ii38,ii36,ii37} * δ_{i31,i38}))>(i38=0..3)))>(i36=0..2)(i37=0..2))))>(i31=0..2)))>(i20=0..2))))>_{3} (rayOrig1956,rayN1954,rayStep193E,rayVec1957,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F);
          real _t1A67#1 = λ(T0[],T1[],T2[],INT3,FEM(fns_t)4,FEM(func_t)5,T6[3],T7[])<(T0 + (((Probe(femV(noFunc, 3, 4, 5)⊛Basis(),T6)) - (T2)) / ( (T7) - (T2)) * (T1) - (T0)))> (_t1A06,_t1A08,cmin1A50,_t1B69,_t1B6C,_t1B6F,_t1A63,cmax1A52);
          tensor[3] mcol1A69#1 = λ(V0(1)[3],H1,T2[1])<Probe(V0_{i0}⊛H1,T2)>_{3} (img1B7A,_t1B7D,_t1A67);
          goto JOIN1A5E
        JOIN1A5E:  preds = [ASSIGN1B7E,COND1A6C]
          tensor[3] mcol1A6A#1 = phi(mcol1A69,mcol1A5A)
          tensor[3] rgb1A87#2 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],INT6,FEM(fns_t)7,FEM(func_t)8,INT9,FEM(fns_t)10,FEM(func_t)11,INT12,FEM(fns_t)13,FEM(func_t)14,INT15,FEM(fns_t)16,FEM(func_t)17,INT18,FEM(fns_t)19,FEM(func_t)20,INT21,FEM(fns_t)22,FEM(func_t)23,T24[3],INT25,FEM(fns_t)26,FEM(func_t)27,INT28,FEM(fns_t)29,FEM(func_t)30,INT31,FEM(fns_t)32,FEM(func_t)33,INT34,FEM(fns_t)35,FEM(func_t)36,INT37,FEM(fns_t)38,FEM(func_t)39,INT40,FEM(fns_t)41,FEM(func_t)42,T43[3],INT44,FEM(fns_t)45,FEM(func_t)46,INT47,FEM(fns_t)48,FEM(func_t)49,INT50,FEM(fns_t)51,FEM(func_t)52,INT53,FEM(fns_t)54,FEM(func_t)55,INT56,FEM(fns_t)57,FEM(func_t)58,INT59,FEM(fns_t)60,FEM(func_t)61,T62[3],INT63,FEM(fns_t)64,FEM(func_t)65,INT66,FEM(fns_t)67,FEM(func_t)68,INT69,FEM(fns_t)70,FEM(func_t)71,INT72,FEM(fns_t)73,FEM(func_t)74,INT75,FEM(fns_t)76,FEM(func_t)77,INT78,FEM(fns_t)79,FEM(func_t)80,T81[3],INT82,FEM(fns_t)83,FEM(func_t)84,INT85,FEM(fns_t)86,FEM(func_t)87,INT88,FEM(fns_t)89,FEM(func_t)90,INT91,FEM(fns_t)92,FEM(func_t)93,INT94,FEM(fns_t)95,FEM(func_t)96,INT97,FEM(fns_t)98,FEM(func_t)99,T100[3],INT101,FEM(fns_t)102,FEM(func_t)103,INT104,FEM(fns_t)105,FEM(func_t)106,INT107,FEM(fns_t)108,FEM(func_t)109,INT110,FEM(fns_t)111,FEM(func_t)112,INT113,FEM(fns_t)114,FEM(func_t)115,INT116,FEM(fns_t)117,FEM(func_t)118,T119[3],INT120,FEM(fns_t)121,FEM(func_t)122,INT123,FEM(fns_t)124,FEM(func_t)125,INT126,FEM(fns_t)127,FEM(func_t)128,INT129,FEM(fns_t)130,FEM(func_t)131,INT132,FEM(fns_t)133,FEM(func_t)134,INT135,FEM(fns_t)136,FEM(func_t)137,T138[3],INT139,FEM(fns_t)140,FEM(func_t)141,INT142,FEM(fns_t)143,FEM(func_t)144,INT145,FEM(fns_t)146,FEM(func_t)147,INT148,FEM(fns_t)149,FEM(func_t)150,INT151,FEM(fns_t)152,FEM(func_t)153,INT154,FEM(fns_t)155,FEM(func_t)156,T157[3],T158[3],T159[3],T160[3],T161[],T162[],T163[],T164[],T165[3],T166[],T167[],T168[3])<(T0_{i0} + (T1 * (T2) - (T3) * (((T4 + (T5 * (Σ(i4=0..2)<((Neg((Neg(((Σ(i9=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i10},T24) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11,i13},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i9,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2) * Σ(i14=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14},T24) * Σ(i15=0..2)<((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i15,i17},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24)))>(i17=0..2) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i9,i16}))>(i16=0..3)))>(i15=0..2)))>(i14=0..2)))>(i9=0..2) * Σ(i18=0..2)<(((Σ(i23=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i24=0..2)<((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i24=0..2)))>(i23=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19,i4},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i22=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22,i4},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i4},T24))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2)) + (Σ(i19=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i23=0..2)(i24=0..2)<((((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i4},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i26=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26,i4},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i4},T24))))>(i26=0..2))) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i23=0..2)(i24=0..2))))>(i18=0..2))) / ( Σ(i25=0..2)<((Σ(i27=0..2)<(((Σ(i32=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i33=0..2)<((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i33=0..2)))>(i32=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i31=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i25},T24))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2)) + (Σ(i28=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i32=0..2)(i33=0..2)<((((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i35=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i25},T24))))>(i35=0..2))) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i32=0..2)(i33=0..2))))>(i27=0..2) * Σ(i36=0..2)<(((Σ(i41=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i42=0..2)<((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i42=0..2)))>(i41=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i40=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40,i25},T24))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2)) + (Σ(i37=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i41=0..2)(i42=0..2)<((((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i44=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44,i25},T24))))>(i44=0..2))) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i41=0..2)(i42=0..2))))>(i36=0..2)))>(i25=0..2))) * (1) / ( Sqrt(Σ(i6=0..2)<((Neg(((Σ(i9=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i10},T24) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11,i13},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i9,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2) * Σ(i14=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14},T24) * Σ(i15=0..2)<((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i15,i17},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24)))>(i17=0..2) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i9,i16}))>(i16=0..3)))>(i15=0..2)))>(i14=0..2)))>(i9=0..2) * Σ(i18=0..2)<(((Σ(i23=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i24=0..2)<((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i24=0..2)))>(i23=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i22=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i6},T24))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2)) + (Σ(i19=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i23=0..2)(i24=0..2)<((((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i26=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i6},T24))))>(i26=0..2))) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i23=0..2)(i24=0..2))))>(i18=0..2))) / ( Σ(i25=0..2)<((Σ(i27=0..2)<(((Σ(i32=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i33=0..2)<((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i33=0..2)))>(i32=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i31=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i25},T24))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2)) + (Σ(i28=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i32=0..2)(i33=0..2)<((((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i35=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i25},T24))))>(i35=0..2))) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i32=0..2)(i33=0..2))))>(i27=0..2) * Σ(i36=0..2)<(((Σ(i41=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i42=0..2)<((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i42=0..2)))>(i41=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i40=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40,i25},T24))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2)) + (Σ(i37=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i41=0..2)(i42=0..2)<((((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i44=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44,i25},T24))))>(i44=0..2))) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i41=0..2)(i42=0..2))))>(i36=0..2)))>(i25=0..2))) * Neg(((Σ(i9=0..2)<((Σ(i10=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i10},T24) * Σ(i11=0..2)<((Σ(i13=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i11,i13},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i13},T24)))>(i13=0..2) * Σ(i12=0..3)<((ϵ_{ii12,ii10,ii11} * δ_{i9,i12}))>(i12=0..3)))>(i11=0..2)))>(i10=0..2) * Σ(i14=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i14},T24) * Σ(i15=0..2)<((Σ(i17=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i15,i17},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i17},T24)))>(i17=0..2) * Σ(i16=0..3)<((ϵ_{ii16,ii14,ii15} * δ_{i9,i16}))>(i16=0..3)))>(i15=0..2)))>(i14=0..2)))>(i9=0..2) * Σ(i18=0..2)<(((Σ(i23=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i24=0..2)<((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i24=0..2)))>(i23=0..2) * Σ(i19=0..2)(i20=0..2)<((((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i22=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22,i6},T24))))>(i22=0..2))) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i19=0..2)(i20=0..2)) + (Σ(i19=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i19},T24) * Σ(i20=0..2)<((Σ(i22=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i20,i22},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i22},T24)))>(i22=0..2) * Σ(i21=0..3)<((ϵ_{ii21,ii19,ii20} * δ_{i18,i21}))>(i21=0..3)))>(i20=0..2)))>(i19=0..2) * Σ(i23=0..2)(i24=0..2)<((((Σ(i26=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24)))>(i26=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i23},T24) * Σ(i26=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26,i6},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i24,i26},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i26,i6},T24))))>(i26=0..2))) * Σ(i25=0..3)<((ϵ_{ii25,ii23,ii24} * δ_{i18,i25}))>(i25=0..3)))>(i23=0..2)(i24=0..2))))>(i18=0..2))) / ( Σ(i25=0..2)<((Σ(i27=0..2)<(((Σ(i32=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i33=0..2)<((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i33=0..2)))>(i32=0..2) * Σ(i28=0..2)(i29=0..2)<((((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i31=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31,i25},T24))))>(i31=0..2))) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i28=0..2)(i29=0..2)) + (Σ(i28=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i28},T24) * Σ(i29=0..2)<((Σ(i31=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i29,i31},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i31},T24)))>(i31=0..2) * Σ(i30=0..3)<((ϵ_{ii30,ii28,ii29} * δ_{i27,i30}))>(i30=0..3)))>(i29=0..2)))>(i28=0..2) * Σ(i32=0..2)(i33=0..2)<((((Σ(i35=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24)))>(i35=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i32},T24) * Σ(i35=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i33,i35},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i35,i25},T24))))>(i35=0..2))) * Σ(i34=0..3)<((ϵ_{ii34,ii32,ii33} * δ_{i27,i34}))>(i34=0..3)))>(i32=0..2)(i33=0..2))))>(i27=0..2) * Σ(i36=0..2)<(((Σ(i41=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i42=0..2)<((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i42=0..2)))>(i41=0..2) * Σ(i37=0..2)(i38=0..2)<((((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i40=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40,i25},T24))))>(i40=0..2))) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i37=0..2)(i38=0..2)) + (Σ(i37=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i37},T24) * Σ(i38=0..2)<((Σ(i40=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i38,i40},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i40},T24)))>(i40=0..2) * Σ(i39=0..3)<((ϵ_{ii39,ii37,ii38} * δ_{i36,i39}))>(i39=0..3)))>(i38=0..2)))>(i37=0..2) * Σ(i41=0..2)(i42=0..2)<((((Σ(i44=0..2)<((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24)))>(i44=0..2) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i41},T24) * Σ(i44=0..2)<(((Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44,i25},T24)) + (Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i42,i44},T24) * Probe(femV(noFunc, 6, 7, 8)⊛Basis()dx_{i44,i25},T24))))>(i44=0..2))) * Σ(i43=0..3)<((ϵ_{ii43,ii41,ii42} * δ_{i36,i43}))>(i43=0..3)))>(i41=0..2)(i42=0..2))))>(i36=0..2)))>(i25=0..2)))))>(i6=0..2))))) * T158_{i4}))>(i4=0..2))^2)) * (T159_{i0} + ((((T162 + T163)) - (T161)) / ( (T164) - (T161)) * (T160_{i0}) - (T159_{i0}))) * T165_{i0}) + (T166 * T167 * T168_{i0}))))>_{3} (rgb1960,transp1961,_t1A08,_t1A2D,phKa195A,phKd195B,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,_t1B69,_t1B6C,_t1B6F,pos197F,litwsp192E,mcNear1937,mcFar1936,camNearVsp1930,rayN1954,rayStep193E,camFarVsp192F,mcol1A6A,phKs195C,scomp1A4B,mcol1A5A);
          real transp1A8D#2 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp1961,_t1A08,_t1A08,_t1A2D);
          bool _t1A8F#1 = LT<real>(transp1A8D,transp0193D);
          if _t1A8F then goto SAVE1A96 else goto JOIN1A91
        SAVE1A96:  preds = [COND1A9A]
          self.rayN = rayN1972;
          self.rgb = rgb1A87;
          self.transp = _t1A06;
          stabilize
          goto JOIN1A91
        JOIN1A91:  preds = [*STABILIZE1A95,COND1A9A]
          real transp1A93#1 = phi(transp1A8D)
          self.rayN = rayN1972;
          self.rgb = rgb1A87;
          self.transp = transp1A93;
          active
        ASSIGN19CB:  preds = [COND19CC]
          bool _t19CA#1 = false;
          goto JOIN19C4
        ASSIGN19D1:  preds = [COND19D2]
          bool _t19D0#1 = false;
          goto JOIN19B5
        ASSIGN19D7:  preds = [COND19D8]
          bool _t19D6#1 = false;
          goto JOIN19AC
        ASSIGN19DD:  preds = [COND19DE]
          bool _t19DC#1 = false;
          goto JOIN198C
    end update
    method stabilize
        ENTRY1ADA:  preds = []
          tensor[4] rgba1AAD#1 = self.rgba;
          tensor[3] rgb1AAF#3 = self.rgb;
          real transp1AB0#5 = self.transp;
          real _t1AC1#5 = 0.1e1;
          bool _t1AC3#1 = LT<real>(transp1AB0,_t1AC1);
          if _t1AC3 then goto ASSIGN1B14 else goto JOIN1AC5
        ASSIGN1B14:  preds = [COND1AD9]
          real aa1AC8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1AC1,transp1AB0);
          real _t1ACA#1 = TensorIndex<tensor[3],[0]>(rgb1AAF);
          real _t1ACC#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1ACA,_t1AC1,transp1AB0);
          real _t1ACE#1 = TensorIndex<tensor[3],[1]>(rgb1AAF);
          real _t1AD0#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1ACE,_t1AC1,transp1AB0);
          real _t1AD2#1 = TensorIndex<tensor[3],[2]>(rgb1AAF);
          real _t1AD4#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1AD2,_t1AC1,transp1AB0);
          tensor[4] rgba1AD6#1 = <tensor[4]>[_t1ACC,_t1AD0,_t1AD4,aa1AC8];
          goto JOIN1AC5
        JOIN1AC5:  preds = [ASSIGN1AD8,COND1AD9]
          tensor[4] rgba1AD7#1 = phi(rgba1AD6,rgba1AAD)
          self.rgba = rgba1AD7;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY1870:  preds = []
      int iresU1856#1 = globals.iresU16FB;
      int iresV1855#1 = globals.iresV16FC;
      int _t1859#2 = 0;
      int _t185B#2 = 1;
      int _t185D#1 = ISub(iresV1855,_t185B);
      int[] _t185F#1 = Range(_t1859,_t185D);
    FOREACH1862:  preds = [ASSIGN1860,NEXT186F]
      foreach (vi1861 in _t185F) on exit goto RETURN1871
      int _t1867#1 = ISub(iresU1856,_t185B);
      int[] _t1869#1 = Range(_t1859,_t1867);
    FOREACH186C:  preds = [ASSIGN1AE1,NEXT186E]
      foreach (ui186B in _t1869) on exit goto NEXT186F
      new ray(ui186B,vi1861);
      goto FOREACH186C
    NEXT186F:  preds = [FOREACH186C]
      goto FOREACH1862
    RETURN1871:  preds = [FOREACH1862]
      return
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1B8A (block) = <no-default>
  input 0space04D7_intermedateGlobal1B8B (space) = <no-default>
  input 0U04D9_intermedateGlobal1B8C (U) = <no-default>
  input cellChoice1B8D (cellChoice) = <no-default>
  input cmap1B8E (cmap) = image("cmap.nrrd")
  input camEye1B8F (camEye) = <default>
  input camAt1B90 (camAt) = <default>
  input camUp1B91 (camUp) = <default>
  input camNear1B92 (camNear) = <default>
  input camFar1B93 (camFar) = <default>
  input camFOV1B94 (camFOV) = <default>
  input camOrtho1B95 (camOrtho) = <default>
  input iresU1B96 (iresU) = <default>
  input iresV1B97 (iresV) = <default>
  input rayStep1B98 (rayStep) = <default>
  input refStep1B99 (refStep) = <default>
  input transp01B9A (transp0) = <default>
  input thick1B9B (thick) = <default>
  input fStrTh1B9C (fStrTh) = <default>
  input fMaskTh1B9D (fMaskTh) = <default>
  input fBias1B9E (fBias) = <default>
  input maxAlpha1B9F (maxAlpha) = <default>
  input light1BA0 (light) = <default>
  input phong1BA1 (phong) = <default>
  input mcNear1BA2 (mcNear) = <default>
  input mcFar1BA3 (mcFar) = <default>
  input litdir1BA4 (litdir) = <default>
  input cminmax1BA5 (cminmax) = <default>
  global tensor[3] camN1BA6
  global tensor[3] camU1BA7
  global tensor[3] camV1BA8
  global real camDist1BA9
  global real camVmax1BAA
  global real camUmax1BAB
  global real camNearVsp1BAC
  global real camFarVsp1BAD
  global tensor[3] litwsp1BAE
  global int _t1BAF
  global femData:Space _tX1BB0
  global femData:FemFunc _tXX1BB1
  global image(IMAGE1D<double[3]>) img1BB2
  global kernel _tXXX1BB3
## functions
## input initialization
  ENTRY1BB4:  preds = []
    real _t1BB5#13 = 0.e0;
    real _t1BB7#1 = -0.2e1;
    tensor[3] camEye1BB9#1 = <tensor[3]>[_t1BB5,_t1BB7,_t1BB5];
    globals.camEye1B8F = camEye1BB9;
    tensor[3] camAt1BBC#1 = <tensor[3]>[_t1BB5,_t1BB5,_t1BB5];
    globals.camAt1B90 = camAt1BBC;
    real _t1BBF#5 = 0.1e1;
    tensor[3] camUp1BC1#1 = <tensor[3]>[_t1BB5,_t1BB5,_t1BBF];
    globals.camUp1B91 = camUp1BC1;
    real camNear1BC4#1 = -0.4e1;
    globals.camNear1B92 = camNear1BC4;
    real camFar1BC7#1 = 0.4e1;
    globals.camFar1B93 = camFar1BC7;
    real camFOV1BCA#1 = 0.1e2;
    globals.camFOV1B94 = camFOV1BCA;
    bool camOrtho1BCD#2 = false;
    globals.camOrtho1B95 = camOrtho1BCD;
    int iresU1BD0#2 = 100;
    globals.iresU1B96 = iresU1BD0;
    globals.iresV1B97 = iresU1BD0;
    real rayStep1BD4#2 = 0.1e-3;
    globals.rayStep1B98 = rayStep1BD4;
    globals.refStep1B99 = rayStep1BD4;
    real transp01BD8#1 = 0.5e-2;
    globals.transp01B9A = transp01BD8;
    real thick1BDB#1 = 0.1e-1;
    globals.thick1B9B = thick1BDB;
    globals.fStrTh1B9C = _t1BB5;
    globals.fMaskTh1B9D = _t1BB5;
    real fBias1BE0#2 = 0.1e0;
    globals.fBias1B9E = fBias1BE0;
    globals.maxAlpha1B9F = _t1BBF;
    globals.light1BA0 = camOrtho1BCD;
    real _t1BE5#1 = 0.7e0;
    real _t1BE7#1 = 0.2e0;
    real _t1BE9#1 = 0.1e3;
    tensor[4] phong1BEB#1 = <tensor[4]>[fBias1BE0,_t1BE5,_t1BE7,_t1BE9];
    globals.phong1BA1 = phong1BEB;
    tensor[3] mcNear1BEE#2 = <tensor[3]>[_t1BBF,_t1BBF,_t1BBF];
    globals.mcNear1BA2 = mcNear1BEE;
    globals.mcFar1BA3 = mcNear1BEE;
    real _t1BF2#1 = -0.1e1;
    tensor[3] litdir1BF4#1 = <tensor[3]>[_t1BB5,_t1BF2,_t1BB5];
    globals.litdir1BA4 = litdir1BF4;
    tensor[2] cminmax1BF7#1 = <tensor[2]>[_t1BB5,_t1BB5];
    globals.cminmax1BA5 = cminmax1BF7;
    return
## global-variable initialization
  ENTRY1BFB:  preds = []
    femData:Mesh block1BFC#3 = globals.block1B8A;
    femData:Space 0space04D7_intermedateGlobal1BFE#1 = globals.0space04D7_intermedateGlobal1B8B;
    femData:FemFunc 0U04D9_intermedateGlobal1C00#1 = globals.0U04D9_intermedateGlobal1B8C;
    int cellChoice1C02#1 = globals.cellChoice1B8D;
    image(IMAGE1D<double[3]>) cmap1C04#1 = globals.cmap1B8E;
    tensor[3] camEye1C06#8 = globals.camEye1B8F;
    tensor[3] camAt1C08#8 = globals.camAt1B90;
    tensor[3] camUp1C0A#2 = globals.camUp1B91;
    real camNear1C0C#1 = globals.camNear1B92;
    real camFar1C0E#1 = globals.camFar1B93;
    real camFOV1C10#2 = globals.camFOV1B94;
    int iresU1C12#1 = globals.iresU1B96;
    int iresV1C14#1 = globals.iresV1B97;
    tensor[3] litdir1C16#2 = globals.litdir1BA4;
    int _t1C18#1 = 0;
    int _t1C1A#1 = 1;
    int _t1C1C#1 = ExtractFemItem<int,NumCell(Mesh)>(block1BFC);
    int _t1C1E#1 = ISub(_t1C1C,_t1C1A);
    int[] _t1C20#1 = Range(_t1C18,_t1C1E);
    femData:MeshCell[] _t1C22#1 = <femData:MeshCell[]>{};
  FOREACH1C25:  preds = [ASSIGN1C23,NEXT1C2B]
    foreach (_t1C24 in _t1C20) on exit goto ASSIGN1C2D
      femData:MeshCell[] _t1C29#2 = phi(_t1C22,_t1C28)
    femData:MeshCell _t1C26#1 = LoadFem<femData:MeshCell>(block1BFC,_t1C24);
    femData:MeshCell[] _t1C28#1 = Append<femData:MeshCell>(_t1C29,_t1C26);
    goto FOREACH1C25
  ASSIGN1C2D:  preds = [FOREACH1C25]
    femData:Space space1C2C#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal1BFE,block1BFC);
    femData:FemFunc U1C2E#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal1C00,space1C2C);
    femData:MeshCell c11C30#1 = Subscript<femData:MeshCell[]>(_t1C29,cellChoice1C02);
    int _t1C32#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11C30);
    femData:FuncCell _t1C34#2 = LoadFem<femData:FuncCell>(U1C2E,_t1C32);
    femData:FemFunc _t1C36#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1C34);
    femData:Space _t1C38#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1C36);
    int _t1C3A#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1C34);
    kernel _t1C3C#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1C3E#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1C04);
    tensor[3] op1_e3_l_41C41#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_61C42#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41C41,op1_e3_l_41C41);
    real op1_e3_l_71C43#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61C42);
    real op1_e3_l_91C44#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71C43);
    tensor[3] camN1C40#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41C41,op1_e3_l_91C44);
    globals.camN1BA6 = camN1C40;
    tensor[3] op1_e3_l_101C4C#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_121C4D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_101C4C,op1_e3_l_101C4C);
    real op1_e3_l_131C4E#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_121C4D);
    tensor[3,3] op1_e3_l_151C4F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C0A);
    real op1_e3_l_161C50#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_131C4E);
    tensor[3] op1_e3_l_171C51#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_101C4C,op1_e3_l_151C4F);
    real op1_e3_l_341C52#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171C51,op1_e3_l_171C51);
    real op1_e3_l_351C53#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_161C50,op1_e3_l_161C50,op1_e3_l_341C52);
    real op1_e3_l_361C54#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C53);
    tensor[3] op1_e3_l_371C55#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_161C50,op1_e3_l_171C51);
    real op1_e3_l_381C56#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C54);
    tensor[3] camU1C4B#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371C55,op1_e3_l_381C56);
    globals.camU1BA7 = camU1C4B;
    tensor[3] op1_e3_l_141C65#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_161C66#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141C65,op1_e3_l_141C65);
    real op1_e3_l_171C67#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_161C66);
    tensor[3,3] op1_e3_l_271C68#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C0A);
    tensor[3] op1_e3_l_301C69#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141C65,op1_e3_l_271C68);
    real op1_e3_l_321C6A#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_171C67);
    real op1_e3_l_341C6B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_301C69,op1_e3_l_301C69);
    real op1_e3_l_351C6C#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_321C6A,op1_e3_l_321C6A,op1_e3_l_341C6B);
    real op1_e3_l_361C6D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C6C);
    tensor[3,3] op1_e3_l_451C6E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_301C69);
    tensor[3] op1_e3_l_471C6F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141C65,op1_e3_l_451C6E);
    real op1_e3_l_491C70#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C6D);
    tensor[3] op1_e3_l_501C71#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_321C6A,op1_e3_l_471C6F);
    tensor[3] camV1C64#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_321C6A,op1_e3_l_491C70,op1_e3_l_501C71);
    globals.camV1BA8 = camV1C64;
    tensor[3] op1_e3_l_21C82#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_41C83#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21C82,op1_e3_l_21C82);
    real camDist1C81#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41C83);
    globals.camDist1BA9 = camDist1C81;
    real _t1C88#2 = 0.314159265358979323846264338327950288e1;
    real _t1C8A#2 = 0.36e3;
    real op1_e3_l_51C8D#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C10,_t1C88);
    real op1_e3_l_61C8E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C8A,op1_e3_l_51C8D);
    tensor[3] op1_e3_l_71C8F#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_91C90#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_71C8F,op1_e3_l_71C8F);
    real op1_e3_l_101C91#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_61C8E);
    real op1_e3_l_111C92#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_91C90);
    real camVmax1C8C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101C91,op1_e3_l_111C92);
    globals.camVmax1BAA = camVmax1C8C;
    real _t1C9B#1 = IntToReal(iresU1C12);
    real _t1C9D#1 = IntToReal(iresV1C14);
    real op1_e3_l_71CA0#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C10,_t1C88);
    real op1_e3_l_81CA1#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C8A,op1_e3_l_71CA0);
    tensor[3] op1_e3_l_91CA2#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_111CA3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_91CA2,op1_e3_l_91CA2);
    real op1_e3_l_121CA4#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_81CA1);
    real op1_e3_l_131CA5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_111CA3);
    real op1_e3_l_141CA6#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1C9B,op1_e3_l_121CA4,op1_e3_l_131CA5);
    real camUmax1C9F#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C9D,op1_e3_l_141CA6);
    globals.camUmax1BAB = camUmax1C9F;
    tensor[3] op1_e3_l_31CB1#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_51CB2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_31CB1,op1_e3_l_31CB1);
    real op1_e3_l_61CB3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_51CB2);
    real camNearVsp1CB0#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1C0C,op1_e3_l_61CB3);
    globals.camNearVsp1BAC = camNearVsp1CB0;
    tensor[3] op1_e3_l_31CBA#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_51CBB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_31CBA,op1_e3_l_31CBA);
    real op1_e3_l_61CBC#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_51CBB);
    real camFarVsp1CB9#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1C0E,op1_e3_l_61CBC);
    globals.camFarVsp1BAD = camFarVsp1CB9;
    tensor[3,3] _t1CC2#1 = <tensor[3,3]>[camU1C4B,camV1C64,camN1C40];
    real op1_e3_l_31CC5#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1C16);
    real op1_e3_l_41CC6#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31CC5);
    real op1_e3_l_51CC7#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41CC6);
    tensor[3] op1_e3_l_61CC8#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1CC2,litdir1C16);
    tensor[3] litwsp1CC4#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51CC7,op1_e3_l_61CC8);
    globals.litwsp1BAE = litwsp1CC4;
    globals._t1BAF = _t1C3A;
    globals._tX1BB0 = _t1C38;
    globals._tXX1BB1 = _t1C36;
    globals.img1BB2 = img1C3E;
    globals._tXXX1BB3 = _t1C3C;
    return
## strand
  strand ray (int ui1CD5#1, int vi1CD6#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1CE7:  preds = []
        tensor[3] camEye1CE8#1 = globals.camEye1B8F;
        bool camOrtho1CEA#2 = globals.camOrtho1B95;
        int iresU1CEC#1 = globals.iresU1B96;
        int iresV1CEE#1 = globals.iresV1B97;
        real rayStep1CF0#1 = globals.rayStep1B98;
        real refStep1CF2#1 = globals.refStep1B99;
        tensor[4] phong1CF4#4 = globals.phong1BA1;
        tensor[3] camN1CF6#3 = globals.camN1BA6;
        tensor[3] camU1CF8#2 = globals.camU1BA7;
        tensor[3] camV1CFA#2 = globals.camV1BA8;
        real camDist1CFC#1 = globals.camDist1BA9;
        real camVmax1CFE#6 = globals.camVmax1BAA;
        real camUmax1D00#6 = globals.camUmax1BAB;
        real camNearVsp1D02#1 = globals.camNearVsp1BAC;
        real _t1D04#12 = -0.5e0;
        real _t1D06#3 = IntToReal(ui1CD5);
        real _t1D08#3 = IntToReal(iresU1CEC);
        real _t1D0A#6 = 0.5e0;
        real op1_e3_l_61D0D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D08,_t1D0A);
        real op1_e3_l_71D0E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D06);
        real op1_e3_l_81D0F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_61D0D);
        real op1_e3_l_91D10#2 = λ(T0[])<Neg(T0)> (camUmax1D00);
        real op1_e3_l_101D11#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D0E,op1_e3_l_81D0F);
        real op1_e3_l_111D12#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1D00,op1_e3_l_91D10);
        real op1_e3_l_131D13#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D11,op1_e3_l_111D12);
        real rayU1D0C#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D10,op1_e3_l_131D13);
        real _t1D1C#3 = IntToReal(vi1CD6);
        real _t1D1E#3 = IntToReal(iresV1CEE);
        real op1_e3_l_61D21#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D1E,_t1D0A);
        real op1_e3_l_71D22#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D1C);
        real op1_e3_l_81D23#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_61D21);
        real op1_e3_l_91D24#2 = λ(T0[])<Neg(T0)> (camVmax1CFE);
        real op1_e3_l_101D25#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D22,op1_e3_l_81D23);
        real op1_e3_l_111D26#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CFE,op1_e3_l_91D24);
        real op1_e3_l_131D27#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D25,op1_e3_l_111D26);
        real rayV1D20#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D24,op1_e3_l_131D27);
        real op1_e3_l_141D31#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D08,_t1D0A);
        real op1_e3_l_151D32#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D06);
        real op1_e3_l_161D33#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_141D31);
        real op1_e3_l_171D34#2 = λ(T0[])<Neg(T0)> (camUmax1D00);
        real op1_e3_l_181D35#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_151D32,op1_e3_l_161D33);
        real op1_e3_l_191D36#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1D00,op1_e3_l_171D34);
        real op1_e3_l_211D37#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_181D35,op1_e3_l_191D36);
        real op1_e3_l_221D38#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_171D34,op1_e3_l_211D37);
        real op1_e3_l_231D39#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D0A,_t1D1E);
        real op1_e3_l_241D3A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D1C);
        real op1_e3_l_251D3B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_231D39);
        real op1_e3_l_261D3C#2 = λ(T0[])<Neg(T0)> (camVmax1CFE);
        real op1_e3_l_271D3D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_241D3A,op1_e3_l_251D3B);
        real op1_e3_l_281D3E#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CFE,op1_e3_l_261D3C);
        real op1_e3_l_301D3F#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271D3D,op1_e3_l_281D3E);
        real op1_e3_l_311D40#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_261D3C,op1_e3_l_301D3F);
        tensor[3] op1_e3_l_321D41#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF8,op1_e3_l_221D38);
        tensor[3] op1_e3_l_331D42#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CFA,op1_e3_l_311D40);
        tensor[3] UV1D30#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321D41,op1_e3_l_331D42);
        if camOrtho1CEA then goto JOIN1D59 else goto ASSIGN1DC5
      JOIN1D59:  preds = [COND1D56,ASSIGN1DC6]
        tensor[3] _t1D57#1 = phi(UV1D30,_t1D58)
        tensor[3] rayOrig1D5A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1CE8,_t1D57);
        if camOrtho1CEA then goto ASSIGN1D5E else goto ASSIGN1DB0
      ASSIGN1D5E:  preds = [COND1D5C]
        real _t1D5D#3 = 0.e0;
        tensor[3] _t1D5F#1 = <tensor[3]>[_t1D5D,_t1D5D,_t1D5D];
        goto JOIN1D63
      JOIN1D63:  preds = [ASSIGN1D60,ASSIGN1DC3]
        tensor[3] _t1D61#3 = phi(_t1D5F,_t1D62)
        tensor[3] rayVec1D64#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CF6,_t1D61);
        tensor[3] op1_e3_l_41D67#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CF6,_t1D61);
        real op1_e3_l_61D68#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D67,op1_e3_l_41D67);
        real op1_e3_l_71D69#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D68);
        real op1_e3_l_81D6A#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1CF0,op1_e3_l_71D69);
        real alphaFix1D66#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1CF2,op1_e3_l_81D6A);
        tensor[3] op1_e3_l_41D71#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CF6,_t1D61);
        real op1_e3_l_61D72#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41D71,op1_e3_l_41D71);
        real op1_e3_l_71D73#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D72);
        real op1_e3_l_91D74#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D73);
        tensor[3] op1_e3_l_101D75#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41D71,op1_e3_l_91D74);
        tensor[3] eyeDir1D70#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101D75);
        real phKa1D7C#1 = TensorIndex<tensor[4],[0]>(phong1CF4);
        real phKd1D7E#1 = TensorIndex<tensor[4],[1]>(phong1CF4);
        real phKs1D80#1 = TensorIndex<tensor[4],[2]>(phong1CF4);
        real phSp1D82#1 = TensorIndex<tensor[4],[3]>(phong1CF4);
        real _t1D84#8 = 0.e0;
        tensor[4] rgba1D86#1 = <tensor[4]>[_t1D84,_t1D84,_t1D84,_t1D84];
        tensor[3] rgb1D88#1 = <tensor[3]>[_t1D84,_t1D84,_t1D84];
        real transp1D8A#1 = 0.1e1;
        self.rayU = rayU1D0C;
        self.rayV = rayV1D20;
        self.rayN = camNearVsp1D02;
        self.UV = UV1D30;
        self.rayOrig = rayOrig1D5A;
        self.rayVec = rayVec1D64;
        self.alphaFix = alphaFix1D66;
        self.eyeDir = eyeDir1D70;
        self.phKa = phKa1D7C;
        self.phKd = phKd1D7E;
        self.phKs = phKs1D80;
        self.phSp = phSp1D82;
        self.rgba = rgba1D86;
        self.raw = _t1D84;
        self.rgb = rgb1D88;
        self.transp = transp1D8A;
        return
      ASSIGN1DB0:  preds = [COND1D5C]
        real op1_e3_l_151D9D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D08,_t1D0A);
        real op1_e3_l_161D9E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D06);
        real op1_e3_l_171D9F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_151D9D);
        real op1_e3_l_181DA0#2 = λ(T0[])<Neg(T0)> (camUmax1D00);
        real op1_e3_l_191DA1#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_161D9E,op1_e3_l_171D9F);
        real op1_e3_l_201DA2#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1D00,op1_e3_l_181DA0);
        real op1_e3_l_221DA3#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_191DA1,op1_e3_l_201DA2);
        real op1_e3_l_231DA4#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_181DA0,op1_e3_l_221DA3);
        real op1_e3_l_241DA5#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D0A,_t1D1E);
        real op1_e3_l_251DA6#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D1C);
        real op1_e3_l_261DA7#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_241DA5);
        real op1_e3_l_271DA8#2 = λ(T0[])<Neg(T0)> (camVmax1CFE);
        real op1_e3_l_281DA9#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_251DA6,op1_e3_l_261DA7);
        real op1_e3_l_291DAA#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CFE,op1_e3_l_271DA8);
        real op1_e3_l_311DAB#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_281DA9,op1_e3_l_291DAA);
        real op1_e3_l_321DAC#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_271DA8,op1_e3_l_311DAB);
        tensor[3] op1_e3_l_331DAD#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF8,op1_e3_l_231DA4);
        tensor[3] op1_e3_l_341DAE#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CFA,op1_e3_l_321DAC);
        tensor[3] op1_e3_l_351DAF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_331DAD,op1_e3_l_341DAE);
        tensor[3] _t1D62#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1CFC,op1_e3_l_351DAF);
        goto JOIN1D63
      ASSIGN1DC5:  preds = [COND1D56]
        real _t1DC4#3 = 0.e0;
        tensor[3] _t1D58#1 = <tensor[3]>[_t1DC4,_t1DC4,_t1DC4];
        goto JOIN1D59
    end state init
    method update
        ENTRY1DC7:  preds = []
          image(IMAGE1D<double[3]>) cmap20C8#3 = globals.cmap1B8E;
          int _t1DC8#30 = globals._t1BAF;
          femData:Space _t1DCA#30 = globals._tX1BB0;
          femData:FemFunc _t1DCC#30 = globals._tXX1BB1;
          image(IMAGE1D<double[3]>) img1DCE#1 = globals.img1BB2;
          kernel _t1DD0#1 = globals._tXXX1BB3;
          femData:Mesh block1DD2#1 = globals.block1B8A;
          real rayStep1DD4#4 = globals.rayStep1B98;
          real transp01DD6#1 = globals.transp01B9A;
          real thick1DD8#2 = globals.thick1B9B;
          real fStrTh1DDA#1 = globals.fStrTh1B9C;
          real fMaskTh1DDC#1 = globals.fMaskTh1B9D;
          real fBias1DDE#1 = globals.fBias1B9E;
          real maxAlpha1DE0#2 = globals.maxAlpha1B9F;
          tensor[3] mcNear1DE2#2 = globals.mcNear1BA2;
          tensor[3] mcFar1DE4#1 = globals.mcFar1BA3;
          tensor[2] cminmax1DE6#2 = globals.cminmax1BA5;
          real camNearVsp1DE8#2 = globals.camNearVsp1BAC;
          real camFarVsp1DEA#2 = globals.camFarVsp1BAD;
          tensor[3] litwsp1DEC#2 = globals.litwsp1BAE;
          real rayN1DEE#4 = self.rayN;
          tensor[3] rayOrig1DF0#2 = self.rayOrig;
          tensor[3] rayVec1DF2#2 = self.rayVec;
          real alphaFix1DF4#1 = self.alphaFix;
          tensor[3] eyeDir1DF6#1 = self.eyeDir;
          real phKa1DF8#1 = self.phKa;
          real phKd1DFA#1 = self.phKd;
          real phKs1DFC#2 = self.phKs;
          real phSp1DFE#1 = self.phSp;
          tensor[3] rgb1E00#1 = self.rgb;
          real transp1E02#2 = self.transp;
          real rayN1E04#6 = λ(T0[],T1[])<(T0 + T1)> (rayN1DEE,rayStep1DD4);
          bool _t1E06#1 = GT<real>(rayN1E04,camFarVsp1DEA);
          if _t1E06 then goto SAVE1E09 else goto JOIN1E0B
        SAVE1E09:  preds = [COND1E08]
          self.rayN = rayN1E04;
          stabilize
          goto JOIN1E0B
        JOIN1E0B:  preds = [*STABILIZE1E0A,COND1E08]
          real op1_e3_l_41E0D#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1DEE,rayStep1DD4);
          tensor[3] op1_e3_l_51E0E#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DF2,op1_e3_l_41E0D);
          tensor[3] pos1E0C#61 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1DF0,op1_e3_l_51E0E);
          femData:RefCell _t1E12#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1DD2);
          real _t1E14#1 = 0.1e-8;
          bool _t1E16#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1E12,pos1E0C,_t1E14);
          if _t1E16 then goto ASSIGN1E1E else goto ASSIGN2087
        ASSIGN1E1E:  preds = [COND1E18]
          int[84] femIndicies1E1B#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1E1C#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1E1B);
          tensor[84] dofs1E1A#1 = femDofs1E1C;
          tensor[3,3,84] basisResult1E1D#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] _t1E19#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1E1A,basisResult1E1D,pos1E0C);
          (real[3] _t1E23#1,tensor[3][3] evecs1E24#0) = EigenVecs3x3(_t1E19);
          int _t1E26#1 = 1;
          real _t1E28#1 = Subscript<real[3]>(_t1E23,_t1E26);
          int[84] femIndicies1E31#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1E32#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1E31);
          tensor[84] dofs1E30#1 = femDofs1E32;
          tensor[3,84] basisResult1E33#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_61E2B#2 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1E30,basisResult1E33,pos1E0C);
          real op1_e3_l_81E2C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61E2B,probe_l_61E2B);
          real op1_e3_l_91E2D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81E2C);
          real op1_e3_l_101E2E#1 = λ(T0[])<Neg(T0)> (_t1E28);
          real op1_e3_l_111E2F#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1DDE,op1_e3_l_91E2D);
          real _t1E2A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101E2E,op1_e3_l_111E2F);
          bool _t1E3E#1 = GT<real>(_t1E2A,fStrTh1DDA);
          if _t1E3E then goto ASSIGN1E42 else goto ASSIGN2086
        ASSIGN1E42:  preds = [COND1E40]
          real _t1E41#1 = 0.1e1;
          bool _t1E43#1 = GTE<real>(_t1E41,fMaskTh1DDC);
          if _t1E43 then goto ASSIGN1E60 else goto ASSIGN2085
        ASSIGN1E60:  preds = [COND1E45]
          int[84] femIndicies1E59#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1E5A#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1E59);
          tensor[84] dofs1E58#1 = femDofs1E5A;
          tensor[3,84] basisResult1E5B#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_191E47#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1E58,basisResult1E5B,pos1E0C);
          tensor[84] dofs1E5C#1 = femDofs1E5A;
          tensor[3,3,84] basisResult1E5D#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] probe_l_201E48#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1E5C,basisResult1E5D,pos1E0C);
          tensor[3] op1_e3_l_221E49#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (probe_l_201E48,probe_l_191E47);
          tensor[3,3,3] op1_e3_l_231E4A#2 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_241E4B#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_221E49,op1_e3_l_231E4A);
          tensor[84] dofs1E5E#1 = femDofs1E5A;
          tensor[3,3,3,84] basisResult1E5F#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_311E4C#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1E5E,basisResult1E5F,pos1E0C);
          tensor[3,3] op1_e3_l_341E4D#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_191E47,probe_l_311E4C);
          tensor[3,3] op1_e3_l_351E4E#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_201E48,probe_l_201E48);
          tensor[3,3] op1_e3_l_361E4F#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_341E4D,op1_e3_l_351E4E);
          tensor[3,3,3] op1_e3_l_371E50#1 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (probe_l_201E48,op1_e3_l_221E49);
          tensor[3,3,3] op1_e3_l_381E51#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_191E47,op1_e3_l_361E4F);
          tensor[3,3,3] op1_e3_l_391E52#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_371E50,op1_e3_l_381E51);
          tensor[3] op1_e3_l_411E53#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_191E47,op1_e3_l_241E4B);
          tensor[3,3] op1_e3_l_421E54#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_391E52,op1_e3_l_231E4A);
          tensor[3] op1_e3_l_671E55#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_411E53,op1_e3_l_421E54);
          tensor[3] op1_e3_l_1191E56#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_671E55,op1_e3_l_671E55);
          real op1_e3_l_1211E57#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1191E56,op1_e3_l_1191E56);
          real _t1E46#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1211E57);
          real _t1E7A#1 = 0.1e-7;
          bool _t1E7C#1 = GT<real>(_t1E46,_t1E7A);
          if _t1E7C then goto ASSIGN1E80 else goto ASSIGN2084
        ASSIGN1E80:  preds = [COND1E7E]
          bool _t1E7F#1 = true;
          goto JOIN1E83
        JOIN1E83:  preds = [ASSIGN1E80,ASSIGN2084]
          bool _t1E81#1 = phi(_t1E7F,_t1E82)
          goto JOIN1E86
        JOIN1E86:  preds = [JOIN1E83,ASSIGN2085]
          bool _t1E84#1 = phi(_t1E81,_t1E85)
          goto JOIN1E89
        JOIN1E89:  preds = [JOIN1E86,ASSIGN2086]
          bool _t1E87#1 = phi(_t1E84,_t1E88)
          goto JOIN1E8C
        JOIN1E8C:  preds = [JOIN1E89,ASSIGN2087]
          bool _t1E8A#1 = phi(_t1E87,_t1E8B)
          bool _t1E8D#1 = BNot(_t1E8A);
          if _t1E8D then goto SAVE1E90 else goto JOIN1E92
        SAVE1E90:  preds = [COND1E8F]
          self.rayN = rayN1E04;
          active
          goto JOIN1E92
        JOIN1E92:  preds = [*ACTIVE1E91,COND1E8F]
          real _t1E93#8 = 0.e0;
          real _t1E95#12 = 0.1e1;
          real _t1E97#2 = 0.15e1;
          int[84] femIndicies1EB7#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1EB8#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1EB7);
          tensor[84] dofs1EB6#1 = femDofs1EB8;
          tensor[3,84] basisResult1EB9#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_821E9A#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1EB6,basisResult1EB9,pos1E0C);
          tensor[84] dofs1EBA#1 = femDofs1EB8;
          tensor[3,3,84] basisResult1EBB#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] probe_l_831E9B#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1EBA,basisResult1EBB,pos1E0C);
          tensor[3] op1_e3_l_851E9C#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (probe_l_831E9B,probe_l_821E9A);
          tensor[3,3,3] op1_e3_l_861E9D#2 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_871E9E#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_851E9C,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_941E9F#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_821E9A,op1_e3_l_871E9E);
          tensor[84] dofs1EBC#1 = femDofs1EB8;
          tensor[3,3,3,84] basisResult1EBD#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_1081EA0#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1EBC,basisResult1EBD,pos1E0C);
          tensor[3,3,3] op1_e3_l_1111EA1#1 = λ(T0[3],T1[3 3 3])<(T0_{i0} * T1_{i1,i0,i2})>_{3 3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3,3] op1_e3_l_1121EA2#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} * T1_{i1,i2})>_{3 3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1131EA3#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2,i0,i1} + T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_1111EA1,op1_e3_l_1121EA2);
          tensor[3,3,3] op1_e3_l_1141EA4#1 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (probe_l_831E9B,op1_e3_l_851E9C);
          tensor[3,3,3] op1_e3_l_1151EA5#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1131EA3);
          tensor[3,3,3] op1_e3_l_1161EA6#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1151EA5);
          tensor[3,3] op1_e3_l_1191EA7#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1161EA6,op1_e3_l_861E9D);
          tensor[3,3] op1_e3_l_1441EA8#2 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i0})>_{3 3} (op1_e3_l_941E9F,op1_e3_l_1191EA7);
          real op1_e3_l_1461EA9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_941E9F,op1_e3_l_941E9F);
          tensor[3] op1_e3_l_1471EAA#3 = λ(T0[3 3],T1[3 3])<Σ(i1=0..2)<((T0_{i1,i0} + T1_{i1,i0}))>(i1=0..2)>_{3} (op1_e3_l_1441EA8,op1_e3_l_1441EA8);
          tensor[3] op1_e3_l_2501EAB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_1471EAA);
          real op1_e3_l_2511EAC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1471EAA,op1_e3_l_1471EAA);
          tensor[3] op1_e3_l_2521EAD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2501EAB,op1_e3_l_2511EAC);
          tensor[3] op1_e3_l_4241EAE#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_2521EAD);
          real op1_e3_l_4261EAF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4241EAE,op1_e3_l_4241EAE);
          real op1_e3_l_4271EB0#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_4261EAF);
          real op1_e3_l_4281EB1#1 = λ(T0[])<Abs(T0)> (op1_e3_l_4271EB0);
          real op1_e3_l_4291EB2#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD8,op1_e3_l_4281EB1);
          real op1_e3_l_4301EB3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_4291EB2);
          real op1_e3_l_4311EB4#1 = λ(T0[],T1[])<(T0 * T1)> (_t1E97,op1_e3_l_4301EB3);
          real op1_e3_l_4321EB5#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1E93,_t1E95,op1_e3_l_4311EB4);
          real _t1E99#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DE0,op1_e3_l_4321EB5);
          bool _t1EE3#1 = EQ<real>(_t1E99,_t1E93);
          if _t1EE3 then goto SAVE1EE6 else goto JOIN1EE8
        SAVE1EE6:  preds = [COND1EE5]
          self.rayN = rayN1E04;
          active
          goto JOIN1EE8
        JOIN1EE8:  preds = [*ACTIVE1EE7,COND1EE5]
          int[84] femIndicies1F08#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1F09#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1F08);
          tensor[84] dofs1F07#1 = femDofs1F09;
          tensor[3,84] basisResult1F0A#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_831EEA#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1F07,basisResult1F0A,pos1E0C);
          tensor[84] dofs1F0B#1 = femDofs1F09;
          tensor[3,3,84] basisResult1F0C#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] probe_l_841EEB#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1F0B,basisResult1F0C,pos1E0C);
          tensor[3] op1_e3_l_861EEC#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (probe_l_841EEB,probe_l_831EEA);
          tensor[3,3,3] op1_e3_l_871EED#2 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_881EEE#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_861EEC,op1_e3_l_871EED);
          tensor[3] op1_e3_l_951EEF#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_831EEA,op1_e3_l_881EEE);
          tensor[84] dofs1F0D#1 = femDofs1F09;
          tensor[3,3,3,84] basisResult1F0E#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_1091EF0#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1F0D,basisResult1F0E,pos1E0C);
          tensor[3,3,3] op1_e3_l_1121EF1#1 = λ(T0[3],T1[3 3 3])<(T0_{i0} * T1_{i1,i0,i2})>_{3 3 3} (probe_l_831EEA,probe_l_1091EF0);
          tensor[3,3,3] op1_e3_l_1131EF2#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} * T1_{i1,i2})>_{3 3 3} (probe_l_841EEB,probe_l_841EEB);
          tensor[3,3] op1_e3_l_1141EF3#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2,i0,i1} + T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_1121EF1,op1_e3_l_1131EF2);
          tensor[3,3,3] op1_e3_l_1151EF4#1 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (probe_l_841EEB,op1_e3_l_861EEC);
          tensor[3,3,3] op1_e3_l_1161EF5#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_831EEA,op1_e3_l_1141EF3);
          tensor[3,3,3] op1_e3_l_1171EF6#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1151EF4,op1_e3_l_1161EF5);
          tensor[3,3] op1_e3_l_1201EF7#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1171EF6,op1_e3_l_871EED);
          tensor[3,3] op1_e3_l_1451EF8#2 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i0})>_{3 3} (op1_e3_l_951EEF,op1_e3_l_1201EF7);
          real op1_e3_l_1471EF9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_951EEF,op1_e3_l_951EEF);
          tensor[3] op1_e3_l_1481EFA#3 = λ(T0[3 3],T1[3 3])<Σ(i1=0..2)<((T0_{i1,i0} + T1_{i1,i0}))>(i1=0..2)>_{3} (op1_e3_l_1451EF8,op1_e3_l_1451EF8);
          tensor[3] op1_e3_l_2511EFB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1471EF9,op1_e3_l_1481EFA);
          real op1_e3_l_2521EFC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1481EFA,op1_e3_l_1481EFA);
          tensor[3] op1_e3_l_2531EFD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2511EFB,op1_e3_l_2521EFC);
          tensor[3] op1_e3_l_4251EFE#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_2531EFD);
          real op1_e3_l_4271EFF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4251EFE,op1_e3_l_4251EFE);
          real op1_e3_l_4281F00#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_4271EFF);
          real op1_e3_l_4291F01#1 = λ(T0[])<Abs(T0)> (op1_e3_l_4281F00);
          real op1_e3_l_4301F02#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD8,op1_e3_l_4291F01);
          real op1_e3_l_4311F03#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_4301F02);
          real op1_e3_l_4321F04#1 = λ(T0[],T1[])<(T0 * T1)> (_t1E97,op1_e3_l_4311F03);
          real op1_e3_l_4331F05#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1E95,_t1E93,op1_e3_l_4321F04);
          real op1_e3_l_4341F06#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DE0,op1_e3_l_4331F05);
          real _t1EE9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_4341F06);
          real _t1F35#2 = MathFn<pow>(_t1EE9,alphaFix1DF4);
          bool _t1F37#1 = NEQ<real>(phKs1DFC,_t1E93);
          if _t1F37 then goto ASSIGN1F63 else goto JOIN1F8F
        ASSIGN1F63:  preds = [COND1F39]
          tensor[3] op1_e3_l_1561F3B#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1DF6,litwsp1DEC);
          real op1_e3_l_1581F3C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1561F3B,op1_e3_l_1561F3B);
          real op1_e3_l_1591F3D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1581F3C);
          int[84] femIndicies1F5C#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1F5D#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1F5C);
          tensor[84] dofs1F5B#1 = femDofs1F5D;
          tensor[3,84] basisResult1F5E#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_1601F3E#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1F5B,basisResult1F5E,pos1E0C);
          tensor[84] dofs1F5F#1 = femDofs1F5D;
          tensor[3,3,84] basisResult1F60#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] probe_l_1611F3F#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1F5F,basisResult1F60,pos1E0C);
          tensor[3] op1_e3_l_1631F40#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (probe_l_1611F3F,probe_l_1601F3E);
          tensor[3,3,3] op1_e3_l_1641F41#2 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_1651F42#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_1631F40,op1_e3_l_1641F41);
          tensor[3] op1_e3_l_1721F43#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_1601F3E,op1_e3_l_1651F42);
          tensor[84] dofs1F61#1 = femDofs1F5D;
          tensor[3,3,3,84] basisResult1F62#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_1861F44#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1F61,basisResult1F62,pos1E0C);
          tensor[3,3] op1_e3_l_1891F45#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_1601F3E,probe_l_1861F44);
          tensor[3,3] op1_e3_l_1901F46#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_1611F3F,probe_l_1611F3F);
          tensor[3,3] op1_e3_l_1911F47#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1891F45,op1_e3_l_1901F46);
          tensor[3,3,3] op1_e3_l_1921F48#1 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (probe_l_1611F3F,op1_e3_l_1631F40);
          tensor[3,3,3] op1_e3_l_1931F49#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_1601F3E,op1_e3_l_1911F47);
          tensor[3,3,3] op1_e3_l_1941F4A#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1921F48,op1_e3_l_1931F49);
          tensor[3,3] op1_e3_l_1971F4B#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1941F4A,op1_e3_l_1641F41);
          tensor[3] op1_e3_l_2221F4C#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_1721F43,op1_e3_l_1971F4B);
          real op1_e3_l_2241F4D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1721F43,op1_e3_l_1721F43);
          tensor[3] op1_e3_l_2251F4E#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_2221F4C,op1_e3_l_2221F4C);
          tensor[3] op1_e3_l_3281F4F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_2241F4D,op1_e3_l_2251F4E);
          real op1_e3_l_3291F50#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2251F4E,op1_e3_l_2251F4E);
          tensor[3] op1_e3_l_3301F51#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_3281F4F,op1_e3_l_3291F50);
          tensor[3] op1_e3_l_6731F52#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_3301F51);
          real op1_e3_l_6751F53#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6731F52,op1_e3_l_6731F52);
          real op1_e3_l_6761F54#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_6751F53);
          real op1_e3_l_6781F55#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_6761F54);
          tensor[3] op1_e3_l_6791F56#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_6731F52,op1_e3_l_6781F55);
          tensor[3] op1_e3_l_6801F57#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_6791F56);
          real op1_e3_l_6821F58#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1591F3D);
          real op1_e3_l_6831F59#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6801F57,op1_e3_l_1561F3B);
          real op1_e3_l_6841F5A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_6821F58,op1_e3_l_6831F59);
          real _t1F3A#1 = λ(T0[])<Abs(T0)> (op1_e3_l_6841F5A);
          real scomp1F8C#1 = MathFn<pow>(_t1F3A,phSp1DFE);
          goto JOIN1F8F
        JOIN1F8F:  preds = [ASSIGN1F8D,COND1F39]
          real scomp1F8E#1 = phi(scomp1F8C,_t1E93)
          real cmin1F90#3 = TensorIndex<tensor[2],[0]>(cminmax1DE6);
          real cmax1F92#2 = TensorIndex<tensor[2],[1]>(cminmax1DE6);
          tensor[3] mcol1F94#2 = <tensor[3]>[_t1E95,_t1E95,_t1E95];
          bool _t1F96#1 = NEQ<real>(cmin1F90,cmax1F92);
          if _t1F96 then goto ASSIGN1FB9 else goto JOIN200A
        ASSIGN1FB9:  preds = [COND1F98]
          real op1_e3_l_801F9A#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1DEE,rayStep1DD4);
          int[84] femIndicies1FB2#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1FB3#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1FB2);
          tensor[84] dofs1FB1#1 = femDofs1FB3;
          tensor[3,84] basisResult1FB4#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_811F9B#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1FB1,basisResult1FB4,pos1E0C);
          tensor[84] dofs1FB5#1 = femDofs1FB3;
          tensor[3,3,84] basisResult1FB6#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] probe_l_821F9C#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1FB5,basisResult1FB6,pos1E0C);
          tensor[3] op1_e3_l_841F9D#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (probe_l_821F9C,probe_l_811F9B);
          tensor[3,3,3] op1_e3_l_851F9E#2 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_861F9F#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_841F9D,op1_e3_l_851F9E);
          tensor[3] op1_e3_l_931FA0#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_811F9B,op1_e3_l_861F9F);
          tensor[84] dofs1FB7#1 = femDofs1FB3;
          tensor[3,3,3,84] basisResult1FB8#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_1071FA1#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs1FB7,basisResult1FB8,pos1E0C);
          tensor[3,3] op1_e3_l_1101FA2#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_811F9B,probe_l_1071FA1);
          tensor[3,3] op1_e3_l_1111FA3#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821F9C,probe_l_821F9C);
          tensor[3,3] op1_e3_l_1121FA4#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1101FA2,op1_e3_l_1111FA3);
          tensor[3,3,3] op1_e3_l_1131FA5#1 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (probe_l_821F9C,op1_e3_l_841F9D);
          tensor[3,3,3] op1_e3_l_1141FA6#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_811F9B,op1_e3_l_1121FA4);
          tensor[3,3,3] op1_e3_l_1151FA7#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1131FA5,op1_e3_l_1141FA6);
          tensor[3,3] op1_e3_l_1181FA8#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1151FA7,op1_e3_l_851F9E);
          tensor[3] op1_e3_l_1431FA9#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_931FA0,op1_e3_l_1181FA8);
          real op1_e3_l_1451FAA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_931FA0,op1_e3_l_931FA0);
          tensor[3] op1_e3_l_1461FAB#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_1431FA9,op1_e3_l_1431FA9);
          tensor[3] op1_e3_l_2491FAC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1451FAA,op1_e3_l_1461FAB);
          real op1_e3_l_2501FAD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1461FAB,op1_e3_l_1461FAB);
          tensor[3] op1_e3_l_2511FAE#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2491FAC,op1_e3_l_2501FAD);
          tensor[3] op1_e3_l_2521FAF#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DF2,op1_e3_l_801F9A);
          tensor[3] op1_e3_l_2531FB0#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_2511FAE);
          tensor[3] _t1F99#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (rayOrig1DF0,op1_e3_l_2521FAF,op1_e3_l_2531FB0);
          int[84] femIndicies1FE1#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1FE2#1 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1FE1);
          tensor[84] dofs1FE0#1 = femDofs1FE2;
          tensor[84] basisResult1FE3#1 = EvaluateBasis<BasisArray(84)>(_t1F99);
          real probe_l_81FDA#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1DC8,_t1DCA,_t1DCC,_t1F99,dofs1FE0,basisResult1FE3,_t1F99);
          real op1_e3_l_91FDB#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F90,probe_l_81FDA);
          real op1_e3_l_101FDC#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F90,cmax1F92);
          real op1_e3_l_111FDD#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91FDB,op1_e3_l_101FDC);
          real op1_e3_l_121FDE#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E93,_t1E95);
          real op1_e3_l_131FDF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111FDD,op1_e3_l_121FDE);
          real _t1FD9#2 = λ(T0[],T1[])<(T0 + T1)> (_t1E93,op1_e3_l_131FDF);
          real Mtransform1FF0#2 = Transform<IMAGE1D<double[3]>>(cmap20C8);
          real MxPos1FF1#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1FF0,_t1FD9);
          real Ttranslate1FF2#1 = Translate<IMAGE1D<double[3]>>(cmap20C8);
          real imgPos1FF3#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1FF1,Ttranslate1FF2);
          real nd1FF4#2 = Floor<1>(imgPos1FF3);
          real f1FF5#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1FF3,nd1FF4);
          int n1FF6#1 = RealToInt<1>(nd1FF4);
          int lit1FF7#1 = 0;
          int idx1FF8#1 = IAdd(n1FF6,lit1FF7);
          tensor[3,2] ldvox1FF9#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap20C8,idx1FF8);
          tensor[2] kernX_1FFA#1 = BuildPos<1>(f1FF5);
          tensor[2] kevalX_d0_1FFB#1 = EvalKernel<2,tent,0>(kernX_1FFA);
          tensor[3] mcol1FEF#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1DCE,_t1DD0,_t1FD9,Mtransform1FF0,ldvox1FF9,kevalX_d0_1FFB);
          goto JOIN200A
        JOIN200A:  preds = [ASSIGN2008,COND1F98]
          tensor[3] mcol2009#1 = phi(mcol1FEF,mcol1F94)
          int[84] femIndicies2037#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs2038#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies2037);
          tensor[84] dofs2036#1 = femDofs2038;
          tensor[3,84] basisResult2039#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_169200C#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs2036,basisResult2039,pos1E0C);
          tensor[84] dofs203A#1 = femDofs2038;
          tensor[3,3,84] basisResult203B#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] probe_l_170200D#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs203A,basisResult203B,pos1E0C);
          tensor[3] op1_e3_l_172200E#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (probe_l_170200D,probe_l_169200C);
          tensor[3,3,3] op1_e3_l_173200F#2 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_1742010#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_172200E,op1_e3_l_173200F);
          tensor[3] op1_e3_l_1812011#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_169200C,op1_e3_l_1742010);
          tensor[84] dofs203C#1 = femDofs2038;
          tensor[3,3,3,84] basisResult203D#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_1952012#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,dofs203C,basisResult203D,pos1E0C);
          tensor[3,3] op1_e3_l_1982013#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_169200C,probe_l_1952012);
          tensor[3,3] op1_e3_l_1992014#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_170200D,probe_l_170200D);
          tensor[3,3] op1_e3_l_2002015#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1982013,op1_e3_l_1992014);
          tensor[3,3,3] op1_e3_l_2012016#1 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (probe_l_170200D,op1_e3_l_172200E);
          tensor[3,3,3] op1_e3_l_2022017#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_169200C,op1_e3_l_2002015);
          tensor[3,3,3] op1_e3_l_2032018#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_2012016,op1_e3_l_2022017);
          tensor[3,3] op1_e3_l_2062019#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_2032018,op1_e3_l_173200F);
          tensor[3] op1_e3_l_231201A#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_1812011,op1_e3_l_2062019);
          real op1_e3_l_233201B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1812011,op1_e3_l_1812011);
          tensor[3] op1_e3_l_234201C#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_231201A,op1_e3_l_231201A);
          tensor[3] op1_e3_l_337201D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_233201B,op1_e3_l_234201C);
          real op1_e3_l_338201E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_234201C,op1_e3_l_234201C);
          tensor[3] op1_e3_l_339201F#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_337201D,op1_e3_l_338201E);
          tensor[3] op1_e3_l_6822020#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_339201F);
          real op1_e3_l_6842021#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6822020,op1_e3_l_6822020);
          real op1_e3_l_6852022#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_6842021);
          real op1_e3_l_6872023#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_6852022);
          tensor[3] op1_e3_l_6882024#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_6822020,op1_e3_l_6872023);
          tensor[3] op1_e3_l_6892025#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_6882024);
          real op1_e3_l_6902026#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1DEC,op1_e3_l_6892025);
          real op1_e3_l_6912027#1 = λ(T0[])<(T0)^2> (op1_e3_l_6902026);
          real op1_e3_l_6922028#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1DFA,op1_e3_l_6912027);
          real op1_e3_l_6932029#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1DEE,rayStep1DD4);
          real op1_e3_l_694202A#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE8,op1_e3_l_6932029);
          real op1_e3_l_695202B#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE8,camFarVsp1DEA);
          real op1_e3_l_696202C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_694202A,op1_e3_l_695202B);
          tensor[3] op1_e3_l_697202D#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1DE2,mcFar1DE4);
          tensor[3] op1_e3_l_698202E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_696202C,op1_e3_l_697202D);
          real op1_e3_l_699202F#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1DF8,op1_e3_l_6922028);
          tensor[3] op1_e3_l_7002030#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1DE2,op1_e3_l_698202E);
          tensor[3] op1_e3_l_7012031#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2009,op1_e3_l_699202F,op1_e3_l_7002030);
          tensor[3] op1_e3_l_7022032#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1DFC,scomp1F8E,mcol1F94);
          real op1_e3_l_7032033#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,_t1F35);
          tensor[3] op1_e3_l_7042034#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_7012031,op1_e3_l_7022032);
          tensor[3] op1_e3_l_7052035#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1E02,op1_e3_l_7032033,op1_e3_l_7042034);
          tensor[3] rgb200B#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1E00,op1_e3_l_7052035);
          real op1_e3_l_42072#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,_t1F35);
          real op1_e3_l_52073#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_42072);
          real transp2071#2 = λ(T0[],T1[])<(T0 * T1)> (transp1E02,op1_e3_l_52073);
          bool _t2077#1 = LT<real>(transp2071,transp01DD6);
          if _t2077 then goto SAVE207A else goto JOIN207F
        SAVE207A:  preds = [COND2079]
          self.rayN = rayN1E04;
          self.rgb = rgb200B;
          self.transp = _t1E93;
          stabilize
          goto JOIN207F
        JOIN207F:  preds = [*STABILIZE207D,COND2079]
          real transp207E#1 = phi(transp2071)
          self.rayN = rayN1E04;
          self.rgb = rgb200B;
          self.transp = transp207E;
          active
        ASSIGN2084:  preds = [COND1E7E]
          bool _t1E82#1 = false;
          goto JOIN1E83
        ASSIGN2085:  preds = [COND1E45]
          bool _t1E85#1 = false;
          goto JOIN1E86
        ASSIGN2086:  preds = [COND1E40]
          bool _t1E88#1 = false;
          goto JOIN1E89
        ASSIGN2087:  preds = [COND1E18]
          bool _t1E8B#1 = false;
          goto JOIN1E8C
    end update
    method stabilize
        ENTRY2088:  preds = []
          tensor[4] rgba2089#1 = self.rgba;
          tensor[3] rgb208B#3 = self.rgb;
          real transp208D#5 = self.transp;
          real _t208F#5 = 0.1e1;
          bool _t2091#1 = LT<real>(transp208D,_t208F);
          if _t2091 then goto ASSIGN2095 else goto JOIN20AB
        ASSIGN2095:  preds = [COND2093]
          real aa2094#1 = λ(T0[],T1[])<(T0) - (T1)> (_t208F,transp208D);
          real _t2096#1 = TensorIndex<tensor[3],[0]>(rgb208B);
          real op1_e3_l_32099#1 = λ(T0[],T1[])<(T0) - (T1)> (_t208F,transp208D);
          real _t2098#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2096,op1_e3_l_32099);
          real _t209C#1 = TensorIndex<tensor[3],[1]>(rgb208B);
          real op1_e3_l_3209F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t208F,transp208D);
          real _t209E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t209C,op1_e3_l_3209F);
          real _t20A2#1 = TensorIndex<tensor[3],[2]>(rgb208B);
          real op1_e3_l_320A5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t208F,transp208D);
          real _t20A4#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t20A2,op1_e3_l_320A5);
          tensor[4] rgba20A8#1 = <tensor[4]>[_t2098,_t209E,_t20A4,aa2094];
          goto JOIN20AB
        JOIN20AB:  preds = [ASSIGN20A9,COND2093]
          tensor[4] rgba20AA#1 = phi(rgba20A8,rgba2089)
          self.rgba = rgba20AA;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY20AE:  preds = []
      int iresU20AF#1 = globals.iresU1B96;
      int iresV20B1#1 = globals.iresV1B97;
      int _t20B3#2 = 0;
      int _t20B5#2 = 1;
      int _t20B7#1 = ISub(iresV20B1,_t20B5);
      int[] _t20B9#1 = Range(_t20B3,_t20B7);
    FOREACH20BC:  preds = [ASSIGN20BA,NEXT20C5]
      foreach (vi20BB in _t20B9) on exit goto RETURN20C6
      int _t20BD#1 = ISub(iresU20AF,_t20B5);
      int[] _t20BF#1 = Range(_t20B3,_t20BD);
    FOREACH20C2:  preds = [ASSIGN20C0,NEXT20C4]
      foreach (ui20C1 in _t20BF) on exit goto NEXT20C5
      new ray(ui20C1,vi20BB);
      goto FOREACH20C2
    NEXT20C5:  preds = [FOREACH20C2]
      goto FOREACH20BC
    RETURN20C6:  preds = [FOREACH20BC]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1B8A (block) = <no-default>
  input 0space04D7_intermedateGlobal1B8B (space) = <no-default>
  input 0U04D9_intermedateGlobal1B8C (U) = <no-default>
  input cellChoice1B8D (cellChoice) = <no-default>
  input cmap1B8E (cmap) = image("cmap.nrrd")
  input camEye1B8F (camEye) = <default>
  input camAt1B90 (camAt) = <default>
  input camUp1B91 (camUp) = <default>
  input camNear1B92 (camNear) = <default>
  input camFar1B93 (camFar) = <default>
  input camFOV1B94 (camFOV) = <default>
  input camOrtho1B95 (camOrtho) = <default>
  input iresU1B96 (iresU) = <default>
  input iresV1B97 (iresV) = <default>
  input rayStep1B98 (rayStep) = <default>
  input refStep1B99 (refStep) = <default>
  input transp01B9A (transp0) = <default>
  input thick1B9B (thick) = <default>
  input fStrTh1B9C (fStrTh) = <default>
  input fMaskTh1B9D (fMaskTh) = <default>
  input fBias1B9E (fBias) = <default>
  input maxAlpha1B9F (maxAlpha) = <default>
  input light1BA0 (light) = <default>
  input phong1BA1 (phong) = <default>
  input mcNear1BA2 (mcNear) = <default>
  input mcFar1BA3 (mcFar) = <default>
  input litdir1BA4 (litdir) = <default>
  input cminmax1BA5 (cminmax) = <default>
  global tensor[3] camN1BA6
  global tensor[3] camU1BA7
  global tensor[3] camV1BA8
  global real camDist1BA9
  global real camVmax1BAA
  global real camUmax1BAB
  global real camNearVsp1BAC
  global real camFarVsp1BAD
  global tensor[3] litwsp1BAE
  global int _t1BAF
  global femData:Space _tX1BB0
  global femData:FemFunc _tXX1BB1
  global image(IMAGE1D<double[3]>) img1BB2
  global kernel _tXXX1BB3
## functions
## input initialization
  ENTRY1BB4:  preds = []
    real _t1BB5#13 = 0.e0;
    real _t1BB7#1 = -0.2e1;
    tensor[3] camEye1BB9#1 = <tensor[3]>[_t1BB5,_t1BB7,_t1BB5];
    globals.camEye1B8F = camEye1BB9;
    tensor[3] camAt1BBC#1 = <tensor[3]>[_t1BB5,_t1BB5,_t1BB5];
    globals.camAt1B90 = camAt1BBC;
    real _t1BBF#5 = 0.1e1;
    tensor[3] camUp1BC1#1 = <tensor[3]>[_t1BB5,_t1BB5,_t1BBF];
    globals.camUp1B91 = camUp1BC1;
    real camNear1BC4#1 = -0.4e1;
    globals.camNear1B92 = camNear1BC4;
    real camFar1BC7#1 = 0.4e1;
    globals.camFar1B93 = camFar1BC7;
    real camFOV1BCA#1 = 0.1e2;
    globals.camFOV1B94 = camFOV1BCA;
    bool camOrtho1BCD#2 = false;
    globals.camOrtho1B95 = camOrtho1BCD;
    int iresU1BD0#2 = 100;
    globals.iresU1B96 = iresU1BD0;
    globals.iresV1B97 = iresU1BD0;
    real rayStep1BD4#2 = 0.1e-3;
    globals.rayStep1B98 = rayStep1BD4;
    globals.refStep1B99 = rayStep1BD4;
    real transp01BD8#1 = 0.5e-2;
    globals.transp01B9A = transp01BD8;
    real thick1BDB#1 = 0.1e-1;
    globals.thick1B9B = thick1BDB;
    globals.fStrTh1B9C = _t1BB5;
    globals.fMaskTh1B9D = _t1BB5;
    real fBias1BE0#2 = 0.1e0;
    globals.fBias1B9E = fBias1BE0;
    globals.maxAlpha1B9F = _t1BBF;
    globals.light1BA0 = camOrtho1BCD;
    real _t1BE5#1 = 0.7e0;
    real _t1BE7#1 = 0.2e0;
    real _t1BE9#1 = 0.1e3;
    tensor[4] phong1BEB#1 = <tensor[4]>[fBias1BE0,_t1BE5,_t1BE7,_t1BE9];
    globals.phong1BA1 = phong1BEB;
    tensor[3] mcNear1BEE#2 = <tensor[3]>[_t1BBF,_t1BBF,_t1BBF];
    globals.mcNear1BA2 = mcNear1BEE;
    globals.mcFar1BA3 = mcNear1BEE;
    real _t1BF2#1 = -0.1e1;
    tensor[3] litdir1BF4#1 = <tensor[3]>[_t1BB5,_t1BF2,_t1BB5];
    globals.litdir1BA4 = litdir1BF4;
    tensor[2] cminmax1BF7#1 = <tensor[2]>[_t1BB5,_t1BB5];
    globals.cminmax1BA5 = cminmax1BF7;
    return
## global-variable initialization
  ENTRY1BFB:  preds = []
    femData:Mesh block1BFC#3 = globals.block1B8A;
    femData:Space 0space04D7_intermedateGlobal1BFE#1 = globals.0space04D7_intermedateGlobal1B8B;
    femData:FemFunc 0U04D9_intermedateGlobal1C00#1 = globals.0U04D9_intermedateGlobal1B8C;
    int cellChoice1C02#1 = globals.cellChoice1B8D;
    image(IMAGE1D<double[3]>) cmap1C04#1 = globals.cmap1B8E;
    tensor[3] camEye1C06#1 = globals.camEye1B8F;
    tensor[3] camAt1C08#1 = globals.camAt1B90;
    tensor[3] camUp1C0A#1 = globals.camUp1B91;
    real camNear1C0C#1 = globals.camNear1B92;
    real camFar1C0E#1 = globals.camFar1B93;
    real camFOV1C10#1 = globals.camFOV1B94;
    int iresU1C12#1 = globals.iresU1B96;
    int iresV1C14#1 = globals.iresV1B97;
    tensor[3] litdir1C16#2 = globals.litdir1BA4;
    int _t1C18#1 = 0;
    int _t1C1A#1 = 1;
    int _t1C1C#1 = ExtractFemItem<int,NumCell(Mesh)>(block1BFC);
    int _t1C1E#1 = ISub(_t1C1C,_t1C1A);
    int[] _t1C20#1 = Range(_t1C18,_t1C1E);
    femData:MeshCell[] _t1C22#1 = <femData:MeshCell[]>{};
  FOREACH1C25:  preds = [ASSIGN1C23,NEXT1C2B]
    foreach (_t1C24 in _t1C20) on exit goto ASSIGN1C2D
      femData:MeshCell[] _t1C29#2 = phi(_t1C22,_t1C28)
    femData:MeshCell _t1C26#1 = LoadFem<femData:MeshCell>(block1BFC,_t1C24);
    femData:MeshCell[] _t1C28#1 = Append<femData:MeshCell>(_t1C29,_t1C26);
    goto FOREACH1C25
  ASSIGN1C2D:  preds = [FOREACH1C25]
    femData:Space space1C2C#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal1BFE,block1BFC);
    femData:FemFunc U1C2E#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal1C00,space1C2C);
    femData:MeshCell c11C30#1 = Subscript<femData:MeshCell[]>(_t1C29,cellChoice1C02);
    int _t1C32#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11C30);
    femData:FuncCell _t1C34#2 = LoadFem<femData:FuncCell>(U1C2E,_t1C32);
    femData:FemFunc _t1C36#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1C34);
    femData:Space _t1C38#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1C36);
    int _t1C3A#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1C34);
    kernel _t1C3C#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1C3E#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1C04);
    tensor[3] op1_e3_l_41C41#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_61C42#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41C41,op1_e3_l_41C41);
    real op1_e3_l_71C43#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61C42);
    real op1_e3_l_91C44#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71C43);
    tensor[3] camN1C40#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41C41,op1_e3_l_91C44);
    globals.camN1BA6 = camN1C40;
    tensor[3,3] op1_e3_l_151C4F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C0A);
    tensor[3] op1_e3_l_171C51#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C41,op1_e3_l_151C4F);
    real op1_e3_l_341C52#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171C51,op1_e3_l_171C51);
    real op1_e3_l_351C53#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91C44,op1_e3_l_91C44,op1_e3_l_341C52);
    real op1_e3_l_361C54#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C53);
    tensor[3] op1_e3_l_371C55#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C44,op1_e3_l_171C51);
    real op1_e3_l_381C56#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C54);
    tensor[3] camU1C4B#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371C55,op1_e3_l_381C56);
    globals.camU1BA7 = camU1C4B;
    tensor[3,3] op1_e3_l_451C6E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171C51);
    tensor[3] op1_e3_l_471C6F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C41,op1_e3_l_451C6E);
    tensor[3] op1_e3_l_501C71#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C44,op1_e3_l_471C6F);
    tensor[3] camV1C64#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91C44,op1_e3_l_381C56,op1_e3_l_501C71);
    globals.camV1BA8 = camV1C64;
    globals.camDist1BA9 = op1_e3_l_71C43;
    real _t1C88#1 = 0.314159265358979323846264338327950288e1;
    real _t1C8A#1 = 0.36e3;
    real op1_e3_l_51C8D#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C10,_t1C88);
    real op1_e3_l_61C8E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C8A,op1_e3_l_51C8D);
    real op1_e3_l_101C91#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61C8E);
    real camVmax1C8C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101C91,op1_e3_l_71C43);
    globals.camVmax1BAA = camVmax1C8C;
    real _t1C9B#1 = IntToReal(iresU1C12);
    real _t1C9D#1 = IntToReal(iresV1C14);
    real op1_e3_l_141CA6#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1C9B,op1_e3_l_101C91,op1_e3_l_71C43);
    real camUmax1C9F#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C9D,op1_e3_l_141CA6);
    globals.camUmax1BAB = camUmax1C9F;
    real camNearVsp1CB0#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1C0C,op1_e3_l_71C43);
    globals.camNearVsp1BAC = camNearVsp1CB0;
    real camFarVsp1CB9#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1C0E,op1_e3_l_71C43);
    globals.camFarVsp1BAD = camFarVsp1CB9;
    tensor[3,3] _t1CC2#1 = <tensor[3,3]>[camU1C4B,camV1C64,camN1C40];
    real op1_e3_l_31CC5#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1C16);
    real op1_e3_l_41CC6#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31CC5);
    real op1_e3_l_51CC7#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41CC6);
    tensor[3] op1_e3_l_61CC8#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1CC2,litdir1C16);
    tensor[3] litwsp1CC4#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51CC7,op1_e3_l_61CC8);
    globals.litwsp1BAE = litwsp1CC4;
    globals._t1BAF = _t1C3A;
    globals._tX1BB0 = _t1C38;
    globals._tXX1BB1 = _t1C36;
    globals.img1BB2 = img1C3E;
    globals._tXXX1BB3 = _t1C3C;
    return
## strand
  strand ray (int ui1CD5#1, int vi1CD6#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1CE7:  preds = []
        tensor[3] camEye1CE8#1 = globals.camEye1B8F;
        bool camOrtho1CEA#2 = globals.camOrtho1B95;
        int iresU1CEC#1 = globals.iresU1B96;
        int iresV1CEE#1 = globals.iresV1B97;
        real rayStep1CF0#1 = globals.rayStep1B98;
        real refStep1CF2#1 = globals.refStep1B99;
        tensor[4] phong1CF4#4 = globals.phong1BA1;
        tensor[3] camN1CF6#1 = globals.camN1BA6;
        tensor[3] camU1CF8#1 = globals.camU1BA7;
        tensor[3] camV1CFA#1 = globals.camV1BA8;
        real camDist1CFC#1 = globals.camDist1BA9;
        real camVmax1CFE#2 = globals.camVmax1BAA;
        real camUmax1D00#2 = globals.camUmax1BAB;
        real camNearVsp1D02#1 = globals.camNearVsp1BAC;
        real _t1D04#5 = -0.5e0;
        real _t1D06#1 = IntToReal(ui1CD5);
        real _t1D08#1 = IntToReal(iresU1CEC);
        real _t1D0A#3 = 0.5e0;
        real op1_e3_l_61D0D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D08,_t1D0A);
        real op1_e3_l_71D0E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D06);
        real op1_e3_l_81D0F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_61D0D);
        real op1_e3_l_91D10#2 = λ(T0[])<Neg(T0)> (camUmax1D00);
        real op1_e3_l_101D11#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D0E,op1_e3_l_81D0F);
        real op1_e3_l_111D12#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1D00,op1_e3_l_91D10);
        real op1_e3_l_131D13#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D11,op1_e3_l_111D12);
        real rayU1D0C#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D10,op1_e3_l_131D13);
        real _t1D1C#1 = IntToReal(vi1CD6);
        real _t1D1E#2 = IntToReal(iresV1CEE);
        real op1_e3_l_61D21#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D1E,_t1D0A);
        real op1_e3_l_71D22#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D1C);
        real op1_e3_l_81D23#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_61D21);
        real op1_e3_l_91D24#3 = λ(T0[])<Neg(T0)> (camVmax1CFE);
        real op1_e3_l_101D25#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D22,op1_e3_l_81D23);
        real op1_e3_l_111D26#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CFE,op1_e3_l_91D24);
        real op1_e3_l_131D27#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D25,op1_e3_l_111D26);
        real rayV1D20#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D24,op1_e3_l_131D27);
        real op1_e3_l_231D39#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D0A,_t1D1E);
        real op1_e3_l_251D3B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_231D39);
        real op1_e3_l_271D3D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D22,op1_e3_l_251D3B);
        real op1_e3_l_301D3F#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271D3D,op1_e3_l_111D26);
        real op1_e3_l_311D40#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D24,op1_e3_l_301D3F);
        tensor[3] op1_e3_l_321D41#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF8,rayU1D0C);
        tensor[3] op1_e3_l_331D42#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CFA,op1_e3_l_311D40);
        tensor[3] UV1D30#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321D41,op1_e3_l_331D42);
        if camOrtho1CEA then goto JOIN1D59 else goto ASSIGN1DC5
      JOIN1D59:  preds = [COND1D56,ASSIGN1DC6]
        tensor[3] _t1D57#1 = phi(UV1D30,_t1D58)
        tensor[3] rayOrig1D5A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1CE8,_t1D57);
        if camOrtho1CEA then goto ASSIGN1D5E else goto ASSIGN20DD
      ASSIGN1D5E:  preds = [COND1D5C]
        real _t1D5D#3 = 0.e0;
        tensor[3] _t1D5F#1 = <tensor[3]>[_t1D5D,_t1D5D,_t1D5D];
        goto JOIN1D63
      JOIN1D63:  preds = [ASSIGN1D60,ASSIGN20DD]
        tensor[3] _t1D61#1 = phi(_t1D5F,_t1D62)
        tensor[3] rayVec1D64#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CF6,_t1D61);
        real op1_e3_l_61D68#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1D64,rayVec1D64);
        real op1_e3_l_71D69#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D68);
        real op1_e3_l_81D6A#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1CF0,op1_e3_l_71D69);
        real alphaFix1D66#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1CF2,op1_e3_l_81D6A);
        real op1_e3_l_91D74#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D69);
        tensor[3] op1_e3_l_101D75#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1D64,op1_e3_l_91D74);
        tensor[3] eyeDir1D70#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101D75);
        real phKa1D7C#1 = TensorIndex<tensor[4],[0]>(phong1CF4);
        real phKd1D7E#1 = TensorIndex<tensor[4],[1]>(phong1CF4);
        real phKs1D80#1 = TensorIndex<tensor[4],[2]>(phong1CF4);
        real phSp1D82#1 = TensorIndex<tensor[4],[3]>(phong1CF4);
        real _t1D84#8 = 0.e0;
        tensor[4] rgba1D86#1 = <tensor[4]>[_t1D84,_t1D84,_t1D84,_t1D84];
        tensor[3] rgb1D88#1 = <tensor[3]>[_t1D84,_t1D84,_t1D84];
        real transp1D8A#1 = 0.1e1;
        self.rayU = rayU1D0C;
        self.rayV = rayV1D20;
        self.rayN = camNearVsp1D02;
        self.UV = UV1D30;
        self.rayOrig = rayOrig1D5A;
        self.rayVec = rayVec1D64;
        self.alphaFix = alphaFix1D66;
        self.eyeDir = eyeDir1D70;
        self.phKa = phKa1D7C;
        self.phKd = phKd1D7E;
        self.phKs = phKs1D80;
        self.phSp = phSp1D82;
        self.rgba = rgba1D86;
        self.raw = _t1D84;
        self.rgb = rgb1D88;
        self.transp = transp1D8A;
        return
      ASSIGN20DD:  preds = [COND1D5C]
        tensor[3] _t1D62#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1CFC,UV1D30);
        goto JOIN1D63
      ASSIGN1DC5:  preds = [COND1D56]
        real _t1DC4#3 = 0.e0;
        tensor[3] _t1D58#1 = <tensor[3]>[_t1DC4,_t1DC4,_t1DC4];
        goto JOIN1D59
    end state init
    method update
        ENTRY1DC7:  preds = []
          image(IMAGE1D<double[3]>) cmap20C8#3 = globals.cmap1B8E;
          int _t1DC8#9 = globals._t1BAF;
          femData:Space _t1DCA#9 = globals._tX1BB0;
          femData:FemFunc _t1DCC#9 = globals._tXX1BB1;
          image(IMAGE1D<double[3]>) img1DCE#1 = globals.img1BB2;
          kernel _t1DD0#1 = globals._tXXX1BB3;
          femData:Mesh block1DD2#1 = globals.block1B8A;
          real rayStep1DD4#1 = globals.rayStep1B98;
          real transp01DD6#1 = globals.transp01B9A;
          real thick1DD8#1 = globals.thick1B9B;
          real fStrTh1DDA#1 = globals.fStrTh1B9C;
          real fMaskTh1DDC#1 = globals.fMaskTh1B9D;
          real fBias1DDE#1 = globals.fBias1B9E;
          real maxAlpha1DE0#2 = globals.maxAlpha1B9F;
          tensor[3] mcNear1DE2#2 = globals.mcNear1BA2;
          tensor[3] mcFar1DE4#1 = globals.mcFar1BA3;
          tensor[2] cminmax1DE6#2 = globals.cminmax1BA5;
          real camNearVsp1DE8#2 = globals.camNearVsp1BAC;
          real camFarVsp1DEA#2 = globals.camFarVsp1BAD;
          tensor[3] litwsp1DEC#2 = globals.litwsp1BAE;
          real rayN1DEE#1 = self.rayN;
          tensor[3] rayOrig1DF0#2 = self.rayOrig;
          tensor[3] rayVec1DF2#1 = self.rayVec;
          real alphaFix1DF4#1 = self.alphaFix;
          tensor[3] eyeDir1DF6#1 = self.eyeDir;
          real phKa1DF8#1 = self.phKa;
          real phKd1DFA#1 = self.phKd;
          real phKs1DFC#2 = self.phKs;
          real phSp1DFE#1 = self.phSp;
          tensor[3] rgb1E00#1 = self.rgb;
          real transp1E02#2 = self.transp;
          real rayN1E04#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1DEE,rayStep1DD4);
          bool _t1E06#1 = GT<real>(rayN1E04,camFarVsp1DEA);
          if _t1E06 then goto SAVE1E09 else goto JOIN1E0B
        SAVE1E09:  preds = [COND1E08]
          self.rayN = rayN1E04;
          stabilize
          goto JOIN1E0B
        JOIN1E0B:  preds = [*STABILIZE1E0A,COND1E08]
          tensor[3] op1_e3_l_51E0E#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DF2,rayN1E04);
          tensor[3] pos1E0C#19 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1DF0,op1_e3_l_51E0E);
          femData:RefCell _t1E12#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1DD2);
          real _t1E14#1 = 0.1e-8;
          bool _t1E16#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1E12,pos1E0C,_t1E14);
          if _t1E16 then goto ASSIGN1E1E else goto ASSIGN2087
        ASSIGN1E1E:  preds = [COND1E18]
          int[84] femIndicies1E1B#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1E1C#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1E1B);
          tensor[3,3,84] basisResult1E1D#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] _t1E19#5 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1E1C,basisResult1E1D,pos1E0C);
          (real[3] _t1E23#1,tensor[3][3] evecs1E24#0) = EigenVecs3x3(_t1E19);
          int _t1E26#1 = 1;
          real _t1E28#1 = Subscript<real[3]>(_t1E23,_t1E26);
          tensor[3,84] basisResult1E33#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_61E2B#6 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1E1C,basisResult1E33,pos1E0C);
          real op1_e3_l_81E2C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61E2B,probe_l_61E2B);
          real op1_e3_l_91E2D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81E2C);
          real op1_e3_l_101E2E#1 = λ(T0[])<Neg(T0)> (_t1E28);
          real op1_e3_l_111E2F#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1DDE,op1_e3_l_91E2D);
          real _t1E2A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101E2E,op1_e3_l_111E2F);
          bool _t1E3E#1 = GT<real>(_t1E2A,fStrTh1DDA);
          if _t1E3E then goto ASSIGN1E42 else goto ASSIGN2086
        ASSIGN1E42:  preds = [COND1E40]
          real _t1E41#1 = 0.1e1;
          bool _t1E43#1 = GTE<real>(_t1E41,fMaskTh1DDC);
          if _t1E43 then goto ASSIGN20E4 else goto ASSIGN2085
        ASSIGN20E4:  preds = [COND1E45]
          tensor[3] op1_e3_l_221E49#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1E19,probe_l_61E2B);
          tensor[3,3,3] op1_e3_l_231E4A#2 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_241E4B#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_221E49,op1_e3_l_231E4A);
          tensor[3,3,3,84] basisResult1E5F#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_311E4C#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1E1C,basisResult1E5F,pos1E0C);
          tensor[3,3] op1_e3_l_341E4D#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_61E2B,probe_l_311E4C);
          tensor[3,3] op1_e3_l_351E4E#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (_t1E19,_t1E19);
          tensor[3,3] op1_e3_l_361E4F#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_341E4D,op1_e3_l_351E4E);
          tensor[3,3,3] op1_e3_l_371E50#1 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (_t1E19,op1_e3_l_221E49);
          tensor[3,3,3] op1_e3_l_381E51#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_61E2B,op1_e3_l_361E4F);
          tensor[3,3,3] op1_e3_l_391E52#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_371E50,op1_e3_l_381E51);
          tensor[3] op1_e3_l_411E53#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_61E2B,op1_e3_l_241E4B);
          tensor[3,3] op1_e3_l_421E54#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_391E52,op1_e3_l_231E4A);
          tensor[3] op1_e3_l_671E55#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_411E53,op1_e3_l_421E54);
          tensor[3] op1_e3_l_1191E56#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_671E55,op1_e3_l_671E55);
          real op1_e3_l_1211E57#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1191E56,op1_e3_l_1191E56);
          real _t1E46#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1211E57);
          real _t1E7A#1 = 0.1e-7;
          bool _t1E7C#1 = GT<real>(_t1E46,_t1E7A);
          if _t1E7C then goto ASSIGN1E80 else goto ASSIGN2084
        ASSIGN1E80:  preds = [COND1E7E]
          bool _t1E7F#1 = true;
          goto JOIN1E83
        JOIN1E83:  preds = [ASSIGN1E80,ASSIGN2084]
          bool _t1E81#1 = phi(_t1E7F,_t1E82)
          goto JOIN1E86
        JOIN1E86:  preds = [JOIN1E83,ASSIGN2085]
          bool _t1E84#1 = phi(_t1E81,_t1E85)
          goto JOIN1E89
        JOIN1E89:  preds = [JOIN1E86,ASSIGN2086]
          bool _t1E87#1 = phi(_t1E84,_t1E88)
          goto JOIN1E8C
        JOIN1E8C:  preds = [JOIN1E89,ASSIGN2087]
          bool _t1E8A#1 = phi(_t1E87,_t1E8B)
          bool _t1E8D#1 = BNot(_t1E8A);
          if _t1E8D then goto SAVE1E90 else goto JOIN1E92
        SAVE1E90:  preds = [COND1E8F]
          self.rayN = rayN1E04;
          active
          goto JOIN1E92
        JOIN1E92:  preds = [*ACTIVE1E91,COND1E8F]
          real _t1E93#8 = 0.e0;
          real _t1E95#10 = 0.1e1;
          real _t1E97#1 = 0.15e1;
          int[84] femIndicies1EB7#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1EB8#4 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1EB7);
          tensor[3,84] basisResult1EB9#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_821E9A#10 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1EB8,basisResult1EB9,pos1E0C);
          tensor[3,3,84] basisResult1EBB#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] probe_l_831E9B#10 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1EB8,basisResult1EBB,pos1E0C);
          tensor[3] op1_e3_l_851E9C#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (probe_l_831E9B,probe_l_821E9A);
          tensor[3,3,3] op1_e3_l_861E9D#5 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_871E9E#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_851E9C,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_941E9F#6 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_821E9A,op1_e3_l_871E9E);
          tensor[3,3,3,84] basisResult1EBD#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_1081EA0#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1EB8,basisResult1EBD,pos1E0C);
          tensor[3,3,3] op1_e3_l_1111EA1#1 = λ(T0[3],T1[3 3 3])<(T0_{i0} * T1_{i1,i0,i2})>_{3 3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3,3] op1_e3_l_1121EA2#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} * T1_{i1,i2})>_{3 3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1131EA3#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2,i0,i1} + T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_1111EA1,op1_e3_l_1121EA2);
          tensor[3,3,3] op1_e3_l_1141EA4#4 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (probe_l_831E9B,op1_e3_l_851E9C);
          tensor[3,3,3] op1_e3_l_1151EA5#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1131EA3);
          tensor[3,3,3] op1_e3_l_1161EA6#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1151EA5);
          tensor[3,3] op1_e3_l_1191EA7#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1161EA6,op1_e3_l_861E9D);
          tensor[3,3] op1_e3_l_1441EA8#2 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i0})>_{3 3} (op1_e3_l_941E9F,op1_e3_l_1191EA7);
          real op1_e3_l_1461EA9#4 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_941E9F,op1_e3_l_941E9F);
          tensor[3] op1_e3_l_1471EAA#3 = λ(T0[3 3],T1[3 3])<Σ(i1=0..2)<((T0_{i1,i0} + T1_{i1,i0}))>(i1=0..2)>_{3} (op1_e3_l_1441EA8,op1_e3_l_1441EA8);
          tensor[3] op1_e3_l_2501EAB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_1471EAA);
          real op1_e3_l_2511EAC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1471EAA,op1_e3_l_1471EAA);
          tensor[3] op1_e3_l_2521EAD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2501EAB,op1_e3_l_2511EAC);
          tensor[3] op1_e3_l_4241EAE#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_2521EAD);
          real op1_e3_l_4261EAF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4241EAE,op1_e3_l_4241EAE);
          real op1_e3_l_4271EB0#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_4261EAF);
          real op1_e3_l_4281EB1#1 = λ(T0[])<Abs(T0)> (op1_e3_l_4271EB0);
          real op1_e3_l_4291EB2#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD8,op1_e3_l_4281EB1);
          real op1_e3_l_4301EB3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_4291EB2);
          real op1_e3_l_4311EB4#2 = λ(T0[],T1[])<(T0 * T1)> (_t1E97,op1_e3_l_4301EB3);
          real op1_e3_l_4321EB5#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1E93,_t1E95,op1_e3_l_4311EB4);
          real _t1E99#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DE0,op1_e3_l_4321EB5);
          bool _t1EE3#1 = EQ<real>(_t1E99,_t1E93);
          if _t1EE3 then goto SAVE1EE6 else goto JOIN1EE8
        SAVE1EE6:  preds = [COND1EE5]
          self.rayN = rayN1E04;
          active
          goto JOIN1EE8
        JOIN1EE8:  preds = [*ACTIVE1EE7,COND1EE5]
          real op1_e3_l_4331F05#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1E95,_t1E93,op1_e3_l_4311EB4);
          real op1_e3_l_4341F06#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DE0,op1_e3_l_4331F05);
          real _t1EE9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_4341F06);
          real _t1F35#1 = MathFn<pow>(_t1EE9,alphaFix1DF4);
          bool _t1F37#1 = NEQ<real>(phKs1DFC,_t1E93);
          if _t1F37 then goto ASSIGN1F63 else goto JOIN1F8F
        ASSIGN1F63:  preds = [COND1F39]
          tensor[3] op1_e3_l_1561F3B#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1DF6,litwsp1DEC);
          real op1_e3_l_1581F3C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1561F3B,op1_e3_l_1561F3B);
          real op1_e3_l_1591F3D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1581F3C);
          tensor[3,3] op1_e3_l_1891F45#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3] op1_e3_l_1901F46#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1911F47#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1891F45,op1_e3_l_1901F46);
          tensor[3,3,3] op1_e3_l_1931F49#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1911F47);
          tensor[3,3,3] op1_e3_l_1941F4A#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1931F49);
          tensor[3,3] op1_e3_l_1971F4B#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1941F4A,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_2221F4C#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_941E9F,op1_e3_l_1971F4B);
          tensor[3] op1_e3_l_2251F4E#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_2221F4C,op1_e3_l_2221F4C);
          tensor[3] op1_e3_l_3281F4F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_2251F4E);
          real op1_e3_l_3291F50#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2251F4E,op1_e3_l_2251F4E);
          tensor[3] op1_e3_l_3301F51#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_3281F4F,op1_e3_l_3291F50);
          tensor[3] op1_e3_l_6731F52#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_3301F51);
          real op1_e3_l_6751F53#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6731F52,op1_e3_l_6731F52);
          real op1_e3_l_6761F54#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_6751F53);
          real op1_e3_l_6781F55#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_6761F54);
          tensor[3] op1_e3_l_6791F56#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_6731F52,op1_e3_l_6781F55);
          tensor[3] op1_e3_l_6801F57#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_6791F56);
          real op1_e3_l_6821F58#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1591F3D);
          real op1_e3_l_6831F59#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6801F57,op1_e3_l_1561F3B);
          real op1_e3_l_6841F5A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_6821F58,op1_e3_l_6831F59);
          real _t1F3A#1 = λ(T0[])<Abs(T0)> (op1_e3_l_6841F5A);
          real scomp1F8C#1 = MathFn<pow>(_t1F3A,phSp1DFE);
          goto JOIN1F8F
        JOIN1F8F:  preds = [ASSIGN1F8D,COND1F39]
          real scomp1F8E#1 = phi(scomp1F8C,_t1E93)
          real cmin1F90#3 = TensorIndex<tensor[2],[0]>(cminmax1DE6);
          real cmax1F92#2 = TensorIndex<tensor[2],[1]>(cminmax1DE6);
          tensor[3] mcol1F94#2 = <tensor[3]>[_t1E95,_t1E95,_t1E95];
          bool _t1F96#1 = NEQ<real>(cmin1F90,cmax1F92);
          if _t1F96 then goto ASSIGN20F6 else goto JOIN200A
        ASSIGN20F6:  preds = [COND1F98]
          tensor[3,3] op1_e3_l_1101FA2#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3] op1_e3_l_1111FA3#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1121FA4#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1101FA2,op1_e3_l_1111FA3);
          tensor[3,3,3] op1_e3_l_1141FA6#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1121FA4);
          tensor[3,3,3] op1_e3_l_1151FA7#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1141FA6);
          tensor[3,3] op1_e3_l_1181FA8#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1151FA7,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_1431FA9#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_941E9F,op1_e3_l_1181FA8);
          tensor[3] op1_e3_l_1461FAB#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_1431FA9,op1_e3_l_1431FA9);
          tensor[3] op1_e3_l_2491FAC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_1461FAB);
          real op1_e3_l_2501FAD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1461FAB,op1_e3_l_1461FAB);
          tensor[3] op1_e3_l_2511FAE#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2491FAC,op1_e3_l_2501FAD);
          tensor[3] op1_e3_l_2531FB0#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_2511FAE);
          tensor[3] _t1F99#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (rayOrig1DF0,op1_e3_l_51E0E,op1_e3_l_2531FB0);
          tensor[84] basisResult1FE3#1 = EvaluateBasis<BasisArray(84)>(_t1F99);
          real probe_l_81FDA#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1DC8,_t1DCA,_t1DCC,_t1F99,femDofs1EB8,basisResult1FE3,_t1F99);
          real op1_e3_l_91FDB#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F90,probe_l_81FDA);
          real op1_e3_l_101FDC#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F90,cmax1F92);
          real op1_e3_l_111FDD#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91FDB,op1_e3_l_101FDC);
          real op1_e3_l_121FDE#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E93,_t1E95);
          real op1_e3_l_131FDF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111FDD,op1_e3_l_121FDE);
          real _t1FD9#2 = λ(T0[],T1[])<(T0 + T1)> (_t1E93,op1_e3_l_131FDF);
          real Mtransform1FF0#2 = Transform<IMAGE1D<double[3]>>(cmap20C8);
          real MxPos1FF1#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1FF0,_t1FD9);
          real Ttranslate1FF2#1 = Translate<IMAGE1D<double[3]>>(cmap20C8);
          real imgPos1FF3#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1FF1,Ttranslate1FF2);
          real nd1FF4#2 = Floor<1>(imgPos1FF3);
          real f1FF5#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1FF3,nd1FF4);
          int n1FF6#1 = RealToInt<1>(nd1FF4);
          int lit1FF7#1 = 0;
          int idx1FF8#1 = IAdd(n1FF6,lit1FF7);
          tensor[3,2] ldvox1FF9#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap20C8,idx1FF8);
          tensor[2] kernX_1FFA#1 = BuildPos<1>(f1FF5);
          tensor[2] kevalX_d0_1FFB#1 = EvalKernel<2,tent,0>(kernX_1FFA);
          tensor[3] mcol1FEF#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1DCE,_t1DD0,_t1FD9,Mtransform1FF0,ldvox1FF9,kevalX_d0_1FFB);
          goto JOIN200A
        JOIN200A:  preds = [ASSIGN2008,COND1F98]
          tensor[3] mcol2009#1 = phi(mcol1FEF,mcol1F94)
          tensor[3,3] op1_e3_l_1982013#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3] op1_e3_l_1992014#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_2002015#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1982013,op1_e3_l_1992014);
          tensor[3,3,3] op1_e3_l_2022017#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_2002015);
          tensor[3,3,3] op1_e3_l_2032018#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_2022017);
          tensor[3,3] op1_e3_l_2062019#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_2032018,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_231201A#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_941E9F,op1_e3_l_2062019);
          tensor[3] op1_e3_l_234201C#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_231201A,op1_e3_l_231201A);
          tensor[3] op1_e3_l_337201D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_234201C);
          real op1_e3_l_338201E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_234201C,op1_e3_l_234201C);
          tensor[3] op1_e3_l_339201F#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_337201D,op1_e3_l_338201E);
          tensor[3] op1_e3_l_6822020#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_339201F);
          real op1_e3_l_6842021#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6822020,op1_e3_l_6822020);
          real op1_e3_l_6852022#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_6842021);
          real op1_e3_l_6872023#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_6852022);
          tensor[3] op1_e3_l_6882024#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_6822020,op1_e3_l_6872023);
          tensor[3] op1_e3_l_6892025#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_6882024);
          real op1_e3_l_6902026#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1DEC,op1_e3_l_6892025);
          real op1_e3_l_6912027#1 = λ(T0[])<(T0)^2> (op1_e3_l_6902026);
          real op1_e3_l_6922028#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1DFA,op1_e3_l_6912027);
          real op1_e3_l_694202A#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE8,rayN1E04);
          real op1_e3_l_695202B#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE8,camFarVsp1DEA);
          real op1_e3_l_696202C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_694202A,op1_e3_l_695202B);
          tensor[3] op1_e3_l_697202D#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1DE2,mcFar1DE4);
          tensor[3] op1_e3_l_698202E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_696202C,op1_e3_l_697202D);
          real op1_e3_l_699202F#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1DF8,op1_e3_l_6922028);
          tensor[3] op1_e3_l_7002030#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1DE2,op1_e3_l_698202E);
          tensor[3] op1_e3_l_7012031#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2009,op1_e3_l_699202F,op1_e3_l_7002030);
          tensor[3] op1_e3_l_7022032#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1DFC,scomp1F8E,mcol1F94);
          real op1_e3_l_7032033#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,_t1F35);
          tensor[3] op1_e3_l_7042034#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_7012031,op1_e3_l_7022032);
          tensor[3] op1_e3_l_7052035#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1E02,op1_e3_l_7032033,op1_e3_l_7042034);
          tensor[3] rgb200B#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1E00,op1_e3_l_7052035);
          real op1_e3_l_52073#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_7032033);
          real transp2071#2 = λ(T0[],T1[])<(T0 * T1)> (transp1E02,op1_e3_l_52073);
          bool _t2077#1 = LT<real>(transp2071,transp01DD6);
          if _t2077 then goto SAVE207A else goto JOIN207F
        SAVE207A:  preds = [COND2079]
          self.rayN = rayN1E04;
          self.rgb = rgb200B;
          self.transp = _t1E93;
          stabilize
          goto JOIN207F
        JOIN207F:  preds = [*STABILIZE207D,COND2079]
          real transp207E#1 = phi(transp2071)
          self.rayN = rayN1E04;
          self.rgb = rgb200B;
          self.transp = transp207E;
          active
        ASSIGN2084:  preds = [COND1E7E]
          bool _t1E82#1 = false;
          goto JOIN1E83
        ASSIGN2085:  preds = [COND1E45]
          bool _t1E85#1 = false;
          goto JOIN1E86
        ASSIGN2086:  preds = [COND1E40]
          bool _t1E88#1 = false;
          goto JOIN1E89
        ASSIGN2087:  preds = [COND1E18]
          bool _t1E8B#1 = false;
          goto JOIN1E8C
    end update
    method stabilize
        ENTRY2088:  preds = []
          tensor[4] rgba2089#1 = self.rgba;
          tensor[3] rgb208B#3 = self.rgb;
          real transp208D#2 = self.transp;
          real _t208F#2 = 0.1e1;
          bool _t2091#1 = LT<real>(transp208D,_t208F);
          if _t2091 then goto ASSIGN2095 else goto JOIN20AB
        ASSIGN2095:  preds = [COND2093]
          real aa2094#4 = λ(T0[],T1[])<(T0) - (T1)> (_t208F,transp208D);
          real _t2096#1 = TensorIndex<tensor[3],[0]>(rgb208B);
          real _t2098#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2096,aa2094);
          real _t209C#1 = TensorIndex<tensor[3],[1]>(rgb208B);
          real _t209E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t209C,aa2094);
          real _t20A2#1 = TensorIndex<tensor[3],[2]>(rgb208B);
          real _t20A4#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t20A2,aa2094);
          tensor[4] rgba20A8#1 = <tensor[4]>[_t2098,_t209E,_t20A4,aa2094];
          goto JOIN20AB
        JOIN20AB:  preds = [ASSIGN20A9,COND2093]
          tensor[4] rgba20AA#1 = phi(rgba20A8,rgba2089)
          self.rgba = rgba20AA;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY20AE:  preds = []
      int iresU20AF#1 = globals.iresU1B96;
      int iresV20B1#1 = globals.iresV1B97;
      int _t20B3#2 = 0;
      int _t20B5#2 = 1;
      int _t20B7#1 = ISub(iresV20B1,_t20B5);
      int[] _t20B9#1 = Range(_t20B3,_t20B7);
    FOREACH20BC:  preds = [ASSIGN20BA,NEXT20C5]
      foreach (vi20BB in _t20B9) on exit goto RETURN20C6
      int _t20BD#1 = ISub(iresU20AF,_t20B5);
      int[] _t20BF#1 = Range(_t20B3,_t20BD);
    FOREACH20C2:  preds = [ASSIGN20C0,NEXT20C4]
      foreach (ui20C1 in _t20BF) on exit goto NEXT20C5
      new ray(ui20C1,vi20BB);
      goto FOREACH20C2
    NEXT20C5:  preds = [FOREACH20C2]
      goto FOREACH20BC
    RETURN20C6:  preds = [FOREACH20BC]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1B8A (block) = <no-default>
  input 0space04D7_intermedateGlobal1B8B (space) = <no-default>
  input 0U04D9_intermedateGlobal1B8C (U) = <no-default>
  input cellChoice1B8D (cellChoice) = <no-default>
  input cmap1B8E (cmap) = image("cmap.nrrd")
  input camEye1B8F (camEye) = <default>
  input camAt1B90 (camAt) = <default>
  input camUp1B91 (camUp) = <default>
  input camNear1B92 (camNear) = <default>
  input camFar1B93 (camFar) = <default>
  input camFOV1B94 (camFOV) = <default>
  input camOrtho1B95 (camOrtho) = <default>
  input iresU1B96 (iresU) = <default>
  input iresV1B97 (iresV) = <default>
  input rayStep1B98 (rayStep) = <default>
  input refStep1B99 (refStep) = <default>
  input transp01B9A (transp0) = <default>
  input thick1B9B (thick) = <default>
  input fStrTh1B9C (fStrTh) = <default>
  input fMaskTh1B9D (fMaskTh) = <default>
  input fBias1B9E (fBias) = <default>
  input maxAlpha1B9F (maxAlpha) = <default>
  input light1BA0 (light) = <default>
  input phong1BA1 (phong) = <default>
  input mcNear1BA2 (mcNear) = <default>
  input mcFar1BA3 (mcFar) = <default>
  input litdir1BA4 (litdir) = <default>
  input cminmax1BA5 (cminmax) = <default>
  global tensor[3] camN1BA6
  global tensor[3] camU1BA7
  global tensor[3] camV1BA8
  global real camDist1BA9
  global real camVmax1BAA
  global real camUmax1BAB
  global real camNearVsp1BAC
  global real camFarVsp1BAD
  global tensor[3] litwsp1BAE
  global int _t1BAF
  global femData:Space _tX1BB0
  global femData:FemFunc _tXX1BB1
  global image(IMAGE1D<double[3]>) img1BB2
  global kernel _tXXX1BB3
## functions
## input initialization
  ENTRY1BB4:  preds = []
    real _t1BB5#13 = 0.e0;
    real _t1BB7#1 = -0.2e1;
    tensor[3] camEye1BB9#1 = <tensor[3]>[_t1BB5,_t1BB7,_t1BB5];
    globals.camEye1B8F = camEye1BB9;
    tensor[3] camAt1BBC#1 = <tensor[3]>[_t1BB5,_t1BB5,_t1BB5];
    globals.camAt1B90 = camAt1BBC;
    real _t1BBF#5 = 0.1e1;
    tensor[3] camUp1BC1#1 = <tensor[3]>[_t1BB5,_t1BB5,_t1BBF];
    globals.camUp1B91 = camUp1BC1;
    real camNear1BC4#1 = -0.4e1;
    globals.camNear1B92 = camNear1BC4;
    real camFar1BC7#1 = 0.4e1;
    globals.camFar1B93 = camFar1BC7;
    real camFOV1BCA#1 = 0.1e2;
    globals.camFOV1B94 = camFOV1BCA;
    bool camOrtho1BCD#2 = false;
    globals.camOrtho1B95 = camOrtho1BCD;
    int iresU1BD0#2 = 100;
    globals.iresU1B96 = iresU1BD0;
    globals.iresV1B97 = iresU1BD0;
    real rayStep1BD4#2 = 0.1e-3;
    globals.rayStep1B98 = rayStep1BD4;
    globals.refStep1B99 = rayStep1BD4;
    real transp01BD8#1 = 0.5e-2;
    globals.transp01B9A = transp01BD8;
    real thick1BDB#1 = 0.1e-1;
    globals.thick1B9B = thick1BDB;
    globals.fStrTh1B9C = _t1BB5;
    globals.fMaskTh1B9D = _t1BB5;
    real fBias1BE0#2 = 0.1e0;
    globals.fBias1B9E = fBias1BE0;
    globals.maxAlpha1B9F = _t1BBF;
    globals.light1BA0 = camOrtho1BCD;
    real _t1BE5#1 = 0.7e0;
    real _t1BE7#1 = 0.2e0;
    real _t1BE9#1 = 0.1e3;
    tensor[4] phong1BEB#1 = <tensor[4]>[fBias1BE0,_t1BE5,_t1BE7,_t1BE9];
    globals.phong1BA1 = phong1BEB;
    tensor[3] mcNear1BEE#2 = <tensor[3]>[_t1BBF,_t1BBF,_t1BBF];
    globals.mcNear1BA2 = mcNear1BEE;
    globals.mcFar1BA3 = mcNear1BEE;
    real _t1BF2#1 = -0.1e1;
    tensor[3] litdir1BF4#1 = <tensor[3]>[_t1BB5,_t1BF2,_t1BB5];
    globals.litdir1BA4 = litdir1BF4;
    tensor[2] cminmax1BF7#1 = <tensor[2]>[_t1BB5,_t1BB5];
    globals.cminmax1BA5 = cminmax1BF7;
    return
## global-variable initialization
  ENTRY1BFB:  preds = []
    femData:Mesh block1BFC#3 = globals.block1B8A;
    femData:Space 0space04D7_intermedateGlobal1BFE#1 = globals.0space04D7_intermedateGlobal1B8B;
    femData:FemFunc 0U04D9_intermedateGlobal1C00#1 = globals.0U04D9_intermedateGlobal1B8C;
    int cellChoice1C02#1 = globals.cellChoice1B8D;
    image(IMAGE1D<double[3]>) cmap1C04#1 = globals.cmap1B8E;
    tensor[3] camEye1C06#1 = globals.camEye1B8F;
    tensor[3] camAt1C08#1 = globals.camAt1B90;
    tensor[3] camUp1C0A#1 = globals.camUp1B91;
    real camNear1C0C#1 = globals.camNear1B92;
    real camFar1C0E#1 = globals.camFar1B93;
    real camFOV1C10#1 = globals.camFOV1B94;
    int iresU1C12#1 = globals.iresU1B96;
    int iresV1C14#1 = globals.iresV1B97;
    tensor[3] litdir1C16#2 = globals.litdir1BA4;
    int _t1C18#1 = 0;
    int _t1C1A#1 = 1;
    int _t1C1C#1 = ExtractFemItem<int,NumCell(Mesh)>(block1BFC);
    int _t1C1E#1 = ISub(_t1C1C,_t1C1A);
    int[] _t1C20#1 = Range(_t1C18,_t1C1E);
    femData:MeshCell[] _t1C22#1 = <femData:MeshCell[]>{};
  FOREACH1C25:  preds = [ASSIGN1C23,NEXT1C2B]
    foreach (_t1C24 in _t1C20) on exit goto ASSIGN1C2D
      femData:MeshCell[] _t1C29#2 = phi(_t1C22,_t1C28)
    femData:MeshCell _t1C26#1 = LoadFem<femData:MeshCell>(block1BFC,_t1C24);
    femData:MeshCell[] _t1C28#1 = Append<femData:MeshCell>(_t1C29,_t1C26);
    goto FOREACH1C25
  ASSIGN1C2D:  preds = [FOREACH1C25]
    femData:Space space1C2C#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal1BFE,block1BFC);
    femData:FemFunc U1C2E#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal1C00,space1C2C);
    femData:MeshCell c11C30#1 = Subscript<femData:MeshCell[]>(_t1C29,cellChoice1C02);
    int _t1C32#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11C30);
    femData:FuncCell _t1C34#2 = LoadFem<femData:FuncCell>(U1C2E,_t1C32);
    femData:FemFunc _t1C36#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1C34);
    femData:Space _t1C38#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1C36);
    int _t1C3A#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1C34);
    kernel _t1C3C#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1C3E#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1C04);
    tensor[3] op1_e3_l_41C41#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_61C42#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41C41,op1_e3_l_41C41);
    real op1_e3_l_71C43#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61C42);
    real op1_e3_l_91C44#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71C43);
    tensor[3] camN1C40#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41C41,op1_e3_l_91C44);
    globals.camN1BA6 = camN1C40;
    tensor[3,3] op1_e3_l_151C4F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C0A);
    tensor[3] op1_e3_l_171C51#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C41,op1_e3_l_151C4F);
    real op1_e3_l_341C52#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171C51,op1_e3_l_171C51);
    real op1_e3_l_351C53#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91C44,op1_e3_l_91C44,op1_e3_l_341C52);
    real op1_e3_l_361C54#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C53);
    tensor[3] op1_e3_l_371C55#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C44,op1_e3_l_171C51);
    real op1_e3_l_381C56#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C54);
    tensor[3] camU1C4B#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371C55,op1_e3_l_381C56);
    globals.camU1BA7 = camU1C4B;
    tensor[3,3] op1_e3_l_451C6E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171C51);
    tensor[3] op1_e3_l_471C6F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C41,op1_e3_l_451C6E);
    tensor[3] op1_e3_l_501C71#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C44,op1_e3_l_471C6F);
    tensor[3] camV1C64#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91C44,op1_e3_l_381C56,op1_e3_l_501C71);
    globals.camV1BA8 = camV1C64;
    globals.camDist1BA9 = op1_e3_l_71C43;
    real _t1C88#1 = 0.314159265358979323846264338327950288e1;
    real _t1C8A#1 = 0.36e3;
    real op1_e3_l_51C8D#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C10,_t1C88);
    real op1_e3_l_61C8E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C8A,op1_e3_l_51C8D);
    real op1_e3_l_101C91#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61C8E);
    real camVmax1C8C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101C91,op1_e3_l_71C43);
    globals.camVmax1BAA = camVmax1C8C;
    real _t1C9B#1 = IntToReal(iresU1C12);
    real _t1C9D#1 = IntToReal(iresV1C14);
    real op1_e3_l_141CA6#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1C9B,op1_e3_l_101C91,op1_e3_l_71C43);
    real camUmax1C9F#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C9D,op1_e3_l_141CA6);
    globals.camUmax1BAB = camUmax1C9F;
    real camNearVsp1CB0#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1C0C,op1_e3_l_71C43);
    globals.camNearVsp1BAC = camNearVsp1CB0;
    real camFarVsp1CB9#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1C0E,op1_e3_l_71C43);
    globals.camFarVsp1BAD = camFarVsp1CB9;
    tensor[3,3] _t1CC2#1 = <tensor[3,3]>[camU1C4B,camV1C64,camN1C40];
    real op1_e3_l_31CC5#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1C16);
    real op1_e3_l_41CC6#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31CC5);
    real op1_e3_l_51CC7#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41CC6);
    tensor[3] op1_e3_l_61CC8#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1CC2,litdir1C16);
    tensor[3] litwsp1CC4#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51CC7,op1_e3_l_61CC8);
    globals.litwsp1BAE = litwsp1CC4;
    globals._t1BAF = _t1C3A;
    globals._tX1BB0 = _t1C38;
    globals._tXX1BB1 = _t1C36;
    globals.img1BB2 = img1C3E;
    globals._tXXX1BB3 = _t1C3C;
    return
## strand
  strand ray (int ui1CD5#1, int vi1CD6#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1CE7:  preds = []
        tensor[3] camEye1CE8#1 = globals.camEye1B8F;
        bool camOrtho1CEA#2 = globals.camOrtho1B95;
        int iresU1CEC#1 = globals.iresU1B96;
        int iresV1CEE#1 = globals.iresV1B97;
        real rayStep1CF0#1 = globals.rayStep1B98;
        real refStep1CF2#1 = globals.refStep1B99;
        tensor[4] phong1CF4#4 = globals.phong1BA1;
        tensor[3] camN1CF6#1 = globals.camN1BA6;
        tensor[3] camU1CF8#1 = globals.camU1BA7;
        tensor[3] camV1CFA#1 = globals.camV1BA8;
        real camDist1CFC#1 = globals.camDist1BA9;
        real camVmax1CFE#2 = globals.camVmax1BAA;
        real camUmax1D00#2 = globals.camUmax1BAB;
        real camNearVsp1D02#1 = globals.camNearVsp1BAC;
        real _t1D04#5 = -0.5e0;
        real _t1D06#1 = IntToReal(ui1CD5);
        real _t1D08#1 = IntToReal(iresU1CEC);
        real _t1D0A#3 = 0.5e0;
        real op1_e3_l_61D0D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D08,_t1D0A);
        real op1_e3_l_71D0E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D06);
        real op1_e3_l_81D0F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_61D0D);
        real op1_e3_l_91D10#2 = λ(T0[])<Neg(T0)> (camUmax1D00);
        real op1_e3_l_101D11#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D0E,op1_e3_l_81D0F);
        real op1_e3_l_111D12#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1D00,op1_e3_l_91D10);
        real op1_e3_l_131D13#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D11,op1_e3_l_111D12);
        real rayU1D0C#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D10,op1_e3_l_131D13);
        real _t1D1C#1 = IntToReal(vi1CD6);
        real _t1D1E#2 = IntToReal(iresV1CEE);
        real op1_e3_l_61D21#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D1E,_t1D0A);
        real op1_e3_l_71D22#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D1C);
        real op1_e3_l_81D23#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_61D21);
        real op1_e3_l_91D24#3 = λ(T0[])<Neg(T0)> (camVmax1CFE);
        real op1_e3_l_101D25#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D22,op1_e3_l_81D23);
        real op1_e3_l_111D26#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CFE,op1_e3_l_91D24);
        real op1_e3_l_131D27#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D25,op1_e3_l_111D26);
        real rayV1D20#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D24,op1_e3_l_131D27);
        real op1_e3_l_231D39#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D0A,_t1D1E);
        real op1_e3_l_251D3B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_231D39);
        real op1_e3_l_271D3D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D22,op1_e3_l_251D3B);
        real op1_e3_l_301D3F#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271D3D,op1_e3_l_111D26);
        real op1_e3_l_311D40#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D24,op1_e3_l_301D3F);
        tensor[3] op1_e3_l_321D41#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF8,rayU1D0C);
        tensor[3] op1_e3_l_331D42#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CFA,op1_e3_l_311D40);
        tensor[3] UV1D30#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321D41,op1_e3_l_331D42);
        if camOrtho1CEA then goto JOIN1D59 else goto ASSIGN1DC5
      JOIN1D59:  preds = [COND1D56,ASSIGN1DC6]
        tensor[3] _t1D57#1 = phi(UV1D30,_t1D58)
        tensor[3] rayOrig1D5A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1CE8,_t1D57);
        if camOrtho1CEA then goto ASSIGN1D5E else goto ASSIGN20DD
      ASSIGN1D5E:  preds = [COND1D5C]
        real _t1D5D#3 = 0.e0;
        tensor[3] _t1D5F#1 = <tensor[3]>[_t1D5D,_t1D5D,_t1D5D];
        goto JOIN1D63
      JOIN1D63:  preds = [ASSIGN1D60,ASSIGN20DD]
        tensor[3] _t1D61#1 = phi(_t1D5F,_t1D62)
        tensor[3] rayVec1D64#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CF6,_t1D61);
        real op1_e3_l_61D68#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1D64,rayVec1D64);
        real op1_e3_l_71D69#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D68);
        real op1_e3_l_81D6A#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1CF0,op1_e3_l_71D69);
        real alphaFix1D66#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1CF2,op1_e3_l_81D6A);
        real op1_e3_l_91D74#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D69);
        tensor[3] op1_e3_l_101D75#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1D64,op1_e3_l_91D74);
        tensor[3] eyeDir1D70#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101D75);
        real phKa1D7C#1 = TensorIndex<tensor[4],[0]>(phong1CF4);
        real phKd1D7E#1 = TensorIndex<tensor[4],[1]>(phong1CF4);
        real phKs1D80#1 = TensorIndex<tensor[4],[2]>(phong1CF4);
        real phSp1D82#1 = TensorIndex<tensor[4],[3]>(phong1CF4);
        real _t1D84#8 = 0.e0;
        tensor[4] rgba1D86#1 = <tensor[4]>[_t1D84,_t1D84,_t1D84,_t1D84];
        tensor[3] rgb1D88#1 = <tensor[3]>[_t1D84,_t1D84,_t1D84];
        real transp1D8A#1 = 0.1e1;
        self.rayU = rayU1D0C;
        self.rayV = rayV1D20;
        self.rayN = camNearVsp1D02;
        self.UV = UV1D30;
        self.rayOrig = rayOrig1D5A;
        self.rayVec = rayVec1D64;
        self.alphaFix = alphaFix1D66;
        self.eyeDir = eyeDir1D70;
        self.phKa = phKa1D7C;
        self.phKd = phKd1D7E;
        self.phKs = phKs1D80;
        self.phSp = phSp1D82;
        self.rgba = rgba1D86;
        self.raw = _t1D84;
        self.rgb = rgb1D88;
        self.transp = transp1D8A;
        return
      ASSIGN20DD:  preds = [COND1D5C]
        tensor[3] _t1D62#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1CFC,UV1D30);
        goto JOIN1D63
      ASSIGN1DC5:  preds = [COND1D56]
        real _t1DC4#3 = 0.e0;
        tensor[3] _t1D58#1 = <tensor[3]>[_t1DC4,_t1DC4,_t1DC4];
        goto JOIN1D59
    end state init
    method update
        ENTRY1DC7:  preds = []
          image(IMAGE1D<double[3]>) cmap20C8#3 = globals.cmap1B8E;
          int _t1DC8#9 = globals._t1BAF;
          femData:Space _t1DCA#9 = globals._tX1BB0;
          femData:FemFunc _t1DCC#9 = globals._tXX1BB1;
          image(IMAGE1D<double[3]>) img1DCE#1 = globals.img1BB2;
          kernel _t1DD0#1 = globals._tXXX1BB3;
          femData:Mesh block1DD2#1 = globals.block1B8A;
          real rayStep1DD4#1 = globals.rayStep1B98;
          real transp01DD6#1 = globals.transp01B9A;
          real thick1DD8#1 = globals.thick1B9B;
          real fStrTh1DDA#1 = globals.fStrTh1B9C;
          real fMaskTh1DDC#1 = globals.fMaskTh1B9D;
          real fBias1DDE#1 = globals.fBias1B9E;
          real maxAlpha1DE0#2 = globals.maxAlpha1B9F;
          tensor[3] mcNear1DE2#2 = globals.mcNear1BA2;
          tensor[3] mcFar1DE4#1 = globals.mcFar1BA3;
          tensor[2] cminmax1DE6#2 = globals.cminmax1BA5;
          real camNearVsp1DE8#2 = globals.camNearVsp1BAC;
          real camFarVsp1DEA#2 = globals.camFarVsp1BAD;
          tensor[3] litwsp1DEC#2 = globals.litwsp1BAE;
          real rayN1DEE#1 = self.rayN;
          tensor[3] rayOrig1DF0#2 = self.rayOrig;
          tensor[3] rayVec1DF2#1 = self.rayVec;
          real alphaFix1DF4#1 = self.alphaFix;
          tensor[3] eyeDir1DF6#1 = self.eyeDir;
          real phKa1DF8#1 = self.phKa;
          real phKd1DFA#1 = self.phKd;
          real phKs1DFC#2 = self.phKs;
          real phSp1DFE#1 = self.phSp;
          tensor[3] rgb1E00#1 = self.rgb;
          real transp1E02#2 = self.transp;
          real rayN1E04#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1DEE,rayStep1DD4);
          bool _t1E06#1 = GT<real>(rayN1E04,camFarVsp1DEA);
          if _t1E06 then goto SAVE1E09 else goto JOIN1E0B
        SAVE1E09:  preds = [COND1E08]
          self.rayN = rayN1E04;
          stabilize
          goto JOIN1E0B
        JOIN1E0B:  preds = [*STABILIZE1E0A,COND1E08]
          tensor[3] op1_e3_l_51E0E#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DF2,rayN1E04);
          tensor[3] pos1E0C#19 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1DF0,op1_e3_l_51E0E);
          femData:RefCell _t1E12#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1DD2);
          real _t1E14#1 = 0.1e-8;
          bool _t1E16#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1E12,pos1E0C,_t1E14);
          if _t1E16 then goto ASSIGN1E1E else goto ASSIGN2087
        ASSIGN1E1E:  preds = [COND1E18]
          int[84] femIndicies1E1B#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1E1C#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1E1B);
          tensor[3,3,84] basisResult1E1D#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] _t1E19#5 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1E1C,basisResult1E1D,pos1E0C);
          real[3] _t1E23#1 = EigenVals3x3(_t1E19);
          int _t1E26#1 = 1;
          real _t1E28#1 = Subscript<real[3]>(_t1E23,_t1E26);
          tensor[3,84] basisResult1E33#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_61E2B#6 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1E1C,basisResult1E33,pos1E0C);
          real op1_e3_l_81E2C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61E2B,probe_l_61E2B);
          real op1_e3_l_91E2D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81E2C);
          real op1_e3_l_101E2E#1 = λ(T0[])<Neg(T0)> (_t1E28);
          real op1_e3_l_111E2F#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1DDE,op1_e3_l_91E2D);
          real _t1E2A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101E2E,op1_e3_l_111E2F);
          bool _t1E3E#1 = GT<real>(_t1E2A,fStrTh1DDA);
          if _t1E3E then goto ASSIGN1E42 else goto ASSIGN2086
        ASSIGN1E42:  preds = [COND1E40]
          real _t1E41#1 = 0.1e1;
          bool _t1E43#1 = GTE<real>(_t1E41,fMaskTh1DDC);
          if _t1E43 then goto ASSIGN20E4 else goto ASSIGN2085
        ASSIGN20E4:  preds = [COND1E45]
          tensor[3] op1_e3_l_221E49#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1E19,probe_l_61E2B);
          tensor[3,3,3] op1_e3_l_231E4A#2 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_241E4B#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_221E49,op1_e3_l_231E4A);
          tensor[3,3,3,84] basisResult1E5F#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_311E4C#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1E1C,basisResult1E5F,pos1E0C);
          tensor[3,3] op1_e3_l_341E4D#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_61E2B,probe_l_311E4C);
          tensor[3,3] op1_e3_l_351E4E#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (_t1E19,_t1E19);
          tensor[3,3] op1_e3_l_361E4F#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_341E4D,op1_e3_l_351E4E);
          tensor[3,3,3] op1_e3_l_371E50#1 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (_t1E19,op1_e3_l_221E49);
          tensor[3,3,3] op1_e3_l_381E51#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_61E2B,op1_e3_l_361E4F);
          tensor[3,3,3] op1_e3_l_391E52#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_371E50,op1_e3_l_381E51);
          tensor[3] op1_e3_l_411E53#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_61E2B,op1_e3_l_241E4B);
          tensor[3,3] op1_e3_l_421E54#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_391E52,op1_e3_l_231E4A);
          tensor[3] op1_e3_l_671E55#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_411E53,op1_e3_l_421E54);
          tensor[3] op1_e3_l_1191E56#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_671E55,op1_e3_l_671E55);
          real op1_e3_l_1211E57#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1191E56,op1_e3_l_1191E56);
          real _t1E46#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1211E57);
          real _t1E7A#1 = 0.1e-7;
          bool _t1E7C#1 = GT<real>(_t1E46,_t1E7A);
          if _t1E7C then goto ASSIGN1E80 else goto ASSIGN2084
        ASSIGN1E80:  preds = [COND1E7E]
          bool _t1E7F#1 = true;
          goto JOIN1E83
        JOIN1E83:  preds = [ASSIGN1E80,ASSIGN2084]
          bool _t1E81#1 = phi(_t1E7F,_t1E82)
          goto JOIN1E86
        JOIN1E86:  preds = [JOIN1E83,ASSIGN2085]
          bool _t1E84#1 = phi(_t1E81,_t1E85)
          goto JOIN1E89
        JOIN1E89:  preds = [JOIN1E86,ASSIGN2086]
          bool _t1E87#1 = phi(_t1E84,_t1E88)
          goto JOIN1E8C
        JOIN1E8C:  preds = [JOIN1E89,ASSIGN2087]
          bool _t1E8A#1 = phi(_t1E87,_t1E8B)
          bool _t1E8D#1 = BNot(_t1E8A);
          if _t1E8D then goto SAVE1E90 else goto JOIN1E92
        SAVE1E90:  preds = [COND1E8F]
          self.rayN = rayN1E04;
          active
          goto JOIN1E92
        JOIN1E92:  preds = [*ACTIVE1E91,COND1E8F]
          real _t1E93#8 = 0.e0;
          real _t1E95#10 = 0.1e1;
          real _t1E97#1 = 0.15e1;
          int[84] femIndicies1EB7#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1EB8#4 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1EB7);
          tensor[3,84] basisResult1EB9#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_821E9A#10 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1EB8,basisResult1EB9,pos1E0C);
          tensor[3,3,84] basisResult1EBB#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] probe_l_831E9B#10 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1EB8,basisResult1EBB,pos1E0C);
          tensor[3] op1_e3_l_851E9C#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (probe_l_831E9B,probe_l_821E9A);
          tensor[3,3,3] op1_e3_l_861E9D#5 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_871E9E#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_851E9C,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_941E9F#6 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_821E9A,op1_e3_l_871E9E);
          tensor[3,3,3,84] basisResult1EBD#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_1081EA0#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1EB8,basisResult1EBD,pos1E0C);
          tensor[3,3,3] op1_e3_l_1111EA1#1 = λ(T0[3],T1[3 3 3])<(T0_{i0} * T1_{i1,i0,i2})>_{3 3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3,3] op1_e3_l_1121EA2#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} * T1_{i1,i2})>_{3 3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1131EA3#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2,i0,i1} + T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_1111EA1,op1_e3_l_1121EA2);
          tensor[3,3,3] op1_e3_l_1141EA4#4 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (probe_l_831E9B,op1_e3_l_851E9C);
          tensor[3,3,3] op1_e3_l_1151EA5#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1131EA3);
          tensor[3,3,3] op1_e3_l_1161EA6#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1151EA5);
          tensor[3,3] op1_e3_l_1191EA7#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1161EA6,op1_e3_l_861E9D);
          tensor[3,3] op1_e3_l_1441EA8#2 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i0})>_{3 3} (op1_e3_l_941E9F,op1_e3_l_1191EA7);
          real op1_e3_l_1461EA9#4 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_941E9F,op1_e3_l_941E9F);
          tensor[3] op1_e3_l_1471EAA#3 = λ(T0[3 3],T1[3 3])<Σ(i1=0..2)<((T0_{i1,i0} + T1_{i1,i0}))>(i1=0..2)>_{3} (op1_e3_l_1441EA8,op1_e3_l_1441EA8);
          tensor[3] op1_e3_l_2501EAB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_1471EAA);
          real op1_e3_l_2511EAC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1471EAA,op1_e3_l_1471EAA);
          tensor[3] op1_e3_l_2521EAD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2501EAB,op1_e3_l_2511EAC);
          tensor[3] op1_e3_l_4241EAE#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_2521EAD);
          real op1_e3_l_4261EAF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4241EAE,op1_e3_l_4241EAE);
          real op1_e3_l_4271EB0#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_4261EAF);
          real op1_e3_l_4281EB1#1 = λ(T0[])<Abs(T0)> (op1_e3_l_4271EB0);
          real op1_e3_l_4291EB2#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD8,op1_e3_l_4281EB1);
          real op1_e3_l_4301EB3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_4291EB2);
          real op1_e3_l_4311EB4#2 = λ(T0[],T1[])<(T0 * T1)> (_t1E97,op1_e3_l_4301EB3);
          real op1_e3_l_4321EB5#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1E93,_t1E95,op1_e3_l_4311EB4);
          real _t1E99#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DE0,op1_e3_l_4321EB5);
          bool _t1EE3#1 = EQ<real>(_t1E99,_t1E93);
          if _t1EE3 then goto SAVE1EE6 else goto JOIN1EE8
        SAVE1EE6:  preds = [COND1EE5]
          self.rayN = rayN1E04;
          active
          goto JOIN1EE8
        JOIN1EE8:  preds = [*ACTIVE1EE7,COND1EE5]
          real op1_e3_l_4331F05#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1E95,_t1E93,op1_e3_l_4311EB4);
          real op1_e3_l_4341F06#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DE0,op1_e3_l_4331F05);
          real _t1EE9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_4341F06);
          real _t1F35#1 = MathFn<pow>(_t1EE9,alphaFix1DF4);
          bool _t1F37#1 = NEQ<real>(phKs1DFC,_t1E93);
          if _t1F37 then goto ASSIGN1F63 else goto JOIN1F8F
        ASSIGN1F63:  preds = [COND1F39]
          tensor[3] op1_e3_l_1561F3B#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1DF6,litwsp1DEC);
          real op1_e3_l_1581F3C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1561F3B,op1_e3_l_1561F3B);
          real op1_e3_l_1591F3D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1581F3C);
          tensor[3,3] op1_e3_l_1891F45#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3] op1_e3_l_1901F46#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1911F47#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1891F45,op1_e3_l_1901F46);
          tensor[3,3,3] op1_e3_l_1931F49#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1911F47);
          tensor[3,3,3] op1_e3_l_1941F4A#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1931F49);
          tensor[3,3] op1_e3_l_1971F4B#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1941F4A,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_2221F4C#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_941E9F,op1_e3_l_1971F4B);
          tensor[3] op1_e3_l_2251F4E#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_2221F4C,op1_e3_l_2221F4C);
          tensor[3] op1_e3_l_3281F4F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_2251F4E);
          real op1_e3_l_3291F50#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2251F4E,op1_e3_l_2251F4E);
          tensor[3] op1_e3_l_3301F51#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_3281F4F,op1_e3_l_3291F50);
          tensor[3] op1_e3_l_6731F52#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_3301F51);
          real op1_e3_l_6751F53#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6731F52,op1_e3_l_6731F52);
          real op1_e3_l_6761F54#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_6751F53);
          real op1_e3_l_6781F55#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_6761F54);
          tensor[3] op1_e3_l_6791F56#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_6731F52,op1_e3_l_6781F55);
          tensor[3] op1_e3_l_6801F57#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_6791F56);
          real op1_e3_l_6821F58#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1591F3D);
          real op1_e3_l_6831F59#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6801F57,op1_e3_l_1561F3B);
          real op1_e3_l_6841F5A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_6821F58,op1_e3_l_6831F59);
          real _t1F3A#1 = λ(T0[])<Abs(T0)> (op1_e3_l_6841F5A);
          real scomp1F8C#1 = MathFn<pow>(_t1F3A,phSp1DFE);
          goto JOIN1F8F
        JOIN1F8F:  preds = [ASSIGN1F8D,COND1F39]
          real scomp1F8E#1 = phi(scomp1F8C,_t1E93)
          real cmin1F90#3 = TensorIndex<tensor[2],[0]>(cminmax1DE6);
          real cmax1F92#2 = TensorIndex<tensor[2],[1]>(cminmax1DE6);
          tensor[3] mcol1F94#2 = <tensor[3]>[_t1E95,_t1E95,_t1E95];
          bool _t1F96#1 = NEQ<real>(cmin1F90,cmax1F92);
          if _t1F96 then goto ASSIGN20F6 else goto JOIN200A
        ASSIGN20F6:  preds = [COND1F98]
          tensor[3,3] op1_e3_l_1101FA2#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3] op1_e3_l_1111FA3#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1121FA4#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1101FA2,op1_e3_l_1111FA3);
          tensor[3,3,3] op1_e3_l_1141FA6#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1121FA4);
          tensor[3,3,3] op1_e3_l_1151FA7#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1141FA6);
          tensor[3,3] op1_e3_l_1181FA8#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1151FA7,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_1431FA9#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_941E9F,op1_e3_l_1181FA8);
          tensor[3] op1_e3_l_1461FAB#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_1431FA9,op1_e3_l_1431FA9);
          tensor[3] op1_e3_l_2491FAC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_1461FAB);
          real op1_e3_l_2501FAD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1461FAB,op1_e3_l_1461FAB);
          tensor[3] op1_e3_l_2511FAE#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2491FAC,op1_e3_l_2501FAD);
          tensor[3] op1_e3_l_2531FB0#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_2511FAE);
          tensor[3] _t1F99#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (rayOrig1DF0,op1_e3_l_51E0E,op1_e3_l_2531FB0);
          tensor[84] basisResult1FE3#1 = EvaluateBasis<BasisArray(84)>(_t1F99);
          real probe_l_81FDA#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1DC8,_t1DCA,_t1DCC,_t1F99,femDofs1EB8,basisResult1FE3,_t1F99);
          real op1_e3_l_91FDB#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F90,probe_l_81FDA);
          real op1_e3_l_101FDC#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F90,cmax1F92);
          real op1_e3_l_111FDD#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91FDB,op1_e3_l_101FDC);
          real op1_e3_l_121FDE#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E93,_t1E95);
          real op1_e3_l_131FDF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111FDD,op1_e3_l_121FDE);
          real _t1FD9#2 = λ(T0[],T1[])<(T0 + T1)> (_t1E93,op1_e3_l_131FDF);
          real Mtransform1FF0#2 = Transform<IMAGE1D<double[3]>>(cmap20C8);
          real MxPos1FF1#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1FF0,_t1FD9);
          real Ttranslate1FF2#1 = Translate<IMAGE1D<double[3]>>(cmap20C8);
          real imgPos1FF3#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1FF1,Ttranslate1FF2);
          real nd1FF4#2 = Floor<1>(imgPos1FF3);
          real f1FF5#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1FF3,nd1FF4);
          int n1FF6#1 = RealToInt<1>(nd1FF4);
          int idx1FF8#1 = n1FF6;
          tensor[3,2] ldvox1FF9#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap20C8,idx1FF8);
          tensor[2] kernX_1FFA#1 = BuildPos<1>(f1FF5);
          tensor[2] kevalX_d0_1FFB#1 = EvalKernel<2,tent,0>(kernX_1FFA);
          tensor[3] mcol1FEF#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1DCE,_t1DD0,_t1FD9,Mtransform1FF0,ldvox1FF9,kevalX_d0_1FFB);
          goto JOIN200A
        JOIN200A:  preds = [ASSIGN2008,COND1F98]
          tensor[3] mcol2009#1 = phi(mcol1FEF,mcol1F94)
          tensor[3,3] op1_e3_l_1982013#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3] op1_e3_l_1992014#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_2002015#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1982013,op1_e3_l_1992014);
          tensor[3,3,3] op1_e3_l_2022017#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_2002015);
          tensor[3,3,3] op1_e3_l_2032018#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_2022017);
          tensor[3,3] op1_e3_l_2062019#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_2032018,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_231201A#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_941E9F,op1_e3_l_2062019);
          tensor[3] op1_e3_l_234201C#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_231201A,op1_e3_l_231201A);
          tensor[3] op1_e3_l_337201D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_234201C);
          real op1_e3_l_338201E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_234201C,op1_e3_l_234201C);
          tensor[3] op1_e3_l_339201F#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_337201D,op1_e3_l_338201E);
          tensor[3] op1_e3_l_6822020#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_339201F);
          real op1_e3_l_6842021#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6822020,op1_e3_l_6822020);
          real op1_e3_l_6852022#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_6842021);
          real op1_e3_l_6872023#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_6852022);
          tensor[3] op1_e3_l_6882024#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_6822020,op1_e3_l_6872023);
          tensor[3] op1_e3_l_6892025#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_6882024);
          real op1_e3_l_6902026#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1DEC,op1_e3_l_6892025);
          real op1_e3_l_6912027#1 = λ(T0[])<(T0)^2> (op1_e3_l_6902026);
          real op1_e3_l_6922028#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1DFA,op1_e3_l_6912027);
          real op1_e3_l_694202A#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE8,rayN1E04);
          real op1_e3_l_695202B#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE8,camFarVsp1DEA);
          real op1_e3_l_696202C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_694202A,op1_e3_l_695202B);
          tensor[3] op1_e3_l_697202D#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1DE2,mcFar1DE4);
          tensor[3] op1_e3_l_698202E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_696202C,op1_e3_l_697202D);
          real op1_e3_l_699202F#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1DF8,op1_e3_l_6922028);
          tensor[3] op1_e3_l_7002030#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1DE2,op1_e3_l_698202E);
          tensor[3] op1_e3_l_7012031#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2009,op1_e3_l_699202F,op1_e3_l_7002030);
          tensor[3] op1_e3_l_7022032#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1DFC,scomp1F8E,mcol1F94);
          real op1_e3_l_7032033#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,_t1F35);
          tensor[3] op1_e3_l_7042034#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_7012031,op1_e3_l_7022032);
          tensor[3] op1_e3_l_7052035#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1E02,op1_e3_l_7032033,op1_e3_l_7042034);
          tensor[3] rgb200B#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1E00,op1_e3_l_7052035);
          real op1_e3_l_52073#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_7032033);
          real transp2071#2 = λ(T0[],T1[])<(T0 * T1)> (transp1E02,op1_e3_l_52073);
          bool _t2077#1 = LT<real>(transp2071,transp01DD6);
          if _t2077 then goto SAVE207A else goto JOIN207F
        SAVE207A:  preds = [COND2079]
          self.rayN = rayN1E04;
          self.rgb = rgb200B;
          self.transp = _t1E93;
          stabilize
          goto JOIN207F
        JOIN207F:  preds = [*STABILIZE207D,COND2079]
          real transp207E#1 = phi(transp2071)
          self.rayN = rayN1E04;
          self.rgb = rgb200B;
          self.transp = transp207E;
          active
        ASSIGN2084:  preds = [COND1E7E]
          bool _t1E82#1 = false;
          goto JOIN1E83
        ASSIGN2085:  preds = [COND1E45]
          bool _t1E85#1 = false;
          goto JOIN1E86
        ASSIGN2086:  preds = [COND1E40]
          bool _t1E88#1 = false;
          goto JOIN1E89
        ASSIGN2087:  preds = [COND1E18]
          bool _t1E8B#1 = false;
          goto JOIN1E8C
    end update
    method stabilize
        ENTRY2088:  preds = []
          tensor[4] rgba2089#1 = self.rgba;
          tensor[3] rgb208B#3 = self.rgb;
          real transp208D#2 = self.transp;
          real _t208F#2 = 0.1e1;
          bool _t2091#1 = LT<real>(transp208D,_t208F);
          if _t2091 then goto ASSIGN2095 else goto JOIN20AB
        ASSIGN2095:  preds = [COND2093]
          real aa2094#4 = λ(T0[],T1[])<(T0) - (T1)> (_t208F,transp208D);
          real _t2096#1 = TensorIndex<tensor[3],[0]>(rgb208B);
          real _t2098#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2096,aa2094);
          real _t209C#1 = TensorIndex<tensor[3],[1]>(rgb208B);
          real _t209E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t209C,aa2094);
          real _t20A2#1 = TensorIndex<tensor[3],[2]>(rgb208B);
          real _t20A4#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t20A2,aa2094);
          tensor[4] rgba20A8#1 = <tensor[4]>[_t2098,_t209E,_t20A4,aa2094];
          goto JOIN20AB
        JOIN20AB:  preds = [ASSIGN20A9,COND2093]
          tensor[4] rgba20AA#1 = phi(rgba20A8,rgba2089)
          self.rgba = rgba20AA;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY20AE:  preds = []
      int iresU20AF#1 = globals.iresU1B96;
      int iresV20B1#1 = globals.iresV1B97;
      int _t20B3#2 = 0;
      int _t20B5#2 = 1;
      int _t20B7#1 = ISub(iresV20B1,_t20B5);
      int[] _t20B9#1 = Range(_t20B3,_t20B7);
    FOREACH20BC:  preds = [ASSIGN20BA,NEXT20C5]
      foreach (vi20BB in _t20B9) on exit goto RETURN20C6
      int _t20BD#1 = ISub(iresU20AF,_t20B5);
      int[] _t20BF#1 = Range(_t20B3,_t20BD);
    FOREACH20C2:  preds = [ASSIGN20C0,NEXT20C4]
      foreach (ui20C1 in _t20BF) on exit goto NEXT20C5
      new ray(ui20C1,vi20BB);
      goto FOREACH20C2
    NEXT20C5:  preds = [FOREACH20C2]
      goto FOREACH20BC
    RETURN20C6:  preds = [FOREACH20BC]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block1B8A (block) = <no-default>
  input 0space04D7_intermedateGlobal1B8B (space) = <no-default>
  input 0U04D9_intermedateGlobal1B8C (U) = <no-default>
  input cellChoice1B8D (cellChoice) = <no-default>
  input cmap1B8E (cmap) = image("cmap.nrrd")
  input camEye1B8F (camEye) = <default>
  input camAt1B90 (camAt) = <default>
  input camUp1B91 (camUp) = <default>
  input camNear1B92 (camNear) = <default>
  input camFar1B93 (camFar) = <default>
  input camFOV1B94 (camFOV) = <default>
  input camOrtho1B95 (camOrtho) = <default>
  input iresU1B96 (iresU) = <default>
  input iresV1B97 (iresV) = <default>
  input rayStep1B98 (rayStep) = <default>
  input refStep1B99 (refStep) = <default>
  input transp01B9A (transp0) = <default>
  input thick1B9B (thick) = <default>
  input fStrTh1B9C (fStrTh) = <default>
  input fMaskTh1B9D (fMaskTh) = <default>
  input fBias1B9E (fBias) = <default>
  input maxAlpha1B9F (maxAlpha) = <default>
  input light1BA0 (light) = <default>
  input phong1BA1 (phong) = <default>
  input mcNear1BA2 (mcNear) = <default>
  input mcFar1BA3 (mcFar) = <default>
  input litdir1BA4 (litdir) = <default>
  input cminmax1BA5 (cminmax) = <default>
  global tensor[3] camN1BA6
  global tensor[3] camU1BA7
  global tensor[3] camV1BA8
  global real camDist1BA9
  global real camVmax1BAA
  global real camUmax1BAB
  global real camNearVsp1BAC
  global real camFarVsp1BAD
  global tensor[3] litwsp1BAE
  global int _t1BAF
  global femData:Space _tX1BB0
  global femData:FemFunc _tXX1BB1
  global image(IMAGE1D<double[3]>) img1BB2
  global kernel _tXXX1BB3
## functions
## input initialization
  ENTRY1BB4:  preds = []
    real _t1BB5#13 = 0.e0;
    real _t1BB7#1 = -0.2e1;
    tensor[3] camEye1BB9#1 = <tensor[3]>[_t1BB5,_t1BB7,_t1BB5];
    globals.camEye1B8F = camEye1BB9;
    tensor[3] camAt1BBC#1 = <tensor[3]>[_t1BB5,_t1BB5,_t1BB5];
    globals.camAt1B90 = camAt1BBC;
    real _t1BBF#5 = 0.1e1;
    tensor[3] camUp1BC1#1 = <tensor[3]>[_t1BB5,_t1BB5,_t1BBF];
    globals.camUp1B91 = camUp1BC1;
    real camNear1BC4#1 = -0.4e1;
    globals.camNear1B92 = camNear1BC4;
    real camFar1BC7#1 = 0.4e1;
    globals.camFar1B93 = camFar1BC7;
    real camFOV1BCA#1 = 0.1e2;
    globals.camFOV1B94 = camFOV1BCA;
    bool camOrtho1BCD#2 = false;
    globals.camOrtho1B95 = camOrtho1BCD;
    int iresU1BD0#2 = 100;
    globals.iresU1B96 = iresU1BD0;
    globals.iresV1B97 = iresU1BD0;
    real rayStep1BD4#2 = 0.1e-3;
    globals.rayStep1B98 = rayStep1BD4;
    globals.refStep1B99 = rayStep1BD4;
    real transp01BD8#1 = 0.5e-2;
    globals.transp01B9A = transp01BD8;
    real thick1BDB#1 = 0.1e-1;
    globals.thick1B9B = thick1BDB;
    globals.fStrTh1B9C = _t1BB5;
    globals.fMaskTh1B9D = _t1BB5;
    real fBias1BE0#2 = 0.1e0;
    globals.fBias1B9E = fBias1BE0;
    globals.maxAlpha1B9F = _t1BBF;
    globals.light1BA0 = camOrtho1BCD;
    real _t1BE5#1 = 0.7e0;
    real _t1BE7#1 = 0.2e0;
    real _t1BE9#1 = 0.1e3;
    tensor[4] phong1BEB#1 = <tensor[4]>[fBias1BE0,_t1BE5,_t1BE7,_t1BE9];
    globals.phong1BA1 = phong1BEB;
    tensor[3] mcNear1BEE#2 = <tensor[3]>[_t1BBF,_t1BBF,_t1BBF];
    globals.mcNear1BA2 = mcNear1BEE;
    globals.mcFar1BA3 = mcNear1BEE;
    real _t1BF2#1 = -0.1e1;
    tensor[3] litdir1BF4#1 = <tensor[3]>[_t1BB5,_t1BF2,_t1BB5];
    globals.litdir1BA4 = litdir1BF4;
    tensor[2] cminmax1BF7#1 = <tensor[2]>[_t1BB5,_t1BB5];
    globals.cminmax1BA5 = cminmax1BF7;
    return
## global-variable initialization
  ENTRY1BFB:  preds = []
    femData:Mesh block1BFC#3 = globals.block1B8A;
    femData:Space 0space04D7_intermedateGlobal1BFE#1 = globals.0space04D7_intermedateGlobal1B8B;
    femData:FemFunc 0U04D9_intermedateGlobal1C00#1 = globals.0U04D9_intermedateGlobal1B8C;
    int cellChoice1C02#1 = globals.cellChoice1B8D;
    image(IMAGE1D<double[3]>) cmap1C04#1 = globals.cmap1B8E;
    tensor[3] camEye1C06#1 = globals.camEye1B8F;
    tensor[3] camAt1C08#1 = globals.camAt1B90;
    tensor[3] camUp1C0A#1 = globals.camUp1B91;
    real camNear1C0C#1 = globals.camNear1B92;
    real camFar1C0E#1 = globals.camFar1B93;
    real camFOV1C10#1 = globals.camFOV1B94;
    int iresU1C12#1 = globals.iresU1B96;
    int iresV1C14#1 = globals.iresV1B97;
    tensor[3] litdir1C16#2 = globals.litdir1BA4;
    int _t1C18#1 = 0;
    int _t1C1A#1 = 1;
    int _t1C1C#1 = ExtractFemItem<int,NumCell(Mesh)>(block1BFC);
    int _t1C1E#1 = ISub(_t1C1C,_t1C1A);
    int[] _t1C20#1 = Range(_t1C18,_t1C1E);
    femData:MeshCell[] _t1C22#1 = <femData:MeshCell[]>{};
  FOREACH1C25:  preds = [ASSIGN1C23,NEXT1C2B]
    foreach (_t1C24 in _t1C20) on exit goto ASSIGN1C2D
      femData:MeshCell[] _t1C29#2 = phi(_t1C22,_t1C28)
    femData:MeshCell _t1C26#1 = LoadFem<femData:MeshCell>(block1BFC,_t1C24);
    femData:MeshCell[] _t1C28#1 = Append<femData:MeshCell>(_t1C29,_t1C26);
    goto FOREACH1C25
  ASSIGN1C2D:  preds = [FOREACH1C25]
    femData:Space space1C2C#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal1BFE,block1BFC);
    femData:FemFunc U1C2E#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal1C00,space1C2C);
    femData:MeshCell c11C30#1 = Subscript<femData:MeshCell[]>(_t1C29,cellChoice1C02);
    int _t1C32#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c11C30);
    femData:FuncCell _t1C34#2 = LoadFem<femData:FuncCell>(U1C2E,_t1C32);
    femData:FemFunc _t1C36#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t1C34);
    femData:Space _t1C38#1 = ExtractFem<femData:Space,femData:FemFunc>(_t1C36);
    int _t1C3A#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t1C34);
    kernel _t1C3C#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1C3E#1 = BorderCtlClamp<IMAGE1D<double[3]>>(cmap1C04);
    tensor[3] op1_e3_l_41C41#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1C08,camEye1C06);
    real op1_e3_l_61C42#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41C41,op1_e3_l_41C41);
    real op1_e3_l_71C43#6 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61C42);
    real op1_e3_l_91C44#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71C43);
    tensor[3] camN1C40#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41C41,op1_e3_l_91C44);
    globals.camN1BA6 = camN1C40;
    tensor[3,3] op1_e3_l_151C4F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1C0A);
    tensor[3] op1_e3_l_171C51#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C41,op1_e3_l_151C4F);
    real op1_e3_l_341C52#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171C51,op1_e3_l_171C51);
    real op1_e3_l_351C53#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91C44,op1_e3_l_91C44,op1_e3_l_341C52);
    real op1_e3_l_361C54#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351C53);
    tensor[3] op1_e3_l_371C55#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C44,op1_e3_l_171C51);
    real op1_e3_l_381C56#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361C54);
    tensor[3] camU1C4B#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371C55,op1_e3_l_381C56);
    globals.camU1BA7 = camU1C4B;
    tensor[3,3] op1_e3_l_451C6E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_171C51);
    tensor[3] op1_e3_l_471C6F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_41C41,op1_e3_l_451C6E);
    tensor[3] op1_e3_l_501C71#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91C44,op1_e3_l_471C6F);
    tensor[3] camV1C64#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_91C44,op1_e3_l_381C56,op1_e3_l_501C71);
    globals.camV1BA8 = camV1C64;
    globals.camDist1BA9 = op1_e3_l_71C43;
    real _t1C88#1 = 0.314159265358979323846264338327950288e1;
    real _t1C8A#1 = 0.36e3;
    real op1_e3_l_51C8D#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1C10,_t1C88);
    real op1_e3_l_61C8E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C8A,op1_e3_l_51C8D);
    real op1_e3_l_101C91#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_61C8E);
    real camVmax1C8C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101C91,op1_e3_l_71C43);
    globals.camVmax1BAA = camVmax1C8C;
    real _t1C9B#1 = IntToReal(iresU1C12);
    real _t1C9D#1 = IntToReal(iresV1C14);
    real op1_e3_l_141CA6#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t1C9B,op1_e3_l_101C91,op1_e3_l_71C43);
    real camUmax1C9F#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1C9D,op1_e3_l_141CA6);
    globals.camUmax1BAB = camUmax1C9F;
    real camNearVsp1CB0#1 = λ(T0[],T1[])<(T0 + T1)> (camNear1C0C,op1_e3_l_71C43);
    globals.camNearVsp1BAC = camNearVsp1CB0;
    real camFarVsp1CB9#1 = λ(T0[],T1[])<(T0 + T1)> (camFar1C0E,op1_e3_l_71C43);
    globals.camFarVsp1BAD = camFarVsp1CB9;
    tensor[3,3] _t1CC2#1 = <tensor[3,3]>[camU1C4B,camV1C64,camN1C40];
    real op1_e3_l_31CC5#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (litdir1C16);
    real op1_e3_l_41CC6#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31CC5);
    real op1_e3_l_51CC7#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_41CC6);
    tensor[3] op1_e3_l_61CC8#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t1CC2,litdir1C16);
    tensor[3] litwsp1CC4#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_51CC7,op1_e3_l_61CC8);
    globals.litwsp1BAE = litwsp1CC4;
    globals._t1BAF = _t1C3A;
    globals._tX1BB0 = _t1C38;
    globals._tXX1BB1 = _t1C36;
    globals.img1BB2 = img1C3E;
    globals._tXXX1BB3 = _t1C3C;
    return
## strand
  strand ray (int ui1CD5#1, int vi1CD6#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY1CE7:  preds = []
        tensor[3] camEye1CE8#1 = globals.camEye1B8F;
        bool camOrtho1CEA#2 = globals.camOrtho1B95;
        int iresU1CEC#1 = globals.iresU1B96;
        int iresV1CEE#1 = globals.iresV1B97;
        real rayStep1CF0#1 = globals.rayStep1B98;
        real refStep1CF2#1 = globals.refStep1B99;
        tensor[4] phong1CF4#4 = globals.phong1BA1;
        tensor[3] camN1CF6#1 = globals.camN1BA6;
        tensor[3] camU1CF8#1 = globals.camU1BA7;
        tensor[3] camV1CFA#1 = globals.camV1BA8;
        real camDist1CFC#1 = globals.camDist1BA9;
        real camVmax1CFE#2 = globals.camVmax1BAA;
        real camUmax1D00#2 = globals.camUmax1BAB;
        real camNearVsp1D02#1 = globals.camNearVsp1BAC;
        real _t1D04#5 = -0.5e0;
        real _t1D06#1 = IntToReal(ui1CD5);
        real _t1D08#1 = IntToReal(iresU1CEC);
        real _t1D0A#3 = 0.5e0;
        real op1_e3_l_61D0D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D08,_t1D0A);
        real op1_e3_l_71D0E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D06);
        real op1_e3_l_81D0F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_61D0D);
        real op1_e3_l_91D10#2 = λ(T0[])<Neg(T0)> (camUmax1D00);
        real op1_e3_l_101D11#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D0E,op1_e3_l_81D0F);
        real op1_e3_l_111D12#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax1D00,op1_e3_l_91D10);
        real op1_e3_l_131D13#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D11,op1_e3_l_111D12);
        real rayU1D0C#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D10,op1_e3_l_131D13);
        real _t1D1C#1 = IntToReal(vi1CD6);
        real _t1D1E#2 = IntToReal(iresV1CEE);
        real op1_e3_l_61D21#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D1E,_t1D0A);
        real op1_e3_l_71D22#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,_t1D1C);
        real op1_e3_l_81D23#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_61D21);
        real op1_e3_l_91D24#3 = λ(T0[])<Neg(T0)> (camVmax1CFE);
        real op1_e3_l_101D25#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D22,op1_e3_l_81D23);
        real op1_e3_l_111D26#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax1CFE,op1_e3_l_91D24);
        real op1_e3_l_131D27#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101D25,op1_e3_l_111D26);
        real rayV1D20#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D24,op1_e3_l_131D27);
        real op1_e3_l_231D39#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D0A,_t1D1E);
        real op1_e3_l_251D3B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1D04,op1_e3_l_231D39);
        real op1_e3_l_271D3D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71D22,op1_e3_l_251D3B);
        real op1_e3_l_301D3F#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271D3D,op1_e3_l_111D26);
        real op1_e3_l_311D40#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91D24,op1_e3_l_301D3F);
        tensor[3] op1_e3_l_321D41#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1CF8,rayU1D0C);
        tensor[3] op1_e3_l_331D42#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1CFA,op1_e3_l_311D40);
        tensor[3] UV1D30#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_321D41,op1_e3_l_331D42);
        if camOrtho1CEA then goto JOIN1D59 else goto ASSIGN1DC5
      JOIN1D59:  preds = [COND1D56,ASSIGN1DC6]
        tensor[3] _t1D57#1 = phi(UV1D30,_t1D58)
        tensor[3] rayOrig1D5A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1CE8,_t1D57);
        if camOrtho1CEA then goto ASSIGN1D5E else goto ASSIGN20DD
      ASSIGN1D5E:  preds = [COND1D5C]
        real _t1D5D#3 = 0.e0;
        tensor[3] _t1D5F#1 = <tensor[3]>[_t1D5D,_t1D5D,_t1D5D];
        goto JOIN1D63
      JOIN1D63:  preds = [ASSIGN1D60,ASSIGN20DD]
        tensor[3] _t1D61#1 = phi(_t1D5F,_t1D62)
        tensor[3] rayVec1D64#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1CF6,_t1D61);
        real op1_e3_l_61D68#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (rayVec1D64,rayVec1D64);
        real op1_e3_l_71D69#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61D68);
        real op1_e3_l_81D6A#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1CF0,op1_e3_l_71D69);
        real alphaFix1D66#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1CF2,op1_e3_l_81D6A);
        real op1_e3_l_91D74#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71D69);
        tensor[3] op1_e3_l_101D75#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (rayVec1D64,op1_e3_l_91D74);
        tensor[3] eyeDir1D70#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_101D75);
        real phKa1D7C#1 = TensorIndex<tensor[4],[0]>(phong1CF4);
        real phKd1D7E#1 = TensorIndex<tensor[4],[1]>(phong1CF4);
        real phKs1D80#1 = TensorIndex<tensor[4],[2]>(phong1CF4);
        real phSp1D82#1 = TensorIndex<tensor[4],[3]>(phong1CF4);
        real _t1D84#8 = 0.e0;
        tensor[4] rgba1D86#1 = <tensor[4]>[_t1D84,_t1D84,_t1D84,_t1D84];
        tensor[3] rgb1D88#1 = <tensor[3]>[_t1D84,_t1D84,_t1D84];
        real transp1D8A#1 = 0.1e1;
        self.rayU = rayU1D0C;
        self.rayV = rayV1D20;
        self.rayN = camNearVsp1D02;
        self.UV = UV1D30;
        self.rayOrig = rayOrig1D5A;
        self.rayVec = rayVec1D64;
        self.alphaFix = alphaFix1D66;
        self.eyeDir = eyeDir1D70;
        self.phKa = phKa1D7C;
        self.phKd = phKd1D7E;
        self.phKs = phKs1D80;
        self.phSp = phSp1D82;
        self.rgba = rgba1D86;
        self.raw = _t1D84;
        self.rgb = rgb1D88;
        self.transp = transp1D8A;
        return
      ASSIGN20DD:  preds = [COND1D5C]
        tensor[3] _t1D62#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1CFC,UV1D30);
        goto JOIN1D63
      ASSIGN1DC5:  preds = [COND1D56]
        real _t1DC4#3 = 0.e0;
        tensor[3] _t1D58#1 = <tensor[3]>[_t1DC4,_t1DC4,_t1DC4];
        goto JOIN1D59
    end state init
    method update
        ENTRY1DC7:  preds = []
          image(IMAGE1D<double[3]>) cmap20C8#5 = globals.cmap1B8E;
          int _t1DC8#9 = globals._t1BAF;
          femData:Space _t1DCA#9 = globals._tX1BB0;
          femData:FemFunc _t1DCC#9 = globals._tXX1BB1;
          image(IMAGE1D<double[3]>) img1DCE#1 = globals.img1BB2;
          kernel _t1DD0#1 = globals._tXXX1BB3;
          femData:Mesh block1DD2#1 = globals.block1B8A;
          real rayStep1DD4#1 = globals.rayStep1B98;
          real transp01DD6#1 = globals.transp01B9A;
          real thick1DD8#1 = globals.thick1B9B;
          real fStrTh1DDA#1 = globals.fStrTh1B9C;
          real fMaskTh1DDC#1 = globals.fMaskTh1B9D;
          real fBias1DDE#1 = globals.fBias1B9E;
          real maxAlpha1DE0#2 = globals.maxAlpha1B9F;
          tensor[3] mcNear1DE2#2 = globals.mcNear1BA2;
          tensor[3] mcFar1DE4#1 = globals.mcFar1BA3;
          tensor[2] cminmax1DE6#2 = globals.cminmax1BA5;
          real camNearVsp1DE8#2 = globals.camNearVsp1BAC;
          real camFarVsp1DEA#2 = globals.camFarVsp1BAD;
          tensor[3] litwsp1DEC#2 = globals.litwsp1BAE;
          real rayN1DEE#1 = self.rayN;
          tensor[3] rayOrig1DF0#2 = self.rayOrig;
          tensor[3] rayVec1DF2#1 = self.rayVec;
          real alphaFix1DF4#1 = self.alphaFix;
          tensor[3] eyeDir1DF6#1 = self.eyeDir;
          real phKa1DF8#1 = self.phKa;
          real phKd1DFA#1 = self.phKd;
          real phKs1DFC#2 = self.phKs;
          real phSp1DFE#1 = self.phSp;
          tensor[3] rgb1E00#1 = self.rgb;
          real transp1E02#2 = self.transp;
          real rayN1E04#8 = λ(T0[],T1[])<(T0 + T1)> (rayN1DEE,rayStep1DD4);
          bool _t1E06#1 = GT<real>(rayN1E04,camFarVsp1DEA);
          if _t1E06 then goto SAVE1E09 else goto JOIN1E0B
        SAVE1E09:  preds = [COND1E08]
          self.rayN = rayN1E04;
          stabilize
          goto JOIN1E0B
        JOIN1E0B:  preds = [*STABILIZE1E0A,COND1E08]
          tensor[3] op1_e3_l_51E0E#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1DF2,rayN1E04);
          tensor[3] pos1E0C#19 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1DF0,op1_e3_l_51E0E);
          femData:RefCell _t1E12#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block1DD2);
          real _t1E14#1 = 0.1e-8;
          bool _t1E16#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t1E12,pos1E0C,_t1E14);
          if _t1E16 then goto ASSIGN1E1E else goto ASSIGN2087
        ASSIGN1E1E:  preds = [COND1E18]
          int[84] femIndicies1E1B#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1E1C#3 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1E1B);
          tensor[3,3,84] basisResult1E1D#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] _t1E19#5 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1E1C,basisResult1E1D,pos1E0C);
          real[3] _t1E23#1 = EigenVals3x3(_t1E19);
          int _t1E26#1 = 1;
          real _t1E28#1 = Subscript<real[3]>(_t1E23,_t1E26);
          tensor[3,84] basisResult1E33#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_61E2B#6 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1E1C,basisResult1E33,pos1E0C);
          real op1_e3_l_81E2C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_61E2B,probe_l_61E2B);
          real op1_e3_l_91E2D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_81E2C);
          real op1_e3_l_101E2E#1 = λ(T0[])<Neg(T0)> (_t1E28);
          real op1_e3_l_111E2F#1 = λ(T0[],T1[])<(T0 + T1)> (fBias1DDE,op1_e3_l_91E2D);
          real _t1E2A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_101E2E,op1_e3_l_111E2F);
          bool _t1E3E#1 = GT<real>(_t1E2A,fStrTh1DDA);
          if _t1E3E then goto ASSIGN1E42 else goto ASSIGN2086
        ASSIGN1E42:  preds = [COND1E40]
          real _t1E41#1 = 0.1e1;
          bool _t1E43#1 = GTE<real>(_t1E41,fMaskTh1DDC);
          if _t1E43 then goto ASSIGN20E4 else goto ASSIGN2085
        ASSIGN20E4:  preds = [COND1E45]
          tensor[3] op1_e3_l_221E49#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1E19,probe_l_61E2B);
          tensor[3,3,3] op1_e3_l_231E4A#2 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_241E4B#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_221E49,op1_e3_l_231E4A);
          tensor[3,3,3,84] basisResult1E5F#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_311E4C#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1E1C,basisResult1E5F,pos1E0C);
          tensor[3,3] op1_e3_l_341E4D#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_61E2B,probe_l_311E4C);
          tensor[3,3] op1_e3_l_351E4E#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (_t1E19,_t1E19);
          tensor[3,3] op1_e3_l_361E4F#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_341E4D,op1_e3_l_351E4E);
          tensor[3,3,3] op1_e3_l_371E50#1 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (_t1E19,op1_e3_l_221E49);
          tensor[3,3,3] op1_e3_l_381E51#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_61E2B,op1_e3_l_361E4F);
          tensor[3,3,3] op1_e3_l_391E52#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_371E50,op1_e3_l_381E51);
          tensor[3] op1_e3_l_411E53#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_61E2B,op1_e3_l_241E4B);
          tensor[3,3] op1_e3_l_421E54#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_391E52,op1_e3_l_231E4A);
          tensor[3] op1_e3_l_671E55#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_411E53,op1_e3_l_421E54);
          tensor[3] op1_e3_l_1191E56#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_671E55,op1_e3_l_671E55);
          real op1_e3_l_1211E57#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1191E56,op1_e3_l_1191E56);
          real _t1E46#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1211E57);
          real _t1E7A#1 = 0.1e-7;
          bool _t1E7C#1 = GT<real>(_t1E46,_t1E7A);
          if _t1E7C then goto ASSIGN1E80 else goto ASSIGN2084
        ASSIGN1E80:  preds = [COND1E7E]
          bool _t1E7F#1 = true;
          goto JOIN1E83
        JOIN1E83:  preds = [ASSIGN1E80,ASSIGN2084]
          bool _t1E81#1 = phi(_t1E7F,_t1E82)
          goto JOIN1E86
        JOIN1E86:  preds = [JOIN1E83,ASSIGN2085]
          bool _t1E84#1 = phi(_t1E81,_t1E85)
          goto JOIN1E89
        JOIN1E89:  preds = [JOIN1E86,ASSIGN2086]
          bool _t1E87#1 = phi(_t1E84,_t1E88)
          goto JOIN1E8C
        JOIN1E8C:  preds = [JOIN1E89,ASSIGN2087]
          bool _t1E8A#1 = phi(_t1E87,_t1E8B)
          bool _t1E8D#1 = BNot(_t1E8A);
          if _t1E8D then goto SAVE1E90 else goto JOIN1E92
        SAVE1E90:  preds = [COND1E8F]
          self.rayN = rayN1E04;
          active
          goto JOIN1E92
        JOIN1E92:  preds = [*ACTIVE1E91,COND1E8F]
          real _t1E93#8 = 0.e0;
          real _t1E95#10 = 0.1e1;
          real _t1E97#1 = 0.15e1;
          int[84] femIndicies1EB7#1 = ExtractFemItem2<int,int[84],ExtractIndices(Space)>(_t1DCA,_t1DC8);
          tensor[84] femDofs1EB8#4 = ExtractFemItem2<int[84],tensor[84],ExtractDofsSeq(FemFunc)>(_t1DCC,femIndicies1EB7);
          tensor[3,84] basisResult1EB9#1 = EvaluateBasis<BasisArray(3,84)>(pos1E0C);
          tensor[3] probe_l_821E9A#10 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 84],T6[3])<Σ(i2=0..83)<((T4_{i2} * T5_{i0,i2}))>(i2=0..83)>_{3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1EB8,basisResult1EB9,pos1E0C);
          tensor[3,3,84] basisResult1EBB#1 = EvaluateBasis<BasisArray(3,3,84)>(pos1E0C);
          tensor[3,3] probe_l_831E9B#10 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 84],T6[3])<Σ(i4=0..83)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..83)>_{3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1EB8,basisResult1EBB,pos1E0C);
          tensor[3] op1_e3_l_851E9C#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (probe_l_831E9B,probe_l_821E9A);
          tensor[3,3,3] op1_e3_l_861E9D#5 = λ()<Σ(i3=0..3)<((ϵ_{ii3,ii0,ii1} * δ_{i2,i3}))>(i3=0..3)>_{3 3 3} ();
          tensor[3,3] op1_e3_l_871E9E#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_851E9C,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_941E9F#6 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (probe_l_821E9A,op1_e3_l_871E9E);
          tensor[3,3,3,84] basisResult1EBD#1 = EvaluateBasis<BasisArray(3,3,3,84)>(pos1E0C);
          tensor[3,3,3] probe_l_1081EA0#4 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[3 3 3 84],T6[3])<Σ(i6=0..83)<((T4_{i6} * T5_{i0,i1,i2,i6}))>(i6=0..83)>_{3 3 3} (_t1DC8,_t1DCA,_t1DCC,pos1E0C,femDofs1EB8,basisResult1EBD,pos1E0C);
          tensor[3,3,3] op1_e3_l_1111EA1#1 = λ(T0[3],T1[3 3 3])<(T0_{i0} * T1_{i1,i0,i2})>_{3 3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3,3] op1_e3_l_1121EA2#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} * T1_{i1,i2})>_{3 3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1131EA3#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2,i0,i1} + T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (op1_e3_l_1111EA1,op1_e3_l_1121EA2);
          tensor[3,3,3] op1_e3_l_1141EA4#4 = λ(T0[3 3],T1[3])<(T1_{i0} * T0_{i1,i2})>_{3 3 3} (probe_l_831E9B,op1_e3_l_851E9C);
          tensor[3,3,3] op1_e3_l_1151EA5#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1131EA3);
          tensor[3,3,3] op1_e3_l_1161EA6#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1151EA5);
          tensor[3,3] op1_e3_l_1191EA7#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1161EA6,op1_e3_l_861E9D);
          tensor[3,3] op1_e3_l_1441EA8#2 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i0})>_{3 3} (op1_e3_l_941E9F,op1_e3_l_1191EA7);
          real op1_e3_l_1461EA9#4 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_941E9F,op1_e3_l_941E9F);
          tensor[3] op1_e3_l_1471EAA#3 = λ(T0[3 3],T1[3 3])<Σ(i1=0..2)<((T0_{i1,i0} + T1_{i1,i0}))>(i1=0..2)>_{3} (op1_e3_l_1441EA8,op1_e3_l_1441EA8);
          tensor[3] op1_e3_l_2501EAB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_1471EAA);
          real op1_e3_l_2511EAC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1471EAA,op1_e3_l_1471EAA);
          tensor[3] op1_e3_l_2521EAD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2501EAB,op1_e3_l_2511EAC);
          tensor[3] op1_e3_l_4241EAE#2 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_2521EAD);
          real op1_e3_l_4261EAF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4241EAE,op1_e3_l_4241EAE);
          real op1_e3_l_4271EB0#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_4261EAF);
          real op1_e3_l_4281EB1#1 = λ(T0[])<Abs(T0)> (op1_e3_l_4271EB0);
          real op1_e3_l_4291EB2#1 = λ(T0[],T1[])<(T1) / ( T0)> (thick1DD8,op1_e3_l_4281EB1);
          real op1_e3_l_4301EB3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_4291EB2);
          real op1_e3_l_4311EB4#2 = λ(T0[],T1[])<(T0 * T1)> (_t1E97,op1_e3_l_4301EB3);
          real op1_e3_l_4321EB5#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1E93,_t1E95,op1_e3_l_4311EB4);
          real _t1E99#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DE0,op1_e3_l_4321EB5);
          bool _t1EE3#1 = EQ<real>(_t1E99,_t1E93);
          if _t1EE3 then goto SAVE1EE6 else goto JOIN1EE8
        SAVE1EE6:  preds = [COND1EE5]
          self.rayN = rayN1E04;
          active
          goto JOIN1EE8
        JOIN1EE8:  preds = [*ACTIVE1EE7,COND1EE5]
          real op1_e3_l_4331F05#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t1E95,_t1E93,op1_e3_l_4311EB4);
          real op1_e3_l_4341F06#1 = λ(T0[],T1[])<(T0 * T1)> (maxAlpha1DE0,op1_e3_l_4331F05);
          real _t1EE9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_4341F06);
          real _t1F35#1 = MathFn<pow>(_t1EE9,alphaFix1DF4);
          bool _t1F37#1 = NEQ<real>(phKs1DFC,_t1E93);
          if _t1F37 then goto ASSIGN1F63 else goto JOIN1F8F
        ASSIGN1F63:  preds = [COND1F39]
          tensor[3] op1_e3_l_1561F3B#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (eyeDir1DF6,litwsp1DEC);
          real op1_e3_l_1581F3C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1561F3B,op1_e3_l_1561F3B);
          real op1_e3_l_1591F3D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1581F3C);
          tensor[3,3] op1_e3_l_1891F45#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3] op1_e3_l_1901F46#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1911F47#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1891F45,op1_e3_l_1901F46);
          tensor[3,3,3] op1_e3_l_1931F49#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1911F47);
          tensor[3,3,3] op1_e3_l_1941F4A#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1931F49);
          tensor[3,3] op1_e3_l_1971F4B#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1941F4A,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_2221F4C#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_941E9F,op1_e3_l_1971F4B);
          tensor[3] op1_e3_l_2251F4E#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_2221F4C,op1_e3_l_2221F4C);
          tensor[3] op1_e3_l_3281F4F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_2251F4E);
          real op1_e3_l_3291F50#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2251F4E,op1_e3_l_2251F4E);
          tensor[3] op1_e3_l_3301F51#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_3281F4F,op1_e3_l_3291F50);
          tensor[3] op1_e3_l_6731F52#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_3301F51);
          real op1_e3_l_6751F53#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6731F52,op1_e3_l_6731F52);
          real op1_e3_l_6761F54#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_6751F53);
          real op1_e3_l_6781F55#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_6761F54);
          tensor[3] op1_e3_l_6791F56#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_6731F52,op1_e3_l_6781F55);
          tensor[3] op1_e3_l_6801F57#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_6791F56);
          real op1_e3_l_6821F58#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1591F3D);
          real op1_e3_l_6831F59#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6801F57,op1_e3_l_1561F3B);
          real op1_e3_l_6841F5A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_6821F58,op1_e3_l_6831F59);
          real _t1F3A#1 = λ(T0[])<Abs(T0)> (op1_e3_l_6841F5A);
          real scomp1F8C#1 = MathFn<pow>(_t1F3A,phSp1DFE);
          goto JOIN1F8F
        JOIN1F8F:  preds = [ASSIGN1F8D,COND1F39]
          real scomp1F8E#1 = phi(scomp1F8C,_t1E93)
          real cmin1F90#3 = TensorIndex<tensor[2],[0]>(cminmax1DE6);
          real cmax1F92#2 = TensorIndex<tensor[2],[1]>(cminmax1DE6);
          tensor[3] mcol1F94#2 = <tensor[3]>[_t1E95,_t1E95,_t1E95];
          bool _t1F96#1 = NEQ<real>(cmin1F90,cmax1F92);
          if _t1F96 then goto ASSIGN20F6 else goto JOIN200A
        ASSIGN20F6:  preds = [COND1F98]
          tensor[3,3] op1_e3_l_1101FA2#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3] op1_e3_l_1111FA3#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_1121FA4#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1101FA2,op1_e3_l_1111FA3);
          tensor[3,3,3] op1_e3_l_1141FA6#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_1121FA4);
          tensor[3,3,3] op1_e3_l_1151FA7#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_1141FA6);
          tensor[3,3] op1_e3_l_1181FA8#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1151FA7,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_1431FA9#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_941E9F,op1_e3_l_1181FA8);
          tensor[3] op1_e3_l_1461FAB#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_1431FA9,op1_e3_l_1431FA9);
          tensor[3] op1_e3_l_2491FAC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_1461FAB);
          real op1_e3_l_2501FAD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1461FAB,op1_e3_l_1461FAB);
          tensor[3] op1_e3_l_2511FAE#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2491FAC,op1_e3_l_2501FAD);
          tensor[3] op1_e3_l_2531FB0#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_2511FAE);
          tensor[3] _t1F99#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (rayOrig1DF0,op1_e3_l_51E0E,op1_e3_l_2531FB0);
          tensor[84] basisResult1FE3#1 = EvaluateBasis<BasisArray(84)>(_t1F99);
          real probe_l_81FDA#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[84],T5[84],T6[3])<Σ(i0=0..83)<((T4_{i0} * T5_{i0}))>(i0=0..83)> (_t1DC8,_t1DCA,_t1DCC,_t1F99,femDofs1EB8,basisResult1FE3,_t1F99);
          real op1_e3_l_91FDB#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F90,probe_l_81FDA);
          real op1_e3_l_101FDC#1 = λ(T0[],T1[])<(T1) - (T0)> (cmin1F90,cmax1F92);
          real op1_e3_l_111FDD#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_91FDB,op1_e3_l_101FDC);
          real op1_e3_l_121FDE#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1E93,_t1E95);
          real op1_e3_l_131FDF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_111FDD,op1_e3_l_121FDE);
          real _t1FD9#2 = λ(T0[],T1[])<(T0 + T1)> (_t1E93,op1_e3_l_131FDF);
          real Mtransform1FF0#2 = Transform<IMAGE1D<double[3]>>(cmap20C8);
          real MxPos1FF1#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1FF0,_t1FD9);
          real Ttranslate1FF2#1 = Translate<IMAGE1D<double[3]>>(cmap20C8);
          real imgPos1FF3#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1FF1,Ttranslate1FF2);
          real nd1FF4#2 = Floor<1>(imgPos1FF3);
          real f1FF5#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1FF3,nd1FF4);
          int n1FF6#1 = RealToInt<1>(nd1FF4);
          int idx1FF8#3 = n1FF6;
          bool isInside210F#1 = IndexInside<IMAGE1D<double[3]>,2>(idx1FF8,cmap20C8);
          if isInside210F then goto ASSIGN2110 else goto ASSIGN2111
        ASSIGN2110:  preds = [COND2113]
          tensor[3,2] ldvox210D#1 = LoadVoxels<IMAGE1D<double[3]>,2>(cmap20C8,idx1FF8);
          goto JOIN2114
        JOIN2114:  preds = [ASSIGN2110,ASSIGN2111]
          tensor[3,2] ldvox1FF9#1 = phi(ldvox210D,ldvox210E)
          tensor[2] kernX_1FFA#1 = BuildPos<1>(f1FF5);
          tensor[2] kevalX_d0_1FFB#1 = EvalKernel<2,tent,0>(kernX_1FFA);
          tensor[3] mcol1FEF#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1DCE,_t1DD0,_t1FD9,Mtransform1FF0,ldvox1FF9,kevalX_d0_1FFB);
          goto JOIN200A
        JOIN200A:  preds = [ASSIGN2008,COND1F98]
          tensor[3] mcol2009#1 = phi(mcol1FEF,mcol1F94)
          tensor[3,3] op1_e3_l_1982013#1 = λ(T0[3],T1[3 3 3])<Σ(i2=0..2)<((T0_{i2} * T1_{i0,i2,i1}))>(i2=0..2)>_{3 3} (probe_l_821E9A,probe_l_1081EA0);
          tensor[3,3] op1_e3_l_1992014#1 = λ(T0[3 3],T1[3 3])<Σ(i2=0..2)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..2)>_{3 3} (probe_l_831E9B,probe_l_831E9B);
          tensor[3,3] op1_e3_l_2002015#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1} + T1_{i0,i1})>_{3 3} (op1_e3_l_1982013,op1_e3_l_1992014);
          tensor[3,3,3] op1_e3_l_2022017#1 = λ(T0[3],T1[3 3])<(T0_{i0} * T1_{i1,i2})>_{3 3 3} (probe_l_821E9A,op1_e3_l_2002015);
          tensor[3,3,3] op1_e3_l_2032018#1 = λ(T0[3 3 3],T1[3 3 3])<(T0_{i0,i1,i2} + T1_{i1,i0,i2})>_{3 3 3} (op1_e3_l_1141EA4,op1_e3_l_2022017);
          tensor[3,3] op1_e3_l_2062019#1 = λ(T0[3 3 3],T1[3 3 3])<Σ(i2=0..2)(i3=0..2)<((T0_{i3,i2,i0} * T1_{i2,i3,i1}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_2032018,op1_e3_l_861E9D);
          tensor[3] op1_e3_l_231201A#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_941E9F,op1_e3_l_2062019);
          tensor[3] op1_e3_l_234201C#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_231201A,op1_e3_l_231201A);
          tensor[3] op1_e3_l_337201D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1461EA9,op1_e3_l_234201C);
          real op1_e3_l_338201E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_234201C,op1_e3_l_234201C);
          tensor[3] op1_e3_l_339201F#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_337201D,op1_e3_l_338201E);
          tensor[3] op1_e3_l_6822020#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_339201F);
          real op1_e3_l_6842021#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_6822020,op1_e3_l_6822020);
          real op1_e3_l_6852022#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_6842021);
          real op1_e3_l_6872023#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_6852022);
          tensor[3] op1_e3_l_6882024#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_6822020,op1_e3_l_6872023);
          tensor[3] op1_e3_l_6892025#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_6882024);
          real op1_e3_l_6902026#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (litwsp1DEC,op1_e3_l_6892025);
          real op1_e3_l_6912027#1 = λ(T0[])<(T0)^2> (op1_e3_l_6902026);
          real op1_e3_l_6922028#1 = λ(T0[],T1[])<(T0 * T1)> (phKd1DFA,op1_e3_l_6912027);
          real op1_e3_l_694202A#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE8,rayN1E04);
          real op1_e3_l_695202B#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp1DE8,camFarVsp1DEA);
          real op1_e3_l_696202C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_694202A,op1_e3_l_695202B);
          tensor[3] op1_e3_l_697202D#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (mcNear1DE2,mcFar1DE4);
          tensor[3] op1_e3_l_698202E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_696202C,op1_e3_l_697202D);
          real op1_e3_l_699202F#1 = λ(T0[],T1[])<(T0 + T1)> (phKa1DF8,op1_e3_l_6922028);
          tensor[3] op1_e3_l_7002030#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (mcNear1DE2,op1_e3_l_698202E);
          tensor[3] op1_e3_l_7012031#1 = λ(T0[3],T1[],T2[3])<(T1 * T2_{i0} * T0_{i0})>_{3} (mcol2009,op1_e3_l_699202F,op1_e3_l_7002030);
          tensor[3] op1_e3_l_7022032#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (phKs1DFC,scomp1F8E,mcol1F94);
          real op1_e3_l_7032033#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,_t1F35);
          tensor[3] op1_e3_l_7042034#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_7012031,op1_e3_l_7022032);
          tensor[3] op1_e3_l_7052035#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (transp1E02,op1_e3_l_7032033,op1_e3_l_7042034);
          tensor[3] rgb200B#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb1E00,op1_e3_l_7052035);
          real op1_e3_l_52073#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1E95,op1_e3_l_7032033);
          real transp2071#2 = λ(T0[],T1[])<(T0 * T1)> (transp1E02,op1_e3_l_52073);
          bool _t2077#1 = LT<real>(transp2071,transp01DD6);
          if _t2077 then goto SAVE207A else goto JOIN207F
        SAVE207A:  preds = [COND2079]
          self.rayN = rayN1E04;
          self.rgb = rgb200B;
          self.transp = _t1E93;
          stabilize
          goto JOIN207F
        JOIN207F:  preds = [*STABILIZE207D,COND2079]
          real transp207E#1 = phi(transp2071)
          self.rayN = rayN1E04;
          self.rgb = rgb200B;
          self.transp = transp207E;
          active
        ASSIGN2111:  preds = [COND2113]
          tensor[3,2] ldvox210E#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(cmap20C8,idx1FF8);
          goto JOIN2114
        ASSIGN2084:  preds = [COND1E7E]
          bool _t1E82#1 = false;
          goto JOIN1E83
        ASSIGN2085:  preds = [COND1E45]
          bool _t1E85#1 = false;
          goto JOIN1E86
        ASSIGN2086:  preds = [COND1E40]
          bool _t1E88#1 = false;
          goto JOIN1E89
        ASSIGN2087:  preds = [COND1E18]
          bool _t1E8B#1 = false;
          goto JOIN1E8C
    end update
    method stabilize
        ENTRY2088:  preds = []
          tensor[4] rgba2089#1 = self.rgba;
          tensor[3] rgb208B#3 = self.rgb;
          real transp208D#2 = self.transp;
          real _t208F#2 = 0.1e1;
          bool _t2091#1 = LT<real>(transp208D,_t208F);
          if _t2091 then goto ASSIGN2095 else goto JOIN20AB
        ASSIGN2095:  preds = [COND2093]
          real aa2094#4 = λ(T0[],T1[])<(T0) - (T1)> (_t208F,transp208D);
          real _t2096#1 = TensorIndex<tensor[3],[0]>(rgb208B);
          real _t2098#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2096,aa2094);
          real _t209C#1 = TensorIndex<tensor[3],[1]>(rgb208B);
          real _t209E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t209C,aa2094);
          real _t20A2#1 = TensorIndex<tensor[3],[2]>(rgb208B);
          real _t20A4#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t20A2,aa2094);
          tensor[4] rgba20A8#1 = <tensor[4]>[_t2098,_t209E,_t20A4,aa2094];
          goto JOIN20AB
        JOIN20AB:  preds = [ASSIGN20A9,COND2093]
          tensor[4] rgba20AA#1 = phi(rgba20A8,rgba2089)
          self.rgba = rgba20AA;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY20AE:  preds = []
      int iresU20AF#1 = globals.iresU1B96;
      int iresV20B1#1 = globals.iresV1B97;
      int _t20B3#2 = 0;
      int _t20B5#2 = 1;
      int _t20B7#1 = ISub(iresV20B1,_t20B5);
      int[] _t20B9#1 = Range(_t20B3,_t20B7);
    FOREACH20BC:  preds = [ASSIGN20BA,NEXT20C5]
      foreach (vi20BB in _t20B9) on exit goto RETURN20C6
      int _t20BD#1 = ISub(iresU20AF,_t20B5);
      int[] _t20BF#1 = Range(_t20B3,_t20BD);
    FOREACH20C2:  preds = [ASSIGN20C0,NEXT20C4]
      foreach (ui20C1 in _t20BF) on exit goto NEXT20C5
      new ray(ui20C1,vi20BB);
      goto FOREACH20C2
    NEXT20C5:  preds = [FOREACH20C2]
      goto FOREACH20BC
    RETURN20C6:  preds = [FOREACH20BC]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2115 (block) = <no-default>
  input 0space04D7_intermedateGlobal2116 (space) = <no-default>
  input 0U04D9_intermedateGlobal2117 (U) = <no-default>
  input cellChoice2118 (cellChoice) = <no-default>
  input cmap2119 (cmap) = image("cmap.nrrd")
  input camEye211A (camEye) = <default>
  input camAt211B (camAt) = <default>
  input camUp211C (camUp) = <default>
  input camNear211D (camNear) = <default>
  input camFar211E (camFar) = <default>
  input camFOV211F (camFOV) = <default>
  input camOrtho2120 (camOrtho) = <default>
  input iresU2121 (iresU) = <default>
  input iresV2122 (iresV) = <default>
  input rayStep2123 (rayStep) = <default>
  input refStep2124 (refStep) = <default>
  input transp02125 (transp0) = <default>
  input thick2126 (thick) = <default>
  input fStrTh2127 (fStrTh) = <default>
  input fMaskTh2128 (fMaskTh) = <default>
  input fBias2129 (fBias) = <default>
  input maxAlpha212A (maxAlpha) = <default>
  input light212B (light) = <default>
  input phong212C (phong) = <default>
  input mcNear212D (mcNear) = <default>
  input mcFar212E (mcFar) = <default>
  input litdir212F (litdir) = <default>
  input cminmax2130 (cminmax) = <default>
  global tensor[3] camN2131
  global tensor[3] camU2132
  global tensor[3] camV2133
  global real camDist2134
  global real camVmax2135
  global real camUmax2136
  global real camNearVsp2137
  global real camFarVsp2138
  global tensor[3] litwsp2139
  global int _t213A
  global femData:Space _tX213B
  global femData:FemFunc _tXX213C
  global image(IMAGE1D<double[3]>) img213D
  global int _tXXX213E
## functions
## input initialization
  ENTRY213F:  preds = []
    real _t2140#13 = 0.e0;
    real _t2142#1 = -0.2e1;
    tensor[3] camEye2144#1 = <tensor[3]>[_t2140,_t2142,_t2140];
    globals.camEye211A = camEye2144;
    tensor[3] camAt2147#1 = <tensor[3]>[_t2140,_t2140,_t2140];
    globals.camAt211B = camAt2147;
    real _t214A#5 = 0.1e1;
    tensor[3] camUp214C#1 = <tensor[3]>[_t2140,_t2140,_t214A];
    globals.camUp211C = camUp214C;
    real camNear214F#1 = -0.4e1;
    globals.camNear211D = camNear214F;
    real camFar2152#1 = 0.4e1;
    globals.camFar211E = camFar2152;
    real camFOV2155#1 = 0.1e2;
    globals.camFOV211F = camFOV2155;
    bool camOrtho2158#2 = false;
    globals.camOrtho2120 = camOrtho2158;
    int iresU215B#2 = 100;
    globals.iresU2121 = iresU215B;
    globals.iresV2122 = iresU215B;
    real rayStep215F#2 = 0.1e-3;
    globals.rayStep2123 = rayStep215F;
    globals.refStep2124 = rayStep215F;
    real transp02163#1 = 0.5e-2;
    globals.transp02125 = transp02163;
    real thick2166#1 = 0.1e-1;
    globals.thick2126 = thick2166;
    globals.fStrTh2127 = _t2140;
    globals.fMaskTh2128 = _t2140;
    real fBias216B#2 = 0.1e0;
    globals.fBias2129 = fBias216B;
    globals.maxAlpha212A = _t214A;
    globals.light212B = camOrtho2158;
    real _t2170#1 = 0.7e0;
    real _t2172#1 = 0.2e0;
    real _t2174#1 = 0.1e3;
    tensor[4] phong2176#1 = <tensor[4]>[fBias216B,_t2170,_t2172,_t2174];
    globals.phong212C = phong2176;
    tensor[3] mcNear2179#2 = <tensor[3]>[_t214A,_t214A,_t214A];
    globals.mcNear212D = mcNear2179;
    globals.mcFar212E = mcNear2179;
    real _t217D#1 = -0.1e1;
    tensor[3] litdir217F#1 = <tensor[3]>[_t2140,_t217D,_t2140];
    globals.litdir212F = litdir217F;
    tensor[2] cminmax2182#1 = <tensor[2]>[_t2140,_t2140];
    globals.cminmax2130 = cminmax2182;
    return
## global-variable initialization
  ENTRY2186:  preds = []
    femData:Mesh block2187#3 = globals.block2115;
    femData:Space 0space04D7_intermedateGlobal2189#1 = globals.0space04D7_intermedateGlobal2116;
    femData:FemFunc 0U04D9_intermedateGlobal218B#1 = globals.0U04D9_intermedateGlobal2117;
    int cellChoice218D#1 = globals.cellChoice2118;
    image(IMAGE1D<double[3]>) cmap218F#1 = globals.cmap2119;
    tensor[3] camEye2191#1 = globals.camEye211A;
    tensor[3] camAt2193#1 = globals.camAt211B;
    tensor[3] camUp2195#3 = globals.camUp211C;
    real camNear2197#1 = globals.camNear211D;
    real camFar2199#1 = globals.camFar211E;
    real camFOV219B#1 = globals.camFOV211F;
    int iresU219D#1 = globals.iresU2121;
    int iresV219F#1 = globals.iresV2122;
    tensor[3] litdir21A1#5 = globals.litdir212F;
    int _t21A3#1 = 0;
    int _t21A5#1 = 1;
    int _t21A7#1 = ExtractFemItem<int,NumCell(Mesh)>(block2187);
    int _t21A9#1 = ISub(_t21A7,_t21A5);
    int[] _t21AB#1 = Range(_t21A3,_t21A9);
    femData:MeshCell[] _t21AD#1 = <femData:MeshCell[]>{};
  FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B6]
    foreach (_t21AF in _t21AB) on exit goto ASSIGN21B8
      femData:MeshCell[] _t21B4#2 = phi(_t21AD,_t21B3)
    femData:MeshCell _t21B1#1 = LoadFem<femData:MeshCell>(block2187,_t21AF);
    femData:MeshCell[] _t21B3#1 = Append<femData:MeshCell>(_t21B4,_t21B1);
    goto FOREACH21B0
  ASSIGN21B8:  preds = [FOREACH21B0]
    femData:Space space21B7#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal2189,block2187);
    femData:FemFunc U21B9#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal218B,space21B7);
    femData:MeshCell c121BB#1 = Subscript<femData:MeshCell[]>(_t21B4,cellChoice218D);
    int _t21BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c121BB);
    femData:FuncCell _t21BF#2 = LoadFem<femData:FuncCell>(U21B9,_t21BD);
    femData:FemFunc _t21C1#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t21BF);
    femData:Space _t21C3#1 = ExtractFem<femData:Space,femData:FemFunc>(_t21C1);
    int _t21C5#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t21BF);
    int _t21C7#1 = 0;
    image(IMAGE1D<double[3]>) img21C9#1 = cmap218F;
    tensor[3] op1_e3_l_421CB#9 = VSub<3>(camAt2193,camEye2191);
    real op1_e3_l_621CE#1 = VDot<3>(op1_e3_l_421CB,op1_e3_l_421CB);
    real op1_e3_l_721D1#6 = Sqrt(op1_e3_l_621CE);
    real realLit21D5#1 = 0.1e1;
    real op1_e3_l_921D4#6 = RDiv(realLit21D5,op1_e3_l_721D1);
    tensor[3] camN21D9#2 = VScale<3>(op1_e3_l_921D4,op1_e3_l_421CB);
    globals.camN2131 = camN21D9;
    real realLit21DE#3 = 0.e0;
    real r21DF#3 = TensorIndex<tensor[3],[0]>(camUp2195);
    real r21E0#3 = RMul(realLit21DE,r21DF);
    real r21E1#3 = TensorIndex<tensor[3],[1]>(camUp2195);
    real r21E2#3 = RMul(realLit21DE,r21E1);
    real r21E3#3 = TensorIndex<tensor[3],[2]>(camUp2195);
    real r21E4#5 = RMul(realLit21DE,r21E3);
    real r21E5#3 = RAdd(r21E0,r21E2);
    real r21E6#3 = RAdd(r21E5,r21E4);
    real realLit21E7#3 = 0.1e1;
    real r21E8#1 = RMul(realLit21E7,r21E3);
    real r21E9#1 = RAdd(r21E5,r21E8);
    real realLit21EA#3 = -0.1e1;
    real r21EB#1 = RMul(realLit21EA,r21E1);
    real r21EC#1 = RAdd(r21E0,r21EB);
    real r21ED#1 = RAdd(r21EC,r21E4);
    tensor[3] tensor21EE#1 = <tensor[3]>[r21E6,r21E9,r21ED];
    real r21EF#1 = RMul(realLit21EA,r21E3);
    real r21F0#1 = RAdd(r21E5,r21EF);
    real r21F1#1 = RMul(realLit21E7,r21DF);
    real r21F2#1 = RAdd(r21F1,r21E2);
    real r21F3#1 = RAdd(r21F2,r21E4);
    tensor[3] tensor21F4#1 = <tensor[3]>[r21F0,r21E6,r21F3];
    real r21F5#1 = RMul(realLit21E7,r21E1);
    real r21F6#1 = RAdd(r21E0,r21F5);
    real r21F7#1 = RAdd(r21F6,r21E4);
    real r21F8#1 = RMul(realLit21EA,r21DF);
    real r21F9#1 = RAdd(r21F8,r21E2);
    real r21FA#1 = RAdd(r21F9,r21E4);
    tensor[3] tensor21FB#1 = <tensor[3]>[r21F7,r21FA,r21E6];
    tensor[3,3] op1_e3_l_1521DD#3 = <tensor[3,3]>[tensor21EE,tensor21F4,tensor21FB];
    tensor[3] projParam221D#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1521DD);
    real vdot221E#1 = VDot<3>(op1_e3_l_421CB,projParam221D);
    tensor[3] projParam221F#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1521DD);
    real vdot2220#1 = VDot<3>(op1_e3_l_421CB,projParam221F);
    tensor[3] projParam2221#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1521DD);
    real vdot2222#1 = VDot<3>(op1_e3_l_421CB,projParam2221);
    tensor[3] op1_e3_l_17221C#6 = <tensor[3]>[vdot221E,vdot2220,vdot2222];
    real op1_e3_l_34222B#1 = VDot<3>(op1_e3_l_17221C,op1_e3_l_17221C);
    real r222F#1 = RMul(op1_e3_l_921D4,op1_e3_l_921D4);
    real op1_e3_l_35222E#1 = RMul(r222F,op1_e3_l_34222B);
    real op1_e3_l_362233#1 = Sqrt(op1_e3_l_35222E);
    tensor[3] op1_e3_l_372236#1 = VScale<3>(op1_e3_l_921D4,op1_e3_l_17221C);
    real realLit223A#1 = 0.1e1;
    real op1_e3_l_382239#2 = RDiv(realLit223A,op1_e3_l_362233);
    tensor[3] camU223E#2 = VScale<3>(op1_e3_l_382239,op1_e3_l_372236);
    globals.camU2132 = camU223E;
    real realLit2243#3 = 0.e0;
    real r2244#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_17221C);
    real r2245#3 = RMul(realLit2243,r2244);
    real r2246#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_17221C);
    real r2247#3 = RMul(realLit2243,r2246);
    real r2248#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_17221C);
    real r2249#5 = RMul(realLit2243,r2248);
    real r224A#3 = RAdd(r2245,r2247);
    real r224B#3 = RAdd(r224A,r2249);
    real realLit224C#3 = 0.1e1;
    real r224D#1 = RMul(realLit224C,r2248);
    real r224E#1 = RAdd(r224A,r224D);
    real realLit224F#3 = -0.1e1;
    real r2250#1 = RMul(realLit224F,r2246);
    real r2251#1 = RAdd(r2245,r2250);
    real r2252#1 = RAdd(r2251,r2249);
    tensor[3] tensor2253#1 = <tensor[3]>[r224B,r224E,r2252];
    real r2254#1 = RMul(realLit224F,r2248);
    real r2255#1 = RAdd(r224A,r2254);
    real r2256#1 = RMul(realLit224C,r2244);
    real r2257#1 = RAdd(r2256,r2247);
    real r2258#1 = RAdd(r2257,r2249);
    tensor[3] tensor2259#1 = <tensor[3]>[r2255,r224B,r2258];
    real r225A#1 = RMul(realLit224C,r2246);
    real r225B#1 = RAdd(r2245,r225A);
    real r225C#1 = RAdd(r225B,r2249);
    real r225D#1 = RMul(realLit224F,r2244);
    real r225E#1 = RAdd(r225D,r2247);
    real r225F#1 = RAdd(r225E,r2249);
    tensor[3] tensor2260#1 = <tensor[3]>[r225C,r225F,r224B];
    tensor[3,3] op1_e3_l_452242#3 = <tensor[3,3]>[tensor2253,tensor2259,tensor2260];
    tensor[3] projParam2282#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_452242);
    real vdot2283#1 = VDot<3>(op1_e3_l_421CB,projParam2282);
    tensor[3] projParam2284#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_452242);
    real vdot2285#1 = VDot<3>(op1_e3_l_421CB,projParam2284);
    tensor[3] projParam2286#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_452242);
    real vdot2287#1 = VDot<3>(op1_e3_l_421CB,projParam2286);
    tensor[3] op1_e3_l_472281#1 = <tensor[3]>[vdot2283,vdot2285,vdot2287];
    tensor[3] op1_e3_l_502290#3 = VScale<3>(op1_e3_l_921D4,op1_e3_l_472281);
    real r2294#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_502290);
    real r2295#3 = RMul(op1_e3_l_921D4,op1_e3_l_382239);
    real r2296#1 = RMul(r2295,r2294);
    real r2297#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_502290);
    real r2298#1 = RMul(r2295,r2297);
    real r2299#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_502290);
    real r229A#1 = RMul(r2295,r2299);
    tensor[3] camV2293#2 = <tensor[3]>[r2296,r2298,r229A];
    globals.camV2133 = camV2293;
    globals.camDist2134 = op1_e3_l_721D1;
    real _t22A6#1 = 0.314159265358979323846264338327950288e1;
    real _t22A8#1 = 0.36e3;
    real op1_e3_l_522AA#1 = RMul(camFOV219B,_t22A6);
    real op1_e3_l_622AD#1 = RDiv(op1_e3_l_522AA,_t22A8);
    real op1_e3_l_1022B0#2 = Tan(op1_e3_l_622AD);
    real camVmax22B3#1 = RMul(op1_e3_l_1022B0,op1_e3_l_721D1);
    globals.camVmax2135 = camVmax22B3;
    real _t22B7#1 = IntToReal(iresU219D);
    real _t22B9#1 = IntToReal(iresV219F);
    real r22BC#1 = RMul(_t22B7,op1_e3_l_1022B0);
    real op1_e3_l_1422BB#1 = RMul(r22BC,op1_e3_l_721D1);
    real camUmax22C0#1 = RDiv(op1_e3_l_1422BB,_t22B9);
    globals.camUmax2136 = camUmax22C0;
    real camNearVsp22C4#1 = RAdd(camNear2197,op1_e3_l_721D1);
    globals.camNearVsp2137 = camNearVsp22C4;
    real camFarVsp22C8#1 = RAdd(camFar2199,op1_e3_l_721D1);
    globals.camFarVsp2138 = camFarVsp22C8;
    tensor[3,3] _t22CC#9 = <tensor[3,3]>[camU223E,camV2293,camN21D9];
    real op1_e3_l_322CE#1 = VDot<3>(litdir21A1,litdir21A1);
    real op1_e3_l_422D1#1 = Sqrt(op1_e3_l_322CE);
    real realLit22D5#1 = 0.1e1;
    real op1_e3_l_522D4#1 = RDiv(realLit22D5,op1_e3_l_422D1);
    real r22DA#1 = TensorIndex<tensor[3,3],[0,0]>(_t22CC);
    real r22DB#3 = TensorIndex<tensor[3],[0]>(litdir21A1);
    real r22DC#1 = RMul(r22DA,r22DB);
    real r22DD#1 = TensorIndex<tensor[3,3],[1,0]>(_t22CC);
    real r22DE#3 = TensorIndex<tensor[3],[1]>(litdir21A1);
    real r22DF#1 = RMul(r22DD,r22DE);
    real r22E0#1 = TensorIndex<tensor[3,3],[2,0]>(_t22CC);
    real r22E1#3 = TensorIndex<tensor[3],[2]>(litdir21A1);
    real r22E2#1 = RMul(r22E0,r22E1);
    real r22E3#1 = RAdd(r22DC,r22DF);
    real r22E4#1 = RAdd(r22E3,r22E2);
    real r22E5#1 = TensorIndex<tensor[3,3],[0,1]>(_t22CC);
    real r22E6#1 = RMul(r22E5,r22DB);
    real r22E7#1 = TensorIndex<tensor[3,3],[1,1]>(_t22CC);
    real r22E8#1 = RMul(r22E7,r22DE);
    real r22E9#1 = TensorIndex<tensor[3,3],[2,1]>(_t22CC);
    real r22EA#1 = RMul(r22E9,r22E1);
    real r22EB#1 = RAdd(r22E6,r22E8);
    real r22EC#1 = RAdd(r22EB,r22EA);
    real r22ED#1 = TensorIndex<tensor[3,3],[0,2]>(_t22CC);
    real r22EE#1 = RMul(r22ED,r22DB);
    real r22EF#1 = TensorIndex<tensor[3,3],[1,2]>(_t22CC);
    real r22F0#1 = RMul(r22EF,r22DE);
    real r22F1#1 = TensorIndex<tensor[3,3],[2,2]>(_t22CC);
    real r22F2#1 = RMul(r22F1,r22E1);
    real r22F3#1 = RAdd(r22EE,r22F0);
    real r22F4#1 = RAdd(r22F3,r22F2);
    tensor[3] op1_e3_l_622D9#1 = <tensor[3]>[r22E4,r22EC,r22F4];
    tensor[3] litwsp2312#1 = VScale<3>(op1_e3_l_522D4,op1_e3_l_622D9);
    globals.litwsp2139 = litwsp2312;
    globals._t213A = _t21C5;
    globals._tX213B = _t21C3;
    globals._tXX213C = _t21C1;
    globals.img213D = img21C9;
    globals._tXXX213E = _t21C7;
    return
## strand
  strand ray (int ui231C#1, int vi231D#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY232E:  preds = []
        tensor[3] camEye232F#1 = globals.camEye211A;
        bool camOrtho2331#2 = globals.camOrtho2120;
        int iresU2333#1 = globals.iresU2121;
        int iresV2335#1 = globals.iresV2122;
        real rayStep2337#1 = globals.rayStep2123;
        real refStep2339#1 = globals.refStep2124;
        tensor[4] phong233B#4 = globals.phong212C;
        tensor[3] camN233D#1 = globals.camN2131;
        tensor[3] camU233F#1 = globals.camU2132;
        tensor[3] camV2341#1 = globals.camV2133;
        real camDist2343#1 = globals.camDist2134;
        real camVmax2345#2 = globals.camVmax2135;
        real camUmax2347#2 = globals.camUmax2136;
        real camNearVsp2349#1 = globals.camNearVsp2137;
        real _t234B#5 = -0.5e0;
        real _t234D#1 = IntToReal(ui231C);
        real _t234F#1 = IntToReal(iresU2333);
        real _t2351#3 = 0.5e0;
        real op1_e3_l_62353#1 = RSub(_t234F,_t2351);
        real op1_e3_l_72356#1 = RSub(_t234D,_t234B);
        real op1_e3_l_82359#1 = RSub(op1_e3_l_62353,_t234B);
        real op1_e3_l_9235C#2 = RNeg(camUmax2347);
        real op1_e3_l_10235F#1 = RDiv(op1_e3_l_72356,op1_e3_l_82359);
        real op1_e3_l_112362#1 = RSub(camUmax2347,op1_e3_l_9235C);
        real op1_e3_l_132365#1 = RMul(op1_e3_l_10235F,op1_e3_l_112362);
        real rayU2368#2 = RAdd(op1_e3_l_9235C,op1_e3_l_132365);
        real _t236B#1 = IntToReal(vi231D);
        real _t236D#2 = IntToReal(iresV2335);
        real op1_e3_l_6236F#1 = RSub(_t236D,_t2351);
        real op1_e3_l_72372#2 = RSub(_t236B,_t234B);
        real op1_e3_l_82375#1 = RSub(op1_e3_l_6236F,_t234B);
        real op1_e3_l_92378#3 = RNeg(camVmax2345);
        real op1_e3_l_10237B#1 = RDiv(op1_e3_l_72372,op1_e3_l_82375);
        real op1_e3_l_11237E#2 = RSub(camVmax2345,op1_e3_l_92378);
        real op1_e3_l_132381#1 = RMul(op1_e3_l_10237B,op1_e3_l_11237E);
        real rayV2384#1 = RAdd(op1_e3_l_92378,op1_e3_l_132381);
        real op1_e3_l_232387#1 = RSub(_t236D,_t2351);
        real op1_e3_l_25238A#1 = RSub(op1_e3_l_232387,_t234B);
        real op1_e3_l_27238D#1 = RDiv(op1_e3_l_72372,op1_e3_l_25238A);
        real op1_e3_l_302390#1 = RMul(op1_e3_l_27238D,op1_e3_l_11237E);
        real op1_e3_l_312393#1 = RAdd(op1_e3_l_92378,op1_e3_l_302390);
        tensor[3] op1_e3_l_322396#1 = VScale<3>(rayU2368,camU233F);
        tensor[3] op1_e3_l_332399#1 = VScale<3>(op1_e3_l_312393,camV2341);
        tensor[3] UV239C#5 = VAdd<3>(op1_e3_l_322396,op1_e3_l_332399);
        if camOrtho2331 then goto JOIN23A2 else goto ASSIGN23FC
      JOIN23A2:  preds = [COND239F,ASSIGN23FD]
        tensor[3] _t23A0#1 = phi(UV239C,_t23A1)
        tensor[3] rayOrig23A3#1 = VAdd<3>(camEye232F,_t23A0);
        if camOrtho2331 then goto ASSIGN23A8 else goto ASSIGN23F2
      ASSIGN23A8:  preds = [COND23A6]
        real _t23A7#3 = 0.e0;
        tensor[3] _t23A9#1 = <tensor[3]>[_t23A7,_t23A7,_t23A7];
        goto JOIN23AD
      JOIN23AD:  preds = [ASSIGN23AA,ASSIGN23FA]
        tensor[3] _t23AB#1 = phi(_t23A9,_t23AC)
        tensor[3] rayVec23AE#4 = VAdd<3>(camN233D,_t23AB);
        real op1_e3_l_623B1#1 = VDot<3>(rayVec23AE,rayVec23AE);
        real op1_e3_l_723B4#2 = Sqrt(op1_e3_l_623B1);
        real op1_e3_l_823B7#1 = RMul(rayStep2337,op1_e3_l_723B4);
        real alphaFix23BA#1 = RDiv(op1_e3_l_823B7,refStep2339);
        real realLit23BE#1 = 0.1e1;
        real op1_e3_l_923BD#1 = RDiv(realLit23BE,op1_e3_l_723B4);
        tensor[3] op1_e3_l_1023C2#1 = VScale<3>(op1_e3_l_923BD,rayVec23AE);
        tensor[3] eyeDir23C5#1 = VNeg<3>(op1_e3_l_1023C2);
        real phKa23C8#1 = VIndex<4,0>(phong233B);
        real phKd23CA#1 = VIndex<4,1>(phong233B);
        real phKs23CC#1 = VIndex<4,2>(phong233B);
        real phSp23CE#1 = VIndex<4,3>(phong233B);
        real _t23D0#8 = 0.e0;
        tensor[4] rgba23D2#1 = <tensor[4]>[_t23D0,_t23D0,_t23D0,_t23D0];
        tensor[3] rgb23D4#1 = <tensor[3]>[_t23D0,_t23D0,_t23D0];
        real transp23D6#1 = 0.1e1;
        self.rayU = rayU2368;
        self.rayV = rayV2384;
        self.rayN = camNearVsp2349;
        self.UV = UV239C;
        self.rayOrig = rayOrig23A3;
        self.rayVec = rayVec23AE;
        self.alphaFix = alphaFix23BA;
        self.eyeDir = eyeDir23C5;
        self.phKa = phKa23C8;
        self.phKd = phKd23CA;
        self.phKs = phKs23CC;
        self.phSp = phSp23CE;
        self.rgba = rgba23D2;
        self.raw = _t23D0;
        self.rgb = rgb23D4;
        self.transp = transp23D6;
        return
      ASSIGN23F2:  preds = [COND23A6]
        real realLit23E9#1 = 0.1e1;
        real r23EA#3 = RDiv(realLit23E9,camDist2343);
        real r23EB#1 = TensorIndex<tensor[3],[0]>(UV239C);
        real r23EC#1 = RMul(r23EA,r23EB);
        real r23ED#1 = TensorIndex<tensor[3],[1]>(UV239C);
        real r23EE#1 = RMul(r23EA,r23ED);
        real r23EF#1 = TensorIndex<tensor[3],[2]>(UV239C);
        real r23F0#1 = RMul(r23EA,r23EF);
        tensor[3] _t23AC#1 = <tensor[3]>[r23EC,r23EE,r23F0];
        goto JOIN23AD
      ASSIGN23FC:  preds = [COND239F]
        real _t23FB#3 = 0.e0;
        tensor[3] _t23A1#1 = <tensor[3]>[_t23FB,_t23FB,_t23FB];
        goto JOIN23A2
    end state init
    method update
        ENTRY23FE:  preds = []
          image(IMAGE1D<double[3]>) cmap23FF#17 = globals.cmap2119;
          int _t2401#2 = globals._t213A;
          femData:Space _t2403#168 = globals._tX213B;
          femData:FemFunc _t2405#168 = globals._tXX213C;
          image(IMAGE1D<double[3]>) img2407#0 = globals.img213D;
          int _t2409#0 = globals._tXXX213E;
          femData:Mesh block240B#1 = globals.block2115;
          real rayStep240D#1 = globals.rayStep2123;
          real transp0240F#1 = globals.transp02125;
          real thick2411#1 = globals.thick2126;
          real fStrTh2413#1 = globals.fStrTh2127;
          real fMaskTh2415#1 = globals.fMaskTh2128;
          real fBias2417#1 = globals.fBias2129;
          real maxAlpha2419#2 = globals.maxAlpha212A;
          tensor[3] mcNear241B#2 = globals.mcNear212D;
          tensor[3] mcFar241D#1 = globals.mcFar212E;
          tensor[2] cminmax241F#2 = globals.cminmax2130;
          real camNearVsp2421#2 = globals.camNearVsp2137;
          real camFarVsp2423#2 = globals.camFarVsp2138;
          tensor[3] litwsp2425#2 = globals.litwsp2139;
          real rayN2427#1 = self.rayN;
          tensor[3] rayOrig2429#2 = self.rayOrig;
          tensor[3] rayVec242B#1 = self.rayVec;
          real alphaFix242D#1 = self.alphaFix;
          tensor[3] eyeDir242F#1 = self.eyeDir;
          real phKa2431#1 = self.phKa;
          real phKd2433#1 = self.phKd;
          real phKs2435#2 = self.phKs;
          real phSp2437#1 = self.phSp;
          tensor[3] rgb2439#1 = self.rgb;
          real transp243B#2 = self.transp;
          real rayN243D#8 = RAdd(rayN2427,rayStep240D);
          bool _t2440#1 = GT<real>(rayN243D,camFarVsp2423);
          if _t2440 then goto SAVE2443 else goto JOIN2445
        SAVE2443:  preds = [COND2442]
          self.rayN = rayN243D;
          stabilize
          goto JOIN2445
        JOIN2445:  preds = [*STABILIZE2444,COND2442]
          tensor[3] op1_e3_l_52446#2 = VScale<3>(rayN243D,rayVec242B);
          tensor[3] pos2449#19 = VAdd<3>(rayOrig2429,op1_e3_l_52446);
          femData:RefCell _t244C#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block240B);
          real _t244E#1 = 0.1e-8;
          bool _t2450#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t244C,pos2449,_t244E);
          if _t2450 then goto ASSIGN2553 else goto ASSIGN5399
        ASSIGN2553:  preds = [COND2452]
          int ilit2454#1 = 84;
          int mulRes2455#84 = IMul(_t2401,ilit2454);
          int ilit2456#1 = 0;
          int addRes2457#1 = IAdd(mulRes2455,ilit2456);
          int idx2458#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2457);
          int ilit2459#1 = 1;
          int addRes245A#1 = IAdd(mulRes2455,ilit2459);
          int idx245B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245A);
          int ilit245C#1 = 2;
          int addRes245D#1 = IAdd(mulRes2455,ilit245C);
          int idx245E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245D);
          int ilit245F#1 = 3;
          int addRes2460#1 = IAdd(mulRes2455,ilit245F);
          int idx2461#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2460);
          int ilit2462#1 = 4;
          int addRes2463#1 = IAdd(mulRes2455,ilit2462);
          int idx2464#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2463);
          int ilit2465#1 = 5;
          int addRes2466#1 = IAdd(mulRes2455,ilit2465);
          int idx2467#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2466);
          int ilit2468#1 = 6;
          int addRes2469#1 = IAdd(mulRes2455,ilit2468);
          int idx246A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2469);
          int ilit246B#1 = 7;
          int addRes246C#1 = IAdd(mulRes2455,ilit246B);
          int idx246D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246C);
          int ilit246E#1 = 8;
          int addRes246F#1 = IAdd(mulRes2455,ilit246E);
          int idx2470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246F);
          int ilit2471#1 = 9;
          int addRes2472#1 = IAdd(mulRes2455,ilit2471);
          int idx2473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2472);
          int ilit2474#1 = 10;
          int addRes2475#1 = IAdd(mulRes2455,ilit2474);
          int idx2476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2475);
          int ilit2477#1 = 11;
          int addRes2478#1 = IAdd(mulRes2455,ilit2477);
          int idx2479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2478);
          int ilit247A#1 = 12;
          int addRes247B#1 = IAdd(mulRes2455,ilit247A);
          int idx247C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247B);
          int ilit247D#1 = 13;
          int addRes247E#1 = IAdd(mulRes2455,ilit247D);
          int idx247F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247E);
          int ilit2480#1 = 14;
          int addRes2481#1 = IAdd(mulRes2455,ilit2480);
          int idx2482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2481);
          int ilit2483#1 = 15;
          int addRes2484#1 = IAdd(mulRes2455,ilit2483);
          int idx2485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2484);
          int ilit2486#1 = 16;
          int addRes2487#1 = IAdd(mulRes2455,ilit2486);
          int idx2488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2487);
          int ilit2489#1 = 17;
          int addRes248A#1 = IAdd(mulRes2455,ilit2489);
          int idx248B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248A);
          int ilit248C#1 = 18;
          int addRes248D#1 = IAdd(mulRes2455,ilit248C);
          int idx248E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248D);
          int ilit248F#1 = 19;
          int addRes2490#1 = IAdd(mulRes2455,ilit248F);
          int idx2491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2490);
          int ilit2492#1 = 20;
          int addRes2493#1 = IAdd(mulRes2455,ilit2492);
          int idx2494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2493);
          int ilit2495#1 = 21;
          int addRes2496#1 = IAdd(mulRes2455,ilit2495);
          int idx2497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2496);
          int ilit2498#1 = 22;
          int addRes2499#1 = IAdd(mulRes2455,ilit2498);
          int idx249A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2499);
          int ilit249B#1 = 23;
          int addRes249C#1 = IAdd(mulRes2455,ilit249B);
          int idx249D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249C);
          int ilit249E#1 = 24;
          int addRes249F#1 = IAdd(mulRes2455,ilit249E);
          int idx24A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249F);
          int ilit24A1#1 = 25;
          int addRes24A2#1 = IAdd(mulRes2455,ilit24A1);
          int idx24A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A2);
          int ilit24A4#1 = 26;
          int addRes24A5#1 = IAdd(mulRes2455,ilit24A4);
          int idx24A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A5);
          int ilit24A7#1 = 27;
          int addRes24A8#1 = IAdd(mulRes2455,ilit24A7);
          int idx24A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A8);
          int ilit24AA#1 = 28;
          int addRes24AB#1 = IAdd(mulRes2455,ilit24AA);
          int idx24AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AB);
          int ilit24AD#1 = 29;
          int addRes24AE#1 = IAdd(mulRes2455,ilit24AD);
          int idx24AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AE);
          int ilit24B0#1 = 30;
          int addRes24B1#1 = IAdd(mulRes2455,ilit24B0);
          int idx24B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B1);
          int ilit24B3#1 = 31;
          int addRes24B4#1 = IAdd(mulRes2455,ilit24B3);
          int idx24B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B4);
          int ilit24B6#1 = 32;
          int addRes24B7#1 = IAdd(mulRes2455,ilit24B6);
          int idx24B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B7);
          int ilit24B9#1 = 33;
          int addRes24BA#1 = IAdd(mulRes2455,ilit24B9);
          int idx24BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BA);
          int ilit24BC#1 = 34;
          int addRes24BD#1 = IAdd(mulRes2455,ilit24BC);
          int idx24BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BD);
          int ilit24BF#1 = 35;
          int addRes24C0#1 = IAdd(mulRes2455,ilit24BF);
          int idx24C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C0);
          int ilit24C2#1 = 36;
          int addRes24C3#1 = IAdd(mulRes2455,ilit24C2);
          int idx24C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C3);
          int ilit24C5#1 = 37;
          int addRes24C6#1 = IAdd(mulRes2455,ilit24C5);
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C6);
          int ilit24C8#1 = 38;
          int addRes24C9#1 = IAdd(mulRes2455,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C9);
          int ilit24CB#1 = 39;
          int addRes24CC#1 = IAdd(mulRes2455,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CC);
          int ilit24CE#1 = 40;
          int addRes24CF#1 = IAdd(mulRes2455,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CF);
          int ilit24D1#1 = 41;
          int addRes24D2#1 = IAdd(mulRes2455,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D2);
          int ilit24D4#1 = 42;
          int addRes24D5#1 = IAdd(mulRes2455,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D5);
          int ilit24D7#1 = 43;
          int addRes24D8#1 = IAdd(mulRes2455,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D8);
          int ilit24DA#1 = 44;
          int addRes24DB#1 = IAdd(mulRes2455,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DB);
          int ilit24DD#1 = 45;
          int addRes24DE#1 = IAdd(mulRes2455,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DE);
          int ilit24E0#1 = 46;
          int addRes24E1#1 = IAdd(mulRes2455,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E1);
          int ilit24E3#1 = 47;
          int addRes24E4#1 = IAdd(mulRes2455,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E4);
          int ilit24E6#1 = 48;
          int addRes24E7#1 = IAdd(mulRes2455,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E7);
          int ilit24E9#1 = 49;
          int addRes24EA#1 = IAdd(mulRes2455,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24EA);
          int ilit24EC#1 = 50;
          int addRes24ED#1 = IAdd(mulRes2455,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24ED);
          int ilit24EF#1 = 51;
          int addRes24F0#1 = IAdd(mulRes2455,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F0);
          int ilit24F2#1 = 52;
          int addRes24F3#1 = IAdd(mulRes2455,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F3);
          int ilit24F5#1 = 53;
          int addRes24F6#1 = IAdd(mulRes2455,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F6);
          int ilit24F8#1 = 54;
          int addRes24F9#1 = IAdd(mulRes2455,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F9);
          int ilit24FB#1 = 55;
          int addRes24FC#1 = IAdd(mulRes2455,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FC);
          int ilit24FE#1 = 56;
          int addRes24FF#1 = IAdd(mulRes2455,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FF);
          int ilit2501#1 = 57;
          int addRes2502#1 = IAdd(mulRes2455,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2502);
          int ilit2504#1 = 58;
          int addRes2505#1 = IAdd(mulRes2455,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2505);
          int ilit2507#1 = 59;
          int addRes2508#1 = IAdd(mulRes2455,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2508);
          int ilit250A#1 = 60;
          int addRes250B#1 = IAdd(mulRes2455,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250B);
          int ilit250D#1 = 61;
          int addRes250E#1 = IAdd(mulRes2455,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250E);
          int ilit2510#1 = 62;
          int addRes2511#1 = IAdd(mulRes2455,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2511);
          int ilit2513#1 = 63;
          int addRes2514#1 = IAdd(mulRes2455,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2514);
          int ilit2516#1 = 64;
          int addRes2517#1 = IAdd(mulRes2455,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2517);
          int ilit2519#1 = 65;
          int addRes251A#1 = IAdd(mulRes2455,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251A);
          int ilit251C#1 = 66;
          int addRes251D#1 = IAdd(mulRes2455,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251D);
          int ilit251F#1 = 67;
          int addRes2520#1 = IAdd(mulRes2455,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2520);
          int ilit2522#1 = 68;
          int addRes2523#1 = IAdd(mulRes2455,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2523);
          int ilit2525#1 = 69;
          int addRes2526#1 = IAdd(mulRes2455,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2526);
          int ilit2528#1 = 70;
          int addRes2529#1 = IAdd(mulRes2455,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2529);
          int ilit252B#1 = 71;
          int addRes252C#1 = IAdd(mulRes2455,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252C);
          int ilit252E#1 = 72;
          int addRes252F#1 = IAdd(mulRes2455,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252F);
          int ilit2531#1 = 73;
          int addRes2532#1 = IAdd(mulRes2455,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2532);
          int ilit2534#1 = 74;
          int addRes2535#1 = IAdd(mulRes2455,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2535);
          int ilit2537#1 = 75;
          int addRes2538#1 = IAdd(mulRes2455,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2538);
          int ilit253A#1 = 76;
          int addRes253B#1 = IAdd(mulRes2455,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253B);
          int ilit253D#1 = 77;
          int addRes253E#1 = IAdd(mulRes2455,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253E);
          int ilit2540#1 = 78;
          int addRes2541#1 = IAdd(mulRes2455,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2541);
          int ilit2543#1 = 79;
          int addRes2544#1 = IAdd(mulRes2455,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2544);
          int ilit2546#1 = 80;
          int addRes2547#1 = IAdd(mulRes2455,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2547);
          int ilit2549#1 = 81;
          int addRes254A#1 = IAdd(mulRes2455,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254A);
          int ilit254C#1 = 82;
          int addRes254D#1 = IAdd(mulRes2455,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254D);
          int ilit254F#1 = 83;
          int addRes2550#1 = IAdd(mulRes2455,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2550);
          int[84] seq2552#1 = <int[84]>{idx2458,idx245B,idx245E,idx2461,idx2464,idx2467,idx246A,idx246D,idx2470,idx2473,idx2476,idx2479,idx247C,idx247F,idx2482,idx2485,idx2488,idx248B,idx248E,idx2491,idx2494,idx2497,idx249A,idx249D,idx24A0,idx24A3,idx24A6,idx24A9,idx24AC,idx24AF,idx24B2,idx24B5,idx24B8,idx24BB,idx24BE,idx24C1,idx24C4,idx24C7,idx24CA,idx24CD,idx24D0,idx24D3,idx24D6,idx24D9,idx24DC,idx24DF,idx24E2,idx24E5,idx24E8,idx24EB,idx24EE,idx24F1,idx24F4,idx24F7,idx24FA,idx24FD,idx2500,idx2503,idx2506,idx2509,idx250C,idx250F,idx2512,idx2515,idx2518,idx251B,idx251E,idx2521,idx2524,idx2527,idx252A,idx252D,idx2530,idx2533,idx2536,idx2539,idx253C,idx253F,idx2542,idx2545,idx2548,idx254B,idx254E,idx2551};
          int[84] femIndicies2453#84 = seq2552;
          int ilit2654#85 = 1;
          int ilit2655#1 = 0;
          int idx2656#1 = Subscript<int>(femIndicies2453,ilit2655);
          int mulRes2657#1 = IMul(ilit2654,idx2656);
          int idx2658#1 = Subscript<int>(femIndicies2453,ilit2654);
          int mulRes2659#1 = IMul(ilit2654,idx2658);
          int ilit265A#1 = 2;
          int idx265B#1 = Subscript<int>(femIndicies2453,ilit265A);
          int mulRes265C#1 = IMul(ilit2654,idx265B);
          int ilit265D#1 = 3;
          int idx265E#1 = Subscript<int>(femIndicies2453,ilit265D);
          int mulRes265F#1 = IMul(ilit2654,idx265E);
          int ilit2660#1 = 4;
          int idx2661#1 = Subscript<int>(femIndicies2453,ilit2660);
          int mulRes2662#1 = IMul(ilit2654,idx2661);
          int ilit2663#1 = 5;
          int idx2664#1 = Subscript<int>(femIndicies2453,ilit2663);
          int mulRes2665#1 = IMul(ilit2654,idx2664);
          int ilit2666#1 = 6;
          int idx2667#1 = Subscript<int>(femIndicies2453,ilit2666);
          int mulRes2668#1 = IMul(ilit2654,idx2667);
          int ilit2669#1 = 7;
          int idx266A#1 = Subscript<int>(femIndicies2453,ilit2669);
          int mulRes266B#1 = IMul(ilit2654,idx266A);
          int ilit266C#1 = 8;
          int idx266D#1 = Subscript<int>(femIndicies2453,ilit266C);
          int mulRes266E#1 = IMul(ilit2654,idx266D);
          int ilit266F#1 = 9;
          int idx2670#1 = Subscript<int>(femIndicies2453,ilit266F);
          int mulRes2671#1 = IMul(ilit2654,idx2670);
          int ilit2672#1 = 10;
          int idx2673#1 = Subscript<int>(femIndicies2453,ilit2672);
          int mulRes2674#1 = IMul(ilit2654,idx2673);
          int ilit2675#1 = 11;
          int idx2676#1 = Subscript<int>(femIndicies2453,ilit2675);
          int mulRes2677#1 = IMul(ilit2654,idx2676);
          int ilit2678#1 = 12;
          int idx2679#1 = Subscript<int>(femIndicies2453,ilit2678);
          int mulRes267A#1 = IMul(ilit2654,idx2679);
          int ilit267B#1 = 13;
          int idx267C#1 = Subscript<int>(femIndicies2453,ilit267B);
          int mulRes267D#1 = IMul(ilit2654,idx267C);
          int ilit267E#1 = 14;
          int idx267F#1 = Subscript<int>(femIndicies2453,ilit267E);
          int mulRes2680#1 = IMul(ilit2654,idx267F);
          int ilit2681#1 = 15;
          int idx2682#1 = Subscript<int>(femIndicies2453,ilit2681);
          int mulRes2683#1 = IMul(ilit2654,idx2682);
          int ilit2684#1 = 16;
          int idx2685#1 = Subscript<int>(femIndicies2453,ilit2684);
          int mulRes2686#1 = IMul(ilit2654,idx2685);
          int ilit2687#1 = 17;
          int idx2688#1 = Subscript<int>(femIndicies2453,ilit2687);
          int mulRes2689#1 = IMul(ilit2654,idx2688);
          int ilit268A#1 = 18;
          int idx268B#1 = Subscript<int>(femIndicies2453,ilit268A);
          int mulRes268C#1 = IMul(ilit2654,idx268B);
          int ilit268D#1 = 19;
          int idx268E#1 = Subscript<int>(femIndicies2453,ilit268D);
          int mulRes268F#1 = IMul(ilit2654,idx268E);
          int ilit2690#1 = 20;
          int idx2691#1 = Subscript<int>(femIndicies2453,ilit2690);
          int mulRes2692#1 = IMul(ilit2654,idx2691);
          int ilit2693#1 = 21;
          int idx2694#1 = Subscript<int>(femIndicies2453,ilit2693);
          int mulRes2695#1 = IMul(ilit2654,idx2694);
          int ilit2696#1 = 22;
          int idx2697#1 = Subscript<int>(femIndicies2453,ilit2696);
          int mulRes2698#1 = IMul(ilit2654,idx2697);
          int ilit2699#1 = 23;
          int idx269A#1 = Subscript<int>(femIndicies2453,ilit2699);
          int mulRes269B#1 = IMul(ilit2654,idx269A);
          int ilit269C#1 = 24;
          int idx269D#1 = Subscript<int>(femIndicies2453,ilit269C);
          int mulRes269E#1 = IMul(ilit2654,idx269D);
          int ilit269F#1 = 25;
          int idx26A0#1 = Subscript<int>(femIndicies2453,ilit269F);
          int mulRes26A1#1 = IMul(ilit2654,idx26A0);
          int ilit26A2#1 = 26;
          int idx26A3#1 = Subscript<int>(femIndicies2453,ilit26A2);
          int mulRes26A4#1 = IMul(ilit2654,idx26A3);
          int ilit26A5#1 = 27;
          int idx26A6#1 = Subscript<int>(femIndicies2453,ilit26A5);
          int mulRes26A7#1 = IMul(ilit2654,idx26A6);
          int ilit26A8#1 = 28;
          int idx26A9#1 = Subscript<int>(femIndicies2453,ilit26A8);
          int mulRes26AA#1 = IMul(ilit2654,idx26A9);
          int ilit26AB#1 = 29;
          int idx26AC#1 = Subscript<int>(femIndicies2453,ilit26AB);
          int mulRes26AD#1 = IMul(ilit2654,idx26AC);
          int ilit26AE#1 = 30;
          int idx26AF#1 = Subscript<int>(femIndicies2453,ilit26AE);
          int mulRes26B0#1 = IMul(ilit2654,idx26AF);
          int ilit26B1#1 = 31;
          int idx26B2#1 = Subscript<int>(femIndicies2453,ilit26B1);
          int mulRes26B3#1 = IMul(ilit2654,idx26B2);
          int ilit26B4#1 = 32;
          int idx26B5#1 = Subscript<int>(femIndicies2453,ilit26B4);
          int mulRes26B6#1 = IMul(ilit2654,idx26B5);
          int ilit26B7#1 = 33;
          int idx26B8#1 = Subscript<int>(femIndicies2453,ilit26B7);
          int mulRes26B9#1 = IMul(ilit2654,idx26B8);
          int ilit26BA#1 = 34;
          int idx26BB#1 = Subscript<int>(femIndicies2453,ilit26BA);
          int mulRes26BC#1 = IMul(ilit2654,idx26BB);
          int ilit26BD#1 = 35;
          int idx26BE#1 = Subscript<int>(femIndicies2453,ilit26BD);
          int mulRes26BF#1 = IMul(ilit2654,idx26BE);
          int ilit26C0#1 = 36;
          int idx26C1#1 = Subscript<int>(femIndicies2453,ilit26C0);
          int mulRes26C2#1 = IMul(ilit2654,idx26C1);
          int ilit26C3#1 = 37;
          int idx26C4#1 = Subscript<int>(femIndicies2453,ilit26C3);
          int mulRes26C5#1 = IMul(ilit2654,idx26C4);
          int ilit26C6#1 = 38;
          int idx26C7#1 = Subscript<int>(femIndicies2453,ilit26C6);
          int mulRes26C8#1 = IMul(ilit2654,idx26C7);
          int ilit26C9#1 = 39;
          int idx26CA#1 = Subscript<int>(femIndicies2453,ilit26C9);
          int mulRes26CB#1 = IMul(ilit2654,idx26CA);
          int ilit26CC#1 = 40;
          int idx26CD#1 = Subscript<int>(femIndicies2453,ilit26CC);
          int mulRes26CE#1 = IMul(ilit2654,idx26CD);
          int ilit26CF#1 = 41;
          int idx26D0#1 = Subscript<int>(femIndicies2453,ilit26CF);
          int mulRes26D1#1 = IMul(ilit2654,idx26D0);
          int ilit26D2#1 = 42;
          int idx26D3#1 = Subscript<int>(femIndicies2453,ilit26D2);
          int mulRes26D4#1 = IMul(ilit2654,idx26D3);
          int ilit26D5#1 = 43;
          int idx26D6#1 = Subscript<int>(femIndicies2453,ilit26D5);
          int mulRes26D7#1 = IMul(ilit2654,idx26D6);
          int ilit26D8#1 = 44;
          int idx26D9#1 = Subscript<int>(femIndicies2453,ilit26D8);
          int mulRes26DA#1 = IMul(ilit2654,idx26D9);
          int ilit26DB#1 = 45;
          int idx26DC#1 = Subscript<int>(femIndicies2453,ilit26DB);
          int mulRes26DD#1 = IMul(ilit2654,idx26DC);
          int ilit26DE#1 = 46;
          int idx26DF#1 = Subscript<int>(femIndicies2453,ilit26DE);
          int mulRes26E0#1 = IMul(ilit2654,idx26DF);
          int ilit26E1#1 = 47;
          int idx26E2#1 = Subscript<int>(femIndicies2453,ilit26E1);
          int mulRes26E3#1 = IMul(ilit2654,idx26E2);
          int ilit26E4#1 = 48;
          int idx26E5#1 = Subscript<int>(femIndicies2453,ilit26E4);
          int mulRes26E6#1 = IMul(ilit2654,idx26E5);
          int ilit26E7#1 = 49;
          int idx26E8#1 = Subscript<int>(femIndicies2453,ilit26E7);
          int mulRes26E9#1 = IMul(ilit2654,idx26E8);
          int ilit26EA#1 = 50;
          int idx26EB#1 = Subscript<int>(femIndicies2453,ilit26EA);
          int mulRes26EC#1 = IMul(ilit2654,idx26EB);
          int ilit26ED#1 = 51;
          int idx26EE#1 = Subscript<int>(femIndicies2453,ilit26ED);
          int mulRes26EF#1 = IMul(ilit2654,idx26EE);
          int ilit26F0#1 = 52;
          int idx26F1#1 = Subscript<int>(femIndicies2453,ilit26F0);
          int mulRes26F2#1 = IMul(ilit2654,idx26F1);
          int ilit26F3#1 = 53;
          int idx26F4#1 = Subscript<int>(femIndicies2453,ilit26F3);
          int mulRes26F5#1 = IMul(ilit2654,idx26F4);
          int ilit26F6#1 = 54;
          int idx26F7#1 = Subscript<int>(femIndicies2453,ilit26F6);
          int mulRes26F8#1 = IMul(ilit2654,idx26F7);
          int ilit26F9#1 = 55;
          int idx26FA#1 = Subscript<int>(femIndicies2453,ilit26F9);
          int mulRes26FB#1 = IMul(ilit2654,idx26FA);
          int ilit26FC#1 = 56;
          int idx26FD#1 = Subscript<int>(femIndicies2453,ilit26FC);
          int mulRes26FE#1 = IMul(ilit2654,idx26FD);
          int ilit26FF#1 = 57;
          int idx2700#1 = Subscript<int>(femIndicies2453,ilit26FF);
          int mulRes2701#1 = IMul(ilit2654,idx2700);
          int ilit2702#1 = 58;
          int idx2703#1 = Subscript<int>(femIndicies2453,ilit2702);
          int mulRes2704#1 = IMul(ilit2654,idx2703);
          int ilit2705#1 = 59;
          int idx2706#1 = Subscript<int>(femIndicies2453,ilit2705);
          int mulRes2707#1 = IMul(ilit2654,idx2706);
          int ilit2708#1 = 60;
          int idx2709#1 = Subscript<int>(femIndicies2453,ilit2708);
          int mulRes270A#1 = IMul(ilit2654,idx2709);
          int ilit270B#1 = 61;
          int idx270C#1 = Subscript<int>(femIndicies2453,ilit270B);
          int mulRes270D#1 = IMul(ilit2654,idx270C);
          int ilit270E#1 = 62;
          int idx270F#1 = Subscript<int>(femIndicies2453,ilit270E);
          int mulRes2710#1 = IMul(ilit2654,idx270F);
          int ilit2711#1 = 63;
          int idx2712#1 = Subscript<int>(femIndicies2453,ilit2711);
          int mulRes2713#1 = IMul(ilit2654,idx2712);
          int ilit2714#1 = 64;
          int idx2715#1 = Subscript<int>(femIndicies2453,ilit2714);
          int mulRes2716#1 = IMul(ilit2654,idx2715);
          int ilit2717#1 = 65;
          int idx2718#1 = Subscript<int>(femIndicies2453,ilit2717);
          int mulRes2719#1 = IMul(ilit2654,idx2718);
          int ilit271A#1 = 66;
          int idx271B#1 = Subscript<int>(femIndicies2453,ilit271A);
          int mulRes271C#1 = IMul(ilit2654,idx271B);
          int ilit271D#1 = 67;
          int idx271E#1 = Subscript<int>(femIndicies2453,ilit271D);
          int mulRes271F#1 = IMul(ilit2654,idx271E);
          int ilit2720#1 = 68;
          int idx2721#1 = Subscript<int>(femIndicies2453,ilit2720);
          int mulRes2722#1 = IMul(ilit2654,idx2721);
          int ilit2723#1 = 69;
          int idx2724#1 = Subscript<int>(femIndicies2453,ilit2723);
          int mulRes2725#1 = IMul(ilit2654,idx2724);
          int ilit2726#1 = 70;
          int idx2727#1 = Subscript<int>(femIndicies2453,ilit2726);
          int mulRes2728#1 = IMul(ilit2654,idx2727);
          int ilit2729#1 = 71;
          int idx272A#1 = Subscript<int>(femIndicies2453,ilit2729);
          int mulRes272B#1 = IMul(ilit2654,idx272A);
          int ilit272C#1 = 72;
          int idx272D#1 = Subscript<int>(femIndicies2453,ilit272C);
          int mulRes272E#1 = IMul(ilit2654,idx272D);
          int ilit272F#1 = 73;
          int idx2730#1 = Subscript<int>(femIndicies2453,ilit272F);
          int mulRes2731#1 = IMul(ilit2654,idx2730);
          int ilit2732#1 = 74;
          int idx2733#1 = Subscript<int>(femIndicies2453,ilit2732);
          int mulRes2734#1 = IMul(ilit2654,idx2733);
          int ilit2735#1 = 75;
          int idx2736#1 = Subscript<int>(femIndicies2453,ilit2735);
          int mulRes2737#1 = IMul(ilit2654,idx2736);
          int ilit2738#1 = 76;
          int idx2739#1 = Subscript<int>(femIndicies2453,ilit2738);
          int mulRes273A#1 = IMul(ilit2654,idx2739);
          int ilit273B#1 = 77;
          int idx273C#1 = Subscript<int>(femIndicies2453,ilit273B);
          int mulRes273D#1 = IMul(ilit2654,idx273C);
          int ilit273E#1 = 78;
          int idx273F#1 = Subscript<int>(femIndicies2453,ilit273E);
          int mulRes2740#1 = IMul(ilit2654,idx273F);
          int ilit2741#1 = 79;
          int idx2742#1 = Subscript<int>(femIndicies2453,ilit2741);
          int mulRes2743#1 = IMul(ilit2654,idx2742);
          int ilit2744#1 = 80;
          int idx2745#1 = Subscript<int>(femIndicies2453,ilit2744);
          int mulRes2746#1 = IMul(ilit2654,idx2745);
          int ilit2747#1 = 81;
          int idx2748#1 = Subscript<int>(femIndicies2453,ilit2747);
          int mulRes2749#1 = IMul(ilit2654,idx2748);
          int ilit274A#1 = 82;
          int idx274B#1 = Subscript<int>(femIndicies2453,ilit274A);
          int mulRes274C#1 = IMul(ilit2654,idx274B);
          int ilit274D#1 = 83;
          int idx274E#1 = Subscript<int>(femIndicies2453,ilit274D);
          int mulRes274F#1 = IMul(ilit2654,idx274E);
          real dof2750#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2657);
          real dof2751#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2659);
          real dof2752#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265C);
          real dof2753#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265F);
          real dof2754#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2662);
          real dof2755#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2665);
          real dof2756#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2668);
          real dof2757#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266B);
          real dof2758#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266E);
          real dof2759#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2671);
          real dof275A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2674);
          real dof275B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2677);
          real dof275C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267A);
          real dof275D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267D);
          real dof275E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2680);
          real dof275F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2683);
          real dof2760#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2686);
          real dof2761#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2689);
          real dof2762#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268C);
          real dof2763#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268F);
          real dof2764#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2692);
          real dof2765#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2695);
          real dof2766#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2698);
          real dof2767#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269B);
          real dof2768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269E);
          real dof2769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A1);
          real dof276A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A4);
          real dof276B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A7);
          real dof276C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AA);
          real dof276D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AD);
          real dof276E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B0);
          real dof276F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B3);
          real dof2770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B6);
          real dof2771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B9);
          real dof2772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BC);
          real dof2773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BF);
          real dof2774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C2);
          real dof2775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C5);
          real dof2776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C8);
          real dof2777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CB);
          real dof2778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CE);
          real dof2779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D1);
          real dof277A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D4);
          real dof277B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D7);
          real dof277C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DA);
          real dof277D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DD);
          real dof277E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E0);
          real dof277F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E3);
          real dof2780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E6);
          real dof2781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E9);
          real dof2782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EC);
          real dof2783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EF);
          real dof2784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F2);
          real dof2785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F5);
          real dof2786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F8);
          real dof2787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FB);
          real dof2788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FE);
          real dof2789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2701);
          real dof278A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2704);
          real dof278B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2707);
          real dof278C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270A);
          real dof278D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270D);
          real dof278E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2710);
          real dof278F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2713);
          real dof2790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2716);
          real dof2791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2719);
          real dof2792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271C);
          real dof2793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271F);
          real dof2794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2722);
          real dof2795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2725);
          real dof2796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2728);
          real dof2797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272B);
          real dof2798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272E);
          real dof2799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2731);
          real dof279A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2734);
          real dof279B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2737);
          real dof279C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273A);
          real dof279D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273D);
          real dof279E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2740);
          real dof279F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2743);
          real dof27A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2746);
          real dof27A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2749);
          real dof27A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274C);
          real dof27A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274F);
          tensor[84] dofs27A4#1 = <tensor[84]>[dof2750,dof2751,dof2752,dof2753,dof2754,dof2755,dof2756,dof2757,dof2758,dof2759,dof275A,dof275B,dof275C,dof275D,dof275E,dof275F,dof2760,dof2761,dof2762,dof2763,dof2764,dof2765,dof2766,dof2767,dof2768,dof2769,dof276A,dof276B,dof276C,dof276D,dof276E,dof276F,dof2770,dof2771,dof2772,dof2773,dof2774,dof2775,dof2776,dof2777,dof2778,dof2779,dof277A,dof277B,dof277C,dof277D,dof277E,dof277F,dof2780,dof2781,dof2782,dof2783,dof2784,dof2785,dof2786,dof2787,dof2788,dof2789,dof278A,dof278B,dof278C,dof278D,dof278E,dof278F,dof2790,dof2791,dof2792,dof2793,dof2794,dof2795,dof2796,dof2797,dof2798,dof2799,dof279A,dof279B,dof279C,dof279D,dof279E,dof279F,dof27A0,dof27A1,dof27A2,dof27A3];
          tensor[84] femDofs2653#39 = dofs27A4;
          real varAcc28F8#4 = VIndex<3,0>(pos2449);
          real varAcc28F9#4 = VIndex<3,1>(pos2449);
          real varAcc28FA#4 = VIndex<3,2>(pos2449);
          real basisEval28FB#294 = 0.e0;
          real coeff28FC#31 = 0.2e1;
          real one28FD#38 = 0.1e1;
          real prod28FE#5 = RMul(one28FD,one28FD);
          real prod28FF#2 = RMul(one28FD,prod28FE);
          real basisEval2900#3 = RMul(coeff28FC,prod28FF);
          real iden2901#5 = varAcc28FA;
          real prod2902#4 = RMul(one28FD,iden2901);
          real prod2903#3 = RMul(one28FD,prod2902);
          real basisEval2904#4 = RMul(coeff28FC,prod2903);
          real iden2905#5 = varAcc28F9;
          real prod2906#4 = RMul(iden2905,one28FD);
          real prod2907#3 = RMul(one28FD,prod2906);
          real basisEval2908#4 = RMul(coeff28FC,prod2907);
          real coeff2909#22 = 0.6e1;
          real iden290A#11 = varAcc28F8;
          real prod290B#3 = RMul(iden290A,prod28FE);
          real basisEval290C#1 = RMul(coeff2909,prod290B);
          real prod2290D#4 = RMul(iden2901,varAcc28FA);
          real prod290E#3 = RMul(one28FD,prod2290D);
          real prod290F#4 = RMul(one28FD,prod290E);
          real basisEval2910#2 = RMul(coeff28FC,prod290F);
          real prod2911#3 = RMul(iden2905,iden2901);
          real prod2912#3 = RMul(one28FD,prod2911);
          real basisEval2913#3 = RMul(coeff28FC,prod2912);
          real prod22914#4 = RMul(iden2905,varAcc28F9);
          real prod2915#3 = RMul(prod22914,one28FD);
          real prod2916#4 = RMul(one28FD,prod2915);
          real basisEval2917#2 = RMul(coeff28FC,prod2916);
          real prod2918#3 = RMul(iden290A,prod2902);
          real basisEval2919#2 = RMul(coeff2909,prod2918);
          real prod291A#3 = RMul(iden290A,prod2906);
          real basisEval291B#2 = RMul(coeff2909,prod291A);
          real coeff291C#15 = 0.12e2;
          real prod2291D#7 = RMul(iden290A,varAcc28F8);
          real prod291E#4 = RMul(prod2291D,prod28FE);
          real basisEval291F#1 = RMul(coeff291C,prod291E);
          real prod32920#3 = RMul(prod2290D,varAcc28FA);
          real prod2921#2 = RMul(one28FD,prod32920);
          real prod2922#4 = RMul(one28FD,prod2921);
          real basisEval2923#2 = RMul(coeff28FC,prod2922);
          real prod2924#2 = RMul(iden2905,prod2290D);
          real prod2925#4 = RMul(one28FD,prod2924);
          real basisEval2926#2 = RMul(coeff28FC,prod2925);
          real prod2927#2 = RMul(prod22914,iden2901);
          real prod2928#4 = RMul(one28FD,prod2927);
          real basisEval2929#2 = RMul(coeff28FC,prod2928);
          real prod3292A#3 = RMul(prod22914,varAcc28F9);
          real prod292B#2 = RMul(prod3292A,one28FD);
          real prod292C#4 = RMul(one28FD,prod292B);
          real basisEval292D#2 = RMul(coeff28FC,prod292C);
          real prod292E#4 = RMul(iden290A,prod290E);
          real basisEval292F#2 = RMul(coeff2909,prod292E);
          real prod2930#2 = RMul(iden290A,prod2911);
          real basisEval2931#3 = RMul(coeff2909,prod2930);
          real prod2932#4 = RMul(iden290A,prod2915);
          real basisEval2933#2 = RMul(coeff2909,prod2932);
          real prod2934#4 = RMul(prod2291D,prod2902);
          real basisEval2935#1 = RMul(coeff291C,prod2934);
          real prod2936#4 = RMul(prod2291D,prod2906);
          real basisEval2937#1 = RMul(coeff291C,prod2936);
          real coeff2938#9 = 0.20e2;
          real prod32939#4 = RMul(prod2291D,varAcc28F8);
          real prod293A#4 = RMul(prod32939,prod28FE);
          real basisEval293B#1 = RMul(coeff2938,prod293A);
          real prod4293C#1 = RMul(prod32920,varAcc28FA);
          real prod293D#1 = RMul(one28FD,prod4293C);
          real prod293E#4 = RMul(one28FD,prod293D);
          real basisEval293F#2 = RMul(coeff28FC,prod293E);
          real prod2940#1 = RMul(iden2905,prod32920);
          real prod2941#5 = RMul(one28FD,prod2940);
          real basisEval2942#2 = RMul(coeff28FC,prod2941);
          real prod2943#1 = RMul(prod22914,prod2290D);
          real prod2944#4 = RMul(one28FD,prod2943);
          real basisEval2945#1 = RMul(coeff28FC,prod2944);
          real prod2946#1 = RMul(prod3292A,iden2901);
          real prod2947#5 = RMul(one28FD,prod2946);
          real basisEval2948#2 = RMul(coeff28FC,prod2947);
          real prod42949#1 = RMul(prod3292A,varAcc28F9);
          real prod294A#1 = RMul(prod42949,one28FD);
          real prod294B#4 = RMul(one28FD,prod294A);
          real basisEval294C#2 = RMul(coeff28FC,prod294B);
          real prod294D#5 = RMul(iden290A,prod2921);
          real basisEval294E#1 = RMul(coeff2909,prod294D);
          real prod294F#3 = RMul(iden290A,prod2924);
          real basisEval2950#4 = RMul(coeff2909,prod294F);
          real prod2951#3 = RMul(iden290A,prod2927);
          real basisEval2952#4 = RMul(coeff2909,prod2951);
          real prod2953#5 = RMul(iden290A,prod292B);
          real basisEval2954#1 = RMul(coeff2909,prod2953);
          real prod2955#4 = RMul(prod2291D,prod290E);
          real basisEval2956#2 = RMul(coeff291C,prod2955);
          real prod2957#3 = RMul(prod2291D,prod2911);
          real basisEval2958#1 = RMul(coeff291C,prod2957);
          real prod2959#4 = RMul(prod2291D,prod2915);
          real basisEval295A#2 = RMul(coeff291C,prod2959);
          real prod295B#5 = RMul(prod32939,prod2902);
          real basisEval295C#1 = RMul(coeff2938,prod295B);
          real prod295D#5 = RMul(prod32939,prod2906);
          real basisEval295E#1 = RMul(coeff2938,prod295D);
          real coeff295F#3 = 0.30e2;
          real prod42960#1 = RMul(prod32939,varAcc28F8);
          real prod2961#4 = RMul(prod42960,prod28FE);
          real basisEval2962#1 = RMul(coeff295F,prod2961);
          real basisEval2963#3 = RMul(one28FD,prod28FF);
          real basisEval2964#1 = RMul(one28FD,prod2903);
          real basisEval2965#4 = RMul(coeff28FC,prod290B);
          real basisEval2966#1 = RMul(one28FD,prod290F);
          real coeff2967#12 = 0.3e1;
          real basisEval2968#2 = RMul(coeff2967,prod2916);
          real basisEval2969#3 = RMul(coeff28FC,prod2918);
          real coeff296A#16 = 0.4e1;
          real basisEval296B#1 = RMul(coeff296A,prod291A);
          real basisEval296C#2 = RMul(coeff2967,prod291E);
          real basisEval296D#1 = RMul(one28FD,prod2922);
          real basisEval296E#1 = RMul(coeff2967,prod2928);
          real basisEval296F#2 = RMul(coeff296A,prod292C);
          real basisEval2970#2 = RMul(coeff28FC,prod292E);
          real basisEval2971#3 = RMul(coeff296A,prod2930);
          real basisEval2972#1 = RMul(coeff2967,prod2934);
          real basisEval2973#2 = RMul(coeff2909,prod2936);
          real basisEval2974#2 = RMul(coeff296A,prod293A);
          real basisEval2975#1 = RMul(one28FD,prod293E);
          real basisEval2976#2 = RMul(coeff2967,prod2944);
          real basisEval2977#1 = RMul(coeff296A,prod2947);
          real coeff2978#3 = 0.5e1;
          real basisEval2979#2 = RMul(coeff2978,prod294B);
          real basisEval297A#2 = RMul(coeff28FC,prod294D);
          real basisEval297B#1 = RMul(coeff296A,prod294F);
          real coeff297C#6 = 0.8e1;
          real basisEval297D#1 = RMul(coeff297C,prod2953);
          real basisEval297E#2 = RMul(coeff2967,prod2955);
          real basisEval297F#4 = RMul(coeff2909,prod2957);
          real coeff2980#3 = 0.9e1;
          real basisEval2981#1 = RMul(coeff2980,prod2959);
          real basisEval2982#1 = RMul(coeff296A,prod295B);
          real basisEval2983#1 = RMul(coeff297C,prod295D);
          real basisEval2984#2 = RMul(coeff2978,prod2961);
          real basisEval2985#1 = RMul(one28FD,prod2907);
          real basisEval2986#2 = RMul(coeff2967,prod290F);
          real basisEval2987#1 = RMul(one28FD,prod2916);
          real basisEval2988#1 = RMul(coeff296A,prod2918);
          real basisEval2989#3 = RMul(coeff28FC,prod291A);
          real basisEval298A#2 = RMul(coeff296A,prod2922);
          real basisEval298B#1 = RMul(coeff2967,prod2925);
          real basisEval298C#1 = RMul(one28FD,prod292C);
          real basisEval298D#2 = RMul(coeff28FC,prod2932);
          real basisEval298E#2 = RMul(coeff2909,prod2934);
          real basisEval298F#1 = RMul(coeff2967,prod2936);
          real basisEval2990#2 = RMul(coeff2978,prod293E);
          real basisEval2991#1 = RMul(coeff296A,prod2941);
          real basisEval2992#1 = RMul(one28FD,prod294B);
          real basisEval2993#1 = RMul(coeff297C,prod294D);
          real basisEval2994#1 = RMul(coeff296A,prod2951);
          real basisEval2995#2 = RMul(coeff28FC,prod2953);
          real basisEval2996#1 = RMul(coeff2980,prod2955);
          real basisEval2997#2 = RMul(coeff2967,prod2959);
          real basisEval2998#1 = RMul(coeff297C,prod295B);
          real basisEval2999#1 = RMul(coeff296A,prod295D);
          real basisEval299A#1 = RMul(coeff2909,prod2907);
          real basisEval299B#2 = RMul(coeff2909,prod2912);
          real basisEval299C#1 = RMul(coeff291C,prod2916);
          real basisEval299D#2 = RMul(coeff28FC,prod291E);
          real basisEval299E#2 = RMul(coeff2909,prod2925);
          real basisEval299F#1 = RMul(coeff291C,prod2928);
          real basisEval29A0#1 = RMul(coeff2938,prod292C);
          real basisEval29A1#1 = RMul(coeff291C,prod2932);
          real basisEval29A2#2 = RMul(coeff28FC,prod2934);
          real basisEval29A3#2 = RMul(coeff28FC,prod293A);
          real basisEval29A4#1 = RMul(coeff2909,prod2941);
          real basisEval29A5#2 = RMul(coeff291C,prod2944);
          real basisEval29A6#1 = RMul(coeff2938,prod2947);
          real basisEval29A7#1 = RMul(coeff295F,prod294B);
          real basisEval29A8#1 = RMul(coeff291C,prod2951);
          real basisEval29A9#1 = RMul(coeff2938,prod2953);
          real basisEval29AA#1 = RMul(coeff28FC,prod2955);
          real basisEval29AB#2 = RMul(coeff28FC,prod295B);
          real basisEval29AC#1 = RMul(coeff2909,prod295D);
          real basisEval29AD#2 = RMul(coeff28FC,prod2961);
          real basisEval29AE#1 = RMul(one28FD,prod290B);
          real basisEval29AF#1 = RMul(coeff296A,prod2912);
          real basisEval29B0#1 = RMul(one28FD,prod291E);
          real basisEval29B1#2 = RMul(coeff2909,prod2928);
          real basisEval29B2#1 = RMul(coeff2967,prod292E);
          real basisEval29B3#1 = RMul(coeff2967,prod2932);
          real basisEval29B4#2 = RMul(coeff28FC,prod2936);
          real basisEval29B5#1 = RMul(one28FD,prod293A);
          real basisEval29B6#1 = RMul(coeff297C,prod2941);
          real basisEval29B7#1 = RMul(coeff2980,prod2944);
          real basisEval29B8#1 = RMul(coeff297C,prod2947);
          real basisEval29B9#1 = RMul(coeff296A,prod294D);
          real basisEval29BA#1 = RMul(coeff296A,prod2953);
          real basisEval29BB#1 = RMul(coeff296A,prod2957);
          real basisEval29BC#2 = RMul(coeff28FC,prod295D);
          real basisEval29BD#1 = RMul(one28FD,prod2961);
          real basisEval29BE#1 = RMul(coeff2909,prod2903);
          real basisEval29BF#1 = RMul(coeff291C,prod290F);
          real basisEval29C0#1 = RMul(coeff2938,prod2922);
          real basisEval29C1#1 = RMul(coeff291C,prod2925);
          real basisEval29C2#1 = RMul(coeff291C,prod292E);
          real basisEval29C3#1 = RMul(coeff295F,prod293E);
          real basisEval29C4#1 = RMul(coeff2938,prod2941);
          real basisEval29C5#1 = RMul(coeff2909,prod2947);
          real basisEval29C6#1 = RMul(coeff2938,prod294D);
          real basisEval29C7#1 = RMul(coeff291C,prod294F);
          real basisEval29C8#1 = RMul(coeff28FC,prod2959);
          real basisEval29C9#1 = RMul(coeff2909,prod295B);
          tensor[84] intermediateCons29CA#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval2913,basisEval2917,basisEval2919,basisEval291B,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval2926,basisEval2929,basisEval292D,basisEval292F,basisEval2931,basisEval2933,basisEval2935,basisEval2937,basisEval293B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval2942,basisEval2945,basisEval2948,basisEval294C,basisEval294E,basisEval2950,basisEval2952,basisEval2954,basisEval2956,basisEval2958,basisEval295A,basisEval295C,basisEval295E,basisEval2962];
          tensor[84] intermediateCons29CB#2 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2964,basisEval2908,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2966,basisEval2913,basisEval2968,basisEval28FB,basisEval2969,basisEval296B,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval296D,basisEval2926,basisEval296E,basisEval296F,basisEval28FB,basisEval2970,basisEval2971,basisEval2933,basisEval28FB,basisEval2972,basisEval2973,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2975,basisEval2942,basisEval2976,basisEval2977,basisEval2979,basisEval28FB,basisEval297A,basisEval297B,basisEval2952,basisEval297D,basisEval28FB,basisEval297E,basisEval297F,basisEval2981,basisEval28FB,basisEval2982,basisEval2983,basisEval28FB,basisEval2984,basisEval28FB];
          tensor[84] intermediateCons29CC#2 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2985,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval2913,basisEval2987,basisEval28FB,basisEval2988,basisEval2989,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval298B,basisEval2929,basisEval298C,basisEval28FB,basisEval292F,basisEval2971,basisEval298D,basisEval28FB,basisEval298E,basisEval298F,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval2991,basisEval2976,basisEval2948,basisEval2992,basisEval28FB,basisEval2993,basisEval2950,basisEval2994,basisEval2995,basisEval28FB,basisEval2996,basisEval297F,basisEval2997,basisEval28FB,basisEval2998,basisEval2999,basisEval28FB,basisEval2984,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CD#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval299A,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval299B,basisEval299C,basisEval28FB,basisEval28FB,basisEval2969,basisEval291B,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval299E,basisEval299F,basisEval29A0,basisEval28FB,basisEval28FB,basisEval2970,basisEval2931,basisEval29A1,basisEval28FB,basisEval28FB,basisEval29A2,basisEval2973,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval29A4,basisEval29A5,basisEval29A6,basisEval29A7,basisEval28FB,basisEval28FB,basisEval297A,basisEval2950,basisEval29A8,basisEval29A9,basisEval28FB,basisEval28FB,basisEval29AA,basisEval297F,basisEval295A,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29AC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CE#2 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval28FB,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval29AF,basisEval2968,basisEval28FB,basisEval28FB,basisEval2969,basisEval2989,basisEval28FB,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval299E,basisEval29B1,basisEval296F,basisEval28FB,basisEval28FB,basisEval29B2,basisEval2971,basisEval29B3,basisEval28FB,basisEval28FB,basisEval29A2,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval29B6,basisEval29B7,basisEval29B8,basisEval2979,basisEval28FB,basisEval28FB,basisEval29B9,basisEval2950,basisEval2952,basisEval29BA,basisEval28FB,basisEval28FB,basisEval297E,basisEval29BB,basisEval2997,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CF#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2908,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval299B,basisEval2917,basisEval28FB,basisEval28FB,basisEval2919,basisEval2989,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval29C1,basisEval29B1,basisEval292D,basisEval28FB,basisEval28FB,basisEval29C2,basisEval2931,basisEval298D,basisEval28FB,basisEval28FB,basisEval298E,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C3,basisEval29C4,basisEval29A5,basisEval29C5,basisEval294C,basisEval28FB,basisEval28FB,basisEval29C6,basisEval29C7,basisEval2952,basisEval2995,basisEval28FB,basisEval28FB,basisEval2956,basisEval297F,basisEval29C8,basisEval28FB,basisEval28FB,basisEval29C9,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[3,84] intermediateCons29D0#1 = <tensor[3,84]>[intermediateCons29CA,intermediateCons29CB,intermediateCons29CC];
          tensor[3,84] intermediateCons29D1#1 = <tensor[3,84]>[intermediateCons29CB,intermediateCons29CD,intermediateCons29CE];
          tensor[3,84] intermediateCons29D2#1 = <tensor[3,84]>[intermediateCons29CC,intermediateCons29CE,intermediateCons29CF];
          tensor[3,3,84] intermediateCons29D3#1 = <tensor[3,3,84]>[intermediateCons29D0,intermediateCons29D1,intermediateCons29D2];
          tensor[3,3,84] basisResult28F7#9 = intermediateCons29D3;
          tensor[84] projParam2AB2#1 = ProjectLast<tensor[3,3,84],[0,0]>(basisResult28F7);
          real vdot2AB3#1 = VDot<84>(femDofs2653,projParam2AB2);
          tensor[84] projParam2AB4#1 = ProjectLast<tensor[3,3,84],[0,1]>(basisResult28F7);
          real vdot2AB5#1 = VDot<84>(femDofs2653,projParam2AB4);
          tensor[84] projParam2AB6#1 = ProjectLast<tensor[3,3,84],[0,2]>(basisResult28F7);
          real vdot2AB7#1 = VDot<84>(femDofs2653,projParam2AB6);
          tensor[3] tensor2AB8#1 = <tensor[3]>[vdot2AB3,vdot2AB5,vdot2AB7];
          tensor[84] projParam2AB9#1 = ProjectLast<tensor[3,3,84],[1,0]>(basisResult28F7);
          real vdot2ABA#1 = VDot<84>(femDofs2653,projParam2AB9);
          tensor[84] projParam2ABB#1 = ProjectLast<tensor[3,3,84],[1,1]>(basisResult28F7);
          real vdot2ABC#1 = VDot<84>(femDofs2653,projParam2ABB);
          tensor[84] projParam2ABD#1 = ProjectLast<tensor[3,3,84],[1,2]>(basisResult28F7);
          real vdot2ABE#1 = VDot<84>(femDofs2653,projParam2ABD);
          tensor[3] tensor2ABF#1 = <tensor[3]>[vdot2ABA,vdot2ABC,vdot2ABE];
          tensor[84] projParam2AC0#1 = ProjectLast<tensor[3,3,84],[2,0]>(basisResult28F7);
          real vdot2AC1#1 = VDot<84>(femDofs2653,projParam2AC0);
          tensor[84] projParam2AC2#1 = ProjectLast<tensor[3,3,84],[2,1]>(basisResult28F7);
          real vdot2AC3#1 = VDot<84>(femDofs2653,projParam2AC2);
          tensor[84] projParam2AC4#1 = ProjectLast<tensor[3,3,84],[2,2]>(basisResult28F7);
          real vdot2AC5#1 = VDot<84>(femDofs2653,projParam2AC4);
          tensor[3] tensor2AC6#1 = <tensor[3]>[vdot2AC1,vdot2AC3,vdot2AC5];
          tensor[3,3] _t2AB1#22 = <tensor[3,3]>[tensor2AB8,tensor2ABF,tensor2AC6];
          real[3] _t2ADE#1 = EigenVals3x3(_t2AB1);
          int _t2AE0#1 = 1;
          real _t2AE2#1 = Subscript<real[3]>(_t2ADE,_t2AE0);
          real varAcc2AE5#5 = VIndex<3,0>(pos2449);
          real varAcc2AE6#5 = VIndex<3,1>(pos2449);
          real varAcc2AE7#5 = VIndex<3,2>(pos2449);
          real basisEval2AE8#84 = 0.e0;
          real coeff2AE9#79 = 0.1e1;
          real prod2AEA#6 = RMul(coeff2AE9,coeff2AE9);
          real prod2AEB#1 = RMul(coeff2AE9,prod2AEA);
          real basisEval2AEC#3 = RMul(coeff2AE9,prod2AEB);
          real iden2AED#6 = varAcc2AE7;
          real prod2AEE#5 = RMul(coeff2AE9,iden2AED);
          real prod2AEF#2 = RMul(coeff2AE9,prod2AEE);
          real basisEval2AF0#2 = RMul(coeff2AE9,prod2AEF);
          real iden2AF1#6 = varAcc2AE6;
          real prod2AF2#5 = RMul(iden2AF1,coeff2AE9);
          real prod2AF3#2 = RMul(coeff2AE9,prod2AF2);
          real basisEval2AF4#2 = RMul(coeff2AE9,prod2AF3);
          real coeff2AF5#34 = 0.2e1;
          real iden2AF6#16 = varAcc2AE5;
          real prod2AF7#2 = RMul(iden2AF6,prod2AEA);
          real basisEval2AF8#1 = RMul(coeff2AF5,prod2AF7);
          real prod22AF9#5 = RMul(iden2AED,varAcc2AE7);
          real prod2AFA#4 = RMul(coeff2AE9,prod22AF9);
          real prod2AFB#2 = RMul(coeff2AE9,prod2AFA);
          real basisEval2AFC#2 = RMul(coeff2AE9,prod2AFB);
          real prod2AFD#4 = RMul(iden2AF1,iden2AED);
          real prod2AFE#2 = RMul(coeff2AE9,prod2AFD);
          real basisEval2AFF#1 = RMul(coeff2AE9,prod2AFE);
          real prod22B00#5 = RMul(iden2AF1,varAcc2AE6);
          real prod2B01#4 = RMul(prod22B00,coeff2AE9);
          real prod2B02#2 = RMul(coeff2AE9,prod2B01);
          real basisEval2B03#2 = RMul(coeff2AE9,prod2B02);
          real prod2B04#2 = RMul(iden2AF6,prod2AEE);
          real basisEval2B05#2 = RMul(coeff2AF5,prod2B04);
          real prod2B06#2 = RMul(iden2AF6,prod2AF2);
          real basisEval2B07#2 = RMul(coeff2AF5,prod2B06);
          real coeff2B08#24 = 0.3e1;
          real prod22B09#11 = RMul(iden2AF6,varAcc2AE5);
          real prod2B0A#2 = RMul(prod22B09,prod2AEA);
          real basisEval2B0B#1 = RMul(coeff2B08,prod2B0A);
          real prod32B0C#4 = RMul(prod22AF9,varAcc2AE7);
          real prod2B0D#3 = RMul(coeff2AE9,prod32B0C);
          real prod2B0E#2 = RMul(coeff2AE9,prod2B0D);
          real basisEval2B0F#2 = RMul(coeff2AE9,prod2B0E);
          real prod2B10#3 = RMul(iden2AF1,prod22AF9);
          real prod2B11#3 = RMul(coeff2AE9,prod2B10);
          real basisEval2B12#1 = RMul(coeff2AE9,prod2B11);
          real prod2B13#3 = RMul(prod22B00,iden2AED);
          real prod2B14#3 = RMul(coeff2AE9,prod2B13);
          real basisEval2B15#1 = RMul(coeff2AE9,prod2B14);
          real prod32B16#4 = RMul(prod22B00,varAcc2AE6);
          real prod2B17#3 = RMul(prod32B16,coeff2AE9);
          real prod2B18#2 = RMul(coeff2AE9,prod2B17);
          real basisEval2B19#2 = RMul(coeff2AE9,prod2B18);
          real prod2B1A#3 = RMul(iden2AF6,prod2AFA);
          real basisEval2B1B#1 = RMul(coeff2AF5,prod2B1A);
          real prod2B1C#1 = RMul(iden2AF6,prod2AFD);
          real basisEval2B1D#3 = RMul(coeff2AF5,prod2B1C);
          real prod2B1E#3 = RMul(iden2AF6,prod2B01);
          real basisEval2B1F#1 = RMul(coeff2AF5,prod2B1E);
          real prod2B20#3 = RMul(prod22B09,prod2AEE);
          real basisEval2B21#1 = RMul(coeff2B08,prod2B20);
          real prod2B22#3 = RMul(prod22B09,prod2AF2);
          real basisEval2B23#1 = RMul(coeff2B08,prod2B22);
          real coeff2B24#18 = 0.4e1;
          real prod32B25#7 = RMul(prod22B09,varAcc2AE5);
          real prod2B26#2 = RMul(prod32B25,prod2AEA);
          real basisEval2B27#1 = RMul(coeff2B24,prod2B26);
          real prod42B28#3 = RMul(prod32B0C,varAcc2AE7);
          real prod2B29#2 = RMul(coeff2AE9,prod42B28);
          real prod2B2A#2 = RMul(coeff2AE9,prod2B29);
          real basisEval2B2B#2 = RMul(coeff2AE9,prod2B2A);
          real prod2B2C#2 = RMul(iden2AF1,prod32B0C);
          real prod2B2D#3 = RMul(coeff2AE9,prod2B2C);
          real basisEval2B2E#1 = RMul(coeff2AE9,prod2B2D);
          real prod2B2F#2 = RMul(prod22B00,prod22AF9);
          real prod2B30#2 = RMul(coeff2AE9,prod2B2F);
          real basisEval2B31#1 = RMul(coeff2AE9,prod2B30);
          real prod2B32#2 = RMul(prod32B16,iden2AED);
          real prod2B33#3 = RMul(coeff2AE9,prod2B32);
          real basisEval2B34#1 = RMul(coeff2AE9,prod2B33);
          real prod42B35#3 = RMul(prod32B16,varAcc2AE6);
          real prod2B36#2 = RMul(prod42B35,coeff2AE9);
          real prod2B37#2 = RMul(coeff2AE9,prod2B36);
          real basisEval2B38#2 = RMul(coeff2AE9,prod2B37);
          real prod2B39#3 = RMul(iden2AF6,prod2B0D);
          real basisEval2B3A#1 = RMul(coeff2AF5,prod2B39);
          real prod2B3B#2 = RMul(iden2AF6,prod2B10);
          real basisEval2B3C#2 = RMul(coeff2AF5,prod2B3B);
          real prod2B3D#2 = RMul(iden2AF6,prod2B13);
          real basisEval2B3E#2 = RMul(coeff2AF5,prod2B3D);
          real prod2B3F#3 = RMul(iden2AF6,prod2B17);
          real basisEval2B40#1 = RMul(coeff2AF5,prod2B3F);
          real prod2B41#2 = RMul(prod22B09,prod2AFA);
          real basisEval2B42#2 = RMul(coeff2B08,prod2B41);
          real prod2B43#2 = RMul(prod22B09,prod2AFD);
          real basisEval2B44#1 = RMul(coeff2B08,prod2B43);
          real prod2B45#2 = RMul(prod22B09,prod2B01);
          real basisEval2B46#2 = RMul(coeff2B08,prod2B45);
          real prod2B47#3 = RMul(prod32B25,prod2AEE);
          real basisEval2B48#1 = RMul(coeff2B24,prod2B47);
          real prod2B49#3 = RMul(prod32B25,prod2AF2);
          real basisEval2B4A#1 = RMul(coeff2B24,prod2B49);
          real coeff2B4B#9 = 0.5e1;
          real prod42B4C#4 = RMul(prod32B25,varAcc2AE5);
          real prod2B4D#2 = RMul(prod42B4C,prod2AEA);
          real basisEval2B4E#1 = RMul(coeff2B4B,prod2B4D);
          real prod52B4F#1 = RMul(prod42B28,varAcc2AE7);
          real prod2B50#1 = RMul(coeff2AE9,prod52B4F);
          real prod2B51#2 = RMul(coeff2AE9,prod2B50);
          real basisEval2B52#2 = RMul(coeff2AE9,prod2B51);
          real prod2B53#1 = RMul(iden2AF1,prod42B28);
          real prod2B54#3 = RMul(coeff2AE9,prod2B53);
          real basisEval2B55#1 = RMul(coeff2AE9,prod2B54);
          real prod2B56#1 = RMul(prod22B00,prod32B0C);
          real prod2B57#3 = RMul(coeff2AE9,prod2B56);
          real basisEval2B58#1 = RMul(coeff2AE9,prod2B57);
          real prod2B59#1 = RMul(prod32B16,prod22AF9);
          real prod2B5A#3 = RMul(coeff2AE9,prod2B59);
          real basisEval2B5B#1 = RMul(coeff2AE9,prod2B5A);
          real prod2B5C#1 = RMul(prod42B35,iden2AED);
          real prod2B5D#3 = RMul(coeff2AE9,prod2B5C);
          real basisEval2B5E#1 = RMul(coeff2AE9,prod2B5D);
          real prod52B5F#1 = RMul(prod42B35,varAcc2AE6);
          real prod2B60#1 = RMul(prod52B5F,coeff2AE9);
          real prod2B61#2 = RMul(coeff2AE9,prod2B60);
          real basisEval2B62#2 = RMul(coeff2AE9,prod2B61);
          real prod2B63#3 = RMul(iden2AF6,prod2B29);
          real basisEval2B64#1 = RMul(coeff2AF5,prod2B63);
          real prod2B65#2 = RMul(iden2AF6,prod2B2C);
          real basisEval2B66#2 = RMul(coeff2AF5,prod2B65);
          real prod2B67#2 = RMul(iden2AF6,prod2B2F);
          real basisEval2B68#1 = RMul(coeff2AF5,prod2B67);
          real prod2B69#2 = RMul(iden2AF6,prod2B32);
          real basisEval2B6A#2 = RMul(coeff2AF5,prod2B69);
          real prod2B6B#3 = RMul(iden2AF6,prod2B36);
          real basisEval2B6C#1 = RMul(coeff2AF5,prod2B6B);
          real prod2B6D#3 = RMul(prod22B09,prod2B0D);
          real basisEval2B6E#1 = RMul(coeff2B08,prod2B6D);
          real prod2B6F#2 = RMul(prod22B09,prod2B10);
          real basisEval2B70#2 = RMul(coeff2B08,prod2B6F);
          real prod2B71#2 = RMul(prod22B09,prod2B13);
          real basisEval2B72#2 = RMul(coeff2B08,prod2B71);
          real prod2B73#3 = RMul(prod22B09,prod2B17);
          real basisEval2B74#1 = RMul(coeff2B08,prod2B73);
          real prod2B75#3 = RMul(prod32B25,prod2AFA);
          real basisEval2B76#1 = RMul(coeff2B24,prod2B75);
          real prod2B77#2 = RMul(prod32B25,prod2AFD);
          real basisEval2B78#1 = RMul(coeff2B24,prod2B77);
          real prod2B79#3 = RMul(prod32B25,prod2B01);
          real basisEval2B7A#1 = RMul(coeff2B24,prod2B79);
          real prod2B7B#3 = RMul(prod42B4C,prod2AEE);
          real basisEval2B7C#1 = RMul(coeff2B4B,prod2B7B);
          real prod2B7D#3 = RMul(prod42B4C,prod2AF2);
          real basisEval2B7E#1 = RMul(coeff2B4B,prod2B7D);
          real coeff2B7F#3 = 0.6e1;
          real prod52B80#1 = RMul(prod42B4C,varAcc2AE5);
          real prod2B81#2 = RMul(prod52B80,prod2AEA);
          real basisEval2B82#1 = RMul(coeff2B7F,prod2B81);
          real basisEval2B83#1 = RMul(coeff2AF5,prod2AF3);
          real basisEval2B84#2 = RMul(coeff2AE9,prod2AF7);
          real basisEval2B85#2 = RMul(coeff2AF5,prod2AFE);
          real basisEval2B86#1 = RMul(coeff2B08,prod2B02);
          real basisEval2B87#1 = RMul(coeff2AE9,prod2B04);
          real basisEval2B88#2 = RMul(coeff2AE9,prod2B0A);
          real basisEval2B89#1 = RMul(coeff2AF5,prod2B11);
          real basisEval2B8A#1 = RMul(coeff2B08,prod2B14);
          real basisEval2B8B#1 = RMul(coeff2B24,prod2B18);
          real basisEval2B8C#1 = RMul(coeff2AE9,prod2B1A);
          real basisEval2B8D#1 = RMul(coeff2B08,prod2B1E);
          real basisEval2B8E#1 = RMul(coeff2AE9,prod2B20);
          real basisEval2B8F#1 = RMul(coeff2AF5,prod2B22);
          real basisEval2B90#2 = RMul(coeff2AE9,prod2B26);
          real basisEval2B91#1 = RMul(coeff2AF5,prod2B2D);
          real basisEval2B92#2 = RMul(coeff2B08,prod2B30);
          real basisEval2B93#1 = RMul(coeff2B24,prod2B33);
          real basisEval2B94#1 = RMul(coeff2B4B,prod2B37);
          real basisEval2B95#1 = RMul(coeff2AE9,prod2B39);
          real basisEval2B96#1 = RMul(coeff2B08,prod2B3D);
          real basisEval2B97#1 = RMul(coeff2B24,prod2B3F);
          real basisEval2B98#1 = RMul(coeff2AE9,prod2B41);
          real basisEval2B99#2 = RMul(coeff2AF5,prod2B43);
          real basisEval2B9A#1 = RMul(coeff2AE9,prod2B47);
          real basisEval2B9B#1 = RMul(coeff2AF5,prod2B49);
          real basisEval2B9C#2 = RMul(coeff2AE9,prod2B4D);
          real basisEval2B9D#1 = RMul(coeff2AF5,prod2B54);
          real basisEval2B9E#1 = RMul(coeff2B08,prod2B57);
          real basisEval2B9F#1 = RMul(coeff2B24,prod2B5A);
          real basisEval2BA0#1 = RMul(coeff2B4B,prod2B5D);
          real basisEval2BA1#1 = RMul(coeff2B7F,prod2B61);
          real basisEval2BA2#1 = RMul(coeff2AE9,prod2B63);
          real basisEval2BA3#2 = RMul(coeff2B08,prod2B67);
          real basisEval2BA4#1 = RMul(coeff2B24,prod2B69);
          real basisEval2BA5#1 = RMul(coeff2B4B,prod2B6B);
          real basisEval2BA6#1 = RMul(coeff2AE9,prod2B6D);
          real basisEval2BA7#1 = RMul(coeff2AF5,prod2B6F);
          real basisEval2BA8#1 = RMul(coeff2B24,prod2B73);
          real basisEval2BA9#1 = RMul(coeff2AE9,prod2B75);
          real basisEval2BAA#2 = RMul(coeff2AF5,prod2B77);
          real basisEval2BAB#1 = RMul(coeff2B08,prod2B79);
          real basisEval2BAC#1 = RMul(coeff2AE9,prod2B7B);
          real basisEval2BAD#1 = RMul(coeff2AF5,prod2B7D);
          real basisEval2BAE#2 = RMul(coeff2AE9,prod2B81);
          real basisEval2BAF#1 = RMul(coeff2AF5,prod2AEF);
          real basisEval2BB0#1 = RMul(coeff2B08,prod2AFB);
          real basisEval2BB1#1 = RMul(coeff2AE9,prod2B06);
          real basisEval2BB2#1 = RMul(coeff2B24,prod2B0E);
          real basisEval2BB3#1 = RMul(coeff2B08,prod2B11);
          real basisEval2BB4#1 = RMul(coeff2AF5,prod2B14);
          real basisEval2BB5#1 = RMul(coeff2B08,prod2B1A);
          real basisEval2BB6#1 = RMul(coeff2AE9,prod2B1E);
          real basisEval2BB7#1 = RMul(coeff2AF5,prod2B20);
          real basisEval2BB8#1 = RMul(coeff2AE9,prod2B22);
          real basisEval2BB9#1 = RMul(coeff2B4B,prod2B2A);
          real basisEval2BBA#1 = RMul(coeff2B24,prod2B2D);
          real basisEval2BBB#1 = RMul(coeff2AF5,prod2B33);
          real basisEval2BBC#1 = RMul(coeff2B24,prod2B39);
          real basisEval2BBD#1 = RMul(coeff2B08,prod2B3B);
          real basisEval2BBE#1 = RMul(coeff2AE9,prod2B3F);
          real basisEval2BBF#1 = RMul(coeff2AE9,prod2B45);
          real basisEval2BC0#1 = RMul(coeff2AF5,prod2B47);
          real basisEval2BC1#1 = RMul(coeff2AE9,prod2B49);
          real basisEval2BC2#1 = RMul(coeff2B7F,prod2B51);
          real basisEval2BC3#1 = RMul(coeff2B4B,prod2B54);
          real basisEval2BC4#1 = RMul(coeff2B24,prod2B57);
          real basisEval2BC5#1 = RMul(coeff2B08,prod2B5A);
          real basisEval2BC6#1 = RMul(coeff2AF5,prod2B5D);
          real basisEval2BC7#1 = RMul(coeff2B4B,prod2B63);
          real basisEval2BC8#1 = RMul(coeff2B24,prod2B65);
          real basisEval2BC9#1 = RMul(coeff2AE9,prod2B6B);
          real basisEval2BCA#1 = RMul(coeff2B24,prod2B6D);
          real basisEval2BCB#1 = RMul(coeff2AF5,prod2B71);
          real basisEval2BCC#1 = RMul(coeff2AE9,prod2B73);
          real basisEval2BCD#1 = RMul(coeff2B08,prod2B75);
          real basisEval2BCE#1 = RMul(coeff2AE9,prod2B79);
          real basisEval2BCF#1 = RMul(coeff2AF5,prod2B7B);
          real basisEval2BD0#1 = RMul(coeff2AE9,prod2B7D);
          tensor[84] intermediateCons2BD1#1 = <tensor[84]>[basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AEC,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AF0,basisEval2AF4,basisEval2AF8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AFC,basisEval2AFF,basisEval2B03,basisEval2B05,basisEval2B07,basisEval2B0B,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2B0F,basisEval2B12,basisEval2B15,basisEval2B19,basisEval2B1B,basisEval2B1D,basisEval2B1F,basisEval2B21,basisEval2B23,basisEval2B27,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2B2B,basisEval2B2E,basisEval2B31,basisEval2B34,basisEval2B38,basisEval2B3A,basisEval2B3C,basisEval2B3E,basisEval2B40,basisEval2B42,basisEval2B44,basisEval2B46,basisEval2B48,basisEval2B4A,basisEval2B4E,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2B52,basisEval2B55,basisEval2B58,basisEval2B5B,basisEval2B5E,basisEval2B62,basisEval2B64,basisEval2B66,basisEval2B68,basisEval2B6A,basisEval2B6C,basisEval2B6E,basisEval2B70,basisEval2B72,basisEval2B74,basisEval2B76,basisEval2B78,basisEval2B7A,basisEval2B7C,basisEval2B7E,basisEval2B82];
          tensor[84] intermediateCons2BD2#1 = <tensor[84]>[basisEval2AE8,basisEval2AE8,basisEval2AEC,basisEval2AE8,basisEval2AE8,basisEval2AF0,basisEval2B83,basisEval2AE8,basisEval2B84,basisEval2AE8,basisEval2AE8,basisEval2AFC,basisEval2B85,basisEval2B86,basisEval2AE8,basisEval2B87,basisEval2B07,basisEval2AE8,basisEval2B88,basisEval2AE8,basisEval2AE8,basisEval2B0F,basisEval2B89,basisEval2B8A,basisEval2B8B,basisEval2AE8,basisEval2B8C,basisEval2B1D,basisEval2B8D,basisEval2AE8,basisEval2B8E,basisEval2B8F,basisEval2AE8,basisEval2B90,basisEval2AE8,basisEval2AE8,basisEval2B2B,basisEval2B91,basisEval2B92,basisEval2B93,basisEval2B94,basisEval2AE8,basisEval2B95,basisEval2B3C,basisEval2B96,basisEval2B97,basisEval2AE8,basisEval2B98,basisEval2B99,basisEval2B46,basisEval2AE8,basisEval2B9A,basisEval2B9B,basisEval2AE8,basisEval2B9C,basisEval2AE8,basisEval2AE8,basisEval2B52,basisEval2B9D,basisEval2B9E,basisEval2B9F,basisEval2BA0,basisEval2BA1,basisEval2AE8,basisEval2BA2,basisEval2B66,basisEval2BA3,basisEval2BA4,basisEval2BA5,basisEval2AE8,basisEval2BA6,basisEval2BA7,basisEval2B72,basisEval2BA8,basisEval2AE8,basisEval2BA9,basisEval2BAA,basisEval2BAB,basisEval2AE8,basisEval2BAC,basisEval2BAD,basisEval2AE8,basisEval2BAE,basisEval2AE8];
          tensor[84] intermediateCons2BD3#1 = <tensor[84]>[basisEval2AE8,basisEval2AEC,basisEval2AE8,basisEval2AE8,basisEval2BAF,basisEval2AF4,basisEval2AE8,basisEval2B84,basisEval2AE8,basisEval2AE8,basisEval2BB0,basisEval2B85,basisEval2B03,basisEval2AE8,basisEval2B05,basisEval2BB1,basisEval2AE8,basisEval2B88,basisEval2AE8,basisEval2AE8,basisEval2BB2,basisEval2BB3,basisEval2BB4,basisEval2B19,basisEval2AE8,basisEval2BB5,basisEval2B1D,basisEval2BB6,basisEval2AE8,basisEval2BB7,basisEval2BB8,basisEval2AE8,basisEval2B90,basisEval2AE8,basisEval2AE8,basisEval2BB9,basisEval2BBA,basisEval2B92,basisEval2BBB,basisEval2B38,basisEval2AE8,basisEval2BBC,basisEval2BBD,basisEval2B3E,basisEval2BBE,basisEval2AE8,basisEval2B42,basisEval2B99,basisEval2BBF,basisEval2AE8,basisEval2BC0,basisEval2BC1,basisEval2AE8,basisEval2B9C,basisEval2AE8,basisEval2AE8,basisEval2BC2,basisEval2BC3,basisEval2BC4,basisEval2BC5,basisEval2BC6,basisEval2B62,basisEval2AE8,basisEval2BC7,basisEval2BC8,basisEval2BA3,basisEval2B6A,basisEval2BC9,basisEval2AE8,basisEval2BCA,basisEval2B70,basisEval2BCB,basisEval2BCC,basisEval2AE8,basisEval2BCD,basisEval2BAA,basisEval2BCE,basisEval2AE8,basisEval2BCF,basisEval2BD0,basisEval2AE8,basisEval2BAE,basisEval2AE8,basisEval2AE8];
          tensor[3,84] intermediateCons2BD4#1 = <tensor[3,84]>[intermediateCons2BD1,intermediateCons2BD2,intermediateCons2BD3];
          tensor[3,84] basisResult2AE4#3 = intermediateCons2BD4;
          tensor[84] projParam2CC7#1 = ProjectLast<tensor[3,84],[0]>(basisResult2AE4);
          real vdot2CC8#1 = VDot<84>(femDofs2653,projParam2CC7);
          tensor[84] projParam2CC9#1 = ProjectLast<tensor[3,84],[1]>(basisResult2AE4);
          real vdot2CCA#1 = VDot<84>(femDofs2653,projParam2CC9);
          tensor[84] projParam2CCB#1 = ProjectLast<tensor[3,84],[2]>(basisResult2AE4);
          real vdot2CCC#1 = VDot<84>(femDofs2653,projParam2CCB);
          tensor[3] probe_l_62CC6#14 = <tensor[3]>[vdot2CC8,vdot2CCA,vdot2CCC];
          real op1_e3_l_82CD5#1 = VDot<3>(probe_l_62CC6,probe_l_62CC6);
          real op1_e3_l_92CD8#1 = Sqrt(op1_e3_l_82CD5);
          real op1_e3_l_102CDB#1 = RNeg(_t2AE2);
          real op1_e3_l_112CDE#1 = RAdd(fBias2417,op1_e3_l_92CD8);
          real _t2CE1#1 = RDiv(op1_e3_l_102CDB,op1_e3_l_112CDE);
          bool _t2CE4#1 = GT<real>(_t2CE1,fStrTh2413);
          if _t2CE4 then goto ASSIGN2CE8 else goto ASSIGN5398
        ASSIGN2CE8:  preds = [COND2CE6]
          real _t2CE7#1 = 0.1e1;
          bool _t2CE9#1 = GTE<real>(_t2CE7,fMaskTh2415);
          if _t2CE9 then goto ASSIGN2CF4 else goto ASSIGN5397
        ASSIGN2CF4:  preds = [COND2CEB]
          tensor[3] projParam2CED#1 = ProjectLast<tensor[3,3],[0]>(_t2AB1);
          real vdot2CEE#1 = VDot<3>(projParam2CED,probe_l_62CC6);
          tensor[3] projParam2CEF#1 = ProjectLast<tensor[3,3],[1]>(_t2AB1);
          real vdot2CF0#1 = VDot<3>(projParam2CEF,probe_l_62CC6);
          tensor[3] projParam2CF1#1 = ProjectLast<tensor[3,3],[2]>(_t2AB1);
          real vdot2CF2#1 = VDot<3>(projParam2CF1,probe_l_62CC6);
          tensor[3] op1_e3_l_222CEC#6 = <tensor[3]>[vdot2CEE,vdot2CF0,vdot2CF2];
          real realLit2CFC#5 = 0.e0;
          real realLit2CFD#5 = 0.1e1;
          real r2CFE#11 = RMul(realLit2CFC,realLit2CFD);
          real r2CFF#25 = RMul(realLit2CFC,realLit2CFC);
          real r2D00#3 = RAdd(r2CFE,r2CFF);
          real r2D01#1 = RAdd(r2D00,r2CFF);
          real r2D02#1 = RAdd(r2D01,r2CFF);
          real r2D03#3 = RAdd(r2CFF,r2CFE);
          real r2D04#1 = RAdd(r2D03,r2CFF);
          real r2D05#1 = RAdd(r2D04,r2CFF);
          real r2D06#3 = RAdd(r2CFF,r2CFF);
          real r2D07#1 = RAdd(r2D06,r2CFE);
          real r2D08#1 = RAdd(r2D07,r2CFF);
          tensor[3] tensor2D09#3 = <tensor[3]>[r2D02,r2D05,r2D08];
          real r2D0A#15 = RMul(realLit2CFD,realLit2CFC);
          real r2D0B#1 = RAdd(r2D00,r2D0A);
          real r2D0C#1 = RAdd(r2D0B,r2D0A);
          real r2D0D#1 = RAdd(r2D03,r2D0A);
          real r2D0E#1 = RAdd(r2D0D,r2D0A);
          real r2D0F#3 = RMul(realLit2CFD,realLit2CFD);
          real r2D10#1 = RAdd(r2D06,r2D0F);
          real r2D11#1 = RAdd(r2D10,r2D0A);
          tensor[3] tensor2D12#1 = <tensor[3]>[r2D0C,r2D0E,r2D11];
          real realLit2D13#2 = -0.1e1;
          real r2D14#15 = RMul(realLit2D13,realLit2CFC);
          real r2D15#1 = RAdd(r2CFE,r2D14);
          real r2D16#1 = RAdd(r2D15,r2CFF);
          real r2D17#1 = RAdd(r2D16,r2D0A);
          real r2D18#3 = RMul(realLit2D13,realLit2CFD);
          real r2D19#1 = RAdd(r2CFF,r2D18);
          real r2D1A#1 = RAdd(r2D19,r2CFF);
          real r2D1B#1 = RAdd(r2D1A,r2D0A);
          real r2D1C#1 = RAdd(r2CFF,r2D14);
          real r2D1D#1 = RAdd(r2D1C,r2CFE);
          real r2D1E#1 = RAdd(r2D1D,r2D0A);
          tensor[3] tensor2D1F#1 = <tensor[3]>[r2D17,r2D1B,r2D1E];
          tensor[3,3] tensor2D20#1 = <tensor[3,3]>[tensor2D09,tensor2D12,tensor2D1F];
          real r2D21#1 = RAdd(r2D00,r2D14);
          real r2D22#1 = RAdd(r2D21,r2D14);
          real r2D23#1 = RAdd(r2D03,r2D14);
          real r2D24#1 = RAdd(r2D23,r2D14);
          real r2D25#1 = RAdd(r2D06,r2D18);
          real r2D26#1 = RAdd(r2D25,r2D14);
          tensor[3] tensor2D27#1 = <tensor[3]>[r2D22,r2D24,r2D26];
          real r2D28#1 = RAdd(r2D0F,r2CFF);
          real r2D29#1 = RAdd(r2D28,r2CFF);
          real r2D2A#1 = RAdd(r2D29,r2D0A);
          real r2D2B#1 = RAdd(r2D0A,r2CFE);
          real r2D2C#1 = RAdd(r2D2B,r2CFF);
          real r2D2D#1 = RAdd(r2D2C,r2D0A);
          real r2D2E#1 = RAdd(r2D0A,r2CFF);
          real r2D2F#1 = RAdd(r2D2E,r2CFE);
          real r2D30#1 = RAdd(r2D2F,r2D0A);
          tensor[3] tensor2D31#1 = <tensor[3]>[r2D2A,r2D2D,r2D30];
          tensor[3,3] tensor2D32#1 = <tensor[3,3]>[tensor2D27,tensor2D09,tensor2D31];
          real r2D33#1 = RAdd(r2CFE,r2D0A);
          real r2D34#1 = RAdd(r2D33,r2CFF);
          real r2D35#1 = RAdd(r2D34,r2D14);
          real r2D36#1 = RAdd(r2CFF,r2D0F);
          real r2D37#1 = RAdd(r2D36,r2CFF);
          real r2D38#1 = RAdd(r2D37,r2D14);
          real r2D39#1 = RAdd(r2CFF,r2D0A);
          real r2D3A#1 = RAdd(r2D39,r2CFE);
          real r2D3B#1 = RAdd(r2D3A,r2D14);
          tensor[3] tensor2D3C#1 = <tensor[3]>[r2D35,r2D38,r2D3B];
          real r2D3D#1 = RAdd(r2D18,r2CFF);
          real r2D3E#1 = RAdd(r2D3D,r2CFF);
          real r2D3F#1 = RAdd(r2D3E,r2D14);
          real r2D40#1 = RAdd(r2D14,r2CFE);
          real r2D41#1 = RAdd(r2D40,r2CFF);
          real r2D42#1 = RAdd(r2D41,r2D14);
          real r2D43#1 = RAdd(r2D14,r2CFF);
          real r2D44#1 = RAdd(r2D43,r2CFE);
          real r2D45#1 = RAdd(r2D44,r2D14);
          tensor[3] tensor2D46#1 = <tensor[3]>[r2D3F,r2D42,r2D45];
          tensor[3,3] tensor2D47#1 = <tensor[3,3]>[tensor2D3C,tensor2D46,tensor2D09];
          tensor[3,3,3] op1_e3_l_232CFB#54 = <tensor[3,3,3]>[tensor2D20,tensor2D32,tensor2D47];
          real r2D97#9 = TensorIndex<tensor[3],[0]>(op1_e3_l_222CEC);
          real r2D98#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_232CFB);
          real r2D99#1 = RMul(r2D97,r2D98);
          real r2D9A#9 = TensorIndex<tensor[3],[1]>(op1_e3_l_222CEC);
          real r2D9B#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_232CFB);
          real r2D9C#1 = RMul(r2D9A,r2D9B);
          real r2D9D#9 = TensorIndex<tensor[3],[2]>(op1_e3_l_222CEC);
          real r2D9E#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_232CFB);
          real r2D9F#1 = RMul(r2D9D,r2D9E);
          real r2DA0#1 = RAdd(r2D99,r2D9C);
          real r2DA1#1 = RAdd(r2DA0,r2D9F);
          real r2DA2#1 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_232CFB);
          real r2DA3#1 = RMul(r2D97,r2DA2);
          real r2DA4#1 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_232CFB);
          real r2DA5#1 = RMul(r2D9A,r2DA4);
          real r2DA6#1 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_232CFB);
          real r2DA7#1 = RMul(r2D9D,r2DA6);
          real r2DA8#1 = RAdd(r2DA3,r2DA5);
          real r2DA9#1 = RAdd(r2DA8,r2DA7);
          real r2DAA#1 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_232CFB);
          real r2DAB#1 = RMul(r2D97,r2DAA);
          real r2DAC#1 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_232CFB);
          real r2DAD#1 = RMul(r2D9A,r2DAC);
          real r2DAE#1 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_232CFB);
          real r2DAF#1 = RMul(r2D9D,r2DAE);
          real r2DB0#1 = RAdd(r2DAB,r2DAD);
          real r2DB1#1 = RAdd(r2DB0,r2DAF);
          tensor[3] tensor2DB2#1 = <tensor[3]>[r2DA1,r2DA9,r2DB1];
          real r2DB3#1 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_232CFB);
          real r2DB4#1 = RMul(r2D97,r2DB3);
          real r2DB5#1 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_232CFB);
          real r2DB6#1 = RMul(r2D9A,r2DB5);
          real r2DB7#1 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_232CFB);
          real r2DB8#1 = RMul(r2D9D,r2DB7);
          real r2DB9#1 = RAdd(r2DB4,r2DB6);
          real r2DBA#1 = RAdd(r2DB9,r2DB8);
          real r2DBB#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_232CFB);
          real r2DBC#1 = RMul(r2D97,r2DBB);
          real r2DBD#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_232CFB);
          real r2DBE#1 = RMul(r2D9A,r2DBD);
          real r2DBF#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_232CFB);
          real r2DC0#1 = RMul(r2D9D,r2DBF);
          real r2DC1#1 = RAdd(r2DBC,r2DBE);
          real r2DC2#1 = RAdd(r2DC1,r2DC0);
          real r2DC3#1 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_232CFB);
          real r2DC4#1 = RMul(r2D97,r2DC3);
          real r2DC5#1 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_232CFB);
          real r2DC6#1 = RMul(r2D9A,r2DC5);
          real r2DC7#1 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_232CFB);
          real r2DC8#1 = RMul(r2D9D,r2DC7);
          real r2DC9#1 = RAdd(r2DC4,r2DC6);
          real r2DCA#1 = RAdd(r2DC9,r2DC8);
          tensor[3] tensor2DCB#1 = <tensor[3]>[r2DBA,r2DC2,r2DCA];
          real r2DCC#1 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_232CFB);
          real r2DCD#1 = RMul(r2D97,r2DCC);
          real r2DCE#1 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_232CFB);
          real r2DCF#1 = RMul(r2D9A,r2DCE);
          real r2DD0#1 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_232CFB);
          real r2DD1#1 = RMul(r2D9D,r2DD0);
          real r2DD2#1 = RAdd(r2DCD,r2DCF);
          real r2DD3#1 = RAdd(r2DD2,r2DD1);
          real r2DD4#1 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_232CFB);
          real r2DD5#1 = RMul(r2D97,r2DD4);
          real r2DD6#1 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_232CFB);
          real r2DD7#1 = RMul(r2D9A,r2DD6);
          real r2DD8#1 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_232CFB);
          real r2DD9#1 = RMul(r2D9D,r2DD8);
          real r2DDA#1 = RAdd(r2DD5,r2DD7);
          real r2DDB#1 = RAdd(r2DDA,r2DD9);
          real r2DDC#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_232CFB);
          real r2DDD#1 = RMul(r2D97,r2DDC);
          real r2DDE#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_232CFB);
          real r2DDF#1 = RMul(r2D9A,r2DDE);
          real r2DE0#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_232CFB);
          real r2DE1#1 = RMul(r2D9D,r2DE0);
          real r2DE2#1 = RAdd(r2DDD,r2DDF);
          real r2DE3#1 = RAdd(r2DE2,r2DE1);
          tensor[3] tensor2DE4#1 = <tensor[3]>[r2DD3,r2DDB,r2DE3];
          tensor[3,3] op1_e3_l_242D96#9 = <tensor[3,3]>[tensor2DB2,tensor2DCB,tensor2DE4];
          real varAcc2E36#3 = VIndex<3,0>(pos2449);
          real varAcc2E37#3 = VIndex<3,1>(pos2449);
          real varAcc2E38#3 = VIndex<3,2>(pos2449);
          real basisEval2E39#640 = 0.e0;
          real coeff2E3A#19 = 0.6e1;
          real one2E3B#19 = 0.1e1;
          real prod2E3C#4 = RMul(one2E3B,one2E3B);
          real prod2E3D#3 = RMul(one2E3B,prod2E3C);
          real basisEval2E3E#3 = RMul(coeff2E3A,prod2E3D);
          real iden2E3F#4 = varAcc2E38;
          real prod2E40#3 = RMul(one2E3B,iden2E3F);
          real prod2E41#4 = RMul(one2E3B,prod2E40);
          real basisEval2E42#4 = RMul(coeff2E3A,prod2E41);
          real iden2E43#4 = varAcc2E37;
          real prod2E44#3 = RMul(iden2E43,one2E3B);
          real prod2E45#4 = RMul(one2E3B,prod2E44);
          real basisEval2E46#4 = RMul(coeff2E3A,prod2E45);
          real coeff2E47#13 = 0.24e2;
          real iden2E48#7 = varAcc2E36;
          real prod2E49#4 = RMul(iden2E48,prod2E3C);
          real basisEval2E4A#1 = RMul(coeff2E47,prod2E49);
          real prod22E4B#3 = RMul(iden2E3F,varAcc2E38);
          real prod2E4C#2 = RMul(one2E3B,prod22E4B);
          real prod2E4D#5 = RMul(one2E3B,prod2E4C);
          real basisEval2E4E#4 = RMul(coeff2E3A,prod2E4D);
          real prod2E4F#2 = RMul(iden2E43,iden2E3F);
          real prod2E50#4 = RMul(one2E3B,prod2E4F);
          real basisEval2E51#3 = RMul(coeff2E3A,prod2E50);
          real prod22E52#3 = RMul(iden2E43,varAcc2E37);
          real prod2E53#2 = RMul(prod22E52,one2E3B);
          real prod2E54#5 = RMul(one2E3B,prod2E53);
          real basisEval2E55#4 = RMul(coeff2E3A,prod2E54);
          real prod2E56#4 = RMul(iden2E48,prod2E40);
          real basisEval2E57#2 = RMul(coeff2E47,prod2E56);
          real prod2E58#4 = RMul(iden2E48,prod2E44);
          real basisEval2E59#2 = RMul(coeff2E47,prod2E58);
          real coeff2E5A#9 = 0.60e2;
          real prod22E5B#4 = RMul(iden2E48,varAcc2E36);
          real prod2E5C#5 = RMul(prod22E5B,prod2E3C);
          real basisEval2E5D#1 = RMul(coeff2E5A,prod2E5C);
          real prod32E5E#1 = RMul(prod22E4B,varAcc2E38);
          real prod2E5F#1 = RMul(one2E3B,prod32E5E);
          real prod2E60#6 = RMul(one2E3B,prod2E5F);
          real basisEval2E61#2 = RMul(coeff2E3A,prod2E60);
          real prod2E62#1 = RMul(iden2E43,prod22E4B);
          real prod2E63#6 = RMul(one2E3B,prod2E62);
          real basisEval2E64#4 = RMul(coeff2E3A,prod2E63);
          real prod2E65#1 = RMul(prod22E52,iden2E3F);
          real prod2E66#6 = RMul(one2E3B,prod2E65);
          real basisEval2E67#4 = RMul(coeff2E3A,prod2E66);
          real prod32E68#1 = RMul(prod22E52,varAcc2E37);
          real prod2E69#1 = RMul(prod32E68,one2E3B);
          real prod2E6A#6 = RMul(one2E3B,prod2E69);
          real basisEval2E6B#2 = RMul(coeff2E3A,prod2E6A);
          real prod2E6C#6 = RMul(iden2E48,prod2E4C);
          real basisEval2E6D#2 = RMul(coeff2E47,prod2E6C);
          real prod2E6E#3 = RMul(iden2E48,prod2E4F);
          real basisEval2E6F#3 = RMul(coeff2E47,prod2E6E);
          real prod2E70#6 = RMul(iden2E48,prod2E53);
          real basisEval2E71#2 = RMul(coeff2E47,prod2E70);
          real prod2E72#6 = RMul(prod22E5B,prod2E40);
          real basisEval2E73#1 = RMul(coeff2E5A,prod2E72);
          real prod2E74#6 = RMul(prod22E5B,prod2E44);
          real basisEval2E75#1 = RMul(coeff2E5A,prod2E74);
          real coeff2E76#3 = 0.120e3;
          real prod32E77#1 = RMul(prod22E5B,varAcc2E36);
          real prod2E78#6 = RMul(prod32E77,prod2E3C);
          real basisEval2E79#1 = RMul(coeff2E76,prod2E78);
          real coeff2E7A#10 = 0.2e1;
          real basisEval2E7B#6 = RMul(coeff2E7A,prod2E3D);
          real basisEval2E7C#3 = RMul(coeff2E7A,prod2E41);
          real coeff2E7D#15 = 0.4e1;
          real basisEval2E7E#2 = RMul(coeff2E7D,prod2E45);
          real basisEval2E7F#4 = RMul(coeff2E3A,prod2E49);
          real basisEval2E80#2 = RMul(coeff2E7A,prod2E4D);
          real basisEval2E81#3 = RMul(coeff2E7D,prod2E50);
          real basisEval2E82#3 = RMul(coeff2E3A,prod2E56);
          real coeff2E83#13 = 0.12e2;
          real basisEval2E84#2 = RMul(coeff2E83,prod2E58);
          real basisEval2E85#2 = RMul(coeff2E83,prod2E5C);
          real basisEval2E86#2 = RMul(coeff2E7A,prod2E60);
          real basisEval2E87#1 = RMul(coeff2E7D,prod2E63);
          real coeff2E88#4 = 0.8e1;
          real basisEval2E89#2 = RMul(coeff2E88,prod2E6A);
          real basisEval2E8A#4 = RMul(coeff2E3A,prod2E6C);
          real basisEval2E8B#6 = RMul(coeff2E83,prod2E6E);
          real coeff2E8C#6 = 0.18e2;
          real basisEval2E8D#1 = RMul(coeff2E8C,prod2E70);
          real basisEval2E8E#1 = RMul(coeff2E83,prod2E72);
          real basisEval2E8F#2 = RMul(coeff2E47,prod2E74);
          real coeff2E90#3 = 0.20e2;
          real basisEval2E91#2 = RMul(coeff2E90,prod2E78);
          real basisEval2E92#2 = RMul(coeff2E7D,prod2E41);
          real basisEval2E93#3 = RMul(coeff2E7A,prod2E45);
          real basisEval2E94#2 = RMul(coeff2E7A,prod2E54);
          real basisEval2E95#2 = RMul(coeff2E83,prod2E56);
          real basisEval2E96#3 = RMul(coeff2E3A,prod2E58);
          real basisEval2E97#2 = RMul(coeff2E88,prod2E60);
          real basisEval2E98#1 = RMul(coeff2E7D,prod2E66);
          real basisEval2E99#2 = RMul(coeff2E7A,prod2E6A);
          real basisEval2E9A#1 = RMul(coeff2E8C,prod2E6C);
          real basisEval2E9B#4 = RMul(coeff2E3A,prod2E70);
          real basisEval2E9C#2 = RMul(coeff2E47,prod2E72);
          real basisEval2E9D#1 = RMul(coeff2E83,prod2E74);
          real basisEval2E9E#2 = RMul(coeff2E7D,prod2E49);
          real basisEval2E9F#2 = RMul(coeff2E83,prod2E54);
          real basisEval2EA0#3 = RMul(coeff2E7D,prod2E56);
          real basisEval2EA1#4 = RMul(coeff2E3A,prod2E5C);
          real basisEval2EA2#1 = RMul(coeff2E83,prod2E66);
          real basisEval2EA3#2 = RMul(coeff2E90,prod2E6A);
          real basisEval2EA4#1 = RMul(coeff2E7D,prod2E6C);
          real basisEval2EA5#4 = RMul(coeff2E3A,prod2E72);
          real basisEval2EA6#1 = RMul(coeff2E8C,prod2E74);
          real basisEval2EA7#2 = RMul(coeff2E88,prod2E78);
          real basisEval2EA8#1 = RMul(one2E3B,prod2E3D);
          real basisEval2EA9#3 = RMul(coeff2E7A,prod2E49);
          real coeff2EAA#3 = 0.3e1;
          real basisEval2EAB#1 = RMul(coeff2EAA,prod2E4D);
          real basisEval2EAC#1 = RMul(coeff2EAA,prod2E54);
          real basisEval2EAD#3 = RMul(coeff2E7D,prod2E58);
          real basisEval2EAE#1 = RMul(coeff2EAA,prod2E5C);
          real basisEval2EAF#1 = RMul(coeff2E7D,prod2E60);
          real basisEval2EB0#1 = RMul(coeff2E7D,prod2E6A);
          real basisEval2EB1#1 = RMul(coeff2E88,prod2E6E);
          real basisEval2EB2#4 = RMul(coeff2E3A,prod2E74);
          real basisEval2EB3#1 = RMul(coeff2E7D,prod2E78);
          real basisEval2EB4#2 = RMul(coeff2E83,prod2E4D);
          real basisEval2EB5#2 = RMul(coeff2E90,prod2E60);
          real basisEval2EB6#1 = RMul(coeff2E83,prod2E63);
          real basisEval2EB7#1 = RMul(coeff2E7D,prod2E70);
          real basisEval2EB8#1 = RMul(coeff2E8C,prod2E72);
          real basisEval2EB9#1 = RMul(coeff2E47,prod2E45);
          real basisEval2EBA#2 = RMul(coeff2E47,prod2E50);
          real basisEval2EBB#1 = RMul(coeff2E5A,prod2E54);
          real basisEval2EBC#2 = RMul(coeff2E47,prod2E63);
          real basisEval2EBD#1 = RMul(coeff2E5A,prod2E66);
          real basisEval2EBE#1 = RMul(coeff2E76,prod2E6A);
          real basisEval2EBF#1 = RMul(coeff2E5A,prod2E70);
          real basisEval2EC0#2 = RMul(coeff2E3A,prod2E78);
          real basisEval2EC1#2 = RMul(coeff2E83,prod2E50);
          real basisEval2EC2#2 = RMul(coeff2E7A,prod2E5C);
          real basisEval2EC3#1 = RMul(coeff2E8C,prod2E63);
          real basisEval2EC4#2 = RMul(coeff2E47,prod2E66);
          real basisEval2EC5#1 = RMul(coeff2E83,prod2E70);
          real basisEval2EC6#1 = RMul(coeff2E7D,prod2E72);
          real basisEval2EC7#2 = RMul(coeff2E7A,prod2E78);
          real basisEval2EC8#1 = RMul(coeff2E8C,prod2E66);
          real basisEval2EC9#1 = RMul(coeff2E83,prod2E6C);
          real basisEval2ECA#1 = RMul(coeff2E7D,prod2E74);
          real basisEval2ECB#1 = RMul(coeff2E47,prod2E41);
          real basisEval2ECC#1 = RMul(coeff2E5A,prod2E4D);
          real basisEval2ECD#1 = RMul(coeff2E76,prod2E60);
          real basisEval2ECE#1 = RMul(coeff2E5A,prod2E63);
          real basisEval2ECF#1 = RMul(coeff2E5A,prod2E6C);
          tensor[84] intermediateCons2ED0#1 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E3E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E42,basisEval2E46,basisEval2E4A,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E4E,basisEval2E51,basisEval2E55,basisEval2E57,basisEval2E59,basisEval2E5D,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E61,basisEval2E64,basisEval2E67,basisEval2E6B,basisEval2E6D,basisEval2E6F,basisEval2E71,basisEval2E73,basisEval2E75,basisEval2E79];
          tensor[84] intermediateCons2ED1#2 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7C,basisEval2E7E,basisEval2E39,basisEval2E7F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E80,basisEval2E81,basisEval2E55,basisEval2E39,basisEval2E82,basisEval2E84,basisEval2E39,basisEval2E85,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E86,basisEval2E87,basisEval2E67,basisEval2E89,basisEval2E39,basisEval2E8A,basisEval2E8B,basisEval2E8D,basisEval2E39,basisEval2E8E,basisEval2E8F,basisEval2E39,basisEval2E91,basisEval2E39];
          tensor[84] intermediateCons2ED2#2 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E92,basisEval2E93,basisEval2E39,basisEval2E7F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E4E,basisEval2E81,basisEval2E94,basisEval2E39,basisEval2E95,basisEval2E96,basisEval2E39,basisEval2E85,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E97,basisEval2E64,basisEval2E98,basisEval2E99,basisEval2E39,basisEval2E9A,basisEval2E8B,basisEval2E9B,basisEval2E39,basisEval2E9C,basisEval2E9D,basisEval2E39,basisEval2E91,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED3#2 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7C,basisEval2E46,basisEval2E39,basisEval2E39,basisEval2E9E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E80,basisEval2E51,basisEval2E9F,basisEval2E39,basisEval2E39,basisEval2EA0,basisEval2E84,basisEval2E39,basisEval2E39,basisEval2EA1,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E86,basisEval2E64,basisEval2EA2,basisEval2EA3,basisEval2E39,basisEval2E39,basisEval2EA4,basisEval2E8B,basisEval2E71,basisEval2E39,basisEval2E39,basisEval2EA5,basisEval2EA6,basisEval2E39,basisEval2E39,basisEval2EA7,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED4#3 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA8,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7C,basisEval2E93,basisEval2E39,basisEval2E39,basisEval2EA9,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EAB,basisEval2E81,basisEval2EAC,basisEval2E39,basisEval2E39,basisEval2EA0,basisEval2EAD,basisEval2E39,basisEval2E39,basisEval2EAE,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EAF,basisEval2E64,basisEval2E67,basisEval2EB0,basisEval2E39,basisEval2E39,basisEval2E8A,basisEval2EB1,basisEval2E9B,basisEval2E39,basisEval2E39,basisEval2EA5,basisEval2EB2,basisEval2E39,basisEval2E39,basisEval2EB3,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED5#2 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E42,basisEval2E93,basisEval2E39,basisEval2E39,basisEval2E9E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EB4,basisEval2E51,basisEval2E94,basisEval2E39,basisEval2E39,basisEval2E95,basisEval2EAD,basisEval2E39,basisEval2E39,basisEval2EA1,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EB5,basisEval2EB6,basisEval2E67,basisEval2E99,basisEval2E39,basisEval2E39,basisEval2E6D,basisEval2E8B,basisEval2EB7,basisEval2E39,basisEval2E39,basisEval2EB8,basisEval2EB2,basisEval2E39,basisEval2E39,basisEval2EA7,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED6#1 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E3E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E42,basisEval2EB9,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E4E,basisEval2EBA,basisEval2EBB,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E82,basisEval2E59,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA1,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E61,basisEval2EBC,basisEval2EBD,basisEval2EBE,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E8A,basisEval2E6F,basisEval2EBF,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA5,basisEval2E8F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC0,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED7#2 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E92,basisEval2E46,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA9,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E4E,basisEval2EC1,basisEval2E9F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA0,basisEval2E96,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC2,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E97,basisEval2EC3,basisEval2EC4,basisEval2EA3,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E8A,basisEval2E8B,basisEval2EC5,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC6,basisEval2EB2,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC7,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED8#2 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E42,basisEval2E7E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA9,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EB4,basisEval2EC1,basisEval2E55,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E82,basisEval2EAD,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC2,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EB5,basisEval2EBC,basisEval2EC8,basisEval2E89,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC9,basisEval2E8B,basisEval2E9B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA5,basisEval2ECA,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC7,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED9#1 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E3E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2ECB,basisEval2E46,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2ECC,basisEval2EBA,basisEval2E55,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E57,basisEval2E96,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA1,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2ECD,basisEval2ECE,basisEval2EC4,basisEval2E6B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2ECF,basisEval2E6F,basisEval2E9B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E9C,basisEval2EB2,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC0,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[3,84] intermediateCons2EDA#1 = <tensor[3,84]>[intermediateCons2ED0,intermediateCons2ED1,intermediateCons2ED2];
          tensor[3,84] intermediateCons2EDB#2 = <tensor[3,84]>[intermediateCons2ED1,intermediateCons2ED3,intermediateCons2ED4];
          tensor[3,84] intermediateCons2EDC#2 = <tensor[3,84]>[intermediateCons2ED2,intermediateCons2ED4,intermediateCons2ED5];
          tensor[3,84] intermediateCons2EDD#1 = <tensor[3,84]>[intermediateCons2ED3,intermediateCons2ED6,intermediateCons2ED7];
          tensor[3,84] intermediateCons2EDE#2 = <tensor[3,84]>[intermediateCons2ED4,intermediateCons2ED7,intermediateCons2ED8];
          tensor[3,84] intermediateCons2EDF#1 = <tensor[3,84]>[intermediateCons2ED5,intermediateCons2ED8,intermediateCons2ED9];
          tensor[3,3,84] intermediateCons2EE0#1 = <tensor[3,3,84]>[intermediateCons2EDA,intermediateCons2EDB,intermediateCons2EDC];
          tensor[3,3,84] intermediateCons2EE1#1 = <tensor[3,3,84]>[intermediateCons2EDB,intermediateCons2EDD,intermediateCons2EDE];
          tensor[3,3,84] intermediateCons2EE2#1 = <tensor[3,3,84]>[intermediateCons2EDC,intermediateCons2EDE,intermediateCons2EDF];
          tensor[3,3,3,84] intermediateCons2EE3#1 = <tensor[3,3,3,84]>[intermediateCons2EE0,intermediateCons2EE1,intermediateCons2EE2];
          tensor[3,3,3,84] basisResult2E35#27 = intermediateCons2EE3;
          tensor[84] projParam2F94#1 = ProjectLast<tensor[3,3,3,84],[0,0,0]>(basisResult2E35);
          real vdot2F95#1 = VDot<84>(femDofs2653,projParam2F94);
          tensor[84] projParam2F96#1 = ProjectLast<tensor[3,3,3,84],[0,0,1]>(basisResult2E35);
          real vdot2F97#1 = VDot<84>(femDofs2653,projParam2F96);
          tensor[84] projParam2F98#1 = ProjectLast<tensor[3,3,3,84],[0,0,2]>(basisResult2E35);
          real vdot2F99#1 = VDot<84>(femDofs2653,projParam2F98);
          tensor[3] tensor2F9A#1 = <tensor[3]>[vdot2F95,vdot2F97,vdot2F99];
          tensor[84] projParam2F9B#1 = ProjectLast<tensor[3,3,3,84],[0,1,0]>(basisResult2E35);
          real vdot2F9C#1 = VDot<84>(femDofs2653,projParam2F9B);
          tensor[84] projParam2F9D#1 = ProjectLast<tensor[3,3,3,84],[0,1,1]>(basisResult2E35);
          real vdot2F9E#1 = VDot<84>(femDofs2653,projParam2F9D);
          tensor[84] projParam2F9F#1 = ProjectLast<tensor[3,3,3,84],[0,1,2]>(basisResult2E35);
          real vdot2FA0#1 = VDot<84>(femDofs2653,projParam2F9F);
          tensor[3] tensor2FA1#1 = <tensor[3]>[vdot2F9C,vdot2F9E,vdot2FA0];
          tensor[84] projParam2FA2#1 = ProjectLast<tensor[3,3,3,84],[0,2,0]>(basisResult2E35);
          real vdot2FA3#1 = VDot<84>(femDofs2653,projParam2FA2);
          tensor[84] projParam2FA4#1 = ProjectLast<tensor[3,3,3,84],[0,2,1]>(basisResult2E35);
          real vdot2FA5#1 = VDot<84>(femDofs2653,projParam2FA4);
          tensor[84] projParam2FA6#1 = ProjectLast<tensor[3,3,3,84],[0,2,2]>(basisResult2E35);
          real vdot2FA7#1 = VDot<84>(femDofs2653,projParam2FA6);
          tensor[3] tensor2FA8#1 = <tensor[3]>[vdot2FA3,vdot2FA5,vdot2FA7];
          tensor[3,3] tensor2FA9#1 = <tensor[3,3]>[tensor2F9A,tensor2FA1,tensor2FA8];
          tensor[84] projParam2FAA#1 = ProjectLast<tensor[3,3,3,84],[1,0,0]>(basisResult2E35);
          real vdot2FAB#1 = VDot<84>(femDofs2653,projParam2FAA);
          tensor[84] projParam2FAC#1 = ProjectLast<tensor[3,3,3,84],[1,0,1]>(basisResult2E35);
          real vdot2FAD#1 = VDot<84>(femDofs2653,projParam2FAC);
          tensor[84] projParam2FAE#1 = ProjectLast<tensor[3,3,3,84],[1,0,2]>(basisResult2E35);
          real vdot2FAF#1 = VDot<84>(femDofs2653,projParam2FAE);
          tensor[3] tensor2FB0#1 = <tensor[3]>[vdot2FAB,vdot2FAD,vdot2FAF];
          tensor[84] projParam2FB1#1 = ProjectLast<tensor[3,3,3,84],[1,1,0]>(basisResult2E35);
          real vdot2FB2#1 = VDot<84>(femDofs2653,projParam2FB1);
          tensor[84] projParam2FB3#1 = ProjectLast<tensor[3,3,3,84],[1,1,1]>(basisResult2E35);
          real vdot2FB4#1 = VDot<84>(femDofs2653,projParam2FB3);
          tensor[84] projParam2FB5#1 = ProjectLast<tensor[3,3,3,84],[1,1,2]>(basisResult2E35);
          real vdot2FB6#1 = VDot<84>(femDofs2653,projParam2FB5);
          tensor[3] tensor2FB7#1 = <tensor[3]>[vdot2FB2,vdot2FB4,vdot2FB6];
          tensor[84] projParam2FB8#1 = ProjectLast<tensor[3,3,3,84],[1,2,0]>(basisResult2E35);
          real vdot2FB9#1 = VDot<84>(femDofs2653,projParam2FB8);
          tensor[84] projParam2FBA#1 = ProjectLast<tensor[3,3,3,84],[1,2,1]>(basisResult2E35);
          real vdot2FBB#1 = VDot<84>(femDofs2653,projParam2FBA);
          tensor[84] projParam2FBC#1 = ProjectLast<tensor[3,3,3,84],[1,2,2]>(basisResult2E35);
          real vdot2FBD#1 = VDot<84>(femDofs2653,projParam2FBC);
          tensor[3] tensor2FBE#1 = <tensor[3]>[vdot2FB9,vdot2FBB,vdot2FBD];
          tensor[3,3] tensor2FBF#1 = <tensor[3,3]>[tensor2FB0,tensor2FB7,tensor2FBE];
          tensor[84] projParam2FC0#1 = ProjectLast<tensor[3,3,3,84],[2,0,0]>(basisResult2E35);
          real vdot2FC1#1 = VDot<84>(femDofs2653,projParam2FC0);
          tensor[84] projParam2FC2#1 = ProjectLast<tensor[3,3,3,84],[2,0,1]>(basisResult2E35);
          real vdot2FC3#1 = VDot<84>(femDofs2653,projParam2FC2);
          tensor[84] projParam2FC4#1 = ProjectLast<tensor[3,3,3,84],[2,0,2]>(basisResult2E35);
          real vdot2FC5#1 = VDot<84>(femDofs2653,projParam2FC4);
          tensor[3] tensor2FC6#1 = <tensor[3]>[vdot2FC1,vdot2FC3,vdot2FC5];
          tensor[84] projParam2FC7#1 = ProjectLast<tensor[3,3,3,84],[2,1,0]>(basisResult2E35);
          real vdot2FC8#1 = VDot<84>(femDofs2653,projParam2FC7);
          tensor[84] projParam2FC9#1 = ProjectLast<tensor[3,3,3,84],[2,1,1]>(basisResult2E35);
          real vdot2FCA#1 = VDot<84>(femDofs2653,projParam2FC9);
          tensor[84] projParam2FCB#1 = ProjectLast<tensor[3,3,3,84],[2,1,2]>(basisResult2E35);
          real vdot2FCC#1 = VDot<84>(femDofs2653,projParam2FCB);
          tensor[3] tensor2FCD#1 = <tensor[3]>[vdot2FC8,vdot2FCA,vdot2FCC];
          tensor[84] projParam2FCE#1 = ProjectLast<tensor[3,3,3,84],[2,2,0]>(basisResult2E35);
          real vdot2FCF#1 = VDot<84>(femDofs2653,projParam2FCE);
          tensor[84] projParam2FD0#1 = ProjectLast<tensor[3,3,3,84],[2,2,1]>(basisResult2E35);
          real vdot2FD1#1 = VDot<84>(femDofs2653,projParam2FD0);
          tensor[84] projParam2FD2#1 = ProjectLast<tensor[3,3,3,84],[2,2,2]>(basisResult2E35);
          real vdot2FD3#1 = VDot<84>(femDofs2653,projParam2FD2);
          tensor[3] tensor2FD4#1 = <tensor[3]>[vdot2FCF,vdot2FD1,vdot2FD3];
          tensor[3,3] tensor2FD5#1 = <tensor[3,3]>[tensor2FC6,tensor2FCD,tensor2FD4];
          tensor[3,3,3] probe_l_312F93#27 = <tensor[3,3,3]>[tensor2FA9,tensor2FBF,tensor2FD5];
          real r301B#9 = TensorIndex<tensor[3],[0]>(probe_l_62CC6);
          real r301C#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(probe_l_312F93);
          real r301D#1 = RMul(r301B,r301C);
          real r301E#9 = TensorIndex<tensor[3],[1]>(probe_l_62CC6);
          real r301F#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(probe_l_312F93);
          real r3020#1 = RMul(r301E,r301F);
          real r3021#9 = TensorIndex<tensor[3],[2]>(probe_l_62CC6);
          real r3022#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(probe_l_312F93);
          real r3023#1 = RMul(r3021,r3022);
          real r3024#1 = RAdd(r301D,r3020);
          real r3025#1 = RAdd(r3024,r3023);
          real r3026#1 = TensorIndex<tensor[3,3,3],[0,0,1]>(probe_l_312F93);
          real r3027#1 = RMul(r301B,r3026);
          real r3028#1 = TensorIndex<tensor[3,3,3],[0,1,1]>(probe_l_312F93);
          real r3029#1 = RMul(r301E,r3028);
          real r302A#1 = TensorIndex<tensor[3,3,3],[0,2,1]>(probe_l_312F93);
          real r302B#1 = RMul(r3021,r302A);
          real r302C#1 = RAdd(r3027,r3029);
          real r302D#1 = RAdd(r302C,r302B);
          real r302E#1 = TensorIndex<tensor[3,3,3],[0,0,2]>(probe_l_312F93);
          real r302F#1 = RMul(r301B,r302E);
          real r3030#1 = TensorIndex<tensor[3,3,3],[0,1,2]>(probe_l_312F93);
          real r3031#1 = RMul(r301E,r3030);
          real r3032#1 = TensorIndex<tensor[3,3,3],[0,2,2]>(probe_l_312F93);
          real r3033#1 = RMul(r3021,r3032);
          real r3034#1 = RAdd(r302F,r3031);
          real r3035#1 = RAdd(r3034,r3033);
          tensor[3] tensor3036#1 = <tensor[3]>[r3025,r302D,r3035];
          real r3037#1 = TensorIndex<tensor[3,3,3],[1,0,0]>(probe_l_312F93);
          real r3038#1 = RMul(r301B,r3037);
          real r3039#1 = TensorIndex<tensor[3,3,3],[1,1,0]>(probe_l_312F93);
          real r303A#1 = RMul(r301E,r3039);
          real r303B#1 = TensorIndex<tensor[3,3,3],[1,2,0]>(probe_l_312F93);
          real r303C#1 = RMul(r3021,r303B);
          real r303D#1 = RAdd(r3038,r303A);
          real r303E#1 = RAdd(r303D,r303C);
          real r303F#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(probe_l_312F93);
          real r3040#1 = RMul(r301B,r303F);
          real r3041#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(probe_l_312F93);
          real r3042#1 = RMul(r301E,r3041);
          real r3043#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(probe_l_312F93);
          real r3044#1 = RMul(r3021,r3043);
          real r3045#1 = RAdd(r3040,r3042);
          real r3046#1 = RAdd(r3045,r3044);
          real r3047#1 = TensorIndex<tensor[3,3,3],[1,0,2]>(probe_l_312F93);
          real r3048#1 = RMul(r301B,r3047);
          real r3049#1 = TensorIndex<tensor[3,3,3],[1,1,2]>(probe_l_312F93);
          real r304A#1 = RMul(r301E,r3049);
          real r304B#1 = TensorIndex<tensor[3,3,3],[1,2,2]>(probe_l_312F93);
          real r304C#1 = RMul(r3021,r304B);
          real r304D#1 = RAdd(r3048,r304A);
          real r304E#1 = RAdd(r304D,r304C);
          tensor[3] tensor304F#1 = <tensor[3]>[r303E,r3046,r304E];
          real r3050#1 = TensorIndex<tensor[3,3,3],[2,0,0]>(probe_l_312F93);
          real r3051#1 = RMul(r301B,r3050);
          real r3052#1 = TensorIndex<tensor[3,3,3],[2,1,0]>(probe_l_312F93);
          real r3053#1 = RMul(r301E,r3052);
          real r3054#1 = TensorIndex<tensor[3,3,3],[2,2,0]>(probe_l_312F93);
          real r3055#1 = RMul(r3021,r3054);
          real r3056#1 = RAdd(r3051,r3053);
          real r3057#1 = RAdd(r3056,r3055);
          real r3058#1 = TensorIndex<tensor[3,3,3],[2,0,1]>(probe_l_312F93);
          real r3059#1 = RMul(r301B,r3058);
          real r305A#1 = TensorIndex<tensor[3,3,3],[2,1,1]>(probe_l_312F93);
          real r305B#1 = RMul(r301E,r305A);
          real r305C#1 = TensorIndex<tensor[3,3,3],[2,2,1]>(probe_l_312F93);
          real r305D#1 = RMul(r3021,r305C);
          real r305E#1 = RAdd(r3059,r305B);
          real r305F#1 = RAdd(r305E,r305D);
          real r3060#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(probe_l_312F93);
          real r3061#1 = RMul(r301B,r3060);
          real r3062#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(probe_l_312F93);
          real r3063#1 = RMul(r301E,r3062);
          real r3064#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(probe_l_312F93);
          real r3065#1 = RMul(r3021,r3064);
          real r3066#1 = RAdd(r3061,r3063);
          real r3067#1 = RAdd(r3066,r3065);
          tensor[3] tensor3068#1 = <tensor[3]>[r3057,r305F,r3067];
          tensor[3,3] op1_e3_l_34301A#3 = <tensor[3,3]>[tensor3036,tensor304F,tensor3068];
          real r30BA#6 = TensorIndex<tensor[3,3],[0,0]>(_t2AB1);
          real r30BB#1 = RMul(r30BA,r30BA);
          real r30BC#6 = TensorIndex<tensor[3,3],[0,1]>(_t2AB1);
          real r30BD#6 = TensorIndex<tensor[3,3],[1,0]>(_t2AB1);
          real r30BE#1 = RMul(r30BC,r30BD);
          real r30BF#6 = TensorIndex<tensor[3,3],[0,2]>(_t2AB1);
          real r30C0#6 = TensorIndex<tensor[3,3],[2,0]>(_t2AB1);
          real r30C1#1 = RMul(r30BF,r30C0);
          real r30C2#1 = RAdd(r30BB,r30BE);
          real r30C3#1 = RAdd(r30C2,r30C1);
          real r30C4#1 = RMul(r30BA,r30BC);
          real r30C5#6 = TensorIndex<tensor[3,3],[1,1]>(_t2AB1);
          real r30C6#1 = RMul(r30BC,r30C5);
          real r30C7#6 = TensorIndex<tensor[3,3],[2,1]>(_t2AB1);
          real r30C8#1 = RMul(r30BF,r30C7);
          real r30C9#1 = RAdd(r30C4,r30C6);
          real r30CA#1 = RAdd(r30C9,r30C8);
          real r30CB#1 = RMul(r30BA,r30BF);
          real r30CC#6 = TensorIndex<tensor[3,3],[1,2]>(_t2AB1);
          real r30CD#1 = RMul(r30BC,r30CC);
          real r30CE#6 = TensorIndex<tensor[3,3],[2,2]>(_t2AB1);
          real r30CF#1 = RMul(r30BF,r30CE);
          real r30D0#1 = RAdd(r30CB,r30CD);
          real r30D1#1 = RAdd(r30D0,r30CF);
          tensor[3] tensor30D2#1 = <tensor[3]>[r30C3,r30CA,r30D1];
          real r30D3#1 = RMul(r30BD,r30BA);
          real r30D4#1 = RMul(r30C5,r30BD);
          real r30D5#1 = RMul(r30CC,r30C0);
          real r30D6#1 = RAdd(r30D3,r30D4);
          real r30D7#1 = RAdd(r30D6,r30D5);
          real r30D8#1 = RMul(r30BD,r30BC);
          real r30D9#1 = RMul(r30C5,r30C5);
          real r30DA#1 = RMul(r30CC,r30C7);
          real r30DB#1 = RAdd(r30D8,r30D9);
          real r30DC#1 = RAdd(r30DB,r30DA);
          real r30DD#1 = RMul(r30BD,r30BF);
          real r30DE#1 = RMul(r30C5,r30CC);
          real r30DF#1 = RMul(r30CC,r30CE);
          real r30E0#1 = RAdd(r30DD,r30DE);
          real r30E1#1 = RAdd(r30E0,r30DF);
          tensor[3] tensor30E2#1 = <tensor[3]>[r30D7,r30DC,r30E1];
          real r30E3#1 = RMul(r30C0,r30BA);
          real r30E4#1 = RMul(r30C7,r30BD);
          real r30E5#1 = RMul(r30CE,r30C0);
          real r30E6#1 = RAdd(r30E3,r30E4);
          real r30E7#1 = RAdd(r30E6,r30E5);
          real r30E8#1 = RMul(r30C0,r30BC);
          real r30E9#1 = RMul(r30C7,r30C5);
          real r30EA#1 = RMul(r30CE,r30C7);
          real r30EB#1 = RAdd(r30E8,r30E9);
          real r30EC#1 = RAdd(r30EB,r30EA);
          real r30ED#1 = RMul(r30C0,r30BF);
          real r30EE#1 = RMul(r30C7,r30CC);
          real r30EF#1 = RMul(r30CE,r30CE);
          real r30F0#1 = RAdd(r30ED,r30EE);
          real r30F1#1 = RAdd(r30F0,r30EF);
          tensor[3] tensor30F2#1 = <tensor[3]>[r30E7,r30EC,r30F1];
          tensor[3,3] op1_e3_l_3530B9#3 = <tensor[3,3]>[tensor30D2,tensor30E2,tensor30F2];
          tensor[3] projParam312F#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_34301A);
          tensor[3] projParam3130#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_3530B9);
          tensor[3] v3131#1 = VAdd<3>(projParam312F,projParam3130);
          tensor[3] projParam3132#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_34301A);
          tensor[3] projParam3133#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_3530B9);
          tensor[3] v3134#1 = VAdd<3>(projParam3132,projParam3133);
          tensor[3] projParam3135#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_34301A);
          tensor[3] projParam3136#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_3530B9);
          tensor[3] v3137#1 = VAdd<3>(projParam3135,projParam3136);
          tensor[3,3] op1_e3_l_36312E#9 = <tensor[3,3]>[v3131,v3134,v3137];
          real r3144#9 = TensorIndex<tensor[3],[0]>(op1_e3_l_222CEC);
          real r3145#3 = TensorIndex<tensor[3,3],[0,0]>(_t2AB1);
          real r3146#1 = RMul(r3144,r3145);
          real r3147#3 = TensorIndex<tensor[3,3],[0,1]>(_t2AB1);
          real r3148#1 = RMul(r3144,r3147);
          real r3149#3 = TensorIndex<tensor[3,3],[0,2]>(_t2AB1);
          real r314A#1 = RMul(r3144,r3149);
          tensor[3] tensor314B#1 = <tensor[3]>[r3146,r3148,r314A];
          real r314C#3 = TensorIndex<tensor[3,3],[1,0]>(_t2AB1);
          real r314D#1 = RMul(r3144,r314C);
          real r314E#3 = TensorIndex<tensor[3,3],[1,1]>(_t2AB1);
          real r314F#1 = RMul(r3144,r314E);
          real r3150#3 = TensorIndex<tensor[3,3],[1,2]>(_t2AB1);
          real r3151#1 = RMul(r3144,r3150);
          tensor[3] tensor3152#1 = <tensor[3]>[r314D,r314F,r3151];
          real r3153#3 = TensorIndex<tensor[3,3],[2,0]>(_t2AB1);
          real r3154#1 = RMul(r3144,r3153);
          real r3155#3 = TensorIndex<tensor[3,3],[2,1]>(_t2AB1);
          real r3156#1 = RMul(r3144,r3155);
          real r3157#3 = TensorIndex<tensor[3,3],[2,2]>(_t2AB1);
          real r3158#1 = RMul(r3144,r3157);
          tensor[3] tensor3159#1 = <tensor[3]>[r3154,r3156,r3158];
          tensor[3,3] tensor315A#1 = <tensor[3,3]>[tensor314B,tensor3152,tensor3159];
          real r315B#9 = TensorIndex<tensor[3],[1]>(op1_e3_l_222CEC);
          real r315C#1 = RMul(r315B,r3145);
          real r315D#1 = RMul(r315B,r3147);
          real r315E#1 = RMul(r315B,r3149);
          tensor[3] tensor315F#1 = <tensor[3]>[r315C,r315D,r315E];
          real r3160#1 = RMul(r315B,r314C);
          real r3161#1 = RMul(r315B,r314E);
          real r3162#1 = RMul(r315B,r3150);
          tensor[3] tensor3163#1 = <tensor[3]>[r3160,r3161,r3162];
          real r3164#1 = RMul(r315B,r3153);
          real r3165#1 = RMul(r315B,r3155);
          real r3166#1 = RMul(r315B,r3157);
          tensor[3] tensor3167#1 = <tensor[3]>[r3164,r3165,r3166];
          tensor[3,3] tensor3168#1 = <tensor[3,3]>[tensor315F,tensor3163,tensor3167];
          real r3169#9 = TensorIndex<tensor[3],[2]>(op1_e3_l_222CEC);
          real r316A#1 = RMul(r3169,r3145);
          real r316B#1 = RMul(r3169,r3147);
          real r316C#1 = RMul(r3169,r3149);
          tensor[3] tensor316D#1 = <tensor[3]>[r316A,r316B,r316C];
          real r316E#1 = RMul(r3169,r314C);
          real r316F#1 = RMul(r3169,r314E);
          real r3170#1 = RMul(r3169,r3150);
          tensor[3] tensor3171#1 = <tensor[3]>[r316E,r316F,r3170];
          real r3172#1 = RMul(r3169,r3153);
          real r3173#1 = RMul(r3169,r3155);
          real r3174#1 = RMul(r3169,r3157);
          tensor[3] tensor3175#1 = <tensor[3]>[r3172,r3173,r3174];
          tensor[3,3] tensor3176#1 = <tensor[3,3]>[tensor316D,tensor3171,tensor3175];
          tensor[3,3,3] op1_e3_l_373143#9 = <tensor[3,3,3]>[tensor315A,tensor3168,tensor3176];
          real r31AD#9 = TensorIndex<tensor[3],[0]>(probe_l_62CC6);
          real r31AE#3 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_36312E);
          real r31AF#1 = RMul(r31AD,r31AE);
          real r31B0#3 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_36312E);
          real r31B1#1 = RMul(r31AD,r31B0);
          real r31B2#3 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_36312E);
          real r31B3#1 = RMul(r31AD,r31B2);
          tensor[3] tensor31B4#1 = <tensor[3]>[r31AF,r31B1,r31B3];
          real r31B5#3 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_36312E);
          real r31B6#1 = RMul(r31AD,r31B5);
          real r31B7#3 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_36312E);
          real r31B8#1 = RMul(r31AD,r31B7);
          real r31B9#3 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_36312E);
          real r31BA#1 = RMul(r31AD,r31B9);
          tensor[3] tensor31BB#1 = <tensor[3]>[r31B6,r31B8,r31BA];
          real r31BC#3 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_36312E);
          real r31BD#1 = RMul(r31AD,r31BC);
          real r31BE#3 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_36312E);
          real r31BF#1 = RMul(r31AD,r31BE);
          real r31C0#3 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_36312E);
          real r31C1#1 = RMul(r31AD,r31C0);
          tensor[3] tensor31C2#1 = <tensor[3]>[r31BD,r31BF,r31C1];
          tensor[3,3] tensor31C3#1 = <tensor[3,3]>[tensor31B4,tensor31BB,tensor31C2];
          real r31C4#9 = TensorIndex<tensor[3],[1]>(probe_l_62CC6);
          real r31C5#1 = RMul(r31C4,r31AE);
          real r31C6#1 = RMul(r31C4,r31B0);
          real r31C7#1 = RMul(r31C4,r31B2);
          tensor[3] tensor31C8#1 = <tensor[3]>[r31C5,r31C6,r31C7];
          real r31C9#1 = RMul(r31C4,r31B5);
          real r31CA#1 = RMul(r31C4,r31B7);
          real r31CB#1 = RMul(r31C4,r31B9);
          tensor[3] tensor31CC#1 = <tensor[3]>[r31C9,r31CA,r31CB];
          real r31CD#1 = RMul(r31C4,r31BC);
          real r31CE#1 = RMul(r31C4,r31BE);
          real r31CF#1 = RMul(r31C4,r31C0);
          tensor[3] tensor31D0#1 = <tensor[3]>[r31CD,r31CE,r31CF];
          tensor[3,3] tensor31D1#1 = <tensor[3,3]>[tensor31C8,tensor31CC,tensor31D0];
          real r31D2#9 = TensorIndex<tensor[3],[2]>(probe_l_62CC6);
          real r31D3#1 = RMul(r31D2,r31AE);
          real r31D4#1 = RMul(r31D2,r31B0);
          real r31D5#1 = RMul(r31D2,r31B2);
          tensor[3] tensor31D6#1 = <tensor[3]>[r31D3,r31D4,r31D5];
          real r31D7#1 = RMul(r31D2,r31B5);
          real r31D8#1 = RMul(r31D2,r31B7);
          real r31D9#1 = RMul(r31D2,r31B9);
          tensor[3] tensor31DA#1 = <tensor[3]>[r31D7,r31D8,r31D9];
          real r31DB#1 = RMul(r31D2,r31BC);
          real r31DC#1 = RMul(r31D2,r31BE);
          real r31DD#1 = RMul(r31D2,r31C0);
          tensor[3] tensor31DE#1 = <tensor[3]>[r31DB,r31DC,r31DD];
          tensor[3,3] tensor31DF#1 = <tensor[3,3]>[tensor31D6,tensor31DA,tensor31DE];
          tensor[3,3,3] op1_e3_l_3831AC#9 = <tensor[3,3,3]>[tensor31C3,tensor31D1,tensor31DF];
          tensor[3] projParam3216#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_373143);
          tensor[3] projParam3217#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_3831AC);
          tensor[3] v3218#1 = VAdd<3>(projParam3216,projParam3217);
          tensor[3] projParam3219#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_373143);
          tensor[3] projParam321A#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_3831AC);
          tensor[3] v321B#1 = VAdd<3>(projParam3219,projParam321A);
          tensor[3] projParam321C#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_373143);
          tensor[3] projParam321D#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_3831AC);
          tensor[3] v321E#1 = VAdd<3>(projParam321C,projParam321D);
          tensor[3,3] tensor321F#1 = <tensor[3,3]>[v3218,v321B,v321E];
          tensor[3] projParam3220#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_373143);
          tensor[3] projParam3221#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_3831AC);
          tensor[3] v3222#1 = VAdd<3>(projParam3220,projParam3221);
          tensor[3] projParam3223#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_373143);
          tensor[3] projParam3224#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_3831AC);
          tensor[3] v3225#1 = VAdd<3>(projParam3223,projParam3224);
          tensor[3] projParam3226#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_373143);
          tensor[3] projParam3227#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_3831AC);
          tensor[3] v3228#1 = VAdd<3>(projParam3226,projParam3227);
          tensor[3,3] tensor3229#1 = <tensor[3,3]>[v3222,v3225,v3228];
          tensor[3] projParam322A#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_373143);
          tensor[3] projParam322B#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_3831AC);
          tensor[3] v322C#1 = VAdd<3>(projParam322A,projParam322B);
          tensor[3] projParam322D#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_373143);
          tensor[3] projParam322E#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_3831AC);
          tensor[3] v322F#1 = VAdd<3>(projParam322D,projParam322E);
          tensor[3] projParam3230#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_373143);
          tensor[3] projParam3231#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_3831AC);
          tensor[3] v3232#1 = VAdd<3>(projParam3230,projParam3231);
          tensor[3,3] tensor3233#1 = <tensor[3,3]>[v322C,v322F,v3232];
          tensor[3,3,3] op1_e3_l_393215#27 = <tensor[3,3,3]>[tensor321F,tensor3229,tensor3233];
          real r3255#3 = TensorIndex<tensor[3],[0]>(probe_l_62CC6);
          real r3256#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_242D96);
          real r3257#1 = RMul(r3255,r3256);
          real r3258#3 = TensorIndex<tensor[3],[1]>(probe_l_62CC6);
          real r3259#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_242D96);
          real r325A#1 = RMul(r3258,r3259);
          real r325B#3 = TensorIndex<tensor[3],[2]>(probe_l_62CC6);
          real r325C#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_242D96);
          real r325D#1 = RMul(r325B,r325C);
          real r325E#1 = RAdd(r3257,r325A);
          real r325F#1 = RAdd(r325E,r325D);
          real r3260#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_242D96);
          real r3261#1 = RMul(r3255,r3260);
          real r3262#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_242D96);
          real r3263#1 = RMul(r3258,r3262);
          real r3264#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_242D96);
          real r3265#1 = RMul(r325B,r3264);
          real r3266#1 = RAdd(r3261,r3263);
          real r3267#1 = RAdd(r3266,r3265);
          real r3268#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_242D96);
          real r3269#1 = RMul(r3255,r3268);
          real r326A#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_242D96);
          real r326B#1 = RMul(r3258,r326A);
          real r326C#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_242D96);
          real r326D#1 = RMul(r325B,r326C);
          real r326E#1 = RAdd(r3269,r326B);
          real r326F#1 = RAdd(r326E,r326D);
          tensor[3] op1_e3_l_413254#3 = <tensor[3]>[r325F,r3267,r326F];
          real r328E#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_393215);
          real r328F#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_232CFB);
          real r3290#1 = RMul(r328E,r328F);
          real r3291#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_393215);
          real r3292#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_232CFB);
          real r3293#1 = RMul(r3291,r3292);
          real r3294#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_393215);
          real r3295#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_232CFB);
          real r3296#1 = RMul(r3294,r3295);
          real r3297#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_393215);
          real r3298#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_232CFB);
          real r3299#1 = RMul(r3297,r3298);
          real r329A#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_393215);
          real r329B#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_232CFB);
          real r329C#1 = RMul(r329A,r329B);
          real r329D#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_393215);
          real r329E#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_232CFB);
          real r329F#1 = RMul(r329D,r329E);
          real r32A0#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_393215);
          real r32A1#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_232CFB);
          real r32A2#1 = RMul(r32A0,r32A1);
          real r32A3#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_393215);
          real r32A4#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_232CFB);
          real r32A5#1 = RMul(r32A3,r32A4);
          real r32A6#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_393215);
          real r32A7#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_232CFB);
          real r32A8#1 = RMul(r32A6,r32A7);
          real r32A9#1 = RAdd(r3290,r3293);
          real r32AA#1 = RAdd(r32A9,r3296);
          real r32AB#1 = RAdd(r32AA,r3299);
          real r32AC#1 = RAdd(r32AB,r329C);
          real r32AD#1 = RAdd(r32AC,r329F);
          real r32AE#1 = RAdd(r32AD,r32A2);
          real r32AF#1 = RAdd(r32AE,r32A5);
          real r32B0#1 = RAdd(r32AF,r32A8);
          real r32B1#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_232CFB);
          real r32B2#1 = RMul(r328E,r32B1);
          real r32B3#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_232CFB);
          real r32B4#1 = RMul(r3291,r32B3);
          real r32B5#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_232CFB);
          real r32B6#1 = RMul(r3294,r32B5);
          real r32B7#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_232CFB);
          real r32B8#1 = RMul(r3297,r32B7);
          real r32B9#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_232CFB);
          real r32BA#1 = RMul(r329A,r32B9);
          real r32BB#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_232CFB);
          real r32BC#1 = RMul(r329D,r32BB);
          real r32BD#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_232CFB);
          real r32BE#1 = RMul(r32A0,r32BD);
          real r32BF#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_232CFB);
          real r32C0#1 = RMul(r32A3,r32BF);
          real r32C1#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_232CFB);
          real r32C2#1 = RMul(r32A6,r32C1);
          real r32C3#1 = RAdd(r32B2,r32B4);
          real r32C4#1 = RAdd(r32C3,r32B6);
          real r32C5#1 = RAdd(r32C4,r32B8);
          real r32C6#1 = RAdd(r32C5,r32BA);
          real r32C7#1 = RAdd(r32C6,r32BC);
          real r32C8#1 = RAdd(r32C7,r32BE);
          real r32C9#1 = RAdd(r32C8,r32C0);
          real r32CA#1 = RAdd(r32C9,r32C2);
          real r32CB#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_232CFB);
          real r32CC#1 = RMul(r328E,r32CB);
          real r32CD#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_232CFB);
          real r32CE#1 = RMul(r3291,r32CD);
          real r32CF#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_232CFB);
          real r32D0#1 = RMul(r3294,r32CF);
          real r32D1#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_232CFB);
          real r32D2#1 = RMul(r3297,r32D1);
          real r32D3#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_232CFB);
          real r32D4#1 = RMul(r329A,r32D3);
          real r32D5#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_232CFB);
          real r32D6#1 = RMul(r329D,r32D5);
          real r32D7#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_232CFB);
          real r32D8#1 = RMul(r32A0,r32D7);
          real r32D9#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_232CFB);
          real r32DA#1 = RMul(r32A3,r32D9);
          real r32DB#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_232CFB);
          real r32DC#1 = RMul(r32A6,r32DB);
          real r32DD#1 = RAdd(r32CC,r32CE);
          real r32DE#1 = RAdd(r32DD,r32D0);
          real r32DF#1 = RAdd(r32DE,r32D2);
          real r32E0#1 = RAdd(r32DF,r32D4);
          real r32E1#1 = RAdd(r32E0,r32D6);
          real r32E2#1 = RAdd(r32E1,r32D8);
          real r32E3#1 = RAdd(r32E2,r32DA);
          real r32E4#1 = RAdd(r32E3,r32DC);
          tensor[3] tensor32E5#1 = <tensor[3]>[r32B0,r32CA,r32E4];
          real r32E6#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_393215);
          real r32E7#1 = RMul(r32E6,r328F);
          real r32E8#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_393215);
          real r32E9#1 = RMul(r32E8,r3292);
          real r32EA#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_393215);
          real r32EB#1 = RMul(r32EA,r3295);
          real r32EC#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_393215);
          real r32ED#1 = RMul(r32EC,r3298);
          real r32EE#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_393215);
          real r32EF#1 = RMul(r32EE,r329B);
          real r32F0#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_393215);
          real r32F1#1 = RMul(r32F0,r329E);
          real r32F2#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_393215);
          real r32F3#1 = RMul(r32F2,r32A1);
          real r32F4#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_393215);
          real r32F5#1 = RMul(r32F4,r32A4);
          real r32F6#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_393215);
          real r32F7#1 = RMul(r32F6,r32A7);
          real r32F8#1 = RAdd(r32E7,r32E9);
          real r32F9#1 = RAdd(r32F8,r32EB);
          real r32FA#1 = RAdd(r32F9,r32ED);
          real r32FB#1 = RAdd(r32FA,r32EF);
          real r32FC#1 = RAdd(r32FB,r32F1);
          real r32FD#1 = RAdd(r32FC,r32F3);
          real r32FE#1 = RAdd(r32FD,r32F5);
          real r32FF#1 = RAdd(r32FE,r32F7);
          real r3300#1 = RMul(r32E6,r32B1);
          real r3301#1 = RMul(r32E8,r32B3);
          real r3302#1 = RMul(r32EA,r32B5);
          real r3303#1 = RMul(r32EC,r32B7);
          real r3304#1 = RMul(r32EE,r32B9);
          real r3305#1 = RMul(r32F0,r32BB);
          real r3306#1 = RMul(r32F2,r32BD);
          real r3307#1 = RMul(r32F4,r32BF);
          real r3308#1 = RMul(r32F6,r32C1);
          real r3309#1 = RAdd(r3300,r3301);
          real r330A#1 = RAdd(r3309,r3302);
          real r330B#1 = RAdd(r330A,r3303);
          real r330C#1 = RAdd(r330B,r3304);
          real r330D#1 = RAdd(r330C,r3305);
          real r330E#1 = RAdd(r330D,r3306);
          real r330F#1 = RAdd(r330E,r3307);
          real r3310#1 = RAdd(r330F,r3308);
          real r3311#1 = RMul(r32E6,r32CB);
          real r3312#1 = RMul(r32E8,r32CD);
          real r3313#1 = RMul(r32EA,r32CF);
          real r3314#1 = RMul(r32EC,r32D1);
          real r3315#1 = RMul(r32EE,r32D3);
          real r3316#1 = RMul(r32F0,r32D5);
          real r3317#1 = RMul(r32F2,r32D7);
          real r3318#1 = RMul(r32F4,r32D9);
          real r3319#1 = RMul(r32F6,r32DB);
          real r331A#1 = RAdd(r3311,r3312);
          real r331B#1 = RAdd(r331A,r3313);
          real r331C#1 = RAdd(r331B,r3314);
          real r331D#1 = RAdd(r331C,r3315);
          real r331E#1 = RAdd(r331D,r3316);
          real r331F#1 = RAdd(r331E,r3317);
          real r3320#1 = RAdd(r331F,r3318);
          real r3321#1 = RAdd(r3320,r3319);
          tensor[3] tensor3322#1 = <tensor[3]>[r32FF,r3310,r3321];
          real r3323#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_393215);
          real r3324#1 = RMul(r3323,r328F);
          real r3325#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_393215);
          real r3326#1 = RMul(r3325,r3292);
          real r3327#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_393215);
          real r3328#1 = RMul(r3327,r3295);
          real r3329#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_393215);
          real r332A#1 = RMul(r3329,r3298);
          real r332B#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_393215);
          real r332C#1 = RMul(r332B,r329B);
          real r332D#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_393215);
          real r332E#1 = RMul(r332D,r329E);
          real r332F#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_393215);
          real r3330#1 = RMul(r332F,r32A1);
          real r3331#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_393215);
          real r3332#1 = RMul(r3331,r32A4);
          real r3333#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_393215);
          real r3334#1 = RMul(r3333,r32A7);
          real r3335#1 = RAdd(r3324,r3326);
          real r3336#1 = RAdd(r3335,r3328);
          real r3337#1 = RAdd(r3336,r332A);
          real r3338#1 = RAdd(r3337,r332C);
          real r3339#1 = RAdd(r3338,r332E);
          real r333A#1 = RAdd(r3339,r3330);
          real r333B#1 = RAdd(r333A,r3332);
          real r333C#1 = RAdd(r333B,r3334);
          real r333D#1 = RMul(r3323,r32B1);
          real r333E#1 = RMul(r3325,r32B3);
          real r333F#1 = RMul(r3327,r32B5);
          real r3340#1 = RMul(r3329,r32B7);
          real r3341#1 = RMul(r332B,r32B9);
          real r3342#1 = RMul(r332D,r32BB);
          real r3343#1 = RMul(r332F,r32BD);
          real r3344#1 = RMul(r3331,r32BF);
          real r3345#1 = RMul(r3333,r32C1);
          real r3346#1 = RAdd(r333D,r333E);
          real r3347#1 = RAdd(r3346,r333F);
          real r3348#1 = RAdd(r3347,r3340);
          real r3349#1 = RAdd(r3348,r3341);
          real r334A#1 = RAdd(r3349,r3342);
          real r334B#1 = RAdd(r334A,r3343);
          real r334C#1 = RAdd(r334B,r3344);
          real r334D#1 = RAdd(r334C,r3345);
          real r334E#1 = RMul(r3323,r32CB);
          real r334F#1 = RMul(r3325,r32CD);
          real r3350#1 = RMul(r3327,r32CF);
          real r3351#1 = RMul(r3329,r32D1);
          real r3352#1 = RMul(r332B,r32D3);
          real r3353#1 = RMul(r332D,r32D5);
          real r3354#1 = RMul(r332F,r32D7);
          real r3355#1 = RMul(r3331,r32D9);
          real r3356#1 = RMul(r3333,r32DB);
          real r3357#1 = RAdd(r334E,r334F);
          real r3358#1 = RAdd(r3357,r3350);
          real r3359#1 = RAdd(r3358,r3351);
          real r335A#1 = RAdd(r3359,r3352);
          real r335B#1 = RAdd(r335A,r3353);
          real r335C#1 = RAdd(r335B,r3354);
          real r335D#1 = RAdd(r335C,r3355);
          real r335E#1 = RAdd(r335D,r3356);
          tensor[3] tensor335F#1 = <tensor[3]>[r333C,r334D,r335E];
          tensor[3,3] op1_e3_l_42328D#3 = <tensor[3,3]>[tensor32E5,tensor3322,tensor335F];
          tensor[3] projParam3435#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_42328D);
          real vdot3436#1 = VDot<3>(op1_e3_l_413254,projParam3435);
          tensor[3] projParam3437#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_42328D);
          real vdot3438#1 = VDot<3>(op1_e3_l_413254,projParam3437);
          tensor[3] projParam3439#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_42328D);
          real vdot343A#1 = VDot<3>(op1_e3_l_413254,projParam3439);
          tensor[3] op1_e3_l_673434#2 = <tensor[3]>[vdot3436,vdot3438,vdot343A];
          tensor[3] op1_e3_l_1193443#2 = VAdd<3>(op1_e3_l_673434,op1_e3_l_673434);
          real op1_e3_l_1213446#1 = VDot<3>(op1_e3_l_1193443,op1_e3_l_1193443);
          real _t3449#1 = Sqrt(op1_e3_l_1213446);
          real _t344C#1 = 0.1e-7;
          bool _t344E#1 = GT<real>(_t3449,_t344C);
          if _t344E then goto ASSIGN3452 else goto ASSIGN5396
        ASSIGN3452:  preds = [COND3450]
          bool _t3451#1 = true;
          goto JOIN3455
        JOIN3455:  preds = [ASSIGN3452,ASSIGN5396]
          bool _t3453#1 = phi(_t3451,_t3454)
          goto JOIN3458
        JOIN3458:  preds = [JOIN3455,ASSIGN5397]
          bool _t3456#1 = phi(_t3453,_t3457)
          goto JOIN345B
        JOIN345B:  preds = [JOIN3458,ASSIGN5398]
          bool _t3459#1 = phi(_t3456,_t345A)
          goto JOIN345E
        JOIN345E:  preds = [JOIN345B,ASSIGN5399]
          bool _t345C#1 = phi(_t3459,_t345D)
          bool _t345F#1 = BNot(_t345C);
          if _t345F then goto SAVE3462 else goto JOIN3464
        SAVE3462:  preds = [COND3461]
          self.rayN = rayN243D;
          active
          goto JOIN3464
        JOIN3464:  preds = [*ACTIVE3463,COND3461]
          real _t3465#8 = 0.e0;
          real _t3467#10 = 0.1e1;
          real _t3469#1 = 0.15e1;
          int ilit346C#1 = 84;
          int mulRes346D#84 = IMul(_t2401,ilit346C);
          int ilit346E#1 = 0;
          int addRes346F#1 = IAdd(mulRes346D,ilit346E);
          int idx3470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes346F);
          int ilit3471#1 = 1;
          int addRes3472#1 = IAdd(mulRes346D,ilit3471);
          int idx3473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3472);
          int ilit3474#1 = 2;
          int addRes3475#1 = IAdd(mulRes346D,ilit3474);
          int idx3476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3475);
          int ilit3477#1 = 3;
          int addRes3478#1 = IAdd(mulRes346D,ilit3477);
          int idx3479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3478);
          int ilit347A#1 = 4;
          int addRes347B#1 = IAdd(mulRes346D,ilit347A);
          int idx347C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347B);
          int ilit347D#1 = 5;
          int addRes347E#1 = IAdd(mulRes346D,ilit347D);
          int idx347F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347E);
          int ilit3480#1 = 6;
          int addRes3481#1 = IAdd(mulRes346D,ilit3480);
          int idx3482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3481);
          int ilit3483#1 = 7;
          int addRes3484#1 = IAdd(mulRes346D,ilit3483);
          int idx3485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3484);
          int ilit3486#1 = 8;
          int addRes3487#1 = IAdd(mulRes346D,ilit3486);
          int idx3488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3487);
          int ilit3489#1 = 9;
          int addRes348A#1 = IAdd(mulRes346D,ilit3489);
          int idx348B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348A);
          int ilit348C#1 = 10;
          int addRes348D#1 = IAdd(mulRes346D,ilit348C);
          int idx348E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348D);
          int ilit348F#1 = 11;
          int addRes3490#1 = IAdd(mulRes346D,ilit348F);
          int idx3491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3490);
          int ilit3492#1 = 12;
          int addRes3493#1 = IAdd(mulRes346D,ilit3492);
          int idx3494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3493);
          int ilit3495#1 = 13;
          int addRes3496#1 = IAdd(mulRes346D,ilit3495);
          int idx3497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3496);
          int ilit3498#1 = 14;
          int addRes3499#1 = IAdd(mulRes346D,ilit3498);
          int idx349A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3499);
          int ilit349B#1 = 15;
          int addRes349C#1 = IAdd(mulRes346D,ilit349B);
          int idx349D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349C);
          int ilit349E#1 = 16;
          int addRes349F#1 = IAdd(mulRes346D,ilit349E);
          int idx34A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349F);
          int ilit34A1#1 = 17;
          int addRes34A2#1 = IAdd(mulRes346D,ilit34A1);
          int idx34A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A2);
          int ilit34A4#1 = 18;
          int addRes34A5#1 = IAdd(mulRes346D,ilit34A4);
          int idx34A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A5);
          int ilit34A7#1 = 19;
          int addRes34A8#1 = IAdd(mulRes346D,ilit34A7);
          int idx34A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A8);
          int ilit34AA#1 = 20;
          int addRes34AB#1 = IAdd(mulRes346D,ilit34AA);
          int idx34AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AB);
          int ilit34AD#1 = 21;
          int addRes34AE#1 = IAdd(mulRes346D,ilit34AD);
          int idx34AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AE);
          int ilit34B0#1 = 22;
          int addRes34B1#1 = IAdd(mulRes346D,ilit34B0);
          int idx34B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B1);
          int ilit34B3#1 = 23;
          int addRes34B4#1 = IAdd(mulRes346D,ilit34B3);
          int idx34B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B4);
          int ilit34B6#1 = 24;
          int addRes34B7#1 = IAdd(mulRes346D,ilit34B6);
          int idx34B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B7);
          int ilit34B9#1 = 25;
          int addRes34BA#1 = IAdd(mulRes346D,ilit34B9);
          int idx34BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BA);
          int ilit34BC#1 = 26;
          int addRes34BD#1 = IAdd(mulRes346D,ilit34BC);
          int idx34BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BD);
          int ilit34BF#1 = 27;
          int addRes34C0#1 = IAdd(mulRes346D,ilit34BF);
          int idx34C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C0);
          int ilit34C2#1 = 28;
          int addRes34C3#1 = IAdd(mulRes346D,ilit34C2);
          int idx34C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C3);
          int ilit34C5#1 = 29;
          int addRes34C6#1 = IAdd(mulRes346D,ilit34C5);
          int idx34C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C6);
          int ilit34C8#1 = 30;
          int addRes34C9#1 = IAdd(mulRes346D,ilit34C8);
          int idx34CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C9);
          int ilit34CB#1 = 31;
          int addRes34CC#1 = IAdd(mulRes346D,ilit34CB);
          int idx34CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CC);
          int ilit34CE#1 = 32;
          int addRes34CF#1 = IAdd(mulRes346D,ilit34CE);
          int idx34D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CF);
          int ilit34D1#1 = 33;
          int addRes34D2#1 = IAdd(mulRes346D,ilit34D1);
          int idx34D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D2);
          int ilit34D4#1 = 34;
          int addRes34D5#1 = IAdd(mulRes346D,ilit34D4);
          int idx34D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D5);
          int ilit34D7#1 = 35;
          int addRes34D8#1 = IAdd(mulRes346D,ilit34D7);
          int idx34D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D8);
          int ilit34DA#1 = 36;
          int addRes34DB#1 = IAdd(mulRes346D,ilit34DA);
          int idx34DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DB);
          int ilit34DD#1 = 37;
          int addRes34DE#1 = IAdd(mulRes346D,ilit34DD);
          int idx34DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DE);
          int ilit34E0#1 = 38;
          int addRes34E1#1 = IAdd(mulRes346D,ilit34E0);
          int idx34E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E1);
          int ilit34E3#1 = 39;
          int addRes34E4#1 = IAdd(mulRes346D,ilit34E3);
          int idx34E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E4);
          int ilit34E6#1 = 40;
          int addRes34E7#1 = IAdd(mulRes346D,ilit34E6);
          int idx34E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E7);
          int ilit34E9#1 = 41;
          int addRes34EA#1 = IAdd(mulRes346D,ilit34E9);
          int idx34EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34EA);
          int ilit34EC#1 = 42;
          int addRes34ED#1 = IAdd(mulRes346D,ilit34EC);
          int idx34EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34ED);
          int ilit34EF#1 = 43;
          int addRes34F0#1 = IAdd(mulRes346D,ilit34EF);
          int idx34F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F0);
          int ilit34F2#1 = 44;
          int addRes34F3#1 = IAdd(mulRes346D,ilit34F2);
          int idx34F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F3);
          int ilit34F5#1 = 45;
          int addRes34F6#1 = IAdd(mulRes346D,ilit34F5);
          int idx34F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F6);
          int ilit34F8#1 = 46;
          int addRes34F9#1 = IAdd(mulRes346D,ilit34F8);
          int idx34FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F9);
          int ilit34FB#1 = 47;
          int addRes34FC#1 = IAdd(mulRes346D,ilit34FB);
          int idx34FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FC);
          int ilit34FE#1 = 48;
          int addRes34FF#1 = IAdd(mulRes346D,ilit34FE);
          int idx3500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FF);
          int ilit3501#1 = 49;
          int addRes3502#1 = IAdd(mulRes346D,ilit3501);
          int idx3503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3502);
          int ilit3504#1 = 50;
          int addRes3505#1 = IAdd(mulRes346D,ilit3504);
          int idx3506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3505);
          int ilit3507#1 = 51;
          int addRes3508#1 = IAdd(mulRes346D,ilit3507);
          int idx3509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3508);
          int ilit350A#1 = 52;
          int addRes350B#1 = IAdd(mulRes346D,ilit350A);
          int idx350C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350B);
          int ilit350D#1 = 53;
          int addRes350E#1 = IAdd(mulRes346D,ilit350D);
          int idx350F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350E);
          int ilit3510#1 = 54;
          int addRes3511#1 = IAdd(mulRes346D,ilit3510);
          int idx3512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3511);
          int ilit3513#1 = 55;
          int addRes3514#1 = IAdd(mulRes346D,ilit3513);
          int idx3515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3514);
          int ilit3516#1 = 56;
          int addRes3517#1 = IAdd(mulRes346D,ilit3516);
          int idx3518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3517);
          int ilit3519#1 = 57;
          int addRes351A#1 = IAdd(mulRes346D,ilit3519);
          int idx351B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351A);
          int ilit351C#1 = 58;
          int addRes351D#1 = IAdd(mulRes346D,ilit351C);
          int idx351E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351D);
          int ilit351F#1 = 59;
          int addRes3520#1 = IAdd(mulRes346D,ilit351F);
          int idx3521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3520);
          int ilit3522#1 = 60;
          int addRes3523#1 = IAdd(mulRes346D,ilit3522);
          int idx3524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3523);
          int ilit3525#1 = 61;
          int addRes3526#1 = IAdd(mulRes346D,ilit3525);
          int idx3527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3526);
          int ilit3528#1 = 62;
          int addRes3529#1 = IAdd(mulRes346D,ilit3528);
          int idx352A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3529);
          int ilit352B#1 = 63;
          int addRes352C#1 = IAdd(mulRes346D,ilit352B);
          int idx352D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352C);
          int ilit352E#1 = 64;
          int addRes352F#1 = IAdd(mulRes346D,ilit352E);
          int idx3530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352F);
          int ilit3531#1 = 65;
          int addRes3532#1 = IAdd(mulRes346D,ilit3531);
          int idx3533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3532);
          int ilit3534#1 = 66;
          int addRes3535#1 = IAdd(mulRes346D,ilit3534);
          int idx3536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3535);
          int ilit3537#1 = 67;
          int addRes3538#1 = IAdd(mulRes346D,ilit3537);
          int idx3539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3538);
          int ilit353A#1 = 68;
          int addRes353B#1 = IAdd(mulRes346D,ilit353A);
          int idx353C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353B);
          int ilit353D#1 = 69;
          int addRes353E#1 = IAdd(mulRes346D,ilit353D);
          int idx353F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353E);
          int ilit3540#1 = 70;
          int addRes3541#1 = IAdd(mulRes346D,ilit3540);
          int idx3542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3541);
          int ilit3543#1 = 71;
          int addRes3544#1 = IAdd(mulRes346D,ilit3543);
          int idx3545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3544);
          int ilit3546#1 = 72;
          int addRes3547#1 = IAdd(mulRes346D,ilit3546);
          int idx3548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3547);
          int ilit3549#1 = 73;
          int addRes354A#1 = IAdd(mulRes346D,ilit3549);
          int idx354B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354A);
          int ilit354C#1 = 74;
          int addRes354D#1 = IAdd(mulRes346D,ilit354C);
          int idx354E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354D);
          int ilit354F#1 = 75;
          int addRes3550#1 = IAdd(mulRes346D,ilit354F);
          int idx3551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3550);
          int ilit3552#1 = 76;
          int addRes3553#1 = IAdd(mulRes346D,ilit3552);
          int idx3554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3553);
          int ilit3555#1 = 77;
          int addRes3556#1 = IAdd(mulRes346D,ilit3555);
          int idx3557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3556);
          int ilit3558#1 = 78;
          int addRes3559#1 = IAdd(mulRes346D,ilit3558);
          int idx355A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3559);
          int ilit355B#1 = 79;
          int addRes355C#1 = IAdd(mulRes346D,ilit355B);
          int idx355D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355C);
          int ilit355E#1 = 80;
          int addRes355F#1 = IAdd(mulRes346D,ilit355E);
          int idx3560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355F);
          int ilit3561#1 = 81;
          int addRes3562#1 = IAdd(mulRes346D,ilit3561);
          int idx3563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3562);
          int ilit3564#1 = 82;
          int addRes3565#1 = IAdd(mulRes346D,ilit3564);
          int idx3566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3565);
          int ilit3567#1 = 83;
          int addRes3568#1 = IAdd(mulRes346D,ilit3567);
          int idx3569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3568);
          int[84] seq356A#1 = <int[84]>{idx3470,idx3473,idx3476,idx3479,idx347C,idx347F,idx3482,idx3485,idx3488,idx348B,idx348E,idx3491,idx3494,idx3497,idx349A,idx349D,idx34A0,idx34A3,idx34A6,idx34A9,idx34AC,idx34AF,idx34B2,idx34B5,idx34B8,idx34BB,idx34BE,idx34C1,idx34C4,idx34C7,idx34CA,idx34CD,idx34D0,idx34D3,idx34D6,idx34D9,idx34DC,idx34DF,idx34E2,idx34E5,idx34E8,idx34EB,idx34EE,idx34F1,idx34F4,idx34F7,idx34FA,idx34FD,idx3500,idx3503,idx3506,idx3509,idx350C,idx350F,idx3512,idx3515,idx3518,idx351B,idx351E,idx3521,idx3524,idx3527,idx352A,idx352D,idx3530,idx3533,idx3536,idx3539,idx353C,idx353F,idx3542,idx3545,idx3548,idx354B,idx354E,idx3551,idx3554,idx3557,idx355A,idx355D,idx3560,idx3563,idx3566,idx3569};
          int[84] femIndicies346B#84 = seq356A;
          int ilit366C#85 = 1;
          int ilit366D#1 = 0;
          int idx366E#1 = Subscript<int>(femIndicies346B,ilit366D);
          int mulRes366F#1 = IMul(ilit366C,idx366E);
          int idx3670#1 = Subscript<int>(femIndicies346B,ilit366C);
          int mulRes3671#1 = IMul(ilit366C,idx3670);
          int ilit3672#1 = 2;
          int idx3673#1 = Subscript<int>(femIndicies346B,ilit3672);
          int mulRes3674#1 = IMul(ilit366C,idx3673);
          int ilit3675#1 = 3;
          int idx3676#1 = Subscript<int>(femIndicies346B,ilit3675);
          int mulRes3677#1 = IMul(ilit366C,idx3676);
          int ilit3678#1 = 4;
          int idx3679#1 = Subscript<int>(femIndicies346B,ilit3678);
          int mulRes367A#1 = IMul(ilit366C,idx3679);
          int ilit367B#1 = 5;
          int idx367C#1 = Subscript<int>(femIndicies346B,ilit367B);
          int mulRes367D#1 = IMul(ilit366C,idx367C);
          int ilit367E#1 = 6;
          int idx367F#1 = Subscript<int>(femIndicies346B,ilit367E);
          int mulRes3680#1 = IMul(ilit366C,idx367F);
          int ilit3681#1 = 7;
          int idx3682#1 = Subscript<int>(femIndicies346B,ilit3681);
          int mulRes3683#1 = IMul(ilit366C,idx3682);
          int ilit3684#1 = 8;
          int idx3685#1 = Subscript<int>(femIndicies346B,ilit3684);
          int mulRes3686#1 = IMul(ilit366C,idx3685);
          int ilit3687#1 = 9;
          int idx3688#1 = Subscript<int>(femIndicies346B,ilit3687);
          int mulRes3689#1 = IMul(ilit366C,idx3688);
          int ilit368A#1 = 10;
          int idx368B#1 = Subscript<int>(femIndicies346B,ilit368A);
          int mulRes368C#1 = IMul(ilit366C,idx368B);
          int ilit368D#1 = 11;
          int idx368E#1 = Subscript<int>(femIndicies346B,ilit368D);
          int mulRes368F#1 = IMul(ilit366C,idx368E);
          int ilit3690#1 = 12;
          int idx3691#1 = Subscript<int>(femIndicies346B,ilit3690);
          int mulRes3692#1 = IMul(ilit366C,idx3691);
          int ilit3693#1 = 13;
          int idx3694#1 = Subscript<int>(femIndicies346B,ilit3693);
          int mulRes3695#1 = IMul(ilit366C,idx3694);
          int ilit3696#1 = 14;
          int idx3697#1 = Subscript<int>(femIndicies346B,ilit3696);
          int mulRes3698#1 = IMul(ilit366C,idx3697);
          int ilit3699#1 = 15;
          int idx369A#1 = Subscript<int>(femIndicies346B,ilit3699);
          int mulRes369B#1 = IMul(ilit366C,idx369A);
          int ilit369C#1 = 16;
          int idx369D#1 = Subscript<int>(femIndicies346B,ilit369C);
          int mulRes369E#1 = IMul(ilit366C,idx369D);
          int ilit369F#1 = 17;
          int idx36A0#1 = Subscript<int>(femIndicies346B,ilit369F);
          int mulRes36A1#1 = IMul(ilit366C,idx36A0);
          int ilit36A2#1 = 18;
          int idx36A3#1 = Subscript<int>(femIndicies346B,ilit36A2);
          int mulRes36A4#1 = IMul(ilit366C,idx36A3);
          int ilit36A5#1 = 19;
          int idx36A6#1 = Subscript<int>(femIndicies346B,ilit36A5);
          int mulRes36A7#1 = IMul(ilit366C,idx36A6);
          int ilit36A8#1 = 20;
          int idx36A9#1 = Subscript<int>(femIndicies346B,ilit36A8);
          int mulRes36AA#1 = IMul(ilit366C,idx36A9);
          int ilit36AB#1 = 21;
          int idx36AC#1 = Subscript<int>(femIndicies346B,ilit36AB);
          int mulRes36AD#1 = IMul(ilit366C,idx36AC);
          int ilit36AE#1 = 22;
          int idx36AF#1 = Subscript<int>(femIndicies346B,ilit36AE);
          int mulRes36B0#1 = IMul(ilit366C,idx36AF);
          int ilit36B1#1 = 23;
          int idx36B2#1 = Subscript<int>(femIndicies346B,ilit36B1);
          int mulRes36B3#1 = IMul(ilit366C,idx36B2);
          int ilit36B4#1 = 24;
          int idx36B5#1 = Subscript<int>(femIndicies346B,ilit36B4);
          int mulRes36B6#1 = IMul(ilit366C,idx36B5);
          int ilit36B7#1 = 25;
          int idx36B8#1 = Subscript<int>(femIndicies346B,ilit36B7);
          int mulRes36B9#1 = IMul(ilit366C,idx36B8);
          int ilit36BA#1 = 26;
          int idx36BB#1 = Subscript<int>(femIndicies346B,ilit36BA);
          int mulRes36BC#1 = IMul(ilit366C,idx36BB);
          int ilit36BD#1 = 27;
          int idx36BE#1 = Subscript<int>(femIndicies346B,ilit36BD);
          int mulRes36BF#1 = IMul(ilit366C,idx36BE);
          int ilit36C0#1 = 28;
          int idx36C1#1 = Subscript<int>(femIndicies346B,ilit36C0);
          int mulRes36C2#1 = IMul(ilit366C,idx36C1);
          int ilit36C3#1 = 29;
          int idx36C4#1 = Subscript<int>(femIndicies346B,ilit36C3);
          int mulRes36C5#1 = IMul(ilit366C,idx36C4);
          int ilit36C6#1 = 30;
          int idx36C7#1 = Subscript<int>(femIndicies346B,ilit36C6);
          int mulRes36C8#1 = IMul(ilit366C,idx36C7);
          int ilit36C9#1 = 31;
          int idx36CA#1 = Subscript<int>(femIndicies346B,ilit36C9);
          int mulRes36CB#1 = IMul(ilit366C,idx36CA);
          int ilit36CC#1 = 32;
          int idx36CD#1 = Subscript<int>(femIndicies346B,ilit36CC);
          int mulRes36CE#1 = IMul(ilit366C,idx36CD);
          int ilit36CF#1 = 33;
          int idx36D0#1 = Subscript<int>(femIndicies346B,ilit36CF);
          int mulRes36D1#1 = IMul(ilit366C,idx36D0);
          int ilit36D2#1 = 34;
          int idx36D3#1 = Subscript<int>(femIndicies346B,ilit36D2);
          int mulRes36D4#1 = IMul(ilit366C,idx36D3);
          int ilit36D5#1 = 35;
          int idx36D6#1 = Subscript<int>(femIndicies346B,ilit36D5);
          int mulRes36D7#1 = IMul(ilit366C,idx36D6);
          int ilit36D8#1 = 36;
          int idx36D9#1 = Subscript<int>(femIndicies346B,ilit36D8);
          int mulRes36DA#1 = IMul(ilit366C,idx36D9);
          int ilit36DB#1 = 37;
          int idx36DC#1 = Subscript<int>(femIndicies346B,ilit36DB);
          int mulRes36DD#1 = IMul(ilit366C,idx36DC);
          int ilit36DE#1 = 38;
          int idx36DF#1 = Subscript<int>(femIndicies346B,ilit36DE);
          int mulRes36E0#1 = IMul(ilit366C,idx36DF);
          int ilit36E1#1 = 39;
          int idx36E2#1 = Subscript<int>(femIndicies346B,ilit36E1);
          int mulRes36E3#1 = IMul(ilit366C,idx36E2);
          int ilit36E4#1 = 40;
          int idx36E5#1 = Subscript<int>(femIndicies346B,ilit36E4);
          int mulRes36E6#1 = IMul(ilit366C,idx36E5);
          int ilit36E7#1 = 41;
          int idx36E8#1 = Subscript<int>(femIndicies346B,ilit36E7);
          int mulRes36E9#1 = IMul(ilit366C,idx36E8);
          int ilit36EA#1 = 42;
          int idx36EB#1 = Subscript<int>(femIndicies346B,ilit36EA);
          int mulRes36EC#1 = IMul(ilit366C,idx36EB);
          int ilit36ED#1 = 43;
          int idx36EE#1 = Subscript<int>(femIndicies346B,ilit36ED);
          int mulRes36EF#1 = IMul(ilit366C,idx36EE);
          int ilit36F0#1 = 44;
          int idx36F1#1 = Subscript<int>(femIndicies346B,ilit36F0);
          int mulRes36F2#1 = IMul(ilit366C,idx36F1);
          int ilit36F3#1 = 45;
          int idx36F4#1 = Subscript<int>(femIndicies346B,ilit36F3);
          int mulRes36F5#1 = IMul(ilit366C,idx36F4);
          int ilit36F6#1 = 46;
          int idx36F7#1 = Subscript<int>(femIndicies346B,ilit36F6);
          int mulRes36F8#1 = IMul(ilit366C,idx36F7);
          int ilit36F9#1 = 47;
          int idx36FA#1 = Subscript<int>(femIndicies346B,ilit36F9);
          int mulRes36FB#1 = IMul(ilit366C,idx36FA);
          int ilit36FC#1 = 48;
          int idx36FD#1 = Subscript<int>(femIndicies346B,ilit36FC);
          int mulRes36FE#1 = IMul(ilit366C,idx36FD);
          int ilit36FF#1 = 49;
          int idx3700#1 = Subscript<int>(femIndicies346B,ilit36FF);
          int mulRes3701#1 = IMul(ilit366C,idx3700);
          int ilit3702#1 = 50;
          int idx3703#1 = Subscript<int>(femIndicies346B,ilit3702);
          int mulRes3704#1 = IMul(ilit366C,idx3703);
          int ilit3705#1 = 51;
          int idx3706#1 = Subscript<int>(femIndicies346B,ilit3705);
          int mulRes3707#1 = IMul(ilit366C,idx3706);
          int ilit3708#1 = 52;
          int idx3709#1 = Subscript<int>(femIndicies346B,ilit3708);
          int mulRes370A#1 = IMul(ilit366C,idx3709);
          int ilit370B#1 = 53;
          int idx370C#1 = Subscript<int>(femIndicies346B,ilit370B);
          int mulRes370D#1 = IMul(ilit366C,idx370C);
          int ilit370E#1 = 54;
          int idx370F#1 = Subscript<int>(femIndicies346B,ilit370E);
          int mulRes3710#1 = IMul(ilit366C,idx370F);
          int ilit3711#1 = 55;
          int idx3712#1 = Subscript<int>(femIndicies346B,ilit3711);
          int mulRes3713#1 = IMul(ilit366C,idx3712);
          int ilit3714#1 = 56;
          int idx3715#1 = Subscript<int>(femIndicies346B,ilit3714);
          int mulRes3716#1 = IMul(ilit366C,idx3715);
          int ilit3717#1 = 57;
          int idx3718#1 = Subscript<int>(femIndicies346B,ilit3717);
          int mulRes3719#1 = IMul(ilit366C,idx3718);
          int ilit371A#1 = 58;
          int idx371B#1 = Subscript<int>(femIndicies346B,ilit371A);
          int mulRes371C#1 = IMul(ilit366C,idx371B);
          int ilit371D#1 = 59;
          int idx371E#1 = Subscript<int>(femIndicies346B,ilit371D);
          int mulRes371F#1 = IMul(ilit366C,idx371E);
          int ilit3720#1 = 60;
          int idx3721#1 = Subscript<int>(femIndicies346B,ilit3720);
          int mulRes3722#1 = IMul(ilit366C,idx3721);
          int ilit3723#1 = 61;
          int idx3724#1 = Subscript<int>(femIndicies346B,ilit3723);
          int mulRes3725#1 = IMul(ilit366C,idx3724);
          int ilit3726#1 = 62;
          int idx3727#1 = Subscript<int>(femIndicies346B,ilit3726);
          int mulRes3728#1 = IMul(ilit366C,idx3727);
          int ilit3729#1 = 63;
          int idx372A#1 = Subscript<int>(femIndicies346B,ilit3729);
          int mulRes372B#1 = IMul(ilit366C,idx372A);
          int ilit372C#1 = 64;
          int idx372D#1 = Subscript<int>(femIndicies346B,ilit372C);
          int mulRes372E#1 = IMul(ilit366C,idx372D);
          int ilit372F#1 = 65;
          int idx3730#1 = Subscript<int>(femIndicies346B,ilit372F);
          int mulRes3731#1 = IMul(ilit366C,idx3730);
          int ilit3732#1 = 66;
          int idx3733#1 = Subscript<int>(femIndicies346B,ilit3732);
          int mulRes3734#1 = IMul(ilit366C,idx3733);
          int ilit3735#1 = 67;
          int idx3736#1 = Subscript<int>(femIndicies346B,ilit3735);
          int mulRes3737#1 = IMul(ilit366C,idx3736);
          int ilit3738#1 = 68;
          int idx3739#1 = Subscript<int>(femIndicies346B,ilit3738);
          int mulRes373A#1 = IMul(ilit366C,idx3739);
          int ilit373B#1 = 69;
          int idx373C#1 = Subscript<int>(femIndicies346B,ilit373B);
          int mulRes373D#1 = IMul(ilit366C,idx373C);
          int ilit373E#1 = 70;
          int idx373F#1 = Subscript<int>(femIndicies346B,ilit373E);
          int mulRes3740#1 = IMul(ilit366C,idx373F);
          int ilit3741#1 = 71;
          int idx3742#1 = Subscript<int>(femIndicies346B,ilit3741);
          int mulRes3743#1 = IMul(ilit366C,idx3742);
          int ilit3744#1 = 72;
          int idx3745#1 = Subscript<int>(femIndicies346B,ilit3744);
          int mulRes3746#1 = IMul(ilit366C,idx3745);
          int ilit3747#1 = 73;
          int idx3748#1 = Subscript<int>(femIndicies346B,ilit3747);
          int mulRes3749#1 = IMul(ilit366C,idx3748);
          int ilit374A#1 = 74;
          int idx374B#1 = Subscript<int>(femIndicies346B,ilit374A);
          int mulRes374C#1 = IMul(ilit366C,idx374B);
          int ilit374D#1 = 75;
          int idx374E#1 = Subscript<int>(femIndicies346B,ilit374D);
          int mulRes374F#1 = IMul(ilit366C,idx374E);
          int ilit3750#1 = 76;
          int idx3751#1 = Subscript<int>(femIndicies346B,ilit3750);
          int mulRes3752#1 = IMul(ilit366C,idx3751);
          int ilit3753#1 = 77;
          int idx3754#1 = Subscript<int>(femIndicies346B,ilit3753);
          int mulRes3755#1 = IMul(ilit366C,idx3754);
          int ilit3756#1 = 78;
          int idx3757#1 = Subscript<int>(femIndicies346B,ilit3756);
          int mulRes3758#1 = IMul(ilit366C,idx3757);
          int ilit3759#1 = 79;
          int idx375A#1 = Subscript<int>(femIndicies346B,ilit3759);
          int mulRes375B#1 = IMul(ilit366C,idx375A);
          int ilit375C#1 = 80;
          int idx375D#1 = Subscript<int>(femIndicies346B,ilit375C);
          int mulRes375E#1 = IMul(ilit366C,idx375D);
          int ilit375F#1 = 81;
          int idx3760#1 = Subscript<int>(femIndicies346B,ilit375F);
          int mulRes3761#1 = IMul(ilit366C,idx3760);
          int ilit3762#1 = 82;
          int idx3763#1 = Subscript<int>(femIndicies346B,ilit3762);
          int mulRes3764#1 = IMul(ilit366C,idx3763);
          int ilit3765#1 = 83;
          int idx3766#1 = Subscript<int>(femIndicies346B,ilit3765);
          int mulRes3767#1 = IMul(ilit366C,idx3766);
          real dof3768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes366F);
          real dof3769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3671);
          real dof376A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3674);
          real dof376B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3677);
          real dof376C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367A);
          real dof376D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367D);
          real dof376E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3680);
          real dof376F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3683);
          real dof3770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3686);
          real dof3771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3689);
          real dof3772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368C);
          real dof3773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368F);
          real dof3774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3692);
          real dof3775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3695);
          real dof3776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3698);
          real dof3777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369B);
          real dof3778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369E);
          real dof3779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A1);
          real dof377A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A4);
          real dof377B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A7);
          real dof377C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AA);
          real dof377D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AD);
          real dof377E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B0);
          real dof377F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B3);
          real dof3780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B6);
          real dof3781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B9);
          real dof3782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BC);
          real dof3783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BF);
          real dof3784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C2);
          real dof3785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C5);
          real dof3786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C8);
          real dof3787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CB);
          real dof3788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CE);
          real dof3789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D1);
          real dof378A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D4);
          real dof378B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D7);
          real dof378C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DA);
          real dof378D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DD);
          real dof378E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E0);
          real dof378F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E3);
          real dof3790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E6);
          real dof3791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E9);
          real dof3792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EC);
          real dof3793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EF);
          real dof3794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F2);
          real dof3795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F5);
          real dof3796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F8);
          real dof3797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FB);
          real dof3798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FE);
          real dof3799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3701);
          real dof379A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3704);
          real dof379B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3707);
          real dof379C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370A);
          real dof379D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370D);
          real dof379E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3710);
          real dof379F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3713);
          real dof37A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3716);
          real dof37A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3719);
          real dof37A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371C);
          real dof37A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371F);
          real dof37A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3722);
          real dof37A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3725);
          real dof37A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3728);
          real dof37A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372B);
          real dof37A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372E);
          real dof37A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3731);
          real dof37AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3734);
          real dof37AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3737);
          real dof37AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373A);
          real dof37AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373D);
          real dof37AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3740);
          real dof37AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3743);
          real dof37B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3746);
          real dof37B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3749);
          real dof37B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374C);
          real dof37B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374F);
          real dof37B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3752);
          real dof37B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3755);
          real dof37B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3758);
          real dof37B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375B);
          real dof37B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375E);
          real dof37B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3761);
          real dof37BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3764);
          real dof37BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3767);
          tensor[84] dofs37BC#1 = <tensor[84]>[dof3768,dof3769,dof376A,dof376B,dof376C,dof376D,dof376E,dof376F,dof3770,dof3771,dof3772,dof3773,dof3774,dof3775,dof3776,dof3777,dof3778,dof3779,dof377A,dof377B,dof377C,dof377D,dof377E,dof377F,dof3780,dof3781,dof3782,dof3783,dof3784,dof3785,dof3786,dof3787,dof3788,dof3789,dof378A,dof378B,dof378C,dof378D,dof378E,dof378F,dof3790,dof3791,dof3792,dof3793,dof3794,dof3795,dof3796,dof3797,dof3798,dof3799,dof379A,dof379B,dof379C,dof379D,dof379E,dof379F,dof37A0,dof37A1,dof37A2,dof37A3,dof37A4,dof37A5,dof37A6,dof37A7,dof37A8,dof37A9,dof37AA,dof37AB,dof37AC,dof37AD,dof37AE,dof37AF,dof37B0,dof37B1,dof37B2,dof37B3,dof37B4,dof37B5,dof37B6,dof37B7,dof37B8,dof37B9,dof37BA,dof37BB];
          tensor[84] femDofs366B#40 = dofs37BC;
          real varAcc3910#5 = VIndex<3,0>(pos2449);
          real varAcc3911#5 = VIndex<3,1>(pos2449);
          real varAcc3912#5 = VIndex<3,2>(pos2449);
          real basisEval3913#84 = 0.e0;
          real coeff3914#79 = 0.1e1;
          real prod3915#6 = RMul(coeff3914,coeff3914);
          real prod3916#1 = RMul(coeff3914,prod3915);
          real basisEval3917#3 = RMul(coeff3914,prod3916);
          real iden3918#6 = varAcc3912;
          real prod3919#5 = RMul(coeff3914,iden3918);
          real prod391A#2 = RMul(coeff3914,prod3919);
          real basisEval391B#2 = RMul(coeff3914,prod391A);
          real iden391C#6 = varAcc3911;
          real prod391D#5 = RMul(iden391C,coeff3914);
          real prod391E#2 = RMul(coeff3914,prod391D);
          real basisEval391F#2 = RMul(coeff3914,prod391E);
          real coeff3920#34 = 0.2e1;
          real iden3921#16 = varAcc3910;
          real prod3922#2 = RMul(iden3921,prod3915);
          real basisEval3923#1 = RMul(coeff3920,prod3922);
          real prod23924#5 = RMul(iden3918,varAcc3912);
          real prod3925#4 = RMul(coeff3914,prod23924);
          real prod3926#2 = RMul(coeff3914,prod3925);
          real basisEval3927#2 = RMul(coeff3914,prod3926);
          real prod3928#4 = RMul(iden391C,iden3918);
          real prod3929#2 = RMul(coeff3914,prod3928);
          real basisEval392A#1 = RMul(coeff3914,prod3929);
          real prod2392B#5 = RMul(iden391C,varAcc3911);
          real prod392C#4 = RMul(prod2392B,coeff3914);
          real prod392D#2 = RMul(coeff3914,prod392C);
          real basisEval392E#2 = RMul(coeff3914,prod392D);
          real prod392F#2 = RMul(iden3921,prod3919);
          real basisEval3930#2 = RMul(coeff3920,prod392F);
          real prod3931#2 = RMul(iden3921,prod391D);
          real basisEval3932#2 = RMul(coeff3920,prod3931);
          real coeff3933#24 = 0.3e1;
          real prod23934#11 = RMul(iden3921,varAcc3910);
          real prod3935#2 = RMul(prod23934,prod3915);
          real basisEval3936#1 = RMul(coeff3933,prod3935);
          real prod33937#4 = RMul(prod23924,varAcc3912);
          real prod3938#3 = RMul(coeff3914,prod33937);
          real prod3939#2 = RMul(coeff3914,prod3938);
          real basisEval393A#2 = RMul(coeff3914,prod3939);
          real prod393B#3 = RMul(iden391C,prod23924);
          real prod393C#3 = RMul(coeff3914,prod393B);
          real basisEval393D#1 = RMul(coeff3914,prod393C);
          real prod393E#3 = RMul(prod2392B,iden3918);
          real prod393F#3 = RMul(coeff3914,prod393E);
          real basisEval3940#1 = RMul(coeff3914,prod393F);
          real prod33941#4 = RMul(prod2392B,varAcc3911);
          real prod3942#3 = RMul(prod33941,coeff3914);
          real prod3943#2 = RMul(coeff3914,prod3942);
          real basisEval3944#2 = RMul(coeff3914,prod3943);
          real prod3945#3 = RMul(iden3921,prod3925);
          real basisEval3946#1 = RMul(coeff3920,prod3945);
          real prod3947#1 = RMul(iden3921,prod3928);
          real basisEval3948#3 = RMul(coeff3920,prod3947);
          real prod3949#3 = RMul(iden3921,prod392C);
          real basisEval394A#1 = RMul(coeff3920,prod3949);
          real prod394B#3 = RMul(prod23934,prod3919);
          real basisEval394C#1 = RMul(coeff3933,prod394B);
          real prod394D#3 = RMul(prod23934,prod391D);
          real basisEval394E#1 = RMul(coeff3933,prod394D);
          real coeff394F#18 = 0.4e1;
          real prod33950#7 = RMul(prod23934,varAcc3910);
          real prod3951#2 = RMul(prod33950,prod3915);
          real basisEval3952#1 = RMul(coeff394F,prod3951);
          real prod43953#3 = RMul(prod33937,varAcc3912);
          real prod3954#2 = RMul(coeff3914,prod43953);
          real prod3955#2 = RMul(coeff3914,prod3954);
          real basisEval3956#2 = RMul(coeff3914,prod3955);
          real prod3957#2 = RMul(iden391C,prod33937);
          real prod3958#3 = RMul(coeff3914,prod3957);
          real basisEval3959#1 = RMul(coeff3914,prod3958);
          real prod395A#2 = RMul(prod2392B,prod23924);
          real prod395B#2 = RMul(coeff3914,prod395A);
          real basisEval395C#1 = RMul(coeff3914,prod395B);
          real prod395D#2 = RMul(prod33941,iden3918);
          real prod395E#3 = RMul(coeff3914,prod395D);
          real basisEval395F#1 = RMul(coeff3914,prod395E);
          real prod43960#3 = RMul(prod33941,varAcc3911);
          real prod3961#2 = RMul(prod43960,coeff3914);
          real prod3962#2 = RMul(coeff3914,prod3961);
          real basisEval3963#2 = RMul(coeff3914,prod3962);
          real prod3964#3 = RMul(iden3921,prod3938);
          real basisEval3965#1 = RMul(coeff3920,prod3964);
          real prod3966#2 = RMul(iden3921,prod393B);
          real basisEval3967#2 = RMul(coeff3920,prod3966);
          real prod3968#2 = RMul(iden3921,prod393E);
          real basisEval3969#2 = RMul(coeff3920,prod3968);
          real prod396A#3 = RMul(iden3921,prod3942);
          real basisEval396B#1 = RMul(coeff3920,prod396A);
          real prod396C#2 = RMul(prod23934,prod3925);
          real basisEval396D#2 = RMul(coeff3933,prod396C);
          real prod396E#2 = RMul(prod23934,prod3928);
          real basisEval396F#1 = RMul(coeff3933,prod396E);
          real prod3970#2 = RMul(prod23934,prod392C);
          real basisEval3971#2 = RMul(coeff3933,prod3970);
          real prod3972#3 = RMul(prod33950,prod3919);
          real basisEval3973#1 = RMul(coeff394F,prod3972);
          real prod3974#3 = RMul(prod33950,prod391D);
          real basisEval3975#1 = RMul(coeff394F,prod3974);
          real coeff3976#9 = 0.5e1;
          real prod43977#4 = RMul(prod33950,varAcc3910);
          real prod3978#2 = RMul(prod43977,prod3915);
          real basisEval3979#1 = RMul(coeff3976,prod3978);
          real prod5397A#1 = RMul(prod43953,varAcc3912);
          real prod397B#1 = RMul(coeff3914,prod5397A);
          real prod397C#2 = RMul(coeff3914,prod397B);
          real basisEval397D#2 = RMul(coeff3914,prod397C);
          real prod397E#1 = RMul(iden391C,prod43953);
          real prod397F#3 = RMul(coeff3914,prod397E);
          real basisEval3980#1 = RMul(coeff3914,prod397F);
          real prod3981#1 = RMul(prod2392B,prod33937);
          real prod3982#3 = RMul(coeff3914,prod3981);
          real basisEval3983#1 = RMul(coeff3914,prod3982);
          real prod3984#1 = RMul(prod33941,prod23924);
          real prod3985#3 = RMul(coeff3914,prod3984);
          real basisEval3986#1 = RMul(coeff3914,prod3985);
          real prod3987#1 = RMul(prod43960,iden3918);
          real prod3988#3 = RMul(coeff3914,prod3987);
          real basisEval3989#1 = RMul(coeff3914,prod3988);
          real prod5398A#1 = RMul(prod43960,varAcc3911);
          real prod398B#1 = RMul(prod5398A,coeff3914);
          real prod398C#2 = RMul(coeff3914,prod398B);
          real basisEval398D#2 = RMul(coeff3914,prod398C);
          real prod398E#3 = RMul(iden3921,prod3954);
          real basisEval398F#1 = RMul(coeff3920,prod398E);
          real prod3990#2 = RMul(iden3921,prod3957);
          real basisEval3991#2 = RMul(coeff3920,prod3990);
          real prod3992#2 = RMul(iden3921,prod395A);
          real basisEval3993#1 = RMul(coeff3920,prod3992);
          real prod3994#2 = RMul(iden3921,prod395D);
          real basisEval3995#2 = RMul(coeff3920,prod3994);
          real prod3996#3 = RMul(iden3921,prod3961);
          real basisEval3997#1 = RMul(coeff3920,prod3996);
          real prod3998#3 = RMul(prod23934,prod3938);
          real basisEval3999#1 = RMul(coeff3933,prod3998);
          real prod399A#2 = RMul(prod23934,prod393B);
          real basisEval399B#2 = RMul(coeff3933,prod399A);
          real prod399C#2 = RMul(prod23934,prod393E);
          real basisEval399D#2 = RMul(coeff3933,prod399C);
          real prod399E#3 = RMul(prod23934,prod3942);
          real basisEval399F#1 = RMul(coeff3933,prod399E);
          real prod39A0#3 = RMul(prod33950,prod3925);
          real basisEval39A1#1 = RMul(coeff394F,prod39A0);
          real prod39A2#2 = RMul(prod33950,prod3928);
          real basisEval39A3#1 = RMul(coeff394F,prod39A2);
          real prod39A4#3 = RMul(prod33950,prod392C);
          real basisEval39A5#1 = RMul(coeff394F,prod39A4);
          real prod39A6#3 = RMul(prod43977,prod3919);
          real basisEval39A7#1 = RMul(coeff3976,prod39A6);
          real prod39A8#3 = RMul(prod43977,prod391D);
          real basisEval39A9#1 = RMul(coeff3976,prod39A8);
          real coeff39AA#3 = 0.6e1;
          real prod539AB#1 = RMul(prod43977,varAcc3910);
          real prod39AC#2 = RMul(prod539AB,prod3915);
          real basisEval39AD#1 = RMul(coeff39AA,prod39AC);
          real basisEval39AE#1 = RMul(coeff3920,prod391E);
          real basisEval39AF#2 = RMul(coeff3914,prod3922);
          real basisEval39B0#2 = RMul(coeff3920,prod3929);
          real basisEval39B1#1 = RMul(coeff3933,prod392D);
          real basisEval39B2#1 = RMul(coeff3914,prod392F);
          real basisEval39B3#2 = RMul(coeff3914,prod3935);
          real basisEval39B4#1 = RMul(coeff3920,prod393C);
          real basisEval39B5#1 = RMul(coeff3933,prod393F);
          real basisEval39B6#1 = RMul(coeff394F,prod3943);
          real basisEval39B7#1 = RMul(coeff3914,prod3945);
          real basisEval39B8#1 = RMul(coeff3933,prod3949);
          real basisEval39B9#1 = RMul(coeff3914,prod394B);
          real basisEval39BA#1 = RMul(coeff3920,prod394D);
          real basisEval39BB#2 = RMul(coeff3914,prod3951);
          real basisEval39BC#1 = RMul(coeff3920,prod3958);
          real basisEval39BD#2 = RMul(coeff3933,prod395B);
          real basisEval39BE#1 = RMul(coeff394F,prod395E);
          real basisEval39BF#1 = RMul(coeff3976,prod3962);
          real basisEval39C0#1 = RMul(coeff3914,prod3964);
          real basisEval39C1#1 = RMul(coeff3933,prod3968);
          real basisEval39C2#1 = RMul(coeff394F,prod396A);
          real basisEval39C3#1 = RMul(coeff3914,prod396C);
          real basisEval39C4#2 = RMul(coeff3920,prod396E);
          real basisEval39C5#1 = RMul(coeff3914,prod3972);
          real basisEval39C6#1 = RMul(coeff3920,prod3974);
          real basisEval39C7#2 = RMul(coeff3914,prod3978);
          real basisEval39C8#1 = RMul(coeff3920,prod397F);
          real basisEval39C9#1 = RMul(coeff3933,prod3982);
          real basisEval39CA#1 = RMul(coeff394F,prod3985);
          real basisEval39CB#1 = RMul(coeff3976,prod3988);
          real basisEval39CC#1 = RMul(coeff39AA,prod398C);
          real basisEval39CD#1 = RMul(coeff3914,prod398E);
          real basisEval39CE#2 = RMul(coeff3933,prod3992);
          real basisEval39CF#1 = RMul(coeff394F,prod3994);
          real basisEval39D0#1 = RMul(coeff3976,prod3996);
          real basisEval39D1#1 = RMul(coeff3914,prod3998);
          real basisEval39D2#1 = RMul(coeff3920,prod399A);
          real basisEval39D3#1 = RMul(coeff394F,prod399E);
          real basisEval39D4#1 = RMul(coeff3914,prod39A0);
          real basisEval39D5#2 = RMul(coeff3920,prod39A2);
          real basisEval39D6#1 = RMul(coeff3933,prod39A4);
          real basisEval39D7#1 = RMul(coeff3914,prod39A6);
          real basisEval39D8#1 = RMul(coeff3920,prod39A8);
          real basisEval39D9#2 = RMul(coeff3914,prod39AC);
          real basisEval39DA#1 = RMul(coeff3920,prod391A);
          real basisEval39DB#1 = RMul(coeff3933,prod3926);
          real basisEval39DC#1 = RMul(coeff3914,prod3931);
          real basisEval39DD#1 = RMul(coeff394F,prod3939);
          real basisEval39DE#1 = RMul(coeff3933,prod393C);
          real basisEval39DF#1 = RMul(coeff3920,prod393F);
          real basisEval39E0#1 = RMul(coeff3933,prod3945);
          real basisEval39E1#1 = RMul(coeff3914,prod3949);
          real basisEval39E2#1 = RMul(coeff3920,prod394B);
          real basisEval39E3#1 = RMul(coeff3914,prod394D);
          real basisEval39E4#1 = RMul(coeff3976,prod3955);
          real basisEval39E5#1 = RMul(coeff394F,prod3958);
          real basisEval39E6#1 = RMul(coeff3920,prod395E);
          real basisEval39E7#1 = RMul(coeff394F,prod3964);
          real basisEval39E8#1 = RMul(coeff3933,prod3966);
          real basisEval39E9#1 = RMul(coeff3914,prod396A);
          real basisEval39EA#1 = RMul(coeff3914,prod3970);
          real basisEval39EB#1 = RMul(coeff3920,prod3972);
          real basisEval39EC#1 = RMul(coeff3914,prod3974);
          real basisEval39ED#1 = RMul(coeff39AA,prod397C);
          real basisEval39EE#1 = RMul(coeff3976,prod397F);
          real basisEval39EF#1 = RMul(coeff394F,prod3982);
          real basisEval39F0#1 = RMul(coeff3933,prod3985);
          real basisEval39F1#1 = RMul(coeff3920,prod3988);
          real basisEval39F2#1 = RMul(coeff3976,prod398E);
          real basisEval39F3#1 = RMul(coeff394F,prod3990);
          real basisEval39F4#1 = RMul(coeff3914,prod3996);
          real basisEval39F5#1 = RMul(coeff394F,prod3998);
          real basisEval39F6#1 = RMul(coeff3920,prod399C);
          real basisEval39F7#1 = RMul(coeff3914,prod399E);
          real basisEval39F8#1 = RMul(coeff3933,prod39A0);
          real basisEval39F9#1 = RMul(coeff3914,prod39A4);
          real basisEval39FA#1 = RMul(coeff3920,prod39A6);
          real basisEval39FB#1 = RMul(coeff3914,prod39A8);
          tensor[84] intermediateCons39FC#1 = <tensor[84]>[basisEval3913,basisEval3913,basisEval3913,basisEval3917,basisEval3913,basisEval3913,basisEval3913,basisEval391B,basisEval391F,basisEval3923,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3927,basisEval392A,basisEval392E,basisEval3930,basisEval3932,basisEval3936,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval393A,basisEval393D,basisEval3940,basisEval3944,basisEval3946,basisEval3948,basisEval394A,basisEval394C,basisEval394E,basisEval3952,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3956,basisEval3959,basisEval395C,basisEval395F,basisEval3963,basisEval3965,basisEval3967,basisEval3969,basisEval396B,basisEval396D,basisEval396F,basisEval3971,basisEval3973,basisEval3975,basisEval3979,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval397D,basisEval3980,basisEval3983,basisEval3986,basisEval3989,basisEval398D,basisEval398F,basisEval3991,basisEval3993,basisEval3995,basisEval3997,basisEval3999,basisEval399B,basisEval399D,basisEval399F,basisEval39A1,basisEval39A3,basisEval39A5,basisEval39A7,basisEval39A9,basisEval39AD];
          tensor[84] intermediateCons39FD#1 = <tensor[84]>[basisEval3913,basisEval3913,basisEval3917,basisEval3913,basisEval3913,basisEval391B,basisEval39AE,basisEval3913,basisEval39AF,basisEval3913,basisEval3913,basisEval3927,basisEval39B0,basisEval39B1,basisEval3913,basisEval39B2,basisEval3932,basisEval3913,basisEval39B3,basisEval3913,basisEval3913,basisEval393A,basisEval39B4,basisEval39B5,basisEval39B6,basisEval3913,basisEval39B7,basisEval3948,basisEval39B8,basisEval3913,basisEval39B9,basisEval39BA,basisEval3913,basisEval39BB,basisEval3913,basisEval3913,basisEval3956,basisEval39BC,basisEval39BD,basisEval39BE,basisEval39BF,basisEval3913,basisEval39C0,basisEval3967,basisEval39C1,basisEval39C2,basisEval3913,basisEval39C3,basisEval39C4,basisEval3971,basisEval3913,basisEval39C5,basisEval39C6,basisEval3913,basisEval39C7,basisEval3913,basisEval3913,basisEval397D,basisEval39C8,basisEval39C9,basisEval39CA,basisEval39CB,basisEval39CC,basisEval3913,basisEval39CD,basisEval3991,basisEval39CE,basisEval39CF,basisEval39D0,basisEval3913,basisEval39D1,basisEval39D2,basisEval399D,basisEval39D3,basisEval3913,basisEval39D4,basisEval39D5,basisEval39D6,basisEval3913,basisEval39D7,basisEval39D8,basisEval3913,basisEval39D9,basisEval3913];
          tensor[84] intermediateCons39FE#1 = <tensor[84]>[basisEval3913,basisEval3917,basisEval3913,basisEval3913,basisEval39DA,basisEval391F,basisEval3913,basisEval39AF,basisEval3913,basisEval3913,basisEval39DB,basisEval39B0,basisEval392E,basisEval3913,basisEval3930,basisEval39DC,basisEval3913,basisEval39B3,basisEval3913,basisEval3913,basisEval39DD,basisEval39DE,basisEval39DF,basisEval3944,basisEval3913,basisEval39E0,basisEval3948,basisEval39E1,basisEval3913,basisEval39E2,basisEval39E3,basisEval3913,basisEval39BB,basisEval3913,basisEval3913,basisEval39E4,basisEval39E5,basisEval39BD,basisEval39E6,basisEval3963,basisEval3913,basisEval39E7,basisEval39E8,basisEval3969,basisEval39E9,basisEval3913,basisEval396D,basisEval39C4,basisEval39EA,basisEval3913,basisEval39EB,basisEval39EC,basisEval3913,basisEval39C7,basisEval3913,basisEval3913,basisEval39ED,basisEval39EE,basisEval39EF,basisEval39F0,basisEval39F1,basisEval398D,basisEval3913,basisEval39F2,basisEval39F3,basisEval39CE,basisEval3995,basisEval39F4,basisEval3913,basisEval39F5,basisEval399B,basisEval39F6,basisEval39F7,basisEval3913,basisEval39F8,basisEval39D5,basisEval39F9,basisEval3913,basisEval39FA,basisEval39FB,basisEval3913,basisEval39D9,basisEval3913,basisEval3913];
          tensor[3,84] intermediateCons39FF#1 = <tensor[3,84]>[intermediateCons39FC,intermediateCons39FD,intermediateCons39FE];
          tensor[3,84] basisResult390F#3 = intermediateCons39FF;
          tensor[84] projParam3AF2#1 = ProjectLast<tensor[3,84],[0]>(basisResult390F);
          real vdot3AF3#1 = VDot<84>(femDofs366B,projParam3AF2);
          tensor[84] projParam3AF4#1 = ProjectLast<tensor[3,84],[1]>(basisResult390F);
          real vdot3AF5#1 = VDot<84>(femDofs366B,projParam3AF4);
          tensor[84] projParam3AF6#1 = ProjectLast<tensor[3,84],[2]>(basisResult390F);
          real vdot3AF7#1 = VDot<84>(femDofs366B,projParam3AF6);
          tensor[3] probe_l_823AF1#30 = <tensor[3]>[vdot3AF3,vdot3AF5,vdot3AF7];
          real varAcc3B01#4 = VIndex<3,0>(pos2449);
          real varAcc3B02#4 = VIndex<3,1>(pos2449);
          real varAcc3B03#4 = VIndex<3,2>(pos2449);
          real basisEval3B04#294 = 0.e0;
          real coeff3B05#31 = 0.2e1;
          real one3B06#38 = 0.1e1;
          real prod3B07#5 = RMul(one3B06,one3B06);
          real prod3B08#2 = RMul(one3B06,prod3B07);
          real basisEval3B09#3 = RMul(coeff3B05,prod3B08);
          real iden3B0A#5 = varAcc3B03;
          real prod3B0B#4 = RMul(one3B06,iden3B0A);
          real prod3B0C#3 = RMul(one3B06,prod3B0B);
          real basisEval3B0D#4 = RMul(coeff3B05,prod3B0C);
          real iden3B0E#5 = varAcc3B02;
          real prod3B0F#4 = RMul(iden3B0E,one3B06);
          real prod3B10#3 = RMul(one3B06,prod3B0F);
          real basisEval3B11#4 = RMul(coeff3B05,prod3B10);
          real coeff3B12#22 = 0.6e1;
          real iden3B13#11 = varAcc3B01;
          real prod3B14#3 = RMul(iden3B13,prod3B07);
          real basisEval3B15#1 = RMul(coeff3B12,prod3B14);
          real prod23B16#4 = RMul(iden3B0A,varAcc3B03);
          real prod3B17#3 = RMul(one3B06,prod23B16);
          real prod3B18#4 = RMul(one3B06,prod3B17);
          real basisEval3B19#2 = RMul(coeff3B05,prod3B18);
          real prod3B1A#3 = RMul(iden3B0E,iden3B0A);
          real prod3B1B#3 = RMul(one3B06,prod3B1A);
          real basisEval3B1C#3 = RMul(coeff3B05,prod3B1B);
          real prod23B1D#4 = RMul(iden3B0E,varAcc3B02);
          real prod3B1E#3 = RMul(prod23B1D,one3B06);
          real prod3B1F#4 = RMul(one3B06,prod3B1E);
          real basisEval3B20#2 = RMul(coeff3B05,prod3B1F);
          real prod3B21#3 = RMul(iden3B13,prod3B0B);
          real basisEval3B22#2 = RMul(coeff3B12,prod3B21);
          real prod3B23#3 = RMul(iden3B13,prod3B0F);
          real basisEval3B24#2 = RMul(coeff3B12,prod3B23);
          real coeff3B25#15 = 0.12e2;
          real prod23B26#7 = RMul(iden3B13,varAcc3B01);
          real prod3B27#4 = RMul(prod23B26,prod3B07);
          real basisEval3B28#1 = RMul(coeff3B25,prod3B27);
          real prod33B29#3 = RMul(prod23B16,varAcc3B03);
          real prod3B2A#2 = RMul(one3B06,prod33B29);
          real prod3B2B#4 = RMul(one3B06,prod3B2A);
          real basisEval3B2C#2 = RMul(coeff3B05,prod3B2B);
          real prod3B2D#2 = RMul(iden3B0E,prod23B16);
          real prod3B2E#4 = RMul(one3B06,prod3B2D);
          real basisEval3B2F#2 = RMul(coeff3B05,prod3B2E);
          real prod3B30#2 = RMul(prod23B1D,iden3B0A);
          real prod3B31#4 = RMul(one3B06,prod3B30);
          real basisEval3B32#2 = RMul(coeff3B05,prod3B31);
          real prod33B33#3 = RMul(prod23B1D,varAcc3B02);
          real prod3B34#2 = RMul(prod33B33,one3B06);
          real prod3B35#4 = RMul(one3B06,prod3B34);
          real basisEval3B36#2 = RMul(coeff3B05,prod3B35);
          real prod3B37#4 = RMul(iden3B13,prod3B17);
          real basisEval3B38#2 = RMul(coeff3B12,prod3B37);
          real prod3B39#2 = RMul(iden3B13,prod3B1A);
          real basisEval3B3A#3 = RMul(coeff3B12,prod3B39);
          real prod3B3B#4 = RMul(iden3B13,prod3B1E);
          real basisEval3B3C#2 = RMul(coeff3B12,prod3B3B);
          real prod3B3D#4 = RMul(prod23B26,prod3B0B);
          real basisEval3B3E#1 = RMul(coeff3B25,prod3B3D);
          real prod3B3F#4 = RMul(prod23B26,prod3B0F);
          real basisEval3B40#1 = RMul(coeff3B25,prod3B3F);
          real coeff3B41#9 = 0.20e2;
          real prod33B42#4 = RMul(prod23B26,varAcc3B01);
          real prod3B43#4 = RMul(prod33B42,prod3B07);
          real basisEval3B44#1 = RMul(coeff3B41,prod3B43);
          real prod43B45#1 = RMul(prod33B29,varAcc3B03);
          real prod3B46#1 = RMul(one3B06,prod43B45);
          real prod3B47#4 = RMul(one3B06,prod3B46);
          real basisEval3B48#2 = RMul(coeff3B05,prod3B47);
          real prod3B49#1 = RMul(iden3B0E,prod33B29);
          real prod3B4A#5 = RMul(one3B06,prod3B49);
          real basisEval3B4B#2 = RMul(coeff3B05,prod3B4A);
          real prod3B4C#1 = RMul(prod23B1D,prod23B16);
          real prod3B4D#4 = RMul(one3B06,prod3B4C);
          real basisEval3B4E#1 = RMul(coeff3B05,prod3B4D);
          real prod3B4F#1 = RMul(prod33B33,iden3B0A);
          real prod3B50#5 = RMul(one3B06,prod3B4F);
          real basisEval3B51#2 = RMul(coeff3B05,prod3B50);
          real prod43B52#1 = RMul(prod33B33,varAcc3B02);
          real prod3B53#1 = RMul(prod43B52,one3B06);
          real prod3B54#4 = RMul(one3B06,prod3B53);
          real basisEval3B55#2 = RMul(coeff3B05,prod3B54);
          real prod3B56#5 = RMul(iden3B13,prod3B2A);
          real basisEval3B57#1 = RMul(coeff3B12,prod3B56);
          real prod3B58#3 = RMul(iden3B13,prod3B2D);
          real basisEval3B59#4 = RMul(coeff3B12,prod3B58);
          real prod3B5A#3 = RMul(iden3B13,prod3B30);
          real basisEval3B5B#4 = RMul(coeff3B12,prod3B5A);
          real prod3B5C#5 = RMul(iden3B13,prod3B34);
          real basisEval3B5D#1 = RMul(coeff3B12,prod3B5C);
          real prod3B5E#4 = RMul(prod23B26,prod3B17);
          real basisEval3B5F#2 = RMul(coeff3B25,prod3B5E);
          real prod3B60#3 = RMul(prod23B26,prod3B1A);
          real basisEval3B61#1 = RMul(coeff3B25,prod3B60);
          real prod3B62#4 = RMul(prod23B26,prod3B1E);
          real basisEval3B63#2 = RMul(coeff3B25,prod3B62);
          real prod3B64#5 = RMul(prod33B42,prod3B0B);
          real basisEval3B65#1 = RMul(coeff3B41,prod3B64);
          real prod3B66#5 = RMul(prod33B42,prod3B0F);
          real basisEval3B67#1 = RMul(coeff3B41,prod3B66);
          real coeff3B68#3 = 0.30e2;
          real prod43B69#1 = RMul(prod33B42,varAcc3B01);
          real prod3B6A#4 = RMul(prod43B69,prod3B07);
          real basisEval3B6B#1 = RMul(coeff3B68,prod3B6A);
          real basisEval3B6C#3 = RMul(one3B06,prod3B08);
          real basisEval3B6D#1 = RMul(one3B06,prod3B0C);
          real basisEval3B6E#4 = RMul(coeff3B05,prod3B14);
          real basisEval3B6F#1 = RMul(one3B06,prod3B18);
          real coeff3B70#12 = 0.3e1;
          real basisEval3B71#2 = RMul(coeff3B70,prod3B1F);
          real basisEval3B72#3 = RMul(coeff3B05,prod3B21);
          real coeff3B73#16 = 0.4e1;
          real basisEval3B74#1 = RMul(coeff3B73,prod3B23);
          real basisEval3B75#2 = RMul(coeff3B70,prod3B27);
          real basisEval3B76#1 = RMul(one3B06,prod3B2B);
          real basisEval3B77#1 = RMul(coeff3B70,prod3B31);
          real basisEval3B78#2 = RMul(coeff3B73,prod3B35);
          real basisEval3B79#2 = RMul(coeff3B05,prod3B37);
          real basisEval3B7A#3 = RMul(coeff3B73,prod3B39);
          real basisEval3B7B#1 = RMul(coeff3B70,prod3B3D);
          real basisEval3B7C#2 = RMul(coeff3B12,prod3B3F);
          real basisEval3B7D#2 = RMul(coeff3B73,prod3B43);
          real basisEval3B7E#1 = RMul(one3B06,prod3B47);
          real basisEval3B7F#2 = RMul(coeff3B70,prod3B4D);
          real basisEval3B80#1 = RMul(coeff3B73,prod3B50);
          real coeff3B81#3 = 0.5e1;
          real basisEval3B82#2 = RMul(coeff3B81,prod3B54);
          real basisEval3B83#2 = RMul(coeff3B05,prod3B56);
          real basisEval3B84#1 = RMul(coeff3B73,prod3B58);
          real coeff3B85#6 = 0.8e1;
          real basisEval3B86#1 = RMul(coeff3B85,prod3B5C);
          real basisEval3B87#2 = RMul(coeff3B70,prod3B5E);
          real basisEval3B88#4 = RMul(coeff3B12,prod3B60);
          real coeff3B89#3 = 0.9e1;
          real basisEval3B8A#1 = RMul(coeff3B89,prod3B62);
          real basisEval3B8B#1 = RMul(coeff3B73,prod3B64);
          real basisEval3B8C#1 = RMul(coeff3B85,prod3B66);
          real basisEval3B8D#2 = RMul(coeff3B81,prod3B6A);
          real basisEval3B8E#1 = RMul(one3B06,prod3B10);
          real basisEval3B8F#2 = RMul(coeff3B70,prod3B18);
          real basisEval3B90#1 = RMul(one3B06,prod3B1F);
          real basisEval3B91#1 = RMul(coeff3B73,prod3B21);
          real basisEval3B92#3 = RMul(coeff3B05,prod3B23);
          real basisEval3B93#2 = RMul(coeff3B73,prod3B2B);
          real basisEval3B94#1 = RMul(coeff3B70,prod3B2E);
          real basisEval3B95#1 = RMul(one3B06,prod3B35);
          real basisEval3B96#2 = RMul(coeff3B05,prod3B3B);
          real basisEval3B97#2 = RMul(coeff3B12,prod3B3D);
          real basisEval3B98#1 = RMul(coeff3B70,prod3B3F);
          real basisEval3B99#2 = RMul(coeff3B81,prod3B47);
          real basisEval3B9A#1 = RMul(coeff3B73,prod3B4A);
          real basisEval3B9B#1 = RMul(one3B06,prod3B54);
          real basisEval3B9C#1 = RMul(coeff3B85,prod3B56);
          real basisEval3B9D#1 = RMul(coeff3B73,prod3B5A);
          real basisEval3B9E#2 = RMul(coeff3B05,prod3B5C);
          real basisEval3B9F#1 = RMul(coeff3B89,prod3B5E);
          real basisEval3BA0#2 = RMul(coeff3B70,prod3B62);
          real basisEval3BA1#1 = RMul(coeff3B85,prod3B64);
          real basisEval3BA2#1 = RMul(coeff3B73,prod3B66);
          real basisEval3BA3#1 = RMul(coeff3B12,prod3B10);
          real basisEval3BA4#2 = RMul(coeff3B12,prod3B1B);
          real basisEval3BA5#1 = RMul(coeff3B25,prod3B1F);
          real basisEval3BA6#2 = RMul(coeff3B05,prod3B27);
          real basisEval3BA7#2 = RMul(coeff3B12,prod3B2E);
          real basisEval3BA8#1 = RMul(coeff3B25,prod3B31);
          real basisEval3BA9#1 = RMul(coeff3B41,prod3B35);
          real basisEval3BAA#1 = RMul(coeff3B25,prod3B3B);
          real basisEval3BAB#2 = RMul(coeff3B05,prod3B3D);
          real basisEval3BAC#2 = RMul(coeff3B05,prod3B43);
          real basisEval3BAD#1 = RMul(coeff3B12,prod3B4A);
          real basisEval3BAE#2 = RMul(coeff3B25,prod3B4D);
          real basisEval3BAF#1 = RMul(coeff3B41,prod3B50);
          real basisEval3BB0#1 = RMul(coeff3B68,prod3B54);
          real basisEval3BB1#1 = RMul(coeff3B25,prod3B5A);
          real basisEval3BB2#1 = RMul(coeff3B41,prod3B5C);
          real basisEval3BB3#1 = RMul(coeff3B05,prod3B5E);
          real basisEval3BB4#2 = RMul(coeff3B05,prod3B64);
          real basisEval3BB5#1 = RMul(coeff3B12,prod3B66);
          real basisEval3BB6#2 = RMul(coeff3B05,prod3B6A);
          real basisEval3BB7#1 = RMul(one3B06,prod3B14);
          real basisEval3BB8#1 = RMul(coeff3B73,prod3B1B);
          real basisEval3BB9#1 = RMul(one3B06,prod3B27);
          real basisEval3BBA#2 = RMul(coeff3B12,prod3B31);
          real basisEval3BBB#1 = RMul(coeff3B70,prod3B37);
          real basisEval3BBC#1 = RMul(coeff3B70,prod3B3B);
          real basisEval3BBD#2 = RMul(coeff3B05,prod3B3F);
          real basisEval3BBE#1 = RMul(one3B06,prod3B43);
          real basisEval3BBF#1 = RMul(coeff3B85,prod3B4A);
          real basisEval3BC0#1 = RMul(coeff3B89,prod3B4D);
          real basisEval3BC1#1 = RMul(coeff3B85,prod3B50);
          real basisEval3BC2#1 = RMul(coeff3B73,prod3B56);
          real basisEval3BC3#1 = RMul(coeff3B73,prod3B5C);
          real basisEval3BC4#1 = RMul(coeff3B73,prod3B60);
          real basisEval3BC5#2 = RMul(coeff3B05,prod3B66);
          real basisEval3BC6#1 = RMul(one3B06,prod3B6A);
          real basisEval3BC7#1 = RMul(coeff3B12,prod3B0C);
          real basisEval3BC8#1 = RMul(coeff3B25,prod3B18);
          real basisEval3BC9#1 = RMul(coeff3B41,prod3B2B);
          real basisEval3BCA#1 = RMul(coeff3B25,prod3B2E);
          real basisEval3BCB#1 = RMul(coeff3B25,prod3B37);
          real basisEval3BCC#1 = RMul(coeff3B68,prod3B47);
          real basisEval3BCD#1 = RMul(coeff3B41,prod3B4A);
          real basisEval3BCE#1 = RMul(coeff3B12,prod3B50);
          real basisEval3BCF#1 = RMul(coeff3B41,prod3B56);
          real basisEval3BD0#1 = RMul(coeff3B25,prod3B58);
          real basisEval3BD1#1 = RMul(coeff3B05,prod3B62);
          real basisEval3BD2#1 = RMul(coeff3B12,prod3B64);
          tensor[84] intermediateCons3BD3#1 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B09,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B0D,basisEval3B11,basisEval3B15,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B19,basisEval3B1C,basisEval3B20,basisEval3B22,basisEval3B24,basisEval3B28,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B2C,basisEval3B2F,basisEval3B32,basisEval3B36,basisEval3B38,basisEval3B3A,basisEval3B3C,basisEval3B3E,basisEval3B40,basisEval3B44,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B48,basisEval3B4B,basisEval3B4E,basisEval3B51,basisEval3B55,basisEval3B57,basisEval3B59,basisEval3B5B,basisEval3B5D,basisEval3B5F,basisEval3B61,basisEval3B63,basisEval3B65,basisEval3B67,basisEval3B6B];
          tensor[84] intermediateCons3BD4#2 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6C,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6D,basisEval3B11,basisEval3B04,basisEval3B6E,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6F,basisEval3B1C,basisEval3B71,basisEval3B04,basisEval3B72,basisEval3B74,basisEval3B04,basisEval3B75,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B76,basisEval3B2F,basisEval3B77,basisEval3B78,basisEval3B04,basisEval3B79,basisEval3B7A,basisEval3B3C,basisEval3B04,basisEval3B7B,basisEval3B7C,basisEval3B04,basisEval3B7D,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B7E,basisEval3B4B,basisEval3B7F,basisEval3B80,basisEval3B82,basisEval3B04,basisEval3B83,basisEval3B84,basisEval3B5B,basisEval3B86,basisEval3B04,basisEval3B87,basisEval3B88,basisEval3B8A,basisEval3B04,basisEval3B8B,basisEval3B8C,basisEval3B04,basisEval3B8D,basisEval3B04];
          tensor[84] intermediateCons3BD5#2 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6C,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B0D,basisEval3B8E,basisEval3B04,basisEval3B6E,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B8F,basisEval3B1C,basisEval3B90,basisEval3B04,basisEval3B91,basisEval3B92,basisEval3B04,basisEval3B75,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B93,basisEval3B94,basisEval3B32,basisEval3B95,basisEval3B04,basisEval3B38,basisEval3B7A,basisEval3B96,basisEval3B04,basisEval3B97,basisEval3B98,basisEval3B04,basisEval3B7D,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B99,basisEval3B9A,basisEval3B7F,basisEval3B51,basisEval3B9B,basisEval3B04,basisEval3B9C,basisEval3B59,basisEval3B9D,basisEval3B9E,basisEval3B04,basisEval3B9F,basisEval3B88,basisEval3BA0,basisEval3B04,basisEval3BA1,basisEval3BA2,basisEval3B04,basisEval3B8D,basisEval3B04,basisEval3B04];
          tensor[84] intermediateCons3BD6#1 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B09,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B0D,basisEval3BA3,basisEval3B04,basisEval3B04,basisEval3B6E,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B19,basisEval3BA4,basisEval3BA5,basisEval3B04,basisEval3B04,basisEval3B72,basisEval3B24,basisEval3B04,basisEval3B04,basisEval3BA6,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B2C,basisEval3BA7,basisEval3BA8,basisEval3BA9,basisEval3B04,basisEval3B04,basisEval3B79,basisEval3B3A,basisEval3BAA,basisEval3B04,basisEval3B04,basisEval3BAB,basisEval3B7C,basisEval3B04,basisEval3B04,basisEval3BAC,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B48,basisEval3BAD,basisEval3BAE,basisEval3BAF,basisEval3BB0,basisEval3B04,basisEval3B04,basisEval3B83,basisEval3B59,basisEval3BB1,basisEval3BB2,basisEval3B04,basisEval3B04,basisEval3BB3,basisEval3B88,basisEval3B63,basisEval3B04,basisEval3B04,basisEval3BB4,basisEval3BB5,basisEval3B04,basisEval3B04,basisEval3BB6,basisEval3B04,basisEval3B04,basisEval3B04];
          tensor[84] intermediateCons3BD7#2 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6C,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B0D,basisEval3B11,basisEval3B04,basisEval3B04,basisEval3BB7,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B8F,basisEval3BB8,basisEval3B71,basisEval3B04,basisEval3B04,basisEval3B72,basisEval3B92,basisEval3B04,basisEval3B04,basisEval3BB9,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B93,basisEval3BA7,basisEval3BBA,basisEval3B78,basisEval3B04,basisEval3B04,basisEval3BBB,basisEval3B7A,basisEval3BBC,basisEval3B04,basisEval3B04,basisEval3BAB,basisEval3BBD,basisEval3B04,basisEval3B04,basisEval3BBE,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B99,basisEval3BBF,basisEval3BC0,basisEval3BC1,basisEval3B82,basisEval3B04,basisEval3B04,basisEval3BC2,basisEval3B59,basisEval3B5B,basisEval3BC3,basisEval3B04,basisEval3B04,basisEval3B87,basisEval3BC4,basisEval3BA0,basisEval3B04,basisEval3B04,basisEval3BB4,basisEval3BC5,basisEval3B04,basisEval3B04,basisEval3BC6,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04];
          tensor[84] intermediateCons3BD8#1 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B09,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3BC7,basisEval3B11,basisEval3B04,basisEval3B04,basisEval3B6E,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3BC8,basisEval3BA4,basisEval3B20,basisEval3B04,basisEval3B04,basisEval3B22,basisEval3B92,basisEval3B04,basisEval3B04,basisEval3BA6,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3BC9,basisEval3BCA,basisEval3BBA,basisEval3B36,basisEval3B04,basisEval3B04,basisEval3BCB,basisEval3B3A,basisEval3B96,basisEval3B04,basisEval3B04,basisEval3B97,basisEval3BBD,basisEval3B04,basisEval3B04,basisEval3BAC,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3BCC,basisEval3BCD,basisEval3BAE,basisEval3BCE,basisEval3B55,basisEval3B04,basisEval3B04,basisEval3BCF,basisEval3BD0,basisEval3B5B,basisEval3B9E,basisEval3B04,basisEval3B04,basisEval3B5F,basisEval3B88,basisEval3BD1,basisEval3B04,basisEval3B04,basisEval3BD2,basisEval3BC5,basisEval3B04,basisEval3B04,basisEval3BB6,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04];
          tensor[3,84] intermediateCons3BD9#1 = <tensor[3,84]>[intermediateCons3BD3,intermediateCons3BD4,intermediateCons3BD5];
          tensor[3,84] intermediateCons3BDA#1 = <tensor[3,84]>[intermediateCons3BD4,intermediateCons3BD6,intermediateCons3BD7];
          tensor[3,84] intermediateCons3BDB#1 = <tensor[3,84]>[intermediateCons3BD5,intermediateCons3BD7,intermediateCons3BD8];
          tensor[3,3,84] intermediateCons3BDC#1 = <tensor[3,3,84]>[intermediateCons3BD9,intermediateCons3BDA,intermediateCons3BDB];
          tensor[3,3,84] basisResult3B00#9 = intermediateCons3BDC;
          tensor[84] projParam3CBB#1 = ProjectLast<tensor[3,3,84],[0,0]>(basisResult3B00);
          real vdot3CBC#1 = VDot<84>(femDofs366B,projParam3CBB);
          tensor[84] projParam3CBD#1 = ProjectLast<tensor[3,3,84],[0,1]>(basisResult3B00);
          real vdot3CBE#1 = VDot<84>(femDofs366B,projParam3CBD);
          tensor[84] projParam3CBF#1 = ProjectLast<tensor[3,3,84],[0,2]>(basisResult3B00);
          real vdot3CC0#1 = VDot<84>(femDofs366B,projParam3CBF);
          tensor[3] tensor3CC1#1 = <tensor[3]>[vdot3CBC,vdot3CBE,vdot3CC0];
          tensor[84] projParam3CC2#1 = ProjectLast<tensor[3,3,84],[1,0]>(basisResult3B00);
          real vdot3CC3#1 = VDot<84>(femDofs366B,projParam3CC2);
          tensor[84] projParam3CC4#1 = ProjectLast<tensor[3,3,84],[1,1]>(basisResult3B00);
          real vdot3CC5#1 = VDot<84>(femDofs366B,projParam3CC4);
          tensor[84] projParam3CC6#1 = ProjectLast<tensor[3,3,84],[1,2]>(basisResult3B00);
          real vdot3CC7#1 = VDot<84>(femDofs366B,projParam3CC6);
          tensor[3] tensor3CC8#1 = <tensor[3]>[vdot3CC3,vdot3CC5,vdot3CC7];
          tensor[84] projParam3CC9#1 = ProjectLast<tensor[3,3,84],[2,0]>(basisResult3B00);
          real vdot3CCA#1 = VDot<84>(femDofs366B,projParam3CC9);
          tensor[84] projParam3CCB#1 = ProjectLast<tensor[3,3,84],[2,1]>(basisResult3B00);
          real vdot3CCC#1 = VDot<84>(femDofs366B,projParam3CCB);
          tensor[84] projParam3CCD#1 = ProjectLast<tensor[3,3,84],[2,2]>(basisResult3B00);
          real vdot3CCE#1 = VDot<84>(femDofs366B,projParam3CCD);
          tensor[3] tensor3CCF#1 = <tensor[3]>[vdot3CCA,vdot3CCC,vdot3CCE];
          tensor[3,3] probe_l_833CBA#48 = <tensor[3,3]>[tensor3CC1,tensor3CC8,tensor3CCF];
          tensor[3] projParam3CE8#1 = ProjectLast<tensor[3,3],[0]>(probe_l_833CBA);
          real vdot3CE9#1 = VDot<3>(projParam3CE8,probe_l_823AF1);
          tensor[3] projParam3CEA#1 = ProjectLast<tensor[3,3],[1]>(probe_l_833CBA);
          real vdot3CEB#1 = VDot<3>(projParam3CEA,probe_l_823AF1);
          tensor[3] projParam3CEC#1 = ProjectLast<tensor[3,3],[2]>(probe_l_833CBA);
          real vdot3CED#1 = VDot<3>(projParam3CEC,probe_l_823AF1);
          tensor[3] op1_e3_l_853CE7#6 = <tensor[3]>[vdot3CE9,vdot3CEB,vdot3CED];
          real realLit3CF7#5 = 0.e0;
          real realLit3CF8#5 = 0.1e1;
          real r3CF9#11 = RMul(realLit3CF7,realLit3CF8);
          real r3CFA#25 = RMul(realLit3CF7,realLit3CF7);
          real r3CFB#3 = RAdd(r3CF9,r3CFA);
          real r3CFC#1 = RAdd(r3CFB,r3CFA);
          real r3CFD#1 = RAdd(r3CFC,r3CFA);
          real r3CFE#3 = RAdd(r3CFA,r3CF9);
          real r3CFF#1 = RAdd(r3CFE,r3CFA);
          real r3D00#1 = RAdd(r3CFF,r3CFA);
          real r3D01#3 = RAdd(r3CFA,r3CFA);
          real r3D02#1 = RAdd(r3D01,r3CF9);
          real r3D03#1 = RAdd(r3D02,r3CFA);
          tensor[3] tensor3D04#3 = <tensor[3]>[r3CFD,r3D00,r3D03];
          real r3D05#15 = RMul(realLit3CF8,realLit3CF7);
          real r3D06#1 = RAdd(r3CFB,r3D05);
          real r3D07#1 = RAdd(r3D06,r3D05);
          real r3D08#1 = RAdd(r3CFE,r3D05);
          real r3D09#1 = RAdd(r3D08,r3D05);
          real r3D0A#3 = RMul(realLit3CF8,realLit3CF8);
          real r3D0B#1 = RAdd(r3D01,r3D0A);
          real r3D0C#1 = RAdd(r3D0B,r3D05);
          tensor[3] tensor3D0D#1 = <tensor[3]>[r3D07,r3D09,r3D0C];
          real realLit3D0E#2 = -0.1e1;
          real r3D0F#15 = RMul(realLit3D0E,realLit3CF7);
          real r3D10#1 = RAdd(r3CF9,r3D0F);
          real r3D11#1 = RAdd(r3D10,r3CFA);
          real r3D12#1 = RAdd(r3D11,r3D05);
          real r3D13#3 = RMul(realLit3D0E,realLit3CF8);
          real r3D14#1 = RAdd(r3CFA,r3D13);
          real r3D15#1 = RAdd(r3D14,r3CFA);
          real r3D16#1 = RAdd(r3D15,r3D05);
          real r3D17#1 = RAdd(r3CFA,r3D0F);
          real r3D18#1 = RAdd(r3D17,r3CF9);
          real r3D19#1 = RAdd(r3D18,r3D05);
          tensor[3] tensor3D1A#1 = <tensor[3]>[r3D12,r3D16,r3D19];
          tensor[3,3] tensor3D1B#1 = <tensor[3,3]>[tensor3D04,tensor3D0D,tensor3D1A];
          real r3D1C#1 = RAdd(r3CFB,r3D0F);
          real r3D1D#1 = RAdd(r3D1C,r3D0F);
          real r3D1E#1 = RAdd(r3CFE,r3D0F);
          real r3D1F#1 = RAdd(r3D1E,r3D0F);
          real r3D20#1 = RAdd(r3D01,r3D13);
          real r3D21#1 = RAdd(r3D20,r3D0F);
          tensor[3] tensor3D22#1 = <tensor[3]>[r3D1D,r3D1F,r3D21];
          real r3D23#1 = RAdd(r3D0A,r3CFA);
          real r3D24#1 = RAdd(r3D23,r3CFA);
          real r3D25#1 = RAdd(r3D24,r3D05);
          real r3D26#1 = RAdd(r3D05,r3CF9);
          real r3D27#1 = RAdd(r3D26,r3CFA);
          real r3D28#1 = RAdd(r3D27,r3D05);
          real r3D29#1 = RAdd(r3D05,r3CFA);
          real r3D2A#1 = RAdd(r3D29,r3CF9);
          real r3D2B#1 = RAdd(r3D2A,r3D05);
          tensor[3] tensor3D2C#1 = <tensor[3]>[r3D25,r3D28,r3D2B];
          tensor[3,3] tensor3D2D#1 = <tensor[3,3]>[tensor3D22,tensor3D04,tensor3D2C];
          real r3D2E#1 = RAdd(r3CF9,r3D05);
          real r3D2F#1 = RAdd(r3D2E,r3CFA);
          real r3D30#1 = RAdd(r3D2F,r3D0F);
          real r3D31#1 = RAdd(r3CFA,r3D0A);
          real r3D32#1 = RAdd(r3D31,r3CFA);
          real r3D33#1 = RAdd(r3D32,r3D0F);
          real r3D34#1 = RAdd(r3CFA,r3D05);
          real r3D35#1 = RAdd(r3D34,r3CF9);
          real r3D36#1 = RAdd(r3D35,r3D0F);
          tensor[3] tensor3D37#1 = <tensor[3]>[r3D30,r3D33,r3D36];
          real r3D38#1 = RAdd(r3D13,r3CFA);
          real r3D39#1 = RAdd(r3D38,r3CFA);
          real r3D3A#1 = RAdd(r3D39,r3D0F);
          real r3D3B#1 = RAdd(r3D0F,r3CF9);
          real r3D3C#1 = RAdd(r3D3B,r3CFA);
          real r3D3D#1 = RAdd(r3D3C,r3D0F);
          real r3D3E#1 = RAdd(r3D0F,r3CFA);
          real r3D3F#1 = RAdd(r3D3E,r3CF9);
          real r3D40#1 = RAdd(r3D3F,r3D0F);
          tensor[3] tensor3D41#1 = <tensor[3]>[r3D3A,r3D3D,r3D40];
          tensor[3,3] tensor3D42#1 = <tensor[3,3]>[tensor3D37,tensor3D41,tensor3D04];
          tensor[3,3,3] op1_e3_l_863CF6#135 = <tensor[3,3,3]>[tensor3D1B,tensor3D2D,tensor3D42];
          real r3D92#9 = TensorIndex<tensor[3],[0]>(op1_e3_l_853CE7);
          real r3D93#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_863CF6);
          real r3D94#1 = RMul(r3D92,r3D93);
          real r3D95#9 = TensorIndex<tensor[3],[1]>(op1_e3_l_853CE7);
          real r3D96#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_863CF6);
          real r3D97#1 = RMul(r3D95,r3D96);
          real r3D98#9 = TensorIndex<tensor[3],[2]>(op1_e3_l_853CE7);
          real r3D99#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_863CF6);
          real r3D9A#1 = RMul(r3D98,r3D99);
          real r3D9B#1 = RAdd(r3D94,r3D97);
          real r3D9C#1 = RAdd(r3D9B,r3D9A);
          real r3D9D#1 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_863CF6);
          real r3D9E#1 = RMul(r3D92,r3D9D);
          real r3D9F#1 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_863CF6);
          real r3DA0#1 = RMul(r3D95,r3D9F);
          real r3DA1#1 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_863CF6);
          real r3DA2#1 = RMul(r3D98,r3DA1);
          real r3DA3#1 = RAdd(r3D9E,r3DA0);
          real r3DA4#1 = RAdd(r3DA3,r3DA2);
          real r3DA5#1 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_863CF6);
          real r3DA6#1 = RMul(r3D92,r3DA5);
          real r3DA7#1 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_863CF6);
          real r3DA8#1 = RMul(r3D95,r3DA7);
          real r3DA9#1 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_863CF6);
          real r3DAA#1 = RMul(r3D98,r3DA9);
          real r3DAB#1 = RAdd(r3DA6,r3DA8);
          real r3DAC#1 = RAdd(r3DAB,r3DAA);
          tensor[3] tensor3DAD#1 = <tensor[3]>[r3D9C,r3DA4,r3DAC];
          real r3DAE#1 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_863CF6);
          real r3DAF#1 = RMul(r3D92,r3DAE);
          real r3DB0#1 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_863CF6);
          real r3DB1#1 = RMul(r3D95,r3DB0);
          real r3DB2#1 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_863CF6);
          real r3DB3#1 = RMul(r3D98,r3DB2);
          real r3DB4#1 = RAdd(r3DAF,r3DB1);
          real r3DB5#1 = RAdd(r3DB4,r3DB3);
          real r3DB6#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_863CF6);
          real r3DB7#1 = RMul(r3D92,r3DB6);
          real r3DB8#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_863CF6);
          real r3DB9#1 = RMul(r3D95,r3DB8);
          real r3DBA#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_863CF6);
          real r3DBB#1 = RMul(r3D98,r3DBA);
          real r3DBC#1 = RAdd(r3DB7,r3DB9);
          real r3DBD#1 = RAdd(r3DBC,r3DBB);
          real r3DBE#1 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_863CF6);
          real r3DBF#1 = RMul(r3D92,r3DBE);
          real r3DC0#1 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_863CF6);
          real r3DC1#1 = RMul(r3D95,r3DC0);
          real r3DC2#1 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_863CF6);
          real r3DC3#1 = RMul(r3D98,r3DC2);
          real r3DC4#1 = RAdd(r3DBF,r3DC1);
          real r3DC5#1 = RAdd(r3DC4,r3DC3);
          tensor[3] tensor3DC6#1 = <tensor[3]>[r3DB5,r3DBD,r3DC5];
          real r3DC7#1 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_863CF6);
          real r3DC8#1 = RMul(r3D92,r3DC7);
          real r3DC9#1 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_863CF6);
          real r3DCA#1 = RMul(r3D95,r3DC9);
          real r3DCB#1 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_863CF6);
          real r3DCC#1 = RMul(r3D98,r3DCB);
          real r3DCD#1 = RAdd(r3DC8,r3DCA);
          real r3DCE#1 = RAdd(r3DCD,r3DCC);
          real r3DCF#1 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_863CF6);
          real r3DD0#1 = RMul(r3D92,r3DCF);
          real r3DD1#1 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_863CF6);
          real r3DD2#1 = RMul(r3D95,r3DD1);
          real r3DD3#1 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_863CF6);
          real r3DD4#1 = RMul(r3D98,r3DD3);
          real r3DD5#1 = RAdd(r3DD0,r3DD2);
          real r3DD6#1 = RAdd(r3DD5,r3DD4);
          real r3DD7#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_863CF6);
          real r3DD8#1 = RMul(r3D92,r3DD7);
          real r3DD9#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_863CF6);
          real r3DDA#1 = RMul(r3D95,r3DD9);
          real r3DDB#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_863CF6);
          real r3DDC#1 = RMul(r3D98,r3DDB);
          real r3DDD#1 = RAdd(r3DD8,r3DDA);
          real r3DDE#1 = RAdd(r3DDD,r3DDC);
          tensor[3] tensor3DDF#1 = <tensor[3]>[r3DCE,r3DD6,r3DDE];
          tensor[3,3] op1_e3_l_873D91#9 = <tensor[3,3]>[tensor3DAD,tensor3DC6,tensor3DDF];
          real r3E31#3 = TensorIndex<tensor[3],[0]>(probe_l_823AF1);
          real r3E32#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_873D91);
          real r3E33#1 = RMul(r3E31,r3E32);
          real r3E34#3 = TensorIndex<tensor[3],[1]>(probe_l_823AF1);
          real r3E35#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_873D91);
          real r3E36#1 = RMul(r3E34,r3E35);
          real r3E37#3 = TensorIndex<tensor[3],[2]>(probe_l_823AF1);
          real r3E38#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_873D91);
          real r3E39#1 = RMul(r3E37,r3E38);
          real r3E3A#1 = RAdd(r3E33,r3E36);
          real r3E3B#1 = RAdd(r3E3A,r3E39);
          real r3E3C#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_873D91);
          real r3E3D#1 = RMul(r3E31,r3E3C);
          real r3E3E#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_873D91);
          real r3E3F#1 = RMul(r3E34,r3E3E);
          real r3E40#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_873D91);
          real r3E41#1 = RMul(r3E37,r3E40);
          real r3E42#1 = RAdd(r3E3D,r3E3F);
          real r3E43#1 = RAdd(r3E42,r3E41);
          real r3E44#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_873D91);
          real r3E45#1 = RMul(r3E31,r3E44);
          real r3E46#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_873D91);
          real r3E47#1 = RMul(r3E34,r3E46);
          real r3E48#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_873D91);
          real r3E49#1 = RMul(r3E37,r3E48);
          real r3E4A#1 = RAdd(r3E45,r3E47);
          real r3E4B#1 = RAdd(r3E4A,r3E49);
          tensor[3] op1_e3_l_943E30#14 = <tensor[3]>[r3E3B,r3E43,r3E4B];
          real varAcc3E6A#3 = VIndex<3,0>(pos2449);
          real varAcc3E6B#3 = VIndex<3,1>(pos2449);
          real varAcc3E6C#3 = VIndex<3,2>(pos2449);
          real basisEval3E6D#640 = 0.e0;
          real coeff3E6E#19 = 0.6e1;
          real one3E6F#19 = 0.1e1;
          real prod3E70#4 = RMul(one3E6F,one3E6F);
          real prod3E71#3 = RMul(one3E6F,prod3E70);
          real basisEval3E72#3 = RMul(coeff3E6E,prod3E71);
          real iden3E73#4 = varAcc3E6C;
          real prod3E74#3 = RMul(one3E6F,iden3E73);
          real prod3E75#4 = RMul(one3E6F,prod3E74);
          real basisEval3E76#4 = RMul(coeff3E6E,prod3E75);
          real iden3E77#4 = varAcc3E6B;
          real prod3E78#3 = RMul(iden3E77,one3E6F);
          real prod3E79#4 = RMul(one3E6F,prod3E78);
          real basisEval3E7A#4 = RMul(coeff3E6E,prod3E79);
          real coeff3E7B#13 = 0.24e2;
          real iden3E7C#7 = varAcc3E6A;
          real prod3E7D#4 = RMul(iden3E7C,prod3E70);
          real basisEval3E7E#1 = RMul(coeff3E7B,prod3E7D);
          real prod23E7F#3 = RMul(iden3E73,varAcc3E6C);
          real prod3E80#2 = RMul(one3E6F,prod23E7F);
          real prod3E81#5 = RMul(one3E6F,prod3E80);
          real basisEval3E82#4 = RMul(coeff3E6E,prod3E81);
          real prod3E83#2 = RMul(iden3E77,iden3E73);
          real prod3E84#4 = RMul(one3E6F,prod3E83);
          real basisEval3E85#3 = RMul(coeff3E6E,prod3E84);
          real prod23E86#3 = RMul(iden3E77,varAcc3E6B);
          real prod3E87#2 = RMul(prod23E86,one3E6F);
          real prod3E88#5 = RMul(one3E6F,prod3E87);
          real basisEval3E89#4 = RMul(coeff3E6E,prod3E88);
          real prod3E8A#4 = RMul(iden3E7C,prod3E74);
          real basisEval3E8B#2 = RMul(coeff3E7B,prod3E8A);
          real prod3E8C#4 = RMul(iden3E7C,prod3E78);
          real basisEval3E8D#2 = RMul(coeff3E7B,prod3E8C);
          real coeff3E8E#9 = 0.60e2;
          real prod23E8F#4 = RMul(iden3E7C,varAcc3E6A);
          real prod3E90#5 = RMul(prod23E8F,prod3E70);
          real basisEval3E91#1 = RMul(coeff3E8E,prod3E90);
          real prod33E92#1 = RMul(prod23E7F,varAcc3E6C);
          real prod3E93#1 = RMul(one3E6F,prod33E92);
          real prod3E94#6 = RMul(one3E6F,prod3E93);
          real basisEval3E95#2 = RMul(coeff3E6E,prod3E94);
          real prod3E96#1 = RMul(iden3E77,prod23E7F);
          real prod3E97#6 = RMul(one3E6F,prod3E96);
          real basisEval3E98#4 = RMul(coeff3E6E,prod3E97);
          real prod3E99#1 = RMul(prod23E86,iden3E73);
          real prod3E9A#6 = RMul(one3E6F,prod3E99);
          real basisEval3E9B#4 = RMul(coeff3E6E,prod3E9A);
          real prod33E9C#1 = RMul(prod23E86,varAcc3E6B);
          real prod3E9D#1 = RMul(prod33E9C,one3E6F);
          real prod3E9E#6 = RMul(one3E6F,prod3E9D);
          real basisEval3E9F#2 = RMul(coeff3E6E,prod3E9E);
          real prod3EA0#6 = RMul(iden3E7C,prod3E80);
          real basisEval3EA1#2 = RMul(coeff3E7B,prod3EA0);
          real prod3EA2#3 = RMul(iden3E7C,prod3E83);
          real basisEval3EA3#3 = RMul(coeff3E7B,prod3EA2);
          real prod3EA4#6 = RMul(iden3E7C,prod3E87);
          real basisEval3EA5#2 = RMul(coeff3E7B,prod3EA4);
          real prod3EA6#6 = RMul(prod23E8F,prod3E74);
          real basisEval3EA7#1 = RMul(coeff3E8E,prod3EA6);
          real prod3EA8#6 = RMul(prod23E8F,prod3E78);
          real basisEval3EA9#1 = RMul(coeff3E8E,prod3EA8);
          real coeff3EAA#3 = 0.120e3;
          real prod33EAB#1 = RMul(prod23E8F,varAcc3E6A);
          real prod3EAC#6 = RMul(prod33EAB,prod3E70);
          real basisEval3EAD#1 = RMul(coeff3EAA,prod3EAC);
          real coeff3EAE#10 = 0.2e1;
          real basisEval3EAF#6 = RMul(coeff3EAE,prod3E71);
          real basisEval3EB0#3 = RMul(coeff3EAE,prod3E75);
          real coeff3EB1#15 = 0.4e1;
          real basisEval3EB2#2 = RMul(coeff3EB1,prod3E79);
          real basisEval3EB3#4 = RMul(coeff3E6E,prod3E7D);
          real basisEval3EB4#2 = RMul(coeff3EAE,prod3E81);
          real basisEval3EB5#3 = RMul(coeff3EB1,prod3E84);
          real basisEval3EB6#3 = RMul(coeff3E6E,prod3E8A);
          real coeff3EB7#13 = 0.12e2;
          real basisEval3EB8#2 = RMul(coeff3EB7,prod3E8C);
          real basisEval3EB9#2 = RMul(coeff3EB7,prod3E90);
          real basisEval3EBA#2 = RMul(coeff3EAE,prod3E94);
          real basisEval3EBB#1 = RMul(coeff3EB1,prod3E97);
          real coeff3EBC#4 = 0.8e1;
          real basisEval3EBD#2 = RMul(coeff3EBC,prod3E9E);
          real basisEval3EBE#4 = RMul(coeff3E6E,prod3EA0);
          real basisEval3EBF#6 = RMul(coeff3EB7,prod3EA2);
          real coeff3EC0#6 = 0.18e2;
          real basisEval3EC1#1 = RMul(coeff3EC0,prod3EA4);
          real basisEval3EC2#1 = RMul(coeff3EB7,prod3EA6);
          real basisEval3EC3#2 = RMul(coeff3E7B,prod3EA8);
          real coeff3EC4#3 = 0.20e2;
          real basisEval3EC5#2 = RMul(coeff3EC4,prod3EAC);
          real basisEval3EC6#2 = RMul(coeff3EB1,prod3E75);
          real basisEval3EC7#3 = RMul(coeff3EAE,prod3E79);
          real basisEval3EC8#2 = RMul(coeff3EAE,prod3E88);
          real basisEval3EC9#2 = RMul(coeff3EB7,prod3E8A);
          real basisEval3ECA#3 = RMul(coeff3E6E,prod3E8C);
          real basisEval3ECB#2 = RMul(coeff3EBC,prod3E94);
          real basisEval3ECC#1 = RMul(coeff3EB1,prod3E9A);
          real basisEval3ECD#2 = RMul(coeff3EAE,prod3E9E);
          real basisEval3ECE#1 = RMul(coeff3EC0,prod3EA0);
          real basisEval3ECF#4 = RMul(coeff3E6E,prod3EA4);
          real basisEval3ED0#2 = RMul(coeff3E7B,prod3EA6);
          real basisEval3ED1#1 = RMul(coeff3EB7,prod3EA8);
          real basisEval3ED2#2 = RMul(coeff3EB1,prod3E7D);
          real basisEval3ED3#2 = RMul(coeff3EB7,prod3E88);
          real basisEval3ED4#3 = RMul(coeff3EB1,prod3E8A);
          real basisEval3ED5#4 = RMul(coeff3E6E,prod3E90);
          real basisEval3ED6#1 = RMul(coeff3EB7,prod3E9A);
          real basisEval3ED7#2 = RMul(coeff3EC4,prod3E9E);
          real basisEval3ED8#1 = RMul(coeff3EB1,prod3EA0);
          real basisEval3ED9#4 = RMul(coeff3E6E,prod3EA6);
          real basisEval3EDA#1 = RMul(coeff3EC0,prod3EA8);
          real basisEval3EDB#2 = RMul(coeff3EBC,prod3EAC);
          real basisEval3EDC#1 = RMul(one3E6F,prod3E71);
          real basisEval3EDD#3 = RMul(coeff3EAE,prod3E7D);
          real coeff3EDE#3 = 0.3e1;
          real basisEval3EDF#1 = RMul(coeff3EDE,prod3E81);
          real basisEval3EE0#1 = RMul(coeff3EDE,prod3E88);
          real basisEval3EE1#3 = RMul(coeff3EB1,prod3E8C);
          real basisEval3EE2#1 = RMul(coeff3EDE,prod3E90);
          real basisEval3EE3#1 = RMul(coeff3EB1,prod3E94);
          real basisEval3EE4#1 = RMul(coeff3EB1,prod3E9E);
          real basisEval3EE5#1 = RMul(coeff3EBC,prod3EA2);
          real basisEval3EE6#4 = RMul(coeff3E6E,prod3EA8);
          real basisEval3EE7#1 = RMul(coeff3EB1,prod3EAC);
          real basisEval3EE8#2 = RMul(coeff3EB7,prod3E81);
          real basisEval3EE9#2 = RMul(coeff3EC4,prod3E94);
          real basisEval3EEA#1 = RMul(coeff3EB7,prod3E97);
          real basisEval3EEB#1 = RMul(coeff3EB1,prod3EA4);
          real basisEval3EEC#1 = RMul(coeff3EC0,prod3EA6);
          real basisEval3EED#1 = RMul(coeff3E7B,prod3E79);
          real basisEval3EEE#2 = RMul(coeff3E7B,prod3E84);
          real basisEval3EEF#1 = RMul(coeff3E8E,prod3E88);
          real basisEval3EF0#2 = RMul(coeff3E7B,prod3E97);
          real basisEval3EF1#1 = RMul(coeff3E8E,prod3E9A);
          real basisEval3EF2#1 = RMul(coeff3EAA,prod3E9E);
          real basisEval3EF3#1 = RMul(coeff3E8E,prod3EA4);
          real basisEval3EF4#2 = RMul(coeff3E6E,prod3EAC);
          real basisEval3EF5#2 = RMul(coeff3EB7,prod3E84);
          real basisEval3EF6#2 = RMul(coeff3EAE,prod3E90);
          real basisEval3EF7#1 = RMul(coeff3EC0,prod3E97);
          real basisEval3EF8#2 = RMul(coeff3E7B,prod3E9A);
          real basisEval3EF9#1 = RMul(coeff3EB7,prod3EA4);
          real basisEval3EFA#1 = RMul(coeff3EB1,prod3EA6);
          real basisEval3EFB#2 = RMul(coeff3EAE,prod3EAC);
          real basisEval3EFC#1 = RMul(coeff3EC0,prod3E9A);
          real basisEval3EFD#1 = RMul(coeff3EB7,prod3EA0);
          real basisEval3EFE#1 = RMul(coeff3EB1,prod3EA8);
          real basisEval3EFF#1 = RMul(coeff3E7B,prod3E75);
          real basisEval3F00#1 = RMul(coeff3E8E,prod3E81);
          real basisEval3F01#1 = RMul(coeff3EAA,prod3E94);
          real basisEval3F02#1 = RMul(coeff3E8E,prod3E97);
          real basisEval3F03#1 = RMul(coeff3E8E,prod3EA0);
          tensor[84] intermediateCons3F04#1 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E72,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E76,basisEval3E7A,basisEval3E7E,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E82,basisEval3E85,basisEval3E89,basisEval3E8B,basisEval3E8D,basisEval3E91,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E95,basisEval3E98,basisEval3E9B,basisEval3E9F,basisEval3EA1,basisEval3EA3,basisEval3EA5,basisEval3EA7,basisEval3EA9,basisEval3EAD];
          tensor[84] intermediateCons3F05#2 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB0,basisEval3EB2,basisEval3E6D,basisEval3EB3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB4,basisEval3EB5,basisEval3E89,basisEval3E6D,basisEval3EB6,basisEval3EB8,basisEval3E6D,basisEval3EB9,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EBA,basisEval3EBB,basisEval3E9B,basisEval3EBD,basisEval3E6D,basisEval3EBE,basisEval3EBF,basisEval3EC1,basisEval3E6D,basisEval3EC2,basisEval3EC3,basisEval3E6D,basisEval3EC5,basisEval3E6D];
          tensor[84] intermediateCons3F06#2 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EC6,basisEval3EC7,basisEval3E6D,basisEval3EB3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E82,basisEval3EB5,basisEval3EC8,basisEval3E6D,basisEval3EC9,basisEval3ECA,basisEval3E6D,basisEval3EB9,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ECB,basisEval3E98,basisEval3ECC,basisEval3ECD,basisEval3E6D,basisEval3ECE,basisEval3EBF,basisEval3ECF,basisEval3E6D,basisEval3ED0,basisEval3ED1,basisEval3E6D,basisEval3EC5,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F07#2 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB0,basisEval3E7A,basisEval3E6D,basisEval3E6D,basisEval3ED2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB4,basisEval3E85,basisEval3ED3,basisEval3E6D,basisEval3E6D,basisEval3ED4,basisEval3EB8,basisEval3E6D,basisEval3E6D,basisEval3ED5,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EBA,basisEval3E98,basisEval3ED6,basisEval3ED7,basisEval3E6D,basisEval3E6D,basisEval3ED8,basisEval3EBF,basisEval3EA5,basisEval3E6D,basisEval3E6D,basisEval3ED9,basisEval3EDA,basisEval3E6D,basisEval3E6D,basisEval3EDB,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F08#3 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EDC,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB0,basisEval3EC7,basisEval3E6D,basisEval3E6D,basisEval3EDD,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EDF,basisEval3EB5,basisEval3EE0,basisEval3E6D,basisEval3E6D,basisEval3ED4,basisEval3EE1,basisEval3E6D,basisEval3E6D,basisEval3EE2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE3,basisEval3E98,basisEval3E9B,basisEval3EE4,basisEval3E6D,basisEval3E6D,basisEval3EBE,basisEval3EE5,basisEval3ECF,basisEval3E6D,basisEval3E6D,basisEval3ED9,basisEval3EE6,basisEval3E6D,basisEval3E6D,basisEval3EE7,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F09#2 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E76,basisEval3EC7,basisEval3E6D,basisEval3E6D,basisEval3ED2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE8,basisEval3E85,basisEval3EC8,basisEval3E6D,basisEval3E6D,basisEval3EC9,basisEval3EE1,basisEval3E6D,basisEval3E6D,basisEval3ED5,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE9,basisEval3EEA,basisEval3E9B,basisEval3ECD,basisEval3E6D,basisEval3E6D,basisEval3EA1,basisEval3EBF,basisEval3EEB,basisEval3E6D,basisEval3E6D,basisEval3EEC,basisEval3EE6,basisEval3E6D,basisEval3E6D,basisEval3EDB,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F0A#1 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E72,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E76,basisEval3EED,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E82,basisEval3EEE,basisEval3EEF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB6,basisEval3E8D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED5,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E95,basisEval3EF0,basisEval3EF1,basisEval3EF2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EBE,basisEval3EA3,basisEval3EF3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED9,basisEval3EC3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EF4,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F0B#2 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EC6,basisEval3E7A,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EDD,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E82,basisEval3EF5,basisEval3ED3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED4,basisEval3ECA,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EF6,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ECB,basisEval3EF7,basisEval3EF8,basisEval3ED7,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EBE,basisEval3EBF,basisEval3EF9,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFA,basisEval3EE6,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFB,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F0C#2 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E76,basisEval3EB2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EDD,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE8,basisEval3EF5,basisEval3E89,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB6,basisEval3EE1,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EF6,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE9,basisEval3EF0,basisEval3EFC,basisEval3EBD,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFD,basisEval3EBF,basisEval3ECF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED9,basisEval3EFE,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFB,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F0D#1 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E72,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFF,basisEval3E7A,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3F00,basisEval3EEE,basisEval3E89,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E8B,basisEval3ECA,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED5,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3F01,basisEval3F02,basisEval3EF8,basisEval3E9F,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3F03,basisEval3EA3,basisEval3ECF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED0,basisEval3EE6,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EF4,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[3,84] intermediateCons3F0E#1 = <tensor[3,84]>[intermediateCons3F04,intermediateCons3F05,intermediateCons3F06];
          tensor[3,84] intermediateCons3F0F#2 = <tensor[3,84]>[intermediateCons3F05,intermediateCons3F07,intermediateCons3F08];
          tensor[3,84] intermediateCons3F10#2 = <tensor[3,84]>[intermediateCons3F06,intermediateCons3F08,intermediateCons3F09];
          tensor[3,84] intermediateCons3F11#1 = <tensor[3,84]>[intermediateCons3F07,intermediateCons3F0A,intermediateCons3F0B];
          tensor[3,84] intermediateCons3F12#2 = <tensor[3,84]>[intermediateCons3F08,intermediateCons3F0B,intermediateCons3F0C];
          tensor[3,84] intermediateCons3F13#1 = <tensor[3,84]>[intermediateCons3F09,intermediateCons3F0C,intermediateCons3F0D];
          tensor[3,3,84] intermediateCons3F14#1 = <tensor[3,3,84]>[intermediateCons3F0E,intermediateCons3F0F,intermediateCons3F10];
          tensor[3,3,84] intermediateCons3F15#1 = <tensor[3,3,84]>[intermediateCons3F0F,intermediateCons3F11,intermediateCons3F12];
          tensor[3,3,84] intermediateCons3F16#1 = <tensor[3,3,84]>[intermediateCons3F10,intermediateCons3F12,intermediateCons3F13];
          tensor[3,3,3,84] intermediateCons3F17#1 = <tensor[3,3,3,84]>[intermediateCons3F14,intermediateCons3F15,intermediateCons3F16];
          tensor[3,3,3,84] basisResult3E69#27 = intermediateCons3F17;
          tensor[84] projParam3FC8#1 = ProjectLast<tensor[3,3,3,84],[0,0,0]>(basisResult3E69);
          real vdot3FC9#1 = VDot<84>(femDofs366B,projParam3FC8);
          tensor[84] projParam3FCA#1 = ProjectLast<tensor[3,3,3,84],[0,0,1]>(basisResult3E69);
          real vdot3FCB#1 = VDot<84>(femDofs366B,projParam3FCA);
          tensor[84] projParam3FCC#1 = ProjectLast<tensor[3,3,3,84],[0,0,2]>(basisResult3E69);
          real vdot3FCD#1 = VDot<84>(femDofs366B,projParam3FCC);
          tensor[3] tensor3FCE#1 = <tensor[3]>[vdot3FC9,vdot3FCB,vdot3FCD];
          tensor[84] projParam3FCF#1 = ProjectLast<tensor[3,3,3,84],[0,1,0]>(basisResult3E69);
          real vdot3FD0#1 = VDot<84>(femDofs366B,projParam3FCF);
          tensor[84] projParam3FD1#1 = ProjectLast<tensor[3,3,3,84],[0,1,1]>(basisResult3E69);
          real vdot3FD2#1 = VDot<84>(femDofs366B,projParam3FD1);
          tensor[84] projParam3FD3#1 = ProjectLast<tensor[3,3,3,84],[0,1,2]>(basisResult3E69);
          real vdot3FD4#1 = VDot<84>(femDofs366B,projParam3FD3);
          tensor[3] tensor3FD5#1 = <tensor[3]>[vdot3FD0,vdot3FD2,vdot3FD4];
          tensor[84] projParam3FD6#1 = ProjectLast<tensor[3,3,3,84],[0,2,0]>(basisResult3E69);
          real vdot3FD7#1 = VDot<84>(femDofs366B,projParam3FD6);
          tensor[84] projParam3FD8#1 = ProjectLast<tensor[3,3,3,84],[0,2,1]>(basisResult3E69);
          real vdot3FD9#1 = VDot<84>(femDofs366B,projParam3FD8);
          tensor[84] projParam3FDA#1 = ProjectLast<tensor[3,3,3,84],[0,2,2]>(basisResult3E69);
          real vdot3FDB#1 = VDot<84>(femDofs366B,projParam3FDA);
          tensor[3] tensor3FDC#1 = <tensor[3]>[vdot3FD7,vdot3FD9,vdot3FDB];
          tensor[3,3] tensor3FDD#1 = <tensor[3,3]>[tensor3FCE,tensor3FD5,tensor3FDC];
          tensor[84] projParam3FDE#1 = ProjectLast<tensor[3,3,3,84],[1,0,0]>(basisResult3E69);
          real vdot3FDF#1 = VDot<84>(femDofs366B,projParam3FDE);
          tensor[84] projParam3FE0#1 = ProjectLast<tensor[3,3,3,84],[1,0,1]>(basisResult3E69);
          real vdot3FE1#1 = VDot<84>(femDofs366B,projParam3FE0);
          tensor[84] projParam3FE2#1 = ProjectLast<tensor[3,3,3,84],[1,0,2]>(basisResult3E69);
          real vdot3FE3#1 = VDot<84>(femDofs366B,projParam3FE2);
          tensor[3] tensor3FE4#1 = <tensor[3]>[vdot3FDF,vdot3FE1,vdot3FE3];
          tensor[84] projParam3FE5#1 = ProjectLast<tensor[3,3,3,84],[1,1,0]>(basisResult3E69);
          real vdot3FE6#1 = VDot<84>(femDofs366B,projParam3FE5);
          tensor[84] projParam3FE7#1 = ProjectLast<tensor[3,3,3,84],[1,1,1]>(basisResult3E69);
          real vdot3FE8#1 = VDot<84>(femDofs366B,projParam3FE7);
          tensor[84] projParam3FE9#1 = ProjectLast<tensor[3,3,3,84],[1,1,2]>(basisResult3E69);
          real vdot3FEA#1 = VDot<84>(femDofs366B,projParam3FE9);
          tensor[3] tensor3FEB#1 = <tensor[3]>[vdot3FE6,vdot3FE8,vdot3FEA];
          tensor[84] projParam3FEC#1 = ProjectLast<tensor[3,3,3,84],[1,2,0]>(basisResult3E69);
          real vdot3FED#1 = VDot<84>(femDofs366B,projParam3FEC);
          tensor[84] projParam3FEE#1 = ProjectLast<tensor[3,3,3,84],[1,2,1]>(basisResult3E69);
          real vdot3FEF#1 = VDot<84>(femDofs366B,projParam3FEE);
          tensor[84] projParam3FF0#1 = ProjectLast<tensor[3,3,3,84],[1,2,2]>(basisResult3E69);
          real vdot3FF1#1 = VDot<84>(femDofs366B,projParam3FF0);
          tensor[3] tensor3FF2#1 = <tensor[3]>[vdot3FED,vdot3FEF,vdot3FF1];
          tensor[3,3] tensor3FF3#1 = <tensor[3,3]>[tensor3FE4,tensor3FEB,tensor3FF2];
          tensor[84] projParam3FF4#1 = ProjectLast<tensor[3,3,3,84],[2,0,0]>(basisResult3E69);
          real vdot3FF5#1 = VDot<84>(femDofs366B,projParam3FF4);
          tensor[84] projParam3FF6#1 = ProjectLast<tensor[3,3,3,84],[2,0,1]>(basisResult3E69);
          real vdot3FF7#1 = VDot<84>(femDofs366B,projParam3FF6);
          tensor[84] projParam3FF8#1 = ProjectLast<tensor[3,3,3,84],[2,0,2]>(basisResult3E69);
          real vdot3FF9#1 = VDot<84>(femDofs366B,projParam3FF8);
          tensor[3] tensor3FFA#1 = <tensor[3]>[vdot3FF5,vdot3FF7,vdot3FF9];
          tensor[84] projParam3FFB#1 = ProjectLast<tensor[3,3,3,84],[2,1,0]>(basisResult3E69);
          real vdot3FFC#1 = VDot<84>(femDofs366B,projParam3FFB);
          tensor[84] projParam3FFD#1 = ProjectLast<tensor[3,3,3,84],[2,1,1]>(basisResult3E69);
          real vdot3FFE#1 = VDot<84>(femDofs366B,projParam3FFD);
          tensor[84] projParam3FFF#1 = ProjectLast<tensor[3,3,3,84],[2,1,2]>(basisResult3E69);
          real vdot4000#1 = VDot<84>(femDofs366B,projParam3FFF);
          tensor[3] tensor4001#1 = <tensor[3]>[vdot3FFC,vdot3FFE,vdot4000];
          tensor[84] projParam4002#1 = ProjectLast<tensor[3,3,3,84],[2,2,0]>(basisResult3E69);
          real vdot4003#1 = VDot<84>(femDofs366B,projParam4002);
          tensor[84] projParam4004#1 = ProjectLast<tensor[3,3,3,84],[2,2,1]>(basisResult3E69);
          real vdot4005#1 = VDot<84>(femDofs366B,projParam4004);
          tensor[84] projParam4006#1 = ProjectLast<tensor[3,3,3,84],[2,2,2]>(basisResult3E69);
          real vdot4007#1 = VDot<84>(femDofs366B,projParam4006);
          tensor[3] tensor4008#1 = <tensor[3]>[vdot4003,vdot4005,vdot4007];
          tensor[3,3] tensor4009#1 = <tensor[3,3]>[tensor3FFA,tensor4001,tensor4008];
          tensor[3,3,3] probe_l_1083FC7#108 = <tensor[3,3,3]>[tensor3FDD,tensor3FF3,tensor4009];
          real r404F#9 = TensorIndex<tensor[3],[0]>(probe_l_823AF1);
          real r4050#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(probe_l_1083FC7);
          real r4051#1 = RMul(r404F,r4050);
          real r4052#1 = TensorIndex<tensor[3,3,3],[0,0,1]>(probe_l_1083FC7);
          real r4053#1 = RMul(r404F,r4052);
          real r4054#1 = TensorIndex<tensor[3,3,3],[0,0,2]>(probe_l_1083FC7);
          real r4055#1 = RMul(r404F,r4054);
          tensor[3] tensor4056#1 = <tensor[3]>[r4051,r4053,r4055];
          real r4057#1 = TensorIndex<tensor[3,3,3],[1,0,0]>(probe_l_1083FC7);
          real r4058#1 = RMul(r404F,r4057);
          real r4059#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(probe_l_1083FC7);
          real r405A#1 = RMul(r404F,r4059);
          real r405B#1 = TensorIndex<tensor[3,3,3],[1,0,2]>(probe_l_1083FC7);
          real r405C#1 = RMul(r404F,r405B);
          tensor[3] tensor405D#1 = <tensor[3]>[r4058,r405A,r405C];
          real r405E#1 = TensorIndex<tensor[3,3,3],[2,0,0]>(probe_l_1083FC7);
          real r405F#1 = RMul(r404F,r405E);
          real r4060#1 = TensorIndex<tensor[3,3,3],[2,0,1]>(probe_l_1083FC7);
          real r4061#1 = RMul(r404F,r4060);
          real r4062#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(probe_l_1083FC7);
          real r4063#1 = RMul(r404F,r4062);
          tensor[3] tensor4064#1 = <tensor[3]>[r405F,r4061,r4063];
          tensor[3,3] tensor4065#1 = <tensor[3,3]>[tensor4056,tensor405D,tensor4064];
          real r4066#9 = TensorIndex<tensor[3],[1]>(probe_l_823AF1);
          real r4067#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(probe_l_1083FC7);
          real r4068#1 = RMul(r4066,r4067);
          real r4069#1 = TensorIndex<tensor[3,3,3],[0,1,1]>(probe_l_1083FC7);
          real r406A#1 = RMul(r4066,r4069);
          real r406B#1 = TensorIndex<tensor[3,3,3],[0,1,2]>(probe_l_1083FC7);
          real r406C#1 = RMul(r4066,r406B);
          tensor[3] tensor406D#1 = <tensor[3]>[r4068,r406A,r406C];
          real r406E#1 = TensorIndex<tensor[3,3,3],[1,1,0]>(probe_l_1083FC7);
          real r406F#1 = RMul(r4066,r406E);
          real r4070#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(probe_l_1083FC7);
          real r4071#1 = RMul(r4066,r4070);
          real r4072#1 = TensorIndex<tensor[3,3,3],[1,1,2]>(probe_l_1083FC7);
          real r4073#1 = RMul(r4066,r4072);
          tensor[3] tensor4074#1 = <tensor[3]>[r406F,r4071,r4073];
          real r4075#1 = TensorIndex<tensor[3,3,3],[2,1,0]>(probe_l_1083FC7);
          real r4076#1 = RMul(r4066,r4075);
          real r4077#1 = TensorIndex<tensor[3,3,3],[2,1,1]>(probe_l_1083FC7);
          real r4078#1 = RMul(r4066,r4077);
          real r4079#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(probe_l_1083FC7);
          real r407A#1 = RMul(r4066,r4079);
          tensor[3] tensor407B#1 = <tensor[3]>[r4076,r4078,r407A];
          tensor[3,3] tensor407C#1 = <tensor[3,3]>[tensor406D,tensor4074,tensor407B];
          real r407D#9 = TensorIndex<tensor[3],[2]>(probe_l_823AF1);
          real r407E#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(probe_l_1083FC7);
          real r407F#1 = RMul(r407D,r407E);
          real r4080#1 = TensorIndex<tensor[3,3,3],[0,2,1]>(probe_l_1083FC7);
          real r4081#1 = RMul(r407D,r4080);
          real r4082#1 = TensorIndex<tensor[3,3,3],[0,2,2]>(probe_l_1083FC7);
          real r4083#1 = RMul(r407D,r4082);
          tensor[3] tensor4084#1 = <tensor[3]>[r407F,r4081,r4083];
          real r4085#1 = TensorIndex<tensor[3,3,3],[1,2,0]>(probe_l_1083FC7);
          real r4086#1 = RMul(r407D,r4085);
          real r4087#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(probe_l_1083FC7);
          real r4088#1 = RMul(r407D,r4087);
          real r4089#1 = TensorIndex<tensor[3,3,3],[1,2,2]>(probe_l_1083FC7);
          real r408A#1 = RMul(r407D,r4089);
          tensor[3] tensor408B#1 = <tensor[3]>[r4086,r4088,r408A];
          real r408C#1 = TensorIndex<tensor[3,3,3],[2,2,0]>(probe_l_1083FC7);
          real r408D#1 = RMul(r407D,r408C);
          real r408E#1 = TensorIndex<tensor[3,3,3],[2,2,1]>(probe_l_1083FC7);
          real r408F#1 = RMul(r407D,r408E);
          real r4090#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(probe_l_1083FC7);
          real r4091#1 = RMul(r407D,r4090);
          tensor[3] tensor4092#1 = <tensor[3]>[r408D,r408F,r4091];
          tensor[3,3] tensor4093#1 = <tensor[3,3]>[tensor4084,tensor408B,tensor4092];
          tensor[3,3,3] op1_e3_l_111404E#27 = <tensor[3,3,3]>[tensor4065,tensor407C,tensor4093];
          real r40DC#6 = TensorIndex<tensor[3,3],[0,0]>(probe_l_833CBA);
          real r40DD#1 = RMul(r40DC,r40DC);
          real r40DE#6 = TensorIndex<tensor[3,3],[0,1]>(probe_l_833CBA);
          real r40DF#1 = RMul(r40DC,r40DE);
          real r40E0#6 = TensorIndex<tensor[3,3],[0,2]>(probe_l_833CBA);
          real r40E1#1 = RMul(r40DC,r40E0);
          tensor[3] tensor40E2#1 = <tensor[3]>[r40DD,r40DF,r40E1];
          real r40E3#6 = TensorIndex<tensor[3,3],[1,0]>(probe_l_833CBA);
          real r40E4#1 = RMul(r40DE,r40E3);
          real r40E5#6 = TensorIndex<tensor[3,3],[1,1]>(probe_l_833CBA);
          real r40E6#1 = RMul(r40DE,r40E5);
          real r40E7#6 = TensorIndex<tensor[3,3],[1,2]>(probe_l_833CBA);
          real r40E8#1 = RMul(r40DE,r40E7);
          tensor[3] tensor40E9#1 = <tensor[3]>[r40E4,r40E6,r40E8];
          real r40EA#6 = TensorIndex<tensor[3,3],[2,0]>(probe_l_833CBA);
          real r40EB#1 = RMul(r40E0,r40EA);
          real r40EC#6 = TensorIndex<tensor[3,3],[2,1]>(probe_l_833CBA);
          real r40ED#1 = RMul(r40E0,r40EC);
          real r40EE#6 = TensorIndex<tensor[3,3],[2,2]>(probe_l_833CBA);
          real r40EF#1 = RMul(r40E0,r40EE);
          tensor[3] tensor40F0#1 = <tensor[3]>[r40EB,r40ED,r40EF];
          tensor[3,3] tensor40F1#1 = <tensor[3,3]>[tensor40E2,tensor40E9,tensor40F0];
          real r40F2#1 = RMul(r40E3,r40DC);
          real r40F3#1 = RMul(r40E3,r40DE);
          real r40F4#1 = RMul(r40E3,r40E0);
          tensor[3] tensor40F5#1 = <tensor[3]>[r40F2,r40F3,r40F4];
          real r40F6#1 = RMul(r40E5,r40E3);
          real r40F7#1 = RMul(r40E5,r40E5);
          real r40F8#1 = RMul(r40E5,r40E7);
          tensor[3] tensor40F9#1 = <tensor[3]>[r40F6,r40F7,r40F8];
          real r40FA#1 = RMul(r40E7,r40EA);
          real r40FB#1 = RMul(r40E7,r40EC);
          real r40FC#1 = RMul(r40E7,r40EE);
          tensor[3] tensor40FD#1 = <tensor[3]>[r40FA,r40FB,r40FC];
          tensor[3,3] tensor40FE#1 = <tensor[3,3]>[tensor40F5,tensor40F9,tensor40FD];
          real r40FF#1 = RMul(r40EA,r40DC);
          real r4100#1 = RMul(r40EA,r40DE);
          real r4101#1 = RMul(r40EA,r40E0);
          tensor[3] tensor4102#1 = <tensor[3]>[r40FF,r4100,r4101];
          real r4103#1 = RMul(r40EC,r40E3);
          real r4104#1 = RMul(r40EC,r40E5);
          real r4105#1 = RMul(r40EC,r40E7);
          tensor[3] tensor4106#1 = <tensor[3]>[r4103,r4104,r4105];
          real r4107#1 = RMul(r40EE,r40EA);
          real r4108#1 = RMul(r40EE,r40EC);
          real r4109#1 = RMul(r40EE,r40EE);
          tensor[3] tensor410A#1 = <tensor[3]>[r4107,r4108,r4109];
          tensor[3,3] tensor410B#1 = <tensor[3,3]>[tensor4102,tensor4106,tensor410A];
          tensor[3,3,3] op1_e3_l_11240DB#27 = <tensor[3,3,3]>[tensor40F1,tensor40FE,tensor410B];
          real r413F#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_111404E);
          real r4140#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_11240DB);
          real r4141#1 = RAdd(r413F,r4140);
          real r4142#1 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_111404E);
          real r4143#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_11240DB);
          real r4144#1 = RAdd(r4142,r4143);
          real r4145#1 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_111404E);
          real r4146#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_11240DB);
          real r4147#1 = RAdd(r4145,r4146);
          real r4148#1 = RAdd(r4141,r4144);
          real r4149#1 = RAdd(r4148,r4147);
          real r414A#1 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_111404E);
          real r414B#1 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_11240DB);
          real r414C#1 = RAdd(r414A,r414B);
          real r414D#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_111404E);
          real r414E#1 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_11240DB);
          real r414F#1 = RAdd(r414D,r414E);
          real r4150#1 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_111404E);
          real r4151#1 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_11240DB);
          real r4152#1 = RAdd(r4150,r4151);
          real r4153#1 = RAdd(r414C,r414F);
          real r4154#1 = RAdd(r4153,r4152);
          real r4155#1 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_111404E);
          real r4156#1 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_11240DB);
          real r4157#1 = RAdd(r4155,r4156);
          real r4158#1 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_111404E);
          real r4159#1 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_11240DB);
          real r415A#1 = RAdd(r4158,r4159);
          real r415B#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_111404E);
          real r415C#1 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_11240DB);
          real r415D#1 = RAdd(r415B,r415C);
          real r415E#1 = RAdd(r4157,r415A);
          real r415F#1 = RAdd(r415E,r415D);
          tensor[3] tensor4160#1 = <tensor[3]>[r4149,r4154,r415F];
          real r4161#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_111404E);
          real r4162#1 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_11240DB);
          real r4163#1 = RAdd(r4161,r4162);
          real r4164#1 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_111404E);
          real r4165#1 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_11240DB);
          real r4166#1 = RAdd(r4164,r4165);
          real r4167#1 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_111404E);
          real r4168#1 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_11240DB);
          real r4169#1 = RAdd(r4167,r4168);
          real r416A#1 = RAdd(r4163,r4166);
          real r416B#1 = RAdd(r416A,r4169);
          real r416C#1 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_111404E);
          real r416D#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_11240DB);
          real r416E#1 = RAdd(r416C,r416D);
          real r416F#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_111404E);
          real r4170#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_11240DB);
          real r4171#1 = RAdd(r416F,r4170);
          real r4172#1 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_111404E);
          real r4173#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_11240DB);
          real r4174#1 = RAdd(r4172,r4173);
          real r4175#1 = RAdd(r416E,r4171);
          real r4176#1 = RAdd(r4175,r4174);
          real r4177#1 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_111404E);
          real r4178#1 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_11240DB);
          real r4179#1 = RAdd(r4177,r4178);
          real r417A#1 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_111404E);
          real r417B#1 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_11240DB);
          real r417C#1 = RAdd(r417A,r417B);
          real r417D#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_111404E);
          real r417E#1 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_11240DB);
          real r417F#1 = RAdd(r417D,r417E);
          real r4180#1 = RAdd(r4179,r417C);
          real r4181#1 = RAdd(r4180,r417F);
          tensor[3] tensor4182#1 = <tensor[3]>[r416B,r4176,r4181];
          real r4183#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_111404E);
          real r4184#1 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_11240DB);
          real r4185#1 = RAdd(r4183,r4184);
          real r4186#1 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_111404E);
          real r4187#1 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_11240DB);
          real r4188#1 = RAdd(r4186,r4187);
          real r4189#1 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_111404E);
          real r418A#1 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_11240DB);
          real r418B#1 = RAdd(r4189,r418A);
          real r418C#1 = RAdd(r4185,r4188);
          real r418D#1 = RAdd(r418C,r418B);
          real r418E#1 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_111404E);
          real r418F#1 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_11240DB);
          real r4190#1 = RAdd(r418E,r418F);
          real r4191#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_111404E);
          real r4192#1 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_11240DB);
          real r4193#1 = RAdd(r4191,r4192);
          real r4194#1 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_111404E);
          real r4195#1 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_11240DB);
          real r4196#1 = RAdd(r4194,r4195);
          real r4197#1 = RAdd(r4190,r4193);
          real r4198#1 = RAdd(r4197,r4196);
          real r4199#1 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_111404E);
          real r419A#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_11240DB);
          real r419B#1 = RAdd(r4199,r419A);
          real r419C#1 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_111404E);
          real r419D#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_11240DB);
          real r419E#1 = RAdd(r419C,r419D);
          real r419F#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_111404E);
          real r41A0#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_11240DB);
          real r41A1#1 = RAdd(r419F,r41A0);
          real r41A2#1 = RAdd(r419B,r419E);
          real r41A3#1 = RAdd(r41A2,r41A1);
          tensor[3] tensor41A4#1 = <tensor[3]>[r418D,r4198,r41A3];
          tensor[3,3] op1_e3_l_113413E#9 = <tensor[3,3]>[tensor4160,tensor4182,tensor41A4];
          real r420E#9 = TensorIndex<tensor[3],[0]>(op1_e3_l_853CE7);
          real r420F#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_833CBA);
          real r4210#1 = RMul(r420E,r420F);
          real r4211#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_833CBA);
          real r4212#1 = RMul(r420E,r4211);
          real r4213#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_833CBA);
          real r4214#1 = RMul(r420E,r4213);
          tensor[3] tensor4215#1 = <tensor[3]>[r4210,r4212,r4214];
          real r4216#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_833CBA);
          real r4217#1 = RMul(r420E,r4216);
          real r4218#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_833CBA);
          real r4219#1 = RMul(r420E,r4218);
          real r421A#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_833CBA);
          real r421B#1 = RMul(r420E,r421A);
          tensor[3] tensor421C#1 = <tensor[3]>[r4217,r4219,r421B];
          real r421D#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_833CBA);
          real r421E#1 = RMul(r420E,r421D);
          real r421F#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_833CBA);
          real r4220#1 = RMul(r420E,r421F);
          real r4221#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_833CBA);
          real r4222#1 = RMul(r420E,r4221);
          tensor[3] tensor4223#1 = <tensor[3]>[r421E,r4220,r4222];
          tensor[3,3] tensor4224#1 = <tensor[3,3]>[tensor4215,tensor421C,tensor4223];
          real r4225#9 = TensorIndex<tensor[3],[1]>(op1_e3_l_853CE7);
          real r4226#1 = RMul(r4225,r420F);
          real r4227#1 = RMul(r4225,r4211);
          real r4228#1 = RMul(r4225,r4213);
          tensor[3] tensor4229#1 = <tensor[3]>[r4226,r4227,r4228];
          real r422A#1 = RMul(r4225,r4216);
          real r422B#1 = RMul(r4225,r4218);
          real r422C#1 = RMul(r4225,r421A);
          tensor[3] tensor422D#1 = <tensor[3]>[r422A,r422B,r422C];
          real r422E#1 = RMul(r4225,r421D);
          real r422F#1 = RMul(r4225,r421F);
          real r4230#1 = RMul(r4225,r4221);
          tensor[3] tensor4231#1 = <tensor[3]>[r422E,r422F,r4230];
          tensor[3,3] tensor4232#1 = <tensor[3,3]>[tensor4229,tensor422D,tensor4231];
          real r4233#9 = TensorIndex<tensor[3],[2]>(op1_e3_l_853CE7);
          real r4234#1 = RMul(r4233,r420F);
          real r4235#1 = RMul(r4233,r4211);
          real r4236#1 = RMul(r4233,r4213);
          tensor[3] tensor4237#1 = <tensor[3]>[r4234,r4235,r4236];
          real r4238#1 = RMul(r4233,r4216);
          real r4239#1 = RMul(r4233,r4218);
          real r423A#1 = RMul(r4233,r421A);
          tensor[3] tensor423B#1 = <tensor[3]>[r4238,r4239,r423A];
          real r423C#1 = RMul(r4233,r421D);
          real r423D#1 = RMul(r4233,r421F);
          real r423E#1 = RMul(r4233,r4221);
          tensor[3] tensor423F#1 = <tensor[3]>[r423C,r423D,r423E];
          tensor[3,3] tensor4240#1 = <tensor[3,3]>[tensor4237,tensor423B,tensor423F];
          tensor[3,3,3] op1_e3_l_114420D#36 = <tensor[3,3,3]>[tensor4224,tensor4232,tensor4240];
          real r4277#9 = TensorIndex<tensor[3],[0]>(probe_l_823AF1);
          real r4278#3 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_113413E);
          real r4279#1 = RMul(r4277,r4278);
          real r427A#3 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_113413E);
          real r427B#1 = RMul(r4277,r427A);
          real r427C#3 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_113413E);
          real r427D#1 = RMul(r4277,r427C);
          tensor[3] tensor427E#1 = <tensor[3]>[r4279,r427B,r427D];
          real r427F#3 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_113413E);
          real r4280#1 = RMul(r4277,r427F);
          real r4281#3 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_113413E);
          real r4282#1 = RMul(r4277,r4281);
          real r4283#3 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_113413E);
          real r4284#1 = RMul(r4277,r4283);
          tensor[3] tensor4285#1 = <tensor[3]>[r4280,r4282,r4284];
          real r4286#3 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_113413E);
          real r4287#1 = RMul(r4277,r4286);
          real r4288#3 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_113413E);
          real r4289#1 = RMul(r4277,r4288);
          real r428A#3 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_113413E);
          real r428B#1 = RMul(r4277,r428A);
          tensor[3] tensor428C#1 = <tensor[3]>[r4287,r4289,r428B];
          tensor[3,3] tensor428D#1 = <tensor[3,3]>[tensor427E,tensor4285,tensor428C];
          real r428E#9 = TensorIndex<tensor[3],[1]>(probe_l_823AF1);
          real r428F#1 = RMul(r428E,r4278);
          real r4290#1 = RMul(r428E,r427A);
          real r4291#1 = RMul(r428E,r427C);
          tensor[3] tensor4292#1 = <tensor[3]>[r428F,r4290,r4291];
          real r4293#1 = RMul(r428E,r427F);
          real r4294#1 = RMul(r428E,r4281);
          real r4295#1 = RMul(r428E,r4283);
          tensor[3] tensor4296#1 = <tensor[3]>[r4293,r4294,r4295];
          real r4297#1 = RMul(r428E,r4286);
          real r4298#1 = RMul(r428E,r4288);
          real r4299#1 = RMul(r428E,r428A);
          tensor[3] tensor429A#1 = <tensor[3]>[r4297,r4298,r4299];
          tensor[3,3] tensor429B#1 = <tensor[3,3]>[tensor4292,tensor4296,tensor429A];
          real r429C#9 = TensorIndex<tensor[3],[2]>(probe_l_823AF1);
          real r429D#1 = RMul(r429C,r4278);
          real r429E#1 = RMul(r429C,r427A);
          real r429F#1 = RMul(r429C,r427C);
          tensor[3] tensor42A0#1 = <tensor[3]>[r429D,r429E,r429F];
          real r42A1#1 = RMul(r429C,r427F);
          real r42A2#1 = RMul(r429C,r4281);
          real r42A3#1 = RMul(r429C,r4283);
          tensor[3] tensor42A4#1 = <tensor[3]>[r42A1,r42A2,r42A3];
          real r42A5#1 = RMul(r429C,r4286);
          real r42A6#1 = RMul(r429C,r4288);
          real r42A7#1 = RMul(r429C,r428A);
          tensor[3] tensor42A8#1 = <tensor[3]>[r42A5,r42A6,r42A7];
          tensor[3,3] tensor42A9#1 = <tensor[3,3]>[tensor42A0,tensor42A4,tensor42A8];
          tensor[3,3,3] op1_e3_l_1154276#9 = <tensor[3,3,3]>[tensor428D,tensor429B,tensor42A9];
          tensor[3] projParam42E0#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_114420D);
          tensor[3] projParam42E1#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_1154276);
          tensor[3] v42E2#1 = VAdd<3>(projParam42E0,projParam42E1);
          tensor[3] projParam42E3#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_114420D);
          tensor[3] projParam42E4#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_1154276);
          tensor[3] v42E5#1 = VAdd<3>(projParam42E3,projParam42E4);
          tensor[3] projParam42E6#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_114420D);
          tensor[3] projParam42E7#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_1154276);
          tensor[3] v42E8#1 = VAdd<3>(projParam42E6,projParam42E7);
          tensor[3,3] tensor42E9#1 = <tensor[3,3]>[v42E2,v42E5,v42E8];
          tensor[3] projParam42EA#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_114420D);
          tensor[3] projParam42EB#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_1154276);
          tensor[3] v42EC#1 = VAdd<3>(projParam42EA,projParam42EB);
          tensor[3] projParam42ED#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_114420D);
          tensor[3] projParam42EE#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_1154276);
          tensor[3] v42EF#1 = VAdd<3>(projParam42ED,projParam42EE);
          tensor[3] projParam42F0#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_114420D);
          tensor[3] projParam42F1#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_1154276);
          tensor[3] v42F2#1 = VAdd<3>(projParam42F0,projParam42F1);
          tensor[3,3] tensor42F3#1 = <tensor[3,3]>[v42EC,v42EF,v42F2];
          tensor[3] projParam42F4#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_114420D);
          tensor[3] projParam42F5#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_1154276);
          tensor[3] v42F6#1 = VAdd<3>(projParam42F4,projParam42F5);
          tensor[3] projParam42F7#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_114420D);
          tensor[3] projParam42F8#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_1154276);
          tensor[3] v42F9#1 = VAdd<3>(projParam42F7,projParam42F8);
          tensor[3] projParam42FA#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_114420D);
          tensor[3] projParam42FB#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_1154276);
          tensor[3] v42FC#1 = VAdd<3>(projParam42FA,projParam42FB);
          tensor[3,3] tensor42FD#1 = <tensor[3,3]>[v42F6,v42F9,v42FC];
          tensor[3,3,3] op1_e3_l_11642DF#27 = <tensor[3,3,3]>[tensor42E9,tensor42F3,tensor42FD];
          real r431F#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_11642DF);
          real r4320#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_863CF6);
          real r4321#1 = RMul(r431F,r4320);
          real r4322#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_11642DF);
          real r4323#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_863CF6);
          real r4324#1 = RMul(r4322,r4323);
          real r4325#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_11642DF);
          real r4326#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_863CF6);
          real r4327#1 = RMul(r4325,r4326);
          real r4328#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_11642DF);
          real r4329#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_863CF6);
          real r432A#1 = RMul(r4328,r4329);
          real r432B#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_11642DF);
          real r432C#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_863CF6);
          real r432D#1 = RMul(r432B,r432C);
          real r432E#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_11642DF);
          real r432F#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_863CF6);
          real r4330#1 = RMul(r432E,r432F);
          real r4331#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_11642DF);
          real r4332#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_863CF6);
          real r4333#1 = RMul(r4331,r4332);
          real r4334#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_11642DF);
          real r4335#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_863CF6);
          real r4336#1 = RMul(r4334,r4335);
          real r4337#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_11642DF);
          real r4338#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_863CF6);
          real r4339#1 = RMul(r4337,r4338);
          real r433A#1 = RAdd(r4321,r4324);
          real r433B#1 = RAdd(r433A,r4327);
          real r433C#1 = RAdd(r433B,r432A);
          real r433D#1 = RAdd(r433C,r432D);
          real r433E#1 = RAdd(r433D,r4330);
          real r433F#1 = RAdd(r433E,r4333);
          real r4340#1 = RAdd(r433F,r4336);
          real r4341#1 = RAdd(r4340,r4339);
          real r4342#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_863CF6);
          real r4343#1 = RMul(r431F,r4342);
          real r4344#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_863CF6);
          real r4345#1 = RMul(r4322,r4344);
          real r4346#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_863CF6);
          real r4347#1 = RMul(r4325,r4346);
          real r4348#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_863CF6);
          real r4349#1 = RMul(r4328,r4348);
          real r434A#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_863CF6);
          real r434B#1 = RMul(r432B,r434A);
          real r434C#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_863CF6);
          real r434D#1 = RMul(r432E,r434C);
          real r434E#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_863CF6);
          real r434F#1 = RMul(r4331,r434E);
          real r4350#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_863CF6);
          real r4351#1 = RMul(r4334,r4350);
          real r4352#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_863CF6);
          real r4353#1 = RMul(r4337,r4352);
          real r4354#1 = RAdd(r4343,r4345);
          real r4355#1 = RAdd(r4354,r4347);
          real r4356#1 = RAdd(r4355,r4349);
          real r4357#1 = RAdd(r4356,r434B);
          real r4358#1 = RAdd(r4357,r434D);
          real r4359#1 = RAdd(r4358,r434F);
          real r435A#1 = RAdd(r4359,r4351);
          real r435B#1 = RAdd(r435A,r4353);
          real r435C#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_863CF6);
          real r435D#1 = RMul(r431F,r435C);
          real r435E#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_863CF6);
          real r435F#1 = RMul(r4322,r435E);
          real r4360#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_863CF6);
          real r4361#1 = RMul(r4325,r4360);
          real r4362#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_863CF6);
          real r4363#1 = RMul(r4328,r4362);
          real r4364#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_863CF6);
          real r4365#1 = RMul(r432B,r4364);
          real r4366#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_863CF6);
          real r4367#1 = RMul(r432E,r4366);
          real r4368#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_863CF6);
          real r4369#1 = RMul(r4331,r4368);
          real r436A#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_863CF6);
          real r436B#1 = RMul(r4334,r436A);
          real r436C#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_863CF6);
          real r436D#1 = RMul(r4337,r436C);
          real r436E#1 = RAdd(r435D,r435F);
          real r436F#1 = RAdd(r436E,r4361);
          real r4370#1 = RAdd(r436F,r4363);
          real r4371#1 = RAdd(r4370,r4365);
          real r4372#1 = RAdd(r4371,r4367);
          real r4373#1 = RAdd(r4372,r4369);
          real r4374#1 = RAdd(r4373,r436B);
          real r4375#1 = RAdd(r4374,r436D);
          tensor[3] tensor4376#1 = <tensor[3]>[r4341,r435B,r4375];
          real r4377#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_11642DF);
          real r4378#1 = RMul(r4377,r4320);
          real r4379#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_11642DF);
          real r437A#1 = RMul(r4379,r4323);
          real r437B#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_11642DF);
          real r437C#1 = RMul(r437B,r4326);
          real r437D#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_11642DF);
          real r437E#1 = RMul(r437D,r4329);
          real r437F#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_11642DF);
          real r4380#1 = RMul(r437F,r432C);
          real r4381#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_11642DF);
          real r4382#1 = RMul(r4381,r432F);
          real r4383#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_11642DF);
          real r4384#1 = RMul(r4383,r4332);
          real r4385#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_11642DF);
          real r4386#1 = RMul(r4385,r4335);
          real r4387#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_11642DF);
          real r4388#1 = RMul(r4387,r4338);
          real r4389#1 = RAdd(r4378,r437A);
          real r438A#1 = RAdd(r4389,r437C);
          real r438B#1 = RAdd(r438A,r437E);
          real r438C#1 = RAdd(r438B,r4380);
          real r438D#1 = RAdd(r438C,r4382);
          real r438E#1 = RAdd(r438D,r4384);
          real r438F#1 = RAdd(r438E,r4386);
          real r4390#1 = RAdd(r438F,r4388);
          real r4391#1 = RMul(r4377,r4342);
          real r4392#1 = RMul(r4379,r4344);
          real r4393#1 = RMul(r437B,r4346);
          real r4394#1 = RMul(r437D,r4348);
          real r4395#1 = RMul(r437F,r434A);
          real r4396#1 = RMul(r4381,r434C);
          real r4397#1 = RMul(r4383,r434E);
          real r4398#1 = RMul(r4385,r4350);
          real r4399#1 = RMul(r4387,r4352);
          real r439A#1 = RAdd(r4391,r4392);
          real r439B#1 = RAdd(r439A,r4393);
          real r439C#1 = RAdd(r439B,r4394);
          real r439D#1 = RAdd(r439C,r4395);
          real r439E#1 = RAdd(r439D,r4396);
          real r439F#1 = RAdd(r439E,r4397);
          real r43A0#1 = RAdd(r439F,r4398);
          real r43A1#1 = RAdd(r43A0,r4399);
          real r43A2#1 = RMul(r4377,r435C);
          real r43A3#1 = RMul(r4379,r435E);
          real r43A4#1 = RMul(r437B,r4360);
          real r43A5#1 = RMul(r437D,r4362);
          real r43A6#1 = RMul(r437F,r4364);
          real r43A7#1 = RMul(r4381,r4366);
          real r43A8#1 = RMul(r4383,r4368);
          real r43A9#1 = RMul(r4385,r436A);
          real r43AA#1 = RMul(r4387,r436C);
          real r43AB#1 = RAdd(r43A2,r43A3);
          real r43AC#1 = RAdd(r43AB,r43A4);
          real r43AD#1 = RAdd(r43AC,r43A5);
          real r43AE#1 = RAdd(r43AD,r43A6);
          real r43AF#1 = RAdd(r43AE,r43A7);
          real r43B0#1 = RAdd(r43AF,r43A8);
          real r43B1#1 = RAdd(r43B0,r43A9);
          real r43B2#1 = RAdd(r43B1,r43AA);
          tensor[3] tensor43B3#1 = <tensor[3]>[r4390,r43A1,r43B2];
          real r43B4#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_11642DF);
          real r43B5#1 = RMul(r43B4,r4320);
          real r43B6#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_11642DF);
          real r43B7#1 = RMul(r43B6,r4323);
          real r43B8#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_11642DF);
          real r43B9#1 = RMul(r43B8,r4326);
          real r43BA#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_11642DF);
          real r43BB#1 = RMul(r43BA,r4329);
          real r43BC#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_11642DF);
          real r43BD#1 = RMul(r43BC,r432C);
          real r43BE#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_11642DF);
          real r43BF#1 = RMul(r43BE,r432F);
          real r43C0#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_11642DF);
          real r43C1#1 = RMul(r43C0,r4332);
          real r43C2#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_11642DF);
          real r43C3#1 = RMul(r43C2,r4335);
          real r43C4#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_11642DF);
          real r43C5#1 = RMul(r43C4,r4338);
          real r43C6#1 = RAdd(r43B5,r43B7);
          real r43C7#1 = RAdd(r43C6,r43B9);
          real r43C8#1 = RAdd(r43C7,r43BB);
          real r43C9#1 = RAdd(r43C8,r43BD);
          real r43CA#1 = RAdd(r43C9,r43BF);
          real r43CB#1 = RAdd(r43CA,r43C1);
          real r43CC#1 = RAdd(r43CB,r43C3);
          real r43CD#1 = RAdd(r43CC,r43C5);
          real r43CE#1 = RMul(r43B4,r4342);
          real r43CF#1 = RMul(r43B6,r4344);
          real r43D0#1 = RMul(r43B8,r4346);
          real r43D1#1 = RMul(r43BA,r4348);
          real r43D2#1 = RMul(r43BC,r434A);
          real r43D3#1 = RMul(r43BE,r434C);
          real r43D4#1 = RMul(r43C0,r434E);
          real r43D5#1 = RMul(r43C2,r4350);
          real r43D6#1 = RMul(r43C4,r4352);
          real r43D7#1 = RAdd(r43CE,r43CF);
          real r43D8#1 = RAdd(r43D7,r43D0);
          real r43D9#1 = RAdd(r43D8,r43D1);
          real r43DA#1 = RAdd(r43D9,r43D2);
          real r43DB#1 = RAdd(r43DA,r43D3);
          real r43DC#1 = RAdd(r43DB,r43D4);
          real r43DD#1 = RAdd(r43DC,r43D5);
          real r43DE#1 = RAdd(r43DD,r43D6);
          real r43DF#1 = RMul(r43B4,r435C);
          real r43E0#1 = RMul(r43B6,r435E);
          real r43E1#1 = RMul(r43B8,r4360);
          real r43E2#1 = RMul(r43BA,r4362);
          real r43E3#1 = RMul(r43BC,r4364);
          real r43E4#1 = RMul(r43BE,r4366);
          real r43E5#1 = RMul(r43C0,r4368);
          real r43E6#1 = RMul(r43C2,r436A);
          real r43E7#1 = RMul(r43C4,r436C);
          real r43E8#1 = RAdd(r43DF,r43E0);
          real r43E9#1 = RAdd(r43E8,r43E1);
          real r43EA#1 = RAdd(r43E9,r43E2);
          real r43EB#1 = RAdd(r43EA,r43E3);
          real r43EC#1 = RAdd(r43EB,r43E4);
          real r43ED#1 = RAdd(r43EC,r43E5);
          real r43EE#1 = RAdd(r43ED,r43E6);
          real r43EF#1 = RAdd(r43EE,r43E7);
          tensor[3] tensor43F0#1 = <tensor[3]>[r43CD,r43DE,r43EF];
          tensor[3,3] op1_e3_l_119431E#9 = <tensor[3,3]>[tensor4376,tensor43B3,tensor43F0];
          real r44C6#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_943E30);
          real r44C7#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_119431E);
          real r44C8#1 = RMul(r44C6,r44C7);
          real r44C9#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_119431E);
          real r44CA#1 = RMul(r44C6,r44C9);
          real r44CB#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_119431E);
          real r44CC#1 = RMul(r44C6,r44CB);
          tensor[3] tensor44CD#1 = <tensor[3]>[r44C8,r44CA,r44CC];
          real r44CE#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_943E30);
          real r44CF#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_119431E);
          real r44D0#1 = RMul(r44CE,r44CF);
          real r44D1#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_119431E);
          real r44D2#1 = RMul(r44CE,r44D1);
          real r44D3#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_119431E);
          real r44D4#1 = RMul(r44CE,r44D3);
          tensor[3] tensor44D5#1 = <tensor[3]>[r44D0,r44D2,r44D4];
          real r44D6#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_943E30);
          real r44D7#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_119431E);
          real r44D8#1 = RMul(r44D6,r44D7);
          real r44D9#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_119431E);
          real r44DA#1 = RMul(r44D6,r44D9);
          real r44DB#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_119431E);
          real r44DC#1 = RMul(r44D6,r44DB);
          tensor[3] tensor44DD#1 = <tensor[3]>[r44D8,r44DA,r44DC];
          tensor[3,3] op1_e3_l_14444C5#9 = <tensor[3,3]>[tensor44CD,tensor44D5,tensor44DD];
          real op1_e3_l_14644F8#4 = VDot<3>(op1_e3_l_943E30,op1_e3_l_943E30);
          real r44FC#2 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_14444C5);
          real r44FD#1 = RAdd(r44FC,r44FC);
          real r44FE#2 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_14444C5);
          real r44FF#1 = RAdd(r44FE,r44FE);
          real r4500#2 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_14444C5);
          real r4501#1 = RAdd(r4500,r4500);
          real r4502#1 = RAdd(r44FD,r44FF);
          real r4503#1 = RAdd(r4502,r4501);
          real r4504#2 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_14444C5);
          real r4505#1 = RAdd(r4504,r4504);
          real r4506#2 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_14444C5);
          real r4507#1 = RAdd(r4506,r4506);
          real r4508#2 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_14444C5);
          real r4509#1 = RAdd(r4508,r4508);
          real r450A#1 = RAdd(r4505,r4507);
          real r450B#1 = RAdd(r450A,r4509);
          real r450C#2 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_14444C5);
          real r450D#1 = RAdd(r450C,r450C);
          real r450E#2 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_14444C5);
          real r450F#1 = RAdd(r450E,r450E);
          real r4510#2 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_14444C5);
          real r4511#1 = RAdd(r4510,r4510);
          real r4512#1 = RAdd(r450D,r450F);
          real r4513#1 = RAdd(r4512,r4511);
          tensor[3] op1_e3_l_14744FB#3 = <tensor[3]>[r4503,r450B,r4513];
          tensor[3] op1_e3_l_250452E#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_14744FB);
          real op1_e3_l_2514531#1 = VDot<3>(op1_e3_l_14744FB,op1_e3_l_14744FB);
          real realLit4535#1 = 0.1e1;
          real r4536#3 = RDiv(realLit4535,op1_e3_l_2514531);
          real r4537#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_250452E);
          real r4538#1 = RMul(r4536,r4537);
          real r4539#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_250452E);
          real r453A#1 = RMul(r4536,r4539);
          real r453B#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_250452E);
          real r453C#1 = RMul(r4536,r453B);
          tensor[3] op1_e3_l_2524534#1 = <tensor[3]>[r4538,r453A,r453C];
          tensor[3] op1_e3_l_4244547#2 = VNeg<3>(op1_e3_l_2524534);
          real op1_e3_l_426454A#1 = VDot<3>(op1_e3_l_4244547,op1_e3_l_4244547);
          real op1_e3_l_427454D#1 = Sqrt(op1_e3_l_426454A);
          real op1_e3_l_4284550#1 = Abs<real>(op1_e3_l_427454D);
          real op1_e3_l_4294553#1 = RDiv(op1_e3_l_4284550,thick2411);
          real op1_e3_l_4304556#1 = RSub(_t3467,op1_e3_l_4294553);
          real op1_e3_l_4314559#2 = RMul(_t3469,op1_e3_l_4304556);
          real op1_e3_l_432455C#1 = RClamp(_t3465,_t3467,op1_e3_l_4314559);
          real _t455F#1 = RMul(maxAlpha2419,op1_e3_l_432455C);
          bool _t4562#1 = EQ<real>(_t455F,_t3465);
          if _t4562 then goto SAVE4565 else goto JOIN4567
        SAVE4565:  preds = [COND4564]
          self.rayN = rayN243D;
          active
          goto JOIN4567
        JOIN4567:  preds = [*ACTIVE4566,COND4564]
          real op1_e3_l_4334568#1 = RClamp(_t3465,_t3467,op1_e3_l_4314559);
          real op1_e3_l_434456B#1 = RMul(maxAlpha2419,op1_e3_l_4334568);
          real _t456E#1 = RSub(_t3467,op1_e3_l_434456B);
          real _t4571#1 = MathFn<pow>(_t456E,alphaFix242D);
          bool _t4573#1 = NEQ<real>(phKs2435,_t3465);
          if _t4573 then goto ASSIGN4578 else goto JOIN4947
        ASSIGN4578:  preds = [COND4575]
          tensor[3] op1_e3_l_1564576#3 = VAdd<3>(eyeDir242F,litwsp2425);
          real op1_e3_l_1584579#1 = VDot<3>(op1_e3_l_1564576,op1_e3_l_1564576);
          real op1_e3_l_159457C#1 = Sqrt(op1_e3_l_1584579);
          real r4580#9 = TensorIndex<tensor[3],[0]>(probe_l_823AF1);
          real r4581#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(probe_l_1083FC7);
          real r4582#1 = RMul(r4580,r4581);
          real r4583#9 = TensorIndex<tensor[3],[1]>(probe_l_823AF1);
          real r4584#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(probe_l_1083FC7);
          real r4585#1 = RMul(r4583,r4584);
          real r4586#9 = TensorIndex<tensor[3],[2]>(probe_l_823AF1);
          real r4587#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(probe_l_1083FC7);
          real r4588#1 = RMul(r4586,r4587);
          real r4589#1 = RAdd(r4582,r4585);
          real r458A#1 = RAdd(r4589,r4588);
          real r458B#1 = TensorIndex<tensor[3,3,3],[0,0,1]>(probe_l_1083FC7);
          real r458C#1 = RMul(r4580,r458B);
          real r458D#1 = TensorIndex<tensor[3,3,3],[0,1,1]>(probe_l_1083FC7);
          real r458E#1 = RMul(r4583,r458D);
          real r458F#1 = TensorIndex<tensor[3,3,3],[0,2,1]>(probe_l_1083FC7);
          real r4590#1 = RMul(r4586,r458F);
          real r4591#1 = RAdd(r458C,r458E);
          real r4592#1 = RAdd(r4591,r4590);
          real r4593#1 = TensorIndex<tensor[3,3,3],[0,0,2]>(probe_l_1083FC7);
          real r4594#1 = RMul(r4580,r4593);
          real r4595#1 = TensorIndex<tensor[3,3,3],[0,1,2]>(probe_l_1083FC7);
          real r4596#1 = RMul(r4583,r4595);
          real r4597#1 = TensorIndex<tensor[3,3,3],[0,2,2]>(probe_l_1083FC7);
          real r4598#1 = RMul(r4586,r4597);
          real r4599#1 = RAdd(r4594,r4596);
          real r459A#1 = RAdd(r4599,r4598);
          tensor[3] tensor459B#1 = <tensor[3]>[r458A,r4592,r459A];
          real r459C#1 = TensorIndex<tensor[3,3,3],[1,0,0]>(probe_l_1083FC7);
          real r459D#1 = RMul(r4580,r459C);
          real r459E#1 = TensorIndex<tensor[3,3,3],[1,1,0]>(probe_l_1083FC7);
          real r459F#1 = RMul(r4583,r459E);
          real r45A0#1 = TensorIndex<tensor[3,3,3],[1,2,0]>(probe_l_1083FC7);
          real r45A1#1 = RMul(r4586,r45A0);
          real r45A2#1 = RAdd(r459D,r459F);
          real r45A3#1 = RAdd(r45A2,r45A1);
          real r45A4#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(probe_l_1083FC7);
          real r45A5#1 = RMul(r4580,r45A4);
          real r45A6#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(probe_l_1083FC7);
          real r45A7#1 = RMul(r4583,r45A6);
          real r45A8#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(probe_l_1083FC7);
          real r45A9#1 = RMul(r4586,r45A8);
          real r45AA#1 = RAdd(r45A5,r45A7);
          real r45AB#1 = RAdd(r45AA,r45A9);
          real r45AC#1 = TensorIndex<tensor[3,3,3],[1,0,2]>(probe_l_1083FC7);
          real r45AD#1 = RMul(r4580,r45AC);
          real r45AE#1 = TensorIndex<tensor[3,3,3],[1,1,2]>(probe_l_1083FC7);
          real r45AF#1 = RMul(r4583,r45AE);
          real r45B0#1 = TensorIndex<tensor[3,3,3],[1,2,2]>(probe_l_1083FC7);
          real r45B1#1 = RMul(r4586,r45B0);
          real r45B2#1 = RAdd(r45AD,r45AF);
          real r45B3#1 = RAdd(r45B2,r45B1);
          tensor[3] tensor45B4#1 = <tensor[3]>[r45A3,r45AB,r45B3];
          real r45B5#1 = TensorIndex<tensor[3,3,3],[2,0,0]>(probe_l_1083FC7);
          real r45B6#1 = RMul(r4580,r45B5);
          real r45B7#1 = TensorIndex<tensor[3,3,3],[2,1,0]>(probe_l_1083FC7);
          real r45B8#1 = RMul(r4583,r45B7);
          real r45B9#1 = TensorIndex<tensor[3,3,3],[2,2,0]>(probe_l_1083FC7);
          real r45BA#1 = RMul(r4586,r45B9);
          real r45BB#1 = RAdd(r45B6,r45B8);
          real r45BC#1 = RAdd(r45BB,r45BA);
          real r45BD#1 = TensorIndex<tensor[3,3,3],[2,0,1]>(probe_l_1083FC7);
          real r45BE#1 = RMul(r4580,r45BD);
          real r45BF#1 = TensorIndex<tensor[3,3,3],[2,1,1]>(probe_l_1083FC7);
          real r45C0#1 = RMul(r4583,r45BF);
          real r45C1#1 = TensorIndex<tensor[3,3,3],[2,2,1]>(probe_l_1083FC7);
          real r45C2#1 = RMul(r4586,r45C1);
          real r45C3#1 = RAdd(r45BE,r45C0);
          real r45C4#1 = RAdd(r45C3,r45C2);
          real r45C5#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(probe_l_1083FC7);
          real r45C6#1 = RMul(r4580,r45C5);
          real r45C7#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(probe_l_1083FC7);
          real r45C8#1 = RMul(r4583,r45C7);
          real r45C9#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(probe_l_1083FC7);
          real r45CA#1 = RMul(r4586,r45C9);
          real r45CB#1 = RAdd(r45C6,r45C8);
          real r45CC#1 = RAdd(r45CB,r45CA);
          tensor[3] tensor45CD#1 = <tensor[3]>[r45BC,r45C4,r45CC];
          tensor[3,3] op1_e3_l_189457F#3 = <tensor[3,3]>[tensor459B,tensor45B4,tensor45CD];
          real r461F#6 = TensorIndex<tensor[3,3],[0,0]>(probe_l_833CBA);
          real r4620#1 = RMul(r461F,r461F);
          real r4621#6 = TensorIndex<tensor[3,3],[0,1]>(probe_l_833CBA);
          real r4622#6 = TensorIndex<tensor[3,3],[1,0]>(probe_l_833CBA);
          real r4623#1 = RMul(r4621,r4622);
          real r4624#6 = TensorIndex<tensor[3,3],[0,2]>(probe_l_833CBA);
          real r4625#6 = TensorIndex<tensor[3,3],[2,0]>(probe_l_833CBA);
          real r4626#1 = RMul(r4624,r4625);
          real r4627#1 = RAdd(r4620,r4623);
          real r4628#1 = RAdd(r4627,r4626);
          real r4629#1 = RMul(r461F,r4621);
          real r462A#6 = TensorIndex<tensor[3,3],[1,1]>(probe_l_833CBA);
          real r462B#1 = RMul(r4621,r462A);
          real r462C#6 = TensorIndex<tensor[3,3],[2,1]>(probe_l_833CBA);
          real r462D#1 = RMul(r4624,r462C);
          real r462E#1 = RAdd(r4629,r462B);
          real r462F#1 = RAdd(r462E,r462D);
          real r4630#1 = RMul(r461F,r4624);
          real r4631#6 = TensorIndex<tensor[3,3],[1,2]>(probe_l_833CBA);
          real r4632#1 = RMul(r4621,r4631);
          real r4633#6 = TensorIndex<tensor[3,3],[2,2]>(probe_l_833CBA);
          real r4634#1 = RMul(r4624,r4633);
          real r4635#1 = RAdd(r4630,r4632);
          real r4636#1 = RAdd(r4635,r4634);
          tensor[3] tensor4637#1 = <tensor[3]>[r4628,r462F,r4636];
          real r4638#1 = RMul(r4622,r461F);
          real r4639#1 = RMul(r462A,r4622);
          real r463A#1 = RMul(r4631,r4625);
          real r463B#1 = RAdd(r4638,r4639);
          real r463C#1 = RAdd(r463B,r463A);
          real r463D#1 = RMul(r4622,r4621);
          real r463E#1 = RMul(r462A,r462A);
          real r463F#1 = RMul(r4631,r462C);
          real r4640#1 = RAdd(r463D,r463E);
          real r4641#1 = RAdd(r4640,r463F);
          real r4642#1 = RMul(r4622,r4624);
          real r4643#1 = RMul(r462A,r4631);
          real r4644#1 = RMul(r4631,r4633);
          real r4645#1 = RAdd(r4642,r4643);
          real r4646#1 = RAdd(r4645,r4644);
          tensor[3] tensor4647#1 = <tensor[3]>[r463C,r4641,r4646];
          real r4648#1 = RMul(r4625,r461F);
          real r4649#1 = RMul(r462C,r4622);
          real r464A#1 = RMul(r4633,r4625);
          real r464B#1 = RAdd(r4648,r4649);
          real r464C#1 = RAdd(r464B,r464A);
          real r464D#1 = RMul(r4625,r4621);
          real r464E#1 = RMul(r462C,r462A);
          real r464F#1 = RMul(r4633,r462C);
          real r4650#1 = RAdd(r464D,r464E);
          real r4651#1 = RAdd(r4650,r464F);
          real r4652#1 = RMul(r4625,r4624);
          real r4653#1 = RMul(r462C,r4631);
          real r4654#1 = RMul(r4633,r4633);
          real r4655#1 = RAdd(r4652,r4653);
          real r4656#1 = RAdd(r4655,r4654);
          tensor[3] tensor4657#1 = <tensor[3]>[r464C,r4651,r4656];
          tensor[3,3] op1_e3_l_190461E#3 = <tensor[3,3]>[tensor4637,tensor4647,tensor4657];
          tensor[3] projParam4694#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_189457F);
          tensor[3] projParam4695#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_190461E);
          tensor[3] v4696#1 = VAdd<3>(projParam4694,projParam4695);
          tensor[3] projParam4697#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_189457F);
          tensor[3] projParam4698#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_190461E);
          tensor[3] v4699#1 = VAdd<3>(projParam4697,projParam4698);
          tensor[3] projParam469A#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_189457F);
          tensor[3] projParam469B#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_190461E);
          tensor[3] v469C#1 = VAdd<3>(projParam469A,projParam469B);
          tensor[3,3] op1_e3_l_1914693#9 = <tensor[3,3]>[v4696,v4699,v469C];
          real r46A9#9 = TensorIndex<tensor[3],[0]>(probe_l_823AF1);
          real r46AA#3 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_1914693);
          real r46AB#1 = RMul(r46A9,r46AA);
          real r46AC#3 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_1914693);
          real r46AD#1 = RMul(r46A9,r46AC);
          real r46AE#3 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_1914693);
          real r46AF#1 = RMul(r46A9,r46AE);
          tensor[3] tensor46B0#1 = <tensor[3]>[r46AB,r46AD,r46AF];
          real r46B1#3 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_1914693);
          real r46B2#1 = RMul(r46A9,r46B1);
          real r46B3#3 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_1914693);
          real r46B4#1 = RMul(r46A9,r46B3);
          real r46B5#3 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_1914693);
          real r46B6#1 = RMul(r46A9,r46B5);
          tensor[3] tensor46B7#1 = <tensor[3]>[r46B2,r46B4,r46B6];
          real r46B8#3 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_1914693);
          real r46B9#1 = RMul(r46A9,r46B8);
          real r46BA#3 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_1914693);
          real r46BB#1 = RMul(r46A9,r46BA);
          real r46BC#3 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_1914693);
          real r46BD#1 = RMul(r46A9,r46BC);
          tensor[3] tensor46BE#1 = <tensor[3]>[r46B9,r46BB,r46BD];
          tensor[3,3] tensor46BF#1 = <tensor[3,3]>[tensor46B0,tensor46B7,tensor46BE];
          real r46C0#9 = TensorIndex<tensor[3],[1]>(probe_l_823AF1);
          real r46C1#1 = RMul(r46C0,r46AA);
          real r46C2#1 = RMul(r46C0,r46AC);
          real r46C3#1 = RMul(r46C0,r46AE);
          tensor[3] tensor46C4#1 = <tensor[3]>[r46C1,r46C2,r46C3];
          real r46C5#1 = RMul(r46C0,r46B1);
          real r46C6#1 = RMul(r46C0,r46B3);
          real r46C7#1 = RMul(r46C0,r46B5);
          tensor[3] tensor46C8#1 = <tensor[3]>[r46C5,r46C6,r46C7];
          real r46C9#1 = RMul(r46C0,r46B8);
          real r46CA#1 = RMul(r46C0,r46BA);
          real r46CB#1 = RMul(r46C0,r46BC);
          tensor[3] tensor46CC#1 = <tensor[3]>[r46C9,r46CA,r46CB];
          tensor[3,3] tensor46CD#1 = <tensor[3,3]>[tensor46C4,tensor46C8,tensor46CC];
          real r46CE#9 = TensorIndex<tensor[3],[2]>(probe_l_823AF1);
          real r46CF#1 = RMul(r46CE,r46AA);
          real r46D0#1 = RMul(r46CE,r46AC);
          real r46D1#1 = RMul(r46CE,r46AE);
          tensor[3] tensor46D2#1 = <tensor[3]>[r46CF,r46D0,r46D1];
          real r46D3#1 = RMul(r46CE,r46B1);
          real r46D4#1 = RMul(r46CE,r46B3);
          real r46D5#1 = RMul(r46CE,r46B5);
          tensor[3] tensor46D6#1 = <tensor[3]>[r46D3,r46D4,r46D5];
          real r46D7#1 = RMul(r46CE,r46B8);
          real r46D8#1 = RMul(r46CE,r46BA);
          real r46D9#1 = RMul(r46CE,r46BC);
          tensor[3] tensor46DA#1 = <tensor[3]>[r46D7,r46D8,r46D9];
          tensor[3,3] tensor46DB#1 = <tensor[3,3]>[tensor46D2,tensor46D6,tensor46DA];
          tensor[3,3,3] op1_e3_l_19346A8#9 = <tensor[3,3,3]>[tensor46BF,tensor46CD,tensor46DB];
          tensor[3] projParam4712#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_114420D);
          tensor[3] projParam4713#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_19346A8);
          tensor[3] v4714#1 = VAdd<3>(projParam4712,projParam4713);
          tensor[3] projParam4715#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_114420D);
          tensor[3] projParam4716#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_19346A8);
          tensor[3] v4717#1 = VAdd<3>(projParam4715,projParam4716);
          tensor[3] projParam4718#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_114420D);
          tensor[3] projParam4719#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_19346A8);
          tensor[3] v471A#1 = VAdd<3>(projParam4718,projParam4719);
          tensor[3,3] tensor471B#1 = <tensor[3,3]>[v4714,v4717,v471A];
          tensor[3] projParam471C#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_114420D);
          tensor[3] projParam471D#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_19346A8);
          tensor[3] v471E#1 = VAdd<3>(projParam471C,projParam471D);
          tensor[3] projParam471F#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_114420D);
          tensor[3] projParam4720#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_19346A8);
          tensor[3] v4721#1 = VAdd<3>(projParam471F,projParam4720);
          tensor[3] projParam4722#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_114420D);
          tensor[3] projParam4723#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_19346A8);
          tensor[3] v4724#1 = VAdd<3>(projParam4722,projParam4723);
          tensor[3,3] tensor4725#1 = <tensor[3,3]>[v471E,v4721,v4724];
          tensor[3] projParam4726#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_114420D);
          tensor[3] projParam4727#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_19346A8);
          tensor[3] v4728#1 = VAdd<3>(projParam4726,projParam4727);
          tensor[3] projParam4729#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_114420D);
          tensor[3] projParam472A#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_19346A8);
          tensor[3] v472B#1 = VAdd<3>(projParam4729,projParam472A);
          tensor[3] projParam472C#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_114420D);
          tensor[3] projParam472D#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_19346A8);
          tensor[3] v472E#1 = VAdd<3>(projParam472C,projParam472D);
          tensor[3,3] tensor472F#1 = <tensor[3,3]>[v4728,v472B,v472E];
          tensor[3,3,3] op1_e3_l_1944711#27 = <tensor[3,3,3]>[tensor471B,tensor4725,tensor472F];
          real r4751#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_1944711);
          real r4752#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_863CF6);
          real r4753#1 = RMul(r4751,r4752);
          real r4754#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_1944711);
          real r4755#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_863CF6);
          real r4756#1 = RMul(r4754,r4755);
          real r4757#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_1944711);
          real r4758#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_863CF6);
          real r4759#1 = RMul(r4757,r4758);
          real r475A#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_1944711);
          real r475B#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_863CF6);
          real r475C#1 = RMul(r475A,r475B);
          real r475D#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_1944711);
          real r475E#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_863CF6);
          real r475F#1 = RMul(r475D,r475E);
          real r4760#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_1944711);
          real r4761#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_863CF6);
          real r4762#1 = RMul(r4760,r4761);
          real r4763#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_1944711);
          real r4764#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_863CF6);
          real r4765#1 = RMul(r4763,r4764);
          real r4766#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_1944711);
          real r4767#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_863CF6);
          real r4768#1 = RMul(r4766,r4767);
          real r4769#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_1944711);
          real r476A#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_863CF6);
          real r476B#1 = RMul(r4769,r476A);
          real r476C#1 = RAdd(r4753,r4756);
          real r476D#1 = RAdd(r476C,r4759);
          real r476E#1 = RAdd(r476D,r475C);
          real r476F#1 = RAdd(r476E,r475F);
          real r4770#1 = RAdd(r476F,r4762);
          real r4771#1 = RAdd(r4770,r4765);
          real r4772#1 = RAdd(r4771,r4768);
          real r4773#1 = RAdd(r4772,r476B);
          real r4774#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_863CF6);
          real r4775#1 = RMul(r4751,r4774);
          real r4776#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_863CF6);
          real r4777#1 = RMul(r4754,r4776);
          real r4778#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_863CF6);
          real r4779#1 = RMul(r4757,r4778);
          real r477A#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_863CF6);
          real r477B#1 = RMul(r475A,r477A);
          real r477C#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_863CF6);
          real r477D#1 = RMul(r475D,r477C);
          real r477E#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_863CF6);
          real r477F#1 = RMul(r4760,r477E);
          real r4780#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_863CF6);
          real r4781#1 = RMul(r4763,r4780);
          real r4782#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_863CF6);
          real r4783#1 = RMul(r4766,r4782);
          real r4784#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_863CF6);
          real r4785#1 = RMul(r4769,r4784);
          real r4786#1 = RAdd(r4775,r4777);
          real r4787#1 = RAdd(r4786,r4779);
          real r4788#1 = RAdd(r4787,r477B);
          real r4789#1 = RAdd(r4788,r477D);
          real r478A#1 = RAdd(r4789,r477F);
          real r478B#1 = RAdd(r478A,r4781);
          real r478C#1 = RAdd(r478B,r4783);
          real r478D#1 = RAdd(r478C,r4785);
          real r478E#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_863CF6);
          real r478F#1 = RMul(r4751,r478E);
          real r4790#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_863CF6);
          real r4791#1 = RMul(r4754,r4790);
          real r4792#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_863CF6);
          real r4793#1 = RMul(r4757,r4792);
          real r4794#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_863CF6);
          real r4795#1 = RMul(r475A,r4794);
          real r4796#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_863CF6);
          real r4797#1 = RMul(r475D,r4796);
          real r4798#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_863CF6);
          real r4799#1 = RMul(r4760,r4798);
          real r479A#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_863CF6);
          real r479B#1 = RMul(r4763,r479A);
          real r479C#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_863CF6);
          real r479D#1 = RMul(r4766,r479C);
          real r479E#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_863CF6);
          real r479F#1 = RMul(r4769,r479E);
          real r47A0#1 = RAdd(r478F,r4791);
          real r47A1#1 = RAdd(r47A0,r4793);
          real r47A2#1 = RAdd(r47A1,r4795);
          real r47A3#1 = RAdd(r47A2,r4797);
          real r47A4#1 = RAdd(r47A3,r4799);
          real r47A5#1 = RAdd(r47A4,r479B);
          real r47A6#1 = RAdd(r47A5,r479D);
          real r47A7#1 = RAdd(r47A6,r479F);
          tensor[3] tensor47A8#1 = <tensor[3]>[r4773,r478D,r47A7];
          real r47A9#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_1944711);
          real r47AA#1 = RMul(r47A9,r4752);
          real r47AB#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_1944711);
          real r47AC#1 = RMul(r47AB,r4755);
          real r47AD#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_1944711);
          real r47AE#1 = RMul(r47AD,r4758);
          real r47AF#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_1944711);
          real r47B0#1 = RMul(r47AF,r475B);
          real r47B1#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_1944711);
          real r47B2#1 = RMul(r47B1,r475E);
          real r47B3#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_1944711);
          real r47B4#1 = RMul(r47B3,r4761);
          real r47B5#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_1944711);
          real r47B6#1 = RMul(r47B5,r4764);
          real r47B7#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_1944711);
          real r47B8#1 = RMul(r47B7,r4767);
          real r47B9#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_1944711);
          real r47BA#1 = RMul(r47B9,r476A);
          real r47BB#1 = RAdd(r47AA,r47AC);
          real r47BC#1 = RAdd(r47BB,r47AE);
          real r47BD#1 = RAdd(r47BC,r47B0);
          real r47BE#1 = RAdd(r47BD,r47B2);
          real r47BF#1 = RAdd(r47BE,r47B4);
          real r47C0#1 = RAdd(r47BF,r47B6);
          real r47C1#1 = RAdd(r47C0,r47B8);
          real r47C2#1 = RAdd(r47C1,r47BA);
          real r47C3#1 = RMul(r47A9,r4774);
          real r47C4#1 = RMul(r47AB,r4776);
          real r47C5#1 = RMul(r47AD,r4778);
          real r47C6#1 = RMul(r47AF,r477A);
          real r47C7#1 = RMul(r47B1,r477C);
          real r47C8#1 = RMul(r47B3,r477E);
          real r47C9#1 = RMul(r47B5,r4780);
          real r47CA#1 = RMul(r47B7,r4782);
          real r47CB#1 = RMul(r47B9,r4784);
          real r47CC#1 = RAdd(r47C3,r47C4);
          real r47CD#1 = RAdd(r47CC,r47C5);
          real r47CE#1 = RAdd(r47CD,r47C6);
          real r47CF#1 = RAdd(r47CE,r47C7);
          real r47D0#1 = RAdd(r47CF,r47C8);
          real r47D1#1 = RAdd(r47D0,r47C9);
          real r47D2#1 = RAdd(r47D1,r47CA);
          real r47D3#1 = RAdd(r47D2,r47CB);
          real r47D4#1 = RMul(r47A9,r478E);
          real r47D5#1 = RMul(r47AB,r4790);
          real r47D6#1 = RMul(r47AD,r4792);
          real r47D7#1 = RMul(r47AF,r4794);
          real r47D8#1 = RMul(r47B1,r4796);
          real r47D9#1 = RMul(r47B3,r4798);
          real r47DA#1 = RMul(r47B5,r479A);
          real r47DB#1 = RMul(r47B7,r479C);
          real r47DC#1 = RMul(r47B9,r479E);
          real r47DD#1 = RAdd(r47D4,r47D5);
          real r47DE#1 = RAdd(r47DD,r47D6);
          real r47DF#1 = RAdd(r47DE,r47D7);
          real r47E0#1 = RAdd(r47DF,r47D8);
          real r47E1#1 = RAdd(r47E0,r47D9);
          real r47E2#1 = RAdd(r47E1,r47DA);
          real r47E3#1 = RAdd(r47E2,r47DB);
          real r47E4#1 = RAdd(r47E3,r47DC);
          tensor[3] tensor47E5#1 = <tensor[3]>[r47C2,r47D3,r47E4];
          real r47E6#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_1944711);
          real r47E7#1 = RMul(r47E6,r4752);
          real r47E8#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_1944711);
          real r47E9#1 = RMul(r47E8,r4755);
          real r47EA#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_1944711);
          real r47EB#1 = RMul(r47EA,r4758);
          real r47EC#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_1944711);
          real r47ED#1 = RMul(r47EC,r475B);
          real r47EE#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_1944711);
          real r47EF#1 = RMul(r47EE,r475E);
          real r47F0#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_1944711);
          real r47F1#1 = RMul(r47F0,r4761);
          real r47F2#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_1944711);
          real r47F3#1 = RMul(r47F2,r4764);
          real r47F4#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_1944711);
          real r47F5#1 = RMul(r47F4,r4767);
          real r47F6#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_1944711);
          real r47F7#1 = RMul(r47F6,r476A);
          real r47F8#1 = RAdd(r47E7,r47E9);
          real r47F9#1 = RAdd(r47F8,r47EB);
          real r47FA#1 = RAdd(r47F9,r47ED);
          real r47FB#1 = RAdd(r47FA,r47EF);
          real r47FC#1 = RAdd(r47FB,r47F1);
          real r47FD#1 = RAdd(r47FC,r47F3);
          real r47FE#1 = RAdd(r47FD,r47F5);
          real r47FF#1 = RAdd(r47FE,r47F7);
          real r4800#1 = RMul(r47E6,r4774);
          real r4801#1 = RMul(r47E8,r4776);
          real r4802#1 = RMul(r47EA,r4778);
          real r4803#1 = RMul(r47EC,r477A);
          real r4804#1 = RMul(r47EE,r477C);
          real r4805#1 = RMul(r47F0,r477E);
          real r4806#1 = RMul(r47F2,r4780);
          real r4807#1 = RMul(r47F4,r4782);
          real r4808#1 = RMul(r47F6,r4784);
          real r4809#1 = RAdd(r4800,r4801);
          real r480A#1 = RAdd(r4809,r4802);
          real r480B#1 = RAdd(r480A,r4803);
          real r480C#1 = RAdd(r480B,r4804);
          real r480D#1 = RAdd(r480C,r4805);
          real r480E#1 = RAdd(r480D,r4806);
          real r480F#1 = RAdd(r480E,r4807);
          real r4810#1 = RAdd(r480F,r4808);
          real r4811#1 = RMul(r47E6,r478E);
          real r4812#1 = RMul(r47E8,r4790);
          real r4813#1 = RMul(r47EA,r4792);
          real r4814#1 = RMul(r47EC,r4794);
          real r4815#1 = RMul(r47EE,r4796);
          real r4816#1 = RMul(r47F0,r4798);
          real r4817#1 = RMul(r47F2,r479A);
          real r4818#1 = RMul(r47F4,r479C);
          real r4819#1 = RMul(r47F6,r479E);
          real r481A#1 = RAdd(r4811,r4812);
          real r481B#1 = RAdd(r481A,r4813);
          real r481C#1 = RAdd(r481B,r4814);
          real r481D#1 = RAdd(r481C,r4815);
          real r481E#1 = RAdd(r481D,r4816);
          real r481F#1 = RAdd(r481E,r4817);
          real r4820#1 = RAdd(r481F,r4818);
          real r4821#1 = RAdd(r4820,r4819);
          tensor[3] tensor4822#1 = <tensor[3]>[r47FF,r4810,r4821];
          tensor[3,3] op1_e3_l_1974750#3 = <tensor[3,3]>[tensor47A8,tensor47E5,tensor4822];
          tensor[3] projParam48F8#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1974750);
          real vdot48F9#1 = VDot<3>(op1_e3_l_943E30,projParam48F8);
          tensor[3] projParam48FA#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1974750);
          real vdot48FB#1 = VDot<3>(op1_e3_l_943E30,projParam48FA);
          tensor[3] projParam48FC#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1974750);
          real vdot48FD#1 = VDot<3>(op1_e3_l_943E30,projParam48FC);
          tensor[3] op1_e3_l_22248F7#2 = <tensor[3]>[vdot48F9,vdot48FB,vdot48FD];
          tensor[3] op1_e3_l_2254906#3 = VAdd<3>(op1_e3_l_22248F7,op1_e3_l_22248F7);
          tensor[3] op1_e3_l_3284909#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_2254906);
          real op1_e3_l_329490C#1 = VDot<3>(op1_e3_l_2254906,op1_e3_l_2254906);
          real realLit4910#1 = 0.1e1;
          real r4911#3 = RDiv(realLit4910,op1_e3_l_329490C);
          real r4912#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_3284909);
          real r4913#1 = RMul(r4911,r4912);
          real r4914#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_3284909);
          real r4915#1 = RMul(r4911,r4914);
          real r4916#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_3284909);
          real r4917#1 = RMul(r4911,r4916);
          tensor[3] op1_e3_l_330490F#1 = <tensor[3]>[r4913,r4915,r4917];
          tensor[3] op1_e3_l_6734922#3 = VNeg<3>(op1_e3_l_330490F);
          real op1_e3_l_6754925#1 = VDot<3>(op1_e3_l_6734922,op1_e3_l_6734922);
          real op1_e3_l_6764928#1 = Sqrt(op1_e3_l_6754925);
          real realLit492C#1 = 0.1e1;
          real op1_e3_l_678492B#1 = RDiv(realLit492C,op1_e3_l_6764928);
          tensor[3] op1_e3_l_6794930#1 = VScale<3>(op1_e3_l_678492B,op1_e3_l_6734922);
          tensor[3] op1_e3_l_6804933#1 = VNeg<3>(op1_e3_l_6794930);
          real realLit4937#1 = 0.1e1;
          real op1_e3_l_6824936#1 = RDiv(realLit4937,op1_e3_l_159457C);
          real op1_e3_l_683493B#1 = VDot<3>(op1_e3_l_6804933,op1_e3_l_1564576);
          real op1_e3_l_684493E#1 = RMul(op1_e3_l_6824936,op1_e3_l_683493B);
          real _t4941#1 = Abs<real>(op1_e3_l_684493E);
          real scomp4944#1 = MathFn<pow>(_t4941,phSp2437);
          goto JOIN4947
        JOIN4947:  preds = [ASSIGN4945,COND4575]
          real scomp4946#1 = phi(scomp4944,_t3465)
          real cmin4948#3 = VIndex<2,0>(cminmax241F);
          real cmax494A#2 = VIndex<2,1>(cminmax241F);
          tensor[3] mcol494C#4 = <tensor[3]>[_t3467,_t3467,_t3467];
          bool _t494E#1 = NEQ<real>(cmin4948,cmax494A);
          if _t494E then goto ASSIGN49A1 else goto JOIN4F36
        ASSIGN49A1:  preds = [COND4950]
          real r4952#9 = TensorIndex<tensor[3],[0]>(probe_l_823AF1);
          real r4953#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(probe_l_1083FC7);
          real r4954#1 = RMul(r4952,r4953);
          real r4955#9 = TensorIndex<tensor[3],[1]>(probe_l_823AF1);
          real r4956#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(probe_l_1083FC7);
          real r4957#1 = RMul(r4955,r4956);
          real r4958#9 = TensorIndex<tensor[3],[2]>(probe_l_823AF1);
          real r4959#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(probe_l_1083FC7);
          real r495A#1 = RMul(r4958,r4959);
          real r495B#1 = RAdd(r4954,r4957);
          real r495C#1 = RAdd(r495B,r495A);
          real r495D#1 = TensorIndex<tensor[3,3,3],[0,0,1]>(probe_l_1083FC7);
          real r495E#1 = RMul(r4952,r495D);
          real r495F#1 = TensorIndex<tensor[3,3,3],[0,1,1]>(probe_l_1083FC7);
          real r4960#1 = RMul(r4955,r495F);
          real r4961#1 = TensorIndex<tensor[3,3,3],[0,2,1]>(probe_l_1083FC7);
          real r4962#1 = RMul(r4958,r4961);
          real r4963#1 = RAdd(r495E,r4960);
          real r4964#1 = RAdd(r4963,r4962);
          real r4965#1 = TensorIndex<tensor[3,3,3],[0,0,2]>(probe_l_1083FC7);
          real r4966#1 = RMul(r4952,r4965);
          real r4967#1 = TensorIndex<tensor[3,3,3],[0,1,2]>(probe_l_1083FC7);
          real r4968#1 = RMul(r4955,r4967);
          real r4969#1 = TensorIndex<tensor[3,3,3],[0,2,2]>(probe_l_1083FC7);
          real r496A#1 = RMul(r4958,r4969);
          real r496B#1 = RAdd(r4966,r4968);
          real r496C#1 = RAdd(r496B,r496A);
          tensor[3] tensor496D#1 = <tensor[3]>[r495C,r4964,r496C];
          real r496E#1 = TensorIndex<tensor[3,3,3],[1,0,0]>(probe_l_1083FC7);
          real r496F#1 = RMul(r4952,r496E);
          real r4970#1 = TensorIndex<tensor[3,3,3],[1,1,0]>(probe_l_1083FC7);
          real r4971#1 = RMul(r4955,r4970);
          real r4972#1 = TensorIndex<tensor[3,3,3],[1,2,0]>(probe_l_1083FC7);
          real r4973#1 = RMul(r4958,r4972);
          real r4974#1 = RAdd(r496F,r4971);
          real r4975#1 = RAdd(r4974,r4973);
          real r4976#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(probe_l_1083FC7);
          real r4977#1 = RMul(r4952,r4976);
          real r4978#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(probe_l_1083FC7);
          real r4979#1 = RMul(r4955,r4978);
          real r497A#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(probe_l_1083FC7);
          real r497B#1 = RMul(r4958,r497A);
          real r497C#1 = RAdd(r4977,r4979);
          real r497D#1 = RAdd(r497C,r497B);
          real r497E#1 = TensorIndex<tensor[3,3,3],[1,0,2]>(probe_l_1083FC7);
          real r497F#1 = RMul(r4952,r497E);
          real r4980#1 = TensorIndex<tensor[3,3,3],[1,1,2]>(probe_l_1083FC7);
          real r4981#1 = RMul(r4955,r4980);
          real r4982#1 = TensorIndex<tensor[3,3,3],[1,2,2]>(probe_l_1083FC7);
          real r4983#1 = RMul(r4958,r4982);
          real r4984#1 = RAdd(r497F,r4981);
          real r4985#1 = RAdd(r4984,r4983);
          tensor[3] tensor4986#1 = <tensor[3]>[r4975,r497D,r4985];
          real r4987#1 = TensorIndex<tensor[3,3,3],[2,0,0]>(probe_l_1083FC7);
          real r4988#1 = RMul(r4952,r4987);
          real r4989#1 = TensorIndex<tensor[3,3,3],[2,1,0]>(probe_l_1083FC7);
          real r498A#1 = RMul(r4955,r4989);
          real r498B#1 = TensorIndex<tensor[3,3,3],[2,2,0]>(probe_l_1083FC7);
          real r498C#1 = RMul(r4958,r498B);
          real r498D#1 = RAdd(r4988,r498A);
          real r498E#1 = RAdd(r498D,r498C);
          real r498F#1 = TensorIndex<tensor[3,3,3],[2,0,1]>(probe_l_1083FC7);
          real r4990#1 = RMul(r4952,r498F);
          real r4991#1 = TensorIndex<tensor[3,3,3],[2,1,1]>(probe_l_1083FC7);
          real r4992#1 = RMul(r4955,r4991);
          real r4993#1 = TensorIndex<tensor[3,3,3],[2,2,1]>(probe_l_1083FC7);
          real r4994#1 = RMul(r4958,r4993);
          real r4995#1 = RAdd(r4990,r4992);
          real r4996#1 = RAdd(r4995,r4994);
          real r4997#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(probe_l_1083FC7);
          real r4998#1 = RMul(r4952,r4997);
          real r4999#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(probe_l_1083FC7);
          real r499A#1 = RMul(r4955,r4999);
          real r499B#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(probe_l_1083FC7);
          real r499C#1 = RMul(r4958,r499B);
          real r499D#1 = RAdd(r4998,r499A);
          real r499E#1 = RAdd(r499D,r499C);
          tensor[3] tensor499F#1 = <tensor[3]>[r498E,r4996,r499E];
          tensor[3,3] op1_e3_l_1104951#3 = <tensor[3,3]>[tensor496D,tensor4986,tensor499F];
          real r49F1#6 = TensorIndex<tensor[3,3],[0,0]>(probe_l_833CBA);
          real r49F2#1 = RMul(r49F1,r49F1);
          real r49F3#6 = TensorIndex<tensor[3,3],[0,1]>(probe_l_833CBA);
          real r49F4#6 = TensorIndex<tensor[3,3],[1,0]>(probe_l_833CBA);
          real r49F5#1 = RMul(r49F3,r49F4);
          real r49F6#6 = TensorIndex<tensor[3,3],[0,2]>(probe_l_833CBA);
          real r49F7#6 = TensorIndex<tensor[3,3],[2,0]>(probe_l_833CBA);
          real r49F8#1 = RMul(r49F6,r49F7);
          real r49F9#1 = RAdd(r49F2,r49F5);
          real r49FA#1 = RAdd(r49F9,r49F8);
          real r49FB#1 = RMul(r49F1,r49F3);
          real r49FC#6 = TensorIndex<tensor[3,3],[1,1]>(probe_l_833CBA);
          real r49FD#1 = RMul(r49F3,r49FC);
          real r49FE#6 = TensorIndex<tensor[3,3],[2,1]>(probe_l_833CBA);
          real r49FF#1 = RMul(r49F6,r49FE);
          real r4A00#1 = RAdd(r49FB,r49FD);
          real r4A01#1 = RAdd(r4A00,r49FF);
          real r4A02#1 = RMul(r49F1,r49F6);
          real r4A03#6 = TensorIndex<tensor[3,3],[1,2]>(probe_l_833CBA);
          real r4A04#1 = RMul(r49F3,r4A03);
          real r4A05#6 = TensorIndex<tensor[3,3],[2,2]>(probe_l_833CBA);
          real r4A06#1 = RMul(r49F6,r4A05);
          real r4A07#1 = RAdd(r4A02,r4A04);
          real r4A08#1 = RAdd(r4A07,r4A06);
          tensor[3] tensor4A09#1 = <tensor[3]>[r49FA,r4A01,r4A08];
          real r4A0A#1 = RMul(r49F4,r49F1);
          real r4A0B#1 = RMul(r49FC,r49F4);
          real r4A0C#1 = RMul(r4A03,r49F7);
          real r4A0D#1 = RAdd(r4A0A,r4A0B);
          real r4A0E#1 = RAdd(r4A0D,r4A0C);
          real r4A0F#1 = RMul(r49F4,r49F3);
          real r4A10#1 = RMul(r49FC,r49FC);
          real r4A11#1 = RMul(r4A03,r49FE);
          real r4A12#1 = RAdd(r4A0F,r4A10);
          real r4A13#1 = RAdd(r4A12,r4A11);
          real r4A14#1 = RMul(r49F4,r49F6);
          real r4A15#1 = RMul(r49FC,r4A03);
          real r4A16#1 = RMul(r4A03,r4A05);
          real r4A17#1 = RAdd(r4A14,r4A15);
          real r4A18#1 = RAdd(r4A17,r4A16);
          tensor[3] tensor4A19#1 = <tensor[3]>[r4A0E,r4A13,r4A18];
          real r4A1A#1 = RMul(r49F7,r49F1);
          real r4A1B#1 = RMul(r49FE,r49F4);
          real r4A1C#1 = RMul(r4A05,r49F7);
          real r4A1D#1 = RAdd(r4A1A,r4A1B);
          real r4A1E#1 = RAdd(r4A1D,r4A1C);
          real r4A1F#1 = RMul(r49F7,r49F3);
          real r4A20#1 = RMul(r49FE,r49FC);
          real r4A21#1 = RMul(r4A05,r49FE);
          real r4A22#1 = RAdd(r4A1F,r4A20);
          real r4A23#1 = RAdd(r4A22,r4A21);
          real r4A24#1 = RMul(r49F7,r49F6);
          real r4A25#1 = RMul(r49FE,r4A03);
          real r4A26#1 = RMul(r4A05,r4A05);
          real r4A27#1 = RAdd(r4A24,r4A25);
          real r4A28#1 = RAdd(r4A27,r4A26);
          tensor[3] tensor4A29#1 = <tensor[3]>[r4A1E,r4A23,r4A28];
          tensor[3,3] op1_e3_l_11149F0#3 = <tensor[3,3]>[tensor4A09,tensor4A19,tensor4A29];
          tensor[3] projParam4A66#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1104951);
          tensor[3] projParam4A67#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_11149F0);
          tensor[3] v4A68#1 = VAdd<3>(projParam4A66,projParam4A67);
          tensor[3] projParam4A69#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1104951);
          tensor[3] projParam4A6A#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_11149F0);
          tensor[3] v4A6B#1 = VAdd<3>(projParam4A69,projParam4A6A);
          tensor[3] projParam4A6C#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1104951);
          tensor[3] projParam4A6D#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_11149F0);
          tensor[3] v4A6E#1 = VAdd<3>(projParam4A6C,projParam4A6D);
          tensor[3,3] op1_e3_l_1124A65#9 = <tensor[3,3]>[v4A68,v4A6B,v4A6E];
          real r4A7B#9 = TensorIndex<tensor[3],[0]>(probe_l_823AF1);
          real r4A7C#3 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_1124A65);
          real r4A7D#1 = RMul(r4A7B,r4A7C);
          real r4A7E#3 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_1124A65);
          real r4A7F#1 = RMul(r4A7B,r4A7E);
          real r4A80#3 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_1124A65);
          real r4A81#1 = RMul(r4A7B,r4A80);
          tensor[3] tensor4A82#1 = <tensor[3]>[r4A7D,r4A7F,r4A81];
          real r4A83#3 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_1124A65);
          real r4A84#1 = RMul(r4A7B,r4A83);
          real r4A85#3 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_1124A65);
          real r4A86#1 = RMul(r4A7B,r4A85);
          real r4A87#3 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_1124A65);
          real r4A88#1 = RMul(r4A7B,r4A87);
          tensor[3] tensor4A89#1 = <tensor[3]>[r4A84,r4A86,r4A88];
          real r4A8A#3 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_1124A65);
          real r4A8B#1 = RMul(r4A7B,r4A8A);
          real r4A8C#3 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_1124A65);
          real r4A8D#1 = RMul(r4A7B,r4A8C);
          real r4A8E#3 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_1124A65);
          real r4A8F#1 = RMul(r4A7B,r4A8E);
          tensor[3] tensor4A90#1 = <tensor[3]>[r4A8B,r4A8D,r4A8F];
          tensor[3,3] tensor4A91#1 = <tensor[3,3]>[tensor4A82,tensor4A89,tensor4A90];
          real r4A92#9 = TensorIndex<tensor[3],[1]>(probe_l_823AF1);
          real r4A93#1 = RMul(r4A92,r4A7C);
          real r4A94#1 = RMul(r4A92,r4A7E);
          real r4A95#1 = RMul(r4A92,r4A80);
          tensor[3] tensor4A96#1 = <tensor[3]>[r4A93,r4A94,r4A95];
          real r4A97#1 = RMul(r4A92,r4A83);
          real r4A98#1 = RMul(r4A92,r4A85);
          real r4A99#1 = RMul(r4A92,r4A87);
          tensor[3] tensor4A9A#1 = <tensor[3]>[r4A97,r4A98,r4A99];
          real r4A9B#1 = RMul(r4A92,r4A8A);
          real r4A9C#1 = RMul(r4A92,r4A8C);
          real r4A9D#1 = RMul(r4A92,r4A8E);
          tensor[3] tensor4A9E#1 = <tensor[3]>[r4A9B,r4A9C,r4A9D];
          tensor[3,3] tensor4A9F#1 = <tensor[3,3]>[tensor4A96,tensor4A9A,tensor4A9E];
          real r4AA0#9 = TensorIndex<tensor[3],[2]>(probe_l_823AF1);
          real r4AA1#1 = RMul(r4AA0,r4A7C);
          real r4AA2#1 = RMul(r4AA0,r4A7E);
          real r4AA3#1 = RMul(r4AA0,r4A80);
          tensor[3] tensor4AA4#1 = <tensor[3]>[r4AA1,r4AA2,r4AA3];
          real r4AA5#1 = RMul(r4AA0,r4A83);
          real r4AA6#1 = RMul(r4AA0,r4A85);
          real r4AA7#1 = RMul(r4AA0,r4A87);
          tensor[3] tensor4AA8#1 = <tensor[3]>[r4AA5,r4AA6,r4AA7];
          real r4AA9#1 = RMul(r4AA0,r4A8A);
          real r4AAA#1 = RMul(r4AA0,r4A8C);
          real r4AAB#1 = RMul(r4AA0,r4A8E);
          tensor[3] tensor4AAC#1 = <tensor[3]>[r4AA9,r4AAA,r4AAB];
          tensor[3,3] tensor4AAD#1 = <tensor[3,3]>[tensor4AA4,tensor4AA8,tensor4AAC];
          tensor[3,3,3] op1_e3_l_1144A7A#9 = <tensor[3,3,3]>[tensor4A91,tensor4A9F,tensor4AAD];
          tensor[3] projParam4AE4#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_114420D);
          tensor[3] projParam4AE5#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_1144A7A);
          tensor[3] v4AE6#1 = VAdd<3>(projParam4AE4,projParam4AE5);
          tensor[3] projParam4AE7#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_114420D);
          tensor[3] projParam4AE8#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_1144A7A);
          tensor[3] v4AE9#1 = VAdd<3>(projParam4AE7,projParam4AE8);
          tensor[3] projParam4AEA#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_114420D);
          tensor[3] projParam4AEB#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_1144A7A);
          tensor[3] v4AEC#1 = VAdd<3>(projParam4AEA,projParam4AEB);
          tensor[3,3] tensor4AED#1 = <tensor[3,3]>[v4AE6,v4AE9,v4AEC];
          tensor[3] projParam4AEE#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_114420D);
          tensor[3] projParam4AEF#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_1144A7A);
          tensor[3] v4AF0#1 = VAdd<3>(projParam4AEE,projParam4AEF);
          tensor[3] projParam4AF1#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_114420D);
          tensor[3] projParam4AF2#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_1144A7A);
          tensor[3] v4AF3#1 = VAdd<3>(projParam4AF1,projParam4AF2);
          tensor[3] projParam4AF4#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_114420D);
          tensor[3] projParam4AF5#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_1144A7A);
          tensor[3] v4AF6#1 = VAdd<3>(projParam4AF4,projParam4AF5);
          tensor[3,3] tensor4AF7#1 = <tensor[3,3]>[v4AF0,v4AF3,v4AF6];
          tensor[3] projParam4AF8#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_114420D);
          tensor[3] projParam4AF9#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_1144A7A);
          tensor[3] v4AFA#1 = VAdd<3>(projParam4AF8,projParam4AF9);
          tensor[3] projParam4AFB#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_114420D);
          tensor[3] projParam4AFC#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_1144A7A);
          tensor[3] v4AFD#1 = VAdd<3>(projParam4AFB,projParam4AFC);
          tensor[3] projParam4AFE#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_114420D);
          tensor[3] projParam4AFF#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_1144A7A);
          tensor[3] v4B00#1 = VAdd<3>(projParam4AFE,projParam4AFF);
          tensor[3,3] tensor4B01#1 = <tensor[3,3]>[v4AFA,v4AFD,v4B00];
          tensor[3,3,3] op1_e3_l_1154AE3#27 = <tensor[3,3,3]>[tensor4AED,tensor4AF7,tensor4B01];
          real r4B23#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_1154AE3);
          real r4B24#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_863CF6);
          real r4B25#1 = RMul(r4B23,r4B24);
          real r4B26#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_1154AE3);
          real r4B27#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_863CF6);
          real r4B28#1 = RMul(r4B26,r4B27);
          real r4B29#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_1154AE3);
          real r4B2A#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_863CF6);
          real r4B2B#1 = RMul(r4B29,r4B2A);
          real r4B2C#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_1154AE3);
          real r4B2D#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_863CF6);
          real r4B2E#1 = RMul(r4B2C,r4B2D);
          real r4B2F#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_1154AE3);
          real r4B30#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_863CF6);
          real r4B31#1 = RMul(r4B2F,r4B30);
          real r4B32#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_1154AE3);
          real r4B33#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_863CF6);
          real r4B34#1 = RMul(r4B32,r4B33);
          real r4B35#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_1154AE3);
          real r4B36#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_863CF6);
          real r4B37#1 = RMul(r4B35,r4B36);
          real r4B38#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_1154AE3);
          real r4B39#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_863CF6);
          real r4B3A#1 = RMul(r4B38,r4B39);
          real r4B3B#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_1154AE3);
          real r4B3C#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_863CF6);
          real r4B3D#1 = RMul(r4B3B,r4B3C);
          real r4B3E#1 = RAdd(r4B25,r4B28);
          real r4B3F#1 = RAdd(r4B3E,r4B2B);
          real r4B40#1 = RAdd(r4B3F,r4B2E);
          real r4B41#1 = RAdd(r4B40,r4B31);
          real r4B42#1 = RAdd(r4B41,r4B34);
          real r4B43#1 = RAdd(r4B42,r4B37);
          real r4B44#1 = RAdd(r4B43,r4B3A);
          real r4B45#1 = RAdd(r4B44,r4B3D);
          real r4B46#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_863CF6);
          real r4B47#1 = RMul(r4B23,r4B46);
          real r4B48#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_863CF6);
          real r4B49#1 = RMul(r4B26,r4B48);
          real r4B4A#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_863CF6);
          real r4B4B#1 = RMul(r4B29,r4B4A);
          real r4B4C#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_863CF6);
          real r4B4D#1 = RMul(r4B2C,r4B4C);
          real r4B4E#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_863CF6);
          real r4B4F#1 = RMul(r4B2F,r4B4E);
          real r4B50#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_863CF6);
          real r4B51#1 = RMul(r4B32,r4B50);
          real r4B52#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_863CF6);
          real r4B53#1 = RMul(r4B35,r4B52);
          real r4B54#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_863CF6);
          real r4B55#1 = RMul(r4B38,r4B54);
          real r4B56#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_863CF6);
          real r4B57#1 = RMul(r4B3B,r4B56);
          real r4B58#1 = RAdd(r4B47,r4B49);
          real r4B59#1 = RAdd(r4B58,r4B4B);
          real r4B5A#1 = RAdd(r4B59,r4B4D);
          real r4B5B#1 = RAdd(r4B5A,r4B4F);
          real r4B5C#1 = RAdd(r4B5B,r4B51);
          real r4B5D#1 = RAdd(r4B5C,r4B53);
          real r4B5E#1 = RAdd(r4B5D,r4B55);
          real r4B5F#1 = RAdd(r4B5E,r4B57);
          real r4B60#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_863CF6);
          real r4B61#1 = RMul(r4B23,r4B60);
          real r4B62#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_863CF6);
          real r4B63#1 = RMul(r4B26,r4B62);
          real r4B64#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_863CF6);
          real r4B65#1 = RMul(r4B29,r4B64);
          real r4B66#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_863CF6);
          real r4B67#1 = RMul(r4B2C,r4B66);
          real r4B68#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_863CF6);
          real r4B69#1 = RMul(r4B2F,r4B68);
          real r4B6A#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_863CF6);
          real r4B6B#1 = RMul(r4B32,r4B6A);
          real r4B6C#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_863CF6);
          real r4B6D#1 = RMul(r4B35,r4B6C);
          real r4B6E#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_863CF6);
          real r4B6F#1 = RMul(r4B38,r4B6E);
          real r4B70#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_863CF6);
          real r4B71#1 = RMul(r4B3B,r4B70);
          real r4B72#1 = RAdd(r4B61,r4B63);
          real r4B73#1 = RAdd(r4B72,r4B65);
          real r4B74#1 = RAdd(r4B73,r4B67);
          real r4B75#1 = RAdd(r4B74,r4B69);
          real r4B76#1 = RAdd(r4B75,r4B6B);
          real r4B77#1 = RAdd(r4B76,r4B6D);
          real r4B78#1 = RAdd(r4B77,r4B6F);
          real r4B79#1 = RAdd(r4B78,r4B71);
          tensor[3] tensor4B7A#1 = <tensor[3]>[r4B45,r4B5F,r4B79];
          real r4B7B#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_1154AE3);
          real r4B7C#1 = RMul(r4B7B,r4B24);
          real r4B7D#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_1154AE3);
          real r4B7E#1 = RMul(r4B7D,r4B27);
          real r4B7F#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_1154AE3);
          real r4B80#1 = RMul(r4B7F,r4B2A);
          real r4B81#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_1154AE3);
          real r4B82#1 = RMul(r4B81,r4B2D);
          real r4B83#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_1154AE3);
          real r4B84#1 = RMul(r4B83,r4B30);
          real r4B85#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_1154AE3);
          real r4B86#1 = RMul(r4B85,r4B33);
          real r4B87#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_1154AE3);
          real r4B88#1 = RMul(r4B87,r4B36);
          real r4B89#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_1154AE3);
          real r4B8A#1 = RMul(r4B89,r4B39);
          real r4B8B#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_1154AE3);
          real r4B8C#1 = RMul(r4B8B,r4B3C);
          real r4B8D#1 = RAdd(r4B7C,r4B7E);
          real r4B8E#1 = RAdd(r4B8D,r4B80);
          real r4B8F#1 = RAdd(r4B8E,r4B82);
          real r4B90#1 = RAdd(r4B8F,r4B84);
          real r4B91#1 = RAdd(r4B90,r4B86);
          real r4B92#1 = RAdd(r4B91,r4B88);
          real r4B93#1 = RAdd(r4B92,r4B8A);
          real r4B94#1 = RAdd(r4B93,r4B8C);
          real r4B95#1 = RMul(r4B7B,r4B46);
          real r4B96#1 = RMul(r4B7D,r4B48);
          real r4B97#1 = RMul(r4B7F,r4B4A);
          real r4B98#1 = RMul(r4B81,r4B4C);
          real r4B99#1 = RMul(r4B83,r4B4E);
          real r4B9A#1 = RMul(r4B85,r4B50);
          real r4B9B#1 = RMul(r4B87,r4B52);
          real r4B9C#1 = RMul(r4B89,r4B54);
          real r4B9D#1 = RMul(r4B8B,r4B56);
          real r4B9E#1 = RAdd(r4B95,r4B96);
          real r4B9F#1 = RAdd(r4B9E,r4B97);
          real r4BA0#1 = RAdd(r4B9F,r4B98);
          real r4BA1#1 = RAdd(r4BA0,r4B99);
          real r4BA2#1 = RAdd(r4BA1,r4B9A);
          real r4BA3#1 = RAdd(r4BA2,r4B9B);
          real r4BA4#1 = RAdd(r4BA3,r4B9C);
          real r4BA5#1 = RAdd(r4BA4,r4B9D);
          real r4BA6#1 = RMul(r4B7B,r4B60);
          real r4BA7#1 = RMul(r4B7D,r4B62);
          real r4BA8#1 = RMul(r4B7F,r4B64);
          real r4BA9#1 = RMul(r4B81,r4B66);
          real r4BAA#1 = RMul(r4B83,r4B68);
          real r4BAB#1 = RMul(r4B85,r4B6A);
          real r4BAC#1 = RMul(r4B87,r4B6C);
          real r4BAD#1 = RMul(r4B89,r4B6E);
          real r4BAE#1 = RMul(r4B8B,r4B70);
          real r4BAF#1 = RAdd(r4BA6,r4BA7);
          real r4BB0#1 = RAdd(r4BAF,r4BA8);
          real r4BB1#1 = RAdd(r4BB0,r4BA9);
          real r4BB2#1 = RAdd(r4BB1,r4BAA);
          real r4BB3#1 = RAdd(r4BB2,r4BAB);
          real r4BB4#1 = RAdd(r4BB3,r4BAC);
          real r4BB5#1 = RAdd(r4BB4,r4BAD);
          real r4BB6#1 = RAdd(r4BB5,r4BAE);
          tensor[3] tensor4BB7#1 = <tensor[3]>[r4B94,r4BA5,r4BB6];
          real r4BB8#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_1154AE3);
          real r4BB9#1 = RMul(r4BB8,r4B24);
          real r4BBA#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_1154AE3);
          real r4BBB#1 = RMul(r4BBA,r4B27);
          real r4BBC#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_1154AE3);
          real r4BBD#1 = RMul(r4BBC,r4B2A);
          real r4BBE#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_1154AE3);
          real r4BBF#1 = RMul(r4BBE,r4B2D);
          real r4BC0#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_1154AE3);
          real r4BC1#1 = RMul(r4BC0,r4B30);
          real r4BC2#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_1154AE3);
          real r4BC3#1 = RMul(r4BC2,r4B33);
          real r4BC4#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_1154AE3);
          real r4BC5#1 = RMul(r4BC4,r4B36);
          real r4BC6#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_1154AE3);
          real r4BC7#1 = RMul(r4BC6,r4B39);
          real r4BC8#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_1154AE3);
          real r4BC9#1 = RMul(r4BC8,r4B3C);
          real r4BCA#1 = RAdd(r4BB9,r4BBB);
          real r4BCB#1 = RAdd(r4BCA,r4BBD);
          real r4BCC#1 = RAdd(r4BCB,r4BBF);
          real r4BCD#1 = RAdd(r4BCC,r4BC1);
          real r4BCE#1 = RAdd(r4BCD,r4BC3);
          real r4BCF#1 = RAdd(r4BCE,r4BC5);
          real r4BD0#1 = RAdd(r4BCF,r4BC7);
          real r4BD1#1 = RAdd(r4BD0,r4BC9);
          real r4BD2#1 = RMul(r4BB8,r4B46);
          real r4BD3#1 = RMul(r4BBA,r4B48);
          real r4BD4#1 = RMul(r4BBC,r4B4A);
          real r4BD5#1 = RMul(r4BBE,r4B4C);
          real r4BD6#1 = RMul(r4BC0,r4B4E);
          real r4BD7#1 = RMul(r4BC2,r4B50);
          real r4BD8#1 = RMul(r4BC4,r4B52);
          real r4BD9#1 = RMul(r4BC6,r4B54);
          real r4BDA#1 = RMul(r4BC8,r4B56);
          real r4BDB#1 = RAdd(r4BD2,r4BD3);
          real r4BDC#1 = RAdd(r4BDB,r4BD4);
          real r4BDD#1 = RAdd(r4BDC,r4BD5);
          real r4BDE#1 = RAdd(r4BDD,r4BD6);
          real r4BDF#1 = RAdd(r4BDE,r4BD7);
          real r4BE0#1 = RAdd(r4BDF,r4BD8);
          real r4BE1#1 = RAdd(r4BE0,r4BD9);
          real r4BE2#1 = RAdd(r4BE1,r4BDA);
          real r4BE3#1 = RMul(r4BB8,r4B60);
          real r4BE4#1 = RMul(r4BBA,r4B62);
          real r4BE5#1 = RMul(r4BBC,r4B64);
          real r4BE6#1 = RMul(r4BBE,r4B66);
          real r4BE7#1 = RMul(r4BC0,r4B68);
          real r4BE8#1 = RMul(r4BC2,r4B6A);
          real r4BE9#1 = RMul(r4BC4,r4B6C);
          real r4BEA#1 = RMul(r4BC6,r4B6E);
          real r4BEB#1 = RMul(r4BC8,r4B70);
          real r4BEC#1 = RAdd(r4BE3,r4BE4);
          real r4BED#1 = RAdd(r4BEC,r4BE5);
          real r4BEE#1 = RAdd(r4BED,r4BE6);
          real r4BEF#1 = RAdd(r4BEE,r4BE7);
          real r4BF0#1 = RAdd(r4BEF,r4BE8);
          real r4BF1#1 = RAdd(r4BF0,r4BE9);
          real r4BF2#1 = RAdd(r4BF1,r4BEA);
          real r4BF3#1 = RAdd(r4BF2,r4BEB);
          tensor[3] tensor4BF4#1 = <tensor[3]>[r4BD1,r4BE2,r4BF3];
          tensor[3,3] op1_e3_l_1184B22#3 = <tensor[3,3]>[tensor4B7A,tensor4BB7,tensor4BF4];
          tensor[3] projParam4CCA#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1184B22);
          real vdot4CCB#1 = VDot<3>(op1_e3_l_943E30,projParam4CCA);
          tensor[3] projParam4CCC#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1184B22);
          real vdot4CCD#1 = VDot<3>(op1_e3_l_943E30,projParam4CCC);
          tensor[3] projParam4CCE#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1184B22);
          real vdot4CCF#1 = VDot<3>(op1_e3_l_943E30,projParam4CCE);
          tensor[3] op1_e3_l_1434CC9#2 = <tensor[3]>[vdot4CCB,vdot4CCD,vdot4CCF];
          tensor[3] op1_e3_l_1464CD8#3 = VAdd<3>(op1_e3_l_1434CC9,op1_e3_l_1434CC9);
          tensor[3] op1_e3_l_2494CDB#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_1464CD8);
          real op1_e3_l_2504CDE#1 = VDot<3>(op1_e3_l_1464CD8,op1_e3_l_1464CD8);
          real realLit4CE2#1 = 0.1e1;
          real r4CE3#3 = RDiv(realLit4CE2,op1_e3_l_2504CDE);
          real r4CE4#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_2494CDB);
          real r4CE5#1 = RMul(r4CE3,r4CE4);
          real r4CE6#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_2494CDB);
          real r4CE7#1 = RMul(r4CE3,r4CE6);
          real r4CE8#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_2494CDB);
          real r4CE9#1 = RMul(r4CE3,r4CE8);
          tensor[3] op1_e3_l_2514CE1#1 = <tensor[3]>[r4CE5,r4CE7,r4CE9];
          tensor[3] op1_e3_l_2534CF4#1 = VNeg<3>(op1_e3_l_2514CE1);
          tensor[3] v4CF8#1 = VAdd<3>(rayOrig2429,op1_e3_l_52446);
          tensor[3] _t4CF7#3 = VAdd<3>(v4CF8,op1_e3_l_2534CF4);
          real varAcc4CFD#6 = VIndex<3,0>(_t4CF7);
          real varAcc4CFE#6 = VIndex<3,1>(_t4CF7);
          real varAcc4CFF#6 = VIndex<3,2>(_t4CF7);
          real coeff4D00#126 = 0.1e1;
          real prod4D01#7 = RMul(coeff4D00,coeff4D00);
          real prod4D02#1 = RMul(coeff4D00,prod4D01);
          real basisEval4D03#1 = RMul(coeff4D00,prod4D02);
          real iden4D04#7 = varAcc4CFF;
          real prod4D05#6 = RMul(coeff4D00,iden4D04);
          real prod4D06#1 = RMul(coeff4D00,prod4D05);
          real basisEval4D07#1 = RMul(coeff4D00,prod4D06);
          real iden4D08#7 = varAcc4CFE;
          real prod4D09#6 = RMul(iden4D08,coeff4D00);
          real prod4D0A#1 = RMul(coeff4D00,prod4D09);
          real basisEval4D0B#1 = RMul(coeff4D00,prod4D0A);
          real iden4D0C#22 = varAcc4CFD;
          real prod4D0D#1 = RMul(iden4D0C,prod4D01);
          real basisEval4D0E#1 = RMul(coeff4D00,prod4D0D);
          real prod24D0F#6 = RMul(iden4D04,varAcc4CFF);
          real prod4D10#5 = RMul(coeff4D00,prod24D0F);
          real prod4D11#1 = RMul(coeff4D00,prod4D10);
          real basisEval4D12#1 = RMul(coeff4D00,prod4D11);
          real prod4D13#5 = RMul(iden4D08,iden4D04);
          real prod4D14#1 = RMul(coeff4D00,prod4D13);
          real basisEval4D15#1 = RMul(coeff4D00,prod4D14);
          real prod24D16#6 = RMul(iden4D08,varAcc4CFE);
          real prod4D17#5 = RMul(prod24D16,coeff4D00);
          real prod4D18#1 = RMul(coeff4D00,prod4D17);
          real basisEval4D19#1 = RMul(coeff4D00,prod4D18);
          real prod4D1A#1 = RMul(iden4D0C,prod4D05);
          real basisEval4D1B#1 = RMul(coeff4D00,prod4D1A);
          real prod4D1C#1 = RMul(iden4D0C,prod4D09);
          real basisEval4D1D#1 = RMul(coeff4D00,prod4D1C);
          real prod24D1E#16 = RMul(iden4D0C,varAcc4CFD);
          real prod4D1F#1 = RMul(prod24D1E,prod4D01);
          real basisEval4D20#1 = RMul(coeff4D00,prod4D1F);
          real prod34D21#5 = RMul(prod24D0F,varAcc4CFF);
          real prod4D22#4 = RMul(coeff4D00,prod34D21);
          real prod4D23#1 = RMul(coeff4D00,prod4D22);
          real basisEval4D24#1 = RMul(coeff4D00,prod4D23);
          real prod4D25#4 = RMul(iden4D08,prod24D0F);
          real prod4D26#1 = RMul(coeff4D00,prod4D25);
          real basisEval4D27#1 = RMul(coeff4D00,prod4D26);
          real prod4D28#4 = RMul(prod24D16,iden4D04);
          real prod4D29#1 = RMul(coeff4D00,prod4D28);
          real basisEval4D2A#1 = RMul(coeff4D00,prod4D29);
          real prod34D2B#5 = RMul(prod24D16,varAcc4CFE);
          real prod4D2C#4 = RMul(prod34D2B,coeff4D00);
          real prod4D2D#1 = RMul(coeff4D00,prod4D2C);
          real basisEval4D2E#1 = RMul(coeff4D00,prod4D2D);
          real prod4D2F#1 = RMul(iden4D0C,prod4D10);
          real basisEval4D30#1 = RMul(coeff4D00,prod4D2F);
          real prod4D31#1 = RMul(iden4D0C,prod4D13);
          real basisEval4D32#1 = RMul(coeff4D00,prod4D31);
          real prod4D33#1 = RMul(iden4D0C,prod4D17);
          real basisEval4D34#1 = RMul(coeff4D00,prod4D33);
          real prod4D35#1 = RMul(prod24D1E,prod4D05);
          real basisEval4D36#1 = RMul(coeff4D00,prod4D35);
          real prod4D37#1 = RMul(prod24D1E,prod4D09);
          real basisEval4D38#1 = RMul(coeff4D00,prod4D37);
          real prod34D39#11 = RMul(prod24D1E,varAcc4CFD);
          real prod4D3A#1 = RMul(prod34D39,prod4D01);
          real basisEval4D3B#1 = RMul(coeff4D00,prod4D3A);
          real prod44D3C#4 = RMul(prod34D21,varAcc4CFF);
          real prod4D3D#3 = RMul(coeff4D00,prod44D3C);
          real prod4D3E#1 = RMul(coeff4D00,prod4D3D);
          real basisEval4D3F#1 = RMul(coeff4D00,prod4D3E);
          real prod4D40#3 = RMul(iden4D08,prod34D21);
          real prod4D41#1 = RMul(coeff4D00,prod4D40);
          real basisEval4D42#1 = RMul(coeff4D00,prod4D41);
          real prod4D43#3 = RMul(prod24D16,prod24D0F);
          real prod4D44#1 = RMul(coeff4D00,prod4D43);
          real basisEval4D45#1 = RMul(coeff4D00,prod4D44);
          real prod4D46#3 = RMul(prod34D2B,iden4D04);
          real prod4D47#1 = RMul(coeff4D00,prod4D46);
          real basisEval4D48#1 = RMul(coeff4D00,prod4D47);
          real prod44D49#4 = RMul(prod34D2B,varAcc4CFE);
          real prod4D4A#3 = RMul(prod44D49,coeff4D00);
          real prod4D4B#1 = RMul(coeff4D00,prod4D4A);
          real basisEval4D4C#1 = RMul(coeff4D00,prod4D4B);
          real prod4D4D#1 = RMul(iden4D0C,prod4D22);
          real basisEval4D4E#1 = RMul(coeff4D00,prod4D4D);
          real prod4D4F#1 = RMul(iden4D0C,prod4D25);
          real basisEval4D50#1 = RMul(coeff4D00,prod4D4F);
          real prod4D51#1 = RMul(iden4D0C,prod4D28);
          real basisEval4D52#1 = RMul(coeff4D00,prod4D51);
          real prod4D53#1 = RMul(iden4D0C,prod4D2C);
          real basisEval4D54#1 = RMul(coeff4D00,prod4D53);
          real prod4D55#1 = RMul(prod24D1E,prod4D10);
          real basisEval4D56#1 = RMul(coeff4D00,prod4D55);
          real prod4D57#1 = RMul(prod24D1E,prod4D13);
          real basisEval4D58#1 = RMul(coeff4D00,prod4D57);
          real prod4D59#1 = RMul(prod24D1E,prod4D17);
          real basisEval4D5A#1 = RMul(coeff4D00,prod4D59);
          real prod4D5B#1 = RMul(prod34D39,prod4D05);
          real basisEval4D5C#1 = RMul(coeff4D00,prod4D5B);
          real prod4D5D#1 = RMul(prod34D39,prod4D09);
          real basisEval4D5E#1 = RMul(coeff4D00,prod4D5D);
          real prod44D5F#7 = RMul(prod34D39,varAcc4CFD);
          real prod4D60#1 = RMul(prod44D5F,prod4D01);
          real basisEval4D61#1 = RMul(coeff4D00,prod4D60);
          real prod54D62#3 = RMul(prod44D3C,varAcc4CFF);
          real prod4D63#2 = RMul(coeff4D00,prod54D62);
          real prod4D64#1 = RMul(coeff4D00,prod4D63);
          real basisEval4D65#1 = RMul(coeff4D00,prod4D64);
          real prod4D66#2 = RMul(iden4D08,prod44D3C);
          real prod4D67#1 = RMul(coeff4D00,prod4D66);
          real basisEval4D68#1 = RMul(coeff4D00,prod4D67);
          real prod4D69#2 = RMul(prod24D16,prod34D21);
          real prod4D6A#1 = RMul(coeff4D00,prod4D69);
          real basisEval4D6B#1 = RMul(coeff4D00,prod4D6A);
          real prod4D6C#2 = RMul(prod34D2B,prod24D0F);
          real prod4D6D#1 = RMul(coeff4D00,prod4D6C);
          real basisEval4D6E#1 = RMul(coeff4D00,prod4D6D);
          real prod4D6F#2 = RMul(prod44D49,iden4D04);
          real prod4D70#1 = RMul(coeff4D00,prod4D6F);
          real basisEval4D71#1 = RMul(coeff4D00,prod4D70);
          real prod54D72#3 = RMul(prod44D49,varAcc4CFE);
          real prod4D73#2 = RMul(prod54D72,coeff4D00);
          real prod4D74#1 = RMul(coeff4D00,prod4D73);
          real basisEval4D75#1 = RMul(coeff4D00,prod4D74);
          real prod4D76#1 = RMul(iden4D0C,prod4D3D);
          real basisEval4D77#1 = RMul(coeff4D00,prod4D76);
          real prod4D78#1 = RMul(iden4D0C,prod4D40);
          real basisEval4D79#1 = RMul(coeff4D00,prod4D78);
          real prod4D7A#1 = RMul(iden4D0C,prod4D43);
          real basisEval4D7B#1 = RMul(coeff4D00,prod4D7A);
          real prod4D7C#1 = RMul(iden4D0C,prod4D46);
          real basisEval4D7D#1 = RMul(coeff4D00,prod4D7C);
          real prod4D7E#1 = RMul(iden4D0C,prod4D4A);
          real basisEval4D7F#1 = RMul(coeff4D00,prod4D7E);
          real prod4D80#1 = RMul(prod24D1E,prod4D22);
          real basisEval4D81#1 = RMul(coeff4D00,prod4D80);
          real prod4D82#1 = RMul(prod24D1E,prod4D25);
          real basisEval4D83#1 = RMul(coeff4D00,prod4D82);
          real prod4D84#1 = RMul(prod24D1E,prod4D28);
          real basisEval4D85#1 = RMul(coeff4D00,prod4D84);
          real prod4D86#1 = RMul(prod24D1E,prod4D2C);
          real basisEval4D87#1 = RMul(coeff4D00,prod4D86);
          real prod4D88#1 = RMul(prod34D39,prod4D10);
          real basisEval4D89#1 = RMul(coeff4D00,prod4D88);
          real prod4D8A#1 = RMul(prod34D39,prod4D13);
          real basisEval4D8B#1 = RMul(coeff4D00,prod4D8A);
          real prod4D8C#1 = RMul(prod34D39,prod4D17);
          real basisEval4D8D#1 = RMul(coeff4D00,prod4D8C);
          real prod4D8E#1 = RMul(prod44D5F,prod4D05);
          real basisEval4D8F#1 = RMul(coeff4D00,prod4D8E);
          real prod4D90#1 = RMul(prod44D5F,prod4D09);
          real basisEval4D91#1 = RMul(coeff4D00,prod4D90);
          real prod54D92#4 = RMul(prod44D5F,varAcc4CFD);
          real prod4D93#1 = RMul(prod54D92,prod4D01);
          real basisEval4D94#1 = RMul(coeff4D00,prod4D93);
          real prod64D95#1 = RMul(prod54D62,varAcc4CFF);
          real prod4D96#1 = RMul(coeff4D00,prod64D95);
          real prod4D97#1 = RMul(coeff4D00,prod4D96);
          real basisEval4D98#1 = RMul(coeff4D00,prod4D97);
          real prod4D99#1 = RMul(iden4D08,prod54D62);
          real prod4D9A#1 = RMul(coeff4D00,prod4D99);
          real basisEval4D9B#1 = RMul(coeff4D00,prod4D9A);
          real prod4D9C#1 = RMul(prod24D16,prod44D3C);
          real prod4D9D#1 = RMul(coeff4D00,prod4D9C);
          real basisEval4D9E#1 = RMul(coeff4D00,prod4D9D);
          real prod4D9F#1 = RMul(prod34D2B,prod34D21);
          real prod4DA0#1 = RMul(coeff4D00,prod4D9F);
          real basisEval4DA1#1 = RMul(coeff4D00,prod4DA0);
          real prod4DA2#1 = RMul(prod44D49,prod24D0F);
          real prod4DA3#1 = RMul(coeff4D00,prod4DA2);
          real basisEval4DA4#1 = RMul(coeff4D00,prod4DA3);
          real prod4DA5#1 = RMul(prod54D72,iden4D04);
          real prod4DA6#1 = RMul(coeff4D00,prod4DA5);
          real basisEval4DA7#1 = RMul(coeff4D00,prod4DA6);
          real prod64DA8#1 = RMul(prod54D72,varAcc4CFE);
          real prod4DA9#1 = RMul(prod64DA8,coeff4D00);
          real prod4DAA#1 = RMul(coeff4D00,prod4DA9);
          real basisEval4DAB#1 = RMul(coeff4D00,prod4DAA);
          real prod4DAC#1 = RMul(iden4D0C,prod4D63);
          real basisEval4DAD#1 = RMul(coeff4D00,prod4DAC);
          real prod4DAE#1 = RMul(iden4D0C,prod4D66);
          real basisEval4DAF#1 = RMul(coeff4D00,prod4DAE);
          real prod4DB0#1 = RMul(iden4D0C,prod4D69);
          real basisEval4DB1#1 = RMul(coeff4D00,prod4DB0);
          real prod4DB2#1 = RMul(iden4D0C,prod4D6C);
          real basisEval4DB3#1 = RMul(coeff4D00,prod4DB2);
          real prod4DB4#1 = RMul(iden4D0C,prod4D6F);
          real basisEval4DB5#1 = RMul(coeff4D00,prod4DB4);
          real prod4DB6#1 = RMul(iden4D0C,prod4D73);
          real basisEval4DB7#1 = RMul(coeff4D00,prod4DB6);
          real prod4DB8#1 = RMul(prod24D1E,prod4D3D);
          real basisEval4DB9#1 = RMul(coeff4D00,prod4DB8);
          real prod4DBA#1 = RMul(prod24D1E,prod4D40);
          real basisEval4DBB#1 = RMul(coeff4D00,prod4DBA);
          real prod4DBC#1 = RMul(prod24D1E,prod4D43);
          real basisEval4DBD#1 = RMul(coeff4D00,prod4DBC);
          real prod4DBE#1 = RMul(prod24D1E,prod4D46);
          real basisEval4DBF#1 = RMul(coeff4D00,prod4DBE);
          real prod4DC0#1 = RMul(prod24D1E,prod4D4A);
          real basisEval4DC1#1 = RMul(coeff4D00,prod4DC0);
          real prod4DC2#1 = RMul(prod34D39,prod4D22);
          real basisEval4DC3#1 = RMul(coeff4D00,prod4DC2);
          real prod4DC4#1 = RMul(prod34D39,prod4D25);
          real basisEval4DC5#1 = RMul(coeff4D00,prod4DC4);
          real prod4DC6#1 = RMul(prod34D39,prod4D28);
          real basisEval4DC7#1 = RMul(coeff4D00,prod4DC6);
          real prod4DC8#1 = RMul(prod34D39,prod4D2C);
          real basisEval4DC9#1 = RMul(coeff4D00,prod4DC8);
          real prod4DCA#1 = RMul(prod44D5F,prod4D10);
          real basisEval4DCB#1 = RMul(coeff4D00,prod4DCA);
          real prod4DCC#1 = RMul(prod44D5F,prod4D13);
          real basisEval4DCD#1 = RMul(coeff4D00,prod4DCC);
          real prod4DCE#1 = RMul(prod44D5F,prod4D17);
          real basisEval4DCF#1 = RMul(coeff4D00,prod4DCE);
          real prod4DD0#1 = RMul(prod54D92,prod4D05);
          real basisEval4DD1#1 = RMul(coeff4D00,prod4DD0);
          real prod4DD2#1 = RMul(prod54D92,prod4D09);
          real basisEval4DD3#1 = RMul(coeff4D00,prod4DD2);
          real prod64DD4#1 = RMul(prod54D92,varAcc4CFD);
          real prod4DD5#1 = RMul(prod64DD4,prod4D01);
          real basisEval4DD6#1 = RMul(coeff4D00,prod4DD5);
          tensor[84] intermediateCons4DD7#1 = <tensor[84]>[basisEval4D03,basisEval4D07,basisEval4D0B,basisEval4D0E,basisEval4D12,basisEval4D15,basisEval4D19,basisEval4D1B,basisEval4D1D,basisEval4D20,basisEval4D24,basisEval4D27,basisEval4D2A,basisEval4D2E,basisEval4D30,basisEval4D32,basisEval4D34,basisEval4D36,basisEval4D38,basisEval4D3B,basisEval4D3F,basisEval4D42,basisEval4D45,basisEval4D48,basisEval4D4C,basisEval4D4E,basisEval4D50,basisEval4D52,basisEval4D54,basisEval4D56,basisEval4D58,basisEval4D5A,basisEval4D5C,basisEval4D5E,basisEval4D61,basisEval4D65,basisEval4D68,basisEval4D6B,basisEval4D6E,basisEval4D71,basisEval4D75,basisEval4D77,basisEval4D79,basisEval4D7B,basisEval4D7D,basisEval4D7F,basisEval4D81,basisEval4D83,basisEval4D85,basisEval4D87,basisEval4D89,basisEval4D8B,basisEval4D8D,basisEval4D8F,basisEval4D91,basisEval4D94,basisEval4D98,basisEval4D9B,basisEval4D9E,basisEval4DA1,basisEval4DA4,basisEval4DA7,basisEval4DAB,basisEval4DAD,basisEval4DAF,basisEval4DB1,basisEval4DB3,basisEval4DB5,basisEval4DB7,basisEval4DB9,basisEval4DBB,basisEval4DBD,basisEval4DBF,basisEval4DC1,basisEval4DC3,basisEval4DC5,basisEval4DC7,basisEval4DC9,basisEval4DCB,basisEval4DCD,basisEval4DCF,basisEval4DD1,basisEval4DD3,basisEval4DD6];
          tensor[84] basisResult4CFC#1 = intermediateCons4DD7;
          real probe_l_84EB4#1 = VDot<84>(femDofs366B,basisResult4CFC);
          real op1_e3_l_94EB7#1 = RSub(probe_l_84EB4,cmin4948);
          real op1_e3_l_104EBA#1 = RSub(cmax494A,cmin4948);
          real op1_e3_l_114EBD#1 = RDiv(op1_e3_l_94EB7,op1_e3_l_104EBA);
          real op1_e3_l_124EC0#1 = RSub(_t3467,_t3465);
          real op1_e3_l_134EC3#1 = RMul(op1_e3_l_114EBD,op1_e3_l_124EC0);
          real _t4EC6#1 = RAdd(_t3465,op1_e3_l_134EC3);
          real Mtransform4EC9#1 = Transform<IMAGE1D<double[3]>>(cmap23FF);
          real MxPos4ECB#1 = RMul(Mtransform4EC9,_t4EC6);
          real Ttranslate4ECE#1 = Translate<IMAGE1D<double[3]>>(cmap23FF);
          real imgPos4ED0#2 = RAdd(MxPos4ECB,Ttranslate4ECE);
          real nd4ED3#2 = Floor<1>(imgPos4ED0);
          real f4ED5#2 = RSub(imgPos4ED0,nd4ED3);
          int n4ED8#1 = RealToInt<1>(nd4ED3);
          int idx4EDA#5 = n4ED8;
          bool isInside4EDC#1 = IndexInside<IMAGE1D<double[3]>,2>(idx4EDA,cmap23FF);
          if isInside4EDC then goto ASSIGN4EF6 else goto ASSIGN537D
        ASSIGN4EF6:  preds = [COND4EDE]
          int ilit4EE0#1 = 0;
          int addRes4EE1#1 = IAdd(idx4EDA,ilit4EE0);
          int stride4EE2#2 = 3;
          int offp4EE3#3 = IMul(stride4EE2,addRes4EE1);
          real v0_4EE4#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE3);
          int ilit4EE5#3 = 1;
          int addRes4EE6#1 = IAdd(idx4EDA,ilit4EE5);
          int offp4EE7#3 = IMul(stride4EE2,addRes4EE6);
          real v1_4EE8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE7);
          tensor[2] v_4EE9#1 = <tensor[2]>[v0_4EE4,v1_4EE8];
          int offp4EEA#1 = IAdd(offp4EE3,ilit4EE5);
          real v0_4EEB#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEA);
          int offp4EEC#1 = IAdd(offp4EE7,ilit4EE5);
          real v1_4EED#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEC);
          tensor[2] v_4EEE#1 = <tensor[2]>[v0_4EEB,v1_4EED];
          int offset4EEF#2 = 2;
          int offp4EF0#1 = IAdd(offp4EE3,offset4EEF);
          real v0_4EF1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF0);
          int offp4EF2#1 = IAdd(offp4EE7,offset4EEF);
          real v1_4EF3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF2);
          tensor[2] v_4EF4#1 = <tensor[2]>[v0_4EF1,v1_4EF3];
          tensor[3,2] voxels4EF5#1 = <tensor[3,2]>[v_4EE9,v_4EEE,v_4EF4];
          tensor[3,2] ldvox4EDF#1 = voxels4EF5;
          goto JOIN4F0F
        JOIN4F0F:  preds = [ASSIGN4F0C,ASSIGN5395]
          tensor[3,2] ldvox4F0D#3 = phi(ldvox4EDF,ldvox4F0E)
          real rlit4F11#1 = 0.1e1;
          real idx4F12#1 = RSub(f4ED5,rlit4F11);
          tensor[2] kernX_4F10#1 = <tensor[2]>[f4ED5,idx4F12];
          real _f4F1B#1 = 0.1e1;
          real _f4F1C#1 = 0.1e1;
          tensor[2] a04F17#1 = <tensor[2]>[_f4F1B,_f4F1C];
          real _f4F19#1 = -0.1e1;
          real _f4F1A#1 = 0.1e1;
          tensor[2] a14F18#1 = <tensor[2]>[_f4F19,_f4F1A];
          tensor[2] prod14F1D#1 = VMul<2>(kernX_4F10,a14F18);
          tensor[2] kevalX_d0_4F16#3 = VAdd<2>(a04F17,prod14F1D);
          tensor[2] projIx4F27#1 = ProjectLast<tensor[3,2],[0]>(ldvox4F0D);
          real vdot4F28#1 = VDot<2>(projIx4F27,kevalX_d0_4F16);
          tensor[2] projIx4F29#1 = ProjectLast<tensor[3,2],[1]>(ldvox4F0D);
          real vdot4F2A#1 = VDot<2>(projIx4F29,kevalX_d0_4F16);
          tensor[2] projIx4F2B#1 = ProjectLast<tensor[3,2],[2]>(ldvox4F0D);
          real vdot4F2C#1 = VDot<2>(projIx4F2B,kevalX_d0_4F16);
          tensor[3] mcol4F26#1 = <tensor[3]>[vdot4F28,vdot4F2A,vdot4F2C];
          goto JOIN4F36
        JOIN4F36:  preds = [ASSIGN4F34,COND4950]
          tensor[3] mcol4F35#3 = phi(mcol4F26,mcol494C)
          real r4F38#9 = TensorIndex<tensor[3],[0]>(probe_l_823AF1);
          real r4F39#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(probe_l_1083FC7);
          real r4F3A#1 = RMul(r4F38,r4F39);
          real r4F3B#9 = TensorIndex<tensor[3],[1]>(probe_l_823AF1);
          real r4F3C#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(probe_l_1083FC7);
          real r4F3D#1 = RMul(r4F3B,r4F3C);
          real r4F3E#9 = TensorIndex<tensor[3],[2]>(probe_l_823AF1);
          real r4F3F#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(probe_l_1083FC7);
          real r4F40#1 = RMul(r4F3E,r4F3F);
          real r4F41#1 = RAdd(r4F3A,r4F3D);
          real r4F42#1 = RAdd(r4F41,r4F40);
          real r4F43#1 = TensorIndex<tensor[3,3,3],[0,0,1]>(probe_l_1083FC7);
          real r4F44#1 = RMul(r4F38,r4F43);
          real r4F45#1 = TensorIndex<tensor[3,3,3],[0,1,1]>(probe_l_1083FC7);
          real r4F46#1 = RMul(r4F3B,r4F45);
          real r4F47#1 = TensorIndex<tensor[3,3,3],[0,2,1]>(probe_l_1083FC7);
          real r4F48#1 = RMul(r4F3E,r4F47);
          real r4F49#1 = RAdd(r4F44,r4F46);
          real r4F4A#1 = RAdd(r4F49,r4F48);
          real r4F4B#1 = TensorIndex<tensor[3,3,3],[0,0,2]>(probe_l_1083FC7);
          real r4F4C#1 = RMul(r4F38,r4F4B);
          real r4F4D#1 = TensorIndex<tensor[3,3,3],[0,1,2]>(probe_l_1083FC7);
          real r4F4E#1 = RMul(r4F3B,r4F4D);
          real r4F4F#1 = TensorIndex<tensor[3,3,3],[0,2,2]>(probe_l_1083FC7);
          real r4F50#1 = RMul(r4F3E,r4F4F);
          real r4F51#1 = RAdd(r4F4C,r4F4E);
          real r4F52#1 = RAdd(r4F51,r4F50);
          tensor[3] tensor4F53#1 = <tensor[3]>[r4F42,r4F4A,r4F52];
          real r4F54#1 = TensorIndex<tensor[3,3,3],[1,0,0]>(probe_l_1083FC7);
          real r4F55#1 = RMul(r4F38,r4F54);
          real r4F56#1 = TensorIndex<tensor[3,3,3],[1,1,0]>(probe_l_1083FC7);
          real r4F57#1 = RMul(r4F3B,r4F56);
          real r4F58#1 = TensorIndex<tensor[3,3,3],[1,2,0]>(probe_l_1083FC7);
          real r4F59#1 = RMul(r4F3E,r4F58);
          real r4F5A#1 = RAdd(r4F55,r4F57);
          real r4F5B#1 = RAdd(r4F5A,r4F59);
          real r4F5C#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(probe_l_1083FC7);
          real r4F5D#1 = RMul(r4F38,r4F5C);
          real r4F5E#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(probe_l_1083FC7);
          real r4F5F#1 = RMul(r4F3B,r4F5E);
          real r4F60#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(probe_l_1083FC7);
          real r4F61#1 = RMul(r4F3E,r4F60);
          real r4F62#1 = RAdd(r4F5D,r4F5F);
          real r4F63#1 = RAdd(r4F62,r4F61);
          real r4F64#1 = TensorIndex<tensor[3,3,3],[1,0,2]>(probe_l_1083FC7);
          real r4F65#1 = RMul(r4F38,r4F64);
          real r4F66#1 = TensorIndex<tensor[3,3,3],[1,1,2]>(probe_l_1083FC7);
          real r4F67#1 = RMul(r4F3B,r4F66);
          real r4F68#1 = TensorIndex<tensor[3,3,3],[1,2,2]>(probe_l_1083FC7);
          real r4F69#1 = RMul(r4F3E,r4F68);
          real r4F6A#1 = RAdd(r4F65,r4F67);
          real r4F6B#1 = RAdd(r4F6A,r4F69);
          tensor[3] tensor4F6C#1 = <tensor[3]>[r4F5B,r4F63,r4F6B];
          real r4F6D#1 = TensorIndex<tensor[3,3,3],[2,0,0]>(probe_l_1083FC7);
          real r4F6E#1 = RMul(r4F38,r4F6D);
          real r4F6F#1 = TensorIndex<tensor[3,3,3],[2,1,0]>(probe_l_1083FC7);
          real r4F70#1 = RMul(r4F3B,r4F6F);
          real r4F71#1 = TensorIndex<tensor[3,3,3],[2,2,0]>(probe_l_1083FC7);
          real r4F72#1 = RMul(r4F3E,r4F71);
          real r4F73#1 = RAdd(r4F6E,r4F70);
          real r4F74#1 = RAdd(r4F73,r4F72);
          real r4F75#1 = TensorIndex<tensor[3,3,3],[2,0,1]>(probe_l_1083FC7);
          real r4F76#1 = RMul(r4F38,r4F75);
          real r4F77#1 = TensorIndex<tensor[3,3,3],[2,1,1]>(probe_l_1083FC7);
          real r4F78#1 = RMul(r4F3B,r4F77);
          real r4F79#1 = TensorIndex<tensor[3,3,3],[2,2,1]>(probe_l_1083FC7);
          real r4F7A#1 = RMul(r4F3E,r4F79);
          real r4F7B#1 = RAdd(r4F76,r4F78);
          real r4F7C#1 = RAdd(r4F7B,r4F7A);
          real r4F7D#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(probe_l_1083FC7);
          real r4F7E#1 = RMul(r4F38,r4F7D);
          real r4F7F#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(probe_l_1083FC7);
          real r4F80#1 = RMul(r4F3B,r4F7F);
          real r4F81#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(probe_l_1083FC7);
          real r4F82#1 = RMul(r4F3E,r4F81);
          real r4F83#1 = RAdd(r4F7E,r4F80);
          real r4F84#1 = RAdd(r4F83,r4F82);
          tensor[3] tensor4F85#1 = <tensor[3]>[r4F74,r4F7C,r4F84];
          tensor[3,3] op1_e3_l_1984F37#3 = <tensor[3,3]>[tensor4F53,tensor4F6C,tensor4F85];
          real r4FD7#6 = TensorIndex<tensor[3,3],[0,0]>(probe_l_833CBA);
          real r4FD8#1 = RMul(r4FD7,r4FD7);
          real r4FD9#6 = TensorIndex<tensor[3,3],[0,1]>(probe_l_833CBA);
          real r4FDA#6 = TensorIndex<tensor[3,3],[1,0]>(probe_l_833CBA);
          real r4FDB#1 = RMul(r4FD9,r4FDA);
          real r4FDC#6 = TensorIndex<tensor[3,3],[0,2]>(probe_l_833CBA);
          real r4FDD#6 = TensorIndex<tensor[3,3],[2,0]>(probe_l_833CBA);
          real r4FDE#1 = RMul(r4FDC,r4FDD);
          real r4FDF#1 = RAdd(r4FD8,r4FDB);
          real r4FE0#1 = RAdd(r4FDF,r4FDE);
          real r4FE1#1 = RMul(r4FD7,r4FD9);
          real r4FE2#6 = TensorIndex<tensor[3,3],[1,1]>(probe_l_833CBA);
          real r4FE3#1 = RMul(r4FD9,r4FE2);
          real r4FE4#6 = TensorIndex<tensor[3,3],[2,1]>(probe_l_833CBA);
          real r4FE5#1 = RMul(r4FDC,r4FE4);
          real r4FE6#1 = RAdd(r4FE1,r4FE3);
          real r4FE7#1 = RAdd(r4FE6,r4FE5);
          real r4FE8#1 = RMul(r4FD7,r4FDC);
          real r4FE9#6 = TensorIndex<tensor[3,3],[1,2]>(probe_l_833CBA);
          real r4FEA#1 = RMul(r4FD9,r4FE9);
          real r4FEB#6 = TensorIndex<tensor[3,3],[2,2]>(probe_l_833CBA);
          real r4FEC#1 = RMul(r4FDC,r4FEB);
          real r4FED#1 = RAdd(r4FE8,r4FEA);
          real r4FEE#1 = RAdd(r4FED,r4FEC);
          tensor[3] tensor4FEF#1 = <tensor[3]>[r4FE0,r4FE7,r4FEE];
          real r4FF0#1 = RMul(r4FDA,r4FD7);
          real r4FF1#1 = RMul(r4FE2,r4FDA);
          real r4FF2#1 = RMul(r4FE9,r4FDD);
          real r4FF3#1 = RAdd(r4FF0,r4FF1);
          real r4FF4#1 = RAdd(r4FF3,r4FF2);
          real r4FF5#1 = RMul(r4FDA,r4FD9);
          real r4FF6#1 = RMul(r4FE2,r4FE2);
          real r4FF7#1 = RMul(r4FE9,r4FE4);
          real r4FF8#1 = RAdd(r4FF5,r4FF6);
          real r4FF9#1 = RAdd(r4FF8,r4FF7);
          real r4FFA#1 = RMul(r4FDA,r4FDC);
          real r4FFB#1 = RMul(r4FE2,r4FE9);
          real r4FFC#1 = RMul(r4FE9,r4FEB);
          real r4FFD#1 = RAdd(r4FFA,r4FFB);
          real r4FFE#1 = RAdd(r4FFD,r4FFC);
          tensor[3] tensor4FFF#1 = <tensor[3]>[r4FF4,r4FF9,r4FFE];
          real r5000#1 = RMul(r4FDD,r4FD7);
          real r5001#1 = RMul(r4FE4,r4FDA);
          real r5002#1 = RMul(r4FEB,r4FDD);
          real r5003#1 = RAdd(r5000,r5001);
          real r5004#1 = RAdd(r5003,r5002);
          real r5005#1 = RMul(r4FDD,r4FD9);
          real r5006#1 = RMul(r4FE4,r4FE2);
          real r5007#1 = RMul(r4FEB,r4FE4);
          real r5008#1 = RAdd(r5005,r5006);
          real r5009#1 = RAdd(r5008,r5007);
          real r500A#1 = RMul(r4FDD,r4FDC);
          real r500B#1 = RMul(r4FE4,r4FE9);
          real r500C#1 = RMul(r4FEB,r4FEB);
          real r500D#1 = RAdd(r500A,r500B);
          real r500E#1 = RAdd(r500D,r500C);
          tensor[3] tensor500F#1 = <tensor[3]>[r5004,r5009,r500E];
          tensor[3,3] op1_e3_l_1994FD6#3 = <tensor[3,3]>[tensor4FEF,tensor4FFF,tensor500F];
          tensor[3] projParam504C#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1984F37);
          tensor[3] projParam504D#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1994FD6);
          tensor[3] v504E#1 = VAdd<3>(projParam504C,projParam504D);
          tensor[3] projParam504F#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1984F37);
          tensor[3] projParam5050#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1994FD6);
          tensor[3] v5051#1 = VAdd<3>(projParam504F,projParam5050);
          tensor[3] projParam5052#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1984F37);
          tensor[3] projParam5053#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1994FD6);
          tensor[3] v5054#1 = VAdd<3>(projParam5052,projParam5053);
          tensor[3,3] op1_e3_l_200504B#9 = <tensor[3,3]>[v504E,v5051,v5054];
          real r5061#9 = TensorIndex<tensor[3],[0]>(probe_l_823AF1);
          real r5062#3 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_200504B);
          real r5063#1 = RMul(r5061,r5062);
          real r5064#3 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_200504B);
          real r5065#1 = RMul(r5061,r5064);
          real r5066#3 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_200504B);
          real r5067#1 = RMul(r5061,r5066);
          tensor[3] tensor5068#1 = <tensor[3]>[r5063,r5065,r5067];
          real r5069#3 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_200504B);
          real r506A#1 = RMul(r5061,r5069);
          real r506B#3 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_200504B);
          real r506C#1 = RMul(r5061,r506B);
          real r506D#3 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_200504B);
          real r506E#1 = RMul(r5061,r506D);
          tensor[3] tensor506F#1 = <tensor[3]>[r506A,r506C,r506E];
          real r5070#3 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_200504B);
          real r5071#1 = RMul(r5061,r5070);
          real r5072#3 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_200504B);
          real r5073#1 = RMul(r5061,r5072);
          real r5074#3 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_200504B);
          real r5075#1 = RMul(r5061,r5074);
          tensor[3] tensor5076#1 = <tensor[3]>[r5071,r5073,r5075];
          tensor[3,3] tensor5077#1 = <tensor[3,3]>[tensor5068,tensor506F,tensor5076];
          real r5078#9 = TensorIndex<tensor[3],[1]>(probe_l_823AF1);
          real r5079#1 = RMul(r5078,r5062);
          real r507A#1 = RMul(r5078,r5064);
          real r507B#1 = RMul(r5078,r5066);
          tensor[3] tensor507C#1 = <tensor[3]>[r5079,r507A,r507B];
          real r507D#1 = RMul(r5078,r5069);
          real r507E#1 = RMul(r5078,r506B);
          real r507F#1 = RMul(r5078,r506D);
          tensor[3] tensor5080#1 = <tensor[3]>[r507D,r507E,r507F];
          real r5081#1 = RMul(r5078,r5070);
          real r5082#1 = RMul(r5078,r5072);
          real r5083#1 = RMul(r5078,r5074);
          tensor[3] tensor5084#1 = <tensor[3]>[r5081,r5082,r5083];
          tensor[3,3] tensor5085#1 = <tensor[3,3]>[tensor507C,tensor5080,tensor5084];
          real r5086#9 = TensorIndex<tensor[3],[2]>(probe_l_823AF1);
          real r5087#1 = RMul(r5086,r5062);
          real r5088#1 = RMul(r5086,r5064);
          real r5089#1 = RMul(r5086,r5066);
          tensor[3] tensor508A#1 = <tensor[3]>[r5087,r5088,r5089];
          real r508B#1 = RMul(r5086,r5069);
          real r508C#1 = RMul(r5086,r506B);
          real r508D#1 = RMul(r5086,r506D);
          tensor[3] tensor508E#1 = <tensor[3]>[r508B,r508C,r508D];
          real r508F#1 = RMul(r5086,r5070);
          real r5090#1 = RMul(r5086,r5072);
          real r5091#1 = RMul(r5086,r5074);
          tensor[3] tensor5092#1 = <tensor[3]>[r508F,r5090,r5091];
          tensor[3,3] tensor5093#1 = <tensor[3,3]>[tensor508A,tensor508E,tensor5092];
          tensor[3,3,3] op1_e3_l_2025060#9 = <tensor[3,3,3]>[tensor5077,tensor5085,tensor5093];
          tensor[3] projParam50CA#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_114420D);
          tensor[3] projParam50CB#1 = ProjectLast<tensor[3,3,3],[0,0]>(op1_e3_l_2025060);
          tensor[3] v50CC#1 = VAdd<3>(projParam50CA,projParam50CB);
          tensor[3] projParam50CD#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_114420D);
          tensor[3] projParam50CE#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_2025060);
          tensor[3] v50CF#1 = VAdd<3>(projParam50CD,projParam50CE);
          tensor[3] projParam50D0#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_114420D);
          tensor[3] projParam50D1#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_2025060);
          tensor[3] v50D2#1 = VAdd<3>(projParam50D0,projParam50D1);
          tensor[3,3] tensor50D3#1 = <tensor[3,3]>[v50CC,v50CF,v50D2];
          tensor[3] projParam50D4#1 = ProjectLast<tensor[3,3,3],[1,0]>(op1_e3_l_114420D);
          tensor[3] projParam50D5#1 = ProjectLast<tensor[3,3,3],[0,1]>(op1_e3_l_2025060);
          tensor[3] v50D6#1 = VAdd<3>(projParam50D4,projParam50D5);
          tensor[3] projParam50D7#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_114420D);
          tensor[3] projParam50D8#1 = ProjectLast<tensor[3,3,3],[1,1]>(op1_e3_l_2025060);
          tensor[3] v50D9#1 = VAdd<3>(projParam50D7,projParam50D8);
          tensor[3] projParam50DA#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_114420D);
          tensor[3] projParam50DB#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_2025060);
          tensor[3] v50DC#1 = VAdd<3>(projParam50DA,projParam50DB);
          tensor[3,3] tensor50DD#1 = <tensor[3,3]>[v50D6,v50D9,v50DC];
          tensor[3] projParam50DE#1 = ProjectLast<tensor[3,3,3],[2,0]>(op1_e3_l_114420D);
          tensor[3] projParam50DF#1 = ProjectLast<tensor[3,3,3],[0,2]>(op1_e3_l_2025060);
          tensor[3] v50E0#1 = VAdd<3>(projParam50DE,projParam50DF);
          tensor[3] projParam50E1#1 = ProjectLast<tensor[3,3,3],[2,1]>(op1_e3_l_114420D);
          tensor[3] projParam50E2#1 = ProjectLast<tensor[3,3,3],[1,2]>(op1_e3_l_2025060);
          tensor[3] v50E3#1 = VAdd<3>(projParam50E1,projParam50E2);
          tensor[3] projParam50E4#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_114420D);
          tensor[3] projParam50E5#1 = ProjectLast<tensor[3,3,3],[2,2]>(op1_e3_l_2025060);
          tensor[3] v50E6#1 = VAdd<3>(projParam50E4,projParam50E5);
          tensor[3,3] tensor50E7#1 = <tensor[3,3]>[v50E0,v50E3,v50E6];
          tensor[3,3,3] op1_e3_l_20350C9#27 = <tensor[3,3,3]>[tensor50D3,tensor50DD,tensor50E7];
          real r5109#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_20350C9);
          real r510A#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_863CF6);
          real r510B#1 = RMul(r5109,r510A);
          real r510C#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_20350C9);
          real r510D#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_863CF6);
          real r510E#1 = RMul(r510C,r510D);
          real r510F#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_20350C9);
          real r5110#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_863CF6);
          real r5111#1 = RMul(r510F,r5110);
          real r5112#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_20350C9);
          real r5113#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_863CF6);
          real r5114#1 = RMul(r5112,r5113);
          real r5115#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_20350C9);
          real r5116#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_863CF6);
          real r5117#1 = RMul(r5115,r5116);
          real r5118#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_20350C9);
          real r5119#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_863CF6);
          real r511A#1 = RMul(r5118,r5119);
          real r511B#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_20350C9);
          real r511C#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_863CF6);
          real r511D#1 = RMul(r511B,r511C);
          real r511E#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_20350C9);
          real r511F#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_863CF6);
          real r5120#1 = RMul(r511E,r511F);
          real r5121#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_20350C9);
          real r5122#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_863CF6);
          real r5123#1 = RMul(r5121,r5122);
          real r5124#1 = RAdd(r510B,r510E);
          real r5125#1 = RAdd(r5124,r5111);
          real r5126#1 = RAdd(r5125,r5114);
          real r5127#1 = RAdd(r5126,r5117);
          real r5128#1 = RAdd(r5127,r511A);
          real r5129#1 = RAdd(r5128,r511D);
          real r512A#1 = RAdd(r5129,r5120);
          real r512B#1 = RAdd(r512A,r5123);
          real r512C#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_863CF6);
          real r512D#1 = RMul(r5109,r512C);
          real r512E#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_863CF6);
          real r512F#1 = RMul(r510C,r512E);
          real r5130#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_863CF6);
          real r5131#1 = RMul(r510F,r5130);
          real r5132#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_863CF6);
          real r5133#1 = RMul(r5112,r5132);
          real r5134#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_863CF6);
          real r5135#1 = RMul(r5115,r5134);
          real r5136#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_863CF6);
          real r5137#1 = RMul(r5118,r5136);
          real r5138#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_863CF6);
          real r5139#1 = RMul(r511B,r5138);
          real r513A#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_863CF6);
          real r513B#1 = RMul(r511E,r513A);
          real r513C#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_863CF6);
          real r513D#1 = RMul(r5121,r513C);
          real r513E#1 = RAdd(r512D,r512F);
          real r513F#1 = RAdd(r513E,r5131);
          real r5140#1 = RAdd(r513F,r5133);
          real r5141#1 = RAdd(r5140,r5135);
          real r5142#1 = RAdd(r5141,r5137);
          real r5143#1 = RAdd(r5142,r5139);
          real r5144#1 = RAdd(r5143,r513B);
          real r5145#1 = RAdd(r5144,r513D);
          real r5146#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_863CF6);
          real r5147#1 = RMul(r5109,r5146);
          real r5148#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_863CF6);
          real r5149#1 = RMul(r510C,r5148);
          real r514A#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_863CF6);
          real r514B#1 = RMul(r510F,r514A);
          real r514C#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_863CF6);
          real r514D#1 = RMul(r5112,r514C);
          real r514E#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_863CF6);
          real r514F#1 = RMul(r5115,r514E);
          real r5150#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_863CF6);
          real r5151#1 = RMul(r5118,r5150);
          real r5152#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_863CF6);
          real r5153#1 = RMul(r511B,r5152);
          real r5154#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_863CF6);
          real r5155#1 = RMul(r511E,r5154);
          real r5156#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_863CF6);
          real r5157#1 = RMul(r5121,r5156);
          real r5158#1 = RAdd(r5147,r5149);
          real r5159#1 = RAdd(r5158,r514B);
          real r515A#1 = RAdd(r5159,r514D);
          real r515B#1 = RAdd(r515A,r514F);
          real r515C#1 = RAdd(r515B,r5151);
          real r515D#1 = RAdd(r515C,r5153);
          real r515E#1 = RAdd(r515D,r5155);
          real r515F#1 = RAdd(r515E,r5157);
          tensor[3] tensor5160#1 = <tensor[3]>[r512B,r5145,r515F];
          real r5161#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_20350C9);
          real r5162#1 = RMul(r5161,r510A);
          real r5163#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_20350C9);
          real r5164#1 = RMul(r5163,r510D);
          real r5165#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_20350C9);
          real r5166#1 = RMul(r5165,r5110);
          real r5167#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_20350C9);
          real r5168#1 = RMul(r5167,r5113);
          real r5169#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_20350C9);
          real r516A#1 = RMul(r5169,r5116);
          real r516B#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_20350C9);
          real r516C#1 = RMul(r516B,r5119);
          real r516D#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_20350C9);
          real r516E#1 = RMul(r516D,r511C);
          real r516F#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_20350C9);
          real r5170#1 = RMul(r516F,r511F);
          real r5171#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_20350C9);
          real r5172#1 = RMul(r5171,r5122);
          real r5173#1 = RAdd(r5162,r5164);
          real r5174#1 = RAdd(r5173,r5166);
          real r5175#1 = RAdd(r5174,r5168);
          real r5176#1 = RAdd(r5175,r516A);
          real r5177#1 = RAdd(r5176,r516C);
          real r5178#1 = RAdd(r5177,r516E);
          real r5179#1 = RAdd(r5178,r5170);
          real r517A#1 = RAdd(r5179,r5172);
          real r517B#1 = RMul(r5161,r512C);
          real r517C#1 = RMul(r5163,r512E);
          real r517D#1 = RMul(r5165,r5130);
          real r517E#1 = RMul(r5167,r5132);
          real r517F#1 = RMul(r5169,r5134);
          real r5180#1 = RMul(r516B,r5136);
          real r5181#1 = RMul(r516D,r5138);
          real r5182#1 = RMul(r516F,r513A);
          real r5183#1 = RMul(r5171,r513C);
          real r5184#1 = RAdd(r517B,r517C);
          real r5185#1 = RAdd(r5184,r517D);
          real r5186#1 = RAdd(r5185,r517E);
          real r5187#1 = RAdd(r5186,r517F);
          real r5188#1 = RAdd(r5187,r5180);
          real r5189#1 = RAdd(r5188,r5181);
          real r518A#1 = RAdd(r5189,r5182);
          real r518B#1 = RAdd(r518A,r5183);
          real r518C#1 = RMul(r5161,r5146);
          real r518D#1 = RMul(r5163,r5148);
          real r518E#1 = RMul(r5165,r514A);
          real r518F#1 = RMul(r5167,r514C);
          real r5190#1 = RMul(r5169,r514E);
          real r5191#1 = RMul(r516B,r5150);
          real r5192#1 = RMul(r516D,r5152);
          real r5193#1 = RMul(r516F,r5154);
          real r5194#1 = RMul(r5171,r5156);
          real r5195#1 = RAdd(r518C,r518D);
          real r5196#1 = RAdd(r5195,r518E);
          real r5197#1 = RAdd(r5196,r518F);
          real r5198#1 = RAdd(r5197,r5190);
          real r5199#1 = RAdd(r5198,r5191);
          real r519A#1 = RAdd(r5199,r5192);
          real r519B#1 = RAdd(r519A,r5193);
          real r519C#1 = RAdd(r519B,r5194);
          tensor[3] tensor519D#1 = <tensor[3]>[r517A,r518B,r519C];
          real r519E#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_20350C9);
          real r519F#1 = RMul(r519E,r510A);
          real r51A0#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_20350C9);
          real r51A1#1 = RMul(r51A0,r510D);
          real r51A2#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_20350C9);
          real r51A3#1 = RMul(r51A2,r5110);
          real r51A4#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_20350C9);
          real r51A5#1 = RMul(r51A4,r5113);
          real r51A6#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_20350C9);
          real r51A7#1 = RMul(r51A6,r5116);
          real r51A8#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_20350C9);
          real r51A9#1 = RMul(r51A8,r5119);
          real r51AA#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_20350C9);
          real r51AB#1 = RMul(r51AA,r511C);
          real r51AC#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_20350C9);
          real r51AD#1 = RMul(r51AC,r511F);
          real r51AE#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_20350C9);
          real r51AF#1 = RMul(r51AE,r5122);
          real r51B0#1 = RAdd(r519F,r51A1);
          real r51B1#1 = RAdd(r51B0,r51A3);
          real r51B2#1 = RAdd(r51B1,r51A5);
          real r51B3#1 = RAdd(r51B2,r51A7);
          real r51B4#1 = RAdd(r51B3,r51A9);
          real r51B5#1 = RAdd(r51B4,r51AB);
          real r51B6#1 = RAdd(r51B5,r51AD);
          real r51B7#1 = RAdd(r51B6,r51AF);
          real r51B8#1 = RMul(r519E,r512C);
          real r51B9#1 = RMul(r51A0,r512E);
          real r51BA#1 = RMul(r51A2,r5130);
          real r51BB#1 = RMul(r51A4,r5132);
          real r51BC#1 = RMul(r51A6,r5134);
          real r51BD#1 = RMul(r51A8,r5136);
          real r51BE#1 = RMul(r51AA,r5138);
          real r51BF#1 = RMul(r51AC,r513A);
          real r51C0#1 = RMul(r51AE,r513C);
          real r51C1#1 = RAdd(r51B8,r51B9);
          real r51C2#1 = RAdd(r51C1,r51BA);
          real r51C3#1 = RAdd(r51C2,r51BB);
          real r51C4#1 = RAdd(r51C3,r51BC);
          real r51C5#1 = RAdd(r51C4,r51BD);
          real r51C6#1 = RAdd(r51C5,r51BE);
          real r51C7#1 = RAdd(r51C6,r51BF);
          real r51C8#1 = RAdd(r51C7,r51C0);
          real r51C9#1 = RMul(r519E,r5146);
          real r51CA#1 = RMul(r51A0,r5148);
          real r51CB#1 = RMul(r51A2,r514A);
          real r51CC#1 = RMul(r51A4,r514C);
          real r51CD#1 = RMul(r51A6,r514E);
          real r51CE#1 = RMul(r51A8,r5150);
          real r51CF#1 = RMul(r51AA,r5152);
          real r51D0#1 = RMul(r51AC,r5154);
          real r51D1#1 = RMul(r51AE,r5156);
          real r51D2#1 = RAdd(r51C9,r51CA);
          real r51D3#1 = RAdd(r51D2,r51CB);
          real r51D4#1 = RAdd(r51D3,r51CC);
          real r51D5#1 = RAdd(r51D4,r51CD);
          real r51D6#1 = RAdd(r51D5,r51CE);
          real r51D7#1 = RAdd(r51D6,r51CF);
          real r51D8#1 = RAdd(r51D7,r51D0);
          real r51D9#1 = RAdd(r51D8,r51D1);
          tensor[3] tensor51DA#1 = <tensor[3]>[r51B7,r51C8,r51D9];
          tensor[3,3] op1_e3_l_2065108#3 = <tensor[3,3]>[tensor5160,tensor519D,tensor51DA];
          tensor[3] projParam52B0#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_2065108);
          real vdot52B1#1 = VDot<3>(op1_e3_l_943E30,projParam52B0);
          tensor[3] projParam52B2#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_2065108);
          real vdot52B3#1 = VDot<3>(op1_e3_l_943E30,projParam52B2);
          tensor[3] projParam52B4#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_2065108);
          real vdot52B5#1 = VDot<3>(op1_e3_l_943E30,projParam52B4);
          tensor[3] op1_e3_l_23152AF#2 = <tensor[3]>[vdot52B1,vdot52B3,vdot52B5];
          tensor[3] op1_e3_l_23452BE#3 = VAdd<3>(op1_e3_l_23152AF,op1_e3_l_23152AF);
          tensor[3] op1_e3_l_33752C1#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_23452BE);
          real op1_e3_l_33852C4#1 = VDot<3>(op1_e3_l_23452BE,op1_e3_l_23452BE);
          real realLit52C8#1 = 0.1e1;
          real r52C9#3 = RDiv(realLit52C8,op1_e3_l_33852C4);
          real r52CA#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_33752C1);
          real r52CB#1 = RMul(r52C9,r52CA);
          real r52CC#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_33752C1);
          real r52CD#1 = RMul(r52C9,r52CC);
          real r52CE#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_33752C1);
          real r52CF#1 = RMul(r52C9,r52CE);
          tensor[3] op1_e3_l_33952C7#1 = <tensor[3]>[r52CB,r52CD,r52CF];
          tensor[3] op1_e3_l_68252DA#3 = VNeg<3>(op1_e3_l_33952C7);
          real op1_e3_l_68452DD#1 = VDot<3>(op1_e3_l_68252DA,op1_e3_l_68252DA);
          real op1_e3_l_68552E0#1 = Sqrt(op1_e3_l_68452DD);
          real realLit52E4#1 = 0.1e1;
          real op1_e3_l_68752E3#1 = RDiv(realLit52E4,op1_e3_l_68552E0);
          tensor[3] op1_e3_l_68852E8#1 = VScale<3>(op1_e3_l_68752E3,op1_e3_l_68252DA);
          tensor[3] op1_e3_l_68952EB#1 = VNeg<3>(op1_e3_l_68852E8);
          real op1_e3_l_69052EE#2 = VDot<3>(op1_e3_l_68952EB,litwsp2425);
          real op1_e3_l_69152F1#1 = RMul(op1_e3_l_69052EE,op1_e3_l_69052EE);
          real op1_e3_l_69252F4#1 = RMul(phKd2433,op1_e3_l_69152F1);
          real op1_e3_l_69452F7#1 = RSub(rayN243D,camNearVsp2421);
          real op1_e3_l_69552FA#1 = RSub(camFarVsp2423,camNearVsp2421);
          real op1_e3_l_69652FD#1 = RDiv(op1_e3_l_69452F7,op1_e3_l_69552FA);
          tensor[3] op1_e3_l_6975300#1 = VSub<3>(mcFar241D,mcNear241B);
          tensor[3] op1_e3_l_6985303#1 = VScale<3>(op1_e3_l_69652FD,op1_e3_l_6975300);
          real op1_e3_l_6995306#3 = RAdd(phKa2431,op1_e3_l_69252F4);
          tensor[3] op1_e3_l_7005309#3 = VAdd<3>(mcNear241B,op1_e3_l_6985303);
          real r530D#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7005309);
          real r530E#1 = TensorIndex<tensor[3],[0]>(mcol4F35);
          real r530F#1 = RMul(op1_e3_l_6995306,r530D);
          real r5310#1 = RMul(r530F,r530E);
          real r5311#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7005309);
          real r5312#1 = TensorIndex<tensor[3],[1]>(mcol4F35);
          real r5313#1 = RMul(op1_e3_l_6995306,r5311);
          real r5314#1 = RMul(r5313,r5312);
          real r5315#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7005309);
          real r5316#1 = TensorIndex<tensor[3],[2]>(mcol4F35);
          real r5317#1 = RMul(op1_e3_l_6995306,r5315);
          real r5318#1 = RMul(r5317,r5316);
          tensor[3] op1_e3_l_701530C#1 = <tensor[3]>[r5310,r5314,r5318];
          real r5328#1 = TensorIndex<tensor[3],[0]>(mcol494C);
          real r5329#3 = RMul(phKs2435,scomp4946);
          real r532A#1 = RMul(r5329,r5328);
          real r532B#1 = TensorIndex<tensor[3],[1]>(mcol494C);
          real r532C#1 = RMul(r5329,r532B);
          real r532D#1 = TensorIndex<tensor[3],[2]>(mcol494C);
          real r532E#1 = RMul(r5329,r532D);
          tensor[3] op1_e3_l_7025327#1 = <tensor[3]>[r532A,r532C,r532E];
          real op1_e3_l_7035338#2 = RSub(_t3467,_t4571);
          tensor[3] op1_e3_l_704533B#3 = VAdd<3>(op1_e3_l_701530C,op1_e3_l_7025327);
          real r533F#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_704533B);
          real r5340#3 = RMul(transp243B,op1_e3_l_7035338);
          real r5341#1 = RMul(r5340,r533F);
          real r5342#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_704533B);
          real r5343#1 = RMul(r5340,r5342);
          real r5344#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_704533B);
          real r5345#1 = RMul(r5340,r5344);
          tensor[3] op1_e3_l_705533E#1 = <tensor[3]>[r5341,r5343,r5345];
          tensor[3] rgb534F#2 = VAdd<3>(rgb2439,op1_e3_l_705533E);
          real op1_e3_l_55352#1 = RSub(_t3467,op1_e3_l_7035338);
          real transp5355#2 = RMul(transp243B,op1_e3_l_55352);
          bool _t5358#1 = LT<real>(transp5355,transp0240F);
          if _t5358 then goto SAVE535B else goto JOIN5360
        SAVE535B:  preds = [COND535A]
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = _t3465;
          stabilize
          goto JOIN5360
        JOIN5360:  preds = [*STABILIZE535E,COND535A]
          real transp535F#1 = phi(transp5355)
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = transp535F;
          active
        ASSIGN537D:  preds = [COND4EDE]
          int ilit5365#1 = 0;
          int addRes5366#1 = IAdd(idx4EDA,ilit5365);
          int ix5367#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,addRes5366);
          int stride5368#2 = 3;
          int offp5369#3 = IMul(stride5368,ix5367);
          real v0_536A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5369);
          int ilit536B#3 = 1;
          int addRes536C#1 = IAdd(idx4EDA,ilit536B);
          int ix536D#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,addRes536C);
          int offp536E#3 = IMul(stride5368,ix536D);
          real v1_536F#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp536E);
          tensor[2] v_5370#1 = <tensor[2]>[v0_536A,v1_536F];
          int offp5371#1 = IAdd(offp5369,ilit536B);
          real v0_5372#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5371);
          int offp5373#1 = IAdd(offp536E,ilit536B);
          real v1_5374#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5373);
          tensor[2] v_5375#1 = <tensor[2]>[v0_5372,v1_5374];
          int offset5376#2 = 2;
          int offp5377#1 = IAdd(offp5369,offset5376);
          real v0_5378#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5377);
          int offp5379#1 = IAdd(offp536E,offset5376);
          real v1_537A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5379);
          tensor[2] v_537B#1 = <tensor[2]>[v0_5378,v1_537A];
          tensor[3,2] voxels537C#1 = <tensor[3,2]>[v_5370,v_5375,v_537B];
          tensor[3,2] ldvox4F0E#1 = voxels537C;
          goto JOIN4F0F
        ASSIGN5396:  preds = [COND3450]
          bool _t3454#1 = false;
          goto JOIN3455
        ASSIGN5397:  preds = [COND2CEB]
          bool _t3457#1 = false;
          goto JOIN3458
        ASSIGN5398:  preds = [COND2CE6]
          bool _t345A#1 = false;
          goto JOIN345B
        ASSIGN5399:  preds = [COND2452]
          bool _t345D#1 = false;
          goto JOIN345E
    end update
    method stabilize
        ENTRY539A:  preds = []
          tensor[4] rgba539B#1 = self.rgba;
          tensor[3] rgb539D#3 = self.rgb;
          real transp539F#2 = self.transp;
          real _t53A1#2 = 0.1e1;
          bool _t53A3#1 = LT<real>(transp539F,_t53A1);
          if _t53A3 then goto ASSIGN53A8 else goto JOIN53BB
        ASSIGN53A8:  preds = [COND53A5]
          real aa53A6#4 = RSub(_t53A1,transp539F);
          real _t53A9#1 = VIndex<3,0>(rgb539D);
          real _t53AB#1 = RDiv(_t53A9,aa53A6);
          real _t53AE#1 = VIndex<3,1>(rgb539D);
          real _t53B0#1 = RDiv(_t53AE,aa53A6);
          real _t53B3#1 = VIndex<3,2>(rgb539D);
          real _t53B5#1 = RDiv(_t53B3,aa53A6);
          tensor[4] rgba53B8#1 = <tensor[4]>[_t53AB,_t53B0,_t53B5,aa53A6];
          goto JOIN53BB
        JOIN53BB:  preds = [ASSIGN53B9,COND53A5]
          tensor[4] rgba53BA#1 = phi(rgba53B8,rgba539B)
          self.rgba = rgba53BA;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY53BE:  preds = []
      int iresU53BF#1 = globals.iresU2121;
      int iresV53C1#1 = globals.iresV2122;
      int _t53C3#2 = 0;
      int _t53C5#2 = 1;
      int _t53C7#1 = ISub(iresV53C1,_t53C5);
      int[] _t53C9#1 = Range(_t53C3,_t53C7);
    FOREACH53CC:  preds = [ASSIGN53CA,NEXT53D5]
      foreach (vi53CB in _t53C9) on exit goto RETURN53D6
      int _t53CD#1 = ISub(iresU53BF,_t53C5);
      int[] _t53CF#1 = Range(_t53C3,_t53CD);
    FOREACH53D2:  preds = [ASSIGN53D0,NEXT53D4]
      foreach (ui53D1 in _t53CF) on exit goto NEXT53D5
      new ray(ui53D1,vi53CB);
      goto FOREACH53D2
    NEXT53D5:  preds = [FOREACH53D2]
      goto FOREACH53CC
    RETURN53D6:  preds = [FOREACH53CC]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2115 (block) = <no-default>
  input 0space04D7_intermedateGlobal2116 (space) = <no-default>
  input 0U04D9_intermedateGlobal2117 (U) = <no-default>
  input cellChoice2118 (cellChoice) = <no-default>
  input cmap2119 (cmap) = image("cmap.nrrd")
  input camEye211A (camEye) = <default>
  input camAt211B (camAt) = <default>
  input camUp211C (camUp) = <default>
  input camNear211D (camNear) = <default>
  input camFar211E (camFar) = <default>
  input camFOV211F (camFOV) = <default>
  input camOrtho2120 (camOrtho) = <default>
  input iresU2121 (iresU) = <default>
  input iresV2122 (iresV) = <default>
  input rayStep2123 (rayStep) = <default>
  input refStep2124 (refStep) = <default>
  input transp02125 (transp0) = <default>
  input thick2126 (thick) = <default>
  input fStrTh2127 (fStrTh) = <default>
  input fMaskTh2128 (fMaskTh) = <default>
  input fBias2129 (fBias) = <default>
  input maxAlpha212A (maxAlpha) = <default>
  input light212B (light) = <default>
  input phong212C (phong) = <default>
  input mcNear212D (mcNear) = <default>
  input mcFar212E (mcFar) = <default>
  input litdir212F (litdir) = <default>
  input cminmax2130 (cminmax) = <default>
  global tensor[3] camN2131
  global tensor[3] camU2132
  global tensor[3] camV2133
  global real camDist2134
  global real camVmax2135
  global real camUmax2136
  global real camNearVsp2137
  global real camFarVsp2138
  global tensor[3] litwsp2139
  global int _t213A
  global femData:Space _tX213B
  global femData:FemFunc _tXX213C
## functions
## input initialization
  ENTRY213F:  preds = []
    real _t2140#13 = 0.e0;
    real _t2142#1 = -0.2e1;
    tensor[3] camEye2144#1 = <tensor[3]>[_t2140,_t2142,_t2140];
    globals.camEye211A = camEye2144;
    tensor[3] camAt2147#1 = <tensor[3]>[_t2140,_t2140,_t2140];
    globals.camAt211B = camAt2147;
    real _t214A#5 = 0.1e1;
    tensor[3] camUp214C#1 = <tensor[3]>[_t2140,_t2140,_t214A];
    globals.camUp211C = camUp214C;
    real camNear214F#1 = -0.4e1;
    globals.camNear211D = camNear214F;
    real camFar2152#1 = 0.4e1;
    globals.camFar211E = camFar2152;
    real camFOV2155#1 = 0.1e2;
    globals.camFOV211F = camFOV2155;
    bool camOrtho2158#2 = false;
    globals.camOrtho2120 = camOrtho2158;
    int iresU215B#2 = 100;
    globals.iresU2121 = iresU215B;
    globals.iresV2122 = iresU215B;
    real rayStep215F#2 = 0.1e-3;
    globals.rayStep2123 = rayStep215F;
    globals.refStep2124 = rayStep215F;
    real transp02163#1 = 0.5e-2;
    globals.transp02125 = transp02163;
    real thick2166#1 = 0.1e-1;
    globals.thick2126 = thick2166;
    globals.fStrTh2127 = _t2140;
    globals.fMaskTh2128 = _t2140;
    real fBias216B#2 = 0.1e0;
    globals.fBias2129 = fBias216B;
    globals.maxAlpha212A = _t214A;
    globals.light212B = camOrtho2158;
    real _t2170#1 = 0.7e0;
    real _t2172#1 = 0.2e0;
    real _t2174#1 = 0.1e3;
    tensor[4] phong2176#1 = <tensor[4]>[fBias216B,_t2170,_t2172,_t2174];
    globals.phong212C = phong2176;
    tensor[3] mcNear2179#2 = <tensor[3]>[_t214A,_t214A,_t214A];
    globals.mcNear212D = mcNear2179;
    globals.mcFar212E = mcNear2179;
    real _t217D#1 = -0.1e1;
    tensor[3] litdir217F#1 = <tensor[3]>[_t2140,_t217D,_t2140];
    globals.litdir212F = litdir217F;
    tensor[2] cminmax2182#1 = <tensor[2]>[_t2140,_t2140];
    globals.cminmax2130 = cminmax2182;
    return
## global-variable initialization
  ENTRY2186:  preds = []
    femData:Mesh block2187#3 = globals.block2115;
    femData:Space 0space04D7_intermedateGlobal2189#1 = globals.0space04D7_intermedateGlobal2116;
    femData:FemFunc 0U04D9_intermedateGlobal218B#1 = globals.0U04D9_intermedateGlobal2117;
    int cellChoice218D#1 = globals.cellChoice2118;
    tensor[3] camEye2191#1 = globals.camEye211A;
    tensor[3] camAt2193#1 = globals.camAt211B;
    tensor[3] camUp2195#3 = globals.camUp211C;
    real camNear2197#1 = globals.camNear211D;
    real camFar2199#1 = globals.camFar211E;
    real camFOV219B#1 = globals.camFOV211F;
    int iresU219D#1 = globals.iresU2121;
    int iresV219F#1 = globals.iresV2122;
    tensor[3] litdir21A1#5 = globals.litdir212F;
    int _t21A3#1 = 0;
    int _t21A5#1 = 1;
    int _t21A7#1 = ExtractFemItem<int,NumCell(Mesh)>(block2187);
    int _t21A9#1 = ISub(_t21A7,_t21A5);
    int[] _t21AB#1 = Range(_t21A3,_t21A9);
    femData:MeshCell[] _t21AD#1 = <femData:MeshCell[]>{};
  FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B6]
    foreach (_t21AF in _t21AB) on exit goto ASSIGN21B8
      femData:MeshCell[] _t21B4#2 = phi(_t21AD,_t21B3)
    femData:MeshCell _t21B1#1 = LoadFem<femData:MeshCell>(block2187,_t21AF);
    femData:MeshCell[] _t21B3#1 = Append<femData:MeshCell>(_t21B4,_t21B1);
    goto FOREACH21B0
  ASSIGN21B8:  preds = [FOREACH21B0]
    femData:Space space21B7#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal2189,block2187);
    femData:FemFunc U21B9#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal218B,space21B7);
    femData:MeshCell c121BB#1 = Subscript<femData:MeshCell[]>(_t21B4,cellChoice218D);
    int _t21BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c121BB);
    femData:FuncCell _t21BF#2 = LoadFem<femData:FuncCell>(U21B9,_t21BD);
    femData:FemFunc _t21C1#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t21BF);
    femData:Space _t21C3#1 = ExtractFem<femData:Space,femData:FemFunc>(_t21C1);
    int _t21C5#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t21BF);
    tensor[3] op1_e3_l_421CB#9 = VSub<3>(camAt2193,camEye2191);
    real op1_e3_l_621CE#1 = VDot<3>(op1_e3_l_421CB,op1_e3_l_421CB);
    real op1_e3_l_721D1#6 = Sqrt(op1_e3_l_621CE);
    real realLit21D5#1 = 0.1e1;
    real op1_e3_l_921D4#6 = RDiv(realLit21D5,op1_e3_l_721D1);
    tensor[3] camN21D9#4 = VScale<3>(op1_e3_l_921D4,op1_e3_l_421CB);
    globals.camN2131 = camN21D9;
    real realLit21DE#3 = 0.e0;
    real r21DF#3 = TensorIndex<tensor[3],[0]>(camUp2195);
    real r21E0#3 = RMul(realLit21DE,r21DF);
    real r21E1#3 = TensorIndex<tensor[3],[1]>(camUp2195);
    real r21E2#3 = RMul(realLit21DE,r21E1);
    real r21E3#3 = TensorIndex<tensor[3],[2]>(camUp2195);
    real r21E4#5 = RMul(realLit21DE,r21E3);
    real r21E5#3 = RAdd(r21E0,r21E2);
    real r21E6#3 = RAdd(r21E5,r21E4);
    real realLit21E7#3 = 0.1e1;
    real r21E8#1 = RMul(realLit21E7,r21E3);
    real r21E9#1 = RAdd(r21E5,r21E8);
    real realLit21EA#3 = -0.1e1;
    real r21EB#1 = RMul(realLit21EA,r21E1);
    real r21EC#1 = RAdd(r21E0,r21EB);
    real r21ED#1 = RAdd(r21EC,r21E4);
    tensor[3] tensor21EE#1 = <tensor[3]>[r21E6,r21E9,r21ED];
    real r21EF#1 = RMul(realLit21EA,r21E3);
    real r21F0#1 = RAdd(r21E5,r21EF);
    real r21F1#1 = RMul(realLit21E7,r21DF);
    real r21F2#1 = RAdd(r21F1,r21E2);
    real r21F3#1 = RAdd(r21F2,r21E4);
    tensor[3] tensor21F4#1 = <tensor[3]>[r21F0,r21E6,r21F3];
    real r21F5#1 = RMul(realLit21E7,r21E1);
    real r21F6#1 = RAdd(r21E0,r21F5);
    real r21F7#1 = RAdd(r21F6,r21E4);
    real r21F8#1 = RMul(realLit21EA,r21DF);
    real r21F9#1 = RAdd(r21F8,r21E2);
    real r21FA#1 = RAdd(r21F9,r21E4);
    tensor[3] tensor21FB#1 = <tensor[3]>[r21F7,r21FA,r21E6];
    tensor[3] projParam221D#1 = tensor21EE;
    real vdot221E#2 = VDot<3>(op1_e3_l_421CB,projParam221D);
    tensor[3] projParam221F#1 = tensor21F4;
    real vdot2220#2 = VDot<3>(op1_e3_l_421CB,projParam221F);
    tensor[3] projParam2221#1 = tensor21FB;
    real vdot2222#2 = VDot<3>(op1_e3_l_421CB,projParam2221);
    tensor[3] op1_e3_l_17221C#3 = <tensor[3]>[vdot221E,vdot2220,vdot2222];
    real op1_e3_l_34222B#1 = VDot<3>(op1_e3_l_17221C,op1_e3_l_17221C);
    real r222F#1 = RMul(op1_e3_l_921D4,op1_e3_l_921D4);
    real op1_e3_l_35222E#1 = RMul(r222F,op1_e3_l_34222B);
    real op1_e3_l_362233#1 = Sqrt(op1_e3_l_35222E);
    tensor[3] op1_e3_l_372236#1 = VScale<3>(op1_e3_l_921D4,op1_e3_l_17221C);
    real realLit223A#1 = 0.1e1;
    real op1_e3_l_382239#2 = RDiv(realLit223A,op1_e3_l_362233);
    tensor[3] camU223E#4 = VScale<3>(op1_e3_l_382239,op1_e3_l_372236);
    globals.camU2132 = camU223E;
    real realLit2243#3 = 0.e0;
    real r2244#3 = vdot221E;
    real r2245#3 = RMul(realLit2243,r2244);
    real r2246#3 = vdot2220;
    real r2247#3 = RMul(realLit2243,r2246);
    real r2248#3 = vdot2222;
    real r2249#5 = RMul(realLit2243,r2248);
    real r224A#3 = RAdd(r2245,r2247);
    real r224B#3 = RAdd(r224A,r2249);
    real realLit224C#3 = 0.1e1;
    real r224D#1 = RMul(realLit224C,r2248);
    real r224E#1 = RAdd(r224A,r224D);
    real realLit224F#3 = -0.1e1;
    real r2250#1 = RMul(realLit224F,r2246);
    real r2251#1 = RAdd(r2245,r2250);
    real r2252#1 = RAdd(r2251,r2249);
    tensor[3] tensor2253#1 = <tensor[3]>[r224B,r224E,r2252];
    real r2254#1 = RMul(realLit224F,r2248);
    real r2255#1 = RAdd(r224A,r2254);
    real r2256#1 = RMul(realLit224C,r2244);
    real r2257#1 = RAdd(r2256,r2247);
    real r2258#1 = RAdd(r2257,r2249);
    tensor[3] tensor2259#1 = <tensor[3]>[r2255,r224B,r2258];
    real r225A#1 = RMul(realLit224C,r2246);
    real r225B#1 = RAdd(r2245,r225A);
    real r225C#1 = RAdd(r225B,r2249);
    real r225D#1 = RMul(realLit224F,r2244);
    real r225E#1 = RAdd(r225D,r2247);
    real r225F#1 = RAdd(r225E,r2249);
    tensor[3] tensor2260#1 = <tensor[3]>[r225C,r225F,r224B];
    tensor[3] projParam2282#1 = tensor2253;
    real vdot2283#1 = VDot<3>(op1_e3_l_421CB,projParam2282);
    tensor[3] projParam2284#1 = tensor2259;
    real vdot2285#1 = VDot<3>(op1_e3_l_421CB,projParam2284);
    tensor[3] projParam2286#1 = tensor2260;
    real vdot2287#1 = VDot<3>(op1_e3_l_421CB,projParam2286);
    tensor[3] op1_e3_l_472281#1 = <tensor[3]>[vdot2283,vdot2285,vdot2287];
    tensor[3] op1_e3_l_502290#3 = VScale<3>(op1_e3_l_921D4,op1_e3_l_472281);
    real r2294#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_502290);
    real r2295#3 = RMul(op1_e3_l_921D4,op1_e3_l_382239);
    real r2296#2 = RMul(r2295,r2294);
    real r2297#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_502290);
    real r2298#2 = RMul(r2295,r2297);
    real r2299#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_502290);
    real r229A#2 = RMul(r2295,r2299);
    tensor[3] camV2293#1 = <tensor[3]>[r2296,r2298,r229A];
    globals.camV2133 = camV2293;
    globals.camDist2134 = op1_e3_l_721D1;
    real _t22A6#1 = 0.314159265358979323846264338327950288e1;
    real _t22A8#1 = 0.36e3;
    real op1_e3_l_522AA#1 = RMul(camFOV219B,_t22A6);
    real op1_e3_l_622AD#1 = RDiv(op1_e3_l_522AA,_t22A8);
    real op1_e3_l_1022B0#2 = Tan(op1_e3_l_622AD);
    real camVmax22B3#1 = RMul(op1_e3_l_1022B0,op1_e3_l_721D1);
    globals.camVmax2135 = camVmax22B3;
    real _t22B7#1 = IntToReal(iresU219D);
    real _t22B9#1 = IntToReal(iresV219F);
    real r22BC#1 = RMul(_t22B7,op1_e3_l_1022B0);
    real op1_e3_l_1422BB#1 = RMul(r22BC,op1_e3_l_721D1);
    real camUmax22C0#1 = RDiv(op1_e3_l_1422BB,_t22B9);
    globals.camUmax2136 = camUmax22C0;
    real camNearVsp22C4#1 = RAdd(camNear2197,op1_e3_l_721D1);
    globals.camNearVsp2137 = camNearVsp22C4;
    real camFarVsp22C8#1 = RAdd(camFar2199,op1_e3_l_721D1);
    globals.camFarVsp2138 = camFarVsp22C8;
    real op1_e3_l_322CE#1 = VDot<3>(litdir21A1,litdir21A1);
    real op1_e3_l_422D1#1 = Sqrt(op1_e3_l_322CE);
    real realLit22D5#1 = 0.1e1;
    real op1_e3_l_522D4#1 = RDiv(realLit22D5,op1_e3_l_422D1);
    real r22DA#1 = VIndex<3,0>(camU223E);
    real r22DB#3 = TensorIndex<tensor[3],[0]>(litdir21A1);
    real r22DC#1 = RMul(r22DA,r22DB);
    real r22DD#1 = r2296;
    real r22DE#3 = TensorIndex<tensor[3],[1]>(litdir21A1);
    real r22DF#1 = RMul(r22DD,r22DE);
    real r22E0#1 = VIndex<3,0>(camN21D9);
    real r22E1#3 = TensorIndex<tensor[3],[2]>(litdir21A1);
    real r22E2#1 = RMul(r22E0,r22E1);
    real r22E3#1 = RAdd(r22DC,r22DF);
    real r22E4#1 = RAdd(r22E3,r22E2);
    real r22E5#1 = VIndex<3,1>(camU223E);
    real r22E6#1 = RMul(r22E5,r22DB);
    real r22E7#1 = r2298;
    real r22E8#1 = RMul(r22E7,r22DE);
    real r22E9#1 = VIndex<3,1>(camN21D9);
    real r22EA#1 = RMul(r22E9,r22E1);
    real r22EB#1 = RAdd(r22E6,r22E8);
    real r22EC#1 = RAdd(r22EB,r22EA);
    real r22ED#1 = VIndex<3,2>(camU223E);
    real r22EE#1 = RMul(r22ED,r22DB);
    real r22EF#1 = r229A;
    real r22F0#1 = RMul(r22EF,r22DE);
    real r22F1#1 = VIndex<3,2>(camN21D9);
    real r22F2#1 = RMul(r22F1,r22E1);
    real r22F3#1 = RAdd(r22EE,r22F0);
    real r22F4#1 = RAdd(r22F3,r22F2);
    tensor[3] op1_e3_l_622D9#1 = <tensor[3]>[r22E4,r22EC,r22F4];
    tensor[3] litwsp2312#1 = VScale<3>(op1_e3_l_522D4,op1_e3_l_622D9);
    globals.litwsp2139 = litwsp2312;
    globals._t213A = _t21C5;
    globals._tX213B = _t21C3;
    globals._tXX213C = _t21C1;
    return
## strand
  strand ray (int ui231C#1, int vi231D#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY232E:  preds = []
        tensor[3] camEye232F#1 = globals.camEye211A;
        bool camOrtho2331#2 = globals.camOrtho2120;
        int iresU2333#1 = globals.iresU2121;
        int iresV2335#1 = globals.iresV2122;
        real rayStep2337#1 = globals.rayStep2123;
        real refStep2339#1 = globals.refStep2124;
        tensor[4] phong233B#4 = globals.phong212C;
        tensor[3] camN233D#1 = globals.camN2131;
        tensor[3] camU233F#1 = globals.camU2132;
        tensor[3] camV2341#1 = globals.camV2133;
        real camDist2343#1 = globals.camDist2134;
        real camVmax2345#2 = globals.camVmax2135;
        real camUmax2347#2 = globals.camUmax2136;
        real camNearVsp2349#1 = globals.camNearVsp2137;
        real _t234B#5 = -0.5e0;
        real _t234D#1 = IntToReal(ui231C);
        real _t234F#1 = IntToReal(iresU2333);
        real _t2351#3 = 0.5e0;
        real op1_e3_l_62353#1 = RSub(_t234F,_t2351);
        real op1_e3_l_72356#1 = RSub(_t234D,_t234B);
        real op1_e3_l_82359#1 = RSub(op1_e3_l_62353,_t234B);
        real op1_e3_l_9235C#2 = RNeg(camUmax2347);
        real op1_e3_l_10235F#1 = RDiv(op1_e3_l_72356,op1_e3_l_82359);
        real op1_e3_l_112362#1 = RSub(camUmax2347,op1_e3_l_9235C);
        real op1_e3_l_132365#1 = RMul(op1_e3_l_10235F,op1_e3_l_112362);
        real rayU2368#2 = RAdd(op1_e3_l_9235C,op1_e3_l_132365);
        real _t236B#1 = IntToReal(vi231D);
        real _t236D#2 = IntToReal(iresV2335);
        real op1_e3_l_6236F#1 = RSub(_t236D,_t2351);
        real op1_e3_l_72372#2 = RSub(_t236B,_t234B);
        real op1_e3_l_82375#1 = RSub(op1_e3_l_6236F,_t234B);
        real op1_e3_l_92378#3 = RNeg(camVmax2345);
        real op1_e3_l_10237B#1 = RDiv(op1_e3_l_72372,op1_e3_l_82375);
        real op1_e3_l_11237E#2 = RSub(camVmax2345,op1_e3_l_92378);
        real op1_e3_l_132381#1 = RMul(op1_e3_l_10237B,op1_e3_l_11237E);
        real rayV2384#1 = RAdd(op1_e3_l_92378,op1_e3_l_132381);
        real op1_e3_l_232387#1 = RSub(_t236D,_t2351);
        real op1_e3_l_25238A#1 = RSub(op1_e3_l_232387,_t234B);
        real op1_e3_l_27238D#1 = RDiv(op1_e3_l_72372,op1_e3_l_25238A);
        real op1_e3_l_302390#1 = RMul(op1_e3_l_27238D,op1_e3_l_11237E);
        real op1_e3_l_312393#1 = RAdd(op1_e3_l_92378,op1_e3_l_302390);
        tensor[3] op1_e3_l_322396#1 = VScale<3>(rayU2368,camU233F);
        tensor[3] op1_e3_l_332399#1 = VScale<3>(op1_e3_l_312393,camV2341);
        tensor[3] UV239C#5 = VAdd<3>(op1_e3_l_322396,op1_e3_l_332399);
        if camOrtho2331 then goto JOIN23A2 else goto ASSIGN23FC
      JOIN23A2:  preds = [COND239F,ASSIGN23FD]
        tensor[3] _t23A0#1 = phi(UV239C,_t23A1)
        tensor[3] rayOrig23A3#1 = VAdd<3>(camEye232F,_t23A0);
        if camOrtho2331 then goto ASSIGN23A8 else goto ASSIGN23F2
      ASSIGN23A8:  preds = [COND23A6]
        real _t23A7#3 = 0.e0;
        tensor[3] _t23A9#1 = <tensor[3]>[_t23A7,_t23A7,_t23A7];
        goto JOIN23AD
      JOIN23AD:  preds = [ASSIGN23AA,ASSIGN23FA]
        tensor[3] _t23AB#1 = phi(_t23A9,_t23AC)
        tensor[3] rayVec23AE#4 = VAdd<3>(camN233D,_t23AB);
        real op1_e3_l_623B1#1 = VDot<3>(rayVec23AE,rayVec23AE);
        real op1_e3_l_723B4#2 = Sqrt(op1_e3_l_623B1);
        real op1_e3_l_823B7#1 = RMul(rayStep2337,op1_e3_l_723B4);
        real alphaFix23BA#1 = RDiv(op1_e3_l_823B7,refStep2339);
        real realLit23BE#1 = 0.1e1;
        real op1_e3_l_923BD#1 = RDiv(realLit23BE,op1_e3_l_723B4);
        tensor[3] op1_e3_l_1023C2#1 = VScale<3>(op1_e3_l_923BD,rayVec23AE);
        tensor[3] eyeDir23C5#1 = VNeg<3>(op1_e3_l_1023C2);
        real phKa23C8#1 = VIndex<4,0>(phong233B);
        real phKd23CA#1 = VIndex<4,1>(phong233B);
        real phKs23CC#1 = VIndex<4,2>(phong233B);
        real phSp23CE#1 = VIndex<4,3>(phong233B);
        real _t23D0#8 = 0.e0;
        tensor[4] rgba23D2#1 = <tensor[4]>[_t23D0,_t23D0,_t23D0,_t23D0];
        tensor[3] rgb23D4#1 = <tensor[3]>[_t23D0,_t23D0,_t23D0];
        real transp23D6#1 = 0.1e1;
        self.rayU = rayU2368;
        self.rayV = rayV2384;
        self.rayN = camNearVsp2349;
        self.UV = UV239C;
        self.rayOrig = rayOrig23A3;
        self.rayVec = rayVec23AE;
        self.alphaFix = alphaFix23BA;
        self.eyeDir = eyeDir23C5;
        self.phKa = phKa23C8;
        self.phKd = phKd23CA;
        self.phKs = phKs23CC;
        self.phSp = phSp23CE;
        self.rgba = rgba23D2;
        self.raw = _t23D0;
        self.rgb = rgb23D4;
        self.transp = transp23D6;
        return
      ASSIGN23F2:  preds = [COND23A6]
        real realLit23E9#1 = 0.1e1;
        real r23EA#3 = RDiv(realLit23E9,camDist2343);
        real r23EB#1 = TensorIndex<tensor[3],[0]>(UV239C);
        real r23EC#1 = RMul(r23EA,r23EB);
        real r23ED#1 = TensorIndex<tensor[3],[1]>(UV239C);
        real r23EE#1 = RMul(r23EA,r23ED);
        real r23EF#1 = TensorIndex<tensor[3],[2]>(UV239C);
        real r23F0#1 = RMul(r23EA,r23EF);
        tensor[3] _t23AC#1 = <tensor[3]>[r23EC,r23EE,r23F0];
        goto JOIN23AD
      ASSIGN23FC:  preds = [COND239F]
        real _t23FB#3 = 0.e0;
        tensor[3] _t23A1#1 = <tensor[3]>[_t23FB,_t23FB,_t23FB];
        goto JOIN23A2
    end state init
    method update
        ENTRY23FE:  preds = []
          image(IMAGE1D<double[3]>) cmap23FF#17 = globals.cmap2119;
          int _t2401#2 = globals._t213A;
          femData:Space _t2403#168 = globals._tX213B;
          femData:FemFunc _t2405#168 = globals._tXX213C;
          femData:Mesh block240B#1 = globals.block2115;
          real rayStep240D#1 = globals.rayStep2123;
          real transp0240F#1 = globals.transp02125;
          real thick2411#1 = globals.thick2126;
          real fStrTh2413#1 = globals.fStrTh2127;
          real fMaskTh2415#1 = globals.fMaskTh2128;
          real fBias2417#1 = globals.fBias2129;
          real maxAlpha2419#2 = globals.maxAlpha212A;
          tensor[3] mcNear241B#2 = globals.mcNear212D;
          tensor[3] mcFar241D#1 = globals.mcFar212E;
          tensor[2] cminmax241F#2 = globals.cminmax2130;
          real camNearVsp2421#2 = globals.camNearVsp2137;
          real camFarVsp2423#2 = globals.camFarVsp2138;
          tensor[3] litwsp2425#2 = globals.litwsp2139;
          real rayN2427#1 = self.rayN;
          tensor[3] rayOrig2429#2 = self.rayOrig;
          tensor[3] rayVec242B#1 = self.rayVec;
          real alphaFix242D#1 = self.alphaFix;
          tensor[3] eyeDir242F#1 = self.eyeDir;
          real phKa2431#1 = self.phKa;
          real phKd2433#1 = self.phKd;
          real phKs2435#2 = self.phKs;
          real phSp2437#1 = self.phSp;
          tensor[3] rgb2439#1 = self.rgb;
          real transp243B#2 = self.transp;
          real rayN243D#8 = RAdd(rayN2427,rayStep240D);
          bool _t2440#1 = GT<real>(rayN243D,camFarVsp2423);
          if _t2440 then goto SAVE2443 else goto JOIN2445
        SAVE2443:  preds = [COND2442]
          self.rayN = rayN243D;
          stabilize
          goto JOIN2445
        JOIN2445:  preds = [*STABILIZE2444,COND2442]
          tensor[3] op1_e3_l_52446#2 = VScale<3>(rayN243D,rayVec242B);
          tensor[3] pos2449#19 = VAdd<3>(rayOrig2429,op1_e3_l_52446);
          femData:RefCell _t244C#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block240B);
          real _t244E#1 = 0.1e-8;
          bool _t2450#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t244C,pos2449,_t244E);
          if _t2450 then goto ASSIGN2553 else goto ASSIGN5399
        ASSIGN2553:  preds = [COND2452]
          int ilit2454#1 = 84;
          int mulRes2455#84 = IMul(_t2401,ilit2454);
          int addRes2457#1 = mulRes2455;
          int idx2458#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2457);
          int ilit2459#1 = 1;
          int addRes245A#1 = IAdd(mulRes2455,ilit2459);
          int idx245B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245A);
          int ilit245C#1 = 2;
          int addRes245D#1 = IAdd(mulRes2455,ilit245C);
          int idx245E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245D);
          int ilit245F#1 = 3;
          int addRes2460#1 = IAdd(mulRes2455,ilit245F);
          int idx2461#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2460);
          int ilit2462#1 = 4;
          int addRes2463#1 = IAdd(mulRes2455,ilit2462);
          int idx2464#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2463);
          int ilit2465#1 = 5;
          int addRes2466#1 = IAdd(mulRes2455,ilit2465);
          int idx2467#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2466);
          int ilit2468#1 = 6;
          int addRes2469#1 = IAdd(mulRes2455,ilit2468);
          int idx246A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2469);
          int ilit246B#1 = 7;
          int addRes246C#1 = IAdd(mulRes2455,ilit246B);
          int idx246D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246C);
          int ilit246E#1 = 8;
          int addRes246F#1 = IAdd(mulRes2455,ilit246E);
          int idx2470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246F);
          int ilit2471#1 = 9;
          int addRes2472#1 = IAdd(mulRes2455,ilit2471);
          int idx2473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2472);
          int ilit2474#1 = 10;
          int addRes2475#1 = IAdd(mulRes2455,ilit2474);
          int idx2476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2475);
          int ilit2477#1 = 11;
          int addRes2478#1 = IAdd(mulRes2455,ilit2477);
          int idx2479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2478);
          int ilit247A#1 = 12;
          int addRes247B#1 = IAdd(mulRes2455,ilit247A);
          int idx247C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247B);
          int ilit247D#1 = 13;
          int addRes247E#1 = IAdd(mulRes2455,ilit247D);
          int idx247F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247E);
          int ilit2480#1 = 14;
          int addRes2481#1 = IAdd(mulRes2455,ilit2480);
          int idx2482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2481);
          int ilit2483#1 = 15;
          int addRes2484#1 = IAdd(mulRes2455,ilit2483);
          int idx2485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2484);
          int ilit2486#1 = 16;
          int addRes2487#1 = IAdd(mulRes2455,ilit2486);
          int idx2488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2487);
          int ilit2489#1 = 17;
          int addRes248A#1 = IAdd(mulRes2455,ilit2489);
          int idx248B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248A);
          int ilit248C#1 = 18;
          int addRes248D#1 = IAdd(mulRes2455,ilit248C);
          int idx248E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248D);
          int ilit248F#1 = 19;
          int addRes2490#1 = IAdd(mulRes2455,ilit248F);
          int idx2491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2490);
          int ilit2492#1 = 20;
          int addRes2493#1 = IAdd(mulRes2455,ilit2492);
          int idx2494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2493);
          int ilit2495#1 = 21;
          int addRes2496#1 = IAdd(mulRes2455,ilit2495);
          int idx2497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2496);
          int ilit2498#1 = 22;
          int addRes2499#1 = IAdd(mulRes2455,ilit2498);
          int idx249A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2499);
          int ilit249B#1 = 23;
          int addRes249C#1 = IAdd(mulRes2455,ilit249B);
          int idx249D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249C);
          int ilit249E#1 = 24;
          int addRes249F#1 = IAdd(mulRes2455,ilit249E);
          int idx24A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249F);
          int ilit24A1#1 = 25;
          int addRes24A2#1 = IAdd(mulRes2455,ilit24A1);
          int idx24A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A2);
          int ilit24A4#1 = 26;
          int addRes24A5#1 = IAdd(mulRes2455,ilit24A4);
          int idx24A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A5);
          int ilit24A7#1 = 27;
          int addRes24A8#1 = IAdd(mulRes2455,ilit24A7);
          int idx24A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A8);
          int ilit24AA#1 = 28;
          int addRes24AB#1 = IAdd(mulRes2455,ilit24AA);
          int idx24AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AB);
          int ilit24AD#1 = 29;
          int addRes24AE#1 = IAdd(mulRes2455,ilit24AD);
          int idx24AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AE);
          int ilit24B0#1 = 30;
          int addRes24B1#1 = IAdd(mulRes2455,ilit24B0);
          int idx24B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B1);
          int ilit24B3#1 = 31;
          int addRes24B4#1 = IAdd(mulRes2455,ilit24B3);
          int idx24B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B4);
          int ilit24B6#1 = 32;
          int addRes24B7#1 = IAdd(mulRes2455,ilit24B6);
          int idx24B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B7);
          int ilit24B9#1 = 33;
          int addRes24BA#1 = IAdd(mulRes2455,ilit24B9);
          int idx24BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BA);
          int ilit24BC#1 = 34;
          int addRes24BD#1 = IAdd(mulRes2455,ilit24BC);
          int idx24BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BD);
          int ilit24BF#1 = 35;
          int addRes24C0#1 = IAdd(mulRes2455,ilit24BF);
          int idx24C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C0);
          int ilit24C2#1 = 36;
          int addRes24C3#1 = IAdd(mulRes2455,ilit24C2);
          int idx24C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C3);
          int ilit24C5#1 = 37;
          int addRes24C6#1 = IAdd(mulRes2455,ilit24C5);
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C6);
          int ilit24C8#1 = 38;
          int addRes24C9#1 = IAdd(mulRes2455,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C9);
          int ilit24CB#1 = 39;
          int addRes24CC#1 = IAdd(mulRes2455,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CC);
          int ilit24CE#1 = 40;
          int addRes24CF#1 = IAdd(mulRes2455,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CF);
          int ilit24D1#1 = 41;
          int addRes24D2#1 = IAdd(mulRes2455,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D2);
          int ilit24D4#1 = 42;
          int addRes24D5#1 = IAdd(mulRes2455,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D5);
          int ilit24D7#1 = 43;
          int addRes24D8#1 = IAdd(mulRes2455,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D8);
          int ilit24DA#1 = 44;
          int addRes24DB#1 = IAdd(mulRes2455,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DB);
          int ilit24DD#1 = 45;
          int addRes24DE#1 = IAdd(mulRes2455,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DE);
          int ilit24E0#1 = 46;
          int addRes24E1#1 = IAdd(mulRes2455,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E1);
          int ilit24E3#1 = 47;
          int addRes24E4#1 = IAdd(mulRes2455,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E4);
          int ilit24E6#1 = 48;
          int addRes24E7#1 = IAdd(mulRes2455,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E7);
          int ilit24E9#1 = 49;
          int addRes24EA#1 = IAdd(mulRes2455,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24EA);
          int ilit24EC#1 = 50;
          int addRes24ED#1 = IAdd(mulRes2455,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24ED);
          int ilit24EF#1 = 51;
          int addRes24F0#1 = IAdd(mulRes2455,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F0);
          int ilit24F2#1 = 52;
          int addRes24F3#1 = IAdd(mulRes2455,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F3);
          int ilit24F5#1 = 53;
          int addRes24F6#1 = IAdd(mulRes2455,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F6);
          int ilit24F8#1 = 54;
          int addRes24F9#1 = IAdd(mulRes2455,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F9);
          int ilit24FB#1 = 55;
          int addRes24FC#1 = IAdd(mulRes2455,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FC);
          int ilit24FE#1 = 56;
          int addRes24FF#1 = IAdd(mulRes2455,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FF);
          int ilit2501#1 = 57;
          int addRes2502#1 = IAdd(mulRes2455,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2502);
          int ilit2504#1 = 58;
          int addRes2505#1 = IAdd(mulRes2455,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2505);
          int ilit2507#1 = 59;
          int addRes2508#1 = IAdd(mulRes2455,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2508);
          int ilit250A#1 = 60;
          int addRes250B#1 = IAdd(mulRes2455,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250B);
          int ilit250D#1 = 61;
          int addRes250E#1 = IAdd(mulRes2455,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250E);
          int ilit2510#1 = 62;
          int addRes2511#1 = IAdd(mulRes2455,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2511);
          int ilit2513#1 = 63;
          int addRes2514#1 = IAdd(mulRes2455,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2514);
          int ilit2516#1 = 64;
          int addRes2517#1 = IAdd(mulRes2455,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2517);
          int ilit2519#1 = 65;
          int addRes251A#1 = IAdd(mulRes2455,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251A);
          int ilit251C#1 = 66;
          int addRes251D#1 = IAdd(mulRes2455,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251D);
          int ilit251F#1 = 67;
          int addRes2520#1 = IAdd(mulRes2455,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2520);
          int ilit2522#1 = 68;
          int addRes2523#1 = IAdd(mulRes2455,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2523);
          int ilit2525#1 = 69;
          int addRes2526#1 = IAdd(mulRes2455,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2526);
          int ilit2528#1 = 70;
          int addRes2529#1 = IAdd(mulRes2455,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2529);
          int ilit252B#1 = 71;
          int addRes252C#1 = IAdd(mulRes2455,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252C);
          int ilit252E#1 = 72;
          int addRes252F#1 = IAdd(mulRes2455,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252F);
          int ilit2531#1 = 73;
          int addRes2532#1 = IAdd(mulRes2455,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2532);
          int ilit2534#1 = 74;
          int addRes2535#1 = IAdd(mulRes2455,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2535);
          int ilit2537#1 = 75;
          int addRes2538#1 = IAdd(mulRes2455,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2538);
          int ilit253A#1 = 76;
          int addRes253B#1 = IAdd(mulRes2455,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253B);
          int ilit253D#1 = 77;
          int addRes253E#1 = IAdd(mulRes2455,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253E);
          int ilit2540#1 = 78;
          int addRes2541#1 = IAdd(mulRes2455,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2541);
          int ilit2543#1 = 79;
          int addRes2544#1 = IAdd(mulRes2455,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2544);
          int ilit2546#1 = 80;
          int addRes2547#1 = IAdd(mulRes2455,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2547);
          int ilit2549#1 = 81;
          int addRes254A#1 = IAdd(mulRes2455,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254A);
          int ilit254C#1 = 82;
          int addRes254D#1 = IAdd(mulRes2455,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254D);
          int ilit254F#1 = 83;
          int addRes2550#1 = IAdd(mulRes2455,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2550);
          int ilit2654#84 = 1;
          int idx2656#1 = idx2458;
          int mulRes2657#1 = IMul(ilit2654,idx2656);
          int idx2658#1 = idx245B;
          int mulRes2659#1 = IMul(ilit2654,idx2658);
          int idx265B#1 = idx245E;
          int mulRes265C#1 = IMul(ilit2654,idx265B);
          int idx265E#1 = idx2461;
          int mulRes265F#1 = IMul(ilit2654,idx265E);
          int idx2661#1 = idx2464;
          int mulRes2662#1 = IMul(ilit2654,idx2661);
          int idx2664#1 = idx2467;
          int mulRes2665#1 = IMul(ilit2654,idx2664);
          int idx2667#1 = idx246A;
          int mulRes2668#1 = IMul(ilit2654,idx2667);
          int idx266A#1 = idx246D;
          int mulRes266B#1 = IMul(ilit2654,idx266A);
          int idx266D#1 = idx2470;
          int mulRes266E#1 = IMul(ilit2654,idx266D);
          int idx2670#1 = idx2473;
          int mulRes2671#1 = IMul(ilit2654,idx2670);
          int idx2673#1 = idx2476;
          int mulRes2674#1 = IMul(ilit2654,idx2673);
          int idx2676#1 = idx2479;
          int mulRes2677#1 = IMul(ilit2654,idx2676);
          int idx2679#1 = idx247C;
          int mulRes267A#1 = IMul(ilit2654,idx2679);
          int idx267C#1 = idx247F;
          int mulRes267D#1 = IMul(ilit2654,idx267C);
          int idx267F#1 = idx2482;
          int mulRes2680#1 = IMul(ilit2654,idx267F);
          int idx2682#1 = idx2485;
          int mulRes2683#1 = IMul(ilit2654,idx2682);
          int idx2685#1 = idx2488;
          int mulRes2686#1 = IMul(ilit2654,idx2685);
          int idx2688#1 = idx248B;
          int mulRes2689#1 = IMul(ilit2654,idx2688);
          int idx268B#1 = idx248E;
          int mulRes268C#1 = IMul(ilit2654,idx268B);
          int idx268E#1 = idx2491;
          int mulRes268F#1 = IMul(ilit2654,idx268E);
          int idx2691#1 = idx2494;
          int mulRes2692#1 = IMul(ilit2654,idx2691);
          int idx2694#1 = idx2497;
          int mulRes2695#1 = IMul(ilit2654,idx2694);
          int idx2697#1 = idx249A;
          int mulRes2698#1 = IMul(ilit2654,idx2697);
          int idx269A#1 = idx249D;
          int mulRes269B#1 = IMul(ilit2654,idx269A);
          int idx269D#1 = idx24A0;
          int mulRes269E#1 = IMul(ilit2654,idx269D);
          int idx26A0#1 = idx24A3;
          int mulRes26A1#1 = IMul(ilit2654,idx26A0);
          int idx26A3#1 = idx24A6;
          int mulRes26A4#1 = IMul(ilit2654,idx26A3);
          int idx26A6#1 = idx24A9;
          int mulRes26A7#1 = IMul(ilit2654,idx26A6);
          int idx26A9#1 = idx24AC;
          int mulRes26AA#1 = IMul(ilit2654,idx26A9);
          int idx26AC#1 = idx24AF;
          int mulRes26AD#1 = IMul(ilit2654,idx26AC);
          int idx26AF#1 = idx24B2;
          int mulRes26B0#1 = IMul(ilit2654,idx26AF);
          int idx26B2#1 = idx24B5;
          int mulRes26B3#1 = IMul(ilit2654,idx26B2);
          int idx26B5#1 = idx24B8;
          int mulRes26B6#1 = IMul(ilit2654,idx26B5);
          int idx26B8#1 = idx24BB;
          int mulRes26B9#1 = IMul(ilit2654,idx26B8);
          int idx26BB#1 = idx24BE;
          int mulRes26BC#1 = IMul(ilit2654,idx26BB);
          int idx26BE#1 = idx24C1;
          int mulRes26BF#1 = IMul(ilit2654,idx26BE);
          int idx26C1#1 = idx24C4;
          int mulRes26C2#1 = IMul(ilit2654,idx26C1);
          int idx26C4#1 = idx24C7;
          int mulRes26C5#1 = IMul(ilit2654,idx26C4);
          int idx26C7#1 = idx24CA;
          int mulRes26C8#1 = IMul(ilit2654,idx26C7);
          int idx26CA#1 = idx24CD;
          int mulRes26CB#1 = IMul(ilit2654,idx26CA);
          int idx26CD#1 = idx24D0;
          int mulRes26CE#1 = IMul(ilit2654,idx26CD);
          int idx26D0#1 = idx24D3;
          int mulRes26D1#1 = IMul(ilit2654,idx26D0);
          int idx26D3#1 = idx24D6;
          int mulRes26D4#1 = IMul(ilit2654,idx26D3);
          int idx26D6#1 = idx24D9;
          int mulRes26D7#1 = IMul(ilit2654,idx26D6);
          int idx26D9#1 = idx24DC;
          int mulRes26DA#1 = IMul(ilit2654,idx26D9);
          int idx26DC#1 = idx24DF;
          int mulRes26DD#1 = IMul(ilit2654,idx26DC);
          int idx26DF#1 = idx24E2;
          int mulRes26E0#1 = IMul(ilit2654,idx26DF);
          int idx26E2#1 = idx24E5;
          int mulRes26E3#1 = IMul(ilit2654,idx26E2);
          int idx26E5#1 = idx24E8;
          int mulRes26E6#1 = IMul(ilit2654,idx26E5);
          int idx26E8#1 = idx24EB;
          int mulRes26E9#1 = IMul(ilit2654,idx26E8);
          int idx26EB#1 = idx24EE;
          int mulRes26EC#1 = IMul(ilit2654,idx26EB);
          int idx26EE#1 = idx24F1;
          int mulRes26EF#1 = IMul(ilit2654,idx26EE);
          int idx26F1#1 = idx24F4;
          int mulRes26F2#1 = IMul(ilit2654,idx26F1);
          int idx26F4#1 = idx24F7;
          int mulRes26F5#1 = IMul(ilit2654,idx26F4);
          int idx26F7#1 = idx24FA;
          int mulRes26F8#1 = IMul(ilit2654,idx26F7);
          int idx26FA#1 = idx24FD;
          int mulRes26FB#1 = IMul(ilit2654,idx26FA);
          int idx26FD#1 = idx2500;
          int mulRes26FE#1 = IMul(ilit2654,idx26FD);
          int idx2700#1 = idx2503;
          int mulRes2701#1 = IMul(ilit2654,idx2700);
          int idx2703#1 = idx2506;
          int mulRes2704#1 = IMul(ilit2654,idx2703);
          int idx2706#1 = idx2509;
          int mulRes2707#1 = IMul(ilit2654,idx2706);
          int idx2709#1 = idx250C;
          int mulRes270A#1 = IMul(ilit2654,idx2709);
          int idx270C#1 = idx250F;
          int mulRes270D#1 = IMul(ilit2654,idx270C);
          int idx270F#1 = idx2512;
          int mulRes2710#1 = IMul(ilit2654,idx270F);
          int idx2712#1 = idx2515;
          int mulRes2713#1 = IMul(ilit2654,idx2712);
          int idx2715#1 = idx2518;
          int mulRes2716#1 = IMul(ilit2654,idx2715);
          int idx2718#1 = idx251B;
          int mulRes2719#1 = IMul(ilit2654,idx2718);
          int idx271B#1 = idx251E;
          int mulRes271C#1 = IMul(ilit2654,idx271B);
          int idx271E#1 = idx2521;
          int mulRes271F#1 = IMul(ilit2654,idx271E);
          int idx2721#1 = idx2524;
          int mulRes2722#1 = IMul(ilit2654,idx2721);
          int idx2724#1 = idx2527;
          int mulRes2725#1 = IMul(ilit2654,idx2724);
          int idx2727#1 = idx252A;
          int mulRes2728#1 = IMul(ilit2654,idx2727);
          int idx272A#1 = idx252D;
          int mulRes272B#1 = IMul(ilit2654,idx272A);
          int idx272D#1 = idx2530;
          int mulRes272E#1 = IMul(ilit2654,idx272D);
          int idx2730#1 = idx2533;
          int mulRes2731#1 = IMul(ilit2654,idx2730);
          int idx2733#1 = idx2536;
          int mulRes2734#1 = IMul(ilit2654,idx2733);
          int idx2736#1 = idx2539;
          int mulRes2737#1 = IMul(ilit2654,idx2736);
          int idx2739#1 = idx253C;
          int mulRes273A#1 = IMul(ilit2654,idx2739);
          int idx273C#1 = idx253F;
          int mulRes273D#1 = IMul(ilit2654,idx273C);
          int idx273F#1 = idx2542;
          int mulRes2740#1 = IMul(ilit2654,idx273F);
          int idx2742#1 = idx2545;
          int mulRes2743#1 = IMul(ilit2654,idx2742);
          int idx2745#1 = idx2548;
          int mulRes2746#1 = IMul(ilit2654,idx2745);
          int idx2748#1 = idx254B;
          int mulRes2749#1 = IMul(ilit2654,idx2748);
          int idx274B#1 = idx254E;
          int mulRes274C#1 = IMul(ilit2654,idx274B);
          int idx274E#1 = idx2551;
          int mulRes274F#1 = IMul(ilit2654,idx274E);
          real dof2750#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2657);
          real dof2751#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2659);
          real dof2752#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265C);
          real dof2753#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265F);
          real dof2754#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2662);
          real dof2755#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2665);
          real dof2756#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2668);
          real dof2757#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266B);
          real dof2758#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266E);
          real dof2759#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2671);
          real dof275A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2674);
          real dof275B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2677);
          real dof275C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267A);
          real dof275D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267D);
          real dof275E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2680);
          real dof275F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2683);
          real dof2760#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2686);
          real dof2761#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2689);
          real dof2762#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268C);
          real dof2763#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268F);
          real dof2764#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2692);
          real dof2765#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2695);
          real dof2766#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2698);
          real dof2767#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269B);
          real dof2768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269E);
          real dof2769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A1);
          real dof276A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A4);
          real dof276B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A7);
          real dof276C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AA);
          real dof276D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AD);
          real dof276E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B0);
          real dof276F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B3);
          real dof2770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B6);
          real dof2771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B9);
          real dof2772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BC);
          real dof2773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BF);
          real dof2774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C2);
          real dof2775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C5);
          real dof2776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C8);
          real dof2777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CB);
          real dof2778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CE);
          real dof2779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D1);
          real dof277A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D4);
          real dof277B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D7);
          real dof277C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DA);
          real dof277D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DD);
          real dof277E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E0);
          real dof277F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E3);
          real dof2780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E6);
          real dof2781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E9);
          real dof2782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EC);
          real dof2783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EF);
          real dof2784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F2);
          real dof2785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F5);
          real dof2786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F8);
          real dof2787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FB);
          real dof2788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FE);
          real dof2789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2701);
          real dof278A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2704);
          real dof278B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2707);
          real dof278C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270A);
          real dof278D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270D);
          real dof278E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2710);
          real dof278F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2713);
          real dof2790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2716);
          real dof2791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2719);
          real dof2792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271C);
          real dof2793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271F);
          real dof2794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2722);
          real dof2795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2725);
          real dof2796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2728);
          real dof2797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272B);
          real dof2798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272E);
          real dof2799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2731);
          real dof279A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2734);
          real dof279B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2737);
          real dof279C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273A);
          real dof279D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273D);
          real dof279E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2740);
          real dof279F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2743);
          real dof27A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2746);
          real dof27A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2749);
          real dof27A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274C);
          real dof27A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274F);
          tensor[84] dofs27A4#1 = <tensor[84]>[dof2750,dof2751,dof2752,dof2753,dof2754,dof2755,dof2756,dof2757,dof2758,dof2759,dof275A,dof275B,dof275C,dof275D,dof275E,dof275F,dof2760,dof2761,dof2762,dof2763,dof2764,dof2765,dof2766,dof2767,dof2768,dof2769,dof276A,dof276B,dof276C,dof276D,dof276E,dof276F,dof2770,dof2771,dof2772,dof2773,dof2774,dof2775,dof2776,dof2777,dof2778,dof2779,dof277A,dof277B,dof277C,dof277D,dof277E,dof277F,dof2780,dof2781,dof2782,dof2783,dof2784,dof2785,dof2786,dof2787,dof2788,dof2789,dof278A,dof278B,dof278C,dof278D,dof278E,dof278F,dof2790,dof2791,dof2792,dof2793,dof2794,dof2795,dof2796,dof2797,dof2798,dof2799,dof279A,dof279B,dof279C,dof279D,dof279E,dof279F,dof27A0,dof27A1,dof27A2,dof27A3];
          tensor[84] femDofs2653#39 = dofs27A4;
          real varAcc28F8#4 = VIndex<3,0>(pos2449);
          real varAcc28F9#4 = VIndex<3,1>(pos2449);
          real varAcc28FA#4 = VIndex<3,2>(pos2449);
          real basisEval28FB#294 = 0.e0;
          real coeff28FC#31 = 0.2e1;
          real one28FD#38 = 0.1e1;
          real prod28FE#5 = RMul(one28FD,one28FD);
          real prod28FF#2 = RMul(one28FD,prod28FE);
          real basisEval2900#3 = RMul(coeff28FC,prod28FF);
          real iden2901#5 = varAcc28FA;
          real prod2902#4 = RMul(one28FD,iden2901);
          real prod2903#3 = RMul(one28FD,prod2902);
          real basisEval2904#4 = RMul(coeff28FC,prod2903);
          real iden2905#5 = varAcc28F9;
          real prod2906#4 = RMul(iden2905,one28FD);
          real prod2907#3 = RMul(one28FD,prod2906);
          real basisEval2908#4 = RMul(coeff28FC,prod2907);
          real coeff2909#22 = 0.6e1;
          real iden290A#11 = varAcc28F8;
          real prod290B#3 = RMul(iden290A,prod28FE);
          real basisEval290C#1 = RMul(coeff2909,prod290B);
          real prod2290D#4 = RMul(iden2901,varAcc28FA);
          real prod290E#3 = RMul(one28FD,prod2290D);
          real prod290F#4 = RMul(one28FD,prod290E);
          real basisEval2910#2 = RMul(coeff28FC,prod290F);
          real prod2911#3 = RMul(iden2905,iden2901);
          real prod2912#3 = RMul(one28FD,prod2911);
          real basisEval2913#3 = RMul(coeff28FC,prod2912);
          real prod22914#4 = RMul(iden2905,varAcc28F9);
          real prod2915#3 = RMul(prod22914,one28FD);
          real prod2916#4 = RMul(one28FD,prod2915);
          real basisEval2917#2 = RMul(coeff28FC,prod2916);
          real prod2918#3 = RMul(iden290A,prod2902);
          real basisEval2919#2 = RMul(coeff2909,prod2918);
          real prod291A#3 = RMul(iden290A,prod2906);
          real basisEval291B#2 = RMul(coeff2909,prod291A);
          real coeff291C#15 = 0.12e2;
          real prod2291D#7 = RMul(iden290A,varAcc28F8);
          real prod291E#4 = RMul(prod2291D,prod28FE);
          real basisEval291F#1 = RMul(coeff291C,prod291E);
          real prod32920#3 = RMul(prod2290D,varAcc28FA);
          real prod2921#2 = RMul(one28FD,prod32920);
          real prod2922#4 = RMul(one28FD,prod2921);
          real basisEval2923#2 = RMul(coeff28FC,prod2922);
          real prod2924#2 = RMul(iden2905,prod2290D);
          real prod2925#4 = RMul(one28FD,prod2924);
          real basisEval2926#2 = RMul(coeff28FC,prod2925);
          real prod2927#2 = RMul(prod22914,iden2901);
          real prod2928#4 = RMul(one28FD,prod2927);
          real basisEval2929#2 = RMul(coeff28FC,prod2928);
          real prod3292A#3 = RMul(prod22914,varAcc28F9);
          real prod292B#2 = RMul(prod3292A,one28FD);
          real prod292C#4 = RMul(one28FD,prod292B);
          real basisEval292D#2 = RMul(coeff28FC,prod292C);
          real prod292E#4 = RMul(iden290A,prod290E);
          real basisEval292F#2 = RMul(coeff2909,prod292E);
          real prod2930#2 = RMul(iden290A,prod2911);
          real basisEval2931#3 = RMul(coeff2909,prod2930);
          real prod2932#4 = RMul(iden290A,prod2915);
          real basisEval2933#2 = RMul(coeff2909,prod2932);
          real prod2934#4 = RMul(prod2291D,prod2902);
          real basisEval2935#1 = RMul(coeff291C,prod2934);
          real prod2936#4 = RMul(prod2291D,prod2906);
          real basisEval2937#1 = RMul(coeff291C,prod2936);
          real coeff2938#9 = 0.20e2;
          real prod32939#4 = RMul(prod2291D,varAcc28F8);
          real prod293A#4 = RMul(prod32939,prod28FE);
          real basisEval293B#1 = RMul(coeff2938,prod293A);
          real prod4293C#1 = RMul(prod32920,varAcc28FA);
          real prod293D#1 = RMul(one28FD,prod4293C);
          real prod293E#4 = RMul(one28FD,prod293D);
          real basisEval293F#2 = RMul(coeff28FC,prod293E);
          real prod2940#1 = RMul(iden2905,prod32920);
          real prod2941#5 = RMul(one28FD,prod2940);
          real basisEval2942#2 = RMul(coeff28FC,prod2941);
          real prod2943#1 = RMul(prod22914,prod2290D);
          real prod2944#4 = RMul(one28FD,prod2943);
          real basisEval2945#1 = RMul(coeff28FC,prod2944);
          real prod2946#1 = RMul(prod3292A,iden2901);
          real prod2947#5 = RMul(one28FD,prod2946);
          real basisEval2948#2 = RMul(coeff28FC,prod2947);
          real prod42949#1 = RMul(prod3292A,varAcc28F9);
          real prod294A#1 = RMul(prod42949,one28FD);
          real prod294B#4 = RMul(one28FD,prod294A);
          real basisEval294C#2 = RMul(coeff28FC,prod294B);
          real prod294D#5 = RMul(iden290A,prod2921);
          real basisEval294E#1 = RMul(coeff2909,prod294D);
          real prod294F#3 = RMul(iden290A,prod2924);
          real basisEval2950#4 = RMul(coeff2909,prod294F);
          real prod2951#3 = RMul(iden290A,prod2927);
          real basisEval2952#4 = RMul(coeff2909,prod2951);
          real prod2953#5 = RMul(iden290A,prod292B);
          real basisEval2954#1 = RMul(coeff2909,prod2953);
          real prod2955#4 = RMul(prod2291D,prod290E);
          real basisEval2956#2 = RMul(coeff291C,prod2955);
          real prod2957#3 = RMul(prod2291D,prod2911);
          real basisEval2958#1 = RMul(coeff291C,prod2957);
          real prod2959#4 = RMul(prod2291D,prod2915);
          real basisEval295A#2 = RMul(coeff291C,prod2959);
          real prod295B#5 = RMul(prod32939,prod2902);
          real basisEval295C#1 = RMul(coeff2938,prod295B);
          real prod295D#5 = RMul(prod32939,prod2906);
          real basisEval295E#1 = RMul(coeff2938,prod295D);
          real coeff295F#3 = 0.30e2;
          real prod42960#1 = RMul(prod32939,varAcc28F8);
          real prod2961#4 = RMul(prod42960,prod28FE);
          real basisEval2962#1 = RMul(coeff295F,prod2961);
          real basisEval2963#3 = RMul(one28FD,prod28FF);
          real basisEval2964#1 = RMul(one28FD,prod2903);
          real basisEval2965#4 = RMul(coeff28FC,prod290B);
          real basisEval2966#1 = RMul(one28FD,prod290F);
          real coeff2967#12 = 0.3e1;
          real basisEval2968#2 = RMul(coeff2967,prod2916);
          real basisEval2969#3 = RMul(coeff28FC,prod2918);
          real coeff296A#16 = 0.4e1;
          real basisEval296B#1 = RMul(coeff296A,prod291A);
          real basisEval296C#2 = RMul(coeff2967,prod291E);
          real basisEval296D#1 = RMul(one28FD,prod2922);
          real basisEval296E#1 = RMul(coeff2967,prod2928);
          real basisEval296F#2 = RMul(coeff296A,prod292C);
          real basisEval2970#2 = RMul(coeff28FC,prod292E);
          real basisEval2971#3 = RMul(coeff296A,prod2930);
          real basisEval2972#1 = RMul(coeff2967,prod2934);
          real basisEval2973#2 = RMul(coeff2909,prod2936);
          real basisEval2974#2 = RMul(coeff296A,prod293A);
          real basisEval2975#1 = RMul(one28FD,prod293E);
          real basisEval2976#2 = RMul(coeff2967,prod2944);
          real basisEval2977#1 = RMul(coeff296A,prod2947);
          real coeff2978#3 = 0.5e1;
          real basisEval2979#2 = RMul(coeff2978,prod294B);
          real basisEval297A#2 = RMul(coeff28FC,prod294D);
          real basisEval297B#1 = RMul(coeff296A,prod294F);
          real coeff297C#6 = 0.8e1;
          real basisEval297D#1 = RMul(coeff297C,prod2953);
          real basisEval297E#2 = RMul(coeff2967,prod2955);
          real basisEval297F#4 = RMul(coeff2909,prod2957);
          real coeff2980#3 = 0.9e1;
          real basisEval2981#1 = RMul(coeff2980,prod2959);
          real basisEval2982#1 = RMul(coeff296A,prod295B);
          real basisEval2983#1 = RMul(coeff297C,prod295D);
          real basisEval2984#2 = RMul(coeff2978,prod2961);
          real basisEval2985#1 = RMul(one28FD,prod2907);
          real basisEval2986#2 = RMul(coeff2967,prod290F);
          real basisEval2987#1 = RMul(one28FD,prod2916);
          real basisEval2988#1 = RMul(coeff296A,prod2918);
          real basisEval2989#3 = RMul(coeff28FC,prod291A);
          real basisEval298A#2 = RMul(coeff296A,prod2922);
          real basisEval298B#1 = RMul(coeff2967,prod2925);
          real basisEval298C#1 = RMul(one28FD,prod292C);
          real basisEval298D#2 = RMul(coeff28FC,prod2932);
          real basisEval298E#2 = RMul(coeff2909,prod2934);
          real basisEval298F#1 = RMul(coeff2967,prod2936);
          real basisEval2990#2 = RMul(coeff2978,prod293E);
          real basisEval2991#1 = RMul(coeff296A,prod2941);
          real basisEval2992#1 = RMul(one28FD,prod294B);
          real basisEval2993#1 = RMul(coeff297C,prod294D);
          real basisEval2994#1 = RMul(coeff296A,prod2951);
          real basisEval2995#2 = RMul(coeff28FC,prod2953);
          real basisEval2996#1 = RMul(coeff2980,prod2955);
          real basisEval2997#2 = RMul(coeff2967,prod2959);
          real basisEval2998#1 = RMul(coeff297C,prod295B);
          real basisEval2999#1 = RMul(coeff296A,prod295D);
          real basisEval299A#1 = RMul(coeff2909,prod2907);
          real basisEval299B#2 = RMul(coeff2909,prod2912);
          real basisEval299C#1 = RMul(coeff291C,prod2916);
          real basisEval299D#2 = RMul(coeff28FC,prod291E);
          real basisEval299E#2 = RMul(coeff2909,prod2925);
          real basisEval299F#1 = RMul(coeff291C,prod2928);
          real basisEval29A0#1 = RMul(coeff2938,prod292C);
          real basisEval29A1#1 = RMul(coeff291C,prod2932);
          real basisEval29A2#2 = RMul(coeff28FC,prod2934);
          real basisEval29A3#2 = RMul(coeff28FC,prod293A);
          real basisEval29A4#1 = RMul(coeff2909,prod2941);
          real basisEval29A5#2 = RMul(coeff291C,prod2944);
          real basisEval29A6#1 = RMul(coeff2938,prod2947);
          real basisEval29A7#1 = RMul(coeff295F,prod294B);
          real basisEval29A8#1 = RMul(coeff291C,prod2951);
          real basisEval29A9#1 = RMul(coeff2938,prod2953);
          real basisEval29AA#1 = RMul(coeff28FC,prod2955);
          real basisEval29AB#2 = RMul(coeff28FC,prod295B);
          real basisEval29AC#1 = RMul(coeff2909,prod295D);
          real basisEval29AD#2 = RMul(coeff28FC,prod2961);
          real basisEval29AE#1 = RMul(one28FD,prod290B);
          real basisEval29AF#1 = RMul(coeff296A,prod2912);
          real basisEval29B0#1 = RMul(one28FD,prod291E);
          real basisEval29B1#2 = RMul(coeff2909,prod2928);
          real basisEval29B2#1 = RMul(coeff2967,prod292E);
          real basisEval29B3#1 = RMul(coeff2967,prod2932);
          real basisEval29B4#2 = RMul(coeff28FC,prod2936);
          real basisEval29B5#1 = RMul(one28FD,prod293A);
          real basisEval29B6#1 = RMul(coeff297C,prod2941);
          real basisEval29B7#1 = RMul(coeff2980,prod2944);
          real basisEval29B8#1 = RMul(coeff297C,prod2947);
          real basisEval29B9#1 = RMul(coeff296A,prod294D);
          real basisEval29BA#1 = RMul(coeff296A,prod2953);
          real basisEval29BB#1 = RMul(coeff296A,prod2957);
          real basisEval29BC#2 = RMul(coeff28FC,prod295D);
          real basisEval29BD#1 = RMul(one28FD,prod2961);
          real basisEval29BE#1 = RMul(coeff2909,prod2903);
          real basisEval29BF#1 = RMul(coeff291C,prod290F);
          real basisEval29C0#1 = RMul(coeff2938,prod2922);
          real basisEval29C1#1 = RMul(coeff291C,prod2925);
          real basisEval29C2#1 = RMul(coeff291C,prod292E);
          real basisEval29C3#1 = RMul(coeff295F,prod293E);
          real basisEval29C4#1 = RMul(coeff2938,prod2941);
          real basisEval29C5#1 = RMul(coeff2909,prod2947);
          real basisEval29C6#1 = RMul(coeff2938,prod294D);
          real basisEval29C7#1 = RMul(coeff291C,prod294F);
          real basisEval29C8#1 = RMul(coeff28FC,prod2959);
          real basisEval29C9#1 = RMul(coeff2909,prod295B);
          tensor[84] intermediateCons29CA#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval2913,basisEval2917,basisEval2919,basisEval291B,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval2926,basisEval2929,basisEval292D,basisEval292F,basisEval2931,basisEval2933,basisEval2935,basisEval2937,basisEval293B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval2942,basisEval2945,basisEval2948,basisEval294C,basisEval294E,basisEval2950,basisEval2952,basisEval2954,basisEval2956,basisEval2958,basisEval295A,basisEval295C,basisEval295E,basisEval2962];
          tensor[84] intermediateCons29CB#2 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2964,basisEval2908,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2966,basisEval2913,basisEval2968,basisEval28FB,basisEval2969,basisEval296B,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval296D,basisEval2926,basisEval296E,basisEval296F,basisEval28FB,basisEval2970,basisEval2971,basisEval2933,basisEval28FB,basisEval2972,basisEval2973,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2975,basisEval2942,basisEval2976,basisEval2977,basisEval2979,basisEval28FB,basisEval297A,basisEval297B,basisEval2952,basisEval297D,basisEval28FB,basisEval297E,basisEval297F,basisEval2981,basisEval28FB,basisEval2982,basisEval2983,basisEval28FB,basisEval2984,basisEval28FB];
          tensor[84] intermediateCons29CC#2 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2985,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval2913,basisEval2987,basisEval28FB,basisEval2988,basisEval2989,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval298B,basisEval2929,basisEval298C,basisEval28FB,basisEval292F,basisEval2971,basisEval298D,basisEval28FB,basisEval298E,basisEval298F,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval2991,basisEval2976,basisEval2948,basisEval2992,basisEval28FB,basisEval2993,basisEval2950,basisEval2994,basisEval2995,basisEval28FB,basisEval2996,basisEval297F,basisEval2997,basisEval28FB,basisEval2998,basisEval2999,basisEval28FB,basisEval2984,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CD#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval299A,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval299B,basisEval299C,basisEval28FB,basisEval28FB,basisEval2969,basisEval291B,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval299E,basisEval299F,basisEval29A0,basisEval28FB,basisEval28FB,basisEval2970,basisEval2931,basisEval29A1,basisEval28FB,basisEval28FB,basisEval29A2,basisEval2973,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval29A4,basisEval29A5,basisEval29A6,basisEval29A7,basisEval28FB,basisEval28FB,basisEval297A,basisEval2950,basisEval29A8,basisEval29A9,basisEval28FB,basisEval28FB,basisEval29AA,basisEval297F,basisEval295A,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29AC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CE#2 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval28FB,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval29AF,basisEval2968,basisEval28FB,basisEval28FB,basisEval2969,basisEval2989,basisEval28FB,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval299E,basisEval29B1,basisEval296F,basisEval28FB,basisEval28FB,basisEval29B2,basisEval2971,basisEval29B3,basisEval28FB,basisEval28FB,basisEval29A2,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval29B6,basisEval29B7,basisEval29B8,basisEval2979,basisEval28FB,basisEval28FB,basisEval29B9,basisEval2950,basisEval2952,basisEval29BA,basisEval28FB,basisEval28FB,basisEval297E,basisEval29BB,basisEval2997,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CF#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2908,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval299B,basisEval2917,basisEval28FB,basisEval28FB,basisEval2919,basisEval2989,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval29C1,basisEval29B1,basisEval292D,basisEval28FB,basisEval28FB,basisEval29C2,basisEval2931,basisEval298D,basisEval28FB,basisEval28FB,basisEval298E,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C3,basisEval29C4,basisEval29A5,basisEval29C5,basisEval294C,basisEval28FB,basisEval28FB,basisEval29C6,basisEval29C7,basisEval2952,basisEval2995,basisEval28FB,basisEval28FB,basisEval2956,basisEval297F,basisEval29C8,basisEval28FB,basisEval28FB,basisEval29C9,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] projParam2AB2#1 = intermediateCons29CA;
          real vdot2AB3#3 = VDot<84>(femDofs2653,projParam2AB2);
          tensor[84] projParam2AB4#1 = intermediateCons29CB;
          real vdot2AB5#3 = VDot<84>(femDofs2653,projParam2AB4);
          tensor[84] projParam2AB6#1 = intermediateCons29CC;
          real vdot2AB7#3 = VDot<84>(femDofs2653,projParam2AB6);
          tensor[3] tensor2AB8#2 = <tensor[3]>[vdot2AB3,vdot2AB5,vdot2AB7];
          tensor[84] projParam2AB9#1 = intermediateCons29CB;
          real vdot2ABA#3 = VDot<84>(femDofs2653,projParam2AB9);
          tensor[84] projParam2ABB#1 = intermediateCons29CD;
          real vdot2ABC#3 = VDot<84>(femDofs2653,projParam2ABB);
          tensor[84] projParam2ABD#1 = intermediateCons29CE;
          real vdot2ABE#3 = VDot<84>(femDofs2653,projParam2ABD);
          tensor[3] tensor2ABF#2 = <tensor[3]>[vdot2ABA,vdot2ABC,vdot2ABE];
          tensor[84] projParam2AC0#1 = intermediateCons29CC;
          real vdot2AC1#3 = VDot<84>(femDofs2653,projParam2AC0);
          tensor[84] projParam2AC2#1 = intermediateCons29CE;
          real vdot2AC3#3 = VDot<84>(femDofs2653,projParam2AC2);
          tensor[84] projParam2AC4#1 = intermediateCons29CF;
          real vdot2AC5#3 = VDot<84>(femDofs2653,projParam2AC4);
          tensor[3] tensor2AC6#2 = <tensor[3]>[vdot2AC1,vdot2AC3,vdot2AC5];
          tensor[3,3] _t2AB1#1 = <tensor[3,3]>[tensor2AB8,tensor2ABF,tensor2AC6];
          real[3] _t2ADE#1 = EigenVals3x3(_t2AB1);
          int _t2AE0#1 = 1;
          real _t2AE2#1 = Subscript<real[3]>(_t2ADE,_t2AE0);
          real varAcc2AE5#5 = VIndex<3,0>(pos2449);
          real varAcc2AE6#5 = VIndex<3,1>(pos2449);
          real varAcc2AE7#5 = VIndex<3,2>(pos2449);
          real basisEval2AE8#84 = 0.e0;
          real coeff2AE9#79 = 0.1e1;
          real prod2AEA#6 = RMul(coeff2AE9,coeff2AE9);
          real prod2AEB#1 = RMul(coeff2AE9,prod2AEA);
          real basisEval2AEC#3 = RMul(coeff2AE9,prod2AEB);
          real iden2AED#6 = varAcc2AE7;
          real prod2AEE#5 = RMul(coeff2AE9,iden2AED);
          real prod2AEF#2 = RMul(coeff2AE9,prod2AEE);
          real basisEval2AF0#2 = RMul(coeff2AE9,prod2AEF);
          real iden2AF1#6 = varAcc2AE6;
          real prod2AF2#5 = RMul(iden2AF1,coeff2AE9);
          real prod2AF3#2 = RMul(coeff2AE9,prod2AF2);
          real basisEval2AF4#2 = RMul(coeff2AE9,prod2AF3);
          real coeff2AF5#34 = 0.2e1;
          real iden2AF6#16 = varAcc2AE5;
          real prod2AF7#2 = RMul(iden2AF6,prod2AEA);
          real basisEval2AF8#1 = RMul(coeff2AF5,prod2AF7);
          real prod22AF9#5 = RMul(iden2AED,varAcc2AE7);
          real prod2AFA#4 = RMul(coeff2AE9,prod22AF9);
          real prod2AFB#2 = RMul(coeff2AE9,prod2AFA);
          real basisEval2AFC#2 = RMul(coeff2AE9,prod2AFB);
          real prod2AFD#4 = RMul(iden2AF1,iden2AED);
          real prod2AFE#2 = RMul(coeff2AE9,prod2AFD);
          real basisEval2AFF#1 = RMul(coeff2AE9,prod2AFE);
          real prod22B00#5 = RMul(iden2AF1,varAcc2AE6);
          real prod2B01#4 = RMul(prod22B00,coeff2AE9);
          real prod2B02#2 = RMul(coeff2AE9,prod2B01);
          real basisEval2B03#2 = RMul(coeff2AE9,prod2B02);
          real prod2B04#2 = RMul(iden2AF6,prod2AEE);
          real basisEval2B05#2 = RMul(coeff2AF5,prod2B04);
          real prod2B06#2 = RMul(iden2AF6,prod2AF2);
          real basisEval2B07#2 = RMul(coeff2AF5,prod2B06);
          real coeff2B08#24 = 0.3e1;
          real prod22B09#11 = RMul(iden2AF6,varAcc2AE5);
          real prod2B0A#2 = RMul(prod22B09,prod2AEA);
          real basisEval2B0B#1 = RMul(coeff2B08,prod2B0A);
          real prod32B0C#4 = RMul(prod22AF9,varAcc2AE7);
          real prod2B0D#3 = RMul(coeff2AE9,prod32B0C);
          real prod2B0E#2 = RMul(coeff2AE9,prod2B0D);
          real basisEval2B0F#2 = RMul(coeff2AE9,prod2B0E);
          real prod2B10#3 = RMul(iden2AF1,prod22AF9);
          real prod2B11#3 = RMul(coeff2AE9,prod2B10);
          real basisEval2B12#1 = RMul(coeff2AE9,prod2B11);
          real prod2B13#3 = RMul(prod22B00,iden2AED);
          real prod2B14#3 = RMul(coeff2AE9,prod2B13);
          real basisEval2B15#1 = RMul(coeff2AE9,prod2B14);
          real prod32B16#4 = RMul(prod22B00,varAcc2AE6);
          real prod2B17#3 = RMul(prod32B16,coeff2AE9);
          real prod2B18#2 = RMul(coeff2AE9,prod2B17);
          real basisEval2B19#2 = RMul(coeff2AE9,prod2B18);
          real prod2B1A#3 = RMul(iden2AF6,prod2AFA);
          real basisEval2B1B#1 = RMul(coeff2AF5,prod2B1A);
          real prod2B1C#1 = RMul(iden2AF6,prod2AFD);
          real basisEval2B1D#3 = RMul(coeff2AF5,prod2B1C);
          real prod2B1E#3 = RMul(iden2AF6,prod2B01);
          real basisEval2B1F#1 = RMul(coeff2AF5,prod2B1E);
          real prod2B20#3 = RMul(prod22B09,prod2AEE);
          real basisEval2B21#1 = RMul(coeff2B08,prod2B20);
          real prod2B22#3 = RMul(prod22B09,prod2AF2);
          real basisEval2B23#1 = RMul(coeff2B08,prod2B22);
          real coeff2B24#18 = 0.4e1;
          real prod32B25#7 = RMul(prod22B09,varAcc2AE5);
          real prod2B26#2 = RMul(prod32B25,prod2AEA);
          real basisEval2B27#1 = RMul(coeff2B24,prod2B26);
          real prod42B28#3 = RMul(prod32B0C,varAcc2AE7);
          real prod2B29#2 = RMul(coeff2AE9,prod42B28);
          real prod2B2A#2 = RMul(coeff2AE9,prod2B29);
          real basisEval2B2B#2 = RMul(coeff2AE9,prod2B2A);
          real prod2B2C#2 = RMul(iden2AF1,prod32B0C);
          real prod2B2D#3 = RMul(coeff2AE9,prod2B2C);
          real basisEval2B2E#1 = RMul(coeff2AE9,prod2B2D);
          real prod2B2F#2 = RMul(prod22B00,prod22AF9);
          real prod2B30#2 = RMul(coeff2AE9,prod2B2F);
          real basisEval2B31#1 = RMul(coeff2AE9,prod2B30);
          real prod2B32#2 = RMul(prod32B16,iden2AED);
          real prod2B33#3 = RMul(coeff2AE9,prod2B32);
          real basisEval2B34#1 = RMul(coeff2AE9,prod2B33);
          real prod42B35#3 = RMul(prod32B16,varAcc2AE6);
          real prod2B36#2 = RMul(prod42B35,coeff2AE9);
          real prod2B37#2 = RMul(coeff2AE9,prod2B36);
          real basisEval2B38#2 = RMul(coeff2AE9,prod2B37);
          real prod2B39#3 = RMul(iden2AF6,prod2B0D);
          real basisEval2B3A#1 = RMul(coeff2AF5,prod2B39);
          real prod2B3B#2 = RMul(iden2AF6,prod2B10);
          real basisEval2B3C#2 = RMul(coeff2AF5,prod2B3B);
          real prod2B3D#2 = RMul(iden2AF6,prod2B13);
          real basisEval2B3E#2 = RMul(coeff2AF5,prod2B3D);
          real prod2B3F#3 = RMul(iden2AF6,prod2B17);
          real basisEval2B40#1 = RMul(coeff2AF5,prod2B3F);
          real prod2B41#2 = RMul(prod22B09,prod2AFA);
          real basisEval2B42#2 = RMul(coeff2B08,prod2B41);
          real prod2B43#2 = RMul(prod22B09,prod2AFD);
          real basisEval2B44#1 = RMul(coeff2B08,prod2B43);
          real prod2B45#2 = RMul(prod22B09,prod2B01);
          real basisEval2B46#2 = RMul(coeff2B08,prod2B45);
          real prod2B47#3 = RMul(prod32B25,prod2AEE);
          real basisEval2B48#1 = RMul(coeff2B24,prod2B47);
          real prod2B49#3 = RMul(prod32B25,prod2AF2);
          real basisEval2B4A#1 = RMul(coeff2B24,prod2B49);
          real coeff2B4B#9 = 0.5e1;
          real prod42B4C#4 = RMul(prod32B25,varAcc2AE5);
          real prod2B4D#2 = RMul(prod42B4C,prod2AEA);
          real basisEval2B4E#1 = RMul(coeff2B4B,prod2B4D);
          real prod52B4F#1 = RMul(prod42B28,varAcc2AE7);
          real prod2B50#1 = RMul(coeff2AE9,prod52B4F);
          real prod2B51#2 = RMul(coeff2AE9,prod2B50);
          real basisEval2B52#2 = RMul(coeff2AE9,prod2B51);
          real prod2B53#1 = RMul(iden2AF1,prod42B28);
          real prod2B54#3 = RMul(coeff2AE9,prod2B53);
          real basisEval2B55#1 = RMul(coeff2AE9,prod2B54);
          real prod2B56#1 = RMul(prod22B00,prod32B0C);
          real prod2B57#3 = RMul(coeff2AE9,prod2B56);
          real basisEval2B58#1 = RMul(coeff2AE9,prod2B57);
          real prod2B59#1 = RMul(prod32B16,prod22AF9);
          real prod2B5A#3 = RMul(coeff2AE9,prod2B59);
          real basisEval2B5B#1 = RMul(coeff2AE9,prod2B5A);
          real prod2B5C#1 = RMul(prod42B35,iden2AED);
          real prod2B5D#3 = RMul(coeff2AE9,prod2B5C);
          real basisEval2B5E#1 = RMul(coeff2AE9,prod2B5D);
          real prod52B5F#1 = RMul(prod42B35,varAcc2AE6);
          real prod2B60#1 = RMul(prod52B5F,coeff2AE9);
          real prod2B61#2 = RMul(coeff2AE9,prod2B60);
          real basisEval2B62#2 = RMul(coeff2AE9,prod2B61);
          real prod2B63#3 = RMul(iden2AF6,prod2B29);
          real basisEval2B64#1 = RMul(coeff2AF5,prod2B63);
          real prod2B65#2 = RMul(iden2AF6,prod2B2C);
          real basisEval2B66#2 = RMul(coeff2AF5,prod2B65);
          real prod2B67#2 = RMul(iden2AF6,prod2B2F);
          real basisEval2B68#1 = RMul(coeff2AF5,prod2B67);
          real prod2B69#2 = RMul(iden2AF6,prod2B32);
          real basisEval2B6A#2 = RMul(coeff2AF5,prod2B69);
          real prod2B6B#3 = RMul(iden2AF6,prod2B36);
          real basisEval2B6C#1 = RMul(coeff2AF5,prod2B6B);
          real prod2B6D#3 = RMul(prod22B09,prod2B0D);
          real basisEval2B6E#1 = RMul(coeff2B08,prod2B6D);
          real prod2B6F#2 = RMul(prod22B09,prod2B10);
          real basisEval2B70#2 = RMul(coeff2B08,prod2B6F);
          real prod2B71#2 = RMul(prod22B09,prod2B13);
          real basisEval2B72#2 = RMul(coeff2B08,prod2B71);
          real prod2B73#3 = RMul(prod22B09,prod2B17);
          real basisEval2B74#1 = RMul(coeff2B08,prod2B73);
          real prod2B75#3 = RMul(prod32B25,prod2AFA);
          real basisEval2B76#1 = RMul(coeff2B24,prod2B75);
          real prod2B77#2 = RMul(prod32B25,prod2AFD);
          real basisEval2B78#1 = RMul(coeff2B24,prod2B77);
          real prod2B79#3 = RMul(prod32B25,prod2B01);
          real basisEval2B7A#1 = RMul(coeff2B24,prod2B79);
          real prod2B7B#3 = RMul(prod42B4C,prod2AEE);
          real basisEval2B7C#1 = RMul(coeff2B4B,prod2B7B);
          real prod2B7D#3 = RMul(prod42B4C,prod2AF2);
          real basisEval2B7E#1 = RMul(coeff2B4B,prod2B7D);
          real coeff2B7F#3 = 0.6e1;
          real prod52B80#1 = RMul(prod42B4C,varAcc2AE5);
          real prod2B81#2 = RMul(prod52B80,prod2AEA);
          real basisEval2B82#1 = RMul(coeff2B7F,prod2B81);
          real basisEval2B83#1 = RMul(coeff2AF5,prod2AF3);
          real basisEval2B84#2 = RMul(coeff2AE9,prod2AF7);
          real basisEval2B85#2 = RMul(coeff2AF5,prod2AFE);
          real basisEval2B86#1 = RMul(coeff2B08,prod2B02);
          real basisEval2B87#1 = RMul(coeff2AE9,prod2B04);
          real basisEval2B88#2 = RMul(coeff2AE9,prod2B0A);
          real basisEval2B89#1 = RMul(coeff2AF5,prod2B11);
          real basisEval2B8A#1 = RMul(coeff2B08,prod2B14);
          real basisEval2B8B#1 = RMul(coeff2B24,prod2B18);
          real basisEval2B8C#1 = RMul(coeff2AE9,prod2B1A);
          real basisEval2B8D#1 = RMul(coeff2B08,prod2B1E);
          real basisEval2B8E#1 = RMul(coeff2AE9,prod2B20);
          real basisEval2B8F#1 = RMul(coeff2AF5,prod2B22);
          real basisEval2B90#2 = RMul(coeff2AE9,prod2B26);
          real basisEval2B91#1 = RMul(coeff2AF5,prod2B2D);
          real basisEval2B92#2 = RMul(coeff2B08,prod2B30);
          real basisEval2B93#1 = RMul(coeff2B24,prod2B33);
          real basisEval2B94#1 = RMul(coeff2B4B,prod2B37);
          real basisEval2B95#1 = RMul(coeff2AE9,prod2B39);
          real basisEval2B96#1 = RMul(coeff2B08,prod2B3D);
          real basisEval2B97#1 = RMul(coeff2B24,prod2B3F);
          real basisEval2B98#1 = RMul(coeff2AE9,prod2B41);
          real basisEval2B99#2 = RMul(coeff2AF5,prod2B43);
          real basisEval2B9A#1 = RMul(coeff2AE9,prod2B47);
          real basisEval2B9B#1 = RMul(coeff2AF5,prod2B49);
          real basisEval2B9C#2 = RMul(coeff2AE9,prod2B4D);
          real basisEval2B9D#1 = RMul(coeff2AF5,prod2B54);
          real basisEval2B9E#1 = RMul(coeff2B08,prod2B57);
          real basisEval2B9F#1 = RMul(coeff2B24,prod2B5A);
          real basisEval2BA0#1 = RMul(coeff2B4B,prod2B5D);
          real basisEval2BA1#1 = RMul(coeff2B7F,prod2B61);
          real basisEval2BA2#1 = RMul(coeff2AE9,prod2B63);
          real basisEval2BA3#2 = RMul(coeff2B08,prod2B67);
          real basisEval2BA4#1 = RMul(coeff2B24,prod2B69);
          real basisEval2BA5#1 = RMul(coeff2B4B,prod2B6B);
          real basisEval2BA6#1 = RMul(coeff2AE9,prod2B6D);
          real basisEval2BA7#1 = RMul(coeff2AF5,prod2B6F);
          real basisEval2BA8#1 = RMul(coeff2B24,prod2B73);
          real basisEval2BA9#1 = RMul(coeff2AE9,prod2B75);
          real basisEval2BAA#2 = RMul(coeff2AF5,prod2B77);
          real basisEval2BAB#1 = RMul(coeff2B08,prod2B79);
          real basisEval2BAC#1 = RMul(coeff2AE9,prod2B7B);
          real basisEval2BAD#1 = RMul(coeff2AF5,prod2B7D);
          real basisEval2BAE#2 = RMul(coeff2AE9,prod2B81);
          real basisEval2BAF#1 = RMul(coeff2AF5,prod2AEF);
          real basisEval2BB0#1 = RMul(coeff2B08,prod2AFB);
          real basisEval2BB1#1 = RMul(coeff2AE9,prod2B06);
          real basisEval2BB2#1 = RMul(coeff2B24,prod2B0E);
          real basisEval2BB3#1 = RMul(coeff2B08,prod2B11);
          real basisEval2BB4#1 = RMul(coeff2AF5,prod2B14);
          real basisEval2BB5#1 = RMul(coeff2B08,prod2B1A);
          real basisEval2BB6#1 = RMul(coeff2AE9,prod2B1E);
          real basisEval2BB7#1 = RMul(coeff2AF5,prod2B20);
          real basisEval2BB8#1 = RMul(coeff2AE9,prod2B22);
          real basisEval2BB9#1 = RMul(coeff2B4B,prod2B2A);
          real basisEval2BBA#1 = RMul(coeff2B24,prod2B2D);
          real basisEval2BBB#1 = RMul(coeff2AF5,prod2B33);
          real basisEval2BBC#1 = RMul(coeff2B24,prod2B39);
          real basisEval2BBD#1 = RMul(coeff2B08,prod2B3B);
          real basisEval2BBE#1 = RMul(coeff2AE9,prod2B3F);
          real basisEval2BBF#1 = RMul(coeff2AE9,prod2B45);
          real basisEval2BC0#1 = RMul(coeff2AF5,prod2B47);
          real basisEval2BC1#1 = RMul(coeff2AE9,prod2B49);
          real basisEval2BC2#1 = RMul(coeff2B7F,prod2B51);
          real basisEval2BC3#1 = RMul(coeff2B4B,prod2B54);
          real basisEval2BC4#1 = RMul(coeff2B24,prod2B57);
          real basisEval2BC5#1 = RMul(coeff2B08,prod2B5A);
          real basisEval2BC6#1 = RMul(coeff2AF5,prod2B5D);
          real basisEval2BC7#1 = RMul(coeff2B4B,prod2B63);
          real basisEval2BC8#1 = RMul(coeff2B24,prod2B65);
          real basisEval2BC9#1 = RMul(coeff2AE9,prod2B6B);
          real basisEval2BCA#1 = RMul(coeff2B24,prod2B6D);
          real basisEval2BCB#1 = RMul(coeff2AF5,prod2B71);
          real basisEval2BCC#1 = RMul(coeff2AE9,prod2B73);
          real basisEval2BCD#1 = RMul(coeff2B08,prod2B75);
          real basisEval2BCE#1 = RMul(coeff2AE9,prod2B79);
          real basisEval2BCF#1 = RMul(coeff2AF5,prod2B7B);
          real basisEval2BD0#1 = RMul(coeff2AE9,prod2B7D);
          tensor[84] intermediateCons2BD1#1 = <tensor[84]>[basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AEC,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AF0,basisEval2AF4,basisEval2AF8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AFC,basisEval2AFF,basisEval2B03,basisEval2B05,basisEval2B07,basisEval2B0B,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2B0F,basisEval2B12,basisEval2B15,basisEval2B19,basisEval2B1B,basisEval2B1D,basisEval2B1F,basisEval2B21,basisEval2B23,basisEval2B27,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2B2B,basisEval2B2E,basisEval2B31,basisEval2B34,basisEval2B38,basisEval2B3A,basisEval2B3C,basisEval2B3E,basisEval2B40,basisEval2B42,basisEval2B44,basisEval2B46,basisEval2B48,basisEval2B4A,basisEval2B4E,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2AE8,basisEval2B52,basisEval2B55,basisEval2B58,basisEval2B5B,basisEval2B5E,basisEval2B62,basisEval2B64,basisEval2B66,basisEval2B68,basisEval2B6A,basisEval2B6C,basisEval2B6E,basisEval2B70,basisEval2B72,basisEval2B74,basisEval2B76,basisEval2B78,basisEval2B7A,basisEval2B7C,basisEval2B7E,basisEval2B82];
          tensor[84] intermediateCons2BD2#1 = <tensor[84]>[basisEval2AE8,basisEval2AE8,basisEval2AEC,basisEval2AE8,basisEval2AE8,basisEval2AF0,basisEval2B83,basisEval2AE8,basisEval2B84,basisEval2AE8,basisEval2AE8,basisEval2AFC,basisEval2B85,basisEval2B86,basisEval2AE8,basisEval2B87,basisEval2B07,basisEval2AE8,basisEval2B88,basisEval2AE8,basisEval2AE8,basisEval2B0F,basisEval2B89,basisEval2B8A,basisEval2B8B,basisEval2AE8,basisEval2B8C,basisEval2B1D,basisEval2B8D,basisEval2AE8,basisEval2B8E,basisEval2B8F,basisEval2AE8,basisEval2B90,basisEval2AE8,basisEval2AE8,basisEval2B2B,basisEval2B91,basisEval2B92,basisEval2B93,basisEval2B94,basisEval2AE8,basisEval2B95,basisEval2B3C,basisEval2B96,basisEval2B97,basisEval2AE8,basisEval2B98,basisEval2B99,basisEval2B46,basisEval2AE8,basisEval2B9A,basisEval2B9B,basisEval2AE8,basisEval2B9C,basisEval2AE8,basisEval2AE8,basisEval2B52,basisEval2B9D,basisEval2B9E,basisEval2B9F,basisEval2BA0,basisEval2BA1,basisEval2AE8,basisEval2BA2,basisEval2B66,basisEval2BA3,basisEval2BA4,basisEval2BA5,basisEval2AE8,basisEval2BA6,basisEval2BA7,basisEval2B72,basisEval2BA8,basisEval2AE8,basisEval2BA9,basisEval2BAA,basisEval2BAB,basisEval2AE8,basisEval2BAC,basisEval2BAD,basisEval2AE8,basisEval2BAE,basisEval2AE8];
          tensor[84] intermediateCons2BD3#1 = <tensor[84]>[basisEval2AE8,basisEval2AEC,basisEval2AE8,basisEval2AE8,basisEval2BAF,basisEval2AF4,basisEval2AE8,basisEval2B84,basisEval2AE8,basisEval2AE8,basisEval2BB0,basisEval2B85,basisEval2B03,basisEval2AE8,basisEval2B05,basisEval2BB1,basisEval2AE8,basisEval2B88,basisEval2AE8,basisEval2AE8,basisEval2BB2,basisEval2BB3,basisEval2BB4,basisEval2B19,basisEval2AE8,basisEval2BB5,basisEval2B1D,basisEval2BB6,basisEval2AE8,basisEval2BB7,basisEval2BB8,basisEval2AE8,basisEval2B90,basisEval2AE8,basisEval2AE8,basisEval2BB9,basisEval2BBA,basisEval2B92,basisEval2BBB,basisEval2B38,basisEval2AE8,basisEval2BBC,basisEval2BBD,basisEval2B3E,basisEval2BBE,basisEval2AE8,basisEval2B42,basisEval2B99,basisEval2BBF,basisEval2AE8,basisEval2BC0,basisEval2BC1,basisEval2AE8,basisEval2B9C,basisEval2AE8,basisEval2AE8,basisEval2BC2,basisEval2BC3,basisEval2BC4,basisEval2BC5,basisEval2BC6,basisEval2B62,basisEval2AE8,basisEval2BC7,basisEval2BC8,basisEval2BA3,basisEval2B6A,basisEval2BC9,basisEval2AE8,basisEval2BCA,basisEval2B70,basisEval2BCB,basisEval2BCC,basisEval2AE8,basisEval2BCD,basisEval2BAA,basisEval2BCE,basisEval2AE8,basisEval2BCF,basisEval2BD0,basisEval2AE8,basisEval2BAE,basisEval2AE8,basisEval2AE8];
          tensor[84] projParam2CC7#1 = intermediateCons2BD1;
          real vdot2CC8#4 = VDot<84>(femDofs2653,projParam2CC7);
          tensor[84] projParam2CC9#1 = intermediateCons2BD2;
          real vdot2CCA#4 = VDot<84>(femDofs2653,projParam2CC9);
          tensor[84] projParam2CCB#1 = intermediateCons2BD3;
          real vdot2CCC#4 = VDot<84>(femDofs2653,projParam2CCB);
          tensor[3] probe_l_62CC6#5 = <tensor[3]>[vdot2CC8,vdot2CCA,vdot2CCC];
          real op1_e3_l_82CD5#1 = VDot<3>(probe_l_62CC6,probe_l_62CC6);
          real op1_e3_l_92CD8#1 = Sqrt(op1_e3_l_82CD5);
          real op1_e3_l_102CDB#1 = RNeg(_t2AE2);
          real op1_e3_l_112CDE#1 = RAdd(fBias2417,op1_e3_l_92CD8);
          real _t2CE1#1 = RDiv(op1_e3_l_102CDB,op1_e3_l_112CDE);
          bool _t2CE4#1 = GT<real>(_t2CE1,fStrTh2413);
          if _t2CE4 then goto ASSIGN2CE8 else goto ASSIGN5398
        ASSIGN2CE8:  preds = [COND2CE6]
          real _t2CE7#1 = 0.1e1;
          bool _t2CE9#1 = GTE<real>(_t2CE7,fMaskTh2415);
          if _t2CE9 then goto ASSIGN544A else goto ASSIGN5397
        ASSIGN544A:  preds = [COND2CEB]
          tensor[3] projParam2CED#1 = tensor2AB8;
          real vdot2CEE#2 = VDot<3>(projParam2CED,probe_l_62CC6);
          tensor[3] projParam2CEF#1 = tensor2ABF;
          real vdot2CF0#2 = VDot<3>(projParam2CEF,probe_l_62CC6);
          tensor[3] projParam2CF1#1 = tensor2AC6;
          real vdot2CF2#2 = VDot<3>(projParam2CF1,probe_l_62CC6);
          real realLit2CFC#5 = 0.e0;
          real realLit2CFD#5 = 0.1e1;
          real r2CFE#11 = RMul(realLit2CFC,realLit2CFD);
          real r2CFF#25 = RMul(realLit2CFC,realLit2CFC);
          real r2D00#3 = RAdd(r2CFE,r2CFF);
          real r2D01#1 = RAdd(r2D00,r2CFF);
          real r2D02#6 = RAdd(r2D01,r2CFF);
          real r2D03#3 = RAdd(r2CFF,r2CFE);
          real r2D04#1 = RAdd(r2D03,r2CFF);
          real r2D05#6 = RAdd(r2D04,r2CFF);
          real r2D06#3 = RAdd(r2CFF,r2CFF);
          real r2D07#1 = RAdd(r2D06,r2CFE);
          real r2D08#6 = RAdd(r2D07,r2CFF);
          real r2D0A#15 = RMul(realLit2CFD,realLit2CFC);
          real r2D0B#1 = RAdd(r2D00,r2D0A);
          real r2D0C#2 = RAdd(r2D0B,r2D0A);
          real r2D0D#1 = RAdd(r2D03,r2D0A);
          real r2D0E#2 = RAdd(r2D0D,r2D0A);
          real r2D0F#3 = RMul(realLit2CFD,realLit2CFD);
          real r2D10#1 = RAdd(r2D06,r2D0F);
          real r2D11#2 = RAdd(r2D10,r2D0A);
          real realLit2D13#2 = -0.1e1;
          real r2D14#15 = RMul(realLit2D13,realLit2CFC);
          real r2D15#1 = RAdd(r2CFE,r2D14);
          real r2D16#1 = RAdd(r2D15,r2CFF);
          real r2D17#2 = RAdd(r2D16,r2D0A);
          real r2D18#3 = RMul(realLit2D13,realLit2CFD);
          real r2D19#1 = RAdd(r2CFF,r2D18);
          real r2D1A#1 = RAdd(r2D19,r2CFF);
          real r2D1B#2 = RAdd(r2D1A,r2D0A);
          real r2D1C#1 = RAdd(r2CFF,r2D14);
          real r2D1D#1 = RAdd(r2D1C,r2CFE);
          real r2D1E#2 = RAdd(r2D1D,r2D0A);
          real r2D21#1 = RAdd(r2D00,r2D14);
          real r2D22#2 = RAdd(r2D21,r2D14);
          real r2D23#1 = RAdd(r2D03,r2D14);
          real r2D24#2 = RAdd(r2D23,r2D14);
          real r2D25#1 = RAdd(r2D06,r2D18);
          real r2D26#2 = RAdd(r2D25,r2D14);
          real r2D28#1 = RAdd(r2D0F,r2CFF);
          real r2D29#1 = RAdd(r2D28,r2CFF);
          real r2D2A#2 = RAdd(r2D29,r2D0A);
          real r2D2B#1 = RAdd(r2D0A,r2CFE);
          real r2D2C#1 = RAdd(r2D2B,r2CFF);
          real r2D2D#2 = RAdd(r2D2C,r2D0A);
          real r2D2E#1 = RAdd(r2D0A,r2CFF);
          real r2D2F#1 = RAdd(r2D2E,r2CFE);
          real r2D30#2 = RAdd(r2D2F,r2D0A);
          real r2D33#1 = RAdd(r2CFE,r2D0A);
          real r2D34#1 = RAdd(r2D33,r2CFF);
          real r2D35#2 = RAdd(r2D34,r2D14);
          real r2D36#1 = RAdd(r2CFF,r2D0F);
          real r2D37#1 = RAdd(r2D36,r2CFF);
          real r2D38#2 = RAdd(r2D37,r2D14);
          real r2D39#1 = RAdd(r2CFF,r2D0A);
          real r2D3A#1 = RAdd(r2D39,r2CFE);
          real r2D3B#2 = RAdd(r2D3A,r2D14);
          real r2D3D#1 = RAdd(r2D18,r2CFF);
          real r2D3E#1 = RAdd(r2D3D,r2CFF);
          real r2D3F#2 = RAdd(r2D3E,r2D14);
          real r2D40#1 = RAdd(r2D14,r2CFE);
          real r2D41#1 = RAdd(r2D40,r2CFF);
          real r2D42#2 = RAdd(r2D41,r2D14);
          real r2D43#1 = RAdd(r2D14,r2CFF);
          real r2D44#1 = RAdd(r2D43,r2CFE);
          real r2D45#2 = RAdd(r2D44,r2D14);
          real r2D97#9 = vdot2CEE;
          real r2D98#1 = r2D02;
          real r2D99#1 = RMul(r2D97,r2D98);
          real r2D9A#9 = vdot2CF0;
          real r2D9B#1 = r2D0C;
          real r2D9C#1 = RMul(r2D9A,r2D9B);
          real r2D9D#9 = vdot2CF2;
          real r2D9E#1 = r2D17;
          real r2D9F#1 = RMul(r2D9D,r2D9E);
          real r2DA0#1 = RAdd(r2D99,r2D9C);
          real r2DA1#1 = RAdd(r2DA0,r2D9F);
          real r2DA2#1 = r2D05;
          real r2DA3#1 = RMul(r2D97,r2DA2);
          real r2DA4#1 = r2D0E;
          real r2DA5#1 = RMul(r2D9A,r2DA4);
          real r2DA6#1 = r2D1B;
          real r2DA7#1 = RMul(r2D9D,r2DA6);
          real r2DA8#1 = RAdd(r2DA3,r2DA5);
          real r2DA9#1 = RAdd(r2DA8,r2DA7);
          real r2DAA#1 = r2D08;
          real r2DAB#1 = RMul(r2D97,r2DAA);
          real r2DAC#1 = r2D11;
          real r2DAD#1 = RMul(r2D9A,r2DAC);
          real r2DAE#1 = r2D1E;
          real r2DAF#1 = RMul(r2D9D,r2DAE);
          real r2DB0#1 = RAdd(r2DAB,r2DAD);
          real r2DB1#1 = RAdd(r2DB0,r2DAF);
          real r2DB3#1 = r2D22;
          real r2DB4#1 = RMul(r2D97,r2DB3);
          real r2DB5#1 = r2D02;
          real r2DB6#1 = RMul(r2D9A,r2DB5);
          real r2DB7#1 = r2D2A;
          real r2DB8#1 = RMul(r2D9D,r2DB7);
          real r2DB9#1 = RAdd(r2DB4,r2DB6);
          real r2DBA#1 = RAdd(r2DB9,r2DB8);
          real r2DBB#1 = r2D24;
          real r2DBC#1 = RMul(r2D97,r2DBB);
          real r2DBD#1 = r2D05;
          real r2DBE#1 = RMul(r2D9A,r2DBD);
          real r2DBF#1 = r2D2D;
          real r2DC0#1 = RMul(r2D9D,r2DBF);
          real r2DC1#1 = RAdd(r2DBC,r2DBE);
          real r2DC2#1 = RAdd(r2DC1,r2DC0);
          real r2DC3#1 = r2D26;
          real r2DC4#1 = RMul(r2D97,r2DC3);
          real r2DC5#1 = r2D08;
          real r2DC6#1 = RMul(r2D9A,r2DC5);
          real r2DC7#1 = r2D30;
          real r2DC8#1 = RMul(r2D9D,r2DC7);
          real r2DC9#1 = RAdd(r2DC4,r2DC6);
          real r2DCA#1 = RAdd(r2DC9,r2DC8);
          real r2DCC#1 = r2D35;
          real r2DCD#1 = RMul(r2D97,r2DCC);
          real r2DCE#1 = r2D3F;
          real r2DCF#1 = RMul(r2D9A,r2DCE);
          real r2DD0#1 = r2D02;
          real r2DD1#1 = RMul(r2D9D,r2DD0);
          real r2DD2#1 = RAdd(r2DCD,r2DCF);
          real r2DD3#1 = RAdd(r2DD2,r2DD1);
          real r2DD4#1 = r2D38;
          real r2DD5#1 = RMul(r2D97,r2DD4);
          real r2DD6#1 = r2D42;
          real r2DD7#1 = RMul(r2D9A,r2DD6);
          real r2DD8#1 = r2D05;
          real r2DD9#1 = RMul(r2D9D,r2DD8);
          real r2DDA#1 = RAdd(r2DD5,r2DD7);
          real r2DDB#1 = RAdd(r2DDA,r2DD9);
          real r2DDC#1 = r2D3B;
          real r2DDD#1 = RMul(r2D97,r2DDC);
          real r2DDE#1 = r2D45;
          real r2DDF#1 = RMul(r2D9A,r2DDE);
          real r2DE0#1 = r2D08;
          real r2DE1#1 = RMul(r2D9D,r2DE0);
          real r2DE2#1 = RAdd(r2DDD,r2DDF);
          real r2DE3#1 = RAdd(r2DE2,r2DE1);
          real varAcc2E36#3 = VIndex<3,0>(pos2449);
          real varAcc2E37#3 = VIndex<3,1>(pos2449);
          real varAcc2E38#3 = VIndex<3,2>(pos2449);
          real basisEval2E39#640 = 0.e0;
          real coeff2E3A#19 = 0.6e1;
          real one2E3B#19 = 0.1e1;
          real prod2E3C#4 = RMul(one2E3B,one2E3B);
          real prod2E3D#3 = RMul(one2E3B,prod2E3C);
          real basisEval2E3E#3 = RMul(coeff2E3A,prod2E3D);
          real iden2E3F#4 = varAcc2E38;
          real prod2E40#3 = RMul(one2E3B,iden2E3F);
          real prod2E41#4 = RMul(one2E3B,prod2E40);
          real basisEval2E42#4 = RMul(coeff2E3A,prod2E41);
          real iden2E43#4 = varAcc2E37;
          real prod2E44#3 = RMul(iden2E43,one2E3B);
          real prod2E45#4 = RMul(one2E3B,prod2E44);
          real basisEval2E46#4 = RMul(coeff2E3A,prod2E45);
          real coeff2E47#13 = 0.24e2;
          real iden2E48#7 = varAcc2E36;
          real prod2E49#4 = RMul(iden2E48,prod2E3C);
          real basisEval2E4A#1 = RMul(coeff2E47,prod2E49);
          real prod22E4B#3 = RMul(iden2E3F,varAcc2E38);
          real prod2E4C#2 = RMul(one2E3B,prod22E4B);
          real prod2E4D#5 = RMul(one2E3B,prod2E4C);
          real basisEval2E4E#4 = RMul(coeff2E3A,prod2E4D);
          real prod2E4F#2 = RMul(iden2E43,iden2E3F);
          real prod2E50#4 = RMul(one2E3B,prod2E4F);
          real basisEval2E51#3 = RMul(coeff2E3A,prod2E50);
          real prod22E52#3 = RMul(iden2E43,varAcc2E37);
          real prod2E53#2 = RMul(prod22E52,one2E3B);
          real prod2E54#5 = RMul(one2E3B,prod2E53);
          real basisEval2E55#4 = RMul(coeff2E3A,prod2E54);
          real prod2E56#4 = RMul(iden2E48,prod2E40);
          real basisEval2E57#2 = RMul(coeff2E47,prod2E56);
          real prod2E58#4 = RMul(iden2E48,prod2E44);
          real basisEval2E59#2 = RMul(coeff2E47,prod2E58);
          real coeff2E5A#9 = 0.60e2;
          real prod22E5B#4 = RMul(iden2E48,varAcc2E36);
          real prod2E5C#5 = RMul(prod22E5B,prod2E3C);
          real basisEval2E5D#1 = RMul(coeff2E5A,prod2E5C);
          real prod32E5E#1 = RMul(prod22E4B,varAcc2E38);
          real prod2E5F#1 = RMul(one2E3B,prod32E5E);
          real prod2E60#6 = RMul(one2E3B,prod2E5F);
          real basisEval2E61#2 = RMul(coeff2E3A,prod2E60);
          real prod2E62#1 = RMul(iden2E43,prod22E4B);
          real prod2E63#6 = RMul(one2E3B,prod2E62);
          real basisEval2E64#4 = RMul(coeff2E3A,prod2E63);
          real prod2E65#1 = RMul(prod22E52,iden2E3F);
          real prod2E66#6 = RMul(one2E3B,prod2E65);
          real basisEval2E67#4 = RMul(coeff2E3A,prod2E66);
          real prod32E68#1 = RMul(prod22E52,varAcc2E37);
          real prod2E69#1 = RMul(prod32E68,one2E3B);
          real prod2E6A#6 = RMul(one2E3B,prod2E69);
          real basisEval2E6B#2 = RMul(coeff2E3A,prod2E6A);
          real prod2E6C#6 = RMul(iden2E48,prod2E4C);
          real basisEval2E6D#2 = RMul(coeff2E47,prod2E6C);
          real prod2E6E#3 = RMul(iden2E48,prod2E4F);
          real basisEval2E6F#3 = RMul(coeff2E47,prod2E6E);
          real prod2E70#6 = RMul(iden2E48,prod2E53);
          real basisEval2E71#2 = RMul(coeff2E47,prod2E70);
          real prod2E72#6 = RMul(prod22E5B,prod2E40);
          real basisEval2E73#1 = RMul(coeff2E5A,prod2E72);
          real prod2E74#6 = RMul(prod22E5B,prod2E44);
          real basisEval2E75#1 = RMul(coeff2E5A,prod2E74);
          real coeff2E76#3 = 0.120e3;
          real prod32E77#1 = RMul(prod22E5B,varAcc2E36);
          real prod2E78#6 = RMul(prod32E77,prod2E3C);
          real basisEval2E79#1 = RMul(coeff2E76,prod2E78);
          real coeff2E7A#10 = 0.2e1;
          real basisEval2E7B#6 = RMul(coeff2E7A,prod2E3D);
          real basisEval2E7C#3 = RMul(coeff2E7A,prod2E41);
          real coeff2E7D#15 = 0.4e1;
          real basisEval2E7E#2 = RMul(coeff2E7D,prod2E45);
          real basisEval2E7F#4 = RMul(coeff2E3A,prod2E49);
          real basisEval2E80#2 = RMul(coeff2E7A,prod2E4D);
          real basisEval2E81#3 = RMul(coeff2E7D,prod2E50);
          real basisEval2E82#3 = RMul(coeff2E3A,prod2E56);
          real coeff2E83#13 = 0.12e2;
          real basisEval2E84#2 = RMul(coeff2E83,prod2E58);
          real basisEval2E85#2 = RMul(coeff2E83,prod2E5C);
          real basisEval2E86#2 = RMul(coeff2E7A,prod2E60);
          real basisEval2E87#1 = RMul(coeff2E7D,prod2E63);
          real coeff2E88#4 = 0.8e1;
          real basisEval2E89#2 = RMul(coeff2E88,prod2E6A);
          real basisEval2E8A#4 = RMul(coeff2E3A,prod2E6C);
          real basisEval2E8B#6 = RMul(coeff2E83,prod2E6E);
          real coeff2E8C#6 = 0.18e2;
          real basisEval2E8D#1 = RMul(coeff2E8C,prod2E70);
          real basisEval2E8E#1 = RMul(coeff2E83,prod2E72);
          real basisEval2E8F#2 = RMul(coeff2E47,prod2E74);
          real coeff2E90#3 = 0.20e2;
          real basisEval2E91#2 = RMul(coeff2E90,prod2E78);
          real basisEval2E92#2 = RMul(coeff2E7D,prod2E41);
          real basisEval2E93#3 = RMul(coeff2E7A,prod2E45);
          real basisEval2E94#2 = RMul(coeff2E7A,prod2E54);
          real basisEval2E95#2 = RMul(coeff2E83,prod2E56);
          real basisEval2E96#3 = RMul(coeff2E3A,prod2E58);
          real basisEval2E97#2 = RMul(coeff2E88,prod2E60);
          real basisEval2E98#1 = RMul(coeff2E7D,prod2E66);
          real basisEval2E99#2 = RMul(coeff2E7A,prod2E6A);
          real basisEval2E9A#1 = RMul(coeff2E8C,prod2E6C);
          real basisEval2E9B#4 = RMul(coeff2E3A,prod2E70);
          real basisEval2E9C#2 = RMul(coeff2E47,prod2E72);
          real basisEval2E9D#1 = RMul(coeff2E83,prod2E74);
          real basisEval2E9E#2 = RMul(coeff2E7D,prod2E49);
          real basisEval2E9F#2 = RMul(coeff2E83,prod2E54);
          real basisEval2EA0#3 = RMul(coeff2E7D,prod2E56);
          real basisEval2EA1#4 = RMul(coeff2E3A,prod2E5C);
          real basisEval2EA2#1 = RMul(coeff2E83,prod2E66);
          real basisEval2EA3#2 = RMul(coeff2E90,prod2E6A);
          real basisEval2EA4#1 = RMul(coeff2E7D,prod2E6C);
          real basisEval2EA5#4 = RMul(coeff2E3A,prod2E72);
          real basisEval2EA6#1 = RMul(coeff2E8C,prod2E74);
          real basisEval2EA7#2 = RMul(coeff2E88,prod2E78);
          real basisEval2EA8#1 = RMul(one2E3B,prod2E3D);
          real basisEval2EA9#3 = RMul(coeff2E7A,prod2E49);
          real coeff2EAA#3 = 0.3e1;
          real basisEval2EAB#1 = RMul(coeff2EAA,prod2E4D);
          real basisEval2EAC#1 = RMul(coeff2EAA,prod2E54);
          real basisEval2EAD#3 = RMul(coeff2E7D,prod2E58);
          real basisEval2EAE#1 = RMul(coeff2EAA,prod2E5C);
          real basisEval2EAF#1 = RMul(coeff2E7D,prod2E60);
          real basisEval2EB0#1 = RMul(coeff2E7D,prod2E6A);
          real basisEval2EB1#1 = RMul(coeff2E88,prod2E6E);
          real basisEval2EB2#4 = RMul(coeff2E3A,prod2E74);
          real basisEval2EB3#1 = RMul(coeff2E7D,prod2E78);
          real basisEval2EB4#2 = RMul(coeff2E83,prod2E4D);
          real basisEval2EB5#2 = RMul(coeff2E90,prod2E60);
          real basisEval2EB6#1 = RMul(coeff2E83,prod2E63);
          real basisEval2EB7#1 = RMul(coeff2E7D,prod2E70);
          real basisEval2EB8#1 = RMul(coeff2E8C,prod2E72);
          real basisEval2EB9#1 = RMul(coeff2E47,prod2E45);
          real basisEval2EBA#2 = RMul(coeff2E47,prod2E50);
          real basisEval2EBB#1 = RMul(coeff2E5A,prod2E54);
          real basisEval2EBC#2 = RMul(coeff2E47,prod2E63);
          real basisEval2EBD#1 = RMul(coeff2E5A,prod2E66);
          real basisEval2EBE#1 = RMul(coeff2E76,prod2E6A);
          real basisEval2EBF#1 = RMul(coeff2E5A,prod2E70);
          real basisEval2EC0#2 = RMul(coeff2E3A,prod2E78);
          real basisEval2EC1#2 = RMul(coeff2E83,prod2E50);
          real basisEval2EC2#2 = RMul(coeff2E7A,prod2E5C);
          real basisEval2EC3#1 = RMul(coeff2E8C,prod2E63);
          real basisEval2EC4#2 = RMul(coeff2E47,prod2E66);
          real basisEval2EC5#1 = RMul(coeff2E83,prod2E70);
          real basisEval2EC6#1 = RMul(coeff2E7D,prod2E72);
          real basisEval2EC7#2 = RMul(coeff2E7A,prod2E78);
          real basisEval2EC8#1 = RMul(coeff2E8C,prod2E66);
          real basisEval2EC9#1 = RMul(coeff2E83,prod2E6C);
          real basisEval2ECA#1 = RMul(coeff2E7D,prod2E74);
          real basisEval2ECB#1 = RMul(coeff2E47,prod2E41);
          real basisEval2ECC#1 = RMul(coeff2E5A,prod2E4D);
          real basisEval2ECD#1 = RMul(coeff2E76,prod2E60);
          real basisEval2ECE#1 = RMul(coeff2E5A,prod2E63);
          real basisEval2ECF#1 = RMul(coeff2E5A,prod2E6C);
          tensor[84] intermediateCons2ED0#1 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E3E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E42,basisEval2E46,basisEval2E4A,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E4E,basisEval2E51,basisEval2E55,basisEval2E57,basisEval2E59,basisEval2E5D,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E61,basisEval2E64,basisEval2E67,basisEval2E6B,basisEval2E6D,basisEval2E6F,basisEval2E71,basisEval2E73,basisEval2E75,basisEval2E79];
          tensor[84] intermediateCons2ED1#3 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7C,basisEval2E7E,basisEval2E39,basisEval2E7F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E80,basisEval2E81,basisEval2E55,basisEval2E39,basisEval2E82,basisEval2E84,basisEval2E39,basisEval2E85,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E86,basisEval2E87,basisEval2E67,basisEval2E89,basisEval2E39,basisEval2E8A,basisEval2E8B,basisEval2E8D,basisEval2E39,basisEval2E8E,basisEval2E8F,basisEval2E39,basisEval2E91,basisEval2E39];
          tensor[84] intermediateCons2ED2#3 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E92,basisEval2E93,basisEval2E39,basisEval2E7F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E4E,basisEval2E81,basisEval2E94,basisEval2E39,basisEval2E95,basisEval2E96,basisEval2E39,basisEval2E85,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E97,basisEval2E64,basisEval2E98,basisEval2E99,basisEval2E39,basisEval2E9A,basisEval2E8B,basisEval2E9B,basisEval2E39,basisEval2E9C,basisEval2E9D,basisEval2E39,basisEval2E91,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED3#3 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7C,basisEval2E46,basisEval2E39,basisEval2E39,basisEval2E9E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E80,basisEval2E51,basisEval2E9F,basisEval2E39,basisEval2E39,basisEval2EA0,basisEval2E84,basisEval2E39,basisEval2E39,basisEval2EA1,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E86,basisEval2E64,basisEval2EA2,basisEval2EA3,basisEval2E39,basisEval2E39,basisEval2EA4,basisEval2E8B,basisEval2E71,basisEval2E39,basisEval2E39,basisEval2EA5,basisEval2EA6,basisEval2E39,basisEval2E39,basisEval2EA7,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED4#6 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA8,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7C,basisEval2E93,basisEval2E39,basisEval2E39,basisEval2EA9,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EAB,basisEval2E81,basisEval2EAC,basisEval2E39,basisEval2E39,basisEval2EA0,basisEval2EAD,basisEval2E39,basisEval2E39,basisEval2EAE,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EAF,basisEval2E64,basisEval2E67,basisEval2EB0,basisEval2E39,basisEval2E39,basisEval2E8A,basisEval2EB1,basisEval2E9B,basisEval2E39,basisEval2E39,basisEval2EA5,basisEval2EB2,basisEval2E39,basisEval2E39,basisEval2EB3,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED5#3 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E42,basisEval2E93,basisEval2E39,basisEval2E39,basisEval2E9E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EB4,basisEval2E51,basisEval2E94,basisEval2E39,basisEval2E39,basisEval2E95,basisEval2EAD,basisEval2E39,basisEval2E39,basisEval2EA1,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EB5,basisEval2EB6,basisEval2E67,basisEval2E99,basisEval2E39,basisEval2E39,basisEval2E6D,basisEval2E8B,basisEval2EB7,basisEval2E39,basisEval2E39,basisEval2EB8,basisEval2EB2,basisEval2E39,basisEval2E39,basisEval2EA7,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED6#1 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E3E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E42,basisEval2EB9,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E4E,basisEval2EBA,basisEval2EBB,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E82,basisEval2E59,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA1,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E61,basisEval2EBC,basisEval2EBD,basisEval2EBE,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E8A,basisEval2E6F,basisEval2EBF,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA5,basisEval2E8F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC0,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED7#3 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E92,basisEval2E46,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA9,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E4E,basisEval2EC1,basisEval2E9F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA0,basisEval2E96,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC2,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E97,basisEval2EC3,basisEval2EC4,basisEval2EA3,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E8A,basisEval2E8B,basisEval2EC5,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC6,basisEval2EB2,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC7,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED8#3 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E42,basisEval2E7E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA9,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EB4,basisEval2EC1,basisEval2E55,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E82,basisEval2EAD,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC2,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EB5,basisEval2EBC,basisEval2EC8,basisEval2E89,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC9,basisEval2E8B,basisEval2E9B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA5,basisEval2ECA,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC7,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] intermediateCons2ED9#1 = <tensor[84]>[basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E3E,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2ECB,basisEval2E46,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E7F,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2ECC,basisEval2EBA,basisEval2E55,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E57,basisEval2E96,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EA1,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2ECD,basisEval2ECE,basisEval2EC4,basisEval2E6B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2ECF,basisEval2E6F,basisEval2E9B,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E9C,basisEval2EB2,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2EC0,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39,basisEval2E39];
          tensor[84] projParam2F94#1 = intermediateCons2ED0;
          real vdot2F95#1 = VDot<84>(femDofs2653,projParam2F94);
          tensor[84] projParam2F96#1 = intermediateCons2ED1;
          real vdot2F97#1 = VDot<84>(femDofs2653,projParam2F96);
          tensor[84] projParam2F98#1 = intermediateCons2ED2;
          real vdot2F99#1 = VDot<84>(femDofs2653,projParam2F98);
          tensor[84] projParam2F9B#1 = intermediateCons2ED1;
          real vdot2F9C#1 = VDot<84>(femDofs2653,projParam2F9B);
          tensor[84] projParam2F9D#1 = intermediateCons2ED3;
          real vdot2F9E#1 = VDot<84>(femDofs2653,projParam2F9D);
          tensor[84] projParam2F9F#1 = intermediateCons2ED4;
          real vdot2FA0#1 = VDot<84>(femDofs2653,projParam2F9F);
          tensor[84] projParam2FA2#1 = intermediateCons2ED2;
          real vdot2FA3#1 = VDot<84>(femDofs2653,projParam2FA2);
          tensor[84] projParam2FA4#1 = intermediateCons2ED4;
          real vdot2FA5#1 = VDot<84>(femDofs2653,projParam2FA4);
          tensor[84] projParam2FA6#1 = intermediateCons2ED5;
          real vdot2FA7#1 = VDot<84>(femDofs2653,projParam2FA6);
          tensor[84] projParam2FAA#1 = intermediateCons2ED1;
          real vdot2FAB#1 = VDot<84>(femDofs2653,projParam2FAA);
          tensor[84] projParam2FAC#1 = intermediateCons2ED3;
          real vdot2FAD#1 = VDot<84>(femDofs2653,projParam2FAC);
          tensor[84] projParam2FAE#1 = intermediateCons2ED4;
          real vdot2FAF#1 = VDot<84>(femDofs2653,projParam2FAE);
          tensor[84] projParam2FB1#1 = intermediateCons2ED3;
          real vdot2FB2#1 = VDot<84>(femDofs2653,projParam2FB1);
          tensor[84] projParam2FB3#1 = intermediateCons2ED6;
          real vdot2FB4#1 = VDot<84>(femDofs2653,projParam2FB3);
          tensor[84] projParam2FB5#1 = intermediateCons2ED7;
          real vdot2FB6#1 = VDot<84>(femDofs2653,projParam2FB5);
          tensor[84] projParam2FB8#1 = intermediateCons2ED4;
          real vdot2FB9#1 = VDot<84>(femDofs2653,projParam2FB8);
          tensor[84] projParam2FBA#1 = intermediateCons2ED7;
          real vdot2FBB#1 = VDot<84>(femDofs2653,projParam2FBA);
          tensor[84] projParam2FBC#1 = intermediateCons2ED8;
          real vdot2FBD#1 = VDot<84>(femDofs2653,projParam2FBC);
          tensor[84] projParam2FC0#1 = intermediateCons2ED2;
          real vdot2FC1#1 = VDot<84>(femDofs2653,projParam2FC0);
          tensor[84] projParam2FC2#1 = intermediateCons2ED4;
          real vdot2FC3#1 = VDot<84>(femDofs2653,projParam2FC2);
          tensor[84] projParam2FC4#1 = intermediateCons2ED5;
          real vdot2FC5#1 = VDot<84>(femDofs2653,projParam2FC4);
          tensor[84] projParam2FC7#1 = intermediateCons2ED4;
          real vdot2FC8#1 = VDot<84>(femDofs2653,projParam2FC7);
          tensor[84] projParam2FC9#1 = intermediateCons2ED7;
          real vdot2FCA#1 = VDot<84>(femDofs2653,projParam2FC9);
          tensor[84] projParam2FCB#1 = intermediateCons2ED8;
          real vdot2FCC#1 = VDot<84>(femDofs2653,projParam2FCB);
          tensor[84] projParam2FCE#1 = intermediateCons2ED5;
          real vdot2FCF#1 = VDot<84>(femDofs2653,projParam2FCE);
          tensor[84] projParam2FD0#1 = intermediateCons2ED8;
          real vdot2FD1#1 = VDot<84>(femDofs2653,projParam2FD0);
          tensor[84] projParam2FD2#1 = intermediateCons2ED9;
          real vdot2FD3#1 = VDot<84>(femDofs2653,projParam2FD2);
          real r301B#9 = vdot2CC8;
          real r301C#1 = vdot2F95;
          real r301D#1 = RMul(r301B,r301C);
          real r301E#9 = vdot2CCA;
          real r301F#1 = vdot2F9C;
          real r3020#1 = RMul(r301E,r301F);
          real r3021#9 = vdot2CCC;
          real r3022#1 = vdot2FA3;
          real r3023#1 = RMul(r3021,r3022);
          real r3024#1 = RAdd(r301D,r3020);
          real r3025#1 = RAdd(r3024,r3023);
          real r3026#1 = vdot2F97;
          real r3027#1 = RMul(r301B,r3026);
          real r3028#1 = vdot2F9E;
          real r3029#1 = RMul(r301E,r3028);
          real r302A#1 = vdot2FA5;
          real r302B#1 = RMul(r3021,r302A);
          real r302C#1 = RAdd(r3027,r3029);
          real r302D#1 = RAdd(r302C,r302B);
          real r302E#1 = vdot2F99;
          real r302F#1 = RMul(r301B,r302E);
          real r3030#1 = vdot2FA0;
          real r3031#1 = RMul(r301E,r3030);
          real r3032#1 = vdot2FA7;
          real r3033#1 = RMul(r3021,r3032);
          real r3034#1 = RAdd(r302F,r3031);
          real r3035#1 = RAdd(r3034,r3033);
          tensor[3] tensor3036#1 = <tensor[3]>[r3025,r302D,r3035];
          real r3037#1 = vdot2FAB;
          real r3038#1 = RMul(r301B,r3037);
          real r3039#1 = vdot2FB2;
          real r303A#1 = RMul(r301E,r3039);
          real r303B#1 = vdot2FB9;
          real r303C#1 = RMul(r3021,r303B);
          real r303D#1 = RAdd(r3038,r303A);
          real r303E#1 = RAdd(r303D,r303C);
          real r303F#1 = vdot2FAD;
          real r3040#1 = RMul(r301B,r303F);
          real r3041#1 = vdot2FB4;
          real r3042#1 = RMul(r301E,r3041);
          real r3043#1 = vdot2FBB;
          real r3044#1 = RMul(r3021,r3043);
          real r3045#1 = RAdd(r3040,r3042);
          real r3046#1 = RAdd(r3045,r3044);
          real r3047#1 = vdot2FAF;
          real r3048#1 = RMul(r301B,r3047);
          real r3049#1 = vdot2FB6;
          real r304A#1 = RMul(r301E,r3049);
          real r304B#1 = vdot2FBD;
          real r304C#1 = RMul(r3021,r304B);
          real r304D#1 = RAdd(r3048,r304A);
          real r304E#1 = RAdd(r304D,r304C);
          tensor[3] tensor304F#1 = <tensor[3]>[r303E,r3046,r304E];
          real r3050#1 = vdot2FC1;
          real r3051#1 = RMul(r301B,r3050);
          real r3052#1 = vdot2FC8;
          real r3053#1 = RMul(r301E,r3052);
          real r3054#1 = vdot2FCF;
          real r3055#1 = RMul(r3021,r3054);
          real r3056#1 = RAdd(r3051,r3053);
          real r3057#1 = RAdd(r3056,r3055);
          real r3058#1 = vdot2FC3;
          real r3059#1 = RMul(r301B,r3058);
          real r305A#1 = vdot2FCA;
          real r305B#1 = RMul(r301E,r305A);
          real r305C#1 = vdot2FD1;
          real r305D#1 = RMul(r3021,r305C);
          real r305E#1 = RAdd(r3059,r305B);
          real r305F#1 = RAdd(r305E,r305D);
          real r3060#1 = vdot2FC5;
          real r3061#1 = RMul(r301B,r3060);
          real r3062#1 = vdot2FCC;
          real r3063#1 = RMul(r301E,r3062);
          real r3064#1 = vdot2FD3;
          real r3065#1 = RMul(r3021,r3064);
          real r3066#1 = RAdd(r3061,r3063);
          real r3067#1 = RAdd(r3066,r3065);
          tensor[3] tensor3068#1 = <tensor[3]>[r3057,r305F,r3067];
          real r30BA#6 = vdot2AB3;
          real r30BB#1 = RMul(r30BA,r30BA);
          real r30BC#6 = vdot2AB5;
          real r30BD#6 = vdot2ABA;
          real r30BE#1 = RMul(r30BC,r30BD);
          real r30BF#6 = vdot2AB7;
          real r30C0#6 = vdot2AC1;
          real r30C1#1 = RMul(r30BF,r30C0);
          real r30C2#1 = RAdd(r30BB,r30BE);
          real r30C3#1 = RAdd(r30C2,r30C1);
          real r30C4#1 = RMul(r30BA,r30BC);
          real r30C5#6 = vdot2ABC;
          real r30C6#1 = RMul(r30BC,r30C5);
          real r30C7#6 = vdot2AC3;
          real r30C8#1 = RMul(r30BF,r30C7);
          real r30C9#1 = RAdd(r30C4,r30C6);
          real r30CA#1 = RAdd(r30C9,r30C8);
          real r30CB#1 = RMul(r30BA,r30BF);
          real r30CC#6 = vdot2ABE;
          real r30CD#1 = RMul(r30BC,r30CC);
          real r30CE#6 = vdot2AC5;
          real r30CF#1 = RMul(r30BF,r30CE);
          real r30D0#1 = RAdd(r30CB,r30CD);
          real r30D1#1 = RAdd(r30D0,r30CF);
          tensor[3] tensor30D2#1 = <tensor[3]>[r30C3,r30CA,r30D1];
          real r30D3#1 = RMul(r30BD,r30BA);
          real r30D4#1 = RMul(r30C5,r30BD);
          real r30D5#1 = RMul(r30CC,r30C0);
          real r30D6#1 = RAdd(r30D3,r30D4);
          real r30D7#1 = RAdd(r30D6,r30D5);
          real r30D8#1 = RMul(r30BD,r30BC);
          real r30D9#1 = RMul(r30C5,r30C5);
          real r30DA#1 = RMul(r30CC,r30C7);
          real r30DB#1 = RAdd(r30D8,r30D9);
          real r30DC#1 = RAdd(r30DB,r30DA);
          real r30DD#1 = RMul(r30BD,r30BF);
          real r30DE#1 = RMul(r30C5,r30CC);
          real r30DF#1 = RMul(r30CC,r30CE);
          real r30E0#1 = RAdd(r30DD,r30DE);
          real r30E1#1 = RAdd(r30E0,r30DF);
          tensor[3] tensor30E2#1 = <tensor[3]>[r30D7,r30DC,r30E1];
          real r30E3#1 = RMul(r30C0,r30BA);
          real r30E4#1 = RMul(r30C7,r30BD);
          real r30E5#1 = RMul(r30CE,r30C0);
          real r30E6#1 = RAdd(r30E3,r30E4);
          real r30E7#1 = RAdd(r30E6,r30E5);
          real r30E8#1 = RMul(r30C0,r30BC);
          real r30E9#1 = RMul(r30C7,r30C5);
          real r30EA#1 = RMul(r30CE,r30C7);
          real r30EB#1 = RAdd(r30E8,r30E9);
          real r30EC#1 = RAdd(r30EB,r30EA);
          real r30ED#1 = RMul(r30C0,r30BF);
          real r30EE#1 = RMul(r30C7,r30CC);
          real r30EF#1 = RMul(r30CE,r30CE);
          real r30F0#1 = RAdd(r30ED,r30EE);
          real r30F1#1 = RAdd(r30F0,r30EF);
          tensor[3] tensor30F2#1 = <tensor[3]>[r30E7,r30EC,r30F1];
          tensor[3] projParam312F#1 = tensor3036;
          tensor[3] projParam3130#1 = tensor30D2;
          tensor[3] v3131#3 = VAdd<3>(projParam312F,projParam3130);
          tensor[3] projParam3132#1 = tensor304F;
          tensor[3] projParam3133#1 = tensor30E2;
          tensor[3] v3134#3 = VAdd<3>(projParam3132,projParam3133);
          tensor[3] projParam3135#1 = tensor3068;
          tensor[3] projParam3136#1 = tensor30F2;
          tensor[3] v3137#3 = VAdd<3>(projParam3135,projParam3136);
          real r3144#9 = vdot2CEE;
          real r3145#3 = vdot2AB3;
          real r3146#1 = RMul(r3144,r3145);
          real r3147#3 = vdot2AB5;
          real r3148#1 = RMul(r3144,r3147);
          real r3149#3 = vdot2AB7;
          real r314A#1 = RMul(r3144,r3149);
          tensor[3] tensor314B#1 = <tensor[3]>[r3146,r3148,r314A];
          real r314C#3 = vdot2ABA;
          real r314D#1 = RMul(r3144,r314C);
          real r314E#3 = vdot2ABC;
          real r314F#1 = RMul(r3144,r314E);
          real r3150#3 = vdot2ABE;
          real r3151#1 = RMul(r3144,r3150);
          tensor[3] tensor3152#1 = <tensor[3]>[r314D,r314F,r3151];
          real r3153#3 = vdot2AC1;
          real r3154#1 = RMul(r3144,r3153);
          real r3155#3 = vdot2AC3;
          real r3156#1 = RMul(r3144,r3155);
          real r3157#3 = vdot2AC5;
          real r3158#1 = RMul(r3144,r3157);
          tensor[3] tensor3159#1 = <tensor[3]>[r3154,r3156,r3158];
          real r315B#9 = vdot2CF0;
          real r315C#1 = RMul(r315B,r3145);
          real r315D#1 = RMul(r315B,r3147);
          real r315E#1 = RMul(r315B,r3149);
          tensor[3] tensor315F#1 = <tensor[3]>[r315C,r315D,r315E];
          real r3160#1 = RMul(r315B,r314C);
          real r3161#1 = RMul(r315B,r314E);
          real r3162#1 = RMul(r315B,r3150);
          tensor[3] tensor3163#1 = <tensor[3]>[r3160,r3161,r3162];
          real r3164#1 = RMul(r315B,r3153);
          real r3165#1 = RMul(r315B,r3155);
          real r3166#1 = RMul(r315B,r3157);
          tensor[3] tensor3167#1 = <tensor[3]>[r3164,r3165,r3166];
          real r3169#9 = vdot2CF2;
          real r316A#1 = RMul(r3169,r3145);
          real r316B#1 = RMul(r3169,r3147);
          real r316C#1 = RMul(r3169,r3149);
          tensor[3] tensor316D#1 = <tensor[3]>[r316A,r316B,r316C];
          real r316E#1 = RMul(r3169,r314C);
          real r316F#1 = RMul(r3169,r314E);
          real r3170#1 = RMul(r3169,r3150);
          tensor[3] tensor3171#1 = <tensor[3]>[r316E,r316F,r3170];
          real r3172#1 = RMul(r3169,r3153);
          real r3173#1 = RMul(r3169,r3155);
          real r3174#1 = RMul(r3169,r3157);
          tensor[3] tensor3175#1 = <tensor[3]>[r3172,r3173,r3174];
          real r31AD#9 = vdot2CC8;
          real r31AE#3 = VIndex<3,0>(v3131);
          real r31AF#1 = RMul(r31AD,r31AE);
          real r31B0#3 = VIndex<3,1>(v3131);
          real r31B1#1 = RMul(r31AD,r31B0);
          real r31B2#3 = VIndex<3,2>(v3131);
          real r31B3#1 = RMul(r31AD,r31B2);
          tensor[3] tensor31B4#1 = <tensor[3]>[r31AF,r31B1,r31B3];
          real r31B5#3 = VIndex<3,0>(v3134);
          real r31B6#1 = RMul(r31AD,r31B5);
          real r31B7#3 = VIndex<3,1>(v3134);
          real r31B8#1 = RMul(r31AD,r31B7);
          real r31B9#3 = VIndex<3,2>(v3134);
          real r31BA#1 = RMul(r31AD,r31B9);
          tensor[3] tensor31BB#1 = <tensor[3]>[r31B6,r31B8,r31BA];
          real r31BC#3 = VIndex<3,0>(v3137);
          real r31BD#1 = RMul(r31AD,r31BC);
          real r31BE#3 = VIndex<3,1>(v3137);
          real r31BF#1 = RMul(r31AD,r31BE);
          real r31C0#3 = VIndex<3,2>(v3137);
          real r31C1#1 = RMul(r31AD,r31C0);
          tensor[3] tensor31C2#1 = <tensor[3]>[r31BD,r31BF,r31C1];
          real r31C4#9 = vdot2CCA;
          real r31C5#1 = RMul(r31C4,r31AE);
          real r31C6#1 = RMul(r31C4,r31B0);
          real r31C7#1 = RMul(r31C4,r31B2);
          tensor[3] tensor31C8#1 = <tensor[3]>[r31C5,r31C6,r31C7];
          real r31C9#1 = RMul(r31C4,r31B5);
          real r31CA#1 = RMul(r31C4,r31B7);
          real r31CB#1 = RMul(r31C4,r31B9);
          tensor[3] tensor31CC#1 = <tensor[3]>[r31C9,r31CA,r31CB];
          real r31CD#1 = RMul(r31C4,r31BC);
          real r31CE#1 = RMul(r31C4,r31BE);
          real r31CF#1 = RMul(r31C4,r31C0);
          tensor[3] tensor31D0#1 = <tensor[3]>[r31CD,r31CE,r31CF];
          real r31D2#9 = vdot2CCC;
          real r31D3#1 = RMul(r31D2,r31AE);
          real r31D4#1 = RMul(r31D2,r31B0);
          real r31D5#1 = RMul(r31D2,r31B2);
          tensor[3] tensor31D6#1 = <tensor[3]>[r31D3,r31D4,r31D5];
          real r31D7#1 = RMul(r31D2,r31B5);
          real r31D8#1 = RMul(r31D2,r31B7);
          real r31D9#1 = RMul(r31D2,r31B9);
          tensor[3] tensor31DA#1 = <tensor[3]>[r31D7,r31D8,r31D9];
          real r31DB#1 = RMul(r31D2,r31BC);
          real r31DC#1 = RMul(r31D2,r31BE);
          real r31DD#1 = RMul(r31D2,r31C0);
          tensor[3] tensor31DE#1 = <tensor[3]>[r31DB,r31DC,r31DD];
          tensor[3] projParam3216#1 = tensor314B;
          tensor[3] projParam3217#1 = tensor31B4;
          tensor[3] v3218#3 = VAdd<3>(projParam3216,projParam3217);
          tensor[3] projParam3219#1 = tensor3152;
          tensor[3] projParam321A#1 = tensor31C8;
          tensor[3] v321B#3 = VAdd<3>(projParam3219,projParam321A);
          tensor[3] projParam321C#1 = tensor3159;
          tensor[3] projParam321D#1 = tensor31D6;
          tensor[3] v321E#3 = VAdd<3>(projParam321C,projParam321D);
          tensor[3] projParam3220#1 = tensor315F;
          tensor[3] projParam3221#1 = tensor31BB;
          tensor[3] v3222#3 = VAdd<3>(projParam3220,projParam3221);
          tensor[3] projParam3223#1 = tensor3163;
          tensor[3] projParam3224#1 = tensor31CC;
          tensor[3] v3225#3 = VAdd<3>(projParam3223,projParam3224);
          tensor[3] projParam3226#1 = tensor3167;
          tensor[3] projParam3227#1 = tensor31DA;
          tensor[3] v3228#3 = VAdd<3>(projParam3226,projParam3227);
          tensor[3] projParam322A#1 = tensor316D;
          tensor[3] projParam322B#1 = tensor31C2;
          tensor[3] v322C#3 = VAdd<3>(projParam322A,projParam322B);
          tensor[3] projParam322D#1 = tensor3171;
          tensor[3] projParam322E#1 = tensor31D0;
          tensor[3] v322F#3 = VAdd<3>(projParam322D,projParam322E);
          tensor[3] projParam3230#1 = tensor3175;
          tensor[3] projParam3231#1 = tensor31DE;
          tensor[3] v3232#3 = VAdd<3>(projParam3230,projParam3231);
          real r3255#3 = vdot2CC8;
          real r3256#1 = r2DA1;
          real r3257#1 = RMul(r3255,r3256);
          real r3258#3 = vdot2CCA;
          real r3259#1 = r2DBA;
          real r325A#1 = RMul(r3258,r3259);
          real r325B#3 = vdot2CCC;
          real r325C#1 = r2DD3;
          real r325D#1 = RMul(r325B,r325C);
          real r325E#1 = RAdd(r3257,r325A);
          real r325F#1 = RAdd(r325E,r325D);
          real r3260#1 = r2DA9;
          real r3261#1 = RMul(r3255,r3260);
          real r3262#1 = r2DC2;
          real r3263#1 = RMul(r3258,r3262);
          real r3264#1 = r2DDB;
          real r3265#1 = RMul(r325B,r3264);
          real r3266#1 = RAdd(r3261,r3263);
          real r3267#1 = RAdd(r3266,r3265);
          real r3268#1 = r2DB1;
          real r3269#1 = RMul(r3255,r3268);
          real r326A#1 = r2DCA;
          real r326B#1 = RMul(r3258,r326A);
          real r326C#1 = r2DE3;
          real r326D#1 = RMul(r325B,r326C);
          real r326E#1 = RAdd(r3269,r326B);
          real r326F#1 = RAdd(r326E,r326D);
          tensor[3] op1_e3_l_413254#3 = <tensor[3]>[r325F,r3267,r326F];
          real r328E#3 = VIndex<3,0>(v3218);
          real r328F#3 = r2D02;
          real r3290#1 = RMul(r328E,r328F);
          real r3291#3 = VIndex<3,0>(v3222);
          real r3292#3 = r2D0C;
          real r3293#1 = RMul(r3291,r3292);
          real r3294#3 = VIndex<3,0>(v322C);
          real r3295#3 = r2D17;
          real r3296#1 = RMul(r3294,r3295);
          real r3297#3 = VIndex<3,0>(v321B);
          real r3298#3 = r2D22;
          real r3299#1 = RMul(r3297,r3298);
          real r329A#3 = VIndex<3,0>(v3225);
          real r329B#3 = r2D02;
          real r329C#1 = RMul(r329A,r329B);
          real r329D#3 = VIndex<3,0>(v322F);
          real r329E#3 = r2D2A;
          real r329F#1 = RMul(r329D,r329E);
          real r32A0#3 = VIndex<3,0>(v321E);
          real r32A1#3 = r2D35;
          real r32A2#1 = RMul(r32A0,r32A1);
          real r32A3#3 = VIndex<3,0>(v3228);
          real r32A4#3 = r2D3F;
          real r32A5#1 = RMul(r32A3,r32A4);
          real r32A6#3 = VIndex<3,0>(v3232);
          real r32A7#3 = r2D02;
          real r32A8#1 = RMul(r32A6,r32A7);
          real r32A9#1 = RAdd(r3290,r3293);
          real r32AA#1 = RAdd(r32A9,r3296);
          real r32AB#1 = RAdd(r32AA,r3299);
          real r32AC#1 = RAdd(r32AB,r329C);
          real r32AD#1 = RAdd(r32AC,r329F);
          real r32AE#1 = RAdd(r32AD,r32A2);
          real r32AF#1 = RAdd(r32AE,r32A5);
          real r32B0#1 = RAdd(r32AF,r32A8);
          real r32B1#3 = r2D05;
          real r32B2#1 = RMul(r328E,r32B1);
          real r32B3#3 = r2D0E;
          real r32B4#1 = RMul(r3291,r32B3);
          real r32B5#3 = r2D1B;
          real r32B6#1 = RMul(r3294,r32B5);
          real r32B7#3 = r2D24;
          real r32B8#1 = RMul(r3297,r32B7);
          real r32B9#3 = r2D05;
          real r32BA#1 = RMul(r329A,r32B9);
          real r32BB#3 = r2D2D;
          real r32BC#1 = RMul(r329D,r32BB);
          real r32BD#3 = r2D38;
          real r32BE#1 = RMul(r32A0,r32BD);
          real r32BF#3 = r2D42;
          real r32C0#1 = RMul(r32A3,r32BF);
          real r32C1#3 = r2D05;
          real r32C2#1 = RMul(r32A6,r32C1);
          real r32C3#1 = RAdd(r32B2,r32B4);
          real r32C4#1 = RAdd(r32C3,r32B6);
          real r32C5#1 = RAdd(r32C4,r32B8);
          real r32C6#1 = RAdd(r32C5,r32BA);
          real r32C7#1 = RAdd(r32C6,r32BC);
          real r32C8#1 = RAdd(r32C7,r32BE);
          real r32C9#1 = RAdd(r32C8,r32C0);
          real r32CA#1 = RAdd(r32C9,r32C2);
          real r32CB#3 = r2D08;
          real r32CC#1 = RMul(r328E,r32CB);
          real r32CD#3 = r2D11;
          real r32CE#1 = RMul(r3291,r32CD);
          real r32CF#3 = r2D1E;
          real r32D0#1 = RMul(r3294,r32CF);
          real r32D1#3 = r2D26;
          real r32D2#1 = RMul(r3297,r32D1);
          real r32D3#3 = r2D08;
          real r32D4#1 = RMul(r329A,r32D3);
          real r32D5#3 = r2D30;
          real r32D6#1 = RMul(r329D,r32D5);
          real r32D7#3 = r2D3B;
          real r32D8#1 = RMul(r32A0,r32D7);
          real r32D9#3 = r2D45;
          real r32DA#1 = RMul(r32A3,r32D9);
          real r32DB#3 = r2D08;
          real r32DC#1 = RMul(r32A6,r32DB);
          real r32DD#1 = RAdd(r32CC,r32CE);
          real r32DE#1 = RAdd(r32DD,r32D0);
          real r32DF#1 = RAdd(r32DE,r32D2);
          real r32E0#1 = RAdd(r32DF,r32D4);
          real r32E1#1 = RAdd(r32E0,r32D6);
          real r32E2#1 = RAdd(r32E1,r32D8);
          real r32E3#1 = RAdd(r32E2,r32DA);
          real r32E4#1 = RAdd(r32E3,r32DC);
          tensor[3] tensor32E5#1 = <tensor[3]>[r32B0,r32CA,r32E4];
          real r32E6#3 = VIndex<3,1>(v3218);
          real r32E7#1 = RMul(r32E6,r328F);
          real r32E8#3 = VIndex<3,1>(v3222);
          real r32E9#1 = RMul(r32E8,r3292);
          real r32EA#3 = VIndex<3,1>(v322C);
          real r32EB#1 = RMul(r32EA,r3295);
          real r32EC#3 = VIndex<3,1>(v321B);
          real r32ED#1 = RMul(r32EC,r3298);
          real r32EE#3 = VIndex<3,1>(v3225);
          real r32EF#1 = RMul(r32EE,r329B);
          real r32F0#3 = VIndex<3,1>(v322F);
          real r32F1#1 = RMul(r32F0,r329E);
          real r32F2#3 = VIndex<3,1>(v321E);
          real r32F3#1 = RMul(r32F2,r32A1);
          real r32F4#3 = VIndex<3,1>(v3228);
          real r32F5#1 = RMul(r32F4,r32A4);
          real r32F6#3 = VIndex<3,1>(v3232);
          real r32F7#1 = RMul(r32F6,r32A7);
          real r32F8#1 = RAdd(r32E7,r32E9);
          real r32F9#1 = RAdd(r32F8,r32EB);
          real r32FA#1 = RAdd(r32F9,r32ED);
          real r32FB#1 = RAdd(r32FA,r32EF);
          real r32FC#1 = RAdd(r32FB,r32F1);
          real r32FD#1 = RAdd(r32FC,r32F3);
          real r32FE#1 = RAdd(r32FD,r32F5);
          real r32FF#1 = RAdd(r32FE,r32F7);
          real r3300#1 = RMul(r32E6,r32B1);
          real r3301#1 = RMul(r32E8,r32B3);
          real r3302#1 = RMul(r32EA,r32B5);
          real r3303#1 = RMul(r32EC,r32B7);
          real r3304#1 = RMul(r32EE,r32B9);
          real r3305#1 = RMul(r32F0,r32BB);
          real r3306#1 = RMul(r32F2,r32BD);
          real r3307#1 = RMul(r32F4,r32BF);
          real r3308#1 = RMul(r32F6,r32C1);
          real r3309#1 = RAdd(r3300,r3301);
          real r330A#1 = RAdd(r3309,r3302);
          real r330B#1 = RAdd(r330A,r3303);
          real r330C#1 = RAdd(r330B,r3304);
          real r330D#1 = RAdd(r330C,r3305);
          real r330E#1 = RAdd(r330D,r3306);
          real r330F#1 = RAdd(r330E,r3307);
          real r3310#1 = RAdd(r330F,r3308);
          real r3311#1 = RMul(r32E6,r32CB);
          real r3312#1 = RMul(r32E8,r32CD);
          real r3313#1 = RMul(r32EA,r32CF);
          real r3314#1 = RMul(r32EC,r32D1);
          real r3315#1 = RMul(r32EE,r32D3);
          real r3316#1 = RMul(r32F0,r32D5);
          real r3317#1 = RMul(r32F2,r32D7);
          real r3318#1 = RMul(r32F4,r32D9);
          real r3319#1 = RMul(r32F6,r32DB);
          real r331A#1 = RAdd(r3311,r3312);
          real r331B#1 = RAdd(r331A,r3313);
          real r331C#1 = RAdd(r331B,r3314);
          real r331D#1 = RAdd(r331C,r3315);
          real r331E#1 = RAdd(r331D,r3316);
          real r331F#1 = RAdd(r331E,r3317);
          real r3320#1 = RAdd(r331F,r3318);
          real r3321#1 = RAdd(r3320,r3319);
          tensor[3] tensor3322#1 = <tensor[3]>[r32FF,r3310,r3321];
          real r3323#3 = VIndex<3,2>(v3218);
          real r3324#1 = RMul(r3323,r328F);
          real r3325#3 = VIndex<3,2>(v3222);
          real r3326#1 = RMul(r3325,r3292);
          real r3327#3 = VIndex<3,2>(v322C);
          real r3328#1 = RMul(r3327,r3295);
          real r3329#3 = VIndex<3,2>(v321B);
          real r332A#1 = RMul(r3329,r3298);
          real r332B#3 = VIndex<3,2>(v3225);
          real r332C#1 = RMul(r332B,r329B);
          real r332D#3 = VIndex<3,2>(v322F);
          real r332E#1 = RMul(r332D,r329E);
          real r332F#3 = VIndex<3,2>(v321E);
          real r3330#1 = RMul(r332F,r32A1);
          real r3331#3 = VIndex<3,2>(v3228);
          real r3332#1 = RMul(r3331,r32A4);
          real r3333#3 = VIndex<3,2>(v3232);
          real r3334#1 = RMul(r3333,r32A7);
          real r3335#1 = RAdd(r3324,r3326);
          real r3336#1 = RAdd(r3335,r3328);
          real r3337#1 = RAdd(r3336,r332A);
          real r3338#1 = RAdd(r3337,r332C);
          real r3339#1 = RAdd(r3338,r332E);
          real r333A#1 = RAdd(r3339,r3330);
          real r333B#1 = RAdd(r333A,r3332);
          real r333C#1 = RAdd(r333B,r3334);
          real r333D#1 = RMul(r3323,r32B1);
          real r333E#1 = RMul(r3325,r32B3);
          real r333F#1 = RMul(r3327,r32B5);
          real r3340#1 = RMul(r3329,r32B7);
          real r3341#1 = RMul(r332B,r32B9);
          real r3342#1 = RMul(r332D,r32BB);
          real r3343#1 = RMul(r332F,r32BD);
          real r3344#1 = RMul(r3331,r32BF);
          real r3345#1 = RMul(r3333,r32C1);
          real r3346#1 = RAdd(r333D,r333E);
          real r3347#1 = RAdd(r3346,r333F);
          real r3348#1 = RAdd(r3347,r3340);
          real r3349#1 = RAdd(r3348,r3341);
          real r334A#1 = RAdd(r3349,r3342);
          real r334B#1 = RAdd(r334A,r3343);
          real r334C#1 = RAdd(r334B,r3344);
          real r334D#1 = RAdd(r334C,r3345);
          real r334E#1 = RMul(r3323,r32CB);
          real r334F#1 = RMul(r3325,r32CD);
          real r3350#1 = RMul(r3327,r32CF);
          real r3351#1 = RMul(r3329,r32D1);
          real r3352#1 = RMul(r332B,r32D3);
          real r3353#1 = RMul(r332D,r32D5);
          real r3354#1 = RMul(r332F,r32D7);
          real r3355#1 = RMul(r3331,r32D9);
          real r3356#1 = RMul(r3333,r32DB);
          real r3357#1 = RAdd(r334E,r334F);
          real r3358#1 = RAdd(r3357,r3350);
          real r3359#1 = RAdd(r3358,r3351);
          real r335A#1 = RAdd(r3359,r3352);
          real r335B#1 = RAdd(r335A,r3353);
          real r335C#1 = RAdd(r335B,r3354);
          real r335D#1 = RAdd(r335C,r3355);
          real r335E#1 = RAdd(r335D,r3356);
          tensor[3] tensor335F#1 = <tensor[3]>[r333C,r334D,r335E];
          tensor[3] projParam3435#1 = tensor32E5;
          real vdot3436#1 = VDot<3>(op1_e3_l_413254,projParam3435);
          tensor[3] projParam3437#1 = tensor3322;
          real vdot3438#1 = VDot<3>(op1_e3_l_413254,projParam3437);
          tensor[3] projParam3439#1 = tensor335F;
          real vdot343A#1 = VDot<3>(op1_e3_l_413254,projParam3439);
          tensor[3] op1_e3_l_673434#2 = <tensor[3]>[vdot3436,vdot3438,vdot343A];
          tensor[3] op1_e3_l_1193443#2 = VAdd<3>(op1_e3_l_673434,op1_e3_l_673434);
          real op1_e3_l_1213446#1 = VDot<3>(op1_e3_l_1193443,op1_e3_l_1193443);
          real _t3449#1 = Sqrt(op1_e3_l_1213446);
          real _t344C#1 = 0.1e-7;
          bool _t344E#1 = GT<real>(_t3449,_t344C);
          if _t344E then goto ASSIGN3452 else goto ASSIGN5396
        ASSIGN3452:  preds = [COND3450]
          bool _t3451#1 = true;
          goto JOIN3455
        JOIN3455:  preds = [ASSIGN3452,ASSIGN5396]
          bool _t3453#1 = phi(_t3451,_t3454)
          goto JOIN3458
        JOIN3458:  preds = [JOIN3455,ASSIGN5397]
          bool _t3456#1 = phi(_t3453,_t3457)
          goto JOIN345B
        JOIN345B:  preds = [JOIN3458,ASSIGN5398]
          bool _t3459#1 = phi(_t3456,_t345A)
          goto JOIN345E
        JOIN345E:  preds = [JOIN345B,ASSIGN5399]
          bool _t345C#1 = phi(_t3459,_t345D)
          bool _t345F#1 = BNot(_t345C);
          if _t345F then goto SAVE3462 else goto JOIN3464
        SAVE3462:  preds = [COND3461]
          self.rayN = rayN243D;
          active
          goto JOIN3464
        JOIN3464:  preds = [*ACTIVE3463,COND3461]
          real _t3465#8 = 0.e0;
          real _t3467#13 = 0.1e1;
          real _t3469#1 = 0.15e1;
          int ilit346C#1 = 84;
          int mulRes346D#84 = IMul(_t2401,ilit346C);
          int addRes346F#1 = mulRes346D;
          int idx3470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes346F);
          int ilit3471#1 = 1;
          int addRes3472#1 = IAdd(mulRes346D,ilit3471);
          int idx3473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3472);
          int ilit3474#1 = 2;
          int addRes3475#1 = IAdd(mulRes346D,ilit3474);
          int idx3476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3475);
          int ilit3477#1 = 3;
          int addRes3478#1 = IAdd(mulRes346D,ilit3477);
          int idx3479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3478);
          int ilit347A#1 = 4;
          int addRes347B#1 = IAdd(mulRes346D,ilit347A);
          int idx347C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347B);
          int ilit347D#1 = 5;
          int addRes347E#1 = IAdd(mulRes346D,ilit347D);
          int idx347F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347E);
          int ilit3480#1 = 6;
          int addRes3481#1 = IAdd(mulRes346D,ilit3480);
          int idx3482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3481);
          int ilit3483#1 = 7;
          int addRes3484#1 = IAdd(mulRes346D,ilit3483);
          int idx3485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3484);
          int ilit3486#1 = 8;
          int addRes3487#1 = IAdd(mulRes346D,ilit3486);
          int idx3488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3487);
          int ilit3489#1 = 9;
          int addRes348A#1 = IAdd(mulRes346D,ilit3489);
          int idx348B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348A);
          int ilit348C#1 = 10;
          int addRes348D#1 = IAdd(mulRes346D,ilit348C);
          int idx348E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348D);
          int ilit348F#1 = 11;
          int addRes3490#1 = IAdd(mulRes346D,ilit348F);
          int idx3491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3490);
          int ilit3492#1 = 12;
          int addRes3493#1 = IAdd(mulRes346D,ilit3492);
          int idx3494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3493);
          int ilit3495#1 = 13;
          int addRes3496#1 = IAdd(mulRes346D,ilit3495);
          int idx3497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3496);
          int ilit3498#1 = 14;
          int addRes3499#1 = IAdd(mulRes346D,ilit3498);
          int idx349A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3499);
          int ilit349B#1 = 15;
          int addRes349C#1 = IAdd(mulRes346D,ilit349B);
          int idx349D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349C);
          int ilit349E#1 = 16;
          int addRes349F#1 = IAdd(mulRes346D,ilit349E);
          int idx34A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349F);
          int ilit34A1#1 = 17;
          int addRes34A2#1 = IAdd(mulRes346D,ilit34A1);
          int idx34A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A2);
          int ilit34A4#1 = 18;
          int addRes34A5#1 = IAdd(mulRes346D,ilit34A4);
          int idx34A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A5);
          int ilit34A7#1 = 19;
          int addRes34A8#1 = IAdd(mulRes346D,ilit34A7);
          int idx34A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A8);
          int ilit34AA#1 = 20;
          int addRes34AB#1 = IAdd(mulRes346D,ilit34AA);
          int idx34AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AB);
          int ilit34AD#1 = 21;
          int addRes34AE#1 = IAdd(mulRes346D,ilit34AD);
          int idx34AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AE);
          int ilit34B0#1 = 22;
          int addRes34B1#1 = IAdd(mulRes346D,ilit34B0);
          int idx34B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B1);
          int ilit34B3#1 = 23;
          int addRes34B4#1 = IAdd(mulRes346D,ilit34B3);
          int idx34B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B4);
          int ilit34B6#1 = 24;
          int addRes34B7#1 = IAdd(mulRes346D,ilit34B6);
          int idx34B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B7);
          int ilit34B9#1 = 25;
          int addRes34BA#1 = IAdd(mulRes346D,ilit34B9);
          int idx34BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BA);
          int ilit34BC#1 = 26;
          int addRes34BD#1 = IAdd(mulRes346D,ilit34BC);
          int idx34BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BD);
          int ilit34BF#1 = 27;
          int addRes34C0#1 = IAdd(mulRes346D,ilit34BF);
          int idx34C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C0);
          int ilit34C2#1 = 28;
          int addRes34C3#1 = IAdd(mulRes346D,ilit34C2);
          int idx34C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C3);
          int ilit34C5#1 = 29;
          int addRes34C6#1 = IAdd(mulRes346D,ilit34C5);
          int idx34C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C6);
          int ilit34C8#1 = 30;
          int addRes34C9#1 = IAdd(mulRes346D,ilit34C8);
          int idx34CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C9);
          int ilit34CB#1 = 31;
          int addRes34CC#1 = IAdd(mulRes346D,ilit34CB);
          int idx34CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CC);
          int ilit34CE#1 = 32;
          int addRes34CF#1 = IAdd(mulRes346D,ilit34CE);
          int idx34D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CF);
          int ilit34D1#1 = 33;
          int addRes34D2#1 = IAdd(mulRes346D,ilit34D1);
          int idx34D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D2);
          int ilit34D4#1 = 34;
          int addRes34D5#1 = IAdd(mulRes346D,ilit34D4);
          int idx34D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D5);
          int ilit34D7#1 = 35;
          int addRes34D8#1 = IAdd(mulRes346D,ilit34D7);
          int idx34D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D8);
          int ilit34DA#1 = 36;
          int addRes34DB#1 = IAdd(mulRes346D,ilit34DA);
          int idx34DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DB);
          int ilit34DD#1 = 37;
          int addRes34DE#1 = IAdd(mulRes346D,ilit34DD);
          int idx34DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DE);
          int ilit34E0#1 = 38;
          int addRes34E1#1 = IAdd(mulRes346D,ilit34E0);
          int idx34E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E1);
          int ilit34E3#1 = 39;
          int addRes34E4#1 = IAdd(mulRes346D,ilit34E3);
          int idx34E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E4);
          int ilit34E6#1 = 40;
          int addRes34E7#1 = IAdd(mulRes346D,ilit34E6);
          int idx34E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E7);
          int ilit34E9#1 = 41;
          int addRes34EA#1 = IAdd(mulRes346D,ilit34E9);
          int idx34EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34EA);
          int ilit34EC#1 = 42;
          int addRes34ED#1 = IAdd(mulRes346D,ilit34EC);
          int idx34EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34ED);
          int ilit34EF#1 = 43;
          int addRes34F0#1 = IAdd(mulRes346D,ilit34EF);
          int idx34F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F0);
          int ilit34F2#1 = 44;
          int addRes34F3#1 = IAdd(mulRes346D,ilit34F2);
          int idx34F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F3);
          int ilit34F5#1 = 45;
          int addRes34F6#1 = IAdd(mulRes346D,ilit34F5);
          int idx34F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F6);
          int ilit34F8#1 = 46;
          int addRes34F9#1 = IAdd(mulRes346D,ilit34F8);
          int idx34FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F9);
          int ilit34FB#1 = 47;
          int addRes34FC#1 = IAdd(mulRes346D,ilit34FB);
          int idx34FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FC);
          int ilit34FE#1 = 48;
          int addRes34FF#1 = IAdd(mulRes346D,ilit34FE);
          int idx3500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FF);
          int ilit3501#1 = 49;
          int addRes3502#1 = IAdd(mulRes346D,ilit3501);
          int idx3503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3502);
          int ilit3504#1 = 50;
          int addRes3505#1 = IAdd(mulRes346D,ilit3504);
          int idx3506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3505);
          int ilit3507#1 = 51;
          int addRes3508#1 = IAdd(mulRes346D,ilit3507);
          int idx3509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3508);
          int ilit350A#1 = 52;
          int addRes350B#1 = IAdd(mulRes346D,ilit350A);
          int idx350C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350B);
          int ilit350D#1 = 53;
          int addRes350E#1 = IAdd(mulRes346D,ilit350D);
          int idx350F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350E);
          int ilit3510#1 = 54;
          int addRes3511#1 = IAdd(mulRes346D,ilit3510);
          int idx3512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3511);
          int ilit3513#1 = 55;
          int addRes3514#1 = IAdd(mulRes346D,ilit3513);
          int idx3515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3514);
          int ilit3516#1 = 56;
          int addRes3517#1 = IAdd(mulRes346D,ilit3516);
          int idx3518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3517);
          int ilit3519#1 = 57;
          int addRes351A#1 = IAdd(mulRes346D,ilit3519);
          int idx351B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351A);
          int ilit351C#1 = 58;
          int addRes351D#1 = IAdd(mulRes346D,ilit351C);
          int idx351E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351D);
          int ilit351F#1 = 59;
          int addRes3520#1 = IAdd(mulRes346D,ilit351F);
          int idx3521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3520);
          int ilit3522#1 = 60;
          int addRes3523#1 = IAdd(mulRes346D,ilit3522);
          int idx3524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3523);
          int ilit3525#1 = 61;
          int addRes3526#1 = IAdd(mulRes346D,ilit3525);
          int idx3527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3526);
          int ilit3528#1 = 62;
          int addRes3529#1 = IAdd(mulRes346D,ilit3528);
          int idx352A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3529);
          int ilit352B#1 = 63;
          int addRes352C#1 = IAdd(mulRes346D,ilit352B);
          int idx352D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352C);
          int ilit352E#1 = 64;
          int addRes352F#1 = IAdd(mulRes346D,ilit352E);
          int idx3530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352F);
          int ilit3531#1 = 65;
          int addRes3532#1 = IAdd(mulRes346D,ilit3531);
          int idx3533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3532);
          int ilit3534#1 = 66;
          int addRes3535#1 = IAdd(mulRes346D,ilit3534);
          int idx3536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3535);
          int ilit3537#1 = 67;
          int addRes3538#1 = IAdd(mulRes346D,ilit3537);
          int idx3539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3538);
          int ilit353A#1 = 68;
          int addRes353B#1 = IAdd(mulRes346D,ilit353A);
          int idx353C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353B);
          int ilit353D#1 = 69;
          int addRes353E#1 = IAdd(mulRes346D,ilit353D);
          int idx353F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353E);
          int ilit3540#1 = 70;
          int addRes3541#1 = IAdd(mulRes346D,ilit3540);
          int idx3542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3541);
          int ilit3543#1 = 71;
          int addRes3544#1 = IAdd(mulRes346D,ilit3543);
          int idx3545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3544);
          int ilit3546#1 = 72;
          int addRes3547#1 = IAdd(mulRes346D,ilit3546);
          int idx3548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3547);
          int ilit3549#1 = 73;
          int addRes354A#1 = IAdd(mulRes346D,ilit3549);
          int idx354B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354A);
          int ilit354C#1 = 74;
          int addRes354D#1 = IAdd(mulRes346D,ilit354C);
          int idx354E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354D);
          int ilit354F#1 = 75;
          int addRes3550#1 = IAdd(mulRes346D,ilit354F);
          int idx3551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3550);
          int ilit3552#1 = 76;
          int addRes3553#1 = IAdd(mulRes346D,ilit3552);
          int idx3554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3553);
          int ilit3555#1 = 77;
          int addRes3556#1 = IAdd(mulRes346D,ilit3555);
          int idx3557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3556);
          int ilit3558#1 = 78;
          int addRes3559#1 = IAdd(mulRes346D,ilit3558);
          int idx355A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3559);
          int ilit355B#1 = 79;
          int addRes355C#1 = IAdd(mulRes346D,ilit355B);
          int idx355D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355C);
          int ilit355E#1 = 80;
          int addRes355F#1 = IAdd(mulRes346D,ilit355E);
          int idx3560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355F);
          int ilit3561#1 = 81;
          int addRes3562#1 = IAdd(mulRes346D,ilit3561);
          int idx3563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3562);
          int ilit3564#1 = 82;
          int addRes3565#1 = IAdd(mulRes346D,ilit3564);
          int idx3566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3565);
          int ilit3567#1 = 83;
          int addRes3568#1 = IAdd(mulRes346D,ilit3567);
          int idx3569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3568);
          int ilit366C#84 = 1;
          int idx366E#1 = idx3470;
          int mulRes366F#1 = IMul(ilit366C,idx366E);
          int idx3670#1 = idx3473;
          int mulRes3671#1 = IMul(ilit366C,idx3670);
          int idx3673#1 = idx3476;
          int mulRes3674#1 = IMul(ilit366C,idx3673);
          int idx3676#1 = idx3479;
          int mulRes3677#1 = IMul(ilit366C,idx3676);
          int idx3679#1 = idx347C;
          int mulRes367A#1 = IMul(ilit366C,idx3679);
          int idx367C#1 = idx347F;
          int mulRes367D#1 = IMul(ilit366C,idx367C);
          int idx367F#1 = idx3482;
          int mulRes3680#1 = IMul(ilit366C,idx367F);
          int idx3682#1 = idx3485;
          int mulRes3683#1 = IMul(ilit366C,idx3682);
          int idx3685#1 = idx3488;
          int mulRes3686#1 = IMul(ilit366C,idx3685);
          int idx3688#1 = idx348B;
          int mulRes3689#1 = IMul(ilit366C,idx3688);
          int idx368B#1 = idx348E;
          int mulRes368C#1 = IMul(ilit366C,idx368B);
          int idx368E#1 = idx3491;
          int mulRes368F#1 = IMul(ilit366C,idx368E);
          int idx3691#1 = idx3494;
          int mulRes3692#1 = IMul(ilit366C,idx3691);
          int idx3694#1 = idx3497;
          int mulRes3695#1 = IMul(ilit366C,idx3694);
          int idx3697#1 = idx349A;
          int mulRes3698#1 = IMul(ilit366C,idx3697);
          int idx369A#1 = idx349D;
          int mulRes369B#1 = IMul(ilit366C,idx369A);
          int idx369D#1 = idx34A0;
          int mulRes369E#1 = IMul(ilit366C,idx369D);
          int idx36A0#1 = idx34A3;
          int mulRes36A1#1 = IMul(ilit366C,idx36A0);
          int idx36A3#1 = idx34A6;
          int mulRes36A4#1 = IMul(ilit366C,idx36A3);
          int idx36A6#1 = idx34A9;
          int mulRes36A7#1 = IMul(ilit366C,idx36A6);
          int idx36A9#1 = idx34AC;
          int mulRes36AA#1 = IMul(ilit366C,idx36A9);
          int idx36AC#1 = idx34AF;
          int mulRes36AD#1 = IMul(ilit366C,idx36AC);
          int idx36AF#1 = idx34B2;
          int mulRes36B0#1 = IMul(ilit366C,idx36AF);
          int idx36B2#1 = idx34B5;
          int mulRes36B3#1 = IMul(ilit366C,idx36B2);
          int idx36B5#1 = idx34B8;
          int mulRes36B6#1 = IMul(ilit366C,idx36B5);
          int idx36B8#1 = idx34BB;
          int mulRes36B9#1 = IMul(ilit366C,idx36B8);
          int idx36BB#1 = idx34BE;
          int mulRes36BC#1 = IMul(ilit366C,idx36BB);
          int idx36BE#1 = idx34C1;
          int mulRes36BF#1 = IMul(ilit366C,idx36BE);
          int idx36C1#1 = idx34C4;
          int mulRes36C2#1 = IMul(ilit366C,idx36C1);
          int idx36C4#1 = idx34C7;
          int mulRes36C5#1 = IMul(ilit366C,idx36C4);
          int idx36C7#1 = idx34CA;
          int mulRes36C8#1 = IMul(ilit366C,idx36C7);
          int idx36CA#1 = idx34CD;
          int mulRes36CB#1 = IMul(ilit366C,idx36CA);
          int idx36CD#1 = idx34D0;
          int mulRes36CE#1 = IMul(ilit366C,idx36CD);
          int idx36D0#1 = idx34D3;
          int mulRes36D1#1 = IMul(ilit366C,idx36D0);
          int idx36D3#1 = idx34D6;
          int mulRes36D4#1 = IMul(ilit366C,idx36D3);
          int idx36D6#1 = idx34D9;
          int mulRes36D7#1 = IMul(ilit366C,idx36D6);
          int idx36D9#1 = idx34DC;
          int mulRes36DA#1 = IMul(ilit366C,idx36D9);
          int idx36DC#1 = idx34DF;
          int mulRes36DD#1 = IMul(ilit366C,idx36DC);
          int idx36DF#1 = idx34E2;
          int mulRes36E0#1 = IMul(ilit366C,idx36DF);
          int idx36E2#1 = idx34E5;
          int mulRes36E3#1 = IMul(ilit366C,idx36E2);
          int idx36E5#1 = idx34E8;
          int mulRes36E6#1 = IMul(ilit366C,idx36E5);
          int idx36E8#1 = idx34EB;
          int mulRes36E9#1 = IMul(ilit366C,idx36E8);
          int idx36EB#1 = idx34EE;
          int mulRes36EC#1 = IMul(ilit366C,idx36EB);
          int idx36EE#1 = idx34F1;
          int mulRes36EF#1 = IMul(ilit366C,idx36EE);
          int idx36F1#1 = idx34F4;
          int mulRes36F2#1 = IMul(ilit366C,idx36F1);
          int idx36F4#1 = idx34F7;
          int mulRes36F5#1 = IMul(ilit366C,idx36F4);
          int idx36F7#1 = idx34FA;
          int mulRes36F8#1 = IMul(ilit366C,idx36F7);
          int idx36FA#1 = idx34FD;
          int mulRes36FB#1 = IMul(ilit366C,idx36FA);
          int idx36FD#1 = idx3500;
          int mulRes36FE#1 = IMul(ilit366C,idx36FD);
          int idx3700#1 = idx3503;
          int mulRes3701#1 = IMul(ilit366C,idx3700);
          int idx3703#1 = idx3506;
          int mulRes3704#1 = IMul(ilit366C,idx3703);
          int idx3706#1 = idx3509;
          int mulRes3707#1 = IMul(ilit366C,idx3706);
          int idx3709#1 = idx350C;
          int mulRes370A#1 = IMul(ilit366C,idx3709);
          int idx370C#1 = idx350F;
          int mulRes370D#1 = IMul(ilit366C,idx370C);
          int idx370F#1 = idx3512;
          int mulRes3710#1 = IMul(ilit366C,idx370F);
          int idx3712#1 = idx3515;
          int mulRes3713#1 = IMul(ilit366C,idx3712);
          int idx3715#1 = idx3518;
          int mulRes3716#1 = IMul(ilit366C,idx3715);
          int idx3718#1 = idx351B;
          int mulRes3719#1 = IMul(ilit366C,idx3718);
          int idx371B#1 = idx351E;
          int mulRes371C#1 = IMul(ilit366C,idx371B);
          int idx371E#1 = idx3521;
          int mulRes371F#1 = IMul(ilit366C,idx371E);
          int idx3721#1 = idx3524;
          int mulRes3722#1 = IMul(ilit366C,idx3721);
          int idx3724#1 = idx3527;
          int mulRes3725#1 = IMul(ilit366C,idx3724);
          int idx3727#1 = idx352A;
          int mulRes3728#1 = IMul(ilit366C,idx3727);
          int idx372A#1 = idx352D;
          int mulRes372B#1 = IMul(ilit366C,idx372A);
          int idx372D#1 = idx3530;
          int mulRes372E#1 = IMul(ilit366C,idx372D);
          int idx3730#1 = idx3533;
          int mulRes3731#1 = IMul(ilit366C,idx3730);
          int idx3733#1 = idx3536;
          int mulRes3734#1 = IMul(ilit366C,idx3733);
          int idx3736#1 = idx3539;
          int mulRes3737#1 = IMul(ilit366C,idx3736);
          int idx3739#1 = idx353C;
          int mulRes373A#1 = IMul(ilit366C,idx3739);
          int idx373C#1 = idx353F;
          int mulRes373D#1 = IMul(ilit366C,idx373C);
          int idx373F#1 = idx3542;
          int mulRes3740#1 = IMul(ilit366C,idx373F);
          int idx3742#1 = idx3545;
          int mulRes3743#1 = IMul(ilit366C,idx3742);
          int idx3745#1 = idx3548;
          int mulRes3746#1 = IMul(ilit366C,idx3745);
          int idx3748#1 = idx354B;
          int mulRes3749#1 = IMul(ilit366C,idx3748);
          int idx374B#1 = idx354E;
          int mulRes374C#1 = IMul(ilit366C,idx374B);
          int idx374E#1 = idx3551;
          int mulRes374F#1 = IMul(ilit366C,idx374E);
          int idx3751#1 = idx3554;
          int mulRes3752#1 = IMul(ilit366C,idx3751);
          int idx3754#1 = idx3557;
          int mulRes3755#1 = IMul(ilit366C,idx3754);
          int idx3757#1 = idx355A;
          int mulRes3758#1 = IMul(ilit366C,idx3757);
          int idx375A#1 = idx355D;
          int mulRes375B#1 = IMul(ilit366C,idx375A);
          int idx375D#1 = idx3560;
          int mulRes375E#1 = IMul(ilit366C,idx375D);
          int idx3760#1 = idx3563;
          int mulRes3761#1 = IMul(ilit366C,idx3760);
          int idx3763#1 = idx3566;
          int mulRes3764#1 = IMul(ilit366C,idx3763);
          int idx3766#1 = idx3569;
          int mulRes3767#1 = IMul(ilit366C,idx3766);
          real dof3768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes366F);
          real dof3769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3671);
          real dof376A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3674);
          real dof376B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3677);
          real dof376C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367A);
          real dof376D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367D);
          real dof376E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3680);
          real dof376F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3683);
          real dof3770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3686);
          real dof3771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3689);
          real dof3772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368C);
          real dof3773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368F);
          real dof3774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3692);
          real dof3775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3695);
          real dof3776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3698);
          real dof3777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369B);
          real dof3778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369E);
          real dof3779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A1);
          real dof377A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A4);
          real dof377B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A7);
          real dof377C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AA);
          real dof377D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AD);
          real dof377E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B0);
          real dof377F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B3);
          real dof3780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B6);
          real dof3781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B9);
          real dof3782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BC);
          real dof3783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BF);
          real dof3784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C2);
          real dof3785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C5);
          real dof3786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C8);
          real dof3787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CB);
          real dof3788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CE);
          real dof3789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D1);
          real dof378A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D4);
          real dof378B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D7);
          real dof378C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DA);
          real dof378D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DD);
          real dof378E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E0);
          real dof378F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E3);
          real dof3790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E6);
          real dof3791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E9);
          real dof3792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EC);
          real dof3793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EF);
          real dof3794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F2);
          real dof3795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F5);
          real dof3796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F8);
          real dof3797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FB);
          real dof3798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FE);
          real dof3799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3701);
          real dof379A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3704);
          real dof379B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3707);
          real dof379C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370A);
          real dof379D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370D);
          real dof379E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3710);
          real dof379F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3713);
          real dof37A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3716);
          real dof37A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3719);
          real dof37A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371C);
          real dof37A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371F);
          real dof37A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3722);
          real dof37A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3725);
          real dof37A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3728);
          real dof37A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372B);
          real dof37A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372E);
          real dof37A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3731);
          real dof37AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3734);
          real dof37AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3737);
          real dof37AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373A);
          real dof37AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373D);
          real dof37AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3740);
          real dof37AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3743);
          real dof37B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3746);
          real dof37B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3749);
          real dof37B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374C);
          real dof37B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374F);
          real dof37B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3752);
          real dof37B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3755);
          real dof37B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3758);
          real dof37B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375B);
          real dof37B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375E);
          real dof37B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3761);
          real dof37BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3764);
          real dof37BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3767);
          tensor[84] dofs37BC#1 = <tensor[84]>[dof3768,dof3769,dof376A,dof376B,dof376C,dof376D,dof376E,dof376F,dof3770,dof3771,dof3772,dof3773,dof3774,dof3775,dof3776,dof3777,dof3778,dof3779,dof377A,dof377B,dof377C,dof377D,dof377E,dof377F,dof3780,dof3781,dof3782,dof3783,dof3784,dof3785,dof3786,dof3787,dof3788,dof3789,dof378A,dof378B,dof378C,dof378D,dof378E,dof378F,dof3790,dof3791,dof3792,dof3793,dof3794,dof3795,dof3796,dof3797,dof3798,dof3799,dof379A,dof379B,dof379C,dof379D,dof379E,dof379F,dof37A0,dof37A1,dof37A2,dof37A3,dof37A4,dof37A5,dof37A6,dof37A7,dof37A8,dof37A9,dof37AA,dof37AB,dof37AC,dof37AD,dof37AE,dof37AF,dof37B0,dof37B1,dof37B2,dof37B3,dof37B4,dof37B5,dof37B6,dof37B7,dof37B8,dof37B9,dof37BA,dof37BB];
          tensor[84] femDofs366B#40 = dofs37BC;
          real varAcc3910#5 = VIndex<3,0>(pos2449);
          real varAcc3911#5 = VIndex<3,1>(pos2449);
          real varAcc3912#5 = VIndex<3,2>(pos2449);
          real basisEval3913#84 = 0.e0;
          real coeff3914#79 = 0.1e1;
          real prod3915#6 = RMul(coeff3914,coeff3914);
          real prod3916#1 = RMul(coeff3914,prod3915);
          real basisEval3917#3 = RMul(coeff3914,prod3916);
          real iden3918#6 = varAcc3912;
          real prod3919#5 = RMul(coeff3914,iden3918);
          real prod391A#2 = RMul(coeff3914,prod3919);
          real basisEval391B#2 = RMul(coeff3914,prod391A);
          real iden391C#6 = varAcc3911;
          real prod391D#5 = RMul(iden391C,coeff3914);
          real prod391E#2 = RMul(coeff3914,prod391D);
          real basisEval391F#2 = RMul(coeff3914,prod391E);
          real coeff3920#34 = 0.2e1;
          real iden3921#16 = varAcc3910;
          real prod3922#2 = RMul(iden3921,prod3915);
          real basisEval3923#1 = RMul(coeff3920,prod3922);
          real prod23924#5 = RMul(iden3918,varAcc3912);
          real prod3925#4 = RMul(coeff3914,prod23924);
          real prod3926#2 = RMul(coeff3914,prod3925);
          real basisEval3927#2 = RMul(coeff3914,prod3926);
          real prod3928#4 = RMul(iden391C,iden3918);
          real prod3929#2 = RMul(coeff3914,prod3928);
          real basisEval392A#1 = RMul(coeff3914,prod3929);
          real prod2392B#5 = RMul(iden391C,varAcc3911);
          real prod392C#4 = RMul(prod2392B,coeff3914);
          real prod392D#2 = RMul(coeff3914,prod392C);
          real basisEval392E#2 = RMul(coeff3914,prod392D);
          real prod392F#2 = RMul(iden3921,prod3919);
          real basisEval3930#2 = RMul(coeff3920,prod392F);
          real prod3931#2 = RMul(iden3921,prod391D);
          real basisEval3932#2 = RMul(coeff3920,prod3931);
          real coeff3933#24 = 0.3e1;
          real prod23934#11 = RMul(iden3921,varAcc3910);
          real prod3935#2 = RMul(prod23934,prod3915);
          real basisEval3936#1 = RMul(coeff3933,prod3935);
          real prod33937#4 = RMul(prod23924,varAcc3912);
          real prod3938#3 = RMul(coeff3914,prod33937);
          real prod3939#2 = RMul(coeff3914,prod3938);
          real basisEval393A#2 = RMul(coeff3914,prod3939);
          real prod393B#3 = RMul(iden391C,prod23924);
          real prod393C#3 = RMul(coeff3914,prod393B);
          real basisEval393D#1 = RMul(coeff3914,prod393C);
          real prod393E#3 = RMul(prod2392B,iden3918);
          real prod393F#3 = RMul(coeff3914,prod393E);
          real basisEval3940#1 = RMul(coeff3914,prod393F);
          real prod33941#4 = RMul(prod2392B,varAcc3911);
          real prod3942#3 = RMul(prod33941,coeff3914);
          real prod3943#2 = RMul(coeff3914,prod3942);
          real basisEval3944#2 = RMul(coeff3914,prod3943);
          real prod3945#3 = RMul(iden3921,prod3925);
          real basisEval3946#1 = RMul(coeff3920,prod3945);
          real prod3947#1 = RMul(iden3921,prod3928);
          real basisEval3948#3 = RMul(coeff3920,prod3947);
          real prod3949#3 = RMul(iden3921,prod392C);
          real basisEval394A#1 = RMul(coeff3920,prod3949);
          real prod394B#3 = RMul(prod23934,prod3919);
          real basisEval394C#1 = RMul(coeff3933,prod394B);
          real prod394D#3 = RMul(prod23934,prod391D);
          real basisEval394E#1 = RMul(coeff3933,prod394D);
          real coeff394F#18 = 0.4e1;
          real prod33950#7 = RMul(prod23934,varAcc3910);
          real prod3951#2 = RMul(prod33950,prod3915);
          real basisEval3952#1 = RMul(coeff394F,prod3951);
          real prod43953#3 = RMul(prod33937,varAcc3912);
          real prod3954#2 = RMul(coeff3914,prod43953);
          real prod3955#2 = RMul(coeff3914,prod3954);
          real basisEval3956#2 = RMul(coeff3914,prod3955);
          real prod3957#2 = RMul(iden391C,prod33937);
          real prod3958#3 = RMul(coeff3914,prod3957);
          real basisEval3959#1 = RMul(coeff3914,prod3958);
          real prod395A#2 = RMul(prod2392B,prod23924);
          real prod395B#2 = RMul(coeff3914,prod395A);
          real basisEval395C#1 = RMul(coeff3914,prod395B);
          real prod395D#2 = RMul(prod33941,iden3918);
          real prod395E#3 = RMul(coeff3914,prod395D);
          real basisEval395F#1 = RMul(coeff3914,prod395E);
          real prod43960#3 = RMul(prod33941,varAcc3911);
          real prod3961#2 = RMul(prod43960,coeff3914);
          real prod3962#2 = RMul(coeff3914,prod3961);
          real basisEval3963#2 = RMul(coeff3914,prod3962);
          real prod3964#3 = RMul(iden3921,prod3938);
          real basisEval3965#1 = RMul(coeff3920,prod3964);
          real prod3966#2 = RMul(iden3921,prod393B);
          real basisEval3967#2 = RMul(coeff3920,prod3966);
          real prod3968#2 = RMul(iden3921,prod393E);
          real basisEval3969#2 = RMul(coeff3920,prod3968);
          real prod396A#3 = RMul(iden3921,prod3942);
          real basisEval396B#1 = RMul(coeff3920,prod396A);
          real prod396C#2 = RMul(prod23934,prod3925);
          real basisEval396D#2 = RMul(coeff3933,prod396C);
          real prod396E#2 = RMul(prod23934,prod3928);
          real basisEval396F#1 = RMul(coeff3933,prod396E);
          real prod3970#2 = RMul(prod23934,prod392C);
          real basisEval3971#2 = RMul(coeff3933,prod3970);
          real prod3972#3 = RMul(prod33950,prod3919);
          real basisEval3973#1 = RMul(coeff394F,prod3972);
          real prod3974#3 = RMul(prod33950,prod391D);
          real basisEval3975#1 = RMul(coeff394F,prod3974);
          real coeff3976#9 = 0.5e1;
          real prod43977#4 = RMul(prod33950,varAcc3910);
          real prod3978#2 = RMul(prod43977,prod3915);
          real basisEval3979#1 = RMul(coeff3976,prod3978);
          real prod5397A#1 = RMul(prod43953,varAcc3912);
          real prod397B#1 = RMul(coeff3914,prod5397A);
          real prod397C#2 = RMul(coeff3914,prod397B);
          real basisEval397D#2 = RMul(coeff3914,prod397C);
          real prod397E#1 = RMul(iden391C,prod43953);
          real prod397F#3 = RMul(coeff3914,prod397E);
          real basisEval3980#1 = RMul(coeff3914,prod397F);
          real prod3981#1 = RMul(prod2392B,prod33937);
          real prod3982#3 = RMul(coeff3914,prod3981);
          real basisEval3983#1 = RMul(coeff3914,prod3982);
          real prod3984#1 = RMul(prod33941,prod23924);
          real prod3985#3 = RMul(coeff3914,prod3984);
          real basisEval3986#1 = RMul(coeff3914,prod3985);
          real prod3987#1 = RMul(prod43960,iden3918);
          real prod3988#3 = RMul(coeff3914,prod3987);
          real basisEval3989#1 = RMul(coeff3914,prod3988);
          real prod5398A#1 = RMul(prod43960,varAcc3911);
          real prod398B#1 = RMul(prod5398A,coeff3914);
          real prod398C#2 = RMul(coeff3914,prod398B);
          real basisEval398D#2 = RMul(coeff3914,prod398C);
          real prod398E#3 = RMul(iden3921,prod3954);
          real basisEval398F#1 = RMul(coeff3920,prod398E);
          real prod3990#2 = RMul(iden3921,prod3957);
          real basisEval3991#2 = RMul(coeff3920,prod3990);
          real prod3992#2 = RMul(iden3921,prod395A);
          real basisEval3993#1 = RMul(coeff3920,prod3992);
          real prod3994#2 = RMul(iden3921,prod395D);
          real basisEval3995#2 = RMul(coeff3920,prod3994);
          real prod3996#3 = RMul(iden3921,prod3961);
          real basisEval3997#1 = RMul(coeff3920,prod3996);
          real prod3998#3 = RMul(prod23934,prod3938);
          real basisEval3999#1 = RMul(coeff3933,prod3998);
          real prod399A#2 = RMul(prod23934,prod393B);
          real basisEval399B#2 = RMul(coeff3933,prod399A);
          real prod399C#2 = RMul(prod23934,prod393E);
          real basisEval399D#2 = RMul(coeff3933,prod399C);
          real prod399E#3 = RMul(prod23934,prod3942);
          real basisEval399F#1 = RMul(coeff3933,prod399E);
          real prod39A0#3 = RMul(prod33950,prod3925);
          real basisEval39A1#1 = RMul(coeff394F,prod39A0);
          real prod39A2#2 = RMul(prod33950,prod3928);
          real basisEval39A3#1 = RMul(coeff394F,prod39A2);
          real prod39A4#3 = RMul(prod33950,prod392C);
          real basisEval39A5#1 = RMul(coeff394F,prod39A4);
          real prod39A6#3 = RMul(prod43977,prod3919);
          real basisEval39A7#1 = RMul(coeff3976,prod39A6);
          real prod39A8#3 = RMul(prod43977,prod391D);
          real basisEval39A9#1 = RMul(coeff3976,prod39A8);
          real coeff39AA#3 = 0.6e1;
          real prod539AB#1 = RMul(prod43977,varAcc3910);
          real prod39AC#2 = RMul(prod539AB,prod3915);
          real basisEval39AD#1 = RMul(coeff39AA,prod39AC);
          real basisEval39AE#1 = RMul(coeff3920,prod391E);
          real basisEval39AF#2 = RMul(coeff3914,prod3922);
          real basisEval39B0#2 = RMul(coeff3920,prod3929);
          real basisEval39B1#1 = RMul(coeff3933,prod392D);
          real basisEval39B2#1 = RMul(coeff3914,prod392F);
          real basisEval39B3#2 = RMul(coeff3914,prod3935);
          real basisEval39B4#1 = RMul(coeff3920,prod393C);
          real basisEval39B5#1 = RMul(coeff3933,prod393F);
          real basisEval39B6#1 = RMul(coeff394F,prod3943);
          real basisEval39B7#1 = RMul(coeff3914,prod3945);
          real basisEval39B8#1 = RMul(coeff3933,prod3949);
          real basisEval39B9#1 = RMul(coeff3914,prod394B);
          real basisEval39BA#1 = RMul(coeff3920,prod394D);
          real basisEval39BB#2 = RMul(coeff3914,prod3951);
          real basisEval39BC#1 = RMul(coeff3920,prod3958);
          real basisEval39BD#2 = RMul(coeff3933,prod395B);
          real basisEval39BE#1 = RMul(coeff394F,prod395E);
          real basisEval39BF#1 = RMul(coeff3976,prod3962);
          real basisEval39C0#1 = RMul(coeff3914,prod3964);
          real basisEval39C1#1 = RMul(coeff3933,prod3968);
          real basisEval39C2#1 = RMul(coeff394F,prod396A);
          real basisEval39C3#1 = RMul(coeff3914,prod396C);
          real basisEval39C4#2 = RMul(coeff3920,prod396E);
          real basisEval39C5#1 = RMul(coeff3914,prod3972);
          real basisEval39C6#1 = RMul(coeff3920,prod3974);
          real basisEval39C7#2 = RMul(coeff3914,prod3978);
          real basisEval39C8#1 = RMul(coeff3920,prod397F);
          real basisEval39C9#1 = RMul(coeff3933,prod3982);
          real basisEval39CA#1 = RMul(coeff394F,prod3985);
          real basisEval39CB#1 = RMul(coeff3976,prod3988);
          real basisEval39CC#1 = RMul(coeff39AA,prod398C);
          real basisEval39CD#1 = RMul(coeff3914,prod398E);
          real basisEval39CE#2 = RMul(coeff3933,prod3992);
          real basisEval39CF#1 = RMul(coeff394F,prod3994);
          real basisEval39D0#1 = RMul(coeff3976,prod3996);
          real basisEval39D1#1 = RMul(coeff3914,prod3998);
          real basisEval39D2#1 = RMul(coeff3920,prod399A);
          real basisEval39D3#1 = RMul(coeff394F,prod399E);
          real basisEval39D4#1 = RMul(coeff3914,prod39A0);
          real basisEval39D5#2 = RMul(coeff3920,prod39A2);
          real basisEval39D6#1 = RMul(coeff3933,prod39A4);
          real basisEval39D7#1 = RMul(coeff3914,prod39A6);
          real basisEval39D8#1 = RMul(coeff3920,prod39A8);
          real basisEval39D9#2 = RMul(coeff3914,prod39AC);
          real basisEval39DA#1 = RMul(coeff3920,prod391A);
          real basisEval39DB#1 = RMul(coeff3933,prod3926);
          real basisEval39DC#1 = RMul(coeff3914,prod3931);
          real basisEval39DD#1 = RMul(coeff394F,prod3939);
          real basisEval39DE#1 = RMul(coeff3933,prod393C);
          real basisEval39DF#1 = RMul(coeff3920,prod393F);
          real basisEval39E0#1 = RMul(coeff3933,prod3945);
          real basisEval39E1#1 = RMul(coeff3914,prod3949);
          real basisEval39E2#1 = RMul(coeff3920,prod394B);
          real basisEval39E3#1 = RMul(coeff3914,prod394D);
          real basisEval39E4#1 = RMul(coeff3976,prod3955);
          real basisEval39E5#1 = RMul(coeff394F,prod3958);
          real basisEval39E6#1 = RMul(coeff3920,prod395E);
          real basisEval39E7#1 = RMul(coeff394F,prod3964);
          real basisEval39E8#1 = RMul(coeff3933,prod3966);
          real basisEval39E9#1 = RMul(coeff3914,prod396A);
          real basisEval39EA#1 = RMul(coeff3914,prod3970);
          real basisEval39EB#1 = RMul(coeff3920,prod3972);
          real basisEval39EC#1 = RMul(coeff3914,prod3974);
          real basisEval39ED#1 = RMul(coeff39AA,prod397C);
          real basisEval39EE#1 = RMul(coeff3976,prod397F);
          real basisEval39EF#1 = RMul(coeff394F,prod3982);
          real basisEval39F0#1 = RMul(coeff3933,prod3985);
          real basisEval39F1#1 = RMul(coeff3920,prod3988);
          real basisEval39F2#1 = RMul(coeff3976,prod398E);
          real basisEval39F3#1 = RMul(coeff394F,prod3990);
          real basisEval39F4#1 = RMul(coeff3914,prod3996);
          real basisEval39F5#1 = RMul(coeff394F,prod3998);
          real basisEval39F6#1 = RMul(coeff3920,prod399C);
          real basisEval39F7#1 = RMul(coeff3914,prod399E);
          real basisEval39F8#1 = RMul(coeff3933,prod39A0);
          real basisEval39F9#1 = RMul(coeff3914,prod39A4);
          real basisEval39FA#1 = RMul(coeff3920,prod39A6);
          real basisEval39FB#1 = RMul(coeff3914,prod39A8);
          tensor[84] intermediateCons39FC#1 = <tensor[84]>[basisEval3913,basisEval3913,basisEval3913,basisEval3917,basisEval3913,basisEval3913,basisEval3913,basisEval391B,basisEval391F,basisEval3923,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3927,basisEval392A,basisEval392E,basisEval3930,basisEval3932,basisEval3936,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval393A,basisEval393D,basisEval3940,basisEval3944,basisEval3946,basisEval3948,basisEval394A,basisEval394C,basisEval394E,basisEval3952,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3956,basisEval3959,basisEval395C,basisEval395F,basisEval3963,basisEval3965,basisEval3967,basisEval3969,basisEval396B,basisEval396D,basisEval396F,basisEval3971,basisEval3973,basisEval3975,basisEval3979,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval3913,basisEval397D,basisEval3980,basisEval3983,basisEval3986,basisEval3989,basisEval398D,basisEval398F,basisEval3991,basisEval3993,basisEval3995,basisEval3997,basisEval3999,basisEval399B,basisEval399D,basisEval399F,basisEval39A1,basisEval39A3,basisEval39A5,basisEval39A7,basisEval39A9,basisEval39AD];
          tensor[84] intermediateCons39FD#1 = <tensor[84]>[basisEval3913,basisEval3913,basisEval3917,basisEval3913,basisEval3913,basisEval391B,basisEval39AE,basisEval3913,basisEval39AF,basisEval3913,basisEval3913,basisEval3927,basisEval39B0,basisEval39B1,basisEval3913,basisEval39B2,basisEval3932,basisEval3913,basisEval39B3,basisEval3913,basisEval3913,basisEval393A,basisEval39B4,basisEval39B5,basisEval39B6,basisEval3913,basisEval39B7,basisEval3948,basisEval39B8,basisEval3913,basisEval39B9,basisEval39BA,basisEval3913,basisEval39BB,basisEval3913,basisEval3913,basisEval3956,basisEval39BC,basisEval39BD,basisEval39BE,basisEval39BF,basisEval3913,basisEval39C0,basisEval3967,basisEval39C1,basisEval39C2,basisEval3913,basisEval39C3,basisEval39C4,basisEval3971,basisEval3913,basisEval39C5,basisEval39C6,basisEval3913,basisEval39C7,basisEval3913,basisEval3913,basisEval397D,basisEval39C8,basisEval39C9,basisEval39CA,basisEval39CB,basisEval39CC,basisEval3913,basisEval39CD,basisEval3991,basisEval39CE,basisEval39CF,basisEval39D0,basisEval3913,basisEval39D1,basisEval39D2,basisEval399D,basisEval39D3,basisEval3913,basisEval39D4,basisEval39D5,basisEval39D6,basisEval3913,basisEval39D7,basisEval39D8,basisEval3913,basisEval39D9,basisEval3913];
          tensor[84] intermediateCons39FE#1 = <tensor[84]>[basisEval3913,basisEval3917,basisEval3913,basisEval3913,basisEval39DA,basisEval391F,basisEval3913,basisEval39AF,basisEval3913,basisEval3913,basisEval39DB,basisEval39B0,basisEval392E,basisEval3913,basisEval3930,basisEval39DC,basisEval3913,basisEval39B3,basisEval3913,basisEval3913,basisEval39DD,basisEval39DE,basisEval39DF,basisEval3944,basisEval3913,basisEval39E0,basisEval3948,basisEval39E1,basisEval3913,basisEval39E2,basisEval39E3,basisEval3913,basisEval39BB,basisEval3913,basisEval3913,basisEval39E4,basisEval39E5,basisEval39BD,basisEval39E6,basisEval3963,basisEval3913,basisEval39E7,basisEval39E8,basisEval3969,basisEval39E9,basisEval3913,basisEval396D,basisEval39C4,basisEval39EA,basisEval3913,basisEval39EB,basisEval39EC,basisEval3913,basisEval39C7,basisEval3913,basisEval3913,basisEval39ED,basisEval39EE,basisEval39EF,basisEval39F0,basisEval39F1,basisEval398D,basisEval3913,basisEval39F2,basisEval39F3,basisEval39CE,basisEval3995,basisEval39F4,basisEval3913,basisEval39F5,basisEval399B,basisEval39F6,basisEval39F7,basisEval3913,basisEval39F8,basisEval39D5,basisEval39F9,basisEval3913,basisEval39FA,basisEval39FB,basisEval3913,basisEval39D9,basisEval3913,basisEval3913];
          tensor[84] projParam3AF2#1 = intermediateCons39FC;
          real vdot3AF3#10 = VDot<84>(femDofs366B,projParam3AF2);
          tensor[84] projParam3AF4#1 = intermediateCons39FD;
          real vdot3AF5#10 = VDot<84>(femDofs366B,projParam3AF4);
          tensor[84] projParam3AF6#1 = intermediateCons39FE;
          real vdot3AF7#10 = VDot<84>(femDofs366B,projParam3AF6);
          tensor[3] probe_l_823AF1#3 = <tensor[3]>[vdot3AF3,vdot3AF5,vdot3AF7];
          real varAcc3B01#4 = VIndex<3,0>(pos2449);
          real varAcc3B02#4 = VIndex<3,1>(pos2449);
          real varAcc3B03#4 = VIndex<3,2>(pos2449);
          real basisEval3B04#294 = 0.e0;
          real coeff3B05#31 = 0.2e1;
          real one3B06#38 = 0.1e1;
          real prod3B07#5 = RMul(one3B06,one3B06);
          real prod3B08#2 = RMul(one3B06,prod3B07);
          real basisEval3B09#3 = RMul(coeff3B05,prod3B08);
          real iden3B0A#5 = varAcc3B03;
          real prod3B0B#4 = RMul(one3B06,iden3B0A);
          real prod3B0C#3 = RMul(one3B06,prod3B0B);
          real basisEval3B0D#4 = RMul(coeff3B05,prod3B0C);
          real iden3B0E#5 = varAcc3B02;
          real prod3B0F#4 = RMul(iden3B0E,one3B06);
          real prod3B10#3 = RMul(one3B06,prod3B0F);
          real basisEval3B11#4 = RMul(coeff3B05,prod3B10);
          real coeff3B12#22 = 0.6e1;
          real iden3B13#11 = varAcc3B01;
          real prod3B14#3 = RMul(iden3B13,prod3B07);
          real basisEval3B15#1 = RMul(coeff3B12,prod3B14);
          real prod23B16#4 = RMul(iden3B0A,varAcc3B03);
          real prod3B17#3 = RMul(one3B06,prod23B16);
          real prod3B18#4 = RMul(one3B06,prod3B17);
          real basisEval3B19#2 = RMul(coeff3B05,prod3B18);
          real prod3B1A#3 = RMul(iden3B0E,iden3B0A);
          real prod3B1B#3 = RMul(one3B06,prod3B1A);
          real basisEval3B1C#3 = RMul(coeff3B05,prod3B1B);
          real prod23B1D#4 = RMul(iden3B0E,varAcc3B02);
          real prod3B1E#3 = RMul(prod23B1D,one3B06);
          real prod3B1F#4 = RMul(one3B06,prod3B1E);
          real basisEval3B20#2 = RMul(coeff3B05,prod3B1F);
          real prod3B21#3 = RMul(iden3B13,prod3B0B);
          real basisEval3B22#2 = RMul(coeff3B12,prod3B21);
          real prod3B23#3 = RMul(iden3B13,prod3B0F);
          real basisEval3B24#2 = RMul(coeff3B12,prod3B23);
          real coeff3B25#15 = 0.12e2;
          real prod23B26#7 = RMul(iden3B13,varAcc3B01);
          real prod3B27#4 = RMul(prod23B26,prod3B07);
          real basisEval3B28#1 = RMul(coeff3B25,prod3B27);
          real prod33B29#3 = RMul(prod23B16,varAcc3B03);
          real prod3B2A#2 = RMul(one3B06,prod33B29);
          real prod3B2B#4 = RMul(one3B06,prod3B2A);
          real basisEval3B2C#2 = RMul(coeff3B05,prod3B2B);
          real prod3B2D#2 = RMul(iden3B0E,prod23B16);
          real prod3B2E#4 = RMul(one3B06,prod3B2D);
          real basisEval3B2F#2 = RMul(coeff3B05,prod3B2E);
          real prod3B30#2 = RMul(prod23B1D,iden3B0A);
          real prod3B31#4 = RMul(one3B06,prod3B30);
          real basisEval3B32#2 = RMul(coeff3B05,prod3B31);
          real prod33B33#3 = RMul(prod23B1D,varAcc3B02);
          real prod3B34#2 = RMul(prod33B33,one3B06);
          real prod3B35#4 = RMul(one3B06,prod3B34);
          real basisEval3B36#2 = RMul(coeff3B05,prod3B35);
          real prod3B37#4 = RMul(iden3B13,prod3B17);
          real basisEval3B38#2 = RMul(coeff3B12,prod3B37);
          real prod3B39#2 = RMul(iden3B13,prod3B1A);
          real basisEval3B3A#3 = RMul(coeff3B12,prod3B39);
          real prod3B3B#4 = RMul(iden3B13,prod3B1E);
          real basisEval3B3C#2 = RMul(coeff3B12,prod3B3B);
          real prod3B3D#4 = RMul(prod23B26,prod3B0B);
          real basisEval3B3E#1 = RMul(coeff3B25,prod3B3D);
          real prod3B3F#4 = RMul(prod23B26,prod3B0F);
          real basisEval3B40#1 = RMul(coeff3B25,prod3B3F);
          real coeff3B41#9 = 0.20e2;
          real prod33B42#4 = RMul(prod23B26,varAcc3B01);
          real prod3B43#4 = RMul(prod33B42,prod3B07);
          real basisEval3B44#1 = RMul(coeff3B41,prod3B43);
          real prod43B45#1 = RMul(prod33B29,varAcc3B03);
          real prod3B46#1 = RMul(one3B06,prod43B45);
          real prod3B47#4 = RMul(one3B06,prod3B46);
          real basisEval3B48#2 = RMul(coeff3B05,prod3B47);
          real prod3B49#1 = RMul(iden3B0E,prod33B29);
          real prod3B4A#5 = RMul(one3B06,prod3B49);
          real basisEval3B4B#2 = RMul(coeff3B05,prod3B4A);
          real prod3B4C#1 = RMul(prod23B1D,prod23B16);
          real prod3B4D#4 = RMul(one3B06,prod3B4C);
          real basisEval3B4E#1 = RMul(coeff3B05,prod3B4D);
          real prod3B4F#1 = RMul(prod33B33,iden3B0A);
          real prod3B50#5 = RMul(one3B06,prod3B4F);
          real basisEval3B51#2 = RMul(coeff3B05,prod3B50);
          real prod43B52#1 = RMul(prod33B33,varAcc3B02);
          real prod3B53#1 = RMul(prod43B52,one3B06);
          real prod3B54#4 = RMul(one3B06,prod3B53);
          real basisEval3B55#2 = RMul(coeff3B05,prod3B54);
          real prod3B56#5 = RMul(iden3B13,prod3B2A);
          real basisEval3B57#1 = RMul(coeff3B12,prod3B56);
          real prod3B58#3 = RMul(iden3B13,prod3B2D);
          real basisEval3B59#4 = RMul(coeff3B12,prod3B58);
          real prod3B5A#3 = RMul(iden3B13,prod3B30);
          real basisEval3B5B#4 = RMul(coeff3B12,prod3B5A);
          real prod3B5C#5 = RMul(iden3B13,prod3B34);
          real basisEval3B5D#1 = RMul(coeff3B12,prod3B5C);
          real prod3B5E#4 = RMul(prod23B26,prod3B17);
          real basisEval3B5F#2 = RMul(coeff3B25,prod3B5E);
          real prod3B60#3 = RMul(prod23B26,prod3B1A);
          real basisEval3B61#1 = RMul(coeff3B25,prod3B60);
          real prod3B62#4 = RMul(prod23B26,prod3B1E);
          real basisEval3B63#2 = RMul(coeff3B25,prod3B62);
          real prod3B64#5 = RMul(prod33B42,prod3B0B);
          real basisEval3B65#1 = RMul(coeff3B41,prod3B64);
          real prod3B66#5 = RMul(prod33B42,prod3B0F);
          real basisEval3B67#1 = RMul(coeff3B41,prod3B66);
          real coeff3B68#3 = 0.30e2;
          real prod43B69#1 = RMul(prod33B42,varAcc3B01);
          real prod3B6A#4 = RMul(prod43B69,prod3B07);
          real basisEval3B6B#1 = RMul(coeff3B68,prod3B6A);
          real basisEval3B6C#3 = RMul(one3B06,prod3B08);
          real basisEval3B6D#1 = RMul(one3B06,prod3B0C);
          real basisEval3B6E#4 = RMul(coeff3B05,prod3B14);
          real basisEval3B6F#1 = RMul(one3B06,prod3B18);
          real coeff3B70#12 = 0.3e1;
          real basisEval3B71#2 = RMul(coeff3B70,prod3B1F);
          real basisEval3B72#3 = RMul(coeff3B05,prod3B21);
          real coeff3B73#16 = 0.4e1;
          real basisEval3B74#1 = RMul(coeff3B73,prod3B23);
          real basisEval3B75#2 = RMul(coeff3B70,prod3B27);
          real basisEval3B76#1 = RMul(one3B06,prod3B2B);
          real basisEval3B77#1 = RMul(coeff3B70,prod3B31);
          real basisEval3B78#2 = RMul(coeff3B73,prod3B35);
          real basisEval3B79#2 = RMul(coeff3B05,prod3B37);
          real basisEval3B7A#3 = RMul(coeff3B73,prod3B39);
          real basisEval3B7B#1 = RMul(coeff3B70,prod3B3D);
          real basisEval3B7C#2 = RMul(coeff3B12,prod3B3F);
          real basisEval3B7D#2 = RMul(coeff3B73,prod3B43);
          real basisEval3B7E#1 = RMul(one3B06,prod3B47);
          real basisEval3B7F#2 = RMul(coeff3B70,prod3B4D);
          real basisEval3B80#1 = RMul(coeff3B73,prod3B50);
          real coeff3B81#3 = 0.5e1;
          real basisEval3B82#2 = RMul(coeff3B81,prod3B54);
          real basisEval3B83#2 = RMul(coeff3B05,prod3B56);
          real basisEval3B84#1 = RMul(coeff3B73,prod3B58);
          real coeff3B85#6 = 0.8e1;
          real basisEval3B86#1 = RMul(coeff3B85,prod3B5C);
          real basisEval3B87#2 = RMul(coeff3B70,prod3B5E);
          real basisEval3B88#4 = RMul(coeff3B12,prod3B60);
          real coeff3B89#3 = 0.9e1;
          real basisEval3B8A#1 = RMul(coeff3B89,prod3B62);
          real basisEval3B8B#1 = RMul(coeff3B73,prod3B64);
          real basisEval3B8C#1 = RMul(coeff3B85,prod3B66);
          real basisEval3B8D#2 = RMul(coeff3B81,prod3B6A);
          real basisEval3B8E#1 = RMul(one3B06,prod3B10);
          real basisEval3B8F#2 = RMul(coeff3B70,prod3B18);
          real basisEval3B90#1 = RMul(one3B06,prod3B1F);
          real basisEval3B91#1 = RMul(coeff3B73,prod3B21);
          real basisEval3B92#3 = RMul(coeff3B05,prod3B23);
          real basisEval3B93#2 = RMul(coeff3B73,prod3B2B);
          real basisEval3B94#1 = RMul(coeff3B70,prod3B2E);
          real basisEval3B95#1 = RMul(one3B06,prod3B35);
          real basisEval3B96#2 = RMul(coeff3B05,prod3B3B);
          real basisEval3B97#2 = RMul(coeff3B12,prod3B3D);
          real basisEval3B98#1 = RMul(coeff3B70,prod3B3F);
          real basisEval3B99#2 = RMul(coeff3B81,prod3B47);
          real basisEval3B9A#1 = RMul(coeff3B73,prod3B4A);
          real basisEval3B9B#1 = RMul(one3B06,prod3B54);
          real basisEval3B9C#1 = RMul(coeff3B85,prod3B56);
          real basisEval3B9D#1 = RMul(coeff3B73,prod3B5A);
          real basisEval3B9E#2 = RMul(coeff3B05,prod3B5C);
          real basisEval3B9F#1 = RMul(coeff3B89,prod3B5E);
          real basisEval3BA0#2 = RMul(coeff3B70,prod3B62);
          real basisEval3BA1#1 = RMul(coeff3B85,prod3B64);
          real basisEval3BA2#1 = RMul(coeff3B73,prod3B66);
          real basisEval3BA3#1 = RMul(coeff3B12,prod3B10);
          real basisEval3BA4#2 = RMul(coeff3B12,prod3B1B);
          real basisEval3BA5#1 = RMul(coeff3B25,prod3B1F);
          real basisEval3BA6#2 = RMul(coeff3B05,prod3B27);
          real basisEval3BA7#2 = RMul(coeff3B12,prod3B2E);
          real basisEval3BA8#1 = RMul(coeff3B25,prod3B31);
          real basisEval3BA9#1 = RMul(coeff3B41,prod3B35);
          real basisEval3BAA#1 = RMul(coeff3B25,prod3B3B);
          real basisEval3BAB#2 = RMul(coeff3B05,prod3B3D);
          real basisEval3BAC#2 = RMul(coeff3B05,prod3B43);
          real basisEval3BAD#1 = RMul(coeff3B12,prod3B4A);
          real basisEval3BAE#2 = RMul(coeff3B25,prod3B4D);
          real basisEval3BAF#1 = RMul(coeff3B41,prod3B50);
          real basisEval3BB0#1 = RMul(coeff3B68,prod3B54);
          real basisEval3BB1#1 = RMul(coeff3B25,prod3B5A);
          real basisEval3BB2#1 = RMul(coeff3B41,prod3B5C);
          real basisEval3BB3#1 = RMul(coeff3B05,prod3B5E);
          real basisEval3BB4#2 = RMul(coeff3B05,prod3B64);
          real basisEval3BB5#1 = RMul(coeff3B12,prod3B66);
          real basisEval3BB6#2 = RMul(coeff3B05,prod3B6A);
          real basisEval3BB7#1 = RMul(one3B06,prod3B14);
          real basisEval3BB8#1 = RMul(coeff3B73,prod3B1B);
          real basisEval3BB9#1 = RMul(one3B06,prod3B27);
          real basisEval3BBA#2 = RMul(coeff3B12,prod3B31);
          real basisEval3BBB#1 = RMul(coeff3B70,prod3B37);
          real basisEval3BBC#1 = RMul(coeff3B70,prod3B3B);
          real basisEval3BBD#2 = RMul(coeff3B05,prod3B3F);
          real basisEval3BBE#1 = RMul(one3B06,prod3B43);
          real basisEval3BBF#1 = RMul(coeff3B85,prod3B4A);
          real basisEval3BC0#1 = RMul(coeff3B89,prod3B4D);
          real basisEval3BC1#1 = RMul(coeff3B85,prod3B50);
          real basisEval3BC2#1 = RMul(coeff3B73,prod3B56);
          real basisEval3BC3#1 = RMul(coeff3B73,prod3B5C);
          real basisEval3BC4#1 = RMul(coeff3B73,prod3B60);
          real basisEval3BC5#2 = RMul(coeff3B05,prod3B66);
          real basisEval3BC6#1 = RMul(one3B06,prod3B6A);
          real basisEval3BC7#1 = RMul(coeff3B12,prod3B0C);
          real basisEval3BC8#1 = RMul(coeff3B25,prod3B18);
          real basisEval3BC9#1 = RMul(coeff3B41,prod3B2B);
          real basisEval3BCA#1 = RMul(coeff3B25,prod3B2E);
          real basisEval3BCB#1 = RMul(coeff3B25,prod3B37);
          real basisEval3BCC#1 = RMul(coeff3B68,prod3B47);
          real basisEval3BCD#1 = RMul(coeff3B41,prod3B4A);
          real basisEval3BCE#1 = RMul(coeff3B12,prod3B50);
          real basisEval3BCF#1 = RMul(coeff3B41,prod3B56);
          real basisEval3BD0#1 = RMul(coeff3B25,prod3B58);
          real basisEval3BD1#1 = RMul(coeff3B05,prod3B62);
          real basisEval3BD2#1 = RMul(coeff3B12,prod3B64);
          tensor[84] intermediateCons3BD3#1 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B09,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B0D,basisEval3B11,basisEval3B15,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B19,basisEval3B1C,basisEval3B20,basisEval3B22,basisEval3B24,basisEval3B28,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B2C,basisEval3B2F,basisEval3B32,basisEval3B36,basisEval3B38,basisEval3B3A,basisEval3B3C,basisEval3B3E,basisEval3B40,basisEval3B44,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B48,basisEval3B4B,basisEval3B4E,basisEval3B51,basisEval3B55,basisEval3B57,basisEval3B59,basisEval3B5B,basisEval3B5D,basisEval3B5F,basisEval3B61,basisEval3B63,basisEval3B65,basisEval3B67,basisEval3B6B];
          tensor[84] intermediateCons3BD4#2 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6C,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6D,basisEval3B11,basisEval3B04,basisEval3B6E,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6F,basisEval3B1C,basisEval3B71,basisEval3B04,basisEval3B72,basisEval3B74,basisEval3B04,basisEval3B75,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B76,basisEval3B2F,basisEval3B77,basisEval3B78,basisEval3B04,basisEval3B79,basisEval3B7A,basisEval3B3C,basisEval3B04,basisEval3B7B,basisEval3B7C,basisEval3B04,basisEval3B7D,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B7E,basisEval3B4B,basisEval3B7F,basisEval3B80,basisEval3B82,basisEval3B04,basisEval3B83,basisEval3B84,basisEval3B5B,basisEval3B86,basisEval3B04,basisEval3B87,basisEval3B88,basisEval3B8A,basisEval3B04,basisEval3B8B,basisEval3B8C,basisEval3B04,basisEval3B8D,basisEval3B04];
          tensor[84] intermediateCons3BD5#2 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6C,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B0D,basisEval3B8E,basisEval3B04,basisEval3B6E,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B8F,basisEval3B1C,basisEval3B90,basisEval3B04,basisEval3B91,basisEval3B92,basisEval3B04,basisEval3B75,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B93,basisEval3B94,basisEval3B32,basisEval3B95,basisEval3B04,basisEval3B38,basisEval3B7A,basisEval3B96,basisEval3B04,basisEval3B97,basisEval3B98,basisEval3B04,basisEval3B7D,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B99,basisEval3B9A,basisEval3B7F,basisEval3B51,basisEval3B9B,basisEval3B04,basisEval3B9C,basisEval3B59,basisEval3B9D,basisEval3B9E,basisEval3B04,basisEval3B9F,basisEval3B88,basisEval3BA0,basisEval3B04,basisEval3BA1,basisEval3BA2,basisEval3B04,basisEval3B8D,basisEval3B04,basisEval3B04];
          tensor[84] intermediateCons3BD6#1 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B09,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B0D,basisEval3BA3,basisEval3B04,basisEval3B04,basisEval3B6E,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B19,basisEval3BA4,basisEval3BA5,basisEval3B04,basisEval3B04,basisEval3B72,basisEval3B24,basisEval3B04,basisEval3B04,basisEval3BA6,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B2C,basisEval3BA7,basisEval3BA8,basisEval3BA9,basisEval3B04,basisEval3B04,basisEval3B79,basisEval3B3A,basisEval3BAA,basisEval3B04,basisEval3B04,basisEval3BAB,basisEval3B7C,basisEval3B04,basisEval3B04,basisEval3BAC,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B48,basisEval3BAD,basisEval3BAE,basisEval3BAF,basisEval3BB0,basisEval3B04,basisEval3B04,basisEval3B83,basisEval3B59,basisEval3BB1,basisEval3BB2,basisEval3B04,basisEval3B04,basisEval3BB3,basisEval3B88,basisEval3B63,basisEval3B04,basisEval3B04,basisEval3BB4,basisEval3BB5,basisEval3B04,basisEval3B04,basisEval3BB6,basisEval3B04,basisEval3B04,basisEval3B04];
          tensor[84] intermediateCons3BD7#2 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B6C,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B0D,basisEval3B11,basisEval3B04,basisEval3B04,basisEval3BB7,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B8F,basisEval3BB8,basisEval3B71,basisEval3B04,basisEval3B04,basisEval3B72,basisEval3B92,basisEval3B04,basisEval3B04,basisEval3BB9,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B93,basisEval3BA7,basisEval3BBA,basisEval3B78,basisEval3B04,basisEval3B04,basisEval3BBB,basisEval3B7A,basisEval3BBC,basisEval3B04,basisEval3B04,basisEval3BAB,basisEval3BBD,basisEval3B04,basisEval3B04,basisEval3BBE,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B99,basisEval3BBF,basisEval3BC0,basisEval3BC1,basisEval3B82,basisEval3B04,basisEval3B04,basisEval3BC2,basisEval3B59,basisEval3B5B,basisEval3BC3,basisEval3B04,basisEval3B04,basisEval3B87,basisEval3BC4,basisEval3BA0,basisEval3B04,basisEval3B04,basisEval3BB4,basisEval3BC5,basisEval3B04,basisEval3B04,basisEval3BC6,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04];
          tensor[84] intermediateCons3BD8#1 = <tensor[84]>[basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B09,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3BC7,basisEval3B11,basisEval3B04,basisEval3B04,basisEval3B6E,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3BC8,basisEval3BA4,basisEval3B20,basisEval3B04,basisEval3B04,basisEval3B22,basisEval3B92,basisEval3B04,basisEval3B04,basisEval3BA6,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3BC9,basisEval3BCA,basisEval3BBA,basisEval3B36,basisEval3B04,basisEval3B04,basisEval3BCB,basisEval3B3A,basisEval3B96,basisEval3B04,basisEval3B04,basisEval3B97,basisEval3BBD,basisEval3B04,basisEval3B04,basisEval3BAC,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3BCC,basisEval3BCD,basisEval3BAE,basisEval3BCE,basisEval3B55,basisEval3B04,basisEval3B04,basisEval3BCF,basisEval3BD0,basisEval3B5B,basisEval3B9E,basisEval3B04,basisEval3B04,basisEval3B5F,basisEval3B88,basisEval3BD1,basisEval3B04,basisEval3B04,basisEval3BD2,basisEval3BC5,basisEval3B04,basisEval3B04,basisEval3BB6,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04,basisEval3B04];
          tensor[84] projParam3CBB#1 = intermediateCons3BD3;
          real vdot3CBC#6 = VDot<84>(femDofs366B,projParam3CBB);
          tensor[84] projParam3CBD#1 = intermediateCons3BD4;
          real vdot3CBE#6 = VDot<84>(femDofs366B,projParam3CBD);
          tensor[84] projParam3CBF#1 = intermediateCons3BD5;
          real vdot3CC0#6 = VDot<84>(femDofs366B,projParam3CBF);
          tensor[3] tensor3CC1#1 = <tensor[3]>[vdot3CBC,vdot3CBE,vdot3CC0];
          tensor[84] projParam3CC2#1 = intermediateCons3BD4;
          real vdot3CC3#6 = VDot<84>(femDofs366B,projParam3CC2);
          tensor[84] projParam3CC4#1 = intermediateCons3BD6;
          real vdot3CC5#6 = VDot<84>(femDofs366B,projParam3CC4);
          tensor[84] projParam3CC6#1 = intermediateCons3BD7;
          real vdot3CC7#6 = VDot<84>(femDofs366B,projParam3CC6);
          tensor[3] tensor3CC8#1 = <tensor[3]>[vdot3CC3,vdot3CC5,vdot3CC7];
          tensor[84] projParam3CC9#1 = intermediateCons3BD5;
          real vdot3CCA#6 = VDot<84>(femDofs366B,projParam3CC9);
          tensor[84] projParam3CCB#1 = intermediateCons3BD7;
          real vdot3CCC#6 = VDot<84>(femDofs366B,projParam3CCB);
          tensor[84] projParam3CCD#1 = intermediateCons3BD8;
          real vdot3CCE#6 = VDot<84>(femDofs366B,projParam3CCD);
          tensor[3] tensor3CCF#1 = <tensor[3]>[vdot3CCA,vdot3CCC,vdot3CCE];
          tensor[3] projParam3CE8#1 = tensor3CC1;
          real vdot3CE9#2 = VDot<3>(projParam3CE8,probe_l_823AF1);
          tensor[3] projParam3CEA#1 = tensor3CC8;
          real vdot3CEB#2 = VDot<3>(projParam3CEA,probe_l_823AF1);
          tensor[3] projParam3CEC#1 = tensor3CCF;
          real vdot3CED#2 = VDot<3>(projParam3CEC,probe_l_823AF1);
          real realLit3CF7#5 = 0.e0;
          real realLit3CF8#5 = 0.1e1;
          real r3CF9#11 = RMul(realLit3CF7,realLit3CF8);
          real r3CFA#25 = RMul(realLit3CF7,realLit3CF7);
          real r3CFB#3 = RAdd(r3CF9,r3CFA);
          real r3CFC#1 = RAdd(r3CFB,r3CFA);
          real r3CFD#15 = RAdd(r3CFC,r3CFA);
          real r3CFE#3 = RAdd(r3CFA,r3CF9);
          real r3CFF#1 = RAdd(r3CFE,r3CFA);
          real r3D00#15 = RAdd(r3CFF,r3CFA);
          real r3D01#3 = RAdd(r3CFA,r3CFA);
          real r3D02#1 = RAdd(r3D01,r3CF9);
          real r3D03#15 = RAdd(r3D02,r3CFA);
          real r3D05#15 = RMul(realLit3CF8,realLit3CF7);
          real r3D06#1 = RAdd(r3CFB,r3D05);
          real r3D07#5 = RAdd(r3D06,r3D05);
          real r3D08#1 = RAdd(r3CFE,r3D05);
          real r3D09#5 = RAdd(r3D08,r3D05);
          real r3D0A#3 = RMul(realLit3CF8,realLit3CF8);
          real r3D0B#1 = RAdd(r3D01,r3D0A);
          real r3D0C#5 = RAdd(r3D0B,r3D05);
          real realLit3D0E#2 = -0.1e1;
          real r3D0F#15 = RMul(realLit3D0E,realLit3CF7);
          real r3D10#1 = RAdd(r3CF9,r3D0F);
          real r3D11#1 = RAdd(r3D10,r3CFA);
          real r3D12#5 = RAdd(r3D11,r3D05);
          real r3D13#3 = RMul(realLit3D0E,realLit3CF8);
          real r3D14#1 = RAdd(r3CFA,r3D13);
          real r3D15#1 = RAdd(r3D14,r3CFA);
          real r3D16#5 = RAdd(r3D15,r3D05);
          real r3D17#1 = RAdd(r3CFA,r3D0F);
          real r3D18#1 = RAdd(r3D17,r3CF9);
          real r3D19#5 = RAdd(r3D18,r3D05);
          real r3D1C#1 = RAdd(r3CFB,r3D0F);
          real r3D1D#5 = RAdd(r3D1C,r3D0F);
          real r3D1E#1 = RAdd(r3CFE,r3D0F);
          real r3D1F#5 = RAdd(r3D1E,r3D0F);
          real r3D20#1 = RAdd(r3D01,r3D13);
          real r3D21#5 = RAdd(r3D20,r3D0F);
          real r3D23#1 = RAdd(r3D0A,r3CFA);
          real r3D24#1 = RAdd(r3D23,r3CFA);
          real r3D25#5 = RAdd(r3D24,r3D05);
          real r3D26#1 = RAdd(r3D05,r3CF9);
          real r3D27#1 = RAdd(r3D26,r3CFA);
          real r3D28#5 = RAdd(r3D27,r3D05);
          real r3D29#1 = RAdd(r3D05,r3CFA);
          real r3D2A#1 = RAdd(r3D29,r3CF9);
          real r3D2B#5 = RAdd(r3D2A,r3D05);
          real r3D2E#1 = RAdd(r3CF9,r3D05);
          real r3D2F#1 = RAdd(r3D2E,r3CFA);
          real r3D30#5 = RAdd(r3D2F,r3D0F);
          real r3D31#1 = RAdd(r3CFA,r3D0A);
          real r3D32#1 = RAdd(r3D31,r3CFA);
          real r3D33#5 = RAdd(r3D32,r3D0F);
          real r3D34#1 = RAdd(r3CFA,r3D05);
          real r3D35#1 = RAdd(r3D34,r3CF9);
          real r3D36#5 = RAdd(r3D35,r3D0F);
          real r3D38#1 = RAdd(r3D13,r3CFA);
          real r3D39#1 = RAdd(r3D38,r3CFA);
          real r3D3A#5 = RAdd(r3D39,r3D0F);
          real r3D3B#1 = RAdd(r3D0F,r3CF9);
          real r3D3C#1 = RAdd(r3D3B,r3CFA);
          real r3D3D#5 = RAdd(r3D3C,r3D0F);
          real r3D3E#1 = RAdd(r3D0F,r3CFA);
          real r3D3F#1 = RAdd(r3D3E,r3CF9);
          real r3D40#5 = RAdd(r3D3F,r3D0F);
          real r3D92#9 = vdot3CE9;
          real r3D93#1 = r3CFD;
          real r3D94#1 = RMul(r3D92,r3D93);
          real r3D95#9 = vdot3CEB;
          real r3D96#1 = r3D07;
          real r3D97#1 = RMul(r3D95,r3D96);
          real r3D98#9 = vdot3CED;
          real r3D99#1 = r3D12;
          real r3D9A#1 = RMul(r3D98,r3D99);
          real r3D9B#1 = RAdd(r3D94,r3D97);
          real r3D9C#1 = RAdd(r3D9B,r3D9A);
          real r3D9D#1 = r3D00;
          real r3D9E#1 = RMul(r3D92,r3D9D);
          real r3D9F#1 = r3D09;
          real r3DA0#1 = RMul(r3D95,r3D9F);
          real r3DA1#1 = r3D16;
          real r3DA2#1 = RMul(r3D98,r3DA1);
          real r3DA3#1 = RAdd(r3D9E,r3DA0);
          real r3DA4#1 = RAdd(r3DA3,r3DA2);
          real r3DA5#1 = r3D03;
          real r3DA6#1 = RMul(r3D92,r3DA5);
          real r3DA7#1 = r3D0C;
          real r3DA8#1 = RMul(r3D95,r3DA7);
          real r3DA9#1 = r3D19;
          real r3DAA#1 = RMul(r3D98,r3DA9);
          real r3DAB#1 = RAdd(r3DA6,r3DA8);
          real r3DAC#1 = RAdd(r3DAB,r3DAA);
          real r3DAE#1 = r3D1D;
          real r3DAF#1 = RMul(r3D92,r3DAE);
          real r3DB0#1 = r3CFD;
          real r3DB1#1 = RMul(r3D95,r3DB0);
          real r3DB2#1 = r3D25;
          real r3DB3#1 = RMul(r3D98,r3DB2);
          real r3DB4#1 = RAdd(r3DAF,r3DB1);
          real r3DB5#1 = RAdd(r3DB4,r3DB3);
          real r3DB6#1 = r3D1F;
          real r3DB7#1 = RMul(r3D92,r3DB6);
          real r3DB8#1 = r3D00;
          real r3DB9#1 = RMul(r3D95,r3DB8);
          real r3DBA#1 = r3D28;
          real r3DBB#1 = RMul(r3D98,r3DBA);
          real r3DBC#1 = RAdd(r3DB7,r3DB9);
          real r3DBD#1 = RAdd(r3DBC,r3DBB);
          real r3DBE#1 = r3D21;
          real r3DBF#1 = RMul(r3D92,r3DBE);
          real r3DC0#1 = r3D03;
          real r3DC1#1 = RMul(r3D95,r3DC0);
          real r3DC2#1 = r3D2B;
          real r3DC3#1 = RMul(r3D98,r3DC2);
          real r3DC4#1 = RAdd(r3DBF,r3DC1);
          real r3DC5#1 = RAdd(r3DC4,r3DC3);
          real r3DC7#1 = r3D30;
          real r3DC8#1 = RMul(r3D92,r3DC7);
          real r3DC9#1 = r3D3A;
          real r3DCA#1 = RMul(r3D95,r3DC9);
          real r3DCB#1 = r3CFD;
          real r3DCC#1 = RMul(r3D98,r3DCB);
          real r3DCD#1 = RAdd(r3DC8,r3DCA);
          real r3DCE#1 = RAdd(r3DCD,r3DCC);
          real r3DCF#1 = r3D33;
          real r3DD0#1 = RMul(r3D92,r3DCF);
          real r3DD1#1 = r3D3D;
          real r3DD2#1 = RMul(r3D95,r3DD1);
          real r3DD3#1 = r3D00;
          real r3DD4#1 = RMul(r3D98,r3DD3);
          real r3DD5#1 = RAdd(r3DD0,r3DD2);
          real r3DD6#1 = RAdd(r3DD5,r3DD4);
          real r3DD7#1 = r3D36;
          real r3DD8#1 = RMul(r3D92,r3DD7);
          real r3DD9#1 = r3D40;
          real r3DDA#1 = RMul(r3D95,r3DD9);
          real r3DDB#1 = r3D03;
          real r3DDC#1 = RMul(r3D98,r3DDB);
          real r3DDD#1 = RAdd(r3DD8,r3DDA);
          real r3DDE#1 = RAdd(r3DDD,r3DDC);
          real r3E31#3 = vdot3AF3;
          real r3E32#1 = r3D9C;
          real r3E33#1 = RMul(r3E31,r3E32);
          real r3E34#3 = vdot3AF5;
          real r3E35#1 = r3DB5;
          real r3E36#1 = RMul(r3E34,r3E35);
          real r3E37#3 = vdot3AF7;
          real r3E38#1 = r3DCE;
          real r3E39#1 = RMul(r3E37,r3E38);
          real r3E3A#1 = RAdd(r3E33,r3E36);
          real r3E3B#2 = RAdd(r3E3A,r3E39);
          real r3E3C#1 = r3DA4;
          real r3E3D#1 = RMul(r3E31,r3E3C);
          real r3E3E#1 = r3DBD;
          real r3E3F#1 = RMul(r3E34,r3E3E);
          real r3E40#1 = r3DD6;
          real r3E41#1 = RMul(r3E37,r3E40);
          real r3E42#1 = RAdd(r3E3D,r3E3F);
          real r3E43#2 = RAdd(r3E42,r3E41);
          real r3E44#1 = r3DAC;
          real r3E45#1 = RMul(r3E31,r3E44);
          real r3E46#1 = r3DC5;
          real r3E47#1 = RMul(r3E34,r3E46);
          real r3E48#1 = r3DDE;
          real r3E49#1 = RMul(r3E37,r3E48);
          real r3E4A#1 = RAdd(r3E45,r3E47);
          real r3E4B#2 = RAdd(r3E4A,r3E49);
          tensor[3] op1_e3_l_943E30#11 = <tensor[3]>[r3E3B,r3E43,r3E4B];
          real varAcc3E6A#3 = VIndex<3,0>(pos2449);
          real varAcc3E6B#3 = VIndex<3,1>(pos2449);
          real varAcc3E6C#3 = VIndex<3,2>(pos2449);
          real basisEval3E6D#640 = 0.e0;
          real coeff3E6E#19 = 0.6e1;
          real one3E6F#19 = 0.1e1;
          real prod3E70#4 = RMul(one3E6F,one3E6F);
          real prod3E71#3 = RMul(one3E6F,prod3E70);
          real basisEval3E72#3 = RMul(coeff3E6E,prod3E71);
          real iden3E73#4 = varAcc3E6C;
          real prod3E74#3 = RMul(one3E6F,iden3E73);
          real prod3E75#4 = RMul(one3E6F,prod3E74);
          real basisEval3E76#4 = RMul(coeff3E6E,prod3E75);
          real iden3E77#4 = varAcc3E6B;
          real prod3E78#3 = RMul(iden3E77,one3E6F);
          real prod3E79#4 = RMul(one3E6F,prod3E78);
          real basisEval3E7A#4 = RMul(coeff3E6E,prod3E79);
          real coeff3E7B#13 = 0.24e2;
          real iden3E7C#7 = varAcc3E6A;
          real prod3E7D#4 = RMul(iden3E7C,prod3E70);
          real basisEval3E7E#1 = RMul(coeff3E7B,prod3E7D);
          real prod23E7F#3 = RMul(iden3E73,varAcc3E6C);
          real prod3E80#2 = RMul(one3E6F,prod23E7F);
          real prod3E81#5 = RMul(one3E6F,prod3E80);
          real basisEval3E82#4 = RMul(coeff3E6E,prod3E81);
          real prod3E83#2 = RMul(iden3E77,iden3E73);
          real prod3E84#4 = RMul(one3E6F,prod3E83);
          real basisEval3E85#3 = RMul(coeff3E6E,prod3E84);
          real prod23E86#3 = RMul(iden3E77,varAcc3E6B);
          real prod3E87#2 = RMul(prod23E86,one3E6F);
          real prod3E88#5 = RMul(one3E6F,prod3E87);
          real basisEval3E89#4 = RMul(coeff3E6E,prod3E88);
          real prod3E8A#4 = RMul(iden3E7C,prod3E74);
          real basisEval3E8B#2 = RMul(coeff3E7B,prod3E8A);
          real prod3E8C#4 = RMul(iden3E7C,prod3E78);
          real basisEval3E8D#2 = RMul(coeff3E7B,prod3E8C);
          real coeff3E8E#9 = 0.60e2;
          real prod23E8F#4 = RMul(iden3E7C,varAcc3E6A);
          real prod3E90#5 = RMul(prod23E8F,prod3E70);
          real basisEval3E91#1 = RMul(coeff3E8E,prod3E90);
          real prod33E92#1 = RMul(prod23E7F,varAcc3E6C);
          real prod3E93#1 = RMul(one3E6F,prod33E92);
          real prod3E94#6 = RMul(one3E6F,prod3E93);
          real basisEval3E95#2 = RMul(coeff3E6E,prod3E94);
          real prod3E96#1 = RMul(iden3E77,prod23E7F);
          real prod3E97#6 = RMul(one3E6F,prod3E96);
          real basisEval3E98#4 = RMul(coeff3E6E,prod3E97);
          real prod3E99#1 = RMul(prod23E86,iden3E73);
          real prod3E9A#6 = RMul(one3E6F,prod3E99);
          real basisEval3E9B#4 = RMul(coeff3E6E,prod3E9A);
          real prod33E9C#1 = RMul(prod23E86,varAcc3E6B);
          real prod3E9D#1 = RMul(prod33E9C,one3E6F);
          real prod3E9E#6 = RMul(one3E6F,prod3E9D);
          real basisEval3E9F#2 = RMul(coeff3E6E,prod3E9E);
          real prod3EA0#6 = RMul(iden3E7C,prod3E80);
          real basisEval3EA1#2 = RMul(coeff3E7B,prod3EA0);
          real prod3EA2#3 = RMul(iden3E7C,prod3E83);
          real basisEval3EA3#3 = RMul(coeff3E7B,prod3EA2);
          real prod3EA4#6 = RMul(iden3E7C,prod3E87);
          real basisEval3EA5#2 = RMul(coeff3E7B,prod3EA4);
          real prod3EA6#6 = RMul(prod23E8F,prod3E74);
          real basisEval3EA7#1 = RMul(coeff3E8E,prod3EA6);
          real prod3EA8#6 = RMul(prod23E8F,prod3E78);
          real basisEval3EA9#1 = RMul(coeff3E8E,prod3EA8);
          real coeff3EAA#3 = 0.120e3;
          real prod33EAB#1 = RMul(prod23E8F,varAcc3E6A);
          real prod3EAC#6 = RMul(prod33EAB,prod3E70);
          real basisEval3EAD#1 = RMul(coeff3EAA,prod3EAC);
          real coeff3EAE#10 = 0.2e1;
          real basisEval3EAF#6 = RMul(coeff3EAE,prod3E71);
          real basisEval3EB0#3 = RMul(coeff3EAE,prod3E75);
          real coeff3EB1#15 = 0.4e1;
          real basisEval3EB2#2 = RMul(coeff3EB1,prod3E79);
          real basisEval3EB3#4 = RMul(coeff3E6E,prod3E7D);
          real basisEval3EB4#2 = RMul(coeff3EAE,prod3E81);
          real basisEval3EB5#3 = RMul(coeff3EB1,prod3E84);
          real basisEval3EB6#3 = RMul(coeff3E6E,prod3E8A);
          real coeff3EB7#13 = 0.12e2;
          real basisEval3EB8#2 = RMul(coeff3EB7,prod3E8C);
          real basisEval3EB9#2 = RMul(coeff3EB7,prod3E90);
          real basisEval3EBA#2 = RMul(coeff3EAE,prod3E94);
          real basisEval3EBB#1 = RMul(coeff3EB1,prod3E97);
          real coeff3EBC#4 = 0.8e1;
          real basisEval3EBD#2 = RMul(coeff3EBC,prod3E9E);
          real basisEval3EBE#4 = RMul(coeff3E6E,prod3EA0);
          real basisEval3EBF#6 = RMul(coeff3EB7,prod3EA2);
          real coeff3EC0#6 = 0.18e2;
          real basisEval3EC1#1 = RMul(coeff3EC0,prod3EA4);
          real basisEval3EC2#1 = RMul(coeff3EB7,prod3EA6);
          real basisEval3EC3#2 = RMul(coeff3E7B,prod3EA8);
          real coeff3EC4#3 = 0.20e2;
          real basisEval3EC5#2 = RMul(coeff3EC4,prod3EAC);
          real basisEval3EC6#2 = RMul(coeff3EB1,prod3E75);
          real basisEval3EC7#3 = RMul(coeff3EAE,prod3E79);
          real basisEval3EC8#2 = RMul(coeff3EAE,prod3E88);
          real basisEval3EC9#2 = RMul(coeff3EB7,prod3E8A);
          real basisEval3ECA#3 = RMul(coeff3E6E,prod3E8C);
          real basisEval3ECB#2 = RMul(coeff3EBC,prod3E94);
          real basisEval3ECC#1 = RMul(coeff3EB1,prod3E9A);
          real basisEval3ECD#2 = RMul(coeff3EAE,prod3E9E);
          real basisEval3ECE#1 = RMul(coeff3EC0,prod3EA0);
          real basisEval3ECF#4 = RMul(coeff3E6E,prod3EA4);
          real basisEval3ED0#2 = RMul(coeff3E7B,prod3EA6);
          real basisEval3ED1#1 = RMul(coeff3EB7,prod3EA8);
          real basisEval3ED2#2 = RMul(coeff3EB1,prod3E7D);
          real basisEval3ED3#2 = RMul(coeff3EB7,prod3E88);
          real basisEval3ED4#3 = RMul(coeff3EB1,prod3E8A);
          real basisEval3ED5#4 = RMul(coeff3E6E,prod3E90);
          real basisEval3ED6#1 = RMul(coeff3EB7,prod3E9A);
          real basisEval3ED7#2 = RMul(coeff3EC4,prod3E9E);
          real basisEval3ED8#1 = RMul(coeff3EB1,prod3EA0);
          real basisEval3ED9#4 = RMul(coeff3E6E,prod3EA6);
          real basisEval3EDA#1 = RMul(coeff3EC0,prod3EA8);
          real basisEval3EDB#2 = RMul(coeff3EBC,prod3EAC);
          real basisEval3EDC#1 = RMul(one3E6F,prod3E71);
          real basisEval3EDD#3 = RMul(coeff3EAE,prod3E7D);
          real coeff3EDE#3 = 0.3e1;
          real basisEval3EDF#1 = RMul(coeff3EDE,prod3E81);
          real basisEval3EE0#1 = RMul(coeff3EDE,prod3E88);
          real basisEval3EE1#3 = RMul(coeff3EB1,prod3E8C);
          real basisEval3EE2#1 = RMul(coeff3EDE,prod3E90);
          real basisEval3EE3#1 = RMul(coeff3EB1,prod3E94);
          real basisEval3EE4#1 = RMul(coeff3EB1,prod3E9E);
          real basisEval3EE5#1 = RMul(coeff3EBC,prod3EA2);
          real basisEval3EE6#4 = RMul(coeff3E6E,prod3EA8);
          real basisEval3EE7#1 = RMul(coeff3EB1,prod3EAC);
          real basisEval3EE8#2 = RMul(coeff3EB7,prod3E81);
          real basisEval3EE9#2 = RMul(coeff3EC4,prod3E94);
          real basisEval3EEA#1 = RMul(coeff3EB7,prod3E97);
          real basisEval3EEB#1 = RMul(coeff3EB1,prod3EA4);
          real basisEval3EEC#1 = RMul(coeff3EC0,prod3EA6);
          real basisEval3EED#1 = RMul(coeff3E7B,prod3E79);
          real basisEval3EEE#2 = RMul(coeff3E7B,prod3E84);
          real basisEval3EEF#1 = RMul(coeff3E8E,prod3E88);
          real basisEval3EF0#2 = RMul(coeff3E7B,prod3E97);
          real basisEval3EF1#1 = RMul(coeff3E8E,prod3E9A);
          real basisEval3EF2#1 = RMul(coeff3EAA,prod3E9E);
          real basisEval3EF3#1 = RMul(coeff3E8E,prod3EA4);
          real basisEval3EF4#2 = RMul(coeff3E6E,prod3EAC);
          real basisEval3EF5#2 = RMul(coeff3EB7,prod3E84);
          real basisEval3EF6#2 = RMul(coeff3EAE,prod3E90);
          real basisEval3EF7#1 = RMul(coeff3EC0,prod3E97);
          real basisEval3EF8#2 = RMul(coeff3E7B,prod3E9A);
          real basisEval3EF9#1 = RMul(coeff3EB7,prod3EA4);
          real basisEval3EFA#1 = RMul(coeff3EB1,prod3EA6);
          real basisEval3EFB#2 = RMul(coeff3EAE,prod3EAC);
          real basisEval3EFC#1 = RMul(coeff3EC0,prod3E9A);
          real basisEval3EFD#1 = RMul(coeff3EB7,prod3EA0);
          real basisEval3EFE#1 = RMul(coeff3EB1,prod3EA8);
          real basisEval3EFF#1 = RMul(coeff3E7B,prod3E75);
          real basisEval3F00#1 = RMul(coeff3E8E,prod3E81);
          real basisEval3F01#1 = RMul(coeff3EAA,prod3E94);
          real basisEval3F02#1 = RMul(coeff3E8E,prod3E97);
          real basisEval3F03#1 = RMul(coeff3E8E,prod3EA0);
          tensor[84] intermediateCons3F04#1 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E72,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E76,basisEval3E7A,basisEval3E7E,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E82,basisEval3E85,basisEval3E89,basisEval3E8B,basisEval3E8D,basisEval3E91,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E95,basisEval3E98,basisEval3E9B,basisEval3E9F,basisEval3EA1,basisEval3EA3,basisEval3EA5,basisEval3EA7,basisEval3EA9,basisEval3EAD];
          tensor[84] intermediateCons3F05#3 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB0,basisEval3EB2,basisEval3E6D,basisEval3EB3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB4,basisEval3EB5,basisEval3E89,basisEval3E6D,basisEval3EB6,basisEval3EB8,basisEval3E6D,basisEval3EB9,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EBA,basisEval3EBB,basisEval3E9B,basisEval3EBD,basisEval3E6D,basisEval3EBE,basisEval3EBF,basisEval3EC1,basisEval3E6D,basisEval3EC2,basisEval3EC3,basisEval3E6D,basisEval3EC5,basisEval3E6D];
          tensor[84] intermediateCons3F06#3 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EC6,basisEval3EC7,basisEval3E6D,basisEval3EB3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E82,basisEval3EB5,basisEval3EC8,basisEval3E6D,basisEval3EC9,basisEval3ECA,basisEval3E6D,basisEval3EB9,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ECB,basisEval3E98,basisEval3ECC,basisEval3ECD,basisEval3E6D,basisEval3ECE,basisEval3EBF,basisEval3ECF,basisEval3E6D,basisEval3ED0,basisEval3ED1,basisEval3E6D,basisEval3EC5,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F07#3 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB0,basisEval3E7A,basisEval3E6D,basisEval3E6D,basisEval3ED2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB4,basisEval3E85,basisEval3ED3,basisEval3E6D,basisEval3E6D,basisEval3ED4,basisEval3EB8,basisEval3E6D,basisEval3E6D,basisEval3ED5,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EBA,basisEval3E98,basisEval3ED6,basisEval3ED7,basisEval3E6D,basisEval3E6D,basisEval3ED8,basisEval3EBF,basisEval3EA5,basisEval3E6D,basisEval3E6D,basisEval3ED9,basisEval3EDA,basisEval3E6D,basisEval3E6D,basisEval3EDB,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F08#6 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EDC,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB0,basisEval3EC7,basisEval3E6D,basisEval3E6D,basisEval3EDD,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EDF,basisEval3EB5,basisEval3EE0,basisEval3E6D,basisEval3E6D,basisEval3ED4,basisEval3EE1,basisEval3E6D,basisEval3E6D,basisEval3EE2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE3,basisEval3E98,basisEval3E9B,basisEval3EE4,basisEval3E6D,basisEval3E6D,basisEval3EBE,basisEval3EE5,basisEval3ECF,basisEval3E6D,basisEval3E6D,basisEval3ED9,basisEval3EE6,basisEval3E6D,basisEval3E6D,basisEval3EE7,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F09#3 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E76,basisEval3EC7,basisEval3E6D,basisEval3E6D,basisEval3ED2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE8,basisEval3E85,basisEval3EC8,basisEval3E6D,basisEval3E6D,basisEval3EC9,basisEval3EE1,basisEval3E6D,basisEval3E6D,basisEval3ED5,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE9,basisEval3EEA,basisEval3E9B,basisEval3ECD,basisEval3E6D,basisEval3E6D,basisEval3EA1,basisEval3EBF,basisEval3EEB,basisEval3E6D,basisEval3E6D,basisEval3EEC,basisEval3EE6,basisEval3E6D,basisEval3E6D,basisEval3EDB,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F0A#1 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E72,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E76,basisEval3EED,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E82,basisEval3EEE,basisEval3EEF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB6,basisEval3E8D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED5,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E95,basisEval3EF0,basisEval3EF1,basisEval3EF2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EBE,basisEval3EA3,basisEval3EF3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED9,basisEval3EC3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EF4,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F0B#3 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EC6,basisEval3E7A,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EDD,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E82,basisEval3EF5,basisEval3ED3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED4,basisEval3ECA,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EF6,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ECB,basisEval3EF7,basisEval3EF8,basisEval3ED7,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EBE,basisEval3EBF,basisEval3EF9,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFA,basisEval3EE6,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFB,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F0C#3 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EAF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E76,basisEval3EB2,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EDD,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE8,basisEval3EF5,basisEval3E89,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB6,basisEval3EE1,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EF6,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EE9,basisEval3EF0,basisEval3EFC,basisEval3EBD,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFD,basisEval3EBF,basisEval3ECF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED9,basisEval3EFE,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFB,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] intermediateCons3F0D#1 = <tensor[84]>[basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E72,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EFF,basisEval3E7A,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EB3,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3F00,basisEval3EEE,basisEval3E89,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E8B,basisEval3ECA,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED5,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3F01,basisEval3F02,basisEval3EF8,basisEval3E9F,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3F03,basisEval3EA3,basisEval3ECF,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3ED0,basisEval3EE6,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3EF4,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D,basisEval3E6D];
          tensor[84] projParam3FC8#1 = intermediateCons3F04;
          real vdot3FC9#4 = VDot<84>(femDofs366B,projParam3FC8);
          tensor[84] projParam3FCA#1 = intermediateCons3F05;
          real vdot3FCB#4 = VDot<84>(femDofs366B,projParam3FCA);
          tensor[84] projParam3FCC#1 = intermediateCons3F06;
          real vdot3FCD#4 = VDot<84>(femDofs366B,projParam3FCC);
          tensor[84] projParam3FCF#1 = intermediateCons3F05;
          real vdot3FD0#4 = VDot<84>(femDofs366B,projParam3FCF);
          tensor[84] projParam3FD1#1 = intermediateCons3F07;
          real vdot3FD2#4 = VDot<84>(femDofs366B,projParam3FD1);
          tensor[84] projParam3FD3#1 = intermediateCons3F08;
          real vdot3FD4#4 = VDot<84>(femDofs366B,projParam3FD3);
          tensor[84] projParam3FD6#1 = intermediateCons3F06;
          real vdot3FD7#4 = VDot<84>(femDofs366B,projParam3FD6);
          tensor[84] projParam3FD8#1 = intermediateCons3F08;
          real vdot3FD9#4 = VDot<84>(femDofs366B,projParam3FD8);
          tensor[84] projParam3FDA#1 = intermediateCons3F09;
          real vdot3FDB#4 = VDot<84>(femDofs366B,projParam3FDA);
          tensor[84] projParam3FDE#1 = intermediateCons3F05;
          real vdot3FDF#4 = VDot<84>(femDofs366B,projParam3FDE);
          tensor[84] projParam3FE0#1 = intermediateCons3F07;
          real vdot3FE1#4 = VDot<84>(femDofs366B,projParam3FE0);
          tensor[84] projParam3FE2#1 = intermediateCons3F08;
          real vdot3FE3#4 = VDot<84>(femDofs366B,projParam3FE2);
          tensor[84] projParam3FE5#1 = intermediateCons3F07;
          real vdot3FE6#4 = VDot<84>(femDofs366B,projParam3FE5);
          tensor[84] projParam3FE7#1 = intermediateCons3F0A;
          real vdot3FE8#4 = VDot<84>(femDofs366B,projParam3FE7);
          tensor[84] projParam3FE9#1 = intermediateCons3F0B;
          real vdot3FEA#4 = VDot<84>(femDofs366B,projParam3FE9);
          tensor[84] projParam3FEC#1 = intermediateCons3F08;
          real vdot3FED#4 = VDot<84>(femDofs366B,projParam3FEC);
          tensor[84] projParam3FEE#1 = intermediateCons3F0B;
          real vdot3FEF#4 = VDot<84>(femDofs366B,projParam3FEE);
          tensor[84] projParam3FF0#1 = intermediateCons3F0C;
          real vdot3FF1#4 = VDot<84>(femDofs366B,projParam3FF0);
          tensor[84] projParam3FF4#1 = intermediateCons3F06;
          real vdot3FF5#4 = VDot<84>(femDofs366B,projParam3FF4);
          tensor[84] projParam3FF6#1 = intermediateCons3F08;
          real vdot3FF7#4 = VDot<84>(femDofs366B,projParam3FF6);
          tensor[84] projParam3FF8#1 = intermediateCons3F09;
          real vdot3FF9#4 = VDot<84>(femDofs366B,projParam3FF8);
          tensor[84] projParam3FFB#1 = intermediateCons3F08;
          real vdot3FFC#4 = VDot<84>(femDofs366B,projParam3FFB);
          tensor[84] projParam3FFD#1 = intermediateCons3F0B;
          real vdot3FFE#4 = VDot<84>(femDofs366B,projParam3FFD);
          tensor[84] projParam3FFF#1 = intermediateCons3F0C;
          real vdot4000#4 = VDot<84>(femDofs366B,projParam3FFF);
          tensor[84] projParam4002#1 = intermediateCons3F09;
          real vdot4003#4 = VDot<84>(femDofs366B,projParam4002);
          tensor[84] projParam4004#1 = intermediateCons3F0C;
          real vdot4005#4 = VDot<84>(femDofs366B,projParam4004);
          tensor[84] projParam4006#1 = intermediateCons3F0D;
          real vdot4007#4 = VDot<84>(femDofs366B,projParam4006);
          real r404F#9 = vdot3AF3;
          real r4050#1 = vdot3FC9;
          real r4051#1 = RMul(r404F,r4050);
          real r4052#1 = vdot3FCB;
          real r4053#1 = RMul(r404F,r4052);
          real r4054#1 = vdot3FCD;
          real r4055#1 = RMul(r404F,r4054);
          real r4057#1 = vdot3FDF;
          real r4058#1 = RMul(r404F,r4057);
          real r4059#1 = vdot3FE1;
          real r405A#1 = RMul(r404F,r4059);
          real r405B#1 = vdot3FE3;
          real r405C#1 = RMul(r404F,r405B);
          real r405E#1 = vdot3FF5;
          real r405F#1 = RMul(r404F,r405E);
          real r4060#1 = vdot3FF7;
          real r4061#1 = RMul(r404F,r4060);
          real r4062#1 = vdot3FF9;
          real r4063#1 = RMul(r404F,r4062);
          real r4066#9 = vdot3AF5;
          real r4067#1 = vdot3FD0;
          real r4068#1 = RMul(r4066,r4067);
          real r4069#1 = vdot3FD2;
          real r406A#1 = RMul(r4066,r4069);
          real r406B#1 = vdot3FD4;
          real r406C#1 = RMul(r4066,r406B);
          real r406E#1 = vdot3FE6;
          real r406F#1 = RMul(r4066,r406E);
          real r4070#1 = vdot3FE8;
          real r4071#1 = RMul(r4066,r4070);
          real r4072#1 = vdot3FEA;
          real r4073#1 = RMul(r4066,r4072);
          real r4075#1 = vdot3FFC;
          real r4076#1 = RMul(r4066,r4075);
          real r4077#1 = vdot3FFE;
          real r4078#1 = RMul(r4066,r4077);
          real r4079#1 = vdot4000;
          real r407A#1 = RMul(r4066,r4079);
          real r407D#9 = vdot3AF7;
          real r407E#1 = vdot3FD7;
          real r407F#1 = RMul(r407D,r407E);
          real r4080#1 = vdot3FD9;
          real r4081#1 = RMul(r407D,r4080);
          real r4082#1 = vdot3FDB;
          real r4083#1 = RMul(r407D,r4082);
          real r4085#1 = vdot3FED;
          real r4086#1 = RMul(r407D,r4085);
          real r4087#1 = vdot3FEF;
          real r4088#1 = RMul(r407D,r4087);
          real r4089#1 = vdot3FF1;
          real r408A#1 = RMul(r407D,r4089);
          real r408C#1 = vdot4003;
          real r408D#1 = RMul(r407D,r408C);
          real r408E#1 = vdot4005;
          real r408F#1 = RMul(r407D,r408E);
          real r4090#1 = vdot4007;
          real r4091#1 = RMul(r407D,r4090);
          real r40DC#6 = vdot3CBC;
          real r40DD#1 = RMul(r40DC,r40DC);
          real r40DE#6 = vdot3CBE;
          real r40DF#1 = RMul(r40DC,r40DE);
          real r40E0#6 = vdot3CC0;
          real r40E1#1 = RMul(r40DC,r40E0);
          real r40E3#6 = vdot3CC3;
          real r40E4#1 = RMul(r40DE,r40E3);
          real r40E5#6 = vdot3CC5;
          real r40E6#1 = RMul(r40DE,r40E5);
          real r40E7#6 = vdot3CC7;
          real r40E8#1 = RMul(r40DE,r40E7);
          real r40EA#6 = vdot3CCA;
          real r40EB#1 = RMul(r40E0,r40EA);
          real r40EC#6 = vdot3CCC;
          real r40ED#1 = RMul(r40E0,r40EC);
          real r40EE#6 = vdot3CCE;
          real r40EF#1 = RMul(r40E0,r40EE);
          real r40F2#1 = RMul(r40E3,r40DC);
          real r40F3#1 = RMul(r40E3,r40DE);
          real r40F4#1 = RMul(r40E3,r40E0);
          real r40F6#1 = RMul(r40E5,r40E3);
          real r40F7#1 = RMul(r40E5,r40E5);
          real r40F8#1 = RMul(r40E5,r40E7);
          real r40FA#1 = RMul(r40E7,r40EA);
          real r40FB#1 = RMul(r40E7,r40EC);
          real r40FC#1 = RMul(r40E7,r40EE);
          real r40FF#1 = RMul(r40EA,r40DC);
          real r4100#1 = RMul(r40EA,r40DE);
          real r4101#1 = RMul(r40EA,r40E0);
          real r4103#1 = RMul(r40EC,r40E3);
          real r4104#1 = RMul(r40EC,r40E5);
          real r4105#1 = RMul(r40EC,r40E7);
          real r4107#1 = RMul(r40EE,r40EA);
          real r4108#1 = RMul(r40EE,r40EC);
          real r4109#1 = RMul(r40EE,r40EE);
          real r413F#1 = r4051;
          real r4140#1 = r40DD;
          real r4141#1 = RAdd(r413F,r4140);
          real r4142#1 = r4068;
          real r4143#1 = r40E4;
          real r4144#1 = RAdd(r4142,r4143);
          real r4145#1 = r407F;
          real r4146#1 = r40EB;
          real r4147#1 = RAdd(r4145,r4146);
          real r4148#1 = RAdd(r4141,r4144);
          real r4149#1 = RAdd(r4148,r4147);
          real r414A#1 = r4053;
          real r414B#1 = r40DF;
          real r414C#1 = RAdd(r414A,r414B);
          real r414D#1 = r406A;
          real r414E#1 = r40E6;
          real r414F#1 = RAdd(r414D,r414E);
          real r4150#1 = r4081;
          real r4151#1 = r40ED;
          real r4152#1 = RAdd(r4150,r4151);
          real r4153#1 = RAdd(r414C,r414F);
          real r4154#1 = RAdd(r4153,r4152);
          real r4155#1 = r4055;
          real r4156#1 = r40E1;
          real r4157#1 = RAdd(r4155,r4156);
          real r4158#1 = r406C;
          real r4159#1 = r40E8;
          real r415A#1 = RAdd(r4158,r4159);
          real r415B#1 = r4083;
          real r415C#1 = r40EF;
          real r415D#1 = RAdd(r415B,r415C);
          real r415E#1 = RAdd(r4157,r415A);
          real r415F#1 = RAdd(r415E,r415D);
          real r4161#1 = r4058;
          real r4162#1 = r40F2;
          real r4163#1 = RAdd(r4161,r4162);
          real r4164#1 = r406F;
          real r4165#1 = r40F6;
          real r4166#1 = RAdd(r4164,r4165);
          real r4167#1 = r4086;
          real r4168#1 = r40FA;
          real r4169#1 = RAdd(r4167,r4168);
          real r416A#1 = RAdd(r4163,r4166);
          real r416B#1 = RAdd(r416A,r4169);
          real r416C#1 = r405A;
          real r416D#1 = r40F3;
          real r416E#1 = RAdd(r416C,r416D);
          real r416F#1 = r4071;
          real r4170#1 = r40F7;
          real r4171#1 = RAdd(r416F,r4170);
          real r4172#1 = r4088;
          real r4173#1 = r40FB;
          real r4174#1 = RAdd(r4172,r4173);
          real r4175#1 = RAdd(r416E,r4171);
          real r4176#1 = RAdd(r4175,r4174);
          real r4177#1 = r405C;
          real r4178#1 = r40F4;
          real r4179#1 = RAdd(r4177,r4178);
          real r417A#1 = r4073;
          real r417B#1 = r40F8;
          real r417C#1 = RAdd(r417A,r417B);
          real r417D#1 = r408A;
          real r417E#1 = r40FC;
          real r417F#1 = RAdd(r417D,r417E);
          real r4180#1 = RAdd(r4179,r417C);
          real r4181#1 = RAdd(r4180,r417F);
          real r4183#1 = r405F;
          real r4184#1 = r40FF;
          real r4185#1 = RAdd(r4183,r4184);
          real r4186#1 = r4076;
          real r4187#1 = r4103;
          real r4188#1 = RAdd(r4186,r4187);
          real r4189#1 = r408D;
          real r418A#1 = r4107;
          real r418B#1 = RAdd(r4189,r418A);
          real r418C#1 = RAdd(r4185,r4188);
          real r418D#1 = RAdd(r418C,r418B);
          real r418E#1 = r4061;
          real r418F#1 = r4100;
          real r4190#1 = RAdd(r418E,r418F);
          real r4191#1 = r4078;
          real r4192#1 = r4104;
          real r4193#1 = RAdd(r4191,r4192);
          real r4194#1 = r408F;
          real r4195#1 = r4108;
          real r4196#1 = RAdd(r4194,r4195);
          real r4197#1 = RAdd(r4190,r4193);
          real r4198#1 = RAdd(r4197,r4196);
          real r4199#1 = r4063;
          real r419A#1 = r4101;
          real r419B#1 = RAdd(r4199,r419A);
          real r419C#1 = r407A;
          real r419D#1 = r4105;
          real r419E#1 = RAdd(r419C,r419D);
          real r419F#1 = r4091;
          real r41A0#1 = r4109;
          real r41A1#1 = RAdd(r419F,r41A0);
          real r41A2#1 = RAdd(r419B,r419E);
          real r41A3#1 = RAdd(r41A2,r41A1);
          real r420E#9 = vdot3CE9;
          real r420F#3 = vdot3CBC;
          real r4210#1 = RMul(r420E,r420F);
          real r4211#3 = vdot3CBE;
          real r4212#1 = RMul(r420E,r4211);
          real r4213#3 = vdot3CC0;
          real r4214#1 = RMul(r420E,r4213);
          tensor[3] tensor4215#4 = <tensor[3]>[r4210,r4212,r4214];
          real r4216#3 = vdot3CC3;
          real r4217#1 = RMul(r420E,r4216);
          real r4218#3 = vdot3CC5;
          real r4219#1 = RMul(r420E,r4218);
          real r421A#3 = vdot3CC7;
          real r421B#1 = RMul(r420E,r421A);
          tensor[3] tensor421C#4 = <tensor[3]>[r4217,r4219,r421B];
          real r421D#3 = vdot3CCA;
          real r421E#1 = RMul(r420E,r421D);
          real r421F#3 = vdot3CCC;
          real r4220#1 = RMul(r420E,r421F);
          real r4221#3 = vdot3CCE;
          real r4222#1 = RMul(r420E,r4221);
          tensor[3] tensor4223#4 = <tensor[3]>[r421E,r4220,r4222];
          real r4225#9 = vdot3CEB;
          real r4226#1 = RMul(r4225,r420F);
          real r4227#1 = RMul(r4225,r4211);
          real r4228#1 = RMul(r4225,r4213);
          tensor[3] tensor4229#4 = <tensor[3]>[r4226,r4227,r4228];
          real r422A#1 = RMul(r4225,r4216);
          real r422B#1 = RMul(r4225,r4218);
          real r422C#1 = RMul(r4225,r421A);
          tensor[3] tensor422D#4 = <tensor[3]>[r422A,r422B,r422C];
          real r422E#1 = RMul(r4225,r421D);
          real r422F#1 = RMul(r4225,r421F);
          real r4230#1 = RMul(r4225,r4221);
          tensor[3] tensor4231#4 = <tensor[3]>[r422E,r422F,r4230];
          real r4233#9 = vdot3CED;
          real r4234#1 = RMul(r4233,r420F);
          real r4235#1 = RMul(r4233,r4211);
          real r4236#1 = RMul(r4233,r4213);
          tensor[3] tensor4237#4 = <tensor[3]>[r4234,r4235,r4236];
          real r4238#1 = RMul(r4233,r4216);
          real r4239#1 = RMul(r4233,r4218);
          real r423A#1 = RMul(r4233,r421A);
          tensor[3] tensor423B#4 = <tensor[3]>[r4238,r4239,r423A];
          real r423C#1 = RMul(r4233,r421D);
          real r423D#1 = RMul(r4233,r421F);
          real r423E#1 = RMul(r4233,r4221);
          tensor[3] tensor423F#4 = <tensor[3]>[r423C,r423D,r423E];
          real r4277#9 = vdot3AF3;
          real r4278#3 = r4149;
          real r4279#1 = RMul(r4277,r4278);
          real r427A#3 = r4154;
          real r427B#1 = RMul(r4277,r427A);
          real r427C#3 = r415F;
          real r427D#1 = RMul(r4277,r427C);
          tensor[3] tensor427E#1 = <tensor[3]>[r4279,r427B,r427D];
          real r427F#3 = r416B;
          real r4280#1 = RMul(r4277,r427F);
          real r4281#3 = r4176;
          real r4282#1 = RMul(r4277,r4281);
          real r4283#3 = r4181;
          real r4284#1 = RMul(r4277,r4283);
          tensor[3] tensor4285#1 = <tensor[3]>[r4280,r4282,r4284];
          real r4286#3 = r418D;
          real r4287#1 = RMul(r4277,r4286);
          real r4288#3 = r4198;
          real r4289#1 = RMul(r4277,r4288);
          real r428A#3 = r41A3;
          real r428B#1 = RMul(r4277,r428A);
          tensor[3] tensor428C#1 = <tensor[3]>[r4287,r4289,r428B];
          real r428E#9 = vdot3AF5;
          real r428F#1 = RMul(r428E,r4278);
          real r4290#1 = RMul(r428E,r427A);
          real r4291#1 = RMul(r428E,r427C);
          tensor[3] tensor4292#1 = <tensor[3]>[r428F,r4290,r4291];
          real r4293#1 = RMul(r428E,r427F);
          real r4294#1 = RMul(r428E,r4281);
          real r4295#1 = RMul(r428E,r4283);
          tensor[3] tensor4296#1 = <tensor[3]>[r4293,r4294,r4295];
          real r4297#1 = RMul(r428E,r4286);
          real r4298#1 = RMul(r428E,r4288);
          real r4299#1 = RMul(r428E,r428A);
          tensor[3] tensor429A#1 = <tensor[3]>[r4297,r4298,r4299];
          real r429C#9 = vdot3AF7;
          real r429D#1 = RMul(r429C,r4278);
          real r429E#1 = RMul(r429C,r427A);
          real r429F#1 = RMul(r429C,r427C);
          tensor[3] tensor42A0#1 = <tensor[3]>[r429D,r429E,r429F];
          real r42A1#1 = RMul(r429C,r427F);
          real r42A2#1 = RMul(r429C,r4281);
          real r42A3#1 = RMul(r429C,r4283);
          tensor[3] tensor42A4#1 = <tensor[3]>[r42A1,r42A2,r42A3];
          real r42A5#1 = RMul(r429C,r4286);
          real r42A6#1 = RMul(r429C,r4288);
          real r42A7#1 = RMul(r429C,r428A);
          tensor[3] tensor42A8#1 = <tensor[3]>[r42A5,r42A6,r42A7];
          tensor[3] projParam42E0#1 = tensor4215;
          tensor[3] projParam42E1#1 = tensor427E;
          tensor[3] v42E2#3 = VAdd<3>(projParam42E0,projParam42E1);
          tensor[3] projParam42E3#1 = tensor421C;
          tensor[3] projParam42E4#1 = tensor4292;
          tensor[3] v42E5#3 = VAdd<3>(projParam42E3,projParam42E4);
          tensor[3] projParam42E6#1 = tensor4223;
          tensor[3] projParam42E7#1 = tensor42A0;
          tensor[3] v42E8#3 = VAdd<3>(projParam42E6,projParam42E7);
          tensor[3] projParam42EA#1 = tensor4229;
          tensor[3] projParam42EB#1 = tensor4285;
          tensor[3] v42EC#3 = VAdd<3>(projParam42EA,projParam42EB);
          tensor[3] projParam42ED#1 = tensor422D;
          tensor[3] projParam42EE#1 = tensor4296;
          tensor[3] v42EF#3 = VAdd<3>(projParam42ED,projParam42EE);
          tensor[3] projParam42F0#1 = tensor4231;
          tensor[3] projParam42F1#1 = tensor42A4;
          tensor[3] v42F2#3 = VAdd<3>(projParam42F0,projParam42F1);
          tensor[3] projParam42F4#1 = tensor4237;
          tensor[3] projParam42F5#1 = tensor428C;
          tensor[3] v42F6#3 = VAdd<3>(projParam42F4,projParam42F5);
          tensor[3] projParam42F7#1 = tensor423B;
          tensor[3] projParam42F8#1 = tensor429A;
          tensor[3] v42F9#3 = VAdd<3>(projParam42F7,projParam42F8);
          tensor[3] projParam42FA#1 = tensor423F;
          tensor[3] projParam42FB#1 = tensor42A8;
          tensor[3] v42FC#3 = VAdd<3>(projParam42FA,projParam42FB);
          real r431F#3 = VIndex<3,0>(v42E2);
          real r4320#3 = r3CFD;
          real r4321#1 = RMul(r431F,r4320);
          real r4322#3 = VIndex<3,0>(v42EC);
          real r4323#3 = r3D07;
          real r4324#1 = RMul(r4322,r4323);
          real r4325#3 = VIndex<3,0>(v42F6);
          real r4326#3 = r3D12;
          real r4327#1 = RMul(r4325,r4326);
          real r4328#3 = VIndex<3,0>(v42E5);
          real r4329#3 = r3D1D;
          real r432A#1 = RMul(r4328,r4329);
          real r432B#3 = VIndex<3,0>(v42EF);
          real r432C#3 = r3CFD;
          real r432D#1 = RMul(r432B,r432C);
          real r432E#3 = VIndex<3,0>(v42F9);
          real r432F#3 = r3D25;
          real r4330#1 = RMul(r432E,r432F);
          real r4331#3 = VIndex<3,0>(v42E8);
          real r4332#3 = r3D30;
          real r4333#1 = RMul(r4331,r4332);
          real r4334#3 = VIndex<3,0>(v42F2);
          real r4335#3 = r3D3A;
          real r4336#1 = RMul(r4334,r4335);
          real r4337#3 = VIndex<3,0>(v42FC);
          real r4338#3 = r3CFD;
          real r4339#1 = RMul(r4337,r4338);
          real r433A#1 = RAdd(r4321,r4324);
          real r433B#1 = RAdd(r433A,r4327);
          real r433C#1 = RAdd(r433B,r432A);
          real r433D#1 = RAdd(r433C,r432D);
          real r433E#1 = RAdd(r433D,r4330);
          real r433F#1 = RAdd(r433E,r4333);
          real r4340#1 = RAdd(r433F,r4336);
          real r4341#1 = RAdd(r4340,r4339);
          real r4342#3 = r3D00;
          real r4343#1 = RMul(r431F,r4342);
          real r4344#3 = r3D09;
          real r4345#1 = RMul(r4322,r4344);
          real r4346#3 = r3D16;
          real r4347#1 = RMul(r4325,r4346);
          real r4348#3 = r3D1F;
          real r4349#1 = RMul(r4328,r4348);
          real r434A#3 = r3D00;
          real r434B#1 = RMul(r432B,r434A);
          real r434C#3 = r3D28;
          real r434D#1 = RMul(r432E,r434C);
          real r434E#3 = r3D33;
          real r434F#1 = RMul(r4331,r434E);
          real r4350#3 = r3D3D;
          real r4351#1 = RMul(r4334,r4350);
          real r4352#3 = r3D00;
          real r4353#1 = RMul(r4337,r4352);
          real r4354#1 = RAdd(r4343,r4345);
          real r4355#1 = RAdd(r4354,r4347);
          real r4356#1 = RAdd(r4355,r4349);
          real r4357#1 = RAdd(r4356,r434B);
          real r4358#1 = RAdd(r4357,r434D);
          real r4359#1 = RAdd(r4358,r434F);
          real r435A#1 = RAdd(r4359,r4351);
          real r435B#1 = RAdd(r435A,r4353);
          real r435C#3 = r3D03;
          real r435D#1 = RMul(r431F,r435C);
          real r435E#3 = r3D0C;
          real r435F#1 = RMul(r4322,r435E);
          real r4360#3 = r3D19;
          real r4361#1 = RMul(r4325,r4360);
          real r4362#3 = r3D21;
          real r4363#1 = RMul(r4328,r4362);
          real r4364#3 = r3D03;
          real r4365#1 = RMul(r432B,r4364);
          real r4366#3 = r3D2B;
          real r4367#1 = RMul(r432E,r4366);
          real r4368#3 = r3D36;
          real r4369#1 = RMul(r4331,r4368);
          real r436A#3 = r3D40;
          real r436B#1 = RMul(r4334,r436A);
          real r436C#3 = r3D03;
          real r436D#1 = RMul(r4337,r436C);
          real r436E#1 = RAdd(r435D,r435F);
          real r436F#1 = RAdd(r436E,r4361);
          real r4370#1 = RAdd(r436F,r4363);
          real r4371#1 = RAdd(r4370,r4365);
          real r4372#1 = RAdd(r4371,r4367);
          real r4373#1 = RAdd(r4372,r4369);
          real r4374#1 = RAdd(r4373,r436B);
          real r4375#1 = RAdd(r4374,r436D);
          real r4377#3 = VIndex<3,1>(v42E2);
          real r4378#1 = RMul(r4377,r4320);
          real r4379#3 = VIndex<3,1>(v42EC);
          real r437A#1 = RMul(r4379,r4323);
          real r437B#3 = VIndex<3,1>(v42F6);
          real r437C#1 = RMul(r437B,r4326);
          real r437D#3 = VIndex<3,1>(v42E5);
          real r437E#1 = RMul(r437D,r4329);
          real r437F#3 = VIndex<3,1>(v42EF);
          real r4380#1 = RMul(r437F,r432C);
          real r4381#3 = VIndex<3,1>(v42F9);
          real r4382#1 = RMul(r4381,r432F);
          real r4383#3 = VIndex<3,1>(v42E8);
          real r4384#1 = RMul(r4383,r4332);
          real r4385#3 = VIndex<3,1>(v42F2);
          real r4386#1 = RMul(r4385,r4335);
          real r4387#3 = VIndex<3,1>(v42FC);
          real r4388#1 = RMul(r4387,r4338);
          real r4389#1 = RAdd(r4378,r437A);
          real r438A#1 = RAdd(r4389,r437C);
          real r438B#1 = RAdd(r438A,r437E);
          real r438C#1 = RAdd(r438B,r4380);
          real r438D#1 = RAdd(r438C,r4382);
          real r438E#1 = RAdd(r438D,r4384);
          real r438F#1 = RAdd(r438E,r4386);
          real r4390#1 = RAdd(r438F,r4388);
          real r4391#1 = RMul(r4377,r4342);
          real r4392#1 = RMul(r4379,r4344);
          real r4393#1 = RMul(r437B,r4346);
          real r4394#1 = RMul(r437D,r4348);
          real r4395#1 = RMul(r437F,r434A);
          real r4396#1 = RMul(r4381,r434C);
          real r4397#1 = RMul(r4383,r434E);
          real r4398#1 = RMul(r4385,r4350);
          real r4399#1 = RMul(r4387,r4352);
          real r439A#1 = RAdd(r4391,r4392);
          real r439B#1 = RAdd(r439A,r4393);
          real r439C#1 = RAdd(r439B,r4394);
          real r439D#1 = RAdd(r439C,r4395);
          real r439E#1 = RAdd(r439D,r4396);
          real r439F#1 = RAdd(r439E,r4397);
          real r43A0#1 = RAdd(r439F,r4398);
          real r43A1#1 = RAdd(r43A0,r4399);
          real r43A2#1 = RMul(r4377,r435C);
          real r43A3#1 = RMul(r4379,r435E);
          real r43A4#1 = RMul(r437B,r4360);
          real r43A5#1 = RMul(r437D,r4362);
          real r43A6#1 = RMul(r437F,r4364);
          real r43A7#1 = RMul(r4381,r4366);
          real r43A8#1 = RMul(r4383,r4368);
          real r43A9#1 = RMul(r4385,r436A);
          real r43AA#1 = RMul(r4387,r436C);
          real r43AB#1 = RAdd(r43A2,r43A3);
          real r43AC#1 = RAdd(r43AB,r43A4);
          real r43AD#1 = RAdd(r43AC,r43A5);
          real r43AE#1 = RAdd(r43AD,r43A6);
          real r43AF#1 = RAdd(r43AE,r43A7);
          real r43B0#1 = RAdd(r43AF,r43A8);
          real r43B1#1 = RAdd(r43B0,r43A9);
          real r43B2#1 = RAdd(r43B1,r43AA);
          real r43B4#3 = VIndex<3,2>(v42E2);
          real r43B5#1 = RMul(r43B4,r4320);
          real r43B6#3 = VIndex<3,2>(v42EC);
          real r43B7#1 = RMul(r43B6,r4323);
          real r43B8#3 = VIndex<3,2>(v42F6);
          real r43B9#1 = RMul(r43B8,r4326);
          real r43BA#3 = VIndex<3,2>(v42E5);
          real r43BB#1 = RMul(r43BA,r4329);
          real r43BC#3 = VIndex<3,2>(v42EF);
          real r43BD#1 = RMul(r43BC,r432C);
          real r43BE#3 = VIndex<3,2>(v42F9);
          real r43BF#1 = RMul(r43BE,r432F);
          real r43C0#3 = VIndex<3,2>(v42E8);
          real r43C1#1 = RMul(r43C0,r4332);
          real r43C2#3 = VIndex<3,2>(v42F2);
          real r43C3#1 = RMul(r43C2,r4335);
          real r43C4#3 = VIndex<3,2>(v42FC);
          real r43C5#1 = RMul(r43C4,r4338);
          real r43C6#1 = RAdd(r43B5,r43B7);
          real r43C7#1 = RAdd(r43C6,r43B9);
          real r43C8#1 = RAdd(r43C7,r43BB);
          real r43C9#1 = RAdd(r43C8,r43BD);
          real r43CA#1 = RAdd(r43C9,r43BF);
          real r43CB#1 = RAdd(r43CA,r43C1);
          real r43CC#1 = RAdd(r43CB,r43C3);
          real r43CD#1 = RAdd(r43CC,r43C5);
          real r43CE#1 = RMul(r43B4,r4342);
          real r43CF#1 = RMul(r43B6,r4344);
          real r43D0#1 = RMul(r43B8,r4346);
          real r43D1#1 = RMul(r43BA,r4348);
          real r43D2#1 = RMul(r43BC,r434A);
          real r43D3#1 = RMul(r43BE,r434C);
          real r43D4#1 = RMul(r43C0,r434E);
          real r43D5#1 = RMul(r43C2,r4350);
          real r43D6#1 = RMul(r43C4,r4352);
          real r43D7#1 = RAdd(r43CE,r43CF);
          real r43D8#1 = RAdd(r43D7,r43D0);
          real r43D9#1 = RAdd(r43D8,r43D1);
          real r43DA#1 = RAdd(r43D9,r43D2);
          real r43DB#1 = RAdd(r43DA,r43D3);
          real r43DC#1 = RAdd(r43DB,r43D4);
          real r43DD#1 = RAdd(r43DC,r43D5);
          real r43DE#1 = RAdd(r43DD,r43D6);
          real r43DF#1 = RMul(r43B4,r435C);
          real r43E0#1 = RMul(r43B6,r435E);
          real r43E1#1 = RMul(r43B8,r4360);
          real r43E2#1 = RMul(r43BA,r4362);
          real r43E3#1 = RMul(r43BC,r4364);
          real r43E4#1 = RMul(r43BE,r4366);
          real r43E5#1 = RMul(r43C0,r4368);
          real r43E6#1 = RMul(r43C2,r436A);
          real r43E7#1 = RMul(r43C4,r436C);
          real r43E8#1 = RAdd(r43DF,r43E0);
          real r43E9#1 = RAdd(r43E8,r43E1);
          real r43EA#1 = RAdd(r43E9,r43E2);
          real r43EB#1 = RAdd(r43EA,r43E3);
          real r43EC#1 = RAdd(r43EB,r43E4);
          real r43ED#1 = RAdd(r43EC,r43E5);
          real r43EE#1 = RAdd(r43ED,r43E6);
          real r43EF#1 = RAdd(r43EE,r43E7);
          real r44C6#3 = r3E3B;
          real r44C7#1 = r4341;
          real r44C8#1 = RMul(r44C6,r44C7);
          real r44C9#1 = r4390;
          real r44CA#1 = RMul(r44C6,r44C9);
          real r44CB#1 = r43CD;
          real r44CC#1 = RMul(r44C6,r44CB);
          real r44CE#3 = r3E43;
          real r44CF#1 = r435B;
          real r44D0#1 = RMul(r44CE,r44CF);
          real r44D1#1 = r43A1;
          real r44D2#1 = RMul(r44CE,r44D1);
          real r44D3#1 = r43DE;
          real r44D4#1 = RMul(r44CE,r44D3);
          real r44D6#3 = r3E4B;
          real r44D7#1 = r4375;
          real r44D8#1 = RMul(r44D6,r44D7);
          real r44D9#1 = r43B2;
          real r44DA#1 = RMul(r44D6,r44D9);
          real r44DB#1 = r43EF;
          real r44DC#1 = RMul(r44D6,r44DB);
          real op1_e3_l_14644F8#4 = VDot<3>(op1_e3_l_943E30,op1_e3_l_943E30);
          real r44FC#2 = r44C8;
          real r44FD#1 = RAdd(r44FC,r44FC);
          real r44FE#2 = r44D0;
          real r44FF#1 = RAdd(r44FE,r44FE);
          real r4500#2 = r44D8;
          real r4501#1 = RAdd(r4500,r4500);
          real r4502#1 = RAdd(r44FD,r44FF);
          real r4503#1 = RAdd(r4502,r4501);
          real r4504#2 = r44CA;
          real r4505#1 = RAdd(r4504,r4504);
          real r4506#2 = r44D2;
          real r4507#1 = RAdd(r4506,r4506);
          real r4508#2 = r44DA;
          real r4509#1 = RAdd(r4508,r4508);
          real r450A#1 = RAdd(r4505,r4507);
          real r450B#1 = RAdd(r450A,r4509);
          real r450C#2 = r44CC;
          real r450D#1 = RAdd(r450C,r450C);
          real r450E#2 = r44D4;
          real r450F#1 = RAdd(r450E,r450E);
          real r4510#2 = r44DC;
          real r4511#1 = RAdd(r4510,r4510);
          real r4512#1 = RAdd(r450D,r450F);
          real r4513#1 = RAdd(r4512,r4511);
          tensor[3] op1_e3_l_14744FB#3 = <tensor[3]>[r4503,r450B,r4513];
          tensor[3] op1_e3_l_250452E#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_14744FB);
          real op1_e3_l_2514531#1 = VDot<3>(op1_e3_l_14744FB,op1_e3_l_14744FB);
          real realLit4535#1 = 0.1e1;
          real r4536#3 = RDiv(realLit4535,op1_e3_l_2514531);
          real r4537#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_250452E);
          real r4538#1 = RMul(r4536,r4537);
          real r4539#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_250452E);
          real r453A#1 = RMul(r4536,r4539);
          real r453B#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_250452E);
          real r453C#1 = RMul(r4536,r453B);
          tensor[3] op1_e3_l_2524534#1 = <tensor[3]>[r4538,r453A,r453C];
          tensor[3] op1_e3_l_4244547#2 = VNeg<3>(op1_e3_l_2524534);
          real op1_e3_l_426454A#1 = VDot<3>(op1_e3_l_4244547,op1_e3_l_4244547);
          real op1_e3_l_427454D#1 = Sqrt(op1_e3_l_426454A);
          real op1_e3_l_4284550#1 = Abs<real>(op1_e3_l_427454D);
          real op1_e3_l_4294553#1 = RDiv(op1_e3_l_4284550,thick2411);
          real op1_e3_l_4304556#1 = RSub(_t3467,op1_e3_l_4294553);
          real op1_e3_l_4314559#2 = RMul(_t3469,op1_e3_l_4304556);
          real op1_e3_l_432455C#1 = RClamp(_t3465,_t3467,op1_e3_l_4314559);
          real _t455F#1 = RMul(maxAlpha2419,op1_e3_l_432455C);
          bool _t4562#1 = EQ<real>(_t455F,_t3465);
          if _t4562 then goto SAVE4565 else goto JOIN4567
        SAVE4565:  preds = [COND4564]
          self.rayN = rayN243D;
          active
          goto JOIN4567
        JOIN4567:  preds = [*ACTIVE4566,COND4564]
          real op1_e3_l_4334568#1 = RClamp(_t3465,_t3467,op1_e3_l_4314559);
          real op1_e3_l_434456B#1 = RMul(maxAlpha2419,op1_e3_l_4334568);
          real _t456E#1 = RSub(_t3467,op1_e3_l_434456B);
          real _t4571#1 = MathFn<pow>(_t456E,alphaFix242D);
          bool _t4573#1 = NEQ<real>(phKs2435,_t3465);
          if _t4573 then goto ASSIGN4578 else goto JOIN4947
        ASSIGN4578:  preds = [COND4575]
          tensor[3] op1_e3_l_1564576#3 = VAdd<3>(eyeDir242F,litwsp2425);
          real op1_e3_l_1584579#1 = VDot<3>(op1_e3_l_1564576,op1_e3_l_1564576);
          real op1_e3_l_159457C#1 = Sqrt(op1_e3_l_1584579);
          real r4580#9 = vdot3AF3;
          real r4581#1 = vdot3FC9;
          real r4582#1 = RMul(r4580,r4581);
          real r4583#9 = vdot3AF5;
          real r4584#1 = vdot3FD0;
          real r4585#1 = RMul(r4583,r4584);
          real r4586#9 = vdot3AF7;
          real r4587#1 = vdot3FD7;
          real r4588#1 = RMul(r4586,r4587);
          real r4589#1 = RAdd(r4582,r4585);
          real r458A#1 = RAdd(r4589,r4588);
          real r458B#1 = vdot3FCB;
          real r458C#1 = RMul(r4580,r458B);
          real r458D#1 = vdot3FD2;
          real r458E#1 = RMul(r4583,r458D);
          real r458F#1 = vdot3FD9;
          real r4590#1 = RMul(r4586,r458F);
          real r4591#1 = RAdd(r458C,r458E);
          real r4592#1 = RAdd(r4591,r4590);
          real r4593#1 = vdot3FCD;
          real r4594#1 = RMul(r4580,r4593);
          real r4595#1 = vdot3FD4;
          real r4596#1 = RMul(r4583,r4595);
          real r4597#1 = vdot3FDB;
          real r4598#1 = RMul(r4586,r4597);
          real r4599#1 = RAdd(r4594,r4596);
          real r459A#1 = RAdd(r4599,r4598);
          tensor[3] tensor459B#1 = <tensor[3]>[r458A,r4592,r459A];
          real r459C#1 = vdot3FDF;
          real r459D#1 = RMul(r4580,r459C);
          real r459E#1 = vdot3FE6;
          real r459F#1 = RMul(r4583,r459E);
          real r45A0#1 = vdot3FED;
          real r45A1#1 = RMul(r4586,r45A0);
          real r45A2#1 = RAdd(r459D,r459F);
          real r45A3#1 = RAdd(r45A2,r45A1);
          real r45A4#1 = vdot3FE1;
          real r45A5#1 = RMul(r4580,r45A4);
          real r45A6#1 = vdot3FE8;
          real r45A7#1 = RMul(r4583,r45A6);
          real r45A8#1 = vdot3FEF;
          real r45A9#1 = RMul(r4586,r45A8);
          real r45AA#1 = RAdd(r45A5,r45A7);
          real r45AB#1 = RAdd(r45AA,r45A9);
          real r45AC#1 = vdot3FE3;
          real r45AD#1 = RMul(r4580,r45AC);
          real r45AE#1 = vdot3FEA;
          real r45AF#1 = RMul(r4583,r45AE);
          real r45B0#1 = vdot3FF1;
          real r45B1#1 = RMul(r4586,r45B0);
          real r45B2#1 = RAdd(r45AD,r45AF);
          real r45B3#1 = RAdd(r45B2,r45B1);
          tensor[3] tensor45B4#1 = <tensor[3]>[r45A3,r45AB,r45B3];
          real r45B5#1 = vdot3FF5;
          real r45B6#1 = RMul(r4580,r45B5);
          real r45B7#1 = vdot3FFC;
          real r45B8#1 = RMul(r4583,r45B7);
          real r45B9#1 = vdot4003;
          real r45BA#1 = RMul(r4586,r45B9);
          real r45BB#1 = RAdd(r45B6,r45B8);
          real r45BC#1 = RAdd(r45BB,r45BA);
          real r45BD#1 = vdot3FF7;
          real r45BE#1 = RMul(r4580,r45BD);
          real r45BF#1 = vdot3FFE;
          real r45C0#1 = RMul(r4583,r45BF);
          real r45C1#1 = vdot4005;
          real r45C2#1 = RMul(r4586,r45C1);
          real r45C3#1 = RAdd(r45BE,r45C0);
          real r45C4#1 = RAdd(r45C3,r45C2);
          real r45C5#1 = vdot3FF9;
          real r45C6#1 = RMul(r4580,r45C5);
          real r45C7#1 = vdot4000;
          real r45C8#1 = RMul(r4583,r45C7);
          real r45C9#1 = vdot4007;
          real r45CA#1 = RMul(r4586,r45C9);
          real r45CB#1 = RAdd(r45C6,r45C8);
          real r45CC#1 = RAdd(r45CB,r45CA);
          tensor[3] tensor45CD#1 = <tensor[3]>[r45BC,r45C4,r45CC];
          real r461F#6 = vdot3CBC;
          real r4620#1 = RMul(r461F,r461F);
          real r4621#6 = vdot3CBE;
          real r4622#6 = vdot3CC3;
          real r4623#1 = RMul(r4621,r4622);
          real r4624#6 = vdot3CC0;
          real r4625#6 = vdot3CCA;
          real r4626#1 = RMul(r4624,r4625);
          real r4627#1 = RAdd(r4620,r4623);
          real r4628#1 = RAdd(r4627,r4626);
          real r4629#1 = RMul(r461F,r4621);
          real r462A#6 = vdot3CC5;
          real r462B#1 = RMul(r4621,r462A);
          real r462C#6 = vdot3CCC;
          real r462D#1 = RMul(r4624,r462C);
          real r462E#1 = RAdd(r4629,r462B);
          real r462F#1 = RAdd(r462E,r462D);
          real r4630#1 = RMul(r461F,r4624);
          real r4631#6 = vdot3CC7;
          real r4632#1 = RMul(r4621,r4631);
          real r4633#6 = vdot3CCE;
          real r4634#1 = RMul(r4624,r4633);
          real r4635#1 = RAdd(r4630,r4632);
          real r4636#1 = RAdd(r4635,r4634);
          tensor[3] tensor4637#1 = <tensor[3]>[r4628,r462F,r4636];
          real r4638#1 = RMul(r4622,r461F);
          real r4639#1 = RMul(r462A,r4622);
          real r463A#1 = RMul(r4631,r4625);
          real r463B#1 = RAdd(r4638,r4639);
          real r463C#1 = RAdd(r463B,r463A);
          real r463D#1 = RMul(r4622,r4621);
          real r463E#1 = RMul(r462A,r462A);
          real r463F#1 = RMul(r4631,r462C);
          real r4640#1 = RAdd(r463D,r463E);
          real r4641#1 = RAdd(r4640,r463F);
          real r4642#1 = RMul(r4622,r4624);
          real r4643#1 = RMul(r462A,r4631);
          real r4644#1 = RMul(r4631,r4633);
          real r4645#1 = RAdd(r4642,r4643);
          real r4646#1 = RAdd(r4645,r4644);
          tensor[3] tensor4647#1 = <tensor[3]>[r463C,r4641,r4646];
          real r4648#1 = RMul(r4625,r461F);
          real r4649#1 = RMul(r462C,r4622);
          real r464A#1 = RMul(r4633,r4625);
          real r464B#1 = RAdd(r4648,r4649);
          real r464C#1 = RAdd(r464B,r464A);
          real r464D#1 = RMul(r4625,r4621);
          real r464E#1 = RMul(r462C,r462A);
          real r464F#1 = RMul(r4633,r462C);
          real r4650#1 = RAdd(r464D,r464E);
          real r4651#1 = RAdd(r4650,r464F);
          real r4652#1 = RMul(r4625,r4624);
          real r4653#1 = RMul(r462C,r4631);
          real r4654#1 = RMul(r4633,r4633);
          real r4655#1 = RAdd(r4652,r4653);
          real r4656#1 = RAdd(r4655,r4654);
          tensor[3] tensor4657#1 = <tensor[3]>[r464C,r4651,r4656];
          tensor[3] projParam4694#1 = tensor459B;
          tensor[3] projParam4695#1 = tensor4637;
          tensor[3] v4696#3 = VAdd<3>(projParam4694,projParam4695);
          tensor[3] projParam4697#1 = tensor45B4;
          tensor[3] projParam4698#1 = tensor4647;
          tensor[3] v4699#3 = VAdd<3>(projParam4697,projParam4698);
          tensor[3] projParam469A#1 = tensor45CD;
          tensor[3] projParam469B#1 = tensor4657;
          tensor[3] v469C#3 = VAdd<3>(projParam469A,projParam469B);
          real r46A9#9 = vdot3AF3;
          real r46AA#3 = VIndex<3,0>(v4696);
          real r46AB#1 = RMul(r46A9,r46AA);
          real r46AC#3 = VIndex<3,1>(v4696);
          real r46AD#1 = RMul(r46A9,r46AC);
          real r46AE#3 = VIndex<3,2>(v4696);
          real r46AF#1 = RMul(r46A9,r46AE);
          tensor[3] tensor46B0#1 = <tensor[3]>[r46AB,r46AD,r46AF];
          real r46B1#3 = VIndex<3,0>(v4699);
          real r46B2#1 = RMul(r46A9,r46B1);
          real r46B3#3 = VIndex<3,1>(v4699);
          real r46B4#1 = RMul(r46A9,r46B3);
          real r46B5#3 = VIndex<3,2>(v4699);
          real r46B6#1 = RMul(r46A9,r46B5);
          tensor[3] tensor46B7#1 = <tensor[3]>[r46B2,r46B4,r46B6];
          real r46B8#3 = VIndex<3,0>(v469C);
          real r46B9#1 = RMul(r46A9,r46B8);
          real r46BA#3 = VIndex<3,1>(v469C);
          real r46BB#1 = RMul(r46A9,r46BA);
          real r46BC#3 = VIndex<3,2>(v469C);
          real r46BD#1 = RMul(r46A9,r46BC);
          tensor[3] tensor46BE#1 = <tensor[3]>[r46B9,r46BB,r46BD];
          real r46C0#9 = vdot3AF5;
          real r46C1#1 = RMul(r46C0,r46AA);
          real r46C2#1 = RMul(r46C0,r46AC);
          real r46C3#1 = RMul(r46C0,r46AE);
          tensor[3] tensor46C4#1 = <tensor[3]>[r46C1,r46C2,r46C3];
          real r46C5#1 = RMul(r46C0,r46B1);
          real r46C6#1 = RMul(r46C0,r46B3);
          real r46C7#1 = RMul(r46C0,r46B5);
          tensor[3] tensor46C8#1 = <tensor[3]>[r46C5,r46C6,r46C7];
          real r46C9#1 = RMul(r46C0,r46B8);
          real r46CA#1 = RMul(r46C0,r46BA);
          real r46CB#1 = RMul(r46C0,r46BC);
          tensor[3] tensor46CC#1 = <tensor[3]>[r46C9,r46CA,r46CB];
          real r46CE#9 = vdot3AF7;
          real r46CF#1 = RMul(r46CE,r46AA);
          real r46D0#1 = RMul(r46CE,r46AC);
          real r46D1#1 = RMul(r46CE,r46AE);
          tensor[3] tensor46D2#1 = <tensor[3]>[r46CF,r46D0,r46D1];
          real r46D3#1 = RMul(r46CE,r46B1);
          real r46D4#1 = RMul(r46CE,r46B3);
          real r46D5#1 = RMul(r46CE,r46B5);
          tensor[3] tensor46D6#1 = <tensor[3]>[r46D3,r46D4,r46D5];
          real r46D7#1 = RMul(r46CE,r46B8);
          real r46D8#1 = RMul(r46CE,r46BA);
          real r46D9#1 = RMul(r46CE,r46BC);
          tensor[3] tensor46DA#1 = <tensor[3]>[r46D7,r46D8,r46D9];
          tensor[3] projParam4712#1 = tensor4215;
          tensor[3] projParam4713#1 = tensor46B0;
          tensor[3] v4714#3 = VAdd<3>(projParam4712,projParam4713);
          tensor[3] projParam4715#1 = tensor421C;
          tensor[3] projParam4716#1 = tensor46C4;
          tensor[3] v4717#3 = VAdd<3>(projParam4715,projParam4716);
          tensor[3] projParam4718#1 = tensor4223;
          tensor[3] projParam4719#1 = tensor46D2;
          tensor[3] v471A#3 = VAdd<3>(projParam4718,projParam4719);
          tensor[3] projParam471C#1 = tensor4229;
          tensor[3] projParam471D#1 = tensor46B7;
          tensor[3] v471E#3 = VAdd<3>(projParam471C,projParam471D);
          tensor[3] projParam471F#1 = tensor422D;
          tensor[3] projParam4720#1 = tensor46C8;
          tensor[3] v4721#3 = VAdd<3>(projParam471F,projParam4720);
          tensor[3] projParam4722#1 = tensor4231;
          tensor[3] projParam4723#1 = tensor46D6;
          tensor[3] v4724#3 = VAdd<3>(projParam4722,projParam4723);
          tensor[3] projParam4726#1 = tensor4237;
          tensor[3] projParam4727#1 = tensor46BE;
          tensor[3] v4728#3 = VAdd<3>(projParam4726,projParam4727);
          tensor[3] projParam4729#1 = tensor423B;
          tensor[3] projParam472A#1 = tensor46CC;
          tensor[3] v472B#3 = VAdd<3>(projParam4729,projParam472A);
          tensor[3] projParam472C#1 = tensor423F;
          tensor[3] projParam472D#1 = tensor46DA;
          tensor[3] v472E#3 = VAdd<3>(projParam472C,projParam472D);
          real r4751#3 = VIndex<3,0>(v4714);
          real r4752#3 = r3CFD;
          real r4753#1 = RMul(r4751,r4752);
          real r4754#3 = VIndex<3,0>(v471E);
          real r4755#3 = r3D07;
          real r4756#1 = RMul(r4754,r4755);
          real r4757#3 = VIndex<3,0>(v4728);
          real r4758#3 = r3D12;
          real r4759#1 = RMul(r4757,r4758);
          real r475A#3 = VIndex<3,0>(v4717);
          real r475B#3 = r3D1D;
          real r475C#1 = RMul(r475A,r475B);
          real r475D#3 = VIndex<3,0>(v4721);
          real r475E#3 = r3CFD;
          real r475F#1 = RMul(r475D,r475E);
          real r4760#3 = VIndex<3,0>(v472B);
          real r4761#3 = r3D25;
          real r4762#1 = RMul(r4760,r4761);
          real r4763#3 = VIndex<3,0>(v471A);
          real r4764#3 = r3D30;
          real r4765#1 = RMul(r4763,r4764);
          real r4766#3 = VIndex<3,0>(v4724);
          real r4767#3 = r3D3A;
          real r4768#1 = RMul(r4766,r4767);
          real r4769#3 = VIndex<3,0>(v472E);
          real r476A#3 = r3CFD;
          real r476B#1 = RMul(r4769,r476A);
          real r476C#1 = RAdd(r4753,r4756);
          real r476D#1 = RAdd(r476C,r4759);
          real r476E#1 = RAdd(r476D,r475C);
          real r476F#1 = RAdd(r476E,r475F);
          real r4770#1 = RAdd(r476F,r4762);
          real r4771#1 = RAdd(r4770,r4765);
          real r4772#1 = RAdd(r4771,r4768);
          real r4773#1 = RAdd(r4772,r476B);
          real r4774#3 = r3D00;
          real r4775#1 = RMul(r4751,r4774);
          real r4776#3 = r3D09;
          real r4777#1 = RMul(r4754,r4776);
          real r4778#3 = r3D16;
          real r4779#1 = RMul(r4757,r4778);
          real r477A#3 = r3D1F;
          real r477B#1 = RMul(r475A,r477A);
          real r477C#3 = r3D00;
          real r477D#1 = RMul(r475D,r477C);
          real r477E#3 = r3D28;
          real r477F#1 = RMul(r4760,r477E);
          real r4780#3 = r3D33;
          real r4781#1 = RMul(r4763,r4780);
          real r4782#3 = r3D3D;
          real r4783#1 = RMul(r4766,r4782);
          real r4784#3 = r3D00;
          real r4785#1 = RMul(r4769,r4784);
          real r4786#1 = RAdd(r4775,r4777);
          real r4787#1 = RAdd(r4786,r4779);
          real r4788#1 = RAdd(r4787,r477B);
          real r4789#1 = RAdd(r4788,r477D);
          real r478A#1 = RAdd(r4789,r477F);
          real r478B#1 = RAdd(r478A,r4781);
          real r478C#1 = RAdd(r478B,r4783);
          real r478D#1 = RAdd(r478C,r4785);
          real r478E#3 = r3D03;
          real r478F#1 = RMul(r4751,r478E);
          real r4790#3 = r3D0C;
          real r4791#1 = RMul(r4754,r4790);
          real r4792#3 = r3D19;
          real r4793#1 = RMul(r4757,r4792);
          real r4794#3 = r3D21;
          real r4795#1 = RMul(r475A,r4794);
          real r4796#3 = r3D03;
          real r4797#1 = RMul(r475D,r4796);
          real r4798#3 = r3D2B;
          real r4799#1 = RMul(r4760,r4798);
          real r479A#3 = r3D36;
          real r479B#1 = RMul(r4763,r479A);
          real r479C#3 = r3D40;
          real r479D#1 = RMul(r4766,r479C);
          real r479E#3 = r3D03;
          real r479F#1 = RMul(r4769,r479E);
          real r47A0#1 = RAdd(r478F,r4791);
          real r47A1#1 = RAdd(r47A0,r4793);
          real r47A2#1 = RAdd(r47A1,r4795);
          real r47A3#1 = RAdd(r47A2,r4797);
          real r47A4#1 = RAdd(r47A3,r4799);
          real r47A5#1 = RAdd(r47A4,r479B);
          real r47A6#1 = RAdd(r47A5,r479D);
          real r47A7#1 = RAdd(r47A6,r479F);
          tensor[3] tensor47A8#1 = <tensor[3]>[r4773,r478D,r47A7];
          real r47A9#3 = VIndex<3,1>(v4714);
          real r47AA#1 = RMul(r47A9,r4752);
          real r47AB#3 = VIndex<3,1>(v471E);
          real r47AC#1 = RMul(r47AB,r4755);
          real r47AD#3 = VIndex<3,1>(v4728);
          real r47AE#1 = RMul(r47AD,r4758);
          real r47AF#3 = VIndex<3,1>(v4717);
          real r47B0#1 = RMul(r47AF,r475B);
          real r47B1#3 = VIndex<3,1>(v4721);
          real r47B2#1 = RMul(r47B1,r475E);
          real r47B3#3 = VIndex<3,1>(v472B);
          real r47B4#1 = RMul(r47B3,r4761);
          real r47B5#3 = VIndex<3,1>(v471A);
          real r47B6#1 = RMul(r47B5,r4764);
          real r47B7#3 = VIndex<3,1>(v4724);
          real r47B8#1 = RMul(r47B7,r4767);
          real r47B9#3 = VIndex<3,1>(v472E);
          real r47BA#1 = RMul(r47B9,r476A);
          real r47BB#1 = RAdd(r47AA,r47AC);
          real r47BC#1 = RAdd(r47BB,r47AE);
          real r47BD#1 = RAdd(r47BC,r47B0);
          real r47BE#1 = RAdd(r47BD,r47B2);
          real r47BF#1 = RAdd(r47BE,r47B4);
          real r47C0#1 = RAdd(r47BF,r47B6);
          real r47C1#1 = RAdd(r47C0,r47B8);
          real r47C2#1 = RAdd(r47C1,r47BA);
          real r47C3#1 = RMul(r47A9,r4774);
          real r47C4#1 = RMul(r47AB,r4776);
          real r47C5#1 = RMul(r47AD,r4778);
          real r47C6#1 = RMul(r47AF,r477A);
          real r47C7#1 = RMul(r47B1,r477C);
          real r47C8#1 = RMul(r47B3,r477E);
          real r47C9#1 = RMul(r47B5,r4780);
          real r47CA#1 = RMul(r47B7,r4782);
          real r47CB#1 = RMul(r47B9,r4784);
          real r47CC#1 = RAdd(r47C3,r47C4);
          real r47CD#1 = RAdd(r47CC,r47C5);
          real r47CE#1 = RAdd(r47CD,r47C6);
          real r47CF#1 = RAdd(r47CE,r47C7);
          real r47D0#1 = RAdd(r47CF,r47C8);
          real r47D1#1 = RAdd(r47D0,r47C9);
          real r47D2#1 = RAdd(r47D1,r47CA);
          real r47D3#1 = RAdd(r47D2,r47CB);
          real r47D4#1 = RMul(r47A9,r478E);
          real r47D5#1 = RMul(r47AB,r4790);
          real r47D6#1 = RMul(r47AD,r4792);
          real r47D7#1 = RMul(r47AF,r4794);
          real r47D8#1 = RMul(r47B1,r4796);
          real r47D9#1 = RMul(r47B3,r4798);
          real r47DA#1 = RMul(r47B5,r479A);
          real r47DB#1 = RMul(r47B7,r479C);
          real r47DC#1 = RMul(r47B9,r479E);
          real r47DD#1 = RAdd(r47D4,r47D5);
          real r47DE#1 = RAdd(r47DD,r47D6);
          real r47DF#1 = RAdd(r47DE,r47D7);
          real r47E0#1 = RAdd(r47DF,r47D8);
          real r47E1#1 = RAdd(r47E0,r47D9);
          real r47E2#1 = RAdd(r47E1,r47DA);
          real r47E3#1 = RAdd(r47E2,r47DB);
          real r47E4#1 = RAdd(r47E3,r47DC);
          tensor[3] tensor47E5#1 = <tensor[3]>[r47C2,r47D3,r47E4];
          real r47E6#3 = VIndex<3,2>(v4714);
          real r47E7#1 = RMul(r47E6,r4752);
          real r47E8#3 = VIndex<3,2>(v471E);
          real r47E9#1 = RMul(r47E8,r4755);
          real r47EA#3 = VIndex<3,2>(v4728);
          real r47EB#1 = RMul(r47EA,r4758);
          real r47EC#3 = VIndex<3,2>(v4717);
          real r47ED#1 = RMul(r47EC,r475B);
          real r47EE#3 = VIndex<3,2>(v4721);
          real r47EF#1 = RMul(r47EE,r475E);
          real r47F0#3 = VIndex<3,2>(v472B);
          real r47F1#1 = RMul(r47F0,r4761);
          real r47F2#3 = VIndex<3,2>(v471A);
          real r47F3#1 = RMul(r47F2,r4764);
          real r47F4#3 = VIndex<3,2>(v4724);
          real r47F5#1 = RMul(r47F4,r4767);
          real r47F6#3 = VIndex<3,2>(v472E);
          real r47F7#1 = RMul(r47F6,r476A);
          real r47F8#1 = RAdd(r47E7,r47E9);
          real r47F9#1 = RAdd(r47F8,r47EB);
          real r47FA#1 = RAdd(r47F9,r47ED);
          real r47FB#1 = RAdd(r47FA,r47EF);
          real r47FC#1 = RAdd(r47FB,r47F1);
          real r47FD#1 = RAdd(r47FC,r47F3);
          real r47FE#1 = RAdd(r47FD,r47F5);
          real r47FF#1 = RAdd(r47FE,r47F7);
          real r4800#1 = RMul(r47E6,r4774);
          real r4801#1 = RMul(r47E8,r4776);
          real r4802#1 = RMul(r47EA,r4778);
          real r4803#1 = RMul(r47EC,r477A);
          real r4804#1 = RMul(r47EE,r477C);
          real r4805#1 = RMul(r47F0,r477E);
          real r4806#1 = RMul(r47F2,r4780);
          real r4807#1 = RMul(r47F4,r4782);
          real r4808#1 = RMul(r47F6,r4784);
          real r4809#1 = RAdd(r4800,r4801);
          real r480A#1 = RAdd(r4809,r4802);
          real r480B#1 = RAdd(r480A,r4803);
          real r480C#1 = RAdd(r480B,r4804);
          real r480D#1 = RAdd(r480C,r4805);
          real r480E#1 = RAdd(r480D,r4806);
          real r480F#1 = RAdd(r480E,r4807);
          real r4810#1 = RAdd(r480F,r4808);
          real r4811#1 = RMul(r47E6,r478E);
          real r4812#1 = RMul(r47E8,r4790);
          real r4813#1 = RMul(r47EA,r4792);
          real r4814#1 = RMul(r47EC,r4794);
          real r4815#1 = RMul(r47EE,r4796);
          real r4816#1 = RMul(r47F0,r4798);
          real r4817#1 = RMul(r47F2,r479A);
          real r4818#1 = RMul(r47F4,r479C);
          real r4819#1 = RMul(r47F6,r479E);
          real r481A#1 = RAdd(r4811,r4812);
          real r481B#1 = RAdd(r481A,r4813);
          real r481C#1 = RAdd(r481B,r4814);
          real r481D#1 = RAdd(r481C,r4815);
          real r481E#1 = RAdd(r481D,r4816);
          real r481F#1 = RAdd(r481E,r4817);
          real r4820#1 = RAdd(r481F,r4818);
          real r4821#1 = RAdd(r4820,r4819);
          tensor[3] tensor4822#1 = <tensor[3]>[r47FF,r4810,r4821];
          tensor[3] projParam48F8#1 = tensor47A8;
          real vdot48F9#1 = VDot<3>(op1_e3_l_943E30,projParam48F8);
          tensor[3] projParam48FA#1 = tensor47E5;
          real vdot48FB#1 = VDot<3>(op1_e3_l_943E30,projParam48FA);
          tensor[3] projParam48FC#1 = tensor4822;
          real vdot48FD#1 = VDot<3>(op1_e3_l_943E30,projParam48FC);
          tensor[3] op1_e3_l_22248F7#2 = <tensor[3]>[vdot48F9,vdot48FB,vdot48FD];
          tensor[3] op1_e3_l_2254906#3 = VAdd<3>(op1_e3_l_22248F7,op1_e3_l_22248F7);
          tensor[3] op1_e3_l_3284909#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_2254906);
          real op1_e3_l_329490C#1 = VDot<3>(op1_e3_l_2254906,op1_e3_l_2254906);
          real realLit4910#1 = 0.1e1;
          real r4911#3 = RDiv(realLit4910,op1_e3_l_329490C);
          real r4912#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_3284909);
          real r4913#1 = RMul(r4911,r4912);
          real r4914#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_3284909);
          real r4915#1 = RMul(r4911,r4914);
          real r4916#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_3284909);
          real r4917#1 = RMul(r4911,r4916);
          tensor[3] op1_e3_l_330490F#1 = <tensor[3]>[r4913,r4915,r4917];
          tensor[3] op1_e3_l_6734922#3 = VNeg<3>(op1_e3_l_330490F);
          real op1_e3_l_6754925#1 = VDot<3>(op1_e3_l_6734922,op1_e3_l_6734922);
          real op1_e3_l_6764928#1 = Sqrt(op1_e3_l_6754925);
          real realLit492C#1 = 0.1e1;
          real op1_e3_l_678492B#1 = RDiv(realLit492C,op1_e3_l_6764928);
          tensor[3] op1_e3_l_6794930#1 = VScale<3>(op1_e3_l_678492B,op1_e3_l_6734922);
          tensor[3] op1_e3_l_6804933#1 = VNeg<3>(op1_e3_l_6794930);
          real realLit4937#1 = 0.1e1;
          real op1_e3_l_6824936#1 = RDiv(realLit4937,op1_e3_l_159457C);
          real op1_e3_l_683493B#1 = VDot<3>(op1_e3_l_6804933,op1_e3_l_1564576);
          real op1_e3_l_684493E#1 = RMul(op1_e3_l_6824936,op1_e3_l_683493B);
          real _t4941#1 = Abs<real>(op1_e3_l_684493E);
          real scomp4944#1 = MathFn<pow>(_t4941,phSp2437);
          goto JOIN4947
        JOIN4947:  preds = [ASSIGN4945,COND4575]
          real scomp4946#1 = phi(scomp4944,_t3465)
          real cmin4948#3 = VIndex<2,0>(cminmax241F);
          real cmax494A#2 = VIndex<2,1>(cminmax241F);
          tensor[3] mcol494C#1 = <tensor[3]>[_t3467,_t3467,_t3467];
          bool _t494E#1 = NEQ<real>(cmin4948,cmax494A);
          if _t494E then goto ASSIGN5721 else goto JOIN4F36
        ASSIGN5721:  preds = [COND4950]
          real r4952#9 = vdot3AF3;
          real r4953#1 = vdot3FC9;
          real r4954#1 = RMul(r4952,r4953);
          real r4955#9 = vdot3AF5;
          real r4956#1 = vdot3FD0;
          real r4957#1 = RMul(r4955,r4956);
          real r4958#9 = vdot3AF7;
          real r4959#1 = vdot3FD7;
          real r495A#1 = RMul(r4958,r4959);
          real r495B#1 = RAdd(r4954,r4957);
          real r495C#1 = RAdd(r495B,r495A);
          real r495D#1 = vdot3FCB;
          real r495E#1 = RMul(r4952,r495D);
          real r495F#1 = vdot3FD2;
          real r4960#1 = RMul(r4955,r495F);
          real r4961#1 = vdot3FD9;
          real r4962#1 = RMul(r4958,r4961);
          real r4963#1 = RAdd(r495E,r4960);
          real r4964#1 = RAdd(r4963,r4962);
          real r4965#1 = vdot3FCD;
          real r4966#1 = RMul(r4952,r4965);
          real r4967#1 = vdot3FD4;
          real r4968#1 = RMul(r4955,r4967);
          real r4969#1 = vdot3FDB;
          real r496A#1 = RMul(r4958,r4969);
          real r496B#1 = RAdd(r4966,r4968);
          real r496C#1 = RAdd(r496B,r496A);
          tensor[3] tensor496D#1 = <tensor[3]>[r495C,r4964,r496C];
          real r496E#1 = vdot3FDF;
          real r496F#1 = RMul(r4952,r496E);
          real r4970#1 = vdot3FE6;
          real r4971#1 = RMul(r4955,r4970);
          real r4972#1 = vdot3FED;
          real r4973#1 = RMul(r4958,r4972);
          real r4974#1 = RAdd(r496F,r4971);
          real r4975#1 = RAdd(r4974,r4973);
          real r4976#1 = vdot3FE1;
          real r4977#1 = RMul(r4952,r4976);
          real r4978#1 = vdot3FE8;
          real r4979#1 = RMul(r4955,r4978);
          real r497A#1 = vdot3FEF;
          real r497B#1 = RMul(r4958,r497A);
          real r497C#1 = RAdd(r4977,r4979);
          real r497D#1 = RAdd(r497C,r497B);
          real r497E#1 = vdot3FE3;
          real r497F#1 = RMul(r4952,r497E);
          real r4980#1 = vdot3FEA;
          real r4981#1 = RMul(r4955,r4980);
          real r4982#1 = vdot3FF1;
          real r4983#1 = RMul(r4958,r4982);
          real r4984#1 = RAdd(r497F,r4981);
          real r4985#1 = RAdd(r4984,r4983);
          tensor[3] tensor4986#1 = <tensor[3]>[r4975,r497D,r4985];
          real r4987#1 = vdot3FF5;
          real r4988#1 = RMul(r4952,r4987);
          real r4989#1 = vdot3FFC;
          real r498A#1 = RMul(r4955,r4989);
          real r498B#1 = vdot4003;
          real r498C#1 = RMul(r4958,r498B);
          real r498D#1 = RAdd(r4988,r498A);
          real r498E#1 = RAdd(r498D,r498C);
          real r498F#1 = vdot3FF7;
          real r4990#1 = RMul(r4952,r498F);
          real r4991#1 = vdot3FFE;
          real r4992#1 = RMul(r4955,r4991);
          real r4993#1 = vdot4005;
          real r4994#1 = RMul(r4958,r4993);
          real r4995#1 = RAdd(r4990,r4992);
          real r4996#1 = RAdd(r4995,r4994);
          real r4997#1 = vdot3FF9;
          real r4998#1 = RMul(r4952,r4997);
          real r4999#1 = vdot4000;
          real r499A#1 = RMul(r4955,r4999);
          real r499B#1 = vdot4007;
          real r499C#1 = RMul(r4958,r499B);
          real r499D#1 = RAdd(r4998,r499A);
          real r499E#1 = RAdd(r499D,r499C);
          tensor[3] tensor499F#1 = <tensor[3]>[r498E,r4996,r499E];
          real r49F1#6 = vdot3CBC;
          real r49F2#1 = RMul(r49F1,r49F1);
          real r49F3#6 = vdot3CBE;
          real r49F4#6 = vdot3CC3;
          real r49F5#1 = RMul(r49F3,r49F4);
          real r49F6#6 = vdot3CC0;
          real r49F7#6 = vdot3CCA;
          real r49F8#1 = RMul(r49F6,r49F7);
          real r49F9#1 = RAdd(r49F2,r49F5);
          real r49FA#1 = RAdd(r49F9,r49F8);
          real r49FB#1 = RMul(r49F1,r49F3);
          real r49FC#6 = vdot3CC5;
          real r49FD#1 = RMul(r49F3,r49FC);
          real r49FE#6 = vdot3CCC;
          real r49FF#1 = RMul(r49F6,r49FE);
          real r4A00#1 = RAdd(r49FB,r49FD);
          real r4A01#1 = RAdd(r4A00,r49FF);
          real r4A02#1 = RMul(r49F1,r49F6);
          real r4A03#6 = vdot3CC7;
          real r4A04#1 = RMul(r49F3,r4A03);
          real r4A05#6 = vdot3CCE;
          real r4A06#1 = RMul(r49F6,r4A05);
          real r4A07#1 = RAdd(r4A02,r4A04);
          real r4A08#1 = RAdd(r4A07,r4A06);
          tensor[3] tensor4A09#1 = <tensor[3]>[r49FA,r4A01,r4A08];
          real r4A0A#1 = RMul(r49F4,r49F1);
          real r4A0B#1 = RMul(r49FC,r49F4);
          real r4A0C#1 = RMul(r4A03,r49F7);
          real r4A0D#1 = RAdd(r4A0A,r4A0B);
          real r4A0E#1 = RAdd(r4A0D,r4A0C);
          real r4A0F#1 = RMul(r49F4,r49F3);
          real r4A10#1 = RMul(r49FC,r49FC);
          real r4A11#1 = RMul(r4A03,r49FE);
          real r4A12#1 = RAdd(r4A0F,r4A10);
          real r4A13#1 = RAdd(r4A12,r4A11);
          real r4A14#1 = RMul(r49F4,r49F6);
          real r4A15#1 = RMul(r49FC,r4A03);
          real r4A16#1 = RMul(r4A03,r4A05);
          real r4A17#1 = RAdd(r4A14,r4A15);
          real r4A18#1 = RAdd(r4A17,r4A16);
          tensor[3] tensor4A19#1 = <tensor[3]>[r4A0E,r4A13,r4A18];
          real r4A1A#1 = RMul(r49F7,r49F1);
          real r4A1B#1 = RMul(r49FE,r49F4);
          real r4A1C#1 = RMul(r4A05,r49F7);
          real r4A1D#1 = RAdd(r4A1A,r4A1B);
          real r4A1E#1 = RAdd(r4A1D,r4A1C);
          real r4A1F#1 = RMul(r49F7,r49F3);
          real r4A20#1 = RMul(r49FE,r49FC);
          real r4A21#1 = RMul(r4A05,r49FE);
          real r4A22#1 = RAdd(r4A1F,r4A20);
          real r4A23#1 = RAdd(r4A22,r4A21);
          real r4A24#1 = RMul(r49F7,r49F6);
          real r4A25#1 = RMul(r49FE,r4A03);
          real r4A26#1 = RMul(r4A05,r4A05);
          real r4A27#1 = RAdd(r4A24,r4A25);
          real r4A28#1 = RAdd(r4A27,r4A26);
          tensor[3] tensor4A29#1 = <tensor[3]>[r4A1E,r4A23,r4A28];
          tensor[3] projParam4A66#1 = tensor496D;
          tensor[3] projParam4A67#1 = tensor4A09;
          tensor[3] v4A68#3 = VAdd<3>(projParam4A66,projParam4A67);
          tensor[3] projParam4A69#1 = tensor4986;
          tensor[3] projParam4A6A#1 = tensor4A19;
          tensor[3] v4A6B#3 = VAdd<3>(projParam4A69,projParam4A6A);
          tensor[3] projParam4A6C#1 = tensor499F;
          tensor[3] projParam4A6D#1 = tensor4A29;
          tensor[3] v4A6E#3 = VAdd<3>(projParam4A6C,projParam4A6D);
          real r4A7B#9 = vdot3AF3;
          real r4A7C#3 = VIndex<3,0>(v4A68);
          real r4A7D#1 = RMul(r4A7B,r4A7C);
          real r4A7E#3 = VIndex<3,1>(v4A68);
          real r4A7F#1 = RMul(r4A7B,r4A7E);
          real r4A80#3 = VIndex<3,2>(v4A68);
          real r4A81#1 = RMul(r4A7B,r4A80);
          tensor[3] tensor4A82#1 = <tensor[3]>[r4A7D,r4A7F,r4A81];
          real r4A83#3 = VIndex<3,0>(v4A6B);
          real r4A84#1 = RMul(r4A7B,r4A83);
          real r4A85#3 = VIndex<3,1>(v4A6B);
          real r4A86#1 = RMul(r4A7B,r4A85);
          real r4A87#3 = VIndex<3,2>(v4A6B);
          real r4A88#1 = RMul(r4A7B,r4A87);
          tensor[3] tensor4A89#1 = <tensor[3]>[r4A84,r4A86,r4A88];
          real r4A8A#3 = VIndex<3,0>(v4A6E);
          real r4A8B#1 = RMul(r4A7B,r4A8A);
          real r4A8C#3 = VIndex<3,1>(v4A6E);
          real r4A8D#1 = RMul(r4A7B,r4A8C);
          real r4A8E#3 = VIndex<3,2>(v4A6E);
          real r4A8F#1 = RMul(r4A7B,r4A8E);
          tensor[3] tensor4A90#1 = <tensor[3]>[r4A8B,r4A8D,r4A8F];
          real r4A92#9 = vdot3AF5;
          real r4A93#1 = RMul(r4A92,r4A7C);
          real r4A94#1 = RMul(r4A92,r4A7E);
          real r4A95#1 = RMul(r4A92,r4A80);
          tensor[3] tensor4A96#1 = <tensor[3]>[r4A93,r4A94,r4A95];
          real r4A97#1 = RMul(r4A92,r4A83);
          real r4A98#1 = RMul(r4A92,r4A85);
          real r4A99#1 = RMul(r4A92,r4A87);
          tensor[3] tensor4A9A#1 = <tensor[3]>[r4A97,r4A98,r4A99];
          real r4A9B#1 = RMul(r4A92,r4A8A);
          real r4A9C#1 = RMul(r4A92,r4A8C);
          real r4A9D#1 = RMul(r4A92,r4A8E);
          tensor[3] tensor4A9E#1 = <tensor[3]>[r4A9B,r4A9C,r4A9D];
          real r4AA0#9 = vdot3AF7;
          real r4AA1#1 = RMul(r4AA0,r4A7C);
          real r4AA2#1 = RMul(r4AA0,r4A7E);
          real r4AA3#1 = RMul(r4AA0,r4A80);
          tensor[3] tensor4AA4#1 = <tensor[3]>[r4AA1,r4AA2,r4AA3];
          real r4AA5#1 = RMul(r4AA0,r4A83);
          real r4AA6#1 = RMul(r4AA0,r4A85);
          real r4AA7#1 = RMul(r4AA0,r4A87);
          tensor[3] tensor4AA8#1 = <tensor[3]>[r4AA5,r4AA6,r4AA7];
          real r4AA9#1 = RMul(r4AA0,r4A8A);
          real r4AAA#1 = RMul(r4AA0,r4A8C);
          real r4AAB#1 = RMul(r4AA0,r4A8E);
          tensor[3] tensor4AAC#1 = <tensor[3]>[r4AA9,r4AAA,r4AAB];
          tensor[3] projParam4AE4#1 = tensor4215;
          tensor[3] projParam4AE5#1 = tensor4A82;
          tensor[3] v4AE6#3 = VAdd<3>(projParam4AE4,projParam4AE5);
          tensor[3] projParam4AE7#1 = tensor421C;
          tensor[3] projParam4AE8#1 = tensor4A96;
          tensor[3] v4AE9#3 = VAdd<3>(projParam4AE7,projParam4AE8);
          tensor[3] projParam4AEA#1 = tensor4223;
          tensor[3] projParam4AEB#1 = tensor4AA4;
          tensor[3] v4AEC#3 = VAdd<3>(projParam4AEA,projParam4AEB);
          tensor[3] projParam4AEE#1 = tensor4229;
          tensor[3] projParam4AEF#1 = tensor4A89;
          tensor[3] v4AF0#3 = VAdd<3>(projParam4AEE,projParam4AEF);
          tensor[3] projParam4AF1#1 = tensor422D;
          tensor[3] projParam4AF2#1 = tensor4A9A;
          tensor[3] v4AF3#3 = VAdd<3>(projParam4AF1,projParam4AF2);
          tensor[3] projParam4AF4#1 = tensor4231;
          tensor[3] projParam4AF5#1 = tensor4AA8;
          tensor[3] v4AF6#3 = VAdd<3>(projParam4AF4,projParam4AF5);
          tensor[3] projParam4AF8#1 = tensor4237;
          tensor[3] projParam4AF9#1 = tensor4A90;
          tensor[3] v4AFA#3 = VAdd<3>(projParam4AF8,projParam4AF9);
          tensor[3] projParam4AFB#1 = tensor423B;
          tensor[3] projParam4AFC#1 = tensor4A9E;
          tensor[3] v4AFD#3 = VAdd<3>(projParam4AFB,projParam4AFC);
          tensor[3] projParam4AFE#1 = tensor423F;
          tensor[3] projParam4AFF#1 = tensor4AAC;
          tensor[3] v4B00#3 = VAdd<3>(projParam4AFE,projParam4AFF);
          real r4B23#3 = VIndex<3,0>(v4AE6);
          real r4B24#3 = r3CFD;
          real r4B25#1 = RMul(r4B23,r4B24);
          real r4B26#3 = VIndex<3,0>(v4AF0);
          real r4B27#3 = r3D07;
          real r4B28#1 = RMul(r4B26,r4B27);
          real r4B29#3 = VIndex<3,0>(v4AFA);
          real r4B2A#3 = r3D12;
          real r4B2B#1 = RMul(r4B29,r4B2A);
          real r4B2C#3 = VIndex<3,0>(v4AE9);
          real r4B2D#3 = r3D1D;
          real r4B2E#1 = RMul(r4B2C,r4B2D);
          real r4B2F#3 = VIndex<3,0>(v4AF3);
          real r4B30#3 = r3CFD;
          real r4B31#1 = RMul(r4B2F,r4B30);
          real r4B32#3 = VIndex<3,0>(v4AFD);
          real r4B33#3 = r3D25;
          real r4B34#1 = RMul(r4B32,r4B33);
          real r4B35#3 = VIndex<3,0>(v4AEC);
          real r4B36#3 = r3D30;
          real r4B37#1 = RMul(r4B35,r4B36);
          real r4B38#3 = VIndex<3,0>(v4AF6);
          real r4B39#3 = r3D3A;
          real r4B3A#1 = RMul(r4B38,r4B39);
          real r4B3B#3 = VIndex<3,0>(v4B00);
          real r4B3C#3 = r3CFD;
          real r4B3D#1 = RMul(r4B3B,r4B3C);
          real r4B3E#1 = RAdd(r4B25,r4B28);
          real r4B3F#1 = RAdd(r4B3E,r4B2B);
          real r4B40#1 = RAdd(r4B3F,r4B2E);
          real r4B41#1 = RAdd(r4B40,r4B31);
          real r4B42#1 = RAdd(r4B41,r4B34);
          real r4B43#1 = RAdd(r4B42,r4B37);
          real r4B44#1 = RAdd(r4B43,r4B3A);
          real r4B45#1 = RAdd(r4B44,r4B3D);
          real r4B46#3 = r3D00;
          real r4B47#1 = RMul(r4B23,r4B46);
          real r4B48#3 = r3D09;
          real r4B49#1 = RMul(r4B26,r4B48);
          real r4B4A#3 = r3D16;
          real r4B4B#1 = RMul(r4B29,r4B4A);
          real r4B4C#3 = r3D1F;
          real r4B4D#1 = RMul(r4B2C,r4B4C);
          real r4B4E#3 = r3D00;
          real r4B4F#1 = RMul(r4B2F,r4B4E);
          real r4B50#3 = r3D28;
          real r4B51#1 = RMul(r4B32,r4B50);
          real r4B52#3 = r3D33;
          real r4B53#1 = RMul(r4B35,r4B52);
          real r4B54#3 = r3D3D;
          real r4B55#1 = RMul(r4B38,r4B54);
          real r4B56#3 = r3D00;
          real r4B57#1 = RMul(r4B3B,r4B56);
          real r4B58#1 = RAdd(r4B47,r4B49);
          real r4B59#1 = RAdd(r4B58,r4B4B);
          real r4B5A#1 = RAdd(r4B59,r4B4D);
          real r4B5B#1 = RAdd(r4B5A,r4B4F);
          real r4B5C#1 = RAdd(r4B5B,r4B51);
          real r4B5D#1 = RAdd(r4B5C,r4B53);
          real r4B5E#1 = RAdd(r4B5D,r4B55);
          real r4B5F#1 = RAdd(r4B5E,r4B57);
          real r4B60#3 = r3D03;
          real r4B61#1 = RMul(r4B23,r4B60);
          real r4B62#3 = r3D0C;
          real r4B63#1 = RMul(r4B26,r4B62);
          real r4B64#3 = r3D19;
          real r4B65#1 = RMul(r4B29,r4B64);
          real r4B66#3 = r3D21;
          real r4B67#1 = RMul(r4B2C,r4B66);
          real r4B68#3 = r3D03;
          real r4B69#1 = RMul(r4B2F,r4B68);
          real r4B6A#3 = r3D2B;
          real r4B6B#1 = RMul(r4B32,r4B6A);
          real r4B6C#3 = r3D36;
          real r4B6D#1 = RMul(r4B35,r4B6C);
          real r4B6E#3 = r3D40;
          real r4B6F#1 = RMul(r4B38,r4B6E);
          real r4B70#3 = r3D03;
          real r4B71#1 = RMul(r4B3B,r4B70);
          real r4B72#1 = RAdd(r4B61,r4B63);
          real r4B73#1 = RAdd(r4B72,r4B65);
          real r4B74#1 = RAdd(r4B73,r4B67);
          real r4B75#1 = RAdd(r4B74,r4B69);
          real r4B76#1 = RAdd(r4B75,r4B6B);
          real r4B77#1 = RAdd(r4B76,r4B6D);
          real r4B78#1 = RAdd(r4B77,r4B6F);
          real r4B79#1 = RAdd(r4B78,r4B71);
          tensor[3] tensor4B7A#1 = <tensor[3]>[r4B45,r4B5F,r4B79];
          real r4B7B#3 = VIndex<3,1>(v4AE6);
          real r4B7C#1 = RMul(r4B7B,r4B24);
          real r4B7D#3 = VIndex<3,1>(v4AF0);
          real r4B7E#1 = RMul(r4B7D,r4B27);
          real r4B7F#3 = VIndex<3,1>(v4AFA);
          real r4B80#1 = RMul(r4B7F,r4B2A);
          real r4B81#3 = VIndex<3,1>(v4AE9);
          real r4B82#1 = RMul(r4B81,r4B2D);
          real r4B83#3 = VIndex<3,1>(v4AF3);
          real r4B84#1 = RMul(r4B83,r4B30);
          real r4B85#3 = VIndex<3,1>(v4AFD);
          real r4B86#1 = RMul(r4B85,r4B33);
          real r4B87#3 = VIndex<3,1>(v4AEC);
          real r4B88#1 = RMul(r4B87,r4B36);
          real r4B89#3 = VIndex<3,1>(v4AF6);
          real r4B8A#1 = RMul(r4B89,r4B39);
          real r4B8B#3 = VIndex<3,1>(v4B00);
          real r4B8C#1 = RMul(r4B8B,r4B3C);
          real r4B8D#1 = RAdd(r4B7C,r4B7E);
          real r4B8E#1 = RAdd(r4B8D,r4B80);
          real r4B8F#1 = RAdd(r4B8E,r4B82);
          real r4B90#1 = RAdd(r4B8F,r4B84);
          real r4B91#1 = RAdd(r4B90,r4B86);
          real r4B92#1 = RAdd(r4B91,r4B88);
          real r4B93#1 = RAdd(r4B92,r4B8A);
          real r4B94#1 = RAdd(r4B93,r4B8C);
          real r4B95#1 = RMul(r4B7B,r4B46);
          real r4B96#1 = RMul(r4B7D,r4B48);
          real r4B97#1 = RMul(r4B7F,r4B4A);
          real r4B98#1 = RMul(r4B81,r4B4C);
          real r4B99#1 = RMul(r4B83,r4B4E);
          real r4B9A#1 = RMul(r4B85,r4B50);
          real r4B9B#1 = RMul(r4B87,r4B52);
          real r4B9C#1 = RMul(r4B89,r4B54);
          real r4B9D#1 = RMul(r4B8B,r4B56);
          real r4B9E#1 = RAdd(r4B95,r4B96);
          real r4B9F#1 = RAdd(r4B9E,r4B97);
          real r4BA0#1 = RAdd(r4B9F,r4B98);
          real r4BA1#1 = RAdd(r4BA0,r4B99);
          real r4BA2#1 = RAdd(r4BA1,r4B9A);
          real r4BA3#1 = RAdd(r4BA2,r4B9B);
          real r4BA4#1 = RAdd(r4BA3,r4B9C);
          real r4BA5#1 = RAdd(r4BA4,r4B9D);
          real r4BA6#1 = RMul(r4B7B,r4B60);
          real r4BA7#1 = RMul(r4B7D,r4B62);
          real r4BA8#1 = RMul(r4B7F,r4B64);
          real r4BA9#1 = RMul(r4B81,r4B66);
          real r4BAA#1 = RMul(r4B83,r4B68);
          real r4BAB#1 = RMul(r4B85,r4B6A);
          real r4BAC#1 = RMul(r4B87,r4B6C);
          real r4BAD#1 = RMul(r4B89,r4B6E);
          real r4BAE#1 = RMul(r4B8B,r4B70);
          real r4BAF#1 = RAdd(r4BA6,r4BA7);
          real r4BB0#1 = RAdd(r4BAF,r4BA8);
          real r4BB1#1 = RAdd(r4BB0,r4BA9);
          real r4BB2#1 = RAdd(r4BB1,r4BAA);
          real r4BB3#1 = RAdd(r4BB2,r4BAB);
          real r4BB4#1 = RAdd(r4BB3,r4BAC);
          real r4BB5#1 = RAdd(r4BB4,r4BAD);
          real r4BB6#1 = RAdd(r4BB5,r4BAE);
          tensor[3] tensor4BB7#1 = <tensor[3]>[r4B94,r4BA5,r4BB6];
          real r4BB8#3 = VIndex<3,2>(v4AE6);
          real r4BB9#1 = RMul(r4BB8,r4B24);
          real r4BBA#3 = VIndex<3,2>(v4AF0);
          real r4BBB#1 = RMul(r4BBA,r4B27);
          real r4BBC#3 = VIndex<3,2>(v4AFA);
          real r4BBD#1 = RMul(r4BBC,r4B2A);
          real r4BBE#3 = VIndex<3,2>(v4AE9);
          real r4BBF#1 = RMul(r4BBE,r4B2D);
          real r4BC0#3 = VIndex<3,2>(v4AF3);
          real r4BC1#1 = RMul(r4BC0,r4B30);
          real r4BC2#3 = VIndex<3,2>(v4AFD);
          real r4BC3#1 = RMul(r4BC2,r4B33);
          real r4BC4#3 = VIndex<3,2>(v4AEC);
          real r4BC5#1 = RMul(r4BC4,r4B36);
          real r4BC6#3 = VIndex<3,2>(v4AF6);
          real r4BC7#1 = RMul(r4BC6,r4B39);
          real r4BC8#3 = VIndex<3,2>(v4B00);
          real r4BC9#1 = RMul(r4BC8,r4B3C);
          real r4BCA#1 = RAdd(r4BB9,r4BBB);
          real r4BCB#1 = RAdd(r4BCA,r4BBD);
          real r4BCC#1 = RAdd(r4BCB,r4BBF);
          real r4BCD#1 = RAdd(r4BCC,r4BC1);
          real r4BCE#1 = RAdd(r4BCD,r4BC3);
          real r4BCF#1 = RAdd(r4BCE,r4BC5);
          real r4BD0#1 = RAdd(r4BCF,r4BC7);
          real r4BD1#1 = RAdd(r4BD0,r4BC9);
          real r4BD2#1 = RMul(r4BB8,r4B46);
          real r4BD3#1 = RMul(r4BBA,r4B48);
          real r4BD4#1 = RMul(r4BBC,r4B4A);
          real r4BD5#1 = RMul(r4BBE,r4B4C);
          real r4BD6#1 = RMul(r4BC0,r4B4E);
          real r4BD7#1 = RMul(r4BC2,r4B50);
          real r4BD8#1 = RMul(r4BC4,r4B52);
          real r4BD9#1 = RMul(r4BC6,r4B54);
          real r4BDA#1 = RMul(r4BC8,r4B56);
          real r4BDB#1 = RAdd(r4BD2,r4BD3);
          real r4BDC#1 = RAdd(r4BDB,r4BD4);
          real r4BDD#1 = RAdd(r4BDC,r4BD5);
          real r4BDE#1 = RAdd(r4BDD,r4BD6);
          real r4BDF#1 = RAdd(r4BDE,r4BD7);
          real r4BE0#1 = RAdd(r4BDF,r4BD8);
          real r4BE1#1 = RAdd(r4BE0,r4BD9);
          real r4BE2#1 = RAdd(r4BE1,r4BDA);
          real r4BE3#1 = RMul(r4BB8,r4B60);
          real r4BE4#1 = RMul(r4BBA,r4B62);
          real r4BE5#1 = RMul(r4BBC,r4B64);
          real r4BE6#1 = RMul(r4BBE,r4B66);
          real r4BE7#1 = RMul(r4BC0,r4B68);
          real r4BE8#1 = RMul(r4BC2,r4B6A);
          real r4BE9#1 = RMul(r4BC4,r4B6C);
          real r4BEA#1 = RMul(r4BC6,r4B6E);
          real r4BEB#1 = RMul(r4BC8,r4B70);
          real r4BEC#1 = RAdd(r4BE3,r4BE4);
          real r4BED#1 = RAdd(r4BEC,r4BE5);
          real r4BEE#1 = RAdd(r4BED,r4BE6);
          real r4BEF#1 = RAdd(r4BEE,r4BE7);
          real r4BF0#1 = RAdd(r4BEF,r4BE8);
          real r4BF1#1 = RAdd(r4BF0,r4BE9);
          real r4BF2#1 = RAdd(r4BF1,r4BEA);
          real r4BF3#1 = RAdd(r4BF2,r4BEB);
          tensor[3] tensor4BF4#1 = <tensor[3]>[r4BD1,r4BE2,r4BF3];
          tensor[3] projParam4CCA#1 = tensor4B7A;
          real vdot4CCB#1 = VDot<3>(op1_e3_l_943E30,projParam4CCA);
          tensor[3] projParam4CCC#1 = tensor4BB7;
          real vdot4CCD#1 = VDot<3>(op1_e3_l_943E30,projParam4CCC);
          tensor[3] projParam4CCE#1 = tensor4BF4;
          real vdot4CCF#1 = VDot<3>(op1_e3_l_943E30,projParam4CCE);
          tensor[3] op1_e3_l_1434CC9#2 = <tensor[3]>[vdot4CCB,vdot4CCD,vdot4CCF];
          tensor[3] op1_e3_l_1464CD8#3 = VAdd<3>(op1_e3_l_1434CC9,op1_e3_l_1434CC9);
          tensor[3] op1_e3_l_2494CDB#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_1464CD8);
          real op1_e3_l_2504CDE#1 = VDot<3>(op1_e3_l_1464CD8,op1_e3_l_1464CD8);
          real realLit4CE2#1 = 0.1e1;
          real r4CE3#3 = RDiv(realLit4CE2,op1_e3_l_2504CDE);
          real r4CE4#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_2494CDB);
          real r4CE5#1 = RMul(r4CE3,r4CE4);
          real r4CE6#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_2494CDB);
          real r4CE7#1 = RMul(r4CE3,r4CE6);
          real r4CE8#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_2494CDB);
          real r4CE9#1 = RMul(r4CE3,r4CE8);
          tensor[3] op1_e3_l_2514CE1#1 = <tensor[3]>[r4CE5,r4CE7,r4CE9];
          tensor[3] op1_e3_l_2534CF4#1 = VNeg<3>(op1_e3_l_2514CE1);
          tensor[3] v4CF8#1 = VAdd<3>(rayOrig2429,op1_e3_l_52446);
          tensor[3] _t4CF7#3 = VAdd<3>(v4CF8,op1_e3_l_2534CF4);
          real varAcc4CFD#6 = VIndex<3,0>(_t4CF7);
          real varAcc4CFE#6 = VIndex<3,1>(_t4CF7);
          real varAcc4CFF#6 = VIndex<3,2>(_t4CF7);
          real coeff4D00#126 = 0.1e1;
          real prod4D01#7 = RMul(coeff4D00,coeff4D00);
          real prod4D02#1 = RMul(coeff4D00,prod4D01);
          real basisEval4D03#1 = RMul(coeff4D00,prod4D02);
          real iden4D04#7 = varAcc4CFF;
          real prod4D05#6 = RMul(coeff4D00,iden4D04);
          real prod4D06#1 = RMul(coeff4D00,prod4D05);
          real basisEval4D07#1 = RMul(coeff4D00,prod4D06);
          real iden4D08#7 = varAcc4CFE;
          real prod4D09#6 = RMul(iden4D08,coeff4D00);
          real prod4D0A#1 = RMul(coeff4D00,prod4D09);
          real basisEval4D0B#1 = RMul(coeff4D00,prod4D0A);
          real iden4D0C#22 = varAcc4CFD;
          real prod4D0D#1 = RMul(iden4D0C,prod4D01);
          real basisEval4D0E#1 = RMul(coeff4D00,prod4D0D);
          real prod24D0F#6 = RMul(iden4D04,varAcc4CFF);
          real prod4D10#5 = RMul(coeff4D00,prod24D0F);
          real prod4D11#1 = RMul(coeff4D00,prod4D10);
          real basisEval4D12#1 = RMul(coeff4D00,prod4D11);
          real prod4D13#5 = RMul(iden4D08,iden4D04);
          real prod4D14#1 = RMul(coeff4D00,prod4D13);
          real basisEval4D15#1 = RMul(coeff4D00,prod4D14);
          real prod24D16#6 = RMul(iden4D08,varAcc4CFE);
          real prod4D17#5 = RMul(prod24D16,coeff4D00);
          real prod4D18#1 = RMul(coeff4D00,prod4D17);
          real basisEval4D19#1 = RMul(coeff4D00,prod4D18);
          real prod4D1A#1 = RMul(iden4D0C,prod4D05);
          real basisEval4D1B#1 = RMul(coeff4D00,prod4D1A);
          real prod4D1C#1 = RMul(iden4D0C,prod4D09);
          real basisEval4D1D#1 = RMul(coeff4D00,prod4D1C);
          real prod24D1E#16 = RMul(iden4D0C,varAcc4CFD);
          real prod4D1F#1 = RMul(prod24D1E,prod4D01);
          real basisEval4D20#1 = RMul(coeff4D00,prod4D1F);
          real prod34D21#5 = RMul(prod24D0F,varAcc4CFF);
          real prod4D22#4 = RMul(coeff4D00,prod34D21);
          real prod4D23#1 = RMul(coeff4D00,prod4D22);
          real basisEval4D24#1 = RMul(coeff4D00,prod4D23);
          real prod4D25#4 = RMul(iden4D08,prod24D0F);
          real prod4D26#1 = RMul(coeff4D00,prod4D25);
          real basisEval4D27#1 = RMul(coeff4D00,prod4D26);
          real prod4D28#4 = RMul(prod24D16,iden4D04);
          real prod4D29#1 = RMul(coeff4D00,prod4D28);
          real basisEval4D2A#1 = RMul(coeff4D00,prod4D29);
          real prod34D2B#5 = RMul(prod24D16,varAcc4CFE);
          real prod4D2C#4 = RMul(prod34D2B,coeff4D00);
          real prod4D2D#1 = RMul(coeff4D00,prod4D2C);
          real basisEval4D2E#1 = RMul(coeff4D00,prod4D2D);
          real prod4D2F#1 = RMul(iden4D0C,prod4D10);
          real basisEval4D30#1 = RMul(coeff4D00,prod4D2F);
          real prod4D31#1 = RMul(iden4D0C,prod4D13);
          real basisEval4D32#1 = RMul(coeff4D00,prod4D31);
          real prod4D33#1 = RMul(iden4D0C,prod4D17);
          real basisEval4D34#1 = RMul(coeff4D00,prod4D33);
          real prod4D35#1 = RMul(prod24D1E,prod4D05);
          real basisEval4D36#1 = RMul(coeff4D00,prod4D35);
          real prod4D37#1 = RMul(prod24D1E,prod4D09);
          real basisEval4D38#1 = RMul(coeff4D00,prod4D37);
          real prod34D39#11 = RMul(prod24D1E,varAcc4CFD);
          real prod4D3A#1 = RMul(prod34D39,prod4D01);
          real basisEval4D3B#1 = RMul(coeff4D00,prod4D3A);
          real prod44D3C#4 = RMul(prod34D21,varAcc4CFF);
          real prod4D3D#3 = RMul(coeff4D00,prod44D3C);
          real prod4D3E#1 = RMul(coeff4D00,prod4D3D);
          real basisEval4D3F#1 = RMul(coeff4D00,prod4D3E);
          real prod4D40#3 = RMul(iden4D08,prod34D21);
          real prod4D41#1 = RMul(coeff4D00,prod4D40);
          real basisEval4D42#1 = RMul(coeff4D00,prod4D41);
          real prod4D43#3 = RMul(prod24D16,prod24D0F);
          real prod4D44#1 = RMul(coeff4D00,prod4D43);
          real basisEval4D45#1 = RMul(coeff4D00,prod4D44);
          real prod4D46#3 = RMul(prod34D2B,iden4D04);
          real prod4D47#1 = RMul(coeff4D00,prod4D46);
          real basisEval4D48#1 = RMul(coeff4D00,prod4D47);
          real prod44D49#4 = RMul(prod34D2B,varAcc4CFE);
          real prod4D4A#3 = RMul(prod44D49,coeff4D00);
          real prod4D4B#1 = RMul(coeff4D00,prod4D4A);
          real basisEval4D4C#1 = RMul(coeff4D00,prod4D4B);
          real prod4D4D#1 = RMul(iden4D0C,prod4D22);
          real basisEval4D4E#1 = RMul(coeff4D00,prod4D4D);
          real prod4D4F#1 = RMul(iden4D0C,prod4D25);
          real basisEval4D50#1 = RMul(coeff4D00,prod4D4F);
          real prod4D51#1 = RMul(iden4D0C,prod4D28);
          real basisEval4D52#1 = RMul(coeff4D00,prod4D51);
          real prod4D53#1 = RMul(iden4D0C,prod4D2C);
          real basisEval4D54#1 = RMul(coeff4D00,prod4D53);
          real prod4D55#1 = RMul(prod24D1E,prod4D10);
          real basisEval4D56#1 = RMul(coeff4D00,prod4D55);
          real prod4D57#1 = RMul(prod24D1E,prod4D13);
          real basisEval4D58#1 = RMul(coeff4D00,prod4D57);
          real prod4D59#1 = RMul(prod24D1E,prod4D17);
          real basisEval4D5A#1 = RMul(coeff4D00,prod4D59);
          real prod4D5B#1 = RMul(prod34D39,prod4D05);
          real basisEval4D5C#1 = RMul(coeff4D00,prod4D5B);
          real prod4D5D#1 = RMul(prod34D39,prod4D09);
          real basisEval4D5E#1 = RMul(coeff4D00,prod4D5D);
          real prod44D5F#7 = RMul(prod34D39,varAcc4CFD);
          real prod4D60#1 = RMul(prod44D5F,prod4D01);
          real basisEval4D61#1 = RMul(coeff4D00,prod4D60);
          real prod54D62#3 = RMul(prod44D3C,varAcc4CFF);
          real prod4D63#2 = RMul(coeff4D00,prod54D62);
          real prod4D64#1 = RMul(coeff4D00,prod4D63);
          real basisEval4D65#1 = RMul(coeff4D00,prod4D64);
          real prod4D66#2 = RMul(iden4D08,prod44D3C);
          real prod4D67#1 = RMul(coeff4D00,prod4D66);
          real basisEval4D68#1 = RMul(coeff4D00,prod4D67);
          real prod4D69#2 = RMul(prod24D16,prod34D21);
          real prod4D6A#1 = RMul(coeff4D00,prod4D69);
          real basisEval4D6B#1 = RMul(coeff4D00,prod4D6A);
          real prod4D6C#2 = RMul(prod34D2B,prod24D0F);
          real prod4D6D#1 = RMul(coeff4D00,prod4D6C);
          real basisEval4D6E#1 = RMul(coeff4D00,prod4D6D);
          real prod4D6F#2 = RMul(prod44D49,iden4D04);
          real prod4D70#1 = RMul(coeff4D00,prod4D6F);
          real basisEval4D71#1 = RMul(coeff4D00,prod4D70);
          real prod54D72#3 = RMul(prod44D49,varAcc4CFE);
          real prod4D73#2 = RMul(prod54D72,coeff4D00);
          real prod4D74#1 = RMul(coeff4D00,prod4D73);
          real basisEval4D75#1 = RMul(coeff4D00,prod4D74);
          real prod4D76#1 = RMul(iden4D0C,prod4D3D);
          real basisEval4D77#1 = RMul(coeff4D00,prod4D76);
          real prod4D78#1 = RMul(iden4D0C,prod4D40);
          real basisEval4D79#1 = RMul(coeff4D00,prod4D78);
          real prod4D7A#1 = RMul(iden4D0C,prod4D43);
          real basisEval4D7B#1 = RMul(coeff4D00,prod4D7A);
          real prod4D7C#1 = RMul(iden4D0C,prod4D46);
          real basisEval4D7D#1 = RMul(coeff4D00,prod4D7C);
          real prod4D7E#1 = RMul(iden4D0C,prod4D4A);
          real basisEval4D7F#1 = RMul(coeff4D00,prod4D7E);
          real prod4D80#1 = RMul(prod24D1E,prod4D22);
          real basisEval4D81#1 = RMul(coeff4D00,prod4D80);
          real prod4D82#1 = RMul(prod24D1E,prod4D25);
          real basisEval4D83#1 = RMul(coeff4D00,prod4D82);
          real prod4D84#1 = RMul(prod24D1E,prod4D28);
          real basisEval4D85#1 = RMul(coeff4D00,prod4D84);
          real prod4D86#1 = RMul(prod24D1E,prod4D2C);
          real basisEval4D87#1 = RMul(coeff4D00,prod4D86);
          real prod4D88#1 = RMul(prod34D39,prod4D10);
          real basisEval4D89#1 = RMul(coeff4D00,prod4D88);
          real prod4D8A#1 = RMul(prod34D39,prod4D13);
          real basisEval4D8B#1 = RMul(coeff4D00,prod4D8A);
          real prod4D8C#1 = RMul(prod34D39,prod4D17);
          real basisEval4D8D#1 = RMul(coeff4D00,prod4D8C);
          real prod4D8E#1 = RMul(prod44D5F,prod4D05);
          real basisEval4D8F#1 = RMul(coeff4D00,prod4D8E);
          real prod4D90#1 = RMul(prod44D5F,prod4D09);
          real basisEval4D91#1 = RMul(coeff4D00,prod4D90);
          real prod54D92#4 = RMul(prod44D5F,varAcc4CFD);
          real prod4D93#1 = RMul(prod54D92,prod4D01);
          real basisEval4D94#1 = RMul(coeff4D00,prod4D93);
          real prod64D95#1 = RMul(prod54D62,varAcc4CFF);
          real prod4D96#1 = RMul(coeff4D00,prod64D95);
          real prod4D97#1 = RMul(coeff4D00,prod4D96);
          real basisEval4D98#1 = RMul(coeff4D00,prod4D97);
          real prod4D99#1 = RMul(iden4D08,prod54D62);
          real prod4D9A#1 = RMul(coeff4D00,prod4D99);
          real basisEval4D9B#1 = RMul(coeff4D00,prod4D9A);
          real prod4D9C#1 = RMul(prod24D16,prod44D3C);
          real prod4D9D#1 = RMul(coeff4D00,prod4D9C);
          real basisEval4D9E#1 = RMul(coeff4D00,prod4D9D);
          real prod4D9F#1 = RMul(prod34D2B,prod34D21);
          real prod4DA0#1 = RMul(coeff4D00,prod4D9F);
          real basisEval4DA1#1 = RMul(coeff4D00,prod4DA0);
          real prod4DA2#1 = RMul(prod44D49,prod24D0F);
          real prod4DA3#1 = RMul(coeff4D00,prod4DA2);
          real basisEval4DA4#1 = RMul(coeff4D00,prod4DA3);
          real prod4DA5#1 = RMul(prod54D72,iden4D04);
          real prod4DA6#1 = RMul(coeff4D00,prod4DA5);
          real basisEval4DA7#1 = RMul(coeff4D00,prod4DA6);
          real prod64DA8#1 = RMul(prod54D72,varAcc4CFE);
          real prod4DA9#1 = RMul(prod64DA8,coeff4D00);
          real prod4DAA#1 = RMul(coeff4D00,prod4DA9);
          real basisEval4DAB#1 = RMul(coeff4D00,prod4DAA);
          real prod4DAC#1 = RMul(iden4D0C,prod4D63);
          real basisEval4DAD#1 = RMul(coeff4D00,prod4DAC);
          real prod4DAE#1 = RMul(iden4D0C,prod4D66);
          real basisEval4DAF#1 = RMul(coeff4D00,prod4DAE);
          real prod4DB0#1 = RMul(iden4D0C,prod4D69);
          real basisEval4DB1#1 = RMul(coeff4D00,prod4DB0);
          real prod4DB2#1 = RMul(iden4D0C,prod4D6C);
          real basisEval4DB3#1 = RMul(coeff4D00,prod4DB2);
          real prod4DB4#1 = RMul(iden4D0C,prod4D6F);
          real basisEval4DB5#1 = RMul(coeff4D00,prod4DB4);
          real prod4DB6#1 = RMul(iden4D0C,prod4D73);
          real basisEval4DB7#1 = RMul(coeff4D00,prod4DB6);
          real prod4DB8#1 = RMul(prod24D1E,prod4D3D);
          real basisEval4DB9#1 = RMul(coeff4D00,prod4DB8);
          real prod4DBA#1 = RMul(prod24D1E,prod4D40);
          real basisEval4DBB#1 = RMul(coeff4D00,prod4DBA);
          real prod4DBC#1 = RMul(prod24D1E,prod4D43);
          real basisEval4DBD#1 = RMul(coeff4D00,prod4DBC);
          real prod4DBE#1 = RMul(prod24D1E,prod4D46);
          real basisEval4DBF#1 = RMul(coeff4D00,prod4DBE);
          real prod4DC0#1 = RMul(prod24D1E,prod4D4A);
          real basisEval4DC1#1 = RMul(coeff4D00,prod4DC0);
          real prod4DC2#1 = RMul(prod34D39,prod4D22);
          real basisEval4DC3#1 = RMul(coeff4D00,prod4DC2);
          real prod4DC4#1 = RMul(prod34D39,prod4D25);
          real basisEval4DC5#1 = RMul(coeff4D00,prod4DC4);
          real prod4DC6#1 = RMul(prod34D39,prod4D28);
          real basisEval4DC7#1 = RMul(coeff4D00,prod4DC6);
          real prod4DC8#1 = RMul(prod34D39,prod4D2C);
          real basisEval4DC9#1 = RMul(coeff4D00,prod4DC8);
          real prod4DCA#1 = RMul(prod44D5F,prod4D10);
          real basisEval4DCB#1 = RMul(coeff4D00,prod4DCA);
          real prod4DCC#1 = RMul(prod44D5F,prod4D13);
          real basisEval4DCD#1 = RMul(coeff4D00,prod4DCC);
          real prod4DCE#1 = RMul(prod44D5F,prod4D17);
          real basisEval4DCF#1 = RMul(coeff4D00,prod4DCE);
          real prod4DD0#1 = RMul(prod54D92,prod4D05);
          real basisEval4DD1#1 = RMul(coeff4D00,prod4DD0);
          real prod4DD2#1 = RMul(prod54D92,prod4D09);
          real basisEval4DD3#1 = RMul(coeff4D00,prod4DD2);
          real prod64DD4#1 = RMul(prod54D92,varAcc4CFD);
          real prod4DD5#1 = RMul(prod64DD4,prod4D01);
          real basisEval4DD6#1 = RMul(coeff4D00,prod4DD5);
          tensor[84] intermediateCons4DD7#1 = <tensor[84]>[basisEval4D03,basisEval4D07,basisEval4D0B,basisEval4D0E,basisEval4D12,basisEval4D15,basisEval4D19,basisEval4D1B,basisEval4D1D,basisEval4D20,basisEval4D24,basisEval4D27,basisEval4D2A,basisEval4D2E,basisEval4D30,basisEval4D32,basisEval4D34,basisEval4D36,basisEval4D38,basisEval4D3B,basisEval4D3F,basisEval4D42,basisEval4D45,basisEval4D48,basisEval4D4C,basisEval4D4E,basisEval4D50,basisEval4D52,basisEval4D54,basisEval4D56,basisEval4D58,basisEval4D5A,basisEval4D5C,basisEval4D5E,basisEval4D61,basisEval4D65,basisEval4D68,basisEval4D6B,basisEval4D6E,basisEval4D71,basisEval4D75,basisEval4D77,basisEval4D79,basisEval4D7B,basisEval4D7D,basisEval4D7F,basisEval4D81,basisEval4D83,basisEval4D85,basisEval4D87,basisEval4D89,basisEval4D8B,basisEval4D8D,basisEval4D8F,basisEval4D91,basisEval4D94,basisEval4D98,basisEval4D9B,basisEval4D9E,basisEval4DA1,basisEval4DA4,basisEval4DA7,basisEval4DAB,basisEval4DAD,basisEval4DAF,basisEval4DB1,basisEval4DB3,basisEval4DB5,basisEval4DB7,basisEval4DB9,basisEval4DBB,basisEval4DBD,basisEval4DBF,basisEval4DC1,basisEval4DC3,basisEval4DC5,basisEval4DC7,basisEval4DC9,basisEval4DCB,basisEval4DCD,basisEval4DCF,basisEval4DD1,basisEval4DD3,basisEval4DD6];
          tensor[84] basisResult4CFC#1 = intermediateCons4DD7;
          real probe_l_84EB4#1 = VDot<84>(femDofs366B,basisResult4CFC);
          real op1_e3_l_94EB7#1 = RSub(probe_l_84EB4,cmin4948);
          real op1_e3_l_104EBA#1 = RSub(cmax494A,cmin4948);
          real op1_e3_l_114EBD#1 = RDiv(op1_e3_l_94EB7,op1_e3_l_104EBA);
          real op1_e3_l_124EC0#1 = RSub(_t3467,_t3465);
          real op1_e3_l_134EC3#1 = RMul(op1_e3_l_114EBD,op1_e3_l_124EC0);
          real _t4EC6#1 = RAdd(_t3465,op1_e3_l_134EC3);
          real Mtransform4EC9#1 = Transform<IMAGE1D<double[3]>>(cmap23FF);
          real MxPos4ECB#1 = RMul(Mtransform4EC9,_t4EC6);
          real Ttranslate4ECE#1 = Translate<IMAGE1D<double[3]>>(cmap23FF);
          real imgPos4ED0#2 = RAdd(MxPos4ECB,Ttranslate4ECE);
          real nd4ED3#2 = Floor<1>(imgPos4ED0);
          real f4ED5#2 = RSub(imgPos4ED0,nd4ED3);
          int n4ED8#1 = RealToInt<1>(nd4ED3);
          int idx4EDA#5 = n4ED8;
          bool isInside4EDC#1 = IndexInside<IMAGE1D<double[3]>,2>(idx4EDA,cmap23FF);
          if isInside4EDC then goto ASSIGN57A5 else goto ASSIGN582D
        ASSIGN57A5:  preds = [COND4EDE]
          int addRes4EE1#1 = idx4EDA;
          int stride4EE2#2 = 3;
          int offp4EE3#3 = IMul(stride4EE2,addRes4EE1);
          real v0_4EE4#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE3);
          int ilit4EE5#3 = 1;
          int addRes4EE6#1 = IAdd(idx4EDA,ilit4EE5);
          int offp4EE7#3 = IMul(stride4EE2,addRes4EE6);
          real v1_4EE8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE7);
          tensor[2] v_4EE9#1 = <tensor[2]>[v0_4EE4,v1_4EE8];
          int offp4EEA#1 = IAdd(offp4EE3,ilit4EE5);
          real v0_4EEB#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEA);
          int offp4EEC#1 = IAdd(offp4EE7,ilit4EE5);
          real v1_4EED#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEC);
          tensor[2] v_4EEE#1 = <tensor[2]>[v0_4EEB,v1_4EED];
          int offset4EEF#2 = 2;
          int offp4EF0#1 = IAdd(offp4EE3,offset4EEF);
          real v0_4EF1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF0);
          int offp4EF2#1 = IAdd(offp4EE7,offset4EEF);
          real v1_4EF3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF2);
          tensor[2] v_4EF4#1 = <tensor[2]>[v0_4EF1,v1_4EF3];
          tensor[3,2] voxels4EF5#1 = <tensor[3,2]>[v_4EE9,v_4EEE,v_4EF4];
          tensor[3,2] ldvox4EDF#1 = voxels4EF5;
          goto JOIN4F0F
        JOIN4F0F:  preds = [ASSIGN4F0C,ASSIGN5395]
          tensor[3,2] ldvox4F0D#3 = phi(ldvox4EDF,ldvox4F0E)
          real rlit4F11#1 = 0.1e1;
          real idx4F12#1 = RSub(f4ED5,rlit4F11);
          tensor[2] kernX_4F10#1 = <tensor[2]>[f4ED5,idx4F12];
          real _f4F1B#1 = 0.1e1;
          real _f4F1C#1 = 0.1e1;
          tensor[2] a04F17#1 = <tensor[2]>[_f4F1B,_f4F1C];
          real _f4F19#1 = -0.1e1;
          real _f4F1A#1 = 0.1e1;
          tensor[2] a14F18#1 = <tensor[2]>[_f4F19,_f4F1A];
          tensor[2] prod14F1D#1 = VMul<2>(kernX_4F10,a14F18);
          tensor[2] kevalX_d0_4F16#3 = VAdd<2>(a04F17,prod14F1D);
          tensor[2] projIx4F27#1 = ProjectLast<tensor[3,2],[0]>(ldvox4F0D);
          real vdot4F28#1 = VDot<2>(projIx4F27,kevalX_d0_4F16);
          tensor[2] projIx4F29#1 = ProjectLast<tensor[3,2],[1]>(ldvox4F0D);
          real vdot4F2A#1 = VDot<2>(projIx4F29,kevalX_d0_4F16);
          tensor[2] projIx4F2B#1 = ProjectLast<tensor[3,2],[2]>(ldvox4F0D);
          real vdot4F2C#1 = VDot<2>(projIx4F2B,kevalX_d0_4F16);
          tensor[3] mcol4F26#1 = <tensor[3]>[vdot4F28,vdot4F2A,vdot4F2C];
          goto JOIN4F36
        JOIN4F36:  preds = [ASSIGN4F34,COND4950]
          tensor[3] mcol4F35#3 = phi(mcol4F26,mcol494C)
          real r4F38#9 = vdot3AF3;
          real r4F39#1 = vdot3FC9;
          real r4F3A#1 = RMul(r4F38,r4F39);
          real r4F3B#9 = vdot3AF5;
          real r4F3C#1 = vdot3FD0;
          real r4F3D#1 = RMul(r4F3B,r4F3C);
          real r4F3E#9 = vdot3AF7;
          real r4F3F#1 = vdot3FD7;
          real r4F40#1 = RMul(r4F3E,r4F3F);
          real r4F41#1 = RAdd(r4F3A,r4F3D);
          real r4F42#1 = RAdd(r4F41,r4F40);
          real r4F43#1 = vdot3FCB;
          real r4F44#1 = RMul(r4F38,r4F43);
          real r4F45#1 = vdot3FD2;
          real r4F46#1 = RMul(r4F3B,r4F45);
          real r4F47#1 = vdot3FD9;
          real r4F48#1 = RMul(r4F3E,r4F47);
          real r4F49#1 = RAdd(r4F44,r4F46);
          real r4F4A#1 = RAdd(r4F49,r4F48);
          real r4F4B#1 = vdot3FCD;
          real r4F4C#1 = RMul(r4F38,r4F4B);
          real r4F4D#1 = vdot3FD4;
          real r4F4E#1 = RMul(r4F3B,r4F4D);
          real r4F4F#1 = vdot3FDB;
          real r4F50#1 = RMul(r4F3E,r4F4F);
          real r4F51#1 = RAdd(r4F4C,r4F4E);
          real r4F52#1 = RAdd(r4F51,r4F50);
          tensor[3] tensor4F53#1 = <tensor[3]>[r4F42,r4F4A,r4F52];
          real r4F54#1 = vdot3FDF;
          real r4F55#1 = RMul(r4F38,r4F54);
          real r4F56#1 = vdot3FE6;
          real r4F57#1 = RMul(r4F3B,r4F56);
          real r4F58#1 = vdot3FED;
          real r4F59#1 = RMul(r4F3E,r4F58);
          real r4F5A#1 = RAdd(r4F55,r4F57);
          real r4F5B#1 = RAdd(r4F5A,r4F59);
          real r4F5C#1 = vdot3FE1;
          real r4F5D#1 = RMul(r4F38,r4F5C);
          real r4F5E#1 = vdot3FE8;
          real r4F5F#1 = RMul(r4F3B,r4F5E);
          real r4F60#1 = vdot3FEF;
          real r4F61#1 = RMul(r4F3E,r4F60);
          real r4F62#1 = RAdd(r4F5D,r4F5F);
          real r4F63#1 = RAdd(r4F62,r4F61);
          real r4F64#1 = vdot3FE3;
          real r4F65#1 = RMul(r4F38,r4F64);
          real r4F66#1 = vdot3FEA;
          real r4F67#1 = RMul(r4F3B,r4F66);
          real r4F68#1 = vdot3FF1;
          real r4F69#1 = RMul(r4F3E,r4F68);
          real r4F6A#1 = RAdd(r4F65,r4F67);
          real r4F6B#1 = RAdd(r4F6A,r4F69);
          tensor[3] tensor4F6C#1 = <tensor[3]>[r4F5B,r4F63,r4F6B];
          real r4F6D#1 = vdot3FF5;
          real r4F6E#1 = RMul(r4F38,r4F6D);
          real r4F6F#1 = vdot3FFC;
          real r4F70#1 = RMul(r4F3B,r4F6F);
          real r4F71#1 = vdot4003;
          real r4F72#1 = RMul(r4F3E,r4F71);
          real r4F73#1 = RAdd(r4F6E,r4F70);
          real r4F74#1 = RAdd(r4F73,r4F72);
          real r4F75#1 = vdot3FF7;
          real r4F76#1 = RMul(r4F38,r4F75);
          real r4F77#1 = vdot3FFE;
          real r4F78#1 = RMul(r4F3B,r4F77);
          real r4F79#1 = vdot4005;
          real r4F7A#1 = RMul(r4F3E,r4F79);
          real r4F7B#1 = RAdd(r4F76,r4F78);
          real r4F7C#1 = RAdd(r4F7B,r4F7A);
          real r4F7D#1 = vdot3FF9;
          real r4F7E#1 = RMul(r4F38,r4F7D);
          real r4F7F#1 = vdot4000;
          real r4F80#1 = RMul(r4F3B,r4F7F);
          real r4F81#1 = vdot4007;
          real r4F82#1 = RMul(r4F3E,r4F81);
          real r4F83#1 = RAdd(r4F7E,r4F80);
          real r4F84#1 = RAdd(r4F83,r4F82);
          tensor[3] tensor4F85#1 = <tensor[3]>[r4F74,r4F7C,r4F84];
          real r4FD7#6 = vdot3CBC;
          real r4FD8#1 = RMul(r4FD7,r4FD7);
          real r4FD9#6 = vdot3CBE;
          real r4FDA#6 = vdot3CC3;
          real r4FDB#1 = RMul(r4FD9,r4FDA);
          real r4FDC#6 = vdot3CC0;
          real r4FDD#6 = vdot3CCA;
          real r4FDE#1 = RMul(r4FDC,r4FDD);
          real r4FDF#1 = RAdd(r4FD8,r4FDB);
          real r4FE0#1 = RAdd(r4FDF,r4FDE);
          real r4FE1#1 = RMul(r4FD7,r4FD9);
          real r4FE2#6 = vdot3CC5;
          real r4FE3#1 = RMul(r4FD9,r4FE2);
          real r4FE4#6 = vdot3CCC;
          real r4FE5#1 = RMul(r4FDC,r4FE4);
          real r4FE6#1 = RAdd(r4FE1,r4FE3);
          real r4FE7#1 = RAdd(r4FE6,r4FE5);
          real r4FE8#1 = RMul(r4FD7,r4FDC);
          real r4FE9#6 = vdot3CC7;
          real r4FEA#1 = RMul(r4FD9,r4FE9);
          real r4FEB#6 = vdot3CCE;
          real r4FEC#1 = RMul(r4FDC,r4FEB);
          real r4FED#1 = RAdd(r4FE8,r4FEA);
          real r4FEE#1 = RAdd(r4FED,r4FEC);
          tensor[3] tensor4FEF#1 = <tensor[3]>[r4FE0,r4FE7,r4FEE];
          real r4FF0#1 = RMul(r4FDA,r4FD7);
          real r4FF1#1 = RMul(r4FE2,r4FDA);
          real r4FF2#1 = RMul(r4FE9,r4FDD);
          real r4FF3#1 = RAdd(r4FF0,r4FF1);
          real r4FF4#1 = RAdd(r4FF3,r4FF2);
          real r4FF5#1 = RMul(r4FDA,r4FD9);
          real r4FF6#1 = RMul(r4FE2,r4FE2);
          real r4FF7#1 = RMul(r4FE9,r4FE4);
          real r4FF8#1 = RAdd(r4FF5,r4FF6);
          real r4FF9#1 = RAdd(r4FF8,r4FF7);
          real r4FFA#1 = RMul(r4FDA,r4FDC);
          real r4FFB#1 = RMul(r4FE2,r4FE9);
          real r4FFC#1 = RMul(r4FE9,r4FEB);
          real r4FFD#1 = RAdd(r4FFA,r4FFB);
          real r4FFE#1 = RAdd(r4FFD,r4FFC);
          tensor[3] tensor4FFF#1 = <tensor[3]>[r4FF4,r4FF9,r4FFE];
          real r5000#1 = RMul(r4FDD,r4FD7);
          real r5001#1 = RMul(r4FE4,r4FDA);
          real r5002#1 = RMul(r4FEB,r4FDD);
          real r5003#1 = RAdd(r5000,r5001);
          real r5004#1 = RAdd(r5003,r5002);
          real r5005#1 = RMul(r4FDD,r4FD9);
          real r5006#1 = RMul(r4FE4,r4FE2);
          real r5007#1 = RMul(r4FEB,r4FE4);
          real r5008#1 = RAdd(r5005,r5006);
          real r5009#1 = RAdd(r5008,r5007);
          real r500A#1 = RMul(r4FDD,r4FDC);
          real r500B#1 = RMul(r4FE4,r4FE9);
          real r500C#1 = RMul(r4FEB,r4FEB);
          real r500D#1 = RAdd(r500A,r500B);
          real r500E#1 = RAdd(r500D,r500C);
          tensor[3] tensor500F#1 = <tensor[3]>[r5004,r5009,r500E];
          tensor[3] projParam504C#1 = tensor4F53;
          tensor[3] projParam504D#1 = tensor4FEF;
          tensor[3] v504E#3 = VAdd<3>(projParam504C,projParam504D);
          tensor[3] projParam504F#1 = tensor4F6C;
          tensor[3] projParam5050#1 = tensor4FFF;
          tensor[3] v5051#3 = VAdd<3>(projParam504F,projParam5050);
          tensor[3] projParam5052#1 = tensor4F85;
          tensor[3] projParam5053#1 = tensor500F;
          tensor[3] v5054#3 = VAdd<3>(projParam5052,projParam5053);
          real r5061#9 = vdot3AF3;
          real r5062#3 = VIndex<3,0>(v504E);
          real r5063#1 = RMul(r5061,r5062);
          real r5064#3 = VIndex<3,1>(v504E);
          real r5065#1 = RMul(r5061,r5064);
          real r5066#3 = VIndex<3,2>(v504E);
          real r5067#1 = RMul(r5061,r5066);
          tensor[3] tensor5068#1 = <tensor[3]>[r5063,r5065,r5067];
          real r5069#3 = VIndex<3,0>(v5051);
          real r506A#1 = RMul(r5061,r5069);
          real r506B#3 = VIndex<3,1>(v5051);
          real r506C#1 = RMul(r5061,r506B);
          real r506D#3 = VIndex<3,2>(v5051);
          real r506E#1 = RMul(r5061,r506D);
          tensor[3] tensor506F#1 = <tensor[3]>[r506A,r506C,r506E];
          real r5070#3 = VIndex<3,0>(v5054);
          real r5071#1 = RMul(r5061,r5070);
          real r5072#3 = VIndex<3,1>(v5054);
          real r5073#1 = RMul(r5061,r5072);
          real r5074#3 = VIndex<3,2>(v5054);
          real r5075#1 = RMul(r5061,r5074);
          tensor[3] tensor5076#1 = <tensor[3]>[r5071,r5073,r5075];
          real r5078#9 = vdot3AF5;
          real r5079#1 = RMul(r5078,r5062);
          real r507A#1 = RMul(r5078,r5064);
          real r507B#1 = RMul(r5078,r5066);
          tensor[3] tensor507C#1 = <tensor[3]>[r5079,r507A,r507B];
          real r507D#1 = RMul(r5078,r5069);
          real r507E#1 = RMul(r5078,r506B);
          real r507F#1 = RMul(r5078,r506D);
          tensor[3] tensor5080#1 = <tensor[3]>[r507D,r507E,r507F];
          real r5081#1 = RMul(r5078,r5070);
          real r5082#1 = RMul(r5078,r5072);
          real r5083#1 = RMul(r5078,r5074);
          tensor[3] tensor5084#1 = <tensor[3]>[r5081,r5082,r5083];
          real r5086#9 = vdot3AF7;
          real r5087#1 = RMul(r5086,r5062);
          real r5088#1 = RMul(r5086,r5064);
          real r5089#1 = RMul(r5086,r5066);
          tensor[3] tensor508A#1 = <tensor[3]>[r5087,r5088,r5089];
          real r508B#1 = RMul(r5086,r5069);
          real r508C#1 = RMul(r5086,r506B);
          real r508D#1 = RMul(r5086,r506D);
          tensor[3] tensor508E#1 = <tensor[3]>[r508B,r508C,r508D];
          real r508F#1 = RMul(r5086,r5070);
          real r5090#1 = RMul(r5086,r5072);
          real r5091#1 = RMul(r5086,r5074);
          tensor[3] tensor5092#1 = <tensor[3]>[r508F,r5090,r5091];
          tensor[3] projParam50CA#1 = tensor4215;
          tensor[3] projParam50CB#1 = tensor5068;
          tensor[3] v50CC#3 = VAdd<3>(projParam50CA,projParam50CB);
          tensor[3] projParam50CD#1 = tensor421C;
          tensor[3] projParam50CE#1 = tensor507C;
          tensor[3] v50CF#3 = VAdd<3>(projParam50CD,projParam50CE);
          tensor[3] projParam50D0#1 = tensor4223;
          tensor[3] projParam50D1#1 = tensor508A;
          tensor[3] v50D2#3 = VAdd<3>(projParam50D0,projParam50D1);
          tensor[3] projParam50D4#1 = tensor4229;
          tensor[3] projParam50D5#1 = tensor506F;
          tensor[3] v50D6#3 = VAdd<3>(projParam50D4,projParam50D5);
          tensor[3] projParam50D7#1 = tensor422D;
          tensor[3] projParam50D8#1 = tensor5080;
          tensor[3] v50D9#3 = VAdd<3>(projParam50D7,projParam50D8);
          tensor[3] projParam50DA#1 = tensor4231;
          tensor[3] projParam50DB#1 = tensor508E;
          tensor[3] v50DC#3 = VAdd<3>(projParam50DA,projParam50DB);
          tensor[3] projParam50DE#1 = tensor4237;
          tensor[3] projParam50DF#1 = tensor5076;
          tensor[3] v50E0#3 = VAdd<3>(projParam50DE,projParam50DF);
          tensor[3] projParam50E1#1 = tensor423B;
          tensor[3] projParam50E2#1 = tensor5084;
          tensor[3] v50E3#3 = VAdd<3>(projParam50E1,projParam50E2);
          tensor[3] projParam50E4#1 = tensor423F;
          tensor[3] projParam50E5#1 = tensor5092;
          tensor[3] v50E6#3 = VAdd<3>(projParam50E4,projParam50E5);
          real r5109#3 = VIndex<3,0>(v50CC);
          real r510A#3 = r3CFD;
          real r510B#1 = RMul(r5109,r510A);
          real r510C#3 = VIndex<3,0>(v50D6);
          real r510D#3 = r3D07;
          real r510E#1 = RMul(r510C,r510D);
          real r510F#3 = VIndex<3,0>(v50E0);
          real r5110#3 = r3D12;
          real r5111#1 = RMul(r510F,r5110);
          real r5112#3 = VIndex<3,0>(v50CF);
          real r5113#3 = r3D1D;
          real r5114#1 = RMul(r5112,r5113);
          real r5115#3 = VIndex<3,0>(v50D9);
          real r5116#3 = r3CFD;
          real r5117#1 = RMul(r5115,r5116);
          real r5118#3 = VIndex<3,0>(v50E3);
          real r5119#3 = r3D25;
          real r511A#1 = RMul(r5118,r5119);
          real r511B#3 = VIndex<3,0>(v50D2);
          real r511C#3 = r3D30;
          real r511D#1 = RMul(r511B,r511C);
          real r511E#3 = VIndex<3,0>(v50DC);
          real r511F#3 = r3D3A;
          real r5120#1 = RMul(r511E,r511F);
          real r5121#3 = VIndex<3,0>(v50E6);
          real r5122#3 = r3CFD;
          real r5123#1 = RMul(r5121,r5122);
          real r5124#1 = RAdd(r510B,r510E);
          real r5125#1 = RAdd(r5124,r5111);
          real r5126#1 = RAdd(r5125,r5114);
          real r5127#1 = RAdd(r5126,r5117);
          real r5128#1 = RAdd(r5127,r511A);
          real r5129#1 = RAdd(r5128,r511D);
          real r512A#1 = RAdd(r5129,r5120);
          real r512B#1 = RAdd(r512A,r5123);
          real r512C#3 = r3D00;
          real r512D#1 = RMul(r5109,r512C);
          real r512E#3 = r3D09;
          real r512F#1 = RMul(r510C,r512E);
          real r5130#3 = r3D16;
          real r5131#1 = RMul(r510F,r5130);
          real r5132#3 = r3D1F;
          real r5133#1 = RMul(r5112,r5132);
          real r5134#3 = r3D00;
          real r5135#1 = RMul(r5115,r5134);
          real r5136#3 = r3D28;
          real r5137#1 = RMul(r5118,r5136);
          real r5138#3 = r3D33;
          real r5139#1 = RMul(r511B,r5138);
          real r513A#3 = r3D3D;
          real r513B#1 = RMul(r511E,r513A);
          real r513C#3 = r3D00;
          real r513D#1 = RMul(r5121,r513C);
          real r513E#1 = RAdd(r512D,r512F);
          real r513F#1 = RAdd(r513E,r5131);
          real r5140#1 = RAdd(r513F,r5133);
          real r5141#1 = RAdd(r5140,r5135);
          real r5142#1 = RAdd(r5141,r5137);
          real r5143#1 = RAdd(r5142,r5139);
          real r5144#1 = RAdd(r5143,r513B);
          real r5145#1 = RAdd(r5144,r513D);
          real r5146#3 = r3D03;
          real r5147#1 = RMul(r5109,r5146);
          real r5148#3 = r3D0C;
          real r5149#1 = RMul(r510C,r5148);
          real r514A#3 = r3D19;
          real r514B#1 = RMul(r510F,r514A);
          real r514C#3 = r3D21;
          real r514D#1 = RMul(r5112,r514C);
          real r514E#3 = r3D03;
          real r514F#1 = RMul(r5115,r514E);
          real r5150#3 = r3D2B;
          real r5151#1 = RMul(r5118,r5150);
          real r5152#3 = r3D36;
          real r5153#1 = RMul(r511B,r5152);
          real r5154#3 = r3D40;
          real r5155#1 = RMul(r511E,r5154);
          real r5156#3 = r3D03;
          real r5157#1 = RMul(r5121,r5156);
          real r5158#1 = RAdd(r5147,r5149);
          real r5159#1 = RAdd(r5158,r514B);
          real r515A#1 = RAdd(r5159,r514D);
          real r515B#1 = RAdd(r515A,r514F);
          real r515C#1 = RAdd(r515B,r5151);
          real r515D#1 = RAdd(r515C,r5153);
          real r515E#1 = RAdd(r515D,r5155);
          real r515F#1 = RAdd(r515E,r5157);
          tensor[3] tensor5160#1 = <tensor[3]>[r512B,r5145,r515F];
          real r5161#3 = VIndex<3,1>(v50CC);
          real r5162#1 = RMul(r5161,r510A);
          real r5163#3 = VIndex<3,1>(v50D6);
          real r5164#1 = RMul(r5163,r510D);
          real r5165#3 = VIndex<3,1>(v50E0);
          real r5166#1 = RMul(r5165,r5110);
          real r5167#3 = VIndex<3,1>(v50CF);
          real r5168#1 = RMul(r5167,r5113);
          real r5169#3 = VIndex<3,1>(v50D9);
          real r516A#1 = RMul(r5169,r5116);
          real r516B#3 = VIndex<3,1>(v50E3);
          real r516C#1 = RMul(r516B,r5119);
          real r516D#3 = VIndex<3,1>(v50D2);
          real r516E#1 = RMul(r516D,r511C);
          real r516F#3 = VIndex<3,1>(v50DC);
          real r5170#1 = RMul(r516F,r511F);
          real r5171#3 = VIndex<3,1>(v50E6);
          real r5172#1 = RMul(r5171,r5122);
          real r5173#1 = RAdd(r5162,r5164);
          real r5174#1 = RAdd(r5173,r5166);
          real r5175#1 = RAdd(r5174,r5168);
          real r5176#1 = RAdd(r5175,r516A);
          real r5177#1 = RAdd(r5176,r516C);
          real r5178#1 = RAdd(r5177,r516E);
          real r5179#1 = RAdd(r5178,r5170);
          real r517A#1 = RAdd(r5179,r5172);
          real r517B#1 = RMul(r5161,r512C);
          real r517C#1 = RMul(r5163,r512E);
          real r517D#1 = RMul(r5165,r5130);
          real r517E#1 = RMul(r5167,r5132);
          real r517F#1 = RMul(r5169,r5134);
          real r5180#1 = RMul(r516B,r5136);
          real r5181#1 = RMul(r516D,r5138);
          real r5182#1 = RMul(r516F,r513A);
          real r5183#1 = RMul(r5171,r513C);
          real r5184#1 = RAdd(r517B,r517C);
          real r5185#1 = RAdd(r5184,r517D);
          real r5186#1 = RAdd(r5185,r517E);
          real r5187#1 = RAdd(r5186,r517F);
          real r5188#1 = RAdd(r5187,r5180);
          real r5189#1 = RAdd(r5188,r5181);
          real r518A#1 = RAdd(r5189,r5182);
          real r518B#1 = RAdd(r518A,r5183);
          real r518C#1 = RMul(r5161,r5146);
          real r518D#1 = RMul(r5163,r5148);
          real r518E#1 = RMul(r5165,r514A);
          real r518F#1 = RMul(r5167,r514C);
          real r5190#1 = RMul(r5169,r514E);
          real r5191#1 = RMul(r516B,r5150);
          real r5192#1 = RMul(r516D,r5152);
          real r5193#1 = RMul(r516F,r5154);
          real r5194#1 = RMul(r5171,r5156);
          real r5195#1 = RAdd(r518C,r518D);
          real r5196#1 = RAdd(r5195,r518E);
          real r5197#1 = RAdd(r5196,r518F);
          real r5198#1 = RAdd(r5197,r5190);
          real r5199#1 = RAdd(r5198,r5191);
          real r519A#1 = RAdd(r5199,r5192);
          real r519B#1 = RAdd(r519A,r5193);
          real r519C#1 = RAdd(r519B,r5194);
          tensor[3] tensor519D#1 = <tensor[3]>[r517A,r518B,r519C];
          real r519E#3 = VIndex<3,2>(v50CC);
          real r519F#1 = RMul(r519E,r510A);
          real r51A0#3 = VIndex<3,2>(v50D6);
          real r51A1#1 = RMul(r51A0,r510D);
          real r51A2#3 = VIndex<3,2>(v50E0);
          real r51A3#1 = RMul(r51A2,r5110);
          real r51A4#3 = VIndex<3,2>(v50CF);
          real r51A5#1 = RMul(r51A4,r5113);
          real r51A6#3 = VIndex<3,2>(v50D9);
          real r51A7#1 = RMul(r51A6,r5116);
          real r51A8#3 = VIndex<3,2>(v50E3);
          real r51A9#1 = RMul(r51A8,r5119);
          real r51AA#3 = VIndex<3,2>(v50D2);
          real r51AB#1 = RMul(r51AA,r511C);
          real r51AC#3 = VIndex<3,2>(v50DC);
          real r51AD#1 = RMul(r51AC,r511F);
          real r51AE#3 = VIndex<3,2>(v50E6);
          real r51AF#1 = RMul(r51AE,r5122);
          real r51B0#1 = RAdd(r519F,r51A1);
          real r51B1#1 = RAdd(r51B0,r51A3);
          real r51B2#1 = RAdd(r51B1,r51A5);
          real r51B3#1 = RAdd(r51B2,r51A7);
          real r51B4#1 = RAdd(r51B3,r51A9);
          real r51B5#1 = RAdd(r51B4,r51AB);
          real r51B6#1 = RAdd(r51B5,r51AD);
          real r51B7#1 = RAdd(r51B6,r51AF);
          real r51B8#1 = RMul(r519E,r512C);
          real r51B9#1 = RMul(r51A0,r512E);
          real r51BA#1 = RMul(r51A2,r5130);
          real r51BB#1 = RMul(r51A4,r5132);
          real r51BC#1 = RMul(r51A6,r5134);
          real r51BD#1 = RMul(r51A8,r5136);
          real r51BE#1 = RMul(r51AA,r5138);
          real r51BF#1 = RMul(r51AC,r513A);
          real r51C0#1 = RMul(r51AE,r513C);
          real r51C1#1 = RAdd(r51B8,r51B9);
          real r51C2#1 = RAdd(r51C1,r51BA);
          real r51C3#1 = RAdd(r51C2,r51BB);
          real r51C4#1 = RAdd(r51C3,r51BC);
          real r51C5#1 = RAdd(r51C4,r51BD);
          real r51C6#1 = RAdd(r51C5,r51BE);
          real r51C7#1 = RAdd(r51C6,r51BF);
          real r51C8#1 = RAdd(r51C7,r51C0);
          real r51C9#1 = RMul(r519E,r5146);
          real r51CA#1 = RMul(r51A0,r5148);
          real r51CB#1 = RMul(r51A2,r514A);
          real r51CC#1 = RMul(r51A4,r514C);
          real r51CD#1 = RMul(r51A6,r514E);
          real r51CE#1 = RMul(r51A8,r5150);
          real r51CF#1 = RMul(r51AA,r5152);
          real r51D0#1 = RMul(r51AC,r5154);
          real r51D1#1 = RMul(r51AE,r5156);
          real r51D2#1 = RAdd(r51C9,r51CA);
          real r51D3#1 = RAdd(r51D2,r51CB);
          real r51D4#1 = RAdd(r51D3,r51CC);
          real r51D5#1 = RAdd(r51D4,r51CD);
          real r51D6#1 = RAdd(r51D5,r51CE);
          real r51D7#1 = RAdd(r51D6,r51CF);
          real r51D8#1 = RAdd(r51D7,r51D0);
          real r51D9#1 = RAdd(r51D8,r51D1);
          tensor[3] tensor51DA#1 = <tensor[3]>[r51B7,r51C8,r51D9];
          tensor[3] projParam52B0#1 = tensor5160;
          real vdot52B1#1 = VDot<3>(op1_e3_l_943E30,projParam52B0);
          tensor[3] projParam52B2#1 = tensor519D;
          real vdot52B3#1 = VDot<3>(op1_e3_l_943E30,projParam52B2);
          tensor[3] projParam52B4#1 = tensor51DA;
          real vdot52B5#1 = VDot<3>(op1_e3_l_943E30,projParam52B4);
          tensor[3] op1_e3_l_23152AF#2 = <tensor[3]>[vdot52B1,vdot52B3,vdot52B5];
          tensor[3] op1_e3_l_23452BE#3 = VAdd<3>(op1_e3_l_23152AF,op1_e3_l_23152AF);
          tensor[3] op1_e3_l_33752C1#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_23452BE);
          real op1_e3_l_33852C4#1 = VDot<3>(op1_e3_l_23452BE,op1_e3_l_23452BE);
          real realLit52C8#1 = 0.1e1;
          real r52C9#3 = RDiv(realLit52C8,op1_e3_l_33852C4);
          real r52CA#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_33752C1);
          real r52CB#1 = RMul(r52C9,r52CA);
          real r52CC#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_33752C1);
          real r52CD#1 = RMul(r52C9,r52CC);
          real r52CE#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_33752C1);
          real r52CF#1 = RMul(r52C9,r52CE);
          tensor[3] op1_e3_l_33952C7#1 = <tensor[3]>[r52CB,r52CD,r52CF];
          tensor[3] op1_e3_l_68252DA#3 = VNeg<3>(op1_e3_l_33952C7);
          real op1_e3_l_68452DD#1 = VDot<3>(op1_e3_l_68252DA,op1_e3_l_68252DA);
          real op1_e3_l_68552E0#1 = Sqrt(op1_e3_l_68452DD);
          real realLit52E4#1 = 0.1e1;
          real op1_e3_l_68752E3#1 = RDiv(realLit52E4,op1_e3_l_68552E0);
          tensor[3] op1_e3_l_68852E8#1 = VScale<3>(op1_e3_l_68752E3,op1_e3_l_68252DA);
          tensor[3] op1_e3_l_68952EB#1 = VNeg<3>(op1_e3_l_68852E8);
          real op1_e3_l_69052EE#2 = VDot<3>(op1_e3_l_68952EB,litwsp2425);
          real op1_e3_l_69152F1#1 = RMul(op1_e3_l_69052EE,op1_e3_l_69052EE);
          real op1_e3_l_69252F4#1 = RMul(phKd2433,op1_e3_l_69152F1);
          real op1_e3_l_69452F7#1 = RSub(rayN243D,camNearVsp2421);
          real op1_e3_l_69552FA#1 = RSub(camFarVsp2423,camNearVsp2421);
          real op1_e3_l_69652FD#1 = RDiv(op1_e3_l_69452F7,op1_e3_l_69552FA);
          tensor[3] op1_e3_l_6975300#1 = VSub<3>(mcFar241D,mcNear241B);
          tensor[3] op1_e3_l_6985303#1 = VScale<3>(op1_e3_l_69652FD,op1_e3_l_6975300);
          real op1_e3_l_6995306#3 = RAdd(phKa2431,op1_e3_l_69252F4);
          tensor[3] op1_e3_l_7005309#3 = VAdd<3>(mcNear241B,op1_e3_l_6985303);
          real r530D#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7005309);
          real r530E#1 = TensorIndex<tensor[3],[0]>(mcol4F35);
          real r530F#1 = RMul(op1_e3_l_6995306,r530D);
          real r5310#1 = RMul(r530F,r530E);
          real r5311#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7005309);
          real r5312#1 = TensorIndex<tensor[3],[1]>(mcol4F35);
          real r5313#1 = RMul(op1_e3_l_6995306,r5311);
          real r5314#1 = RMul(r5313,r5312);
          real r5315#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7005309);
          real r5316#1 = TensorIndex<tensor[3],[2]>(mcol4F35);
          real r5317#1 = RMul(op1_e3_l_6995306,r5315);
          real r5318#1 = RMul(r5317,r5316);
          tensor[3] op1_e3_l_701530C#1 = <tensor[3]>[r5310,r5314,r5318];
          real r5328#1 = _t3467;
          real r5329#3 = RMul(phKs2435,scomp4946);
          real r532A#1 = RMul(r5329,r5328);
          real r532B#1 = _t3467;
          real r532C#1 = RMul(r5329,r532B);
          real r532D#1 = _t3467;
          real r532E#1 = RMul(r5329,r532D);
          tensor[3] op1_e3_l_7025327#1 = <tensor[3]>[r532A,r532C,r532E];
          real op1_e3_l_7035338#2 = RSub(_t3467,_t4571);
          tensor[3] op1_e3_l_704533B#3 = VAdd<3>(op1_e3_l_701530C,op1_e3_l_7025327);
          real r533F#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_704533B);
          real r5340#3 = RMul(transp243B,op1_e3_l_7035338);
          real r5341#1 = RMul(r5340,r533F);
          real r5342#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_704533B);
          real r5343#1 = RMul(r5340,r5342);
          real r5344#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_704533B);
          real r5345#1 = RMul(r5340,r5344);
          tensor[3] op1_e3_l_705533E#1 = <tensor[3]>[r5341,r5343,r5345];
          tensor[3] rgb534F#2 = VAdd<3>(rgb2439,op1_e3_l_705533E);
          real op1_e3_l_55352#1 = RSub(_t3467,op1_e3_l_7035338);
          real transp5355#2 = RMul(transp243B,op1_e3_l_55352);
          bool _t5358#1 = LT<real>(transp5355,transp0240F);
          if _t5358 then goto SAVE535B else goto JOIN5360
        SAVE535B:  preds = [COND535A]
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = _t3465;
          stabilize
          goto JOIN5360
        JOIN5360:  preds = [*STABILIZE535E,COND535A]
          real transp535F#1 = phi(transp5355)
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = transp535F;
          active
        ASSIGN582D:  preds = [COND4EDE]
          int addRes5366#1 = idx4EDA;
          int ix5367#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,addRes5366);
          int stride5368#2 = 3;
          int offp5369#3 = IMul(stride5368,ix5367);
          real v0_536A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5369);
          int ilit536B#3 = 1;
          int addRes536C#1 = IAdd(idx4EDA,ilit536B);
          int ix536D#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,addRes536C);
          int offp536E#3 = IMul(stride5368,ix536D);
          real v1_536F#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp536E);
          tensor[2] v_5370#1 = <tensor[2]>[v0_536A,v1_536F];
          int offp5371#1 = IAdd(offp5369,ilit536B);
          real v0_5372#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5371);
          int offp5373#1 = IAdd(offp536E,ilit536B);
          real v1_5374#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5373);
          tensor[2] v_5375#1 = <tensor[2]>[v0_5372,v1_5374];
          int offset5376#2 = 2;
          int offp5377#1 = IAdd(offp5369,offset5376);
          real v0_5378#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5377);
          int offp5379#1 = IAdd(offp536E,offset5376);
          real v1_537A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5379);
          tensor[2] v_537B#1 = <tensor[2]>[v0_5378,v1_537A];
          tensor[3,2] voxels537C#1 = <tensor[3,2]>[v_5370,v_5375,v_537B];
          tensor[3,2] ldvox4F0E#1 = voxels537C;
          goto JOIN4F0F
        ASSIGN5396:  preds = [COND3450]
          bool _t3454#1 = false;
          goto JOIN3455
        ASSIGN5397:  preds = [COND2CEB]
          bool _t3457#1 = false;
          goto JOIN3458
        ASSIGN5398:  preds = [COND2CE6]
          bool _t345A#1 = false;
          goto JOIN345B
        ASSIGN5399:  preds = [COND2452]
          bool _t345D#1 = false;
          goto JOIN345E
    end update
    method stabilize
        ENTRY539A:  preds = []
          tensor[4] rgba539B#1 = self.rgba;
          tensor[3] rgb539D#3 = self.rgb;
          real transp539F#2 = self.transp;
          real _t53A1#2 = 0.1e1;
          bool _t53A3#1 = LT<real>(transp539F,_t53A1);
          if _t53A3 then goto ASSIGN53A8 else goto JOIN53BB
        ASSIGN53A8:  preds = [COND53A5]
          real aa53A6#4 = RSub(_t53A1,transp539F);
          real _t53A9#1 = VIndex<3,0>(rgb539D);
          real _t53AB#1 = RDiv(_t53A9,aa53A6);
          real _t53AE#1 = VIndex<3,1>(rgb539D);
          real _t53B0#1 = RDiv(_t53AE,aa53A6);
          real _t53B3#1 = VIndex<3,2>(rgb539D);
          real _t53B5#1 = RDiv(_t53B3,aa53A6);
          tensor[4] rgba53B8#1 = <tensor[4]>[_t53AB,_t53B0,_t53B5,aa53A6];
          goto JOIN53BB
        JOIN53BB:  preds = [ASSIGN53B9,COND53A5]
          tensor[4] rgba53BA#1 = phi(rgba53B8,rgba539B)
          self.rgba = rgba53BA;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY53BE:  preds = []
      int iresU53BF#1 = globals.iresU2121;
      int iresV53C1#1 = globals.iresV2122;
      int _t53C3#2 = 0;
      int _t53C5#2 = 1;
      int _t53C7#1 = ISub(iresV53C1,_t53C5);
      int[] _t53C9#1 = Range(_t53C3,_t53C7);
    FOREACH53CC:  preds = [ASSIGN53CA,NEXT53D5]
      foreach (vi53CB in _t53C9) on exit goto RETURN53D6
      int _t53CD#1 = ISub(iresU53BF,_t53C5);
      int[] _t53CF#1 = Range(_t53C3,_t53CD);
    FOREACH53D2:  preds = [ASSIGN53D0,NEXT53D4]
      foreach (ui53D1 in _t53CF) on exit goto NEXT53D5
      new ray(ui53D1,vi53CB);
      goto FOREACH53D2
    NEXT53D5:  preds = [FOREACH53D2]
      goto FOREACH53CC
    RETURN53D6:  preds = [FOREACH53CC]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2115 (block) = <no-default>
  input 0space04D7_intermedateGlobal2116 (space) = <no-default>
  input 0U04D9_intermedateGlobal2117 (U) = <no-default>
  input cellChoice2118 (cellChoice) = <no-default>
  input cmap2119 (cmap) = image("cmap.nrrd")
  input camEye211A (camEye) = <default>
  input camAt211B (camAt) = <default>
  input camUp211C (camUp) = <default>
  input camNear211D (camNear) = <default>
  input camFar211E (camFar) = <default>
  input camFOV211F (camFOV) = <default>
  input camOrtho2120 (camOrtho) = <default>
  input iresU2121 (iresU) = <default>
  input iresV2122 (iresV) = <default>
  input rayStep2123 (rayStep) = <default>
  input refStep2124 (refStep) = <default>
  input transp02125 (transp0) = <default>
  input thick2126 (thick) = <default>
  input fStrTh2127 (fStrTh) = <default>
  input fMaskTh2128 (fMaskTh) = <default>
  input fBias2129 (fBias) = <default>
  input maxAlpha212A (maxAlpha) = <default>
  input light212B (light) = <default>
  input phong212C (phong) = <default>
  input mcNear212D (mcNear) = <default>
  input mcFar212E (mcFar) = <default>
  input litdir212F (litdir) = <default>
  input cminmax2130 (cminmax) = <default>
  global tensor[3] camN2131
  global tensor[3] camU2132
  global tensor[3] camV2133
  global real camDist2134
  global real camVmax2135
  global real camUmax2136
  global real camNearVsp2137
  global real camFarVsp2138
  global tensor[3] litwsp2139
  global int _t213A
  global femData:Space _tX213B
  global femData:FemFunc _tXX213C
## functions
## input initialization
  ENTRY213F:  preds = []
    real _t2140#13 = 0.e0;
    real _t2142#1 = -0.2e1;
    tensor[3] camEye2144#1 = <tensor[3]>[_t2140,_t2142,_t2140];
    globals.camEye211A = camEye2144;
    tensor[3] camAt2147#1 = <tensor[3]>[_t2140,_t2140,_t2140];
    globals.camAt211B = camAt2147;
    real _t214A#5 = 0.1e1;
    tensor[3] camUp214C#1 = <tensor[3]>[_t2140,_t2140,_t214A];
    globals.camUp211C = camUp214C;
    real camNear214F#1 = -0.4e1;
    globals.camNear211D = camNear214F;
    real camFar2152#1 = 0.4e1;
    globals.camFar211E = camFar2152;
    real camFOV2155#1 = 0.1e2;
    globals.camFOV211F = camFOV2155;
    bool camOrtho2158#2 = false;
    globals.camOrtho2120 = camOrtho2158;
    int iresU215B#2 = 100;
    globals.iresU2121 = iresU215B;
    globals.iresV2122 = iresU215B;
    real rayStep215F#2 = 0.1e-3;
    globals.rayStep2123 = rayStep215F;
    globals.refStep2124 = rayStep215F;
    real transp02163#1 = 0.5e-2;
    globals.transp02125 = transp02163;
    real thick2166#1 = 0.1e-1;
    globals.thick2126 = thick2166;
    globals.fStrTh2127 = _t2140;
    globals.fMaskTh2128 = _t2140;
    real fBias216B#2 = 0.1e0;
    globals.fBias2129 = fBias216B;
    globals.maxAlpha212A = _t214A;
    globals.light212B = camOrtho2158;
    real _t2170#1 = 0.7e0;
    real _t2172#1 = 0.2e0;
    real _t2174#1 = 0.1e3;
    tensor[4] phong2176#1 = <tensor[4]>[fBias216B,_t2170,_t2172,_t2174];
    globals.phong212C = phong2176;
    tensor[3] mcNear2179#2 = <tensor[3]>[_t214A,_t214A,_t214A];
    globals.mcNear212D = mcNear2179;
    globals.mcFar212E = mcNear2179;
    real _t217D#1 = -0.1e1;
    tensor[3] litdir217F#1 = <tensor[3]>[_t2140,_t217D,_t2140];
    globals.litdir212F = litdir217F;
    tensor[2] cminmax2182#1 = <tensor[2]>[_t2140,_t2140];
    globals.cminmax2130 = cminmax2182;
    return
## global-variable initialization
  ENTRY2186:  preds = []
    femData:Mesh block2187#3 = globals.block2115;
    femData:Space 0space04D7_intermedateGlobal2189#1 = globals.0space04D7_intermedateGlobal2116;
    femData:FemFunc 0U04D9_intermedateGlobal218B#1 = globals.0U04D9_intermedateGlobal2117;
    int cellChoice218D#1 = globals.cellChoice2118;
    tensor[3] camEye2191#1 = globals.camEye211A;
    tensor[3] camAt2193#1 = globals.camAt211B;
    tensor[3] camUp2195#3 = globals.camUp211C;
    real camNear2197#1 = globals.camNear211D;
    real camFar2199#1 = globals.camFar211E;
    real camFOV219B#1 = globals.camFOV211F;
    int iresU219D#1 = globals.iresU2121;
    int iresV219F#1 = globals.iresV2122;
    tensor[3] litdir21A1#5 = globals.litdir212F;
    int _t21A3#1 = 0;
    int _t21A5#1 = 1;
    int _t21A7#1 = ExtractFemItem<int,NumCell(Mesh)>(block2187);
    int _t21A9#1 = ISub(_t21A7,_t21A5);
    int[] _t21AB#1 = Range(_t21A3,_t21A9);
    femData:MeshCell[] _t21AD#1 = <femData:MeshCell[]>{};
  FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B6]
    foreach (_t21AF in _t21AB) on exit goto ASSIGN21B8
      femData:MeshCell[] _t21B4#2 = phi(_t21AD,_t21B3)
    femData:MeshCell _t21B1#1 = LoadFem<femData:MeshCell>(block2187,_t21AF);
    femData:MeshCell[] _t21B3#1 = Append<femData:MeshCell>(_t21B4,_t21B1);
    goto FOREACH21B0
  ASSIGN21B8:  preds = [FOREACH21B0]
    femData:Space space21B7#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal2189,block2187);
    femData:FemFunc U21B9#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal218B,space21B7);
    femData:MeshCell c121BB#1 = Subscript<femData:MeshCell[]>(_t21B4,cellChoice218D);
    int _t21BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c121BB);
    femData:FuncCell _t21BF#2 = LoadFem<femData:FuncCell>(U21B9,_t21BD);
    femData:FemFunc _t21C1#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t21BF);
    femData:Space _t21C3#1 = ExtractFem<femData:Space,femData:FemFunc>(_t21C1);
    int _t21C5#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t21BF);
    tensor[3] op1_e3_l_421CB#9 = VSub<3>(camAt2193,camEye2191);
    real op1_e3_l_621CE#1 = VDot<3>(op1_e3_l_421CB,op1_e3_l_421CB);
    real op1_e3_l_721D1#6 = Sqrt(op1_e3_l_621CE);
    real realLit21D5#9 = 0.1e1;
    real op1_e3_l_921D4#6 = RDiv(realLit21D5,op1_e3_l_721D1);
    tensor[3] camN21D9#4 = VScale<3>(op1_e3_l_921D4,op1_e3_l_421CB);
    globals.camN2131 = camN21D9;
    real realLit21DE#6 = 0.e0;
    real r21DF#3 = TensorIndex<tensor[3],[0]>(camUp2195);
    real r21E0#3 = RMul(realLit21DE,r21DF);
    real r21E1#3 = TensorIndex<tensor[3],[1]>(camUp2195);
    real r21E2#3 = RMul(realLit21DE,r21E1);
    real r21E3#3 = TensorIndex<tensor[3],[2]>(camUp2195);
    real r21E4#5 = RMul(realLit21DE,r21E3);
    real r21E5#3 = RAdd(r21E0,r21E2);
    real r21E6#3 = RAdd(r21E5,r21E4);
    real r21E8#1 = RMul(realLit21D5,r21E3);
    real r21E9#1 = RAdd(r21E5,r21E8);
    real realLit21EA#6 = -0.1e1;
    real r21EB#1 = RMul(realLit21EA,r21E1);
    real r21EC#1 = RAdd(r21E0,r21EB);
    real r21ED#1 = RAdd(r21EC,r21E4);
    tensor[3] tensor21EE#1 = <tensor[3]>[r21E6,r21E9,r21ED];
    real r21EF#1 = RMul(realLit21EA,r21E3);
    real r21F0#1 = RAdd(r21E5,r21EF);
    real r21F1#1 = RMul(realLit21D5,r21DF);
    real r21F2#1 = RAdd(r21F1,r21E2);
    real r21F3#1 = RAdd(r21F2,r21E4);
    tensor[3] tensor21F4#1 = <tensor[3]>[r21F0,r21E6,r21F3];
    real r21F5#1 = RMul(realLit21D5,r21E1);
    real r21F6#1 = RAdd(r21E0,r21F5);
    real r21F7#1 = RAdd(r21F6,r21E4);
    real r21F8#1 = RMul(realLit21EA,r21DF);
    real r21F9#1 = RAdd(r21F8,r21E2);
    real r21FA#1 = RAdd(r21F9,r21E4);
    tensor[3] tensor21FB#1 = <tensor[3]>[r21F7,r21FA,r21E6];
    real vdot221E#4 = VDot<3>(op1_e3_l_421CB,tensor21EE);
    real vdot2220#4 = VDot<3>(op1_e3_l_421CB,tensor21F4);
    real vdot2222#4 = VDot<3>(op1_e3_l_421CB,tensor21FB);
    tensor[3] op1_e3_l_17221C#3 = <tensor[3]>[vdot221E,vdot2220,vdot2222];
    real op1_e3_l_34222B#1 = VDot<3>(op1_e3_l_17221C,op1_e3_l_17221C);
    real r222F#1 = RMul(op1_e3_l_921D4,op1_e3_l_921D4);
    real op1_e3_l_35222E#1 = RMul(r222F,op1_e3_l_34222B);
    real op1_e3_l_362233#1 = Sqrt(op1_e3_l_35222E);
    tensor[3] op1_e3_l_372236#1 = VScale<3>(op1_e3_l_921D4,op1_e3_l_17221C);
    real op1_e3_l_382239#2 = RDiv(realLit21D5,op1_e3_l_362233);
    tensor[3] camU223E#4 = VScale<3>(op1_e3_l_382239,op1_e3_l_372236);
    globals.camU2132 = camU223E;
    real r2245#3 = RMul(realLit21DE,vdot221E);
    real r2247#3 = RMul(realLit21DE,vdot2220);
    real r2249#5 = RMul(realLit21DE,vdot2222);
    real r224A#3 = RAdd(r2245,r2247);
    real r224B#3 = RAdd(r224A,r2249);
    real r224D#1 = RMul(realLit21D5,vdot2222);
    real r224E#1 = RAdd(r224A,r224D);
    real r2250#1 = RMul(realLit21EA,vdot2220);
    real r2251#1 = RAdd(r2245,r2250);
    real r2252#1 = RAdd(r2251,r2249);
    tensor[3] tensor2253#1 = <tensor[3]>[r224B,r224E,r2252];
    real r2254#1 = RMul(realLit21EA,vdot2222);
    real r2255#1 = RAdd(r224A,r2254);
    real r2256#1 = RMul(realLit21D5,vdot221E);
    real r2257#1 = RAdd(r2256,r2247);
    real r2258#1 = RAdd(r2257,r2249);
    tensor[3] tensor2259#1 = <tensor[3]>[r2255,r224B,r2258];
    real r225A#1 = RMul(realLit21D5,vdot2220);
    real r225B#1 = RAdd(r2245,r225A);
    real r225C#1 = RAdd(r225B,r2249);
    real r225D#1 = RMul(realLit21EA,vdot221E);
    real r225E#1 = RAdd(r225D,r2247);
    real r225F#1 = RAdd(r225E,r2249);
    tensor[3] tensor2260#1 = <tensor[3]>[r225C,r225F,r224B];
    real vdot2283#1 = VDot<3>(op1_e3_l_421CB,tensor2253);
    real vdot2285#1 = VDot<3>(op1_e3_l_421CB,tensor2259);
    real vdot2287#1 = VDot<3>(op1_e3_l_421CB,tensor2260);
    tensor[3] op1_e3_l_472281#1 = <tensor[3]>[vdot2283,vdot2285,vdot2287];
    tensor[3] op1_e3_l_502290#3 = VScale<3>(op1_e3_l_921D4,op1_e3_l_472281);
    real r2294#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_502290);
    real r2295#3 = RMul(op1_e3_l_921D4,op1_e3_l_382239);
    real r2296#2 = RMul(r2295,r2294);
    real r2297#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_502290);
    real r2298#2 = RMul(r2295,r2297);
    real r2299#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_502290);
    real r229A#2 = RMul(r2295,r2299);
    tensor[3] camV2293#1 = <tensor[3]>[r2296,r2298,r229A];
    globals.camV2133 = camV2293;
    globals.camDist2134 = op1_e3_l_721D1;
    real _t22A6#1 = 0.314159265358979323846264338327950288e1;
    real _t22A8#1 = 0.36e3;
    real op1_e3_l_522AA#1 = RMul(camFOV219B,_t22A6);
    real op1_e3_l_622AD#1 = RDiv(op1_e3_l_522AA,_t22A8);
    real op1_e3_l_1022B0#2 = Tan(op1_e3_l_622AD);
    real camVmax22B3#1 = RMul(op1_e3_l_1022B0,op1_e3_l_721D1);
    globals.camVmax2135 = camVmax22B3;
    real _t22B7#1 = IntToReal(iresU219D);
    real _t22B9#1 = IntToReal(iresV219F);
    real r22BC#1 = RMul(_t22B7,op1_e3_l_1022B0);
    real op1_e3_l_1422BB#1 = RMul(r22BC,op1_e3_l_721D1);
    real camUmax22C0#1 = RDiv(op1_e3_l_1422BB,_t22B9);
    globals.camUmax2136 = camUmax22C0;
    real camNearVsp22C4#1 = RAdd(camNear2197,op1_e3_l_721D1);
    globals.camNearVsp2137 = camNearVsp22C4;
    real camFarVsp22C8#1 = RAdd(camFar2199,op1_e3_l_721D1);
    globals.camFarVsp2138 = camFarVsp22C8;
    real op1_e3_l_322CE#1 = VDot<3>(litdir21A1,litdir21A1);
    real op1_e3_l_422D1#1 = Sqrt(op1_e3_l_322CE);
    real op1_e3_l_522D4#1 = RDiv(realLit21D5,op1_e3_l_422D1);
    real r22DA#1 = VIndex<3,0>(camU223E);
    real r22DB#3 = TensorIndex<tensor[3],[0]>(litdir21A1);
    real r22DC#1 = RMul(r22DA,r22DB);
    real r22DE#3 = TensorIndex<tensor[3],[1]>(litdir21A1);
    real r22DF#1 = RMul(r2296,r22DE);
    real r22E0#1 = VIndex<3,0>(camN21D9);
    real r22E1#3 = TensorIndex<tensor[3],[2]>(litdir21A1);
    real r22E2#1 = RMul(r22E0,r22E1);
    real r22E3#1 = RAdd(r22DC,r22DF);
    real r22E4#1 = RAdd(r22E3,r22E2);
    real r22E5#1 = VIndex<3,1>(camU223E);
    real r22E6#1 = RMul(r22E5,r22DB);
    real r22E8#1 = RMul(r2298,r22DE);
    real r22E9#1 = VIndex<3,1>(camN21D9);
    real r22EA#1 = RMul(r22E9,r22E1);
    real r22EB#1 = RAdd(r22E6,r22E8);
    real r22EC#1 = RAdd(r22EB,r22EA);
    real r22ED#1 = VIndex<3,2>(camU223E);
    real r22EE#1 = RMul(r22ED,r22DB);
    real r22F0#1 = RMul(r229A,r22DE);
    real r22F1#1 = VIndex<3,2>(camN21D9);
    real r22F2#1 = RMul(r22F1,r22E1);
    real r22F3#1 = RAdd(r22EE,r22F0);
    real r22F4#1 = RAdd(r22F3,r22F2);
    tensor[3] op1_e3_l_622D9#1 = <tensor[3]>[r22E4,r22EC,r22F4];
    tensor[3] litwsp2312#1 = VScale<3>(op1_e3_l_522D4,op1_e3_l_622D9);
    globals.litwsp2139 = litwsp2312;
    globals._t213A = _t21C5;
    globals._tX213B = _t21C3;
    globals._tXX213C = _t21C1;
    return
## strand
  strand ray (int ui231C#1, int vi231D#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY232E:  preds = []
        tensor[3] camEye232F#1 = globals.camEye211A;
        bool camOrtho2331#2 = globals.camOrtho2120;
        int iresU2333#1 = globals.iresU2121;
        int iresV2335#1 = globals.iresV2122;
        real rayStep2337#1 = globals.rayStep2123;
        real refStep2339#1 = globals.refStep2124;
        tensor[4] phong233B#4 = globals.phong212C;
        tensor[3] camN233D#1 = globals.camN2131;
        tensor[3] camU233F#1 = globals.camU2132;
        tensor[3] camV2341#1 = globals.camV2133;
        real camDist2343#1 = globals.camDist2134;
        real camVmax2345#2 = globals.camVmax2135;
        real camUmax2347#2 = globals.camUmax2136;
        real camNearVsp2349#1 = globals.camNearVsp2137;
        real _t234B#4 = -0.5e0;
        real _t234D#1 = IntToReal(ui231C);
        real _t234F#1 = IntToReal(iresU2333);
        real _t2351#2 = 0.5e0;
        real op1_e3_l_62353#1 = RSub(_t234F,_t2351);
        real op1_e3_l_72356#1 = RSub(_t234D,_t234B);
        real op1_e3_l_82359#1 = RSub(op1_e3_l_62353,_t234B);
        real op1_e3_l_9235C#2 = RNeg(camUmax2347);
        real op1_e3_l_10235F#1 = RDiv(op1_e3_l_72356,op1_e3_l_82359);
        real op1_e3_l_112362#1 = RSub(camUmax2347,op1_e3_l_9235C);
        real op1_e3_l_132365#1 = RMul(op1_e3_l_10235F,op1_e3_l_112362);
        real rayU2368#2 = RAdd(op1_e3_l_9235C,op1_e3_l_132365);
        real _t236B#1 = IntToReal(vi231D);
        real _t236D#1 = IntToReal(iresV2335);
        real op1_e3_l_6236F#1 = RSub(_t236D,_t2351);
        real op1_e3_l_72372#1 = RSub(_t236B,_t234B);
        real op1_e3_l_82375#1 = RSub(op1_e3_l_6236F,_t234B);
        real op1_e3_l_92378#2 = RNeg(camVmax2345);
        real op1_e3_l_10237B#1 = RDiv(op1_e3_l_72372,op1_e3_l_82375);
        real op1_e3_l_11237E#1 = RSub(camVmax2345,op1_e3_l_92378);
        real op1_e3_l_132381#1 = RMul(op1_e3_l_10237B,op1_e3_l_11237E);
        real rayV2384#2 = RAdd(op1_e3_l_92378,op1_e3_l_132381);
        tensor[3] op1_e3_l_322396#1 = VScale<3>(rayU2368,camU233F);
        tensor[3] op1_e3_l_332399#1 = VScale<3>(rayV2384,camV2341);
        tensor[3] UV239C#5 = VAdd<3>(op1_e3_l_322396,op1_e3_l_332399);
        if camOrtho2331 then goto JOIN23A2 else goto ASSIGN23FC
      JOIN23A2:  preds = [COND239F,ASSIGN23FD]
        tensor[3] _t23A0#1 = phi(UV239C,_t23A1)
        tensor[3] rayOrig23A3#1 = VAdd<3>(camEye232F,_t23A0);
        if camOrtho2331 then goto ASSIGN23A8 else goto ASSIGN23F2
      ASSIGN23A8:  preds = [COND23A6]
        real _t23A7#3 = 0.e0;
        tensor[3] _t23A9#1 = <tensor[3]>[_t23A7,_t23A7,_t23A7];
        goto JOIN23AD
      JOIN23AD:  preds = [ASSIGN23AA,ASSIGN23FA]
        tensor[3] _t23AB#1 = phi(_t23A9,_t23AC)
        tensor[3] rayVec23AE#4 = VAdd<3>(camN233D,_t23AB);
        real op1_e3_l_623B1#1 = VDot<3>(rayVec23AE,rayVec23AE);
        real op1_e3_l_723B4#2 = Sqrt(op1_e3_l_623B1);
        real op1_e3_l_823B7#1 = RMul(rayStep2337,op1_e3_l_723B4);
        real alphaFix23BA#1 = RDiv(op1_e3_l_823B7,refStep2339);
        real realLit23BE#2 = 0.1e1;
        real op1_e3_l_923BD#1 = RDiv(realLit23BE,op1_e3_l_723B4);
        tensor[3] op1_e3_l_1023C2#1 = VScale<3>(op1_e3_l_923BD,rayVec23AE);
        tensor[3] eyeDir23C5#1 = VNeg<3>(op1_e3_l_1023C2);
        real phKa23C8#1 = VIndex<4,0>(phong233B);
        real phKd23CA#1 = VIndex<4,1>(phong233B);
        real phKs23CC#1 = VIndex<4,2>(phong233B);
        real phSp23CE#1 = VIndex<4,3>(phong233B);
        real _t23D0#8 = 0.e0;
        tensor[4] rgba23D2#1 = <tensor[4]>[_t23D0,_t23D0,_t23D0,_t23D0];
        tensor[3] rgb23D4#1 = <tensor[3]>[_t23D0,_t23D0,_t23D0];
        self.rayU = rayU2368;
        self.rayV = rayV2384;
        self.rayN = camNearVsp2349;
        self.UV = UV239C;
        self.rayOrig = rayOrig23A3;
        self.rayVec = rayVec23AE;
        self.alphaFix = alphaFix23BA;
        self.eyeDir = eyeDir23C5;
        self.phKa = phKa23C8;
        self.phKd = phKd23CA;
        self.phKs = phKs23CC;
        self.phSp = phSp23CE;
        self.rgba = rgba23D2;
        self.raw = _t23D0;
        self.rgb = rgb23D4;
        self.transp = realLit23BE;
        return
      ASSIGN23F2:  preds = [COND23A6]
        real realLit23E9#1 = 0.1e1;
        real r23EA#3 = RDiv(realLit23E9,camDist2343);
        real r23EB#1 = TensorIndex<tensor[3],[0]>(UV239C);
        real r23EC#1 = RMul(r23EA,r23EB);
        real r23ED#1 = TensorIndex<tensor[3],[1]>(UV239C);
        real r23EE#1 = RMul(r23EA,r23ED);
        real r23EF#1 = TensorIndex<tensor[3],[2]>(UV239C);
        real r23F0#1 = RMul(r23EA,r23EF);
        tensor[3] _t23AC#1 = <tensor[3]>[r23EC,r23EE,r23F0];
        goto JOIN23AD
      ASSIGN23FC:  preds = [COND239F]
        real _t23FB#3 = 0.e0;
        tensor[3] _t23A1#1 = <tensor[3]>[_t23FB,_t23FB,_t23FB];
        goto JOIN23A2
    end state init
    method update
        ENTRY23FE:  preds = []
          image(IMAGE1D<double[3]>) cmap23FF#17 = globals.cmap2119;
          int _t2401#2 = globals._t213A;
          femData:Space _t2403#168 = globals._tX213B;
          femData:FemFunc _t2405#168 = globals._tXX213C;
          femData:Mesh block240B#1 = globals.block2115;
          real rayStep240D#1 = globals.rayStep2123;
          real transp0240F#1 = globals.transp02125;
          real thick2411#1 = globals.thick2126;
          real fStrTh2413#1 = globals.fStrTh2127;
          real fMaskTh2415#1 = globals.fMaskTh2128;
          real fBias2417#1 = globals.fBias2129;
          real maxAlpha2419#1 = globals.maxAlpha212A;
          tensor[3] mcNear241B#2 = globals.mcNear212D;
          tensor[3] mcFar241D#1 = globals.mcFar212E;
          tensor[2] cminmax241F#2 = globals.cminmax2130;
          real camNearVsp2421#2 = globals.camNearVsp2137;
          real camFarVsp2423#2 = globals.camFarVsp2138;
          tensor[3] litwsp2425#2 = globals.litwsp2139;
          real rayN2427#1 = self.rayN;
          tensor[3] rayOrig2429#1 = self.rayOrig;
          tensor[3] rayVec242B#1 = self.rayVec;
          real alphaFix242D#1 = self.alphaFix;
          tensor[3] eyeDir242F#1 = self.eyeDir;
          real phKa2431#1 = self.phKa;
          real phKd2433#1 = self.phKd;
          real phKs2435#2 = self.phKs;
          real phSp2437#1 = self.phSp;
          tensor[3] rgb2439#1 = self.rgb;
          real transp243B#2 = self.transp;
          real rayN243D#8 = RAdd(rayN2427,rayStep240D);
          bool _t2440#1 = GT<real>(rayN243D,camFarVsp2423);
          if _t2440 then goto SAVE2443 else goto JOIN2445
        SAVE2443:  preds = [COND2442]
          self.rayN = rayN243D;
          stabilize
          goto JOIN2445
        JOIN2445:  preds = [*STABILIZE2444,COND2442]
          tensor[3] op1_e3_l_52446#1 = VScale<3>(rayN243D,rayVec242B);
          tensor[3] pos2449#8 = VAdd<3>(rayOrig2429,op1_e3_l_52446);
          femData:RefCell _t244C#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block240B);
          real _t244E#1 = 0.1e-8;
          bool _t2450#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t244C,pos2449,_t244E);
          if _t2450 then goto ASSIGN2553 else goto ASSIGN5399
        ASSIGN2553:  preds = [COND2452]
          int ilit2454#1 = 84;
          int mulRes2455#84 = IMul(_t2401,ilit2454);
          int idx2458#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,mulRes2455);
          int ilit2459#86 = 1;
          int addRes245A#1 = IAdd(mulRes2455,ilit2459);
          int idx245B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245A);
          int ilit245C#1 = 2;
          int addRes245D#1 = IAdd(mulRes2455,ilit245C);
          int idx245E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245D);
          int ilit245F#1 = 3;
          int addRes2460#1 = IAdd(mulRes2455,ilit245F);
          int idx2461#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2460);
          int ilit2462#1 = 4;
          int addRes2463#1 = IAdd(mulRes2455,ilit2462);
          int idx2464#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2463);
          int ilit2465#1 = 5;
          int addRes2466#1 = IAdd(mulRes2455,ilit2465);
          int idx2467#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2466);
          int ilit2468#1 = 6;
          int addRes2469#1 = IAdd(mulRes2455,ilit2468);
          int idx246A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2469);
          int ilit246B#1 = 7;
          int addRes246C#1 = IAdd(mulRes2455,ilit246B);
          int idx246D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246C);
          int ilit246E#1 = 8;
          int addRes246F#1 = IAdd(mulRes2455,ilit246E);
          int idx2470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246F);
          int ilit2471#1 = 9;
          int addRes2472#1 = IAdd(mulRes2455,ilit2471);
          int idx2473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2472);
          int ilit2474#1 = 10;
          int addRes2475#1 = IAdd(mulRes2455,ilit2474);
          int idx2476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2475);
          int ilit2477#1 = 11;
          int addRes2478#1 = IAdd(mulRes2455,ilit2477);
          int idx2479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2478);
          int ilit247A#1 = 12;
          int addRes247B#1 = IAdd(mulRes2455,ilit247A);
          int idx247C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247B);
          int ilit247D#1 = 13;
          int addRes247E#1 = IAdd(mulRes2455,ilit247D);
          int idx247F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247E);
          int ilit2480#1 = 14;
          int addRes2481#1 = IAdd(mulRes2455,ilit2480);
          int idx2482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2481);
          int ilit2483#1 = 15;
          int addRes2484#1 = IAdd(mulRes2455,ilit2483);
          int idx2485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2484);
          int ilit2486#1 = 16;
          int addRes2487#1 = IAdd(mulRes2455,ilit2486);
          int idx2488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2487);
          int ilit2489#1 = 17;
          int addRes248A#1 = IAdd(mulRes2455,ilit2489);
          int idx248B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248A);
          int ilit248C#1 = 18;
          int addRes248D#1 = IAdd(mulRes2455,ilit248C);
          int idx248E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248D);
          int ilit248F#1 = 19;
          int addRes2490#1 = IAdd(mulRes2455,ilit248F);
          int idx2491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2490);
          int ilit2492#1 = 20;
          int addRes2493#1 = IAdd(mulRes2455,ilit2492);
          int idx2494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2493);
          int ilit2495#1 = 21;
          int addRes2496#1 = IAdd(mulRes2455,ilit2495);
          int idx2497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2496);
          int ilit2498#1 = 22;
          int addRes2499#1 = IAdd(mulRes2455,ilit2498);
          int idx249A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2499);
          int ilit249B#1 = 23;
          int addRes249C#1 = IAdd(mulRes2455,ilit249B);
          int idx249D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249C);
          int ilit249E#1 = 24;
          int addRes249F#1 = IAdd(mulRes2455,ilit249E);
          int idx24A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249F);
          int ilit24A1#1 = 25;
          int addRes24A2#1 = IAdd(mulRes2455,ilit24A1);
          int idx24A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A2);
          int ilit24A4#1 = 26;
          int addRes24A5#1 = IAdd(mulRes2455,ilit24A4);
          int idx24A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A5);
          int ilit24A7#1 = 27;
          int addRes24A8#1 = IAdd(mulRes2455,ilit24A7);
          int idx24A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A8);
          int ilit24AA#1 = 28;
          int addRes24AB#1 = IAdd(mulRes2455,ilit24AA);
          int idx24AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AB);
          int ilit24AD#1 = 29;
          int addRes24AE#1 = IAdd(mulRes2455,ilit24AD);
          int idx24AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AE);
          int ilit24B0#1 = 30;
          int addRes24B1#1 = IAdd(mulRes2455,ilit24B0);
          int idx24B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B1);
          int ilit24B3#1 = 31;
          int addRes24B4#1 = IAdd(mulRes2455,ilit24B3);
          int idx24B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B4);
          int ilit24B6#1 = 32;
          int addRes24B7#1 = IAdd(mulRes2455,ilit24B6);
          int idx24B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B7);
          int ilit24B9#1 = 33;
          int addRes24BA#1 = IAdd(mulRes2455,ilit24B9);
          int idx24BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BA);
          int ilit24BC#1 = 34;
          int addRes24BD#1 = IAdd(mulRes2455,ilit24BC);
          int idx24BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BD);
          int ilit24BF#1 = 35;
          int addRes24C0#1 = IAdd(mulRes2455,ilit24BF);
          int idx24C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C0);
          int ilit24C2#1 = 36;
          int addRes24C3#1 = IAdd(mulRes2455,ilit24C2);
          int idx24C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C3);
          int ilit24C5#1 = 37;
          int addRes24C6#1 = IAdd(mulRes2455,ilit24C5);
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C6);
          int ilit24C8#1 = 38;
          int addRes24C9#1 = IAdd(mulRes2455,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C9);
          int ilit24CB#1 = 39;
          int addRes24CC#1 = IAdd(mulRes2455,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CC);
          int ilit24CE#1 = 40;
          int addRes24CF#1 = IAdd(mulRes2455,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CF);
          int ilit24D1#1 = 41;
          int addRes24D2#1 = IAdd(mulRes2455,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D2);
          int ilit24D4#1 = 42;
          int addRes24D5#1 = IAdd(mulRes2455,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D5);
          int ilit24D7#1 = 43;
          int addRes24D8#1 = IAdd(mulRes2455,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D8);
          int ilit24DA#1 = 44;
          int addRes24DB#1 = IAdd(mulRes2455,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DB);
          int ilit24DD#1 = 45;
          int addRes24DE#1 = IAdd(mulRes2455,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DE);
          int ilit24E0#1 = 46;
          int addRes24E1#1 = IAdd(mulRes2455,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E1);
          int ilit24E3#1 = 47;
          int addRes24E4#1 = IAdd(mulRes2455,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E4);
          int ilit24E6#1 = 48;
          int addRes24E7#1 = IAdd(mulRes2455,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E7);
          int ilit24E9#1 = 49;
          int addRes24EA#1 = IAdd(mulRes2455,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24EA);
          int ilit24EC#1 = 50;
          int addRes24ED#1 = IAdd(mulRes2455,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24ED);
          int ilit24EF#1 = 51;
          int addRes24F0#1 = IAdd(mulRes2455,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F0);
          int ilit24F2#1 = 52;
          int addRes24F3#1 = IAdd(mulRes2455,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F3);
          int ilit24F5#1 = 53;
          int addRes24F6#1 = IAdd(mulRes2455,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F6);
          int ilit24F8#1 = 54;
          int addRes24F9#1 = IAdd(mulRes2455,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F9);
          int ilit24FB#1 = 55;
          int addRes24FC#1 = IAdd(mulRes2455,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FC);
          int ilit24FE#1 = 56;
          int addRes24FF#1 = IAdd(mulRes2455,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FF);
          int ilit2501#1 = 57;
          int addRes2502#1 = IAdd(mulRes2455,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2502);
          int ilit2504#1 = 58;
          int addRes2505#1 = IAdd(mulRes2455,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2505);
          int ilit2507#1 = 59;
          int addRes2508#1 = IAdd(mulRes2455,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2508);
          int ilit250A#1 = 60;
          int addRes250B#1 = IAdd(mulRes2455,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250B);
          int ilit250D#1 = 61;
          int addRes250E#1 = IAdd(mulRes2455,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250E);
          int ilit2510#1 = 62;
          int addRes2511#1 = IAdd(mulRes2455,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2511);
          int ilit2513#1 = 63;
          int addRes2514#1 = IAdd(mulRes2455,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2514);
          int ilit2516#1 = 64;
          int addRes2517#1 = IAdd(mulRes2455,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2517);
          int ilit2519#1 = 65;
          int addRes251A#1 = IAdd(mulRes2455,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251A);
          int ilit251C#1 = 66;
          int addRes251D#1 = IAdd(mulRes2455,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251D);
          int ilit251F#1 = 67;
          int addRes2520#1 = IAdd(mulRes2455,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2520);
          int ilit2522#1 = 68;
          int addRes2523#1 = IAdd(mulRes2455,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2523);
          int ilit2525#1 = 69;
          int addRes2526#1 = IAdd(mulRes2455,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2526);
          int ilit2528#1 = 70;
          int addRes2529#1 = IAdd(mulRes2455,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2529);
          int ilit252B#1 = 71;
          int addRes252C#1 = IAdd(mulRes2455,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252C);
          int ilit252E#1 = 72;
          int addRes252F#1 = IAdd(mulRes2455,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252F);
          int ilit2531#1 = 73;
          int addRes2532#1 = IAdd(mulRes2455,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2532);
          int ilit2534#1 = 74;
          int addRes2535#1 = IAdd(mulRes2455,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2535);
          int ilit2537#1 = 75;
          int addRes2538#1 = IAdd(mulRes2455,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2538);
          int ilit253A#1 = 76;
          int addRes253B#1 = IAdd(mulRes2455,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253B);
          int ilit253D#1 = 77;
          int addRes253E#1 = IAdd(mulRes2455,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253E);
          int ilit2540#1 = 78;
          int addRes2541#1 = IAdd(mulRes2455,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2541);
          int ilit2543#1 = 79;
          int addRes2544#1 = IAdd(mulRes2455,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2544);
          int ilit2546#1 = 80;
          int addRes2547#1 = IAdd(mulRes2455,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2547);
          int ilit2549#1 = 81;
          int addRes254A#1 = IAdd(mulRes2455,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254A);
          int ilit254C#1 = 82;
          int addRes254D#1 = IAdd(mulRes2455,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254D);
          int ilit254F#1 = 83;
          int addRes2550#1 = IAdd(mulRes2455,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2550);
          int mulRes2657#1 = IMul(ilit2459,idx2458);
          int mulRes2659#1 = IMul(ilit2459,idx245B);
          int mulRes265C#1 = IMul(ilit2459,idx245E);
          int mulRes265F#1 = IMul(ilit2459,idx2461);
          int mulRes2662#1 = IMul(ilit2459,idx2464);
          int mulRes2665#1 = IMul(ilit2459,idx2467);
          int mulRes2668#1 = IMul(ilit2459,idx246A);
          int mulRes266B#1 = IMul(ilit2459,idx246D);
          int mulRes266E#1 = IMul(ilit2459,idx2470);
          int mulRes2671#1 = IMul(ilit2459,idx2473);
          int mulRes2674#1 = IMul(ilit2459,idx2476);
          int mulRes2677#1 = IMul(ilit2459,idx2479);
          int mulRes267A#1 = IMul(ilit2459,idx247C);
          int mulRes267D#1 = IMul(ilit2459,idx247F);
          int mulRes2680#1 = IMul(ilit2459,idx2482);
          int mulRes2683#1 = IMul(ilit2459,idx2485);
          int mulRes2686#1 = IMul(ilit2459,idx2488);
          int mulRes2689#1 = IMul(ilit2459,idx248B);
          int mulRes268C#1 = IMul(ilit2459,idx248E);
          int mulRes268F#1 = IMul(ilit2459,idx2491);
          int mulRes2692#1 = IMul(ilit2459,idx2494);
          int mulRes2695#1 = IMul(ilit2459,idx2497);
          int mulRes2698#1 = IMul(ilit2459,idx249A);
          int mulRes269B#1 = IMul(ilit2459,idx249D);
          int mulRes269E#1 = IMul(ilit2459,idx24A0);
          int mulRes26A1#1 = IMul(ilit2459,idx24A3);
          int mulRes26A4#1 = IMul(ilit2459,idx24A6);
          int mulRes26A7#1 = IMul(ilit2459,idx24A9);
          int mulRes26AA#1 = IMul(ilit2459,idx24AC);
          int mulRes26AD#1 = IMul(ilit2459,idx24AF);
          int mulRes26B0#1 = IMul(ilit2459,idx24B2);
          int mulRes26B3#1 = IMul(ilit2459,idx24B5);
          int mulRes26B6#1 = IMul(ilit2459,idx24B8);
          int mulRes26B9#1 = IMul(ilit2459,idx24BB);
          int mulRes26BC#1 = IMul(ilit2459,idx24BE);
          int mulRes26BF#1 = IMul(ilit2459,idx24C1);
          int mulRes26C2#1 = IMul(ilit2459,idx24C4);
          int mulRes26C5#1 = IMul(ilit2459,idx24C7);
          int mulRes26C8#1 = IMul(ilit2459,idx24CA);
          int mulRes26CB#1 = IMul(ilit2459,idx24CD);
          int mulRes26CE#1 = IMul(ilit2459,idx24D0);
          int mulRes26D1#1 = IMul(ilit2459,idx24D3);
          int mulRes26D4#1 = IMul(ilit2459,idx24D6);
          int mulRes26D7#1 = IMul(ilit2459,idx24D9);
          int mulRes26DA#1 = IMul(ilit2459,idx24DC);
          int mulRes26DD#1 = IMul(ilit2459,idx24DF);
          int mulRes26E0#1 = IMul(ilit2459,idx24E2);
          int mulRes26E3#1 = IMul(ilit2459,idx24E5);
          int mulRes26E6#1 = IMul(ilit2459,idx24E8);
          int mulRes26E9#1 = IMul(ilit2459,idx24EB);
          int mulRes26EC#1 = IMul(ilit2459,idx24EE);
          int mulRes26EF#1 = IMul(ilit2459,idx24F1);
          int mulRes26F2#1 = IMul(ilit2459,idx24F4);
          int mulRes26F5#1 = IMul(ilit2459,idx24F7);
          int mulRes26F8#1 = IMul(ilit2459,idx24FA);
          int mulRes26FB#1 = IMul(ilit2459,idx24FD);
          int mulRes26FE#1 = IMul(ilit2459,idx2500);
          int mulRes2701#1 = IMul(ilit2459,idx2503);
          int mulRes2704#1 = IMul(ilit2459,idx2506);
          int mulRes2707#1 = IMul(ilit2459,idx2509);
          int mulRes270A#1 = IMul(ilit2459,idx250C);
          int mulRes270D#1 = IMul(ilit2459,idx250F);
          int mulRes2710#1 = IMul(ilit2459,idx2512);
          int mulRes2713#1 = IMul(ilit2459,idx2515);
          int mulRes2716#1 = IMul(ilit2459,idx2518);
          int mulRes2719#1 = IMul(ilit2459,idx251B);
          int mulRes271C#1 = IMul(ilit2459,idx251E);
          int mulRes271F#1 = IMul(ilit2459,idx2521);
          int mulRes2722#1 = IMul(ilit2459,idx2524);
          int mulRes2725#1 = IMul(ilit2459,idx2527);
          int mulRes2728#1 = IMul(ilit2459,idx252A);
          int mulRes272B#1 = IMul(ilit2459,idx252D);
          int mulRes272E#1 = IMul(ilit2459,idx2530);
          int mulRes2731#1 = IMul(ilit2459,idx2533);
          int mulRes2734#1 = IMul(ilit2459,idx2536);
          int mulRes2737#1 = IMul(ilit2459,idx2539);
          int mulRes273A#1 = IMul(ilit2459,idx253C);
          int mulRes273D#1 = IMul(ilit2459,idx253F);
          int mulRes2740#1 = IMul(ilit2459,idx2542);
          int mulRes2743#1 = IMul(ilit2459,idx2545);
          int mulRes2746#1 = IMul(ilit2459,idx2548);
          int mulRes2749#1 = IMul(ilit2459,idx254B);
          int mulRes274C#1 = IMul(ilit2459,idx254E);
          int mulRes274F#1 = IMul(ilit2459,idx2551);
          real dof2750#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2657);
          real dof2751#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2659);
          real dof2752#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265C);
          real dof2753#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265F);
          real dof2754#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2662);
          real dof2755#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2665);
          real dof2756#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2668);
          real dof2757#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266B);
          real dof2758#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266E);
          real dof2759#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2671);
          real dof275A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2674);
          real dof275B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2677);
          real dof275C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267A);
          real dof275D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267D);
          real dof275E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2680);
          real dof275F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2683);
          real dof2760#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2686);
          real dof2761#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2689);
          real dof2762#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268C);
          real dof2763#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268F);
          real dof2764#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2692);
          real dof2765#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2695);
          real dof2766#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2698);
          real dof2767#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269B);
          real dof2768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269E);
          real dof2769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A1);
          real dof276A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A4);
          real dof276B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A7);
          real dof276C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AA);
          real dof276D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AD);
          real dof276E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B0);
          real dof276F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B3);
          real dof2770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B6);
          real dof2771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B9);
          real dof2772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BC);
          real dof2773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BF);
          real dof2774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C2);
          real dof2775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C5);
          real dof2776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C8);
          real dof2777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CB);
          real dof2778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CE);
          real dof2779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D1);
          real dof277A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D4);
          real dof277B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D7);
          real dof277C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DA);
          real dof277D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DD);
          real dof277E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E0);
          real dof277F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E3);
          real dof2780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E6);
          real dof2781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E9);
          real dof2782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EC);
          real dof2783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EF);
          real dof2784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F2);
          real dof2785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F5);
          real dof2786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F8);
          real dof2787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FB);
          real dof2788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FE);
          real dof2789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2701);
          real dof278A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2704);
          real dof278B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2707);
          real dof278C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270A);
          real dof278D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270D);
          real dof278E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2710);
          real dof278F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2713);
          real dof2790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2716);
          real dof2791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2719);
          real dof2792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271C);
          real dof2793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271F);
          real dof2794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2722);
          real dof2795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2725);
          real dof2796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2728);
          real dof2797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272B);
          real dof2798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272E);
          real dof2799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2731);
          real dof279A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2734);
          real dof279B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2737);
          real dof279C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273A);
          real dof279D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273D);
          real dof279E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2740);
          real dof279F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2743);
          real dof27A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2746);
          real dof27A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2749);
          real dof27A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274C);
          real dof27A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274F);
          tensor[84] dofs27A4#19 = <tensor[84]>[dof2750,dof2751,dof2752,dof2753,dof2754,dof2755,dof2756,dof2757,dof2758,dof2759,dof275A,dof275B,dof275C,dof275D,dof275E,dof275F,dof2760,dof2761,dof2762,dof2763,dof2764,dof2765,dof2766,dof2767,dof2768,dof2769,dof276A,dof276B,dof276C,dof276D,dof276E,dof276F,dof2770,dof2771,dof2772,dof2773,dof2774,dof2775,dof2776,dof2777,dof2778,dof2779,dof277A,dof277B,dof277C,dof277D,dof277E,dof277F,dof2780,dof2781,dof2782,dof2783,dof2784,dof2785,dof2786,dof2787,dof2788,dof2789,dof278A,dof278B,dof278C,dof278D,dof278E,dof278F,dof2790,dof2791,dof2792,dof2793,dof2794,dof2795,dof2796,dof2797,dof2798,dof2799,dof279A,dof279B,dof279C,dof279D,dof279E,dof279F,dof27A0,dof27A1,dof27A2,dof27A3];
          real varAcc28F8#20 = VIndex<3,0>(pos2449);
          real varAcc28F9#10 = VIndex<3,1>(pos2449);
          real varAcc28FA#10 = VIndex<3,2>(pos2449);
          real basisEval28FB#1023 = 0.e0;
          real coeff28FC#47 = 0.2e1;
          real one28FD#83 = 0.1e1;
          real prod28FE#9 = RMul(one28FD,one28FD);
          real prod28FF#3 = RMul(one28FD,prod28FE);
          real basisEval2900#9 = RMul(coeff28FC,prod28FF);
          real prod2902#5 = RMul(one28FD,varAcc28FA);
          real prod2903#5 = RMul(one28FD,prod2902);
          real basisEval2904#8 = RMul(coeff28FC,prod2903);
          real prod2906#5 = RMul(varAcc28F9,one28FD);
          real prod2907#5 = RMul(one28FD,prod2906);
          real basisEval2908#8 = RMul(coeff28FC,prod2907);
          real coeff2909#32 = 0.6e1;
          real prod290B#5 = RMul(varAcc28F8,prod28FE);
          real basisEval290C#5 = RMul(coeff2909,prod290B);
          real prod2290D#5 = RMul(varAcc28FA,varAcc28FA);
          real prod290E#4 = RMul(one28FD,prod2290D);
          real prod290F#6 = RMul(one28FD,prod290E);
          real basisEval2910#4 = RMul(coeff28FC,prod290F);
          real prod2911#4 = RMul(varAcc28F9,varAcc28FA);
          real prod2912#6 = RMul(one28FD,prod2911);
          real basisEval2913#5 = RMul(coeff28FC,prod2912);
          real prod22914#5 = RMul(varAcc28F9,varAcc28F9);
          real prod2915#4 = RMul(prod22914,one28FD);
          real prod2916#6 = RMul(one28FD,prod2915);
          real basisEval2917#4 = RMul(coeff28FC,prod2916);
          real prod2918#6 = RMul(varAcc28F8,prod2902);
          real basisEval2919#5 = RMul(coeff2909,prod2918);
          real prod291A#6 = RMul(varAcc28F8,prod2906);
          real basisEval291B#5 = RMul(coeff2909,prod291A);
          real coeff291C#19 = 0.12e2;
          real prod2291D#11 = RMul(varAcc28F8,varAcc28F8);
          real prod291E#6 = RMul(prod2291D,prod28FE);
          real basisEval291F#3 = RMul(coeff291C,prod291E);
          real prod32920#4 = RMul(prod2290D,varAcc28FA);
          real prod2921#3 = RMul(one28FD,prod32920);
          real prod2922#7 = RMul(one28FD,prod2921);
          real basisEval2923#4 = RMul(coeff28FC,prod2922);
          real prod2924#3 = RMul(varAcc28F9,prod2290D);
          real prod2925#9 = RMul(one28FD,prod2924);
          real basisEval2926#3 = RMul(coeff28FC,prod2925);
          real prod2927#3 = RMul(prod22914,varAcc28FA);
          real prod2928#9 = RMul(one28FD,prod2927);
          real basisEval2929#3 = RMul(coeff28FC,prod2928);
          real prod3292A#4 = RMul(prod22914,varAcc28F9);
          real prod292B#3 = RMul(prod3292A,one28FD);
          real prod292C#7 = RMul(one28FD,prod292B);
          real basisEval292D#4 = RMul(coeff28FC,prod292C);
          real prod292E#9 = RMul(varAcc28F8,prod290E);
          real basisEval292F#6 = RMul(coeff2909,prod292E);
          real prod2930#6 = RMul(varAcc28F8,prod2911);
          real basisEval2931#3 = RMul(coeff2909,prod2930);
          real prod2932#9 = RMul(varAcc28F8,prod2915);
          real basisEval2933#6 = RMul(coeff2909,prod2932);
          real prod2934#9 = RMul(prod2291D,prod2902);
          real basisEval2935#2 = RMul(coeff291C,prod2934);
          real prod2936#9 = RMul(prod2291D,prod2906);
          real basisEval2937#2 = RMul(coeff291C,prod2936);
          real coeff2938#9 = 0.20e2;
          real prod32939#7 = RMul(prod2291D,varAcc28F8);
          real prod293A#7 = RMul(prod32939,prod28FE);
          real basisEval293B#3 = RMul(coeff2938,prod293A);
          real prod4293C#3 = RMul(prod32920,varAcc28FA);
          real prod293D#2 = RMul(one28FD,prod4293C);
          real prod293E#4 = RMul(one28FD,prod293D);
          real basisEval293F#2 = RMul(coeff28FC,prod293E);
          real prod2940#2 = RMul(varAcc28F9,prod32920);
          real prod2941#6 = RMul(one28FD,prod2940);
          real basisEval2942#3 = RMul(coeff28FC,prod2941);
          real prod2943#2 = RMul(prod22914,prod2290D);
          real prod2944#5 = RMul(one28FD,prod2943);
          real basisEval2945#1 = RMul(coeff28FC,prod2944);
          real prod2946#2 = RMul(prod3292A,varAcc28FA);
          real prod2947#6 = RMul(one28FD,prod2946);
          real basisEval2948#3 = RMul(coeff28FC,prod2947);
          real prod42949#3 = RMul(prod3292A,varAcc28F9);
          real prod294A#2 = RMul(prod42949,one28FD);
          real prod294B#4 = RMul(one28FD,prod294A);
          real basisEval294C#2 = RMul(coeff28FC,prod294B);
          real prod294D#6 = RMul(varAcc28F8,prod2921);
          real basisEval294E#1 = RMul(coeff2909,prod294D);
          real prod294F#5 = RMul(varAcc28F8,prod2924);
          real basisEval2950#4 = RMul(coeff2909,prod294F);
          real prod2951#5 = RMul(varAcc28F8,prod2927);
          real basisEval2952#4 = RMul(coeff2909,prod2951);
          real prod2953#6 = RMul(varAcc28F8,prod292B);
          real basisEval2954#1 = RMul(coeff2909,prod2953);
          real prod2955#5 = RMul(prod2291D,prod290E);
          real basisEval2956#2 = RMul(coeff291C,prod2955);
          real prod2957#5 = RMul(prod2291D,prod2911);
          real basisEval2958#1 = RMul(coeff291C,prod2957);
          real prod2959#5 = RMul(prod2291D,prod2915);
          real basisEval295A#2 = RMul(coeff291C,prod2959);
          real prod295B#6 = RMul(prod32939,prod2902);
          real basisEval295C#1 = RMul(coeff2938,prod295B);
          real prod295D#6 = RMul(prod32939,prod2906);
          real basisEval295E#1 = RMul(coeff2938,prod295D);
          real coeff295F#3 = 0.30e2;
          real prod42960#4 = RMul(prod32939,varAcc28F8);
          real prod2961#4 = RMul(prod42960,prod28FE);
          real basisEval2962#1 = RMul(coeff295F,prod2961);
          real basisEval2963#7 = RMul(one28FD,prod28FF);
          real basisEval2964#3 = RMul(one28FD,prod2903);
          real basisEval2965#8 = RMul(coeff28FC,prod290B);
          real basisEval2966#3 = RMul(one28FD,prod290F);
          real coeff2967#24 = 0.3e1;
          real basisEval2968#4 = RMul(coeff2967,prod2916);
          real basisEval2969#5 = RMul(coeff28FC,prod2918);
          real coeff296A#34 = 0.4e1;
          real basisEval296B#4 = RMul(coeff296A,prod291A);
          real basisEval296C#4 = RMul(coeff2967,prod291E);
          real basisEval296D#3 = RMul(one28FD,prod2922);
          real basisEval296E#2 = RMul(coeff2967,prod2928);
          real basisEval296F#4 = RMul(coeff296A,prod292C);
          real basisEval2970#3 = RMul(coeff28FC,prod292E);
          real basisEval2971#3 = RMul(coeff296A,prod2930);
          real basisEval2972#2 = RMul(coeff2967,prod2934);
          real basisEval2973#6 = RMul(coeff2909,prod2936);
          real basisEval2974#4 = RMul(coeff296A,prod293A);
          real basisEval2975#3 = RMul(one28FD,prod293E);
          real basisEval2976#4 = RMul(coeff2967,prod2944);
          real basisEval2977#2 = RMul(coeff296A,prod2947);
          real coeff2978#9 = 0.5e1;
          real basisEval2979#3 = RMul(coeff2978,prod294B);
          real basisEval297A#3 = RMul(coeff28FC,prod294D);
          real basisEval297B#1 = RMul(coeff296A,prod294F);
          real coeff297C#10 = 0.8e1;
          real basisEval297D#1 = RMul(coeff297C,prod2953);
          real basisEval297E#4 = RMul(coeff2967,prod2955);
          real basisEval297F#4 = RMul(coeff2909,prod2957);
          real coeff2980#3 = 0.9e1;
          real basisEval2981#1 = RMul(coeff2980,prod2959);
          real basisEval2982#2 = RMul(coeff296A,prod295B);
          real basisEval2983#1 = RMul(coeff297C,prod295D);
          real basisEval2984#3 = RMul(coeff2978,prod2961);
          real basisEval2985#3 = RMul(one28FD,prod2907);
          real basisEval2986#4 = RMul(coeff2967,prod290F);
          real basisEval2987#3 = RMul(one28FD,prod2916);
          real basisEval2988#4 = RMul(coeff296A,prod2918);
          real basisEval2989#5 = RMul(coeff28FC,prod291A);
          real basisEval298A#4 = RMul(coeff296A,prod2922);
          real basisEval298B#2 = RMul(coeff2967,prod2925);
          real basisEval298C#3 = RMul(one28FD,prod292C);
          real basisEval298D#3 = RMul(coeff28FC,prod2932);
          real basisEval298E#6 = RMul(coeff2909,prod2934);
          real basisEval298F#2 = RMul(coeff2967,prod2936);
          real basisEval2990#3 = RMul(coeff2978,prod293E);
          real basisEval2991#2 = RMul(coeff296A,prod2941);
          real basisEval2992#3 = RMul(one28FD,prod294B);
          real basisEval2993#1 = RMul(coeff297C,prod294D);
          real basisEval2994#1 = RMul(coeff296A,prod2951);
          real basisEval2995#3 = RMul(coeff28FC,prod2953);
          real basisEval2996#1 = RMul(coeff2980,prod2955);
          real basisEval2997#4 = RMul(coeff2967,prod2959);
          real basisEval2998#1 = RMul(coeff297C,prod295B);
          real basisEval2999#2 = RMul(coeff296A,prod295D);
          real basisEval299A#5 = RMul(coeff2909,prod2907);
          real basisEval299B#5 = RMul(coeff2909,prod2912);
          real basisEval299C#3 = RMul(coeff291C,prod2916);
          real basisEval299D#4 = RMul(coeff28FC,prod291E);
          real basisEval299E#6 = RMul(coeff2909,prod2925);
          real basisEval299F#2 = RMul(coeff291C,prod2928);
          real basisEval29A0#3 = RMul(coeff2938,prod292C);
          real basisEval29A1#2 = RMul(coeff291C,prod2932);
          real basisEval29A2#3 = RMul(coeff28FC,prod2934);
          real basisEval29A3#4 = RMul(coeff28FC,prod293A);
          real basisEval29A4#1 = RMul(coeff2909,prod2941);
          real basisEval29A5#2 = RMul(coeff291C,prod2944);
          real basisEval29A6#1 = RMul(coeff2938,prod2947);
          real basisEval29A7#1 = RMul(coeff295F,prod294B);
          real basisEval29A8#1 = RMul(coeff291C,prod2951);
          real basisEval29A9#1 = RMul(coeff2938,prod2953);
          real basisEval29AA#1 = RMul(coeff28FC,prod2955);
          real basisEval29AB#3 = RMul(coeff28FC,prod295B);
          real basisEval29AC#1 = RMul(coeff2909,prod295D);
          real basisEval29AD#2 = RMul(coeff28FC,prod2961);
          real basisEval29AE#3 = RMul(one28FD,prod290B);
          real basisEval29AF#4 = RMul(coeff296A,prod2912);
          real basisEval29B0#3 = RMul(one28FD,prod291E);
          real basisEval29B1#6 = RMul(coeff2909,prod2928);
          real basisEval29B2#2 = RMul(coeff2967,prod292E);
          real basisEval29B3#2 = RMul(coeff2967,prod2932);
          real basisEval29B4#3 = RMul(coeff28FC,prod2936);
          real basisEval29B5#3 = RMul(one28FD,prod293A);
          real basisEval29B6#1 = RMul(coeff297C,prod2941);
          real basisEval29B7#1 = RMul(coeff2980,prod2944);
          real basisEval29B8#1 = RMul(coeff297C,prod2947);
          real basisEval29B9#2 = RMul(coeff296A,prod294D);
          real basisEval29BA#2 = RMul(coeff296A,prod2953);
          real basisEval29BB#1 = RMul(coeff296A,prod2957);
          real basisEval29BC#3 = RMul(coeff28FC,prod295D);
          real basisEval29BD#3 = RMul(one28FD,prod2961);
          real basisEval29BE#5 = RMul(coeff2909,prod2903);
          real basisEval29BF#3 = RMul(coeff291C,prod290F);
          real basisEval29C0#3 = RMul(coeff2938,prod2922);
          real basisEval29C1#2 = RMul(coeff291C,prod2925);
          real basisEval29C2#2 = RMul(coeff291C,prod292E);
          real basisEval29C3#1 = RMul(coeff295F,prod293E);
          real basisEval29C4#1 = RMul(coeff2938,prod2941);
          real basisEval29C5#1 = RMul(coeff2909,prod2947);
          real basisEval29C6#1 = RMul(coeff2938,prod294D);
          real basisEval29C7#1 = RMul(coeff291C,prod294F);
          real basisEval29C8#1 = RMul(coeff28FC,prod2959);
          real basisEval29C9#1 = RMul(coeff2909,prod295B);
          tensor[84] intermediateCons29CA#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval2913,basisEval2917,basisEval2919,basisEval291B,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval2926,basisEval2929,basisEval292D,basisEval292F,basisEval2931,basisEval2933,basisEval2935,basisEval2937,basisEval293B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval2942,basisEval2945,basisEval2948,basisEval294C,basisEval294E,basisEval2950,basisEval2952,basisEval2954,basisEval2956,basisEval2958,basisEval295A,basisEval295C,basisEval295E,basisEval2962];
          tensor[84] intermediateCons29CB#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2964,basisEval2908,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2966,basisEval2913,basisEval2968,basisEval28FB,basisEval2969,basisEval296B,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval296D,basisEval2926,basisEval296E,basisEval296F,basisEval28FB,basisEval2970,basisEval2971,basisEval2933,basisEval28FB,basisEval2972,basisEval2973,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2975,basisEval2942,basisEval2976,basisEval2977,basisEval2979,basisEval28FB,basisEval297A,basisEval297B,basisEval2952,basisEval297D,basisEval28FB,basisEval297E,basisEval297F,basisEval2981,basisEval28FB,basisEval2982,basisEval2983,basisEval28FB,basisEval2984,basisEval28FB];
          tensor[84] intermediateCons29CC#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2985,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval2913,basisEval2987,basisEval28FB,basisEval2988,basisEval2989,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval298B,basisEval2929,basisEval298C,basisEval28FB,basisEval292F,basisEval2971,basisEval298D,basisEval28FB,basisEval298E,basisEval298F,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval2991,basisEval2976,basisEval2948,basisEval2992,basisEval28FB,basisEval2993,basisEval2950,basisEval2994,basisEval2995,basisEval28FB,basisEval2996,basisEval297F,basisEval2997,basisEval28FB,basisEval2998,basisEval2999,basisEval28FB,basisEval2984,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CD#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval299A,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval299B,basisEval299C,basisEval28FB,basisEval28FB,basisEval2969,basisEval291B,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval299E,basisEval299F,basisEval29A0,basisEval28FB,basisEval28FB,basisEval2970,basisEval2931,basisEval29A1,basisEval28FB,basisEval28FB,basisEval29A2,basisEval2973,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval29A4,basisEval29A5,basisEval29A6,basisEval29A7,basisEval28FB,basisEval28FB,basisEval297A,basisEval2950,basisEval29A8,basisEval29A9,basisEval28FB,basisEval28FB,basisEval29AA,basisEval297F,basisEval295A,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29AC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CE#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval28FB,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval29AF,basisEval2968,basisEval28FB,basisEval28FB,basisEval2969,basisEval2989,basisEval28FB,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval299E,basisEval29B1,basisEval296F,basisEval28FB,basisEval28FB,basisEval29B2,basisEval2971,basisEval29B3,basisEval28FB,basisEval28FB,basisEval29A2,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval29B6,basisEval29B7,basisEval29B8,basisEval2979,basisEval28FB,basisEval28FB,basisEval29B9,basisEval2950,basisEval2952,basisEval29BA,basisEval28FB,basisEval28FB,basisEval297E,basisEval29BB,basisEval2997,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CF#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2908,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval299B,basisEval2917,basisEval28FB,basisEval28FB,basisEval2919,basisEval2989,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval29C1,basisEval29B1,basisEval292D,basisEval28FB,basisEval28FB,basisEval29C2,basisEval2931,basisEval298D,basisEval28FB,basisEval28FB,basisEval298E,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C3,basisEval29C4,basisEval29A5,basisEval29C5,basisEval294C,basisEval28FB,basisEval28FB,basisEval29C6,basisEval29C7,basisEval2952,basisEval2995,basisEval28FB,basisEval28FB,basisEval2956,basisEval297F,basisEval29C8,basisEval28FB,basisEval28FB,basisEval29C9,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          real vdot2AB3#10 = VDot<84>(dofs27A4,intermediateCons29CA);
          real vdot2AB5#15 = VDot<84>(dofs27A4,intermediateCons29CB);
          real vdot2AB7#15 = VDot<84>(dofs27A4,intermediateCons29CC);
          tensor[3] tensor2AB8#2 = <tensor[3]>[vdot2AB3,vdot2AB5,vdot2AB7];
          real vdot2ABC#10 = VDot<84>(dofs27A4,intermediateCons29CD);
          real vdot2ABE#15 = VDot<84>(dofs27A4,intermediateCons29CE);
          tensor[3] tensor2ABF#2 = <tensor[3]>[vdot2AB5,vdot2ABC,vdot2ABE];
          real vdot2AC5#10 = VDot<84>(dofs27A4,intermediateCons29CF);
          tensor[3] tensor2AC6#2 = <tensor[3]>[vdot2AB7,vdot2ABE,vdot2AC5];
          tensor[3,3] _t2AB1#1 = <tensor[3,3]>[tensor2AB8,tensor2ABF,tensor2AC6];
          real[3] _t2ADE#1 = EigenVals3x3(_t2AB1);
          real _t2AE2#1 = Subscript<real[3]>(_t2ADE,ilit2459);
          real basisEval2AFF#1 = RMul(one28FD,prod2912);
          real basisEval2B12#1 = RMul(one28FD,prod2925);
          real basisEval2B15#1 = RMul(one28FD,prod2928);
          real basisEval2B1D#3 = RMul(coeff28FC,prod2930);
          real basisEval2B2E#1 = RMul(one28FD,prod2941);
          real basisEval2B31#1 = RMul(one28FD,prod2944);
          real basisEval2B34#1 = RMul(one28FD,prod2947);
          real basisEval2B3C#2 = RMul(coeff28FC,prod294F);
          real basisEval2B3E#2 = RMul(coeff28FC,prod2951);
          real basisEval2B44#1 = RMul(coeff2967,prod2957);
          real prod52B4F#1 = RMul(prod4293C,varAcc28FA);
          real prod2B50#1 = RMul(one28FD,prod52B4F);
          real prod2B51#2 = RMul(one28FD,prod2B50);
          real basisEval2B52#2 = RMul(one28FD,prod2B51);
          real prod2B53#1 = RMul(varAcc28F9,prod4293C);
          real prod2B54#3 = RMul(one28FD,prod2B53);
          real basisEval2B55#1 = RMul(one28FD,prod2B54);
          real prod2B56#1 = RMul(prod22914,prod32920);
          real prod2B57#3 = RMul(one28FD,prod2B56);
          real basisEval2B58#1 = RMul(one28FD,prod2B57);
          real prod2B59#1 = RMul(prod3292A,prod2290D);
          real prod2B5A#3 = RMul(one28FD,prod2B59);
          real basisEval2B5B#1 = RMul(one28FD,prod2B5A);
          real prod2B5C#1 = RMul(prod42949,varAcc28FA);
          real prod2B5D#3 = RMul(one28FD,prod2B5C);
          real basisEval2B5E#1 = RMul(one28FD,prod2B5D);
          real prod52B5F#1 = RMul(prod42949,varAcc28F9);
          real prod2B60#1 = RMul(prod52B5F,one28FD);
          real prod2B61#2 = RMul(one28FD,prod2B60);
          real basisEval2B62#2 = RMul(one28FD,prod2B61);
          real prod2B63#3 = RMul(varAcc28F8,prod293D);
          real basisEval2B64#1 = RMul(coeff28FC,prod2B63);
          real prod2B65#2 = RMul(varAcc28F8,prod2940);
          real basisEval2B66#2 = RMul(coeff28FC,prod2B65);
          real prod2B67#2 = RMul(varAcc28F8,prod2943);
          real basisEval2B68#1 = RMul(coeff28FC,prod2B67);
          real prod2B69#2 = RMul(varAcc28F8,prod2946);
          real basisEval2B6A#2 = RMul(coeff28FC,prod2B69);
          real prod2B6B#3 = RMul(varAcc28F8,prod294A);
          real basisEval2B6C#1 = RMul(coeff28FC,prod2B6B);
          real prod2B6D#3 = RMul(prod2291D,prod2921);
          real basisEval2B6E#1 = RMul(coeff2967,prod2B6D);
          real prod2B6F#2 = RMul(prod2291D,prod2924);
          real basisEval2B70#2 = RMul(coeff2967,prod2B6F);
          real prod2B71#2 = RMul(prod2291D,prod2927);
          real basisEval2B72#2 = RMul(coeff2967,prod2B71);
          real prod2B73#3 = RMul(prod2291D,prod292B);
          real basisEval2B74#1 = RMul(coeff2967,prod2B73);
          real prod2B75#3 = RMul(prod32939,prod290E);
          real basisEval2B76#1 = RMul(coeff296A,prod2B75);
          real prod2B77#2 = RMul(prod32939,prod2911);
          real basisEval2B78#1 = RMul(coeff296A,prod2B77);
          real prod2B79#3 = RMul(prod32939,prod2915);
          real basisEval2B7A#1 = RMul(coeff296A,prod2B79);
          real prod2B7B#3 = RMul(prod42960,prod2902);
          real basisEval2B7C#1 = RMul(coeff2978,prod2B7B);
          real prod2B7D#3 = RMul(prod42960,prod2906);
          real basisEval2B7E#1 = RMul(coeff2978,prod2B7D);
          real prod52B80#1 = RMul(prod42960,varAcc28F8);
          real prod2B81#2 = RMul(prod52B80,prod28FE);
          real basisEval2B82#1 = RMul(coeff2909,prod2B81);
          real basisEval2B87#1 = RMul(one28FD,prod2918);
          real basisEval2B8C#1 = RMul(one28FD,prod292E);
          real basisEval2B8E#1 = RMul(one28FD,prod2934);
          real basisEval2B95#1 = RMul(one28FD,prod294D);
          real basisEval2B96#1 = RMul(coeff2967,prod2951);
          real basisEval2B98#1 = RMul(one28FD,prod2955);
          real basisEval2B99#2 = RMul(coeff28FC,prod2957);
          real basisEval2B9A#1 = RMul(one28FD,prod295B);
          real basisEval2B9D#1 = RMul(coeff28FC,prod2B54);
          real basisEval2B9E#1 = RMul(coeff2967,prod2B57);
          real basisEval2B9F#1 = RMul(coeff296A,prod2B5A);
          real basisEval2BA0#1 = RMul(coeff2978,prod2B5D);
          real basisEval2BA1#1 = RMul(coeff2909,prod2B61);
          real basisEval2BA2#1 = RMul(one28FD,prod2B63);
          real basisEval2BA3#2 = RMul(coeff2967,prod2B67);
          real basisEval2BA4#1 = RMul(coeff296A,prod2B69);
          real basisEval2BA5#1 = RMul(coeff2978,prod2B6B);
          real basisEval2BA6#1 = RMul(one28FD,prod2B6D);
          real basisEval2BA7#1 = RMul(coeff28FC,prod2B6F);
          real basisEval2BA8#1 = RMul(coeff296A,prod2B73);
          real basisEval2BA9#1 = RMul(one28FD,prod2B75);
          real basisEval2BAA#2 = RMul(coeff28FC,prod2B77);
          real basisEval2BAB#1 = RMul(coeff2967,prod2B79);
          real basisEval2BAC#1 = RMul(one28FD,prod2B7B);
          real basisEval2BAD#1 = RMul(coeff28FC,prod2B7D);
          real basisEval2BAE#2 = RMul(one28FD,prod2B81);
          real basisEval2BB1#1 = RMul(one28FD,prod291A);
          real basisEval2BB6#1 = RMul(one28FD,prod2932);
          real basisEval2BB8#1 = RMul(one28FD,prod2936);
          real basisEval2BBD#1 = RMul(coeff2967,prod294F);
          real basisEval2BBE#1 = RMul(one28FD,prod2953);
          real basisEval2BBF#1 = RMul(one28FD,prod2959);
          real basisEval2BC1#1 = RMul(one28FD,prod295D);
          real basisEval2BC2#1 = RMul(coeff2909,prod2B51);
          real basisEval2BC3#1 = RMul(coeff2978,prod2B54);
          real basisEval2BC4#1 = RMul(coeff296A,prod2B57);
          real basisEval2BC5#1 = RMul(coeff2967,prod2B5A);
          real basisEval2BC6#1 = RMul(coeff28FC,prod2B5D);
          real basisEval2BC7#1 = RMul(coeff2978,prod2B63);
          real basisEval2BC8#1 = RMul(coeff296A,prod2B65);
          real basisEval2BC9#1 = RMul(one28FD,prod2B6B);
          real basisEval2BCA#1 = RMul(coeff296A,prod2B6D);
          real basisEval2BCB#1 = RMul(coeff28FC,prod2B71);
          real basisEval2BCC#1 = RMul(one28FD,prod2B73);
          real basisEval2BCD#1 = RMul(coeff2967,prod2B75);
          real basisEval2BCE#1 = RMul(one28FD,prod2B79);
          real basisEval2BCF#1 = RMul(coeff28FC,prod2B7B);
          real basisEval2BD0#1 = RMul(one28FD,prod2B7D);
          tensor[84] intermediateCons2BD1#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2964,basisEval2985,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2966,basisEval2AFF,basisEval2987,basisEval2969,basisEval2989,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval296D,basisEval2B12,basisEval2B15,basisEval298C,basisEval2970,basisEval2B1D,basisEval298D,basisEval2972,basisEval298F,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2975,basisEval2B2E,basisEval2B31,basisEval2B34,basisEval2992,basisEval297A,basisEval2B3C,basisEval2B3E,basisEval2995,basisEval297E,basisEval2B44,basisEval2997,basisEval2982,basisEval2999,basisEval2984,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2B52,basisEval2B55,basisEval2B58,basisEval2B5B,basisEval2B5E,basisEval2B62,basisEval2B64,basisEval2B66,basisEval2B68,basisEval2B6A,basisEval2B6C,basisEval2B6E,basisEval2B70,basisEval2B72,basisEval2B74,basisEval2B76,basisEval2B78,basisEval2B7A,basisEval2B7C,basisEval2B7E,basisEval2B82];
          tensor[84] intermediateCons2BD2#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval2964,basisEval2908,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval2966,basisEval2913,basisEval2968,basisEval28FB,basisEval2B87,basisEval2989,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval296D,basisEval2926,basisEval296E,basisEval296F,basisEval28FB,basisEval2B8C,basisEval2B1D,basisEval29B3,basisEval28FB,basisEval2B8E,basisEval29B4,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval2975,basisEval2942,basisEval2976,basisEval2977,basisEval2979,basisEval28FB,basisEval2B95,basisEval2B3C,basisEval2B96,basisEval29BA,basisEval28FB,basisEval2B98,basisEval2B99,basisEval2997,basisEval28FB,basisEval2B9A,basisEval29BC,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval2B52,basisEval2B9D,basisEval2B9E,basisEval2B9F,basisEval2BA0,basisEval2BA1,basisEval28FB,basisEval2BA2,basisEval2B66,basisEval2BA3,basisEval2BA4,basisEval2BA5,basisEval28FB,basisEval2BA6,basisEval2BA7,basisEval2B72,basisEval2BA8,basisEval28FB,basisEval2BA9,basisEval2BAA,basisEval2BAB,basisEval28FB,basisEval2BAC,basisEval2BAD,basisEval28FB,basisEval2BAE,basisEval28FB];
          tensor[84] intermediateCons2BD3#1 = <tensor[84]>[basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval2904,basisEval2985,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval2986,basisEval2913,basisEval2987,basisEval28FB,basisEval2969,basisEval2BB1,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval298A,basisEval298B,basisEval2929,basisEval298C,basisEval28FB,basisEval29B2,basisEval2B1D,basisEval2BB6,basisEval28FB,basisEval29A2,basisEval2BB8,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval2990,basisEval2991,basisEval2976,basisEval2948,basisEval2992,basisEval28FB,basisEval29B9,basisEval2BBD,basisEval2B3E,basisEval2BBE,basisEval28FB,basisEval297E,basisEval2B99,basisEval2BBF,basisEval28FB,basisEval29AB,basisEval2BC1,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval2BC2,basisEval2BC3,basisEval2BC4,basisEval2BC5,basisEval2BC6,basisEval2B62,basisEval28FB,basisEval2BC7,basisEval2BC8,basisEval2BA3,basisEval2B6A,basisEval2BC9,basisEval28FB,basisEval2BCA,basisEval2B70,basisEval2BCB,basisEval2BCC,basisEval28FB,basisEval2BCD,basisEval2BAA,basisEval2BCE,basisEval28FB,basisEval2BCF,basisEval2BD0,basisEval28FB,basisEval2BAE,basisEval28FB,basisEval28FB];
          real vdot2CC8#19 = VDot<84>(dofs27A4,intermediateCons2BD1);
          real vdot2CCA#19 = VDot<84>(dofs27A4,intermediateCons2BD2);
          real vdot2CCC#19 = VDot<84>(dofs27A4,intermediateCons2BD3);
          tensor[3] probe_l_62CC6#5 = <tensor[3]>[vdot2CC8,vdot2CCA,vdot2CCC];
          real op1_e3_l_82CD5#1 = VDot<3>(probe_l_62CC6,probe_l_62CC6);
          real op1_e3_l_92CD8#1 = Sqrt(op1_e3_l_82CD5);
          real op1_e3_l_102CDB#1 = RNeg(_t2AE2);
          real op1_e3_l_112CDE#1 = RAdd(fBias2417,op1_e3_l_92CD8);
          real _t2CE1#1 = RDiv(op1_e3_l_102CDB,op1_e3_l_112CDE);
          bool _t2CE4#1 = GT<real>(_t2CE1,fStrTh2413);
          if _t2CE4 then goto ASSIGN592C else goto ASSIGN5398
        ASSIGN592C:  preds = [COND2CE6]
          bool _t2CE9#1 = GTE<real>(one28FD,fMaskTh2415);
          if _t2CE9 then goto ASSIGN592D else goto ASSIGN5397
        ASSIGN592D:  preds = [COND2CEB]
          real vdot2CEE#15 = VDot<3>(tensor2AB8,probe_l_62CC6);
          real vdot2CF0#15 = VDot<3>(tensor2ABF,probe_l_62CC6);
          real vdot2CF2#15 = VDot<3>(tensor2AC6,probe_l_62CC6);
          real r2CFE#11 = RMul(basisEval28FB,one28FD);
          real r2CFF#25 = RMul(basisEval28FB,basisEval28FB);
          real r2D00#3 = RAdd(r2CFE,r2CFF);
          real r2D01#1 = RAdd(r2D00,r2CFF);
          real r2D02#12 = RAdd(r2D01,r2CFF);
          real r2D03#3 = RAdd(r2CFF,r2CFE);
          real r2D04#1 = RAdd(r2D03,r2CFF);
          real r2D05#12 = RAdd(r2D04,r2CFF);
          real r2D06#3 = RAdd(r2CFF,r2CFF);
          real r2D07#1 = RAdd(r2D06,r2CFE);
          real r2D08#12 = RAdd(r2D07,r2CFF);
          real r2D0A#15 = RMul(one28FD,basisEval28FB);
          real r2D0B#1 = RAdd(r2D00,r2D0A);
          real r2D0C#4 = RAdd(r2D0B,r2D0A);
          real r2D0D#1 = RAdd(r2D03,r2D0A);
          real r2D0E#4 = RAdd(r2D0D,r2D0A);
          real r2D10#1 = RAdd(r2D06,prod28FE);
          real r2D11#4 = RAdd(r2D10,r2D0A);
          real realLit2D13#2 = -0.1e1;
          real r2D14#15 = RMul(realLit2D13,basisEval28FB);
          real r2D15#1 = RAdd(r2CFE,r2D14);
          real r2D16#1 = RAdd(r2D15,r2CFF);
          real r2D17#4 = RAdd(r2D16,r2D0A);
          real r2D18#3 = RMul(realLit2D13,one28FD);
          real r2D19#1 = RAdd(r2CFF,r2D18);
          real r2D1A#1 = RAdd(r2D19,r2CFF);
          real r2D1B#4 = RAdd(r2D1A,r2D0A);
          real r2D1C#1 = RAdd(r2CFF,r2D14);
          real r2D1D#1 = RAdd(r2D1C,r2CFE);
          real r2D1E#4 = RAdd(r2D1D,r2D0A);
          real r2D21#1 = RAdd(r2D00,r2D14);
          real r2D22#4 = RAdd(r2D21,r2D14);
          real r2D23#1 = RAdd(r2D03,r2D14);
          real r2D24#4 = RAdd(r2D23,r2D14);
          real r2D25#1 = RAdd(r2D06,r2D18);
          real r2D26#4 = RAdd(r2D25,r2D14);
          real r2D28#1 = RAdd(prod28FE,r2CFF);
          real r2D29#1 = RAdd(r2D28,r2CFF);
          real r2D2A#4 = RAdd(r2D29,r2D0A);
          real r2D2B#1 = RAdd(r2D0A,r2CFE);
          real r2D2C#1 = RAdd(r2D2B,r2CFF);
          real r2D2D#4 = RAdd(r2D2C,r2D0A);
          real r2D2E#1 = RAdd(r2D0A,r2CFF);
          real r2D2F#1 = RAdd(r2D2E,r2CFE);
          real r2D30#4 = RAdd(r2D2F,r2D0A);
          real r2D33#1 = RAdd(r2CFE,r2D0A);
          real r2D34#1 = RAdd(r2D33,r2CFF);
          real r2D35#4 = RAdd(r2D34,r2D14);
          real r2D36#1 = RAdd(r2CFF,prod28FE);
          real r2D37#1 = RAdd(r2D36,r2CFF);
          real r2D38#4 = RAdd(r2D37,r2D14);
          real r2D39#1 = RAdd(r2CFF,r2D0A);
          real r2D3A#1 = RAdd(r2D39,r2CFE);
          real r2D3B#4 = RAdd(r2D3A,r2D14);
          real r2D3D#1 = RAdd(r2D18,r2CFF);
          real r2D3E#1 = RAdd(r2D3D,r2CFF);
          real r2D3F#4 = RAdd(r2D3E,r2D14);
          real r2D40#1 = RAdd(r2D14,r2CFE);
          real r2D41#1 = RAdd(r2D40,r2CFF);
          real r2D42#4 = RAdd(r2D41,r2D14);
          real r2D43#1 = RAdd(r2D14,r2CFF);
          real r2D44#1 = RAdd(r2D43,r2CFE);
          real r2D45#4 = RAdd(r2D44,r2D14);
          real r2D99#1 = RMul(vdot2CEE,r2D02);
          real r2D9C#1 = RMul(vdot2CF0,r2D0C);
          real r2D9F#1 = RMul(vdot2CF2,r2D17);
          real r2DA0#1 = RAdd(r2D99,r2D9C);
          real r2DA1#1 = RAdd(r2DA0,r2D9F);
          real r2DA3#1 = RMul(vdot2CEE,r2D05);
          real r2DA5#1 = RMul(vdot2CF0,r2D0E);
          real r2DA7#1 = RMul(vdot2CF2,r2D1B);
          real r2DA8#1 = RAdd(r2DA3,r2DA5);
          real r2DA9#1 = RAdd(r2DA8,r2DA7);
          real r2DAB#1 = RMul(vdot2CEE,r2D08);
          real r2DAD#1 = RMul(vdot2CF0,r2D11);
          real r2DAF#1 = RMul(vdot2CF2,r2D1E);
          real r2DB0#1 = RAdd(r2DAB,r2DAD);
          real r2DB1#1 = RAdd(r2DB0,r2DAF);
          real r2DB4#1 = RMul(vdot2CEE,r2D22);
          real r2DB6#1 = RMul(vdot2CF0,r2D02);
          real r2DB8#1 = RMul(vdot2CF2,r2D2A);
          real r2DB9#1 = RAdd(r2DB4,r2DB6);
          real r2DBA#1 = RAdd(r2DB9,r2DB8);
          real r2DBC#1 = RMul(vdot2CEE,r2D24);
          real r2DBE#1 = RMul(vdot2CF0,r2D05);
          real r2DC0#1 = RMul(vdot2CF2,r2D2D);
          real r2DC1#1 = RAdd(r2DBC,r2DBE);
          real r2DC2#1 = RAdd(r2DC1,r2DC0);
          real r2DC4#1 = RMul(vdot2CEE,r2D26);
          real r2DC6#1 = RMul(vdot2CF0,r2D08);
          real r2DC8#1 = RMul(vdot2CF2,r2D30);
          real r2DC9#1 = RAdd(r2DC4,r2DC6);
          real r2DCA#1 = RAdd(r2DC9,r2DC8);
          real r2DCD#1 = RMul(vdot2CEE,r2D35);
          real r2DCF#1 = RMul(vdot2CF0,r2D3F);
          real r2DD1#1 = RMul(vdot2CF2,r2D02);
          real r2DD2#1 = RAdd(r2DCD,r2DCF);
          real r2DD3#1 = RAdd(r2DD2,r2DD1);
          real r2DD5#1 = RMul(vdot2CEE,r2D38);
          real r2DD7#1 = RMul(vdot2CF0,r2D42);
          real r2DD9#1 = RMul(vdot2CF2,r2D05);
          real r2DDA#1 = RAdd(r2DD5,r2DD7);
          real r2DDB#1 = RAdd(r2DDA,r2DD9);
          real r2DDD#1 = RMul(vdot2CEE,r2D3B);
          real r2DDF#1 = RMul(vdot2CF0,r2D45);
          real r2DE1#1 = RMul(vdot2CF2,r2D08);
          real r2DE2#1 = RAdd(r2DDD,r2DDF);
          real r2DE3#1 = RAdd(r2DE2,r2DE1);
          real basisEval2E3E#3 = RMul(coeff2909,prod28FF);
          real coeff2E47#13 = 0.24e2;
          real basisEval2E4A#1 = RMul(coeff2E47,prod290B);
          real basisEval2E4E#4 = RMul(coeff2909,prod290F);
          real basisEval2E55#4 = RMul(coeff2909,prod2916);
          real basisEval2E57#2 = RMul(coeff2E47,prod2918);
          real basisEval2E59#2 = RMul(coeff2E47,prod291A);
          real coeff2E5A#9 = 0.60e2;
          real basisEval2E5D#1 = RMul(coeff2E5A,prod291E);
          real basisEval2E61#2 = RMul(coeff2909,prod2922);
          real basisEval2E6B#2 = RMul(coeff2909,prod292C);
          real basisEval2E6D#2 = RMul(coeff2E47,prod292E);
          real basisEval2E6F#3 = RMul(coeff2E47,prod2930);
          real basisEval2E71#2 = RMul(coeff2E47,prod2932);
          real basisEval2E73#1 = RMul(coeff2E5A,prod2934);
          real basisEval2E75#1 = RMul(coeff2E5A,prod2936);
          real coeff2E76#3 = 0.120e3;
          real basisEval2E79#1 = RMul(coeff2E76,prod293A);
          real basisEval2E7E#2 = RMul(coeff296A,prod2907);
          real basisEval2E84#2 = RMul(coeff291C,prod291A);
          real basisEval2E87#1 = RMul(coeff296A,prod2925);
          real basisEval2E89#2 = RMul(coeff297C,prod292C);
          real basisEval2E8B#6 = RMul(coeff291C,prod2930);
          real coeff2E8C#6 = 0.18e2;
          real basisEval2E8D#1 = RMul(coeff2E8C,prod2932);
          real basisEval2E8F#2 = RMul(coeff2E47,prod2936);
          real basisEval2E92#2 = RMul(coeff296A,prod2903);
          real basisEval2E95#2 = RMul(coeff291C,prod2918);
          real basisEval2E97#2 = RMul(coeff297C,prod2922);
          real basisEval2E98#1 = RMul(coeff296A,prod2928);
          real basisEval2E9A#1 = RMul(coeff2E8C,prod292E);
          real basisEval2E9C#2 = RMul(coeff2E47,prod2934);
          real basisEval2E9E#2 = RMul(coeff296A,prod290B);
          real basisEval2EA1#4 = RMul(coeff2909,prod291E);
          real basisEval2EA4#1 = RMul(coeff296A,prod292E);
          real basisEval2EA6#1 = RMul(coeff2E8C,prod2936);
          real basisEval2EA7#2 = RMul(coeff297C,prod293A);
          real basisEval2EB1#1 = RMul(coeff297C,prod2930);
          real basisEval2EB7#1 = RMul(coeff296A,prod2932);
          real basisEval2EB8#1 = RMul(coeff2E8C,prod2934);
          real basisEval2EB9#1 = RMul(coeff2E47,prod2907);
          real basisEval2EBA#2 = RMul(coeff2E47,prod2912);
          real basisEval2EBB#1 = RMul(coeff2E5A,prod2916);
          real basisEval2EBC#2 = RMul(coeff2E47,prod2925);
          real basisEval2EBD#1 = RMul(coeff2E5A,prod2928);
          real basisEval2EBE#1 = RMul(coeff2E76,prod292C);
          real basisEval2EBF#1 = RMul(coeff2E5A,prod2932);
          real basisEval2EC0#2 = RMul(coeff2909,prod293A);
          real basisEval2EC1#2 = RMul(coeff291C,prod2912);
          real basisEval2EC3#1 = RMul(coeff2E8C,prod2925);
          real basisEval2EC4#2 = RMul(coeff2E47,prod2928);
          real basisEval2EC6#1 = RMul(coeff296A,prod2934);
          real basisEval2EC8#1 = RMul(coeff2E8C,prod2928);
          real basisEval2ECA#1 = RMul(coeff296A,prod2936);
          real basisEval2ECB#1 = RMul(coeff2E47,prod2903);
          real basisEval2ECC#1 = RMul(coeff2E5A,prod290F);
          real basisEval2ECD#1 = RMul(coeff2E76,prod2922);
          real basisEval2ECE#1 = RMul(coeff2E5A,prod2925);
          real basisEval2ECF#1 = RMul(coeff2E5A,prod292E);
          tensor[84] intermediateCons2ED0#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E3E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval299A,basisEval2E4A,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval299B,basisEval2E55,basisEval2E57,basisEval2E59,basisEval2E5D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E61,basisEval299E,basisEval29B1,basisEval2E6B,basisEval2E6D,basisEval2E6F,basisEval2E71,basisEval2E73,basisEval2E75,basisEval2E79];
          tensor[84] intermediateCons2ED1#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2E7E,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval29AF,basisEval2E55,basisEval28FB,basisEval2919,basisEval2E84,basisEval28FB,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval2E87,basisEval29B1,basisEval2E89,basisEval28FB,basisEval292F,basisEval2E8B,basisEval2E8D,basisEval28FB,basisEval2935,basisEval2E8F,basisEval28FB,basisEval293B,basisEval28FB];
          tensor[84] intermediateCons2ED2#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E92,basisEval2908,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval29AF,basisEval2917,basisEval28FB,basisEval2E95,basisEval291B,basisEval28FB,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E97,basisEval299E,basisEval2E98,basisEval292D,basisEval28FB,basisEval2E9A,basisEval2E8B,basisEval2933,basisEval28FB,basisEval2E9C,basisEval2937,basisEval28FB,basisEval293B,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED3#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval299A,basisEval28FB,basisEval28FB,basisEval2E9E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval299B,basisEval299C,basisEval28FB,basisEval28FB,basisEval2988,basisEval2E84,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval299E,basisEval299F,basisEval29A0,basisEval28FB,basisEval28FB,basisEval2EA4,basisEval2E8B,basisEval2E71,basisEval28FB,basisEval28FB,basisEval298E,basisEval2EA6,basisEval28FB,basisEval28FB,basisEval2EA7,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED4#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval29AF,basisEval2968,basisEval28FB,basisEval28FB,basisEval2988,basisEval296B,basisEval28FB,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval299E,basisEval29B1,basisEval296F,basisEval28FB,basisEval28FB,basisEval292F,basisEval2EB1,basisEval2933,basisEval28FB,basisEval28FB,basisEval298E,basisEval2973,basisEval28FB,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED5#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2908,basisEval28FB,basisEval28FB,basisEval2E9E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval299B,basisEval2917,basisEval28FB,basisEval28FB,basisEval2E95,basisEval296B,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval29C1,basisEval29B1,basisEval292D,basisEval28FB,basisEval28FB,basisEval2E6D,basisEval2E8B,basisEval2EB7,basisEval28FB,basisEval28FB,basisEval2EB8,basisEval2973,basisEval28FB,basisEval28FB,basisEval2EA7,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED6#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E3E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2EB9,basisEval28FB,basisEval28FB,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval2EBA,basisEval2EBB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2919,basisEval2E59,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E61,basisEval2EBC,basisEval2EBD,basisEval2EBE,basisEval28FB,basisEval28FB,basisEval28FB,basisEval292F,basisEval2E6F,basisEval2EBF,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298E,basisEval2E8F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EC0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED7#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E92,basisEval299A,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval2EC1,basisEval299C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2988,basisEval291B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E97,basisEval2EC3,basisEval2EC4,basisEval29A0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval292F,basisEval2E8B,basisEval29A1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EC6,basisEval2973,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED8#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2E7E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval2EC1,basisEval2E55,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2919,basisEval296B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval2EBC,basisEval2EC8,basisEval2E89,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C2,basisEval2E8B,basisEval2933,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298E,basisEval2ECA,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED9#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E3E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECB,basisEval299A,basisEval28FB,basisEval28FB,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECC,basisEval2EBA,basisEval2E55,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E57,basisEval291B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECD,basisEval2ECE,basisEval2EC4,basisEval2E6B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECF,basisEval2E6F,basisEval2933,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E9C,basisEval2973,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EC0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          real vdot2F95#1 = VDot<84>(dofs27A4,intermediateCons2ED0);
          real vdot2F97#2 = VDot<84>(dofs27A4,intermediateCons2ED1);
          real vdot2F99#2 = VDot<84>(dofs27A4,intermediateCons2ED2);
          real vdot2F9E#2 = VDot<84>(dofs27A4,intermediateCons2ED3);
          real vdot2FA0#3 = VDot<84>(dofs27A4,intermediateCons2ED4);
          real vdot2FA7#2 = VDot<84>(dofs27A4,intermediateCons2ED5);
          real vdot2FB4#1 = VDot<84>(dofs27A4,intermediateCons2ED6);
          real vdot2FB6#2 = VDot<84>(dofs27A4,intermediateCons2ED7);
          real vdot2FBD#2 = VDot<84>(dofs27A4,intermediateCons2ED8);
          real vdot2FD3#1 = VDot<84>(dofs27A4,intermediateCons2ED9);
          real r301D#1 = RMul(vdot2CC8,vdot2F95);
          real r3020#1 = RMul(vdot2CCA,vdot2F97);
          real r3023#1 = RMul(vdot2CCC,vdot2F99);
          real r3024#1 = RAdd(r301D,r3020);
          real r3025#1 = RAdd(r3024,r3023);
          real r3027#1 = RMul(vdot2CC8,vdot2F97);
          real r3029#1 = RMul(vdot2CCA,vdot2F9E);
          real r302B#1 = RMul(vdot2CCC,vdot2FA0);
          real r302C#1 = RAdd(r3027,r3029);
          real r302D#2 = RAdd(r302C,r302B);
          real r302F#1 = RMul(vdot2CC8,vdot2F99);
          real r3031#1 = RMul(vdot2CCA,vdot2FA0);
          real r3033#1 = RMul(vdot2CCC,vdot2FA7);
          real r3034#1 = RAdd(r302F,r3031);
          real r3035#2 = RAdd(r3034,r3033);
          tensor[3] tensor3036#1 = <tensor[3]>[r3025,r302D,r3035];
          real r3040#1 = RMul(vdot2CC8,vdot2F9E);
          real r3042#1 = RMul(vdot2CCA,vdot2FB4);
          real r3044#1 = RMul(vdot2CCC,vdot2FB6);
          real r3045#1 = RAdd(r3040,r3042);
          real r3046#1 = RAdd(r3045,r3044);
          real r3048#1 = RMul(vdot2CC8,vdot2FA0);
          real r304A#1 = RMul(vdot2CCA,vdot2FB6);
          real r304C#1 = RMul(vdot2CCC,vdot2FBD);
          real r304D#1 = RAdd(r3048,r304A);
          real r304E#2 = RAdd(r304D,r304C);
          tensor[3] tensor304F#1 = <tensor[3]>[r302D,r3046,r304E];
          real r3061#1 = RMul(vdot2CC8,vdot2FA7);
          real r3063#1 = RMul(vdot2CCA,vdot2FBD);
          real r3065#1 = RMul(vdot2CCC,vdot2FD3);
          real r3066#1 = RAdd(r3061,r3063);
          real r3067#1 = RAdd(r3066,r3065);
          tensor[3] tensor3068#1 = <tensor[3]>[r3035,r304E,r3067];
          real r30BB#1 = RMul(vdot2AB3,vdot2AB3);
          real r30BE#2 = RMul(vdot2AB5,vdot2AB5);
          real r30C1#2 = RMul(vdot2AB7,vdot2AB7);
          real r30C2#1 = RAdd(r30BB,r30BE);
          real r30C3#1 = RAdd(r30C2,r30C1);
          real r30C4#1 = RMul(vdot2AB3,vdot2AB5);
          real r30C6#1 = RMul(vdot2AB5,vdot2ABC);
          real r30C8#1 = RMul(vdot2AB7,vdot2ABE);
          real r30C9#1 = RAdd(r30C4,r30C6);
          real r30CA#1 = RAdd(r30C9,r30C8);
          real r30CB#1 = RMul(vdot2AB3,vdot2AB7);
          real r30CD#1 = RMul(vdot2AB5,vdot2ABE);
          real r30CF#1 = RMul(vdot2AB7,vdot2AC5);
          real r30D0#1 = RAdd(r30CB,r30CD);
          real r30D1#1 = RAdd(r30D0,r30CF);
          tensor[3] tensor30D2#1 = <tensor[3]>[r30C3,r30CA,r30D1];
          real r30D3#1 = RMul(vdot2AB5,vdot2AB3);
          real r30D4#1 = RMul(vdot2ABC,vdot2AB5);
          real r30D5#1 = RMul(vdot2ABE,vdot2AB7);
          real r30D6#1 = RAdd(r30D3,r30D4);
          real r30D7#1 = RAdd(r30D6,r30D5);
          real r30D9#1 = RMul(vdot2ABC,vdot2ABC);
          real r30DA#2 = RMul(vdot2ABE,vdot2ABE);
          real r30DB#1 = RAdd(r30BE,r30D9);
          real r30DC#1 = RAdd(r30DB,r30DA);
          real r30DD#1 = RMul(vdot2AB5,vdot2AB7);
          real r30DE#1 = RMul(vdot2ABC,vdot2ABE);
          real r30DF#1 = RMul(vdot2ABE,vdot2AC5);
          real r30E0#1 = RAdd(r30DD,r30DE);
          real r30E1#1 = RAdd(r30E0,r30DF);
          tensor[3] tensor30E2#1 = <tensor[3]>[r30D7,r30DC,r30E1];
          real r30E3#1 = RMul(vdot2AB7,vdot2AB3);
          real r30E4#1 = RMul(vdot2ABE,vdot2AB5);
          real r30E5#1 = RMul(vdot2AC5,vdot2AB7);
          real r30E6#1 = RAdd(r30E3,r30E4);
          real r30E7#1 = RAdd(r30E6,r30E5);
          real r30E8#1 = RMul(vdot2AB7,vdot2AB5);
          real r30E9#1 = RMul(vdot2ABE,vdot2ABC);
          real r30EA#1 = RMul(vdot2AC5,vdot2ABE);
          real r30EB#1 = RAdd(r30E8,r30E9);
          real r30EC#1 = RAdd(r30EB,r30EA);
          real r30EF#1 = RMul(vdot2AC5,vdot2AC5);
          real r30F0#1 = RAdd(r30C1,r30DA);
          real r30F1#1 = RAdd(r30F0,r30EF);
          tensor[3] tensor30F2#1 = <tensor[3]>[r30E7,r30EC,r30F1];
          tensor[3] v3131#3 = VAdd<3>(tensor3036,tensor30D2);
          tensor[3] v3134#3 = VAdd<3>(tensor304F,tensor30E2);
          tensor[3] v3137#3 = VAdd<3>(tensor3068,tensor30F2);
          real r3146#1 = RMul(vdot2CEE,vdot2AB3);
          real r3148#2 = RMul(vdot2CEE,vdot2AB5);
          real r314A#2 = RMul(vdot2CEE,vdot2AB7);
          tensor[3] tensor314B#1 = <tensor[3]>[r3146,r3148,r314A];
          real r314F#1 = RMul(vdot2CEE,vdot2ABC);
          real r3151#2 = RMul(vdot2CEE,vdot2ABE);
          tensor[3] tensor3152#1 = <tensor[3]>[r3148,r314F,r3151];
          real r3158#1 = RMul(vdot2CEE,vdot2AC5);
          tensor[3] tensor3159#1 = <tensor[3]>[r314A,r3151,r3158];
          real r315C#1 = RMul(vdot2CF0,vdot2AB3);
          real r315D#2 = RMul(vdot2CF0,vdot2AB5);
          real r315E#2 = RMul(vdot2CF0,vdot2AB7);
          tensor[3] tensor315F#1 = <tensor[3]>[r315C,r315D,r315E];
          real r3161#1 = RMul(vdot2CF0,vdot2ABC);
          real r3162#2 = RMul(vdot2CF0,vdot2ABE);
          tensor[3] tensor3163#1 = <tensor[3]>[r315D,r3161,r3162];
          real r3166#1 = RMul(vdot2CF0,vdot2AC5);
          tensor[3] tensor3167#1 = <tensor[3]>[r315E,r3162,r3166];
          real r316A#1 = RMul(vdot2CF2,vdot2AB3);
          real r316B#2 = RMul(vdot2CF2,vdot2AB5);
          real r316C#2 = RMul(vdot2CF2,vdot2AB7);
          tensor[3] tensor316D#1 = <tensor[3]>[r316A,r316B,r316C];
          real r316F#1 = RMul(vdot2CF2,vdot2ABC);
          real r3170#2 = RMul(vdot2CF2,vdot2ABE);
          tensor[3] tensor3171#1 = <tensor[3]>[r316B,r316F,r3170];
          real r3174#1 = RMul(vdot2CF2,vdot2AC5);
          tensor[3] tensor3175#1 = <tensor[3]>[r316C,r3170,r3174];
          real r31AE#3 = VIndex<3,0>(v3131);
          real r31AF#1 = RMul(vdot2CC8,r31AE);
          real r31B0#3 = VIndex<3,1>(v3131);
          real r31B1#1 = RMul(vdot2CC8,r31B0);
          real r31B2#3 = VIndex<3,2>(v3131);
          real r31B3#1 = RMul(vdot2CC8,r31B2);
          tensor[3] tensor31B4#1 = <tensor[3]>[r31AF,r31B1,r31B3];
          real r31B5#3 = VIndex<3,0>(v3134);
          real r31B6#1 = RMul(vdot2CC8,r31B5);
          real r31B7#3 = VIndex<3,1>(v3134);
          real r31B8#1 = RMul(vdot2CC8,r31B7);
          real r31B9#3 = VIndex<3,2>(v3134);
          real r31BA#1 = RMul(vdot2CC8,r31B9);
          tensor[3] tensor31BB#1 = <tensor[3]>[r31B6,r31B8,r31BA];
          real r31BC#3 = VIndex<3,0>(v3137);
          real r31BD#1 = RMul(vdot2CC8,r31BC);
          real r31BE#3 = VIndex<3,1>(v3137);
          real r31BF#1 = RMul(vdot2CC8,r31BE);
          real r31C0#3 = VIndex<3,2>(v3137);
          real r31C1#1 = RMul(vdot2CC8,r31C0);
          tensor[3] tensor31C2#1 = <tensor[3]>[r31BD,r31BF,r31C1];
          real r31C5#1 = RMul(vdot2CCA,r31AE);
          real r31C6#1 = RMul(vdot2CCA,r31B0);
          real r31C7#1 = RMul(vdot2CCA,r31B2);
          tensor[3] tensor31C8#1 = <tensor[3]>[r31C5,r31C6,r31C7];
          real r31C9#1 = RMul(vdot2CCA,r31B5);
          real r31CA#1 = RMul(vdot2CCA,r31B7);
          real r31CB#1 = RMul(vdot2CCA,r31B9);
          tensor[3] tensor31CC#1 = <tensor[3]>[r31C9,r31CA,r31CB];
          real r31CD#1 = RMul(vdot2CCA,r31BC);
          real r31CE#1 = RMul(vdot2CCA,r31BE);
          real r31CF#1 = RMul(vdot2CCA,r31C0);
          tensor[3] tensor31D0#1 = <tensor[3]>[r31CD,r31CE,r31CF];
          real r31D3#1 = RMul(vdot2CCC,r31AE);
          real r31D4#1 = RMul(vdot2CCC,r31B0);
          real r31D5#1 = RMul(vdot2CCC,r31B2);
          tensor[3] tensor31D6#1 = <tensor[3]>[r31D3,r31D4,r31D5];
          real r31D7#1 = RMul(vdot2CCC,r31B5);
          real r31D8#1 = RMul(vdot2CCC,r31B7);
          real r31D9#1 = RMul(vdot2CCC,r31B9);
          tensor[3] tensor31DA#1 = <tensor[3]>[r31D7,r31D8,r31D9];
          real r31DB#1 = RMul(vdot2CCC,r31BC);
          real r31DC#1 = RMul(vdot2CCC,r31BE);
          real r31DD#1 = RMul(vdot2CCC,r31C0);
          tensor[3] tensor31DE#1 = <tensor[3]>[r31DB,r31DC,r31DD];
          tensor[3] v3218#3 = VAdd<3>(tensor314B,tensor31B4);
          tensor[3] v321B#3 = VAdd<3>(tensor3152,tensor31C8);
          tensor[3] v321E#3 = VAdd<3>(tensor3159,tensor31D6);
          tensor[3] v3222#3 = VAdd<3>(tensor315F,tensor31BB);
          tensor[3] v3225#3 = VAdd<3>(tensor3163,tensor31CC);
          tensor[3] v3228#3 = VAdd<3>(tensor3167,tensor31DA);
          tensor[3] v322C#3 = VAdd<3>(tensor316D,tensor31C2);
          tensor[3] v322F#3 = VAdd<3>(tensor3171,tensor31D0);
          tensor[3] v3232#3 = VAdd<3>(tensor3175,tensor31DE);
          real r3257#1 = RMul(vdot2CC8,r2DA1);
          real r325A#1 = RMul(vdot2CCA,r2DBA);
          real r325D#1 = RMul(vdot2CCC,r2DD3);
          real r325E#1 = RAdd(r3257,r325A);
          real r325F#1 = RAdd(r325E,r325D);
          real r3261#1 = RMul(vdot2CC8,r2DA9);
          real r3263#1 = RMul(vdot2CCA,r2DC2);
          real r3265#1 = RMul(vdot2CCC,r2DDB);
          real r3266#1 = RAdd(r3261,r3263);
          real r3267#1 = RAdd(r3266,r3265);
          real r3269#1 = RMul(vdot2CC8,r2DB1);
          real r326B#1 = RMul(vdot2CCA,r2DCA);
          real r326D#1 = RMul(vdot2CCC,r2DE3);
          real r326E#1 = RAdd(r3269,r326B);
          real r326F#1 = RAdd(r326E,r326D);
          tensor[3] op1_e3_l_413254#3 = <tensor[3]>[r325F,r3267,r326F];
          real r328E#3 = VIndex<3,0>(v3218);
          real r3290#1 = RMul(r328E,r2D02);
          real r3291#3 = VIndex<3,0>(v3222);
          real r3293#1 = RMul(r3291,r2D0C);
          real r3294#3 = VIndex<3,0>(v322C);
          real r3296#1 = RMul(r3294,r2D17);
          real r3297#3 = VIndex<3,0>(v321B);
          real r3299#1 = RMul(r3297,r2D22);
          real r329A#3 = VIndex<3,0>(v3225);
          real r329C#1 = RMul(r329A,r2D02);
          real r329D#3 = VIndex<3,0>(v322F);
          real r329F#1 = RMul(r329D,r2D2A);
          real r32A0#3 = VIndex<3,0>(v321E);
          real r32A2#1 = RMul(r32A0,r2D35);
          real r32A3#3 = VIndex<3,0>(v3228);
          real r32A5#1 = RMul(r32A3,r2D3F);
          real r32A6#3 = VIndex<3,0>(v3232);
          real r32A8#1 = RMul(r32A6,r2D02);
          real r32A9#1 = RAdd(r3290,r3293);
          real r32AA#1 = RAdd(r32A9,r3296);
          real r32AB#1 = RAdd(r32AA,r3299);
          real r32AC#1 = RAdd(r32AB,r329C);
          real r32AD#1 = RAdd(r32AC,r329F);
          real r32AE#1 = RAdd(r32AD,r32A2);
          real r32AF#1 = RAdd(r32AE,r32A5);
          real r32B0#1 = RAdd(r32AF,r32A8);
          real r32B2#1 = RMul(r328E,r2D05);
          real r32B4#1 = RMul(r3291,r2D0E);
          real r32B6#1 = RMul(r3294,r2D1B);
          real r32B8#1 = RMul(r3297,r2D24);
          real r32BA#1 = RMul(r329A,r2D05);
          real r32BC#1 = RMul(r329D,r2D2D);
          real r32BE#1 = RMul(r32A0,r2D38);
          real r32C0#1 = RMul(r32A3,r2D42);
          real r32C2#1 = RMul(r32A6,r2D05);
          real r32C3#1 = RAdd(r32B2,r32B4);
          real r32C4#1 = RAdd(r32C3,r32B6);
          real r32C5#1 = RAdd(r32C4,r32B8);
          real r32C6#1 = RAdd(r32C5,r32BA);
          real r32C7#1 = RAdd(r32C6,r32BC);
          real r32C8#1 = RAdd(r32C7,r32BE);
          real r32C9#1 = RAdd(r32C8,r32C0);
          real r32CA#1 = RAdd(r32C9,r32C2);
          real r32CC#1 = RMul(r328E,r2D08);
          real r32CE#1 = RMul(r3291,r2D11);
          real r32D0#1 = RMul(r3294,r2D1E);
          real r32D2#1 = RMul(r3297,r2D26);
          real r32D4#1 = RMul(r329A,r2D08);
          real r32D6#1 = RMul(r329D,r2D30);
          real r32D8#1 = RMul(r32A0,r2D3B);
          real r32DA#1 = RMul(r32A3,r2D45);
          real r32DC#1 = RMul(r32A6,r2D08);
          real r32DD#1 = RAdd(r32CC,r32CE);
          real r32DE#1 = RAdd(r32DD,r32D0);
          real r32DF#1 = RAdd(r32DE,r32D2);
          real r32E0#1 = RAdd(r32DF,r32D4);
          real r32E1#1 = RAdd(r32E0,r32D6);
          real r32E2#1 = RAdd(r32E1,r32D8);
          real r32E3#1 = RAdd(r32E2,r32DA);
          real r32E4#1 = RAdd(r32E3,r32DC);
          tensor[3] tensor32E5#1 = <tensor[3]>[r32B0,r32CA,r32E4];
          real r32E6#3 = VIndex<3,1>(v3218);
          real r32E7#1 = RMul(r32E6,r2D02);
          real r32E8#3 = VIndex<3,1>(v3222);
          real r32E9#1 = RMul(r32E8,r2D0C);
          real r32EA#3 = VIndex<3,1>(v322C);
          real r32EB#1 = RMul(r32EA,r2D17);
          real r32EC#3 = VIndex<3,1>(v321B);
          real r32ED#1 = RMul(r32EC,r2D22);
          real r32EE#3 = VIndex<3,1>(v3225);
          real r32EF#1 = RMul(r32EE,r2D02);
          real r32F0#3 = VIndex<3,1>(v322F);
          real r32F1#1 = RMul(r32F0,r2D2A);
          real r32F2#3 = VIndex<3,1>(v321E);
          real r32F3#1 = RMul(r32F2,r2D35);
          real r32F4#3 = VIndex<3,1>(v3228);
          real r32F5#1 = RMul(r32F4,r2D3F);
          real r32F6#3 = VIndex<3,1>(v3232);
          real r32F7#1 = RMul(r32F6,r2D02);
          real r32F8#1 = RAdd(r32E7,r32E9);
          real r32F9#1 = RAdd(r32F8,r32EB);
          real r32FA#1 = RAdd(r32F9,r32ED);
          real r32FB#1 = RAdd(r32FA,r32EF);
          real r32FC#1 = RAdd(r32FB,r32F1);
          real r32FD#1 = RAdd(r32FC,r32F3);
          real r32FE#1 = RAdd(r32FD,r32F5);
          real r32FF#1 = RAdd(r32FE,r32F7);
          real r3300#1 = RMul(r32E6,r2D05);
          real r3301#1 = RMul(r32E8,r2D0E);
          real r3302#1 = RMul(r32EA,r2D1B);
          real r3303#1 = RMul(r32EC,r2D24);
          real r3304#1 = RMul(r32EE,r2D05);
          real r3305#1 = RMul(r32F0,r2D2D);
          real r3306#1 = RMul(r32F2,r2D38);
          real r3307#1 = RMul(r32F4,r2D42);
          real r3308#1 = RMul(r32F6,r2D05);
          real r3309#1 = RAdd(r3300,r3301);
          real r330A#1 = RAdd(r3309,r3302);
          real r330B#1 = RAdd(r330A,r3303);
          real r330C#1 = RAdd(r330B,r3304);
          real r330D#1 = RAdd(r330C,r3305);
          real r330E#1 = RAdd(r330D,r3306);
          real r330F#1 = RAdd(r330E,r3307);
          real r3310#1 = RAdd(r330F,r3308);
          real r3311#1 = RMul(r32E6,r2D08);
          real r3312#1 = RMul(r32E8,r2D11);
          real r3313#1 = RMul(r32EA,r2D1E);
          real r3314#1 = RMul(r32EC,r2D26);
          real r3315#1 = RMul(r32EE,r2D08);
          real r3316#1 = RMul(r32F0,r2D30);
          real r3317#1 = RMul(r32F2,r2D3B);
          real r3318#1 = RMul(r32F4,r2D45);
          real r3319#1 = RMul(r32F6,r2D08);
          real r331A#1 = RAdd(r3311,r3312);
          real r331B#1 = RAdd(r331A,r3313);
          real r331C#1 = RAdd(r331B,r3314);
          real r331D#1 = RAdd(r331C,r3315);
          real r331E#1 = RAdd(r331D,r3316);
          real r331F#1 = RAdd(r331E,r3317);
          real r3320#1 = RAdd(r331F,r3318);
          real r3321#1 = RAdd(r3320,r3319);
          tensor[3] tensor3322#1 = <tensor[3]>[r32FF,r3310,r3321];
          real r3323#3 = VIndex<3,2>(v3218);
          real r3324#1 = RMul(r3323,r2D02);
          real r3325#3 = VIndex<3,2>(v3222);
          real r3326#1 = RMul(r3325,r2D0C);
          real r3327#3 = VIndex<3,2>(v322C);
          real r3328#1 = RMul(r3327,r2D17);
          real r3329#3 = VIndex<3,2>(v321B);
          real r332A#1 = RMul(r3329,r2D22);
          real r332B#3 = VIndex<3,2>(v3225);
          real r332C#1 = RMul(r332B,r2D02);
          real r332D#3 = VIndex<3,2>(v322F);
          real r332E#1 = RMul(r332D,r2D2A);
          real r332F#3 = VIndex<3,2>(v321E);
          real r3330#1 = RMul(r332F,r2D35);
          real r3331#3 = VIndex<3,2>(v3228);
          real r3332#1 = RMul(r3331,r2D3F);
          real r3333#3 = VIndex<3,2>(v3232);
          real r3334#1 = RMul(r3333,r2D02);
          real r3335#1 = RAdd(r3324,r3326);
          real r3336#1 = RAdd(r3335,r3328);
          real r3337#1 = RAdd(r3336,r332A);
          real r3338#1 = RAdd(r3337,r332C);
          real r3339#1 = RAdd(r3338,r332E);
          real r333A#1 = RAdd(r3339,r3330);
          real r333B#1 = RAdd(r333A,r3332);
          real r333C#1 = RAdd(r333B,r3334);
          real r333D#1 = RMul(r3323,r2D05);
          real r333E#1 = RMul(r3325,r2D0E);
          real r333F#1 = RMul(r3327,r2D1B);
          real r3340#1 = RMul(r3329,r2D24);
          real r3341#1 = RMul(r332B,r2D05);
          real r3342#1 = RMul(r332D,r2D2D);
          real r3343#1 = RMul(r332F,r2D38);
          real r3344#1 = RMul(r3331,r2D42);
          real r3345#1 = RMul(r3333,r2D05);
          real r3346#1 = RAdd(r333D,r333E);
          real r3347#1 = RAdd(r3346,r333F);
          real r3348#1 = RAdd(r3347,r3340);
          real r3349#1 = RAdd(r3348,r3341);
          real r334A#1 = RAdd(r3349,r3342);
          real r334B#1 = RAdd(r334A,r3343);
          real r334C#1 = RAdd(r334B,r3344);
          real r334D#1 = RAdd(r334C,r3345);
          real r334E#1 = RMul(r3323,r2D08);
          real r334F#1 = RMul(r3325,r2D11);
          real r3350#1 = RMul(r3327,r2D1E);
          real r3351#1 = RMul(r3329,r2D26);
          real r3352#1 = RMul(r332B,r2D08);
          real r3353#1 = RMul(r332D,r2D30);
          real r3354#1 = RMul(r332F,r2D3B);
          real r3355#1 = RMul(r3331,r2D45);
          real r3356#1 = RMul(r3333,r2D08);
          real r3357#1 = RAdd(r334E,r334F);
          real r3358#1 = RAdd(r3357,r3350);
          real r3359#1 = RAdd(r3358,r3351);
          real r335A#1 = RAdd(r3359,r3352);
          real r335B#1 = RAdd(r335A,r3353);
          real r335C#1 = RAdd(r335B,r3354);
          real r335D#1 = RAdd(r335C,r3355);
          real r335E#1 = RAdd(r335D,r3356);
          tensor[3] tensor335F#1 = <tensor[3]>[r333C,r334D,r335E];
          real vdot3436#1 = VDot<3>(op1_e3_l_413254,tensor32E5);
          real vdot3438#1 = VDot<3>(op1_e3_l_413254,tensor3322);
          real vdot343A#1 = VDot<3>(op1_e3_l_413254,tensor335F);
          tensor[3] op1_e3_l_673434#2 = <tensor[3]>[vdot3436,vdot3438,vdot343A];
          tensor[3] op1_e3_l_1193443#2 = VAdd<3>(op1_e3_l_673434,op1_e3_l_673434);
          real op1_e3_l_1213446#1 = VDot<3>(op1_e3_l_1193443,op1_e3_l_1193443);
          real _t3449#1 = Sqrt(op1_e3_l_1213446);
          real _t344C#1 = 0.1e-7;
          bool _t344E#1 = GT<real>(_t3449,_t344C);
          if _t344E then goto ASSIGN3452 else goto ASSIGN5396
        ASSIGN3452:  preds = [COND3450]
          bool _t3451#1 = true;
          goto JOIN3455
        JOIN3455:  preds = [ASSIGN3452,ASSIGN5396]
          bool _t3453#1 = phi(_t3451,_t3454)
          goto JOIN3458
        JOIN3458:  preds = [JOIN3455,ASSIGN5397]
          bool _t3456#1 = phi(_t3453,_t3457)
          goto JOIN345B
        JOIN345B:  preds = [JOIN3458,ASSIGN5398]
          bool _t3459#1 = phi(_t3456,_t345A)
          goto JOIN345E
        JOIN345E:  preds = [JOIN345B,ASSIGN5399]
          bool _t345C#1 = phi(_t3459,_t345D)
          bool _t345F#1 = BNot(_t345C);
          if _t345F then goto SAVE3462 else goto JOIN3464
        SAVE3462:  preds = [COND3461]
          self.rayN = rayN243D;
          active
          goto JOIN3464
        JOIN3464:  preds = [*ACTIVE3463,COND3461]
          real _t3465#1030 = 0.e0;
          real _t3467#225 = 0.1e1;
          real _t3469#1 = 0.15e1;
          int ilit346C#1 = 84;
          int mulRes346D#84 = IMul(_t2401,ilit346C);
          int idx3470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,mulRes346D);
          int ilit3471#91 = 1;
          int addRes3472#1 = IAdd(mulRes346D,ilit3471);
          int idx3473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3472);
          int ilit3474#5 = 2;
          int addRes3475#1 = IAdd(mulRes346D,ilit3474);
          int idx3476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3475);
          int ilit3477#5 = 3;
          int addRes3478#1 = IAdd(mulRes346D,ilit3477);
          int idx3479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3478);
          int ilit347A#1 = 4;
          int addRes347B#1 = IAdd(mulRes346D,ilit347A);
          int idx347C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347B);
          int ilit347D#1 = 5;
          int addRes347E#1 = IAdd(mulRes346D,ilit347D);
          int idx347F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347E);
          int ilit3480#1 = 6;
          int addRes3481#1 = IAdd(mulRes346D,ilit3480);
          int idx3482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3481);
          int ilit3483#1 = 7;
          int addRes3484#1 = IAdd(mulRes346D,ilit3483);
          int idx3485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3484);
          int ilit3486#1 = 8;
          int addRes3487#1 = IAdd(mulRes346D,ilit3486);
          int idx3488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3487);
          int ilit3489#1 = 9;
          int addRes348A#1 = IAdd(mulRes346D,ilit3489);
          int idx348B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348A);
          int ilit348C#1 = 10;
          int addRes348D#1 = IAdd(mulRes346D,ilit348C);
          int idx348E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348D);
          int ilit348F#1 = 11;
          int addRes3490#1 = IAdd(mulRes346D,ilit348F);
          int idx3491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3490);
          int ilit3492#1 = 12;
          int addRes3493#1 = IAdd(mulRes346D,ilit3492);
          int idx3494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3493);
          int ilit3495#1 = 13;
          int addRes3496#1 = IAdd(mulRes346D,ilit3495);
          int idx3497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3496);
          int ilit3498#1 = 14;
          int addRes3499#1 = IAdd(mulRes346D,ilit3498);
          int idx349A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3499);
          int ilit349B#1 = 15;
          int addRes349C#1 = IAdd(mulRes346D,ilit349B);
          int idx349D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349C);
          int ilit349E#1 = 16;
          int addRes349F#1 = IAdd(mulRes346D,ilit349E);
          int idx34A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349F);
          int ilit34A1#1 = 17;
          int addRes34A2#1 = IAdd(mulRes346D,ilit34A1);
          int idx34A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A2);
          int ilit34A4#1 = 18;
          int addRes34A5#1 = IAdd(mulRes346D,ilit34A4);
          int idx34A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A5);
          int ilit34A7#1 = 19;
          int addRes34A8#1 = IAdd(mulRes346D,ilit34A7);
          int idx34A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A8);
          int ilit34AA#1 = 20;
          int addRes34AB#1 = IAdd(mulRes346D,ilit34AA);
          int idx34AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AB);
          int ilit34AD#1 = 21;
          int addRes34AE#1 = IAdd(mulRes346D,ilit34AD);
          int idx34AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AE);
          int ilit34B0#1 = 22;
          int addRes34B1#1 = IAdd(mulRes346D,ilit34B0);
          int idx34B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B1);
          int ilit34B3#1 = 23;
          int addRes34B4#1 = IAdd(mulRes346D,ilit34B3);
          int idx34B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B4);
          int ilit34B6#1 = 24;
          int addRes34B7#1 = IAdd(mulRes346D,ilit34B6);
          int idx34B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B7);
          int ilit34B9#1 = 25;
          int addRes34BA#1 = IAdd(mulRes346D,ilit34B9);
          int idx34BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BA);
          int ilit34BC#1 = 26;
          int addRes34BD#1 = IAdd(mulRes346D,ilit34BC);
          int idx34BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BD);
          int ilit34BF#1 = 27;
          int addRes34C0#1 = IAdd(mulRes346D,ilit34BF);
          int idx34C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C0);
          int ilit34C2#1 = 28;
          int addRes34C3#1 = IAdd(mulRes346D,ilit34C2);
          int idx34C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C3);
          int ilit34C5#1 = 29;
          int addRes34C6#1 = IAdd(mulRes346D,ilit34C5);
          int idx34C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C6);
          int ilit34C8#1 = 30;
          int addRes34C9#1 = IAdd(mulRes346D,ilit34C8);
          int idx34CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C9);
          int ilit34CB#1 = 31;
          int addRes34CC#1 = IAdd(mulRes346D,ilit34CB);
          int idx34CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CC);
          int ilit34CE#1 = 32;
          int addRes34CF#1 = IAdd(mulRes346D,ilit34CE);
          int idx34D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CF);
          int ilit34D1#1 = 33;
          int addRes34D2#1 = IAdd(mulRes346D,ilit34D1);
          int idx34D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D2);
          int ilit34D4#1 = 34;
          int addRes34D5#1 = IAdd(mulRes346D,ilit34D4);
          int idx34D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D5);
          int ilit34D7#1 = 35;
          int addRes34D8#1 = IAdd(mulRes346D,ilit34D7);
          int idx34D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D8);
          int ilit34DA#1 = 36;
          int addRes34DB#1 = IAdd(mulRes346D,ilit34DA);
          int idx34DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DB);
          int ilit34DD#1 = 37;
          int addRes34DE#1 = IAdd(mulRes346D,ilit34DD);
          int idx34DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DE);
          int ilit34E0#1 = 38;
          int addRes34E1#1 = IAdd(mulRes346D,ilit34E0);
          int idx34E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E1);
          int ilit34E3#1 = 39;
          int addRes34E4#1 = IAdd(mulRes346D,ilit34E3);
          int idx34E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E4);
          int ilit34E6#1 = 40;
          int addRes34E7#1 = IAdd(mulRes346D,ilit34E6);
          int idx34E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E7);
          int ilit34E9#1 = 41;
          int addRes34EA#1 = IAdd(mulRes346D,ilit34E9);
          int idx34EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34EA);
          int ilit34EC#1 = 42;
          int addRes34ED#1 = IAdd(mulRes346D,ilit34EC);
          int idx34EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34ED);
          int ilit34EF#1 = 43;
          int addRes34F0#1 = IAdd(mulRes346D,ilit34EF);
          int idx34F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F0);
          int ilit34F2#1 = 44;
          int addRes34F3#1 = IAdd(mulRes346D,ilit34F2);
          int idx34F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F3);
          int ilit34F5#1 = 45;
          int addRes34F6#1 = IAdd(mulRes346D,ilit34F5);
          int idx34F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F6);
          int ilit34F8#1 = 46;
          int addRes34F9#1 = IAdd(mulRes346D,ilit34F8);
          int idx34FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F9);
          int ilit34FB#1 = 47;
          int addRes34FC#1 = IAdd(mulRes346D,ilit34FB);
          int idx34FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FC);
          int ilit34FE#1 = 48;
          int addRes34FF#1 = IAdd(mulRes346D,ilit34FE);
          int idx3500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FF);
          int ilit3501#1 = 49;
          int addRes3502#1 = IAdd(mulRes346D,ilit3501);
          int idx3503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3502);
          int ilit3504#1 = 50;
          int addRes3505#1 = IAdd(mulRes346D,ilit3504);
          int idx3506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3505);
          int ilit3507#1 = 51;
          int addRes3508#1 = IAdd(mulRes346D,ilit3507);
          int idx3509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3508);
          int ilit350A#1 = 52;
          int addRes350B#1 = IAdd(mulRes346D,ilit350A);
          int idx350C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350B);
          int ilit350D#1 = 53;
          int addRes350E#1 = IAdd(mulRes346D,ilit350D);
          int idx350F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350E);
          int ilit3510#1 = 54;
          int addRes3511#1 = IAdd(mulRes346D,ilit3510);
          int idx3512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3511);
          int ilit3513#1 = 55;
          int addRes3514#1 = IAdd(mulRes346D,ilit3513);
          int idx3515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3514);
          int ilit3516#1 = 56;
          int addRes3517#1 = IAdd(mulRes346D,ilit3516);
          int idx3518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3517);
          int ilit3519#1 = 57;
          int addRes351A#1 = IAdd(mulRes346D,ilit3519);
          int idx351B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351A);
          int ilit351C#1 = 58;
          int addRes351D#1 = IAdd(mulRes346D,ilit351C);
          int idx351E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351D);
          int ilit351F#1 = 59;
          int addRes3520#1 = IAdd(mulRes346D,ilit351F);
          int idx3521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3520);
          int ilit3522#1 = 60;
          int addRes3523#1 = IAdd(mulRes346D,ilit3522);
          int idx3524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3523);
          int ilit3525#1 = 61;
          int addRes3526#1 = IAdd(mulRes346D,ilit3525);
          int idx3527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3526);
          int ilit3528#1 = 62;
          int addRes3529#1 = IAdd(mulRes346D,ilit3528);
          int idx352A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3529);
          int ilit352B#1 = 63;
          int addRes352C#1 = IAdd(mulRes346D,ilit352B);
          int idx352D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352C);
          int ilit352E#1 = 64;
          int addRes352F#1 = IAdd(mulRes346D,ilit352E);
          int idx3530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352F);
          int ilit3531#1 = 65;
          int addRes3532#1 = IAdd(mulRes346D,ilit3531);
          int idx3533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3532);
          int ilit3534#1 = 66;
          int addRes3535#1 = IAdd(mulRes346D,ilit3534);
          int idx3536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3535);
          int ilit3537#1 = 67;
          int addRes3538#1 = IAdd(mulRes346D,ilit3537);
          int idx3539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3538);
          int ilit353A#1 = 68;
          int addRes353B#1 = IAdd(mulRes346D,ilit353A);
          int idx353C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353B);
          int ilit353D#1 = 69;
          int addRes353E#1 = IAdd(mulRes346D,ilit353D);
          int idx353F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353E);
          int ilit3540#1 = 70;
          int addRes3541#1 = IAdd(mulRes346D,ilit3540);
          int idx3542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3541);
          int ilit3543#1 = 71;
          int addRes3544#1 = IAdd(mulRes346D,ilit3543);
          int idx3545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3544);
          int ilit3546#1 = 72;
          int addRes3547#1 = IAdd(mulRes346D,ilit3546);
          int idx3548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3547);
          int ilit3549#1 = 73;
          int addRes354A#1 = IAdd(mulRes346D,ilit3549);
          int idx354B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354A);
          int ilit354C#1 = 74;
          int addRes354D#1 = IAdd(mulRes346D,ilit354C);
          int idx354E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354D);
          int ilit354F#1 = 75;
          int addRes3550#1 = IAdd(mulRes346D,ilit354F);
          int idx3551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3550);
          int ilit3552#1 = 76;
          int addRes3553#1 = IAdd(mulRes346D,ilit3552);
          int idx3554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3553);
          int ilit3555#1 = 77;
          int addRes3556#1 = IAdd(mulRes346D,ilit3555);
          int idx3557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3556);
          int ilit3558#1 = 78;
          int addRes3559#1 = IAdd(mulRes346D,ilit3558);
          int idx355A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3559);
          int ilit355B#1 = 79;
          int addRes355C#1 = IAdd(mulRes346D,ilit355B);
          int idx355D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355C);
          int ilit355E#1 = 80;
          int addRes355F#1 = IAdd(mulRes346D,ilit355E);
          int idx3560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355F);
          int ilit3561#1 = 81;
          int addRes3562#1 = IAdd(mulRes346D,ilit3561);
          int idx3563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3562);
          int ilit3564#1 = 82;
          int addRes3565#1 = IAdd(mulRes346D,ilit3564);
          int idx3566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3565);
          int ilit3567#1 = 83;
          int addRes3568#1 = IAdd(mulRes346D,ilit3567);
          int idx3569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3568);
          int mulRes366F#1 = IMul(ilit3471,idx3470);
          int mulRes3671#1 = IMul(ilit3471,idx3473);
          int mulRes3674#1 = IMul(ilit3471,idx3476);
          int mulRes3677#1 = IMul(ilit3471,idx3479);
          int mulRes367A#1 = IMul(ilit3471,idx347C);
          int mulRes367D#1 = IMul(ilit3471,idx347F);
          int mulRes3680#1 = IMul(ilit3471,idx3482);
          int mulRes3683#1 = IMul(ilit3471,idx3485);
          int mulRes3686#1 = IMul(ilit3471,idx3488);
          int mulRes3689#1 = IMul(ilit3471,idx348B);
          int mulRes368C#1 = IMul(ilit3471,idx348E);
          int mulRes368F#1 = IMul(ilit3471,idx3491);
          int mulRes3692#1 = IMul(ilit3471,idx3494);
          int mulRes3695#1 = IMul(ilit3471,idx3497);
          int mulRes3698#1 = IMul(ilit3471,idx349A);
          int mulRes369B#1 = IMul(ilit3471,idx349D);
          int mulRes369E#1 = IMul(ilit3471,idx34A0);
          int mulRes36A1#1 = IMul(ilit3471,idx34A3);
          int mulRes36A4#1 = IMul(ilit3471,idx34A6);
          int mulRes36A7#1 = IMul(ilit3471,idx34A9);
          int mulRes36AA#1 = IMul(ilit3471,idx34AC);
          int mulRes36AD#1 = IMul(ilit3471,idx34AF);
          int mulRes36B0#1 = IMul(ilit3471,idx34B2);
          int mulRes36B3#1 = IMul(ilit3471,idx34B5);
          int mulRes36B6#1 = IMul(ilit3471,idx34B8);
          int mulRes36B9#1 = IMul(ilit3471,idx34BB);
          int mulRes36BC#1 = IMul(ilit3471,idx34BE);
          int mulRes36BF#1 = IMul(ilit3471,idx34C1);
          int mulRes36C2#1 = IMul(ilit3471,idx34C4);
          int mulRes36C5#1 = IMul(ilit3471,idx34C7);
          int mulRes36C8#1 = IMul(ilit3471,idx34CA);
          int mulRes36CB#1 = IMul(ilit3471,idx34CD);
          int mulRes36CE#1 = IMul(ilit3471,idx34D0);
          int mulRes36D1#1 = IMul(ilit3471,idx34D3);
          int mulRes36D4#1 = IMul(ilit3471,idx34D6);
          int mulRes36D7#1 = IMul(ilit3471,idx34D9);
          int mulRes36DA#1 = IMul(ilit3471,idx34DC);
          int mulRes36DD#1 = IMul(ilit3471,idx34DF);
          int mulRes36E0#1 = IMul(ilit3471,idx34E2);
          int mulRes36E3#1 = IMul(ilit3471,idx34E5);
          int mulRes36E6#1 = IMul(ilit3471,idx34E8);
          int mulRes36E9#1 = IMul(ilit3471,idx34EB);
          int mulRes36EC#1 = IMul(ilit3471,idx34EE);
          int mulRes36EF#1 = IMul(ilit3471,idx34F1);
          int mulRes36F2#1 = IMul(ilit3471,idx34F4);
          int mulRes36F5#1 = IMul(ilit3471,idx34F7);
          int mulRes36F8#1 = IMul(ilit3471,idx34FA);
          int mulRes36FB#1 = IMul(ilit3471,idx34FD);
          int mulRes36FE#1 = IMul(ilit3471,idx3500);
          int mulRes3701#1 = IMul(ilit3471,idx3503);
          int mulRes3704#1 = IMul(ilit3471,idx3506);
          int mulRes3707#1 = IMul(ilit3471,idx3509);
          int mulRes370A#1 = IMul(ilit3471,idx350C);
          int mulRes370D#1 = IMul(ilit3471,idx350F);
          int mulRes3710#1 = IMul(ilit3471,idx3512);
          int mulRes3713#1 = IMul(ilit3471,idx3515);
          int mulRes3716#1 = IMul(ilit3471,idx3518);
          int mulRes3719#1 = IMul(ilit3471,idx351B);
          int mulRes371C#1 = IMul(ilit3471,idx351E);
          int mulRes371F#1 = IMul(ilit3471,idx3521);
          int mulRes3722#1 = IMul(ilit3471,idx3524);
          int mulRes3725#1 = IMul(ilit3471,idx3527);
          int mulRes3728#1 = IMul(ilit3471,idx352A);
          int mulRes372B#1 = IMul(ilit3471,idx352D);
          int mulRes372E#1 = IMul(ilit3471,idx3530);
          int mulRes3731#1 = IMul(ilit3471,idx3533);
          int mulRes3734#1 = IMul(ilit3471,idx3536);
          int mulRes3737#1 = IMul(ilit3471,idx3539);
          int mulRes373A#1 = IMul(ilit3471,idx353C);
          int mulRes373D#1 = IMul(ilit3471,idx353F);
          int mulRes3740#1 = IMul(ilit3471,idx3542);
          int mulRes3743#1 = IMul(ilit3471,idx3545);
          int mulRes3746#1 = IMul(ilit3471,idx3548);
          int mulRes3749#1 = IMul(ilit3471,idx354B);
          int mulRes374C#1 = IMul(ilit3471,idx354E);
          int mulRes374F#1 = IMul(ilit3471,idx3551);
          int mulRes3752#1 = IMul(ilit3471,idx3554);
          int mulRes3755#1 = IMul(ilit3471,idx3557);
          int mulRes3758#1 = IMul(ilit3471,idx355A);
          int mulRes375B#1 = IMul(ilit3471,idx355D);
          int mulRes375E#1 = IMul(ilit3471,idx3560);
          int mulRes3761#1 = IMul(ilit3471,idx3563);
          int mulRes3764#1 = IMul(ilit3471,idx3566);
          int mulRes3767#1 = IMul(ilit3471,idx3569);
          real dof3768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes366F);
          real dof3769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3671);
          real dof376A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3674);
          real dof376B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3677);
          real dof376C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367A);
          real dof376D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367D);
          real dof376E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3680);
          real dof376F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3683);
          real dof3770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3686);
          real dof3771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3689);
          real dof3772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368C);
          real dof3773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368F);
          real dof3774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3692);
          real dof3775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3695);
          real dof3776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3698);
          real dof3777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369B);
          real dof3778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369E);
          real dof3779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A1);
          real dof377A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A4);
          real dof377B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A7);
          real dof377C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AA);
          real dof377D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AD);
          real dof377E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B0);
          real dof377F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B3);
          real dof3780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B6);
          real dof3781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B9);
          real dof3782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BC);
          real dof3783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BF);
          real dof3784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C2);
          real dof3785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C5);
          real dof3786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C8);
          real dof3787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CB);
          real dof3788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CE);
          real dof3789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D1);
          real dof378A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D4);
          real dof378B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D7);
          real dof378C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DA);
          real dof378D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DD);
          real dof378E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E0);
          real dof378F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E3);
          real dof3790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E6);
          real dof3791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E9);
          real dof3792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EC);
          real dof3793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EF);
          real dof3794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F2);
          real dof3795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F5);
          real dof3796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F8);
          real dof3797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FB);
          real dof3798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FE);
          real dof3799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3701);
          real dof379A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3704);
          real dof379B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3707);
          real dof379C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370A);
          real dof379D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370D);
          real dof379E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3710);
          real dof379F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3713);
          real dof37A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3716);
          real dof37A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3719);
          real dof37A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371C);
          real dof37A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371F);
          real dof37A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3722);
          real dof37A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3725);
          real dof37A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3728);
          real dof37A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372B);
          real dof37A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372E);
          real dof37A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3731);
          real dof37AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3734);
          real dof37AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3737);
          real dof37AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373A);
          real dof37AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373D);
          real dof37AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3740);
          real dof37AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3743);
          real dof37B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3746);
          real dof37B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3749);
          real dof37B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374C);
          real dof37B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374F);
          real dof37B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3752);
          real dof37B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3755);
          real dof37B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3758);
          real dof37B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375B);
          real dof37B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375E);
          real dof37B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3761);
          real dof37BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3764);
          real dof37BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3767);
          tensor[84] dofs37BC#20 = <tensor[84]>[dof3768,dof3769,dof376A,dof376B,dof376C,dof376D,dof376E,dof376F,dof3770,dof3771,dof3772,dof3773,dof3774,dof3775,dof3776,dof3777,dof3778,dof3779,dof377A,dof377B,dof377C,dof377D,dof377E,dof377F,dof3780,dof3781,dof3782,dof3783,dof3784,dof3785,dof3786,dof3787,dof3788,dof3789,dof378A,dof378B,dof378C,dof378D,dof378E,dof378F,dof3790,dof3791,dof3792,dof3793,dof3794,dof3795,dof3796,dof3797,dof3798,dof3799,dof379A,dof379B,dof379C,dof379D,dof379E,dof379F,dof37A0,dof37A1,dof37A2,dof37A3,dof37A4,dof37A5,dof37A6,dof37A7,dof37A8,dof37A9,dof37AA,dof37AB,dof37AC,dof37AD,dof37AE,dof37AF,dof37B0,dof37B1,dof37B2,dof37B3,dof37B4,dof37B5,dof37B6,dof37B7,dof37B8,dof37B9,dof37BA,dof37BB];
          real varAcc3910#20 = VIndex<3,0>(pos2449);
          real varAcc3911#10 = VIndex<3,1>(pos2449);
          real varAcc3912#10 = VIndex<3,2>(pos2449);
          real prod3915#15 = RMul(_t3467,_t3467);
          real prod3916#3 = RMul(_t3467,prod3915);
          real basisEval3917#8 = RMul(_t3467,prod3916);
          real prod3919#5 = RMul(_t3467,varAcc3912);
          real prod391A#5 = RMul(_t3467,prod3919);
          real basisEval391B#3 = RMul(_t3467,prod391A);
          real prod391D#5 = RMul(varAcc3911,_t3467);
          real prod391E#5 = RMul(_t3467,prod391D);
          real basisEval391F#3 = RMul(_t3467,prod391E);
          real coeff3920#47 = 0.2e1;
          real prod3922#5 = RMul(varAcc3910,prod3915);
          real basisEval3923#8 = RMul(coeff3920,prod3922);
          real prod23924#5 = RMul(varAcc3912,varAcc3912);
          real prod3925#4 = RMul(_t3467,prod23924);
          real prod3926#6 = RMul(_t3467,prod3925);
          real basisEval3927#3 = RMul(_t3467,prod3926);
          real prod3928#4 = RMul(varAcc3911,varAcc3912);
          real prod3929#6 = RMul(_t3467,prod3928);
          real basisEval392A#1 = RMul(_t3467,prod3929);
          real prod2392B#5 = RMul(varAcc3911,varAcc3911);
          real prod392C#4 = RMul(prod2392B,_t3467);
          real prod392D#6 = RMul(_t3467,prod392C);
          real basisEval392E#3 = RMul(_t3467,prod392D);
          real prod392F#6 = RMul(varAcc3910,prod3919);
          real basisEval3930#5 = RMul(coeff3920,prod392F);
          real prod3931#6 = RMul(varAcc3910,prod391D);
          real basisEval3932#5 = RMul(coeff3920,prod3931);
          real coeff3933#24 = 0.3e1;
          real prod23934#11 = RMul(varAcc3910,varAcc3910);
          real prod3935#6 = RMul(prod23934,prod3915);
          real basisEval3936#4 = RMul(coeff3933,prod3935);
          real prod33937#4 = RMul(prod23924,varAcc3912);
          real prod3938#3 = RMul(_t3467,prod33937);
          real prod3939#7 = RMul(_t3467,prod3938);
          real basisEval393A#3 = RMul(_t3467,prod3939);
          real prod393B#3 = RMul(varAcc3911,prod23924);
          real prod393C#9 = RMul(_t3467,prod393B);
          real basisEval393D#1 = RMul(_t3467,prod393C);
          real prod393E#3 = RMul(prod2392B,varAcc3912);
          real prod393F#9 = RMul(_t3467,prod393E);
          real basisEval3940#1 = RMul(_t3467,prod393F);
          real prod33941#4 = RMul(prod2392B,varAcc3911);
          real prod3942#3 = RMul(prod33941,_t3467);
          real prod3943#7 = RMul(_t3467,prod3942);
          real basisEval3944#3 = RMul(_t3467,prod3943);
          real prod3945#9 = RMul(varAcc3910,prod3925);
          real basisEval3946#3 = RMul(coeff3920,prod3945);
          real prod3947#6 = RMul(varAcc3910,prod3928);
          real basisEval3948#3 = RMul(coeff3920,prod3947);
          real prod3949#9 = RMul(varAcc3910,prod392C);
          real basisEval394A#3 = RMul(coeff3920,prod3949);
          real prod394B#9 = RMul(prod23934,prod3919);
          real basisEval394C#2 = RMul(coeff3933,prod394B);
          real prod394D#9 = RMul(prod23934,prod391D);
          real basisEval394E#2 = RMul(coeff3933,prod394D);
          real coeff394F#34 = 0.4e1;
          real prod33950#7 = RMul(prod23934,varAcc3910);
          real prod3951#7 = RMul(prod33950,prod3915);
          real basisEval3952#4 = RMul(coeff394F,prod3951);
          real prod43953#3 = RMul(prod33937,varAcc3912);
          real prod3954#2 = RMul(_t3467,prod43953);
          real prod3955#4 = RMul(_t3467,prod3954);
          real basisEval3956#3 = RMul(_t3467,prod3955);
          real prod3957#2 = RMul(varAcc3911,prod33937);
          real prod3958#6 = RMul(_t3467,prod3957);
          real basisEval3959#1 = RMul(_t3467,prod3958);
          real prod395A#2 = RMul(prod2392B,prod23924);
          real prod395B#5 = RMul(_t3467,prod395A);
          real basisEval395C#1 = RMul(_t3467,prod395B);
          real prod395D#2 = RMul(prod33941,varAcc3912);
          real prod395E#6 = RMul(_t3467,prod395D);
          real basisEval395F#1 = RMul(_t3467,prod395E);
          real prod43960#3 = RMul(prod33941,varAcc3911);
          real prod3961#2 = RMul(prod43960,_t3467);
          real prod3962#4 = RMul(_t3467,prod3961);
          real basisEval3963#3 = RMul(_t3467,prod3962);
          real prod3964#6 = RMul(varAcc3910,prod3938);
          real basisEval3965#3 = RMul(coeff3920,prod3964);
          real prod3966#5 = RMul(varAcc3910,prod393B);
          real basisEval3967#2 = RMul(coeff3920,prod3966);
          real prod3968#5 = RMul(varAcc3910,prod393E);
          real basisEval3969#2 = RMul(coeff3920,prod3968);
          real prod396A#6 = RMul(varAcc3910,prod3942);
          real basisEval396B#3 = RMul(coeff3920,prod396A);
          real prod396C#5 = RMul(prod23934,prod3925);
          real basisEval396D#4 = RMul(coeff3933,prod396C);
          real prod396E#5 = RMul(prod23934,prod3928);
          real basisEval396F#1 = RMul(coeff3933,prod396E);
          real prod3970#5 = RMul(prod23934,prod392C);
          real basisEval3971#4 = RMul(coeff3933,prod3970);
          real prod3972#6 = RMul(prod33950,prod3919);
          real basisEval3973#2 = RMul(coeff394F,prod3972);
          real prod3974#6 = RMul(prod33950,prod391D);
          real basisEval3975#2 = RMul(coeff394F,prod3974);
          real coeff3976#9 = 0.5e1;
          real prod43977#4 = RMul(prod33950,varAcc3910);
          real prod3978#4 = RMul(prod43977,prod3915);
          real basisEval3979#3 = RMul(coeff3976,prod3978);
          real prod5397A#1 = RMul(prod43953,varAcc3912);
          real prod397B#1 = RMul(_t3467,prod5397A);
          real prod397C#2 = RMul(_t3467,prod397B);
          real basisEval397D#2 = RMul(_t3467,prod397C);
          real prod397E#1 = RMul(varAcc3911,prod43953);
          real prod397F#3 = RMul(_t3467,prod397E);
          real basisEval3980#1 = RMul(_t3467,prod397F);
          real prod3981#1 = RMul(prod2392B,prod33937);
          real prod3982#3 = RMul(_t3467,prod3981);
          real basisEval3983#1 = RMul(_t3467,prod3982);
          real prod3984#1 = RMul(prod33941,prod23924);
          real prod3985#3 = RMul(_t3467,prod3984);
          real basisEval3986#1 = RMul(_t3467,prod3985);
          real prod3987#1 = RMul(prod43960,varAcc3912);
          real prod3988#3 = RMul(_t3467,prod3987);
          real basisEval3989#1 = RMul(_t3467,prod3988);
          real prod5398A#1 = RMul(prod43960,varAcc3911);
          real prod398B#1 = RMul(prod5398A,_t3467);
          real prod398C#2 = RMul(_t3467,prod398B);
          real basisEval398D#2 = RMul(_t3467,prod398C);
          real prod398E#3 = RMul(varAcc3910,prod3954);
          real basisEval398F#1 = RMul(coeff3920,prod398E);
          real prod3990#2 = RMul(varAcc3910,prod3957);
          real basisEval3991#2 = RMul(coeff3920,prod3990);
          real prod3992#2 = RMul(varAcc3910,prod395A);
          real basisEval3993#1 = RMul(coeff3920,prod3992);
          real prod3994#2 = RMul(varAcc3910,prod395D);
          real basisEval3995#2 = RMul(coeff3920,prod3994);
          real prod3996#3 = RMul(varAcc3910,prod3961);
          real basisEval3997#1 = RMul(coeff3920,prod3996);
          real prod3998#3 = RMul(prod23934,prod3938);
          real basisEval3999#1 = RMul(coeff3933,prod3998);
          real prod399A#2 = RMul(prod23934,prod393B);
          real basisEval399B#2 = RMul(coeff3933,prod399A);
          real prod399C#2 = RMul(prod23934,prod393E);
          real basisEval399D#2 = RMul(coeff3933,prod399C);
          real prod399E#3 = RMul(prod23934,prod3942);
          real basisEval399F#1 = RMul(coeff3933,prod399E);
          real prod39A0#3 = RMul(prod33950,prod3925);
          real basisEval39A1#1 = RMul(coeff394F,prod39A0);
          real prod39A2#2 = RMul(prod33950,prod3928);
          real basisEval39A3#1 = RMul(coeff394F,prod39A2);
          real prod39A4#3 = RMul(prod33950,prod392C);
          real basisEval39A5#1 = RMul(coeff394F,prod39A4);
          real prod39A6#3 = RMul(prod43977,prod3919);
          real basisEval39A7#1 = RMul(coeff3976,prod39A6);
          real prod39A8#3 = RMul(prod43977,prod391D);
          real basisEval39A9#1 = RMul(coeff3976,prod39A8);
          real coeff39AA#32 = 0.6e1;
          real prod539AB#1 = RMul(prod43977,varAcc3910);
          real prod39AC#2 = RMul(prod539AB,prod3915);
          real basisEval39AD#1 = RMul(coeff39AA,prod39AC);
          real basisEval39AE#8 = RMul(coeff3920,prod391E);
          real basisEval39AF#3 = RMul(_t3467,prod3922);
          real basisEval39B0#5 = RMul(coeff3920,prod3929);
          real basisEval39B1#4 = RMul(coeff3933,prod392D);
          real basisEval39B2#1 = RMul(_t3467,prod392F);
          real basisEval39B3#3 = RMul(_t3467,prod3935);
          real basisEval39B4#3 = RMul(coeff3920,prod393C);
          real basisEval39B5#2 = RMul(coeff3933,prod393F);
          real basisEval39B6#4 = RMul(coeff394F,prod3943);
          real basisEval39B7#1 = RMul(_t3467,prod3945);
          real basisEval39B8#2 = RMul(coeff3933,prod3949);
          real basisEval39B9#1 = RMul(_t3467,prod394B);
          real basisEval39BA#3 = RMul(coeff3920,prod394D);
          real basisEval39BB#3 = RMul(_t3467,prod3951);
          real basisEval39BC#3 = RMul(coeff3920,prod3958);
          real basisEval39BD#4 = RMul(coeff3933,prod395B);
          real basisEval39BE#2 = RMul(coeff394F,prod395E);
          real basisEval39BF#3 = RMul(coeff3976,prod3962);
          real basisEval39C0#1 = RMul(_t3467,prod3964);
          real basisEval39C1#1 = RMul(coeff3933,prod3968);
          real basisEval39C2#2 = RMul(coeff394F,prod396A);
          real basisEval39C3#1 = RMul(_t3467,prod396C);
          real basisEval39C4#2 = RMul(coeff3920,prod396E);
          real basisEval39C5#1 = RMul(_t3467,prod3972);
          real basisEval39C6#3 = RMul(coeff3920,prod3974);
          real basisEval39C7#3 = RMul(_t3467,prod3978);
          real basisEval39C8#1 = RMul(coeff3920,prod397F);
          real basisEval39C9#1 = RMul(coeff3933,prod3982);
          real basisEval39CA#1 = RMul(coeff394F,prod3985);
          real basisEval39CB#1 = RMul(coeff3976,prod3988);
          real basisEval39CC#1 = RMul(coeff39AA,prod398C);
          real basisEval39CD#1 = RMul(_t3467,prod398E);
          real basisEval39CE#2 = RMul(coeff3933,prod3992);
          real basisEval39CF#1 = RMul(coeff394F,prod3994);
          real basisEval39D0#1 = RMul(coeff3976,prod3996);
          real basisEval39D1#1 = RMul(_t3467,prod3998);
          real basisEval39D2#1 = RMul(coeff3920,prod399A);
          real basisEval39D3#1 = RMul(coeff394F,prod399E);
          real basisEval39D4#1 = RMul(_t3467,prod39A0);
          real basisEval39D5#2 = RMul(coeff3920,prod39A2);
          real basisEval39D6#1 = RMul(coeff3933,prod39A4);
          real basisEval39D7#1 = RMul(_t3467,prod39A6);
          real basisEval39D8#1 = RMul(coeff3920,prod39A8);
          real basisEval39D9#2 = RMul(_t3467,prod39AC);
          real basisEval39DA#8 = RMul(coeff3920,prod391A);
          real basisEval39DB#4 = RMul(coeff3933,prod3926);
          real basisEval39DC#1 = RMul(_t3467,prod3931);
          real basisEval39DD#4 = RMul(coeff394F,prod3939);
          real basisEval39DE#2 = RMul(coeff3933,prod393C);
          real basisEval39DF#3 = RMul(coeff3920,prod393F);
          real basisEval39E0#2 = RMul(coeff3933,prod3945);
          real basisEval39E1#1 = RMul(_t3467,prod3949);
          real basisEval39E2#3 = RMul(coeff3920,prod394B);
          real basisEval39E3#1 = RMul(_t3467,prod394D);
          real basisEval39E4#3 = RMul(coeff3976,prod3955);
          real basisEval39E5#2 = RMul(coeff394F,prod3958);
          real basisEval39E6#3 = RMul(coeff3920,prod395E);
          real basisEval39E7#2 = RMul(coeff394F,prod3964);
          real basisEval39E8#1 = RMul(coeff3933,prod3966);
          real basisEval39E9#1 = RMul(_t3467,prod396A);
          real basisEval39EA#1 = RMul(_t3467,prod3970);
          real basisEval39EB#3 = RMul(coeff3920,prod3972);
          real basisEval39EC#1 = RMul(_t3467,prod3974);
          real basisEval39ED#1 = RMul(coeff39AA,prod397C);
          real basisEval39EE#1 = RMul(coeff3976,prod397F);
          real basisEval39EF#1 = RMul(coeff394F,prod3982);
          real basisEval39F0#1 = RMul(coeff3933,prod3985);
          real basisEval39F1#1 = RMul(coeff3920,prod3988);
          real basisEval39F2#1 = RMul(coeff3976,prod398E);
          real basisEval39F3#1 = RMul(coeff394F,prod3990);
          real basisEval39F4#1 = RMul(_t3467,prod3996);
          real basisEval39F5#1 = RMul(coeff394F,prod3998);
          real basisEval39F6#1 = RMul(coeff3920,prod399C);
          real basisEval39F7#1 = RMul(_t3467,prod399E);
          real basisEval39F8#1 = RMul(coeff3933,prod39A0);
          real basisEval39F9#1 = RMul(_t3467,prod39A4);
          real basisEval39FA#1 = RMul(coeff3920,prod39A6);
          real basisEval39FB#1 = RMul(_t3467,prod39A8);
          tensor[84] intermediateCons39FC#1 = <tensor[84]>[_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,basisEval391B,basisEval391F,basisEval3923,_t3465,_t3465,_t3465,_t3465,basisEval3927,basisEval392A,basisEval392E,basisEval3930,basisEval3932,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval393A,basisEval393D,basisEval3940,basisEval3944,basisEval3946,basisEval3948,basisEval394A,basisEval394C,basisEval394E,basisEval3952,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3956,basisEval3959,basisEval395C,basisEval395F,basisEval3963,basisEval3965,basisEval3967,basisEval3969,basisEval396B,basisEval396D,basisEval396F,basisEval3971,basisEval3973,basisEval3975,basisEval3979,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval397D,basisEval3980,basisEval3983,basisEval3986,basisEval3989,basisEval398D,basisEval398F,basisEval3991,basisEval3993,basisEval3995,basisEval3997,basisEval3999,basisEval399B,basisEval399D,basisEval399F,basisEval39A1,basisEval39A3,basisEval39A5,basisEval39A7,basisEval39A9,basisEval39AD];
          tensor[84] intermediateCons39FD#1 = <tensor[84]>[_t3465,_t3465,basisEval3917,_t3465,_t3465,basisEval391B,basisEval39AE,_t3465,basisEval39AF,_t3465,_t3465,basisEval3927,basisEval39B0,basisEval39B1,_t3465,basisEval39B2,basisEval3932,_t3465,basisEval39B3,_t3465,_t3465,basisEval393A,basisEval39B4,basisEval39B5,basisEval39B6,_t3465,basisEval39B7,basisEval3948,basisEval39B8,_t3465,basisEval39B9,basisEval39BA,_t3465,basisEval39BB,_t3465,_t3465,basisEval3956,basisEval39BC,basisEval39BD,basisEval39BE,basisEval39BF,_t3465,basisEval39C0,basisEval3967,basisEval39C1,basisEval39C2,_t3465,basisEval39C3,basisEval39C4,basisEval3971,_t3465,basisEval39C5,basisEval39C6,_t3465,basisEval39C7,_t3465,_t3465,basisEval397D,basisEval39C8,basisEval39C9,basisEval39CA,basisEval39CB,basisEval39CC,_t3465,basisEval39CD,basisEval3991,basisEval39CE,basisEval39CF,basisEval39D0,_t3465,basisEval39D1,basisEval39D2,basisEval399D,basisEval39D3,_t3465,basisEval39D4,basisEval39D5,basisEval39D6,_t3465,basisEval39D7,basisEval39D8,_t3465,basisEval39D9,_t3465];
          tensor[84] intermediateCons39FE#1 = <tensor[84]>[_t3465,basisEval3917,_t3465,_t3465,basisEval39DA,basisEval391F,_t3465,basisEval39AF,_t3465,_t3465,basisEval39DB,basisEval39B0,basisEval392E,_t3465,basisEval3930,basisEval39DC,_t3465,basisEval39B3,_t3465,_t3465,basisEval39DD,basisEval39DE,basisEval39DF,basisEval3944,_t3465,basisEval39E0,basisEval3948,basisEval39E1,_t3465,basisEval39E2,basisEval39E3,_t3465,basisEval39BB,_t3465,_t3465,basisEval39E4,basisEval39E5,basisEval39BD,basisEval39E6,basisEval3963,_t3465,basisEval39E7,basisEval39E8,basisEval3969,basisEval39E9,_t3465,basisEval396D,basisEval39C4,basisEval39EA,_t3465,basisEval39EB,basisEval39EC,_t3465,basisEval39C7,_t3465,_t3465,basisEval39ED,basisEval39EE,basisEval39EF,basisEval39F0,basisEval39F1,basisEval398D,_t3465,basisEval39F2,basisEval39F3,basisEval39CE,basisEval3995,basisEval39F4,_t3465,basisEval39F5,basisEval399B,basisEval39F6,basisEval39F7,_t3465,basisEval39F8,basisEval39D5,basisEval39F9,_t3465,basisEval39FA,basisEval39FB,_t3465,basisEval39D9,_t3465,_t3465];
          real vdot3AF3#46 = VDot<84>(dofs37BC,intermediateCons39FC);
          real vdot3AF5#46 = VDot<84>(dofs37BC,intermediateCons39FD);
          real vdot3AF7#46 = VDot<84>(dofs37BC,intermediateCons39FE);
          tensor[3] probe_l_823AF1#3 = <tensor[3]>[vdot3AF3,vdot3AF5,vdot3AF7];
          real basisEval3B09#9 = RMul(coeff3920,prod3916);
          real basisEval3B15#5 = RMul(coeff39AA,prod3922);
          real basisEval3B19#4 = RMul(coeff3920,prod3926);
          real basisEval3B20#4 = RMul(coeff3920,prod392D);
          real basisEval3B22#5 = RMul(coeff39AA,prod392F);
          real basisEval3B24#5 = RMul(coeff39AA,prod3931);
          real coeff3B25#19 = 0.12e2;
          real basisEval3B28#3 = RMul(coeff3B25,prod3935);
          real basisEval3B2C#4 = RMul(coeff3920,prod3939);
          real basisEval3B36#4 = RMul(coeff3920,prod3943);
          real basisEval3B38#6 = RMul(coeff39AA,prod3945);
          real basisEval3B3A#3 = RMul(coeff39AA,prod3947);
          real basisEval3B3C#6 = RMul(coeff39AA,prod3949);
          real basisEval3B3E#2 = RMul(coeff3B25,prod394B);
          real basisEval3B40#2 = RMul(coeff3B25,prod394D);
          real coeff3B41#9 = 0.20e2;
          real basisEval3B44#3 = RMul(coeff3B41,prod3951);
          real basisEval3B48#2 = RMul(coeff3920,prod3955);
          real basisEval3B4E#1 = RMul(coeff3920,prod395B);
          real basisEval3B55#2 = RMul(coeff3920,prod3962);
          real basisEval3B57#1 = RMul(coeff39AA,prod3964);
          real basisEval3B59#4 = RMul(coeff39AA,prod3966);
          real basisEval3B5B#4 = RMul(coeff39AA,prod3968);
          real basisEval3B5D#1 = RMul(coeff39AA,prod396A);
          real basisEval3B5F#2 = RMul(coeff3B25,prod396C);
          real basisEval3B61#1 = RMul(coeff3B25,prod396E);
          real basisEval3B63#2 = RMul(coeff3B25,prod3970);
          real basisEval3B65#1 = RMul(coeff3B41,prod3972);
          real basisEval3B67#1 = RMul(coeff3B41,prod3974);
          real coeff3B68#3 = 0.30e2;
          real basisEval3B6B#1 = RMul(coeff3B68,prod3978);
          real basisEval3B74#4 = RMul(coeff394F,prod3931);
          real basisEval3B7A#3 = RMul(coeff394F,prod3947);
          real basisEval3B7C#6 = RMul(coeff39AA,prod394D);
          real basisEval3B84#1 = RMul(coeff394F,prod3966);
          real coeff3B85#10 = 0.8e1;
          real basisEval3B86#1 = RMul(coeff3B85,prod396A);
          real basisEval3B88#4 = RMul(coeff39AA,prod396E);
          real coeff3B89#3 = 0.9e1;
          real basisEval3B8A#1 = RMul(coeff3B89,prod3970);
          real basisEval3B8C#1 = RMul(coeff3B85,prod3974);
          real basisEval3B91#4 = RMul(coeff394F,prod392F);
          real basisEval3B97#6 = RMul(coeff39AA,prod394B);
          real basisEval3B9C#1 = RMul(coeff3B85,prod3964);
          real basisEval3B9D#1 = RMul(coeff394F,prod3968);
          real basisEval3B9F#1 = RMul(coeff3B89,prod396C);
          real basisEval3BA1#1 = RMul(coeff3B85,prod3972);
          real basisEval3BA3#5 = RMul(coeff39AA,prod391E);
          real basisEval3BA4#5 = RMul(coeff39AA,prod3929);
          real basisEval3BA5#3 = RMul(coeff3B25,prod392D);
          real basisEval3BA6#4 = RMul(coeff3920,prod3935);
          real basisEval3BA7#6 = RMul(coeff39AA,prod393C);
          real basisEval3BA8#2 = RMul(coeff3B25,prod393F);
          real basisEval3BA9#3 = RMul(coeff3B41,prod3943);
          real basisEval3BAA#2 = RMul(coeff3B25,prod3949);
          real basisEval3BAC#4 = RMul(coeff3920,prod3951);
          real basisEval3BAD#1 = RMul(coeff39AA,prod3958);
          real basisEval3BAE#2 = RMul(coeff3B25,prod395B);
          real basisEval3BAF#1 = RMul(coeff3B41,prod395E);
          real basisEval3BB0#1 = RMul(coeff3B68,prod3962);
          real basisEval3BB1#1 = RMul(coeff3B25,prod3968);
          real basisEval3BB2#1 = RMul(coeff3B41,prod396A);
          real basisEval3BB3#1 = RMul(coeff3920,prod396C);
          real basisEval3BB5#1 = RMul(coeff39AA,prod3974);
          real basisEval3BB6#2 = RMul(coeff3920,prod3978);
          real basisEval3BB8#4 = RMul(coeff394F,prod3929);
          real basisEval3BBA#6 = RMul(coeff39AA,prod393F);
          real basisEval3BBF#1 = RMul(coeff3B85,prod3958);
          real basisEval3BC0#1 = RMul(coeff3B89,prod395B);
          real basisEval3BC1#1 = RMul(coeff3B85,prod395E);
          real basisEval3BC4#1 = RMul(coeff394F,prod396E);
          real basisEval3BC7#5 = RMul(coeff39AA,prod391A);
          real basisEval3BC8#3 = RMul(coeff3B25,prod3926);
          real basisEval3BC9#3 = RMul(coeff3B41,prod3939);
          real basisEval3BCA#2 = RMul(coeff3B25,prod393C);
          real basisEval3BCB#2 = RMul(coeff3B25,prod3945);
          real basisEval3BCC#1 = RMul(coeff3B68,prod3955);
          real basisEval3BCD#1 = RMul(coeff3B41,prod3958);
          real basisEval3BCE#1 = RMul(coeff39AA,prod395E);
          real basisEval3BCF#1 = RMul(coeff3B41,prod3964);
          real basisEval3BD0#1 = RMul(coeff3B25,prod3966);
          real basisEval3BD1#1 = RMul(coeff3920,prod3970);
          real basisEval3BD2#1 = RMul(coeff39AA,prod3972);
          tensor[84] intermediateCons3BD3#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval39AE,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval39B0,basisEval3B20,basisEval3B22,basisEval3B24,basisEval3B28,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval39B4,basisEval39DF,basisEval3B36,basisEval3B38,basisEval3B3A,basisEval3B3C,basisEval3B3E,basisEval3B40,basisEval3B44,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B48,basisEval39BC,basisEval3B4E,basisEval39E6,basisEval3B55,basisEval3B57,basisEval3B59,basisEval3B5B,basisEval3B5D,basisEval3B5F,basisEval3B61,basisEval3B63,basisEval3B65,basisEval3B67,basisEval3B6B];
          tensor[84] intermediateCons3BD4#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval391B,basisEval39AE,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3927,basisEval39B0,basisEval39B1,_t3465,basisEval3930,basisEval3B74,_t3465,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval393A,basisEval39B4,basisEval39B5,basisEval39B6,_t3465,basisEval3946,basisEval3B7A,basisEval3B3C,_t3465,basisEval394C,basisEval3B7C,_t3465,basisEval3952,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3956,basisEval39BC,basisEval39BD,basisEval39BE,basisEval39BF,_t3465,basisEval3965,basisEval3B84,basisEval3B5B,basisEval3B86,_t3465,basisEval396D,basisEval3B88,basisEval3B8A,_t3465,basisEval3973,basisEval3B8C,_t3465,basisEval3979,_t3465];
          tensor[84] intermediateCons3BD5#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval391F,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DB,basisEval39B0,basisEval392E,_t3465,basisEval3B91,basisEval3932,_t3465,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DD,basisEval39DE,basisEval39DF,basisEval3944,_t3465,basisEval3B38,basisEval3B7A,basisEval394A,_t3465,basisEval3B97,basisEval394E,_t3465,basisEval3952,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39E4,basisEval39E5,basisEval39BD,basisEval39E6,basisEval3963,_t3465,basisEval3B9C,basisEval3B59,basisEval3B9D,basisEval396B,_t3465,basisEval3B9F,basisEval3B88,basisEval3971,_t3465,basisEval3BA1,basisEval3975,_t3465,basisEval3979,_t3465,_t3465];
          tensor[84] intermediateCons3BD6#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval3BA3,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval3BA4,basisEval3BA5,_t3465,_t3465,basisEval3930,basisEval3B24,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval3BA7,basisEval3BA8,basisEval3BA9,_t3465,_t3465,basisEval3946,basisEval3B3A,basisEval3BAA,_t3465,_t3465,basisEval39E2,basisEval3B7C,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B48,basisEval3BAD,basisEval3BAE,basisEval3BAF,basisEval3BB0,_t3465,_t3465,basisEval3965,basisEval3B59,basisEval3BB1,basisEval3BB2,_t3465,_t3465,basisEval3BB3,basisEval3B88,basisEval3B63,_t3465,_t3465,basisEval39EB,basisEval3BB5,_t3465,_t3465,basisEval3BB6,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3BD7#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval39AE,_t3465,_t3465,basisEval39AF,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DB,basisEval3BB8,basisEval39B1,_t3465,_t3465,basisEval3930,basisEval3932,_t3465,_t3465,basisEval39B3,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DD,basisEval3BA7,basisEval3BBA,basisEval39B6,_t3465,_t3465,basisEval39E0,basisEval3B7A,basisEval39B8,_t3465,_t3465,basisEval39E2,basisEval39BA,_t3465,_t3465,basisEval39BB,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39E4,basisEval3BBF,basisEval3BC0,basisEval3BC1,basisEval39BF,_t3465,_t3465,basisEval39E7,basisEval3B59,basisEval3B5B,basisEval39C2,_t3465,_t3465,basisEval396D,basisEval3BC4,basisEval3971,_t3465,_t3465,basisEval39EB,basisEval39C6,_t3465,_t3465,basisEval39C7,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3BD8#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval39AE,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC8,basisEval3BA4,basisEval3B20,_t3465,_t3465,basisEval3B22,basisEval3932,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC9,basisEval3BCA,basisEval3BBA,basisEval3B36,_t3465,_t3465,basisEval3BCB,basisEval3B3A,basisEval394A,_t3465,_t3465,basisEval3B97,basisEval39BA,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BCC,basisEval3BCD,basisEval3BAE,basisEval3BCE,basisEval3B55,_t3465,_t3465,basisEval3BCF,basisEval3BD0,basisEval3B5B,basisEval396B,_t3465,_t3465,basisEval3B5F,basisEval3B88,basisEval3BD1,_t3465,_t3465,basisEval3BD2,basisEval39C6,_t3465,_t3465,basisEval3BB6,_t3465,_t3465,_t3465,_t3465,_t3465];
          real vdot3CBC#10 = VDot<84>(dofs37BC,intermediateCons3BD3);
          real vdot3CBE#15 = VDot<84>(dofs37BC,intermediateCons3BD4);
          real vdot3CC0#15 = VDot<84>(dofs37BC,intermediateCons3BD5);
          tensor[3] tensor3CC1#1 = <tensor[3]>[vdot3CBC,vdot3CBE,vdot3CC0];
          real vdot3CC5#10 = VDot<84>(dofs37BC,intermediateCons3BD6);
          real vdot3CC7#15 = VDot<84>(dofs37BC,intermediateCons3BD7);
          tensor[3] tensor3CC8#1 = <tensor[3]>[vdot3CBE,vdot3CC5,vdot3CC7];
          real vdot3CCE#10 = VDot<84>(dofs37BC,intermediateCons3BD8);
          tensor[3] tensor3CCF#1 = <tensor[3]>[vdot3CC0,vdot3CC7,vdot3CCE];
          real vdot3CE9#15 = VDot<3>(tensor3CC1,probe_l_823AF1);
          real vdot3CEB#15 = VDot<3>(tensor3CC8,probe_l_823AF1);
          real vdot3CED#15 = VDot<3>(tensor3CCF,probe_l_823AF1);
          real r3CF9#11 = RMul(_t3465,_t3467);
          real r3CFA#25 = RMul(_t3465,_t3465);
          real r3CFB#3 = RAdd(r3CF9,r3CFA);
          real r3CFC#1 = RAdd(r3CFB,r3CFA);
          real r3CFD#39 = RAdd(r3CFC,r3CFA);
          real r3CFE#3 = RAdd(r3CFA,r3CF9);
          real r3CFF#1 = RAdd(r3CFE,r3CFA);
          real r3D00#39 = RAdd(r3CFF,r3CFA);
          real r3D01#3 = RAdd(r3CFA,r3CFA);
          real r3D02#1 = RAdd(r3D01,r3CF9);
          real r3D03#39 = RAdd(r3D02,r3CFA);
          real r3D05#15 = RMul(_t3467,_t3465);
          real r3D06#1 = RAdd(r3CFB,r3D05);
          real r3D07#13 = RAdd(r3D06,r3D05);
          real r3D08#1 = RAdd(r3CFE,r3D05);
          real r3D09#13 = RAdd(r3D08,r3D05);
          real r3D0B#1 = RAdd(r3D01,prod3915);
          real r3D0C#13 = RAdd(r3D0B,r3D05);
          real realLit3D0E#3 = -0.1e1;
          real r3D0F#15 = RMul(realLit3D0E,_t3465);
          real r3D10#1 = RAdd(r3CF9,r3D0F);
          real r3D11#1 = RAdd(r3D10,r3CFA);
          real r3D12#13 = RAdd(r3D11,r3D05);
          real r3D13#3 = RMul(realLit3D0E,_t3467);
          real r3D14#1 = RAdd(r3CFA,r3D13);
          real r3D15#1 = RAdd(r3D14,r3CFA);
          real r3D16#13 = RAdd(r3D15,r3D05);
          real r3D17#1 = RAdd(r3CFA,r3D0F);
          real r3D18#1 = RAdd(r3D17,r3CF9);
          real r3D19#13 = RAdd(r3D18,r3D05);
          real r3D1C#1 = RAdd(r3CFB,r3D0F);
          real r3D1D#13 = RAdd(r3D1C,r3D0F);
          real r3D1E#1 = RAdd(r3CFE,r3D0F);
          real r3D1F#13 = RAdd(r3D1E,r3D0F);
          real r3D20#1 = RAdd(r3D01,r3D13);
          real r3D21#13 = RAdd(r3D20,r3D0F);
          real r3D23#1 = RAdd(prod3915,r3CFA);
          real r3D24#1 = RAdd(r3D23,r3CFA);
          real r3D25#13 = RAdd(r3D24,r3D05);
          real r3D26#1 = RAdd(r3D05,r3CF9);
          real r3D27#1 = RAdd(r3D26,r3CFA);
          real r3D28#13 = RAdd(r3D27,r3D05);
          real r3D29#1 = RAdd(r3D05,r3CFA);
          real r3D2A#1 = RAdd(r3D29,r3CF9);
          real r3D2B#13 = RAdd(r3D2A,r3D05);
          real r3D2E#1 = RAdd(r3CF9,r3D05);
          real r3D2F#1 = RAdd(r3D2E,r3CFA);
          real r3D30#13 = RAdd(r3D2F,r3D0F);
          real r3D31#1 = RAdd(r3CFA,prod3915);
          real r3D32#1 = RAdd(r3D31,r3CFA);
          real r3D33#13 = RAdd(r3D32,r3D0F);
          real r3D34#1 = RAdd(r3CFA,r3D05);
          real r3D35#1 = RAdd(r3D34,r3CF9);
          real r3D36#13 = RAdd(r3D35,r3D0F);
          real r3D38#1 = RAdd(r3D13,r3CFA);
          real r3D39#1 = RAdd(r3D38,r3CFA);
          real r3D3A#13 = RAdd(r3D39,r3D0F);
          real r3D3B#1 = RAdd(r3D0F,r3CF9);
          real r3D3C#1 = RAdd(r3D3B,r3CFA);
          real r3D3D#13 = RAdd(r3D3C,r3D0F);
          real r3D3E#1 = RAdd(r3D0F,r3CFA);
          real r3D3F#1 = RAdd(r3D3E,r3CF9);
          real r3D40#13 = RAdd(r3D3F,r3D0F);
          real r3D94#1 = RMul(vdot3CE9,r3CFD);
          real r3D97#1 = RMul(vdot3CEB,r3D07);
          real r3D9A#1 = RMul(vdot3CED,r3D12);
          real r3D9B#1 = RAdd(r3D94,r3D97);
          real r3D9C#1 = RAdd(r3D9B,r3D9A);
          real r3D9E#1 = RMul(vdot3CE9,r3D00);
          real r3DA0#1 = RMul(vdot3CEB,r3D09);
          real r3DA2#1 = RMul(vdot3CED,r3D16);
          real r3DA3#1 = RAdd(r3D9E,r3DA0);
          real r3DA4#1 = RAdd(r3DA3,r3DA2);
          real r3DA6#1 = RMul(vdot3CE9,r3D03);
          real r3DA8#1 = RMul(vdot3CEB,r3D0C);
          real r3DAA#1 = RMul(vdot3CED,r3D19);
          real r3DAB#1 = RAdd(r3DA6,r3DA8);
          real r3DAC#1 = RAdd(r3DAB,r3DAA);
          real r3DAF#1 = RMul(vdot3CE9,r3D1D);
          real r3DB1#1 = RMul(vdot3CEB,r3CFD);
          real r3DB3#1 = RMul(vdot3CED,r3D25);
          real r3DB4#1 = RAdd(r3DAF,r3DB1);
          real r3DB5#1 = RAdd(r3DB4,r3DB3);
          real r3DB7#1 = RMul(vdot3CE9,r3D1F);
          real r3DB9#1 = RMul(vdot3CEB,r3D00);
          real r3DBB#1 = RMul(vdot3CED,r3D28);
          real r3DBC#1 = RAdd(r3DB7,r3DB9);
          real r3DBD#1 = RAdd(r3DBC,r3DBB);
          real r3DBF#1 = RMul(vdot3CE9,r3D21);
          real r3DC1#1 = RMul(vdot3CEB,r3D03);
          real r3DC3#1 = RMul(vdot3CED,r3D2B);
          real r3DC4#1 = RAdd(r3DBF,r3DC1);
          real r3DC5#1 = RAdd(r3DC4,r3DC3);
          real r3DC8#1 = RMul(vdot3CE9,r3D30);
          real r3DCA#1 = RMul(vdot3CEB,r3D3A);
          real r3DCC#1 = RMul(vdot3CED,r3CFD);
          real r3DCD#1 = RAdd(r3DC8,r3DCA);
          real r3DCE#1 = RAdd(r3DCD,r3DCC);
          real r3DD0#1 = RMul(vdot3CE9,r3D33);
          real r3DD2#1 = RMul(vdot3CEB,r3D3D);
          real r3DD4#1 = RMul(vdot3CED,r3D00);
          real r3DD5#1 = RAdd(r3DD0,r3DD2);
          real r3DD6#1 = RAdd(r3DD5,r3DD4);
          real r3DD8#1 = RMul(vdot3CE9,r3D36);
          real r3DDA#1 = RMul(vdot3CEB,r3D40);
          real r3DDC#1 = RMul(vdot3CED,r3D03);
          real r3DDD#1 = RAdd(r3DD8,r3DDA);
          real r3DDE#1 = RAdd(r3DDD,r3DDC);
          real r3E33#1 = RMul(vdot3AF3,r3D9C);
          real r3E36#1 = RMul(vdot3AF5,r3DB5);
          real r3E39#1 = RMul(vdot3AF7,r3DCE);
          real r3E3A#1 = RAdd(r3E33,r3E36);
          real r3E3B#4 = RAdd(r3E3A,r3E39);
          real r3E3D#1 = RMul(vdot3AF3,r3DA4);
          real r3E3F#1 = RMul(vdot3AF5,r3DBD);
          real r3E41#1 = RMul(vdot3AF7,r3DD6);
          real r3E42#1 = RAdd(r3E3D,r3E3F);
          real r3E43#4 = RAdd(r3E42,r3E41);
          real r3E45#1 = RMul(vdot3AF3,r3DAC);
          real r3E47#1 = RMul(vdot3AF5,r3DC5);
          real r3E49#1 = RMul(vdot3AF7,r3DDE);
          real r3E4A#1 = RAdd(r3E45,r3E47);
          real r3E4B#4 = RAdd(r3E4A,r3E49);
          tensor[3] op1_e3_l_943E30#11 = <tensor[3]>[r3E3B,r3E43,r3E4B];
          real basisEval3E72#3 = RMul(coeff39AA,prod3916);
          real coeff3E7B#13 = 0.24e2;
          real basisEval3E7E#1 = RMul(coeff3E7B,prod3922);
          real basisEval3E82#4 = RMul(coeff39AA,prod3926);
          real basisEval3E89#4 = RMul(coeff39AA,prod392D);
          real basisEval3E8B#2 = RMul(coeff3E7B,prod392F);
          real basisEval3E8D#2 = RMul(coeff3E7B,prod3931);
          real coeff3E8E#9 = 0.60e2;
          real basisEval3E91#1 = RMul(coeff3E8E,prod3935);
          real basisEval3E95#2 = RMul(coeff39AA,prod3939);
          real basisEval3E9F#2 = RMul(coeff39AA,prod3943);
          real basisEval3EA1#2 = RMul(coeff3E7B,prod3945);
          real basisEval3EA3#3 = RMul(coeff3E7B,prod3947);
          real basisEval3EA5#2 = RMul(coeff3E7B,prod3949);
          real basisEval3EA7#1 = RMul(coeff3E8E,prod394B);
          real basisEval3EA9#1 = RMul(coeff3E8E,prod394D);
          real coeff3EAA#3 = 0.120e3;
          real basisEval3EAD#1 = RMul(coeff3EAA,prod3951);
          real basisEval3EB2#2 = RMul(coeff394F,prod391E);
          real basisEval3EB8#2 = RMul(coeff3B25,prod3931);
          real basisEval3EBB#1 = RMul(coeff394F,prod393C);
          real basisEval3EBD#2 = RMul(coeff3B85,prod3943);
          real basisEval3EBF#6 = RMul(coeff3B25,prod3947);
          real coeff3EC0#6 = 0.18e2;
          real basisEval3EC1#1 = RMul(coeff3EC0,prod3949);
          real basisEval3EC3#2 = RMul(coeff3E7B,prod394D);
          real basisEval3EC6#2 = RMul(coeff394F,prod391A);
          real basisEval3EC9#2 = RMul(coeff3B25,prod392F);
          real basisEval3ECB#2 = RMul(coeff3B85,prod3939);
          real basisEval3ECC#1 = RMul(coeff394F,prod393F);
          real basisEval3ECE#1 = RMul(coeff3EC0,prod3945);
          real basisEval3ED0#2 = RMul(coeff3E7B,prod394B);
          real basisEval3ED2#2 = RMul(coeff394F,prod3922);
          real basisEval3ED5#4 = RMul(coeff39AA,prod3935);
          real basisEval3ED8#1 = RMul(coeff394F,prod3945);
          real basisEval3EDA#1 = RMul(coeff3EC0,prod394D);
          real basisEval3EDB#2 = RMul(coeff3B85,prod3951);
          real basisEval3EE5#1 = RMul(coeff3B85,prod3947);
          real basisEval3EEB#1 = RMul(coeff394F,prod3949);
          real basisEval3EEC#1 = RMul(coeff3EC0,prod394B);
          real basisEval3EED#1 = RMul(coeff3E7B,prod391E);
          real basisEval3EEE#2 = RMul(coeff3E7B,prod3929);
          real basisEval3EEF#1 = RMul(coeff3E8E,prod392D);
          real basisEval3EF0#2 = RMul(coeff3E7B,prod393C);
          real basisEval3EF1#1 = RMul(coeff3E8E,prod393F);
          real basisEval3EF2#1 = RMul(coeff3EAA,prod3943);
          real basisEval3EF3#1 = RMul(coeff3E8E,prod3949);
          real basisEval3EF4#2 = RMul(coeff39AA,prod3951);
          real basisEval3EF5#2 = RMul(coeff3B25,prod3929);
          real basisEval3EF7#1 = RMul(coeff3EC0,prod393C);
          real basisEval3EF8#2 = RMul(coeff3E7B,prod393F);
          real basisEval3EFA#1 = RMul(coeff394F,prod394B);
          real basisEval3EFC#1 = RMul(coeff3EC0,prod393F);
          real basisEval3EFE#1 = RMul(coeff394F,prod394D);
          real basisEval3EFF#1 = RMul(coeff3E7B,prod391A);
          real basisEval3F00#1 = RMul(coeff3E8E,prod3926);
          real basisEval3F01#1 = RMul(coeff3EAA,prod3939);
          real basisEval3F02#1 = RMul(coeff3E8E,prod393C);
          real basisEval3F03#1 = RMul(coeff3E8E,prod3945);
          tensor[84] intermediateCons3F04#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E72,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval3BA3,basisEval3E7E,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3BA4,basisEval3E89,basisEval3E8B,basisEval3E8D,basisEval3E91,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E95,basisEval3BA7,basisEval3BBA,basisEval3E9F,basisEval3EA1,basisEval3EA3,basisEval3EA5,basisEval3EA7,basisEval3EA9,basisEval3EAD];
          tensor[84] intermediateCons3F05#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval3EB2,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval3BB8,basisEval3E89,_t3465,basisEval3B22,basisEval3EB8,_t3465,basisEval3B28,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval3EBB,basisEval3BBA,basisEval3EBD,_t3465,basisEval3B38,basisEval3EBF,basisEval3EC1,_t3465,basisEval3B3E,basisEval3EC3,_t3465,basisEval3B44,_t3465];
          tensor[84] intermediateCons3F06#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3EC6,basisEval39AE,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3BB8,basisEval3B20,_t3465,basisEval3EC9,basisEval3B24,_t3465,basisEval3B28,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3ECB,basisEval3BA7,basisEval3ECC,basisEval3B36,_t3465,basisEval3ECE,basisEval3EBF,basisEval3B3C,_t3465,basisEval3ED0,basisEval3B40,_t3465,basisEval3B44,_t3465,_t3465];
          tensor[84] intermediateCons3F07#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval3BA3,_t3465,_t3465,basisEval3ED2,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval3BA4,basisEval3BA5,_t3465,_t3465,basisEval3B91,basisEval3EB8,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval3BA7,basisEval3BA8,basisEval3BA9,_t3465,_t3465,basisEval3ED8,basisEval3EBF,basisEval3EA5,_t3465,_t3465,basisEval3B97,basisEval3EDA,_t3465,_t3465,basisEval3EDB,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F08#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval39AE,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DB,basisEval3BB8,basisEval39B1,_t3465,_t3465,basisEval3B91,basisEval3B74,_t3465,_t3465,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DD,basisEval3BA7,basisEval3BBA,basisEval39B6,_t3465,_t3465,basisEval3B38,basisEval3EE5,basisEval3B3C,_t3465,_t3465,basisEval3B97,basisEval3B7C,_t3465,_t3465,basisEval3952,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F09#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval39AE,_t3465,_t3465,basisEval3ED2,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC8,basisEval3BA4,basisEval3B20,_t3465,_t3465,basisEval3EC9,basisEval3B74,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC9,basisEval3BCA,basisEval3BBA,basisEval3B36,_t3465,_t3465,basisEval3EA1,basisEval3EBF,basisEval3EEB,_t3465,_t3465,basisEval3EEC,basisEval3B7C,_t3465,_t3465,basisEval3EDB,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0A#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E72,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval3EED,_t3465,_t3465,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3EEE,basisEval3EEF,_t3465,_t3465,_t3465,basisEval3B22,basisEval3E8D,_t3465,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E95,basisEval3EF0,basisEval3EF1,basisEval3EF2,_t3465,_t3465,_t3465,basisEval3B38,basisEval3EA3,basisEval3EF3,_t3465,_t3465,_t3465,basisEval3B97,basisEval3EC3,_t3465,_t3465,_t3465,basisEval3EF4,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0B#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3EC6,basisEval3BA3,_t3465,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3EF5,basisEval3BA5,_t3465,_t3465,_t3465,basisEval3B91,basisEval3B24,_t3465,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3ECB,basisEval3EF7,basisEval3EF8,basisEval3BA9,_t3465,_t3465,_t3465,basisEval3B38,basisEval3EBF,basisEval3BAA,_t3465,_t3465,_t3465,basisEval3EFA,basisEval3B7C,_t3465,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0C#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval3EB2,_t3465,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC8,basisEval3EF5,basisEval3E89,_t3465,_t3465,_t3465,basisEval3B22,basisEval3B74,_t3465,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC9,basisEval3EF0,basisEval3EFC,basisEval3EBD,_t3465,_t3465,_t3465,basisEval3BCB,basisEval3EBF,basisEval3B3C,_t3465,_t3465,_t3465,basisEval3B97,basisEval3EFE,_t3465,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0D#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E72,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3EFF,basisEval3BA3,_t3465,_t3465,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3F00,basisEval3EEE,basisEval3E89,_t3465,_t3465,_t3465,basisEval3E8B,basisEval3B24,_t3465,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3F01,basisEval3F02,basisEval3EF8,basisEval3E9F,_t3465,_t3465,_t3465,basisEval3F03,basisEval3EA3,basisEval3B3C,_t3465,_t3465,_t3465,basisEval3ED0,basisEval3B7C,_t3465,_t3465,_t3465,basisEval3EF4,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          real vdot3FC9#1 = VDot<84>(dofs37BC,intermediateCons3F04);
          real vdot3FCB#2 = VDot<84>(dofs37BC,intermediateCons3F05);
          real vdot3FCD#2 = VDot<84>(dofs37BC,intermediateCons3F06);
          real vdot3FD2#2 = VDot<84>(dofs37BC,intermediateCons3F07);
          real vdot3FD4#3 = VDot<84>(dofs37BC,intermediateCons3F08);
          real vdot3FDB#2 = VDot<84>(dofs37BC,intermediateCons3F09);
          real vdot3FE8#1 = VDot<84>(dofs37BC,intermediateCons3F0A);
          real vdot3FEA#2 = VDot<84>(dofs37BC,intermediateCons3F0B);
          real vdot3FF1#2 = VDot<84>(dofs37BC,intermediateCons3F0C);
          real vdot4007#1 = VDot<84>(dofs37BC,intermediateCons3F0D);
          real r4051#4 = RMul(vdot3AF3,vdot3FC9);
          real r4053#5 = RMul(vdot3AF3,vdot3FCB);
          real r4055#5 = RMul(vdot3AF3,vdot3FCD);
          real r405A#4 = RMul(vdot3AF3,vdot3FD2);
          real r405C#5 = RMul(vdot3AF3,vdot3FD4);
          real r4063#4 = RMul(vdot3AF3,vdot3FDB);
          real r4068#4 = RMul(vdot3AF5,vdot3FCB);
          real r406A#5 = RMul(vdot3AF5,vdot3FD2);
          real r406C#5 = RMul(vdot3AF5,vdot3FD4);
          real r4071#4 = RMul(vdot3AF5,vdot3FE8);
          real r4073#5 = RMul(vdot3AF5,vdot3FEA);
          real r407A#4 = RMul(vdot3AF5,vdot3FF1);
          real r407F#4 = RMul(vdot3AF7,vdot3FCD);
          real r4081#5 = RMul(vdot3AF7,vdot3FD4);
          real r4083#5 = RMul(vdot3AF7,vdot3FDB);
          real r4088#4 = RMul(vdot3AF7,vdot3FEA);
          real r408A#5 = RMul(vdot3AF7,vdot3FF1);
          real r4091#4 = RMul(vdot3AF7,vdot4007);
          real r40DD#4 = RMul(vdot3CBC,vdot3CBC);
          real r40DF#4 = RMul(vdot3CBC,vdot3CBE);
          real r40E1#4 = RMul(vdot3CBC,vdot3CC0);
          real r40E4#8 = RMul(vdot3CBE,vdot3CBE);
          real r40E6#4 = RMul(vdot3CBE,vdot3CC5);
          real r40E8#4 = RMul(vdot3CBE,vdot3CC7);
          real r40EB#8 = RMul(vdot3CC0,vdot3CC0);
          real r40ED#4 = RMul(vdot3CC0,vdot3CC7);
          real r40EF#4 = RMul(vdot3CC0,vdot3CCE);
          real r40F2#4 = RMul(vdot3CBE,vdot3CBC);
          real r40F4#4 = RMul(vdot3CBE,vdot3CC0);
          real r40F6#4 = RMul(vdot3CC5,vdot3CBE);
          real r40F7#4 = RMul(vdot3CC5,vdot3CC5);
          real r40F8#4 = RMul(vdot3CC5,vdot3CC7);
          real r40FA#4 = RMul(vdot3CC7,vdot3CC0);
          real r40FB#8 = RMul(vdot3CC7,vdot3CC7);
          real r40FC#4 = RMul(vdot3CC7,vdot3CCE);
          real r40FF#4 = RMul(vdot3CC0,vdot3CBC);
          real r4100#4 = RMul(vdot3CC0,vdot3CBE);
          real r4103#4 = RMul(vdot3CC7,vdot3CBE);
          real r4104#4 = RMul(vdot3CC7,vdot3CC5);
          real r4107#4 = RMul(vdot3CCE,vdot3CC0);
          real r4108#4 = RMul(vdot3CCE,vdot3CC7);
          real r4109#4 = RMul(vdot3CCE,vdot3CCE);
          real r4141#1 = RAdd(r4051,r40DD);
          real r4144#1 = RAdd(r4068,r40E4);
          real r4147#1 = RAdd(r407F,r40EB);
          real r4148#1 = RAdd(r4141,r4144);
          real r4149#3 = RAdd(r4148,r4147);
          real r414C#1 = RAdd(r4053,r40DF);
          real r414F#1 = RAdd(r406A,r40E6);
          real r4152#1 = RAdd(r4081,r40ED);
          real r4153#1 = RAdd(r414C,r414F);
          real r4154#3 = RAdd(r4153,r4152);
          real r4157#1 = RAdd(r4055,r40E1);
          real r415A#1 = RAdd(r406C,r40E8);
          real r415D#1 = RAdd(r4083,r40EF);
          real r415E#1 = RAdd(r4157,r415A);
          real r415F#3 = RAdd(r415E,r415D);
          real r4163#1 = RAdd(r4053,r40F2);
          real r4166#1 = RAdd(r406A,r40F6);
          real r4169#1 = RAdd(r4081,r40FA);
          real r416A#1 = RAdd(r4163,r4166);
          real r416B#3 = RAdd(r416A,r4169);
          real r416E#1 = RAdd(r405A,r40E4);
          real r4171#1 = RAdd(r4071,r40F7);
          real r4174#1 = RAdd(r4088,r40FB);
          real r4175#1 = RAdd(r416E,r4171);
          real r4176#3 = RAdd(r4175,r4174);
          real r4179#1 = RAdd(r405C,r40F4);
          real r417C#1 = RAdd(r4073,r40F8);
          real r417F#1 = RAdd(r408A,r40FC);
          real r4180#1 = RAdd(r4179,r417C);
          real r4181#3 = RAdd(r4180,r417F);
          real r4185#1 = RAdd(r4055,r40FF);
          real r4188#1 = RAdd(r406C,r4103);
          real r418B#1 = RAdd(r4083,r4107);
          real r418C#1 = RAdd(r4185,r4188);
          real r418D#3 = RAdd(r418C,r418B);
          real r4190#1 = RAdd(r405C,r4100);
          real r4193#1 = RAdd(r4073,r4104);
          real r4196#1 = RAdd(r408A,r4108);
          real r4197#1 = RAdd(r4190,r4193);
          real r4198#3 = RAdd(r4197,r4196);
          real r419B#1 = RAdd(r4063,r40EB);
          real r419E#1 = RAdd(r407A,r40FB);
          real r41A1#1 = RAdd(r4091,r4109);
          real r41A2#1 = RAdd(r419B,r419E);
          real r41A3#3 = RAdd(r41A2,r41A1);
          real r4210#1 = RMul(vdot3CE9,vdot3CBC);
          real r4212#2 = RMul(vdot3CE9,vdot3CBE);
          real r4214#2 = RMul(vdot3CE9,vdot3CC0);
          tensor[3] tensor4215#4 = <tensor[3]>[r4210,r4212,r4214];
          real r4219#1 = RMul(vdot3CE9,vdot3CC5);
          real r421B#2 = RMul(vdot3CE9,vdot3CC7);
          tensor[3] tensor421C#4 = <tensor[3]>[r4212,r4219,r421B];
          real r4222#1 = RMul(vdot3CE9,vdot3CCE);
          tensor[3] tensor4223#4 = <tensor[3]>[r4214,r421B,r4222];
          real r4226#1 = RMul(vdot3CEB,vdot3CBC);
          real r4227#2 = RMul(vdot3CEB,vdot3CBE);
          real r4228#2 = RMul(vdot3CEB,vdot3CC0);
          tensor[3] tensor4229#4 = <tensor[3]>[r4226,r4227,r4228];
          real r422B#1 = RMul(vdot3CEB,vdot3CC5);
          real r422C#2 = RMul(vdot3CEB,vdot3CC7);
          tensor[3] tensor422D#4 = <tensor[3]>[r4227,r422B,r422C];
          real r4230#1 = RMul(vdot3CEB,vdot3CCE);
          tensor[3] tensor4231#4 = <tensor[3]>[r4228,r422C,r4230];
          real r4234#1 = RMul(vdot3CED,vdot3CBC);
          real r4235#2 = RMul(vdot3CED,vdot3CBE);
          real r4236#2 = RMul(vdot3CED,vdot3CC0);
          tensor[3] tensor4237#4 = <tensor[3]>[r4234,r4235,r4236];
          real r4239#1 = RMul(vdot3CED,vdot3CC5);
          real r423A#2 = RMul(vdot3CED,vdot3CC7);
          tensor[3] tensor423B#4 = <tensor[3]>[r4235,r4239,r423A];
          real r423E#1 = RMul(vdot3CED,vdot3CCE);
          tensor[3] tensor423F#4 = <tensor[3]>[r4236,r423A,r423E];
          real r4279#1 = RMul(vdot3AF3,r4149);
          real r427B#1 = RMul(vdot3AF3,r4154);
          real r427D#1 = RMul(vdot3AF3,r415F);
          tensor[3] tensor427E#1 = <tensor[3]>[r4279,r427B,r427D];
          real r4280#1 = RMul(vdot3AF3,r416B);
          real r4282#1 = RMul(vdot3AF3,r4176);
          real r4284#1 = RMul(vdot3AF3,r4181);
          tensor[3] tensor4285#1 = <tensor[3]>[r4280,r4282,r4284];
          real r4287#1 = RMul(vdot3AF3,r418D);
          real r4289#1 = RMul(vdot3AF3,r4198);
          real r428B#1 = RMul(vdot3AF3,r41A3);
          tensor[3] tensor428C#1 = <tensor[3]>[r4287,r4289,r428B];
          real r428F#1 = RMul(vdot3AF5,r4149);
          real r4290#1 = RMul(vdot3AF5,r4154);
          real r4291#1 = RMul(vdot3AF5,r415F);
          tensor[3] tensor4292#1 = <tensor[3]>[r428F,r4290,r4291];
          real r4293#1 = RMul(vdot3AF5,r416B);
          real r4294#1 = RMul(vdot3AF5,r4176);
          real r4295#1 = RMul(vdot3AF5,r4181);
          tensor[3] tensor4296#1 = <tensor[3]>[r4293,r4294,r4295];
          real r4297#1 = RMul(vdot3AF5,r418D);
          real r4298#1 = RMul(vdot3AF5,r4198);
          real r4299#1 = RMul(vdot3AF5,r41A3);
          tensor[3] tensor429A#1 = <tensor[3]>[r4297,r4298,r4299];
          real r429D#1 = RMul(vdot3AF7,r4149);
          real r429E#1 = RMul(vdot3AF7,r4154);
          real r429F#1 = RMul(vdot3AF7,r415F);
          tensor[3] tensor42A0#1 = <tensor[3]>[r429D,r429E,r429F];
          real r42A1#1 = RMul(vdot3AF7,r416B);
          real r42A2#1 = RMul(vdot3AF7,r4176);
          real r42A3#1 = RMul(vdot3AF7,r4181);
          tensor[3] tensor42A4#1 = <tensor[3]>[r42A1,r42A2,r42A3];
          real r42A5#1 = RMul(vdot3AF7,r418D);
          real r42A6#1 = RMul(vdot3AF7,r4198);
          real r42A7#1 = RMul(vdot3AF7,r41A3);
          tensor[3] tensor42A8#1 = <tensor[3]>[r42A5,r42A6,r42A7];
          tensor[3] v42E2#3 = VAdd<3>(tensor4215,tensor427E);
          tensor[3] v42E5#3 = VAdd<3>(tensor421C,tensor4292);
          tensor[3] v42E8#3 = VAdd<3>(tensor4223,tensor42A0);
          tensor[3] v42EC#3 = VAdd<3>(tensor4229,tensor4285);
          tensor[3] v42EF#3 = VAdd<3>(tensor422D,tensor4296);
          tensor[3] v42F2#3 = VAdd<3>(tensor4231,tensor42A4);
          tensor[3] v42F6#3 = VAdd<3>(tensor4237,tensor428C);
          tensor[3] v42F9#3 = VAdd<3>(tensor423B,tensor429A);
          tensor[3] v42FC#3 = VAdd<3>(tensor423F,tensor42A8);
          real r431F#3 = VIndex<3,0>(v42E2);
          real r4321#1 = RMul(r431F,r3CFD);
          real r4322#3 = VIndex<3,0>(v42EC);
          real r4324#1 = RMul(r4322,r3D07);
          real r4325#3 = VIndex<3,0>(v42F6);
          real r4327#1 = RMul(r4325,r3D12);
          real r4328#3 = VIndex<3,0>(v42E5);
          real r432A#1 = RMul(r4328,r3D1D);
          real r432B#3 = VIndex<3,0>(v42EF);
          real r432D#1 = RMul(r432B,r3CFD);
          real r432E#3 = VIndex<3,0>(v42F9);
          real r4330#1 = RMul(r432E,r3D25);
          real r4331#3 = VIndex<3,0>(v42E8);
          real r4333#1 = RMul(r4331,r3D30);
          real r4334#3 = VIndex<3,0>(v42F2);
          real r4336#1 = RMul(r4334,r3D3A);
          real r4337#3 = VIndex<3,0>(v42FC);
          real r4339#1 = RMul(r4337,r3CFD);
          real r433A#1 = RAdd(r4321,r4324);
          real r433B#1 = RAdd(r433A,r4327);
          real r433C#1 = RAdd(r433B,r432A);
          real r433D#1 = RAdd(r433C,r432D);
          real r433E#1 = RAdd(r433D,r4330);
          real r433F#1 = RAdd(r433E,r4333);
          real r4340#1 = RAdd(r433F,r4336);
          real r4341#1 = RAdd(r4340,r4339);
          real r4343#1 = RMul(r431F,r3D00);
          real r4345#1 = RMul(r4322,r3D09);
          real r4347#1 = RMul(r4325,r3D16);
          real r4349#1 = RMul(r4328,r3D1F);
          real r434B#1 = RMul(r432B,r3D00);
          real r434D#1 = RMul(r432E,r3D28);
          real r434F#1 = RMul(r4331,r3D33);
          real r4351#1 = RMul(r4334,r3D3D);
          real r4353#1 = RMul(r4337,r3D00);
          real r4354#1 = RAdd(r4343,r4345);
          real r4355#1 = RAdd(r4354,r4347);
          real r4356#1 = RAdd(r4355,r4349);
          real r4357#1 = RAdd(r4356,r434B);
          real r4358#1 = RAdd(r4357,r434D);
          real r4359#1 = RAdd(r4358,r434F);
          real r435A#1 = RAdd(r4359,r4351);
          real r435B#1 = RAdd(r435A,r4353);
          real r435D#1 = RMul(r431F,r3D03);
          real r435F#1 = RMul(r4322,r3D0C);
          real r4361#1 = RMul(r4325,r3D19);
          real r4363#1 = RMul(r4328,r3D21);
          real r4365#1 = RMul(r432B,r3D03);
          real r4367#1 = RMul(r432E,r3D2B);
          real r4369#1 = RMul(r4331,r3D36);
          real r436B#1 = RMul(r4334,r3D40);
          real r436D#1 = RMul(r4337,r3D03);
          real r436E#1 = RAdd(r435D,r435F);
          real r436F#1 = RAdd(r436E,r4361);
          real r4370#1 = RAdd(r436F,r4363);
          real r4371#1 = RAdd(r4370,r4365);
          real r4372#1 = RAdd(r4371,r4367);
          real r4373#1 = RAdd(r4372,r4369);
          real r4374#1 = RAdd(r4373,r436B);
          real r4375#1 = RAdd(r4374,r436D);
          real r4377#3 = VIndex<3,1>(v42E2);
          real r4378#1 = RMul(r4377,r3CFD);
          real r4379#3 = VIndex<3,1>(v42EC);
          real r437A#1 = RMul(r4379,r3D07);
          real r437B#3 = VIndex<3,1>(v42F6);
          real r437C#1 = RMul(r437B,r3D12);
          real r437D#3 = VIndex<3,1>(v42E5);
          real r437E#1 = RMul(r437D,r3D1D);
          real r437F#3 = VIndex<3,1>(v42EF);
          real r4380#1 = RMul(r437F,r3CFD);
          real r4381#3 = VIndex<3,1>(v42F9);
          real r4382#1 = RMul(r4381,r3D25);
          real r4383#3 = VIndex<3,1>(v42E8);
          real r4384#1 = RMul(r4383,r3D30);
          real r4385#3 = VIndex<3,1>(v42F2);
          real r4386#1 = RMul(r4385,r3D3A);
          real r4387#3 = VIndex<3,1>(v42FC);
          real r4388#1 = RMul(r4387,r3CFD);
          real r4389#1 = RAdd(r4378,r437A);
          real r438A#1 = RAdd(r4389,r437C);
          real r438B#1 = RAdd(r438A,r437E);
          real r438C#1 = RAdd(r438B,r4380);
          real r438D#1 = RAdd(r438C,r4382);
          real r438E#1 = RAdd(r438D,r4384);
          real r438F#1 = RAdd(r438E,r4386);
          real r4390#1 = RAdd(r438F,r4388);
          real r4391#1 = RMul(r4377,r3D00);
          real r4392#1 = RMul(r4379,r3D09);
          real r4393#1 = RMul(r437B,r3D16);
          real r4394#1 = RMul(r437D,r3D1F);
          real r4395#1 = RMul(r437F,r3D00);
          real r4396#1 = RMul(r4381,r3D28);
          real r4397#1 = RMul(r4383,r3D33);
          real r4398#1 = RMul(r4385,r3D3D);
          real r4399#1 = RMul(r4387,r3D00);
          real r439A#1 = RAdd(r4391,r4392);
          real r439B#1 = RAdd(r439A,r4393);
          real r439C#1 = RAdd(r439B,r4394);
          real r439D#1 = RAdd(r439C,r4395);
          real r439E#1 = RAdd(r439D,r4396);
          real r439F#1 = RAdd(r439E,r4397);
          real r43A0#1 = RAdd(r439F,r4398);
          real r43A1#1 = RAdd(r43A0,r4399);
          real r43A2#1 = RMul(r4377,r3D03);
          real r43A3#1 = RMul(r4379,r3D0C);
          real r43A4#1 = RMul(r437B,r3D19);
          real r43A5#1 = RMul(r437D,r3D21);
          real r43A6#1 = RMul(r437F,r3D03);
          real r43A7#1 = RMul(r4381,r3D2B);
          real r43A8#1 = RMul(r4383,r3D36);
          real r43A9#1 = RMul(r4385,r3D40);
          real r43AA#1 = RMul(r4387,r3D03);
          real r43AB#1 = RAdd(r43A2,r43A3);
          real r43AC#1 = RAdd(r43AB,r43A4);
          real r43AD#1 = RAdd(r43AC,r43A5);
          real r43AE#1 = RAdd(r43AD,r43A6);
          real r43AF#1 = RAdd(r43AE,r43A7);
          real r43B0#1 = RAdd(r43AF,r43A8);
          real r43B1#1 = RAdd(r43B0,r43A9);
          real r43B2#1 = RAdd(r43B1,r43AA);
          real r43B4#3 = VIndex<3,2>(v42E2);
          real r43B5#1 = RMul(r43B4,r3CFD);
          real r43B6#3 = VIndex<3,2>(v42EC);
          real r43B7#1 = RMul(r43B6,r3D07);
          real r43B8#3 = VIndex<3,2>(v42F6);
          real r43B9#1 = RMul(r43B8,r3D12);
          real r43BA#3 = VIndex<3,2>(v42E5);
          real r43BB#1 = RMul(r43BA,r3D1D);
          real r43BC#3 = VIndex<3,2>(v42EF);
          real r43BD#1 = RMul(r43BC,r3CFD);
          real r43BE#3 = VIndex<3,2>(v42F9);
          real r43BF#1 = RMul(r43BE,r3D25);
          real r43C0#3 = VIndex<3,2>(v42E8);
          real r43C1#1 = RMul(r43C0,r3D30);
          real r43C2#3 = VIndex<3,2>(v42F2);
          real r43C3#1 = RMul(r43C2,r3D3A);
          real r43C4#3 = VIndex<3,2>(v42FC);
          real r43C5#1 = RMul(r43C4,r3CFD);
          real r43C6#1 = RAdd(r43B5,r43B7);
          real r43C7#1 = RAdd(r43C6,r43B9);
          real r43C8#1 = RAdd(r43C7,r43BB);
          real r43C9#1 = RAdd(r43C8,r43BD);
          real r43CA#1 = RAdd(r43C9,r43BF);
          real r43CB#1 = RAdd(r43CA,r43C1);
          real r43CC#1 = RAdd(r43CB,r43C3);
          real r43CD#1 = RAdd(r43CC,r43C5);
          real r43CE#1 = RMul(r43B4,r3D00);
          real r43CF#1 = RMul(r43B6,r3D09);
          real r43D0#1 = RMul(r43B8,r3D16);
          real r43D1#1 = RMul(r43BA,r3D1F);
          real r43D2#1 = RMul(r43BC,r3D00);
          real r43D3#1 = RMul(r43BE,r3D28);
          real r43D4#1 = RMul(r43C0,r3D33);
          real r43D5#1 = RMul(r43C2,r3D3D);
          real r43D6#1 = RMul(r43C4,r3D00);
          real r43D7#1 = RAdd(r43CE,r43CF);
          real r43D8#1 = RAdd(r43D7,r43D0);
          real r43D9#1 = RAdd(r43D8,r43D1);
          real r43DA#1 = RAdd(r43D9,r43D2);
          real r43DB#1 = RAdd(r43DA,r43D3);
          real r43DC#1 = RAdd(r43DB,r43D4);
          real r43DD#1 = RAdd(r43DC,r43D5);
          real r43DE#1 = RAdd(r43DD,r43D6);
          real r43DF#1 = RMul(r43B4,r3D03);
          real r43E0#1 = RMul(r43B6,r3D0C);
          real r43E1#1 = RMul(r43B8,r3D19);
          real r43E2#1 = RMul(r43BA,r3D21);
          real r43E3#1 = RMul(r43BC,r3D03);
          real r43E4#1 = RMul(r43BE,r3D2B);
          real r43E5#1 = RMul(r43C0,r3D36);
          real r43E6#1 = RMul(r43C2,r3D40);
          real r43E7#1 = RMul(r43C4,r3D03);
          real r43E8#1 = RAdd(r43DF,r43E0);
          real r43E9#1 = RAdd(r43E8,r43E1);
          real r43EA#1 = RAdd(r43E9,r43E2);
          real r43EB#1 = RAdd(r43EA,r43E3);
          real r43EC#1 = RAdd(r43EB,r43E4);
          real r43ED#1 = RAdd(r43EC,r43E5);
          real r43EE#1 = RAdd(r43ED,r43E6);
          real r43EF#1 = RAdd(r43EE,r43E7);
          real r44C8#2 = RMul(r3E3B,r4341);
          real r44CA#2 = RMul(r3E3B,r4390);
          real r44CC#2 = RMul(r3E3B,r43CD);
          real r44D0#2 = RMul(r3E43,r435B);
          real r44D2#2 = RMul(r3E43,r43A1);
          real r44D4#2 = RMul(r3E43,r43DE);
          real r44D8#2 = RMul(r3E4B,r4375);
          real r44DA#2 = RMul(r3E4B,r43B2);
          real r44DC#2 = RMul(r3E4B,r43EF);
          real op1_e3_l_14644F8#4 = VDot<3>(op1_e3_l_943E30,op1_e3_l_943E30);
          real r44FD#1 = RAdd(r44C8,r44C8);
          real r44FF#1 = RAdd(r44D0,r44D0);
          real r4501#1 = RAdd(r44D8,r44D8);
          real r4502#1 = RAdd(r44FD,r44FF);
          real r4503#1 = RAdd(r4502,r4501);
          real r4505#1 = RAdd(r44CA,r44CA);
          real r4507#1 = RAdd(r44D2,r44D2);
          real r4509#1 = RAdd(r44DA,r44DA);
          real r450A#1 = RAdd(r4505,r4507);
          real r450B#1 = RAdd(r450A,r4509);
          real r450D#1 = RAdd(r44CC,r44CC);
          real r450F#1 = RAdd(r44D4,r44D4);
          real r4511#1 = RAdd(r44DC,r44DC);
          real r4512#1 = RAdd(r450D,r450F);
          real r4513#1 = RAdd(r4512,r4511);
          tensor[3] op1_e3_l_14744FB#3 = <tensor[3]>[r4503,r450B,r4513];
          tensor[3] op1_e3_l_250452E#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_14744FB);
          real op1_e3_l_2514531#1 = VDot<3>(op1_e3_l_14744FB,op1_e3_l_14744FB);
          real r4536#3 = RDiv(_t3467,op1_e3_l_2514531);
          real r4537#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_250452E);
          real r4538#1 = RMul(r4536,r4537);
          real r4539#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_250452E);
          real r453A#1 = RMul(r4536,r4539);
          real r453B#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_250452E);
          real r453C#1 = RMul(r4536,r453B);
          tensor[3] op1_e3_l_2524534#1 = <tensor[3]>[r4538,r453A,r453C];
          tensor[3] op1_e3_l_4244547#2 = VNeg<3>(op1_e3_l_2524534);
          real op1_e3_l_426454A#1 = VDot<3>(op1_e3_l_4244547,op1_e3_l_4244547);
          real op1_e3_l_427454D#1 = Sqrt(op1_e3_l_426454A);
          real op1_e3_l_4284550#1 = Abs<real>(op1_e3_l_427454D);
          real op1_e3_l_4294553#1 = RDiv(op1_e3_l_4284550,thick2411);
          real op1_e3_l_4304556#1 = RSub(_t3467,op1_e3_l_4294553);
          real op1_e3_l_4314559#1 = RMul(_t3469,op1_e3_l_4304556);
          real op1_e3_l_432455C#1 = RClamp(_t3465,_t3467,op1_e3_l_4314559);
          real _t455F#2 = RMul(maxAlpha2419,op1_e3_l_432455C);
          bool _t4562#1 = EQ<real>(_t455F,_t3465);
          if _t4562 then goto SAVE4565 else goto JOIN4567
        SAVE4565:  preds = [COND4564]
          self.rayN = rayN243D;
          active
          goto JOIN4567
        JOIN4567:  preds = [*ACTIVE4566,COND4564]
          real _t456E#1 = RSub(_t3467,_t455F);
          real _t4571#1 = MathFn<pow>(_t456E,alphaFix242D);
          bool _t4573#1 = NEQ<real>(phKs2435,_t3465);
          if _t4573 then goto ASSIGN4578 else goto JOIN4947
        ASSIGN4578:  preds = [COND4575]
          tensor[3] op1_e3_l_1564576#3 = VAdd<3>(eyeDir242F,litwsp2425);
          real op1_e3_l_1584579#1 = VDot<3>(op1_e3_l_1564576,op1_e3_l_1564576);
          real op1_e3_l_159457C#1 = Sqrt(op1_e3_l_1584579);
          real r4589#1 = RAdd(r4051,r4068);
          real r458A#1 = RAdd(r4589,r407F);
          real r4591#1 = RAdd(r4053,r406A);
          real r4592#2 = RAdd(r4591,r4081);
          real r4599#1 = RAdd(r4055,r406C);
          real r459A#2 = RAdd(r4599,r4083);
          tensor[3] tensor459B#1 = <tensor[3]>[r458A,r4592,r459A];
          real r45AA#1 = RAdd(r405A,r4071);
          real r45AB#1 = RAdd(r45AA,r4088);
          real r45B2#1 = RAdd(r405C,r4073);
          real r45B3#2 = RAdd(r45B2,r408A);
          tensor[3] tensor45B4#1 = <tensor[3]>[r4592,r45AB,r45B3];
          real r45CB#1 = RAdd(r4063,r407A);
          real r45CC#1 = RAdd(r45CB,r4091);
          tensor[3] tensor45CD#1 = <tensor[3]>[r459A,r45B3,r45CC];
          real r4627#1 = RAdd(r40DD,r40E4);
          real r4628#1 = RAdd(r4627,r40EB);
          real r462E#1 = RAdd(r40DF,r40E6);
          real r462F#1 = RAdd(r462E,r40ED);
          real r4635#1 = RAdd(r40E1,r40E8);
          real r4636#1 = RAdd(r4635,r40EF);
          tensor[3] tensor4637#1 = <tensor[3]>[r4628,r462F,r4636];
          real r463B#1 = RAdd(r40F2,r40F6);
          real r463C#1 = RAdd(r463B,r40FA);
          real r4640#1 = RAdd(r40E4,r40F7);
          real r4641#1 = RAdd(r4640,r40FB);
          real r4645#1 = RAdd(r40F4,r40F8);
          real r4646#1 = RAdd(r4645,r40FC);
          tensor[3] tensor4647#1 = <tensor[3]>[r463C,r4641,r4646];
          real r464B#1 = RAdd(r40FF,r4103);
          real r464C#1 = RAdd(r464B,r4107);
          real r4650#1 = RAdd(r4100,r4104);
          real r4651#1 = RAdd(r4650,r4108);
          real r4655#1 = RAdd(r40EB,r40FB);
          real r4656#1 = RAdd(r4655,r4109);
          tensor[3] tensor4657#1 = <tensor[3]>[r464C,r4651,r4656];
          tensor[3] v4696#3 = VAdd<3>(tensor459B,tensor4637);
          tensor[3] v4699#3 = VAdd<3>(tensor45B4,tensor4647);
          tensor[3] v469C#3 = VAdd<3>(tensor45CD,tensor4657);
          real r46AA#3 = VIndex<3,0>(v4696);
          real r46AB#1 = RMul(vdot3AF3,r46AA);
          real r46AC#3 = VIndex<3,1>(v4696);
          real r46AD#1 = RMul(vdot3AF3,r46AC);
          real r46AE#3 = VIndex<3,2>(v4696);
          real r46AF#1 = RMul(vdot3AF3,r46AE);
          tensor[3] tensor46B0#1 = <tensor[3]>[r46AB,r46AD,r46AF];
          real r46B1#3 = VIndex<3,0>(v4699);
          real r46B2#1 = RMul(vdot3AF3,r46B1);
          real r46B3#3 = VIndex<3,1>(v4699);
          real r46B4#1 = RMul(vdot3AF3,r46B3);
          real r46B5#3 = VIndex<3,2>(v4699);
          real r46B6#1 = RMul(vdot3AF3,r46B5);
          tensor[3] tensor46B7#1 = <tensor[3]>[r46B2,r46B4,r46B6];
          real r46B8#3 = VIndex<3,0>(v469C);
          real r46B9#1 = RMul(vdot3AF3,r46B8);
          real r46BA#3 = VIndex<3,1>(v469C);
          real r46BB#1 = RMul(vdot3AF3,r46BA);
          real r46BC#3 = VIndex<3,2>(v469C);
          real r46BD#1 = RMul(vdot3AF3,r46BC);
          tensor[3] tensor46BE#1 = <tensor[3]>[r46B9,r46BB,r46BD];
          real r46C1#1 = RMul(vdot3AF5,r46AA);
          real r46C2#1 = RMul(vdot3AF5,r46AC);
          real r46C3#1 = RMul(vdot3AF5,r46AE);
          tensor[3] tensor46C4#1 = <tensor[3]>[r46C1,r46C2,r46C3];
          real r46C5#1 = RMul(vdot3AF5,r46B1);
          real r46C6#1 = RMul(vdot3AF5,r46B3);
          real r46C7#1 = RMul(vdot3AF5,r46B5);
          tensor[3] tensor46C8#1 = <tensor[3]>[r46C5,r46C6,r46C7];
          real r46C9#1 = RMul(vdot3AF5,r46B8);
          real r46CA#1 = RMul(vdot3AF5,r46BA);
          real r46CB#1 = RMul(vdot3AF5,r46BC);
          tensor[3] tensor46CC#1 = <tensor[3]>[r46C9,r46CA,r46CB];
          real r46CF#1 = RMul(vdot3AF7,r46AA);
          real r46D0#1 = RMul(vdot3AF7,r46AC);
          real r46D1#1 = RMul(vdot3AF7,r46AE);
          tensor[3] tensor46D2#1 = <tensor[3]>[r46CF,r46D0,r46D1];
          real r46D3#1 = RMul(vdot3AF7,r46B1);
          real r46D4#1 = RMul(vdot3AF7,r46B3);
          real r46D5#1 = RMul(vdot3AF7,r46B5);
          tensor[3] tensor46D6#1 = <tensor[3]>[r46D3,r46D4,r46D5];
          real r46D7#1 = RMul(vdot3AF7,r46B8);
          real r46D8#1 = RMul(vdot3AF7,r46BA);
          real r46D9#1 = RMul(vdot3AF7,r46BC);
          tensor[3] tensor46DA#1 = <tensor[3]>[r46D7,r46D8,r46D9];
          tensor[3] v4714#3 = VAdd<3>(tensor4215,tensor46B0);
          tensor[3] v4717#3 = VAdd<3>(tensor421C,tensor46C4);
          tensor[3] v471A#3 = VAdd<3>(tensor4223,tensor46D2);
          tensor[3] v471E#3 = VAdd<3>(tensor4229,tensor46B7);
          tensor[3] v4721#3 = VAdd<3>(tensor422D,tensor46C8);
          tensor[3] v4724#3 = VAdd<3>(tensor4231,tensor46D6);
          tensor[3] v4728#3 = VAdd<3>(tensor4237,tensor46BE);
          tensor[3] v472B#3 = VAdd<3>(tensor423B,tensor46CC);
          tensor[3] v472E#3 = VAdd<3>(tensor423F,tensor46DA);
          real r4751#3 = VIndex<3,0>(v4714);
          real r4753#1 = RMul(r4751,r3CFD);
          real r4754#3 = VIndex<3,0>(v471E);
          real r4756#1 = RMul(r4754,r3D07);
          real r4757#3 = VIndex<3,0>(v4728);
          real r4759#1 = RMul(r4757,r3D12);
          real r475A#3 = VIndex<3,0>(v4717);
          real r475C#1 = RMul(r475A,r3D1D);
          real r475D#3 = VIndex<3,0>(v4721);
          real r475F#1 = RMul(r475D,r3CFD);
          real r4760#3 = VIndex<3,0>(v472B);
          real r4762#1 = RMul(r4760,r3D25);
          real r4763#3 = VIndex<3,0>(v471A);
          real r4765#1 = RMul(r4763,r3D30);
          real r4766#3 = VIndex<3,0>(v4724);
          real r4768#1 = RMul(r4766,r3D3A);
          real r4769#3 = VIndex<3,0>(v472E);
          real r476B#1 = RMul(r4769,r3CFD);
          real r476C#1 = RAdd(r4753,r4756);
          real r476D#1 = RAdd(r476C,r4759);
          real r476E#1 = RAdd(r476D,r475C);
          real r476F#1 = RAdd(r476E,r475F);
          real r4770#1 = RAdd(r476F,r4762);
          real r4771#1 = RAdd(r4770,r4765);
          real r4772#1 = RAdd(r4771,r4768);
          real r4773#1 = RAdd(r4772,r476B);
          real r4775#1 = RMul(r4751,r3D00);
          real r4777#1 = RMul(r4754,r3D09);
          real r4779#1 = RMul(r4757,r3D16);
          real r477B#1 = RMul(r475A,r3D1F);
          real r477D#1 = RMul(r475D,r3D00);
          real r477F#1 = RMul(r4760,r3D28);
          real r4781#1 = RMul(r4763,r3D33);
          real r4783#1 = RMul(r4766,r3D3D);
          real r4785#1 = RMul(r4769,r3D00);
          real r4786#1 = RAdd(r4775,r4777);
          real r4787#1 = RAdd(r4786,r4779);
          real r4788#1 = RAdd(r4787,r477B);
          real r4789#1 = RAdd(r4788,r477D);
          real r478A#1 = RAdd(r4789,r477F);
          real r478B#1 = RAdd(r478A,r4781);
          real r478C#1 = RAdd(r478B,r4783);
          real r478D#1 = RAdd(r478C,r4785);
          real r478F#1 = RMul(r4751,r3D03);
          real r4791#1 = RMul(r4754,r3D0C);
          real r4793#1 = RMul(r4757,r3D19);
          real r4795#1 = RMul(r475A,r3D21);
          real r4797#1 = RMul(r475D,r3D03);
          real r4799#1 = RMul(r4760,r3D2B);
          real r479B#1 = RMul(r4763,r3D36);
          real r479D#1 = RMul(r4766,r3D40);
          real r479F#1 = RMul(r4769,r3D03);
          real r47A0#1 = RAdd(r478F,r4791);
          real r47A1#1 = RAdd(r47A0,r4793);
          real r47A2#1 = RAdd(r47A1,r4795);
          real r47A3#1 = RAdd(r47A2,r4797);
          real r47A4#1 = RAdd(r47A3,r4799);
          real r47A5#1 = RAdd(r47A4,r479B);
          real r47A6#1 = RAdd(r47A5,r479D);
          real r47A7#1 = RAdd(r47A6,r479F);
          tensor[3] tensor47A8#1 = <tensor[3]>[r4773,r478D,r47A7];
          real r47A9#3 = VIndex<3,1>(v4714);
          real r47AA#1 = RMul(r47A9,r3CFD);
          real r47AB#3 = VIndex<3,1>(v471E);
          real r47AC#1 = RMul(r47AB,r3D07);
          real r47AD#3 = VIndex<3,1>(v4728);
          real r47AE#1 = RMul(r47AD,r3D12);
          real r47AF#3 = VIndex<3,1>(v4717);
          real r47B0#1 = RMul(r47AF,r3D1D);
          real r47B1#3 = VIndex<3,1>(v4721);
          real r47B2#1 = RMul(r47B1,r3CFD);
          real r47B3#3 = VIndex<3,1>(v472B);
          real r47B4#1 = RMul(r47B3,r3D25);
          real r47B5#3 = VIndex<3,1>(v471A);
          real r47B6#1 = RMul(r47B5,r3D30);
          real r47B7#3 = VIndex<3,1>(v4724);
          real r47B8#1 = RMul(r47B7,r3D3A);
          real r47B9#3 = VIndex<3,1>(v472E);
          real r47BA#1 = RMul(r47B9,r3CFD);
          real r47BB#1 = RAdd(r47AA,r47AC);
          real r47BC#1 = RAdd(r47BB,r47AE);
          real r47BD#1 = RAdd(r47BC,r47B0);
          real r47BE#1 = RAdd(r47BD,r47B2);
          real r47BF#1 = RAdd(r47BE,r47B4);
          real r47C0#1 = RAdd(r47BF,r47B6);
          real r47C1#1 = RAdd(r47C0,r47B8);
          real r47C2#1 = RAdd(r47C1,r47BA);
          real r47C3#1 = RMul(r47A9,r3D00);
          real r47C4#1 = RMul(r47AB,r3D09);
          real r47C5#1 = RMul(r47AD,r3D16);
          real r47C6#1 = RMul(r47AF,r3D1F);
          real r47C7#1 = RMul(r47B1,r3D00);
          real r47C8#1 = RMul(r47B3,r3D28);
          real r47C9#1 = RMul(r47B5,r3D33);
          real r47CA#1 = RMul(r47B7,r3D3D);
          real r47CB#1 = RMul(r47B9,r3D00);
          real r47CC#1 = RAdd(r47C3,r47C4);
          real r47CD#1 = RAdd(r47CC,r47C5);
          real r47CE#1 = RAdd(r47CD,r47C6);
          real r47CF#1 = RAdd(r47CE,r47C7);
          real r47D0#1 = RAdd(r47CF,r47C8);
          real r47D1#1 = RAdd(r47D0,r47C9);
          real r47D2#1 = RAdd(r47D1,r47CA);
          real r47D3#1 = RAdd(r47D2,r47CB);
          real r47D4#1 = RMul(r47A9,r3D03);
          real r47D5#1 = RMul(r47AB,r3D0C);
          real r47D6#1 = RMul(r47AD,r3D19);
          real r47D7#1 = RMul(r47AF,r3D21);
          real r47D8#1 = RMul(r47B1,r3D03);
          real r47D9#1 = RMul(r47B3,r3D2B);
          real r47DA#1 = RMul(r47B5,r3D36);
          real r47DB#1 = RMul(r47B7,r3D40);
          real r47DC#1 = RMul(r47B9,r3D03);
          real r47DD#1 = RAdd(r47D4,r47D5);
          real r47DE#1 = RAdd(r47DD,r47D6);
          real r47DF#1 = RAdd(r47DE,r47D7);
          real r47E0#1 = RAdd(r47DF,r47D8);
          real r47E1#1 = RAdd(r47E0,r47D9);
          real r47E2#1 = RAdd(r47E1,r47DA);
          real r47E3#1 = RAdd(r47E2,r47DB);
          real r47E4#1 = RAdd(r47E3,r47DC);
          tensor[3] tensor47E5#1 = <tensor[3]>[r47C2,r47D3,r47E4];
          real r47E6#3 = VIndex<3,2>(v4714);
          real r47E7#1 = RMul(r47E6,r3CFD);
          real r47E8#3 = VIndex<3,2>(v471E);
          real r47E9#1 = RMul(r47E8,r3D07);
          real r47EA#3 = VIndex<3,2>(v4728);
          real r47EB#1 = RMul(r47EA,r3D12);
          real r47EC#3 = VIndex<3,2>(v4717);
          real r47ED#1 = RMul(r47EC,r3D1D);
          real r47EE#3 = VIndex<3,2>(v4721);
          real r47EF#1 = RMul(r47EE,r3CFD);
          real r47F0#3 = VIndex<3,2>(v472B);
          real r47F1#1 = RMul(r47F0,r3D25);
          real r47F2#3 = VIndex<3,2>(v471A);
          real r47F3#1 = RMul(r47F2,r3D30);
          real r47F4#3 = VIndex<3,2>(v4724);
          real r47F5#1 = RMul(r47F4,r3D3A);
          real r47F6#3 = VIndex<3,2>(v472E);
          real r47F7#1 = RMul(r47F6,r3CFD);
          real r47F8#1 = RAdd(r47E7,r47E9);
          real r47F9#1 = RAdd(r47F8,r47EB);
          real r47FA#1 = RAdd(r47F9,r47ED);
          real r47FB#1 = RAdd(r47FA,r47EF);
          real r47FC#1 = RAdd(r47FB,r47F1);
          real r47FD#1 = RAdd(r47FC,r47F3);
          real r47FE#1 = RAdd(r47FD,r47F5);
          real r47FF#1 = RAdd(r47FE,r47F7);
          real r4800#1 = RMul(r47E6,r3D00);
          real r4801#1 = RMul(r47E8,r3D09);
          real r4802#1 = RMul(r47EA,r3D16);
          real r4803#1 = RMul(r47EC,r3D1F);
          real r4804#1 = RMul(r47EE,r3D00);
          real r4805#1 = RMul(r47F0,r3D28);
          real r4806#1 = RMul(r47F2,r3D33);
          real r4807#1 = RMul(r47F4,r3D3D);
          real r4808#1 = RMul(r47F6,r3D00);
          real r4809#1 = RAdd(r4800,r4801);
          real r480A#1 = RAdd(r4809,r4802);
          real r480B#1 = RAdd(r480A,r4803);
          real r480C#1 = RAdd(r480B,r4804);
          real r480D#1 = RAdd(r480C,r4805);
          real r480E#1 = RAdd(r480D,r4806);
          real r480F#1 = RAdd(r480E,r4807);
          real r4810#1 = RAdd(r480F,r4808);
          real r4811#1 = RMul(r47E6,r3D03);
          real r4812#1 = RMul(r47E8,r3D0C);
          real r4813#1 = RMul(r47EA,r3D19);
          real r4814#1 = RMul(r47EC,r3D21);
          real r4815#1 = RMul(r47EE,r3D03);
          real r4816#1 = RMul(r47F0,r3D2B);
          real r4817#1 = RMul(r47F2,r3D36);
          real r4818#1 = RMul(r47F4,r3D40);
          real r4819#1 = RMul(r47F6,r3D03);
          real r481A#1 = RAdd(r4811,r4812);
          real r481B#1 = RAdd(r481A,r4813);
          real r481C#1 = RAdd(r481B,r4814);
          real r481D#1 = RAdd(r481C,r4815);
          real r481E#1 = RAdd(r481D,r4816);
          real r481F#1 = RAdd(r481E,r4817);
          real r4820#1 = RAdd(r481F,r4818);
          real r4821#1 = RAdd(r4820,r4819);
          tensor[3] tensor4822#1 = <tensor[3]>[r47FF,r4810,r4821];
          real vdot48F9#1 = VDot<3>(op1_e3_l_943E30,tensor47A8);
          real vdot48FB#1 = VDot<3>(op1_e3_l_943E30,tensor47E5);
          real vdot48FD#1 = VDot<3>(op1_e3_l_943E30,tensor4822);
          tensor[3] op1_e3_l_22248F7#2 = <tensor[3]>[vdot48F9,vdot48FB,vdot48FD];
          tensor[3] op1_e3_l_2254906#3 = VAdd<3>(op1_e3_l_22248F7,op1_e3_l_22248F7);
          tensor[3] op1_e3_l_3284909#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_2254906);
          real op1_e3_l_329490C#1 = VDot<3>(op1_e3_l_2254906,op1_e3_l_2254906);
          real r4911#3 = RDiv(_t3467,op1_e3_l_329490C);
          real r4912#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_3284909);
          real r4913#1 = RMul(r4911,r4912);
          real r4914#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_3284909);
          real r4915#1 = RMul(r4911,r4914);
          real r4916#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_3284909);
          real r4917#1 = RMul(r4911,r4916);
          tensor[3] op1_e3_l_330490F#1 = <tensor[3]>[r4913,r4915,r4917];
          tensor[3] op1_e3_l_6734922#3 = VNeg<3>(op1_e3_l_330490F);
          real op1_e3_l_6754925#1 = VDot<3>(op1_e3_l_6734922,op1_e3_l_6734922);
          real op1_e3_l_6764928#1 = Sqrt(op1_e3_l_6754925);
          real op1_e3_l_678492B#1 = RDiv(_t3467,op1_e3_l_6764928);
          tensor[3] op1_e3_l_6794930#1 = VScale<3>(op1_e3_l_678492B,op1_e3_l_6734922);
          tensor[3] op1_e3_l_6804933#1 = VNeg<3>(op1_e3_l_6794930);
          real op1_e3_l_6824936#1 = RDiv(_t3467,op1_e3_l_159457C);
          real op1_e3_l_683493B#1 = VDot<3>(op1_e3_l_6804933,op1_e3_l_1564576);
          real op1_e3_l_684493E#1 = RMul(op1_e3_l_6824936,op1_e3_l_683493B);
          real _t4941#1 = Abs<real>(op1_e3_l_684493E);
          real scomp4944#1 = MathFn<pow>(_t4941,phSp2437);
          goto JOIN4947
        JOIN4947:  preds = [ASSIGN4945,COND4575]
          real scomp4946#1 = phi(scomp4944,_t3465)
          real cmin4948#3 = VIndex<2,0>(cminmax241F);
          real cmax494A#2 = VIndex<2,1>(cminmax241F);
          tensor[3] mcol494C#1 = <tensor[3]>[_t3467,_t3467,_t3467];
          bool _t494E#1 = NEQ<real>(cmin4948,cmax494A);
          if _t494E then goto ASSIGN5D84 else goto JOIN4F36
        ASSIGN5D84:  preds = [COND4950]
          real r495B#1 = RAdd(r4051,r4068);
          real r495C#1 = RAdd(r495B,r407F);
          real r4963#1 = RAdd(r4053,r406A);
          real r4964#2 = RAdd(r4963,r4081);
          real r496B#1 = RAdd(r4055,r406C);
          real r496C#2 = RAdd(r496B,r4083);
          tensor[3] tensor496D#1 = <tensor[3]>[r495C,r4964,r496C];
          real r497C#1 = RAdd(r405A,r4071);
          real r497D#1 = RAdd(r497C,r4088);
          real r4984#1 = RAdd(r405C,r4073);
          real r4985#2 = RAdd(r4984,r408A);
          tensor[3] tensor4986#1 = <tensor[3]>[r4964,r497D,r4985];
          real r499D#1 = RAdd(r4063,r407A);
          real r499E#1 = RAdd(r499D,r4091);
          tensor[3] tensor499F#1 = <tensor[3]>[r496C,r4985,r499E];
          real r49F9#1 = RAdd(r40DD,r40E4);
          real r49FA#1 = RAdd(r49F9,r40EB);
          real r4A00#1 = RAdd(r40DF,r40E6);
          real r4A01#1 = RAdd(r4A00,r40ED);
          real r4A07#1 = RAdd(r40E1,r40E8);
          real r4A08#1 = RAdd(r4A07,r40EF);
          tensor[3] tensor4A09#1 = <tensor[3]>[r49FA,r4A01,r4A08];
          real r4A0D#1 = RAdd(r40F2,r40F6);
          real r4A0E#1 = RAdd(r4A0D,r40FA);
          real r4A12#1 = RAdd(r40E4,r40F7);
          real r4A13#1 = RAdd(r4A12,r40FB);
          real r4A17#1 = RAdd(r40F4,r40F8);
          real r4A18#1 = RAdd(r4A17,r40FC);
          tensor[3] tensor4A19#1 = <tensor[3]>[r4A0E,r4A13,r4A18];
          real r4A1D#1 = RAdd(r40FF,r4103);
          real r4A1E#1 = RAdd(r4A1D,r4107);
          real r4A22#1 = RAdd(r4100,r4104);
          real r4A23#1 = RAdd(r4A22,r4108);
          real r4A27#1 = RAdd(r40EB,r40FB);
          real r4A28#1 = RAdd(r4A27,r4109);
          tensor[3] tensor4A29#1 = <tensor[3]>[r4A1E,r4A23,r4A28];
          tensor[3] v4A68#3 = VAdd<3>(tensor496D,tensor4A09);
          tensor[3] v4A6B#3 = VAdd<3>(tensor4986,tensor4A19);
          tensor[3] v4A6E#3 = VAdd<3>(tensor499F,tensor4A29);
          real r4A7C#3 = VIndex<3,0>(v4A68);
          real r4A7D#1 = RMul(vdot3AF3,r4A7C);
          real r4A7E#3 = VIndex<3,1>(v4A68);
          real r4A7F#1 = RMul(vdot3AF3,r4A7E);
          real r4A80#3 = VIndex<3,2>(v4A68);
          real r4A81#1 = RMul(vdot3AF3,r4A80);
          tensor[3] tensor4A82#1 = <tensor[3]>[r4A7D,r4A7F,r4A81];
          real r4A83#3 = VIndex<3,0>(v4A6B);
          real r4A84#1 = RMul(vdot3AF3,r4A83);
          real r4A85#3 = VIndex<3,1>(v4A6B);
          real r4A86#1 = RMul(vdot3AF3,r4A85);
          real r4A87#3 = VIndex<3,2>(v4A6B);
          real r4A88#1 = RMul(vdot3AF3,r4A87);
          tensor[3] tensor4A89#1 = <tensor[3]>[r4A84,r4A86,r4A88];
          real r4A8A#3 = VIndex<3,0>(v4A6E);
          real r4A8B#1 = RMul(vdot3AF3,r4A8A);
          real r4A8C#3 = VIndex<3,1>(v4A6E);
          real r4A8D#1 = RMul(vdot3AF3,r4A8C);
          real r4A8E#3 = VIndex<3,2>(v4A6E);
          real r4A8F#1 = RMul(vdot3AF3,r4A8E);
          tensor[3] tensor4A90#1 = <tensor[3]>[r4A8B,r4A8D,r4A8F];
          real r4A93#1 = RMul(vdot3AF5,r4A7C);
          real r4A94#1 = RMul(vdot3AF5,r4A7E);
          real r4A95#1 = RMul(vdot3AF5,r4A80);
          tensor[3] tensor4A96#1 = <tensor[3]>[r4A93,r4A94,r4A95];
          real r4A97#1 = RMul(vdot3AF5,r4A83);
          real r4A98#1 = RMul(vdot3AF5,r4A85);
          real r4A99#1 = RMul(vdot3AF5,r4A87);
          tensor[3] tensor4A9A#1 = <tensor[3]>[r4A97,r4A98,r4A99];
          real r4A9B#1 = RMul(vdot3AF5,r4A8A);
          real r4A9C#1 = RMul(vdot3AF5,r4A8C);
          real r4A9D#1 = RMul(vdot3AF5,r4A8E);
          tensor[3] tensor4A9E#1 = <tensor[3]>[r4A9B,r4A9C,r4A9D];
          real r4AA1#1 = RMul(vdot3AF7,r4A7C);
          real r4AA2#1 = RMul(vdot3AF7,r4A7E);
          real r4AA3#1 = RMul(vdot3AF7,r4A80);
          tensor[3] tensor4AA4#1 = <tensor[3]>[r4AA1,r4AA2,r4AA3];
          real r4AA5#1 = RMul(vdot3AF7,r4A83);
          real r4AA6#1 = RMul(vdot3AF7,r4A85);
          real r4AA7#1 = RMul(vdot3AF7,r4A87);
          tensor[3] tensor4AA8#1 = <tensor[3]>[r4AA5,r4AA6,r4AA7];
          real r4AA9#1 = RMul(vdot3AF7,r4A8A);
          real r4AAA#1 = RMul(vdot3AF7,r4A8C);
          real r4AAB#1 = RMul(vdot3AF7,r4A8E);
          tensor[3] tensor4AAC#1 = <tensor[3]>[r4AA9,r4AAA,r4AAB];
          tensor[3] v4AE6#3 = VAdd<3>(tensor4215,tensor4A82);
          tensor[3] v4AE9#3 = VAdd<3>(tensor421C,tensor4A96);
          tensor[3] v4AEC#3 = VAdd<3>(tensor4223,tensor4AA4);
          tensor[3] v4AF0#3 = VAdd<3>(tensor4229,tensor4A89);
          tensor[3] v4AF3#3 = VAdd<3>(tensor422D,tensor4A9A);
          tensor[3] v4AF6#3 = VAdd<3>(tensor4231,tensor4AA8);
          tensor[3] v4AFA#3 = VAdd<3>(tensor4237,tensor4A90);
          tensor[3] v4AFD#3 = VAdd<3>(tensor423B,tensor4A9E);
          tensor[3] v4B00#3 = VAdd<3>(tensor423F,tensor4AAC);
          real r4B23#3 = VIndex<3,0>(v4AE6);
          real r4B25#1 = RMul(r4B23,r3CFD);
          real r4B26#3 = VIndex<3,0>(v4AF0);
          real r4B28#1 = RMul(r4B26,r3D07);
          real r4B29#3 = VIndex<3,0>(v4AFA);
          real r4B2B#1 = RMul(r4B29,r3D12);
          real r4B2C#3 = VIndex<3,0>(v4AE9);
          real r4B2E#1 = RMul(r4B2C,r3D1D);
          real r4B2F#3 = VIndex<3,0>(v4AF3);
          real r4B31#1 = RMul(r4B2F,r3CFD);
          real r4B32#3 = VIndex<3,0>(v4AFD);
          real r4B34#1 = RMul(r4B32,r3D25);
          real r4B35#3 = VIndex<3,0>(v4AEC);
          real r4B37#1 = RMul(r4B35,r3D30);
          real r4B38#3 = VIndex<3,0>(v4AF6);
          real r4B3A#1 = RMul(r4B38,r3D3A);
          real r4B3B#3 = VIndex<3,0>(v4B00);
          real r4B3D#1 = RMul(r4B3B,r3CFD);
          real r4B3E#1 = RAdd(r4B25,r4B28);
          real r4B3F#1 = RAdd(r4B3E,r4B2B);
          real r4B40#1 = RAdd(r4B3F,r4B2E);
          real r4B41#1 = RAdd(r4B40,r4B31);
          real r4B42#1 = RAdd(r4B41,r4B34);
          real r4B43#1 = RAdd(r4B42,r4B37);
          real r4B44#1 = RAdd(r4B43,r4B3A);
          real r4B45#1 = RAdd(r4B44,r4B3D);
          real r4B47#1 = RMul(r4B23,r3D00);
          real r4B49#1 = RMul(r4B26,r3D09);
          real r4B4B#1 = RMul(r4B29,r3D16);
          real r4B4D#1 = RMul(r4B2C,r3D1F);
          real r4B4F#1 = RMul(r4B2F,r3D00);
          real r4B51#1 = RMul(r4B32,r3D28);
          real r4B53#1 = RMul(r4B35,r3D33);
          real r4B55#1 = RMul(r4B38,r3D3D);
          real r4B57#1 = RMul(r4B3B,r3D00);
          real r4B58#1 = RAdd(r4B47,r4B49);
          real r4B59#1 = RAdd(r4B58,r4B4B);
          real r4B5A#1 = RAdd(r4B59,r4B4D);
          real r4B5B#1 = RAdd(r4B5A,r4B4F);
          real r4B5C#1 = RAdd(r4B5B,r4B51);
          real r4B5D#1 = RAdd(r4B5C,r4B53);
          real r4B5E#1 = RAdd(r4B5D,r4B55);
          real r4B5F#1 = RAdd(r4B5E,r4B57);
          real r4B61#1 = RMul(r4B23,r3D03);
          real r4B63#1 = RMul(r4B26,r3D0C);
          real r4B65#1 = RMul(r4B29,r3D19);
          real r4B67#1 = RMul(r4B2C,r3D21);
          real r4B69#1 = RMul(r4B2F,r3D03);
          real r4B6B#1 = RMul(r4B32,r3D2B);
          real r4B6D#1 = RMul(r4B35,r3D36);
          real r4B6F#1 = RMul(r4B38,r3D40);
          real r4B71#1 = RMul(r4B3B,r3D03);
          real r4B72#1 = RAdd(r4B61,r4B63);
          real r4B73#1 = RAdd(r4B72,r4B65);
          real r4B74#1 = RAdd(r4B73,r4B67);
          real r4B75#1 = RAdd(r4B74,r4B69);
          real r4B76#1 = RAdd(r4B75,r4B6B);
          real r4B77#1 = RAdd(r4B76,r4B6D);
          real r4B78#1 = RAdd(r4B77,r4B6F);
          real r4B79#1 = RAdd(r4B78,r4B71);
          tensor[3] tensor4B7A#1 = <tensor[3]>[r4B45,r4B5F,r4B79];
          real r4B7B#3 = VIndex<3,1>(v4AE6);
          real r4B7C#1 = RMul(r4B7B,r3CFD);
          real r4B7D#3 = VIndex<3,1>(v4AF0);
          real r4B7E#1 = RMul(r4B7D,r3D07);
          real r4B7F#3 = VIndex<3,1>(v4AFA);
          real r4B80#1 = RMul(r4B7F,r3D12);
          real r4B81#3 = VIndex<3,1>(v4AE9);
          real r4B82#1 = RMul(r4B81,r3D1D);
          real r4B83#3 = VIndex<3,1>(v4AF3);
          real r4B84#1 = RMul(r4B83,r3CFD);
          real r4B85#3 = VIndex<3,1>(v4AFD);
          real r4B86#1 = RMul(r4B85,r3D25);
          real r4B87#3 = VIndex<3,1>(v4AEC);
          real r4B88#1 = RMul(r4B87,r3D30);
          real r4B89#3 = VIndex<3,1>(v4AF6);
          real r4B8A#1 = RMul(r4B89,r3D3A);
          real r4B8B#3 = VIndex<3,1>(v4B00);
          real r4B8C#1 = RMul(r4B8B,r3CFD);
          real r4B8D#1 = RAdd(r4B7C,r4B7E);
          real r4B8E#1 = RAdd(r4B8D,r4B80);
          real r4B8F#1 = RAdd(r4B8E,r4B82);
          real r4B90#1 = RAdd(r4B8F,r4B84);
          real r4B91#1 = RAdd(r4B90,r4B86);
          real r4B92#1 = RAdd(r4B91,r4B88);
          real r4B93#1 = RAdd(r4B92,r4B8A);
          real r4B94#1 = RAdd(r4B93,r4B8C);
          real r4B95#1 = RMul(r4B7B,r3D00);
          real r4B96#1 = RMul(r4B7D,r3D09);
          real r4B97#1 = RMul(r4B7F,r3D16);
          real r4B98#1 = RMul(r4B81,r3D1F);
          real r4B99#1 = RMul(r4B83,r3D00);
          real r4B9A#1 = RMul(r4B85,r3D28);
          real r4B9B#1 = RMul(r4B87,r3D33);
          real r4B9C#1 = RMul(r4B89,r3D3D);
          real r4B9D#1 = RMul(r4B8B,r3D00);
          real r4B9E#1 = RAdd(r4B95,r4B96);
          real r4B9F#1 = RAdd(r4B9E,r4B97);
          real r4BA0#1 = RAdd(r4B9F,r4B98);
          real r4BA1#1 = RAdd(r4BA0,r4B99);
          real r4BA2#1 = RAdd(r4BA1,r4B9A);
          real r4BA3#1 = RAdd(r4BA2,r4B9B);
          real r4BA4#1 = RAdd(r4BA3,r4B9C);
          real r4BA5#1 = RAdd(r4BA4,r4B9D);
          real r4BA6#1 = RMul(r4B7B,r3D03);
          real r4BA7#1 = RMul(r4B7D,r3D0C);
          real r4BA8#1 = RMul(r4B7F,r3D19);
          real r4BA9#1 = RMul(r4B81,r3D21);
          real r4BAA#1 = RMul(r4B83,r3D03);
          real r4BAB#1 = RMul(r4B85,r3D2B);
          real r4BAC#1 = RMul(r4B87,r3D36);
          real r4BAD#1 = RMul(r4B89,r3D40);
          real r4BAE#1 = RMul(r4B8B,r3D03);
          real r4BAF#1 = RAdd(r4BA6,r4BA7);
          real r4BB0#1 = RAdd(r4BAF,r4BA8);
          real r4BB1#1 = RAdd(r4BB0,r4BA9);
          real r4BB2#1 = RAdd(r4BB1,r4BAA);
          real r4BB3#1 = RAdd(r4BB2,r4BAB);
          real r4BB4#1 = RAdd(r4BB3,r4BAC);
          real r4BB5#1 = RAdd(r4BB4,r4BAD);
          real r4BB6#1 = RAdd(r4BB5,r4BAE);
          tensor[3] tensor4BB7#1 = <tensor[3]>[r4B94,r4BA5,r4BB6];
          real r4BB8#3 = VIndex<3,2>(v4AE6);
          real r4BB9#1 = RMul(r4BB8,r3CFD);
          real r4BBA#3 = VIndex<3,2>(v4AF0);
          real r4BBB#1 = RMul(r4BBA,r3D07);
          real r4BBC#3 = VIndex<3,2>(v4AFA);
          real r4BBD#1 = RMul(r4BBC,r3D12);
          real r4BBE#3 = VIndex<3,2>(v4AE9);
          real r4BBF#1 = RMul(r4BBE,r3D1D);
          real r4BC0#3 = VIndex<3,2>(v4AF3);
          real r4BC1#1 = RMul(r4BC0,r3CFD);
          real r4BC2#3 = VIndex<3,2>(v4AFD);
          real r4BC3#1 = RMul(r4BC2,r3D25);
          real r4BC4#3 = VIndex<3,2>(v4AEC);
          real r4BC5#1 = RMul(r4BC4,r3D30);
          real r4BC6#3 = VIndex<3,2>(v4AF6);
          real r4BC7#1 = RMul(r4BC6,r3D3A);
          real r4BC8#3 = VIndex<3,2>(v4B00);
          real r4BC9#1 = RMul(r4BC8,r3CFD);
          real r4BCA#1 = RAdd(r4BB9,r4BBB);
          real r4BCB#1 = RAdd(r4BCA,r4BBD);
          real r4BCC#1 = RAdd(r4BCB,r4BBF);
          real r4BCD#1 = RAdd(r4BCC,r4BC1);
          real r4BCE#1 = RAdd(r4BCD,r4BC3);
          real r4BCF#1 = RAdd(r4BCE,r4BC5);
          real r4BD0#1 = RAdd(r4BCF,r4BC7);
          real r4BD1#1 = RAdd(r4BD0,r4BC9);
          real r4BD2#1 = RMul(r4BB8,r3D00);
          real r4BD3#1 = RMul(r4BBA,r3D09);
          real r4BD4#1 = RMul(r4BBC,r3D16);
          real r4BD5#1 = RMul(r4BBE,r3D1F);
          real r4BD6#1 = RMul(r4BC0,r3D00);
          real r4BD7#1 = RMul(r4BC2,r3D28);
          real r4BD8#1 = RMul(r4BC4,r3D33);
          real r4BD9#1 = RMul(r4BC6,r3D3D);
          real r4BDA#1 = RMul(r4BC8,r3D00);
          real r4BDB#1 = RAdd(r4BD2,r4BD3);
          real r4BDC#1 = RAdd(r4BDB,r4BD4);
          real r4BDD#1 = RAdd(r4BDC,r4BD5);
          real r4BDE#1 = RAdd(r4BDD,r4BD6);
          real r4BDF#1 = RAdd(r4BDE,r4BD7);
          real r4BE0#1 = RAdd(r4BDF,r4BD8);
          real r4BE1#1 = RAdd(r4BE0,r4BD9);
          real r4BE2#1 = RAdd(r4BE1,r4BDA);
          real r4BE3#1 = RMul(r4BB8,r3D03);
          real r4BE4#1 = RMul(r4BBA,r3D0C);
          real r4BE5#1 = RMul(r4BBC,r3D19);
          real r4BE6#1 = RMul(r4BBE,r3D21);
          real r4BE7#1 = RMul(r4BC0,r3D03);
          real r4BE8#1 = RMul(r4BC2,r3D2B);
          real r4BE9#1 = RMul(r4BC4,r3D36);
          real r4BEA#1 = RMul(r4BC6,r3D40);
          real r4BEB#1 = RMul(r4BC8,r3D03);
          real r4BEC#1 = RAdd(r4BE3,r4BE4);
          real r4BED#1 = RAdd(r4BEC,r4BE5);
          real r4BEE#1 = RAdd(r4BED,r4BE6);
          real r4BEF#1 = RAdd(r4BEE,r4BE7);
          real r4BF0#1 = RAdd(r4BEF,r4BE8);
          real r4BF1#1 = RAdd(r4BF0,r4BE9);
          real r4BF2#1 = RAdd(r4BF1,r4BEA);
          real r4BF3#1 = RAdd(r4BF2,r4BEB);
          tensor[3] tensor4BF4#1 = <tensor[3]>[r4BD1,r4BE2,r4BF3];
          real vdot4CCB#1 = VDot<3>(op1_e3_l_943E30,tensor4B7A);
          real vdot4CCD#1 = VDot<3>(op1_e3_l_943E30,tensor4BB7);
          real vdot4CCF#1 = VDot<3>(op1_e3_l_943E30,tensor4BF4);
          tensor[3] op1_e3_l_1434CC9#2 = <tensor[3]>[vdot4CCB,vdot4CCD,vdot4CCF];
          tensor[3] op1_e3_l_1464CD8#3 = VAdd<3>(op1_e3_l_1434CC9,op1_e3_l_1434CC9);
          tensor[3] op1_e3_l_2494CDB#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_1464CD8);
          real op1_e3_l_2504CDE#1 = VDot<3>(op1_e3_l_1464CD8,op1_e3_l_1464CD8);
          real r4CE3#3 = RDiv(_t3467,op1_e3_l_2504CDE);
          real r4CE4#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_2494CDB);
          real r4CE5#1 = RMul(r4CE3,r4CE4);
          real r4CE6#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_2494CDB);
          real r4CE7#1 = RMul(r4CE3,r4CE6);
          real r4CE8#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_2494CDB);
          real r4CE9#1 = RMul(r4CE3,r4CE8);
          tensor[3] op1_e3_l_2514CE1#1 = <tensor[3]>[r4CE5,r4CE7,r4CE9];
          tensor[3] op1_e3_l_2534CF4#1 = VNeg<3>(op1_e3_l_2514CE1);
          tensor[3] _t4CF7#3 = VAdd<3>(pos2449,op1_e3_l_2534CF4);
          real varAcc4CFD#27 = VIndex<3,0>(_t4CF7);
          real varAcc4CFE#12 = VIndex<3,1>(_t4CF7);
          real varAcc4CFF#12 = VIndex<3,2>(_t4CF7);
          real prod4D05#6 = RMul(_t3467,varAcc4CFF);
          real prod4D06#1 = RMul(_t3467,prod4D05);
          real basisEval4D07#1 = RMul(_t3467,prod4D06);
          real prod4D09#6 = RMul(varAcc4CFE,_t3467);
          real prod4D0A#1 = RMul(_t3467,prod4D09);
          real basisEval4D0B#1 = RMul(_t3467,prod4D0A);
          real prod4D0D#1 = RMul(varAcc4CFD,prod3915);
          real basisEval4D0E#1 = RMul(_t3467,prod4D0D);
          real prod24D0F#6 = RMul(varAcc4CFF,varAcc4CFF);
          real prod4D10#5 = RMul(_t3467,prod24D0F);
          real prod4D11#1 = RMul(_t3467,prod4D10);
          real basisEval4D12#1 = RMul(_t3467,prod4D11);
          real prod4D13#5 = RMul(varAcc4CFE,varAcc4CFF);
          real prod4D14#1 = RMul(_t3467,prod4D13);
          real basisEval4D15#1 = RMul(_t3467,prod4D14);
          real prod24D16#6 = RMul(varAcc4CFE,varAcc4CFE);
          real prod4D17#5 = RMul(prod24D16,_t3467);
          real prod4D18#1 = RMul(_t3467,prod4D17);
          real basisEval4D19#1 = RMul(_t3467,prod4D18);
          real prod4D1A#1 = RMul(varAcc4CFD,prod4D05);
          real basisEval4D1B#1 = RMul(_t3467,prod4D1A);
          real prod4D1C#1 = RMul(varAcc4CFD,prod4D09);
          real basisEval4D1D#1 = RMul(_t3467,prod4D1C);
          real prod24D1E#16 = RMul(varAcc4CFD,varAcc4CFD);
          real prod4D1F#1 = RMul(prod24D1E,prod3915);
          real basisEval4D20#1 = RMul(_t3467,prod4D1F);
          real prod34D21#5 = RMul(prod24D0F,varAcc4CFF);
          real prod4D22#4 = RMul(_t3467,prod34D21);
          real prod4D23#1 = RMul(_t3467,prod4D22);
          real basisEval4D24#1 = RMul(_t3467,prod4D23);
          real prod4D25#4 = RMul(varAcc4CFE,prod24D0F);
          real prod4D26#1 = RMul(_t3467,prod4D25);
          real basisEval4D27#1 = RMul(_t3467,prod4D26);
          real prod4D28#4 = RMul(prod24D16,varAcc4CFF);
          real prod4D29#1 = RMul(_t3467,prod4D28);
          real basisEval4D2A#1 = RMul(_t3467,prod4D29);
          real prod34D2B#5 = RMul(prod24D16,varAcc4CFE);
          real prod4D2C#4 = RMul(prod34D2B,_t3467);
          real prod4D2D#1 = RMul(_t3467,prod4D2C);
          real basisEval4D2E#1 = RMul(_t3467,prod4D2D);
          real prod4D2F#1 = RMul(varAcc4CFD,prod4D10);
          real basisEval4D30#1 = RMul(_t3467,prod4D2F);
          real prod4D31#1 = RMul(varAcc4CFD,prod4D13);
          real basisEval4D32#1 = RMul(_t3467,prod4D31);
          real prod4D33#1 = RMul(varAcc4CFD,prod4D17);
          real basisEval4D34#1 = RMul(_t3467,prod4D33);
          real prod4D35#1 = RMul(prod24D1E,prod4D05);
          real basisEval4D36#1 = RMul(_t3467,prod4D35);
          real prod4D37#1 = RMul(prod24D1E,prod4D09);
          real basisEval4D38#1 = RMul(_t3467,prod4D37);
          real prod34D39#11 = RMul(prod24D1E,varAcc4CFD);
          real prod4D3A#1 = RMul(prod34D39,prod3915);
          real basisEval4D3B#1 = RMul(_t3467,prod4D3A);
          real prod44D3C#4 = RMul(prod34D21,varAcc4CFF);
          real prod4D3D#3 = RMul(_t3467,prod44D3C);
          real prod4D3E#1 = RMul(_t3467,prod4D3D);
          real basisEval4D3F#1 = RMul(_t3467,prod4D3E);
          real prod4D40#3 = RMul(varAcc4CFE,prod34D21);
          real prod4D41#1 = RMul(_t3467,prod4D40);
          real basisEval4D42#1 = RMul(_t3467,prod4D41);
          real prod4D43#3 = RMul(prod24D16,prod24D0F);
          real prod4D44#1 = RMul(_t3467,prod4D43);
          real basisEval4D45#1 = RMul(_t3467,prod4D44);
          real prod4D46#3 = RMul(prod34D2B,varAcc4CFF);
          real prod4D47#1 = RMul(_t3467,prod4D46);
          real basisEval4D48#1 = RMul(_t3467,prod4D47);
          real prod44D49#4 = RMul(prod34D2B,varAcc4CFE);
          real prod4D4A#3 = RMul(prod44D49,_t3467);
          real prod4D4B#1 = RMul(_t3467,prod4D4A);
          real basisEval4D4C#1 = RMul(_t3467,prod4D4B);
          real prod4D4D#1 = RMul(varAcc4CFD,prod4D22);
          real basisEval4D4E#1 = RMul(_t3467,prod4D4D);
          real prod4D4F#1 = RMul(varAcc4CFD,prod4D25);
          real basisEval4D50#1 = RMul(_t3467,prod4D4F);
          real prod4D51#1 = RMul(varAcc4CFD,prod4D28);
          real basisEval4D52#1 = RMul(_t3467,prod4D51);
          real prod4D53#1 = RMul(varAcc4CFD,prod4D2C);
          real basisEval4D54#1 = RMul(_t3467,prod4D53);
          real prod4D55#1 = RMul(prod24D1E,prod4D10);
          real basisEval4D56#1 = RMul(_t3467,prod4D55);
          real prod4D57#1 = RMul(prod24D1E,prod4D13);
          real basisEval4D58#1 = RMul(_t3467,prod4D57);
          real prod4D59#1 = RMul(prod24D1E,prod4D17);
          real basisEval4D5A#1 = RMul(_t3467,prod4D59);
          real prod4D5B#1 = RMul(prod34D39,prod4D05);
          real basisEval4D5C#1 = RMul(_t3467,prod4D5B);
          real prod4D5D#1 = RMul(prod34D39,prod4D09);
          real basisEval4D5E#1 = RMul(_t3467,prod4D5D);
          real prod44D5F#7 = RMul(prod34D39,varAcc4CFD);
          real prod4D60#1 = RMul(prod44D5F,prod3915);
          real basisEval4D61#1 = RMul(_t3467,prod4D60);
          real prod54D62#3 = RMul(prod44D3C,varAcc4CFF);
          real prod4D63#2 = RMul(_t3467,prod54D62);
          real prod4D64#1 = RMul(_t3467,prod4D63);
          real basisEval4D65#1 = RMul(_t3467,prod4D64);
          real prod4D66#2 = RMul(varAcc4CFE,prod44D3C);
          real prod4D67#1 = RMul(_t3467,prod4D66);
          real basisEval4D68#1 = RMul(_t3467,prod4D67);
          real prod4D69#2 = RMul(prod24D16,prod34D21);
          real prod4D6A#1 = RMul(_t3467,prod4D69);
          real basisEval4D6B#1 = RMul(_t3467,prod4D6A);
          real prod4D6C#2 = RMul(prod34D2B,prod24D0F);
          real prod4D6D#1 = RMul(_t3467,prod4D6C);
          real basisEval4D6E#1 = RMul(_t3467,prod4D6D);
          real prod4D6F#2 = RMul(prod44D49,varAcc4CFF);
          real prod4D70#1 = RMul(_t3467,prod4D6F);
          real basisEval4D71#1 = RMul(_t3467,prod4D70);
          real prod54D72#3 = RMul(prod44D49,varAcc4CFE);
          real prod4D73#2 = RMul(prod54D72,_t3467);
          real prod4D74#1 = RMul(_t3467,prod4D73);
          real basisEval4D75#1 = RMul(_t3467,prod4D74);
          real prod4D76#1 = RMul(varAcc4CFD,prod4D3D);
          real basisEval4D77#1 = RMul(_t3467,prod4D76);
          real prod4D78#1 = RMul(varAcc4CFD,prod4D40);
          real basisEval4D79#1 = RMul(_t3467,prod4D78);
          real prod4D7A#1 = RMul(varAcc4CFD,prod4D43);
          real basisEval4D7B#1 = RMul(_t3467,prod4D7A);
          real prod4D7C#1 = RMul(varAcc4CFD,prod4D46);
          real basisEval4D7D#1 = RMul(_t3467,prod4D7C);
          real prod4D7E#1 = RMul(varAcc4CFD,prod4D4A);
          real basisEval4D7F#1 = RMul(_t3467,prod4D7E);
          real prod4D80#1 = RMul(prod24D1E,prod4D22);
          real basisEval4D81#1 = RMul(_t3467,prod4D80);
          real prod4D82#1 = RMul(prod24D1E,prod4D25);
          real basisEval4D83#1 = RMul(_t3467,prod4D82);
          real prod4D84#1 = RMul(prod24D1E,prod4D28);
          real basisEval4D85#1 = RMul(_t3467,prod4D84);
          real prod4D86#1 = RMul(prod24D1E,prod4D2C);
          real basisEval4D87#1 = RMul(_t3467,prod4D86);
          real prod4D88#1 = RMul(prod34D39,prod4D10);
          real basisEval4D89#1 = RMul(_t3467,prod4D88);
          real prod4D8A#1 = RMul(prod34D39,prod4D13);
          real basisEval4D8B#1 = RMul(_t3467,prod4D8A);
          real prod4D8C#1 = RMul(prod34D39,prod4D17);
          real basisEval4D8D#1 = RMul(_t3467,prod4D8C);
          real prod4D8E#1 = RMul(prod44D5F,prod4D05);
          real basisEval4D8F#1 = RMul(_t3467,prod4D8E);
          real prod4D90#1 = RMul(prod44D5F,prod4D09);
          real basisEval4D91#1 = RMul(_t3467,prod4D90);
          real prod54D92#4 = RMul(prod44D5F,varAcc4CFD);
          real prod4D93#1 = RMul(prod54D92,prod3915);
          real basisEval4D94#1 = RMul(_t3467,prod4D93);
          real prod64D95#1 = RMul(prod54D62,varAcc4CFF);
          real prod4D96#1 = RMul(_t3467,prod64D95);
          real prod4D97#1 = RMul(_t3467,prod4D96);
          real basisEval4D98#1 = RMul(_t3467,prod4D97);
          real prod4D99#1 = RMul(varAcc4CFE,prod54D62);
          real prod4D9A#1 = RMul(_t3467,prod4D99);
          real basisEval4D9B#1 = RMul(_t3467,prod4D9A);
          real prod4D9C#1 = RMul(prod24D16,prod44D3C);
          real prod4D9D#1 = RMul(_t3467,prod4D9C);
          real basisEval4D9E#1 = RMul(_t3467,prod4D9D);
          real prod4D9F#1 = RMul(prod34D2B,prod34D21);
          real prod4DA0#1 = RMul(_t3467,prod4D9F);
          real basisEval4DA1#1 = RMul(_t3467,prod4DA0);
          real prod4DA2#1 = RMul(prod44D49,prod24D0F);
          real prod4DA3#1 = RMul(_t3467,prod4DA2);
          real basisEval4DA4#1 = RMul(_t3467,prod4DA3);
          real prod4DA5#1 = RMul(prod54D72,varAcc4CFF);
          real prod4DA6#1 = RMul(_t3467,prod4DA5);
          real basisEval4DA7#1 = RMul(_t3467,prod4DA6);
          real prod64DA8#1 = RMul(prod54D72,varAcc4CFE);
          real prod4DA9#1 = RMul(prod64DA8,_t3467);
          real prod4DAA#1 = RMul(_t3467,prod4DA9);
          real basisEval4DAB#1 = RMul(_t3467,prod4DAA);
          real prod4DAC#1 = RMul(varAcc4CFD,prod4D63);
          real basisEval4DAD#1 = RMul(_t3467,prod4DAC);
          real prod4DAE#1 = RMul(varAcc4CFD,prod4D66);
          real basisEval4DAF#1 = RMul(_t3467,prod4DAE);
          real prod4DB0#1 = RMul(varAcc4CFD,prod4D69);
          real basisEval4DB1#1 = RMul(_t3467,prod4DB0);
          real prod4DB2#1 = RMul(varAcc4CFD,prod4D6C);
          real basisEval4DB3#1 = RMul(_t3467,prod4DB2);
          real prod4DB4#1 = RMul(varAcc4CFD,prod4D6F);
          real basisEval4DB5#1 = RMul(_t3467,prod4DB4);
          real prod4DB6#1 = RMul(varAcc4CFD,prod4D73);
          real basisEval4DB7#1 = RMul(_t3467,prod4DB6);
          real prod4DB8#1 = RMul(prod24D1E,prod4D3D);
          real basisEval4DB9#1 = RMul(_t3467,prod4DB8);
          real prod4DBA#1 = RMul(prod24D1E,prod4D40);
          real basisEval4DBB#1 = RMul(_t3467,prod4DBA);
          real prod4DBC#1 = RMul(prod24D1E,prod4D43);
          real basisEval4DBD#1 = RMul(_t3467,prod4DBC);
          real prod4DBE#1 = RMul(prod24D1E,prod4D46);
          real basisEval4DBF#1 = RMul(_t3467,prod4DBE);
          real prod4DC0#1 = RMul(prod24D1E,prod4D4A);
          real basisEval4DC1#1 = RMul(_t3467,prod4DC0);
          real prod4DC2#1 = RMul(prod34D39,prod4D22);
          real basisEval4DC3#1 = RMul(_t3467,prod4DC2);
          real prod4DC4#1 = RMul(prod34D39,prod4D25);
          real basisEval4DC5#1 = RMul(_t3467,prod4DC4);
          real prod4DC6#1 = RMul(prod34D39,prod4D28);
          real basisEval4DC7#1 = RMul(_t3467,prod4DC6);
          real prod4DC8#1 = RMul(prod34D39,prod4D2C);
          real basisEval4DC9#1 = RMul(_t3467,prod4DC8);
          real prod4DCA#1 = RMul(prod44D5F,prod4D10);
          real basisEval4DCB#1 = RMul(_t3467,prod4DCA);
          real prod4DCC#1 = RMul(prod44D5F,prod4D13);
          real basisEval4DCD#1 = RMul(_t3467,prod4DCC);
          real prod4DCE#1 = RMul(prod44D5F,prod4D17);
          real basisEval4DCF#1 = RMul(_t3467,prod4DCE);
          real prod4DD0#1 = RMul(prod54D92,prod4D05);
          real basisEval4DD1#1 = RMul(_t3467,prod4DD0);
          real prod4DD2#1 = RMul(prod54D92,prod4D09);
          real basisEval4DD3#1 = RMul(_t3467,prod4DD2);
          real prod64DD4#1 = RMul(prod54D92,varAcc4CFD);
          real prod4DD5#1 = RMul(prod64DD4,prod3915);
          real basisEval4DD6#1 = RMul(_t3467,prod4DD5);
          tensor[84] intermediateCons4DD7#1 = <tensor[84]>[basisEval3917,basisEval4D07,basisEval4D0B,basisEval4D0E,basisEval4D12,basisEval4D15,basisEval4D19,basisEval4D1B,basisEval4D1D,basisEval4D20,basisEval4D24,basisEval4D27,basisEval4D2A,basisEval4D2E,basisEval4D30,basisEval4D32,basisEval4D34,basisEval4D36,basisEval4D38,basisEval4D3B,basisEval4D3F,basisEval4D42,basisEval4D45,basisEval4D48,basisEval4D4C,basisEval4D4E,basisEval4D50,basisEval4D52,basisEval4D54,basisEval4D56,basisEval4D58,basisEval4D5A,basisEval4D5C,basisEval4D5E,basisEval4D61,basisEval4D65,basisEval4D68,basisEval4D6B,basisEval4D6E,basisEval4D71,basisEval4D75,basisEval4D77,basisEval4D79,basisEval4D7B,basisEval4D7D,basisEval4D7F,basisEval4D81,basisEval4D83,basisEval4D85,basisEval4D87,basisEval4D89,basisEval4D8B,basisEval4D8D,basisEval4D8F,basisEval4D91,basisEval4D94,basisEval4D98,basisEval4D9B,basisEval4D9E,basisEval4DA1,basisEval4DA4,basisEval4DA7,basisEval4DAB,basisEval4DAD,basisEval4DAF,basisEval4DB1,basisEval4DB3,basisEval4DB5,basisEval4DB7,basisEval4DB9,basisEval4DBB,basisEval4DBD,basisEval4DBF,basisEval4DC1,basisEval4DC3,basisEval4DC5,basisEval4DC7,basisEval4DC9,basisEval4DCB,basisEval4DCD,basisEval4DCF,basisEval4DD1,basisEval4DD3,basisEval4DD6];
          real probe_l_84EB4#1 = VDot<84>(dofs37BC,intermediateCons4DD7);
          real op1_e3_l_94EB7#1 = RSub(probe_l_84EB4,cmin4948);
          real op1_e3_l_104EBA#1 = RSub(cmax494A,cmin4948);
          real op1_e3_l_114EBD#1 = RDiv(op1_e3_l_94EB7,op1_e3_l_104EBA);
          real op1_e3_l_124EC0#1 = RSub(_t3467,_t3465);
          real op1_e3_l_134EC3#1 = RMul(op1_e3_l_114EBD,op1_e3_l_124EC0);
          real _t4EC6#1 = RAdd(_t3465,op1_e3_l_134EC3);
          real Mtransform4EC9#1 = Transform<IMAGE1D<double[3]>>(cmap23FF);
          real MxPos4ECB#1 = RMul(Mtransform4EC9,_t4EC6);
          real Ttranslate4ECE#1 = Translate<IMAGE1D<double[3]>>(cmap23FF);
          real imgPos4ED0#2 = RAdd(MxPos4ECB,Ttranslate4ECE);
          real nd4ED3#2 = Floor<1>(imgPos4ED0);
          real f4ED5#2 = RSub(imgPos4ED0,nd4ED3);
          int n4ED8#5 = RealToInt<1>(nd4ED3);
          bool isInside4EDC#1 = IndexInside<IMAGE1D<double[3]>,2>(n4ED8,cmap23FF);
          if isInside4EDC then goto ASSIGN5ECC else goto ASSIGN5EC4
        ASSIGN5ECC:  preds = [COND4EDE]
          int offp4EE3#3 = IMul(ilit3477,n4ED8);
          real v0_4EE4#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE3);
          int addRes4EE6#1 = IAdd(n4ED8,ilit3471);
          int offp4EE7#3 = IMul(ilit3477,addRes4EE6);
          real v1_4EE8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE7);
          tensor[2] v_4EE9#1 = <tensor[2]>[v0_4EE4,v1_4EE8];
          int offp4EEA#1 = IAdd(offp4EE3,ilit3471);
          real v0_4EEB#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEA);
          int offp4EEC#1 = IAdd(offp4EE7,ilit3471);
          real v1_4EED#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEC);
          tensor[2] v_4EEE#1 = <tensor[2]>[v0_4EEB,v1_4EED];
          int offp4EF0#1 = IAdd(offp4EE3,ilit3474);
          real v0_4EF1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF0);
          int offp4EF2#1 = IAdd(offp4EE7,ilit3474);
          real v1_4EF3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF2);
          tensor[2] v_4EF4#1 = <tensor[2]>[v0_4EF1,v1_4EF3];
          tensor[3,2] voxels4EF5#1 = <tensor[3,2]>[v_4EE9,v_4EEE,v_4EF4];
          goto JOIN4F0F
        JOIN4F0F:  preds = [ASSIGN4F0B,ASSIGN5394]
          tensor[3,2] ldvox4F0D#3 = phi(voxels4EF5,voxels537C)
          real idx4F12#1 = RSub(f4ED5,_t3467);
          tensor[2] kernX_4F10#1 = <tensor[2]>[f4ED5,idx4F12];
          tensor[2] a04F17#1 = <tensor[2]>[_t3467,_t3467];
          tensor[2] a14F18#1 = <tensor[2]>[realLit3D0E,_t3467];
          tensor[2] prod14F1D#1 = VMul<2>(kernX_4F10,a14F18);
          tensor[2] kevalX_d0_4F16#3 = VAdd<2>(a04F17,prod14F1D);
          tensor[2] projIx4F27#1 = ProjectLast<tensor[3,2],[0]>(ldvox4F0D);
          real vdot4F28#1 = VDot<2>(projIx4F27,kevalX_d0_4F16);
          tensor[2] projIx4F29#1 = ProjectLast<tensor[3,2],[1]>(ldvox4F0D);
          real vdot4F2A#1 = VDot<2>(projIx4F29,kevalX_d0_4F16);
          tensor[2] projIx4F2B#1 = ProjectLast<tensor[3,2],[2]>(ldvox4F0D);
          real vdot4F2C#1 = VDot<2>(projIx4F2B,kevalX_d0_4F16);
          tensor[3] mcol4F26#1 = <tensor[3]>[vdot4F28,vdot4F2A,vdot4F2C];
          goto JOIN4F36
        JOIN4F36:  preds = [ASSIGN4F34,COND4950]
          tensor[3] mcol4F35#3 = phi(mcol4F26,mcol494C)
          real r4F41#1 = RAdd(r4051,r4068);
          real r4F42#1 = RAdd(r4F41,r407F);
          real r4F49#1 = RAdd(r4053,r406A);
          real r4F4A#2 = RAdd(r4F49,r4081);
          real r4F51#1 = RAdd(r4055,r406C);
          real r4F52#2 = RAdd(r4F51,r4083);
          tensor[3] tensor4F53#1 = <tensor[3]>[r4F42,r4F4A,r4F52];
          real r4F62#1 = RAdd(r405A,r4071);
          real r4F63#1 = RAdd(r4F62,r4088);
          real r4F6A#1 = RAdd(r405C,r4073);
          real r4F6B#2 = RAdd(r4F6A,r408A);
          tensor[3] tensor4F6C#1 = <tensor[3]>[r4F4A,r4F63,r4F6B];
          real r4F83#1 = RAdd(r4063,r407A);
          real r4F84#1 = RAdd(r4F83,r4091);
          tensor[3] tensor4F85#1 = <tensor[3]>[r4F52,r4F6B,r4F84];
          real r4FDF#1 = RAdd(r40DD,r40E4);
          real r4FE0#1 = RAdd(r4FDF,r40EB);
          real r4FE6#1 = RAdd(r40DF,r40E6);
          real r4FE7#1 = RAdd(r4FE6,r40ED);
          real r4FED#1 = RAdd(r40E1,r40E8);
          real r4FEE#1 = RAdd(r4FED,r40EF);
          tensor[3] tensor4FEF#1 = <tensor[3]>[r4FE0,r4FE7,r4FEE];
          real r4FF3#1 = RAdd(r40F2,r40F6);
          real r4FF4#1 = RAdd(r4FF3,r40FA);
          real r4FF8#1 = RAdd(r40E4,r40F7);
          real r4FF9#1 = RAdd(r4FF8,r40FB);
          real r4FFD#1 = RAdd(r40F4,r40F8);
          real r4FFE#1 = RAdd(r4FFD,r40FC);
          tensor[3] tensor4FFF#1 = <tensor[3]>[r4FF4,r4FF9,r4FFE];
          real r5003#1 = RAdd(r40FF,r4103);
          real r5004#1 = RAdd(r5003,r4107);
          real r5008#1 = RAdd(r4100,r4104);
          real r5009#1 = RAdd(r5008,r4108);
          real r500D#1 = RAdd(r40EB,r40FB);
          real r500E#1 = RAdd(r500D,r4109);
          tensor[3] tensor500F#1 = <tensor[3]>[r5004,r5009,r500E];
          tensor[3] v504E#3 = VAdd<3>(tensor4F53,tensor4FEF);
          tensor[3] v5051#3 = VAdd<3>(tensor4F6C,tensor4FFF);
          tensor[3] v5054#3 = VAdd<3>(tensor4F85,tensor500F);
          real r5062#3 = VIndex<3,0>(v504E);
          real r5063#1 = RMul(vdot3AF3,r5062);
          real r5064#3 = VIndex<3,1>(v504E);
          real r5065#1 = RMul(vdot3AF3,r5064);
          real r5066#3 = VIndex<3,2>(v504E);
          real r5067#1 = RMul(vdot3AF3,r5066);
          tensor[3] tensor5068#1 = <tensor[3]>[r5063,r5065,r5067];
          real r5069#3 = VIndex<3,0>(v5051);
          real r506A#1 = RMul(vdot3AF3,r5069);
          real r506B#3 = VIndex<3,1>(v5051);
          real r506C#1 = RMul(vdot3AF3,r506B);
          real r506D#3 = VIndex<3,2>(v5051);
          real r506E#1 = RMul(vdot3AF3,r506D);
          tensor[3] tensor506F#1 = <tensor[3]>[r506A,r506C,r506E];
          real r5070#3 = VIndex<3,0>(v5054);
          real r5071#1 = RMul(vdot3AF3,r5070);
          real r5072#3 = VIndex<3,1>(v5054);
          real r5073#1 = RMul(vdot3AF3,r5072);
          real r5074#3 = VIndex<3,2>(v5054);
          real r5075#1 = RMul(vdot3AF3,r5074);
          tensor[3] tensor5076#1 = <tensor[3]>[r5071,r5073,r5075];
          real r5079#1 = RMul(vdot3AF5,r5062);
          real r507A#1 = RMul(vdot3AF5,r5064);
          real r507B#1 = RMul(vdot3AF5,r5066);
          tensor[3] tensor507C#1 = <tensor[3]>[r5079,r507A,r507B];
          real r507D#1 = RMul(vdot3AF5,r5069);
          real r507E#1 = RMul(vdot3AF5,r506B);
          real r507F#1 = RMul(vdot3AF5,r506D);
          tensor[3] tensor5080#1 = <tensor[3]>[r507D,r507E,r507F];
          real r5081#1 = RMul(vdot3AF5,r5070);
          real r5082#1 = RMul(vdot3AF5,r5072);
          real r5083#1 = RMul(vdot3AF5,r5074);
          tensor[3] tensor5084#1 = <tensor[3]>[r5081,r5082,r5083];
          real r5087#1 = RMul(vdot3AF7,r5062);
          real r5088#1 = RMul(vdot3AF7,r5064);
          real r5089#1 = RMul(vdot3AF7,r5066);
          tensor[3] tensor508A#1 = <tensor[3]>[r5087,r5088,r5089];
          real r508B#1 = RMul(vdot3AF7,r5069);
          real r508C#1 = RMul(vdot3AF7,r506B);
          real r508D#1 = RMul(vdot3AF7,r506D);
          tensor[3] tensor508E#1 = <tensor[3]>[r508B,r508C,r508D];
          real r508F#1 = RMul(vdot3AF7,r5070);
          real r5090#1 = RMul(vdot3AF7,r5072);
          real r5091#1 = RMul(vdot3AF7,r5074);
          tensor[3] tensor5092#1 = <tensor[3]>[r508F,r5090,r5091];
          tensor[3] v50CC#3 = VAdd<3>(tensor4215,tensor5068);
          tensor[3] v50CF#3 = VAdd<3>(tensor421C,tensor507C);
          tensor[3] v50D2#3 = VAdd<3>(tensor4223,tensor508A);
          tensor[3] v50D6#3 = VAdd<3>(tensor4229,tensor506F);
          tensor[3] v50D9#3 = VAdd<3>(tensor422D,tensor5080);
          tensor[3] v50DC#3 = VAdd<3>(tensor4231,tensor508E);
          tensor[3] v50E0#3 = VAdd<3>(tensor4237,tensor5076);
          tensor[3] v50E3#3 = VAdd<3>(tensor423B,tensor5084);
          tensor[3] v50E6#3 = VAdd<3>(tensor423F,tensor5092);
          real r5109#3 = VIndex<3,0>(v50CC);
          real r510B#1 = RMul(r5109,r3CFD);
          real r510C#3 = VIndex<3,0>(v50D6);
          real r510E#1 = RMul(r510C,r3D07);
          real r510F#3 = VIndex<3,0>(v50E0);
          real r5111#1 = RMul(r510F,r3D12);
          real r5112#3 = VIndex<3,0>(v50CF);
          real r5114#1 = RMul(r5112,r3D1D);
          real r5115#3 = VIndex<3,0>(v50D9);
          real r5117#1 = RMul(r5115,r3CFD);
          real r5118#3 = VIndex<3,0>(v50E3);
          real r511A#1 = RMul(r5118,r3D25);
          real r511B#3 = VIndex<3,0>(v50D2);
          real r511D#1 = RMul(r511B,r3D30);
          real r511E#3 = VIndex<3,0>(v50DC);
          real r5120#1 = RMul(r511E,r3D3A);
          real r5121#3 = VIndex<3,0>(v50E6);
          real r5123#1 = RMul(r5121,r3CFD);
          real r5124#1 = RAdd(r510B,r510E);
          real r5125#1 = RAdd(r5124,r5111);
          real r5126#1 = RAdd(r5125,r5114);
          real r5127#1 = RAdd(r5126,r5117);
          real r5128#1 = RAdd(r5127,r511A);
          real r5129#1 = RAdd(r5128,r511D);
          real r512A#1 = RAdd(r5129,r5120);
          real r512B#1 = RAdd(r512A,r5123);
          real r512D#1 = RMul(r5109,r3D00);
          real r512F#1 = RMul(r510C,r3D09);
          real r5131#1 = RMul(r510F,r3D16);
          real r5133#1 = RMul(r5112,r3D1F);
          real r5135#1 = RMul(r5115,r3D00);
          real r5137#1 = RMul(r5118,r3D28);
          real r5139#1 = RMul(r511B,r3D33);
          real r513B#1 = RMul(r511E,r3D3D);
          real r513D#1 = RMul(r5121,r3D00);
          real r513E#1 = RAdd(r512D,r512F);
          real r513F#1 = RAdd(r513E,r5131);
          real r5140#1 = RAdd(r513F,r5133);
          real r5141#1 = RAdd(r5140,r5135);
          real r5142#1 = RAdd(r5141,r5137);
          real r5143#1 = RAdd(r5142,r5139);
          real r5144#1 = RAdd(r5143,r513B);
          real r5145#1 = RAdd(r5144,r513D);
          real r5147#1 = RMul(r5109,r3D03);
          real r5149#1 = RMul(r510C,r3D0C);
          real r514B#1 = RMul(r510F,r3D19);
          real r514D#1 = RMul(r5112,r3D21);
          real r514F#1 = RMul(r5115,r3D03);
          real r5151#1 = RMul(r5118,r3D2B);
          real r5153#1 = RMul(r511B,r3D36);
          real r5155#1 = RMul(r511E,r3D40);
          real r5157#1 = RMul(r5121,r3D03);
          real r5158#1 = RAdd(r5147,r5149);
          real r5159#1 = RAdd(r5158,r514B);
          real r515A#1 = RAdd(r5159,r514D);
          real r515B#1 = RAdd(r515A,r514F);
          real r515C#1 = RAdd(r515B,r5151);
          real r515D#1 = RAdd(r515C,r5153);
          real r515E#1 = RAdd(r515D,r5155);
          real r515F#1 = RAdd(r515E,r5157);
          tensor[3] tensor5160#1 = <tensor[3]>[r512B,r5145,r515F];
          real r5161#3 = VIndex<3,1>(v50CC);
          real r5162#1 = RMul(r5161,r3CFD);
          real r5163#3 = VIndex<3,1>(v50D6);
          real r5164#1 = RMul(r5163,r3D07);
          real r5165#3 = VIndex<3,1>(v50E0);
          real r5166#1 = RMul(r5165,r3D12);
          real r5167#3 = VIndex<3,1>(v50CF);
          real r5168#1 = RMul(r5167,r3D1D);
          real r5169#3 = VIndex<3,1>(v50D9);
          real r516A#1 = RMul(r5169,r3CFD);
          real r516B#3 = VIndex<3,1>(v50E3);
          real r516C#1 = RMul(r516B,r3D25);
          real r516D#3 = VIndex<3,1>(v50D2);
          real r516E#1 = RMul(r516D,r3D30);
          real r516F#3 = VIndex<3,1>(v50DC);
          real r5170#1 = RMul(r516F,r3D3A);
          real r5171#3 = VIndex<3,1>(v50E6);
          real r5172#1 = RMul(r5171,r3CFD);
          real r5173#1 = RAdd(r5162,r5164);
          real r5174#1 = RAdd(r5173,r5166);
          real r5175#1 = RAdd(r5174,r5168);
          real r5176#1 = RAdd(r5175,r516A);
          real r5177#1 = RAdd(r5176,r516C);
          real r5178#1 = RAdd(r5177,r516E);
          real r5179#1 = RAdd(r5178,r5170);
          real r517A#1 = RAdd(r5179,r5172);
          real r517B#1 = RMul(r5161,r3D00);
          real r517C#1 = RMul(r5163,r3D09);
          real r517D#1 = RMul(r5165,r3D16);
          real r517E#1 = RMul(r5167,r3D1F);
          real r517F#1 = RMul(r5169,r3D00);
          real r5180#1 = RMul(r516B,r3D28);
          real r5181#1 = RMul(r516D,r3D33);
          real r5182#1 = RMul(r516F,r3D3D);
          real r5183#1 = RMul(r5171,r3D00);
          real r5184#1 = RAdd(r517B,r517C);
          real r5185#1 = RAdd(r5184,r517D);
          real r5186#1 = RAdd(r5185,r517E);
          real r5187#1 = RAdd(r5186,r517F);
          real r5188#1 = RAdd(r5187,r5180);
          real r5189#1 = RAdd(r5188,r5181);
          real r518A#1 = RAdd(r5189,r5182);
          real r518B#1 = RAdd(r518A,r5183);
          real r518C#1 = RMul(r5161,r3D03);
          real r518D#1 = RMul(r5163,r3D0C);
          real r518E#1 = RMul(r5165,r3D19);
          real r518F#1 = RMul(r5167,r3D21);
          real r5190#1 = RMul(r5169,r3D03);
          real r5191#1 = RMul(r516B,r3D2B);
          real r5192#1 = RMul(r516D,r3D36);
          real r5193#1 = RMul(r516F,r3D40);
          real r5194#1 = RMul(r5171,r3D03);
          real r5195#1 = RAdd(r518C,r518D);
          real r5196#1 = RAdd(r5195,r518E);
          real r5197#1 = RAdd(r5196,r518F);
          real r5198#1 = RAdd(r5197,r5190);
          real r5199#1 = RAdd(r5198,r5191);
          real r519A#1 = RAdd(r5199,r5192);
          real r519B#1 = RAdd(r519A,r5193);
          real r519C#1 = RAdd(r519B,r5194);
          tensor[3] tensor519D#1 = <tensor[3]>[r517A,r518B,r519C];
          real r519E#3 = VIndex<3,2>(v50CC);
          real r519F#1 = RMul(r519E,r3CFD);
          real r51A0#3 = VIndex<3,2>(v50D6);
          real r51A1#1 = RMul(r51A0,r3D07);
          real r51A2#3 = VIndex<3,2>(v50E0);
          real r51A3#1 = RMul(r51A2,r3D12);
          real r51A4#3 = VIndex<3,2>(v50CF);
          real r51A5#1 = RMul(r51A4,r3D1D);
          real r51A6#3 = VIndex<3,2>(v50D9);
          real r51A7#1 = RMul(r51A6,r3CFD);
          real r51A8#3 = VIndex<3,2>(v50E3);
          real r51A9#1 = RMul(r51A8,r3D25);
          real r51AA#3 = VIndex<3,2>(v50D2);
          real r51AB#1 = RMul(r51AA,r3D30);
          real r51AC#3 = VIndex<3,2>(v50DC);
          real r51AD#1 = RMul(r51AC,r3D3A);
          real r51AE#3 = VIndex<3,2>(v50E6);
          real r51AF#1 = RMul(r51AE,r3CFD);
          real r51B0#1 = RAdd(r519F,r51A1);
          real r51B1#1 = RAdd(r51B0,r51A3);
          real r51B2#1 = RAdd(r51B1,r51A5);
          real r51B3#1 = RAdd(r51B2,r51A7);
          real r51B4#1 = RAdd(r51B3,r51A9);
          real r51B5#1 = RAdd(r51B4,r51AB);
          real r51B6#1 = RAdd(r51B5,r51AD);
          real r51B7#1 = RAdd(r51B6,r51AF);
          real r51B8#1 = RMul(r519E,r3D00);
          real r51B9#1 = RMul(r51A0,r3D09);
          real r51BA#1 = RMul(r51A2,r3D16);
          real r51BB#1 = RMul(r51A4,r3D1F);
          real r51BC#1 = RMul(r51A6,r3D00);
          real r51BD#1 = RMul(r51A8,r3D28);
          real r51BE#1 = RMul(r51AA,r3D33);
          real r51BF#1 = RMul(r51AC,r3D3D);
          real r51C0#1 = RMul(r51AE,r3D00);
          real r51C1#1 = RAdd(r51B8,r51B9);
          real r51C2#1 = RAdd(r51C1,r51BA);
          real r51C3#1 = RAdd(r51C2,r51BB);
          real r51C4#1 = RAdd(r51C3,r51BC);
          real r51C5#1 = RAdd(r51C4,r51BD);
          real r51C6#1 = RAdd(r51C5,r51BE);
          real r51C7#1 = RAdd(r51C6,r51BF);
          real r51C8#1 = RAdd(r51C7,r51C0);
          real r51C9#1 = RMul(r519E,r3D03);
          real r51CA#1 = RMul(r51A0,r3D0C);
          real r51CB#1 = RMul(r51A2,r3D19);
          real r51CC#1 = RMul(r51A4,r3D21);
          real r51CD#1 = RMul(r51A6,r3D03);
          real r51CE#1 = RMul(r51A8,r3D2B);
          real r51CF#1 = RMul(r51AA,r3D36);
          real r51D0#1 = RMul(r51AC,r3D40);
          real r51D1#1 = RMul(r51AE,r3D03);
          real r51D2#1 = RAdd(r51C9,r51CA);
          real r51D3#1 = RAdd(r51D2,r51CB);
          real r51D4#1 = RAdd(r51D3,r51CC);
          real r51D5#1 = RAdd(r51D4,r51CD);
          real r51D6#1 = RAdd(r51D5,r51CE);
          real r51D7#1 = RAdd(r51D6,r51CF);
          real r51D8#1 = RAdd(r51D7,r51D0);
          real r51D9#1 = RAdd(r51D8,r51D1);
          tensor[3] tensor51DA#1 = <tensor[3]>[r51B7,r51C8,r51D9];
          real vdot52B1#1 = VDot<3>(op1_e3_l_943E30,tensor5160);
          real vdot52B3#1 = VDot<3>(op1_e3_l_943E30,tensor519D);
          real vdot52B5#1 = VDot<3>(op1_e3_l_943E30,tensor51DA);
          tensor[3] op1_e3_l_23152AF#2 = <tensor[3]>[vdot52B1,vdot52B3,vdot52B5];
          tensor[3] op1_e3_l_23452BE#3 = VAdd<3>(op1_e3_l_23152AF,op1_e3_l_23152AF);
          tensor[3] op1_e3_l_33752C1#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_23452BE);
          real op1_e3_l_33852C4#1 = VDot<3>(op1_e3_l_23452BE,op1_e3_l_23452BE);
          real r52C9#3 = RDiv(_t3467,op1_e3_l_33852C4);
          real r52CA#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_33752C1);
          real r52CB#1 = RMul(r52C9,r52CA);
          real r52CC#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_33752C1);
          real r52CD#1 = RMul(r52C9,r52CC);
          real r52CE#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_33752C1);
          real r52CF#1 = RMul(r52C9,r52CE);
          tensor[3] op1_e3_l_33952C7#1 = <tensor[3]>[r52CB,r52CD,r52CF];
          tensor[3] op1_e3_l_68252DA#3 = VNeg<3>(op1_e3_l_33952C7);
          real op1_e3_l_68452DD#1 = VDot<3>(op1_e3_l_68252DA,op1_e3_l_68252DA);
          real op1_e3_l_68552E0#1 = Sqrt(op1_e3_l_68452DD);
          real op1_e3_l_68752E3#1 = RDiv(_t3467,op1_e3_l_68552E0);
          tensor[3] op1_e3_l_68852E8#1 = VScale<3>(op1_e3_l_68752E3,op1_e3_l_68252DA);
          tensor[3] op1_e3_l_68952EB#1 = VNeg<3>(op1_e3_l_68852E8);
          real op1_e3_l_69052EE#2 = VDot<3>(op1_e3_l_68952EB,litwsp2425);
          real op1_e3_l_69152F1#1 = RMul(op1_e3_l_69052EE,op1_e3_l_69052EE);
          real op1_e3_l_69252F4#1 = RMul(phKd2433,op1_e3_l_69152F1);
          real op1_e3_l_69452F7#1 = RSub(rayN243D,camNearVsp2421);
          real op1_e3_l_69552FA#1 = RSub(camFarVsp2423,camNearVsp2421);
          real op1_e3_l_69652FD#1 = RDiv(op1_e3_l_69452F7,op1_e3_l_69552FA);
          tensor[3] op1_e3_l_6975300#1 = VSub<3>(mcFar241D,mcNear241B);
          tensor[3] op1_e3_l_6985303#1 = VScale<3>(op1_e3_l_69652FD,op1_e3_l_6975300);
          real op1_e3_l_6995306#3 = RAdd(phKa2431,op1_e3_l_69252F4);
          tensor[3] op1_e3_l_7005309#3 = VAdd<3>(mcNear241B,op1_e3_l_6985303);
          real r530D#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7005309);
          real r530E#1 = TensorIndex<tensor[3],[0]>(mcol4F35);
          real r530F#1 = RMul(op1_e3_l_6995306,r530D);
          real r5310#1 = RMul(r530F,r530E);
          real r5311#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7005309);
          real r5312#1 = TensorIndex<tensor[3],[1]>(mcol4F35);
          real r5313#1 = RMul(op1_e3_l_6995306,r5311);
          real r5314#1 = RMul(r5313,r5312);
          real r5315#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7005309);
          real r5316#1 = TensorIndex<tensor[3],[2]>(mcol4F35);
          real r5317#1 = RMul(op1_e3_l_6995306,r5315);
          real r5318#1 = RMul(r5317,r5316);
          tensor[3] op1_e3_l_701530C#1 = <tensor[3]>[r5310,r5314,r5318];
          real r5329#1 = RMul(phKs2435,scomp4946);
          real r532A#3 = RMul(r5329,_t3467);
          tensor[3] op1_e3_l_7025327#1 = <tensor[3]>[r532A,r532A,r532A];
          real op1_e3_l_7035338#2 = RSub(_t3467,_t4571);
          tensor[3] op1_e3_l_704533B#3 = VAdd<3>(op1_e3_l_701530C,op1_e3_l_7025327);
          real r533F#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_704533B);
          real r5340#3 = RMul(transp243B,op1_e3_l_7035338);
          real r5341#1 = RMul(r5340,r533F);
          real r5342#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_704533B);
          real r5343#1 = RMul(r5340,r5342);
          real r5344#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_704533B);
          real r5345#1 = RMul(r5340,r5344);
          tensor[3] op1_e3_l_705533E#1 = <tensor[3]>[r5341,r5343,r5345];
          tensor[3] rgb534F#2 = VAdd<3>(rgb2439,op1_e3_l_705533E);
          real op1_e3_l_55352#1 = RSub(_t3467,op1_e3_l_7035338);
          real transp5355#2 = RMul(transp243B,op1_e3_l_55352);
          bool _t5358#1 = LT<real>(transp5355,transp0240F);
          if _t5358 then goto SAVE535B else goto JOIN5360
        SAVE535B:  preds = [COND535A]
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = _t3465;
          stabilize
          goto JOIN5360
        JOIN5360:  preds = [*STABILIZE535E,COND535A]
          real transp535F#1 = phi(transp5355)
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = transp535F;
          active
        ASSIGN5EC4:  preds = [COND4EDE]
          int ix5367#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,n4ED8);
          int offp5369#3 = IMul(ilit3477,ix5367);
          real v0_536A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5369);
          int addRes536C#1 = IAdd(n4ED8,ilit3471);
          int ix536D#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,addRes536C);
          int offp536E#3 = IMul(ilit3477,ix536D);
          real v1_536F#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp536E);
          tensor[2] v_5370#1 = <tensor[2]>[v0_536A,v1_536F];
          int offp5371#1 = IAdd(offp5369,ilit3471);
          real v0_5372#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5371);
          int offp5373#1 = IAdd(offp536E,ilit3471);
          real v1_5374#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5373);
          tensor[2] v_5375#1 = <tensor[2]>[v0_5372,v1_5374];
          int offp5377#1 = IAdd(offp5369,ilit3474);
          real v0_5378#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5377);
          int offp5379#1 = IAdd(offp536E,ilit3474);
          real v1_537A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5379);
          tensor[2] v_537B#1 = <tensor[2]>[v0_5378,v1_537A];
          tensor[3,2] voxels537C#1 = <tensor[3,2]>[v_5370,v_5375,v_537B];
          goto JOIN4F0F
        ASSIGN5396:  preds = [COND3450]
          bool _t3454#1 = false;
          goto JOIN3455
        ASSIGN5397:  preds = [COND2CEB]
          bool _t3457#1 = false;
          goto JOIN3458
        ASSIGN5398:  preds = [COND2CE6]
          bool _t345A#1 = false;
          goto JOIN345B
        ASSIGN5399:  preds = [COND2452]
          bool _t345D#1 = false;
          goto JOIN345E
    end update
    method stabilize
        ENTRY539A:  preds = []
          tensor[4] rgba539B#1 = self.rgba;
          tensor[3] rgb539D#3 = self.rgb;
          real transp539F#2 = self.transp;
          real _t53A1#2 = 0.1e1;
          bool _t53A3#1 = LT<real>(transp539F,_t53A1);
          if _t53A3 then goto ASSIGN53A8 else goto JOIN53BB
        ASSIGN53A8:  preds = [COND53A5]
          real aa53A6#4 = RSub(_t53A1,transp539F);
          real _t53A9#1 = VIndex<3,0>(rgb539D);
          real _t53AB#1 = RDiv(_t53A9,aa53A6);
          real _t53AE#1 = VIndex<3,1>(rgb539D);
          real _t53B0#1 = RDiv(_t53AE,aa53A6);
          real _t53B3#1 = VIndex<3,2>(rgb539D);
          real _t53B5#1 = RDiv(_t53B3,aa53A6);
          tensor[4] rgba53B8#1 = <tensor[4]>[_t53AB,_t53B0,_t53B5,aa53A6];
          goto JOIN53BB
        JOIN53BB:  preds = [ASSIGN53B9,COND53A5]
          tensor[4] rgba53BA#1 = phi(rgba53B8,rgba539B)
          self.rgba = rgba53BA;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY53BE:  preds = []
      int iresU53BF#1 = globals.iresU2121;
      int iresV53C1#1 = globals.iresV2122;
      int _t53C3#2 = 0;
      int _t53C5#2 = 1;
      int _t53C7#1 = ISub(iresV53C1,_t53C5);
      int[] _t53C9#1 = Range(_t53C3,_t53C7);
    FOREACH53CC:  preds = [ASSIGN53CA,NEXT53D5]
      foreach (vi53CB in _t53C9) on exit goto RETURN53D6
      int _t53CD#1 = ISub(iresU53BF,_t53C5);
      int[] _t53CF#1 = Range(_t53C3,_t53CD);
    FOREACH53D2:  preds = [ASSIGN53D0,NEXT53D4]
      foreach (ui53D1 in _t53CF) on exit goto NEXT53D5
      new ray(ui53D1,vi53CB);
      goto FOREACH53D2
    NEXT53D5:  preds = [FOREACH53D2]
      goto FOREACH53CC
    RETURN53D6:  preds = [FOREACH53CC]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2115 (block) = <no-default>
  input 0space04D7_intermedateGlobal2116 (space) = <no-default>
  input 0U04D9_intermedateGlobal2117 (U) = <no-default>
  input cellChoice2118 (cellChoice) = <no-default>
  input cmap2119 (cmap) = image("cmap.nrrd")
  input camEye211A (camEye) = <default>
  input camAt211B (camAt) = <default>
  input camUp211C (camUp) = <default>
  input camNear211D (camNear) = <default>
  input camFar211E (camFar) = <default>
  input camFOV211F (camFOV) = <default>
  input camOrtho2120 (camOrtho) = <default>
  input iresU2121 (iresU) = <default>
  input iresV2122 (iresV) = <default>
  input rayStep2123 (rayStep) = <default>
  input refStep2124 (refStep) = <default>
  input transp02125 (transp0) = <default>
  input thick2126 (thick) = <default>
  input fStrTh2127 (fStrTh) = <default>
  input fMaskTh2128 (fMaskTh) = <default>
  input fBias2129 (fBias) = <default>
  input maxAlpha212A (maxAlpha) = <default>
  input light212B (light) = <default>
  input phong212C (phong) = <default>
  input mcNear212D (mcNear) = <default>
  input mcFar212E (mcFar) = <default>
  input litdir212F (litdir) = <default>
  input cminmax2130 (cminmax) = <default>
  global tensor[3] camN2131
  global tensor[3] camU2132
  global tensor[3] camV2133
  global real camDist2134
  global real camVmax2135
  global real camUmax2136
  global real camNearVsp2137
  global real camFarVsp2138
  global tensor[3] litwsp2139
  global int _t213A
  global femData:Space _tX213B
  global femData:FemFunc _tXX213C
## functions
## input initialization
  ENTRY213F:  preds = []
    real _t2140#13 = 0.e0;
    real _t2142#1 = -0.2e1;
    tensor[3] camEye2144#1 = <tensor[3]>[_t2140,_t2142,_t2140];
    globals.camEye211A = camEye2144;
    tensor[3] camAt2147#1 = <tensor[3]>[_t2140,_t2140,_t2140];
    globals.camAt211B = camAt2147;
    real _t214A#5 = 0.1e1;
    tensor[3] camUp214C#1 = <tensor[3]>[_t2140,_t2140,_t214A];
    globals.camUp211C = camUp214C;
    real camNear214F#1 = -0.4e1;
    globals.camNear211D = camNear214F;
    real camFar2152#1 = 0.4e1;
    globals.camFar211E = camFar2152;
    real camFOV2155#1 = 0.1e2;
    globals.camFOV211F = camFOV2155;
    bool camOrtho2158#2 = false;
    globals.camOrtho2120 = camOrtho2158;
    int iresU215B#2 = 100;
    globals.iresU2121 = iresU215B;
    globals.iresV2122 = iresU215B;
    real rayStep215F#2 = 0.1e-3;
    globals.rayStep2123 = rayStep215F;
    globals.refStep2124 = rayStep215F;
    real transp02163#1 = 0.5e-2;
    globals.transp02125 = transp02163;
    real thick2166#1 = 0.1e-1;
    globals.thick2126 = thick2166;
    globals.fStrTh2127 = _t2140;
    globals.fMaskTh2128 = _t2140;
    real fBias216B#2 = 0.1e0;
    globals.fBias2129 = fBias216B;
    globals.maxAlpha212A = _t214A;
    globals.light212B = camOrtho2158;
    real _t2170#1 = 0.7e0;
    real _t2172#1 = 0.2e0;
    real _t2174#1 = 0.1e3;
    tensor[4] phong2176#1 = <tensor[4]>[fBias216B,_t2170,_t2172,_t2174];
    globals.phong212C = phong2176;
    tensor[3] mcNear2179#2 = <tensor[3]>[_t214A,_t214A,_t214A];
    globals.mcNear212D = mcNear2179;
    globals.mcFar212E = mcNear2179;
    real _t217D#1 = -0.1e1;
    tensor[3] litdir217F#1 = <tensor[3]>[_t2140,_t217D,_t2140];
    globals.litdir212F = litdir217F;
    tensor[2] cminmax2182#1 = <tensor[2]>[_t2140,_t2140];
    globals.cminmax2130 = cminmax2182;
    return
## global-variable initialization
  ENTRY2186:  preds = []
    femData:Mesh block2187#3 = globals.block2115;
    femData:Space 0space04D7_intermedateGlobal2189#1 = globals.0space04D7_intermedateGlobal2116;
    femData:FemFunc 0U04D9_intermedateGlobal218B#1 = globals.0U04D9_intermedateGlobal2117;
    int cellChoice218D#1 = globals.cellChoice2118;
    tensor[3] camEye2191#1 = globals.camEye211A;
    tensor[3] camAt2193#1 = globals.camAt211B;
    tensor[3] camUp2195#3 = globals.camUp211C;
    real camNear2197#1 = globals.camNear211D;
    real camFar2199#1 = globals.camFar211E;
    real camFOV219B#1 = globals.camFOV211F;
    int iresU219D#1 = globals.iresU2121;
    int iresV219F#1 = globals.iresV2122;
    tensor[3] litdir21A1#5 = globals.litdir212F;
    int _t21A3#1 = 0;
    int _t21A5#1 = 1;
    int _t21A7#1 = ExtractFemItem<int,NumCell(Mesh)>(block2187);
    int _t21A9#1 = ISub(_t21A7,_t21A5);
    int[] _t21AB#1 = Range(_t21A3,_t21A9);
    femData:MeshCell[] _t21AD#1 = <femData:MeshCell[]>{};
  FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B6]
    foreach (_t21AF in _t21AB) on exit goto ASSIGN21B8
      femData:MeshCell[] _t21B4#2 = phi(_t21AD,_t21B3)
    femData:MeshCell _t21B1#1 = LoadFem<femData:MeshCell>(block2187,_t21AF);
    femData:MeshCell[] _t21B3#1 = Append<femData:MeshCell>(_t21B4,_t21B1);
    goto FOREACH21B0
  ASSIGN21B8:  preds = [FOREACH21B0]
    femData:Space space21B7#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal2189,block2187);
    femData:FemFunc U21B9#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal218B,space21B7);
    femData:MeshCell c121BB#1 = Subscript<femData:MeshCell[]>(_t21B4,cellChoice218D);
    int _t21BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c121BB);
    femData:FuncCell _t21BF#2 = LoadFem<femData:FuncCell>(U21B9,_t21BD);
    femData:FemFunc _t21C1#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t21BF);
    femData:Space _t21C3#1 = ExtractFem<femData:Space,femData:FemFunc>(_t21C1);
    int _t21C5#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t21BF);
    tensor[3] op1_e3_l_421CB#9 = VSub<3>(camAt2193,camEye2191);
    real op1_e3_l_621CE#1 = VDot<3>(op1_e3_l_421CB,op1_e3_l_421CB);
    real op1_e3_l_721D1#6 = Sqrt(op1_e3_l_621CE);
    real realLit21D5#9 = 0.1e1;
    real op1_e3_l_921D4#6 = RDiv(realLit21D5,op1_e3_l_721D1);
    tensor[3] camN21D9#4 = VScale<3>(op1_e3_l_921D4,op1_e3_l_421CB);
    globals.camN2131 = camN21D9;
    real realLit21DE#6 = 0.e0;
    real r21DF#3 = TensorIndex<tensor[3],[0]>(camUp2195);
    real r21E0#3 = RMul(realLit21DE,r21DF);
    real r21E1#3 = TensorIndex<tensor[3],[1]>(camUp2195);
    real r21E2#3 = RMul(realLit21DE,r21E1);
    real r21E3#3 = TensorIndex<tensor[3],[2]>(camUp2195);
    real r21E4#5 = RMul(realLit21DE,r21E3);
    real r21E5#3 = RAdd(r21E0,r21E2);
    real r21E6#3 = RAdd(r21E5,r21E4);
    real r21E8#1 = RMul(realLit21D5,r21E3);
    real r21E9#1 = RAdd(r21E5,r21E8);
    real realLit21EA#6 = -0.1e1;
    real r21EB#1 = RMul(realLit21EA,r21E1);
    real r21EC#1 = RAdd(r21E0,r21EB);
    real r21ED#1 = RAdd(r21EC,r21E4);
    tensor[3] tensor21EE#1 = <tensor[3]>[r21E6,r21E9,r21ED];
    real r21EF#1 = RMul(realLit21EA,r21E3);
    real r21F0#1 = RAdd(r21E5,r21EF);
    real r21F1#1 = RMul(realLit21D5,r21DF);
    real r21F2#1 = RAdd(r21F1,r21E2);
    real r21F3#1 = RAdd(r21F2,r21E4);
    tensor[3] tensor21F4#1 = <tensor[3]>[r21F0,r21E6,r21F3];
    real r21F5#1 = RMul(realLit21D5,r21E1);
    real r21F6#1 = RAdd(r21E0,r21F5);
    real r21F7#1 = RAdd(r21F6,r21E4);
    real r21F8#1 = RMul(realLit21EA,r21DF);
    real r21F9#1 = RAdd(r21F8,r21E2);
    real r21FA#1 = RAdd(r21F9,r21E4);
    tensor[3] tensor21FB#1 = <tensor[3]>[r21F7,r21FA,r21E6];
    real vdot221E#4 = VDot<3>(op1_e3_l_421CB,tensor21EE);
    real vdot2220#4 = VDot<3>(op1_e3_l_421CB,tensor21F4);
    real vdot2222#4 = VDot<3>(op1_e3_l_421CB,tensor21FB);
    tensor[3] op1_e3_l_17221C#3 = <tensor[3]>[vdot221E,vdot2220,vdot2222];
    real op1_e3_l_34222B#1 = VDot<3>(op1_e3_l_17221C,op1_e3_l_17221C);
    real r222F#1 = RMul(op1_e3_l_921D4,op1_e3_l_921D4);
    real op1_e3_l_35222E#1 = RMul(r222F,op1_e3_l_34222B);
    real op1_e3_l_362233#1 = Sqrt(op1_e3_l_35222E);
    tensor[3] op1_e3_l_372236#1 = VScale<3>(op1_e3_l_921D4,op1_e3_l_17221C);
    real op1_e3_l_382239#2 = RDiv(realLit21D5,op1_e3_l_362233);
    tensor[3] camU223E#4 = VScale<3>(op1_e3_l_382239,op1_e3_l_372236);
    globals.camU2132 = camU223E;
    real r2245#3 = RMul(realLit21DE,vdot221E);
    real r2247#3 = RMul(realLit21DE,vdot2220);
    real r2249#5 = RMul(realLit21DE,vdot2222);
    real r224A#3 = RAdd(r2245,r2247);
    real r224B#3 = RAdd(r224A,r2249);
    real r224D#1 = RMul(realLit21D5,vdot2222);
    real r224E#1 = RAdd(r224A,r224D);
    real r2250#1 = RMul(realLit21EA,vdot2220);
    real r2251#1 = RAdd(r2245,r2250);
    real r2252#1 = RAdd(r2251,r2249);
    tensor[3] tensor2253#1 = <tensor[3]>[r224B,r224E,r2252];
    real r2254#1 = RMul(realLit21EA,vdot2222);
    real r2255#1 = RAdd(r224A,r2254);
    real r2256#1 = RMul(realLit21D5,vdot221E);
    real r2257#1 = RAdd(r2256,r2247);
    real r2258#1 = RAdd(r2257,r2249);
    tensor[3] tensor2259#1 = <tensor[3]>[r2255,r224B,r2258];
    real r225A#1 = RMul(realLit21D5,vdot2220);
    real r225B#1 = RAdd(r2245,r225A);
    real r225C#1 = RAdd(r225B,r2249);
    real r225D#1 = RMul(realLit21EA,vdot221E);
    real r225E#1 = RAdd(r225D,r2247);
    real r225F#1 = RAdd(r225E,r2249);
    tensor[3] tensor2260#1 = <tensor[3]>[r225C,r225F,r224B];
    real vdot2283#1 = VDot<3>(op1_e3_l_421CB,tensor2253);
    real vdot2285#1 = VDot<3>(op1_e3_l_421CB,tensor2259);
    real vdot2287#1 = VDot<3>(op1_e3_l_421CB,tensor2260);
    tensor[3] op1_e3_l_472281#1 = <tensor[3]>[vdot2283,vdot2285,vdot2287];
    tensor[3] op1_e3_l_502290#3 = VScale<3>(op1_e3_l_921D4,op1_e3_l_472281);
    real r2294#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_502290);
    real r2295#3 = RMul(op1_e3_l_921D4,op1_e3_l_382239);
    real r2296#2 = RMul(r2295,r2294);
    real r2297#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_502290);
    real r2298#2 = RMul(r2295,r2297);
    real r2299#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_502290);
    real r229A#2 = RMul(r2295,r2299);
    tensor[3] camV2293#1 = <tensor[3]>[r2296,r2298,r229A];
    globals.camV2133 = camV2293;
    globals.camDist2134 = op1_e3_l_721D1;
    real _t22A6#1 = 0.314159265358979323846264338327950288e1;
    real _t22A8#1 = 0.36e3;
    real op1_e3_l_522AA#1 = RMul(camFOV219B,_t22A6);
    real op1_e3_l_622AD#1 = RDiv(op1_e3_l_522AA,_t22A8);
    real op1_e3_l_1022B0#2 = Tan(op1_e3_l_622AD);
    real camVmax22B3#1 = RMul(op1_e3_l_1022B0,op1_e3_l_721D1);
    globals.camVmax2135 = camVmax22B3;
    real _t22B7#1 = IntToReal(iresU219D);
    real _t22B9#1 = IntToReal(iresV219F);
    real r22BC#1 = RMul(_t22B7,op1_e3_l_1022B0);
    real op1_e3_l_1422BB#1 = RMul(r22BC,op1_e3_l_721D1);
    real camUmax22C0#1 = RDiv(op1_e3_l_1422BB,_t22B9);
    globals.camUmax2136 = camUmax22C0;
    real camNearVsp22C4#1 = RAdd(camNear2197,op1_e3_l_721D1);
    globals.camNearVsp2137 = camNearVsp22C4;
    real camFarVsp22C8#1 = RAdd(camFar2199,op1_e3_l_721D1);
    globals.camFarVsp2138 = camFarVsp22C8;
    real op1_e3_l_322CE#1 = VDot<3>(litdir21A1,litdir21A1);
    real op1_e3_l_422D1#1 = Sqrt(op1_e3_l_322CE);
    real op1_e3_l_522D4#1 = RDiv(realLit21D5,op1_e3_l_422D1);
    real r22DA#1 = VIndex<3,0>(camU223E);
    real r22DB#3 = TensorIndex<tensor[3],[0]>(litdir21A1);
    real r22DC#1 = RMul(r22DA,r22DB);
    real r22DE#3 = TensorIndex<tensor[3],[1]>(litdir21A1);
    real r22DF#1 = RMul(r2296,r22DE);
    real r22E0#1 = VIndex<3,0>(camN21D9);
    real r22E1#3 = TensorIndex<tensor[3],[2]>(litdir21A1);
    real r22E2#1 = RMul(r22E0,r22E1);
    real r22E3#1 = RAdd(r22DC,r22DF);
    real r22E4#1 = RAdd(r22E3,r22E2);
    real r22E5#1 = VIndex<3,1>(camU223E);
    real r22E6#1 = RMul(r22E5,r22DB);
    real r22E8#1 = RMul(r2298,r22DE);
    real r22E9#1 = VIndex<3,1>(camN21D9);
    real r22EA#1 = RMul(r22E9,r22E1);
    real r22EB#1 = RAdd(r22E6,r22E8);
    real r22EC#1 = RAdd(r22EB,r22EA);
    real r22ED#1 = VIndex<3,2>(camU223E);
    real r22EE#1 = RMul(r22ED,r22DB);
    real r22F0#1 = RMul(r229A,r22DE);
    real r22F1#1 = VIndex<3,2>(camN21D9);
    real r22F2#1 = RMul(r22F1,r22E1);
    real r22F3#1 = RAdd(r22EE,r22F0);
    real r22F4#1 = RAdd(r22F3,r22F2);
    tensor[3] op1_e3_l_622D9#1 = <tensor[3]>[r22E4,r22EC,r22F4];
    tensor[3] litwsp2312#1 = VScale<3>(op1_e3_l_522D4,op1_e3_l_622D9);
    globals.litwsp2139 = litwsp2312;
    globals._t213A = _t21C5;
    globals._tX213B = _t21C3;
    globals._tXX213C = _t21C1;
    return
## strand
  strand ray (int ui231C#1, int vi231D#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY232E:  preds = []
        tensor[3] camEye232F#1 = globals.camEye211A;
        bool camOrtho2331#2 = globals.camOrtho2120;
        int iresU2333#1 = globals.iresU2121;
        int iresV2335#1 = globals.iresV2122;
        real rayStep2337#1 = globals.rayStep2123;
        real refStep2339#1 = globals.refStep2124;
        tensor[4] phong233B#4 = globals.phong212C;
        tensor[3] camN233D#1 = globals.camN2131;
        tensor[3] camU233F#1 = globals.camU2132;
        tensor[3] camV2341#1 = globals.camV2133;
        real camDist2343#1 = globals.camDist2134;
        real camVmax2345#2 = globals.camVmax2135;
        real camUmax2347#2 = globals.camUmax2136;
        real camNearVsp2349#1 = globals.camNearVsp2137;
        real _t234B#4 = -0.5e0;
        real _t234D#1 = IntToReal(ui231C);
        real _t234F#1 = IntToReal(iresU2333);
        real _t2351#2 = 0.5e0;
        real op1_e3_l_62353#1 = RSub(_t234F,_t2351);
        real op1_e3_l_72356#1 = RSub(_t234D,_t234B);
        real op1_e3_l_82359#1 = RSub(op1_e3_l_62353,_t234B);
        real op1_e3_l_9235C#2 = RNeg(camUmax2347);
        real op1_e3_l_10235F#1 = RDiv(op1_e3_l_72356,op1_e3_l_82359);
        real op1_e3_l_112362#1 = RSub(camUmax2347,op1_e3_l_9235C);
        real op1_e3_l_132365#1 = RMul(op1_e3_l_10235F,op1_e3_l_112362);
        real rayU2368#2 = RAdd(op1_e3_l_9235C,op1_e3_l_132365);
        real _t236B#1 = IntToReal(vi231D);
        real _t236D#1 = IntToReal(iresV2335);
        real op1_e3_l_6236F#1 = RSub(_t236D,_t2351);
        real op1_e3_l_72372#1 = RSub(_t236B,_t234B);
        real op1_e3_l_82375#1 = RSub(op1_e3_l_6236F,_t234B);
        real op1_e3_l_92378#2 = RNeg(camVmax2345);
        real op1_e3_l_10237B#1 = RDiv(op1_e3_l_72372,op1_e3_l_82375);
        real op1_e3_l_11237E#1 = RSub(camVmax2345,op1_e3_l_92378);
        real op1_e3_l_132381#1 = RMul(op1_e3_l_10237B,op1_e3_l_11237E);
        real rayV2384#2 = RAdd(op1_e3_l_92378,op1_e3_l_132381);
        tensor[3] op1_e3_l_322396#1 = VScale<3>(rayU2368,camU233F);
        tensor[3] op1_e3_l_332399#1 = VScale<3>(rayV2384,camV2341);
        tensor[3] UV239C#5 = VAdd<3>(op1_e3_l_322396,op1_e3_l_332399);
        if camOrtho2331 then goto JOIN23A2 else goto ASSIGN23FC
      JOIN23A2:  preds = [COND239F,ASSIGN23FD]
        tensor[3] _t23A0#1 = phi(UV239C,_t23A1)
        tensor[3] rayOrig23A3#1 = VAdd<3>(camEye232F,_t23A0);
        if camOrtho2331 then goto ASSIGN23A8 else goto ASSIGN23F2
      ASSIGN23A8:  preds = [COND23A6]
        real _t23A7#3 = 0.e0;
        tensor[3] _t23A9#1 = <tensor[3]>[_t23A7,_t23A7,_t23A7];
        goto JOIN23AD
      JOIN23AD:  preds = [ASSIGN23AA,ASSIGN23FA]
        tensor[3] _t23AB#1 = phi(_t23A9,_t23AC)
        tensor[3] rayVec23AE#4 = VAdd<3>(camN233D,_t23AB);
        real op1_e3_l_623B1#1 = VDot<3>(rayVec23AE,rayVec23AE);
        real op1_e3_l_723B4#2 = Sqrt(op1_e3_l_623B1);
        real op1_e3_l_823B7#1 = RMul(rayStep2337,op1_e3_l_723B4);
        real alphaFix23BA#1 = RDiv(op1_e3_l_823B7,refStep2339);
        real realLit23BE#2 = 0.1e1;
        real op1_e3_l_923BD#1 = RDiv(realLit23BE,op1_e3_l_723B4);
        tensor[3] op1_e3_l_1023C2#1 = VScale<3>(op1_e3_l_923BD,rayVec23AE);
        tensor[3] eyeDir23C5#1 = VNeg<3>(op1_e3_l_1023C2);
        real phKa23C8#1 = VIndex<4,0>(phong233B);
        real phKd23CA#1 = VIndex<4,1>(phong233B);
        real phKs23CC#1 = VIndex<4,2>(phong233B);
        real phSp23CE#1 = VIndex<4,3>(phong233B);
        real _t23D0#8 = 0.e0;
        tensor[4] rgba23D2#1 = <tensor[4]>[_t23D0,_t23D0,_t23D0,_t23D0];
        tensor[3] rgb23D4#1 = <tensor[3]>[_t23D0,_t23D0,_t23D0];
        self.rayU = rayU2368;
        self.rayV = rayV2384;
        self.rayN = camNearVsp2349;
        self.UV = UV239C;
        self.rayOrig = rayOrig23A3;
        self.rayVec = rayVec23AE;
        self.alphaFix = alphaFix23BA;
        self.eyeDir = eyeDir23C5;
        self.phKa = phKa23C8;
        self.phKd = phKd23CA;
        self.phKs = phKs23CC;
        self.phSp = phSp23CE;
        self.rgba = rgba23D2;
        self.raw = _t23D0;
        self.rgb = rgb23D4;
        self.transp = realLit23BE;
        return
      ASSIGN23F2:  preds = [COND23A6]
        real realLit23E9#1 = 0.1e1;
        real r23EA#3 = RDiv(realLit23E9,camDist2343);
        real r23EB#1 = TensorIndex<tensor[3],[0]>(UV239C);
        real r23EC#1 = RMul(r23EA,r23EB);
        real r23ED#1 = TensorIndex<tensor[3],[1]>(UV239C);
        real r23EE#1 = RMul(r23EA,r23ED);
        real r23EF#1 = TensorIndex<tensor[3],[2]>(UV239C);
        real r23F0#1 = RMul(r23EA,r23EF);
        tensor[3] _t23AC#1 = <tensor[3]>[r23EC,r23EE,r23F0];
        goto JOIN23AD
      ASSIGN23FC:  preds = [COND239F]
        real _t23FB#3 = 0.e0;
        tensor[3] _t23A1#1 = <tensor[3]>[_t23FB,_t23FB,_t23FB];
        goto JOIN23A2
    end state init
    method update
        ENTRY23FE:  preds = []
          image(IMAGE1D<double[3]>) cmap23FF#17 = globals.cmap2119;
          int _t2401#2 = globals._t213A;
          femData:Space _t2403#168 = globals._tX213B;
          femData:FemFunc _t2405#168 = globals._tXX213C;
          femData:Mesh block240B#1 = globals.block2115;
          real rayStep240D#1 = globals.rayStep2123;
          real transp0240F#1 = globals.transp02125;
          real thick2411#1 = globals.thick2126;
          real fStrTh2413#1 = globals.fStrTh2127;
          real fMaskTh2415#1 = globals.fMaskTh2128;
          real fBias2417#1 = globals.fBias2129;
          real maxAlpha2419#1 = globals.maxAlpha212A;
          tensor[3] mcNear241B#2 = globals.mcNear212D;
          tensor[3] mcFar241D#1 = globals.mcFar212E;
          tensor[2] cminmax241F#2 = globals.cminmax2130;
          real camNearVsp2421#2 = globals.camNearVsp2137;
          real camFarVsp2423#2 = globals.camFarVsp2138;
          tensor[3] litwsp2425#2 = globals.litwsp2139;
          real rayN2427#1 = self.rayN;
          tensor[3] rayOrig2429#1 = self.rayOrig;
          tensor[3] rayVec242B#1 = self.rayVec;
          real alphaFix242D#1 = self.alphaFix;
          tensor[3] eyeDir242F#1 = self.eyeDir;
          real phKa2431#1 = self.phKa;
          real phKd2433#1 = self.phKd;
          real phKs2435#2 = self.phKs;
          real phSp2437#1 = self.phSp;
          tensor[3] rgb2439#1 = self.rgb;
          real transp243B#2 = self.transp;
          real rayN243D#8 = RAdd(rayN2427,rayStep240D);
          bool _t2440#1 = GT<real>(rayN243D,camFarVsp2423);
          if _t2440 then goto SAVE2443 else goto JOIN2445
        SAVE2443:  preds = [COND2442]
          self.rayN = rayN243D;
          stabilize
          goto JOIN2445
        JOIN2445:  preds = [*STABILIZE2444,COND2442]
          tensor[3] op1_e3_l_52446#1 = VScale<3>(rayN243D,rayVec242B);
          tensor[3] pos2449#8 = VAdd<3>(rayOrig2429,op1_e3_l_52446);
          femData:RefCell _t244C#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block240B);
          real _t244E#1 = 0.1e-8;
          bool _t2450#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t244C,pos2449,_t244E);
          if _t2450 then goto ASSIGN2553 else goto ASSIGN5399
        ASSIGN2553:  preds = [COND2452]
          int ilit2454#1 = 84;
          int mulRes2455#84 = IMul(_t2401,ilit2454);
          int idx2458#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,mulRes2455);
          int ilit2459#86 = 1;
          int addRes245A#1 = IAdd(mulRes2455,ilit2459);
          int idx245B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245A);
          int ilit245C#1 = 2;
          int addRes245D#1 = IAdd(mulRes2455,ilit245C);
          int idx245E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245D);
          int ilit245F#1 = 3;
          int addRes2460#1 = IAdd(mulRes2455,ilit245F);
          int idx2461#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2460);
          int ilit2462#1 = 4;
          int addRes2463#1 = IAdd(mulRes2455,ilit2462);
          int idx2464#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2463);
          int ilit2465#1 = 5;
          int addRes2466#1 = IAdd(mulRes2455,ilit2465);
          int idx2467#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2466);
          int ilit2468#1 = 6;
          int addRes2469#1 = IAdd(mulRes2455,ilit2468);
          int idx246A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2469);
          int ilit246B#1 = 7;
          int addRes246C#1 = IAdd(mulRes2455,ilit246B);
          int idx246D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246C);
          int ilit246E#1 = 8;
          int addRes246F#1 = IAdd(mulRes2455,ilit246E);
          int idx2470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246F);
          int ilit2471#1 = 9;
          int addRes2472#1 = IAdd(mulRes2455,ilit2471);
          int idx2473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2472);
          int ilit2474#1 = 10;
          int addRes2475#1 = IAdd(mulRes2455,ilit2474);
          int idx2476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2475);
          int ilit2477#1 = 11;
          int addRes2478#1 = IAdd(mulRes2455,ilit2477);
          int idx2479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2478);
          int ilit247A#1 = 12;
          int addRes247B#1 = IAdd(mulRes2455,ilit247A);
          int idx247C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247B);
          int ilit247D#1 = 13;
          int addRes247E#1 = IAdd(mulRes2455,ilit247D);
          int idx247F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247E);
          int ilit2480#1 = 14;
          int addRes2481#1 = IAdd(mulRes2455,ilit2480);
          int idx2482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2481);
          int ilit2483#1 = 15;
          int addRes2484#1 = IAdd(mulRes2455,ilit2483);
          int idx2485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2484);
          int ilit2486#1 = 16;
          int addRes2487#1 = IAdd(mulRes2455,ilit2486);
          int idx2488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2487);
          int ilit2489#1 = 17;
          int addRes248A#1 = IAdd(mulRes2455,ilit2489);
          int idx248B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248A);
          int ilit248C#1 = 18;
          int addRes248D#1 = IAdd(mulRes2455,ilit248C);
          int idx248E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248D);
          int ilit248F#1 = 19;
          int addRes2490#1 = IAdd(mulRes2455,ilit248F);
          int idx2491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2490);
          int ilit2492#1 = 20;
          int addRes2493#1 = IAdd(mulRes2455,ilit2492);
          int idx2494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2493);
          int ilit2495#1 = 21;
          int addRes2496#1 = IAdd(mulRes2455,ilit2495);
          int idx2497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2496);
          int ilit2498#1 = 22;
          int addRes2499#1 = IAdd(mulRes2455,ilit2498);
          int idx249A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2499);
          int ilit249B#1 = 23;
          int addRes249C#1 = IAdd(mulRes2455,ilit249B);
          int idx249D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249C);
          int ilit249E#1 = 24;
          int addRes249F#1 = IAdd(mulRes2455,ilit249E);
          int idx24A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249F);
          int ilit24A1#1 = 25;
          int addRes24A2#1 = IAdd(mulRes2455,ilit24A1);
          int idx24A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A2);
          int ilit24A4#1 = 26;
          int addRes24A5#1 = IAdd(mulRes2455,ilit24A4);
          int idx24A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A5);
          int ilit24A7#1 = 27;
          int addRes24A8#1 = IAdd(mulRes2455,ilit24A7);
          int idx24A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A8);
          int ilit24AA#1 = 28;
          int addRes24AB#1 = IAdd(mulRes2455,ilit24AA);
          int idx24AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AB);
          int ilit24AD#1 = 29;
          int addRes24AE#1 = IAdd(mulRes2455,ilit24AD);
          int idx24AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AE);
          int ilit24B0#1 = 30;
          int addRes24B1#1 = IAdd(mulRes2455,ilit24B0);
          int idx24B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B1);
          int ilit24B3#1 = 31;
          int addRes24B4#1 = IAdd(mulRes2455,ilit24B3);
          int idx24B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B4);
          int ilit24B6#1 = 32;
          int addRes24B7#1 = IAdd(mulRes2455,ilit24B6);
          int idx24B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B7);
          int ilit24B9#1 = 33;
          int addRes24BA#1 = IAdd(mulRes2455,ilit24B9);
          int idx24BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BA);
          int ilit24BC#1 = 34;
          int addRes24BD#1 = IAdd(mulRes2455,ilit24BC);
          int idx24BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BD);
          int ilit24BF#1 = 35;
          int addRes24C0#1 = IAdd(mulRes2455,ilit24BF);
          int idx24C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C0);
          int ilit24C2#1 = 36;
          int addRes24C3#1 = IAdd(mulRes2455,ilit24C2);
          int idx24C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C3);
          int ilit24C5#1 = 37;
          int addRes24C6#1 = IAdd(mulRes2455,ilit24C5);
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C6);
          int ilit24C8#1 = 38;
          int addRes24C9#1 = IAdd(mulRes2455,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C9);
          int ilit24CB#1 = 39;
          int addRes24CC#1 = IAdd(mulRes2455,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CC);
          int ilit24CE#1 = 40;
          int addRes24CF#1 = IAdd(mulRes2455,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CF);
          int ilit24D1#1 = 41;
          int addRes24D2#1 = IAdd(mulRes2455,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D2);
          int ilit24D4#1 = 42;
          int addRes24D5#1 = IAdd(mulRes2455,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D5);
          int ilit24D7#1 = 43;
          int addRes24D8#1 = IAdd(mulRes2455,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D8);
          int ilit24DA#1 = 44;
          int addRes24DB#1 = IAdd(mulRes2455,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DB);
          int ilit24DD#1 = 45;
          int addRes24DE#1 = IAdd(mulRes2455,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DE);
          int ilit24E0#1 = 46;
          int addRes24E1#1 = IAdd(mulRes2455,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E1);
          int ilit24E3#1 = 47;
          int addRes24E4#1 = IAdd(mulRes2455,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E4);
          int ilit24E6#1 = 48;
          int addRes24E7#1 = IAdd(mulRes2455,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E7);
          int ilit24E9#1 = 49;
          int addRes24EA#1 = IAdd(mulRes2455,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24EA);
          int ilit24EC#1 = 50;
          int addRes24ED#1 = IAdd(mulRes2455,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24ED);
          int ilit24EF#1 = 51;
          int addRes24F0#1 = IAdd(mulRes2455,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F0);
          int ilit24F2#1 = 52;
          int addRes24F3#1 = IAdd(mulRes2455,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F3);
          int ilit24F5#1 = 53;
          int addRes24F6#1 = IAdd(mulRes2455,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F6);
          int ilit24F8#1 = 54;
          int addRes24F9#1 = IAdd(mulRes2455,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F9);
          int ilit24FB#1 = 55;
          int addRes24FC#1 = IAdd(mulRes2455,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FC);
          int ilit24FE#1 = 56;
          int addRes24FF#1 = IAdd(mulRes2455,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FF);
          int ilit2501#1 = 57;
          int addRes2502#1 = IAdd(mulRes2455,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2502);
          int ilit2504#1 = 58;
          int addRes2505#1 = IAdd(mulRes2455,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2505);
          int ilit2507#1 = 59;
          int addRes2508#1 = IAdd(mulRes2455,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2508);
          int ilit250A#1 = 60;
          int addRes250B#1 = IAdd(mulRes2455,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250B);
          int ilit250D#1 = 61;
          int addRes250E#1 = IAdd(mulRes2455,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250E);
          int ilit2510#1 = 62;
          int addRes2511#1 = IAdd(mulRes2455,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2511);
          int ilit2513#1 = 63;
          int addRes2514#1 = IAdd(mulRes2455,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2514);
          int ilit2516#1 = 64;
          int addRes2517#1 = IAdd(mulRes2455,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2517);
          int ilit2519#1 = 65;
          int addRes251A#1 = IAdd(mulRes2455,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251A);
          int ilit251C#1 = 66;
          int addRes251D#1 = IAdd(mulRes2455,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251D);
          int ilit251F#1 = 67;
          int addRes2520#1 = IAdd(mulRes2455,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2520);
          int ilit2522#1 = 68;
          int addRes2523#1 = IAdd(mulRes2455,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2523);
          int ilit2525#1 = 69;
          int addRes2526#1 = IAdd(mulRes2455,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2526);
          int ilit2528#1 = 70;
          int addRes2529#1 = IAdd(mulRes2455,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2529);
          int ilit252B#1 = 71;
          int addRes252C#1 = IAdd(mulRes2455,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252C);
          int ilit252E#1 = 72;
          int addRes252F#1 = IAdd(mulRes2455,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252F);
          int ilit2531#1 = 73;
          int addRes2532#1 = IAdd(mulRes2455,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2532);
          int ilit2534#1 = 74;
          int addRes2535#1 = IAdd(mulRes2455,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2535);
          int ilit2537#1 = 75;
          int addRes2538#1 = IAdd(mulRes2455,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2538);
          int ilit253A#1 = 76;
          int addRes253B#1 = IAdd(mulRes2455,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253B);
          int ilit253D#1 = 77;
          int addRes253E#1 = IAdd(mulRes2455,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253E);
          int ilit2540#1 = 78;
          int addRes2541#1 = IAdd(mulRes2455,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2541);
          int ilit2543#1 = 79;
          int addRes2544#1 = IAdd(mulRes2455,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2544);
          int ilit2546#1 = 80;
          int addRes2547#1 = IAdd(mulRes2455,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2547);
          int ilit2549#1 = 81;
          int addRes254A#1 = IAdd(mulRes2455,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254A);
          int ilit254C#1 = 82;
          int addRes254D#1 = IAdd(mulRes2455,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254D);
          int ilit254F#1 = 83;
          int addRes2550#1 = IAdd(mulRes2455,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2550);
          int mulRes2657#1 = IMul(ilit2459,idx2458);
          int mulRes2659#1 = IMul(ilit2459,idx245B);
          int mulRes265C#1 = IMul(ilit2459,idx245E);
          int mulRes265F#1 = IMul(ilit2459,idx2461);
          int mulRes2662#1 = IMul(ilit2459,idx2464);
          int mulRes2665#1 = IMul(ilit2459,idx2467);
          int mulRes2668#1 = IMul(ilit2459,idx246A);
          int mulRes266B#1 = IMul(ilit2459,idx246D);
          int mulRes266E#1 = IMul(ilit2459,idx2470);
          int mulRes2671#1 = IMul(ilit2459,idx2473);
          int mulRes2674#1 = IMul(ilit2459,idx2476);
          int mulRes2677#1 = IMul(ilit2459,idx2479);
          int mulRes267A#1 = IMul(ilit2459,idx247C);
          int mulRes267D#1 = IMul(ilit2459,idx247F);
          int mulRes2680#1 = IMul(ilit2459,idx2482);
          int mulRes2683#1 = IMul(ilit2459,idx2485);
          int mulRes2686#1 = IMul(ilit2459,idx2488);
          int mulRes2689#1 = IMul(ilit2459,idx248B);
          int mulRes268C#1 = IMul(ilit2459,idx248E);
          int mulRes268F#1 = IMul(ilit2459,idx2491);
          int mulRes2692#1 = IMul(ilit2459,idx2494);
          int mulRes2695#1 = IMul(ilit2459,idx2497);
          int mulRes2698#1 = IMul(ilit2459,idx249A);
          int mulRes269B#1 = IMul(ilit2459,idx249D);
          int mulRes269E#1 = IMul(ilit2459,idx24A0);
          int mulRes26A1#1 = IMul(ilit2459,idx24A3);
          int mulRes26A4#1 = IMul(ilit2459,idx24A6);
          int mulRes26A7#1 = IMul(ilit2459,idx24A9);
          int mulRes26AA#1 = IMul(ilit2459,idx24AC);
          int mulRes26AD#1 = IMul(ilit2459,idx24AF);
          int mulRes26B0#1 = IMul(ilit2459,idx24B2);
          int mulRes26B3#1 = IMul(ilit2459,idx24B5);
          int mulRes26B6#1 = IMul(ilit2459,idx24B8);
          int mulRes26B9#1 = IMul(ilit2459,idx24BB);
          int mulRes26BC#1 = IMul(ilit2459,idx24BE);
          int mulRes26BF#1 = IMul(ilit2459,idx24C1);
          int mulRes26C2#1 = IMul(ilit2459,idx24C4);
          int mulRes26C5#1 = IMul(ilit2459,idx24C7);
          int mulRes26C8#1 = IMul(ilit2459,idx24CA);
          int mulRes26CB#1 = IMul(ilit2459,idx24CD);
          int mulRes26CE#1 = IMul(ilit2459,idx24D0);
          int mulRes26D1#1 = IMul(ilit2459,idx24D3);
          int mulRes26D4#1 = IMul(ilit2459,idx24D6);
          int mulRes26D7#1 = IMul(ilit2459,idx24D9);
          int mulRes26DA#1 = IMul(ilit2459,idx24DC);
          int mulRes26DD#1 = IMul(ilit2459,idx24DF);
          int mulRes26E0#1 = IMul(ilit2459,idx24E2);
          int mulRes26E3#1 = IMul(ilit2459,idx24E5);
          int mulRes26E6#1 = IMul(ilit2459,idx24E8);
          int mulRes26E9#1 = IMul(ilit2459,idx24EB);
          int mulRes26EC#1 = IMul(ilit2459,idx24EE);
          int mulRes26EF#1 = IMul(ilit2459,idx24F1);
          int mulRes26F2#1 = IMul(ilit2459,idx24F4);
          int mulRes26F5#1 = IMul(ilit2459,idx24F7);
          int mulRes26F8#1 = IMul(ilit2459,idx24FA);
          int mulRes26FB#1 = IMul(ilit2459,idx24FD);
          int mulRes26FE#1 = IMul(ilit2459,idx2500);
          int mulRes2701#1 = IMul(ilit2459,idx2503);
          int mulRes2704#1 = IMul(ilit2459,idx2506);
          int mulRes2707#1 = IMul(ilit2459,idx2509);
          int mulRes270A#1 = IMul(ilit2459,idx250C);
          int mulRes270D#1 = IMul(ilit2459,idx250F);
          int mulRes2710#1 = IMul(ilit2459,idx2512);
          int mulRes2713#1 = IMul(ilit2459,idx2515);
          int mulRes2716#1 = IMul(ilit2459,idx2518);
          int mulRes2719#1 = IMul(ilit2459,idx251B);
          int mulRes271C#1 = IMul(ilit2459,idx251E);
          int mulRes271F#1 = IMul(ilit2459,idx2521);
          int mulRes2722#1 = IMul(ilit2459,idx2524);
          int mulRes2725#1 = IMul(ilit2459,idx2527);
          int mulRes2728#1 = IMul(ilit2459,idx252A);
          int mulRes272B#1 = IMul(ilit2459,idx252D);
          int mulRes272E#1 = IMul(ilit2459,idx2530);
          int mulRes2731#1 = IMul(ilit2459,idx2533);
          int mulRes2734#1 = IMul(ilit2459,idx2536);
          int mulRes2737#1 = IMul(ilit2459,idx2539);
          int mulRes273A#1 = IMul(ilit2459,idx253C);
          int mulRes273D#1 = IMul(ilit2459,idx253F);
          int mulRes2740#1 = IMul(ilit2459,idx2542);
          int mulRes2743#1 = IMul(ilit2459,idx2545);
          int mulRes2746#1 = IMul(ilit2459,idx2548);
          int mulRes2749#1 = IMul(ilit2459,idx254B);
          int mulRes274C#1 = IMul(ilit2459,idx254E);
          int mulRes274F#1 = IMul(ilit2459,idx2551);
          real dof2750#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2657);
          real dof2751#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2659);
          real dof2752#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265C);
          real dof2753#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265F);
          real dof2754#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2662);
          real dof2755#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2665);
          real dof2756#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2668);
          real dof2757#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266B);
          real dof2758#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266E);
          real dof2759#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2671);
          real dof275A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2674);
          real dof275B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2677);
          real dof275C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267A);
          real dof275D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267D);
          real dof275E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2680);
          real dof275F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2683);
          real dof2760#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2686);
          real dof2761#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2689);
          real dof2762#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268C);
          real dof2763#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268F);
          real dof2764#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2692);
          real dof2765#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2695);
          real dof2766#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2698);
          real dof2767#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269B);
          real dof2768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269E);
          real dof2769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A1);
          real dof276A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A4);
          real dof276B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A7);
          real dof276C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AA);
          real dof276D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AD);
          real dof276E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B0);
          real dof276F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B3);
          real dof2770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B6);
          real dof2771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B9);
          real dof2772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BC);
          real dof2773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BF);
          real dof2774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C2);
          real dof2775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C5);
          real dof2776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C8);
          real dof2777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CB);
          real dof2778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CE);
          real dof2779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D1);
          real dof277A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D4);
          real dof277B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D7);
          real dof277C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DA);
          real dof277D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DD);
          real dof277E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E0);
          real dof277F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E3);
          real dof2780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E6);
          real dof2781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E9);
          real dof2782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EC);
          real dof2783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EF);
          real dof2784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F2);
          real dof2785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F5);
          real dof2786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F8);
          real dof2787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FB);
          real dof2788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FE);
          real dof2789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2701);
          real dof278A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2704);
          real dof278B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2707);
          real dof278C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270A);
          real dof278D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270D);
          real dof278E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2710);
          real dof278F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2713);
          real dof2790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2716);
          real dof2791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2719);
          real dof2792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271C);
          real dof2793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271F);
          real dof2794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2722);
          real dof2795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2725);
          real dof2796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2728);
          real dof2797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272B);
          real dof2798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272E);
          real dof2799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2731);
          real dof279A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2734);
          real dof279B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2737);
          real dof279C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273A);
          real dof279D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273D);
          real dof279E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2740);
          real dof279F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2743);
          real dof27A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2746);
          real dof27A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2749);
          real dof27A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274C);
          real dof27A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274F);
          tensor[84] dofs27A4#19 = <tensor[84]>[dof2750,dof2751,dof2752,dof2753,dof2754,dof2755,dof2756,dof2757,dof2758,dof2759,dof275A,dof275B,dof275C,dof275D,dof275E,dof275F,dof2760,dof2761,dof2762,dof2763,dof2764,dof2765,dof2766,dof2767,dof2768,dof2769,dof276A,dof276B,dof276C,dof276D,dof276E,dof276F,dof2770,dof2771,dof2772,dof2773,dof2774,dof2775,dof2776,dof2777,dof2778,dof2779,dof277A,dof277B,dof277C,dof277D,dof277E,dof277F,dof2780,dof2781,dof2782,dof2783,dof2784,dof2785,dof2786,dof2787,dof2788,dof2789,dof278A,dof278B,dof278C,dof278D,dof278E,dof278F,dof2790,dof2791,dof2792,dof2793,dof2794,dof2795,dof2796,dof2797,dof2798,dof2799,dof279A,dof279B,dof279C,dof279D,dof279E,dof279F,dof27A0,dof27A1,dof27A2,dof27A3];
          real varAcc28F8#20 = VIndex<3,0>(pos2449);
          real varAcc28F9#10 = VIndex<3,1>(pos2449);
          real varAcc28FA#10 = VIndex<3,2>(pos2449);
          real basisEval28FB#1023 = 0.e0;
          real coeff28FC#47 = 0.2e1;
          real one28FD#83 = 0.1e1;
          real prod28FE#9 = RMul(one28FD,one28FD);
          real prod28FF#3 = RMul(one28FD,prod28FE);
          real basisEval2900#9 = RMul(coeff28FC,prod28FF);
          real prod2902#5 = RMul(one28FD,varAcc28FA);
          real prod2903#5 = RMul(one28FD,prod2902);
          real basisEval2904#8 = RMul(coeff28FC,prod2903);
          real prod2906#5 = RMul(varAcc28F9,one28FD);
          real prod2907#5 = RMul(one28FD,prod2906);
          real basisEval2908#8 = RMul(coeff28FC,prod2907);
          real coeff2909#32 = 0.6e1;
          real prod290B#5 = RMul(varAcc28F8,prod28FE);
          real basisEval290C#5 = RMul(coeff2909,prod290B);
          real prod2290D#5 = RMul(varAcc28FA,varAcc28FA);
          real prod290E#4 = RMul(one28FD,prod2290D);
          real prod290F#6 = RMul(one28FD,prod290E);
          real basisEval2910#4 = RMul(coeff28FC,prod290F);
          real prod2911#4 = RMul(varAcc28F9,varAcc28FA);
          real prod2912#6 = RMul(one28FD,prod2911);
          real basisEval2913#5 = RMul(coeff28FC,prod2912);
          real prod22914#5 = RMul(varAcc28F9,varAcc28F9);
          real prod2915#4 = RMul(prod22914,one28FD);
          real prod2916#6 = RMul(one28FD,prod2915);
          real basisEval2917#4 = RMul(coeff28FC,prod2916);
          real prod2918#6 = RMul(varAcc28F8,prod2902);
          real basisEval2919#5 = RMul(coeff2909,prod2918);
          real prod291A#6 = RMul(varAcc28F8,prod2906);
          real basisEval291B#5 = RMul(coeff2909,prod291A);
          real coeff291C#19 = 0.12e2;
          real prod2291D#11 = RMul(varAcc28F8,varAcc28F8);
          real prod291E#6 = RMul(prod2291D,prod28FE);
          real basisEval291F#3 = RMul(coeff291C,prod291E);
          real prod32920#4 = RMul(prod2290D,varAcc28FA);
          real prod2921#3 = RMul(one28FD,prod32920);
          real prod2922#7 = RMul(one28FD,prod2921);
          real basisEval2923#4 = RMul(coeff28FC,prod2922);
          real prod2924#3 = RMul(varAcc28F9,prod2290D);
          real prod2925#9 = RMul(one28FD,prod2924);
          real basisEval2926#3 = RMul(coeff28FC,prod2925);
          real prod2927#3 = RMul(prod22914,varAcc28FA);
          real prod2928#9 = RMul(one28FD,prod2927);
          real basisEval2929#3 = RMul(coeff28FC,prod2928);
          real prod3292A#4 = RMul(prod22914,varAcc28F9);
          real prod292B#3 = RMul(prod3292A,one28FD);
          real prod292C#7 = RMul(one28FD,prod292B);
          real basisEval292D#4 = RMul(coeff28FC,prod292C);
          real prod292E#9 = RMul(varAcc28F8,prod290E);
          real basisEval292F#6 = RMul(coeff2909,prod292E);
          real prod2930#6 = RMul(varAcc28F8,prod2911);
          real basisEval2931#3 = RMul(coeff2909,prod2930);
          real prod2932#9 = RMul(varAcc28F8,prod2915);
          real basisEval2933#6 = RMul(coeff2909,prod2932);
          real prod2934#9 = RMul(prod2291D,prod2902);
          real basisEval2935#2 = RMul(coeff291C,prod2934);
          real prod2936#9 = RMul(prod2291D,prod2906);
          real basisEval2937#2 = RMul(coeff291C,prod2936);
          real coeff2938#9 = 0.20e2;
          real prod32939#7 = RMul(prod2291D,varAcc28F8);
          real prod293A#7 = RMul(prod32939,prod28FE);
          real basisEval293B#3 = RMul(coeff2938,prod293A);
          real prod4293C#3 = RMul(prod32920,varAcc28FA);
          real prod293D#2 = RMul(one28FD,prod4293C);
          real prod293E#4 = RMul(one28FD,prod293D);
          real basisEval293F#2 = RMul(coeff28FC,prod293E);
          real prod2940#2 = RMul(varAcc28F9,prod32920);
          real prod2941#6 = RMul(one28FD,prod2940);
          real basisEval2942#3 = RMul(coeff28FC,prod2941);
          real prod2943#2 = RMul(prod22914,prod2290D);
          real prod2944#5 = RMul(one28FD,prod2943);
          real basisEval2945#1 = RMul(coeff28FC,prod2944);
          real prod2946#2 = RMul(prod3292A,varAcc28FA);
          real prod2947#6 = RMul(one28FD,prod2946);
          real basisEval2948#3 = RMul(coeff28FC,prod2947);
          real prod42949#3 = RMul(prod3292A,varAcc28F9);
          real prod294A#2 = RMul(prod42949,one28FD);
          real prod294B#4 = RMul(one28FD,prod294A);
          real basisEval294C#2 = RMul(coeff28FC,prod294B);
          real prod294D#6 = RMul(varAcc28F8,prod2921);
          real basisEval294E#1 = RMul(coeff2909,prod294D);
          real prod294F#5 = RMul(varAcc28F8,prod2924);
          real basisEval2950#4 = RMul(coeff2909,prod294F);
          real prod2951#5 = RMul(varAcc28F8,prod2927);
          real basisEval2952#4 = RMul(coeff2909,prod2951);
          real prod2953#6 = RMul(varAcc28F8,prod292B);
          real basisEval2954#1 = RMul(coeff2909,prod2953);
          real prod2955#5 = RMul(prod2291D,prod290E);
          real basisEval2956#2 = RMul(coeff291C,prod2955);
          real prod2957#5 = RMul(prod2291D,prod2911);
          real basisEval2958#1 = RMul(coeff291C,prod2957);
          real prod2959#5 = RMul(prod2291D,prod2915);
          real basisEval295A#2 = RMul(coeff291C,prod2959);
          real prod295B#6 = RMul(prod32939,prod2902);
          real basisEval295C#1 = RMul(coeff2938,prod295B);
          real prod295D#6 = RMul(prod32939,prod2906);
          real basisEval295E#1 = RMul(coeff2938,prod295D);
          real coeff295F#3 = 0.30e2;
          real prod42960#4 = RMul(prod32939,varAcc28F8);
          real prod2961#4 = RMul(prod42960,prod28FE);
          real basisEval2962#1 = RMul(coeff295F,prod2961);
          real basisEval2963#7 = RMul(one28FD,prod28FF);
          real basisEval2964#3 = RMul(one28FD,prod2903);
          real basisEval2965#8 = RMul(coeff28FC,prod290B);
          real basisEval2966#3 = RMul(one28FD,prod290F);
          real coeff2967#24 = 0.3e1;
          real basisEval2968#4 = RMul(coeff2967,prod2916);
          real basisEval2969#5 = RMul(coeff28FC,prod2918);
          real coeff296A#34 = 0.4e1;
          real basisEval296B#4 = RMul(coeff296A,prod291A);
          real basisEval296C#4 = RMul(coeff2967,prod291E);
          real basisEval296D#3 = RMul(one28FD,prod2922);
          real basisEval296E#2 = RMul(coeff2967,prod2928);
          real basisEval296F#4 = RMul(coeff296A,prod292C);
          real basisEval2970#3 = RMul(coeff28FC,prod292E);
          real basisEval2971#3 = RMul(coeff296A,prod2930);
          real basisEval2972#2 = RMul(coeff2967,prod2934);
          real basisEval2973#6 = RMul(coeff2909,prod2936);
          real basisEval2974#4 = RMul(coeff296A,prod293A);
          real basisEval2975#3 = RMul(one28FD,prod293E);
          real basisEval2976#4 = RMul(coeff2967,prod2944);
          real basisEval2977#2 = RMul(coeff296A,prod2947);
          real coeff2978#9 = 0.5e1;
          real basisEval2979#3 = RMul(coeff2978,prod294B);
          real basisEval297A#3 = RMul(coeff28FC,prod294D);
          real basisEval297B#1 = RMul(coeff296A,prod294F);
          real coeff297C#10 = 0.8e1;
          real basisEval297D#1 = RMul(coeff297C,prod2953);
          real basisEval297E#4 = RMul(coeff2967,prod2955);
          real basisEval297F#4 = RMul(coeff2909,prod2957);
          real coeff2980#3 = 0.9e1;
          real basisEval2981#1 = RMul(coeff2980,prod2959);
          real basisEval2982#2 = RMul(coeff296A,prod295B);
          real basisEval2983#1 = RMul(coeff297C,prod295D);
          real basisEval2984#3 = RMul(coeff2978,prod2961);
          real basisEval2985#3 = RMul(one28FD,prod2907);
          real basisEval2986#4 = RMul(coeff2967,prod290F);
          real basisEval2987#3 = RMul(one28FD,prod2916);
          real basisEval2988#4 = RMul(coeff296A,prod2918);
          real basisEval2989#5 = RMul(coeff28FC,prod291A);
          real basisEval298A#4 = RMul(coeff296A,prod2922);
          real basisEval298B#2 = RMul(coeff2967,prod2925);
          real basisEval298C#3 = RMul(one28FD,prod292C);
          real basisEval298D#3 = RMul(coeff28FC,prod2932);
          real basisEval298E#6 = RMul(coeff2909,prod2934);
          real basisEval298F#2 = RMul(coeff2967,prod2936);
          real basisEval2990#3 = RMul(coeff2978,prod293E);
          real basisEval2991#2 = RMul(coeff296A,prod2941);
          real basisEval2992#3 = RMul(one28FD,prod294B);
          real basisEval2993#1 = RMul(coeff297C,prod294D);
          real basisEval2994#1 = RMul(coeff296A,prod2951);
          real basisEval2995#3 = RMul(coeff28FC,prod2953);
          real basisEval2996#1 = RMul(coeff2980,prod2955);
          real basisEval2997#4 = RMul(coeff2967,prod2959);
          real basisEval2998#1 = RMul(coeff297C,prod295B);
          real basisEval2999#2 = RMul(coeff296A,prod295D);
          real basisEval299A#5 = RMul(coeff2909,prod2907);
          real basisEval299B#5 = RMul(coeff2909,prod2912);
          real basisEval299C#3 = RMul(coeff291C,prod2916);
          real basisEval299D#4 = RMul(coeff28FC,prod291E);
          real basisEval299E#6 = RMul(coeff2909,prod2925);
          real basisEval299F#2 = RMul(coeff291C,prod2928);
          real basisEval29A0#3 = RMul(coeff2938,prod292C);
          real basisEval29A1#2 = RMul(coeff291C,prod2932);
          real basisEval29A2#3 = RMul(coeff28FC,prod2934);
          real basisEval29A3#4 = RMul(coeff28FC,prod293A);
          real basisEval29A4#1 = RMul(coeff2909,prod2941);
          real basisEval29A5#2 = RMul(coeff291C,prod2944);
          real basisEval29A6#1 = RMul(coeff2938,prod2947);
          real basisEval29A7#1 = RMul(coeff295F,prod294B);
          real basisEval29A8#1 = RMul(coeff291C,prod2951);
          real basisEval29A9#1 = RMul(coeff2938,prod2953);
          real basisEval29AA#1 = RMul(coeff28FC,prod2955);
          real basisEval29AB#3 = RMul(coeff28FC,prod295B);
          real basisEval29AC#1 = RMul(coeff2909,prod295D);
          real basisEval29AD#2 = RMul(coeff28FC,prod2961);
          real basisEval29AE#3 = RMul(one28FD,prod290B);
          real basisEval29AF#4 = RMul(coeff296A,prod2912);
          real basisEval29B0#3 = RMul(one28FD,prod291E);
          real basisEval29B1#6 = RMul(coeff2909,prod2928);
          real basisEval29B2#2 = RMul(coeff2967,prod292E);
          real basisEval29B3#2 = RMul(coeff2967,prod2932);
          real basisEval29B4#3 = RMul(coeff28FC,prod2936);
          real basisEval29B5#3 = RMul(one28FD,prod293A);
          real basisEval29B6#1 = RMul(coeff297C,prod2941);
          real basisEval29B7#1 = RMul(coeff2980,prod2944);
          real basisEval29B8#1 = RMul(coeff297C,prod2947);
          real basisEval29B9#2 = RMul(coeff296A,prod294D);
          real basisEval29BA#2 = RMul(coeff296A,prod2953);
          real basisEval29BB#1 = RMul(coeff296A,prod2957);
          real basisEval29BC#3 = RMul(coeff28FC,prod295D);
          real basisEval29BD#3 = RMul(one28FD,prod2961);
          real basisEval29BE#5 = RMul(coeff2909,prod2903);
          real basisEval29BF#3 = RMul(coeff291C,prod290F);
          real basisEval29C0#3 = RMul(coeff2938,prod2922);
          real basisEval29C1#2 = RMul(coeff291C,prod2925);
          real basisEval29C2#2 = RMul(coeff291C,prod292E);
          real basisEval29C3#1 = RMul(coeff295F,prod293E);
          real basisEval29C4#1 = RMul(coeff2938,prod2941);
          real basisEval29C5#1 = RMul(coeff2909,prod2947);
          real basisEval29C6#1 = RMul(coeff2938,prod294D);
          real basisEval29C7#1 = RMul(coeff291C,prod294F);
          real basisEval29C8#1 = RMul(coeff28FC,prod2959);
          real basisEval29C9#1 = RMul(coeff2909,prod295B);
          tensor[84] intermediateCons29CA#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval2913,basisEval2917,basisEval2919,basisEval291B,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval2926,basisEval2929,basisEval292D,basisEval292F,basisEval2931,basisEval2933,basisEval2935,basisEval2937,basisEval293B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval2942,basisEval2945,basisEval2948,basisEval294C,basisEval294E,basisEval2950,basisEval2952,basisEval2954,basisEval2956,basisEval2958,basisEval295A,basisEval295C,basisEval295E,basisEval2962];
          tensor[84] intermediateCons29CB#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2964,basisEval2908,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2966,basisEval2913,basisEval2968,basisEval28FB,basisEval2969,basisEval296B,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval296D,basisEval2926,basisEval296E,basisEval296F,basisEval28FB,basisEval2970,basisEval2971,basisEval2933,basisEval28FB,basisEval2972,basisEval2973,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2975,basisEval2942,basisEval2976,basisEval2977,basisEval2979,basisEval28FB,basisEval297A,basisEval297B,basisEval2952,basisEval297D,basisEval28FB,basisEval297E,basisEval297F,basisEval2981,basisEval28FB,basisEval2982,basisEval2983,basisEval28FB,basisEval2984,basisEval28FB];
          tensor[84] intermediateCons29CC#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2985,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval2913,basisEval2987,basisEval28FB,basisEval2988,basisEval2989,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval298B,basisEval2929,basisEval298C,basisEval28FB,basisEval292F,basisEval2971,basisEval298D,basisEval28FB,basisEval298E,basisEval298F,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval2991,basisEval2976,basisEval2948,basisEval2992,basisEval28FB,basisEval2993,basisEval2950,basisEval2994,basisEval2995,basisEval28FB,basisEval2996,basisEval297F,basisEval2997,basisEval28FB,basisEval2998,basisEval2999,basisEval28FB,basisEval2984,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CD#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval299A,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval299B,basisEval299C,basisEval28FB,basisEval28FB,basisEval2969,basisEval291B,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval299E,basisEval299F,basisEval29A0,basisEval28FB,basisEval28FB,basisEval2970,basisEval2931,basisEval29A1,basisEval28FB,basisEval28FB,basisEval29A2,basisEval2973,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval29A4,basisEval29A5,basisEval29A6,basisEval29A7,basisEval28FB,basisEval28FB,basisEval297A,basisEval2950,basisEval29A8,basisEval29A9,basisEval28FB,basisEval28FB,basisEval29AA,basisEval297F,basisEval295A,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29AC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CE#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval28FB,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval29AF,basisEval2968,basisEval28FB,basisEval28FB,basisEval2969,basisEval2989,basisEval28FB,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval299E,basisEval29B1,basisEval296F,basisEval28FB,basisEval28FB,basisEval29B2,basisEval2971,basisEval29B3,basisEval28FB,basisEval28FB,basisEval29A2,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval29B6,basisEval29B7,basisEval29B8,basisEval2979,basisEval28FB,basisEval28FB,basisEval29B9,basisEval2950,basisEval2952,basisEval29BA,basisEval28FB,basisEval28FB,basisEval297E,basisEval29BB,basisEval2997,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CF#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2908,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval299B,basisEval2917,basisEval28FB,basisEval28FB,basisEval2919,basisEval2989,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval29C1,basisEval29B1,basisEval292D,basisEval28FB,basisEval28FB,basisEval29C2,basisEval2931,basisEval298D,basisEval28FB,basisEval28FB,basisEval298E,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C3,basisEval29C4,basisEval29A5,basisEval29C5,basisEval294C,basisEval28FB,basisEval28FB,basisEval29C6,basisEval29C7,basisEval2952,basisEval2995,basisEval28FB,basisEval28FB,basisEval2956,basisEval297F,basisEval29C8,basisEval28FB,basisEval28FB,basisEval29C9,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          real vdot2AB3#10 = VDot<84>(dofs27A4,intermediateCons29CA);
          real vdot2AB5#15 = VDot<84>(dofs27A4,intermediateCons29CB);
          real vdot2AB7#15 = VDot<84>(dofs27A4,intermediateCons29CC);
          tensor[3] tensor2AB8#2 = <tensor[3]>[vdot2AB3,vdot2AB5,vdot2AB7];
          real vdot2ABC#10 = VDot<84>(dofs27A4,intermediateCons29CD);
          real vdot2ABE#15 = VDot<84>(dofs27A4,intermediateCons29CE);
          tensor[3] tensor2ABF#2 = <tensor[3]>[vdot2AB5,vdot2ABC,vdot2ABE];
          real vdot2AC5#10 = VDot<84>(dofs27A4,intermediateCons29CF);
          tensor[3] tensor2AC6#2 = <tensor[3]>[vdot2AB7,vdot2ABE,vdot2AC5];
          tensor[3,3] _t2AB1#1 = <tensor[3,3]>[tensor2AB8,tensor2ABF,tensor2AC6];
          real[3] _t2ADE#1 = EigenVals3x3(_t2AB1);
          real _t2AE2#1 = Subscript<real[3]>(_t2ADE,ilit2459);
          real basisEval2AFF#1 = RMul(one28FD,prod2912);
          real basisEval2B12#1 = RMul(one28FD,prod2925);
          real basisEval2B15#1 = RMul(one28FD,prod2928);
          real basisEval2B1D#3 = RMul(coeff28FC,prod2930);
          real basisEval2B2E#1 = RMul(one28FD,prod2941);
          real basisEval2B31#1 = RMul(one28FD,prod2944);
          real basisEval2B34#1 = RMul(one28FD,prod2947);
          real basisEval2B3C#2 = RMul(coeff28FC,prod294F);
          real basisEval2B3E#2 = RMul(coeff28FC,prod2951);
          real basisEval2B44#1 = RMul(coeff2967,prod2957);
          real prod52B4F#1 = RMul(prod4293C,varAcc28FA);
          real prod2B50#1 = RMul(one28FD,prod52B4F);
          real prod2B51#2 = RMul(one28FD,prod2B50);
          real basisEval2B52#2 = RMul(one28FD,prod2B51);
          real prod2B53#1 = RMul(varAcc28F9,prod4293C);
          real prod2B54#3 = RMul(one28FD,prod2B53);
          real basisEval2B55#1 = RMul(one28FD,prod2B54);
          real prod2B56#1 = RMul(prod22914,prod32920);
          real prod2B57#3 = RMul(one28FD,prod2B56);
          real basisEval2B58#1 = RMul(one28FD,prod2B57);
          real prod2B59#1 = RMul(prod3292A,prod2290D);
          real prod2B5A#3 = RMul(one28FD,prod2B59);
          real basisEval2B5B#1 = RMul(one28FD,prod2B5A);
          real prod2B5C#1 = RMul(prod42949,varAcc28FA);
          real prod2B5D#3 = RMul(one28FD,prod2B5C);
          real basisEval2B5E#1 = RMul(one28FD,prod2B5D);
          real prod52B5F#1 = RMul(prod42949,varAcc28F9);
          real prod2B60#1 = RMul(prod52B5F,one28FD);
          real prod2B61#2 = RMul(one28FD,prod2B60);
          real basisEval2B62#2 = RMul(one28FD,prod2B61);
          real prod2B63#3 = RMul(varAcc28F8,prod293D);
          real basisEval2B64#1 = RMul(coeff28FC,prod2B63);
          real prod2B65#2 = RMul(varAcc28F8,prod2940);
          real basisEval2B66#2 = RMul(coeff28FC,prod2B65);
          real prod2B67#2 = RMul(varAcc28F8,prod2943);
          real basisEval2B68#1 = RMul(coeff28FC,prod2B67);
          real prod2B69#2 = RMul(varAcc28F8,prod2946);
          real basisEval2B6A#2 = RMul(coeff28FC,prod2B69);
          real prod2B6B#3 = RMul(varAcc28F8,prod294A);
          real basisEval2B6C#1 = RMul(coeff28FC,prod2B6B);
          real prod2B6D#3 = RMul(prod2291D,prod2921);
          real basisEval2B6E#1 = RMul(coeff2967,prod2B6D);
          real prod2B6F#2 = RMul(prod2291D,prod2924);
          real basisEval2B70#2 = RMul(coeff2967,prod2B6F);
          real prod2B71#2 = RMul(prod2291D,prod2927);
          real basisEval2B72#2 = RMul(coeff2967,prod2B71);
          real prod2B73#3 = RMul(prod2291D,prod292B);
          real basisEval2B74#1 = RMul(coeff2967,prod2B73);
          real prod2B75#3 = RMul(prod32939,prod290E);
          real basisEval2B76#1 = RMul(coeff296A,prod2B75);
          real prod2B77#2 = RMul(prod32939,prod2911);
          real basisEval2B78#1 = RMul(coeff296A,prod2B77);
          real prod2B79#3 = RMul(prod32939,prod2915);
          real basisEval2B7A#1 = RMul(coeff296A,prod2B79);
          real prod2B7B#3 = RMul(prod42960,prod2902);
          real basisEval2B7C#1 = RMul(coeff2978,prod2B7B);
          real prod2B7D#3 = RMul(prod42960,prod2906);
          real basisEval2B7E#1 = RMul(coeff2978,prod2B7D);
          real prod52B80#1 = RMul(prod42960,varAcc28F8);
          real prod2B81#2 = RMul(prod52B80,prod28FE);
          real basisEval2B82#1 = RMul(coeff2909,prod2B81);
          real basisEval2B87#1 = RMul(one28FD,prod2918);
          real basisEval2B8C#1 = RMul(one28FD,prod292E);
          real basisEval2B8E#1 = RMul(one28FD,prod2934);
          real basisEval2B95#1 = RMul(one28FD,prod294D);
          real basisEval2B96#1 = RMul(coeff2967,prod2951);
          real basisEval2B98#1 = RMul(one28FD,prod2955);
          real basisEval2B99#2 = RMul(coeff28FC,prod2957);
          real basisEval2B9A#1 = RMul(one28FD,prod295B);
          real basisEval2B9D#1 = RMul(coeff28FC,prod2B54);
          real basisEval2B9E#1 = RMul(coeff2967,prod2B57);
          real basisEval2B9F#1 = RMul(coeff296A,prod2B5A);
          real basisEval2BA0#1 = RMul(coeff2978,prod2B5D);
          real basisEval2BA1#1 = RMul(coeff2909,prod2B61);
          real basisEval2BA2#1 = RMul(one28FD,prod2B63);
          real basisEval2BA3#2 = RMul(coeff2967,prod2B67);
          real basisEval2BA4#1 = RMul(coeff296A,prod2B69);
          real basisEval2BA5#1 = RMul(coeff2978,prod2B6B);
          real basisEval2BA6#1 = RMul(one28FD,prod2B6D);
          real basisEval2BA7#1 = RMul(coeff28FC,prod2B6F);
          real basisEval2BA8#1 = RMul(coeff296A,prod2B73);
          real basisEval2BA9#1 = RMul(one28FD,prod2B75);
          real basisEval2BAA#2 = RMul(coeff28FC,prod2B77);
          real basisEval2BAB#1 = RMul(coeff2967,prod2B79);
          real basisEval2BAC#1 = RMul(one28FD,prod2B7B);
          real basisEval2BAD#1 = RMul(coeff28FC,prod2B7D);
          real basisEval2BAE#2 = RMul(one28FD,prod2B81);
          real basisEval2BB1#1 = RMul(one28FD,prod291A);
          real basisEval2BB6#1 = RMul(one28FD,prod2932);
          real basisEval2BB8#1 = RMul(one28FD,prod2936);
          real basisEval2BBD#1 = RMul(coeff2967,prod294F);
          real basisEval2BBE#1 = RMul(one28FD,prod2953);
          real basisEval2BBF#1 = RMul(one28FD,prod2959);
          real basisEval2BC1#1 = RMul(one28FD,prod295D);
          real basisEval2BC2#1 = RMul(coeff2909,prod2B51);
          real basisEval2BC3#1 = RMul(coeff2978,prod2B54);
          real basisEval2BC4#1 = RMul(coeff296A,prod2B57);
          real basisEval2BC5#1 = RMul(coeff2967,prod2B5A);
          real basisEval2BC6#1 = RMul(coeff28FC,prod2B5D);
          real basisEval2BC7#1 = RMul(coeff2978,prod2B63);
          real basisEval2BC8#1 = RMul(coeff296A,prod2B65);
          real basisEval2BC9#1 = RMul(one28FD,prod2B6B);
          real basisEval2BCA#1 = RMul(coeff296A,prod2B6D);
          real basisEval2BCB#1 = RMul(coeff28FC,prod2B71);
          real basisEval2BCC#1 = RMul(one28FD,prod2B73);
          real basisEval2BCD#1 = RMul(coeff2967,prod2B75);
          real basisEval2BCE#1 = RMul(one28FD,prod2B79);
          real basisEval2BCF#1 = RMul(coeff28FC,prod2B7B);
          real basisEval2BD0#1 = RMul(one28FD,prod2B7D);
          tensor[84] intermediateCons2BD1#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2964,basisEval2985,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2966,basisEval2AFF,basisEval2987,basisEval2969,basisEval2989,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval296D,basisEval2B12,basisEval2B15,basisEval298C,basisEval2970,basisEval2B1D,basisEval298D,basisEval2972,basisEval298F,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2975,basisEval2B2E,basisEval2B31,basisEval2B34,basisEval2992,basisEval297A,basisEval2B3C,basisEval2B3E,basisEval2995,basisEval297E,basisEval2B44,basisEval2997,basisEval2982,basisEval2999,basisEval2984,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2B52,basisEval2B55,basisEval2B58,basisEval2B5B,basisEval2B5E,basisEval2B62,basisEval2B64,basisEval2B66,basisEval2B68,basisEval2B6A,basisEval2B6C,basisEval2B6E,basisEval2B70,basisEval2B72,basisEval2B74,basisEval2B76,basisEval2B78,basisEval2B7A,basisEval2B7C,basisEval2B7E,basisEval2B82];
          tensor[84] intermediateCons2BD2#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval2964,basisEval2908,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval2966,basisEval2913,basisEval2968,basisEval28FB,basisEval2B87,basisEval2989,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval296D,basisEval2926,basisEval296E,basisEval296F,basisEval28FB,basisEval2B8C,basisEval2B1D,basisEval29B3,basisEval28FB,basisEval2B8E,basisEval29B4,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval2975,basisEval2942,basisEval2976,basisEval2977,basisEval2979,basisEval28FB,basisEval2B95,basisEval2B3C,basisEval2B96,basisEval29BA,basisEval28FB,basisEval2B98,basisEval2B99,basisEval2997,basisEval28FB,basisEval2B9A,basisEval29BC,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval2B52,basisEval2B9D,basisEval2B9E,basisEval2B9F,basisEval2BA0,basisEval2BA1,basisEval28FB,basisEval2BA2,basisEval2B66,basisEval2BA3,basisEval2BA4,basisEval2BA5,basisEval28FB,basisEval2BA6,basisEval2BA7,basisEval2B72,basisEval2BA8,basisEval28FB,basisEval2BA9,basisEval2BAA,basisEval2BAB,basisEval28FB,basisEval2BAC,basisEval2BAD,basisEval28FB,basisEval2BAE,basisEval28FB];
          tensor[84] intermediateCons2BD3#1 = <tensor[84]>[basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval2904,basisEval2985,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval2986,basisEval2913,basisEval2987,basisEval28FB,basisEval2969,basisEval2BB1,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval298A,basisEval298B,basisEval2929,basisEval298C,basisEval28FB,basisEval29B2,basisEval2B1D,basisEval2BB6,basisEval28FB,basisEval29A2,basisEval2BB8,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval2990,basisEval2991,basisEval2976,basisEval2948,basisEval2992,basisEval28FB,basisEval29B9,basisEval2BBD,basisEval2B3E,basisEval2BBE,basisEval28FB,basisEval297E,basisEval2B99,basisEval2BBF,basisEval28FB,basisEval29AB,basisEval2BC1,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval2BC2,basisEval2BC3,basisEval2BC4,basisEval2BC5,basisEval2BC6,basisEval2B62,basisEval28FB,basisEval2BC7,basisEval2BC8,basisEval2BA3,basisEval2B6A,basisEval2BC9,basisEval28FB,basisEval2BCA,basisEval2B70,basisEval2BCB,basisEval2BCC,basisEval28FB,basisEval2BCD,basisEval2BAA,basisEval2BCE,basisEval28FB,basisEval2BCF,basisEval2BD0,basisEval28FB,basisEval2BAE,basisEval28FB,basisEval28FB];
          real vdot2CC8#19 = VDot<84>(dofs27A4,intermediateCons2BD1);
          real vdot2CCA#19 = VDot<84>(dofs27A4,intermediateCons2BD2);
          real vdot2CCC#19 = VDot<84>(dofs27A4,intermediateCons2BD3);
          tensor[3] probe_l_62CC6#5 = <tensor[3]>[vdot2CC8,vdot2CCA,vdot2CCC];
          real op1_e3_l_82CD5#1 = VDot<3>(probe_l_62CC6,probe_l_62CC6);
          real op1_e3_l_92CD8#1 = Sqrt(op1_e3_l_82CD5);
          real op1_e3_l_102CDB#1 = RNeg(_t2AE2);
          real op1_e3_l_112CDE#1 = RAdd(fBias2417,op1_e3_l_92CD8);
          real _t2CE1#1 = RDiv(op1_e3_l_102CDB,op1_e3_l_112CDE);
          bool _t2CE4#1 = GT<real>(_t2CE1,fStrTh2413);
          if _t2CE4 then goto ASSIGN592C else goto ASSIGN5398
        ASSIGN592C:  preds = [COND2CE6]
          bool _t2CE9#1 = GTE<real>(one28FD,fMaskTh2415);
          if _t2CE9 then goto ASSIGN592D else goto ASSIGN5397
        ASSIGN592D:  preds = [COND2CEB]
          real vdot2CEE#15 = VDot<3>(tensor2AB8,probe_l_62CC6);
          real vdot2CF0#15 = VDot<3>(tensor2ABF,probe_l_62CC6);
          real vdot2CF2#15 = VDot<3>(tensor2AC6,probe_l_62CC6);
          real r2CFE#11 = RMul(basisEval28FB,one28FD);
          real r2CFF#25 = RMul(basisEval28FB,basisEval28FB);
          real r2D00#3 = RAdd(r2CFE,r2CFF);
          real r2D01#1 = RAdd(r2D00,r2CFF);
          real r2D02#12 = RAdd(r2D01,r2CFF);
          real r2D03#3 = RAdd(r2CFF,r2CFE);
          real r2D04#1 = RAdd(r2D03,r2CFF);
          real r2D05#12 = RAdd(r2D04,r2CFF);
          real r2D06#3 = RAdd(r2CFF,r2CFF);
          real r2D07#1 = RAdd(r2D06,r2CFE);
          real r2D08#12 = RAdd(r2D07,r2CFF);
          real r2D0A#15 = RMul(one28FD,basisEval28FB);
          real r2D0B#1 = RAdd(r2D00,r2D0A);
          real r2D0C#4 = RAdd(r2D0B,r2D0A);
          real r2D0D#1 = RAdd(r2D03,r2D0A);
          real r2D0E#4 = RAdd(r2D0D,r2D0A);
          real r2D10#1 = RAdd(r2D06,prod28FE);
          real r2D11#4 = RAdd(r2D10,r2D0A);
          real realLit2D13#2 = -0.1e1;
          real r2D14#15 = RMul(realLit2D13,basisEval28FB);
          real r2D15#1 = RAdd(r2CFE,r2D14);
          real r2D16#1 = RAdd(r2D15,r2CFF);
          real r2D17#4 = RAdd(r2D16,r2D0A);
          real r2D18#3 = RMul(realLit2D13,one28FD);
          real r2D19#1 = RAdd(r2CFF,r2D18);
          real r2D1A#1 = RAdd(r2D19,r2CFF);
          real r2D1B#4 = RAdd(r2D1A,r2D0A);
          real r2D1C#1 = RAdd(r2CFF,r2D14);
          real r2D1D#1 = RAdd(r2D1C,r2CFE);
          real r2D1E#4 = RAdd(r2D1D,r2D0A);
          real r2D21#1 = RAdd(r2D00,r2D14);
          real r2D22#4 = RAdd(r2D21,r2D14);
          real r2D23#1 = RAdd(r2D03,r2D14);
          real r2D24#4 = RAdd(r2D23,r2D14);
          real r2D25#1 = RAdd(r2D06,r2D18);
          real r2D26#4 = RAdd(r2D25,r2D14);
          real r2D28#1 = RAdd(prod28FE,r2CFF);
          real r2D29#1 = RAdd(r2D28,r2CFF);
          real r2D2A#4 = RAdd(r2D29,r2D0A);
          real r2D2B#1 = RAdd(r2D0A,r2CFE);
          real r2D2C#1 = RAdd(r2D2B,r2CFF);
          real r2D2D#4 = RAdd(r2D2C,r2D0A);
          real r2D2E#1 = RAdd(r2D0A,r2CFF);
          real r2D2F#1 = RAdd(r2D2E,r2CFE);
          real r2D30#4 = RAdd(r2D2F,r2D0A);
          real r2D33#1 = RAdd(r2CFE,r2D0A);
          real r2D34#1 = RAdd(r2D33,r2CFF);
          real r2D35#4 = RAdd(r2D34,r2D14);
          real r2D36#1 = RAdd(r2CFF,prod28FE);
          real r2D37#1 = RAdd(r2D36,r2CFF);
          real r2D38#4 = RAdd(r2D37,r2D14);
          real r2D39#1 = RAdd(r2CFF,r2D0A);
          real r2D3A#1 = RAdd(r2D39,r2CFE);
          real r2D3B#4 = RAdd(r2D3A,r2D14);
          real r2D3D#1 = RAdd(r2D18,r2CFF);
          real r2D3E#1 = RAdd(r2D3D,r2CFF);
          real r2D3F#4 = RAdd(r2D3E,r2D14);
          real r2D40#1 = RAdd(r2D14,r2CFE);
          real r2D41#1 = RAdd(r2D40,r2CFF);
          real r2D42#4 = RAdd(r2D41,r2D14);
          real r2D43#1 = RAdd(r2D14,r2CFF);
          real r2D44#1 = RAdd(r2D43,r2CFE);
          real r2D45#4 = RAdd(r2D44,r2D14);
          real r2D99#1 = RMul(vdot2CEE,r2D02);
          real r2D9C#1 = RMul(vdot2CF0,r2D0C);
          real r2D9F#1 = RMul(vdot2CF2,r2D17);
          real r2DA0#1 = RAdd(r2D99,r2D9C);
          real r2DA1#1 = RAdd(r2DA0,r2D9F);
          real r2DA3#1 = RMul(vdot2CEE,r2D05);
          real r2DA5#1 = RMul(vdot2CF0,r2D0E);
          real r2DA7#1 = RMul(vdot2CF2,r2D1B);
          real r2DA8#1 = RAdd(r2DA3,r2DA5);
          real r2DA9#1 = RAdd(r2DA8,r2DA7);
          real r2DAB#1 = RMul(vdot2CEE,r2D08);
          real r2DAD#1 = RMul(vdot2CF0,r2D11);
          real r2DAF#1 = RMul(vdot2CF2,r2D1E);
          real r2DB0#1 = RAdd(r2DAB,r2DAD);
          real r2DB1#1 = RAdd(r2DB0,r2DAF);
          real r2DB4#1 = RMul(vdot2CEE,r2D22);
          real r2DB6#1 = RMul(vdot2CF0,r2D02);
          real r2DB8#1 = RMul(vdot2CF2,r2D2A);
          real r2DB9#1 = RAdd(r2DB4,r2DB6);
          real r2DBA#1 = RAdd(r2DB9,r2DB8);
          real r2DBC#1 = RMul(vdot2CEE,r2D24);
          real r2DBE#1 = RMul(vdot2CF0,r2D05);
          real r2DC0#1 = RMul(vdot2CF2,r2D2D);
          real r2DC1#1 = RAdd(r2DBC,r2DBE);
          real r2DC2#1 = RAdd(r2DC1,r2DC0);
          real r2DC4#1 = RMul(vdot2CEE,r2D26);
          real r2DC6#1 = RMul(vdot2CF0,r2D08);
          real r2DC8#1 = RMul(vdot2CF2,r2D30);
          real r2DC9#1 = RAdd(r2DC4,r2DC6);
          real r2DCA#1 = RAdd(r2DC9,r2DC8);
          real r2DCD#1 = RMul(vdot2CEE,r2D35);
          real r2DCF#1 = RMul(vdot2CF0,r2D3F);
          real r2DD1#1 = RMul(vdot2CF2,r2D02);
          real r2DD2#1 = RAdd(r2DCD,r2DCF);
          real r2DD3#1 = RAdd(r2DD2,r2DD1);
          real r2DD5#1 = RMul(vdot2CEE,r2D38);
          real r2DD7#1 = RMul(vdot2CF0,r2D42);
          real r2DD9#1 = RMul(vdot2CF2,r2D05);
          real r2DDA#1 = RAdd(r2DD5,r2DD7);
          real r2DDB#1 = RAdd(r2DDA,r2DD9);
          real r2DDD#1 = RMul(vdot2CEE,r2D3B);
          real r2DDF#1 = RMul(vdot2CF0,r2D45);
          real r2DE1#1 = RMul(vdot2CF2,r2D08);
          real r2DE2#1 = RAdd(r2DDD,r2DDF);
          real r2DE3#1 = RAdd(r2DE2,r2DE1);
          real basisEval2E3E#3 = RMul(coeff2909,prod28FF);
          real coeff2E47#13 = 0.24e2;
          real basisEval2E4A#1 = RMul(coeff2E47,prod290B);
          real basisEval2E4E#4 = RMul(coeff2909,prod290F);
          real basisEval2E55#4 = RMul(coeff2909,prod2916);
          real basisEval2E57#2 = RMul(coeff2E47,prod2918);
          real basisEval2E59#2 = RMul(coeff2E47,prod291A);
          real coeff2E5A#9 = 0.60e2;
          real basisEval2E5D#1 = RMul(coeff2E5A,prod291E);
          real basisEval2E61#2 = RMul(coeff2909,prod2922);
          real basisEval2E6B#2 = RMul(coeff2909,prod292C);
          real basisEval2E6D#2 = RMul(coeff2E47,prod292E);
          real basisEval2E6F#3 = RMul(coeff2E47,prod2930);
          real basisEval2E71#2 = RMul(coeff2E47,prod2932);
          real basisEval2E73#1 = RMul(coeff2E5A,prod2934);
          real basisEval2E75#1 = RMul(coeff2E5A,prod2936);
          real coeff2E76#3 = 0.120e3;
          real basisEval2E79#1 = RMul(coeff2E76,prod293A);
          real basisEval2E7E#2 = RMul(coeff296A,prod2907);
          real basisEval2E84#2 = RMul(coeff291C,prod291A);
          real basisEval2E87#1 = RMul(coeff296A,prod2925);
          real basisEval2E89#2 = RMul(coeff297C,prod292C);
          real basisEval2E8B#6 = RMul(coeff291C,prod2930);
          real coeff2E8C#6 = 0.18e2;
          real basisEval2E8D#1 = RMul(coeff2E8C,prod2932);
          real basisEval2E8F#2 = RMul(coeff2E47,prod2936);
          real basisEval2E92#2 = RMul(coeff296A,prod2903);
          real basisEval2E95#2 = RMul(coeff291C,prod2918);
          real basisEval2E97#2 = RMul(coeff297C,prod2922);
          real basisEval2E98#1 = RMul(coeff296A,prod2928);
          real basisEval2E9A#1 = RMul(coeff2E8C,prod292E);
          real basisEval2E9C#2 = RMul(coeff2E47,prod2934);
          real basisEval2E9E#2 = RMul(coeff296A,prod290B);
          real basisEval2EA1#4 = RMul(coeff2909,prod291E);
          real basisEval2EA4#1 = RMul(coeff296A,prod292E);
          real basisEval2EA6#1 = RMul(coeff2E8C,prod2936);
          real basisEval2EA7#2 = RMul(coeff297C,prod293A);
          real basisEval2EB1#1 = RMul(coeff297C,prod2930);
          real basisEval2EB7#1 = RMul(coeff296A,prod2932);
          real basisEval2EB8#1 = RMul(coeff2E8C,prod2934);
          real basisEval2EB9#1 = RMul(coeff2E47,prod2907);
          real basisEval2EBA#2 = RMul(coeff2E47,prod2912);
          real basisEval2EBB#1 = RMul(coeff2E5A,prod2916);
          real basisEval2EBC#2 = RMul(coeff2E47,prod2925);
          real basisEval2EBD#1 = RMul(coeff2E5A,prod2928);
          real basisEval2EBE#1 = RMul(coeff2E76,prod292C);
          real basisEval2EBF#1 = RMul(coeff2E5A,prod2932);
          real basisEval2EC0#2 = RMul(coeff2909,prod293A);
          real basisEval2EC1#2 = RMul(coeff291C,prod2912);
          real basisEval2EC3#1 = RMul(coeff2E8C,prod2925);
          real basisEval2EC4#2 = RMul(coeff2E47,prod2928);
          real basisEval2EC6#1 = RMul(coeff296A,prod2934);
          real basisEval2EC8#1 = RMul(coeff2E8C,prod2928);
          real basisEval2ECA#1 = RMul(coeff296A,prod2936);
          real basisEval2ECB#1 = RMul(coeff2E47,prod2903);
          real basisEval2ECC#1 = RMul(coeff2E5A,prod290F);
          real basisEval2ECD#1 = RMul(coeff2E76,prod2922);
          real basisEval2ECE#1 = RMul(coeff2E5A,prod2925);
          real basisEval2ECF#1 = RMul(coeff2E5A,prod292E);
          tensor[84] intermediateCons2ED0#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E3E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval299A,basisEval2E4A,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval299B,basisEval2E55,basisEval2E57,basisEval2E59,basisEval2E5D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E61,basisEval299E,basisEval29B1,basisEval2E6B,basisEval2E6D,basisEval2E6F,basisEval2E71,basisEval2E73,basisEval2E75,basisEval2E79];
          tensor[84] intermediateCons2ED1#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2E7E,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval29AF,basisEval2E55,basisEval28FB,basisEval2919,basisEval2E84,basisEval28FB,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval2E87,basisEval29B1,basisEval2E89,basisEval28FB,basisEval292F,basisEval2E8B,basisEval2E8D,basisEval28FB,basisEval2935,basisEval2E8F,basisEval28FB,basisEval293B,basisEval28FB];
          tensor[84] intermediateCons2ED2#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E92,basisEval2908,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval29AF,basisEval2917,basisEval28FB,basisEval2E95,basisEval291B,basisEval28FB,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E97,basisEval299E,basisEval2E98,basisEval292D,basisEval28FB,basisEval2E9A,basisEval2E8B,basisEval2933,basisEval28FB,basisEval2E9C,basisEval2937,basisEval28FB,basisEval293B,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED3#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval299A,basisEval28FB,basisEval28FB,basisEval2E9E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval299B,basisEval299C,basisEval28FB,basisEval28FB,basisEval2988,basisEval2E84,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval299E,basisEval299F,basisEval29A0,basisEval28FB,basisEval28FB,basisEval2EA4,basisEval2E8B,basisEval2E71,basisEval28FB,basisEval28FB,basisEval298E,basisEval2EA6,basisEval28FB,basisEval28FB,basisEval2EA7,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED4#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval29AF,basisEval2968,basisEval28FB,basisEval28FB,basisEval2988,basisEval296B,basisEval28FB,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval299E,basisEval29B1,basisEval296F,basisEval28FB,basisEval28FB,basisEval292F,basisEval2EB1,basisEval2933,basisEval28FB,basisEval28FB,basisEval298E,basisEval2973,basisEval28FB,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED5#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2908,basisEval28FB,basisEval28FB,basisEval2E9E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval299B,basisEval2917,basisEval28FB,basisEval28FB,basisEval2E95,basisEval296B,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval29C1,basisEval29B1,basisEval292D,basisEval28FB,basisEval28FB,basisEval2E6D,basisEval2E8B,basisEval2EB7,basisEval28FB,basisEval28FB,basisEval2EB8,basisEval2973,basisEval28FB,basisEval28FB,basisEval2EA7,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED6#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E3E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2EB9,basisEval28FB,basisEval28FB,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval2EBA,basisEval2EBB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2919,basisEval2E59,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E61,basisEval2EBC,basisEval2EBD,basisEval2EBE,basisEval28FB,basisEval28FB,basisEval28FB,basisEval292F,basisEval2E6F,basisEval2EBF,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298E,basisEval2E8F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EC0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED7#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E92,basisEval299A,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval2EC1,basisEval299C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2988,basisEval291B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E97,basisEval2EC3,basisEval2EC4,basisEval29A0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval292F,basisEval2E8B,basisEval29A1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EC6,basisEval2973,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED8#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2E7E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval2EC1,basisEval2E55,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2919,basisEval296B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval2EBC,basisEval2EC8,basisEval2E89,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C2,basisEval2E8B,basisEval2933,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298E,basisEval2ECA,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED9#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E3E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECB,basisEval299A,basisEval28FB,basisEval28FB,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECC,basisEval2EBA,basisEval2E55,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E57,basisEval291B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECD,basisEval2ECE,basisEval2EC4,basisEval2E6B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECF,basisEval2E6F,basisEval2933,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E9C,basisEval2973,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EC0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          real vdot2F95#1 = VDot<84>(dofs27A4,intermediateCons2ED0);
          real vdot2F97#2 = VDot<84>(dofs27A4,intermediateCons2ED1);
          real vdot2F99#2 = VDot<84>(dofs27A4,intermediateCons2ED2);
          real vdot2F9E#2 = VDot<84>(dofs27A4,intermediateCons2ED3);
          real vdot2FA0#3 = VDot<84>(dofs27A4,intermediateCons2ED4);
          real vdot2FA7#2 = VDot<84>(dofs27A4,intermediateCons2ED5);
          real vdot2FB4#1 = VDot<84>(dofs27A4,intermediateCons2ED6);
          real vdot2FB6#2 = VDot<84>(dofs27A4,intermediateCons2ED7);
          real vdot2FBD#2 = VDot<84>(dofs27A4,intermediateCons2ED8);
          real vdot2FD3#1 = VDot<84>(dofs27A4,intermediateCons2ED9);
          real r301D#1 = RMul(vdot2CC8,vdot2F95);
          real r3020#1 = RMul(vdot2CCA,vdot2F97);
          real r3023#1 = RMul(vdot2CCC,vdot2F99);
          real r3024#1 = RAdd(r301D,r3020);
          real r3025#1 = RAdd(r3024,r3023);
          real r3027#1 = RMul(vdot2CC8,vdot2F97);
          real r3029#1 = RMul(vdot2CCA,vdot2F9E);
          real r302B#1 = RMul(vdot2CCC,vdot2FA0);
          real r302C#1 = RAdd(r3027,r3029);
          real r302D#2 = RAdd(r302C,r302B);
          real r302F#1 = RMul(vdot2CC8,vdot2F99);
          real r3031#1 = RMul(vdot2CCA,vdot2FA0);
          real r3033#1 = RMul(vdot2CCC,vdot2FA7);
          real r3034#1 = RAdd(r302F,r3031);
          real r3035#2 = RAdd(r3034,r3033);
          tensor[3] tensor3036#1 = <tensor[3]>[r3025,r302D,r3035];
          real r3040#1 = RMul(vdot2CC8,vdot2F9E);
          real r3042#1 = RMul(vdot2CCA,vdot2FB4);
          real r3044#1 = RMul(vdot2CCC,vdot2FB6);
          real r3045#1 = RAdd(r3040,r3042);
          real r3046#1 = RAdd(r3045,r3044);
          real r3048#1 = RMul(vdot2CC8,vdot2FA0);
          real r304A#1 = RMul(vdot2CCA,vdot2FB6);
          real r304C#1 = RMul(vdot2CCC,vdot2FBD);
          real r304D#1 = RAdd(r3048,r304A);
          real r304E#2 = RAdd(r304D,r304C);
          tensor[3] tensor304F#1 = <tensor[3]>[r302D,r3046,r304E];
          real r3061#1 = RMul(vdot2CC8,vdot2FA7);
          real r3063#1 = RMul(vdot2CCA,vdot2FBD);
          real r3065#1 = RMul(vdot2CCC,vdot2FD3);
          real r3066#1 = RAdd(r3061,r3063);
          real r3067#1 = RAdd(r3066,r3065);
          tensor[3] tensor3068#1 = <tensor[3]>[r3035,r304E,r3067];
          real r30BB#1 = RMul(vdot2AB3,vdot2AB3);
          real r30BE#2 = RMul(vdot2AB5,vdot2AB5);
          real r30C1#2 = RMul(vdot2AB7,vdot2AB7);
          real r30C2#1 = RAdd(r30BB,r30BE);
          real r30C3#1 = RAdd(r30C2,r30C1);
          real r30C4#1 = RMul(vdot2AB3,vdot2AB5);
          real r30C6#1 = RMul(vdot2AB5,vdot2ABC);
          real r30C8#1 = RMul(vdot2AB7,vdot2ABE);
          real r30C9#1 = RAdd(r30C4,r30C6);
          real r30CA#1 = RAdd(r30C9,r30C8);
          real r30CB#1 = RMul(vdot2AB3,vdot2AB7);
          real r30CD#1 = RMul(vdot2AB5,vdot2ABE);
          real r30CF#1 = RMul(vdot2AB7,vdot2AC5);
          real r30D0#1 = RAdd(r30CB,r30CD);
          real r30D1#1 = RAdd(r30D0,r30CF);
          tensor[3] tensor30D2#1 = <tensor[3]>[r30C3,r30CA,r30D1];
          real r30D3#1 = RMul(vdot2AB5,vdot2AB3);
          real r30D4#1 = RMul(vdot2ABC,vdot2AB5);
          real r30D5#1 = RMul(vdot2ABE,vdot2AB7);
          real r30D6#1 = RAdd(r30D3,r30D4);
          real r30D7#1 = RAdd(r30D6,r30D5);
          real r30D9#1 = RMul(vdot2ABC,vdot2ABC);
          real r30DA#2 = RMul(vdot2ABE,vdot2ABE);
          real r30DB#1 = RAdd(r30BE,r30D9);
          real r30DC#1 = RAdd(r30DB,r30DA);
          real r30DD#1 = RMul(vdot2AB5,vdot2AB7);
          real r30DE#1 = RMul(vdot2ABC,vdot2ABE);
          real r30DF#1 = RMul(vdot2ABE,vdot2AC5);
          real r30E0#1 = RAdd(r30DD,r30DE);
          real r30E1#1 = RAdd(r30E0,r30DF);
          tensor[3] tensor30E2#1 = <tensor[3]>[r30D7,r30DC,r30E1];
          real r30E3#1 = RMul(vdot2AB7,vdot2AB3);
          real r30E4#1 = RMul(vdot2ABE,vdot2AB5);
          real r30E5#1 = RMul(vdot2AC5,vdot2AB7);
          real r30E6#1 = RAdd(r30E3,r30E4);
          real r30E7#1 = RAdd(r30E6,r30E5);
          real r30E8#1 = RMul(vdot2AB7,vdot2AB5);
          real r30E9#1 = RMul(vdot2ABE,vdot2ABC);
          real r30EA#1 = RMul(vdot2AC5,vdot2ABE);
          real r30EB#1 = RAdd(r30E8,r30E9);
          real r30EC#1 = RAdd(r30EB,r30EA);
          real r30EF#1 = RMul(vdot2AC5,vdot2AC5);
          real r30F0#1 = RAdd(r30C1,r30DA);
          real r30F1#1 = RAdd(r30F0,r30EF);
          tensor[3] tensor30F2#1 = <tensor[3]>[r30E7,r30EC,r30F1];
          tensor[3] v3131#3 = VAdd<3>(tensor3036,tensor30D2);
          tensor[3] v3134#3 = VAdd<3>(tensor304F,tensor30E2);
          tensor[3] v3137#3 = VAdd<3>(tensor3068,tensor30F2);
          real r3146#1 = RMul(vdot2CEE,vdot2AB3);
          real r3148#2 = RMul(vdot2CEE,vdot2AB5);
          real r314A#2 = RMul(vdot2CEE,vdot2AB7);
          tensor[3] tensor314B#1 = <tensor[3]>[r3146,r3148,r314A];
          real r314F#1 = RMul(vdot2CEE,vdot2ABC);
          real r3151#2 = RMul(vdot2CEE,vdot2ABE);
          tensor[3] tensor3152#1 = <tensor[3]>[r3148,r314F,r3151];
          real r3158#1 = RMul(vdot2CEE,vdot2AC5);
          tensor[3] tensor3159#1 = <tensor[3]>[r314A,r3151,r3158];
          real r315C#1 = RMul(vdot2CF0,vdot2AB3);
          real r315D#2 = RMul(vdot2CF0,vdot2AB5);
          real r315E#2 = RMul(vdot2CF0,vdot2AB7);
          tensor[3] tensor315F#1 = <tensor[3]>[r315C,r315D,r315E];
          real r3161#1 = RMul(vdot2CF0,vdot2ABC);
          real r3162#2 = RMul(vdot2CF0,vdot2ABE);
          tensor[3] tensor3163#1 = <tensor[3]>[r315D,r3161,r3162];
          real r3166#1 = RMul(vdot2CF0,vdot2AC5);
          tensor[3] tensor3167#1 = <tensor[3]>[r315E,r3162,r3166];
          real r316A#1 = RMul(vdot2CF2,vdot2AB3);
          real r316B#2 = RMul(vdot2CF2,vdot2AB5);
          real r316C#2 = RMul(vdot2CF2,vdot2AB7);
          tensor[3] tensor316D#1 = <tensor[3]>[r316A,r316B,r316C];
          real r316F#1 = RMul(vdot2CF2,vdot2ABC);
          real r3170#2 = RMul(vdot2CF2,vdot2ABE);
          tensor[3] tensor3171#1 = <tensor[3]>[r316B,r316F,r3170];
          real r3174#1 = RMul(vdot2CF2,vdot2AC5);
          tensor[3] tensor3175#1 = <tensor[3]>[r316C,r3170,r3174];
          real r31AE#3 = VIndex<3,0>(v3131);
          real r31AF#1 = RMul(vdot2CC8,r31AE);
          real r31B0#3 = VIndex<3,1>(v3131);
          real r31B1#1 = RMul(vdot2CC8,r31B0);
          real r31B2#3 = VIndex<3,2>(v3131);
          real r31B3#1 = RMul(vdot2CC8,r31B2);
          tensor[3] tensor31B4#1 = <tensor[3]>[r31AF,r31B1,r31B3];
          real r31B5#3 = VIndex<3,0>(v3134);
          real r31B6#1 = RMul(vdot2CC8,r31B5);
          real r31B7#3 = VIndex<3,1>(v3134);
          real r31B8#1 = RMul(vdot2CC8,r31B7);
          real r31B9#3 = VIndex<3,2>(v3134);
          real r31BA#1 = RMul(vdot2CC8,r31B9);
          tensor[3] tensor31BB#1 = <tensor[3]>[r31B6,r31B8,r31BA];
          real r31BC#3 = VIndex<3,0>(v3137);
          real r31BD#1 = RMul(vdot2CC8,r31BC);
          real r31BE#3 = VIndex<3,1>(v3137);
          real r31BF#1 = RMul(vdot2CC8,r31BE);
          real r31C0#3 = VIndex<3,2>(v3137);
          real r31C1#1 = RMul(vdot2CC8,r31C0);
          tensor[3] tensor31C2#1 = <tensor[3]>[r31BD,r31BF,r31C1];
          real r31C5#1 = RMul(vdot2CCA,r31AE);
          real r31C6#1 = RMul(vdot2CCA,r31B0);
          real r31C7#1 = RMul(vdot2CCA,r31B2);
          tensor[3] tensor31C8#1 = <tensor[3]>[r31C5,r31C6,r31C7];
          real r31C9#1 = RMul(vdot2CCA,r31B5);
          real r31CA#1 = RMul(vdot2CCA,r31B7);
          real r31CB#1 = RMul(vdot2CCA,r31B9);
          tensor[3] tensor31CC#1 = <tensor[3]>[r31C9,r31CA,r31CB];
          real r31CD#1 = RMul(vdot2CCA,r31BC);
          real r31CE#1 = RMul(vdot2CCA,r31BE);
          real r31CF#1 = RMul(vdot2CCA,r31C0);
          tensor[3] tensor31D0#1 = <tensor[3]>[r31CD,r31CE,r31CF];
          real r31D3#1 = RMul(vdot2CCC,r31AE);
          real r31D4#1 = RMul(vdot2CCC,r31B0);
          real r31D5#1 = RMul(vdot2CCC,r31B2);
          tensor[3] tensor31D6#1 = <tensor[3]>[r31D3,r31D4,r31D5];
          real r31D7#1 = RMul(vdot2CCC,r31B5);
          real r31D8#1 = RMul(vdot2CCC,r31B7);
          real r31D9#1 = RMul(vdot2CCC,r31B9);
          tensor[3] tensor31DA#1 = <tensor[3]>[r31D7,r31D8,r31D9];
          real r31DB#1 = RMul(vdot2CCC,r31BC);
          real r31DC#1 = RMul(vdot2CCC,r31BE);
          real r31DD#1 = RMul(vdot2CCC,r31C0);
          tensor[3] tensor31DE#1 = <tensor[3]>[r31DB,r31DC,r31DD];
          tensor[3] v3218#3 = VAdd<3>(tensor314B,tensor31B4);
          tensor[3] v321B#3 = VAdd<3>(tensor3152,tensor31C8);
          tensor[3] v321E#3 = VAdd<3>(tensor3159,tensor31D6);
          tensor[3] v3222#3 = VAdd<3>(tensor315F,tensor31BB);
          tensor[3] v3225#3 = VAdd<3>(tensor3163,tensor31CC);
          tensor[3] v3228#3 = VAdd<3>(tensor3167,tensor31DA);
          tensor[3] v322C#3 = VAdd<3>(tensor316D,tensor31C2);
          tensor[3] v322F#3 = VAdd<3>(tensor3171,tensor31D0);
          tensor[3] v3232#3 = VAdd<3>(tensor3175,tensor31DE);
          real r3257#1 = RMul(vdot2CC8,r2DA1);
          real r325A#1 = RMul(vdot2CCA,r2DBA);
          real r325D#1 = RMul(vdot2CCC,r2DD3);
          real r325E#1 = RAdd(r3257,r325A);
          real r325F#1 = RAdd(r325E,r325D);
          real r3261#1 = RMul(vdot2CC8,r2DA9);
          real r3263#1 = RMul(vdot2CCA,r2DC2);
          real r3265#1 = RMul(vdot2CCC,r2DDB);
          real r3266#1 = RAdd(r3261,r3263);
          real r3267#1 = RAdd(r3266,r3265);
          real r3269#1 = RMul(vdot2CC8,r2DB1);
          real r326B#1 = RMul(vdot2CCA,r2DCA);
          real r326D#1 = RMul(vdot2CCC,r2DE3);
          real r326E#1 = RAdd(r3269,r326B);
          real r326F#1 = RAdd(r326E,r326D);
          tensor[3] op1_e3_l_413254#3 = <tensor[3]>[r325F,r3267,r326F];
          real r328E#3 = VIndex<3,0>(v3218);
          real r3290#1 = RMul(r328E,r2D02);
          real r3291#3 = VIndex<3,0>(v3222);
          real r3293#1 = RMul(r3291,r2D0C);
          real r3294#3 = VIndex<3,0>(v322C);
          real r3296#1 = RMul(r3294,r2D17);
          real r3297#3 = VIndex<3,0>(v321B);
          real r3299#1 = RMul(r3297,r2D22);
          real r329A#3 = VIndex<3,0>(v3225);
          real r329C#1 = RMul(r329A,r2D02);
          real r329D#3 = VIndex<3,0>(v322F);
          real r329F#1 = RMul(r329D,r2D2A);
          real r32A0#3 = VIndex<3,0>(v321E);
          real r32A2#1 = RMul(r32A0,r2D35);
          real r32A3#3 = VIndex<3,0>(v3228);
          real r32A5#1 = RMul(r32A3,r2D3F);
          real r32A6#3 = VIndex<3,0>(v3232);
          real r32A8#1 = RMul(r32A6,r2D02);
          real r32A9#1 = RAdd(r3290,r3293);
          real r32AA#1 = RAdd(r32A9,r3296);
          real r32AB#1 = RAdd(r32AA,r3299);
          real r32AC#1 = RAdd(r32AB,r329C);
          real r32AD#1 = RAdd(r32AC,r329F);
          real r32AE#1 = RAdd(r32AD,r32A2);
          real r32AF#1 = RAdd(r32AE,r32A5);
          real r32B0#1 = RAdd(r32AF,r32A8);
          real r32B2#1 = RMul(r328E,r2D05);
          real r32B4#1 = RMul(r3291,r2D0E);
          real r32B6#1 = RMul(r3294,r2D1B);
          real r32B8#1 = RMul(r3297,r2D24);
          real r32BA#1 = RMul(r329A,r2D05);
          real r32BC#1 = RMul(r329D,r2D2D);
          real r32BE#1 = RMul(r32A0,r2D38);
          real r32C0#1 = RMul(r32A3,r2D42);
          real r32C2#1 = RMul(r32A6,r2D05);
          real r32C3#1 = RAdd(r32B2,r32B4);
          real r32C4#1 = RAdd(r32C3,r32B6);
          real r32C5#1 = RAdd(r32C4,r32B8);
          real r32C6#1 = RAdd(r32C5,r32BA);
          real r32C7#1 = RAdd(r32C6,r32BC);
          real r32C8#1 = RAdd(r32C7,r32BE);
          real r32C9#1 = RAdd(r32C8,r32C0);
          real r32CA#1 = RAdd(r32C9,r32C2);
          real r32CC#1 = RMul(r328E,r2D08);
          real r32CE#1 = RMul(r3291,r2D11);
          real r32D0#1 = RMul(r3294,r2D1E);
          real r32D2#1 = RMul(r3297,r2D26);
          real r32D4#1 = RMul(r329A,r2D08);
          real r32D6#1 = RMul(r329D,r2D30);
          real r32D8#1 = RMul(r32A0,r2D3B);
          real r32DA#1 = RMul(r32A3,r2D45);
          real r32DC#1 = RMul(r32A6,r2D08);
          real r32DD#1 = RAdd(r32CC,r32CE);
          real r32DE#1 = RAdd(r32DD,r32D0);
          real r32DF#1 = RAdd(r32DE,r32D2);
          real r32E0#1 = RAdd(r32DF,r32D4);
          real r32E1#1 = RAdd(r32E0,r32D6);
          real r32E2#1 = RAdd(r32E1,r32D8);
          real r32E3#1 = RAdd(r32E2,r32DA);
          real r32E4#1 = RAdd(r32E3,r32DC);
          tensor[3] tensor32E5#1 = <tensor[3]>[r32B0,r32CA,r32E4];
          real r32E6#3 = VIndex<3,1>(v3218);
          real r32E7#1 = RMul(r32E6,r2D02);
          real r32E8#3 = VIndex<3,1>(v3222);
          real r32E9#1 = RMul(r32E8,r2D0C);
          real r32EA#3 = VIndex<3,1>(v322C);
          real r32EB#1 = RMul(r32EA,r2D17);
          real r32EC#3 = VIndex<3,1>(v321B);
          real r32ED#1 = RMul(r32EC,r2D22);
          real r32EE#3 = VIndex<3,1>(v3225);
          real r32EF#1 = RMul(r32EE,r2D02);
          real r32F0#3 = VIndex<3,1>(v322F);
          real r32F1#1 = RMul(r32F0,r2D2A);
          real r32F2#3 = VIndex<3,1>(v321E);
          real r32F3#1 = RMul(r32F2,r2D35);
          real r32F4#3 = VIndex<3,1>(v3228);
          real r32F5#1 = RMul(r32F4,r2D3F);
          real r32F6#3 = VIndex<3,1>(v3232);
          real r32F7#1 = RMul(r32F6,r2D02);
          real r32F8#1 = RAdd(r32E7,r32E9);
          real r32F9#1 = RAdd(r32F8,r32EB);
          real r32FA#1 = RAdd(r32F9,r32ED);
          real r32FB#1 = RAdd(r32FA,r32EF);
          real r32FC#1 = RAdd(r32FB,r32F1);
          real r32FD#1 = RAdd(r32FC,r32F3);
          real r32FE#1 = RAdd(r32FD,r32F5);
          real r32FF#1 = RAdd(r32FE,r32F7);
          real r3300#1 = RMul(r32E6,r2D05);
          real r3301#1 = RMul(r32E8,r2D0E);
          real r3302#1 = RMul(r32EA,r2D1B);
          real r3303#1 = RMul(r32EC,r2D24);
          real r3304#1 = RMul(r32EE,r2D05);
          real r3305#1 = RMul(r32F0,r2D2D);
          real r3306#1 = RMul(r32F2,r2D38);
          real r3307#1 = RMul(r32F4,r2D42);
          real r3308#1 = RMul(r32F6,r2D05);
          real r3309#1 = RAdd(r3300,r3301);
          real r330A#1 = RAdd(r3309,r3302);
          real r330B#1 = RAdd(r330A,r3303);
          real r330C#1 = RAdd(r330B,r3304);
          real r330D#1 = RAdd(r330C,r3305);
          real r330E#1 = RAdd(r330D,r3306);
          real r330F#1 = RAdd(r330E,r3307);
          real r3310#1 = RAdd(r330F,r3308);
          real r3311#1 = RMul(r32E6,r2D08);
          real r3312#1 = RMul(r32E8,r2D11);
          real r3313#1 = RMul(r32EA,r2D1E);
          real r3314#1 = RMul(r32EC,r2D26);
          real r3315#1 = RMul(r32EE,r2D08);
          real r3316#1 = RMul(r32F0,r2D30);
          real r3317#1 = RMul(r32F2,r2D3B);
          real r3318#1 = RMul(r32F4,r2D45);
          real r3319#1 = RMul(r32F6,r2D08);
          real r331A#1 = RAdd(r3311,r3312);
          real r331B#1 = RAdd(r331A,r3313);
          real r331C#1 = RAdd(r331B,r3314);
          real r331D#1 = RAdd(r331C,r3315);
          real r331E#1 = RAdd(r331D,r3316);
          real r331F#1 = RAdd(r331E,r3317);
          real r3320#1 = RAdd(r331F,r3318);
          real r3321#1 = RAdd(r3320,r3319);
          tensor[3] tensor3322#1 = <tensor[3]>[r32FF,r3310,r3321];
          real r3323#3 = VIndex<3,2>(v3218);
          real r3324#1 = RMul(r3323,r2D02);
          real r3325#3 = VIndex<3,2>(v3222);
          real r3326#1 = RMul(r3325,r2D0C);
          real r3327#3 = VIndex<3,2>(v322C);
          real r3328#1 = RMul(r3327,r2D17);
          real r3329#3 = VIndex<3,2>(v321B);
          real r332A#1 = RMul(r3329,r2D22);
          real r332B#3 = VIndex<3,2>(v3225);
          real r332C#1 = RMul(r332B,r2D02);
          real r332D#3 = VIndex<3,2>(v322F);
          real r332E#1 = RMul(r332D,r2D2A);
          real r332F#3 = VIndex<3,2>(v321E);
          real r3330#1 = RMul(r332F,r2D35);
          real r3331#3 = VIndex<3,2>(v3228);
          real r3332#1 = RMul(r3331,r2D3F);
          real r3333#3 = VIndex<3,2>(v3232);
          real r3334#1 = RMul(r3333,r2D02);
          real r3335#1 = RAdd(r3324,r3326);
          real r3336#1 = RAdd(r3335,r3328);
          real r3337#1 = RAdd(r3336,r332A);
          real r3338#1 = RAdd(r3337,r332C);
          real r3339#1 = RAdd(r3338,r332E);
          real r333A#1 = RAdd(r3339,r3330);
          real r333B#1 = RAdd(r333A,r3332);
          real r333C#1 = RAdd(r333B,r3334);
          real r333D#1 = RMul(r3323,r2D05);
          real r333E#1 = RMul(r3325,r2D0E);
          real r333F#1 = RMul(r3327,r2D1B);
          real r3340#1 = RMul(r3329,r2D24);
          real r3341#1 = RMul(r332B,r2D05);
          real r3342#1 = RMul(r332D,r2D2D);
          real r3343#1 = RMul(r332F,r2D38);
          real r3344#1 = RMul(r3331,r2D42);
          real r3345#1 = RMul(r3333,r2D05);
          real r3346#1 = RAdd(r333D,r333E);
          real r3347#1 = RAdd(r3346,r333F);
          real r3348#1 = RAdd(r3347,r3340);
          real r3349#1 = RAdd(r3348,r3341);
          real r334A#1 = RAdd(r3349,r3342);
          real r334B#1 = RAdd(r334A,r3343);
          real r334C#1 = RAdd(r334B,r3344);
          real r334D#1 = RAdd(r334C,r3345);
          real r334E#1 = RMul(r3323,r2D08);
          real r334F#1 = RMul(r3325,r2D11);
          real r3350#1 = RMul(r3327,r2D1E);
          real r3351#1 = RMul(r3329,r2D26);
          real r3352#1 = RMul(r332B,r2D08);
          real r3353#1 = RMul(r332D,r2D30);
          real r3354#1 = RMul(r332F,r2D3B);
          real r3355#1 = RMul(r3331,r2D45);
          real r3356#1 = RMul(r3333,r2D08);
          real r3357#1 = RAdd(r334E,r334F);
          real r3358#1 = RAdd(r3357,r3350);
          real r3359#1 = RAdd(r3358,r3351);
          real r335A#1 = RAdd(r3359,r3352);
          real r335B#1 = RAdd(r335A,r3353);
          real r335C#1 = RAdd(r335B,r3354);
          real r335D#1 = RAdd(r335C,r3355);
          real r335E#1 = RAdd(r335D,r3356);
          tensor[3] tensor335F#1 = <tensor[3]>[r333C,r334D,r335E];
          real vdot3436#1 = VDot<3>(op1_e3_l_413254,tensor32E5);
          real vdot3438#1 = VDot<3>(op1_e3_l_413254,tensor3322);
          real vdot343A#1 = VDot<3>(op1_e3_l_413254,tensor335F);
          tensor[3] op1_e3_l_673434#2 = <tensor[3]>[vdot3436,vdot3438,vdot343A];
          tensor[3] op1_e3_l_1193443#2 = VAdd<3>(op1_e3_l_673434,op1_e3_l_673434);
          real op1_e3_l_1213446#1 = VDot<3>(op1_e3_l_1193443,op1_e3_l_1193443);
          real _t3449#1 = Sqrt(op1_e3_l_1213446);
          real _t344C#1 = 0.1e-7;
          bool _t344E#1 = GT<real>(_t3449,_t344C);
          if _t344E then goto ASSIGN3452 else goto ASSIGN5396
        ASSIGN3452:  preds = [COND3450]
          bool _t3451#1 = true;
          goto JOIN3455
        JOIN3455:  preds = [ASSIGN3452,ASSIGN5396]
          bool _t3453#1 = phi(_t3451,_t3454)
          goto JOIN3458
        JOIN3458:  preds = [JOIN3455,ASSIGN5397]
          bool _t3456#1 = phi(_t3453,_t3457)
          goto JOIN345B
        JOIN345B:  preds = [JOIN3458,ASSIGN5398]
          bool _t3459#1 = phi(_t3456,_t345A)
          goto JOIN345E
        JOIN345E:  preds = [JOIN345B,ASSIGN5399]
          bool _t345C#1 = phi(_t3459,_t345D)
          bool _t345F#1 = BNot(_t345C);
          if _t345F then goto SAVE3462 else goto JOIN3464
        SAVE3462:  preds = [COND3461]
          self.rayN = rayN243D;
          active
          goto JOIN3464
        JOIN3464:  preds = [*ACTIVE3463,COND3461]
          real _t3465#1030 = 0.e0;
          real _t3467#225 = 0.1e1;
          real _t3469#1 = 0.15e1;
          int ilit346C#1 = 84;
          int mulRes346D#84 = IMul(_t2401,ilit346C);
          int idx3470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,mulRes346D);
          int ilit3471#91 = 1;
          int addRes3472#1 = IAdd(mulRes346D,ilit3471);
          int idx3473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3472);
          int ilit3474#5 = 2;
          int addRes3475#1 = IAdd(mulRes346D,ilit3474);
          int idx3476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3475);
          int ilit3477#5 = 3;
          int addRes3478#1 = IAdd(mulRes346D,ilit3477);
          int idx3479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3478);
          int ilit347A#1 = 4;
          int addRes347B#1 = IAdd(mulRes346D,ilit347A);
          int idx347C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347B);
          int ilit347D#1 = 5;
          int addRes347E#1 = IAdd(mulRes346D,ilit347D);
          int idx347F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347E);
          int ilit3480#1 = 6;
          int addRes3481#1 = IAdd(mulRes346D,ilit3480);
          int idx3482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3481);
          int ilit3483#1 = 7;
          int addRes3484#1 = IAdd(mulRes346D,ilit3483);
          int idx3485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3484);
          int ilit3486#1 = 8;
          int addRes3487#1 = IAdd(mulRes346D,ilit3486);
          int idx3488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3487);
          int ilit3489#1 = 9;
          int addRes348A#1 = IAdd(mulRes346D,ilit3489);
          int idx348B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348A);
          int ilit348C#1 = 10;
          int addRes348D#1 = IAdd(mulRes346D,ilit348C);
          int idx348E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348D);
          int ilit348F#1 = 11;
          int addRes3490#1 = IAdd(mulRes346D,ilit348F);
          int idx3491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3490);
          int ilit3492#1 = 12;
          int addRes3493#1 = IAdd(mulRes346D,ilit3492);
          int idx3494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3493);
          int ilit3495#1 = 13;
          int addRes3496#1 = IAdd(mulRes346D,ilit3495);
          int idx3497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3496);
          int ilit3498#1 = 14;
          int addRes3499#1 = IAdd(mulRes346D,ilit3498);
          int idx349A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3499);
          int ilit349B#1 = 15;
          int addRes349C#1 = IAdd(mulRes346D,ilit349B);
          int idx349D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349C);
          int ilit349E#1 = 16;
          int addRes349F#1 = IAdd(mulRes346D,ilit349E);
          int idx34A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349F);
          int ilit34A1#1 = 17;
          int addRes34A2#1 = IAdd(mulRes346D,ilit34A1);
          int idx34A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A2);
          int ilit34A4#1 = 18;
          int addRes34A5#1 = IAdd(mulRes346D,ilit34A4);
          int idx34A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A5);
          int ilit34A7#1 = 19;
          int addRes34A8#1 = IAdd(mulRes346D,ilit34A7);
          int idx34A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A8);
          int ilit34AA#1 = 20;
          int addRes34AB#1 = IAdd(mulRes346D,ilit34AA);
          int idx34AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AB);
          int ilit34AD#1 = 21;
          int addRes34AE#1 = IAdd(mulRes346D,ilit34AD);
          int idx34AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AE);
          int ilit34B0#1 = 22;
          int addRes34B1#1 = IAdd(mulRes346D,ilit34B0);
          int idx34B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B1);
          int ilit34B3#1 = 23;
          int addRes34B4#1 = IAdd(mulRes346D,ilit34B3);
          int idx34B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B4);
          int ilit34B6#1 = 24;
          int addRes34B7#1 = IAdd(mulRes346D,ilit34B6);
          int idx34B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B7);
          int ilit34B9#1 = 25;
          int addRes34BA#1 = IAdd(mulRes346D,ilit34B9);
          int idx34BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BA);
          int ilit34BC#1 = 26;
          int addRes34BD#1 = IAdd(mulRes346D,ilit34BC);
          int idx34BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BD);
          int ilit34BF#1 = 27;
          int addRes34C0#1 = IAdd(mulRes346D,ilit34BF);
          int idx34C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C0);
          int ilit34C2#1 = 28;
          int addRes34C3#1 = IAdd(mulRes346D,ilit34C2);
          int idx34C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C3);
          int ilit34C5#1 = 29;
          int addRes34C6#1 = IAdd(mulRes346D,ilit34C5);
          int idx34C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C6);
          int ilit34C8#1 = 30;
          int addRes34C9#1 = IAdd(mulRes346D,ilit34C8);
          int idx34CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C9);
          int ilit34CB#1 = 31;
          int addRes34CC#1 = IAdd(mulRes346D,ilit34CB);
          int idx34CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CC);
          int ilit34CE#1 = 32;
          int addRes34CF#1 = IAdd(mulRes346D,ilit34CE);
          int idx34D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CF);
          int ilit34D1#1 = 33;
          int addRes34D2#1 = IAdd(mulRes346D,ilit34D1);
          int idx34D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D2);
          int ilit34D4#1 = 34;
          int addRes34D5#1 = IAdd(mulRes346D,ilit34D4);
          int idx34D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D5);
          int ilit34D7#1 = 35;
          int addRes34D8#1 = IAdd(mulRes346D,ilit34D7);
          int idx34D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D8);
          int ilit34DA#1 = 36;
          int addRes34DB#1 = IAdd(mulRes346D,ilit34DA);
          int idx34DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DB);
          int ilit34DD#1 = 37;
          int addRes34DE#1 = IAdd(mulRes346D,ilit34DD);
          int idx34DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DE);
          int ilit34E0#1 = 38;
          int addRes34E1#1 = IAdd(mulRes346D,ilit34E0);
          int idx34E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E1);
          int ilit34E3#1 = 39;
          int addRes34E4#1 = IAdd(mulRes346D,ilit34E3);
          int idx34E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E4);
          int ilit34E6#1 = 40;
          int addRes34E7#1 = IAdd(mulRes346D,ilit34E6);
          int idx34E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E7);
          int ilit34E9#1 = 41;
          int addRes34EA#1 = IAdd(mulRes346D,ilit34E9);
          int idx34EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34EA);
          int ilit34EC#1 = 42;
          int addRes34ED#1 = IAdd(mulRes346D,ilit34EC);
          int idx34EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34ED);
          int ilit34EF#1 = 43;
          int addRes34F0#1 = IAdd(mulRes346D,ilit34EF);
          int idx34F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F0);
          int ilit34F2#1 = 44;
          int addRes34F3#1 = IAdd(mulRes346D,ilit34F2);
          int idx34F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F3);
          int ilit34F5#1 = 45;
          int addRes34F6#1 = IAdd(mulRes346D,ilit34F5);
          int idx34F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F6);
          int ilit34F8#1 = 46;
          int addRes34F9#1 = IAdd(mulRes346D,ilit34F8);
          int idx34FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F9);
          int ilit34FB#1 = 47;
          int addRes34FC#1 = IAdd(mulRes346D,ilit34FB);
          int idx34FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FC);
          int ilit34FE#1 = 48;
          int addRes34FF#1 = IAdd(mulRes346D,ilit34FE);
          int idx3500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FF);
          int ilit3501#1 = 49;
          int addRes3502#1 = IAdd(mulRes346D,ilit3501);
          int idx3503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3502);
          int ilit3504#1 = 50;
          int addRes3505#1 = IAdd(mulRes346D,ilit3504);
          int idx3506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3505);
          int ilit3507#1 = 51;
          int addRes3508#1 = IAdd(mulRes346D,ilit3507);
          int idx3509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3508);
          int ilit350A#1 = 52;
          int addRes350B#1 = IAdd(mulRes346D,ilit350A);
          int idx350C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350B);
          int ilit350D#1 = 53;
          int addRes350E#1 = IAdd(mulRes346D,ilit350D);
          int idx350F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350E);
          int ilit3510#1 = 54;
          int addRes3511#1 = IAdd(mulRes346D,ilit3510);
          int idx3512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3511);
          int ilit3513#1 = 55;
          int addRes3514#1 = IAdd(mulRes346D,ilit3513);
          int idx3515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3514);
          int ilit3516#1 = 56;
          int addRes3517#1 = IAdd(mulRes346D,ilit3516);
          int idx3518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3517);
          int ilit3519#1 = 57;
          int addRes351A#1 = IAdd(mulRes346D,ilit3519);
          int idx351B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351A);
          int ilit351C#1 = 58;
          int addRes351D#1 = IAdd(mulRes346D,ilit351C);
          int idx351E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351D);
          int ilit351F#1 = 59;
          int addRes3520#1 = IAdd(mulRes346D,ilit351F);
          int idx3521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3520);
          int ilit3522#1 = 60;
          int addRes3523#1 = IAdd(mulRes346D,ilit3522);
          int idx3524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3523);
          int ilit3525#1 = 61;
          int addRes3526#1 = IAdd(mulRes346D,ilit3525);
          int idx3527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3526);
          int ilit3528#1 = 62;
          int addRes3529#1 = IAdd(mulRes346D,ilit3528);
          int idx352A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3529);
          int ilit352B#1 = 63;
          int addRes352C#1 = IAdd(mulRes346D,ilit352B);
          int idx352D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352C);
          int ilit352E#1 = 64;
          int addRes352F#1 = IAdd(mulRes346D,ilit352E);
          int idx3530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352F);
          int ilit3531#1 = 65;
          int addRes3532#1 = IAdd(mulRes346D,ilit3531);
          int idx3533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3532);
          int ilit3534#1 = 66;
          int addRes3535#1 = IAdd(mulRes346D,ilit3534);
          int idx3536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3535);
          int ilit3537#1 = 67;
          int addRes3538#1 = IAdd(mulRes346D,ilit3537);
          int idx3539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3538);
          int ilit353A#1 = 68;
          int addRes353B#1 = IAdd(mulRes346D,ilit353A);
          int idx353C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353B);
          int ilit353D#1 = 69;
          int addRes353E#1 = IAdd(mulRes346D,ilit353D);
          int idx353F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353E);
          int ilit3540#1 = 70;
          int addRes3541#1 = IAdd(mulRes346D,ilit3540);
          int idx3542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3541);
          int ilit3543#1 = 71;
          int addRes3544#1 = IAdd(mulRes346D,ilit3543);
          int idx3545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3544);
          int ilit3546#1 = 72;
          int addRes3547#1 = IAdd(mulRes346D,ilit3546);
          int idx3548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3547);
          int ilit3549#1 = 73;
          int addRes354A#1 = IAdd(mulRes346D,ilit3549);
          int idx354B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354A);
          int ilit354C#1 = 74;
          int addRes354D#1 = IAdd(mulRes346D,ilit354C);
          int idx354E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354D);
          int ilit354F#1 = 75;
          int addRes3550#1 = IAdd(mulRes346D,ilit354F);
          int idx3551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3550);
          int ilit3552#1 = 76;
          int addRes3553#1 = IAdd(mulRes346D,ilit3552);
          int idx3554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3553);
          int ilit3555#1 = 77;
          int addRes3556#1 = IAdd(mulRes346D,ilit3555);
          int idx3557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3556);
          int ilit3558#1 = 78;
          int addRes3559#1 = IAdd(mulRes346D,ilit3558);
          int idx355A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3559);
          int ilit355B#1 = 79;
          int addRes355C#1 = IAdd(mulRes346D,ilit355B);
          int idx355D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355C);
          int ilit355E#1 = 80;
          int addRes355F#1 = IAdd(mulRes346D,ilit355E);
          int idx3560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355F);
          int ilit3561#1 = 81;
          int addRes3562#1 = IAdd(mulRes346D,ilit3561);
          int idx3563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3562);
          int ilit3564#1 = 82;
          int addRes3565#1 = IAdd(mulRes346D,ilit3564);
          int idx3566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3565);
          int ilit3567#1 = 83;
          int addRes3568#1 = IAdd(mulRes346D,ilit3567);
          int idx3569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3568);
          int mulRes366F#1 = IMul(ilit3471,idx3470);
          int mulRes3671#1 = IMul(ilit3471,idx3473);
          int mulRes3674#1 = IMul(ilit3471,idx3476);
          int mulRes3677#1 = IMul(ilit3471,idx3479);
          int mulRes367A#1 = IMul(ilit3471,idx347C);
          int mulRes367D#1 = IMul(ilit3471,idx347F);
          int mulRes3680#1 = IMul(ilit3471,idx3482);
          int mulRes3683#1 = IMul(ilit3471,idx3485);
          int mulRes3686#1 = IMul(ilit3471,idx3488);
          int mulRes3689#1 = IMul(ilit3471,idx348B);
          int mulRes368C#1 = IMul(ilit3471,idx348E);
          int mulRes368F#1 = IMul(ilit3471,idx3491);
          int mulRes3692#1 = IMul(ilit3471,idx3494);
          int mulRes3695#1 = IMul(ilit3471,idx3497);
          int mulRes3698#1 = IMul(ilit3471,idx349A);
          int mulRes369B#1 = IMul(ilit3471,idx349D);
          int mulRes369E#1 = IMul(ilit3471,idx34A0);
          int mulRes36A1#1 = IMul(ilit3471,idx34A3);
          int mulRes36A4#1 = IMul(ilit3471,idx34A6);
          int mulRes36A7#1 = IMul(ilit3471,idx34A9);
          int mulRes36AA#1 = IMul(ilit3471,idx34AC);
          int mulRes36AD#1 = IMul(ilit3471,idx34AF);
          int mulRes36B0#1 = IMul(ilit3471,idx34B2);
          int mulRes36B3#1 = IMul(ilit3471,idx34B5);
          int mulRes36B6#1 = IMul(ilit3471,idx34B8);
          int mulRes36B9#1 = IMul(ilit3471,idx34BB);
          int mulRes36BC#1 = IMul(ilit3471,idx34BE);
          int mulRes36BF#1 = IMul(ilit3471,idx34C1);
          int mulRes36C2#1 = IMul(ilit3471,idx34C4);
          int mulRes36C5#1 = IMul(ilit3471,idx34C7);
          int mulRes36C8#1 = IMul(ilit3471,idx34CA);
          int mulRes36CB#1 = IMul(ilit3471,idx34CD);
          int mulRes36CE#1 = IMul(ilit3471,idx34D0);
          int mulRes36D1#1 = IMul(ilit3471,idx34D3);
          int mulRes36D4#1 = IMul(ilit3471,idx34D6);
          int mulRes36D7#1 = IMul(ilit3471,idx34D9);
          int mulRes36DA#1 = IMul(ilit3471,idx34DC);
          int mulRes36DD#1 = IMul(ilit3471,idx34DF);
          int mulRes36E0#1 = IMul(ilit3471,idx34E2);
          int mulRes36E3#1 = IMul(ilit3471,idx34E5);
          int mulRes36E6#1 = IMul(ilit3471,idx34E8);
          int mulRes36E9#1 = IMul(ilit3471,idx34EB);
          int mulRes36EC#1 = IMul(ilit3471,idx34EE);
          int mulRes36EF#1 = IMul(ilit3471,idx34F1);
          int mulRes36F2#1 = IMul(ilit3471,idx34F4);
          int mulRes36F5#1 = IMul(ilit3471,idx34F7);
          int mulRes36F8#1 = IMul(ilit3471,idx34FA);
          int mulRes36FB#1 = IMul(ilit3471,idx34FD);
          int mulRes36FE#1 = IMul(ilit3471,idx3500);
          int mulRes3701#1 = IMul(ilit3471,idx3503);
          int mulRes3704#1 = IMul(ilit3471,idx3506);
          int mulRes3707#1 = IMul(ilit3471,idx3509);
          int mulRes370A#1 = IMul(ilit3471,idx350C);
          int mulRes370D#1 = IMul(ilit3471,idx350F);
          int mulRes3710#1 = IMul(ilit3471,idx3512);
          int mulRes3713#1 = IMul(ilit3471,idx3515);
          int mulRes3716#1 = IMul(ilit3471,idx3518);
          int mulRes3719#1 = IMul(ilit3471,idx351B);
          int mulRes371C#1 = IMul(ilit3471,idx351E);
          int mulRes371F#1 = IMul(ilit3471,idx3521);
          int mulRes3722#1 = IMul(ilit3471,idx3524);
          int mulRes3725#1 = IMul(ilit3471,idx3527);
          int mulRes3728#1 = IMul(ilit3471,idx352A);
          int mulRes372B#1 = IMul(ilit3471,idx352D);
          int mulRes372E#1 = IMul(ilit3471,idx3530);
          int mulRes3731#1 = IMul(ilit3471,idx3533);
          int mulRes3734#1 = IMul(ilit3471,idx3536);
          int mulRes3737#1 = IMul(ilit3471,idx3539);
          int mulRes373A#1 = IMul(ilit3471,idx353C);
          int mulRes373D#1 = IMul(ilit3471,idx353F);
          int mulRes3740#1 = IMul(ilit3471,idx3542);
          int mulRes3743#1 = IMul(ilit3471,idx3545);
          int mulRes3746#1 = IMul(ilit3471,idx3548);
          int mulRes3749#1 = IMul(ilit3471,idx354B);
          int mulRes374C#1 = IMul(ilit3471,idx354E);
          int mulRes374F#1 = IMul(ilit3471,idx3551);
          int mulRes3752#1 = IMul(ilit3471,idx3554);
          int mulRes3755#1 = IMul(ilit3471,idx3557);
          int mulRes3758#1 = IMul(ilit3471,idx355A);
          int mulRes375B#1 = IMul(ilit3471,idx355D);
          int mulRes375E#1 = IMul(ilit3471,idx3560);
          int mulRes3761#1 = IMul(ilit3471,idx3563);
          int mulRes3764#1 = IMul(ilit3471,idx3566);
          int mulRes3767#1 = IMul(ilit3471,idx3569);
          real dof3768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes366F);
          real dof3769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3671);
          real dof376A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3674);
          real dof376B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3677);
          real dof376C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367A);
          real dof376D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367D);
          real dof376E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3680);
          real dof376F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3683);
          real dof3770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3686);
          real dof3771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3689);
          real dof3772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368C);
          real dof3773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368F);
          real dof3774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3692);
          real dof3775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3695);
          real dof3776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3698);
          real dof3777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369B);
          real dof3778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369E);
          real dof3779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A1);
          real dof377A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A4);
          real dof377B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A7);
          real dof377C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AA);
          real dof377D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AD);
          real dof377E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B0);
          real dof377F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B3);
          real dof3780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B6);
          real dof3781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B9);
          real dof3782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BC);
          real dof3783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BF);
          real dof3784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C2);
          real dof3785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C5);
          real dof3786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C8);
          real dof3787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CB);
          real dof3788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CE);
          real dof3789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D1);
          real dof378A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D4);
          real dof378B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D7);
          real dof378C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DA);
          real dof378D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DD);
          real dof378E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E0);
          real dof378F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E3);
          real dof3790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E6);
          real dof3791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E9);
          real dof3792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EC);
          real dof3793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EF);
          real dof3794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F2);
          real dof3795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F5);
          real dof3796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F8);
          real dof3797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FB);
          real dof3798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FE);
          real dof3799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3701);
          real dof379A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3704);
          real dof379B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3707);
          real dof379C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370A);
          real dof379D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370D);
          real dof379E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3710);
          real dof379F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3713);
          real dof37A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3716);
          real dof37A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3719);
          real dof37A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371C);
          real dof37A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371F);
          real dof37A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3722);
          real dof37A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3725);
          real dof37A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3728);
          real dof37A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372B);
          real dof37A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372E);
          real dof37A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3731);
          real dof37AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3734);
          real dof37AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3737);
          real dof37AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373A);
          real dof37AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373D);
          real dof37AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3740);
          real dof37AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3743);
          real dof37B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3746);
          real dof37B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3749);
          real dof37B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374C);
          real dof37B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374F);
          real dof37B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3752);
          real dof37B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3755);
          real dof37B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3758);
          real dof37B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375B);
          real dof37B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375E);
          real dof37B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3761);
          real dof37BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3764);
          real dof37BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3767);
          tensor[84] dofs37BC#20 = <tensor[84]>[dof3768,dof3769,dof376A,dof376B,dof376C,dof376D,dof376E,dof376F,dof3770,dof3771,dof3772,dof3773,dof3774,dof3775,dof3776,dof3777,dof3778,dof3779,dof377A,dof377B,dof377C,dof377D,dof377E,dof377F,dof3780,dof3781,dof3782,dof3783,dof3784,dof3785,dof3786,dof3787,dof3788,dof3789,dof378A,dof378B,dof378C,dof378D,dof378E,dof378F,dof3790,dof3791,dof3792,dof3793,dof3794,dof3795,dof3796,dof3797,dof3798,dof3799,dof379A,dof379B,dof379C,dof379D,dof379E,dof379F,dof37A0,dof37A1,dof37A2,dof37A3,dof37A4,dof37A5,dof37A6,dof37A7,dof37A8,dof37A9,dof37AA,dof37AB,dof37AC,dof37AD,dof37AE,dof37AF,dof37B0,dof37B1,dof37B2,dof37B3,dof37B4,dof37B5,dof37B6,dof37B7,dof37B8,dof37B9,dof37BA,dof37BB];
          real varAcc3910#20 = VIndex<3,0>(pos2449);
          real varAcc3911#10 = VIndex<3,1>(pos2449);
          real varAcc3912#10 = VIndex<3,2>(pos2449);
          real prod3915#15 = RMul(_t3467,_t3467);
          real prod3916#3 = RMul(_t3467,prod3915);
          real basisEval3917#8 = RMul(_t3467,prod3916);
          real prod3919#5 = RMul(_t3467,varAcc3912);
          real prod391A#5 = RMul(_t3467,prod3919);
          real basisEval391B#3 = RMul(_t3467,prod391A);
          real prod391D#5 = RMul(varAcc3911,_t3467);
          real prod391E#5 = RMul(_t3467,prod391D);
          real basisEval391F#3 = RMul(_t3467,prod391E);
          real coeff3920#47 = 0.2e1;
          real prod3922#5 = RMul(varAcc3910,prod3915);
          real basisEval3923#8 = RMul(coeff3920,prod3922);
          real prod23924#5 = RMul(varAcc3912,varAcc3912);
          real prod3925#4 = RMul(_t3467,prod23924);
          real prod3926#6 = RMul(_t3467,prod3925);
          real basisEval3927#3 = RMul(_t3467,prod3926);
          real prod3928#4 = RMul(varAcc3911,varAcc3912);
          real prod3929#6 = RMul(_t3467,prod3928);
          real basisEval392A#1 = RMul(_t3467,prod3929);
          real prod2392B#5 = RMul(varAcc3911,varAcc3911);
          real prod392C#4 = RMul(prod2392B,_t3467);
          real prod392D#6 = RMul(_t3467,prod392C);
          real basisEval392E#3 = RMul(_t3467,prod392D);
          real prod392F#6 = RMul(varAcc3910,prod3919);
          real basisEval3930#5 = RMul(coeff3920,prod392F);
          real prod3931#6 = RMul(varAcc3910,prod391D);
          real basisEval3932#5 = RMul(coeff3920,prod3931);
          real coeff3933#24 = 0.3e1;
          real prod23934#11 = RMul(varAcc3910,varAcc3910);
          real prod3935#6 = RMul(prod23934,prod3915);
          real basisEval3936#4 = RMul(coeff3933,prod3935);
          real prod33937#4 = RMul(prod23924,varAcc3912);
          real prod3938#3 = RMul(_t3467,prod33937);
          real prod3939#7 = RMul(_t3467,prod3938);
          real basisEval393A#3 = RMul(_t3467,prod3939);
          real prod393B#3 = RMul(varAcc3911,prod23924);
          real prod393C#9 = RMul(_t3467,prod393B);
          real basisEval393D#1 = RMul(_t3467,prod393C);
          real prod393E#3 = RMul(prod2392B,varAcc3912);
          real prod393F#9 = RMul(_t3467,prod393E);
          real basisEval3940#1 = RMul(_t3467,prod393F);
          real prod33941#4 = RMul(prod2392B,varAcc3911);
          real prod3942#3 = RMul(prod33941,_t3467);
          real prod3943#7 = RMul(_t3467,prod3942);
          real basisEval3944#3 = RMul(_t3467,prod3943);
          real prod3945#9 = RMul(varAcc3910,prod3925);
          real basisEval3946#3 = RMul(coeff3920,prod3945);
          real prod3947#6 = RMul(varAcc3910,prod3928);
          real basisEval3948#3 = RMul(coeff3920,prod3947);
          real prod3949#9 = RMul(varAcc3910,prod392C);
          real basisEval394A#3 = RMul(coeff3920,prod3949);
          real prod394B#9 = RMul(prod23934,prod3919);
          real basisEval394C#2 = RMul(coeff3933,prod394B);
          real prod394D#9 = RMul(prod23934,prod391D);
          real basisEval394E#2 = RMul(coeff3933,prod394D);
          real coeff394F#34 = 0.4e1;
          real prod33950#7 = RMul(prod23934,varAcc3910);
          real prod3951#7 = RMul(prod33950,prod3915);
          real basisEval3952#4 = RMul(coeff394F,prod3951);
          real prod43953#3 = RMul(prod33937,varAcc3912);
          real prod3954#2 = RMul(_t3467,prod43953);
          real prod3955#4 = RMul(_t3467,prod3954);
          real basisEval3956#3 = RMul(_t3467,prod3955);
          real prod3957#2 = RMul(varAcc3911,prod33937);
          real prod3958#6 = RMul(_t3467,prod3957);
          real basisEval3959#1 = RMul(_t3467,prod3958);
          real prod395A#2 = RMul(prod2392B,prod23924);
          real prod395B#5 = RMul(_t3467,prod395A);
          real basisEval395C#1 = RMul(_t3467,prod395B);
          real prod395D#2 = RMul(prod33941,varAcc3912);
          real prod395E#6 = RMul(_t3467,prod395D);
          real basisEval395F#1 = RMul(_t3467,prod395E);
          real prod43960#3 = RMul(prod33941,varAcc3911);
          real prod3961#2 = RMul(prod43960,_t3467);
          real prod3962#4 = RMul(_t3467,prod3961);
          real basisEval3963#3 = RMul(_t3467,prod3962);
          real prod3964#6 = RMul(varAcc3910,prod3938);
          real basisEval3965#3 = RMul(coeff3920,prod3964);
          real prod3966#5 = RMul(varAcc3910,prod393B);
          real basisEval3967#2 = RMul(coeff3920,prod3966);
          real prod3968#5 = RMul(varAcc3910,prod393E);
          real basisEval3969#2 = RMul(coeff3920,prod3968);
          real prod396A#6 = RMul(varAcc3910,prod3942);
          real basisEval396B#3 = RMul(coeff3920,prod396A);
          real prod396C#5 = RMul(prod23934,prod3925);
          real basisEval396D#4 = RMul(coeff3933,prod396C);
          real prod396E#5 = RMul(prod23934,prod3928);
          real basisEval396F#1 = RMul(coeff3933,prod396E);
          real prod3970#5 = RMul(prod23934,prod392C);
          real basisEval3971#4 = RMul(coeff3933,prod3970);
          real prod3972#6 = RMul(prod33950,prod3919);
          real basisEval3973#2 = RMul(coeff394F,prod3972);
          real prod3974#6 = RMul(prod33950,prod391D);
          real basisEval3975#2 = RMul(coeff394F,prod3974);
          real coeff3976#9 = 0.5e1;
          real prod43977#4 = RMul(prod33950,varAcc3910);
          real prod3978#4 = RMul(prod43977,prod3915);
          real basisEval3979#3 = RMul(coeff3976,prod3978);
          real prod5397A#1 = RMul(prod43953,varAcc3912);
          real prod397B#1 = RMul(_t3467,prod5397A);
          real prod397C#2 = RMul(_t3467,prod397B);
          real basisEval397D#2 = RMul(_t3467,prod397C);
          real prod397E#1 = RMul(varAcc3911,prod43953);
          real prod397F#3 = RMul(_t3467,prod397E);
          real basisEval3980#1 = RMul(_t3467,prod397F);
          real prod3981#1 = RMul(prod2392B,prod33937);
          real prod3982#3 = RMul(_t3467,prod3981);
          real basisEval3983#1 = RMul(_t3467,prod3982);
          real prod3984#1 = RMul(prod33941,prod23924);
          real prod3985#3 = RMul(_t3467,prod3984);
          real basisEval3986#1 = RMul(_t3467,prod3985);
          real prod3987#1 = RMul(prod43960,varAcc3912);
          real prod3988#3 = RMul(_t3467,prod3987);
          real basisEval3989#1 = RMul(_t3467,prod3988);
          real prod5398A#1 = RMul(prod43960,varAcc3911);
          real prod398B#1 = RMul(prod5398A,_t3467);
          real prod398C#2 = RMul(_t3467,prod398B);
          real basisEval398D#2 = RMul(_t3467,prod398C);
          real prod398E#3 = RMul(varAcc3910,prod3954);
          real basisEval398F#1 = RMul(coeff3920,prod398E);
          real prod3990#2 = RMul(varAcc3910,prod3957);
          real basisEval3991#2 = RMul(coeff3920,prod3990);
          real prod3992#2 = RMul(varAcc3910,prod395A);
          real basisEval3993#1 = RMul(coeff3920,prod3992);
          real prod3994#2 = RMul(varAcc3910,prod395D);
          real basisEval3995#2 = RMul(coeff3920,prod3994);
          real prod3996#3 = RMul(varAcc3910,prod3961);
          real basisEval3997#1 = RMul(coeff3920,prod3996);
          real prod3998#3 = RMul(prod23934,prod3938);
          real basisEval3999#1 = RMul(coeff3933,prod3998);
          real prod399A#2 = RMul(prod23934,prod393B);
          real basisEval399B#2 = RMul(coeff3933,prod399A);
          real prod399C#2 = RMul(prod23934,prod393E);
          real basisEval399D#2 = RMul(coeff3933,prod399C);
          real prod399E#3 = RMul(prod23934,prod3942);
          real basisEval399F#1 = RMul(coeff3933,prod399E);
          real prod39A0#3 = RMul(prod33950,prod3925);
          real basisEval39A1#1 = RMul(coeff394F,prod39A0);
          real prod39A2#2 = RMul(prod33950,prod3928);
          real basisEval39A3#1 = RMul(coeff394F,prod39A2);
          real prod39A4#3 = RMul(prod33950,prod392C);
          real basisEval39A5#1 = RMul(coeff394F,prod39A4);
          real prod39A6#3 = RMul(prod43977,prod3919);
          real basisEval39A7#1 = RMul(coeff3976,prod39A6);
          real prod39A8#3 = RMul(prod43977,prod391D);
          real basisEval39A9#1 = RMul(coeff3976,prod39A8);
          real coeff39AA#32 = 0.6e1;
          real prod539AB#1 = RMul(prod43977,varAcc3910);
          real prod39AC#2 = RMul(prod539AB,prod3915);
          real basisEval39AD#1 = RMul(coeff39AA,prod39AC);
          real basisEval39AE#8 = RMul(coeff3920,prod391E);
          real basisEval39AF#3 = RMul(_t3467,prod3922);
          real basisEval39B0#5 = RMul(coeff3920,prod3929);
          real basisEval39B1#4 = RMul(coeff3933,prod392D);
          real basisEval39B2#1 = RMul(_t3467,prod392F);
          real basisEval39B3#3 = RMul(_t3467,prod3935);
          real basisEval39B4#3 = RMul(coeff3920,prod393C);
          real basisEval39B5#2 = RMul(coeff3933,prod393F);
          real basisEval39B6#4 = RMul(coeff394F,prod3943);
          real basisEval39B7#1 = RMul(_t3467,prod3945);
          real basisEval39B8#2 = RMul(coeff3933,prod3949);
          real basisEval39B9#1 = RMul(_t3467,prod394B);
          real basisEval39BA#3 = RMul(coeff3920,prod394D);
          real basisEval39BB#3 = RMul(_t3467,prod3951);
          real basisEval39BC#3 = RMul(coeff3920,prod3958);
          real basisEval39BD#4 = RMul(coeff3933,prod395B);
          real basisEval39BE#2 = RMul(coeff394F,prod395E);
          real basisEval39BF#3 = RMul(coeff3976,prod3962);
          real basisEval39C0#1 = RMul(_t3467,prod3964);
          real basisEval39C1#1 = RMul(coeff3933,prod3968);
          real basisEval39C2#2 = RMul(coeff394F,prod396A);
          real basisEval39C3#1 = RMul(_t3467,prod396C);
          real basisEval39C4#2 = RMul(coeff3920,prod396E);
          real basisEval39C5#1 = RMul(_t3467,prod3972);
          real basisEval39C6#3 = RMul(coeff3920,prod3974);
          real basisEval39C7#3 = RMul(_t3467,prod3978);
          real basisEval39C8#1 = RMul(coeff3920,prod397F);
          real basisEval39C9#1 = RMul(coeff3933,prod3982);
          real basisEval39CA#1 = RMul(coeff394F,prod3985);
          real basisEval39CB#1 = RMul(coeff3976,prod3988);
          real basisEval39CC#1 = RMul(coeff39AA,prod398C);
          real basisEval39CD#1 = RMul(_t3467,prod398E);
          real basisEval39CE#2 = RMul(coeff3933,prod3992);
          real basisEval39CF#1 = RMul(coeff394F,prod3994);
          real basisEval39D0#1 = RMul(coeff3976,prod3996);
          real basisEval39D1#1 = RMul(_t3467,prod3998);
          real basisEval39D2#1 = RMul(coeff3920,prod399A);
          real basisEval39D3#1 = RMul(coeff394F,prod399E);
          real basisEval39D4#1 = RMul(_t3467,prod39A0);
          real basisEval39D5#2 = RMul(coeff3920,prod39A2);
          real basisEval39D6#1 = RMul(coeff3933,prod39A4);
          real basisEval39D7#1 = RMul(_t3467,prod39A6);
          real basisEval39D8#1 = RMul(coeff3920,prod39A8);
          real basisEval39D9#2 = RMul(_t3467,prod39AC);
          real basisEval39DA#8 = RMul(coeff3920,prod391A);
          real basisEval39DB#4 = RMul(coeff3933,prod3926);
          real basisEval39DC#1 = RMul(_t3467,prod3931);
          real basisEval39DD#4 = RMul(coeff394F,prod3939);
          real basisEval39DE#2 = RMul(coeff3933,prod393C);
          real basisEval39DF#3 = RMul(coeff3920,prod393F);
          real basisEval39E0#2 = RMul(coeff3933,prod3945);
          real basisEval39E1#1 = RMul(_t3467,prod3949);
          real basisEval39E2#3 = RMul(coeff3920,prod394B);
          real basisEval39E3#1 = RMul(_t3467,prod394D);
          real basisEval39E4#3 = RMul(coeff3976,prod3955);
          real basisEval39E5#2 = RMul(coeff394F,prod3958);
          real basisEval39E6#3 = RMul(coeff3920,prod395E);
          real basisEval39E7#2 = RMul(coeff394F,prod3964);
          real basisEval39E8#1 = RMul(coeff3933,prod3966);
          real basisEval39E9#1 = RMul(_t3467,prod396A);
          real basisEval39EA#1 = RMul(_t3467,prod3970);
          real basisEval39EB#3 = RMul(coeff3920,prod3972);
          real basisEval39EC#1 = RMul(_t3467,prod3974);
          real basisEval39ED#1 = RMul(coeff39AA,prod397C);
          real basisEval39EE#1 = RMul(coeff3976,prod397F);
          real basisEval39EF#1 = RMul(coeff394F,prod3982);
          real basisEval39F0#1 = RMul(coeff3933,prod3985);
          real basisEval39F1#1 = RMul(coeff3920,prod3988);
          real basisEval39F2#1 = RMul(coeff3976,prod398E);
          real basisEval39F3#1 = RMul(coeff394F,prod3990);
          real basisEval39F4#1 = RMul(_t3467,prod3996);
          real basisEval39F5#1 = RMul(coeff394F,prod3998);
          real basisEval39F6#1 = RMul(coeff3920,prod399C);
          real basisEval39F7#1 = RMul(_t3467,prod399E);
          real basisEval39F8#1 = RMul(coeff3933,prod39A0);
          real basisEval39F9#1 = RMul(_t3467,prod39A4);
          real basisEval39FA#1 = RMul(coeff3920,prod39A6);
          real basisEval39FB#1 = RMul(_t3467,prod39A8);
          tensor[84] intermediateCons39FC#1 = <tensor[84]>[_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,basisEval391B,basisEval391F,basisEval3923,_t3465,_t3465,_t3465,_t3465,basisEval3927,basisEval392A,basisEval392E,basisEval3930,basisEval3932,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval393A,basisEval393D,basisEval3940,basisEval3944,basisEval3946,basisEval3948,basisEval394A,basisEval394C,basisEval394E,basisEval3952,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3956,basisEval3959,basisEval395C,basisEval395F,basisEval3963,basisEval3965,basisEval3967,basisEval3969,basisEval396B,basisEval396D,basisEval396F,basisEval3971,basisEval3973,basisEval3975,basisEval3979,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval397D,basisEval3980,basisEval3983,basisEval3986,basisEval3989,basisEval398D,basisEval398F,basisEval3991,basisEval3993,basisEval3995,basisEval3997,basisEval3999,basisEval399B,basisEval399D,basisEval399F,basisEval39A1,basisEval39A3,basisEval39A5,basisEval39A7,basisEval39A9,basisEval39AD];
          tensor[84] intermediateCons39FD#1 = <tensor[84]>[_t3465,_t3465,basisEval3917,_t3465,_t3465,basisEval391B,basisEval39AE,_t3465,basisEval39AF,_t3465,_t3465,basisEval3927,basisEval39B0,basisEval39B1,_t3465,basisEval39B2,basisEval3932,_t3465,basisEval39B3,_t3465,_t3465,basisEval393A,basisEval39B4,basisEval39B5,basisEval39B6,_t3465,basisEval39B7,basisEval3948,basisEval39B8,_t3465,basisEval39B9,basisEval39BA,_t3465,basisEval39BB,_t3465,_t3465,basisEval3956,basisEval39BC,basisEval39BD,basisEval39BE,basisEval39BF,_t3465,basisEval39C0,basisEval3967,basisEval39C1,basisEval39C2,_t3465,basisEval39C3,basisEval39C4,basisEval3971,_t3465,basisEval39C5,basisEval39C6,_t3465,basisEval39C7,_t3465,_t3465,basisEval397D,basisEval39C8,basisEval39C9,basisEval39CA,basisEval39CB,basisEval39CC,_t3465,basisEval39CD,basisEval3991,basisEval39CE,basisEval39CF,basisEval39D0,_t3465,basisEval39D1,basisEval39D2,basisEval399D,basisEval39D3,_t3465,basisEval39D4,basisEval39D5,basisEval39D6,_t3465,basisEval39D7,basisEval39D8,_t3465,basisEval39D9,_t3465];
          tensor[84] intermediateCons39FE#1 = <tensor[84]>[_t3465,basisEval3917,_t3465,_t3465,basisEval39DA,basisEval391F,_t3465,basisEval39AF,_t3465,_t3465,basisEval39DB,basisEval39B0,basisEval392E,_t3465,basisEval3930,basisEval39DC,_t3465,basisEval39B3,_t3465,_t3465,basisEval39DD,basisEval39DE,basisEval39DF,basisEval3944,_t3465,basisEval39E0,basisEval3948,basisEval39E1,_t3465,basisEval39E2,basisEval39E3,_t3465,basisEval39BB,_t3465,_t3465,basisEval39E4,basisEval39E5,basisEval39BD,basisEval39E6,basisEval3963,_t3465,basisEval39E7,basisEval39E8,basisEval3969,basisEval39E9,_t3465,basisEval396D,basisEval39C4,basisEval39EA,_t3465,basisEval39EB,basisEval39EC,_t3465,basisEval39C7,_t3465,_t3465,basisEval39ED,basisEval39EE,basisEval39EF,basisEval39F0,basisEval39F1,basisEval398D,_t3465,basisEval39F2,basisEval39F3,basisEval39CE,basisEval3995,basisEval39F4,_t3465,basisEval39F5,basisEval399B,basisEval39F6,basisEval39F7,_t3465,basisEval39F8,basisEval39D5,basisEval39F9,_t3465,basisEval39FA,basisEval39FB,_t3465,basisEval39D9,_t3465,_t3465];
          real vdot3AF3#46 = VDot<84>(dofs37BC,intermediateCons39FC);
          real vdot3AF5#46 = VDot<84>(dofs37BC,intermediateCons39FD);
          real vdot3AF7#46 = VDot<84>(dofs37BC,intermediateCons39FE);
          tensor[3] probe_l_823AF1#3 = <tensor[3]>[vdot3AF3,vdot3AF5,vdot3AF7];
          real basisEval3B09#9 = RMul(coeff3920,prod3916);
          real basisEval3B15#5 = RMul(coeff39AA,prod3922);
          real basisEval3B19#4 = RMul(coeff3920,prod3926);
          real basisEval3B20#4 = RMul(coeff3920,prod392D);
          real basisEval3B22#5 = RMul(coeff39AA,prod392F);
          real basisEval3B24#5 = RMul(coeff39AA,prod3931);
          real coeff3B25#19 = 0.12e2;
          real basisEval3B28#3 = RMul(coeff3B25,prod3935);
          real basisEval3B2C#4 = RMul(coeff3920,prod3939);
          real basisEval3B36#4 = RMul(coeff3920,prod3943);
          real basisEval3B38#6 = RMul(coeff39AA,prod3945);
          real basisEval3B3A#3 = RMul(coeff39AA,prod3947);
          real basisEval3B3C#6 = RMul(coeff39AA,prod3949);
          real basisEval3B3E#2 = RMul(coeff3B25,prod394B);
          real basisEval3B40#2 = RMul(coeff3B25,prod394D);
          real coeff3B41#9 = 0.20e2;
          real basisEval3B44#3 = RMul(coeff3B41,prod3951);
          real basisEval3B48#2 = RMul(coeff3920,prod3955);
          real basisEval3B4E#1 = RMul(coeff3920,prod395B);
          real basisEval3B55#2 = RMul(coeff3920,prod3962);
          real basisEval3B57#1 = RMul(coeff39AA,prod3964);
          real basisEval3B59#4 = RMul(coeff39AA,prod3966);
          real basisEval3B5B#4 = RMul(coeff39AA,prod3968);
          real basisEval3B5D#1 = RMul(coeff39AA,prod396A);
          real basisEval3B5F#2 = RMul(coeff3B25,prod396C);
          real basisEval3B61#1 = RMul(coeff3B25,prod396E);
          real basisEval3B63#2 = RMul(coeff3B25,prod3970);
          real basisEval3B65#1 = RMul(coeff3B41,prod3972);
          real basisEval3B67#1 = RMul(coeff3B41,prod3974);
          real coeff3B68#3 = 0.30e2;
          real basisEval3B6B#1 = RMul(coeff3B68,prod3978);
          real basisEval3B74#4 = RMul(coeff394F,prod3931);
          real basisEval3B7A#3 = RMul(coeff394F,prod3947);
          real basisEval3B7C#6 = RMul(coeff39AA,prod394D);
          real basisEval3B84#1 = RMul(coeff394F,prod3966);
          real coeff3B85#10 = 0.8e1;
          real basisEval3B86#1 = RMul(coeff3B85,prod396A);
          real basisEval3B88#4 = RMul(coeff39AA,prod396E);
          real coeff3B89#3 = 0.9e1;
          real basisEval3B8A#1 = RMul(coeff3B89,prod3970);
          real basisEval3B8C#1 = RMul(coeff3B85,prod3974);
          real basisEval3B91#4 = RMul(coeff394F,prod392F);
          real basisEval3B97#6 = RMul(coeff39AA,prod394B);
          real basisEval3B9C#1 = RMul(coeff3B85,prod3964);
          real basisEval3B9D#1 = RMul(coeff394F,prod3968);
          real basisEval3B9F#1 = RMul(coeff3B89,prod396C);
          real basisEval3BA1#1 = RMul(coeff3B85,prod3972);
          real basisEval3BA3#5 = RMul(coeff39AA,prod391E);
          real basisEval3BA4#5 = RMul(coeff39AA,prod3929);
          real basisEval3BA5#3 = RMul(coeff3B25,prod392D);
          real basisEval3BA6#4 = RMul(coeff3920,prod3935);
          real basisEval3BA7#6 = RMul(coeff39AA,prod393C);
          real basisEval3BA8#2 = RMul(coeff3B25,prod393F);
          real basisEval3BA9#3 = RMul(coeff3B41,prod3943);
          real basisEval3BAA#2 = RMul(coeff3B25,prod3949);
          real basisEval3BAC#4 = RMul(coeff3920,prod3951);
          real basisEval3BAD#1 = RMul(coeff39AA,prod3958);
          real basisEval3BAE#2 = RMul(coeff3B25,prod395B);
          real basisEval3BAF#1 = RMul(coeff3B41,prod395E);
          real basisEval3BB0#1 = RMul(coeff3B68,prod3962);
          real basisEval3BB1#1 = RMul(coeff3B25,prod3968);
          real basisEval3BB2#1 = RMul(coeff3B41,prod396A);
          real basisEval3BB3#1 = RMul(coeff3920,prod396C);
          real basisEval3BB5#1 = RMul(coeff39AA,prod3974);
          real basisEval3BB6#2 = RMul(coeff3920,prod3978);
          real basisEval3BB8#4 = RMul(coeff394F,prod3929);
          real basisEval3BBA#6 = RMul(coeff39AA,prod393F);
          real basisEval3BBF#1 = RMul(coeff3B85,prod3958);
          real basisEval3BC0#1 = RMul(coeff3B89,prod395B);
          real basisEval3BC1#1 = RMul(coeff3B85,prod395E);
          real basisEval3BC4#1 = RMul(coeff394F,prod396E);
          real basisEval3BC7#5 = RMul(coeff39AA,prod391A);
          real basisEval3BC8#3 = RMul(coeff3B25,prod3926);
          real basisEval3BC9#3 = RMul(coeff3B41,prod3939);
          real basisEval3BCA#2 = RMul(coeff3B25,prod393C);
          real basisEval3BCB#2 = RMul(coeff3B25,prod3945);
          real basisEval3BCC#1 = RMul(coeff3B68,prod3955);
          real basisEval3BCD#1 = RMul(coeff3B41,prod3958);
          real basisEval3BCE#1 = RMul(coeff39AA,prod395E);
          real basisEval3BCF#1 = RMul(coeff3B41,prod3964);
          real basisEval3BD0#1 = RMul(coeff3B25,prod3966);
          real basisEval3BD1#1 = RMul(coeff3920,prod3970);
          real basisEval3BD2#1 = RMul(coeff39AA,prod3972);
          tensor[84] intermediateCons3BD3#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval39AE,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval39B0,basisEval3B20,basisEval3B22,basisEval3B24,basisEval3B28,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval39B4,basisEval39DF,basisEval3B36,basisEval3B38,basisEval3B3A,basisEval3B3C,basisEval3B3E,basisEval3B40,basisEval3B44,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B48,basisEval39BC,basisEval3B4E,basisEval39E6,basisEval3B55,basisEval3B57,basisEval3B59,basisEval3B5B,basisEval3B5D,basisEval3B5F,basisEval3B61,basisEval3B63,basisEval3B65,basisEval3B67,basisEval3B6B];
          tensor[84] intermediateCons3BD4#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval391B,basisEval39AE,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3927,basisEval39B0,basisEval39B1,_t3465,basisEval3930,basisEval3B74,_t3465,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval393A,basisEval39B4,basisEval39B5,basisEval39B6,_t3465,basisEval3946,basisEval3B7A,basisEval3B3C,_t3465,basisEval394C,basisEval3B7C,_t3465,basisEval3952,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3956,basisEval39BC,basisEval39BD,basisEval39BE,basisEval39BF,_t3465,basisEval3965,basisEval3B84,basisEval3B5B,basisEval3B86,_t3465,basisEval396D,basisEval3B88,basisEval3B8A,_t3465,basisEval3973,basisEval3B8C,_t3465,basisEval3979,_t3465];
          tensor[84] intermediateCons3BD5#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval391F,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DB,basisEval39B0,basisEval392E,_t3465,basisEval3B91,basisEval3932,_t3465,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DD,basisEval39DE,basisEval39DF,basisEval3944,_t3465,basisEval3B38,basisEval3B7A,basisEval394A,_t3465,basisEval3B97,basisEval394E,_t3465,basisEval3952,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39E4,basisEval39E5,basisEval39BD,basisEval39E6,basisEval3963,_t3465,basisEval3B9C,basisEval3B59,basisEval3B9D,basisEval396B,_t3465,basisEval3B9F,basisEval3B88,basisEval3971,_t3465,basisEval3BA1,basisEval3975,_t3465,basisEval3979,_t3465,_t3465];
          tensor[84] intermediateCons3BD6#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval3BA3,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval3BA4,basisEval3BA5,_t3465,_t3465,basisEval3930,basisEval3B24,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval3BA7,basisEval3BA8,basisEval3BA9,_t3465,_t3465,basisEval3946,basisEval3B3A,basisEval3BAA,_t3465,_t3465,basisEval39E2,basisEval3B7C,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B48,basisEval3BAD,basisEval3BAE,basisEval3BAF,basisEval3BB0,_t3465,_t3465,basisEval3965,basisEval3B59,basisEval3BB1,basisEval3BB2,_t3465,_t3465,basisEval3BB3,basisEval3B88,basisEval3B63,_t3465,_t3465,basisEval39EB,basisEval3BB5,_t3465,_t3465,basisEval3BB6,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3BD7#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval39AE,_t3465,_t3465,basisEval39AF,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DB,basisEval3BB8,basisEval39B1,_t3465,_t3465,basisEval3930,basisEval3932,_t3465,_t3465,basisEval39B3,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DD,basisEval3BA7,basisEval3BBA,basisEval39B6,_t3465,_t3465,basisEval39E0,basisEval3B7A,basisEval39B8,_t3465,_t3465,basisEval39E2,basisEval39BA,_t3465,_t3465,basisEval39BB,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39E4,basisEval3BBF,basisEval3BC0,basisEval3BC1,basisEval39BF,_t3465,_t3465,basisEval39E7,basisEval3B59,basisEval3B5B,basisEval39C2,_t3465,_t3465,basisEval396D,basisEval3BC4,basisEval3971,_t3465,_t3465,basisEval39EB,basisEval39C6,_t3465,_t3465,basisEval39C7,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3BD8#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval39AE,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC8,basisEval3BA4,basisEval3B20,_t3465,_t3465,basisEval3B22,basisEval3932,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC9,basisEval3BCA,basisEval3BBA,basisEval3B36,_t3465,_t3465,basisEval3BCB,basisEval3B3A,basisEval394A,_t3465,_t3465,basisEval3B97,basisEval39BA,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BCC,basisEval3BCD,basisEval3BAE,basisEval3BCE,basisEval3B55,_t3465,_t3465,basisEval3BCF,basisEval3BD0,basisEval3B5B,basisEval396B,_t3465,_t3465,basisEval3B5F,basisEval3B88,basisEval3BD1,_t3465,_t3465,basisEval3BD2,basisEval39C6,_t3465,_t3465,basisEval3BB6,_t3465,_t3465,_t3465,_t3465,_t3465];
          real vdot3CBC#10 = VDot<84>(dofs37BC,intermediateCons3BD3);
          real vdot3CBE#15 = VDot<84>(dofs37BC,intermediateCons3BD4);
          real vdot3CC0#15 = VDot<84>(dofs37BC,intermediateCons3BD5);
          tensor[3] tensor3CC1#1 = <tensor[3]>[vdot3CBC,vdot3CBE,vdot3CC0];
          real vdot3CC5#10 = VDot<84>(dofs37BC,intermediateCons3BD6);
          real vdot3CC7#15 = VDot<84>(dofs37BC,intermediateCons3BD7);
          tensor[3] tensor3CC8#1 = <tensor[3]>[vdot3CBE,vdot3CC5,vdot3CC7];
          real vdot3CCE#10 = VDot<84>(dofs37BC,intermediateCons3BD8);
          tensor[3] tensor3CCF#1 = <tensor[3]>[vdot3CC0,vdot3CC7,vdot3CCE];
          real vdot3CE9#15 = VDot<3>(tensor3CC1,probe_l_823AF1);
          real vdot3CEB#15 = VDot<3>(tensor3CC8,probe_l_823AF1);
          real vdot3CED#15 = VDot<3>(tensor3CCF,probe_l_823AF1);
          real r3CF9#11 = RMul(_t3465,_t3467);
          real r3CFA#25 = RMul(_t3465,_t3465);
          real r3CFB#3 = RAdd(r3CF9,r3CFA);
          real r3CFC#1 = RAdd(r3CFB,r3CFA);
          real r3CFD#39 = RAdd(r3CFC,r3CFA);
          real r3CFE#3 = RAdd(r3CFA,r3CF9);
          real r3CFF#1 = RAdd(r3CFE,r3CFA);
          real r3D00#39 = RAdd(r3CFF,r3CFA);
          real r3D01#3 = RAdd(r3CFA,r3CFA);
          real r3D02#1 = RAdd(r3D01,r3CF9);
          real r3D03#39 = RAdd(r3D02,r3CFA);
          real r3D05#15 = RMul(_t3467,_t3465);
          real r3D06#1 = RAdd(r3CFB,r3D05);
          real r3D07#13 = RAdd(r3D06,r3D05);
          real r3D08#1 = RAdd(r3CFE,r3D05);
          real r3D09#13 = RAdd(r3D08,r3D05);
          real r3D0B#1 = RAdd(r3D01,prod3915);
          real r3D0C#13 = RAdd(r3D0B,r3D05);
          real realLit3D0E#3 = -0.1e1;
          real r3D0F#15 = RMul(realLit3D0E,_t3465);
          real r3D10#1 = RAdd(r3CF9,r3D0F);
          real r3D11#1 = RAdd(r3D10,r3CFA);
          real r3D12#13 = RAdd(r3D11,r3D05);
          real r3D13#3 = RMul(realLit3D0E,_t3467);
          real r3D14#1 = RAdd(r3CFA,r3D13);
          real r3D15#1 = RAdd(r3D14,r3CFA);
          real r3D16#13 = RAdd(r3D15,r3D05);
          real r3D17#1 = RAdd(r3CFA,r3D0F);
          real r3D18#1 = RAdd(r3D17,r3CF9);
          real r3D19#13 = RAdd(r3D18,r3D05);
          real r3D1C#1 = RAdd(r3CFB,r3D0F);
          real r3D1D#13 = RAdd(r3D1C,r3D0F);
          real r3D1E#1 = RAdd(r3CFE,r3D0F);
          real r3D1F#13 = RAdd(r3D1E,r3D0F);
          real r3D20#1 = RAdd(r3D01,r3D13);
          real r3D21#13 = RAdd(r3D20,r3D0F);
          real r3D23#1 = RAdd(prod3915,r3CFA);
          real r3D24#1 = RAdd(r3D23,r3CFA);
          real r3D25#13 = RAdd(r3D24,r3D05);
          real r3D26#1 = RAdd(r3D05,r3CF9);
          real r3D27#1 = RAdd(r3D26,r3CFA);
          real r3D28#13 = RAdd(r3D27,r3D05);
          real r3D29#1 = RAdd(r3D05,r3CFA);
          real r3D2A#1 = RAdd(r3D29,r3CF9);
          real r3D2B#13 = RAdd(r3D2A,r3D05);
          real r3D2E#1 = RAdd(r3CF9,r3D05);
          real r3D2F#1 = RAdd(r3D2E,r3CFA);
          real r3D30#13 = RAdd(r3D2F,r3D0F);
          real r3D31#1 = RAdd(r3CFA,prod3915);
          real r3D32#1 = RAdd(r3D31,r3CFA);
          real r3D33#13 = RAdd(r3D32,r3D0F);
          real r3D34#1 = RAdd(r3CFA,r3D05);
          real r3D35#1 = RAdd(r3D34,r3CF9);
          real r3D36#13 = RAdd(r3D35,r3D0F);
          real r3D38#1 = RAdd(r3D13,r3CFA);
          real r3D39#1 = RAdd(r3D38,r3CFA);
          real r3D3A#13 = RAdd(r3D39,r3D0F);
          real r3D3B#1 = RAdd(r3D0F,r3CF9);
          real r3D3C#1 = RAdd(r3D3B,r3CFA);
          real r3D3D#13 = RAdd(r3D3C,r3D0F);
          real r3D3E#1 = RAdd(r3D0F,r3CFA);
          real r3D3F#1 = RAdd(r3D3E,r3CF9);
          real r3D40#13 = RAdd(r3D3F,r3D0F);
          real r3D94#1 = RMul(vdot3CE9,r3CFD);
          real r3D97#1 = RMul(vdot3CEB,r3D07);
          real r3D9A#1 = RMul(vdot3CED,r3D12);
          real r3D9B#1 = RAdd(r3D94,r3D97);
          real r3D9C#1 = RAdd(r3D9B,r3D9A);
          real r3D9E#1 = RMul(vdot3CE9,r3D00);
          real r3DA0#1 = RMul(vdot3CEB,r3D09);
          real r3DA2#1 = RMul(vdot3CED,r3D16);
          real r3DA3#1 = RAdd(r3D9E,r3DA0);
          real r3DA4#1 = RAdd(r3DA3,r3DA2);
          real r3DA6#1 = RMul(vdot3CE9,r3D03);
          real r3DA8#1 = RMul(vdot3CEB,r3D0C);
          real r3DAA#1 = RMul(vdot3CED,r3D19);
          real r3DAB#1 = RAdd(r3DA6,r3DA8);
          real r3DAC#1 = RAdd(r3DAB,r3DAA);
          real r3DAF#1 = RMul(vdot3CE9,r3D1D);
          real r3DB1#1 = RMul(vdot3CEB,r3CFD);
          real r3DB3#1 = RMul(vdot3CED,r3D25);
          real r3DB4#1 = RAdd(r3DAF,r3DB1);
          real r3DB5#1 = RAdd(r3DB4,r3DB3);
          real r3DB7#1 = RMul(vdot3CE9,r3D1F);
          real r3DB9#1 = RMul(vdot3CEB,r3D00);
          real r3DBB#1 = RMul(vdot3CED,r3D28);
          real r3DBC#1 = RAdd(r3DB7,r3DB9);
          real r3DBD#1 = RAdd(r3DBC,r3DBB);
          real r3DBF#1 = RMul(vdot3CE9,r3D21);
          real r3DC1#1 = RMul(vdot3CEB,r3D03);
          real r3DC3#1 = RMul(vdot3CED,r3D2B);
          real r3DC4#1 = RAdd(r3DBF,r3DC1);
          real r3DC5#1 = RAdd(r3DC4,r3DC3);
          real r3DC8#1 = RMul(vdot3CE9,r3D30);
          real r3DCA#1 = RMul(vdot3CEB,r3D3A);
          real r3DCC#1 = RMul(vdot3CED,r3CFD);
          real r3DCD#1 = RAdd(r3DC8,r3DCA);
          real r3DCE#1 = RAdd(r3DCD,r3DCC);
          real r3DD0#1 = RMul(vdot3CE9,r3D33);
          real r3DD2#1 = RMul(vdot3CEB,r3D3D);
          real r3DD4#1 = RMul(vdot3CED,r3D00);
          real r3DD5#1 = RAdd(r3DD0,r3DD2);
          real r3DD6#1 = RAdd(r3DD5,r3DD4);
          real r3DD8#1 = RMul(vdot3CE9,r3D36);
          real r3DDA#1 = RMul(vdot3CEB,r3D40);
          real r3DDC#1 = RMul(vdot3CED,r3D03);
          real r3DDD#1 = RAdd(r3DD8,r3DDA);
          real r3DDE#1 = RAdd(r3DDD,r3DDC);
          real r3E33#1 = RMul(vdot3AF3,r3D9C);
          real r3E36#1 = RMul(vdot3AF5,r3DB5);
          real r3E39#1 = RMul(vdot3AF7,r3DCE);
          real r3E3A#1 = RAdd(r3E33,r3E36);
          real r3E3B#4 = RAdd(r3E3A,r3E39);
          real r3E3D#1 = RMul(vdot3AF3,r3DA4);
          real r3E3F#1 = RMul(vdot3AF5,r3DBD);
          real r3E41#1 = RMul(vdot3AF7,r3DD6);
          real r3E42#1 = RAdd(r3E3D,r3E3F);
          real r3E43#4 = RAdd(r3E42,r3E41);
          real r3E45#1 = RMul(vdot3AF3,r3DAC);
          real r3E47#1 = RMul(vdot3AF5,r3DC5);
          real r3E49#1 = RMul(vdot3AF7,r3DDE);
          real r3E4A#1 = RAdd(r3E45,r3E47);
          real r3E4B#4 = RAdd(r3E4A,r3E49);
          tensor[3] op1_e3_l_943E30#11 = <tensor[3]>[r3E3B,r3E43,r3E4B];
          real basisEval3E72#3 = RMul(coeff39AA,prod3916);
          real coeff3E7B#13 = 0.24e2;
          real basisEval3E7E#1 = RMul(coeff3E7B,prod3922);
          real basisEval3E82#4 = RMul(coeff39AA,prod3926);
          real basisEval3E89#4 = RMul(coeff39AA,prod392D);
          real basisEval3E8B#2 = RMul(coeff3E7B,prod392F);
          real basisEval3E8D#2 = RMul(coeff3E7B,prod3931);
          real coeff3E8E#9 = 0.60e2;
          real basisEval3E91#1 = RMul(coeff3E8E,prod3935);
          real basisEval3E95#2 = RMul(coeff39AA,prod3939);
          real basisEval3E9F#2 = RMul(coeff39AA,prod3943);
          real basisEval3EA1#2 = RMul(coeff3E7B,prod3945);
          real basisEval3EA3#3 = RMul(coeff3E7B,prod3947);
          real basisEval3EA5#2 = RMul(coeff3E7B,prod3949);
          real basisEval3EA7#1 = RMul(coeff3E8E,prod394B);
          real basisEval3EA9#1 = RMul(coeff3E8E,prod394D);
          real coeff3EAA#3 = 0.120e3;
          real basisEval3EAD#1 = RMul(coeff3EAA,prod3951);
          real basisEval3EB2#2 = RMul(coeff394F,prod391E);
          real basisEval3EB8#2 = RMul(coeff3B25,prod3931);
          real basisEval3EBB#1 = RMul(coeff394F,prod393C);
          real basisEval3EBD#2 = RMul(coeff3B85,prod3943);
          real basisEval3EBF#6 = RMul(coeff3B25,prod3947);
          real coeff3EC0#6 = 0.18e2;
          real basisEval3EC1#1 = RMul(coeff3EC0,prod3949);
          real basisEval3EC3#2 = RMul(coeff3E7B,prod394D);
          real basisEval3EC6#2 = RMul(coeff394F,prod391A);
          real basisEval3EC9#2 = RMul(coeff3B25,prod392F);
          real basisEval3ECB#2 = RMul(coeff3B85,prod3939);
          real basisEval3ECC#1 = RMul(coeff394F,prod393F);
          real basisEval3ECE#1 = RMul(coeff3EC0,prod3945);
          real basisEval3ED0#2 = RMul(coeff3E7B,prod394B);
          real basisEval3ED2#2 = RMul(coeff394F,prod3922);
          real basisEval3ED5#4 = RMul(coeff39AA,prod3935);
          real basisEval3ED8#1 = RMul(coeff394F,prod3945);
          real basisEval3EDA#1 = RMul(coeff3EC0,prod394D);
          real basisEval3EDB#2 = RMul(coeff3B85,prod3951);
          real basisEval3EE5#1 = RMul(coeff3B85,prod3947);
          real basisEval3EEB#1 = RMul(coeff394F,prod3949);
          real basisEval3EEC#1 = RMul(coeff3EC0,prod394B);
          real basisEval3EED#1 = RMul(coeff3E7B,prod391E);
          real basisEval3EEE#2 = RMul(coeff3E7B,prod3929);
          real basisEval3EEF#1 = RMul(coeff3E8E,prod392D);
          real basisEval3EF0#2 = RMul(coeff3E7B,prod393C);
          real basisEval3EF1#1 = RMul(coeff3E8E,prod393F);
          real basisEval3EF2#1 = RMul(coeff3EAA,prod3943);
          real basisEval3EF3#1 = RMul(coeff3E8E,prod3949);
          real basisEval3EF4#2 = RMul(coeff39AA,prod3951);
          real basisEval3EF5#2 = RMul(coeff3B25,prod3929);
          real basisEval3EF7#1 = RMul(coeff3EC0,prod393C);
          real basisEval3EF8#2 = RMul(coeff3E7B,prod393F);
          real basisEval3EFA#1 = RMul(coeff394F,prod394B);
          real basisEval3EFC#1 = RMul(coeff3EC0,prod393F);
          real basisEval3EFE#1 = RMul(coeff394F,prod394D);
          real basisEval3EFF#1 = RMul(coeff3E7B,prod391A);
          real basisEval3F00#1 = RMul(coeff3E8E,prod3926);
          real basisEval3F01#1 = RMul(coeff3EAA,prod3939);
          real basisEval3F02#1 = RMul(coeff3E8E,prod393C);
          real basisEval3F03#1 = RMul(coeff3E8E,prod3945);
          tensor[84] intermediateCons3F04#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E72,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval3BA3,basisEval3E7E,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3BA4,basisEval3E89,basisEval3E8B,basisEval3E8D,basisEval3E91,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E95,basisEval3BA7,basisEval3BBA,basisEval3E9F,basisEval3EA1,basisEval3EA3,basisEval3EA5,basisEval3EA7,basisEval3EA9,basisEval3EAD];
          tensor[84] intermediateCons3F05#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval3EB2,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval3BB8,basisEval3E89,_t3465,basisEval3B22,basisEval3EB8,_t3465,basisEval3B28,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval3EBB,basisEval3BBA,basisEval3EBD,_t3465,basisEval3B38,basisEval3EBF,basisEval3EC1,_t3465,basisEval3B3E,basisEval3EC3,_t3465,basisEval3B44,_t3465];
          tensor[84] intermediateCons3F06#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3EC6,basisEval39AE,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3BB8,basisEval3B20,_t3465,basisEval3EC9,basisEval3B24,_t3465,basisEval3B28,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3ECB,basisEval3BA7,basisEval3ECC,basisEval3B36,_t3465,basisEval3ECE,basisEval3EBF,basisEval3B3C,_t3465,basisEval3ED0,basisEval3B40,_t3465,basisEval3B44,_t3465,_t3465];
          tensor[84] intermediateCons3F07#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval3BA3,_t3465,_t3465,basisEval3ED2,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval3BA4,basisEval3BA5,_t3465,_t3465,basisEval3B91,basisEval3EB8,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval3BA7,basisEval3BA8,basisEval3BA9,_t3465,_t3465,basisEval3ED8,basisEval3EBF,basisEval3EA5,_t3465,_t3465,basisEval3B97,basisEval3EDA,_t3465,_t3465,basisEval3EDB,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F08#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval39AE,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DB,basisEval3BB8,basisEval39B1,_t3465,_t3465,basisEval3B91,basisEval3B74,_t3465,_t3465,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DD,basisEval3BA7,basisEval3BBA,basisEval39B6,_t3465,_t3465,basisEval3B38,basisEval3EE5,basisEval3B3C,_t3465,_t3465,basisEval3B97,basisEval3B7C,_t3465,_t3465,basisEval3952,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F09#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval39AE,_t3465,_t3465,basisEval3ED2,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC8,basisEval3BA4,basisEval3B20,_t3465,_t3465,basisEval3EC9,basisEval3B74,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC9,basisEval3BCA,basisEval3BBA,basisEval3B36,_t3465,_t3465,basisEval3EA1,basisEval3EBF,basisEval3EEB,_t3465,_t3465,basisEval3EEC,basisEval3B7C,_t3465,_t3465,basisEval3EDB,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0A#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E72,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval3EED,_t3465,_t3465,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3EEE,basisEval3EEF,_t3465,_t3465,_t3465,basisEval3B22,basisEval3E8D,_t3465,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E95,basisEval3EF0,basisEval3EF1,basisEval3EF2,_t3465,_t3465,_t3465,basisEval3B38,basisEval3EA3,basisEval3EF3,_t3465,_t3465,_t3465,basisEval3B97,basisEval3EC3,_t3465,_t3465,_t3465,basisEval3EF4,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0B#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3EC6,basisEval3BA3,_t3465,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3EF5,basisEval3BA5,_t3465,_t3465,_t3465,basisEval3B91,basisEval3B24,_t3465,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3ECB,basisEval3EF7,basisEval3EF8,basisEval3BA9,_t3465,_t3465,_t3465,basisEval3B38,basisEval3EBF,basisEval3BAA,_t3465,_t3465,_t3465,basisEval3EFA,basisEval3B7C,_t3465,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0C#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval3EB2,_t3465,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC8,basisEval3EF5,basisEval3E89,_t3465,_t3465,_t3465,basisEval3B22,basisEval3B74,_t3465,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC9,basisEval3EF0,basisEval3EFC,basisEval3EBD,_t3465,_t3465,_t3465,basisEval3BCB,basisEval3EBF,basisEval3B3C,_t3465,_t3465,_t3465,basisEval3B97,basisEval3EFE,_t3465,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0D#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E72,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3EFF,basisEval3BA3,_t3465,_t3465,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3F00,basisEval3EEE,basisEval3E89,_t3465,_t3465,_t3465,basisEval3E8B,basisEval3B24,_t3465,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3F01,basisEval3F02,basisEval3EF8,basisEval3E9F,_t3465,_t3465,_t3465,basisEval3F03,basisEval3EA3,basisEval3B3C,_t3465,_t3465,_t3465,basisEval3ED0,basisEval3B7C,_t3465,_t3465,_t3465,basisEval3EF4,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          real vdot3FC9#1 = VDot<84>(dofs37BC,intermediateCons3F04);
          real vdot3FCB#2 = VDot<84>(dofs37BC,intermediateCons3F05);
          real vdot3FCD#2 = VDot<84>(dofs37BC,intermediateCons3F06);
          real vdot3FD2#2 = VDot<84>(dofs37BC,intermediateCons3F07);
          real vdot3FD4#3 = VDot<84>(dofs37BC,intermediateCons3F08);
          real vdot3FDB#2 = VDot<84>(dofs37BC,intermediateCons3F09);
          real vdot3FE8#1 = VDot<84>(dofs37BC,intermediateCons3F0A);
          real vdot3FEA#2 = VDot<84>(dofs37BC,intermediateCons3F0B);
          real vdot3FF1#2 = VDot<84>(dofs37BC,intermediateCons3F0C);
          real vdot4007#1 = VDot<84>(dofs37BC,intermediateCons3F0D);
          real r4051#4 = RMul(vdot3AF3,vdot3FC9);
          real r4053#5 = RMul(vdot3AF3,vdot3FCB);
          real r4055#5 = RMul(vdot3AF3,vdot3FCD);
          real r405A#4 = RMul(vdot3AF3,vdot3FD2);
          real r405C#5 = RMul(vdot3AF3,vdot3FD4);
          real r4063#4 = RMul(vdot3AF3,vdot3FDB);
          real r4068#4 = RMul(vdot3AF5,vdot3FCB);
          real r406A#5 = RMul(vdot3AF5,vdot3FD2);
          real r406C#5 = RMul(vdot3AF5,vdot3FD4);
          real r4071#4 = RMul(vdot3AF5,vdot3FE8);
          real r4073#5 = RMul(vdot3AF5,vdot3FEA);
          real r407A#4 = RMul(vdot3AF5,vdot3FF1);
          real r407F#4 = RMul(vdot3AF7,vdot3FCD);
          real r4081#5 = RMul(vdot3AF7,vdot3FD4);
          real r4083#5 = RMul(vdot3AF7,vdot3FDB);
          real r4088#4 = RMul(vdot3AF7,vdot3FEA);
          real r408A#5 = RMul(vdot3AF7,vdot3FF1);
          real r4091#4 = RMul(vdot3AF7,vdot4007);
          real r40DD#4 = RMul(vdot3CBC,vdot3CBC);
          real r40DF#4 = RMul(vdot3CBC,vdot3CBE);
          real r40E1#4 = RMul(vdot3CBC,vdot3CC0);
          real r40E4#8 = RMul(vdot3CBE,vdot3CBE);
          real r40E6#4 = RMul(vdot3CBE,vdot3CC5);
          real r40E8#4 = RMul(vdot3CBE,vdot3CC7);
          real r40EB#8 = RMul(vdot3CC0,vdot3CC0);
          real r40ED#4 = RMul(vdot3CC0,vdot3CC7);
          real r40EF#4 = RMul(vdot3CC0,vdot3CCE);
          real r40F2#4 = RMul(vdot3CBE,vdot3CBC);
          real r40F4#4 = RMul(vdot3CBE,vdot3CC0);
          real r40F6#4 = RMul(vdot3CC5,vdot3CBE);
          real r40F7#4 = RMul(vdot3CC5,vdot3CC5);
          real r40F8#4 = RMul(vdot3CC5,vdot3CC7);
          real r40FA#4 = RMul(vdot3CC7,vdot3CC0);
          real r40FB#8 = RMul(vdot3CC7,vdot3CC7);
          real r40FC#4 = RMul(vdot3CC7,vdot3CCE);
          real r40FF#4 = RMul(vdot3CC0,vdot3CBC);
          real r4100#4 = RMul(vdot3CC0,vdot3CBE);
          real r4103#4 = RMul(vdot3CC7,vdot3CBE);
          real r4104#4 = RMul(vdot3CC7,vdot3CC5);
          real r4107#4 = RMul(vdot3CCE,vdot3CC0);
          real r4108#4 = RMul(vdot3CCE,vdot3CC7);
          real r4109#4 = RMul(vdot3CCE,vdot3CCE);
          real r4141#1 = RAdd(r4051,r40DD);
          real r4144#1 = RAdd(r4068,r40E4);
          real r4147#1 = RAdd(r407F,r40EB);
          real r4148#1 = RAdd(r4141,r4144);
          real r4149#3 = RAdd(r4148,r4147);
          real r414C#1 = RAdd(r4053,r40DF);
          real r414F#1 = RAdd(r406A,r40E6);
          real r4152#1 = RAdd(r4081,r40ED);
          real r4153#1 = RAdd(r414C,r414F);
          real r4154#3 = RAdd(r4153,r4152);
          real r4157#1 = RAdd(r4055,r40E1);
          real r415A#1 = RAdd(r406C,r40E8);
          real r415D#1 = RAdd(r4083,r40EF);
          real r415E#1 = RAdd(r4157,r415A);
          real r415F#3 = RAdd(r415E,r415D);
          real r4163#1 = RAdd(r4053,r40F2);
          real r4166#1 = RAdd(r406A,r40F6);
          real r4169#1 = RAdd(r4081,r40FA);
          real r416A#1 = RAdd(r4163,r4166);
          real r416B#3 = RAdd(r416A,r4169);
          real r416E#1 = RAdd(r405A,r40E4);
          real r4171#1 = RAdd(r4071,r40F7);
          real r4174#1 = RAdd(r4088,r40FB);
          real r4175#1 = RAdd(r416E,r4171);
          real r4176#3 = RAdd(r4175,r4174);
          real r4179#1 = RAdd(r405C,r40F4);
          real r417C#1 = RAdd(r4073,r40F8);
          real r417F#1 = RAdd(r408A,r40FC);
          real r4180#1 = RAdd(r4179,r417C);
          real r4181#3 = RAdd(r4180,r417F);
          real r4185#1 = RAdd(r4055,r40FF);
          real r4188#1 = RAdd(r406C,r4103);
          real r418B#1 = RAdd(r4083,r4107);
          real r418C#1 = RAdd(r4185,r4188);
          real r418D#3 = RAdd(r418C,r418B);
          real r4190#1 = RAdd(r405C,r4100);
          real r4193#1 = RAdd(r4073,r4104);
          real r4196#1 = RAdd(r408A,r4108);
          real r4197#1 = RAdd(r4190,r4193);
          real r4198#3 = RAdd(r4197,r4196);
          real r419B#1 = RAdd(r4063,r40EB);
          real r419E#1 = RAdd(r407A,r40FB);
          real r41A1#1 = RAdd(r4091,r4109);
          real r41A2#1 = RAdd(r419B,r419E);
          real r41A3#3 = RAdd(r41A2,r41A1);
          real r4210#1 = RMul(vdot3CE9,vdot3CBC);
          real r4212#2 = RMul(vdot3CE9,vdot3CBE);
          real r4214#2 = RMul(vdot3CE9,vdot3CC0);
          tensor[3] tensor4215#4 = <tensor[3]>[r4210,r4212,r4214];
          real r4219#1 = RMul(vdot3CE9,vdot3CC5);
          real r421B#2 = RMul(vdot3CE9,vdot3CC7);
          tensor[3] tensor421C#4 = <tensor[3]>[r4212,r4219,r421B];
          real r4222#1 = RMul(vdot3CE9,vdot3CCE);
          tensor[3] tensor4223#4 = <tensor[3]>[r4214,r421B,r4222];
          real r4226#1 = RMul(vdot3CEB,vdot3CBC);
          real r4227#2 = RMul(vdot3CEB,vdot3CBE);
          real r4228#2 = RMul(vdot3CEB,vdot3CC0);
          tensor[3] tensor4229#4 = <tensor[3]>[r4226,r4227,r4228];
          real r422B#1 = RMul(vdot3CEB,vdot3CC5);
          real r422C#2 = RMul(vdot3CEB,vdot3CC7);
          tensor[3] tensor422D#4 = <tensor[3]>[r4227,r422B,r422C];
          real r4230#1 = RMul(vdot3CEB,vdot3CCE);
          tensor[3] tensor4231#4 = <tensor[3]>[r4228,r422C,r4230];
          real r4234#1 = RMul(vdot3CED,vdot3CBC);
          real r4235#2 = RMul(vdot3CED,vdot3CBE);
          real r4236#2 = RMul(vdot3CED,vdot3CC0);
          tensor[3] tensor4237#4 = <tensor[3]>[r4234,r4235,r4236];
          real r4239#1 = RMul(vdot3CED,vdot3CC5);
          real r423A#2 = RMul(vdot3CED,vdot3CC7);
          tensor[3] tensor423B#4 = <tensor[3]>[r4235,r4239,r423A];
          real r423E#1 = RMul(vdot3CED,vdot3CCE);
          tensor[3] tensor423F#4 = <tensor[3]>[r4236,r423A,r423E];
          real r4279#1 = RMul(vdot3AF3,r4149);
          real r427B#1 = RMul(vdot3AF3,r4154);
          real r427D#1 = RMul(vdot3AF3,r415F);
          tensor[3] tensor427E#1 = <tensor[3]>[r4279,r427B,r427D];
          real r4280#1 = RMul(vdot3AF3,r416B);
          real r4282#1 = RMul(vdot3AF3,r4176);
          real r4284#1 = RMul(vdot3AF3,r4181);
          tensor[3] tensor4285#1 = <tensor[3]>[r4280,r4282,r4284];
          real r4287#1 = RMul(vdot3AF3,r418D);
          real r4289#1 = RMul(vdot3AF3,r4198);
          real r428B#1 = RMul(vdot3AF3,r41A3);
          tensor[3] tensor428C#1 = <tensor[3]>[r4287,r4289,r428B];
          real r428F#1 = RMul(vdot3AF5,r4149);
          real r4290#1 = RMul(vdot3AF5,r4154);
          real r4291#1 = RMul(vdot3AF5,r415F);
          tensor[3] tensor4292#1 = <tensor[3]>[r428F,r4290,r4291];
          real r4293#1 = RMul(vdot3AF5,r416B);
          real r4294#1 = RMul(vdot3AF5,r4176);
          real r4295#1 = RMul(vdot3AF5,r4181);
          tensor[3] tensor4296#1 = <tensor[3]>[r4293,r4294,r4295];
          real r4297#1 = RMul(vdot3AF5,r418D);
          real r4298#1 = RMul(vdot3AF5,r4198);
          real r4299#1 = RMul(vdot3AF5,r41A3);
          tensor[3] tensor429A#1 = <tensor[3]>[r4297,r4298,r4299];
          real r429D#1 = RMul(vdot3AF7,r4149);
          real r429E#1 = RMul(vdot3AF7,r4154);
          real r429F#1 = RMul(vdot3AF7,r415F);
          tensor[3] tensor42A0#1 = <tensor[3]>[r429D,r429E,r429F];
          real r42A1#1 = RMul(vdot3AF7,r416B);
          real r42A2#1 = RMul(vdot3AF7,r4176);
          real r42A3#1 = RMul(vdot3AF7,r4181);
          tensor[3] tensor42A4#1 = <tensor[3]>[r42A1,r42A2,r42A3];
          real r42A5#1 = RMul(vdot3AF7,r418D);
          real r42A6#1 = RMul(vdot3AF7,r4198);
          real r42A7#1 = RMul(vdot3AF7,r41A3);
          tensor[3] tensor42A8#1 = <tensor[3]>[r42A5,r42A6,r42A7];
          tensor[3] v42E2#3 = VAdd<3>(tensor4215,tensor427E);
          tensor[3] v42E5#3 = VAdd<3>(tensor421C,tensor4292);
          tensor[3] v42E8#3 = VAdd<3>(tensor4223,tensor42A0);
          tensor[3] v42EC#3 = VAdd<3>(tensor4229,tensor4285);
          tensor[3] v42EF#3 = VAdd<3>(tensor422D,tensor4296);
          tensor[3] v42F2#3 = VAdd<3>(tensor4231,tensor42A4);
          tensor[3] v42F6#3 = VAdd<3>(tensor4237,tensor428C);
          tensor[3] v42F9#3 = VAdd<3>(tensor423B,tensor429A);
          tensor[3] v42FC#3 = VAdd<3>(tensor423F,tensor42A8);
          real r431F#3 = VIndex<3,0>(v42E2);
          real r4321#1 = RMul(r431F,r3CFD);
          real r4322#3 = VIndex<3,0>(v42EC);
          real r4324#1 = RMul(r4322,r3D07);
          real r4325#3 = VIndex<3,0>(v42F6);
          real r4327#1 = RMul(r4325,r3D12);
          real r4328#3 = VIndex<3,0>(v42E5);
          real r432A#1 = RMul(r4328,r3D1D);
          real r432B#3 = VIndex<3,0>(v42EF);
          real r432D#1 = RMul(r432B,r3CFD);
          real r432E#3 = VIndex<3,0>(v42F9);
          real r4330#1 = RMul(r432E,r3D25);
          real r4331#3 = VIndex<3,0>(v42E8);
          real r4333#1 = RMul(r4331,r3D30);
          real r4334#3 = VIndex<3,0>(v42F2);
          real r4336#1 = RMul(r4334,r3D3A);
          real r4337#3 = VIndex<3,0>(v42FC);
          real r4339#1 = RMul(r4337,r3CFD);
          real r433A#1 = RAdd(r4321,r4324);
          real r433B#1 = RAdd(r433A,r4327);
          real r433C#1 = RAdd(r433B,r432A);
          real r433D#1 = RAdd(r433C,r432D);
          real r433E#1 = RAdd(r433D,r4330);
          real r433F#1 = RAdd(r433E,r4333);
          real r4340#1 = RAdd(r433F,r4336);
          real r4341#1 = RAdd(r4340,r4339);
          real r4343#1 = RMul(r431F,r3D00);
          real r4345#1 = RMul(r4322,r3D09);
          real r4347#1 = RMul(r4325,r3D16);
          real r4349#1 = RMul(r4328,r3D1F);
          real r434B#1 = RMul(r432B,r3D00);
          real r434D#1 = RMul(r432E,r3D28);
          real r434F#1 = RMul(r4331,r3D33);
          real r4351#1 = RMul(r4334,r3D3D);
          real r4353#1 = RMul(r4337,r3D00);
          real r4354#1 = RAdd(r4343,r4345);
          real r4355#1 = RAdd(r4354,r4347);
          real r4356#1 = RAdd(r4355,r4349);
          real r4357#1 = RAdd(r4356,r434B);
          real r4358#1 = RAdd(r4357,r434D);
          real r4359#1 = RAdd(r4358,r434F);
          real r435A#1 = RAdd(r4359,r4351);
          real r435B#1 = RAdd(r435A,r4353);
          real r435D#1 = RMul(r431F,r3D03);
          real r435F#1 = RMul(r4322,r3D0C);
          real r4361#1 = RMul(r4325,r3D19);
          real r4363#1 = RMul(r4328,r3D21);
          real r4365#1 = RMul(r432B,r3D03);
          real r4367#1 = RMul(r432E,r3D2B);
          real r4369#1 = RMul(r4331,r3D36);
          real r436B#1 = RMul(r4334,r3D40);
          real r436D#1 = RMul(r4337,r3D03);
          real r436E#1 = RAdd(r435D,r435F);
          real r436F#1 = RAdd(r436E,r4361);
          real r4370#1 = RAdd(r436F,r4363);
          real r4371#1 = RAdd(r4370,r4365);
          real r4372#1 = RAdd(r4371,r4367);
          real r4373#1 = RAdd(r4372,r4369);
          real r4374#1 = RAdd(r4373,r436B);
          real r4375#1 = RAdd(r4374,r436D);
          real r4377#3 = VIndex<3,1>(v42E2);
          real r4378#1 = RMul(r4377,r3CFD);
          real r4379#3 = VIndex<3,1>(v42EC);
          real r437A#1 = RMul(r4379,r3D07);
          real r437B#3 = VIndex<3,1>(v42F6);
          real r437C#1 = RMul(r437B,r3D12);
          real r437D#3 = VIndex<3,1>(v42E5);
          real r437E#1 = RMul(r437D,r3D1D);
          real r437F#3 = VIndex<3,1>(v42EF);
          real r4380#1 = RMul(r437F,r3CFD);
          real r4381#3 = VIndex<3,1>(v42F9);
          real r4382#1 = RMul(r4381,r3D25);
          real r4383#3 = VIndex<3,1>(v42E8);
          real r4384#1 = RMul(r4383,r3D30);
          real r4385#3 = VIndex<3,1>(v42F2);
          real r4386#1 = RMul(r4385,r3D3A);
          real r4387#3 = VIndex<3,1>(v42FC);
          real r4388#1 = RMul(r4387,r3CFD);
          real r4389#1 = RAdd(r4378,r437A);
          real r438A#1 = RAdd(r4389,r437C);
          real r438B#1 = RAdd(r438A,r437E);
          real r438C#1 = RAdd(r438B,r4380);
          real r438D#1 = RAdd(r438C,r4382);
          real r438E#1 = RAdd(r438D,r4384);
          real r438F#1 = RAdd(r438E,r4386);
          real r4390#1 = RAdd(r438F,r4388);
          real r4391#1 = RMul(r4377,r3D00);
          real r4392#1 = RMul(r4379,r3D09);
          real r4393#1 = RMul(r437B,r3D16);
          real r4394#1 = RMul(r437D,r3D1F);
          real r4395#1 = RMul(r437F,r3D00);
          real r4396#1 = RMul(r4381,r3D28);
          real r4397#1 = RMul(r4383,r3D33);
          real r4398#1 = RMul(r4385,r3D3D);
          real r4399#1 = RMul(r4387,r3D00);
          real r439A#1 = RAdd(r4391,r4392);
          real r439B#1 = RAdd(r439A,r4393);
          real r439C#1 = RAdd(r439B,r4394);
          real r439D#1 = RAdd(r439C,r4395);
          real r439E#1 = RAdd(r439D,r4396);
          real r439F#1 = RAdd(r439E,r4397);
          real r43A0#1 = RAdd(r439F,r4398);
          real r43A1#1 = RAdd(r43A0,r4399);
          real r43A2#1 = RMul(r4377,r3D03);
          real r43A3#1 = RMul(r4379,r3D0C);
          real r43A4#1 = RMul(r437B,r3D19);
          real r43A5#1 = RMul(r437D,r3D21);
          real r43A6#1 = RMul(r437F,r3D03);
          real r43A7#1 = RMul(r4381,r3D2B);
          real r43A8#1 = RMul(r4383,r3D36);
          real r43A9#1 = RMul(r4385,r3D40);
          real r43AA#1 = RMul(r4387,r3D03);
          real r43AB#1 = RAdd(r43A2,r43A3);
          real r43AC#1 = RAdd(r43AB,r43A4);
          real r43AD#1 = RAdd(r43AC,r43A5);
          real r43AE#1 = RAdd(r43AD,r43A6);
          real r43AF#1 = RAdd(r43AE,r43A7);
          real r43B0#1 = RAdd(r43AF,r43A8);
          real r43B1#1 = RAdd(r43B0,r43A9);
          real r43B2#1 = RAdd(r43B1,r43AA);
          real r43B4#3 = VIndex<3,2>(v42E2);
          real r43B5#1 = RMul(r43B4,r3CFD);
          real r43B6#3 = VIndex<3,2>(v42EC);
          real r43B7#1 = RMul(r43B6,r3D07);
          real r43B8#3 = VIndex<3,2>(v42F6);
          real r43B9#1 = RMul(r43B8,r3D12);
          real r43BA#3 = VIndex<3,2>(v42E5);
          real r43BB#1 = RMul(r43BA,r3D1D);
          real r43BC#3 = VIndex<3,2>(v42EF);
          real r43BD#1 = RMul(r43BC,r3CFD);
          real r43BE#3 = VIndex<3,2>(v42F9);
          real r43BF#1 = RMul(r43BE,r3D25);
          real r43C0#3 = VIndex<3,2>(v42E8);
          real r43C1#1 = RMul(r43C0,r3D30);
          real r43C2#3 = VIndex<3,2>(v42F2);
          real r43C3#1 = RMul(r43C2,r3D3A);
          real r43C4#3 = VIndex<3,2>(v42FC);
          real r43C5#1 = RMul(r43C4,r3CFD);
          real r43C6#1 = RAdd(r43B5,r43B7);
          real r43C7#1 = RAdd(r43C6,r43B9);
          real r43C8#1 = RAdd(r43C7,r43BB);
          real r43C9#1 = RAdd(r43C8,r43BD);
          real r43CA#1 = RAdd(r43C9,r43BF);
          real r43CB#1 = RAdd(r43CA,r43C1);
          real r43CC#1 = RAdd(r43CB,r43C3);
          real r43CD#1 = RAdd(r43CC,r43C5);
          real r43CE#1 = RMul(r43B4,r3D00);
          real r43CF#1 = RMul(r43B6,r3D09);
          real r43D0#1 = RMul(r43B8,r3D16);
          real r43D1#1 = RMul(r43BA,r3D1F);
          real r43D2#1 = RMul(r43BC,r3D00);
          real r43D3#1 = RMul(r43BE,r3D28);
          real r43D4#1 = RMul(r43C0,r3D33);
          real r43D5#1 = RMul(r43C2,r3D3D);
          real r43D6#1 = RMul(r43C4,r3D00);
          real r43D7#1 = RAdd(r43CE,r43CF);
          real r43D8#1 = RAdd(r43D7,r43D0);
          real r43D9#1 = RAdd(r43D8,r43D1);
          real r43DA#1 = RAdd(r43D9,r43D2);
          real r43DB#1 = RAdd(r43DA,r43D3);
          real r43DC#1 = RAdd(r43DB,r43D4);
          real r43DD#1 = RAdd(r43DC,r43D5);
          real r43DE#1 = RAdd(r43DD,r43D6);
          real r43DF#1 = RMul(r43B4,r3D03);
          real r43E0#1 = RMul(r43B6,r3D0C);
          real r43E1#1 = RMul(r43B8,r3D19);
          real r43E2#1 = RMul(r43BA,r3D21);
          real r43E3#1 = RMul(r43BC,r3D03);
          real r43E4#1 = RMul(r43BE,r3D2B);
          real r43E5#1 = RMul(r43C0,r3D36);
          real r43E6#1 = RMul(r43C2,r3D40);
          real r43E7#1 = RMul(r43C4,r3D03);
          real r43E8#1 = RAdd(r43DF,r43E0);
          real r43E9#1 = RAdd(r43E8,r43E1);
          real r43EA#1 = RAdd(r43E9,r43E2);
          real r43EB#1 = RAdd(r43EA,r43E3);
          real r43EC#1 = RAdd(r43EB,r43E4);
          real r43ED#1 = RAdd(r43EC,r43E5);
          real r43EE#1 = RAdd(r43ED,r43E6);
          real r43EF#1 = RAdd(r43EE,r43E7);
          real r44C8#2 = RMul(r3E3B,r4341);
          real r44CA#2 = RMul(r3E3B,r4390);
          real r44CC#2 = RMul(r3E3B,r43CD);
          real r44D0#2 = RMul(r3E43,r435B);
          real r44D2#2 = RMul(r3E43,r43A1);
          real r44D4#2 = RMul(r3E43,r43DE);
          real r44D8#2 = RMul(r3E4B,r4375);
          real r44DA#2 = RMul(r3E4B,r43B2);
          real r44DC#2 = RMul(r3E4B,r43EF);
          real op1_e3_l_14644F8#4 = VDot<3>(op1_e3_l_943E30,op1_e3_l_943E30);
          real r44FD#1 = RAdd(r44C8,r44C8);
          real r44FF#1 = RAdd(r44D0,r44D0);
          real r4501#1 = RAdd(r44D8,r44D8);
          real r4502#1 = RAdd(r44FD,r44FF);
          real r4503#1 = RAdd(r4502,r4501);
          real r4505#1 = RAdd(r44CA,r44CA);
          real r4507#1 = RAdd(r44D2,r44D2);
          real r4509#1 = RAdd(r44DA,r44DA);
          real r450A#1 = RAdd(r4505,r4507);
          real r450B#1 = RAdd(r450A,r4509);
          real r450D#1 = RAdd(r44CC,r44CC);
          real r450F#1 = RAdd(r44D4,r44D4);
          real r4511#1 = RAdd(r44DC,r44DC);
          real r4512#1 = RAdd(r450D,r450F);
          real r4513#1 = RAdd(r4512,r4511);
          tensor[3] op1_e3_l_14744FB#3 = <tensor[3]>[r4503,r450B,r4513];
          tensor[3] op1_e3_l_250452E#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_14744FB);
          real op1_e3_l_2514531#1 = VDot<3>(op1_e3_l_14744FB,op1_e3_l_14744FB);
          real r4536#3 = RDiv(_t3467,op1_e3_l_2514531);
          real r4537#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_250452E);
          real r4538#1 = RMul(r4536,r4537);
          real r4539#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_250452E);
          real r453A#1 = RMul(r4536,r4539);
          real r453B#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_250452E);
          real r453C#1 = RMul(r4536,r453B);
          tensor[3] op1_e3_l_2524534#1 = <tensor[3]>[r4538,r453A,r453C];
          tensor[3] op1_e3_l_4244547#2 = VNeg<3>(op1_e3_l_2524534);
          real op1_e3_l_426454A#1 = VDot<3>(op1_e3_l_4244547,op1_e3_l_4244547);
          real op1_e3_l_427454D#1 = Sqrt(op1_e3_l_426454A);
          real op1_e3_l_4284550#1 = Abs<real>(op1_e3_l_427454D);
          real op1_e3_l_4294553#1 = RDiv(op1_e3_l_4284550,thick2411);
          real op1_e3_l_4304556#1 = RSub(_t3467,op1_e3_l_4294553);
          real op1_e3_l_4314559#1 = RMul(_t3469,op1_e3_l_4304556);
          real op1_e3_l_432455C#1 = RClamp(_t3465,_t3467,op1_e3_l_4314559);
          real _t455F#2 = RMul(maxAlpha2419,op1_e3_l_432455C);
          bool _t4562#1 = EQ<real>(_t455F,_t3465);
          if _t4562 then goto SAVE4565 else goto JOIN4567
        SAVE4565:  preds = [COND4564]
          self.rayN = rayN243D;
          active
          goto JOIN4567
        JOIN4567:  preds = [*ACTIVE4566,COND4564]
          real _t456E#1 = RSub(_t3467,_t455F);
          real _t4571#1 = MathFn<pow>(_t456E,alphaFix242D);
          bool _t4573#1 = NEQ<real>(phKs2435,_t3465);
          if _t4573 then goto ASSIGN4578 else goto JOIN4947
        ASSIGN4578:  preds = [COND4575]
          tensor[3] op1_e3_l_1564576#3 = VAdd<3>(eyeDir242F,litwsp2425);
          real op1_e3_l_1584579#1 = VDot<3>(op1_e3_l_1564576,op1_e3_l_1564576);
          real op1_e3_l_159457C#1 = Sqrt(op1_e3_l_1584579);
          real r4589#1 = RAdd(r4051,r4068);
          real r458A#1 = RAdd(r4589,r407F);
          real r4591#1 = RAdd(r4053,r406A);
          real r4592#2 = RAdd(r4591,r4081);
          real r4599#1 = RAdd(r4055,r406C);
          real r459A#2 = RAdd(r4599,r4083);
          tensor[3] tensor459B#1 = <tensor[3]>[r458A,r4592,r459A];
          real r45AA#1 = RAdd(r405A,r4071);
          real r45AB#1 = RAdd(r45AA,r4088);
          real r45B2#1 = RAdd(r405C,r4073);
          real r45B3#2 = RAdd(r45B2,r408A);
          tensor[3] tensor45B4#1 = <tensor[3]>[r4592,r45AB,r45B3];
          real r45CB#1 = RAdd(r4063,r407A);
          real r45CC#1 = RAdd(r45CB,r4091);
          tensor[3] tensor45CD#1 = <tensor[3]>[r459A,r45B3,r45CC];
          real r4627#1 = RAdd(r40DD,r40E4);
          real r4628#1 = RAdd(r4627,r40EB);
          real r462E#1 = RAdd(r40DF,r40E6);
          real r462F#1 = RAdd(r462E,r40ED);
          real r4635#1 = RAdd(r40E1,r40E8);
          real r4636#1 = RAdd(r4635,r40EF);
          tensor[3] tensor4637#1 = <tensor[3]>[r4628,r462F,r4636];
          real r463B#1 = RAdd(r40F2,r40F6);
          real r463C#1 = RAdd(r463B,r40FA);
          real r4640#1 = RAdd(r40E4,r40F7);
          real r4641#1 = RAdd(r4640,r40FB);
          real r4645#1 = RAdd(r40F4,r40F8);
          real r4646#1 = RAdd(r4645,r40FC);
          tensor[3] tensor4647#1 = <tensor[3]>[r463C,r4641,r4646];
          real r464B#1 = RAdd(r40FF,r4103);
          real r464C#1 = RAdd(r464B,r4107);
          real r4650#1 = RAdd(r4100,r4104);
          real r4651#1 = RAdd(r4650,r4108);
          real r4655#1 = RAdd(r40EB,r40FB);
          real r4656#1 = RAdd(r4655,r4109);
          tensor[3] tensor4657#1 = <tensor[3]>[r464C,r4651,r4656];
          tensor[3] v4696#3 = VAdd<3>(tensor459B,tensor4637);
          tensor[3] v4699#3 = VAdd<3>(tensor45B4,tensor4647);
          tensor[3] v469C#3 = VAdd<3>(tensor45CD,tensor4657);
          real r46AA#3 = VIndex<3,0>(v4696);
          real r46AB#1 = RMul(vdot3AF3,r46AA);
          real r46AC#3 = VIndex<3,1>(v4696);
          real r46AD#1 = RMul(vdot3AF3,r46AC);
          real r46AE#3 = VIndex<3,2>(v4696);
          real r46AF#1 = RMul(vdot3AF3,r46AE);
          tensor[3] tensor46B0#1 = <tensor[3]>[r46AB,r46AD,r46AF];
          real r46B1#3 = VIndex<3,0>(v4699);
          real r46B2#1 = RMul(vdot3AF3,r46B1);
          real r46B3#3 = VIndex<3,1>(v4699);
          real r46B4#1 = RMul(vdot3AF3,r46B3);
          real r46B5#3 = VIndex<3,2>(v4699);
          real r46B6#1 = RMul(vdot3AF3,r46B5);
          tensor[3] tensor46B7#1 = <tensor[3]>[r46B2,r46B4,r46B6];
          real r46B8#3 = VIndex<3,0>(v469C);
          real r46B9#1 = RMul(vdot3AF3,r46B8);
          real r46BA#3 = VIndex<3,1>(v469C);
          real r46BB#1 = RMul(vdot3AF3,r46BA);
          real r46BC#3 = VIndex<3,2>(v469C);
          real r46BD#1 = RMul(vdot3AF3,r46BC);
          tensor[3] tensor46BE#1 = <tensor[3]>[r46B9,r46BB,r46BD];
          real r46C1#1 = RMul(vdot3AF5,r46AA);
          real r46C2#1 = RMul(vdot3AF5,r46AC);
          real r46C3#1 = RMul(vdot3AF5,r46AE);
          tensor[3] tensor46C4#1 = <tensor[3]>[r46C1,r46C2,r46C3];
          real r46C5#1 = RMul(vdot3AF5,r46B1);
          real r46C6#1 = RMul(vdot3AF5,r46B3);
          real r46C7#1 = RMul(vdot3AF5,r46B5);
          tensor[3] tensor46C8#1 = <tensor[3]>[r46C5,r46C6,r46C7];
          real r46C9#1 = RMul(vdot3AF5,r46B8);
          real r46CA#1 = RMul(vdot3AF5,r46BA);
          real r46CB#1 = RMul(vdot3AF5,r46BC);
          tensor[3] tensor46CC#1 = <tensor[3]>[r46C9,r46CA,r46CB];
          real r46CF#1 = RMul(vdot3AF7,r46AA);
          real r46D0#1 = RMul(vdot3AF7,r46AC);
          real r46D1#1 = RMul(vdot3AF7,r46AE);
          tensor[3] tensor46D2#1 = <tensor[3]>[r46CF,r46D0,r46D1];
          real r46D3#1 = RMul(vdot3AF7,r46B1);
          real r46D4#1 = RMul(vdot3AF7,r46B3);
          real r46D5#1 = RMul(vdot3AF7,r46B5);
          tensor[3] tensor46D6#1 = <tensor[3]>[r46D3,r46D4,r46D5];
          real r46D7#1 = RMul(vdot3AF7,r46B8);
          real r46D8#1 = RMul(vdot3AF7,r46BA);
          real r46D9#1 = RMul(vdot3AF7,r46BC);
          tensor[3] tensor46DA#1 = <tensor[3]>[r46D7,r46D8,r46D9];
          tensor[3] v4714#3 = VAdd<3>(tensor4215,tensor46B0);
          tensor[3] v4717#3 = VAdd<3>(tensor421C,tensor46C4);
          tensor[3] v471A#3 = VAdd<3>(tensor4223,tensor46D2);
          tensor[3] v471E#3 = VAdd<3>(tensor4229,tensor46B7);
          tensor[3] v4721#3 = VAdd<3>(tensor422D,tensor46C8);
          tensor[3] v4724#3 = VAdd<3>(tensor4231,tensor46D6);
          tensor[3] v4728#3 = VAdd<3>(tensor4237,tensor46BE);
          tensor[3] v472B#3 = VAdd<3>(tensor423B,tensor46CC);
          tensor[3] v472E#3 = VAdd<3>(tensor423F,tensor46DA);
          real r4751#3 = VIndex<3,0>(v4714);
          real r4753#1 = RMul(r4751,r3CFD);
          real r4754#3 = VIndex<3,0>(v471E);
          real r4756#1 = RMul(r4754,r3D07);
          real r4757#3 = VIndex<3,0>(v4728);
          real r4759#1 = RMul(r4757,r3D12);
          real r475A#3 = VIndex<3,0>(v4717);
          real r475C#1 = RMul(r475A,r3D1D);
          real r475D#3 = VIndex<3,0>(v4721);
          real r475F#1 = RMul(r475D,r3CFD);
          real r4760#3 = VIndex<3,0>(v472B);
          real r4762#1 = RMul(r4760,r3D25);
          real r4763#3 = VIndex<3,0>(v471A);
          real r4765#1 = RMul(r4763,r3D30);
          real r4766#3 = VIndex<3,0>(v4724);
          real r4768#1 = RMul(r4766,r3D3A);
          real r4769#3 = VIndex<3,0>(v472E);
          real r476B#1 = RMul(r4769,r3CFD);
          real r476C#1 = RAdd(r4753,r4756);
          real r476D#1 = RAdd(r476C,r4759);
          real r476E#1 = RAdd(r476D,r475C);
          real r476F#1 = RAdd(r476E,r475F);
          real r4770#1 = RAdd(r476F,r4762);
          real r4771#1 = RAdd(r4770,r4765);
          real r4772#1 = RAdd(r4771,r4768);
          real r4773#1 = RAdd(r4772,r476B);
          real r4775#1 = RMul(r4751,r3D00);
          real r4777#1 = RMul(r4754,r3D09);
          real r4779#1 = RMul(r4757,r3D16);
          real r477B#1 = RMul(r475A,r3D1F);
          real r477D#1 = RMul(r475D,r3D00);
          real r477F#1 = RMul(r4760,r3D28);
          real r4781#1 = RMul(r4763,r3D33);
          real r4783#1 = RMul(r4766,r3D3D);
          real r4785#1 = RMul(r4769,r3D00);
          real r4786#1 = RAdd(r4775,r4777);
          real r4787#1 = RAdd(r4786,r4779);
          real r4788#1 = RAdd(r4787,r477B);
          real r4789#1 = RAdd(r4788,r477D);
          real r478A#1 = RAdd(r4789,r477F);
          real r478B#1 = RAdd(r478A,r4781);
          real r478C#1 = RAdd(r478B,r4783);
          real r478D#1 = RAdd(r478C,r4785);
          real r478F#1 = RMul(r4751,r3D03);
          real r4791#1 = RMul(r4754,r3D0C);
          real r4793#1 = RMul(r4757,r3D19);
          real r4795#1 = RMul(r475A,r3D21);
          real r4797#1 = RMul(r475D,r3D03);
          real r4799#1 = RMul(r4760,r3D2B);
          real r479B#1 = RMul(r4763,r3D36);
          real r479D#1 = RMul(r4766,r3D40);
          real r479F#1 = RMul(r4769,r3D03);
          real r47A0#1 = RAdd(r478F,r4791);
          real r47A1#1 = RAdd(r47A0,r4793);
          real r47A2#1 = RAdd(r47A1,r4795);
          real r47A3#1 = RAdd(r47A2,r4797);
          real r47A4#1 = RAdd(r47A3,r4799);
          real r47A5#1 = RAdd(r47A4,r479B);
          real r47A6#1 = RAdd(r47A5,r479D);
          real r47A7#1 = RAdd(r47A6,r479F);
          tensor[3] tensor47A8#1 = <tensor[3]>[r4773,r478D,r47A7];
          real r47A9#3 = VIndex<3,1>(v4714);
          real r47AA#1 = RMul(r47A9,r3CFD);
          real r47AB#3 = VIndex<3,1>(v471E);
          real r47AC#1 = RMul(r47AB,r3D07);
          real r47AD#3 = VIndex<3,1>(v4728);
          real r47AE#1 = RMul(r47AD,r3D12);
          real r47AF#3 = VIndex<3,1>(v4717);
          real r47B0#1 = RMul(r47AF,r3D1D);
          real r47B1#3 = VIndex<3,1>(v4721);
          real r47B2#1 = RMul(r47B1,r3CFD);
          real r47B3#3 = VIndex<3,1>(v472B);
          real r47B4#1 = RMul(r47B3,r3D25);
          real r47B5#3 = VIndex<3,1>(v471A);
          real r47B6#1 = RMul(r47B5,r3D30);
          real r47B7#3 = VIndex<3,1>(v4724);
          real r47B8#1 = RMul(r47B7,r3D3A);
          real r47B9#3 = VIndex<3,1>(v472E);
          real r47BA#1 = RMul(r47B9,r3CFD);
          real r47BB#1 = RAdd(r47AA,r47AC);
          real r47BC#1 = RAdd(r47BB,r47AE);
          real r47BD#1 = RAdd(r47BC,r47B0);
          real r47BE#1 = RAdd(r47BD,r47B2);
          real r47BF#1 = RAdd(r47BE,r47B4);
          real r47C0#1 = RAdd(r47BF,r47B6);
          real r47C1#1 = RAdd(r47C0,r47B8);
          real r47C2#1 = RAdd(r47C1,r47BA);
          real r47C3#1 = RMul(r47A9,r3D00);
          real r47C4#1 = RMul(r47AB,r3D09);
          real r47C5#1 = RMul(r47AD,r3D16);
          real r47C6#1 = RMul(r47AF,r3D1F);
          real r47C7#1 = RMul(r47B1,r3D00);
          real r47C8#1 = RMul(r47B3,r3D28);
          real r47C9#1 = RMul(r47B5,r3D33);
          real r47CA#1 = RMul(r47B7,r3D3D);
          real r47CB#1 = RMul(r47B9,r3D00);
          real r47CC#1 = RAdd(r47C3,r47C4);
          real r47CD#1 = RAdd(r47CC,r47C5);
          real r47CE#1 = RAdd(r47CD,r47C6);
          real r47CF#1 = RAdd(r47CE,r47C7);
          real r47D0#1 = RAdd(r47CF,r47C8);
          real r47D1#1 = RAdd(r47D0,r47C9);
          real r47D2#1 = RAdd(r47D1,r47CA);
          real r47D3#1 = RAdd(r47D2,r47CB);
          real r47D4#1 = RMul(r47A9,r3D03);
          real r47D5#1 = RMul(r47AB,r3D0C);
          real r47D6#1 = RMul(r47AD,r3D19);
          real r47D7#1 = RMul(r47AF,r3D21);
          real r47D8#1 = RMul(r47B1,r3D03);
          real r47D9#1 = RMul(r47B3,r3D2B);
          real r47DA#1 = RMul(r47B5,r3D36);
          real r47DB#1 = RMul(r47B7,r3D40);
          real r47DC#1 = RMul(r47B9,r3D03);
          real r47DD#1 = RAdd(r47D4,r47D5);
          real r47DE#1 = RAdd(r47DD,r47D6);
          real r47DF#1 = RAdd(r47DE,r47D7);
          real r47E0#1 = RAdd(r47DF,r47D8);
          real r47E1#1 = RAdd(r47E0,r47D9);
          real r47E2#1 = RAdd(r47E1,r47DA);
          real r47E3#1 = RAdd(r47E2,r47DB);
          real r47E4#1 = RAdd(r47E3,r47DC);
          tensor[3] tensor47E5#1 = <tensor[3]>[r47C2,r47D3,r47E4];
          real r47E6#3 = VIndex<3,2>(v4714);
          real r47E7#1 = RMul(r47E6,r3CFD);
          real r47E8#3 = VIndex<3,2>(v471E);
          real r47E9#1 = RMul(r47E8,r3D07);
          real r47EA#3 = VIndex<3,2>(v4728);
          real r47EB#1 = RMul(r47EA,r3D12);
          real r47EC#3 = VIndex<3,2>(v4717);
          real r47ED#1 = RMul(r47EC,r3D1D);
          real r47EE#3 = VIndex<3,2>(v4721);
          real r47EF#1 = RMul(r47EE,r3CFD);
          real r47F0#3 = VIndex<3,2>(v472B);
          real r47F1#1 = RMul(r47F0,r3D25);
          real r47F2#3 = VIndex<3,2>(v471A);
          real r47F3#1 = RMul(r47F2,r3D30);
          real r47F4#3 = VIndex<3,2>(v4724);
          real r47F5#1 = RMul(r47F4,r3D3A);
          real r47F6#3 = VIndex<3,2>(v472E);
          real r47F7#1 = RMul(r47F6,r3CFD);
          real r47F8#1 = RAdd(r47E7,r47E9);
          real r47F9#1 = RAdd(r47F8,r47EB);
          real r47FA#1 = RAdd(r47F9,r47ED);
          real r47FB#1 = RAdd(r47FA,r47EF);
          real r47FC#1 = RAdd(r47FB,r47F1);
          real r47FD#1 = RAdd(r47FC,r47F3);
          real r47FE#1 = RAdd(r47FD,r47F5);
          real r47FF#1 = RAdd(r47FE,r47F7);
          real r4800#1 = RMul(r47E6,r3D00);
          real r4801#1 = RMul(r47E8,r3D09);
          real r4802#1 = RMul(r47EA,r3D16);
          real r4803#1 = RMul(r47EC,r3D1F);
          real r4804#1 = RMul(r47EE,r3D00);
          real r4805#1 = RMul(r47F0,r3D28);
          real r4806#1 = RMul(r47F2,r3D33);
          real r4807#1 = RMul(r47F4,r3D3D);
          real r4808#1 = RMul(r47F6,r3D00);
          real r4809#1 = RAdd(r4800,r4801);
          real r480A#1 = RAdd(r4809,r4802);
          real r480B#1 = RAdd(r480A,r4803);
          real r480C#1 = RAdd(r480B,r4804);
          real r480D#1 = RAdd(r480C,r4805);
          real r480E#1 = RAdd(r480D,r4806);
          real r480F#1 = RAdd(r480E,r4807);
          real r4810#1 = RAdd(r480F,r4808);
          real r4811#1 = RMul(r47E6,r3D03);
          real r4812#1 = RMul(r47E8,r3D0C);
          real r4813#1 = RMul(r47EA,r3D19);
          real r4814#1 = RMul(r47EC,r3D21);
          real r4815#1 = RMul(r47EE,r3D03);
          real r4816#1 = RMul(r47F0,r3D2B);
          real r4817#1 = RMul(r47F2,r3D36);
          real r4818#1 = RMul(r47F4,r3D40);
          real r4819#1 = RMul(r47F6,r3D03);
          real r481A#1 = RAdd(r4811,r4812);
          real r481B#1 = RAdd(r481A,r4813);
          real r481C#1 = RAdd(r481B,r4814);
          real r481D#1 = RAdd(r481C,r4815);
          real r481E#1 = RAdd(r481D,r4816);
          real r481F#1 = RAdd(r481E,r4817);
          real r4820#1 = RAdd(r481F,r4818);
          real r4821#1 = RAdd(r4820,r4819);
          tensor[3] tensor4822#1 = <tensor[3]>[r47FF,r4810,r4821];
          real vdot48F9#1 = VDot<3>(op1_e3_l_943E30,tensor47A8);
          real vdot48FB#1 = VDot<3>(op1_e3_l_943E30,tensor47E5);
          real vdot48FD#1 = VDot<3>(op1_e3_l_943E30,tensor4822);
          tensor[3] op1_e3_l_22248F7#2 = <tensor[3]>[vdot48F9,vdot48FB,vdot48FD];
          tensor[3] op1_e3_l_2254906#3 = VAdd<3>(op1_e3_l_22248F7,op1_e3_l_22248F7);
          tensor[3] op1_e3_l_3284909#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_2254906);
          real op1_e3_l_329490C#1 = VDot<3>(op1_e3_l_2254906,op1_e3_l_2254906);
          real r4911#3 = RDiv(_t3467,op1_e3_l_329490C);
          real r4912#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_3284909);
          real r4913#1 = RMul(r4911,r4912);
          real r4914#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_3284909);
          real r4915#1 = RMul(r4911,r4914);
          real r4916#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_3284909);
          real r4917#1 = RMul(r4911,r4916);
          tensor[3] op1_e3_l_330490F#1 = <tensor[3]>[r4913,r4915,r4917];
          tensor[3] op1_e3_l_6734922#3 = VNeg<3>(op1_e3_l_330490F);
          real op1_e3_l_6754925#1 = VDot<3>(op1_e3_l_6734922,op1_e3_l_6734922);
          real op1_e3_l_6764928#1 = Sqrt(op1_e3_l_6754925);
          real op1_e3_l_678492B#1 = RDiv(_t3467,op1_e3_l_6764928);
          tensor[3] op1_e3_l_6794930#1 = VScale<3>(op1_e3_l_678492B,op1_e3_l_6734922);
          tensor[3] op1_e3_l_6804933#1 = VNeg<3>(op1_e3_l_6794930);
          real op1_e3_l_6824936#1 = RDiv(_t3467,op1_e3_l_159457C);
          real op1_e3_l_683493B#1 = VDot<3>(op1_e3_l_6804933,op1_e3_l_1564576);
          real op1_e3_l_684493E#1 = RMul(op1_e3_l_6824936,op1_e3_l_683493B);
          real _t4941#1 = Abs<real>(op1_e3_l_684493E);
          real scomp4944#1 = MathFn<pow>(_t4941,phSp2437);
          goto JOIN4947
        JOIN4947:  preds = [ASSIGN4945,COND4575]
          real scomp4946#1 = phi(scomp4944,_t3465)
          real cmin4948#3 = VIndex<2,0>(cminmax241F);
          real cmax494A#2 = VIndex<2,1>(cminmax241F);
          tensor[3] mcol494C#1 = <tensor[3]>[_t3467,_t3467,_t3467];
          bool _t494E#1 = NEQ<real>(cmin4948,cmax494A);
          if _t494E then goto ASSIGN5D84 else goto JOIN4F36
        ASSIGN5D84:  preds = [COND4950]
          real r495B#1 = RAdd(r4051,r4068);
          real r495C#1 = RAdd(r495B,r407F);
          real r4963#1 = RAdd(r4053,r406A);
          real r4964#2 = RAdd(r4963,r4081);
          real r496B#1 = RAdd(r4055,r406C);
          real r496C#2 = RAdd(r496B,r4083);
          tensor[3] tensor496D#1 = <tensor[3]>[r495C,r4964,r496C];
          real r497C#1 = RAdd(r405A,r4071);
          real r497D#1 = RAdd(r497C,r4088);
          real r4984#1 = RAdd(r405C,r4073);
          real r4985#2 = RAdd(r4984,r408A);
          tensor[3] tensor4986#1 = <tensor[3]>[r4964,r497D,r4985];
          real r499D#1 = RAdd(r4063,r407A);
          real r499E#1 = RAdd(r499D,r4091);
          tensor[3] tensor499F#1 = <tensor[3]>[r496C,r4985,r499E];
          real r49F9#1 = RAdd(r40DD,r40E4);
          real r49FA#1 = RAdd(r49F9,r40EB);
          real r4A00#1 = RAdd(r40DF,r40E6);
          real r4A01#1 = RAdd(r4A00,r40ED);
          real r4A07#1 = RAdd(r40E1,r40E8);
          real r4A08#1 = RAdd(r4A07,r40EF);
          tensor[3] tensor4A09#1 = <tensor[3]>[r49FA,r4A01,r4A08];
          real r4A0D#1 = RAdd(r40F2,r40F6);
          real r4A0E#1 = RAdd(r4A0D,r40FA);
          real r4A12#1 = RAdd(r40E4,r40F7);
          real r4A13#1 = RAdd(r4A12,r40FB);
          real r4A17#1 = RAdd(r40F4,r40F8);
          real r4A18#1 = RAdd(r4A17,r40FC);
          tensor[3] tensor4A19#1 = <tensor[3]>[r4A0E,r4A13,r4A18];
          real r4A1D#1 = RAdd(r40FF,r4103);
          real r4A1E#1 = RAdd(r4A1D,r4107);
          real r4A22#1 = RAdd(r4100,r4104);
          real r4A23#1 = RAdd(r4A22,r4108);
          real r4A27#1 = RAdd(r40EB,r40FB);
          real r4A28#1 = RAdd(r4A27,r4109);
          tensor[3] tensor4A29#1 = <tensor[3]>[r4A1E,r4A23,r4A28];
          tensor[3] v4A68#3 = VAdd<3>(tensor496D,tensor4A09);
          tensor[3] v4A6B#3 = VAdd<3>(tensor4986,tensor4A19);
          tensor[3] v4A6E#3 = VAdd<3>(tensor499F,tensor4A29);
          real r4A7C#3 = VIndex<3,0>(v4A68);
          real r4A7D#1 = RMul(vdot3AF3,r4A7C);
          real r4A7E#3 = VIndex<3,1>(v4A68);
          real r4A7F#1 = RMul(vdot3AF3,r4A7E);
          real r4A80#3 = VIndex<3,2>(v4A68);
          real r4A81#1 = RMul(vdot3AF3,r4A80);
          tensor[3] tensor4A82#1 = <tensor[3]>[r4A7D,r4A7F,r4A81];
          real r4A83#3 = VIndex<3,0>(v4A6B);
          real r4A84#1 = RMul(vdot3AF3,r4A83);
          real r4A85#3 = VIndex<3,1>(v4A6B);
          real r4A86#1 = RMul(vdot3AF3,r4A85);
          real r4A87#3 = VIndex<3,2>(v4A6B);
          real r4A88#1 = RMul(vdot3AF3,r4A87);
          tensor[3] tensor4A89#1 = <tensor[3]>[r4A84,r4A86,r4A88];
          real r4A8A#3 = VIndex<3,0>(v4A6E);
          real r4A8B#1 = RMul(vdot3AF3,r4A8A);
          real r4A8C#3 = VIndex<3,1>(v4A6E);
          real r4A8D#1 = RMul(vdot3AF3,r4A8C);
          real r4A8E#3 = VIndex<3,2>(v4A6E);
          real r4A8F#1 = RMul(vdot3AF3,r4A8E);
          tensor[3] tensor4A90#1 = <tensor[3]>[r4A8B,r4A8D,r4A8F];
          real r4A93#1 = RMul(vdot3AF5,r4A7C);
          real r4A94#1 = RMul(vdot3AF5,r4A7E);
          real r4A95#1 = RMul(vdot3AF5,r4A80);
          tensor[3] tensor4A96#1 = <tensor[3]>[r4A93,r4A94,r4A95];
          real r4A97#1 = RMul(vdot3AF5,r4A83);
          real r4A98#1 = RMul(vdot3AF5,r4A85);
          real r4A99#1 = RMul(vdot3AF5,r4A87);
          tensor[3] tensor4A9A#1 = <tensor[3]>[r4A97,r4A98,r4A99];
          real r4A9B#1 = RMul(vdot3AF5,r4A8A);
          real r4A9C#1 = RMul(vdot3AF5,r4A8C);
          real r4A9D#1 = RMul(vdot3AF5,r4A8E);
          tensor[3] tensor4A9E#1 = <tensor[3]>[r4A9B,r4A9C,r4A9D];
          real r4AA1#1 = RMul(vdot3AF7,r4A7C);
          real r4AA2#1 = RMul(vdot3AF7,r4A7E);
          real r4AA3#1 = RMul(vdot3AF7,r4A80);
          tensor[3] tensor4AA4#1 = <tensor[3]>[r4AA1,r4AA2,r4AA3];
          real r4AA5#1 = RMul(vdot3AF7,r4A83);
          real r4AA6#1 = RMul(vdot3AF7,r4A85);
          real r4AA7#1 = RMul(vdot3AF7,r4A87);
          tensor[3] tensor4AA8#1 = <tensor[3]>[r4AA5,r4AA6,r4AA7];
          real r4AA9#1 = RMul(vdot3AF7,r4A8A);
          real r4AAA#1 = RMul(vdot3AF7,r4A8C);
          real r4AAB#1 = RMul(vdot3AF7,r4A8E);
          tensor[3] tensor4AAC#1 = <tensor[3]>[r4AA9,r4AAA,r4AAB];
          tensor[3] v4AE6#3 = VAdd<3>(tensor4215,tensor4A82);
          tensor[3] v4AE9#3 = VAdd<3>(tensor421C,tensor4A96);
          tensor[3] v4AEC#3 = VAdd<3>(tensor4223,tensor4AA4);
          tensor[3] v4AF0#3 = VAdd<3>(tensor4229,tensor4A89);
          tensor[3] v4AF3#3 = VAdd<3>(tensor422D,tensor4A9A);
          tensor[3] v4AF6#3 = VAdd<3>(tensor4231,tensor4AA8);
          tensor[3] v4AFA#3 = VAdd<3>(tensor4237,tensor4A90);
          tensor[3] v4AFD#3 = VAdd<3>(tensor423B,tensor4A9E);
          tensor[3] v4B00#3 = VAdd<3>(tensor423F,tensor4AAC);
          real r4B23#3 = VIndex<3,0>(v4AE6);
          real r4B25#1 = RMul(r4B23,r3CFD);
          real r4B26#3 = VIndex<3,0>(v4AF0);
          real r4B28#1 = RMul(r4B26,r3D07);
          real r4B29#3 = VIndex<3,0>(v4AFA);
          real r4B2B#1 = RMul(r4B29,r3D12);
          real r4B2C#3 = VIndex<3,0>(v4AE9);
          real r4B2E#1 = RMul(r4B2C,r3D1D);
          real r4B2F#3 = VIndex<3,0>(v4AF3);
          real r4B31#1 = RMul(r4B2F,r3CFD);
          real r4B32#3 = VIndex<3,0>(v4AFD);
          real r4B34#1 = RMul(r4B32,r3D25);
          real r4B35#3 = VIndex<3,0>(v4AEC);
          real r4B37#1 = RMul(r4B35,r3D30);
          real r4B38#3 = VIndex<3,0>(v4AF6);
          real r4B3A#1 = RMul(r4B38,r3D3A);
          real r4B3B#3 = VIndex<3,0>(v4B00);
          real r4B3D#1 = RMul(r4B3B,r3CFD);
          real r4B3E#1 = RAdd(r4B25,r4B28);
          real r4B3F#1 = RAdd(r4B3E,r4B2B);
          real r4B40#1 = RAdd(r4B3F,r4B2E);
          real r4B41#1 = RAdd(r4B40,r4B31);
          real r4B42#1 = RAdd(r4B41,r4B34);
          real r4B43#1 = RAdd(r4B42,r4B37);
          real r4B44#1 = RAdd(r4B43,r4B3A);
          real r4B45#1 = RAdd(r4B44,r4B3D);
          real r4B47#1 = RMul(r4B23,r3D00);
          real r4B49#1 = RMul(r4B26,r3D09);
          real r4B4B#1 = RMul(r4B29,r3D16);
          real r4B4D#1 = RMul(r4B2C,r3D1F);
          real r4B4F#1 = RMul(r4B2F,r3D00);
          real r4B51#1 = RMul(r4B32,r3D28);
          real r4B53#1 = RMul(r4B35,r3D33);
          real r4B55#1 = RMul(r4B38,r3D3D);
          real r4B57#1 = RMul(r4B3B,r3D00);
          real r4B58#1 = RAdd(r4B47,r4B49);
          real r4B59#1 = RAdd(r4B58,r4B4B);
          real r4B5A#1 = RAdd(r4B59,r4B4D);
          real r4B5B#1 = RAdd(r4B5A,r4B4F);
          real r4B5C#1 = RAdd(r4B5B,r4B51);
          real r4B5D#1 = RAdd(r4B5C,r4B53);
          real r4B5E#1 = RAdd(r4B5D,r4B55);
          real r4B5F#1 = RAdd(r4B5E,r4B57);
          real r4B61#1 = RMul(r4B23,r3D03);
          real r4B63#1 = RMul(r4B26,r3D0C);
          real r4B65#1 = RMul(r4B29,r3D19);
          real r4B67#1 = RMul(r4B2C,r3D21);
          real r4B69#1 = RMul(r4B2F,r3D03);
          real r4B6B#1 = RMul(r4B32,r3D2B);
          real r4B6D#1 = RMul(r4B35,r3D36);
          real r4B6F#1 = RMul(r4B38,r3D40);
          real r4B71#1 = RMul(r4B3B,r3D03);
          real r4B72#1 = RAdd(r4B61,r4B63);
          real r4B73#1 = RAdd(r4B72,r4B65);
          real r4B74#1 = RAdd(r4B73,r4B67);
          real r4B75#1 = RAdd(r4B74,r4B69);
          real r4B76#1 = RAdd(r4B75,r4B6B);
          real r4B77#1 = RAdd(r4B76,r4B6D);
          real r4B78#1 = RAdd(r4B77,r4B6F);
          real r4B79#1 = RAdd(r4B78,r4B71);
          tensor[3] tensor4B7A#1 = <tensor[3]>[r4B45,r4B5F,r4B79];
          real r4B7B#3 = VIndex<3,1>(v4AE6);
          real r4B7C#1 = RMul(r4B7B,r3CFD);
          real r4B7D#3 = VIndex<3,1>(v4AF0);
          real r4B7E#1 = RMul(r4B7D,r3D07);
          real r4B7F#3 = VIndex<3,1>(v4AFA);
          real r4B80#1 = RMul(r4B7F,r3D12);
          real r4B81#3 = VIndex<3,1>(v4AE9);
          real r4B82#1 = RMul(r4B81,r3D1D);
          real r4B83#3 = VIndex<3,1>(v4AF3);
          real r4B84#1 = RMul(r4B83,r3CFD);
          real r4B85#3 = VIndex<3,1>(v4AFD);
          real r4B86#1 = RMul(r4B85,r3D25);
          real r4B87#3 = VIndex<3,1>(v4AEC);
          real r4B88#1 = RMul(r4B87,r3D30);
          real r4B89#3 = VIndex<3,1>(v4AF6);
          real r4B8A#1 = RMul(r4B89,r3D3A);
          real r4B8B#3 = VIndex<3,1>(v4B00);
          real r4B8C#1 = RMul(r4B8B,r3CFD);
          real r4B8D#1 = RAdd(r4B7C,r4B7E);
          real r4B8E#1 = RAdd(r4B8D,r4B80);
          real r4B8F#1 = RAdd(r4B8E,r4B82);
          real r4B90#1 = RAdd(r4B8F,r4B84);
          real r4B91#1 = RAdd(r4B90,r4B86);
          real r4B92#1 = RAdd(r4B91,r4B88);
          real r4B93#1 = RAdd(r4B92,r4B8A);
          real r4B94#1 = RAdd(r4B93,r4B8C);
          real r4B95#1 = RMul(r4B7B,r3D00);
          real r4B96#1 = RMul(r4B7D,r3D09);
          real r4B97#1 = RMul(r4B7F,r3D16);
          real r4B98#1 = RMul(r4B81,r3D1F);
          real r4B99#1 = RMul(r4B83,r3D00);
          real r4B9A#1 = RMul(r4B85,r3D28);
          real r4B9B#1 = RMul(r4B87,r3D33);
          real r4B9C#1 = RMul(r4B89,r3D3D);
          real r4B9D#1 = RMul(r4B8B,r3D00);
          real r4B9E#1 = RAdd(r4B95,r4B96);
          real r4B9F#1 = RAdd(r4B9E,r4B97);
          real r4BA0#1 = RAdd(r4B9F,r4B98);
          real r4BA1#1 = RAdd(r4BA0,r4B99);
          real r4BA2#1 = RAdd(r4BA1,r4B9A);
          real r4BA3#1 = RAdd(r4BA2,r4B9B);
          real r4BA4#1 = RAdd(r4BA3,r4B9C);
          real r4BA5#1 = RAdd(r4BA4,r4B9D);
          real r4BA6#1 = RMul(r4B7B,r3D03);
          real r4BA7#1 = RMul(r4B7D,r3D0C);
          real r4BA8#1 = RMul(r4B7F,r3D19);
          real r4BA9#1 = RMul(r4B81,r3D21);
          real r4BAA#1 = RMul(r4B83,r3D03);
          real r4BAB#1 = RMul(r4B85,r3D2B);
          real r4BAC#1 = RMul(r4B87,r3D36);
          real r4BAD#1 = RMul(r4B89,r3D40);
          real r4BAE#1 = RMul(r4B8B,r3D03);
          real r4BAF#1 = RAdd(r4BA6,r4BA7);
          real r4BB0#1 = RAdd(r4BAF,r4BA8);
          real r4BB1#1 = RAdd(r4BB0,r4BA9);
          real r4BB2#1 = RAdd(r4BB1,r4BAA);
          real r4BB3#1 = RAdd(r4BB2,r4BAB);
          real r4BB4#1 = RAdd(r4BB3,r4BAC);
          real r4BB5#1 = RAdd(r4BB4,r4BAD);
          real r4BB6#1 = RAdd(r4BB5,r4BAE);
          tensor[3] tensor4BB7#1 = <tensor[3]>[r4B94,r4BA5,r4BB6];
          real r4BB8#3 = VIndex<3,2>(v4AE6);
          real r4BB9#1 = RMul(r4BB8,r3CFD);
          real r4BBA#3 = VIndex<3,2>(v4AF0);
          real r4BBB#1 = RMul(r4BBA,r3D07);
          real r4BBC#3 = VIndex<3,2>(v4AFA);
          real r4BBD#1 = RMul(r4BBC,r3D12);
          real r4BBE#3 = VIndex<3,2>(v4AE9);
          real r4BBF#1 = RMul(r4BBE,r3D1D);
          real r4BC0#3 = VIndex<3,2>(v4AF3);
          real r4BC1#1 = RMul(r4BC0,r3CFD);
          real r4BC2#3 = VIndex<3,2>(v4AFD);
          real r4BC3#1 = RMul(r4BC2,r3D25);
          real r4BC4#3 = VIndex<3,2>(v4AEC);
          real r4BC5#1 = RMul(r4BC4,r3D30);
          real r4BC6#3 = VIndex<3,2>(v4AF6);
          real r4BC7#1 = RMul(r4BC6,r3D3A);
          real r4BC8#3 = VIndex<3,2>(v4B00);
          real r4BC9#1 = RMul(r4BC8,r3CFD);
          real r4BCA#1 = RAdd(r4BB9,r4BBB);
          real r4BCB#1 = RAdd(r4BCA,r4BBD);
          real r4BCC#1 = RAdd(r4BCB,r4BBF);
          real r4BCD#1 = RAdd(r4BCC,r4BC1);
          real r4BCE#1 = RAdd(r4BCD,r4BC3);
          real r4BCF#1 = RAdd(r4BCE,r4BC5);
          real r4BD0#1 = RAdd(r4BCF,r4BC7);
          real r4BD1#1 = RAdd(r4BD0,r4BC9);
          real r4BD2#1 = RMul(r4BB8,r3D00);
          real r4BD3#1 = RMul(r4BBA,r3D09);
          real r4BD4#1 = RMul(r4BBC,r3D16);
          real r4BD5#1 = RMul(r4BBE,r3D1F);
          real r4BD6#1 = RMul(r4BC0,r3D00);
          real r4BD7#1 = RMul(r4BC2,r3D28);
          real r4BD8#1 = RMul(r4BC4,r3D33);
          real r4BD9#1 = RMul(r4BC6,r3D3D);
          real r4BDA#1 = RMul(r4BC8,r3D00);
          real r4BDB#1 = RAdd(r4BD2,r4BD3);
          real r4BDC#1 = RAdd(r4BDB,r4BD4);
          real r4BDD#1 = RAdd(r4BDC,r4BD5);
          real r4BDE#1 = RAdd(r4BDD,r4BD6);
          real r4BDF#1 = RAdd(r4BDE,r4BD7);
          real r4BE0#1 = RAdd(r4BDF,r4BD8);
          real r4BE1#1 = RAdd(r4BE0,r4BD9);
          real r4BE2#1 = RAdd(r4BE1,r4BDA);
          real r4BE3#1 = RMul(r4BB8,r3D03);
          real r4BE4#1 = RMul(r4BBA,r3D0C);
          real r4BE5#1 = RMul(r4BBC,r3D19);
          real r4BE6#1 = RMul(r4BBE,r3D21);
          real r4BE7#1 = RMul(r4BC0,r3D03);
          real r4BE8#1 = RMul(r4BC2,r3D2B);
          real r4BE9#1 = RMul(r4BC4,r3D36);
          real r4BEA#1 = RMul(r4BC6,r3D40);
          real r4BEB#1 = RMul(r4BC8,r3D03);
          real r4BEC#1 = RAdd(r4BE3,r4BE4);
          real r4BED#1 = RAdd(r4BEC,r4BE5);
          real r4BEE#1 = RAdd(r4BED,r4BE6);
          real r4BEF#1 = RAdd(r4BEE,r4BE7);
          real r4BF0#1 = RAdd(r4BEF,r4BE8);
          real r4BF1#1 = RAdd(r4BF0,r4BE9);
          real r4BF2#1 = RAdd(r4BF1,r4BEA);
          real r4BF3#1 = RAdd(r4BF2,r4BEB);
          tensor[3] tensor4BF4#1 = <tensor[3]>[r4BD1,r4BE2,r4BF3];
          real vdot4CCB#1 = VDot<3>(op1_e3_l_943E30,tensor4B7A);
          real vdot4CCD#1 = VDot<3>(op1_e3_l_943E30,tensor4BB7);
          real vdot4CCF#1 = VDot<3>(op1_e3_l_943E30,tensor4BF4);
          tensor[3] op1_e3_l_1434CC9#2 = <tensor[3]>[vdot4CCB,vdot4CCD,vdot4CCF];
          tensor[3] op1_e3_l_1464CD8#3 = VAdd<3>(op1_e3_l_1434CC9,op1_e3_l_1434CC9);
          tensor[3] op1_e3_l_2494CDB#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_1464CD8);
          real op1_e3_l_2504CDE#1 = VDot<3>(op1_e3_l_1464CD8,op1_e3_l_1464CD8);
          real r4CE3#3 = RDiv(_t3467,op1_e3_l_2504CDE);
          real r4CE4#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_2494CDB);
          real r4CE5#1 = RMul(r4CE3,r4CE4);
          real r4CE6#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_2494CDB);
          real r4CE7#1 = RMul(r4CE3,r4CE6);
          real r4CE8#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_2494CDB);
          real r4CE9#1 = RMul(r4CE3,r4CE8);
          tensor[3] op1_e3_l_2514CE1#1 = <tensor[3]>[r4CE5,r4CE7,r4CE9];
          tensor[3] op1_e3_l_2534CF4#1 = VNeg<3>(op1_e3_l_2514CE1);
          tensor[3] _t4CF7#3 = VAdd<3>(pos2449,op1_e3_l_2534CF4);
          real varAcc4CFD#27 = VIndex<3,0>(_t4CF7);
          real varAcc4CFE#12 = VIndex<3,1>(_t4CF7);
          real varAcc4CFF#12 = VIndex<3,2>(_t4CF7);
          real prod4D05#6 = RMul(_t3467,varAcc4CFF);
          real prod4D06#1 = RMul(_t3467,prod4D05);
          real basisEval4D07#1 = RMul(_t3467,prod4D06);
          real prod4D09#6 = RMul(varAcc4CFE,_t3467);
          real prod4D0A#1 = RMul(_t3467,prod4D09);
          real basisEval4D0B#1 = RMul(_t3467,prod4D0A);
          real prod4D0D#1 = RMul(varAcc4CFD,prod3915);
          real basisEval4D0E#1 = RMul(_t3467,prod4D0D);
          real prod24D0F#6 = RMul(varAcc4CFF,varAcc4CFF);
          real prod4D10#5 = RMul(_t3467,prod24D0F);
          real prod4D11#1 = RMul(_t3467,prod4D10);
          real basisEval4D12#1 = RMul(_t3467,prod4D11);
          real prod4D13#5 = RMul(varAcc4CFE,varAcc4CFF);
          real prod4D14#1 = RMul(_t3467,prod4D13);
          real basisEval4D15#1 = RMul(_t3467,prod4D14);
          real prod24D16#6 = RMul(varAcc4CFE,varAcc4CFE);
          real prod4D17#5 = RMul(prod24D16,_t3467);
          real prod4D18#1 = RMul(_t3467,prod4D17);
          real basisEval4D19#1 = RMul(_t3467,prod4D18);
          real prod4D1A#1 = RMul(varAcc4CFD,prod4D05);
          real basisEval4D1B#1 = RMul(_t3467,prod4D1A);
          real prod4D1C#1 = RMul(varAcc4CFD,prod4D09);
          real basisEval4D1D#1 = RMul(_t3467,prod4D1C);
          real prod24D1E#16 = RMul(varAcc4CFD,varAcc4CFD);
          real prod4D1F#1 = RMul(prod24D1E,prod3915);
          real basisEval4D20#1 = RMul(_t3467,prod4D1F);
          real prod34D21#5 = RMul(prod24D0F,varAcc4CFF);
          real prod4D22#4 = RMul(_t3467,prod34D21);
          real prod4D23#1 = RMul(_t3467,prod4D22);
          real basisEval4D24#1 = RMul(_t3467,prod4D23);
          real prod4D25#4 = RMul(varAcc4CFE,prod24D0F);
          real prod4D26#1 = RMul(_t3467,prod4D25);
          real basisEval4D27#1 = RMul(_t3467,prod4D26);
          real prod4D28#4 = RMul(prod24D16,varAcc4CFF);
          real prod4D29#1 = RMul(_t3467,prod4D28);
          real basisEval4D2A#1 = RMul(_t3467,prod4D29);
          real prod34D2B#5 = RMul(prod24D16,varAcc4CFE);
          real prod4D2C#4 = RMul(prod34D2B,_t3467);
          real prod4D2D#1 = RMul(_t3467,prod4D2C);
          real basisEval4D2E#1 = RMul(_t3467,prod4D2D);
          real prod4D2F#1 = RMul(varAcc4CFD,prod4D10);
          real basisEval4D30#1 = RMul(_t3467,prod4D2F);
          real prod4D31#1 = RMul(varAcc4CFD,prod4D13);
          real basisEval4D32#1 = RMul(_t3467,prod4D31);
          real prod4D33#1 = RMul(varAcc4CFD,prod4D17);
          real basisEval4D34#1 = RMul(_t3467,prod4D33);
          real prod4D35#1 = RMul(prod24D1E,prod4D05);
          real basisEval4D36#1 = RMul(_t3467,prod4D35);
          real prod4D37#1 = RMul(prod24D1E,prod4D09);
          real basisEval4D38#1 = RMul(_t3467,prod4D37);
          real prod34D39#11 = RMul(prod24D1E,varAcc4CFD);
          real prod4D3A#1 = RMul(prod34D39,prod3915);
          real basisEval4D3B#1 = RMul(_t3467,prod4D3A);
          real prod44D3C#4 = RMul(prod34D21,varAcc4CFF);
          real prod4D3D#3 = RMul(_t3467,prod44D3C);
          real prod4D3E#1 = RMul(_t3467,prod4D3D);
          real basisEval4D3F#1 = RMul(_t3467,prod4D3E);
          real prod4D40#3 = RMul(varAcc4CFE,prod34D21);
          real prod4D41#1 = RMul(_t3467,prod4D40);
          real basisEval4D42#1 = RMul(_t3467,prod4D41);
          real prod4D43#3 = RMul(prod24D16,prod24D0F);
          real prod4D44#1 = RMul(_t3467,prod4D43);
          real basisEval4D45#1 = RMul(_t3467,prod4D44);
          real prod4D46#3 = RMul(prod34D2B,varAcc4CFF);
          real prod4D47#1 = RMul(_t3467,prod4D46);
          real basisEval4D48#1 = RMul(_t3467,prod4D47);
          real prod44D49#4 = RMul(prod34D2B,varAcc4CFE);
          real prod4D4A#3 = RMul(prod44D49,_t3467);
          real prod4D4B#1 = RMul(_t3467,prod4D4A);
          real basisEval4D4C#1 = RMul(_t3467,prod4D4B);
          real prod4D4D#1 = RMul(varAcc4CFD,prod4D22);
          real basisEval4D4E#1 = RMul(_t3467,prod4D4D);
          real prod4D4F#1 = RMul(varAcc4CFD,prod4D25);
          real basisEval4D50#1 = RMul(_t3467,prod4D4F);
          real prod4D51#1 = RMul(varAcc4CFD,prod4D28);
          real basisEval4D52#1 = RMul(_t3467,prod4D51);
          real prod4D53#1 = RMul(varAcc4CFD,prod4D2C);
          real basisEval4D54#1 = RMul(_t3467,prod4D53);
          real prod4D55#1 = RMul(prod24D1E,prod4D10);
          real basisEval4D56#1 = RMul(_t3467,prod4D55);
          real prod4D57#1 = RMul(prod24D1E,prod4D13);
          real basisEval4D58#1 = RMul(_t3467,prod4D57);
          real prod4D59#1 = RMul(prod24D1E,prod4D17);
          real basisEval4D5A#1 = RMul(_t3467,prod4D59);
          real prod4D5B#1 = RMul(prod34D39,prod4D05);
          real basisEval4D5C#1 = RMul(_t3467,prod4D5B);
          real prod4D5D#1 = RMul(prod34D39,prod4D09);
          real basisEval4D5E#1 = RMul(_t3467,prod4D5D);
          real prod44D5F#7 = RMul(prod34D39,varAcc4CFD);
          real prod4D60#1 = RMul(prod44D5F,prod3915);
          real basisEval4D61#1 = RMul(_t3467,prod4D60);
          real prod54D62#3 = RMul(prod44D3C,varAcc4CFF);
          real prod4D63#2 = RMul(_t3467,prod54D62);
          real prod4D64#1 = RMul(_t3467,prod4D63);
          real basisEval4D65#1 = RMul(_t3467,prod4D64);
          real prod4D66#2 = RMul(varAcc4CFE,prod44D3C);
          real prod4D67#1 = RMul(_t3467,prod4D66);
          real basisEval4D68#1 = RMul(_t3467,prod4D67);
          real prod4D69#2 = RMul(prod24D16,prod34D21);
          real prod4D6A#1 = RMul(_t3467,prod4D69);
          real basisEval4D6B#1 = RMul(_t3467,prod4D6A);
          real prod4D6C#2 = RMul(prod34D2B,prod24D0F);
          real prod4D6D#1 = RMul(_t3467,prod4D6C);
          real basisEval4D6E#1 = RMul(_t3467,prod4D6D);
          real prod4D6F#2 = RMul(prod44D49,varAcc4CFF);
          real prod4D70#1 = RMul(_t3467,prod4D6F);
          real basisEval4D71#1 = RMul(_t3467,prod4D70);
          real prod54D72#3 = RMul(prod44D49,varAcc4CFE);
          real prod4D73#2 = RMul(prod54D72,_t3467);
          real prod4D74#1 = RMul(_t3467,prod4D73);
          real basisEval4D75#1 = RMul(_t3467,prod4D74);
          real prod4D76#1 = RMul(varAcc4CFD,prod4D3D);
          real basisEval4D77#1 = RMul(_t3467,prod4D76);
          real prod4D78#1 = RMul(varAcc4CFD,prod4D40);
          real basisEval4D79#1 = RMul(_t3467,prod4D78);
          real prod4D7A#1 = RMul(varAcc4CFD,prod4D43);
          real basisEval4D7B#1 = RMul(_t3467,prod4D7A);
          real prod4D7C#1 = RMul(varAcc4CFD,prod4D46);
          real basisEval4D7D#1 = RMul(_t3467,prod4D7C);
          real prod4D7E#1 = RMul(varAcc4CFD,prod4D4A);
          real basisEval4D7F#1 = RMul(_t3467,prod4D7E);
          real prod4D80#1 = RMul(prod24D1E,prod4D22);
          real basisEval4D81#1 = RMul(_t3467,prod4D80);
          real prod4D82#1 = RMul(prod24D1E,prod4D25);
          real basisEval4D83#1 = RMul(_t3467,prod4D82);
          real prod4D84#1 = RMul(prod24D1E,prod4D28);
          real basisEval4D85#1 = RMul(_t3467,prod4D84);
          real prod4D86#1 = RMul(prod24D1E,prod4D2C);
          real basisEval4D87#1 = RMul(_t3467,prod4D86);
          real prod4D88#1 = RMul(prod34D39,prod4D10);
          real basisEval4D89#1 = RMul(_t3467,prod4D88);
          real prod4D8A#1 = RMul(prod34D39,prod4D13);
          real basisEval4D8B#1 = RMul(_t3467,prod4D8A);
          real prod4D8C#1 = RMul(prod34D39,prod4D17);
          real basisEval4D8D#1 = RMul(_t3467,prod4D8C);
          real prod4D8E#1 = RMul(prod44D5F,prod4D05);
          real basisEval4D8F#1 = RMul(_t3467,prod4D8E);
          real prod4D90#1 = RMul(prod44D5F,prod4D09);
          real basisEval4D91#1 = RMul(_t3467,prod4D90);
          real prod54D92#4 = RMul(prod44D5F,varAcc4CFD);
          real prod4D93#1 = RMul(prod54D92,prod3915);
          real basisEval4D94#1 = RMul(_t3467,prod4D93);
          real prod64D95#1 = RMul(prod54D62,varAcc4CFF);
          real prod4D96#1 = RMul(_t3467,prod64D95);
          real prod4D97#1 = RMul(_t3467,prod4D96);
          real basisEval4D98#1 = RMul(_t3467,prod4D97);
          real prod4D99#1 = RMul(varAcc4CFE,prod54D62);
          real prod4D9A#1 = RMul(_t3467,prod4D99);
          real basisEval4D9B#1 = RMul(_t3467,prod4D9A);
          real prod4D9C#1 = RMul(prod24D16,prod44D3C);
          real prod4D9D#1 = RMul(_t3467,prod4D9C);
          real basisEval4D9E#1 = RMul(_t3467,prod4D9D);
          real prod4D9F#1 = RMul(prod34D2B,prod34D21);
          real prod4DA0#1 = RMul(_t3467,prod4D9F);
          real basisEval4DA1#1 = RMul(_t3467,prod4DA0);
          real prod4DA2#1 = RMul(prod44D49,prod24D0F);
          real prod4DA3#1 = RMul(_t3467,prod4DA2);
          real basisEval4DA4#1 = RMul(_t3467,prod4DA3);
          real prod4DA5#1 = RMul(prod54D72,varAcc4CFF);
          real prod4DA6#1 = RMul(_t3467,prod4DA5);
          real basisEval4DA7#1 = RMul(_t3467,prod4DA6);
          real prod64DA8#1 = RMul(prod54D72,varAcc4CFE);
          real prod4DA9#1 = RMul(prod64DA8,_t3467);
          real prod4DAA#1 = RMul(_t3467,prod4DA9);
          real basisEval4DAB#1 = RMul(_t3467,prod4DAA);
          real prod4DAC#1 = RMul(varAcc4CFD,prod4D63);
          real basisEval4DAD#1 = RMul(_t3467,prod4DAC);
          real prod4DAE#1 = RMul(varAcc4CFD,prod4D66);
          real basisEval4DAF#1 = RMul(_t3467,prod4DAE);
          real prod4DB0#1 = RMul(varAcc4CFD,prod4D69);
          real basisEval4DB1#1 = RMul(_t3467,prod4DB0);
          real prod4DB2#1 = RMul(varAcc4CFD,prod4D6C);
          real basisEval4DB3#1 = RMul(_t3467,prod4DB2);
          real prod4DB4#1 = RMul(varAcc4CFD,prod4D6F);
          real basisEval4DB5#1 = RMul(_t3467,prod4DB4);
          real prod4DB6#1 = RMul(varAcc4CFD,prod4D73);
          real basisEval4DB7#1 = RMul(_t3467,prod4DB6);
          real prod4DB8#1 = RMul(prod24D1E,prod4D3D);
          real basisEval4DB9#1 = RMul(_t3467,prod4DB8);
          real prod4DBA#1 = RMul(prod24D1E,prod4D40);
          real basisEval4DBB#1 = RMul(_t3467,prod4DBA);
          real prod4DBC#1 = RMul(prod24D1E,prod4D43);
          real basisEval4DBD#1 = RMul(_t3467,prod4DBC);
          real prod4DBE#1 = RMul(prod24D1E,prod4D46);
          real basisEval4DBF#1 = RMul(_t3467,prod4DBE);
          real prod4DC0#1 = RMul(prod24D1E,prod4D4A);
          real basisEval4DC1#1 = RMul(_t3467,prod4DC0);
          real prod4DC2#1 = RMul(prod34D39,prod4D22);
          real basisEval4DC3#1 = RMul(_t3467,prod4DC2);
          real prod4DC4#1 = RMul(prod34D39,prod4D25);
          real basisEval4DC5#1 = RMul(_t3467,prod4DC4);
          real prod4DC6#1 = RMul(prod34D39,prod4D28);
          real basisEval4DC7#1 = RMul(_t3467,prod4DC6);
          real prod4DC8#1 = RMul(prod34D39,prod4D2C);
          real basisEval4DC9#1 = RMul(_t3467,prod4DC8);
          real prod4DCA#1 = RMul(prod44D5F,prod4D10);
          real basisEval4DCB#1 = RMul(_t3467,prod4DCA);
          real prod4DCC#1 = RMul(prod44D5F,prod4D13);
          real basisEval4DCD#1 = RMul(_t3467,prod4DCC);
          real prod4DCE#1 = RMul(prod44D5F,prod4D17);
          real basisEval4DCF#1 = RMul(_t3467,prod4DCE);
          real prod4DD0#1 = RMul(prod54D92,prod4D05);
          real basisEval4DD1#1 = RMul(_t3467,prod4DD0);
          real prod4DD2#1 = RMul(prod54D92,prod4D09);
          real basisEval4DD3#1 = RMul(_t3467,prod4DD2);
          real prod64DD4#1 = RMul(prod54D92,varAcc4CFD);
          real prod4DD5#1 = RMul(prod64DD4,prod3915);
          real basisEval4DD6#1 = RMul(_t3467,prod4DD5);
          tensor[84] intermediateCons4DD7#1 = <tensor[84]>[basisEval3917,basisEval4D07,basisEval4D0B,basisEval4D0E,basisEval4D12,basisEval4D15,basisEval4D19,basisEval4D1B,basisEval4D1D,basisEval4D20,basisEval4D24,basisEval4D27,basisEval4D2A,basisEval4D2E,basisEval4D30,basisEval4D32,basisEval4D34,basisEval4D36,basisEval4D38,basisEval4D3B,basisEval4D3F,basisEval4D42,basisEval4D45,basisEval4D48,basisEval4D4C,basisEval4D4E,basisEval4D50,basisEval4D52,basisEval4D54,basisEval4D56,basisEval4D58,basisEval4D5A,basisEval4D5C,basisEval4D5E,basisEval4D61,basisEval4D65,basisEval4D68,basisEval4D6B,basisEval4D6E,basisEval4D71,basisEval4D75,basisEval4D77,basisEval4D79,basisEval4D7B,basisEval4D7D,basisEval4D7F,basisEval4D81,basisEval4D83,basisEval4D85,basisEval4D87,basisEval4D89,basisEval4D8B,basisEval4D8D,basisEval4D8F,basisEval4D91,basisEval4D94,basisEval4D98,basisEval4D9B,basisEval4D9E,basisEval4DA1,basisEval4DA4,basisEval4DA7,basisEval4DAB,basisEval4DAD,basisEval4DAF,basisEval4DB1,basisEval4DB3,basisEval4DB5,basisEval4DB7,basisEval4DB9,basisEval4DBB,basisEval4DBD,basisEval4DBF,basisEval4DC1,basisEval4DC3,basisEval4DC5,basisEval4DC7,basisEval4DC9,basisEval4DCB,basisEval4DCD,basisEval4DCF,basisEval4DD1,basisEval4DD3,basisEval4DD6];
          real probe_l_84EB4#1 = VDot<84>(dofs37BC,intermediateCons4DD7);
          real op1_e3_l_94EB7#1 = RSub(probe_l_84EB4,cmin4948);
          real op1_e3_l_104EBA#1 = RSub(cmax494A,cmin4948);
          real op1_e3_l_114EBD#1 = RDiv(op1_e3_l_94EB7,op1_e3_l_104EBA);
          real op1_e3_l_124EC0#1 = RSub(_t3467,_t3465);
          real op1_e3_l_134EC3#1 = RMul(op1_e3_l_114EBD,op1_e3_l_124EC0);
          real _t4EC6#1 = RAdd(_t3465,op1_e3_l_134EC3);
          real Mtransform4EC9#1 = Transform<IMAGE1D<double[3]>>(cmap23FF);
          real MxPos4ECB#1 = RMul(Mtransform4EC9,_t4EC6);
          real Ttranslate4ECE#1 = Translate<IMAGE1D<double[3]>>(cmap23FF);
          real imgPos4ED0#2 = RAdd(MxPos4ECB,Ttranslate4ECE);
          real nd4ED3#2 = Floor<1>(imgPos4ED0);
          real f4ED5#2 = RSub(imgPos4ED0,nd4ED3);
          int n4ED8#5 = RealToInt<1>(nd4ED3);
          bool isInside4EDC#1 = IndexInside<IMAGE1D<double[3]>,2>(n4ED8,cmap23FF);
          if isInside4EDC then goto ASSIGN5ECC else goto ASSIGN5EC4
        ASSIGN5ECC:  preds = [COND4EDE]
          int offp4EE3#3 = IMul(ilit3477,n4ED8);
          real v0_4EE4#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE3);
          int addRes4EE6#1 = IAdd(n4ED8,ilit3471);
          int offp4EE7#3 = IMul(ilit3477,addRes4EE6);
          real v1_4EE8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE7);
          tensor[2] v_4EE9#1 = <tensor[2]>[v0_4EE4,v1_4EE8];
          int offp4EEA#1 = IAdd(offp4EE3,ilit3471);
          real v0_4EEB#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEA);
          int offp4EEC#1 = IAdd(offp4EE7,ilit3471);
          real v1_4EED#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEC);
          tensor[2] v_4EEE#1 = <tensor[2]>[v0_4EEB,v1_4EED];
          int offp4EF0#1 = IAdd(offp4EE3,ilit3474);
          real v0_4EF1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF0);
          int offp4EF2#1 = IAdd(offp4EE7,ilit3474);
          real v1_4EF3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF2);
          tensor[2] v_4EF4#1 = <tensor[2]>[v0_4EF1,v1_4EF3];
          tensor[3,2] voxels4EF5#1 = <tensor[3,2]>[v_4EE9,v_4EEE,v_4EF4];
          goto JOIN4F0F
        JOIN4F0F:  preds = [ASSIGN4F0B,ASSIGN5394]
          tensor[3,2] ldvox4F0D#3 = phi(voxels4EF5,voxels537C)
          real idx4F12#1 = RSub(f4ED5,_t3467);
          tensor[2] kernX_4F10#1 = <tensor[2]>[f4ED5,idx4F12];
          tensor[2] a04F17#1 = <tensor[2]>[_t3467,_t3467];
          tensor[2] a14F18#1 = <tensor[2]>[realLit3D0E,_t3467];
          tensor[2] prod14F1D#1 = VMul<2>(kernX_4F10,a14F18);
          tensor[2] kevalX_d0_4F16#3 = VAdd<2>(a04F17,prod14F1D);
          tensor[2] projIx4F27#1 = ProjectLast<tensor[3,2],[0]>(ldvox4F0D);
          real vdot4F28#1 = VDot<2>(projIx4F27,kevalX_d0_4F16);
          tensor[2] projIx4F29#1 = ProjectLast<tensor[3,2],[1]>(ldvox4F0D);
          real vdot4F2A#1 = VDot<2>(projIx4F29,kevalX_d0_4F16);
          tensor[2] projIx4F2B#1 = ProjectLast<tensor[3,2],[2]>(ldvox4F0D);
          real vdot4F2C#1 = VDot<2>(projIx4F2B,kevalX_d0_4F16);
          tensor[3] mcol4F26#1 = <tensor[3]>[vdot4F28,vdot4F2A,vdot4F2C];
          goto JOIN4F36
        JOIN4F36:  preds = [ASSIGN4F34,COND4950]
          tensor[3] mcol4F35#3 = phi(mcol4F26,mcol494C)
          real r4F41#1 = RAdd(r4051,r4068);
          real r4F42#1 = RAdd(r4F41,r407F);
          real r4F49#1 = RAdd(r4053,r406A);
          real r4F4A#2 = RAdd(r4F49,r4081);
          real r4F51#1 = RAdd(r4055,r406C);
          real r4F52#2 = RAdd(r4F51,r4083);
          tensor[3] tensor4F53#1 = <tensor[3]>[r4F42,r4F4A,r4F52];
          real r4F62#1 = RAdd(r405A,r4071);
          real r4F63#1 = RAdd(r4F62,r4088);
          real r4F6A#1 = RAdd(r405C,r4073);
          real r4F6B#2 = RAdd(r4F6A,r408A);
          tensor[3] tensor4F6C#1 = <tensor[3]>[r4F4A,r4F63,r4F6B];
          real r4F83#1 = RAdd(r4063,r407A);
          real r4F84#1 = RAdd(r4F83,r4091);
          tensor[3] tensor4F85#1 = <tensor[3]>[r4F52,r4F6B,r4F84];
          real r4FDF#1 = RAdd(r40DD,r40E4);
          real r4FE0#1 = RAdd(r4FDF,r40EB);
          real r4FE6#1 = RAdd(r40DF,r40E6);
          real r4FE7#1 = RAdd(r4FE6,r40ED);
          real r4FED#1 = RAdd(r40E1,r40E8);
          real r4FEE#1 = RAdd(r4FED,r40EF);
          tensor[3] tensor4FEF#1 = <tensor[3]>[r4FE0,r4FE7,r4FEE];
          real r4FF3#1 = RAdd(r40F2,r40F6);
          real r4FF4#1 = RAdd(r4FF3,r40FA);
          real r4FF8#1 = RAdd(r40E4,r40F7);
          real r4FF9#1 = RAdd(r4FF8,r40FB);
          real r4FFD#1 = RAdd(r40F4,r40F8);
          real r4FFE#1 = RAdd(r4FFD,r40FC);
          tensor[3] tensor4FFF#1 = <tensor[3]>[r4FF4,r4FF9,r4FFE];
          real r5003#1 = RAdd(r40FF,r4103);
          real r5004#1 = RAdd(r5003,r4107);
          real r5008#1 = RAdd(r4100,r4104);
          real r5009#1 = RAdd(r5008,r4108);
          real r500D#1 = RAdd(r40EB,r40FB);
          real r500E#1 = RAdd(r500D,r4109);
          tensor[3] tensor500F#1 = <tensor[3]>[r5004,r5009,r500E];
          tensor[3] v504E#3 = VAdd<3>(tensor4F53,tensor4FEF);
          tensor[3] v5051#3 = VAdd<3>(tensor4F6C,tensor4FFF);
          tensor[3] v5054#3 = VAdd<3>(tensor4F85,tensor500F);
          real r5062#3 = VIndex<3,0>(v504E);
          real r5063#1 = RMul(vdot3AF3,r5062);
          real r5064#3 = VIndex<3,1>(v504E);
          real r5065#1 = RMul(vdot3AF3,r5064);
          real r5066#3 = VIndex<3,2>(v504E);
          real r5067#1 = RMul(vdot3AF3,r5066);
          tensor[3] tensor5068#1 = <tensor[3]>[r5063,r5065,r5067];
          real r5069#3 = VIndex<3,0>(v5051);
          real r506A#1 = RMul(vdot3AF3,r5069);
          real r506B#3 = VIndex<3,1>(v5051);
          real r506C#1 = RMul(vdot3AF3,r506B);
          real r506D#3 = VIndex<3,2>(v5051);
          real r506E#1 = RMul(vdot3AF3,r506D);
          tensor[3] tensor506F#1 = <tensor[3]>[r506A,r506C,r506E];
          real r5070#3 = VIndex<3,0>(v5054);
          real r5071#1 = RMul(vdot3AF3,r5070);
          real r5072#3 = VIndex<3,1>(v5054);
          real r5073#1 = RMul(vdot3AF3,r5072);
          real r5074#3 = VIndex<3,2>(v5054);
          real r5075#1 = RMul(vdot3AF3,r5074);
          tensor[3] tensor5076#1 = <tensor[3]>[r5071,r5073,r5075];
          real r5079#1 = RMul(vdot3AF5,r5062);
          real r507A#1 = RMul(vdot3AF5,r5064);
          real r507B#1 = RMul(vdot3AF5,r5066);
          tensor[3] tensor507C#1 = <tensor[3]>[r5079,r507A,r507B];
          real r507D#1 = RMul(vdot3AF5,r5069);
          real r507E#1 = RMul(vdot3AF5,r506B);
          real r507F#1 = RMul(vdot3AF5,r506D);
          tensor[3] tensor5080#1 = <tensor[3]>[r507D,r507E,r507F];
          real r5081#1 = RMul(vdot3AF5,r5070);
          real r5082#1 = RMul(vdot3AF5,r5072);
          real r5083#1 = RMul(vdot3AF5,r5074);
          tensor[3] tensor5084#1 = <tensor[3]>[r5081,r5082,r5083];
          real r5087#1 = RMul(vdot3AF7,r5062);
          real r5088#1 = RMul(vdot3AF7,r5064);
          real r5089#1 = RMul(vdot3AF7,r5066);
          tensor[3] tensor508A#1 = <tensor[3]>[r5087,r5088,r5089];
          real r508B#1 = RMul(vdot3AF7,r5069);
          real r508C#1 = RMul(vdot3AF7,r506B);
          real r508D#1 = RMul(vdot3AF7,r506D);
          tensor[3] tensor508E#1 = <tensor[3]>[r508B,r508C,r508D];
          real r508F#1 = RMul(vdot3AF7,r5070);
          real r5090#1 = RMul(vdot3AF7,r5072);
          real r5091#1 = RMul(vdot3AF7,r5074);
          tensor[3] tensor5092#1 = <tensor[3]>[r508F,r5090,r5091];
          tensor[3] v50CC#3 = VAdd<3>(tensor4215,tensor5068);
          tensor[3] v50CF#3 = VAdd<3>(tensor421C,tensor507C);
          tensor[3] v50D2#3 = VAdd<3>(tensor4223,tensor508A);
          tensor[3] v50D6#3 = VAdd<3>(tensor4229,tensor506F);
          tensor[3] v50D9#3 = VAdd<3>(tensor422D,tensor5080);
          tensor[3] v50DC#3 = VAdd<3>(tensor4231,tensor508E);
          tensor[3] v50E0#3 = VAdd<3>(tensor4237,tensor5076);
          tensor[3] v50E3#3 = VAdd<3>(tensor423B,tensor5084);
          tensor[3] v50E6#3 = VAdd<3>(tensor423F,tensor5092);
          real r5109#3 = VIndex<3,0>(v50CC);
          real r510B#1 = RMul(r5109,r3CFD);
          real r510C#3 = VIndex<3,0>(v50D6);
          real r510E#1 = RMul(r510C,r3D07);
          real r510F#3 = VIndex<3,0>(v50E0);
          real r5111#1 = RMul(r510F,r3D12);
          real r5112#3 = VIndex<3,0>(v50CF);
          real r5114#1 = RMul(r5112,r3D1D);
          real r5115#3 = VIndex<3,0>(v50D9);
          real r5117#1 = RMul(r5115,r3CFD);
          real r5118#3 = VIndex<3,0>(v50E3);
          real r511A#1 = RMul(r5118,r3D25);
          real r511B#3 = VIndex<3,0>(v50D2);
          real r511D#1 = RMul(r511B,r3D30);
          real r511E#3 = VIndex<3,0>(v50DC);
          real r5120#1 = RMul(r511E,r3D3A);
          real r5121#3 = VIndex<3,0>(v50E6);
          real r5123#1 = RMul(r5121,r3CFD);
          real r5124#1 = RAdd(r510B,r510E);
          real r5125#1 = RAdd(r5124,r5111);
          real r5126#1 = RAdd(r5125,r5114);
          real r5127#1 = RAdd(r5126,r5117);
          real r5128#1 = RAdd(r5127,r511A);
          real r5129#1 = RAdd(r5128,r511D);
          real r512A#1 = RAdd(r5129,r5120);
          real r512B#1 = RAdd(r512A,r5123);
          real r512D#1 = RMul(r5109,r3D00);
          real r512F#1 = RMul(r510C,r3D09);
          real r5131#1 = RMul(r510F,r3D16);
          real r5133#1 = RMul(r5112,r3D1F);
          real r5135#1 = RMul(r5115,r3D00);
          real r5137#1 = RMul(r5118,r3D28);
          real r5139#1 = RMul(r511B,r3D33);
          real r513B#1 = RMul(r511E,r3D3D);
          real r513D#1 = RMul(r5121,r3D00);
          real r513E#1 = RAdd(r512D,r512F);
          real r513F#1 = RAdd(r513E,r5131);
          real r5140#1 = RAdd(r513F,r5133);
          real r5141#1 = RAdd(r5140,r5135);
          real r5142#1 = RAdd(r5141,r5137);
          real r5143#1 = RAdd(r5142,r5139);
          real r5144#1 = RAdd(r5143,r513B);
          real r5145#1 = RAdd(r5144,r513D);
          real r5147#1 = RMul(r5109,r3D03);
          real r5149#1 = RMul(r510C,r3D0C);
          real r514B#1 = RMul(r510F,r3D19);
          real r514D#1 = RMul(r5112,r3D21);
          real r514F#1 = RMul(r5115,r3D03);
          real r5151#1 = RMul(r5118,r3D2B);
          real r5153#1 = RMul(r511B,r3D36);
          real r5155#1 = RMul(r511E,r3D40);
          real r5157#1 = RMul(r5121,r3D03);
          real r5158#1 = RAdd(r5147,r5149);
          real r5159#1 = RAdd(r5158,r514B);
          real r515A#1 = RAdd(r5159,r514D);
          real r515B#1 = RAdd(r515A,r514F);
          real r515C#1 = RAdd(r515B,r5151);
          real r515D#1 = RAdd(r515C,r5153);
          real r515E#1 = RAdd(r515D,r5155);
          real r515F#1 = RAdd(r515E,r5157);
          tensor[3] tensor5160#1 = <tensor[3]>[r512B,r5145,r515F];
          real r5161#3 = VIndex<3,1>(v50CC);
          real r5162#1 = RMul(r5161,r3CFD);
          real r5163#3 = VIndex<3,1>(v50D6);
          real r5164#1 = RMul(r5163,r3D07);
          real r5165#3 = VIndex<3,1>(v50E0);
          real r5166#1 = RMul(r5165,r3D12);
          real r5167#3 = VIndex<3,1>(v50CF);
          real r5168#1 = RMul(r5167,r3D1D);
          real r5169#3 = VIndex<3,1>(v50D9);
          real r516A#1 = RMul(r5169,r3CFD);
          real r516B#3 = VIndex<3,1>(v50E3);
          real r516C#1 = RMul(r516B,r3D25);
          real r516D#3 = VIndex<3,1>(v50D2);
          real r516E#1 = RMul(r516D,r3D30);
          real r516F#3 = VIndex<3,1>(v50DC);
          real r5170#1 = RMul(r516F,r3D3A);
          real r5171#3 = VIndex<3,1>(v50E6);
          real r5172#1 = RMul(r5171,r3CFD);
          real r5173#1 = RAdd(r5162,r5164);
          real r5174#1 = RAdd(r5173,r5166);
          real r5175#1 = RAdd(r5174,r5168);
          real r5176#1 = RAdd(r5175,r516A);
          real r5177#1 = RAdd(r5176,r516C);
          real r5178#1 = RAdd(r5177,r516E);
          real r5179#1 = RAdd(r5178,r5170);
          real r517A#1 = RAdd(r5179,r5172);
          real r517B#1 = RMul(r5161,r3D00);
          real r517C#1 = RMul(r5163,r3D09);
          real r517D#1 = RMul(r5165,r3D16);
          real r517E#1 = RMul(r5167,r3D1F);
          real r517F#1 = RMul(r5169,r3D00);
          real r5180#1 = RMul(r516B,r3D28);
          real r5181#1 = RMul(r516D,r3D33);
          real r5182#1 = RMul(r516F,r3D3D);
          real r5183#1 = RMul(r5171,r3D00);
          real r5184#1 = RAdd(r517B,r517C);
          real r5185#1 = RAdd(r5184,r517D);
          real r5186#1 = RAdd(r5185,r517E);
          real r5187#1 = RAdd(r5186,r517F);
          real r5188#1 = RAdd(r5187,r5180);
          real r5189#1 = RAdd(r5188,r5181);
          real r518A#1 = RAdd(r5189,r5182);
          real r518B#1 = RAdd(r518A,r5183);
          real r518C#1 = RMul(r5161,r3D03);
          real r518D#1 = RMul(r5163,r3D0C);
          real r518E#1 = RMul(r5165,r3D19);
          real r518F#1 = RMul(r5167,r3D21);
          real r5190#1 = RMul(r5169,r3D03);
          real r5191#1 = RMul(r516B,r3D2B);
          real r5192#1 = RMul(r516D,r3D36);
          real r5193#1 = RMul(r516F,r3D40);
          real r5194#1 = RMul(r5171,r3D03);
          real r5195#1 = RAdd(r518C,r518D);
          real r5196#1 = RAdd(r5195,r518E);
          real r5197#1 = RAdd(r5196,r518F);
          real r5198#1 = RAdd(r5197,r5190);
          real r5199#1 = RAdd(r5198,r5191);
          real r519A#1 = RAdd(r5199,r5192);
          real r519B#1 = RAdd(r519A,r5193);
          real r519C#1 = RAdd(r519B,r5194);
          tensor[3] tensor519D#1 = <tensor[3]>[r517A,r518B,r519C];
          real r519E#3 = VIndex<3,2>(v50CC);
          real r519F#1 = RMul(r519E,r3CFD);
          real r51A0#3 = VIndex<3,2>(v50D6);
          real r51A1#1 = RMul(r51A0,r3D07);
          real r51A2#3 = VIndex<3,2>(v50E0);
          real r51A3#1 = RMul(r51A2,r3D12);
          real r51A4#3 = VIndex<3,2>(v50CF);
          real r51A5#1 = RMul(r51A4,r3D1D);
          real r51A6#3 = VIndex<3,2>(v50D9);
          real r51A7#1 = RMul(r51A6,r3CFD);
          real r51A8#3 = VIndex<3,2>(v50E3);
          real r51A9#1 = RMul(r51A8,r3D25);
          real r51AA#3 = VIndex<3,2>(v50D2);
          real r51AB#1 = RMul(r51AA,r3D30);
          real r51AC#3 = VIndex<3,2>(v50DC);
          real r51AD#1 = RMul(r51AC,r3D3A);
          real r51AE#3 = VIndex<3,2>(v50E6);
          real r51AF#1 = RMul(r51AE,r3CFD);
          real r51B0#1 = RAdd(r519F,r51A1);
          real r51B1#1 = RAdd(r51B0,r51A3);
          real r51B2#1 = RAdd(r51B1,r51A5);
          real r51B3#1 = RAdd(r51B2,r51A7);
          real r51B4#1 = RAdd(r51B3,r51A9);
          real r51B5#1 = RAdd(r51B4,r51AB);
          real r51B6#1 = RAdd(r51B5,r51AD);
          real r51B7#1 = RAdd(r51B6,r51AF);
          real r51B8#1 = RMul(r519E,r3D00);
          real r51B9#1 = RMul(r51A0,r3D09);
          real r51BA#1 = RMul(r51A2,r3D16);
          real r51BB#1 = RMul(r51A4,r3D1F);
          real r51BC#1 = RMul(r51A6,r3D00);
          real r51BD#1 = RMul(r51A8,r3D28);
          real r51BE#1 = RMul(r51AA,r3D33);
          real r51BF#1 = RMul(r51AC,r3D3D);
          real r51C0#1 = RMul(r51AE,r3D00);
          real r51C1#1 = RAdd(r51B8,r51B9);
          real r51C2#1 = RAdd(r51C1,r51BA);
          real r51C3#1 = RAdd(r51C2,r51BB);
          real r51C4#1 = RAdd(r51C3,r51BC);
          real r51C5#1 = RAdd(r51C4,r51BD);
          real r51C6#1 = RAdd(r51C5,r51BE);
          real r51C7#1 = RAdd(r51C6,r51BF);
          real r51C8#1 = RAdd(r51C7,r51C0);
          real r51C9#1 = RMul(r519E,r3D03);
          real r51CA#1 = RMul(r51A0,r3D0C);
          real r51CB#1 = RMul(r51A2,r3D19);
          real r51CC#1 = RMul(r51A4,r3D21);
          real r51CD#1 = RMul(r51A6,r3D03);
          real r51CE#1 = RMul(r51A8,r3D2B);
          real r51CF#1 = RMul(r51AA,r3D36);
          real r51D0#1 = RMul(r51AC,r3D40);
          real r51D1#1 = RMul(r51AE,r3D03);
          real r51D2#1 = RAdd(r51C9,r51CA);
          real r51D3#1 = RAdd(r51D2,r51CB);
          real r51D4#1 = RAdd(r51D3,r51CC);
          real r51D5#1 = RAdd(r51D4,r51CD);
          real r51D6#1 = RAdd(r51D5,r51CE);
          real r51D7#1 = RAdd(r51D6,r51CF);
          real r51D8#1 = RAdd(r51D7,r51D0);
          real r51D9#1 = RAdd(r51D8,r51D1);
          tensor[3] tensor51DA#1 = <tensor[3]>[r51B7,r51C8,r51D9];
          real vdot52B1#1 = VDot<3>(op1_e3_l_943E30,tensor5160);
          real vdot52B3#1 = VDot<3>(op1_e3_l_943E30,tensor519D);
          real vdot52B5#1 = VDot<3>(op1_e3_l_943E30,tensor51DA);
          tensor[3] op1_e3_l_23152AF#2 = <tensor[3]>[vdot52B1,vdot52B3,vdot52B5];
          tensor[3] op1_e3_l_23452BE#3 = VAdd<3>(op1_e3_l_23152AF,op1_e3_l_23152AF);
          tensor[3] op1_e3_l_33752C1#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_23452BE);
          real op1_e3_l_33852C4#1 = VDot<3>(op1_e3_l_23452BE,op1_e3_l_23452BE);
          real r52C9#3 = RDiv(_t3467,op1_e3_l_33852C4);
          real r52CA#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_33752C1);
          real r52CB#1 = RMul(r52C9,r52CA);
          real r52CC#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_33752C1);
          real r52CD#1 = RMul(r52C9,r52CC);
          real r52CE#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_33752C1);
          real r52CF#1 = RMul(r52C9,r52CE);
          tensor[3] op1_e3_l_33952C7#1 = <tensor[3]>[r52CB,r52CD,r52CF];
          tensor[3] op1_e3_l_68252DA#3 = VNeg<3>(op1_e3_l_33952C7);
          real op1_e3_l_68452DD#1 = VDot<3>(op1_e3_l_68252DA,op1_e3_l_68252DA);
          real op1_e3_l_68552E0#1 = Sqrt(op1_e3_l_68452DD);
          real op1_e3_l_68752E3#1 = RDiv(_t3467,op1_e3_l_68552E0);
          tensor[3] op1_e3_l_68852E8#1 = VScale<3>(op1_e3_l_68752E3,op1_e3_l_68252DA);
          tensor[3] op1_e3_l_68952EB#1 = VNeg<3>(op1_e3_l_68852E8);
          real op1_e3_l_69052EE#2 = VDot<3>(op1_e3_l_68952EB,litwsp2425);
          real op1_e3_l_69152F1#1 = RMul(op1_e3_l_69052EE,op1_e3_l_69052EE);
          real op1_e3_l_69252F4#1 = RMul(phKd2433,op1_e3_l_69152F1);
          real op1_e3_l_69452F7#1 = RSub(rayN243D,camNearVsp2421);
          real op1_e3_l_69552FA#1 = RSub(camFarVsp2423,camNearVsp2421);
          real op1_e3_l_69652FD#1 = RDiv(op1_e3_l_69452F7,op1_e3_l_69552FA);
          tensor[3] op1_e3_l_6975300#1 = VSub<3>(mcFar241D,mcNear241B);
          tensor[3] op1_e3_l_6985303#1 = VScale<3>(op1_e3_l_69652FD,op1_e3_l_6975300);
          real op1_e3_l_6995306#3 = RAdd(phKa2431,op1_e3_l_69252F4);
          tensor[3] op1_e3_l_7005309#3 = VAdd<3>(mcNear241B,op1_e3_l_6985303);
          real r530D#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7005309);
          real r530E#1 = TensorIndex<tensor[3],[0]>(mcol4F35);
          real r530F#1 = RMul(op1_e3_l_6995306,r530D);
          real r5310#1 = RMul(r530F,r530E);
          real r5311#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7005309);
          real r5312#1 = TensorIndex<tensor[3],[1]>(mcol4F35);
          real r5313#1 = RMul(op1_e3_l_6995306,r5311);
          real r5314#1 = RMul(r5313,r5312);
          real r5315#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7005309);
          real r5316#1 = TensorIndex<tensor[3],[2]>(mcol4F35);
          real r5317#1 = RMul(op1_e3_l_6995306,r5315);
          real r5318#1 = RMul(r5317,r5316);
          tensor[3] op1_e3_l_701530C#1 = <tensor[3]>[r5310,r5314,r5318];
          real r5329#1 = RMul(phKs2435,scomp4946);
          real r532A#3 = RMul(r5329,_t3467);
          tensor[3] op1_e3_l_7025327#1 = <tensor[3]>[r532A,r532A,r532A];
          real op1_e3_l_7035338#2 = RSub(_t3467,_t4571);
          tensor[3] op1_e3_l_704533B#3 = VAdd<3>(op1_e3_l_701530C,op1_e3_l_7025327);
          real r533F#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_704533B);
          real r5340#3 = RMul(transp243B,op1_e3_l_7035338);
          real r5341#1 = RMul(r5340,r533F);
          real r5342#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_704533B);
          real r5343#1 = RMul(r5340,r5342);
          real r5344#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_704533B);
          real r5345#1 = RMul(r5340,r5344);
          tensor[3] op1_e3_l_705533E#1 = <tensor[3]>[r5341,r5343,r5345];
          tensor[3] rgb534F#2 = VAdd<3>(rgb2439,op1_e3_l_705533E);
          real op1_e3_l_55352#1 = RSub(_t3467,op1_e3_l_7035338);
          real transp5355#2 = RMul(transp243B,op1_e3_l_55352);
          bool _t5358#1 = LT<real>(transp5355,transp0240F);
          if _t5358 then goto SAVE535B else goto JOIN5360
        SAVE535B:  preds = [COND535A]
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = _t3465;
          stabilize
          goto JOIN5360
        JOIN5360:  preds = [*STABILIZE535E,COND535A]
          real transp535F#1 = phi(transp5355)
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = transp535F;
          active
        ASSIGN5EC4:  preds = [COND4EDE]
          int ix5367#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,n4ED8);
          int offp5369#3 = IMul(ilit3477,ix5367);
          real v0_536A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5369);
          int addRes536C#1 = IAdd(n4ED8,ilit3471);
          int ix536D#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,addRes536C);
          int offp536E#3 = IMul(ilit3477,ix536D);
          real v1_536F#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp536E);
          tensor[2] v_5370#1 = <tensor[2]>[v0_536A,v1_536F];
          int offp5371#1 = IAdd(offp5369,ilit3471);
          real v0_5372#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5371);
          int offp5373#1 = IAdd(offp536E,ilit3471);
          real v1_5374#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5373);
          tensor[2] v_5375#1 = <tensor[2]>[v0_5372,v1_5374];
          int offp5377#1 = IAdd(offp5369,ilit3474);
          real v0_5378#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5377);
          int offp5379#1 = IAdd(offp536E,ilit3474);
          real v1_537A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5379);
          tensor[2] v_537B#1 = <tensor[2]>[v0_5378,v1_537A];
          tensor[3,2] voxels537C#1 = <tensor[3,2]>[v_5370,v_5375,v_537B];
          goto JOIN4F0F
        ASSIGN5396:  preds = [COND3450]
          bool _t3454#1 = false;
          goto JOIN3455
        ASSIGN5397:  preds = [COND2CEB]
          bool _t3457#1 = false;
          goto JOIN3458
        ASSIGN5398:  preds = [COND2CE6]
          bool _t345A#1 = false;
          goto JOIN345B
        ASSIGN5399:  preds = [COND2452]
          bool _t345D#1 = false;
          goto JOIN345E
    end update
    method stabilize
        ENTRY539A:  preds = []
          tensor[4] rgba539B#1 = self.rgba;
          tensor[3] rgb539D#3 = self.rgb;
          real transp539F#2 = self.transp;
          real _t53A1#2 = 0.1e1;
          bool _t53A3#1 = LT<real>(transp539F,_t53A1);
          if _t53A3 then goto ASSIGN53A8 else goto JOIN53BB
        ASSIGN53A8:  preds = [COND53A5]
          real aa53A6#4 = RSub(_t53A1,transp539F);
          real _t53A9#1 = VIndex<3,0>(rgb539D);
          real _t53AB#1 = RDiv(_t53A9,aa53A6);
          real _t53AE#1 = VIndex<3,1>(rgb539D);
          real _t53B0#1 = RDiv(_t53AE,aa53A6);
          real _t53B3#1 = VIndex<3,2>(rgb539D);
          real _t53B5#1 = RDiv(_t53B3,aa53A6);
          tensor[4] rgba53B8#1 = <tensor[4]>[_t53AB,_t53B0,_t53B5,aa53A6];
          goto JOIN53BB
        JOIN53BB:  preds = [ASSIGN53B9,COND53A5]
          tensor[4] rgba53BA#1 = phi(rgba53B8,rgba539B)
          self.rgba = rgba53BA;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY53BE:  preds = []
      int iresU53BF#1 = globals.iresU2121;
      int iresV53C1#1 = globals.iresV2122;
      int _t53C3#2 = 0;
      int _t53C5#2 = 1;
      int _t53C7#1 = ISub(iresV53C1,_t53C5);
      int[] _t53C9#1 = Range(_t53C3,_t53C7);
    FOREACH53CC:  preds = [ASSIGN53CA,NEXT53D5]
      foreach (vi53CB in _t53C9) on exit goto RETURN53D6
      int _t53CD#1 = ISub(iresU53BF,_t53C5);
      int[] _t53CF#1 = Range(_t53C3,_t53CD);
    FOREACH53D2:  preds = [ASSIGN53D0,NEXT53D4]
      foreach (ui53D1 in _t53CF) on exit goto NEXT53D5
      new ray(ui53D1,vi53CB);
      goto FOREACH53D2
    NEXT53D5:  preds = [FOREACH53D2]
      goto FOREACH53CC
    RETURN53D6:  preds = [FOREACH53CC]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
## globals
  input block2115 (block) = <no-default>
  input 0space04D7_intermedateGlobal2116 (space) = <no-default>
  input 0U04D9_intermedateGlobal2117 (U) = <no-default>
  input cellChoice2118 (cellChoice) = <no-default>
  input cmap2119 (cmap) = image("cmap.nrrd")
  input camEye211A (camEye) = <default>
  input camAt211B (camAt) = <default>
  input camUp211C (camUp) = <default>
  input camNear211D (camNear) = <default>
  input camFar211E (camFar) = <default>
  input camFOV211F (camFOV) = <default>
  input camOrtho2120 (camOrtho) = <default>
  input iresU2121 (iresU) = <default>
  input iresV2122 (iresV) = <default>
  input rayStep2123 (rayStep) = <default>
  input refStep2124 (refStep) = <default>
  input transp02125 (transp0) = <default>
  input thick2126 (thick) = <default>
  input fStrTh2127 (fStrTh) = <default>
  input fMaskTh2128 (fMaskTh) = <default>
  input fBias2129 (fBias) = <default>
  input maxAlpha212A (maxAlpha) = <default>
  input light212B (light) = <default>
  input phong212C (phong) = <default>
  input mcNear212D (mcNear) = <default>
  input mcFar212E (mcFar) = <default>
  input litdir212F (litdir) = <default>
  input cminmax2130 (cminmax) = <default>
  global tensor[3] camN2131
  global tensor[3] camU2132
  global tensor[3] camV2133
  global real camDist2134
  global real camVmax2135
  global real camUmax2136
  global real camNearVsp2137
  global real camFarVsp2138
  global tensor[3] litwsp2139
  global int _t213A
  global femData:Space _tX213B
  global femData:FemFunc _tXX213C
## functions
## input initialization
  ENTRY213F:  preds = []
    real _t2140#13 = 0.e0;
    real _t2142#1 = -0.2e1;
    tensor[3] camEye2144#1 = <tensor[3]>[_t2140,_t2142,_t2140];
    globals.camEye211A = camEye2144;
    tensor[3] camAt2147#1 = <tensor[3]>[_t2140,_t2140,_t2140];
    globals.camAt211B = camAt2147;
    real _t214A#5 = 0.1e1;
    tensor[3] camUp214C#1 = <tensor[3]>[_t2140,_t2140,_t214A];
    globals.camUp211C = camUp214C;
    real camNear214F#1 = -0.4e1;
    globals.camNear211D = camNear214F;
    real camFar2152#1 = 0.4e1;
    globals.camFar211E = camFar2152;
    real camFOV2155#1 = 0.1e2;
    globals.camFOV211F = camFOV2155;
    bool camOrtho2158#2 = false;
    globals.camOrtho2120 = camOrtho2158;
    int iresU215B#2 = 100;
    globals.iresU2121 = iresU215B;
    globals.iresV2122 = iresU215B;
    real rayStep215F#2 = 0.1e-3;
    globals.rayStep2123 = rayStep215F;
    globals.refStep2124 = rayStep215F;
    real transp02163#1 = 0.5e-2;
    globals.transp02125 = transp02163;
    real thick2166#1 = 0.1e-1;
    globals.thick2126 = thick2166;
    globals.fStrTh2127 = _t2140;
    globals.fMaskTh2128 = _t2140;
    real fBias216B#2 = 0.1e0;
    globals.fBias2129 = fBias216B;
    globals.maxAlpha212A = _t214A;
    globals.light212B = camOrtho2158;
    real _t2170#1 = 0.7e0;
    real _t2172#1 = 0.2e0;
    real _t2174#1 = 0.1e3;
    tensor[4] phong2176#1 = <tensor[4]>[fBias216B,_t2170,_t2172,_t2174];
    globals.phong212C = phong2176;
    tensor[3] mcNear2179#2 = <tensor[3]>[_t214A,_t214A,_t214A];
    globals.mcNear212D = mcNear2179;
    globals.mcFar212E = mcNear2179;
    real _t217D#1 = -0.1e1;
    tensor[3] litdir217F#1 = <tensor[3]>[_t2140,_t217D,_t2140];
    globals.litdir212F = litdir217F;
    tensor[2] cminmax2182#1 = <tensor[2]>[_t2140,_t2140];
    globals.cminmax2130 = cminmax2182;
    return
## global-variable initialization
  ENTRY2186:  preds = []
    femData:Mesh block2187#3 = globals.block2115;
    femData:Space 0space04D7_intermedateGlobal2189#1 = globals.0space04D7_intermedateGlobal2116;
    femData:FemFunc 0U04D9_intermedateGlobal218B#1 = globals.0U04D9_intermedateGlobal2117;
    int cellChoice218D#1 = globals.cellChoice2118;
    tensor[3] camEye2191#1 = globals.camEye211A;
    tensor[3] camAt2193#1 = globals.camAt211B;
    tensor[3] camUp2195#3 = globals.camUp211C;
    real camNear2197#1 = globals.camNear211D;
    real camFar2199#1 = globals.camFar211E;
    real camFOV219B#1 = globals.camFOV211F;
    int iresU219D#1 = globals.iresU2121;
    int iresV219F#1 = globals.iresV2122;
    tensor[3] litdir21A1#5 = globals.litdir212F;
    int _t21A3#1 = 0;
    int _t21A5#1 = 1;
    int _t21A7#1 = ExtractFemItem<int,NumCell(Mesh)>(block2187);
    int _t21A9#1 = ISub(_t21A7,_t21A5);
    int[] _t21AB#1 = Range(_t21A3,_t21A9);
    femData:MeshCell[] _t21AD#1 = <femData:MeshCell[]>{};
  FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B6]
    foreach (_t21AF in _t21AB) on exit goto ASSIGN21B8
      femData:MeshCell[] _t21B4#2 = phi(_t21AD,_t21B3)
    femData:MeshCell _t21B1#1 = LoadFem<femData:MeshCell>(block2187,_t21AF);
    femData:MeshCell[] _t21B3#1 = Append<femData:MeshCell>(_t21B4,_t21B1);
    goto FOREACH21B0
  ASSIGN21B8:  preds = [FOREACH21B0]
    femData:Space space21B7#1 = LoadFem<femData:Space>(0space04D7_intermedateGlobal2189,block2187);
    femData:FemFunc U21B9#1 = LoadFem<femData:FemFunc>(0U04D9_intermedateGlobal218B,space21B7);
    femData:MeshCell c121BB#1 = Subscript<femData:MeshCell[]>(_t21B4,cellChoice218D);
    int _t21BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c121BB);
    femData:FuncCell _t21BF#2 = LoadFem<femData:FuncCell>(U21B9,_t21BD);
    femData:FemFunc _t21C1#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t21BF);
    femData:Space _t21C3#1 = ExtractFem<femData:Space,femData:FemFunc>(_t21C1);
    int _t21C5#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t21BF);
    tensor[3] op1_e3_l_421CB#9 = VSub<3>(camAt2193,camEye2191);
    real op1_e3_l_621CE#1 = VDot<3>(op1_e3_l_421CB,op1_e3_l_421CB);
    real op1_e3_l_721D1#6 = Sqrt(op1_e3_l_621CE);
    real realLit21D5#9 = 0.1e1;
    real op1_e3_l_921D4#6 = RDiv(realLit21D5,op1_e3_l_721D1);
    tensor[3] camN21D9#4 = VScale<3>(op1_e3_l_921D4,op1_e3_l_421CB);
    globals.camN2131 = camN21D9;
    real realLit21DE#6 = 0.e0;
    real r21DF#3 = TensorIndex<tensor[3],[0]>(camUp2195);
    real r21E0#3 = RMul(realLit21DE,r21DF);
    real r21E1#3 = TensorIndex<tensor[3],[1]>(camUp2195);
    real r21E2#3 = RMul(realLit21DE,r21E1);
    real r21E3#3 = TensorIndex<tensor[3],[2]>(camUp2195);
    real r21E4#5 = RMul(realLit21DE,r21E3);
    real r21E5#3 = RAdd(r21E0,r21E2);
    real r21E6#3 = RAdd(r21E5,r21E4);
    real r21E8#1 = RMul(realLit21D5,r21E3);
    real r21E9#1 = RAdd(r21E5,r21E8);
    real realLit21EA#6 = -0.1e1;
    real r21EB#1 = RMul(realLit21EA,r21E1);
    real r21EC#1 = RAdd(r21E0,r21EB);
    real r21ED#1 = RAdd(r21EC,r21E4);
    tensor[3] tensor21EE#1 = <tensor[3]>[r21E6,r21E9,r21ED];
    real r21EF#1 = RMul(realLit21EA,r21E3);
    real r21F0#1 = RAdd(r21E5,r21EF);
    real r21F1#1 = RMul(realLit21D5,r21DF);
    real r21F2#1 = RAdd(r21F1,r21E2);
    real r21F3#1 = RAdd(r21F2,r21E4);
    tensor[3] tensor21F4#1 = <tensor[3]>[r21F0,r21E6,r21F3];
    real r21F5#1 = RMul(realLit21D5,r21E1);
    real r21F6#1 = RAdd(r21E0,r21F5);
    real r21F7#1 = RAdd(r21F6,r21E4);
    real r21F8#1 = RMul(realLit21EA,r21DF);
    real r21F9#1 = RAdd(r21F8,r21E2);
    real r21FA#1 = RAdd(r21F9,r21E4);
    tensor[3] tensor21FB#1 = <tensor[3]>[r21F7,r21FA,r21E6];
    real vdot221E#4 = VDot<3>(op1_e3_l_421CB,tensor21EE);
    real vdot2220#4 = VDot<3>(op1_e3_l_421CB,tensor21F4);
    real vdot2222#4 = VDot<3>(op1_e3_l_421CB,tensor21FB);
    tensor[3] op1_e3_l_17221C#3 = <tensor[3]>[vdot221E,vdot2220,vdot2222];
    real op1_e3_l_34222B#1 = VDot<3>(op1_e3_l_17221C,op1_e3_l_17221C);
    real r222F#1 = RMul(op1_e3_l_921D4,op1_e3_l_921D4);
    real op1_e3_l_35222E#1 = RMul(r222F,op1_e3_l_34222B);
    real op1_e3_l_362233#1 = Sqrt(op1_e3_l_35222E);
    tensor[3] op1_e3_l_372236#1 = VScale<3>(op1_e3_l_921D4,op1_e3_l_17221C);
    real op1_e3_l_382239#2 = RDiv(realLit21D5,op1_e3_l_362233);
    tensor[3] camU223E#4 = VScale<3>(op1_e3_l_382239,op1_e3_l_372236);
    globals.camU2132 = camU223E;
    real r2245#3 = RMul(realLit21DE,vdot221E);
    real r2247#3 = RMul(realLit21DE,vdot2220);
    real r2249#5 = RMul(realLit21DE,vdot2222);
    real r224A#3 = RAdd(r2245,r2247);
    real r224B#3 = RAdd(r224A,r2249);
    real r224D#1 = RMul(realLit21D5,vdot2222);
    real r224E#1 = RAdd(r224A,r224D);
    real r2250#1 = RMul(realLit21EA,vdot2220);
    real r2251#1 = RAdd(r2245,r2250);
    real r2252#1 = RAdd(r2251,r2249);
    tensor[3] tensor2253#1 = <tensor[3]>[r224B,r224E,r2252];
    real r2254#1 = RMul(realLit21EA,vdot2222);
    real r2255#1 = RAdd(r224A,r2254);
    real r2256#1 = RMul(realLit21D5,vdot221E);
    real r2257#1 = RAdd(r2256,r2247);
    real r2258#1 = RAdd(r2257,r2249);
    tensor[3] tensor2259#1 = <tensor[3]>[r2255,r224B,r2258];
    real r225A#1 = RMul(realLit21D5,vdot2220);
    real r225B#1 = RAdd(r2245,r225A);
    real r225C#1 = RAdd(r225B,r2249);
    real r225D#1 = RMul(realLit21EA,vdot221E);
    real r225E#1 = RAdd(r225D,r2247);
    real r225F#1 = RAdd(r225E,r2249);
    tensor[3] tensor2260#1 = <tensor[3]>[r225C,r225F,r224B];
    real vdot2283#1 = VDot<3>(op1_e3_l_421CB,tensor2253);
    real vdot2285#1 = VDot<3>(op1_e3_l_421CB,tensor2259);
    real vdot2287#1 = VDot<3>(op1_e3_l_421CB,tensor2260);
    tensor[3] op1_e3_l_472281#1 = <tensor[3]>[vdot2283,vdot2285,vdot2287];
    tensor[3] op1_e3_l_502290#3 = VScale<3>(op1_e3_l_921D4,op1_e3_l_472281);
    real r2294#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_502290);
    real r2295#3 = RMul(op1_e3_l_921D4,op1_e3_l_382239);
    real r2296#2 = RMul(r2295,r2294);
    real r2297#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_502290);
    real r2298#2 = RMul(r2295,r2297);
    real r2299#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_502290);
    real r229A#2 = RMul(r2295,r2299);
    tensor[3] camV2293#1 = <tensor[3]>[r2296,r2298,r229A];
    globals.camV2133 = camV2293;
    globals.camDist2134 = op1_e3_l_721D1;
    real _t22A6#1 = 0.314159265358979323846264338327950288e1;
    real _t22A8#1 = 0.36e3;
    real op1_e3_l_522AA#1 = RMul(camFOV219B,_t22A6);
    real op1_e3_l_622AD#1 = RDiv(op1_e3_l_522AA,_t22A8);
    real op1_e3_l_1022B0#2 = Tan(op1_e3_l_622AD);
    real camVmax22B3#1 = RMul(op1_e3_l_1022B0,op1_e3_l_721D1);
    globals.camVmax2135 = camVmax22B3;
    real _t22B7#1 = IntToReal(iresU219D);
    real _t22B9#1 = IntToReal(iresV219F);
    real r22BC#1 = RMul(_t22B7,op1_e3_l_1022B0);
    real op1_e3_l_1422BB#1 = RMul(r22BC,op1_e3_l_721D1);
    real camUmax22C0#1 = RDiv(op1_e3_l_1422BB,_t22B9);
    globals.camUmax2136 = camUmax22C0;
    real camNearVsp22C4#1 = RAdd(camNear2197,op1_e3_l_721D1);
    globals.camNearVsp2137 = camNearVsp22C4;
    real camFarVsp22C8#1 = RAdd(camFar2199,op1_e3_l_721D1);
    globals.camFarVsp2138 = camFarVsp22C8;
    real op1_e3_l_322CE#1 = VDot<3>(litdir21A1,litdir21A1);
    real op1_e3_l_422D1#1 = Sqrt(op1_e3_l_322CE);
    real op1_e3_l_522D4#1 = RDiv(realLit21D5,op1_e3_l_422D1);
    real r22DA#1 = VIndex<3,0>(camU223E);
    real r22DB#3 = TensorIndex<tensor[3],[0]>(litdir21A1);
    real r22DC#1 = RMul(r22DA,r22DB);
    real r22DE#3 = TensorIndex<tensor[3],[1]>(litdir21A1);
    real r22DF#1 = RMul(r2296,r22DE);
    real r22E0#1 = VIndex<3,0>(camN21D9);
    real r22E1#3 = TensorIndex<tensor[3],[2]>(litdir21A1);
    real r22E2#1 = RMul(r22E0,r22E1);
    real r22E3#1 = RAdd(r22DC,r22DF);
    real r22E4#1 = RAdd(r22E3,r22E2);
    real r22E5#1 = VIndex<3,1>(camU223E);
    real r22E6#1 = RMul(r22E5,r22DB);
    real r22E8#1 = RMul(r2298,r22DE);
    real r22E9#1 = VIndex<3,1>(camN21D9);
    real r22EA#1 = RMul(r22E9,r22E1);
    real r22EB#1 = RAdd(r22E6,r22E8);
    real r22EC#1 = RAdd(r22EB,r22EA);
    real r22ED#1 = VIndex<3,2>(camU223E);
    real r22EE#1 = RMul(r22ED,r22DB);
    real r22F0#1 = RMul(r229A,r22DE);
    real r22F1#1 = VIndex<3,2>(camN21D9);
    real r22F2#1 = RMul(r22F1,r22E1);
    real r22F3#1 = RAdd(r22EE,r22F0);
    real r22F4#1 = RAdd(r22F3,r22F2);
    tensor[3] op1_e3_l_622D9#1 = <tensor[3]>[r22E4,r22EC,r22F4];
    tensor[3] litwsp2312#1 = VScale<3>(op1_e3_l_522D4,op1_e3_l_622D9);
    globals.litwsp2139 = litwsp2312;
    globals._t213A = _t21C5;
    globals._tX213B = _t21C3;
    globals._tXX213C = _t21C1;
    return
## strand
  strand ray (int ui231C#1, int vi231D#1)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] UV;
      tensor[3] rayOrig;
      tensor[3] rayVec;
      real alphaFix;
      tensor[3] eyeDir;
      real phKa;
      real phKd;
      real phKs;
      real phSp;
      output tensor[4] rgba;
      output real raw;
      tensor[3] rgb;
      real transp;
    state init
      ENTRY232E:  preds = []
        tensor[3] camEye232F#1 = globals.camEye211A;
        bool camOrtho2331#2 = globals.camOrtho2120;
        int iresU2333#1 = globals.iresU2121;
        int iresV2335#1 = globals.iresV2122;
        real rayStep2337#1 = globals.rayStep2123;
        real refStep2339#1 = globals.refStep2124;
        tensor[4] phong233B#4 = globals.phong212C;
        tensor[3] camN233D#1 = globals.camN2131;
        tensor[3] camU233F#1 = globals.camU2132;
        tensor[3] camV2341#1 = globals.camV2133;
        real camDist2343#1 = globals.camDist2134;
        real camVmax2345#2 = globals.camVmax2135;
        real camUmax2347#2 = globals.camUmax2136;
        real camNearVsp2349#1 = globals.camNearVsp2137;
        real _t234B#4 = -0.5e0;
        real _t234D#1 = IntToReal(ui231C);
        real _t234F#1 = IntToReal(iresU2333);
        real _t2351#2 = 0.5e0;
        real op1_e3_l_62353#1 = RSub(_t234F,_t2351);
        real op1_e3_l_72356#1 = RSub(_t234D,_t234B);
        real op1_e3_l_82359#1 = RSub(op1_e3_l_62353,_t234B);
        real op1_e3_l_9235C#2 = RNeg(camUmax2347);
        real op1_e3_l_10235F#1 = RDiv(op1_e3_l_72356,op1_e3_l_82359);
        real op1_e3_l_112362#1 = RSub(camUmax2347,op1_e3_l_9235C);
        real op1_e3_l_132365#1 = RMul(op1_e3_l_10235F,op1_e3_l_112362);
        real rayU2368#2 = RAdd(op1_e3_l_9235C,op1_e3_l_132365);
        real _t236B#1 = IntToReal(vi231D);
        real _t236D#1 = IntToReal(iresV2335);
        real op1_e3_l_6236F#1 = RSub(_t236D,_t2351);
        real op1_e3_l_72372#1 = RSub(_t236B,_t234B);
        real op1_e3_l_82375#1 = RSub(op1_e3_l_6236F,_t234B);
        real op1_e3_l_92378#2 = RNeg(camVmax2345);
        real op1_e3_l_10237B#1 = RDiv(op1_e3_l_72372,op1_e3_l_82375);
        real op1_e3_l_11237E#1 = RSub(camVmax2345,op1_e3_l_92378);
        real op1_e3_l_132381#1 = RMul(op1_e3_l_10237B,op1_e3_l_11237E);
        real rayV2384#2 = RAdd(op1_e3_l_92378,op1_e3_l_132381);
        tensor[3] op1_e3_l_322396#1 = VScale<3>(rayU2368,camU233F);
        tensor[3] op1_e3_l_332399#1 = VScale<3>(rayV2384,camV2341);
        tensor[3] UV239C#5 = VAdd<3>(op1_e3_l_322396,op1_e3_l_332399);
        if camOrtho2331 then goto JOIN23A2 else goto ASSIGN23FC
      JOIN23A2:  preds = [COND239F,ASSIGN23FD]
        tensor[3] _t23A0#1 = phi(UV239C,_t23A1)
        tensor[3] rayOrig23A3#1 = VAdd<3>(camEye232F,_t23A0);
        if camOrtho2331 then goto ASSIGN23A8 else goto ASSIGN23F2
      ASSIGN23A8:  preds = [COND23A6]
        real _t23A7#3 = 0.e0;
        tensor[3] _t23A9#1 = <tensor[3]>[_t23A7,_t23A7,_t23A7];
        goto JOIN23AD
      JOIN23AD:  preds = [ASSIGN23AA,ASSIGN23FA]
        tensor[3] _t23AB#1 = phi(_t23A9,_t23AC)
        tensor[3] rayVec23AE#4 = VAdd<3>(camN233D,_t23AB);
        real op1_e3_l_623B1#1 = VDot<3>(rayVec23AE,rayVec23AE);
        real op1_e3_l_723B4#2 = Sqrt(op1_e3_l_623B1);
        real op1_e3_l_823B7#1 = RMul(rayStep2337,op1_e3_l_723B4);
        real alphaFix23BA#1 = RDiv(op1_e3_l_823B7,refStep2339);
        real realLit23BE#2 = 0.1e1;
        real op1_e3_l_923BD#1 = RDiv(realLit23BE,op1_e3_l_723B4);
        tensor[3] op1_e3_l_1023C2#1 = VScale<3>(op1_e3_l_923BD,rayVec23AE);
        tensor[3] eyeDir23C5#1 = VNeg<3>(op1_e3_l_1023C2);
        real phKa23C8#1 = VIndex<4,0>(phong233B);
        real phKd23CA#1 = VIndex<4,1>(phong233B);
        real phKs23CC#1 = VIndex<4,2>(phong233B);
        real phSp23CE#1 = VIndex<4,3>(phong233B);
        real _t23D0#8 = 0.e0;
        tensor[4] rgba23D2#1 = <tensor[4]>[_t23D0,_t23D0,_t23D0,_t23D0];
        tensor[3] rgb23D4#1 = <tensor[3]>[_t23D0,_t23D0,_t23D0];
        self.rayU = rayU2368;
        self.rayV = rayV2384;
        self.rayN = camNearVsp2349;
        self.UV = UV239C;
        self.rayOrig = rayOrig23A3;
        self.rayVec = rayVec23AE;
        self.alphaFix = alphaFix23BA;
        self.eyeDir = eyeDir23C5;
        self.phKa = phKa23C8;
        self.phKd = phKd23CA;
        self.phKs = phKs23CC;
        self.phSp = phSp23CE;
        self.rgba = rgba23D2;
        self.raw = _t23D0;
        self.rgb = rgb23D4;
        self.transp = realLit23BE;
        return
      ASSIGN23F2:  preds = [COND23A6]
        real realLit23E9#1 = 0.1e1;
        real r23EA#3 = RDiv(realLit23E9,camDist2343);
        real r23EB#1 = TensorIndex<tensor[3],[0]>(UV239C);
        real r23EC#1 = RMul(r23EA,r23EB);
        real r23ED#1 = TensorIndex<tensor[3],[1]>(UV239C);
        real r23EE#1 = RMul(r23EA,r23ED);
        real r23EF#1 = TensorIndex<tensor[3],[2]>(UV239C);
        real r23F0#1 = RMul(r23EA,r23EF);
        tensor[3] _t23AC#1 = <tensor[3]>[r23EC,r23EE,r23F0];
        goto JOIN23AD
      ASSIGN23FC:  preds = [COND239F]
        real _t23FB#3 = 0.e0;
        tensor[3] _t23A1#1 = <tensor[3]>[_t23FB,_t23FB,_t23FB];
        goto JOIN23A2
    end state init
    method update
        ENTRY23FE:  preds = []
          image(IMAGE1D<double[3]>) cmap23FF#17 = globals.cmap2119;
          int _t2401#2 = globals._t213A;
          femData:Space _t2403#168 = globals._tX213B;
          femData:FemFunc _t2405#168 = globals._tXX213C;
          femData:Mesh block240B#1 = globals.block2115;
          real rayStep240D#1 = globals.rayStep2123;
          real transp0240F#1 = globals.transp02125;
          real thick2411#1 = globals.thick2126;
          real fStrTh2413#1 = globals.fStrTh2127;
          real fMaskTh2415#1 = globals.fMaskTh2128;
          real fBias2417#1 = globals.fBias2129;
          real maxAlpha2419#1 = globals.maxAlpha212A;
          tensor[3] mcNear241B#2 = globals.mcNear212D;
          tensor[3] mcFar241D#1 = globals.mcFar212E;
          tensor[2] cminmax241F#2 = globals.cminmax2130;
          real camNearVsp2421#2 = globals.camNearVsp2137;
          real camFarVsp2423#2 = globals.camFarVsp2138;
          tensor[3] litwsp2425#2 = globals.litwsp2139;
          real rayN2427#1 = self.rayN;
          tensor[3] rayOrig2429#1 = self.rayOrig;
          tensor[3] rayVec242B#1 = self.rayVec;
          real alphaFix242D#1 = self.alphaFix;
          tensor[3] eyeDir242F#1 = self.eyeDir;
          real phKa2431#1 = self.phKa;
          real phKd2433#1 = self.phKd;
          real phKs2435#2 = self.phKs;
          real phSp2437#1 = self.phSp;
          tensor[3] rgb2439#1 = self.rgb;
          real transp243B#2 = self.transp;
          real rayN243D#8 = RAdd(rayN2427,rayStep240D);
          bool _t2440#1 = GT<real>(rayN243D,camFarVsp2423);
          if _t2440 then goto SAVE2443 else goto JOIN2445
        SAVE2443:  preds = [COND2442]
          self.rayN = rayN243D;
          stabilize
          goto JOIN2445
        JOIN2445:  preds = [*STABILIZE2444,COND2442]
          tensor[3] op1_e3_l_52446#1 = VScale<3>(rayN243D,rayVec242B);
          tensor[3] pos2449#8 = VAdd<3>(rayOrig2429,op1_e3_l_52446);
          femData:RefCell _t244C#1 = ExtractFemItem<femData:RefCell,RefCell(Mesh)>(block240B);
          real _t244E#1 = 0.1e-8;
          bool _t2450#1 = ExtractFemItemN<[femData:Mesh,tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),0000,"",[],int>(_t244C,pos2449,_t244E);
          if _t2450 then goto ASSIGN2553 else goto ASSIGN5399
        ASSIGN2553:  preds = [COND2452]
          int ilit2454#1 = 84;
          int mulRes2455#84 = IMul(_t2401,ilit2454);
          int idx2458#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,mulRes2455);
          int ilit2459#86 = 1;
          int addRes245A#1 = IAdd(mulRes2455,ilit2459);
          int idx245B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245A);
          int ilit245C#1 = 2;
          int addRes245D#1 = IAdd(mulRes2455,ilit245C);
          int idx245E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes245D);
          int ilit245F#1 = 3;
          int addRes2460#1 = IAdd(mulRes2455,ilit245F);
          int idx2461#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2460);
          int ilit2462#1 = 4;
          int addRes2463#1 = IAdd(mulRes2455,ilit2462);
          int idx2464#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2463);
          int ilit2465#1 = 5;
          int addRes2466#1 = IAdd(mulRes2455,ilit2465);
          int idx2467#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2466);
          int ilit2468#1 = 6;
          int addRes2469#1 = IAdd(mulRes2455,ilit2468);
          int idx246A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2469);
          int ilit246B#1 = 7;
          int addRes246C#1 = IAdd(mulRes2455,ilit246B);
          int idx246D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246C);
          int ilit246E#1 = 8;
          int addRes246F#1 = IAdd(mulRes2455,ilit246E);
          int idx2470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes246F);
          int ilit2471#1 = 9;
          int addRes2472#1 = IAdd(mulRes2455,ilit2471);
          int idx2473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2472);
          int ilit2474#1 = 10;
          int addRes2475#1 = IAdd(mulRes2455,ilit2474);
          int idx2476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2475);
          int ilit2477#1 = 11;
          int addRes2478#1 = IAdd(mulRes2455,ilit2477);
          int idx2479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2478);
          int ilit247A#1 = 12;
          int addRes247B#1 = IAdd(mulRes2455,ilit247A);
          int idx247C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247B);
          int ilit247D#1 = 13;
          int addRes247E#1 = IAdd(mulRes2455,ilit247D);
          int idx247F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes247E);
          int ilit2480#1 = 14;
          int addRes2481#1 = IAdd(mulRes2455,ilit2480);
          int idx2482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2481);
          int ilit2483#1 = 15;
          int addRes2484#1 = IAdd(mulRes2455,ilit2483);
          int idx2485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2484);
          int ilit2486#1 = 16;
          int addRes2487#1 = IAdd(mulRes2455,ilit2486);
          int idx2488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2487);
          int ilit2489#1 = 17;
          int addRes248A#1 = IAdd(mulRes2455,ilit2489);
          int idx248B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248A);
          int ilit248C#1 = 18;
          int addRes248D#1 = IAdd(mulRes2455,ilit248C);
          int idx248E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes248D);
          int ilit248F#1 = 19;
          int addRes2490#1 = IAdd(mulRes2455,ilit248F);
          int idx2491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2490);
          int ilit2492#1 = 20;
          int addRes2493#1 = IAdd(mulRes2455,ilit2492);
          int idx2494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2493);
          int ilit2495#1 = 21;
          int addRes2496#1 = IAdd(mulRes2455,ilit2495);
          int idx2497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2496);
          int ilit2498#1 = 22;
          int addRes2499#1 = IAdd(mulRes2455,ilit2498);
          int idx249A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2499);
          int ilit249B#1 = 23;
          int addRes249C#1 = IAdd(mulRes2455,ilit249B);
          int idx249D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249C);
          int ilit249E#1 = 24;
          int addRes249F#1 = IAdd(mulRes2455,ilit249E);
          int idx24A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes249F);
          int ilit24A1#1 = 25;
          int addRes24A2#1 = IAdd(mulRes2455,ilit24A1);
          int idx24A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A2);
          int ilit24A4#1 = 26;
          int addRes24A5#1 = IAdd(mulRes2455,ilit24A4);
          int idx24A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A5);
          int ilit24A7#1 = 27;
          int addRes24A8#1 = IAdd(mulRes2455,ilit24A7);
          int idx24A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24A8);
          int ilit24AA#1 = 28;
          int addRes24AB#1 = IAdd(mulRes2455,ilit24AA);
          int idx24AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AB);
          int ilit24AD#1 = 29;
          int addRes24AE#1 = IAdd(mulRes2455,ilit24AD);
          int idx24AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24AE);
          int ilit24B0#1 = 30;
          int addRes24B1#1 = IAdd(mulRes2455,ilit24B0);
          int idx24B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B1);
          int ilit24B3#1 = 31;
          int addRes24B4#1 = IAdd(mulRes2455,ilit24B3);
          int idx24B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B4);
          int ilit24B6#1 = 32;
          int addRes24B7#1 = IAdd(mulRes2455,ilit24B6);
          int idx24B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24B7);
          int ilit24B9#1 = 33;
          int addRes24BA#1 = IAdd(mulRes2455,ilit24B9);
          int idx24BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BA);
          int ilit24BC#1 = 34;
          int addRes24BD#1 = IAdd(mulRes2455,ilit24BC);
          int idx24BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24BD);
          int ilit24BF#1 = 35;
          int addRes24C0#1 = IAdd(mulRes2455,ilit24BF);
          int idx24C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C0);
          int ilit24C2#1 = 36;
          int addRes24C3#1 = IAdd(mulRes2455,ilit24C2);
          int idx24C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C3);
          int ilit24C5#1 = 37;
          int addRes24C6#1 = IAdd(mulRes2455,ilit24C5);
          int idx24C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C6);
          int ilit24C8#1 = 38;
          int addRes24C9#1 = IAdd(mulRes2455,ilit24C8);
          int idx24CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24C9);
          int ilit24CB#1 = 39;
          int addRes24CC#1 = IAdd(mulRes2455,ilit24CB);
          int idx24CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CC);
          int ilit24CE#1 = 40;
          int addRes24CF#1 = IAdd(mulRes2455,ilit24CE);
          int idx24D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24CF);
          int ilit24D1#1 = 41;
          int addRes24D2#1 = IAdd(mulRes2455,ilit24D1);
          int idx24D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D2);
          int ilit24D4#1 = 42;
          int addRes24D5#1 = IAdd(mulRes2455,ilit24D4);
          int idx24D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D5);
          int ilit24D7#1 = 43;
          int addRes24D8#1 = IAdd(mulRes2455,ilit24D7);
          int idx24D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24D8);
          int ilit24DA#1 = 44;
          int addRes24DB#1 = IAdd(mulRes2455,ilit24DA);
          int idx24DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DB);
          int ilit24DD#1 = 45;
          int addRes24DE#1 = IAdd(mulRes2455,ilit24DD);
          int idx24DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24DE);
          int ilit24E0#1 = 46;
          int addRes24E1#1 = IAdd(mulRes2455,ilit24E0);
          int idx24E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E1);
          int ilit24E3#1 = 47;
          int addRes24E4#1 = IAdd(mulRes2455,ilit24E3);
          int idx24E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E4);
          int ilit24E6#1 = 48;
          int addRes24E7#1 = IAdd(mulRes2455,ilit24E6);
          int idx24E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24E7);
          int ilit24E9#1 = 49;
          int addRes24EA#1 = IAdd(mulRes2455,ilit24E9);
          int idx24EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24EA);
          int ilit24EC#1 = 50;
          int addRes24ED#1 = IAdd(mulRes2455,ilit24EC);
          int idx24EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24ED);
          int ilit24EF#1 = 51;
          int addRes24F0#1 = IAdd(mulRes2455,ilit24EF);
          int idx24F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F0);
          int ilit24F2#1 = 52;
          int addRes24F3#1 = IAdd(mulRes2455,ilit24F2);
          int idx24F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F3);
          int ilit24F5#1 = 53;
          int addRes24F6#1 = IAdd(mulRes2455,ilit24F5);
          int idx24F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F6);
          int ilit24F8#1 = 54;
          int addRes24F9#1 = IAdd(mulRes2455,ilit24F8);
          int idx24FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24F9);
          int ilit24FB#1 = 55;
          int addRes24FC#1 = IAdd(mulRes2455,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FC);
          int ilit24FE#1 = 56;
          int addRes24FF#1 = IAdd(mulRes2455,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes24FF);
          int ilit2501#1 = 57;
          int addRes2502#1 = IAdd(mulRes2455,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2502);
          int ilit2504#1 = 58;
          int addRes2505#1 = IAdd(mulRes2455,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2505);
          int ilit2507#1 = 59;
          int addRes2508#1 = IAdd(mulRes2455,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2508);
          int ilit250A#1 = 60;
          int addRes250B#1 = IAdd(mulRes2455,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250B);
          int ilit250D#1 = 61;
          int addRes250E#1 = IAdd(mulRes2455,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes250E);
          int ilit2510#1 = 62;
          int addRes2511#1 = IAdd(mulRes2455,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2511);
          int ilit2513#1 = 63;
          int addRes2514#1 = IAdd(mulRes2455,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2514);
          int ilit2516#1 = 64;
          int addRes2517#1 = IAdd(mulRes2455,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2517);
          int ilit2519#1 = 65;
          int addRes251A#1 = IAdd(mulRes2455,ilit2519);
          int idx251B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251A);
          int ilit251C#1 = 66;
          int addRes251D#1 = IAdd(mulRes2455,ilit251C);
          int idx251E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes251D);
          int ilit251F#1 = 67;
          int addRes2520#1 = IAdd(mulRes2455,ilit251F);
          int idx2521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2520);
          int ilit2522#1 = 68;
          int addRes2523#1 = IAdd(mulRes2455,ilit2522);
          int idx2524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2523);
          int ilit2525#1 = 69;
          int addRes2526#1 = IAdd(mulRes2455,ilit2525);
          int idx2527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2526);
          int ilit2528#1 = 70;
          int addRes2529#1 = IAdd(mulRes2455,ilit2528);
          int idx252A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2529);
          int ilit252B#1 = 71;
          int addRes252C#1 = IAdd(mulRes2455,ilit252B);
          int idx252D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252C);
          int ilit252E#1 = 72;
          int addRes252F#1 = IAdd(mulRes2455,ilit252E);
          int idx2530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes252F);
          int ilit2531#1 = 73;
          int addRes2532#1 = IAdd(mulRes2455,ilit2531);
          int idx2533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2532);
          int ilit2534#1 = 74;
          int addRes2535#1 = IAdd(mulRes2455,ilit2534);
          int idx2536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2535);
          int ilit2537#1 = 75;
          int addRes2538#1 = IAdd(mulRes2455,ilit2537);
          int idx2539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2538);
          int ilit253A#1 = 76;
          int addRes253B#1 = IAdd(mulRes2455,ilit253A);
          int idx253C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253B);
          int ilit253D#1 = 77;
          int addRes253E#1 = IAdd(mulRes2455,ilit253D);
          int idx253F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes253E);
          int ilit2540#1 = 78;
          int addRes2541#1 = IAdd(mulRes2455,ilit2540);
          int idx2542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2541);
          int ilit2543#1 = 79;
          int addRes2544#1 = IAdd(mulRes2455,ilit2543);
          int idx2545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2544);
          int ilit2546#1 = 80;
          int addRes2547#1 = IAdd(mulRes2455,ilit2546);
          int idx2548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2547);
          int ilit2549#1 = 81;
          int addRes254A#1 = IAdd(mulRes2455,ilit2549);
          int idx254B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254A);
          int ilit254C#1 = 82;
          int addRes254D#1 = IAdd(mulRes2455,ilit254C);
          int idx254E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes254D);
          int ilit254F#1 = 83;
          int addRes2550#1 = IAdd(mulRes2455,ilit254F);
          int idx2551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes2550);
          int mulRes2657#1 = IMul(ilit2459,idx2458);
          int mulRes2659#1 = IMul(ilit2459,idx245B);
          int mulRes265C#1 = IMul(ilit2459,idx245E);
          int mulRes265F#1 = IMul(ilit2459,idx2461);
          int mulRes2662#1 = IMul(ilit2459,idx2464);
          int mulRes2665#1 = IMul(ilit2459,idx2467);
          int mulRes2668#1 = IMul(ilit2459,idx246A);
          int mulRes266B#1 = IMul(ilit2459,idx246D);
          int mulRes266E#1 = IMul(ilit2459,idx2470);
          int mulRes2671#1 = IMul(ilit2459,idx2473);
          int mulRes2674#1 = IMul(ilit2459,idx2476);
          int mulRes2677#1 = IMul(ilit2459,idx2479);
          int mulRes267A#1 = IMul(ilit2459,idx247C);
          int mulRes267D#1 = IMul(ilit2459,idx247F);
          int mulRes2680#1 = IMul(ilit2459,idx2482);
          int mulRes2683#1 = IMul(ilit2459,idx2485);
          int mulRes2686#1 = IMul(ilit2459,idx2488);
          int mulRes2689#1 = IMul(ilit2459,idx248B);
          int mulRes268C#1 = IMul(ilit2459,idx248E);
          int mulRes268F#1 = IMul(ilit2459,idx2491);
          int mulRes2692#1 = IMul(ilit2459,idx2494);
          int mulRes2695#1 = IMul(ilit2459,idx2497);
          int mulRes2698#1 = IMul(ilit2459,idx249A);
          int mulRes269B#1 = IMul(ilit2459,idx249D);
          int mulRes269E#1 = IMul(ilit2459,idx24A0);
          int mulRes26A1#1 = IMul(ilit2459,idx24A3);
          int mulRes26A4#1 = IMul(ilit2459,idx24A6);
          int mulRes26A7#1 = IMul(ilit2459,idx24A9);
          int mulRes26AA#1 = IMul(ilit2459,idx24AC);
          int mulRes26AD#1 = IMul(ilit2459,idx24AF);
          int mulRes26B0#1 = IMul(ilit2459,idx24B2);
          int mulRes26B3#1 = IMul(ilit2459,idx24B5);
          int mulRes26B6#1 = IMul(ilit2459,idx24B8);
          int mulRes26B9#1 = IMul(ilit2459,idx24BB);
          int mulRes26BC#1 = IMul(ilit2459,idx24BE);
          int mulRes26BF#1 = IMul(ilit2459,idx24C1);
          int mulRes26C2#1 = IMul(ilit2459,idx24C4);
          int mulRes26C5#1 = IMul(ilit2459,idx24C7);
          int mulRes26C8#1 = IMul(ilit2459,idx24CA);
          int mulRes26CB#1 = IMul(ilit2459,idx24CD);
          int mulRes26CE#1 = IMul(ilit2459,idx24D0);
          int mulRes26D1#1 = IMul(ilit2459,idx24D3);
          int mulRes26D4#1 = IMul(ilit2459,idx24D6);
          int mulRes26D7#1 = IMul(ilit2459,idx24D9);
          int mulRes26DA#1 = IMul(ilit2459,idx24DC);
          int mulRes26DD#1 = IMul(ilit2459,idx24DF);
          int mulRes26E0#1 = IMul(ilit2459,idx24E2);
          int mulRes26E3#1 = IMul(ilit2459,idx24E5);
          int mulRes26E6#1 = IMul(ilit2459,idx24E8);
          int mulRes26E9#1 = IMul(ilit2459,idx24EB);
          int mulRes26EC#1 = IMul(ilit2459,idx24EE);
          int mulRes26EF#1 = IMul(ilit2459,idx24F1);
          int mulRes26F2#1 = IMul(ilit2459,idx24F4);
          int mulRes26F5#1 = IMul(ilit2459,idx24F7);
          int mulRes26F8#1 = IMul(ilit2459,idx24FA);
          int mulRes26FB#1 = IMul(ilit2459,idx24FD);
          int mulRes26FE#1 = IMul(ilit2459,idx2500);
          int mulRes2701#1 = IMul(ilit2459,idx2503);
          int mulRes2704#1 = IMul(ilit2459,idx2506);
          int mulRes2707#1 = IMul(ilit2459,idx2509);
          int mulRes270A#1 = IMul(ilit2459,idx250C);
          int mulRes270D#1 = IMul(ilit2459,idx250F);
          int mulRes2710#1 = IMul(ilit2459,idx2512);
          int mulRes2713#1 = IMul(ilit2459,idx2515);
          int mulRes2716#1 = IMul(ilit2459,idx2518);
          int mulRes2719#1 = IMul(ilit2459,idx251B);
          int mulRes271C#1 = IMul(ilit2459,idx251E);
          int mulRes271F#1 = IMul(ilit2459,idx2521);
          int mulRes2722#1 = IMul(ilit2459,idx2524);
          int mulRes2725#1 = IMul(ilit2459,idx2527);
          int mulRes2728#1 = IMul(ilit2459,idx252A);
          int mulRes272B#1 = IMul(ilit2459,idx252D);
          int mulRes272E#1 = IMul(ilit2459,idx2530);
          int mulRes2731#1 = IMul(ilit2459,idx2533);
          int mulRes2734#1 = IMul(ilit2459,idx2536);
          int mulRes2737#1 = IMul(ilit2459,idx2539);
          int mulRes273A#1 = IMul(ilit2459,idx253C);
          int mulRes273D#1 = IMul(ilit2459,idx253F);
          int mulRes2740#1 = IMul(ilit2459,idx2542);
          int mulRes2743#1 = IMul(ilit2459,idx2545);
          int mulRes2746#1 = IMul(ilit2459,idx2548);
          int mulRes2749#1 = IMul(ilit2459,idx254B);
          int mulRes274C#1 = IMul(ilit2459,idx254E);
          int mulRes274F#1 = IMul(ilit2459,idx2551);
          real dof2750#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2657);
          real dof2751#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2659);
          real dof2752#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265C);
          real dof2753#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes265F);
          real dof2754#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2662);
          real dof2755#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2665);
          real dof2756#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2668);
          real dof2757#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266B);
          real dof2758#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes266E);
          real dof2759#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2671);
          real dof275A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2674);
          real dof275B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2677);
          real dof275C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267A);
          real dof275D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes267D);
          real dof275E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2680);
          real dof275F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2683);
          real dof2760#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2686);
          real dof2761#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2689);
          real dof2762#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268C);
          real dof2763#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes268F);
          real dof2764#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2692);
          real dof2765#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2695);
          real dof2766#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2698);
          real dof2767#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269B);
          real dof2768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes269E);
          real dof2769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A1);
          real dof276A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A4);
          real dof276B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26A7);
          real dof276C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AA);
          real dof276D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26AD);
          real dof276E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B0);
          real dof276F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B3);
          real dof2770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B6);
          real dof2771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26B9);
          real dof2772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BC);
          real dof2773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26BF);
          real dof2774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C2);
          real dof2775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C5);
          real dof2776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26C8);
          real dof2777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CB);
          real dof2778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26CE);
          real dof2779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D1);
          real dof277A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D4);
          real dof277B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26D7);
          real dof277C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DA);
          real dof277D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26DD);
          real dof277E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E0);
          real dof277F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E3);
          real dof2780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E6);
          real dof2781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26E9);
          real dof2782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EC);
          real dof2783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26EF);
          real dof2784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F2);
          real dof2785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F5);
          real dof2786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26F8);
          real dof2787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FB);
          real dof2788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes26FE);
          real dof2789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2701);
          real dof278A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2704);
          real dof278B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2707);
          real dof278C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270A);
          real dof278D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes270D);
          real dof278E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2710);
          real dof278F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2713);
          real dof2790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2716);
          real dof2791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2719);
          real dof2792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271C);
          real dof2793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes271F);
          real dof2794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2722);
          real dof2795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2725);
          real dof2796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2728);
          real dof2797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272B);
          real dof2798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes272E);
          real dof2799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2731);
          real dof279A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2734);
          real dof279B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2737);
          real dof279C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273A);
          real dof279D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes273D);
          real dof279E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2740);
          real dof279F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2743);
          real dof27A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2746);
          real dof27A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes2749);
          real dof27A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274C);
          real dof27A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes274F);
          tensor[84] dofs27A4#19 = <tensor[84]>[dof2750,dof2751,dof2752,dof2753,dof2754,dof2755,dof2756,dof2757,dof2758,dof2759,dof275A,dof275B,dof275C,dof275D,dof275E,dof275F,dof2760,dof2761,dof2762,dof2763,dof2764,dof2765,dof2766,dof2767,dof2768,dof2769,dof276A,dof276B,dof276C,dof276D,dof276E,dof276F,dof2770,dof2771,dof2772,dof2773,dof2774,dof2775,dof2776,dof2777,dof2778,dof2779,dof277A,dof277B,dof277C,dof277D,dof277E,dof277F,dof2780,dof2781,dof2782,dof2783,dof2784,dof2785,dof2786,dof2787,dof2788,dof2789,dof278A,dof278B,dof278C,dof278D,dof278E,dof278F,dof2790,dof2791,dof2792,dof2793,dof2794,dof2795,dof2796,dof2797,dof2798,dof2799,dof279A,dof279B,dof279C,dof279D,dof279E,dof279F,dof27A0,dof27A1,dof27A2,dof27A3];
          real varAcc28F8#20 = VIndex<3,0>(pos2449);
          real varAcc28F9#10 = VIndex<3,1>(pos2449);
          real varAcc28FA#10 = VIndex<3,2>(pos2449);
          real basisEval28FB#1023 = 0.e0;
          real coeff28FC#47 = 0.2e1;
          real one28FD#83 = 0.1e1;
          real prod28FE#9 = RMul(one28FD,one28FD);
          real prod28FF#3 = RMul(one28FD,prod28FE);
          real basisEval2900#9 = RMul(coeff28FC,prod28FF);
          real prod2902#5 = RMul(one28FD,varAcc28FA);
          real prod2903#5 = RMul(one28FD,prod2902);
          real basisEval2904#8 = RMul(coeff28FC,prod2903);
          real prod2906#5 = RMul(varAcc28F9,one28FD);
          real prod2907#5 = RMul(one28FD,prod2906);
          real basisEval2908#8 = RMul(coeff28FC,prod2907);
          real coeff2909#32 = 0.6e1;
          real prod290B#5 = RMul(varAcc28F8,prod28FE);
          real basisEval290C#5 = RMul(coeff2909,prod290B);
          real prod2290D#5 = RMul(varAcc28FA,varAcc28FA);
          real prod290E#4 = RMul(one28FD,prod2290D);
          real prod290F#6 = RMul(one28FD,prod290E);
          real basisEval2910#4 = RMul(coeff28FC,prod290F);
          real prod2911#4 = RMul(varAcc28F9,varAcc28FA);
          real prod2912#6 = RMul(one28FD,prod2911);
          real basisEval2913#5 = RMul(coeff28FC,prod2912);
          real prod22914#5 = RMul(varAcc28F9,varAcc28F9);
          real prod2915#4 = RMul(prod22914,one28FD);
          real prod2916#6 = RMul(one28FD,prod2915);
          real basisEval2917#4 = RMul(coeff28FC,prod2916);
          real prod2918#6 = RMul(varAcc28F8,prod2902);
          real basisEval2919#5 = RMul(coeff2909,prod2918);
          real prod291A#6 = RMul(varAcc28F8,prod2906);
          real basisEval291B#5 = RMul(coeff2909,prod291A);
          real coeff291C#19 = 0.12e2;
          real prod2291D#11 = RMul(varAcc28F8,varAcc28F8);
          real prod291E#6 = RMul(prod2291D,prod28FE);
          real basisEval291F#3 = RMul(coeff291C,prod291E);
          real prod32920#4 = RMul(prod2290D,varAcc28FA);
          real prod2921#3 = RMul(one28FD,prod32920);
          real prod2922#7 = RMul(one28FD,prod2921);
          real basisEval2923#4 = RMul(coeff28FC,prod2922);
          real prod2924#3 = RMul(varAcc28F9,prod2290D);
          real prod2925#9 = RMul(one28FD,prod2924);
          real basisEval2926#3 = RMul(coeff28FC,prod2925);
          real prod2927#3 = RMul(prod22914,varAcc28FA);
          real prod2928#9 = RMul(one28FD,prod2927);
          real basisEval2929#3 = RMul(coeff28FC,prod2928);
          real prod3292A#4 = RMul(prod22914,varAcc28F9);
          real prod292B#3 = RMul(prod3292A,one28FD);
          real prod292C#7 = RMul(one28FD,prod292B);
          real basisEval292D#4 = RMul(coeff28FC,prod292C);
          real prod292E#9 = RMul(varAcc28F8,prod290E);
          real basisEval292F#6 = RMul(coeff2909,prod292E);
          real prod2930#6 = RMul(varAcc28F8,prod2911);
          real basisEval2931#3 = RMul(coeff2909,prod2930);
          real prod2932#9 = RMul(varAcc28F8,prod2915);
          real basisEval2933#6 = RMul(coeff2909,prod2932);
          real prod2934#9 = RMul(prod2291D,prod2902);
          real basisEval2935#2 = RMul(coeff291C,prod2934);
          real prod2936#9 = RMul(prod2291D,prod2906);
          real basisEval2937#2 = RMul(coeff291C,prod2936);
          real coeff2938#9 = 0.20e2;
          real prod32939#7 = RMul(prod2291D,varAcc28F8);
          real prod293A#7 = RMul(prod32939,prod28FE);
          real basisEval293B#3 = RMul(coeff2938,prod293A);
          real prod4293C#3 = RMul(prod32920,varAcc28FA);
          real prod293D#2 = RMul(one28FD,prod4293C);
          real prod293E#4 = RMul(one28FD,prod293D);
          real basisEval293F#2 = RMul(coeff28FC,prod293E);
          real prod2940#2 = RMul(varAcc28F9,prod32920);
          real prod2941#6 = RMul(one28FD,prod2940);
          real basisEval2942#3 = RMul(coeff28FC,prod2941);
          real prod2943#2 = RMul(prod22914,prod2290D);
          real prod2944#5 = RMul(one28FD,prod2943);
          real basisEval2945#1 = RMul(coeff28FC,prod2944);
          real prod2946#2 = RMul(prod3292A,varAcc28FA);
          real prod2947#6 = RMul(one28FD,prod2946);
          real basisEval2948#3 = RMul(coeff28FC,prod2947);
          real prod42949#3 = RMul(prod3292A,varAcc28F9);
          real prod294A#2 = RMul(prod42949,one28FD);
          real prod294B#4 = RMul(one28FD,prod294A);
          real basisEval294C#2 = RMul(coeff28FC,prod294B);
          real prod294D#6 = RMul(varAcc28F8,prod2921);
          real basisEval294E#1 = RMul(coeff2909,prod294D);
          real prod294F#5 = RMul(varAcc28F8,prod2924);
          real basisEval2950#4 = RMul(coeff2909,prod294F);
          real prod2951#5 = RMul(varAcc28F8,prod2927);
          real basisEval2952#4 = RMul(coeff2909,prod2951);
          real prod2953#6 = RMul(varAcc28F8,prod292B);
          real basisEval2954#1 = RMul(coeff2909,prod2953);
          real prod2955#5 = RMul(prod2291D,prod290E);
          real basisEval2956#2 = RMul(coeff291C,prod2955);
          real prod2957#5 = RMul(prod2291D,prod2911);
          real basisEval2958#1 = RMul(coeff291C,prod2957);
          real prod2959#5 = RMul(prod2291D,prod2915);
          real basisEval295A#2 = RMul(coeff291C,prod2959);
          real prod295B#6 = RMul(prod32939,prod2902);
          real basisEval295C#1 = RMul(coeff2938,prod295B);
          real prod295D#6 = RMul(prod32939,prod2906);
          real basisEval295E#1 = RMul(coeff2938,prod295D);
          real coeff295F#3 = 0.30e2;
          real prod42960#4 = RMul(prod32939,varAcc28F8);
          real prod2961#4 = RMul(prod42960,prod28FE);
          real basisEval2962#1 = RMul(coeff295F,prod2961);
          real basisEval2963#7 = RMul(one28FD,prod28FF);
          real basisEval2964#3 = RMul(one28FD,prod2903);
          real basisEval2965#8 = RMul(coeff28FC,prod290B);
          real basisEval2966#3 = RMul(one28FD,prod290F);
          real coeff2967#24 = 0.3e1;
          real basisEval2968#4 = RMul(coeff2967,prod2916);
          real basisEval2969#5 = RMul(coeff28FC,prod2918);
          real coeff296A#34 = 0.4e1;
          real basisEval296B#4 = RMul(coeff296A,prod291A);
          real basisEval296C#4 = RMul(coeff2967,prod291E);
          real basisEval296D#3 = RMul(one28FD,prod2922);
          real basisEval296E#2 = RMul(coeff2967,prod2928);
          real basisEval296F#4 = RMul(coeff296A,prod292C);
          real basisEval2970#3 = RMul(coeff28FC,prod292E);
          real basisEval2971#3 = RMul(coeff296A,prod2930);
          real basisEval2972#2 = RMul(coeff2967,prod2934);
          real basisEval2973#6 = RMul(coeff2909,prod2936);
          real basisEval2974#4 = RMul(coeff296A,prod293A);
          real basisEval2975#3 = RMul(one28FD,prod293E);
          real basisEval2976#4 = RMul(coeff2967,prod2944);
          real basisEval2977#2 = RMul(coeff296A,prod2947);
          real coeff2978#9 = 0.5e1;
          real basisEval2979#3 = RMul(coeff2978,prod294B);
          real basisEval297A#3 = RMul(coeff28FC,prod294D);
          real basisEval297B#1 = RMul(coeff296A,prod294F);
          real coeff297C#10 = 0.8e1;
          real basisEval297D#1 = RMul(coeff297C,prod2953);
          real basisEval297E#4 = RMul(coeff2967,prod2955);
          real basisEval297F#4 = RMul(coeff2909,prod2957);
          real coeff2980#3 = 0.9e1;
          real basisEval2981#1 = RMul(coeff2980,prod2959);
          real basisEval2982#2 = RMul(coeff296A,prod295B);
          real basisEval2983#1 = RMul(coeff297C,prod295D);
          real basisEval2984#3 = RMul(coeff2978,prod2961);
          real basisEval2985#3 = RMul(one28FD,prod2907);
          real basisEval2986#4 = RMul(coeff2967,prod290F);
          real basisEval2987#3 = RMul(one28FD,prod2916);
          real basisEval2988#4 = RMul(coeff296A,prod2918);
          real basisEval2989#5 = RMul(coeff28FC,prod291A);
          real basisEval298A#4 = RMul(coeff296A,prod2922);
          real basisEval298B#2 = RMul(coeff2967,prod2925);
          real basisEval298C#3 = RMul(one28FD,prod292C);
          real basisEval298D#3 = RMul(coeff28FC,prod2932);
          real basisEval298E#6 = RMul(coeff2909,prod2934);
          real basisEval298F#2 = RMul(coeff2967,prod2936);
          real basisEval2990#3 = RMul(coeff2978,prod293E);
          real basisEval2991#2 = RMul(coeff296A,prod2941);
          real basisEval2992#3 = RMul(one28FD,prod294B);
          real basisEval2993#1 = RMul(coeff297C,prod294D);
          real basisEval2994#1 = RMul(coeff296A,prod2951);
          real basisEval2995#3 = RMul(coeff28FC,prod2953);
          real basisEval2996#1 = RMul(coeff2980,prod2955);
          real basisEval2997#4 = RMul(coeff2967,prod2959);
          real basisEval2998#1 = RMul(coeff297C,prod295B);
          real basisEval2999#2 = RMul(coeff296A,prod295D);
          real basisEval299A#5 = RMul(coeff2909,prod2907);
          real basisEval299B#5 = RMul(coeff2909,prod2912);
          real basisEval299C#3 = RMul(coeff291C,prod2916);
          real basisEval299D#4 = RMul(coeff28FC,prod291E);
          real basisEval299E#6 = RMul(coeff2909,prod2925);
          real basisEval299F#2 = RMul(coeff291C,prod2928);
          real basisEval29A0#3 = RMul(coeff2938,prod292C);
          real basisEval29A1#2 = RMul(coeff291C,prod2932);
          real basisEval29A2#3 = RMul(coeff28FC,prod2934);
          real basisEval29A3#4 = RMul(coeff28FC,prod293A);
          real basisEval29A4#1 = RMul(coeff2909,prod2941);
          real basisEval29A5#2 = RMul(coeff291C,prod2944);
          real basisEval29A6#1 = RMul(coeff2938,prod2947);
          real basisEval29A7#1 = RMul(coeff295F,prod294B);
          real basisEval29A8#1 = RMul(coeff291C,prod2951);
          real basisEval29A9#1 = RMul(coeff2938,prod2953);
          real basisEval29AA#1 = RMul(coeff28FC,prod2955);
          real basisEval29AB#3 = RMul(coeff28FC,prod295B);
          real basisEval29AC#1 = RMul(coeff2909,prod295D);
          real basisEval29AD#2 = RMul(coeff28FC,prod2961);
          real basisEval29AE#3 = RMul(one28FD,prod290B);
          real basisEval29AF#4 = RMul(coeff296A,prod2912);
          real basisEval29B0#3 = RMul(one28FD,prod291E);
          real basisEval29B1#6 = RMul(coeff2909,prod2928);
          real basisEval29B2#2 = RMul(coeff2967,prod292E);
          real basisEval29B3#2 = RMul(coeff2967,prod2932);
          real basisEval29B4#3 = RMul(coeff28FC,prod2936);
          real basisEval29B5#3 = RMul(one28FD,prod293A);
          real basisEval29B6#1 = RMul(coeff297C,prod2941);
          real basisEval29B7#1 = RMul(coeff2980,prod2944);
          real basisEval29B8#1 = RMul(coeff297C,prod2947);
          real basisEval29B9#2 = RMul(coeff296A,prod294D);
          real basisEval29BA#2 = RMul(coeff296A,prod2953);
          real basisEval29BB#1 = RMul(coeff296A,prod2957);
          real basisEval29BC#3 = RMul(coeff28FC,prod295D);
          real basisEval29BD#3 = RMul(one28FD,prod2961);
          real basisEval29BE#5 = RMul(coeff2909,prod2903);
          real basisEval29BF#3 = RMul(coeff291C,prod290F);
          real basisEval29C0#3 = RMul(coeff2938,prod2922);
          real basisEval29C1#2 = RMul(coeff291C,prod2925);
          real basisEval29C2#2 = RMul(coeff291C,prod292E);
          real basisEval29C3#1 = RMul(coeff295F,prod293E);
          real basisEval29C4#1 = RMul(coeff2938,prod2941);
          real basisEval29C5#1 = RMul(coeff2909,prod2947);
          real basisEval29C6#1 = RMul(coeff2938,prod294D);
          real basisEval29C7#1 = RMul(coeff291C,prod294F);
          real basisEval29C8#1 = RMul(coeff28FC,prod2959);
          real basisEval29C9#1 = RMul(coeff2909,prod295B);
          tensor[84] intermediateCons29CA#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval2913,basisEval2917,basisEval2919,basisEval291B,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval2926,basisEval2929,basisEval292D,basisEval292F,basisEval2931,basisEval2933,basisEval2935,basisEval2937,basisEval293B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval2942,basisEval2945,basisEval2948,basisEval294C,basisEval294E,basisEval2950,basisEval2952,basisEval2954,basisEval2956,basisEval2958,basisEval295A,basisEval295C,basisEval295E,basisEval2962];
          tensor[84] intermediateCons29CB#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2964,basisEval2908,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2966,basisEval2913,basisEval2968,basisEval28FB,basisEval2969,basisEval296B,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval296D,basisEval2926,basisEval296E,basisEval296F,basisEval28FB,basisEval2970,basisEval2971,basisEval2933,basisEval28FB,basisEval2972,basisEval2973,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2975,basisEval2942,basisEval2976,basisEval2977,basisEval2979,basisEval28FB,basisEval297A,basisEval297B,basisEval2952,basisEval297D,basisEval28FB,basisEval297E,basisEval297F,basisEval2981,basisEval28FB,basisEval2982,basisEval2983,basisEval28FB,basisEval2984,basisEval28FB];
          tensor[84] intermediateCons29CC#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2985,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval2913,basisEval2987,basisEval28FB,basisEval2988,basisEval2989,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval298B,basisEval2929,basisEval298C,basisEval28FB,basisEval292F,basisEval2971,basisEval298D,basisEval28FB,basisEval298E,basisEval298F,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval2991,basisEval2976,basisEval2948,basisEval2992,basisEval28FB,basisEval2993,basisEval2950,basisEval2994,basisEval2995,basisEval28FB,basisEval2996,basisEval297F,basisEval2997,basisEval28FB,basisEval2998,basisEval2999,basisEval28FB,basisEval2984,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CD#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval299A,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval299B,basisEval299C,basisEval28FB,basisEval28FB,basisEval2969,basisEval291B,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval299E,basisEval299F,basisEval29A0,basisEval28FB,basisEval28FB,basisEval2970,basisEval2931,basisEval29A1,basisEval28FB,basisEval28FB,basisEval29A2,basisEval2973,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval293F,basisEval29A4,basisEval29A5,basisEval29A6,basisEval29A7,basisEval28FB,basisEval28FB,basisEval297A,basisEval2950,basisEval29A8,basisEval29A9,basisEval28FB,basisEval28FB,basisEval29AA,basisEval297F,basisEval295A,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29AC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CE#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval28FB,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval29AF,basisEval2968,basisEval28FB,basisEval28FB,basisEval2969,basisEval2989,basisEval28FB,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval299E,basisEval29B1,basisEval296F,basisEval28FB,basisEval28FB,basisEval29B2,basisEval2971,basisEval29B3,basisEval28FB,basisEval28FB,basisEval29A2,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2990,basisEval29B6,basisEval29B7,basisEval29B8,basisEval2979,basisEval28FB,basisEval28FB,basisEval29B9,basisEval2950,basisEval2952,basisEval29BA,basisEval28FB,basisEval28FB,basisEval297E,basisEval29BB,basisEval2997,basisEval28FB,basisEval28FB,basisEval29AB,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons29CF#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2908,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval299B,basisEval2917,basisEval28FB,basisEval28FB,basisEval2919,basisEval2989,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval29C1,basisEval29B1,basisEval292D,basisEval28FB,basisEval28FB,basisEval29C2,basisEval2931,basisEval298D,basisEval28FB,basisEval28FB,basisEval298E,basisEval29B4,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C3,basisEval29C4,basisEval29A5,basisEval29C5,basisEval294C,basisEval28FB,basisEval28FB,basisEval29C6,basisEval29C7,basisEval2952,basisEval2995,basisEval28FB,basisEval28FB,basisEval2956,basisEval297F,basisEval29C8,basisEval28FB,basisEval28FB,basisEval29C9,basisEval29BC,basisEval28FB,basisEval28FB,basisEval29AD,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          real vdot2AB3#11 = VDot<84>(dofs27A4,intermediateCons29CA);
          real vdot2AB5#17 = VDot<84>(dofs27A4,intermediateCons29CB);
          real vdot2AB7#17 = VDot<84>(dofs27A4,intermediateCons29CC);
          tensor[3] tensor2AB8#1 = <tensor[3]>[vdot2AB3,vdot2AB5,vdot2AB7];
          real vdot2ABC#11 = VDot<84>(dofs27A4,intermediateCons29CD);
          real vdot2ABE#17 = VDot<84>(dofs27A4,intermediateCons29CE);
          tensor[3] tensor2ABF#1 = <tensor[3]>[vdot2AB5,vdot2ABC,vdot2ABE];
          real vdot2AC5#11 = VDot<84>(dofs27A4,intermediateCons29CF);
          tensor[3] tensor2AC6#1 = <tensor[3]>[vdot2AB7,vdot2ABE,vdot2AC5];
          tensor[3,3] _t2AB1#1 = <tensor[3,3]>[vdot2AB3,vdot2AB5,vdot2AB7,vdot2AB5,vdot2ABC,vdot2ABE,vdot2AB7,vdot2ABE,vdot2AC5];
          real[3] _t2ADE#1 = EigenVals3x3(_t2AB1);
          real _t2AE2#1 = Subscript<real[3]>(_t2ADE,ilit2459);
          real basisEval2AFF#1 = RMul(one28FD,prod2912);
          real basisEval2B12#1 = RMul(one28FD,prod2925);
          real basisEval2B15#1 = RMul(one28FD,prod2928);
          real basisEval2B1D#3 = RMul(coeff28FC,prod2930);
          real basisEval2B2E#1 = RMul(one28FD,prod2941);
          real basisEval2B31#1 = RMul(one28FD,prod2944);
          real basisEval2B34#1 = RMul(one28FD,prod2947);
          real basisEval2B3C#2 = RMul(coeff28FC,prod294F);
          real basisEval2B3E#2 = RMul(coeff28FC,prod2951);
          real basisEval2B44#1 = RMul(coeff2967,prod2957);
          real prod52B4F#1 = RMul(prod4293C,varAcc28FA);
          real prod2B50#1 = RMul(one28FD,prod52B4F);
          real prod2B51#2 = RMul(one28FD,prod2B50);
          real basisEval2B52#2 = RMul(one28FD,prod2B51);
          real prod2B53#1 = RMul(varAcc28F9,prod4293C);
          real prod2B54#3 = RMul(one28FD,prod2B53);
          real basisEval2B55#1 = RMul(one28FD,prod2B54);
          real prod2B56#1 = RMul(prod22914,prod32920);
          real prod2B57#3 = RMul(one28FD,prod2B56);
          real basisEval2B58#1 = RMul(one28FD,prod2B57);
          real prod2B59#1 = RMul(prod3292A,prod2290D);
          real prod2B5A#3 = RMul(one28FD,prod2B59);
          real basisEval2B5B#1 = RMul(one28FD,prod2B5A);
          real prod2B5C#1 = RMul(prod42949,varAcc28FA);
          real prod2B5D#3 = RMul(one28FD,prod2B5C);
          real basisEval2B5E#1 = RMul(one28FD,prod2B5D);
          real prod52B5F#1 = RMul(prod42949,varAcc28F9);
          real prod2B60#1 = RMul(prod52B5F,one28FD);
          real prod2B61#2 = RMul(one28FD,prod2B60);
          real basisEval2B62#2 = RMul(one28FD,prod2B61);
          real prod2B63#3 = RMul(varAcc28F8,prod293D);
          real basisEval2B64#1 = RMul(coeff28FC,prod2B63);
          real prod2B65#2 = RMul(varAcc28F8,prod2940);
          real basisEval2B66#2 = RMul(coeff28FC,prod2B65);
          real prod2B67#2 = RMul(varAcc28F8,prod2943);
          real basisEval2B68#1 = RMul(coeff28FC,prod2B67);
          real prod2B69#2 = RMul(varAcc28F8,prod2946);
          real basisEval2B6A#2 = RMul(coeff28FC,prod2B69);
          real prod2B6B#3 = RMul(varAcc28F8,prod294A);
          real basisEval2B6C#1 = RMul(coeff28FC,prod2B6B);
          real prod2B6D#3 = RMul(prod2291D,prod2921);
          real basisEval2B6E#1 = RMul(coeff2967,prod2B6D);
          real prod2B6F#2 = RMul(prod2291D,prod2924);
          real basisEval2B70#2 = RMul(coeff2967,prod2B6F);
          real prod2B71#2 = RMul(prod2291D,prod2927);
          real basisEval2B72#2 = RMul(coeff2967,prod2B71);
          real prod2B73#3 = RMul(prod2291D,prod292B);
          real basisEval2B74#1 = RMul(coeff2967,prod2B73);
          real prod2B75#3 = RMul(prod32939,prod290E);
          real basisEval2B76#1 = RMul(coeff296A,prod2B75);
          real prod2B77#2 = RMul(prod32939,prod2911);
          real basisEval2B78#1 = RMul(coeff296A,prod2B77);
          real prod2B79#3 = RMul(prod32939,prod2915);
          real basisEval2B7A#1 = RMul(coeff296A,prod2B79);
          real prod2B7B#3 = RMul(prod42960,prod2902);
          real basisEval2B7C#1 = RMul(coeff2978,prod2B7B);
          real prod2B7D#3 = RMul(prod42960,prod2906);
          real basisEval2B7E#1 = RMul(coeff2978,prod2B7D);
          real prod52B80#1 = RMul(prod42960,varAcc28F8);
          real prod2B81#2 = RMul(prod52B80,prod28FE);
          real basisEval2B82#1 = RMul(coeff2909,prod2B81);
          real basisEval2B87#1 = RMul(one28FD,prod2918);
          real basisEval2B8C#1 = RMul(one28FD,prod292E);
          real basisEval2B8E#1 = RMul(one28FD,prod2934);
          real basisEval2B95#1 = RMul(one28FD,prod294D);
          real basisEval2B96#1 = RMul(coeff2967,prod2951);
          real basisEval2B98#1 = RMul(one28FD,prod2955);
          real basisEval2B99#2 = RMul(coeff28FC,prod2957);
          real basisEval2B9A#1 = RMul(one28FD,prod295B);
          real basisEval2B9D#1 = RMul(coeff28FC,prod2B54);
          real basisEval2B9E#1 = RMul(coeff2967,prod2B57);
          real basisEval2B9F#1 = RMul(coeff296A,prod2B5A);
          real basisEval2BA0#1 = RMul(coeff2978,prod2B5D);
          real basisEval2BA1#1 = RMul(coeff2909,prod2B61);
          real basisEval2BA2#1 = RMul(one28FD,prod2B63);
          real basisEval2BA3#2 = RMul(coeff2967,prod2B67);
          real basisEval2BA4#1 = RMul(coeff296A,prod2B69);
          real basisEval2BA5#1 = RMul(coeff2978,prod2B6B);
          real basisEval2BA6#1 = RMul(one28FD,prod2B6D);
          real basisEval2BA7#1 = RMul(coeff28FC,prod2B6F);
          real basisEval2BA8#1 = RMul(coeff296A,prod2B73);
          real basisEval2BA9#1 = RMul(one28FD,prod2B75);
          real basisEval2BAA#2 = RMul(coeff28FC,prod2B77);
          real basisEval2BAB#1 = RMul(coeff2967,prod2B79);
          real basisEval2BAC#1 = RMul(one28FD,prod2B7B);
          real basisEval2BAD#1 = RMul(coeff28FC,prod2B7D);
          real basisEval2BAE#2 = RMul(one28FD,prod2B81);
          real basisEval2BB1#1 = RMul(one28FD,prod291A);
          real basisEval2BB6#1 = RMul(one28FD,prod2932);
          real basisEval2BB8#1 = RMul(one28FD,prod2936);
          real basisEval2BBD#1 = RMul(coeff2967,prod294F);
          real basisEval2BBE#1 = RMul(one28FD,prod2953);
          real basisEval2BBF#1 = RMul(one28FD,prod2959);
          real basisEval2BC1#1 = RMul(one28FD,prod295D);
          real basisEval2BC2#1 = RMul(coeff2909,prod2B51);
          real basisEval2BC3#1 = RMul(coeff2978,prod2B54);
          real basisEval2BC4#1 = RMul(coeff296A,prod2B57);
          real basisEval2BC5#1 = RMul(coeff2967,prod2B5A);
          real basisEval2BC6#1 = RMul(coeff28FC,prod2B5D);
          real basisEval2BC7#1 = RMul(coeff2978,prod2B63);
          real basisEval2BC8#1 = RMul(coeff296A,prod2B65);
          real basisEval2BC9#1 = RMul(one28FD,prod2B6B);
          real basisEval2BCA#1 = RMul(coeff296A,prod2B6D);
          real basisEval2BCB#1 = RMul(coeff28FC,prod2B71);
          real basisEval2BCC#1 = RMul(one28FD,prod2B73);
          real basisEval2BCD#1 = RMul(coeff2967,prod2B75);
          real basisEval2BCE#1 = RMul(one28FD,prod2B79);
          real basisEval2BCF#1 = RMul(coeff28FC,prod2B7B);
          real basisEval2BD0#1 = RMul(one28FD,prod2B7D);
          tensor[84] intermediateCons2BD1#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2964,basisEval2985,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2966,basisEval2AFF,basisEval2987,basisEval2969,basisEval2989,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval296D,basisEval2B12,basisEval2B15,basisEval298C,basisEval2970,basisEval2B1D,basisEval298D,basisEval2972,basisEval298F,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2975,basisEval2B2E,basisEval2B31,basisEval2B34,basisEval2992,basisEval297A,basisEval2B3C,basisEval2B3E,basisEval2995,basisEval297E,basisEval2B44,basisEval2997,basisEval2982,basisEval2999,basisEval2984,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2B52,basisEval2B55,basisEval2B58,basisEval2B5B,basisEval2B5E,basisEval2B62,basisEval2B64,basisEval2B66,basisEval2B68,basisEval2B6A,basisEval2B6C,basisEval2B6E,basisEval2B70,basisEval2B72,basisEval2B74,basisEval2B76,basisEval2B78,basisEval2B7A,basisEval2B7C,basisEval2B7E,basisEval2B82];
          tensor[84] intermediateCons2BD2#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval2964,basisEval2908,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval2966,basisEval2913,basisEval2968,basisEval28FB,basisEval2B87,basisEval2989,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval296D,basisEval2926,basisEval296E,basisEval296F,basisEval28FB,basisEval2B8C,basisEval2B1D,basisEval29B3,basisEval28FB,basisEval2B8E,basisEval29B4,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval2975,basisEval2942,basisEval2976,basisEval2977,basisEval2979,basisEval28FB,basisEval2B95,basisEval2B3C,basisEval2B96,basisEval29BA,basisEval28FB,basisEval2B98,basisEval2B99,basisEval2997,basisEval28FB,basisEval2B9A,basisEval29BC,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval2B52,basisEval2B9D,basisEval2B9E,basisEval2B9F,basisEval2BA0,basisEval2BA1,basisEval28FB,basisEval2BA2,basisEval2B66,basisEval2BA3,basisEval2BA4,basisEval2BA5,basisEval28FB,basisEval2BA6,basisEval2BA7,basisEval2B72,basisEval2BA8,basisEval28FB,basisEval2BA9,basisEval2BAA,basisEval2BAB,basisEval28FB,basisEval2BAC,basisEval2BAD,basisEval28FB,basisEval2BAE,basisEval28FB];
          tensor[84] intermediateCons2BD3#1 = <tensor[84]>[basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval2904,basisEval2985,basisEval28FB,basisEval29AE,basisEval28FB,basisEval28FB,basisEval2986,basisEval2913,basisEval2987,basisEval28FB,basisEval2969,basisEval2BB1,basisEval28FB,basisEval29B0,basisEval28FB,basisEval28FB,basisEval298A,basisEval298B,basisEval2929,basisEval298C,basisEval28FB,basisEval29B2,basisEval2B1D,basisEval2BB6,basisEval28FB,basisEval29A2,basisEval2BB8,basisEval28FB,basisEval29B5,basisEval28FB,basisEval28FB,basisEval2990,basisEval2991,basisEval2976,basisEval2948,basisEval2992,basisEval28FB,basisEval29B9,basisEval2BBD,basisEval2B3E,basisEval2BBE,basisEval28FB,basisEval297E,basisEval2B99,basisEval2BBF,basisEval28FB,basisEval29AB,basisEval2BC1,basisEval28FB,basisEval29BD,basisEval28FB,basisEval28FB,basisEval2BC2,basisEval2BC3,basisEval2BC4,basisEval2BC5,basisEval2BC6,basisEval2B62,basisEval28FB,basisEval2BC7,basisEval2BC8,basisEval2BA3,basisEval2B6A,basisEval2BC9,basisEval28FB,basisEval2BCA,basisEval2B70,basisEval2BCB,basisEval2BCC,basisEval28FB,basisEval2BCD,basisEval2BAA,basisEval2BCE,basisEval28FB,basisEval2BCF,basisEval2BD0,basisEval28FB,basisEval2BAE,basisEval28FB,basisEval28FB];
          real vdot2CC8#19 = VDot<84>(dofs27A4,intermediateCons2BD1);
          real vdot2CCA#19 = VDot<84>(dofs27A4,intermediateCons2BD2);
          real vdot2CCC#19 = VDot<84>(dofs27A4,intermediateCons2BD3);
          tensor[3] probe_l_62CC6#5 = <tensor[3]>[vdot2CC8,vdot2CCA,vdot2CCC];
          real op1_e3_l_82CD5#1 = VDot<3>(probe_l_62CC6,probe_l_62CC6);
          real op1_e3_l_92CD8#1 = Sqrt(op1_e3_l_82CD5);
          real op1_e3_l_102CDB#1 = RNeg(_t2AE2);
          real op1_e3_l_112CDE#1 = RAdd(fBias2417,op1_e3_l_92CD8);
          real _t2CE1#1 = RDiv(op1_e3_l_102CDB,op1_e3_l_112CDE);
          bool _t2CE4#1 = GT<real>(_t2CE1,fStrTh2413);
          if _t2CE4 then goto ASSIGN592C else goto ASSIGN5398
        ASSIGN592C:  preds = [COND2CE6]
          bool _t2CE9#1 = GTE<real>(one28FD,fMaskTh2415);
          if _t2CE9 then goto ASSIGN592D else goto ASSIGN5397
        ASSIGN592D:  preds = [COND2CEB]
          real vdot2CEE#15 = VDot<3>(tensor2AB8,probe_l_62CC6);
          real vdot2CF0#15 = VDot<3>(tensor2ABF,probe_l_62CC6);
          real vdot2CF2#15 = VDot<3>(tensor2AC6,probe_l_62CC6);
          real r2CFE#11 = RMul(basisEval28FB,one28FD);
          real r2CFF#25 = RMul(basisEval28FB,basisEval28FB);
          real r2D00#3 = RAdd(r2CFE,r2CFF);
          real r2D01#1 = RAdd(r2D00,r2CFF);
          real r2D02#12 = RAdd(r2D01,r2CFF);
          real r2D03#3 = RAdd(r2CFF,r2CFE);
          real r2D04#1 = RAdd(r2D03,r2CFF);
          real r2D05#12 = RAdd(r2D04,r2CFF);
          real r2D06#3 = RAdd(r2CFF,r2CFF);
          real r2D07#1 = RAdd(r2D06,r2CFE);
          real r2D08#12 = RAdd(r2D07,r2CFF);
          real r2D0A#15 = RMul(one28FD,basisEval28FB);
          real r2D0B#1 = RAdd(r2D00,r2D0A);
          real r2D0C#4 = RAdd(r2D0B,r2D0A);
          real r2D0D#1 = RAdd(r2D03,r2D0A);
          real r2D0E#4 = RAdd(r2D0D,r2D0A);
          real r2D10#1 = RAdd(r2D06,prod28FE);
          real r2D11#4 = RAdd(r2D10,r2D0A);
          real realLit2D13#2 = -0.1e1;
          real r2D14#15 = RMul(realLit2D13,basisEval28FB);
          real r2D15#1 = RAdd(r2CFE,r2D14);
          real r2D16#1 = RAdd(r2D15,r2CFF);
          real r2D17#4 = RAdd(r2D16,r2D0A);
          real r2D18#3 = RMul(realLit2D13,one28FD);
          real r2D19#1 = RAdd(r2CFF,r2D18);
          real r2D1A#1 = RAdd(r2D19,r2CFF);
          real r2D1B#4 = RAdd(r2D1A,r2D0A);
          real r2D1C#1 = RAdd(r2CFF,r2D14);
          real r2D1D#1 = RAdd(r2D1C,r2CFE);
          real r2D1E#4 = RAdd(r2D1D,r2D0A);
          real r2D21#1 = RAdd(r2D00,r2D14);
          real r2D22#4 = RAdd(r2D21,r2D14);
          real r2D23#1 = RAdd(r2D03,r2D14);
          real r2D24#4 = RAdd(r2D23,r2D14);
          real r2D25#1 = RAdd(r2D06,r2D18);
          real r2D26#4 = RAdd(r2D25,r2D14);
          real r2D28#1 = RAdd(prod28FE,r2CFF);
          real r2D29#1 = RAdd(r2D28,r2CFF);
          real r2D2A#4 = RAdd(r2D29,r2D0A);
          real r2D2B#1 = RAdd(r2D0A,r2CFE);
          real r2D2C#1 = RAdd(r2D2B,r2CFF);
          real r2D2D#4 = RAdd(r2D2C,r2D0A);
          real r2D2E#1 = RAdd(r2D0A,r2CFF);
          real r2D2F#1 = RAdd(r2D2E,r2CFE);
          real r2D30#4 = RAdd(r2D2F,r2D0A);
          real r2D33#1 = RAdd(r2CFE,r2D0A);
          real r2D34#1 = RAdd(r2D33,r2CFF);
          real r2D35#4 = RAdd(r2D34,r2D14);
          real r2D36#1 = RAdd(r2CFF,prod28FE);
          real r2D37#1 = RAdd(r2D36,r2CFF);
          real r2D38#4 = RAdd(r2D37,r2D14);
          real r2D39#1 = RAdd(r2CFF,r2D0A);
          real r2D3A#1 = RAdd(r2D39,r2CFE);
          real r2D3B#4 = RAdd(r2D3A,r2D14);
          real r2D3D#1 = RAdd(r2D18,r2CFF);
          real r2D3E#1 = RAdd(r2D3D,r2CFF);
          real r2D3F#4 = RAdd(r2D3E,r2D14);
          real r2D40#1 = RAdd(r2D14,r2CFE);
          real r2D41#1 = RAdd(r2D40,r2CFF);
          real r2D42#4 = RAdd(r2D41,r2D14);
          real r2D43#1 = RAdd(r2D14,r2CFF);
          real r2D44#1 = RAdd(r2D43,r2CFE);
          real r2D45#4 = RAdd(r2D44,r2D14);
          real r2D99#1 = RMul(vdot2CEE,r2D02);
          real r2D9C#1 = RMul(vdot2CF0,r2D0C);
          real r2D9F#1 = RMul(vdot2CF2,r2D17);
          real r2DA0#1 = RAdd(r2D99,r2D9C);
          real r2DA1#1 = RAdd(r2DA0,r2D9F);
          real r2DA3#1 = RMul(vdot2CEE,r2D05);
          real r2DA5#1 = RMul(vdot2CF0,r2D0E);
          real r2DA7#1 = RMul(vdot2CF2,r2D1B);
          real r2DA8#1 = RAdd(r2DA3,r2DA5);
          real r2DA9#1 = RAdd(r2DA8,r2DA7);
          real r2DAB#1 = RMul(vdot2CEE,r2D08);
          real r2DAD#1 = RMul(vdot2CF0,r2D11);
          real r2DAF#1 = RMul(vdot2CF2,r2D1E);
          real r2DB0#1 = RAdd(r2DAB,r2DAD);
          real r2DB1#1 = RAdd(r2DB0,r2DAF);
          real r2DB4#1 = RMul(vdot2CEE,r2D22);
          real r2DB6#1 = RMul(vdot2CF0,r2D02);
          real r2DB8#1 = RMul(vdot2CF2,r2D2A);
          real r2DB9#1 = RAdd(r2DB4,r2DB6);
          real r2DBA#1 = RAdd(r2DB9,r2DB8);
          real r2DBC#1 = RMul(vdot2CEE,r2D24);
          real r2DBE#1 = RMul(vdot2CF0,r2D05);
          real r2DC0#1 = RMul(vdot2CF2,r2D2D);
          real r2DC1#1 = RAdd(r2DBC,r2DBE);
          real r2DC2#1 = RAdd(r2DC1,r2DC0);
          real r2DC4#1 = RMul(vdot2CEE,r2D26);
          real r2DC6#1 = RMul(vdot2CF0,r2D08);
          real r2DC8#1 = RMul(vdot2CF2,r2D30);
          real r2DC9#1 = RAdd(r2DC4,r2DC6);
          real r2DCA#1 = RAdd(r2DC9,r2DC8);
          real r2DCD#1 = RMul(vdot2CEE,r2D35);
          real r2DCF#1 = RMul(vdot2CF0,r2D3F);
          real r2DD1#1 = RMul(vdot2CF2,r2D02);
          real r2DD2#1 = RAdd(r2DCD,r2DCF);
          real r2DD3#1 = RAdd(r2DD2,r2DD1);
          real r2DD5#1 = RMul(vdot2CEE,r2D38);
          real r2DD7#1 = RMul(vdot2CF0,r2D42);
          real r2DD9#1 = RMul(vdot2CF2,r2D05);
          real r2DDA#1 = RAdd(r2DD5,r2DD7);
          real r2DDB#1 = RAdd(r2DDA,r2DD9);
          real r2DDD#1 = RMul(vdot2CEE,r2D3B);
          real r2DDF#1 = RMul(vdot2CF0,r2D45);
          real r2DE1#1 = RMul(vdot2CF2,r2D08);
          real r2DE2#1 = RAdd(r2DDD,r2DDF);
          real r2DE3#1 = RAdd(r2DE2,r2DE1);
          real basisEval2E3E#3 = RMul(coeff2909,prod28FF);
          real coeff2E47#13 = 0.24e2;
          real basisEval2E4A#1 = RMul(coeff2E47,prod290B);
          real basisEval2E4E#4 = RMul(coeff2909,prod290F);
          real basisEval2E55#4 = RMul(coeff2909,prod2916);
          real basisEval2E57#2 = RMul(coeff2E47,prod2918);
          real basisEval2E59#2 = RMul(coeff2E47,prod291A);
          real coeff2E5A#9 = 0.60e2;
          real basisEval2E5D#1 = RMul(coeff2E5A,prod291E);
          real basisEval2E61#2 = RMul(coeff2909,prod2922);
          real basisEval2E6B#2 = RMul(coeff2909,prod292C);
          real basisEval2E6D#2 = RMul(coeff2E47,prod292E);
          real basisEval2E6F#3 = RMul(coeff2E47,prod2930);
          real basisEval2E71#2 = RMul(coeff2E47,prod2932);
          real basisEval2E73#1 = RMul(coeff2E5A,prod2934);
          real basisEval2E75#1 = RMul(coeff2E5A,prod2936);
          real coeff2E76#3 = 0.120e3;
          real basisEval2E79#1 = RMul(coeff2E76,prod293A);
          real basisEval2E7E#2 = RMul(coeff296A,prod2907);
          real basisEval2E84#2 = RMul(coeff291C,prod291A);
          real basisEval2E87#1 = RMul(coeff296A,prod2925);
          real basisEval2E89#2 = RMul(coeff297C,prod292C);
          real basisEval2E8B#6 = RMul(coeff291C,prod2930);
          real coeff2E8C#6 = 0.18e2;
          real basisEval2E8D#1 = RMul(coeff2E8C,prod2932);
          real basisEval2E8F#2 = RMul(coeff2E47,prod2936);
          real basisEval2E92#2 = RMul(coeff296A,prod2903);
          real basisEval2E95#2 = RMul(coeff291C,prod2918);
          real basisEval2E97#2 = RMul(coeff297C,prod2922);
          real basisEval2E98#1 = RMul(coeff296A,prod2928);
          real basisEval2E9A#1 = RMul(coeff2E8C,prod292E);
          real basisEval2E9C#2 = RMul(coeff2E47,prod2934);
          real basisEval2E9E#2 = RMul(coeff296A,prod290B);
          real basisEval2EA1#4 = RMul(coeff2909,prod291E);
          real basisEval2EA4#1 = RMul(coeff296A,prod292E);
          real basisEval2EA6#1 = RMul(coeff2E8C,prod2936);
          real basisEval2EA7#2 = RMul(coeff297C,prod293A);
          real basisEval2EB1#1 = RMul(coeff297C,prod2930);
          real basisEval2EB7#1 = RMul(coeff296A,prod2932);
          real basisEval2EB8#1 = RMul(coeff2E8C,prod2934);
          real basisEval2EB9#1 = RMul(coeff2E47,prod2907);
          real basisEval2EBA#2 = RMul(coeff2E47,prod2912);
          real basisEval2EBB#1 = RMul(coeff2E5A,prod2916);
          real basisEval2EBC#2 = RMul(coeff2E47,prod2925);
          real basisEval2EBD#1 = RMul(coeff2E5A,prod2928);
          real basisEval2EBE#1 = RMul(coeff2E76,prod292C);
          real basisEval2EBF#1 = RMul(coeff2E5A,prod2932);
          real basisEval2EC0#2 = RMul(coeff2909,prod293A);
          real basisEval2EC1#2 = RMul(coeff291C,prod2912);
          real basisEval2EC3#1 = RMul(coeff2E8C,prod2925);
          real basisEval2EC4#2 = RMul(coeff2E47,prod2928);
          real basisEval2EC6#1 = RMul(coeff296A,prod2934);
          real basisEval2EC8#1 = RMul(coeff2E8C,prod2928);
          real basisEval2ECA#1 = RMul(coeff296A,prod2936);
          real basisEval2ECB#1 = RMul(coeff2E47,prod2903);
          real basisEval2ECC#1 = RMul(coeff2E5A,prod290F);
          real basisEval2ECD#1 = RMul(coeff2E76,prod2922);
          real basisEval2ECE#1 = RMul(coeff2E5A,prod2925);
          real basisEval2ECF#1 = RMul(coeff2E5A,prod292E);
          tensor[84] intermediateCons2ED0#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E3E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval299A,basisEval2E4A,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval299B,basisEval2E55,basisEval2E57,basisEval2E59,basisEval2E5D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E61,basisEval299E,basisEval29B1,basisEval2E6B,basisEval2E6D,basisEval2E6F,basisEval2E71,basisEval2E73,basisEval2E75,basisEval2E79];
          tensor[84] intermediateCons2ED1#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2E7E,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval29AF,basisEval2E55,basisEval28FB,basisEval2919,basisEval2E84,basisEval28FB,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval2E87,basisEval29B1,basisEval2E89,basisEval28FB,basisEval292F,basisEval2E8B,basisEval2E8D,basisEval28FB,basisEval2935,basisEval2E8F,basisEval28FB,basisEval293B,basisEval28FB];
          tensor[84] intermediateCons2ED2#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E92,basisEval2908,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval29AF,basisEval2917,basisEval28FB,basisEval2E95,basisEval291B,basisEval28FB,basisEval291F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E97,basisEval299E,basisEval2E98,basisEval292D,basisEval28FB,basisEval2E9A,basisEval2E8B,basisEval2933,basisEval28FB,basisEval2E9C,basisEval2937,basisEval28FB,basisEval293B,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED3#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval299A,basisEval28FB,basisEval28FB,basisEval2E9E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2910,basisEval299B,basisEval299C,basisEval28FB,basisEval28FB,basisEval2988,basisEval2E84,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2923,basisEval299E,basisEval299F,basisEval29A0,basisEval28FB,basisEval28FB,basisEval2EA4,basisEval2E8B,basisEval2E71,basisEval28FB,basisEval28FB,basisEval298E,basisEval2EA6,basisEval28FB,basisEval28FB,basisEval2EA7,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED4#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2963,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2904,basisEval2908,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2986,basisEval29AF,basisEval2968,basisEval28FB,basisEval28FB,basisEval2988,basisEval296B,basisEval28FB,basisEval28FB,basisEval296C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298A,basisEval299E,basisEval29B1,basisEval296F,basisEval28FB,basisEval28FB,basisEval292F,basisEval2EB1,basisEval2933,basisEval28FB,basisEval28FB,basisEval298E,basisEval2973,basisEval28FB,basisEval28FB,basisEval2974,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED5#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2908,basisEval28FB,basisEval28FB,basisEval2E9E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval299B,basisEval2917,basisEval28FB,basisEval28FB,basisEval2E95,basisEval296B,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval29C1,basisEval29B1,basisEval292D,basisEval28FB,basisEval28FB,basisEval2E6D,basisEval2E8B,basisEval2EB7,basisEval28FB,basisEval28FB,basisEval2EB8,basisEval2973,basisEval28FB,basisEval28FB,basisEval2EA7,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED6#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E3E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2EB9,basisEval28FB,basisEval28FB,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval2EBA,basisEval2EBB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2919,basisEval2E59,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E61,basisEval2EBC,basisEval2EBD,basisEval2EBE,basisEval28FB,basisEval28FB,basisEval28FB,basisEval292F,basisEval2E6F,basisEval2EBF,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298E,basisEval2E8F,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EC0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED7#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E92,basisEval299A,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E4E,basisEval2EC1,basisEval299C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2988,basisEval291B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E97,basisEval2EC3,basisEval2EC4,basisEval29A0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval292F,basisEval2E8B,basisEval29A1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EC6,basisEval2973,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED8#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2900,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BE,basisEval2E7E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2965,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29BF,basisEval2EC1,basisEval2E55,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2919,basisEval296B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval299D,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C0,basisEval2EBC,basisEval2EC8,basisEval2E89,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29C2,basisEval2E8B,basisEval2933,basisEval28FB,basisEval28FB,basisEval28FB,basisEval298E,basisEval2ECA,basisEval28FB,basisEval28FB,basisEval28FB,basisEval29A3,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          tensor[84] intermediateCons2ED9#1 = <tensor[84]>[basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E3E,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECB,basisEval299A,basisEval28FB,basisEval28FB,basisEval28FB,basisEval290C,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECC,basisEval2EBA,basisEval2E55,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E57,basisEval291B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EA1,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECD,basisEval2ECE,basisEval2EC4,basisEval2E6B,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2ECF,basisEval2E6F,basisEval2933,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2E9C,basisEval2973,basisEval28FB,basisEval28FB,basisEval28FB,basisEval2EC0,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB,basisEval28FB];
          real vdot2F95#1 = VDot<84>(dofs27A4,intermediateCons2ED0);
          real vdot2F97#2 = VDot<84>(dofs27A4,intermediateCons2ED1);
          real vdot2F99#2 = VDot<84>(dofs27A4,intermediateCons2ED2);
          real vdot2F9E#2 = VDot<84>(dofs27A4,intermediateCons2ED3);
          real vdot2FA0#3 = VDot<84>(dofs27A4,intermediateCons2ED4);
          real vdot2FA7#2 = VDot<84>(dofs27A4,intermediateCons2ED5);
          real vdot2FB4#1 = VDot<84>(dofs27A4,intermediateCons2ED6);
          real vdot2FB6#2 = VDot<84>(dofs27A4,intermediateCons2ED7);
          real vdot2FBD#2 = VDot<84>(dofs27A4,intermediateCons2ED8);
          real vdot2FD3#1 = VDot<84>(dofs27A4,intermediateCons2ED9);
          real r301D#1 = RMul(vdot2CC8,vdot2F95);
          real r3020#1 = RMul(vdot2CCA,vdot2F97);
          real r3023#1 = RMul(vdot2CCC,vdot2F99);
          real r3024#1 = RAdd(r301D,r3020);
          real r3025#1 = RAdd(r3024,r3023);
          real r3027#1 = RMul(vdot2CC8,vdot2F97);
          real r3029#1 = RMul(vdot2CCA,vdot2F9E);
          real r302B#1 = RMul(vdot2CCC,vdot2FA0);
          real r302C#1 = RAdd(r3027,r3029);
          real r302D#2 = RAdd(r302C,r302B);
          real r302F#1 = RMul(vdot2CC8,vdot2F99);
          real r3031#1 = RMul(vdot2CCA,vdot2FA0);
          real r3033#1 = RMul(vdot2CCC,vdot2FA7);
          real r3034#1 = RAdd(r302F,r3031);
          real r3035#2 = RAdd(r3034,r3033);
          tensor[3] tensor3036#1 = <tensor[3]>[r3025,r302D,r3035];
          real r3040#1 = RMul(vdot2CC8,vdot2F9E);
          real r3042#1 = RMul(vdot2CCA,vdot2FB4);
          real r3044#1 = RMul(vdot2CCC,vdot2FB6);
          real r3045#1 = RAdd(r3040,r3042);
          real r3046#1 = RAdd(r3045,r3044);
          real r3048#1 = RMul(vdot2CC8,vdot2FA0);
          real r304A#1 = RMul(vdot2CCA,vdot2FB6);
          real r304C#1 = RMul(vdot2CCC,vdot2FBD);
          real r304D#1 = RAdd(r3048,r304A);
          real r304E#2 = RAdd(r304D,r304C);
          tensor[3] tensor304F#1 = <tensor[3]>[r302D,r3046,r304E];
          real r3061#1 = RMul(vdot2CC8,vdot2FA7);
          real r3063#1 = RMul(vdot2CCA,vdot2FBD);
          real r3065#1 = RMul(vdot2CCC,vdot2FD3);
          real r3066#1 = RAdd(r3061,r3063);
          real r3067#1 = RAdd(r3066,r3065);
          tensor[3] tensor3068#1 = <tensor[3]>[r3035,r304E,r3067];
          real r30BB#1 = RMul(vdot2AB3,vdot2AB3);
          real r30BE#2 = RMul(vdot2AB5,vdot2AB5);
          real r30C1#2 = RMul(vdot2AB7,vdot2AB7);
          real r30C2#1 = RAdd(r30BB,r30BE);
          real r30C3#1 = RAdd(r30C2,r30C1);
          real r30C4#1 = RMul(vdot2AB3,vdot2AB5);
          real r30C6#1 = RMul(vdot2AB5,vdot2ABC);
          real r30C8#1 = RMul(vdot2AB7,vdot2ABE);
          real r30C9#1 = RAdd(r30C4,r30C6);
          real r30CA#1 = RAdd(r30C9,r30C8);
          real r30CB#1 = RMul(vdot2AB3,vdot2AB7);
          real r30CD#1 = RMul(vdot2AB5,vdot2ABE);
          real r30CF#1 = RMul(vdot2AB7,vdot2AC5);
          real r30D0#1 = RAdd(r30CB,r30CD);
          real r30D1#1 = RAdd(r30D0,r30CF);
          tensor[3] tensor30D2#1 = <tensor[3]>[r30C3,r30CA,r30D1];
          real r30D3#1 = RMul(vdot2AB5,vdot2AB3);
          real r30D4#1 = RMul(vdot2ABC,vdot2AB5);
          real r30D5#1 = RMul(vdot2ABE,vdot2AB7);
          real r30D6#1 = RAdd(r30D3,r30D4);
          real r30D7#1 = RAdd(r30D6,r30D5);
          real r30D9#1 = RMul(vdot2ABC,vdot2ABC);
          real r30DA#2 = RMul(vdot2ABE,vdot2ABE);
          real r30DB#1 = RAdd(r30BE,r30D9);
          real r30DC#1 = RAdd(r30DB,r30DA);
          real r30DD#1 = RMul(vdot2AB5,vdot2AB7);
          real r30DE#1 = RMul(vdot2ABC,vdot2ABE);
          real r30DF#1 = RMul(vdot2ABE,vdot2AC5);
          real r30E0#1 = RAdd(r30DD,r30DE);
          real r30E1#1 = RAdd(r30E0,r30DF);
          tensor[3] tensor30E2#1 = <tensor[3]>[r30D7,r30DC,r30E1];
          real r30E3#1 = RMul(vdot2AB7,vdot2AB3);
          real r30E4#1 = RMul(vdot2ABE,vdot2AB5);
          real r30E5#1 = RMul(vdot2AC5,vdot2AB7);
          real r30E6#1 = RAdd(r30E3,r30E4);
          real r30E7#1 = RAdd(r30E6,r30E5);
          real r30E8#1 = RMul(vdot2AB7,vdot2AB5);
          real r30E9#1 = RMul(vdot2ABE,vdot2ABC);
          real r30EA#1 = RMul(vdot2AC5,vdot2ABE);
          real r30EB#1 = RAdd(r30E8,r30E9);
          real r30EC#1 = RAdd(r30EB,r30EA);
          real r30EF#1 = RMul(vdot2AC5,vdot2AC5);
          real r30F0#1 = RAdd(r30C1,r30DA);
          real r30F1#1 = RAdd(r30F0,r30EF);
          tensor[3] tensor30F2#1 = <tensor[3]>[r30E7,r30EC,r30F1];
          tensor[3] v3131#3 = VAdd<3>(tensor3036,tensor30D2);
          tensor[3] v3134#3 = VAdd<3>(tensor304F,tensor30E2);
          tensor[3] v3137#3 = VAdd<3>(tensor3068,tensor30F2);
          real r3146#1 = RMul(vdot2CEE,vdot2AB3);
          real r3148#2 = RMul(vdot2CEE,vdot2AB5);
          real r314A#2 = RMul(vdot2CEE,vdot2AB7);
          tensor[3] tensor314B#1 = <tensor[3]>[r3146,r3148,r314A];
          real r314F#1 = RMul(vdot2CEE,vdot2ABC);
          real r3151#2 = RMul(vdot2CEE,vdot2ABE);
          tensor[3] tensor3152#1 = <tensor[3]>[r3148,r314F,r3151];
          real r3158#1 = RMul(vdot2CEE,vdot2AC5);
          tensor[3] tensor3159#1 = <tensor[3]>[r314A,r3151,r3158];
          real r315C#1 = RMul(vdot2CF0,vdot2AB3);
          real r315D#2 = RMul(vdot2CF0,vdot2AB5);
          real r315E#2 = RMul(vdot2CF0,vdot2AB7);
          tensor[3] tensor315F#1 = <tensor[3]>[r315C,r315D,r315E];
          real r3161#1 = RMul(vdot2CF0,vdot2ABC);
          real r3162#2 = RMul(vdot2CF0,vdot2ABE);
          tensor[3] tensor3163#1 = <tensor[3]>[r315D,r3161,r3162];
          real r3166#1 = RMul(vdot2CF0,vdot2AC5);
          tensor[3] tensor3167#1 = <tensor[3]>[r315E,r3162,r3166];
          real r316A#1 = RMul(vdot2CF2,vdot2AB3);
          real r316B#2 = RMul(vdot2CF2,vdot2AB5);
          real r316C#2 = RMul(vdot2CF2,vdot2AB7);
          tensor[3] tensor316D#1 = <tensor[3]>[r316A,r316B,r316C];
          real r316F#1 = RMul(vdot2CF2,vdot2ABC);
          real r3170#2 = RMul(vdot2CF2,vdot2ABE);
          tensor[3] tensor3171#1 = <tensor[3]>[r316B,r316F,r3170];
          real r3174#1 = RMul(vdot2CF2,vdot2AC5);
          tensor[3] tensor3175#1 = <tensor[3]>[r316C,r3170,r3174];
          real r31AE#3 = VIndex<3,0>(v3131);
          real r31AF#1 = RMul(vdot2CC8,r31AE);
          real r31B0#3 = VIndex<3,1>(v3131);
          real r31B1#1 = RMul(vdot2CC8,r31B0);
          real r31B2#3 = VIndex<3,2>(v3131);
          real r31B3#1 = RMul(vdot2CC8,r31B2);
          tensor[3] tensor31B4#1 = <tensor[3]>[r31AF,r31B1,r31B3];
          real r31B5#3 = VIndex<3,0>(v3134);
          real r31B6#1 = RMul(vdot2CC8,r31B5);
          real r31B7#3 = VIndex<3,1>(v3134);
          real r31B8#1 = RMul(vdot2CC8,r31B7);
          real r31B9#3 = VIndex<3,2>(v3134);
          real r31BA#1 = RMul(vdot2CC8,r31B9);
          tensor[3] tensor31BB#1 = <tensor[3]>[r31B6,r31B8,r31BA];
          real r31BC#3 = VIndex<3,0>(v3137);
          real r31BD#1 = RMul(vdot2CC8,r31BC);
          real r31BE#3 = VIndex<3,1>(v3137);
          real r31BF#1 = RMul(vdot2CC8,r31BE);
          real r31C0#3 = VIndex<3,2>(v3137);
          real r31C1#1 = RMul(vdot2CC8,r31C0);
          tensor[3] tensor31C2#1 = <tensor[3]>[r31BD,r31BF,r31C1];
          real r31C5#1 = RMul(vdot2CCA,r31AE);
          real r31C6#1 = RMul(vdot2CCA,r31B0);
          real r31C7#1 = RMul(vdot2CCA,r31B2);
          tensor[3] tensor31C8#1 = <tensor[3]>[r31C5,r31C6,r31C7];
          real r31C9#1 = RMul(vdot2CCA,r31B5);
          real r31CA#1 = RMul(vdot2CCA,r31B7);
          real r31CB#1 = RMul(vdot2CCA,r31B9);
          tensor[3] tensor31CC#1 = <tensor[3]>[r31C9,r31CA,r31CB];
          real r31CD#1 = RMul(vdot2CCA,r31BC);
          real r31CE#1 = RMul(vdot2CCA,r31BE);
          real r31CF#1 = RMul(vdot2CCA,r31C0);
          tensor[3] tensor31D0#1 = <tensor[3]>[r31CD,r31CE,r31CF];
          real r31D3#1 = RMul(vdot2CCC,r31AE);
          real r31D4#1 = RMul(vdot2CCC,r31B0);
          real r31D5#1 = RMul(vdot2CCC,r31B2);
          tensor[3] tensor31D6#1 = <tensor[3]>[r31D3,r31D4,r31D5];
          real r31D7#1 = RMul(vdot2CCC,r31B5);
          real r31D8#1 = RMul(vdot2CCC,r31B7);
          real r31D9#1 = RMul(vdot2CCC,r31B9);
          tensor[3] tensor31DA#1 = <tensor[3]>[r31D7,r31D8,r31D9];
          real r31DB#1 = RMul(vdot2CCC,r31BC);
          real r31DC#1 = RMul(vdot2CCC,r31BE);
          real r31DD#1 = RMul(vdot2CCC,r31C0);
          tensor[3] tensor31DE#1 = <tensor[3]>[r31DB,r31DC,r31DD];
          tensor[3] v3218#3 = VAdd<3>(tensor314B,tensor31B4);
          tensor[3] v321B#3 = VAdd<3>(tensor3152,tensor31C8);
          tensor[3] v321E#3 = VAdd<3>(tensor3159,tensor31D6);
          tensor[3] v3222#3 = VAdd<3>(tensor315F,tensor31BB);
          tensor[3] v3225#3 = VAdd<3>(tensor3163,tensor31CC);
          tensor[3] v3228#3 = VAdd<3>(tensor3167,tensor31DA);
          tensor[3] v322C#3 = VAdd<3>(tensor316D,tensor31C2);
          tensor[3] v322F#3 = VAdd<3>(tensor3171,tensor31D0);
          tensor[3] v3232#3 = VAdd<3>(tensor3175,tensor31DE);
          real r3257#1 = RMul(vdot2CC8,r2DA1);
          real r325A#1 = RMul(vdot2CCA,r2DBA);
          real r325D#1 = RMul(vdot2CCC,r2DD3);
          real r325E#1 = RAdd(r3257,r325A);
          real r325F#1 = RAdd(r325E,r325D);
          real r3261#1 = RMul(vdot2CC8,r2DA9);
          real r3263#1 = RMul(vdot2CCA,r2DC2);
          real r3265#1 = RMul(vdot2CCC,r2DDB);
          real r3266#1 = RAdd(r3261,r3263);
          real r3267#1 = RAdd(r3266,r3265);
          real r3269#1 = RMul(vdot2CC8,r2DB1);
          real r326B#1 = RMul(vdot2CCA,r2DCA);
          real r326D#1 = RMul(vdot2CCC,r2DE3);
          real r326E#1 = RAdd(r3269,r326B);
          real r326F#1 = RAdd(r326E,r326D);
          tensor[3] op1_e3_l_413254#3 = <tensor[3]>[r325F,r3267,r326F];
          real r328E#3 = VIndex<3,0>(v3218);
          real r3290#1 = RMul(r328E,r2D02);
          real r3291#3 = VIndex<3,0>(v3222);
          real r3293#1 = RMul(r3291,r2D0C);
          real r3294#3 = VIndex<3,0>(v322C);
          real r3296#1 = RMul(r3294,r2D17);
          real r3297#3 = VIndex<3,0>(v321B);
          real r3299#1 = RMul(r3297,r2D22);
          real r329A#3 = VIndex<3,0>(v3225);
          real r329C#1 = RMul(r329A,r2D02);
          real r329D#3 = VIndex<3,0>(v322F);
          real r329F#1 = RMul(r329D,r2D2A);
          real r32A0#3 = VIndex<3,0>(v321E);
          real r32A2#1 = RMul(r32A0,r2D35);
          real r32A3#3 = VIndex<3,0>(v3228);
          real r32A5#1 = RMul(r32A3,r2D3F);
          real r32A6#3 = VIndex<3,0>(v3232);
          real r32A8#1 = RMul(r32A6,r2D02);
          real r32A9#1 = RAdd(r3290,r3293);
          real r32AA#1 = RAdd(r32A9,r3296);
          real r32AB#1 = RAdd(r32AA,r3299);
          real r32AC#1 = RAdd(r32AB,r329C);
          real r32AD#1 = RAdd(r32AC,r329F);
          real r32AE#1 = RAdd(r32AD,r32A2);
          real r32AF#1 = RAdd(r32AE,r32A5);
          real r32B0#1 = RAdd(r32AF,r32A8);
          real r32B2#1 = RMul(r328E,r2D05);
          real r32B4#1 = RMul(r3291,r2D0E);
          real r32B6#1 = RMul(r3294,r2D1B);
          real r32B8#1 = RMul(r3297,r2D24);
          real r32BA#1 = RMul(r329A,r2D05);
          real r32BC#1 = RMul(r329D,r2D2D);
          real r32BE#1 = RMul(r32A0,r2D38);
          real r32C0#1 = RMul(r32A3,r2D42);
          real r32C2#1 = RMul(r32A6,r2D05);
          real r32C3#1 = RAdd(r32B2,r32B4);
          real r32C4#1 = RAdd(r32C3,r32B6);
          real r32C5#1 = RAdd(r32C4,r32B8);
          real r32C6#1 = RAdd(r32C5,r32BA);
          real r32C7#1 = RAdd(r32C6,r32BC);
          real r32C8#1 = RAdd(r32C7,r32BE);
          real r32C9#1 = RAdd(r32C8,r32C0);
          real r32CA#1 = RAdd(r32C9,r32C2);
          real r32CC#1 = RMul(r328E,r2D08);
          real r32CE#1 = RMul(r3291,r2D11);
          real r32D0#1 = RMul(r3294,r2D1E);
          real r32D2#1 = RMul(r3297,r2D26);
          real r32D4#1 = RMul(r329A,r2D08);
          real r32D6#1 = RMul(r329D,r2D30);
          real r32D8#1 = RMul(r32A0,r2D3B);
          real r32DA#1 = RMul(r32A3,r2D45);
          real r32DC#1 = RMul(r32A6,r2D08);
          real r32DD#1 = RAdd(r32CC,r32CE);
          real r32DE#1 = RAdd(r32DD,r32D0);
          real r32DF#1 = RAdd(r32DE,r32D2);
          real r32E0#1 = RAdd(r32DF,r32D4);
          real r32E1#1 = RAdd(r32E0,r32D6);
          real r32E2#1 = RAdd(r32E1,r32D8);
          real r32E3#1 = RAdd(r32E2,r32DA);
          real r32E4#1 = RAdd(r32E3,r32DC);
          tensor[3] tensor32E5#1 = <tensor[3]>[r32B0,r32CA,r32E4];
          real r32E6#3 = VIndex<3,1>(v3218);
          real r32E7#1 = RMul(r32E6,r2D02);
          real r32E8#3 = VIndex<3,1>(v3222);
          real r32E9#1 = RMul(r32E8,r2D0C);
          real r32EA#3 = VIndex<3,1>(v322C);
          real r32EB#1 = RMul(r32EA,r2D17);
          real r32EC#3 = VIndex<3,1>(v321B);
          real r32ED#1 = RMul(r32EC,r2D22);
          real r32EE#3 = VIndex<3,1>(v3225);
          real r32EF#1 = RMul(r32EE,r2D02);
          real r32F0#3 = VIndex<3,1>(v322F);
          real r32F1#1 = RMul(r32F0,r2D2A);
          real r32F2#3 = VIndex<3,1>(v321E);
          real r32F3#1 = RMul(r32F2,r2D35);
          real r32F4#3 = VIndex<3,1>(v3228);
          real r32F5#1 = RMul(r32F4,r2D3F);
          real r32F6#3 = VIndex<3,1>(v3232);
          real r32F7#1 = RMul(r32F6,r2D02);
          real r32F8#1 = RAdd(r32E7,r32E9);
          real r32F9#1 = RAdd(r32F8,r32EB);
          real r32FA#1 = RAdd(r32F9,r32ED);
          real r32FB#1 = RAdd(r32FA,r32EF);
          real r32FC#1 = RAdd(r32FB,r32F1);
          real r32FD#1 = RAdd(r32FC,r32F3);
          real r32FE#1 = RAdd(r32FD,r32F5);
          real r32FF#1 = RAdd(r32FE,r32F7);
          real r3300#1 = RMul(r32E6,r2D05);
          real r3301#1 = RMul(r32E8,r2D0E);
          real r3302#1 = RMul(r32EA,r2D1B);
          real r3303#1 = RMul(r32EC,r2D24);
          real r3304#1 = RMul(r32EE,r2D05);
          real r3305#1 = RMul(r32F0,r2D2D);
          real r3306#1 = RMul(r32F2,r2D38);
          real r3307#1 = RMul(r32F4,r2D42);
          real r3308#1 = RMul(r32F6,r2D05);
          real r3309#1 = RAdd(r3300,r3301);
          real r330A#1 = RAdd(r3309,r3302);
          real r330B#1 = RAdd(r330A,r3303);
          real r330C#1 = RAdd(r330B,r3304);
          real r330D#1 = RAdd(r330C,r3305);
          real r330E#1 = RAdd(r330D,r3306);
          real r330F#1 = RAdd(r330E,r3307);
          real r3310#1 = RAdd(r330F,r3308);
          real r3311#1 = RMul(r32E6,r2D08);
          real r3312#1 = RMul(r32E8,r2D11);
          real r3313#1 = RMul(r32EA,r2D1E);
          real r3314#1 = RMul(r32EC,r2D26);
          real r3315#1 = RMul(r32EE,r2D08);
          real r3316#1 = RMul(r32F0,r2D30);
          real r3317#1 = RMul(r32F2,r2D3B);
          real r3318#1 = RMul(r32F4,r2D45);
          real r3319#1 = RMul(r32F6,r2D08);
          real r331A#1 = RAdd(r3311,r3312);
          real r331B#1 = RAdd(r331A,r3313);
          real r331C#1 = RAdd(r331B,r3314);
          real r331D#1 = RAdd(r331C,r3315);
          real r331E#1 = RAdd(r331D,r3316);
          real r331F#1 = RAdd(r331E,r3317);
          real r3320#1 = RAdd(r331F,r3318);
          real r3321#1 = RAdd(r3320,r3319);
          tensor[3] tensor3322#1 = <tensor[3]>[r32FF,r3310,r3321];
          real r3323#3 = VIndex<3,2>(v3218);
          real r3324#1 = RMul(r3323,r2D02);
          real r3325#3 = VIndex<3,2>(v3222);
          real r3326#1 = RMul(r3325,r2D0C);
          real r3327#3 = VIndex<3,2>(v322C);
          real r3328#1 = RMul(r3327,r2D17);
          real r3329#3 = VIndex<3,2>(v321B);
          real r332A#1 = RMul(r3329,r2D22);
          real r332B#3 = VIndex<3,2>(v3225);
          real r332C#1 = RMul(r332B,r2D02);
          real r332D#3 = VIndex<3,2>(v322F);
          real r332E#1 = RMul(r332D,r2D2A);
          real r332F#3 = VIndex<3,2>(v321E);
          real r3330#1 = RMul(r332F,r2D35);
          real r3331#3 = VIndex<3,2>(v3228);
          real r3332#1 = RMul(r3331,r2D3F);
          real r3333#3 = VIndex<3,2>(v3232);
          real r3334#1 = RMul(r3333,r2D02);
          real r3335#1 = RAdd(r3324,r3326);
          real r3336#1 = RAdd(r3335,r3328);
          real r3337#1 = RAdd(r3336,r332A);
          real r3338#1 = RAdd(r3337,r332C);
          real r3339#1 = RAdd(r3338,r332E);
          real r333A#1 = RAdd(r3339,r3330);
          real r333B#1 = RAdd(r333A,r3332);
          real r333C#1 = RAdd(r333B,r3334);
          real r333D#1 = RMul(r3323,r2D05);
          real r333E#1 = RMul(r3325,r2D0E);
          real r333F#1 = RMul(r3327,r2D1B);
          real r3340#1 = RMul(r3329,r2D24);
          real r3341#1 = RMul(r332B,r2D05);
          real r3342#1 = RMul(r332D,r2D2D);
          real r3343#1 = RMul(r332F,r2D38);
          real r3344#1 = RMul(r3331,r2D42);
          real r3345#1 = RMul(r3333,r2D05);
          real r3346#1 = RAdd(r333D,r333E);
          real r3347#1 = RAdd(r3346,r333F);
          real r3348#1 = RAdd(r3347,r3340);
          real r3349#1 = RAdd(r3348,r3341);
          real r334A#1 = RAdd(r3349,r3342);
          real r334B#1 = RAdd(r334A,r3343);
          real r334C#1 = RAdd(r334B,r3344);
          real r334D#1 = RAdd(r334C,r3345);
          real r334E#1 = RMul(r3323,r2D08);
          real r334F#1 = RMul(r3325,r2D11);
          real r3350#1 = RMul(r3327,r2D1E);
          real r3351#1 = RMul(r3329,r2D26);
          real r3352#1 = RMul(r332B,r2D08);
          real r3353#1 = RMul(r332D,r2D30);
          real r3354#1 = RMul(r332F,r2D3B);
          real r3355#1 = RMul(r3331,r2D45);
          real r3356#1 = RMul(r3333,r2D08);
          real r3357#1 = RAdd(r334E,r334F);
          real r3358#1 = RAdd(r3357,r3350);
          real r3359#1 = RAdd(r3358,r3351);
          real r335A#1 = RAdd(r3359,r3352);
          real r335B#1 = RAdd(r335A,r3353);
          real r335C#1 = RAdd(r335B,r3354);
          real r335D#1 = RAdd(r335C,r3355);
          real r335E#1 = RAdd(r335D,r3356);
          tensor[3] tensor335F#1 = <tensor[3]>[r333C,r334D,r335E];
          real vdot3436#1 = VDot<3>(op1_e3_l_413254,tensor32E5);
          real vdot3438#1 = VDot<3>(op1_e3_l_413254,tensor3322);
          real vdot343A#1 = VDot<3>(op1_e3_l_413254,tensor335F);
          tensor[3] op1_e3_l_673434#2 = <tensor[3]>[vdot3436,vdot3438,vdot343A];
          tensor[3] op1_e3_l_1193443#2 = VAdd<3>(op1_e3_l_673434,op1_e3_l_673434);
          real op1_e3_l_1213446#1 = VDot<3>(op1_e3_l_1193443,op1_e3_l_1193443);
          real _t3449#1 = Sqrt(op1_e3_l_1213446);
          real _t344C#1 = 0.1e-7;
          bool _t344E#1 = GT<real>(_t3449,_t344C);
          if _t344E then goto ASSIGN3452 else goto ASSIGN5396
        ASSIGN3452:  preds = [COND3450]
          bool _t3451#1 = true;
          goto JOIN3455
        JOIN3455:  preds = [ASSIGN3452,ASSIGN5396]
          bool _t3453#1 = phi(_t3451,_t3454)
          goto JOIN3458
        JOIN3458:  preds = [JOIN3455,ASSIGN5397]
          bool _t3456#1 = phi(_t3453,_t3457)
          goto JOIN345B
        JOIN345B:  preds = [JOIN3458,ASSIGN5398]
          bool _t3459#1 = phi(_t3456,_t345A)
          goto JOIN345E
        JOIN345E:  preds = [JOIN345B,ASSIGN5399]
          bool _t345C#1 = phi(_t3459,_t345D)
          bool _t345F#1 = BNot(_t345C);
          if _t345F then goto SAVE3462 else goto JOIN3464
        SAVE3462:  preds = [COND3461]
          self.rayN = rayN243D;
          active
          goto JOIN3464
        JOIN3464:  preds = [*ACTIVE3463,COND3461]
          real _t3465#1030 = 0.e0;
          real _t3467#225 = 0.1e1;
          real _t3469#1 = 0.15e1;
          int ilit346C#1 = 84;
          int mulRes346D#84 = IMul(_t2401,ilit346C);
          int idx3470#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,mulRes346D);
          int ilit3471#91 = 1;
          int addRes3472#1 = IAdd(mulRes346D,ilit3471);
          int idx3473#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3472);
          int ilit3474#5 = 2;
          int addRes3475#1 = IAdd(mulRes346D,ilit3474);
          int idx3476#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3475);
          int ilit3477#5 = 3;
          int addRes3478#1 = IAdd(mulRes346D,ilit3477);
          int idx3479#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3478);
          int ilit347A#1 = 4;
          int addRes347B#1 = IAdd(mulRes346D,ilit347A);
          int idx347C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347B);
          int ilit347D#1 = 5;
          int addRes347E#1 = IAdd(mulRes346D,ilit347D);
          int idx347F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes347E);
          int ilit3480#1 = 6;
          int addRes3481#1 = IAdd(mulRes346D,ilit3480);
          int idx3482#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3481);
          int ilit3483#1 = 7;
          int addRes3484#1 = IAdd(mulRes346D,ilit3483);
          int idx3485#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3484);
          int ilit3486#1 = 8;
          int addRes3487#1 = IAdd(mulRes346D,ilit3486);
          int idx3488#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3487);
          int ilit3489#1 = 9;
          int addRes348A#1 = IAdd(mulRes346D,ilit3489);
          int idx348B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348A);
          int ilit348C#1 = 10;
          int addRes348D#1 = IAdd(mulRes346D,ilit348C);
          int idx348E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes348D);
          int ilit348F#1 = 11;
          int addRes3490#1 = IAdd(mulRes346D,ilit348F);
          int idx3491#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3490);
          int ilit3492#1 = 12;
          int addRes3493#1 = IAdd(mulRes346D,ilit3492);
          int idx3494#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3493);
          int ilit3495#1 = 13;
          int addRes3496#1 = IAdd(mulRes346D,ilit3495);
          int idx3497#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3496);
          int ilit3498#1 = 14;
          int addRes3499#1 = IAdd(mulRes346D,ilit3498);
          int idx349A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3499);
          int ilit349B#1 = 15;
          int addRes349C#1 = IAdd(mulRes346D,ilit349B);
          int idx349D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349C);
          int ilit349E#1 = 16;
          int addRes349F#1 = IAdd(mulRes346D,ilit349E);
          int idx34A0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes349F);
          int ilit34A1#1 = 17;
          int addRes34A2#1 = IAdd(mulRes346D,ilit34A1);
          int idx34A3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A2);
          int ilit34A4#1 = 18;
          int addRes34A5#1 = IAdd(mulRes346D,ilit34A4);
          int idx34A6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A5);
          int ilit34A7#1 = 19;
          int addRes34A8#1 = IAdd(mulRes346D,ilit34A7);
          int idx34A9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34A8);
          int ilit34AA#1 = 20;
          int addRes34AB#1 = IAdd(mulRes346D,ilit34AA);
          int idx34AC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AB);
          int ilit34AD#1 = 21;
          int addRes34AE#1 = IAdd(mulRes346D,ilit34AD);
          int idx34AF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34AE);
          int ilit34B0#1 = 22;
          int addRes34B1#1 = IAdd(mulRes346D,ilit34B0);
          int idx34B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B1);
          int ilit34B3#1 = 23;
          int addRes34B4#1 = IAdd(mulRes346D,ilit34B3);
          int idx34B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B4);
          int ilit34B6#1 = 24;
          int addRes34B7#1 = IAdd(mulRes346D,ilit34B6);
          int idx34B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34B7);
          int ilit34B9#1 = 25;
          int addRes34BA#1 = IAdd(mulRes346D,ilit34B9);
          int idx34BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BA);
          int ilit34BC#1 = 26;
          int addRes34BD#1 = IAdd(mulRes346D,ilit34BC);
          int idx34BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34BD);
          int ilit34BF#1 = 27;
          int addRes34C0#1 = IAdd(mulRes346D,ilit34BF);
          int idx34C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C0);
          int ilit34C2#1 = 28;
          int addRes34C3#1 = IAdd(mulRes346D,ilit34C2);
          int idx34C4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C3);
          int ilit34C5#1 = 29;
          int addRes34C6#1 = IAdd(mulRes346D,ilit34C5);
          int idx34C7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C6);
          int ilit34C8#1 = 30;
          int addRes34C9#1 = IAdd(mulRes346D,ilit34C8);
          int idx34CA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34C9);
          int ilit34CB#1 = 31;
          int addRes34CC#1 = IAdd(mulRes346D,ilit34CB);
          int idx34CD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CC);
          int ilit34CE#1 = 32;
          int addRes34CF#1 = IAdd(mulRes346D,ilit34CE);
          int idx34D0#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34CF);
          int ilit34D1#1 = 33;
          int addRes34D2#1 = IAdd(mulRes346D,ilit34D1);
          int idx34D3#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D2);
          int ilit34D4#1 = 34;
          int addRes34D5#1 = IAdd(mulRes346D,ilit34D4);
          int idx34D6#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D5);
          int ilit34D7#1 = 35;
          int addRes34D8#1 = IAdd(mulRes346D,ilit34D7);
          int idx34D9#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34D8);
          int ilit34DA#1 = 36;
          int addRes34DB#1 = IAdd(mulRes346D,ilit34DA);
          int idx34DC#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DB);
          int ilit34DD#1 = 37;
          int addRes34DE#1 = IAdd(mulRes346D,ilit34DD);
          int idx34DF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34DE);
          int ilit34E0#1 = 38;
          int addRes34E1#1 = IAdd(mulRes346D,ilit34E0);
          int idx34E2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E1);
          int ilit34E3#1 = 39;
          int addRes34E4#1 = IAdd(mulRes346D,ilit34E3);
          int idx34E5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E4);
          int ilit34E6#1 = 40;
          int addRes34E7#1 = IAdd(mulRes346D,ilit34E6);
          int idx34E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34E7);
          int ilit34E9#1 = 41;
          int addRes34EA#1 = IAdd(mulRes346D,ilit34E9);
          int idx34EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34EA);
          int ilit34EC#1 = 42;
          int addRes34ED#1 = IAdd(mulRes346D,ilit34EC);
          int idx34EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34ED);
          int ilit34EF#1 = 43;
          int addRes34F0#1 = IAdd(mulRes346D,ilit34EF);
          int idx34F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F0);
          int ilit34F2#1 = 44;
          int addRes34F3#1 = IAdd(mulRes346D,ilit34F2);
          int idx34F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F3);
          int ilit34F5#1 = 45;
          int addRes34F6#1 = IAdd(mulRes346D,ilit34F5);
          int idx34F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F6);
          int ilit34F8#1 = 46;
          int addRes34F9#1 = IAdd(mulRes346D,ilit34F8);
          int idx34FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34F9);
          int ilit34FB#1 = 47;
          int addRes34FC#1 = IAdd(mulRes346D,ilit34FB);
          int idx34FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FC);
          int ilit34FE#1 = 48;
          int addRes34FF#1 = IAdd(mulRes346D,ilit34FE);
          int idx3500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes34FF);
          int ilit3501#1 = 49;
          int addRes3502#1 = IAdd(mulRes346D,ilit3501);
          int idx3503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3502);
          int ilit3504#1 = 50;
          int addRes3505#1 = IAdd(mulRes346D,ilit3504);
          int idx3506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3505);
          int ilit3507#1 = 51;
          int addRes3508#1 = IAdd(mulRes346D,ilit3507);
          int idx3509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3508);
          int ilit350A#1 = 52;
          int addRes350B#1 = IAdd(mulRes346D,ilit350A);
          int idx350C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350B);
          int ilit350D#1 = 53;
          int addRes350E#1 = IAdd(mulRes346D,ilit350D);
          int idx350F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes350E);
          int ilit3510#1 = 54;
          int addRes3511#1 = IAdd(mulRes346D,ilit3510);
          int idx3512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3511);
          int ilit3513#1 = 55;
          int addRes3514#1 = IAdd(mulRes346D,ilit3513);
          int idx3515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3514);
          int ilit3516#1 = 56;
          int addRes3517#1 = IAdd(mulRes346D,ilit3516);
          int idx3518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3517);
          int ilit3519#1 = 57;
          int addRes351A#1 = IAdd(mulRes346D,ilit3519);
          int idx351B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351A);
          int ilit351C#1 = 58;
          int addRes351D#1 = IAdd(mulRes346D,ilit351C);
          int idx351E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes351D);
          int ilit351F#1 = 59;
          int addRes3520#1 = IAdd(mulRes346D,ilit351F);
          int idx3521#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3520);
          int ilit3522#1 = 60;
          int addRes3523#1 = IAdd(mulRes346D,ilit3522);
          int idx3524#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3523);
          int ilit3525#1 = 61;
          int addRes3526#1 = IAdd(mulRes346D,ilit3525);
          int idx3527#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3526);
          int ilit3528#1 = 62;
          int addRes3529#1 = IAdd(mulRes346D,ilit3528);
          int idx352A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3529);
          int ilit352B#1 = 63;
          int addRes352C#1 = IAdd(mulRes346D,ilit352B);
          int idx352D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352C);
          int ilit352E#1 = 64;
          int addRes352F#1 = IAdd(mulRes346D,ilit352E);
          int idx3530#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes352F);
          int ilit3531#1 = 65;
          int addRes3532#1 = IAdd(mulRes346D,ilit3531);
          int idx3533#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3532);
          int ilit3534#1 = 66;
          int addRes3535#1 = IAdd(mulRes346D,ilit3534);
          int idx3536#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3535);
          int ilit3537#1 = 67;
          int addRes3538#1 = IAdd(mulRes346D,ilit3537);
          int idx3539#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3538);
          int ilit353A#1 = 68;
          int addRes353B#1 = IAdd(mulRes346D,ilit353A);
          int idx353C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353B);
          int ilit353D#1 = 69;
          int addRes353E#1 = IAdd(mulRes346D,ilit353D);
          int idx353F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes353E);
          int ilit3540#1 = 70;
          int addRes3541#1 = IAdd(mulRes346D,ilit3540);
          int idx3542#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3541);
          int ilit3543#1 = 71;
          int addRes3544#1 = IAdd(mulRes346D,ilit3543);
          int idx3545#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3544);
          int ilit3546#1 = 72;
          int addRes3547#1 = IAdd(mulRes346D,ilit3546);
          int idx3548#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3547);
          int ilit3549#1 = 73;
          int addRes354A#1 = IAdd(mulRes346D,ilit3549);
          int idx354B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354A);
          int ilit354C#1 = 74;
          int addRes354D#1 = IAdd(mulRes346D,ilit354C);
          int idx354E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes354D);
          int ilit354F#1 = 75;
          int addRes3550#1 = IAdd(mulRes346D,ilit354F);
          int idx3551#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3550);
          int ilit3552#1 = 76;
          int addRes3553#1 = IAdd(mulRes346D,ilit3552);
          int idx3554#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3553);
          int ilit3555#1 = 77;
          int addRes3556#1 = IAdd(mulRes346D,ilit3555);
          int idx3557#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3556);
          int ilit3558#1 = 78;
          int addRes3559#1 = IAdd(mulRes346D,ilit3558);
          int idx355A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3559);
          int ilit355B#1 = 79;
          int addRes355C#1 = IAdd(mulRes346D,ilit355B);
          int idx355D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355C);
          int ilit355E#1 = 80;
          int addRes355F#1 = IAdd(mulRes346D,ilit355E);
          int idx3560#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes355F);
          int ilit3561#1 = 81;
          int addRes3562#1 = IAdd(mulRes346D,ilit3561);
          int idx3563#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3562);
          int ilit3564#1 = 82;
          int addRes3565#1 = IAdd(mulRes346D,ilit3564);
          int idx3566#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3565);
          int ilit3567#1 = 83;
          int addRes3568#1 = IAdd(mulRes346D,ilit3567);
          int idx3569#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t2403,addRes3568);
          int mulRes366F#1 = IMul(ilit3471,idx3470);
          int mulRes3671#1 = IMul(ilit3471,idx3473);
          int mulRes3674#1 = IMul(ilit3471,idx3476);
          int mulRes3677#1 = IMul(ilit3471,idx3479);
          int mulRes367A#1 = IMul(ilit3471,idx347C);
          int mulRes367D#1 = IMul(ilit3471,idx347F);
          int mulRes3680#1 = IMul(ilit3471,idx3482);
          int mulRes3683#1 = IMul(ilit3471,idx3485);
          int mulRes3686#1 = IMul(ilit3471,idx3488);
          int mulRes3689#1 = IMul(ilit3471,idx348B);
          int mulRes368C#1 = IMul(ilit3471,idx348E);
          int mulRes368F#1 = IMul(ilit3471,idx3491);
          int mulRes3692#1 = IMul(ilit3471,idx3494);
          int mulRes3695#1 = IMul(ilit3471,idx3497);
          int mulRes3698#1 = IMul(ilit3471,idx349A);
          int mulRes369B#1 = IMul(ilit3471,idx349D);
          int mulRes369E#1 = IMul(ilit3471,idx34A0);
          int mulRes36A1#1 = IMul(ilit3471,idx34A3);
          int mulRes36A4#1 = IMul(ilit3471,idx34A6);
          int mulRes36A7#1 = IMul(ilit3471,idx34A9);
          int mulRes36AA#1 = IMul(ilit3471,idx34AC);
          int mulRes36AD#1 = IMul(ilit3471,idx34AF);
          int mulRes36B0#1 = IMul(ilit3471,idx34B2);
          int mulRes36B3#1 = IMul(ilit3471,idx34B5);
          int mulRes36B6#1 = IMul(ilit3471,idx34B8);
          int mulRes36B9#1 = IMul(ilit3471,idx34BB);
          int mulRes36BC#1 = IMul(ilit3471,idx34BE);
          int mulRes36BF#1 = IMul(ilit3471,idx34C1);
          int mulRes36C2#1 = IMul(ilit3471,idx34C4);
          int mulRes36C5#1 = IMul(ilit3471,idx34C7);
          int mulRes36C8#1 = IMul(ilit3471,idx34CA);
          int mulRes36CB#1 = IMul(ilit3471,idx34CD);
          int mulRes36CE#1 = IMul(ilit3471,idx34D0);
          int mulRes36D1#1 = IMul(ilit3471,idx34D3);
          int mulRes36D4#1 = IMul(ilit3471,idx34D6);
          int mulRes36D7#1 = IMul(ilit3471,idx34D9);
          int mulRes36DA#1 = IMul(ilit3471,idx34DC);
          int mulRes36DD#1 = IMul(ilit3471,idx34DF);
          int mulRes36E0#1 = IMul(ilit3471,idx34E2);
          int mulRes36E3#1 = IMul(ilit3471,idx34E5);
          int mulRes36E6#1 = IMul(ilit3471,idx34E8);
          int mulRes36E9#1 = IMul(ilit3471,idx34EB);
          int mulRes36EC#1 = IMul(ilit3471,idx34EE);
          int mulRes36EF#1 = IMul(ilit3471,idx34F1);
          int mulRes36F2#1 = IMul(ilit3471,idx34F4);
          int mulRes36F5#1 = IMul(ilit3471,idx34F7);
          int mulRes36F8#1 = IMul(ilit3471,idx34FA);
          int mulRes36FB#1 = IMul(ilit3471,idx34FD);
          int mulRes36FE#1 = IMul(ilit3471,idx3500);
          int mulRes3701#1 = IMul(ilit3471,idx3503);
          int mulRes3704#1 = IMul(ilit3471,idx3506);
          int mulRes3707#1 = IMul(ilit3471,idx3509);
          int mulRes370A#1 = IMul(ilit3471,idx350C);
          int mulRes370D#1 = IMul(ilit3471,idx350F);
          int mulRes3710#1 = IMul(ilit3471,idx3512);
          int mulRes3713#1 = IMul(ilit3471,idx3515);
          int mulRes3716#1 = IMul(ilit3471,idx3518);
          int mulRes3719#1 = IMul(ilit3471,idx351B);
          int mulRes371C#1 = IMul(ilit3471,idx351E);
          int mulRes371F#1 = IMul(ilit3471,idx3521);
          int mulRes3722#1 = IMul(ilit3471,idx3524);
          int mulRes3725#1 = IMul(ilit3471,idx3527);
          int mulRes3728#1 = IMul(ilit3471,idx352A);
          int mulRes372B#1 = IMul(ilit3471,idx352D);
          int mulRes372E#1 = IMul(ilit3471,idx3530);
          int mulRes3731#1 = IMul(ilit3471,idx3533);
          int mulRes3734#1 = IMul(ilit3471,idx3536);
          int mulRes3737#1 = IMul(ilit3471,idx3539);
          int mulRes373A#1 = IMul(ilit3471,idx353C);
          int mulRes373D#1 = IMul(ilit3471,idx353F);
          int mulRes3740#1 = IMul(ilit3471,idx3542);
          int mulRes3743#1 = IMul(ilit3471,idx3545);
          int mulRes3746#1 = IMul(ilit3471,idx3548);
          int mulRes3749#1 = IMul(ilit3471,idx354B);
          int mulRes374C#1 = IMul(ilit3471,idx354E);
          int mulRes374F#1 = IMul(ilit3471,idx3551);
          int mulRes3752#1 = IMul(ilit3471,idx3554);
          int mulRes3755#1 = IMul(ilit3471,idx3557);
          int mulRes3758#1 = IMul(ilit3471,idx355A);
          int mulRes375B#1 = IMul(ilit3471,idx355D);
          int mulRes375E#1 = IMul(ilit3471,idx3560);
          int mulRes3761#1 = IMul(ilit3471,idx3563);
          int mulRes3764#1 = IMul(ilit3471,idx3566);
          int mulRes3767#1 = IMul(ilit3471,idx3569);
          real dof3768#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes366F);
          real dof3769#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3671);
          real dof376A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3674);
          real dof376B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3677);
          real dof376C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367A);
          real dof376D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes367D);
          real dof376E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3680);
          real dof376F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3683);
          real dof3770#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3686);
          real dof3771#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3689);
          real dof3772#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368C);
          real dof3773#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes368F);
          real dof3774#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3692);
          real dof3775#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3695);
          real dof3776#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3698);
          real dof3777#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369B);
          real dof3778#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes369E);
          real dof3779#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A1);
          real dof377A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A4);
          real dof377B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36A7);
          real dof377C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AA);
          real dof377D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36AD);
          real dof377E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B0);
          real dof377F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B3);
          real dof3780#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B6);
          real dof3781#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36B9);
          real dof3782#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BC);
          real dof3783#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36BF);
          real dof3784#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C2);
          real dof3785#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C5);
          real dof3786#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36C8);
          real dof3787#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CB);
          real dof3788#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36CE);
          real dof3789#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D1);
          real dof378A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D4);
          real dof378B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36D7);
          real dof378C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DA);
          real dof378D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36DD);
          real dof378E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E0);
          real dof378F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E3);
          real dof3790#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E6);
          real dof3791#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36E9);
          real dof3792#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EC);
          real dof3793#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36EF);
          real dof3794#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F2);
          real dof3795#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F5);
          real dof3796#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36F8);
          real dof3797#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FB);
          real dof3798#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes36FE);
          real dof3799#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3701);
          real dof379A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3704);
          real dof379B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3707);
          real dof379C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370A);
          real dof379D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes370D);
          real dof379E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3710);
          real dof379F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3713);
          real dof37A0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3716);
          real dof37A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3719);
          real dof37A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371C);
          real dof37A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes371F);
          real dof37A4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3722);
          real dof37A5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3725);
          real dof37A6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3728);
          real dof37A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372B);
          real dof37A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes372E);
          real dof37A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3731);
          real dof37AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3734);
          real dof37AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3737);
          real dof37AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373A);
          real dof37AD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes373D);
          real dof37AE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3740);
          real dof37AF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3743);
          real dof37B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3746);
          real dof37B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3749);
          real dof37B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374C);
          real dof37B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes374F);
          real dof37B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3752);
          real dof37B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3755);
          real dof37B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3758);
          real dof37B7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375B);
          real dof37B8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes375E);
          real dof37B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3761);
          real dof37BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3764);
          real dof37BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t2405,mulRes3767);
          tensor[84] dofs37BC#20 = <tensor[84]>[dof3768,dof3769,dof376A,dof376B,dof376C,dof376D,dof376E,dof376F,dof3770,dof3771,dof3772,dof3773,dof3774,dof3775,dof3776,dof3777,dof3778,dof3779,dof377A,dof377B,dof377C,dof377D,dof377E,dof377F,dof3780,dof3781,dof3782,dof3783,dof3784,dof3785,dof3786,dof3787,dof3788,dof3789,dof378A,dof378B,dof378C,dof378D,dof378E,dof378F,dof3790,dof3791,dof3792,dof3793,dof3794,dof3795,dof3796,dof3797,dof3798,dof3799,dof379A,dof379B,dof379C,dof379D,dof379E,dof379F,dof37A0,dof37A1,dof37A2,dof37A3,dof37A4,dof37A5,dof37A6,dof37A7,dof37A8,dof37A9,dof37AA,dof37AB,dof37AC,dof37AD,dof37AE,dof37AF,dof37B0,dof37B1,dof37B2,dof37B3,dof37B4,dof37B5,dof37B6,dof37B7,dof37B8,dof37B9,dof37BA,dof37BB];
          real varAcc3910#20 = VIndex<3,0>(pos2449);
          real varAcc3911#10 = VIndex<3,1>(pos2449);
          real varAcc3912#10 = VIndex<3,2>(pos2449);
          real prod3915#15 = RMul(_t3467,_t3467);
          real prod3916#3 = RMul(_t3467,prod3915);
          real basisEval3917#8 = RMul(_t3467,prod3916);
          real prod3919#5 = RMul(_t3467,varAcc3912);
          real prod391A#5 = RMul(_t3467,prod3919);
          real basisEval391B#3 = RMul(_t3467,prod391A);
          real prod391D#5 = RMul(varAcc3911,_t3467);
          real prod391E#5 = RMul(_t3467,prod391D);
          real basisEval391F#3 = RMul(_t3467,prod391E);
          real coeff3920#47 = 0.2e1;
          real prod3922#5 = RMul(varAcc3910,prod3915);
          real basisEval3923#8 = RMul(coeff3920,prod3922);
          real prod23924#5 = RMul(varAcc3912,varAcc3912);
          real prod3925#4 = RMul(_t3467,prod23924);
          real prod3926#6 = RMul(_t3467,prod3925);
          real basisEval3927#3 = RMul(_t3467,prod3926);
          real prod3928#4 = RMul(varAcc3911,varAcc3912);
          real prod3929#6 = RMul(_t3467,prod3928);
          real basisEval392A#1 = RMul(_t3467,prod3929);
          real prod2392B#5 = RMul(varAcc3911,varAcc3911);
          real prod392C#4 = RMul(prod2392B,_t3467);
          real prod392D#6 = RMul(_t3467,prod392C);
          real basisEval392E#3 = RMul(_t3467,prod392D);
          real prod392F#6 = RMul(varAcc3910,prod3919);
          real basisEval3930#5 = RMul(coeff3920,prod392F);
          real prod3931#6 = RMul(varAcc3910,prod391D);
          real basisEval3932#5 = RMul(coeff3920,prod3931);
          real coeff3933#24 = 0.3e1;
          real prod23934#11 = RMul(varAcc3910,varAcc3910);
          real prod3935#6 = RMul(prod23934,prod3915);
          real basisEval3936#4 = RMul(coeff3933,prod3935);
          real prod33937#4 = RMul(prod23924,varAcc3912);
          real prod3938#3 = RMul(_t3467,prod33937);
          real prod3939#7 = RMul(_t3467,prod3938);
          real basisEval393A#3 = RMul(_t3467,prod3939);
          real prod393B#3 = RMul(varAcc3911,prod23924);
          real prod393C#9 = RMul(_t3467,prod393B);
          real basisEval393D#1 = RMul(_t3467,prod393C);
          real prod393E#3 = RMul(prod2392B,varAcc3912);
          real prod393F#9 = RMul(_t3467,prod393E);
          real basisEval3940#1 = RMul(_t3467,prod393F);
          real prod33941#4 = RMul(prod2392B,varAcc3911);
          real prod3942#3 = RMul(prod33941,_t3467);
          real prod3943#7 = RMul(_t3467,prod3942);
          real basisEval3944#3 = RMul(_t3467,prod3943);
          real prod3945#9 = RMul(varAcc3910,prod3925);
          real basisEval3946#3 = RMul(coeff3920,prod3945);
          real prod3947#6 = RMul(varAcc3910,prod3928);
          real basisEval3948#3 = RMul(coeff3920,prod3947);
          real prod3949#9 = RMul(varAcc3910,prod392C);
          real basisEval394A#3 = RMul(coeff3920,prod3949);
          real prod394B#9 = RMul(prod23934,prod3919);
          real basisEval394C#2 = RMul(coeff3933,prod394B);
          real prod394D#9 = RMul(prod23934,prod391D);
          real basisEval394E#2 = RMul(coeff3933,prod394D);
          real coeff394F#34 = 0.4e1;
          real prod33950#7 = RMul(prod23934,varAcc3910);
          real prod3951#7 = RMul(prod33950,prod3915);
          real basisEval3952#4 = RMul(coeff394F,prod3951);
          real prod43953#3 = RMul(prod33937,varAcc3912);
          real prod3954#2 = RMul(_t3467,prod43953);
          real prod3955#4 = RMul(_t3467,prod3954);
          real basisEval3956#3 = RMul(_t3467,prod3955);
          real prod3957#2 = RMul(varAcc3911,prod33937);
          real prod3958#6 = RMul(_t3467,prod3957);
          real basisEval3959#1 = RMul(_t3467,prod3958);
          real prod395A#2 = RMul(prod2392B,prod23924);
          real prod395B#5 = RMul(_t3467,prod395A);
          real basisEval395C#1 = RMul(_t3467,prod395B);
          real prod395D#2 = RMul(prod33941,varAcc3912);
          real prod395E#6 = RMul(_t3467,prod395D);
          real basisEval395F#1 = RMul(_t3467,prod395E);
          real prod43960#3 = RMul(prod33941,varAcc3911);
          real prod3961#2 = RMul(prod43960,_t3467);
          real prod3962#4 = RMul(_t3467,prod3961);
          real basisEval3963#3 = RMul(_t3467,prod3962);
          real prod3964#6 = RMul(varAcc3910,prod3938);
          real basisEval3965#3 = RMul(coeff3920,prod3964);
          real prod3966#5 = RMul(varAcc3910,prod393B);
          real basisEval3967#2 = RMul(coeff3920,prod3966);
          real prod3968#5 = RMul(varAcc3910,prod393E);
          real basisEval3969#2 = RMul(coeff3920,prod3968);
          real prod396A#6 = RMul(varAcc3910,prod3942);
          real basisEval396B#3 = RMul(coeff3920,prod396A);
          real prod396C#5 = RMul(prod23934,prod3925);
          real basisEval396D#4 = RMul(coeff3933,prod396C);
          real prod396E#5 = RMul(prod23934,prod3928);
          real basisEval396F#1 = RMul(coeff3933,prod396E);
          real prod3970#5 = RMul(prod23934,prod392C);
          real basisEval3971#4 = RMul(coeff3933,prod3970);
          real prod3972#6 = RMul(prod33950,prod3919);
          real basisEval3973#2 = RMul(coeff394F,prod3972);
          real prod3974#6 = RMul(prod33950,prod391D);
          real basisEval3975#2 = RMul(coeff394F,prod3974);
          real coeff3976#9 = 0.5e1;
          real prod43977#4 = RMul(prod33950,varAcc3910);
          real prod3978#4 = RMul(prod43977,prod3915);
          real basisEval3979#3 = RMul(coeff3976,prod3978);
          real prod5397A#1 = RMul(prod43953,varAcc3912);
          real prod397B#1 = RMul(_t3467,prod5397A);
          real prod397C#2 = RMul(_t3467,prod397B);
          real basisEval397D#2 = RMul(_t3467,prod397C);
          real prod397E#1 = RMul(varAcc3911,prod43953);
          real prod397F#3 = RMul(_t3467,prod397E);
          real basisEval3980#1 = RMul(_t3467,prod397F);
          real prod3981#1 = RMul(prod2392B,prod33937);
          real prod3982#3 = RMul(_t3467,prod3981);
          real basisEval3983#1 = RMul(_t3467,prod3982);
          real prod3984#1 = RMul(prod33941,prod23924);
          real prod3985#3 = RMul(_t3467,prod3984);
          real basisEval3986#1 = RMul(_t3467,prod3985);
          real prod3987#1 = RMul(prod43960,varAcc3912);
          real prod3988#3 = RMul(_t3467,prod3987);
          real basisEval3989#1 = RMul(_t3467,prod3988);
          real prod5398A#1 = RMul(prod43960,varAcc3911);
          real prod398B#1 = RMul(prod5398A,_t3467);
          real prod398C#2 = RMul(_t3467,prod398B);
          real basisEval398D#2 = RMul(_t3467,prod398C);
          real prod398E#3 = RMul(varAcc3910,prod3954);
          real basisEval398F#1 = RMul(coeff3920,prod398E);
          real prod3990#2 = RMul(varAcc3910,prod3957);
          real basisEval3991#2 = RMul(coeff3920,prod3990);
          real prod3992#2 = RMul(varAcc3910,prod395A);
          real basisEval3993#1 = RMul(coeff3920,prod3992);
          real prod3994#2 = RMul(varAcc3910,prod395D);
          real basisEval3995#2 = RMul(coeff3920,prod3994);
          real prod3996#3 = RMul(varAcc3910,prod3961);
          real basisEval3997#1 = RMul(coeff3920,prod3996);
          real prod3998#3 = RMul(prod23934,prod3938);
          real basisEval3999#1 = RMul(coeff3933,prod3998);
          real prod399A#2 = RMul(prod23934,prod393B);
          real basisEval399B#2 = RMul(coeff3933,prod399A);
          real prod399C#2 = RMul(prod23934,prod393E);
          real basisEval399D#2 = RMul(coeff3933,prod399C);
          real prod399E#3 = RMul(prod23934,prod3942);
          real basisEval399F#1 = RMul(coeff3933,prod399E);
          real prod39A0#3 = RMul(prod33950,prod3925);
          real basisEval39A1#1 = RMul(coeff394F,prod39A0);
          real prod39A2#2 = RMul(prod33950,prod3928);
          real basisEval39A3#1 = RMul(coeff394F,prod39A2);
          real prod39A4#3 = RMul(prod33950,prod392C);
          real basisEval39A5#1 = RMul(coeff394F,prod39A4);
          real prod39A6#3 = RMul(prod43977,prod3919);
          real basisEval39A7#1 = RMul(coeff3976,prod39A6);
          real prod39A8#3 = RMul(prod43977,prod391D);
          real basisEval39A9#1 = RMul(coeff3976,prod39A8);
          real coeff39AA#32 = 0.6e1;
          real prod539AB#1 = RMul(prod43977,varAcc3910);
          real prod39AC#2 = RMul(prod539AB,prod3915);
          real basisEval39AD#1 = RMul(coeff39AA,prod39AC);
          real basisEval39AE#8 = RMul(coeff3920,prod391E);
          real basisEval39AF#3 = RMul(_t3467,prod3922);
          real basisEval39B0#5 = RMul(coeff3920,prod3929);
          real basisEval39B1#4 = RMul(coeff3933,prod392D);
          real basisEval39B2#1 = RMul(_t3467,prod392F);
          real basisEval39B3#3 = RMul(_t3467,prod3935);
          real basisEval39B4#3 = RMul(coeff3920,prod393C);
          real basisEval39B5#2 = RMul(coeff3933,prod393F);
          real basisEval39B6#4 = RMul(coeff394F,prod3943);
          real basisEval39B7#1 = RMul(_t3467,prod3945);
          real basisEval39B8#2 = RMul(coeff3933,prod3949);
          real basisEval39B9#1 = RMul(_t3467,prod394B);
          real basisEval39BA#3 = RMul(coeff3920,prod394D);
          real basisEval39BB#3 = RMul(_t3467,prod3951);
          real basisEval39BC#3 = RMul(coeff3920,prod3958);
          real basisEval39BD#4 = RMul(coeff3933,prod395B);
          real basisEval39BE#2 = RMul(coeff394F,prod395E);
          real basisEval39BF#3 = RMul(coeff3976,prod3962);
          real basisEval39C0#1 = RMul(_t3467,prod3964);
          real basisEval39C1#1 = RMul(coeff3933,prod3968);
          real basisEval39C2#2 = RMul(coeff394F,prod396A);
          real basisEval39C3#1 = RMul(_t3467,prod396C);
          real basisEval39C4#2 = RMul(coeff3920,prod396E);
          real basisEval39C5#1 = RMul(_t3467,prod3972);
          real basisEval39C6#3 = RMul(coeff3920,prod3974);
          real basisEval39C7#3 = RMul(_t3467,prod3978);
          real basisEval39C8#1 = RMul(coeff3920,prod397F);
          real basisEval39C9#1 = RMul(coeff3933,prod3982);
          real basisEval39CA#1 = RMul(coeff394F,prod3985);
          real basisEval39CB#1 = RMul(coeff3976,prod3988);
          real basisEval39CC#1 = RMul(coeff39AA,prod398C);
          real basisEval39CD#1 = RMul(_t3467,prod398E);
          real basisEval39CE#2 = RMul(coeff3933,prod3992);
          real basisEval39CF#1 = RMul(coeff394F,prod3994);
          real basisEval39D0#1 = RMul(coeff3976,prod3996);
          real basisEval39D1#1 = RMul(_t3467,prod3998);
          real basisEval39D2#1 = RMul(coeff3920,prod399A);
          real basisEval39D3#1 = RMul(coeff394F,prod399E);
          real basisEval39D4#1 = RMul(_t3467,prod39A0);
          real basisEval39D5#2 = RMul(coeff3920,prod39A2);
          real basisEval39D6#1 = RMul(coeff3933,prod39A4);
          real basisEval39D7#1 = RMul(_t3467,prod39A6);
          real basisEval39D8#1 = RMul(coeff3920,prod39A8);
          real basisEval39D9#2 = RMul(_t3467,prod39AC);
          real basisEval39DA#8 = RMul(coeff3920,prod391A);
          real basisEval39DB#4 = RMul(coeff3933,prod3926);
          real basisEval39DC#1 = RMul(_t3467,prod3931);
          real basisEval39DD#4 = RMul(coeff394F,prod3939);
          real basisEval39DE#2 = RMul(coeff3933,prod393C);
          real basisEval39DF#3 = RMul(coeff3920,prod393F);
          real basisEval39E0#2 = RMul(coeff3933,prod3945);
          real basisEval39E1#1 = RMul(_t3467,prod3949);
          real basisEval39E2#3 = RMul(coeff3920,prod394B);
          real basisEval39E3#1 = RMul(_t3467,prod394D);
          real basisEval39E4#3 = RMul(coeff3976,prod3955);
          real basisEval39E5#2 = RMul(coeff394F,prod3958);
          real basisEval39E6#3 = RMul(coeff3920,prod395E);
          real basisEval39E7#2 = RMul(coeff394F,prod3964);
          real basisEval39E8#1 = RMul(coeff3933,prod3966);
          real basisEval39E9#1 = RMul(_t3467,prod396A);
          real basisEval39EA#1 = RMul(_t3467,prod3970);
          real basisEval39EB#3 = RMul(coeff3920,prod3972);
          real basisEval39EC#1 = RMul(_t3467,prod3974);
          real basisEval39ED#1 = RMul(coeff39AA,prod397C);
          real basisEval39EE#1 = RMul(coeff3976,prod397F);
          real basisEval39EF#1 = RMul(coeff394F,prod3982);
          real basisEval39F0#1 = RMul(coeff3933,prod3985);
          real basisEval39F1#1 = RMul(coeff3920,prod3988);
          real basisEval39F2#1 = RMul(coeff3976,prod398E);
          real basisEval39F3#1 = RMul(coeff394F,prod3990);
          real basisEval39F4#1 = RMul(_t3467,prod3996);
          real basisEval39F5#1 = RMul(coeff394F,prod3998);
          real basisEval39F6#1 = RMul(coeff3920,prod399C);
          real basisEval39F7#1 = RMul(_t3467,prod399E);
          real basisEval39F8#1 = RMul(coeff3933,prod39A0);
          real basisEval39F9#1 = RMul(_t3467,prod39A4);
          real basisEval39FA#1 = RMul(coeff3920,prod39A6);
          real basisEval39FB#1 = RMul(_t3467,prod39A8);
          tensor[84] intermediateCons39FC#1 = <tensor[84]>[_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,basisEval391B,basisEval391F,basisEval3923,_t3465,_t3465,_t3465,_t3465,basisEval3927,basisEval392A,basisEval392E,basisEval3930,basisEval3932,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval393A,basisEval393D,basisEval3940,basisEval3944,basisEval3946,basisEval3948,basisEval394A,basisEval394C,basisEval394E,basisEval3952,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3956,basisEval3959,basisEval395C,basisEval395F,basisEval3963,basisEval3965,basisEval3967,basisEval3969,basisEval396B,basisEval396D,basisEval396F,basisEval3971,basisEval3973,basisEval3975,basisEval3979,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval397D,basisEval3980,basisEval3983,basisEval3986,basisEval3989,basisEval398D,basisEval398F,basisEval3991,basisEval3993,basisEval3995,basisEval3997,basisEval3999,basisEval399B,basisEval399D,basisEval399F,basisEval39A1,basisEval39A3,basisEval39A5,basisEval39A7,basisEval39A9,basisEval39AD];
          tensor[84] intermediateCons39FD#1 = <tensor[84]>[_t3465,_t3465,basisEval3917,_t3465,_t3465,basisEval391B,basisEval39AE,_t3465,basisEval39AF,_t3465,_t3465,basisEval3927,basisEval39B0,basisEval39B1,_t3465,basisEval39B2,basisEval3932,_t3465,basisEval39B3,_t3465,_t3465,basisEval393A,basisEval39B4,basisEval39B5,basisEval39B6,_t3465,basisEval39B7,basisEval3948,basisEval39B8,_t3465,basisEval39B9,basisEval39BA,_t3465,basisEval39BB,_t3465,_t3465,basisEval3956,basisEval39BC,basisEval39BD,basisEval39BE,basisEval39BF,_t3465,basisEval39C0,basisEval3967,basisEval39C1,basisEval39C2,_t3465,basisEval39C3,basisEval39C4,basisEval3971,_t3465,basisEval39C5,basisEval39C6,_t3465,basisEval39C7,_t3465,_t3465,basisEval397D,basisEval39C8,basisEval39C9,basisEval39CA,basisEval39CB,basisEval39CC,_t3465,basisEval39CD,basisEval3991,basisEval39CE,basisEval39CF,basisEval39D0,_t3465,basisEval39D1,basisEval39D2,basisEval399D,basisEval39D3,_t3465,basisEval39D4,basisEval39D5,basisEval39D6,_t3465,basisEval39D7,basisEval39D8,_t3465,basisEval39D9,_t3465];
          tensor[84] intermediateCons39FE#1 = <tensor[84]>[_t3465,basisEval3917,_t3465,_t3465,basisEval39DA,basisEval391F,_t3465,basisEval39AF,_t3465,_t3465,basisEval39DB,basisEval39B0,basisEval392E,_t3465,basisEval3930,basisEval39DC,_t3465,basisEval39B3,_t3465,_t3465,basisEval39DD,basisEval39DE,basisEval39DF,basisEval3944,_t3465,basisEval39E0,basisEval3948,basisEval39E1,_t3465,basisEval39E2,basisEval39E3,_t3465,basisEval39BB,_t3465,_t3465,basisEval39E4,basisEval39E5,basisEval39BD,basisEval39E6,basisEval3963,_t3465,basisEval39E7,basisEval39E8,basisEval3969,basisEval39E9,_t3465,basisEval396D,basisEval39C4,basisEval39EA,_t3465,basisEval39EB,basisEval39EC,_t3465,basisEval39C7,_t3465,_t3465,basisEval39ED,basisEval39EE,basisEval39EF,basisEval39F0,basisEval39F1,basisEval398D,_t3465,basisEval39F2,basisEval39F3,basisEval39CE,basisEval3995,basisEval39F4,_t3465,basisEval39F5,basisEval399B,basisEval39F6,basisEval39F7,_t3465,basisEval39F8,basisEval39D5,basisEval39F9,_t3465,basisEval39FA,basisEval39FB,_t3465,basisEval39D9,_t3465,_t3465];
          real vdot3AF3#46 = VDot<84>(dofs37BC,intermediateCons39FC);
          real vdot3AF5#46 = VDot<84>(dofs37BC,intermediateCons39FD);
          real vdot3AF7#46 = VDot<84>(dofs37BC,intermediateCons39FE);
          tensor[3] probe_l_823AF1#3 = <tensor[3]>[vdot3AF3,vdot3AF5,vdot3AF7];
          real basisEval3B09#9 = RMul(coeff3920,prod3916);
          real basisEval3B15#5 = RMul(coeff39AA,prod3922);
          real basisEval3B19#4 = RMul(coeff3920,prod3926);
          real basisEval3B20#4 = RMul(coeff3920,prod392D);
          real basisEval3B22#5 = RMul(coeff39AA,prod392F);
          real basisEval3B24#5 = RMul(coeff39AA,prod3931);
          real coeff3B25#19 = 0.12e2;
          real basisEval3B28#3 = RMul(coeff3B25,prod3935);
          real basisEval3B2C#4 = RMul(coeff3920,prod3939);
          real basisEval3B36#4 = RMul(coeff3920,prod3943);
          real basisEval3B38#6 = RMul(coeff39AA,prod3945);
          real basisEval3B3A#3 = RMul(coeff39AA,prod3947);
          real basisEval3B3C#6 = RMul(coeff39AA,prod3949);
          real basisEval3B3E#2 = RMul(coeff3B25,prod394B);
          real basisEval3B40#2 = RMul(coeff3B25,prod394D);
          real coeff3B41#9 = 0.20e2;
          real basisEval3B44#3 = RMul(coeff3B41,prod3951);
          real basisEval3B48#2 = RMul(coeff3920,prod3955);
          real basisEval3B4E#1 = RMul(coeff3920,prod395B);
          real basisEval3B55#2 = RMul(coeff3920,prod3962);
          real basisEval3B57#1 = RMul(coeff39AA,prod3964);
          real basisEval3B59#4 = RMul(coeff39AA,prod3966);
          real basisEval3B5B#4 = RMul(coeff39AA,prod3968);
          real basisEval3B5D#1 = RMul(coeff39AA,prod396A);
          real basisEval3B5F#2 = RMul(coeff3B25,prod396C);
          real basisEval3B61#1 = RMul(coeff3B25,prod396E);
          real basisEval3B63#2 = RMul(coeff3B25,prod3970);
          real basisEval3B65#1 = RMul(coeff3B41,prod3972);
          real basisEval3B67#1 = RMul(coeff3B41,prod3974);
          real coeff3B68#3 = 0.30e2;
          real basisEval3B6B#1 = RMul(coeff3B68,prod3978);
          real basisEval3B74#4 = RMul(coeff394F,prod3931);
          real basisEval3B7A#3 = RMul(coeff394F,prod3947);
          real basisEval3B7C#6 = RMul(coeff39AA,prod394D);
          real basisEval3B84#1 = RMul(coeff394F,prod3966);
          real coeff3B85#10 = 0.8e1;
          real basisEval3B86#1 = RMul(coeff3B85,prod396A);
          real basisEval3B88#4 = RMul(coeff39AA,prod396E);
          real coeff3B89#3 = 0.9e1;
          real basisEval3B8A#1 = RMul(coeff3B89,prod3970);
          real basisEval3B8C#1 = RMul(coeff3B85,prod3974);
          real basisEval3B91#4 = RMul(coeff394F,prod392F);
          real basisEval3B97#6 = RMul(coeff39AA,prod394B);
          real basisEval3B9C#1 = RMul(coeff3B85,prod3964);
          real basisEval3B9D#1 = RMul(coeff394F,prod3968);
          real basisEval3B9F#1 = RMul(coeff3B89,prod396C);
          real basisEval3BA1#1 = RMul(coeff3B85,prod3972);
          real basisEval3BA3#5 = RMul(coeff39AA,prod391E);
          real basisEval3BA4#5 = RMul(coeff39AA,prod3929);
          real basisEval3BA5#3 = RMul(coeff3B25,prod392D);
          real basisEval3BA6#4 = RMul(coeff3920,prod3935);
          real basisEval3BA7#6 = RMul(coeff39AA,prod393C);
          real basisEval3BA8#2 = RMul(coeff3B25,prod393F);
          real basisEval3BA9#3 = RMul(coeff3B41,prod3943);
          real basisEval3BAA#2 = RMul(coeff3B25,prod3949);
          real basisEval3BAC#4 = RMul(coeff3920,prod3951);
          real basisEval3BAD#1 = RMul(coeff39AA,prod3958);
          real basisEval3BAE#2 = RMul(coeff3B25,prod395B);
          real basisEval3BAF#1 = RMul(coeff3B41,prod395E);
          real basisEval3BB0#1 = RMul(coeff3B68,prod3962);
          real basisEval3BB1#1 = RMul(coeff3B25,prod3968);
          real basisEval3BB2#1 = RMul(coeff3B41,prod396A);
          real basisEval3BB3#1 = RMul(coeff3920,prod396C);
          real basisEval3BB5#1 = RMul(coeff39AA,prod3974);
          real basisEval3BB6#2 = RMul(coeff3920,prod3978);
          real basisEval3BB8#4 = RMul(coeff394F,prod3929);
          real basisEval3BBA#6 = RMul(coeff39AA,prod393F);
          real basisEval3BBF#1 = RMul(coeff3B85,prod3958);
          real basisEval3BC0#1 = RMul(coeff3B89,prod395B);
          real basisEval3BC1#1 = RMul(coeff3B85,prod395E);
          real basisEval3BC4#1 = RMul(coeff394F,prod396E);
          real basisEval3BC7#5 = RMul(coeff39AA,prod391A);
          real basisEval3BC8#3 = RMul(coeff3B25,prod3926);
          real basisEval3BC9#3 = RMul(coeff3B41,prod3939);
          real basisEval3BCA#2 = RMul(coeff3B25,prod393C);
          real basisEval3BCB#2 = RMul(coeff3B25,prod3945);
          real basisEval3BCC#1 = RMul(coeff3B68,prod3955);
          real basisEval3BCD#1 = RMul(coeff3B41,prod3958);
          real basisEval3BCE#1 = RMul(coeff39AA,prod395E);
          real basisEval3BCF#1 = RMul(coeff3B41,prod3964);
          real basisEval3BD0#1 = RMul(coeff3B25,prod3966);
          real basisEval3BD1#1 = RMul(coeff3920,prod3970);
          real basisEval3BD2#1 = RMul(coeff39AA,prod3972);
          tensor[84] intermediateCons3BD3#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval39AE,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval39B0,basisEval3B20,basisEval3B22,basisEval3B24,basisEval3B28,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval39B4,basisEval39DF,basisEval3B36,basisEval3B38,basisEval3B3A,basisEval3B3C,basisEval3B3E,basisEval3B40,basisEval3B44,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B48,basisEval39BC,basisEval3B4E,basisEval39E6,basisEval3B55,basisEval3B57,basisEval3B59,basisEval3B5B,basisEval3B5D,basisEval3B5F,basisEval3B61,basisEval3B63,basisEval3B65,basisEval3B67,basisEval3B6B];
          tensor[84] intermediateCons3BD4#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval391B,basisEval39AE,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3927,basisEval39B0,basisEval39B1,_t3465,basisEval3930,basisEval3B74,_t3465,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval393A,basisEval39B4,basisEval39B5,basisEval39B6,_t3465,basisEval3946,basisEval3B7A,basisEval3B3C,_t3465,basisEval394C,basisEval3B7C,_t3465,basisEval3952,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3956,basisEval39BC,basisEval39BD,basisEval39BE,basisEval39BF,_t3465,basisEval3965,basisEval3B84,basisEval3B5B,basisEval3B86,_t3465,basisEval396D,basisEval3B88,basisEval3B8A,_t3465,basisEval3973,basisEval3B8C,_t3465,basisEval3979,_t3465];
          tensor[84] intermediateCons3BD5#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval391F,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DB,basisEval39B0,basisEval392E,_t3465,basisEval3B91,basisEval3932,_t3465,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DD,basisEval39DE,basisEval39DF,basisEval3944,_t3465,basisEval3B38,basisEval3B7A,basisEval394A,_t3465,basisEval3B97,basisEval394E,_t3465,basisEval3952,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39E4,basisEval39E5,basisEval39BD,basisEval39E6,basisEval3963,_t3465,basisEval3B9C,basisEval3B59,basisEval3B9D,basisEval396B,_t3465,basisEval3B9F,basisEval3B88,basisEval3971,_t3465,basisEval3BA1,basisEval3975,_t3465,basisEval3979,_t3465,_t3465];
          tensor[84] intermediateCons3BD6#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval3BA3,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval3BA4,basisEval3BA5,_t3465,_t3465,basisEval3930,basisEval3B24,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval3BA7,basisEval3BA8,basisEval3BA9,_t3465,_t3465,basisEval3946,basisEval3B3A,basisEval3BAA,_t3465,_t3465,basisEval39E2,basisEval3B7C,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B48,basisEval3BAD,basisEval3BAE,basisEval3BAF,basisEval3BB0,_t3465,_t3465,basisEval3965,basisEval3B59,basisEval3BB1,basisEval3BB2,_t3465,_t3465,basisEval3BB3,basisEval3B88,basisEval3B63,_t3465,_t3465,basisEval39EB,basisEval3BB5,_t3465,_t3465,basisEval3BB6,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3BD7#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval39AE,_t3465,_t3465,basisEval39AF,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DB,basisEval3BB8,basisEval39B1,_t3465,_t3465,basisEval3930,basisEval3932,_t3465,_t3465,basisEval39B3,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DD,basisEval3BA7,basisEval3BBA,basisEval39B6,_t3465,_t3465,basisEval39E0,basisEval3B7A,basisEval39B8,_t3465,_t3465,basisEval39E2,basisEval39BA,_t3465,_t3465,basisEval39BB,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39E4,basisEval3BBF,basisEval3BC0,basisEval3BC1,basisEval39BF,_t3465,_t3465,basisEval39E7,basisEval3B59,basisEval3B5B,basisEval39C2,_t3465,_t3465,basisEval396D,basisEval3BC4,basisEval3971,_t3465,_t3465,basisEval39EB,basisEval39C6,_t3465,_t3465,basisEval39C7,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3BD8#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval39AE,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC8,basisEval3BA4,basisEval3B20,_t3465,_t3465,basisEval3B22,basisEval3932,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC9,basisEval3BCA,basisEval3BBA,basisEval3B36,_t3465,_t3465,basisEval3BCB,basisEval3B3A,basisEval394A,_t3465,_t3465,basisEval3B97,basisEval39BA,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BCC,basisEval3BCD,basisEval3BAE,basisEval3BCE,basisEval3B55,_t3465,_t3465,basisEval3BCF,basisEval3BD0,basisEval3B5B,basisEval396B,_t3465,_t3465,basisEval3B5F,basisEval3B88,basisEval3BD1,_t3465,_t3465,basisEval3BD2,basisEval39C6,_t3465,_t3465,basisEval3BB6,_t3465,_t3465,_t3465,_t3465,_t3465];
          real vdot3CBC#10 = VDot<84>(dofs37BC,intermediateCons3BD3);
          real vdot3CBE#15 = VDot<84>(dofs37BC,intermediateCons3BD4);
          real vdot3CC0#15 = VDot<84>(dofs37BC,intermediateCons3BD5);
          tensor[3] tensor3CC1#1 = <tensor[3]>[vdot3CBC,vdot3CBE,vdot3CC0];
          real vdot3CC5#10 = VDot<84>(dofs37BC,intermediateCons3BD6);
          real vdot3CC7#15 = VDot<84>(dofs37BC,intermediateCons3BD7);
          tensor[3] tensor3CC8#1 = <tensor[3]>[vdot3CBE,vdot3CC5,vdot3CC7];
          real vdot3CCE#10 = VDot<84>(dofs37BC,intermediateCons3BD8);
          tensor[3] tensor3CCF#1 = <tensor[3]>[vdot3CC0,vdot3CC7,vdot3CCE];
          real vdot3CE9#15 = VDot<3>(tensor3CC1,probe_l_823AF1);
          real vdot3CEB#15 = VDot<3>(tensor3CC8,probe_l_823AF1);
          real vdot3CED#15 = VDot<3>(tensor3CCF,probe_l_823AF1);
          real r3CF9#11 = RMul(_t3465,_t3467);
          real r3CFA#25 = RMul(_t3465,_t3465);
          real r3CFB#3 = RAdd(r3CF9,r3CFA);
          real r3CFC#1 = RAdd(r3CFB,r3CFA);
          real r3CFD#39 = RAdd(r3CFC,r3CFA);
          real r3CFE#3 = RAdd(r3CFA,r3CF9);
          real r3CFF#1 = RAdd(r3CFE,r3CFA);
          real r3D00#39 = RAdd(r3CFF,r3CFA);
          real r3D01#3 = RAdd(r3CFA,r3CFA);
          real r3D02#1 = RAdd(r3D01,r3CF9);
          real r3D03#39 = RAdd(r3D02,r3CFA);
          real r3D05#15 = RMul(_t3467,_t3465);
          real r3D06#1 = RAdd(r3CFB,r3D05);
          real r3D07#13 = RAdd(r3D06,r3D05);
          real r3D08#1 = RAdd(r3CFE,r3D05);
          real r3D09#13 = RAdd(r3D08,r3D05);
          real r3D0B#1 = RAdd(r3D01,prod3915);
          real r3D0C#13 = RAdd(r3D0B,r3D05);
          real realLit3D0E#3 = -0.1e1;
          real r3D0F#15 = RMul(realLit3D0E,_t3465);
          real r3D10#1 = RAdd(r3CF9,r3D0F);
          real r3D11#1 = RAdd(r3D10,r3CFA);
          real r3D12#13 = RAdd(r3D11,r3D05);
          real r3D13#3 = RMul(realLit3D0E,_t3467);
          real r3D14#1 = RAdd(r3CFA,r3D13);
          real r3D15#1 = RAdd(r3D14,r3CFA);
          real r3D16#13 = RAdd(r3D15,r3D05);
          real r3D17#1 = RAdd(r3CFA,r3D0F);
          real r3D18#1 = RAdd(r3D17,r3CF9);
          real r3D19#13 = RAdd(r3D18,r3D05);
          real r3D1C#1 = RAdd(r3CFB,r3D0F);
          real r3D1D#13 = RAdd(r3D1C,r3D0F);
          real r3D1E#1 = RAdd(r3CFE,r3D0F);
          real r3D1F#13 = RAdd(r3D1E,r3D0F);
          real r3D20#1 = RAdd(r3D01,r3D13);
          real r3D21#13 = RAdd(r3D20,r3D0F);
          real r3D23#1 = RAdd(prod3915,r3CFA);
          real r3D24#1 = RAdd(r3D23,r3CFA);
          real r3D25#13 = RAdd(r3D24,r3D05);
          real r3D26#1 = RAdd(r3D05,r3CF9);
          real r3D27#1 = RAdd(r3D26,r3CFA);
          real r3D28#13 = RAdd(r3D27,r3D05);
          real r3D29#1 = RAdd(r3D05,r3CFA);
          real r3D2A#1 = RAdd(r3D29,r3CF9);
          real r3D2B#13 = RAdd(r3D2A,r3D05);
          real r3D2E#1 = RAdd(r3CF9,r3D05);
          real r3D2F#1 = RAdd(r3D2E,r3CFA);
          real r3D30#13 = RAdd(r3D2F,r3D0F);
          real r3D31#1 = RAdd(r3CFA,prod3915);
          real r3D32#1 = RAdd(r3D31,r3CFA);
          real r3D33#13 = RAdd(r3D32,r3D0F);
          real r3D34#1 = RAdd(r3CFA,r3D05);
          real r3D35#1 = RAdd(r3D34,r3CF9);
          real r3D36#13 = RAdd(r3D35,r3D0F);
          real r3D38#1 = RAdd(r3D13,r3CFA);
          real r3D39#1 = RAdd(r3D38,r3CFA);
          real r3D3A#13 = RAdd(r3D39,r3D0F);
          real r3D3B#1 = RAdd(r3D0F,r3CF9);
          real r3D3C#1 = RAdd(r3D3B,r3CFA);
          real r3D3D#13 = RAdd(r3D3C,r3D0F);
          real r3D3E#1 = RAdd(r3D0F,r3CFA);
          real r3D3F#1 = RAdd(r3D3E,r3CF9);
          real r3D40#13 = RAdd(r3D3F,r3D0F);
          real r3D94#1 = RMul(vdot3CE9,r3CFD);
          real r3D97#1 = RMul(vdot3CEB,r3D07);
          real r3D9A#1 = RMul(vdot3CED,r3D12);
          real r3D9B#1 = RAdd(r3D94,r3D97);
          real r3D9C#1 = RAdd(r3D9B,r3D9A);
          real r3D9E#1 = RMul(vdot3CE9,r3D00);
          real r3DA0#1 = RMul(vdot3CEB,r3D09);
          real r3DA2#1 = RMul(vdot3CED,r3D16);
          real r3DA3#1 = RAdd(r3D9E,r3DA0);
          real r3DA4#1 = RAdd(r3DA3,r3DA2);
          real r3DA6#1 = RMul(vdot3CE9,r3D03);
          real r3DA8#1 = RMul(vdot3CEB,r3D0C);
          real r3DAA#1 = RMul(vdot3CED,r3D19);
          real r3DAB#1 = RAdd(r3DA6,r3DA8);
          real r3DAC#1 = RAdd(r3DAB,r3DAA);
          real r3DAF#1 = RMul(vdot3CE9,r3D1D);
          real r3DB1#1 = RMul(vdot3CEB,r3CFD);
          real r3DB3#1 = RMul(vdot3CED,r3D25);
          real r3DB4#1 = RAdd(r3DAF,r3DB1);
          real r3DB5#1 = RAdd(r3DB4,r3DB3);
          real r3DB7#1 = RMul(vdot3CE9,r3D1F);
          real r3DB9#1 = RMul(vdot3CEB,r3D00);
          real r3DBB#1 = RMul(vdot3CED,r3D28);
          real r3DBC#1 = RAdd(r3DB7,r3DB9);
          real r3DBD#1 = RAdd(r3DBC,r3DBB);
          real r3DBF#1 = RMul(vdot3CE9,r3D21);
          real r3DC1#1 = RMul(vdot3CEB,r3D03);
          real r3DC3#1 = RMul(vdot3CED,r3D2B);
          real r3DC4#1 = RAdd(r3DBF,r3DC1);
          real r3DC5#1 = RAdd(r3DC4,r3DC3);
          real r3DC8#1 = RMul(vdot3CE9,r3D30);
          real r3DCA#1 = RMul(vdot3CEB,r3D3A);
          real r3DCC#1 = RMul(vdot3CED,r3CFD);
          real r3DCD#1 = RAdd(r3DC8,r3DCA);
          real r3DCE#1 = RAdd(r3DCD,r3DCC);
          real r3DD0#1 = RMul(vdot3CE9,r3D33);
          real r3DD2#1 = RMul(vdot3CEB,r3D3D);
          real r3DD4#1 = RMul(vdot3CED,r3D00);
          real r3DD5#1 = RAdd(r3DD0,r3DD2);
          real r3DD6#1 = RAdd(r3DD5,r3DD4);
          real r3DD8#1 = RMul(vdot3CE9,r3D36);
          real r3DDA#1 = RMul(vdot3CEB,r3D40);
          real r3DDC#1 = RMul(vdot3CED,r3D03);
          real r3DDD#1 = RAdd(r3DD8,r3DDA);
          real r3DDE#1 = RAdd(r3DDD,r3DDC);
          real r3E33#1 = RMul(vdot3AF3,r3D9C);
          real r3E36#1 = RMul(vdot3AF5,r3DB5);
          real r3E39#1 = RMul(vdot3AF7,r3DCE);
          real r3E3A#1 = RAdd(r3E33,r3E36);
          real r3E3B#4 = RAdd(r3E3A,r3E39);
          real r3E3D#1 = RMul(vdot3AF3,r3DA4);
          real r3E3F#1 = RMul(vdot3AF5,r3DBD);
          real r3E41#1 = RMul(vdot3AF7,r3DD6);
          real r3E42#1 = RAdd(r3E3D,r3E3F);
          real r3E43#4 = RAdd(r3E42,r3E41);
          real r3E45#1 = RMul(vdot3AF3,r3DAC);
          real r3E47#1 = RMul(vdot3AF5,r3DC5);
          real r3E49#1 = RMul(vdot3AF7,r3DDE);
          real r3E4A#1 = RAdd(r3E45,r3E47);
          real r3E4B#4 = RAdd(r3E4A,r3E49);
          tensor[3] op1_e3_l_943E30#11 = <tensor[3]>[r3E3B,r3E43,r3E4B];
          real basisEval3E72#3 = RMul(coeff39AA,prod3916);
          real coeff3E7B#13 = 0.24e2;
          real basisEval3E7E#1 = RMul(coeff3E7B,prod3922);
          real basisEval3E82#4 = RMul(coeff39AA,prod3926);
          real basisEval3E89#4 = RMul(coeff39AA,prod392D);
          real basisEval3E8B#2 = RMul(coeff3E7B,prod392F);
          real basisEval3E8D#2 = RMul(coeff3E7B,prod3931);
          real coeff3E8E#9 = 0.60e2;
          real basisEval3E91#1 = RMul(coeff3E8E,prod3935);
          real basisEval3E95#2 = RMul(coeff39AA,prod3939);
          real basisEval3E9F#2 = RMul(coeff39AA,prod3943);
          real basisEval3EA1#2 = RMul(coeff3E7B,prod3945);
          real basisEval3EA3#3 = RMul(coeff3E7B,prod3947);
          real basisEval3EA5#2 = RMul(coeff3E7B,prod3949);
          real basisEval3EA7#1 = RMul(coeff3E8E,prod394B);
          real basisEval3EA9#1 = RMul(coeff3E8E,prod394D);
          real coeff3EAA#3 = 0.120e3;
          real basisEval3EAD#1 = RMul(coeff3EAA,prod3951);
          real basisEval3EB2#2 = RMul(coeff394F,prod391E);
          real basisEval3EB8#2 = RMul(coeff3B25,prod3931);
          real basisEval3EBB#1 = RMul(coeff394F,prod393C);
          real basisEval3EBD#2 = RMul(coeff3B85,prod3943);
          real basisEval3EBF#6 = RMul(coeff3B25,prod3947);
          real coeff3EC0#6 = 0.18e2;
          real basisEval3EC1#1 = RMul(coeff3EC0,prod3949);
          real basisEval3EC3#2 = RMul(coeff3E7B,prod394D);
          real basisEval3EC6#2 = RMul(coeff394F,prod391A);
          real basisEval3EC9#2 = RMul(coeff3B25,prod392F);
          real basisEval3ECB#2 = RMul(coeff3B85,prod3939);
          real basisEval3ECC#1 = RMul(coeff394F,prod393F);
          real basisEval3ECE#1 = RMul(coeff3EC0,prod3945);
          real basisEval3ED0#2 = RMul(coeff3E7B,prod394B);
          real basisEval3ED2#2 = RMul(coeff394F,prod3922);
          real basisEval3ED5#4 = RMul(coeff39AA,prod3935);
          real basisEval3ED8#1 = RMul(coeff394F,prod3945);
          real basisEval3EDA#1 = RMul(coeff3EC0,prod394D);
          real basisEval3EDB#2 = RMul(coeff3B85,prod3951);
          real basisEval3EE5#1 = RMul(coeff3B85,prod3947);
          real basisEval3EEB#1 = RMul(coeff394F,prod3949);
          real basisEval3EEC#1 = RMul(coeff3EC0,prod394B);
          real basisEval3EED#1 = RMul(coeff3E7B,prod391E);
          real basisEval3EEE#2 = RMul(coeff3E7B,prod3929);
          real basisEval3EEF#1 = RMul(coeff3E8E,prod392D);
          real basisEval3EF0#2 = RMul(coeff3E7B,prod393C);
          real basisEval3EF1#1 = RMul(coeff3E8E,prod393F);
          real basisEval3EF2#1 = RMul(coeff3EAA,prod3943);
          real basisEval3EF3#1 = RMul(coeff3E8E,prod3949);
          real basisEval3EF4#2 = RMul(coeff39AA,prod3951);
          real basisEval3EF5#2 = RMul(coeff3B25,prod3929);
          real basisEval3EF7#1 = RMul(coeff3EC0,prod393C);
          real basisEval3EF8#2 = RMul(coeff3E7B,prod393F);
          real basisEval3EFA#1 = RMul(coeff394F,prod394B);
          real basisEval3EFC#1 = RMul(coeff3EC0,prod393F);
          real basisEval3EFE#1 = RMul(coeff394F,prod394D);
          real basisEval3EFF#1 = RMul(coeff3E7B,prod391A);
          real basisEval3F00#1 = RMul(coeff3E8E,prod3926);
          real basisEval3F01#1 = RMul(coeff3EAA,prod3939);
          real basisEval3F02#1 = RMul(coeff3E8E,prod393C);
          real basisEval3F03#1 = RMul(coeff3E8E,prod3945);
          tensor[84] intermediateCons3F04#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E72,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval3BA3,basisEval3E7E,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3BA4,basisEval3E89,basisEval3E8B,basisEval3E8D,basisEval3E91,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E95,basisEval3BA7,basisEval3BBA,basisEval3E9F,basisEval3EA1,basisEval3EA3,basisEval3EA5,basisEval3EA7,basisEval3EA9,basisEval3EAD];
          tensor[84] intermediateCons3F05#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval3EB2,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval3BB8,basisEval3E89,_t3465,basisEval3B22,basisEval3EB8,_t3465,basisEval3B28,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval3EBB,basisEval3BBA,basisEval3EBD,_t3465,basisEval3B38,basisEval3EBF,basisEval3EC1,_t3465,basisEval3B3E,basisEval3EC3,_t3465,basisEval3B44,_t3465];
          tensor[84] intermediateCons3F06#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3EC6,basisEval39AE,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3BB8,basisEval3B20,_t3465,basisEval3EC9,basisEval3B24,_t3465,basisEval3B28,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3ECB,basisEval3BA7,basisEval3ECC,basisEval3B36,_t3465,basisEval3ECE,basisEval3EBF,basisEval3B3C,_t3465,basisEval3ED0,basisEval3B40,_t3465,basisEval3B44,_t3465,_t3465];
          tensor[84] intermediateCons3F07#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval3BA3,_t3465,_t3465,basisEval3ED2,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B19,basisEval3BA4,basisEval3BA5,_t3465,_t3465,basisEval3B91,basisEval3EB8,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B2C,basisEval3BA7,basisEval3BA8,basisEval3BA9,_t3465,_t3465,basisEval3ED8,basisEval3EBF,basisEval3EA5,_t3465,_t3465,basisEval3B97,basisEval3EDA,_t3465,_t3465,basisEval3EDB,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F08#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3917,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DA,basisEval39AE,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DB,basisEval3BB8,basisEval39B1,_t3465,_t3465,basisEval3B91,basisEval3B74,_t3465,_t3465,basisEval3936,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval39DD,basisEval3BA7,basisEval3BBA,basisEval39B6,_t3465,_t3465,basisEval3B38,basisEval3EE5,basisEval3B3C,_t3465,_t3465,basisEval3B97,basisEval3B7C,_t3465,_t3465,basisEval3952,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F09#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval39AE,_t3465,_t3465,basisEval3ED2,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC8,basisEval3BA4,basisEval3B20,_t3465,_t3465,basisEval3EC9,basisEval3B74,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC9,basisEval3BCA,basisEval3BBA,basisEval3B36,_t3465,_t3465,basisEval3EA1,basisEval3EBF,basisEval3EEB,_t3465,_t3465,basisEval3EEC,basisEval3B7C,_t3465,_t3465,basisEval3EDB,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0A#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E72,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval3EED,_t3465,_t3465,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3EEE,basisEval3EEF,_t3465,_t3465,_t3465,basisEval3B22,basisEval3E8D,_t3465,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E95,basisEval3EF0,basisEval3EF1,basisEval3EF2,_t3465,_t3465,_t3465,basisEval3B38,basisEval3EA3,basisEval3EF3,_t3465,_t3465,_t3465,basisEval3B97,basisEval3EC3,_t3465,_t3465,_t3465,basisEval3EF4,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0B#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3EC6,basisEval3BA3,_t3465,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E82,basisEval3EF5,basisEval3BA5,_t3465,_t3465,_t3465,basisEval3B91,basisEval3B24,_t3465,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3ECB,basisEval3EF7,basisEval3EF8,basisEval3BA9,_t3465,_t3465,_t3465,basisEval3B38,basisEval3EBF,basisEval3BAA,_t3465,_t3465,_t3465,basisEval3EFA,basisEval3B7C,_t3465,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0C#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3B09,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC7,basisEval3EB2,_t3465,_t3465,_t3465,basisEval3923,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC8,basisEval3EF5,basisEval3E89,_t3465,_t3465,_t3465,basisEval3B22,basisEval3B74,_t3465,_t3465,_t3465,basisEval3BA6,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3BC9,basisEval3EF0,basisEval3EFC,basisEval3EBD,_t3465,_t3465,_t3465,basisEval3BCB,basisEval3EBF,basisEval3B3C,_t3465,_t3465,_t3465,basisEval3B97,basisEval3EFE,_t3465,_t3465,_t3465,basisEval3BAC,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          tensor[84] intermediateCons3F0D#1 = <tensor[84]>[_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3E72,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3EFF,basisEval3BA3,_t3465,_t3465,_t3465,basisEval3B15,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3F00,basisEval3EEE,basisEval3E89,_t3465,_t3465,_t3465,basisEval3E8B,basisEval3B24,_t3465,_t3465,_t3465,basisEval3ED5,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,basisEval3F01,basisEval3F02,basisEval3EF8,basisEval3E9F,_t3465,_t3465,_t3465,basisEval3F03,basisEval3EA3,basisEval3B3C,_t3465,_t3465,_t3465,basisEval3ED0,basisEval3B7C,_t3465,_t3465,_t3465,basisEval3EF4,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465,_t3465];
          real vdot3FC9#1 = VDot<84>(dofs37BC,intermediateCons3F04);
          real vdot3FCB#2 = VDot<84>(dofs37BC,intermediateCons3F05);
          real vdot3FCD#2 = VDot<84>(dofs37BC,intermediateCons3F06);
          real vdot3FD2#2 = VDot<84>(dofs37BC,intermediateCons3F07);
          real vdot3FD4#3 = VDot<84>(dofs37BC,intermediateCons3F08);
          real vdot3FDB#2 = VDot<84>(dofs37BC,intermediateCons3F09);
          real vdot3FE8#1 = VDot<84>(dofs37BC,intermediateCons3F0A);
          real vdot3FEA#2 = VDot<84>(dofs37BC,intermediateCons3F0B);
          real vdot3FF1#2 = VDot<84>(dofs37BC,intermediateCons3F0C);
          real vdot4007#1 = VDot<84>(dofs37BC,intermediateCons3F0D);
          real r4051#4 = RMul(vdot3AF3,vdot3FC9);
          real r4053#5 = RMul(vdot3AF3,vdot3FCB);
          real r4055#5 = RMul(vdot3AF3,vdot3FCD);
          real r405A#4 = RMul(vdot3AF3,vdot3FD2);
          real r405C#5 = RMul(vdot3AF3,vdot3FD4);
          real r4063#4 = RMul(vdot3AF3,vdot3FDB);
          real r4068#4 = RMul(vdot3AF5,vdot3FCB);
          real r406A#5 = RMul(vdot3AF5,vdot3FD2);
          real r406C#5 = RMul(vdot3AF5,vdot3FD4);
          real r4071#4 = RMul(vdot3AF5,vdot3FE8);
          real r4073#5 = RMul(vdot3AF5,vdot3FEA);
          real r407A#4 = RMul(vdot3AF5,vdot3FF1);
          real r407F#4 = RMul(vdot3AF7,vdot3FCD);
          real r4081#5 = RMul(vdot3AF7,vdot3FD4);
          real r4083#5 = RMul(vdot3AF7,vdot3FDB);
          real r4088#4 = RMul(vdot3AF7,vdot3FEA);
          real r408A#5 = RMul(vdot3AF7,vdot3FF1);
          real r4091#4 = RMul(vdot3AF7,vdot4007);
          real r40DD#4 = RMul(vdot3CBC,vdot3CBC);
          real r40DF#4 = RMul(vdot3CBC,vdot3CBE);
          real r40E1#4 = RMul(vdot3CBC,vdot3CC0);
          real r40E4#8 = RMul(vdot3CBE,vdot3CBE);
          real r40E6#4 = RMul(vdot3CBE,vdot3CC5);
          real r40E8#4 = RMul(vdot3CBE,vdot3CC7);
          real r40EB#8 = RMul(vdot3CC0,vdot3CC0);
          real r40ED#4 = RMul(vdot3CC0,vdot3CC7);
          real r40EF#4 = RMul(vdot3CC0,vdot3CCE);
          real r40F2#4 = RMul(vdot3CBE,vdot3CBC);
          real r40F4#4 = RMul(vdot3CBE,vdot3CC0);
          real r40F6#4 = RMul(vdot3CC5,vdot3CBE);
          real r40F7#4 = RMul(vdot3CC5,vdot3CC5);
          real r40F8#4 = RMul(vdot3CC5,vdot3CC7);
          real r40FA#4 = RMul(vdot3CC7,vdot3CC0);
          real r40FB#8 = RMul(vdot3CC7,vdot3CC7);
          real r40FC#4 = RMul(vdot3CC7,vdot3CCE);
          real r40FF#4 = RMul(vdot3CC0,vdot3CBC);
          real r4100#4 = RMul(vdot3CC0,vdot3CBE);
          real r4103#4 = RMul(vdot3CC7,vdot3CBE);
          real r4104#4 = RMul(vdot3CC7,vdot3CC5);
          real r4107#4 = RMul(vdot3CCE,vdot3CC0);
          real r4108#4 = RMul(vdot3CCE,vdot3CC7);
          real r4109#4 = RMul(vdot3CCE,vdot3CCE);
          real r4141#1 = RAdd(r4051,r40DD);
          real r4144#1 = RAdd(r4068,r40E4);
          real r4147#1 = RAdd(r407F,r40EB);
          real r4148#1 = RAdd(r4141,r4144);
          real r4149#3 = RAdd(r4148,r4147);
          real r414C#1 = RAdd(r4053,r40DF);
          real r414F#1 = RAdd(r406A,r40E6);
          real r4152#1 = RAdd(r4081,r40ED);
          real r4153#1 = RAdd(r414C,r414F);
          real r4154#3 = RAdd(r4153,r4152);
          real r4157#1 = RAdd(r4055,r40E1);
          real r415A#1 = RAdd(r406C,r40E8);
          real r415D#1 = RAdd(r4083,r40EF);
          real r415E#1 = RAdd(r4157,r415A);
          real r415F#3 = RAdd(r415E,r415D);
          real r4163#1 = RAdd(r4053,r40F2);
          real r4166#1 = RAdd(r406A,r40F6);
          real r4169#1 = RAdd(r4081,r40FA);
          real r416A#1 = RAdd(r4163,r4166);
          real r416B#3 = RAdd(r416A,r4169);
          real r416E#1 = RAdd(r405A,r40E4);
          real r4171#1 = RAdd(r4071,r40F7);
          real r4174#1 = RAdd(r4088,r40FB);
          real r4175#1 = RAdd(r416E,r4171);
          real r4176#3 = RAdd(r4175,r4174);
          real r4179#1 = RAdd(r405C,r40F4);
          real r417C#1 = RAdd(r4073,r40F8);
          real r417F#1 = RAdd(r408A,r40FC);
          real r4180#1 = RAdd(r4179,r417C);
          real r4181#3 = RAdd(r4180,r417F);
          real r4185#1 = RAdd(r4055,r40FF);
          real r4188#1 = RAdd(r406C,r4103);
          real r418B#1 = RAdd(r4083,r4107);
          real r418C#1 = RAdd(r4185,r4188);
          real r418D#3 = RAdd(r418C,r418B);
          real r4190#1 = RAdd(r405C,r4100);
          real r4193#1 = RAdd(r4073,r4104);
          real r4196#1 = RAdd(r408A,r4108);
          real r4197#1 = RAdd(r4190,r4193);
          real r4198#3 = RAdd(r4197,r4196);
          real r419B#1 = RAdd(r4063,r40EB);
          real r419E#1 = RAdd(r407A,r40FB);
          real r41A1#1 = RAdd(r4091,r4109);
          real r41A2#1 = RAdd(r419B,r419E);
          real r41A3#3 = RAdd(r41A2,r41A1);
          real r4210#1 = RMul(vdot3CE9,vdot3CBC);
          real r4212#2 = RMul(vdot3CE9,vdot3CBE);
          real r4214#2 = RMul(vdot3CE9,vdot3CC0);
          tensor[3] tensor4215#4 = <tensor[3]>[r4210,r4212,r4214];
          real r4219#1 = RMul(vdot3CE9,vdot3CC5);
          real r421B#2 = RMul(vdot3CE9,vdot3CC7);
          tensor[3] tensor421C#4 = <tensor[3]>[r4212,r4219,r421B];
          real r4222#1 = RMul(vdot3CE9,vdot3CCE);
          tensor[3] tensor4223#4 = <tensor[3]>[r4214,r421B,r4222];
          real r4226#1 = RMul(vdot3CEB,vdot3CBC);
          real r4227#2 = RMul(vdot3CEB,vdot3CBE);
          real r4228#2 = RMul(vdot3CEB,vdot3CC0);
          tensor[3] tensor4229#4 = <tensor[3]>[r4226,r4227,r4228];
          real r422B#1 = RMul(vdot3CEB,vdot3CC5);
          real r422C#2 = RMul(vdot3CEB,vdot3CC7);
          tensor[3] tensor422D#4 = <tensor[3]>[r4227,r422B,r422C];
          real r4230#1 = RMul(vdot3CEB,vdot3CCE);
          tensor[3] tensor4231#4 = <tensor[3]>[r4228,r422C,r4230];
          real r4234#1 = RMul(vdot3CED,vdot3CBC);
          real r4235#2 = RMul(vdot3CED,vdot3CBE);
          real r4236#2 = RMul(vdot3CED,vdot3CC0);
          tensor[3] tensor4237#4 = <tensor[3]>[r4234,r4235,r4236];
          real r4239#1 = RMul(vdot3CED,vdot3CC5);
          real r423A#2 = RMul(vdot3CED,vdot3CC7);
          tensor[3] tensor423B#4 = <tensor[3]>[r4235,r4239,r423A];
          real r423E#1 = RMul(vdot3CED,vdot3CCE);
          tensor[3] tensor423F#4 = <tensor[3]>[r4236,r423A,r423E];
          real r4279#1 = RMul(vdot3AF3,r4149);
          real r427B#1 = RMul(vdot3AF3,r4154);
          real r427D#1 = RMul(vdot3AF3,r415F);
          tensor[3] tensor427E#1 = <tensor[3]>[r4279,r427B,r427D];
          real r4280#1 = RMul(vdot3AF3,r416B);
          real r4282#1 = RMul(vdot3AF3,r4176);
          real r4284#1 = RMul(vdot3AF3,r4181);
          tensor[3] tensor4285#1 = <tensor[3]>[r4280,r4282,r4284];
          real r4287#1 = RMul(vdot3AF3,r418D);
          real r4289#1 = RMul(vdot3AF3,r4198);
          real r428B#1 = RMul(vdot3AF3,r41A3);
          tensor[3] tensor428C#1 = <tensor[3]>[r4287,r4289,r428B];
          real r428F#1 = RMul(vdot3AF5,r4149);
          real r4290#1 = RMul(vdot3AF5,r4154);
          real r4291#1 = RMul(vdot3AF5,r415F);
          tensor[3] tensor4292#1 = <tensor[3]>[r428F,r4290,r4291];
          real r4293#1 = RMul(vdot3AF5,r416B);
          real r4294#1 = RMul(vdot3AF5,r4176);
          real r4295#1 = RMul(vdot3AF5,r4181);
          tensor[3] tensor4296#1 = <tensor[3]>[r4293,r4294,r4295];
          real r4297#1 = RMul(vdot3AF5,r418D);
          real r4298#1 = RMul(vdot3AF5,r4198);
          real r4299#1 = RMul(vdot3AF5,r41A3);
          tensor[3] tensor429A#1 = <tensor[3]>[r4297,r4298,r4299];
          real r429D#1 = RMul(vdot3AF7,r4149);
          real r429E#1 = RMul(vdot3AF7,r4154);
          real r429F#1 = RMul(vdot3AF7,r415F);
          tensor[3] tensor42A0#1 = <tensor[3]>[r429D,r429E,r429F];
          real r42A1#1 = RMul(vdot3AF7,r416B);
          real r42A2#1 = RMul(vdot3AF7,r4176);
          real r42A3#1 = RMul(vdot3AF7,r4181);
          tensor[3] tensor42A4#1 = <tensor[3]>[r42A1,r42A2,r42A3];
          real r42A5#1 = RMul(vdot3AF7,r418D);
          real r42A6#1 = RMul(vdot3AF7,r4198);
          real r42A7#1 = RMul(vdot3AF7,r41A3);
          tensor[3] tensor42A8#1 = <tensor[3]>[r42A5,r42A6,r42A7];
          tensor[3] v42E2#3 = VAdd<3>(tensor4215,tensor427E);
          tensor[3] v42E5#3 = VAdd<3>(tensor421C,tensor4292);
          tensor[3] v42E8#3 = VAdd<3>(tensor4223,tensor42A0);
          tensor[3] v42EC#3 = VAdd<3>(tensor4229,tensor4285);
          tensor[3] v42EF#3 = VAdd<3>(tensor422D,tensor4296);
          tensor[3] v42F2#3 = VAdd<3>(tensor4231,tensor42A4);
          tensor[3] v42F6#3 = VAdd<3>(tensor4237,tensor428C);
          tensor[3] v42F9#3 = VAdd<3>(tensor423B,tensor429A);
          tensor[3] v42FC#3 = VAdd<3>(tensor423F,tensor42A8);
          real r431F#3 = VIndex<3,0>(v42E2);
          real r4321#1 = RMul(r431F,r3CFD);
          real r4322#3 = VIndex<3,0>(v42EC);
          real r4324#1 = RMul(r4322,r3D07);
          real r4325#3 = VIndex<3,0>(v42F6);
          real r4327#1 = RMul(r4325,r3D12);
          real r4328#3 = VIndex<3,0>(v42E5);
          real r432A#1 = RMul(r4328,r3D1D);
          real r432B#3 = VIndex<3,0>(v42EF);
          real r432D#1 = RMul(r432B,r3CFD);
          real r432E#3 = VIndex<3,0>(v42F9);
          real r4330#1 = RMul(r432E,r3D25);
          real r4331#3 = VIndex<3,0>(v42E8);
          real r4333#1 = RMul(r4331,r3D30);
          real r4334#3 = VIndex<3,0>(v42F2);
          real r4336#1 = RMul(r4334,r3D3A);
          real r4337#3 = VIndex<3,0>(v42FC);
          real r4339#1 = RMul(r4337,r3CFD);
          real r433A#1 = RAdd(r4321,r4324);
          real r433B#1 = RAdd(r433A,r4327);
          real r433C#1 = RAdd(r433B,r432A);
          real r433D#1 = RAdd(r433C,r432D);
          real r433E#1 = RAdd(r433D,r4330);
          real r433F#1 = RAdd(r433E,r4333);
          real r4340#1 = RAdd(r433F,r4336);
          real r4341#1 = RAdd(r4340,r4339);
          real r4343#1 = RMul(r431F,r3D00);
          real r4345#1 = RMul(r4322,r3D09);
          real r4347#1 = RMul(r4325,r3D16);
          real r4349#1 = RMul(r4328,r3D1F);
          real r434B#1 = RMul(r432B,r3D00);
          real r434D#1 = RMul(r432E,r3D28);
          real r434F#1 = RMul(r4331,r3D33);
          real r4351#1 = RMul(r4334,r3D3D);
          real r4353#1 = RMul(r4337,r3D00);
          real r4354#1 = RAdd(r4343,r4345);
          real r4355#1 = RAdd(r4354,r4347);
          real r4356#1 = RAdd(r4355,r4349);
          real r4357#1 = RAdd(r4356,r434B);
          real r4358#1 = RAdd(r4357,r434D);
          real r4359#1 = RAdd(r4358,r434F);
          real r435A#1 = RAdd(r4359,r4351);
          real r435B#1 = RAdd(r435A,r4353);
          real r435D#1 = RMul(r431F,r3D03);
          real r435F#1 = RMul(r4322,r3D0C);
          real r4361#1 = RMul(r4325,r3D19);
          real r4363#1 = RMul(r4328,r3D21);
          real r4365#1 = RMul(r432B,r3D03);
          real r4367#1 = RMul(r432E,r3D2B);
          real r4369#1 = RMul(r4331,r3D36);
          real r436B#1 = RMul(r4334,r3D40);
          real r436D#1 = RMul(r4337,r3D03);
          real r436E#1 = RAdd(r435D,r435F);
          real r436F#1 = RAdd(r436E,r4361);
          real r4370#1 = RAdd(r436F,r4363);
          real r4371#1 = RAdd(r4370,r4365);
          real r4372#1 = RAdd(r4371,r4367);
          real r4373#1 = RAdd(r4372,r4369);
          real r4374#1 = RAdd(r4373,r436B);
          real r4375#1 = RAdd(r4374,r436D);
          real r4377#3 = VIndex<3,1>(v42E2);
          real r4378#1 = RMul(r4377,r3CFD);
          real r4379#3 = VIndex<3,1>(v42EC);
          real r437A#1 = RMul(r4379,r3D07);
          real r437B#3 = VIndex<3,1>(v42F6);
          real r437C#1 = RMul(r437B,r3D12);
          real r437D#3 = VIndex<3,1>(v42E5);
          real r437E#1 = RMul(r437D,r3D1D);
          real r437F#3 = VIndex<3,1>(v42EF);
          real r4380#1 = RMul(r437F,r3CFD);
          real r4381#3 = VIndex<3,1>(v42F9);
          real r4382#1 = RMul(r4381,r3D25);
          real r4383#3 = VIndex<3,1>(v42E8);
          real r4384#1 = RMul(r4383,r3D30);
          real r4385#3 = VIndex<3,1>(v42F2);
          real r4386#1 = RMul(r4385,r3D3A);
          real r4387#3 = VIndex<3,1>(v42FC);
          real r4388#1 = RMul(r4387,r3CFD);
          real r4389#1 = RAdd(r4378,r437A);
          real r438A#1 = RAdd(r4389,r437C);
          real r438B#1 = RAdd(r438A,r437E);
          real r438C#1 = RAdd(r438B,r4380);
          real r438D#1 = RAdd(r438C,r4382);
          real r438E#1 = RAdd(r438D,r4384);
          real r438F#1 = RAdd(r438E,r4386);
          real r4390#1 = RAdd(r438F,r4388);
          real r4391#1 = RMul(r4377,r3D00);
          real r4392#1 = RMul(r4379,r3D09);
          real r4393#1 = RMul(r437B,r3D16);
          real r4394#1 = RMul(r437D,r3D1F);
          real r4395#1 = RMul(r437F,r3D00);
          real r4396#1 = RMul(r4381,r3D28);
          real r4397#1 = RMul(r4383,r3D33);
          real r4398#1 = RMul(r4385,r3D3D);
          real r4399#1 = RMul(r4387,r3D00);
          real r439A#1 = RAdd(r4391,r4392);
          real r439B#1 = RAdd(r439A,r4393);
          real r439C#1 = RAdd(r439B,r4394);
          real r439D#1 = RAdd(r439C,r4395);
          real r439E#1 = RAdd(r439D,r4396);
          real r439F#1 = RAdd(r439E,r4397);
          real r43A0#1 = RAdd(r439F,r4398);
          real r43A1#1 = RAdd(r43A0,r4399);
          real r43A2#1 = RMul(r4377,r3D03);
          real r43A3#1 = RMul(r4379,r3D0C);
          real r43A4#1 = RMul(r437B,r3D19);
          real r43A5#1 = RMul(r437D,r3D21);
          real r43A6#1 = RMul(r437F,r3D03);
          real r43A7#1 = RMul(r4381,r3D2B);
          real r43A8#1 = RMul(r4383,r3D36);
          real r43A9#1 = RMul(r4385,r3D40);
          real r43AA#1 = RMul(r4387,r3D03);
          real r43AB#1 = RAdd(r43A2,r43A3);
          real r43AC#1 = RAdd(r43AB,r43A4);
          real r43AD#1 = RAdd(r43AC,r43A5);
          real r43AE#1 = RAdd(r43AD,r43A6);
          real r43AF#1 = RAdd(r43AE,r43A7);
          real r43B0#1 = RAdd(r43AF,r43A8);
          real r43B1#1 = RAdd(r43B0,r43A9);
          real r43B2#1 = RAdd(r43B1,r43AA);
          real r43B4#3 = VIndex<3,2>(v42E2);
          real r43B5#1 = RMul(r43B4,r3CFD);
          real r43B6#3 = VIndex<3,2>(v42EC);
          real r43B7#1 = RMul(r43B6,r3D07);
          real r43B8#3 = VIndex<3,2>(v42F6);
          real r43B9#1 = RMul(r43B8,r3D12);
          real r43BA#3 = VIndex<3,2>(v42E5);
          real r43BB#1 = RMul(r43BA,r3D1D);
          real r43BC#3 = VIndex<3,2>(v42EF);
          real r43BD#1 = RMul(r43BC,r3CFD);
          real r43BE#3 = VIndex<3,2>(v42F9);
          real r43BF#1 = RMul(r43BE,r3D25);
          real r43C0#3 = VIndex<3,2>(v42E8);
          real r43C1#1 = RMul(r43C0,r3D30);
          real r43C2#3 = VIndex<3,2>(v42F2);
          real r43C3#1 = RMul(r43C2,r3D3A);
          real r43C4#3 = VIndex<3,2>(v42FC);
          real r43C5#1 = RMul(r43C4,r3CFD);
          real r43C6#1 = RAdd(r43B5,r43B7);
          real r43C7#1 = RAdd(r43C6,r43B9);
          real r43C8#1 = RAdd(r43C7,r43BB);
          real r43C9#1 = RAdd(r43C8,r43BD);
          real r43CA#1 = RAdd(r43C9,r43BF);
          real r43CB#1 = RAdd(r43CA,r43C1);
          real r43CC#1 = RAdd(r43CB,r43C3);
          real r43CD#1 = RAdd(r43CC,r43C5);
          real r43CE#1 = RMul(r43B4,r3D00);
          real r43CF#1 = RMul(r43B6,r3D09);
          real r43D0#1 = RMul(r43B8,r3D16);
          real r43D1#1 = RMul(r43BA,r3D1F);
          real r43D2#1 = RMul(r43BC,r3D00);
          real r43D3#1 = RMul(r43BE,r3D28);
          real r43D4#1 = RMul(r43C0,r3D33);
          real r43D5#1 = RMul(r43C2,r3D3D);
          real r43D6#1 = RMul(r43C4,r3D00);
          real r43D7#1 = RAdd(r43CE,r43CF);
          real r43D8#1 = RAdd(r43D7,r43D0);
          real r43D9#1 = RAdd(r43D8,r43D1);
          real r43DA#1 = RAdd(r43D9,r43D2);
          real r43DB#1 = RAdd(r43DA,r43D3);
          real r43DC#1 = RAdd(r43DB,r43D4);
          real r43DD#1 = RAdd(r43DC,r43D5);
          real r43DE#1 = RAdd(r43DD,r43D6);
          real r43DF#1 = RMul(r43B4,r3D03);
          real r43E0#1 = RMul(r43B6,r3D0C);
          real r43E1#1 = RMul(r43B8,r3D19);
          real r43E2#1 = RMul(r43BA,r3D21);
          real r43E3#1 = RMul(r43BC,r3D03);
          real r43E4#1 = RMul(r43BE,r3D2B);
          real r43E5#1 = RMul(r43C0,r3D36);
          real r43E6#1 = RMul(r43C2,r3D40);
          real r43E7#1 = RMul(r43C4,r3D03);
          real r43E8#1 = RAdd(r43DF,r43E0);
          real r43E9#1 = RAdd(r43E8,r43E1);
          real r43EA#1 = RAdd(r43E9,r43E2);
          real r43EB#1 = RAdd(r43EA,r43E3);
          real r43EC#1 = RAdd(r43EB,r43E4);
          real r43ED#1 = RAdd(r43EC,r43E5);
          real r43EE#1 = RAdd(r43ED,r43E6);
          real r43EF#1 = RAdd(r43EE,r43E7);
          real r44C8#2 = RMul(r3E3B,r4341);
          real r44CA#2 = RMul(r3E3B,r4390);
          real r44CC#2 = RMul(r3E3B,r43CD);
          real r44D0#2 = RMul(r3E43,r435B);
          real r44D2#2 = RMul(r3E43,r43A1);
          real r44D4#2 = RMul(r3E43,r43DE);
          real r44D8#2 = RMul(r3E4B,r4375);
          real r44DA#2 = RMul(r3E4B,r43B2);
          real r44DC#2 = RMul(r3E4B,r43EF);
          real op1_e3_l_14644F8#4 = VDot<3>(op1_e3_l_943E30,op1_e3_l_943E30);
          real r44FD#1 = RAdd(r44C8,r44C8);
          real r44FF#1 = RAdd(r44D0,r44D0);
          real r4501#1 = RAdd(r44D8,r44D8);
          real r4502#1 = RAdd(r44FD,r44FF);
          real r4503#1 = RAdd(r4502,r4501);
          real r4505#1 = RAdd(r44CA,r44CA);
          real r4507#1 = RAdd(r44D2,r44D2);
          real r4509#1 = RAdd(r44DA,r44DA);
          real r450A#1 = RAdd(r4505,r4507);
          real r450B#1 = RAdd(r450A,r4509);
          real r450D#1 = RAdd(r44CC,r44CC);
          real r450F#1 = RAdd(r44D4,r44D4);
          real r4511#1 = RAdd(r44DC,r44DC);
          real r4512#1 = RAdd(r450D,r450F);
          real r4513#1 = RAdd(r4512,r4511);
          tensor[3] op1_e3_l_14744FB#3 = <tensor[3]>[r4503,r450B,r4513];
          tensor[3] op1_e3_l_250452E#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_14744FB);
          real op1_e3_l_2514531#1 = VDot<3>(op1_e3_l_14744FB,op1_e3_l_14744FB);
          real r4536#3 = RDiv(_t3467,op1_e3_l_2514531);
          real r4537#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_250452E);
          real r4538#1 = RMul(r4536,r4537);
          real r4539#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_250452E);
          real r453A#1 = RMul(r4536,r4539);
          real r453B#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_250452E);
          real r453C#1 = RMul(r4536,r453B);
          tensor[3] op1_e3_l_2524534#1 = <tensor[3]>[r4538,r453A,r453C];
          tensor[3] op1_e3_l_4244547#2 = VNeg<3>(op1_e3_l_2524534);
          real op1_e3_l_426454A#1 = VDot<3>(op1_e3_l_4244547,op1_e3_l_4244547);
          real op1_e3_l_427454D#1 = Sqrt(op1_e3_l_426454A);
          real op1_e3_l_4284550#1 = Abs<real>(op1_e3_l_427454D);
          real op1_e3_l_4294553#1 = RDiv(op1_e3_l_4284550,thick2411);
          real op1_e3_l_4304556#1 = RSub(_t3467,op1_e3_l_4294553);
          real op1_e3_l_4314559#1 = RMul(_t3469,op1_e3_l_4304556);
          real op1_e3_l_432455C#1 = RClamp(_t3465,_t3467,op1_e3_l_4314559);
          real _t455F#2 = RMul(maxAlpha2419,op1_e3_l_432455C);
          bool _t4562#1 = EQ<real>(_t455F,_t3465);
          if _t4562 then goto SAVE4565 else goto JOIN4567
        SAVE4565:  preds = [COND4564]
          self.rayN = rayN243D;
          active
          goto JOIN4567
        JOIN4567:  preds = [*ACTIVE4566,COND4564]
          real _t456E#1 = RSub(_t3467,_t455F);
          real _t4571#1 = MathFn<pow>(_t456E,alphaFix242D);
          bool _t4573#1 = NEQ<real>(phKs2435,_t3465);
          if _t4573 then goto ASSIGN4578 else goto JOIN4947
        ASSIGN4578:  preds = [COND4575]
          tensor[3] op1_e3_l_1564576#3 = VAdd<3>(eyeDir242F,litwsp2425);
          real op1_e3_l_1584579#1 = VDot<3>(op1_e3_l_1564576,op1_e3_l_1564576);
          real op1_e3_l_159457C#1 = Sqrt(op1_e3_l_1584579);
          real r4589#1 = RAdd(r4051,r4068);
          real r458A#1 = RAdd(r4589,r407F);
          real r4591#1 = RAdd(r4053,r406A);
          real r4592#2 = RAdd(r4591,r4081);
          real r4599#1 = RAdd(r4055,r406C);
          real r459A#2 = RAdd(r4599,r4083);
          tensor[3] tensor459B#1 = <tensor[3]>[r458A,r4592,r459A];
          real r45AA#1 = RAdd(r405A,r4071);
          real r45AB#1 = RAdd(r45AA,r4088);
          real r45B2#1 = RAdd(r405C,r4073);
          real r45B3#2 = RAdd(r45B2,r408A);
          tensor[3] tensor45B4#1 = <tensor[3]>[r4592,r45AB,r45B3];
          real r45CB#1 = RAdd(r4063,r407A);
          real r45CC#1 = RAdd(r45CB,r4091);
          tensor[3] tensor45CD#1 = <tensor[3]>[r459A,r45B3,r45CC];
          real r4627#1 = RAdd(r40DD,r40E4);
          real r4628#1 = RAdd(r4627,r40EB);
          real r462E#1 = RAdd(r40DF,r40E6);
          real r462F#1 = RAdd(r462E,r40ED);
          real r4635#1 = RAdd(r40E1,r40E8);
          real r4636#1 = RAdd(r4635,r40EF);
          tensor[3] tensor4637#1 = <tensor[3]>[r4628,r462F,r4636];
          real r463B#1 = RAdd(r40F2,r40F6);
          real r463C#1 = RAdd(r463B,r40FA);
          real r4640#1 = RAdd(r40E4,r40F7);
          real r4641#1 = RAdd(r4640,r40FB);
          real r4645#1 = RAdd(r40F4,r40F8);
          real r4646#1 = RAdd(r4645,r40FC);
          tensor[3] tensor4647#1 = <tensor[3]>[r463C,r4641,r4646];
          real r464B#1 = RAdd(r40FF,r4103);
          real r464C#1 = RAdd(r464B,r4107);
          real r4650#1 = RAdd(r4100,r4104);
          real r4651#1 = RAdd(r4650,r4108);
          real r4655#1 = RAdd(r40EB,r40FB);
          real r4656#1 = RAdd(r4655,r4109);
          tensor[3] tensor4657#1 = <tensor[3]>[r464C,r4651,r4656];
          tensor[3] v4696#3 = VAdd<3>(tensor459B,tensor4637);
          tensor[3] v4699#3 = VAdd<3>(tensor45B4,tensor4647);
          tensor[3] v469C#3 = VAdd<3>(tensor45CD,tensor4657);
          real r46AA#3 = VIndex<3,0>(v4696);
          real r46AB#1 = RMul(vdot3AF3,r46AA);
          real r46AC#3 = VIndex<3,1>(v4696);
          real r46AD#1 = RMul(vdot3AF3,r46AC);
          real r46AE#3 = VIndex<3,2>(v4696);
          real r46AF#1 = RMul(vdot3AF3,r46AE);
          tensor[3] tensor46B0#1 = <tensor[3]>[r46AB,r46AD,r46AF];
          real r46B1#3 = VIndex<3,0>(v4699);
          real r46B2#1 = RMul(vdot3AF3,r46B1);
          real r46B3#3 = VIndex<3,1>(v4699);
          real r46B4#1 = RMul(vdot3AF3,r46B3);
          real r46B5#3 = VIndex<3,2>(v4699);
          real r46B6#1 = RMul(vdot3AF3,r46B5);
          tensor[3] tensor46B7#1 = <tensor[3]>[r46B2,r46B4,r46B6];
          real r46B8#3 = VIndex<3,0>(v469C);
          real r46B9#1 = RMul(vdot3AF3,r46B8);
          real r46BA#3 = VIndex<3,1>(v469C);
          real r46BB#1 = RMul(vdot3AF3,r46BA);
          real r46BC#3 = VIndex<3,2>(v469C);
          real r46BD#1 = RMul(vdot3AF3,r46BC);
          tensor[3] tensor46BE#1 = <tensor[3]>[r46B9,r46BB,r46BD];
          real r46C1#1 = RMul(vdot3AF5,r46AA);
          real r46C2#1 = RMul(vdot3AF5,r46AC);
          real r46C3#1 = RMul(vdot3AF5,r46AE);
          tensor[3] tensor46C4#1 = <tensor[3]>[r46C1,r46C2,r46C3];
          real r46C5#1 = RMul(vdot3AF5,r46B1);
          real r46C6#1 = RMul(vdot3AF5,r46B3);
          real r46C7#1 = RMul(vdot3AF5,r46B5);
          tensor[3] tensor46C8#1 = <tensor[3]>[r46C5,r46C6,r46C7];
          real r46C9#1 = RMul(vdot3AF5,r46B8);
          real r46CA#1 = RMul(vdot3AF5,r46BA);
          real r46CB#1 = RMul(vdot3AF5,r46BC);
          tensor[3] tensor46CC#1 = <tensor[3]>[r46C9,r46CA,r46CB];
          real r46CF#1 = RMul(vdot3AF7,r46AA);
          real r46D0#1 = RMul(vdot3AF7,r46AC);
          real r46D1#1 = RMul(vdot3AF7,r46AE);
          tensor[3] tensor46D2#1 = <tensor[3]>[r46CF,r46D0,r46D1];
          real r46D3#1 = RMul(vdot3AF7,r46B1);
          real r46D4#1 = RMul(vdot3AF7,r46B3);
          real r46D5#1 = RMul(vdot3AF7,r46B5);
          tensor[3] tensor46D6#1 = <tensor[3]>[r46D3,r46D4,r46D5];
          real r46D7#1 = RMul(vdot3AF7,r46B8);
          real r46D8#1 = RMul(vdot3AF7,r46BA);
          real r46D9#1 = RMul(vdot3AF7,r46BC);
          tensor[3] tensor46DA#1 = <tensor[3]>[r46D7,r46D8,r46D9];
          tensor[3] v4714#3 = VAdd<3>(tensor4215,tensor46B0);
          tensor[3] v4717#3 = VAdd<3>(tensor421C,tensor46C4);
          tensor[3] v471A#3 = VAdd<3>(tensor4223,tensor46D2);
          tensor[3] v471E#3 = VAdd<3>(tensor4229,tensor46B7);
          tensor[3] v4721#3 = VAdd<3>(tensor422D,tensor46C8);
          tensor[3] v4724#3 = VAdd<3>(tensor4231,tensor46D6);
          tensor[3] v4728#3 = VAdd<3>(tensor4237,tensor46BE);
          tensor[3] v472B#3 = VAdd<3>(tensor423B,tensor46CC);
          tensor[3] v472E#3 = VAdd<3>(tensor423F,tensor46DA);
          real r4751#3 = VIndex<3,0>(v4714);
          real r4753#1 = RMul(r4751,r3CFD);
          real r4754#3 = VIndex<3,0>(v471E);
          real r4756#1 = RMul(r4754,r3D07);
          real r4757#3 = VIndex<3,0>(v4728);
          real r4759#1 = RMul(r4757,r3D12);
          real r475A#3 = VIndex<3,0>(v4717);
          real r475C#1 = RMul(r475A,r3D1D);
          real r475D#3 = VIndex<3,0>(v4721);
          real r475F#1 = RMul(r475D,r3CFD);
          real r4760#3 = VIndex<3,0>(v472B);
          real r4762#1 = RMul(r4760,r3D25);
          real r4763#3 = VIndex<3,0>(v471A);
          real r4765#1 = RMul(r4763,r3D30);
          real r4766#3 = VIndex<3,0>(v4724);
          real r4768#1 = RMul(r4766,r3D3A);
          real r4769#3 = VIndex<3,0>(v472E);
          real r476B#1 = RMul(r4769,r3CFD);
          real r476C#1 = RAdd(r4753,r4756);
          real r476D#1 = RAdd(r476C,r4759);
          real r476E#1 = RAdd(r476D,r475C);
          real r476F#1 = RAdd(r476E,r475F);
          real r4770#1 = RAdd(r476F,r4762);
          real r4771#1 = RAdd(r4770,r4765);
          real r4772#1 = RAdd(r4771,r4768);
          real r4773#1 = RAdd(r4772,r476B);
          real r4775#1 = RMul(r4751,r3D00);
          real r4777#1 = RMul(r4754,r3D09);
          real r4779#1 = RMul(r4757,r3D16);
          real r477B#1 = RMul(r475A,r3D1F);
          real r477D#1 = RMul(r475D,r3D00);
          real r477F#1 = RMul(r4760,r3D28);
          real r4781#1 = RMul(r4763,r3D33);
          real r4783#1 = RMul(r4766,r3D3D);
          real r4785#1 = RMul(r4769,r3D00);
          real r4786#1 = RAdd(r4775,r4777);
          real r4787#1 = RAdd(r4786,r4779);
          real r4788#1 = RAdd(r4787,r477B);
          real r4789#1 = RAdd(r4788,r477D);
          real r478A#1 = RAdd(r4789,r477F);
          real r478B#1 = RAdd(r478A,r4781);
          real r478C#1 = RAdd(r478B,r4783);
          real r478D#1 = RAdd(r478C,r4785);
          real r478F#1 = RMul(r4751,r3D03);
          real r4791#1 = RMul(r4754,r3D0C);
          real r4793#1 = RMul(r4757,r3D19);
          real r4795#1 = RMul(r475A,r3D21);
          real r4797#1 = RMul(r475D,r3D03);
          real r4799#1 = RMul(r4760,r3D2B);
          real r479B#1 = RMul(r4763,r3D36);
          real r479D#1 = RMul(r4766,r3D40);
          real r479F#1 = RMul(r4769,r3D03);
          real r47A0#1 = RAdd(r478F,r4791);
          real r47A1#1 = RAdd(r47A0,r4793);
          real r47A2#1 = RAdd(r47A1,r4795);
          real r47A3#1 = RAdd(r47A2,r4797);
          real r47A4#1 = RAdd(r47A3,r4799);
          real r47A5#1 = RAdd(r47A4,r479B);
          real r47A6#1 = RAdd(r47A5,r479D);
          real r47A7#1 = RAdd(r47A6,r479F);
          tensor[3] tensor47A8#1 = <tensor[3]>[r4773,r478D,r47A7];
          real r47A9#3 = VIndex<3,1>(v4714);
          real r47AA#1 = RMul(r47A9,r3CFD);
          real r47AB#3 = VIndex<3,1>(v471E);
          real r47AC#1 = RMul(r47AB,r3D07);
          real r47AD#3 = VIndex<3,1>(v4728);
          real r47AE#1 = RMul(r47AD,r3D12);
          real r47AF#3 = VIndex<3,1>(v4717);
          real r47B0#1 = RMul(r47AF,r3D1D);
          real r47B1#3 = VIndex<3,1>(v4721);
          real r47B2#1 = RMul(r47B1,r3CFD);
          real r47B3#3 = VIndex<3,1>(v472B);
          real r47B4#1 = RMul(r47B3,r3D25);
          real r47B5#3 = VIndex<3,1>(v471A);
          real r47B6#1 = RMul(r47B5,r3D30);
          real r47B7#3 = VIndex<3,1>(v4724);
          real r47B8#1 = RMul(r47B7,r3D3A);
          real r47B9#3 = VIndex<3,1>(v472E);
          real r47BA#1 = RMul(r47B9,r3CFD);
          real r47BB#1 = RAdd(r47AA,r47AC);
          real r47BC#1 = RAdd(r47BB,r47AE);
          real r47BD#1 = RAdd(r47BC,r47B0);
          real r47BE#1 = RAdd(r47BD,r47B2);
          real r47BF#1 = RAdd(r47BE,r47B4);
          real r47C0#1 = RAdd(r47BF,r47B6);
          real r47C1#1 = RAdd(r47C0,r47B8);
          real r47C2#1 = RAdd(r47C1,r47BA);
          real r47C3#1 = RMul(r47A9,r3D00);
          real r47C4#1 = RMul(r47AB,r3D09);
          real r47C5#1 = RMul(r47AD,r3D16);
          real r47C6#1 = RMul(r47AF,r3D1F);
          real r47C7#1 = RMul(r47B1,r3D00);
          real r47C8#1 = RMul(r47B3,r3D28);
          real r47C9#1 = RMul(r47B5,r3D33);
          real r47CA#1 = RMul(r47B7,r3D3D);
          real r47CB#1 = RMul(r47B9,r3D00);
          real r47CC#1 = RAdd(r47C3,r47C4);
          real r47CD#1 = RAdd(r47CC,r47C5);
          real r47CE#1 = RAdd(r47CD,r47C6);
          real r47CF#1 = RAdd(r47CE,r47C7);
          real r47D0#1 = RAdd(r47CF,r47C8);
          real r47D1#1 = RAdd(r47D0,r47C9);
          real r47D2#1 = RAdd(r47D1,r47CA);
          real r47D3#1 = RAdd(r47D2,r47CB);
          real r47D4#1 = RMul(r47A9,r3D03);
          real r47D5#1 = RMul(r47AB,r3D0C);
          real r47D6#1 = RMul(r47AD,r3D19);
          real r47D7#1 = RMul(r47AF,r3D21);
          real r47D8#1 = RMul(r47B1,r3D03);
          real r47D9#1 = RMul(r47B3,r3D2B);
          real r47DA#1 = RMul(r47B5,r3D36);
          real r47DB#1 = RMul(r47B7,r3D40);
          real r47DC#1 = RMul(r47B9,r3D03);
          real r47DD#1 = RAdd(r47D4,r47D5);
          real r47DE#1 = RAdd(r47DD,r47D6);
          real r47DF#1 = RAdd(r47DE,r47D7);
          real r47E0#1 = RAdd(r47DF,r47D8);
          real r47E1#1 = RAdd(r47E0,r47D9);
          real r47E2#1 = RAdd(r47E1,r47DA);
          real r47E3#1 = RAdd(r47E2,r47DB);
          real r47E4#1 = RAdd(r47E3,r47DC);
          tensor[3] tensor47E5#1 = <tensor[3]>[r47C2,r47D3,r47E4];
          real r47E6#3 = VIndex<3,2>(v4714);
          real r47E7#1 = RMul(r47E6,r3CFD);
          real r47E8#3 = VIndex<3,2>(v471E);
          real r47E9#1 = RMul(r47E8,r3D07);
          real r47EA#3 = VIndex<3,2>(v4728);
          real r47EB#1 = RMul(r47EA,r3D12);
          real r47EC#3 = VIndex<3,2>(v4717);
          real r47ED#1 = RMul(r47EC,r3D1D);
          real r47EE#3 = VIndex<3,2>(v4721);
          real r47EF#1 = RMul(r47EE,r3CFD);
          real r47F0#3 = VIndex<3,2>(v472B);
          real r47F1#1 = RMul(r47F0,r3D25);
          real r47F2#3 = VIndex<3,2>(v471A);
          real r47F3#1 = RMul(r47F2,r3D30);
          real r47F4#3 = VIndex<3,2>(v4724);
          real r47F5#1 = RMul(r47F4,r3D3A);
          real r47F6#3 = VIndex<3,2>(v472E);
          real r47F7#1 = RMul(r47F6,r3CFD);
          real r47F8#1 = RAdd(r47E7,r47E9);
          real r47F9#1 = RAdd(r47F8,r47EB);
          real r47FA#1 = RAdd(r47F9,r47ED);
          real r47FB#1 = RAdd(r47FA,r47EF);
          real r47FC#1 = RAdd(r47FB,r47F1);
          real r47FD#1 = RAdd(r47FC,r47F3);
          real r47FE#1 = RAdd(r47FD,r47F5);
          real r47FF#1 = RAdd(r47FE,r47F7);
          real r4800#1 = RMul(r47E6,r3D00);
          real r4801#1 = RMul(r47E8,r3D09);
          real r4802#1 = RMul(r47EA,r3D16);
          real r4803#1 = RMul(r47EC,r3D1F);
          real r4804#1 = RMul(r47EE,r3D00);
          real r4805#1 = RMul(r47F0,r3D28);
          real r4806#1 = RMul(r47F2,r3D33);
          real r4807#1 = RMul(r47F4,r3D3D);
          real r4808#1 = RMul(r47F6,r3D00);
          real r4809#1 = RAdd(r4800,r4801);
          real r480A#1 = RAdd(r4809,r4802);
          real r480B#1 = RAdd(r480A,r4803);
          real r480C#1 = RAdd(r480B,r4804);
          real r480D#1 = RAdd(r480C,r4805);
          real r480E#1 = RAdd(r480D,r4806);
          real r480F#1 = RAdd(r480E,r4807);
          real r4810#1 = RAdd(r480F,r4808);
          real r4811#1 = RMul(r47E6,r3D03);
          real r4812#1 = RMul(r47E8,r3D0C);
          real r4813#1 = RMul(r47EA,r3D19);
          real r4814#1 = RMul(r47EC,r3D21);
          real r4815#1 = RMul(r47EE,r3D03);
          real r4816#1 = RMul(r47F0,r3D2B);
          real r4817#1 = RMul(r47F2,r3D36);
          real r4818#1 = RMul(r47F4,r3D40);
          real r4819#1 = RMul(r47F6,r3D03);
          real r481A#1 = RAdd(r4811,r4812);
          real r481B#1 = RAdd(r481A,r4813);
          real r481C#1 = RAdd(r481B,r4814);
          real r481D#1 = RAdd(r481C,r4815);
          real r481E#1 = RAdd(r481D,r4816);
          real r481F#1 = RAdd(r481E,r4817);
          real r4820#1 = RAdd(r481F,r4818);
          real r4821#1 = RAdd(r4820,r4819);
          tensor[3] tensor4822#1 = <tensor[3]>[r47FF,r4810,r4821];
          real vdot48F9#1 = VDot<3>(op1_e3_l_943E30,tensor47A8);
          real vdot48FB#1 = VDot<3>(op1_e3_l_943E30,tensor47E5);
          real vdot48FD#1 = VDot<3>(op1_e3_l_943E30,tensor4822);
          tensor[3] op1_e3_l_22248F7#2 = <tensor[3]>[vdot48F9,vdot48FB,vdot48FD];
          tensor[3] op1_e3_l_2254906#3 = VAdd<3>(op1_e3_l_22248F7,op1_e3_l_22248F7);
          tensor[3] op1_e3_l_3284909#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_2254906);
          real op1_e3_l_329490C#1 = VDot<3>(op1_e3_l_2254906,op1_e3_l_2254906);
          real r4911#3 = RDiv(_t3467,op1_e3_l_329490C);
          real r4912#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_3284909);
          real r4913#1 = RMul(r4911,r4912);
          real r4914#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_3284909);
          real r4915#1 = RMul(r4911,r4914);
          real r4916#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_3284909);
          real r4917#1 = RMul(r4911,r4916);
          tensor[3] op1_e3_l_330490F#1 = <tensor[3]>[r4913,r4915,r4917];
          tensor[3] op1_e3_l_6734922#3 = VNeg<3>(op1_e3_l_330490F);
          real op1_e3_l_6754925#1 = VDot<3>(op1_e3_l_6734922,op1_e3_l_6734922);
          real op1_e3_l_6764928#1 = Sqrt(op1_e3_l_6754925);
          real op1_e3_l_678492B#1 = RDiv(_t3467,op1_e3_l_6764928);
          tensor[3] op1_e3_l_6794930#1 = VScale<3>(op1_e3_l_678492B,op1_e3_l_6734922);
          tensor[3] op1_e3_l_6804933#1 = VNeg<3>(op1_e3_l_6794930);
          real op1_e3_l_6824936#1 = RDiv(_t3467,op1_e3_l_159457C);
          real op1_e3_l_683493B#1 = VDot<3>(op1_e3_l_6804933,op1_e3_l_1564576);
          real op1_e3_l_684493E#1 = RMul(op1_e3_l_6824936,op1_e3_l_683493B);
          real _t4941#1 = Abs<real>(op1_e3_l_684493E);
          real scomp4944#1 = MathFn<pow>(_t4941,phSp2437);
          goto JOIN4947
        JOIN4947:  preds = [ASSIGN4945,COND4575]
          real scomp4946#1 = phi(scomp4944,_t3465)
          real cmin4948#3 = VIndex<2,0>(cminmax241F);
          real cmax494A#2 = VIndex<2,1>(cminmax241F);
          tensor[3] mcol494C#1 = <tensor[3]>[_t3467,_t3467,_t3467];
          bool _t494E#1 = NEQ<real>(cmin4948,cmax494A);
          if _t494E then goto ASSIGN5D84 else goto JOIN4F36
        ASSIGN5D84:  preds = [COND4950]
          real r495B#1 = RAdd(r4051,r4068);
          real r495C#1 = RAdd(r495B,r407F);
          real r4963#1 = RAdd(r4053,r406A);
          real r4964#2 = RAdd(r4963,r4081);
          real r496B#1 = RAdd(r4055,r406C);
          real r496C#2 = RAdd(r496B,r4083);
          tensor[3] tensor496D#1 = <tensor[3]>[r495C,r4964,r496C];
          real r497C#1 = RAdd(r405A,r4071);
          real r497D#1 = RAdd(r497C,r4088);
          real r4984#1 = RAdd(r405C,r4073);
          real r4985#2 = RAdd(r4984,r408A);
          tensor[3] tensor4986#1 = <tensor[3]>[r4964,r497D,r4985];
          real r499D#1 = RAdd(r4063,r407A);
          real r499E#1 = RAdd(r499D,r4091);
          tensor[3] tensor499F#1 = <tensor[3]>[r496C,r4985,r499E];
          real r49F9#1 = RAdd(r40DD,r40E4);
          real r49FA#1 = RAdd(r49F9,r40EB);
          real r4A00#1 = RAdd(r40DF,r40E6);
          real r4A01#1 = RAdd(r4A00,r40ED);
          real r4A07#1 = RAdd(r40E1,r40E8);
          real r4A08#1 = RAdd(r4A07,r40EF);
          tensor[3] tensor4A09#1 = <tensor[3]>[r49FA,r4A01,r4A08];
          real r4A0D#1 = RAdd(r40F2,r40F6);
          real r4A0E#1 = RAdd(r4A0D,r40FA);
          real r4A12#1 = RAdd(r40E4,r40F7);
          real r4A13#1 = RAdd(r4A12,r40FB);
          real r4A17#1 = RAdd(r40F4,r40F8);
          real r4A18#1 = RAdd(r4A17,r40FC);
          tensor[3] tensor4A19#1 = <tensor[3]>[r4A0E,r4A13,r4A18];
          real r4A1D#1 = RAdd(r40FF,r4103);
          real r4A1E#1 = RAdd(r4A1D,r4107);
          real r4A22#1 = RAdd(r4100,r4104);
          real r4A23#1 = RAdd(r4A22,r4108);
          real r4A27#1 = RAdd(r40EB,r40FB);
          real r4A28#1 = RAdd(r4A27,r4109);
          tensor[3] tensor4A29#1 = <tensor[3]>[r4A1E,r4A23,r4A28];
          tensor[3] v4A68#3 = VAdd<3>(tensor496D,tensor4A09);
          tensor[3] v4A6B#3 = VAdd<3>(tensor4986,tensor4A19);
          tensor[3] v4A6E#3 = VAdd<3>(tensor499F,tensor4A29);
          real r4A7C#3 = VIndex<3,0>(v4A68);
          real r4A7D#1 = RMul(vdot3AF3,r4A7C);
          real r4A7E#3 = VIndex<3,1>(v4A68);
          real r4A7F#1 = RMul(vdot3AF3,r4A7E);
          real r4A80#3 = VIndex<3,2>(v4A68);
          real r4A81#1 = RMul(vdot3AF3,r4A80);
          tensor[3] tensor4A82#1 = <tensor[3]>[r4A7D,r4A7F,r4A81];
          real r4A83#3 = VIndex<3,0>(v4A6B);
          real r4A84#1 = RMul(vdot3AF3,r4A83);
          real r4A85#3 = VIndex<3,1>(v4A6B);
          real r4A86#1 = RMul(vdot3AF3,r4A85);
          real r4A87#3 = VIndex<3,2>(v4A6B);
          real r4A88#1 = RMul(vdot3AF3,r4A87);
          tensor[3] tensor4A89#1 = <tensor[3]>[r4A84,r4A86,r4A88];
          real r4A8A#3 = VIndex<3,0>(v4A6E);
          real r4A8B#1 = RMul(vdot3AF3,r4A8A);
          real r4A8C#3 = VIndex<3,1>(v4A6E);
          real r4A8D#1 = RMul(vdot3AF3,r4A8C);
          real r4A8E#3 = VIndex<3,2>(v4A6E);
          real r4A8F#1 = RMul(vdot3AF3,r4A8E);
          tensor[3] tensor4A90#1 = <tensor[3]>[r4A8B,r4A8D,r4A8F];
          real r4A93#1 = RMul(vdot3AF5,r4A7C);
          real r4A94#1 = RMul(vdot3AF5,r4A7E);
          real r4A95#1 = RMul(vdot3AF5,r4A80);
          tensor[3] tensor4A96#1 = <tensor[3]>[r4A93,r4A94,r4A95];
          real r4A97#1 = RMul(vdot3AF5,r4A83);
          real r4A98#1 = RMul(vdot3AF5,r4A85);
          real r4A99#1 = RMul(vdot3AF5,r4A87);
          tensor[3] tensor4A9A#1 = <tensor[3]>[r4A97,r4A98,r4A99];
          real r4A9B#1 = RMul(vdot3AF5,r4A8A);
          real r4A9C#1 = RMul(vdot3AF5,r4A8C);
          real r4A9D#1 = RMul(vdot3AF5,r4A8E);
          tensor[3] tensor4A9E#1 = <tensor[3]>[r4A9B,r4A9C,r4A9D];
          real r4AA1#1 = RMul(vdot3AF7,r4A7C);
          real r4AA2#1 = RMul(vdot3AF7,r4A7E);
          real r4AA3#1 = RMul(vdot3AF7,r4A80);
          tensor[3] tensor4AA4#1 = <tensor[3]>[r4AA1,r4AA2,r4AA3];
          real r4AA5#1 = RMul(vdot3AF7,r4A83);
          real r4AA6#1 = RMul(vdot3AF7,r4A85);
          real r4AA7#1 = RMul(vdot3AF7,r4A87);
          tensor[3] tensor4AA8#1 = <tensor[3]>[r4AA5,r4AA6,r4AA7];
          real r4AA9#1 = RMul(vdot3AF7,r4A8A);
          real r4AAA#1 = RMul(vdot3AF7,r4A8C);
          real r4AAB#1 = RMul(vdot3AF7,r4A8E);
          tensor[3] tensor4AAC#1 = <tensor[3]>[r4AA9,r4AAA,r4AAB];
          tensor[3] v4AE6#3 = VAdd<3>(tensor4215,tensor4A82);
          tensor[3] v4AE9#3 = VAdd<3>(tensor421C,tensor4A96);
          tensor[3] v4AEC#3 = VAdd<3>(tensor4223,tensor4AA4);
          tensor[3] v4AF0#3 = VAdd<3>(tensor4229,tensor4A89);
          tensor[3] v4AF3#3 = VAdd<3>(tensor422D,tensor4A9A);
          tensor[3] v4AF6#3 = VAdd<3>(tensor4231,tensor4AA8);
          tensor[3] v4AFA#3 = VAdd<3>(tensor4237,tensor4A90);
          tensor[3] v4AFD#3 = VAdd<3>(tensor423B,tensor4A9E);
          tensor[3] v4B00#3 = VAdd<3>(tensor423F,tensor4AAC);
          real r4B23#3 = VIndex<3,0>(v4AE6);
          real r4B25#1 = RMul(r4B23,r3CFD);
          real r4B26#3 = VIndex<3,0>(v4AF0);
          real r4B28#1 = RMul(r4B26,r3D07);
          real r4B29#3 = VIndex<3,0>(v4AFA);
          real r4B2B#1 = RMul(r4B29,r3D12);
          real r4B2C#3 = VIndex<3,0>(v4AE9);
          real r4B2E#1 = RMul(r4B2C,r3D1D);
          real r4B2F#3 = VIndex<3,0>(v4AF3);
          real r4B31#1 = RMul(r4B2F,r3CFD);
          real r4B32#3 = VIndex<3,0>(v4AFD);
          real r4B34#1 = RMul(r4B32,r3D25);
          real r4B35#3 = VIndex<3,0>(v4AEC);
          real r4B37#1 = RMul(r4B35,r3D30);
          real r4B38#3 = VIndex<3,0>(v4AF6);
          real r4B3A#1 = RMul(r4B38,r3D3A);
          real r4B3B#3 = VIndex<3,0>(v4B00);
          real r4B3D#1 = RMul(r4B3B,r3CFD);
          real r4B3E#1 = RAdd(r4B25,r4B28);
          real r4B3F#1 = RAdd(r4B3E,r4B2B);
          real r4B40#1 = RAdd(r4B3F,r4B2E);
          real r4B41#1 = RAdd(r4B40,r4B31);
          real r4B42#1 = RAdd(r4B41,r4B34);
          real r4B43#1 = RAdd(r4B42,r4B37);
          real r4B44#1 = RAdd(r4B43,r4B3A);
          real r4B45#1 = RAdd(r4B44,r4B3D);
          real r4B47#1 = RMul(r4B23,r3D00);
          real r4B49#1 = RMul(r4B26,r3D09);
          real r4B4B#1 = RMul(r4B29,r3D16);
          real r4B4D#1 = RMul(r4B2C,r3D1F);
          real r4B4F#1 = RMul(r4B2F,r3D00);
          real r4B51#1 = RMul(r4B32,r3D28);
          real r4B53#1 = RMul(r4B35,r3D33);
          real r4B55#1 = RMul(r4B38,r3D3D);
          real r4B57#1 = RMul(r4B3B,r3D00);
          real r4B58#1 = RAdd(r4B47,r4B49);
          real r4B59#1 = RAdd(r4B58,r4B4B);
          real r4B5A#1 = RAdd(r4B59,r4B4D);
          real r4B5B#1 = RAdd(r4B5A,r4B4F);
          real r4B5C#1 = RAdd(r4B5B,r4B51);
          real r4B5D#1 = RAdd(r4B5C,r4B53);
          real r4B5E#1 = RAdd(r4B5D,r4B55);
          real r4B5F#1 = RAdd(r4B5E,r4B57);
          real r4B61#1 = RMul(r4B23,r3D03);
          real r4B63#1 = RMul(r4B26,r3D0C);
          real r4B65#1 = RMul(r4B29,r3D19);
          real r4B67#1 = RMul(r4B2C,r3D21);
          real r4B69#1 = RMul(r4B2F,r3D03);
          real r4B6B#1 = RMul(r4B32,r3D2B);
          real r4B6D#1 = RMul(r4B35,r3D36);
          real r4B6F#1 = RMul(r4B38,r3D40);
          real r4B71#1 = RMul(r4B3B,r3D03);
          real r4B72#1 = RAdd(r4B61,r4B63);
          real r4B73#1 = RAdd(r4B72,r4B65);
          real r4B74#1 = RAdd(r4B73,r4B67);
          real r4B75#1 = RAdd(r4B74,r4B69);
          real r4B76#1 = RAdd(r4B75,r4B6B);
          real r4B77#1 = RAdd(r4B76,r4B6D);
          real r4B78#1 = RAdd(r4B77,r4B6F);
          real r4B79#1 = RAdd(r4B78,r4B71);
          tensor[3] tensor4B7A#1 = <tensor[3]>[r4B45,r4B5F,r4B79];
          real r4B7B#3 = VIndex<3,1>(v4AE6);
          real r4B7C#1 = RMul(r4B7B,r3CFD);
          real r4B7D#3 = VIndex<3,1>(v4AF0);
          real r4B7E#1 = RMul(r4B7D,r3D07);
          real r4B7F#3 = VIndex<3,1>(v4AFA);
          real r4B80#1 = RMul(r4B7F,r3D12);
          real r4B81#3 = VIndex<3,1>(v4AE9);
          real r4B82#1 = RMul(r4B81,r3D1D);
          real r4B83#3 = VIndex<3,1>(v4AF3);
          real r4B84#1 = RMul(r4B83,r3CFD);
          real r4B85#3 = VIndex<3,1>(v4AFD);
          real r4B86#1 = RMul(r4B85,r3D25);
          real r4B87#3 = VIndex<3,1>(v4AEC);
          real r4B88#1 = RMul(r4B87,r3D30);
          real r4B89#3 = VIndex<3,1>(v4AF6);
          real r4B8A#1 = RMul(r4B89,r3D3A);
          real r4B8B#3 = VIndex<3,1>(v4B00);
          real r4B8C#1 = RMul(r4B8B,r3CFD);
          real r4B8D#1 = RAdd(r4B7C,r4B7E);
          real r4B8E#1 = RAdd(r4B8D,r4B80);
          real r4B8F#1 = RAdd(r4B8E,r4B82);
          real r4B90#1 = RAdd(r4B8F,r4B84);
          real r4B91#1 = RAdd(r4B90,r4B86);
          real r4B92#1 = RAdd(r4B91,r4B88);
          real r4B93#1 = RAdd(r4B92,r4B8A);
          real r4B94#1 = RAdd(r4B93,r4B8C);
          real r4B95#1 = RMul(r4B7B,r3D00);
          real r4B96#1 = RMul(r4B7D,r3D09);
          real r4B97#1 = RMul(r4B7F,r3D16);
          real r4B98#1 = RMul(r4B81,r3D1F);
          real r4B99#1 = RMul(r4B83,r3D00);
          real r4B9A#1 = RMul(r4B85,r3D28);
          real r4B9B#1 = RMul(r4B87,r3D33);
          real r4B9C#1 = RMul(r4B89,r3D3D);
          real r4B9D#1 = RMul(r4B8B,r3D00);
          real r4B9E#1 = RAdd(r4B95,r4B96);
          real r4B9F#1 = RAdd(r4B9E,r4B97);
          real r4BA0#1 = RAdd(r4B9F,r4B98);
          real r4BA1#1 = RAdd(r4BA0,r4B99);
          real r4BA2#1 = RAdd(r4BA1,r4B9A);
          real r4BA3#1 = RAdd(r4BA2,r4B9B);
          real r4BA4#1 = RAdd(r4BA3,r4B9C);
          real r4BA5#1 = RAdd(r4BA4,r4B9D);
          real r4BA6#1 = RMul(r4B7B,r3D03);
          real r4BA7#1 = RMul(r4B7D,r3D0C);
          real r4BA8#1 = RMul(r4B7F,r3D19);
          real r4BA9#1 = RMul(r4B81,r3D21);
          real r4BAA#1 = RMul(r4B83,r3D03);
          real r4BAB#1 = RMul(r4B85,r3D2B);
          real r4BAC#1 = RMul(r4B87,r3D36);
          real r4BAD#1 = RMul(r4B89,r3D40);
          real r4BAE#1 = RMul(r4B8B,r3D03);
          real r4BAF#1 = RAdd(r4BA6,r4BA7);
          real r4BB0#1 = RAdd(r4BAF,r4BA8);
          real r4BB1#1 = RAdd(r4BB0,r4BA9);
          real r4BB2#1 = RAdd(r4BB1,r4BAA);
          real r4BB3#1 = RAdd(r4BB2,r4BAB);
          real r4BB4#1 = RAdd(r4BB3,r4BAC);
          real r4BB5#1 = RAdd(r4BB4,r4BAD);
          real r4BB6#1 = RAdd(r4BB5,r4BAE);
          tensor[3] tensor4BB7#1 = <tensor[3]>[r4B94,r4BA5,r4BB6];
          real r4BB8#3 = VIndex<3,2>(v4AE6);
          real r4BB9#1 = RMul(r4BB8,r3CFD);
          real r4BBA#3 = VIndex<3,2>(v4AF0);
          real r4BBB#1 = RMul(r4BBA,r3D07);
          real r4BBC#3 = VIndex<3,2>(v4AFA);
          real r4BBD#1 = RMul(r4BBC,r3D12);
          real r4BBE#3 = VIndex<3,2>(v4AE9);
          real r4BBF#1 = RMul(r4BBE,r3D1D);
          real r4BC0#3 = VIndex<3,2>(v4AF3);
          real r4BC1#1 = RMul(r4BC0,r3CFD);
          real r4BC2#3 = VIndex<3,2>(v4AFD);
          real r4BC3#1 = RMul(r4BC2,r3D25);
          real r4BC4#3 = VIndex<3,2>(v4AEC);
          real r4BC5#1 = RMul(r4BC4,r3D30);
          real r4BC6#3 = VIndex<3,2>(v4AF6);
          real r4BC7#1 = RMul(r4BC6,r3D3A);
          real r4BC8#3 = VIndex<3,2>(v4B00);
          real r4BC9#1 = RMul(r4BC8,r3CFD);
          real r4BCA#1 = RAdd(r4BB9,r4BBB);
          real r4BCB#1 = RAdd(r4BCA,r4BBD);
          real r4BCC#1 = RAdd(r4BCB,r4BBF);
          real r4BCD#1 = RAdd(r4BCC,r4BC1);
          real r4BCE#1 = RAdd(r4BCD,r4BC3);
          real r4BCF#1 = RAdd(r4BCE,r4BC5);
          real r4BD0#1 = RAdd(r4BCF,r4BC7);
          real r4BD1#1 = RAdd(r4BD0,r4BC9);
          real r4BD2#1 = RMul(r4BB8,r3D00);
          real r4BD3#1 = RMul(r4BBA,r3D09);
          real r4BD4#1 = RMul(r4BBC,r3D16);
          real r4BD5#1 = RMul(r4BBE,r3D1F);
          real r4BD6#1 = RMul(r4BC0,r3D00);
          real r4BD7#1 = RMul(r4BC2,r3D28);
          real r4BD8#1 = RMul(r4BC4,r3D33);
          real r4BD9#1 = RMul(r4BC6,r3D3D);
          real r4BDA#1 = RMul(r4BC8,r3D00);
          real r4BDB#1 = RAdd(r4BD2,r4BD3);
          real r4BDC#1 = RAdd(r4BDB,r4BD4);
          real r4BDD#1 = RAdd(r4BDC,r4BD5);
          real r4BDE#1 = RAdd(r4BDD,r4BD6);
          real r4BDF#1 = RAdd(r4BDE,r4BD7);
          real r4BE0#1 = RAdd(r4BDF,r4BD8);
          real r4BE1#1 = RAdd(r4BE0,r4BD9);
          real r4BE2#1 = RAdd(r4BE1,r4BDA);
          real r4BE3#1 = RMul(r4BB8,r3D03);
          real r4BE4#1 = RMul(r4BBA,r3D0C);
          real r4BE5#1 = RMul(r4BBC,r3D19);
          real r4BE6#1 = RMul(r4BBE,r3D21);
          real r4BE7#1 = RMul(r4BC0,r3D03);
          real r4BE8#1 = RMul(r4BC2,r3D2B);
          real r4BE9#1 = RMul(r4BC4,r3D36);
          real r4BEA#1 = RMul(r4BC6,r3D40);
          real r4BEB#1 = RMul(r4BC8,r3D03);
          real r4BEC#1 = RAdd(r4BE3,r4BE4);
          real r4BED#1 = RAdd(r4BEC,r4BE5);
          real r4BEE#1 = RAdd(r4BED,r4BE6);
          real r4BEF#1 = RAdd(r4BEE,r4BE7);
          real r4BF0#1 = RAdd(r4BEF,r4BE8);
          real r4BF1#1 = RAdd(r4BF0,r4BE9);
          real r4BF2#1 = RAdd(r4BF1,r4BEA);
          real r4BF3#1 = RAdd(r4BF2,r4BEB);
          tensor[3] tensor4BF4#1 = <tensor[3]>[r4BD1,r4BE2,r4BF3];
          real vdot4CCB#1 = VDot<3>(op1_e3_l_943E30,tensor4B7A);
          real vdot4CCD#1 = VDot<3>(op1_e3_l_943E30,tensor4BB7);
          real vdot4CCF#1 = VDot<3>(op1_e3_l_943E30,tensor4BF4);
          tensor[3] op1_e3_l_1434CC9#2 = <tensor[3]>[vdot4CCB,vdot4CCD,vdot4CCF];
          tensor[3] op1_e3_l_1464CD8#3 = VAdd<3>(op1_e3_l_1434CC9,op1_e3_l_1434CC9);
          tensor[3] op1_e3_l_2494CDB#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_1464CD8);
          real op1_e3_l_2504CDE#1 = VDot<3>(op1_e3_l_1464CD8,op1_e3_l_1464CD8);
          real r4CE3#3 = RDiv(_t3467,op1_e3_l_2504CDE);
          real r4CE4#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_2494CDB);
          real r4CE5#1 = RMul(r4CE3,r4CE4);
          real r4CE6#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_2494CDB);
          real r4CE7#1 = RMul(r4CE3,r4CE6);
          real r4CE8#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_2494CDB);
          real r4CE9#1 = RMul(r4CE3,r4CE8);
          tensor[3] op1_e3_l_2514CE1#1 = <tensor[3]>[r4CE5,r4CE7,r4CE9];
          tensor[3] op1_e3_l_2534CF4#1 = VNeg<3>(op1_e3_l_2514CE1);
          tensor[3] _t4CF7#3 = VAdd<3>(pos2449,op1_e3_l_2534CF4);
          real varAcc4CFD#27 = VIndex<3,0>(_t4CF7);
          real varAcc4CFE#12 = VIndex<3,1>(_t4CF7);
          real varAcc4CFF#12 = VIndex<3,2>(_t4CF7);
          real prod4D05#6 = RMul(_t3467,varAcc4CFF);
          real prod4D06#1 = RMul(_t3467,prod4D05);
          real basisEval4D07#1 = RMul(_t3467,prod4D06);
          real prod4D09#6 = RMul(varAcc4CFE,_t3467);
          real prod4D0A#1 = RMul(_t3467,prod4D09);
          real basisEval4D0B#1 = RMul(_t3467,prod4D0A);
          real prod4D0D#1 = RMul(varAcc4CFD,prod3915);
          real basisEval4D0E#1 = RMul(_t3467,prod4D0D);
          real prod24D0F#6 = RMul(varAcc4CFF,varAcc4CFF);
          real prod4D10#5 = RMul(_t3467,prod24D0F);
          real prod4D11#1 = RMul(_t3467,prod4D10);
          real basisEval4D12#1 = RMul(_t3467,prod4D11);
          real prod4D13#5 = RMul(varAcc4CFE,varAcc4CFF);
          real prod4D14#1 = RMul(_t3467,prod4D13);
          real basisEval4D15#1 = RMul(_t3467,prod4D14);
          real prod24D16#6 = RMul(varAcc4CFE,varAcc4CFE);
          real prod4D17#5 = RMul(prod24D16,_t3467);
          real prod4D18#1 = RMul(_t3467,prod4D17);
          real basisEval4D19#1 = RMul(_t3467,prod4D18);
          real prod4D1A#1 = RMul(varAcc4CFD,prod4D05);
          real basisEval4D1B#1 = RMul(_t3467,prod4D1A);
          real prod4D1C#1 = RMul(varAcc4CFD,prod4D09);
          real basisEval4D1D#1 = RMul(_t3467,prod4D1C);
          real prod24D1E#16 = RMul(varAcc4CFD,varAcc4CFD);
          real prod4D1F#1 = RMul(prod24D1E,prod3915);
          real basisEval4D20#1 = RMul(_t3467,prod4D1F);
          real prod34D21#5 = RMul(prod24D0F,varAcc4CFF);
          real prod4D22#4 = RMul(_t3467,prod34D21);
          real prod4D23#1 = RMul(_t3467,prod4D22);
          real basisEval4D24#1 = RMul(_t3467,prod4D23);
          real prod4D25#4 = RMul(varAcc4CFE,prod24D0F);
          real prod4D26#1 = RMul(_t3467,prod4D25);
          real basisEval4D27#1 = RMul(_t3467,prod4D26);
          real prod4D28#4 = RMul(prod24D16,varAcc4CFF);
          real prod4D29#1 = RMul(_t3467,prod4D28);
          real basisEval4D2A#1 = RMul(_t3467,prod4D29);
          real prod34D2B#5 = RMul(prod24D16,varAcc4CFE);
          real prod4D2C#4 = RMul(prod34D2B,_t3467);
          real prod4D2D#1 = RMul(_t3467,prod4D2C);
          real basisEval4D2E#1 = RMul(_t3467,prod4D2D);
          real prod4D2F#1 = RMul(varAcc4CFD,prod4D10);
          real basisEval4D30#1 = RMul(_t3467,prod4D2F);
          real prod4D31#1 = RMul(varAcc4CFD,prod4D13);
          real basisEval4D32#1 = RMul(_t3467,prod4D31);
          real prod4D33#1 = RMul(varAcc4CFD,prod4D17);
          real basisEval4D34#1 = RMul(_t3467,prod4D33);
          real prod4D35#1 = RMul(prod24D1E,prod4D05);
          real basisEval4D36#1 = RMul(_t3467,prod4D35);
          real prod4D37#1 = RMul(prod24D1E,prod4D09);
          real basisEval4D38#1 = RMul(_t3467,prod4D37);
          real prod34D39#11 = RMul(prod24D1E,varAcc4CFD);
          real prod4D3A#1 = RMul(prod34D39,prod3915);
          real basisEval4D3B#1 = RMul(_t3467,prod4D3A);
          real prod44D3C#4 = RMul(prod34D21,varAcc4CFF);
          real prod4D3D#3 = RMul(_t3467,prod44D3C);
          real prod4D3E#1 = RMul(_t3467,prod4D3D);
          real basisEval4D3F#1 = RMul(_t3467,prod4D3E);
          real prod4D40#3 = RMul(varAcc4CFE,prod34D21);
          real prod4D41#1 = RMul(_t3467,prod4D40);
          real basisEval4D42#1 = RMul(_t3467,prod4D41);
          real prod4D43#3 = RMul(prod24D16,prod24D0F);
          real prod4D44#1 = RMul(_t3467,prod4D43);
          real basisEval4D45#1 = RMul(_t3467,prod4D44);
          real prod4D46#3 = RMul(prod34D2B,varAcc4CFF);
          real prod4D47#1 = RMul(_t3467,prod4D46);
          real basisEval4D48#1 = RMul(_t3467,prod4D47);
          real prod44D49#4 = RMul(prod34D2B,varAcc4CFE);
          real prod4D4A#3 = RMul(prod44D49,_t3467);
          real prod4D4B#1 = RMul(_t3467,prod4D4A);
          real basisEval4D4C#1 = RMul(_t3467,prod4D4B);
          real prod4D4D#1 = RMul(varAcc4CFD,prod4D22);
          real basisEval4D4E#1 = RMul(_t3467,prod4D4D);
          real prod4D4F#1 = RMul(varAcc4CFD,prod4D25);
          real basisEval4D50#1 = RMul(_t3467,prod4D4F);
          real prod4D51#1 = RMul(varAcc4CFD,prod4D28);
          real basisEval4D52#1 = RMul(_t3467,prod4D51);
          real prod4D53#1 = RMul(varAcc4CFD,prod4D2C);
          real basisEval4D54#1 = RMul(_t3467,prod4D53);
          real prod4D55#1 = RMul(prod24D1E,prod4D10);
          real basisEval4D56#1 = RMul(_t3467,prod4D55);
          real prod4D57#1 = RMul(prod24D1E,prod4D13);
          real basisEval4D58#1 = RMul(_t3467,prod4D57);
          real prod4D59#1 = RMul(prod24D1E,prod4D17);
          real basisEval4D5A#1 = RMul(_t3467,prod4D59);
          real prod4D5B#1 = RMul(prod34D39,prod4D05);
          real basisEval4D5C#1 = RMul(_t3467,prod4D5B);
          real prod4D5D#1 = RMul(prod34D39,prod4D09);
          real basisEval4D5E#1 = RMul(_t3467,prod4D5D);
          real prod44D5F#7 = RMul(prod34D39,varAcc4CFD);
          real prod4D60#1 = RMul(prod44D5F,prod3915);
          real basisEval4D61#1 = RMul(_t3467,prod4D60);
          real prod54D62#3 = RMul(prod44D3C,varAcc4CFF);
          real prod4D63#2 = RMul(_t3467,prod54D62);
          real prod4D64#1 = RMul(_t3467,prod4D63);
          real basisEval4D65#1 = RMul(_t3467,prod4D64);
          real prod4D66#2 = RMul(varAcc4CFE,prod44D3C);
          real prod4D67#1 = RMul(_t3467,prod4D66);
          real basisEval4D68#1 = RMul(_t3467,prod4D67);
          real prod4D69#2 = RMul(prod24D16,prod34D21);
          real prod4D6A#1 = RMul(_t3467,prod4D69);
          real basisEval4D6B#1 = RMul(_t3467,prod4D6A);
          real prod4D6C#2 = RMul(prod34D2B,prod24D0F);
          real prod4D6D#1 = RMul(_t3467,prod4D6C);
          real basisEval4D6E#1 = RMul(_t3467,prod4D6D);
          real prod4D6F#2 = RMul(prod44D49,varAcc4CFF);
          real prod4D70#1 = RMul(_t3467,prod4D6F);
          real basisEval4D71#1 = RMul(_t3467,prod4D70);
          real prod54D72#3 = RMul(prod44D49,varAcc4CFE);
          real prod4D73#2 = RMul(prod54D72,_t3467);
          real prod4D74#1 = RMul(_t3467,prod4D73);
          real basisEval4D75#1 = RMul(_t3467,prod4D74);
          real prod4D76#1 = RMul(varAcc4CFD,prod4D3D);
          real basisEval4D77#1 = RMul(_t3467,prod4D76);
          real prod4D78#1 = RMul(varAcc4CFD,prod4D40);
          real basisEval4D79#1 = RMul(_t3467,prod4D78);
          real prod4D7A#1 = RMul(varAcc4CFD,prod4D43);
          real basisEval4D7B#1 = RMul(_t3467,prod4D7A);
          real prod4D7C#1 = RMul(varAcc4CFD,prod4D46);
          real basisEval4D7D#1 = RMul(_t3467,prod4D7C);
          real prod4D7E#1 = RMul(varAcc4CFD,prod4D4A);
          real basisEval4D7F#1 = RMul(_t3467,prod4D7E);
          real prod4D80#1 = RMul(prod24D1E,prod4D22);
          real basisEval4D81#1 = RMul(_t3467,prod4D80);
          real prod4D82#1 = RMul(prod24D1E,prod4D25);
          real basisEval4D83#1 = RMul(_t3467,prod4D82);
          real prod4D84#1 = RMul(prod24D1E,prod4D28);
          real basisEval4D85#1 = RMul(_t3467,prod4D84);
          real prod4D86#1 = RMul(prod24D1E,prod4D2C);
          real basisEval4D87#1 = RMul(_t3467,prod4D86);
          real prod4D88#1 = RMul(prod34D39,prod4D10);
          real basisEval4D89#1 = RMul(_t3467,prod4D88);
          real prod4D8A#1 = RMul(prod34D39,prod4D13);
          real basisEval4D8B#1 = RMul(_t3467,prod4D8A);
          real prod4D8C#1 = RMul(prod34D39,prod4D17);
          real basisEval4D8D#1 = RMul(_t3467,prod4D8C);
          real prod4D8E#1 = RMul(prod44D5F,prod4D05);
          real basisEval4D8F#1 = RMul(_t3467,prod4D8E);
          real prod4D90#1 = RMul(prod44D5F,prod4D09);
          real basisEval4D91#1 = RMul(_t3467,prod4D90);
          real prod54D92#4 = RMul(prod44D5F,varAcc4CFD);
          real prod4D93#1 = RMul(prod54D92,prod3915);
          real basisEval4D94#1 = RMul(_t3467,prod4D93);
          real prod64D95#1 = RMul(prod54D62,varAcc4CFF);
          real prod4D96#1 = RMul(_t3467,prod64D95);
          real prod4D97#1 = RMul(_t3467,prod4D96);
          real basisEval4D98#1 = RMul(_t3467,prod4D97);
          real prod4D99#1 = RMul(varAcc4CFE,prod54D62);
          real prod4D9A#1 = RMul(_t3467,prod4D99);
          real basisEval4D9B#1 = RMul(_t3467,prod4D9A);
          real prod4D9C#1 = RMul(prod24D16,prod44D3C);
          real prod4D9D#1 = RMul(_t3467,prod4D9C);
          real basisEval4D9E#1 = RMul(_t3467,prod4D9D);
          real prod4D9F#1 = RMul(prod34D2B,prod34D21);
          real prod4DA0#1 = RMul(_t3467,prod4D9F);
          real basisEval4DA1#1 = RMul(_t3467,prod4DA0);
          real prod4DA2#1 = RMul(prod44D49,prod24D0F);
          real prod4DA3#1 = RMul(_t3467,prod4DA2);
          real basisEval4DA4#1 = RMul(_t3467,prod4DA3);
          real prod4DA5#1 = RMul(prod54D72,varAcc4CFF);
          real prod4DA6#1 = RMul(_t3467,prod4DA5);
          real basisEval4DA7#1 = RMul(_t3467,prod4DA6);
          real prod64DA8#1 = RMul(prod54D72,varAcc4CFE);
          real prod4DA9#1 = RMul(prod64DA8,_t3467);
          real prod4DAA#1 = RMul(_t3467,prod4DA9);
          real basisEval4DAB#1 = RMul(_t3467,prod4DAA);
          real prod4DAC#1 = RMul(varAcc4CFD,prod4D63);
          real basisEval4DAD#1 = RMul(_t3467,prod4DAC);
          real prod4DAE#1 = RMul(varAcc4CFD,prod4D66);
          real basisEval4DAF#1 = RMul(_t3467,prod4DAE);
          real prod4DB0#1 = RMul(varAcc4CFD,prod4D69);
          real basisEval4DB1#1 = RMul(_t3467,prod4DB0);
          real prod4DB2#1 = RMul(varAcc4CFD,prod4D6C);
          real basisEval4DB3#1 = RMul(_t3467,prod4DB2);
          real prod4DB4#1 = RMul(varAcc4CFD,prod4D6F);
          real basisEval4DB5#1 = RMul(_t3467,prod4DB4);
          real prod4DB6#1 = RMul(varAcc4CFD,prod4D73);
          real basisEval4DB7#1 = RMul(_t3467,prod4DB6);
          real prod4DB8#1 = RMul(prod24D1E,prod4D3D);
          real basisEval4DB9#1 = RMul(_t3467,prod4DB8);
          real prod4DBA#1 = RMul(prod24D1E,prod4D40);
          real basisEval4DBB#1 = RMul(_t3467,prod4DBA);
          real prod4DBC#1 = RMul(prod24D1E,prod4D43);
          real basisEval4DBD#1 = RMul(_t3467,prod4DBC);
          real prod4DBE#1 = RMul(prod24D1E,prod4D46);
          real basisEval4DBF#1 = RMul(_t3467,prod4DBE);
          real prod4DC0#1 = RMul(prod24D1E,prod4D4A);
          real basisEval4DC1#1 = RMul(_t3467,prod4DC0);
          real prod4DC2#1 = RMul(prod34D39,prod4D22);
          real basisEval4DC3#1 = RMul(_t3467,prod4DC2);
          real prod4DC4#1 = RMul(prod34D39,prod4D25);
          real basisEval4DC5#1 = RMul(_t3467,prod4DC4);
          real prod4DC6#1 = RMul(prod34D39,prod4D28);
          real basisEval4DC7#1 = RMul(_t3467,prod4DC6);
          real prod4DC8#1 = RMul(prod34D39,prod4D2C);
          real basisEval4DC9#1 = RMul(_t3467,prod4DC8);
          real prod4DCA#1 = RMul(prod44D5F,prod4D10);
          real basisEval4DCB#1 = RMul(_t3467,prod4DCA);
          real prod4DCC#1 = RMul(prod44D5F,prod4D13);
          real basisEval4DCD#1 = RMul(_t3467,prod4DCC);
          real prod4DCE#1 = RMul(prod44D5F,prod4D17);
          real basisEval4DCF#1 = RMul(_t3467,prod4DCE);
          real prod4DD0#1 = RMul(prod54D92,prod4D05);
          real basisEval4DD1#1 = RMul(_t3467,prod4DD0);
          real prod4DD2#1 = RMul(prod54D92,prod4D09);
          real basisEval4DD3#1 = RMul(_t3467,prod4DD2);
          real prod64DD4#1 = RMul(prod54D92,varAcc4CFD);
          real prod4DD5#1 = RMul(prod64DD4,prod3915);
          real basisEval4DD6#1 = RMul(_t3467,prod4DD5);
          tensor[84] intermediateCons4DD7#1 = <tensor[84]>[basisEval3917,basisEval4D07,basisEval4D0B,basisEval4D0E,basisEval4D12,basisEval4D15,basisEval4D19,basisEval4D1B,basisEval4D1D,basisEval4D20,basisEval4D24,basisEval4D27,basisEval4D2A,basisEval4D2E,basisEval4D30,basisEval4D32,basisEval4D34,basisEval4D36,basisEval4D38,basisEval4D3B,basisEval4D3F,basisEval4D42,basisEval4D45,basisEval4D48,basisEval4D4C,basisEval4D4E,basisEval4D50,basisEval4D52,basisEval4D54,basisEval4D56,basisEval4D58,basisEval4D5A,basisEval4D5C,basisEval4D5E,basisEval4D61,basisEval4D65,basisEval4D68,basisEval4D6B,basisEval4D6E,basisEval4D71,basisEval4D75,basisEval4D77,basisEval4D79,basisEval4D7B,basisEval4D7D,basisEval4D7F,basisEval4D81,basisEval4D83,basisEval4D85,basisEval4D87,basisEval4D89,basisEval4D8B,basisEval4D8D,basisEval4D8F,basisEval4D91,basisEval4D94,basisEval4D98,basisEval4D9B,basisEval4D9E,basisEval4DA1,basisEval4DA4,basisEval4DA7,basisEval4DAB,basisEval4DAD,basisEval4DAF,basisEval4DB1,basisEval4DB3,basisEval4DB5,basisEval4DB7,basisEval4DB9,basisEval4DBB,basisEval4DBD,basisEval4DBF,basisEval4DC1,basisEval4DC3,basisEval4DC5,basisEval4DC7,basisEval4DC9,basisEval4DCB,basisEval4DCD,basisEval4DCF,basisEval4DD1,basisEval4DD3,basisEval4DD6];
          real probe_l_84EB4#1 = VDot<84>(dofs37BC,intermediateCons4DD7);
          real op1_e3_l_94EB7#1 = RSub(probe_l_84EB4,cmin4948);
          real op1_e3_l_104EBA#1 = RSub(cmax494A,cmin4948);
          real op1_e3_l_114EBD#1 = RDiv(op1_e3_l_94EB7,op1_e3_l_104EBA);
          real op1_e3_l_124EC0#1 = RSub(_t3467,_t3465);
          real op1_e3_l_134EC3#1 = RMul(op1_e3_l_114EBD,op1_e3_l_124EC0);
          real _t4EC6#1 = RAdd(_t3465,op1_e3_l_134EC3);
          real Mtransform4EC9#1 = Transform<IMAGE1D<double[3]>>(cmap23FF);
          real MxPos4ECB#1 = RMul(Mtransform4EC9,_t4EC6);
          real Ttranslate4ECE#1 = Translate<IMAGE1D<double[3]>>(cmap23FF);
          real imgPos4ED0#2 = RAdd(MxPos4ECB,Ttranslate4ECE);
          real nd4ED3#2 = Floor<1>(imgPos4ED0);
          real f4ED5#2 = RSub(imgPos4ED0,nd4ED3);
          int n4ED8#5 = RealToInt<1>(nd4ED3);
          bool isInside4EDC#1 = IndexInside<IMAGE1D<double[3]>,2>(n4ED8,cmap23FF);
          if isInside4EDC then goto ASSIGN5ECC else goto ASSIGN5EC4
        ASSIGN5ECC:  preds = [COND4EDE]
          int offp4EE3#3 = IMul(ilit3477,n4ED8);
          real v0_4EE4#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE3);
          int addRes4EE6#1 = IAdd(n4ED8,ilit3471);
          int offp4EE7#3 = IMul(ilit3477,addRes4EE6);
          real v1_4EE8#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EE7);
          int offp4EEA#1 = IAdd(offp4EE3,ilit3471);
          real v0_4EEB#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEA);
          int offp4EEC#1 = IAdd(offp4EE7,ilit3471);
          real v1_4EED#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EEC);
          int offp4EF0#1 = IAdd(offp4EE3,ilit3474);
          real v0_4EF1#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF0);
          int offp4EF2#1 = IAdd(offp4EE7,ilit3474);
          real v1_4EF3#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp4EF2);
          tensor[3,2] voxels4EF5#1 = <tensor[3,2]>[v0_4EE4,v1_4EE8,v0_4EEB,v1_4EED,v0_4EF1,v1_4EF3];
          goto JOIN4F0F
        JOIN4F0F:  preds = [ASSIGN5F75,ASSIGN5F76]
          tensor[3,2] ldvox4F0D#3 = phi(voxels4EF5,voxels537C)
          real idx4F12#1 = RSub(f4ED5,_t3467);
          tensor[2] kernX_4F10#1 = <tensor[2]>[f4ED5,idx4F12];
          tensor[2] a04F17#1 = <tensor[2]>[_t3467,_t3467];
          tensor[2] a14F18#1 = <tensor[2]>[realLit3D0E,_t3467];
          tensor[2] prod14F1D#1 = VMul<2>(kernX_4F10,a14F18);
          tensor[2] kevalX_d0_4F16#3 = VAdd<2>(a04F17,prod14F1D);
          tensor[2] projIx4F27#1 = ProjectLast<tensor[3,2],[0]>(ldvox4F0D);
          real vdot4F28#1 = VDot<2>(projIx4F27,kevalX_d0_4F16);
          tensor[2] projIx4F29#1 = ProjectLast<tensor[3,2],[1]>(ldvox4F0D);
          real vdot4F2A#1 = VDot<2>(projIx4F29,kevalX_d0_4F16);
          tensor[2] projIx4F2B#1 = ProjectLast<tensor[3,2],[2]>(ldvox4F0D);
          real vdot4F2C#1 = VDot<2>(projIx4F2B,kevalX_d0_4F16);
          tensor[3] mcol4F26#1 = <tensor[3]>[vdot4F28,vdot4F2A,vdot4F2C];
          goto JOIN4F36
        JOIN4F36:  preds = [ASSIGN4F34,COND4950]
          tensor[3] mcol4F35#3 = phi(mcol4F26,mcol494C)
          real r4F41#1 = RAdd(r4051,r4068);
          real r4F42#1 = RAdd(r4F41,r407F);
          real r4F49#1 = RAdd(r4053,r406A);
          real r4F4A#2 = RAdd(r4F49,r4081);
          real r4F51#1 = RAdd(r4055,r406C);
          real r4F52#2 = RAdd(r4F51,r4083);
          tensor[3] tensor4F53#1 = <tensor[3]>[r4F42,r4F4A,r4F52];
          real r4F62#1 = RAdd(r405A,r4071);
          real r4F63#1 = RAdd(r4F62,r4088);
          real r4F6A#1 = RAdd(r405C,r4073);
          real r4F6B#2 = RAdd(r4F6A,r408A);
          tensor[3] tensor4F6C#1 = <tensor[3]>[r4F4A,r4F63,r4F6B];
          real r4F83#1 = RAdd(r4063,r407A);
          real r4F84#1 = RAdd(r4F83,r4091);
          tensor[3] tensor4F85#1 = <tensor[3]>[r4F52,r4F6B,r4F84];
          real r4FDF#1 = RAdd(r40DD,r40E4);
          real r4FE0#1 = RAdd(r4FDF,r40EB);
          real r4FE6#1 = RAdd(r40DF,r40E6);
          real r4FE7#1 = RAdd(r4FE6,r40ED);
          real r4FED#1 = RAdd(r40E1,r40E8);
          real r4FEE#1 = RAdd(r4FED,r40EF);
          tensor[3] tensor4FEF#1 = <tensor[3]>[r4FE0,r4FE7,r4FEE];
          real r4FF3#1 = RAdd(r40F2,r40F6);
          real r4FF4#1 = RAdd(r4FF3,r40FA);
          real r4FF8#1 = RAdd(r40E4,r40F7);
          real r4FF9#1 = RAdd(r4FF8,r40FB);
          real r4FFD#1 = RAdd(r40F4,r40F8);
          real r4FFE#1 = RAdd(r4FFD,r40FC);
          tensor[3] tensor4FFF#1 = <tensor[3]>[r4FF4,r4FF9,r4FFE];
          real r5003#1 = RAdd(r40FF,r4103);
          real r5004#1 = RAdd(r5003,r4107);
          real r5008#1 = RAdd(r4100,r4104);
          real r5009#1 = RAdd(r5008,r4108);
          real r500D#1 = RAdd(r40EB,r40FB);
          real r500E#1 = RAdd(r500D,r4109);
          tensor[3] tensor500F#1 = <tensor[3]>[r5004,r5009,r500E];
          tensor[3] v504E#3 = VAdd<3>(tensor4F53,tensor4FEF);
          tensor[3] v5051#3 = VAdd<3>(tensor4F6C,tensor4FFF);
          tensor[3] v5054#3 = VAdd<3>(tensor4F85,tensor500F);
          real r5062#3 = VIndex<3,0>(v504E);
          real r5063#1 = RMul(vdot3AF3,r5062);
          real r5064#3 = VIndex<3,1>(v504E);
          real r5065#1 = RMul(vdot3AF3,r5064);
          real r5066#3 = VIndex<3,2>(v504E);
          real r5067#1 = RMul(vdot3AF3,r5066);
          tensor[3] tensor5068#1 = <tensor[3]>[r5063,r5065,r5067];
          real r5069#3 = VIndex<3,0>(v5051);
          real r506A#1 = RMul(vdot3AF3,r5069);
          real r506B#3 = VIndex<3,1>(v5051);
          real r506C#1 = RMul(vdot3AF3,r506B);
          real r506D#3 = VIndex<3,2>(v5051);
          real r506E#1 = RMul(vdot3AF3,r506D);
          tensor[3] tensor506F#1 = <tensor[3]>[r506A,r506C,r506E];
          real r5070#3 = VIndex<3,0>(v5054);
          real r5071#1 = RMul(vdot3AF3,r5070);
          real r5072#3 = VIndex<3,1>(v5054);
          real r5073#1 = RMul(vdot3AF3,r5072);
          real r5074#3 = VIndex<3,2>(v5054);
          real r5075#1 = RMul(vdot3AF3,r5074);
          tensor[3] tensor5076#1 = <tensor[3]>[r5071,r5073,r5075];
          real r5079#1 = RMul(vdot3AF5,r5062);
          real r507A#1 = RMul(vdot3AF5,r5064);
          real r507B#1 = RMul(vdot3AF5,r5066);
          tensor[3] tensor507C#1 = <tensor[3]>[r5079,r507A,r507B];
          real r507D#1 = RMul(vdot3AF5,r5069);
          real r507E#1 = RMul(vdot3AF5,r506B);
          real r507F#1 = RMul(vdot3AF5,r506D);
          tensor[3] tensor5080#1 = <tensor[3]>[r507D,r507E,r507F];
          real r5081#1 = RMul(vdot3AF5,r5070);
          real r5082#1 = RMul(vdot3AF5,r5072);
          real r5083#1 = RMul(vdot3AF5,r5074);
          tensor[3] tensor5084#1 = <tensor[3]>[r5081,r5082,r5083];
          real r5087#1 = RMul(vdot3AF7,r5062);
          real r5088#1 = RMul(vdot3AF7,r5064);
          real r5089#1 = RMul(vdot3AF7,r5066);
          tensor[3] tensor508A#1 = <tensor[3]>[r5087,r5088,r5089];
          real r508B#1 = RMul(vdot3AF7,r5069);
          real r508C#1 = RMul(vdot3AF7,r506B);
          real r508D#1 = RMul(vdot3AF7,r506D);
          tensor[3] tensor508E#1 = <tensor[3]>[r508B,r508C,r508D];
          real r508F#1 = RMul(vdot3AF7,r5070);
          real r5090#1 = RMul(vdot3AF7,r5072);
          real r5091#1 = RMul(vdot3AF7,r5074);
          tensor[3] tensor5092#1 = <tensor[3]>[r508F,r5090,r5091];
          tensor[3] v50CC#3 = VAdd<3>(tensor4215,tensor5068);
          tensor[3] v50CF#3 = VAdd<3>(tensor421C,tensor507C);
          tensor[3] v50D2#3 = VAdd<3>(tensor4223,tensor508A);
          tensor[3] v50D6#3 = VAdd<3>(tensor4229,tensor506F);
          tensor[3] v50D9#3 = VAdd<3>(tensor422D,tensor5080);
          tensor[3] v50DC#3 = VAdd<3>(tensor4231,tensor508E);
          tensor[3] v50E0#3 = VAdd<3>(tensor4237,tensor5076);
          tensor[3] v50E3#3 = VAdd<3>(tensor423B,tensor5084);
          tensor[3] v50E6#3 = VAdd<3>(tensor423F,tensor5092);
          real r5109#3 = VIndex<3,0>(v50CC);
          real r510B#1 = RMul(r5109,r3CFD);
          real r510C#3 = VIndex<3,0>(v50D6);
          real r510E#1 = RMul(r510C,r3D07);
          real r510F#3 = VIndex<3,0>(v50E0);
          real r5111#1 = RMul(r510F,r3D12);
          real r5112#3 = VIndex<3,0>(v50CF);
          real r5114#1 = RMul(r5112,r3D1D);
          real r5115#3 = VIndex<3,0>(v50D9);
          real r5117#1 = RMul(r5115,r3CFD);
          real r5118#3 = VIndex<3,0>(v50E3);
          real r511A#1 = RMul(r5118,r3D25);
          real r511B#3 = VIndex<3,0>(v50D2);
          real r511D#1 = RMul(r511B,r3D30);
          real r511E#3 = VIndex<3,0>(v50DC);
          real r5120#1 = RMul(r511E,r3D3A);
          real r5121#3 = VIndex<3,0>(v50E6);
          real r5123#1 = RMul(r5121,r3CFD);
          real r5124#1 = RAdd(r510B,r510E);
          real r5125#1 = RAdd(r5124,r5111);
          real r5126#1 = RAdd(r5125,r5114);
          real r5127#1 = RAdd(r5126,r5117);
          real r5128#1 = RAdd(r5127,r511A);
          real r5129#1 = RAdd(r5128,r511D);
          real r512A#1 = RAdd(r5129,r5120);
          real r512B#1 = RAdd(r512A,r5123);
          real r512D#1 = RMul(r5109,r3D00);
          real r512F#1 = RMul(r510C,r3D09);
          real r5131#1 = RMul(r510F,r3D16);
          real r5133#1 = RMul(r5112,r3D1F);
          real r5135#1 = RMul(r5115,r3D00);
          real r5137#1 = RMul(r5118,r3D28);
          real r5139#1 = RMul(r511B,r3D33);
          real r513B#1 = RMul(r511E,r3D3D);
          real r513D#1 = RMul(r5121,r3D00);
          real r513E#1 = RAdd(r512D,r512F);
          real r513F#1 = RAdd(r513E,r5131);
          real r5140#1 = RAdd(r513F,r5133);
          real r5141#1 = RAdd(r5140,r5135);
          real r5142#1 = RAdd(r5141,r5137);
          real r5143#1 = RAdd(r5142,r5139);
          real r5144#1 = RAdd(r5143,r513B);
          real r5145#1 = RAdd(r5144,r513D);
          real r5147#1 = RMul(r5109,r3D03);
          real r5149#1 = RMul(r510C,r3D0C);
          real r514B#1 = RMul(r510F,r3D19);
          real r514D#1 = RMul(r5112,r3D21);
          real r514F#1 = RMul(r5115,r3D03);
          real r5151#1 = RMul(r5118,r3D2B);
          real r5153#1 = RMul(r511B,r3D36);
          real r5155#1 = RMul(r511E,r3D40);
          real r5157#1 = RMul(r5121,r3D03);
          real r5158#1 = RAdd(r5147,r5149);
          real r5159#1 = RAdd(r5158,r514B);
          real r515A#1 = RAdd(r5159,r514D);
          real r515B#1 = RAdd(r515A,r514F);
          real r515C#1 = RAdd(r515B,r5151);
          real r515D#1 = RAdd(r515C,r5153);
          real r515E#1 = RAdd(r515D,r5155);
          real r515F#1 = RAdd(r515E,r5157);
          tensor[3] tensor5160#1 = <tensor[3]>[r512B,r5145,r515F];
          real r5161#3 = VIndex<3,1>(v50CC);
          real r5162#1 = RMul(r5161,r3CFD);
          real r5163#3 = VIndex<3,1>(v50D6);
          real r5164#1 = RMul(r5163,r3D07);
          real r5165#3 = VIndex<3,1>(v50E0);
          real r5166#1 = RMul(r5165,r3D12);
          real r5167#3 = VIndex<3,1>(v50CF);
          real r5168#1 = RMul(r5167,r3D1D);
          real r5169#3 = VIndex<3,1>(v50D9);
          real r516A#1 = RMul(r5169,r3CFD);
          real r516B#3 = VIndex<3,1>(v50E3);
          real r516C#1 = RMul(r516B,r3D25);
          real r516D#3 = VIndex<3,1>(v50D2);
          real r516E#1 = RMul(r516D,r3D30);
          real r516F#3 = VIndex<3,1>(v50DC);
          real r5170#1 = RMul(r516F,r3D3A);
          real r5171#3 = VIndex<3,1>(v50E6);
          real r5172#1 = RMul(r5171,r3CFD);
          real r5173#1 = RAdd(r5162,r5164);
          real r5174#1 = RAdd(r5173,r5166);
          real r5175#1 = RAdd(r5174,r5168);
          real r5176#1 = RAdd(r5175,r516A);
          real r5177#1 = RAdd(r5176,r516C);
          real r5178#1 = RAdd(r5177,r516E);
          real r5179#1 = RAdd(r5178,r5170);
          real r517A#1 = RAdd(r5179,r5172);
          real r517B#1 = RMul(r5161,r3D00);
          real r517C#1 = RMul(r5163,r3D09);
          real r517D#1 = RMul(r5165,r3D16);
          real r517E#1 = RMul(r5167,r3D1F);
          real r517F#1 = RMul(r5169,r3D00);
          real r5180#1 = RMul(r516B,r3D28);
          real r5181#1 = RMul(r516D,r3D33);
          real r5182#1 = RMul(r516F,r3D3D);
          real r5183#1 = RMul(r5171,r3D00);
          real r5184#1 = RAdd(r517B,r517C);
          real r5185#1 = RAdd(r5184,r517D);
          real r5186#1 = RAdd(r5185,r517E);
          real r5187#1 = RAdd(r5186,r517F);
          real r5188#1 = RAdd(r5187,r5180);
          real r5189#1 = RAdd(r5188,r5181);
          real r518A#1 = RAdd(r5189,r5182);
          real r518B#1 = RAdd(r518A,r5183);
          real r518C#1 = RMul(r5161,r3D03);
          real r518D#1 = RMul(r5163,r3D0C);
          real r518E#1 = RMul(r5165,r3D19);
          real r518F#1 = RMul(r5167,r3D21);
          real r5190#1 = RMul(r5169,r3D03);
          real r5191#1 = RMul(r516B,r3D2B);
          real r5192#1 = RMul(r516D,r3D36);
          real r5193#1 = RMul(r516F,r3D40);
          real r5194#1 = RMul(r5171,r3D03);
          real r5195#1 = RAdd(r518C,r518D);
          real r5196#1 = RAdd(r5195,r518E);
          real r5197#1 = RAdd(r5196,r518F);
          real r5198#1 = RAdd(r5197,r5190);
          real r5199#1 = RAdd(r5198,r5191);
          real r519A#1 = RAdd(r5199,r5192);
          real r519B#1 = RAdd(r519A,r5193);
          real r519C#1 = RAdd(r519B,r5194);
          tensor[3] tensor519D#1 = <tensor[3]>[r517A,r518B,r519C];
          real r519E#3 = VIndex<3,2>(v50CC);
          real r519F#1 = RMul(r519E,r3CFD);
          real r51A0#3 = VIndex<3,2>(v50D6);
          real r51A1#1 = RMul(r51A0,r3D07);
          real r51A2#3 = VIndex<3,2>(v50E0);
          real r51A3#1 = RMul(r51A2,r3D12);
          real r51A4#3 = VIndex<3,2>(v50CF);
          real r51A5#1 = RMul(r51A4,r3D1D);
          real r51A6#3 = VIndex<3,2>(v50D9);
          real r51A7#1 = RMul(r51A6,r3CFD);
          real r51A8#3 = VIndex<3,2>(v50E3);
          real r51A9#1 = RMul(r51A8,r3D25);
          real r51AA#3 = VIndex<3,2>(v50D2);
          real r51AB#1 = RMul(r51AA,r3D30);
          real r51AC#3 = VIndex<3,2>(v50DC);
          real r51AD#1 = RMul(r51AC,r3D3A);
          real r51AE#3 = VIndex<3,2>(v50E6);
          real r51AF#1 = RMul(r51AE,r3CFD);
          real r51B0#1 = RAdd(r519F,r51A1);
          real r51B1#1 = RAdd(r51B0,r51A3);
          real r51B2#1 = RAdd(r51B1,r51A5);
          real r51B3#1 = RAdd(r51B2,r51A7);
          real r51B4#1 = RAdd(r51B3,r51A9);
          real r51B5#1 = RAdd(r51B4,r51AB);
          real r51B6#1 = RAdd(r51B5,r51AD);
          real r51B7#1 = RAdd(r51B6,r51AF);
          real r51B8#1 = RMul(r519E,r3D00);
          real r51B9#1 = RMul(r51A0,r3D09);
          real r51BA#1 = RMul(r51A2,r3D16);
          real r51BB#1 = RMul(r51A4,r3D1F);
          real r51BC#1 = RMul(r51A6,r3D00);
          real r51BD#1 = RMul(r51A8,r3D28);
          real r51BE#1 = RMul(r51AA,r3D33);
          real r51BF#1 = RMul(r51AC,r3D3D);
          real r51C0#1 = RMul(r51AE,r3D00);
          real r51C1#1 = RAdd(r51B8,r51B9);
          real r51C2#1 = RAdd(r51C1,r51BA);
          real r51C3#1 = RAdd(r51C2,r51BB);
          real r51C4#1 = RAdd(r51C3,r51BC);
          real r51C5#1 = RAdd(r51C4,r51BD);
          real r51C6#1 = RAdd(r51C5,r51BE);
          real r51C7#1 = RAdd(r51C6,r51BF);
          real r51C8#1 = RAdd(r51C7,r51C0);
          real r51C9#1 = RMul(r519E,r3D03);
          real r51CA#1 = RMul(r51A0,r3D0C);
          real r51CB#1 = RMul(r51A2,r3D19);
          real r51CC#1 = RMul(r51A4,r3D21);
          real r51CD#1 = RMul(r51A6,r3D03);
          real r51CE#1 = RMul(r51A8,r3D2B);
          real r51CF#1 = RMul(r51AA,r3D36);
          real r51D0#1 = RMul(r51AC,r3D40);
          real r51D1#1 = RMul(r51AE,r3D03);
          real r51D2#1 = RAdd(r51C9,r51CA);
          real r51D3#1 = RAdd(r51D2,r51CB);
          real r51D4#1 = RAdd(r51D3,r51CC);
          real r51D5#1 = RAdd(r51D4,r51CD);
          real r51D6#1 = RAdd(r51D5,r51CE);
          real r51D7#1 = RAdd(r51D6,r51CF);
          real r51D8#1 = RAdd(r51D7,r51D0);
          real r51D9#1 = RAdd(r51D8,r51D1);
          tensor[3] tensor51DA#1 = <tensor[3]>[r51B7,r51C8,r51D9];
          real vdot52B1#1 = VDot<3>(op1_e3_l_943E30,tensor5160);
          real vdot52B3#1 = VDot<3>(op1_e3_l_943E30,tensor519D);
          real vdot52B5#1 = VDot<3>(op1_e3_l_943E30,tensor51DA);
          tensor[3] op1_e3_l_23152AF#2 = <tensor[3]>[vdot52B1,vdot52B3,vdot52B5];
          tensor[3] op1_e3_l_23452BE#3 = VAdd<3>(op1_e3_l_23152AF,op1_e3_l_23152AF);
          tensor[3] op1_e3_l_33752C1#3 = VScale<3>(op1_e3_l_14644F8,op1_e3_l_23452BE);
          real op1_e3_l_33852C4#1 = VDot<3>(op1_e3_l_23452BE,op1_e3_l_23452BE);
          real r52C9#3 = RDiv(_t3467,op1_e3_l_33852C4);
          real r52CA#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_33752C1);
          real r52CB#1 = RMul(r52C9,r52CA);
          real r52CC#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_33752C1);
          real r52CD#1 = RMul(r52C9,r52CC);
          real r52CE#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_33752C1);
          real r52CF#1 = RMul(r52C9,r52CE);
          tensor[3] op1_e3_l_33952C7#1 = <tensor[3]>[r52CB,r52CD,r52CF];
          tensor[3] op1_e3_l_68252DA#3 = VNeg<3>(op1_e3_l_33952C7);
          real op1_e3_l_68452DD#1 = VDot<3>(op1_e3_l_68252DA,op1_e3_l_68252DA);
          real op1_e3_l_68552E0#1 = Sqrt(op1_e3_l_68452DD);
          real op1_e3_l_68752E3#1 = RDiv(_t3467,op1_e3_l_68552E0);
          tensor[3] op1_e3_l_68852E8#1 = VScale<3>(op1_e3_l_68752E3,op1_e3_l_68252DA);
          tensor[3] op1_e3_l_68952EB#1 = VNeg<3>(op1_e3_l_68852E8);
          real op1_e3_l_69052EE#2 = VDot<3>(op1_e3_l_68952EB,litwsp2425);
          real op1_e3_l_69152F1#1 = RMul(op1_e3_l_69052EE,op1_e3_l_69052EE);
          real op1_e3_l_69252F4#1 = RMul(phKd2433,op1_e3_l_69152F1);
          real op1_e3_l_69452F7#1 = RSub(rayN243D,camNearVsp2421);
          real op1_e3_l_69552FA#1 = RSub(camFarVsp2423,camNearVsp2421);
          real op1_e3_l_69652FD#1 = RDiv(op1_e3_l_69452F7,op1_e3_l_69552FA);
          tensor[3] op1_e3_l_6975300#1 = VSub<3>(mcFar241D,mcNear241B);
          tensor[3] op1_e3_l_6985303#1 = VScale<3>(op1_e3_l_69652FD,op1_e3_l_6975300);
          real op1_e3_l_6995306#3 = RAdd(phKa2431,op1_e3_l_69252F4);
          tensor[3] op1_e3_l_7005309#3 = VAdd<3>(mcNear241B,op1_e3_l_6985303);
          real r530D#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7005309);
          real r530E#1 = TensorIndex<tensor[3],[0]>(mcol4F35);
          real r530F#1 = RMul(op1_e3_l_6995306,r530D);
          real r5310#1 = RMul(r530F,r530E);
          real r5311#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7005309);
          real r5312#1 = TensorIndex<tensor[3],[1]>(mcol4F35);
          real r5313#1 = RMul(op1_e3_l_6995306,r5311);
          real r5314#1 = RMul(r5313,r5312);
          real r5315#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7005309);
          real r5316#1 = TensorIndex<tensor[3],[2]>(mcol4F35);
          real r5317#1 = RMul(op1_e3_l_6995306,r5315);
          real r5318#1 = RMul(r5317,r5316);
          tensor[3] op1_e3_l_701530C#1 = <tensor[3]>[r5310,r5314,r5318];
          real r5329#1 = RMul(phKs2435,scomp4946);
          real r532A#3 = RMul(r5329,_t3467);
          tensor[3] op1_e3_l_7025327#1 = <tensor[3]>[r532A,r532A,r532A];
          real op1_e3_l_7035338#2 = RSub(_t3467,_t4571);
          tensor[3] op1_e3_l_704533B#3 = VAdd<3>(op1_e3_l_701530C,op1_e3_l_7025327);
          real r533F#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_704533B);
          real r5340#3 = RMul(transp243B,op1_e3_l_7035338);
          real r5341#1 = RMul(r5340,r533F);
          real r5342#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_704533B);
          real r5343#1 = RMul(r5340,r5342);
          real r5344#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_704533B);
          real r5345#1 = RMul(r5340,r5344);
          tensor[3] op1_e3_l_705533E#1 = <tensor[3]>[r5341,r5343,r5345];
          tensor[3] rgb534F#2 = VAdd<3>(rgb2439,op1_e3_l_705533E);
          real op1_e3_l_55352#1 = RSub(_t3467,op1_e3_l_7035338);
          real transp5355#2 = RMul(transp243B,op1_e3_l_55352);
          bool _t5358#1 = LT<real>(transp5355,transp0240F);
          if _t5358 then goto SAVE535B else goto JOIN5360
        SAVE535B:  preds = [COND535A]
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = _t3465;
          stabilize
          goto JOIN5360
        JOIN5360:  preds = [*STABILIZE535E,COND535A]
          real transp535F#1 = phi(transp5355)
          self.rayN = rayN243D;
          self.rgb = rgb534F;
          self.transp = transp535F;
          active
        ASSIGN5EC4:  preds = [COND4EDE]
          int ix5367#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,n4ED8);
          int offp5369#3 = IMul(ilit3477,ix5367);
          real v0_536A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5369);
          int addRes536C#1 = IAdd(n4ED8,ilit3471);
          int ix536D#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(cmap23FF,addRes536C);
          int offp536E#3 = IMul(ilit3477,ix536D);
          real v1_536F#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp536E);
          int offp5371#1 = IAdd(offp5369,ilit3471);
          real v0_5372#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5371);
          int offp5373#1 = IAdd(offp536E,ilit3471);
          real v1_5374#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5373);
          int offp5377#1 = IAdd(offp5369,ilit3474);
          real v0_5378#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5377);
          int offp5379#1 = IAdd(offp536E,ilit3474);
          real v1_537A#1 = LoadVoxel<IMAGE1D<double[3]>>(cmap23FF,offp5379);
          tensor[3,2] voxels537C#1 = <tensor[3,2]>[v0_536A,v1_536F,v0_5372,v1_5374,v0_5378,v1_537A];
          goto JOIN4F0F
        ASSIGN5396:  preds = [COND3450]
          bool _t3454#1 = false;
          goto JOIN3455
        ASSIGN5397:  preds = [COND2CEB]
          bool _t3457#1 = false;
          goto JOIN3458
        ASSIGN5398:  preds = [COND2CE6]
          bool _t345A#1 = false;
          goto JOIN345B
        ASSIGN5399:  preds = [COND2452]
          bool _t345D#1 = false;
          goto JOIN345E
    end update
    method stabilize
        ENTRY539A:  preds = []
          tensor[4] rgba539B#1 = self.rgba;
          tensor[3] rgb539D#3 = self.rgb;
          real transp539F#2 = self.transp;
          real _t53A1#2 = 0.1e1;
          bool _t53A3#1 = LT<real>(transp539F,_t53A1);
          if _t53A3 then goto ASSIGN53A8 else goto JOIN53BB
        ASSIGN53A8:  preds = [COND53A5]
          real aa53A6#4 = RSub(_t53A1,transp539F);
          real _t53A9#1 = VIndex<3,0>(rgb539D);
          real _t53AB#1 = RDiv(_t53A9,aa53A6);
          real _t53AE#1 = VIndex<3,1>(rgb539D);
          real _t53B0#1 = RDiv(_t53AE,aa53A6);
          real _t53B3#1 = VIndex<3,2>(rgb539D);
          real _t53B5#1 = RDiv(_t53B3,aa53A6);
          tensor[4] rgba53B8#1 = <tensor[4]>[_t53AB,_t53B0,_t53B5,aa53A6];
          goto JOIN53BB
        JOIN53BB:  preds = [ASSIGN53B9,COND53A5]
          tensor[4] rgba53BA#1 = phi(rgba53B8,rgba539B)
          self.rgba = rgba53BA;
          return
    end stabilize
  end ray
## initial strand creation
  GRID(2)
    ENTRY53BE:  preds = []
      int iresU53BF#1 = globals.iresU2121;
      int iresV53C1#1 = globals.iresV2122;
      int _t53C3#2 = 0;
      int _t53C5#2 = 1;
      int _t53C7#1 = ISub(iresV53C1,_t53C5);
      int[] _t53C9#1 = Range(_t53C3,_t53C7);
    FOREACH53CC:  preds = [ASSIGN53CA,NEXT53D5]
      foreach (vi53CB in _t53C9) on exit goto RETURN53D6
      int _t53CD#1 = ISub(iresU53BF,_t53C5);
      int[] _t53CF#1 = Range(_t53C3,_t53CD);
    FOREACH53D2:  preds = [ASSIGN53D0,NEXT53D4]
      foreach (ui53D1 in _t53CF) on exit goto NEXT53D5
      new ray(ui53D1,vi53CB);
      goto FOREACH53D2
    NEXT53D5:  preds = [FOREACH53D2]
      goto FOREACH53CC
    RETURN53D6:  preds = [FOREACH53CC]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) block;
input femData(Space) 0space04D7_intermedateGlobal;
input femData(FemFunc) 0U04D9_intermedateGlobal;
input int cellChoice;
input image(IMAGE1D<double[3]>) cmap;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camNear;
input real camFar;
input real camFOV;
input bool camOrtho;
input int iresU;
input int iresV;
input real rayStep;
input real refStep;
input real transp0;
input real thick;
input real fStrTh;
input real fMaskTh;
input real fBias;
input real maxAlpha;
input bool light;
input tensor[4] phong;
input tensor[3] mcNear;
input tensor[3] mcFar;
input tensor[3] litdir;
input tensor[2] cminmax;
//***** CONST INIT *****
  {
    globals.camEye = PACK(VEC3{4}(0.e0,-0.2e1,0.e0));
    globals.camAt = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    globals.camUp = PACK(VEC3{4}(0.e0,0.e0,0.1e1));
    globals.camNear = -0.4e1;
    globals.camFar = 0.4e1;
    globals.camFOV = 0.1e2;
    globals.camOrtho = false;
    globals.iresU = 100;
    globals.iresV = 100;
    globals.rayStep = 0.1e-3;
    globals.refStep = 0.1e-3;
    globals.transp0 = 0.5e-2;
    globals.thick = 0.1e-1;
    globals.fStrTh = 0.e0;
    globals.fMaskTh = 0.e0;
    globals.fBias = 0.1e0;
    globals.maxAlpha = 0.1e1;
    globals.light = false;
    globals.phong = PACK(VEC4(0.1e0,0.7e0,0.2e0,0.1e3));
    vec3{4} v_4 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    globals.mcNear = PACK(v_4);
    globals.mcFar = PACK(v_4);
    globals.litdir = PACK(VEC3{4}(0.e0,-0.1e1,0.e0));
    globals.cminmax = PACK(VEC2(0.e0,0.e0));
  }
//***** GLOBALS *****
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camDist;
global real camVmax;
global real camUmax;
global real camNearVsp;
global real camFarVsp;
global tensor[3] litwsp;
global int _t;
global femData(Space) _tX;
global femData(FemFunc) _tXX;
//***** FUNCTIONS *****
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_9;
    l__t_9 = <femData(MeshCell)[]>{};
    for i__t_10 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.block),1) {
      l__t_9 = Append<femData(MeshCell),femData(MeshCell)>(l__t_9,LoadFem<femData(MeshCell)>(globals.block,i__t_10));
    }
    femData(FuncCell) l__t_11 = LoadFem<femData(FuncCell)>(LoadFem<femData(FemFunc)>(globals.0U04D9_intermedateGlobal,LoadFem<femData(Space)>(globals.0space04D7_intermedateGlobal,globals.block)),ExtractFemItem<int,CellIndex(MeshCell)>(Subscript<femData(MeshCell)[]>(l__t_9,globals.cellChoice)));
    femData(FemFunc) l__t_12 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_11);
    vec3{4} v_13 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_14 = Sqrt(VDot<3,4>(v_13,v_13));
    real l_op1_e3_l_9_15 = RDiv(0.1e1,l_op1_e3_l_7_14);
    vec3{4} v_16 = VScale<3,4>(l_op1_e3_l_9_15,v_13);
    globals.camN = PACK(v_16);
    real l_r_18 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_19 = RMul(0.e0,l_r_18);
    real l_r_20 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_21 = RMul(0.e0,l_r_20);
    real l_r_22 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_23 = RMul(0.e0,l_r_22);
    real l_r_24 = RAdd(l_r_19,l_r_21);
    real l_r_25 = RAdd(l_r_24,l_r_23);
    real l_vdot_26 = VDot<3,4>(v_13,VEC3{4}(l_r_25,RAdd(l_r_24,RMul(0.1e1,l_r_22)),RAdd(RAdd(l_r_19,RMul(-0.1e1,l_r_20)),l_r_23)));
    real l_vdot_27 = VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_24,RMul(-0.1e1,l_r_22)),l_r_25,RAdd(RAdd(RMul(0.1e1,l_r_18),l_r_21),l_r_23)));
    real l_vdot_28 = VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_19,RMul(0.1e1,l_r_20)),l_r_23),RAdd(RAdd(RMul(-0.1e1,l_r_18),l_r_21),l_r_23),l_r_25));
    vec3{4} v_29 = VEC3{4}(l_vdot_26,l_vdot_27,l_vdot_28);
    real l_op1_e3_l_38_30 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_15,l_op1_e3_l_9_15),VDot<3,4>(v_29,v_29))));
    vec3{4} v_31 = VScale<3,4>(l_op1_e3_l_38_30,VScale<3,4>(l_op1_e3_l_9_15,v_29));
    globals.camU = PACK(v_31);
    real l_r_33 = RMul(0.e0,l_vdot_26);
    real l_r_34 = RMul(0.e0,l_vdot_27);
    real l_r_35 = RMul(0.e0,l_vdot_28);
    real l_r_36 = RAdd(l_r_33,l_r_34);
    real l_r_37 = RAdd(l_r_36,l_r_35);
    vec3{4} v_38 = VScale<3,4>(l_op1_e3_l_9_15,VEC3{4}(VDot<3,4>(v_13,VEC3{4}(l_r_37,RAdd(l_r_36,RMul(0.1e1,l_vdot_28)),RAdd(RAdd(l_r_33,RMul(-0.1e1,l_vdot_27)),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_36,RMul(-0.1e1,l_vdot_28)),l_r_37,RAdd(RAdd(RMul(0.1e1,l_vdot_26),l_r_34),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_33,RMul(0.1e1,l_vdot_27)),l_r_35),RAdd(RAdd(RMul(-0.1e1,l_vdot_26),l_r_34),l_r_35),l_r_37))));
    real l_r_39 = RMul(l_op1_e3_l_9_15,l_op1_e3_l_38_30);
    real l_r_40 = RMul(l_r_39,VIndex<3,4,0>(v_38));
    real l_r_41 = RMul(l_r_39,VIndex<3,4,1>(v_38));
    real l_r_42 = RMul(l_r_39,VIndex<3,4,2>(v_38));
    globals.camV = PACK(VEC3{4}(l_r_40,l_r_41,l_r_42));
    globals.camDist = l_op1_e3_l_7_14;
    real l_op1_e3_l_10_44 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_44,l_op1_e3_l_7_14);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_44),l_op1_e3_l_7_14),IntToReal(globals.iresV));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_7_14);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_7_14);
    real l_r_45 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.litdir));
    real l_r_46 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.litdir));
    real l_r_47 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.litdir));
    globals.litwsp = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.litdir)),LOAD_0(TensorRef<[3]>(globals.litdir))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_31),l_r_45),RMul(l_r_40,l_r_46)),RMul(VIndex<3,4,0>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_31),l_r_45),RMul(l_r_41,l_r_46)),RMul(VIndex<3,4,1>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_31),l_r_45),RMul(l_r_42,l_r_46)),RMul(VIndex<3,4,2>(v_16),l_r_47)))));
    globals._t = ExtractFemItem<int,CellIndex(FuncCell)>(l__t_11);
    globals._tX = ExtractFem<femData(Space),femData(FemFunc)>(l__t_12);
    globals._tXX = l__t_12;
  }
//***** STRAND *****
strand ray (int p_ui_49,int p_vi_50) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] UV;
  tensor[3] rayOrig;
  tensor[3] rayVec;
  real alphaFix;
  tensor[3] eyeDir;
  real phKa;
  real phKd;
  real phKs;
  real phSp;
  varying output tensor[4] rgba;
  output real raw;
  varying tensor[3] rgb;
  varying real transp;
  initialize (globals) {
    vec3{4} v_59;
    vec3{4} v_57;
    real l_op1_e3_l_9_51 = RNeg(globals.camUmax);
    real l_rayU_52 = RAdd(l_op1_e3_l_9_51,RMul(RDiv(RSub(IntToReal(p_ui_49),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_51)));
    real l_op1_e3_l_9_53 = RNeg(globals.camVmax);
    real l_rayV_54 = RAdd(l_op1_e3_l_9_53,RMul(RDiv(RSub(IntToReal(p_vi_50),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_53)));
    vec3{4} v_55 = VAdd<3,4>(VScale<3,4>(l_rayU_52,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_54,LOAD_0(TensorRef<[3]>(globals.camV))));
    vec3{4} v_56 = v_55;
    if (globals.camOrtho) {
      v_57 = v_56;
    } else {
      v_57 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_58 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_57);
    if (globals.camOrtho) {
      v_59 = VEC3{4}(0.e0,0.e0,0.e0);
    } else {
      real l_r_60 = RDiv(0.1e1,globals.camDist);
      v_59 = VEC3{4}(RMul(l_r_60,VIndex<3,4,0>(v_56)),RMul(l_r_60,VIndex<3,4,1>(v_56)),RMul(l_r_60,VIndex<3,4,2>(v_56)));
    }
    vec3{4} v_61 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),v_59);
    real l_op1_e3_l_7_62 = Sqrt(VDot<3,4>(v_61,v_61));
    self.rayU = l_rayU_52;
    self.rayV = l_rayV_54;
    self.rayN = globals.camNearVsp;
    self.UV = PACK(v_56);
    self.rayOrig = PACK(v_58);
    self.rayVec = PACK(v_61);
    self.alphaFix = RDiv(RMul(globals.rayStep,l_op1_e3_l_7_62),globals.refStep);
    self.eyeDir = PACK(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_7_62),v_61)));
    self.phKa = VIndex<4,4,0>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phKd = VIndex<4,4,1>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phKs = VIndex<4,4,2>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.phSp = VIndex<4,4,3>(LOAD_0(TensorRef<[4]>(globals.phong)));
    self.rgba = PACK(VEC4(0.e0,0.e0,0.e0,0.e0));
    self.raw = 0.e0;
    self.rgb = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    self.transp = 0.1e1;
  }
  update (globals) {
    real l_transp_1480;
    vec3{4} v_1412;
    real l_scomp_1307;
    bool l__t_631;
    real l_rayN_69 = RAdd(self.rayN,globals.rayStep);
    if (GT<real>(l_rayN_69,globals.camFarVsp)) {
      self.rayN = l_rayN_69;
      stabilize;
    }
    vec3{4} v_70 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_69,LOAD_0(TensorRef<[3]>(self.rayVec))));
    tensor[3] _arg_71 = PACK(v_70);
    vec3{4} v_72 = v_70;
    if (ExtractFemItemN<[femData(Mesh),tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),"","",[],int>(ExtractFemItem<femData(RefCell),RefCell(Mesh)>(globals.block),_arg_71,0.1e-8)) {
      bool l__t_630;
      int l_mulRes_73 = IMul(globals._t,84);
      int t_74 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_73);
      int t_75 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,1));
      int t_76 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,2));
      int t_77 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,3));
      int t_78 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,4));
      int t_79 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,5));
      int t_80 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,6));
      int t_81 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,7));
      int t_82 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,8));
      int t_83 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,9));
      int t_84 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,10));
      int t_85 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,11));
      int t_86 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,12));
      int t_87 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,13));
      int t_88 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,14));
      int t_89 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,15));
      int t_90 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,16));
      int t_91 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,17));
      int t_92 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,18));
      int t_93 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,19));
      int t_94 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,20));
      int t_95 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,21));
      int t_96 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,22));
      int t_97 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,23));
      int t_98 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,24));
      int t_99 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,25));
      int t_100 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,26));
      int t_101 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,27));
      int t_102 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,28));
      int t_103 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,29));
      int t_104 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,30));
      int t_105 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,31));
      int t_106 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,32));
      int t_107 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,33));
      int t_108 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,34));
      int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,35));
      int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,36));
      int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,37));
      int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,38));
      int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,39));
      int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,40));
      int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,41));
      int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,42));
      int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,43));
      int t_118 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,44));
      int t_119 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,45));
      int t_120 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,46));
      int t_121 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,47));
      int t_122 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,48));
      int t_123 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,49));
      int t_124 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,50));
      int t_125 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,51));
      int t_126 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,52));
      int t_127 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,53));
      int t_128 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,54));
      int t_129 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,55));
      int t_130 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,56));
      int t_131 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,57));
      int t_132 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,58));
      int t_133 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,59));
      int t_134 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,60));
      int t_135 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,61));
      int t_136 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,62));
      int t_137 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,63));
      int t_138 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,64));
      int t_139 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,65));
      int t_140 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,66));
      int t_141 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,67));
      int t_142 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,68));
      int t_143 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,69));
      int t_144 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,70));
      int t_145 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,71));
      int t_146 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,72));
      int t_147 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,73));
      int t_148 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,74));
      int t_149 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,75));
      int t_150 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,76));
      int t_151 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,77));
      int t_152 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,78));
      int t_153 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,79));
      int t_154 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,80));
      int t_155 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,81));
      int t_156 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,82));
      int t_157 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,83));
      real t_158 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_157));
      real t_159 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_156));
      real t_160 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_155));
      real t_161 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_154));
      real t_162 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_153));
      real t_163 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_152));
      real t_164 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_151));
      real t_165 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_150));
      real t_166 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_149));
      real t_167 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_148));
      real t_168 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_147));
      real t_169 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_146));
      real t_170 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_145));
      real t_171 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_144));
      real t_172 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_143));
      real t_173 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_142));
      real t_174 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_141));
      real t_175 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_140));
      real t_176 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_139));
      real t_177 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_138));
      real t_178 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_137));
      real t_179 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_136));
      real t_180 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_135));
      real t_181 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_134));
      real t_182 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_133));
      real t_183 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_132));
      real t_184 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_131));
      real t_185 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_130));
      real t_186 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_129));
      real t_187 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_128));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_127));
      real t_189 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_126));
      real t_190 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_125));
      real t_191 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_124));
      real t_192 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_123));
      real t_193 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_122));
      real t_194 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_121));
      real t_195 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_120));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_119));
      real t_197 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_118));
      real t_198 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_117));
      real t_199 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_116));
      real t_200 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_115));
      real t_201 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_114));
      real t_202 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_113));
      real t_203 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_112));
      real t_204 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_111));
      real t_205 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_110));
      real t_206 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_109));
      real t_207 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_108));
      real t_208 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_107));
      real t_209 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_106));
      real t_210 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_105));
      real t_211 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_104));
      real t_212 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_103));
      real t_213 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_102));
      real t_214 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_101));
      real t_215 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_100));
      real t_216 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_99));
      real t_217 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_98));
      real t_218 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_97));
      real t_219 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_96));
      real t_220 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_95));
      real t_221 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_94));
      real t_222 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_93));
      real t_223 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_92));
      real t_224 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_91));
      real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_90));
      real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_89));
      real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_88));
      real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_87));
      real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_86));
      real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_85));
      real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_84));
      real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_83));
      real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_82));
      real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_81));
      real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_80));
      real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_79));
      real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_78));
      real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_77));
      real t_239 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_76));
      real t_240 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_75));
      real t_241 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_74));
      vec4 v_242 = VEC4(t_241,t_240,t_239,t_238);
      vec4 v_243 = VEC4(t_237,t_236,t_235,t_234);
      vec4 v_244 = VEC4(t_233,t_232,t_231,t_230);
      vec4 v_245 = VEC4(t_229,t_228,t_227,t_226);
      vec4 v_246 = VEC4(t_225,t_224,t_223,t_222);
      vec4 v_247 = VEC4(t_221,t_220,t_219,t_218);
      vec4 v_248 = VEC4(t_217,t_216,t_215,t_214);
      vec4 v_249 = VEC4(t_213,t_212,t_211,t_210);
      vec4 v_250 = VEC4(t_209,t_208,t_207,t_206);
      vec4 v_251 = VEC4(t_205,t_204,t_203,t_202);
      vec4 v_252 = VEC4(t_201,t_200,t_199,t_198);
      vec4 v_253 = VEC4(t_197,t_196,t_195,t_194);
      vec4 v_254 = VEC4(t_193,t_192,t_191,t_190);
      vec4 v_255 = VEC4(t_189,t_188,t_187,t_186);
      vec4 v_256 = VEC4(t_185,t_184,t_183,t_182);
      vec4 v_257 = VEC4(t_181,t_180,t_179,t_178);
      vec4 v_258 = VEC4(t_177,t_176,t_175,t_174);
      vec4 v_259 = VEC4(t_173,t_172,t_171,t_170);
      vec4 v_260 = VEC4(t_169,t_168,t_167,t_166);
      vec4 v_261 = VEC4(t_165,t_164,t_163,t_162);
      vec4 v_262 = VEC4(t_161,t_160,t_159,t_158);
      real l_varAcc_263 = VIndex<3,4,0>(v_72);
      real l_varAcc_264 = VIndex<3,4,1>(v_72);
      real l_varAcc_265 = VIndex<3,4,2>(v_72);
      real l_prod_266 = RMul(0.1e1,0.1e1);
      real l_prod_267 = RMul(0.1e1,l_prod_266);
      real l_basisEval_268 = RMul(0.2e1,l_prod_267);
      real l_prod_269 = RMul(0.1e1,l_varAcc_265);
      real l_prod_270 = RMul(0.1e1,l_prod_269);
      real l_basisEval_271 = RMul(0.2e1,l_prod_270);
      real l_prod_272 = RMul(l_varAcc_264,0.1e1);
      real l_prod_273 = RMul(0.1e1,l_prod_272);
      real l_basisEval_274 = RMul(0.2e1,l_prod_273);
      real l_prod_275 = RMul(l_varAcc_263,l_prod_266);
      real l_basisEval_276 = RMul(0.6e1,l_prod_275);
      real l_prod2_277 = RMul(l_varAcc_265,l_varAcc_265);
      real l_prod_278 = RMul(0.1e1,l_prod2_277);
      real l_prod_279 = RMul(0.1e1,l_prod_278);
      real l_basisEval_280 = RMul(0.2e1,l_prod_279);
      real l_prod_281 = RMul(l_varAcc_264,l_varAcc_265);
      real l_prod_282 = RMul(0.1e1,l_prod_281);
      real l_basisEval_283 = RMul(0.2e1,l_prod_282);
      real l_prod2_284 = RMul(l_varAcc_264,l_varAcc_264);
      real l_prod_285 = RMul(l_prod2_284,0.1e1);
      real l_prod_286 = RMul(0.1e1,l_prod_285);
      real l_basisEval_287 = RMul(0.2e1,l_prod_286);
      real l_prod_288 = RMul(l_varAcc_263,l_prod_269);
      real l_basisEval_289 = RMul(0.6e1,l_prod_288);
      real l_prod_290 = RMul(l_varAcc_263,l_prod_272);
      real l_basisEval_291 = RMul(0.6e1,l_prod_290);
      real l_prod2_292 = RMul(l_varAcc_263,l_varAcc_263);
      real l_prod_293 = RMul(l_prod2_292,l_prod_266);
      real l_basisEval_294 = RMul(0.12e2,l_prod_293);
      real l_prod3_295 = RMul(l_prod2_277,l_varAcc_265);
      real l_prod_296 = RMul(0.1e1,l_prod3_295);
      real l_prod_297 = RMul(0.1e1,l_prod_296);
      real l_basisEval_298 = RMul(0.2e1,l_prod_297);
      real l_prod_299 = RMul(l_varAcc_264,l_prod2_277);
      real l_prod_300 = RMul(0.1e1,l_prod_299);
      real l_basisEval_301 = RMul(0.2e1,l_prod_300);
      real l_prod_302 = RMul(l_prod2_284,l_varAcc_265);
      real l_prod_303 = RMul(0.1e1,l_prod_302);
      real l_basisEval_304 = RMul(0.2e1,l_prod_303);
      real l_prod3_305 = RMul(l_prod2_284,l_varAcc_264);
      real l_prod_306 = RMul(l_prod3_305,0.1e1);
      real l_prod_307 = RMul(0.1e1,l_prod_306);
      real l_basisEval_308 = RMul(0.2e1,l_prod_307);
      real l_prod_309 = RMul(l_varAcc_263,l_prod_278);
      real l_basisEval_310 = RMul(0.6e1,l_prod_309);
      real l_prod_311 = RMul(l_varAcc_263,l_prod_281);
      real l_basisEval_312 = RMul(0.6e1,l_prod_311);
      real l_prod_313 = RMul(l_varAcc_263,l_prod_285);
      real l_basisEval_314 = RMul(0.6e1,l_prod_313);
      real l_prod_315 = RMul(l_prod2_292,l_prod_269);
      real l_basisEval_316 = RMul(0.12e2,l_prod_315);
      real l_prod_317 = RMul(l_prod2_292,l_prod_272);
      real l_basisEval_318 = RMul(0.12e2,l_prod_317);
      real l_prod3_319 = RMul(l_prod2_292,l_varAcc_263);
      real l_prod_320 = RMul(l_prod3_319,l_prod_266);
      real l_basisEval_321 = RMul(0.20e2,l_prod_320);
      real l_prod4_322 = RMul(l_prod3_295,l_varAcc_265);
      real l_prod_323 = RMul(0.1e1,l_prod4_322);
      real l_prod_324 = RMul(0.1e1,l_prod_323);
      real l_basisEval_325 = RMul(0.2e1,l_prod_324);
      real l_prod_326 = RMul(l_varAcc_264,l_prod3_295);
      real l_prod_327 = RMul(0.1e1,l_prod_326);
      real l_basisEval_328 = RMul(0.2e1,l_prod_327);
      real l_prod_329 = RMul(l_prod2_284,l_prod2_277);
      real l_prod_330 = RMul(0.1e1,l_prod_329);
      real l_prod_331 = RMul(l_prod3_305,l_varAcc_265);
      real l_prod_332 = RMul(0.1e1,l_prod_331);
      real l_basisEval_333 = RMul(0.2e1,l_prod_332);
      real l_prod4_334 = RMul(l_prod3_305,l_varAcc_264);
      real l_prod_335 = RMul(l_prod4_334,0.1e1);
      real l_prod_336 = RMul(0.1e1,l_prod_335);
      real l_basisEval_337 = RMul(0.2e1,l_prod_336);
      real l_prod_338 = RMul(l_varAcc_263,l_prod_296);
      real l_prod_339 = RMul(l_varAcc_263,l_prod_299);
      real l_basisEval_340 = RMul(0.6e1,l_prod_339);
      real l_prod_341 = RMul(l_varAcc_263,l_prod_302);
      real l_basisEval_342 = RMul(0.6e1,l_prod_341);
      real l_prod_343 = RMul(l_varAcc_263,l_prod_306);
      real l_prod_344 = RMul(l_prod2_292,l_prod_278);
      real l_basisEval_345 = RMul(0.12e2,l_prod_344);
      real l_prod_346 = RMul(l_prod2_292,l_prod_281);
      real l_prod_347 = RMul(l_prod2_292,l_prod_285);
      real l_basisEval_348 = RMul(0.12e2,l_prod_347);
      real l_prod_349 = RMul(l_prod3_319,l_prod_269);
      real l_prod_350 = RMul(l_prod3_319,l_prod_272);
      real l_prod4_351 = RMul(l_prod3_319,l_varAcc_263);
      real l_prod_352 = RMul(l_prod4_351,l_prod_266);
      real l_basisEval_353 = RMul(0.1e1,l_prod_267);
      real l_basisEval_354 = RMul(0.1e1,l_prod_270);
      real l_basisEval_355 = RMul(0.2e1,l_prod_275);
      real l_basisEval_356 = RMul(0.1e1,l_prod_279);
      real l_basisEval_357 = RMul(0.3e1,l_prod_286);
      real l_basisEval_358 = RMul(0.2e1,l_prod_288);
      real l_basisEval_359 = RMul(0.4e1,l_prod_290);
      real l_basisEval_360 = RMul(0.3e1,l_prod_293);
      real l_basisEval_361 = RMul(0.1e1,l_prod_297);
      real l_basisEval_362 = RMul(0.3e1,l_prod_303);
      real l_basisEval_363 = RMul(0.4e1,l_prod_307);
      real l_basisEval_364 = RMul(0.2e1,l_prod_309);
      real l_basisEval_365 = RMul(0.4e1,l_prod_311);
      real l_basisEval_366 = RMul(0.3e1,l_prod_315);
      real l_basisEval_367 = RMul(0.6e1,l_prod_317);
      real l_basisEval_368 = RMul(0.4e1,l_prod_320);
      real l_basisEval_369 = RMul(0.1e1,l_prod_324);
      real l_basisEval_370 = RMul(0.3e1,l_prod_330);
      real l_basisEval_371 = RMul(0.4e1,l_prod_332);
      real l_basisEval_372 = RMul(0.5e1,l_prod_336);
      real l_basisEval_373 = RMul(0.2e1,l_prod_338);
      real l_basisEval_374 = RMul(0.3e1,l_prod_344);
      real l_basisEval_375 = RMul(0.6e1,l_prod_346);
      real l_basisEval_376 = RMul(0.4e1,l_prod_349);
      real l_basisEval_377 = RMul(0.5e1,l_prod_352);
      real l_basisEval_378 = RMul(0.1e1,l_prod_273);
      real l_basisEval_379 = RMul(0.3e1,l_prod_279);
      real l_basisEval_380 = RMul(0.1e1,l_prod_286);
      real l_basisEval_381 = RMul(0.4e1,l_prod_288);
      real l_basisEval_382 = RMul(0.2e1,l_prod_290);
      real l_basisEval_383 = RMul(0.4e1,l_prod_297);
      real l_basisEval_384 = RMul(0.3e1,l_prod_300);
      real l_basisEval_385 = RMul(0.1e1,l_prod_307);
      real l_basisEval_386 = RMul(0.2e1,l_prod_313);
      real l_basisEval_387 = RMul(0.6e1,l_prod_315);
      real l_basisEval_388 = RMul(0.3e1,l_prod_317);
      real l_basisEval_389 = RMul(0.5e1,l_prod_324);
      real l_basisEval_390 = RMul(0.4e1,l_prod_327);
      real l_basisEval_391 = RMul(0.1e1,l_prod_336);
      real l_basisEval_392 = RMul(0.2e1,l_prod_343);
      real l_basisEval_393 = RMul(0.3e1,l_prod_347);
      real l_basisEval_394 = RMul(0.4e1,l_prod_350);
      real l_basisEval_395 = RMul(0.6e1,l_prod_273);
      real l_basisEval_396 = RMul(0.6e1,l_prod_282);
      real l_basisEval_397 = RMul(0.12e2,l_prod_286);
      real l_basisEval_398 = RMul(0.2e1,l_prod_293);
      real l_basisEval_399 = RMul(0.6e1,l_prod_300);
      real l_basisEval_400 = RMul(0.12e2,l_prod_303);
      real l_basisEval_401 = RMul(0.20e2,l_prod_307);
      real l_basisEval_402 = RMul(0.12e2,l_prod_313);
      real l_basisEval_403 = RMul(0.2e1,l_prod_315);
      real l_basisEval_404 = RMul(0.2e1,l_prod_320);
      real l_basisEval_405 = RMul(0.12e2,l_prod_330);
      real l_basisEval_406 = RMul(0.2e1,l_prod_349);
      real l_basisEval_407 = RMul(0.2e1,l_prod_352);
      real l_basisEval_408 = RMul(0.1e1,l_prod_275);
      real l_basisEval_409 = RMul(0.4e1,l_prod_282);
      real l_basisEval_410 = RMul(0.1e1,l_prod_293);
      real l_basisEval_411 = RMul(0.6e1,l_prod_303);
      real l_basisEval_412 = RMul(0.3e1,l_prod_309);
      real l_basisEval_413 = RMul(0.3e1,l_prod_313);
      real l_basisEval_414 = RMul(0.2e1,l_prod_317);
      real l_basisEval_415 = RMul(0.1e1,l_prod_320);
      real l_basisEval_416 = RMul(0.4e1,l_prod_338);
      real l_basisEval_417 = RMul(0.4e1,l_prod_343);
      real l_basisEval_418 = RMul(0.2e1,l_prod_350);
      real l_basisEval_419 = RMul(0.1e1,l_prod_352);
      real l_basisEval_420 = RMul(0.6e1,l_prod_270);
      real l_basisEval_421 = RMul(0.12e2,l_prod_279);
      real l_basisEval_422 = RMul(0.20e2,l_prod_297);
      real l_basisEval_423 = RMul(0.12e2,l_prod_300);
      real l_basisEval_424 = RMul(0.12e2,l_prod_309);
      real l_vdot_425 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_271,l_basisEval_274,l_basisEval_276)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_280,l_basisEval_283,l_basisEval_287)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_289,l_basisEval_291,l_basisEval_294,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_298,l_basisEval_301)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_304,l_basisEval_308,l_basisEval_310,l_basisEval_312)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_314,l_basisEval_316,l_basisEval_318,l_basisEval_321)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_325,l_basisEval_328,RMul(0.2e1,l_prod_330))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_333,l_basisEval_337,RMul(0.6e1,l_prod_338),l_basisEval_340)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_342,RMul(0.6e1,l_prod_343),l_basisEval_345,RMul(0.12e2,l_prod_346))),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_348,RMul(0.20e2,l_prod_349),RMul(0.20e2,l_prod_350),RMul(0.30e2,l_prod_352))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_426 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_353,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,l_basisEval_354)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_274,0.e0,l_basisEval_355,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_356,l_basisEval_283)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_357,0.e0,l_basisEval_358,l_basisEval_359)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_360,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_361,l_basisEval_301)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_362,l_basisEval_363,0.e0,l_basisEval_364)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_365,l_basisEval_314,0.e0,l_basisEval_366)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_367,0.e0,l_basisEval_368,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_369,l_basisEval_328,l_basisEval_370,l_basisEval_371)),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_372,0.e0,l_basisEval_373,RMul(0.4e1,l_prod_339))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_342,RMul(0.8e1,l_prod_343),0.e0,l_basisEval_374)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_375,RMul(0.9e1,l_prod_347),0.e0,l_basisEval_376)),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.8e1,l_prod_350),0.e0,l_basisEval_377,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_427 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_378)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_355,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_379,l_basisEval_283,l_basisEval_380)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_381,l_basisEval_382,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_360,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_383,l_basisEval_384,l_basisEval_304)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_385,0.e0,l_basisEval_310,l_basisEval_365)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_386,0.e0,l_basisEval_387,l_basisEval_388)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_368,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_390,l_basisEval_370,l_basisEval_333,l_basisEval_391)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.8e1,l_prod_338),l_basisEval_340,RMul(0.4e1,l_prod_341))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_392,0.e0,RMul(0.9e1,l_prod_344),l_basisEval_375)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_393,0.e0,RMul(0.8e1,l_prod_349),l_basisEval_394)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_377,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_428 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_271,l_basisEval_395,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_355,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,l_basisEval_280,l_basisEval_396)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_397,0.e0,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_291,0.e0,0.e0,l_basisEval_398)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,l_basisEval_298,l_basisEval_399,l_basisEval_400)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_401,0.e0,0.e0,l_basisEval_364)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_312,l_basisEval_402,0.e0,0.e0)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_403,l_basisEval_367,0.e0,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_404,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,l_basisEval_325,RMul(0.6e1,l_prod_327))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_405,RMul(0.20e2,l_prod_332),RMul(0.30e2,l_prod_336),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,l_basisEval_373,l_basisEval_340,RMul(0.12e2,l_prod_341))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.20e2,l_prod_343),0.e0,0.e0,RMul(0.2e1,l_prod_344))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_375,l_basisEval_348,0.e0,0.e0)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_406,RMul(0.6e1,l_prod_350),0.e0,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_407,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_429 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_353,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_274,0.e0,0.e0,l_basisEval_408)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_379,l_basisEval_409,l_basisEval_357)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_358,l_basisEval_382)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,0.e0,l_basisEval_410,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_383,l_basisEval_399,l_basisEval_411,l_basisEval_363)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_412,l_basisEval_365)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_413,0.e0,0.e0,l_basisEval_403)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_414,0.e0,0.e0,l_basisEval_415)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_389,RMul(0.8e1,l_prod_327),RMul(0.9e1,l_prod_330))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.8e1,l_prod_332),l_basisEval_372,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_416,l_basisEval_340,l_basisEval_342,l_basisEval_417)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,0.e0,l_basisEval_374,RMul(0.4e1,l_prod_346))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_393,0.e0,0.e0,l_basisEval_406)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_418,0.e0,0.e0,l_basisEval_419)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_430 = RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_420,l_basisEval_274)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_355,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_421,l_basisEval_396,l_basisEval_287,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_289,l_basisEval_382,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_398,0.e0,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,l_basisEval_422)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_423,l_basisEval_411,l_basisEval_308,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_424,l_basisEval_312,l_basisEval_386)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_387,l_basisEval_414)),RAdd(VDot<4,4>(v_254,VEC4(0.e0,0.e0,l_basisEval_404,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.30e2,l_prod_324),RMul(0.20e2,l_prod_327),l_basisEval_405,RMul(0.6e1,l_prod_332))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_337,0.e0,0.e0,RMul(0.20e2,l_prod_338))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.12e2,l_prod_339),l_basisEval_342,l_basisEval_392,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_345,l_basisEval_375,RMul(0.2e1,l_prod_347))),RAdd(VDot<4,4>(v_260,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_349),l_basisEval_418)),RAdd(VDot<4,4>(v_261,VEC4(0.e0,0.e0,l_basisEval_407,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_431 = <tensor[3,3]>[l_vdot_425,l_vdot_426,l_vdot_427,l_vdot_426,l_vdot_428,l_vdot_429,l_vdot_427,l_vdot_429,l_vdot_430];
      real[3] l__t_432 = EigenVals3x3(TensorRef<[3,3]>(t_431));
      real l_basisEval_433 = RMul(0.2e1,l_prod_311);
      real l_basisEval_434 = RMul(0.2e1,l_prod_339);
      real l_basisEval_435 = RMul(0.2e1,l_prod_341);
      real l_prod_436 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_322,l_varAcc_265)));
      real l_basisEval_437 = RMul(0.1e1,l_prod_436);
      real l_prod_438 = RMul(0.1e1,RMul(l_varAcc_264,l_prod4_322));
      real l_prod_439 = RMul(0.1e1,RMul(l_prod2_284,l_prod3_295));
      real l_prod_440 = RMul(0.1e1,RMul(l_prod3_305,l_prod2_277));
      real l_prod_441 = RMul(0.1e1,RMul(l_prod4_334,l_varAcc_265));
      real l_prod_442 = RMul(0.1e1,RMul(RMul(l_prod4_334,l_varAcc_264),0.1e1));
      real l_basisEval_443 = RMul(0.1e1,l_prod_442);
      real l_prod_444 = RMul(l_varAcc_263,l_prod_323);
      real l_prod_445 = RMul(l_varAcc_263,l_prod_326);
      real l_basisEval_446 = RMul(0.2e1,l_prod_445);
      real l_prod_447 = RMul(l_varAcc_263,l_prod_329);
      real l_prod_448 = RMul(l_varAcc_263,l_prod_331);
      real l_basisEval_449 = RMul(0.2e1,l_prod_448);
      real l_prod_450 = RMul(l_varAcc_263,l_prod_335);
      real l_prod_451 = RMul(l_prod2_292,l_prod_296);
      real l_prod_452 = RMul(l_prod2_292,l_prod_299);
      real l_basisEval_453 = RMul(0.3e1,l_prod_452);
      real l_prod_454 = RMul(l_prod2_292,l_prod_302);
      real l_basisEval_455 = RMul(0.3e1,l_prod_454);
      real l_prod_456 = RMul(l_prod2_292,l_prod_306);
      real l_prod_457 = RMul(l_prod3_319,l_prod_278);
      real l_prod_458 = RMul(l_prod3_319,l_prod_281);
      real l_prod_459 = RMul(l_prod3_319,l_prod_285);
      real l_prod_460 = RMul(l_prod4_351,l_prod_269);
      real l_prod_461 = RMul(l_prod4_351,l_prod_272);
      real l_prod_462 = RMul(RMul(l_prod4_351,l_varAcc_263),l_prod_266);
      real l_basisEval_463 = RMul(0.2e1,l_prod_346);
      real l_basisEval_464 = RMul(0.3e1,l_prod_447);
      real l_basisEval_465 = RMul(0.2e1,l_prod_458);
      real l_basisEval_466 = RMul(0.1e1,l_prod_462);
      real l_vdot_467 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_354)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_378,l_basisEval_355,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_356,RMul(0.1e1,l_prod_282))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_380,l_basisEval_358,l_basisEval_382,l_basisEval_360)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_361,RMul(0.1e1,l_prod_300),RMul(0.1e1,l_prod_303))),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_385,l_basisEval_364,l_basisEval_433,l_basisEval_386)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_366,l_basisEval_388,l_basisEval_368,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_369,RMul(0.1e1,l_prod_327),RMul(0.1e1,l_prod_330))),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_332),l_basisEval_391,l_basisEval_373,l_basisEval_434)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_435,l_basisEval_392,l_basisEval_374,RMul(0.3e1,l_prod_346))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_393,l_basisEval_376,l_basisEval_394,l_basisEval_377)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_437)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_438),RMul(0.1e1,l_prod_439),RMul(0.1e1,l_prod_440),RMul(0.1e1,l_prod_441))),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_443,RMul(0.2e1,l_prod_444),l_basisEval_446,RMul(0.2e1,l_prod_447))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_449,RMul(0.2e1,l_prod_450),RMul(0.3e1,l_prod_451),l_basisEval_453)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_455,RMul(0.3e1,l_prod_456),RMul(0.4e1,l_prod_457),RMul(0.4e1,l_prod_458))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.4e1,l_prod_459),RMul(0.5e1,l_prod_460),RMul(0.5e1,l_prod_461),RMul(0.6e1,l_prod_462))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,l_basisEval_353))))))))))))))))))))));
      real l_vdot_468 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_354,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_408,0.e0,0.e0,l_basisEval_356)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_283,l_basisEval_357,0.e0,RMul(0.1e1,l_prod_288))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_382,0.e0,l_basisEval_410,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_361,l_basisEval_301,l_basisEval_362)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_363,0.e0,RMul(0.1e1,l_prod_309),l_basisEval_433)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_413,0.e0,RMul(0.1e1,l_prod_315),l_basisEval_414)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_415,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_369,l_basisEval_328,l_basisEval_370,l_basisEval_371)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_372,0.e0,RMul(0.1e1,l_prod_338),l_basisEval_434)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.3e1,l_prod_341),l_basisEval_417,0.e0,RMul(0.1e1,l_prod_344))),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_463,l_basisEval_393,0.e0,RMul(0.1e1,l_prod_349))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_418,0.e0,l_basisEval_419,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_437,RMul(0.2e1,l_prod_438),RMul(0.3e1,l_prod_439))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.4e1,l_prod_440),RMul(0.5e1,l_prod_441),RMul(0.6e1,l_prod_442),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_444),l_basisEval_446,l_basisEval_464,RMul(0.4e1,l_prod_448))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.5e1,l_prod_450),0.e0,RMul(0.1e1,l_prod_451),RMul(0.2e1,l_prod_452))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_455,RMul(0.4e1,l_prod_456),0.e0,RMul(0.1e1,l_prod_457))),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_465,RMul(0.3e1,l_prod_459),0.e0,RMul(0.1e1,l_prod_460))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.2e1,l_prod_461),0.e0,l_basisEval_466,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,l_basisEval_353,0.e0))))))))))))))))))))));
      real l_vdot_469 = RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_271,l_basisEval_378,0.e0,l_basisEval_408)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_379,l_basisEval_283)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_380,0.e0,l_basisEval_358,RMul(0.1e1,l_prod_290))),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_410,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_383,l_basisEval_384,l_basisEval_304,l_basisEval_385)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_412,l_basisEval_433,RMul(0.1e1,l_prod_313))),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_403,RMul(0.1e1,l_prod_317),0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_415,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_390,l_basisEval_370,l_basisEval_333,l_basisEval_391)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_416,RMul(0.3e1,l_prod_339),l_basisEval_435)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_343),0.e0,l_basisEval_374,l_basisEval_463)),RAdd(VDot<4,4>(v_254,VEC4(RMul(0.1e1,l_prod_347),0.e0,l_basisEval_406,RMul(0.1e1,l_prod_350))),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_419,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.6e1,l_prod_436),RMul(0.5e1,l_prod_438),RMul(0.4e1,l_prod_439),RMul(0.3e1,l_prod_440))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.2e1,l_prod_441),l_basisEval_443,0.e0,RMul(0.5e1,l_prod_444))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.4e1,l_prod_445),l_basisEval_464,l_basisEval_449,RMul(0.1e1,l_prod_450))),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.4e1,l_prod_451),l_basisEval_453,RMul(0.2e1,l_prod_454))),RAdd(VDot<4,4>(v_260,VEC4(RMul(0.1e1,l_prod_456),0.e0,RMul(0.3e1,l_prod_457),l_basisEval_465)),RAdd(VDot<4,4>(v_261,VEC4(RMul(0.1e1,l_prod_459),0.e0,RMul(0.2e1,l_prod_460),RMul(0.1e1,l_prod_461))),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_466,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,l_basisEval_353,0.e0,0.e0))))))))))))))))))))));
      vec3{4} v_470 = VEC3{4}(l_vdot_467,l_vdot_468,l_vdot_469);
      vec4 v_471 = v_242;
      vec4 v_472 = v_243;
      vec4 v_473 = v_244;
      vec4 v_474 = v_245;
      vec4 v_475 = v_246;
      vec4 v_476 = v_247;
      vec4 v_477 = v_248;
      vec4 v_478 = v_249;
      vec4 v_479 = v_250;
      vec4 v_480 = v_251;
      vec4 v_481 = v_252;
      vec4 v_482 = v_253;
      vec4 v_483 = v_254;
      vec4 v_484 = v_255;
      vec4 v_485 = v_256;
      vec4 v_486 = v_257;
      vec4 v_487 = v_258;
      vec4 v_488 = v_259;
      vec4 v_489 = v_260;
      vec4 v_490 = v_261;
      vec4 v_491 = v_262;
      vec3{4} v_492 = VEC3{4}(l_vdot_425,l_vdot_426,l_vdot_427);
      vec3{4} v_493 = VEC3{4}(l_vdot_426,l_vdot_428,l_vdot_429);
      vec3{4} v_494 = v_470;
      vec3{4} v_495 = VEC3{4}(l_vdot_427,l_vdot_429,l_vdot_430);
      if (GT<real>(RDiv(RNeg(Subscript<real[3]>(l__t_432,1)),RAdd(globals.fBias,Sqrt(VDot<3,4>(v_470,v_470)))),globals.fStrTh)) {
        bool l__t_629;
        if (GTE<real>(0.1e1,globals.fMaskTh)) {
          bool l__t_628;
          real l_vdot_496 = VDot<3,4>(v_492,v_494);
          real l_vdot_497 = VDot<3,4>(v_493,v_494);
          real l_vdot_498 = VDot<3,4>(v_495,v_494);
          real l_r_499 = RMul(0.e0,0.1e1);
          real l_r_500 = RMul(0.e0,0.e0);
          real l_r_501 = RAdd(l_r_499,l_r_500);
          real l_r_502 = RAdd(RAdd(l_r_501,l_r_500),l_r_500);
          real l_r_503 = RAdd(l_r_500,l_r_499);
          real l_r_504 = RAdd(RAdd(l_r_503,l_r_500),l_r_500);
          real l_r_505 = RAdd(l_r_500,l_r_500);
          real l_r_506 = RAdd(RAdd(l_r_505,l_r_499),l_r_500);
          real l_r_507 = RMul(0.1e1,0.e0);
          real l_r_508 = RAdd(RAdd(l_r_501,l_r_507),l_r_507);
          real l_r_509 = RAdd(RAdd(l_r_503,l_r_507),l_r_507);
          real l_r_510 = RAdd(RAdd(l_r_505,l_prod_266),l_r_507);
          real l_r_511 = RMul(-0.1e1,0.e0);
          real l_r_512 = RAdd(RAdd(RAdd(l_r_499,l_r_511),l_r_500),l_r_507);
          real l_r_513 = RMul(-0.1e1,0.1e1);
          real l_r_514 = RAdd(RAdd(RAdd(l_r_500,l_r_513),l_r_500),l_r_507);
          real l_r_515 = RAdd(RAdd(RAdd(l_r_500,l_r_511),l_r_499),l_r_507);
          real l_r_516 = RAdd(RAdd(l_r_501,l_r_511),l_r_511);
          real l_r_517 = RAdd(RAdd(l_r_503,l_r_511),l_r_511);
          real l_r_518 = RAdd(RAdd(l_r_505,l_r_513),l_r_511);
          real l_r_519 = RAdd(RAdd(RAdd(l_prod_266,l_r_500),l_r_500),l_r_507);
          real l_r_520 = RAdd(RAdd(RAdd(l_r_507,l_r_499),l_r_500),l_r_507);
          real l_r_521 = RAdd(RAdd(RAdd(l_r_507,l_r_500),l_r_499),l_r_507);
          real l_r_522 = RAdd(RAdd(RAdd(l_r_499,l_r_507),l_r_500),l_r_511);
          real l_r_523 = RAdd(RAdd(RAdd(l_r_500,l_prod_266),l_r_500),l_r_511);
          real l_r_524 = RAdd(RAdd(RAdd(l_r_500,l_r_507),l_r_499),l_r_511);
          real l_r_525 = RAdd(RAdd(RAdd(l_r_513,l_r_500),l_r_500),l_r_511);
          real l_r_526 = RAdd(RAdd(RAdd(l_r_511,l_r_499),l_r_500),l_r_511);
          real l_r_527 = RAdd(RAdd(RAdd(l_r_511,l_r_500),l_r_499),l_r_511);
          real l_basisEval_528 = RMul(0.6e1,l_prod_267);
          real l_basisEval_529 = RMul(0.6e1,l_prod_279);
          real l_basisEval_530 = RMul(0.6e1,l_prod_286);
          real l_basisEval_531 = RMul(0.24e2,l_prod_288);
          real l_basisEval_532 = RMul(0.24e2,l_prod_290);
          real l_basisEval_533 = RMul(0.6e1,l_prod_297);
          real l_basisEval_534 = RMul(0.6e1,l_prod_307);
          real l_basisEval_535 = RMul(0.24e2,l_prod_309);
          real l_basisEval_536 = RMul(0.24e2,l_prod_311);
          real l_basisEval_537 = RMul(0.24e2,l_prod_313);
          real l_basisEval_538 = RMul(0.4e1,l_prod_273);
          real l_basisEval_539 = RMul(0.12e2,l_prod_290);
          real l_basisEval_540 = RMul(0.8e1,l_prod_307);
          real l_basisEval_541 = RMul(0.12e2,l_prod_311);
          real l_basisEval_542 = RMul(0.24e2,l_prod_317);
          real l_basisEval_543 = RMul(0.4e1,l_prod_270);
          real l_basisEval_544 = RMul(0.12e2,l_prod_288);
          real l_basisEval_545 = RMul(0.8e1,l_prod_297);
          real l_basisEval_546 = RMul(0.24e2,l_prod_315);
          real l_basisEval_547 = RMul(0.4e1,l_prod_275);
          real l_basisEval_548 = RMul(0.6e1,l_prod_293);
          real l_basisEval_549 = RMul(0.8e1,l_prod_320);
          real l_basisEval_550 = RMul(0.24e2,l_prod_282);
          real l_basisEval_551 = RMul(0.24e2,l_prod_300);
          real l_basisEval_552 = RMul(0.6e1,l_prod_320);
          real l_basisEval_553 = RMul(0.12e2,l_prod_282);
          real l_basisEval_554 = RMul(0.24e2,l_prod_303);
          real l_vdot_555 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_538)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,l_basisEval_276,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,0.e0,l_basisEval_280)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_409,l_basisEval_530,0.e0,l_basisEval_289)),RAdd(VDot<4,4>(v_484,VEC4(l_basisEval_539,0.e0,l_basisEval_294,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,l_basisEval_298,RMul(0.4e1,l_prod_300))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_411,l_basisEval_540,0.e0,l_basisEval_310)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_541,RMul(0.18e2,l_prod_313),0.e0,l_basisEval_316)),RAdd(VDot<4,4>(v_491,VEC4(l_basisEval_542,0.e0,l_basisEval_321,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_556 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,l_basisEval_543,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(l_basisEval_276,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,l_basisEval_529,l_basisEval_409)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_287,0.e0,l_basisEval_544,l_basisEval_291)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,l_basisEval_294,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,l_basisEval_545,l_basisEval_399,RMul(0.4e1,l_prod_303))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_308,0.e0,RMul(0.18e2,l_prod_309),l_basisEval_541)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_314,0.e0,l_basisEval_546,l_basisEval_318)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,l_basisEval_321,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_557 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_478,VEC4(l_basisEval_395,0.e0,0.e0,l_basisEval_547)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,l_basisEval_280)),RAdd(VDot<4,4>(v_482,VEC4(l_basisEval_396,l_basisEval_397,0.e0,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_381,l_basisEval_539,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(l_basisEval_548,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,l_basisEval_298,l_basisEval_399,l_basisEval_400)),RAdd(VDot<4,4>(v_488,VEC4(l_basisEval_401,0.e0,0.e0,RMul(0.4e1,l_prod_309))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_541,l_basisEval_537,0.e0,0.e0)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_387,RMul(0.18e2,l_prod_317),0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(l_basisEval_549,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_558 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_274)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,l_basisEval_355,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,l_basisEval_379,l_basisEval_409)),RAdd(VDot<4,4>(v_482,VEC4(l_basisEval_357,0.e0,0.e0,l_basisEval_381)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_359,0.e0,0.e0,l_basisEval_360)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(l_basisEval_383,l_basisEval_399,l_basisEval_411,l_basisEval_363)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,l_basisEval_310,RMul(0.8e1,l_prod_311))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_314,0.e0,0.e0,l_basisEval_387)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_367,0.e0,0.e0,l_basisEval_368)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_559 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,l_basisEval_420,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,l_basisEval_547,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,l_basisEval_421,l_basisEval_396,l_basisEval_287)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,l_basisEval_544,l_basisEval_359)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,0.e0,l_basisEval_548,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,l_basisEval_422)),RAdd(VDot<4,4>(v_487,VEC4(l_basisEval_423,l_basisEval_411,l_basisEval_308,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,l_basisEval_535,l_basisEval_541,RMul(0.4e1,l_prod_313))),RAdd(VDot<4,4>(v_489,VEC4(0.e0,0.e0,RMul(0.18e2,l_prod_315),l_basisEval_367)),RAdd(VDot<4,4>(v_490,VEC4(0.e0,0.e0,l_basisEval_549,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_560 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,l_basisEval_543,l_basisEval_395)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,l_basisEval_355)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,l_basisEval_529,l_basisEval_553,l_basisEval_397)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,l_basisEval_381)),RAdd(VDot<4,4>(v_482,VEC4(l_basisEval_291,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_398,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,l_basisEval_545,RMul(0.18e2,l_prod_300))),RAdd(VDot<4,4>(v_486,VEC4(l_basisEval_554,l_basisEval_401,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,l_basisEval_310,l_basisEval_541,l_basisEval_402)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,0.e0,RMul(0.4e1,l_prod_315))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_367,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_404,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_561 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,l_basisEval_268)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,l_basisEval_420,l_basisEval_538,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,l_basisEval_355,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(l_basisEval_421,l_basisEval_553,l_basisEval_530,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,l_basisEval_289,l_basisEval_359)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,0.e0,l_basisEval_398)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,l_basisEval_422,l_basisEval_551,RMul(0.18e2,l_prod_303))),RAdd(VDot<4,4>(v_486,VEC4(l_basisEval_540,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(l_basisEval_424,l_basisEval_541,l_basisEval_314,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,l_basisEval_387,RMul(0.4e1,l_prod_317))),RAdd(VDot<4,4>(v_489,VEC4(0.e0,0.e0,0.e0,l_basisEval_404)),RAdd(VDot<4,4>(v_490,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_r_562 = RAdd(RAdd(RMul(l_vdot_467,l_vdot_555),RMul(l_vdot_468,l_vdot_557)),RMul(l_vdot_469,l_vdot_558));
          real l_r_563 = RAdd(RAdd(RMul(l_vdot_467,l_vdot_556),RMul(l_vdot_468,l_vdot_558)),RMul(l_vdot_469,l_vdot_559));
          real l_r_564 = RAdd(RAdd(RMul(l_vdot_467,l_vdot_558),RMul(l_vdot_468,l_vdot_560)),RMul(l_vdot_469,l_vdot_561));
          real l_r_565 = RMul(l_vdot_426,l_vdot_426);
          real l_r_566 = RMul(l_vdot_427,l_vdot_427);
          real l_r_567 = RMul(l_vdot_429,l_vdot_429);
          vec3{4} v_568 = VAdd<3,4>(VEC3{4}(RAdd(RAdd(RMul(l_vdot_467,RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,l_basisEval_528)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(l_basisEval_420,l_basisEval_395,RMul(0.24e2,l_prod_275),0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,0.e0,l_basisEval_529,l_basisEval_396)),RAdd(VDot<4,4>(v_484,VEC4(l_basisEval_530,l_basisEval_531,l_basisEval_532,RMul(0.60e2,l_prod_293))),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_489,VEC4(0.e0,0.e0,l_basisEval_533,l_basisEval_399)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_411,l_basisEval_534,l_basisEval_535,l_basisEval_536)),RAdd(VDot<4,4>(v_491,VEC4(l_basisEval_537,RMul(0.60e2,l_prod_315),RMul(0.60e2,l_prod_317),RMul(0.120e3,l_prod_320))),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))),RMul(l_vdot_468,l_vdot_555)),RMul(l_vdot_469,l_vdot_556)),l_r_562,l_r_563),VEC3{4}(RAdd(RAdd(RMul(l_vdot_425,l_vdot_425),l_r_565),l_r_566),RAdd(RAdd(RMul(l_vdot_425,l_vdot_426),RMul(l_vdot_426,l_vdot_428)),RMul(l_vdot_427,l_vdot_429)),RAdd(RAdd(RMul(l_vdot_425,l_vdot_427),RMul(l_vdot_426,l_vdot_429)),RMul(l_vdot_427,l_vdot_430))));
          vec3{4} v_569 = VAdd<3,4>(VEC3{4}(l_r_562,RAdd(RAdd(RMul(l_vdot_467,l_vdot_557),RMul(l_vdot_468,RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,l_basisEval_528,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,l_basisEval_420)),RAdd(VDot<4,4>(v_477,VEC4(RMul(0.24e2,l_prod_273),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(l_basisEval_276,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,l_basisEval_529,l_basisEval_550)),RAdd(VDot<4,4>(v_481,VEC4(RMul(0.60e2,l_prod_286),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(l_basisEval_289,l_basisEval_532,0.e0,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,l_basisEval_548,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,l_basisEval_533)),RAdd(VDot<4,4>(v_486,VEC4(l_basisEval_551,RMul(0.60e2,l_prod_303),RMul(0.120e3,l_prod_307),0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,0.e0,l_basisEval_310,l_basisEval_536)),RAdd(VDot<4,4>(v_488,VEC4(RMul(0.60e2,l_prod_313),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_387,l_basisEval_542,0.e0,0.e0)),RAdd(VDot<4,4>(v_490,VEC4(0.e0,l_basisEval_552,0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))))),RMul(l_vdot_469,l_vdot_560)),l_r_564),VEC3{4}(RAdd(RAdd(RMul(l_vdot_426,l_vdot_425),RMul(l_vdot_428,l_vdot_426)),RMul(l_vdot_429,l_vdot_427)),RAdd(RAdd(l_r_565,RMul(l_vdot_428,l_vdot_428)),l_r_567),RAdd(RAdd(RMul(l_vdot_426,l_vdot_427),RMul(l_vdot_428,l_vdot_429)),RMul(l_vdot_429,l_vdot_430))));
          vec3{4} v_570 = VAdd<3,4>(VEC3{4}(l_r_563,l_r_564,RAdd(RAdd(RMul(l_vdot_467,l_vdot_559),RMul(l_vdot_468,l_vdot_561)),RMul(l_vdot_469,RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,l_basisEval_528,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(RMul(0.24e2,l_prod_270),l_basisEval_395,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,l_basisEval_276,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,RMul(0.60e2,l_prod_279))),RAdd(VDot<4,4>(v_480,VEC4(l_basisEval_550,l_basisEval_530,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,l_basisEval_531,l_basisEval_291,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,l_basisEval_548,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(RMul(0.120e3,l_prod_297),RMul(0.60e2,l_prod_300),l_basisEval_554,l_basisEval_534)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,RMul(0.60e2,l_prod_309))),RAdd(VDot<4,4>(v_487,VEC4(l_basisEval_536,l_basisEval_314,0.e0,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,l_basisEval_546,l_basisEval_367,0.e0)),RAdd(VDot<4,4>(v_489,VEC4(0.e0,0.e0,l_basisEval_552,0.e0)),RAdd(VDot<4,4>(v_490,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))))),VEC3{4}(RAdd(RAdd(RMul(l_vdot_427,l_vdot_425),RMul(l_vdot_429,l_vdot_426)),RMul(l_vdot_430,l_vdot_427)),RAdd(RAdd(RMul(l_vdot_427,l_vdot_426),RMul(l_vdot_429,l_vdot_428)),RMul(l_vdot_430,l_vdot_429)),RAdd(RAdd(l_r_566,l_r_567),RMul(l_vdot_430,l_vdot_430))));
          real l_r_571 = RMul(l_vdot_496,l_vdot_426);
          real l_r_572 = RMul(l_vdot_496,l_vdot_427);
          real l_r_573 = RMul(l_vdot_496,l_vdot_429);
          real l_r_574 = RMul(l_vdot_497,l_vdot_426);
          real l_r_575 = RMul(l_vdot_497,l_vdot_427);
          real l_r_576 = RMul(l_vdot_497,l_vdot_429);
          real l_r_577 = RMul(l_vdot_498,l_vdot_426);
          real l_r_578 = RMul(l_vdot_498,l_vdot_427);
          real l_r_579 = RMul(l_vdot_498,l_vdot_429);
          real l_r_580 = VIndex<3,4,0>(v_568);
          real l_r_581 = VIndex<3,4,1>(v_568);
          real l_r_582 = VIndex<3,4,2>(v_568);
          real l_r_583 = VIndex<3,4,0>(v_569);
          real l_r_584 = VIndex<3,4,1>(v_569);
          real l_r_585 = VIndex<3,4,2>(v_569);
          real l_r_586 = VIndex<3,4,0>(v_570);
          real l_r_587 = VIndex<3,4,1>(v_570);
          real l_r_588 = VIndex<3,4,2>(v_570);
          vec3{4} v_589 = VAdd<3,4>(VEC3{4}(RMul(l_vdot_496,l_vdot_425),l_r_571,l_r_572),VEC3{4}(RMul(l_vdot_467,l_r_580),RMul(l_vdot_467,l_r_581),RMul(l_vdot_467,l_r_582)));
          vec3{4} v_590 = VAdd<3,4>(VEC3{4}(l_r_571,RMul(l_vdot_496,l_vdot_428),l_r_573),VEC3{4}(RMul(l_vdot_468,l_r_580),RMul(l_vdot_468,l_r_581),RMul(l_vdot_468,l_r_582)));
          vec3{4} v_591 = VAdd<3,4>(VEC3{4}(l_r_572,l_r_573,RMul(l_vdot_496,l_vdot_430)),VEC3{4}(RMul(l_vdot_469,l_r_580),RMul(l_vdot_469,l_r_581),RMul(l_vdot_469,l_r_582)));
          vec3{4} v_592 = VAdd<3,4>(VEC3{4}(RMul(l_vdot_497,l_vdot_425),l_r_574,l_r_575),VEC3{4}(RMul(l_vdot_467,l_r_583),RMul(l_vdot_467,l_r_584),RMul(l_vdot_467,l_r_585)));
          vec3{4} v_593 = VAdd<3,4>(VEC3{4}(l_r_574,RMul(l_vdot_497,l_vdot_428),l_r_576),VEC3{4}(RMul(l_vdot_468,l_r_583),RMul(l_vdot_468,l_r_584),RMul(l_vdot_468,l_r_585)));
          vec3{4} v_594 = VAdd<3,4>(VEC3{4}(l_r_575,l_r_576,RMul(l_vdot_497,l_vdot_430)),VEC3{4}(RMul(l_vdot_469,l_r_583),RMul(l_vdot_469,l_r_584),RMul(l_vdot_469,l_r_585)));
          vec3{4} v_595 = VAdd<3,4>(VEC3{4}(RMul(l_vdot_498,l_vdot_425),l_r_577,l_r_578),VEC3{4}(RMul(l_vdot_467,l_r_586),RMul(l_vdot_467,l_r_587),RMul(l_vdot_467,l_r_588)));
          vec3{4} v_596 = VAdd<3,4>(VEC3{4}(l_r_577,RMul(l_vdot_498,l_vdot_428),l_r_579),VEC3{4}(RMul(l_vdot_468,l_r_586),RMul(l_vdot_468,l_r_587),RMul(l_vdot_468,l_r_588)));
          vec3{4} v_597 = VAdd<3,4>(VEC3{4}(l_r_578,l_r_579,RMul(l_vdot_498,l_vdot_430)),VEC3{4}(RMul(l_vdot_469,l_r_586),RMul(l_vdot_469,l_r_587),RMul(l_vdot_469,l_r_588)));
          vec3{4} v_598 = VEC3{4}(RAdd(RAdd(RMul(l_vdot_467,RAdd(RAdd(RMul(l_vdot_496,l_r_502),RMul(l_vdot_497,l_r_508)),RMul(l_vdot_498,l_r_512))),RMul(l_vdot_468,RAdd(RAdd(RMul(l_vdot_496,l_r_516),RMul(l_vdot_497,l_r_502)),RMul(l_vdot_498,l_r_519)))),RMul(l_vdot_469,RAdd(RAdd(RMul(l_vdot_496,l_r_522),RMul(l_vdot_497,l_r_525)),RMul(l_vdot_498,l_r_502)))),RAdd(RAdd(RMul(l_vdot_467,RAdd(RAdd(RMul(l_vdot_496,l_r_504),RMul(l_vdot_497,l_r_509)),RMul(l_vdot_498,l_r_514))),RMul(l_vdot_468,RAdd(RAdd(RMul(l_vdot_496,l_r_517),RMul(l_vdot_497,l_r_504)),RMul(l_vdot_498,l_r_520)))),RMul(l_vdot_469,RAdd(RAdd(RMul(l_vdot_496,l_r_523),RMul(l_vdot_497,l_r_526)),RMul(l_vdot_498,l_r_504)))),RAdd(RAdd(RMul(l_vdot_467,RAdd(RAdd(RMul(l_vdot_496,l_r_506),RMul(l_vdot_497,l_r_510)),RMul(l_vdot_498,l_r_515))),RMul(l_vdot_468,RAdd(RAdd(RMul(l_vdot_496,l_r_518),RMul(l_vdot_497,l_r_506)),RMul(l_vdot_498,l_r_521)))),RMul(l_vdot_469,RAdd(RAdd(RMul(l_vdot_496,l_r_524),RMul(l_vdot_497,l_r_527)),RMul(l_vdot_498,l_r_506)))));
          real l_r_599 = VIndex<3,4,0>(v_589);
          real l_r_600 = VIndex<3,4,0>(v_592);
          real l_r_601 = VIndex<3,4,0>(v_595);
          real l_r_602 = VIndex<3,4,0>(v_590);
          real l_r_603 = VIndex<3,4,0>(v_593);
          real l_r_604 = VIndex<3,4,0>(v_596);
          real l_r_605 = VIndex<3,4,0>(v_591);
          real l_r_606 = VIndex<3,4,0>(v_594);
          real l_r_607 = VIndex<3,4,0>(v_597);
          real l_r_608 = VIndex<3,4,1>(v_589);
          real l_r_609 = VIndex<3,4,1>(v_592);
          real l_r_610 = VIndex<3,4,1>(v_595);
          real l_r_611 = VIndex<3,4,1>(v_590);
          real l_r_612 = VIndex<3,4,1>(v_593);
          real l_r_613 = VIndex<3,4,1>(v_596);
          real l_r_614 = VIndex<3,4,1>(v_591);
          real l_r_615 = VIndex<3,4,1>(v_594);
          real l_r_616 = VIndex<3,4,1>(v_597);
          real l_r_617 = VIndex<3,4,2>(v_589);
          real l_r_618 = VIndex<3,4,2>(v_592);
          real l_r_619 = VIndex<3,4,2>(v_595);
          real l_r_620 = VIndex<3,4,2>(v_590);
          real l_r_621 = VIndex<3,4,2>(v_593);
          real l_r_622 = VIndex<3,4,2>(v_596);
          real l_r_623 = VIndex<3,4,2>(v_591);
          real l_r_624 = VIndex<3,4,2>(v_594);
          real l_r_625 = VIndex<3,4,2>(v_597);
          vec3{4} v_626 = VEC3{4}(VDot<3,4>(v_598,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_599,l_r_502),RMul(l_r_600,l_r_508)),RMul(l_r_601,l_r_512)),RMul(l_r_602,l_r_516)),RMul(l_r_603,l_r_502)),RMul(l_r_604,l_r_519)),RMul(l_r_605,l_r_522)),RMul(l_r_606,l_r_525)),RMul(l_r_607,l_r_502)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_599,l_r_504),RMul(l_r_600,l_r_509)),RMul(l_r_601,l_r_514)),RMul(l_r_602,l_r_517)),RMul(l_r_603,l_r_504)),RMul(l_r_604,l_r_520)),RMul(l_r_605,l_r_523)),RMul(l_r_606,l_r_526)),RMul(l_r_607,l_r_504)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_599,l_r_506),RMul(l_r_600,l_r_510)),RMul(l_r_601,l_r_515)),RMul(l_r_602,l_r_518)),RMul(l_r_603,l_r_506)),RMul(l_r_604,l_r_521)),RMul(l_r_605,l_r_524)),RMul(l_r_606,l_r_527)),RMul(l_r_607,l_r_506)))),VDot<3,4>(v_598,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_608,l_r_502),RMul(l_r_609,l_r_508)),RMul(l_r_610,l_r_512)),RMul(l_r_611,l_r_516)),RMul(l_r_612,l_r_502)),RMul(l_r_613,l_r_519)),RMul(l_r_614,l_r_522)),RMul(l_r_615,l_r_525)),RMul(l_r_616,l_r_502)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_608,l_r_504),RMul(l_r_609,l_r_509)),RMul(l_r_610,l_r_514)),RMul(l_r_611,l_r_517)),RMul(l_r_612,l_r_504)),RMul(l_r_613,l_r_520)),RMul(l_r_614,l_r_523)),RMul(l_r_615,l_r_526)),RMul(l_r_616,l_r_504)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_608,l_r_506),RMul(l_r_609,l_r_510)),RMul(l_r_610,l_r_515)),RMul(l_r_611,l_r_518)),RMul(l_r_612,l_r_506)),RMul(l_r_613,l_r_521)),RMul(l_r_614,l_r_524)),RMul(l_r_615,l_r_527)),RMul(l_r_616,l_r_506)))),VDot<3,4>(v_598,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_617,l_r_502),RMul(l_r_618,l_r_508)),RMul(l_r_619,l_r_512)),RMul(l_r_620,l_r_516)),RMul(l_r_621,l_r_502)),RMul(l_r_622,l_r_519)),RMul(l_r_623,l_r_522)),RMul(l_r_624,l_r_525)),RMul(l_r_625,l_r_502)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_617,l_r_504),RMul(l_r_618,l_r_509)),RMul(l_r_619,l_r_514)),RMul(l_r_620,l_r_517)),RMul(l_r_621,l_r_504)),RMul(l_r_622,l_r_520)),RMul(l_r_623,l_r_523)),RMul(l_r_624,l_r_526)),RMul(l_r_625,l_r_504)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_617,l_r_506),RMul(l_r_618,l_r_510)),RMul(l_r_619,l_r_515)),RMul(l_r_620,l_r_518)),RMul(l_r_621,l_r_506)),RMul(l_r_622,l_r_521)),RMul(l_r_623,l_r_524)),RMul(l_r_624,l_r_527)),RMul(l_r_625,l_r_506)))));
          vec3{4} v_627 = VAdd<3,4>(v_626,v_626);
          if (GT<real>(Sqrt(VDot<3,4>(v_627,v_627)),0.1e-7)) {
            l__t_628 = true;
          } else {
            l__t_628 = false;
          }
          l__t_629 = l__t_628;
        } else {
          l__t_629 = false;
        }
        l__t_630 = l__t_629;
      } else {
        l__t_630 = false;
      }
      l__t_631 = l__t_630;
    } else {
      l__t_631 = false;
    }
    if (BNot(l__t_631)) {
      self.rayN = l_rayN_69;
      active;
    }
    int l_mulRes_632 = IMul(globals._t,84);
    int t_633 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_632);
    int t_634 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,1));
    int t_635 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,2));
    int t_636 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,3));
    int t_637 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,4));
    int t_638 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,5));
    int t_639 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,6));
    int t_640 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,7));
    int t_641 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,8));
    int t_642 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,9));
    int t_643 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,10));
    int t_644 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,11));
    int t_645 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,12));
    int t_646 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,13));
    int t_647 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,14));
    int t_648 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,15));
    int t_649 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,16));
    int t_650 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,17));
    int t_651 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,18));
    int t_652 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,19));
    int t_653 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,20));
    int t_654 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,21));
    int t_655 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,22));
    int t_656 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,23));
    int t_657 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,24));
    int t_658 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,25));
    int t_659 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,26));
    int t_660 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,27));
    int t_661 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,28));
    int t_662 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,29));
    int t_663 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,30));
    int t_664 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,31));
    int t_665 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,32));
    int t_666 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,33));
    int t_667 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,34));
    int t_668 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,35));
    int t_669 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,36));
    int t_670 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,37));
    int t_671 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,38));
    int t_672 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,39));
    int t_673 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,40));
    int t_674 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,41));
    int t_675 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,42));
    int t_676 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,43));
    int t_677 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,44));
    int t_678 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,45));
    int t_679 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,46));
    int t_680 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,47));
    int t_681 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,48));
    int t_682 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,49));
    int t_683 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,50));
    int t_684 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,51));
    int t_685 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,52));
    int t_686 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,53));
    int t_687 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,54));
    int t_688 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,55));
    int t_689 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,56));
    int t_690 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,57));
    int t_691 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,58));
    int t_692 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,59));
    int t_693 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,60));
    int t_694 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,61));
    int t_695 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,62));
    int t_696 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,63));
    int t_697 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,64));
    int t_698 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,65));
    int t_699 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,66));
    int t_700 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,67));
    int t_701 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,68));
    int t_702 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,69));
    int t_703 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,70));
    int t_704 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,71));
    int t_705 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,72));
    int t_706 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,73));
    int t_707 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,74));
    int t_708 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,75));
    int t_709 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,76));
    int t_710 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,77));
    int t_711 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,78));
    int t_712 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,79));
    int t_713 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,80));
    int t_714 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,81));
    int t_715 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,82));
    int t_716 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,83));
    real t_717 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_716));
    real t_718 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_715));
    real t_719 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_714));
    real t_720 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_713));
    real t_721 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_712));
    real t_722 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_711));
    real t_723 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_710));
    real t_724 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_709));
    real t_725 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_708));
    real t_726 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_707));
    real t_727 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_706));
    real t_728 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_705));
    real t_729 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_704));
    real t_730 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_703));
    real t_731 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_702));
    real t_732 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_701));
    real t_733 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_700));
    real t_734 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_699));
    real t_735 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_698));
    real t_736 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_697));
    real t_737 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_696));
    real t_738 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_695));
    real t_739 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_694));
    real t_740 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_693));
    real t_741 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_692));
    real t_742 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_691));
    real t_743 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_690));
    real t_744 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_689));
    real t_745 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_688));
    real t_746 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_687));
    real t_747 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_686));
    real t_748 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_685));
    real t_749 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_684));
    real t_750 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_683));
    real t_751 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_682));
    real t_752 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_681));
    real t_753 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_680));
    real t_754 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_679));
    real t_755 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_678));
    real t_756 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_677));
    real t_757 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_676));
    real t_758 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_675));
    real t_759 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_674));
    real t_760 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_673));
    real t_761 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_672));
    real t_762 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_671));
    real t_763 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_670));
    real t_764 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_669));
    real t_765 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_668));
    real t_766 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_667));
    real t_767 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_666));
    real t_768 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_665));
    real t_769 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_664));
    real t_770 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_663));
    real t_771 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_662));
    real t_772 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_661));
    real t_773 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_660));
    real t_774 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_659));
    real t_775 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_658));
    real t_776 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_657));
    real t_777 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_656));
    real t_778 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_655));
    real t_779 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_654));
    real t_780 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_653));
    real t_781 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_652));
    real t_782 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_651));
    real t_783 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_650));
    real t_784 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_649));
    real t_785 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_648));
    real t_786 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_647));
    real t_787 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_646));
    real t_788 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_645));
    real t_789 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_644));
    real t_790 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_643));
    real t_791 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_642));
    real t_792 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_641));
    real t_793 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_640));
    real t_794 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_639));
    real t_795 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_638));
    real t_796 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_637));
    real t_797 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_636));
    real t_798 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_635));
    real t_799 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_634));
    real t_800 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_633));
    vec4 v_801 = VEC4(t_800,t_799,t_798,t_797);
    vec4 v_802 = VEC4(t_796,t_795,t_794,t_793);
    vec4 v_803 = VEC4(t_792,t_791,t_790,t_789);
    vec4 v_804 = VEC4(t_788,t_787,t_786,t_785);
    vec4 v_805 = VEC4(t_784,t_783,t_782,t_781);
    vec4 v_806 = VEC4(t_780,t_779,t_778,t_777);
    vec4 v_807 = VEC4(t_776,t_775,t_774,t_773);
    vec4 v_808 = VEC4(t_772,t_771,t_770,t_769);
    vec4 v_809 = VEC4(t_768,t_767,t_766,t_765);
    vec4 v_810 = VEC4(t_764,t_763,t_762,t_761);
    vec4 v_811 = VEC4(t_760,t_759,t_758,t_757);
    vec4 v_812 = VEC4(t_756,t_755,t_754,t_753);
    vec4 v_813 = VEC4(t_752,t_751,t_750,t_749);
    vec4 v_814 = VEC4(t_748,t_747,t_746,t_745);
    vec4 v_815 = VEC4(t_744,t_743,t_742,t_741);
    vec4 v_816 = VEC4(t_740,t_739,t_738,t_737);
    vec4 v_817 = VEC4(t_736,t_735,t_734,t_733);
    vec4 v_818 = VEC4(t_732,t_731,t_730,t_729);
    vec4 v_819 = VEC4(t_728,t_727,t_726,t_725);
    vec4 v_820 = VEC4(t_724,t_723,t_722,t_721);
    vec4 v_821 = VEC4(t_720,t_719,t_718,t_717);
    real l_varAcc_822 = VIndex<3,4,0>(v_72);
    real l_varAcc_823 = VIndex<3,4,1>(v_72);
    real l_varAcc_824 = VIndex<3,4,2>(v_72);
    real l_prod_825 = RMul(0.1e1,0.1e1);
    real l_prod_826 = RMul(0.1e1,l_prod_825);
    real l_basisEval_827 = RMul(0.1e1,l_prod_826);
    real l_prod_828 = RMul(0.1e1,l_varAcc_824);
    real l_prod_829 = RMul(0.1e1,l_prod_828);
    real l_basisEval_830 = RMul(0.1e1,l_prod_829);
    real l_prod_831 = RMul(l_varAcc_823,0.1e1);
    real l_prod_832 = RMul(0.1e1,l_prod_831);
    real l_basisEval_833 = RMul(0.1e1,l_prod_832);
    real l_prod_834 = RMul(l_varAcc_822,l_prod_825);
    real l_basisEval_835 = RMul(0.2e1,l_prod_834);
    real l_prod2_836 = RMul(l_varAcc_824,l_varAcc_824);
    real l_prod_837 = RMul(0.1e1,l_prod2_836);
    real l_prod_838 = RMul(0.1e1,l_prod_837);
    real l_basisEval_839 = RMul(0.1e1,l_prod_838);
    real l_prod_840 = RMul(l_varAcc_823,l_varAcc_824);
    real l_prod_841 = RMul(0.1e1,l_prod_840);
    real l_prod2_842 = RMul(l_varAcc_823,l_varAcc_823);
    real l_prod_843 = RMul(l_prod2_842,0.1e1);
    real l_prod_844 = RMul(0.1e1,l_prod_843);
    real l_basisEval_845 = RMul(0.1e1,l_prod_844);
    real l_prod_846 = RMul(l_varAcc_822,l_prod_828);
    real l_basisEval_847 = RMul(0.2e1,l_prod_846);
    real l_prod_848 = RMul(l_varAcc_822,l_prod_831);
    real l_basisEval_849 = RMul(0.2e1,l_prod_848);
    real l_prod2_850 = RMul(l_varAcc_822,l_varAcc_822);
    real l_prod_851 = RMul(l_prod2_850,l_prod_825);
    real l_basisEval_852 = RMul(0.3e1,l_prod_851);
    real l_prod3_853 = RMul(l_prod2_836,l_varAcc_824);
    real l_prod_854 = RMul(0.1e1,l_prod3_853);
    real l_prod_855 = RMul(0.1e1,l_prod_854);
    real l_basisEval_856 = RMul(0.1e1,l_prod_855);
    real l_prod_857 = RMul(l_varAcc_823,l_prod2_836);
    real l_prod_858 = RMul(0.1e1,l_prod_857);
    real l_prod_859 = RMul(l_prod2_842,l_varAcc_824);
    real l_prod_860 = RMul(0.1e1,l_prod_859);
    real l_prod3_861 = RMul(l_prod2_842,l_varAcc_823);
    real l_prod_862 = RMul(l_prod3_861,0.1e1);
    real l_prod_863 = RMul(0.1e1,l_prod_862);
    real l_basisEval_864 = RMul(0.1e1,l_prod_863);
    real l_prod_865 = RMul(l_varAcc_822,l_prod_837);
    real l_basisEval_866 = RMul(0.2e1,l_prod_865);
    real l_prod_867 = RMul(l_varAcc_822,l_prod_840);
    real l_basisEval_868 = RMul(0.2e1,l_prod_867);
    real l_prod_869 = RMul(l_varAcc_822,l_prod_843);
    real l_basisEval_870 = RMul(0.2e1,l_prod_869);
    real l_prod_871 = RMul(l_prod2_850,l_prod_828);
    real l_basisEval_872 = RMul(0.3e1,l_prod_871);
    real l_prod_873 = RMul(l_prod2_850,l_prod_831);
    real l_basisEval_874 = RMul(0.3e1,l_prod_873);
    real l_prod3_875 = RMul(l_prod2_850,l_varAcc_822);
    real l_prod_876 = RMul(l_prod3_875,l_prod_825);
    real l_basisEval_877 = RMul(0.4e1,l_prod_876);
    real l_prod4_878 = RMul(l_prod3_853,l_varAcc_824);
    real l_prod_879 = RMul(0.1e1,l_prod4_878);
    real l_prod_880 = RMul(0.1e1,l_prod_879);
    real l_basisEval_881 = RMul(0.1e1,l_prod_880);
    real l_prod_882 = RMul(l_varAcc_823,l_prod3_853);
    real l_prod_883 = RMul(0.1e1,l_prod_882);
    real l_prod_884 = RMul(l_prod2_842,l_prod2_836);
    real l_prod_885 = RMul(0.1e1,l_prod_884);
    real l_prod_886 = RMul(l_prod3_861,l_varAcc_824);
    real l_prod_887 = RMul(0.1e1,l_prod_886);
    real l_prod4_888 = RMul(l_prod3_861,l_varAcc_823);
    real l_prod_889 = RMul(l_prod4_888,0.1e1);
    real l_prod_890 = RMul(0.1e1,l_prod_889);
    real l_basisEval_891 = RMul(0.1e1,l_prod_890);
    real l_prod_892 = RMul(l_varAcc_822,l_prod_854);
    real l_basisEval_893 = RMul(0.2e1,l_prod_892);
    real l_prod_894 = RMul(l_varAcc_822,l_prod_857);
    real l_basisEval_895 = RMul(0.2e1,l_prod_894);
    real l_prod_896 = RMul(l_varAcc_822,l_prod_859);
    real l_basisEval_897 = RMul(0.2e1,l_prod_896);
    real l_prod_898 = RMul(l_varAcc_822,l_prod_862);
    real l_basisEval_899 = RMul(0.2e1,l_prod_898);
    real l_prod_900 = RMul(l_prod2_850,l_prod_837);
    real l_basisEval_901 = RMul(0.3e1,l_prod_900);
    real l_prod_902 = RMul(l_prod2_850,l_prod_840);
    real l_prod_903 = RMul(l_prod2_850,l_prod_843);
    real l_basisEval_904 = RMul(0.3e1,l_prod_903);
    real l_prod_905 = RMul(l_prod3_875,l_prod_828);
    real l_basisEval_906 = RMul(0.4e1,l_prod_905);
    real l_prod_907 = RMul(l_prod3_875,l_prod_831);
    real l_basisEval_908 = RMul(0.4e1,l_prod_907);
    real l_prod4_909 = RMul(l_prod3_875,l_varAcc_822);
    real l_prod_910 = RMul(l_prod4_909,l_prod_825);
    real l_basisEval_911 = RMul(0.5e1,l_prod_910);
    real l_prod_912 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_878,l_varAcc_824)));
    real l_basisEval_913 = RMul(0.1e1,l_prod_912);
    real l_prod_914 = RMul(0.1e1,RMul(l_varAcc_823,l_prod4_878));
    real l_prod_915 = RMul(0.1e1,RMul(l_prod2_842,l_prod3_853));
    real l_prod_916 = RMul(0.1e1,RMul(l_prod3_861,l_prod2_836));
    real l_prod_917 = RMul(0.1e1,RMul(l_prod4_888,l_varAcc_824));
    real l_prod_918 = RMul(0.1e1,RMul(RMul(l_prod4_888,l_varAcc_823),0.1e1));
    real l_basisEval_919 = RMul(0.1e1,l_prod_918);
    real l_prod_920 = RMul(l_varAcc_822,l_prod_879);
    real l_prod_921 = RMul(l_varAcc_822,l_prod_882);
    real l_basisEval_922 = RMul(0.2e1,l_prod_921);
    real l_prod_923 = RMul(l_varAcc_822,l_prod_884);
    real l_prod_924 = RMul(l_varAcc_822,l_prod_886);
    real l_basisEval_925 = RMul(0.2e1,l_prod_924);
    real l_prod_926 = RMul(l_varAcc_822,l_prod_889);
    real l_prod_927 = RMul(l_prod2_850,l_prod_854);
    real l_prod_928 = RMul(l_prod2_850,l_prod_857);
    real l_basisEval_929 = RMul(0.3e1,l_prod_928);
    real l_prod_930 = RMul(l_prod2_850,l_prod_859);
    real l_basisEval_931 = RMul(0.3e1,l_prod_930);
    real l_prod_932 = RMul(l_prod2_850,l_prod_862);
    real l_prod_933 = RMul(l_prod3_875,l_prod_837);
    real l_prod_934 = RMul(l_prod3_875,l_prod_840);
    real l_prod_935 = RMul(l_prod3_875,l_prod_843);
    real l_prod_936 = RMul(l_prod4_909,l_prod_828);
    real l_prod_937 = RMul(l_prod4_909,l_prod_831);
    real l_prod_938 = RMul(RMul(l_prod4_909,l_varAcc_822),l_prod_825);
    real l_basisEval_939 = RMul(0.2e1,l_prod_832);
    real l_basisEval_940 = RMul(0.1e1,l_prod_834);
    real l_basisEval_941 = RMul(0.2e1,l_prod_841);
    real l_basisEval_942 = RMul(0.3e1,l_prod_844);
    real l_basisEval_943 = RMul(0.1e1,l_prod_851);
    real l_basisEval_944 = RMul(0.2e1,l_prod_858);
    real l_basisEval_945 = RMul(0.3e1,l_prod_860);
    real l_basisEval_946 = RMul(0.4e1,l_prod_863);
    real l_basisEval_947 = RMul(0.3e1,l_prod_869);
    real l_basisEval_948 = RMul(0.2e1,l_prod_873);
    real l_basisEval_949 = RMul(0.1e1,l_prod_876);
    real l_basisEval_950 = RMul(0.2e1,l_prod_883);
    real l_basisEval_951 = RMul(0.3e1,l_prod_885);
    real l_basisEval_952 = RMul(0.4e1,l_prod_887);
    real l_basisEval_953 = RMul(0.5e1,l_prod_890);
    real l_basisEval_954 = RMul(0.4e1,l_prod_898);
    real l_basisEval_955 = RMul(0.2e1,l_prod_902);
    real l_basisEval_956 = RMul(0.2e1,l_prod_907);
    real l_basisEval_957 = RMul(0.1e1,l_prod_910);
    real l_basisEval_958 = RMul(0.3e1,l_prod_923);
    real l_basisEval_959 = RMul(0.2e1,l_prod_934);
    real l_basisEval_960 = RMul(0.1e1,l_prod_938);
    real l_basisEval_961 = RMul(0.2e1,l_prod_829);
    real l_basisEval_962 = RMul(0.3e1,l_prod_838);
    real l_basisEval_963 = RMul(0.4e1,l_prod_855);
    real l_basisEval_964 = RMul(0.3e1,l_prod_858);
    real l_basisEval_965 = RMul(0.2e1,l_prod_860);
    real l_basisEval_966 = RMul(0.3e1,l_prod_865);
    real l_basisEval_967 = RMul(0.2e1,l_prod_871);
    real l_basisEval_968 = RMul(0.5e1,l_prod_880);
    real l_basisEval_969 = RMul(0.4e1,l_prod_883);
    real l_basisEval_970 = RMul(0.2e1,l_prod_887);
    real l_basisEval_971 = RMul(0.4e1,l_prod_892);
    real l_basisEval_972 = RMul(0.2e1,l_prod_905);
    real l_vdot_973 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,l_basisEval_830)),RAdd(VDot<4,4>(v_803,VEC4(l_basisEval_833,l_basisEval_835,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,l_basisEval_839,RMul(0.1e1,l_prod_841))),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_845,l_basisEval_847,l_basisEval_849,l_basisEval_852)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_856,RMul(0.1e1,l_prod_858),RMul(0.1e1,l_prod_860))),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_864,l_basisEval_866,l_basisEval_868,l_basisEval_870)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_872,l_basisEval_874,l_basisEval_877,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_881,RMul(0.1e1,l_prod_883),RMul(0.1e1,l_prod_885))),RAdd(VDot<4,4>(v_812,VEC4(RMul(0.1e1,l_prod_887),l_basisEval_891,l_basisEval_893,l_basisEval_895)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_897,l_basisEval_899,l_basisEval_901,RMul(0.3e1,l_prod_902))),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_904,l_basisEval_906,l_basisEval_908,l_basisEval_911)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,l_basisEval_913)),RAdd(VDot<4,4>(v_817,VEC4(RMul(0.1e1,l_prod_914),RMul(0.1e1,l_prod_915),RMul(0.1e1,l_prod_916),RMul(0.1e1,l_prod_917))),RAdd(VDot<4,4>(v_818,VEC4(l_basisEval_919,RMul(0.2e1,l_prod_920),l_basisEval_922,RMul(0.2e1,l_prod_923))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_925,RMul(0.2e1,l_prod_926),RMul(0.3e1,l_prod_927),l_basisEval_929)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_931,RMul(0.3e1,l_prod_932),RMul(0.4e1,l_prod_933),RMul(0.4e1,l_prod_934))),RAdd(VDot<4,4>(v_821,VEC4(RMul(0.4e1,l_prod_935),RMul(0.5e1,l_prod_936),RMul(0.5e1,l_prod_937),RMul(0.6e1,l_prod_938))),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,l_basisEval_827))))))))))))))))))))));
    real l_vdot_974 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,l_basisEval_830,l_basisEval_939,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(l_basisEval_940,0.e0,0.e0,l_basisEval_839)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_941,l_basisEval_942,0.e0,RMul(0.1e1,l_prod_846))),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_849,0.e0,l_basisEval_943,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,l_basisEval_856,l_basisEval_944,l_basisEval_945)),RAdd(VDot<4,4>(v_807,VEC4(l_basisEval_946,0.e0,RMul(0.1e1,l_prod_865),l_basisEval_868)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_947,0.e0,RMul(0.1e1,l_prod_871),l_basisEval_948)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,l_basisEval_949,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_881,l_basisEval_950,l_basisEval_951,l_basisEval_952)),RAdd(VDot<4,4>(v_811,VEC4(l_basisEval_953,0.e0,RMul(0.1e1,l_prod_892),l_basisEval_895)),RAdd(VDot<4,4>(v_812,VEC4(RMul(0.3e1,l_prod_896),l_basisEval_954,0.e0,RMul(0.1e1,l_prod_900))),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_955,l_basisEval_904,0.e0,RMul(0.1e1,l_prod_905))),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_956,0.e0,l_basisEval_957,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,l_basisEval_913,RMul(0.2e1,l_prod_914),RMul(0.3e1,l_prod_915))),RAdd(VDot<4,4>(v_816,VEC4(RMul(0.4e1,l_prod_916),RMul(0.5e1,l_prod_917),RMul(0.6e1,l_prod_918),0.e0)),RAdd(VDot<4,4>(v_817,VEC4(RMul(0.1e1,l_prod_920),l_basisEval_922,l_basisEval_958,RMul(0.4e1,l_prod_924))),RAdd(VDot<4,4>(v_818,VEC4(RMul(0.5e1,l_prod_926),0.e0,RMul(0.1e1,l_prod_927),RMul(0.2e1,l_prod_928))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_931,RMul(0.4e1,l_prod_932),0.e0,RMul(0.1e1,l_prod_933))),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_959,RMul(0.3e1,l_prod_935),0.e0,RMul(0.1e1,l_prod_936))),RAdd(VDot<4,4>(v_821,VEC4(RMul(0.2e1,l_prod_937),0.e0,l_basisEval_960,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,l_basisEval_827,0.e0))))))))))))))))))))));
    real l_vdot_975 = RAdd(VDot<4,4>(v_802,VEC4(l_basisEval_961,l_basisEval_833,0.e0,l_basisEval_940)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,l_basisEval_962,l_basisEval_941)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_845,0.e0,l_basisEval_847,RMul(0.1e1,l_prod_848))),RAdd(VDot<4,4>(v_805,VEC4(0.e0,l_basisEval_943,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(l_basisEval_963,l_basisEval_964,l_basisEval_965,l_basisEval_864)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_966,l_basisEval_868,RMul(0.1e1,l_prod_869))),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_967,RMul(0.1e1,l_prod_873),0.e0)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_949,0.e0,0.e0,l_basisEval_968)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_969,l_basisEval_951,l_basisEval_970,l_basisEval_891)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_971,RMul(0.3e1,l_prod_894),l_basisEval_897)),RAdd(VDot<4,4>(v_812,VEC4(RMul(0.1e1,l_prod_898),0.e0,l_basisEval_901,l_basisEval_955)),RAdd(VDot<4,4>(v_813,VEC4(RMul(0.1e1,l_prod_903),0.e0,l_basisEval_972,RMul(0.1e1,l_prod_907))),RAdd(VDot<4,4>(v_814,VEC4(0.e0,l_basisEval_957,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(RMul(0.6e1,l_prod_912),RMul(0.5e1,l_prod_914),RMul(0.4e1,l_prod_915),RMul(0.3e1,l_prod_916))),RAdd(VDot<4,4>(v_816,VEC4(RMul(0.2e1,l_prod_917),l_basisEval_919,0.e0,RMul(0.5e1,l_prod_920))),RAdd(VDot<4,4>(v_817,VEC4(RMul(0.4e1,l_prod_921),l_basisEval_958,l_basisEval_925,RMul(0.1e1,l_prod_926))),RAdd(VDot<4,4>(v_818,VEC4(0.e0,RMul(0.4e1,l_prod_927),l_basisEval_929,RMul(0.2e1,l_prod_930))),RAdd(VDot<4,4>(v_819,VEC4(RMul(0.1e1,l_prod_932),0.e0,RMul(0.3e1,l_prod_933),l_basisEval_959)),RAdd(VDot<4,4>(v_820,VEC4(RMul(0.1e1,l_prod_935),0.e0,RMul(0.2e1,l_prod_936),RMul(0.1e1,l_prod_937))),RAdd(VDot<4,4>(v_821,VEC4(0.e0,l_basisEval_960,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,l_basisEval_827,0.e0,0.e0))))))))))))))))))))));
    vec3{4} v_976 = VEC3{4}(l_vdot_973,l_vdot_974,l_vdot_975);
    real l_basisEval_977 = RMul(0.2e1,l_prod_826);
    real l_basisEval_978 = RMul(0.6e1,l_prod_834);
    real l_basisEval_979 = RMul(0.2e1,l_prod_838);
    real l_basisEval_980 = RMul(0.2e1,l_prod_844);
    real l_basisEval_981 = RMul(0.6e1,l_prod_846);
    real l_basisEval_982 = RMul(0.6e1,l_prod_848);
    real l_basisEval_983 = RMul(0.12e2,l_prod_851);
    real l_basisEval_984 = RMul(0.2e1,l_prod_855);
    real l_basisEval_985 = RMul(0.2e1,l_prod_863);
    real l_basisEval_986 = RMul(0.6e1,l_prod_865);
    real l_basisEval_987 = RMul(0.6e1,l_prod_867);
    real l_basisEval_988 = RMul(0.6e1,l_prod_869);
    real l_basisEval_989 = RMul(0.12e2,l_prod_871);
    real l_basisEval_990 = RMul(0.12e2,l_prod_873);
    real l_basisEval_991 = RMul(0.20e2,l_prod_876);
    real l_basisEval_992 = RMul(0.2e1,l_prod_880);
    real l_basisEval_993 = RMul(0.2e1,l_prod_890);
    real l_basisEval_994 = RMul(0.6e1,l_prod_894);
    real l_basisEval_995 = RMul(0.6e1,l_prod_896);
    real l_basisEval_996 = RMul(0.12e2,l_prod_900);
    real l_basisEval_997 = RMul(0.12e2,l_prod_903);
    real l_basisEval_998 = RMul(0.4e1,l_prod_848);
    real l_basisEval_999 = RMul(0.4e1,l_prod_867);
    real l_basisEval_1000 = RMul(0.6e1,l_prod_873);
    real l_basisEval_1001 = RMul(0.6e1,l_prod_902);
    real l_basisEval_1002 = RMul(0.4e1,l_prod_846);
    real l_basisEval_1003 = RMul(0.6e1,l_prod_871);
    real l_basisEval_1004 = RMul(0.6e1,l_prod_832);
    real l_basisEval_1005 = RMul(0.6e1,l_prod_841);
    real l_basisEval_1006 = RMul(0.12e2,l_prod_844);
    real l_basisEval_1007 = RMul(0.2e1,l_prod_851);
    real l_basisEval_1008 = RMul(0.6e1,l_prod_858);
    real l_basisEval_1009 = RMul(0.12e2,l_prod_860);
    real l_basisEval_1010 = RMul(0.20e2,l_prod_863);
    real l_basisEval_1011 = RMul(0.12e2,l_prod_869);
    real l_basisEval_1012 = RMul(0.2e1,l_prod_876);
    real l_basisEval_1013 = RMul(0.12e2,l_prod_885);
    real l_basisEval_1014 = RMul(0.2e1,l_prod_910);
    real l_basisEval_1015 = RMul(0.4e1,l_prod_841);
    real l_basisEval_1016 = RMul(0.6e1,l_prod_860);
    real l_basisEval_1017 = RMul(0.6e1,l_prod_829);
    real l_basisEval_1018 = RMul(0.12e2,l_prod_838);
    real l_basisEval_1019 = RMul(0.20e2,l_prod_855);
    real l_basisEval_1020 = RMul(0.12e2,l_prod_858);
    real l_basisEval_1021 = RMul(0.12e2,l_prod_865);
    real l_vdot_1022 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,l_basisEval_977,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,l_basisEval_961,l_basisEval_939,l_basisEval_978)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_979,l_basisEval_941,l_basisEval_980)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_981,l_basisEval_982,l_basisEval_983,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_984,l_basisEval_944)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_965,l_basisEval_985,l_basisEval_986,l_basisEval_987)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_988,l_basisEval_989,l_basisEval_990,l_basisEval_991)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_992,l_basisEval_950,RMul(0.2e1,l_prod_885))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_970,l_basisEval_993,RMul(0.6e1,l_prod_892),l_basisEval_994)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_995,RMul(0.6e1,l_prod_898),l_basisEval_996,RMul(0.12e2,l_prod_902))),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_997,RMul(0.20e2,l_prod_905),RMul(0.20e2,l_prod_907),RMul(0.30e2,l_prod_910))),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1023 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(l_basisEval_827,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,l_basisEval_830)),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_939,0.e0,l_basisEval_835,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,l_basisEval_839,l_basisEval_941)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_942,0.e0,l_basisEval_847,l_basisEval_998)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,l_basisEval_852,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,l_basisEval_856,l_basisEval_944)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_945,l_basisEval_946,0.e0,l_basisEval_866)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_999,l_basisEval_988,0.e0,l_basisEval_872)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1000,0.e0,l_basisEval_877,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_881,l_basisEval_950,l_basisEval_951,l_basisEval_952)),RAdd(VDot<4,4>(v_818,VEC4(l_basisEval_953,0.e0,l_basisEval_893,RMul(0.4e1,l_prod_894))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_995,RMul(0.8e1,l_prod_898),0.e0,l_basisEval_901)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1001,RMul(0.9e1,l_prod_903),0.e0,l_basisEval_906)),RAdd(VDot<4,4>(v_821,VEC4(RMul(0.8e1,l_prod_907),0.e0,l_basisEval_911,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1024 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,l_basisEval_827)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,l_basisEval_961,l_basisEval_833)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,l_basisEval_835,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_962,l_basisEval_941,l_basisEval_845)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_1002,l_basisEval_849,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_852,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_963,l_basisEval_964,l_basisEval_965)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_864,0.e0,l_basisEval_986,l_basisEval_999)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_870,0.e0,l_basisEval_1003,l_basisEval_874)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,l_basisEval_877,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,l_basisEval_968)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_969,l_basisEval_951,l_basisEval_970,l_basisEval_891)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,RMul(0.8e1,l_prod_892),l_basisEval_994,RMul(0.4e1,l_prod_896))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_899,0.e0,RMul(0.9e1,l_prod_900),l_basisEval_1001)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_904,0.e0,RMul(0.8e1,l_prod_905),l_basisEval_908)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,l_basisEval_911,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1025 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,l_basisEval_977,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_961,l_basisEval_1004,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_835,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,l_basisEval_979,l_basisEval_1005)),RAdd(VDot<4,4>(v_807,VEC4(l_basisEval_1006,0.e0,0.e0,l_basisEval_847)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_982,0.e0,0.e0,l_basisEval_1007)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,l_basisEval_984,l_basisEval_1008,l_basisEval_1009)),RAdd(VDot<4,4>(v_811,VEC4(l_basisEval_1010,0.e0,0.e0,l_basisEval_866)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_987,l_basisEval_1011,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_967,l_basisEval_1000,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1012,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,l_basisEval_992,RMul(0.6e1,l_prod_883))),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_1013,RMul(0.20e2,l_prod_887),RMul(0.30e2,l_prod_890),0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,l_basisEval_893,l_basisEval_994,RMul(0.12e2,l_prod_896))),RAdd(VDot<4,4>(v_818,VEC4(RMul(0.20e2,l_prod_898),0.e0,0.e0,RMul(0.2e1,l_prod_900))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1001,l_basisEval_997,0.e0,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_972,RMul(0.6e1,l_prod_907),0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_1014,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1026 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,l_basisEval_827,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,l_basisEval_961)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_939,0.e0,0.e0,l_basisEval_940)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,l_basisEval_962,l_basisEval_1015,l_basisEval_942)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,l_basisEval_847,l_basisEval_849)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,l_basisEval_943,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_963,l_basisEval_1008,l_basisEval_1016,l_basisEval_946)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,l_basisEval_966,l_basisEval_999)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_947,0.e0,0.e0,l_basisEval_967)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_948,0.e0,0.e0,l_basisEval_949)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,l_basisEval_968,RMul(0.8e1,l_prod_883),RMul(0.9e1,l_prod_885))),RAdd(VDot<4,4>(v_816,VEC4(RMul(0.8e1,l_prod_887),l_basisEval_953,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_971,l_basisEval_994,l_basisEval_995,l_basisEval_954)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,l_basisEval_901,RMul(0.4e1,l_prod_902))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_904,0.e0,0.e0,l_basisEval_972)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_956,0.e0,0.e0,l_basisEval_957)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1027 = RAdd(VDot<4,4>(v_802,VEC4(l_basisEval_977,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,l_basisEval_1017,l_basisEval_939)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,l_basisEval_835,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(l_basisEval_1018,l_basisEval_1005,l_basisEval_980,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_981,l_basisEval_849,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_1007,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,l_basisEval_1019)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_1020,l_basisEval_1016,l_basisEval_985,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_1021,l_basisEval_987,l_basisEval_870)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_1003,l_basisEval_948)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,l_basisEval_1012,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(RMul(0.30e2,l_prod_880),RMul(0.20e2,l_prod_883),l_basisEval_1013,RMul(0.6e1,l_prod_887))),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_993,0.e0,0.e0,RMul(0.20e2,l_prod_892))),RAdd(VDot<4,4>(v_817,VEC4(RMul(0.12e2,l_prod_894),l_basisEval_995,l_basisEval_899,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_996,l_basisEval_1001,RMul(0.2e1,l_prod_903))),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_905),l_basisEval_956)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,0.e0,l_basisEval_1014,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1028 = VDot<3,4>(VEC3{4}(l_vdot_1022,l_vdot_1023,l_vdot_1024),v_976);
    real l_vdot_1029 = VDot<3,4>(VEC3{4}(l_vdot_1023,l_vdot_1025,l_vdot_1026),v_976);
    real l_vdot_1030 = VDot<3,4>(VEC3{4}(l_vdot_1024,l_vdot_1026,l_vdot_1027),v_976);
    real l_r_1031 = RMul(0.e0,0.1e1);
    real l_r_1032 = RMul(0.e0,0.e0);
    real l_r_1033 = RAdd(l_r_1031,l_r_1032);
    real l_r_1034 = RAdd(RAdd(l_r_1033,l_r_1032),l_r_1032);
    real l_r_1035 = RAdd(l_r_1032,l_r_1031);
    real l_r_1036 = RAdd(RAdd(l_r_1035,l_r_1032),l_r_1032);
    real l_r_1037 = RAdd(l_r_1032,l_r_1032);
    real l_r_1038 = RAdd(RAdd(l_r_1037,l_r_1031),l_r_1032);
    real l_r_1039 = RMul(0.1e1,0.e0);
    real l_r_1040 = RAdd(RAdd(l_r_1033,l_r_1039),l_r_1039);
    real l_r_1041 = RAdd(RAdd(l_r_1035,l_r_1039),l_r_1039);
    real l_r_1042 = RAdd(RAdd(l_r_1037,l_prod_825),l_r_1039);
    real l_r_1043 = RMul(-0.1e1,0.e0);
    real l_r_1044 = RAdd(RAdd(RAdd(l_r_1031,l_r_1043),l_r_1032),l_r_1039);
    real l_r_1045 = RMul(-0.1e1,0.1e1);
    real l_r_1046 = RAdd(RAdd(RAdd(l_r_1032,l_r_1045),l_r_1032),l_r_1039);
    real l_r_1047 = RAdd(RAdd(RAdd(l_r_1032,l_r_1043),l_r_1031),l_r_1039);
    real l_r_1048 = RAdd(RAdd(l_r_1033,l_r_1043),l_r_1043);
    real l_r_1049 = RAdd(RAdd(l_r_1035,l_r_1043),l_r_1043);
    real l_r_1050 = RAdd(RAdd(l_r_1037,l_r_1045),l_r_1043);
    real l_r_1051 = RAdd(RAdd(RAdd(l_prod_825,l_r_1032),l_r_1032),l_r_1039);
    real l_r_1052 = RAdd(RAdd(RAdd(l_r_1039,l_r_1031),l_r_1032),l_r_1039);
    real l_r_1053 = RAdd(RAdd(RAdd(l_r_1039,l_r_1032),l_r_1031),l_r_1039);
    real l_r_1054 = RAdd(RAdd(RAdd(l_r_1031,l_r_1039),l_r_1032),l_r_1043);
    real l_r_1055 = RAdd(RAdd(RAdd(l_r_1032,l_prod_825),l_r_1032),l_r_1043);
    real l_r_1056 = RAdd(RAdd(RAdd(l_r_1032,l_r_1039),l_r_1031),l_r_1043);
    real l_r_1057 = RAdd(RAdd(RAdd(l_r_1045,l_r_1032),l_r_1032),l_r_1043);
    real l_r_1058 = RAdd(RAdd(RAdd(l_r_1043,l_r_1031),l_r_1032),l_r_1043);
    real l_r_1059 = RAdd(RAdd(RAdd(l_r_1043,l_r_1032),l_r_1031),l_r_1043);
    real l_r_1060 = RAdd(RAdd(RMul(l_vdot_973,RAdd(RAdd(RMul(l_vdot_1028,l_r_1034),RMul(l_vdot_1029,l_r_1040)),RMul(l_vdot_1030,l_r_1044))),RMul(l_vdot_974,RAdd(RAdd(RMul(l_vdot_1028,l_r_1048),RMul(l_vdot_1029,l_r_1034)),RMul(l_vdot_1030,l_r_1051)))),RMul(l_vdot_975,RAdd(RAdd(RMul(l_vdot_1028,l_r_1054),RMul(l_vdot_1029,l_r_1057)),RMul(l_vdot_1030,l_r_1034))));
    real l_r_1061 = RAdd(RAdd(RMul(l_vdot_973,RAdd(RAdd(RMul(l_vdot_1028,l_r_1036),RMul(l_vdot_1029,l_r_1041)),RMul(l_vdot_1030,l_r_1046))),RMul(l_vdot_974,RAdd(RAdd(RMul(l_vdot_1028,l_r_1049),RMul(l_vdot_1029,l_r_1036)),RMul(l_vdot_1030,l_r_1052)))),RMul(l_vdot_975,RAdd(RAdd(RMul(l_vdot_1028,l_r_1055),RMul(l_vdot_1029,l_r_1058)),RMul(l_vdot_1030,l_r_1036))));
    real l_r_1062 = RAdd(RAdd(RMul(l_vdot_973,RAdd(RAdd(RMul(l_vdot_1028,l_r_1038),RMul(l_vdot_1029,l_r_1042)),RMul(l_vdot_1030,l_r_1047))),RMul(l_vdot_974,RAdd(RAdd(RMul(l_vdot_1028,l_r_1050),RMul(l_vdot_1029,l_r_1038)),RMul(l_vdot_1030,l_r_1053)))),RMul(l_vdot_975,RAdd(RAdd(RMul(l_vdot_1028,l_r_1056),RMul(l_vdot_1029,l_r_1059)),RMul(l_vdot_1030,l_r_1038))));
    vec3{4} v_1063 = VEC3{4}(l_r_1060,l_r_1061,l_r_1062);
    real l_basisEval_1064 = RMul(0.6e1,l_prod_826);
    real l_basisEval_1065 = RMul(0.6e1,l_prod_838);
    real l_basisEval_1066 = RMul(0.6e1,l_prod_844);
    real l_basisEval_1067 = RMul(0.24e2,l_prod_846);
    real l_basisEval_1068 = RMul(0.24e2,l_prod_848);
    real l_basisEval_1069 = RMul(0.6e1,l_prod_855);
    real l_basisEval_1070 = RMul(0.6e1,l_prod_863);
    real l_basisEval_1071 = RMul(0.24e2,l_prod_865);
    real l_basisEval_1072 = RMul(0.24e2,l_prod_867);
    real l_basisEval_1073 = RMul(0.24e2,l_prod_869);
    real l_basisEval_1074 = RMul(0.4e1,l_prod_832);
    real l_basisEval_1075 = RMul(0.12e2,l_prod_848);
    real l_basisEval_1076 = RMul(0.8e1,l_prod_863);
    real l_basisEval_1077 = RMul(0.12e2,l_prod_867);
    real l_basisEval_1078 = RMul(0.24e2,l_prod_873);
    real l_basisEval_1079 = RMul(0.4e1,l_prod_829);
    real l_basisEval_1080 = RMul(0.12e2,l_prod_846);
    real l_basisEval_1081 = RMul(0.8e1,l_prod_855);
    real l_basisEval_1082 = RMul(0.24e2,l_prod_871);
    real l_basisEval_1083 = RMul(0.4e1,l_prod_834);
    real l_basisEval_1084 = RMul(0.6e1,l_prod_851);
    real l_basisEval_1085 = RMul(0.8e1,l_prod_876);
    real l_basisEval_1086 = RMul(0.24e2,l_prod_841);
    real l_basisEval_1087 = RMul(0.24e2,l_prod_858);
    real l_basisEval_1088 = RMul(0.6e1,l_prod_876);
    real l_basisEval_1089 = RMul(0.12e2,l_prod_841);
    real l_basisEval_1090 = RMul(0.24e2,l_prod_860);
    real l_vdot_1091 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,l_basisEval_977,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,l_basisEval_961,l_basisEval_1074)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,l_basisEval_978,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,0.e0,l_basisEval_979)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_1015,l_basisEval_1066,0.e0,l_basisEval_981)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1075,0.e0,l_basisEval_983,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,l_basisEval_984,RMul(0.4e1,l_prod_858))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1016,l_basisEval_1076,0.e0,l_basisEval_986)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1077,RMul(0.18e2,l_prod_869),0.e0,l_basisEval_989)),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_1078,0.e0,l_basisEval_991,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1092 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,l_basisEval_977,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_1079,l_basisEval_939,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_978,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_1065,l_basisEval_1015)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_980,0.e0,l_basisEval_1080,l_basisEval_982)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,l_basisEval_983,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_1081,l_basisEval_1008,RMul(0.4e1,l_prod_860))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_985,0.e0,RMul(0.18e2,l_prod_865),l_basisEval_1077)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_988,0.e0,l_basisEval_1082,l_basisEval_990)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,l_basisEval_991,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1093 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_977,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,l_basisEval_961)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_1004,0.e0,0.e0,l_basisEval_1083)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,l_basisEval_979)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_1005,l_basisEval_1006,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_1002,l_basisEval_1075,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1084,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,l_basisEval_984,l_basisEval_1008,l_basisEval_1009)),RAdd(VDot<4,4>(v_818,VEC4(l_basisEval_1010,0.e0,0.e0,RMul(0.4e1,l_prod_865))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1077,l_basisEval_1073,0.e0,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1003,RMul(0.18e2,l_prod_873),0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_1085,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1094 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,l_basisEval_827)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,l_basisEval_961,l_basisEval_939)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,l_basisEval_835,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,l_basisEval_962,l_basisEval_1015)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_942,0.e0,0.e0,l_basisEval_1002)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_998,0.e0,0.e0,l_basisEval_852)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_963,l_basisEval_1008,l_basisEval_1016,l_basisEval_946)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,l_basisEval_986,RMul(0.8e1,l_prod_867))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_988,0.e0,0.e0,l_basisEval_1003)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1000,0.e0,0.e0,l_basisEval_877)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1095 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,l_basisEval_977,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_1017,l_basisEval_939,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_1083,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_1018,l_basisEval_1005,l_basisEval_980)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_1080,l_basisEval_998)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,l_basisEval_1084,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,l_basisEval_1019)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_1020,l_basisEval_1016,l_basisEval_985,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_1071,l_basisEval_1077,RMul(0.4e1,l_prod_869))),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,RMul(0.18e2,l_prod_871),l_basisEval_1000)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,0.e0,l_basisEval_1085,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1096 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_977,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,l_basisEval_1079,l_basisEval_1004)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,l_basisEval_835)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,l_basisEval_1065,l_basisEval_1089,l_basisEval_1006)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,l_basisEval_1002)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_982,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_1007,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,l_basisEval_1081,RMul(0.18e2,l_prod_858))),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_1090,l_basisEval_1010,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,l_basisEval_986,l_basisEval_1077,l_basisEval_1011)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,0.e0,RMul(0.4e1,l_prod_871))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1000,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1012,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1097 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,l_basisEval_977)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,l_basisEval_1017,l_basisEval_1074,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,l_basisEval_835,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_1018,l_basisEval_1089,l_basisEval_1066,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,l_basisEval_981,l_basisEval_998)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,0.e0,l_basisEval_1007)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,l_basisEval_1019,l_basisEval_1087,RMul(0.18e2,l_prod_860))),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_1076,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_1021,l_basisEval_1077,l_basisEval_988,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,l_basisEval_1003,RMul(0.4e1,l_prod_873))),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,0.e0,l_basisEval_1012)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_r_1098 = RMul(l_vdot_973,RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,l_basisEval_1064)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_1017,l_basisEval_1004,RMul(0.24e2,l_prod_834),0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,l_basisEval_1065,l_basisEval_1005)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1066,l_basisEval_1067,l_basisEval_1068,RMul(0.60e2,l_prod_851))),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,l_basisEval_1069,l_basisEval_1008)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1016,l_basisEval_1070,l_basisEval_1071,l_basisEval_1072)),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_1073,RMul(0.60e2,l_prod_871),RMul(0.60e2,l_prod_873),RMul(0.120e3,l_prod_876))),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))));
    real l_r_1099 = RMul(l_vdot_973,l_vdot_1091);
    real l_r_1100 = RMul(l_vdot_973,l_vdot_1092);
    real l_r_1101 = RMul(l_vdot_973,l_vdot_1093);
    real l_r_1102 = RMul(l_vdot_973,l_vdot_1094);
    real l_r_1103 = RMul(l_vdot_973,l_vdot_1095);
    real l_r_1104 = RMul(l_vdot_974,l_vdot_1091);
    real l_r_1105 = RMul(l_vdot_974,l_vdot_1093);
    real l_r_1106 = RMul(l_vdot_974,l_vdot_1094);
    real l_r_1107 = RMul(l_vdot_974,RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,l_basisEval_1064,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,l_basisEval_1017)),RAdd(VDot<4,4>(v_807,VEC4(RMul(0.24e2,l_prod_832),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_978,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,l_basisEval_1065,l_basisEval_1086)),RAdd(VDot<4,4>(v_811,VEC4(RMul(0.60e2,l_prod_844),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_981,l_basisEval_1068,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,l_basisEval_1084,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,l_basisEval_1069)),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_1087,RMul(0.60e2,l_prod_860),RMul(0.120e3,l_prod_863),0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,l_basisEval_986,l_basisEval_1072)),RAdd(VDot<4,4>(v_818,VEC4(RMul(0.60e2,l_prod_869),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1003,l_basisEval_1078,0.e0,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,l_basisEval_1088,0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))));
    real l_r_1108 = RMul(l_vdot_974,l_vdot_1096);
    real l_r_1109 = RMul(l_vdot_974,l_vdot_1097);
    real l_r_1110 = RMul(l_vdot_975,l_vdot_1092);
    real l_r_1111 = RMul(l_vdot_975,l_vdot_1094);
    real l_r_1112 = RMul(l_vdot_975,l_vdot_1095);
    real l_r_1113 = RMul(l_vdot_975,l_vdot_1096);
    real l_r_1114 = RMul(l_vdot_975,l_vdot_1097);
    real l_r_1115 = RMul(l_vdot_975,RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,l_basisEval_1064,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(RMul(0.24e2,l_prod_829),l_basisEval_1004,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_978,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,RMul(0.60e2,l_prod_838))),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_1086,l_basisEval_1066,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_1067,l_basisEval_982,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_1084,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(RMul(0.120e3,l_prod_855),RMul(0.60e2,l_prod_858),l_basisEval_1090,l_basisEval_1070)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,RMul(0.60e2,l_prod_865))),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_1072,l_basisEval_988,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_1082,l_basisEval_1000,0.e0)),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,l_basisEval_1088,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))));
    real l_r_1116 = RMul(l_vdot_1022,l_vdot_1022);
    real l_r_1117 = RMul(l_vdot_1022,l_vdot_1023);
    real l_r_1118 = RMul(l_vdot_1022,l_vdot_1024);
    real l_r_1119 = RMul(l_vdot_1023,l_vdot_1023);
    real l_r_1120 = RMul(l_vdot_1023,l_vdot_1025);
    real l_r_1121 = RMul(l_vdot_1023,l_vdot_1026);
    real l_r_1122 = RMul(l_vdot_1024,l_vdot_1024);
    real l_r_1123 = RMul(l_vdot_1024,l_vdot_1026);
    real l_r_1124 = RMul(l_vdot_1024,l_vdot_1027);
    real l_r_1125 = RMul(l_vdot_1023,l_vdot_1022);
    real l_r_1126 = RMul(l_vdot_1023,l_vdot_1024);
    real l_r_1127 = RMul(l_vdot_1025,l_vdot_1023);
    real l_r_1128 = RMul(l_vdot_1025,l_vdot_1025);
    real l_r_1129 = RMul(l_vdot_1025,l_vdot_1026);
    real l_r_1130 = RMul(l_vdot_1026,l_vdot_1024);
    real l_r_1131 = RMul(l_vdot_1026,l_vdot_1026);
    real l_r_1132 = RMul(l_vdot_1026,l_vdot_1027);
    real l_r_1133 = RMul(l_vdot_1024,l_vdot_1022);
    real l_r_1134 = RMul(l_vdot_1024,l_vdot_1023);
    real l_r_1135 = RMul(l_vdot_1026,l_vdot_1023);
    real l_r_1136 = RMul(l_vdot_1026,l_vdot_1025);
    real l_r_1137 = RMul(l_vdot_1027,l_vdot_1024);
    real l_r_1138 = RMul(l_vdot_1027,l_vdot_1026);
    real l_r_1139 = RMul(l_vdot_1027,l_vdot_1027);
    real l_r_1140 = RAdd(RAdd(RAdd(l_r_1098,l_r_1116),RAdd(l_r_1104,l_r_1119)),RAdd(l_r_1110,l_r_1122));
    real l_r_1141 = RAdd(RAdd(RAdd(l_r_1099,l_r_1117),RAdd(l_r_1105,l_r_1120)),RAdd(l_r_1111,l_r_1123));
    real l_r_1142 = RAdd(RAdd(RAdd(l_r_1100,l_r_1118),RAdd(l_r_1106,l_r_1121)),RAdd(l_r_1112,l_r_1124));
    real l_r_1143 = RAdd(RAdd(RAdd(l_r_1099,l_r_1125),RAdd(l_r_1105,l_r_1127)),RAdd(l_r_1111,l_r_1130));
    real l_r_1144 = RAdd(RAdd(RAdd(l_r_1101,l_r_1119),RAdd(l_r_1107,l_r_1128)),RAdd(l_r_1113,l_r_1131));
    real l_r_1145 = RAdd(RAdd(RAdd(l_r_1102,l_r_1126),RAdd(l_r_1108,l_r_1129)),RAdd(l_r_1114,l_r_1132));
    real l_r_1146 = RAdd(RAdd(RAdd(l_r_1100,l_r_1133),RAdd(l_r_1106,l_r_1135)),RAdd(l_r_1112,l_r_1137));
    real l_r_1147 = RAdd(RAdd(RAdd(l_r_1102,l_r_1134),RAdd(l_r_1108,l_r_1136)),RAdd(l_r_1114,l_r_1138));
    real l_r_1148 = RAdd(RAdd(RAdd(l_r_1103,l_r_1122),RAdd(l_r_1109,l_r_1131)),RAdd(l_r_1115,l_r_1139));
    real l_r_1149 = RMul(l_vdot_1028,l_vdot_1023);
    real l_r_1150 = RMul(l_vdot_1028,l_vdot_1024);
    vec3{4} v_1151 = VEC3{4}(RMul(l_vdot_1028,l_vdot_1022),l_r_1149,l_r_1150);
    real l_r_1152 = RMul(l_vdot_1028,l_vdot_1026);
    vec3{4} v_1153 = VEC3{4}(l_r_1149,RMul(l_vdot_1028,l_vdot_1025),l_r_1152);
    vec3{4} v_1154 = VEC3{4}(l_r_1150,l_r_1152,RMul(l_vdot_1028,l_vdot_1027));
    real l_r_1155 = RMul(l_vdot_1029,l_vdot_1023);
    real l_r_1156 = RMul(l_vdot_1029,l_vdot_1024);
    vec3{4} v_1157 = VEC3{4}(RMul(l_vdot_1029,l_vdot_1022),l_r_1155,l_r_1156);
    real l_r_1158 = RMul(l_vdot_1029,l_vdot_1026);
    vec3{4} v_1159 = VEC3{4}(l_r_1155,RMul(l_vdot_1029,l_vdot_1025),l_r_1158);
    vec3{4} v_1160 = VEC3{4}(l_r_1156,l_r_1158,RMul(l_vdot_1029,l_vdot_1027));
    real l_r_1161 = RMul(l_vdot_1030,l_vdot_1023);
    real l_r_1162 = RMul(l_vdot_1030,l_vdot_1024);
    vec3{4} v_1163 = VEC3{4}(RMul(l_vdot_1030,l_vdot_1022),l_r_1161,l_r_1162);
    real l_r_1164 = RMul(l_vdot_1030,l_vdot_1026);
    vec3{4} v_1165 = VEC3{4}(l_r_1161,RMul(l_vdot_1030,l_vdot_1025),l_r_1164);
    vec3{4} v_1166 = VEC3{4}(l_r_1162,l_r_1164,RMul(l_vdot_1030,l_vdot_1027));
    vec3{4} v_1167 = VAdd<3,4>(v_1151,VEC3{4}(RMul(l_vdot_973,l_r_1140),RMul(l_vdot_973,l_r_1141),RMul(l_vdot_973,l_r_1142)));
    vec3{4} v_1168 = VAdd<3,4>(v_1153,VEC3{4}(RMul(l_vdot_974,l_r_1140),RMul(l_vdot_974,l_r_1141),RMul(l_vdot_974,l_r_1142)));
    vec3{4} v_1169 = VAdd<3,4>(v_1154,VEC3{4}(RMul(l_vdot_975,l_r_1140),RMul(l_vdot_975,l_r_1141),RMul(l_vdot_975,l_r_1142)));
    vec3{4} v_1170 = VAdd<3,4>(v_1157,VEC3{4}(RMul(l_vdot_973,l_r_1143),RMul(l_vdot_973,l_r_1144),RMul(l_vdot_973,l_r_1145)));
    vec3{4} v_1171 = VAdd<3,4>(v_1159,VEC3{4}(RMul(l_vdot_974,l_r_1143),RMul(l_vdot_974,l_r_1144),RMul(l_vdot_974,l_r_1145)));
    vec3{4} v_1172 = VAdd<3,4>(v_1160,VEC3{4}(RMul(l_vdot_975,l_r_1143),RMul(l_vdot_975,l_r_1144),RMul(l_vdot_975,l_r_1145)));
    vec3{4} v_1173 = VAdd<3,4>(v_1163,VEC3{4}(RMul(l_vdot_973,l_r_1146),RMul(l_vdot_973,l_r_1147),RMul(l_vdot_973,l_r_1148)));
    vec3{4} v_1174 = VAdd<3,4>(v_1165,VEC3{4}(RMul(l_vdot_974,l_r_1146),RMul(l_vdot_974,l_r_1147),RMul(l_vdot_974,l_r_1148)));
    vec3{4} v_1175 = VAdd<3,4>(v_1166,VEC3{4}(RMul(l_vdot_975,l_r_1146),RMul(l_vdot_975,l_r_1147),RMul(l_vdot_975,l_r_1148)));
    real l_r_1176 = VIndex<3,4,0>(v_1167);
    real l_r_1177 = VIndex<3,4,0>(v_1170);
    real l_r_1178 = VIndex<3,4,0>(v_1173);
    real l_r_1179 = VIndex<3,4,0>(v_1168);
    real l_r_1180 = VIndex<3,4,0>(v_1171);
    real l_r_1181 = VIndex<3,4,0>(v_1174);
    real l_r_1182 = VIndex<3,4,0>(v_1169);
    real l_r_1183 = VIndex<3,4,0>(v_1172);
    real l_r_1184 = VIndex<3,4,0>(v_1175);
    real l_r_1185 = VIndex<3,4,1>(v_1167);
    real l_r_1186 = VIndex<3,4,1>(v_1170);
    real l_r_1187 = VIndex<3,4,1>(v_1173);
    real l_r_1188 = VIndex<3,4,1>(v_1168);
    real l_r_1189 = VIndex<3,4,1>(v_1171);
    real l_r_1190 = VIndex<3,4,1>(v_1174);
    real l_r_1191 = VIndex<3,4,1>(v_1169);
    real l_r_1192 = VIndex<3,4,1>(v_1172);
    real l_r_1193 = VIndex<3,4,1>(v_1175);
    real l_r_1194 = VIndex<3,4,2>(v_1167);
    real l_r_1195 = VIndex<3,4,2>(v_1170);
    real l_r_1196 = VIndex<3,4,2>(v_1173);
    real l_r_1197 = VIndex<3,4,2>(v_1168);
    real l_r_1198 = VIndex<3,4,2>(v_1171);
    real l_r_1199 = VIndex<3,4,2>(v_1174);
    real l_r_1200 = VIndex<3,4,2>(v_1169);
    real l_r_1201 = VIndex<3,4,2>(v_1172);
    real l_r_1202 = VIndex<3,4,2>(v_1175);
    real l_r_1203 = RMul(l_r_1060,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1176,l_r_1034),RMul(l_r_1177,l_r_1040)),RMul(l_r_1178,l_r_1044)),RMul(l_r_1179,l_r_1048)),RMul(l_r_1180,l_r_1034)),RMul(l_r_1181,l_r_1051)),RMul(l_r_1182,l_r_1054)),RMul(l_r_1183,l_r_1057)),RMul(l_r_1184,l_r_1034)));
    real l_r_1204 = RMul(l_r_1060,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1185,l_r_1034),RMul(l_r_1186,l_r_1040)),RMul(l_r_1187,l_r_1044)),RMul(l_r_1188,l_r_1048)),RMul(l_r_1189,l_r_1034)),RMul(l_r_1190,l_r_1051)),RMul(l_r_1191,l_r_1054)),RMul(l_r_1192,l_r_1057)),RMul(l_r_1193,l_r_1034)));
    real l_r_1205 = RMul(l_r_1060,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1194,l_r_1034),RMul(l_r_1195,l_r_1040)),RMul(l_r_1196,l_r_1044)),RMul(l_r_1197,l_r_1048)),RMul(l_r_1198,l_r_1034)),RMul(l_r_1199,l_r_1051)),RMul(l_r_1200,l_r_1054)),RMul(l_r_1201,l_r_1057)),RMul(l_r_1202,l_r_1034)));
    real l_r_1206 = RMul(l_r_1061,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1176,l_r_1036),RMul(l_r_1177,l_r_1041)),RMul(l_r_1178,l_r_1046)),RMul(l_r_1179,l_r_1049)),RMul(l_r_1180,l_r_1036)),RMul(l_r_1181,l_r_1052)),RMul(l_r_1182,l_r_1055)),RMul(l_r_1183,l_r_1058)),RMul(l_r_1184,l_r_1036)));
    real l_r_1207 = RMul(l_r_1061,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1185,l_r_1036),RMul(l_r_1186,l_r_1041)),RMul(l_r_1187,l_r_1046)),RMul(l_r_1188,l_r_1049)),RMul(l_r_1189,l_r_1036)),RMul(l_r_1190,l_r_1052)),RMul(l_r_1191,l_r_1055)),RMul(l_r_1192,l_r_1058)),RMul(l_r_1193,l_r_1036)));
    real l_r_1208 = RMul(l_r_1061,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1194,l_r_1036),RMul(l_r_1195,l_r_1041)),RMul(l_r_1196,l_r_1046)),RMul(l_r_1197,l_r_1049)),RMul(l_r_1198,l_r_1036)),RMul(l_r_1199,l_r_1052)),RMul(l_r_1200,l_r_1055)),RMul(l_r_1201,l_r_1058)),RMul(l_r_1202,l_r_1036)));
    real l_r_1209 = RMul(l_r_1062,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1176,l_r_1038),RMul(l_r_1177,l_r_1042)),RMul(l_r_1178,l_r_1047)),RMul(l_r_1179,l_r_1050)),RMul(l_r_1180,l_r_1038)),RMul(l_r_1181,l_r_1053)),RMul(l_r_1182,l_r_1056)),RMul(l_r_1183,l_r_1059)),RMul(l_r_1184,l_r_1038)));
    real l_r_1210 = RMul(l_r_1062,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1185,l_r_1038),RMul(l_r_1186,l_r_1042)),RMul(l_r_1187,l_r_1047)),RMul(l_r_1188,l_r_1050)),RMul(l_r_1189,l_r_1038)),RMul(l_r_1190,l_r_1053)),RMul(l_r_1191,l_r_1056)),RMul(l_r_1192,l_r_1059)),RMul(l_r_1193,l_r_1038)));
    real l_r_1211 = RMul(l_r_1062,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1194,l_r_1038),RMul(l_r_1195,l_r_1042)),RMul(l_r_1196,l_r_1047)),RMul(l_r_1197,l_r_1050)),RMul(l_r_1198,l_r_1038)),RMul(l_r_1199,l_r_1053)),RMul(l_r_1200,l_r_1056)),RMul(l_r_1201,l_r_1059)),RMul(l_r_1202,l_r_1038)));
    real l_op1_e3_l_146_1212 = VDot<3,4>(v_1063,v_1063);
    vec3{4} v_1213 = VEC3{4}(RAdd(RAdd(RAdd(l_r_1203,l_r_1203),RAdd(l_r_1206,l_r_1206)),RAdd(l_r_1209,l_r_1209)),RAdd(RAdd(RAdd(l_r_1204,l_r_1204),RAdd(l_r_1207,l_r_1207)),RAdd(l_r_1210,l_r_1210)),RAdd(RAdd(RAdd(l_r_1205,l_r_1205),RAdd(l_r_1208,l_r_1208)),RAdd(l_r_1211,l_r_1211)));
    vec3{4} v_1214 = VScale<3,4>(l_op1_e3_l_146_1212,v_1213);
    real l_r_1215 = RDiv(0.1e1,VDot<3,4>(v_1213,v_1213));
    vec3{4} v_1216 = VNeg<3,4>(VEC3{4}(RMul(l_r_1215,VIndex<3,4,0>(v_1214)),RMul(l_r_1215,VIndex<3,4,1>(v_1214)),RMul(l_r_1215,VIndex<3,4,2>(v_1214))));
    real l__t_1217 = RMul(globals.maxAlpha,RClamp(0.e0,0.1e1,RMul(0.15e1,RSub(0.1e1,RDiv(Abs<real>(Sqrt(VDot<3,4>(v_1216,v_1216))),globals.thick)))));
    vec3{4} v_1218 = v_1151;
    vec3{4} v_1219 = v_1153;
    vec3{4} v_1220 = v_1154;
    vec3{4} v_1221 = v_1157;
    vec3{4} v_1222 = v_1159;
    vec3{4} v_1223 = v_1063;
    vec3{4} v_1224 = v_1160;
    vec3{4} v_1225 = v_1163;
    vec3{4} v_1226 = v_1165;
    vec3{4} v_1227 = v_1166;
    vec4 v_1228 = v_801;
    vec4 v_1229 = v_802;
    vec4 v_1230 = v_803;
    vec4 v_1231 = v_804;
    vec4 v_1232 = v_805;
    vec4 v_1233 = v_806;
    vec4 v_1234 = v_807;
    vec4 v_1235 = v_808;
    vec4 v_1236 = v_809;
    vec4 v_1237 = v_810;
    vec4 v_1238 = v_811;
    vec4 v_1239 = v_812;
    vec4 v_1240 = v_813;
    vec4 v_1241 = v_814;
    vec4 v_1242 = v_815;
    vec4 v_1243 = v_816;
    vec4 v_1244 = v_817;
    vec4 v_1245 = v_818;
    vec4 v_1246 = v_819;
    vec4 v_1247 = v_820;
    vec4 v_1248 = v_821;
    if (EQ<real>(l__t_1217,0.e0)) {
      self.rayN = l_rayN_69;
      active;
    }
    real l__t_1249 = MathFn<pow>(RSub(0.1e1,l__t_1217),self.alphaFix);
    if (NEQ<real>(self.phKs,0.e0)) {
      vec3{4} v_1250 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.eyeDir)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
      real l_r_1251 = RAdd(RAdd(l_r_1099,l_r_1105),l_r_1111);
      real l_r_1252 = RAdd(RAdd(l_r_1100,l_r_1106),l_r_1112);
      real l_r_1253 = RAdd(RAdd(l_r_1102,l_r_1108),l_r_1114);
      vec3{4} v_1254 = VAdd<3,4>(VEC3{4}(RAdd(RAdd(l_r_1098,l_r_1104),l_r_1110),l_r_1251,l_r_1252),VEC3{4}(RAdd(RAdd(l_r_1116,l_r_1119),l_r_1122),RAdd(RAdd(l_r_1117,l_r_1120),l_r_1123),RAdd(RAdd(l_r_1118,l_r_1121),l_r_1124)));
      vec3{4} v_1255 = VAdd<3,4>(VEC3{4}(l_r_1251,RAdd(RAdd(l_r_1101,l_r_1107),l_r_1113),l_r_1253),VEC3{4}(RAdd(RAdd(l_r_1125,l_r_1127),l_r_1130),RAdd(RAdd(l_r_1119,l_r_1128),l_r_1131),RAdd(RAdd(l_r_1126,l_r_1129),l_r_1132)));
      vec3{4} v_1256 = VAdd<3,4>(VEC3{4}(l_r_1252,l_r_1253,RAdd(RAdd(l_r_1103,l_r_1109),l_r_1115)),VEC3{4}(RAdd(RAdd(l_r_1133,l_r_1135),l_r_1137),RAdd(RAdd(l_r_1134,l_r_1136),l_r_1138),RAdd(RAdd(l_r_1122,l_r_1131),l_r_1139)));
      real l_r_1257 = VIndex<3,4,0>(v_1254);
      real l_r_1258 = VIndex<3,4,1>(v_1254);
      real l_r_1259 = VIndex<3,4,2>(v_1254);
      real l_r_1260 = VIndex<3,4,0>(v_1255);
      real l_r_1261 = VIndex<3,4,1>(v_1255);
      real l_r_1262 = VIndex<3,4,2>(v_1255);
      real l_r_1263 = VIndex<3,4,0>(v_1256);
      real l_r_1264 = VIndex<3,4,1>(v_1256);
      real l_r_1265 = VIndex<3,4,2>(v_1256);
      vec3{4} v_1266 = VAdd<3,4>(v_1218,VEC3{4}(RMul(l_vdot_973,l_r_1257),RMul(l_vdot_973,l_r_1258),RMul(l_vdot_973,l_r_1259)));
      vec3{4} v_1267 = VAdd<3,4>(v_1219,VEC3{4}(RMul(l_vdot_974,l_r_1257),RMul(l_vdot_974,l_r_1258),RMul(l_vdot_974,l_r_1259)));
      vec3{4} v_1268 = VAdd<3,4>(v_1220,VEC3{4}(RMul(l_vdot_975,l_r_1257),RMul(l_vdot_975,l_r_1258),RMul(l_vdot_975,l_r_1259)));
      vec3{4} v_1269 = VAdd<3,4>(v_1221,VEC3{4}(RMul(l_vdot_973,l_r_1260),RMul(l_vdot_973,l_r_1261),RMul(l_vdot_973,l_r_1262)));
      vec3{4} v_1270 = VAdd<3,4>(v_1222,VEC3{4}(RMul(l_vdot_974,l_r_1260),RMul(l_vdot_974,l_r_1261),RMul(l_vdot_974,l_r_1262)));
      vec3{4} v_1271 = VAdd<3,4>(v_1224,VEC3{4}(RMul(l_vdot_975,l_r_1260),RMul(l_vdot_975,l_r_1261),RMul(l_vdot_975,l_r_1262)));
      vec3{4} v_1272 = VAdd<3,4>(v_1225,VEC3{4}(RMul(l_vdot_973,l_r_1263),RMul(l_vdot_973,l_r_1264),RMul(l_vdot_973,l_r_1265)));
      vec3{4} v_1273 = VAdd<3,4>(v_1226,VEC3{4}(RMul(l_vdot_974,l_r_1263),RMul(l_vdot_974,l_r_1264),RMul(l_vdot_974,l_r_1265)));
      vec3{4} v_1274 = VAdd<3,4>(v_1227,VEC3{4}(RMul(l_vdot_975,l_r_1263),RMul(l_vdot_975,l_r_1264),RMul(l_vdot_975,l_r_1265)));
      real l_r_1275 = VIndex<3,4,0>(v_1266);
      real l_r_1276 = VIndex<3,4,0>(v_1269);
      real l_r_1277 = VIndex<3,4,0>(v_1272);
      real l_r_1278 = VIndex<3,4,0>(v_1267);
      real l_r_1279 = VIndex<3,4,0>(v_1270);
      real l_r_1280 = VIndex<3,4,0>(v_1273);
      real l_r_1281 = VIndex<3,4,0>(v_1268);
      real l_r_1282 = VIndex<3,4,0>(v_1271);
      real l_r_1283 = VIndex<3,4,0>(v_1274);
      real l_r_1284 = VIndex<3,4,1>(v_1266);
      real l_r_1285 = VIndex<3,4,1>(v_1269);
      real l_r_1286 = VIndex<3,4,1>(v_1272);
      real l_r_1287 = VIndex<3,4,1>(v_1267);
      real l_r_1288 = VIndex<3,4,1>(v_1270);
      real l_r_1289 = VIndex<3,4,1>(v_1273);
      real l_r_1290 = VIndex<3,4,1>(v_1268);
      real l_r_1291 = VIndex<3,4,1>(v_1271);
      real l_r_1292 = VIndex<3,4,1>(v_1274);
      real l_r_1293 = VIndex<3,4,2>(v_1266);
      real l_r_1294 = VIndex<3,4,2>(v_1269);
      real l_r_1295 = VIndex<3,4,2>(v_1272);
      real l_r_1296 = VIndex<3,4,2>(v_1267);
      real l_r_1297 = VIndex<3,4,2>(v_1270);
      real l_r_1298 = VIndex<3,4,2>(v_1273);
      real l_r_1299 = VIndex<3,4,2>(v_1268);
      real l_r_1300 = VIndex<3,4,2>(v_1271);
      real l_r_1301 = VIndex<3,4,2>(v_1274);
      vec3{4} v_1302 = VEC3{4}(VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1275,l_r_1034),RMul(l_r_1276,l_r_1040)),RMul(l_r_1277,l_r_1044)),RMul(l_r_1278,l_r_1048)),RMul(l_r_1279,l_r_1034)),RMul(l_r_1280,l_r_1051)),RMul(l_r_1281,l_r_1054)),RMul(l_r_1282,l_r_1057)),RMul(l_r_1283,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1275,l_r_1036),RMul(l_r_1276,l_r_1041)),RMul(l_r_1277,l_r_1046)),RMul(l_r_1278,l_r_1049)),RMul(l_r_1279,l_r_1036)),RMul(l_r_1280,l_r_1052)),RMul(l_r_1281,l_r_1055)),RMul(l_r_1282,l_r_1058)),RMul(l_r_1283,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1275,l_r_1038),RMul(l_r_1276,l_r_1042)),RMul(l_r_1277,l_r_1047)),RMul(l_r_1278,l_r_1050)),RMul(l_r_1279,l_r_1038)),RMul(l_r_1280,l_r_1053)),RMul(l_r_1281,l_r_1056)),RMul(l_r_1282,l_r_1059)),RMul(l_r_1283,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1284,l_r_1034),RMul(l_r_1285,l_r_1040)),RMul(l_r_1286,l_r_1044)),RMul(l_r_1287,l_r_1048)),RMul(l_r_1288,l_r_1034)),RMul(l_r_1289,l_r_1051)),RMul(l_r_1290,l_r_1054)),RMul(l_r_1291,l_r_1057)),RMul(l_r_1292,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1284,l_r_1036),RMul(l_r_1285,l_r_1041)),RMul(l_r_1286,l_r_1046)),RMul(l_r_1287,l_r_1049)),RMul(l_r_1288,l_r_1036)),RMul(l_r_1289,l_r_1052)),RMul(l_r_1290,l_r_1055)),RMul(l_r_1291,l_r_1058)),RMul(l_r_1292,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1284,l_r_1038),RMul(l_r_1285,l_r_1042)),RMul(l_r_1286,l_r_1047)),RMul(l_r_1287,l_r_1050)),RMul(l_r_1288,l_r_1038)),RMul(l_r_1289,l_r_1053)),RMul(l_r_1290,l_r_1056)),RMul(l_r_1291,l_r_1059)),RMul(l_r_1292,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1293,l_r_1034),RMul(l_r_1294,l_r_1040)),RMul(l_r_1295,l_r_1044)),RMul(l_r_1296,l_r_1048)),RMul(l_r_1297,l_r_1034)),RMul(l_r_1298,l_r_1051)),RMul(l_r_1299,l_r_1054)),RMul(l_r_1300,l_r_1057)),RMul(l_r_1301,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1293,l_r_1036),RMul(l_r_1294,l_r_1041)),RMul(l_r_1295,l_r_1046)),RMul(l_r_1296,l_r_1049)),RMul(l_r_1297,l_r_1036)),RMul(l_r_1298,l_r_1052)),RMul(l_r_1299,l_r_1055)),RMul(l_r_1300,l_r_1058)),RMul(l_r_1301,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1293,l_r_1038),RMul(l_r_1294,l_r_1042)),RMul(l_r_1295,l_r_1047)),RMul(l_r_1296,l_r_1050)),RMul(l_r_1297,l_r_1038)),RMul(l_r_1298,l_r_1053)),RMul(l_r_1299,l_r_1056)),RMul(l_r_1300,l_r_1059)),RMul(l_r_1301,l_r_1038)))));
      vec3{4} v_1303 = VAdd<3,4>(v_1302,v_1302);
      vec3{4} v_1304 = VScale<3,4>(l_op1_e3_l_146_1212,v_1303);
      real l_r_1305 = RDiv(0.1e1,VDot<3,4>(v_1303,v_1303));
      vec3{4} v_1306 = VNeg<3,4>(VEC3{4}(RMul(l_r_1305,VIndex<3,4,0>(v_1304)),RMul(l_r_1305,VIndex<3,4,1>(v_1304)),RMul(l_r_1305,VIndex<3,4,2>(v_1304))));
      l_scomp_1307 = MathFn<pow>(Abs<real>(RMul(RDiv(0.1e1,Sqrt(VDot<3,4>(v_1250,v_1250))),VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(v_1306,v_1306))),v_1306)),v_1250))),self.phSp);
    } else {
      l_scomp_1307 = 0.e0;
    }
    real l_cmin_1308 = VIndex<2,2,0>(LOAD_0(TensorRef<[2]>(globals.cminmax)));
    real l_cmax_1309 = VIndex<2,2,1>(LOAD_0(TensorRef<[2]>(globals.cminmax)));
    vec3{4} v_1310 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    if (NEQ<real>(l_cmin_1308,l_cmax_1309)) {
      tensor[3,2] l_voxels_1408;
      real l_r_1311 = RAdd(RAdd(l_r_1099,l_r_1105),l_r_1111);
      real l_r_1312 = RAdd(RAdd(l_r_1100,l_r_1106),l_r_1112);
      real l_r_1313 = RAdd(RAdd(l_r_1102,l_r_1108),l_r_1114);
      vec3{4} v_1314 = VAdd<3,4>(VEC3{4}(RAdd(RAdd(l_r_1098,l_r_1104),l_r_1110),l_r_1311,l_r_1312),VEC3{4}(RAdd(RAdd(l_r_1116,l_r_1119),l_r_1122),RAdd(RAdd(l_r_1117,l_r_1120),l_r_1123),RAdd(RAdd(l_r_1118,l_r_1121),l_r_1124)));
      vec3{4} v_1315 = VAdd<3,4>(VEC3{4}(l_r_1311,RAdd(RAdd(l_r_1101,l_r_1107),l_r_1113),l_r_1313),VEC3{4}(RAdd(RAdd(l_r_1125,l_r_1127),l_r_1130),RAdd(RAdd(l_r_1119,l_r_1128),l_r_1131),RAdd(RAdd(l_r_1126,l_r_1129),l_r_1132)));
      vec3{4} v_1316 = VAdd<3,4>(VEC3{4}(l_r_1312,l_r_1313,RAdd(RAdd(l_r_1103,l_r_1109),l_r_1115)),VEC3{4}(RAdd(RAdd(l_r_1133,l_r_1135),l_r_1137),RAdd(RAdd(l_r_1134,l_r_1136),l_r_1138),RAdd(RAdd(l_r_1122,l_r_1131),l_r_1139)));
      real l_r_1317 = VIndex<3,4,0>(v_1314);
      real l_r_1318 = VIndex<3,4,1>(v_1314);
      real l_r_1319 = VIndex<3,4,2>(v_1314);
      real l_r_1320 = VIndex<3,4,0>(v_1315);
      real l_r_1321 = VIndex<3,4,1>(v_1315);
      real l_r_1322 = VIndex<3,4,2>(v_1315);
      real l_r_1323 = VIndex<3,4,0>(v_1316);
      real l_r_1324 = VIndex<3,4,1>(v_1316);
      real l_r_1325 = VIndex<3,4,2>(v_1316);
      vec3{4} v_1326 = VAdd<3,4>(v_1218,VEC3{4}(RMul(l_vdot_973,l_r_1317),RMul(l_vdot_973,l_r_1318),RMul(l_vdot_973,l_r_1319)));
      vec3{4} v_1327 = VAdd<3,4>(v_1219,VEC3{4}(RMul(l_vdot_974,l_r_1317),RMul(l_vdot_974,l_r_1318),RMul(l_vdot_974,l_r_1319)));
      vec3{4} v_1328 = VAdd<3,4>(v_1220,VEC3{4}(RMul(l_vdot_975,l_r_1317),RMul(l_vdot_975,l_r_1318),RMul(l_vdot_975,l_r_1319)));
      vec3{4} v_1329 = VAdd<3,4>(v_1221,VEC3{4}(RMul(l_vdot_973,l_r_1320),RMul(l_vdot_973,l_r_1321),RMul(l_vdot_973,l_r_1322)));
      vec3{4} v_1330 = VAdd<3,4>(v_1222,VEC3{4}(RMul(l_vdot_974,l_r_1320),RMul(l_vdot_974,l_r_1321),RMul(l_vdot_974,l_r_1322)));
      vec3{4} v_1331 = VAdd<3,4>(v_1224,VEC3{4}(RMul(l_vdot_975,l_r_1320),RMul(l_vdot_975,l_r_1321),RMul(l_vdot_975,l_r_1322)));
      vec3{4} v_1332 = VAdd<3,4>(v_1225,VEC3{4}(RMul(l_vdot_973,l_r_1323),RMul(l_vdot_973,l_r_1324),RMul(l_vdot_973,l_r_1325)));
      vec3{4} v_1333 = VAdd<3,4>(v_1226,VEC3{4}(RMul(l_vdot_974,l_r_1323),RMul(l_vdot_974,l_r_1324),RMul(l_vdot_974,l_r_1325)));
      vec3{4} v_1334 = VAdd<3,4>(v_1227,VEC3{4}(RMul(l_vdot_975,l_r_1323),RMul(l_vdot_975,l_r_1324),RMul(l_vdot_975,l_r_1325)));
      real l_r_1335 = VIndex<3,4,0>(v_1326);
      real l_r_1336 = VIndex<3,4,0>(v_1329);
      real l_r_1337 = VIndex<3,4,0>(v_1332);
      real l_r_1338 = VIndex<3,4,0>(v_1327);
      real l_r_1339 = VIndex<3,4,0>(v_1330);
      real l_r_1340 = VIndex<3,4,0>(v_1333);
      real l_r_1341 = VIndex<3,4,0>(v_1328);
      real l_r_1342 = VIndex<3,4,0>(v_1331);
      real l_r_1343 = VIndex<3,4,0>(v_1334);
      real l_r_1344 = VIndex<3,4,1>(v_1326);
      real l_r_1345 = VIndex<3,4,1>(v_1329);
      real l_r_1346 = VIndex<3,4,1>(v_1332);
      real l_r_1347 = VIndex<3,4,1>(v_1327);
      real l_r_1348 = VIndex<3,4,1>(v_1330);
      real l_r_1349 = VIndex<3,4,1>(v_1333);
      real l_r_1350 = VIndex<3,4,1>(v_1328);
      real l_r_1351 = VIndex<3,4,1>(v_1331);
      real l_r_1352 = VIndex<3,4,1>(v_1334);
      real l_r_1353 = VIndex<3,4,2>(v_1326);
      real l_r_1354 = VIndex<3,4,2>(v_1329);
      real l_r_1355 = VIndex<3,4,2>(v_1332);
      real l_r_1356 = VIndex<3,4,2>(v_1327);
      real l_r_1357 = VIndex<3,4,2>(v_1330);
      real l_r_1358 = VIndex<3,4,2>(v_1333);
      real l_r_1359 = VIndex<3,4,2>(v_1328);
      real l_r_1360 = VIndex<3,4,2>(v_1331);
      real l_r_1361 = VIndex<3,4,2>(v_1334);
      vec3{4} v_1362 = VEC3{4}(VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1335,l_r_1034),RMul(l_r_1336,l_r_1040)),RMul(l_r_1337,l_r_1044)),RMul(l_r_1338,l_r_1048)),RMul(l_r_1339,l_r_1034)),RMul(l_r_1340,l_r_1051)),RMul(l_r_1341,l_r_1054)),RMul(l_r_1342,l_r_1057)),RMul(l_r_1343,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1335,l_r_1036),RMul(l_r_1336,l_r_1041)),RMul(l_r_1337,l_r_1046)),RMul(l_r_1338,l_r_1049)),RMul(l_r_1339,l_r_1036)),RMul(l_r_1340,l_r_1052)),RMul(l_r_1341,l_r_1055)),RMul(l_r_1342,l_r_1058)),RMul(l_r_1343,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1335,l_r_1038),RMul(l_r_1336,l_r_1042)),RMul(l_r_1337,l_r_1047)),RMul(l_r_1338,l_r_1050)),RMul(l_r_1339,l_r_1038)),RMul(l_r_1340,l_r_1053)),RMul(l_r_1341,l_r_1056)),RMul(l_r_1342,l_r_1059)),RMul(l_r_1343,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1344,l_r_1034),RMul(l_r_1345,l_r_1040)),RMul(l_r_1346,l_r_1044)),RMul(l_r_1347,l_r_1048)),RMul(l_r_1348,l_r_1034)),RMul(l_r_1349,l_r_1051)),RMul(l_r_1350,l_r_1054)),RMul(l_r_1351,l_r_1057)),RMul(l_r_1352,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1344,l_r_1036),RMul(l_r_1345,l_r_1041)),RMul(l_r_1346,l_r_1046)),RMul(l_r_1347,l_r_1049)),RMul(l_r_1348,l_r_1036)),RMul(l_r_1349,l_r_1052)),RMul(l_r_1350,l_r_1055)),RMul(l_r_1351,l_r_1058)),RMul(l_r_1352,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1344,l_r_1038),RMul(l_r_1345,l_r_1042)),RMul(l_r_1346,l_r_1047)),RMul(l_r_1347,l_r_1050)),RMul(l_r_1348,l_r_1038)),RMul(l_r_1349,l_r_1053)),RMul(l_r_1350,l_r_1056)),RMul(l_r_1351,l_r_1059)),RMul(l_r_1352,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1353,l_r_1034),RMul(l_r_1354,l_r_1040)),RMul(l_r_1355,l_r_1044)),RMul(l_r_1356,l_r_1048)),RMul(l_r_1357,l_r_1034)),RMul(l_r_1358,l_r_1051)),RMul(l_r_1359,l_r_1054)),RMul(l_r_1360,l_r_1057)),RMul(l_r_1361,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1353,l_r_1036),RMul(l_r_1354,l_r_1041)),RMul(l_r_1355,l_r_1046)),RMul(l_r_1356,l_r_1049)),RMul(l_r_1357,l_r_1036)),RMul(l_r_1358,l_r_1052)),RMul(l_r_1359,l_r_1055)),RMul(l_r_1360,l_r_1058)),RMul(l_r_1361,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1353,l_r_1038),RMul(l_r_1354,l_r_1042)),RMul(l_r_1355,l_r_1047)),RMul(l_r_1356,l_r_1050)),RMul(l_r_1357,l_r_1038)),RMul(l_r_1358,l_r_1053)),RMul(l_r_1359,l_r_1056)),RMul(l_r_1360,l_r_1059)),RMul(l_r_1361,l_r_1038)))));
      vec3{4} v_1363 = VAdd<3,4>(v_1362,v_1362);
      vec3{4} v_1364 = VScale<3,4>(l_op1_e3_l_146_1212,v_1363);
      real l_r_1365 = RDiv(0.1e1,VDot<3,4>(v_1363,v_1363));
      vec3{4} v_1366 = VAdd<3,4>(v_72,VNeg<3,4>(VEC3{4}(RMul(l_r_1365,VIndex<3,4,0>(v_1364)),RMul(l_r_1365,VIndex<3,4,1>(v_1364)),RMul(l_r_1365,VIndex<3,4,2>(v_1364)))));
      real l_varAcc_1367 = VIndex<3,4,0>(v_1366);
      real l_varAcc_1368 = VIndex<3,4,1>(v_1366);
      real l_varAcc_1369 = VIndex<3,4,2>(v_1366);
      real l_prod_1370 = RMul(0.1e1,l_varAcc_1369);
      real l_prod_1371 = RMul(l_varAcc_1368,0.1e1);
      real l_prod2_1372 = RMul(l_varAcc_1369,l_varAcc_1369);
      real l_prod_1373 = RMul(0.1e1,l_prod2_1372);
      real l_prod_1374 = RMul(l_varAcc_1368,l_varAcc_1369);
      real l_prod2_1375 = RMul(l_varAcc_1368,l_varAcc_1368);
      real l_prod_1376 = RMul(l_prod2_1375,0.1e1);
      real l_prod2_1377 = RMul(l_varAcc_1367,l_varAcc_1367);
      real l_prod3_1378 = RMul(l_prod2_1372,l_varAcc_1369);
      real l_prod_1379 = RMul(0.1e1,l_prod3_1378);
      real l_prod_1380 = RMul(l_varAcc_1368,l_prod2_1372);
      real l_prod_1381 = RMul(l_prod2_1375,l_varAcc_1369);
      real l_prod3_1382 = RMul(l_prod2_1375,l_varAcc_1368);
      real l_prod_1383 = RMul(l_prod3_1382,0.1e1);
      real l_prod3_1384 = RMul(l_prod2_1377,l_varAcc_1367);
      real l_prod4_1385 = RMul(l_prod3_1378,l_varAcc_1369);
      real l_prod_1386 = RMul(0.1e1,l_prod4_1385);
      real l_prod_1387 = RMul(l_varAcc_1368,l_prod3_1378);
      real l_prod_1388 = RMul(l_prod2_1375,l_prod2_1372);
      real l_prod_1389 = RMul(l_prod3_1382,l_varAcc_1369);
      real l_prod4_1390 = RMul(l_prod3_1382,l_varAcc_1368);
      real l_prod_1391 = RMul(l_prod4_1390,0.1e1);
      real l_prod4_1392 = RMul(l_prod3_1384,l_varAcc_1367);
      real l_prod5_1393 = RMul(l_prod4_1385,l_varAcc_1369);
      real l_prod_1394 = RMul(0.1e1,l_prod5_1393);
      real l_prod_1395 = RMul(l_varAcc_1368,l_prod4_1385);
      real l_prod_1396 = RMul(l_prod2_1375,l_prod3_1378);
      real l_prod_1397 = RMul(l_prod3_1382,l_prod2_1372);
      real l_prod_1398 = RMul(l_prod4_1390,l_varAcc_1369);
      real l_prod5_1399 = RMul(l_prod4_1390,l_varAcc_1368);
      real l_prod_1400 = RMul(l_prod5_1399,0.1e1);
      real l_prod5_1401 = RMul(l_prod4_1392,l_varAcc_1367);
      real l_imgPos_1402 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.cmap),RAdd(0.e0,RMul(RDiv(RSub(RAdd(VDot<4,4>(v_1229,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1373)),RMul(0.1e1,RMul(0.1e1,l_prod_1374)),RMul(0.1e1,RMul(0.1e1,l_prod_1376)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1370)))),RAdd(VDot<4,4>(v_1230,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1371)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_825)),RMul(0.1e1,RMul(0.1e1,l_prod_1379)),RMul(0.1e1,RMul(0.1e1,l_prod_1380)))),RAdd(VDot<4,4>(v_1231,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1381)),RMul(0.1e1,RMul(0.1e1,l_prod_1383)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1373)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1374)))),RAdd(VDot<4,4>(v_1232,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1376)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1370)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1371)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_825)))),RAdd(VDot<4,4>(v_1233,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1386)),RMul(0.1e1,RMul(0.1e1,l_prod_1387)),RMul(0.1e1,RMul(0.1e1,l_prod_1388)),RMul(0.1e1,RMul(0.1e1,l_prod_1389)))),RAdd(VDot<4,4>(v_1234,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1391)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1379)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1380)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1381)))),RAdd(VDot<4,4>(v_1235,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1383)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1373)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1374)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1376)))),RAdd(VDot<4,4>(v_1236,VEC4(RMul(0.1e1,RMul(l_prod3_1384,l_prod_1370)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1371)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_825)),RMul(0.1e1,RMul(0.1e1,l_prod_1394)))),RAdd(VDot<4,4>(v_1237,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1395)),RMul(0.1e1,RMul(0.1e1,l_prod_1396)),RMul(0.1e1,RMul(0.1e1,l_prod_1397)),RMul(0.1e1,RMul(0.1e1,l_prod_1398)))),RAdd(VDot<4,4>(v_1238,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1400)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1386)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1387)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1388)))),RAdd(VDot<4,4>(v_1239,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1389)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1391)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1379)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1380)))),RAdd(VDot<4,4>(v_1240,VEC4(RMul(0.1e1,RMul(l_prod2_1377,l_prod_1381)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1383)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1373)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1374)))),RAdd(VDot<4,4>(v_1241,VEC4(RMul(0.1e1,RMul(l_prod3_1384,l_prod_1376)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_1370)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_1371)),RMul(0.1e1,RMul(l_prod5_1401,l_prod_825)))),RAdd(VDot<4,4>(v_1242,VEC4(RMul(0.1e1,RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1393,l_varAcc_1369)))),RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_1368,l_prod5_1393))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod2_1375,l_prod4_1385))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod3_1382,l_prod3_1378))))),RAdd(VDot<4,4>(v_1243,VEC4(RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_1390,l_prod2_1372))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1399,l_varAcc_1369))),RMul(0.1e1,RMul(0.1e1,RMul(RMul(l_prod5_1399,l_varAcc_1368),0.1e1))),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1394)))),RAdd(VDot<4,4>(v_1244,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1395)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1396)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1397)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1398)))),RAdd(VDot<4,4>(v_1245,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1400)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1386)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1387)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1388)))),RAdd(VDot<4,4>(v_1246,VEC4(RMul(0.1e1,RMul(l_prod2_1377,l_prod_1389)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1391)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1379)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1380)))),RAdd(VDot<4,4>(v_1247,VEC4(RMul(0.1e1,RMul(l_prod3_1384,l_prod_1381)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1383)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_1373)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_1374)))),RAdd(VDot<4,4>(v_1248,VEC4(RMul(0.1e1,RMul(l_prod4_1392,l_prod_1376)),RMul(0.1e1,RMul(l_prod5_1401,l_prod_1370)),RMul(0.1e1,RMul(l_prod5_1401,l_prod_1371)),RMul(0.1e1,RMul(RMul(l_prod5_1401,l_varAcc_1367),l_prod_825)))),VDot<4,4>(v_1228,VEC4(l_basisEval_827,RMul(0.1e1,RMul(0.1e1,l_prod_1370)),RMul(0.1e1,RMul(0.1e1,l_prod_1371)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_825)))))))))))))))))))))))),l_cmin_1308),RSub(l_cmax_1309,l_cmin_1308)),RSub(0.1e1,0.e0)))),Translate<IMAGE1D<double[3]>>(globals.cmap));
      real l_nd_1403 = RFloor(l_imgPos_1402);
      real l_f_1404 = RSub(l_imgPos_1402,l_nd_1403);
      int l_n_1405 = RealToInt(l_nd_1403);
      if (IndexInside<IMAGE1D<double[3]>,2>(l_n_1405,globals.cmap)) {
        int l_offp_1406 = IMul(3,l_n_1405);
        int l_offp_1407 = IMul(3,IAdd(l_n_1405,1));
        l_voxels_1408 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1406),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1407),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1406,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1407,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1406,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1407,2))];
      } else {
        int l_offp_1409 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,l_n_1405));
        int l_offp_1410 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,IAdd(l_n_1405,1)));
        l_voxels_1408 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1409),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1410),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1409,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1410,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1409,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1410,2))];
      }
      vec2 v_1411 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_1404,RSub(l_f_1404,0.1e1)),VEC2(-0.1e1,0.1e1)));
      v_1412 = VEC3{4}(VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_1408)),v_1411),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_1408)),v_1411),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_1408)),v_1411));
    } else {
      v_1412 = v_1310;
    }
    real l_r_1413 = RAdd(RAdd(l_r_1099,l_r_1105),l_r_1111);
    real l_r_1414 = RAdd(RAdd(l_r_1100,l_r_1106),l_r_1112);
    real l_r_1415 = RAdd(RAdd(l_r_1102,l_r_1108),l_r_1114);
    vec3{4} v_1416 = VAdd<3,4>(VEC3{4}(RAdd(RAdd(l_r_1098,l_r_1104),l_r_1110),l_r_1413,l_r_1414),VEC3{4}(RAdd(RAdd(l_r_1116,l_r_1119),l_r_1122),RAdd(RAdd(l_r_1117,l_r_1120),l_r_1123),RAdd(RAdd(l_r_1118,l_r_1121),l_r_1124)));
    vec3{4} v_1417 = VAdd<3,4>(VEC3{4}(l_r_1413,RAdd(RAdd(l_r_1101,l_r_1107),l_r_1113),l_r_1415),VEC3{4}(RAdd(RAdd(l_r_1125,l_r_1127),l_r_1130),RAdd(RAdd(l_r_1119,l_r_1128),l_r_1131),RAdd(RAdd(l_r_1126,l_r_1129),l_r_1132)));
    vec3{4} v_1418 = VAdd<3,4>(VEC3{4}(l_r_1414,l_r_1415,RAdd(RAdd(l_r_1103,l_r_1109),l_r_1115)),VEC3{4}(RAdd(RAdd(l_r_1133,l_r_1135),l_r_1137),RAdd(RAdd(l_r_1134,l_r_1136),l_r_1138),RAdd(RAdd(l_r_1122,l_r_1131),l_r_1139)));
    real l_r_1419 = VIndex<3,4,0>(v_1416);
    real l_r_1420 = VIndex<3,4,1>(v_1416);
    real l_r_1421 = VIndex<3,4,2>(v_1416);
    real l_r_1422 = VIndex<3,4,0>(v_1417);
    real l_r_1423 = VIndex<3,4,1>(v_1417);
    real l_r_1424 = VIndex<3,4,2>(v_1417);
    real l_r_1425 = VIndex<3,4,0>(v_1418);
    real l_r_1426 = VIndex<3,4,1>(v_1418);
    real l_r_1427 = VIndex<3,4,2>(v_1418);
    vec3{4} v_1428 = VAdd<3,4>(v_1218,VEC3{4}(RMul(l_vdot_973,l_r_1419),RMul(l_vdot_973,l_r_1420),RMul(l_vdot_973,l_r_1421)));
    vec3{4} v_1429 = VAdd<3,4>(v_1219,VEC3{4}(RMul(l_vdot_974,l_r_1419),RMul(l_vdot_974,l_r_1420),RMul(l_vdot_974,l_r_1421)));
    vec3{4} v_1430 = VAdd<3,4>(v_1220,VEC3{4}(RMul(l_vdot_975,l_r_1419),RMul(l_vdot_975,l_r_1420),RMul(l_vdot_975,l_r_1421)));
    vec3{4} v_1431 = VAdd<3,4>(v_1221,VEC3{4}(RMul(l_vdot_973,l_r_1422),RMul(l_vdot_973,l_r_1423),RMul(l_vdot_973,l_r_1424)));
    vec3{4} v_1432 = VAdd<3,4>(v_1222,VEC3{4}(RMul(l_vdot_974,l_r_1422),RMul(l_vdot_974,l_r_1423),RMul(l_vdot_974,l_r_1424)));
    vec3{4} v_1433 = VAdd<3,4>(v_1224,VEC3{4}(RMul(l_vdot_975,l_r_1422),RMul(l_vdot_975,l_r_1423),RMul(l_vdot_975,l_r_1424)));
    vec3{4} v_1434 = VAdd<3,4>(v_1225,VEC3{4}(RMul(l_vdot_973,l_r_1425),RMul(l_vdot_973,l_r_1426),RMul(l_vdot_973,l_r_1427)));
    vec3{4} v_1435 = VAdd<3,4>(v_1226,VEC3{4}(RMul(l_vdot_974,l_r_1425),RMul(l_vdot_974,l_r_1426),RMul(l_vdot_974,l_r_1427)));
    vec3{4} v_1436 = VAdd<3,4>(v_1227,VEC3{4}(RMul(l_vdot_975,l_r_1425),RMul(l_vdot_975,l_r_1426),RMul(l_vdot_975,l_r_1427)));
    real l_r_1437 = VIndex<3,4,0>(v_1428);
    real l_r_1438 = VIndex<3,4,0>(v_1431);
    real l_r_1439 = VIndex<3,4,0>(v_1434);
    real l_r_1440 = VIndex<3,4,0>(v_1429);
    real l_r_1441 = VIndex<3,4,0>(v_1432);
    real l_r_1442 = VIndex<3,4,0>(v_1435);
    real l_r_1443 = VIndex<3,4,0>(v_1430);
    real l_r_1444 = VIndex<3,4,0>(v_1433);
    real l_r_1445 = VIndex<3,4,0>(v_1436);
    real l_r_1446 = VIndex<3,4,1>(v_1428);
    real l_r_1447 = VIndex<3,4,1>(v_1431);
    real l_r_1448 = VIndex<3,4,1>(v_1434);
    real l_r_1449 = VIndex<3,4,1>(v_1429);
    real l_r_1450 = VIndex<3,4,1>(v_1432);
    real l_r_1451 = VIndex<3,4,1>(v_1435);
    real l_r_1452 = VIndex<3,4,1>(v_1430);
    real l_r_1453 = VIndex<3,4,1>(v_1433);
    real l_r_1454 = VIndex<3,4,1>(v_1436);
    real l_r_1455 = VIndex<3,4,2>(v_1428);
    real l_r_1456 = VIndex<3,4,2>(v_1431);
    real l_r_1457 = VIndex<3,4,2>(v_1434);
    real l_r_1458 = VIndex<3,4,2>(v_1429);
    real l_r_1459 = VIndex<3,4,2>(v_1432);
    real l_r_1460 = VIndex<3,4,2>(v_1435);
    real l_r_1461 = VIndex<3,4,2>(v_1430);
    real l_r_1462 = VIndex<3,4,2>(v_1433);
    real l_r_1463 = VIndex<3,4,2>(v_1436);
    vec3{4} v_1464 = VEC3{4}(VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1437,l_r_1034),RMul(l_r_1438,l_r_1040)),RMul(l_r_1439,l_r_1044)),RMul(l_r_1440,l_r_1048)),RMul(l_r_1441,l_r_1034)),RMul(l_r_1442,l_r_1051)),RMul(l_r_1443,l_r_1054)),RMul(l_r_1444,l_r_1057)),RMul(l_r_1445,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1437,l_r_1036),RMul(l_r_1438,l_r_1041)),RMul(l_r_1439,l_r_1046)),RMul(l_r_1440,l_r_1049)),RMul(l_r_1441,l_r_1036)),RMul(l_r_1442,l_r_1052)),RMul(l_r_1443,l_r_1055)),RMul(l_r_1444,l_r_1058)),RMul(l_r_1445,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1437,l_r_1038),RMul(l_r_1438,l_r_1042)),RMul(l_r_1439,l_r_1047)),RMul(l_r_1440,l_r_1050)),RMul(l_r_1441,l_r_1038)),RMul(l_r_1442,l_r_1053)),RMul(l_r_1443,l_r_1056)),RMul(l_r_1444,l_r_1059)),RMul(l_r_1445,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1446,l_r_1034),RMul(l_r_1447,l_r_1040)),RMul(l_r_1448,l_r_1044)),RMul(l_r_1449,l_r_1048)),RMul(l_r_1450,l_r_1034)),RMul(l_r_1451,l_r_1051)),RMul(l_r_1452,l_r_1054)),RMul(l_r_1453,l_r_1057)),RMul(l_r_1454,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1446,l_r_1036),RMul(l_r_1447,l_r_1041)),RMul(l_r_1448,l_r_1046)),RMul(l_r_1449,l_r_1049)),RMul(l_r_1450,l_r_1036)),RMul(l_r_1451,l_r_1052)),RMul(l_r_1452,l_r_1055)),RMul(l_r_1453,l_r_1058)),RMul(l_r_1454,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1446,l_r_1038),RMul(l_r_1447,l_r_1042)),RMul(l_r_1448,l_r_1047)),RMul(l_r_1449,l_r_1050)),RMul(l_r_1450,l_r_1038)),RMul(l_r_1451,l_r_1053)),RMul(l_r_1452,l_r_1056)),RMul(l_r_1453,l_r_1059)),RMul(l_r_1454,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1455,l_r_1034),RMul(l_r_1456,l_r_1040)),RMul(l_r_1457,l_r_1044)),RMul(l_r_1458,l_r_1048)),RMul(l_r_1459,l_r_1034)),RMul(l_r_1460,l_r_1051)),RMul(l_r_1461,l_r_1054)),RMul(l_r_1462,l_r_1057)),RMul(l_r_1463,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1455,l_r_1036),RMul(l_r_1456,l_r_1041)),RMul(l_r_1457,l_r_1046)),RMul(l_r_1458,l_r_1049)),RMul(l_r_1459,l_r_1036)),RMul(l_r_1460,l_r_1052)),RMul(l_r_1461,l_r_1055)),RMul(l_r_1462,l_r_1058)),RMul(l_r_1463,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1455,l_r_1038),RMul(l_r_1456,l_r_1042)),RMul(l_r_1457,l_r_1047)),RMul(l_r_1458,l_r_1050)),RMul(l_r_1459,l_r_1038)),RMul(l_r_1460,l_r_1053)),RMul(l_r_1461,l_r_1056)),RMul(l_r_1462,l_r_1059)),RMul(l_r_1463,l_r_1038)))));
    vec3{4} v_1465 = VAdd<3,4>(v_1464,v_1464);
    vec3{4} v_1466 = VScale<3,4>(l_op1_e3_l_146_1212,v_1465);
    real l_r_1467 = RDiv(0.1e1,VDot<3,4>(v_1465,v_1465));
    vec3{4} v_1468 = VNeg<3,4>(VEC3{4}(RMul(l_r_1467,VIndex<3,4,0>(v_1466)),RMul(l_r_1467,VIndex<3,4,1>(v_1466)),RMul(l_r_1467,VIndex<3,4,2>(v_1466))));
    real l_op1_e3_l_690_1469 = VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(v_1468,v_1468))),v_1468)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
    real l_op1_e3_l_699_1470 = RAdd(self.phKa,RMul(self.phKd,RMul(l_op1_e3_l_690_1469,l_op1_e3_l_690_1469)));
    vec3{4} v_1471 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.mcNear)),VScale<3,4>(RDiv(RSub(l_rayN_69,globals.camNearVsp),RSub(globals.camFarVsp,globals.camNearVsp)),VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.mcFar)),LOAD_0(TensorRef<[3]>(globals.mcNear)))));
    real l_r_1472 = RMul(RMul(self.phKs,l_scomp_1307),0.1e1);
    real l_op1_e3_l_703_1473 = RSub(0.1e1,l__t_1249);
    vec3{4} v_1474 = VAdd<3,4>(VEC3{4}(RMul(RMul(l_op1_e3_l_699_1470,VIndex<3,4,0>(v_1471)),VIndex<3,4,0>(v_1412)),RMul(RMul(l_op1_e3_l_699_1470,VIndex<3,4,1>(v_1471)),VIndex<3,4,1>(v_1412)),RMul(RMul(l_op1_e3_l_699_1470,VIndex<3,4,2>(v_1471)),VIndex<3,4,2>(v_1412))),VEC3{4}(l_r_1472,l_r_1472,l_r_1472));
    real l_r_1475 = RMul(self.transp,l_op1_e3_l_703_1473);
    vec3{4} v_1476 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_1475,VIndex<3,4,0>(v_1474)),RMul(l_r_1475,VIndex<3,4,1>(v_1474)),RMul(l_r_1475,VIndex<3,4,2>(v_1474))));
    real l_transp_1477 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_703_1473));
    vec3{4} v_1478 = v_1476;
    if (LT<real>(l_transp_1477,globals.transp0)) {
      self.rayN = l_rayN_69;
      self.rgb = PACK(v_1478);
      self.transp = 0.e0;
      stabilize;
    } else {
      l_transp_1480 = l_transp_1477;
    }
    self.rayN = l_rayN_69;
    self.rgb = PACK(v_1478);
    self.transp = l_transp_1480;
    active;
  }
  stabilize () {
    vec4 v_1483;
    if (LT<real>(self.transp,0.1e1)) {
      real l_aa_1482 = RSub(0.1e1,self.transp);
      v_1483 = VEC4(RDiv(VIndex<3,4,0>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_1482),RDiv(VIndex<3,4,1>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_1482),RDiv(VIndex<3,4,2>(LOAD_0(TensorRef<[3]>(self.rgb))),l_aa_1482),l_aa_1482);
    } else {
      v_1483 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    self.rgba = PACK(v_1483);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_1485 = 0 to ISub(globals.iresV,1) {
      for i_ui_1486 = 0 to ISub(globals.iresU,1) {
        new ray(i_ui_1486,i_vi_1485);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[],-I[],-l[],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) block;
input femData(Space) 0space04D7_intermedateGlobal;
input femData(FemFunc) 0U04D9_intermedateGlobal;
input int cellChoice;
input image(IMAGE1D<double[3]>) cmap;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camNear;
input real camFar;
input real camFOV;
input bool camOrtho;
input int iresU;
input int iresV;
input real rayStep;
input real refStep;
input real transp0;
input real thick;
input real fStrTh;
input real fMaskTh;
input real fBias;
input real maxAlpha;
input bool light;
input tensor[4] phong;
input tensor[3] mcNear;
input tensor[3] mcFar;
input tensor[3] litdir;
input tensor[2] cminmax;
//***** CONST INIT *****
  {
    globals.camEye = <tensor[3]>[0.e0,-0.2e1,0.e0];
    globals.camAt = <tensor[3]>[0.e0,0.e0,0.e0];
    globals.camUp = <tensor[3]>[0.e0,0.e0,0.1e1];
    globals.camNear = -0.4e1;
    globals.camFar = 0.4e1;
    globals.camFOV = 0.1e2;
    globals.camOrtho = false;
    globals.iresU = 100;
    globals.iresV = 100;
    globals.rayStep = 0.1e-3;
    globals.refStep = 0.1e-3;
    globals.transp0 = 0.5e-2;
    globals.thick = 0.1e-1;
    globals.fStrTh = 0.e0;
    globals.fMaskTh = 0.e0;
    globals.fBias = 0.1e0;
    globals.maxAlpha = 0.1e1;
    globals.light = false;
    globals.phong = <tensor[4]>[0.1e0,0.7e0,0.2e0,0.1e3];
    vec3{4} v_4 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    globals.mcNear = PACK(v_4);
    globals.mcFar = PACK(v_4);
    globals.litdir = <tensor[3]>[0.e0,-0.1e1,0.e0];
    globals.cminmax = <tensor[2]>[0.e0,0.e0];
  }
//***** GLOBALS *****
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camDist;
global real camVmax;
global real camUmax;
global real camNearVsp;
global real camFarVsp;
global tensor[3] litwsp;
global int _t;
global femData(Space) _tX;
global femData(FemFunc) _tXX;
//***** FUNCTIONS *****
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_9;
    l__t_9 = <femData(MeshCell)[]>{};
    for i__t_10 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.block),1) {
      l__t_9 = Append<femData(MeshCell),femData(MeshCell)>(l__t_9,LoadFem<femData(MeshCell)>(globals.block,i__t_10));
    }
    femData(FuncCell) l__t_11 = LoadFem<femData(FuncCell)>(LoadFem<femData(FemFunc)>(globals.0U04D9_intermedateGlobal,LoadFem<femData(Space)>(globals.0space04D7_intermedateGlobal,globals.block)),ExtractFemItem<int,CellIndex(MeshCell)>(Subscript<femData(MeshCell)[]>(l__t_9,globals.cellChoice)));
    femData(FemFunc) l__t_12 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_11);
    vec3{4} v_13 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_14 = Sqrt(VDot<3,4>(v_13,v_13));
    real l_op1_e3_l_9_15 = RDiv(0.1e1,l_op1_e3_l_7_14);
    vec3{4} v_16 = VScale<3,4>(l_op1_e3_l_9_15,v_13);
    globals.camN = PACK(v_16);
    real l_r_18 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_19 = RMul(0.e0,l_r_18);
    real l_r_20 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_21 = RMul(0.e0,l_r_20);
    real l_r_22 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_23 = RMul(0.e0,l_r_22);
    real l_r_24 = RAdd(l_r_19,l_r_21);
    real l_r_25 = RAdd(l_r_24,l_r_23);
    real l_vdot_26 = VDot<3,4>(v_13,VEC3{4}(l_r_25,RAdd(l_r_24,RMul(0.1e1,l_r_22)),RAdd(RAdd(l_r_19,RMul(-0.1e1,l_r_20)),l_r_23)));
    real l_vdot_27 = VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_24,RMul(-0.1e1,l_r_22)),l_r_25,RAdd(RAdd(RMul(0.1e1,l_r_18),l_r_21),l_r_23)));
    real l_vdot_28 = VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_19,RMul(0.1e1,l_r_20)),l_r_23),RAdd(RAdd(RMul(-0.1e1,l_r_18),l_r_21),l_r_23),l_r_25));
    vec3{4} v_29 = VEC3{4}(l_vdot_26,l_vdot_27,l_vdot_28);
    real l_op1_e3_l_38_30 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_15,l_op1_e3_l_9_15),VDot<3,4>(v_29,v_29))));
    vec3{4} v_31 = VScale<3,4>(l_op1_e3_l_38_30,VScale<3,4>(l_op1_e3_l_9_15,v_29));
    globals.camU = PACK(v_31);
    real l_r_33 = RMul(0.e0,l_vdot_26);
    real l_r_34 = RMul(0.e0,l_vdot_27);
    real l_r_35 = RMul(0.e0,l_vdot_28);
    real l_r_36 = RAdd(l_r_33,l_r_34);
    real l_r_37 = RAdd(l_r_36,l_r_35);
    vec3{4} v_38 = VScale<3,4>(l_op1_e3_l_9_15,VEC3{4}(VDot<3,4>(v_13,VEC3{4}(l_r_37,RAdd(l_r_36,RMul(0.1e1,l_vdot_28)),RAdd(RAdd(l_r_33,RMul(-0.1e1,l_vdot_27)),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(l_r_36,RMul(-0.1e1,l_vdot_28)),l_r_37,RAdd(RAdd(RMul(0.1e1,l_vdot_26),l_r_34),l_r_35))),VDot<3,4>(v_13,VEC3{4}(RAdd(RAdd(l_r_33,RMul(0.1e1,l_vdot_27)),l_r_35),RAdd(RAdd(RMul(-0.1e1,l_vdot_26),l_r_34),l_r_35),l_r_37))));
    real l_r_39 = RMul(l_op1_e3_l_9_15,l_op1_e3_l_38_30);
    real l_r_40 = RMul(l_r_39,VIndex<3,4,0>(v_38));
    real l_r_41 = RMul(l_r_39,VIndex<3,4,1>(v_38));
    real l_r_42 = RMul(l_r_39,VIndex<3,4,2>(v_38));
    globals.camV = <tensor[3]>[l_r_40,l_r_41,l_r_42];
    globals.camDist = l_op1_e3_l_7_14;
    real l_op1_e3_l_10_44 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_44,l_op1_e3_l_7_14);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_44),l_op1_e3_l_7_14),IntToReal(globals.iresV));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_7_14);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_7_14);
    real l_r_45 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.litdir));
    real l_r_46 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.litdir));
    real l_r_47 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.litdir));
    globals.litwsp = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.litdir)),LOAD_0(TensorRef<[3]>(globals.litdir))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_31),l_r_45),RMul(l_r_40,l_r_46)),RMul(VIndex<3,4,0>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_31),l_r_45),RMul(l_r_41,l_r_46)),RMul(VIndex<3,4,1>(v_16),l_r_47)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_31),l_r_45),RMul(l_r_42,l_r_46)),RMul(VIndex<3,4,2>(v_16),l_r_47)))));
    globals._t = ExtractFemItem<int,CellIndex(FuncCell)>(l__t_11);
    globals._tX = ExtractFem<femData(Space),femData(FemFunc)>(l__t_12);
    globals._tXX = l__t_12;
  }
//***** STRAND *****
strand ray (int p_ui_49,int p_vi_50) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] UV;
  tensor[3] rayOrig;
  tensor[3] rayVec;
  real alphaFix;
  tensor[3] eyeDir;
  real phKa;
  real phKd;
  real phKs;
  real phSp;
  varying output tensor[4] rgba;
  output real raw;
  varying tensor[3] rgb;
  varying real transp;
  initialize (globals) {
    vec3{4} v_59;
    vec3{4} v_57;
    real l_op1_e3_l_9_51 = RNeg(globals.camUmax);
    real l_rayU_52 = RAdd(l_op1_e3_l_9_51,RMul(RDiv(RSub(IntToReal(p_ui_49),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_51)));
    real l_op1_e3_l_9_53 = RNeg(globals.camVmax);
    real l_rayV_54 = RAdd(l_op1_e3_l_9_53,RMul(RDiv(RSub(IntToReal(p_vi_50),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_53)));
    vec3{4} v_55 = VAdd<3,4>(VScale<3,4>(l_rayU_52,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_54,LOAD_0(TensorRef<[3]>(globals.camV))));
    vec3{4} v_56 = v_55;
    if (globals.camOrtho) {
      v_57 = v_56;
    } else {
      v_57 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_58 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_57);
    if (globals.camOrtho) {
      v_59 = VEC3{4}(0.e0,0.e0,0.e0);
    } else {
      real l_r_60 = RDiv(0.1e1,globals.camDist);
      v_59 = VEC3{4}(RMul(l_r_60,VIndex<3,4,0>(v_56)),RMul(l_r_60,VIndex<3,4,1>(v_56)),RMul(l_r_60,VIndex<3,4,2>(v_56)));
    }
    vec3{4} v_61 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),v_59);
    real l_op1_e3_l_7_62 = Sqrt(VDot<3,4>(v_61,v_61));
    self.rayU = l_rayU_52;
    self.rayV = l_rayV_54;
    self.rayN = globals.camNearVsp;
    self.UV = PACK(v_56);
    self.rayOrig = PACK(v_58);
    self.rayVec = PACK(v_61);
    self.alphaFix = RDiv(RMul(globals.rayStep,l_op1_e3_l_7_62),globals.refStep);
    self.eyeDir = PACK(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,l_op1_e3_l_7_62),v_61)));
    self.phKa = TensorIndex<&tensor[4],[0]>(TensorRef<[4]>(globals.phong));
    self.phKd = TensorIndex<&tensor[4],[1]>(TensorRef<[4]>(globals.phong));
    self.phKs = TensorIndex<&tensor[4],[2]>(TensorRef<[4]>(globals.phong));
    self.phSp = TensorIndex<&tensor[4],[3]>(TensorRef<[4]>(globals.phong));
    self.rgba = <tensor[4]>[0.e0,0.e0,0.e0,0.e0];
    self.raw = 0.e0;
    self.rgb = <tensor[3]>[0.e0,0.e0,0.e0];
    self.transp = 0.1e1;
  }
  update (globals) {
    real l_transp_1480;
    vec3{4} v_1412;
    real l_scomp_1307;
    bool l__t_631;
    real l_rayN_69 = RAdd(self.rayN,globals.rayStep);
    if (GT<real>(l_rayN_69,globals.camFarVsp)) {
      self.rayN = l_rayN_69;
      stabilize;
    }
    vec3{4} v_70 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_69,LOAD_0(TensorRef<[3]>(self.rayVec))));
    tensor[3] _arg_71 = PACK(v_70);
    vec3{4} v_72 = v_70;
    if (ExtractFemItemN<[femData(Mesh),tensor[3],real],bool,InsideInsert(File=checkInside.in)(Mesh),"","",[],int>(ExtractFemItem<femData(RefCell),RefCell(Mesh)>(globals.block),_arg_71,0.1e-8)) {
      bool l__t_630;
      int l_mulRes_73 = IMul(globals._t,84);
      int t_74 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_73);
      int t_75 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,1));
      int t_76 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,2));
      int t_77 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,3));
      int t_78 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,4));
      int t_79 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,5));
      int t_80 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,6));
      int t_81 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,7));
      int t_82 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,8));
      int t_83 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,9));
      int t_84 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,10));
      int t_85 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,11));
      int t_86 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,12));
      int t_87 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,13));
      int t_88 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,14));
      int t_89 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,15));
      int t_90 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,16));
      int t_91 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,17));
      int t_92 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,18));
      int t_93 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,19));
      int t_94 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,20));
      int t_95 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,21));
      int t_96 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,22));
      int t_97 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,23));
      int t_98 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,24));
      int t_99 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,25));
      int t_100 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,26));
      int t_101 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,27));
      int t_102 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,28));
      int t_103 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,29));
      int t_104 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,30));
      int t_105 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,31));
      int t_106 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,32));
      int t_107 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,33));
      int t_108 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,34));
      int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,35));
      int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,36));
      int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,37));
      int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,38));
      int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,39));
      int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,40));
      int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,41));
      int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,42));
      int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,43));
      int t_118 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,44));
      int t_119 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,45));
      int t_120 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,46));
      int t_121 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,47));
      int t_122 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,48));
      int t_123 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,49));
      int t_124 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,50));
      int t_125 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,51));
      int t_126 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,52));
      int t_127 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,53));
      int t_128 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,54));
      int t_129 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,55));
      int t_130 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,56));
      int t_131 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,57));
      int t_132 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,58));
      int t_133 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,59));
      int t_134 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,60));
      int t_135 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,61));
      int t_136 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,62));
      int t_137 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,63));
      int t_138 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,64));
      int t_139 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,65));
      int t_140 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,66));
      int t_141 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,67));
      int t_142 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,68));
      int t_143 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,69));
      int t_144 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,70));
      int t_145 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,71));
      int t_146 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,72));
      int t_147 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,73));
      int t_148 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,74));
      int t_149 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,75));
      int t_150 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,76));
      int t_151 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,77));
      int t_152 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,78));
      int t_153 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,79));
      int t_154 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,80));
      int t_155 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,81));
      int t_156 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,82));
      int t_157 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_73,83));
      real t_158 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_157));
      real t_159 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_156));
      real t_160 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_155));
      real t_161 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_154));
      real t_162 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_153));
      real t_163 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_152));
      real t_164 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_151));
      real t_165 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_150));
      real t_166 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_149));
      real t_167 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_148));
      real t_168 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_147));
      real t_169 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_146));
      real t_170 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_145));
      real t_171 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_144));
      real t_172 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_143));
      real t_173 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_142));
      real t_174 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_141));
      real t_175 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_140));
      real t_176 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_139));
      real t_177 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_138));
      real t_178 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_137));
      real t_179 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_136));
      real t_180 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_135));
      real t_181 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_134));
      real t_182 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_133));
      real t_183 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_132));
      real t_184 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_131));
      real t_185 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_130));
      real t_186 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_129));
      real t_187 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_128));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_127));
      real t_189 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_126));
      real t_190 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_125));
      real t_191 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_124));
      real t_192 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_123));
      real t_193 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_122));
      real t_194 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_121));
      real t_195 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_120));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_119));
      real t_197 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_118));
      real t_198 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_117));
      real t_199 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_116));
      real t_200 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_115));
      real t_201 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_114));
      real t_202 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_113));
      real t_203 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_112));
      real t_204 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_111));
      real t_205 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_110));
      real t_206 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_109));
      real t_207 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_108));
      real t_208 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_107));
      real t_209 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_106));
      real t_210 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_105));
      real t_211 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_104));
      real t_212 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_103));
      real t_213 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_102));
      real t_214 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_101));
      real t_215 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_100));
      real t_216 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_99));
      real t_217 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_98));
      real t_218 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_97));
      real t_219 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_96));
      real t_220 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_95));
      real t_221 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_94));
      real t_222 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_93));
      real t_223 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_92));
      real t_224 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_91));
      real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_90));
      real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_89));
      real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_88));
      real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_87));
      real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_86));
      real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_85));
      real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_84));
      real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_83));
      real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_82));
      real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_81));
      real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_80));
      real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_79));
      real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_78));
      real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_77));
      real t_239 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_76));
      real t_240 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_75));
      real t_241 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_74));
      vec4 v_242 = VEC4(t_241,t_240,t_239,t_238);
      vec4 v_243 = VEC4(t_237,t_236,t_235,t_234);
      vec4 v_244 = VEC4(t_233,t_232,t_231,t_230);
      vec4 v_245 = VEC4(t_229,t_228,t_227,t_226);
      vec4 v_246 = VEC4(t_225,t_224,t_223,t_222);
      vec4 v_247 = VEC4(t_221,t_220,t_219,t_218);
      vec4 v_248 = VEC4(t_217,t_216,t_215,t_214);
      vec4 v_249 = VEC4(t_213,t_212,t_211,t_210);
      vec4 v_250 = VEC4(t_209,t_208,t_207,t_206);
      vec4 v_251 = VEC4(t_205,t_204,t_203,t_202);
      vec4 v_252 = VEC4(t_201,t_200,t_199,t_198);
      vec4 v_253 = VEC4(t_197,t_196,t_195,t_194);
      vec4 v_254 = VEC4(t_193,t_192,t_191,t_190);
      vec4 v_255 = VEC4(t_189,t_188,t_187,t_186);
      vec4 v_256 = VEC4(t_185,t_184,t_183,t_182);
      vec4 v_257 = VEC4(t_181,t_180,t_179,t_178);
      vec4 v_258 = VEC4(t_177,t_176,t_175,t_174);
      vec4 v_259 = VEC4(t_173,t_172,t_171,t_170);
      vec4 v_260 = VEC4(t_169,t_168,t_167,t_166);
      vec4 v_261 = VEC4(t_165,t_164,t_163,t_162);
      vec4 v_262 = VEC4(t_161,t_160,t_159,t_158);
      real l_varAcc_263 = VIndex<3,4,0>(v_72);
      real l_varAcc_264 = VIndex<3,4,1>(v_72);
      real l_varAcc_265 = VIndex<3,4,2>(v_72);
      real l_prod_266 = RMul(0.1e1,0.1e1);
      real l_prod_267 = RMul(0.1e1,l_prod_266);
      real l_basisEval_268 = RMul(0.2e1,l_prod_267);
      real l_prod_269 = RMul(0.1e1,l_varAcc_265);
      real l_prod_270 = RMul(0.1e1,l_prod_269);
      real l_basisEval_271 = RMul(0.2e1,l_prod_270);
      real l_prod_272 = RMul(l_varAcc_264,0.1e1);
      real l_prod_273 = RMul(0.1e1,l_prod_272);
      real l_basisEval_274 = RMul(0.2e1,l_prod_273);
      real l_prod_275 = RMul(l_varAcc_263,l_prod_266);
      real l_basisEval_276 = RMul(0.6e1,l_prod_275);
      real l_prod2_277 = RMul(l_varAcc_265,l_varAcc_265);
      real l_prod_278 = RMul(0.1e1,l_prod2_277);
      real l_prod_279 = RMul(0.1e1,l_prod_278);
      real l_basisEval_280 = RMul(0.2e1,l_prod_279);
      real l_prod_281 = RMul(l_varAcc_264,l_varAcc_265);
      real l_prod_282 = RMul(0.1e1,l_prod_281);
      real l_basisEval_283 = RMul(0.2e1,l_prod_282);
      real l_prod2_284 = RMul(l_varAcc_264,l_varAcc_264);
      real l_prod_285 = RMul(l_prod2_284,0.1e1);
      real l_prod_286 = RMul(0.1e1,l_prod_285);
      real l_basisEval_287 = RMul(0.2e1,l_prod_286);
      real l_prod_288 = RMul(l_varAcc_263,l_prod_269);
      real l_basisEval_289 = RMul(0.6e1,l_prod_288);
      real l_prod_290 = RMul(l_varAcc_263,l_prod_272);
      real l_basisEval_291 = RMul(0.6e1,l_prod_290);
      real l_prod2_292 = RMul(l_varAcc_263,l_varAcc_263);
      real l_prod_293 = RMul(l_prod2_292,l_prod_266);
      real l_basisEval_294 = RMul(0.12e2,l_prod_293);
      real l_prod3_295 = RMul(l_prod2_277,l_varAcc_265);
      real l_prod_296 = RMul(0.1e1,l_prod3_295);
      real l_prod_297 = RMul(0.1e1,l_prod_296);
      real l_basisEval_298 = RMul(0.2e1,l_prod_297);
      real l_prod_299 = RMul(l_varAcc_264,l_prod2_277);
      real l_prod_300 = RMul(0.1e1,l_prod_299);
      real l_basisEval_301 = RMul(0.2e1,l_prod_300);
      real l_prod_302 = RMul(l_prod2_284,l_varAcc_265);
      real l_prod_303 = RMul(0.1e1,l_prod_302);
      real l_basisEval_304 = RMul(0.2e1,l_prod_303);
      real l_prod3_305 = RMul(l_prod2_284,l_varAcc_264);
      real l_prod_306 = RMul(l_prod3_305,0.1e1);
      real l_prod_307 = RMul(0.1e1,l_prod_306);
      real l_basisEval_308 = RMul(0.2e1,l_prod_307);
      real l_prod_309 = RMul(l_varAcc_263,l_prod_278);
      real l_basisEval_310 = RMul(0.6e1,l_prod_309);
      real l_prod_311 = RMul(l_varAcc_263,l_prod_281);
      real l_basisEval_312 = RMul(0.6e1,l_prod_311);
      real l_prod_313 = RMul(l_varAcc_263,l_prod_285);
      real l_basisEval_314 = RMul(0.6e1,l_prod_313);
      real l_prod_315 = RMul(l_prod2_292,l_prod_269);
      real l_basisEval_316 = RMul(0.12e2,l_prod_315);
      real l_prod_317 = RMul(l_prod2_292,l_prod_272);
      real l_basisEval_318 = RMul(0.12e2,l_prod_317);
      real l_prod3_319 = RMul(l_prod2_292,l_varAcc_263);
      real l_prod_320 = RMul(l_prod3_319,l_prod_266);
      real l_basisEval_321 = RMul(0.20e2,l_prod_320);
      real l_prod4_322 = RMul(l_prod3_295,l_varAcc_265);
      real l_prod_323 = RMul(0.1e1,l_prod4_322);
      real l_prod_324 = RMul(0.1e1,l_prod_323);
      real l_basisEval_325 = RMul(0.2e1,l_prod_324);
      real l_prod_326 = RMul(l_varAcc_264,l_prod3_295);
      real l_prod_327 = RMul(0.1e1,l_prod_326);
      real l_basisEval_328 = RMul(0.2e1,l_prod_327);
      real l_prod_329 = RMul(l_prod2_284,l_prod2_277);
      real l_prod_330 = RMul(0.1e1,l_prod_329);
      real l_prod_331 = RMul(l_prod3_305,l_varAcc_265);
      real l_prod_332 = RMul(0.1e1,l_prod_331);
      real l_basisEval_333 = RMul(0.2e1,l_prod_332);
      real l_prod4_334 = RMul(l_prod3_305,l_varAcc_264);
      real l_prod_335 = RMul(l_prod4_334,0.1e1);
      real l_prod_336 = RMul(0.1e1,l_prod_335);
      real l_basisEval_337 = RMul(0.2e1,l_prod_336);
      real l_prod_338 = RMul(l_varAcc_263,l_prod_296);
      real l_prod_339 = RMul(l_varAcc_263,l_prod_299);
      real l_basisEval_340 = RMul(0.6e1,l_prod_339);
      real l_prod_341 = RMul(l_varAcc_263,l_prod_302);
      real l_basisEval_342 = RMul(0.6e1,l_prod_341);
      real l_prod_343 = RMul(l_varAcc_263,l_prod_306);
      real l_prod_344 = RMul(l_prod2_292,l_prod_278);
      real l_basisEval_345 = RMul(0.12e2,l_prod_344);
      real l_prod_346 = RMul(l_prod2_292,l_prod_281);
      real l_prod_347 = RMul(l_prod2_292,l_prod_285);
      real l_basisEval_348 = RMul(0.12e2,l_prod_347);
      real l_prod_349 = RMul(l_prod3_319,l_prod_269);
      real l_prod_350 = RMul(l_prod3_319,l_prod_272);
      real l_prod4_351 = RMul(l_prod3_319,l_varAcc_263);
      real l_prod_352 = RMul(l_prod4_351,l_prod_266);
      real l_basisEval_353 = RMul(0.1e1,l_prod_267);
      real l_basisEval_354 = RMul(0.1e1,l_prod_270);
      real l_basisEval_355 = RMul(0.2e1,l_prod_275);
      real l_basisEval_356 = RMul(0.1e1,l_prod_279);
      real l_basisEval_357 = RMul(0.3e1,l_prod_286);
      real l_basisEval_358 = RMul(0.2e1,l_prod_288);
      real l_basisEval_359 = RMul(0.4e1,l_prod_290);
      real l_basisEval_360 = RMul(0.3e1,l_prod_293);
      real l_basisEval_361 = RMul(0.1e1,l_prod_297);
      real l_basisEval_362 = RMul(0.3e1,l_prod_303);
      real l_basisEval_363 = RMul(0.4e1,l_prod_307);
      real l_basisEval_364 = RMul(0.2e1,l_prod_309);
      real l_basisEval_365 = RMul(0.4e1,l_prod_311);
      real l_basisEval_366 = RMul(0.3e1,l_prod_315);
      real l_basisEval_367 = RMul(0.6e1,l_prod_317);
      real l_basisEval_368 = RMul(0.4e1,l_prod_320);
      real l_basisEval_369 = RMul(0.1e1,l_prod_324);
      real l_basisEval_370 = RMul(0.3e1,l_prod_330);
      real l_basisEval_371 = RMul(0.4e1,l_prod_332);
      real l_basisEval_372 = RMul(0.5e1,l_prod_336);
      real l_basisEval_373 = RMul(0.2e1,l_prod_338);
      real l_basisEval_374 = RMul(0.3e1,l_prod_344);
      real l_basisEval_375 = RMul(0.6e1,l_prod_346);
      real l_basisEval_376 = RMul(0.4e1,l_prod_349);
      real l_basisEval_377 = RMul(0.5e1,l_prod_352);
      real l_basisEval_378 = RMul(0.1e1,l_prod_273);
      real l_basisEval_379 = RMul(0.3e1,l_prod_279);
      real l_basisEval_380 = RMul(0.1e1,l_prod_286);
      real l_basisEval_381 = RMul(0.4e1,l_prod_288);
      real l_basisEval_382 = RMul(0.2e1,l_prod_290);
      real l_basisEval_383 = RMul(0.4e1,l_prod_297);
      real l_basisEval_384 = RMul(0.3e1,l_prod_300);
      real l_basisEval_385 = RMul(0.1e1,l_prod_307);
      real l_basisEval_386 = RMul(0.2e1,l_prod_313);
      real l_basisEval_387 = RMul(0.6e1,l_prod_315);
      real l_basisEval_388 = RMul(0.3e1,l_prod_317);
      real l_basisEval_389 = RMul(0.5e1,l_prod_324);
      real l_basisEval_390 = RMul(0.4e1,l_prod_327);
      real l_basisEval_391 = RMul(0.1e1,l_prod_336);
      real l_basisEval_392 = RMul(0.2e1,l_prod_343);
      real l_basisEval_393 = RMul(0.3e1,l_prod_347);
      real l_basisEval_394 = RMul(0.4e1,l_prod_350);
      real l_basisEval_395 = RMul(0.6e1,l_prod_273);
      real l_basisEval_396 = RMul(0.6e1,l_prod_282);
      real l_basisEval_397 = RMul(0.12e2,l_prod_286);
      real l_basisEval_398 = RMul(0.2e1,l_prod_293);
      real l_basisEval_399 = RMul(0.6e1,l_prod_300);
      real l_basisEval_400 = RMul(0.12e2,l_prod_303);
      real l_basisEval_401 = RMul(0.20e2,l_prod_307);
      real l_basisEval_402 = RMul(0.12e2,l_prod_313);
      real l_basisEval_403 = RMul(0.2e1,l_prod_315);
      real l_basisEval_404 = RMul(0.2e1,l_prod_320);
      real l_basisEval_405 = RMul(0.12e2,l_prod_330);
      real l_basisEval_406 = RMul(0.2e1,l_prod_349);
      real l_basisEval_407 = RMul(0.2e1,l_prod_352);
      real l_basisEval_408 = RMul(0.1e1,l_prod_275);
      real l_basisEval_409 = RMul(0.4e1,l_prod_282);
      real l_basisEval_410 = RMul(0.1e1,l_prod_293);
      real l_basisEval_411 = RMul(0.6e1,l_prod_303);
      real l_basisEval_412 = RMul(0.3e1,l_prod_309);
      real l_basisEval_413 = RMul(0.3e1,l_prod_313);
      real l_basisEval_414 = RMul(0.2e1,l_prod_317);
      real l_basisEval_415 = RMul(0.1e1,l_prod_320);
      real l_basisEval_416 = RMul(0.4e1,l_prod_338);
      real l_basisEval_417 = RMul(0.4e1,l_prod_343);
      real l_basisEval_418 = RMul(0.2e1,l_prod_350);
      real l_basisEval_419 = RMul(0.1e1,l_prod_352);
      real l_basisEval_420 = RMul(0.6e1,l_prod_270);
      real l_basisEval_421 = RMul(0.12e2,l_prod_279);
      real l_basisEval_422 = RMul(0.20e2,l_prod_297);
      real l_basisEval_423 = RMul(0.12e2,l_prod_300);
      real l_basisEval_424 = RMul(0.12e2,l_prod_309);
      real l_vdot_425 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_271,l_basisEval_274,l_basisEval_276)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_280,l_basisEval_283,l_basisEval_287)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_289,l_basisEval_291,l_basisEval_294,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_298,l_basisEval_301)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_304,l_basisEval_308,l_basisEval_310,l_basisEval_312)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_314,l_basisEval_316,l_basisEval_318,l_basisEval_321)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_325,l_basisEval_328,RMul(0.2e1,l_prod_330))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_333,l_basisEval_337,RMul(0.6e1,l_prod_338),l_basisEval_340)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_342,RMul(0.6e1,l_prod_343),l_basisEval_345,RMul(0.12e2,l_prod_346))),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_348,RMul(0.20e2,l_prod_349),RMul(0.20e2,l_prod_350),RMul(0.30e2,l_prod_352))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_426 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_353,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,0.e0,l_basisEval_354)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_274,0.e0,l_basisEval_355,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_356,l_basisEval_283)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_357,0.e0,l_basisEval_358,l_basisEval_359)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_360,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_361,l_basisEval_301)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_362,l_basisEval_363,0.e0,l_basisEval_364)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_365,l_basisEval_314,0.e0,l_basisEval_366)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_367,0.e0,l_basisEval_368,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_369,l_basisEval_328,l_basisEval_370,l_basisEval_371)),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_372,0.e0,l_basisEval_373,RMul(0.4e1,l_prod_339))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_342,RMul(0.8e1,l_prod_343),0.e0,l_basisEval_374)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_375,RMul(0.9e1,l_prod_347),0.e0,l_basisEval_376)),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.8e1,l_prod_350),0.e0,l_basisEval_377,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_427 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_378)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_355,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_379,l_basisEval_283,l_basisEval_380)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_381,l_basisEval_382,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_360,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_383,l_basisEval_384,l_basisEval_304)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_385,0.e0,l_basisEval_310,l_basisEval_365)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_386,0.e0,l_basisEval_387,l_basisEval_388)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_368,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_390,l_basisEval_370,l_basisEval_333,l_basisEval_391)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.8e1,l_prod_338),l_basisEval_340,RMul(0.4e1,l_prod_341))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_392,0.e0,RMul(0.9e1,l_prod_344),l_basisEval_375)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_393,0.e0,RMul(0.8e1,l_prod_349),l_basisEval_394)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_377,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_428 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_271,l_basisEval_395,0.e0,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_355,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,l_basisEval_280,l_basisEval_396)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_397,0.e0,0.e0,l_basisEval_358)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_291,0.e0,0.e0,l_basisEval_398)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,l_basisEval_298,l_basisEval_399,l_basisEval_400)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_401,0.e0,0.e0,l_basisEval_364)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_312,l_basisEval_402,0.e0,0.e0)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_403,l_basisEval_367,0.e0,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_404,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,l_basisEval_325,RMul(0.6e1,l_prod_327))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_405,RMul(0.20e2,l_prod_332),RMul(0.30e2,l_prod_336),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(0.e0,l_basisEval_373,l_basisEval_340,RMul(0.12e2,l_prod_341))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.20e2,l_prod_343),0.e0,0.e0,RMul(0.2e1,l_prod_344))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_375,l_basisEval_348,0.e0,0.e0)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_406,RMul(0.6e1,l_prod_350),0.e0,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(l_basisEval_407,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_429 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_353,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_274,0.e0,0.e0,l_basisEval_408)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_379,l_basisEval_409,l_basisEval_357)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,0.e0,l_basisEval_358,l_basisEval_382)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,0.e0,l_basisEval_410,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_383,l_basisEval_399,l_basisEval_411,l_basisEval_363)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,0.e0,l_basisEval_412,l_basisEval_365)),RAdd(VDot<4,4>(v_253,VEC4(l_basisEval_413,0.e0,0.e0,l_basisEval_403)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_414,0.e0,0.e0,l_basisEval_415)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_389,RMul(0.8e1,l_prod_327),RMul(0.9e1,l_prod_330))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.8e1,l_prod_332),l_basisEval_372,0.e0,0.e0)),RAdd(VDot<4,4>(v_258,VEC4(l_basisEval_416,l_basisEval_340,l_basisEval_342,l_basisEval_417)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,0.e0,l_basisEval_374,RMul(0.4e1,l_prod_346))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_393,0.e0,0.e0,l_basisEval_406)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_418,0.e0,0.e0,l_basisEval_419)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      real l_vdot_430 = RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_420,l_basisEval_274)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_355,0.e0)),RAdd(VDot<4,4>(v_246,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_421,l_basisEval_396,l_basisEval_287,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_289,l_basisEval_382,0.e0)),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_398,0.e0,0.e0)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,0.e0,0.e0,l_basisEval_422)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_423,l_basisEval_411,l_basisEval_308,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_424,l_basisEval_312,l_basisEval_386)),RAdd(VDot<4,4>(v_253,VEC4(0.e0,0.e0,l_basisEval_387,l_basisEval_414)),RAdd(VDot<4,4>(v_254,VEC4(0.e0,0.e0,l_basisEval_404,0.e0)),RAdd(VDot<4,4>(v_255,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.30e2,l_prod_324),RMul(0.20e2,l_prod_327),l_basisEval_405,RMul(0.6e1,l_prod_332))),RAdd(VDot<4,4>(v_257,VEC4(l_basisEval_337,0.e0,0.e0,RMul(0.20e2,l_prod_338))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.12e2,l_prod_339),l_basisEval_342,l_basisEval_392,0.e0)),RAdd(VDot<4,4>(v_259,VEC4(0.e0,l_basisEval_345,l_basisEval_375,RMul(0.2e1,l_prod_347))),RAdd(VDot<4,4>(v_260,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_349),l_basisEval_418)),RAdd(VDot<4,4>(v_261,VEC4(0.e0,0.e0,l_basisEval_407,0.e0)),RAdd(VDot<4,4>(v_262,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
      tensor[3,3] t_431 = <tensor[3,3]>[l_vdot_425,l_vdot_426,l_vdot_427,l_vdot_426,l_vdot_428,l_vdot_429,l_vdot_427,l_vdot_429,l_vdot_430];
      real[3] l__t_432 = EigenVals3x3(TensorRef<[3,3]>(t_431));
      real l_basisEval_433 = RMul(0.2e1,l_prod_311);
      real l_basisEval_434 = RMul(0.2e1,l_prod_339);
      real l_basisEval_435 = RMul(0.2e1,l_prod_341);
      real l_prod_436 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_322,l_varAcc_265)));
      real l_basisEval_437 = RMul(0.1e1,l_prod_436);
      real l_prod_438 = RMul(0.1e1,RMul(l_varAcc_264,l_prod4_322));
      real l_prod_439 = RMul(0.1e1,RMul(l_prod2_284,l_prod3_295));
      real l_prod_440 = RMul(0.1e1,RMul(l_prod3_305,l_prod2_277));
      real l_prod_441 = RMul(0.1e1,RMul(l_prod4_334,l_varAcc_265));
      real l_prod_442 = RMul(0.1e1,RMul(RMul(l_prod4_334,l_varAcc_264),0.1e1));
      real l_basisEval_443 = RMul(0.1e1,l_prod_442);
      real l_prod_444 = RMul(l_varAcc_263,l_prod_323);
      real l_prod_445 = RMul(l_varAcc_263,l_prod_326);
      real l_basisEval_446 = RMul(0.2e1,l_prod_445);
      real l_prod_447 = RMul(l_varAcc_263,l_prod_329);
      real l_prod_448 = RMul(l_varAcc_263,l_prod_331);
      real l_basisEval_449 = RMul(0.2e1,l_prod_448);
      real l_prod_450 = RMul(l_varAcc_263,l_prod_335);
      real l_prod_451 = RMul(l_prod2_292,l_prod_296);
      real l_prod_452 = RMul(l_prod2_292,l_prod_299);
      real l_basisEval_453 = RMul(0.3e1,l_prod_452);
      real l_prod_454 = RMul(l_prod2_292,l_prod_302);
      real l_basisEval_455 = RMul(0.3e1,l_prod_454);
      real l_prod_456 = RMul(l_prod2_292,l_prod_306);
      real l_prod_457 = RMul(l_prod3_319,l_prod_278);
      real l_prod_458 = RMul(l_prod3_319,l_prod_281);
      real l_prod_459 = RMul(l_prod3_319,l_prod_285);
      real l_prod_460 = RMul(l_prod4_351,l_prod_269);
      real l_prod_461 = RMul(l_prod4_351,l_prod_272);
      real l_prod_462 = RMul(RMul(l_prod4_351,l_varAcc_263),l_prod_266);
      real l_basisEval_463 = RMul(0.2e1,l_prod_346);
      real l_basisEval_464 = RMul(0.3e1,l_prod_447);
      real l_basisEval_465 = RMul(0.2e1,l_prod_458);
      real l_basisEval_466 = RMul(0.1e1,l_prod_462);
      real l_vdot_467 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,0.e0,0.e0,l_basisEval_354)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_378,l_basisEval_355,0.e0,0.e0)),RAdd(VDot<4,4>(v_245,VEC4(0.e0,0.e0,l_basisEval_356,RMul(0.1e1,l_prod_282))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_380,l_basisEval_358,l_basisEval_382,l_basisEval_360)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_361,RMul(0.1e1,l_prod_300),RMul(0.1e1,l_prod_303))),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_385,l_basisEval_364,l_basisEval_433,l_basisEval_386)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_366,l_basisEval_388,l_basisEval_368,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_369,RMul(0.1e1,l_prod_327),RMul(0.1e1,l_prod_330))),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_332),l_basisEval_391,l_basisEval_373,l_basisEval_434)),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_435,l_basisEval_392,l_basisEval_374,RMul(0.3e1,l_prod_346))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_393,l_basisEval_376,l_basisEval_394,l_basisEval_377)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_257,VEC4(0.e0,0.e0,0.e0,l_basisEval_437)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_438),RMul(0.1e1,l_prod_439),RMul(0.1e1,l_prod_440),RMul(0.1e1,l_prod_441))),RAdd(VDot<4,4>(v_259,VEC4(l_basisEval_443,RMul(0.2e1,l_prod_444),l_basisEval_446,RMul(0.2e1,l_prod_447))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_449,RMul(0.2e1,l_prod_450),RMul(0.3e1,l_prod_451),l_basisEval_453)),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_455,RMul(0.3e1,l_prod_456),RMul(0.4e1,l_prod_457),RMul(0.4e1,l_prod_458))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.4e1,l_prod_459),RMul(0.5e1,l_prod_460),RMul(0.5e1,l_prod_461),RMul(0.6e1,l_prod_462))),VDot<4,4>(v_242,VEC4(0.e0,0.e0,0.e0,l_basisEval_353))))))))))))))))))))));
      real l_vdot_468 = RAdd(VDot<4,4>(v_243,VEC4(0.e0,l_basisEval_354,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_244,VEC4(l_basisEval_408,0.e0,0.e0,l_basisEval_356)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_283,l_basisEval_357,0.e0,RMul(0.1e1,l_prod_288))),RAdd(VDot<4,4>(v_246,VEC4(l_basisEval_382,0.e0,l_basisEval_410,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(0.e0,l_basisEval_361,l_basisEval_301,l_basisEval_362)),RAdd(VDot<4,4>(v_248,VEC4(l_basisEval_363,0.e0,RMul(0.1e1,l_prod_309),l_basisEval_433)),RAdd(VDot<4,4>(v_249,VEC4(l_basisEval_413,0.e0,RMul(0.1e1,l_prod_315),l_basisEval_414)),RAdd(VDot<4,4>(v_250,VEC4(0.e0,l_basisEval_415,0.e0,0.e0)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_369,l_basisEval_328,l_basisEval_370,l_basisEval_371)),RAdd(VDot<4,4>(v_252,VEC4(l_basisEval_372,0.e0,RMul(0.1e1,l_prod_338),l_basisEval_434)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.3e1,l_prod_341),l_basisEval_417,0.e0,RMul(0.1e1,l_prod_344))),RAdd(VDot<4,4>(v_254,VEC4(l_basisEval_463,l_basisEval_393,0.e0,RMul(0.1e1,l_prod_349))),RAdd(VDot<4,4>(v_255,VEC4(l_basisEval_418,0.e0,l_basisEval_419,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(0.e0,l_basisEval_437,RMul(0.2e1,l_prod_438),RMul(0.3e1,l_prod_439))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.4e1,l_prod_440),RMul(0.5e1,l_prod_441),RMul(0.6e1,l_prod_442),0.e0)),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.1e1,l_prod_444),l_basisEval_446,l_basisEval_464,RMul(0.4e1,l_prod_448))),RAdd(VDot<4,4>(v_259,VEC4(RMul(0.5e1,l_prod_450),0.e0,RMul(0.1e1,l_prod_451),RMul(0.2e1,l_prod_452))),RAdd(VDot<4,4>(v_260,VEC4(l_basisEval_455,RMul(0.4e1,l_prod_456),0.e0,RMul(0.1e1,l_prod_457))),RAdd(VDot<4,4>(v_261,VEC4(l_basisEval_465,RMul(0.3e1,l_prod_459),0.e0,RMul(0.1e1,l_prod_460))),RAdd(VDot<4,4>(v_262,VEC4(RMul(0.2e1,l_prod_461),0.e0,l_basisEval_466,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,0.e0,l_basisEval_353,0.e0))))))))))))))))))))));
      real l_vdot_469 = RAdd(VDot<4,4>(v_243,VEC4(l_basisEval_271,l_basisEval_378,0.e0,l_basisEval_408)),RAdd(VDot<4,4>(v_244,VEC4(0.e0,0.e0,l_basisEval_379,l_basisEval_283)),RAdd(VDot<4,4>(v_245,VEC4(l_basisEval_380,0.e0,l_basisEval_358,RMul(0.1e1,l_prod_290))),RAdd(VDot<4,4>(v_246,VEC4(0.e0,l_basisEval_410,0.e0,0.e0)),RAdd(VDot<4,4>(v_247,VEC4(l_basisEval_383,l_basisEval_384,l_basisEval_304,l_basisEval_385)),RAdd(VDot<4,4>(v_248,VEC4(0.e0,l_basisEval_412,l_basisEval_433,RMul(0.1e1,l_prod_313))),RAdd(VDot<4,4>(v_249,VEC4(0.e0,l_basisEval_403,RMul(0.1e1,l_prod_317),0.e0)),RAdd(VDot<4,4>(v_250,VEC4(l_basisEval_415,0.e0,0.e0,l_basisEval_389)),RAdd(VDot<4,4>(v_251,VEC4(l_basisEval_390,l_basisEval_370,l_basisEval_333,l_basisEval_391)),RAdd(VDot<4,4>(v_252,VEC4(0.e0,l_basisEval_416,RMul(0.3e1,l_prod_339),l_basisEval_435)),RAdd(VDot<4,4>(v_253,VEC4(RMul(0.1e1,l_prod_343),0.e0,l_basisEval_374,l_basisEval_463)),RAdd(VDot<4,4>(v_254,VEC4(RMul(0.1e1,l_prod_347),0.e0,l_basisEval_406,RMul(0.1e1,l_prod_350))),RAdd(VDot<4,4>(v_255,VEC4(0.e0,l_basisEval_419,0.e0,0.e0)),RAdd(VDot<4,4>(v_256,VEC4(RMul(0.6e1,l_prod_436),RMul(0.5e1,l_prod_438),RMul(0.4e1,l_prod_439),RMul(0.3e1,l_prod_440))),RAdd(VDot<4,4>(v_257,VEC4(RMul(0.2e1,l_prod_441),l_basisEval_443,0.e0,RMul(0.5e1,l_prod_444))),RAdd(VDot<4,4>(v_258,VEC4(RMul(0.4e1,l_prod_445),l_basisEval_464,l_basisEval_449,RMul(0.1e1,l_prod_450))),RAdd(VDot<4,4>(v_259,VEC4(0.e0,RMul(0.4e1,l_prod_451),l_basisEval_453,RMul(0.2e1,l_prod_454))),RAdd(VDot<4,4>(v_260,VEC4(RMul(0.1e1,l_prod_456),0.e0,RMul(0.3e1,l_prod_457),l_basisEval_465)),RAdd(VDot<4,4>(v_261,VEC4(RMul(0.1e1,l_prod_459),0.e0,RMul(0.2e1,l_prod_460),RMul(0.1e1,l_prod_461))),RAdd(VDot<4,4>(v_262,VEC4(0.e0,l_basisEval_466,0.e0,0.e0)),VDot<4,4>(v_242,VEC4(0.e0,l_basisEval_353,0.e0,0.e0))))))))))))))))))))));
      vec3{4} v_470 = VEC3{4}(l_vdot_467,l_vdot_468,l_vdot_469);
      vec4 v_471 = v_242;
      vec4 v_472 = v_243;
      vec4 v_473 = v_244;
      vec4 v_474 = v_245;
      vec4 v_475 = v_246;
      vec4 v_476 = v_247;
      vec4 v_477 = v_248;
      vec4 v_478 = v_249;
      vec4 v_479 = v_250;
      vec4 v_480 = v_251;
      vec4 v_481 = v_252;
      vec4 v_482 = v_253;
      vec4 v_483 = v_254;
      vec4 v_484 = v_255;
      vec4 v_485 = v_256;
      vec4 v_486 = v_257;
      vec4 v_487 = v_258;
      vec4 v_488 = v_259;
      vec4 v_489 = v_260;
      vec4 v_490 = v_261;
      vec4 v_491 = v_262;
      vec3{4} v_492 = VEC3{4}(l_vdot_425,l_vdot_426,l_vdot_427);
      vec3{4} v_493 = VEC3{4}(l_vdot_426,l_vdot_428,l_vdot_429);
      vec3{4} v_494 = v_470;
      vec3{4} v_495 = VEC3{4}(l_vdot_427,l_vdot_429,l_vdot_430);
      if (GT<real>(RDiv(RNeg(Subscript<real[3]>(l__t_432,1)),RAdd(globals.fBias,Sqrt(VDot<3,4>(v_470,v_470)))),globals.fStrTh)) {
        bool l__t_629;
        if (GTE<real>(0.1e1,globals.fMaskTh)) {
          bool l__t_628;
          real l_vdot_496 = VDot<3,4>(v_492,v_494);
          real l_vdot_497 = VDot<3,4>(v_493,v_494);
          real l_vdot_498 = VDot<3,4>(v_495,v_494);
          real l_r_499 = RMul(0.e0,0.1e1);
          real l_r_500 = RMul(0.e0,0.e0);
          real l_r_501 = RAdd(l_r_499,l_r_500);
          real l_r_502 = RAdd(RAdd(l_r_501,l_r_500),l_r_500);
          real l_r_503 = RAdd(l_r_500,l_r_499);
          real l_r_504 = RAdd(RAdd(l_r_503,l_r_500),l_r_500);
          real l_r_505 = RAdd(l_r_500,l_r_500);
          real l_r_506 = RAdd(RAdd(l_r_505,l_r_499),l_r_500);
          real l_r_507 = RMul(0.1e1,0.e0);
          real l_r_508 = RAdd(RAdd(l_r_501,l_r_507),l_r_507);
          real l_r_509 = RAdd(RAdd(l_r_503,l_r_507),l_r_507);
          real l_r_510 = RAdd(RAdd(l_r_505,l_prod_266),l_r_507);
          real l_r_511 = RMul(-0.1e1,0.e0);
          real l_r_512 = RAdd(RAdd(RAdd(l_r_499,l_r_511),l_r_500),l_r_507);
          real l_r_513 = RMul(-0.1e1,0.1e1);
          real l_r_514 = RAdd(RAdd(RAdd(l_r_500,l_r_513),l_r_500),l_r_507);
          real l_r_515 = RAdd(RAdd(RAdd(l_r_500,l_r_511),l_r_499),l_r_507);
          real l_r_516 = RAdd(RAdd(l_r_501,l_r_511),l_r_511);
          real l_r_517 = RAdd(RAdd(l_r_503,l_r_511),l_r_511);
          real l_r_518 = RAdd(RAdd(l_r_505,l_r_513),l_r_511);
          real l_r_519 = RAdd(RAdd(RAdd(l_prod_266,l_r_500),l_r_500),l_r_507);
          real l_r_520 = RAdd(RAdd(RAdd(l_r_507,l_r_499),l_r_500),l_r_507);
          real l_r_521 = RAdd(RAdd(RAdd(l_r_507,l_r_500),l_r_499),l_r_507);
          real l_r_522 = RAdd(RAdd(RAdd(l_r_499,l_r_507),l_r_500),l_r_511);
          real l_r_523 = RAdd(RAdd(RAdd(l_r_500,l_prod_266),l_r_500),l_r_511);
          real l_r_524 = RAdd(RAdd(RAdd(l_r_500,l_r_507),l_r_499),l_r_511);
          real l_r_525 = RAdd(RAdd(RAdd(l_r_513,l_r_500),l_r_500),l_r_511);
          real l_r_526 = RAdd(RAdd(RAdd(l_r_511,l_r_499),l_r_500),l_r_511);
          real l_r_527 = RAdd(RAdd(RAdd(l_r_511,l_r_500),l_r_499),l_r_511);
          real l_basisEval_528 = RMul(0.6e1,l_prod_267);
          real l_basisEval_529 = RMul(0.6e1,l_prod_279);
          real l_basisEval_530 = RMul(0.6e1,l_prod_286);
          real l_basisEval_531 = RMul(0.24e2,l_prod_288);
          real l_basisEval_532 = RMul(0.24e2,l_prod_290);
          real l_basisEval_533 = RMul(0.6e1,l_prod_297);
          real l_basisEval_534 = RMul(0.6e1,l_prod_307);
          real l_basisEval_535 = RMul(0.24e2,l_prod_309);
          real l_basisEval_536 = RMul(0.24e2,l_prod_311);
          real l_basisEval_537 = RMul(0.24e2,l_prod_313);
          real l_basisEval_538 = RMul(0.4e1,l_prod_273);
          real l_basisEval_539 = RMul(0.12e2,l_prod_290);
          real l_basisEval_540 = RMul(0.8e1,l_prod_307);
          real l_basisEval_541 = RMul(0.12e2,l_prod_311);
          real l_basisEval_542 = RMul(0.24e2,l_prod_317);
          real l_basisEval_543 = RMul(0.4e1,l_prod_270);
          real l_basisEval_544 = RMul(0.12e2,l_prod_288);
          real l_basisEval_545 = RMul(0.8e1,l_prod_297);
          real l_basisEval_546 = RMul(0.24e2,l_prod_315);
          real l_basisEval_547 = RMul(0.4e1,l_prod_275);
          real l_basisEval_548 = RMul(0.6e1,l_prod_293);
          real l_basisEval_549 = RMul(0.8e1,l_prod_320);
          real l_basisEval_550 = RMul(0.24e2,l_prod_282);
          real l_basisEval_551 = RMul(0.24e2,l_prod_300);
          real l_basisEval_552 = RMul(0.6e1,l_prod_320);
          real l_basisEval_553 = RMul(0.12e2,l_prod_282);
          real l_basisEval_554 = RMul(0.24e2,l_prod_303);
          real l_vdot_555 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_538)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,l_basisEval_276,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,0.e0,l_basisEval_280)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_409,l_basisEval_530,0.e0,l_basisEval_289)),RAdd(VDot<4,4>(v_484,VEC4(l_basisEval_539,0.e0,l_basisEval_294,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,l_basisEval_298,RMul(0.4e1,l_prod_300))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_411,l_basisEval_540,0.e0,l_basisEval_310)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_541,RMul(0.18e2,l_prod_313),0.e0,l_basisEval_316)),RAdd(VDot<4,4>(v_491,VEC4(l_basisEval_542,0.e0,l_basisEval_321,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_556 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,l_basisEval_268,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,l_basisEval_543,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(l_basisEval_276,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,l_basisEval_529,l_basisEval_409)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_287,0.e0,l_basisEval_544,l_basisEval_291)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,l_basisEval_294,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,l_basisEval_545,l_basisEval_399,RMul(0.4e1,l_prod_303))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_308,0.e0,RMul(0.18e2,l_prod_309),l_basisEval_541)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_314,0.e0,l_basisEval_546,l_basisEval_318)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,l_basisEval_321,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_557 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,l_basisEval_271)),RAdd(VDot<4,4>(v_478,VEC4(l_basisEval_395,0.e0,0.e0,l_basisEval_547)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,l_basisEval_280)),RAdd(VDot<4,4>(v_482,VEC4(l_basisEval_396,l_basisEval_397,0.e0,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_381,l_basisEval_539,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(l_basisEval_548,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,l_basisEval_298,l_basisEval_399,l_basisEval_400)),RAdd(VDot<4,4>(v_488,VEC4(l_basisEval_401,0.e0,0.e0,RMul(0.4e1,l_prod_309))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_541,l_basisEval_537,0.e0,0.e0)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_387,RMul(0.18e2,l_prod_317),0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(l_basisEval_549,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_558 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,l_basisEval_353)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,l_basisEval_271,l_basisEval_274)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,l_basisEval_355,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,l_basisEval_379,l_basisEval_409)),RAdd(VDot<4,4>(v_482,VEC4(l_basisEval_357,0.e0,0.e0,l_basisEval_381)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_359,0.e0,0.e0,l_basisEval_360)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(l_basisEval_383,l_basisEval_399,l_basisEval_411,l_basisEval_363)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,l_basisEval_310,RMul(0.8e1,l_prod_311))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_314,0.e0,0.e0,l_basisEval_387)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_367,0.e0,0.e0,l_basisEval_368)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_559 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,l_basisEval_268,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,l_basisEval_420,l_basisEval_274,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,l_basisEval_547,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,l_basisEval_421,l_basisEval_396,l_basisEval_287)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,l_basisEval_544,l_basisEval_359)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,0.e0,l_basisEval_548,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,l_basisEval_422)),RAdd(VDot<4,4>(v_487,VEC4(l_basisEval_423,l_basisEval_411,l_basisEval_308,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,l_basisEval_535,l_basisEval_541,RMul(0.4e1,l_prod_313))),RAdd(VDot<4,4>(v_489,VEC4(0.e0,0.e0,RMul(0.18e2,l_prod_315),l_basisEval_367)),RAdd(VDot<4,4>(v_490,VEC4(0.e0,0.e0,l_basisEval_549,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_560 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(l_basisEval_268,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,l_basisEval_543,l_basisEval_395)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,l_basisEval_355)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,l_basisEval_529,l_basisEval_553,l_basisEval_397)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,l_basisEval_381)),RAdd(VDot<4,4>(v_482,VEC4(l_basisEval_291,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(l_basisEval_398,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,l_basisEval_545,RMul(0.18e2,l_prod_300))),RAdd(VDot<4,4>(v_486,VEC4(l_basisEval_554,l_basisEval_401,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,l_basisEval_310,l_basisEval_541,l_basisEval_402)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,0.e0,RMul(0.4e1,l_prod_315))),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_367,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_404,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_vdot_561 = RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,l_basisEval_268)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,l_basisEval_420,l_basisEval_538,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,l_basisEval_355,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(l_basisEval_421,l_basisEval_553,l_basisEval_530,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,l_basisEval_289,l_basisEval_359)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,0.e0,l_basisEval_398)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,l_basisEval_422,l_basisEval_551,RMul(0.18e2,l_prod_303))),RAdd(VDot<4,4>(v_486,VEC4(l_basisEval_540,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(l_basisEval_424,l_basisEval_541,l_basisEval_314,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,l_basisEval_387,RMul(0.4e1,l_prod_317))),RAdd(VDot<4,4>(v_489,VEC4(0.e0,0.e0,0.e0,l_basisEval_404)),RAdd(VDot<4,4>(v_490,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
          real l_r_562 = RAdd(RAdd(RMul(l_vdot_467,l_vdot_555),RMul(l_vdot_468,l_vdot_557)),RMul(l_vdot_469,l_vdot_558));
          real l_r_563 = RAdd(RAdd(RMul(l_vdot_467,l_vdot_556),RMul(l_vdot_468,l_vdot_558)),RMul(l_vdot_469,l_vdot_559));
          real l_r_564 = RAdd(RAdd(RMul(l_vdot_467,l_vdot_558),RMul(l_vdot_468,l_vdot_560)),RMul(l_vdot_469,l_vdot_561));
          real l_r_565 = RMul(l_vdot_426,l_vdot_426);
          real l_r_566 = RMul(l_vdot_427,l_vdot_427);
          real l_r_567 = RMul(l_vdot_429,l_vdot_429);
          vec3{4} v_568 = VAdd<3,4>(VEC3{4}(RAdd(RAdd(RMul(l_vdot_467,RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,l_basisEval_528)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(l_basisEval_420,l_basisEval_395,RMul(0.24e2,l_prod_275),0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,0.e0,l_basisEval_529,l_basisEval_396)),RAdd(VDot<4,4>(v_484,VEC4(l_basisEval_530,l_basisEval_531,l_basisEval_532,RMul(0.60e2,l_prod_293))),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_489,VEC4(0.e0,0.e0,l_basisEval_533,l_basisEval_399)),RAdd(VDot<4,4>(v_490,VEC4(l_basisEval_411,l_basisEval_534,l_basisEval_535,l_basisEval_536)),RAdd(VDot<4,4>(v_491,VEC4(l_basisEval_537,RMul(0.60e2,l_prod_315),RMul(0.60e2,l_prod_317),RMul(0.120e3,l_prod_320))),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))),RMul(l_vdot_468,l_vdot_555)),RMul(l_vdot_469,l_vdot_556)),l_r_562,l_r_563),VEC3{4}(RAdd(RAdd(RMul(l_vdot_425,l_vdot_425),l_r_565),l_r_566),RAdd(RAdd(RMul(l_vdot_425,l_vdot_426),RMul(l_vdot_426,l_vdot_428)),RMul(l_vdot_427,l_vdot_429)),RAdd(RAdd(RMul(l_vdot_425,l_vdot_427),RMul(l_vdot_426,l_vdot_429)),RMul(l_vdot_427,l_vdot_430))));
          vec3{4} v_569 = VAdd<3,4>(VEC3{4}(l_r_562,RAdd(RAdd(RMul(l_vdot_467,l_vdot_557),RMul(l_vdot_468,RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,l_basisEval_528,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(0.e0,0.e0,0.e0,l_basisEval_420)),RAdd(VDot<4,4>(v_477,VEC4(RMul(0.24e2,l_prod_273),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(l_basisEval_276,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_480,VEC4(0.e0,0.e0,l_basisEval_529,l_basisEval_550)),RAdd(VDot<4,4>(v_481,VEC4(RMul(0.60e2,l_prod_286),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(l_basisEval_289,l_basisEval_532,0.e0,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,l_basisEval_548,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(0.e0,0.e0,0.e0,l_basisEval_533)),RAdd(VDot<4,4>(v_486,VEC4(l_basisEval_551,RMul(0.60e2,l_prod_303),RMul(0.120e3,l_prod_307),0.e0)),RAdd(VDot<4,4>(v_487,VEC4(0.e0,0.e0,l_basisEval_310,l_basisEval_536)),RAdd(VDot<4,4>(v_488,VEC4(RMul(0.60e2,l_prod_313),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_489,VEC4(l_basisEval_387,l_basisEval_542,0.e0,0.e0)),RAdd(VDot<4,4>(v_490,VEC4(0.e0,l_basisEval_552,0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))))),RMul(l_vdot_469,l_vdot_560)),l_r_564),VEC3{4}(RAdd(RAdd(RMul(l_vdot_426,l_vdot_425),RMul(l_vdot_428,l_vdot_426)),RMul(l_vdot_429,l_vdot_427)),RAdd(RAdd(l_r_565,RMul(l_vdot_428,l_vdot_428)),l_r_567),RAdd(RAdd(RMul(l_vdot_426,l_vdot_427),RMul(l_vdot_428,l_vdot_429)),RMul(l_vdot_429,l_vdot_430))));
          vec3{4} v_570 = VAdd<3,4>(VEC3{4}(l_r_563,l_r_564,RAdd(RAdd(RMul(l_vdot_467,l_vdot_559),RMul(l_vdot_468,l_vdot_561)),RMul(l_vdot_469,RAdd(VDot<4,4>(v_472,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_473,VEC4(0.e0,0.e0,l_basisEval_528,0.e0)),RAdd(VDot<4,4>(v_474,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_475,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_476,VEC4(RMul(0.24e2,l_prod_270),l_basisEval_395,0.e0,0.e0)),RAdd(VDot<4,4>(v_477,VEC4(0.e0,l_basisEval_276,0.e0,0.e0)),RAdd(VDot<4,4>(v_478,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_479,VEC4(0.e0,0.e0,0.e0,RMul(0.60e2,l_prod_279))),RAdd(VDot<4,4>(v_480,VEC4(l_basisEval_550,l_basisEval_530,0.e0,0.e0)),RAdd(VDot<4,4>(v_481,VEC4(0.e0,l_basisEval_531,l_basisEval_291,0.e0)),RAdd(VDot<4,4>(v_482,VEC4(0.e0,0.e0,l_basisEval_548,0.e0)),RAdd(VDot<4,4>(v_483,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_484,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_485,VEC4(RMul(0.120e3,l_prod_297),RMul(0.60e2,l_prod_300),l_basisEval_554,l_basisEval_534)),RAdd(VDot<4,4>(v_486,VEC4(0.e0,0.e0,0.e0,RMul(0.60e2,l_prod_309))),RAdd(VDot<4,4>(v_487,VEC4(l_basisEval_536,l_basisEval_314,0.e0,0.e0)),RAdd(VDot<4,4>(v_488,VEC4(0.e0,l_basisEval_546,l_basisEval_367,0.e0)),RAdd(VDot<4,4>(v_489,VEC4(0.e0,0.e0,l_basisEval_552,0.e0)),RAdd(VDot<4,4>(v_490,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_491,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_471,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))))))),VEC3{4}(RAdd(RAdd(RMul(l_vdot_427,l_vdot_425),RMul(l_vdot_429,l_vdot_426)),RMul(l_vdot_430,l_vdot_427)),RAdd(RAdd(RMul(l_vdot_427,l_vdot_426),RMul(l_vdot_429,l_vdot_428)),RMul(l_vdot_430,l_vdot_429)),RAdd(RAdd(l_r_566,l_r_567),RMul(l_vdot_430,l_vdot_430))));
          real l_r_571 = RMul(l_vdot_496,l_vdot_426);
          real l_r_572 = RMul(l_vdot_496,l_vdot_427);
          real l_r_573 = RMul(l_vdot_496,l_vdot_429);
          real l_r_574 = RMul(l_vdot_497,l_vdot_426);
          real l_r_575 = RMul(l_vdot_497,l_vdot_427);
          real l_r_576 = RMul(l_vdot_497,l_vdot_429);
          real l_r_577 = RMul(l_vdot_498,l_vdot_426);
          real l_r_578 = RMul(l_vdot_498,l_vdot_427);
          real l_r_579 = RMul(l_vdot_498,l_vdot_429);
          real l_r_580 = VIndex<3,4,0>(v_568);
          real l_r_581 = VIndex<3,4,1>(v_568);
          real l_r_582 = VIndex<3,4,2>(v_568);
          real l_r_583 = VIndex<3,4,0>(v_569);
          real l_r_584 = VIndex<3,4,1>(v_569);
          real l_r_585 = VIndex<3,4,2>(v_569);
          real l_r_586 = VIndex<3,4,0>(v_570);
          real l_r_587 = VIndex<3,4,1>(v_570);
          real l_r_588 = VIndex<3,4,2>(v_570);
          vec3{4} v_589 = VAdd<3,4>(VEC3{4}(RMul(l_vdot_496,l_vdot_425),l_r_571,l_r_572),VEC3{4}(RMul(l_vdot_467,l_r_580),RMul(l_vdot_467,l_r_581),RMul(l_vdot_467,l_r_582)));
          vec3{4} v_590 = VAdd<3,4>(VEC3{4}(l_r_571,RMul(l_vdot_496,l_vdot_428),l_r_573),VEC3{4}(RMul(l_vdot_468,l_r_580),RMul(l_vdot_468,l_r_581),RMul(l_vdot_468,l_r_582)));
          vec3{4} v_591 = VAdd<3,4>(VEC3{4}(l_r_572,l_r_573,RMul(l_vdot_496,l_vdot_430)),VEC3{4}(RMul(l_vdot_469,l_r_580),RMul(l_vdot_469,l_r_581),RMul(l_vdot_469,l_r_582)));
          vec3{4} v_592 = VAdd<3,4>(VEC3{4}(RMul(l_vdot_497,l_vdot_425),l_r_574,l_r_575),VEC3{4}(RMul(l_vdot_467,l_r_583),RMul(l_vdot_467,l_r_584),RMul(l_vdot_467,l_r_585)));
          vec3{4} v_593 = VAdd<3,4>(VEC3{4}(l_r_574,RMul(l_vdot_497,l_vdot_428),l_r_576),VEC3{4}(RMul(l_vdot_468,l_r_583),RMul(l_vdot_468,l_r_584),RMul(l_vdot_468,l_r_585)));
          vec3{4} v_594 = VAdd<3,4>(VEC3{4}(l_r_575,l_r_576,RMul(l_vdot_497,l_vdot_430)),VEC3{4}(RMul(l_vdot_469,l_r_583),RMul(l_vdot_469,l_r_584),RMul(l_vdot_469,l_r_585)));
          vec3{4} v_595 = VAdd<3,4>(VEC3{4}(RMul(l_vdot_498,l_vdot_425),l_r_577,l_r_578),VEC3{4}(RMul(l_vdot_467,l_r_586),RMul(l_vdot_467,l_r_587),RMul(l_vdot_467,l_r_588)));
          vec3{4} v_596 = VAdd<3,4>(VEC3{4}(l_r_577,RMul(l_vdot_498,l_vdot_428),l_r_579),VEC3{4}(RMul(l_vdot_468,l_r_586),RMul(l_vdot_468,l_r_587),RMul(l_vdot_468,l_r_588)));
          vec3{4} v_597 = VAdd<3,4>(VEC3{4}(l_r_578,l_r_579,RMul(l_vdot_498,l_vdot_430)),VEC3{4}(RMul(l_vdot_469,l_r_586),RMul(l_vdot_469,l_r_587),RMul(l_vdot_469,l_r_588)));
          vec3{4} v_598 = VEC3{4}(RAdd(RAdd(RMul(l_vdot_467,RAdd(RAdd(RMul(l_vdot_496,l_r_502),RMul(l_vdot_497,l_r_508)),RMul(l_vdot_498,l_r_512))),RMul(l_vdot_468,RAdd(RAdd(RMul(l_vdot_496,l_r_516),RMul(l_vdot_497,l_r_502)),RMul(l_vdot_498,l_r_519)))),RMul(l_vdot_469,RAdd(RAdd(RMul(l_vdot_496,l_r_522),RMul(l_vdot_497,l_r_525)),RMul(l_vdot_498,l_r_502)))),RAdd(RAdd(RMul(l_vdot_467,RAdd(RAdd(RMul(l_vdot_496,l_r_504),RMul(l_vdot_497,l_r_509)),RMul(l_vdot_498,l_r_514))),RMul(l_vdot_468,RAdd(RAdd(RMul(l_vdot_496,l_r_517),RMul(l_vdot_497,l_r_504)),RMul(l_vdot_498,l_r_520)))),RMul(l_vdot_469,RAdd(RAdd(RMul(l_vdot_496,l_r_523),RMul(l_vdot_497,l_r_526)),RMul(l_vdot_498,l_r_504)))),RAdd(RAdd(RMul(l_vdot_467,RAdd(RAdd(RMul(l_vdot_496,l_r_506),RMul(l_vdot_497,l_r_510)),RMul(l_vdot_498,l_r_515))),RMul(l_vdot_468,RAdd(RAdd(RMul(l_vdot_496,l_r_518),RMul(l_vdot_497,l_r_506)),RMul(l_vdot_498,l_r_521)))),RMul(l_vdot_469,RAdd(RAdd(RMul(l_vdot_496,l_r_524),RMul(l_vdot_497,l_r_527)),RMul(l_vdot_498,l_r_506)))));
          real l_r_599 = VIndex<3,4,0>(v_589);
          real l_r_600 = VIndex<3,4,0>(v_592);
          real l_r_601 = VIndex<3,4,0>(v_595);
          real l_r_602 = VIndex<3,4,0>(v_590);
          real l_r_603 = VIndex<3,4,0>(v_593);
          real l_r_604 = VIndex<3,4,0>(v_596);
          real l_r_605 = VIndex<3,4,0>(v_591);
          real l_r_606 = VIndex<3,4,0>(v_594);
          real l_r_607 = VIndex<3,4,0>(v_597);
          real l_r_608 = VIndex<3,4,1>(v_589);
          real l_r_609 = VIndex<3,4,1>(v_592);
          real l_r_610 = VIndex<3,4,1>(v_595);
          real l_r_611 = VIndex<3,4,1>(v_590);
          real l_r_612 = VIndex<3,4,1>(v_593);
          real l_r_613 = VIndex<3,4,1>(v_596);
          real l_r_614 = VIndex<3,4,1>(v_591);
          real l_r_615 = VIndex<3,4,1>(v_594);
          real l_r_616 = VIndex<3,4,1>(v_597);
          real l_r_617 = VIndex<3,4,2>(v_589);
          real l_r_618 = VIndex<3,4,2>(v_592);
          real l_r_619 = VIndex<3,4,2>(v_595);
          real l_r_620 = VIndex<3,4,2>(v_590);
          real l_r_621 = VIndex<3,4,2>(v_593);
          real l_r_622 = VIndex<3,4,2>(v_596);
          real l_r_623 = VIndex<3,4,2>(v_591);
          real l_r_624 = VIndex<3,4,2>(v_594);
          real l_r_625 = VIndex<3,4,2>(v_597);
          vec3{4} v_626 = VEC3{4}(VDot<3,4>(v_598,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_599,l_r_502),RMul(l_r_600,l_r_508)),RMul(l_r_601,l_r_512)),RMul(l_r_602,l_r_516)),RMul(l_r_603,l_r_502)),RMul(l_r_604,l_r_519)),RMul(l_r_605,l_r_522)),RMul(l_r_606,l_r_525)),RMul(l_r_607,l_r_502)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_599,l_r_504),RMul(l_r_600,l_r_509)),RMul(l_r_601,l_r_514)),RMul(l_r_602,l_r_517)),RMul(l_r_603,l_r_504)),RMul(l_r_604,l_r_520)),RMul(l_r_605,l_r_523)),RMul(l_r_606,l_r_526)),RMul(l_r_607,l_r_504)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_599,l_r_506),RMul(l_r_600,l_r_510)),RMul(l_r_601,l_r_515)),RMul(l_r_602,l_r_518)),RMul(l_r_603,l_r_506)),RMul(l_r_604,l_r_521)),RMul(l_r_605,l_r_524)),RMul(l_r_606,l_r_527)),RMul(l_r_607,l_r_506)))),VDot<3,4>(v_598,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_608,l_r_502),RMul(l_r_609,l_r_508)),RMul(l_r_610,l_r_512)),RMul(l_r_611,l_r_516)),RMul(l_r_612,l_r_502)),RMul(l_r_613,l_r_519)),RMul(l_r_614,l_r_522)),RMul(l_r_615,l_r_525)),RMul(l_r_616,l_r_502)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_608,l_r_504),RMul(l_r_609,l_r_509)),RMul(l_r_610,l_r_514)),RMul(l_r_611,l_r_517)),RMul(l_r_612,l_r_504)),RMul(l_r_613,l_r_520)),RMul(l_r_614,l_r_523)),RMul(l_r_615,l_r_526)),RMul(l_r_616,l_r_504)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_608,l_r_506),RMul(l_r_609,l_r_510)),RMul(l_r_610,l_r_515)),RMul(l_r_611,l_r_518)),RMul(l_r_612,l_r_506)),RMul(l_r_613,l_r_521)),RMul(l_r_614,l_r_524)),RMul(l_r_615,l_r_527)),RMul(l_r_616,l_r_506)))),VDot<3,4>(v_598,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_617,l_r_502),RMul(l_r_618,l_r_508)),RMul(l_r_619,l_r_512)),RMul(l_r_620,l_r_516)),RMul(l_r_621,l_r_502)),RMul(l_r_622,l_r_519)),RMul(l_r_623,l_r_522)),RMul(l_r_624,l_r_525)),RMul(l_r_625,l_r_502)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_617,l_r_504),RMul(l_r_618,l_r_509)),RMul(l_r_619,l_r_514)),RMul(l_r_620,l_r_517)),RMul(l_r_621,l_r_504)),RMul(l_r_622,l_r_520)),RMul(l_r_623,l_r_523)),RMul(l_r_624,l_r_526)),RMul(l_r_625,l_r_504)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_617,l_r_506),RMul(l_r_618,l_r_510)),RMul(l_r_619,l_r_515)),RMul(l_r_620,l_r_518)),RMul(l_r_621,l_r_506)),RMul(l_r_622,l_r_521)),RMul(l_r_623,l_r_524)),RMul(l_r_624,l_r_527)),RMul(l_r_625,l_r_506)))));
          vec3{4} v_627 = VAdd<3,4>(v_626,v_626);
          if (GT<real>(Sqrt(VDot<3,4>(v_627,v_627)),0.1e-7)) {
            l__t_628 = true;
          } else {
            l__t_628 = false;
          }
          l__t_629 = l__t_628;
        } else {
          l__t_629 = false;
        }
        l__t_630 = l__t_629;
      } else {
        l__t_630 = false;
      }
      l__t_631 = l__t_630;
    } else {
      l__t_631 = false;
    }
    if (BNot(l__t_631)) {
      self.rayN = l_rayN_69;
      active;
    }
    int l_mulRes_632 = IMul(globals._t,84);
    int t_633 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_632);
    int t_634 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,1));
    int t_635 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,2));
    int t_636 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,3));
    int t_637 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,4));
    int t_638 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,5));
    int t_639 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,6));
    int t_640 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,7));
    int t_641 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,8));
    int t_642 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,9));
    int t_643 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,10));
    int t_644 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,11));
    int t_645 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,12));
    int t_646 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,13));
    int t_647 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,14));
    int t_648 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,15));
    int t_649 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,16));
    int t_650 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,17));
    int t_651 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,18));
    int t_652 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,19));
    int t_653 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,20));
    int t_654 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,21));
    int t_655 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,22));
    int t_656 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,23));
    int t_657 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,24));
    int t_658 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,25));
    int t_659 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,26));
    int t_660 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,27));
    int t_661 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,28));
    int t_662 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,29));
    int t_663 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,30));
    int t_664 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,31));
    int t_665 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,32));
    int t_666 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,33));
    int t_667 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,34));
    int t_668 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,35));
    int t_669 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,36));
    int t_670 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,37));
    int t_671 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,38));
    int t_672 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,39));
    int t_673 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,40));
    int t_674 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,41));
    int t_675 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,42));
    int t_676 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,43));
    int t_677 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,44));
    int t_678 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,45));
    int t_679 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,46));
    int t_680 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,47));
    int t_681 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,48));
    int t_682 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,49));
    int t_683 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,50));
    int t_684 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,51));
    int t_685 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,52));
    int t_686 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,53));
    int t_687 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,54));
    int t_688 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,55));
    int t_689 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,56));
    int t_690 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,57));
    int t_691 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,58));
    int t_692 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,59));
    int t_693 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,60));
    int t_694 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,61));
    int t_695 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,62));
    int t_696 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,63));
    int t_697 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,64));
    int t_698 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,65));
    int t_699 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,66));
    int t_700 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,67));
    int t_701 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,68));
    int t_702 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,69));
    int t_703 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,70));
    int t_704 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,71));
    int t_705 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,72));
    int t_706 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,73));
    int t_707 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,74));
    int t_708 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,75));
    int t_709 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,76));
    int t_710 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,77));
    int t_711 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,78));
    int t_712 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,79));
    int t_713 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,80));
    int t_714 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,81));
    int t_715 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,82));
    int t_716 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_632,83));
    real t_717 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_716));
    real t_718 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_715));
    real t_719 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_714));
    real t_720 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_713));
    real t_721 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_712));
    real t_722 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_711));
    real t_723 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_710));
    real t_724 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_709));
    real t_725 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_708));
    real t_726 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_707));
    real t_727 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_706));
    real t_728 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_705));
    real t_729 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_704));
    real t_730 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_703));
    real t_731 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_702));
    real t_732 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_701));
    real t_733 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_700));
    real t_734 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_699));
    real t_735 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_698));
    real t_736 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_697));
    real t_737 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_696));
    real t_738 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_695));
    real t_739 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_694));
    real t_740 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_693));
    real t_741 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_692));
    real t_742 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_691));
    real t_743 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_690));
    real t_744 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_689));
    real t_745 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_688));
    real t_746 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_687));
    real t_747 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_686));
    real t_748 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_685));
    real t_749 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_684));
    real t_750 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_683));
    real t_751 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_682));
    real t_752 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_681));
    real t_753 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_680));
    real t_754 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_679));
    real t_755 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_678));
    real t_756 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_677));
    real t_757 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_676));
    real t_758 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_675));
    real t_759 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_674));
    real t_760 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_673));
    real t_761 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_672));
    real t_762 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_671));
    real t_763 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_670));
    real t_764 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_669));
    real t_765 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_668));
    real t_766 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_667));
    real t_767 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_666));
    real t_768 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_665));
    real t_769 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_664));
    real t_770 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_663));
    real t_771 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_662));
    real t_772 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_661));
    real t_773 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_660));
    real t_774 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_659));
    real t_775 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_658));
    real t_776 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_657));
    real t_777 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_656));
    real t_778 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_655));
    real t_779 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_654));
    real t_780 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_653));
    real t_781 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_652));
    real t_782 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_651));
    real t_783 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_650));
    real t_784 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_649));
    real t_785 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_648));
    real t_786 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_647));
    real t_787 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_646));
    real t_788 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_645));
    real t_789 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_644));
    real t_790 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_643));
    real t_791 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_642));
    real t_792 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_641));
    real t_793 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_640));
    real t_794 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_639));
    real t_795 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_638));
    real t_796 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_637));
    real t_797 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_636));
    real t_798 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_635));
    real t_799 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_634));
    real t_800 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals._tXX,IMul(1,t_633));
    vec4 v_801 = VEC4(t_800,t_799,t_798,t_797);
    vec4 v_802 = VEC4(t_796,t_795,t_794,t_793);
    vec4 v_803 = VEC4(t_792,t_791,t_790,t_789);
    vec4 v_804 = VEC4(t_788,t_787,t_786,t_785);
    vec4 v_805 = VEC4(t_784,t_783,t_782,t_781);
    vec4 v_806 = VEC4(t_780,t_779,t_778,t_777);
    vec4 v_807 = VEC4(t_776,t_775,t_774,t_773);
    vec4 v_808 = VEC4(t_772,t_771,t_770,t_769);
    vec4 v_809 = VEC4(t_768,t_767,t_766,t_765);
    vec4 v_810 = VEC4(t_764,t_763,t_762,t_761);
    vec4 v_811 = VEC4(t_760,t_759,t_758,t_757);
    vec4 v_812 = VEC4(t_756,t_755,t_754,t_753);
    vec4 v_813 = VEC4(t_752,t_751,t_750,t_749);
    vec4 v_814 = VEC4(t_748,t_747,t_746,t_745);
    vec4 v_815 = VEC4(t_744,t_743,t_742,t_741);
    vec4 v_816 = VEC4(t_740,t_739,t_738,t_737);
    vec4 v_817 = VEC4(t_736,t_735,t_734,t_733);
    vec4 v_818 = VEC4(t_732,t_731,t_730,t_729);
    vec4 v_819 = VEC4(t_728,t_727,t_726,t_725);
    vec4 v_820 = VEC4(t_724,t_723,t_722,t_721);
    vec4 v_821 = VEC4(t_720,t_719,t_718,t_717);
    real l_varAcc_822 = VIndex<3,4,0>(v_72);
    real l_varAcc_823 = VIndex<3,4,1>(v_72);
    real l_varAcc_824 = VIndex<3,4,2>(v_72);
    real l_prod_825 = RMul(0.1e1,0.1e1);
    real l_prod_826 = RMul(0.1e1,l_prod_825);
    real l_basisEval_827 = RMul(0.1e1,l_prod_826);
    real l_prod_828 = RMul(0.1e1,l_varAcc_824);
    real l_prod_829 = RMul(0.1e1,l_prod_828);
    real l_basisEval_830 = RMul(0.1e1,l_prod_829);
    real l_prod_831 = RMul(l_varAcc_823,0.1e1);
    real l_prod_832 = RMul(0.1e1,l_prod_831);
    real l_basisEval_833 = RMul(0.1e1,l_prod_832);
    real l_prod_834 = RMul(l_varAcc_822,l_prod_825);
    real l_basisEval_835 = RMul(0.2e1,l_prod_834);
    real l_prod2_836 = RMul(l_varAcc_824,l_varAcc_824);
    real l_prod_837 = RMul(0.1e1,l_prod2_836);
    real l_prod_838 = RMul(0.1e1,l_prod_837);
    real l_basisEval_839 = RMul(0.1e1,l_prod_838);
    real l_prod_840 = RMul(l_varAcc_823,l_varAcc_824);
    real l_prod_841 = RMul(0.1e1,l_prod_840);
    real l_prod2_842 = RMul(l_varAcc_823,l_varAcc_823);
    real l_prod_843 = RMul(l_prod2_842,0.1e1);
    real l_prod_844 = RMul(0.1e1,l_prod_843);
    real l_basisEval_845 = RMul(0.1e1,l_prod_844);
    real l_prod_846 = RMul(l_varAcc_822,l_prod_828);
    real l_basisEval_847 = RMul(0.2e1,l_prod_846);
    real l_prod_848 = RMul(l_varAcc_822,l_prod_831);
    real l_basisEval_849 = RMul(0.2e1,l_prod_848);
    real l_prod2_850 = RMul(l_varAcc_822,l_varAcc_822);
    real l_prod_851 = RMul(l_prod2_850,l_prod_825);
    real l_basisEval_852 = RMul(0.3e1,l_prod_851);
    real l_prod3_853 = RMul(l_prod2_836,l_varAcc_824);
    real l_prod_854 = RMul(0.1e1,l_prod3_853);
    real l_prod_855 = RMul(0.1e1,l_prod_854);
    real l_basisEval_856 = RMul(0.1e1,l_prod_855);
    real l_prod_857 = RMul(l_varAcc_823,l_prod2_836);
    real l_prod_858 = RMul(0.1e1,l_prod_857);
    real l_prod_859 = RMul(l_prod2_842,l_varAcc_824);
    real l_prod_860 = RMul(0.1e1,l_prod_859);
    real l_prod3_861 = RMul(l_prod2_842,l_varAcc_823);
    real l_prod_862 = RMul(l_prod3_861,0.1e1);
    real l_prod_863 = RMul(0.1e1,l_prod_862);
    real l_basisEval_864 = RMul(0.1e1,l_prod_863);
    real l_prod_865 = RMul(l_varAcc_822,l_prod_837);
    real l_basisEval_866 = RMul(0.2e1,l_prod_865);
    real l_prod_867 = RMul(l_varAcc_822,l_prod_840);
    real l_basisEval_868 = RMul(0.2e1,l_prod_867);
    real l_prod_869 = RMul(l_varAcc_822,l_prod_843);
    real l_basisEval_870 = RMul(0.2e1,l_prod_869);
    real l_prod_871 = RMul(l_prod2_850,l_prod_828);
    real l_basisEval_872 = RMul(0.3e1,l_prod_871);
    real l_prod_873 = RMul(l_prod2_850,l_prod_831);
    real l_basisEval_874 = RMul(0.3e1,l_prod_873);
    real l_prod3_875 = RMul(l_prod2_850,l_varAcc_822);
    real l_prod_876 = RMul(l_prod3_875,l_prod_825);
    real l_basisEval_877 = RMul(0.4e1,l_prod_876);
    real l_prod4_878 = RMul(l_prod3_853,l_varAcc_824);
    real l_prod_879 = RMul(0.1e1,l_prod4_878);
    real l_prod_880 = RMul(0.1e1,l_prod_879);
    real l_basisEval_881 = RMul(0.1e1,l_prod_880);
    real l_prod_882 = RMul(l_varAcc_823,l_prod3_853);
    real l_prod_883 = RMul(0.1e1,l_prod_882);
    real l_prod_884 = RMul(l_prod2_842,l_prod2_836);
    real l_prod_885 = RMul(0.1e1,l_prod_884);
    real l_prod_886 = RMul(l_prod3_861,l_varAcc_824);
    real l_prod_887 = RMul(0.1e1,l_prod_886);
    real l_prod4_888 = RMul(l_prod3_861,l_varAcc_823);
    real l_prod_889 = RMul(l_prod4_888,0.1e1);
    real l_prod_890 = RMul(0.1e1,l_prod_889);
    real l_basisEval_891 = RMul(0.1e1,l_prod_890);
    real l_prod_892 = RMul(l_varAcc_822,l_prod_854);
    real l_basisEval_893 = RMul(0.2e1,l_prod_892);
    real l_prod_894 = RMul(l_varAcc_822,l_prod_857);
    real l_basisEval_895 = RMul(0.2e1,l_prod_894);
    real l_prod_896 = RMul(l_varAcc_822,l_prod_859);
    real l_basisEval_897 = RMul(0.2e1,l_prod_896);
    real l_prod_898 = RMul(l_varAcc_822,l_prod_862);
    real l_basisEval_899 = RMul(0.2e1,l_prod_898);
    real l_prod_900 = RMul(l_prod2_850,l_prod_837);
    real l_basisEval_901 = RMul(0.3e1,l_prod_900);
    real l_prod_902 = RMul(l_prod2_850,l_prod_840);
    real l_prod_903 = RMul(l_prod2_850,l_prod_843);
    real l_basisEval_904 = RMul(0.3e1,l_prod_903);
    real l_prod_905 = RMul(l_prod3_875,l_prod_828);
    real l_basisEval_906 = RMul(0.4e1,l_prod_905);
    real l_prod_907 = RMul(l_prod3_875,l_prod_831);
    real l_basisEval_908 = RMul(0.4e1,l_prod_907);
    real l_prod4_909 = RMul(l_prod3_875,l_varAcc_822);
    real l_prod_910 = RMul(l_prod4_909,l_prod_825);
    real l_basisEval_911 = RMul(0.5e1,l_prod_910);
    real l_prod_912 = RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_878,l_varAcc_824)));
    real l_basisEval_913 = RMul(0.1e1,l_prod_912);
    real l_prod_914 = RMul(0.1e1,RMul(l_varAcc_823,l_prod4_878));
    real l_prod_915 = RMul(0.1e1,RMul(l_prod2_842,l_prod3_853));
    real l_prod_916 = RMul(0.1e1,RMul(l_prod3_861,l_prod2_836));
    real l_prod_917 = RMul(0.1e1,RMul(l_prod4_888,l_varAcc_824));
    real l_prod_918 = RMul(0.1e1,RMul(RMul(l_prod4_888,l_varAcc_823),0.1e1));
    real l_basisEval_919 = RMul(0.1e1,l_prod_918);
    real l_prod_920 = RMul(l_varAcc_822,l_prod_879);
    real l_prod_921 = RMul(l_varAcc_822,l_prod_882);
    real l_basisEval_922 = RMul(0.2e1,l_prod_921);
    real l_prod_923 = RMul(l_varAcc_822,l_prod_884);
    real l_prod_924 = RMul(l_varAcc_822,l_prod_886);
    real l_basisEval_925 = RMul(0.2e1,l_prod_924);
    real l_prod_926 = RMul(l_varAcc_822,l_prod_889);
    real l_prod_927 = RMul(l_prod2_850,l_prod_854);
    real l_prod_928 = RMul(l_prod2_850,l_prod_857);
    real l_basisEval_929 = RMul(0.3e1,l_prod_928);
    real l_prod_930 = RMul(l_prod2_850,l_prod_859);
    real l_basisEval_931 = RMul(0.3e1,l_prod_930);
    real l_prod_932 = RMul(l_prod2_850,l_prod_862);
    real l_prod_933 = RMul(l_prod3_875,l_prod_837);
    real l_prod_934 = RMul(l_prod3_875,l_prod_840);
    real l_prod_935 = RMul(l_prod3_875,l_prod_843);
    real l_prod_936 = RMul(l_prod4_909,l_prod_828);
    real l_prod_937 = RMul(l_prod4_909,l_prod_831);
    real l_prod_938 = RMul(RMul(l_prod4_909,l_varAcc_822),l_prod_825);
    real l_basisEval_939 = RMul(0.2e1,l_prod_832);
    real l_basisEval_940 = RMul(0.1e1,l_prod_834);
    real l_basisEval_941 = RMul(0.2e1,l_prod_841);
    real l_basisEval_942 = RMul(0.3e1,l_prod_844);
    real l_basisEval_943 = RMul(0.1e1,l_prod_851);
    real l_basisEval_944 = RMul(0.2e1,l_prod_858);
    real l_basisEval_945 = RMul(0.3e1,l_prod_860);
    real l_basisEval_946 = RMul(0.4e1,l_prod_863);
    real l_basisEval_947 = RMul(0.3e1,l_prod_869);
    real l_basisEval_948 = RMul(0.2e1,l_prod_873);
    real l_basisEval_949 = RMul(0.1e1,l_prod_876);
    real l_basisEval_950 = RMul(0.2e1,l_prod_883);
    real l_basisEval_951 = RMul(0.3e1,l_prod_885);
    real l_basisEval_952 = RMul(0.4e1,l_prod_887);
    real l_basisEval_953 = RMul(0.5e1,l_prod_890);
    real l_basisEval_954 = RMul(0.4e1,l_prod_898);
    real l_basisEval_955 = RMul(0.2e1,l_prod_902);
    real l_basisEval_956 = RMul(0.2e1,l_prod_907);
    real l_basisEval_957 = RMul(0.1e1,l_prod_910);
    real l_basisEval_958 = RMul(0.3e1,l_prod_923);
    real l_basisEval_959 = RMul(0.2e1,l_prod_934);
    real l_basisEval_960 = RMul(0.1e1,l_prod_938);
    real l_basisEval_961 = RMul(0.2e1,l_prod_829);
    real l_basisEval_962 = RMul(0.3e1,l_prod_838);
    real l_basisEval_963 = RMul(0.4e1,l_prod_855);
    real l_basisEval_964 = RMul(0.3e1,l_prod_858);
    real l_basisEval_965 = RMul(0.2e1,l_prod_860);
    real l_basisEval_966 = RMul(0.3e1,l_prod_865);
    real l_basisEval_967 = RMul(0.2e1,l_prod_871);
    real l_basisEval_968 = RMul(0.5e1,l_prod_880);
    real l_basisEval_969 = RMul(0.4e1,l_prod_883);
    real l_basisEval_970 = RMul(0.2e1,l_prod_887);
    real l_basisEval_971 = RMul(0.4e1,l_prod_892);
    real l_basisEval_972 = RMul(0.2e1,l_prod_905);
    real l_vdot_973 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,l_basisEval_830)),RAdd(VDot<4,4>(v_803,VEC4(l_basisEval_833,l_basisEval_835,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,l_basisEval_839,RMul(0.1e1,l_prod_841))),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_845,l_basisEval_847,l_basisEval_849,l_basisEval_852)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_856,RMul(0.1e1,l_prod_858),RMul(0.1e1,l_prod_860))),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_864,l_basisEval_866,l_basisEval_868,l_basisEval_870)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_872,l_basisEval_874,l_basisEval_877,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_881,RMul(0.1e1,l_prod_883),RMul(0.1e1,l_prod_885))),RAdd(VDot<4,4>(v_812,VEC4(RMul(0.1e1,l_prod_887),l_basisEval_891,l_basisEval_893,l_basisEval_895)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_897,l_basisEval_899,l_basisEval_901,RMul(0.3e1,l_prod_902))),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_904,l_basisEval_906,l_basisEval_908,l_basisEval_911)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,l_basisEval_913)),RAdd(VDot<4,4>(v_817,VEC4(RMul(0.1e1,l_prod_914),RMul(0.1e1,l_prod_915),RMul(0.1e1,l_prod_916),RMul(0.1e1,l_prod_917))),RAdd(VDot<4,4>(v_818,VEC4(l_basisEval_919,RMul(0.2e1,l_prod_920),l_basisEval_922,RMul(0.2e1,l_prod_923))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_925,RMul(0.2e1,l_prod_926),RMul(0.3e1,l_prod_927),l_basisEval_929)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_931,RMul(0.3e1,l_prod_932),RMul(0.4e1,l_prod_933),RMul(0.4e1,l_prod_934))),RAdd(VDot<4,4>(v_821,VEC4(RMul(0.4e1,l_prod_935),RMul(0.5e1,l_prod_936),RMul(0.5e1,l_prod_937),RMul(0.6e1,l_prod_938))),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,l_basisEval_827))))))))))))))))))))));
    real l_vdot_974 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,l_basisEval_830,l_basisEval_939,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(l_basisEval_940,0.e0,0.e0,l_basisEval_839)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_941,l_basisEval_942,0.e0,RMul(0.1e1,l_prod_846))),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_849,0.e0,l_basisEval_943,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,l_basisEval_856,l_basisEval_944,l_basisEval_945)),RAdd(VDot<4,4>(v_807,VEC4(l_basisEval_946,0.e0,RMul(0.1e1,l_prod_865),l_basisEval_868)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_947,0.e0,RMul(0.1e1,l_prod_871),l_basisEval_948)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,l_basisEval_949,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_881,l_basisEval_950,l_basisEval_951,l_basisEval_952)),RAdd(VDot<4,4>(v_811,VEC4(l_basisEval_953,0.e0,RMul(0.1e1,l_prod_892),l_basisEval_895)),RAdd(VDot<4,4>(v_812,VEC4(RMul(0.3e1,l_prod_896),l_basisEval_954,0.e0,RMul(0.1e1,l_prod_900))),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_955,l_basisEval_904,0.e0,RMul(0.1e1,l_prod_905))),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_956,0.e0,l_basisEval_957,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,l_basisEval_913,RMul(0.2e1,l_prod_914),RMul(0.3e1,l_prod_915))),RAdd(VDot<4,4>(v_816,VEC4(RMul(0.4e1,l_prod_916),RMul(0.5e1,l_prod_917),RMul(0.6e1,l_prod_918),0.e0)),RAdd(VDot<4,4>(v_817,VEC4(RMul(0.1e1,l_prod_920),l_basisEval_922,l_basisEval_958,RMul(0.4e1,l_prod_924))),RAdd(VDot<4,4>(v_818,VEC4(RMul(0.5e1,l_prod_926),0.e0,RMul(0.1e1,l_prod_927),RMul(0.2e1,l_prod_928))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_931,RMul(0.4e1,l_prod_932),0.e0,RMul(0.1e1,l_prod_933))),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_959,RMul(0.3e1,l_prod_935),0.e0,RMul(0.1e1,l_prod_936))),RAdd(VDot<4,4>(v_821,VEC4(RMul(0.2e1,l_prod_937),0.e0,l_basisEval_960,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,l_basisEval_827,0.e0))))))))))))))))))))));
    real l_vdot_975 = RAdd(VDot<4,4>(v_802,VEC4(l_basisEval_961,l_basisEval_833,0.e0,l_basisEval_940)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,l_basisEval_962,l_basisEval_941)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_845,0.e0,l_basisEval_847,RMul(0.1e1,l_prod_848))),RAdd(VDot<4,4>(v_805,VEC4(0.e0,l_basisEval_943,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(l_basisEval_963,l_basisEval_964,l_basisEval_965,l_basisEval_864)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_966,l_basisEval_868,RMul(0.1e1,l_prod_869))),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_967,RMul(0.1e1,l_prod_873),0.e0)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_949,0.e0,0.e0,l_basisEval_968)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_969,l_basisEval_951,l_basisEval_970,l_basisEval_891)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_971,RMul(0.3e1,l_prod_894),l_basisEval_897)),RAdd(VDot<4,4>(v_812,VEC4(RMul(0.1e1,l_prod_898),0.e0,l_basisEval_901,l_basisEval_955)),RAdd(VDot<4,4>(v_813,VEC4(RMul(0.1e1,l_prod_903),0.e0,l_basisEval_972,RMul(0.1e1,l_prod_907))),RAdd(VDot<4,4>(v_814,VEC4(0.e0,l_basisEval_957,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(RMul(0.6e1,l_prod_912),RMul(0.5e1,l_prod_914),RMul(0.4e1,l_prod_915),RMul(0.3e1,l_prod_916))),RAdd(VDot<4,4>(v_816,VEC4(RMul(0.2e1,l_prod_917),l_basisEval_919,0.e0,RMul(0.5e1,l_prod_920))),RAdd(VDot<4,4>(v_817,VEC4(RMul(0.4e1,l_prod_921),l_basisEval_958,l_basisEval_925,RMul(0.1e1,l_prod_926))),RAdd(VDot<4,4>(v_818,VEC4(0.e0,RMul(0.4e1,l_prod_927),l_basisEval_929,RMul(0.2e1,l_prod_930))),RAdd(VDot<4,4>(v_819,VEC4(RMul(0.1e1,l_prod_932),0.e0,RMul(0.3e1,l_prod_933),l_basisEval_959)),RAdd(VDot<4,4>(v_820,VEC4(RMul(0.1e1,l_prod_935),0.e0,RMul(0.2e1,l_prod_936),RMul(0.1e1,l_prod_937))),RAdd(VDot<4,4>(v_821,VEC4(0.e0,l_basisEval_960,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,l_basisEval_827,0.e0,0.e0))))))))))))))))))))));
    vec3{4} v_976 = VEC3{4}(l_vdot_973,l_vdot_974,l_vdot_975);
    real l_basisEval_977 = RMul(0.2e1,l_prod_826);
    real l_basisEval_978 = RMul(0.6e1,l_prod_834);
    real l_basisEval_979 = RMul(0.2e1,l_prod_838);
    real l_basisEval_980 = RMul(0.2e1,l_prod_844);
    real l_basisEval_981 = RMul(0.6e1,l_prod_846);
    real l_basisEval_982 = RMul(0.6e1,l_prod_848);
    real l_basisEval_983 = RMul(0.12e2,l_prod_851);
    real l_basisEval_984 = RMul(0.2e1,l_prod_855);
    real l_basisEval_985 = RMul(0.2e1,l_prod_863);
    real l_basisEval_986 = RMul(0.6e1,l_prod_865);
    real l_basisEval_987 = RMul(0.6e1,l_prod_867);
    real l_basisEval_988 = RMul(0.6e1,l_prod_869);
    real l_basisEval_989 = RMul(0.12e2,l_prod_871);
    real l_basisEval_990 = RMul(0.12e2,l_prod_873);
    real l_basisEval_991 = RMul(0.20e2,l_prod_876);
    real l_basisEval_992 = RMul(0.2e1,l_prod_880);
    real l_basisEval_993 = RMul(0.2e1,l_prod_890);
    real l_basisEval_994 = RMul(0.6e1,l_prod_894);
    real l_basisEval_995 = RMul(0.6e1,l_prod_896);
    real l_basisEval_996 = RMul(0.12e2,l_prod_900);
    real l_basisEval_997 = RMul(0.12e2,l_prod_903);
    real l_basisEval_998 = RMul(0.4e1,l_prod_848);
    real l_basisEval_999 = RMul(0.4e1,l_prod_867);
    real l_basisEval_1000 = RMul(0.6e1,l_prod_873);
    real l_basisEval_1001 = RMul(0.6e1,l_prod_902);
    real l_basisEval_1002 = RMul(0.4e1,l_prod_846);
    real l_basisEval_1003 = RMul(0.6e1,l_prod_871);
    real l_basisEval_1004 = RMul(0.6e1,l_prod_832);
    real l_basisEval_1005 = RMul(0.6e1,l_prod_841);
    real l_basisEval_1006 = RMul(0.12e2,l_prod_844);
    real l_basisEval_1007 = RMul(0.2e1,l_prod_851);
    real l_basisEval_1008 = RMul(0.6e1,l_prod_858);
    real l_basisEval_1009 = RMul(0.12e2,l_prod_860);
    real l_basisEval_1010 = RMul(0.20e2,l_prod_863);
    real l_basisEval_1011 = RMul(0.12e2,l_prod_869);
    real l_basisEval_1012 = RMul(0.2e1,l_prod_876);
    real l_basisEval_1013 = RMul(0.12e2,l_prod_885);
    real l_basisEval_1014 = RMul(0.2e1,l_prod_910);
    real l_basisEval_1015 = RMul(0.4e1,l_prod_841);
    real l_basisEval_1016 = RMul(0.6e1,l_prod_860);
    real l_basisEval_1017 = RMul(0.6e1,l_prod_829);
    real l_basisEval_1018 = RMul(0.12e2,l_prod_838);
    real l_basisEval_1019 = RMul(0.20e2,l_prod_855);
    real l_basisEval_1020 = RMul(0.12e2,l_prod_858);
    real l_basisEval_1021 = RMul(0.12e2,l_prod_865);
    real l_vdot_1022 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,l_basisEval_977,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,l_basisEval_961,l_basisEval_939,l_basisEval_978)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_979,l_basisEval_941,l_basisEval_980)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_981,l_basisEval_982,l_basisEval_983,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_984,l_basisEval_944)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_965,l_basisEval_985,l_basisEval_986,l_basisEval_987)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_988,l_basisEval_989,l_basisEval_990,l_basisEval_991)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_992,l_basisEval_950,RMul(0.2e1,l_prod_885))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_970,l_basisEval_993,RMul(0.6e1,l_prod_892),l_basisEval_994)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_995,RMul(0.6e1,l_prod_898),l_basisEval_996,RMul(0.12e2,l_prod_902))),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_997,RMul(0.20e2,l_prod_905),RMul(0.20e2,l_prod_907),RMul(0.30e2,l_prod_910))),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1023 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(l_basisEval_827,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,l_basisEval_830)),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_939,0.e0,l_basisEval_835,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,l_basisEval_839,l_basisEval_941)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_942,0.e0,l_basisEval_847,l_basisEval_998)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,l_basisEval_852,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,l_basisEval_856,l_basisEval_944)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_945,l_basisEval_946,0.e0,l_basisEval_866)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_999,l_basisEval_988,0.e0,l_basisEval_872)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1000,0.e0,l_basisEval_877,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_881,l_basisEval_950,l_basisEval_951,l_basisEval_952)),RAdd(VDot<4,4>(v_818,VEC4(l_basisEval_953,0.e0,l_basisEval_893,RMul(0.4e1,l_prod_894))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_995,RMul(0.8e1,l_prod_898),0.e0,l_basisEval_901)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1001,RMul(0.9e1,l_prod_903),0.e0,l_basisEval_906)),RAdd(VDot<4,4>(v_821,VEC4(RMul(0.8e1,l_prod_907),0.e0,l_basisEval_911,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1024 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,l_basisEval_827)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,l_basisEval_961,l_basisEval_833)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,l_basisEval_835,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_962,l_basisEval_941,l_basisEval_845)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_1002,l_basisEval_849,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_852,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_963,l_basisEval_964,l_basisEval_965)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_864,0.e0,l_basisEval_986,l_basisEval_999)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_870,0.e0,l_basisEval_1003,l_basisEval_874)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,l_basisEval_877,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,l_basisEval_968)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_969,l_basisEval_951,l_basisEval_970,l_basisEval_891)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,RMul(0.8e1,l_prod_892),l_basisEval_994,RMul(0.4e1,l_prod_896))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_899,0.e0,RMul(0.9e1,l_prod_900),l_basisEval_1001)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_904,0.e0,RMul(0.8e1,l_prod_905),l_basisEval_908)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,l_basisEval_911,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1025 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,l_basisEval_977,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_961,l_basisEval_1004,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_835,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,l_basisEval_979,l_basisEval_1005)),RAdd(VDot<4,4>(v_807,VEC4(l_basisEval_1006,0.e0,0.e0,l_basisEval_847)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_982,0.e0,0.e0,l_basisEval_1007)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,l_basisEval_984,l_basisEval_1008,l_basisEval_1009)),RAdd(VDot<4,4>(v_811,VEC4(l_basisEval_1010,0.e0,0.e0,l_basisEval_866)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_987,l_basisEval_1011,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_967,l_basisEval_1000,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1012,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,l_basisEval_992,RMul(0.6e1,l_prod_883))),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_1013,RMul(0.20e2,l_prod_887),RMul(0.30e2,l_prod_890),0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,l_basisEval_893,l_basisEval_994,RMul(0.12e2,l_prod_896))),RAdd(VDot<4,4>(v_818,VEC4(RMul(0.20e2,l_prod_898),0.e0,0.e0,RMul(0.2e1,l_prod_900))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1001,l_basisEval_997,0.e0,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_972,RMul(0.6e1,l_prod_907),0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_1014,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1026 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,l_basisEval_827,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,l_basisEval_961)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_939,0.e0,0.e0,l_basisEval_940)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,l_basisEval_962,l_basisEval_1015,l_basisEval_942)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,l_basisEval_847,l_basisEval_849)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,l_basisEval_943,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_963,l_basisEval_1008,l_basisEval_1016,l_basisEval_946)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,l_basisEval_966,l_basisEval_999)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_947,0.e0,0.e0,l_basisEval_967)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_948,0.e0,0.e0,l_basisEval_949)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,l_basisEval_968,RMul(0.8e1,l_prod_883),RMul(0.9e1,l_prod_885))),RAdd(VDot<4,4>(v_816,VEC4(RMul(0.8e1,l_prod_887),l_basisEval_953,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_971,l_basisEval_994,l_basisEval_995,l_basisEval_954)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,l_basisEval_901,RMul(0.4e1,l_prod_902))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_904,0.e0,0.e0,l_basisEval_972)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_956,0.e0,0.e0,l_basisEval_957)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1027 = RAdd(VDot<4,4>(v_802,VEC4(l_basisEval_977,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,l_basisEval_1017,l_basisEval_939)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,l_basisEval_835,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(l_basisEval_1018,l_basisEval_1005,l_basisEval_980,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_981,l_basisEval_849,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_1007,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,l_basisEval_1019)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_1020,l_basisEval_1016,l_basisEval_985,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_1021,l_basisEval_987,l_basisEval_870)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_1003,l_basisEval_948)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,l_basisEval_1012,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(RMul(0.30e2,l_prod_880),RMul(0.20e2,l_prod_883),l_basisEval_1013,RMul(0.6e1,l_prod_887))),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_993,0.e0,0.e0,RMul(0.20e2,l_prod_892))),RAdd(VDot<4,4>(v_817,VEC4(RMul(0.12e2,l_prod_894),l_basisEval_995,l_basisEval_899,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_996,l_basisEval_1001,RMul(0.2e1,l_prod_903))),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,RMul(0.6e1,l_prod_905),l_basisEval_956)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,0.e0,l_basisEval_1014,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1028 = VDot<3,4>(VEC3{4}(l_vdot_1022,l_vdot_1023,l_vdot_1024),v_976);
    real l_vdot_1029 = VDot<3,4>(VEC3{4}(l_vdot_1023,l_vdot_1025,l_vdot_1026),v_976);
    real l_vdot_1030 = VDot<3,4>(VEC3{4}(l_vdot_1024,l_vdot_1026,l_vdot_1027),v_976);
    real l_r_1031 = RMul(0.e0,0.1e1);
    real l_r_1032 = RMul(0.e0,0.e0);
    real l_r_1033 = RAdd(l_r_1031,l_r_1032);
    real l_r_1034 = RAdd(RAdd(l_r_1033,l_r_1032),l_r_1032);
    real l_r_1035 = RAdd(l_r_1032,l_r_1031);
    real l_r_1036 = RAdd(RAdd(l_r_1035,l_r_1032),l_r_1032);
    real l_r_1037 = RAdd(l_r_1032,l_r_1032);
    real l_r_1038 = RAdd(RAdd(l_r_1037,l_r_1031),l_r_1032);
    real l_r_1039 = RMul(0.1e1,0.e0);
    real l_r_1040 = RAdd(RAdd(l_r_1033,l_r_1039),l_r_1039);
    real l_r_1041 = RAdd(RAdd(l_r_1035,l_r_1039),l_r_1039);
    real l_r_1042 = RAdd(RAdd(l_r_1037,l_prod_825),l_r_1039);
    real l_r_1043 = RMul(-0.1e1,0.e0);
    real l_r_1044 = RAdd(RAdd(RAdd(l_r_1031,l_r_1043),l_r_1032),l_r_1039);
    real l_r_1045 = RMul(-0.1e1,0.1e1);
    real l_r_1046 = RAdd(RAdd(RAdd(l_r_1032,l_r_1045),l_r_1032),l_r_1039);
    real l_r_1047 = RAdd(RAdd(RAdd(l_r_1032,l_r_1043),l_r_1031),l_r_1039);
    real l_r_1048 = RAdd(RAdd(l_r_1033,l_r_1043),l_r_1043);
    real l_r_1049 = RAdd(RAdd(l_r_1035,l_r_1043),l_r_1043);
    real l_r_1050 = RAdd(RAdd(l_r_1037,l_r_1045),l_r_1043);
    real l_r_1051 = RAdd(RAdd(RAdd(l_prod_825,l_r_1032),l_r_1032),l_r_1039);
    real l_r_1052 = RAdd(RAdd(RAdd(l_r_1039,l_r_1031),l_r_1032),l_r_1039);
    real l_r_1053 = RAdd(RAdd(RAdd(l_r_1039,l_r_1032),l_r_1031),l_r_1039);
    real l_r_1054 = RAdd(RAdd(RAdd(l_r_1031,l_r_1039),l_r_1032),l_r_1043);
    real l_r_1055 = RAdd(RAdd(RAdd(l_r_1032,l_prod_825),l_r_1032),l_r_1043);
    real l_r_1056 = RAdd(RAdd(RAdd(l_r_1032,l_r_1039),l_r_1031),l_r_1043);
    real l_r_1057 = RAdd(RAdd(RAdd(l_r_1045,l_r_1032),l_r_1032),l_r_1043);
    real l_r_1058 = RAdd(RAdd(RAdd(l_r_1043,l_r_1031),l_r_1032),l_r_1043);
    real l_r_1059 = RAdd(RAdd(RAdd(l_r_1043,l_r_1032),l_r_1031),l_r_1043);
    real l_r_1060 = RAdd(RAdd(RMul(l_vdot_973,RAdd(RAdd(RMul(l_vdot_1028,l_r_1034),RMul(l_vdot_1029,l_r_1040)),RMul(l_vdot_1030,l_r_1044))),RMul(l_vdot_974,RAdd(RAdd(RMul(l_vdot_1028,l_r_1048),RMul(l_vdot_1029,l_r_1034)),RMul(l_vdot_1030,l_r_1051)))),RMul(l_vdot_975,RAdd(RAdd(RMul(l_vdot_1028,l_r_1054),RMul(l_vdot_1029,l_r_1057)),RMul(l_vdot_1030,l_r_1034))));
    real l_r_1061 = RAdd(RAdd(RMul(l_vdot_973,RAdd(RAdd(RMul(l_vdot_1028,l_r_1036),RMul(l_vdot_1029,l_r_1041)),RMul(l_vdot_1030,l_r_1046))),RMul(l_vdot_974,RAdd(RAdd(RMul(l_vdot_1028,l_r_1049),RMul(l_vdot_1029,l_r_1036)),RMul(l_vdot_1030,l_r_1052)))),RMul(l_vdot_975,RAdd(RAdd(RMul(l_vdot_1028,l_r_1055),RMul(l_vdot_1029,l_r_1058)),RMul(l_vdot_1030,l_r_1036))));
    real l_r_1062 = RAdd(RAdd(RMul(l_vdot_973,RAdd(RAdd(RMul(l_vdot_1028,l_r_1038),RMul(l_vdot_1029,l_r_1042)),RMul(l_vdot_1030,l_r_1047))),RMul(l_vdot_974,RAdd(RAdd(RMul(l_vdot_1028,l_r_1050),RMul(l_vdot_1029,l_r_1038)),RMul(l_vdot_1030,l_r_1053)))),RMul(l_vdot_975,RAdd(RAdd(RMul(l_vdot_1028,l_r_1056),RMul(l_vdot_1029,l_r_1059)),RMul(l_vdot_1030,l_r_1038))));
    vec3{4} v_1063 = VEC3{4}(l_r_1060,l_r_1061,l_r_1062);
    real l_basisEval_1064 = RMul(0.6e1,l_prod_826);
    real l_basisEval_1065 = RMul(0.6e1,l_prod_838);
    real l_basisEval_1066 = RMul(0.6e1,l_prod_844);
    real l_basisEval_1067 = RMul(0.24e2,l_prod_846);
    real l_basisEval_1068 = RMul(0.24e2,l_prod_848);
    real l_basisEval_1069 = RMul(0.6e1,l_prod_855);
    real l_basisEval_1070 = RMul(0.6e1,l_prod_863);
    real l_basisEval_1071 = RMul(0.24e2,l_prod_865);
    real l_basisEval_1072 = RMul(0.24e2,l_prod_867);
    real l_basisEval_1073 = RMul(0.24e2,l_prod_869);
    real l_basisEval_1074 = RMul(0.4e1,l_prod_832);
    real l_basisEval_1075 = RMul(0.12e2,l_prod_848);
    real l_basisEval_1076 = RMul(0.8e1,l_prod_863);
    real l_basisEval_1077 = RMul(0.12e2,l_prod_867);
    real l_basisEval_1078 = RMul(0.24e2,l_prod_873);
    real l_basisEval_1079 = RMul(0.4e1,l_prod_829);
    real l_basisEval_1080 = RMul(0.12e2,l_prod_846);
    real l_basisEval_1081 = RMul(0.8e1,l_prod_855);
    real l_basisEval_1082 = RMul(0.24e2,l_prod_871);
    real l_basisEval_1083 = RMul(0.4e1,l_prod_834);
    real l_basisEval_1084 = RMul(0.6e1,l_prod_851);
    real l_basisEval_1085 = RMul(0.8e1,l_prod_876);
    real l_basisEval_1086 = RMul(0.24e2,l_prod_841);
    real l_basisEval_1087 = RMul(0.24e2,l_prod_858);
    real l_basisEval_1088 = RMul(0.6e1,l_prod_876);
    real l_basisEval_1089 = RMul(0.12e2,l_prod_841);
    real l_basisEval_1090 = RMul(0.24e2,l_prod_860);
    real l_vdot_1091 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,l_basisEval_977,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,l_basisEval_961,l_basisEval_1074)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,l_basisEval_978,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,0.e0,l_basisEval_979)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_1015,l_basisEval_1066,0.e0,l_basisEval_981)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1075,0.e0,l_basisEval_983,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,l_basisEval_984,RMul(0.4e1,l_prod_858))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1016,l_basisEval_1076,0.e0,l_basisEval_986)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1077,RMul(0.18e2,l_prod_869),0.e0,l_basisEval_989)),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_1078,0.e0,l_basisEval_991,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1092 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,l_basisEval_977,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_1079,l_basisEval_939,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_978,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_1065,l_basisEval_1015)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_980,0.e0,l_basisEval_1080,l_basisEval_982)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,l_basisEval_983,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_1081,l_basisEval_1008,RMul(0.4e1,l_prod_860))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_985,0.e0,RMul(0.18e2,l_prod_865),l_basisEval_1077)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_988,0.e0,l_basisEval_1082,l_basisEval_990)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,l_basisEval_991,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1093 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(l_basisEval_977,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,l_basisEval_961)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_1004,0.e0,0.e0,l_basisEval_1083)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,l_basisEval_979)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_1005,l_basisEval_1006,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_1002,l_basisEval_1075,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1084,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,l_basisEval_984,l_basisEval_1008,l_basisEval_1009)),RAdd(VDot<4,4>(v_818,VEC4(l_basisEval_1010,0.e0,0.e0,RMul(0.4e1,l_prod_865))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1077,l_basisEval_1073,0.e0,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1003,RMul(0.18e2,l_prod_873),0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_1085,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1094 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,l_basisEval_827)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,l_basisEval_961,l_basisEval_939)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,l_basisEval_835,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,l_basisEval_962,l_basisEval_1015)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_942,0.e0,0.e0,l_basisEval_1002)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_998,0.e0,0.e0,l_basisEval_852)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_963,l_basisEval_1008,l_basisEval_1016,l_basisEval_946)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,l_basisEval_986,RMul(0.8e1,l_prod_867))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_988,0.e0,0.e0,l_basisEval_1003)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1000,0.e0,0.e0,l_basisEval_877)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1095 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,l_basisEval_977,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_1017,l_basisEval_939,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,l_basisEval_1083,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_1018,l_basisEval_1005,l_basisEval_980)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_1080,l_basisEval_998)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,l_basisEval_1084,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,l_basisEval_1019)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_1020,l_basisEval_1016,l_basisEval_985,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_1071,l_basisEval_1077,RMul(0.4e1,l_prod_869))),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,RMul(0.18e2,l_prod_871),l_basisEval_1000)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,0.e0,l_basisEval_1085,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1096 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(l_basisEval_977,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,l_basisEval_1079,l_basisEval_1004)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,l_basisEval_835)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,l_basisEval_1065,l_basisEval_1089,l_basisEval_1006)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,l_basisEval_1002)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_982,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(l_basisEval_1007,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,l_basisEval_1081,RMul(0.18e2,l_prod_858))),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_1090,l_basisEval_1010,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,l_basisEval_986,l_basisEval_1077,l_basisEval_1011)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,0.e0,RMul(0.4e1,l_prod_871))),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1000,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1012,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_vdot_1097 = RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,l_basisEval_977)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,l_basisEval_1017,l_basisEval_1074,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,l_basisEval_835,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_1018,l_basisEval_1089,l_basisEval_1066,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,l_basisEval_981,l_basisEval_998)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,0.e0,l_basisEval_1007)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,l_basisEval_1019,l_basisEval_1087,RMul(0.18e2,l_prod_860))),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_1076,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_1021,l_basisEval_1077,l_basisEval_988,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,l_basisEval_1003,RMul(0.4e1,l_prod_873))),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,0.e0,l_basisEval_1012)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0))))))))))))))))))))));
    real l_r_1098 = RMul(l_vdot_973,RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,l_basisEval_1064)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(l_basisEval_1017,l_basisEval_1004,RMul(0.24e2,l_prod_834),0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,l_basisEval_1065,l_basisEval_1005)),RAdd(VDot<4,4>(v_814,VEC4(l_basisEval_1066,l_basisEval_1067,l_basisEval_1068,RMul(0.60e2,l_prod_851))),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,l_basisEval_1069,l_basisEval_1008)),RAdd(VDot<4,4>(v_820,VEC4(l_basisEval_1016,l_basisEval_1070,l_basisEval_1071,l_basisEval_1072)),RAdd(VDot<4,4>(v_821,VEC4(l_basisEval_1073,RMul(0.60e2,l_prod_871),RMul(0.60e2,l_prod_873),RMul(0.120e3,l_prod_876))),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))));
    real l_r_1099 = RMul(l_vdot_973,l_vdot_1091);
    real l_r_1100 = RMul(l_vdot_973,l_vdot_1092);
    real l_r_1101 = RMul(l_vdot_973,l_vdot_1093);
    real l_r_1102 = RMul(l_vdot_973,l_vdot_1094);
    real l_r_1103 = RMul(l_vdot_973,l_vdot_1095);
    real l_r_1104 = RMul(l_vdot_974,l_vdot_1091);
    real l_r_1105 = RMul(l_vdot_974,l_vdot_1093);
    real l_r_1106 = RMul(l_vdot_974,l_vdot_1094);
    real l_r_1107 = RMul(l_vdot_974,RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,l_basisEval_1064,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(0.e0,0.e0,0.e0,l_basisEval_1017)),RAdd(VDot<4,4>(v_807,VEC4(RMul(0.24e2,l_prod_832),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(l_basisEval_978,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_810,VEC4(0.e0,0.e0,l_basisEval_1065,l_basisEval_1086)),RAdd(VDot<4,4>(v_811,VEC4(RMul(0.60e2,l_prod_844),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(l_basisEval_981,l_basisEval_1068,0.e0,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,l_basisEval_1084,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(0.e0,0.e0,0.e0,l_basisEval_1069)),RAdd(VDot<4,4>(v_816,VEC4(l_basisEval_1087,RMul(0.60e2,l_prod_860),RMul(0.120e3,l_prod_863),0.e0)),RAdd(VDot<4,4>(v_817,VEC4(0.e0,0.e0,l_basisEval_986,l_basisEval_1072)),RAdd(VDot<4,4>(v_818,VEC4(RMul(0.60e2,l_prod_869),0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_819,VEC4(l_basisEval_1003,l_basisEval_1078,0.e0,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,l_basisEval_1088,0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))));
    real l_r_1108 = RMul(l_vdot_974,l_vdot_1096);
    real l_r_1109 = RMul(l_vdot_974,l_vdot_1097);
    real l_r_1110 = RMul(l_vdot_975,l_vdot_1092);
    real l_r_1111 = RMul(l_vdot_975,l_vdot_1094);
    real l_r_1112 = RMul(l_vdot_975,l_vdot_1095);
    real l_r_1113 = RMul(l_vdot_975,l_vdot_1096);
    real l_r_1114 = RMul(l_vdot_975,l_vdot_1097);
    real l_r_1115 = RMul(l_vdot_975,RAdd(VDot<4,4>(v_802,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_803,VEC4(0.e0,0.e0,l_basisEval_1064,0.e0)),RAdd(VDot<4,4>(v_804,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_805,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_806,VEC4(RMul(0.24e2,l_prod_829),l_basisEval_1004,0.e0,0.e0)),RAdd(VDot<4,4>(v_807,VEC4(0.e0,l_basisEval_978,0.e0,0.e0)),RAdd(VDot<4,4>(v_808,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_809,VEC4(0.e0,0.e0,0.e0,RMul(0.60e2,l_prod_838))),RAdd(VDot<4,4>(v_810,VEC4(l_basisEval_1086,l_basisEval_1066,0.e0,0.e0)),RAdd(VDot<4,4>(v_811,VEC4(0.e0,l_basisEval_1067,l_basisEval_982,0.e0)),RAdd(VDot<4,4>(v_812,VEC4(0.e0,0.e0,l_basisEval_1084,0.e0)),RAdd(VDot<4,4>(v_813,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_814,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_815,VEC4(RMul(0.120e3,l_prod_855),RMul(0.60e2,l_prod_858),l_basisEval_1090,l_basisEval_1070)),RAdd(VDot<4,4>(v_816,VEC4(0.e0,0.e0,0.e0,RMul(0.60e2,l_prod_865))),RAdd(VDot<4,4>(v_817,VEC4(l_basisEval_1072,l_basisEval_988,0.e0,0.e0)),RAdd(VDot<4,4>(v_818,VEC4(0.e0,l_basisEval_1082,l_basisEval_1000,0.e0)),RAdd(VDot<4,4>(v_819,VEC4(0.e0,0.e0,l_basisEval_1088,0.e0)),RAdd(VDot<4,4>(v_820,VEC4(0.e0,0.e0,0.e0,0.e0)),RAdd(VDot<4,4>(v_821,VEC4(0.e0,0.e0,0.e0,0.e0)),VDot<4,4>(v_801,VEC4(0.e0,0.e0,0.e0,0.e0)))))))))))))))))))))));
    real l_r_1116 = RMul(l_vdot_1022,l_vdot_1022);
    real l_r_1117 = RMul(l_vdot_1022,l_vdot_1023);
    real l_r_1118 = RMul(l_vdot_1022,l_vdot_1024);
    real l_r_1119 = RMul(l_vdot_1023,l_vdot_1023);
    real l_r_1120 = RMul(l_vdot_1023,l_vdot_1025);
    real l_r_1121 = RMul(l_vdot_1023,l_vdot_1026);
    real l_r_1122 = RMul(l_vdot_1024,l_vdot_1024);
    real l_r_1123 = RMul(l_vdot_1024,l_vdot_1026);
    real l_r_1124 = RMul(l_vdot_1024,l_vdot_1027);
    real l_r_1125 = RMul(l_vdot_1023,l_vdot_1022);
    real l_r_1126 = RMul(l_vdot_1023,l_vdot_1024);
    real l_r_1127 = RMul(l_vdot_1025,l_vdot_1023);
    real l_r_1128 = RMul(l_vdot_1025,l_vdot_1025);
    real l_r_1129 = RMul(l_vdot_1025,l_vdot_1026);
    real l_r_1130 = RMul(l_vdot_1026,l_vdot_1024);
    real l_r_1131 = RMul(l_vdot_1026,l_vdot_1026);
    real l_r_1132 = RMul(l_vdot_1026,l_vdot_1027);
    real l_r_1133 = RMul(l_vdot_1024,l_vdot_1022);
    real l_r_1134 = RMul(l_vdot_1024,l_vdot_1023);
    real l_r_1135 = RMul(l_vdot_1026,l_vdot_1023);
    real l_r_1136 = RMul(l_vdot_1026,l_vdot_1025);
    real l_r_1137 = RMul(l_vdot_1027,l_vdot_1024);
    real l_r_1138 = RMul(l_vdot_1027,l_vdot_1026);
    real l_r_1139 = RMul(l_vdot_1027,l_vdot_1027);
    real l_r_1140 = RAdd(RAdd(RAdd(l_r_1098,l_r_1116),RAdd(l_r_1104,l_r_1119)),RAdd(l_r_1110,l_r_1122));
    real l_r_1141 = RAdd(RAdd(RAdd(l_r_1099,l_r_1117),RAdd(l_r_1105,l_r_1120)),RAdd(l_r_1111,l_r_1123));
    real l_r_1142 = RAdd(RAdd(RAdd(l_r_1100,l_r_1118),RAdd(l_r_1106,l_r_1121)),RAdd(l_r_1112,l_r_1124));
    real l_r_1143 = RAdd(RAdd(RAdd(l_r_1099,l_r_1125),RAdd(l_r_1105,l_r_1127)),RAdd(l_r_1111,l_r_1130));
    real l_r_1144 = RAdd(RAdd(RAdd(l_r_1101,l_r_1119),RAdd(l_r_1107,l_r_1128)),RAdd(l_r_1113,l_r_1131));
    real l_r_1145 = RAdd(RAdd(RAdd(l_r_1102,l_r_1126),RAdd(l_r_1108,l_r_1129)),RAdd(l_r_1114,l_r_1132));
    real l_r_1146 = RAdd(RAdd(RAdd(l_r_1100,l_r_1133),RAdd(l_r_1106,l_r_1135)),RAdd(l_r_1112,l_r_1137));
    real l_r_1147 = RAdd(RAdd(RAdd(l_r_1102,l_r_1134),RAdd(l_r_1108,l_r_1136)),RAdd(l_r_1114,l_r_1138));
    real l_r_1148 = RAdd(RAdd(RAdd(l_r_1103,l_r_1122),RAdd(l_r_1109,l_r_1131)),RAdd(l_r_1115,l_r_1139));
    real l_r_1149 = RMul(l_vdot_1028,l_vdot_1023);
    real l_r_1150 = RMul(l_vdot_1028,l_vdot_1024);
    vec3{4} v_1151 = VEC3{4}(RMul(l_vdot_1028,l_vdot_1022),l_r_1149,l_r_1150);
    real l_r_1152 = RMul(l_vdot_1028,l_vdot_1026);
    vec3{4} v_1153 = VEC3{4}(l_r_1149,RMul(l_vdot_1028,l_vdot_1025),l_r_1152);
    vec3{4} v_1154 = VEC3{4}(l_r_1150,l_r_1152,RMul(l_vdot_1028,l_vdot_1027));
    real l_r_1155 = RMul(l_vdot_1029,l_vdot_1023);
    real l_r_1156 = RMul(l_vdot_1029,l_vdot_1024);
    vec3{4} v_1157 = VEC3{4}(RMul(l_vdot_1029,l_vdot_1022),l_r_1155,l_r_1156);
    real l_r_1158 = RMul(l_vdot_1029,l_vdot_1026);
    vec3{4} v_1159 = VEC3{4}(l_r_1155,RMul(l_vdot_1029,l_vdot_1025),l_r_1158);
    vec3{4} v_1160 = VEC3{4}(l_r_1156,l_r_1158,RMul(l_vdot_1029,l_vdot_1027));
    real l_r_1161 = RMul(l_vdot_1030,l_vdot_1023);
    real l_r_1162 = RMul(l_vdot_1030,l_vdot_1024);
    vec3{4} v_1163 = VEC3{4}(RMul(l_vdot_1030,l_vdot_1022),l_r_1161,l_r_1162);
    real l_r_1164 = RMul(l_vdot_1030,l_vdot_1026);
    vec3{4} v_1165 = VEC3{4}(l_r_1161,RMul(l_vdot_1030,l_vdot_1025),l_r_1164);
    vec3{4} v_1166 = VEC3{4}(l_r_1162,l_r_1164,RMul(l_vdot_1030,l_vdot_1027));
    vec3{4} v_1167 = VAdd<3,4>(v_1151,VEC3{4}(RMul(l_vdot_973,l_r_1140),RMul(l_vdot_973,l_r_1141),RMul(l_vdot_973,l_r_1142)));
    vec3{4} v_1168 = VAdd<3,4>(v_1153,VEC3{4}(RMul(l_vdot_974,l_r_1140),RMul(l_vdot_974,l_r_1141),RMul(l_vdot_974,l_r_1142)));
    vec3{4} v_1169 = VAdd<3,4>(v_1154,VEC3{4}(RMul(l_vdot_975,l_r_1140),RMul(l_vdot_975,l_r_1141),RMul(l_vdot_975,l_r_1142)));
    vec3{4} v_1170 = VAdd<3,4>(v_1157,VEC3{4}(RMul(l_vdot_973,l_r_1143),RMul(l_vdot_973,l_r_1144),RMul(l_vdot_973,l_r_1145)));
    vec3{4} v_1171 = VAdd<3,4>(v_1159,VEC3{4}(RMul(l_vdot_974,l_r_1143),RMul(l_vdot_974,l_r_1144),RMul(l_vdot_974,l_r_1145)));
    vec3{4} v_1172 = VAdd<3,4>(v_1160,VEC3{4}(RMul(l_vdot_975,l_r_1143),RMul(l_vdot_975,l_r_1144),RMul(l_vdot_975,l_r_1145)));
    vec3{4} v_1173 = VAdd<3,4>(v_1163,VEC3{4}(RMul(l_vdot_973,l_r_1146),RMul(l_vdot_973,l_r_1147),RMul(l_vdot_973,l_r_1148)));
    vec3{4} v_1174 = VAdd<3,4>(v_1165,VEC3{4}(RMul(l_vdot_974,l_r_1146),RMul(l_vdot_974,l_r_1147),RMul(l_vdot_974,l_r_1148)));
    vec3{4} v_1175 = VAdd<3,4>(v_1166,VEC3{4}(RMul(l_vdot_975,l_r_1146),RMul(l_vdot_975,l_r_1147),RMul(l_vdot_975,l_r_1148)));
    real l_r_1176 = VIndex<3,4,0>(v_1167);
    real l_r_1177 = VIndex<3,4,0>(v_1170);
    real l_r_1178 = VIndex<3,4,0>(v_1173);
    real l_r_1179 = VIndex<3,4,0>(v_1168);
    real l_r_1180 = VIndex<3,4,0>(v_1171);
    real l_r_1181 = VIndex<3,4,0>(v_1174);
    real l_r_1182 = VIndex<3,4,0>(v_1169);
    real l_r_1183 = VIndex<3,4,0>(v_1172);
    real l_r_1184 = VIndex<3,4,0>(v_1175);
    real l_r_1185 = VIndex<3,4,1>(v_1167);
    real l_r_1186 = VIndex<3,4,1>(v_1170);
    real l_r_1187 = VIndex<3,4,1>(v_1173);
    real l_r_1188 = VIndex<3,4,1>(v_1168);
    real l_r_1189 = VIndex<3,4,1>(v_1171);
    real l_r_1190 = VIndex<3,4,1>(v_1174);
    real l_r_1191 = VIndex<3,4,1>(v_1169);
    real l_r_1192 = VIndex<3,4,1>(v_1172);
    real l_r_1193 = VIndex<3,4,1>(v_1175);
    real l_r_1194 = VIndex<3,4,2>(v_1167);
    real l_r_1195 = VIndex<3,4,2>(v_1170);
    real l_r_1196 = VIndex<3,4,2>(v_1173);
    real l_r_1197 = VIndex<3,4,2>(v_1168);
    real l_r_1198 = VIndex<3,4,2>(v_1171);
    real l_r_1199 = VIndex<3,4,2>(v_1174);
    real l_r_1200 = VIndex<3,4,2>(v_1169);
    real l_r_1201 = VIndex<3,4,2>(v_1172);
    real l_r_1202 = VIndex<3,4,2>(v_1175);
    real l_r_1203 = RMul(l_r_1060,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1176,l_r_1034),RMul(l_r_1177,l_r_1040)),RMul(l_r_1178,l_r_1044)),RMul(l_r_1179,l_r_1048)),RMul(l_r_1180,l_r_1034)),RMul(l_r_1181,l_r_1051)),RMul(l_r_1182,l_r_1054)),RMul(l_r_1183,l_r_1057)),RMul(l_r_1184,l_r_1034)));
    real l_r_1204 = RMul(l_r_1060,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1185,l_r_1034),RMul(l_r_1186,l_r_1040)),RMul(l_r_1187,l_r_1044)),RMul(l_r_1188,l_r_1048)),RMul(l_r_1189,l_r_1034)),RMul(l_r_1190,l_r_1051)),RMul(l_r_1191,l_r_1054)),RMul(l_r_1192,l_r_1057)),RMul(l_r_1193,l_r_1034)));
    real l_r_1205 = RMul(l_r_1060,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1194,l_r_1034),RMul(l_r_1195,l_r_1040)),RMul(l_r_1196,l_r_1044)),RMul(l_r_1197,l_r_1048)),RMul(l_r_1198,l_r_1034)),RMul(l_r_1199,l_r_1051)),RMul(l_r_1200,l_r_1054)),RMul(l_r_1201,l_r_1057)),RMul(l_r_1202,l_r_1034)));
    real l_r_1206 = RMul(l_r_1061,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1176,l_r_1036),RMul(l_r_1177,l_r_1041)),RMul(l_r_1178,l_r_1046)),RMul(l_r_1179,l_r_1049)),RMul(l_r_1180,l_r_1036)),RMul(l_r_1181,l_r_1052)),RMul(l_r_1182,l_r_1055)),RMul(l_r_1183,l_r_1058)),RMul(l_r_1184,l_r_1036)));
    real l_r_1207 = RMul(l_r_1061,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1185,l_r_1036),RMul(l_r_1186,l_r_1041)),RMul(l_r_1187,l_r_1046)),RMul(l_r_1188,l_r_1049)),RMul(l_r_1189,l_r_1036)),RMul(l_r_1190,l_r_1052)),RMul(l_r_1191,l_r_1055)),RMul(l_r_1192,l_r_1058)),RMul(l_r_1193,l_r_1036)));
    real l_r_1208 = RMul(l_r_1061,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1194,l_r_1036),RMul(l_r_1195,l_r_1041)),RMul(l_r_1196,l_r_1046)),RMul(l_r_1197,l_r_1049)),RMul(l_r_1198,l_r_1036)),RMul(l_r_1199,l_r_1052)),RMul(l_r_1200,l_r_1055)),RMul(l_r_1201,l_r_1058)),RMul(l_r_1202,l_r_1036)));
    real l_r_1209 = RMul(l_r_1062,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1176,l_r_1038),RMul(l_r_1177,l_r_1042)),RMul(l_r_1178,l_r_1047)),RMul(l_r_1179,l_r_1050)),RMul(l_r_1180,l_r_1038)),RMul(l_r_1181,l_r_1053)),RMul(l_r_1182,l_r_1056)),RMul(l_r_1183,l_r_1059)),RMul(l_r_1184,l_r_1038)));
    real l_r_1210 = RMul(l_r_1062,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1185,l_r_1038),RMul(l_r_1186,l_r_1042)),RMul(l_r_1187,l_r_1047)),RMul(l_r_1188,l_r_1050)),RMul(l_r_1189,l_r_1038)),RMul(l_r_1190,l_r_1053)),RMul(l_r_1191,l_r_1056)),RMul(l_r_1192,l_r_1059)),RMul(l_r_1193,l_r_1038)));
    real l_r_1211 = RMul(l_r_1062,RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1194,l_r_1038),RMul(l_r_1195,l_r_1042)),RMul(l_r_1196,l_r_1047)),RMul(l_r_1197,l_r_1050)),RMul(l_r_1198,l_r_1038)),RMul(l_r_1199,l_r_1053)),RMul(l_r_1200,l_r_1056)),RMul(l_r_1201,l_r_1059)),RMul(l_r_1202,l_r_1038)));
    real l_op1_e3_l_146_1212 = VDot<3,4>(v_1063,v_1063);
    vec3{4} v_1213 = VEC3{4}(RAdd(RAdd(RAdd(l_r_1203,l_r_1203),RAdd(l_r_1206,l_r_1206)),RAdd(l_r_1209,l_r_1209)),RAdd(RAdd(RAdd(l_r_1204,l_r_1204),RAdd(l_r_1207,l_r_1207)),RAdd(l_r_1210,l_r_1210)),RAdd(RAdd(RAdd(l_r_1205,l_r_1205),RAdd(l_r_1208,l_r_1208)),RAdd(l_r_1211,l_r_1211)));
    vec3{4} v_1214 = VScale<3,4>(l_op1_e3_l_146_1212,v_1213);
    real l_r_1215 = RDiv(0.1e1,VDot<3,4>(v_1213,v_1213));
    vec3{4} v_1216 = VNeg<3,4>(VEC3{4}(RMul(l_r_1215,VIndex<3,4,0>(v_1214)),RMul(l_r_1215,VIndex<3,4,1>(v_1214)),RMul(l_r_1215,VIndex<3,4,2>(v_1214))));
    real l__t_1217 = RMul(globals.maxAlpha,RClamp(0.e0,0.1e1,RMul(0.15e1,RSub(0.1e1,RDiv(Abs<real>(Sqrt(VDot<3,4>(v_1216,v_1216))),globals.thick)))));
    vec3{4} v_1218 = v_1151;
    vec3{4} v_1219 = v_1153;
    vec3{4} v_1220 = v_1154;
    vec3{4} v_1221 = v_1157;
    vec3{4} v_1222 = v_1159;
    vec3{4} v_1223 = v_1063;
    vec3{4} v_1224 = v_1160;
    vec3{4} v_1225 = v_1163;
    vec3{4} v_1226 = v_1165;
    vec3{4} v_1227 = v_1166;
    vec4 v_1228 = v_801;
    vec4 v_1229 = v_802;
    vec4 v_1230 = v_803;
    vec4 v_1231 = v_804;
    vec4 v_1232 = v_805;
    vec4 v_1233 = v_806;
    vec4 v_1234 = v_807;
    vec4 v_1235 = v_808;
    vec4 v_1236 = v_809;
    vec4 v_1237 = v_810;
    vec4 v_1238 = v_811;
    vec4 v_1239 = v_812;
    vec4 v_1240 = v_813;
    vec4 v_1241 = v_814;
    vec4 v_1242 = v_815;
    vec4 v_1243 = v_816;
    vec4 v_1244 = v_817;
    vec4 v_1245 = v_818;
    vec4 v_1246 = v_819;
    vec4 v_1247 = v_820;
    vec4 v_1248 = v_821;
    if (EQ<real>(l__t_1217,0.e0)) {
      self.rayN = l_rayN_69;
      active;
    }
    real l__t_1249 = MathFn<pow>(RSub(0.1e1,l__t_1217),self.alphaFix);
    if (NEQ<real>(self.phKs,0.e0)) {
      vec3{4} v_1250 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.eyeDir)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
      real l_r_1251 = RAdd(RAdd(l_r_1099,l_r_1105),l_r_1111);
      real l_r_1252 = RAdd(RAdd(l_r_1100,l_r_1106),l_r_1112);
      real l_r_1253 = RAdd(RAdd(l_r_1102,l_r_1108),l_r_1114);
      vec3{4} v_1254 = VAdd<3,4>(VEC3{4}(RAdd(RAdd(l_r_1098,l_r_1104),l_r_1110),l_r_1251,l_r_1252),VEC3{4}(RAdd(RAdd(l_r_1116,l_r_1119),l_r_1122),RAdd(RAdd(l_r_1117,l_r_1120),l_r_1123),RAdd(RAdd(l_r_1118,l_r_1121),l_r_1124)));
      vec3{4} v_1255 = VAdd<3,4>(VEC3{4}(l_r_1251,RAdd(RAdd(l_r_1101,l_r_1107),l_r_1113),l_r_1253),VEC3{4}(RAdd(RAdd(l_r_1125,l_r_1127),l_r_1130),RAdd(RAdd(l_r_1119,l_r_1128),l_r_1131),RAdd(RAdd(l_r_1126,l_r_1129),l_r_1132)));
      vec3{4} v_1256 = VAdd<3,4>(VEC3{4}(l_r_1252,l_r_1253,RAdd(RAdd(l_r_1103,l_r_1109),l_r_1115)),VEC3{4}(RAdd(RAdd(l_r_1133,l_r_1135),l_r_1137),RAdd(RAdd(l_r_1134,l_r_1136),l_r_1138),RAdd(RAdd(l_r_1122,l_r_1131),l_r_1139)));
      real l_r_1257 = VIndex<3,4,0>(v_1254);
      real l_r_1258 = VIndex<3,4,1>(v_1254);
      real l_r_1259 = VIndex<3,4,2>(v_1254);
      real l_r_1260 = VIndex<3,4,0>(v_1255);
      real l_r_1261 = VIndex<3,4,1>(v_1255);
      real l_r_1262 = VIndex<3,4,2>(v_1255);
      real l_r_1263 = VIndex<3,4,0>(v_1256);
      real l_r_1264 = VIndex<3,4,1>(v_1256);
      real l_r_1265 = VIndex<3,4,2>(v_1256);
      vec3{4} v_1266 = VAdd<3,4>(v_1218,VEC3{4}(RMul(l_vdot_973,l_r_1257),RMul(l_vdot_973,l_r_1258),RMul(l_vdot_973,l_r_1259)));
      vec3{4} v_1267 = VAdd<3,4>(v_1219,VEC3{4}(RMul(l_vdot_974,l_r_1257),RMul(l_vdot_974,l_r_1258),RMul(l_vdot_974,l_r_1259)));
      vec3{4} v_1268 = VAdd<3,4>(v_1220,VEC3{4}(RMul(l_vdot_975,l_r_1257),RMul(l_vdot_975,l_r_1258),RMul(l_vdot_975,l_r_1259)));
      vec3{4} v_1269 = VAdd<3,4>(v_1221,VEC3{4}(RMul(l_vdot_973,l_r_1260),RMul(l_vdot_973,l_r_1261),RMul(l_vdot_973,l_r_1262)));
      vec3{4} v_1270 = VAdd<3,4>(v_1222,VEC3{4}(RMul(l_vdot_974,l_r_1260),RMul(l_vdot_974,l_r_1261),RMul(l_vdot_974,l_r_1262)));
      vec3{4} v_1271 = VAdd<3,4>(v_1224,VEC3{4}(RMul(l_vdot_975,l_r_1260),RMul(l_vdot_975,l_r_1261),RMul(l_vdot_975,l_r_1262)));
      vec3{4} v_1272 = VAdd<3,4>(v_1225,VEC3{4}(RMul(l_vdot_973,l_r_1263),RMul(l_vdot_973,l_r_1264),RMul(l_vdot_973,l_r_1265)));
      vec3{4} v_1273 = VAdd<3,4>(v_1226,VEC3{4}(RMul(l_vdot_974,l_r_1263),RMul(l_vdot_974,l_r_1264),RMul(l_vdot_974,l_r_1265)));
      vec3{4} v_1274 = VAdd<3,4>(v_1227,VEC3{4}(RMul(l_vdot_975,l_r_1263),RMul(l_vdot_975,l_r_1264),RMul(l_vdot_975,l_r_1265)));
      real l_r_1275 = VIndex<3,4,0>(v_1266);
      real l_r_1276 = VIndex<3,4,0>(v_1269);
      real l_r_1277 = VIndex<3,4,0>(v_1272);
      real l_r_1278 = VIndex<3,4,0>(v_1267);
      real l_r_1279 = VIndex<3,4,0>(v_1270);
      real l_r_1280 = VIndex<3,4,0>(v_1273);
      real l_r_1281 = VIndex<3,4,0>(v_1268);
      real l_r_1282 = VIndex<3,4,0>(v_1271);
      real l_r_1283 = VIndex<3,4,0>(v_1274);
      real l_r_1284 = VIndex<3,4,1>(v_1266);
      real l_r_1285 = VIndex<3,4,1>(v_1269);
      real l_r_1286 = VIndex<3,4,1>(v_1272);
      real l_r_1287 = VIndex<3,4,1>(v_1267);
      real l_r_1288 = VIndex<3,4,1>(v_1270);
      real l_r_1289 = VIndex<3,4,1>(v_1273);
      real l_r_1290 = VIndex<3,4,1>(v_1268);
      real l_r_1291 = VIndex<3,4,1>(v_1271);
      real l_r_1292 = VIndex<3,4,1>(v_1274);
      real l_r_1293 = VIndex<3,4,2>(v_1266);
      real l_r_1294 = VIndex<3,4,2>(v_1269);
      real l_r_1295 = VIndex<3,4,2>(v_1272);
      real l_r_1296 = VIndex<3,4,2>(v_1267);
      real l_r_1297 = VIndex<3,4,2>(v_1270);
      real l_r_1298 = VIndex<3,4,2>(v_1273);
      real l_r_1299 = VIndex<3,4,2>(v_1268);
      real l_r_1300 = VIndex<3,4,2>(v_1271);
      real l_r_1301 = VIndex<3,4,2>(v_1274);
      vec3{4} v_1302 = VEC3{4}(VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1275,l_r_1034),RMul(l_r_1276,l_r_1040)),RMul(l_r_1277,l_r_1044)),RMul(l_r_1278,l_r_1048)),RMul(l_r_1279,l_r_1034)),RMul(l_r_1280,l_r_1051)),RMul(l_r_1281,l_r_1054)),RMul(l_r_1282,l_r_1057)),RMul(l_r_1283,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1275,l_r_1036),RMul(l_r_1276,l_r_1041)),RMul(l_r_1277,l_r_1046)),RMul(l_r_1278,l_r_1049)),RMul(l_r_1279,l_r_1036)),RMul(l_r_1280,l_r_1052)),RMul(l_r_1281,l_r_1055)),RMul(l_r_1282,l_r_1058)),RMul(l_r_1283,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1275,l_r_1038),RMul(l_r_1276,l_r_1042)),RMul(l_r_1277,l_r_1047)),RMul(l_r_1278,l_r_1050)),RMul(l_r_1279,l_r_1038)),RMul(l_r_1280,l_r_1053)),RMul(l_r_1281,l_r_1056)),RMul(l_r_1282,l_r_1059)),RMul(l_r_1283,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1284,l_r_1034),RMul(l_r_1285,l_r_1040)),RMul(l_r_1286,l_r_1044)),RMul(l_r_1287,l_r_1048)),RMul(l_r_1288,l_r_1034)),RMul(l_r_1289,l_r_1051)),RMul(l_r_1290,l_r_1054)),RMul(l_r_1291,l_r_1057)),RMul(l_r_1292,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1284,l_r_1036),RMul(l_r_1285,l_r_1041)),RMul(l_r_1286,l_r_1046)),RMul(l_r_1287,l_r_1049)),RMul(l_r_1288,l_r_1036)),RMul(l_r_1289,l_r_1052)),RMul(l_r_1290,l_r_1055)),RMul(l_r_1291,l_r_1058)),RMul(l_r_1292,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1284,l_r_1038),RMul(l_r_1285,l_r_1042)),RMul(l_r_1286,l_r_1047)),RMul(l_r_1287,l_r_1050)),RMul(l_r_1288,l_r_1038)),RMul(l_r_1289,l_r_1053)),RMul(l_r_1290,l_r_1056)),RMul(l_r_1291,l_r_1059)),RMul(l_r_1292,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1293,l_r_1034),RMul(l_r_1294,l_r_1040)),RMul(l_r_1295,l_r_1044)),RMul(l_r_1296,l_r_1048)),RMul(l_r_1297,l_r_1034)),RMul(l_r_1298,l_r_1051)),RMul(l_r_1299,l_r_1054)),RMul(l_r_1300,l_r_1057)),RMul(l_r_1301,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1293,l_r_1036),RMul(l_r_1294,l_r_1041)),RMul(l_r_1295,l_r_1046)),RMul(l_r_1296,l_r_1049)),RMul(l_r_1297,l_r_1036)),RMul(l_r_1298,l_r_1052)),RMul(l_r_1299,l_r_1055)),RMul(l_r_1300,l_r_1058)),RMul(l_r_1301,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1293,l_r_1038),RMul(l_r_1294,l_r_1042)),RMul(l_r_1295,l_r_1047)),RMul(l_r_1296,l_r_1050)),RMul(l_r_1297,l_r_1038)),RMul(l_r_1298,l_r_1053)),RMul(l_r_1299,l_r_1056)),RMul(l_r_1300,l_r_1059)),RMul(l_r_1301,l_r_1038)))));
      vec3{4} v_1303 = VAdd<3,4>(v_1302,v_1302);
      vec3{4} v_1304 = VScale<3,4>(l_op1_e3_l_146_1212,v_1303);
      real l_r_1305 = RDiv(0.1e1,VDot<3,4>(v_1303,v_1303));
      vec3{4} v_1306 = VNeg<3,4>(VEC3{4}(RMul(l_r_1305,VIndex<3,4,0>(v_1304)),RMul(l_r_1305,VIndex<3,4,1>(v_1304)),RMul(l_r_1305,VIndex<3,4,2>(v_1304))));
      l_scomp_1307 = MathFn<pow>(Abs<real>(RMul(RDiv(0.1e1,Sqrt(VDot<3,4>(v_1250,v_1250))),VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(v_1306,v_1306))),v_1306)),v_1250))),self.phSp);
    } else {
      l_scomp_1307 = 0.e0;
    }
    real l_cmin_1308 = TensorIndex<&tensor[2],[0]>(TensorRef<[2]>(globals.cminmax));
    real l_cmax_1309 = TensorIndex<&tensor[2],[1]>(TensorRef<[2]>(globals.cminmax));
    vec3{4} v_1310 = VEC3{4}(0.1e1,0.1e1,0.1e1);
    if (NEQ<real>(l_cmin_1308,l_cmax_1309)) {
      tensor[3,2] l_voxels_1408;
      real l_r_1311 = RAdd(RAdd(l_r_1099,l_r_1105),l_r_1111);
      real l_r_1312 = RAdd(RAdd(l_r_1100,l_r_1106),l_r_1112);
      real l_r_1313 = RAdd(RAdd(l_r_1102,l_r_1108),l_r_1114);
      vec3{4} v_1314 = VAdd<3,4>(VEC3{4}(RAdd(RAdd(l_r_1098,l_r_1104),l_r_1110),l_r_1311,l_r_1312),VEC3{4}(RAdd(RAdd(l_r_1116,l_r_1119),l_r_1122),RAdd(RAdd(l_r_1117,l_r_1120),l_r_1123),RAdd(RAdd(l_r_1118,l_r_1121),l_r_1124)));
      vec3{4} v_1315 = VAdd<3,4>(VEC3{4}(l_r_1311,RAdd(RAdd(l_r_1101,l_r_1107),l_r_1113),l_r_1313),VEC3{4}(RAdd(RAdd(l_r_1125,l_r_1127),l_r_1130),RAdd(RAdd(l_r_1119,l_r_1128),l_r_1131),RAdd(RAdd(l_r_1126,l_r_1129),l_r_1132)));
      vec3{4} v_1316 = VAdd<3,4>(VEC3{4}(l_r_1312,l_r_1313,RAdd(RAdd(l_r_1103,l_r_1109),l_r_1115)),VEC3{4}(RAdd(RAdd(l_r_1133,l_r_1135),l_r_1137),RAdd(RAdd(l_r_1134,l_r_1136),l_r_1138),RAdd(RAdd(l_r_1122,l_r_1131),l_r_1139)));
      real l_r_1317 = VIndex<3,4,0>(v_1314);
      real l_r_1318 = VIndex<3,4,1>(v_1314);
      real l_r_1319 = VIndex<3,4,2>(v_1314);
      real l_r_1320 = VIndex<3,4,0>(v_1315);
      real l_r_1321 = VIndex<3,4,1>(v_1315);
      real l_r_1322 = VIndex<3,4,2>(v_1315);
      real l_r_1323 = VIndex<3,4,0>(v_1316);
      real l_r_1324 = VIndex<3,4,1>(v_1316);
      real l_r_1325 = VIndex<3,4,2>(v_1316);
      vec3{4} v_1326 = VAdd<3,4>(v_1218,VEC3{4}(RMul(l_vdot_973,l_r_1317),RMul(l_vdot_973,l_r_1318),RMul(l_vdot_973,l_r_1319)));
      vec3{4} v_1327 = VAdd<3,4>(v_1219,VEC3{4}(RMul(l_vdot_974,l_r_1317),RMul(l_vdot_974,l_r_1318),RMul(l_vdot_974,l_r_1319)));
      vec3{4} v_1328 = VAdd<3,4>(v_1220,VEC3{4}(RMul(l_vdot_975,l_r_1317),RMul(l_vdot_975,l_r_1318),RMul(l_vdot_975,l_r_1319)));
      vec3{4} v_1329 = VAdd<3,4>(v_1221,VEC3{4}(RMul(l_vdot_973,l_r_1320),RMul(l_vdot_973,l_r_1321),RMul(l_vdot_973,l_r_1322)));
      vec3{4} v_1330 = VAdd<3,4>(v_1222,VEC3{4}(RMul(l_vdot_974,l_r_1320),RMul(l_vdot_974,l_r_1321),RMul(l_vdot_974,l_r_1322)));
      vec3{4} v_1331 = VAdd<3,4>(v_1224,VEC3{4}(RMul(l_vdot_975,l_r_1320),RMul(l_vdot_975,l_r_1321),RMul(l_vdot_975,l_r_1322)));
      vec3{4} v_1332 = VAdd<3,4>(v_1225,VEC3{4}(RMul(l_vdot_973,l_r_1323),RMul(l_vdot_973,l_r_1324),RMul(l_vdot_973,l_r_1325)));
      vec3{4} v_1333 = VAdd<3,4>(v_1226,VEC3{4}(RMul(l_vdot_974,l_r_1323),RMul(l_vdot_974,l_r_1324),RMul(l_vdot_974,l_r_1325)));
      vec3{4} v_1334 = VAdd<3,4>(v_1227,VEC3{4}(RMul(l_vdot_975,l_r_1323),RMul(l_vdot_975,l_r_1324),RMul(l_vdot_975,l_r_1325)));
      real l_r_1335 = VIndex<3,4,0>(v_1326);
      real l_r_1336 = VIndex<3,4,0>(v_1329);
      real l_r_1337 = VIndex<3,4,0>(v_1332);
      real l_r_1338 = VIndex<3,4,0>(v_1327);
      real l_r_1339 = VIndex<3,4,0>(v_1330);
      real l_r_1340 = VIndex<3,4,0>(v_1333);
      real l_r_1341 = VIndex<3,4,0>(v_1328);
      real l_r_1342 = VIndex<3,4,0>(v_1331);
      real l_r_1343 = VIndex<3,4,0>(v_1334);
      real l_r_1344 = VIndex<3,4,1>(v_1326);
      real l_r_1345 = VIndex<3,4,1>(v_1329);
      real l_r_1346 = VIndex<3,4,1>(v_1332);
      real l_r_1347 = VIndex<3,4,1>(v_1327);
      real l_r_1348 = VIndex<3,4,1>(v_1330);
      real l_r_1349 = VIndex<3,4,1>(v_1333);
      real l_r_1350 = VIndex<3,4,1>(v_1328);
      real l_r_1351 = VIndex<3,4,1>(v_1331);
      real l_r_1352 = VIndex<3,4,1>(v_1334);
      real l_r_1353 = VIndex<3,4,2>(v_1326);
      real l_r_1354 = VIndex<3,4,2>(v_1329);
      real l_r_1355 = VIndex<3,4,2>(v_1332);
      real l_r_1356 = VIndex<3,4,2>(v_1327);
      real l_r_1357 = VIndex<3,4,2>(v_1330);
      real l_r_1358 = VIndex<3,4,2>(v_1333);
      real l_r_1359 = VIndex<3,4,2>(v_1328);
      real l_r_1360 = VIndex<3,4,2>(v_1331);
      real l_r_1361 = VIndex<3,4,2>(v_1334);
      vec3{4} v_1362 = VEC3{4}(VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1335,l_r_1034),RMul(l_r_1336,l_r_1040)),RMul(l_r_1337,l_r_1044)),RMul(l_r_1338,l_r_1048)),RMul(l_r_1339,l_r_1034)),RMul(l_r_1340,l_r_1051)),RMul(l_r_1341,l_r_1054)),RMul(l_r_1342,l_r_1057)),RMul(l_r_1343,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1335,l_r_1036),RMul(l_r_1336,l_r_1041)),RMul(l_r_1337,l_r_1046)),RMul(l_r_1338,l_r_1049)),RMul(l_r_1339,l_r_1036)),RMul(l_r_1340,l_r_1052)),RMul(l_r_1341,l_r_1055)),RMul(l_r_1342,l_r_1058)),RMul(l_r_1343,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1335,l_r_1038),RMul(l_r_1336,l_r_1042)),RMul(l_r_1337,l_r_1047)),RMul(l_r_1338,l_r_1050)),RMul(l_r_1339,l_r_1038)),RMul(l_r_1340,l_r_1053)),RMul(l_r_1341,l_r_1056)),RMul(l_r_1342,l_r_1059)),RMul(l_r_1343,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1344,l_r_1034),RMul(l_r_1345,l_r_1040)),RMul(l_r_1346,l_r_1044)),RMul(l_r_1347,l_r_1048)),RMul(l_r_1348,l_r_1034)),RMul(l_r_1349,l_r_1051)),RMul(l_r_1350,l_r_1054)),RMul(l_r_1351,l_r_1057)),RMul(l_r_1352,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1344,l_r_1036),RMul(l_r_1345,l_r_1041)),RMul(l_r_1346,l_r_1046)),RMul(l_r_1347,l_r_1049)),RMul(l_r_1348,l_r_1036)),RMul(l_r_1349,l_r_1052)),RMul(l_r_1350,l_r_1055)),RMul(l_r_1351,l_r_1058)),RMul(l_r_1352,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1344,l_r_1038),RMul(l_r_1345,l_r_1042)),RMul(l_r_1346,l_r_1047)),RMul(l_r_1347,l_r_1050)),RMul(l_r_1348,l_r_1038)),RMul(l_r_1349,l_r_1053)),RMul(l_r_1350,l_r_1056)),RMul(l_r_1351,l_r_1059)),RMul(l_r_1352,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1353,l_r_1034),RMul(l_r_1354,l_r_1040)),RMul(l_r_1355,l_r_1044)),RMul(l_r_1356,l_r_1048)),RMul(l_r_1357,l_r_1034)),RMul(l_r_1358,l_r_1051)),RMul(l_r_1359,l_r_1054)),RMul(l_r_1360,l_r_1057)),RMul(l_r_1361,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1353,l_r_1036),RMul(l_r_1354,l_r_1041)),RMul(l_r_1355,l_r_1046)),RMul(l_r_1356,l_r_1049)),RMul(l_r_1357,l_r_1036)),RMul(l_r_1358,l_r_1052)),RMul(l_r_1359,l_r_1055)),RMul(l_r_1360,l_r_1058)),RMul(l_r_1361,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1353,l_r_1038),RMul(l_r_1354,l_r_1042)),RMul(l_r_1355,l_r_1047)),RMul(l_r_1356,l_r_1050)),RMul(l_r_1357,l_r_1038)),RMul(l_r_1358,l_r_1053)),RMul(l_r_1359,l_r_1056)),RMul(l_r_1360,l_r_1059)),RMul(l_r_1361,l_r_1038)))));
      vec3{4} v_1363 = VAdd<3,4>(v_1362,v_1362);
      vec3{4} v_1364 = VScale<3,4>(l_op1_e3_l_146_1212,v_1363);
      real l_r_1365 = RDiv(0.1e1,VDot<3,4>(v_1363,v_1363));
      vec3{4} v_1366 = VAdd<3,4>(v_72,VNeg<3,4>(VEC3{4}(RMul(l_r_1365,VIndex<3,4,0>(v_1364)),RMul(l_r_1365,VIndex<3,4,1>(v_1364)),RMul(l_r_1365,VIndex<3,4,2>(v_1364)))));
      real l_varAcc_1367 = VIndex<3,4,0>(v_1366);
      real l_varAcc_1368 = VIndex<3,4,1>(v_1366);
      real l_varAcc_1369 = VIndex<3,4,2>(v_1366);
      real l_prod_1370 = RMul(0.1e1,l_varAcc_1369);
      real l_prod_1371 = RMul(l_varAcc_1368,0.1e1);
      real l_prod2_1372 = RMul(l_varAcc_1369,l_varAcc_1369);
      real l_prod_1373 = RMul(0.1e1,l_prod2_1372);
      real l_prod_1374 = RMul(l_varAcc_1368,l_varAcc_1369);
      real l_prod2_1375 = RMul(l_varAcc_1368,l_varAcc_1368);
      real l_prod_1376 = RMul(l_prod2_1375,0.1e1);
      real l_prod2_1377 = RMul(l_varAcc_1367,l_varAcc_1367);
      real l_prod3_1378 = RMul(l_prod2_1372,l_varAcc_1369);
      real l_prod_1379 = RMul(0.1e1,l_prod3_1378);
      real l_prod_1380 = RMul(l_varAcc_1368,l_prod2_1372);
      real l_prod_1381 = RMul(l_prod2_1375,l_varAcc_1369);
      real l_prod3_1382 = RMul(l_prod2_1375,l_varAcc_1368);
      real l_prod_1383 = RMul(l_prod3_1382,0.1e1);
      real l_prod3_1384 = RMul(l_prod2_1377,l_varAcc_1367);
      real l_prod4_1385 = RMul(l_prod3_1378,l_varAcc_1369);
      real l_prod_1386 = RMul(0.1e1,l_prod4_1385);
      real l_prod_1387 = RMul(l_varAcc_1368,l_prod3_1378);
      real l_prod_1388 = RMul(l_prod2_1375,l_prod2_1372);
      real l_prod_1389 = RMul(l_prod3_1382,l_varAcc_1369);
      real l_prod4_1390 = RMul(l_prod3_1382,l_varAcc_1368);
      real l_prod_1391 = RMul(l_prod4_1390,0.1e1);
      real l_prod4_1392 = RMul(l_prod3_1384,l_varAcc_1367);
      real l_prod5_1393 = RMul(l_prod4_1385,l_varAcc_1369);
      real l_prod_1394 = RMul(0.1e1,l_prod5_1393);
      real l_prod_1395 = RMul(l_varAcc_1368,l_prod4_1385);
      real l_prod_1396 = RMul(l_prod2_1375,l_prod3_1378);
      real l_prod_1397 = RMul(l_prod3_1382,l_prod2_1372);
      real l_prod_1398 = RMul(l_prod4_1390,l_varAcc_1369);
      real l_prod5_1399 = RMul(l_prod4_1390,l_varAcc_1368);
      real l_prod_1400 = RMul(l_prod5_1399,0.1e1);
      real l_prod5_1401 = RMul(l_prod4_1392,l_varAcc_1367);
      real l_imgPos_1402 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.cmap),RAdd(0.e0,RMul(RDiv(RSub(RAdd(VDot<4,4>(v_1229,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1373)),RMul(0.1e1,RMul(0.1e1,l_prod_1374)),RMul(0.1e1,RMul(0.1e1,l_prod_1376)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1370)))),RAdd(VDot<4,4>(v_1230,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1371)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_825)),RMul(0.1e1,RMul(0.1e1,l_prod_1379)),RMul(0.1e1,RMul(0.1e1,l_prod_1380)))),RAdd(VDot<4,4>(v_1231,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1381)),RMul(0.1e1,RMul(0.1e1,l_prod_1383)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1373)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1374)))),RAdd(VDot<4,4>(v_1232,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1376)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1370)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1371)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_825)))),RAdd(VDot<4,4>(v_1233,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1386)),RMul(0.1e1,RMul(0.1e1,l_prod_1387)),RMul(0.1e1,RMul(0.1e1,l_prod_1388)),RMul(0.1e1,RMul(0.1e1,l_prod_1389)))),RAdd(VDot<4,4>(v_1234,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1391)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1379)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1380)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1381)))),RAdd(VDot<4,4>(v_1235,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1383)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1373)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1374)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1376)))),RAdd(VDot<4,4>(v_1236,VEC4(RMul(0.1e1,RMul(l_prod3_1384,l_prod_1370)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1371)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_825)),RMul(0.1e1,RMul(0.1e1,l_prod_1394)))),RAdd(VDot<4,4>(v_1237,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1395)),RMul(0.1e1,RMul(0.1e1,l_prod_1396)),RMul(0.1e1,RMul(0.1e1,l_prod_1397)),RMul(0.1e1,RMul(0.1e1,l_prod_1398)))),RAdd(VDot<4,4>(v_1238,VEC4(RMul(0.1e1,RMul(0.1e1,l_prod_1400)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1386)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1387)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1388)))),RAdd(VDot<4,4>(v_1239,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1389)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1391)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1379)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1380)))),RAdd(VDot<4,4>(v_1240,VEC4(RMul(0.1e1,RMul(l_prod2_1377,l_prod_1381)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1383)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1373)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1374)))),RAdd(VDot<4,4>(v_1241,VEC4(RMul(0.1e1,RMul(l_prod3_1384,l_prod_1376)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_1370)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_1371)),RMul(0.1e1,RMul(l_prod5_1401,l_prod_825)))),RAdd(VDot<4,4>(v_1242,VEC4(RMul(0.1e1,RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1393,l_varAcc_1369)))),RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_1368,l_prod5_1393))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod2_1375,l_prod4_1385))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod3_1382,l_prod3_1378))))),RAdd(VDot<4,4>(v_1243,VEC4(RMul(0.1e1,RMul(0.1e1,RMul(l_prod4_1390,l_prod2_1372))),RMul(0.1e1,RMul(0.1e1,RMul(l_prod5_1399,l_varAcc_1369))),RMul(0.1e1,RMul(0.1e1,RMul(RMul(l_prod5_1399,l_varAcc_1368),0.1e1))),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1394)))),RAdd(VDot<4,4>(v_1244,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1395)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1396)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1397)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1398)))),RAdd(VDot<4,4>(v_1245,VEC4(RMul(0.1e1,RMul(l_varAcc_1367,l_prod_1400)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1386)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1387)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1388)))),RAdd(VDot<4,4>(v_1246,VEC4(RMul(0.1e1,RMul(l_prod2_1377,l_prod_1389)),RMul(0.1e1,RMul(l_prod2_1377,l_prod_1391)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1379)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1380)))),RAdd(VDot<4,4>(v_1247,VEC4(RMul(0.1e1,RMul(l_prod3_1384,l_prod_1381)),RMul(0.1e1,RMul(l_prod3_1384,l_prod_1383)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_1373)),RMul(0.1e1,RMul(l_prod4_1392,l_prod_1374)))),RAdd(VDot<4,4>(v_1248,VEC4(RMul(0.1e1,RMul(l_prod4_1392,l_prod_1376)),RMul(0.1e1,RMul(l_prod5_1401,l_prod_1370)),RMul(0.1e1,RMul(l_prod5_1401,l_prod_1371)),RMul(0.1e1,RMul(RMul(l_prod5_1401,l_varAcc_1367),l_prod_825)))),VDot<4,4>(v_1228,VEC4(l_basisEval_827,RMul(0.1e1,RMul(0.1e1,l_prod_1370)),RMul(0.1e1,RMul(0.1e1,l_prod_1371)),RMul(0.1e1,RMul(l_varAcc_1367,l_prod_825)))))))))))))))))))))))),l_cmin_1308),RSub(l_cmax_1309,l_cmin_1308)),RSub(0.1e1,0.e0)))),Translate<IMAGE1D<double[3]>>(globals.cmap));
      real l_nd_1403 = RFloor(l_imgPos_1402);
      real l_f_1404 = RSub(l_imgPos_1402,l_nd_1403);
      int l_n_1405 = RealToInt(l_nd_1403);
      if (IndexInside<IMAGE1D<double[3]>,2>(l_n_1405,globals.cmap)) {
        int l_offp_1406 = IMul(3,l_n_1405);
        int l_offp_1407 = IMul(3,IAdd(l_n_1405,1));
        l_voxels_1408 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1406),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1407),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1406,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1407,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1406,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1407,2))];
      } else {
        int l_offp_1409 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,l_n_1405));
        int l_offp_1410 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.cmap,IAdd(l_n_1405,1)));
        l_voxels_1408 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1409),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,l_offp_1410),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1409,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1410,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1409,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.cmap,IAdd(l_offp_1410,2))];
      }
      vec2 v_1411 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_1404,RSub(l_f_1404,0.1e1)),VEC2(-0.1e1,0.1e1)));
      v_1412 = VEC3{4}(VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_1408)),v_1411),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_1408)),v_1411),VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_1408)),v_1411));
    } else {
      v_1412 = v_1310;
    }
    real l_r_1413 = RAdd(RAdd(l_r_1099,l_r_1105),l_r_1111);
    real l_r_1414 = RAdd(RAdd(l_r_1100,l_r_1106),l_r_1112);
    real l_r_1415 = RAdd(RAdd(l_r_1102,l_r_1108),l_r_1114);
    vec3{4} v_1416 = VAdd<3,4>(VEC3{4}(RAdd(RAdd(l_r_1098,l_r_1104),l_r_1110),l_r_1413,l_r_1414),VEC3{4}(RAdd(RAdd(l_r_1116,l_r_1119),l_r_1122),RAdd(RAdd(l_r_1117,l_r_1120),l_r_1123),RAdd(RAdd(l_r_1118,l_r_1121),l_r_1124)));
    vec3{4} v_1417 = VAdd<3,4>(VEC3{4}(l_r_1413,RAdd(RAdd(l_r_1101,l_r_1107),l_r_1113),l_r_1415),VEC3{4}(RAdd(RAdd(l_r_1125,l_r_1127),l_r_1130),RAdd(RAdd(l_r_1119,l_r_1128),l_r_1131),RAdd(RAdd(l_r_1126,l_r_1129),l_r_1132)));
    vec3{4} v_1418 = VAdd<3,4>(VEC3{4}(l_r_1414,l_r_1415,RAdd(RAdd(l_r_1103,l_r_1109),l_r_1115)),VEC3{4}(RAdd(RAdd(l_r_1133,l_r_1135),l_r_1137),RAdd(RAdd(l_r_1134,l_r_1136),l_r_1138),RAdd(RAdd(l_r_1122,l_r_1131),l_r_1139)));
    real l_r_1419 = VIndex<3,4,0>(v_1416);
    real l_r_1420 = VIndex<3,4,1>(v_1416);
    real l_r_1421 = VIndex<3,4,2>(v_1416);
    real l_r_1422 = VIndex<3,4,0>(v_1417);
    real l_r_1423 = VIndex<3,4,1>(v_1417);
    real l_r_1424 = VIndex<3,4,2>(v_1417);
    real l_r_1425 = VIndex<3,4,0>(v_1418);
    real l_r_1426 = VIndex<3,4,1>(v_1418);
    real l_r_1427 = VIndex<3,4,2>(v_1418);
    vec3{4} v_1428 = VAdd<3,4>(v_1218,VEC3{4}(RMul(l_vdot_973,l_r_1419),RMul(l_vdot_973,l_r_1420),RMul(l_vdot_973,l_r_1421)));
    vec3{4} v_1429 = VAdd<3,4>(v_1219,VEC3{4}(RMul(l_vdot_974,l_r_1419),RMul(l_vdot_974,l_r_1420),RMul(l_vdot_974,l_r_1421)));
    vec3{4} v_1430 = VAdd<3,4>(v_1220,VEC3{4}(RMul(l_vdot_975,l_r_1419),RMul(l_vdot_975,l_r_1420),RMul(l_vdot_975,l_r_1421)));
    vec3{4} v_1431 = VAdd<3,4>(v_1221,VEC3{4}(RMul(l_vdot_973,l_r_1422),RMul(l_vdot_973,l_r_1423),RMul(l_vdot_973,l_r_1424)));
    vec3{4} v_1432 = VAdd<3,4>(v_1222,VEC3{4}(RMul(l_vdot_974,l_r_1422),RMul(l_vdot_974,l_r_1423),RMul(l_vdot_974,l_r_1424)));
    vec3{4} v_1433 = VAdd<3,4>(v_1224,VEC3{4}(RMul(l_vdot_975,l_r_1422),RMul(l_vdot_975,l_r_1423),RMul(l_vdot_975,l_r_1424)));
    vec3{4} v_1434 = VAdd<3,4>(v_1225,VEC3{4}(RMul(l_vdot_973,l_r_1425),RMul(l_vdot_973,l_r_1426),RMul(l_vdot_973,l_r_1427)));
    vec3{4} v_1435 = VAdd<3,4>(v_1226,VEC3{4}(RMul(l_vdot_974,l_r_1425),RMul(l_vdot_974,l_r_1426),RMul(l_vdot_974,l_r_1427)));
    vec3{4} v_1436 = VAdd<3,4>(v_1227,VEC3{4}(RMul(l_vdot_975,l_r_1425),RMul(l_vdot_975,l_r_1426),RMul(l_vdot_975,l_r_1427)));
    real l_r_1437 = VIndex<3,4,0>(v_1428);
    real l_r_1438 = VIndex<3,4,0>(v_1431);
    real l_r_1439 = VIndex<3,4,0>(v_1434);
    real l_r_1440 = VIndex<3,4,0>(v_1429);
    real l_r_1441 = VIndex<3,4,0>(v_1432);
    real l_r_1442 = VIndex<3,4,0>(v_1435);
    real l_r_1443 = VIndex<3,4,0>(v_1430);
    real l_r_1444 = VIndex<3,4,0>(v_1433);
    real l_r_1445 = VIndex<3,4,0>(v_1436);
    real l_r_1446 = VIndex<3,4,1>(v_1428);
    real l_r_1447 = VIndex<3,4,1>(v_1431);
    real l_r_1448 = VIndex<3,4,1>(v_1434);
    real l_r_1449 = VIndex<3,4,1>(v_1429);
    real l_r_1450 = VIndex<3,4,1>(v_1432);
    real l_r_1451 = VIndex<3,4,1>(v_1435);
    real l_r_1452 = VIndex<3,4,1>(v_1430);
    real l_r_1453 = VIndex<3,4,1>(v_1433);
    real l_r_1454 = VIndex<3,4,1>(v_1436);
    real l_r_1455 = VIndex<3,4,2>(v_1428);
    real l_r_1456 = VIndex<3,4,2>(v_1431);
    real l_r_1457 = VIndex<3,4,2>(v_1434);
    real l_r_1458 = VIndex<3,4,2>(v_1429);
    real l_r_1459 = VIndex<3,4,2>(v_1432);
    real l_r_1460 = VIndex<3,4,2>(v_1435);
    real l_r_1461 = VIndex<3,4,2>(v_1430);
    real l_r_1462 = VIndex<3,4,2>(v_1433);
    real l_r_1463 = VIndex<3,4,2>(v_1436);
    vec3{4} v_1464 = VEC3{4}(VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1437,l_r_1034),RMul(l_r_1438,l_r_1040)),RMul(l_r_1439,l_r_1044)),RMul(l_r_1440,l_r_1048)),RMul(l_r_1441,l_r_1034)),RMul(l_r_1442,l_r_1051)),RMul(l_r_1443,l_r_1054)),RMul(l_r_1444,l_r_1057)),RMul(l_r_1445,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1437,l_r_1036),RMul(l_r_1438,l_r_1041)),RMul(l_r_1439,l_r_1046)),RMul(l_r_1440,l_r_1049)),RMul(l_r_1441,l_r_1036)),RMul(l_r_1442,l_r_1052)),RMul(l_r_1443,l_r_1055)),RMul(l_r_1444,l_r_1058)),RMul(l_r_1445,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1437,l_r_1038),RMul(l_r_1438,l_r_1042)),RMul(l_r_1439,l_r_1047)),RMul(l_r_1440,l_r_1050)),RMul(l_r_1441,l_r_1038)),RMul(l_r_1442,l_r_1053)),RMul(l_r_1443,l_r_1056)),RMul(l_r_1444,l_r_1059)),RMul(l_r_1445,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1446,l_r_1034),RMul(l_r_1447,l_r_1040)),RMul(l_r_1448,l_r_1044)),RMul(l_r_1449,l_r_1048)),RMul(l_r_1450,l_r_1034)),RMul(l_r_1451,l_r_1051)),RMul(l_r_1452,l_r_1054)),RMul(l_r_1453,l_r_1057)),RMul(l_r_1454,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1446,l_r_1036),RMul(l_r_1447,l_r_1041)),RMul(l_r_1448,l_r_1046)),RMul(l_r_1449,l_r_1049)),RMul(l_r_1450,l_r_1036)),RMul(l_r_1451,l_r_1052)),RMul(l_r_1452,l_r_1055)),RMul(l_r_1453,l_r_1058)),RMul(l_r_1454,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1446,l_r_1038),RMul(l_r_1447,l_r_1042)),RMul(l_r_1448,l_r_1047)),RMul(l_r_1449,l_r_1050)),RMul(l_r_1450,l_r_1038)),RMul(l_r_1451,l_r_1053)),RMul(l_r_1452,l_r_1056)),RMul(l_r_1453,l_r_1059)),RMul(l_r_1454,l_r_1038)))),VDot<3,4>(v_1223,VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1455,l_r_1034),RMul(l_r_1456,l_r_1040)),RMul(l_r_1457,l_r_1044)),RMul(l_r_1458,l_r_1048)),RMul(l_r_1459,l_r_1034)),RMul(l_r_1460,l_r_1051)),RMul(l_r_1461,l_r_1054)),RMul(l_r_1462,l_r_1057)),RMul(l_r_1463,l_r_1034)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1455,l_r_1036),RMul(l_r_1456,l_r_1041)),RMul(l_r_1457,l_r_1046)),RMul(l_r_1458,l_r_1049)),RMul(l_r_1459,l_r_1036)),RMul(l_r_1460,l_r_1052)),RMul(l_r_1461,l_r_1055)),RMul(l_r_1462,l_r_1058)),RMul(l_r_1463,l_r_1036)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(l_r_1455,l_r_1038),RMul(l_r_1456,l_r_1042)),RMul(l_r_1457,l_r_1047)),RMul(l_r_1458,l_r_1050)),RMul(l_r_1459,l_r_1038)),RMul(l_r_1460,l_r_1053)),RMul(l_r_1461,l_r_1056)),RMul(l_r_1462,l_r_1059)),RMul(l_r_1463,l_r_1038)))));
    vec3{4} v_1465 = VAdd<3,4>(v_1464,v_1464);
    vec3{4} v_1466 = VScale<3,4>(l_op1_e3_l_146_1212,v_1465);
    real l_r_1467 = RDiv(0.1e1,VDot<3,4>(v_1465,v_1465));
    vec3{4} v_1468 = VNeg<3,4>(VEC3{4}(RMul(l_r_1467,VIndex<3,4,0>(v_1466)),RMul(l_r_1467,VIndex<3,4,1>(v_1466)),RMul(l_r_1467,VIndex<3,4,2>(v_1466))));
    real l_op1_e3_l_690_1469 = VDot<3,4>(VNeg<3,4>(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(v_1468,v_1468))),v_1468)),LOAD_0(TensorRef<[3]>(globals.litwsp)));
    real l_op1_e3_l_699_1470 = RAdd(self.phKa,RMul(self.phKd,RMul(l_op1_e3_l_690_1469,l_op1_e3_l_690_1469)));
    vec3{4} v_1471 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.mcNear)),VScale<3,4>(RDiv(RSub(l_rayN_69,globals.camNearVsp),RSub(globals.camFarVsp,globals.camNearVsp)),VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.mcFar)),LOAD_0(TensorRef<[3]>(globals.mcNear)))));
    real l_r_1472 = RMul(RMul(self.phKs,l_scomp_1307),0.1e1);
    real l_op1_e3_l_703_1473 = RSub(0.1e1,l__t_1249);
    vec3{4} v_1474 = VAdd<3,4>(VEC3{4}(RMul(RMul(l_op1_e3_l_699_1470,VIndex<3,4,0>(v_1471)),VIndex<3,4,0>(v_1412)),RMul(RMul(l_op1_e3_l_699_1470,VIndex<3,4,1>(v_1471)),VIndex<3,4,1>(v_1412)),RMul(RMul(l_op1_e3_l_699_1470,VIndex<3,4,2>(v_1471)),VIndex<3,4,2>(v_1412))),VEC3{4}(l_r_1472,l_r_1472,l_r_1472));
    real l_r_1475 = RMul(self.transp,l_op1_e3_l_703_1473);
    vec3{4} v_1476 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_1475,VIndex<3,4,0>(v_1474)),RMul(l_r_1475,VIndex<3,4,1>(v_1474)),RMul(l_r_1475,VIndex<3,4,2>(v_1474))));
    real l_transp_1477 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_703_1473));
    vec3{4} v_1478 = v_1476;
    if (LT<real>(l_transp_1477,globals.transp0)) {
      self.rayN = l_rayN_69;
      self.rgb = PACK(v_1478);
      self.transp = 0.e0;
      stabilize;
    } else {
      l_transp_1480 = l_transp_1477;
    }
    self.rayN = l_rayN_69;
    self.rgb = PACK(v_1478);
    self.transp = l_transp_1480;
    active;
  }
  stabilize () {
    vec4 v_1483;
    if (LT<real>(self.transp,0.1e1)) {
      real l_aa_1482 = RSub(0.1e1,self.transp);
      v_1483 = VEC4(RDiv(TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(self.rgb)),l_aa_1482),RDiv(TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(self.rgb)),l_aa_1482),RDiv(TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(self.rgb)),l_aa_1482),l_aa_1482);
    } else {
      v_1483 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    self.rgba = PACK(v_1483);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_1485 = 0 to ISub(globals.iresV,1) {
      for i_ui_1486 = 0 to ISub(globals.iresU,1) {
        new ray(i_ui_1486,i_vi_1485);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -pthread -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-par-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.116   107.471
    front end .......................................................................   0.542     0.786
      parser ........................................................................   0.043     0.043
      typechecker ...................................................................   0.202     0.202
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.006     0.006
    High IR optimization ............................................................   0.033   102.600
      High IR value numbering .......................................................   0.010     0.010
      High IR normalization ......................................................... 102.557   102.557
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.766     0.766
    Mid IR optimization .............................................................   0.021     0.052
      Mid IR contraction ............................................................   0.004     0.004
      Mid IR value numbering ........................................................   0.026     0.026
      Mid IR border control .........................................................   0.001     0.001
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.359     0.359
    Low IR optimization .............................................................   0.176     0.424
      Low IR contraction ............................................................   0.109     0.109
      Low IR value numbering ........................................................   0.139     0.139
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.151     0.151
    Tree IR optimization ............................................................   0.022     0.024
      Tree IR contraction ...........................................................   0.003     0.003
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.106     2.187
      C compiler ....................................................................   2.081     2.081
